TranslationUnitDecl 0x12a055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12a0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12a055bd0 '__int128'
|-TypedefDecl 0x12a056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12a055bf0 'unsigned __int128'
|-TypedefDecl 0x12a126c30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12a126a00 'struct __NSConstantString_tag'
|   `-Record 0x12a056580 '__NSConstantString_tag'
|-TypedefDecl 0x12a126c98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12a055d90 '__SVInt8_t'
|-TypedefDecl 0x12a126d00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12a055db0 '__SVInt16_t'
|-TypedefDecl 0x12a126d68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12a055dd0 '__SVInt32_t'
|-TypedefDecl 0x12a126dd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12a055df0 '__SVInt64_t'
|-TypedefDecl 0x12a126e38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12a055e10 '__SVUint8_t'
|-TypedefDecl 0x12a126ea0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12a055e30 '__SVUint16_t'
|-TypedefDecl 0x12a126f08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12a055e50 '__SVUint32_t'
|-TypedefDecl 0x12a126f70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12a055e70 '__SVUint64_t'
|-TypedefDecl 0x12a126fd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12a055e90 '__SVFloat16_t'
|-TypedefDecl 0x12a127040 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12a055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12a1270a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12a055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12a127110 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12a055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12a127178 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12a055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12a1271e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12a055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12a127248 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12a055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12a1272b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12a055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12a127318 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12a055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12a127380 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12a055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12a1273e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12a055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12a127450 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12a055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12a1274b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12a056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12a127520 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12a056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12a127588 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12a056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12a1275f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12a056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12a127658 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12a056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12a1276c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12a0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12a127728 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12a0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12a127790 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12a0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12a1277f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12a056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12a127860 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12a056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12a1278c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12a056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12a127930 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12a056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12a127998 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12a056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12a128200 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12a0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12a128268 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12a0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12a1282d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12a0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12a128338 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12a056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12a1283a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12a056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12a128408 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12a056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12a128470 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12a056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12a1284d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12a056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12a128540 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12a0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12a1285a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12a0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12a128610 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12a0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12a128678 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12a056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12a1286e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12a056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12a128748 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12a056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12a1287b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12a056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12a128818 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12a056390 '__SVBool_t'
|-TypedefDecl 0x12a128880 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12a0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12a1288e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12a0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12a128950 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12a0563f0 '__SVCount_t'
|-TypedefDecl 0x12a1289f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12a1289b0 'char *'
|   `-BuiltinType 0x12a0556b0 'char'
|-TypedefDecl 0x12a128a68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12a1289b0 'char *'
|   `-BuiltinType 0x12a0556b0 'char'
`-FunctionDecl 0x12a142408 <dataset_diviso_filec/func3885_vuln.c:1:1, line:64:1> line:1:1 invalid handle_keywordonly_args 'int (struct compiling *, const int *, int, int *, int *)'
  |-ParmVarDecl 0x12a129048 <col:25, col:43> col:43 used c 'struct compiling *'
  |-ParmVarDecl 0x12a1290e0 <col:46, col:58> col:58 invalid n 'const int *'
  |-ParmVarDecl 0x12a129160 <col:61, col:65> col:65 used start 'int'
  |-ParmVarDecl 0x12a142218 <line:2:25, col:35> col:35 invalid kwonlyargs 'int *'
  |-ParmVarDecl 0x12a142298 <col:47, col:57> col:57 invalid kwdefaults 'int *'
  `-CompoundStmt 0x12a144400 <line:3:1, line:64:1>
    |-DeclStmt 0x12a1425c0 <line:8:5, col:18>
    | `-VarDecl 0x12a142520 <col:5, col:13> col:9 used i 'int' cinit
    |   `-ImplicitCastExpr 0x12a1425a8 <col:13> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x12a142588 <col:13> 'int' lvalue ParmVar 0x12a129160 'start' 'int'
    |-DeclStmt 0x12a142678 <line:9:5, col:14>
    | `-VarDecl 0x12a1425f0 <col:5, col:13> col:9 used j 'int' cinit
    |   `-IntegerLiteral 0x12a142658 <col:13> 'int' 0
    |-IfStmt 0x12a142b30 <line:11:5, line:14:5>
    | |-BinaryOperator 0x12a142708 <line:11:9, col:23> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x12a142690 <col:9> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x12a1426e8 <col:23> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x12a142b10 <col:29, line:14:5>
    |   |-CallExpr 0x12a142a90 <line:12:9, col:44> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x12a142880 <col:9> 'int ()' Function 0x12a1427c8 'ast_error' 'int ()'
    |   | |-DeclRefExpr 0x12a1428a0 <col:19> 'struct compiling *' lvalue ParmVar 0x12a129048 'c' 'struct compiling *'
    |   | |-CallExpr 0x12a142a00 <col:22, col:36> '<dependent type>' contains-errors
    |   | | |-DeclRefExpr 0x12a1429a0 <col:22> 'int ()' Function 0x12a1428e8 'CHILD' 'int ()'
    |   | | |-RecoveryExpr 0x12a1429c0 <col:28> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x12a1429e0 <col:31> 'int' lvalue ParmVar 0x12a129160 'start' 'int'
    |   | `-StringLiteral 0x12a142a70 <col:39> 'char[4]' lvalue "STR"
    |   `-ReturnStmt 0x12a142b00 <line:13:9, col:17>
    |     `-UnaryOperator 0x12a142ae8 <col:16, col:17> 'int' prefix '-'
    |       `-IntegerLiteral 0x12a142ac8 <col:17> 'int' 1
    |-CallExpr 0x12a142d10 <line:15:5, col:30> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12a142c30 <col:5> 'int ()' Function 0x12a142b78 'assert' 'int ()'
    | `-BinaryOperator 0x12a142cf0 <col:12, col:26> 'int' contains-errors '!='
    |   |-RecoveryExpr 0x12a142c50 <col:12> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x12a142cd0 <col:26> '<dependent type>' contains-errors lvalue
    |-WhileStmt 0x12a144330 <line:16:5, line:60:5>
    | |-BinaryOperator 0x12a142ea0 <line:16:12, col:21> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x12a142d38 <col:12> 'int' lvalue Var 0x12a142520 'i' 'int'
    | | `-CallExpr 0x12a142e78 <col:16, col:21> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x12a142e38 <col:16> 'int ()' Function 0x12a142d80 'NCH' 'int ()'
    | |   `-RecoveryExpr 0x12a142e58 <col:20> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x12a144318 <col:24, line:60:5>
    |   `-SwitchStmt 0x12a1430d8 <line:18:9, line:59:9>
    |     |-CallExpr 0x12a1430b0 <line:18:17, col:24> '<dependent type>' contains-errors
    |     | |-DeclRefExpr 0x12a143030 <col:17> 'int ()' Function 0x12a142f78 'TYPE' 'int ()'
    |     | `-RecoveryExpr 0x12a143090 <col:22> '<dependent type>' contains-errors lvalue
    |     `-CompoundStmt 0x12a1442b0 <col:27, line:59:9>
    |       |-IfStmt 0x12a143870 <line:21:17, line:30:17> has_else
    |       | |-RecoveryExpr 0x12a143330 <line:21:21, col:64> '_Bool' contains-errors
    |       | |-CompoundStmt 0x12a1437e0 <col:71, line:27:17>
    |       | | |-IfStmt 0x12a143610 <line:23:21, line:24:30>
    |       | | | |-RecoveryExpr 0x12a143588 <line:23:25, col:26> '_Bool' contains-errors
    |       | | | `-GotoStmt 0x12a1435f8 <line:24:25, col:30> 'error' 0x12a1435a8
    |       | | `-CompoundAssignOperator 0x12a1437b0 <line:26:21, col:26> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |       | |   |-DeclRefExpr 0x12a143770 <col:21> 'int' lvalue Var 0x12a142520 'i' 'int'
    |       | |   `-IntegerLiteral 0x12a143790 <col:26> 'int' 2
    |       | `-CompoundStmt 0x12a143860 <line:28:22, line:30:17>
    |       |-IfStmt 0x12a143a00 <line:31:17, line:39:17> has_else
    |       | |-RecoveryExpr 0x12a1438e0 <line:31:21, col:32> '_Bool' contains-errors
    |       | |-CompoundStmt 0x12a1439d8 <col:35, line:36:17>
    |       | | `-IfStmt 0x12a1439b8 <line:34:21, line:35:30>
    |       | |   |-RecoveryExpr 0x12a143980 <line:34:25, col:26> '_Bool' contains-errors
    |       | |   `-GotoStmt 0x12a1439a0 <line:35:25, col:30> 'error' 0x12a1435a8
    |       | `-CompoundStmt 0x12a1439f0 <line:37:22, line:39:17>
    |       |-IfStmt 0x12a143ba8 <line:42:17, line:43:26>
    |       | |-RecoveryExpr 0x12a143b70 <line:42:21, col:22> '_Bool' contains-errors
    |       | `-GotoStmt 0x12a143b90 <line:43:21, col:26> 'error' 0x12a1435a8
    |       |-IfStmt 0x12a143d40 <line:44:17, line:45:26>
    |       | |-RecoveryExpr 0x12a143d08 <line:44:21, col:53> '_Bool' contains-errors
    |       | `-GotoStmt 0x12a143d28 <line:45:21, col:26> 'error' 0x12a1435a8
    |       |-IfStmt 0x12a144058 <line:49:17, line:50:26>
    |       | |-UnaryOperator 0x12a144028 <line:49:21, col:22> 'int' prefix '!' cannot overflow
    |       | | `-ImplicitCastExpr 0x12a144010 <col:22> 'int (*)()' <FunctionToPointerDecay>
    |       | |   `-DeclRefExpr 0x12a143fc0 <col:22> 'int ()' Function 0x12a143d88 'arg' 'int ()'
    |       | `-GotoStmt 0x12a144040 <line:50:21, col:26> 'error' 0x12a1435a8
    |       |-CallExpr 0x12a144110 <line:51:17, col:50> '<dependent type>' contains-errors
    |       | |-DeclRefExpr 0x12a144078 <col:17> 'int ()' Function 0x12a143658 'asdl_seq_SET' 'int ()'
    |       | |-RecoveryExpr 0x12a144098 <col:30> '<dependent type>' contains-errors lvalue
    |       | |-UnaryOperator 0x12a1440d8 <col:42, col:43> 'int' postfix '++'
    |       | | `-DeclRefExpr 0x12a1440b8 <col:42> 'int' lvalue Var 0x12a1425f0 'j' 'int'
    |       | `-DeclRefExpr 0x12a1440f0 <col:47> 'int ()' Function 0x12a143d88 'arg' 'int ()'
    |       |-CompoundAssignOperator 0x12a144188 <line:52:17, col:22> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |       | |-DeclRefExpr 0x12a144148 <col:17> 'int' lvalue Var 0x12a142520 'i' 'int'
    |       | `-IntegerLiteral 0x12a144168 <col:22> 'int' 2
    |       |-BreakStmt 0x12a1441b8 <line:53:17>
    |       |-ReturnStmt 0x12a144200 <line:55:17, col:24>
    |       | `-ImplicitCastExpr 0x12a1441e0 <col:24> 'int' <LValueToRValue>
    |       |   `-DeclRefExpr 0x12a1441c0 <col:24> 'int' lvalue Var 0x12a142520 'i' 'int'
    |       |-DefaultStmt 0x12a144278 <line:56:13, col:20>
    |       | `-NullStmt 0x12a144270 <col:20>
    |       `-GotoStmt 0x12a144298 <line:58:17, col:22> 'error' 0x12a1435a8
    |-ReturnStmt 0x12a144388 <line:61:5, col:12>
    | `-ImplicitCastExpr 0x12a144370 <col:12> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x12a144350 <col:12> 'int' lvalue Var 0x12a142520 'i' 'int'
    `-LabelStmt 0x12a1443e0 <line:62:2, line:63:13> 'error'
      `-ReturnStmt 0x12a1443d0 <col:5, col:13>
        `-UnaryOperator 0x12a1443b8 <col:12, col:13> 'int' prefix '-'
          `-IntegerLiteral 0x12a144398 <col:13> 'int' 1
