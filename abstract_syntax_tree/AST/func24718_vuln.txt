TranslationUnitDecl 0x133055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1330564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x133055bd0 '__int128'
|-TypedefDecl 0x133056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x133055bf0 'unsigned __int128'
|-TypedefDecl 0x13380be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13380bc00 'struct __NSConstantString_tag'
|   `-Record 0x133056580 '__NSConstantString_tag'
|-TypedefDecl 0x13380be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x133055d90 '__SVInt8_t'
|-TypedefDecl 0x13380bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x133055db0 '__SVInt16_t'
|-TypedefDecl 0x13380bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x133055dd0 '__SVInt32_t'
|-TypedefDecl 0x13380bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x133055df0 '__SVInt64_t'
|-TypedefDecl 0x13380c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x133055e10 '__SVUint8_t'
|-TypedefDecl 0x13380c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x133055e30 '__SVUint16_t'
|-TypedefDecl 0x13380c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x133055e50 '__SVUint32_t'
|-TypedefDecl 0x13380c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x133055e70 '__SVUint64_t'
|-TypedefDecl 0x13380c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x133055e90 '__SVFloat16_t'
|-TypedefDecl 0x13380c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x133055eb0 '__SVFloat32_t'
|-TypedefDecl 0x13380c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x133055ed0 '__SVFloat64_t'
|-TypedefDecl 0x13380c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x133055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13380c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x133055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13380c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x133055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13380c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x133055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13380c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x133055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13380c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x133055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13380c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x133055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13380c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x133055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13380c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x133055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13380c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x133056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13380c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x133056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13380c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x133056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13380c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x133056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13380c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x133056090 '__clang_svint8x3_t'
|-TypedefDecl 0x13380c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1330560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13380c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1330560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13380c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1330560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13380c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x133056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13380ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x133056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13380cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x133056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13380cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x133056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13380cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x133056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13380d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1330561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13380d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1330561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13380d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1330561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13380d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x133056210 '__clang_svint8x4_t'
|-TypedefDecl 0x13380d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x133056230 '__clang_svint16x4_t'
|-TypedefDecl 0x13380d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x133056250 '__clang_svint32x4_t'
|-TypedefDecl 0x13380d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x133056270 '__clang_svint64x4_t'
|-TypedefDecl 0x13380d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x133056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13380d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1330562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13380d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1330562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13380d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1330562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13380d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x133056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13380d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x133056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13380d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x133056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13380d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x133056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13380da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x133056390 '__SVBool_t'
|-TypedefDecl 0x13380da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1330563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13380dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1330563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13380db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1330563f0 '__SVCount_t'
|-TypedefDecl 0x13380dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13380dbb0 'char *'
|   `-BuiltinType 0x1330556b0 'char'
|-TypedefDecl 0x13380dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13380dbb0 'char *'
|   `-BuiltinType 0x1330556b0 'char'
|-FunctionDecl 0x133826600 <dataset_diviso_filec/func24718_vuln.c:1:1, line:36:1> line:1:1 find_by_thp 'int (struct tang_keys_info *, const char *)'
| |-ParmVarDecl 0x13380e248 <col:13, col:36> col:36 used tki 'struct tang_keys_info *'
| |-ParmVarDecl 0x13380e2c8 <col:41, col:53> col:53 used target 'const char *'
| `-CompoundStmt 0x13480a708 <line:2:1, line:36:1>
|   |-IfStmt 0x1338267c8 <line:3:5, line:5:5>
|   | |-UnaryOperator 0x133826738 <line:3:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x133826720 <col:10> 'struct tang_keys_info *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x133826700 <col:10> 'struct tang_keys_info *' lvalue ParmVar 0x13380e248 'tki' 'struct tang_keys_info *'
|   | `-CompoundStmt 0x1338267b0 <col:15, line:5:5>
|   |   `-ReturnStmt 0x1338267a0 <line:4:9, col:16>
|   |     `-RecoveryExpr 0x133826780 <col:16> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x133826b80 <line:8:5, col:48> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x133826a98 <col:5> 'int ()' Function 0x1338269e0 'json_array_extend' 'int ()'
|   | |-RecoveryExpr 0x133826b60 <col:23> '<dependent type>' contains-errors lvalue
|   | `-RecoveryExpr 0x133826b08 <col:29, col:34> '<dependent type>' contains-errors lvalue
|   |   `-DeclRefExpr 0x133826ad0 <col:29> 'struct tang_keys_info *' lvalue ParmVar 0x13380e248 'tki' 'struct tang_keys_info *'
|   |-UnaryExprOrTypeTraitExpr 0x133826c08 <line:10:5, col:12> 'unsigned long' contains-errors sizeof
|   | `-RecoveryExpr 0x133826be8 <col:12> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x133826e70 <line:12:5, col:45>
|   | `-VarDecl 0x133826c88 <col:5, col:44> col:18 used hashes 'const char **' cinit
|   |   `-ImplicitCastExpr 0x133826e58 <col:27, col:44> 'const char **' <IntegralToPointer>
|   |     `-CallExpr 0x133826e38 <col:27, col:44> 'int'
|   |       `-ImplicitCastExpr 0x133826e20 <col:27> 'int (*)()' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x133826dd0 <col:27> 'int ()' Function 0x133826d18 'supported_hashes' 'int ()'
|   |-CallExpr 0x133827068 <line:13:5, col:38> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x133826f68 <col:5> 'int ()' Function 0x133826eb0 'json_array_foreach' 'int ()'
|   | |-RecoveryExpr 0x133827008 <col:24> '<dependent type>' contains-errors lvalue
|   | |-RecoveryExpr 0x133827028 <col:30> '<dependent type>' contains-errors lvalue
|   | `-RecoveryExpr 0x133827048 <col:35> '<dependent type>' contains-errors lvalue
|   `-CompoundStmt 0x13480a6f0 <col:40, line:34:5>
|     `-ForStmt 0x13480a6b8 <line:14:9, line:33:9>
|       |-DeclStmt 0x133827140 <line:14:14, col:23>
|       | `-VarDecl 0x1338270b8 <col:14, col:22> col:18 used i 'int' cinit
|       |   `-IntegerLiteral 0x133827120 <col:22> 'int' 0
|       |-<<<NULL>>>
|       |-ImplicitCastExpr 0x1338271e8 <col:25, col:33> 'const char *' <LValueToRValue>
|       | `-ArraySubscriptExpr 0x1338271c8 <col:25, col:33> 'const char *' lvalue
|       |   |-ImplicitCastExpr 0x133827198 <col:25> 'const char **' <LValueToRValue>
|       |   | `-DeclRefExpr 0x133827158 <col:25> 'const char **' lvalue Var 0x133826c88 'hashes' 'const char **'
|       |   `-ImplicitCastExpr 0x1338271b0 <col:32> 'int' <LValueToRValue>
|       |     `-DeclRefExpr 0x133827178 <col:32> 'int' lvalue Var 0x1338270b8 'i' 'int'
|       |-UnaryOperator 0x133827220 <col:36, col:37> 'int' postfix '++'
|       | `-DeclRefExpr 0x133827200 <col:36> 'int' lvalue Var 0x1338270b8 'i' 'int'
|       `-CompoundStmt 0x13480a690 <col:41, line:33:9>
|         |-DeclStmt 0x133827448 <line:15:13, col:105>
|         | `-VarDecl 0x133827250 <col:13, col:62> col:62 used thumbprint 'char *'
|         |-IfStmt 0x134809eb0 <line:16:13, line:18:13>
|         | |-BinaryOperator 0x134809e70 <line:16:17, col:62> 'int' '||'
|         | | |-UnaryOperator 0x133827498 <col:17, col:18> 'int' prefix '!' cannot overflow
|         | | | `-ImplicitCastExpr 0x133827480 <col:18> 'char *' <LValueToRValue>
|         | | |   `-DeclRefExpr 0x133827460 <col:18> 'char *' lvalue Var 0x133827250 'thumbprint' 'char *'
|         | | `-BinaryOperator 0x134809e50 <col:32, col:62> 'int' '!='
|         | |   |-CallExpr 0x134809db8 <col:32, col:57> 'int'
|         | |   | |-ImplicitCastExpr 0x134809da0 <col:32> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|         | |   | | `-DeclRefExpr 0x134809ce0 <col:32> 'int (const char *, const char *)' Function 0x1338274f0 'strcmp' 'int (const char *, const char *)'
|         | |   | |-ImplicitCastExpr 0x134809e00 <col:39> 'const char *' <NoOp>
|         | |   | | `-ImplicitCastExpr 0x134809de8 <col:39> 'char *' <LValueToRValue>
|         | |   | |   `-DeclRefExpr 0x134809d00 <col:39> 'char *' lvalue Var 0x133827250 'thumbprint' 'char *'
|         | |   | `-ImplicitCastExpr 0x134809e18 <col:51> 'const char *' <LValueToRValue>
|         | |   |   `-DeclRefExpr 0x134809d20 <col:51> 'const char *' lvalue ParmVar 0x13380e2c8 'target' 'const char *'
|         | |   `-IntegerLiteral 0x134809e30 <col:62> 'int' 0
|         | `-CompoundStmt 0x134809e98 <col:65, line:18:13>
|         |   `-ContinueStmt 0x134809e90 <line:17:17>
|         `-IfStmt 0x13480a660 <line:20:13, line:32:13> has_else
|           |-RecoveryExpr 0x134809fd0 <line:20:17, col:48> '_Bool' contains-errors
|           |-CompoundStmt 0x13480a0f0 <col:51, line:22:13>
|           `-IfStmt 0x13480a640 <col:20, line:32:13>
|             |-RecoveryExpr 0x13480a200 <line:22:24, col:49> '_Bool' contains-errors
|             `-CompoundStmt 0x13480a620 <col:52, line:32:13>
|               |-IfStmt 0x13480a430 <line:24:17, line:26:17>
|               | |-RecoveryExpr 0x13480a400 <line:24:21, col:54> '_Bool' contains-errors
|               | `-CompoundStmt 0x13480a420 <col:57, line:26:17>
|               `-IfStmt 0x13480a5e0 <line:28:17, line:30:17>
|                 |-RecoveryExpr 0x13480a5b0 <line:28:21, col:22> '_Bool' contains-errors
|                 `-CompoundStmt 0x13480a5d0 <col:27, line:30:17>
`-FunctionDecl 0x1338274f0 <line:16:32> col:32 implicit used strcmp 'int (const char *, const char *)' extern
  |-ParmVarDecl 0x134809c00 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x134809c68 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x133827598 <<invalid sloc>> Implicit 887
