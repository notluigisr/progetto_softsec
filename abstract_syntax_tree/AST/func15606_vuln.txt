TranslationUnitDecl 0x13d055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13d0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13d055bd0 '__int128'
|-TypedefDecl 0x13d056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13d055bf0 'unsigned __int128'
|-TypedefDecl 0x13d80be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13d80bc00 'struct __NSConstantString_tag'
|   `-Record 0x13d056580 '__NSConstantString_tag'
|-TypedefDecl 0x13d80be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13d055d90 '__SVInt8_t'
|-TypedefDecl 0x13d80bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13d055db0 '__SVInt16_t'
|-TypedefDecl 0x13d80bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13d055dd0 '__SVInt32_t'
|-TypedefDecl 0x13d80bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13d055df0 '__SVInt64_t'
|-TypedefDecl 0x13d80c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13d055e10 '__SVUint8_t'
|-TypedefDecl 0x13d80c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13d055e30 '__SVUint16_t'
|-TypedefDecl 0x13d80c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13d055e50 '__SVUint32_t'
|-TypedefDecl 0x13d80c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13d055e70 '__SVUint64_t'
|-TypedefDecl 0x13d80c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13d055e90 '__SVFloat16_t'
|-TypedefDecl 0x13d80c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13d055eb0 '__SVFloat32_t'
|-TypedefDecl 0x13d80c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13d055ed0 '__SVFloat64_t'
|-TypedefDecl 0x13d80c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13d055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13d80c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13d055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13d80c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13d055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13d80c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13d055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13d80c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13d055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13d80c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13d055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13d80c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13d055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13d80c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13d055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13d80c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13d055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13d80c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13d056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13d80c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13d056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13d80c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13d056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13d80c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13d056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13d80c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13d056090 '__clang_svint8x3_t'
|-TypedefDecl 0x13d80c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13d0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13d80c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13d0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13d80c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13d0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13d80c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13d056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13d80ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13d056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13d80cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13d056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13d80cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13d056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13d80cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13d056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13d80d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13d0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13d80d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13d0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13d80d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13d0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13d80d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13d056210 '__clang_svint8x4_t'
|-TypedefDecl 0x13d80d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13d056230 '__clang_svint16x4_t'
|-TypedefDecl 0x13d80d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13d056250 '__clang_svint32x4_t'
|-TypedefDecl 0x13d80d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13d056270 '__clang_svint64x4_t'
|-TypedefDecl 0x13d80d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13d056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13d80d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13d0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13d80d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13d0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13d80d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13d0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13d80d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13d056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13d80d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13d056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13d80d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13d056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13d80d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13d056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13d80da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13d056390 '__SVBool_t'
|-TypedefDecl 0x13d80da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13d0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13d80dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13d0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13d80db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13d0563f0 '__SVCount_t'
|-TypedefDecl 0x13d80dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13d80dbb0 'char *'
|   `-BuiltinType 0x13d0556b0 'char'
|-TypedefDecl 0x13d80dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13d80dbb0 'char *'
|   `-BuiltinType 0x13d0556b0 'char'
|-FunctionDecl 0x13d80e008 <dataset_diviso_filec/func15606_vuln.c:1:1, line:47:1> line:1:12 invalid oidc_cache_crypto_encrypt 'int (int *, const char *, unsigned char *, char **)' static
| |-ParmVarDecl 0x13d80dd28 <col:38, col:51> col:51 invalid r 'int *'
| |-ParmVarDecl 0x13d80dda8 <col:54, col:66> col:66 used plaintext 'const char *'
| |-ParmVarDecl 0x13d80de58 <line:2:3, col:18> col:18 used key 'unsigned char *'
| |-ParmVarDecl 0x13d80df08 <col:23, col:30> col:30 used result 'char **'
| `-CompoundStmt 0x13e80b6a8 <col:38, line:47:1>
|   |-DeclStmt 0x13d80e318 <line:3:2, col:48>
|   | |-VarDecl 0x13d80e0e8 <col:2, col:18> col:8 used encoded 'char *' cinit
|   | | `-RecoveryExpr 0x13d80e168 <col:18> '<dependent type>' contains-errors lvalue
|   | |-VarDecl 0x13d80e1a0 <col:2, col:29> col:25 used p 'char *' cinit
|   | | `-RecoveryExpr 0x13d80e220 <col:29> '<dependent type>' contains-errors lvalue
|   | `-VarDecl 0x13d80e258 <col:2, col:44> col:36 used e_tag 'char *' cinit
|   |   `-RecoveryExpr 0x13d80e2d8 <col:44> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x13d80e3e8 <line:4:2, col:34>
|   | `-VarDecl 0x13d80e348 <col:2, col:30> col:17 used ciphertext 'unsigned char *' cinit
|   |   `-RecoveryExpr 0x13d80e3c8 <col:30> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x13d827628 <line:5:2, col:59>
|   | |-VarDecl 0x13d827418 <col:2, col:6> col:6 used plaintext_len 'int'
|   | |-VarDecl 0x13d827498 <col:2, col:21> col:21 used ciphertext_len 'int'
|   | |-VarDecl 0x13d827518 <col:2, col:37> col:37 used encoded_len 'int'
|   | `-VarDecl 0x13d827598 <col:2, col:50> col:50 used e_tag_len 'int'
|   |-DeclStmt 0x13d8276d8 <line:6:2, col:39>
|   | `-VarDecl 0x13d827670 <col:2, col:16> col:16 invalid tag 'unsigned char'
|   |-BinaryOperator 0x13d827e38 <line:9:2, col:38> 'int' '='
|   | |-DeclRefExpr 0x13d8276f0 <col:2> 'int' lvalue Var 0x13d827418 'plaintext_len' 'int'
|   | `-ImplicitCastExpr 0x13d827e20 <col:18, col:38> 'int' <IntegralCast>
|   |   `-BinaryOperator 0x13d827e00 <col:18, col:38> 'unsigned long' '+'
|   |     |-CallExpr 0x13d827d88 <col:18, col:34> 'unsigned long'
|   |     | |-ImplicitCastExpr 0x13d827d70 <col:18> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |     | | `-DeclRefExpr 0x13d827ce0 <col:18> 'unsigned long (const char *)' Function 0x13d827b70 'strlen' 'unsigned long (const char *)'
|   |     | `-ImplicitCastExpr 0x13d827db0 <col:25> 'const char *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x13d827d00 <col:25> 'const char *' lvalue ParmVar 0x13d80dda8 'plaintext' 'const char *'
|   |     `-ImplicitCastExpr 0x13d827de8 <col:38> 'unsigned long' <IntegralCast>
|   |       `-IntegerLiteral 0x13d827dc8 <col:38> 'int' 1
|   |-BinaryOperator 0x13e80a548 <line:20:2, line:21:21> 'int' contains-errors '='
|   | |-DeclRefExpr 0x13e80a2d0 <line:20:2> 'int' lvalue Var 0x13d827518 'encoded_len' 'int'
|   | `-CallExpr 0x13e80a500 <col:16, line:21:21> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x13e80a3d0 <line:20:16> 'int ()' Function 0x13e80a318 'oidc_base64url_encode' 'int ()'
|   |   |-RecoveryExpr 0x13e80a3f0 <col:38> '<dependent type>' contains-errors lvalue
|   |   |-UnaryOperator 0x13e80a430 <col:41, col:42> 'char **' contains-errors prefix '&' cannot overflow
|   |   | `-DeclRefExpr 0x13e80a410 <col:42> 'char *' contains-errors lvalue Var 0x13d80e0e8 'encoded' 'char *'
|   |   |-CStyleCastExpr 0x13e80a498 <col:51, col:66> 'const char *' contains-errors <BitCast>
|   |   | `-ImplicitCastExpr 0x13e80a480 <col:66> 'unsigned char *' contains-errors <LValueToRValue> part_of_explicit_cast
|   |   |   `-DeclRefExpr 0x13e80a448 <col:66> 'unsigned char *' contains-errors lvalue Var 0x13d80e348 'ciphertext' 'unsigned char *'
|   |   |-DeclRefExpr 0x13e80a4c0 <line:21:4> 'int' lvalue Var 0x13d827498 'ciphertext_len' 'int'
|   |   `-IntegerLiteral 0x13e80a4e0 <col:20> 'int' 1
|   |-IfStmt 0x13e80b640 <line:22:2, line:44:2>
|   | |-BinaryOperator 0x13e80a5c0 <line:22:6, col:20> 'int' '>'
|   | | |-ImplicitCastExpr 0x13e80a5a8 <col:6> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13e80a568 <col:6> 'int' lvalue Var 0x13d827518 'encoded_len' 'int'
|   | | `-IntegerLiteral 0x13e80a588 <col:20> 'int' 0
|   | `-CompoundStmt 0x13e80b5d8 <col:23, line:44:2>
|   |   |-BinaryOperator 0x13e80a638 <line:23:3, col:7> 'char *' contains-errors '='
|   |   | |-DeclRefExpr 0x13e80a5e0 <col:3> 'char *' contains-errors lvalue Var 0x13d80e1a0 'p' 'char *'
|   |   | `-ImplicitCastExpr 0x13e80a620 <col:7> 'char *' contains-errors <LValueToRValue>
|   |   |   `-DeclRefExpr 0x13e80a600 <col:7> 'char *' contains-errors lvalue Var 0x13d80e0e8 'encoded' 'char *'
|   |   |-BinaryOperator 0x13e80a8d8 <line:26:3, line:27:26> 'int' contains-errors '='
|   |   | |-DeclRefExpr 0x13e80a658 <line:26:3> 'int' lvalue Var 0x13d827598 'e_tag_len' 'int'
|   |   | `-CallExpr 0x13e80a890 <col:15, line:27:26> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x13e80a678 <line:26:15> 'int ()' Function 0x13e80a318 'oidc_base64url_encode' 'int ()'
|   |   |   |-RecoveryExpr 0x13e80a698 <col:37> '<dependent type>' contains-errors lvalue
|   |   |   |-UnaryOperator 0x13e80a6d8 <col:40, col:41> 'char **' contains-errors prefix '&' cannot overflow
|   |   |   | `-DeclRefExpr 0x13e80a6b8 <col:41> 'char *' contains-errors lvalue Var 0x13d80e258 'e_tag' 'char *'
|   |   |   |-CStyleCastExpr 0x13e80a848 <col:48, col:63> 'const char *' contains-errors <Dependent>
|   |   |   | `-RecoveryExpr 0x13e80a6f0 <col:63> '<dependent type>' contains-errors lvalue
|   |   |   |-RecoveryExpr 0x13e80a870 <line:27:5> '<dependent type>' contains-errors lvalue
|   |   |   `-IntegerLiteral 0x13e80a768 <col:25> 'int' 1
|   |   |-BinaryOperator 0x13e80aae0 <line:30:3, col:65> 'char *' contains-errors '='
|   |   | |-DeclRefExpr 0x13e80a8f8 <col:3> 'char *' contains-errors lvalue Var 0x13d80e0e8 'encoded' 'char *'
|   |   | `-CallExpr 0x13e80aab0 <col:13, col:65> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x13e80a918 <col:13> 'int ()' Function 0x13d827f18 'apr_pcalloc' 'int ()'
|   |   |   |-CXXDependentScopeMemberExpr 0x13e80a958 <col:25, col:28> '<dependent type>' contains-errors lvalue ->pool
|   |   |   | `-RecoveryExpr 0x13e80a938 <col:25> '<dependent type>' contains-errors lvalue
|   |   |   `-BinaryOperator 0x13e80aa90 <col:34, col:64> 'int' '+'
|   |   |     |-BinaryOperator 0x13e80aa50 <col:34, col:52> 'int' '+'
|   |   |     | |-BinaryOperator 0x13e80a9f8 <col:34, col:48> 'int' '+'
|   |   |     | | |-ImplicitCastExpr 0x13e80a9e0 <col:34> 'int' <LValueToRValue>
|   |   |     | | | `-DeclRefExpr 0x13e80a9a0 <col:34> 'int' lvalue Var 0x13d827518 'encoded_len' 'int'
|   |   |     | | `-IntegerLiteral 0x13e80a9c0 <col:48> 'int' 1
|   |   |     | `-ImplicitCastExpr 0x13e80aa38 <col:52> 'int' <LValueToRValue>
|   |   |     |   `-DeclRefExpr 0x13e80aa18 <col:52> 'int' lvalue Var 0x13d827598 'e_tag_len' 'int'
|   |   |     `-IntegerLiteral 0x13e80aa70 <col:64> 'int' 1
|   |   |-CallExpr 0x13e80aed8 <line:31:3, col:33> 'void *' contains-errors
|   |   | |-ImplicitCastExpr 0x13e80aec0 <col:3> 'void *(*)(void *, const void *, unsigned long)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x13e80adc8 <col:3> 'void *(void *, const void *, unsigned long)' Function 0x13e80ab78 'memcpy' 'void *(void *, const void *, unsigned long)'
|   |   | |-ImplicitCastExpr 0x13e80af28 <col:10> 'void *' contains-errors <BitCast>
|   |   | | `-ImplicitCastExpr 0x13e80af10 <col:10> 'char *' contains-errors <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x13e80ade8 <col:10> 'char *' contains-errors lvalue Var 0x13d80e0e8 'encoded' 'char *'
|   |   | |-ImplicitCastExpr 0x13e80af58 <col:19> 'const void *' contains-errors <BitCast>
|   |   | | `-ImplicitCastExpr 0x13e80af40 <col:19> 'char *' contains-errors <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x13e80ae08 <col:19> 'char *' contains-errors lvalue Var 0x13d80e1a0 'p' 'char *'
|   |   | `-ImplicitCastExpr 0x13e80af88 <col:22> 'unsigned long' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x13e80af70 <col:22> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x13e80ae28 <col:22> 'int' lvalue Var 0x13d827518 'encoded_len' 'int'
|   |   |-BinaryOperator 0x13e80b050 <line:32:3, col:17> 'char *' contains-errors '='
|   |   | |-DeclRefExpr 0x13e80afa0 <col:3> 'char *' contains-errors lvalue Var 0x13d80e1a0 'p' 'char *'
|   |   | `-BinaryOperator 0x13e80b030 <col:7, col:17> 'char *' contains-errors '+'
|   |   |   |-ImplicitCastExpr 0x13e80b000 <col:7> 'char *' contains-errors <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x13e80afc0 <col:7> 'char *' contains-errors lvalue Var 0x13d80e0e8 'encoded' 'char *'
|   |   |   `-ImplicitCastExpr 0x13e80b018 <col:17> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x13e80afe0 <col:17> 'int' lvalue Var 0x13d827518 'encoded_len' 'int'
|   |   |-BinaryOperator 0x13e80b178 <line:33:3, col:8> 'char' contains-errors '='
|   |   | |-UnaryOperator 0x13e80b140 <col:3, col:4> 'char' contains-errors lvalue prefix '*' cannot overflow
|   |   | | `-ImplicitCastExpr 0x13e80b128 <col:4> 'char *' contains-errors <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x13e80b070 <col:4> 'char *' contains-errors lvalue Var 0x13d80e1a0 'p' 'char *'
|   |   | `-RecoveryExpr 0x13e80b158 <col:8> '<dependent type>' contains-errors lvalue
|   |   |-UnaryOperator 0x13e80b1b8 <line:34:3, col:4> 'char *' contains-errors postfix '++'
|   |   | `-DeclRefExpr 0x13e80b198 <col:3> 'char *' contains-errors lvalue Var 0x13d80e1a0 'p' 'char *'
|   |   |-CallExpr 0x13e80b2c0 <line:37:3, col:29> 'void *' contains-errors
|   |   | |-ImplicitCastExpr 0x13e80b2a8 <col:3> 'void *(*)(void *, const void *, unsigned long)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x13e80b1d0 <col:3> 'void *(void *, const void *, unsigned long)' Function 0x13e80ab78 'memcpy' 'void *(void *, const void *, unsigned long)'
|   |   | |-ImplicitCastExpr 0x13e80b310 <col:10> 'void *' contains-errors <BitCast>
|   |   | | `-ImplicitCastExpr 0x13e80b2f8 <col:10> 'char *' contains-errors <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x13e80b200 <col:10> 'char *' contains-errors lvalue Var 0x13d80e1a0 'p' 'char *'
|   |   | |-ImplicitCastExpr 0x13e80b340 <col:13> 'const void *' contains-errors <BitCast>
|   |   | | `-ImplicitCastExpr 0x13e80b328 <col:13> 'char *' contains-errors <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x13e80b220 <col:13> 'char *' contains-errors lvalue Var 0x13d80e258 'e_tag' 'char *'
|   |   | `-ImplicitCastExpr 0x13e80b370 <col:20> 'unsigned long' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x13e80b358 <col:20> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x13e80b240 <col:20> 'int' lvalue Var 0x13d827598 'e_tag_len' 'int'
|   |   |-CompoundAssignOperator 0x13e80b420 <line:38:3, col:30> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-DeclRefExpr 0x13e80b388 <col:3> 'int' lvalue Var 0x13d827518 'encoded_len' 'int'
|   |   | `-BinaryOperator 0x13e80b400 <col:18, col:30> 'int' '+'
|   |   |   |-ImplicitCastExpr 0x13e80b3e8 <col:18> 'int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x13e80b3a8 <col:18> 'int' lvalue Var 0x13d827598 'e_tag_len' 'int'
|   |   |   `-IntegerLiteral 0x13e80b3c8 <col:30> 'int' 1
|   |   |-BinaryOperator 0x13e80b510 <line:41:3, col:26> 'char' contains-errors '='
|   |   | |-ArraySubscriptExpr 0x13e80b4c0 <col:3, col:22> 'char' contains-errors lvalue
|   |   | | |-ImplicitCastExpr 0x13e80b490 <col:3> 'char *' contains-errors <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x13e80b450 <col:3> 'char *' contains-errors lvalue Var 0x13d80e0e8 'encoded' 'char *'
|   |   | | `-ImplicitCastExpr 0x13e80b4a8 <col:11> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x13e80b470 <col:11> 'int' lvalue Var 0x13d827518 'encoded_len' 'int'
|   |   | `-ImplicitCastExpr 0x13e80b4f8 <col:26> 'char' <IntegralCast>
|   |   |   `-CharacterLiteral 0x13e80b4e0 <col:26> 'int' 0
|   |   `-BinaryOperator 0x13e80b5b8 <line:43:3, col:13> 'char *' contains-errors '='
|   |     |-UnaryOperator 0x13e80b568 <col:3, col:4> 'char *' lvalue prefix '*' cannot overflow
|   |     | `-ImplicitCastExpr 0x13e80b550 <col:4> 'char **' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x13e80b530 <col:4> 'char **' lvalue ParmVar 0x13d80df08 'result' 'char **'
|   |     `-ImplicitCastExpr 0x13e80b5a0 <col:13> 'char *' contains-errors <LValueToRValue>
|   |       `-DeclRefExpr 0x13e80b580 <col:13> 'char *' contains-errors lvalue Var 0x13d80e0e8 'encoded' 'char *'
|   `-ReturnStmt 0x13e80b698 <line:46:2, col:9>
|     `-ImplicitCastExpr 0x13e80b680 <col:9> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x13e80b660 <col:9> 'int' lvalue Var 0x13d827518 'encoded_len' 'int'
|-FunctionDecl 0x13d827b70 <line:9:18> col:18 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x13d827c70 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x13d827c18 <<invalid sloc>> Implicit 902
`-FunctionDecl 0x13e80ab78 <line:31:3> col:3 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x13e80ac78 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x13e80ace0 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x13e80ad48 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x13e80ac20 <<invalid sloc>> Implicit 882
