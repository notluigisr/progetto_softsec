TranslationUnitDecl 0x12084c808 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12084d6b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12084cdd0 '__int128'
|-TypedefDecl 0x12084d728 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12084cdf0 'unsigned __int128'
|-TypedefDecl 0x12090d830 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12090d600 'struct __NSConstantString_tag'
|   `-Record 0x12084d780 '__NSConstantString_tag'
|-TypedefDecl 0x12090d898 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12084cf90 '__SVInt8_t'
|-TypedefDecl 0x12090d900 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12084cfb0 '__SVInt16_t'
|-TypedefDecl 0x12090d968 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12084cfd0 '__SVInt32_t'
|-TypedefDecl 0x12090d9d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12084cff0 '__SVInt64_t'
|-TypedefDecl 0x12090da38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12084d010 '__SVUint8_t'
|-TypedefDecl 0x12090daa0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12084d030 '__SVUint16_t'
|-TypedefDecl 0x12090db08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12084d050 '__SVUint32_t'
|-TypedefDecl 0x12090db70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12084d070 '__SVUint64_t'
|-TypedefDecl 0x12090dbd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12084d090 '__SVFloat16_t'
|-TypedefDecl 0x12090dc40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12084d0b0 '__SVFloat32_t'
|-TypedefDecl 0x12090dca8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12084d0d0 '__SVFloat64_t'
|-TypedefDecl 0x12090dd10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12084d0f0 '__SVBfloat16_t'
|-TypedefDecl 0x12090dd78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12084d110 '__clang_svint8x2_t'
|-TypedefDecl 0x12090dde0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12084d130 '__clang_svint16x2_t'
|-TypedefDecl 0x12090de48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12084d150 '__clang_svint32x2_t'
|-TypedefDecl 0x12090deb0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12084d170 '__clang_svint64x2_t'
|-TypedefDecl 0x12090df18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12084d190 '__clang_svuint8x2_t'
|-TypedefDecl 0x12090df80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12084d1b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12090dfe8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12084d1d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12090e050 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12084d1f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12090e0b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12084d210 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12090e120 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12084d230 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12090e188 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12084d250 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12090e1f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12084d270 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12090e258 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12084d290 '__clang_svint8x3_t'
|-TypedefDecl 0x12090e2c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12084d2b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12090e328 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12084d2d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12090e390 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12084d2f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12090e3f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12084d310 '__clang_svuint8x3_t'
|-TypedefDecl 0x12090e460 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12084d330 '__clang_svuint16x3_t'
|-TypedefDecl 0x12090e4c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12084d350 '__clang_svuint32x3_t'
|-TypedefDecl 0x12090e530 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12084d370 '__clang_svuint64x3_t'
|-TypedefDecl 0x12090e598 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12084d390 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12090ee00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12084d3b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12090ee68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12084d3d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12090eed0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12084d3f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12090ef38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12084d410 '__clang_svint8x4_t'
|-TypedefDecl 0x12090efa0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12084d430 '__clang_svint16x4_t'
|-TypedefDecl 0x12090f008 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12084d450 '__clang_svint32x4_t'
|-TypedefDecl 0x12090f070 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12084d470 '__clang_svint64x4_t'
|-TypedefDecl 0x12090f0d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12084d490 '__clang_svuint8x4_t'
|-TypedefDecl 0x12090f140 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12084d4b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12090f1a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12084d4d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12090f210 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12084d4f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12090f278 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12084d510 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12090f2e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12084d530 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12090f348 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12084d550 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12090f3b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12084d570 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12090f418 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12084d590 '__SVBool_t'
|-TypedefDecl 0x12090f480 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12084d5b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12090f4e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12084d5d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12090f550 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12084d5f0 '__SVCount_t'
|-TypedefDecl 0x12090f5f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12090f5b0 'char *'
|   `-BuiltinType 0x12084c8b0 'char'
|-TypedefDecl 0x12090f668 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12090f5b0 'char *'
|   `-BuiltinType 0x12084c8b0 'char'
`-FunctionDecl 0x12090f9a8 <dataset_diviso_filec/func21635_vuln.c:1:1, line:54:1> line:1:1 invalid do_uncompress 'int (int *, int *, int, int *)'
  |-ParmVarDecl 0x12090f728 <col:16, col:43> col:43 referenced invalid zfx 'int *'
  |-ParmVarDecl 0x12090f7a8 <col:48, col:58> col:58 referenced invalid zs 'int *'
  |-ParmVarDecl 0x12090f828 <line:2:9, col:15> col:15 invalid a 'int'
  |-ParmVarDecl 0x12090f8a8 <col:18, col:26> col:26 invalid ret_len 'int *'
  `-CompoundStmt 0x10581aa08 <line:3:1, line:54:1>
    |-DeclStmt 0x12090faf0 <line:4:5, col:12>
    | `-VarDecl 0x12090fa88 <col:5, col:9> col:9 used zrc 'int'
    |-DeclStmt 0x12090fba8 <line:5:5, col:13>
    | `-VarDecl 0x12090fb20 <col:5, col:12> col:9 used rc 'int' cinit
    |   `-IntegerLiteral 0x12090fb88 <col:12> 'int' 0
    |-UnaryExprOrTypeTraitExpr 0x12090fc18 <line:6:5, col:12> 'unsigned long' contains-errors sizeof
    | `-RecoveryExpr 0x12090fbf8 <col:12> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x12090fd50 <line:7:5, col:21>
    | |-VarDecl 0x12090fc50 <col:5, col:9> col:9 used nread 'int'
    | `-VarDecl 0x12090fcd0 <col:5, col:16> col:16 used count 'int'
    |-DeclStmt 0x105817698 <line:8:5, col:31>
    | `-VarDecl 0x12090fd80 <col:5, col:23> col:9 used refill 'int' cinit
    |   `-UnaryOperator 0x105817680 <col:18, col:23> '<dependent type>' contains-errors prefix '!' cannot overflow
    |     `-ImplicitCastExpr 0x105817668 <col:19, col:23> '<dependent type>' contains-errors <LValueToRValue>
    |       `-CXXDependentScopeMemberExpr 0x105817620 <col:19, col:23> '<dependent type>' contains-errors lvalue ->avail_in
    |         `-RecoveryExpr 0x105817600 <col:19> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x105817b60 <line:10:5, line:13:28>
    | |-RecoveryExpr 0x1058176c8 <line:10:9> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x105817b08 <line:11:2, line:13:28> 'int' contains-errors
    |   |-ImplicitCastExpr 0x105817af0 <line:11:2> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x105817840 <col:2> 'int ()' Function 0x105817788 'log_debug' 'int ()'
    |   |-ImplicitCastExpr 0x105817b48 <col:12> 'char *' <ArrayToPointerDecay>
    |   | `-StringLiteral 0x1058178a0 <col:12> 'char[4]' lvalue "STR"
    |   |-CStyleCastExpr 0x105817940 <line:12:3, col:17> 'unsigned int' contains-errors <Dependent>
    |   | `-CXXDependentScopeMemberExpr 0x1058178e0 <col:13, col:17> '<dependent type>' contains-errors lvalue ->avail_in
    |   |   `-RecoveryExpr 0x1058178c0 <col:13> '<dependent type>' contains-errors lvalue
    |   |-CStyleCastExpr 0x1058179e8 <col:27, col:41> 'unsigned int' contains-errors <Dependent>
    |   | `-CXXDependentScopeMemberExpr 0x105817988 <col:37, col:41> '<dependent type>' contains-errors lvalue ->avail_out
    |   |   `-RecoveryExpr 0x105817968 <col:37> '<dependent type>' contains-errors lvalue
    |   `-CStyleCastExpr 0x105817a90 <line:13:3, col:18> 'unsigned int' contains-errors <Dependent>
    |     `-CXXDependentScopeMemberExpr 0x105817a30 <col:13, col:18> '<dependent type>' contains-errors lvalue ->inbufsize
    |       `-RecoveryExpr 0x105817a10 <col:13> '<dependent type>' contains-errors lvalue
    |-DoStmt 0x10581a620 <line:14:5, line:47:73>
    | |-CompoundStmt 0x120928f08 <line:14:8, line:47:5>
    | | |-IfStmt 0x1209283d8 <line:15:2, line:30:2>
    | | | |-BinaryOperator 0x105817c90 <line:15:6, col:39> 'int' contains-errors '&&'
    | | | | |-BinaryOperator 0x105817c50 <col:6, col:26> 'int' contains-errors '<'
    | | | | | |-CXXDependentScopeMemberExpr 0x105817ba0 <col:6, col:10> '<dependent type>' contains-errors lvalue ->avail_in
    | | | | | | `-RecoveryExpr 0x105817b80 <col:6> '<dependent type>' contains-errors lvalue
    | | | | | `-CXXDependentScopeMemberExpr 0x105817c08 <col:21, col:26> '<dependent type>' contains-errors lvalue ->inbufsize
    | | | | |   `-RecoveryExpr 0x105817be8 <col:21> '<dependent type>' contains-errors lvalue
    | | | | `-DeclRefExpr 0x105817c70 <col:39> 'int' contains-errors lvalue Var 0x12090fd80 'refill' 'int'
    | | | `-CompoundStmt 0x120928398 <col:48, line:30:2>
    | | |   |-IfStmt 0x105817ff0 <line:17:6, line:18:49>
    | | |   | |-UnaryOperator 0x105817d98 <line:17:10, col:11> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | |   | | `-ImplicitCastExpr 0x105817d80 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    | | |   | |   `-RecoveryExpr 0x105817d60 <col:11> '<dependent type>' contains-errors lvalue
    | | |   | `-BinaryOperator 0x105817fd0 <line:18:13, col:49> '<dependent type>' contains-errors '='
    | | |   |   |-CXXDependentScopeMemberExpr 0x105817df8 <col:13, col:17> '<dependent type>' contains-errors lvalue ->next_in
    | | |   |   | `-RecoveryExpr 0x105817dd0 <col:13> '<dependent type>' contains-errors lvalue
    | | |   |   |   `-DeclRefExpr 0x105817db0 <col:13> 'int *' lvalue ParmVar 0x12090f7a8 'zs' 'int *'
    | | |   |   `-CallExpr 0x105817fa8 <col:27, col:49> '<dependent type>' contains-errors
    | | |   |     |-DeclRefExpr 0x105817f20 <col:27> 'int ()' Function 0x105817e68 'BYTEF_CAST' 'int ()'
    | | |   |     `-CXXDependentScopeMemberExpr 0x105817f60 <col:39, col:44> '<dependent type>' contains-errors lvalue ->inbuf
    | | |   |       `-RecoveryExpr 0x105817f40 <col:39> '<dependent type>' contains-errors lvalue
    | | |   |-BinaryOperator 0x105818130 <line:19:6, col:31> 'int' contains-errors '='
    | | |   | |-DeclRefExpr 0x105818010 <col:6> 'int' lvalue Var 0x12090fcd0 'count' 'int'
    | | |   | `-BinaryOperator 0x105818110 <col:14, col:31> '<dependent type>' contains-errors '-'
    | | |   |   |-CXXDependentScopeMemberExpr 0x105818050 <col:14, col:19> '<dependent type>' contains-errors lvalue ->inbufsize
    | | |   |   | `-RecoveryExpr 0x105818030 <col:14> '<dependent type>' contains-errors lvalue
    | | |   |   `-RecoveryExpr 0x1058180f0 <col:31> '<dependent type>' contains-errors lvalue
    | | |   |-BinaryOperator 0x105818420 <line:20:6, col:51> 'int' contains-errors '='
    | | |   | |-DeclRefExpr 0x105818150 <col:6> 'int' lvalue Var 0x12090fc50 'nread' 'int'
    | | |   | `-CallExpr 0x1058183e8 <col:14, col:51> '<dependent type>' contains-errors
    | | |   |   |-DeclRefExpr 0x105818250 <col:14> 'int ()' Function 0x105818198 'iobuf_read' 'int ()'
    | | |   |   |-RecoveryExpr 0x105818270 <col:26> '<dependent type>' contains-errors lvalue
    | | |   |   |-BinaryOperator 0x1058183c8 <col:29, col:42> '<dependent type>' contains-errors '+'
    | | |   |   | |-CXXDependentScopeMemberExpr 0x1058182b0 <col:29, col:34> '<dependent type>' contains-errors lvalue ->inbuf
    | | |   |   | | `-RecoveryExpr 0x105818290 <col:29> '<dependent type>' contains-errors lvalue
    | | |   |   | `-RecoveryExpr 0x1058183a8 <col:42> '<dependent type>' contains-errors lvalue
    | | |   |   `-DeclRefExpr 0x105818330 <col:45> 'int' lvalue Var 0x12090fcd0 'count' 'int'
    | | |   |-IfStmt 0x105818530 <line:21:6, col:32>
    | | |   | |-BinaryOperator 0x1058184b0 <col:10, col:20> 'int' '=='
    | | |   | | |-ImplicitCastExpr 0x105818498 <col:10> 'int' <LValueToRValue>
    | | |   | | | `-DeclRefExpr 0x105818440 <col:10> 'int' lvalue Var 0x12090fc50 'nread' 'int'
    | | |   | | `-UnaryOperator 0x105818480 <col:19, col:20> 'int' prefix '-'
    | | |   | |   `-IntegerLiteral 0x105818460 <col:20> 'int' 1
    | | |   | `-BinaryOperator 0x105818510 <col:24, col:32> 'int' '='
    | | |   |   |-DeclRefExpr 0x1058184d0 <col:24> 'int' lvalue Var 0x12090fc50 'nread' 'int'
    | | |   |   `-IntegerLiteral 0x1058184f0 <col:32> 'int' 0
    | | |   |-IfStmt 0x120928270 <line:24:6, line:28:6>
    | | |   | |-BinaryOperator 0x1209280a8 <line:24:10, col:40> 'int' contains-errors '&&'
    | | |   | | |-BinaryOperator 0x1058185e0 <col:10, col:18> 'int' '<'
    | | |   | | | |-ImplicitCastExpr 0x1058185b0 <col:10> 'int' <LValueToRValue>
    | | |   | | | | `-DeclRefExpr 0x105818570 <col:10> 'int' lvalue Var 0x12090fc50 'nread' 'int'
    | | |   | | | `-ImplicitCastExpr 0x1058185c8 <col:18> 'int' <LValueToRValue>
    | | |   | | |   `-DeclRefExpr 0x105818590 <col:18> 'int' lvalue Var 0x12090fcd0 'count' 'int'
    | | |   | | `-BinaryOperator 0x120928088 <col:27, col:40> 'int' contains-errors '=='
    | | |   | |   |-CXXDependentScopeMemberExpr 0x120928020 <col:27, col:32> '<dependent type>' contains-errors lvalue ->algo
    | | |   | |   | `-RecoveryExpr 0x120928000 <col:27> '<dependent type>' contains-errors lvalue
    | | |   | |   `-IntegerLiteral 0x120928068 <col:40> 'int' 1
    | | |   | `-CompoundStmt 0x120928258 <col:44, line:28:6>
    | | |   |   `-BinaryOperator 0x120928238 <line:26:3, col:20> '<dependent type>' contains-errors '='
    | | |   |     |-CXXDependentScopeMemberExpr 0x1209281d0 <col:3, col:8> '<dependent type>' contains-errors lvalue ->algo1hack
    | | |   |     | `-RecoveryExpr 0x1209281a8 <col:3> '<dependent type>' contains-errors lvalue
    | | |   |     |   `-DeclRefExpr 0x120928188 <col:3> 'int *' lvalue ParmVar 0x12090f728 'zfx' 'int *'
    | | |   |     `-IntegerLiteral 0x120928218 <col:20> 'int' 1
    | | |   `-BinaryOperator 0x120928378 <line:29:6, col:21> '<dependent type>' contains-errors '='
    | | |     |-CXXDependentScopeMemberExpr 0x1209282d8 <col:6, col:10> '<dependent type>' contains-errors lvalue ->avail_in
    | | |     | `-RecoveryExpr 0x1209282b0 <col:6> '<dependent type>' contains-errors lvalue
    | | |     |   `-DeclRefExpr 0x120928290 <col:6> 'int *' lvalue ParmVar 0x12090f7a8 'zs' 'int *'
    | | |     `-RecoveryExpr 0x120928358 <col:21> '<dependent type>' contains-errors lvalue
    | | |-BinaryOperator 0x120928438 <line:31:2, col:11> 'int' contains-errors '='
    | | | |-DeclRefExpr 0x1209283f8 <col:2> 'int' contains-errors lvalue Var 0x12090fd80 'refill' 'int'
    | | | `-IntegerLiteral 0x120928418 <col:11> 'int' 1
    | | |-IfStmt 0x120928688 <line:32:2, line:34:54>
    | | | |-RecoveryExpr 0x120928470 <line:32:6> '<dependent type>' contains-errors lvalue
    | | | `-CallExpr 0x120928638 <line:33:6, line:34:54> 'int' contains-errors
    | | |   |-ImplicitCastExpr 0x120928620 <line:33:6> 'int (*)()' <FunctionToPointerDecay>
    | | |   | `-DeclRefExpr 0x120928490 <col:6> 'int ()' Function 0x105817788 'log_debug' 'int ()'
    | | |   |-ImplicitCastExpr 0x120928670 <col:16> 'char *' <ArrayToPointerDecay>
    | | |   | `-StringLiteral 0x1209284b0 <col:16> 'char[4]' lvalue "STR"
    | | |   |-CStyleCastExpr 0x120928550 <line:34:7, col:21> 'unsigned int' contains-errors <Dependent>
    | | |   | `-CXXDependentScopeMemberExpr 0x1209284f0 <col:17, col:21> '<dependent type>' contains-errors lvalue ->avail_in
    | | |   |   `-RecoveryExpr 0x1209284d0 <col:17> '<dependent type>' contains-errors lvalue
    | | |   `-CStyleCastExpr 0x1209285f8 <col:31, col:45> 'unsigned int' contains-errors <Dependent>
    | | |     `-CXXDependentScopeMemberExpr 0x120928598 <col:41, col:45> '<dependent type>' contains-errors lvalue ->avail_out
    | | |       `-RecoveryExpr 0x120928578 <col:41> '<dependent type>' contains-errors lvalue
    | | |-IfStmt 0x120928a40 <line:36:2, line:38:58>
    | | | |-RecoveryExpr 0x1209287e8 <line:36:6> '_Bool' contains-errors
    | | | `-CallExpr 0x1209289d0 <line:37:6, line:38:58> 'int' contains-errors
    | | |   |-ImplicitCastExpr 0x1209289b8 <line:37:6> 'int (*)()' <FunctionToPointerDecay>
    | | |   | `-DeclRefExpr 0x120928808 <col:6> 'int ()' Function 0x105817788 'log_debug' 'int ()'
    | | |   |-ImplicitCastExpr 0x120928a10 <col:16> 'char *' <ArrayToPointerDecay>
    | | |   | `-StringLiteral 0x120928828 <col:16> 'char[4]' lvalue "STR"
    | | |   |-CStyleCastExpr 0x1209288c8 <line:38:6, col:20> 'unsigned int' contains-errors <Dependent>
    | | |   | `-CXXDependentScopeMemberExpr 0x120928868 <col:16, col:20> '<dependent type>' contains-errors lvalue ->avail_in
    | | |   |   `-RecoveryExpr 0x120928848 <col:16> '<dependent type>' contains-errors lvalue
    | | |   |-CStyleCastExpr 0x120928970 <col:30, col:44> 'unsigned int' contains-errors <Dependent>
    | | |   | `-CXXDependentScopeMemberExpr 0x120928910 <col:40, col:44> '<dependent type>' contains-errors lvalue ->avail_out
    | | |   |   `-RecoveryExpr 0x1209288f0 <col:40> '<dependent type>' contains-errors lvalue
    | | |   `-ImplicitCastExpr 0x120928a28 <col:55> 'int' <LValueToRValue>
    | | |     `-DeclRefExpr 0x120928998 <col:55> 'int' lvalue Var 0x12090fa88 'zrc' 'int'
    | | `-IfStmt 0x120928ed8 <line:39:2, line:46:2> has_else
    | |   |-RecoveryExpr 0x120928a80 <line:39:6, col:13> '_Bool' contains-errors
    | |   |-BinaryOperator 0x120928af8 <line:40:6, col:12> 'int' '='
    | |   | |-DeclRefExpr 0x120928aa0 <col:6> 'int' lvalue Var 0x12090fb20 'rc' 'int'
    | |   | `-UnaryOperator 0x120928ae0 <col:11, col:12> 'int' prefix '-'
    | |   |   `-IntegerLiteral 0x120928ac0 <col:12> 'int' 1
    | |   `-IfStmt 0x120928eb8 <line:41:7, line:46:2>
    | |     |-RecoveryExpr 0x120928b58 <line:41:11, col:33> '_Bool' contains-errors
    | |     `-CompoundStmt 0x120928ea0 <col:47, line:46:2>
    | |       `-IfStmt 0x120928e70 <line:42:6, line:45:24> has_else
    | |         |-CXXDependentScopeMemberExpr 0x120928b98 <line:42:10, col:14> '<dependent type>' contains-errors lvalue ->msg
    | |         | `-RecoveryExpr 0x120928b78 <col:10> '<dependent type>' contains-errors lvalue
    | |         |-CallExpr 0x120928d68 <line:43:3, col:28> '<dependent type>' contains-errors
    | |         | |-DeclRefExpr 0x120928cc0 <col:3> 'int ()' Function 0x120928c08 'log_fatal' 'int ()'
    | |         | |-StringLiteral 0x120928ce0 <col:13> 'char[4]' lvalue "STR"
    | |         | `-CXXDependentScopeMemberExpr 0x120928d20 <col:20, col:24> '<dependent type>' contains-errors lvalue ->msg
    | |         |   `-RecoveryExpr 0x120928d00 <col:20> '<dependent type>' contains-errors lvalue
    | |         `-CallExpr 0x120928e10 <line:45:3, col:24> 'int'
    | |           |-ImplicitCastExpr 0x120928df8 <col:3> 'int (*)()' <FunctionToPointerDecay>
    | |           | `-DeclRefExpr 0x120928d98 <col:3> 'int ()' Function 0x120928c08 'log_fatal' 'int ()'
    | |           |-ImplicitCastExpr 0x120928e40 <col:13> 'char *' <ArrayToPointerDecay>
    | |           | `-StringLiteral 0x120928db8 <col:13> 'char[4]' lvalue "STR"
    | |           `-ImplicitCastExpr 0x120928e58 <col:20> 'int' <LValueToRValue>
    | |             `-DeclRefExpr 0x120928dd8 <col:20> 'int' lvalue Var 0x12090fa88 'zrc' 'int'
    | `-RecoveryExpr 0x10581a600 <line:47:14, col:61> '_Bool' contains-errors
    |-BinaryOperator 0x10581a780 <line:49:5, col:38> '<dependent type>' contains-errors '='
    | |-UnaryOperator 0x10581a678 <col:5, col:6> '<dependent type>' contains-errors prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x10581a660 <col:6> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x10581a640 <col:6> '<dependent type>' contains-errors lvalue
    | `-BinaryOperator 0x10581a760 <col:16, col:38> '<dependent type>' contains-errors '-'
    |   |-CXXDependentScopeMemberExpr 0x10581a6b0 <col:16, col:21> '<dependent type>' contains-errors lvalue ->outbufsize
    |   | `-RecoveryExpr 0x10581a690 <col:16> '<dependent type>' contains-errors lvalue
    |   `-CXXDependentScopeMemberExpr 0x10581a718 <col:34, col:38> '<dependent type>' contains-errors lvalue ->avail_out
    |     `-RecoveryExpr 0x10581a6f8 <col:34> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x10581a9a0 <line:50:5, line:52:70>
    | |-RecoveryExpr 0x10581a7a0 <line:50:9> '_Bool' contains-errors
    | `-CallExpr 0x10581a950 <line:51:2, line:52:70> 'int' contains-errors
    |   |-ImplicitCastExpr 0x10581a938 <line:51:2> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x10581a7c0 <col:2> 'int ()' Function 0x105817788 'log_debug' 'int ()'
    |   |-ImplicitCastExpr 0x10581a988 <col:12> 'char *' <ArrayToPointerDecay>
    |   | `-StringLiteral 0x10581a7e0 <col:12> 'char[4]' lvalue "STR"
    |   |-CStyleCastExpr 0x10581a868 <line:52:19, col:34> 'unsigned int' contains-errors <Dependent>
    |   | `-UnaryOperator 0x10581a838 <col:33, col:34> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   |   `-ImplicitCastExpr 0x10581a820 <col:34> '<dependent type>' contains-errors <LValueToRValue>
    |   |     `-RecoveryExpr 0x10581a800 <col:34> '<dependent type>' contains-errors lvalue
    |   `-CStyleCastExpr 0x10581a910 <col:43, col:61> 'unsigned int' contains-errors <Dependent>
    |     `-CXXDependentScopeMemberExpr 0x10581a8b0 <col:57, col:61> '<dependent type>' contains-errors lvalue ->avail_in
    |       `-RecoveryExpr 0x10581a890 <col:57> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x10581a9f8 <line:53:5, col:12>
      `-ImplicitCastExpr 0x10581a9e0 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x10581a9c0 <col:12> 'int' lvalue Var 0x12090fb20 'rc' 'int'
