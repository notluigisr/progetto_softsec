TranslationUnitDecl 0x14e055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14e0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14e055bd0 '__int128'
|-TypedefDecl 0x14e056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14e055bf0 'unsigned __int128'
|-TypedefDecl 0x14e126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14e126000 'struct __NSConstantString_tag'
|   `-Record 0x14e056580 '__NSConstantString_tag'
|-TypedefDecl 0x14e126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14e055d90 '__SVInt8_t'
|-TypedefDecl 0x14e126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14e055db0 '__SVInt16_t'
|-TypedefDecl 0x14e126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14e055dd0 '__SVInt32_t'
|-TypedefDecl 0x14e1263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14e055df0 '__SVInt64_t'
|-TypedefDecl 0x14e126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14e055e10 '__SVUint8_t'
|-TypedefDecl 0x14e1264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14e055e30 '__SVUint16_t'
|-TypedefDecl 0x14e126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14e055e50 '__SVUint32_t'
|-TypedefDecl 0x14e126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14e055e70 '__SVUint64_t'
|-TypedefDecl 0x14e1265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14e055e90 '__SVFloat16_t'
|-TypedefDecl 0x14e126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14e055eb0 '__SVFloat32_t'
|-TypedefDecl 0x14e1266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14e055ed0 '__SVFloat64_t'
|-TypedefDecl 0x14e126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14e055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14e126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14e055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14e1267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14e055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14e126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14e055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14e1268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14e055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14e126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14e055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14e126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14e055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14e1269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14e055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14e126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14e055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14e126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14e056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14e126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14e056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14e126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14e056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14e126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14e056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14e126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14e056090 '__clang_svint8x3_t'
|-TypedefDecl 0x14e126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14e0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14e126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14e0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14e126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14e0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14e126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14e056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14e126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14e056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14e126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14e056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14e126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14e056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14e126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14e056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14e127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14e0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14e127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14e0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14e1278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14e0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14e127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14e056210 '__clang_svint8x4_t'
|-TypedefDecl 0x14e1279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14e056230 '__clang_svint16x4_t'
|-TypedefDecl 0x14e127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14e056250 '__clang_svint32x4_t'
|-TypedefDecl 0x14e127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14e056270 '__clang_svint64x4_t'
|-TypedefDecl 0x14e127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14e056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14e127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14e0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14e127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14e0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14e127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14e0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14e127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14e056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14e127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14e056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14e127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14e056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14e127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14e056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14e127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14e056390 '__SVBool_t'
|-TypedefDecl 0x14e127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14e0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14e127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14e0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14e127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14e0563f0 '__SVCount_t'
|-TypedefDecl 0x14e127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14e127fb0 'char *'
|   `-BuiltinType 0x14e0556b0 'char'
|-TypedefDecl 0x14e128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14e127fb0 'char *'
|   `-BuiltinType 0x14e0556b0 'char'
|-FunctionDecl 0x14e128328 <dataset_diviso_filec/func17740_vuln.c:1:1, line:46:1> line:1:1 parse_update_subtlv 'int (const unsigned char *, int, unsigned char *)'
| |-ParmVarDecl 0x14e128108 <col:21, col:42> col:42 used a 'const unsigned char *'
| |-ParmVarDecl 0x14e128188 <col:45, col:49> col:49 used alen 'int'
| |-ParmVarDecl 0x14e128238 <line:2:21, col:36> col:36 used channels 'unsigned char *'
| `-CompoundStmt 0x14e145d80 <line:3:1, line:46:1>
|   |-DeclStmt 0x14e1285f0 <line:4:5, col:25>
|   | |-VarDecl 0x14e128448 <col:5, col:9> col:9 used type 'int'
|   | |-VarDecl 0x14e1284c8 <col:5, col:15> col:15 used len 'int'
|   | `-VarDecl 0x14e128548 <col:5, col:24> col:20 used i 'int' cinit
|   |   `-IntegerLiteral 0x14e1285b0 <col:24> 'int' 0
|   `-WhileStmt 0x14e145d60 <line:6:5, line:45:5>
|     |-BinaryOperator 0x14e128678 <line:6:11, col:15> 'int' '<'
|     | |-ImplicitCastExpr 0x14e128648 <col:11> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x14e128608 <col:11> 'int' lvalue Var 0x14e128548 'i' 'int'
|     | `-ImplicitCastExpr 0x14e128660 <col:15> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x14e128628 <col:15> 'int' lvalue ParmVar 0x14e128188 'alen' 'int'
|     `-CompoundStmt 0x14e145d18 <col:21, line:45:5>
|       |-BinaryOperator 0x14e128778 <line:7:9, col:19> 'int' '='
|       | |-DeclRefExpr 0x14e128698 <col:9> 'int' lvalue Var 0x14e128448 'type' 'int'
|       | `-ImplicitCastExpr 0x14e128760 <col:16, col:19> 'int' <IntegralCast>
|       |   `-ImplicitCastExpr 0x14e128748 <col:16, col:19> 'unsigned char' <LValueToRValue>
|       |     `-ArraySubscriptExpr 0x14e128728 <col:16, col:19> 'const unsigned char' lvalue
|       |       |-ImplicitCastExpr 0x14e1286f8 <col:16> 'const unsigned char *' <LValueToRValue>
|       |       | `-DeclRefExpr 0x14e1286b8 <col:16> 'const unsigned char *' lvalue ParmVar 0x14e128108 'a' 'const unsigned char *'
|       |       `-ImplicitCastExpr 0x14e128710 <col:18> 'int' <LValueToRValue>
|       |         `-DeclRefExpr 0x14e1286d8 <col:18> 'int' lvalue Var 0x14e128548 'i' 'int'
|       |-IfStmt 0x14e140ac0 <line:8:9, line:11:9>
|       | |-BinaryOperator 0x14e140a40 <line:8:12, col:20> 'int' contains-errors '=='
|       | | |-DeclRefExpr 0x14e128798 <col:12> 'int' lvalue Var 0x14e128448 'type' 'int'
|       | | `-RecoveryExpr 0x14e140a20 <col:20> '<dependent type>' contains-errors lvalue
|       | `-CompoundStmt 0x14e140aa0 <col:33, line:11:9>
|       |   |-UnaryOperator 0x14e140a80 <line:9:13, col:14> 'int' postfix '++'
|       |   | `-DeclRefExpr 0x14e140a60 <col:13> 'int' lvalue Var 0x14e128548 'i' 'int'
|       |   `-ContinueStmt 0x14e140a98 <line:10:13>
|       |-IfStmt 0x14e140e10 <line:13:9, line:16:9>
|       | |-BinaryOperator 0x14e140b90 <line:13:12, col:20> 'int' '>'
|       | | |-BinaryOperator 0x14e140b38 <col:12, col:16> 'int' '+'
|       | | | |-ImplicitCastExpr 0x14e140b20 <col:12> 'int' <LValueToRValue>
|       | | | | `-DeclRefExpr 0x14e140ae0 <col:12> 'int' lvalue Var 0x14e128548 'i' 'int'
|       | | | `-IntegerLiteral 0x14e140b00 <col:16> 'int' 1
|       | | `-ImplicitCastExpr 0x14e140b78 <col:20> 'int' <LValueToRValue>
|       | |   `-DeclRefExpr 0x14e140b58 <col:20> 'int' lvalue ParmVar 0x14e128188 'alen' 'int'
|       | `-CompoundStmt 0x14e140df0 <col:26, line:16:9>
|       |   |-CallExpr 0x14e140db0 <line:14:13, col:44> '<dependent type>' contains-errors
|       |   | |-DeclRefExpr 0x14e140cc0 <col:13> 'int ()' Function 0x14e140c08 'flog_err' 'int ()'
|       |   | |-RecoveryExpr 0x14e140d90 <col:22> '<dependent type>' contains-errors lvalue
|       |   | `-StringLiteral 0x14e140d40 <col:39> 'char[4]' lvalue "STR"
|       |   `-ReturnStmt 0x14e140de0 <line:15:13>
|       |-BinaryOperator 0x14e140f50 <line:17:9, col:22> 'int' '='
|       | |-DeclRefExpr 0x14e140e30 <col:9> 'int' lvalue Var 0x14e1284c8 'len' 'int'
|       | `-ImplicitCastExpr 0x14e140f38 <col:15, col:22> 'int' <IntegralCast>
|       |   `-ImplicitCastExpr 0x14e140f20 <col:15, col:22> 'unsigned char' <LValueToRValue>
|       |     `-ArraySubscriptExpr 0x14e140f00 <col:15, col:22> 'const unsigned char' lvalue
|       |       |-ImplicitCastExpr 0x14e140ee8 <col:15> 'const unsigned char *' <LValueToRValue>
|       |       | `-DeclRefExpr 0x14e140e50 <col:15> 'const unsigned char *' lvalue ParmVar 0x14e128108 'a' 'const unsigned char *'
|       |       `-BinaryOperator 0x14e140ec8 <col:17, col:21> 'int' '+'
|       |         |-ImplicitCastExpr 0x14e140eb0 <col:17> 'int' <LValueToRValue>
|       |         | `-DeclRefExpr 0x14e140e70 <col:17> 'int' lvalue Var 0x14e128548 'i' 'int'
|       |         `-IntegerLiteral 0x14e140e90 <col:21> 'int' 1
|       |-IfStmt 0x14e141160 <line:18:9, line:21:9>
|       | |-BinaryOperator 0x14e141038 <line:18:12, col:22> 'int' '>'
|       | | |-BinaryOperator 0x14e140fe0 <col:12, col:16> 'int' '+'
|       | | | |-ImplicitCastExpr 0x14e140fb0 <col:12> 'int' <LValueToRValue>
|       | | | | `-DeclRefExpr 0x14e140f70 <col:12> 'int' lvalue Var 0x14e128548 'i' 'int'
|       | | | `-ImplicitCastExpr 0x14e140fc8 <col:16> 'int' <LValueToRValue>
|       | | |   `-DeclRefExpr 0x14e140f90 <col:16> 'int' lvalue Var 0x14e1284c8 'len' 'int'
|       | | `-ImplicitCastExpr 0x14e141020 <col:22> 'int' <LValueToRValue>
|       | |   `-DeclRefExpr 0x14e141000 <col:22> 'int' lvalue ParmVar 0x14e128188 'alen' 'int'
|       | `-CompoundStmt 0x14e141140 <col:28, line:21:9>
|       |   |-CallExpr 0x14e141100 <line:19:13, col:44> '<dependent type>' contains-errors
|       |   | |-DeclRefExpr 0x14e141058 <col:13> 'int ()' Function 0x14e140c08 'flog_err' 'int ()'
|       |   | |-RecoveryExpr 0x14e1410e0 <col:22> '<dependent type>' contains-errors lvalue
|       |   | `-StringLiteral 0x14e141090 <col:39> 'char[4]' lvalue "STR"
|       |   `-ReturnStmt 0x14e141130 <line:20:13>
|       |-IfStmt 0x14e145c20 <line:23:9, line:42:9> has_else
|       | |-BinaryOperator 0x14e1411f8 <line:23:12, col:20> 'int' contains-errors '=='
|       | | |-DeclRefExpr 0x14e141180 <col:12> 'int' lvalue Var 0x14e128448 'type' 'int'
|       | | `-RecoveryExpr 0x14e1411d8 <col:20> '<dependent type>' contains-errors lvalue
|       | |-CompoundStmt 0x14e141218 <col:33, line:25:9>
|       | `-IfStmt 0x14e145bf0 <col:16, line:42:9> has_else
|       |   |-BinaryOperator 0x14e1412a0 <line:25:19, col:27> 'int' contains-errors '=='
|       |   | |-DeclRefExpr 0x14e141228 <col:19> 'int' lvalue Var 0x14e128448 'type' 'int'
|       |   | `-RecoveryExpr 0x14e141280 <col:27> '<dependent type>' contains-errors lvalue
|       |   |-CompoundStmt 0x14e145a78 <col:45, line:39:9>
|       |   | |-IfStmt 0x14e141560 <line:26:13, line:31:13>
|       |   | | |-BinaryOperator 0x14e141338 <line:26:16, col:22> 'int' contains-errors '>'
|       |   | | | |-DeclRefExpr 0x14e1412c0 <col:16> 'int' lvalue Var 0x14e1284c8 'len' 'int'
|       |   | | | `-RecoveryExpr 0x14e141318 <col:22> '<dependent type>' contains-errors lvalue
|       |   | | `-CompoundStmt 0x14e141540 <col:38, line:31:13>
|       |   | |   |-CallExpr 0x14e141468 <line:27:17, line:29:46> '<dependent type>' contains-errors
|       |   | |   | |-DeclRefExpr 0x14e141358 <line:27:17> 'int ()' Function 0x14e140c08 'flog_err' 'int ()'
|       |   | |   | |-RecoveryExpr 0x14e141428 <col:26> '<dependent type>' contains-errors lvalue
|       |   | |   | |-StringLiteral 0x14e141390 <line:28:6> 'char[4]' lvalue "STR"
|       |   | |   | |-DeclRefExpr 0x14e1413b0 <line:29:27> 'int' lvalue Var 0x14e1284c8 'len' 'int'
|       |   | |   | `-RecoveryExpr 0x14e141448 <col:32> '<dependent type>' contains-errors lvalue
|       |   | |   `-BinaryOperator 0x14e141520 <line:30:17, col:23> 'int' contains-errors '='
|       |   | |     |-DeclRefExpr 0x14e1414a8 <col:17> 'int' lvalue Var 0x14e1284c8 'len' 'int'
|       |   | |     `-RecoveryExpr 0x14e141500 <col:23> '<dependent type>' contains-errors lvalue
|       |   | |-IfStmt 0x14e145258 <line:32:13, line:36:13>
|       |   | | |-BinaryOperator 0x14e145130 <line:32:16, col:45> 'int' contains-errors '!='
|       |   | | | |-CallExpr 0x14e145090 <col:16, col:40> 'void *'
|       |   | | | | |-ImplicitCastExpr 0x14e145078 <col:16> 'void *(*)(const void *, int, unsigned long)' <FunctionToPointerDecay>
|       |   | | | | | `-DeclRefExpr 0x14e144c80 <col:16> 'void *(const void *, int, unsigned long)' Function 0x14e144a30 'memchr' 'void *(const void *, int, unsigned long)'
|       |   | | | | |-ImplicitCastExpr 0x14e1450c8 <col:23, col:31> 'const void *' <BitCast>
|       |   | | | | | `-BinaryOperator 0x14e145040 <col:23, col:31> 'const unsigned char *' '+'
|       |   | | | | |   |-BinaryOperator 0x14e145020 <col:23, col:27> 'const unsigned char *' '+'
|       |   | | | | |   | |-ImplicitCastExpr 0x14e144ff0 <col:23> 'const unsigned char *' <LValueToRValue>
|       |   | | | | |   | | `-DeclRefExpr 0x14e144ca0 <col:23> 'const unsigned char *' lvalue ParmVar 0x14e128108 'a' 'const unsigned char *'
|       |   | | | | |   | `-ImplicitCastExpr 0x14e145008 <col:27> 'int' <LValueToRValue>
|       |   | | | | |   |   `-DeclRefExpr 0x14e144cc0 <col:27> 'int' lvalue Var 0x14e128548 'i' 'int'
|       |   | | | | |   `-IntegerLiteral 0x14e144d30 <col:31> 'int' 2
|       |   | | | | |-IntegerLiteral 0x14e144d70 <col:34> 'int' 0
|       |   | | | | `-ImplicitCastExpr 0x14e1450f8 <col:37> 'unsigned long' <IntegralCast>
|       |   | | | |   `-ImplicitCastExpr 0x14e1450e0 <col:37> 'int' <LValueToRValue>
|       |   | | | |     `-DeclRefExpr 0x14e144d90 <col:37> 'int' lvalue Var 0x14e1284c8 'len' 'int'
|       |   | | | `-RecoveryExpr 0x14e145110 <col:45> '<dependent type>' contains-errors lvalue
|       |   | | `-CompoundStmt 0x14e145238 <col:51, line:36:13>
|       |   | |   |-CallExpr 0x14e1451f8 <line:34:17, col:48> '<dependent type>' contains-errors
|       |   | |   | |-DeclRefExpr 0x14e145150 <col:17> 'int ()' Function 0x14e140c08 'flog_err' 'int ()'
|       |   | |   | |-RecoveryExpr 0x14e1451d8 <col:26> '<dependent type>' contains-errors lvalue
|       |   | |   | `-StringLiteral 0x14e145188 <col:43> 'char[4]' lvalue "STR"
|       |   | |   `-ReturnStmt 0x14e145228 <line:35:17>
|       |   | `-CallExpr 0x14e1459c8 <line:38:13, col:44> 'void *'
|       |   |   |-ImplicitCastExpr 0x14e1459b0 <col:13> 'void *(*)(void *, const void *, unsigned long)' <FunctionToPointerDecay>
|       |   |   | `-DeclRefExpr 0x14e145818 <col:13> 'void *(void *, const void *, unsigned long)' Function 0x14e1455c8 'memcpy' 'void *(void *, const void *, unsigned long)'
|       |   |   |-ImplicitCastExpr 0x14e145a18 <col:20> 'void *' <BitCast>
|       |   |   | `-ImplicitCastExpr 0x14e145a00 <col:20> 'unsigned char *' <LValueToRValue>
|       |   |   |   `-DeclRefExpr 0x14e145838 <col:20> 'unsigned char *' lvalue ParmVar 0x14e128238 'channels' 'unsigned char *'
|       |   |   |-ImplicitCastExpr 0x14e145a30 <col:30, col:38> 'const void *' <BitCast>
|       |   |   | `-BinaryOperator 0x14e145908 <col:30, col:38> 'const unsigned char *' '+'
|       |   |   |   |-BinaryOperator 0x14e1458c8 <col:30, col:34> 'const unsigned char *' '+'
|       |   |   |   | |-ImplicitCastExpr 0x14e145898 <col:30> 'const unsigned char *' <LValueToRValue>
|       |   |   |   | | `-DeclRefExpr 0x14e145858 <col:30> 'const unsigned char *' lvalue ParmVar 0x14e128108 'a' 'const unsigned char *'
|       |   |   |   | `-ImplicitCastExpr 0x14e1458b0 <col:34> 'int' <LValueToRValue>
|       |   |   |   |   `-DeclRefExpr 0x14e145878 <col:34> 'int' lvalue Var 0x14e128548 'i' 'int'
|       |   |   |   `-IntegerLiteral 0x14e1458e8 <col:38> 'int' 2
|       |   |   `-ImplicitCastExpr 0x14e145a60 <col:41> 'unsigned long' <IntegralCast>
|       |   |     `-ImplicitCastExpr 0x14e145a48 <col:41> 'int' <LValueToRValue>
|       |   |       `-DeclRefExpr 0x14e145928 <col:41> 'int' lvalue Var 0x14e1284c8 'len' 'int'
|       |   `-CompoundStmt 0x14e145be0 <line:39:16, line:42:9>
|       `-CompoundAssignOperator 0x14e145ce8 <line:44:9, col:20> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|         |-DeclRefExpr 0x14e145c50 <col:9> 'int' lvalue Var 0x14e128548 'i' 'int'
|         `-BinaryOperator 0x14e145cc8 <col:14, col:20> 'int' '+'
|           |-ImplicitCastExpr 0x14e145cb0 <col:14> 'int' <LValueToRValue>
|           | `-DeclRefExpr 0x14e145c70 <col:14> 'int' lvalue Var 0x14e1284c8 'len' 'int'
|           `-IntegerLiteral 0x14e145c90 <col:20> 'int' 2
|-FunctionDecl 0x14e144a30 <line:32:16> col:16 implicit used memchr 'void *(const void *, int, unsigned long)' extern
| |-ParmVarDecl 0x14e144b30 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x14e144b98 <<invalid sloc>> <invalid sloc> 'int'
| |-ParmVarDecl 0x14e144c00 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x14e144ad8 <<invalid sloc>> Implicit 892
|-FunctionDecl 0x14e1452c8 <line:37:13> col:13 implicit used memset 'void *(void *, int, unsigned long)' extern
| |-ParmVarDecl 0x14e1453c8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x14e145430 <<invalid sloc>> <invalid sloc> 'int'
| |-ParmVarDecl 0x14e145498 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x14e145370 <<invalid sloc>> Implicit 900
`-FunctionDecl 0x14e1455c8 <line:38:13> col:13 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x14e1456c8 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x14e145730 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x14e145798 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x14e145670 <<invalid sloc>> Implicit 882
