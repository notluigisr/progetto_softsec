TranslationUnitDecl 0x12d824a08 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12d8258b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12d824fd0 '__int128'
|-TypedefDecl 0x12d825928 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12d824ff0 'unsigned __int128'
|-TypedefDecl 0x12e008430 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12e008200 'struct __NSConstantString_tag'
|   `-Record 0x12d825980 '__NSConstantString_tag'
|-TypedefDecl 0x12e008498 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12d825190 '__SVInt8_t'
|-TypedefDecl 0x12e008500 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12d8251b0 '__SVInt16_t'
|-TypedefDecl 0x12e008568 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12d8251d0 '__SVInt32_t'
|-TypedefDecl 0x12e0085d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12d8251f0 '__SVInt64_t'
|-TypedefDecl 0x12e008638 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12d825210 '__SVUint8_t'
|-TypedefDecl 0x12e0086a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12d825230 '__SVUint16_t'
|-TypedefDecl 0x12e008708 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12d825250 '__SVUint32_t'
|-TypedefDecl 0x12e008770 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12d825270 '__SVUint64_t'
|-TypedefDecl 0x12e0087d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12d825290 '__SVFloat16_t'
|-TypedefDecl 0x12e008840 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12d8252b0 '__SVFloat32_t'
|-TypedefDecl 0x12e0088a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12d8252d0 '__SVFloat64_t'
|-TypedefDecl 0x12e008910 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12d8252f0 '__SVBfloat16_t'
|-TypedefDecl 0x12e008978 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12d825310 '__clang_svint8x2_t'
|-TypedefDecl 0x12e0089e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12d825330 '__clang_svint16x2_t'
|-TypedefDecl 0x12e008a48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12d825350 '__clang_svint32x2_t'
|-TypedefDecl 0x12e008ab0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12d825370 '__clang_svint64x2_t'
|-TypedefDecl 0x12e008b18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12d825390 '__clang_svuint8x2_t'
|-TypedefDecl 0x12e008b80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12d8253b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12e008be8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12d8253d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12e008c50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12d8253f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12e008cb8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12d825410 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12e008d20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12d825430 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12e008d88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12d825450 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12e008df0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12d825470 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12e008e58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12d825490 '__clang_svint8x3_t'
|-TypedefDecl 0x12e008ec0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12d8254b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12e008f28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12d8254d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12e008f90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12d8254f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12e008ff8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12d825510 '__clang_svuint8x3_t'
|-TypedefDecl 0x12e009060 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12d825530 '__clang_svuint16x3_t'
|-TypedefDecl 0x12e0090c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12d825550 '__clang_svuint32x3_t'
|-TypedefDecl 0x12e009130 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12d825570 '__clang_svuint64x3_t'
|-TypedefDecl 0x12e009198 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12d825590 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12e009a00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12d8255b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12e009a68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12d8255d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12e009ad0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12d8255f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12e009b38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12d825610 '__clang_svint8x4_t'
|-TypedefDecl 0x12e009ba0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12d825630 '__clang_svint16x4_t'
|-TypedefDecl 0x12e009c08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12d825650 '__clang_svint32x4_t'
|-TypedefDecl 0x12e009c70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12d825670 '__clang_svint64x4_t'
|-TypedefDecl 0x12e009cd8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12d825690 '__clang_svuint8x4_t'
|-TypedefDecl 0x12e009d40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12d8256b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12e009da8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12d8256d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12e009e10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12d8256f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12e009e78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12d825710 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12e009ee0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12d825730 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12e009f48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12d825750 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12e009fb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12d825770 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12e00a018 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12d825790 '__SVBool_t'
|-TypedefDecl 0x12e00a080 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12d8257b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12e00a0e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12d8257d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12e00a150 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12d8257f0 '__SVCount_t'
|-TypedefDecl 0x12e00a1f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12e00a1b0 'char *'
|   `-BuiltinType 0x12d824ab0 'char'
|-TypedefDecl 0x12e00a268 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12e00a1b0 'char *'
|   `-BuiltinType 0x12d824ab0 'char'
`-FunctionDecl 0x12e00a488 <dataset_diviso_filec/func14843_vuln.c:1:1, line:104:1> line:1:19 invalid GetDrawInfo 'int (const int *, int *)'
  |-ParmVarDecl 0x12e00a2f0 <col:31, col:48> col:48 referenced invalid image_info 'const int *'
  |-ParmVarDecl 0x12e00a3a8 <col:59, col:69> col:69 referenced invalid draw_info 'int *'
  `-CompoundStmt 0x12d90e340 <line:2:1, line:104:1>
    |-DeclStmt 0x12e00a5c0 <line:3:3, line:4:12>
    | `-VarDecl 0x12e00a558 <line:3:3, line:4:6> col:6 used option 'const char *'
    |-BinaryOperator 0x12e00a6b0 <line:9:3, line:10:6> '<dependent type>' contains-errors '*'
    | |-RecoveryExpr 0x12e00a610 <line:9:3> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x12e00a5f0 <col:3> 'const int *' lvalue ParmVar 0x12e00a2f0 'image_info' 'const int *'
    | `-RecoveryExpr 0x12e00a690 <line:10:6> '<dependent type>' contains-errors lvalue
    |-CStyleCastExpr 0x12d03f218 <line:15:3, col:58> 'void' contains-errors <ToVoid>
    | `-CallExpr 0x12d03f1d0 <col:10, col:58> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12d03f0e0 <col:10> 'int ()' Function 0x12d03f028 'ResetMagickMemory' 'int ()'
    |   |-RecoveryExpr 0x12d03f100 <col:28> '<dependent type>' contains-errors lvalue
    |   |-IntegerLiteral 0x12d03f120 <col:38> 'int' 0
    |   `-UnaryExprOrTypeTraitExpr 0x12d03f1b0 <col:40, col:57> 'unsigned long' contains-errors sizeof
    |     `-ParenExpr 0x12d03f190 <col:46, col:57> '<dependent type>' contains-errors
    |       `-UnaryOperator 0x12d03f178 <col:47, col:48> '<dependent type>' contains-errors prefix '*' cannot overflow
    |         `-ImplicitCastExpr 0x12d03f160 <col:48> '<dependent type>' contains-errors <LValueToRValue>
    |           `-RecoveryExpr 0x12d03f140 <col:48> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x12d03f508 <line:17:3, col:37> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12d03f468 <col:3> 'int ()' Function 0x12d03f3b0 'GetAffineMatrix' 'int ()'
    | `-UnaryOperator 0x12d03f4f0 <col:19, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-CXXDependentScopeMemberExpr 0x12d03f4a8 <col:20, col:31> '<dependent type>' contains-errors lvalue ->affine
    |     `-RecoveryExpr 0x12d03f488 <col:20> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x12d03f978 <line:23:3, col:27> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x12d03f910 <col:3, col:14> '<dependent type>' contains-errors lvalue ->stroke_width
    | | `-RecoveryExpr 0x12d03f8e8 <col:3> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x12d03f8c8 <col:3> 'int *' lvalue ParmVar 0x12e00a3a8 'draw_info' 'int *'
    | `-FloatingLiteral 0x12d03f958 <col:27> 'double' 1.000000e+00
    |-BinaryOperator 0x12d03fc88 <line:28:3, col:25> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x12d03fc20 <col:3, col:14> '<dependent type>' contains-errors lvalue ->miterlimit
    | | `-RecoveryExpr 0x12d03fbf8 <col:3> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x12d03fbd8 <col:3> 'int *' lvalue ParmVar 0x12e00a3a8 'draw_info' 'int *'
    | `-IntegerLiteral 0x12d03fc68 <col:25> 'int' 10
    |-BinaryOperator 0x12d90be00 <line:30:3, col:24> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x12d03fd80 <col:3, col:14> '<dependent type>' contains-errors lvalue ->pointsize
    | | `-RecoveryExpr 0x12d03fd58 <col:3> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x12d03fd38 <col:3> 'int *' lvalue ParmVar 0x12e00a3a8 'draw_info' 'int *'
    | `-FloatingLiteral 0x12d03fdc8 <col:24> 'double' 1.200000e+01
    |-BinaryOperator 0x12d90c1e0 <line:34:3, col:35> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x12d90c060 <col:3, col:14> '<dependent type>' contains-errors lvalue ->debug
    | | `-RecoveryExpr 0x12d90c038 <col:3> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x12d90c018 <col:3> 'int *' lvalue ParmVar 0x12e00a3a8 'draw_info' 'int *'
    | `-CallExpr 0x12d90c1c0 <col:20, col:35> 'int'
    |   `-ImplicitCastExpr 0x12d90c1a8 <col:20> 'int (*)()' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x12d90c188 <col:20> 'int ()' Function 0x12d90c0d0 'IsEventLogging' 'int ()'
    |-IfStmt 0x12d90cd18 <line:53:3, line:54:51>
    | |-RecoveryExpr 0x12d90caf0 <line:53:7, col:32> '_Bool' contains-errors
    | `-CStyleCastExpr 0x12d90ccf0 <line:54:5, col:51> 'void' contains-errors <ToVoid>
    |   `-CallExpr 0x12d90ccb0 <col:12, col:51> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x12d90cbf0 <col:12> 'int ()' Function 0x12d90cb38 'CloneString' 'int ()'
    |     |-UnaryOperator 0x12d90cc78 <col:24, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     | `-CXXDependentScopeMemberExpr 0x12d90cc30 <col:25, col:36> '<dependent type>' contains-errors lvalue ->encoding
    |     |   `-RecoveryExpr 0x12d90cc10 <col:25> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x12d90cc90 <col:45> 'const char *' lvalue Var 0x12e00a558 'option' 'const char *'
    |-IfStmt 0x12d90cf08 <line:56:3, line:57:49>
    | |-RecoveryExpr 0x12d90cdb8 <line:56:7, col:32> '_Bool' contains-errors
    | `-CStyleCastExpr 0x12d90cee0 <line:57:5, col:49> 'void' contains-errors <ToVoid>
    |   `-CallExpr 0x12d90cea0 <col:12, col:49> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x12d90cdd8 <col:12> 'int ()' Function 0x12d90cb38 'CloneString' 'int ()'
    |     |-UnaryOperator 0x12d90ce68 <col:24, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     | `-CXXDependentScopeMemberExpr 0x12d90ce20 <col:25, col:36> '<dependent type>' contains-errors lvalue ->family
    |     |   `-RecoveryExpr 0x12d90ce00 <col:25> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x12d90ce80 <col:43> 'const char *' lvalue Var 0x12e00a558 'option' 'const char *'
    `-IfStmt 0x12d90e090 <line:91:3, line:100:5>
      |-RecoveryExpr 0x12d90dcc8 <line:91:7, col:32> '_Bool' contains-errors
      `-CompoundStmt 0x12d90e080 <line:92:5, line:100:5>
