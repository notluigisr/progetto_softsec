TranslationUnitDecl 0x15c055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x15c0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x15c055bd0 '__int128'
|-TypedefDecl 0x15c056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x15c055bf0 'unsigned __int128'
|-TypedefDecl 0x15c126a30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15c126800 'struct __NSConstantString_tag'
|   `-Record 0x15c056580 '__NSConstantString_tag'
|-TypedefDecl 0x15c126a98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x15c055d90 '__SVInt8_t'
|-TypedefDecl 0x15c126b00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x15c055db0 '__SVInt16_t'
|-TypedefDecl 0x15c126b68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x15c055dd0 '__SVInt32_t'
|-TypedefDecl 0x15c126bd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x15c055df0 '__SVInt64_t'
|-TypedefDecl 0x15c126c38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x15c055e10 '__SVUint8_t'
|-TypedefDecl 0x15c126ca0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x15c055e30 '__SVUint16_t'
|-TypedefDecl 0x15c126d08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x15c055e50 '__SVUint32_t'
|-TypedefDecl 0x15c126d70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x15c055e70 '__SVUint64_t'
|-TypedefDecl 0x15c126dd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x15c055e90 '__SVFloat16_t'
|-TypedefDecl 0x15c126e40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x15c055eb0 '__SVFloat32_t'
|-TypedefDecl 0x15c126ea8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x15c055ed0 '__SVFloat64_t'
|-TypedefDecl 0x15c126f10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x15c055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15c126f78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x15c055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15c126fe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x15c055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15c127048 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x15c055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15c1270b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x15c055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15c127118 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x15c055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15c127180 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x15c055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15c1271e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x15c055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15c127250 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x15c055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15c1272b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x15c056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15c127320 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x15c056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15c127388 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x15c056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15c1273f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x15c056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15c127458 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x15c056090 '__clang_svint8x3_t'
|-TypedefDecl 0x15c1274c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x15c0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15c127528 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x15c0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15c127590 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x15c0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15c1275f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x15c056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15c127660 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x15c056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15c1276c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x15c056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15c127730 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x15c056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15c127798 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x15c056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15c128000 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x15c0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15c128068 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x15c0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15c1280d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x15c0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15c128138 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x15c056210 '__clang_svint8x4_t'
|-TypedefDecl 0x15c1281a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x15c056230 '__clang_svint16x4_t'
|-TypedefDecl 0x15c128208 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x15c056250 '__clang_svint32x4_t'
|-TypedefDecl 0x15c128270 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x15c056270 '__clang_svint64x4_t'
|-TypedefDecl 0x15c1282d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x15c056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15c128340 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x15c0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15c1283a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x15c0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15c128410 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x15c0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15c128478 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x15c056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15c1284e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x15c056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15c128548 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x15c056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15c1285b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x15c056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15c128618 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x15c056390 '__SVBool_t'
|-TypedefDecl 0x15c128680 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x15c0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15c1286e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x15c0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15c128750 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x15c0563f0 '__SVCount_t'
|-TypedefDecl 0x15c1287f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15c1287b0 'char *'
|   `-BuiltinType 0x15c0556b0 'char'
|-TypedefDecl 0x15c128868 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15c1287b0 'char *'
|   `-BuiltinType 0x15c0556b0 'char'
|-FunctionDecl 0x15c142148 <dataset_diviso_filec/func10409_vuln.c:1:1, line:70:1> line:1:12 invalid rxrpc_krb5_decode_principal 'int (struct krb5_principal *, const int **, unsigned int *)' static
| |-ParmVarDecl 0x15c128e48 <col:40, col:63> col:63 used princ 'struct krb5_principal *'
| |-ParmVarDecl 0x15c128f20 <line:2:12, col:27> col:27 invalid _xdr 'const int **'
| |-ParmVarDecl 0x15c142000 <line:3:12, col:26> col:26 used _toklen 'unsigned int *'
| `-CompoundStmt 0x15c1472a8 <line:4:1, line:70:1>
|   |-DeclStmt 0x15c1422d8 <line:5:2, col:27>
|   | `-VarDecl 0x15c142220 <col:2, col:16> col:16 referenced invalid xdr 'const int *'
|   |-DeclStmt 0x15c142580 <line:6:2, col:52>
|   | |-VarDecl 0x15c142308 <col:2, col:25> col:15 used toklen 'unsigned int' cinit
|   | | `-ImplicitCastExpr 0x15c1423c0 <col:24, col:25> 'unsigned int' <LValueToRValue>
|   | |   `-UnaryOperator 0x15c1423a8 <col:24, col:25> 'unsigned int' lvalue prefix '*' cannot overflow
|   | |     `-ImplicitCastExpr 0x15c142390 <col:25> 'unsigned int *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x15c142370 <col:25> 'unsigned int *' lvalue ParmVar 0x15c142000 '_toklen' 'unsigned int *'
|   | |-VarDecl 0x15c1423f0 <col:2, col:34> col:34 used n_parts 'unsigned int'
|   | |-VarDecl 0x15c142470 <col:2, col:43> col:43 used loop 'unsigned int'
|   | `-VarDecl 0x15c1424f0 <col:2, col:49> col:49 used tmp 'unsigned int'
|   |-IfStmt 0x15c1426d0 <line:9:2, line:10:11>
|   | |-BinaryOperator 0x15c142608 <line:9:6, col:16> 'int' '<='
|   | | |-ImplicitCastExpr 0x15c1425d8 <col:6> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x15c142598 <col:6> 'unsigned int' lvalue Var 0x15c142308 'toklen' 'unsigned int'
|   | | `-ImplicitCastExpr 0x15c1425f0 <col:16> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x15c1425b8 <col:16> 'int' 12
|   | `-ReturnStmt 0x15c1426c0 <line:10:3, col:11>
|   |   `-UnaryOperator 0x15c1426a8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |     `-ImplicitCastExpr 0x15c142690 <col:11> '<dependent type>' contains-errors <LValueToRValue>
|   |       `-RecoveryExpr 0x15c142670 <col:11> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x15c142c10 <line:12:2, line:13:60> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x15c142850 <line:12:2> 'int ()' Function 0x15c142798 '_enter' 'int ()'
|   | |-StringLiteral 0x15c1428b0 <col:9> 'char[4]' lvalue "STR"
|   | |-CallExpr 0x15c142a48 <line:13:9, col:21> '<dependent type>' contains-errors
|   | | |-DeclRefExpr 0x15c1429b0 <col:9> 'int ()' Function 0x15c1428f8 'ntohl' 'int ()'
|   | | `-ArraySubscriptExpr 0x15c142a28 <col:15, col:20> '<dependent type>' contains-errors lvalue
|   | |   |-ImplicitCastExpr 0x15c142a10 <col:15> '<dependent type>' contains-errors <LValueToRValue>
|   | |   | `-RecoveryExpr 0x15c1429d0 <col:15> '<dependent type>' contains-errors lvalue
|   | |   `-IntegerLiteral 0x15c1429f0 <col:19> 'int' 0
|   | |-CallExpr 0x15c142b08 <col:24, col:36> '<dependent type>' contains-errors
|   | | |-DeclRefExpr 0x15c142a70 <col:24> 'int ()' Function 0x15c1428f8 'ntohl' 'int ()'
|   | | `-ArraySubscriptExpr 0x15c142ae8 <col:30, col:35> '<dependent type>' contains-errors lvalue
|   | |   |-ImplicitCastExpr 0x15c142ad0 <col:30> '<dependent type>' contains-errors <LValueToRValue>
|   | |   | `-RecoveryExpr 0x15c142a90 <col:30> '<dependent type>' contains-errors lvalue
|   | |   `-IntegerLiteral 0x15c142ab0 <col:34> 'int' 1
|   | |-CallExpr 0x15c142bc8 <col:39, col:51> '<dependent type>' contains-errors
|   | | |-DeclRefExpr 0x15c142b30 <col:39> 'int ()' Function 0x15c1428f8 'ntohl' 'int ()'
|   | | `-ArraySubscriptExpr 0x15c142ba8 <col:45, col:50> '<dependent type>' contains-errors lvalue
|   | |   |-ImplicitCastExpr 0x15c142b90 <col:45> '<dependent type>' contains-errors <LValueToRValue>
|   | |   | `-RecoveryExpr 0x15c142b50 <col:45> '<dependent type>' contains-errors lvalue
|   | |   `-IntegerLiteral 0x15c142b70 <col:49> 'int' 2
|   | `-DeclRefExpr 0x15c142bf0 <col:54> 'unsigned int' lvalue Var 0x15c142308 'toklen' 'unsigned int'
|   |-BinaryOperator 0x15c142d10 <line:15:2, col:24> 'unsigned int' contains-errors '='
|   | |-DeclRefExpr 0x15c142c58 <col:2> 'unsigned int' lvalue Var 0x15c1423f0 'n_parts' 'unsigned int'
|   | `-CallExpr 0x15c142ce8 <col:12, col:24> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x15c142c78 <col:12> 'int ()' Function 0x15c1428f8 'ntohl' 'int ()'
|   |   `-UnaryOperator 0x15c142cd0 <col:18, col:22> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |     `-UnaryOperator 0x15c142cb8 <col:19, col:22> '<dependent type>' contains-errors postfix '++' cannot overflow
|   |       `-RecoveryExpr 0x15c142c98 <col:19> '<dependent type>' contains-errors lvalue
|   |-CompoundAssignOperator 0x15c142d88 <line:16:2, col:12> 'unsigned int' '-=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   | |-DeclRefExpr 0x15c142d30 <col:2> 'unsigned int' lvalue Var 0x15c142308 'toklen' 'unsigned int'
|   | `-ImplicitCastExpr 0x15c142d70 <col:12> 'unsigned int' <IntegralCast>
|   |   `-IntegerLiteral 0x15c142d50 <col:12> 'int' 4
|   |-IfStmt 0x15c143678 <line:17:2, line:18:11>
|   | |-BinaryOperator 0x15c142fa0 <line:17:6, col:32> 'int' contains-errors '||'
|   | | |-BinaryOperator 0x15c142f40 <col:6, col:17> 'int' '<='
|   | | | |-ImplicitCastExpr 0x15c142f10 <col:6> 'unsigned int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x15c142db8 <col:6> 'unsigned int' lvalue Var 0x15c1423f0 'n_parts' 'unsigned int'
|   | | | `-ImplicitCastExpr 0x15c142f28 <col:17> 'unsigned int' <IntegralCast>
|   | | |   `-IntegerLiteral 0x15c142dd8 <col:17> 'int' 0
|   | | `-BinaryOperator 0x15c142f80 <col:22, col:32> 'int' contains-errors '>'
|   | |   |-DeclRefExpr 0x15c142e48 <col:22> 'unsigned int' lvalue Var 0x15c1423f0 'n_parts' 'unsigned int'
|   | |   `-RecoveryExpr 0x15c142f60 <col:32> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x15c143668 <line:18:3, col:11>
|   |   `-UnaryOperator 0x15c143650 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |     `-ImplicitCastExpr 0x15c143638 <col:11> '<dependent type>' contains-errors <LValueToRValue>
|   |       `-RecoveryExpr 0x15c143618 <col:11> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x15c143718 <line:19:2, col:24> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x15c1436d0 <col:2, col:9> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x15c143698 <col:2> 'struct krb5_principal *' lvalue ParmVar 0x15c128e48 'princ' 'struct krb5_principal *'
|   | `-DeclRefExpr 0x15c1436f8 <col:24> 'unsigned int' lvalue Var 0x15c1423f0 'n_parts' 'unsigned int'
|   |-IfStmt 0x15c143940 <line:21:2, line:22:11>
|   | |-BinaryOperator 0x15c143878 <line:21:6, col:32> 'int' '<='
|   | | |-ImplicitCastExpr 0x15c143860 <col:6> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x15c143738 <col:6> 'unsigned int' lvalue Var 0x15c142308 'toklen' 'unsigned int'
|   | | `-BinaryOperator 0x15c143840 <col:16, col:32> 'unsigned int' '*'
|   | |   |-ParenExpr 0x15c1437e8 <col:16, col:28> 'unsigned int'
|   | |   | `-BinaryOperator 0x15c1437c8 <col:17, col:27> 'unsigned int' '+'
|   | |   |   |-ImplicitCastExpr 0x15c143798 <col:17> 'unsigned int' <LValueToRValue>
|   | |   |   | `-DeclRefExpr 0x15c143758 <col:17> 'unsigned int' lvalue Var 0x15c1423f0 'n_parts' 'unsigned int'
|   | |   |   `-ImplicitCastExpr 0x15c1437b0 <col:27> 'unsigned int' <IntegralCast>
|   | |   |     `-IntegerLiteral 0x15c143778 <col:27> 'int' 1
|   | |   `-ImplicitCastExpr 0x15c143828 <col:32> 'unsigned int' <IntegralCast>
|   | |     `-IntegerLiteral 0x15c143808 <col:32> 'int' 4
|   | `-ReturnStmt 0x15c143930 <line:22:3, col:11>
|   |   `-UnaryOperator 0x15c143918 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |     `-ImplicitCastExpr 0x15c143900 <col:11> '<dependent type>' contains-errors <LValueToRValue>
|   |       `-RecoveryExpr 0x15c1438e0 <col:11> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x15c143c50 <line:24:2, col:65> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x15c143998 <col:2, col:9> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x15c143960 <col:2> 'struct krb5_principal *' lvalue ParmVar 0x15c128e48 'princ' 'struct krb5_principal *'
|   | `-CallExpr 0x15c143c18 <col:22, col:65> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x15c143aa0 <col:22> 'int ()' Function 0x15c1439e8 'kcalloc' 'int ()'
|   |   |-DeclRefExpr 0x15c143ac0 <col:30> 'unsigned int' lvalue Var 0x15c1423f0 'n_parts' 'unsigned int'
|   |   |-UnaryExprOrTypeTraitExpr 0x15c143bd8 <col:39, col:52> 'unsigned long' sizeof 'char *'
|   |   `-RecoveryExpr 0x15c143bf8 <col:55> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x15c143da8 <line:25:2, line:26:11>
|   | |-UnaryOperator 0x15c143ce8 <line:25:6, col:14> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x15c143cd0 <col:7, col:14> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x15c143ca8 <col:7, col:14> '<dependent type>' contains-errors lvalue
|   | |     `-DeclRefExpr 0x15c143c70 <col:7> 'struct krb5_principal *' lvalue ParmVar 0x15c128e48 'princ' 'struct krb5_principal *'
|   | `-ReturnStmt 0x15c143d98 <line:26:3, col:11>
|   |   `-UnaryOperator 0x15c143d80 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |     `-ImplicitCastExpr 0x15c143d68 <col:11> '<dependent type>' contains-errors <LValueToRValue>
|   |       `-RecoveryExpr 0x15c143d48 <col:11> '<dependent type>' contains-errors lvalue
|   |-ForStmt 0x15c146290 <line:28:2, line:45:2>
|   | |-BinaryOperator 0x15c143e20 <line:28:7, col:14> 'unsigned int' '='
|   | | |-DeclRefExpr 0x15c143dc8 <col:7> 'unsigned int' lvalue Var 0x15c142470 'loop' 'unsigned int'
|   | | `-ImplicitCastExpr 0x15c143e08 <col:14> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x15c143de8 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x15c143eb0 <col:17, col:24> 'int' '<'
|   | | |-ImplicitCastExpr 0x15c143e80 <col:17> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x15c143e40 <col:17> 'unsigned int' lvalue Var 0x15c142470 'loop' 'unsigned int'
|   | | `-ImplicitCastExpr 0x15c143e98 <col:24> 'unsigned int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x15c143e60 <col:24> 'unsigned int' lvalue Var 0x15c1423f0 'n_parts' 'unsigned int'
|   | |-UnaryOperator 0x15c143ef0 <col:33, col:37> 'unsigned int' postfix '++'
|   | | `-DeclRefExpr 0x15c143ed0 <col:33> 'unsigned int' lvalue Var 0x15c142470 'loop' 'unsigned int'
|   | `-CompoundStmt 0x15c146230 <col:41, line:45:2>
|   |   |-IfStmt 0x15c144040 <line:29:3, line:30:12>
|   |   | |-BinaryOperator 0x15c143f78 <line:29:7, col:16> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x15c143f48 <col:7> 'unsigned int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x15c143f08 <col:7> 'unsigned int' lvalue Var 0x15c142308 'toklen' 'unsigned int'
|   |   | | `-ImplicitCastExpr 0x15c143f60 <col:16> 'unsigned int' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x15c143f28 <col:16> 'int' 4
|   |   | `-ReturnStmt 0x15c144030 <line:30:4, col:12>
|   |   |   `-UnaryOperator 0x15c144018 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |   |     `-ImplicitCastExpr 0x15c144000 <col:12> '<dependent type>' contains-errors <LValueToRValue>
|   |   |       `-RecoveryExpr 0x15c143fe0 <col:12> '<dependent type>' contains-errors lvalue
|   |   |-BinaryOperator 0x15c144118 <line:31:3, col:21> 'unsigned int' contains-errors '='
|   |   | |-DeclRefExpr 0x15c144060 <col:3> 'unsigned int' lvalue Var 0x15c1424f0 'tmp' 'unsigned int'
|   |   | `-CallExpr 0x15c1440f0 <col:9, col:21> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x15c144080 <col:9> 'int ()' Function 0x15c1428f8 'ntohl' 'int ()'
|   |   |   `-UnaryOperator 0x15c1440d8 <col:15, col:19> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |   |     `-UnaryOperator 0x15c1440c0 <col:16, col:19> '<dependent type>' contains-errors postfix '++' cannot overflow
|   |   |       `-RecoveryExpr 0x15c1440a0 <col:16> '<dependent type>' contains-errors lvalue
|   |   |-CompoundAssignOperator 0x15c144190 <line:32:3, col:13> 'unsigned int' '-=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |   | |-DeclRefExpr 0x15c144138 <col:3> 'unsigned int' lvalue Var 0x15c142308 'toklen' 'unsigned int'
|   |   | `-ImplicitCastExpr 0x15c144178 <col:13> 'unsigned int' <IntegralCast>
|   |   |   `-IntegerLiteral 0x15c144158 <col:13> 'int' 4
|   |   |-IfStmt 0x15c144470 <line:33:3, line:34:12>
|   |   | |-BinaryOperator 0x15c1443a8 <line:33:7, col:25> 'int' contains-errors '||'
|   |   | | |-BinaryOperator 0x15c144348 <col:7, col:14> 'int' '<='
|   |   | | | |-ImplicitCastExpr 0x15c144318 <col:7> 'unsigned int' <LValueToRValue>
|   |   | | | | `-DeclRefExpr 0x15c1441c0 <col:7> 'unsigned int' lvalue Var 0x15c1424f0 'tmp' 'unsigned int'
|   |   | | | `-ImplicitCastExpr 0x15c144330 <col:14> 'unsigned int' <IntegralCast>
|   |   | | |   `-IntegerLiteral 0x15c1441e0 <col:14> 'int' 0
|   |   | | `-BinaryOperator 0x15c144388 <col:19, col:25> 'int' contains-errors '>'
|   |   | |   |-DeclRefExpr 0x15c144250 <col:19> 'unsigned int' lvalue Var 0x15c1424f0 'tmp' 'unsigned int'
|   |   | |   `-RecoveryExpr 0x15c144368 <col:25> '<dependent type>' contains-errors lvalue
|   |   | `-ReturnStmt 0x15c144460 <line:34:4, col:12>
|   |   |   `-UnaryOperator 0x15c144448 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |   |     `-ImplicitCastExpr 0x15c144430 <col:12> '<dependent type>' contains-errors <LValueToRValue>
|   |   |       `-RecoveryExpr 0x15c144410 <col:12> '<dependent type>' contains-errors lvalue
|   |   |-IfStmt 0x15c1445c8 <line:35:3, line:36:12>
|   |   | |-BinaryOperator 0x15c144500 <line:35:7, col:13> 'int' '>'
|   |   | | |-ImplicitCastExpr 0x15c1444d0 <col:7> 'unsigned int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x15c144490 <col:7> 'unsigned int' lvalue Var 0x15c1424f0 'tmp' 'unsigned int'
|   |   | | `-ImplicitCastExpr 0x15c1444e8 <col:13> 'unsigned int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x15c1444b0 <col:13> 'unsigned int' lvalue Var 0x15c142308 'toklen' 'unsigned int'
|   |   | `-ReturnStmt 0x15c1445b8 <line:36:4, col:12>
|   |   |   `-UnaryOperator 0x15c1445a0 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |   |     `-ImplicitCastExpr 0x15c144588 <col:12> '<dependent type>' contains-errors <LValueToRValue>
|   |   |       `-RecoveryExpr 0x15c144568 <col:12> '<dependent type>' contains-errors lvalue
|   |   |-CallExpr 0x15c145da0 <line:40:3, col:43> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x15c145c28 <col:3> 'void *(void *, const void *, unsigned long)' Function 0x15c1459d8 'memcpy' 'void *(void *, const void *, unsigned long)'
|   |   | |-ArraySubscriptExpr 0x15c145cf8 <col:10, col:32> '<dependent type>' contains-errors lvalue
|   |   | | |-ImplicitCastExpr 0x15c145cc8 <col:10, col:17> '<dependent type>' contains-errors <LValueToRValue>
|   |   | | | `-RecoveryExpr 0x15c145c80 <col:10, col:17> '<dependent type>' contains-errors lvalue
|   |   | | |   `-DeclRefExpr 0x15c145c48 <col:10> 'struct krb5_principal *' lvalue ParmVar 0x15c128e48 'princ' 'struct krb5_principal *'
|   |   | | `-ImplicitCastExpr 0x15c145ce0 <col:28> 'unsigned int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x15c145ca8 <col:28> 'unsigned int' lvalue Var 0x15c142470 'loop' 'unsigned int'
|   |   | |-RecoveryExpr 0x15c145d18 <col:35> '<dependent type>' contains-errors lvalue
|   |   | `-DeclRefExpr 0x15c145d38 <col:40> 'unsigned int' lvalue Var 0x15c1424f0 'tmp' 'unsigned int'
|   |   |-BinaryOperator 0x15c145f38 <line:41:3, col:34> '<dependent type>' contains-errors '='
|   |   | |-ArraySubscriptExpr 0x15c145ef8 <col:3, col:30> '<dependent type>' contains-errors lvalue
|   |   | | |-ImplicitCastExpr 0x15c145ec8 <col:3, col:25> '<dependent type>' contains-errors <LValueToRValue>
|   |   | | | `-ArraySubscriptExpr 0x15c145e88 <col:3, col:25> '<dependent type>' contains-errors lvalue
|   |   | | |   |-ImplicitCastExpr 0x15c145e58 <col:3, col:10> '<dependent type>' contains-errors <LValueToRValue>
|   |   | | |   | `-RecoveryExpr 0x15c145e10 <col:3, col:10> '<dependent type>' contains-errors lvalue
|   |   | | |   |   `-DeclRefExpr 0x15c145dd8 <col:3> 'struct krb5_principal *' lvalue ParmVar 0x15c128e48 'princ' 'struct krb5_principal *'
|   |   | | |   `-ImplicitCastExpr 0x15c145e70 <col:21> 'unsigned int' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x15c145e38 <col:21> 'unsigned int' lvalue Var 0x15c142470 'loop' 'unsigned int'
|   |   | | `-ImplicitCastExpr 0x15c145ee0 <col:27> 'unsigned int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x15c145ea8 <col:27> 'unsigned int' lvalue Var 0x15c1424f0 'tmp' 'unsigned int'
|   |   | `-IntegerLiteral 0x15c145f18 <col:34> 'int' 0
|   |   |-BinaryOperator 0x15c146098 <line:42:3, col:22> 'unsigned int' '='
|   |   | |-DeclRefExpr 0x15c145f58 <col:3> 'unsigned int' lvalue Var 0x15c1424f0 'tmp' 'unsigned int'
|   |   | `-BinaryOperator 0x15c146078 <col:9, col:22> 'unsigned int' '&'
|   |   |   |-ParenExpr 0x15c146008 <col:9, col:17> 'unsigned int'
|   |   |   | `-BinaryOperator 0x15c145fe8 <col:10, col:16> 'unsigned int' '+'
|   |   |   |   |-ImplicitCastExpr 0x15c145fb8 <col:10> 'unsigned int' <LValueToRValue>
|   |   |   |   | `-DeclRefExpr 0x15c145f78 <col:10> 'unsigned int' lvalue Var 0x15c1424f0 'tmp' 'unsigned int'
|   |   |   |   `-ImplicitCastExpr 0x15c145fd0 <col:16> 'unsigned int' <IntegralCast>
|   |   |   |     `-IntegerLiteral 0x15c145f98 <col:16> 'int' 3
|   |   |   `-ImplicitCastExpr 0x15c146060 <col:21, col:22> 'unsigned int' <IntegralCast>
|   |   |     `-UnaryOperator 0x15c146048 <col:21, col:22> 'int' prefix '~' cannot overflow
|   |   |       `-IntegerLiteral 0x15c146028 <col:22> 'int' 3
|   |   |-CompoundAssignOperator 0x15c146110 <line:43:3, col:13> 'unsigned int' '-=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |   | |-DeclRefExpr 0x15c1460b8 <col:3> 'unsigned int' lvalue Var 0x15c142308 'toklen' 'unsigned int'
|   |   | `-ImplicitCastExpr 0x15c1460f8 <col:13> 'unsigned int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x15c1460d8 <col:13> 'unsigned int' lvalue Var 0x15c1424f0 'tmp' 'unsigned int'
|   |   `-CompoundAssignOperator 0x15c146200 <line:44:3, col:17> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |     |-RecoveryExpr 0x15c146160 <col:3> '<dependent type>' contains-errors lvalue
|   |     | `-DeclRefExpr 0x15c146140 <col:3> 'const int *' lvalue Var 0x15c142220 'xdr' 'const int *'
|   |     `-BinaryOperator 0x15c1461e0 <col:10, col:17> 'unsigned int' '>>'
|   |       |-ImplicitCastExpr 0x15c1461c8 <col:10> 'unsigned int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x15c146188 <col:10> 'unsigned int' lvalue Var 0x15c1424f0 'tmp' 'unsigned int'
|   |       `-IntegerLiteral 0x15c1461a8 <col:17> 'int' 2
|   |-BinaryOperator 0x15c146410 <line:49:2, col:20> 'unsigned int' contains-errors '='
|   | |-DeclRefExpr 0x15c146358 <col:2> 'unsigned int' lvalue Var 0x15c1424f0 'tmp' 'unsigned int'
|   | `-CallExpr 0x15c1463e8 <col:8, col:20> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x15c146378 <col:8> 'int ()' Function 0x15c1428f8 'ntohl' 'int ()'
|   |   `-UnaryOperator 0x15c1463d0 <col:14, col:18> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |     `-UnaryOperator 0x15c1463b8 <col:15, col:18> '<dependent type>' contains-errors postfix '++' cannot overflow
|   |       `-RecoveryExpr 0x15c146398 <col:15> '<dependent type>' contains-errors lvalue
|   |-CompoundAssignOperator 0x15c146488 <line:50:2, col:12> 'unsigned int' '-=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   | |-DeclRefExpr 0x15c146430 <col:2> 'unsigned int' lvalue Var 0x15c142308 'toklen' 'unsigned int'
|   | `-ImplicitCastExpr 0x15c146470 <col:12> 'unsigned int' <IntegralCast>
|   |   `-IntegerLiteral 0x15c146450 <col:12> 'int' 4
|   |-CallExpr 0x15c1468c8 <line:58:2, col:31> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x15c1467c0 <col:2> 'void *(void *, const void *, unsigned long)' Function 0x15c1459d8 'memcpy' 'void *(void *, const void *, unsigned long)'
|   | |-RecoveryExpr 0x15c146818 <col:9, col:16> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x15c1467e0 <col:9> 'struct krb5_principal *' lvalue ParmVar 0x15c128e48 'princ' 'struct krb5_principal *'
|   | |-RecoveryExpr 0x15c146840 <col:23> '<dependent type>' contains-errors lvalue
|   | `-DeclRefExpr 0x15c146860 <col:28> 'unsigned int' lvalue Var 0x15c1424f0 'tmp' 'unsigned int'
|   |-BinaryOperator 0x15c1469f0 <line:59:2, col:22> '<dependent type>' contains-errors '='
|   | |-ArraySubscriptExpr 0x15c1469b0 <col:2, col:18> '<dependent type>' contains-errors lvalue
|   | | |-ImplicitCastExpr 0x15c146980 <col:2, col:9> '<dependent type>' contains-errors <LValueToRValue>
|   | | | `-RecoveryExpr 0x15c146938 <col:2, col:9> '<dependent type>' contains-errors lvalue
|   | | |   `-DeclRefExpr 0x15c146900 <col:2> 'struct krb5_principal *' lvalue ParmVar 0x15c128e48 'princ' 'struct krb5_principal *'
|   | | `-ImplicitCastExpr 0x15c146998 <col:15> 'unsigned int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x15c146960 <col:15> 'unsigned int' lvalue Var 0x15c1424f0 'tmp' 'unsigned int'
|   | `-IntegerLiteral 0x15c1469d0 <col:22> 'int' 0
|   |-BinaryOperator 0x15c146b50 <line:60:2, col:21> 'unsigned int' '='
|   | |-DeclRefExpr 0x15c146a10 <col:2> 'unsigned int' lvalue Var 0x15c1424f0 'tmp' 'unsigned int'
|   | `-BinaryOperator 0x15c146b30 <col:8, col:21> 'unsigned int' '&'
|   |   |-ParenExpr 0x15c146ac0 <col:8, col:16> 'unsigned int'
|   |   | `-BinaryOperator 0x15c146aa0 <col:9, col:15> 'unsigned int' '+'
|   |   |   |-ImplicitCastExpr 0x15c146a70 <col:9> 'unsigned int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x15c146a30 <col:9> 'unsigned int' lvalue Var 0x15c1424f0 'tmp' 'unsigned int'
|   |   |   `-ImplicitCastExpr 0x15c146a88 <col:15> 'unsigned int' <IntegralCast>
|   |   |     `-IntegerLiteral 0x15c146a50 <col:15> 'int' 3
|   |   `-ImplicitCastExpr 0x15c146b18 <col:20, col:21> 'unsigned int' <IntegralCast>
|   |     `-UnaryOperator 0x15c146b00 <col:20, col:21> 'int' prefix '~' cannot overflow
|   |       `-IntegerLiteral 0x15c146ae0 <col:21> 'int' 3
|   |-CompoundAssignOperator 0x15c146bc8 <line:61:2, col:12> 'unsigned int' '-=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   | |-DeclRefExpr 0x15c146b70 <col:2> 'unsigned int' lvalue Var 0x15c142308 'toklen' 'unsigned int'
|   | `-ImplicitCastExpr 0x15c146bb0 <col:12> 'unsigned int' <LValueToRValue>
|   |   `-DeclRefExpr 0x15c146b90 <col:12> 'unsigned int' lvalue Var 0x15c1424f0 'tmp' 'unsigned int'
|   |-CompoundAssignOperator 0x15c146cb8 <line:62:2, col:16> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   | |-RecoveryExpr 0x15c146c18 <col:2> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x15c146bf8 <col:2> 'const int *' lvalue Var 0x15c142220 'xdr' 'const int *'
|   | `-BinaryOperator 0x15c146c98 <col:9, col:16> 'unsigned int' '>>'
|   |   |-ImplicitCastExpr 0x15c146c80 <col:9> 'unsigned int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x15c146c40 <col:9> 'unsigned int' lvalue Var 0x15c1424f0 'tmp' 'unsigned int'
|   |   `-IntegerLiteral 0x15c146c60 <col:16> 'int' 2
|   |-CallExpr 0x15c146f20 <line:64:2, col:50> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x15c146dc8 <col:2> 'int ()' Function 0x15c146d10 '_debug' 'int ()'
|   | |-StringLiteral 0x15c146de8 <col:9> 'char[4]' lvalue "STR"
|   | |-ArraySubscriptExpr 0x15c146ea0 <col:16, col:35> '<dependent type>' contains-errors lvalue
|   | | |-ImplicitCastExpr 0x15c146e88 <col:16, col:23> '<dependent type>' contains-errors <LValueToRValue>
|   | | | `-RecoveryExpr 0x15c146e40 <col:16, col:23> '<dependent type>' contains-errors lvalue
|   | | |   `-DeclRefExpr 0x15c146e08 <col:16> 'struct krb5_principal *' lvalue ParmVar 0x15c128e48 'princ' 'struct krb5_principal *'
|   | | `-IntegerLiteral 0x15c146e68 <col:34> 'int' 0
|   | `-RecoveryExpr 0x15c146ef8 <col:38, col:45> '<dependent type>' contains-errors lvalue
|   |   `-DeclRefExpr 0x15c146ec0 <col:38> 'struct krb5_principal *' lvalue ParmVar 0x15c128e48 'princ' 'struct krb5_principal *'
|   |-BinaryOperator 0x15c146fc8 <line:66:2, col:10> '<dependent type>' contains-errors '='
|   | |-UnaryOperator 0x15c146f90 <col:2, col:3> '<dependent type>' contains-errors prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x15c146f78 <col:3> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x15c146f58 <col:3> '<dependent type>' contains-errors lvalue
|   | `-RecoveryExpr 0x15c146fa8 <col:10> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x15c147070 <line:67:2, col:13> 'unsigned int' '='
|   | |-UnaryOperator 0x15c147020 <col:2, col:3> 'unsigned int' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x15c147008 <col:3> 'unsigned int *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x15c146fe8 <col:3> 'unsigned int *' lvalue ParmVar 0x15c142000 '_toklen' 'unsigned int *'
|   | `-ImplicitCastExpr 0x15c147058 <col:13> 'unsigned int' <LValueToRValue>
|   |   `-DeclRefExpr 0x15c147038 <col:13> 'unsigned int' lvalue Var 0x15c142308 'toklen' 'unsigned int'
|   |-CallExpr 0x15c147218 <line:68:2, col:22> 'int'
|   | |-ImplicitCastExpr 0x15c147200 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x15c147170 <col:2> 'int ()' Function 0x15c1470b8 '_leave' 'int ()'
|   | |-ImplicitCastExpr 0x15c147248 <col:9> 'char *' <ArrayToPointerDecay>
|   | | `-StringLiteral 0x15c147190 <col:9> 'char[4]' lvalue "STR"
|   | `-ImplicitCastExpr 0x15c147260 <col:16> 'unsigned int' <LValueToRValue>
|   |   `-DeclRefExpr 0x15c1471b0 <col:16> 'unsigned int' lvalue Var 0x15c142308 'toklen' 'unsigned int'
|   `-ReturnStmt 0x15c147298 <line:69:2, col:9>
|     `-IntegerLiteral 0x15c147278 <col:9> 'int' 0
`-FunctionDecl 0x15c1459d8 <line:40:3> col:3 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x15c145ad8 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x15c145b40 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x15c145ba8 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x15c145a80 <<invalid sloc>> Implicit 882
