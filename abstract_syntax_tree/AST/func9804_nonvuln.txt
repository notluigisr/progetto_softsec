TranslationUnitDecl 0x148855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1488564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x148855bd0 '__int128'
|-TypedefDecl 0x148856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x148855bf0 'unsigned __int128'
|-TypedefDecl 0x14900be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14900bc00 'struct __NSConstantString_tag'
|   `-Record 0x148856580 '__NSConstantString_tag'
|-TypedefDecl 0x14900be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x148855d90 '__SVInt8_t'
|-TypedefDecl 0x14900bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x148855db0 '__SVInt16_t'
|-TypedefDecl 0x14900bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x148855dd0 '__SVInt32_t'
|-TypedefDecl 0x14900bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x148855df0 '__SVInt64_t'
|-TypedefDecl 0x14900c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x148855e10 '__SVUint8_t'
|-TypedefDecl 0x14900c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x148855e30 '__SVUint16_t'
|-TypedefDecl 0x14900c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x148855e50 '__SVUint32_t'
|-TypedefDecl 0x14900c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x148855e70 '__SVUint64_t'
|-TypedefDecl 0x14900c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x148855e90 '__SVFloat16_t'
|-TypedefDecl 0x14900c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x148855eb0 '__SVFloat32_t'
|-TypedefDecl 0x14900c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x148855ed0 '__SVFloat64_t'
|-TypedefDecl 0x14900c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x148855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14900c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x148855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14900c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x148855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14900c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x148855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14900c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x148855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14900c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x148855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14900c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x148855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14900c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x148855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14900c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x148855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14900c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x148856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14900c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x148856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14900c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x148856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14900c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x148856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14900c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x148856090 '__clang_svint8x3_t'
|-TypedefDecl 0x14900c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1488560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14900c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1488560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14900c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1488560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14900c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x148856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14900ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x148856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14900cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x148856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14900cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x148856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14900cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x148856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14900d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1488561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14900d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1488561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14900d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1488561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14900d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x148856210 '__clang_svint8x4_t'
|-TypedefDecl 0x14900d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x148856230 '__clang_svint16x4_t'
|-TypedefDecl 0x14900d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x148856250 '__clang_svint32x4_t'
|-TypedefDecl 0x14900d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x148856270 '__clang_svint64x4_t'
|-TypedefDecl 0x14900d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x148856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14900d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1488562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14900d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1488562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14900d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1488562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14900d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x148856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14900d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x148856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14900d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x148856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14900d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x148856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14900da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x148856390 '__SVBool_t'
|-TypedefDecl 0x14900da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1488563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14900dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1488563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14900db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1488563f0 '__SVCount_t'
|-TypedefDecl 0x14900dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14900dbb0 'char *'
|   `-BuiltinType 0x1488556b0 'char'
|-TypedefDecl 0x14900dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14900dbb0 'char *'
|   `-BuiltinType 0x1488556b0 'char'
|-FunctionDecl 0x14900dfe8 <dataset_diviso_filec/func9804_nonvuln.c:1:1, line:98:1> line:1:5 invalid security_get_user_sids 'int (int, char *, int **, int *)'
| |-ParmVarDecl 0x14900dcf0 <col:28, col:32> col:32 invalid fromsid 'int'
| |-ParmVarDecl 0x14900dd70 <line:2:7, col:13> col:13 used username 'char *'
| |-ParmVarDecl 0x14900de60 <line:3:7, col:13> col:13 referenced invalid sids 'int **'
| |-ParmVarDecl 0x14900dee0 <line:4:7, col:12> col:12 invalid nel 'int *'
| `-CompoundStmt 0x14980dc50 <line:5:1, line:98:1>
|   |-DeclStmt 0x149808b50 <line:6:2, col:34>
|   | |-RecordDecl 0x14900e0b0 <col:2, col:9> col:9 struct context
|   | |-VarDecl 0x14900e218 <col:2, col:18> col:18 used fromcon 'struct context *'
|   | `-VarDecl 0x14900e2a0 <col:2, col:27> col:27 referenced invalid usercon 'struct context'
|   |-DeclStmt 0x149808e28 <line:9:2, col:25>
|   | |-RecordDecl 0x149808c38 <col:2, col:9> col:9 struct user_datum
|   | `-VarDecl 0x149808da8 <col:2, col:21> col:21 used user 'struct user_datum *'
|   |-DeclStmt 0x149809028 <line:10:2, col:25>
|   | |-RecordDecl 0x149808e40 <col:2, col:9> col:9 struct role_datum
|   | `-VarDecl 0x149808fa8 <col:2, col:21> col:21 used role 'struct role_datum *'
|   |-DeclStmt 0x1498092c0 <line:11:2, col:36>
|   | |-RecordDecl 0x149809040 <col:2, col:9> col:9 struct ebitmap_node
|   | |-VarDecl 0x1498091a8 <col:2, col:23> col:23 used rnode 'struct ebitmap_node *'
|   | `-VarDecl 0x149809238 <col:2, col:31> col:31 used tnode 'struct ebitmap_node *'
|   |-DeclStmt 0x149809498 <line:12:2, col:18>
|   | |-VarDecl 0x1498092f0 <col:2, col:11> col:6 used rc 'int' cinit
|   | | `-IntegerLiteral 0x149809358 <col:11> 'int' 0
|   | |-VarDecl 0x149809390 <col:2, col:14> col:14 used i 'int'
|   | `-VarDecl 0x149809410 <col:2, col:17> col:17 used j 'int'
|   |-BinaryOperator 0x1498095b8 <line:14:2, col:10> '<dependent type>' contains-errors '='
|   | |-UnaryOperator 0x149809580 <col:2, col:3> '<dependent type>' contains-errors prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x149809568 <col:3> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x1498094b0 <col:3> '<dependent type>' contains-errors lvalue
|   | `-RecoveryExpr 0x149809598 <col:10> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x149809648 <line:15:2, col:9> '<dependent type>' contains-errors '='
|   | |-UnaryOperator 0x149809610 <col:2, col:3> '<dependent type>' contains-errors prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x1498095f8 <col:3> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x1498095d8 <col:3> '<dependent type>' contains-errors lvalue
|   | `-IntegerLiteral 0x149809628 <col:9> 'int' 0
|   |-IfStmt 0x149809768 <line:17:2, line:18:8>
|   | |-UnaryOperator 0x1498096e8 <line:17:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x1498096d0 <col:7> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x1498096b0 <col:7> '<dependent type>' contains-errors lvalue
|   | `-GotoStmt 0x149809750 <line:18:3, col:8> 'out' 0x149809700
|   |-CallExpr 0x14980af90 <line:20:2, col:26> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x14980aee0 <col:2> 'int ()' Function 0x14980ae28 'read_lock' 'int ()'
|   | `-UnaryOperator 0x14980af78 <col:12, col:13> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   `-RecoveryExpr 0x14980af58 <col:13> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x14980b0f0 <line:22:2, col:23> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x14980b098 <col:2> 'int ()' Function 0x14980afe0 'context_init' 'int ()'
|   | `-UnaryOperator 0x14980b0d8 <col:15, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   `-RecoveryExpr 0x14980b0b8 <col:16> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x14980b1f0 <line:24:2, col:8> 'int' contains-errors '='
|   | |-DeclRefExpr 0x14980b118 <col:2> 'int' lvalue Var 0x1498092f0 'rc' 'int'
|   | `-UnaryOperator 0x14980b1d8 <col:7, col:8> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |   `-ImplicitCastExpr 0x14980b1c0 <col:8> '<dependent type>' contains-errors <LValueToRValue>
|   |     `-RecoveryExpr 0x14980b1a0 <col:8> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x14980b438 <line:25:2, col:42> 'struct context *' contains-errors '='
|   | |-DeclRefExpr 0x14980b210 <col:2> 'struct context *' lvalue Var 0x14900e218 'fromcon' 'struct context *'
|   | `-CallExpr 0x14980b408 <col:12, col:42> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x14980b310 <col:12> 'int ()' Function 0x14980b258 'sidtab_search' 'int ()'
|   |   |-UnaryOperator 0x14980b3f0 <col:26, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   | `-RecoveryExpr 0x14980b3d0 <col:27> '<dependent type>' contains-errors lvalue
|   |   `-RecoveryExpr 0x14980b360 <col:35> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x14980b510 <line:26:2, line:27:8>
|   | |-UnaryOperator 0x14980b490 <line:26:6, col:7> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x14980b478 <col:7> 'struct context *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x14980b458 <col:7> 'struct context *' lvalue Var 0x14900e218 'fromcon' 'struct context *'
|   | `-GotoStmt 0x14980b4f8 <line:27:3, col:8> 'out_unlock' 0x14980b4a8
|   |-BinaryOperator 0x14980b608 <line:29:2, col:8> 'int' contains-errors '='
|   | |-DeclRefExpr 0x14980b530 <col:2> 'int' lvalue Var 0x1498092f0 'rc' 'int'
|   | `-UnaryOperator 0x14980b5f0 <col:7, col:8> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |   `-ImplicitCastExpr 0x14980b5d8 <col:8> '<dependent type>' contains-errors <LValueToRValue>
|   |     `-RecoveryExpr 0x14980b5b8 <col:8> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x14980b7d0 <line:31:2, line:32:8>
|   | |-UnaryOperator 0x14980b7a0 <line:31:6, col:7> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x14980b788 <col:7> 'struct user_datum *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x14980b768 <col:7> 'struct user_datum *' lvalue Var 0x149808da8 'user' 'struct user_datum *'
|   | `-GotoStmt 0x14980b7b8 <line:32:3, col:8> 'out_unlock' 0x14980b4a8
|   |-BinaryOperator 0x14980b8e0 <line:34:2, col:23> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x14980b838 <col:2, col:10> '<dependent type>' contains-errors lvalue .user
|   | | `-RecoveryExpr 0x14980b810 <col:2> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x14980b7f0 <col:2> 'struct context' lvalue Var 0x14900e2a0 'usercon' 'struct context'
|   | `-RecoveryExpr 0x14980b8b8 <col:17, col:23> '<dependent type>' contains-errors lvalue
|   |   `-DeclRefExpr 0x14980b880 <col:17> 'struct user_datum *' lvalue Var 0x149808da8 'user' 'struct user_datum *'
|   |-IfStmt 0x14980ba58 <line:38:2, line:39:8>
|   | |-RecoveryExpr 0x14980ba20 <line:38:6, col:7> '_Bool' contains-errors
|   | `-GotoStmt 0x14980ba40 <line:39:3, col:8> 'out_unlock' 0x14980b4a8
|   |-CallExpr 0x14980bc30 <line:41:2, col:54> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x14980bb58 <col:2> 'int ()' Function 0x14980baa0 'ebitmap_for_each_positive_bit' 'int ()'
|   | |-UnaryOperator 0x14980bbd8 <col:32, col:39> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | `-RecoveryExpr 0x14980bbb0 <col:33, col:39> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x14980bb78 <col:33> 'struct user_datum *' lvalue Var 0x149808da8 'user' 'struct user_datum *'
|   | |-DeclRefExpr 0x14980bbf0 <col:46> 'struct ebitmap_node *' lvalue Var 0x1498091a8 'rnode' 'struct ebitmap_node *'
|   | `-DeclRefExpr 0x14980bc10 <col:53> 'int' lvalue Var 0x149809390 'i' 'int'
|   |-CompoundStmt 0x14980d0b8 <col:56, line:67:2>
|   | |-BinaryOperator 0x14980bdb0 <line:43:3, col:22> '<dependent type>' contains-errors '='
|   | | |-CXXDependentScopeMemberExpr 0x14980bcf0 <col:3, col:11> '<dependent type>' contains-errors lvalue .role
|   | | | `-RecoveryExpr 0x14980bcc8 <col:3> '<dependent type>' contains-errors lvalue
|   | | |   `-DeclRefExpr 0x14980bca8 <col:3> 'struct context' lvalue Var 0x14900e2a0 'usercon' 'struct context'
|   | | `-BinaryOperator 0x14980bd90 <col:18, col:22> 'int' '+'
|   | |   |-ImplicitCastExpr 0x14980bd78 <col:18> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x14980bd38 <col:18> 'int' lvalue Var 0x149809390 'i' 'int'
|   | |   `-IntegerLiteral 0x14980bd58 <col:22> 'int' 1
|   | |-CallExpr 0x14980c6b8 <line:44:3, col:55> '<dependent type>' contains-errors
|   | | |-DeclRefExpr 0x14980bdd0 <col:3> 'int ()' Function 0x14980baa0 'ebitmap_for_each_positive_bit' 'int ()'
|   | | |-UnaryOperator 0x14980c660 <col:33, col:40> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | | `-RecoveryExpr 0x14980c638 <col:34, col:40> '<dependent type>' contains-errors lvalue
|   | | |   `-DeclRefExpr 0x14980c600 <col:34> 'struct role_datum *' lvalue Var 0x149808fa8 'role' 'struct role_datum *'
|   | | |-DeclRefExpr 0x14980c678 <col:47> 'struct ebitmap_node *' lvalue Var 0x149809238 'tnode' 'struct ebitmap_node *'
|   | | `-DeclRefExpr 0x14980c698 <col:54> 'int' lvalue Var 0x149809410 'j' 'int'
|   | `-CompoundStmt 0x14980d090 <col:57, line:66:3>
|   |   |-BinaryOperator 0x14980c7f8 <line:45:4, col:23> '<dependent type>' contains-errors '='
|   |   | |-CXXDependentScopeMemberExpr 0x14980c738 <col:4, col:12> '<dependent type>' contains-errors lvalue .type
|   |   | | `-RecoveryExpr 0x14980c710 <col:4> '<dependent type>' contains-errors lvalue
|   |   | |   `-DeclRefExpr 0x14980c6f0 <col:4> 'struct context' lvalue Var 0x14900e2a0 'usercon' 'struct context'
|   |   | `-BinaryOperator 0x14980c7d8 <col:19, col:23> 'int' '+'
|   |   |   |-ImplicitCastExpr 0x14980c7c0 <col:19> 'int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x14980c780 <col:19> 'int' lvalue Var 0x149809410 'j' 'int'
|   |   |   `-IntegerLiteral 0x14980c7a0 <col:23> 'int' 1
|   |   |-IfStmt 0x14980cb70 <line:51:4, line:52:10>
|   |   | |-ImplicitCastExpr 0x14980cb40 <line:51:8> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x14980cb20 <col:8> 'int' lvalue Var 0x1498092f0 'rc' 'int'
|   |   | `-GotoStmt 0x14980cb58 <line:52:5, col:10> 'out_unlock' 0x14980b4a8
|   |   `-IfStmt 0x14980d060 <line:53:4, line:65:4> has_else
|   |     |-RecoveryExpr 0x14980cb90 <line:53:8, col:16> '_Bool' contains-errors
|   |     |-CompoundStmt 0x14980cbb0 <col:24, line:55:4>
|   |     `-CompoundStmt 0x14980d048 <col:11, line:65:4>
|   |       `-IfStmt 0x14980cc38 <line:59:5, line:60:11>
|   |         |-RecoveryExpr 0x14980cc00 <line:59:9, col:10> '_Bool' contains-errors
|   |         `-GotoStmt 0x14980cc20 <line:60:6, col:11> 'out_unlock' 0x14980b4a8
|   |-BinaryOperator 0x14980d120 <line:68:2, col:7> 'int' '='
|   | |-DeclRefExpr 0x14980d0e0 <col:2> 'int' lvalue Var 0x1498092f0 'rc' 'int'
|   | `-IntegerLiteral 0x14980d100 <col:7> 'int' 0
|   |-LabelStmt 0x14980d248 <line:69:1, col:11> 'out_unlock'
|   | `-NullStmt 0x14980d240 <col:11>
|   |-IfStmt 0x14980d2f8 <line:71:2, line:74:2>
|   | |-RecoveryExpr 0x14980d288 <line:71:6, col:13> '_Bool' contains-errors
|   | `-CompoundStmt 0x14980d2e0 <col:20, line:74:2>
|   |   `-GotoStmt 0x14980d2c8 <line:73:3, col:8> 'out' 0x149809700
|   |-IfStmt 0x14980d3c8 <line:78:2, line:81:2>
|   | |-RecoveryExpr 0x14980d358 <line:78:6, col:7> '_Bool' contains-errors
|   | `-CompoundStmt 0x14980d3b0 <col:16, line:81:2>
|   |   `-GotoStmt 0x14980d398 <line:80:3, col:8> 'out' 0x149809700
|   |-BinaryOperator 0x14980dac8 <line:92:2, col:7> 'int' '='
|   | |-DeclRefExpr 0x14980da88 <col:2> 'int' lvalue Var 0x1498092f0 'rc' 'int'
|   | `-IntegerLiteral 0x14980daa8 <col:7> 'int' 0
|   |-BinaryOperator 0x14980dbc8 <line:95:2, col:9> '<dependent type>' contains-errors '='
|   | |-UnaryOperator 0x14980db90 <col:2, col:3> '<dependent type>' contains-errors prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x14980db78 <col:3> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x14980db58 <col:3> '<dependent type>' contains-errors lvalue
|   | `-DeclRefExpr 0x14980dba8 <col:9> 'int' lvalue Var 0x149809410 'j' 'int'
|   `-LabelStmt 0x14980dc30 <line:96:1, line:97:9> 'out'
|     `-ReturnStmt 0x14980dc20 <col:2, col:9>
|       `-ImplicitCastExpr 0x14980dc08 <col:9> 'int' <LValueToRValue>
|         `-DeclRefExpr 0x14980dbe8 <col:9> 'int' lvalue Var 0x1498092f0 'rc' 'int'
`-FunctionDecl 0x14980ccd8 <line:61:5> col:5 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x14980cdd8 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x14980ce40 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x14980cea8 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x14980cd80 <<invalid sloc>> Implicit 882
