TranslationUnitDecl 0x12e855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12e8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12e855bd0 '__int128'
|-TypedefDecl 0x12e856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12e855bf0 'unsigned __int128'
|-TypedefDecl 0x12f00be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12f00bc00 'struct __NSConstantString_tag'
|   `-Record 0x12e856580 '__NSConstantString_tag'
|-TypedefDecl 0x12f00be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12e855d90 '__SVInt8_t'
|-TypedefDecl 0x12f00bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12e855db0 '__SVInt16_t'
|-TypedefDecl 0x12f00bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12e855dd0 '__SVInt32_t'
|-TypedefDecl 0x12f00bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12e855df0 '__SVInt64_t'
|-TypedefDecl 0x12f00c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12e855e10 '__SVUint8_t'
|-TypedefDecl 0x12f00c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12e855e30 '__SVUint16_t'
|-TypedefDecl 0x12f00c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12e855e50 '__SVUint32_t'
|-TypedefDecl 0x12f00c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12e855e70 '__SVUint64_t'
|-TypedefDecl 0x12f00c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12e855e90 '__SVFloat16_t'
|-TypedefDecl 0x12f00c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12e855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12f00c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12e855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12f00c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12e855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12f00c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12e855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12f00c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12e855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12f00c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12e855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12f00c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12e855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12f00c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12e855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12f00c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12e855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12f00c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12e855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12f00c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12e855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12f00c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12e856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12f00c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12e856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12f00c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12e856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12f00c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12e856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12f00c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12e856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12f00c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12e8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12f00c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12e8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12f00c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12e8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12f00c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12e856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12f00ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12e856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12f00cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12e856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12f00cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12e856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12f00cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12e856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12f00d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12e8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12f00d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12e8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12f00d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12e8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12f00d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12e856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12f00d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12e856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12f00d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12e856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12f00d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12e856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12f00d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12e856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12f00d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12e8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12f00d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12e8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12f00d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12e8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12f00d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12e856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12f00d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12e856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12f00d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12e856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12f00d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12e856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12f00da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12e856390 '__SVBool_t'
|-TypedefDecl 0x12f00da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12e8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12f00dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12e8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12f00db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12e8563f0 '__SVCount_t'
|-TypedefDecl 0x12f00dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12f00dbb0 'char *'
|   `-BuiltinType 0x12e8556b0 'char'
|-TypedefDecl 0x12f00dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12f00dbb0 'char *'
|   `-BuiltinType 0x12e8556b0 'char'
|-FunctionDecl 0x12f00de88 <dataset_diviso_filec/func18751_nonvuln.c:1:1, line:26:1> line:1:12 invalid check_url 'int (int *, const char *)' static
| |-ParmVarDecl 0x12f00dd28 <col:22, col:34> col:34 invalid c 'int *'
| |-ParmVarDecl 0x12f00dda8 <col:37, col:49> col:49 used url 'const char *'
| `-CompoundStmt 0x138008c38 <col:54, line:26:1>
|   |-DeclStmt 0x12f027670 <line:2:5, col:58>
|   | `-VarDecl 0x12f00df58 <col:5, col:57> col:17 used proto_name 'const char *' cinit
|   |   `-ImplicitCastExpr 0x12f00e1e8 <col:30, col:57> 'const char *' <IntegralToPointer>
|   |     `-CallExpr 0x12f00e1a8 <col:30, col:57> 'int'
|   |       |-ImplicitCastExpr 0x12f00e190 <col:30> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x12f00e120 <col:30> 'int ()' Function 0x12f00e068 'avio_find_protocol_name' 'int ()'
|   |       `-ImplicitCastExpr 0x12f00e1d0 <col:54> 'const char *' <LValueToRValue>
|   |         `-DeclRefExpr 0x12f00e140 <col:54> 'const char *' lvalue ParmVar 0x12f00dda8 'url' 'const char *'
|   |-IfStmt 0x12f027720 <line:4:5, line:5:16>
|   | |-UnaryOperator 0x12f0276c0 <line:4:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x12f0276a8 <col:10> 'const char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x12f027688 <col:10> 'const char *' lvalue Var 0x12f00df58 'proto_name' 'const char *'
|   | `-ReturnStmt 0x12f027710 <line:5:9, col:16>
|   |   `-RecoveryExpr 0x12f0276f0 <col:16> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x12f028328 <line:7:5, line:18:16> has_else
|   | |-CallExpr 0x12f027930 <line:7:9, col:44> '<dependent type>' contains-errors
|   | | |-DeclRefExpr 0x12f027820 <col:9> 'int ()' Function 0x12f027768 'av_strstart' 'int ()'
|   | | |-DeclRefExpr 0x12f027840 <col:21> 'const char *' lvalue Var 0x12f00df58 'proto_name' 'const char *'
|   | | |-StringLiteral 0x12f0278a0 <col:33> 'char[4]' lvalue "STR"
|   | | `-RecoveryExpr 0x12f027910 <col:40> '<dependent type>' contains-errors lvalue
|   | |-CompoundStmt 0x12f028170 <col:47, line:15:5>
|   | | `-IfStmt 0x12f028150 <line:8:9, line:14:9>
|   | |   |-BinaryOperator 0x12f027e68 <line:8:13, col:93> 'int' contains-errors '&&'
|   | |   | |-CallExpr 0x12f027c68 <col:13, col:48> '<dependent type>' contains-errors
|   | |   | | |-DeclRefExpr 0x12f027b90 <col:13> 'int (const char *, const char *)' Function 0x12f0279b0 'strcmp' 'int (const char *, const char *)'
|   | |   | | |-CXXDependentScopeMemberExpr 0x12f027bd0 <col:20, col:23> '<dependent type>' contains-errors lvalue ->allowed_extensions
|   | |   | | | `-RecoveryExpr 0x12f027bb0 <col:20> '<dependent type>' contains-errors lvalue
|   | |   | | `-StringLiteral 0x12f027c18 <col:43> 'char[4]' lvalue "STR"
|   | |   | `-UnaryOperator 0x12f027e50 <col:53, col:93> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | |   |   `-CallExpr 0x12f027e20 <col:54, col:93> '<dependent type>' contains-errors
|   | |   |     |-DeclRefExpr 0x12f027d78 <col:54> 'int ()' Function 0x12f027cc0 'av_match_ext' 'int ()'
|   | |   |     |-DeclRefExpr 0x12f027d98 <col:67> 'const char *' lvalue ParmVar 0x12f00dda8 'url' 'const char *'
|   | |   |     `-CXXDependentScopeMemberExpr 0x12f027dd8 <col:72, col:75> '<dependent type>' contains-errors lvalue ->allowed_extensions
|   | |   |       `-RecoveryExpr 0x12f027db8 <col:72> '<dependent type>' contains-errors lvalue
|   | |   `-CompoundStmt 0x12f028130 <col:96, line:14:9>
|   | |     |-CallExpr 0x12f0280a8 <line:9:13, line:12:20> '<dependent type>' contains-errors
|   | |     | |-DeclRefExpr 0x12f027f68 <line:9:13> 'int ()' Function 0x12f027eb0 'av_log' 'int ()'
|   | |     | |-RecoveryExpr 0x12f027f88 <col:20> '<dependent type>' contains-errors lvalue
|   | |     | |-RecoveryExpr 0x12f028088 <col:23> '<dependent type>' contains-errors lvalue
|   | |     | |-StringLiteral 0x12f028000 <line:10:17, line:11:17> 'char[7]' lvalue "STRSTR"
|   | |     | `-DeclRefExpr 0x12f028028 <line:12:17> 'const char *' lvalue ParmVar 0x12f00dda8 'url' 'const char *'
|   | |     `-ReturnStmt 0x12f028120 <line:13:13, col:20>
|   | |       `-RecoveryExpr 0x12f028100 <col:20> '<dependent type>' contains-errors lvalue
|   | `-IfStmt 0x12f0282f8 <line:15:12, line:18:16> has_else
|   |   |-CallExpr 0x12f028258 <line:15:16, col:51> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x12f028188 <col:16> 'int ()' Function 0x12f027768 'av_strstart' 'int ()'
|   |   | |-DeclRefExpr 0x12f0281a8 <col:28> 'const char *' lvalue Var 0x12f00df58 'proto_name' 'const char *'
|   |   | |-StringLiteral 0x12f0281c8 <col:40> 'char[4]' lvalue "STR"
|   |   | `-RecoveryExpr 0x12f028238 <col:47> '<dependent type>' contains-errors lvalue
|   |   |-CompoundStmt 0x12f028298 <col:54, line:17:5>
|   |   | `-NullStmt 0x12f028290 <line:16:9>
|   |   `-ReturnStmt 0x12f0282e8 <line:18:9, col:16>
|   |     `-RecoveryExpr 0x12f0282c8 <col:16> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x138008bd8 <line:20:5, line:23:16> has_else
|   | |-BinaryOperator 0x1380089a8 <line:20:9, col:85> 'int' '&&'
|   | | |-UnaryOperator 0x138008820 <col:9, col:53> 'int' prefix '!' cannot overflow
|   | | | `-CallExpr 0x1380087b8 <col:10, col:53> 'int'
|   | | |   |-ImplicitCastExpr 0x1380087a0 <col:10> 'int (*)(const char *, const char *, unsigned long)' <FunctionToPointerDecay>
|   | | |   | `-DeclRefExpr 0x138008450 <col:10> 'int (const char *, const char *, unsigned long)' Function 0x138008200 'strncmp' 'int (const char *, const char *, unsigned long)'
|   | | |   |-ImplicitCastExpr 0x1380087f0 <col:18> 'const char *' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x138008470 <col:18> 'const char *' lvalue Var 0x12f00df58 'proto_name' 'const char *'
|   | | |   |-ImplicitCastExpr 0x138008808 <col:30> 'const char *' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x138008490 <col:30> 'const char *' lvalue ParmVar 0x12f00dda8 'url' 'const char *'
|   | | |   `-CallExpr 0x1380086f8 <col:35, col:52> 'unsigned long'
|   | | |     |-ImplicitCastExpr 0x1380086e0 <col:35> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   | | |     | `-DeclRefExpr 0x138008658 <col:35> 'unsigned long (const char *)' Function 0x1380084e8 'strlen' 'unsigned long (const char *)'
|   | | |     `-ImplicitCastExpr 0x138008720 <col:42> 'const char *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x138008678 <col:42> 'const char *' lvalue Var 0x12f00df58 'proto_name' 'const char *'
|   | | `-BinaryOperator 0x138008988 <col:58, col:85> 'int' '=='
|   | |   |-ImplicitCastExpr 0x138008970 <col:58, col:80> 'int' <IntegralCast>
|   | |   | `-ImplicitCastExpr 0x138008958 <col:58, col:80> 'char' <LValueToRValue>
|   | |   |   `-ArraySubscriptExpr 0x138008920 <col:58, col:80> 'const char' lvalue
|   | |   |     |-ImplicitCastExpr 0x138008908 <col:58> 'const char *' <LValueToRValue>
|   | |   |     | `-DeclRefExpr 0x138008838 <col:58> 'const char *' lvalue ParmVar 0x12f00dda8 'url' 'const char *'
|   | |   |     `-CallExpr 0x1380088c8 <col:62, col:79> 'unsigned long'
|   | |   |       |-ImplicitCastExpr 0x1380088b0 <col:62> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   | |   |       | `-DeclRefExpr 0x138008858 <col:62> 'unsigned long (const char *)' Function 0x1380084e8 'strlen' 'unsigned long (const char *)'
|   | |   |       `-ImplicitCastExpr 0x1380088f0 <col:69> 'const char *' <LValueToRValue>
|   | |   |         `-DeclRefExpr 0x138008878 <col:69> 'const char *' lvalue Var 0x12f00df58 'proto_name' 'const char *'
|   | |   `-CharacterLiteral 0x138008940 <col:85> 'int' 58
|   | |-ReturnStmt 0x1380089e8 <line:21:9, col:16>
|   | | `-IntegerLiteral 0x1380089c8 <col:16> 'int' 0
|   | `-IfStmt 0x138008bb8 <line:22:10, line:23:16>
|   |   |-RecoveryExpr 0x138008b30 <line:22:14, col:41> '<dependent type>' contains-errors lvalue
|   |   | |-DeclRefExpr 0x1380089f8 <col:14> 'int (const char *, const char *)' Function 0x12f0279b0 'strcmp' 'int (const char *, const char *)'
|   |   | |-DeclRefExpr 0x138008a18 <col:21> 'const char *' lvalue Var 0x12f00df58 'proto_name' 'const char *'
|   |   | |-StringLiteral 0x138008a38 <col:33> 'char[4]' lvalue "STR"
|   |   | `-IntegerLiteral 0x138008a58 <col:40> 'int' 5
|   |   `-ReturnStmt 0x138008ba8 <line:23:9, col:16>
|   |     `-RecoveryExpr 0x138008b88 <col:16> '<dependent type>' contains-errors lvalue
|   `-ReturnStmt 0x138008c28 <line:25:5, col:12>
|     `-IntegerLiteral 0x138008c08 <col:12> 'int' 0
|-FunctionDecl 0x12f0279b0 <line:8:13> col:13 implicit used strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x12f027ab0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x12f027b18 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x12f027a58 <<invalid sloc>> Implicit 887
|-FunctionDecl 0x138008200 <line:20:10> col:10 implicit used strncmp 'int (const char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0x138008300 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x138008368 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1380083d0 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x1380082a8 <<invalid sloc>> Implicit 888
`-FunctionDecl 0x1380084e8 <col:35> col:35 implicit used strlen 'unsigned long (const char *)' extern
  |-ParmVarDecl 0x1380085e8 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x138008590 <<invalid sloc>> Implicit 902
