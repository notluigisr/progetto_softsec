TranslationUnitDecl 0x12a855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12a8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12a855bd0 '__int128'
|-TypedefDecl 0x12a856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12a855bf0 'unsigned __int128'
|-TypedefDecl 0x12a841c30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12a841a00 'struct __NSConstantString_tag'
|   `-Record 0x12a856580 '__NSConstantString_tag'
|-TypedefDecl 0x12a841c98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12a855d90 '__SVInt8_t'
|-TypedefDecl 0x12a841d00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12a855db0 '__SVInt16_t'
|-TypedefDecl 0x12a841d68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12a855dd0 '__SVInt32_t'
|-TypedefDecl 0x12a841dd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12a855df0 '__SVInt64_t'
|-TypedefDecl 0x12a841e38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12a855e10 '__SVUint8_t'
|-TypedefDecl 0x12a841ea0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12a855e30 '__SVUint16_t'
|-TypedefDecl 0x12a841f08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12a855e50 '__SVUint32_t'
|-TypedefDecl 0x12a841f70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12a855e70 '__SVUint64_t'
|-TypedefDecl 0x12a841fd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12a855e90 '__SVFloat16_t'
|-TypedefDecl 0x12a842040 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12a855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12a8420a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12a855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12a842110 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12a855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12a842178 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12a855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12a8421e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12a855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12a842248 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12a855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12a8422b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12a855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12a842318 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12a855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12a842380 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12a855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12a8423e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12a855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12a842450 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12a855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12a8424b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12a856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12a842520 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12a856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12a842588 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12a856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12a8425f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12a856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12a842658 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12a856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12a8426c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12a8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12a842728 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12a8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12a842790 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12a8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12a8427f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12a856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12a842860 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12a856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12a8428c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12a856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12a842930 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12a856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12a842998 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12a856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12a8bea00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12a8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12a8bea68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12a8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12a8bead0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12a8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12a8beb38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12a856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12a8beba0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12a856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12a8bec08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12a856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12a8bec70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12a856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12a8becd8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12a856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12a8bed40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12a8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12a8beda8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12a8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12a8bee10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12a8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12a8bee78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12a856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12a8beee0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12a856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12a8bef48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12a856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12a8befb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12a856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12a8bf018 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12a856390 '__SVBool_t'
|-TypedefDecl 0x12a8bf080 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12a8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12a8bf0e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12a8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12a8bf150 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12a8563f0 '__SVCount_t'
|-TypedefDecl 0x12a8bf1f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12a8bf1b0 'char *'
|   `-BuiltinType 0x12a8556b0 'char'
|-TypedefDecl 0x12a8bf268 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12a8bf1b0 'char *'
|   `-BuiltinType 0x12a8556b0 'char'
`-FunctionDecl 0x12a8bf878 <dataset_diviso_filec/func15723_nonvuln.c:1:1, line:40:17> line:2:1 invalid trusted_dir_server_new 'int *(const char *, const char *, int, int, const int *, const char *, const char *, int, double)'
  |-ParmVarDecl 0x12a8bf2f0 <col:24, col:36> col:36 used nickname 'const char *'
  |-ParmVarDecl 0x12a8bf370 <col:46, col:58> col:58 used address 'const char *'
  |-ParmVarDecl 0x12a8bf3f0 <line:3:24, col:33> col:33 invalid dir_port 'int'
  |-ParmVarDecl 0x12a8bf470 <col:43, col:52> col:52 invalid or_port 'int'
  |-ParmVarDecl 0x12a8bf4f0 <line:4:24, col:47> col:47 invalid ipv6_addrport 'const int *'
  |-ParmVarDecl 0x12a8bf570 <line:5:24, col:36> col:36 used digest 'const char *'
  |-ParmVarDecl 0x12a8bf5f0 <col:44, col:56> col:56 used v3_auth_digest 'const char *'
  |-ParmVarDecl 0x12a8bf670 <line:6:24, col:39> col:39 invalid type 'int'
  |-ParmVarDecl 0x12a8bf6f0 <col:45, col:52> col:52 used weight 'double'
  `-CompoundStmt 0x12c008fe8 <line:7:1, line:40:17>
    |-DeclStmt 0x12a8d8220 <line:10:3, col:22>
    | `-VarDecl 0x12a8bf980 <col:3, col:18> col:9 used hostname 'char *' cinit
    |   `-RecoveryExpr 0x12a8d8200 <col:18> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12a8d9100 <line:13:3, line:31:3> has_else
    | |-UnaryOperator 0x12a8d8288 <line:13:7, col:8> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x12a8d8270 <col:8> 'const char *' <LValueToRValue>
    | |   `-DeclRefExpr 0x12a8d8250 <col:8> 'const char *' lvalue ParmVar 0x12a8bf370 'address' 'const char *'
    | |-CompoundStmt 0x12a8d8cd8 <col:17, line:23:3>
    | | |-IfStmt 0x12a8d8a60 <line:14:5, line:20:5>
    | | | |-BinaryOperator 0x12a8d87d8 <line:14:9, line:15:51> 'int' contains-errors '<'
    | | | | |-CallExpr 0x12a8d8790 <line:14:9, line:15:47> '<dependent type>' contains-errors
    | | | | | |-DeclRefExpr 0x12a8d8400 <line:14:9> 'int ()' Function 0x12a8d8348 'resolve_my_address' 'int ()'
    | | | | | |-RecoveryExpr 0x12a8d86e0 <col:28> '<dependent type>' contains-errors lvalue
    | | | | | |-CallExpr 0x12a8d8718 <col:38, col:50> 'int'
    | | | | | | `-ImplicitCastExpr 0x12a8d8700 <col:38> 'int (*)()' <FunctionToPointerDecay>
    | | | | | |   `-DeclRefExpr 0x12a8d8518 <col:38> 'int ()' Function 0x12a8d8460 'get_options' 'int ()'
    | | | | | |-UnaryOperator 0x12a8d8758 <line:15:28, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | | | | | `-RecoveryExpr 0x12a8d8738 <col:29> '<dependent type>' contains-errors lvalue
    | | | | | |-RecoveryExpr 0x12a8d8770 <col:32> '<dependent type>' contains-errors lvalue
    | | | | | `-UnaryOperator 0x12a8d8640 <col:38, col:39> 'char **' contains-errors prefix '&' cannot overflow
    | | | | |   `-DeclRefExpr 0x12a8d85f0 <col:39> 'char *' contains-errors lvalue Var 0x12a8bf980 'hostname' 'char *'
    | | | | `-IntegerLiteral 0x12a8d86a0 <col:51> 'int' 0
    | | | `-CompoundStmt 0x12a8d8a40 <col:54, line:20:5>
    | | |   |-CallExpr 0x12a8d89c8 <line:16:7, line:18:21> '<dependent type>' contains-errors
    | | |   | |-DeclRefExpr 0x12a8d88d8 <line:16:7> 'int ()' Function 0x12a8d8820 'log_warn' 'int ()'
    | | |   | |-RecoveryExpr 0x12a8d89a8 <col:16> '<dependent type>' contains-errors lvalue
    | | |   | `-StringLiteral 0x12a8d8950 <line:17:16, line:18:16> 'char[7]' lvalue "STRSTR"
    | | |   `-ReturnStmt 0x12a8d8a30 <line:19:7, col:14>
    | | |     `-RecoveryExpr 0x12a8d8a10 <col:14> '<dependent type>' contains-errors lvalue
    | | `-IfStmt 0x12a8d8cb8 <line:21:5, line:22:30>
    | |   |-UnaryOperator 0x12a8d8ab8 <line:21:9, col:10> 'int' contains-errors prefix '!' cannot overflow
    | |   | `-ImplicitCastExpr 0x12a8d8aa0 <col:10> 'char *' contains-errors <LValueToRValue>
    | |   |   `-DeclRefExpr 0x12a8d8a80 <col:10> 'char *' contains-errors lvalue Var 0x12a8bf980 'hostname' 'char *'
    | |   `-BinaryOperator 0x12a8d8c98 <line:22:7, col:30> 'char *' contains-errors '='
    | |     |-DeclRefExpr 0x12a8d8ad0 <col:7> 'char *' contains-errors lvalue Var 0x12a8bf980 'hostname' 'char *'
    | |     `-CallExpr 0x12a8d8c70 <col:18, col:30> '<dependent type>' contains-errors
    | |       |-DeclRefExpr 0x12a8d8bd0 <col:18> 'int ()' Function 0x12a8d8b18 'tor_dup_ip' 'int ()'
    | |       `-RecoveryExpr 0x12a8d8c50 <col:29> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x12a8d90e0 <line:23:10, line:31:3>
    |   |-IfStmt 0x12a8d8ef0 <line:24:5, line:29:5>
    |   | |-RecoveryExpr 0x12a8d8e18 <line:24:9, col:40> '_Bool' contains-errors
    |   | `-CompoundStmt 0x12a8d8ee0 <col:43, line:29:5>
    |   `-BinaryOperator 0x12a8d90c0 <line:30:5, col:34> 'char *' contains-errors '='
    |     |-DeclRefExpr 0x12a8d8f10 <col:5> 'char *' contains-errors lvalue Var 0x12a8bf980 'hostname' 'char *'
    |     `-ImplicitCastExpr 0x12a8d90a8 <col:16, col:34> 'char *' <IntegralToPointer>
    |       `-CallExpr 0x12a8d9068 <col:16, col:34> 'int'
    |         |-ImplicitCastExpr 0x12a8d9050 <col:16> 'int (*)()' <FunctionToPointerDecay>
    |         | `-DeclRefExpr 0x12a8d9010 <col:16> 'int ()' Function 0x12a8d8f58 'tor_strdup' 'int ()'
    |         `-ImplicitCastExpr 0x12a8d9090 <col:27> 'const char *' <LValueToRValue>
    |           `-DeclRefExpr 0x12a8d9030 <col:27> 'const char *' lvalue ParmVar 0x12a8bf370 'address' 'const char *'
    `-CallExpr 0x12c008fa8 <line:39:3, col:20> 'int' contains-errors
      |-ImplicitCastExpr 0x12c008f90 <col:3> 'int (*)()' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x12c008f50 <col:3> 'int ()' Function 0x12c008e98 'tor_free' 'int ()'
      `-ImplicitCastExpr 0x12c008fd0 <col:12> 'char *' contains-errors <LValueToRValue>
        `-DeclRefExpr 0x12c008f70 <col:12> 'char *' contains-errors lvalue Var 0x12a8bf980 'hostname' 'char *'
