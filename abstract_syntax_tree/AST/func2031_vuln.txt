TranslationUnitDecl 0x150055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1500564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x150055bd0 '__int128'
|-TypedefDecl 0x150056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x150055bf0 'unsigned __int128'
|-TypedefDecl 0x14800be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14800bc00 'struct __NSConstantString_tag'
|   `-Record 0x150056580 '__NSConstantString_tag'
|-TypedefDecl 0x14800be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x150055d90 '__SVInt8_t'
|-TypedefDecl 0x14800bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x150055db0 '__SVInt16_t'
|-TypedefDecl 0x14800bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x150055dd0 '__SVInt32_t'
|-TypedefDecl 0x14800bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x150055df0 '__SVInt64_t'
|-TypedefDecl 0x14800c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x150055e10 '__SVUint8_t'
|-TypedefDecl 0x14800c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x150055e30 '__SVUint16_t'
|-TypedefDecl 0x14800c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x150055e50 '__SVUint32_t'
|-TypedefDecl 0x14800c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x150055e70 '__SVUint64_t'
|-TypedefDecl 0x14800c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x150055e90 '__SVFloat16_t'
|-TypedefDecl 0x14800c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x150055eb0 '__SVFloat32_t'
|-TypedefDecl 0x14800c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x150055ed0 '__SVFloat64_t'
|-TypedefDecl 0x14800c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x150055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14800c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x150055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14800c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x150055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14800c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x150055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14800c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x150055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14800c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x150055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14800c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x150055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14800c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x150055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14800c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x150055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14800c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x150056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14800c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x150056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14800c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x150056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14800c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x150056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14800c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x150056090 '__clang_svint8x3_t'
|-TypedefDecl 0x14800c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1500560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14800c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1500560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14800c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1500560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14800c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x150056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14800ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x150056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14800cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x150056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14800cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x150056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14800cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x150056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14800d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1500561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14800d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1500561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14800d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1500561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14800d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x150056210 '__clang_svint8x4_t'
|-TypedefDecl 0x14800d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x150056230 '__clang_svint16x4_t'
|-TypedefDecl 0x14800d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x150056250 '__clang_svint32x4_t'
|-TypedefDecl 0x14800d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x150056270 '__clang_svint64x4_t'
|-TypedefDecl 0x14800d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x150056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14800d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1500562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14800d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1500562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14800d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1500562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14800d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x150056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14800d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x150056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14800d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x150056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14800d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x150056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14800da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x150056390 '__SVBool_t'
|-TypedefDecl 0x14800da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1500563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14800dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1500563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14800db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1500563f0 '__SVCount_t'
|-TypedefDecl 0x14800dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14800dbb0 'char *'
|   `-BuiltinType 0x1500556b0 'char'
|-TypedefDecl 0x14800dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14800dbb0 'char *'
|   `-BuiltinType 0x1500556b0 'char'
`-FunctionDecl 0x14800e038 <dataset_diviso_filec/func2031_vuln.c:1:1, line:14:1> line:1:12 invalid bson_append_string_base 'int (int *, const char *, const char *, int, int)' static
  |-ParmVarDecl 0x14800dd28 <col:37, col:43> col:43 invalid b 'int *'
  |-ParmVarDecl 0x14800dda8 <col:46, col:58> col:58 used name 'const char *'
  |-ParmVarDecl 0x14800de28 <line:2:37, col:49> col:49 used value 'const char *'
  |-ParmVarDecl 0x14800dea8 <col:56, col:60> col:60 used len 'int'
  |-ParmVarDecl 0x14800df28 <col:65, col:75> col:75 invalid type 'int'
  `-CompoundStmt 0x148029000 <col:82, line:14:1>
    |-DeclStmt 0x14800e200 <line:4:5, col:21>
    | `-VarDecl 0x14800e120 <col:5, col:20> col:9 used sl 'int' cinit
    |   `-BinaryOperator 0x14800e1e0 <col:14, col:20> 'int' '+'
    |     |-ImplicitCastExpr 0x14800e1c8 <col:14> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x14800e188 <col:14> 'int' lvalue ParmVar 0x14800dea8 'len' 'int'
    |     `-IntegerLiteral 0x14800e1a8 <col:20> 'int' 1
    |-IfStmt 0x148028728 <line:5:5, line:6:16>
    | |-BinaryOperator 0x1480286c0 <line:5:10, col:67> 'int' contains-errors '=='
    | | |-CallExpr 0x148028668 <col:10, col:62> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x14800e370 <col:10> 'int ()' Function 0x14800e2b8 'bson_check_string' 'int ()'
    | | | |-RecoveryExpr 0x14800e390 <col:29> '<dependent type>' contains-errors lvalue
    | | | |-CStyleCastExpr 0x148028608 <col:32, col:48> 'const char *' <NoOp>
    | | | | `-ImplicitCastExpr 0x1480285f0 <col:48> 'const char *' <LValueToRValue> part_of_explicit_cast
    | | | |   `-DeclRefExpr 0x14800e3b0 <col:48> 'const char *' lvalue ParmVar 0x14800de28 'value' 'const char *'
    | | | `-BinaryOperator 0x148028648 <col:55, col:60> 'int' '-'
    | | |   |-ImplicitCastExpr 0x148028630 <col:55> 'int' <LValueToRValue>
    | | |   | `-DeclRefExpr 0x148028428 <col:55> 'int' lvalue Var 0x14800e120 'sl' 'int'
    | | |   `-IntegerLiteral 0x148028448 <col:60> 'int' 1
    | | `-RecoveryExpr 0x1480286a0 <col:67> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x148028718 <line:6:9, col:16>
    |   `-RecoveryExpr 0x1480286f8 <col:16> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x148028b28 <line:7:5, line:9:5>
    | |-BinaryOperator 0x148028aa8 <line:7:10, col:57> 'int' contains-errors '=='
    | | |-CallExpr 0x148028a48 <col:10, col:52> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x148028828 <col:10> 'int ()' Function 0x148028770 'bson_append_estart' 'int ()'
    | | | |-RecoveryExpr 0x148028848 <col:30> '<dependent type>' contains-errors lvalue
    | | | |-RecoveryExpr 0x148028868 <col:33> '<dependent type>' contains-errors lvalue
    | | | |-DeclRefExpr 0x148028888 <col:39> 'const char *' lvalue ParmVar 0x14800dda8 'name' 'const char *'
    | | | `-BinaryOperator 0x148028a28 <col:45, col:49> 'int' '+'
    | | |   |-IntegerLiteral 0x1480288a8 <col:45> 'int' 4
    | | |   `-ImplicitCastExpr 0x148028a10 <col:49> 'int' <LValueToRValue>
    | | |     `-DeclRefExpr 0x1480288c8 <col:49> 'int' lvalue Var 0x14800e120 'sl' 'int'
    | | `-RecoveryExpr 0x148028a88 <col:57> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x148028b10 <col:70, line:9:5>
    |   `-ReturnStmt 0x148028b00 <line:8:9, col:16>
    |     `-RecoveryExpr 0x148028ae0 <col:16> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x148028ca0 <line:10:5, col:28> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x148028c28 <col:5> 'int ()' Function 0x148028b70 'bson_append32' 'int ()'
    | |-RecoveryExpr 0x148028c48 <col:20> '<dependent type>' contains-errors lvalue
    | `-UnaryOperator 0x148028c88 <col:24, col:25> 'int *' prefix '&' cannot overflow
    |   `-DeclRefExpr 0x148028c68 <col:25> 'int' lvalue Var 0x14800e120 'sl' 'int'
    |-CallExpr 0x148028e88 <line:11:5, col:37> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x148028db0 <col:5> 'int ()' Function 0x148028cf8 'bson_append' 'int ()'
    | |-RecoveryExpr 0x148028dd0 <col:18> '<dependent type>' contains-errors lvalue
    | |-DeclRefExpr 0x148028df0 <col:22> 'const char *' lvalue ParmVar 0x14800de28 'value' 'const char *'
    | `-BinaryOperator 0x148028e68 <col:30, col:35> 'int' '-'
    |   |-ImplicitCastExpr 0x148028e50 <col:30> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x148028e10 <col:30> 'int' lvalue Var 0x14800e120 'sl' 'int'
    |   `-IntegerLiteral 0x148028e30 <col:35> 'int' 1
    |-CallExpr 0x148028f80 <line:12:5, col:32> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x148028ec0 <col:5> 'int ()' Function 0x148028cf8 'bson_append' 'int ()'
    | |-RecoveryExpr 0x148028ee0 <col:18> '<dependent type>' contains-errors lvalue
    | |-StringLiteral 0x148028f40 <col:22> 'char[4]' lvalue "STR"
    | `-IntegerLiteral 0x148028f60 <col:30> 'int' 1
    `-ReturnStmt 0x148028ff0 <line:13:5, col:12>
      `-RecoveryExpr 0x148028fd0 <col:12> '<dependent type>' contains-errors lvalue
