TranslationUnitDecl 0x15b055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x15b0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x15b055bd0 '__int128'
|-TypedefDecl 0x15b056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x15b055bf0 'unsigned __int128'
|-TypedefDecl 0x15b87e430 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15b87e200 'struct __NSConstantString_tag'
|   `-Record 0x15b056580 '__NSConstantString_tag'
|-TypedefDecl 0x15b87e498 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x15b055d90 '__SVInt8_t'
|-TypedefDecl 0x15b87e500 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x15b055db0 '__SVInt16_t'
|-TypedefDecl 0x15b87e568 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x15b055dd0 '__SVInt32_t'
|-TypedefDecl 0x15b87e5d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x15b055df0 '__SVInt64_t'
|-TypedefDecl 0x15b87e638 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x15b055e10 '__SVUint8_t'
|-TypedefDecl 0x15b87e6a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x15b055e30 '__SVUint16_t'
|-TypedefDecl 0x15b87e708 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x15b055e50 '__SVUint32_t'
|-TypedefDecl 0x15b87e770 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x15b055e70 '__SVUint64_t'
|-TypedefDecl 0x15b87e7d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x15b055e90 '__SVFloat16_t'
|-TypedefDecl 0x15b87e840 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x15b055eb0 '__SVFloat32_t'
|-TypedefDecl 0x15b87e8a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x15b055ed0 '__SVFloat64_t'
|-TypedefDecl 0x15b87e910 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x15b055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15b87e978 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x15b055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15b87e9e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x15b055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15b87ea48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x15b055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15b87eab0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x15b055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15b87eb18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x15b055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15b87eb80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x15b055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15b87ebe8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x15b055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15b87ec50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x15b055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15b87ecb8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x15b056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15b87ed20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x15b056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15b87ed88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x15b056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15b87edf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x15b056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15b87ee58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x15b056090 '__clang_svint8x3_t'
|-TypedefDecl 0x15b87eec0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x15b0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15b87ef28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x15b0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15b87ef90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x15b0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15b87eff8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x15b056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15b87f060 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x15b056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15b87f0c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x15b056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15b87f130 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x15b056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15b87f198 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x15b056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15b87fa00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x15b0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15b87fa68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x15b0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15b87fad0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x15b0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15b87fb38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x15b056210 '__clang_svint8x4_t'
|-TypedefDecl 0x15b87fba0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x15b056230 '__clang_svint16x4_t'
|-TypedefDecl 0x15b87fc08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x15b056250 '__clang_svint32x4_t'
|-TypedefDecl 0x15b87fc70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x15b056270 '__clang_svint64x4_t'
|-TypedefDecl 0x15b87fcd8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x15b056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15b87fd40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x15b0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15b87fda8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x15b0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15b87fe10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x15b0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15b87fe78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x15b056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15b87fee0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x15b056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15b87ff48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x15b056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15b87ffb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x15b056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15b880018 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x15b056390 '__SVBool_t'
|-TypedefDecl 0x15b880080 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x15b0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15b8800e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x15b0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15b880150 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x15b0563f0 '__SVCount_t'
|-TypedefDecl 0x15b8801f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15b8801b0 'char *'
|   `-BuiltinType 0x15b0556b0 'char'
|-TypedefDecl 0x15b880268 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15b8801b0 'char *'
|   `-BuiltinType 0x15b0556b0 'char'
|-FunctionDecl 0x15b880518 <dataset_diviso_filec/func1019_vuln.c:1:1, line:36:1> line:1:1 invalid ftp_putcmd 'int (int *, const char *, const char *)'
| |-ParmVarDecl 0x15b880328 <col:12, col:22> col:22 referenced invalid ftp 'int *'
| |-ParmVarDecl 0x15b8803a8 <col:27, col:39> col:39 used cmd 'const char *'
| |-ParmVarDecl 0x15b880428 <col:44, col:56> col:56 used args 'const char *'
| `-CompoundStmt 0x15b88aae0 <line:2:1, line:36:1>
|   |-DeclStmt 0x15b880658 <line:3:2, col:11>
|   | `-VarDecl 0x15b8805f0 <col:2, col:7> col:7 used size 'int'
|   |-DeclStmt 0x15b8806f0 <line:4:2, col:13>
|   | `-VarDecl 0x15b880688 <col:2, col:9> col:9 used data 'char *'
|   |-IfStmt 0x15b886158 <line:6:2, line:8:2>
|   | |-CallExpr 0x15b886098 <line:6:6, col:24> 'char *'
|   | | |-ImplicitCastExpr 0x15b886080 <col:6> 'char *(*)(const char *, const char *)' <FunctionToPointerDecay>
|   | | | `-DeclRefExpr 0x15b885f80 <col:6> 'char *(const char *, const char *)' Function 0x15b885da0 'strpbrk' 'char *(const char *, const char *)'
|   | | |-ImplicitCastExpr 0x15b8860c8 <col:14> 'const char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x15b885fa0 <col:14> 'const char *' lvalue ParmVar 0x15b8803a8 'cmd' 'const char *'
|   | | `-ImplicitCastExpr 0x15b8860f8 <col:19> 'const char *' <NoOp>
|   | |   `-ImplicitCastExpr 0x15b8860e0 <col:19> 'char *' <ArrayToPointerDecay>
|   | |     `-StringLiteral 0x15b886000 <col:19> 'char[4]' lvalue "STR"
|   | `-CompoundStmt 0x15b886140 <col:27, line:8:2>
|   |   `-ReturnStmt 0x15b886130 <line:7:3, col:10>
|   |     `-IntegerLiteral 0x15b886110 <col:10> 'int' 0
|   |-IfStmt 0x15b88a620 <line:10:2, line:25:2> has_else
|   | |-BinaryOperator 0x15b886258 <line:10:6, col:20> 'int' '&&'
|   | | |-ImplicitCastExpr 0x15b886210 <col:6> 'const char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x15b886178 <col:6> 'const char *' lvalue ParmVar 0x15b880428 'args' 'const char *'
|   | | `-ImplicitCastExpr 0x15b886240 <col:14, col:20> 'int' <IntegralCast>
|   | |   `-ImplicitCastExpr 0x15b886228 <col:14, col:20> 'char' <LValueToRValue>
|   | |     `-ArraySubscriptExpr 0x15b8861f0 <col:14, col:20> 'const char' lvalue
|   | |       |-ImplicitCastExpr 0x15b8861d8 <col:14> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x15b886198 <col:14> 'const char *' lvalue ParmVar 0x15b880428 'args' 'const char *'
|   | |       `-IntegerLiteral 0x15b8861b8 <col:19> 'int' 0
|   | |-CompoundStmt 0x15b88a0b0 <col:23, line:19:2>
|   | | |-IfStmt 0x15b886960 <line:12:3, line:14:3>
|   | | | |-BinaryOperator 0x15b8868f8 <line:12:7, col:40> 'int' contains-errors '>'
|   | | | | |-BinaryOperator 0x15b8868b8 <col:7, col:36> 'unsigned long' '+'
|   | | | | | |-BinaryOperator 0x15b886880 <col:7, col:32> 'unsigned long' '+'
|   | | | | | | |-CallExpr 0x15b8867d0 <col:7, col:17> 'unsigned long'
|   | | | | | | | |-ImplicitCastExpr 0x15b8867b8 <col:7> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   | | | | | | | | `-DeclRefExpr 0x15b886428 <col:7> 'unsigned long (const char *)' Function 0x15b8862b8 'strlen' 'unsigned long (const char *)'
|   | | | | | | | `-ImplicitCastExpr 0x15b8867f8 <col:14> 'const char *' <LValueToRValue>
|   | | | | | | |   `-DeclRefExpr 0x15b886448 <col:14> 'const char *' lvalue ParmVar 0x15b8803a8 'cmd' 'const char *'
|   | | | | | | `-CallExpr 0x15b886840 <col:21, col:32> 'unsigned long'
|   | | | | | |   |-ImplicitCastExpr 0x15b886828 <col:21> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   | | | | | |   | `-DeclRefExpr 0x15b886508 <col:21> 'unsigned long (const char *)' Function 0x15b8862b8 'strlen' 'unsigned long (const char *)'
|   | | | | | |   `-ImplicitCastExpr 0x15b886868 <col:28> 'const char *' <LValueToRValue>
|   | | | | | |     `-DeclRefExpr 0x15b886528 <col:28> 'const char *' lvalue ParmVar 0x15b880428 'args' 'const char *'
|   | | | | | `-ImplicitCastExpr 0x15b8868a0 <col:36> 'unsigned long' <IntegralCast>
|   | | | | |   `-IntegerLiteral 0x15b8865d8 <col:36> 'int' 4
|   | | | | `-RecoveryExpr 0x15b8868d8 <col:40> '<dependent type>' contains-errors lvalue
|   | | | `-CompoundStmt 0x15b886948 <col:53, line:14:3>
|   | | |   `-ReturnStmt 0x15b886938 <line:13:4, col:11>
|   | | |     `-IntegerLiteral 0x15b886918 <col:11> 'int' 0
|   | | |-IfStmt 0x15b886ae8 <line:15:3, line:17:3>
|   | | | |-CallExpr 0x15b886a28 <line:15:7, col:26> 'char *'
|   | | | | |-ImplicitCastExpr 0x15b886a10 <col:7> 'char *(*)(const char *, const char *)' <FunctionToPointerDecay>
|   | | | | | `-DeclRefExpr 0x15b886980 <col:7> 'char *(const char *, const char *)' Function 0x15b885da0 'strpbrk' 'char *(const char *, const char *)'
|   | | | | |-ImplicitCastExpr 0x15b886a58 <col:15> 'const char *' <LValueToRValue>
|   | | | | | `-DeclRefExpr 0x15b8869a0 <col:15> 'const char *' lvalue ParmVar 0x15b880428 'args' 'const char *'
|   | | | | `-ImplicitCastExpr 0x15b886a88 <col:21> 'const char *' <NoOp>
|   | | | |   `-ImplicitCastExpr 0x15b886a70 <col:21> 'char *' <ArrayToPointerDecay>
|   | | | |     `-StringLiteral 0x15b8869c0 <col:21> 'char[4]' lvalue "STR"
|   | | | `-CompoundStmt 0x15b886ad0 <col:29, line:17:3>
|   | | |   `-ReturnStmt 0x15b886ac0 <line:16:4, col:11>
|   | | |     `-IntegerLiteral 0x15b886aa0 <col:11> 'int' 0
|   | | `-BinaryOperator 0x15b88a090 <line:18:3, col:69> 'int' contains-errors '='
|   | |   |-DeclRefExpr 0x15b886b08 <col:3> 'int' lvalue Var 0x15b8805f0 'size' 'int'
|   | |   `-CallExpr 0x15b88a048 <col:10, col:69> '<dependent type>' contains-errors
|   | |     |-DeclRefExpr 0x15b889eb8 <col:10> 'int ()' Function 0x15b889e00 'slprintf' 'int ()'
|   | |     |-CXXDependentScopeMemberExpr 0x15b889ef8 <col:19, col:24> '<dependent type>' contains-errors lvalue ->outbuf
|   | |     | `-RecoveryExpr 0x15b889ed8 <col:19> '<dependent type>' contains-errors lvalue
|   | |     |-UnaryExprOrTypeTraitExpr 0x15b889fc8 <col:32, col:50> 'unsigned long' contains-errors sizeof
|   | |     | `-ParenExpr 0x15b889fa8 <col:38, col:50> '<dependent type>' contains-errors lvalue
|   | |     |   `-CXXDependentScopeMemberExpr 0x15b889f60 <col:39, col:44> '<dependent type>' contains-errors lvalue ->outbuf
|   | |     |     `-RecoveryExpr 0x15b889f40 <col:39> '<dependent type>' contains-errors lvalue
|   | |     |-StringLiteral 0x15b889fe8 <col:53> 'char[4]' lvalue "STR"
|   | |     |-DeclRefExpr 0x15b88a008 <col:60> 'const char *' lvalue ParmVar 0x15b8803a8 'cmd' 'const char *'
|   | |     `-DeclRefExpr 0x15b88a028 <col:65> 'const char *' lvalue ParmVar 0x15b880428 'args' 'const char *'
|   | `-CompoundStmt 0x15b88a600 <line:19:9, line:25:2>
|   |   |-IfStmt 0x15b88a3f0 <line:21:3, line:23:3>
|   |   | |-BinaryOperator 0x15b88a388 <line:21:7, col:25> 'int' contains-errors '>'
|   |   | | |-BinaryOperator 0x15b88a348 <col:7, col:21> 'unsigned long' '+'
|   |   | | | |-CallExpr 0x15b88a2f0 <col:7, col:17> 'unsigned long'
|   |   | | | | |-ImplicitCastExpr 0x15b88a2d8 <col:7> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |   | | | | | `-DeclRefExpr 0x15b88a0d8 <col:7> 'unsigned long (const char *)' Function 0x15b8862b8 'strlen' 'unsigned long (const char *)'
|   |   | | | | `-ImplicitCastExpr 0x15b88a318 <col:14> 'const char *' <LValueToRValue>
|   |   | | | |   `-DeclRefExpr 0x15b88a0f8 <col:14> 'const char *' lvalue ParmVar 0x15b8803a8 'cmd' 'const char *'
|   |   | | | `-ImplicitCastExpr 0x15b88a330 <col:21> 'unsigned long' <IntegralCast>
|   |   | | |   `-IntegerLiteral 0x15b88a188 <col:21> 'int' 3
|   |   | | `-RecoveryExpr 0x15b88a368 <col:25> '<dependent type>' contains-errors lvalue
|   |   | `-CompoundStmt 0x15b88a3d8 <col:38, line:23:3>
|   |   |   `-ReturnStmt 0x15b88a3c8 <line:22:4, col:11>
|   |   |     `-IntegerLiteral 0x15b88a3a8 <col:11> 'int' 0
|   |   `-BinaryOperator 0x15b88a5e0 <line:24:3, col:63> 'int' contains-errors '='
|   |     |-DeclRefExpr 0x15b88a410 <col:3> 'int' lvalue Var 0x15b8805f0 'size' 'int'
|   |     `-CallExpr 0x15b88a5a0 <col:10, col:63> '<dependent type>' contains-errors
|   |       |-DeclRefExpr 0x15b88a430 <col:10> 'int ()' Function 0x15b889e00 'slprintf' 'int ()'
|   |       |-CXXDependentScopeMemberExpr 0x15b88a470 <col:19, col:24> '<dependent type>' contains-errors lvalue ->outbuf
|   |       | `-RecoveryExpr 0x15b88a450 <col:19> '<dependent type>' contains-errors lvalue
|   |       |-UnaryExprOrTypeTraitExpr 0x15b88a540 <col:32, col:50> 'unsigned long' contains-errors sizeof
|   |       | `-ParenExpr 0x15b88a520 <col:38, col:50> '<dependent type>' contains-errors lvalue
|   |       |   `-CXXDependentScopeMemberExpr 0x15b88a4d8 <col:39, col:44> '<dependent type>' contains-errors lvalue ->outbuf
|   |       |     `-RecoveryExpr 0x15b88a4b8 <col:39> '<dependent type>' contains-errors lvalue
|   |       |-StringLiteral 0x15b88a560 <col:53> 'char[4]' lvalue "STR"
|   |       `-DeclRefExpr 0x15b88a580 <col:60> 'const char *' lvalue ParmVar 0x15b8803a8 'cmd' 'const char *'
|   |-BinaryOperator 0x15b88a6d8 <line:27:2, col:14> 'char *' contains-errors '='
|   | |-DeclRefExpr 0x15b88a650 <col:2> 'char *' lvalue Var 0x15b880688 'data' 'char *'
|   | `-CXXDependentScopeMemberExpr 0x15b88a690 <col:9, col:14> '<dependent type>' contains-errors lvalue ->outbuf
|   |   `-RecoveryExpr 0x15b88a670 <col:9> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x15b88a7e0 <line:30:2, col:15> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x15b88a740 <col:2, col:7> '<dependent type>' contains-errors lvalue ->extra
|   | | `-RecoveryExpr 0x15b88a718 <col:2> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x15b88a6f8 <col:2> 'int *' lvalue ParmVar 0x15b880328 'ftp' 'int *'
|   | `-RecoveryExpr 0x15b88a7c0 <col:15> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x15b88aa90 <line:32:2, line:34:2>
|   | |-BinaryOperator 0x15b88aa28 <line:32:6, col:43> 'int' contains-errors '!='
|   | | |-CallExpr 0x15b88a9c8 <col:6, col:38> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x15b88a8e0 <col:6> 'int ()' Function 0x15b88a828 'my_send' 'int ()'
|   | | | |-RecoveryExpr 0x15b88a900 <col:14> '<dependent type>' contains-errors lvalue
|   | | | |-CXXDependentScopeMemberExpr 0x15b88a940 <col:19, col:24> '<dependent type>' contains-errors lvalue ->fd
|   | | | | `-RecoveryExpr 0x15b88a920 <col:19> '<dependent type>' contains-errors lvalue
|   | | | |-DeclRefExpr 0x15b88a988 <col:28> 'char *' lvalue Var 0x15b880688 'data' 'char *'
|   | | | `-DeclRefExpr 0x15b88a9a8 <col:34> 'int' lvalue Var 0x15b8805f0 'size' 'int'
|   | | `-DeclRefExpr 0x15b88aa08 <col:43> 'int' lvalue Var 0x15b8805f0 'size' 'int'
|   | `-CompoundStmt 0x15b88aa78 <col:49, line:34:2>
|   |   `-ReturnStmt 0x15b88aa68 <line:33:3, col:10>
|   |     `-IntegerLiteral 0x15b88aa48 <col:10> 'int' 0
|   `-ReturnStmt 0x15b88aad0 <line:35:2, col:9>
|     `-IntegerLiteral 0x15b88aab0 <col:9> 'int' 1
|-FunctionDecl 0x15b885da0 <line:6:6> col:6 implicit used strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x15b885ea0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x15b885f08 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x15b885e48 <<invalid sloc>> Implicit 895
`-FunctionDecl 0x15b8862b8 <line:12:7> col:7 implicit used strlen 'unsigned long (const char *)' extern
  |-ParmVarDecl 0x15b8863b8 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x15b886360 <<invalid sloc>> Implicit 902
