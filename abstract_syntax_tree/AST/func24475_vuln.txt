TranslationUnitDecl 0x120055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1200564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x120055bd0 '__int128'
|-TypedefDecl 0x120056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x120055bf0 'unsigned __int128'
|-TypedefDecl 0x10500be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x10500bc00 'struct __NSConstantString_tag'
|   `-Record 0x120056580 '__NSConstantString_tag'
|-TypedefDecl 0x10500be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x120055d90 '__SVInt8_t'
|-TypedefDecl 0x10500bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x120055db0 '__SVInt16_t'
|-TypedefDecl 0x10500bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x120055dd0 '__SVInt32_t'
|-TypedefDecl 0x10500bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x120055df0 '__SVInt64_t'
|-TypedefDecl 0x10500c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x120055e10 '__SVUint8_t'
|-TypedefDecl 0x10500c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x120055e30 '__SVUint16_t'
|-TypedefDecl 0x10500c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x120055e50 '__SVUint32_t'
|-TypedefDecl 0x10500c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x120055e70 '__SVUint64_t'
|-TypedefDecl 0x10500c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x120055e90 '__SVFloat16_t'
|-TypedefDecl 0x10500c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x120055eb0 '__SVFloat32_t'
|-TypedefDecl 0x10500c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x120055ed0 '__SVFloat64_t'
|-TypedefDecl 0x10500c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x120055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x10500c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x120055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x10500c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x120055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x10500c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x120055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x10500c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x120055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x10500c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x120055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x10500c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x120055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x10500c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x120055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x10500c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x120055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x10500c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x120056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x10500c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x120056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x10500c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x120056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x10500c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x120056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x10500c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x120056090 '__clang_svint8x3_t'
|-TypedefDecl 0x10500c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1200560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x10500c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1200560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x10500c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1200560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x10500c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x120056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x10500ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x120056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x10500cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x120056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x10500cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x120056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x10500cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x120056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x10500d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1200561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x10500d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1200561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x10500d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1200561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x10500d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x120056210 '__clang_svint8x4_t'
|-TypedefDecl 0x10500d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x120056230 '__clang_svint16x4_t'
|-TypedefDecl 0x10500d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x120056250 '__clang_svint32x4_t'
|-TypedefDecl 0x10500d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x120056270 '__clang_svint64x4_t'
|-TypedefDecl 0x10500d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x120056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x10500d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1200562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x10500d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1200562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x10500d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1200562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x10500d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x120056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x10500d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x120056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x10500d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x120056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x10500d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x120056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x10500da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x120056390 '__SVBool_t'
|-TypedefDecl 0x10500da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1200563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x10500dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1200563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x10500db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1200563f0 '__SVCount_t'
|-TypedefDecl 0x10500dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x10500dbb0 'char *'
|   `-BuiltinType 0x1200556b0 'char'
|-TypedefDecl 0x10500dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x10500dbb0 'char *'
|   `-BuiltinType 0x1200556b0 'char'
|-FunctionDecl 0x10500df18 <dataset_diviso_filec/func24475_vuln.c:1:1, line:63:1> line:1:1 invalid scanner_add_custom_literal 'int (int *, int *, const int *)'
| |-ParmVarDecl 0x10500dd28 <col:29, col:47> col:47 invalid context_p 'int *'
| |-ParmVarDecl 0x10500dda8 <line:2:29, col:53> col:53 invalid literal_pool_p 'int *'
| |-ParmVarDecl 0x10500de28 <line:3:29, col:57> col:57 referenced invalid literal_location_p 'const int *'
| `-CompoundStmt 0x1050282f8 <line:4:1, line:63:1>
|   `-WhileStmt 0x1050282d8 <line:5:3, line:62:3>
|     |-RecoveryExpr 0x10500dff0 <line:5:10> '<dependent type>' contains-errors lvalue
|     `-CompoundStmt 0x1050282a8 <line:6:3, line:62:3>
|       |-CallExpr 0x10500e2a8 <line:8:5, col:80> '<dependent type>' contains-errors
|       | |-DeclRefExpr 0x10500e170 <col:5> 'int ()' Function 0x10500e0b8 'parser_list_iterator_init' 'int ()'
|       | |-UnaryOperator 0x10500e1f8 <col:32, col:49> '<dependent type>' contains-errors prefix '&' cannot overflow
|       | | `-CXXDependentScopeMemberExpr 0x10500e1b0 <col:33, col:49> '<dependent type>' contains-errors lvalue ->literal_pool
|       | |   `-RecoveryExpr 0x10500e190 <col:33> '<dependent type>' contains-errors lvalue
|       | `-UnaryOperator 0x10500e290 <col:63, col:64> '<dependent type>' contains-errors prefix '&' cannot overflow
|       |   `-RecoveryExpr 0x10500e270 <col:64> '<dependent type>' contains-errors lvalue
|       |-BinaryOperator 0x10500e378 <line:9:5, col:27> '<dependent type>' contains-errors '*'
|       | |-RecoveryExpr 0x10500e2f8 <col:5> '<dependent type>' contains-errors lvalue
|       | | `-DeclRefExpr 0x10500e2d8 <col:5> 'const int *' lvalue ParmVar 0x10500de28 'literal_location_p' 'const int *'
|       | `-RecoveryExpr 0x10500e358 <col:27> '<dependent type>' contains-errors lvalue
|       |-DeclStmt 0x1050274d0 <line:11:5, col:55>
|       | `-VarDecl 0x105027400 <col:5, col:20> col:20 invalid char_p 'const int *'
|       `-IfStmt 0x105028208 <line:14:5, line:46:5> has_else
|         |-CallExpr 0x105027680 <line:14:9, col:54> '<dependent type>' contains-errors
|         | |-DeclRefExpr 0x1050275c8 <col:9> 'int ()' Function 0x105027510 'JERRY_LIKELY' 'int ()'
|         | `-UnaryOperator 0x105027668 <col:23, col:44> '<dependent type>' contains-errors prefix '!' cannot overflow
|         |   `-ImplicitCastExpr 0x105027650 <col:24, col:44> '<dependent type>' contains-errors <LValueToRValue>
|         |     `-CXXDependentScopeMemberExpr 0x105027608 <col:24, col:44> '<dependent type>' contains-errors lvalue ->has_escape
|         |       `-RecoveryExpr 0x1050275e8 <col:24> '<dependent type>' contains-errors lvalue
|         |-CompoundStmt 0x105027ff0 <line:15:5, line:36:5>
|         | `-WhileStmt 0x105027fd0 <line:16:7, line:35:7>
|         |   |-RecoveryExpr 0x105027710 <line:16:14, col:102> '_Bool' contains-errors
|         |   `-CompoundStmt 0x105027fb8 <line:17:7, line:35:7>
|         |     `-IfStmt 0x105027f98 <line:18:9, line:34:9>
|         |       |-BinaryOperator 0x105027850 <line:18:13, col:34> 'int' contains-errors '=='
|         |       | |-CXXDependentScopeMemberExpr 0x1050277e8 <col:13, col:24> '<dependent type>' contains-errors lvalue ->length
|         |       | | `-RecoveryExpr 0x1050277c8 <col:13> '<dependent type>' contains-errors lvalue
|         |       | `-RecoveryExpr 0x105027830 <col:34> '<dependent type>' contains-errors lvalue
|         |       `-CompoundStmt 0x105027f80 <line:19:9, line:34:9>
|         |         `-IfStmt 0x105027f50 <line:20:11, line:33:11> has_else
|         |           |-CallExpr 0x1050279e0 <line:20:15, col:51> '<dependent type>' contains-errors
|         |           | |-DeclRefExpr 0x105027870 <col:15> 'int ()' Function 0x105027510 'JERRY_LIKELY' 'int ()'
|         |           | `-UnaryOperator 0x1050279c8 <col:29, col:41> '<dependent type>' contains-errors prefix '!' cannot overflow
|         |           |   `-ImplicitCastExpr 0x1050279b0 <col:30, col:41> '<dependent type>' contains-errors <LValueToRValue>
|         |           |     `-CXXDependentScopeMemberExpr 0x105027968 <col:30, col:41> '<dependent type>' contains-errors lvalue ->has_escape
|         |           |       `-RecoveryExpr 0x105027948 <col:30> '<dependent type>' contains-errors lvalue
|         |           |-CompoundStmt 0x105027d88 <line:21:11, line:26:11>
|         |           | `-IfStmt 0x105027d68 <line:22:13, line:25:13>
|         |           |   |-RecoveryExpr 0x105027d38 <line:22:17, col:63> '_Bool' contains-errors
|         |           |   `-CompoundStmt 0x105027d58 <line:23:13, line:25:13>
|         |           `-IfStmt 0x105027f30 <line:27:16, line:33:11>
|         |             |-RecoveryExpr 0x105027ec0 <line:27:20, col:81> '_Bool' contains-errors
|         |             `-CompoundStmt 0x105027f20 <line:28:11, line:33:11>
|         `-CompoundStmt 0x1050281f0 <line:38:5, line:46:5>
|           `-WhileStmt 0x1050281d0 <line:39:7, line:45:7>
|             |-RecoveryExpr 0x105028008 <line:39:14, col:102> '_Bool' contains-errors
|             `-CompoundStmt 0x1050281b8 <line:40:7, line:45:7>
|               `-IfStmt 0x105028198 <line:41:9, line:44:9>
|                 |-RecoveryExpr 0x105028168 <line:41:13, col:80> '_Bool' contains-errors
|                 `-CompoundStmt 0x105028188 <line:42:9, line:44:9>
`-FunctionDecl 0x105027a88 <line:22:17> col:17 implicit used memcmp 'int (const void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x105027b88 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x105027bf0 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x105027c58 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x105027b30 <<invalid sloc>> Implicit 883
