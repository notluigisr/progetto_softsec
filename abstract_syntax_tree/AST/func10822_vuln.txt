TranslationUnitDecl 0x14a055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14a0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14a055bd0 '__int128'
|-TypedefDecl 0x14a056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14a055bf0 'unsigned __int128'
|-TypedefDecl 0x14a80be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14a80bc00 'struct __NSConstantString_tag'
|   `-Record 0x14a056580 '__NSConstantString_tag'
|-TypedefDecl 0x14a80be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14a055d90 '__SVInt8_t'
|-TypedefDecl 0x14a80bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14a055db0 '__SVInt16_t'
|-TypedefDecl 0x14a80bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14a055dd0 '__SVInt32_t'
|-TypedefDecl 0x14a80bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14a055df0 '__SVInt64_t'
|-TypedefDecl 0x14a80c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14a055e10 '__SVUint8_t'
|-TypedefDecl 0x14a80c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14a055e30 '__SVUint16_t'
|-TypedefDecl 0x14a80c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14a055e50 '__SVUint32_t'
|-TypedefDecl 0x14a80c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14a055e70 '__SVUint64_t'
|-TypedefDecl 0x14a80c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14a055e90 '__SVFloat16_t'
|-TypedefDecl 0x14a80c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14a055eb0 '__SVFloat32_t'
|-TypedefDecl 0x14a80c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14a055ed0 '__SVFloat64_t'
|-TypedefDecl 0x14a80c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14a055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14a80c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14a055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14a80c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14a055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14a80c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14a055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14a80c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14a055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14a80c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14a055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14a80c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14a055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14a80c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14a055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14a80c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14a055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14a80c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14a056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14a80c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14a056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14a80c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14a056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14a80c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14a056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14a80c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14a056090 '__clang_svint8x3_t'
|-TypedefDecl 0x14a80c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14a0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14a80c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14a0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14a80c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14a0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14a80c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14a056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14a80ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14a056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14a80cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14a056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14a80cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14a056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14a80cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14a056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14a80d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14a0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14a80d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14a0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14a80d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14a0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14a80d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14a056210 '__clang_svint8x4_t'
|-TypedefDecl 0x14a80d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14a056230 '__clang_svint16x4_t'
|-TypedefDecl 0x14a80d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14a056250 '__clang_svint32x4_t'
|-TypedefDecl 0x14a80d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14a056270 '__clang_svint64x4_t'
|-TypedefDecl 0x14a80d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14a056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14a80d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14a0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14a80d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14a0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14a80d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14a0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14a80d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14a056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14a80d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14a056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14a80d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14a056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14a80d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14a056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14a80da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14a056390 '__SVBool_t'
|-TypedefDecl 0x14a80da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14a0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14a80dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14a0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14a80db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14a0563f0 '__SVCount_t'
|-TypedefDecl 0x14a80dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14a80dbb0 'char *'
|   `-BuiltinType 0x14a0556b0 'char'
|-TypedefDecl 0x14a80dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14a80dbb0 'char *'
|   `-BuiltinType 0x14a0556b0 'char'
|-FunctionDecl 0x14a80e0f8 <dataset_diviso_filec/func10822_vuln.c:1:1, line:71:1> line:1:1 invalid gerbv_gdk_draw_prim6 'int (int *, int *, double *, double, int, int)'
| |-ParmVarDecl 0x14a80dd28 <col:22, col:33> col:33 invalid pixmap 'int *'
| |-ParmVarDecl 0x14a80dda8 <col:41, col:48> col:48 invalid gc 'int *'
| |-ParmVarDecl 0x14a80de58 <col:52, col:60> col:60 used p 'double *'
| |-ParmVarDecl 0x14a80ded8 <line:2:4, col:11> col:11 used scale 'double'
| |-ParmVarDecl 0x14a80df58 <col:18, col:23> col:23 used x 'int'
| |-ParmVarDecl 0x14a80dfd8 <col:26, col:31> col:31 used y 'int'
| `-CompoundStmt 0x14a82d650 <line:3:1, line:71:1>
|   |-DeclStmt 0x14a80e270 <line:4:5, col:34>
|   | `-VarDecl 0x14a80e1e8 <col:5, col:33> col:15 used outside_dia_idx 'const int' cinit
|   |   `-IntegerLiteral 0x14a80e250 <col:33> 'int' 2
|   |-DeclStmt 0x14a80e328 <line:5:5, col:35>
|   | `-VarDecl 0x14a80e2a0 <col:5, col:34> col:15 used ci_thickness_idx 'const int' cinit
|   |   `-IntegerLiteral 0x14a80e308 <col:34> 'int' 3
|   |-DeclStmt 0x14a80e3e0 <line:6:5, col:26>
|   | `-VarDecl 0x14a80e358 <col:5, col:25> col:15 used gap_idx 'const int' cinit
|   |   `-IntegerLiteral 0x14a80e3c0 <col:25> 'int' 4
|   |-DeclStmt 0x14a8274a0 <line:7:5, col:34>
|   | `-VarDecl 0x14a827418 <col:5, col:33> col:15 used nuf_circles_idx 'const int' cinit
|   |   `-IntegerLiteral 0x14a827480 <col:33> 'int' 5
|   |-DeclStmt 0x14a827558 <line:8:5, col:35>
|   | `-VarDecl 0x14a8274d0 <col:5, col:34> col:15 used ch_thickness_idx 'const int' cinit
|   |   `-IntegerLiteral 0x14a827538 <col:34> 'int' 6
|   |-DeclStmt 0x14a827610 <line:9:5, col:32>
|   | `-VarDecl 0x14a827588 <col:5, col:31> col:15 used ch_length_idx 'const int' cinit
|   |   `-IntegerLiteral 0x14a8275f0 <col:31> 'int' 7
|   |-DeclStmt 0x14a8276c8 <line:10:5, col:31>
|   | `-VarDecl 0x14a827640 <col:5, col:30> col:15 used rotation_idx 'const int' cinit
|   |   `-IntegerLiteral 0x14a8276a8 <col:30> 'int' 8
|   |-DeclStmt 0x14a827938 <line:12:5, col:20>
|   | `-VarDecl 0x14a8278d0 <col:5, col:12> col:12 used real_dia 'double'
|   |-DeclStmt 0x14a8279d0 <line:13:5, col:25>
|   | `-VarDecl 0x14a827968 <col:5, col:12> col:12 used real_dia_diff 'double'
|   |-DeclStmt 0x14a827a68 <line:14:5, col:15>
|   | `-VarDecl 0x14a827a00 <col:5, col:9> col:9 used circle 'int'
|   |-DeclStmt 0x14a827b00 <line:16:5, col:14>
|   | `-VarDecl 0x14a827a98 <col:5, col:9> col:9 used point 'int'
|   |-CallExpr 0x14a827ca0 <line:18:5, col:29> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x14a827bf8 <col:5> 'int ()' Function 0x14a827b40 'gdk_gc_copy' 'int ()'
|   | |-RecoveryExpr 0x14a827c80 <col:17> '<dependent type>' contains-errors lvalue
|   | `-RecoveryExpr 0x14a827c30 <col:27> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x14a829880 <line:19:5, line:23:25> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x14a827db0 <line:19:5> 'int ()' Function 0x14a827cf8 'gdk_gc_set_line_attributes' 'int ()'
|   | |-RecoveryExpr 0x14a8296e0 <col:32> '<dependent type>' contains-errors lvalue
|   | |-CStyleCastExpr 0x14a8297f8 <line:20:11, col:49> 'int' <FloatingToIntegral>
|   | | `-CallExpr 0x14a8297d0 <col:16, col:49> 'double'
|   | |   |-ImplicitCastExpr 0x14a8297b8 <col:16> 'double (*)(double)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x14a829428 <col:16> 'double (double)' Function 0x14a828250 'round' 'double (double)'
|   | |   `-BinaryOperator 0x14a829798 <col:22, col:48> 'double' '*'
|   | |     |-ImplicitCastExpr 0x14a829768 <col:22> 'double' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x14a829448 <col:22> 'double' lvalue ParmVar 0x14a80ded8 'scale' 'double'
|   | |     `-ImplicitCastExpr 0x14a829780 <col:30, col:48> 'double' <LValueToRValue>
|   | |       `-ArraySubscriptExpr 0x14a829748 <col:30, col:48> 'double' lvalue
|   | |         |-ImplicitCastExpr 0x14a829718 <col:30> 'double *' <LValueToRValue>
|   | |         | `-DeclRefExpr 0x14a829468 <col:30> 'double *' lvalue ParmVar 0x14a80de58 'p' 'double *'
|   | |         `-ImplicitCastExpr 0x14a829730 <col:32> 'int' <LValueToRValue>
|   | |           `-DeclRefExpr 0x14a829488 <col:32> 'const int' lvalue Var 0x14a80e2a0 'ci_thickness_idx' 'const int'
|   | |-RecoveryExpr 0x14a829820 <line:21:11> '<dependent type>' contains-errors lvalue
|   | |-RecoveryExpr 0x14a829840 <line:22:11> '<dependent type>' contains-errors lvalue
|   | `-RecoveryExpr 0x14a829860 <line:23:11> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x14a829af0 <line:25:5, col:60> 'double' '='
|   | |-DeclRefExpr 0x14a8298c8 <col:5> 'double' lvalue Var 0x14a8278d0 'real_dia' 'double'
|   | `-BinaryOperator 0x14a829ad0 <col:16, col:60> 'double' '-'
|   |   |-ImplicitCastExpr 0x14a829a60 <col:16, col:33> 'double' <LValueToRValue>
|   |   | `-ArraySubscriptExpr 0x14a829958 <col:16, col:33> 'double' lvalue
|   |   |   |-ImplicitCastExpr 0x14a829928 <col:16> 'double *' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x14a8298e8 <col:16> 'double *' lvalue ParmVar 0x14a80de58 'p' 'double *'
|   |   |   `-ImplicitCastExpr 0x14a829940 <col:18> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x14a829908 <col:18> 'const int' lvalue Var 0x14a80e1e8 'outside_dia_idx' 'const int'
|   |   `-BinaryOperator 0x14a829a40 <col:38, col:60> 'double' '/'
|   |     |-ImplicitCastExpr 0x14a829a28 <col:38, col:56> 'double' <LValueToRValue>
|   |     | `-ArraySubscriptExpr 0x14a8299e8 <col:38, col:56> 'double' lvalue
|   |     |   |-ImplicitCastExpr 0x14a8299b8 <col:38> 'double *' <LValueToRValue>
|   |     |   | `-DeclRefExpr 0x14a829978 <col:38> 'double *' lvalue ParmVar 0x14a80de58 'p' 'double *'
|   |     |   `-ImplicitCastExpr 0x14a8299d0 <col:40> 'int' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x14a829998 <col:40> 'const int' lvalue Var 0x14a80e2a0 'ci_thickness_idx' 'const int'
|   |     `-FloatingLiteral 0x14a829a08 <col:60> 'double' 2.000000e+00
|   |-BinaryOperator 0x14a829d70 <line:26:5, col:56> 'double' '='
|   | |-DeclRefExpr 0x14a829b10 <col:5> 'double' lvalue Var 0x14a827968 'real_dia_diff' 'double'
|   | `-BinaryOperator 0x14a829d50 <col:21, col:56> 'double' '*'
|   |   |-ImplicitCastExpr 0x14a829d38 <col:21> 'double' <IntegralToFloating>
|   |   | `-IntegerLiteral 0x14a829b30 <col:21> 'int' 2
|   |   `-ParenExpr 0x14a829d18 <col:23, col:56> 'double'
|   |     `-BinaryOperator 0x14a829cf8 <col:24, col:55> 'double' '+'
|   |       |-ImplicitCastExpr 0x14a829c70 <col:24, col:33> 'double' <LValueToRValue>
|   |       | `-ArraySubscriptExpr 0x14a829bc0 <col:24, col:33> 'double' lvalue
|   |       |   |-ImplicitCastExpr 0x14a829b90 <col:24> 'double *' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x14a829b50 <col:24> 'double *' lvalue ParmVar 0x14a80de58 'p' 'double *'
|   |       |   `-ImplicitCastExpr 0x14a829ba8 <col:26> 'int' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x14a829b70 <col:26> 'const int' lvalue Var 0x14a80e358 'gap_idx' 'const int'
|   |       `-ImplicitCastExpr 0x14a829c88 <col:37, col:55> 'double' <LValueToRValue>
|   |         `-ArraySubscriptExpr 0x14a829c50 <col:37, col:55> 'double' lvalue
|   |           |-ImplicitCastExpr 0x14a829c20 <col:37> 'double *' <LValueToRValue>
|   |           | `-DeclRefExpr 0x14a829be0 <col:37> 'double *' lvalue ParmVar 0x14a80de58 'p' 'double *'
|   |           `-ImplicitCastExpr 0x14a829c38 <col:39> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x14a829c00 <col:39> 'const int' lvalue Var 0x14a80e2a0 'ci_thickness_idx' 'const int'
|   |-ForStmt 0x14a82c6d8 <line:28:5, line:36:5>
|   | |-BinaryOperator 0x14a829dd0 <line:28:10, col:19> 'int' '='
|   | | |-DeclRefExpr 0x14a829d90 <col:10> 'int' lvalue Var 0x14a827a00 'circle' 'int'
|   | | `-IntegerLiteral 0x14a829db0 <col:19> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x14a829f10 <col:22, col:54> 'int' '!='
|   | | |-ImplicitCastExpr 0x14a829ef8 <col:22> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x14a829df0 <col:22> 'int' lvalue Var 0x14a827a00 'circle' 'int'
|   | | `-CStyleCastExpr 0x14a829ed0 <col:32, col:54> 'int' <FloatingToIntegral>
|   | |   `-ImplicitCastExpr 0x14a829eb8 <col:37, col:54> 'double' <LValueToRValue> part_of_explicit_cast
|   | |     `-ArraySubscriptExpr 0x14a829e80 <col:37, col:54> 'double' lvalue
|   | |       |-ImplicitCastExpr 0x14a829e50 <col:37> 'double *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x14a829e10 <col:37> 'double *' lvalue ParmVar 0x14a80de58 'p' 'double *'
|   | |       `-ImplicitCastExpr 0x14a829e68 <col:39> 'int' <LValueToRValue>
|   | |         `-DeclRefExpr 0x14a829e30 <col:39> 'const int' lvalue Var 0x14a827418 'nuf_circles_idx' 'const int'
|   | |-UnaryOperator 0x14a829fa8 <col:58, col:64> 'int' postfix '++'
|   | | `-DeclRefExpr 0x14a829f88 <col:58> 'int' lvalue Var 0x14a827a00 'circle' 'int'
|   | `-CompoundStmt 0x14a82c6b0 <col:68, line:36:5>
|   |   |-DeclStmt 0x14a82a060 <line:30:2, col:32>
|   |   | `-VarDecl 0x14a829fd8 <col:2, col:27> col:13 used full_circle 'const int' cinit
|   |   |   `-IntegerLiteral 0x14a82a040 <col:27> 'int' 23360
|   |   |-DeclStmt 0x14a82a288 <line:31:2, col:56>
|   |   | `-VarDecl 0x14a82a090 <col:2, col:51> col:7 used dia 'int' cinit
|   |   |   `-ImplicitCastExpr 0x14a82a270 <col:13, col:51> 'int' <FloatingToIntegral>
|   |   |     `-BinaryOperator 0x14a82a250 <col:13, col:51> 'double' '*'
|   |   |       |-ParenExpr 0x14a82a1f8 <col:13, col:47> 'double'
|   |   |       | `-BinaryOperator 0x14a82a1d8 <col:14, col:41> 'double' '-'
|   |   |       |   |-ImplicitCastExpr 0x14a82a1c0 <col:14> 'double' <LValueToRValue>
|   |   |       |   | `-DeclRefExpr 0x14a82a0f8 <col:14> 'double' lvalue Var 0x14a8278d0 'real_dia' 'double'
|   |   |       |   `-BinaryOperator 0x14a82a1a0 <col:25, col:41> 'double' '*'
|   |   |       |     |-ImplicitCastExpr 0x14a82a158 <col:25> 'double' <LValueToRValue>
|   |   |       |     | `-DeclRefExpr 0x14a82a118 <col:25> 'double' lvalue Var 0x14a827968 'real_dia_diff' 'double'
|   |   |       |     `-ImplicitCastExpr 0x14a82a188 <col:41> 'double' <IntegralToFloating>
|   |   |       |       `-ImplicitCastExpr 0x14a82a170 <col:41> 'int' <LValueToRValue>
|   |   |       |         `-DeclRefExpr 0x14a82a138 <col:41> 'int' lvalue Var 0x14a827a00 'circle' 'int'
|   |   |       `-ImplicitCastExpr 0x14a82a238 <col:51> 'double' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x14a82a218 <col:51> 'double' lvalue ParmVar 0x14a80ded8 'scale' 'double'
|   |   `-IfStmt 0x14a82c690 <line:32:2, line:35:2>
|   |     |-BinaryOperator 0x14a82a2f8 <line:32:6, col:13> 'int' '>='
|   |     | |-ImplicitCastExpr 0x14a82a2e0 <col:6> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x14a82a2a0 <col:6> 'int' lvalue Var 0x14a82a090 'dia' 'int'
|   |     | `-IntegerLiteral 0x14a82a2c0 <col:13> 'int' 0
|   |     `-CompoundStmt 0x14a82c680 <col:15, line:35:2>
|   |-ForStmt 0x14a82d2a8 <line:55:5, line:60:5>
|   | |-BinaryOperator 0x14a82cf78 <line:55:10, col:18> 'int' '='
|   | | |-DeclRefExpr 0x14a82cf38 <col:10> 'int' lvalue Var 0x14a827a98 'point' 'int'
|   | | `-IntegerLiteral 0x14a82cf58 <col:18> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x14a82cff0 <col:21, col:29> 'int' '<'
|   | | |-ImplicitCastExpr 0x14a82cfd8 <col:21> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x14a82cf98 <col:21> 'int' lvalue Var 0x14a827a98 'point' 'int'
|   | | `-IntegerLiteral 0x14a82cfb8 <col:29> 'int' 4
|   | |-UnaryOperator 0x14a82d030 <col:32, col:37> 'int' postfix '++'
|   | | `-DeclRefExpr 0x14a82d010 <col:32> 'int' lvalue Var 0x14a827a98 'point' 'int'
|   | `-CompoundStmt 0x14a82d298 <col:41, line:60:5>
|   `-ReturnStmt 0x14a82d640 <line:70:5>
|-FunctionDecl 0x14a828250 <line:20:16> col:16 implicit used round 'double (double)' extern
| |-ParmVarDecl 0x14a828350 <<invalid sloc>> <invalid sloc> 'double'
| |-BuiltinAttr 0x14a8282f8 <<invalid sloc>> Implicit 1145
| |-NoThrowAttr 0x14a8283c0 <col:16> Implicit
| `-ConstAttr 0x14a829400 <col:16> Implicit
`-FunctionDecl 0x14a82c758 <line:39:5> col:5 implicit used memset 'void *(void *, int, unsigned long)' extern
  |-ParmVarDecl 0x14a82c858 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x14a82c8c0 <<invalid sloc>> <invalid sloc> 'int'
  |-ParmVarDecl 0x14a82c928 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x14a82c800 <<invalid sloc>> Implicit 900
