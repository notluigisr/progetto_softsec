TranslationUnitDecl 0x126855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1268564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x126855bd0 '__int128'
|-TypedefDecl 0x126856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x126855bf0 'unsigned __int128'
|-TypedefDecl 0x12700be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12700bc00 'struct __NSConstantString_tag'
|   `-Record 0x126856580 '__NSConstantString_tag'
|-TypedefDecl 0x12700be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x126855d90 '__SVInt8_t'
|-TypedefDecl 0x12700bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x126855db0 '__SVInt16_t'
|-TypedefDecl 0x12700bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x126855dd0 '__SVInt32_t'
|-TypedefDecl 0x12700bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x126855df0 '__SVInt64_t'
|-TypedefDecl 0x12700c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x126855e10 '__SVUint8_t'
|-TypedefDecl 0x12700c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x126855e30 '__SVUint16_t'
|-TypedefDecl 0x12700c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x126855e50 '__SVUint32_t'
|-TypedefDecl 0x12700c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x126855e70 '__SVUint64_t'
|-TypedefDecl 0x12700c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x126855e90 '__SVFloat16_t'
|-TypedefDecl 0x12700c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x126855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12700c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x126855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12700c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x126855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12700c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x126855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12700c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x126855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12700c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x126855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12700c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x126855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12700c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x126855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12700c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x126855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12700c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x126855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12700c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x126855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12700c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x126856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12700c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x126856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12700c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x126856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12700c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x126856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12700c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x126856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12700c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1268560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12700c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1268560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12700c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1268560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12700c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x126856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12700ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x126856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12700cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x126856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12700cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x126856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12700cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x126856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12700d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1268561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12700d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1268561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12700d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1268561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12700d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x126856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12700d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x126856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12700d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x126856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12700d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x126856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12700d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x126856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12700d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1268562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12700d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1268562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12700d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1268562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12700d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x126856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12700d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x126856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12700d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x126856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12700d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x126856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12700da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x126856390 '__SVBool_t'
|-TypedefDecl 0x12700da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1268563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12700dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1268563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12700db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1268563f0 '__SVCount_t'
|-TypedefDecl 0x12700dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12700dbb0 'char *'
|   `-BuiltinType 0x1268556b0 'char'
|-TypedefDecl 0x12700dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12700dbb0 'char *'
|   `-BuiltinType 0x1268556b0 'char'
|-FunctionDecl 0x12700e0d8 <dataset_diviso_filec/func9933_vuln.c:1:1, line:65:1> line:1:5 referenced dns_read_name 'int (unsigned char *, unsigned char *, unsigned char *, char *, int, int *)'
| |-ParmVarDecl 0x12700dd08 <col:19, col:34> col:34 used buffer 'unsigned char *'
| |-ParmVarDecl 0x12700dd88 <col:42, col:57> col:57 used bufend 'unsigned char *'
| |-ParmVarDecl 0x12700de08 <line:2:5, col:20> col:20 used name 'unsigned char *'
| |-ParmVarDecl 0x12700de88 <col:26, col:32> col:32 used destination 'char *'
| |-ParmVarDecl 0x12700df08 <col:45, col:49> col:49 used dest_len 'int'
| |-ParmVarDecl 0x12700dfb8 <line:3:5, col:10> col:10 used offset 'int *'
| `-CompoundStmt 0x127028f48 <line:4:1, line:65:1>
|   |-DeclStmt 0x12700e350 <line:5:2, col:25>
|   | |-VarDecl 0x12700e210 <col:2, col:17> col:6 used nb_bytes 'int' cinit
|   | | `-IntegerLiteral 0x12700e278 <col:17> 'int' 0
|   | `-VarDecl 0x12700e2b0 <col:2, col:24> col:20 used n 'int' cinit
|   |   `-IntegerLiteral 0x12700e318 <col:24> 'int' 0
|   |-DeclStmt 0x12700e3e8 <line:6:2, col:15>
|   | `-VarDecl 0x12700e380 <col:2, col:6> col:6 used label_len 'int'
|   |-DeclStmt 0x1270266b8 <line:7:2, col:30>
|   | `-VarDecl 0x127026618 <col:2, col:26> col:17 used reader 'unsigned char *' cinit
|   |   `-ImplicitCastExpr 0x1270266a0 <col:26> 'unsigned char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x127026680 <col:26> 'unsigned char *' lvalue ParmVar 0x12700de08 'name' 'unsigned char *'
|   |-DeclStmt 0x127026788 <line:8:2, col:26>
|   | `-VarDecl 0x1270266e8 <col:2, col:15> col:8 used dest 'char *' cinit
|   |   `-ImplicitCastExpr 0x127026770 <col:15> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x127026750 <col:15> 'char *' lvalue ParmVar 0x12700de88 'destination' 'char *'
|   |-WhileStmt 0x127027fb0 <line:10:2, line:43:2>
|   | |-IntegerLiteral 0x1270267a0 <line:10:9> 'int' 1
|   | `-CompoundStmt 0x127027f58 <col:12, line:43:2>
|   |   |-IfStmt 0x1270270b0 <line:12:3, line:25:3>
|   |   | |-BinaryOperator 0x1270268c0 <line:12:7, col:27> 'int' '=='
|   |   | | |-ParenExpr 0x127026880 <col:7, col:22> 'int'
|   |   | | | `-BinaryOperator 0x127026860 <col:8, col:18> 'int' '&'
|   |   | | |   |-ImplicitCastExpr 0x127026848 <col:8, col:9> 'int' <IntegralCast>
|   |   | | |   | `-ImplicitCastExpr 0x127026830 <col:8, col:9> 'unsigned char' <LValueToRValue>
|   |   | | |   |   `-UnaryOperator 0x1270267f8 <col:8, col:9> 'unsigned char' lvalue prefix '*' cannot overflow
|   |   | | |   |     `-ImplicitCastExpr 0x1270267e0 <col:9> 'unsigned char *' <LValueToRValue>
|   |   | | |   |       `-DeclRefExpr 0x1270267c0 <col:9> 'unsigned char *' lvalue Var 0x127026618 'reader' 'unsigned char *'
|   |   | | |   `-IntegerLiteral 0x127026810 <col:18> 'int' 192
|   |   | | `-IntegerLiteral 0x1270268a0 <col:27> 'int' 192
|   |   | `-CompoundStmt 0x127027070 <col:33, line:25:3>
|   |   |   |-IfStmt 0x127026ac0 <line:14:4, line:15:10>
|   |   |   | |-BinaryOperator 0x127026a38 <line:14:8, col:31> 'int' '>'
|   |   |   | | |-ParenExpr 0x1270269e0 <col:8, col:27> 'unsigned char *'
|   |   |   | | | `-BinaryOperator 0x1270269c0 <col:9, col:26> 'unsigned char *' '+'
|   |   |   | | |   |-ImplicitCastExpr 0x127026978 <col:9> 'unsigned char *' <LValueToRValue>
|   |   |   | | |   | `-DeclRefExpr 0x1270268e0 <col:9> 'unsigned char *' lvalue ParmVar 0x12700dd08 'buffer' 'unsigned char *'
|   |   |   | | |   `-ImplicitCastExpr 0x1270269a8 <col:18, col:26> 'int' <IntegralCast>
|   |   |   | | |     `-ImplicitCastExpr 0x127026990 <col:18, col:26> 'unsigned char' <LValueToRValue>
|   |   |   | | |       `-ArraySubscriptExpr 0x127026958 <col:18, col:26> 'unsigned char' lvalue
|   |   |   | | |         |-ImplicitCastExpr 0x127026940 <col:18> 'unsigned char *' <LValueToRValue>
|   |   |   | | |         | `-DeclRefExpr 0x127026900 <col:18> 'unsigned char *' lvalue Var 0x127026618 'reader' 'unsigned char *'
|   |   |   | | |         `-IntegerLiteral 0x127026920 <col:25> 'int' 1
|   |   |   | | `-ImplicitCastExpr 0x127026a20 <col:31> 'unsigned char *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x127026a00 <col:31> 'unsigned char *' lvalue Var 0x127026618 'reader' 'unsigned char *'
|   |   |   | `-GotoStmt 0x127026aa8 <line:15:5, col:10> 'err' 0x127026a58
|   |   |   |-BinaryOperator 0x127026e28 <line:17:4, line:18:41> 'int' '='
|   |   |   | |-DeclRefExpr 0x127026ae0 <line:17:4> 'int' lvalue Var 0x12700e2b0 'n' 'int'
|   |   |   | `-CallExpr 0x127026d78 <col:8, line:18:41> 'int'
|   |   |   |   |-ImplicitCastExpr 0x127026d60 <line:17:8> 'int (*)(unsigned char *, unsigned char *, unsigned char *, char *, int, int *)' <FunctionToPointerDecay>
|   |   |   |   | `-DeclRefExpr 0x127026b00 <col:8> 'int (unsigned char *, unsigned char *, unsigned char *, char *, int, int *)' Function 0x12700e0d8 'dns_read_name' 'int (unsigned char *, unsigned char *, unsigned char *, char *, int, int *)'
|   |   |   |   |-ImplicitCastExpr 0x127026dc8 <col:22> 'unsigned char *' <LValueToRValue>
|   |   |   |   | `-DeclRefExpr 0x127026b20 <col:22> 'unsigned char *' lvalue ParmVar 0x12700dd08 'buffer' 'unsigned char *'
|   |   |   |   |-ImplicitCastExpr 0x127026de0 <col:30> 'unsigned char *' <LValueToRValue>
|   |   |   |   | `-DeclRefExpr 0x127026b40 <col:30> 'unsigned char *' lvalue ParmVar 0x12700dd88 'bufend' 'unsigned char *'
|   |   |   |   |-BinaryOperator 0x127026c40 <col:38, col:55> 'unsigned char *' '+'
|   |   |   |   | |-ImplicitCastExpr 0x127026bf8 <col:38> 'unsigned char *' <LValueToRValue>
|   |   |   |   | | `-DeclRefExpr 0x127026b60 <col:38> 'unsigned char *' lvalue ParmVar 0x12700dd08 'buffer' 'unsigned char *'
|   |   |   |   | `-ImplicitCastExpr 0x127026c28 <col:47, col:55> 'int' <IntegralCast>
|   |   |   |   |   `-ImplicitCastExpr 0x127026c10 <col:47, col:55> 'unsigned char' <LValueToRValue>
|   |   |   |   |     `-ArraySubscriptExpr 0x127026bd8 <col:47, col:55> 'unsigned char' lvalue
|   |   |   |   |       |-ImplicitCastExpr 0x127026bc0 <col:47> 'unsigned char *' <LValueToRValue>
|   |   |   |   |       | `-DeclRefExpr 0x127026b80 <col:47> 'unsigned char *' lvalue Var 0x127026618 'reader' 'unsigned char *'
|   |   |   |   |       `-IntegerLiteral 0x127026ba0 <col:54> 'int' 1
|   |   |   |   |-ImplicitCastExpr 0x127026df8 <line:18:8> 'char *' <LValueToRValue>
|   |   |   |   | `-DeclRefExpr 0x127026c60 <col:8> 'char *' lvalue Var 0x1270266e8 'dest' 'char *'
|   |   |   |   |-BinaryOperator 0x127026cf0 <col:14, col:25> 'int' '-'
|   |   |   |   | |-ImplicitCastExpr 0x127026cc0 <col:14> 'int' <LValueToRValue>
|   |   |   |   | | `-DeclRefExpr 0x127026c80 <col:14> 'int' lvalue ParmVar 0x12700df08 'dest_len' 'int'
|   |   |   |   | `-ImplicitCastExpr 0x127026cd8 <col:25> 'int' <LValueToRValue>
|   |   |   |   |   `-DeclRefExpr 0x127026ca0 <col:25> 'int' lvalue Var 0x12700e210 'nb_bytes' 'int'
|   |   |   |   `-ImplicitCastExpr 0x127026e10 <col:35> 'int *' <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x127026d10 <col:35> 'int *' lvalue ParmVar 0x12700dfb8 'offset' 'int *'
|   |   |   |-IfStmt 0x127026ed8 <line:19:4, line:20:10>
|   |   |   | |-BinaryOperator 0x127026ea0 <line:19:8, col:13> 'int' '=='
|   |   |   | | |-ImplicitCastExpr 0x127026e88 <col:8> 'int' <LValueToRValue>
|   |   |   | | | `-DeclRefExpr 0x127026e48 <col:8> 'int' lvalue Var 0x12700e2b0 'n' 'int'
|   |   |   | | `-IntegerLiteral 0x127026e68 <col:13> 'int' 0
|   |   |   | `-GotoStmt 0x127026ec0 <line:20:5, col:10> 'err' 0x127026a58
|   |   |   |-CompoundAssignOperator 0x127026f50 <line:22:4, col:16> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
|   |   |   | |-DeclRefExpr 0x127026ef8 <col:4> 'char *' lvalue Var 0x1270266e8 'dest' 'char *'
|   |   |   | `-ImplicitCastExpr 0x127026f38 <col:16> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x127026f18 <col:16> 'int' lvalue Var 0x12700e2b0 'n' 'int'
|   |   |   |-CompoundAssignOperator 0x127026fd8 <line:23:4, col:16> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |   | |-DeclRefExpr 0x127026f80 <col:4> 'int' lvalue Var 0x12700e210 'nb_bytes' 'int'
|   |   |   | `-ImplicitCastExpr 0x127026fc0 <col:16> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x127026fa0 <col:16> 'int' lvalue Var 0x12700e2b0 'n' 'int'
|   |   |   `-GotoStmt 0x127027058 <line:24:4, col:9> 'out' 0x127027008
|   |   |-BinaryOperator 0x127027170 <line:27:3, col:16> 'int' '='
|   |   | |-DeclRefExpr 0x1270270d0 <col:3> 'int' lvalue Var 0x12700e380 'label_len' 'int'
|   |   | `-ImplicitCastExpr 0x127027158 <col:15, col:16> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x127027140 <col:15, col:16> 'unsigned char' <LValueToRValue>
|   |   |     `-UnaryOperator 0x127027128 <col:15, col:16> 'unsigned char' lvalue prefix '*' cannot overflow
|   |   |       `-ImplicitCastExpr 0x127027110 <col:16> 'unsigned char *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x1270270f0 <col:16> 'unsigned char *' lvalue Var 0x127026618 'reader' 'unsigned char *'
|   |   |-IfStmt 0x127027220 <line:28:3, line:29:9>
|   |   | |-BinaryOperator 0x1270271e8 <line:28:7, col:20> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x1270271d0 <col:7> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x127027190 <col:7> 'int' lvalue Var 0x12700e380 'label_len' 'int'
|   |   | | `-IntegerLiteral 0x1270271b0 <col:20> 'int' 0
|   |   | `-GotoStmt 0x127027208 <line:29:4, col:9> 'out' 0x127027008
|   |   |-IfStmt 0x127027488 <line:32:3, line:33:9>
|   |   | |-BinaryOperator 0x127027450 <line:32:7, col:74> 'int' '||'
|   |   | | |-ParenExpr 0x127027328 <col:7, col:36> 'int'
|   |   | | | `-BinaryOperator 0x127027308 <col:8, col:30> 'int' '>='
|   |   | | |   |-BinaryOperator 0x1270272b0 <col:8, col:17> 'unsigned char *' '+'
|   |   | | |   | |-ImplicitCastExpr 0x127027280 <col:8> 'unsigned char *' <LValueToRValue>
|   |   | | |   | | `-DeclRefExpr 0x127027240 <col:8> 'unsigned char *' lvalue Var 0x127026618 'reader' 'unsigned char *'
|   |   | | |   | `-ImplicitCastExpr 0x127027298 <col:17> 'int' <LValueToRValue>
|   |   | | |   |   `-DeclRefExpr 0x127027260 <col:17> 'int' lvalue Var 0x12700e380 'label_len' 'int'
|   |   | | |   `-ImplicitCastExpr 0x1270272f0 <col:30> 'unsigned char *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x1270272d0 <col:30> 'unsigned char *' lvalue ParmVar 0x12700dd88 'bufend' 'unsigned char *'
|   |   | | `-ParenExpr 0x127027430 <col:41, col:74> 'int'
|   |   | |   `-BinaryOperator 0x127027410 <col:42, col:66> 'int' '>='
|   |   | |     |-BinaryOperator 0x1270273b8 <col:42, col:53> 'int' '+'
|   |   | |     | |-ImplicitCastExpr 0x127027388 <col:42> 'int' <LValueToRValue>
|   |   | |     | | `-DeclRefExpr 0x127027348 <col:42> 'int' lvalue Var 0x12700e210 'nb_bytes' 'int'
|   |   | |     | `-ImplicitCastExpr 0x1270273a0 <col:53> 'int' <LValueToRValue>
|   |   | |     |   `-DeclRefExpr 0x127027368 <col:53> 'int' lvalue Var 0x12700e380 'label_len' 'int'
|   |   | |     `-ImplicitCastExpr 0x1270273f8 <col:66> 'int' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x1270273d8 <col:66> 'int' lvalue ParmVar 0x12700df08 'dest_len' 'int'
|   |   | `-GotoStmt 0x127027470 <line:33:4, col:9> 'err' 0x127026a58
|   |   |-UnaryOperator 0x1270274c8 <line:36:3, col:12> 'int' postfix '++'
|   |   | `-DeclRefExpr 0x1270274a8 <col:3> 'int' lvalue Var 0x12700e380 'label_len' 'int'
|   |   |-CallExpr 0x127027cf8 <line:38:3, col:33> 'void *'
|   |   | |-ImplicitCastExpr 0x127027ce0 <col:3> 'void *(*)(void *, const void *, unsigned long)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x127027be0 <col:3> 'void *(void *, const void *, unsigned long)' Function 0x127027990 'memcpy' 'void *(void *, const void *, unsigned long)'
|   |   | |-ImplicitCastExpr 0x127027d48 <col:10> 'void *' <BitCast>
|   |   | | `-ImplicitCastExpr 0x127027d30 <col:10> 'char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x127027c00 <col:10> 'char *' lvalue Var 0x1270266e8 'dest' 'char *'
|   |   | |-ImplicitCastExpr 0x127027d78 <col:16> 'const void *' <BitCast>
|   |   | | `-ImplicitCastExpr 0x127027d60 <col:16> 'unsigned char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x127027c20 <col:16> 'unsigned char *' lvalue Var 0x127026618 'reader' 'unsigned char *'
|   |   | `-ImplicitCastExpr 0x127027da8 <col:24> 'unsigned long' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x127027d90 <col:24> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x127027c40 <col:24> 'int' lvalue Var 0x12700e380 'label_len' 'int'
|   |   |-CompoundAssignOperator 0x127027e18 <line:40:3, col:15> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
|   |   | |-DeclRefExpr 0x127027dc0 <col:3> 'char *' lvalue Var 0x1270266e8 'dest' 'char *'
|   |   | `-ImplicitCastExpr 0x127027e00 <col:15> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x127027de0 <col:15> 'int' lvalue Var 0x12700e380 'label_len' 'int'
|   |   |-CompoundAssignOperator 0x127027ea0 <line:41:3, col:15> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-DeclRefExpr 0x127027e48 <col:3> 'int' lvalue Var 0x12700e210 'nb_bytes' 'int'
|   |   | `-ImplicitCastExpr 0x127027e88 <col:15> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x127027e68 <col:15> 'int' lvalue Var 0x12700e380 'label_len' 'int'
|   |   `-CompoundAssignOperator 0x127027f28 <line:42:3, col:15> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   |     |-DeclRefExpr 0x127027ed0 <col:3> 'unsigned char *' lvalue Var 0x127026618 'reader' 'unsigned char *'
|   |     `-ImplicitCastExpr 0x127027f10 <col:15> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x127027ef0 <col:15> 'int' lvalue Var 0x12700e380 'label_len' 'int'
|   |-LabelStmt 0x127028048 <line:45:3, line:47:12> 'out'
|   | `-BinaryOperator 0x127028028 <col:2, col:12> 'unsigned char *' '='
|   |   |-DeclRefExpr 0x127027fd0 <col:2> 'unsigned char *' lvalue Var 0x127026618 'reader' 'unsigned char *'
|   |   `-ImplicitCastExpr 0x127028010 <col:12> 'unsigned char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x127027ff0 <col:12> 'unsigned char *' lvalue ParmVar 0x12700de08 'name' 'unsigned char *'
|   |-BinaryOperator 0x1270280d8 <line:48:2, col:12> 'int' '='
|   | |-UnaryOperator 0x1270280a0 <col:2, col:3> 'int' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x127028088 <col:3> 'int *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x127028068 <col:3> 'int *' lvalue ParmVar 0x12700dfb8 'offset' 'int *'
|   | `-IntegerLiteral 0x1270280b8 <col:12> 'int' 0
|   |-WhileStmt 0x127028e90 <line:49:2, line:60:2>
|   | |-BinaryOperator 0x127028168 <line:49:9, col:18> 'int' '<'
|   | | |-ImplicitCastExpr 0x127028138 <col:9> 'unsigned char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1270280f8 <col:9> 'unsigned char *' lvalue Var 0x127026618 'reader' 'unsigned char *'
|   | | `-ImplicitCastExpr 0x127028150 <col:18> 'unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x127028118 <col:18> 'unsigned char *' lvalue ParmVar 0x12700dd88 'bufend' 'unsigned char *'
|   | `-CompoundStmt 0x127028e68 <col:26, line:60:2>
|   |   |-IfStmt 0x127028540 <line:50:3, line:57:3> has_else
|   |   | |-BinaryOperator 0x1270282b0 <line:50:7, col:29> 'int' '=='
|   |   | | |-ParenExpr 0x127028270 <col:7, col:24> 'int'
|   |   | | | `-BinaryOperator 0x127028250 <col:8, col:20> 'int' '&'
|   |   | | |   |-ImplicitCastExpr 0x127028238 <col:8, col:16> 'int' <IntegralCast>
|   |   | | |   | `-ImplicitCastExpr 0x127028220 <col:8, col:16> 'unsigned char' <LValueToRValue>
|   |   | | |   |   `-ArraySubscriptExpr 0x1270281e0 <col:8, col:16> 'unsigned char' lvalue
|   |   | | |   |     |-ImplicitCastExpr 0x1270281c8 <col:8> 'unsigned char *' <LValueToRValue>
|   |   | | |   |     | `-DeclRefExpr 0x127028188 <col:8> 'unsigned char *' lvalue Var 0x127026618 'reader' 'unsigned char *'
|   |   | | |   |     `-IntegerLiteral 0x1270281a8 <col:15> 'int' 0
|   |   | | |   `-IntegerLiteral 0x127028200 <col:20> 'int' 192
|   |   | | `-IntegerLiteral 0x127028290 <col:29> 'int' 192
|   |   | |-CompoundStmt 0x127028378 <col:35, line:53:3>
|   |   | | |-CompoundAssignOperator 0x127028340 <line:51:4, col:15> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | | | |-UnaryOperator 0x127028308 <col:4, col:5> 'int' lvalue prefix '*' cannot overflow
|   |   | | | | `-ImplicitCastExpr 0x1270282f0 <col:5> 'int *' <LValueToRValue>
|   |   | | | |   `-DeclRefExpr 0x1270282d0 <col:5> 'int *' lvalue ParmVar 0x12700dfb8 'offset' 'int *'
|   |   | | | `-IntegerLiteral 0x127028320 <col:15> 'int' 2
|   |   | | `-BreakStmt 0x127028370 <line:52:4>
|   |   | `-IfStmt 0x127028520 <line:54:8, line:57:3>
|   |   |   |-BinaryOperator 0x127028438 <line:54:12, col:23> 'int' '=='
|   |   |   | |-ImplicitCastExpr 0x127028420 <col:12, col:13> 'int' <IntegralCast>
|   |   |   | | `-ImplicitCastExpr 0x127028408 <col:12, col:13> 'unsigned char' <LValueToRValue>
|   |   |   | |   `-UnaryOperator 0x1270283d0 <col:12, col:13> 'unsigned char' lvalue prefix '*' cannot overflow
|   |   |   | |     `-ImplicitCastExpr 0x1270283b8 <col:13> 'unsigned char *' <LValueToRValue>
|   |   |   | |       `-DeclRefExpr 0x127028398 <col:13> 'unsigned char *' lvalue Var 0x127026618 'reader' 'unsigned char *'
|   |   |   | `-IntegerLiteral 0x1270283e8 <col:23> 'int' 0
|   |   |   `-CompoundStmt 0x127028500 <col:26, line:57:3>
|   |   |     |-CompoundAssignOperator 0x1270284c8 <line:55:4, col:15> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |     | |-UnaryOperator 0x127028490 <col:4, col:5> 'int' lvalue prefix '*' cannot overflow
|   |   |     | | `-ImplicitCastExpr 0x127028478 <col:5> 'int *' <LValueToRValue>
|   |   |     | |   `-DeclRefExpr 0x127028458 <col:5> 'int *' lvalue ParmVar 0x12700dfb8 'offset' 'int *'
|   |   |     | `-IntegerLiteral 0x1270284a8 <col:15> 'int' 1
|   |   |     `-BreakStmt 0x1270284f8 <line:56:4>
|   |   |-CompoundAssignOperator 0x127028e00 <line:58:3, col:14> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-UnaryOperator 0x1270285a8 <col:3, col:4> 'int' lvalue prefix '*' cannot overflow
|   |   | | `-ImplicitCastExpr 0x127028590 <col:4> 'int *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x127028570 <col:4> 'int *' lvalue ParmVar 0x12700dfb8 'offset' 'int *'
|   |   | `-IntegerLiteral 0x1270285c0 <col:14> 'int' 1
|   |   `-UnaryOperator 0x127028e50 <line:59:3, col:5> 'unsigned char *' prefix '++'
|   |     `-DeclRefExpr 0x127028e30 <col:5> 'unsigned char *' lvalue Var 0x127026618 'reader' 'unsigned char *'
|   |-ReturnStmt 0x127028ee8 <line:61:2, col:9>
|   | `-ImplicitCastExpr 0x127028ed0 <col:9> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x127028eb0 <col:9> 'int' lvalue Var 0x12700e210 'nb_bytes' 'int'
|   `-LabelStmt 0x127028f28 <line:63:3, line:64:9> 'err'
|     `-ReturnStmt 0x127028f18 <col:2, col:9>
|       `-IntegerLiteral 0x127028ef8 <col:9> 'int' 0
`-FunctionDecl 0x127027990 <line:38:3> col:3 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x127027a90 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x127027af8 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x127027b60 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x127027a38 <<invalid sloc>> Implicit 882
