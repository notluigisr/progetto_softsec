TranslationUnitDecl 0x128055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1280564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x128055bd0 '__int128'
|-TypedefDecl 0x128056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x128055bf0 'unsigned __int128'
|-TypedefDecl 0x10700be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x10700bc00 'struct __NSConstantString_tag'
|   `-Record 0x128056580 '__NSConstantString_tag'
|-TypedefDecl 0x10700be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x128055d90 '__SVInt8_t'
|-TypedefDecl 0x10700bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x128055db0 '__SVInt16_t'
|-TypedefDecl 0x10700bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x128055dd0 '__SVInt32_t'
|-TypedefDecl 0x10700bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x128055df0 '__SVInt64_t'
|-TypedefDecl 0x10700c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x128055e10 '__SVUint8_t'
|-TypedefDecl 0x10700c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x128055e30 '__SVUint16_t'
|-TypedefDecl 0x10700c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x128055e50 '__SVUint32_t'
|-TypedefDecl 0x10700c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x128055e70 '__SVUint64_t'
|-TypedefDecl 0x10700c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x128055e90 '__SVFloat16_t'
|-TypedefDecl 0x10700c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x128055eb0 '__SVFloat32_t'
|-TypedefDecl 0x10700c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x128055ed0 '__SVFloat64_t'
|-TypedefDecl 0x10700c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x128055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x10700c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x128055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x10700c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x128055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x10700c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x128055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x10700c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x128055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x10700c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x128055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x10700c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x128055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x10700c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x128055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x10700c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x128055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x10700c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x128056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x10700c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x128056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x10700c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x128056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x10700c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x128056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x10700c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x128056090 '__clang_svint8x3_t'
|-TypedefDecl 0x10700c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1280560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x10700c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1280560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x10700c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1280560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x10700c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x128056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x10700ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x128056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x10700cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x128056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x10700cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x128056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x10700cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x128056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x10700d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1280561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x10700d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1280561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x10700d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1280561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x10700d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x128056210 '__clang_svint8x4_t'
|-TypedefDecl 0x10700d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x128056230 '__clang_svint16x4_t'
|-TypedefDecl 0x10700d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x128056250 '__clang_svint32x4_t'
|-TypedefDecl 0x10700d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x128056270 '__clang_svint64x4_t'
|-TypedefDecl 0x10700d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x128056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x10700d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1280562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x10700d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1280562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x10700d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1280562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x10700d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x128056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x10700d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x128056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x10700d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x128056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x10700d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x128056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x10700da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x128056390 '__SVBool_t'
|-TypedefDecl 0x10700da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1280563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x10700dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1280563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x10700db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1280563f0 '__SVCount_t'
|-TypedefDecl 0x10700dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x10700dbb0 'char *'
|   `-BuiltinType 0x1280556b0 'char'
|-TypedefDecl 0x10700dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x10700dbb0 'char *'
|   `-BuiltinType 0x1280556b0 'char'
`-FunctionDecl 0x128041d38 <dataset_diviso_filec/func10958_vuln.c:1:1, line:71:1> line:1:12 br_ip6_multicast_query 'int (struct net_bridge *, struct net_bridge_port *, struct sk_buff *)' static
  |-ParmVarDecl 0x10700e248 <col:35, col:54> col:54 used br 'struct net_bridge *'
  |-ParmVarDecl 0x128041a28 <line:2:7, col:31> col:31 used port 'struct net_bridge_port *'
  |-ParmVarDecl 0x128041bf8 <line:3:7, col:23> col:23 used skb 'struct sk_buff *'
  `-CompoundStmt 0x104893350 <line:4:1, line:71:1>
    |-DeclStmt 0x128042238 <line:5:2, col:44>
    | |-RecordDecl 0x128041e40 <col:8, col:15> col:15 struct ipv6hdr
    | `-VarDecl 0x128041fa8 <col:2, col:43> col:24 used ip6h 'const struct ipv6hdr *' cinit
    |   `-ImplicitCastExpr 0x128042208 <col:31, col:43> 'const struct ipv6hdr *' <IntegralToPointer>
    |     `-CallExpr 0x1280421c8 <col:31, col:43> 'int'
    |       |-ImplicitCastExpr 0x1280421b0 <col:31> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x128042140 <col:31> 'int ()' Function 0x128042088 'ipv6_hdr' 'int ()'
    |       `-ImplicitCastExpr 0x1280421f0 <col:40> 'struct sk_buff *' <LValueToRValue>
    |         `-DeclRefExpr 0x128042160 <col:40> 'struct sk_buff *' lvalue ParmVar 0x128041bf8 'skb' 'struct sk_buff *'
    |-DeclStmt 0x128042438 <line:6:2, col:21>
    | |-RecordDecl 0x128042250 <col:2, col:9> col:9 struct mld_msg
    | `-VarDecl 0x1280423b8 <col:2, col:18> col:18 used mld 'struct mld_msg *'
    |-DeclStmt 0x128042638 <line:7:2, col:33>
    | |-RecordDecl 0x128042450 <col:2, col:9> col:9 struct net_bridge_mdb_entry
    | `-VarDecl 0x1280425b8 <col:2, col:31> col:31 used mp 'struct net_bridge_mdb_entry *'
    |-DeclStmt 0x128042838 <line:8:2, col:26>
    | |-RecordDecl 0x128042650 <col:2, col:9> col:9 struct mld2_query
    | `-VarDecl 0x1280427b8 <col:2, col:21> col:21 used mld2q 'struct mld2_query *'
    |-DeclStmt 0x106825680 <line:9:2, col:33>
    | |-RecordDecl 0x128042850 <col:2, col:9> col:9 struct net_bridge_port_group
    | `-VarDecl 0x106825600 <col:2, col:32> col:32 used p 'struct net_bridge_port_group *'
    |-DeclStmt 0x106825758 <line:10:2, col:37>
    | `-VarDecl 0x1068256f0 <col:2, col:31> col:31 invalid __rcu 'struct net_bridge_port_group'
    |-DeclStmt 0x1068257f0 <line:11:2, col:25>
    | `-VarDecl 0x106825788 <col:2, col:16> col:16 used max_delay 'unsigned long'
    |-DeclStmt 0x1068258c0 <line:12:2, col:29>
    | `-VarDecl 0x106825820 <col:2, col:22> col:16 used now 'unsigned long' cinit
    |   `-RecoveryExpr 0x1068258a0 <col:22> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x106825b00 <line:13:2, col:37>
    | |-RecordDecl 0x1068258d8 <col:8, col:15> col:15 struct in6_addr
    | `-VarDecl 0x106825a48 <col:2, col:33> col:25 used group 'const struct in6_addr *' cinit
    |   `-RecoveryExpr 0x106825ac8 <col:33> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x106825bb8 <line:14:2, col:13>
    | `-VarDecl 0x106825b30 <col:2, col:12> col:6 used err 'int' cinit
    |   `-IntegerLiteral 0x106825b98 <col:12> 'int' 0
    |-CallExpr 0x106825d48 <line:17:2, col:31> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x106825cb0 <col:2> 'int ()' Function 0x106825bf8 'spin_lock' 'int ()'
    | `-UnaryOperator 0x106825d30 <col:12, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x106825d08 <col:13, col:17> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x106825cd0 <col:13> 'struct net_bridge *' lvalue ParmVar 0x10700e248 'br' 'struct net_bridge *'
    |-IfStmt 0x106826070 <line:18:2, line:20:8>
    | |-RecoveryExpr 0x106825fe8 <line:18:6, line:19:47> '_Bool' contains-errors
    | `-GotoStmt 0x106826058 <line:20:3, col:8> 'out' 0x106826008
    |-CallExpr 0x106826388 <line:22:2, col:68> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x106826170 <col:2> 'int ()' Function 0x1068260b8 'br_multicast_query_received' 'int ()'
    | |-DeclRefExpr 0x106826190 <col:30> 'struct net_bridge *' lvalue ParmVar 0x10700e248 'br' 'struct net_bridge *'
    | |-DeclRefExpr 0x1068261b0 <col:34> 'struct net_bridge_port *' lvalue ParmVar 0x128041a28 'port' 'struct net_bridge_port *'
    | `-UnaryOperator 0x106826370 <col:40, col:67> '<dependent type>' contains-errors prefix '!' cannot overflow
    |   `-CallExpr 0x106826348 <col:41, col:67> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x1068262b0 <col:41> 'int ()' Function 0x1068261f8 'ipv6_addr_any' 'int ()'
    |     `-UnaryOperator 0x106826330 <col:55, col:62> '<dependent type>' contains-errors prefix '&' cannot overflow
    |       `-RecoveryExpr 0x106826308 <col:56, col:62> '<dependent type>' contains-errors lvalue
    |         `-DeclRefExpr 0x1068262d0 <col:56> 'const struct ipv6hdr *' lvalue Var 0x128041fa8 'ip6h' 'const struct ipv6hdr *'
    |-IfStmt 0x1048907b8 <line:24:2, line:42:2> has_else
    | |-RecoveryExpr 0x106826490 <line:24:6, col:29> '_Bool' contains-errors
    | |-CompoundStmt 0x10488ff50 <col:32, line:33:2>
    | | |-IfStmt 0x10488f8c0 <line:25:3, line:28:3>
    | | | |-RecoveryExpr 0x10488f850 <line:25:7, col:39> '_Bool' contains-errors
    | | | `-CompoundStmt 0x10488f8a8 <col:42, line:28:3>
    | | |   `-GotoStmt 0x10488f890 <line:27:4, col:9> 'out' 0x106826008
    | | |-BinaryOperator 0x10488fb30 <line:29:3, col:41> 'struct mld_msg *' '='
    | | | |-DeclRefExpr 0x10488f8e0 <col:3> 'struct mld_msg *' lvalue Var 0x1280423b8 'mld' 'struct mld_msg *'
    | | | `-CStyleCastExpr 0x10488fb08 <col:9, col:41> 'struct mld_msg *' <IntegralToPointer>
    | | |   `-CallExpr 0x10488fa38 <col:28, col:41> 'int'
    | | |     |-ImplicitCastExpr 0x10488fa20 <col:28> 'int (*)()' <FunctionToPointerDecay>
    | | |     | `-DeclRefExpr 0x10488f9e0 <col:28> 'int ()' Function 0x10488f928 'icmp6_hdr' 'int ()'
    | | |     `-ImplicitCastExpr 0x10488fa60 <col:38> 'struct sk_buff *' <LValueToRValue>
    | | |       `-DeclRefExpr 0x10488fa00 <col:38> 'struct sk_buff *' lvalue ParmVar 0x128041bf8 'skb' 'struct sk_buff *'
    | | |-BinaryOperator 0x10488fe20 <line:30:3, col:56> 'unsigned long' contains-errors '='
    | | | |-DeclRefExpr 0x10488fb50 <col:3> 'unsigned long' lvalue Var 0x106825788 'max_delay' 'unsigned long'
    | | | `-CallExpr 0x10488fdf8 <col:15, col:56> '<dependent type>' contains-errors
    | | |   |-DeclRefExpr 0x10488fc50 <col:15> 'int ()' Function 0x10488fb98 'msecs_to_jiffies' 'int ()'
    | | |   `-CallExpr 0x10488fdd0 <col:32, col:55> '<dependent type>' contains-errors
    | | |     |-DeclRefExpr 0x10488fd50 <col:32> 'int ()' Function 0x10488fc98 'ntohs' 'int ()'
    | | |     `-RecoveryExpr 0x10488fda8 <col:38, col:43> '<dependent type>' contains-errors lvalue
    | | |       `-DeclRefExpr 0x10488fd70 <col:38> 'struct mld_msg *' lvalue Var 0x1280423b8 'mld' 'struct mld_msg *'
    | | `-IfStmt 0x10488ff30 <line:31:3, line:32:18>
    | |   |-ImplicitCastExpr 0x10488fe60 <line:31:7> 'unsigned long' <LValueToRValue>
    | |   | `-DeclRefExpr 0x10488fe40 <col:7> 'unsigned long' lvalue Var 0x106825788 'max_delay' 'unsigned long'
    | |   `-BinaryOperator 0x10488ff10 <line:32:4, col:18> 'const struct in6_addr *' contains-errors '='
    | |     |-DeclRefExpr 0x10488fe78 <col:4> 'const struct in6_addr *' contains-errors lvalue Var 0x106825a48 'group' 'const struct in6_addr *'
    | |     `-UnaryOperator 0x10488fef8 <col:12, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |       `-RecoveryExpr 0x10488fed0 <col:13, col:18> '<dependent type>' contains-errors lvalue
    | |         `-DeclRefExpr 0x10488fe98 <col:13> 'struct mld_msg *' lvalue Var 0x1280423b8 'mld' 'struct mld_msg *'
    | `-IfStmt 0x104890798 <line:33:9, line:42:2>
    |   |-RecoveryExpr 0x104890050 <line:33:13, col:38> '_Bool' contains-errors
    |   `-CompoundStmt 0x104890768 <col:41, line:42:2>
    |     |-IfStmt 0x104890190 <line:34:3, line:37:3>
    |     | |-RecoveryExpr 0x104890120 <line:34:7, col:41> '_Bool' contains-errors
    |     | `-CompoundStmt 0x104890178 <col:44, line:37:3>
    |     |   `-GotoStmt 0x104890160 <line:36:4, col:9> 'out' 0x106826008
    |     |-BinaryOperator 0x104890320 <line:38:3, col:45> 'struct mld2_query *' '='
    |     | |-DeclRefExpr 0x1048901b0 <col:3> 'struct mld2_query *' lvalue Var 0x1280427b8 'mld2q' 'struct mld2_query *'
    |     | `-CStyleCastExpr 0x1048902f8 <col:11, col:45> 'struct mld2_query *' <IntegralToPointer>
    |     |   `-CallExpr 0x104890228 <col:32, col:45> 'int'
    |     |     |-ImplicitCastExpr 0x104890210 <col:32> 'int (*)()' <FunctionToPointerDecay>
    |     |     | `-DeclRefExpr 0x1048901d0 <col:32> 'int ()' Function 0x10488f928 'icmp6_hdr' 'int ()'
    |     |     `-ImplicitCastExpr 0x104890250 <col:42> 'struct sk_buff *' <LValueToRValue>
    |     |       `-DeclRefExpr 0x1048901f0 <col:42> 'struct sk_buff *' lvalue ParmVar 0x128041bf8 'skb' 'struct sk_buff *'
    |     |-IfStmt 0x104890488 <line:39:3, line:40:20>
    |     | |-UnaryOperator 0x1048903b8 <line:39:7, col:15> '<dependent type>' contains-errors prefix '!' cannot overflow
    |     | | `-ImplicitCastExpr 0x1048903a0 <col:8, col:15> '<dependent type>' contains-errors <LValueToRValue>
    |     | |   `-RecoveryExpr 0x104890378 <col:8, col:15> '<dependent type>' contains-errors lvalue
    |     | |     `-DeclRefExpr 0x104890340 <col:8> 'struct mld2_query *' lvalue Var 0x1280427b8 'mld2q' 'struct mld2_query *'
    |     | `-BinaryOperator 0x104890468 <line:40:4, col:20> 'const struct in6_addr *' contains-errors '='
    |     |   |-DeclRefExpr 0x1048903d0 <col:4> 'const struct in6_addr *' contains-errors lvalue Var 0x106825a48 'group' 'const struct in6_addr *'
    |     |   `-UnaryOperator 0x104890450 <col:12, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     |     `-RecoveryExpr 0x104890428 <col:13, col:20> '<dependent type>' contains-errors lvalue
    |     |       `-DeclRefExpr 0x1048903f0 <col:13> 'struct mld2_query *' lvalue Var 0x1280427b8 'mld2q' 'struct mld2_query *'
    |     `-BinaryOperator 0x104890748 <line:41:3, col:71> 'unsigned long' contains-errors '='
    |       |-DeclRefExpr 0x1048904a8 <col:3> 'unsigned long' lvalue Var 0x106825788 'max_delay' 'unsigned long'
    |       `-ConditionalOperator 0x104890718 <col:15, col:71> '<dependent type>' contains-errors
    |         |-RecoveryExpr 0x104890500 <col:15, col:22> '<dependent type>' contains-errors lvalue
    |         | `-DeclRefExpr 0x1048904c8 <col:15> 'struct mld2_query *' lvalue Var 0x1280427b8 'mld2q' 'struct mld2_query *'
    |         |-CallExpr 0x1048906d0 <col:34, col:67> '<dependent type>' contains-errors
    |         | |-DeclRefExpr 0x104890608 <col:34> 'int ()' Function 0x104890550 'MLDV2_MRC' 'int ()'
    |         | `-CallExpr 0x1048906a8 <col:44, col:66> '<dependent type>' contains-errors
    |         |   |-DeclRefExpr 0x104890628 <col:44> 'int ()' Function 0x10488fc98 'ntohs' 'int ()'
    |         |   `-RecoveryExpr 0x104890680 <col:50, col:57> '<dependent type>' contains-errors lvalue
    |         |     `-DeclRefExpr 0x104890648 <col:50> 'struct mld2_query *' lvalue Var 0x1280427b8 'mld2q' 'struct mld2_query *'
    |         `-IntegerLiteral 0x1048906f8 <col:71> 'int' 1
    |-IfStmt 0x104891868 <line:44:2, line:45:8>
    | |-UnaryOperator 0x104891838 <line:44:6, col:7> 'int' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x104891820 <col:7> 'const struct in6_addr *' contains-errors <LValueToRValue>
    | |   `-DeclRefExpr 0x104891800 <col:7> 'const struct in6_addr *' contains-errors lvalue Var 0x106825a48 'group' 'const struct in6_addr *'
    | `-GotoStmt 0x104891850 <line:45:3, col:8> 'out' 0x106826008
    |-IfStmt 0x104891d00 <line:49:2, line:50:8>
    | |-UnaryOperator 0x104891cd0 <line:49:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x104891cb8 <col:7> 'struct net_bridge_mdb_entry *' <LValueToRValue>
    | |   `-DeclRefExpr 0x104891c98 <col:7> 'struct net_bridge_mdb_entry *' lvalue Var 0x1280425b8 'mp' 'struct net_bridge_mdb_entry *'
    | `-GotoStmt 0x104891ce8 <line:50:3, col:8> 'out' 0x106826008
    |-CompoundAssignOperator 0x104891da0 <line:52:2, col:19> 'unsigned long' contains-errors '*=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | |-DeclRefExpr 0x104891d20 <col:2> 'unsigned long' lvalue Var 0x106825788 'max_delay' 'unsigned long'
    | `-RecoveryExpr 0x104891d78 <col:15, col:19> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x104891d40 <col:15> 'struct net_bridge *' lvalue ParmVar 0x10700e248 'br' 'struct net_bridge *'
    |-IfStmt 0x1048926c0 <line:53:2, line:57:40>
    | |-BinaryOperator 0x104892468 <line:53:6, line:56:45> 'int' contains-errors '&&'
    | | |-RecoveryExpr 0x104891e08 <line:53:6, col:10> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x104891dd0 <col:6> 'struct net_bridge_mdb_entry *' lvalue Var 0x1280425b8 'mp' 'struct net_bridge_mdb_entry *'
    | | `-ParenExpr 0x104892448 <line:54:6, line:56:45> '<dependent type>' contains-errors
    | |   `-ConditionalOperator 0x104892418 <line:54:7, line:56:44> '<dependent type>' contains-errors
    | |     |-CallExpr 0x104891fa8 <line:54:7, col:31> '<dependent type>' contains-errors
    | |     | |-DeclRefExpr 0x104891f10 <col:7> 'int ()' Function 0x104891e58 'timer_pending' 'int ()'
    | |     | `-UnaryOperator 0x104891f90 <col:21, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |     |   `-RecoveryExpr 0x104891f68 <col:22, col:26> '<dependent type>' contains-errors lvalue
    | |     |     `-DeclRefExpr 0x104891f30 <col:22> 'struct net_bridge_mdb_entry *' lvalue Var 0x1280425b8 'mp' 'struct net_bridge_mdb_entry *'
    | |     |-CallExpr 0x104892208 <line:55:7, col:52> '<dependent type>' contains-errors
    | |     | |-DeclRefExpr 0x1048920b0 <col:7> 'int ()' Function 0x104891ff8 'time_after' 'int ()'
    | |     | |-CXXDependentScopeMemberExpr 0x104892130 <col:18, col:28> '<dependent type>' contains-errors lvalue .expires
    | |     | | `-RecoveryExpr 0x104892108 <col:18, col:22> '<dependent type>' contains-errors lvalue
    | |     | |   `-DeclRefExpr 0x1048920d0 <col:18> 'struct net_bridge_mdb_entry *' lvalue Var 0x1280425b8 'mp' 'struct net_bridge_mdb_entry *'
    | |     | `-BinaryOperator 0x1048921e8 <col:37, col:43> 'unsigned long' contains-errors '+'
    | |     |   |-ImplicitCastExpr 0x1048921b8 <col:37> 'unsigned long' contains-errors <LValueToRValue>
    | |     |   | `-DeclRefExpr 0x104892178 <col:37> 'unsigned long' contains-errors lvalue Var 0x106825820 'now' 'unsigned long'
    | |     |   `-ImplicitCastExpr 0x1048921d0 <col:43> 'unsigned long' <LValueToRValue>
    | |     |     `-DeclRefExpr 0x104892198 <col:43> 'unsigned long' lvalue Var 0x106825788 'max_delay' 'unsigned long'
    | |     `-BinaryOperator 0x1048923f8 <line:56:7, col:44> 'int' contains-errors '>='
    | |       |-CallExpr 0x1048923b0 <col:7, col:39> '<dependent type>' contains-errors
    | |       | |-DeclRefExpr 0x104892318 <col:7> 'int ()' Function 0x104892260 'try_to_del_timer_sync' 'int ()'
    | |       | `-UnaryOperator 0x104892398 <col:29, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |       |   `-RecoveryExpr 0x104892370 <col:30, col:34> '<dependent type>' contains-errors lvalue
    | |       |     `-DeclRefExpr 0x104892338 <col:30> 'struct net_bridge_mdb_entry *' lvalue Var 0x1280425b8 'mp' 'struct net_bridge_mdb_entry *'
    | |       `-IntegerLiteral 0x1048923d8 <col:44> 'int' 0
    | `-CallExpr 0x104892690 <line:57:3, col:40> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x104892568 <col:3> 'int ()' Function 0x1048924b0 'mod_timer' 'int ()'
    |   |-UnaryOperator 0x1048925e8 <col:13, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-RecoveryExpr 0x1048925c0 <col:14, col:18> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x104892588 <col:14> 'struct net_bridge_mdb_entry *' lvalue Var 0x1280425b8 'mp' 'struct net_bridge_mdb_entry *'
    |   `-BinaryOperator 0x104892670 <col:25, col:31> 'unsigned long' contains-errors '+'
    |     |-ImplicitCastExpr 0x104892640 <col:25> 'unsigned long' contains-errors <LValueToRValue>
    |     | `-DeclRefExpr 0x104892600 <col:25> 'unsigned long' contains-errors lvalue Var 0x106825820 'now' 'unsigned long'
    |     `-ImplicitCastExpr 0x104892658 <col:31> 'unsigned long' <LValueToRValue>
    |       `-DeclRefExpr 0x104892620 <col:31> 'unsigned long' lvalue Var 0x106825788 'max_delay' 'unsigned long'
    |-LabelStmt 0x1048932e8 <line:68:1, line:69:33> 'out'
    | `-CallExpr 0x1048932c0 <col:2, col:33> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x104893228 <col:2> 'int ()' Function 0x104893170 'spin_unlock' 'int ()'
    |   `-UnaryOperator 0x1048932a8 <col:14, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x104893280 <col:15, col:19> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x104893248 <col:15> 'struct net_bridge *' lvalue ParmVar 0x10700e248 'br' 'struct net_bridge *'
    `-ReturnStmt 0x104893340 <line:70:2, col:9>
      `-ImplicitCastExpr 0x104893328 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x104893308 <col:9> 'int' lvalue Var 0x106825b30 'err' 'int'
