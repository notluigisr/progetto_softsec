TranslationUnitDecl 0x12f855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12f8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12f855bd0 '__int128'
|-TypedefDecl 0x12f856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12f855bf0 'unsigned __int128'
|-TypedefDecl 0x13800be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13800bc00 'struct __NSConstantString_tag'
|   `-Record 0x12f856580 '__NSConstantString_tag'
|-TypedefDecl 0x13800be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12f855d90 '__SVInt8_t'
|-TypedefDecl 0x13800bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12f855db0 '__SVInt16_t'
|-TypedefDecl 0x13800bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12f855dd0 '__SVInt32_t'
|-TypedefDecl 0x13800bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12f855df0 '__SVInt64_t'
|-TypedefDecl 0x13800c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12f855e10 '__SVUint8_t'
|-TypedefDecl 0x13800c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12f855e30 '__SVUint16_t'
|-TypedefDecl 0x13800c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12f855e50 '__SVUint32_t'
|-TypedefDecl 0x13800c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12f855e70 '__SVUint64_t'
|-TypedefDecl 0x13800c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12f855e90 '__SVFloat16_t'
|-TypedefDecl 0x13800c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12f855eb0 '__SVFloat32_t'
|-TypedefDecl 0x13800c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12f855ed0 '__SVFloat64_t'
|-TypedefDecl 0x13800c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12f855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13800c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12f855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13800c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12f855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13800c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12f855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13800c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12f855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13800c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12f855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13800c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12f855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13800c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12f855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13800c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12f855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13800c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12f856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13800c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12f856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13800c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12f856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13800c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12f856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13800c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12f856090 '__clang_svint8x3_t'
|-TypedefDecl 0x13800c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12f8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13800c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12f8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13800c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12f8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13800c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12f856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13800ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12f856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13800cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12f856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13800cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12f856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13800cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12f856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13800d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12f8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13800d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12f8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13800d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12f8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13800d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12f856210 '__clang_svint8x4_t'
|-TypedefDecl 0x13800d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12f856230 '__clang_svint16x4_t'
|-TypedefDecl 0x13800d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12f856250 '__clang_svint32x4_t'
|-TypedefDecl 0x13800d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12f856270 '__clang_svint64x4_t'
|-TypedefDecl 0x13800d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12f856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13800d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12f8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13800d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12f8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13800d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12f8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13800d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12f856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13800d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12f856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13800d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12f856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13800d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12f856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13800da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12f856390 '__SVBool_t'
|-TypedefDecl 0x13800da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12f8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13800dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12f8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13800db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12f8563f0 '__SVCount_t'
|-TypedefDecl 0x13800dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13800dbb0 'char *'
|   `-BuiltinType 0x12f8556b0 'char'
|-TypedefDecl 0x13800dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13800dbb0 'char *'
|   `-BuiltinType 0x12f8556b0 'char'
|-FunctionDecl 0x13800dd98 <dataset_diviso_filec/func5142_vuln.c:1:1, line:63:1> line:1:5 init_aliases 'int (void)'
| `-CompoundStmt 0x139809bb0 <line:2:1, line:63:1>
|   |-DeclStmt 0x13800df88 <line:4:5, col:33>
|   | `-VarDecl 0x13800df20 <col:5, col:10> col:10 invalid alias 'char'
|   |-DeclStmt 0x13800e070 <line:5:5, col:28>
|   | `-VarDecl 0x13800e008 <col:5, col:10> col:10 invalid dir 'char'
|   |-IfStmt 0x13800e320 <line:7:5, line:9:5>
|   | |-RecoveryExpr 0x13800e2b8 <line:7:9, col:46> '_Bool' contains-errors
|   | `-CompoundStmt 0x13800e308 <col:52, line:9:5>
|   |   `-ReturnStmt 0x13800e2f8 <line:8:9, col:16>
|   |     `-IntegerLiteral 0x13800e2d8 <col:16> 'int' 0
|   |-WhileStmt 0x1398098d0 <line:10:5, line:52:5>
|   | |-BinaryOperator 0x138027a38 <line:10:12, col:46> 'int' contains-errors '!='
|   | | |-CallExpr 0x1380279e0 <col:12, col:41> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x1380278b8 <col:12> 'int ()' Function 0x138027800 'fgets' 'int ()'
|   | | | |-RecoveryExpr 0x1380278d8 <col:18> '<dependent type>' contains-errors lvalue
|   | | | |-UnaryExprOrTypeTraitExpr 0x138027918 <col:25, col:32> 'unsigned long' contains-errors sizeof
|   | | | | `-RecoveryExpr 0x1380278f8 <col:32> '<dependent type>' contains-errors lvalue
|   | | | `-RecoveryExpr 0x1380279c0 <col:39> '<dependent type>' contains-errors lvalue
|   | | `-RecoveryExpr 0x138027a18 <col:46> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x1398098a0 <col:52, line:52:5>
|   |   |-IfStmt 0x138027c58 <line:11:9, line:13:9>
|   |   | |-BinaryOperator 0x138027c18 <line:11:13, col:58> 'int' contains-errors '||'
|   |   | | |-BinaryOperator 0x138027b68 <col:13, col:40> 'int' contains-errors '||'
|   |   | | | |-BinaryOperator 0x138027ac0 <col:13, col:23> 'int' contains-errors '=='
|   |   | | | | |-UnaryOperator 0x138027a90 <col:13, col:14> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |   | | | | | `-ImplicitCastExpr 0x138027a78 <col:14> '<dependent type>' contains-errors <LValueToRValue>
|   |   | | | | |   `-RecoveryExpr 0x138027a58 <col:14> '<dependent type>' contains-errors lvalue
|   |   | | | | `-CharacterLiteral 0x138027aa8 <col:23> 'int' 35
|   |   | | | `-BinaryOperator 0x138027b48 <col:30, col:40> 'int' contains-errors '=='
|   |   | | |   |-UnaryOperator 0x138027b18 <col:30, col:31> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |   | | |   | `-ImplicitCastExpr 0x138027b00 <col:31> '<dependent type>' contains-errors <LValueToRValue>
|   |   | | |   |   `-RecoveryExpr 0x138027ae0 <col:31> '<dependent type>' contains-errors lvalue
|   |   | | |   `-CharacterLiteral 0x138027b30 <col:40> 'int' 10
|   |   | | `-BinaryOperator 0x138027bf8 <col:48, col:58> 'int' contains-errors '=='
|   |   | |   |-UnaryOperator 0x138027bc0 <col:48, col:49> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x138027ba8 <col:49> '<dependent type>' contains-errors <LValueToRValue>
|   |   | |   |   `-RecoveryExpr 0x138027b88 <col:49> '<dependent type>' contains-errors lvalue
|   |   | |   `-IntegerLiteral 0x138027bd8 <col:58> 'int' 0
|   |   | `-CompoundStmt 0x138027c40 <col:61, line:13:9>
|   |   |   `-ContinueStmt 0x138027c38 <line:12:13>
|   |   |-CompoundStmt 0x1380285e8 <line:14:9, line:21:9>
|   |   | |-DeclStmt 0x1380283d0 <line:15:13, col:56>
|   |   | | `-VarDecl 0x138027c90 <col:13, col:54> col:26 used z 'char *const' cinit
|   |   | |   `-BinaryOperator 0x1380283b0 <col:30, col:54> '<dependent type>' contains-errors '-'
|   |   | |     |-BinaryOperator 0x138028370 <col:30, col:50> '<dependent type>' contains-errors '+'
|   |   | |     | |-RecoveryExpr 0x138027cf8 <col:30> '<dependent type>' contains-errors lvalue
|   |   | |     | `-CallExpr 0x138028348 <col:38, col:50> '<dependent type>' contains-errors
|   |   | |     |   |-DeclRefExpr 0x1380282f0 <col:38> 'unsigned long (const char *)' Function 0x138028180 'strlen' 'unsigned long (const char *)'
|   |   | |     |   `-RecoveryExpr 0x138028310 <col:45> '<dependent type>' contains-errors lvalue
|   |   | |     `-IntegerLiteral 0x138028390 <col:54> 'unsigned int' 1
|   |   | |-IfStmt 0x138028520 <line:17:13, line:19:13>
|   |   | | |-BinaryOperator 0x138028480 <line:17:17, col:23> 'int' contains-errors '!='
|   |   | | | |-ImplicitCastExpr 0x138028468 <col:17, col:18> 'int' contains-errors <IntegralCast>
|   |   | | | | `-ImplicitCastExpr 0x138028450 <col:17, col:18> 'char' contains-errors <LValueToRValue>
|   |   | | | |   `-UnaryOperator 0x138028420 <col:17, col:18> 'char' contains-errors lvalue prefix '*' cannot overflow
|   |   | | | |     `-ImplicitCastExpr 0x138028408 <col:18> 'char *' contains-errors <LValueToRValue>
|   |   | | | |       `-DeclRefExpr 0x1380283e8 <col:18> 'char *const' contains-errors lvalue Var 0x138027c90 'z' 'char *const'
|   |   | | | `-CharacterLiteral 0x138028438 <col:23> 'int' 10
|   |   | | `-CompoundStmt 0x138028508 <col:29, line:19:13>
|   |   | |   `-GotoStmt 0x1380284f0 <line:18:17, col:22> 'bad' 0x1380284a0
|   |   | `-BinaryOperator 0x1380285c8 <line:20:13, col:18> 'char' contains-errors '='
|   |   |   |-UnaryOperator 0x138028578 <col:13, col:14> 'char' contains-errors lvalue prefix '*' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x138028560 <col:14> 'char *' contains-errors <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x138028540 <col:14> 'char *const' contains-errors lvalue Var 0x138027c90 'z' 'char *const'
|   |   |   `-ImplicitCastExpr 0x1380285b0 <col:18> 'char' <IntegralCast>
|   |   |     `-IntegerLiteral 0x138028590 <col:18> 'int' 0
|   |   |-DoStmt 0x1380293e0 <line:22:9, line:33:42>
|   |   | |-CompoundStmt 0x138029288 <line:22:12, line:33:9>
|   |   | | |-IfStmt 0x138028f18 <line:23:13, line:25:13>
|   |   | | | |-BinaryOperator 0x138028ec8 <line:23:17, col:63> 'int' contains-errors '||'
|   |   | | | | |-BinaryOperator 0x138028e58 <col:17, col:47> 'int' contains-errors '=='
|   |   | | | | | |-CallExpr 0x138028e00 <col:17, col:42> '<dependent type>' contains-errors
|   |   | | | | | | |-DeclRefExpr 0x138028610 <col:17> 'int ()' Function 0x138027800 'fgets' 'int ()'
|   |   | | | | | | |-RecoveryExpr 0x138028630 <col:23> '<dependent type>' contains-errors lvalue
|   |   | | | | | | |-UnaryExprOrTypeTraitExpr 0x138028670 <col:28, col:35> 'unsigned long' contains-errors sizeof
|   |   | | | | | | | `-RecoveryExpr 0x138028650 <col:35> '<dependent type>' contains-errors lvalue
|   |   | | | | | | `-RecoveryExpr 0x1380287c8 <col:40> '<dependent type>' contains-errors lvalue
|   |   | | | | | `-RecoveryExpr 0x138028e38 <col:47> '<dependent type>' contains-errors lvalue
|   |   | | | | `-BinaryOperator 0x138028ea8 <col:55, col:63> 'int' contains-errors '=='
|   |   | | | |   |-UnaryOperator 0x138028e90 <col:55, col:56> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |   | | | |   | `-ImplicitCastExpr 0x138028e78 <col:56> '<dependent type>' contains-errors <LValueToRValue>
|   |   | | | |   |   `-RecoveryExpr 0x138028718 <col:56> '<dependent type>' contains-errors lvalue
|   |   | | | |   `-IntegerLiteral 0x138028768 <col:63> 'int' 0
|   |   | | | `-CompoundStmt 0x138028f00 <col:66, line:25:13>
|   |   | | |   `-GotoStmt 0x138028ee8 <line:24:17, col:22> 'bad' 0x1380284a0
|   |   | | `-CompoundStmt 0x138029268 <line:26:13, line:32:13>
|   |   | |   |-DeclStmt 0x1380290b8 <line:27:17, col:56>
|   |   | |   | `-VarDecl 0x138028f50 <col:17, col:54> col:30 used z 'char *const' cinit
|   |   | |   |   `-BinaryOperator 0x138029098 <col:34, col:54> '<dependent type>' contains-errors '-'
|   |   | |   |     |-BinaryOperator 0x138029058 <col:34, col:50> '<dependent type>' contains-errors '+'
|   |   | |   |     | |-RecoveryExpr 0x138028fb8 <col:34> '<dependent type>' contains-errors lvalue
|   |   | |   |     | `-CallExpr 0x138029030 <col:40, col:50> '<dependent type>' contains-errors
|   |   | |   |     |   |-DeclRefExpr 0x138028fd8 <col:40> 'unsigned long (const char *)' Function 0x138028180 'strlen' 'unsigned long (const char *)'
|   |   | |   |     |   `-RecoveryExpr 0x138028ff8 <col:47> '<dependent type>' contains-errors lvalue
|   |   | |   |     `-IntegerLiteral 0x138029078 <col:54> 'unsigned int' 1
|   |   | |   `-IfStmt 0x138029248 <line:29:17, line:31:17>
|   |   | |     |-BinaryOperator 0x138029168 <line:29:21, col:27> 'int' contains-errors '=='
|   |   | |     | |-ImplicitCastExpr 0x138029150 <col:21, col:22> 'int' contains-errors <IntegralCast>
|   |   | |     | | `-ImplicitCastExpr 0x138029138 <col:21, col:22> 'char' contains-errors <LValueToRValue>
|   |   | |     | |   `-UnaryOperator 0x138029108 <col:21, col:22> 'char' contains-errors lvalue prefix '*' cannot overflow
|   |   | |     | |     `-ImplicitCastExpr 0x1380290f0 <col:22> 'char *' contains-errors <LValueToRValue>
|   |   | |     | |       `-DeclRefExpr 0x1380290d0 <col:22> 'char *const' contains-errors lvalue Var 0x138028f50 'z' 'char *const'
|   |   | |     | `-CharacterLiteral 0x138029120 <col:27> 'int' 10
|   |   | |     `-CompoundStmt 0x138029230 <col:33, line:31:17>
|   |   | |       `-BinaryOperator 0x138029210 <line:30:21, col:26> 'char' contains-errors '='
|   |   | |         |-UnaryOperator 0x1380291c0 <col:21, col:22> 'char' contains-errors lvalue prefix '*' cannot overflow
|   |   | |         | `-ImplicitCastExpr 0x1380291a8 <col:22> 'char *' contains-errors <LValueToRValue>
|   |   | |         |   `-DeclRefExpr 0x138029188 <col:22> 'char *const' contains-errors lvalue Var 0x138028f50 'z' 'char *const'
|   |   | |         `-ImplicitCastExpr 0x1380291f8 <col:26> 'char' <IntegralCast>
|   |   | |           `-IntegerLiteral 0x1380291d8 <col:26> 'int' 0
|   |   | `-BinaryOperator 0x1380293c0 <line:33:18, col:41> 'int' contains-errors '||'
|   |   |   |-BinaryOperator 0x138029310 <col:18, col:26> 'int' contains-errors '=='
|   |   |   | |-UnaryOperator 0x1380292e0 <col:18, col:19> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |   |   | | `-ImplicitCastExpr 0x1380292c8 <col:19> '<dependent type>' contains-errors <LValueToRValue>
|   |   |   | |   `-RecoveryExpr 0x1380292a8 <col:19> '<dependent type>' contains-errors lvalue
|   |   |   | `-CharacterLiteral 0x1380292f8 <col:26> 'int' 35
|   |   |   `-BinaryOperator 0x1380293a0 <col:33, col:41> 'int' contains-errors '=='
|   |   |     |-UnaryOperator 0x138029368 <col:33, col:34> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |   |     | `-ImplicitCastExpr 0x138029350 <col:34> '<dependent type>' contains-errors <LValueToRValue>
|   |   |     |   `-RecoveryExpr 0x138029330 <col:34> '<dependent type>' contains-errors lvalue
|   |   |     `-IntegerLiteral 0x138029380 <col:41> 'int' 0
|   |   `-IfStmt 0x139809870 <line:34:9, line:51:9> has_else
|   |     |-BinaryOperator 0x138029490 <line:34:13, col:21> 'int' contains-errors '=='
|   |     | |-RecoveryExpr 0x138029450 <col:13> '<dependent type>' contains-errors lvalue
|   |     | `-RecoveryExpr 0x138029470 <col:21> '<dependent type>' contains-errors lvalue
|   |     |-CompoundStmt 0x138029c60 <col:27, line:41:9>
|   |     | `-IfStmt 0x138029c40 <line:35:13, line:39:13>
|   |     |   |-RecoveryExpr 0x138029a98 <line:35:17, line:37:46> '_Bool' contains-errors
|   |     |   `-CompoundStmt 0x138029c28 <col:52, line:39:13>
|   |     |     `-CallExpr 0x138029c08 <line:38:17, col:25> 'int'
|   |     |       `-ImplicitCastExpr 0x138029bf0 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |     |         `-DeclRefExpr 0x138029b98 <col:17> 'int ()' Function 0x138029ae0 'die_mem' 'int ()'
|   |     `-CompoundStmt 0x139809858 <line:41:16, line:51:9>
|   |       `-IfStmt 0x139809838 <line:44:13, line:48:13>
|   |         |-RecoveryExpr 0x138029d98 <line:44:17, line:46:46> '_Bool' contains-errors
|   |         `-CompoundStmt 0x139809820 <col:52, line:48:13>
|   |           `-CallExpr 0x139809800 <line:47:17, col:25> 'int'
|   |             `-ImplicitCastExpr 0x138029dd8 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |               `-DeclRefExpr 0x138029db8 <col:17> 'int ()' Function 0x138029ae0 'die_mem' 'int ()'
|   |-ReturnStmt 0x139809a10 <line:56:5, col:12>
|   | `-IntegerLiteral 0x1398099f0 <col:12> 'int' 0
|   |-LabelStmt 0x139809a48 <line:58:5, col:8> 'bad'
|   | `-NullStmt 0x139809a40 <col:8>
|   `-ReturnStmt 0x139809ba0 <line:62:5, col:13>
|     `-UnaryOperator 0x139809b88 <col:12, col:13> 'int' prefix '-'
|       `-IntegerLiteral 0x139809b68 <col:13> 'int' 1
|-FunctionDecl 0x138028180 <line:15:38> col:38 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x138028280 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x138028228 <<invalid sloc>> Implicit 902
|-FunctionDecl 0x138029518 <line:35:32> col:32 implicit used malloc 'void *(unsigned long)' extern
| |-ParmVarDecl 0x138029618 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-BuiltinAttr 0x1380295c0 <<invalid sloc>> Implicit 871
| `-AllocSizeAttr 0x138029688 <col:32> Implicit 1
`-FunctionDecl 0x138029828 <line:36:32> col:32 implicit used strdup 'char *(const char *)' extern
  |-ParmVarDecl 0x138029928 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x1380298d0 <<invalid sloc>> Implicit 950
