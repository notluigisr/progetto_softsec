TranslationUnitDecl 0x129055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1290564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x129055bd0 '__int128'
|-TypedefDecl 0x129056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x129055bf0 'unsigned __int128'
|-TypedefDecl 0x12980be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12980bc00 'struct __NSConstantString_tag'
|   `-Record 0x129056580 '__NSConstantString_tag'
|-TypedefDecl 0x12980be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x129055d90 '__SVInt8_t'
|-TypedefDecl 0x12980bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x129055db0 '__SVInt16_t'
|-TypedefDecl 0x12980bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x129055dd0 '__SVInt32_t'
|-TypedefDecl 0x12980bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x129055df0 '__SVInt64_t'
|-TypedefDecl 0x12980c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x129055e10 '__SVUint8_t'
|-TypedefDecl 0x12980c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x129055e30 '__SVUint16_t'
|-TypedefDecl 0x12980c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x129055e50 '__SVUint32_t'
|-TypedefDecl 0x12980c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x129055e70 '__SVUint64_t'
|-TypedefDecl 0x12980c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x129055e90 '__SVFloat16_t'
|-TypedefDecl 0x12980c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x129055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12980c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x129055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12980c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x129055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12980c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x129055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12980c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x129055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12980c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x129055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12980c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x129055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12980c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x129055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12980c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x129055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12980c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x129055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12980c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x129055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12980c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x129056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12980c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x129056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12980c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x129056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12980c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x129056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12980c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x129056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12980c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1290560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12980c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1290560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12980c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1290560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12980c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x129056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12980ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x129056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12980cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x129056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12980cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x129056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12980cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x129056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12980d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1290561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12980d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1290561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12980d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1290561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12980d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x129056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12980d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x129056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12980d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x129056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12980d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x129056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12980d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x129056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12980d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1290562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12980d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1290562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12980d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1290562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12980d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x129056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12980d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x129056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12980d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x129056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12980d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x129056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12980da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x129056390 '__SVBool_t'
|-TypedefDecl 0x12980da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1290563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12980dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1290563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12980db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1290563f0 '__SVCount_t'
|-TypedefDecl 0x12980dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12980dbb0 'char *'
|   `-BuiltinType 0x1290556b0 'char'
|-TypedefDecl 0x12980dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12980dbb0 'char *'
|   `-BuiltinType 0x1290556b0 'char'
|-FunctionDecl 0x12980ddf8 <dataset_diviso_filec/func6397_nonvuln.c:1:1, line:25:1> line:1:12 invalid ensure_iov_space 'int (int *)' static
| |-ParmVarDecl 0x12980dd28 <col:29, col:35> col:35 referenced invalid c 'int *'
| `-CompoundStmt 0x12b009150 <col:38, line:25:1>
|   |-CallExpr 0x12980e0e0 <line:2:5, col:21> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x12980e000 <col:5> 'int ()' Function 0x12980df48 'assert' 'int ()'
|   | `-BinaryOperator 0x12980e0c0 <col:12, col:17> 'int' contains-errors '!='
|   |   |-RecoveryExpr 0x12980e020 <col:12> '<dependent type>' contains-errors lvalue
|   |   `-RecoveryExpr 0x12980e0a0 <col:17> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x12b009100 <line:4:5, line:22:5>
|   | |-BinaryOperator 0x12980e1d8 <line:4:9, col:26> 'int' contains-errors '>='
|   | | |-CXXDependentScopeMemberExpr 0x12980e128 <col:9, col:12> '<dependent type>' contains-errors lvalue ->iovused
|   | | | `-RecoveryExpr 0x12980e108 <col:9> '<dependent type>' contains-errors lvalue
|   | | `-CXXDependentScopeMemberExpr 0x12980e190 <col:23, col:26> '<dependent type>' contains-errors lvalue ->iovsize
|   | |   `-RecoveryExpr 0x12980e170 <col:23> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x12b0090c0 <col:35, line:22:5>
|   |   |-DeclStmt 0x12980e310 <line:5:9, col:22>
|   |   | |-VarDecl 0x12980e210 <col:9, col:13> col:13 used i 'int'
|   |   | `-VarDecl 0x12980e290 <col:9, col:16> col:16 used iovnum 'int'
|   |   |-DeclStmt 0x129827d58 <line:6:9, line:7:73>
|   |   | |-RecordDecl 0x12980e328 <line:6:9, col:16> col:16 struct iovec
|   |   | `-VarDecl 0x1298274c8 <col:9, col:23> col:23 used new_iov 'struct iovec *'
|   |   |-IfStmt 0x1298280d0 <line:8:9, line:13:9>
|   |   | |-UnaryOperator 0x129827da8 <line:8:13, col:15> 'int' prefix '!' cannot overflow
|   |   | | `-ImplicitCastExpr 0x129827d90 <col:15> 'struct iovec *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x129827d70 <col:15> 'struct iovec *' lvalue Var 0x1298274c8 'new_iov' 'struct iovec *'
|   |   | `-CompoundStmt 0x1298280a8 <col:24, line:13:9>
|   |   |   |-CallExpr 0x129827f08 <line:9:13, col:24> 'int'
|   |   |   | `-ImplicitCastExpr 0x129827ef0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |   |   `-DeclRefExpr 0x129827ea0 <col:13> 'int ()' Function 0x129827de8 'STATS_LOCK' 'int ()'
|   |   |   |-CallExpr 0x129828040 <line:11:13, col:26> 'int'
|   |   |   | `-ImplicitCastExpr 0x129828028 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |   |   `-DeclRefExpr 0x129828008 <col:13> 'int ()' Function 0x129827f50 'STATS_UNLOCK' 'int ()'
|   |   |   `-ReturnStmt 0x129828098 <line:12:13, col:21>
|   |   |     `-UnaryOperator 0x129828080 <col:20, col:21> 'int' prefix '-'
|   |   |       `-IntegerLiteral 0x129828060 <col:21> 'int' 1
|   |   |-BinaryOperator 0x1298281a0 <line:14:9, col:18> '<dependent type>' contains-errors '='
|   |   | |-CXXDependentScopeMemberExpr 0x129828138 <col:9, col:12> '<dependent type>' contains-errors lvalue ->iov
|   |   | | `-RecoveryExpr 0x129828110 <col:9> '<dependent type>' contains-errors lvalue
|   |   | |   `-DeclRefExpr 0x1298280f0 <col:9> 'int *' lvalue ParmVar 0x12980dd28 'c' 'int *'
|   |   | `-DeclRefExpr 0x129828180 <col:18> 'struct iovec *' lvalue Var 0x1298274c8 'new_iov' 'struct iovec *'
|   |   |-CompoundAssignOperator 0x129828270 <line:15:9, col:23> '<dependent type>' contains-errors '*=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |   | |-CXXDependentScopeMemberExpr 0x129828208 <col:9, col:12> '<dependent type>' contains-errors lvalue ->iovsize
|   |   | | `-RecoveryExpr 0x1298281e0 <col:9> '<dependent type>' contains-errors lvalue
|   |   | |   `-DeclRefExpr 0x1298281c0 <col:9> 'int *' lvalue ParmVar 0x12980dd28 'c' 'int *'
|   |   | `-IntegerLiteral 0x129828250 <col:23> 'int' 2
|   |   `-ForStmt 0x12b009088 <line:18:9, line:21:9>
|   |     |-BinaryOperator 0x129828360 <line:18:14, col:30> 'int' ','
|   |     | |-BinaryOperator 0x1298282e0 <col:14, col:18> 'int' '='
|   |     | | |-DeclRefExpr 0x1298282a0 <col:14> 'int' lvalue Var 0x12980e210 'i' 'int'
|   |     | | `-IntegerLiteral 0x1298282c0 <col:18> 'int' 0
|   |     | `-BinaryOperator 0x129828340 <col:21, col:30> 'int' '='
|   |     |   |-DeclRefExpr 0x129828300 <col:21> 'int' lvalue Var 0x12980e290 'iovnum' 'int'
|   |     |   `-IntegerLiteral 0x129828320 <col:30> 'int' 0
|   |     |-<<<NULL>>>
|   |     |-BinaryOperator 0x12b008c48 <col:33, col:40> 'int' contains-errors '<'
|   |     | |-DeclRefExpr 0x129828380 <col:33> 'int' lvalue Var 0x12980e210 'i' 'int'
|   |     | `-CXXDependentScopeMemberExpr 0x12b008c00 <col:37, col:40> '<dependent type>' contains-errors lvalue ->msgused
|   |     |   `-RecoveryExpr 0x1298283a0 <col:37> '<dependent type>' contains-errors lvalue
|   |     |-UnaryOperator 0x12b008c88 <col:49, col:50> 'int' postfix '++'
|   |     | `-DeclRefExpr 0x12b008c68 <col:49> 'int' lvalue Var 0x12980e210 'i' 'int'
|   |     `-CompoundStmt 0x12b009068 <col:54, line:21:9>
|   |       |-BinaryOperator 0x12b008ed8 <line:19:13, col:51> '<dependent type>' contains-errors '='
|   |       | |-CXXDependentScopeMemberExpr 0x12b008da0 <col:13, col:27> '<dependent type>' contains-errors lvalue .msg_iov
|   |       | | `-ArraySubscriptExpr 0x12b008d80 <col:13, col:25> '<dependent type>' contains-errors lvalue
|   |       | |   |-ImplicitCastExpr 0x12b008d50 <col:13, col:16> '<dependent type>' contains-errors <LValueToRValue>
|   |       | |   | `-CXXDependentScopeMemberExpr 0x12b008ce8 <col:13, col:16> '<dependent type>' contains-errors lvalue ->msglist
|   |       | |   |   `-RecoveryExpr 0x12b008cc0 <col:13> '<dependent type>' contains-errors lvalue
|   |       | |   |     `-DeclRefExpr 0x12b008ca0 <col:13> 'int *' lvalue ParmVar 0x12980dd28 'c' 'int *'
|   |       | |   `-ImplicitCastExpr 0x12b008d68 <col:24> 'int' <LValueToRValue>
|   |       | |     `-DeclRefExpr 0x12b008d30 <col:24> 'int' lvalue Var 0x12980e210 'i' 'int'
|   |       | `-UnaryOperator 0x12b008ec0 <col:37, col:51> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |       |   `-ArraySubscriptExpr 0x12b008ea0 <col:38, col:51> '<dependent type>' contains-errors lvalue
|   |       |     |-ImplicitCastExpr 0x12b008e70 <col:38, col:41> '<dependent type>' contains-errors <LValueToRValue>
|   |       |     | `-CXXDependentScopeMemberExpr 0x12b008e08 <col:38, col:41> '<dependent type>' contains-errors lvalue ->iov
|   |       |     |   `-RecoveryExpr 0x12b008de8 <col:38> '<dependent type>' contains-errors lvalue
|   |       |     `-ImplicitCastExpr 0x12b008e88 <col:45> 'int' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x12b008e50 <col:45> 'int' lvalue Var 0x12980e290 'iovnum' 'int'
|   |       `-CompoundAssignOperator 0x12b009038 <line:20:13, col:37> 'int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |         |-DeclRefExpr 0x12b008ef8 <col:13> 'int' lvalue Var 0x12980e290 'iovnum' 'int'
|   |         `-CXXDependentScopeMemberExpr 0x12b008ff0 <col:23, col:37> '<dependent type>' contains-errors lvalue .msg_iovlen
|   |           `-ArraySubscriptExpr 0x12b008fd0 <col:23, col:35> '<dependent type>' contains-errors lvalue
|   |             |-ImplicitCastExpr 0x12b008fa0 <col:23, col:26> '<dependent type>' contains-errors <LValueToRValue>
|   |             | `-CXXDependentScopeMemberExpr 0x12b008f38 <col:23, col:26> '<dependent type>' contains-errors lvalue ->msglist
|   |             |   `-RecoveryExpr 0x12b008f18 <col:23> '<dependent type>' contains-errors lvalue
|   |             `-ImplicitCastExpr 0x12b008fb8 <col:34> 'int' <LValueToRValue>
|   |               `-DeclRefExpr 0x12b008f80 <col:34> 'int' lvalue Var 0x12980e210 'i' 'int'
|   `-ReturnStmt 0x12b009140 <line:24:5, col:12>
|     `-IntegerLiteral 0x12b009120 <col:12> 'int' 0
`-FunctionDecl 0x129827990 <line:6:49> col:49 implicit used realloc 'void *(void *, unsigned long)' extern
  |-ParmVarDecl 0x129827a90 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x129827af8 <<invalid sloc>> <invalid sloc> 'unsigned long'
  |-BuiltinAttr 0x129827a38 <<invalid sloc>> Implicit 872
  `-AllocSizeAttr 0x129827b70 <col:49> Implicit 2
