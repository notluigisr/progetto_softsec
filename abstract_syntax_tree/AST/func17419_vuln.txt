TranslationUnitDecl 0x13e02ee08 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13e02fcb8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13e02f3d0 '__int128'
|-TypedefDecl 0x13e02fd28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13e02f3f0 'unsigned __int128'
|-TypedefDecl 0x13b816430 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13b816200 'struct __NSConstantString_tag'
|   `-Record 0x13e02fd80 '__NSConstantString_tag'
|-TypedefDecl 0x13b816498 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13e02f590 '__SVInt8_t'
|-TypedefDecl 0x13b816500 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13e02f5b0 '__SVInt16_t'
|-TypedefDecl 0x13b816568 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13e02f5d0 '__SVInt32_t'
|-TypedefDecl 0x13b8165d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13e02f5f0 '__SVInt64_t'
|-TypedefDecl 0x13b816638 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13e02f610 '__SVUint8_t'
|-TypedefDecl 0x13b8166a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13e02f630 '__SVUint16_t'
|-TypedefDecl 0x13b816708 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13e02f650 '__SVUint32_t'
|-TypedefDecl 0x13b816770 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13e02f670 '__SVUint64_t'
|-TypedefDecl 0x13b8167d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13e02f690 '__SVFloat16_t'
|-TypedefDecl 0x13b816840 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13e02f6b0 '__SVFloat32_t'
|-TypedefDecl 0x13b8168a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13e02f6d0 '__SVFloat64_t'
|-TypedefDecl 0x13b816910 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13e02f6f0 '__SVBfloat16_t'
|-TypedefDecl 0x13b816978 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13e02f710 '__clang_svint8x2_t'
|-TypedefDecl 0x13b8169e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13e02f730 '__clang_svint16x2_t'
|-TypedefDecl 0x13b816a48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13e02f750 '__clang_svint32x2_t'
|-TypedefDecl 0x13b816ab0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13e02f770 '__clang_svint64x2_t'
|-TypedefDecl 0x13b816b18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13e02f790 '__clang_svuint8x2_t'
|-TypedefDecl 0x13b816b80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13e02f7b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13b816be8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13e02f7d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13b816c50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13e02f7f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13b816cb8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13e02f810 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13b816d20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13e02f830 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13b816d88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13e02f850 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13b816df0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13e02f870 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13b816e58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13e02f890 '__clang_svint8x3_t'
|-TypedefDecl 0x13b816ec0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13e02f8b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13b816f28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13e02f8d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13b816f90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13e02f8f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13b816ff8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13e02f910 '__clang_svuint8x3_t'
|-TypedefDecl 0x13b817060 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13e02f930 '__clang_svuint16x3_t'
|-TypedefDecl 0x13b8170c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13e02f950 '__clang_svuint32x3_t'
|-TypedefDecl 0x13b817130 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13e02f970 '__clang_svuint64x3_t'
|-TypedefDecl 0x13b817198 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13e02f990 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13b837c00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13e02f9b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13b837c68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13e02f9d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13b837cd0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13e02f9f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13b837d38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13e02fa10 '__clang_svint8x4_t'
|-TypedefDecl 0x13b837da0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13e02fa30 '__clang_svint16x4_t'
|-TypedefDecl 0x13b837e08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13e02fa50 '__clang_svint32x4_t'
|-TypedefDecl 0x13b837e70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13e02fa70 '__clang_svint64x4_t'
|-TypedefDecl 0x13b837ed8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13e02fa90 '__clang_svuint8x4_t'
|-TypedefDecl 0x13b837f40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13e02fab0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13b837fa8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13e02fad0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13b838010 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13e02faf0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13b838078 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13e02fb10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13b8380e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13e02fb30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13b838148 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13e02fb50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13b8381b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13e02fb70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13b838218 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13e02fb90 '__SVBool_t'
|-TypedefDecl 0x13b838280 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13e02fbb0 '__clang_svboolx2_t'
|-TypedefDecl 0x13b8382e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13e02fbd0 '__clang_svboolx4_t'
|-TypedefDecl 0x13b838350 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13e02fbf0 '__SVCount_t'
|-TypedefDecl 0x13b8383f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13b8383b0 'char *'
|   `-BuiltinType 0x13e02eeb0 'char'
|-TypedefDecl 0x13b838468 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13b8383b0 'char *'
|   `-BuiltinType 0x13e02eeb0 'char'
`-FunctionDecl 0x13b851368 <dataset_diviso_filec/func17419_vuln.c:1:1, line:80:1> line:1:1 invalid ikev2_ID_print 'int (int *, char, const struct isakmp_gen *, int)'
  |-ParmVarDecl 0x13b838528 <col:16, col:36> col:36 invalid ndo 'int *'
  |-ParmVarDecl 0x13b8385a0 <col:41, col:48> col:48 used tpay 'char'
  |-ParmVarDecl 0x13b838b98 <line:2:3, col:28> col:28 used ext 'const struct isakmp_gen *'
  |-ParmVarDecl 0x13b851218 <line:3:3, col:9> col:9 invalid item_len 'int'
  `-CompoundStmt 0x13b856378 <line:6:1, line:80:1>
    |-DeclStmt 0x13b8515a8 <line:7:2, col:20>
    | |-RecordDecl 0x13b851430 <col:2, col:9> col:9 struct ikev2_id
    | `-VarDecl 0x13b851528 <col:2, col:18> col:18 invalid id 'struct ikev2_id'
    |-DeclStmt 0x13b851760 <line:8:2, col:27>
    | |-VarDecl 0x13b8515d8 <col:2, col:6> col:6 used id_len 'int'
    | |-VarDecl 0x13b851658 <col:2, col:14> col:14 used idtype_len 'int'
    | `-VarDecl 0x13b8516d8 <col:2, col:26> col:26 used i 'int'
    |-DeclStmt 0x13b851890 <line:9:2, col:33>
    | |-VarDecl 0x13b851790 <col:2, col:15> col:15 used dumpascii 'unsigned int'
    | `-VarDecl 0x13b851810 <col:2, col:26> col:26 used dumphex 'unsigned int'
    |-DeclStmt 0x13b851960 <line:10:2, col:31>
    | `-VarDecl 0x13b8518f8 <col:2, col:23> col:23 used typedata 'const unsigned char *'
    |-ImplicitCastExpr 0x13b851bf8 <line:12:2, col:16> '<dependent type>' contains-errors <LValueToRValue>
    | `-RecoveryExpr 0x13b851bc8 <col:2, col:16> '<dependent type>' contains-errors lvalue
    |   |-DeclRefExpr 0x13b851ad0 <col:2> 'int ()' Function 0x13b851a18 'ND_TCHECK' 'int ()'
    |   `-UnaryOperator 0x13b851b28 <col:12, col:13> 'const struct isakmp_gen' lvalue prefix '*' cannot overflow
    |     `-ImplicitCastExpr 0x13b851b10 <col:13> 'const struct isakmp_gen *' <LValueToRValue>
    |       `-DeclRefExpr 0x13b851af0 <col:13> 'const struct isakmp_gen *' lvalue ParmVar 0x13b838b98 'ext' 'const struct isakmp_gen *'
    |-CallExpr 0x13b851dc8 <line:13:2, col:39> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13b851cf0 <col:2> 'int ()' Function 0x13b851c38 'UNALIGNED_MEMCPY' 'int ()'
    | |-UnaryOperator 0x13b851d30 <col:19, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-RecoveryExpr 0x13b851d10 <col:20> '<dependent type>' contains-errors lvalue
    | |-DeclRefExpr 0x13b851d48 <col:24> 'const struct isakmp_gen *' lvalue ParmVar 0x13b838b98 'ext' 'const struct isakmp_gen *'
    | `-UnaryExprOrTypeTraitExpr 0x13b851da8 <col:29, col:38> 'unsigned long' contains-errors sizeof
    |   `-ParenExpr 0x13b851d88 <col:35, col:38> '<dependent type>' contains-errors lvalue
    |     `-RecoveryExpr 0x13b851d68 <col:36> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x13b852160 <line:14:2, col:49> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13b851ee0 <col:2> 'int ()' Function 0x13b851e28 'ikev2_pay_print' 'int ()'
    | |-RecoveryExpr 0x13b851f00 <col:18> '<dependent type>' contains-errors lvalue
    | |-CallExpr 0x13b852058 <col:23, col:33> 'int'
    | | |-ImplicitCastExpr 0x13b852040 <col:23> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x13b852000 <col:23> 'int ()' Function 0x13b851f48 'NPSTR' 'int ()'
    | | `-ImplicitCastExpr 0x13b852098 <col:29> 'int' <IntegralCast>
    | |   `-ImplicitCastExpr 0x13b852080 <col:29> 'char' <LValueToRValue>
    | |     `-DeclRefExpr 0x13b852020 <col:29> 'char' lvalue ParmVar 0x13b8385a0 'tpay' 'char'
    | `-CXXDependentScopeMemberExpr 0x13b852118 <col:36, col:41> '<dependent type>' contains-errors lvalue .critical
    |   `-CXXDependentScopeMemberExpr 0x13b8520d0 <col:36, col:39> '<dependent type>' contains-errors lvalue .h
    |     `-RecoveryExpr 0x13b8520b0 <col:36> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x13b8523b0 <line:16:2, col:25> 'int' contains-errors '='
    | |-DeclRefExpr 0x13b852198 <col:2> 'int' lvalue Var 0x13b8515d8 'id_len' 'int'
    | `-CallExpr 0x13b852388 <col:11, col:25> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13b8522b8 <col:11> 'int ()' Function 0x13b852200 'ntohs' 'int ()'
    |   `-CXXDependentScopeMemberExpr 0x13b852340 <col:17, col:22> '<dependent type>' contains-errors lvalue .len
    |     `-CXXDependentScopeMemberExpr 0x13b8522f8 <col:17, col:20> '<dependent type>' contains-errors lvalue .h
    |       `-RecoveryExpr 0x13b8522d8 <col:17> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x13b852628 <line:18:2, col:34> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13b8524b0 <col:2> 'int ()' Function 0x13b8523f8 'ND_PRINT' 'int ()'
    | `-ParenExpr 0x13b852608 <col:11, col:33> 'int' contains-errors
    |   `-BinaryOperator 0x13b8525e8 <col:12, col:32> 'int' contains-errors ','
    |     |-BinaryOperator 0x13b852550 <col:12, col:16> 'char[4]' contains-errors ','
    |     | |-RecoveryExpr 0x13b8524d0 <col:12> '<dependent type>' contains-errors lvalue
    |     | `-StringLiteral 0x13b852530 <col:16> 'char[4]' lvalue "STR"
    |     `-BinaryOperator 0x13b8525c8 <col:23, col:32> 'int' '-'
    |       |-ImplicitCastExpr 0x13b8525b0 <col:23> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x13b852570 <col:23> 'int' lvalue Var 0x13b8515d8 'id_len' 'int'
    |       `-IntegerLiteral 0x13b852590 <col:32> 'int' 4
    |-IfStmt 0x13b852ab8 <line:19:2, line:23:2>
    | |-BinaryOperator 0x13b852770 <line:19:6, col:32> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x13b8526d8 <col:6, col:15> 'int' contains-errors '<'
    | | | |-IntegerLiteral 0x13b852650 <col:6> 'int' 2
    | | | `-CXXDependentScopeMemberExpr 0x13b852690 <col:10, col:15> '<dependent type>' contains-errors lvalue ->ndo_vflag
    | | |   `-RecoveryExpr 0x13b852670 <col:10> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x13b852750 <col:28, col:32> 'int' '<'
    | |   |-IntegerLiteral 0x13b8526f8 <col:28> 'int' 4
    | |   `-ImplicitCastExpr 0x13b852738 <col:32> 'int' <LValueToRValue>
    | |     `-DeclRefExpr 0x13b852718 <col:32> 'int' lvalue Var 0x13b8515d8 'id_len' 'int'
    | `-CompoundStmt 0x13b852a98 <col:40, line:23:2>
    |   |-CallExpr 0x13b852830 <line:20:3, col:23> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x13b852790 <col:3> 'int ()' Function 0x13b8523f8 'ND_PRINT' 'int ()'
    |   | `-ParenExpr 0x13b852810 <col:12, col:22> 'char[4]' contains-errors
    |   |   `-BinaryOperator 0x13b8527f0 <col:13, col:17> 'char[4]' contains-errors ','
    |   |     |-RecoveryExpr 0x13b8527b0 <col:13> '<dependent type>' contains-errors lvalue
    |   |     `-StringLiteral 0x13b8527d0 <col:17> 'char[4]' lvalue "STR"
    |   `-IfStmt 0x13b852a78 <line:21:3, line:22:9>
    |     |-RecoveryExpr 0x13b8529f0 <line:21:7, col:60> '_Bool' contains-errors
    |     `-GotoStmt 0x13b852a60 <line:22:4, col:9> 'trunc' 0x13b852a10
    |-BinaryOperator 0x13b852bc8 <line:26:2, col:14> 'unsigned int' '='
    | |-DeclRefExpr 0x13b852b70 <col:2> 'unsigned int' lvalue Var 0x13b851790 'dumpascii' 'unsigned int'
    | `-ImplicitCastExpr 0x13b852bb0 <col:14> 'unsigned int' <IntegralCast>
    |   `-IntegerLiteral 0x13b852b90 <col:14> 'int' 0
    |-BinaryOperator 0x13b852c40 <line:27:2, col:14> 'unsigned int' '='
    | |-DeclRefExpr 0x13b852be8 <col:2> 'unsigned int' lvalue Var 0x13b851810 'dumphex' 'unsigned int'
    | `-ImplicitCastExpr 0x13b852c28 <col:14> 'unsigned int' <IntegralCast>
    |   `-IntegerLiteral 0x13b852c08 <col:14> 'int' 0
    |-SwitchStmt 0x13b852dd8 <line:30:2, line:59:2>
    | |-ImplicitCastExpr 0x13b852dc0 <line:30:9, col:12> '<dependent type>' contains-errors <LValueToRValue>
    | | `-CXXDependentScopeMemberExpr 0x13b852d78 <col:9, col:12> '<dependent type>' contains-errors lvalue .type
    | |   `-RecoveryExpr 0x13b852d58 <col:9> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x13b855148 <col:18, line:59:2>
    |   |-CallExpr 0x13b852eb8 <line:32:3, col:24> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x13b852e18 <col:3> 'int ()' Function 0x13b8523f8 'ND_PRINT' 'int ()'
    |   | `-ParenExpr 0x13b852e98 <col:12, col:23> 'char[4]' contains-errors
    |   |   `-BinaryOperator 0x13b852e78 <col:13, col:18> 'char[4]' contains-errors ','
    |   |     |-RecoveryExpr 0x13b852e38 <col:13> '<dependent type>' contains-errors lvalue
    |   |     `-StringLiteral 0x13b852e58 <col:18> 'char[4]' lvalue "STR"
    |   |-BinaryOperator 0x13b852f38 <line:33:3, col:11> 'unsigned int' '='
    |   | |-DeclRefExpr 0x13b852ee0 <col:3> 'unsigned int' lvalue Var 0x13b851810 'dumphex' 'unsigned int'
    |   | `-ImplicitCastExpr 0x13b852f20 <col:11> 'unsigned int' <IntegralCast>
    |   |   `-IntegerLiteral 0x13b852f00 <col:11> 'int' 1
    |   |-BreakStmt 0x13b852f58 <line:34:3>
    |   |-CallExpr 0x13b853018 <line:36:3, col:24> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x13b852f78 <col:3> 'int ()' Function 0x13b8523f8 'ND_PRINT' 'int ()'
    |   | `-ParenExpr 0x13b852ff8 <col:12, col:23> 'char[4]' contains-errors
    |   |   `-BinaryOperator 0x13b852fd8 <col:13, col:18> 'char[4]' contains-errors ','
    |   |     |-RecoveryExpr 0x13b852f98 <col:13> '<dependent type>' contains-errors lvalue
    |   |     `-StringLiteral 0x13b852fb8 <col:18> 'char[4]' lvalue "STR"
    |   |-BinaryOperator 0x13b853098 <line:37:3, col:13> 'unsigned int' '='
    |   | |-DeclRefExpr 0x13b853040 <col:3> 'unsigned int' lvalue Var 0x13b851790 'dumpascii' 'unsigned int'
    |   | `-ImplicitCastExpr 0x13b853080 <col:13> 'unsigned int' <IntegralCast>
    |   |   `-IntegerLiteral 0x13b853060 <col:13> 'int' 1
    |   |-BreakStmt 0x13b8530b8 <line:38:3>
    |   |-CallExpr 0x13b853178 <line:40:3, col:24> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x13b8530d8 <col:3> 'int ()' Function 0x13b8523f8 'ND_PRINT' 'int ()'
    |   | `-ParenExpr 0x13b853158 <col:12, col:23> 'char[4]' contains-errors
    |   |   `-BinaryOperator 0x13b853138 <col:13, col:18> 'char[4]' contains-errors ','
    |   |     |-RecoveryExpr 0x13b8530f8 <col:13> '<dependent type>' contains-errors lvalue
    |   |     `-StringLiteral 0x13b853118 <col:18> 'char[4]' lvalue "STR"
    |   |-BinaryOperator 0x13b854c00 <line:41:3, col:13> 'unsigned int' '='
    |   | |-DeclRefExpr 0x13b8531a0 <col:3> 'unsigned int' lvalue Var 0x13b851790 'dumpascii' 'unsigned int'
    |   | `-ImplicitCastExpr 0x13b8531e0 <col:13> 'unsigned int' <IntegralCast>
    |   |   `-IntegerLiteral 0x13b8531c0 <col:13> 'int' 1
    |   |-BreakStmt 0x13b854c20 <line:42:3>
    |   |-CallExpr 0x13b854cc8 <line:44:3, col:24> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x13b854c28 <col:3> 'int ()' Function 0x13b8523f8 'ND_PRINT' 'int ()'
    |   | `-ParenExpr 0x13b854ca8 <col:12, col:23> 'char[4]' contains-errors
    |   |   `-BinaryOperator 0x13b854c88 <col:13, col:18> 'char[4]' contains-errors ','
    |   |     |-RecoveryExpr 0x13b854c48 <col:13> '<dependent type>' contains-errors lvalue
    |   |     `-StringLiteral 0x13b854c68 <col:18> 'char[4]' lvalue "STR"
    |   |-BinaryOperator 0x13b854d48 <line:45:3, col:11> 'unsigned int' '='
    |   | |-DeclRefExpr 0x13b854cf0 <col:3> 'unsigned int' lvalue Var 0x13b851810 'dumphex' 'unsigned int'
    |   | `-ImplicitCastExpr 0x13b854d30 <col:11> 'unsigned int' <IntegralCast>
    |   |   `-IntegerLiteral 0x13b854d10 <col:11> 'int' 1
    |   |-BreakStmt 0x13b854d68 <line:46:3>
    |   |-CallExpr 0x13b854e10 <line:48:3, col:24> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x13b854d70 <col:3> 'int ()' Function 0x13b8523f8 'ND_PRINT' 'int ()'
    |   | `-ParenExpr 0x13b854df0 <col:12, col:23> 'char[4]' contains-errors
    |   |   `-BinaryOperator 0x13b854dd0 <col:13, col:18> 'char[4]' contains-errors ','
    |   |     |-RecoveryExpr 0x13b854d90 <col:13> '<dependent type>' contains-errors lvalue
    |   |     `-StringLiteral 0x13b854db0 <col:18> 'char[4]' lvalue "STR"
    |   |-BinaryOperator 0x13b854e90 <line:49:3, col:11> 'unsigned int' '='
    |   | |-DeclRefExpr 0x13b854e38 <col:3> 'unsigned int' lvalue Var 0x13b851810 'dumphex' 'unsigned int'
    |   | `-ImplicitCastExpr 0x13b854e78 <col:11> 'unsigned int' <IntegralCast>
    |   |   `-IntegerLiteral 0x13b854e58 <col:11> 'int' 1
    |   |-BreakStmt 0x13b854eb0 <line:50:3>
    |   |-CallExpr 0x13b854f58 <line:52:3, col:24> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x13b854eb8 <col:3> 'int ()' Function 0x13b8523f8 'ND_PRINT' 'int ()'
    |   | `-ParenExpr 0x13b854f38 <col:12, col:23> 'char[4]' contains-errors
    |   |   `-BinaryOperator 0x13b854f18 <col:13, col:18> 'char[4]' contains-errors ','
    |   |     |-RecoveryExpr 0x13b854ed8 <col:13> '<dependent type>' contains-errors lvalue
    |   |     `-StringLiteral 0x13b854ef8 <col:18> 'char[4]' lvalue "STR"
    |   |-BinaryOperator 0x13b854fd8 <line:53:3, col:11> 'unsigned int' '='
    |   | |-DeclRefExpr 0x13b854f80 <col:3> 'unsigned int' lvalue Var 0x13b851810 'dumphex' 'unsigned int'
    |   | `-ImplicitCastExpr 0x13b854fc0 <col:11> 'unsigned int' <IntegralCast>
    |   |   `-IntegerLiteral 0x13b854fa0 <col:11> 'int' 1
    |   |-BreakStmt 0x13b854ff8 <line:54:3>
    |   |-CallExpr 0x13b8550a0 <line:56:3, col:24> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x13b855000 <col:3> 'int ()' Function 0x13b8523f8 'ND_PRINT' 'int ()'
    |   | `-ParenExpr 0x13b855080 <col:12, col:23> 'char[4]' contains-errors
    |   |   `-BinaryOperator 0x13b855060 <col:13, col:18> 'char[4]' contains-errors ','
    |   |     |-RecoveryExpr 0x13b855020 <col:13> '<dependent type>' contains-errors lvalue
    |   |     `-StringLiteral 0x13b855040 <col:18> 'char[4]' lvalue "STR"
    |   |-BinaryOperator 0x13b855120 <line:57:3, col:11> 'unsigned int' '='
    |   | |-DeclRefExpr 0x13b8550c8 <col:3> 'unsigned int' lvalue Var 0x13b851810 'dumphex' 'unsigned int'
    |   | `-ImplicitCastExpr 0x13b855108 <col:11> 'unsigned int' <IntegralCast>
    |   |   `-IntegerLiteral 0x13b8550e8 <col:11> 'int' 1
    |   `-BreakStmt 0x13b855140 <line:58:3>
    |-IfStmt 0x13b855a70 <line:61:2, line:70:2>
    | |-ImplicitCastExpr 0x13b855220 <line:61:5> 'unsigned int' <LValueToRValue>
    | | `-DeclRefExpr 0x13b855200 <col:5> 'unsigned int' lvalue Var 0x13b851790 'dumpascii' 'unsigned int'
    | `-CompoundStmt 0x13b855a50 <col:16, line:70:2>
    |   |-CallExpr 0x13b8553c0 <line:62:3, col:35> 'int'
    |   | |-ImplicitCastExpr 0x13b8553a8 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x13b855318 <col:3> 'int ()' Function 0x13b855260 'ND_TCHECK2' 'int ()'
    |   | |-ImplicitCastExpr 0x13b855408 <col:14, col:15> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x13b8553f0 <col:14, col:15> 'unsigned char' <LValueToRValue>
    |   | |   `-UnaryOperator 0x13b855370 <col:14, col:15> 'const unsigned char' lvalue prefix '*' cannot overflow
    |   | |     `-ImplicitCastExpr 0x13b855358 <col:15> 'const unsigned char *' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x13b855338 <col:15> 'const unsigned char *' lvalue Var 0x13b8518f8 'typedata' 'const unsigned char *'
    |   | `-ImplicitCastExpr 0x13b855420 <col:25> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x13b855388 <col:25> 'int' lvalue Var 0x13b851658 'idtype_len' 'int'
    |   `-ForStmt 0x13b855a18 <line:63:3, line:69:3>
    |     |-BinaryOperator 0x13b855478 <line:63:7, col:9> 'int' '='
    |     | |-DeclRefExpr 0x13b855438 <col:7> 'int' lvalue Var 0x13b8516d8 'i' 'int'
    |     | `-IntegerLiteral 0x13b855458 <col:9> 'int' 0
    |     |-<<<NULL>>>
    |     |-BinaryOperator 0x13b855508 <col:12, col:14> 'int' '<'
    |     | |-ImplicitCastExpr 0x13b8554d8 <col:12> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x13b855498 <col:12> 'int' lvalue Var 0x13b8516d8 'i' 'int'
    |     | `-ImplicitCastExpr 0x13b8554f0 <col:14> 'int' <LValueToRValue>
    |     |   `-DeclRefExpr 0x13b8554b8 <col:14> 'int' lvalue Var 0x13b851658 'idtype_len' 'int'
    |     |-UnaryOperator 0x13b855548 <col:26, col:27> 'int' postfix '++'
    |     | `-DeclRefExpr 0x13b855528 <col:26> 'int' lvalue Var 0x13b8516d8 'i' 'int'
    |     `-CompoundStmt 0x13b855a00 <col:31, line:69:3>
    |       `-IfStmt 0x13b8559d0 <line:64:4, line:68:4> has_else
    |         |-CallExpr 0x13b855708 <line:64:7, col:29> 'int'
    |         | |-ImplicitCastExpr 0x13b8556f0 <col:7> 'int (*)()' <FunctionToPointerDecay>
    |         | | `-DeclRefExpr 0x13b855640 <col:7> 'int ()' Function 0x13b855588 'ND_ISPRINT' 'int ()'
    |         | `-ImplicitCastExpr 0x13b855748 <col:18, col:28> 'int' <IntegralCast>
    |         |   `-ImplicitCastExpr 0x13b855730 <col:18, col:28> 'unsigned char' <LValueToRValue>
    |         |     `-ArraySubscriptExpr 0x13b8556d0 <col:18, col:28> 'const unsigned char' lvalue
    |         |       |-ImplicitCastExpr 0x13b8556a0 <col:18> 'const unsigned char *' <LValueToRValue>
    |         |       | `-DeclRefExpr 0x13b855660 <col:18> 'const unsigned char *' lvalue Var 0x13b8518f8 'typedata' 'const unsigned char *'
    |         |       `-ImplicitCastExpr 0x13b8556b8 <col:27> 'int' <LValueToRValue>
    |         |         `-DeclRefExpr 0x13b855680 <col:27> 'int' lvalue Var 0x13b8516d8 'i' 'int'
    |         |-CompoundStmt 0x13b8558d8 <col:32, line:66:4>
    |         | `-CallExpr 0x13b8558b0 <line:65:5, col:39> '<dependent type>' contains-errors
    |         |   |-DeclRefExpr 0x13b855760 <col:5> 'int ()' Function 0x13b8523f8 'ND_PRINT' 'int ()'
    |         |   `-ParenExpr 0x13b855890 <col:14, col:38> 'const unsigned char' contains-errors
    |         |     `-BinaryOperator 0x13b855870 <col:15, col:37> 'const unsigned char' contains-errors ','
    |         |       |-BinaryOperator 0x13b8557c0 <col:15, col:20> 'char[4]' contains-errors ','
    |         |       | |-RecoveryExpr 0x13b855780 <col:15> '<dependent type>' contains-errors lvalue
    |         |       | `-StringLiteral 0x13b8557a0 <col:20> 'char[4]' lvalue "STR"
    |         |       `-ArraySubscriptExpr 0x13b855850 <col:27, col:37> 'const unsigned char' lvalue
    |         |         |-ImplicitCastExpr 0x13b855820 <col:27> 'const unsigned char *' <LValueToRValue>
    |         |         | `-DeclRefExpr 0x13b8557e0 <col:27> 'const unsigned char *' lvalue Var 0x13b8518f8 'typedata' 'const unsigned char *'
    |         |         `-ImplicitCastExpr 0x13b855838 <col:36> 'int' <LValueToRValue>
    |         |           `-DeclRefExpr 0x13b855800 <col:36> 'int' lvalue Var 0x13b8516d8 'i' 'int'
    |         `-CompoundStmt 0x13b8559b8 <line:66:11, line:68:4>
    |           `-CallExpr 0x13b855990 <line:67:5, col:26> '<dependent type>' contains-errors
    |             |-DeclRefExpr 0x13b8558f0 <col:5> 'int ()' Function 0x13b8523f8 'ND_PRINT' 'int ()'
    |             `-ParenExpr 0x13b855970 <col:14, col:25> 'char[4]' contains-errors
    |               `-BinaryOperator 0x13b855950 <col:15, col:20> 'char[4]' contains-errors ','
    |                 |-RecoveryExpr 0x13b855910 <col:15> '<dependent type>' contains-errors lvalue
    |                 `-StringLiteral 0x13b855930 <col:20> 'char[4]' lvalue "STR"
    |-IfStmt 0x13b855b98 <line:71:2, line:74:2>
    | |-ImplicitCastExpr 0x13b855ab0 <line:71:5> 'unsigned int' <LValueToRValue>
    | | `-DeclRefExpr 0x13b855a90 <col:5> 'unsigned int' lvalue Var 0x13b851810 'dumphex' 'unsigned int'
    | `-CompoundStmt 0x13b855b80 <col:14, line:74:2>
    |   `-IfStmt 0x13b855b60 <line:72:3, line:73:9>
    |     |-RecoveryExpr 0x13b855b28 <line:72:7, col:59> '_Bool' contains-errors
    |     `-GotoStmt 0x13b855b48 <line:73:4, col:9> 'trunc' 0x13b852a10
    `-LabelStmt 0x13b856358 <line:77:1, line:78:35> 'trunc'
      `-CallExpr 0x13b856330 <col:2, col:35> '<dependent type>' contains-errors
        |-DeclRefExpr 0x13b855bb8 <col:2> 'int ()' Function 0x13b8523f8 'ND_PRINT' 'int ()'
        `-ParenExpr 0x13b856310 <col:11, col:34> 'int' contains-errors
          `-BinaryOperator 0x13b8562f0 <col:12, col:33> 'int' contains-errors ','
            |-BinaryOperator 0x13b856220 <col:12, col:16> 'char[4]' contains-errors ','
            | |-RecoveryExpr 0x13b855bd8 <col:12> '<dependent type>' contains-errors lvalue
            | `-StringLiteral 0x13b856200 <col:16> 'char[4]' lvalue "STR"
            `-CallExpr 0x13b856298 <col:23, col:33> 'int'
              |-ImplicitCastExpr 0x13b856280 <col:23> 'int (*)()' <FunctionToPointerDecay>
              | `-DeclRefExpr 0x13b856240 <col:23> 'int ()' Function 0x13b851f48 'NPSTR' 'int ()'
              `-ImplicitCastExpr 0x13b8562d8 <col:29> 'int' <IntegralCast>
                `-ImplicitCastExpr 0x13b8562c0 <col:29> 'char' <LValueToRValue>
                  `-DeclRefExpr 0x13b856260 <col:29> 'char' lvalue ParmVar 0x13b8385a0 'tpay' 'char'
