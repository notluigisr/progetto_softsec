TranslationUnitDecl 0x122855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1228564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x122855bd0 '__int128'
|-TypedefDecl 0x122856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x122855bf0 'unsigned __int128'
|-TypedefDecl 0x12300be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12300bc00 'struct __NSConstantString_tag'
|   `-Record 0x122856580 '__NSConstantString_tag'
|-TypedefDecl 0x12300be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x122855d90 '__SVInt8_t'
|-TypedefDecl 0x12300bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x122855db0 '__SVInt16_t'
|-TypedefDecl 0x12300bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x122855dd0 '__SVInt32_t'
|-TypedefDecl 0x12300bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x122855df0 '__SVInt64_t'
|-TypedefDecl 0x12300c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x122855e10 '__SVUint8_t'
|-TypedefDecl 0x12300c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x122855e30 '__SVUint16_t'
|-TypedefDecl 0x12300c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x122855e50 '__SVUint32_t'
|-TypedefDecl 0x12300c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x122855e70 '__SVUint64_t'
|-TypedefDecl 0x12300c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x122855e90 '__SVFloat16_t'
|-TypedefDecl 0x12300c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x122855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12300c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x122855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12300c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x122855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12300c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x122855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12300c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x122855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12300c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x122855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12300c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x122855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12300c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x122855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12300c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x122855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12300c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x122855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12300c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x122855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12300c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x122856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12300c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x122856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12300c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x122856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12300c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x122856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12300c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x122856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12300c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1228560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12300c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1228560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12300c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1228560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12300c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x122856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12300ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x122856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12300cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x122856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12300cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x122856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12300cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x122856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12300d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1228561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12300d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1228561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12300d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1228561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12300d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x122856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12300d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x122856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12300d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x122856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12300d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x122856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12300d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x122856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12300d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1228562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12300d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1228562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12300d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1228562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12300d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x122856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12300d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x122856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12300d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x122856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12300d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x122856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12300da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x122856390 '__SVBool_t'
|-TypedefDecl 0x12300da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1228563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12300dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1228563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12300db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1228563f0 '__SVCount_t'
|-TypedefDecl 0x12300dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12300dbb0 'char *'
|   `-BuiltinType 0x1228556b0 'char'
|-TypedefDecl 0x12300dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12300dbb0 'char *'
|   `-BuiltinType 0x1228556b0 'char'
|-FunctionDecl 0x12300de88 <dataset_diviso_filec/func18002_vuln.c:1:1, line:50:1> line:1:1 invalid PyImaging_LibTiffDecoderNew 'int (int *, int *)'
| |-ParmVarDecl 0x12300dd28 <col:29, col:39> col:39 invalid self 'int *'
| |-ParmVarDecl 0x12300dda8 <col:45, col:55> col:55 invalid args 'int *'
| `-CompoundStmt 0x12302a270 <line:2:1, line:50:1>
|   |-DeclStmt 0x12300dfd8 <line:4:5, col:15>
|   | `-VarDecl 0x12300df70 <col:5, col:11> col:11 used mode 'char *'
|   |-DeclStmt 0x12300e070 <line:5:5, col:18>
|   | `-VarDecl 0x12300e008 <col:5, col:11> col:11 used rawmode 'char *'
|   |-DeclStmt 0x12300e108 <line:6:5, col:19>
|   | `-VarDecl 0x12300e0a0 <col:5, col:11> col:11 used compname 'char *'
|   |-DeclStmt 0x12300e1a0 <line:7:5, col:20>
|   | `-VarDecl 0x12300e138 <col:5, col:9> col:9 used compression 'int'
|   |-DeclStmt 0x12300e238 <line:8:5, col:11>
|   | `-VarDecl 0x12300e1d0 <col:5, col:9> col:9 used fp 'int'
|   |-IfStmt 0x123027620 <line:10:5, line:11:16>
|   | |-UnaryOperator 0x1230275c0 <line:10:9, col:72> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-CallExpr 0x123027570 <col:11, col:72> '<dependent type>' contains-errors
|   | |   |-DeclRefExpr 0x12300e3b0 <col:11> 'int ()' Function 0x12300e2f8 'PyArg_ParseTuple' 'int ()'
|   | |   |-RecoveryExpr 0x12300e3d0 <col:28> '<dependent type>' contains-errors lvalue
|   | |   |-StringLiteral 0x123027440 <col:34> 'char[4]' lvalue "STR"
|   | |   |-UnaryOperator 0x1230274b0 <col:41, col:42> 'char **' prefix '&' cannot overflow
|   | |   | `-DeclRefExpr 0x123027460 <col:42> 'char *' lvalue Var 0x12300df70 'mode' 'char *'
|   | |   |-UnaryOperator 0x1230274e8 <col:48, col:49> 'char **' prefix '&' cannot overflow
|   | |   | `-DeclRefExpr 0x1230274c8 <col:49> 'char *' lvalue Var 0x12300e008 'rawmode' 'char *'
|   | |   |-UnaryOperator 0x123027520 <col:58, col:59> 'char **' prefix '&' cannot overflow
|   | |   | `-DeclRefExpr 0x123027500 <col:59> 'char *' lvalue Var 0x12300e0a0 'compname' 'char *'
|   | |   `-UnaryOperator 0x123027558 <col:69, col:70> 'int *' prefix '&' cannot overflow
|   | |     `-DeclRefExpr 0x123027538 <col:70> 'int' lvalue Var 0x12300e1d0 'fp' 'int'
|   | `-ReturnStmt 0x123027610 <line:11:9, col:16>
|   |   `-RecoveryExpr 0x1230275f0 <col:16> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x123027838 <line:13:5, col:28> 'int'
|   | |-ImplicitCastExpr 0x123027820 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x123027720 <col:5> 'int ()' Function 0x123027668 'TRACE' 'int ()'
|   | `-ParenExpr 0x1230277d0 <col:11, col:27> 'char *'
|   |   `-BinaryOperator 0x1230277b0 <col:12, col:19> 'char *' ','
|   |     |-ImplicitCastExpr 0x123027780 <col:12> 'char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x123027740 <col:12> 'char[4]' lvalue "STR"
|   |     `-ImplicitCastExpr 0x123027798 <col:19> 'char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x123027760 <col:19> 'char *' lvalue Var 0x12300e0a0 'compname' 'char *'
|   |-IfStmt 0x123029c28 <line:17:5, line:32:5> has_else
|   | |-BinaryOperator 0x123028028 <line:17:9, col:40> 'int' '=='
|   | | |-CallExpr 0x123027f78 <col:9, col:35> 'int'
|   | | | |-ImplicitCastExpr 0x123027f60 <col:9> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x123027ea0 <col:9> 'int (const char *, const char *)' Function 0x123027cc0 'strcasecmp' 'int (const char *, const char *)'
|   | | | |-ImplicitCastExpr 0x123027fc0 <col:20> 'const char *' <NoOp>
|   | | | | `-ImplicitCastExpr 0x123027fa8 <col:20> 'char *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x123027ec0 <col:20> 'char *' lvalue Var 0x12300e0a0 'compname' 'char *'
|   | | | `-ImplicitCastExpr 0x123027ff0 <col:30> 'const char *' <NoOp>
|   | | |   `-ImplicitCastExpr 0x123027fd8 <col:30> 'char *' <ArrayToPointerDecay>
|   | | |     `-StringLiteral 0x123027ee0 <col:30> 'char[4]' lvalue "STR"
|   | | `-IntegerLiteral 0x123028008 <col:40> 'int' 0
|   | |-CompoundStmt 0x1230280e0 <col:43, line:20:5>
|   | | `-BinaryOperator 0x1230280c0 <line:18:9, col:23> 'int' contains-errors '='
|   | |   |-DeclRefExpr 0x123028048 <col:9> 'int' lvalue Var 0x12300e138 'compression' 'int'
|   | |   `-RecoveryExpr 0x1230280a0 <col:23> '<dependent type>' contains-errors lvalue
|   | `-IfStmt 0x123029bf8 <line:20:12, line:32:5> has_else
|   |   |-BinaryOperator 0x123028250 <line:20:16, col:47> 'int' '=='
|   |   | |-CallExpr 0x1230281a0 <col:16, col:42> 'int'
|   |   | | |-ImplicitCastExpr 0x123028188 <col:16> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   | | | `-DeclRefExpr 0x1230280f8 <col:16> 'int (const char *, const char *)' Function 0x123027cc0 'strcasecmp' 'int (const char *, const char *)'
|   |   | | |-ImplicitCastExpr 0x1230281e8 <col:27> 'const char *' <NoOp>
|   |   | | | `-ImplicitCastExpr 0x1230281d0 <col:27> 'char *' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x123028118 <col:27> 'char *' lvalue Var 0x12300e0a0 'compname' 'char *'
|   |   | | `-ImplicitCastExpr 0x123028218 <col:37> 'const char *' <NoOp>
|   |   | |   `-ImplicitCastExpr 0x123028200 <col:37> 'char *' <ArrayToPointerDecay>
|   |   | |     `-StringLiteral 0x123028138 <col:37> 'char[4]' lvalue "STR"
|   |   | `-IntegerLiteral 0x123028230 <col:47> 'int' 0
|   |   |-CompoundStmt 0x123028308 <col:50, line:23:5>
|   |   | `-BinaryOperator 0x1230282e8 <line:21:9, col:23> 'int' contains-errors '='
|   |   |   |-DeclRefExpr 0x123028270 <col:9> 'int' lvalue Var 0x12300e138 'compression' 'int'
|   |   |   `-RecoveryExpr 0x1230282c8 <col:23> '<dependent type>' contains-errors lvalue
|   |   `-IfStmt 0x123029bc8 <line:23:12, line:32:5> has_else
|   |     |-BinaryOperator 0x123029680 <line:23:16, col:47> 'int' '=='
|   |     | |-CallExpr 0x1230283c8 <col:16, col:42> 'int'
|   |     | | |-ImplicitCastExpr 0x1230283b0 <col:16> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |     | | | `-DeclRefExpr 0x123028320 <col:16> 'int (const char *, const char *)' Function 0x123027cc0 'strcasecmp' 'int (const char *, const char *)'
|   |     | | |-ImplicitCastExpr 0x123029618 <col:27> 'const char *' <NoOp>
|   |     | | | `-ImplicitCastExpr 0x123029600 <col:27> 'char *' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x123028340 <col:27> 'char *' lvalue Var 0x12300e0a0 'compname' 'char *'
|   |     | | `-ImplicitCastExpr 0x123029648 <col:37> 'const char *' <NoOp>
|   |     | |   `-ImplicitCastExpr 0x123029630 <col:37> 'char *' <ArrayToPointerDecay>
|   |     | |     `-StringLiteral 0x123028360 <col:37> 'char[4]' lvalue "STR"
|   |     | `-IntegerLiteral 0x123029660 <col:47> 'int' 0
|   |     |-CompoundStmt 0x123029738 <col:50, line:26:5>
|   |     | `-BinaryOperator 0x123029718 <line:24:9, col:23> 'int' contains-errors '='
|   |     |   |-DeclRefExpr 0x1230296a0 <col:9> 'int' lvalue Var 0x12300e138 'compression' 'int'
|   |     |   `-RecoveryExpr 0x1230296f8 <col:23> '<dependent type>' contains-errors lvalue
|   |     `-IfStmt 0x123029b98 <line:26:12, line:32:5> has_else
|   |       |-BinaryOperator 0x1230298a8 <line:26:16, col:47> 'int' '=='
|   |       | |-CallExpr 0x1230297f8 <col:16, col:42> 'int'
|   |       | | |-ImplicitCastExpr 0x1230297e0 <col:16> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |       | | | `-DeclRefExpr 0x123029750 <col:16> 'int (const char *, const char *)' Function 0x123027cc0 'strcasecmp' 'int (const char *, const char *)'
|   |       | | |-ImplicitCastExpr 0x123029840 <col:27> 'const char *' <NoOp>
|   |       | | | `-ImplicitCastExpr 0x123029828 <col:27> 'char *' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x123029770 <col:27> 'char *' lvalue Var 0x12300e0a0 'compname' 'char *'
|   |       | | `-ImplicitCastExpr 0x123029870 <col:37> 'const char *' <NoOp>
|   |       | |   `-ImplicitCastExpr 0x123029858 <col:37> 'char *' <ArrayToPointerDecay>
|   |       | |     `-StringLiteral 0x123029790 <col:37> 'char[4]' lvalue "STR"
|   |       | `-IntegerLiteral 0x123029888 <col:47> 'int' 0
|   |       |-CompoundStmt 0x123029960 <col:50, line:29:5>
|   |       | `-BinaryOperator 0x123029940 <line:27:9, col:23> 'int' contains-errors '='
|   |       |   |-DeclRefExpr 0x1230298c8 <col:9> 'int' lvalue Var 0x12300e138 'compression' 'int'
|   |       |   `-RecoveryExpr 0x123029920 <col:23> '<dependent type>' contains-errors lvalue
|   |       `-CompoundStmt 0x123029b78 <line:29:12, line:32:5>
|   |         |-CallExpr 0x123029b00 <line:30:9, col:48> '<dependent type>' contains-errors
|   |         | |-DeclRefExpr 0x123029a58 <col:9> 'int ()' Function 0x1230299a0 'PyErr_SetString' 'int ()'
|   |         | |-RecoveryExpr 0x123029ae0 <col:25> '<dependent type>' contains-errors lvalue
|   |         | `-StringLiteral 0x123029a90 <col:43> 'char[4]' lvalue "STR"
|   |         `-ReturnStmt 0x123029b68 <line:31:9, col:16>
|   |           `-RecoveryExpr 0x123029b48 <col:16> '<dependent type>' contains-errors lvalue
|   `-IfStmt 0x12302a250 <line:41:5, line:45:5>
|     |-RecoveryExpr 0x12302a0e0 <line:41:9, col:62> '_Bool' contains-errors
|     `-CompoundStmt 0x12302a240 <col:65, line:45:5>
`-FunctionDecl 0x123027cc0 <line:17:9> col:9 implicit used strcasecmp 'int (const char *, const char *)' extern
  |-ParmVarDecl 0x123027dc0 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x123027e28 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x123027d68 <<invalid sloc>> Implicit 957
