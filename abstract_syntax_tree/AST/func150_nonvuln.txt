TranslationUnitDecl 0x14e855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14e8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14e855bd0 '__int128'
|-TypedefDecl 0x14e856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14e855bf0 'unsigned __int128'
|-TypedefDecl 0x14f00be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14f00bc00 'struct __NSConstantString_tag'
|   `-Record 0x14e856580 '__NSConstantString_tag'
|-TypedefDecl 0x14f00be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14e855d90 '__SVInt8_t'
|-TypedefDecl 0x14f00bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14e855db0 '__SVInt16_t'
|-TypedefDecl 0x14f00bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14e855dd0 '__SVInt32_t'
|-TypedefDecl 0x14f00bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14e855df0 '__SVInt64_t'
|-TypedefDecl 0x14f00c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14e855e10 '__SVUint8_t'
|-TypedefDecl 0x14f00c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14e855e30 '__SVUint16_t'
|-TypedefDecl 0x14f00c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14e855e50 '__SVUint32_t'
|-TypedefDecl 0x14f00c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14e855e70 '__SVUint64_t'
|-TypedefDecl 0x14f00c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14e855e90 '__SVFloat16_t'
|-TypedefDecl 0x14f00c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14e855eb0 '__SVFloat32_t'
|-TypedefDecl 0x14f00c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14e855ed0 '__SVFloat64_t'
|-TypedefDecl 0x14f00c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14e855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14f00c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14e855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14f00c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14e855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14f00c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14e855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14f00c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14e855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14f00c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14e855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14f00c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14e855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14f00c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14e855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14f00c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14e855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14f00c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14e856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14f00c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14e856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14f00c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14e856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14f00c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14e856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14f00c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14e856090 '__clang_svint8x3_t'
|-TypedefDecl 0x14f00c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14e8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14f00c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14e8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14f00c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14e8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14f00c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14e856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14f00ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14e856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14f00cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14e856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14f00cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14e856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14f00cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14e856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14f00d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14e8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14f00d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14e8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14f00d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14e8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14f00d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14e856210 '__clang_svint8x4_t'
|-TypedefDecl 0x14f00d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14e856230 '__clang_svint16x4_t'
|-TypedefDecl 0x14f00d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14e856250 '__clang_svint32x4_t'
|-TypedefDecl 0x14f00d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14e856270 '__clang_svint64x4_t'
|-TypedefDecl 0x14f00d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14e856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14f00d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14e8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14f00d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14e8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14f00d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14e8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14f00d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14e856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14f00d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14e856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14f00d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14e856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14f00d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14e856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14f00da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14e856390 '__SVBool_t'
|-TypedefDecl 0x14f00da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14e8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14f00dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14e8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14f00db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14e8563f0 '__SVCount_t'
|-TypedefDecl 0x14f00dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14f00dbb0 'char *'
|   `-BuiltinType 0x14e8556b0 'char'
|-TypedefDecl 0x14f00dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14f00dbb0 'char *'
|   `-BuiltinType 0x14e8556b0 'char'
`-FunctionDecl 0x14f026898 <dataset_diviso_filec/func150_nonvuln.c:1:1, line:27:1> line:1:5 invalid vfs_mknod 'int (struct inode *, struct dentry *, int, int)'
  |-ParmVarDecl 0x14f00e248 <col:15, col:29> col:29 used dir 'struct inode *'
  |-ParmVarDecl 0x14f026628 <col:34, col:49> col:49 used dentry 'struct dentry *'
  |-ParmVarDecl 0x14f0266a8 <col:57, col:61> col:61 used mode 'int'
  |-ParmVarDecl 0x14f026740 <col:67, col:73> col:73 invalid dev 'int'
  `-CompoundStmt 0x15800ab00 <line:2:1, line:27:1>
    |-DeclStmt 0x14f026c48 <line:3:2, col:37>
    | `-VarDecl 0x14f026978 <col:2, col:36> col:6 used error 'int' cinit
    |   `-CallExpr 0x14f026be8 <col:14, col:36> 'int'
    |     |-ImplicitCastExpr 0x14f026bd0 <col:14> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x14f026b40 <col:14> 'int ()' Function 0x14f026a88 'may_create' 'int ()'
    |     |-ImplicitCastExpr 0x14f026c18 <col:25> 'struct inode *' <LValueToRValue>
    |     | `-DeclRefExpr 0x14f026b60 <col:25> 'struct inode *' lvalue ParmVar 0x14f00e248 'dir' 'struct inode *'
    |     `-ImplicitCastExpr 0x14f026c30 <col:30> 'struct dentry *' <LValueToRValue>
    |       `-DeclRefExpr 0x14f026b80 <col:30> 'struct dentry *' lvalue ParmVar 0x14f026628 'dentry' 'struct dentry *'
    |-IfStmt 0x14f026ce0 <line:5:2, line:6:10>
    | |-ImplicitCastExpr 0x14f026c80 <line:5:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x14f026c60 <col:6> 'int' lvalue Var 0x14f026978 'error' 'int'
    | `-ReturnStmt 0x14f026cd0 <line:6:3, col:10>
    |   `-ImplicitCastExpr 0x14f026cb8 <col:10> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x14f026c98 <col:10> 'int' lvalue Var 0x14f026978 'error' 'int'
    |-IfStmt 0x14f0274b0 <line:8:2, line:9:11>
    | |-BinaryOperator 0x14f0273e8 <line:8:6, col:60> 'int' contains-errors '&&'
    | | |-ParenExpr 0x14f027368 <col:6, col:37> 'int'
    | | | `-BinaryOperator 0x14f027348 <col:7, col:36> 'int' '||'
    | | |   |-CallExpr 0x14f0272b0 <col:7, col:19> 'int'
    | | |   | |-ImplicitCastExpr 0x14f027298 <col:7> 'int (*)()' <FunctionToPointerDecay>
    | | |   | | `-DeclRefExpr 0x14f026de0 <col:7> 'int ()' Function 0x14f026d28 'S_ISCHR' 'int ()'
    | | |   | `-ImplicitCastExpr 0x14f0272d8 <col:15> 'int' <LValueToRValue>
    | | |   |   `-DeclRefExpr 0x14f026e00 <col:15> 'int' lvalue ParmVar 0x14f0266a8 'mode' 'int'
    | | |   `-CallExpr 0x14f027308 <col:24, col:36> 'int'
    | | |     |-ImplicitCastExpr 0x14f0272f0 <col:24> 'int (*)()' <FunctionToPointerDecay>
    | | |     | `-DeclRefExpr 0x14f026f58 <col:24> 'int ()' Function 0x14f026ea0 'S_ISBLK' 'int ()'
    | | |     `-ImplicitCastExpr 0x14f027330 <col:32> 'int' <LValueToRValue>
    | | |       `-DeclRefExpr 0x14f026f78 <col:32> 'int' lvalue ParmVar 0x14f0266a8 'mode' 'int'
    | | `-UnaryOperator 0x14f0273d0 <col:42, col:60> '<dependent type>' contains-errors prefix '!' cannot overflow
    | |   `-CallExpr 0x14f0273a8 <col:43, col:60> '<dependent type>' contains-errors
    | |     |-DeclRefExpr 0x14f027110 <col:43> 'int ()' Function 0x14f027058 'capable' 'int ()'
    | |     `-RecoveryExpr 0x14f027388 <col:51> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x14f0274a0 <line:9:3, col:11>
    |   `-UnaryOperator 0x14f027488 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x14f027470 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x14f027450 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x15800a060 <line:11:2, line:12:11>
    | |-UnaryOperator 0x14f027590 <line:11:6, col:18> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x14f027578 <col:7, col:18> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-CXXDependentScopeMemberExpr 0x14f027530 <col:7, col:18> '<dependent type>' contains-errors lvalue ->mknod
    | |     `-RecoveryExpr 0x14f027508 <col:7, col:12> '<dependent type>' contains-errors lvalue
    | |       `-DeclRefExpr 0x14f0274d0 <col:7> 'struct inode *' lvalue ParmVar 0x14f00e248 'dir' 'struct inode *'
    | `-ReturnStmt 0x15800a050 <line:12:3, col:11>
    |   `-UnaryOperator 0x15800a038 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x15800a020 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x15800a000 <col:11> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x15800a210 <line:14:2, col:41> 'int' contains-errors '='
    | |-DeclRefExpr 0x15800a080 <col:2> 'int' lvalue Var 0x14f026978 'error' 'int'
    | `-CallExpr 0x15800a1e0 <col:10, col:41> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x15800a180 <col:10> 'int ()' Function 0x15800a0c8 'devcgroup_inode_mknod' 'int ()'
    |   |-DeclRefExpr 0x15800a1a0 <col:32> 'int' lvalue ParmVar 0x14f0266a8 'mode' 'int'
    |   `-RecoveryExpr 0x15800a1c0 <col:38> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x15800a2b0 <line:15:2, line:16:10>
    | |-ImplicitCastExpr 0x15800a250 <line:15:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x15800a230 <col:6> 'int' lvalue Var 0x14f026978 'error' 'int'
    | `-ReturnStmt 0x15800a2a0 <line:16:3, col:10>
    |   `-ImplicitCastExpr 0x15800a288 <col:10> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x15800a268 <col:10> 'int' lvalue Var 0x14f026978 'error' 'int'
    |-BinaryOperator 0x15800a4b0 <line:18:2, col:53> 'int' contains-errors '='
    | |-DeclRefExpr 0x15800a2d0 <col:2> 'int' lvalue Var 0x14f026978 'error' 'int'
    | `-CallExpr 0x15800a470 <col:10, col:53> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x15800a3d0 <col:10> 'int ()' Function 0x15800a318 'security_inode_mknod' 'int ()'
    |   |-DeclRefExpr 0x15800a3f0 <col:31> 'struct inode *' lvalue ParmVar 0x14f00e248 'dir' 'struct inode *'
    |   |-DeclRefExpr 0x15800a410 <col:36> 'struct dentry *' lvalue ParmVar 0x14f026628 'dentry' 'struct dentry *'
    |   |-DeclRefExpr 0x15800a430 <col:44> 'int' lvalue ParmVar 0x14f0266a8 'mode' 'int'
    |   `-RecoveryExpr 0x15800a450 <col:50> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x15800a550 <line:19:2, line:20:10>
    | |-ImplicitCastExpr 0x15800a4f0 <line:19:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x15800a4d0 <col:6> 'int' lvalue Var 0x14f026978 'error' 'int'
    | `-ReturnStmt 0x15800a540 <line:20:3, col:10>
    |   `-ImplicitCastExpr 0x15800a528 <col:10> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x15800a508 <col:10> 'int' lvalue Var 0x14f026978 'error' 'int'
    |-CallExpr 0x15800a6a8 <line:22:2, col:17> 'int'
    | |-ImplicitCastExpr 0x15800a690 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x15800a650 <col:2> 'int ()' Function 0x15800a598 'vfs_dq_init' 'int ()'
    | `-ImplicitCastExpr 0x15800a6d0 <col:14> 'struct inode *' <LValueToRValue>
    |   `-DeclRefExpr 0x15800a670 <col:14> 'struct inode *' lvalue ParmVar 0x14f00e248 'dir' 'struct inode *'
    |-BinaryOperator 0x15800a870 <line:23:2, col:49> 'int' contains-errors '='
    | |-DeclRefExpr 0x15800a6e8 <col:2> 'int' lvalue Var 0x14f026978 'error' 'int'
    | `-CallExpr 0x15800a830 <col:10, col:49> '<dependent type>' contains-errors
    |   |-CXXDependentScopeMemberExpr 0x15800a768 <col:10, col:21> '<dependent type>' contains-errors lvalue ->mknod
    |   | `-RecoveryExpr 0x15800a740 <col:10, col:15> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x15800a708 <col:10> 'struct inode *' lvalue ParmVar 0x14f00e248 'dir' 'struct inode *'
    |   |-DeclRefExpr 0x15800a7b0 <col:27> 'struct inode *' lvalue ParmVar 0x14f00e248 'dir' 'struct inode *'
    |   |-DeclRefExpr 0x15800a7d0 <col:32> 'struct dentry *' lvalue ParmVar 0x14f026628 'dentry' 'struct dentry *'
    |   |-DeclRefExpr 0x15800a7f0 <col:40> 'int' lvalue ParmVar 0x14f0266a8 'mode' 'int'
    |   `-RecoveryExpr 0x15800a810 <col:46> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x15800aa98 <line:24:2, line:25:30>
    | |-UnaryOperator 0x15800a8c8 <line:24:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x15800a8b0 <col:7> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x15800a890 <col:7> 'int' lvalue Var 0x14f026978 'error' 'int'
    | `-CallExpr 0x15800aa38 <line:25:3, col:30> 'int'
    |   |-ImplicitCastExpr 0x15800aa20 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x15800a9c0 <col:3> 'int ()' Function 0x15800a908 'fsnotify_create' 'int ()'
    |   |-ImplicitCastExpr 0x15800aa68 <col:19> 'struct inode *' <LValueToRValue>
    |   | `-DeclRefExpr 0x15800a9e0 <col:19> 'struct inode *' lvalue ParmVar 0x14f00e248 'dir' 'struct inode *'
    |   `-ImplicitCastExpr 0x15800aa80 <col:24> 'struct dentry *' <LValueToRValue>
    |     `-DeclRefExpr 0x15800aa00 <col:24> 'struct dentry *' lvalue ParmVar 0x14f026628 'dentry' 'struct dentry *'
    `-ReturnStmt 0x15800aaf0 <line:26:2, col:9>
      `-ImplicitCastExpr 0x15800aad8 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x15800aab8 <col:9> 'int' lvalue Var 0x14f026978 'error' 'int'
