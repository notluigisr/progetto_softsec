TranslationUnitDecl 0x15c83e808 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x15c83f6b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x15c83edd0 '__int128'
|-TypedefDecl 0x15c83f728 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x15c83edf0 'unsigned __int128'
|-TypedefDecl 0x15c8cfe30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15c8cfc00 'struct __NSConstantString_tag'
|   `-Record 0x15c83f780 '__NSConstantString_tag'
|-TypedefDecl 0x15c8cfe98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x15c83ef90 '__SVInt8_t'
|-TypedefDecl 0x15c8cff00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x15c83efb0 '__SVInt16_t'
|-TypedefDecl 0x15c8cff68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x15c83efd0 '__SVInt32_t'
|-TypedefDecl 0x15c8cffd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x15c83eff0 '__SVInt64_t'
|-TypedefDecl 0x15c8d0038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x15c83f010 '__SVUint8_t'
|-TypedefDecl 0x15c8d00a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x15c83f030 '__SVUint16_t'
|-TypedefDecl 0x15c8d0108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x15c83f050 '__SVUint32_t'
|-TypedefDecl 0x15c8d0170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x15c83f070 '__SVUint64_t'
|-TypedefDecl 0x15c8d01d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x15c83f090 '__SVFloat16_t'
|-TypedefDecl 0x15c8d0240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x15c83f0b0 '__SVFloat32_t'
|-TypedefDecl 0x15c8d02a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x15c83f0d0 '__SVFloat64_t'
|-TypedefDecl 0x15c8d0310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x15c83f0f0 '__SVBfloat16_t'
|-TypedefDecl 0x15c8d0378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x15c83f110 '__clang_svint8x2_t'
|-TypedefDecl 0x15c8d03e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x15c83f130 '__clang_svint16x2_t'
|-TypedefDecl 0x15c8d0448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x15c83f150 '__clang_svint32x2_t'
|-TypedefDecl 0x15c8d04b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x15c83f170 '__clang_svint64x2_t'
|-TypedefDecl 0x15c8d0518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x15c83f190 '__clang_svuint8x2_t'
|-TypedefDecl 0x15c8d0580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x15c83f1b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15c8d05e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x15c83f1d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15c8d0650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x15c83f1f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15c8d06b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x15c83f210 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15c8d0720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x15c83f230 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15c8d0788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x15c83f250 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15c8d07f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x15c83f270 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15c8d0858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x15c83f290 '__clang_svint8x3_t'
|-TypedefDecl 0x15c8d08c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x15c83f2b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15c8d0928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x15c83f2d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15c8d0990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x15c83f2f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15c8d09f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x15c83f310 '__clang_svuint8x3_t'
|-TypedefDecl 0x15c8d0a60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x15c83f330 '__clang_svuint16x3_t'
|-TypedefDecl 0x15c8d0ac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x15c83f350 '__clang_svuint32x3_t'
|-TypedefDecl 0x15c8d0b30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x15c83f370 '__clang_svuint64x3_t'
|-TypedefDecl 0x15c8d0b98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x15c83f390 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15c8d1400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x15c83f3b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15c8d1468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x15c83f3d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15c8d14d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x15c83f3f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15c8d1538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x15c83f410 '__clang_svint8x4_t'
|-TypedefDecl 0x15c8d15a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x15c83f430 '__clang_svint16x4_t'
|-TypedefDecl 0x15c8d1608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x15c83f450 '__clang_svint32x4_t'
|-TypedefDecl 0x15c8d1670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x15c83f470 '__clang_svint64x4_t'
|-TypedefDecl 0x15c8d16d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x15c83f490 '__clang_svuint8x4_t'
|-TypedefDecl 0x15c8d1740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x15c83f4b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15c8d17a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x15c83f4d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15c8d1810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x15c83f4f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15c8d1878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x15c83f510 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15c8d18e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x15c83f530 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15c8d1948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x15c83f550 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15c8d19b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x15c83f570 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15c8d1a18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x15c83f590 '__SVBool_t'
|-TypedefDecl 0x15c8d1a80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x15c83f5b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15c8d1ae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x15c83f5d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15c8d1b50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x15c83f5f0 '__SVCount_t'
|-TypedefDecl 0x15c8d1bf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15c8d1bb0 'char *'
|   `-BuiltinType 0x15c83e8b0 'char'
|-TypedefDecl 0x15c8d1c68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15c8d1bb0 'char *'
|   `-BuiltinType 0x15c83e8b0 'char'
`-FunctionDecl 0x15c8d1e88 <dataset_diviso_filec/func14010_nonvuln.c:1:1, line:26:1> line:1:12 invalid read_const_block_data 'int (int *, int *)' static
  |-ParmVarDecl 0x15c8d1d28 <col:34, col:49> col:49 invalid ctx 'int *'
  |-ParmVarDecl 0x15c8d1da8 <col:54, col:68> col:68 referenced invalid bd 'int *'
  `-CompoundStmt 0x14c8098d0 <line:2:1, line:26:1>
    |-IfStmt 0x15c8d21e0 <line:7:5, line:8:16>
    | |-BinaryOperator 0x15c8d2178 <line:7:9, col:29> 'int' contains-errors '<='
    | | |-CXXDependentScopeMemberExpr 0x15c8d2110 <col:9, col:13> '<dependent type>' contains-errors lvalue ->block_length
    | | | `-RecoveryExpr 0x15c8d20f0 <col:9> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x15c8d2158 <col:29> 'int' 0
    | `-ReturnStmt 0x15c8d21d0 <line:8:9, col:16>
    |   `-RecoveryExpr 0x15c8d21b0 <col:16> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x15c8d22b8 <line:10:5, col:24> '<dependent type>' contains-errors '='
    | |-UnaryOperator 0x15c8d2280 <col:5, col:10> '<dependent type>' contains-errors prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x15c8d2268 <col:6, col:10> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-CXXDependentScopeMemberExpr 0x15c8d2220 <col:6, col:10> '<dependent type>' contains-errors lvalue ->raw_samples
    | |     `-RecoveryExpr 0x15c8d2200 <col:6> '<dependent type>' contains-errors lvalue
    | `-IntegerLiteral 0x15c8d2298 <col:24> 'int' 0
    |-BinaryOperator 0x14c808e08 <line:11:5, col:36> '<dependent type>' contains-errors '='
    | |-UnaryOperator 0x14c808da8 <col:5, col:10> '<dependent type>' contains-errors prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x14c808d90 <col:6, col:10> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-CXXDependentScopeMemberExpr 0x15c8d22f8 <col:6, col:10> '<dependent type>' contains-errors lvalue ->const_block
    | |     `-RecoveryExpr 0x15c8d22d8 <col:6> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x14c808de0 <col:24, col:36> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14c808ce0 <col:24> 'int ()' Function 0x14c808c28 'get_bits1' 'int ()'
    |   `-RecoveryExpr 0x14c808dc0 <col:34> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x14c808f80 <line:12:5, col:36> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x14c808e70 <col:5, col:9> '<dependent type>' contains-errors lvalue ->js_blocks
    | | `-RecoveryExpr 0x14c808e48 <col:5> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x14c808e28 <col:5> 'int *' lvalue ParmVar 0x15c8d1da8 'bd' 'int *'
    | `-CallExpr 0x14c808f58 <col:24, col:36> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14c808eb8 <col:24> 'int ()' Function 0x14c808c28 'get_bits1' 'int ()'
    |   `-RecoveryExpr 0x14c808f38 <col:34> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x14c809128 <line:15:5, col:20> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14c809080 <col:5> 'int ()' Function 0x14c808fc8 'skip_bits' 'int ()'
    | |-RecoveryExpr 0x14c809108 <col:15> '<dependent type>' contains-errors lvalue
    | `-IntegerLiteral 0x14c8090b8 <col:19> 'int' 5
    |-IfStmt 0x14c8097a8 <line:17:5, line:20:5>
    | |-UnaryOperator 0x14c8091d8 <line:17:9, col:14> '<dependent type>' contains-errors prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x14c8091c0 <col:10, col:14> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-CXXDependentScopeMemberExpr 0x14c809178 <col:10, col:14> '<dependent type>' contains-errors lvalue ->const_block
    | |     `-RecoveryExpr 0x14c809158 <col:10> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x14c809788 <col:27, line:20:5>
    |   |-DeclStmt 0x14c809480 <line:18:9, col:88>
    |   | `-VarDecl 0x14c809208 <col:9, col:69> col:22 used const_val_bits 'unsigned int' cinit
    |   |   `-ConditionalOperator 0x14c809450 <col:39, col:69> '<dependent type>' contains-errors
    |   |     |-CXXDependentScopeMemberExpr 0x14c8093a0 <col:39, col:46> '<dependent type>' contains-errors lvalue ->floating
    |   |     | `-RecoveryExpr 0x14c809380 <col:39> '<dependent type>' contains-errors lvalue
    |   |     |-IntegerLiteral 0x14c8092d0 <col:57> 'int' 24
    |   |     `-CXXDependentScopeMemberExpr 0x14c809408 <col:62, col:69> '<dependent type>' contains-errors lvalue ->bits_per_raw_sample
    |   |       `-RecoveryExpr 0x14c8093e8 <col:62> '<dependent type>' contains-errors lvalue
    |   `-BinaryOperator 0x14c809768 <line:19:9, col:61> '<dependent type>' contains-errors '='
    |     |-UnaryOperator 0x14c809700 <col:9, col:14> '<dependent type>' contains-errors prefix '*' cannot overflow
    |     | `-ImplicitCastExpr 0x14c8096e8 <col:10, col:14> '<dependent type>' contains-errors <LValueToRValue>
    |     |   `-CXXDependentScopeMemberExpr 0x14c8094b8 <col:10, col:14> '<dependent type>' contains-errors lvalue ->raw_samples
    |     |     `-RecoveryExpr 0x14c809498 <col:10> '<dependent type>' contains-errors lvalue
    |     `-CallExpr 0x14c809738 <col:28, col:61> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x14c809610 <col:28> 'int ()' Function 0x14c809558 'get_sbits_long' 'int ()'
    |       |-RecoveryExpr 0x14c809718 <col:43> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x14c809648 <col:47> 'unsigned int' contains-errors lvalue Var 0x14c809208 'const_val_bits' 'unsigned int'
    |-BinaryOperator 0x14c809880 <line:23:5, col:24> '<dependent type>' contains-errors '='
    | |-UnaryOperator 0x14c809848 <col:5, col:10> '<dependent type>' contains-errors prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x14c809830 <col:6, col:10> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-CXXDependentScopeMemberExpr 0x14c8097e8 <col:6, col:10> '<dependent type>' contains-errors lvalue ->const_block
    | |     `-RecoveryExpr 0x14c8097c8 <col:6> '<dependent type>' contains-errors lvalue
    | `-IntegerLiteral 0x14c809860 <col:24> 'int' 1
    `-ReturnStmt 0x14c8098c0 <line:25:5, col:12>
      `-IntegerLiteral 0x14c8098a0 <col:12> 'int' 0
