TranslationUnitDecl 0x12a055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12a0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12a055bd0 '__int128'
|-TypedefDecl 0x12a056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12a055bf0 'unsigned __int128'
|-TypedefDecl 0x12a80be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12a80bc00 'struct __NSConstantString_tag'
|   `-Record 0x12a056580 '__NSConstantString_tag'
|-TypedefDecl 0x12a80be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12a055d90 '__SVInt8_t'
|-TypedefDecl 0x12a80bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12a055db0 '__SVInt16_t'
|-TypedefDecl 0x12a80bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12a055dd0 '__SVInt32_t'
|-TypedefDecl 0x12a80bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12a055df0 '__SVInt64_t'
|-TypedefDecl 0x12a80c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12a055e10 '__SVUint8_t'
|-TypedefDecl 0x12a80c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12a055e30 '__SVUint16_t'
|-TypedefDecl 0x12a80c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12a055e50 '__SVUint32_t'
|-TypedefDecl 0x12a80c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12a055e70 '__SVUint64_t'
|-TypedefDecl 0x12a80c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12a055e90 '__SVFloat16_t'
|-TypedefDecl 0x12a80c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12a055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12a80c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12a055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12a80c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12a055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12a80c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12a055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12a80c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12a055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12a80c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12a055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12a80c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12a055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12a80c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12a055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12a80c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12a055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12a80c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12a055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12a80c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12a055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12a80c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12a056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12a80c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12a056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12a80c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12a056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12a80c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12a056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12a80c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12a056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12a80c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12a0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12a80c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12a0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12a80c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12a0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12a80c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12a056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12a80ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12a056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12a80cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12a056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12a80cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12a056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12a80cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12a056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12a80d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12a0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12a80d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12a0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12a80d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12a0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12a80d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12a056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12a80d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12a056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12a80d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12a056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12a80d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12a056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12a80d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12a056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12a80d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12a0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12a80d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12a0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12a80d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12a0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12a80d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12a056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12a80d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12a056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12a80d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12a056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12a80d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12a056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12a80da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12a056390 '__SVBool_t'
|-TypedefDecl 0x12a80da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12a0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12a80dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12a0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12a80db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12a0563f0 '__SVCount_t'
|-TypedefDecl 0x12a80dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12a80dbb0 'char *'
|   `-BuiltinType 0x12a0556b0 'char'
|-TypedefDecl 0x12a80dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12a80dbb0 'char *'
|   `-BuiltinType 0x12a0556b0 'char'
`-FunctionDecl 0x12a80e358 <dataset_diviso_filec/func1155_nonvuln.c:1:1, line:24:1> line:1:12 verify_chunk_dev_extent_mapping 'int (struct btrfs_fs_info *)' static
  |-ParmVarDecl 0x12a80e248 <col:44, col:66> col:66 used fs_info 'struct btrfs_fs_info *'
  `-CompoundStmt 0x12a829a08 <line:2:1, line:24:1>
    |-DeclStmt 0x12a8268b0 <line:3:2, col:58>
    | |-RecordDecl 0x12a826650 <col:2, col:9> col:9 struct extent_map_tree
    | `-VarDecl 0x12a8267b8 <col:2, col:46> col:26 used em_tree 'struct extent_map_tree *' cinit
    |   `-UnaryOperator 0x12a826880 <col:36, col:46> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x12a826858 <col:37, col:46> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x12a826820 <col:37> 'struct btrfs_fs_info *' lvalue ParmVar 0x12a80e248 'fs_info' 'struct btrfs_fs_info *'
    |-DeclStmt 0x12a826ab8 <line:4:2, col:23>
    | |-RecordDecl 0x12a8268c8 <col:2, col:9> col:9 struct extent_map
    | `-VarDecl 0x12a826a38 <col:2, col:21> col:21 used em 'struct extent_map *'
    |-DeclStmt 0x12a826cb8 <line:5:2, col:22>
    | |-RecordDecl 0x12a826ad0 <col:2, col:9> col:9 struct rb_node
    | `-VarDecl 0x12a826c38 <col:2, col:18> col:18 used node 'struct rb_node *'
    |-DeclStmt 0x12a826d70 <line:6:2, col:13>
    | `-VarDecl 0x12a826ce8 <col:2, col:12> col:6 used ret 'int' cinit
    |   `-IntegerLiteral 0x12a826d50 <col:12> 'int' 0
    |-CallExpr 0x12a826f48 <line:8:2, col:26> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12a826eb0 <col:2> 'int ()' Function 0x12a826df8 'read_lock' 'int ()'
    | `-UnaryOperator 0x12a826f30 <col:12, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x12a826f08 <col:13, col:22> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x12a826ed0 <col:13> 'struct extent_map_tree *' contains-errors lvalue Var 0x12a8267b8 'em_tree' 'struct extent_map_tree *'
    |-ForStmt 0x12a8297c8 <line:9:2, line:20:2>
    | |-BinaryOperator 0x12a827130 <line:9:7, col:43> 'struct rb_node *' contains-errors '='
    | | |-DeclRefExpr 0x12a826f70 <col:7> 'struct rb_node *' lvalue Var 0x12a826c38 'node' 'struct rb_node *'
    | | `-CallExpr 0x12a827108 <col:14, col:43> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x12a827070 <col:14> 'int ()' Function 0x12a826fb8 'rb_first_cached' 'int ()'
    | |   `-UnaryOperator 0x12a8270f0 <col:30, col:40> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |     `-RecoveryExpr 0x12a8270c8 <col:31, col:40> '<dependent type>' contains-errors lvalue
    | |       `-DeclRefExpr 0x12a827090 <col:31> 'struct extent_map_tree *' contains-errors lvalue Var 0x12a8267b8 'em_tree' 'struct extent_map_tree *'
    | |-<<<NULL>>>
    | |-ImplicitCastExpr 0x12a827170 <col:46> 'struct rb_node *' <LValueToRValue>
    | | `-DeclRefExpr 0x12a827150 <col:46> 'struct rb_node *' lvalue Var 0x12a826c38 'node' 'struct rb_node *'
    | |-BinaryOperator 0x12a827370 <col:52, col:71> 'struct rb_node *' '='
    | | |-DeclRefExpr 0x12a827188 <col:52> 'struct rb_node *' lvalue Var 0x12a826c38 'node' 'struct rb_node *'
    | | `-ImplicitCastExpr 0x12a827358 <col:59, col:71> 'struct rb_node *' <IntegralToPointer>
    | |   `-CallExpr 0x12a827318 <col:59, col:71> 'int'
    | |     |-ImplicitCastExpr 0x12a827300 <col:59> 'int (*)()' <FunctionToPointerDecay>
    | |     | `-DeclRefExpr 0x12a827288 <col:59> 'int ()' Function 0x12a8271d0 'rb_next' 'int ()'
    | |     `-ImplicitCastExpr 0x12a827340 <col:67> 'struct rb_node *' <LValueToRValue>
    | |       `-DeclRefExpr 0x12a8272a8 <col:67> 'struct rb_node *' lvalue Var 0x12a826c38 'node' 'struct rb_node *'
    | `-CompoundStmt 0x12a8297b0 <col:74, line:20:2>
    |   `-IfStmt 0x12a829790 <line:11:3, line:19:3>
    |     |-BinaryOperator 0x12a829270 <line:11:7, line:12:23> 'int' contains-errors '!='
    |     | |-CXXDependentScopeMemberExpr 0x12a827568 <line:11:7, col:23> '<dependent type>' contains-errors lvalue ->num_stripes
    |     | | `-RecoveryExpr 0x12a827540 <col:7, col:11> '<dependent type>' contains-errors lvalue
    |     | |   `-DeclRefExpr 0x12a827508 <col:7> 'struct extent_map *' lvalue Var 0x12a826a38 'em' 'struct extent_map *'
    |     | `-CXXDependentScopeMemberExpr 0x12a829228 <line:12:7, col:23> '<dependent type>' contains-errors lvalue ->verified_stripes
    |     |   `-RecoveryExpr 0x12a829200 <col:7, col:11> '<dependent type>' contains-errors lvalue
    |     |     `-DeclRefExpr 0x12a8275b0 <col:7> 'struct extent_map *' lvalue Var 0x12a826a38 'em' 'struct extent_map *'
    |     `-CompoundStmt 0x12a829768 <col:41, line:19:3>
    |       |-CallExpr 0x12a8295c0 <line:13:4, line:16:34> '<dependent type>' contains-errors
    |       | |-DeclRefExpr 0x12a829370 <line:13:4> 'int ()' Function 0x12a8292b8 'btrfs_err' 'int ()'
    |       | |-DeclRefExpr 0x12a829390 <col:14> 'struct btrfs_fs_info *' lvalue ParmVar 0x12a80e248 'fs_info' 'struct btrfs_fs_info *'
    |       | |-StringLiteral 0x12a8293f0 <line:14:4> 'char[4]' lvalue "STR"
    |       | |-RecoveryExpr 0x12a829448 <line:15:7, col:11> '<dependent type>' contains-errors lvalue
    |       | | `-DeclRefExpr 0x12a829410 <col:7> 'struct extent_map *' lvalue Var 0x12a826a38 'em' 'struct extent_map *'
    |       | |-CXXDependentScopeMemberExpr 0x12a8294d0 <col:18, col:34> '<dependent type>' contains-errors lvalue ->verified_stripes
    |       | | `-RecoveryExpr 0x12a8294a8 <col:18, col:22> '<dependent type>' contains-errors lvalue
    |       | |   `-DeclRefExpr 0x12a829470 <col:18> 'struct extent_map *' lvalue Var 0x12a826a38 'em' 'struct extent_map *'
    |       | `-CXXDependentScopeMemberExpr 0x12a829578 <line:16:7, col:23> '<dependent type>' contains-errors lvalue ->num_stripes
    |       |   `-RecoveryExpr 0x12a829550 <col:7, col:11> '<dependent type>' contains-errors lvalue
    |       |     `-DeclRefExpr 0x12a829518 <col:7> 'struct extent_map *' lvalue Var 0x12a826a38 'em' 'struct extent_map *'
    |       |-BinaryOperator 0x12a8296e0 <line:17:4, col:11> 'int' contains-errors '='
    |       | |-DeclRefExpr 0x12a829608 <col:4> 'int' lvalue Var 0x12a826ce8 'ret' 'int'
    |       | `-UnaryOperator 0x12a8296c8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       |   `-ImplicitCastExpr 0x12a8296b0 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       |     `-RecoveryExpr 0x12a829690 <col:11> '<dependent type>' contains-errors lvalue
    |       `-GotoStmt 0x12a829750 <line:18:4, col:9> 'out' 0x12a829700
    |-LabelStmt 0x12a8299a0 <line:21:1, line:22:28> 'out'
    | `-CallExpr 0x12a829978 <col:2, col:28> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12a8298e0 <col:2> 'int ()' Function 0x12a829828 'read_unlock' 'int ()'
    |   `-UnaryOperator 0x12a829960 <col:14, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x12a829938 <col:15, col:24> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x12a829900 <col:15> 'struct extent_map_tree *' contains-errors lvalue Var 0x12a8267b8 'em_tree' 'struct extent_map_tree *'
    `-ReturnStmt 0x12a8299f8 <line:23:2, col:9>
      `-ImplicitCastExpr 0x12a8299e0 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x12a8299c0 <col:9> 'int' lvalue Var 0x12a826ce8 'ret' 'int'
