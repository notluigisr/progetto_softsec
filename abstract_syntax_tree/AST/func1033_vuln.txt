TranslationUnitDecl 0x12a855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12a8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12a855bd0 '__int128'
|-TypedefDecl 0x12a856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12a855bf0 'unsigned __int128'
|-TypedefDecl 0x12b00be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12b00bc00 'struct __NSConstantString_tag'
|   `-Record 0x12a856580 '__NSConstantString_tag'
|-TypedefDecl 0x12b00be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12a855d90 '__SVInt8_t'
|-TypedefDecl 0x12b00bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12a855db0 '__SVInt16_t'
|-TypedefDecl 0x12b00bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12a855dd0 '__SVInt32_t'
|-TypedefDecl 0x12b00bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12a855df0 '__SVInt64_t'
|-TypedefDecl 0x12b00c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12a855e10 '__SVUint8_t'
|-TypedefDecl 0x12b00c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12a855e30 '__SVUint16_t'
|-TypedefDecl 0x12b00c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12a855e50 '__SVUint32_t'
|-TypedefDecl 0x12b00c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12a855e70 '__SVUint64_t'
|-TypedefDecl 0x12b00c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12a855e90 '__SVFloat16_t'
|-TypedefDecl 0x12b00c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12a855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12b00c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12a855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12b00c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12a855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12b00c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12a855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12b00c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12a855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12b00c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12a855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12b00c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12a855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12b00c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12a855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12b00c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12a855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12b00c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12a855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12b00c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12a855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12b00c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12a856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12b00c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12a856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12b00c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12a856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12b00c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12a856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12b00c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12a856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12b00c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12a8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12b00c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12a8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12b00c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12a8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12b00c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12a856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12b00ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12a856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12b00cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12a856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12b00cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12a856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12b00cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12a856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12b00d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12a8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12b00d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12a8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12b00d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12a8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12b00d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12a856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12b00d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12a856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12b00d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12a856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12b00d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12a856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12b00d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12a856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12b00d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12a8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12b00d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12a8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12b00d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12a8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12b00d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12a856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12b00d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12a856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12b00d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12a856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12b00d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12a856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12b00da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12a856390 '__SVBool_t'
|-TypedefDecl 0x12b00da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12a8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12b00dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12a8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12b00db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12a8563f0 '__SVCount_t'
|-TypedefDecl 0x12b00dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12b00dbb0 'char *'
|   `-BuiltinType 0x12a8556b0 'char'
|-TypedefDecl 0x12b00dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12b00dbb0 'char *'
|   `-BuiltinType 0x12a8556b0 'char'
|-FunctionDecl 0x12b00de88 <dataset_diviso_filec/func1033_vuln.c:1:1, line:40:1> line:1:12 invalid nc_email 'int (int *, int *)' static
| |-ParmVarDecl 0x12b00dd28 <col:21, col:37> col:37 invalid eml 'int *'
| |-ParmVarDecl 0x12b00dda8 <col:42, col:58> col:58 invalid base 'int *'
| `-CompoundStmt 0x12b02b288 <line:2:1, line:40:1>
|   |-DeclStmt 0x12b00e080 <line:3:5, col:45>
|   | `-VarDecl 0x12b00df58 <col:5, col:41> col:17 used baseptr 'const char *' cinit
|   |   `-ImplicitCastExpr 0x12b00e068 <col:27, col:41> 'const char *' contains-errors <NoOp>
|   |     `-CStyleCastExpr 0x12b00e040 <col:27, col:41> 'char *' contains-errors <Dependent>
|   |       `-CXXDependentScopeMemberExpr 0x12b00dfe0 <col:35, col:41> '<dependent type>' contains-errors lvalue ->data
|   |         `-RecoveryExpr 0x12b00dfc0 <col:35> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x12b00e1d8 <line:4:5, col:43>
|   | `-VarDecl 0x12b00e0b0 <col:5, col:39> col:17 used emlptr 'const char *' cinit
|   |   `-ImplicitCastExpr 0x12b00e1c0 <col:26, col:39> 'const char *' contains-errors <NoOp>
|   |     `-CStyleCastExpr 0x12b00e198 <col:26, col:39> 'char *' contains-errors <Dependent>
|   |       `-CXXDependentScopeMemberExpr 0x12b00e138 <col:34, col:39> '<dependent type>' contains-errors lvalue ->data
|   |         `-RecoveryExpr 0x12b00e118 <col:34> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x12b0289c8 <line:6:5, col:46>
|   | `-VarDecl 0x12b00e208 <col:5, col:45> col:17 used baseat 'const char *' cinit
|   |   `-ImplicitCastExpr 0x12b0289b0 <col:26, col:45> 'const char *' contains-errors <NoOp>
|   |     `-CallExpr 0x12b028968 <col:26, col:45> 'char *' contains-errors
|   |       |-ImplicitCastExpr 0x12b028950 <col:26> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x12b0288b0 <col:26> 'char *(const char *, int)' Function 0x12b0286d0 'strchr' 'char *(const char *, int)'
|   |       |-ImplicitCastExpr 0x12b028998 <col:33> 'const char *' contains-errors <LValueToRValue>
|   |       | `-DeclRefExpr 0x12b0288d0 <col:33> 'const char *' contains-errors lvalue Var 0x12b00df58 'baseptr' 'const char *'
|   |       `-CharacterLiteral 0x12b0288f0 <col:42> 'int' 64
|   |-DeclStmt 0x12b028b48 <line:7:5, col:44>
|   | `-VarDecl 0x12b0289f8 <col:5, col:43> col:17 used emlat 'const char *' cinit
|   |   `-ImplicitCastExpr 0x12b028b30 <col:25, col:43> 'const char *' contains-errors <NoOp>
|   |     `-CallExpr 0x12b028ae8 <col:25, col:43> 'char *' contains-errors
|   |       |-ImplicitCastExpr 0x12b028ad0 <col:25> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x12b028a60 <col:25> 'char *(const char *, int)' Function 0x12b0286d0 'strchr' 'char *(const char *, int)'
|   |       |-ImplicitCastExpr 0x12b028b18 <col:32> 'const char *' contains-errors <LValueToRValue>
|   |       | `-DeclRefExpr 0x12b028a80 <col:32> 'const char *' contains-errors lvalue Var 0x12b00e0b0 'emlptr' 'const char *'
|   |       `-CharacterLiteral 0x12b028aa0 <col:40> 'int' 64
|   |-IfStmt 0x12b028bf8 <line:8:5, line:9:16>
|   | |-UnaryOperator 0x12b028b98 <line:8:9, col:10> 'int' contains-errors prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x12b028b80 <col:10> 'const char *' contains-errors <LValueToRValue>
|   | |   `-DeclRefExpr 0x12b028b60 <col:10> 'const char *' contains-errors lvalue Var 0x12b0289f8 'emlat' 'const char *'
|   | `-ReturnStmt 0x12b028be8 <line:9:9, col:16>
|   |   `-RecoveryExpr 0x12b028bc8 <col:16> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x12b029348 <line:11:5, line:18:5>
|   | |-BinaryOperator 0x12b028d40 <line:11:9, col:36> 'int' contains-errors '&&'
|   | | |-UnaryOperator 0x12b028c50 <col:9, col:10> 'int' contains-errors prefix '!' cannot overflow
|   | | | `-ImplicitCastExpr 0x12b028c38 <col:10> 'const char *' contains-errors <LValueToRValue>
|   | | |   `-DeclRefExpr 0x12b028c18 <col:10> 'const char *' contains-errors lvalue Var 0x12b00e208 'baseat' 'const char *'
|   | | `-ParenExpr 0x12b028d20 <col:20, col:36> 'int' contains-errors
|   | |   `-BinaryOperator 0x12b028d00 <col:21, col:33> 'int' contains-errors '=='
|   | |     |-ImplicitCastExpr 0x12b028ce8 <col:21, col:22> 'int' contains-errors <IntegralCast>
|   | |     | `-ImplicitCastExpr 0x12b028cd0 <col:21, col:22> 'char' contains-errors <LValueToRValue>
|   | |     |   `-UnaryOperator 0x12b028ca0 <col:21, col:22> 'const char' contains-errors lvalue prefix '*' cannot overflow
|   | |     |     `-ImplicitCastExpr 0x12b028c88 <col:22> 'const char *' contains-errors <LValueToRValue>
|   | |     |       `-DeclRefExpr 0x12b028c68 <col:22> 'const char *' contains-errors lvalue Var 0x12b00df58 'baseptr' 'const char *'
|   | |     `-CharacterLiteral 0x12b028cb8 <col:33> 'int' 46
|   | `-CompoundStmt 0x12b029328 <col:39, line:18:5>
|   |   |-IfStmt 0x12b0292c0 <line:12:9, line:16:9>
|   |   | |-BinaryOperator 0x12b028e30 <line:12:13, col:33> 'int' contains-errors '>'
|   |   | | |-CXXDependentScopeMemberExpr 0x12b028d80 <col:13, col:18> '<dependent type>' contains-errors lvalue ->length
|   |   | | | `-RecoveryExpr 0x12b028d60 <col:13> '<dependent type>' contains-errors lvalue
|   |   | | `-CXXDependentScopeMemberExpr 0x12b028de8 <col:27, col:33> '<dependent type>' contains-errors lvalue ->length
|   |   | |   `-RecoveryExpr 0x12b028dc8 <col:27> '<dependent type>' contains-errors lvalue
|   |   | `-CompoundStmt 0x12b0292a0 <col:41, line:16:9>
|   |   |   |-CompoundAssignOperator 0x12b028f60 <line:13:13, col:43> 'const char *' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |   |   | |-DeclRefExpr 0x12b028e50 <col:13> 'const char *' contains-errors lvalue Var 0x12b00e0b0 'emlptr' 'const char *'
|   |   |   | `-BinaryOperator 0x12b028f40 <col:23, col:43> '<dependent type>' contains-errors '-'
|   |   |   |   |-CXXDependentScopeMemberExpr 0x12b028e90 <col:23, col:28> '<dependent type>' contains-errors lvalue ->length
|   |   |   |   | `-RecoveryExpr 0x12b028e70 <col:23> '<dependent type>' contains-errors lvalue
|   |   |   |   `-CXXDependentScopeMemberExpr 0x12b028ef8 <col:37, col:43> '<dependent type>' contains-errors lvalue ->length
|   |   |   |     `-RecoveryExpr 0x12b028ed8 <col:37> '<dependent type>' contains-errors lvalue
|   |   |   `-IfStmt 0x12b029280 <line:14:13, line:15:24>
|   |   |     |-BinaryOperator 0x12b029218 <line:14:17, col:48> 'int' contains-errors '=='
|   |   |     | |-CallExpr 0x12b029198 <col:17, col:43> 'int' contains-errors
|   |   |     | | |-ImplicitCastExpr 0x12b029180 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |   |     | | | `-DeclRefExpr 0x12b0290f0 <col:17> 'int ()' Function 0x12b029038 'ia5casecmp' 'int ()'
|   |   |     | | |-ImplicitCastExpr 0x12b0291c8 <col:28> 'const char *' contains-errors <LValueToRValue>
|   |   |     | | | `-DeclRefExpr 0x12b029110 <col:28> 'const char *' contains-errors lvalue Var 0x12b00df58 'baseptr' 'const char *'
|   |   |     | | `-ImplicitCastExpr 0x12b0291e0 <col:37> 'const char *' contains-errors <LValueToRValue>
|   |   |     | |   `-DeclRefExpr 0x12b029130 <col:37> 'const char *' contains-errors lvalue Var 0x12b00e0b0 'emlptr' 'const char *'
|   |   |     | `-IntegerLiteral 0x12b0291f8 <col:48> 'int' 0
|   |   |     `-ReturnStmt 0x12b029270 <line:15:17, col:24>
|   |   |       `-RecoveryExpr 0x12b029250 <col:24> '<dependent type>' contains-errors lvalue
|   |   `-ReturnStmt 0x12b029318 <line:17:9, col:16>
|   |     `-RecoveryExpr 0x12b0292f8 <col:16> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x12b02b028 <line:22:5, line:32:5>
|   | |-ImplicitCastExpr 0x12b029388 <line:22:9> 'const char *' contains-errors <LValueToRValue>
|   | | `-DeclRefExpr 0x12b029368 <col:9> 'const char *' contains-errors lvalue Var 0x12b00e208 'baseat' 'const char *'
|   | `-CompoundStmt 0x12b02b008 <col:17, line:32:5>
|   |   |-IfStmt 0x12b02af30 <line:23:9, line:29:9>
|   |   | |-BinaryOperator 0x12b02a818 <line:23:13, col:23> 'int' contains-errors '!='
|   |   | | |-ImplicitCastExpr 0x12b0293e0 <col:13> 'const char *' contains-errors <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x12b0293a0 <col:13> 'const char *' contains-errors lvalue Var 0x12b00e208 'baseat' 'const char *'
|   |   | | `-ImplicitCastExpr 0x12b02a800 <col:23> 'const char *' contains-errors <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x12b0293c0 <col:23> 'const char *' contains-errors lvalue Var 0x12b00df58 'baseptr' 'const char *'
|   |   | `-CompoundStmt 0x12b02af10 <col:32, line:29:9>
|   |   |   |-IfStmt 0x12b02aa00 <line:24:13, line:25:24>
|   |   |   | |-BinaryOperator 0x12b02a998 <line:24:17, col:54> 'int' contains-errors '!='
|   |   |   | | |-ParenExpr 0x12b02a8c8 <col:17, col:34> 'long' contains-errors
|   |   |   | | | `-BinaryOperator 0x12b02a8a8 <col:18, col:27> 'long' contains-errors '-'
|   |   |   | | |   |-ImplicitCastExpr 0x12b02a878 <col:18> 'const char *' contains-errors <LValueToRValue>
|   |   |   | | |   | `-DeclRefExpr 0x12b02a838 <col:18> 'const char *' contains-errors lvalue Var 0x12b00e208 'baseat' 'const char *'
|   |   |   | | |   `-ImplicitCastExpr 0x12b02a890 <col:27> 'const char *' contains-errors <LValueToRValue>
|   |   |   | | |     `-DeclRefExpr 0x12b02a858 <col:27> 'const char *' contains-errors lvalue Var 0x12b00df58 'baseptr' 'const char *'
|   |   |   | | `-ParenExpr 0x12b02a978 <col:39, col:54> 'long' contains-errors
|   |   |   | |   `-BinaryOperator 0x12b02a958 <col:40, col:48> 'long' contains-errors '-'
|   |   |   | |     |-ImplicitCastExpr 0x12b02a928 <col:40> 'const char *' contains-errors <LValueToRValue>
|   |   |   | |     | `-DeclRefExpr 0x12b02a8e8 <col:40> 'const char *' contains-errors lvalue Var 0x12b0289f8 'emlat' 'const char *'
|   |   |   | |     `-ImplicitCastExpr 0x12b02a940 <col:48> 'const char *' contains-errors <LValueToRValue>
|   |   |   | |       `-DeclRefExpr 0x12b02a908 <col:48> 'const char *' contains-errors lvalue Var 0x12b00e0b0 'emlptr' 'const char *'
|   |   |   | `-ReturnStmt 0x12b02a9f0 <line:25:17, col:24>
|   |   |   |   `-RecoveryExpr 0x12b02a9d0 <col:24> '<dependent type>' contains-errors lvalue
|   |   |   `-IfStmt 0x12b02aef0 <line:27:13, line:28:24>
|   |   |     |-CallExpr 0x12b02ae28 <line:27:17, col:56> 'int' contains-errors
|   |   |     | |-ImplicitCastExpr 0x12b02ae10 <col:17> 'int (*)(const char *, const char *, unsigned long)' <FunctionToPointerDecay>
|   |   |     | | `-DeclRefExpr 0x12b02acb8 <col:17> 'int (const char *, const char *, unsigned long)' Function 0x12b02aa68 'strncmp' 'int (const char *, const char *, unsigned long)'
|   |   |     | |-ImplicitCastExpr 0x12b02ae60 <col:25> 'const char *' contains-errors <LValueToRValue>
|   |   |     | | `-DeclRefExpr 0x12b02acd8 <col:25> 'const char *' contains-errors lvalue Var 0x12b00df58 'baseptr' 'const char *'
|   |   |     | |-ImplicitCastExpr 0x12b02ae78 <col:34> 'const char *' contains-errors <LValueToRValue>
|   |   |     | | `-DeclRefExpr 0x12b02acf8 <col:34> 'const char *' contains-errors lvalue Var 0x12b00e0b0 'emlptr' 'const char *'
|   |   |     | `-ImplicitCastExpr 0x12b02ae90 <col:42, col:50> 'unsigned long' contains-errors <IntegralCast>
|   |   |     |   `-BinaryOperator 0x12b02ad88 <col:42, col:50> 'long' contains-errors '-'
|   |   |     |     |-ImplicitCastExpr 0x12b02ad58 <col:42> 'const char *' contains-errors <LValueToRValue>
|   |   |     |     | `-DeclRefExpr 0x12b02ad18 <col:42> 'const char *' contains-errors lvalue Var 0x12b0289f8 'emlat' 'const char *'
|   |   |     |     `-ImplicitCastExpr 0x12b02ad70 <col:50> 'const char *' contains-errors <LValueToRValue>
|   |   |     |       `-DeclRefExpr 0x12b02ad38 <col:50> 'const char *' contains-errors lvalue Var 0x12b00e0b0 'emlptr' 'const char *'
|   |   |     `-ReturnStmt 0x12b02aee0 <line:28:17, col:24>
|   |   |       `-RecoveryExpr 0x12b02aec0 <col:24> '<dependent type>' contains-errors lvalue
|   |   `-BinaryOperator 0x12b02afe8 <line:31:9, col:28> 'const char *' contains-errors '='
|   |     |-DeclRefExpr 0x12b02af50 <col:9> 'const char *' contains-errors lvalue Var 0x12b00df58 'baseptr' 'const char *'
|   |     `-BinaryOperator 0x12b02afc8 <col:19, col:28> 'const char *' contains-errors '+'
|   |       |-ImplicitCastExpr 0x12b02afb0 <col:19> 'const char *' contains-errors <LValueToRValue>
|   |       | `-DeclRefExpr 0x12b02af70 <col:19> 'const char *' contains-errors lvalue Var 0x12b00e208 'baseat' 'const char *'
|   |       `-IntegerLiteral 0x12b02af90 <col:28> 'int' 1
|   |-BinaryOperator 0x12b02b0e0 <line:33:5, col:22> 'const char *' contains-errors '='
|   | |-DeclRefExpr 0x12b02b048 <col:5> 'const char *' contains-errors lvalue Var 0x12b00e0b0 'emlptr' 'const char *'
|   | `-BinaryOperator 0x12b02b0c0 <col:14, col:22> 'const char *' contains-errors '+'
|   |   |-ImplicitCastExpr 0x12b02b0a8 <col:14> 'const char *' contains-errors <LValueToRValue>
|   |   | `-DeclRefExpr 0x12b02b068 <col:14> 'const char *' contains-errors lvalue Var 0x12b0289f8 'emlat' 'const char *'
|   |   `-IntegerLiteral 0x12b02b088 <col:22> 'int' 1
|   |-IfStmt 0x12b02b220 <line:35:5, line:36:16>
|   | |-CallExpr 0x12b02b178 <line:35:9, col:35> 'int' contains-errors
|   | | |-ImplicitCastExpr 0x12b02b160 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | | `-DeclRefExpr 0x12b02b100 <col:9> 'int ()' Function 0x12b029038 'ia5casecmp' 'int ()'
|   | | |-ImplicitCastExpr 0x12b02b1a8 <col:20> 'const char *' contains-errors <LValueToRValue>
|   | | | `-DeclRefExpr 0x12b02b120 <col:20> 'const char *' contains-errors lvalue Var 0x12b00df58 'baseptr' 'const char *'
|   | | `-ImplicitCastExpr 0x12b02b1c0 <col:29> 'const char *' contains-errors <LValueToRValue>
|   | |   `-DeclRefExpr 0x12b02b140 <col:29> 'const char *' contains-errors lvalue Var 0x12b00e0b0 'emlptr' 'const char *'
|   | `-ReturnStmt 0x12b02b210 <line:36:9, col:16>
|   |   `-RecoveryExpr 0x12b02b1f0 <col:16> '<dependent type>' contains-errors lvalue
|   `-ReturnStmt 0x12b02b278 <line:38:5, col:12>
|     `-RecoveryExpr 0x12b02b258 <col:12> '<dependent type>' contains-errors lvalue
|-FunctionDecl 0x12b0286d0 <line:6:26> col:26 implicit used strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x12b0287d0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x12b028838 <<invalid sloc>> <invalid sloc> 'int'
| `-BuiltinAttr 0x12b028778 <<invalid sloc>> Implicit 893
`-FunctionDecl 0x12b02aa68 <line:27:17> col:17 implicit used strncmp 'int (const char *, const char *, unsigned long)' extern
  |-ParmVarDecl 0x12b02ab68 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x12b02abd0 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x12b02ac38 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x12b02ab10 <<invalid sloc>> Implicit 888
