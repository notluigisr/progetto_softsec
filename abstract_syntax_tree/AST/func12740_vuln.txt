TranslationUnitDecl 0x128850208 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1288510b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1288507d0 '__int128'
|-TypedefDecl 0x128851128 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1288507f0 'unsigned __int128'
|-TypedefDecl 0x12a80d630 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12a80d400 'struct __NSConstantString_tag'
|   `-Record 0x128851180 '__NSConstantString_tag'
|-TypedefDecl 0x12a80d698 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x128850990 '__SVInt8_t'
|-TypedefDecl 0x12a80d700 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x1288509b0 '__SVInt16_t'
|-TypedefDecl 0x12a80d768 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x1288509d0 '__SVInt32_t'
|-TypedefDecl 0x12a80d7d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x1288509f0 '__SVInt64_t'
|-TypedefDecl 0x12a80d838 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x128850a10 '__SVUint8_t'
|-TypedefDecl 0x12a80d8a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x128850a30 '__SVUint16_t'
|-TypedefDecl 0x12a80d908 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x128850a50 '__SVUint32_t'
|-TypedefDecl 0x12a80d970 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x128850a70 '__SVUint64_t'
|-TypedefDecl 0x12a80d9d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x128850a90 '__SVFloat16_t'
|-TypedefDecl 0x12a80da40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x128850ab0 '__SVFloat32_t'
|-TypedefDecl 0x12a80daa8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x128850ad0 '__SVFloat64_t'
|-TypedefDecl 0x12a80db10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x128850af0 '__SVBfloat16_t'
|-TypedefDecl 0x12a80db78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x128850b10 '__clang_svint8x2_t'
|-TypedefDecl 0x12a80dbe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x128850b30 '__clang_svint16x2_t'
|-TypedefDecl 0x12a80dc48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x128850b50 '__clang_svint32x2_t'
|-TypedefDecl 0x12a80dcb0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x128850b70 '__clang_svint64x2_t'
|-TypedefDecl 0x12a80dd18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x128850b90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12a80dd80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x128850bb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12a80dde8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x128850bd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12a80de50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x128850bf0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12a80deb8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x128850c10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12a80df20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x128850c30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12a80df88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x128850c50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12a80dff0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x128850c70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12a80e058 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x128850c90 '__clang_svint8x3_t'
|-TypedefDecl 0x12a80e0c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x128850cb0 '__clang_svint16x3_t'
|-TypedefDecl 0x12a80e128 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x128850cd0 '__clang_svint32x3_t'
|-TypedefDecl 0x12a80e190 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x128850cf0 '__clang_svint64x3_t'
|-TypedefDecl 0x12a80e1f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x128850d10 '__clang_svuint8x3_t'
|-TypedefDecl 0x12a80e260 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x128850d30 '__clang_svuint16x3_t'
|-TypedefDecl 0x12a80e2c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x128850d50 '__clang_svuint32x3_t'
|-TypedefDecl 0x12a80e330 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x128850d70 '__clang_svuint64x3_t'
|-TypedefDecl 0x12a80e398 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x128850d90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12a80ec00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x128850db0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12a80ec68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x128850dd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12a80ecd0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x128850df0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12a80ed38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x128850e10 '__clang_svint8x4_t'
|-TypedefDecl 0x12a80eda0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x128850e30 '__clang_svint16x4_t'
|-TypedefDecl 0x12a80ee08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x128850e50 '__clang_svint32x4_t'
|-TypedefDecl 0x12a80ee70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x128850e70 '__clang_svint64x4_t'
|-TypedefDecl 0x12a80eed8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x128850e90 '__clang_svuint8x4_t'
|-TypedefDecl 0x12a80ef40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x128850eb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12a80efa8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x128850ed0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12a80f010 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x128850ef0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12a80f078 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x128850f10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12a80f0e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x128850f30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12a80f148 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x128850f50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12a80f1b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x128850f70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12a80f218 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x128850f90 '__SVBool_t'
|-TypedefDecl 0x12a80f280 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x128850fb0 '__clang_svboolx2_t'
|-TypedefDecl 0x12a80f2e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x128850fd0 '__clang_svboolx4_t'
|-TypedefDecl 0x12a80f350 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x128850ff0 '__SVCount_t'
|-TypedefDecl 0x12a80f3f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12a80f3b0 'char *'
|   `-BuiltinType 0x1288502b0 'char'
|-TypedefDecl 0x12a80f468 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12a80f3b0 'char *'
|   `-BuiltinType 0x1288502b0 'char'
`-FunctionDecl 0x12a80f718 <dataset_diviso_filec/func12740_vuln.c:1:1, line:17:1> line:1:14 invalid print_value 'char *(int *, int, int)' static
  |-ParmVarDecl 0x12a80f528 <col:27, col:34> col:34 invalid item 'int *'
  |-ParmVarDecl 0x12a80f5a8 <col:40, col:44> col:44 used depth 'int'
  |-ParmVarDecl 0x12a80f628 <col:51, col:55> col:55 used fmt 'int'
  `-CompoundStmt 0x12a82a800 <line:2:1, line:17:1>
    |-DeclStmt 0x12a80f890 <line:3:2, col:15>
    | `-VarDecl 0x12a80f7f0 <col:2, col:14> col:8 used out 'char *' cinit
    |   `-ImplicitCastExpr 0x12a80f878 <col:14> 'char *' <NullToPointer>
    |     `-IntegerLiteral 0x12a80f858 <col:14> 'int' 0
    |-IfStmt 0x12a80f940 <line:5:2, line:6:10>
    | |-UnaryOperator 0x12a80f8e0 <line:5:7, col:9> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x12a80f8c8 <col:9> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x12a80f8a8 <col:9> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x12a80f930 <line:6:3, col:10>
    |   `-ImplicitCastExpr 0x12a80f918 <col:10> 'char *' <NullToPointer>
    |     `-IntegerLiteral 0x12a80f8f8 <col:10> 'int' 0
    |-SwitchStmt 0x12a80fa28 <line:7:2, line:15:2>
    | |-BinaryOperator 0x12a80fa08 <line:7:11, col:28> '<dependent type>' contains-errors '&'
    | | |-ParenExpr 0x12a80f9c8 <col:11, col:24> '<dependent type>' contains-errors lvalue
    | | | `-CXXDependentScopeMemberExpr 0x12a80f980 <col:13, col:19> '<dependent type>' contains-errors lvalue ->type
    | | |   `-RecoveryExpr 0x12a80f960 <col:13> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x12a80f9e8 <col:28> 'int' 255
    | `-CompoundStmt 0x12a829f38 <col:34, line:15:2>
    |   |-BinaryOperator 0x12a829520 <line:8:22, col:48> 'char *' '='
    |   | |-DeclRefExpr 0x12a80fa68 <col:22> 'char *' lvalue Var 0x12a80f7f0 'out' 'char *'
    |   | `-ImplicitCastExpr 0x12a8290e8 <col:28, col:48> 'char *' <IntegralToPointer>
    |   |   `-CallExpr 0x12a8290a8 <col:28, col:48> 'int'
    |   |     |-ImplicitCastExpr 0x12a829090 <col:28> 'int (*)()' <FunctionToPointerDecay>
    |   |     | `-DeclRefExpr 0x12a80fbe0 <col:28> 'int ()' Function 0x12a80fb28 'cJSON_strdup' 'int ()'
    |   |     `-ImplicitCastExpr 0x12a8290d0 <col:42> 'char *' <ArrayToPointerDecay>
    |   |       `-StringLiteral 0x12a829040 <col:42> 'char[4]' lvalue "STR"
    |   |-BreakStmt 0x12a829540 <col:51>
    |   |-BinaryOperator 0x12a829630 <line:9:22, col:48> 'char *' '='
    |   | |-DeclRefExpr 0x12a829560 <col:22> 'char *' lvalue Var 0x12a80f7f0 'out' 'char *'
    |   | `-ImplicitCastExpr 0x12a829618 <col:28, col:48> 'char *' <IntegralToPointer>
    |   |   `-CallExpr 0x12a8295d8 <col:28, col:48> 'int'
    |   |     |-ImplicitCastExpr 0x12a8295c0 <col:28> 'int (*)()' <FunctionToPointerDecay>
    |   |     | `-DeclRefExpr 0x12a829580 <col:28> 'int ()' Function 0x12a80fb28 'cJSON_strdup' 'int ()'
    |   |     `-ImplicitCastExpr 0x12a829600 <col:42> 'char *' <ArrayToPointerDecay>
    |   |       `-StringLiteral 0x12a8295a0 <col:42> 'char[4]' lvalue "STR"
    |   |-BreakStmt 0x12a829650 <col:51>
    |   |-CaseStmt 0x12a829690 <line:10:3, col:48>
    |   | |-DeclRefExpr 0x12a829670 <col:8> 'int ()' Function 0x12a80fb28 'cJSON_strdup' 'int ()'
    |   | `-BinaryOperator 0x12a829788 <col:22, col:48> 'char *' '='
    |   |   |-DeclRefExpr 0x12a8296b8 <col:22> 'char *' lvalue Var 0x12a80f7f0 'out' 'char *'
    |   |   `-ImplicitCastExpr 0x12a829770 <col:28, col:48> 'char *' <IntegralToPointer>
    |   |     `-CallExpr 0x12a829730 <col:28, col:48> 'int'
    |   |       |-ImplicitCastExpr 0x12a829718 <col:28> 'int (*)()' <FunctionToPointerDecay>
    |   |       | `-DeclRefExpr 0x12a8296d8 <col:28> 'int ()' Function 0x12a80fb28 'cJSON_strdup' 'int ()'
    |   |       `-ImplicitCastExpr 0x12a829758 <col:42> 'char *' <ArrayToPointerDecay>
    |   |         `-StringLiteral 0x12a8296f8 <col:42> 'char[4]' lvalue "STR"
    |   |-BreakStmt 0x12a8297a8 <col:51>
    |   |-BinaryOperator 0x12a829930 <line:11:22, col:47> 'char *' contains-errors '='
    |   | |-DeclRefExpr 0x12a8297c8 <col:22> 'char *' lvalue Var 0x12a80f7f0 'out' 'char *'
    |   | `-CallExpr 0x12a829908 <col:28, col:47> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x12a8298c8 <col:28> 'int ()' Function 0x12a829810 'print_number' 'int ()'
    |   |   `-RecoveryExpr 0x12a8298e8 <col:42> '<dependent type>' contains-errors lvalue
    |   |-BreakStmt 0x12a829950 <col:50>
    |   |-CaseStmt 0x12a829990 <line:12:3, col:47>
    |   | |-DeclRefExpr 0x12a829970 <col:8> 'int ()' Function 0x12a80fb28 'cJSON_strdup' 'int ()'
    |   | `-BinaryOperator 0x12a829b20 <col:22, col:47> 'char *' contains-errors '='
    |   |   |-DeclRefExpr 0x12a8299b8 <col:22> 'char *' lvalue Var 0x12a80f7f0 'out' 'char *'
    |   |   `-CallExpr 0x12a829af8 <col:28, col:47> '<dependent type>' contains-errors
    |   |     |-DeclRefExpr 0x12a829ab8 <col:28> 'int ()' Function 0x12a829a00 'print_string' 'int ()'
    |   |     `-RecoveryExpr 0x12a829ad8 <col:42> '<dependent type>' contains-errors lvalue
    |   |-BreakStmt 0x12a829b40 <col:50>
    |   |-BinaryOperator 0x12a829d18 <line:13:22, col:58> 'char *' contains-errors '='
    |   | |-DeclRefExpr 0x12a829b60 <col:22> 'char *' lvalue Var 0x12a80f7f0 'out' 'char *'
    |   | `-CallExpr 0x12a829ce0 <col:28, col:58> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x12a829c60 <col:28> 'int ()' Function 0x12a829ba8 'print_array' 'int ()'
    |   |   |-RecoveryExpr 0x12a829c80 <col:41> '<dependent type>' contains-errors lvalue
    |   |   |-DeclRefExpr 0x12a829ca0 <col:47> 'int' lvalue ParmVar 0x12a80f5a8 'depth' 'int'
    |   |   `-DeclRefExpr 0x12a829cc0 <col:54> 'int' lvalue ParmVar 0x12a80f628 'fmt' 'int'
    |   |-BreakStmt 0x12a829d38 <col:61>
    |   |-BinaryOperator 0x12a829f10 <line:14:22, col:59> 'char *' contains-errors '='
    |   | |-DeclRefExpr 0x12a829d58 <col:22> 'char *' lvalue Var 0x12a80f7f0 'out' 'char *'
    |   | `-CallExpr 0x12a829ed8 <col:28, col:59> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x12a829e58 <col:28> 'int ()' Function 0x12a829da0 'print_object' 'int ()'
    |   |   |-RecoveryExpr 0x12a829e78 <col:42> '<dependent type>' contains-errors lvalue
    |   |   |-DeclRefExpr 0x12a829e98 <col:48> 'int' lvalue ParmVar 0x12a80f5a8 'depth' 'int'
    |   |   `-DeclRefExpr 0x12a829eb8 <col:55> 'int' lvalue ParmVar 0x12a80f628 'fmt' 'int'
    |   `-BreakStmt 0x12a829f30 <col:62>
    `-ReturnStmt 0x12a829ff0 <line:16:2, col:9>
      `-ImplicitCastExpr 0x12a829fd8 <col:9> 'char *' <LValueToRValue>
        `-DeclRefExpr 0x12a829fb8 <col:9> 'char *' lvalue Var 0x12a80f7f0 'out' 'char *'
