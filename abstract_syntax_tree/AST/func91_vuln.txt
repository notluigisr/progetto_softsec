TranslationUnitDecl 0x128031408 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1280322b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1280319d0 '__int128'
|-TypedefDecl 0x128032328 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1280319f0 'unsigned __int128'
|-TypedefDecl 0x128102830 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x128102600 'struct __NSConstantString_tag'
|   `-Record 0x128032380 '__NSConstantString_tag'
|-TypedefDecl 0x128102898 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x128031b90 '__SVInt8_t'
|-TypedefDecl 0x128102900 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x128031bb0 '__SVInt16_t'
|-TypedefDecl 0x128102968 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x128031bd0 '__SVInt32_t'
|-TypedefDecl 0x1281029d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x128031bf0 '__SVInt64_t'
|-TypedefDecl 0x128102a38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x128031c10 '__SVUint8_t'
|-TypedefDecl 0x128102aa0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x128031c30 '__SVUint16_t'
|-TypedefDecl 0x128102b08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x128031c50 '__SVUint32_t'
|-TypedefDecl 0x128102b70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x128031c70 '__SVUint64_t'
|-TypedefDecl 0x128102bd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x128031c90 '__SVFloat16_t'
|-TypedefDecl 0x128102c40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x128031cb0 '__SVFloat32_t'
|-TypedefDecl 0x128102ca8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x128031cd0 '__SVFloat64_t'
|-TypedefDecl 0x128102d10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x128031cf0 '__SVBfloat16_t'
|-TypedefDecl 0x128102d78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x128031d10 '__clang_svint8x2_t'
|-TypedefDecl 0x128102de0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x128031d30 '__clang_svint16x2_t'
|-TypedefDecl 0x128102e48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x128031d50 '__clang_svint32x2_t'
|-TypedefDecl 0x128102eb0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x128031d70 '__clang_svint64x2_t'
|-TypedefDecl 0x128102f18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x128031d90 '__clang_svuint8x2_t'
|-TypedefDecl 0x128102f80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x128031db0 '__clang_svuint16x2_t'
|-TypedefDecl 0x128102fe8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x128031dd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x128103050 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x128031df0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1281030b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x128031e10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x128103120 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x128031e30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x128103188 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x128031e50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1281031f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x128031e70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x128103258 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x128031e90 '__clang_svint8x3_t'
|-TypedefDecl 0x1281032c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x128031eb0 '__clang_svint16x3_t'
|-TypedefDecl 0x128103328 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x128031ed0 '__clang_svint32x3_t'
|-TypedefDecl 0x128103390 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x128031ef0 '__clang_svint64x3_t'
|-TypedefDecl 0x1281033f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x128031f10 '__clang_svuint8x3_t'
|-TypedefDecl 0x128103460 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x128031f30 '__clang_svuint16x3_t'
|-TypedefDecl 0x1281034c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x128031f50 '__clang_svuint32x3_t'
|-TypedefDecl 0x128103530 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x128031f70 '__clang_svuint64x3_t'
|-TypedefDecl 0x128103598 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x128031f90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x128103e00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x128031fb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x128103e68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x128031fd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x128103ed0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x128031ff0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x128103f38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x128032010 '__clang_svint8x4_t'
|-TypedefDecl 0x128103fa0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x128032030 '__clang_svint16x4_t'
|-TypedefDecl 0x128104008 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x128032050 '__clang_svint32x4_t'
|-TypedefDecl 0x128104070 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x128032070 '__clang_svint64x4_t'
|-TypedefDecl 0x1281040d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x128032090 '__clang_svuint8x4_t'
|-TypedefDecl 0x128104140 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1280320b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1281041a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1280320d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x128104210 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1280320f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x128104278 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x128032110 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1281042e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x128032130 '__clang_svfloat32x4_t'
|-TypedefDecl 0x128104348 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x128032150 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1281043b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x128032170 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x128104418 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x128032190 '__SVBool_t'
|-TypedefDecl 0x128104480 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1280321b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1281044e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1280321d0 '__clang_svboolx4_t'
|-TypedefDecl 0x128104550 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1280321f0 '__SVCount_t'
|-TypedefDecl 0x1281045f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1281045b0 'char *'
|   `-BuiltinType 0x1280314b0 'char'
|-TypedefDecl 0x128104668 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1281045b0 'char *'
|   `-BuiltinType 0x1280314b0 'char'
|-RecordDecl 0x1281046c0 <dataset_diviso_filec/func91_vuln.c:1:8, col:15> col:15 struct mount
`-FunctionDecl 0x11f81d268 <col:1, line:68:1> line:1:22 clone_mnt 'struct mount *(struct mount *, struct dentry *, int)' static
  |-ParmVarDecl 0x128104818 <col:32, col:46> col:46 used old 'struct mount *'
  |-ParmVarDecl 0x11f81d028 <col:51, col:66> col:66 used root 'struct dentry *'
  |-ParmVarDecl 0x11f81d0a8 <line:2:6, col:10> col:10 used flag 'int'
  `-CompoundStmt 0x128108760 <line:3:1, line:68:1>
    |-DeclStmt 0x11f81d600 <line:4:2, col:42>
    | |-RecordDecl 0x11f81d370 <col:2, col:9> col:9 struct super_block
    | `-VarDecl 0x11f81d4d8 <col:2, col:36> col:22 used sb 'struct super_block *' cinit
    |   `-CXXDependentScopeMemberExpr 0x11f81d5a0 <col:27, col:36> '<dependent type>' contains-errors lvalue .mnt_sb
    |     `-RecoveryExpr 0x11f81d578 <col:27, col:32> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x11f81d540 <col:27> 'struct mount *' lvalue ParmVar 0x128104818 'old' 'struct mount *'
    |-DeclStmt 0x11f81d6a8 <line:5:2, col:19>
    | `-VarDecl 0x11f81d640 <col:2, col:16> col:16 used mnt 'struct mount *'
    |-DeclStmt 0x11f81d740 <line:6:2, col:9>
    | `-VarDecl 0x11f81d6d8 <col:2, col:6> col:6 used err 'int'
    |-BinaryOperator 0x11f81d948 <line:8:2, col:37> 'struct mount *' contains-errors '='
    | |-DeclRefExpr 0x11f81d758 <col:2> 'struct mount *' lvalue Var 0x11f81d640 'mnt' 'struct mount *'
    | `-CallExpr 0x11f81d920 <col:8, col:37> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x11f81d8a0 <col:8> 'int ()' Function 0x11f81d7e8 'alloc_vfsmnt' 'int ()'
    |   `-RecoveryExpr 0x11f81d8f8 <col:21, col:26> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x11f81d8c0 <col:21> 'struct mount *' lvalue ParmVar 0x128104818 'old' 'struct mount *'
    |-IfStmt 0x11f81dbb0 <line:9:2, line:10:25>
    | |-UnaryOperator 0x11f81d9a0 <line:9:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x11f81d988 <col:7> 'struct mount *' <LValueToRValue>
    | |   `-DeclRefExpr 0x11f81d968 <col:7> 'struct mount *' lvalue Var 0x11f81d640 'mnt' 'struct mount *'
    | `-ReturnStmt 0x11f81dba0 <line:10:3, col:25>
    |   `-CallExpr 0x11f81db78 <col:10, col:25> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x11f81da98 <col:10> 'int ()' Function 0x11f81d9e0 'ERR_PTR' 'int ()'
    |     `-UnaryOperator 0x11f81db60 <col:18, col:19> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       `-ImplicitCastExpr 0x11f81db48 <col:19> '<dependent type>' contains-errors <LValueToRValue>
    |         `-RecoveryExpr 0x11f81db28 <col:19> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x11f81de18 <line:12:2, line:15:28> has_else
    | |-RecoveryExpr 0x11f81dc78 <line:12:6, col:56> '_Bool' contains-errors
    | |-BinaryOperator 0x11f81dd18 <line:13:3, col:23> '<dependent type>' contains-errors '='
    | | |-RecoveryExpr 0x11f81dcd0 <col:3, col:8> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x11f81dc98 <col:3> 'struct mount *' lvalue Var 0x11f81d640 'mnt' 'struct mount *'
    | | `-IntegerLiteral 0x11f81dcf8 <col:23> 'int' 0
    | `-BinaryOperator 0x11f81ddf8 <line:15:3, col:28> '<dependent type>' contains-errors '='
    |   |-RecoveryExpr 0x11f81dd70 <col:3, col:8> '<dependent type>' contains-errors lvalue
    |   | `-DeclRefExpr 0x11f81dd38 <col:3> 'struct mount *' lvalue Var 0x11f81d640 'mnt' 'struct mount *'
    |   `-RecoveryExpr 0x11f81ddd0 <col:23, col:28> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x11f81dd98 <col:23> 'struct mount *' lvalue ParmVar 0x128104818 'old' 'struct mount *'
    |-IfStmt 0x11f830a88 <line:17:2, line:21:2>
    | |-RecoveryExpr 0x11f81df30 <line:17:6, col:39> '_Bool' contains-errors
    | `-CompoundStmt 0x11f830a68 <col:53, line:21:2>
    |   |-BinaryOperator 0x11f830988 <line:18:3, col:31> 'int' '='
    |   | |-DeclRefExpr 0x11f81df50 <col:3> 'int' lvalue Var 0x11f81d6d8 'err' 'int'
    |   | `-CallExpr 0x11f830948 <col:9, col:31> 'int'
    |   |   |-ImplicitCastExpr 0x11f830930 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   |   | `-DeclRefExpr 0x11f8308b8 <col:9> 'int ()' Function 0x11f830800 'mnt_alloc_group_id' 'int ()'
    |   |   `-ImplicitCastExpr 0x11f830970 <col:28> 'struct mount *' <LValueToRValue>
    |   |     `-DeclRefExpr 0x11f8308d8 <col:28> 'struct mount *' lvalue Var 0x11f81d640 'mnt' 'struct mount *'
    |   `-IfStmt 0x11f830a48 <line:19:3, line:20:9>
    |     |-ImplicitCastExpr 0x11f8309c8 <line:19:7> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x11f8309a8 <col:7> 'int' lvalue Var 0x11f81d6d8 'err' 'int'
    |     `-GotoStmt 0x11f830a30 <line:20:4, col:9> 'out_free' 0x11f8309e0
    |-CallExpr 0x11f831210 <line:32:2, col:26> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x11f831178 <col:2> 'int ()' Function 0x11f8310c0 'atomic_inc' 'int ()'
    | `-UnaryOperator 0x11f8311f8 <col:13, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x11f8311d0 <col:14, col:18> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x11f831198 <col:14> 'struct super_block *' contains-errors lvalue Var 0x11f81d4d8 'sb' 'struct super_block *'
    |-BinaryOperator 0x11f831300 <line:33:2, col:20> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x11f831298 <col:2, col:11> '<dependent type>' contains-errors lvalue .mnt_sb
    | | `-RecoveryExpr 0x11f831270 <col:2, col:7> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x11f831238 <col:2> 'struct mount *' lvalue Var 0x11f81d640 'mnt' 'struct mount *'
    | `-DeclRefExpr 0x11f8312e0 <col:20> 'struct super_block *' contains-errors lvalue Var 0x11f81d4d8 'sb' 'struct super_block *'
    |-BinaryOperator 0x11f831540 <line:34:2, col:31> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x11f831380 <col:2, col:11> '<dependent type>' contains-errors lvalue .mnt_root
    | | `-RecoveryExpr 0x11f831358 <col:2, col:7> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x11f831320 <col:2> 'struct mount *' lvalue Var 0x11f81d640 'mnt' 'struct mount *'
    | `-CallExpr 0x11f831500 <col:22, col:31> 'int'
    |   |-ImplicitCastExpr 0x11f8314e8 <col:22> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x11f8314a8 <col:22> 'int ()' Function 0x11f8313f0 'dget' 'int ()'
    |   `-ImplicitCastExpr 0x11f831528 <col:27> 'struct dentry *' <LValueToRValue>
    |     `-DeclRefExpr 0x11f8314c8 <col:27> 'struct dentry *' lvalue ParmVar 0x11f81d028 'root' 'struct dentry *'
    |-BinaryOperator 0x11f831668 <line:35:2, col:33> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x11f831598 <col:2, col:7> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x11f831560 <col:2> 'struct mount *' lvalue Var 0x11f81d640 'mnt' 'struct mount *'
    | `-CXXDependentScopeMemberExpr 0x11f831620 <col:24, col:33> '<dependent type>' contains-errors lvalue .mnt_root
    |   `-RecoveryExpr 0x11f8315f8 <col:24, col:29> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x11f8315c0 <col:24> 'struct mount *' lvalue Var 0x11f81d640 'mnt' 'struct mount *'
    |-BinaryOperator 0x11f831708 <line:36:2, col:20> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x11f8316c0 <col:2, col:7> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x11f831688 <col:2> 'struct mount *' lvalue Var 0x11f81d640 'mnt' 'struct mount *'
    | `-DeclRefExpr 0x11f8316e8 <col:20> 'struct mount *' lvalue Var 0x11f81d640 'mnt' 'struct mount *'
    |-CallExpr 0x128106e48 <line:37:2, col:18> 'int'
    | `-ImplicitCastExpr 0x128106e30 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x128106e10 <col:2> 'int ()' Function 0x11f831750 'lock_mount_hash' 'int ()'
    |-CallExpr 0x128107058 <line:38:2, col:49> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x128106f48 <col:2> 'int ()' Function 0x128106e90 'list_add_tail' 'int ()'
    | |-UnaryOperator 0x128106fc8 <col:16, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-RecoveryExpr 0x128106fa0 <col:17, col:22> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x128106f68 <col:17> 'struct mount *' lvalue Var 0x11f81d640 'mnt' 'struct mount *'
    | `-UnaryOperator 0x128107040 <col:36, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x128107018 <col:37, col:41> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x128106fe0 <col:37> 'struct super_block *' contains-errors lvalue Var 0x11f81d4d8 'sb' 'struct super_block *'
    |-CallExpr 0x1281071a0 <line:39:2, col:20> 'int'
    | `-ImplicitCastExpr 0x128107188 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x128107168 <col:2> 'int ()' Function 0x1281070b0 'unlock_mount_hash' 'int ()'
    |-IfStmt 0x128107e90 <line:41:2, line:52:2> has_else
    | |-RecoveryExpr 0x128107378 <line:41:6, line:42:56> '_Bool' contains-errors
    | |-CompoundStmt 0x1281077d0 <col:59, line:46:2>
    | | |-CallExpr 0x128107588 <line:43:3, col:49> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x128107478 <col:3> 'int ()' Function 0x1281073c0 'list_add' 'int ()'
    | | | |-UnaryOperator 0x1281074f8 <col:12, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | | | `-RecoveryExpr 0x1281074d0 <col:13, col:18> '<dependent type>' contains-errors lvalue
    | | | |   `-DeclRefExpr 0x128107498 <col:13> 'struct mount *' lvalue Var 0x11f81d640 'mnt' 'struct mount *'
    | | | `-UnaryOperator 0x128107570 <col:29, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | |   `-RecoveryExpr 0x128107548 <col:30, col:35> '<dependent type>' contains-errors lvalue
    | | |     `-DeclRefExpr 0x128107510 <col:30> 'struct mount *' lvalue ParmVar 0x128104818 'old' 'struct mount *'
    | | |-BinaryOperator 0x128107638 <line:44:3, col:21> '<dependent type>' contains-errors '='
    | | | |-RecoveryExpr 0x1281075f0 <col:3, col:8> '<dependent type>' contains-errors lvalue
    | | | | `-DeclRefExpr 0x1281075b8 <col:3> 'struct mount *' lvalue Var 0x11f81d640 'mnt' 'struct mount *'
    | | | `-DeclRefExpr 0x128107618 <col:21> 'struct mount *' lvalue ParmVar 0x128104818 'old' 'struct mount *'
    | | `-CallExpr 0x128107790 <line:45:3, col:23> 'int'
    | |   |-ImplicitCastExpr 0x128107778 <col:3> 'int (*)()' <FunctionToPointerDecay>
    | |   | `-DeclRefExpr 0x128107738 <col:3> 'int ()' Function 0x128107680 'CLEAR_MNT_SHARED' 'int ()'
    | |   `-ImplicitCastExpr 0x1281077b8 <col:20> 'struct mount *' <LValueToRValue>
    | |     `-DeclRefExpr 0x128107758 <col:20> 'struct mount *' lvalue Var 0x11f81d640 'mnt' 'struct mount *'
    | `-IfStmt 0x128107e70 <line:46:9, line:52:2>
    |   |-RecoveryExpr 0x128107818 <line:46:13, col:32> '_Bool' contains-errors
    |   `-CompoundStmt 0x128107e48 <col:35, line:52:2>
    |     |-IfStmt 0x128107a50 <line:47:3, line:48:45>
    |     | |-RecoveryExpr 0x1281078f0 <line:47:7, col:51> '_Bool' contains-errors
    |     | `-CallExpr 0x128107a20 <line:48:4, col:45> '<dependent type>' contains-errors
    |     |   |-DeclRefExpr 0x128107910 <col:4> 'int ()' Function 0x1281073c0 'list_add' 'int ()'
    |     |   |-UnaryOperator 0x128107990 <col:13, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     |   | `-RecoveryExpr 0x128107968 <col:14, col:19> '<dependent type>' contains-errors lvalue
    |     |   |   `-DeclRefExpr 0x128107930 <col:14> 'struct mount *' lvalue Var 0x11f81d640 'mnt' 'struct mount *'
    |     |   `-UnaryOperator 0x128107a08 <col:30, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     |     `-RecoveryExpr 0x1281079e0 <col:31, col:36> '<dependent type>' contains-errors lvalue
    |     |       `-DeclRefExpr 0x1281079a8 <col:31> 'struct mount *' lvalue ParmVar 0x128104818 'old' 'struct mount *'
    |     |-IfStmt 0x128107d28 <line:49:3, line:50:45>
    |     | |-CallExpr 0x128107ba8 <line:49:7, col:23> 'int'
    |     | | |-ImplicitCastExpr 0x128107b90 <col:7> 'int (*)()' <FunctionToPointerDecay>
    |     | | | `-DeclRefExpr 0x128107b50 <col:7> 'int ()' Function 0x128107a98 'IS_MNT_SLAVE' 'int ()'
    |     | | `-ImplicitCastExpr 0x128107bd0 <col:20> 'struct mount *' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x128107b70 <col:20> 'struct mount *' lvalue ParmVar 0x128104818 'old' 'struct mount *'
    |     | `-CallExpr 0x128107cf8 <line:50:4, col:45> '<dependent type>' contains-errors
    |     |   |-DeclRefExpr 0x128107be8 <col:4> 'int ()' Function 0x1281073c0 'list_add' 'int ()'
    |     |   |-UnaryOperator 0x128107c68 <col:13, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     |   | `-RecoveryExpr 0x128107c40 <col:14, col:19> '<dependent type>' contains-errors lvalue
    |     |   |   `-DeclRefExpr 0x128107c08 <col:14> 'struct mount *' lvalue Var 0x11f81d640 'mnt' 'struct mount *'
    |     |   `-UnaryOperator 0x128107ce0 <col:30, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     |     `-RecoveryExpr 0x128107cb8 <col:31, col:36> '<dependent type>' contains-errors lvalue
    |     |       `-DeclRefExpr 0x128107c80 <col:31> 'struct mount *' lvalue ParmVar 0x128104818 'old' 'struct mount *'
    |     `-BinaryOperator 0x128107e28 <line:51:3, col:26> '<dependent type>' contains-errors '='
    |       |-RecoveryExpr 0x128107d80 <col:3, col:8> '<dependent type>' contains-errors lvalue
    |       | `-DeclRefExpr 0x128107d48 <col:3> 'struct mount *' lvalue Var 0x11f81d640 'mnt' 'struct mount *'
    |       `-RecoveryExpr 0x128107e00 <col:21, col:26> '<dependent type>' contains-errors lvalue
    |         `-DeclRefExpr 0x128107da8 <col:21> 'struct mount *' lvalue ParmVar 0x128104818 'old' 'struct mount *'
    |-IfStmt 0x128108078 <line:53:2, line:54:21>
    | |-RecoveryExpr 0x128107ee0 <line:53:6, col:13> '_Bool' contains-errors
    | `-CallExpr 0x128108038 <line:54:3, col:21> 'int'
    |   |-ImplicitCastExpr 0x128108020 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x128107fe0 <col:3> 'int ()' Function 0x128107f28 'set_mnt_shared' 'int ()'
    |   `-ImplicitCastExpr 0x128108060 <col:18> 'struct mount *' <LValueToRValue>
    |     `-DeclRefExpr 0x128108000 <col:18> 'struct mount *' lvalue Var 0x11f81d640 'mnt' 'struct mount *'
    |-IfStmt 0x128108328 <line:57:2, line:60:2>
    | |-RecoveryExpr 0x1281080b8 <line:57:6, col:13> '_Bool' contains-errors
    | `-CompoundStmt 0x128108310 <col:24, line:60:2>
    |   `-IfStmt 0x1281082f0 <line:58:3, line:59:47>
    |     |-UnaryOperator 0x128108198 <line:58:7, col:35> '<dependent type>' contains-errors prefix '!' cannot overflow
    |     | `-CallExpr 0x128108170 <col:8, col:35> '<dependent type>' contains-errors
    |     |   |-DeclRefExpr 0x1281080d8 <col:8> 'int ()' Function 0x11f830e58 'list_empty' 'int ()'
    |     |   `-UnaryOperator 0x128108158 <col:19, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     |     `-RecoveryExpr 0x128108130 <col:20, col:25> '<dependent type>' contains-errors lvalue
    |     |       `-DeclRefExpr 0x1281080f8 <col:20> 'struct mount *' lvalue ParmVar 0x128104818 'old' 'struct mount *'
    |     `-CallExpr 0x1281082c0 <line:59:4, col:47> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x1281081b0 <col:4> 'int ()' Function 0x1281073c0 'list_add' 'int ()'
    |       |-UnaryOperator 0x128108230 <col:13, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow
    |       | `-RecoveryExpr 0x128108208 <col:14, col:19> '<dependent type>' contains-errors lvalue
    |       |   `-DeclRefExpr 0x1281081d0 <col:14> 'struct mount *' lvalue Var 0x11f81d640 'mnt' 'struct mount *'
    |       `-UnaryOperator 0x1281082a8 <col:31, col:37> '<dependent type>' contains-errors prefix '&' cannot overflow
    |         `-RecoveryExpr 0x128108280 <col:32, col:37> '<dependent type>' contains-errors lvalue
    |           `-DeclRefExpr 0x128108248 <col:32> 'struct mount *' lvalue ParmVar 0x128104818 'old' 'struct mount *'
    |-ReturnStmt 0x128108380 <line:62:2, col:9>
    | `-ImplicitCastExpr 0x128108368 <col:9> 'struct mount *' <LValueToRValue>
    |   `-DeclRefExpr 0x128108348 <col:9> 'struct mount *' lvalue Var 0x11f81d640 'mnt' 'struct mount *'
    |-LabelStmt 0x128108508 <line:64:2, line:65:17> 'out_free'
    | `-CallExpr 0x1281084c8 <col:2, col:17> 'int'
    |   |-ImplicitCastExpr 0x1281084b0 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x128108470 <col:2> 'int ()' Function 0x1281083b8 'mnt_free_id' 'int ()'
    |   `-ImplicitCastExpr 0x1281084f0 <col:14> 'struct mount *' <LValueToRValue>
    |     `-DeclRefExpr 0x128108490 <col:14> 'struct mount *' lvalue Var 0x11f81d640 'mnt' 'struct mount *'
    |-CallExpr 0x128108660 <line:66:2, col:17> 'int'
    | |-ImplicitCastExpr 0x128108648 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x128108608 <col:2> 'int ()' Function 0x128108550 'free_vfsmnt' 'int ()'
    | `-ImplicitCastExpr 0x128108688 <col:14> 'struct mount *' <LValueToRValue>
    |   `-DeclRefExpr 0x128108628 <col:14> 'struct mount *' lvalue Var 0x11f81d640 'mnt' 'struct mount *'
    `-ReturnStmt 0x128108750 <line:67:2, col:20>
      `-ImplicitCastExpr 0x128108738 <col:9, col:20> 'struct mount *' <IntegralToPointer>
        `-CallExpr 0x1281086f8 <col:9, col:20> 'int'
          |-ImplicitCastExpr 0x1281086e0 <col:9> 'int (*)()' <FunctionToPointerDecay>
          | `-DeclRefExpr 0x1281086a0 <col:9> 'int ()' Function 0x11f81d9e0 'ERR_PTR' 'int ()'
          `-ImplicitCastExpr 0x128108720 <col:17> 'int' <LValueToRValue>
            `-DeclRefExpr 0x1281086c0 <col:17> 'int' lvalue Var 0x11f81d6d8 'err' 'int'
