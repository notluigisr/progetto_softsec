TranslationUnitDecl 0x13a835e08 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13a836cb8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13a8363d0 '__int128'
|-TypedefDecl 0x13a836d28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13a8363f0 'unsigned __int128'
|-TypedefDecl 0x13901d830 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13901d600 'struct __NSConstantString_tag'
|   `-Record 0x13a836d80 '__NSConstantString_tag'
|-TypedefDecl 0x13901d898 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13a836590 '__SVInt8_t'
|-TypedefDecl 0x13901d900 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13a8365b0 '__SVInt16_t'
|-TypedefDecl 0x13901d968 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13a8365d0 '__SVInt32_t'
|-TypedefDecl 0x13901d9d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13a8365f0 '__SVInt64_t'
|-TypedefDecl 0x13901da38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13a836610 '__SVUint8_t'
|-TypedefDecl 0x13901daa0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13a836630 '__SVUint16_t'
|-TypedefDecl 0x13901db08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13a836650 '__SVUint32_t'
|-TypedefDecl 0x13901db70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13a836670 '__SVUint64_t'
|-TypedefDecl 0x13901dbd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13a836690 '__SVFloat16_t'
|-TypedefDecl 0x13901dc40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13a8366b0 '__SVFloat32_t'
|-TypedefDecl 0x13901dca8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13a8366d0 '__SVFloat64_t'
|-TypedefDecl 0x13901dd10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13a8366f0 '__SVBfloat16_t'
|-TypedefDecl 0x13901dd78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13a836710 '__clang_svint8x2_t'
|-TypedefDecl 0x13901dde0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13a836730 '__clang_svint16x2_t'
|-TypedefDecl 0x13901de48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13a836750 '__clang_svint32x2_t'
|-TypedefDecl 0x13901deb0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13a836770 '__clang_svint64x2_t'
|-TypedefDecl 0x13901df18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13a836790 '__clang_svuint8x2_t'
|-TypedefDecl 0x13901df80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13a8367b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13901dfe8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13a8367d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13901e050 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13a8367f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13901e0b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13a836810 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13901e120 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13a836830 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13901e188 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13a836850 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13901e1f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13a836870 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13901e258 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13a836890 '__clang_svint8x3_t'
|-TypedefDecl 0x13901e2c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13a8368b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13901e328 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13a8368d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13901e390 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13a8368f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13901e3f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13a836910 '__clang_svuint8x3_t'
|-TypedefDecl 0x13901e460 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13a836930 '__clang_svuint16x3_t'
|-TypedefDecl 0x13901e4c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13a836950 '__clang_svuint32x3_t'
|-TypedefDecl 0x13901e530 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13a836970 '__clang_svuint64x3_t'
|-TypedefDecl 0x13901e598 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13a836990 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13901ea00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13a8369b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13901ea68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13a8369d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13901ead0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13a8369f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13901eb38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13a836a10 '__clang_svint8x4_t'
|-TypedefDecl 0x13901eba0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13a836a30 '__clang_svint16x4_t'
|-TypedefDecl 0x13901ec08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13a836a50 '__clang_svint32x4_t'
|-TypedefDecl 0x13901ec70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13a836a70 '__clang_svint64x4_t'
|-TypedefDecl 0x13901ecd8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13a836a90 '__clang_svuint8x4_t'
|-TypedefDecl 0x13901ed40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13a836ab0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13901eda8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13a836ad0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13901ee10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13a836af0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13901ee78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13a836b10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13901eee0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13a836b30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13901ef48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13a836b50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13901efb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13a836b70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13901f018 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13a836b90 '__SVBool_t'
|-TypedefDecl 0x13901f080 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13a836bb0 '__clang_svboolx2_t'
|-TypedefDecl 0x13901f0e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13a836bd0 '__clang_svboolx4_t'
|-TypedefDecl 0x13901f150 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13a836bf0 '__SVCount_t'
|-TypedefDecl 0x13901f1f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13901f1b0 'char *'
|   `-BuiltinType 0x13a835eb0 'char'
|-TypedefDecl 0x13901f268 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13901f1b0 'char *'
|   `-BuiltinType 0x13a835eb0 'char'
|-FunctionDecl 0x13901f3f8 <dataset_diviso_filec/func14338_vuln.c:1:1, line:40:1> line:1:13 invalid get_icalcomponent_errstr 'const char *(int *)'
| |-ParmVarDecl 0x13901f328 <col:38, col:53> col:53 invalid ical 'int *'
| `-CompoundStmt 0x13980c5e8 <line:2:1, line:40:1>
|   `-ForStmt 0x13980c5b0 <line:5:5, line:37:5>
|     |-<<<NULL>>>
|     |-<<<NULL>>>
|     |-RecoveryExpr 0x13901f6f0 <line:6:3> '<dependent type>' contains-errors lvalue
|     |-BinaryOperator 0x13901f920 <line:7:3, col:67> '<dependent type>' contains-errors '='
|     | |-RecoveryExpr 0x13901f8b0 <col:3> '<dependent type>' contains-errors lvalue
|     | `-CallExpr 0x13901f8f0 <col:10, col:67> '<dependent type>' contains-errors
|     |   |-DeclRefExpr 0x13901f808 <col:10> 'int ()' Function 0x13901f750 'icalcomponent_get_next_component' 'int ()'
|     |   |-RecoveryExpr 0x13901f828 <col:43> '<dependent type>' contains-errors lvalue
|     |   `-RecoveryExpr 0x13901f8d0 <col:49> '<dependent type>' contains-errors lvalue
|     `-CompoundStmt 0x13980c598 <col:70, line:37:5>
|       `-ForStmt 0x13980c560 <line:10:2, line:36:2>
|         |-<<<NULL>>>
|         |-<<<NULL>>>
|         |-RecoveryExpr 0x13980a170 <line:11:7> '<dependent type>' contains-errors lvalue
|         |-BinaryOperator 0x13980a3b8 <line:12:7, col:69> '<dependent type>' contains-errors '='
|         | |-RecoveryExpr 0x13980a328 <col:7> '<dependent type>' contains-errors lvalue
|         | `-CallExpr 0x13980a388 <col:14, col:69> '<dependent type>' contains-errors
|         |   |-DeclRefExpr 0x13980a288 <col:14> 'int ()' Function 0x13980a1d0 'icalcomponent_get_next_property' 'int ()'
|         |   |-RecoveryExpr 0x13980a348 <col:46> '<dependent type>' contains-errors lvalue
|         |   `-RecoveryExpr 0x13980a368 <col:52> '<dependent type>' contains-errors lvalue
|         `-CompoundStmt 0x13980c548 <col:72, line:36:2>
|           `-IfStmt 0x13980c528 <line:14:6, line:35:6>
|             |-RecoveryExpr 0x13980a4d8 <line:14:10, col:36> '_Bool' contains-errors
|             `-CompoundStmt 0x13980c500 <col:61, line:35:6>
|               |-DeclStmt 0x13980a678 <line:16:3, col:56>
|               | `-VarDecl 0x13980a510 <col:3, col:15> col:15 used errstr 'const char *'
|               |-IfStmt 0x13980a780 <line:18:3, col:23>
|               | |-UnaryOperator 0x13980a6c8 <col:7, col:8> 'int' prefix '!' cannot overflow
|               | | `-ImplicitCastExpr 0x13980a6b0 <col:8> 'const char *' <LValueToRValue>
|               | |   `-DeclRefExpr 0x13980a690 <col:8> 'const char *' lvalue Var 0x13980a510 'errstr' 'const char *'
|               | `-ReturnStmt 0x13980a770 <col:16, col:23>
|               |   `-ImplicitCastExpr 0x13980a758 <col:23> 'const char *' <NoOp>
|               |     `-ImplicitCastExpr 0x13980a740 <col:23> 'char *' <ArrayToPointerDecay>
|               |       `-StringLiteral 0x13980a720 <col:23> 'char[4]' lvalue "STR"
|               `-IfStmt 0x13980c4e0 <line:23:3, line:34:3>
|                 |-RecoveryExpr 0x13980a9a0 <line:23:7, line:24:7> '_Bool' contains-errors
|                 `-CompoundStmt 0x13980c4c0 <col:43, line:34:3>
|                   |-DeclStmt 0x13980aac8 <line:26:7, col:25>
|                   | `-VarDecl 0x13980aa60 <col:7, col:24> col:12 used propname 'char[256]'
|                   `-IfStmt 0x13980c4a0 <line:27:7, line:33:7>
|                     |-BinaryOperator 0x13980af70 <line:27:11, line:28:31> 'int' '=='
|                     | |-CallExpr 0x13980aeb8 <line:27:11, line:28:26> 'int'
|                     | | |-ImplicitCastExpr 0x13980aea0 <line:27:11> 'int (*)(const char *restrict, const char *restrict, ...)' <FunctionToPointerDecay>
|                     | | | `-DeclRefExpr 0x13980ad90 <col:11> 'int (const char *restrict, const char *restrict, ...)' Function 0x13980ab78 'sscanf' 'int (const char *restrict, const char *restrict, ...)'
|                     | | |-ImplicitCastExpr 0x13980aef0 <col:18> 'const char *' <LValueToRValue>
|                     | | | `-DeclRefExpr 0x13980adb0 <col:18> 'const char *' lvalue Var 0x13980a510 'errstr' 'const char *'
|                     | | |-ImplicitCastExpr 0x13980af20 <line:28:11> 'const char *' <NoOp>
|                     | | | `-ImplicitCastExpr 0x13980af08 <col:11> 'char *' <ArrayToPointerDecay>
|                     | | |   `-StringLiteral 0x13980add0 <col:11> 'char[4]' lvalue "STR"
|                     | | `-ImplicitCastExpr 0x13980af38 <col:18> 'char *' <ArrayToPointerDecay>
|                     | |   `-DeclRefExpr 0x13980adf0 <col:18> 'char[256]' lvalue Var 0x13980aa60 'propname' 'char[256]'
|                     | `-IntegerLiteral 0x13980af50 <col:31> 'int' 1
|                     `-CompoundStmt 0x13980c478 <col:34, line:33:7>
|                       |-IfStmt 0x13980c168 <line:30:4, col:38>
|                       | |-UnaryOperator 0x13980c148 <col:8, col:35> 'int' prefix '!' cannot overflow
|                       | | `-CallExpr 0x13980c0b8 <col:9, col:35> 'int'
|                       | |   |-ImplicitCastExpr 0x13980c0a0 <col:9> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|                       | |   | `-DeclRefExpr 0x13980bfe0 <col:9> 'int (const char *, const char *)' Function 0x13980be00 'strcasecmp' 'int (const char *, const char *)'
|                       | |   |-ImplicitCastExpr 0x13980c100 <col:20> 'const char *' <NoOp>
|                       | |   | `-ImplicitCastExpr 0x13980c0e8 <col:20> 'char *' <ArrayToPointerDecay>
|                       | |   |   `-DeclRefExpr 0x13980c000 <col:20> 'char[256]' lvalue Var 0x13980aa60 'propname' 'char[256]'
|                       | |   `-ImplicitCastExpr 0x13980c130 <col:30> 'const char *' <NoOp>
|                       | |     `-ImplicitCastExpr 0x13980c118 <col:30> 'char *' <ArrayToPointerDecay>
|                       | |       `-StringLiteral 0x13980c020 <col:30> 'char[4]' lvalue "STR"
|                       | `-ContinueStmt 0x13980c160 <col:38>
|                       |-IfStmt 0x13980c2e0 <line:31:4, col:38>
|                       | |-UnaryOperator 0x13980c2c0 <col:8, col:35> 'int' prefix '!' cannot overflow
|                       | | `-CallExpr 0x13980c230 <col:9, col:35> 'int'
|                       | |   |-ImplicitCastExpr 0x13980c218 <col:9> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|                       | |   | `-DeclRefExpr 0x13980c188 <col:9> 'int (const char *, const char *)' Function 0x13980be00 'strcasecmp' 'int (const char *, const char *)'
|                       | |   |-ImplicitCastExpr 0x13980c278 <col:20> 'const char *' <NoOp>
|                       | |   | `-ImplicitCastExpr 0x13980c260 <col:20> 'char *' <ArrayToPointerDecay>
|                       | |   |   `-DeclRefExpr 0x13980c1a8 <col:20> 'char[256]' lvalue Var 0x13980aa60 'propname' 'char[256]'
|                       | |   `-ImplicitCastExpr 0x13980c2a8 <col:30> 'const char *' <NoOp>
|                       | |     `-ImplicitCastExpr 0x13980c290 <col:30> 'char *' <ArrayToPointerDecay>
|                       | |       `-StringLiteral 0x13980c1c8 <col:30> 'char[4]' lvalue "STR"
|                       | `-ContinueStmt 0x13980c2d8 <col:38>
|                       `-IfStmt 0x13980c458 <line:32:4, col:38>
|                         |-UnaryOperator 0x13980c438 <col:8, col:35> 'int' prefix '!' cannot overflow
|                         | `-CallExpr 0x13980c3a8 <col:9, col:35> 'int'
|                         |   |-ImplicitCastExpr 0x13980c390 <col:9> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|                         |   | `-DeclRefExpr 0x13980c300 <col:9> 'int (const char *, const char *)' Function 0x13980be00 'strcasecmp' 'int (const char *, const char *)'
|                         |   |-ImplicitCastExpr 0x13980c3f0 <col:20> 'const char *' <NoOp>
|                         |   | `-ImplicitCastExpr 0x13980c3d8 <col:20> 'char *' <ArrayToPointerDecay>
|                         |   |   `-DeclRefExpr 0x13980c320 <col:20> 'char[256]' lvalue Var 0x13980aa60 'propname' 'char[256]'
|                         |   `-ImplicitCastExpr 0x13980c420 <col:30> 'const char *' <NoOp>
|                         |     `-ImplicitCastExpr 0x13980c408 <col:30> 'char *' <ArrayToPointerDecay>
|                         |       `-StringLiteral 0x13980c340 <col:30> 'char[4]' lvalue "STR"
|                         `-ContinueStmt 0x13980c450 <col:38>
|-FunctionDecl 0x13980ab78 <line:27:11> col:11 implicit used sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x13980ac78 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x13980ace0 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-BuiltinAttr 0x13980ac20 <<invalid sloc>> Implicit 913
| `-FormatAttr 0x13980ad58 <col:11> Implicit scanf 2 3
`-FunctionDecl 0x13980be00 <line:30:9> col:9 implicit used strcasecmp 'int (const char *, const char *)' extern
  |-ParmVarDecl 0x13980bf00 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x13980bf68 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x13980bea8 <<invalid sloc>> Implicit 957
