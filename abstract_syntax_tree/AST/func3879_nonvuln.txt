TranslationUnitDecl 0x122855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1228564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x122855bd0 '__int128'
|-TypedefDecl 0x122856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x122855bf0 'unsigned __int128'
|-TypedefDecl 0x122926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x122926000 'struct __NSConstantString_tag'
|   `-Record 0x122856580 '__NSConstantString_tag'
|-TypedefDecl 0x122926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x122855d90 '__SVInt8_t'
|-TypedefDecl 0x122926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x122855db0 '__SVInt16_t'
|-TypedefDecl 0x122926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x122855dd0 '__SVInt32_t'
|-TypedefDecl 0x1229263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x122855df0 '__SVInt64_t'
|-TypedefDecl 0x122926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x122855e10 '__SVUint8_t'
|-TypedefDecl 0x1229264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x122855e30 '__SVUint16_t'
|-TypedefDecl 0x122926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x122855e50 '__SVUint32_t'
|-TypedefDecl 0x122926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x122855e70 '__SVUint64_t'
|-TypedefDecl 0x1229265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x122855e90 '__SVFloat16_t'
|-TypedefDecl 0x122926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x122855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1229266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x122855ed0 '__SVFloat64_t'
|-TypedefDecl 0x122926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x122855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x122926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x122855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1229267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x122855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x122926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x122855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1229268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x122855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x122926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x122855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x122926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x122855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1229269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x122855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x122926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x122855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x122926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x122856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x122926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x122856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x122926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x122856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x122926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x122856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x122926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x122856090 '__clang_svint8x3_t'
|-TypedefDecl 0x122926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1228560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x122926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1228560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x122926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1228560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x122926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x122856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x122926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x122856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x122926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x122856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x122926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x122856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x122926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x122856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x122927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1228561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x122927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1228561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1229278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1228561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x122927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x122856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1229279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x122856230 '__clang_svint16x4_t'
|-TypedefDecl 0x122927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x122856250 '__clang_svint32x4_t'
|-TypedefDecl 0x122927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x122856270 '__clang_svint64x4_t'
|-TypedefDecl 0x122927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x122856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x122927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1228562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x122927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1228562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x122927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1228562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x122927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x122856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x122927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x122856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x122927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x122856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x122927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x122856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x122927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x122856390 '__SVBool_t'
|-TypedefDecl 0x122927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1228563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x122927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1228563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x122927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1228563f0 '__SVCount_t'
|-TypedefDecl 0x122927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x122927fb0 'char *'
|   `-BuiltinType 0x1228556b0 'char'
|-TypedefDecl 0x122928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x122927fb0 'char *'
|   `-BuiltinType 0x1228556b0 'char'
|-FunctionDecl 0x1229281f0 <dataset_diviso_filec/func3879_nonvuln.c:1:1, line:48:1> line:1:6 invalid linsertCommand 'void (int *)'
| |-ParmVarDecl 0x122928128 <col:21, col:29> col:29 invalid c 'int *'
| `-CompoundStmt 0x122945008 <col:32, line:48:1>
|   |-DeclStmt 0x122928320 <line:2:5, col:14>
|   | `-VarDecl 0x1229282b8 <col:5, col:9> col:9 used where 'int'
|   |-DeclStmt 0x122928408 <line:6:5, col:21>
|   | `-VarDecl 0x122928380 <col:5, col:20> col:9 used inserted 'int' cinit
|   |   `-IntegerLiteral 0x1229283e8 <col:20> 'int' 0
|   |-IfStmt 0x122942b08 <line:8:5, line:15:5> has_else
|   | |-BinaryOperator 0x122942480 <line:8:9, col:46> 'int' contains-errors '=='
|   | | |-CallExpr 0x122942430 <col:9, col:41> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x122942270 <col:9> 'int (const char *, const char *)' Function 0x122942090 'strcasecmp' 'int (const char *, const char *)'
|   | | | |-CXXDependentScopeMemberExpr 0x122942350 <col:20, col:32> '<dependent type>' contains-errors lvalue ->ptr
|   | | | | `-ArraySubscriptExpr 0x122942330 <col:20, col:29> '<dependent type>' contains-errors lvalue
|   | | | |   |-ImplicitCastExpr 0x122942318 <col:20, col:23> '<dependent type>' contains-errors <LValueToRValue>
|   | | | |   | `-CXXDependentScopeMemberExpr 0x1229422b0 <col:20, col:23> '<dependent type>' contains-errors lvalue ->argv
|   | | | |   |   `-RecoveryExpr 0x122942290 <col:20> '<dependent type>' contains-errors lvalue
|   | | | |   `-IntegerLiteral 0x1229422f8 <col:28> 'int' 2
|   | | | `-StringLiteral 0x1229423e0 <col:36> 'char[4]' lvalue "STR"
|   | | `-IntegerLiteral 0x122942460 <col:46> 'int' 0
|   | |-CompoundStmt 0x122942538 <col:49, line:10:5>
|   | | `-BinaryOperator 0x122942518 <line:9:9, col:17> 'int' contains-errors '='
|   | |   |-DeclRefExpr 0x1229424a0 <col:9> 'int' lvalue Var 0x1229282b8 'where' 'int'
|   | |   `-RecoveryExpr 0x1229424f8 <col:17> '<dependent type>' contains-errors lvalue
|   | `-IfStmt 0x122942ad8 <line:10:12, line:15:5> has_else
|   |   |-BinaryOperator 0x122942718 <line:10:16, col:53> 'int' contains-errors '=='
|   |   | |-CallExpr 0x1229426c8 <col:16, col:48> '<dependent type>' contains-errors
|   |   | | |-DeclRefExpr 0x122942550 <col:16> 'int (const char *, const char *)' Function 0x122942090 'strcasecmp' 'int (const char *, const char *)'
|   |   | | |-CXXDependentScopeMemberExpr 0x122942630 <col:27, col:39> '<dependent type>' contains-errors lvalue ->ptr
|   |   | | | `-ArraySubscriptExpr 0x122942610 <col:27, col:36> '<dependent type>' contains-errors lvalue
|   |   | | |   |-ImplicitCastExpr 0x1229425f8 <col:27, col:30> '<dependent type>' contains-errors <LValueToRValue>
|   |   | | |   | `-CXXDependentScopeMemberExpr 0x122942590 <col:27, col:30> '<dependent type>' contains-errors lvalue ->argv
|   |   | | |   |   `-RecoveryExpr 0x122942570 <col:27> '<dependent type>' contains-errors lvalue
|   |   | | |   `-IntegerLiteral 0x1229425d8 <col:35> 'int' 2
|   |   | | `-StringLiteral 0x122942678 <col:43> 'char[4]' lvalue "STR"
|   |   | `-IntegerLiteral 0x1229426f8 <col:53> 'int' 0
|   |   |-CompoundStmt 0x1229427d0 <col:56, line:12:5>
|   |   | `-BinaryOperator 0x1229427b0 <line:11:9, col:17> 'int' contains-errors '='
|   |   |   |-DeclRefExpr 0x122942738 <col:9> 'int' lvalue Var 0x1229282b8 'where' 'int'
|   |   |   `-RecoveryExpr 0x122942790 <col:17> '<dependent type>' contains-errors lvalue
|   |   `-CompoundStmt 0x122942ab8 <line:12:12, line:15:5>
|   |     |-CallExpr 0x122942a78 <line:13:9, col:36> '<dependent type>' contains-errors
|   |     | |-DeclRefExpr 0x122942940 <col:9> 'int ()' Function 0x122942888 'addReply' 'int ()'
|   |     | |-RecoveryExpr 0x122942960 <col:18> '<dependent type>' contains-errors lvalue
|   |     | `-CXXDependentScopeMemberExpr 0x122942a30 <col:20, col:27> '<dependent type>' contains-errors lvalue .syntaxerr
|   |     |   `-RecoveryExpr 0x122942a10 <col:20> '<dependent type>' contains-errors lvalue
|   |     `-ReturnStmt 0x122942aa8 <line:14:9>
|   |-IfStmt 0x1229430d0 <line:17:5, line:20:5>
|   | |-BinaryOperator 0x122942f10 <line:17:9, col:35> 'int' contains-errors '>'
|   | | |-CallExpr 0x122942ec8 <col:9, col:31> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x122942c18 <col:9> 'int ()' Function 0x122942b60 'sdslen' 'int ()'
|   | | | `-CXXDependentScopeMemberExpr 0x122942e80 <col:16, col:28> '<dependent type>' contains-errors lvalue ->ptr
|   | | |   `-ArraySubscriptExpr 0x122942e60 <col:16, col:25> '<dependent type>' contains-errors lvalue
|   | | |     |-ImplicitCastExpr 0x122942e48 <col:16, col:19> '<dependent type>' contains-errors <LValueToRValue>
|   | | |     | `-CXXDependentScopeMemberExpr 0x122942c58 <col:16, col:19> '<dependent type>' contains-errors lvalue ->argv
|   | | |     |   `-RecoveryExpr 0x122942c38 <col:16> '<dependent type>' contains-errors lvalue
|   | | |     `-IntegerLiteral 0x122942ca0 <col:24> 'int' 4
|   | | `-RecoveryExpr 0x122942ef0 <col:35> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x1229430b0 <col:55, line:20:5>
|   |   |-CallExpr 0x122943070 <line:18:9, col:31> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x122943010 <col:9> 'int ()' Function 0x122942f58 'addReplyError' 'int ()'
|   |   | |-RecoveryExpr 0x122943030 <col:23> '<dependent type>' contains-errors lvalue
|   |   | `-StringLiteral 0x122943050 <col:26> 'char[4]' lvalue "STR"
|   |   `-ReturnStmt 0x1229430a0 <line:19:9>
|   |-IfStmt 0x122943570 <line:22:5, line:23:40>
|   | |-RecoveryExpr 0x122943540 <line:22:9, line:23:37> '_Bool' contains-errors
|   | `-ReturnStmt 0x122943560 <col:40>
|   |-WhileStmt 0x122943c50 <line:27:5, line:33:5>
|   | |-RecoveryExpr 0x1229437b0 <line:27:12, col:36> '_Bool' contains-errors
|   | `-CompoundStmt 0x122943c38 <col:39, line:33:5>
|   |   `-IfStmt 0x122943c18 <line:28:9, line:32:9>
|   |     |-RecoveryExpr 0x122943990 <line:28:13, col:44> '_Bool' contains-errors
|   |     `-CompoundStmt 0x122943bf8 <col:47, line:32:9>
|   |       |-BinaryOperator 0x122943bd0 <line:30:13, col:24> 'int' '='
|   |       | |-DeclRefExpr 0x122943b90 <col:13> 'int' lvalue Var 0x122928380 'inserted' 'int'
|   |       | `-IntegerLiteral 0x122943bb0 <col:24> 'int' 1
|   |       `-BreakStmt 0x122943bf0 <line:31:13>
|   `-IfStmt 0x122944e98 <line:36:5, line:45:5> has_else
|     |-ImplicitCastExpr 0x122943d90 <line:36:9> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x122943d70 <col:9> 'int' lvalue Var 0x122928380 'inserted' 'int'
|     |-CompoundStmt 0x122944cc8 <col:19, line:41:5>
|     | `-CallExpr 0x122944a00 <line:37:9, col:45> '<dependent type>' contains-errors
|     |   |-DeclRefExpr 0x122943e88 <col:9> 'int ()' Function 0x122943dd0 'signalModifiedKey' 'int ()'
|     |   |-RecoveryExpr 0x122943ea8 <col:27> '<dependent type>' contains-errors lvalue
|     |   |-CXXDependentScopeMemberExpr 0x122943ee8 <col:29, col:32> '<dependent type>' contains-errors lvalue ->db
|     |   | `-RecoveryExpr 0x122943ec8 <col:29> '<dependent type>' contains-errors lvalue
|     |   `-ArraySubscriptExpr 0x122943fd0 <col:35, col:44> '<dependent type>' contains-errors lvalue
|     |     |-ImplicitCastExpr 0x122943fb8 <col:35, col:38> '<dependent type>' contains-errors <LValueToRValue>
|     |     | `-CXXDependentScopeMemberExpr 0x122943f50 <col:35, col:38> '<dependent type>' contains-errors lvalue ->argv
|     |     |   `-RecoveryExpr 0x122943f30 <col:35> '<dependent type>' contains-errors lvalue
|     |     `-IntegerLiteral 0x122943f98 <col:43> 'int' 1
|     `-CompoundStmt 0x122944e78 <line:41:12, line:45:5>
|       |-CallExpr 0x122944e38 <line:43:9, col:30> '<dependent type>' contains-errors
|       | |-DeclRefExpr 0x122944dc0 <col:9> 'int ()' Function 0x122944d08 'addReplyLongLong' 'int ()'
|       | |-RecoveryExpr 0x122944de0 <col:26> '<dependent type>' contains-errors lvalue
|       | `-UnaryOperator 0x122944e20 <col:28, col:29> 'int' prefix '-'
|       |   `-IntegerLiteral 0x122944e00 <col:29> 'int' 1
|       `-ReturnStmt 0x122944e68 <line:44:9>
`-FunctionDecl 0x122942090 <line:8:9> col:9 implicit used strcasecmp 'int (const char *, const char *)' extern
  |-ParmVarDecl 0x122942190 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x1229421f8 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x122942138 <<invalid sloc>> Implicit 957
