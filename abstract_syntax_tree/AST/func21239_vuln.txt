TranslationUnitDecl 0x14b055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14b0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14b055bd0 '__int128'
|-TypedefDecl 0x14b056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14b055bf0 'unsigned __int128'
|-TypedefDecl 0x14b126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14b126000 'struct __NSConstantString_tag'
|   `-Record 0x14b056580 '__NSConstantString_tag'
|-TypedefDecl 0x14b126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14b055d90 '__SVInt8_t'
|-TypedefDecl 0x14b126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14b055db0 '__SVInt16_t'
|-TypedefDecl 0x14b126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14b055dd0 '__SVInt32_t'
|-TypedefDecl 0x14b1263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14b055df0 '__SVInt64_t'
|-TypedefDecl 0x14b126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14b055e10 '__SVUint8_t'
|-TypedefDecl 0x14b1264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14b055e30 '__SVUint16_t'
|-TypedefDecl 0x14b126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14b055e50 '__SVUint32_t'
|-TypedefDecl 0x14b126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14b055e70 '__SVUint64_t'
|-TypedefDecl 0x14b1265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14b055e90 '__SVFloat16_t'
|-TypedefDecl 0x14b126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14b055eb0 '__SVFloat32_t'
|-TypedefDecl 0x14b1266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14b055ed0 '__SVFloat64_t'
|-TypedefDecl 0x14b126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14b055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14b126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14b055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14b1267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14b055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14b126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14b055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14b1268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14b055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14b126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14b055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14b126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14b055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14b1269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14b055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14b126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14b055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14b126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14b056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14b126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14b056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14b126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14b056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14b126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14b056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14b126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14b056090 '__clang_svint8x3_t'
|-TypedefDecl 0x14b126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14b0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14b126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14b0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14b126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14b0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14b126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14b056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14b126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14b056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14b126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14b056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14b126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14b056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14b126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14b056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14b127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14b0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14b127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14b0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14b1278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14b0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14b127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14b056210 '__clang_svint8x4_t'
|-TypedefDecl 0x14b1279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14b056230 '__clang_svint16x4_t'
|-TypedefDecl 0x14b127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14b056250 '__clang_svint32x4_t'
|-TypedefDecl 0x14b127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14b056270 '__clang_svint64x4_t'
|-TypedefDecl 0x14b127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14b056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14b127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14b0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14b127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14b0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14b127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14b0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14b127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14b056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14b127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14b056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14b127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14b056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14b127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14b056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14b127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14b056390 '__SVBool_t'
|-TypedefDecl 0x14b127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14b0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14b127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14b0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14b127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14b0563f0 '__SVCount_t'
|-TypedefDecl 0x14b127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14b127fb0 'char *'
|   `-BuiltinType 0x14b0556b0 'char'
|-TypedefDecl 0x14b128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14b127fb0 'char *'
|   `-BuiltinType 0x14b0556b0 'char'
|-FunctionDecl 0x14b1281c8 <dataset_diviso_filec/func21239_vuln.c:1:1, line:43:1> line:1:7 invalid pid_get_uid 'int (int)'
| |-ParmVarDecl 0x14b1280f0 <col:19, col:25> col:25 invalid pid 'int'
| `-CompoundStmt 0x14b80c7f8 <col:30, line:43:1>
|   |-CallExpr 0x14b128438 <line:2:2, col:14> 'int'
|   | `-ImplicitCastExpr 0x14b128420 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x14b1283d0 <col:2> 'int ()' Function 0x14b128318 'EUID_ASSERT' 'int ()'
|   |-DeclStmt 0x14b1284d8 <line:6:2, col:12>
|   | `-VarDecl 0x14b128470 <col:2, col:8> col:8 used file 'char *'
|   |-IfStmt 0x14b809420 <line:7:2, line:10:2>
|   | |-BinaryOperator 0x14b1287c0 <line:7:6, col:38> 'int' contains-errors '=='
|   | | |-CallExpr 0x14b128750 <col:6, col:32> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x14b128638 <col:6> 'int ()' Function 0x14b128518 'asprintf' 'int ()'
|   | | | |-UnaryOperator 0x14b1286b0 <col:15, col:16> 'char **' prefix '&' cannot overflow
|   | | | | `-DeclRefExpr 0x14b128658 <col:16> 'char *' lvalue Var 0x14b128470 'file' 'char *'
|   | | | |-StringLiteral 0x14b128710 <col:22> 'char[4]' lvalue "STR"
|   | | | `-RecoveryExpr 0x14b128730 <col:29> '<dependent type>' contains-errors lvalue
|   | | `-UnaryOperator 0x14b1287a8 <col:37, col:38> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x14b128788 <col:38> 'int' 1
|   | `-CompoundStmt 0x14b809400 <col:41, line:10:2>
|   |   |-CallExpr 0x14b808d38 <line:8:3, col:15> 'int'
|   |   | |-ImplicitCastExpr 0x14b808d20 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x14b808ce0 <col:3> 'int ()' Function 0x14b808c28 'perror' 'int ()'
|   |   | `-ImplicitCastExpr 0x14b808d60 <col:10> 'char *' <ArrayToPointerDecay>
|   |   |   `-StringLiteral 0x14b808d00 <col:10> 'char[4]' lvalue "STR"
|   |   `-CallExpr 0x14b8093d8 <line:9:3, col:9> 'void'
|   |     |-ImplicitCastExpr 0x14b8093c0 <col:3> 'void (*)(int) __attribute__((noreturn))' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x14b809350 <col:3> 'void (int) __attribute__((noreturn))' Function 0x14b8091e0 'exit' 'void (int) __attribute__((noreturn))'
|   |     `-IntegerLiteral 0x14b809370 <col:8> 'int' 1
|   |-CallExpr 0x14b809558 <line:11:2, col:12> 'int'
|   | `-ImplicitCastExpr 0x14b809540 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x14b809520 <col:2> 'int ()' Function 0x14b809468 'EUID_ROOT' 'int ()'
|   |-IfStmt 0x14b80acf8 <line:13:2, line:17:2>
|   | |-UnaryOperator 0x14b8097c8 <line:13:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x14b8097b0 <col:7> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x14b809790 <col:7> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x14b80acd0 <col:11, line:17:2>
|   |   |-CallExpr 0x14b809a28 <line:14:3, col:12> 'void'
|   |   | |-ImplicitCastExpr 0x14b809a10 <col:3> 'void (*)(void *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x14b809988 <col:3> 'void (void *)' Function 0x14b809818 'free' 'void (void *)'
|   |   | `-ImplicitCastExpr 0x14b809a68 <col:8> 'void *' <BitCast>
|   |   |   `-ImplicitCastExpr 0x14b809a50 <col:8> 'char *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x14b8099a8 <col:8> 'char *' lvalue Var 0x14b128470 'file' 'char *'
|   |   |-CallExpr 0x14b80ac20 <line:15:3, col:24> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x14b809b60 <col:3> 'int ()' Function 0x14b809aa8 'fprintf' 'int ()'
|   |   | |-RecoveryExpr 0x14b80ac00 <col:11> '<dependent type>' contains-errors lvalue
|   |   | `-StringLiteral 0x14b809b98 <col:19> 'char[4]' lvalue "STR"
|   |   `-CallExpr 0x14b80aca8 <line:16:3, col:9> 'void'
|   |     |-ImplicitCastExpr 0x14b80ac90 <col:3> 'void (*)(int) __attribute__((noreturn))' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x14b80ac50 <col:3> 'void (int) __attribute__((noreturn))' Function 0x14b8091e0 'exit' 'void (int) __attribute__((noreturn))'
|   |     `-IntegerLiteral 0x14b80ac70 <col:8> 'int' 1
|   |-DeclStmt 0x14b80adb8 <line:20:2, col:37>
|   | `-VarDecl 0x14b80ad30 <col:2, col:33> col:19 used PIDS_BUFLEN 'const int' static cinit
|   |   `-IntegerLiteral 0x14b80ad98 <col:33> 'int' 1024
|   |-DeclStmt 0x14b80af48 <line:21:2, col:23>
|   | `-VarDecl 0x14b80aee0 <col:2, col:22> col:7 used buf 'char[PIDS_BUFLEN]'
|   |-WhileStmt 0x14b80c4d8 <line:22:2, line:36:2>
|   | |-CallExpr 0x14b80b1d8 <line:22:9, col:39> '<dependent type>' contains-errors
|   | | |-DeclRefExpr 0x14b80b040 <col:9> 'int ()' Function 0x14b80af88 'fgets' 'int ()'
|   | | |-DeclRefExpr 0x14b80b060 <col:15> 'char[PIDS_BUFLEN]' lvalue Var 0x14b80aee0 'buf' 'char[PIDS_BUFLEN]'
|   | | |-BinaryOperator 0x14b80b198 <col:20, col:34> 'int' '-'
|   | | | |-ImplicitCastExpr 0x14b80b180 <col:20> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x14b80b080 <col:20> 'const int' lvalue Var 0x14b80ad30 'PIDS_BUFLEN' 'const int'
|   | | | `-IntegerLiteral 0x14b80b0a0 <col:34> 'int' 1
|   | | `-RecoveryExpr 0x14b80b1b8 <col:37> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x14b80c4c0 <col:42, line:36:2>
|   |   `-IfStmt 0x14b80c4a0 <line:23:3, line:35:3>
|   |     |-BinaryOperator 0x14b80b678 <line:23:7, col:33> 'int' '=='
|   |     | |-CallExpr 0x14b80b5a8 <col:7, col:28> 'int'
|   |     | | |-ImplicitCastExpr 0x14b80b590 <col:7> 'int (*)(const char *, const char *, unsigned long)' <FunctionToPointerDecay>
|   |     | | | `-DeclRefExpr 0x14b80b4a8 <col:7> 'int (const char *, const char *, unsigned long)' Function 0x14b80b258 'strncmp' 'int (const char *, const char *, unsigned long)'
|   |     | | |-ImplicitCastExpr 0x14b80b5f8 <col:15> 'const char *' <NoOp>
|   |     | | | `-ImplicitCastExpr 0x14b80b5e0 <col:15> 'char *' <ArrayToPointerDecay>
|   |     | | |   `-DeclRefExpr 0x14b80b4c8 <col:15> 'char[PIDS_BUFLEN]' lvalue Var 0x14b80aee0 'buf' 'char[PIDS_BUFLEN]'
|   |     | | |-ImplicitCastExpr 0x14b80b628 <col:20> 'const char *' <NoOp>
|   |     | | | `-ImplicitCastExpr 0x14b80b610 <col:20> 'char *' <ArrayToPointerDecay>
|   |     | | |   `-StringLiteral 0x14b80b4e8 <col:20> 'char[4]' lvalue "STR"
|   |     | | `-ImplicitCastExpr 0x14b80b640 <col:27> 'unsigned long' <IntegralCast>
|   |     | |   `-IntegerLiteral 0x14b80b508 <col:27> 'int' 4
|   |     | `-IntegerLiteral 0x14b80b658 <col:33> 'int' 0
|   |     `-CompoundStmt 0x14b80c470 <col:36, line:35:3>
|   |       |-DeclStmt 0x14b80b790 <line:24:4, col:23>
|   |       | `-VarDecl 0x14b80b6b0 <col:4, col:22> col:10 used ptr 'char *' cinit
|   |       |   `-BinaryOperator 0x14b80b770 <col:16, col:22> 'char *' '+'
|   |       |     |-ImplicitCastExpr 0x14b80b758 <col:16> 'char *' <ArrayToPointerDecay>
|   |       |     | `-DeclRefExpr 0x14b80b718 <col:16> 'char[PIDS_BUFLEN]' lvalue Var 0x14b80aee0 'buf' 'char[PIDS_BUFLEN]'
|   |       |     `-IntegerLiteral 0x14b80b738 <col:22> 'int' 4
|   |       |-WhileStmt 0x14b80ba80 <line:25:4, line:27:4>
|   |       | |-BinaryOperator 0x14b80ba10 <line:25:11, col:55> 'int' '&&'
|   |       | | |-BinaryOperator 0x14b80b840 <col:11, col:19> 'int' '!='
|   |       | | | |-ImplicitCastExpr 0x14b80b828 <col:11, col:12> 'int' <IntegralCast>
|   |       | | | | `-ImplicitCastExpr 0x14b80b810 <col:11, col:12> 'char' <LValueToRValue>
|   |       | | | |   `-UnaryOperator 0x14b80b7e0 <col:11, col:12> 'char' lvalue prefix '*' cannot overflow
|   |       | | | |     `-ImplicitCastExpr 0x14b80b7c8 <col:12> 'char *' <LValueToRValue>
|   |       | | | |       `-DeclRefExpr 0x14b80b7a8 <col:12> 'char *' lvalue Var 0x14b80b6b0 'ptr' 'char *'
|   |       | | | `-CharacterLiteral 0x14b80b7f8 <col:19> 'int' 0
|   |       | | `-ParenExpr 0x14b80b9f0 <col:27, col:55> 'int'
|   |       | |   `-BinaryOperator 0x14b80b9d0 <col:28, col:51> 'int' '||'
|   |       | |     |-BinaryOperator 0x14b80b8f8 <col:28, col:36> 'int' '=='
|   |       | |     | |-ImplicitCastExpr 0x14b80b8e0 <col:28, col:29> 'int' <IntegralCast>
|   |       | |     | | `-ImplicitCastExpr 0x14b80b8c8 <col:28, col:29> 'char' <LValueToRValue>
|   |       | |     | |   `-UnaryOperator 0x14b80b898 <col:28, col:29> 'char' lvalue prefix '*' cannot overflow
|   |       | |     | |     `-ImplicitCastExpr 0x14b80b880 <col:29> 'char *' <LValueToRValue>
|   |       | |     | |       `-DeclRefExpr 0x14b80b860 <col:29> 'char *' lvalue Var 0x14b80b6b0 'ptr' 'char *'
|   |       | |     | `-CharacterLiteral 0x14b80b8b0 <col:36> 'int' 32
|   |       | |     `-BinaryOperator 0x14b80b9b0 <col:43, col:51> 'int' '=='
|   |       | |       |-ImplicitCastExpr 0x14b80b998 <col:43, col:44> 'int' <IntegralCast>
|   |       | |       | `-ImplicitCastExpr 0x14b80b980 <col:43, col:44> 'char' <LValueToRValue>
|   |       | |       |   `-UnaryOperator 0x14b80b950 <col:43, col:44> 'char' lvalue prefix '*' cannot overflow
|   |       | |       |     `-ImplicitCastExpr 0x14b80b938 <col:44> 'char *' <LValueToRValue>
|   |       | |       |       `-DeclRefExpr 0x14b80b918 <col:44> 'char *' lvalue Var 0x14b80b6b0 'ptr' 'char *'
|   |       | |       `-CharacterLiteral 0x14b80b968 <col:51> 'int' 9
|   |       | `-CompoundStmt 0x14b80ba68 <col:58, line:27:4>
|   |       |   `-UnaryOperator 0x14b80ba50 <line:26:5, col:8> 'char *' postfix '++'
|   |       |     `-DeclRefExpr 0x14b80ba30 <col:5> 'char *' lvalue Var 0x14b80b6b0 'ptr' 'char *'
|   |       |-IfStmt 0x14b80c2d0 <line:28:4, line:31:4>
|   |       | |-BinaryOperator 0x14b80bb38 <line:28:8, col:16> 'int' '=='
|   |       | | |-ImplicitCastExpr 0x14b80bb20 <col:8, col:9> 'int' <IntegralCast>
|   |       | | | `-ImplicitCastExpr 0x14b80bb08 <col:8, col:9> 'char' <LValueToRValue>
|   |       | | |   `-UnaryOperator 0x14b80bad8 <col:8, col:9> 'char' lvalue prefix '*' cannot overflow
|   |       | | |     `-ImplicitCastExpr 0x14b80bac0 <col:9> 'char *' <LValueToRValue>
|   |       | | |       `-DeclRefExpr 0x14b80baa0 <col:9> 'char *' lvalue Var 0x14b80b6b0 'ptr' 'char *'
|   |       | | `-CharacterLiteral 0x14b80baf0 <col:16> 'int' 0
|   |       | `-CompoundStmt 0x14b80c2b0 <col:22, line:31:4>
|   |       |   |-CallExpr 0x14b80c200 <line:29:5, col:26> '<dependent type>' contains-errors
|   |       |   | |-DeclRefExpr 0x14b80bb58 <col:5> 'int ()' Function 0x14b809aa8 'fprintf' 'int ()'
|   |       |   | |-RecoveryExpr 0x14b80bbe0 <col:13> '<dependent type>' contains-errors lvalue
|   |       |   | `-StringLiteral 0x14b80bb90 <col:21> 'char[4]' lvalue "STR"
|   |       |   `-CallExpr 0x14b80c288 <line:30:5, col:11> 'void'
|   |       |     |-ImplicitCastExpr 0x14b80c270 <col:5> 'void (*)(int) __attribute__((noreturn))' <FunctionToPointerDecay>
|   |       |     | `-DeclRefExpr 0x14b80c230 <col:5> 'void (int) __attribute__((noreturn))' Function 0x14b8091e0 'exit' 'void (int) __attribute__((noreturn))'
|   |       |     `-IntegerLiteral 0x14b80c250 <col:10> 'int' 1
|   |       `-BreakStmt 0x14b80c468 <line:34:4>
|   |-CallExpr 0x14b80c668 <line:39:2, col:11> 'void'
|   | |-ImplicitCastExpr 0x14b80c650 <col:2> 'void (*)(void *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x14b80c5f8 <col:2> 'void (void *)' Function 0x14b809818 'free' 'void (void *)'
|   | `-ImplicitCastExpr 0x14b80c6a8 <col:7> 'void *' <BitCast>
|   |   `-ImplicitCastExpr 0x14b80c690 <col:7> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x14b80c618 <col:7> 'char *' lvalue Var 0x14b128470 'file' 'char *'
|   `-CallExpr 0x14b80c7d8 <line:40:2, col:12> 'int'
|     `-ImplicitCastExpr 0x14b80c7c0 <col:2> 'int (*)()' <FunctionToPointerDecay>
|       `-DeclRefExpr 0x14b80c7a0 <col:2> 'int ()' Function 0x14b80c6e8 'EUID_USER' 'int ()'
|-FunctionDecl 0x14b8091e0 <line:9:3> col:3 implicit used exit 'void (int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x14b8092e0 <<invalid sloc>> <invalid sloc> 'int'
| `-BuiltinAttr 0x14b809288 <<invalid sloc>> Implicit 869
|-FunctionDecl 0x14b809818 <line:14:3> col:3 implicit used free 'void (void *)' extern
| |-ParmVarDecl 0x14b809918 <<invalid sloc>> <invalid sloc> 'void *'
| `-BuiltinAttr 0x14b8098c0 <<invalid sloc>> Implicit 873
`-FunctionDecl 0x14b80b258 <line:23:7> col:7 implicit used strncmp 'int (const char *, const char *, unsigned long)' extern
  |-ParmVarDecl 0x14b80b358 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x14b80b3c0 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x14b80b428 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x14b80b300 <<invalid sloc>> Implicit 888
