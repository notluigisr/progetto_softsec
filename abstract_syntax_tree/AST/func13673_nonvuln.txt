TranslationUnitDecl 0x132027808 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1320286b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x132027dd0 '__int128'
|-TypedefDecl 0x132028728 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x132027df0 'unsigned __int128'
|-TypedefDecl 0x13183b630 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13183b400 'struct __NSConstantString_tag'
|   `-Record 0x132028780 '__NSConstantString_tag'
|-TypedefDecl 0x13183b698 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x132027f90 '__SVInt8_t'
|-TypedefDecl 0x13183b700 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x132027fb0 '__SVInt16_t'
|-TypedefDecl 0x13183b768 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x132027fd0 '__SVInt32_t'
|-TypedefDecl 0x13183b7d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x132027ff0 '__SVInt64_t'
|-TypedefDecl 0x13183b838 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x132028010 '__SVUint8_t'
|-TypedefDecl 0x13183b8a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x132028030 '__SVUint16_t'
|-TypedefDecl 0x13183b908 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x132028050 '__SVUint32_t'
|-TypedefDecl 0x13183b970 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x132028070 '__SVUint64_t'
|-TypedefDecl 0x13183b9d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x132028090 '__SVFloat16_t'
|-TypedefDecl 0x13183ba40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x1320280b0 '__SVFloat32_t'
|-TypedefDecl 0x13183baa8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x1320280d0 '__SVFloat64_t'
|-TypedefDecl 0x13183bb10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x1320280f0 '__SVBfloat16_t'
|-TypedefDecl 0x13183bb78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x132028110 '__clang_svint8x2_t'
|-TypedefDecl 0x13183bbe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x132028130 '__clang_svint16x2_t'
|-TypedefDecl 0x13183bc48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x132028150 '__clang_svint32x2_t'
|-TypedefDecl 0x13183bcb0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x132028170 '__clang_svint64x2_t'
|-TypedefDecl 0x13183bd18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x132028190 '__clang_svuint8x2_t'
|-TypedefDecl 0x13183bd80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x1320281b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13183bde8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x1320281d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13183be50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x1320281f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13183beb8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x132028210 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13183bf20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x132028230 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13183bf88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x132028250 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13183bff0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x132028270 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13183c058 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x132028290 '__clang_svint8x3_t'
|-TypedefDecl 0x13183c0c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1320282b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13183c128 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1320282d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13183c190 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1320282f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13183c1f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x132028310 '__clang_svuint8x3_t'
|-TypedefDecl 0x13183c260 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x132028330 '__clang_svuint16x3_t'
|-TypedefDecl 0x13183c2c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x132028350 '__clang_svuint32x3_t'
|-TypedefDecl 0x13183c330 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x132028370 '__clang_svuint64x3_t'
|-TypedefDecl 0x13183c398 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x132028390 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13183c400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1320283b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13183c468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1320283d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13183c4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1320283f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13183c538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x132028410 '__clang_svint8x4_t'
|-TypedefDecl 0x13183c5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x132028430 '__clang_svint16x4_t'
|-TypedefDecl 0x13183c608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x132028450 '__clang_svint32x4_t'
|-TypedefDecl 0x13183c670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x132028470 '__clang_svint64x4_t'
|-TypedefDecl 0x13183c6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x132028490 '__clang_svuint8x4_t'
|-TypedefDecl 0x13183c740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1320284b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13183c7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1320284d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13183c810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1320284f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13183c878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x132028510 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13183c8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x132028530 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13183c948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x132028550 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13183c9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x132028570 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13183ca18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x132028590 '__SVBool_t'
|-TypedefDecl 0x13183ca80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1320285b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13183cae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1320285d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13183cb50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1320285f0 '__SVCount_t'
|-TypedefDecl 0x13183cbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13183cbb0 'char *'
|   `-BuiltinType 0x1320278b0 'char'
|-TypedefDecl 0x13183cc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13183cbb0 'char *'
|   `-BuiltinType 0x1320278b0 'char'
`-FunctionDecl 0x131854e00 <dataset_diviso_filec/func13673_nonvuln.c:1:1, line:39:1> line:1:12 bt_seq_show 'int (struct seq_file *, void *)' static
  |-ParmVarDecl 0x13183d248 <col:24, col:41> col:41 used seq 'struct seq_file *'
  |-ParmVarDecl 0x13183d2c8 <col:46, col:52> col:52 used v 'void *'
  `-CompoundStmt 0x1320f4dc0 <line:2:1, line:39:1>
    |-DeclStmt 0x131855148 <line:3:2, col:39>
    | |-RecordDecl 0x131854f00 <col:2, col:9> col:9 struct bt_seq_state
    | `-VarDecl 0x131855068 <col:2, col:32> col:23 used s 'struct bt_seq_state *' cinit
    |   `-RecoveryExpr 0x131855108 <col:27, col:32> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x1318550d0 <col:27> 'struct seq_file *' lvalue ParmVar 0x13183d248 'seq' 'struct seq_file *'
    |-DeclStmt 0x1318553a8 <line:4:2, col:31>
    | |-RecordDecl 0x131855160 <col:2, col:9> col:9 struct bt_sock_list
    | `-VarDecl 0x1318552c8 <col:2, col:30> col:23 used l 'struct bt_sock_list *' cinit
    |   `-RecoveryExpr 0x131855368 <col:27, col:30> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x131855330 <col:27> 'struct bt_seq_state *' contains-errors lvalue Var 0x131855068 's' 'struct bt_seq_state *'
    |-IfStmt 0x1320f4d60 <line:6:2, line:37:2> has_else
    | |-BinaryOperator 0x131855450 <line:6:6, col:11> 'int' contains-errors '=='
    | | |-DeclRefExpr 0x1318553c0 <col:6> 'void *' lvalue ParmVar 0x13183d2c8 'v' 'void *'
    | | `-RecoveryExpr 0x131855430 <col:11> '<dependent type>' contains-errors lvalue
    | |-CompoundStmt 0x131855a88 <col:28, line:15:2>
    | | |-CallExpr 0x131855668 <line:7:3, col:22> 'int'
    | | | |-ImplicitCastExpr 0x131855650 <col:3> 'int (*)()' <FunctionToPointerDecay>
    | | | | `-DeclRefExpr 0x131855580 <col:3> 'int ()' Function 0x1318554c8 'seq_puts' 'int ()'
    | | | |-ImplicitCastExpr 0x131855698 <col:12> 'struct seq_file *' <LValueToRValue>
    | | | | `-DeclRefExpr 0x1318555a0 <col:12> 'struct seq_file *' lvalue ParmVar 0x13183d248 'seq' 'struct seq_file *'
    | | | `-ImplicitCastExpr 0x1318556b0 <col:17> 'char *' <ArrayToPointerDecay>
    | | |   `-StringLiteral 0x131855600 <col:17> 'char[4]' lvalue "STR"
    | | |-IfStmt 0x1318559b0 <line:9:3, line:12:3>
    | | | |-RecoveryExpr 0x131855700 <line:9:7, col:10> '<dependent type>' contains-errors lvalue
    | | | | `-DeclRefExpr 0x1318556c8 <col:7> 'struct bt_sock_list *' contains-errors lvalue Var 0x1318552c8 'l' 'struct bt_sock_list *'
    | | | `-CompoundStmt 0x131855990 <col:27, line:12:3>
    | | |   |-CallExpr 0x131855878 <line:10:4, col:21> 'int'
    | | |   | |-ImplicitCastExpr 0x131855860 <col:4> 'int (*)()' <FunctionToPointerDecay>
    | | |   | | `-DeclRefExpr 0x131855808 <col:4> 'int ()' Function 0x131855750 'seq_putc' 'int ()'
    | | |   | |-ImplicitCastExpr 0x1318558a8 <col:13> 'struct seq_file *' <LValueToRValue>
    | | |   | | `-DeclRefExpr 0x131855828 <col:13> 'struct seq_file *' lvalue ParmVar 0x13183d248 'seq' 'struct seq_file *'
    | | |   | `-CharacterLiteral 0x131855848 <col:18> 'int' 32
    | | |   `-CallExpr 0x131855960 <line:11:4, col:29> '<dependent type>' contains-errors
    | | |     |-RecoveryExpr 0x1318558f8 <col:4, col:7> '<dependent type>' contains-errors lvalue
    | | |     | `-DeclRefExpr 0x1318558c0 <col:4> 'struct bt_sock_list *' contains-errors lvalue Var 0x1318552c8 'l' 'struct bt_sock_list *'
    | | |     |-DeclRefExpr 0x131855920 <col:23> 'struct seq_file *' lvalue ParmVar 0x13183d248 'seq' 'struct seq_file *'
    | | |     `-DeclRefExpr 0x131855940 <col:28> 'void *' lvalue ParmVar 0x13183d2c8 'v' 'void *'
    | | `-CallExpr 0x131855a40 <line:14:3, col:21> 'int'
    | |   |-ImplicitCastExpr 0x131855a28 <col:3> 'int (*)()' <FunctionToPointerDecay>
    | |   | `-DeclRefExpr 0x1318559d0 <col:3> 'int ()' Function 0x131855750 'seq_putc' 'int ()'
    | |   |-ImplicitCastExpr 0x131855a70 <col:12> 'struct seq_file *' <LValueToRValue>
    | |   | `-DeclRefExpr 0x1318559f0 <col:12> 'struct seq_file *' lvalue ParmVar 0x13183d248 'seq' 'struct seq_file *'
    | |   `-CharacterLiteral 0x131855a10 <col:17> 'int' 10
    | `-CompoundStmt 0x1320f4d28 <line:15:9, line:37:2>
    |   |-DeclStmt 0x131857030 <line:16:3, col:32>
    |   | |-RecordDecl 0x131855ab0 <col:3, col:10> col:10 struct sock
    |   | `-VarDecl 0x131855c18 <col:3, col:31> col:16 used sk 'struct sock *' cinit
    |   |   `-ImplicitCastExpr 0x131857000 <col:21, col:31> 'struct sock *' <IntegralToPointer>
    |   |     `-CallExpr 0x131855db8 <col:21, col:31> 'int'
    |   |       |-ImplicitCastExpr 0x131855da0 <col:21> 'int (*)()' <FunctionToPointerDecay>
    |   |       | `-DeclRefExpr 0x131855d60 <col:21> 'int ()' Function 0x131855ca8 'sk_entry' 'int ()'
    |   |       `-ImplicitCastExpr 0x131855de0 <col:30> 'void *' <LValueToRValue>
    |   |         `-DeclRefExpr 0x131855d80 <col:30> 'void *' lvalue ParmVar 0x13183d2c8 'v' 'void *'
    |   |-DeclStmt 0x1318573c8 <line:17:3, col:33>
    |   | |-RecordDecl 0x131857048 <col:3, col:10> col:10 struct bt_sock
    |   | `-VarDecl 0x1318571b8 <col:3, col:32> col:19 used bt 'struct bt_sock *' cinit
    |   |   `-ImplicitCastExpr 0x131857398 <col:24, col:32> 'struct bt_sock *' <IntegralToPointer>
    |   |     `-CallExpr 0x131857358 <col:24, col:32> 'int'
    |   |       |-ImplicitCastExpr 0x131857340 <col:24> 'int (*)()' <FunctionToPointerDecay>
    |   |       | `-DeclRefExpr 0x131857300 <col:24> 'int ()' Function 0x131857248 'bt_sk' 'int ()'
    |   |       `-ImplicitCastExpr 0x131857380 <col:30> 'struct sock *' <LValueToRValue>
    |   |         `-DeclRefExpr 0x131857320 <col:30> 'struct sock *' lvalue Var 0x131855c18 'sk' 'struct sock *'
    |   |-CallExpr 0x1320f49d0 <line:19:3, line:29:46> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x1318574c0 <line:19:3> 'int ()' Function 0x131857408 'seq_printf' 'int ()'
    |   | |-DeclRefExpr 0x1318574e0 <col:14> 'struct seq_file *' lvalue ParmVar 0x13183d248 'seq' 'struct seq_file *'
    |   | |-StringLiteral 0x131857500 <line:20:7> 'char[4]' lvalue "STR"
    |   | |-DeclRefExpr 0x131857520 <line:21:7> 'struct sock *' lvalue Var 0x131855c18 'sk' 'struct sock *'
    |   | |-CallExpr 0x1318576b8 <line:22:7, col:33> '<dependent type>' contains-errors
    |   | | |-DeclRefExpr 0x131857620 <col:7> 'int ()' Function 0x131857568 'atomic_read' 'int ()'
    |   | | `-UnaryOperator 0x1318576a0 <col:19, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | |   `-RecoveryExpr 0x131857678 <col:20, col:24> '<dependent type>' contains-errors lvalue
    |   | |     `-DeclRefExpr 0x131857640 <col:20> 'struct sock *' lvalue Var 0x131855c18 'sk' 'struct sock *'
    |   | |-CallExpr 0x131857818 <line:23:7, col:27> 'int'
    |   | | |-ImplicitCastExpr 0x131857800 <col:7> 'int (*)()' <FunctionToPointerDecay>
    |   | | | `-DeclRefExpr 0x1318577c0 <col:7> 'int ()' Function 0x131857708 'sk_rmem_alloc_get' 'int ()'
    |   | | `-ImplicitCastExpr 0x131857840 <col:25> 'struct sock *' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x1318577e0 <col:25> 'struct sock *' lvalue Var 0x131855c18 'sk' 'struct sock *'
    |   | |-CallExpr 0x131857990 <line:24:7, col:27> 'int'
    |   | | |-ImplicitCastExpr 0x131857978 <col:7> 'int (*)()' <FunctionToPointerDecay>
    |   | | | `-DeclRefExpr 0x131857938 <col:7> 'int ()' Function 0x131857880 'sk_wmem_alloc_get' 'int ()'
    |   | | `-ImplicitCastExpr 0x1318579b8 <col:25> 'struct sock *' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x131857958 <col:25> 'struct sock *' lvalue Var 0x131855c18 'sk' 'struct sock *'
    |   | |-CallExpr 0x131857dd8 <line:25:7, col:49> 'int'
    |   | | |-ImplicitCastExpr 0x131857dc0 <col:7> 'int (*)()' <FunctionToPointerDecay>
    |   | | | `-DeclRefExpr 0x131857ab0 <col:7> 'int ()' Function 0x1318579f8 'from_kuid' 'int ()'
    |   | | |-CallExpr 0x131857c08 <col:17, col:32> 'int'
    |   | | | |-ImplicitCastExpr 0x131857bf0 <col:17> 'int (*)()' <FunctionToPointerDecay>
    |   | | | | `-DeclRefExpr 0x131857bb0 <col:17> 'int ()' Function 0x131857af8 'seq_user_ns' 'int ()'
    |   | | | `-ImplicitCastExpr 0x131857c30 <col:29> 'struct seq_file *' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x131857bd0 <col:29> 'struct seq_file *' lvalue ParmVar 0x13183d248 'seq' 'struct seq_file *'
    |   | | `-CallExpr 0x131857d80 <col:35, col:48> 'int'
    |   | |   |-ImplicitCastExpr 0x131857d68 <col:35> 'int (*)()' <FunctionToPointerDecay>
    |   | |   | `-DeclRefExpr 0x131857d28 <col:35> 'int ()' Function 0x131857c70 'sock_i_uid' 'int ()'
    |   | |   `-ImplicitCastExpr 0x131857da8 <col:46> 'struct sock *' <LValueToRValue>
    |   | |     `-DeclRefExpr 0x131857d48 <col:46> 'struct sock *' lvalue Var 0x131855c18 'sk' 'struct sock *'
    |   | |-CallExpr 0x131857f40 <line:26:7, col:20> 'int'
    |   | | |-ImplicitCastExpr 0x131857f28 <col:7> 'int (*)()' <FunctionToPointerDecay>
    |   | | | `-DeclRefExpr 0x131857ee8 <col:7> 'int ()' Function 0x131857e30 'sock_i_ino' 'int ()'
    |   | | `-ImplicitCastExpr 0x131857f68 <col:18> 'struct sock *' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x131857f08 <col:18> 'struct sock *' lvalue Var 0x131855c18 'sk' 'struct sock *'
    |   | |-UnaryOperator 0x131857fe0 <line:27:7, col:12> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | | `-RecoveryExpr 0x131857fb8 <col:8, col:12> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x131857f80 <col:8> 'struct bt_sock *' lvalue Var 0x1318571b8 'bt' 'struct bt_sock *'
    |   | |-UnaryOperator 0x1320f4860 <line:28:7, col:12> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | | `-RecoveryExpr 0x1320f4838 <col:8, col:12> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x1320f4800 <col:8> 'struct bt_sock *' lvalue Var 0x1318571b8 'bt' 'struct bt_sock *'
    |   | `-ConditionalOperator 0x1320f49a0 <line:29:7, col:43> '<dependent type>' contains-errors
    |   |   |-RecoveryExpr 0x1320f48b0 <col:7, col:11> '<dependent type>' contains-errors lvalue
    |   |   | `-DeclRefExpr 0x1320f4878 <col:7> 'struct bt_sock *' lvalue Var 0x1318571b8 'bt' 'struct bt_sock *'
    |   |   |-CallExpr 0x1320f4958 <col:19, col:40> '<dependent type>' contains-errors
    |   |   | |-DeclRefExpr 0x1320f48d8 <col:19> 'int ()' Function 0x131857e30 'sock_i_ino' 'int ()'
    |   |   | `-RecoveryExpr 0x1320f4930 <col:30, col:34> '<dependent type>' contains-errors lvalue
    |   |   |   `-DeclRefExpr 0x1320f48f8 <col:30> 'struct bt_sock *' lvalue Var 0x1318571b8 'bt' 'struct bt_sock *'
    |   |   `-IntegerLiteral 0x1320f4980 <col:43> 'unsigned long' 0
    |   |-IfStmt 0x1320f4c50 <line:31:3, line:34:3>
    |   | |-RecoveryExpr 0x1320f4a80 <line:31:7, col:10> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x1320f4a48 <col:7> 'struct bt_sock_list *' contains-errors lvalue Var 0x1318552c8 'l' 'struct bt_sock_list *'
    |   | `-CompoundStmt 0x1320f4c30 <col:27, line:34:3>
    |   |   |-CallExpr 0x1320f4b18 <line:32:4, col:21> 'int'
    |   |   | |-ImplicitCastExpr 0x1320f4b00 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |   |   | | `-DeclRefExpr 0x1320f4aa8 <col:4> 'int ()' Function 0x131855750 'seq_putc' 'int ()'
    |   |   | |-ImplicitCastExpr 0x1320f4b48 <col:13> 'struct seq_file *' <LValueToRValue>
    |   |   | | `-DeclRefExpr 0x1320f4ac8 <col:13> 'struct seq_file *' lvalue ParmVar 0x13183d248 'seq' 'struct seq_file *'
    |   |   | `-CharacterLiteral 0x1320f4ae8 <col:18> 'int' 32
    |   |   `-CallExpr 0x1320f4c00 <line:33:4, col:29> '<dependent type>' contains-errors
    |   |     |-RecoveryExpr 0x1320f4b98 <col:4, col:7> '<dependent type>' contains-errors lvalue
    |   |     | `-DeclRefExpr 0x1320f4b60 <col:4> 'struct bt_sock_list *' contains-errors lvalue Var 0x1318552c8 'l' 'struct bt_sock_list *'
    |   |     |-DeclRefExpr 0x1320f4bc0 <col:23> 'struct seq_file *' lvalue ParmVar 0x13183d248 'seq' 'struct seq_file *'
    |   |     `-DeclRefExpr 0x1320f4be0 <col:28> 'void *' lvalue ParmVar 0x13183d2c8 'v' 'void *'
    |   `-CallExpr 0x1320f4ce0 <line:36:3, col:21> 'int'
    |     |-ImplicitCastExpr 0x1320f4cc8 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x1320f4c70 <col:3> 'int ()' Function 0x131855750 'seq_putc' 'int ()'
    |     |-ImplicitCastExpr 0x1320f4d10 <col:12> 'struct seq_file *' <LValueToRValue>
    |     | `-DeclRefExpr 0x1320f4c90 <col:12> 'struct seq_file *' lvalue ParmVar 0x13183d248 'seq' 'struct seq_file *'
    |     `-CharacterLiteral 0x1320f4cb0 <col:17> 'int' 10
    `-ReturnStmt 0x1320f4db0 <line:38:2, col:9>
      `-IntegerLiteral 0x1320f4d90 <col:9> 'int' 0
