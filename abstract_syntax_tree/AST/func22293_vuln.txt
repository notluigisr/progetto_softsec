TranslationUnitDecl 0x12d855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12d8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12d855bd0 '__int128'
|-TypedefDecl 0x12d856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12d855bf0 'unsigned __int128'
|-TypedefDecl 0x12d926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12d926000 'struct __NSConstantString_tag'
|   `-Record 0x12d856580 '__NSConstantString_tag'
|-TypedefDecl 0x12d926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12d855d90 '__SVInt8_t'
|-TypedefDecl 0x12d926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12d855db0 '__SVInt16_t'
|-TypedefDecl 0x12d926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12d855dd0 '__SVInt32_t'
|-TypedefDecl 0x12d9263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12d855df0 '__SVInt64_t'
|-TypedefDecl 0x12d926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12d855e10 '__SVUint8_t'
|-TypedefDecl 0x12d9264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12d855e30 '__SVUint16_t'
|-TypedefDecl 0x12d926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12d855e50 '__SVUint32_t'
|-TypedefDecl 0x12d926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12d855e70 '__SVUint64_t'
|-TypedefDecl 0x12d9265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12d855e90 '__SVFloat16_t'
|-TypedefDecl 0x12d926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12d855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12d9266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12d855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12d926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12d855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12d926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12d855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12d9267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12d855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12d926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12d855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12d9268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12d855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12d926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12d855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12d926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12d855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12d9269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12d855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12d926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12d855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12d926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12d856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12d926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12d856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12d926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12d856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12d926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12d856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12d926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12d856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12d926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12d8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12d926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12d8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12d926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12d8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12d926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12d856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12d926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12d856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12d926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12d856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12d926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12d856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12d926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12d856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12d927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12d8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12d927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12d8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12d9278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12d8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12d927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12d856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12d9279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12d856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12d927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12d856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12d927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12d856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12d927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12d856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12d927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12d8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12d927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12d8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12d927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12d8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12d927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12d856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12d927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12d856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12d927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12d856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12d927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12d856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12d927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12d856390 '__SVBool_t'
|-TypedefDecl 0x12d927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12d8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12d927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12d8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12d927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12d8563f0 '__SVCount_t'
|-TypedefDecl 0x12d927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12d927fb0 'char *'
|   `-BuiltinType 0x12d8556b0 'char'
|-TypedefDecl 0x12d928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12d927fb0 'char *'
|   `-BuiltinType 0x12d8556b0 'char'
|-FunctionDecl 0x12d928508 <dataset_diviso_filec/func22293_vuln.c:1:1, line:50:1> line:1:1 invalid gsicc_open_search 'int (const char *, int, int *, const char *, int, int **)'
| |-ParmVarDecl 0x12d9280d8 <col:19, col:31> col:31 used pname 'const char *'
| |-ParmVarDecl 0x12d928158 <col:38, col:42> col:42 used namelen 'int'
| |-ParmVarDecl 0x12d928228 <col:51, col:64> col:64 invalid mem_gc 'int *'
| |-ParmVarDecl 0x12d9282a8 <line:2:19, col:31> col:31 used dirname 'const char *'
| |-ParmVarDecl 0x12d928328 <col:40, col:44> col:44 used dirlen 'int'
| |-ParmVarDecl 0x12d9283e0 <col:52, col:60> col:60 referenced invalid strp 'int **'
| `-CompoundStmt 0x12e809880 <line:3:1, line:50:1>
|   |-DeclStmt 0x12d928660 <line:4:5, col:17>
|   | `-VarDecl 0x12d9285f8 <col:5, col:11> col:11 used buffer 'char *'
|   |-IfStmt 0x12e008f48 <line:8:5, line:24:5>
|   | |-BinaryOperator 0x12d928728 <line:8:10, col:21> 'int' contains-errors '!='
|   | | |-DeclRefExpr 0x12d9286b0 <col:10> 'const char *' lvalue ParmVar 0x12d9282a8 'dirname' 'const char *'
|   | | `-RecoveryExpr 0x12d928708 <col:21> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x12e008ef8 <col:27, line:24:5>
|   |   |-BinaryOperator 0x12d941ac8 <line:10:9, line:11:43> 'char *' contains-errors '='
|   |   | |-DeclRefExpr 0x12d928748 <line:10:9> 'char *' lvalue Var 0x12d9285f8 'buffer' 'char *'
|   |   | `-CStyleCastExpr 0x12d941aa0 <col:18, line:11:43> 'char *' contains-errors <Dependent>
|   |   |   `-CallExpr 0x12d941a50 <line:10:27, line:11:43> '<dependent type>' contains-errors
|   |   |     |-DeclRefExpr 0x12d9418e0 <line:10:27> 'int ()' Function 0x12d941828 'gs_alloc_bytes' 'int ()'
|   |   |     |-RecoveryExpr 0x12d941900 <col:42> '<dependent type>' contains-errors lvalue
|   |   |     |-BinaryOperator 0x12d9419d0 <col:50, col:69> 'int' '+'
|   |   |     | |-BinaryOperator 0x12d941990 <col:50, col:60> 'int' '+'
|   |   |     | | |-ImplicitCastExpr 0x12d941960 <col:50> 'int' <LValueToRValue>
|   |   |     | | | `-DeclRefExpr 0x12d941920 <col:50> 'int' lvalue ParmVar 0x12d928158 'namelen' 'int'
|   |   |     | | `-ImplicitCastExpr 0x12d941978 <col:60> 'int' <LValueToRValue>
|   |   |     | |   `-DeclRefExpr 0x12d941940 <col:60> 'int' lvalue ParmVar 0x12d928328 'dirlen' 'int'
|   |   |     | `-IntegerLiteral 0x12d9419b0 <col:69> 'int' 1
|   |   |     `-StringLiteral 0x12d941a30 <line:11:38> 'char[4]' lvalue "STR"
|   |   |-IfStmt 0x12d941d08 <line:12:9, line:13:42>
|   |   | |-BinaryOperator 0x12d941b60 <line:12:13, col:23> 'int' contains-errors '=='
|   |   | | |-DeclRefExpr 0x12d941ae8 <col:13> 'char *' lvalue Var 0x12d9285f8 'buffer' 'char *'
|   |   | | `-RecoveryExpr 0x12d941b40 <col:23> '<dependent type>' contains-errors lvalue
|   |   | `-CallExpr 0x12d941ce0 <line:13:13, col:42> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x12d941c60 <col:13> 'int ()' Function 0x12d941ba8 'return_error' 'int ()'
|   |   |   `-RecoveryExpr 0x12d941cc0 <col:26> '<dependent type>' contains-errors lvalue
|   |   |-CallExpr 0x12d942448 <line:14:9, col:31> 'char *'
|   |   | |-ImplicitCastExpr 0x12d942430 <col:9> 'char *(*)(char *, const char *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x12d942370 <col:9> 'char *(char *, const char *)' Function 0x12d942190 'strcpy' 'char *(char *, const char *)'
|   |   | |-ImplicitCastExpr 0x12d942478 <col:16> 'char *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x12d942390 <col:16> 'char *' lvalue Var 0x12d9285f8 'buffer' 'char *'
|   |   | `-ImplicitCastExpr 0x12d942490 <col:24> 'const char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x12d9423b0 <col:24> 'const char *' lvalue ParmVar 0x12d9282a8 'dirname' 'const char *'
|   |   |-CallExpr 0x12d942730 <line:15:9, col:29> 'char *'
|   |   | |-ImplicitCastExpr 0x12d942718 <col:9> 'char *(*)(char *, const char *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x12d942688 <col:9> 'char *(char *, const char *)' Function 0x12d9424a8 'strcat' 'char *(char *, const char *)'
|   |   | |-ImplicitCastExpr 0x12d942760 <col:16> 'char *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x12d9426a8 <col:16> 'char *' lvalue Var 0x12d9285f8 'buffer' 'char *'
|   |   | `-ImplicitCastExpr 0x12d942778 <col:24> 'const char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x12d9426c8 <col:24> 'const char *' lvalue ParmVar 0x12d9280d8 'pname' 'const char *'
|   |   |-BinaryOperator 0x12e0088b8 <line:17:9, col:36> 'char' '='
|   |   | |-ArraySubscriptExpr 0x12e008868 <col:9, col:32> 'char' lvalue
|   |   | | |-ImplicitCastExpr 0x12e008850 <col:9> 'char *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x12d942790 <col:9> 'char *' lvalue Var 0x12d9285f8 'buffer' 'char *'
|   |   | | `-BinaryOperator 0x12e008830 <col:16, col:26> 'int' '+'
|   |   | |   |-ImplicitCastExpr 0x12e008800 <col:16> 'int' <LValueToRValue>
|   |   | |   | `-DeclRefExpr 0x12d9427b0 <col:16> 'int' lvalue ParmVar 0x12d928158 'namelen' 'int'
|   |   | |   `-ImplicitCastExpr 0x12e008818 <col:26> 'int' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x12d9427d0 <col:26> 'int' lvalue ParmVar 0x12d928328 'dirlen' 'int'
|   |   | `-ImplicitCastExpr 0x12e0088a0 <col:36> 'char' <IntegralCast>
|   |   |   `-CharacterLiteral 0x12e008888 <col:36> 'int' 0
|   |   |-BinaryOperator 0x12e008ab8 <line:18:9, col:43> '<dependent type>' contains-errors '='
|   |   | |-RecoveryExpr 0x12e0088f8 <col:9> '<dependent type>' contains-errors lvalue
|   |   | | `-DeclRefExpr 0x12e0088d8 <col:9> 'int **' lvalue ParmVar 0x12d9283e0 'strp' 'int **'
|   |   | `-CallExpr 0x12e008a80 <col:15, col:43> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x12e008a00 <col:15> 'int ()' Function 0x12e008948 'sfopen' 'int ()'
|   |   |   |-DeclRefExpr 0x12e008a20 <col:22> 'char *' lvalue Var 0x12d9285f8 'buffer' 'char *'
|   |   |   |-StringLiteral 0x12e008a40 <col:30> 'char[4]' lvalue "STR"
|   |   |   `-RecoveryExpr 0x12e008a60 <col:37> '<dependent type>' contains-errors lvalue
|   |   |-CallExpr 0x12e008c38 <line:19:9, col:45> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x12e008bb8 <col:9> 'int ()' Function 0x12e008b00 'gs_free_object' 'int ()'
|   |   | |-RecoveryExpr 0x12e008bd8 <col:24> '<dependent type>' contains-errors lvalue
|   |   | |-DeclRefExpr 0x12e008bf8 <col:32> 'char *' lvalue Var 0x12d9285f8 'buffer' 'char *'
|   |   | `-StringLiteral 0x12e008c18 <col:40> 'char[4]' lvalue "STR"
|   |   `-IfStmt 0x12e008ed8 <line:20:9, line:23:9>
|   |     |-BinaryOperator 0x12e008d20 <line:20:13, col:20> 'int' contains-errors '!='
|   |     | |-RecoveryExpr 0x12e008ce0 <col:13> '<dependent type>' contains-errors lvalue
|   |     | `-RecoveryExpr 0x12e008d00 <col:20> '<dependent type>' contains-errors lvalue
|   |     `-CompoundStmt 0x12e008eb8 <col:26, line:23:9>
|   |       |-BinaryOperator 0x12e008e68 <line:21:13, col:21> '<dependent type>' contains-errors '='
|   |       | |-UnaryOperator 0x12e008e30 <col:13, col:14> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |       | | `-ImplicitCastExpr 0x12e008e18 <col:14> '<dependent type>' contains-errors <LValueToRValue>
|   |       | |   `-RecoveryExpr 0x12e008d40 <col:14> '<dependent type>' contains-errors lvalue
|   |       | `-RecoveryExpr 0x12e008e48 <col:21> '<dependent type>' contains-errors lvalue
|   |       `-ReturnStmt 0x12e008ea8 <line:22:6, col:13>
|   |         `-IntegerLiteral 0x12e008e88 <col:13> 'int' 0
|   |-BinaryOperator 0x12e009068 <line:27:5, col:38> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x12e008f88 <col:5> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x12e008f68 <col:5> 'int **' lvalue ParmVar 0x12d9283e0 'strp' 'int **'
|   | `-CallExpr 0x12e009030 <col:11, col:38> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x12e008fb0 <col:11> 'int ()' Function 0x12e008948 'sfopen' 'int ()'
|   |   |-DeclRefExpr 0x12e008fd0 <col:18> 'const char *' lvalue ParmVar 0x12d9280d8 'pname' 'const char *'
|   |   |-StringLiteral 0x12e008ff0 <col:25> 'char[4]' lvalue "STR"
|   |   `-RecoveryExpr 0x12e009010 <col:32> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x12e009140 <line:28:5, line:31:5>
|   | |-RecoveryExpr 0x12e009088 <line:28:9, col:16> '_Bool' contains-errors
|   | `-CompoundStmt 0x12e009128 <col:22, line:31:5>
|   |   `-ReturnStmt 0x12e009118 <line:30:9, col:16>
|   |     `-IntegerLiteral 0x12e0090f8 <col:16> 'int' 0
|   |-CallExpr 0x12e009570 <line:40:5, col:25> 'char *'
|   | |-ImplicitCastExpr 0x12e009558 <col:5> 'char *(*)(char *, const char *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x12e0094c8 <col:5> 'char *(char *, const char *)' Function 0x12d9424a8 'strcat' 'char *(char *, const char *)'
|   | |-ImplicitCastExpr 0x12e0095a0 <col:12> 'char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x12e0094e8 <col:12> 'char *' lvalue Var 0x12d9285f8 'buffer' 'char *'
|   | `-ImplicitCastExpr 0x12e0095b8 <col:20> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x12e009508 <col:20> 'const char *' lvalue ParmVar 0x12d9280d8 'pname' 'const char *'
|   |-CallExpr 0x12e009780 <line:44:5, col:41> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x12e009700 <col:5> 'int ()' Function 0x12e008b00 'gs_free_object' 'int ()'
|   | |-RecoveryExpr 0x12e009720 <col:20> '<dependent type>' contains-errors lvalue
|   | |-DeclRefExpr 0x12e009740 <col:28> 'char *' lvalue Var 0x12d9285f8 'buffer' 'char *'
|   | `-StringLiteral 0x12e009760 <col:36> 'char[4]' lvalue "STR"
|   |-IfStmt 0x12e8097e0 <line:45:5, line:47:5>
|   | |-RecoveryExpr 0x12e0097b8 <line:45:9, col:16> '_Bool' contains-errors
|   | `-CompoundStmt 0x12e8097c8 <col:22, line:47:5>
|   |   `-CallExpr 0x12e809768 <line:46:9, col:29> 'int'
|   |     |-ImplicitCastExpr 0x12e809750 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x12e8096b8 <col:9> 'int ()' Function 0x12e809600 'gs_warn1' 'int ()'
|   |     |-ImplicitCastExpr 0x12e809798 <col:18> 'char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x12e8096d8 <col:18> 'char[4]' lvalue "STR"
|   |     `-ImplicitCastExpr 0x12e8097b0 <col:24> 'const char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x12e8096f8 <col:24> 'const char *' lvalue ParmVar 0x12d9280d8 'pname' 'const char *'
|   `-ReturnStmt 0x12e809870 <line:49:5, col:12>
|     `-IntegerLiteral 0x12e809850 <col:12> 'int' 0
|-FunctionDecl 0x12d942190 <line:14:9> col:9 implicit used strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x12d942290 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x12d9422f8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x12d942238 <<invalid sloc>> Implicit 885
|-FunctionDecl 0x12d9424a8 <line:15:9> col:9 implicit used strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x12d9425a8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x12d942610 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x12d942550 <<invalid sloc>> Implicit 889
`-FunctionDecl 0x12e009278 <line:36:25> col:25 implicit used strlen 'unsigned long (const char *)' extern
  |-ParmVarDecl 0x12e009378 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x12e009320 <<invalid sloc>> Implicit 902
