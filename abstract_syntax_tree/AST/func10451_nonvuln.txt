TranslationUnitDecl 0x12c855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12c8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12c855bd0 '__int128'
|-TypedefDecl 0x12c856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12c855bf0 'unsigned __int128'
|-TypedefDecl 0x12d00be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12d00bc00 'struct __NSConstantString_tag'
|   `-Record 0x12c856580 '__NSConstantString_tag'
|-TypedefDecl 0x12d00be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12c855d90 '__SVInt8_t'
|-TypedefDecl 0x12d00bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12c855db0 '__SVInt16_t'
|-TypedefDecl 0x12d00bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12c855dd0 '__SVInt32_t'
|-TypedefDecl 0x12d00bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12c855df0 '__SVInt64_t'
|-TypedefDecl 0x12d00c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12c855e10 '__SVUint8_t'
|-TypedefDecl 0x12d00c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12c855e30 '__SVUint16_t'
|-TypedefDecl 0x12d00c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12c855e50 '__SVUint32_t'
|-TypedefDecl 0x12d00c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12c855e70 '__SVUint64_t'
|-TypedefDecl 0x12d00c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12c855e90 '__SVFloat16_t'
|-TypedefDecl 0x12d00c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12c855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12d00c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12c855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12d00c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12c855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12d00c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12c855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12d00c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12c855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12d00c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12c855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12d00c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12c855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12d00c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12c855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12d00c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12c855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12d00c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12c855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12d00c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12c855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12d00c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12c856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12d00c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12c856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12d00c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12c856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12d00c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12c856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12d00c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12c856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12d00c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12c8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12d00c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12c8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12d00c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12c8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12d00c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12c856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12d00ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12c856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12d00cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12c856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12d00cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12c856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12d00cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12c856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12d00d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12c8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12d00d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12c8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12d00d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12c8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12d00d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12c856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12d00d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12c856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12d00d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12c856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12d00d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12c856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12d00d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12c856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12d00d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12c8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12d00d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12c8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12d00d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12c8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12d00d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12c856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12d00d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12c856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12d00d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12c856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12d00d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12c856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12d00da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12c856390 '__SVBool_t'
|-TypedefDecl 0x12d00da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12c8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12d00dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12c8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12d00db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12c8563f0 '__SVCount_t'
|-TypedefDecl 0x12d00dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12d00dbb0 'char *'
|   `-BuiltinType 0x12c8556b0 'char'
|-TypedefDecl 0x12d00dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12d00dbb0 'char *'
|   `-BuiltinType 0x12c8556b0 'char'
`-FunctionDecl 0x12d0274d8 <dataset_diviso_filec/func10451_nonvuln.c:1:1, line:14:1> line:1:7 invalid sock_kmalloc 'void *(struct sock *, int, int)'
  |-ParmVarDecl 0x12d00e248 <col:20, col:33> col:33 used sk 'struct sock *'
  |-ParmVarDecl 0x12d00e2c8 <col:37, col:41> col:41 used size 'int'
  |-ParmVarDecl 0x12d00e360 <col:47, col:53> col:53 invalid priority 'int'
  `-CompoundStmt 0x12d028160 <line:2:1, line:14:1>
    |-IfStmt 0x12d0280f8 <line:3:2, line:12:2>
    | |-BinaryOperator 0x12d027a28 <line:3:6, line:4:47> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x12d0279c8 <line:3:6, col:28> 'int' contains-errors '<='
    | | | |-CStyleCastExpr 0x12d027980 <col:6, col:20> 'unsigned int' <IntegralCast>
    | | | | `-ImplicitCastExpr 0x12d027968 <col:20> 'int' <LValueToRValue> part_of_explicit_cast
    | | | |   `-DeclRefExpr 0x12d027598 <col:20> 'int' lvalue ParmVar 0x12d00e2c8 'size' 'int'
    | | | `-RecoveryExpr 0x12d0279a8 <col:28> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x12d027a08 <line:4:6, col:47> 'int' contains-errors '<'
    | |   |-BinaryOperator 0x12d027880 <col:6, col:40> '<dependent type>' contains-errors '+'
    | |   | |-CallExpr 0x12d027838 <col:6, col:36> '<dependent type>' contains-errors
    | |   | | |-DeclRefExpr 0x12d0277a0 <col:6> 'int ()' Function 0x12d0276e8 'atomic_read' 'int ()'
    | |   | | `-UnaryOperator 0x12d027820 <col:18, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |   | |   `-RecoveryExpr 0x12d0277f8 <col:19, col:23> '<dependent type>' contains-errors lvalue
    | |   | |     `-DeclRefExpr 0x12d0277c0 <col:19> 'struct sock *' lvalue ParmVar 0x12d00e248 'sk' 'struct sock *'
    | |   | `-DeclRefExpr 0x12d027860 <col:40> 'int' lvalue ParmVar 0x12d00e2c8 'size' 'int'
    | |   `-RecoveryExpr 0x12d0279e8 <col:47> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x12d0280c0 <col:66, line:12:2>
    |   |-DeclStmt 0x12d027ac8 <line:5:3, col:12>
    |   | `-VarDecl 0x12d027a60 <col:3, col:9> col:9 used mem 'void *'
    |   |-CallExpr 0x12d027c78 <line:7:3, col:38> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x12d027bc0 <col:3> 'int ()' Function 0x12d027b08 'atomic_add' 'int ()'
    |   | |-DeclRefExpr 0x12d027be0 <col:14> 'int' lvalue ParmVar 0x12d00e2c8 'size' 'int'
    |   | `-UnaryOperator 0x12d027c60 <col:20, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   `-RecoveryExpr 0x12d027c38 <col:21, col:25> '<dependent type>' contains-errors lvalue
    |   |     `-DeclRefExpr 0x12d027c00 <col:21> 'struct sock *' lvalue ParmVar 0x12d00e248 'sk' 'struct sock *'
    |   |-BinaryOperator 0x12d027e38 <line:8:3, col:31> 'void *' contains-errors '='
    |   | |-DeclRefExpr 0x12d027ca8 <col:3> 'void *' lvalue Var 0x12d027a60 'mem' 'void *'
    |   | `-CallExpr 0x12d027e08 <col:9, col:31> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x12d027da8 <col:9> 'int ()' Function 0x12d027cf0 'kmalloc' 'int ()'
    |   |   |-DeclRefExpr 0x12d027dc8 <col:17> 'int' lvalue ParmVar 0x12d00e2c8 'size' 'int'
    |   |   `-RecoveryExpr 0x12d027de8 <col:23> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x12d027ed8 <line:9:3, line:10:11>
    |   | |-ImplicitCastExpr 0x12d027e78 <line:9:7> 'void *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x12d027e58 <col:7> 'void *' lvalue Var 0x12d027a60 'mem' 'void *'
    |   | `-ReturnStmt 0x12d027ec8 <line:10:4, col:11>
    |   |   `-ImplicitCastExpr 0x12d027eb0 <col:11> 'void *' <LValueToRValue>
    |   |     `-DeclRefExpr 0x12d027e90 <col:11> 'void *' lvalue Var 0x12d027a60 'mem' 'void *'
    |   `-CallExpr 0x12d028090 <line:11:3, col:38> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x12d027fd8 <col:3> 'int ()' Function 0x12d027f20 'atomic_sub' 'int ()'
    |     |-DeclRefExpr 0x12d027ff8 <col:14> 'int' lvalue ParmVar 0x12d00e2c8 'size' 'int'
    |     `-UnaryOperator 0x12d028078 <col:20, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow
    |       `-RecoveryExpr 0x12d028050 <col:21, col:25> '<dependent type>' contains-errors lvalue
    |         `-DeclRefExpr 0x12d028018 <col:21> 'struct sock *' lvalue ParmVar 0x12d00e248 'sk' 'struct sock *'
    `-ReturnStmt 0x12d028150 <line:13:2, col:9>
      `-RecoveryExpr 0x12d028130 <col:9> '<dependent type>' contains-errors lvalue
