TranslationUnitDecl 0x13e855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13e8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13e855bd0 '__int128'
|-TypedefDecl 0x13e856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13e855bf0 'unsigned __int128'
|-TypedefDecl 0x13e926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13e926000 'struct __NSConstantString_tag'
|   `-Record 0x13e856580 '__NSConstantString_tag'
|-TypedefDecl 0x13e926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13e855d90 '__SVInt8_t'
|-TypedefDecl 0x13e926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13e855db0 '__SVInt16_t'
|-TypedefDecl 0x13e926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13e855dd0 '__SVInt32_t'
|-TypedefDecl 0x13e9263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13e855df0 '__SVInt64_t'
|-TypedefDecl 0x13e926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13e855e10 '__SVUint8_t'
|-TypedefDecl 0x13e9264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13e855e30 '__SVUint16_t'
|-TypedefDecl 0x13e926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13e855e50 '__SVUint32_t'
|-TypedefDecl 0x13e926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13e855e70 '__SVUint64_t'
|-TypedefDecl 0x13e9265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13e855e90 '__SVFloat16_t'
|-TypedefDecl 0x13e926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13e855eb0 '__SVFloat32_t'
|-TypedefDecl 0x13e9266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13e855ed0 '__SVFloat64_t'
|-TypedefDecl 0x13e926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13e855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13e926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13e855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13e9267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13e855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13e926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13e855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13e9268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13e855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13e926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13e855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13e926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13e855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13e9269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13e855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13e926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13e855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13e926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13e856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13e926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13e856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13e926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13e856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13e926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13e856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13e926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13e856090 '__clang_svint8x3_t'
|-TypedefDecl 0x13e926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13e8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13e926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13e8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13e926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13e8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13e926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13e856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13e926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13e856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13e926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13e856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13e926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13e856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13e926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13e856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13e927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13e8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13e927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13e8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13e9278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13e8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13e927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13e856210 '__clang_svint8x4_t'
|-TypedefDecl 0x13e9279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13e856230 '__clang_svint16x4_t'
|-TypedefDecl 0x13e927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13e856250 '__clang_svint32x4_t'
|-TypedefDecl 0x13e927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13e856270 '__clang_svint64x4_t'
|-TypedefDecl 0x13e927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13e856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13e927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13e8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13e927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13e8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13e927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13e8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13e927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13e856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13e927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13e856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13e927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13e856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13e927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13e856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13e927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13e856390 '__SVBool_t'
|-TypedefDecl 0x13e927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13e8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13e927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13e8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13e927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13e8563f0 '__SVCount_t'
|-TypedefDecl 0x13e927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13e927fb0 'char *'
|   `-BuiltinType 0x13e8556b0 'char'
|-TypedefDecl 0x13e928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13e927fb0 'char *'
|   `-BuiltinType 0x13e8556b0 'char'
`-FunctionDecl 0x13e9283a8 <dataset_diviso_filec/func19395_vuln.c:1:1, line:45:1> line:1:12 invalid local_mknod 'int (int *, int *, const char *, int *)' static
  |-ParmVarDecl 0x13e928128 <col:24, col:35> col:35 invalid fs_ctx 'int *'
  |-ParmVarDecl 0x13e9281a8 <col:43, col:53> col:53 invalid dir_path 'int *'
  |-ParmVarDecl 0x13e928228 <line:2:24, col:36> col:36 used name 'const char *'
  |-ParmVarDecl 0x13e9282a8 <col:42, col:50> col:50 invalid credp 'int *'
  `-CompoundStmt 0x13f022200 <line:3:1, line:45:1>
    |-DeclStmt 0x13e928528 <line:4:5, col:17>
    | `-VarDecl 0x13e928488 <col:5, col:16> col:9 used err 'int' cinit
    |   `-UnaryOperator 0x13e928510 <col:15, col:16> 'int' prefix '-'
    |     `-IntegerLiteral 0x13e9284f0 <col:16> 'int' 1
    |-DeclStmt 0x13e9285c0 <line:5:5, col:14>
    | `-VarDecl 0x13e928558 <col:5, col:9> col:9 used dirfd 'int'
    |-BinaryOperator 0x13e928e30 <line:7:5, col:58> 'int' contains-errors '='
    | |-DeclRefExpr 0x13e9285d8 <col:5> 'int' lvalue Var 0x13e928558 'dirfd' 'int'
    | `-CallExpr 0x13e928e00 <col:13, col:58> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13e928750 <col:13> 'int ()' Function 0x13e928698 'local_opendir_nofollow' 'int ()'
    |   |-RecoveryExpr 0x13e928770 <col:36> '<dependent type>' contains-errors lvalue
    |   `-CXXDependentScopeMemberExpr 0x13e9287b0 <col:44, col:54> '<dependent type>' contains-errors lvalue ->data
    |     `-RecoveryExpr 0x13e928790 <col:44> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x13e928f40 <line:8:5, line:10:5>
    | |-BinaryOperator 0x13e928ec0 <line:8:9, col:19> 'int' '=='
    | | |-ImplicitCastExpr 0x13e928ea8 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x13e928e50 <col:9> 'int' lvalue Var 0x13e928558 'dirfd' 'int'
    | | `-UnaryOperator 0x13e928e90 <col:18, col:19> 'int' prefix '-'
    | |   `-IntegerLiteral 0x13e928e70 <col:19> 'int' 1
    | `-CompoundStmt 0x13e928f28 <col:22, line:10:5>
    |   `-ReturnStmt 0x13e928f18 <line:9:9, col:17>
    |     `-UnaryOperator 0x13e928f00 <col:16, col:17> 'int' prefix '-'
    |       `-IntegerLiteral 0x13e928ee0 <col:17> 'int' 1
    |-IfStmt 0x13f021da0 <line:12:5, line:37:5> has_else
    | |-BinaryOperator 0x13e929140 <line:12:9, line:13:32> 'int' contains-errors '||'
    | | |-BinaryOperator 0x13e9290e0 <line:12:9, col:32> '<dependent type>' contains-errors '&'
    | | | |-CXXDependentScopeMemberExpr 0x13e928f80 <col:9, col:17> '<dependent type>' contains-errors lvalue ->export_flags
    | | | | `-RecoveryExpr 0x13e928f60 <col:9> '<dependent type>' contains-errors lvalue
    | | | `-RecoveryExpr 0x13e9290c0 <col:32> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x13e929120 <line:13:9, col:32> '<dependent type>' contains-errors '&'
    | |   |-CXXDependentScopeMemberExpr 0x13e929020 <col:9, col:17> '<dependent type>' contains-errors lvalue ->export_flags
    | |   | `-RecoveryExpr 0x13e929000 <col:9> '<dependent type>' contains-errors lvalue
    | |   `-RecoveryExpr 0x13e929100 <col:32> '<dependent type>' contains-errors lvalue
    | |-CompoundStmt 0x13e929ba0 <col:53, line:27:5>
    | | |-BinaryOperator 0x13e929430 <line:14:9, col:67> 'int' contains-errors '='
    | | | |-DeclRefExpr 0x13e929160 <col:9> 'int' lvalue Var 0x13e928488 'err' 'int'
    | | | `-CallExpr 0x13e9293f0 <col:15, col:67> '<dependent type>' contains-errors
    | | |   |-DeclRefExpr 0x13e929260 <col:15> 'int ()' Function 0x13e9291a8 'mknodat' 'int ()'
    | | |   |-DeclRefExpr 0x13e929280 <col:23> 'int' lvalue Var 0x13e928558 'dirfd' 'int'
    | | |   |-DeclRefExpr 0x13e9292a0 <col:30> 'const char *' lvalue ParmVar 0x13e928228 'name' 'const char *'
    | | |   |-BinaryOperator 0x13e9293d0 <col:36, col:57> '<dependent type>' contains-errors '|'
    | | |   | |-RecoveryExpr 0x13e929390 <col:36> '<dependent type>' contains-errors lvalue
    | | |   | `-RecoveryExpr 0x13e9293b0 <col:57> '<dependent type>' contains-errors lvalue
    | | |   `-IntegerLiteral 0x13e929310 <col:66> 'int' 0
    | | |-IfStmt 0x13e929560 <line:15:9, line:17:9>
    | | | |-BinaryOperator 0x13e9294c0 <line:15:13, col:21> 'int' '=='
    | | | | |-ImplicitCastExpr 0x13e9294a8 <col:13> 'int' <LValueToRValue>
    | | | | | `-DeclRefExpr 0x13e929450 <col:13> 'int' lvalue Var 0x13e928488 'err' 'int'
    | | | | `-UnaryOperator 0x13e929490 <col:20, col:21> 'int' prefix '-'
    | | | |   `-IntegerLiteral 0x13e929470 <col:21> 'int' 1
    | | | `-CompoundStmt 0x13e929548 <col:24, line:17:9>
    | | |   `-GotoStmt 0x13e929530 <line:16:13, col:18> 'out' 0x13e9294e0
    | | |-IfStmt 0x13e929a40 <line:19:9, line:23:9> has_else
    | | | |-BinaryOperator 0x13e929640 <line:19:13, col:36> '<dependent type>' contains-errors '&'
    | | | | |-CXXDependentScopeMemberExpr 0x13e9295a0 <col:13, col:21> '<dependent type>' contains-errors lvalue ->export_flags
    | | | | | `-RecoveryExpr 0x13e929580 <col:13> '<dependent type>' contains-errors lvalue
    | | | | `-RecoveryExpr 0x13e929620 <col:36> '<dependent type>' contains-errors lvalue
    | | | |-CompoundStmt 0x13e929838 <col:52, line:21:9>
    | | | | `-BinaryOperator 0x13e929818 <line:20:13, col:55> 'int' contains-errors '='
    | | | |   |-DeclRefExpr 0x13e929660 <col:13> 'int' lvalue Var 0x13e928488 'err' 'int'
    | | | |   `-CallExpr 0x13e9297e0 <col:19, col:55> '<dependent type>' contains-errors
    | | | |     |-DeclRefExpr 0x13e929760 <col:19> 'int ()' Function 0x13e9296a8 'local_set_xattrat' 'int ()'
    | | | |     |-DeclRefExpr 0x13e929780 <col:37> 'int' lvalue Var 0x13e928558 'dirfd' 'int'
    | | | |     |-DeclRefExpr 0x13e9297a0 <col:44> 'const char *' lvalue ParmVar 0x13e928228 'name' 'const char *'
    | | | |     `-RecoveryExpr 0x13e9297c0 <col:50> '<dependent type>' contains-errors lvalue
    | | | `-CompoundStmt 0x13e929a28 <line:21:16, line:23:9>
    | | |   `-BinaryOperator 0x13e929a08 <line:22:13, col:66> 'int' contains-errors '='
    | | |     |-DeclRefExpr 0x13e929850 <col:13> 'int' lvalue Var 0x13e928488 'err' 'int'
    | | |     `-CallExpr 0x13e9299d0 <col:19, col:66> '<dependent type>' contains-errors
    | | |       |-DeclRefExpr 0x13e929950 <col:19> 'int ()' Function 0x13e929898 'local_set_mapped_file_attrat' 'int ()'
    | | |       |-DeclRefExpr 0x13e929970 <col:48> 'int' lvalue Var 0x13e928558 'dirfd' 'int'
    | | |       |-DeclRefExpr 0x13e929990 <col:55> 'const char *' lvalue ParmVar 0x13e928228 'name' 'const char *'
    | | |       `-RecoveryExpr 0x13e9299b0 <col:61> '<dependent type>' contains-errors lvalue
    | | `-IfStmt 0x13e929b80 <line:24:9, line:26:9>
    | |   |-BinaryOperator 0x13e929ae0 <line:24:13, col:21> 'int' '=='
    | |   | |-ImplicitCastExpr 0x13e929ac8 <col:13> 'int' <LValueToRValue>
    | |   | | `-DeclRefExpr 0x13e929a70 <col:13> 'int' lvalue Var 0x13e928488 'err' 'int'
    | |   | `-UnaryOperator 0x13e929ab0 <col:20, col:21> 'int' prefix '-'
    | |   |   `-IntegerLiteral 0x13e929a90 <col:21> 'int' 1
    | |   `-CompoundStmt 0x13e929b68 <col:24, line:26:9>
    | |     `-GotoStmt 0x13e929b50 <line:25:13, col:18> 'err_end' 0x13e929b00
    | `-IfStmt 0x13f021d80 <line:27:12, line:37:5>
    |   |-BinaryOperator 0x13e929db0 <line:27:16, line:28:39> 'int' contains-errors '||'
    |   | |-BinaryOperator 0x13e929d50 <line:27:16, col:39> '<dependent type>' contains-errors '&'
    |   | | |-CXXDependentScopeMemberExpr 0x13e929bf0 <col:16, col:24> '<dependent type>' contains-errors lvalue ->export_flags
    |   | | | `-RecoveryExpr 0x13e929bd0 <col:16> '<dependent type>' contains-errors lvalue
    |   | | `-RecoveryExpr 0x13e929d30 <col:39> '<dependent type>' contains-errors lvalue
    |   | `-BinaryOperator 0x13e929d90 <line:28:16, col:39> '<dependent type>' contains-errors '&'
    |   |   |-CXXDependentScopeMemberExpr 0x13e929c90 <col:16, col:24> '<dependent type>' contains-errors lvalue ->export_flags
    |   |   | `-RecoveryExpr 0x13e929c70 <col:16> '<dependent type>' contains-errors lvalue
    |   |   `-RecoveryExpr 0x13e929d70 <col:39> '<dependent type>' contains-errors lvalue
    |   `-CompoundStmt 0x13f021d50 <col:53, line:37:5>
    |     |-BinaryOperator 0x13f021970 <line:29:9, col:66> 'int' contains-errors '='
    |     | |-DeclRefExpr 0x13e929dd0 <col:9> 'int' lvalue Var 0x13e928488 'err' 'int'
    |     | `-CallExpr 0x13f021930 <col:15, col:66> '<dependent type>' contains-errors
    |     |   |-DeclRefExpr 0x13f021800 <col:15> 'int ()' Function 0x13e9291a8 'mknodat' 'int ()'
    |     |   |-DeclRefExpr 0x13f021820 <col:23> 'int' lvalue Var 0x13e928558 'dirfd' 'int'
    |     |   |-DeclRefExpr 0x13f021840 <col:30> 'const char *' lvalue ParmVar 0x13e928228 'name' 'const char *'
    |     |   |-CXXDependentScopeMemberExpr 0x13f021880 <col:36, col:43> '<dependent type>' contains-errors lvalue ->fc_mode
    |     |   | `-RecoveryExpr 0x13f021860 <col:36> '<dependent type>' contains-errors lvalue
    |     |   `-CXXDependentScopeMemberExpr 0x13f0218e8 <col:52, col:59> '<dependent type>' contains-errors lvalue ->fc_rdev
    |     |     `-RecoveryExpr 0x13f0218c8 <col:52> '<dependent type>' contains-errors lvalue
    |     |-IfStmt 0x13f021a50 <line:30:9, line:32:9>
    |     | |-BinaryOperator 0x13f021a00 <line:30:13, col:21> 'int' '=='
    |     | | |-ImplicitCastExpr 0x13f0219e8 <col:13> 'int' <LValueToRValue>
    |     | | | `-DeclRefExpr 0x13f021990 <col:13> 'int' lvalue Var 0x13e928488 'err' 'int'
    |     | | `-UnaryOperator 0x13f0219d0 <col:20, col:21> 'int' prefix '-'
    |     | |   `-IntegerLiteral 0x13f0219b0 <col:21> 'int' 1
    |     | `-CompoundStmt 0x13f021a38 <col:24, line:32:9>
    |     |   `-GotoStmt 0x13f021a20 <line:31:13, col:18> 'out' 0x13e9294e0
    |     |-BinaryOperator 0x13f021c50 <line:33:9, col:68> 'int' contains-errors '='
    |     | |-DeclRefExpr 0x13f021a70 <col:9> 'int' lvalue Var 0x13e928488 'err' 'int'
    |     | `-CallExpr 0x13f021c10 <col:15, col:68> '<dependent type>' contains-errors
    |     |   |-DeclRefExpr 0x13f021b70 <col:15> 'int ()' Function 0x13f021ab8 'local_set_cred_passthrough' 'int ()'
    |     |   |-RecoveryExpr 0x13f021b90 <col:42> '<dependent type>' contains-errors lvalue
    |     |   |-DeclRefExpr 0x13f021bb0 <col:50> 'int' lvalue Var 0x13e928558 'dirfd' 'int'
    |     |   |-DeclRefExpr 0x13f021bd0 <col:57> 'const char *' lvalue ParmVar 0x13e928228 'name' 'const char *'
    |     |   `-RecoveryExpr 0x13f021bf0 <col:63> '<dependent type>' contains-errors lvalue
    |     `-IfStmt 0x13f021d30 <line:34:9, line:36:9>
    |       |-BinaryOperator 0x13f021ce0 <line:34:13, col:21> 'int' '=='
    |       | |-ImplicitCastExpr 0x13f021cc8 <col:13> 'int' <LValueToRValue>
    |       | | `-DeclRefExpr 0x13f021c70 <col:13> 'int' lvalue Var 0x13e928488 'err' 'int'
    |       | `-UnaryOperator 0x13f021cb0 <col:20, col:21> 'int' prefix '-'
    |       |   `-IntegerLiteral 0x13f021c90 <col:21> 'int' 1
    |       `-CompoundStmt 0x13f021d18 <col:24, line:36:9>
    |         `-GotoStmt 0x13f021d00 <line:35:13, col:18> 'err_end' 0x13e929b00
    |-GotoStmt 0x13f021dd0 <line:38:5, col:10> 'out' 0x13e9294e0
    |-LabelStmt 0x13f022000 <line:40:1, line:41:43> 'err_end'
    | `-CallExpr 0x13f021f98 <col:5, col:43> 'int'
    |   |-ImplicitCastExpr 0x13f021f80 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x13f021ec8 <col:5> 'int ()' Function 0x13f021e10 'unlinkat_preserve_errno' 'int ()'
    |   |-ImplicitCastExpr 0x13f021fd0 <col:29> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x13f021ee8 <col:29> 'int' lvalue Var 0x13e928558 'dirfd' 'int'
    |   |-ImplicitCastExpr 0x13f021fe8 <col:36> 'const char *' <LValueToRValue>
    |   | `-DeclRefExpr 0x13f021f08 <col:36> 'const char *' lvalue ParmVar 0x13e928228 'name' 'const char *'
    |   `-IntegerLiteral 0x13f021f28 <col:42> 'int' 0
    |-LabelStmt 0x13f022198 <line:42:1, line:43:31> 'out'
    | `-CallExpr 0x13f022158 <col:5, col:31> 'int'
    |   |-ImplicitCastExpr 0x13f022140 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x13f022100 <col:5> 'int ()' Function 0x13f022048 'close_preserve_errno' 'int ()'
    |   `-ImplicitCastExpr 0x13f022180 <col:26> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x13f022120 <col:26> 'int' lvalue Var 0x13e928558 'dirfd' 'int'
    `-ReturnStmt 0x13f0221f0 <line:44:5, col:12>
      `-ImplicitCastExpr 0x13f0221d8 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x13f0221b8 <col:12> 'int' lvalue Var 0x13e928488 'err' 'int'
