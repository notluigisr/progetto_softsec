TranslationUnitDecl 0x136055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1360564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x136055bd0 '__int128'
|-TypedefDecl 0x136056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x136055bf0 'unsigned __int128'
|-TypedefDecl 0x13680be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13680bc00 'struct __NSConstantString_tag'
|   `-Record 0x136056580 '__NSConstantString_tag'
|-TypedefDecl 0x13680be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x136055d90 '__SVInt8_t'
|-TypedefDecl 0x13680bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x136055db0 '__SVInt16_t'
|-TypedefDecl 0x13680bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x136055dd0 '__SVInt32_t'
|-TypedefDecl 0x13680bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x136055df0 '__SVInt64_t'
|-TypedefDecl 0x13680c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x136055e10 '__SVUint8_t'
|-TypedefDecl 0x13680c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x136055e30 '__SVUint16_t'
|-TypedefDecl 0x13680c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x136055e50 '__SVUint32_t'
|-TypedefDecl 0x13680c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x136055e70 '__SVUint64_t'
|-TypedefDecl 0x13680c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x136055e90 '__SVFloat16_t'
|-TypedefDecl 0x13680c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x136055eb0 '__SVFloat32_t'
|-TypedefDecl 0x13680c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x136055ed0 '__SVFloat64_t'
|-TypedefDecl 0x13680c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x136055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13680c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x136055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13680c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x136055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13680c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x136055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13680c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x136055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13680c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x136055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13680c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x136055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13680c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x136055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13680c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x136055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13680c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x136056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13680c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x136056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13680c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x136056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13680c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x136056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13680c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x136056090 '__clang_svint8x3_t'
|-TypedefDecl 0x13680c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1360560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13680c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1360560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13680c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1360560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13680c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x136056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13680ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x136056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13680cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x136056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13680cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x136056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13680cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x136056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13680d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1360561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13680d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1360561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13680d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1360561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13680d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x136056210 '__clang_svint8x4_t'
|-TypedefDecl 0x13680d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x136056230 '__clang_svint16x4_t'
|-TypedefDecl 0x13680d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x136056250 '__clang_svint32x4_t'
|-TypedefDecl 0x13680d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x136056270 '__clang_svint64x4_t'
|-TypedefDecl 0x13680d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x136056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13680d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1360562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13680d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1360562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13680d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1360562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13680d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x136056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13680d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x136056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13680d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x136056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13680d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x136056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13680da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x136056390 '__SVBool_t'
|-TypedefDecl 0x13680da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1360563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13680dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1360563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13680db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1360563f0 '__SVCount_t'
|-TypedefDecl 0x13680dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13680dbb0 'char *'
|   `-BuiltinType 0x1360556b0 'char'
|-TypedefDecl 0x13680dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13680dbb0 'char *'
|   `-BuiltinType 0x1360556b0 'char'
`-FunctionDecl 0x13680de38 <dataset_diviso_filec/func18986_nonvuln.c:1:1, line:33:1> line:1:12 do_vm86_irq_handling 'int (int, int)' static
  |-ParmVarDecl 0x13680dcd8 <col:33, col:37> col:37 used subfunction 'int'
  |-ParmVarDecl 0x13680dd58 <col:50, col:54> col:54 used irqnumber 'int'
  `-CompoundStmt 0x136122720 <line:2:1, line:33:1>
    |-DeclStmt 0x13680dfb8 <line:3:2, col:9>
    | `-VarDecl 0x13680df50 <col:2, col:6> col:6 used ret 'int'
    `-SwitchStmt 0x13680e008 <line:4:2, line:31:2>
      |-ImplicitCastExpr 0x13680dff0 <line:4:10> 'int' <LValueToRValue>
      | `-DeclRefExpr 0x13680dfd0 <col:10> 'int' lvalue ParmVar 0x13680dcd8 'subfunction' 'int'
      `-CompoundStmt 0x1361226f0 <col:23, line:31:2>
        |-CompoundStmt 0x13680e248 <line:5:32, line:7:3>
        | `-ReturnStmt 0x13680e238 <line:6:4, col:38>
        |   `-CallExpr 0x13680e1f8 <col:11, col:38> 'int'
        |     |-ImplicitCastExpr 0x13680e1e0 <col:11> 'int (*)()' <FunctionToPointerDecay>
        |     | `-DeclRefExpr 0x13680e170 <col:11> 'int ()' Function 0x13680e0b8 'get_and_reset_irq' 'int ()'
        |     `-ImplicitCastExpr 0x13680e220 <col:29> 'int' <LValueToRValue>
        |       `-DeclRefExpr 0x13680e190 <col:29> 'int' lvalue ParmVar 0x13680dd58 'irqnumber' 'int'
        |-CompoundStmt 0x13680e2c0 <line:8:27, line:10:3>
        | `-ReturnStmt 0x13680e2b0 <line:9:4, col:11>
        |   `-RecoveryExpr 0x13680e290 <col:11> '<dependent type>' contains-errors lvalue
        |-CompoundStmt 0x136828550 <line:11:26, line:23:3>
        | |-DeclStmt 0x13680e3e8 <line:12:4, col:28>
        | | `-VarDecl 0x13680e308 <col:4, col:27> col:8 used sig 'int' cinit
        | |   `-BinaryOperator 0x13680e3c8 <col:14, col:27> 'int' '>>'
        | |     |-ImplicitCastExpr 0x13680e3b0 <col:14> 'int' <LValueToRValue>
        | |     | `-DeclRefExpr 0x13680e370 <col:14> 'int' lvalue ParmVar 0x13680dd58 'irqnumber' 'int'
        | |     `-IntegerLiteral 0x13680e390 <col:27> 'int' 8
        | |-DeclStmt 0x1368278f8 <line:13:4, col:29>
        | | `-VarDecl 0x136827818 <col:4, col:26> col:8 used irq 'int' cinit
        | |   `-BinaryOperator 0x1368278d8 <col:14, col:26> 'int' '&'
        | |     |-ImplicitCastExpr 0x1368278c0 <col:14> 'int' <LValueToRValue>
        | |     | `-DeclRefExpr 0x136827880 <col:14> 'int' lvalue ParmVar 0x13680dd58 'irqnumber' 'int'
        | |     `-IntegerLiteral 0x1368278a0 <col:26> 'int' 255
        | |-IfStmt 0x136827b70 <line:14:4, col:41>
        | | |-UnaryOperator 0x136827ab0 <col:8, col:30> '<dependent type>' contains-errors prefix '!' cannot overflow
        | | | `-CallExpr 0x136827a88 <col:9, col:30> '<dependent type>' contains-errors
        | | |   |-DeclRefExpr 0x1368279f0 <col:9> 'int ()' Function 0x136827938 'capable' 'int ()'
        | | |   `-RecoveryExpr 0x136827a68 <col:17> '<dependent type>' contains-errors lvalue
        | | `-ReturnStmt 0x136827b60 <col:33, col:41>
        | |   `-UnaryOperator 0x136827b48 <col:40, col:41> '<dependent type>' contains-errors prefix '-' cannot overflow
        | |     `-ImplicitCastExpr 0x136827b30 <col:41> '<dependent type>' contains-errors <LValueToRValue>
        | |       `-RecoveryExpr 0x136827b10 <col:41> '<dependent type>' contains-errors lvalue
        | |-IfStmt 0x136827d80 <line:15:4, col:46>
        | | |-RecoveryExpr 0x136827cb8 <col:8, col:35> '_Bool' contains-errors
        | | `-ReturnStmt 0x136827d70 <col:38, col:46>
        | |   `-UnaryOperator 0x136827d58 <col:45, col:46> '<dependent type>' contains-errors prefix '-' cannot overflow
        | |     `-ImplicitCastExpr 0x136827d40 <col:46> '<dependent type>' contains-errors <LValueToRValue>
        | |       `-RecoveryExpr 0x136827d20 <col:46> '<dependent type>' contains-errors lvalue
        | |-IfStmt 0x136827fc0 <line:16:4, col:39>
        | | |-CallExpr 0x136827ed8 <col:8, col:28> 'int'
        | | | |-ImplicitCastExpr 0x136827ec0 <col:8> 'int (*)()' <FunctionToPointerDecay>
        | | | | `-DeclRefExpr 0x136827e80 <col:8> 'int ()' Function 0x136827dc8 'invalid_vm86_irq' 'int ()'
        | | | `-ImplicitCastExpr 0x136827f00 <col:25> 'int' <LValueToRValue>
        | | |   `-DeclRefExpr 0x136827ea0 <col:25> 'int' lvalue Var 0x136827818 'irq' 'int'
        | | `-ReturnStmt 0x136827fb0 <col:31, col:39>
        | |   `-UnaryOperator 0x136827f98 <col:38, col:39> '<dependent type>' contains-errors prefix '-' cannot overflow
        | |     `-ImplicitCastExpr 0x136827f80 <col:39> '<dependent type>' contains-errors <LValueToRValue>
        | |       `-RecoveryExpr 0x136827f60 <col:39> '<dependent type>' contains-errors lvalue
        | |-IfStmt 0x1368280e0 <line:17:4, col:36>
        | | |-RecoveryExpr 0x136828018 <col:8, col:23> '_Bool' contains-errors
        | | `-ReturnStmt 0x1368280d0 <col:28, col:36>
        | |   `-UnaryOperator 0x1368280b8 <col:35, col:36> '<dependent type>' contains-errors prefix '-' cannot overflow
        | |     `-ImplicitCastExpr 0x1368280a0 <col:36> '<dependent type>' contains-errors <LValueToRValue>
        | |       `-RecoveryExpr 0x136828080 <col:36> '<dependent type>' contains-errors lvalue
        | |-BinaryOperator 0x1368283e8 <line:18:4, col:62> 'int' contains-errors '='
        | | |-DeclRefExpr 0x136828100 <col:4> 'int' lvalue Var 0x13680df50 'ret' 'int'
        | | `-CallExpr 0x1368283a0 <col:10, col:62> '<dependent type>' contains-errors
        | |   |-DeclRefExpr 0x136828200 <col:10> 'int ()' Function 0x136828148 'request_irq' 'int ()'
        | |   |-DeclRefExpr 0x136828220 <col:22> 'int' lvalue Var 0x136827818 'irq' 'int'
        | |   |-UnaryOperator 0x136828348 <col:27, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow
        | |   | `-RecoveryExpr 0x136828328 <col:28> '<dependent type>' contains-errors lvalue
        | |   |-IntegerLiteral 0x136828270 <col:41> 'int' 0
        | |   |-RecoveryExpr 0x136828360 <col:44> '<dependent type>' contains-errors lvalue
        | |   `-RecoveryExpr 0x136828380 <col:58> '<dependent type>' contains-errors lvalue
        | |-IfStmt 0x136828488 <line:19:4, col:20>
        | | |-ImplicitCastExpr 0x136828428 <col:8> 'int' <LValueToRValue>
        | | | `-DeclRefExpr 0x136828408 <col:8> 'int' lvalue Var 0x13680df50 'ret' 'int'
        | | `-ReturnStmt 0x136828478 <col:13, col:20>
        | |   `-ImplicitCastExpr 0x136828460 <col:20> 'int' <LValueToRValue>
        | |     `-DeclRefExpr 0x136828440 <col:20> 'int' lvalue Var 0x13680df50 'ret' 'int'
        | `-ReturnStmt 0x136828540 <line:22:4, col:11>
        |   `-ImplicitCastExpr 0x136828528 <col:11> 'int' <LValueToRValue>
        |     `-DeclRefExpr 0x136828508 <col:11> 'int' lvalue Var 0x136827818 'irq' 'int'
        `-CompoundStmt 0x1361226c8 <line:24:24, line:30:3>
          |-IfStmt 0x1368286b0 <line:26:4, col:42>
          | |-RecoveryExpr 0x136828660 <col:8, col:30> '_Bool' contains-errors
          | `-ReturnStmt 0x1368286a0 <col:35, col:42>
          |   `-IntegerLiteral 0x136828680 <col:42> 'int' 0
          |-CallExpr 0x136122658 <line:28:4, col:27> 'int'
          | |-ImplicitCastExpr 0x136122640 <col:4> 'int (*)()' <FunctionToPointerDecay>
          | | `-DeclRefExpr 0x136122600 <col:4> 'int ()' Function 0x136828738 'free_vm86_irq' 'int ()'
          | `-ImplicitCastExpr 0x136122680 <col:18> 'int' <LValueToRValue>
          |   `-DeclRefExpr 0x136122620 <col:18> 'int' lvalue ParmVar 0x13680dd58 'irqnumber' 'int'
          `-ReturnStmt 0x1361226b8 <line:29:4, col:11>
            `-IntegerLiteral 0x136122698 <col:11> 'int' 0
