TranslationUnitDecl 0x149055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1490564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x149055bd0 '__int128'
|-TypedefDecl 0x149056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x149055bf0 'unsigned __int128'
|-TypedefDecl 0x149126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x149126000 'struct __NSConstantString_tag'
|   `-Record 0x149056580 '__NSConstantString_tag'
|-TypedefDecl 0x149126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x149055d90 '__SVInt8_t'
|-TypedefDecl 0x149126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x149055db0 '__SVInt16_t'
|-TypedefDecl 0x149126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x149055dd0 '__SVInt32_t'
|-TypedefDecl 0x1491263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x149055df0 '__SVInt64_t'
|-TypedefDecl 0x149126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x149055e10 '__SVUint8_t'
|-TypedefDecl 0x1491264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x149055e30 '__SVUint16_t'
|-TypedefDecl 0x149126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x149055e50 '__SVUint32_t'
|-TypedefDecl 0x149126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x149055e70 '__SVUint64_t'
|-TypedefDecl 0x1491265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x149055e90 '__SVFloat16_t'
|-TypedefDecl 0x149126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x149055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1491266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x149055ed0 '__SVFloat64_t'
|-TypedefDecl 0x149126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x149055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x149126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x149055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1491267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x149055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x149126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x149055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1491268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x149055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x149126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x149055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x149126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x149055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1491269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x149055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x149126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x149055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x149126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x149056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x149126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x149056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x149126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x149056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x149126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x149056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x149126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x149056090 '__clang_svint8x3_t'
|-TypedefDecl 0x149126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1490560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x149126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1490560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x149126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1490560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x149126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x149056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x149126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x149056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x149126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x149056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x149126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x149056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x149126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x149056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x149127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1490561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x149127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1490561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1491278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1490561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x149127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x149056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1491279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x149056230 '__clang_svint16x4_t'
|-TypedefDecl 0x149127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x149056250 '__clang_svint32x4_t'
|-TypedefDecl 0x149127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x149056270 '__clang_svint64x4_t'
|-TypedefDecl 0x149127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x149056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x149127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1490562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x149127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1490562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x149127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1490562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x149127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x149056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x149127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x149056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x149127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x149056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x149127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x149056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x149127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x149056390 '__SVBool_t'
|-TypedefDecl 0x149127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1490563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x149127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1490563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x149127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1490563f0 '__SVCount_t'
|-TypedefDecl 0x149127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x149127fb0 'char *'
|   `-BuiltinType 0x1490556b0 'char'
|-TypedefDecl 0x149128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x149127fb0 'char *'
|   `-BuiltinType 0x1490556b0 'char'
|-FunctionDecl 0x149128328 <dataset_diviso_filec/func4246_vuln.c:1:1, line:56:1> line:1:5 main 'int (int, char **)'
| |-ParmVarDecl 0x1491280d8 <col:10, col:14> col:14 used argc 'int'
| |-ParmVarDecl 0x149128200 <col:20, col:31> col:26 used argv 'char **'
| `-CompoundStmt 0x149144600 <line:2:1, line:56:1>
|   |-IfStmt 0x149141be0 <line:3:5, line:7:5>
|   | |-BinaryOperator 0x149128480 <line:3:9, col:17> 'int' '!='
|   | | |-ImplicitCastExpr 0x149128468 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x149128428 <col:9> 'int' lvalue ParmVar 0x1491280d8 'argc' 'int'
|   | | `-IntegerLiteral 0x149128448 <col:17> 'int' 4
|   | `-CompoundStmt 0x149141bc0 <line:4:5, line:7:5>
|   |   |-RecoveryExpr 0x1491284e8 <line:5:2> '<dependent type>' contains-errors lvalue
|   |   `-CallExpr 0x149141b98 <line:6:2, col:8> 'void'
|   |     |-ImplicitCastExpr 0x149141b80 <col:2> 'void (*)(int) __attribute__((noreturn))' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x149141b10 <col:2> 'void (int) __attribute__((noreturn))' Function 0x1491419a0 'exit' 'void (int) __attribute__((noreturn))'
|   |     `-IntegerLiteral 0x149141b30 <col:7> 'int' 2
|   |-DeclStmt 0x149141d10 <line:9:5, col:27>
|   | `-VarDecl 0x149141c18 <col:5, col:26> col:11 used hexkey 'char *' cinit
|   |   `-ImplicitCastExpr 0x149141cf8 <col:20, col:26> 'char *' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x149141cd8 <col:20, col:26> 'char *' lvalue
|   |       |-ImplicitCastExpr 0x149141cc0 <col:20> 'char **' <LValueToRValue>
|   |       | `-DeclRefExpr 0x149141c80 <col:20> 'char **' lvalue ParmVar 0x149128200 'argv' 'char **'
|   |       `-IntegerLiteral 0x149141ca0 <col:25> 'int' 1
|   |-DeclStmt 0x149141e38 <line:10:5, col:31>
|   | `-VarDecl 0x149141d40 <col:5, col:30> col:11 infilename 'char *' cinit
|   |   `-ImplicitCastExpr 0x149141e20 <col:24, col:30> 'char *' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x149141e00 <col:24, col:30> 'char *' lvalue
|   |       |-ImplicitCastExpr 0x149141de8 <col:24> 'char **' <LValueToRValue>
|   |       | `-DeclRefExpr 0x149141da8 <col:24> 'char **' lvalue ParmVar 0x149128200 'argv' 'char **'
|   |       `-IntegerLiteral 0x149141dc8 <col:29> 'int' 2
|   |-DeclStmt 0x149141f60 <line:11:5, col:32>
|   | `-VarDecl 0x149141e68 <col:5, col:31> col:11 outfilename 'char *' cinit
|   |   `-ImplicitCastExpr 0x149141f48 <col:25, col:31> 'char *' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x149141f28 <col:25, col:31> 'char *' lvalue
|   |       |-ImplicitCastExpr 0x149141f10 <col:25> 'char **' <LValueToRValue>
|   |       | `-DeclRefExpr 0x149141ed0 <col:25> 'char **' lvalue ParmVar 0x149128200 'argv' 'char **'
|   |       `-IntegerLiteral 0x149141ef0 <col:30> 'int' 3
|   |-DeclStmt 0x1491422b8 <line:12:5, col:44>
|   | `-VarDecl 0x149141f90 <col:5, col:43> col:18 used hexkeylen 'unsigned int' cinit
|   |   `-ImplicitCastExpr 0x1491422a0 <col:30, col:43> 'unsigned int' <IntegralCast>
|   |     `-CallExpr 0x149142248 <col:30, col:43> 'unsigned long'
|   |       |-ImplicitCastExpr 0x149142230 <col:30> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x1491421a8 <col:30> 'unsigned long (const char *)' Function 0x149142038 'strlen' 'unsigned long (const char *)'
|   |       `-ImplicitCastExpr 0x149142288 <col:37> 'const char *' <NoOp>
|   |         `-ImplicitCastExpr 0x149142270 <col:37> 'char *' <LValueToRValue>
|   |           `-DeclRefExpr 0x1491421c8 <col:37> 'char *' lvalue Var 0x149141c18 'hexkey' 'char *'
|   |-DeclStmt 0x1491423e0 <line:13:5, col:40>
|   | `-VarDecl 0x1491422e8 <col:5, col:39> col:18 used keylen 'unsigned int' cinit
|   |   `-BinaryOperator 0x1491423c0 <col:27, col:39> 'unsigned int' '/'
|   |     |-ImplicitCastExpr 0x149142390 <col:27> 'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x149142350 <col:27> 'unsigned int' lvalue Var 0x149141f90 'hexkeylen' 'unsigned int'
|   |     `-ImplicitCastExpr 0x1491423a8 <col:39> 'unsigned int' <IntegralCast>
|   |       `-IntegerLiteral 0x149142370 <col:39> 'int' 2
|   |-DeclStmt 0x1491424e8 <line:14:5, col:30>
|   | `-VarDecl 0x149142448 <col:5, col:26> col:20 used key 'unsigned char *' cinit
|   |   `-RecoveryExpr 0x1491424c8 <col:26> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x149142650 <line:15:5, col:19> 'unsigned char' contains-errors '='
|   | |-ArraySubscriptExpr 0x149142600 <col:5, col:15> 'unsigned char' contains-errors lvalue
|   | | |-ImplicitCastExpr 0x1491425d0 <col:5> 'unsigned char *' contains-errors <LValueToRValue>
|   | | | `-DeclRefExpr 0x149142590 <col:5> 'unsigned char *' contains-errors lvalue Var 0x149142448 'key' 'unsigned char *'
|   | | `-ImplicitCastExpr 0x1491425e8 <col:9> 'unsigned int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1491425b0 <col:9> 'unsigned int' lvalue Var 0x1491422e8 'keylen' 'unsigned int'
|   | `-ImplicitCastExpr 0x149142638 <col:19> 'unsigned char' <IntegralCast>
|   |   `-CharacterLiteral 0x149142620 <col:19> 'int' 0
|   |-ForStmt 0x1491433b8 <line:18:5, line:27:5>
|   | |-DeclStmt 0x149142758 <line:18:10, col:28>
|   | | `-VarDecl 0x1491426b8 <col:10, col:27> col:23 used i 'unsigned int' cinit
|   | |   `-ImplicitCastExpr 0x149142740 <col:27> 'unsigned int' <IntegralCast>
|   | |     `-IntegerLiteral 0x149142720 <col:27> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x149142888 <col:30, col:47> 'int' '<'
|   | | |-ImplicitCastExpr 0x149142870 <col:30> 'unsigned long' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x149142858 <col:30> 'unsigned int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x149142770 <col:30> 'unsigned int' lvalue Var 0x1491426b8 'i' 'unsigned int'
|   | | `-CallExpr 0x149142800 <col:34, col:47> 'unsigned long'
|   | |   |-ImplicitCastExpr 0x1491427e8 <col:34> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x149142790 <col:34> 'unsigned long (const char *)' Function 0x149142038 'strlen' 'unsigned long (const char *)'
|   | |   `-ImplicitCastExpr 0x149142840 <col:41> 'const char *' <NoOp>
|   | |     `-ImplicitCastExpr 0x149142828 <col:41> 'char *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x1491427b0 <col:41> 'char *' lvalue Var 0x149141c18 'hexkey' 'char *'
|   | |-CompoundAssignOperator 0x149142900 <col:50, col:55> 'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   | | |-DeclRefExpr 0x1491428a8 <col:50> 'unsigned int' lvalue Var 0x1491426b8 'i' 'unsigned int'
|   | | `-ImplicitCastExpr 0x1491428e8 <col:55> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x1491428c8 <col:55> 'int' 2
|   | `-CompoundStmt 0x149143380 <line:19:5, line:27:5>
|   |   |-DeclStmt 0x149142a38 <line:20:2, col:11>
|   |   | `-VarDecl 0x1491429d0 <col:2, col:10> col:7 used t 'char[3]'
|   |   |-BinaryOperator 0x149142b70 <line:21:2, col:17> 'char' '='
|   |   | |-ArraySubscriptExpr 0x149142aa8 <col:2, col:5> 'char' lvalue
|   |   | | |-ImplicitCastExpr 0x149142a90 <col:2> 'char *' <ArrayToPointerDecay>
|   |   | | | `-DeclRefExpr 0x149142a50 <col:2> 'char[3]' lvalue Var 0x1491429d0 't' 'char[3]'
|   |   | | `-IntegerLiteral 0x149142a70 <col:4> 'int' 0
|   |   | `-ImplicitCastExpr 0x149142b58 <col:9, col:17> 'char' <LValueToRValue>
|   |   |   `-ArraySubscriptExpr 0x149142b38 <col:9, col:17> 'char' lvalue
|   |   |     |-ImplicitCastExpr 0x149142b08 <col:9> 'char *' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x149142ac8 <col:9> 'char *' lvalue Var 0x149141c18 'hexkey' 'char *'
|   |   |     `-ImplicitCastExpr 0x149142b20 <col:16> 'unsigned int' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x149142ae8 <col:16> 'unsigned int' lvalue Var 0x1491426b8 'i' 'unsigned int'
|   |   |-BinaryOperator 0x149142d08 <line:22:2, col:21> 'char' '='
|   |   | |-ArraySubscriptExpr 0x149142be8 <col:2, col:5> 'char' lvalue
|   |   | | |-ImplicitCastExpr 0x149142bd0 <col:2> 'char *' <ArrayToPointerDecay>
|   |   | | | `-DeclRefExpr 0x149142b90 <col:2> 'char[3]' lvalue Var 0x1491429d0 't' 'char[3]'
|   |   | | `-IntegerLiteral 0x149142bb0 <col:4> 'int' 1
|   |   | `-ImplicitCastExpr 0x149142cf0 <col:9, col:21> 'char' <LValueToRValue>
|   |   |   `-ArraySubscriptExpr 0x149142cd0 <col:9, col:21> 'char' lvalue
|   |   |     |-ImplicitCastExpr 0x149142cb8 <col:9> 'char *' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x149142c08 <col:9> 'char *' lvalue Var 0x149141c18 'hexkey' 'char *'
|   |   |     `-BinaryOperator 0x149142c98 <col:16, col:20> 'unsigned int' '+'
|   |   |       |-ImplicitCastExpr 0x149142c68 <col:16> 'unsigned int' <LValueToRValue>
|   |   |       | `-DeclRefExpr 0x149142c28 <col:16> 'unsigned int' lvalue Var 0x1491426b8 'i' 'unsigned int'
|   |   |       `-ImplicitCastExpr 0x149142c80 <col:20> 'unsigned int' <IntegralCast>
|   |   |         `-IntegerLiteral 0x149142c48 <col:20> 'int' 1
|   |   |-BinaryOperator 0x149142dd0 <line:23:2, col:9> 'char' '='
|   |   | |-ArraySubscriptExpr 0x149142d80 <col:2, col:5> 'char' lvalue
|   |   | | |-ImplicitCastExpr 0x149142d68 <col:2> 'char *' <ArrayToPointerDecay>
|   |   | | | `-DeclRefExpr 0x149142d28 <col:2> 'char[3]' lvalue Var 0x1491429d0 't' 'char[3]'
|   |   | | `-IntegerLiteral 0x149142d48 <col:4> 'int' 2
|   |   | `-ImplicitCastExpr 0x149142db8 <col:9> 'char' <IntegralCast>
|   |   |   `-CharacterLiteral 0x149142da0 <col:9> 'int' 0
|   |   `-DeclStmt 0x149143268 <line:25:2, col:29>
|   |     `-VarDecl 0x149142e08 <col:2, col:28> col:7 val 'long' cinit
|   |       `-CallExpr 0x1491431e8 <col:13, col:28> 'long'
|   |         |-ImplicitCastExpr 0x1491431d0 <col:13> 'long (*)(const char *, char **, int)' <FunctionToPointerDecay>
|   |         | `-DeclRefExpr 0x149143108 <col:13> 'long (const char *, char **, int)' Function 0x149142eb8 'strtol' 'long (const char *, char **, int)'
|   |         |-ImplicitCastExpr 0x149143238 <col:20> 'const char *' <NoOp>
|   |         | `-ImplicitCastExpr 0x149143220 <col:20> 'char *' <ArrayToPointerDecay>
|   |         |   `-DeclRefExpr 0x149143128 <col:20> 'char[3]' lvalue Var 0x1491429d0 't' 'char[3]'
|   |         |-ImplicitCastExpr 0x149143250 <col:23> 'char **' <NullToPointer>
|   |         | `-IntegerLiteral 0x149143148 <col:23> 'int' 0
|   |         `-IntegerLiteral 0x149143168 <col:26> 'int' 16
|   |-DeclStmt 0x149143560 <line:36:5, col:27>
|   | `-VarDecl 0x1491434f8 <col:5, col:26> col:19 used buf 'unsigned char[100]'
|   |-WhileStmt 0x149143660 <line:38:5, line:49:5>
|   | |-RecoveryExpr 0x149143578 <line:38:12, col:14> '_Bool' contains-errors
|   | `-CompoundStmt 0x149143648 <line:39:5, line:49:5>
|   |   `-IfStmt 0x149143618 <line:41:2, line:48:2> has_else
|   |     |-RecoveryExpr 0x1491435b8 <line:41:6, col:13> '_Bool' contains-errors
|   |     |-CompoundStmt 0x1491435d8 <line:42:2, line:44:2>
|   |     `-CompoundStmt 0x149143608 <line:46:2, line:48:2>
|   `-ReturnStmt 0x1491437f0 <line:55:5, col:12>
|     `-IntegerLiteral 0x1491437d0 <col:12> 'int' 0
|-FunctionDecl 0x1491419a0 <line:6:2> col:2 implicit used exit 'void (int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x149141aa0 <<invalid sloc>> <invalid sloc> 'int'
| `-BuiltinAttr 0x149141a48 <<invalid sloc>> Implicit 869
|-FunctionDecl 0x149142038 <line:12:30> col:30 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x149142138 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x1491420e0 <<invalid sloc>> Implicit 902
`-FunctionDecl 0x149142eb8 <line:25:13> col:13 implicit used strtol 'long (const char *, char **, int)' extern
  |-ParmVarDecl 0x149142fb8 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x149143020 <<invalid sloc>> <invalid sloc> 'char **'
  |-ParmVarDecl 0x149143088 <<invalid sloc>> <invalid sloc> 'int'
  `-BuiltinAttr 0x149142f60 <<invalid sloc>> Implicit 877
