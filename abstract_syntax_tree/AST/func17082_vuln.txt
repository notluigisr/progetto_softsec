TranslationUnitDecl 0x11f855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x11f8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x11f855bd0 '__int128'
|-TypedefDecl 0x11f856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x11f855bf0 'unsigned __int128'
|-TypedefDecl 0x11f926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x11f926000 'struct __NSConstantString_tag'
|   `-Record 0x11f856580 '__NSConstantString_tag'
|-TypedefDecl 0x11f926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x11f855d90 '__SVInt8_t'
|-TypedefDecl 0x11f926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x11f855db0 '__SVInt16_t'
|-TypedefDecl 0x11f926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x11f855dd0 '__SVInt32_t'
|-TypedefDecl 0x11f9263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x11f855df0 '__SVInt64_t'
|-TypedefDecl 0x11f926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x11f855e10 '__SVUint8_t'
|-TypedefDecl 0x11f9264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x11f855e30 '__SVUint16_t'
|-TypedefDecl 0x11f926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x11f855e50 '__SVUint32_t'
|-TypedefDecl 0x11f926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x11f855e70 '__SVUint64_t'
|-TypedefDecl 0x11f9265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x11f855e90 '__SVFloat16_t'
|-TypedefDecl 0x11f926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x11f855eb0 '__SVFloat32_t'
|-TypedefDecl 0x11f9266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x11f855ed0 '__SVFloat64_t'
|-TypedefDecl 0x11f926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x11f855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x11f926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x11f855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x11f9267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x11f855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x11f926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x11f855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x11f9268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x11f855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x11f926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x11f855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x11f926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x11f855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x11f9269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x11f855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x11f926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x11f855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x11f926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x11f856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x11f926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x11f856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x11f926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x11f856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x11f926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x11f856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x11f926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x11f856090 '__clang_svint8x3_t'
|-TypedefDecl 0x11f926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x11f8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x11f926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x11f8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x11f926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x11f8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x11f926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x11f856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x11f926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x11f856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x11f926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x11f856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x11f926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x11f856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x11f926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x11f856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x11f927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x11f8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x11f927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x11f8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x11f9278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x11f8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x11f927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x11f856210 '__clang_svint8x4_t'
|-TypedefDecl 0x11f9279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x11f856230 '__clang_svint16x4_t'
|-TypedefDecl 0x11f927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x11f856250 '__clang_svint32x4_t'
|-TypedefDecl 0x11f927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x11f856270 '__clang_svint64x4_t'
|-TypedefDecl 0x11f927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x11f856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x11f927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x11f8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x11f927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x11f8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x11f927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x11f8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x11f927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x11f856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x11f927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x11f856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x11f927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x11f856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x11f927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x11f856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x11f927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x11f856390 '__SVBool_t'
|-TypedefDecl 0x11f927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x11f8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x11f927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x11f8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x11f927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x11f8563f0 '__SVCount_t'
|-TypedefDecl 0x11f927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x11f927fb0 'char *'
|   `-BuiltinType 0x11f8556b0 'char'
|-TypedefDecl 0x11f928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x11f927fb0 'char *'
|   `-BuiltinType 0x11f8556b0 'char'
`-FunctionDecl 0x11f940b78 <dataset_diviso_filec/func17082_vuln.c:1:1, line:30:1> line:1:14 bpf_obj_do_get 'void *(const struct filename *, enum bpf_type *)' static
  |-ParmVarDecl 0x11f928648 <col:29, col:52> col:52 used pathname 'const struct filename *'
  |-ParmVarDecl 0x11f940a58 <line:2:8, col:23> col:23 used type 'enum bpf_type *'
  `-CompoundStmt 0x128009a00 <line:3:1, line:30:1>
    |-DeclStmt 0x11f940e68 <line:4:2, col:21>
    | |-RecordDecl 0x11f940c78 <col:2, col:9> col:9 struct inode
    | `-VarDecl 0x11f940de8 <col:2, col:16> col:16 used inode 'struct inode *'
    |-DeclStmt 0x11f940ff8 <line:5:2, col:18>
    | |-RecordDecl 0x11f940e80 <col:2, col:9> col:9 struct path
    | `-VarDecl 0x11f940f78 <col:2, col:14> col:14 invalid path 'struct path'
    |-DeclStmt 0x11f941090 <line:6:2, col:11>
    | `-VarDecl 0x11f941028 <col:2, col:8> col:8 used raw 'void *'
    |-DeclStmt 0x11f941128 <line:7:2, col:9>
    | `-VarDecl 0x11f9410c0 <col:2, col:6> col:6 used ret 'int'
    |-BinaryOperator 0x11f941410 <line:9:2, col:54> 'int' contains-errors '='
    | |-DeclRefExpr 0x11f941140 <col:2> 'int' lvalue Var 0x11f9410c0 'ret' 'int'
    | `-CallExpr 0x11f9413d8 <col:8, col:54> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x11f941290 <col:8> 'int ()' Function 0x11f9411d8 'kern_path' 'int ()'
    |   |-RecoveryExpr 0x11f9412e8 <col:18, col:28> '<dependent type>' contains-errors lvalue
    |   | `-DeclRefExpr 0x11f9412b0 <col:18> 'const struct filename *' lvalue ParmVar 0x11f928648 'pathname' 'const struct filename *'
    |   |-RecoveryExpr 0x11f9413b8 <col:34> '<dependent type>' contains-errors lvalue
    |   `-UnaryOperator 0x11f941348 <col:49, col:50> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x11f941328 <col:50> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x11f941640 <line:10:2, line:11:21>
    | |-ImplicitCastExpr 0x11f941450 <line:10:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x11f941430 <col:6> 'int' lvalue Var 0x11f9410c0 'ret' 'int'
    | `-ReturnStmt 0x11f941630 <line:11:3, col:21>
    |   `-ImplicitCastExpr 0x11f941618 <col:10, col:21> 'void *' <IntegralToPointer>
    |     `-CallExpr 0x11f9415d8 <col:10, col:21> 'int'
    |       |-ImplicitCastExpr 0x11f9415c0 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x11f941548 <col:10> 'int ()' Function 0x11f941490 'ERR_PTR' 'int ()'
    |       `-ImplicitCastExpr 0x11f941600 <col:18> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x11f941568 <col:18> 'int' lvalue Var 0x11f9410c0 'ret' 'int'
    |-BinaryOperator 0x11f941810 <line:13:2, col:37> 'struct inode *' contains-errors '='
    | |-DeclRefExpr 0x11f941660 <col:2> 'struct inode *' lvalue Var 0x11f940de8 'inode' 'struct inode *'
    | `-CallExpr 0x11f9417e8 <col:10, col:37> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x11f941760 <col:10> 'int ()' Function 0x11f9416a8 'd_backing_inode' 'int ()'
    |   `-CXXDependentScopeMemberExpr 0x11f9417a0 <col:26, col:31> '<dependent type>' contains-errors lvalue .dentry
    |     `-RecoveryExpr 0x11f941780 <col:26> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x128009030 <line:14:2, col:41> 'int' contains-errors '='
    | |-DeclRefExpr 0x11f941830 <col:2> 'int' lvalue Var 0x11f9410c0 'ret' 'int'
    | `-CallExpr 0x128009000 <col:8, col:41> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x11f941930 <col:8> 'int ()' Function 0x11f941878 'inode_permission' 'int ()'
    |   |-DeclRefExpr 0x11f941950 <col:25> 'struct inode *' lvalue Var 0x11f940de8 'inode' 'struct inode *'
    |   `-RecoveryExpr 0x11f9419d8 <col:32> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x1280090f0 <line:15:2, line:16:8>
    | |-ImplicitCastExpr 0x128009070 <line:15:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x128009050 <col:6> 'int' lvalue Var 0x11f9410c0 'ret' 'int'
    | `-GotoStmt 0x1280090d8 <line:16:3, col:8> 'out' 0x128009088
    |-BinaryOperator 0x1280092e8 <line:18:2, col:34> 'int' '='
    | |-DeclRefExpr 0x128009110 <col:2> 'int' lvalue Var 0x11f9410c0 'ret' 'int'
    | `-CallExpr 0x128009288 <col:8, col:34> 'int'
    |   |-ImplicitCastExpr 0x128009270 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x128009210 <col:8> 'int ()' Function 0x128009158 'bpf_inode_type' 'int ()'
    |   |-ImplicitCastExpr 0x1280092b8 <col:23> 'struct inode *' <LValueToRValue>
    |   | `-DeclRefExpr 0x128009230 <col:23> 'struct inode *' lvalue Var 0x11f940de8 'inode' 'struct inode *'
    |   `-ImplicitCastExpr 0x1280092d0 <col:30> 'enum bpf_type *' <LValueToRValue>
    |     `-DeclRefExpr 0x128009250 <col:30> 'enum bpf_type *' lvalue ParmVar 0x11f940a58 'type' 'enum bpf_type *'
    |-IfStmt 0x128009358 <line:19:2, line:20:8>
    | |-ImplicitCastExpr 0x128009328 <line:19:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x128009308 <col:6> 'int' lvalue Var 0x11f9410c0 'ret' 'int'
    | `-GotoStmt 0x128009340 <line:20:3, col:8> 'out' 0x128009088
    |-BinaryOperator 0x128009578 <line:22:2, col:43> 'void *' contains-errors '='
    | |-DeclRefExpr 0x128009378 <col:2> 'void *' lvalue Var 0x11f941028 'raw' 'void *'
    | `-CallExpr 0x128009548 <col:8, col:43> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x128009478 <col:8> 'int ()' Function 0x1280093c0 'bpf_any_get' 'int ()'
    |   |-RecoveryExpr 0x1280094d0 <col:20, col:27> '<dependent type>' contains-errors lvalue
    |   | `-DeclRefExpr 0x128009498 <col:20> 'struct inode *' lvalue Var 0x11f940de8 'inode' 'struct inode *'
    |   `-UnaryOperator 0x128009530 <col:38, col:39> 'enum bpf_type' lvalue prefix '*' cannot overflow
    |     `-ImplicitCastExpr 0x128009518 <col:39> 'enum bpf_type *' <LValueToRValue>
    |       `-DeclRefExpr 0x1280094f8 <col:39> 'enum bpf_type *' lvalue ParmVar 0x11f940a58 'type' 'enum bpf_type *'
    |-CallExpr 0x1280096d0 <line:23:2, col:19> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x128009678 <col:2> 'int ()' Function 0x1280095c0 'touch_atime' 'int ()'
    | `-UnaryOperator 0x1280096b8 <col:14, col:15> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x128009698 <col:15> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x128009830 <line:25:2, col:16> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1280097d8 <col:2> 'int ()' Function 0x128009720 'path_put' 'int ()'
    | `-UnaryOperator 0x128009818 <col:11, col:12> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x1280097f8 <col:12> '<dependent type>' contains-errors lvalue
    |-ReturnStmt 0x128009890 <line:26:2, col:9>
    | `-ImplicitCastExpr 0x128009878 <col:9> 'void *' <LValueToRValue>
    |   `-DeclRefExpr 0x128009858 <col:9> 'void *' lvalue Var 0x11f941028 'raw' 'void *'
    |-LabelStmt 0x128009920 <line:27:1, line:28:16> 'out'
    | `-CallExpr 0x1280098f8 <col:2, col:16> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1280098a0 <col:2> 'int ()' Function 0x128009720 'path_put' 'int ()'
    |   `-UnaryOperator 0x1280098e0 <col:11, col:12> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x1280098c0 <col:12> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x1280099f0 <line:29:2, col:20>
      `-ImplicitCastExpr 0x1280099d8 <col:9, col:20> 'void *' <IntegralToPointer>
        `-CallExpr 0x128009998 <col:9, col:20> 'int'
          |-ImplicitCastExpr 0x128009980 <col:9> 'int (*)()' <FunctionToPointerDecay>
          | `-DeclRefExpr 0x128009940 <col:9> 'int ()' Function 0x11f941490 'ERR_PTR' 'int ()'
          `-ImplicitCastExpr 0x1280099c0 <col:17> 'int' <LValueToRValue>
            `-DeclRefExpr 0x128009960 <col:17> 'int' lvalue Var 0x11f9410c0 'ret' 'int'
