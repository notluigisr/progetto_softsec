TranslationUnitDecl 0x13e855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13e8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13e855bd0 '__int128'
|-TypedefDecl 0x13e856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13e855bf0 'unsigned __int128'
|-TypedefDecl 0x13f00be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13f00bc00 'struct __NSConstantString_tag'
|   `-Record 0x13e856580 '__NSConstantString_tag'
|-TypedefDecl 0x13f00be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13e855d90 '__SVInt8_t'
|-TypedefDecl 0x13f00bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13e855db0 '__SVInt16_t'
|-TypedefDecl 0x13f00bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13e855dd0 '__SVInt32_t'
|-TypedefDecl 0x13f00bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13e855df0 '__SVInt64_t'
|-TypedefDecl 0x13f00c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13e855e10 '__SVUint8_t'
|-TypedefDecl 0x13f00c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13e855e30 '__SVUint16_t'
|-TypedefDecl 0x13f00c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13e855e50 '__SVUint32_t'
|-TypedefDecl 0x13f00c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13e855e70 '__SVUint64_t'
|-TypedefDecl 0x13f00c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13e855e90 '__SVFloat16_t'
|-TypedefDecl 0x13f00c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13e855eb0 '__SVFloat32_t'
|-TypedefDecl 0x13f00c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13e855ed0 '__SVFloat64_t'
|-TypedefDecl 0x13f00c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13e855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13f00c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13e855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13f00c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13e855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13f00c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13e855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13f00c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13e855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13f00c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13e855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13f00c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13e855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13f00c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13e855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13f00c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13e855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13f00c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13e856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13f00c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13e856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13f00c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13e856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13f00c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13e856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13f00c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13e856090 '__clang_svint8x3_t'
|-TypedefDecl 0x13f00c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13e8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13f00c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13e8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13f00c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13e8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13f00c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13e856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13f00ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13e856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13f00cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13e856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13f00cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13e856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13f00cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13e856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13f00d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13e8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13f00d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13e8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13f00d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13e8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13f00d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13e856210 '__clang_svint8x4_t'
|-TypedefDecl 0x13f00d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13e856230 '__clang_svint16x4_t'
|-TypedefDecl 0x13f00d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13e856250 '__clang_svint32x4_t'
|-TypedefDecl 0x13f00d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13e856270 '__clang_svint64x4_t'
|-TypedefDecl 0x13f00d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13e856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13f00d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13e8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13f00d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13e8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13f00d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13e8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13f00d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13e856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13f00d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13e856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13f00d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13e856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13f00d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13e856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13f00da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13e856390 '__SVBool_t'
|-TypedefDecl 0x13f00da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13e8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13f00dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13e8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13f00db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13e8563f0 '__SVCount_t'
|-TypedefDecl 0x13f00dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13f00dbb0 'char *'
|   `-BuiltinType 0x13e8556b0 'char'
|-TypedefDecl 0x13f00dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13f00dbb0 'char *'
|   `-BuiltinType 0x13e8556b0 'char'
`-FunctionDecl 0x13f00df48 <dataset_diviso_filec/func22717_vuln.c:1:1, line:13:1> line:1:20 div_long_long_rem_signed 'long (const long long, const long, long *)' static inline
  |-ParmVarDecl 0x13f00dcd8 <col:45, col:61> col:61 used dividend 'const long long'
  |-ParmVarDecl 0x13f00dd58 <line:2:10, col:21> col:21 used divisor 'const long'
  |-ParmVarDecl 0x13f00de08 <col:30, col:36> col:36 used remainder 'long *'
  `-CompoundStmt 0x13f027f50 <line:3:1, line:13:1>
    |-DeclStmt 0x13f00e0d0 <line:4:2, col:10>
    | `-VarDecl 0x13f00e068 <col:2, col:7> col:7 used res 'long'
    |-IfStmt 0x13f027ed8 <line:6:2, line:10:55> has_else
    | |-CallExpr 0x13f00e308 <line:6:6, col:27> 'int'
    | | |-ImplicitCastExpr 0x13f00e2f0 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x13f00e210 <col:6> 'int ()' Function 0x13f00e158 'unlikely' 'int ()'
    | | `-BinaryOperator 0x13f00e2a0 <col:15, col:26> 'int' '<'
    | |   |-ImplicitCastExpr 0x13f00e270 <col:15> 'long long' <LValueToRValue>
    | |   | `-DeclRefExpr 0x13f00e230 <col:15> 'const long long' lvalue ParmVar 0x13f00dcd8 'dividend' 'const long long'
    | |   `-ImplicitCastExpr 0x13f00e288 <col:26> 'long long' <IntegralCast>
    | |     `-IntegerLiteral 0x13f00e250 <col:26> 'int' 0
    | |-CompoundStmt 0x13f027d48 <col:30, line:9:2>
    | | |-BinaryOperator 0x13f027c18 <line:7:3, col:57> 'long' '='
    | | | |-DeclRefExpr 0x13f00e330 <col:3> 'long' lvalue Var 0x13f00e068 'res' 'long'
    | | | `-ImplicitCastExpr 0x13f027c00 <col:9, col:57> 'long' <IntegralCast>
    | | |   `-UnaryOperator 0x13f027be8 <col:9, col:57> 'int' prefix '-'
    | | |     `-CallExpr 0x13f027b80 <col:10, col:57> 'int'
    | | |       |-ImplicitCastExpr 0x13f027b68 <col:10> 'int (*)()' <FunctionToPointerDecay>
    | | |       | `-DeclRefExpr 0x13f027ab8 <col:10> 'int ()' Function 0x13f027a00 'div_long_long_rem' 'int ()'
    | | |       |-UnaryOperator 0x13f027b10 <col:28, col:29> 'long long' prefix '-'
    | | |       | `-ImplicitCastExpr 0x13f027af8 <col:29> 'long long' <LValueToRValue>
    | | |       |   `-DeclRefExpr 0x13f027ad8 <col:29> 'const long long' lvalue ParmVar 0x13f00dcd8 'dividend' 'const long long'
    | | |       |-ImplicitCastExpr 0x13f027bb8 <col:39> 'long' <LValueToRValue>
    | | |       | `-DeclRefExpr 0x13f027b28 <col:39> 'const long' lvalue ParmVar 0x13f00dd58 'divisor' 'const long'
    | | |       `-ImplicitCastExpr 0x13f027bd0 <col:48> 'long *' <LValueToRValue>
    | | |         `-DeclRefExpr 0x13f027b48 <col:48> 'long *' lvalue ParmVar 0x13f00de08 'remainder' 'long *'
    | | `-BinaryOperator 0x13f027d28 <line:8:3, col:28> 'long' '='
    | |   |-UnaryOperator 0x13f027c70 <col:3, col:4> 'long' lvalue prefix '*' cannot overflow
    | |   | `-ImplicitCastExpr 0x13f027c58 <col:4> 'long *' <LValueToRValue>
    | |   |   `-DeclRefExpr 0x13f027c38 <col:4> 'long *' lvalue ParmVar 0x13f00de08 'remainder' 'long *'
    | |   `-UnaryOperator 0x13f027d10 <col:16, col:28> 'long' prefix '-'
    | |     `-ImplicitCastExpr 0x13f027cf8 <col:17, col:28> 'long' <LValueToRValue>
    | |       `-ParenExpr 0x13f027cd8 <col:17, col:28> 'long' lvalue
    | |         `-UnaryOperator 0x13f027cc0 <col:18, col:19> 'long' lvalue prefix '*' cannot overflow
    | |           `-ImplicitCastExpr 0x13f027ca8 <col:19> 'long *' <LValueToRValue>
    | |             `-DeclRefExpr 0x13f027c88 <col:19> 'long *' lvalue ParmVar 0x13f00de08 'remainder' 'long *'
    | `-BinaryOperator 0x13f027eb8 <line:10:3, col:55> 'long' '='
    |   |-DeclRefExpr 0x13f027d68 <col:3> 'long' lvalue Var 0x13f00e068 'res' 'long'
    |   `-ImplicitCastExpr 0x13f027ea0 <col:9, col:55> 'long' <IntegralCast>
    |     `-CallExpr 0x13f027e20 <col:9, col:55> 'int'
    |       |-ImplicitCastExpr 0x13f027e08 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x13f027d88 <col:9> 'int ()' Function 0x13f027a00 'div_long_long_rem' 'int ()'
    |       |-ImplicitCastExpr 0x13f027e58 <col:27> 'long long' <LValueToRValue>
    |       | `-DeclRefExpr 0x13f027da8 <col:27> 'const long long' lvalue ParmVar 0x13f00dcd8 'dividend' 'const long long'
    |       |-ImplicitCastExpr 0x13f027e70 <col:37> 'long' <LValueToRValue>
    |       | `-DeclRefExpr 0x13f027dc8 <col:37> 'const long' lvalue ParmVar 0x13f00dd58 'divisor' 'const long'
    |       `-ImplicitCastExpr 0x13f027e88 <col:46> 'long *' <LValueToRValue>
    |         `-DeclRefExpr 0x13f027de8 <col:46> 'long *' lvalue ParmVar 0x13f00de08 'remainder' 'long *'
    `-ReturnStmt 0x13f027f40 <line:12:2, col:9>
      `-ImplicitCastExpr 0x13f027f28 <col:9> 'long' <LValueToRValue>
        `-DeclRefExpr 0x13f027f08 <col:9> 'long' lvalue Var 0x13f00e068 'res' 'long'
