TranslationUnitDecl 0x13f855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13f8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13f855bd0 '__int128'
|-TypedefDecl 0x13f856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13f855bf0 'unsigned __int128'
|-TypedefDecl 0x13f926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13f926000 'struct __NSConstantString_tag'
|   `-Record 0x13f856580 '__NSConstantString_tag'
|-TypedefDecl 0x13f926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13f855d90 '__SVInt8_t'
|-TypedefDecl 0x13f926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13f855db0 '__SVInt16_t'
|-TypedefDecl 0x13f926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13f855dd0 '__SVInt32_t'
|-TypedefDecl 0x13f9263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13f855df0 '__SVInt64_t'
|-TypedefDecl 0x13f926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13f855e10 '__SVUint8_t'
|-TypedefDecl 0x13f9264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13f855e30 '__SVUint16_t'
|-TypedefDecl 0x13f926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13f855e50 '__SVUint32_t'
|-TypedefDecl 0x13f926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13f855e70 '__SVUint64_t'
|-TypedefDecl 0x13f9265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13f855e90 '__SVFloat16_t'
|-TypedefDecl 0x13f926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13f855eb0 '__SVFloat32_t'
|-TypedefDecl 0x13f9266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13f855ed0 '__SVFloat64_t'
|-TypedefDecl 0x13f926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13f855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13f926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13f855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13f9267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13f855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13f926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13f855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13f9268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13f855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13f926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13f855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13f926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13f855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13f9269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13f855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13f926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13f855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13f926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13f856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13f926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13f856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13f926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13f856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13f926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13f856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13f926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13f856090 '__clang_svint8x3_t'
|-TypedefDecl 0x13f926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13f8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13f926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13f8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13f926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13f8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13f926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13f856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13f926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13f856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13f926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13f856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13f926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13f856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13f926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13f856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13f927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13f8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13f927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13f8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13f9278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13f8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13f927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13f856210 '__clang_svint8x4_t'
|-TypedefDecl 0x13f9279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13f856230 '__clang_svint16x4_t'
|-TypedefDecl 0x13f927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13f856250 '__clang_svint32x4_t'
|-TypedefDecl 0x13f927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13f856270 '__clang_svint64x4_t'
|-TypedefDecl 0x13f927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13f856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13f927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13f8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13f927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13f8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13f927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13f8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13f927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13f856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13f927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13f856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13f927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13f856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13f927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13f856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13f927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13f856390 '__SVBool_t'
|-TypedefDecl 0x13f927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13f8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13f927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13f8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13f927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13f8563f0 '__SVCount_t'
|-TypedefDecl 0x13f927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13f927fb0 'char *'
|   `-BuiltinType 0x13f8556b0 'char'
|-TypedefDecl 0x13f928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13f927fb0 'char *'
|   `-BuiltinType 0x13f8556b0 'char'
`-FunctionDecl 0x13f9282a8 <dataset_diviso_filec/func18266_vuln.c:1:1, line:16:1> line:1:12 bson_string_is_db_ref 'int (const unsigned char *, const int)' static
  |-ParmVarDecl 0x13f928108 <col:35, col:56> col:56 used string 'const unsigned char *'
  |-ParmVarDecl 0x13f928188 <col:64, col:74> col:74 used length 'const int'
  `-CompoundStmt 0x13f941050 <col:83, line:16:1>
    |-DeclStmt 0x13f928448 <line:2:5, col:19>
    | `-VarDecl 0x13f9283c0 <col:5, col:18> col:9 used result 'int' cinit
    |   `-IntegerLiteral 0x13f928428 <col:18> 'int' 0
    |-IfStmt 0x13f940fd8 <line:4:5, line:13:5> has_else
    | |-BinaryOperator 0x13f9284b8 <line:4:9, col:19> 'int' '>='
    | | |-ImplicitCastExpr 0x13f9284a0 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x13f928460 <col:9> 'const int' lvalue ParmVar 0x13f928188 'length' 'const int'
    | | `-IntegerLiteral 0x13f928480 <col:19> 'int' 4
    | |-CompoundStmt 0x13f940a40 <col:23, line:7:5>
    | | `-IfStmt 0x13f940a20 <line:5:9, line:6:22>
    | |   |-BinaryOperator 0x13f928798 <line:5:13, col:66> 'int' '&&'
    | |   | |-BinaryOperator 0x13f928698 <col:13, col:46> 'int' '&&'
    | |   | | |-BinaryOperator 0x13f928598 <col:13, col:26> 'int' '=='
    | |   | | | |-ImplicitCastExpr 0x13f928580 <col:13, col:21> 'int' <IntegralCast>
    | |   | | | | `-ImplicitCastExpr 0x13f928568 <col:13, col:21> 'unsigned char' <LValueToRValue>
    | |   | | | |   `-ArraySubscriptExpr 0x13f928530 <col:13, col:21> 'const unsigned char' lvalue
    | |   | | | |     |-ImplicitCastExpr 0x13f928518 <col:13> 'const unsigned char *' <LValueToRValue>
    | |   | | | |     | `-DeclRefExpr 0x13f9284d8 <col:13> 'const unsigned char *' lvalue ParmVar 0x13f928108 'string' 'const unsigned char *'
    | |   | | | |     `-IntegerLiteral 0x13f9284f8 <col:20> 'int' 1
    | |   | | | `-CharacterLiteral 0x13f928550 <col:26> 'int' 114
    | |   | | `-BinaryOperator 0x13f928678 <col:33, col:46> 'int' '=='
    | |   | |   |-ImplicitCastExpr 0x13f928660 <col:33, col:41> 'int' <IntegralCast>
    | |   | |   | `-ImplicitCastExpr 0x13f928648 <col:33, col:41> 'unsigned char' <LValueToRValue>
    | |   | |   |   `-ArraySubscriptExpr 0x13f928610 <col:33, col:41> 'const unsigned char' lvalue
    | |   | |   |     |-ImplicitCastExpr 0x13f9285f8 <col:33> 'const unsigned char *' <LValueToRValue>
    | |   | |   |     | `-DeclRefExpr 0x13f9285b8 <col:33> 'const unsigned char *' lvalue ParmVar 0x13f928108 'string' 'const unsigned char *'
    | |   | |   |     `-IntegerLiteral 0x13f9285d8 <col:40> 'int' 2
    | |   | |   `-CharacterLiteral 0x13f928630 <col:46> 'int' 101
    | |   | `-BinaryOperator 0x13f928778 <col:53, col:66> 'int' '=='
    | |   |   |-ImplicitCastExpr 0x13f928760 <col:53, col:61> 'int' <IntegralCast>
    | |   |   | `-ImplicitCastExpr 0x13f928748 <col:53, col:61> 'unsigned char' <LValueToRValue>
    | |   |   |   `-ArraySubscriptExpr 0x13f928710 <col:53, col:61> 'const unsigned char' lvalue
    | |   |   |     |-ImplicitCastExpr 0x13f9286f8 <col:53> 'const unsigned char *' <LValueToRValue>
    | |   |   |     | `-DeclRefExpr 0x13f9286b8 <col:53> 'const unsigned char *' lvalue ParmVar 0x13f928108 'string' 'const unsigned char *'
    | |   |   |     `-IntegerLiteral 0x13f9286d8 <col:60> 'int' 3
    | |   |   `-CharacterLiteral 0x13f928730 <col:66> 'int' 102
    | |   `-BinaryOperator 0x13f940a00 <line:6:13, col:22> 'int' '='
    | |     |-DeclRefExpr 0x13f9287b8 <col:13> 'int' lvalue Var 0x13f9283c0 'result' 'int'
    | |     `-IntegerLiteral 0x13f9287d8 <col:22> 'int' 1
    | `-IfStmt 0x13f940fb8 <line:8:10, line:13:5>
    |   |-BinaryOperator 0x13f940ab0 <line:8:14, col:24> 'int' '>='
    |   | |-ImplicitCastExpr 0x13f940a98 <col:14> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x13f940a58 <col:14> 'const int' lvalue ParmVar 0x13f928188 'length' 'const int'
    |   | `-IntegerLiteral 0x13f940a78 <col:24> 'int' 3
    |   `-CompoundStmt 0x13f940fa0 <col:28, line:13:5>
    |     `-IfStmt 0x13f940f70 <line:9:9, line:12:22> has_else
    |       |-BinaryOperator 0x13f940c90 <line:9:13, col:46> 'int' '&&'
    |       | |-BinaryOperator 0x13f940b90 <col:13, col:26> 'int' '=='
    |       | | |-ImplicitCastExpr 0x13f940b78 <col:13, col:21> 'int' <IntegralCast>
    |       | | | `-ImplicitCastExpr 0x13f940b60 <col:13, col:21> 'unsigned char' <LValueToRValue>
    |       | | |   `-ArraySubscriptExpr 0x13f940b28 <col:13, col:21> 'const unsigned char' lvalue
    |       | | |     |-ImplicitCastExpr 0x13f940b10 <col:13> 'const unsigned char *' <LValueToRValue>
    |       | | |     | `-DeclRefExpr 0x13f940ad0 <col:13> 'const unsigned char *' lvalue ParmVar 0x13f928108 'string' 'const unsigned char *'
    |       | | |     `-IntegerLiteral 0x13f940af0 <col:20> 'int' 1
    |       | | `-CharacterLiteral 0x13f940b48 <col:26> 'int' 105
    |       | `-BinaryOperator 0x13f940c70 <col:33, col:46> 'int' '=='
    |       |   |-ImplicitCastExpr 0x13f940c58 <col:33, col:41> 'int' <IntegralCast>
    |       |   | `-ImplicitCastExpr 0x13f940c40 <col:33, col:41> 'unsigned char' <LValueToRValue>
    |       |   |   `-ArraySubscriptExpr 0x13f940c08 <col:33, col:41> 'const unsigned char' lvalue
    |       |   |     |-ImplicitCastExpr 0x13f940bf0 <col:33> 'const unsigned char *' <LValueToRValue>
    |       |   |     | `-DeclRefExpr 0x13f940bb0 <col:33> 'const unsigned char *' lvalue ParmVar 0x13f928108 'string' 'const unsigned char *'
    |       |   |     `-IntegerLiteral 0x13f940bd0 <col:40> 'int' 2
    |       |   `-CharacterLiteral 0x13f940c28 <col:46> 'int' 100
    |       |-BinaryOperator 0x13f940cf0 <line:10:13, col:22> 'int' '='
    |       | |-DeclRefExpr 0x13f940cb0 <col:13> 'int' lvalue Var 0x13f9283c0 'result' 'int'
    |       | `-IntegerLiteral 0x13f940cd0 <col:22> 'int' 1
    |       `-IfStmt 0x13f940f50 <line:11:14, line:12:22>
    |         |-BinaryOperator 0x13f940ed0 <line:11:18, col:51> 'int' '&&'
    |         | |-BinaryOperator 0x13f940dd0 <col:18, col:31> 'int' '=='
    |         | | |-ImplicitCastExpr 0x13f940db8 <col:18, col:26> 'int' <IntegralCast>
    |         | | | `-ImplicitCastExpr 0x13f940da0 <col:18, col:26> 'unsigned char' <LValueToRValue>
    |         | | |   `-ArraySubscriptExpr 0x13f940d68 <col:18, col:26> 'const unsigned char' lvalue
    |         | | |     |-ImplicitCastExpr 0x13f940d50 <col:18> 'const unsigned char *' <LValueToRValue>
    |         | | |     | `-DeclRefExpr 0x13f940d10 <col:18> 'const unsigned char *' lvalue ParmVar 0x13f928108 'string' 'const unsigned char *'
    |         | | |     `-IntegerLiteral 0x13f940d30 <col:25> 'int' 1
    |         | | `-CharacterLiteral 0x13f940d88 <col:31> 'int' 100
    |         | `-BinaryOperator 0x13f940eb0 <col:38, col:51> 'int' '=='
    |         |   |-ImplicitCastExpr 0x13f940e98 <col:38, col:46> 'int' <IntegralCast>
    |         |   | `-ImplicitCastExpr 0x13f940e80 <col:38, col:46> 'unsigned char' <LValueToRValue>
    |         |   |   `-ArraySubscriptExpr 0x13f940e48 <col:38, col:46> 'const unsigned char' lvalue
    |         |   |     |-ImplicitCastExpr 0x13f940e30 <col:38> 'const unsigned char *' <LValueToRValue>
    |         |   |     | `-DeclRefExpr 0x13f940df0 <col:38> 'const unsigned char *' lvalue ParmVar 0x13f928108 'string' 'const unsigned char *'
    |         |   |     `-IntegerLiteral 0x13f940e10 <col:45> 'int' 2
    |         |   `-CharacterLiteral 0x13f940e68 <col:51> 'int' 98
    |         `-BinaryOperator 0x13f940f30 <line:12:13, col:22> 'int' '='
    |           |-DeclRefExpr 0x13f940ef0 <col:13> 'int' lvalue Var 0x13f9283c0 'result' 'int'
    |           `-IntegerLiteral 0x13f940f10 <col:22> 'int' 1
    `-ReturnStmt 0x13f941040 <line:15:5, col:12>
      `-ImplicitCastExpr 0x13f941028 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x13f941008 <col:12> 'int' lvalue Var 0x13f9283c0 'result' 'int'
