TranslationUnitDecl 0x14c855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14c8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14c855bd0 '__int128'
|-TypedefDecl 0x14c856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14c855bf0 'unsigned __int128'
|-TypedefDecl 0x14d00be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14d00bc00 'struct __NSConstantString_tag'
|   `-Record 0x14c856580 '__NSConstantString_tag'
|-TypedefDecl 0x14d00be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14c855d90 '__SVInt8_t'
|-TypedefDecl 0x14d00bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14c855db0 '__SVInt16_t'
|-TypedefDecl 0x14d00bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14c855dd0 '__SVInt32_t'
|-TypedefDecl 0x14d00bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14c855df0 '__SVInt64_t'
|-TypedefDecl 0x14d00c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14c855e10 '__SVUint8_t'
|-TypedefDecl 0x14d00c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14c855e30 '__SVUint16_t'
|-TypedefDecl 0x14d00c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14c855e50 '__SVUint32_t'
|-TypedefDecl 0x14d00c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14c855e70 '__SVUint64_t'
|-TypedefDecl 0x14d00c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14c855e90 '__SVFloat16_t'
|-TypedefDecl 0x14d00c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14c855eb0 '__SVFloat32_t'
|-TypedefDecl 0x14d00c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14c855ed0 '__SVFloat64_t'
|-TypedefDecl 0x14d00c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14c855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14d00c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14c855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14d00c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14c855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14d00c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14c855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14d00c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14c855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14d00c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14c855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14d00c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14c855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14d00c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14c855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14d00c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14c855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14d00c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14c856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14d00c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14c856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14d00c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14c856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14d00c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14c856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14d00c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14c856090 '__clang_svint8x3_t'
|-TypedefDecl 0x14d00c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14c8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14d00c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14c8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14d00c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14c8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14d00c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14c856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14d00ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14c856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14d00cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14c856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14d00cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14c856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14d00cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14c856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14d00d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14c8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14d00d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14c8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14d00d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14c8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14d00d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14c856210 '__clang_svint8x4_t'
|-TypedefDecl 0x14d00d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14c856230 '__clang_svint16x4_t'
|-TypedefDecl 0x14d00d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14c856250 '__clang_svint32x4_t'
|-TypedefDecl 0x14d00d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14c856270 '__clang_svint64x4_t'
|-TypedefDecl 0x14d00d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14c856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14d00d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14c8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14d00d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14c8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14d00d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14c8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14d00d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14c856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14d00d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14c856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14d00d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14c856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14d00d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14c856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14d00da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14c856390 '__SVBool_t'
|-TypedefDecl 0x14d00da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14c8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14d00dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14c8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14d00db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14c8563f0 '__SVCount_t'
|-TypedefDecl 0x14d00dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14d00dbb0 'char *'
|   `-BuiltinType 0x14c8556b0 'char'
|-TypedefDecl 0x14d00dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14d00dbb0 'char *'
|   `-BuiltinType 0x14c8556b0 'char'
`-FunctionDecl 0x14d00de88 <dataset_diviso_filec/func888_vuln.c:1:1, line:38:1> line:1:33 invalid _gdContributionsAlloc 'int *(unsigned int, unsigned int)' static inline
  |-ParmVarDecl 0x14d00dcf0 <col:55, col:68> col:68 used line_length 'unsigned int'
  |-ParmVarDecl 0x14d00dd70 <col:81, col:94> col:94 used windows_size 'unsigned int'
  `-CompoundStmt 0x14d028a38 <line:2:1, line:38:1>
    |-DeclStmt 0x14d00dff8 <line:3:2, col:20>
    | `-VarDecl 0x14d00df58 <col:2, col:19> col:15 used u 'unsigned int' cinit
    |   `-ImplicitCastExpr 0x14d00dfe0 <col:19> 'unsigned int' <IntegralCast>
    |     `-IntegerLiteral 0x14d00dfc0 <col:19> 'int' 0
    |-DeclStmt 0x14d00e0c8 <line:5:2, col:24>
    | `-VarDecl 0x14d00e040 <col:2, col:23> col:6 used overflow_error 'int' cinit
    |   `-IntegerLiteral 0x14d00e0a8 <col:23> 'int' 0
    |-IfStmt 0x14d00e1f0 <line:8:2, line:10:2>
    | |-UnaryOperator 0x14d00e178 <line:8:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x14d00e160 <col:7> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x14d00e140 <col:7> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x14d00e1d8 <col:12, line:10:2>
    |   `-ReturnStmt 0x14d00e1c8 <line:9:3, col:10>
    |     `-RecoveryExpr 0x14d00e1a8 <col:10> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14d028028 <line:13:2, line:16:2>
    | |-RecoveryExpr 0x14d027e18 <line:13:6, col:53> '_Bool' contains-errors
    | `-CompoundStmt 0x14d028008 <col:56, line:16:2>
    |   |-CallExpr 0x14d027f98 <line:14:3, col:13> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x14d027f18 <col:3> 'int ()' Function 0x14d027e60 'gdFree' 'int ()'
    |   | `-RecoveryExpr 0x14d027f78 <col:10> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x14d027ff8 <line:15:3, col:10>
    |     `-RecoveryExpr 0x14d027fd8 <col:10> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14d0281d0 <line:18:2, line:21:2>
    | |-BinaryOperator 0x14d028180 <line:18:6, col:25> 'int' contains-errors '=='
    | | |-CXXDependentScopeMemberExpr 0x14d028118 <col:6, col:11> '<dependent type>' contains-errors lvalue ->ContribRow
    | | | `-RecoveryExpr 0x14d0280f8 <col:6> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x14d028160 <col:25> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x14d0281c0 <col:31, line:21:2>
    `-ForStmt 0x14d028a00 <line:22:2, line:36:2>
      |-BinaryOperator 0x14d028248 <line:22:7, col:11> 'unsigned int' '='
      | |-DeclRefExpr 0x14d0281f0 <col:7> 'unsigned int' lvalue Var 0x14d00df58 'u' 'unsigned int'
      | `-ImplicitCastExpr 0x14d028230 <col:11> 'unsigned int' <IntegralCast>
      |   `-IntegerLiteral 0x14d028210 <col:11> 'int' 0
      |-<<<NULL>>>
      |-BinaryOperator 0x14d0282d8 <col:15, col:19> 'int' '<'
      | |-ImplicitCastExpr 0x14d0282a8 <col:15> 'unsigned int' <LValueToRValue>
      | | `-DeclRefExpr 0x14d028268 <col:15> 'unsigned int' lvalue Var 0x14d00df58 'u' 'unsigned int'
      | `-ImplicitCastExpr 0x14d0282c0 <col:19> 'unsigned int' <LValueToRValue>
      |   `-DeclRefExpr 0x14d028288 <col:19> 'unsigned int' lvalue ParmVar 0x14d00dcf0 'line_length' 'unsigned int'
      |-UnaryOperator 0x14d028318 <col:33, col:34> 'unsigned int' postfix '++'
      | `-DeclRefExpr 0x14d0282f8 <col:33> 'unsigned int' lvalue Var 0x14d00df58 'u' 'unsigned int'
      `-CompoundStmt 0x14d0289e0 <col:38, line:36:2>
        |-IfStmt 0x14d028740 <line:23:3, line:27:3> has_else
        | |-CallExpr 0x14d0283f8 <line:23:7, col:45> 'int'
        | | |-ImplicitCastExpr 0x14d0283e0 <col:7> 'int (*)()' <FunctionToPointerDecay>
        | | | `-DeclRefExpr 0x14d028330 <col:7> 'int ()' Function 0x14d00e2f8 'overflow2' 'int ()'
        | | |-ImplicitCastExpr 0x14d028428 <col:17> 'unsigned int' <LValueToRValue>
        | | | `-DeclRefExpr 0x14d028350 <col:17> 'unsigned int' lvalue ParmVar 0x14d00dd70 'windows_size' 'unsigned int'
        | | `-UnaryExprOrTypeTraitExpr 0x14d028388 <col:31, col:44> 'unsigned long' sizeof 'double'
        | |-CompoundStmt 0x14d0284a0 <col:48, line:25:3>
        | | `-BinaryOperator 0x14d028480 <line:24:4, col:21> 'int' '='
        | |   |-DeclRefExpr 0x14d028440 <col:4> 'int' lvalue Var 0x14d00e040 'overflow_error' 'int'
        | |   `-IntegerLiteral 0x14d028460 <col:21> 'int' 1
        | `-CompoundStmt 0x14d028730 <line:25:10, line:27:3>
        `-IfStmt 0x14d0289c0 <line:28:3, line:35:3>
          |-RecoveryExpr 0x14d028808 <line:28:7, col:60> '_Bool' contains-errors
          `-CompoundStmt 0x14d0289a0 <col:66, line:35:3>
            |-UnaryOperator 0x14d028848 <line:29:4, col:5> 'unsigned int' postfix '--'
            | `-DeclRefExpr 0x14d028828 <col:4> 'unsigned int' lvalue Var 0x14d00df58 'u' 'unsigned int'
            `-WhileStmt 0x14d028980 <line:30:4, line:33:4>
              |-BinaryOperator 0x14d0288d0 <line:30:11, col:16> 'int' '>='
              | |-ImplicitCastExpr 0x14d0288a0 <col:11> 'unsigned int' <LValueToRValue>
              | | `-DeclRefExpr 0x14d028860 <col:11> 'unsigned int' lvalue Var 0x14d00df58 'u' 'unsigned int'
              | `-ImplicitCastExpr 0x14d0288b8 <col:16> 'unsigned int' <IntegralCast>
              |   `-IntegerLiteral 0x14d028880 <col:16> 'int' 0
              `-CompoundStmt 0x14d028968 <col:19, line:33:4>
                `-UnaryOperator 0x14d028950 <line:32:5, col:6> 'unsigned int' postfix '--'
                  `-DeclRefExpr 0x14d028930 <col:5> 'unsigned int' lvalue Var 0x14d00df58 'u' 'unsigned int'
