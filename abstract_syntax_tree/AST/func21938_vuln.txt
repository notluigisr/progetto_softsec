TranslationUnitDecl 0x13b855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13b8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13b855bd0 '__int128'
|-TypedefDecl 0x13b856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13b855bf0 'unsigned __int128'
|-TypedefDecl 0x13b926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13b926000 'struct __NSConstantString_tag'
|   `-Record 0x13b856580 '__NSConstantString_tag'
|-TypedefDecl 0x13b926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13b855d90 '__SVInt8_t'
|-TypedefDecl 0x13b926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13b855db0 '__SVInt16_t'
|-TypedefDecl 0x13b926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13b855dd0 '__SVInt32_t'
|-TypedefDecl 0x13b9263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13b855df0 '__SVInt64_t'
|-TypedefDecl 0x13b926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13b855e10 '__SVUint8_t'
|-TypedefDecl 0x13b9264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13b855e30 '__SVUint16_t'
|-TypedefDecl 0x13b926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13b855e50 '__SVUint32_t'
|-TypedefDecl 0x13b926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13b855e70 '__SVUint64_t'
|-TypedefDecl 0x13b9265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13b855e90 '__SVFloat16_t'
|-TypedefDecl 0x13b926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13b855eb0 '__SVFloat32_t'
|-TypedefDecl 0x13b9266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13b855ed0 '__SVFloat64_t'
|-TypedefDecl 0x13b926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13b855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13b926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13b855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13b9267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13b855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13b926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13b855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13b9268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13b855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13b926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13b855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13b926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13b855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13b9269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13b855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13b926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13b855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13b926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13b856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13b926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13b856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13b926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13b856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13b926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13b856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13b926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13b856090 '__clang_svint8x3_t'
|-TypedefDecl 0x13b926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13b8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13b926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13b8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13b926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13b8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13b926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13b856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13b926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13b856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13b926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13b856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13b926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13b856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13b926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13b856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13b927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13b8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13b927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13b8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13b9278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13b8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13b927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13b856210 '__clang_svint8x4_t'
|-TypedefDecl 0x13b9279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13b856230 '__clang_svint16x4_t'
|-TypedefDecl 0x13b927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13b856250 '__clang_svint32x4_t'
|-TypedefDecl 0x13b927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13b856270 '__clang_svint64x4_t'
|-TypedefDecl 0x13b927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13b856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13b927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13b8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13b927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13b8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13b927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13b8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13b927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13b856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13b927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13b856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13b927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13b856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13b927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13b856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13b927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13b856390 '__SVBool_t'
|-TypedefDecl 0x13b927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13b8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13b927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13b8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13b927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13b8563f0 '__SVCount_t'
|-TypedefDecl 0x13b927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13b927fb0 'char *'
|   `-BuiltinType 0x13b8556b0 'char'
|-TypedefDecl 0x13b928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13b927fb0 'char *'
|   `-BuiltinType 0x13b8556b0 'char'
`-FunctionDecl 0x13b928348 <dataset_diviso_filec/func21938_vuln.c:1:1, line:61:1> line:1:7 invalid gf_utf_get_utf8_string_from_bom 'char *(int *, int, char **)'
  |-ParmVarDecl 0x13b928128 <col:39, col:43> col:43 invalid data 'int *'
  |-ParmVarDecl 0x13b9281a8 <col:49, col:53> col:53 referenced invalid size 'int'
  |-ParmVarDecl 0x13b928258 <col:59, col:66> col:66 used out_ptr 'char **'
  `-CompoundStmt 0x13b942e40 <line:2:1, line:61:1>
    |-BinaryOperator 0x13b928510 <line:4:2, col:13> 'char *' contains-errors '='
    | |-UnaryOperator 0x13b9284d8 <col:2, col:3> 'char *' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x13b9284c0 <col:3> 'char **' <LValueToRValue>
    | |   `-DeclRefExpr 0x13b928408 <col:3> 'char **' lvalue ParmVar 0x13b928258 'out_ptr' 'char **'
    | `-RecoveryExpr 0x13b9284f0 <col:13> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x13b9421b8 <line:6:2, line:23:2>
    | |-BinaryOperator 0x13b928570 <line:6:6, col:12> 'int' contains-errors '>='
    | | |-RecoveryExpr 0x13b928530 <col:6> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x13b928550 <col:12> 'int' 5
    | `-CompoundStmt 0x13b9421a0 <col:15, line:23:2>
    |   `-IfStmt 0x13b942170 <line:8:3, line:22:3> has_else
    |     |-BinaryOperator 0x13b928740 <line:8:7, col:40> 'int' contains-errors '&&'
    |     | |-ParenExpr 0x13b928648 <col:7, col:21> 'int' contains-errors
    |     | | `-BinaryOperator 0x13b928628 <col:8, col:17> 'int' contains-errors '=='
    |     | |   |-ArraySubscriptExpr 0x13b9285e8 <col:8, col:14> '<dependent type>' contains-errors lvalue
    |     | |   | |-ImplicitCastExpr 0x13b9285d0 <col:8> '<dependent type>' contains-errors <LValueToRValue>
    |     | |   | | `-RecoveryExpr 0x13b928590 <col:8> '<dependent type>' contains-errors lvalue
    |     | |   | `-IntegerLiteral 0x13b9285b0 <col:13> 'int' 0
    |     | |   `-IntegerLiteral 0x13b928608 <col:17> 'int' 255
    |     | `-ParenExpr 0x13b928720 <col:26, col:40> 'int' contains-errors
    |     |   `-BinaryOperator 0x13b928700 <col:27, col:36> 'int' contains-errors '=='
    |     |     |-ArraySubscriptExpr 0x13b9286c0 <col:27, col:33> '<dependent type>' contains-errors lvalue
    |     |     | |-ImplicitCastExpr 0x13b9286a8 <col:27> '<dependent type>' contains-errors <LValueToRValue>
    |     |     | | `-RecoveryExpr 0x13b928668 <col:27> '<dependent type>' contains-errors lvalue
    |     |     | `-IntegerLiteral 0x13b928688 <col:32> 'int' 1
    |     |     `-IntegerLiteral 0x13b9286e0 <col:36> 'int' 254
    |     |-CompoundStmt 0x13b9419a0 <col:43, line:14:3>
    |     | `-IfStmt 0x13b941970 <line:9:4, line:13:4> has_else
    |     |   |-BinaryOperator 0x13b9418c0 <line:9:8, col:27> 'int' contains-errors '&&'
    |     |   | |-UnaryOperator 0x13b941800 <col:8, col:15> '<dependent type>' contains-errors prefix '!' cannot overflow
    |     |   | | `-ImplicitCastExpr 0x13b9287d8 <col:9, col:15> '<dependent type>' contains-errors <LValueToRValue>
    |     |   | |   `-ArraySubscriptExpr 0x13b9287b8 <col:9, col:15> '<dependent type>' contains-errors lvalue
    |     |   | |     |-ImplicitCastExpr 0x13b9287a0 <col:9> '<dependent type>' contains-errors <LValueToRValue>
    |     |   | |     | `-RecoveryExpr 0x13b928760 <col:9> '<dependent type>' contains-errors lvalue
    |     |   | |     `-IntegerLiteral 0x13b928780 <col:14> 'int' 2
    |     |   | `-UnaryOperator 0x13b9418a8 <col:20, col:27> '<dependent type>' contains-errors prefix '!' cannot overflow
    |     |   |   `-ImplicitCastExpr 0x13b941890 <col:21, col:27> '<dependent type>' contains-errors <LValueToRValue>
    |     |   |     `-ArraySubscriptExpr 0x13b941870 <col:21, col:27> '<dependent type>' contains-errors lvalue
    |     |   |       |-ImplicitCastExpr 0x13b941858 <col:21> '<dependent type>' contains-errors <LValueToRValue>
    |     |   |       | `-RecoveryExpr 0x13b941818 <col:21> '<dependent type>' contains-errors lvalue
    |     |   |       `-IntegerLiteral 0x13b941838 <col:26> 'int' 3
    |     |   |-CompoundStmt 0x13b941928 <col:30, line:11:4>
    |     |   | `-ReturnStmt 0x13b941918 <line:10:5, col:12>
    |     |   |   `-RecoveryExpr 0x13b9418f8 <col:12> '<dependent type>' contains-errors lvalue
    |     |   `-CompoundStmt 0x13b941960 <line:11:11, line:13:4>
    |     `-IfStmt 0x13b942140 <line:14:10, line:22:3> has_else
    |       |-BinaryOperator 0x13b941b68 <line:14:14, col:47> 'int' contains-errors '&&'
    |       | |-ParenExpr 0x13b941a70 <col:14, col:28> 'int' contains-errors
    |       | | `-BinaryOperator 0x13b941a50 <col:15, col:24> 'int' contains-errors '=='
    |       | |   |-ArraySubscriptExpr 0x13b941a10 <col:15, col:21> '<dependent type>' contains-errors lvalue
    |       | |   | |-ImplicitCastExpr 0x13b9419f8 <col:15> '<dependent type>' contains-errors <LValueToRValue>
    |       | |   | | `-RecoveryExpr 0x13b9419b8 <col:15> '<dependent type>' contains-errors lvalue
    |       | |   | `-IntegerLiteral 0x13b9419d8 <col:20> 'int' 0
    |       | |   `-IntegerLiteral 0x13b941a30 <col:24> 'int' 254
    |       | `-ParenExpr 0x13b941b48 <col:33, col:47> 'int' contains-errors
    |       |   `-BinaryOperator 0x13b941b28 <col:34, col:43> 'int' contains-errors '=='
    |       |     |-ArraySubscriptExpr 0x13b941ae8 <col:34, col:40> '<dependent type>' contains-errors lvalue
    |       |     | |-ImplicitCastExpr 0x13b941ad0 <col:34> '<dependent type>' contains-errors <LValueToRValue>
    |       |     | | `-RecoveryExpr 0x13b941a90 <col:34> '<dependent type>' contains-errors lvalue
    |       |     | `-IntegerLiteral 0x13b941ab0 <col:39> 'int' 1
    |       |     `-IntegerLiteral 0x13b941b08 <col:43> 'int' 255
    |       |-CompoundStmt 0x13b941db8 <col:50, line:20:3>
    |       | `-IfStmt 0x13b941d88 <line:15:4, line:19:4> has_else
    |       |   |-BinaryOperator 0x13b941cd8 <line:15:8, col:27> 'int' contains-errors '&&'
    |       |   | |-UnaryOperator 0x13b941c18 <col:8, col:15> '<dependent type>' contains-errors prefix '!' cannot overflow
    |       |   | | `-ImplicitCastExpr 0x13b941c00 <col:9, col:15> '<dependent type>' contains-errors <LValueToRValue>
    |       |   | |   `-ArraySubscriptExpr 0x13b941be0 <col:9, col:15> '<dependent type>' contains-errors lvalue
    |       |   | |     |-ImplicitCastExpr 0x13b941bc8 <col:9> '<dependent type>' contains-errors <LValueToRValue>
    |       |   | |     | `-RecoveryExpr 0x13b941b88 <col:9> '<dependent type>' contains-errors lvalue
    |       |   | |     `-IntegerLiteral 0x13b941ba8 <col:14> 'int' 2
    |       |   | `-UnaryOperator 0x13b941cc0 <col:20, col:27> '<dependent type>' contains-errors prefix '!' cannot overflow
    |       |   |   `-ImplicitCastExpr 0x13b941ca8 <col:21, col:27> '<dependent type>' contains-errors <LValueToRValue>
    |       |   |     `-ArraySubscriptExpr 0x13b941c88 <col:21, col:27> '<dependent type>' contains-errors lvalue
    |       |   |       |-ImplicitCastExpr 0x13b941c70 <col:21> '<dependent type>' contains-errors <LValueToRValue>
    |       |   |       | `-RecoveryExpr 0x13b941c30 <col:21> '<dependent type>' contains-errors lvalue
    |       |   |       `-IntegerLiteral 0x13b941c50 <col:26> 'int' 3
    |       |   |-CompoundStmt 0x13b941d40 <col:30, line:17:4>
    |       |   | `-ReturnStmt 0x13b941d30 <line:16:5, col:12>
    |       |   |   `-RecoveryExpr 0x13b941d10 <col:12> '<dependent type>' contains-errors lvalue
    |       |   `-CompoundStmt 0x13b941d78 <line:17:11, line:19:4>
    |       `-IfStmt 0x13b942120 <line:20:10, line:22:3>
    |         |-BinaryOperator 0x13b942078 <line:20:14, col:66> 'int' contains-errors '&&'
    |         | |-BinaryOperator 0x13b941f80 <col:14, col:47> 'int' contains-errors '&&'
    |         | | |-ParenExpr 0x13b941e88 <col:14, col:28> 'int' contains-errors
    |         | | | `-BinaryOperator 0x13b941e68 <col:15, col:24> 'int' contains-errors '=='
    |         | | |   |-ArraySubscriptExpr 0x13b941e28 <col:15, col:21> '<dependent type>' contains-errors lvalue
    |         | | |   | |-ImplicitCastExpr 0x13b941e10 <col:15> '<dependent type>' contains-errors <LValueToRValue>
    |         | | |   | | `-RecoveryExpr 0x13b941dd0 <col:15> '<dependent type>' contains-errors lvalue
    |         | | |   | `-IntegerLiteral 0x13b941df0 <col:20> 'int' 0
    |         | | |   `-IntegerLiteral 0x13b941e48 <col:24> 'int' 239
    |         | | `-ParenExpr 0x13b941f60 <col:33, col:47> 'int' contains-errors
    |         | |   `-BinaryOperator 0x13b941f40 <col:34, col:43> 'int' contains-errors '=='
    |         | |     |-ArraySubscriptExpr 0x13b941f00 <col:34, col:40> '<dependent type>' contains-errors lvalue
    |         | |     | |-ImplicitCastExpr 0x13b941ee8 <col:34> '<dependent type>' contains-errors <LValueToRValue>
    |         | |     | | `-RecoveryExpr 0x13b941ea8 <col:34> '<dependent type>' contains-errors lvalue
    |         | |     | `-IntegerLiteral 0x13b941ec8 <col:39> 'int' 1
    |         | |     `-IntegerLiteral 0x13b941f20 <col:43> 'int' 187
    |         | `-ParenExpr 0x13b942058 <col:52, col:66> 'int' contains-errors
    |         |   `-BinaryOperator 0x13b942038 <col:53, col:62> 'int' contains-errors '=='
    |         |     |-ArraySubscriptExpr 0x13b941ff8 <col:53, col:59> '<dependent type>' contains-errors lvalue
    |         |     | |-ImplicitCastExpr 0x13b941fe0 <col:53> '<dependent type>' contains-errors <LValueToRValue>
    |         |     | | `-RecoveryExpr 0x13b941fa0 <col:53> '<dependent type>' contains-errors lvalue
    |         |     | `-IntegerLiteral 0x13b941fc0 <col:58> 'int' 2
    |         |     `-IntegerLiteral 0x13b942018 <col:62> 'int' 191
    |         `-CompoundStmt 0x13b942108 <col:69, line:22:3>
    |           `-ReturnStmt 0x13b9420f8 <line:21:4, col:16>
    |             `-BinaryOperator 0x13b9420d8 <col:11, col:16> '<dependent type>' contains-errors '+'
    |               |-RecoveryExpr 0x13b942098 <col:11> '<dependent type>' contains-errors lvalue
    |               `-IntegerLiteral 0x13b9420b8 <col:16> 'int' 4
    |-IfStmt 0x13b9422a0 <line:25:2, col:28>
    | |-UnaryOperator 0x13b942258 <col:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x13b942240 <col:7> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x13b942220 <col:7> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x13b942290 <col:21, col:28>
    |   `-RecoveryExpr 0x13b942270 <col:28> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x13b942380 <line:27:2, col:18>
    | |-BinaryOperator 0x13b942300 <col:6, col:11> '<dependent type>' contains-errors '%'
    | | |-RecoveryExpr 0x13b9422c0 <col:6> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x13b9422e0 <col:11> 'int' 2
    | `-UnaryOperator 0x13b942368 <col:14, col:18> '<dependent type>' contains-errors postfix '--' cannot overflow
    |   `-RecoveryExpr 0x13b942340 <col:14> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x13b942320 <col:14> 'int' lvalue ParmVar 0x13b9281a8 'size' 'int'
    |-DeclStmt 0x13b9426f8 <line:30:2, col:31>
    | `-VarDecl 0x13b9425e8 <col:2, col:30> col:8 used dst 'char *' cinit
    |   `-CallExpr 0x13b9426d0 <col:14, col:30> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x13b942650 <col:14> 'int ()' Function 0x13b942458 'gf_malloc' 'int ()'
    |     `-BinaryOperator 0x13b9426b0 <col:24, col:29> '<dependent type>' contains-errors '+'
    |       |-RecoveryExpr 0x13b942670 <col:24> '<dependent type>' contains-errors lvalue
    |       `-IntegerLiteral 0x13b942690 <col:29> 'int' 2
    |-BinaryOperator 0x13b942798 <line:31:2, col:13> 'char *' contains-errors '='
    | |-UnaryOperator 0x13b942748 <col:2, col:3> 'char *' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x13b942730 <col:3> 'char **' <LValueToRValue>
    | |   `-DeclRefExpr 0x13b942710 <col:3> 'char **' lvalue ParmVar 0x13b928258 'out_ptr' 'char **'
    | `-ImplicitCastExpr 0x13b942780 <col:13> 'char *' contains-errors <LValueToRValue>
    |   `-DeclRefExpr 0x13b942760 <col:13> 'char *' contains-errors lvalue Var 0x13b9425e8 'dst' 'char *'
    |-ForStmt 0x13b942b40 <line:33:2, line:54:2>
    | |-<<<NULL>>>
    | |-<<<NULL>>>
    | |-BinaryOperator 0x13b942898 <line:33:12, col:14> 'int' contains-errors '<'
    | | |-RecoveryExpr 0x13b942878 <col:12> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x13b942838 <col:14> '<dependent type>' contains-errors lvalue
    | |-CompoundAssignOperator 0x13b942940 <col:20, col:23> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | | |-RecoveryExpr 0x13b942920 <col:20> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x13b9428d0 <col:23> 'int' 2
    | `-CompoundStmt 0x13b942b28 <col:26, line:54:2>
    |   `-IfStmt 0x13b942ad8 <line:39:3, line:52:3> has_else
    |     |-RecoveryExpr 0x13b942990 <line:39:7, col:21> '_Bool' contains-errors
    |     |-CompoundStmt 0x13b942a38 <col:24, line:46:3>
    |     | `-IfStmt 0x13b942a08 <line:40:4, line:45:9> has_else
    |     |   |-RecoveryExpr 0x13b9429b0 <line:40:8> '_Bool' contains-errors
    |     |   |-CompoundStmt 0x13b9429f0 <col:12, line:44:4>
    |     |   `-NullStmt 0x13b942a00 <line:45:9>
    |     `-CompoundStmt 0x13b942ac0 <line:46:10, line:52:3>
    |       `-IfStmt 0x13b942aa0 <line:48:4, line:51:4>
    |         |-RecoveryExpr 0x13b942a50 <line:48:8> '_Bool' contains-errors
    |         `-CompoundStmt 0x13b942a90 <col:12, line:51:4>
    `-ReturnStmt 0x13b942e30 <line:60:2, col:9>
      `-ImplicitCastExpr 0x13b942e18 <col:9> 'char *' contains-errors <LValueToRValue>
        `-DeclRefExpr 0x13b942df8 <col:9> 'char *' contains-errors lvalue Var 0x13b9425e8 'dst' 'char *'
