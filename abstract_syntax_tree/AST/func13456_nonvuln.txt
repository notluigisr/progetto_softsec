TranslationUnitDecl 0x13e055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13e0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13e055bd0 '__int128'
|-TypedefDecl 0x13e056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13e055bf0 'unsigned __int128'
|-TypedefDecl 0x13e126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13e126000 'struct __NSConstantString_tag'
|   `-Record 0x13e056580 '__NSConstantString_tag'
|-TypedefDecl 0x13e126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13e055d90 '__SVInt8_t'
|-TypedefDecl 0x13e126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13e055db0 '__SVInt16_t'
|-TypedefDecl 0x13e126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13e055dd0 '__SVInt32_t'
|-TypedefDecl 0x13e1263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13e055df0 '__SVInt64_t'
|-TypedefDecl 0x13e126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13e055e10 '__SVUint8_t'
|-TypedefDecl 0x13e1264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13e055e30 '__SVUint16_t'
|-TypedefDecl 0x13e126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13e055e50 '__SVUint32_t'
|-TypedefDecl 0x13e126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13e055e70 '__SVUint64_t'
|-TypedefDecl 0x13e1265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13e055e90 '__SVFloat16_t'
|-TypedefDecl 0x13e126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13e055eb0 '__SVFloat32_t'
|-TypedefDecl 0x13e1266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13e055ed0 '__SVFloat64_t'
|-TypedefDecl 0x13e126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13e055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13e126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13e055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13e1267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13e055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13e126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13e055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13e1268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13e055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13e126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13e055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13e126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13e055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13e1269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13e055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13e126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13e055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13e126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13e056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13e126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13e056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13e126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13e056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13e126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13e056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13e126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13e056090 '__clang_svint8x3_t'
|-TypedefDecl 0x13e126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13e0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13e126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13e0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13e126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13e0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13e126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13e056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13e126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13e056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13e126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13e056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13e126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13e056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13e126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13e056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13e127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13e0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13e127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13e0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13e1278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13e0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13e127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13e056210 '__clang_svint8x4_t'
|-TypedefDecl 0x13e1279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13e056230 '__clang_svint16x4_t'
|-TypedefDecl 0x13e127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13e056250 '__clang_svint32x4_t'
|-TypedefDecl 0x13e127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13e056270 '__clang_svint64x4_t'
|-TypedefDecl 0x13e127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13e056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13e127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13e0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13e127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13e0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13e127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13e0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13e127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13e056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13e127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13e056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13e127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13e056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13e127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13e056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13e127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13e056390 '__SVBool_t'
|-TypedefDecl 0x13e127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13e0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13e127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13e0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13e127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13e0563f0 '__SVCount_t'
|-TypedefDecl 0x13e127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13e127fb0 'char *'
|   `-BuiltinType 0x13e0556b0 'char'
|-TypedefDecl 0x13e128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13e127fb0 'char *'
|   `-BuiltinType 0x13e0556b0 'char'
|-FunctionDecl 0x13e1281f8 <dataset_diviso_filec/func13456_nonvuln.c:1:1, line:55:1> line:1:1 invalid _rpc_reboot 'int (int *)'
| |-ParmVarDecl 0x13e128128 <col:13, col:26> col:26 invalid msg 'int *'
| `-CompoundStmt 0x13e80c058 <line:2:1, line:55:1>
|   |-DeclStmt 0x13e128480 <line:3:2, col:40>
|   | |-VarDecl 0x13e1282c0 <col:2, col:8> col:8 used reboot_program 'char *'
|   | |-VarDecl 0x13e128340 <col:2, col:31> col:25 used cmd 'char *' cinit
|   | | `-RecoveryExpr 0x13e1283c0 <col:31> '<dependent type>' contains-errors lvalue
|   | `-VarDecl 0x13e1283f8 <col:2, col:38> col:38 used sp 'char *'
|   |-DeclStmt 0x13e128548 <line:8:2, col:15>
|   | `-VarDecl 0x13e1284e0 <col:2, col:6> col:6 used exit_code 'int'
|   `-IfStmt 0x13e80c028 <line:10:2, line:51:2> has_else
|     |-UnaryOperator 0x13e128780 <line:10:6, col:37> '<dependent type>' contains-errors prefix '!' cannot overflow
|     | `-CallExpr 0x13e128758 <col:7, col:37> '<dependent type>' contains-errors
|     |   |-DeclRefExpr 0x13e1286c0 <col:7> 'int ()' Function 0x13e128608 '_slurm_authorized_user' 'int ()'
|     |   `-RecoveryExpr 0x13e128738 <col:30> '<dependent type>' contains-errors lvalue
|     |-CallExpr 0x13e8089a8 <line:11:3, line:12:16> '<dependent type>' contains-errors
|     | |-DeclRefExpr 0x13e8088b8 <line:11:3> 'int ()' Function 0x13e808800 'error' 'int ()'
|     | |-StringLiteral 0x13e808920 <col:9> 'char[4]' lvalue "STR"
|     | `-RecoveryExpr 0x13e808988 <line:12:9> '<dependent type>' contains-errors lvalue
|     `-CompoundStmt 0x13e80c000 <line:13:7, line:51:2>
|       |-BinaryOperator 0x13e808c50 <line:15:3, col:25> 'char *' contains-errors '='
|       | |-DeclRefExpr 0x13e808b48 <col:3> 'char *' lvalue Var 0x13e1282c0 'reboot_program' 'char *'
|       | `-CXXDependentScopeMemberExpr 0x13e808c08 <col:20, col:25> '<dependent type>' contains-errors lvalue ->reboot_program
|       |   `-RecoveryExpr 0x13e808be8 <col:20> '<dependent type>' contains-errors lvalue
|       |-IfStmt 0x13e80be98 <line:16:3, line:49:15> has_else
|       | |-ImplicitCastExpr 0x13e808c90 <line:16:7> 'char *' <LValueToRValue>
|       | | `-DeclRefExpr 0x13e808c70 <col:7> 'char *' lvalue Var 0x13e1282c0 'reboot_program' 'char *'
|       | |-CompoundStmt 0x13e80bdb0 <col:23, line:48:3>
|       | | |-BinaryOperator 0x13e809428 <line:17:4, col:35> 'char *' '='
|       | | | |-DeclRefExpr 0x13e808ca8 <col:4> 'char *' lvalue Var 0x13e1283f8 'sp' 'char *'
|       | | | `-CallExpr 0x13e8093c8 <col:9, col:35> 'char *'
|       | | |   |-ImplicitCastExpr 0x13e8093b0 <col:9> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|       | | |   | `-DeclRefExpr 0x13e809310 <col:9> 'char *(const char *, int)' Function 0x13e809130 'strchr' 'char *(const char *, int)'
|       | | |   |-ImplicitCastExpr 0x13e809410 <col:16> 'const char *' <NoOp>
|       | | |   | `-ImplicitCastExpr 0x13e8093f8 <col:16> 'char *' <LValueToRValue>
|       | | |   |   `-DeclRefExpr 0x13e809330 <col:16> 'char *' lvalue Var 0x13e1282c0 'reboot_program' 'char *'
|       | | |   `-CharacterLiteral 0x13e809350 <col:32> 'int' 32
|       | | |-IfStmt 0x13e80aee0 <line:18:4, line:22:32> has_else
|       | | | |-ImplicitCastExpr 0x13e809468 <line:18:8> 'char *' <LValueToRValue>
|       | | | | `-DeclRefExpr 0x13e809448 <col:8> 'char *' lvalue Var 0x13e1283f8 'sp' 'char *'
|       | | | |-BinaryOperator 0x13e8096e8 <line:19:5, line:20:33> 'char *' '='
|       | | | | |-DeclRefExpr 0x13e809480 <line:19:5> 'char *' lvalue Var 0x13e1283f8 'sp' 'char *'
|       | | | | `-ImplicitCastExpr 0x13e8096d0 <col:10, line:20:33> 'char *' <IntegralToPointer>
|       | | | |   `-CallExpr 0x13e809688 <line:19:10, line:20:33> 'int'
|       | | | |     |-ImplicitCastExpr 0x13e809670 <line:19:10> 'int (*)()' <FunctionToPointerDecay>
|       | | | |     | `-DeclRefExpr 0x13e809580 <col:10> 'int ()' Function 0x13e8094c8 'xstrndup' 'int ()'
|       | | | |     |-ImplicitCastExpr 0x13e8096b8 <col:19> 'char *' <LValueToRValue>
|       | | | |     | `-DeclRefExpr 0x13e8095a0 <col:19> 'char *' lvalue Var 0x13e1282c0 'reboot_program' 'char *'
|       | | | |     `-ParenExpr 0x13e809650 <line:20:12, col:32> 'long'
|       | | | |       `-BinaryOperator 0x13e809630 <col:13, col:18> 'long' '-'
|       | | | |         |-ImplicitCastExpr 0x13e809600 <col:13> 'char *' <LValueToRValue>
|       | | | |         | `-DeclRefExpr 0x13e8095c0 <col:13> 'char *' lvalue Var 0x13e1283f8 'sp' 'char *'
|       | | | |         `-ImplicitCastExpr 0x13e809618 <col:18> 'char *' <LValueToRValue>
|       | | | |           `-DeclRefExpr 0x13e8095e0 <col:18> 'char *' lvalue Var 0x13e1282c0 'reboot_program' 'char *'
|       | | | `-BinaryOperator 0x13e80aec0 <line:22:5, col:32> 'char *' '='
|       | | |   |-DeclRefExpr 0x13e809708 <col:5> 'char *' lvalue Var 0x13e1283f8 'sp' 'char *'
|       | | |   `-ImplicitCastExpr 0x13e80aea8 <col:10, col:32> 'char *' <IntegralToPointer>
|       | | |     `-CallExpr 0x13e80ae68 <col:10, col:32> 'int'
|       | | |       |-ImplicitCastExpr 0x13e80ae50 <col:10> 'int (*)()' <FunctionToPointerDecay>
|       | | |       | `-DeclRefExpr 0x13e80ae10 <col:10> 'int ()' Function 0x13e809750 'xstrdup' 'int ()'
|       | | |       `-ImplicitCastExpr 0x13e80ae90 <col:18> 'char *' <LValueToRValue>
|       | | |         `-DeclRefExpr 0x13e80ae30 <col:18> 'char *' lvalue Var 0x13e1282c0 'reboot_program' 'char *'
|       | | |-IfStmt 0x13e80b5f8 <line:24:4, line:40:4> has_else
|       | | | |-RecoveryExpr 0x13e80af10 <line:24:8, col:34> '_Bool' contains-errors
|       | | | |-CompoundStmt 0x13e80b438 <col:44, line:36:4>
|       | | | | `-IfStmt 0x13e80b408 <line:30:5, line:35:5> has_else
|       | | | |   |-RecoveryExpr 0x13e80b170 <line:30:9, col:31> '_Bool' contains-errors
|       | | | |   |-CompoundStmt 0x13e80b2f0 <col:34, line:33:5>
|       | | | |   `-CompoundStmt 0x13e80b3f0 <col:12, line:35:5>
|       | | | |     `-BinaryOperator 0x13e80b3d0 <line:34:6, col:22> 'char *' contains-errors '='
|       | | | |       |-DeclRefExpr 0x13e80b300 <col:6> 'char *' contains-errors lvalue Var 0x13e128340 'cmd' 'char *'
|       | | | |       `-ImplicitCastExpr 0x13e80b3b8 <col:12, col:22> 'char *' <IntegralToPointer>
|       | | | |         `-CallExpr 0x13e80b378 <col:12, col:22> 'int'
|       | | | |           |-ImplicitCastExpr 0x13e80b360 <col:12> 'int (*)()' <FunctionToPointerDecay>
|       | | | |           | `-DeclRefExpr 0x13e80b320 <col:12> 'int ()' Function 0x13e809750 'xstrdup' 'int ()'
|       | | | |           `-ImplicitCastExpr 0x13e80b3a0 <col:20> 'char *' <LValueToRValue>
|       | | | |             `-DeclRefExpr 0x13e80b340 <col:20> 'char *' lvalue Var 0x13e1283f8 'sp' 'char *'
|       | | | `-CompoundStmt 0x13e80b5d8 <line:36:11, line:40:4>
|       | | |   |-BinaryOperator 0x13e80b520 <line:38:5, col:33> 'char *' contains-errors '='
|       | | |   | |-DeclRefExpr 0x13e80b450 <col:5> 'char *' contains-errors lvalue Var 0x13e128340 'cmd' 'char *'
|       | | |   | `-ImplicitCastExpr 0x13e80b508 <col:11, col:33> 'char *' <IntegralToPointer>
|       | | |   |   `-CallExpr 0x13e80b4c8 <col:11, col:33> 'int'
|       | | |   |     |-ImplicitCastExpr 0x13e80b4b0 <col:11> 'int (*)()' <FunctionToPointerDecay>
|       | | |   |     | `-DeclRefExpr 0x13e80b470 <col:11> 'int ()' Function 0x13e809750 'xstrdup' 'int ()'
|       | | |   |     `-ImplicitCastExpr 0x13e80b4f0 <col:19> 'char *' <LValueToRValue>
|       | | |   |       `-DeclRefExpr 0x13e80b490 <col:19> 'char *' lvalue Var 0x13e1282c0 'reboot_program' 'char *'
|       | | |   `-CallExpr 0x13e80b598 <line:39:5, col:15> 'int'
|       | | |     |-ImplicitCastExpr 0x13e80b580 <col:5> 'int (*)()' <FunctionToPointerDecay>
|       | | |     | `-DeclRefExpr 0x13e80b540 <col:5> 'int ()' Function 0x13e80af58 'info' 'int ()'
|       | | |     `-ImplicitCastExpr 0x13e80b5c0 <col:10> 'char *' <ArrayToPointerDecay>
|       | | |       `-StringLiteral 0x13e80b560 <col:10> 'char[4]' lvalue "STR"
|       | | |-IfStmt 0x13e80bb70 <line:41:4, line:45:20> has_else
|       | | | |-RecoveryExpr 0x13e80b768 <line:41:8, col:34> '_Bool' contains-errors
|       | | | |-CallExpr 0x13e80b800 <line:42:5, col:20> 'int'
|       | | | | |-ImplicitCastExpr 0x13e80b7e8 <col:5> 'int (*)()' <FunctionToPointerDecay>
|       | | | | | `-DeclRefExpr 0x13e80b788 <col:5> 'int ()' Function 0x13e808800 'error' 'int ()'
|       | | | | |-ImplicitCastExpr 0x13e80b830 <col:11> 'char *' <ArrayToPointerDecay>
|       | | | | | `-StringLiteral 0x13e80b7a8 <col:11> 'char[4]' lvalue "STR"
|       | | | | `-ImplicitCastExpr 0x13e80b848 <col:18> 'char *' <LValueToRValue>
|       | | | |   `-DeclRefExpr 0x13e80b7c8 <col:18> 'char *' lvalue Var 0x13e1283f8 'sp' 'char *'
|       | | | `-IfStmt 0x13e80bb50 <line:43:9, line:45:20>
|       | | |   |-ParenExpr 0x13e80ba18 <line:43:13, col:37> 'int' contains-errors
|       | | |   | `-BinaryOperator 0x13e80b9f8 <col:14, col:36> 'int' contains-errors '='
|       | | |   |   |-DeclRefExpr 0x13e80b860 <col:14> 'int' lvalue Var 0x13e1284e0 'exit_code' 'int'
|       | | |   |   `-CallExpr 0x13e80b9b8 <col:26, col:36> 'int' contains-errors
|       | | |   |     |-ImplicitCastExpr 0x13e80b9a0 <col:26> 'int (*)()' <FunctionToPointerDecay>
|       | | |   |     | `-DeclRefExpr 0x13e80b960 <col:26> 'int ()' Function 0x13e80b8a8 'system' 'int ()'
|       | | |   |     `-ImplicitCastExpr 0x13e80b9e0 <col:33> 'char *' contains-errors <LValueToRValue>
|       | | |   |       `-DeclRefExpr 0x13e80b980 <col:33> 'char *' contains-errors lvalue Var 0x13e128340 'cmd' 'char *'
|       | | |   `-CallExpr 0x13e80bad0 <line:44:5, line:45:20> 'int'
|       | | |     |-ImplicitCastExpr 0x13e80bab8 <line:44:5> 'int (*)()' <FunctionToPointerDecay>
|       | | |     | `-DeclRefExpr 0x13e80ba38 <col:5> 'int ()' Function 0x13e808800 'error' 'int ()'
|       | | |     |-ImplicitCastExpr 0x13e80bb08 <col:11> 'char *' <ArrayToPointerDecay>
|       | | |     | `-StringLiteral 0x13e80ba58 <col:11> 'char[4]' lvalue "STR"
|       | | |     |-ImplicitCastExpr 0x13e80bb20 <col:18> 'char *' <LValueToRValue>
|       | | |     | `-DeclRefExpr 0x13e80ba78 <col:18> 'char *' lvalue Var 0x13e1282c0 'reboot_program' 'char *'
|       | | |     `-ImplicitCastExpr 0x13e80bb38 <line:45:11> 'int' <LValueToRValue>
|       | | |       `-DeclRefExpr 0x13e80ba98 <col:11> 'int' lvalue Var 0x13e1284e0 'exit_code' 'int'
|       | | |-CallExpr 0x13e80bcd8 <line:46:4, col:12> 'int'
|       | | | |-ImplicitCastExpr 0x13e80bcc0 <col:4> 'int (*)()' <FunctionToPointerDecay>
|       | | | | `-DeclRefExpr 0x13e80bc80 <col:4> 'int ()' Function 0x13e80bbc8 'xfree' 'int ()'
|       | | | `-ImplicitCastExpr 0x13e80bd00 <col:10> 'char *' <LValueToRValue>
|       | | |   `-DeclRefExpr 0x13e80bca0 <col:10> 'char *' lvalue Var 0x13e1283f8 'sp' 'char *'
|       | | `-CallExpr 0x13e80bd70 <line:47:4, col:13> 'int' contains-errors
|       | |   |-ImplicitCastExpr 0x13e80bd58 <col:4> 'int (*)()' <FunctionToPointerDecay>
|       | |   | `-DeclRefExpr 0x13e80bd18 <col:4> 'int ()' Function 0x13e80bbc8 'xfree' 'int ()'
|       | |   `-ImplicitCastExpr 0x13e80bd98 <col:10> 'char *' contains-errors <LValueToRValue>
|       | |     `-DeclRefExpr 0x13e80bd38 <col:10> 'char *' contains-errors lvalue Var 0x13e128340 'cmd' 'char *'
|       | `-CallExpr 0x13e80be58 <line:49:4, col:15> 'int'
|       |   |-ImplicitCastExpr 0x13e80be40 <col:4> 'int (*)()' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x13e80be00 <col:4> 'int ()' Function 0x13e808800 'error' 'int ()'
|       |   `-ImplicitCastExpr 0x13e80be80 <col:10> 'char *' <ArrayToPointerDecay>
|       |     `-StringLiteral 0x13e80be20 <col:10> 'char[4]' lvalue "STR"
|       `-CallExpr 0x13e80bfe0 <line:50:3, col:21> 'int'
|         `-ImplicitCastExpr 0x13e80bfc8 <col:3> 'int (*)()' <FunctionToPointerDecay>
|           `-DeclRefExpr 0x13e80bfa8 <col:3> 'int ()' Function 0x13e80bef0 'slurm_conf_unlock' 'int ()'
`-FunctionDecl 0x13e809130 <line:17:9> col:9 implicit used strchr 'char *(const char *, int)' extern
  |-ParmVarDecl 0x13e809230 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x13e809298 <<invalid sloc>> <invalid sloc> 'int'
  `-BuiltinAttr 0x13e8091d8 <<invalid sloc>> Implicit 893
