TranslationUnitDecl 0x147855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1478564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x147855bd0 '__int128'
|-TypedefDecl 0x147856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x147855bf0 'unsigned __int128'
|-TypedefDecl 0x15100be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15100bc00 'struct __NSConstantString_tag'
|   `-Record 0x147856580 '__NSConstantString_tag'
|-TypedefDecl 0x15100be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x147855d90 '__SVInt8_t'
|-TypedefDecl 0x15100bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x147855db0 '__SVInt16_t'
|-TypedefDecl 0x15100bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x147855dd0 '__SVInt32_t'
|-TypedefDecl 0x15100bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x147855df0 '__SVInt64_t'
|-TypedefDecl 0x15100c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x147855e10 '__SVUint8_t'
|-TypedefDecl 0x15100c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x147855e30 '__SVUint16_t'
|-TypedefDecl 0x15100c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x147855e50 '__SVUint32_t'
|-TypedefDecl 0x15100c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x147855e70 '__SVUint64_t'
|-TypedefDecl 0x15100c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x147855e90 '__SVFloat16_t'
|-TypedefDecl 0x15100c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x147855eb0 '__SVFloat32_t'
|-TypedefDecl 0x15100c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x147855ed0 '__SVFloat64_t'
|-TypedefDecl 0x15100c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x147855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15100c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x147855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15100c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x147855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15100c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x147855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15100c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x147855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15100c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x147855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15100c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x147855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15100c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x147855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15100c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x147855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15100c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x147856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15100c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x147856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15100c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x147856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15100c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x147856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15100c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x147856090 '__clang_svint8x3_t'
|-TypedefDecl 0x15100c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1478560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15100c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1478560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15100c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1478560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15100c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x147856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15100ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x147856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15100cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x147856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15100cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x147856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15100cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x147856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15100d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1478561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15100d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1478561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15100d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1478561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15100d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x147856210 '__clang_svint8x4_t'
|-TypedefDecl 0x15100d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x147856230 '__clang_svint16x4_t'
|-TypedefDecl 0x15100d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x147856250 '__clang_svint32x4_t'
|-TypedefDecl 0x15100d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x147856270 '__clang_svint64x4_t'
|-TypedefDecl 0x15100d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x147856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15100d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1478562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15100d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1478562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15100d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1478562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15100d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x147856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15100d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x147856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15100d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x147856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15100d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x147856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15100da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x147856390 '__SVBool_t'
|-TypedefDecl 0x15100da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1478563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15100dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1478563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15100db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1478563f0 '__SVCount_t'
|-TypedefDecl 0x15100dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15100dbb0 'char *'
|   `-BuiltinType 0x1478556b0 'char'
|-TypedefDecl 0x15100dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15100dbb0 'char *'
|   `-BuiltinType 0x1478556b0 'char'
`-FunctionDecl 0x15100dda8 <dataset_diviso_filec/func1382_vuln.c:1:1, line:48:1> line:1:1 PS_SERIALIZER_DECODE_FUNC 'int (int)'
  |-ParmVarDecl 0x15100dcd8 <col:27> col:27 php_binary 'int'
  `-CompoundStmt 0x1500917b0 <line:2:1, line:48:1>
    |-DeclStmt 0x15100df20 <line:3:2, col:15>
    | `-VarDecl 0x15100deb8 <col:2, col:14> col:14 used p 'const char *'
    |-DeclStmt 0x15100dfb8 <line:4:2, col:12>
    | `-VarDecl 0x15100df50 <col:2, col:8> col:8 used name 'char *'
    |-DeclStmt 0x15100e118 <line:5:2, col:35>
    | `-VarDecl 0x15100dfe8 <col:2, col:29> col:14 used endptr 'const char *' cinit
    |   `-BinaryOperator 0x15100e0f8 <col:23, col:29> '<dependent type>' contains-errors '+'
    |     |-RecoveryExpr 0x15100e0b8 <col:23> '<dependent type>' contains-errors lvalue
    |     `-RecoveryExpr 0x15100e0d8 <col:29> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x15100e1c8 <line:7:2, col:13>
    | `-VarDecl 0x15100e160 <col:2, col:6> col:6 used namelen 'int'
    |-DeclStmt 0x15100e260 <line:8:2, col:15>
    | `-VarDecl 0x15100e1f8 <col:2, col:6> col:6 used has_value 'int'
    |-CallExpr 0x147842020 <line:11:2, col:35> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x15100e390 <col:2> 'int ()' Function 0x15100e2d8 'PHP_VAR_UNSERIALIZE_INIT' 'int ()'
    | `-RecoveryExpr 0x147842000 <col:27> '<dependent type>' contains-errors lvalue
    `-ForStmt 0x150091678 <line:13:2, line:43:2>
      |-<<<NULL>>>
      |-<<<NULL>>>
      |-BinaryOperator 0x147842110 <line:13:16, col:20> 'int' contains-errors '<'
      | |-ImplicitCastExpr 0x1478420e0 <col:16> 'const char *' <LValueToRValue>
      | | `-DeclRefExpr 0x1478420a0 <col:16> 'const char *' lvalue Var 0x15100deb8 'p' 'const char *'
      | `-ImplicitCastExpr 0x1478420f8 <col:20> 'const char *' contains-errors <LValueToRValue>
      |   `-DeclRefExpr 0x1478420c0 <col:20> 'const char *' contains-errors lvalue Var 0x15100dfe8 'endptr' 'const char *'
      |-<<<NULL>>>
      `-CompoundStmt 0x150091628 <col:30, line:43:2>
        |-IfStmt 0x1478426f8 <line:17:3, line:19:3>
        | |-BinaryOperator 0x147842678 <line:17:7, col:63> 'int' contains-errors '||'
        | | |-BinaryOperator 0x1478425b0 <col:7, col:32> 'int' contains-errors '||'
        | | | |-BinaryOperator 0x147842550 <col:7, col:17> 'int' '<'
        | | | | |-ImplicitCastExpr 0x147842538 <col:7> 'int' <LValueToRValue>
        | | | | | `-DeclRefExpr 0x1478422e8 <col:7> 'int' lvalue Var 0x15100e160 'namelen' 'int'
        | | | | `-IntegerLiteral 0x147842308 <col:17> 'int' 0
        | | | `-BinaryOperator 0x147842590 <col:22, col:32> 'int' contains-errors '>'
        | | |   |-DeclRefExpr 0x147842360 <col:22> 'int' lvalue Var 0x15100e160 'namelen' 'int'
        | | |   `-RecoveryExpr 0x147842570 <col:32> '<dependent type>' contains-errors lvalue
        | | `-BinaryOperator 0x147842658 <col:46, col:63> 'int' contains-errors '>='
        | |   |-ParenExpr 0x147842620 <col:46, col:58> 'const char *'
        | |   | `-BinaryOperator 0x147842600 <col:47, col:51> 'const char *' '+'
        | |   |   |-ImplicitCastExpr 0x1478425d0 <col:47> 'const char *' <LValueToRValue>
        | |   |   | `-DeclRefExpr 0x1478423d8 <col:47> 'const char *' lvalue Var 0x15100deb8 'p' 'const char *'
        | |   |   `-ImplicitCastExpr 0x1478425e8 <col:51> 'int' <LValueToRValue>
        | |   |     `-DeclRefExpr 0x1478423f8 <col:51> 'int' lvalue Var 0x15100e160 'namelen' 'int'
        | |   `-ImplicitCastExpr 0x147842640 <col:63> 'const char *' contains-errors <LValueToRValue>
        | |     `-DeclRefExpr 0x147842488 <col:63> 'const char *' contains-errors lvalue Var 0x15100dfe8 'endptr' 'const char *'
        | `-CompoundStmt 0x1478426e0 <col:71, line:19:3>
        |   `-ReturnStmt 0x1478426d0 <line:18:4, col:11>
        |     `-RecoveryExpr 0x1478426b0 <col:11> '<dependent type>' contains-errors lvalue
        |-BinaryOperator 0x147842920 <line:21:3, col:39> 'int' contains-errors '='
        | |-DeclRefExpr 0x147842718 <col:3> 'int' lvalue Var 0x15100e1f8 'has_value' 'int'
        | `-ConditionalOperator 0x1478428f0 <col:15, col:39> '<dependent type>' contains-errors
        |   |-BinaryOperator 0x1478428d0 <col:15, col:20> '<dependent type>' contains-errors '&'
        |   | |-UnaryOperator 0x147842898 <col:15, col:16> 'const char' lvalue prefix '*' cannot overflow
        |   | | `-ImplicitCastExpr 0x147842880 <col:16> 'const char *' <LValueToRValue>
        |   | |   `-DeclRefExpr 0x147842738 <col:16> 'const char *' lvalue Var 0x15100deb8 'p' 'const char *'
        |   | `-RecoveryExpr 0x1478428b0 <col:20> '<dependent type>' contains-errors lvalue
        |   |-IntegerLiteral 0x1478427c0 <col:35> 'int' 0
        |   `-IntegerLiteral 0x1478427e0 <col:39> 'int' 1
        |-BinaryOperator 0x147842fd0 <line:23:3, col:33> 'char *' '='
        | |-DeclRefExpr 0x147842940 <col:3> 'char *' lvalue Var 0x15100df50 'name' 'char *'
        | `-ImplicitCastExpr 0x147842b90 <col:10, col:33> 'char *' <IntegralToPointer>
        |   `-CallExpr 0x147842b48 <col:10, col:33> 'int'
        |     |-ImplicitCastExpr 0x147842b30 <col:10> 'int (*)()' <FunctionToPointerDecay>
        |     | `-DeclRefExpr 0x147842a40 <col:10> 'int ()' Function 0x147842988 'estrndup' 'int ()'
        |     |-BinaryOperator 0x147842ab8 <col:19, col:23> 'const char *' '+'
        |     | |-ImplicitCastExpr 0x147842aa0 <col:19> 'const char *' <LValueToRValue>
        |     | | `-DeclRefExpr 0x147842a60 <col:19> 'const char *' lvalue Var 0x15100deb8 'p' 'const char *'
        |     | `-IntegerLiteral 0x147842a80 <col:23> 'int' 1
        |     `-ImplicitCastExpr 0x147842b78 <col:26> 'int' <LValueToRValue>
        |       `-DeclRefExpr 0x147842ad8 <col:26> 'int' lvalue Var 0x15100e160 'namelen' 'int'
        |-CompoundAssignOperator 0x15008fe98 <line:25:3, col:18> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'
        | |-DeclRefExpr 0x15008fe00 <col:3> 'const char *' lvalue Var 0x15100deb8 'p' 'const char *'
        | `-BinaryOperator 0x15008fe78 <col:8, col:18> 'int' '+'
        |   |-ImplicitCastExpr 0x15008fe60 <col:8> 'int' <LValueToRValue>
        |   | `-DeclRefExpr 0x15008fe20 <col:8> 'int' lvalue Var 0x15100e160 'namelen' 'int'
        |   `-IntegerLiteral 0x15008fe40 <col:18> 'int' 1
        |-IfStmt 0x150090698 <line:27:3, line:32:3>
        | |-RecoveryExpr 0x150090160 <line:27:7, col:79> '_Bool' contains-errors
        | `-CompoundStmt 0x150090680 <col:88, line:32:3>
        |   `-IfStmt 0x150090660 <line:28:4, line:31:4>
        |     |-RecoveryExpr 0x1500904a0 <line:28:8, col:109> '_Bool' contains-errors
        |     `-CompoundStmt 0x150090640 <col:112, line:31:4>
        |       |-CallExpr 0x1500905f8 <line:29:5, col:15> 'int'
        |       | |-ImplicitCastExpr 0x1500905e0 <col:5> 'int (*)()' <FunctionToPointerDecay>
        |       | | `-DeclRefExpr 0x1500905a0 <col:5> 'int ()' Function 0x1500904e8 'efree' 'int ()'
        |       | `-ImplicitCastExpr 0x150090620 <col:11> 'char *' <LValueToRValue>
        |       |   `-DeclRefExpr 0x1500905c0 <col:11> 'char *' lvalue Var 0x15100df50 'name' 'char *'
        |       `-ContinueStmt 0x150090638 <line:30:5>
        |-IfStmt 0x150090d28 <line:34:3, line:40:3>
        | |-ImplicitCastExpr 0x1500906d8 <line:34:7> 'int' <LValueToRValue>
        | | `-DeclRefExpr 0x1500906b8 <col:7> 'int' lvalue Var 0x15100e1f8 'has_value' 'int'
        | `-CompoundStmt 0x150090d10 <col:18, line:40:3>
        |   `-IfStmt 0x150090bf0 <line:36:4, line:38:4>
        |     |-RecoveryExpr 0x150090a80 <line:36:8, col:118> '_Bool' contains-errors
        |     `-CompoundStmt 0x150090be0 <col:121, line:38:4>
        |-CallExpr 0x150091530 <line:41:3, col:28> 'int'
        | |-ImplicitCastExpr 0x150091518 <col:3> 'int (*)()' <FunctionToPointerDecay>
        | | `-DeclRefExpr 0x1500914b8 <col:3> 'int ()' Function 0x150091400 'PS_ADD_VARL' 'int ()'
        | |-ImplicitCastExpr 0x150091560 <col:15> 'char *' <LValueToRValue>
        | | `-DeclRefExpr 0x1500914d8 <col:15> 'char *' lvalue Var 0x15100df50 'name' 'char *'
        | `-ImplicitCastExpr 0x150091578 <col:21> 'int' <LValueToRValue>
        |   `-DeclRefExpr 0x1500914f8 <col:21> 'int' lvalue Var 0x15100e160 'namelen' 'int'
        `-CallExpr 0x1500915e8 <line:42:3, col:13> 'int'
          |-ImplicitCastExpr 0x1500915d0 <col:3> 'int (*)()' <FunctionToPointerDecay>
          | `-DeclRefExpr 0x150091590 <col:3> 'int ()' Function 0x1500904e8 'efree' 'int ()'
          `-ImplicitCastExpr 0x150091610 <col:9> 'char *' <LValueToRValue>
            `-DeclRefExpr 0x1500915b0 <col:9> 'char *' lvalue Var 0x15100df50 'name' 'char *'
