TranslationUnitDecl 0x151855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1518564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x151855bd0 '__int128'
|-TypedefDecl 0x151856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x151855bf0 'unsigned __int128'
|-TypedefDecl 0x151926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x151926000 'struct __NSConstantString_tag'
|   `-Record 0x151856580 '__NSConstantString_tag'
|-TypedefDecl 0x151926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x151855d90 '__SVInt8_t'
|-TypedefDecl 0x151926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x151855db0 '__SVInt16_t'
|-TypedefDecl 0x151926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x151855dd0 '__SVInt32_t'
|-TypedefDecl 0x1519263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x151855df0 '__SVInt64_t'
|-TypedefDecl 0x151926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x151855e10 '__SVUint8_t'
|-TypedefDecl 0x1519264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x151855e30 '__SVUint16_t'
|-TypedefDecl 0x151926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x151855e50 '__SVUint32_t'
|-TypedefDecl 0x151926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x151855e70 '__SVUint64_t'
|-TypedefDecl 0x1519265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x151855e90 '__SVFloat16_t'
|-TypedefDecl 0x151926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x151855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1519266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x151855ed0 '__SVFloat64_t'
|-TypedefDecl 0x151926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x151855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x151926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x151855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1519267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x151855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x151926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x151855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1519268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x151855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x151926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x151855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x151926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x151855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1519269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x151855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x151926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x151855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x151926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x151856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x151926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x151856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x151926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x151856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x151926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x151856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x151926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x151856090 '__clang_svint8x3_t'
|-TypedefDecl 0x151926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1518560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x151926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1518560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x151926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1518560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x151926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x151856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x151926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x151856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x151926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x151856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x151926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x151856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x151926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x151856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x151927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1518561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x151927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1518561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1519278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1518561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x151927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x151856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1519279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x151856230 '__clang_svint16x4_t'
|-TypedefDecl 0x151927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x151856250 '__clang_svint32x4_t'
|-TypedefDecl 0x151927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x151856270 '__clang_svint64x4_t'
|-TypedefDecl 0x151927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x151856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x151927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1518562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x151927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1518562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x151927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1518562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x151927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x151856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x151927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x151856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x151927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x151856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x151927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x151856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x151927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x151856390 '__SVBool_t'
|-TypedefDecl 0x151927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1518563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x151927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1518563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x151927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1518563f0 '__SVCount_t'
|-TypedefDecl 0x151927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x151927fb0 'char *'
|   `-BuiltinType 0x1518556b0 'char'
|-TypedefDecl 0x151928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x151927fb0 'char *'
|   `-BuiltinType 0x1518556b0 'char'
|-FunctionDecl 0x151928318 <dataset_diviso_filec/func15541_vuln.c:1:1, line:46:14> line:1:20 invalid txtin_probe_data 'const char *(const int *, int, int *)' static
| |-ParmVarDecl 0x1519280f0 <col:37, col:47> col:47 referenced invalid data 'const int *'
| |-ParmVarDecl 0x151928170 <col:53, col:57> col:57 invalid data_size 'int'
| |-ParmVarDecl 0x151928228 <col:68, col:89> col:89 referenced invalid score 'int *'
| `-CompoundStmt 0x151944458 <line:2:1, line:46:14>
|   |-DeclStmt 0x151928490 <line:3:2, col:18>
|   | `-VarDecl 0x1519283f0 <col:2, col:14> col:8 used dst 'char *' cinit
|   |   `-RecoveryExpr 0x151928470 <col:14> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x151942860 <line:7:2, col:18>
|   | |-RecoveryExpr 0x151928778 <col:6> '<dependent type>' contains-errors lvalue
|   | `-BinaryOperator 0x151942840 <col:11, col:18> '<dependent type>' contains-errors '='
|   |   |-RecoveryExpr 0x1519287b8 <col:11> '<dependent type>' contains-errors lvalue
|   |   | `-DeclRefExpr 0x151928798 <col:11> 'const int *' lvalue ParmVar 0x1519280f0 'data' 'const int *'
|   |   `-RecoveryExpr 0x151942820 <col:18> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x1519429a8 <line:10:3, col:12> '<dependent type>' contains-errors '='
|   | |-UnaryOperator 0x151942970 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x151942958 <col:4> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x151942880 <col:4> '<dependent type>' contains-errors lvalue
|   | `-RecoveryExpr 0x151942988 <col:12> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x151942ba8 <line:11:3, col:23>
|   | |-ImplicitCastExpr 0x1519429e8 <col:7> 'char *' contains-errors <LValueToRValue>
|   | | `-DeclRefExpr 0x1519429c8 <col:7> 'char *' contains-errors lvalue Var 0x1519283f0 'dst' 'char *'
|   | `-CallExpr 0x151942b68 <col:12, col:23> 'int' contains-errors
|   |   |-ImplicitCastExpr 0x151942b50 <col:12> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x151942ae0 <col:12> 'int ()' Function 0x151942a28 'gf_free' 'int ()'
|   |   `-ImplicitCastExpr 0x151942b90 <col:20> 'char *' contains-errors <LValueToRValue>
|   |     `-DeclRefExpr 0x151942b00 <col:20> 'char *' contains-errors lvalue Var 0x1519283f0 'dst' 'char *'
|   |-ReturnStmt 0x151942c00 <line:12:3, col:10>
|   | `-RecoveryExpr 0x151942be0 <col:10> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x1519435e0 <line:15:2, line:17:2>
|   | |-UnaryOperator 0x1519433f8 <line:15:6, col:29> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-CallExpr 0x1519433c0 <col:7, col:29> '<dependent type>' contains-errors
|   | |   |-DeclRefExpr 0x1519432d0 <col:7> 'int (const char *, const char *, unsigned long)' Function 0x151943080 'strncmp' 'int (const char *, const char *, unsigned long)'
|   | |   |-RecoveryExpr 0x1519432f0 <col:15> '<dependent type>' contains-errors lvalue
|   | |   |-StringLiteral 0x151943350 <col:21> 'char[4]' lvalue "STR"
|   | |   `-IntegerLiteral 0x151943370 <col:28> 'int' 6
|   | `-CompoundStmt 0x1519435c8 <col:32, line:17:2>
|   |   `-CallExpr 0x151943598 <line:16:3, col:38> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x1519434f0 <col:3> 'int ()' Function 0x151943438 'PROBE_OK' 'int ()'
|   |     |-RecoveryExpr 0x151943578 <col:12> '<dependent type>' contains-errors lvalue
|   |     `-StringLiteral 0x151943528 <col:33> 'char[4]' lvalue "STR"
|   |-IfStmt 0x151943a28 <line:18:2, line:20:2>
|   | |-CallExpr 0x151943908 <line:18:6, col:24> '<dependent type>' contains-errors
|   | | |-DeclRefExpr 0x151943878 <col:6> 'char *(const char *, const char *)' Function 0x151943640 'strstr' 'char *(const char *, const char *)'
|   | | |-RecoveryExpr 0x151943898 <col:13> '<dependent type>' contains-errors lvalue
|   | | `-StringLiteral 0x1519438b8 <col:19> 'char[4]' lvalue "STR"
|   | `-CompoundStmt 0x151943a10 <col:27, line:20:2>
|   |   `-CallExpr 0x1519439e0 <line:19:3, col:44> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x151943938 <col:3> 'int ()' Function 0x151943438 'PROBE_OK' 'int ()'
|   |     |-RecoveryExpr 0x1519439c0 <col:12> '<dependent type>' contains-errors lvalue
|   |     `-StringLiteral 0x151943970 <col:39> 'char[4]' lvalue "STR"
|   |-IfStmt 0x151943b98 <line:21:2, line:23:2>
|   | |-UnaryOperator 0x151943b30 <line:21:6, col:29> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-CallExpr 0x151943af8 <col:7, col:29> '<dependent type>' contains-errors
|   | |   |-DeclRefExpr 0x151943a48 <col:7> 'int (const char *, const char *, unsigned long)' Function 0x151943080 'strncmp' 'int (const char *, const char *, unsigned long)'
|   | |   |-RecoveryExpr 0x151943a68 <col:15> '<dependent type>' contains-errors lvalue
|   | |   |-StringLiteral 0x151943a88 <col:21> 'char[4]' lvalue "STR"
|   | |   `-IntegerLiteral 0x151943aa8 <col:28> 'int' 3
|   | `-CompoundStmt 0x151943b88 <col:32, line:23:2>
|   |-IfStmt 0x151943db8 <line:25:2, line:28:2>
|   | |-BinaryOperator 0x151943d48 <line:25:6, col:42> 'int' contains-errors '&&'
|   | | |-ParenExpr 0x151943c68 <col:6, col:19> 'int' contains-errors
|   | | | `-BinaryOperator 0x151943c48 <col:7, col:16> 'int' contains-errors '=='
|   | | |   |-ArraySubscriptExpr 0x151943c10 <col:7, col:13> '<dependent type>' contains-errors lvalue
|   | | |   | |-ImplicitCastExpr 0x151943bf8 <col:7> '<dependent type>' contains-errors <LValueToRValue>
|   | | |   | | `-RecoveryExpr 0x151943bb8 <col:7> '<dependent type>' contains-errors lvalue
|   | | |   | `-IntegerLiteral 0x151943bd8 <col:12> 'int' 0
|   | | |   `-CharacterLiteral 0x151943c30 <col:16> 'int' 123
|   | | `-CallExpr 0x151943d18 <col:24, col:42> '<dependent type>' contains-errors
|   | |   |-DeclRefExpr 0x151943c88 <col:24> 'char *(const char *, const char *)' Function 0x151943640 'strstr' 'char *(const char *, const char *)'
|   | |   |-RecoveryExpr 0x151943ca8 <col:31> '<dependent type>' contains-errors lvalue
|   | |   `-StringLiteral 0x151943cc8 <col:37> 'char[4]' lvalue "STR"
|   | `-CompoundStmt 0x151943da8 <col:45, line:28:2>
|   |-IfStmt 0x151943fb8 <line:30:2, line:33:2>
|   | |-UnaryOperator 0x151943e98 <line:30:6, col:25> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-CallExpr 0x151943e68 <col:7, col:25> '<dependent type>' contains-errors
|   | |   |-DeclRefExpr 0x151943dd8 <col:7> 'char *(const char *, const char *)' Function 0x151943640 'strstr' 'char *(const char *, const char *)'
|   | |   |-RecoveryExpr 0x151943df8 <col:14> '<dependent type>' contains-errors lvalue
|   | |   `-StringLiteral 0x151943e18 <col:20> 'char[4]' lvalue "STR"
|   | `-CompoundStmt 0x151943fa0 <col:29, line:33:2>
|   |   `-IfStmt 0x151943f80 <line:31:3, col:23>
|   |     |-ImplicitCastExpr 0x151943ed0 <col:7> 'char *' contains-errors <LValueToRValue>
|   |     | `-DeclRefExpr 0x151943eb0 <col:7> 'char *' contains-errors lvalue Var 0x1519283f0 'dst' 'char *'
|   |     `-CallExpr 0x151943f40 <col:12, col:23> 'int' contains-errors
|   |       |-ImplicitCastExpr 0x151943f28 <col:12> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x151943ee8 <col:12> 'int ()' Function 0x151942a28 'gf_free' 'int ()'
|   |       `-ImplicitCastExpr 0x151943f68 <col:20> 'char *' contains-errors <LValueToRValue>
|   |         `-DeclRefExpr 0x151943f08 <col:20> 'char *' contains-errors lvalue Var 0x1519283f0 'dst' 'char *'
|   |-IfStmt 0x1519440e8 <line:35:2, line:37:2>
|   | |-CallExpr 0x151944068 <line:35:6, col:24> '<dependent type>' contains-errors
|   | | |-DeclRefExpr 0x151943fd8 <col:6> 'char *(const char *, const char *)' Function 0x151943640 'strstr' 'char *(const char *, const char *)'
|   | | |-RecoveryExpr 0x151943ff8 <col:13> '<dependent type>' contains-errors lvalue
|   | | `-StringLiteral 0x151944018 <col:19> 'char[4]' lvalue "STR"
|   | `-CompoundStmt 0x1519440d8 <col:27, line:37:2>
|   |-IfStmt 0x151944218 <line:38:2, line:40:2>
|   | |-CallExpr 0x151944198 <line:38:6, col:24> '<dependent type>' contains-errors
|   | | |-DeclRefExpr 0x151944108 <col:6> 'char *(const char *, const char *)' Function 0x151943640 'strstr' 'char *(const char *, const char *)'
|   | | |-RecoveryExpr 0x151944128 <col:13> '<dependent type>' contains-errors lvalue
|   | | `-StringLiteral 0x151944148 <col:19> 'char[4]' lvalue "STR"
|   | `-CompoundStmt 0x151944208 <col:27, line:40:2>
|   |-IfStmt 0x151944348 <line:41:2, line:43:2>
|   | |-CallExpr 0x1519442c8 <line:41:6, col:24> '<dependent type>' contains-errors
|   | | |-DeclRefExpr 0x151944238 <col:6> 'char *(const char *, const char *)' Function 0x151943640 'strstr' 'char *(const char *, const char *)'
|   | | |-RecoveryExpr 0x151944258 <col:13> '<dependent type>' contains-errors lvalue
|   | | `-StringLiteral 0x151944278 <col:19> 'char[4]' lvalue "STR"
|   | `-CompoundStmt 0x151944338 <col:27, line:43:2>
|   `-IfStmt 0x151944438 <line:45:2, col:22>
|     |-ImplicitCastExpr 0x151944388 <col:6> 'char *' contains-errors <LValueToRValue>
|     | `-DeclRefExpr 0x151944368 <col:6> 'char *' contains-errors lvalue Var 0x1519283f0 'dst' 'char *'
|     `-CallExpr 0x1519443f8 <col:11, col:22> 'int' contains-errors
|       |-ImplicitCastExpr 0x1519443e0 <col:11> 'int (*)()' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1519443a0 <col:11> 'int ()' Function 0x151942a28 'gf_free' 'int ()'
|       `-ImplicitCastExpr 0x151944420 <col:19> 'char *' contains-errors <LValueToRValue>
|         `-DeclRefExpr 0x1519443c0 <col:19> 'char *' contains-errors lvalue Var 0x1519283f0 'dst' 'char *'
|-FunctionDecl 0x151943080 <line:15:7> col:7 implicit used strncmp 'int (const char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0x151943180 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1519431e8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x151943250 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x151943128 <<invalid sloc>> Implicit 888
`-FunctionDecl 0x151943640 <line:18:6> col:6 implicit used strstr 'char *(const char *, const char *)' extern
  |-ParmVarDecl 0x151943740 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x151943800 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x1519436e8 <<invalid sloc>> Implicit 898
