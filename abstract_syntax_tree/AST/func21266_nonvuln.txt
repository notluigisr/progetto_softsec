TranslationUnitDecl 0x13c055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13c0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13c055bd0 '__int128'
|-TypedefDecl 0x13c056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13c055bf0 'unsigned __int128'
|-TypedefDecl 0x13c126a30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13c126800 'struct __NSConstantString_tag'
|   `-Record 0x13c056580 '__NSConstantString_tag'
|-TypedefDecl 0x13c126a98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13c055d90 '__SVInt8_t'
|-TypedefDecl 0x13c126b00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13c055db0 '__SVInt16_t'
|-TypedefDecl 0x13c126b68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13c055dd0 '__SVInt32_t'
|-TypedefDecl 0x13c126bd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13c055df0 '__SVInt64_t'
|-TypedefDecl 0x13c126c38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13c055e10 '__SVUint8_t'
|-TypedefDecl 0x13c126ca0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13c055e30 '__SVUint16_t'
|-TypedefDecl 0x13c126d08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13c055e50 '__SVUint32_t'
|-TypedefDecl 0x13c126d70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13c055e70 '__SVUint64_t'
|-TypedefDecl 0x13c126dd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13c055e90 '__SVFloat16_t'
|-TypedefDecl 0x13c126e40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13c055eb0 '__SVFloat32_t'
|-TypedefDecl 0x13c126ea8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13c055ed0 '__SVFloat64_t'
|-TypedefDecl 0x13c126f10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13c055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13c126f78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13c055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13c126fe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13c055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13c127048 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13c055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13c1270b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13c055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13c127118 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13c055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13c127180 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13c055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13c1271e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13c055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13c127250 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13c055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13c1272b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13c056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13c127320 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13c056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13c127388 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13c056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13c1273f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13c056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13c127458 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13c056090 '__clang_svint8x3_t'
|-TypedefDecl 0x13c1274c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13c0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13c127528 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13c0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13c127590 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13c0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13c1275f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13c056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13c127660 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13c056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13c1276c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13c056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13c127730 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13c056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13c127798 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13c056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13c128000 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13c0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13c128068 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13c0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13c1280d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13c0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13c128138 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13c056210 '__clang_svint8x4_t'
|-TypedefDecl 0x13c1281a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13c056230 '__clang_svint16x4_t'
|-TypedefDecl 0x13c128208 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13c056250 '__clang_svint32x4_t'
|-TypedefDecl 0x13c128270 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13c056270 '__clang_svint64x4_t'
|-TypedefDecl 0x13c1282d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13c056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13c128340 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13c0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13c1283a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13c0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13c128410 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13c0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13c128478 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13c056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13c1284e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13c056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13c128548 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13c056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13c1285b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13c056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13c128618 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13c056390 '__SVBool_t'
|-TypedefDecl 0x13c128680 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13c0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13c1286e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13c0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13c128750 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13c0563f0 '__SVCount_t'
|-TypedefDecl 0x13c1287f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13c1287b0 'char *'
|   `-BuiltinType 0x13c0556b0 'char'
|-TypedefDecl 0x13c128868 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13c1287b0 'char *'
|   `-BuiltinType 0x13c0556b0 'char'
|-FunctionDecl 0x13c1289a8 <dataset_diviso_filec/func21266_nonvuln.c:1:1, line:75:1> line:1:1 PHP_FUNCTION 'int (int)'
| |-ParmVarDecl 0x13c1288d8 <col:14> col:14 popen 'int'
| `-CompoundStmt 0x13c1436c0 <line:2:1, line:75:1>
|   |-DeclStmt 0x13c128bb8 <line:3:2, col:22>
|   | |-VarDecl 0x13c128ab8 <col:2, col:8> col:8 used command 'char *'
|   | `-VarDecl 0x13c128b38 <col:2, col:18> col:18 used mode 'char *'
|   |-DeclStmt 0x13c128ce8 <line:4:2, col:27>
|   | |-VarDecl 0x13c128be8 <col:2, col:6> col:6 command_len 'int'
|   | `-VarDecl 0x13c128c68 <col:2, col:19> col:19 used mode_len 'int'
|   |-DeclStmt 0x13c128fa8 <line:7:2, col:38>
|   | |-VarDecl 0x13c128d60 <col:2, col:8> col:8 used posix_mode 'char *'
|   | |-VarDecl 0x13c128de0 <col:2, col:21> col:21 used b 'char *'
|   | |-VarDecl 0x13c128e60 <col:2, col:31> col:25 used buf 'char *' cinit
|   | | `-ImplicitCastExpr 0x13c128ee8 <col:31> 'char *' <NullToPointer>
|   | |   `-IntegerLiteral 0x13c128ec8 <col:31> 'int' 0
|   | `-VarDecl 0x13c128f18 <col:2, col:35> col:35 used tmp 'char *'
|   |-IfStmt 0x13c8084c8 <line:9:2, line:11:2>
|   | |-RecoveryExpr 0x13c808480 <line:9:6, col:107> '_Bool' contains-errors
|   | `-CompoundStmt 0x13c8084b0 <col:116, line:11:2>
|   |   `-ReturnStmt 0x13c8084a0 <line:10:3>
|   |-BinaryOperator 0x13c808b00 <line:13:2, col:38> 'char *' '='
|   | |-DeclRefExpr 0x13c8084e8 <col:2> 'char *' lvalue Var 0x13c128d60 'posix_mode' 'char *'
|   | `-ImplicitCastExpr 0x13c8086c0 <col:15, col:38> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x13c808660 <col:15, col:38> 'int'
|   |     |-ImplicitCastExpr 0x13c808648 <col:15> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x13c8085e8 <col:15> 'int ()' Function 0x13c808530 'estrndup' 'int ()'
|   |     |-ImplicitCastExpr 0x13c808690 <col:24> 'char *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x13c808608 <col:24> 'char *' lvalue Var 0x13c128b38 'mode' 'char *'
|   |     `-ImplicitCastExpr 0x13c8086a8 <col:30> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x13c808628 <col:30> 'int' lvalue Var 0x13c128c68 'mode_len' 'int'
|   |-CompoundStmt 0x13c809c58 <line:15:2, line:20:2>
|   | |-DeclStmt 0x13c809008 <line:16:3, col:46>
|   | | `-VarDecl 0x13c808b38 <col:3, col:45> col:9 used z 'char *' cinit
|   | |   `-ImplicitCastExpr 0x13c808ff0 <col:13, col:45> 'char *' <BitCast>
|   | |     `-CallExpr 0x13c808f58 <col:13, col:45> 'void *'
|   | |       |-ImplicitCastExpr 0x13c808f40 <col:13> 'void *(*)(const void *, int, unsigned long)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x13c808e68 <col:13> 'void *(const void *, int, unsigned long)' Function 0x13c808c18 'memchr' 'void *(const void *, int, unsigned long)'
|   | |       |-ImplicitCastExpr 0x13c808fa8 <col:20> 'const void *' <BitCast>
|   | |       | `-ImplicitCastExpr 0x13c808f90 <col:20> 'char *' <LValueToRValue>
|   | |       |   `-DeclRefExpr 0x13c808e88 <col:20> 'char *' lvalue Var 0x13c128d60 'posix_mode' 'char *'
|   | |       |-CharacterLiteral 0x13c808ea8 <col:32> 'int' 98
|   | |       `-ImplicitCastExpr 0x13c808fd8 <col:37> 'unsigned long' <IntegralCast>
|   | |         `-ImplicitCastExpr 0x13c808fc0 <col:37> 'int' <LValueToRValue>
|   | |           `-DeclRefExpr 0x13c808ec0 <col:37> 'int' lvalue Var 0x13c128c68 'mode_len' 'int'
|   | `-IfStmt 0x13c809c38 <line:17:3, line:19:3>
|   |   |-ImplicitCastExpr 0x13c809040 <line:17:7> 'char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x13c809020 <col:7> 'char *' lvalue Var 0x13c808b38 'z' 'char *'
|   |   `-CompoundStmt 0x13c809c20 <col:10, line:19:3>
|   |     `-CallExpr 0x13c809b88 <line:18:4, col:49> 'void *'
|   |       |-ImplicitCastExpr 0x13c809b70 <col:4> 'void *(*)(void *, const void *, unsigned long)' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x13c809950 <col:4> 'void *(void *, const void *, unsigned long)' Function 0x13c8090a8 'memmove' 'void *(void *, const void *, unsigned long)'
|   |       |-ImplicitCastExpr 0x13c809bd8 <col:12> 'void *' <BitCast>
|   |       | `-ImplicitCastExpr 0x13c809bc0 <col:12> 'char *' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x13c809970 <col:12> 'char *' lvalue Var 0x13c808b38 'z' 'char *'
|   |       |-ImplicitCastExpr 0x13c809bf0 <col:15, col:19> 'const void *' <BitCast>
|   |       | `-BinaryOperator 0x13c8099e8 <col:15, col:19> 'char *' '+'
|   |       |   |-ImplicitCastExpr 0x13c8099d0 <col:15> 'char *' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x13c809990 <col:15> 'char *' lvalue Var 0x13c808b38 'z' 'char *'
|   |       |   `-IntegerLiteral 0x13c8099b0 <col:19> 'int' 1
|   |       `-ImplicitCastExpr 0x13c809c08 <col:22, col:48> 'unsigned long' <IntegralCast>
|   |         `-BinaryOperator 0x13c809b08 <col:22, col:48> 'long' '-'
|   |           |-ImplicitCastExpr 0x13c809af0 <col:22> 'long' <IntegralCast>
|   |           | `-ImplicitCastExpr 0x13c809ad8 <col:22> 'int' <LValueToRValue>
|   |           |   `-DeclRefExpr 0x13c809a08 <col:22> 'int' lvalue Var 0x13c128c68 'mode_len' 'int'
|   |           `-ParenExpr 0x13c809ab8 <col:33, col:48> 'long'
|   |             `-BinaryOperator 0x13c809a98 <col:34, col:38> 'long' '-'
|   |               |-ImplicitCastExpr 0x13c809a68 <col:34> 'char *' <LValueToRValue>
|   |               | `-DeclRefExpr 0x13c809a28 <col:34> 'char *' lvalue Var 0x13c808b38 'z' 'char *'
|   |               `-ImplicitCastExpr 0x13c809a80 <col:38> 'char *' <LValueToRValue>
|   |                 `-DeclRefExpr 0x13c809a48 <col:38> 'char *' lvalue Var 0x13c128d60 'posix_mode' 'char *'
|   |-IfStmt 0x13c1432c8 <line:22:2, line:64:2> has_else
|   | |-CallExpr 0x13c809dd8 <line:22:6, col:18> '<dependent type>' contains-errors
|   | | |-DeclRefExpr 0x13c809d58 <col:6> 'int ()' Function 0x13c809ca0 'PG' 'int ()'
|   | | `-RecoveryExpr 0x13c809db8 <col:9> '<dependent type>' contains-errors lvalue
|   | |-CompoundStmt 0x13c143000 <col:20, line:57:2>
|   | | |-BinaryOperator 0x13c80a158 <line:23:3, col:26> 'char *' '='
|   | | | |-DeclRefExpr 0x13c809e00 <col:3> 'char *' lvalue Var 0x13c128de0 'b' 'char *'
|   | | | `-CallExpr 0x13c80a0f8 <col:7, col:26> 'char *'
|   | | |   |-ImplicitCastExpr 0x13c80a0e0 <col:7> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   | | |   | `-DeclRefExpr 0x13c80a040 <col:7> 'char *(const char *, int)' Function 0x13c809e60 'strchr' 'char *(const char *, int)'
|   | | |   |-ImplicitCastExpr 0x13c80a140 <col:14> 'const char *' <NoOp>
|   | | |   | `-ImplicitCastExpr 0x13c80a128 <col:14> 'char *' <LValueToRValue>
|   | | |   |   `-DeclRefExpr 0x13c80a060 <col:14> 'char *' lvalue Var 0x13c128ab8 'command' 'char *'
|   | | |   `-CharacterLiteral 0x13c80a080 <col:23> 'int' 32
|   | | |-IfStmt 0x13c1413b0 <line:24:3, line:36:3> has_else
|   | | | |-UnaryOperator 0x13c80a1b0 <line:24:7, col:8> 'int' prefix '!' cannot overflow
|   | | | | `-ImplicitCastExpr 0x13c80a198 <col:8> 'char *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x13c80a178 <col:8> 'char *' lvalue Var 0x13c128de0 'b' 'char *'
|   | | | |-CompoundStmt 0x13c80a4d0 <col:11, line:26:3>
|   | | | | `-BinaryOperator 0x13c80a4b0 <line:25:4, col:28> 'char *' '='
|   | | | |   |-DeclRefExpr 0x13c80a1c8 <col:4> 'char *' lvalue Var 0x13c128de0 'b' 'char *'
|   | | | |   `-CallExpr 0x13c80a450 <col:8, col:28> 'char *'
|   | | | |     |-ImplicitCastExpr 0x13c80a438 <col:8> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   | | | |     | `-DeclRefExpr 0x13c80a3c8 <col:8> 'char *(const char *, int)' Function 0x13c80a1e8 'strrchr' 'char *(const char *, int)'
|   | | | |     |-ImplicitCastExpr 0x13c80a498 <col:16> 'const char *' <NoOp>
|   | | | |     | `-ImplicitCastExpr 0x13c80a480 <col:16> 'char *' <LValueToRValue>
|   | | | |     |   `-DeclRefExpr 0x13c80a3e8 <col:16> 'char *' lvalue Var 0x13c128ab8 'command' 'char *'
|   | | | |     `-CharacterLiteral 0x13c80a408 <col:25> 'int' 47
|   | | | `-CompoundStmt 0x13c141380 <line:26:10, line:36:3>
|   | | |   |-DeclStmt 0x13c80a568 <line:27:4, col:11>
|   | | |   | `-VarDecl 0x13c80a500 <col:4, col:10> col:10 used c 'char *'
|   | | |   |-BinaryOperator 0x13c80a5d8 <line:29:4, col:8> 'char *' '='
|   | | |   | |-DeclRefExpr 0x13c80a580 <col:4> 'char *' lvalue Var 0x13c80a500 'c' 'char *'
|   | | |   | `-ImplicitCastExpr 0x13c80a5c0 <col:8> 'char *' <LValueToRValue>
|   | | |   |   `-DeclRefExpr 0x13c80a5a0 <col:8> 'char *' lvalue Var 0x13c128ab8 'command' 'char *'
|   | | |   |-WhileStmt 0x13c141200 <line:30:4, line:32:4>
|   | | |   | |-BinaryOperator 0x13c80a780 <line:30:10, col:32> 'int' '&&'
|   | | |   | | |-ParenExpr 0x13c80a6b0 <col:10, col:20> 'int'
|   | | |   | | | `-BinaryOperator 0x13c80a690 <col:11, col:17> 'int' '!='
|   | | |   | | |   |-ImplicitCastExpr 0x13c80a678 <col:11, col:12> 'int' <IntegralCast>
|   | | |   | | |   | `-ImplicitCastExpr 0x13c80a660 <col:11, col:12> 'char' <LValueToRValue>
|   | | |   | | |   |   `-UnaryOperator 0x13c80a630 <col:11, col:12> 'char' lvalue prefix '*' cannot overflow
|   | | |   | | |   |     `-ImplicitCastExpr 0x13c80a618 <col:12> 'char *' <LValueToRValue>
|   | | |   | | |   |       `-DeclRefExpr 0x13c80a5f8 <col:12> 'char *' lvalue Var 0x13c128de0 'b' 'char *'
|   | | |   | | |   `-CharacterLiteral 0x13c80a648 <col:17> 'int' 47
|   | | |   | | `-ParenExpr 0x13c80a760 <col:25, col:32> 'int'
|   | | |   | |   `-BinaryOperator 0x13c80a740 <col:26, col:31> 'int' '!='
|   | | |   | |     |-ImplicitCastExpr 0x13c80a710 <col:26> 'char *' <LValueToRValue>
|   | | |   | |     | `-DeclRefExpr 0x13c80a6d0 <col:26> 'char *' lvalue Var 0x13c128de0 'b' 'char *'
|   | | |   | |     `-ImplicitCastExpr 0x13c80a728 <col:31> 'char *' <LValueToRValue>
|   | | |   | |       `-DeclRefExpr 0x13c80a6f0 <col:31> 'char *' lvalue Var 0x13c80a500 'c' 'char *'
|   | | |   | `-CompoundStmt 0x13c80a7d8 <col:35, line:32:4>
|   | | |   |   `-UnaryOperator 0x13c80a7c0 <line:31:5, col:6> 'char *' postfix '--'
|   | | |   |     `-DeclRefExpr 0x13c80a7a0 <col:5> 'char *' lvalue Var 0x13c128de0 'b' 'char *'
|   | | |   `-IfStmt 0x13c141360 <line:33:4, line:35:4>
|   | | |     |-BinaryOperator 0x13c141290 <line:33:8, col:13> 'int' '=='
|   | | |     | |-ImplicitCastExpr 0x13c141260 <col:8> 'char *' <LValueToRValue>
|   | | |     | | `-DeclRefExpr 0x13c141220 <col:8> 'char *' lvalue Var 0x13c128de0 'b' 'char *'
|   | | |     | `-ImplicitCastExpr 0x13c141278 <col:13> 'char *' <LValueToRValue>
|   | | |     |   `-DeclRefExpr 0x13c141240 <col:13> 'char *' lvalue Var 0x13c80a500 'c' 'char *'
|   | | |     `-CompoundStmt 0x13c141348 <col:16, line:35:4>
|   | | |       `-BinaryOperator 0x13c141328 <line:34:5, col:9> 'char *' contains-errors '='
|   | | |         |-DeclRefExpr 0x13c1412b0 <col:5> 'char *' lvalue Var 0x13c128de0 'b' 'char *'
|   | | |         `-RecoveryExpr 0x13c141308 <col:9> '<dependent type>' contains-errors lvalue
|   | | |-IfStmt 0x13c141748 <line:38:3, line:42:3> has_else
|   | | | |-ImplicitCastExpr 0x13c141400 <line:38:7> 'char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x13c1413e0 <col:7> 'char *' lvalue Var 0x13c128de0 'b' 'char *'
|   | | | |-CompoundStmt 0x13c141650 <col:10, line:40:3>
|   | | | `-CompoundStmt 0x13c141738 <col:10, line:42:3>
|   | | |-BinaryOperator 0x13c141928 <line:44:3, col:33> 'char *' '='
|   | | | |-DeclRefExpr 0x13c141778 <col:3> 'char *' lvalue Var 0x13c128f18 'tmp' 'char *'
|   | | | `-ImplicitCastExpr 0x13c141910 <col:9, col:33> 'char *' <IntegralToPointer>
|   | | |   `-CallExpr 0x13c1418d0 <col:9, col:33> 'int'
|   | | |     |-ImplicitCastExpr 0x13c1418b8 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | |     | `-DeclRefExpr 0x13c141878 <col:9> 'int ()' Function 0x13c1417c0 'php_escape_shell_cmd' 'int ()'
|   | | |     `-ImplicitCastExpr 0x13c1418f8 <col:30> 'char *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x13c141898 <col:30> 'char *' lvalue Var 0x13c128e60 'buf' 'char *'
|   | | |-CallExpr 0x13c141c38 <line:46:3, col:12> 'int'
|   | | | |-ImplicitCastExpr 0x13c141c20 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x13c141be0 <col:3> 'int ()' Function 0x13c141b28 'efree' 'int ()'
|   | | | `-ImplicitCastExpr 0x13c141c60 <col:9> 'char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x13c141c00 <col:9> 'char *' lvalue Var 0x13c128f18 'tmp' 'char *'
|   | | |-IfStmt 0x13c142118 <line:48:3, line:53:3>
|   | | | |-RecoveryExpr 0x13c141c78 <line:48:7, col:8> '_Bool' contains-errors
|   | | | `-CompoundStmt 0x13c1420f8 <col:12, line:53:3>
|   | | |   |-CallExpr 0x13c142020 <line:50:4, col:20> 'int'
|   | | |   | |-ImplicitCastExpr 0x13c142008 <col:4> 'int (*)()' <FunctionToPointerDecay>
|   | | |   | | `-DeclRefExpr 0x13c141fc8 <col:4> 'int ()' Function 0x13c141b28 'efree' 'int ()'
|   | | |   | `-ImplicitCastExpr 0x13c142048 <col:10> 'char *' <LValueToRValue>
|   | | |   |   `-DeclRefExpr 0x13c141fe8 <col:10> 'char *' lvalue Var 0x13c128d60 'posix_mode' 'char *'
|   | | |   `-CallExpr 0x13c1420b8 <line:51:4, col:13> 'int'
|   | | |     |-ImplicitCastExpr 0x13c1420a0 <col:4> 'int (*)()' <FunctionToPointerDecay>
|   | | |     | `-DeclRefExpr 0x13c142060 <col:4> 'int ()' Function 0x13c141b28 'efree' 'int ()'
|   | | |     `-ImplicitCastExpr 0x13c1420e0 <col:10> 'char *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x13c142080 <col:10> 'char *' lvalue Var 0x13c128e60 'buf' 'char *'
|   | | `-CallExpr 0x13c142190 <line:55:3, col:12> 'int'
|   | |   |-ImplicitCastExpr 0x13c142178 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x13c142138 <col:3> 'int ()' Function 0x13c141b28 'efree' 'int ()'
|   | |   `-ImplicitCastExpr 0x13c1421b8 <col:9> 'char *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x13c142158 <col:9> 'char *' lvalue Var 0x13c128e60 'buf' 'char *'
|   | `-CompoundStmt 0x13c1432b0 <line:57:9, line:64:2>
|   |   `-IfStmt 0x13c143290 <line:59:3, line:63:3>
|   |     |-RecoveryExpr 0x13c143120 <line:59:7, col:8> '_Bool' contains-errors
|   |     `-CompoundStmt 0x13c143278 <col:12, line:63:3>
|   |       `-CallExpr 0x13c143238 <line:61:4, col:20> 'int'
|   |         |-ImplicitCastExpr 0x13c143220 <col:4> 'int (*)()' <FunctionToPointerDecay>
|   |         | `-DeclRefExpr 0x13c1431e0 <col:4> 'int ()' Function 0x13c141b28 'efree' 'int ()'
|   |         `-ImplicitCastExpr 0x13c143260 <col:10> 'char *' <LValueToRValue>
|   |           `-DeclRefExpr 0x13c143200 <col:10> 'char *' lvalue Var 0x13c128d60 'posix_mode' 'char *'
|   |-IfStmt 0x13c1435f8 <line:67:2, line:72:2> has_else
|   | |-RecoveryExpr 0x13c143418 <line:67:6, col:16> '_Bool' contains-errors
|   | |-CompoundStmt 0x13c1434d8 <col:22, line:70:2>
|   | `-CompoundStmt 0x13c1435e8 <col:9, line:72:2>
|   `-CallExpr 0x13c143680 <line:74:2, col:18> 'int'
|     |-ImplicitCastExpr 0x13c143668 <col:2> 'int (*)()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x13c143628 <col:2> 'int ()' Function 0x13c141b28 'efree' 'int ()'
|     `-ImplicitCastExpr 0x13c1436a8 <col:8> 'char *' <LValueToRValue>
|       `-DeclRefExpr 0x13c143648 <col:8> 'char *' lvalue Var 0x13c128d60 'posix_mode' 'char *'
|-FunctionDecl 0x13c808c18 <line:16:13> col:13 implicit used memchr 'void *(const void *, int, unsigned long)' extern
| |-ParmVarDecl 0x13c808d18 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x13c808d80 <<invalid sloc>> <invalid sloc> 'int'
| |-ParmVarDecl 0x13c808de8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x13c808cc0 <<invalid sloc>> Implicit 892
|-FunctionDecl 0x13c8090a8 <line:18:4> col:4 implicit used memmove 'void *(void *, const void *, unsigned long)' extern
| |-ParmVarDecl 0x13c809800 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x13c809868 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x13c8098d0 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x13c809150 <<invalid sloc>> Implicit 884
|-FunctionDecl 0x13c809e60 <line:23:7> col:7 implicit used strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x13c809f60 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x13c809fc8 <<invalid sloc>> <invalid sloc> 'int'
| `-BuiltinAttr 0x13c809f08 <<invalid sloc>> Implicit 893
|-FunctionDecl 0x13c80a1e8 <line:25:8> col:8 implicit used strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x13c80a2e8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x13c80a350 <<invalid sloc>> <invalid sloc> 'int'
| `-BuiltinAttr 0x13c80a290 <<invalid sloc>> Implicit 896
`-FunctionDecl 0x13c141e38 <line:49:73> col:73 implicit used strerror 'char *(int)' extern
  |-ParmVarDecl 0x13c141f38 <<invalid sloc>> <invalid sloc> 'int'
  `-BuiltinAttr 0x13c141ee0 <<invalid sloc>> Implicit 901
