TranslationUnitDecl 0x14a853008 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14a853eb8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14a8535d0 '__int128'
|-TypedefDecl 0x14a853f28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14a8535f0 'unsigned __int128'
|-TypedefDecl 0x14b00e830 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14b00e600 'struct __NSConstantString_tag'
|   `-Record 0x14a853f80 '__NSConstantString_tag'
|-TypedefDecl 0x14b00e898 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14a853790 '__SVInt8_t'
|-TypedefDecl 0x14b00e900 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14a8537b0 '__SVInt16_t'
|-TypedefDecl 0x14b00e968 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14a8537d0 '__SVInt32_t'
|-TypedefDecl 0x14b00e9d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14a8537f0 '__SVInt64_t'
|-TypedefDecl 0x14b00ea38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14a853810 '__SVUint8_t'
|-TypedefDecl 0x14b00eaa0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14a853830 '__SVUint16_t'
|-TypedefDecl 0x14b00eb08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14a853850 '__SVUint32_t'
|-TypedefDecl 0x14b00eb70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14a853870 '__SVUint64_t'
|-TypedefDecl 0x14b00ebd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14a853890 '__SVFloat16_t'
|-TypedefDecl 0x14b00ec40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14a8538b0 '__SVFloat32_t'
|-TypedefDecl 0x14b00eca8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14a8538d0 '__SVFloat64_t'
|-TypedefDecl 0x14b00ed10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14a8538f0 '__SVBfloat16_t'
|-TypedefDecl 0x14b00ed78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14a853910 '__clang_svint8x2_t'
|-TypedefDecl 0x14b00ede0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14a853930 '__clang_svint16x2_t'
|-TypedefDecl 0x14b00ee48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14a853950 '__clang_svint32x2_t'
|-TypedefDecl 0x14b00eeb0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14a853970 '__clang_svint64x2_t'
|-TypedefDecl 0x14b00ef18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14a853990 '__clang_svuint8x2_t'
|-TypedefDecl 0x14b00ef80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14a8539b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14b00efe8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14a8539d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14b00f050 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14a8539f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14b00f0b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14a853a10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14b00f120 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14a853a30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14b00f188 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14a853a50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14b00f1f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14a853a70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14b00f258 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14a853a90 '__clang_svint8x3_t'
|-TypedefDecl 0x14b00f2c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14a853ab0 '__clang_svint16x3_t'
|-TypedefDecl 0x14b00f328 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14a853ad0 '__clang_svint32x3_t'
|-TypedefDecl 0x14b00f390 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14a853af0 '__clang_svint64x3_t'
|-TypedefDecl 0x14b00f3f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14a853b10 '__clang_svuint8x3_t'
|-TypedefDecl 0x14b00f460 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14a853b30 '__clang_svuint16x3_t'
|-TypedefDecl 0x14b00f4c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14a853b50 '__clang_svuint32x3_t'
|-TypedefDecl 0x14b00f530 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14a853b70 '__clang_svuint64x3_t'
|-TypedefDecl 0x14b00f598 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14a853b90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14b00fa00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14a853bb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14b00fa68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14a853bd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14b00fad0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14a853bf0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14b00fb38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14a853c10 '__clang_svint8x4_t'
|-TypedefDecl 0x14b00fba0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14a853c30 '__clang_svint16x4_t'
|-TypedefDecl 0x14b00fc08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14a853c50 '__clang_svint32x4_t'
|-TypedefDecl 0x14b00fc70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14a853c70 '__clang_svint64x4_t'
|-TypedefDecl 0x14b00fcd8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14a853c90 '__clang_svuint8x4_t'
|-TypedefDecl 0x14b00fd40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14a853cb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14b00fda8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14a853cd0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14b00fe10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14a853cf0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14b00fe78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14a853d10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14b00fee0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14a853d30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14b00ff48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14a853d50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14b00ffb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14a853d70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14b010018 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14a853d90 '__SVBool_t'
|-TypedefDecl 0x14b010080 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14a853db0 '__clang_svboolx2_t'
|-TypedefDecl 0x14b0100e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14a853dd0 '__clang_svboolx4_t'
|-TypedefDecl 0x14b010150 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14a853df0 '__SVCount_t'
|-TypedefDecl 0x14b0101f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14b0101b0 'char *'
|   `-BuiltinType 0x14a8530b0 'char'
|-TypedefDecl 0x14b010268 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14b0101b0 'char *'
|   `-BuiltinType 0x14a8530b0 'char'
`-FunctionDecl 0x14b010518 <dataset_diviso_filec/func19559_vuln.c:1:1, line:74:1> line:1:1 invalid ip_optprint 'int (int *, const char *, int)'
  |-ParmVarDecl 0x14b010328 <col:13, col:33> col:33 invalid ndo 'int *'
  |-ParmVarDecl 0x14b0103a8 <line:2:13, col:36> col:36 used cp 'const char *' register
  |-ParmVarDecl 0x14b010428 <col:40, col:46> col:46 invalid length 'int'
  `-CompoundStmt 0x14b80a820 <line:3:1, line:74:1>
    |-DeclStmt 0x14b010658 <line:4:2, col:27>
    | `-VarDecl 0x14b0105f0 <col:2, col:17> col:17 referenced invalid option_len 'int' register
    |-DeclStmt 0x14b010778 <line:5:2, col:22>
    | `-VarDecl 0x14b010688 <col:2, col:20> col:14 used sep 'const char *' cinit
    |   `-ImplicitCastExpr 0x14b010760 <col:20> 'const char *' <NoOp>
    |     `-ImplicitCastExpr 0x14b010748 <col:20> 'char *' <ArrayToPointerDecay>
    |       `-StringLiteral 0x14b010730 <col:20> 'char[1]' lvalue ""
    |-ForStmt 0x14b80a730 <line:7:2, line:69:2>
    | |-<<<NULL>>>
    | |-<<<NULL>>>
    | |-BinaryOperator 0x14b0107d0 <line:7:9, col:18> 'int' contains-errors '>'
    | | |-RecoveryExpr 0x14b010790 <col:9> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x14b0107b0 <col:18> 'int' 0
    | |-BinaryOperator 0x14b0108d0 <col:21, col:49> '<dependent type>' contains-errors ','
    | | |-CompoundAssignOperator 0x14b010830 <col:21, col:27> 'const char *' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | | | |-DeclRefExpr 0x14b0107f0 <col:21> 'const char *' lvalue ParmVar 0x14b0103a8 'cp' 'const char *'
    | | | `-RecoveryExpr 0x14b010810 <col:27> '<dependent type>' contains-errors lvalue
    | | `-CompoundAssignOperator 0x14b0108a0 <col:39, col:49> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | |   |-RecoveryExpr 0x14b010860 <col:39> '<dependent type>' contains-errors lvalue
    | |   `-RecoveryExpr 0x14b010880 <col:49> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x14b80a6e8 <col:61, line:69:2>
    |   |-CallExpr 0x14a920de0 <line:10:3, col:29> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x14a920cb8 <col:3> 'int ()' Function 0x14a920c00 'ND_PRINT' 'int ()'
    |   | `-ParenExpr 0x14a920dc0 <col:12, col:28> 'const char *' contains-errors
    |   |   `-BinaryOperator 0x14a920da0 <col:13, col:25> 'const char *' contains-errors ','
    |   |     |-BinaryOperator 0x14a920d60 <col:13, col:18> 'char[4]' contains-errors ','
    |   |     | |-RecoveryExpr 0x14a920cd8 <col:13> '<dependent type>' contains-errors lvalue
    |   |     | `-StringLiteral 0x14a920d40 <col:18> 'char[4]' lvalue "STR"
    |   |     `-DeclRefExpr 0x14a920d80 <col:25> 'const char *' lvalue Var 0x14b010688 'sep' 'const char *'
    |   |-BinaryOperator 0x14a920e78 <line:11:3, col:9> 'const char *' '='
    |   | |-DeclRefExpr 0x14a920e08 <col:3> 'const char *' lvalue Var 0x14b010688 'sep' 'const char *'
    |   | `-ImplicitCastExpr 0x14a920e60 <col:9> 'const char *' <NoOp>
    |   |   `-ImplicitCastExpr 0x14a920e48 <col:9> 'char *' <ArrayToPointerDecay>
    |   |     `-StringLiteral 0x14a920e28 <col:9> 'char[4]' lvalue "STR"
    |   |-CallExpr 0x14a921038 <line:13:3, col:16> 'int'
    |   | |-ImplicitCastExpr 0x14a921020 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x14a920f78 <col:3> 'int ()' Function 0x14a920ec0 'ND_TCHECK' 'int ()'
    |   | `-ImplicitCastExpr 0x14a921078 <col:13, col:14> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x14a921060 <col:13, col:14> 'char' <LValueToRValue>
    |   |     `-UnaryOperator 0x14a920fd0 <col:13, col:14> 'const char' lvalue prefix '*' cannot overflow
    |   |       `-ImplicitCastExpr 0x14a920fb8 <col:14> 'const char *' <LValueToRValue>
    |   |         `-DeclRefExpr 0x14a920f98 <col:14> 'const char *' lvalue ParmVar 0x14b0103a8 'cp' 'const char *'
    |   |-IfStmt 0x14a921918 <line:19:3, line:30:3> has_else
    |   | |-BinaryOperator 0x14a9214a8 <line:19:7, line:20:36> 'int' contains-errors '||'
    |   | | |-BinaryOperator 0x14a921428 <line:19:7, col:22> 'int' contains-errors '=='
    |   | | | |-RecoveryExpr 0x14a9213e8 <col:7> '<dependent type>' contains-errors lvalue
    |   | | | `-RecoveryExpr 0x14a921408 <col:22> '<dependent type>' contains-errors lvalue
    |   | | `-BinaryOperator 0x14a921488 <line:20:21, col:36> 'int' contains-errors '=='
    |   | |   |-RecoveryExpr 0x14a921448 <col:21> '<dependent type>' contains-errors lvalue
    |   | |   `-RecoveryExpr 0x14a921468 <col:36> '<dependent type>' contains-errors lvalue
    |   | |-BinaryOperator 0x14a921530 <line:21:4, col:17> '<dependent type>' contains-errors '='
    |   | | |-RecoveryExpr 0x14a9214e8 <col:4> '<dependent type>' contains-errors lvalue
    |   | | | `-DeclRefExpr 0x14a9214c8 <col:4> 'int' lvalue Var 0x14b0105f0 'option_len' 'int'
    |   | | `-IntegerLiteral 0x14a921510 <col:17> 'int' 1
    |   | `-CompoundStmt 0x14a9218f0 <line:23:8, line:30:3>
    |   |   |-CallExpr 0x14a921600 <line:24:4, col:19> 'int'
    |   |   | |-ImplicitCastExpr 0x14a9215e8 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |   |   | | `-DeclRefExpr 0x14a921550 <col:4> 'int ()' Function 0x14a920ec0 'ND_TCHECK' 'int ()'
    |   |   | `-ImplicitCastExpr 0x14a921640 <col:14, col:18> 'int' <IntegralCast>
    |   |   |   `-ImplicitCastExpr 0x14a921628 <col:14, col:18> 'char' <LValueToRValue>
    |   |   |     `-ArraySubscriptExpr 0x14a9215c8 <col:14, col:18> 'const char' lvalue
    |   |   |       |-ImplicitCastExpr 0x14a9215b0 <col:14> 'const char *' <LValueToRValue>
    |   |   |       | `-DeclRefExpr 0x14a921570 <col:14> 'const char *' lvalue ParmVar 0x14b0103a8 'cp' 'const char *'
    |   |   |       `-IntegerLiteral 0x14a921590 <col:17> 'int' 1
    |   |   |-BinaryOperator 0x14a921718 <line:25:4, col:21> '<dependent type>' contains-errors '='
    |   |   | |-RecoveryExpr 0x14a921678 <col:4> '<dependent type>' contains-errors lvalue
    |   |   | | `-DeclRefExpr 0x14a921658 <col:4> 'int' lvalue Var 0x14b0105f0 'option_len' 'int'
    |   |   | `-ArraySubscriptExpr 0x14a9216f8 <col:17, col:21> 'const char' lvalue
    |   |   |   |-ImplicitCastExpr 0x14a9216e0 <col:17> 'const char *' <LValueToRValue>
    |   |   |   | `-DeclRefExpr 0x14a9216a0 <col:17> 'const char *' lvalue ParmVar 0x14b0103a8 'cp' 'const char *'
    |   |   |   `-IntegerLiteral 0x14a9216c0 <col:20> 'int' 1
    |   |   `-IfStmt 0x14a9218d0 <line:26:4, line:29:4>
    |   |     |-BinaryOperator 0x14a921778 <line:26:8, col:21> 'int' contains-errors '<'
    |   |     | |-RecoveryExpr 0x14a921738 <col:8> '<dependent type>' contains-errors lvalue
    |   |     | `-IntegerLiteral 0x14a921758 <col:21> 'int' 2
    |   |     `-CompoundStmt 0x14a9218b0 <col:24, line:29:4>
    |   |       |-CallExpr 0x14a921878 <line:27:5, col:38> '<dependent type>' contains-errors
    |   |       | |-DeclRefExpr 0x14a921798 <col:5> 'int ()' Function 0x14a920c00 'ND_PRINT' 'int ()'
    |   |       | `-ParenExpr 0x14a921858 <col:14, col:37> '<dependent type>' contains-errors
    |   |       |   `-BinaryOperator 0x14a921838 <col:15, col:27> '<dependent type>' contains-errors ','
    |   |       |     |-BinaryOperator 0x14a9217f8 <col:15, col:20> 'char[4]' contains-errors ','
    |   |       |     | |-RecoveryExpr 0x14a9217b8 <col:15> '<dependent type>' contains-errors lvalue
    |   |       |     | `-StringLiteral 0x14a9217d8 <col:20> 'char[4]' lvalue "STR"
    |   |       |     `-RecoveryExpr 0x14a921818 <col:27> '<dependent type>' contains-errors lvalue
    |   |       `-ReturnStmt 0x14a9218a0 <line:28:5>
    |   |-IfStmt 0x14a921ae0 <line:32:3, line:35:3>
    |   | |-BinaryOperator 0x14a921988 <line:32:7, col:20> 'int' contains-errors '>'
    |   | | |-RecoveryExpr 0x14a921948 <col:7> '<dependent type>' contains-errors lvalue
    |   | | `-RecoveryExpr 0x14a921968 <col:20> '<dependent type>' contains-errors lvalue
    |   | `-CompoundStmt 0x14a921ac0 <col:28, line:35:3>
    |   |   |-CallExpr 0x14a921a88 <line:33:4, col:37> '<dependent type>' contains-errors
    |   |   | |-DeclRefExpr 0x14a9219a8 <col:4> 'int ()' Function 0x14a920c00 'ND_PRINT' 'int ()'
    |   |   | `-ParenExpr 0x14a921a68 <col:13, col:36> '<dependent type>' contains-errors
    |   |   |   `-BinaryOperator 0x14a921a48 <col:14, col:26> '<dependent type>' contains-errors ','
    |   |   |     |-BinaryOperator 0x14a921a08 <col:14, col:19> 'char[4]' contains-errors ','
    |   |   |     | |-RecoveryExpr 0x14a9219c8 <col:14> '<dependent type>' contains-errors lvalue
    |   |   |     | `-StringLiteral 0x14a9219e8 <col:19> 'char[4]' lvalue "STR"
    |   |   |     `-RecoveryExpr 0x14a921a28 <col:26> '<dependent type>' contains-errors lvalue
    |   |   `-ReturnStmt 0x14a921ab0 <line:34:4>
    |   |-CallExpr 0x14b809a70 <line:37:3, col:29> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x14a921be0 <col:3> 'int ()' Function 0x14a921b28 'ND_TCHECK2' 'int ()'
    |   | |-UnaryOperator 0x14b809a38 <col:14, col:15> 'const char' lvalue prefix '*' cannot overflow
    |   | | `-ImplicitCastExpr 0x14b809a20 <col:15> 'const char *' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x14b809a00 <col:15> 'const char *' lvalue ParmVar 0x14b0103a8 'cp' 'const char *'
    |   | `-RecoveryExpr 0x14b809a50 <col:19> '<dependent type>' contains-errors lvalue
    |   `-SwitchStmt 0x14b809b10 <line:39:3, line:68:3>
    |     |-RecoveryExpr 0x14b809af0 <line:39:11> '<dependent type>' contains-errors lvalue
    |     `-CompoundStmt 0x14b80a688 <col:24, line:68:3>
    |       |-ReturnStmt 0x14b809b50 <line:41:4>
    |       |-CallExpr 0x14b809cd8 <line:44:4, col:34> '<dependent type>' contains-errors
    |       | |-DeclRefExpr 0x14b809c58 <col:4> 'int ()' Function 0x14b809ba0 'ip_printts' 'int ()'
    |       | |-RecoveryExpr 0x14b809c78 <col:15> '<dependent type>' contains-errors lvalue
    |       | |-DeclRefExpr 0x14b809c98 <col:20> 'const char *' lvalue ParmVar 0x14b0103a8 'cp' 'const char *'
    |       | `-RecoveryExpr 0x14b809cb8 <col:24> '<dependent type>' contains-errors lvalue
    |       |-BreakStmt 0x14b809d10 <line:45:4>
    |       |-IfStmt 0x14b809f70 <line:50:4, line:51:10>
    |       | |-BinaryOperator 0x14b809ee8 <line:50:8, col:47> 'int' contains-errors '=='
    |       | | |-CallExpr 0x14b809e78 <col:8, col:41> '<dependent type>' contains-errors
    |       | | | |-DeclRefExpr 0x14b809df8 <col:8> 'int ()' Function 0x14b809d40 'ip_printroute' 'int ()'
    |       | | | |-RecoveryExpr 0x14b809e18 <col:22> '<dependent type>' contains-errors lvalue
    |       | | | |-DeclRefExpr 0x14b809e38 <col:27> 'const char *' lvalue ParmVar 0x14b0103a8 'cp' 'const char *'
    |       | | | `-RecoveryExpr 0x14b809e58 <col:31> '<dependent type>' contains-errors lvalue
    |       | | `-UnaryOperator 0x14b809ed0 <col:46, col:47> 'int' prefix '-'
    |       | |   `-IntegerLiteral 0x14b809eb0 <col:47> 'int' 1
    |       | `-GotoStmt 0x14b809f58 <line:51:5, col:10> 'trunc' 0x14b809f08
    |       |-BreakStmt 0x14b809f90 <line:52:4>
    |       |-IfStmt 0x14b80a128 <line:55:4, line:58:4>
    |       | |-BinaryOperator 0x14b809fd8 <line:55:8, col:21> 'int' contains-errors '<'
    |       | | |-RecoveryExpr 0x14b809f98 <col:8> '<dependent type>' contains-errors lvalue
    |       | | `-IntegerLiteral 0x14b809fb8 <col:21> 'int' 4
    |       | `-CompoundStmt 0x14b80a108 <col:24, line:58:4>
    |       |   |-CallExpr 0x14b80a0d8 <line:56:5, col:38> '<dependent type>' contains-errors
    |       |   | |-DeclRefExpr 0x14b809ff8 <col:5> 'int ()' Function 0x14a920c00 'ND_PRINT' 'int ()'
    |       |   | `-ParenExpr 0x14b80a0b8 <col:14, col:37> '<dependent type>' contains-errors
    |       |   |   `-BinaryOperator 0x14b80a098 <col:15, col:27> '<dependent type>' contains-errors ','
    |       |   |     |-BinaryOperator 0x14b80a058 <col:15, col:20> 'char[4]' contains-errors ','
    |       |   |     | |-RecoveryExpr 0x14b80a018 <col:15> '<dependent type>' contains-errors lvalue
    |       |   |     | `-StringLiteral 0x14b80a038 <col:20> 'char[4]' lvalue "STR"
    |       |   |     `-RecoveryExpr 0x14b80a078 <col:27> '<dependent type>' contains-errors lvalue
    |       |   `-BreakStmt 0x14b80a100 <line:57:5>
    |       |-CallExpr 0x14b80a1f8 <line:59:4, col:19> 'int'
    |       | |-ImplicitCastExpr 0x14b80a1e0 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |       | | `-DeclRefExpr 0x14b80a148 <col:4> 'int ()' Function 0x14a920ec0 'ND_TCHECK' 'int ()'
    |       | `-ImplicitCastExpr 0x14b80a238 <col:14, col:18> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x14b80a220 <col:14, col:18> 'char' <LValueToRValue>
    |       |     `-ArraySubscriptExpr 0x14b80a1c0 <col:14, col:18> 'const char' lvalue
    |       |       |-ImplicitCastExpr 0x14b80a1a8 <col:14> 'const char *' <LValueToRValue>
    |       |       | `-DeclRefExpr 0x14b80a168 <col:14> 'const char *' lvalue ParmVar 0x14b0103a8 'cp' 'const char *'
    |       |       `-IntegerLiteral 0x14b80a188 <col:17> 'int' 3
    |       |-IfStmt 0x14b80a638 <line:60:4, line:61:50>
    |       | |-BinaryOperator 0x14b80a440 <line:60:8, col:34> 'int' '!='
    |       | | |-CallExpr 0x14b80a3f8 <col:8, col:29> 'int'
    |       | | | |-ImplicitCastExpr 0x14b80a3e0 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |       | | | | `-DeclRefExpr 0x14b80a330 <col:8> 'int ()' Function 0x14b80a278 'EXTRACT_16BITS' 'int ()'
    |       | | | `-UnaryOperator 0x14b80a3c8 <col:23, col:28> 'const char *' prefix '&' cannot overflow
    |       | | |   `-ArraySubscriptExpr 0x14b80a3a8 <col:24, col:28> 'const char' lvalue
    |       | | |     |-ImplicitCastExpr 0x14b80a390 <col:24> 'const char *' <LValueToRValue>
    |       | | |     | `-DeclRefExpr 0x14b80a350 <col:24> 'const char *' lvalue ParmVar 0x14b0103a8 'cp' 'const char *'
    |       | | |     `-IntegerLiteral 0x14b80a370 <col:27> 'int' 2
    |       | | `-IntegerLiteral 0x14b80a420 <col:34> 'int' 0
    |       | `-CallExpr 0x14b80a610 <line:61:5, col:50> '<dependent type>' contains-errors
    |       |   |-DeclRefExpr 0x14b80a460 <col:5> 'int ()' Function 0x14a920c00 'ND_PRINT' 'int ()'
    |       |   `-ParenExpr 0x14b80a5f0 <col:14, col:49> 'int' contains-errors
    |       |     `-BinaryOperator 0x14b80a5d0 <col:15, col:48> 'int' contains-errors ','
    |       |       |-BinaryOperator 0x14b80a4c0 <col:15, col:20> 'char[4]' contains-errors ','
    |       |       | |-RecoveryExpr 0x14b80a480 <col:15> '<dependent type>' contains-errors lvalue
    |       |       | `-StringLiteral 0x14b80a4a0 <col:20> 'char[4]' lvalue "STR"
    |       |       `-CallExpr 0x14b80a5a8 <col:27, col:48> 'int'
    |       |         |-ImplicitCastExpr 0x14b80a590 <col:27> 'int (*)()' <FunctionToPointerDecay>
    |       |         | `-DeclRefExpr 0x14b80a4e0 <col:27> 'int ()' Function 0x14b80a278 'EXTRACT_16BITS' 'int ()'
    |       |         `-UnaryOperator 0x14b80a578 <col:42, col:47> 'const char *' prefix '&' cannot overflow
    |       |           `-ArraySubscriptExpr 0x14b80a558 <col:43, col:47> 'const char' lvalue
    |       |             |-ImplicitCastExpr 0x14b80a540 <col:43> 'const char *' <LValueToRValue>
    |       |             | `-DeclRefExpr 0x14b80a500 <col:43> 'const char *' lvalue ParmVar 0x14b0103a8 'cp' 'const char *'
    |       |             `-IntegerLiteral 0x14b80a520 <col:46> 'int' 2
    |       |-BreakStmt 0x14b80a658 <line:62:4>
    |       `-DefaultStmt 0x14b80a668 <line:66:3, line:67:4>
    |         `-BreakStmt 0x14b80a660 <col:4>
    |-ReturnStmt 0x14b80a768 <line:70:2>
    `-LabelStmt 0x14b80a800 <line:72:1, col:6> 'trunc'
      `-NullStmt 0x14b80a7f8 <col:6>
