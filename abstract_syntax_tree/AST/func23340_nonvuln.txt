TranslationUnitDecl 0x13302a008 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13302aeb8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13302a5d0 '__int128'
|-TypedefDecl 0x13302af28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13302a5f0 'unsigned __int128'
|-TypedefDecl 0x132019230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x132019000 'struct __NSConstantString_tag'
|   `-Record 0x13302af80 '__NSConstantString_tag'
|-TypedefDecl 0x132019298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13302a790 '__SVInt8_t'
|-TypedefDecl 0x132019300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13302a7b0 '__SVInt16_t'
|-TypedefDecl 0x132019368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13302a7d0 '__SVInt32_t'
|-TypedefDecl 0x1320193d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13302a7f0 '__SVInt64_t'
|-TypedefDecl 0x132019438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13302a810 '__SVUint8_t'
|-TypedefDecl 0x1320194a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13302a830 '__SVUint16_t'
|-TypedefDecl 0x132019508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13302a850 '__SVUint32_t'
|-TypedefDecl 0x132019570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13302a870 '__SVUint64_t'
|-TypedefDecl 0x1320195d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13302a890 '__SVFloat16_t'
|-TypedefDecl 0x132019640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13302a8b0 '__SVFloat32_t'
|-TypedefDecl 0x1320196a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13302a8d0 '__SVFloat64_t'
|-TypedefDecl 0x132019710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13302a8f0 '__SVBfloat16_t'
|-TypedefDecl 0x132019778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13302a910 '__clang_svint8x2_t'
|-TypedefDecl 0x1320197e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13302a930 '__clang_svint16x2_t'
|-TypedefDecl 0x132019848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13302a950 '__clang_svint32x2_t'
|-TypedefDecl 0x1320198b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13302a970 '__clang_svint64x2_t'
|-TypedefDecl 0x132019918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13302a990 '__clang_svuint8x2_t'
|-TypedefDecl 0x132019980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13302a9b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1320199e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13302a9d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x132019a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13302a9f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x132019ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13302aa10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x132019b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13302aa30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x132019b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13302aa50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x132019bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13302aa70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x132019c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13302aa90 '__clang_svint8x3_t'
|-TypedefDecl 0x132019cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13302aab0 '__clang_svint16x3_t'
|-TypedefDecl 0x132019d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13302aad0 '__clang_svint32x3_t'
|-TypedefDecl 0x132019d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13302aaf0 '__clang_svint64x3_t'
|-TypedefDecl 0x132019df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13302ab10 '__clang_svuint8x3_t'
|-TypedefDecl 0x132019e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13302ab30 '__clang_svuint16x3_t'
|-TypedefDecl 0x132019ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13302ab50 '__clang_svuint32x3_t'
|-TypedefDecl 0x132019f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13302ab70 '__clang_svuint64x3_t'
|-TypedefDecl 0x132019f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13302ab90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13201a000 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13302abb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13201a068 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13302abd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13201a0d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13302abf0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13201a138 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13302ac10 '__clang_svint8x4_t'
|-TypedefDecl 0x13201a1a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13302ac30 '__clang_svint16x4_t'
|-TypedefDecl 0x13201a208 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13302ac50 '__clang_svint32x4_t'
|-TypedefDecl 0x13201a270 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13302ac70 '__clang_svint64x4_t'
|-TypedefDecl 0x13201a2d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13302ac90 '__clang_svuint8x4_t'
|-TypedefDecl 0x13201a340 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13302acb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13201a3a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13302acd0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13201a410 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13302acf0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13201a478 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13302ad10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13201a4e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13302ad30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13201a548 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13302ad50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13201a5b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13302ad70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13201a618 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13302ad90 '__SVBool_t'
|-TypedefDecl 0x13201a680 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13302adb0 '__clang_svboolx2_t'
|-TypedefDecl 0x13201a6e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13302add0 '__clang_svboolx4_t'
|-TypedefDecl 0x13201a750 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13302adf0 '__SVCount_t'
|-TypedefDecl 0x13201a7f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13201a7b0 'char *'
|   `-BuiltinType 0x13302a0b0 'char'
|-TypedefDecl 0x13201a868 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13201a7b0 'char *'
|   `-BuiltinType 0x13302a0b0 'char'
|-FunctionDecl 0x13201aac8 <dataset_diviso_filec/func23340_nonvuln.c:1:1, line:63:1> line:1:19 invalid print_number 'int (const int *const, int *const)' static
| |-ParmVarDecl 0x13201a8f0 <col:32, col:52> col:52 invalid item 'const int *const'
| |-ParmVarDecl 0x13201a9a8 <col:58, col:78> col:78 referenced invalid output_buffer 'int *const'
| `-CompoundStmt 0x132037a48 <line:2:1, line:63:1>
|   |-DeclStmt 0x13201ac68 <line:3:5, col:41>
|   | `-VarDecl 0x13201abc8 <col:5, col:37> col:20 used output_pointer 'unsigned char *' cinit
|   |   `-RecoveryExpr 0x13201ac48 <col:37> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x13201ad68 <line:4:5, col:33>
|   | `-VarDecl 0x13201ac98 <col:5, col:22> col:12 used d 'double' cinit
|   |   `-CXXDependentScopeMemberExpr 0x13201ad20 <col:16, col:22> '<dependent type>' contains-errors lvalue ->valuedouble
|   |     `-RecoveryExpr 0x13201ad00 <col:16> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x13201ae20 <line:5:5, col:19>
|   | `-VarDecl 0x13201ad98 <col:5, col:18> col:9 used length 'int' cinit
|   |   `-IntegerLiteral 0x13201ae00 <col:18> 'int' 0
|   |-RecoveryExpr 0x13201af18 <line:6:5, col:16> '<dependent type>' contains-errors lvalue
|   | |-UnaryExprOrTypeTraitExpr 0x13201aef8 <col:5, col:12> 'unsigned long' contains-errors sizeof
|   | | `-RecoveryExpr 0x13201aed8 <col:12> '<dependent type>' contains-errors lvalue
|   | `-IntegerLiteral 0x13201ae70 <col:16> 'int' 0
|   |-DeclStmt 0x132033868 <line:7:5, col:36>
|   | `-VarDecl 0x132033800 <col:5, col:35> col:19 used number_buffer 'unsigned char[26]'
|   |-DeclStmt 0x132033b00 <line:8:5, col:54>
|   | `-VarDecl 0x132033898 <col:5, col:53> col:19 used decimal_point 'unsigned char' cinit
|   |   `-ImplicitCastExpr 0x132033ae8 <col:35, col:53> 'unsigned char' <IntegralCast>
|   |     `-CallExpr 0x132033ac8 <col:35, col:53> 'int'
|   |       `-ImplicitCastExpr 0x132033ab0 <col:35> 'int (*)()' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x132033a60 <col:35> 'int ()' Function 0x1320339a8 'get_decimal_point' 'int ()'
|   |-DeclStmt 0x132033b98 <line:9:5, col:16>
|   | `-VarDecl 0x132033b30 <col:5, col:12> col:12 used test 'double'
|   |-IfStmt 0x132033c70 <line:11:5, line:14:5>
|   | |-BinaryOperator 0x132033c28 <line:11:9, col:26> 'int' contains-errors '=='
|   | | |-RecoveryExpr 0x132033bb0 <col:9> '<dependent type>' contains-errors lvalue
|   | | `-RecoveryExpr 0x132033c08 <col:26> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x132033c60 <line:12:5, line:14:5>
|   |-IfStmt 0x132037298 <line:17:5, line:32:5> has_else
|   | |-BinaryOperator 0x132033d78 <line:17:9, col:20> 'int' contains-errors '!='
|   | | |-ParenExpr 0x132033d20 <col:9, col:15> 'double' contains-errors
|   | | | `-BinaryOperator 0x132033d00 <col:10, col:14> 'double' contains-errors '*'
|   | | |   |-ImplicitCastExpr 0x132033cd0 <col:10> 'double' contains-errors <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x132033c90 <col:10> 'double' contains-errors lvalue Var 0x13201ac98 'd' 'double'
|   | | |   `-ImplicitCastExpr 0x132033ce8 <col:14> 'double' <IntegralToFloating>
|   | | |     `-IntegerLiteral 0x132033cb0 <col:14> 'int' 0
|   | | `-ImplicitCastExpr 0x132033d60 <col:20> 'double' <IntegralToFloating>
|   | |   `-IntegerLiteral 0x132033d40 <col:20> 'int' 0
|   | |-CompoundStmt 0x132034628 <line:18:5, line:20:5>
|   | | `-BinaryOperator 0x132034608 <line:19:9, col:53> 'int' '='
|   | |   |-DeclRefExpr 0x132033d98 <col:9> 'int' lvalue Var 0x13201ad98 'length' 'int'
|   | |   `-CallExpr 0x1320345a8 <col:18, col:53> 'int'
|   | |     |-ImplicitCastExpr 0x132034590 <col:18> 'int (*)(char *, const char *, ...)' <FunctionToPointerDecay>
|   | |     | `-DeclRefExpr 0x132034448 <col:18> 'int (char *, const char *, ...)' Function 0x132034230 'sprintf' 'int (char *, const char *, ...)'
|   | |     |-CStyleCastExpr 0x1320344b8 <col:26, col:33> 'char *' <BitCast>
|   | |     | `-ImplicitCastExpr 0x1320344a0 <col:33> 'unsigned char *' <ArrayToPointerDecay> part_of_explicit_cast
|   | |     |   `-DeclRefExpr 0x132034468 <col:33> 'unsigned char[26]' lvalue Var 0x132033800 'number_buffer' 'unsigned char[26]'
|   | |     `-ImplicitCastExpr 0x1320345f0 <col:48> 'const char *' <NoOp>
|   | |       `-ImplicitCastExpr 0x1320345d8 <col:48> 'char *' <ArrayToPointerDecay>
|   | |         `-StringLiteral 0x132034520 <col:48> 'char[4]' lvalue "STR"
|   | `-CompoundStmt 0x132037278 <line:22:5, line:32:5>
|   |   |-BinaryOperator 0x132036a00 <line:24:9, col:56> 'int' contains-errors '='
|   |   | |-DeclRefExpr 0x132034640 <col:9> 'int' lvalue Var 0x13201ad98 'length' 'int'
|   |   | `-CallExpr 0x132034768 <col:18, col:56> 'int' contains-errors
|   |   |   |-ImplicitCastExpr 0x132034750 <col:18> 'int (*)(char *, const char *, ...)' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x132034660 <col:18> 'int (char *, const char *, ...)' Function 0x132034230 'sprintf' 'int (char *, const char *, ...)'
|   |   |   |-CStyleCastExpr 0x1320346d0 <col:26, col:33> 'char *' <BitCast>
|   |   |   | `-ImplicitCastExpr 0x1320346b8 <col:33> 'unsigned char *' <ArrayToPointerDecay> part_of_explicit_cast
|   |   |   |   `-DeclRefExpr 0x132034680 <col:33> 'unsigned char[26]' lvalue Var 0x132033800 'number_buffer' 'unsigned char[26]'
|   |   |   |-ImplicitCastExpr 0x1320347b8 <col:48> 'const char *' <NoOp>
|   |   |   | `-ImplicitCastExpr 0x1320347a0 <col:48> 'char *' <ArrayToPointerDecay>
|   |   |   |   `-StringLiteral 0x1320346f8 <col:48> 'char[4]' lvalue "STR"
|   |   |   `-ImplicitCastExpr 0x1320347d0 <col:55> 'double' contains-errors <LValueToRValue>
|   |   |     `-DeclRefExpr 0x132034718 <col:55> 'double' contains-errors lvalue Var 0x13201ac98 'd' 'double'
|   |   `-IfStmt 0x132037258 <line:27:9, line:31:9>
|   |     |-BinaryOperator 0x132037058 <line:27:13, col:84> 'int' contains-errors '||'
|   |     | |-ParenExpr 0x132036f48 <col:13, col:61> 'int'
|   |     | | `-BinaryOperator 0x132036f28 <col:14, col:60> 'int' '!='
|   |     | |   |-CallExpr 0x132036e88 <col:14, col:55> 'int'
|   |     | |   | |-ImplicitCastExpr 0x132036e70 <col:14> 'int (*)(const char *restrict, const char *restrict, ...)' <FunctionToPointerDecay>
|   |     | |   | | `-DeclRefExpr 0x132036cd0 <col:14> 'int (const char *restrict, const char *restrict, ...)' Function 0x132036ab8 'sscanf' 'int (const char *restrict, const char *restrict, ...)'
|   |     | |   | |-ImplicitCastExpr 0x132036ec0 <col:21, col:28> 'const char *' <NoOp>
|   |     | |   | | `-CStyleCastExpr 0x132036d40 <col:21, col:28> 'char *' <BitCast>
|   |     | |   | |   `-ImplicitCastExpr 0x132036d28 <col:28> 'unsigned char *' <ArrayToPointerDecay> part_of_explicit_cast
|   |     | |   | |     `-DeclRefExpr 0x132036cf0 <col:28> 'unsigned char[26]' lvalue Var 0x132033800 'number_buffer' 'unsigned char[26]'
|   |     | |   | |-ImplicitCastExpr 0x132036ef0 <col:43> 'const char *' <NoOp>
|   |     | |   | | `-ImplicitCastExpr 0x132036ed8 <col:43> 'char *' <ArrayToPointerDecay>
|   |     | |   | |   `-StringLiteral 0x132036d68 <col:43> 'char[4]' lvalue "STR"
|   |     | |   | `-UnaryOperator 0x132036de0 <col:50, col:51> 'double *' prefix '&' cannot overflow
|   |     | |   |   `-DeclRefExpr 0x132036d88 <col:51> 'double' lvalue Var 0x132033b30 'test' 'double'
|   |     | |   `-IntegerLiteral 0x132036f08 <col:60> 'int' 1
|   |     | `-ParenExpr 0x132037038 <col:66, col:84> 'int' contains-errors
|   |     |   `-BinaryOperator 0x132037018 <col:67, col:83> 'int' contains-errors '!='
|   |     |     |-CStyleCastExpr 0x132036fb8 <col:67, col:75> 'double' <NoOp>
|   |     |     | `-ImplicitCastExpr 0x132036fa0 <col:75> 'double' <LValueToRValue> part_of_explicit_cast
|   |     |     |   `-DeclRefExpr 0x132036f68 <col:75> 'double' lvalue Var 0x132033b30 'test' 'double'
|   |     |     `-ImplicitCastExpr 0x132037000 <col:83> 'double' contains-errors <LValueToRValue>
|   |     |       `-DeclRefExpr 0x132036fe0 <col:83> 'double' contains-errors lvalue Var 0x13201ac98 'd' 'double'
|   |     `-CompoundStmt 0x132037240 <line:28:9, line:31:9>
|   |       `-BinaryOperator 0x132037220 <line:30:13, col:60> 'int' contains-errors '='
|   |         |-DeclRefExpr 0x132037078 <col:13> 'int' lvalue Var 0x13201ad98 'length' 'int'
|   |         `-CallExpr 0x1320371a0 <col:22, col:60> 'int' contains-errors
|   |           |-ImplicitCastExpr 0x132037188 <col:22> 'int (*)(char *, const char *, ...)' <FunctionToPointerDecay>
|   |           | `-DeclRefExpr 0x132037098 <col:22> 'int (char *, const char *, ...)' Function 0x132034230 'sprintf' 'int (char *, const char *, ...)'
|   |           |-CStyleCastExpr 0x132037108 <col:30, col:37> 'char *' <BitCast>
|   |           | `-ImplicitCastExpr 0x1320370f0 <col:37> 'unsigned char *' <ArrayToPointerDecay> part_of_explicit_cast
|   |           |   `-DeclRefExpr 0x1320370b8 <col:37> 'unsigned char[26]' lvalue Var 0x132033800 'number_buffer' 'unsigned char[26]'
|   |           |-ImplicitCastExpr 0x1320371f0 <col:52> 'const char *' <NoOp>
|   |           | `-ImplicitCastExpr 0x1320371d8 <col:52> 'char *' <ArrayToPointerDecay>
|   |           |   `-StringLiteral 0x132037130 <col:52> 'char[4]' lvalue "STR"
|   |           `-ImplicitCastExpr 0x132037208 <col:59> 'double' contains-errors <LValueToRValue>
|   |             `-DeclRefExpr 0x132037150 <col:59> 'double' contains-errors lvalue Var 0x13201ac98 'd' 'double'
|   |-IfStmt 0x132037558 <line:35:5, line:38:5>
|   | |-BinaryOperator 0x132037510 <line:35:9, col:67> 'int' '||'
|   | | |-ParenExpr 0x132037340 <col:9, col:20> 'int'
|   | | | `-BinaryOperator 0x132037320 <col:10, col:19> 'int' '<'
|   | | |   |-ImplicitCastExpr 0x132037308 <col:10> 'int' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x1320372c8 <col:10> 'int' lvalue Var 0x13201ad98 'length' 'int'
|   | | |   `-IntegerLiteral 0x1320372e8 <col:19> 'int' 0
|   | | `-ParenExpr 0x1320374f0 <col:25, col:67> 'int'
|   | |   `-BinaryOperator 0x1320374d0 <col:26, col:66> 'int' '>'
|   | |     |-ImplicitCastExpr 0x1320374b8 <col:26> 'int' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x132037360 <col:26> 'int' lvalue Var 0x13201ad98 'length' 'int'
|   | |     `-CStyleCastExpr 0x132037490 <col:35, col:66> 'int' <IntegralCast>
|   | |       `-ParenExpr 0x132037470 <col:40, col:66> 'unsigned long'
|   | |         `-BinaryOperator 0x132037418 <col:41, col:65> 'unsigned long' '-'
|   | |           |-UnaryExprOrTypeTraitExpr 0x1320373c0 <col:41, col:61> 'unsigned long' sizeof
|   | |           | `-ParenExpr 0x1320373a0 <col:47, col:61> 'unsigned char[26]' lvalue
|   | |           |   `-DeclRefExpr 0x132037380 <col:48> 'unsigned char[26]' lvalue Var 0x132033800 'number_buffer' 'unsigned char[26]' non_odr_use_unevaluated
|   | |           `-ImplicitCastExpr 0x132037400 <col:65> 'unsigned long' <IntegralCast>
|   | |             `-IntegerLiteral 0x1320373e0 <col:65> 'int' 1
|   | `-CompoundStmt 0x132037548 <line:36:5, line:38:5>
|   `-IfStmt 0x1320377f0 <line:42:5, line:45:5>
|     |-BinaryOperator 0x1320377a8 <line:42:9, col:27> 'int' contains-errors '=='
|     | |-DeclRefExpr 0x132037730 <col:9> 'unsigned char *' contains-errors lvalue Var 0x13201abc8 'output_pointer' 'unsigned char *'
|     | `-RecoveryExpr 0x132037788 <col:27> '<dependent type>' contains-errors lvalue
|     `-CompoundStmt 0x1320377e0 <line:43:5, line:45:5>
|-FunctionDecl 0x132034230 <line:19:18> col:18 implicit used sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x132034330 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x132034398 <<invalid sloc>> <invalid sloc> 'const char *'
| |-BuiltinAttr 0x1320342d8 <<invalid sloc>> Implicit 906
| `-FormatAttr 0x132034410 <col:18> Implicit printf 2 3
`-FunctionDecl 0x132036ab8 <line:27:14> col:14 implicit used sscanf 'int (const char *restrict, const char *restrict, ...)' extern
  |-ParmVarDecl 0x132036bb8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
  |-ParmVarDecl 0x132036c20 <<invalid sloc>> <invalid sloc> 'const char *restrict'
  |-BuiltinAttr 0x132036b60 <<invalid sloc>> Implicit 913
  `-FormatAttr 0x132036c98 <col:14> Implicit scanf 2 3
