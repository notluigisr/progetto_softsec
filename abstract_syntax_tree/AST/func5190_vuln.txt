TranslationUnitDecl 0x127055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1270564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x127055bd0 '__int128'
|-TypedefDecl 0x127056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x127055bf0 'unsigned __int128'
|-TypedefDecl 0x12780be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12780bc00 'struct __NSConstantString_tag'
|   `-Record 0x127056580 '__NSConstantString_tag'
|-TypedefDecl 0x12780be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x127055d90 '__SVInt8_t'
|-TypedefDecl 0x12780bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x127055db0 '__SVInt16_t'
|-TypedefDecl 0x12780bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x127055dd0 '__SVInt32_t'
|-TypedefDecl 0x12780bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x127055df0 '__SVInt64_t'
|-TypedefDecl 0x12780c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x127055e10 '__SVUint8_t'
|-TypedefDecl 0x12780c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x127055e30 '__SVUint16_t'
|-TypedefDecl 0x12780c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x127055e50 '__SVUint32_t'
|-TypedefDecl 0x12780c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x127055e70 '__SVUint64_t'
|-TypedefDecl 0x12780c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x127055e90 '__SVFloat16_t'
|-TypedefDecl 0x12780c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x127055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12780c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x127055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12780c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x127055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12780c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x127055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12780c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x127055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12780c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x127055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12780c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x127055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12780c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x127055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12780c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x127055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12780c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x127055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12780c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x127055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12780c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x127056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12780c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x127056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12780c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x127056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12780c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x127056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12780c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x127056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12780c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1270560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12780c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1270560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12780c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1270560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12780c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x127056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12780ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x127056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12780cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x127056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12780cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x127056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12780cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x127056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12780d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1270561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12780d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1270561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12780d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1270561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12780d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x127056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12780d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x127056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12780d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x127056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12780d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x127056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12780d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x127056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12780d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1270562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12780d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1270562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12780d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1270562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12780d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x127056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12780d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x127056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12780d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x127056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12780d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x127056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12780da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x127056390 '__SVBool_t'
|-TypedefDecl 0x12780da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1270563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12780dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1270563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12780db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1270563f0 '__SVCount_t'
|-TypedefDecl 0x12780dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12780dbb0 'char *'
|   `-BuiltinType 0x1270556b0 'char'
|-TypedefDecl 0x12780dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12780dbb0 'char *'
|   `-BuiltinType 0x1270556b0 'char'
|-FunctionDecl 0x12780dec8 <dataset_diviso_filec/func5190_vuln.c:1:1, line:23:1> line:1:1 ImagingNew 'int (const char *, int, int)'
| |-ParmVarDecl 0x12780dcd8 <col:12, col:24> col:24 used mode 'const char *'
| |-ParmVarDecl 0x12780dd58 <col:30, col:34> col:34 used xsize 'int'
| |-ParmVarDecl 0x12780ddd8 <col:41, col:45> col:45 used ysize 'int'
| `-CompoundStmt 0x127827498 <line:2:1, line:23:1>
|   |-DeclStmt 0x12780e050 <line:3:5, col:14>
|   | `-VarDecl 0x12780dfe8 <col:5, col:9> col:9 used bytes 'int'
|   |-IfStmt 0x127826db0 <line:6:5, line:12:28> has_else
|   | |-BinaryOperator 0x1278269a0 <line:6:9, col:25> 'int' '=='
|   | | |-CallExpr 0x127826928 <col:9, col:20> 'unsigned long'
|   | | | |-ImplicitCastExpr 0x127826910 <col:9> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x127826880 <col:9> 'unsigned long (const char *)' Function 0x127826710 'strlen' 'unsigned long (const char *)'
|   | | | `-ImplicitCastExpr 0x127826950 <col:16> 'const char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1278268a0 <col:16> 'const char *' lvalue ParmVar 0x12780dcd8 'mode' 'const char *'
|   | | `-ImplicitCastExpr 0x127826988 <col:25> 'unsigned long' <IntegralCast>
|   | |   `-IntegerLiteral 0x127826968 <col:25> 'int' 1
|   | |-CompoundStmt 0x127826c90 <col:28, line:11:5>
|   | | `-IfStmt 0x127826c60 <line:7:9, line:10:21> has_else
|   | |   |-BinaryOperator 0x127826b80 <line:7:13, col:42> 'int' '||'
|   | |   | |-BinaryOperator 0x127826a80 <col:13, col:24> 'int' '=='
|   | |   | | |-ImplicitCastExpr 0x127826a68 <col:13, col:19> 'int' <IntegralCast>
|   | |   | | | `-ImplicitCastExpr 0x127826a50 <col:13, col:19> 'char' <LValueToRValue>
|   | |   | | |   `-ArraySubscriptExpr 0x127826a18 <col:13, col:19> 'const char' lvalue
|   | |   | | |     |-ImplicitCastExpr 0x127826a00 <col:13> 'const char *' <LValueToRValue>
|   | |   | | |     | `-DeclRefExpr 0x1278269c0 <col:13> 'const char *' lvalue ParmVar 0x12780dcd8 'mode' 'const char *'
|   | |   | | |     `-IntegerLiteral 0x1278269e0 <col:18> 'int' 0
|   | |   | | `-CharacterLiteral 0x127826a38 <col:24> 'int' 70
|   | |   | `-BinaryOperator 0x127826b60 <col:31, col:42> 'int' '=='
|   | |   |   |-ImplicitCastExpr 0x127826b48 <col:31, col:37> 'int' <IntegralCast>
|   | |   |   | `-ImplicitCastExpr 0x127826b30 <col:31, col:37> 'char' <LValueToRValue>
|   | |   |   |   `-ArraySubscriptExpr 0x127826af8 <col:31, col:37> 'const char' lvalue
|   | |   |   |     |-ImplicitCastExpr 0x127826ae0 <col:31> 'const char *' <LValueToRValue>
|   | |   |   |     | `-DeclRefExpr 0x127826aa0 <col:31> 'const char *' lvalue ParmVar 0x12780dcd8 'mode' 'const char *'
|   | |   |   |     `-IntegerLiteral 0x127826ac0 <col:36> 'int' 0
|   | |   |   `-CharacterLiteral 0x127826b18 <col:42> 'int' 73
|   | |   |-BinaryOperator 0x127826be0 <line:8:13, col:21> 'int' '='
|   | |   | |-DeclRefExpr 0x127826ba0 <col:13> 'int' lvalue Var 0x12780dfe8 'bytes' 'int'
|   | |   | `-IntegerLiteral 0x127826bc0 <col:21> 'int' 4
|   | |   `-BinaryOperator 0x127826c40 <line:10:13, col:21> 'int' '='
|   | |     |-DeclRefExpr 0x127826c00 <col:13> 'int' lvalue Var 0x12780dfe8 'bytes' 'int'
|   | |     `-IntegerLiteral 0x127826c20 <col:21> 'int' 1
|   | `-BinaryOperator 0x127826d90 <line:12:9, col:28> 'int' '='
|   |   |-DeclRefExpr 0x127826ca8 <col:9> 'int' lvalue Var 0x12780dfe8 'bytes' 'int'
|   |   `-ImplicitCastExpr 0x127826d78 <col:17, col:28> 'int' <IntegralCast>
|   |     `-CallExpr 0x127826d38 <col:17, col:28> 'unsigned long'
|   |       |-ImplicitCastExpr 0x127826d20 <col:17> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x127826cc8 <col:17> 'unsigned long (const char *)' Function 0x127826710 'strlen' 'unsigned long (const char *)'
|   |       `-ImplicitCastExpr 0x127826d60 <col:24> 'const char *' <LValueToRValue>
|   |         `-DeclRefExpr 0x127826ce8 <col:24> 'const char *' lvalue ParmVar 0x12780dcd8 'mode' 'const char *'
|   |-IfStmt 0x127827270 <line:14:5, line:20:5>
|   | |-RecoveryExpr 0x127826df8 <line:14:9, col:58> '_Bool' contains-errors
|   | `-CompoundStmt 0x127827250 <col:65, line:20:5>
|   |   |-IfStmt 0x1278270f8 <line:16:9, line:17:20>
|   |   | |-RecoveryExpr 0x127827090 <line:16:13> '<dependent type>' contains-errors lvalue
|   |   | `-ReturnStmt 0x1278270e8 <line:17:13, col:20>
|   |   |   `-RecoveryExpr 0x1278270c8 <col:20> '<dependent type>' contains-errors lvalue
|   |   `-CallExpr 0x127827230 <line:19:9, col:28> 'int'
|   |     `-ImplicitCastExpr 0x127827218 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x1278271f8 <col:9> 'int ()' Function 0x127827140 'ImagingError_Clear' 'int ()'
|   `-ReturnStmt 0x127827488 <line:22:5, col:46>
|     `-CallExpr 0x127827408 <col:12, col:46> 'int'
|       |-ImplicitCastExpr 0x1278273f0 <col:12> 'int (*)()' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x127827370 <col:12> 'int ()' Function 0x1278272b8 'ImagingNewArray' 'int ()'
|       |-ImplicitCastExpr 0x127827440 <col:28> 'const char *' <LValueToRValue>
|       | `-DeclRefExpr 0x127827390 <col:28> 'const char *' lvalue ParmVar 0x12780dcd8 'mode' 'const char *'
|       |-ImplicitCastExpr 0x127827458 <col:34> 'int' <LValueToRValue>
|       | `-DeclRefExpr 0x1278273b0 <col:34> 'int' lvalue ParmVar 0x12780dd58 'xsize' 'int'
|       `-ImplicitCastExpr 0x127827470 <col:41> 'int' <LValueToRValue>
|         `-DeclRefExpr 0x1278273d0 <col:41> 'int' lvalue ParmVar 0x12780ddd8 'ysize' 'int'
`-FunctionDecl 0x127826710 <line:6:9> col:9 implicit used strlen 'unsigned long (const char *)' extern
  |-ParmVarDecl 0x127826810 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x1278267b8 <<invalid sloc>> Implicit 902
