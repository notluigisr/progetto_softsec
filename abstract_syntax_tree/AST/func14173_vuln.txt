TranslationUnitDecl 0x13b055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13b0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13b055bd0 '__int128'
|-TypedefDecl 0x13b056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13b055bf0 'unsigned __int128'
|-TypedefDecl 0x13b126c30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13b126a00 'struct __NSConstantString_tag'
|   `-Record 0x13b056580 '__NSConstantString_tag'
|-TypedefDecl 0x13b126c98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13b055d90 '__SVInt8_t'
|-TypedefDecl 0x13b126d00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13b055db0 '__SVInt16_t'
|-TypedefDecl 0x13b126d68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13b055dd0 '__SVInt32_t'
|-TypedefDecl 0x13b126dd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13b055df0 '__SVInt64_t'
|-TypedefDecl 0x13b126e38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13b055e10 '__SVUint8_t'
|-TypedefDecl 0x13b126ea0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13b055e30 '__SVUint16_t'
|-TypedefDecl 0x13b126f08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13b055e50 '__SVUint32_t'
|-TypedefDecl 0x13b126f70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13b055e70 '__SVUint64_t'
|-TypedefDecl 0x13b126fd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13b055e90 '__SVFloat16_t'
|-TypedefDecl 0x13b127040 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13b055eb0 '__SVFloat32_t'
|-TypedefDecl 0x13b1270a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13b055ed0 '__SVFloat64_t'
|-TypedefDecl 0x13b127110 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13b055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13b127178 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13b055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13b1271e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13b055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13b127248 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13b055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13b1272b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13b055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13b127318 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13b055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13b127380 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13b055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13b1273e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13b055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13b127450 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13b055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13b1274b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13b056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13b127520 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13b056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13b127588 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13b056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13b1275f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13b056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13b127658 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13b056090 '__clang_svint8x3_t'
|-TypedefDecl 0x13b1276c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13b0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13b127728 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13b0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13b127790 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13b0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13b1277f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13b056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13b127860 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13b056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13b1278c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13b056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13b127930 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13b056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13b127998 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13b056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13b128200 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13b0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13b128268 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13b0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13b1282d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13b0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13b128338 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13b056210 '__clang_svint8x4_t'
|-TypedefDecl 0x13b1283a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13b056230 '__clang_svint16x4_t'
|-TypedefDecl 0x13b128408 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13b056250 '__clang_svint32x4_t'
|-TypedefDecl 0x13b128470 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13b056270 '__clang_svint64x4_t'
|-TypedefDecl 0x13b1284d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13b056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13b128540 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13b0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13b1285a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13b0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13b128610 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13b0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13b128678 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13b056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13b1286e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13b056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13b128748 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13b056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13b1287b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13b056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13b128818 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13b056390 '__SVBool_t'
|-TypedefDecl 0x13b128880 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13b0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13b1288e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13b0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13b128950 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13b0563f0 '__SVCount_t'
|-TypedefDecl 0x13b1289f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13b1289b0 'char *'
|   `-BuiltinType 0x13b0556b0 'char'
|-TypedefDecl 0x13b128a68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13b1289b0 'char *'
|   `-BuiltinType 0x13b0556b0 'char'
|-FunctionDecl 0x13b128ba8 <dataset_diviso_filec/func14173_vuln.c:1:1, line:72:1> line:1:1 PHP_FUNCTION 'int (int)'
| |-ParmVarDecl 0x13b128ad8 <col:14> col:14 openssl_encrypt 'int'
| `-CompoundStmt 0x13b148238 <line:2:1, line:72:1>
|   |-DeclStmt 0x13b128f58 <line:4:2, col:42>
|   | |-VarDecl 0x13b128cd0 <col:2, col:8> col:8 used data 'char *'
|   | |-VarDecl 0x13b128d50 <col:2, col:15> col:15 used method 'char *'
|   | |-VarDecl 0x13b128dd0 <col:2, col:24> col:24 used password 'char *'
|   | `-VarDecl 0x13b128e50 <col:2, col:40> col:35 used iv 'char *' cinit
|   |   `-ImplicitCastExpr 0x13b128f18 <col:40> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x13b128f00 <col:40> 'char[1]' lvalue ""
|   |-DeclStmt 0x13b141498 <line:5:2, col:64>
|   | |-VarDecl 0x13b128f88 <col:2, col:6> col:6 used data_len 'int'
|   | |-VarDecl 0x13b129008 <col:2, col:16> col:16 method_len 'int'
|   | |-VarDecl 0x13b129088 <col:2, col:28> col:28 used password_len 'int'
|   | |-VarDecl 0x13b129108 <col:2, col:51> col:42 used iv_len 'int' cinit
|   | | `-IntegerLiteral 0x13b129170 <col:51> 'int' 0
|   | `-VarDecl 0x13b141400 <col:2, col:54> col:54 used max_iv_len 'int'
|   |-DeclStmt 0x13b141530 <line:6:2, col:31>
|   | `-VarDecl 0x13b1414c8 <col:2, col:20> col:20 referenced invalid cipher_type 'const int *'
|   |-DeclStmt 0x13b1416e8 <line:8:2, col:23>
|   | |-VarDecl 0x13b141560 <col:2, col:6> col:6 used i 'int'
|   | |-VarDecl 0x13b1415e0 <col:2, col:9> col:9 used outlen 'int'
|   | `-VarDecl 0x13b141660 <col:2, col:17> col:17 used keylen 'int'
|   |-DeclStmt 0x13b141848 <line:9:2, col:29>
|   | |-VarDecl 0x13b141748 <col:2, col:17> col:17 used outbuf 'unsigned char *'
|   | `-VarDecl 0x13b1417c8 <col:2, col:26> col:26 used key 'unsigned char *'
|   |-IfStmt 0x13b141b58 <line:12:2, line:14:2>
|   | |-RecoveryExpr 0x13b141b10 <line:12:6, col:158> '_Bool' contains-errors
|   | `-CompoundStmt 0x13b141b40 <col:167, line:14:2>
|   |   `-ReturnStmt 0x13b141b30 <line:13:3>
|   |-BinaryOperator 0x13b141d38 <line:15:2, col:43> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x13b141b98 <col:2> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x13b141b78 <col:2> 'const int *' lvalue Var 0x13b1414c8 'cipher_type' 'const int *'
|   | `-CallExpr 0x13b141cf8 <col:16, col:43> 'int'
|   |   |-ImplicitCastExpr 0x13b141ce0 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x13b141ca0 <col:16> 'int ()' Function 0x13b141be8 'EVP_get_cipherbyname' 'int ()'
|   |   `-ImplicitCastExpr 0x13b141d20 <col:37> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x13b141cc0 <col:37> 'char *' lvalue Var 0x13b128d50 'method' 'char *'
|   |-IfStmt 0x13b141ed0 <line:16:2, line:19:2>
|   | |-UnaryOperator 0x13b141d90 <line:16:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x13b141d78 <col:7> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x13b141d58 <col:7> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x13b141ec0 <col:20, line:19:2>
|   |-BinaryOperator 0x13b142058 <line:21:2, col:44> 'int' contains-errors '='
|   | |-DeclRefExpr 0x13b141ef0 <col:2> 'int' lvalue Var 0x13b141660 'keylen' 'int'
|   | `-CallExpr 0x13b142030 <col:11, col:44> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x13b141ff0 <col:11> 'int ()' Function 0x13b141f38 'EVP_CIPHER_key_length' 'int ()'
|   |   `-RecoveryExpr 0x13b142010 <col:33> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x13b143ee8 <line:22:2, line:28:2> has_else
|   | |-BinaryOperator 0x13b1420e8 <line:22:6, col:15> 'int' '>'
|   | | |-ImplicitCastExpr 0x13b1420b8 <col:6> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13b142078 <col:6> 'int' lvalue Var 0x13b141660 'keylen' 'int'
|   | | `-ImplicitCastExpr 0x13b1420d0 <col:15> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x13b142098 <col:15> 'int' lvalue Var 0x13b129088 'password_len' 'int'
|   | |-CompoundStmt 0x13b143df0 <col:29, line:26:2>
|   | | |-BinaryOperator 0x13b143500 <line:23:3, col:23> 'unsigned char *' '='
|   | | | |-DeclRefExpr 0x13b142108 <col:3> 'unsigned char *' lvalue Var 0x13b1417c8 'key' 'unsigned char *'
|   | | | `-ImplicitCastExpr 0x13b1422a0 <col:9, col:23> 'unsigned char *' <IntegralToPointer>
|   | | |   `-CallExpr 0x13b142260 <col:9, col:23> 'int'
|   | | |     |-ImplicitCastExpr 0x13b142248 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | |     | `-DeclRefExpr 0x13b142208 <col:9> 'int ()' Function 0x13b142150 'emalloc' 'int ()'
|   | | |     `-ImplicitCastExpr 0x13b142288 <col:17> 'int' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x13b142228 <col:17> 'int' lvalue Var 0x13b141660 'keylen' 'int'
|   | | |-CallExpr 0x13b1438b8 <line:24:3, col:24> 'void *'
|   | | | |-ImplicitCastExpr 0x13b1438a0 <col:3> 'void *(*)(void *, int, unsigned long)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x13b1437b8 <col:3> 'void *(void *, int, unsigned long)' Function 0x13b143568 'memset' 'void *(void *, int, unsigned long)'
|   | | | |-ImplicitCastExpr 0x13b143908 <col:10> 'void *' <BitCast>
|   | | | | `-ImplicitCastExpr 0x13b1438f0 <col:10> 'unsigned char *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x13b1437d8 <col:10> 'unsigned char *' lvalue Var 0x13b1417c8 'key' 'unsigned char *'
|   | | | |-IntegerLiteral 0x13b1437f8 <col:15> 'int' 0
|   | | | `-ImplicitCastExpr 0x13b143938 <col:18> 'unsigned long' <IntegralCast>
|   | | |   `-ImplicitCastExpr 0x13b143920 <col:18> 'int' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x13b143818 <col:18> 'int' lvalue Var 0x13b141660 'keylen' 'int'
|   | | `-CallExpr 0x13b143d28 <line:25:3, col:37> 'void *'
|   | |   |-ImplicitCastExpr 0x13b143d10 <col:3> 'void *(*)(void *, const void *, unsigned long)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x13b143c18 <col:3> 'void *(void *, const void *, unsigned long)' Function 0x13b1439c8 'memcpy' 'void *(void *, const void *, unsigned long)'
|   | |   |-ImplicitCastExpr 0x13b143d78 <col:10> 'void *' <BitCast>
|   | |   | `-ImplicitCastExpr 0x13b143d60 <col:10> 'unsigned char *' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x13b143c38 <col:10> 'unsigned char *' lvalue Var 0x13b1417c8 'key' 'unsigned char *'
|   | |   |-ImplicitCastExpr 0x13b143da8 <col:15> 'const void *' <BitCast>
|   | |   | `-ImplicitCastExpr 0x13b143d90 <col:15> 'char *' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x13b143c58 <col:15> 'char *' lvalue Var 0x13b128dd0 'password' 'char *'
|   | |   `-ImplicitCastExpr 0x13b143dd8 <col:25> 'unsigned long' <IntegralCast>
|   | |     `-ImplicitCastExpr 0x13b143dc0 <col:25> 'int' <LValueToRValue>
|   | |       `-DeclRefExpr 0x13b143c78 <col:25> 'int' lvalue Var 0x13b129088 'password_len' 'int'
|   | `-CompoundStmt 0x13b143ed0 <line:26:9, line:28:2>
|   |   `-BinaryOperator 0x13b143eb0 <line:27:3, col:25> 'unsigned char *' '='
|   |     |-DeclRefExpr 0x13b143e18 <col:3> 'unsigned char *' lvalue Var 0x13b1417c8 'key' 'unsigned char *'
|   |     `-CStyleCastExpr 0x13b143e88 <col:9, col:25> 'unsigned char *' <BitCast>
|   |       `-ImplicitCastExpr 0x13b143e70 <col:25> 'char *' <LValueToRValue> part_of_explicit_cast
|   |         `-DeclRefExpr 0x13b143e38 <col:25> 'char *' lvalue Var 0x13b128dd0 'password' 'char *'
|   |-BinaryOperator 0x13b144080 <line:30:2, col:47> 'int' contains-errors '='
|   | |-DeclRefExpr 0x13b143f18 <col:2> 'int' lvalue Var 0x13b141400 'max_iv_len' 'int'
|   | `-CallExpr 0x13b144058 <col:15, col:47> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x13b144018 <col:15> 'int ()' Function 0x13b143f60 'EVP_CIPHER_iv_length' 'int ()'
|   |   `-RecoveryExpr 0x13b144038 <col:36> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x13b146470 <line:31:2, line:33:2>
|   | |-BinaryOperator 0x13b144190 <line:31:6, col:34> 'int' '&&'
|   | | |-BinaryOperator 0x13b1440f8 <col:6, col:16> 'int' '<='
|   | | | |-ImplicitCastExpr 0x13b1440e0 <col:6> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x13b1440a0 <col:6> 'int' lvalue Var 0x13b129108 'iv_len' 'int'
|   | | | `-IntegerLiteral 0x13b1440c0 <col:16> 'int' 0
|   | | `-BinaryOperator 0x13b144170 <col:21, col:34> 'int' '>'
|   | |   |-ImplicitCastExpr 0x13b144158 <col:21> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x13b144118 <col:21> 'int' lvalue Var 0x13b141400 'max_iv_len' 'int'
|   | |   `-IntegerLiteral 0x13b144138 <col:34> 'int' 0
|   | `-CompoundStmt 0x13b146460 <col:37, line:33:2>
|   |-BinaryOperator 0x13b146830 <line:36:2, col:55> 'int' contains-errors '='
|   | |-DeclRefExpr 0x13b146688 <col:2> 'int' lvalue Var 0x13b1415e0 'outlen' 'int'
|   | `-BinaryOperator 0x13b146810 <col:11, col:55> '<dependent type>' contains-errors '+'
|   |   |-DeclRefExpr 0x13b1466a8 <col:11> 'int' lvalue Var 0x13b128f88 'data_len' 'int'
|   |   `-CallExpr 0x13b1467e8 <col:22, col:55> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x13b1467a8 <col:22> 'int ()' Function 0x13b1466f0 'EVP_CIPHER_block_size' 'int ()'
|   |     `-RecoveryExpr 0x13b1467c8 <col:44> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x13b146960 <line:37:2, col:29> 'unsigned char *' '='
|   | |-DeclRefExpr 0x13b146850 <col:2> 'unsigned char *' lvalue Var 0x13b141748 'outbuf' 'unsigned char *'
|   | `-ImplicitCastExpr 0x13b146948 <col:11, col:29> 'unsigned char *' <IntegralToPointer>
|   |   `-CallExpr 0x13b146920 <col:11, col:29> 'int'
|   |     |-ImplicitCastExpr 0x13b146908 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x13b146870 <col:11> 'int ()' Function 0x13b142150 'emalloc' 'int ()'
|   |     `-BinaryOperator 0x13b1468e8 <col:19, col:28> 'int' '+'
|   |       |-ImplicitCastExpr 0x13b1468d0 <col:19> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x13b146890 <col:19> 'int' lvalue Var 0x13b1415e0 'outlen' 'int'
|   |       `-IntegerLiteral 0x13b1468b0 <col:28> 'int' 1
|   |-IfStmt 0x13b146c60 <line:40:2, line:42:2>
|   | |-BinaryOperator 0x13b146b10 <line:40:6, col:21> 'int' '>'
|   | | |-ImplicitCastExpr 0x13b146ae0 <col:6> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13b146aa0 <col:6> 'int' lvalue Var 0x13b129088 'password_len' 'int'
|   | | `-ImplicitCastExpr 0x13b146af8 <col:21> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x13b146ac0 <col:21> 'int' lvalue Var 0x13b141660 'keylen' 'int'
|   | `-CompoundStmt 0x13b146c50 <col:29, line:42:2>
|   |-IfStmt 0x13b147090 <line:44:2, line:46:2>
|   | |-BinaryOperator 0x13b146e70 <line:44:6, col:17> 'int' '>'
|   | | |-ImplicitCastExpr 0x13b146e58 <col:6> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13b146e18 <col:6> 'int' lvalue Var 0x13b128f88 'data_len' 'int'
|   | | `-IntegerLiteral 0x13b146e38 <col:17> 'int' 0
|   | `-CompoundStmt 0x13b147080 <col:20, line:46:2>
|   |-BinaryOperator 0x13b147108 <line:47:2, col:11> 'int' '='
|   | |-DeclRefExpr 0x13b1470b0 <col:2> 'int' lvalue Var 0x13b1415e0 'outlen' 'int'
|   | `-ImplicitCastExpr 0x13b1470f0 <col:11> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x13b1470d0 <col:11> 'int' lvalue Var 0x13b141560 'i' 'int'
|   |-IfStmt 0x13b147e78 <line:48:2, line:64:2> has_else
|   | |-RecoveryExpr 0x13b147330 <line:48:6, col:67> '_Bool' contains-errors
|   | |-CompoundStmt 0x13b147da8 <col:70, line:61:2>
|   | | |-CompoundAssignOperator 0x13b1473a8 <line:49:3, col:13> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | | | |-DeclRefExpr 0x13b147350 <col:3> 'int' lvalue Var 0x13b1415e0 'outlen' 'int'
|   | | | `-ImplicitCastExpr 0x13b147390 <col:13> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x13b147370 <col:13> 'int' lvalue Var 0x13b141560 'i' 'int'
|   | | `-IfStmt 0x13b147d78 <line:50:3, line:60:3> has_else
|   | |   |-RecoveryExpr 0x13b1473d8 <line:50:7> '_Bool' contains-errors
|   | |   |-CompoundStmt 0x13b147700 <col:19, line:53:3>
|   | |   | |-BinaryOperator 0x13b1474c0 <line:51:4, col:21> 'unsigned char' '='
|   | |   | | |-ArraySubscriptExpr 0x13b147470 <col:4, col:17> 'unsigned char' lvalue
|   | |   | | | |-ImplicitCastExpr 0x13b147440 <col:4> 'unsigned char *' <LValueToRValue>
|   | |   | | | | `-DeclRefExpr 0x13b147400 <col:4> 'unsigned char *' lvalue Var 0x13b141748 'outbuf' 'unsigned char *'
|   | |   | | | `-ImplicitCastExpr 0x13b147458 <col:11> 'int' <LValueToRValue>
|   | |   | | |   `-DeclRefExpr 0x13b147420 <col:11> 'int' lvalue Var 0x13b1415e0 'outlen' 'int'
|   | |   | | `-ImplicitCastExpr 0x13b1474a8 <col:21> 'unsigned char' <IntegralCast>
|   | |   | |   `-CharacterLiteral 0x13b147490 <col:21> 'int' 0
|   | |   | `-CallExpr 0x13b1476b0 <line:52:4, col:44> 'int'
|   | |   |   |-ImplicitCastExpr 0x13b147698 <col:4> 'int (*)()' <FunctionToPointerDecay>
|   | |   |   | `-DeclRefExpr 0x13b1475c0 <col:4> 'int ()' Function 0x13b147508 'RETVAL_STRINGL' 'int ()'
|   | |   |   |-CStyleCastExpr 0x13b147630 <col:19, col:27> 'char *' <BitCast>
|   | |   |   | `-ImplicitCastExpr 0x13b147618 <col:27> 'unsigned char *' <LValueToRValue> part_of_explicit_cast
|   | |   |   |   `-DeclRefExpr 0x13b1475e0 <col:27> 'unsigned char *' lvalue Var 0x13b141748 'outbuf' 'unsigned char *'
|   | |   |   |-ImplicitCastExpr 0x13b1476e8 <col:35> 'int' <LValueToRValue>
|   | |   |   | `-DeclRefExpr 0x13b147658 <col:35> 'int' lvalue Var 0x13b1415e0 'outlen' 'int'
|   | |   |   `-IntegerLiteral 0x13b147678 <col:43> 'int' 0
|   | |   `-CompoundStmt 0x13b147d40 <line:53:10, line:60:3>
|   | |     |-DeclStmt 0x13b1477a0 <line:54:4, col:22>
|   | |     | `-VarDecl 0x13b147738 <col:4, col:8> col:8 used base64_str_len 'int'
|   | |     |-DeclStmt 0x13b147838 <line:55:4, col:20>
|   | |     | `-VarDecl 0x13b1477d0 <col:4, col:10> col:10 used base64_str 'char *'
|   | |     |-BinaryOperator 0x13b147aa8 <line:57:4, col:73> 'char *' '='
|   | |     | |-DeclRefExpr 0x13b147850 <col:4> 'char *' lvalue Var 0x13b1477d0 'base64_str' 'char *'
|   | |     | `-CStyleCastExpr 0x13b147a80 <col:17, col:73> 'char *' <IntegralToPointer>
|   | |     |   `-CallExpr 0x13b147a00 <col:24, col:73> 'int'
|   | |     |     |-ImplicitCastExpr 0x13b1479e8 <col:24> 'int (*)()' <FunctionToPointerDecay>
|   | |     |     | `-DeclRefExpr 0x13b147950 <col:24> 'int ()' Function 0x13b147898 'php_base64_encode' 'int ()'
|   | |     |     |-ImplicitCastExpr 0x13b147a38 <col:42> 'unsigned char *' <LValueToRValue>
|   | |     |     | `-DeclRefExpr 0x13b147970 <col:42> 'unsigned char *' lvalue Var 0x13b141748 'outbuf' 'unsigned char *'
|   | |     |     |-ImplicitCastExpr 0x13b147a50 <col:50> 'int' <LValueToRValue>
|   | |     |     | `-DeclRefExpr 0x13b147990 <col:50> 'int' lvalue Var 0x13b1415e0 'outlen' 'int'
|   | |     |     `-UnaryOperator 0x13b1479d0 <col:58, col:59> 'int *' prefix '&' cannot overflow
|   | |     |       `-DeclRefExpr 0x13b1479b0 <col:59> 'int' lvalue Var 0x13b147738 'base64_str_len' 'int'
|   | |     |-CallExpr 0x13b147c00 <line:58:4, col:16> 'int'
|   | |     | |-ImplicitCastExpr 0x13b147be8 <col:4> 'int (*)()' <FunctionToPointerDecay>
|   | |     | | `-DeclRefExpr 0x13b147ba8 <col:4> 'int ()' Function 0x13b147af0 'efree' 'int ()'
|   | |     | `-ImplicitCastExpr 0x13b147c28 <col:10> 'unsigned char *' <LValueToRValue>
|   | |     |   `-DeclRefExpr 0x13b147bc8 <col:10> 'unsigned char *' lvalue Var 0x13b141748 'outbuf' 'unsigned char *'
|   | |     `-CallExpr 0x13b147cd8 <line:59:4, col:48> 'int'
|   | |       |-ImplicitCastExpr 0x13b147cc0 <col:4> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x13b147c40 <col:4> 'int ()' Function 0x13b147508 'RETVAL_STRINGL' 'int ()'
|   | |       |-ImplicitCastExpr 0x13b147d10 <col:19> 'char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x13b147c60 <col:19> 'char *' lvalue Var 0x13b1477d0 'base64_str' 'char *'
|   | |       |-ImplicitCastExpr 0x13b147d28 <col:31> 'int' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x13b147c80 <col:31> 'int' lvalue Var 0x13b147738 'base64_str_len' 'int'
|   | |       `-IntegerLiteral 0x13b147ca0 <col:47> 'int' 0
|   | `-CompoundStmt 0x13b147e60 <line:61:9, line:64:2>
|   |   `-CallExpr 0x13b147e20 <line:62:3, col:15> 'int'
|   |     |-ImplicitCastExpr 0x13b147e08 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x13b147dc8 <col:3> 'int ()' Function 0x13b147af0 'efree' 'int ()'
|   |     `-ImplicitCastExpr 0x13b147e48 <col:9> 'unsigned char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x13b147de8 <col:9> 'unsigned char *' lvalue Var 0x13b141748 'outbuf' 'unsigned char *'
|   |-IfStmt 0x13b148028 <line:65:2, line:67:2>
|   | |-BinaryOperator 0x13b147f58 <line:65:6, col:29> 'int' '!='
|   | | |-ImplicitCastExpr 0x13b147f40 <col:6> 'unsigned char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13b147ea8 <col:6> 'unsigned char *' lvalue Var 0x13b1417c8 'key' 'unsigned char *'
|   | | `-CStyleCastExpr 0x13b147f18 <col:13, col:29> 'unsigned char *' <BitCast>
|   | |   `-ImplicitCastExpr 0x13b147f00 <col:29> 'char *' <LValueToRValue> part_of_explicit_cast
|   | |     `-DeclRefExpr 0x13b147ec8 <col:29> 'char *' lvalue Var 0x13b128dd0 'password' 'char *'
|   | `-CompoundStmt 0x13b148010 <col:39, line:67:2>
|   |   `-CallExpr 0x13b147fd0 <line:66:3, col:12> 'int'
|   |     |-ImplicitCastExpr 0x13b147fb8 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x13b147f78 <col:3> 'int ()' Function 0x13b147af0 'efree' 'int ()'
|   |     `-ImplicitCastExpr 0x13b147ff8 <col:9> 'unsigned char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x13b147f98 <col:9> 'unsigned char *' lvalue Var 0x13b1417c8 'key' 'unsigned char *'
|   `-IfStmt 0x13b148118 <line:68:2, line:70:2>
|     |-RecoveryExpr 0x13b148048 <line:68:6> '_Bool' contains-errors
|     `-CompoundStmt 0x13b148100 <col:15, line:70:2>
|       `-CallExpr 0x13b1480c0 <line:69:3, col:11> 'int'
|         |-ImplicitCastExpr 0x13b1480a8 <col:3> 'int (*)()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x13b148068 <col:3> 'int ()' Function 0x13b147af0 'efree' 'int ()'
|         `-ImplicitCastExpr 0x13b1480e8 <col:9> 'char *' <LValueToRValue>
|           `-DeclRefExpr 0x13b148088 <col:9> 'char *' lvalue Var 0x13b128e50 'iv' 'char *'
|-FunctionDecl 0x13b143568 <line:24:3> col:3 implicit used memset 'void *(void *, int, unsigned long)' extern
| |-ParmVarDecl 0x13b143668 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x13b1436d0 <<invalid sloc>> <invalid sloc> 'int'
| |-ParmVarDecl 0x13b143738 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x13b143610 <<invalid sloc>> Implicit 900
`-FunctionDecl 0x13b1439c8 <line:25:3> col:3 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x13b143ac8 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x13b143b30 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x13b143b98 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x13b143a70 <<invalid sloc>> Implicit 882
