TranslationUnitDecl 0x120055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1200564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x120055bd0 '__int128'
|-TypedefDecl 0x120056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x120055bf0 'unsigned __int128'
|-TypedefDecl 0x120126c30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x120126a00 'struct __NSConstantString_tag'
|   `-Record 0x120056580 '__NSConstantString_tag'
|-TypedefDecl 0x120126c98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x120055d90 '__SVInt8_t'
|-TypedefDecl 0x120126d00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x120055db0 '__SVInt16_t'
|-TypedefDecl 0x120126d68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x120055dd0 '__SVInt32_t'
|-TypedefDecl 0x120126dd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x120055df0 '__SVInt64_t'
|-TypedefDecl 0x120126e38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x120055e10 '__SVUint8_t'
|-TypedefDecl 0x120126ea0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x120055e30 '__SVUint16_t'
|-TypedefDecl 0x120126f08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x120055e50 '__SVUint32_t'
|-TypedefDecl 0x120126f70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x120055e70 '__SVUint64_t'
|-TypedefDecl 0x120126fd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x120055e90 '__SVFloat16_t'
|-TypedefDecl 0x120127040 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x120055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1201270a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x120055ed0 '__SVFloat64_t'
|-TypedefDecl 0x120127110 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x120055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x120127178 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x120055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1201271e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x120055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x120127248 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x120055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1201272b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x120055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x120127318 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x120055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x120127380 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x120055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1201273e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x120055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x120127450 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x120055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1201274b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x120056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x120127520 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x120056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x120127588 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x120056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1201275f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x120056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x120127658 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x120056090 '__clang_svint8x3_t'
|-TypedefDecl 0x1201276c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1200560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x120127728 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1200560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x120127790 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1200560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x1201277f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x120056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x120127860 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x120056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x1201278c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x120056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x120127930 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x120056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x120127998 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x120056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x120128200 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1200561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x120128268 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1200561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1201282d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1200561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x120128338 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x120056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1201283a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x120056230 '__clang_svint16x4_t'
|-TypedefDecl 0x120128408 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x120056250 '__clang_svint32x4_t'
|-TypedefDecl 0x120128470 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x120056270 '__clang_svint64x4_t'
|-TypedefDecl 0x1201284d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x120056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x120128540 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1200562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1201285a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1200562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x120128610 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1200562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x120128678 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x120056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1201286e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x120056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x120128748 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x120056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1201287b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x120056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x120128818 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x120056390 '__SVBool_t'
|-TypedefDecl 0x120128880 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1200563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1201288e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1200563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x120128950 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1200563f0 '__SVCount_t'
|-TypedefDecl 0x1201289f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1201289b0 'char *'
|   `-BuiltinType 0x1200556b0 'char'
|-TypedefDecl 0x120128a68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1201289b0 'char *'
|   `-BuiltinType 0x1200556b0 'char'
|-FunctionDecl 0x120128d48 <dataset_diviso_filec/func17598_vuln.c:1:1, line:62:1> line:1:12 invalid get_line 'int (int *, char **, int *)' static
| |-ParmVarDecl 0x120128b28 <col:21, col:38> col:38 referenced invalid imp 'int *'
| |-ParmVarDecl 0x120128bd8 <col:43, col:50> col:50 used line 'char **'
| |-ParmVarDecl 0x120128c58 <col:56, col:64> col:64 invalid size 'int *'
| `-CompoundStmt 0x120145a00 <col:70, line:62:1>
|   |-DeclStmt 0x120128ec0 <line:3:9, col:23>
|   | `-VarDecl 0x120128e20 <col:9, col:19> col:15 used c 'char *' cinit
|   |   `-RecoveryExpr 0x120128ea0 <col:19> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x120129070 <line:5:9, col:19> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x120129030 <col:9> 'int ()' Function 0x120128f78 'assert' 'int ()'
|   | `-RecoveryExpr 0x120129050 <col:16> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x1201291c0 <line:6:9, col:49> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x120129098 <col:9> 'int ()' Function 0x120128f78 'assert' 'int ()'
|   | `-BinaryOperator 0x1201291a0 <col:16, col:30> 'int' contains-errors '=='
|   |   |-CXXDependentScopeMemberExpr 0x1201290d8 <col:16, col:21> '<dependent type>' contains-errors lvalue ->state
|   |   | `-RecoveryExpr 0x1201290b8 <col:16> '<dependent type>' contains-errors lvalue
|   |   `-RecoveryExpr 0x120129180 <col:30> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x120142310 <line:7:9, col:42> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x120142200 <col:9> 'int ()' Function 0x120128f78 'assert' 'int ()'
|   | `-BinaryOperator 0x1201422f0 <col:16, col:36> 'int' contains-errors '<='
|   |   |-CXXDependentScopeMemberExpr 0x120142240 <col:16, col:21> '<dependent type>' contains-errors lvalue ->offset
|   |   | `-RecoveryExpr 0x120142220 <col:16> '<dependent type>' contains-errors lvalue
|   |   `-CXXDependentScopeMemberExpr 0x1201422a8 <col:31, col:36> '<dependent type>' contains-errors lvalue ->filled
|   |     `-RecoveryExpr 0x120142288 <col:31> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x120142448 <line:8:9, col:40> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x120142338 <col:9> 'int ()' Function 0x120128f78 'assert' 'int ()'
|   | `-BinaryOperator 0x120142428 <col:16, col:36> 'int' contains-errors '<='
|   |   |-CXXDependentScopeMemberExpr 0x120142378 <col:16, col:21> '<dependent type>' contains-errors lvalue ->filled
|   |   | `-RecoveryExpr 0x120142358 <col:16> '<dependent type>' contains-errors lvalue
|   |   `-CXXDependentScopeMemberExpr 0x1201423e0 <col:31, col:36> '<dependent type>' contains-errors lvalue ->size
|   |     `-RecoveryExpr 0x1201423c0 <col:31> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x1201425f0 <line:9:9, col:42> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x120142470 <col:9> 'int ()' Function 0x120128f78 'assert' 'int ()'
|   | `-BinaryOperator 0x1201425d0 <col:16, col:41> 'int' contains-errors '||'
|   |   |-UnaryOperator 0x120142510 <col:16, col:22> '<dependent type>' contains-errors prefix '!' cannot overflow
|   |   | `-ImplicitCastExpr 0x1201424f8 <col:17, col:22> '<dependent type>' contains-errors <LValueToRValue>
|   |   |   `-CXXDependentScopeMemberExpr 0x1201424b0 <col:17, col:22> '<dependent type>' contains-errors lvalue ->buf
|   |   |     `-RecoveryExpr 0x120142490 <col:17> '<dependent type>' contains-errors lvalue
|   |   `-BinaryOperator 0x1201425b0 <col:29, col:41> 'int' contains-errors '>'
|   |     |-CXXDependentScopeMemberExpr 0x120142548 <col:29, col:34> '<dependent type>' contains-errors lvalue ->size
|   |     | `-RecoveryExpr 0x120142528 <col:29> '<dependent type>' contains-errors lvalue
|   |     `-IntegerLiteral 0x120142590 <col:41> 'int' 0
|   |-CallExpr 0x1201426e0 <line:10:9, col:28> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x120142618 <col:9> 'int ()' Function 0x120128f78 'assert' 'int ()'
|   | `-BinaryOperator 0x1201426c0 <col:16, col:27> 'int' contains-errors '>='
|   |   |-CXXDependentScopeMemberExpr 0x120142658 <col:16, col:21> '<dependent type>' contains-errors lvalue ->fd
|   |   | `-RecoveryExpr 0x120142638 <col:16> '<dependent type>' contains-errors lvalue
|   |   `-IntegerLiteral 0x1201426a0 <col:27> 'int' 0
|   |-ForStmt 0x1201453b0 <line:12:9, line:55:9>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | `-CompoundStmt 0x120145368 <line:12:18, line:55:9>
|   |   |-IfStmt 0x120143cf0 <line:13:17, line:20:17>
|   |   | |-CXXDependentScopeMemberExpr 0x120142728 <line:13:21, col:26> '<dependent type>' contains-errors lvalue ->buf
|   |   | | `-RecoveryExpr 0x120142708 <col:21> '<dependent type>' contains-errors lvalue
|   |   | `-CompoundStmt 0x120143cc8 <col:31, line:20:17>
|   |   |   |-BinaryOperator 0x120142a20 <line:14:25, col:69> 'unsigned long' contains-errors '='
|   |   |   | |-UnaryExprOrTypeTraitExpr 0x120142a00 <col:25, col:32> 'unsigned long' contains-errors sizeof
|   |   |   | | `-RecoveryExpr 0x1201429e0 <col:32> '<dependent type>' contains-errors lvalue
|   |   |   | `-CallExpr 0x120142990 <col:40, col:69> '<dependent type>' contains-errors
|   |   |   |   |-DeclRefExpr 0x1201428a0 <col:40> 'int ()' Function 0x1201427e8 'MAX' 'int ()'
|   |   |   |   |-CXXDependentScopeMemberExpr 0x1201428e0 <col:44, col:49> '<dependent type>' contains-errors lvalue ->scanned
|   |   |   |   | `-RecoveryExpr 0x1201428c0 <col:44> '<dependent type>' contains-errors lvalue
|   |   |   |   `-CXXDependentScopeMemberExpr 0x120142948 <col:58, col:63> '<dependent type>' contains-errors lvalue ->offset
|   |   |   |     `-RecoveryExpr 0x120142928 <col:58> '<dependent type>' contains-errors lvalue
|   |   |   |-BinaryOperator 0x120143be8 <line:16:25, line:17:55> 'char *' contains-errors '='
|   |   |   | |-DeclRefExpr 0x120142a40 <line:16:25> 'char *' contains-errors lvalue Var 0x120128e20 'c' 'char *'
|   |   |   | `-CallExpr 0x120143bb0 <col:29, line:17:55> '<dependent type>' contains-errors
|   |   |   |   |-DeclRefExpr 0x120143150 <line:16:29> 'void *(const void *, int, unsigned long)' Function 0x120142f00 'memchr' 'void *(const void *, int, unsigned long)'
|   |   |   |   |-BinaryOperator 0x120143b50 <col:36, col:47> '<dependent type>' contains-errors '+'
|   |   |   |   | |-CXXDependentScopeMemberExpr 0x120143190 <col:36, col:41> '<dependent type>' contains-errors lvalue ->buf
|   |   |   |   | | `-RecoveryExpr 0x120143170 <col:36> '<dependent type>' contains-errors lvalue
|   |   |   |   | `-RecoveryExpr 0x120143b30 <col:47> '<dependent type>' contains-errors lvalue
|   |   |   |   |-CharacterLiteral 0x120143a20 <col:54> 'int' 10
|   |   |   |   `-BinaryOperator 0x120143b90 <line:17:36, col:50> '<dependent type>' contains-errors '-'
|   |   |   |     |-CXXDependentScopeMemberExpr 0x120143a58 <col:36, col:41> '<dependent type>' contains-errors lvalue ->filled
|   |   |   |     | `-RecoveryExpr 0x120143a38 <col:36> '<dependent type>' contains-errors lvalue
|   |   |   |     `-RecoveryExpr 0x120143b70 <col:50> '<dependent type>' contains-errors lvalue
|   |   |   `-IfStmt 0x120143ca8 <line:18:25, line:19:33>
|   |   |     |-BinaryOperator 0x120143c80 <line:18:29, col:34> 'int' contains-errors '!='
|   |   |     | |-DeclRefExpr 0x120143c08 <col:29> 'char *' contains-errors lvalue Var 0x120128e20 'c' 'char *'
|   |   |     | `-RecoveryExpr 0x120143c60 <col:34> '<dependent type>' contains-errors lvalue
|   |   |     `-BreakStmt 0x120143ca0 <line:19:33>
|   |   |-BinaryOperator 0x120143e08 <line:22:17, col:37> '<dependent type>' contains-errors '='
|   |   | |-CXXDependentScopeMemberExpr 0x120143d58 <col:17, col:22> '<dependent type>' contains-errors lvalue ->scanned
|   |   | | `-RecoveryExpr 0x120143d30 <col:17> '<dependent type>' contains-errors lvalue
|   |   | |   `-DeclRefExpr 0x120143d10 <col:17> 'int *' lvalue ParmVar 0x120128b28 'imp' 'int *'
|   |   | `-CXXDependentScopeMemberExpr 0x120143dc0 <col:32, col:37> '<dependent type>' contains-errors lvalue ->filled
|   |   |   `-RecoveryExpr 0x120143da0 <col:32> '<dependent type>' contains-errors lvalue
|   |   |-IfStmt 0x1201442b0 <line:23:17, line:26:61>
|   |   | |-BinaryOperator 0x120143ee8 <line:23:21, col:37> 'int' contains-errors '>='
|   |   | | |-CXXDependentScopeMemberExpr 0x120143e48 <col:21, col:26> '<dependent type>' contains-errors lvalue ->scanned
|   |   | | | `-RecoveryExpr 0x120143e28 <col:21> '<dependent type>' contains-errors lvalue
|   |   | | `-RecoveryExpr 0x120143ec8 <col:37> '<dependent type>' contains-errors lvalue
|   |   | `-ReturnStmt 0x1201442a0 <line:24:25, line:26:61>
|   |   |   `-CallExpr 0x120144268 <line:24:32, line:26:61> '<dependent type>' contains-errors
|   |   |     |-DeclRefExpr 0x120143fe8 <line:24:32> 'int ()' Function 0x120143f30 'log_error_errno' 'int ()'
|   |   |     |-CallExpr 0x120144220 <col:48, col:69> '<dependent type>' contains-errors
|   |   |     | |-DeclRefExpr 0x1201440e8 <col:48> 'int ()' Function 0x120144030 'SYNTHETIC_ERRNO' 'int ()'
|   |   |     | `-RecoveryExpr 0x120144200 <col:64> '<dependent type>' contains-errors lvalue
|   |   |     |-StringLiteral 0x120144190 <line:25:48> 'char[4]' lvalue "STR"
|   |   |     `-RecoveryExpr 0x120144248 <line:26:48> '<dependent type>' contains-errors lvalue
|   |   |-IfStmt 0x120144410 <line:28:17, line:30:33>
|   |   | |-CXXDependentScopeMemberExpr 0x1201442f0 <line:28:21, col:26> '<dependent type>' contains-errors lvalue ->passive_fd
|   |   | | `-RecoveryExpr 0x1201442d0 <col:21> '<dependent type>' contains-errors lvalue
|   |   | `-ReturnStmt 0x120144400 <line:30:25, col:33>
|   |   |   `-UnaryOperator 0x1201443e8 <col:32, col:33> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |   |     `-ImplicitCastExpr 0x1201443d0 <col:33> '<dependent type>' contains-errors <LValueToRValue>
|   |   |       `-RecoveryExpr 0x120144380 <col:33> '<dependent type>' contains-errors lvalue
|   |   |-IfStmt 0x120144a48 <line:34:17, line:36:48>
|   |   | |-RecoveryExpr 0x1201448a8 <line:34:21, line:35:87> '_Bool' contains-errors
|   |   | `-ReturnStmt 0x120144a38 <line:36:33, col:48>
|   |   |   `-CallExpr 0x120144a18 <col:40, col:48> 'int'
|   |   |     `-ImplicitCastExpr 0x120144a00 <col:40> 'int (*)()' <FunctionToPointerDecay>
|   |   |       `-DeclRefExpr 0x1201449a8 <col:40> 'int ()' Function 0x1201448f0 'log_oom' 'int ()'
|   |   |-CallExpr 0x120144af0 <line:38:17, col:32> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x120144a68 <col:17> 'int ()' Function 0x120128f78 'assert' 'int ()'
|   |   | `-CXXDependentScopeMemberExpr 0x120144aa8 <col:24, col:29> '<dependent type>' contains-errors lvalue ->buf
|   |   |   `-RecoveryExpr 0x120144a88 <col:24> '<dependent type>' contains-errors lvalue
|   |   `-IfStmt 0x1201452a8 <line:45:17, line:52:32> has_else
|   |     |-RecoveryExpr 0x120145030 <line:45:21, col:25> '_Bool' contains-errors
|   |     |-CompoundStmt 0x120145208 <col:28, line:51:17>
|   |     `-IfStmt 0x120145288 <col:24, line:52:32>
|   |       |-RecoveryExpr 0x120145238 <line:51:28, col:33> '_Bool' contains-errors
|   |       `-ReturnStmt 0x120145278 <line:52:25, col:32>
|   |         `-IntegerLiteral 0x120145258 <col:32> 'int' 0
|   |-BinaryOperator 0x120145578 <line:57:9, col:33> 'char *' contains-errors '='
|   | |-UnaryOperator 0x120145560 <col:9, col:10> 'char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x120145548 <col:10> 'char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1201453e8 <col:10> 'char **' lvalue ParmVar 0x120128bd8 'line' 'char **'
|   | `-BinaryOperator 0x120145508 <col:17, col:33> '<dependent type>' contains-errors '+'
|   |   |-CXXDependentScopeMemberExpr 0x120145458 <col:17, col:22> '<dependent type>' contains-errors lvalue ->buf
|   |   | `-RecoveryExpr 0x120145438 <col:17> '<dependent type>' contains-errors lvalue
|   |   `-CXXDependentScopeMemberExpr 0x1201454c0 <col:28, col:33> '<dependent type>' contains-errors lvalue ->offset
|   |     `-RecoveryExpr 0x1201454a0 <col:28> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x120145838 <line:58:9, col:41> '<dependent type>' contains-errors '='
|   | |-UnaryOperator 0x1201457a8 <col:9, col:10> '<dependent type>' contains-errors prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x120145790 <col:10> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x120145598 <col:10> '<dependent type>' contains-errors lvalue
|   | `-BinaryOperator 0x120145818 <col:17, col:41> '<dependent type>' contains-errors '-'
|   |   |-BinaryOperator 0x1201457f8 <col:17, col:30> '<dependent type>' contains-errors '-'
|   |   | |-BinaryOperator 0x1201457d8 <col:17, col:21> 'char *' contains-errors '+'
|   |   | | |-ImplicitCastExpr 0x1201457c0 <col:17> 'char *' contains-errors <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1201455e8 <col:17> 'char *' contains-errors lvalue Var 0x120128e20 'c' 'char *'
|   |   | | `-IntegerLiteral 0x120145608 <col:21> 'int' 1
|   |   | `-CXXDependentScopeMemberExpr 0x120145680 <col:25, col:30> '<dependent type>' contains-errors lvalue ->buf
|   |   |   `-RecoveryExpr 0x120145660 <col:25> '<dependent type>' contains-errors lvalue
|   |   `-CXXDependentScopeMemberExpr 0x120145708 <col:36, col:41> '<dependent type>' contains-errors lvalue ->offset
|   |     `-RecoveryExpr 0x1201456e8 <col:36> '<dependent type>' contains-errors lvalue
|   |-CompoundAssignOperator 0x120145998 <line:59:9, col:25> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   | |-CXXDependentScopeMemberExpr 0x1201458a0 <col:9, col:14> '<dependent type>' contains-errors lvalue ->offset
|   | | `-RecoveryExpr 0x120145878 <col:9> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x120145858 <col:9> 'int *' lvalue ParmVar 0x120128b28 'imp' 'int *'
|   | `-UnaryOperator 0x120145980 <col:24, col:25> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |   `-ImplicitCastExpr 0x120145968 <col:25> '<dependent type>' contains-errors <LValueToRValue>
|   |     `-RecoveryExpr 0x1201458e8 <col:25> '<dependent type>' contains-errors lvalue
|   `-ReturnStmt 0x1201459e8 <line:61:9, col:16>
|     `-IntegerLiteral 0x1201459c8 <col:16> 'int' 1
`-FunctionDecl 0x120142f00 <line:16:29> col:29 implicit used memchr 'void *(const void *, int, unsigned long)' extern
  |-ParmVarDecl 0x120143000 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x120143068 <<invalid sloc>> <invalid sloc> 'int'
  |-ParmVarDecl 0x1201430d0 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x120142fa8 <<invalid sloc>> Implicit 892
