TranslationUnitDecl 0x120855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1208564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x120855bd0 '__int128'
|-TypedefDecl 0x120856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x120855bf0 'unsigned __int128'
|-TypedefDecl 0x120926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x120926000 'struct __NSConstantString_tag'
|   `-Record 0x120856580 '__NSConstantString_tag'
|-TypedefDecl 0x120926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x120855d90 '__SVInt8_t'
|-TypedefDecl 0x120926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x120855db0 '__SVInt16_t'
|-TypedefDecl 0x120926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x120855dd0 '__SVInt32_t'
|-TypedefDecl 0x1209263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x120855df0 '__SVInt64_t'
|-TypedefDecl 0x120926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x120855e10 '__SVUint8_t'
|-TypedefDecl 0x1209264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x120855e30 '__SVUint16_t'
|-TypedefDecl 0x120926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x120855e50 '__SVUint32_t'
|-TypedefDecl 0x120926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x120855e70 '__SVUint64_t'
|-TypedefDecl 0x1209265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x120855e90 '__SVFloat16_t'
|-TypedefDecl 0x120926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x120855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1209266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x120855ed0 '__SVFloat64_t'
|-TypedefDecl 0x120926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x120855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x120926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x120855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1209267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x120855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x120926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x120855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1209268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x120855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x120926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x120855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x120926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x120855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1209269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x120855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x120926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x120855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x120926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x120856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x120926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x120856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x120926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x120856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x120926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x120856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x120926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x120856090 '__clang_svint8x3_t'
|-TypedefDecl 0x120926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1208560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x120926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1208560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x120926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1208560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x120926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x120856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x120926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x120856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x120926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x120856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x120926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x120856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x120926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x120856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x120927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1208561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x120927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1208561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1209278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1208561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x120927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x120856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1209279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x120856230 '__clang_svint16x4_t'
|-TypedefDecl 0x120927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x120856250 '__clang_svint32x4_t'
|-TypedefDecl 0x120927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x120856270 '__clang_svint64x4_t'
|-TypedefDecl 0x120927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x120856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x120927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1208562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x120927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1208562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x120927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1208562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x120927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x120856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x120927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x120856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x120927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x120856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x120927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x120856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x120927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x120856390 '__SVBool_t'
|-TypedefDecl 0x120927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1208563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x120927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1208563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x120927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1208563f0 '__SVCount_t'
|-TypedefDecl 0x120927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x120927fb0 'char *'
|   `-BuiltinType 0x1208556b0 'char'
|-TypedefDecl 0x120928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x120927fb0 'char *'
|   `-BuiltinType 0x1208556b0 'char'
|-FunctionDecl 0x1209282e8 <dataset_diviso_filec/func17416_vuln.c:1:1, line:20:1> line:1:1 invalid file_printable 'int (char *, int, const char *)'
| |-ParmVarDecl 0x1209280d8 <col:16, col:22> col:22 used buf 'char *'
| |-ParmVarDecl 0x120928170 <col:27, col:34> col:34 invalid bufsiz 'int'
| |-ParmVarDecl 0x1209281f0 <col:42, col:54> col:54 used str 'const char *'
| `-CompoundStmt 0x120943f38 <line:2:1, line:20:1>
|   |-DeclStmt 0x1209284c0 <line:3:2, col:18>
|   | |-VarDecl 0x1209283c0 <col:2, col:8> col:8 used ptr 'char *'
|   | `-VarDecl 0x120928440 <col:2, col:14> col:14 used eptr 'char *'
|   |-DeclStmt 0x120928608 <line:4:2, col:53>
|   | `-VarDecl 0x120928528 <col:2, col:50> col:23 used s 'const unsigned char *' cinit
|   |   `-CStyleCastExpr 0x1209285e0 <col:27, col:50> 'const unsigned char *' <BitCast>
|   |     `-ImplicitCastExpr 0x1209285c8 <col:50> 'const char *' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0x120928590 <col:50> 'const char *' lvalue ParmVar 0x1209281f0 'str' 'const char *'
|   |-ForStmt 0x120943e00 <line:6:2, line:17:2>
|   | |-BinaryOperator 0x120928778 <line:6:7, col:40> 'char *' contains-errors ','
|   | | |-BinaryOperator 0x120928678 <col:7, col:13> 'char *' '='
|   | | | |-DeclRefExpr 0x120928620 <col:7> 'char *' lvalue Var 0x1209283c0 'ptr' 'char *'
|   | | | `-ImplicitCastExpr 0x120928660 <col:13> 'char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x120928640 <col:13> 'char *' lvalue ParmVar 0x1209280d8 'buf' 'char *'
|   | | `-BinaryOperator 0x120928758 <col:18, col:40> 'char *' contains-errors '='
|   | |   |-DeclRefExpr 0x120928698 <col:18> 'char *' lvalue Var 0x120928440 'eptr' 'char *'
|   | |   `-BinaryOperator 0x120928738 <col:25, col:40> '<dependent type>' contains-errors '-'
|   | |     |-BinaryOperator 0x1209286f8 <col:25, col:31> '<dependent type>' contains-errors '+'
|   | |     | |-DeclRefExpr 0x1209286b8 <col:25> 'char *' lvalue Var 0x1209283c0 'ptr' 'char *'
|   | |     | `-RecoveryExpr 0x1209286d8 <col:31> '<dependent type>' contains-errors lvalue
|   | |     `-IntegerLiteral 0x120928718 <col:40> 'int' 1
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1209428b8 <col:43, col:58> 'int' '&&'
|   | | |-BinaryOperator 0x120942818 <col:43, col:49> 'int' '<'
|   | | | |-ImplicitCastExpr 0x1209287d8 <col:43> 'char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x120928798 <col:43> 'char *' lvalue Var 0x1209283c0 'ptr' 'char *'
|   | | | `-ImplicitCastExpr 0x120942800 <col:49> 'char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1209287b8 <col:49> 'char *' lvalue Var 0x120928440 'eptr' 'char *'
|   | | `-ImplicitCastExpr 0x1209428a0 <col:57, col:58> 'int' <IntegralCast>
|   | |   `-ImplicitCastExpr 0x120942888 <col:57, col:58> 'unsigned char' <LValueToRValue>
|   | |     `-UnaryOperator 0x120942870 <col:57, col:58> 'const unsigned char' lvalue prefix '*' cannot overflow
|   | |       `-ImplicitCastExpr 0x120942858 <col:58> 'const unsigned char *' <LValueToRValue>
|   | |         `-DeclRefExpr 0x120942838 <col:58> 'const unsigned char *' lvalue Var 0x120928528 's' 'const unsigned char *'
|   | |-UnaryOperator 0x1209428f8 <col:61, col:62> 'const unsigned char *' postfix '++'
|   | | `-DeclRefExpr 0x1209428d8 <col:61> 'const unsigned char *' lvalue Var 0x120928528 's' 'const unsigned char *'
|   | `-CompoundStmt 0x1209437b8 <col:66, line:17:2>
|   |   |-IfStmt 0x120943158 <line:7:3, line:10:3>
|   |   | |-CallExpr 0x120942fe8 <line:7:7, col:17> 'int'
|   |   | | |-ImplicitCastExpr 0x120942fd0 <col:7> 'int (*)(int)' <FunctionToPointerDecay>
|   |   | | | `-DeclRefExpr 0x120942f30 <col:7> 'int (int)' Function 0x120942d70 'isprint' 'int (int)'
|   |   | | `-ImplicitCastExpr 0x120943028 <col:15, col:16> 'int' <IntegralCast>
|   |   | |   `-ImplicitCastExpr 0x120943010 <col:15, col:16> 'unsigned char' <LValueToRValue>
|   |   | |     `-UnaryOperator 0x120942f88 <col:15, col:16> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   | |       `-ImplicitCastExpr 0x120942f70 <col:16> 'const unsigned char *' <LValueToRValue>
|   |   | |         `-DeclRefExpr 0x120942f50 <col:16> 'const unsigned char *' lvalue Var 0x120928528 's' 'const unsigned char *'
|   |   | `-CompoundStmt 0x120943138 <col:20, line:10:3>
|   |   |   |-BinaryOperator 0x120943110 <line:8:4, col:14> 'char' '='
|   |   |   | |-UnaryOperator 0x120943078 <col:4, col:8> 'char' lvalue prefix '*' cannot overflow
|   |   |   | | `-UnaryOperator 0x120943060 <col:5, col:8> 'char *' postfix '++'
|   |   |   | |   `-DeclRefExpr 0x120943040 <col:5> 'char *' lvalue Var 0x1209283c0 'ptr' 'char *'
|   |   |   | `-ImplicitCastExpr 0x1209430f8 <col:13, col:14> 'char' <IntegralCast>
|   |   |   |   `-ImplicitCastExpr 0x1209430e0 <col:13, col:14> 'unsigned char' <LValueToRValue>
|   |   |   |     `-UnaryOperator 0x1209430c8 <col:13, col:14> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   |   |       `-ImplicitCastExpr 0x1209430b0 <col:14> 'const unsigned char *' <LValueToRValue>
|   |   |   |         `-DeclRefExpr 0x120943090 <col:14> 'const unsigned char *' lvalue Var 0x120928528 's' 'const unsigned char *'
|   |   |   `-ContinueStmt 0x120943130 <line:9:4>
|   |   |-IfStmt 0x120943250 <line:11:3, line:12:4>
|   |   | |-BinaryOperator 0x120943228 <line:11:7, col:21> 'int' '>='
|   |   | | |-ImplicitCastExpr 0x120943210 <col:7> 'char *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x120943178 <col:7> 'char *' lvalue Var 0x1209283c0 'ptr' 'char *'
|   |   | | `-BinaryOperator 0x1209431f0 <col:14, col:21> 'char *' '-'
|   |   | |   |-ImplicitCastExpr 0x1209431d8 <col:14> 'char *' <LValueToRValue>
|   |   | |   | `-DeclRefExpr 0x120943198 <col:14> 'char *' lvalue Var 0x120928440 'eptr' 'char *'
|   |   | |   `-IntegerLiteral 0x1209431b8 <col:21> 'int' 3
|   |   | `-BreakStmt 0x120943248 <line:12:4>
|   |   `-BinaryOperator 0x1209432f0 <line:13:3, col:12> 'char' '='
|   |     |-UnaryOperator 0x1209432a8 <col:3, col:7> 'char' lvalue prefix '*' cannot overflow
|   |     | `-UnaryOperator 0x120943290 <col:4, col:7> 'char *' postfix '++'
|   |     |   `-DeclRefExpr 0x120943270 <col:4> 'char *' lvalue Var 0x1209283c0 'ptr' 'char *'
|   |     `-ImplicitCastExpr 0x1209432d8 <col:12> 'char' <IntegralCast>
|   |       `-CharacterLiteral 0x1209432c0 <col:12> 'int' 92
|   |-BinaryOperator 0x120943eb8 <line:18:2, col:9> 'char' '='
|   | |-UnaryOperator 0x120943e70 <col:2, col:3> 'char' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x120943e58 <col:3> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x120943e38 <col:3> 'char *' lvalue Var 0x1209283c0 'ptr' 'char *'
|   | `-ImplicitCastExpr 0x120943ea0 <col:9> 'char' <IntegralCast>
|   |   `-CharacterLiteral 0x120943e88 <col:9> 'int' 0
|   `-ReturnStmt 0x120943f28 <line:19:2, col:9>
|     `-ImplicitCastExpr 0x120943f10 <col:9> 'int' <PointerToIntegral>
|       `-ImplicitCastExpr 0x120943ef8 <col:9> 'char *' <LValueToRValue>
|         `-DeclRefExpr 0x120943ed8 <col:9> 'char *' lvalue ParmVar 0x1209280d8 'buf' 'char *'
`-FunctionDecl 0x120942d70 <line:7:7> col:7 implicit used isprint 'int (int)' extern
  |-ParmVarDecl 0x120942e70 <<invalid sloc>> <invalid sloc> 'int'
  |-BuiltinAttr 0x120942e18 <<invalid sloc>> Implicit 927
  |-NoThrowAttr 0x120942ee0 <col:7> Implicit
  `-PureAttr 0x120942f08 <col:7> Implicit
