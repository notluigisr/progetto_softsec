TranslationUnitDecl 0x14a031008 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14a031eb8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14a0315d0 '__int128'
|-TypedefDecl 0x14a031f28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14a0315f0 'unsigned __int128'
|-TypedefDecl 0x15a0b5e30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15a0b5c00 'struct __NSConstantString_tag'
|   `-Record 0x14a031f80 '__NSConstantString_tag'
|-TypedefDecl 0x15a0b5e98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14a031790 '__SVInt8_t'
|-TypedefDecl 0x15a0b5f00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14a0317b0 '__SVInt16_t'
|-TypedefDecl 0x15a0b5f68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14a0317d0 '__SVInt32_t'
|-TypedefDecl 0x15a0b5fd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14a0317f0 '__SVInt64_t'
|-TypedefDecl 0x15a0b6038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14a031810 '__SVUint8_t'
|-TypedefDecl 0x15a0b60a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14a031830 '__SVUint16_t'
|-TypedefDecl 0x15a0b6108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14a031850 '__SVUint32_t'
|-TypedefDecl 0x15a0b6170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14a031870 '__SVUint64_t'
|-TypedefDecl 0x15a0b61d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14a031890 '__SVFloat16_t'
|-TypedefDecl 0x15a0b6240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14a0318b0 '__SVFloat32_t'
|-TypedefDecl 0x15a0b62a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14a0318d0 '__SVFloat64_t'
|-TypedefDecl 0x15a0b6310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14a0318f0 '__SVBfloat16_t'
|-TypedefDecl 0x15a0b6378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14a031910 '__clang_svint8x2_t'
|-TypedefDecl 0x15a0b63e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14a031930 '__clang_svint16x2_t'
|-TypedefDecl 0x15a0b6448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14a031950 '__clang_svint32x2_t'
|-TypedefDecl 0x15a0b64b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14a031970 '__clang_svint64x2_t'
|-TypedefDecl 0x15a0b6518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14a031990 '__clang_svuint8x2_t'
|-TypedefDecl 0x15a0b6580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14a0319b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15a0b65e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14a0319d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15a0b6650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14a0319f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15a0b66b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14a031a10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15a0b6720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14a031a30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15a0b6788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14a031a50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15a0b67f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14a031a70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15a0b6858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14a031a90 '__clang_svint8x3_t'
|-TypedefDecl 0x15a0b68c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14a031ab0 '__clang_svint16x3_t'
|-TypedefDecl 0x15a0b6928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14a031ad0 '__clang_svint32x3_t'
|-TypedefDecl 0x15a0b6990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14a031af0 '__clang_svint64x3_t'
|-TypedefDecl 0x15a0b69f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14a031b10 '__clang_svuint8x3_t'
|-TypedefDecl 0x15a0b6a60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14a031b30 '__clang_svuint16x3_t'
|-TypedefDecl 0x15a0b6ac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14a031b50 '__clang_svuint32x3_t'
|-TypedefDecl 0x15a0b6b30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14a031b70 '__clang_svuint64x3_t'
|-TypedefDecl 0x15a0b6b98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14a031b90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15a0b6c00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14a031bb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15a0b6c68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14a031bd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15a0b6cd0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14a031bf0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15a0b6d38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14a031c10 '__clang_svint8x4_t'
|-TypedefDecl 0x15a0b6da0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14a031c30 '__clang_svint16x4_t'
|-TypedefDecl 0x15a0b6e08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14a031c50 '__clang_svint32x4_t'
|-TypedefDecl 0x15a0b6e70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14a031c70 '__clang_svint64x4_t'
|-TypedefDecl 0x15a0b6ed8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14a031c90 '__clang_svuint8x4_t'
|-TypedefDecl 0x15a0b6f40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14a031cb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15a0b6fa8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14a031cd0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15a0b7010 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14a031cf0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15a0b7078 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14a031d10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15a0b70e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14a031d30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15a0b7148 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14a031d50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15a0b71b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14a031d70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15a0b7218 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14a031d90 '__SVBool_t'
|-TypedefDecl 0x15a0b7280 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14a031db0 '__clang_svboolx2_t'
|-TypedefDecl 0x15a0b72e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14a031dd0 '__clang_svboolx4_t'
|-TypedefDecl 0x15a0b7350 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14a031df0 '__SVCount_t'
|-TypedefDecl 0x15a0b73f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15a0b73b0 'char *'
|   `-BuiltinType 0x14a0310b0 'char'
|-TypedefDecl 0x15a0b7468 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15a0b73b0 'char *'
|   `-BuiltinType 0x14a0310b0 'char'
`-FunctionDecl 0x15a0b7758 <dataset_diviso_filec/func22899_vuln.c:1:1, line:20:1> line:1:5 invalid avpriv_ac3_parse_header 'int (int **, const int *, int)'
  |-ParmVarDecl 0x15a0b7560 <col:29, col:45> col:45 referenced invalid phdr 'int **'
  |-ParmVarDecl 0x15a0b75e0 <col:51, col:66> col:66 invalid buf 'const int *'
  |-ParmVarDecl 0x15a0b7660 <line:2:29, col:36> col:36 invalid size 'int'
  `-CompoundStmt 0x15a0c0d68 <line:3:1, line:20:1>
    |-DeclStmt 0x15a0b78d0 <line:6:5, col:12>
    | `-VarDecl 0x15a0b7868 <col:5, col:9> col:9 used err 'int'
    |-IfStmt 0x15a0c0570 <line:10:5, line:11:30>
    | |-UnaryOperator 0x15a0b7b88 <line:10:9, col:11> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-UnaryOperator 0x15a0b7b70 <col:10, col:11> '<dependent type>' contains-errors prefix '*' cannot overflow
    | |   `-ImplicitCastExpr 0x15a0b7b58 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    | |     `-RecoveryExpr 0x15a0b7b38 <col:11> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x15a0c0560 <line:11:9, col:30>
    |   `-CallExpr 0x15a0c0538 <col:16, col:30> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x15a0c04b8 <col:16> 'int ()' Function 0x15a0c0400 'AVERROR' 'int ()'
    |     `-RecoveryExpr 0x15a0c0518 <col:24> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x15a0c0628 <line:12:5, col:12> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x15a0c05b0 <col:5> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x15a0c0590 <col:5> 'int **' lvalue ParmVar 0x15a0b7560 'phdr' 'int **'
    | `-UnaryOperator 0x15a0c0610 <col:11, col:12> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   `-ImplicitCastExpr 0x15a0c05f8 <col:12> '<dependent type>' contains-errors <LValueToRValue>
    |     `-RecoveryExpr 0x15a0c05d8 <col:12> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x15a0c0828 <line:14:5, col:34> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x15a0c0728 <col:5> 'int ()' Function 0x15a0c0670 'init_get_bits8' 'int ()'
    | |-UnaryOperator 0x15a0c0810 <col:20, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-RecoveryExpr 0x15a0c07f0 <col:21> '<dependent type>' contains-errors lvalue
    | |-RecoveryExpr 0x15a0c0778 <col:25> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x15a0c0798 <col:30> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x15a0c0aa0 <line:15:5, col:39> 'int' contains-errors '='
    | |-DeclRefExpr 0x15a0c0860 <col:5> 'int' lvalue Var 0x15a0b7868 'err' 'int'
    | `-CallExpr 0x15a0c0a70 <col:11, col:39> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x15a0c0960 <col:11> 'int ()' Function 0x15a0c08a8 'ff_ac3_parse_header' 'int ()'
    |   |-UnaryOperator 0x15a0c0a38 <col:31, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-RecoveryExpr 0x15a0c0a18 <col:32> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x15a0c0a50 <col:36> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x15a0c0b80 <line:16:5, line:17:16>
    | |-BinaryOperator 0x15a0c0b18 <line:16:9, col:15> 'int' '<'
    | | |-ImplicitCastExpr 0x15a0c0b00 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x15a0c0ac0 <col:9> 'int' lvalue Var 0x15a0b7868 'err' 'int'
    | | `-IntegerLiteral 0x15a0c0ae0 <col:15> 'int' 0
    | `-ReturnStmt 0x15a0c0b70 <line:17:9, col:16>
    |   `-RecoveryExpr 0x15a0c0b50 <col:16> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x15a0c0d58 <line:19:5, col:30>
      `-CallExpr 0x15a0c0d30 <col:12, col:30> '<dependent type>' contains-errors
        |-DeclRefExpr 0x15a0c0c80 <col:12> 'int ()' Function 0x15a0c0bc8 'get_bits_count' 'int ()'
        `-UnaryOperator 0x15a0c0d18 <col:27, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow
          `-RecoveryExpr 0x15a0c0cf8 <col:28> '<dependent type>' contains-errors lvalue
