TranslationUnitDecl 0x120055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1200564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x120055bd0 '__int128'
|-TypedefDecl 0x120056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x120055bf0 'unsigned __int128'
|-TypedefDecl 0x10580be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x10580bc00 'struct __NSConstantString_tag'
|   `-Record 0x120056580 '__NSConstantString_tag'
|-TypedefDecl 0x10580be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x120055d90 '__SVInt8_t'
|-TypedefDecl 0x10580bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x120055db0 '__SVInt16_t'
|-TypedefDecl 0x10580bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x120055dd0 '__SVInt32_t'
|-TypedefDecl 0x10580bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x120055df0 '__SVInt64_t'
|-TypedefDecl 0x10580c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x120055e10 '__SVUint8_t'
|-TypedefDecl 0x10580c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x120055e30 '__SVUint16_t'
|-TypedefDecl 0x10580c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x120055e50 '__SVUint32_t'
|-TypedefDecl 0x10580c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x120055e70 '__SVUint64_t'
|-TypedefDecl 0x10580c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x120055e90 '__SVFloat16_t'
|-TypedefDecl 0x10580c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x120055eb0 '__SVFloat32_t'
|-TypedefDecl 0x10580c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x120055ed0 '__SVFloat64_t'
|-TypedefDecl 0x10580c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x120055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x10580c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x120055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x10580c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x120055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x10580c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x120055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x10580c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x120055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x10580c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x120055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x10580c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x120055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x10580c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x120055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x10580c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x120055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x10580c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x120056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x10580c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x120056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x10580c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x120056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x10580c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x120056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x10580c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x120056090 '__clang_svint8x3_t'
|-TypedefDecl 0x10580c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1200560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x10580c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1200560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x10580c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1200560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x10580c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x120056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x10580ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x120056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x10580cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x120056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x10580cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x120056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x10580cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x120056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x10580d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1200561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x10580d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1200561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x10580d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1200561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x10580d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x120056210 '__clang_svint8x4_t'
|-TypedefDecl 0x10580d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x120056230 '__clang_svint16x4_t'
|-TypedefDecl 0x10580d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x120056250 '__clang_svint32x4_t'
|-TypedefDecl 0x10580d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x120056270 '__clang_svint64x4_t'
|-TypedefDecl 0x10580d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x120056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x10580d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1200562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x10580d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1200562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x10580d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1200562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x10580d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x120056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x10580d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x120056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x10580d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x120056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x10580d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x120056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x10580da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x120056390 '__SVBool_t'
|-TypedefDecl 0x10580da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1200563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x10580dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1200563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x10580db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1200563f0 '__SVCount_t'
|-TypedefDecl 0x10580dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x10580dbb0 'char *'
|   `-BuiltinType 0x1200556b0 'char'
|-TypedefDecl 0x10580dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x10580dbb0 'char *'
|   `-BuiltinType 0x1200556b0 'char'
|-FunctionDecl 0x10580dda8 <dataset_diviso_filec/func3127_vuln.c:1:1, line:68:1> line:1:12 parse_status 'int (const char *)' static
| |-ParmVarDecl 0x10580dcd8 <col:25, col:37> col:37 used value 'const char *'
| `-CompoundStmt 0x1201234d0 <line:2:1, line:68:1>
|   |-DeclStmt 0x10580df40 <line:3:2, col:13>
|   | `-VarDecl 0x10580deb8 <col:2, col:12> col:6 used ret 'int' cinit
|   |   `-IntegerLiteral 0x10580df20 <col:12> 'int' 0
|   |-DeclStmt 0x10580dfd8 <line:4:2, col:9>
|   | `-VarDecl 0x10580df70 <col:2, col:8> col:8 used c 'char *'
|   |-BinaryOperator 0x105826970 <line:7:2, col:24> 'char *' '='
|   | |-DeclRefExpr 0x10580dff0 <col:2> 'char *' lvalue Var 0x10580df70 'c' 'char *'
|   | `-CallExpr 0x105826928 <col:6, col:24> 'char *'
|   |   |-ImplicitCastExpr 0x105826910 <col:6> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x105826870 <col:6> 'char *(const char *, int)' Function 0x105826690 'strchr' 'char *(const char *, int)'
|   |   |-ImplicitCastExpr 0x105826958 <col:13> 'const char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x105826890 <col:13> 'const char *' lvalue ParmVar 0x10580dcd8 'value' 'const char *'
|   |   `-CharacterLiteral 0x1058268b0 <col:20> 'int' 10
|   |-IfStmt 0x105826a28 <line:8:2, line:9:11>
|   | |-UnaryOperator 0x1058269c8 <line:8:6, col:7> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x1058269b0 <col:7> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x105826990 <col:7> 'char *' lvalue Var 0x10580df70 'c' 'char *'
|   | `-ReturnStmt 0x105826a18 <line:9:3, col:11>
|   |   `-UnaryOperator 0x105826a00 <col:10, col:11> 'int' prefix '-'
|   |     `-IntegerLiteral 0x1058269e0 <col:11> 'int' 1
|   |-UnaryOperator 0x105826a68 <line:10:2, col:3> 'char *' postfix '++'
|   | `-DeclRefExpr 0x105826a48 <col:2> 'char *' lvalue Var 0x10580df70 'c' 'char *'
|   |-WhileStmt 0x1201233e8 <line:12:2, line:63:2>
|   | |-BinaryOperator 0x105826b18 <line:12:9, col:15> 'int' '!='
|   | | |-ImplicitCastExpr 0x105826b00 <col:9, col:10> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x105826ae8 <col:9, col:10> 'char' <LValueToRValue>
|   | | |   `-UnaryOperator 0x105826ab8 <col:9, col:10> 'char' lvalue prefix '*' cannot overflow
|   | | |     `-ImplicitCastExpr 0x105826aa0 <col:10> 'char *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x105826a80 <col:10> 'char *' lvalue Var 0x10580df70 'c' 'char *'
|   | | `-CharacterLiteral 0x105826ad0 <col:15> 'int' 0
|   | `-CompoundStmt 0x120123340 <col:21, line:63:2>
|   |   |-DeclStmt 0x105826d60 <line:13:3, col:33>
|   |   | |-VarDecl 0x105826b50 <col:3, col:7> col:7 used port 'int'
|   |   | |-VarDecl 0x105826bd0 <col:3, col:13> col:13 used status 'int'
|   |   | |-VarDecl 0x105826c50 <col:3, col:21> col:21 used speed 'int'
|   |   | `-VarDecl 0x105826cd0 <col:3, col:28> col:28 used devid 'int'
|   |   |-DeclStmt 0x105826df8 <line:14:3, col:23>
|   |   | `-VarDecl 0x105826d90 <col:3, col:17> col:17 used socket 'unsigned long'
|   |   |-DeclStmt 0x105826eb8 <line:15:3, col:33>
|   |   | `-VarDecl 0x105826e50 <col:3, col:8> col:8 invalid lbusid 'char'
|   |   |-DeclStmt 0x1058270b8 <line:16:3, col:37>
|   |   | |-RecordDecl 0x105826ed0 <col:3, col:10> col:10 struct usbip_imported_device
|   |   | `-VarDecl 0x105827038 <col:3, col:33> col:33 used idev 'struct usbip_imported_device *'
|   |   |-DeclStmt 0x1058271d8 <line:17:3, col:14>
|   |   | `-VarDecl 0x105827170 <col:3, col:13> col:8 used hub 'char[3]'
|   |   |-BinaryOperator 0x1058289d0 <line:19:3, line:21:28> 'int' contains-errors '='
|   |   | |-DeclRefExpr 0x1058271f0 <line:19:3> 'int' lvalue Var 0x10580deb8 'ret' 'int'
|   |   | `-CallExpr 0x105828968 <col:9, line:21:28> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x1058274c0 <line:19:9> 'int (const char *restrict, const char *restrict, ...)' Function 0x1058272a8 'sscanf' 'int (const char *restrict, const char *restrict, ...)'
|   |   |   |-DeclRefExpr 0x1058274e0 <col:16> 'char *' lvalue Var 0x10580df70 'c' 'char *'
|   |   |   |-StringLiteral 0x105827540 <col:19> 'char[4]' lvalue "STR"
|   |   |   |-DeclRefExpr 0x105827560 <line:20:5> 'char[3]' lvalue Var 0x105827170 'hub' 'char[3]'
|   |   |   |-UnaryOperator 0x1058275d0 <col:10, col:11> 'int *' prefix '&' cannot overflow
|   |   |   | `-DeclRefExpr 0x105827580 <col:11> 'int' lvalue Var 0x105826b50 'port' 'int'
|   |   |   |-UnaryOperator 0x105828820 <col:17, col:18> 'int *' prefix '&' cannot overflow
|   |   |   | `-DeclRefExpr 0x105828800 <col:18> 'int' lvalue Var 0x105826bd0 'status' 'int'
|   |   |   |-UnaryOperator 0x105828858 <col:26, col:27> 'int *' prefix '&' cannot overflow
|   |   |   | `-DeclRefExpr 0x105828838 <col:27> 'int' lvalue Var 0x105826c50 'speed' 'int'
|   |   |   |-UnaryOperator 0x105828890 <line:21:5, col:6> 'int *' prefix '&' cannot overflow
|   |   |   | `-DeclRefExpr 0x105828870 <col:6> 'int' lvalue Var 0x105826cd0 'devid' 'int'
|   |   |   |-UnaryOperator 0x105828900 <col:13, col:14> 'unsigned long *' prefix '&' cannot overflow
|   |   |   | `-DeclRefExpr 0x1058288a8 <col:14> 'unsigned long' lvalue Var 0x105826d90 'socket' 'unsigned long'
|   |   |   `-RecoveryExpr 0x105828918 <col:22> '<dependent type>' contains-errors lvalue
|   |   |-IfStmt 0x105828de0 <line:23:3, line:26:3>
|   |   | |-BinaryOperator 0x105828a48 <line:23:7, col:13> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x105828a30 <col:7> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1058289f0 <col:7> 'int' lvalue Var 0x10580deb8 'ret' 'int'
|   |   | | `-IntegerLiteral 0x105828a10 <col:13> 'int' 5
|   |   | `-CompoundStmt 0x105828dc0 <col:16, line:26:3>
|   |   |   |-CallExpr 0x105828c28 <line:24:4, col:18> 'int'
|   |   |   | |-ImplicitCastExpr 0x105828c10 <col:4> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x105828b80 <col:4> 'int ()' Function 0x105828ac8 'dbg' 'int ()'
|   |   |   | |-ImplicitCastExpr 0x105828c58 <col:8> 'char *' <ArrayToPointerDecay>
|   |   |   | | `-StringLiteral 0x105828ba0 <col:8> 'char[4]' lvalue "STR"
|   |   |   | `-ImplicitCastExpr 0x105828c70 <col:15> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x105828bc0 <col:15> 'int' lvalue Var 0x10580deb8 'ret' 'int'
|   |   |   `-CallExpr 0x105828da0 <line:25:4, col:8> 'int'
|   |   |     `-ImplicitCastExpr 0x105828d88 <col:4> 'int (*)()' <FunctionToPointerDecay>
|   |   |       `-DeclRefExpr 0x105828d68 <col:4> 'int ()' Function 0x105828cb0 'BUG' 'int ()'
|   |   |-CallExpr 0x105828ef8 <line:28:3, line:29:36> 'int'
|   |   | |-ImplicitCastExpr 0x105828ee0 <line:28:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x105828e00 <col:3> 'int ()' Function 0x105828ac8 'dbg' 'int ()'
|   |   | |-ImplicitCastExpr 0x105828f48 <col:7> 'char *' <ArrayToPointerDecay>
|   |   | | `-StringLiteral 0x105828e20 <col:7> 'char[4]' lvalue "STR"
|   |   | |-ImplicitCastExpr 0x105828f60 <line:29:5> 'char *' <ArrayToPointerDecay>
|   |   | | `-DeclRefExpr 0x105828e40 <col:5> 'char[3]' lvalue Var 0x105827170 'hub' 'char[3]'
|   |   | |-ImplicitCastExpr 0x105828f78 <col:10> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x105828e60 <col:10> 'int' lvalue Var 0x105826b50 'port' 'int'
|   |   | |-ImplicitCastExpr 0x105828f90 <col:16> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x105828e80 <col:16> 'int' lvalue Var 0x105826bd0 'status' 'int'
|   |   | |-ImplicitCastExpr 0x105828fa8 <col:24> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x105828ea0 <col:24> 'int' lvalue Var 0x105826c50 'speed' 'int'
|   |   | `-ImplicitCastExpr 0x105828fc0 <col:31> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x105828ec0 <col:31> 'int' lvalue Var 0x105826cd0 'devid' 'int'
|   |   |-CallExpr 0x105829058 <line:30:3, col:28> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x105828fd8 <col:3> 'int ()' Function 0x105828ac8 'dbg' 'int ()'
|   |   | |-StringLiteral 0x105828ff8 <col:7> 'char[4]' lvalue "STR"
|   |   | |-DeclRefExpr 0x105829018 <col:14> 'unsigned long' lvalue Var 0x105826d90 'socket' 'unsigned long'
|   |   | `-RecoveryExpr 0x105829038 <col:22> '<dependent type>' contains-errors lvalue
|   |   |-IfStmt 0x1201228e8 <line:36:3, line:39:16> has_else
|   |   | |-BinaryOperator 0x120122718 <line:36:7, col:33> 'int' '=='
|   |   | | |-CallExpr 0x120122648 <col:7, col:28> 'int'
|   |   | | | |-ImplicitCastExpr 0x120122630 <col:7> 'int (*)(const char *, const char *, unsigned long)' <FunctionToPointerDecay>
|   |   | | | | `-DeclRefExpr 0x105829738 <col:7> 'int (const char *, const char *, unsigned long)' Function 0x1058294e8 'strncmp' 'int (const char *, const char *, unsigned long)'
|   |   | | | |-ImplicitCastExpr 0x120122698 <col:15> 'const char *' <NoOp>
|   |   | | | | `-ImplicitCastExpr 0x120122680 <col:15> 'char *' <ArrayToPointerDecay>
|   |   | | | |   `-StringLiteral 0x105829758 <col:15> 'char[4]' lvalue "STR"
|   |   | | | |-ImplicitCastExpr 0x1201226c8 <col:22> 'const char *' <NoOp>
|   |   | | | | `-ImplicitCastExpr 0x1201226b0 <col:22> 'char *' <ArrayToPointerDecay>
|   |   | | | |   `-DeclRefExpr 0x105829778 <col:22> 'char[3]' lvalue Var 0x105827170 'hub' 'char[3]'
|   |   | | | `-ImplicitCastExpr 0x1201226e0 <col:27> 'unsigned long' <IntegralCast>
|   |   | | |   `-IntegerLiteral 0x105829798 <col:27> 'int' 2
|   |   | | `-IntegerLiteral 0x1201226f8 <col:33> 'int' 0
|   |   | |-BinaryOperator 0x1201227f0 <line:37:4, col:16> '<dependent type>' contains-errors '='
|   |   | | |-RecoveryExpr 0x120122770 <col:4, col:10> '<dependent type>' contains-errors lvalue
|   |   | | | `-DeclRefExpr 0x120122738 <col:4> 'struct usbip_imported_device *' lvalue Var 0x105827038 'idev' 'struct usbip_imported_device *'
|   |   | | `-RecoveryExpr 0x1201227d0 <col:16> '<dependent type>' contains-errors lvalue
|   |   | `-BinaryOperator 0x1201228c8 <line:39:4, col:16> '<dependent type>' contains-errors '='
|   |   |   |-RecoveryExpr 0x120122848 <col:4, col:10> '<dependent type>' contains-errors lvalue
|   |   |   | `-DeclRefExpr 0x120122810 <col:4> 'struct usbip_imported_device *' lvalue Var 0x105827038 'idev' 'struct usbip_imported_device *'
|   |   |   `-RecoveryExpr 0x1201228a8 <col:16> '<dependent type>' contains-errors lvalue
|   |   |-BinaryOperator 0x120122998 <line:41:3, col:16> '<dependent type>' contains-errors '='
|   |   | |-RecoveryExpr 0x120122950 <col:3, col:9> '<dependent type>' contains-errors lvalue
|   |   | | `-DeclRefExpr 0x120122918 <col:3> 'struct usbip_imported_device *' lvalue Var 0x105827038 'idev' 'struct usbip_imported_device *'
|   |   | `-DeclRefExpr 0x120122978 <col:16> 'int' lvalue Var 0x105826b50 'port' 'int'
|   |   |-BinaryOperator 0x120122a38 <line:42:3, col:18> '<dependent type>' contains-errors '='
|   |   | |-RecoveryExpr 0x1201229f0 <col:3, col:9> '<dependent type>' contains-errors lvalue
|   |   | | `-DeclRefExpr 0x1201229b8 <col:3> 'struct usbip_imported_device *' lvalue Var 0x105827038 'idev' 'struct usbip_imported_device *'
|   |   | `-DeclRefExpr 0x120122a18 <col:18> 'int' lvalue Var 0x105826bd0 'status' 'int'
|   |   |-BinaryOperator 0x120122ad8 <line:44:3, col:17> '<dependent type>' contains-errors '='
|   |   | |-RecoveryExpr 0x120122a90 <col:3, col:9> '<dependent type>' contains-errors lvalue
|   |   | | `-DeclRefExpr 0x120122a58 <col:3> 'struct usbip_imported_device *' lvalue Var 0x105827038 'idev' 'struct usbip_imported_device *'
|   |   | `-DeclRefExpr 0x120122ab8 <col:17> 'int' lvalue Var 0x105826cd0 'devid' 'int'
|   |   |-BinaryOperator 0x120122bf0 <line:46:3, col:30> '<dependent type>' contains-errors '='
|   |   | |-RecoveryExpr 0x120122b30 <col:3, col:9> '<dependent type>' contains-errors lvalue
|   |   | | `-DeclRefExpr 0x120122af8 <col:3> 'struct usbip_imported_device *' lvalue Var 0x105827038 'idev' 'struct usbip_imported_device *'
|   |   | `-ParenExpr 0x120122bd0 <col:18, col:30> 'int'
|   |   |   `-BinaryOperator 0x120122bb0 <col:19, col:28> 'int' '>>'
|   |   |     |-ImplicitCastExpr 0x120122b98 <col:19> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x120122b58 <col:19> 'int' lvalue Var 0x105826cd0 'devid' 'int'
|   |   |     `-IntegerLiteral 0x120122b78 <col:28> 'int' 16
|   |   |-BinaryOperator 0x120122d08 <line:47:3, col:37> '<dependent type>' contains-errors '='
|   |   | |-RecoveryExpr 0x120122c48 <col:3, col:9> '<dependent type>' contains-errors lvalue
|   |   | | `-DeclRefExpr 0x120122c10 <col:3> 'struct usbip_imported_device *' lvalue Var 0x105827038 'idev' 'struct usbip_imported_device *'
|   |   | `-ParenExpr 0x120122ce8 <col:18, col:37> 'int'
|   |   |   `-BinaryOperator 0x120122cc8 <col:19, col:27> 'int' '&'
|   |   |     |-ImplicitCastExpr 0x120122cb0 <col:19> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x120122c70 <col:19> 'int' lvalue Var 0x105826cd0 'devid' 'int'
|   |   |     `-IntegerLiteral 0x120122c90 <col:27> 'int' 65535
|   |   |-IfStmt 0x120123148 <line:49:3, line:56:3>
|   |   | |-RecoveryExpr 0x120122de8 <line:49:7, line:50:26> '_Bool' contains-errors
|   |   | `-CompoundStmt 0x120123128 <col:47, line:56:3>
|   |   |   |-BinaryOperator 0x120122f98 <line:51:4, col:44> 'struct usbip_imported_device *' contains-errors '='
|   |   |   | |-DeclRefExpr 0x120122e08 <col:4> 'struct usbip_imported_device *' lvalue Var 0x105827038 'idev' 'struct usbip_imported_device *'
|   |   |   | `-CallExpr 0x120122f68 <col:11, col:44> '<dependent type>' contains-errors
|   |   |   |   |-DeclRefExpr 0x120122f08 <col:11> 'int ()' Function 0x120122e50 'imported_device_init' 'int ()'
|   |   |   |   |-DeclRefExpr 0x120122f28 <col:32> 'struct usbip_imported_device *' lvalue Var 0x105827038 'idev' 'struct usbip_imported_device *'
|   |   |   |   `-RecoveryExpr 0x120122f48 <col:38> '<dependent type>' contains-errors lvalue
|   |   |   `-IfStmt 0x120123108 <line:52:4, line:55:4>
|   |   |     |-UnaryOperator 0x120122ff0 <line:52:8, col:9> 'int' prefix '!' cannot overflow
|   |   |     | `-ImplicitCastExpr 0x120122fd8 <col:9> 'struct usbip_imported_device *' <LValueToRValue>
|   |   |     |   `-DeclRefExpr 0x120122fb8 <col:9> 'struct usbip_imported_device *' lvalue Var 0x105827038 'idev' 'struct usbip_imported_device *'
|   |   |     `-CompoundStmt 0x1201230e8 <col:15, line:55:4>
|   |   |       |-CallExpr 0x120123060 <line:53:5, col:14> 'int'
|   |   |       | |-ImplicitCastExpr 0x120123048 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   |   |       | | `-DeclRefExpr 0x120123008 <col:5> 'int ()' Function 0x105828ac8 'dbg' 'int ()'
|   |   |       | `-ImplicitCastExpr 0x120123088 <col:9> 'char *' <ArrayToPointerDecay>
|   |   |       |   `-StringLiteral 0x120123028 <col:9> 'char[4]' lvalue "STR"
|   |   |       `-ReturnStmt 0x1201230d8 <line:54:5, col:13>
|   |   |         `-UnaryOperator 0x1201230c0 <col:12, col:13> 'int' prefix '-'
|   |   |           `-IntegerLiteral 0x1201230a0 <col:13> 'int' 1
|   |   |-BinaryOperator 0x120123270 <line:59:3, col:21> 'char *' '='
|   |   | |-DeclRefExpr 0x120123168 <col:3> 'char *' lvalue Var 0x10580df70 'c' 'char *'
|   |   | `-CallExpr 0x120123210 <col:7, col:21> 'char *'
|   |   |   |-ImplicitCastExpr 0x1201231f8 <col:7> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x120123188 <col:7> 'char *(const char *, int)' Function 0x105826690 'strchr' 'char *(const char *, int)'
|   |   |   |-ImplicitCastExpr 0x120123258 <col:14> 'const char *' <NoOp>
|   |   |   | `-ImplicitCastExpr 0x120123240 <col:14> 'char *' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x1201231a8 <col:14> 'char *' lvalue Var 0x10580df70 'c' 'char *'
|   |   |   `-CharacterLiteral 0x1201231c8 <col:17> 'int' 10
|   |   |-IfStmt 0x1201232e8 <line:60:3, line:61:4>
|   |   | |-UnaryOperator 0x1201232c8 <line:60:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | `-ImplicitCastExpr 0x1201232b0 <col:8> 'char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x120123290 <col:8> 'char *' lvalue Var 0x10580df70 'c' 'char *'
|   |   | `-BreakStmt 0x1201232e0 <line:61:4>
|   |   `-UnaryOperator 0x120123328 <line:62:3, col:4> 'char *' postfix '++'
|   |     `-DeclRefExpr 0x120123308 <col:3> 'char *' lvalue Var 0x10580df70 'c' 'char *'
|   |-CallExpr 0x120123460 <line:65:2, col:11> 'int'
|   | |-ImplicitCastExpr 0x120123448 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x120123408 <col:2> 'int ()' Function 0x105828ac8 'dbg' 'int ()'
|   | `-ImplicitCastExpr 0x120123488 <col:6> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x120123428 <col:6> 'char[4]' lvalue "STR"
|   `-ReturnStmt 0x1201234c0 <line:67:2, col:9>
|     `-IntegerLiteral 0x1201234a0 <col:9> 'int' 0
|-FunctionDecl 0x105826690 <line:7:6> col:6 implicit used strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x105826790 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1058267f8 <<invalid sloc>> <invalid sloc> 'int'
| `-BuiltinAttr 0x105826738 <<invalid sloc>> Implicit 893
|-FunctionDecl 0x1058272a8 <line:19:9> col:9 implicit used sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x1058273a8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x105827410 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-BuiltinAttr 0x105827350 <<invalid sloc>> Implicit 913
| `-FormatAttr 0x105827488 <col:9> Implicit scanf 2 3
|-FunctionDecl 0x105829178 <line:34:3> col:3 implicit used memset 'void *(void *, int, unsigned long)' extern
| |-ParmVarDecl 0x105829278 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1058292e0 <<invalid sloc>> <invalid sloc> 'int'
| |-ParmVarDecl 0x105829348 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x105829220 <<invalid sloc>> Implicit 900
`-FunctionDecl 0x1058294e8 <line:36:7> col:7 implicit used strncmp 'int (const char *, const char *, unsigned long)' extern
  |-ParmVarDecl 0x1058295e8 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x105829650 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x1058296b8 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x105829590 <<invalid sloc>> Implicit 888
