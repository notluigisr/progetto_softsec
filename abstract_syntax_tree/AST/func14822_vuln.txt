TranslationUnitDecl 0x125033408 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1250342b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1250339d0 '__int128'
|-TypedefDecl 0x125034328 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1250339f0 'unsigned __int128'
|-TypedefDecl 0x12600be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12600bc00 'struct __NSConstantString_tag'
|   `-Record 0x125034380 '__NSConstantString_tag'
|-TypedefDecl 0x12600be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x125033b90 '__SVInt8_t'
|-TypedefDecl 0x12600bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x125033bb0 '__SVInt16_t'
|-TypedefDecl 0x12600bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x125033bd0 '__SVInt32_t'
|-TypedefDecl 0x12600bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x125033bf0 '__SVInt64_t'
|-TypedefDecl 0x12600c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x125033c10 '__SVUint8_t'
|-TypedefDecl 0x12600c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x125033c30 '__SVUint16_t'
|-TypedefDecl 0x12600c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x125033c50 '__SVUint32_t'
|-TypedefDecl 0x12600c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x125033c70 '__SVUint64_t'
|-TypedefDecl 0x12600c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x125033c90 '__SVFloat16_t'
|-TypedefDecl 0x12600c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x125033cb0 '__SVFloat32_t'
|-TypedefDecl 0x12600c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x125033cd0 '__SVFloat64_t'
|-TypedefDecl 0x12600c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x125033cf0 '__SVBfloat16_t'
|-TypedefDecl 0x12600c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x125033d10 '__clang_svint8x2_t'
|-TypedefDecl 0x12600c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x125033d30 '__clang_svint16x2_t'
|-TypedefDecl 0x12600c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x125033d50 '__clang_svint32x2_t'
|-TypedefDecl 0x12600c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x125033d70 '__clang_svint64x2_t'
|-TypedefDecl 0x12600c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x125033d90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12600c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x125033db0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12600c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x125033dd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12600c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x125033df0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12600c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x125033e10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12600c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x125033e30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12600c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x125033e50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12600c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x125033e70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12600c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x125033e90 '__clang_svint8x3_t'
|-TypedefDecl 0x12600c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x125033eb0 '__clang_svint16x3_t'
|-TypedefDecl 0x12600c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x125033ed0 '__clang_svint32x3_t'
|-TypedefDecl 0x12600c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x125033ef0 '__clang_svint64x3_t'
|-TypedefDecl 0x12600c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x125033f10 '__clang_svuint8x3_t'
|-TypedefDecl 0x12600ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x125033f30 '__clang_svuint16x3_t'
|-TypedefDecl 0x12600cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x125033f50 '__clang_svuint32x3_t'
|-TypedefDecl 0x12600cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x125033f70 '__clang_svuint64x3_t'
|-TypedefDecl 0x12600cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x125033f90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12600d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x125033fb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12600d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x125033fd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12600d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x125033ff0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12600d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x125034010 '__clang_svint8x4_t'
|-TypedefDecl 0x12600d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x125034030 '__clang_svint16x4_t'
|-TypedefDecl 0x12600d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x125034050 '__clang_svint32x4_t'
|-TypedefDecl 0x12600d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x125034070 '__clang_svint64x4_t'
|-TypedefDecl 0x12600d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x125034090 '__clang_svuint8x4_t'
|-TypedefDecl 0x12600d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1250340b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12600d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1250340d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12600d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1250340f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12600d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x125034110 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12600d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x125034130 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12600d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x125034150 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12600d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x125034170 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12600da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x125034190 '__SVBool_t'
|-TypedefDecl 0x12600da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1250341b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12600dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1250341d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12600db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1250341f0 '__SVCount_t'
|-TypedefDecl 0x12600dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12600dbb0 'char *'
|   `-BuiltinType 0x1250334b0 'char'
|-TypedefDecl 0x12600dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12600dbb0 'char *'
|   `-BuiltinType 0x1250334b0 'char'
`-FunctionDecl 0x1251008a8 <dataset_diviso_filec/func14822_vuln.c:1:1, line:54:1> line:1:19 check_entry_size_and_hooks 'int (struct arpt_entry *, struct xt_table_info *, const unsigned char *, const unsigned char *, const unsigned int *, const unsigned int *, unsigned int)' static inline
  |-ParmVarDecl 0x12600e248 <col:46, col:65> col:65 used e 'struct arpt_entry *'
  |-ParmVarDecl 0x125100428 <line:2:11, col:33> col:33 used newinfo 'struct xt_table_info *'
  |-ParmVarDecl 0x1251004d8 <line:3:11, col:32> col:32 used base 'const unsigned char *'
  |-ParmVarDecl 0x125100558 <line:4:11, col:32> col:32 used limit 'const unsigned char *'
  |-ParmVarDecl 0x125100608 <line:5:11, col:31> col:31 used hook_entries 'const unsigned int *'
  |-ParmVarDecl 0x125100688 <line:6:11, col:31> col:31 used underflows 'const unsigned int *'
  |-ParmVarDecl 0x125100708 <line:7:11, col:24> col:24 used valid_hooks 'unsigned int'
  `-CompoundStmt 0x126027eb8 <line:8:1, line:54:1>
    |-DeclStmt 0x125100a50 <line:9:2, col:16>
    | `-VarDecl 0x1251009e8 <col:2, col:15> col:15 used h 'unsigned int'
    |-DeclStmt 0x125100ae8 <line:10:2, col:9>
    | `-VarDecl 0x125100a80 <col:2, col:6> col:6 used err 'int'
    |-IfStmt 0x125101170 <line:12:2, line:17:2>
    | |-RecoveryExpr 0x125100e10 <line:12:6, line:14:44> '_Bool' contains-errors
    | `-CompoundStmt 0x125101150 <col:51, line:17:2>
    |   |-CallExpr 0x125101048 <line:15:3, col:20> 'int'
    |   | |-ImplicitCastExpr 0x125101030 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x125100f60 <col:3> 'int ()' Function 0x125100ea8 'duprintf' 'int ()'
    |   | |-ImplicitCastExpr 0x125101078 <col:12> 'char *' <ArrayToPointerDecay>
    |   | | `-StringLiteral 0x125100fc0 <col:12> 'char[4]' lvalue "STR"
    |   | `-ImplicitCastExpr 0x125101090 <col:19> 'struct arpt_entry *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x125100fe0 <col:19> 'struct arpt_entry *' lvalue ParmVar 0x12600e248 'e' 'struct arpt_entry *'
    |   `-ReturnStmt 0x125101140 <line:16:3, col:11>
    |     `-UnaryOperator 0x125101128 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       `-ImplicitCastExpr 0x125101110 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |         `-RecoveryExpr 0x1251010f0 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x125103100 <line:19:2, line:24:2>
    | |-RecoveryExpr 0x125101308 <line:19:6, line:20:65> '_Bool' contains-errors
    | `-CompoundStmt 0x1251030e0 <col:68, line:24:2>
    |   |-CallExpr 0x125103000 <line:21:3, line:22:22> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x125101328 <line:21:3> 'int ()' Function 0x125100ea8 'duprintf' 'int ()'
    |   | |-StringLiteral 0x125101348 <col:12> 'char[4]' lvalue "STR"
    |   | |-DeclRefExpr 0x125101368 <line:22:5> 'struct arpt_entry *' lvalue ParmVar 0x12600e248 'e' 'struct arpt_entry *'
    |   | `-RecoveryExpr 0x1251013c0 <col:8, col:11> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x125101388 <col:8> 'struct arpt_entry *' lvalue ParmVar 0x12600e248 'e' 'struct arpt_entry *'
    |   `-ReturnStmt 0x1251030d0 <line:23:3, col:11>
    |     `-UnaryOperator 0x1251030b8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       `-ImplicitCastExpr 0x1251030a0 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |         `-RecoveryExpr 0x125103080 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x125103380 <line:26:2, line:27:11>
    | |-UnaryOperator 0x1251032c0 <line:26:6, col:29> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-CallExpr 0x125103298 <col:7, col:29> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x125103200 <col:7> 'int ()' Function 0x125103148 'arp_checkentry' 'int ()'
    | |   `-UnaryOperator 0x125103280 <col:22, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |     `-RecoveryExpr 0x125103258 <col:23, col:26> '<dependent type>' contains-errors lvalue
    | |       `-DeclRefExpr 0x125103220 <col:23> 'struct arpt_entry *' lvalue ParmVar 0x12600e248 'e' 'struct arpt_entry *'
    | `-ReturnStmt 0x125103370 <line:27:3, col:11>
    |   `-UnaryOperator 0x125103358 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x125103340 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x125103320 <col:11> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x1251035d8 <line:29:2, col:66> 'int' contains-errors '='
    | |-DeclRefExpr 0x1251033a0 <col:2> 'int' lvalue Var 0x125100a80 'err' 'int'
    | `-CallExpr 0x1251035a0 <col:8, col:66> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1251034a0 <col:8> 'int ()' Function 0x1251033e8 'xt_check_entry_offsets' 'int ()'
    |   |-DeclRefExpr 0x1251034c0 <col:31> 'struct arpt_entry *' lvalue ParmVar 0x12600e248 'e' 'struct arpt_entry *'
    |   |-RecoveryExpr 0x125103518 <col:34, col:37> '<dependent type>' contains-errors lvalue
    |   | `-DeclRefExpr 0x1251034e0 <col:34> 'struct arpt_entry *' lvalue ParmVar 0x12600e248 'e' 'struct arpt_entry *'
    |   `-RecoveryExpr 0x125103578 <col:52, col:55> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x125103540 <col:52> 'struct arpt_entry *' lvalue ParmVar 0x12600e248 'e' 'struct arpt_entry *'
    |-IfStmt 0x125103678 <line:30:2, line:31:10>
    | |-ImplicitCastExpr 0x125103618 <line:30:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x1251035f8 <col:6> 'int' lvalue Var 0x125100a80 'err' 'int'
    | `-ReturnStmt 0x125103668 <line:31:3, col:10>
    |   `-ImplicitCastExpr 0x125103650 <col:10> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x125103630 <col:10> 'int' lvalue Var 0x125100a80 'err' 'int'
    |-ForStmt 0x126027bc8 <line:34:2, line:48:2>
    | |-BinaryOperator 0x1251036f0 <line:34:7, col:11> 'unsigned int' '='
    | | |-DeclRefExpr 0x125103698 <col:7> 'unsigned int' lvalue Var 0x1251009e8 'h' 'unsigned int'
    | | `-ImplicitCastExpr 0x1251036d8 <col:11> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x1251036b8 <col:11> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x125103788 <col:14, col:18> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x125103710 <col:14> 'unsigned int' lvalue Var 0x1251009e8 'h' 'unsigned int'
    | | `-RecoveryExpr 0x125103768 <col:18> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x1251037c8 <col:35, col:36> 'unsigned int' postfix '++'
    | | `-DeclRefExpr 0x1251037a8 <col:35> 'unsigned int' lvalue Var 0x1251009e8 'h' 'unsigned int'
    | `-CompoundStmt 0x126027ba0 <col:40, line:48:2>
    |   |-IfStmt 0x125103928 <line:35:3, line:36:4>
    |   | |-UnaryOperator 0x125103908 <line:35:7, col:31> 'int' prefix '!' cannot overflow
    |   | | `-ParenExpr 0x1251038e8 <col:8, col:31> 'unsigned int'
    |   | |   `-BinaryOperator 0x1251038c8 <col:9, col:30> 'unsigned int' '&'
    |   | |     |-ImplicitCastExpr 0x125103898 <col:9> 'unsigned int' <LValueToRValue>
    |   | |     | `-DeclRefExpr 0x1251037e0 <col:9> 'unsigned int' lvalue ParmVar 0x125100708 'valid_hooks' 'unsigned int'
    |   | |     `-ImplicitCastExpr 0x1251038b0 <col:23, col:30> 'unsigned int' <IntegralCast>
    |   | |       `-ParenExpr 0x125103878 <col:23, col:30> 'int'
    |   | |         `-BinaryOperator 0x125103858 <col:24, col:29> 'int' '<<'
    |   | |           |-IntegerLiteral 0x125103800 <col:24> 'int' 1
    |   | |           `-ImplicitCastExpr 0x125103840 <col:29> 'unsigned int' <LValueToRValue>
    |   | |             `-DeclRefExpr 0x125103820 <col:29> 'unsigned int' lvalue Var 0x1251009e8 'h' 'unsigned int'
    |   | `-ContinueStmt 0x125103920 <line:36:4>
    |   |-IfStmt 0x125103c78 <line:37:3, line:38:43>
    |   | |-BinaryOperator 0x125103ad8 <line:37:7, col:50> 'int' '=='
    |   | | |-BinaryOperator 0x1251039f8 <col:7, col:28> 'long' '-'
    |   | | | |-CStyleCastExpr 0x125103998 <col:7, col:24> 'unsigned char *' <BitCast>
    |   | | | | `-ImplicitCastExpr 0x125103980 <col:24> 'struct arpt_entry *' <LValueToRValue> part_of_explicit_cast
    |   | | | |   `-DeclRefExpr 0x125103948 <col:24> 'struct arpt_entry *' lvalue ParmVar 0x12600e248 'e' 'struct arpt_entry *'
    |   | | | `-ImplicitCastExpr 0x1251039e0 <col:28> 'const unsigned char *' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x1251039c0 <col:28> 'const unsigned char *' lvalue ParmVar 0x1251004d8 'base' 'const unsigned char *'
    |   | | `-ImplicitCastExpr 0x125103ac0 <col:36, col:50> 'long' <IntegralCast>
    |   | |   `-ImplicitCastExpr 0x125103aa8 <col:36, col:50> 'unsigned int' <LValueToRValue>
    |   | |     `-ArraySubscriptExpr 0x125103a88 <col:36, col:50> 'const unsigned int' lvalue
    |   | |       |-ImplicitCastExpr 0x125103a58 <col:36> 'const unsigned int *' <LValueToRValue>
    |   | |       | `-DeclRefExpr 0x125103a18 <col:36> 'const unsigned int *' lvalue ParmVar 0x125100608 'hook_entries' 'const unsigned int *'
    |   | |       `-ImplicitCastExpr 0x125103a70 <col:49> 'unsigned int' <LValueToRValue>
    |   | |         `-DeclRefExpr 0x125103a38 <col:49> 'unsigned int' lvalue Var 0x1251009e8 'h' 'unsigned int'
    |   | `-BinaryOperator 0x125103c58 <line:38:4, col:43> '<dependent type>' contains-errors '='
    |   |   |-ArraySubscriptExpr 0x125103ba8 <col:4, col:25> '<dependent type>' contains-errors lvalue
    |   |   | |-ImplicitCastExpr 0x125103b78 <col:4, col:13> '<dependent type>' contains-errors <LValueToRValue>
    |   |   | | `-RecoveryExpr 0x125103b30 <col:4, col:13> '<dependent type>' contains-errors lvalue
    |   |   | |   `-DeclRefExpr 0x125103af8 <col:4> 'struct xt_table_info *' lvalue ParmVar 0x125100428 'newinfo' 'struct xt_table_info *'
    |   |   | `-ImplicitCastExpr 0x125103b90 <col:24> 'unsigned int' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x125103b58 <col:24> 'unsigned int' lvalue Var 0x1251009e8 'h' 'unsigned int'
    |   |   `-ArraySubscriptExpr 0x125103c38 <col:29, col:43> 'const unsigned int' lvalue
    |   |     |-ImplicitCastExpr 0x125103c08 <col:29> 'const unsigned int *' <LValueToRValue>
    |   |     | `-DeclRefExpr 0x125103bc8 <col:29> 'const unsigned int *' lvalue ParmVar 0x125100608 'hook_entries' 'const unsigned int *'
    |   |     `-ImplicitCastExpr 0x125103c20 <col:42> 'unsigned int' <LValueToRValue>
    |   |       `-DeclRefExpr 0x125103be8 <col:42> 'unsigned int' lvalue Var 0x1251009e8 'h' 'unsigned int'
    |   `-IfStmt 0x126027b80 <line:39:3, line:47:3>
    |     |-BinaryOperator 0x125103e28 <line:39:7, col:48> 'int' '=='
    |     | |-BinaryOperator 0x125103d48 <col:7, col:28> 'long' '-'
    |     | | |-CStyleCastExpr 0x125103ce8 <col:7, col:24> 'unsigned char *' <BitCast>
    |     | | | `-ImplicitCastExpr 0x125103cd0 <col:24> 'struct arpt_entry *' <LValueToRValue> part_of_explicit_cast
    |     | | |   `-DeclRefExpr 0x125103c98 <col:24> 'struct arpt_entry *' lvalue ParmVar 0x12600e248 'e' 'struct arpt_entry *'
    |     | | `-ImplicitCastExpr 0x125103d30 <col:28> 'const unsigned char *' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x125103d10 <col:28> 'const unsigned char *' lvalue ParmVar 0x1251004d8 'base' 'const unsigned char *'
    |     | `-ImplicitCastExpr 0x125103e10 <col:36, col:48> 'long' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x125103df8 <col:36, col:48> 'unsigned int' <LValueToRValue>
    |     |     `-ArraySubscriptExpr 0x125103dd8 <col:36, col:48> 'const unsigned int' lvalue
    |     |       |-ImplicitCastExpr 0x125103da8 <col:36> 'const unsigned int *' <LValueToRValue>
    |     |       | `-DeclRefExpr 0x125103d68 <col:36> 'const unsigned int *' lvalue ParmVar 0x125100688 'underflows' 'const unsigned int *'
    |     |       `-ImplicitCastExpr 0x125103dc0 <col:47> 'unsigned int' <LValueToRValue>
    |     |         `-DeclRefExpr 0x125103d88 <col:47> 'unsigned int' lvalue Var 0x1251009e8 'h' 'unsigned int'
    |     `-CompoundStmt 0x126027b60 <col:51, line:47:3>
    |       |-IfStmt 0x1260279c0 <line:40:4, line:45:4>
    |       | |-UnaryOperator 0x125103fc0 <line:40:8, col:26> 'int' prefix '!' cannot overflow
    |       | | `-CallExpr 0x125103f80 <col:9, col:26> 'int'
    |       | |   |-ImplicitCastExpr 0x125103f68 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |       | |   | `-DeclRefExpr 0x125103f28 <col:9> 'int ()' Function 0x125103e70 'check_underflow' 'int ()'
    |       | |   `-ImplicitCastExpr 0x125103fa8 <col:25> 'struct arpt_entry *' <LValueToRValue>
    |       | |     `-DeclRefExpr 0x125103f48 <col:25> 'struct arpt_entry *' lvalue ParmVar 0x12600e248 'e' 'struct arpt_entry *'
    |       | `-CompoundStmt 0x1260279a8 <col:29, line:45:4>
    |       |   `-CallExpr 0x126027968 <line:41:5, line:43:12> 'int'
    |       |     |-ImplicitCastExpr 0x126027950 <line:41:5> 'int (*)()' <FunctionToPointerDecay>
    |       |     | `-DeclRefExpr 0x1260278b8 <col:5> 'int ()' Function 0x126027800 'pr_debug' 'int ()'
    |       |     `-ImplicitCastExpr 0x126027990 <col:14, line:43:7> 'char *' <ArrayToPointerDecay>
    |       |       `-StringLiteral 0x126027920 <line:41:14, line:43:7> 'char[10]' lvalue "STRSTRSTR"
    |       `-BinaryOperator 0x126027b40 <line:46:4, col:40> '<dependent type>' contains-errors '='
    |         |-ArraySubscriptExpr 0x126027a90 <col:4, col:24> '<dependent type>' contains-errors lvalue
    |         | |-ImplicitCastExpr 0x126027a60 <col:4, col:13> '<dependent type>' contains-errors <LValueToRValue>
    |         | | `-RecoveryExpr 0x126027a18 <col:4, col:13> '<dependent type>' contains-errors lvalue
    |         | |   `-DeclRefExpr 0x1260279e0 <col:4> 'struct xt_table_info *' lvalue ParmVar 0x125100428 'newinfo' 'struct xt_table_info *'
    |         | `-ImplicitCastExpr 0x126027a78 <col:23> 'unsigned int' <LValueToRValue>
    |         |   `-DeclRefExpr 0x126027a40 <col:23> 'unsigned int' lvalue Var 0x1251009e8 'h' 'unsigned int'
    |         `-ArraySubscriptExpr 0x126027b20 <col:28, col:40> 'const unsigned int' lvalue
    |           |-ImplicitCastExpr 0x126027af0 <col:28> 'const unsigned int *' <LValueToRValue>
    |           | `-DeclRefExpr 0x126027ab0 <col:28> 'const unsigned int *' lvalue ParmVar 0x125100688 'underflows' 'const unsigned int *'
    |           `-ImplicitCastExpr 0x126027b08 <col:39> 'unsigned int' <LValueToRValue>
    |             `-DeclRefExpr 0x126027ad0 <col:39> 'unsigned int' lvalue Var 0x1251009e8 'h' 'unsigned int'
    |-BinaryOperator 0x126027e68 <line:52:2, col:16> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x126027e20 <col:2, col:5> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x126027de8 <col:2> 'struct arpt_entry *' lvalue ParmVar 0x12600e248 'e' 'struct arpt_entry *'
    | `-IntegerLiteral 0x126027e48 <col:16> 'int' 0
    `-ReturnStmt 0x126027ea8 <line:53:2, col:9>
      `-IntegerLiteral 0x126027e88 <col:9> 'int' 0
