TranslationUnitDecl 0x131828408 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1318292b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1318289d0 '__int128'
|-TypedefDecl 0x131829328 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1318289f0 'unsigned __int128'
|-TypedefDecl 0x13280c630 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13280c400 'struct __NSConstantString_tag'
|   `-Record 0x131829380 '__NSConstantString_tag'
|-TypedefDecl 0x13280c698 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x131828b90 '__SVInt8_t'
|-TypedefDecl 0x13280c700 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x131828bb0 '__SVInt16_t'
|-TypedefDecl 0x13280c768 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x131828bd0 '__SVInt32_t'
|-TypedefDecl 0x13280c7d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x131828bf0 '__SVInt64_t'
|-TypedefDecl 0x13280c838 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x131828c10 '__SVUint8_t'
|-TypedefDecl 0x13280c8a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x131828c30 '__SVUint16_t'
|-TypedefDecl 0x13280c908 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x131828c50 '__SVUint32_t'
|-TypedefDecl 0x13280c970 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x131828c70 '__SVUint64_t'
|-TypedefDecl 0x13280c9d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x131828c90 '__SVFloat16_t'
|-TypedefDecl 0x13280ca40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x131828cb0 '__SVFloat32_t'
|-TypedefDecl 0x13280caa8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x131828cd0 '__SVFloat64_t'
|-TypedefDecl 0x13280cb10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x131828cf0 '__SVBfloat16_t'
|-TypedefDecl 0x13280cb78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x131828d10 '__clang_svint8x2_t'
|-TypedefDecl 0x13280cbe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x131828d30 '__clang_svint16x2_t'
|-TypedefDecl 0x13280cc48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x131828d50 '__clang_svint32x2_t'
|-TypedefDecl 0x13280ccb0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x131828d70 '__clang_svint64x2_t'
|-TypedefDecl 0x13280cd18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x131828d90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13280cd80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x131828db0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13280cde8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x131828dd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13280ce50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x131828df0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13280ceb8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x131828e10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13280cf20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x131828e30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13280cf88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x131828e50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13280cff0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x131828e70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13280d058 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x131828e90 '__clang_svint8x3_t'
|-TypedefDecl 0x13280d0c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x131828eb0 '__clang_svint16x3_t'
|-TypedefDecl 0x13280d128 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x131828ed0 '__clang_svint32x3_t'
|-TypedefDecl 0x13280d190 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x131828ef0 '__clang_svint64x3_t'
|-TypedefDecl 0x13280d1f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x131828f10 '__clang_svuint8x3_t'
|-TypedefDecl 0x13280d260 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x131828f30 '__clang_svuint16x3_t'
|-TypedefDecl 0x13280d2c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x131828f50 '__clang_svuint32x3_t'
|-TypedefDecl 0x13280d330 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x131828f70 '__clang_svuint64x3_t'
|-TypedefDecl 0x13280d398 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x131828f90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13280dc00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x131828fb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13280dc68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x131828fd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13280dcd0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x131828ff0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13280dd38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x131829010 '__clang_svint8x4_t'
|-TypedefDecl 0x13280dda0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x131829030 '__clang_svint16x4_t'
|-TypedefDecl 0x13280de08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x131829050 '__clang_svint32x4_t'
|-TypedefDecl 0x13280de70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x131829070 '__clang_svint64x4_t'
|-TypedefDecl 0x13280ded8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x131829090 '__clang_svuint8x4_t'
|-TypedefDecl 0x13280df40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1318290b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13280dfa8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1318290d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13280e010 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1318290f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13280e078 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x131829110 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13280e0e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x131829130 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13280e148 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x131829150 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13280e1b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x131829170 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13280e218 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x131829190 '__SVBool_t'
|-TypedefDecl 0x13280e280 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1318291b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13280e2e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1318291d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13280e350 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1318291f0 '__SVCount_t'
|-TypedefDecl 0x13280e3f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13280e3b0 'char *'
|   `-BuiltinType 0x1318284b0 'char'
|-TypedefDecl 0x13280e468 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13280e3b0 'char *'
|   `-BuiltinType 0x1318284b0 'char'
|-FunctionDecl 0x13280e6b8 <dataset_diviso_filec/func7349_vuln.c:1:1, line:28:1> line:1:16 invalid base64decode 'unsigned char *(const char *, int *)'
| |-ParmVarDecl 0x13280e4d8 <col:29, col:41> col:41 used buf 'const char *'
| |-ParmVarDecl 0x13280e5a8 <col:46, col:54> col:54 invalid size 'int *'
| `-CompoundStmt 0x13282a588 <line:2:1, line:28:1>
|   |-IfStmt 0x13280e878 <line:3:2, col:28>
|   | |-BinaryOperator 0x13280e810 <col:6, col:15> 'int' contains-errors '||'
|   | | |-UnaryOperator 0x13280e7a8 <col:6, col:7> 'int' prefix '!' cannot overflow
|   | | | `-ImplicitCastExpr 0x13280e790 <col:7> 'const char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x13280e770 <col:7> 'const char *' lvalue ParmVar 0x13280e4d8 'buf' 'const char *'
|   | | `-UnaryOperator 0x13280e7f8 <col:14, col:15> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | |   `-ImplicitCastExpr 0x13280e7e0 <col:15> '<dependent type>' contains-errors <LValueToRValue>
|   | |     `-RecoveryExpr 0x13280e7c0 <col:15> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x13280e868 <col:21, col:28>
|   |   `-RecoveryExpr 0x13280e848 <col:28> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x132827ec8 <line:4:2, col:47> 'unsigned long' contains-errors '='
|   | |-UnaryExprOrTypeTraitExpr 0x132827d68 <col:2, col:9> 'unsigned long' contains-errors sizeof
|   | | `-RecoveryExpr 0x132827d48 <col:9> '<dependent type>' contains-errors lvalue
|   | `-ConditionalOperator 0x132827e98 <col:15, col:47> '<dependent type>' contains-errors
|   |   |-ParenExpr 0x132827dd8 <col:15, col:25> 'int' contains-errors
|   |   | `-BinaryOperator 0x132827db8 <col:16, col:24> 'int' contains-errors '>'
|   |   |   |-UnaryOperator 0x132827da0 <col:16, col:17> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x132827d88 <col:17> '<dependent type>' contains-errors <LValueToRValue>
|   |   |   |   `-RecoveryExpr 0x13280e8e8 <col:17> '<dependent type>' contains-errors lvalue
|   |   |   `-IntegerLiteral 0x13280e938 <col:24> 'int' 0
|   |   |-UnaryOperator 0x132827e10 <col:29, col:30> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |   | `-ImplicitCastExpr 0x132827df8 <col:30> '<dependent type>' contains-errors <LValueToRValue>
|   |   |   `-RecoveryExpr 0x13280e9e8 <col:30> '<dependent type>' contains-errors lvalue
|   |   `-CallExpr 0x132827e58 <col:37, col:47> 'unsigned long'
|   |     |-ImplicitCastExpr 0x132827e40 <col:37> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x132827c10 <col:37> 'unsigned long (const char *)' Function 0x132827aa0 'strlen' 'unsigned long (const char *)'
|   |     `-ImplicitCastExpr 0x132827e80 <col:44> 'const char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x132827c30 <col:44> 'const char *' lvalue ParmVar 0x13280e4d8 'buf' 'const char *'
|   |-IfStmt 0x132827fc8 <line:5:2, col:23>
|   | |-BinaryOperator 0x132827f60 <col:6, col:13> 'int' contains-errors '<='
|   | | |-RecoveryExpr 0x132827f40 <col:6> '<dependent type>' contains-errors lvalue
|   | | `-IntegerLiteral 0x132827f00 <col:13> 'int' 0
|   | `-ReturnStmt 0x132827fb8 <col:16, col:23>
|   |   `-RecoveryExpr 0x132827f98 <col:23> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x132828300 <line:6:2, col:61>
|   | `-VarDecl 0x132828000 <col:2, col:17> col:17 used outbuf 'unsigned char *'
|   |-DeclStmt 0x1328283d0 <line:7:2, col:23>
|   | `-VarDecl 0x132828330 <col:2, col:20> col:14 used ptr 'const char *' cinit
|   |   `-ImplicitCastExpr 0x1328283b8 <col:20> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x132828398 <col:20> 'const char *' lvalue ParmVar 0x13280e4d8 'buf' 'const char *'
|   |-DeclStmt 0x132828488 <line:8:2, col:11>
|   | `-VarDecl 0x132828400 <col:2, col:10> col:6 used p 'int' cinit
|   |   `-IntegerLiteral 0x132828468 <col:10> 'int' 0
|   |-RecoveryExpr 0x132828598 <line:9:2, col:13> '<dependent type>' contains-errors lvalue
|   | |-UnaryExprOrTypeTraitExpr 0x132828578 <col:2, col:9> 'unsigned long' contains-errors sizeof
|   | | `-RecoveryExpr 0x132828558 <col:9> '<dependent type>' contains-errors lvalue
|   | `-IntegerLiteral 0x1328284f0 <col:13> 'int' 0
|   |-DoStmt 0x13282a358 <line:11:2, line:23:12>
|   | |-CompoundStmt 0x13282a310 <line:11:5, line:23:2>
|   | | |-CompoundAssignOperator 0x1328297a0 <line:12:3, col:27> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'
|   | | | |-DeclRefExpr 0x1328285c8 <col:3> 'const char *' lvalue Var 0x132828330 'ptr' 'const char *'
|   | | | `-CallExpr 0x132829728 <col:10, col:27> 'unsigned long'
|   | | |   |-ImplicitCastExpr 0x132829710 <col:10> 'unsigned long (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | | |   | `-DeclRefExpr 0x132829610 <col:10> 'unsigned long (const char *, const char *)' Function 0x132828630 'strspn' 'unsigned long (const char *, const char *)'
|   | | |   |-ImplicitCastExpr 0x132829758 <col:17> 'const char *' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x132829630 <col:17> 'const char *' lvalue Var 0x132828330 'ptr' 'const char *'
|   | | |   `-ImplicitCastExpr 0x132829788 <col:22> 'const char *' <NoOp>
|   | | |     `-ImplicitCastExpr 0x132829770 <col:22> 'char *' <ArrayToPointerDecay>
|   | | |       `-StringLiteral 0x132829690 <col:22> 'char[4]' lvalue "STR"
|   | | |-IfStmt 0x132829ae0 <line:13:3, line:15:3>
|   | | | |-BinaryOperator 0x132829aa0 <line:13:7, col:34> 'int' contains-errors '||'
|   | | | | |-BinaryOperator 0x132829a20 <col:7, col:15> 'int' '=='
|   | | | | | |-ImplicitCastExpr 0x132829a08 <col:7, col:8> 'int' <IntegralCast>
|   | | | | | | `-ImplicitCastExpr 0x1328299f0 <col:7, col:8> 'char' <LValueToRValue>
|   | | | | | |   `-UnaryOperator 0x1328299d8 <col:7, col:8> 'const char' lvalue prefix '*' cannot overflow
|   | | | | | |     `-ImplicitCastExpr 0x1328299c0 <col:8> 'const char *' <LValueToRValue>
|   | | | | | |       `-DeclRefExpr 0x1328297d0 <col:8> 'const char *' lvalue Var 0x132828330 'ptr' 'const char *'
|   | | | | | `-CharacterLiteral 0x132829820 <col:15> 'int' 0
|   | | | | `-BinaryOperator 0x132829a80 <col:23, col:34> 'int' contains-errors '>='
|   | | | |   |-DeclRefExpr 0x132829888 <col:23> 'const char *' lvalue Var 0x132828330 'ptr' 'const char *'
|   | | | |   `-BinaryOperator 0x132829a60 <col:30, col:34> '<dependent type>' contains-errors '+'
|   | | | |     |-DeclRefExpr 0x1328298a8 <col:30> 'const char *' lvalue ParmVar 0x13280e4d8 'buf' 'const char *'
|   | | | |     `-RecoveryExpr 0x132829a40 <col:34> '<dependent type>' contains-errors lvalue
|   | | | `-CompoundStmt 0x132829ac8 <col:39, line:15:3>
|   | | |   `-BreakStmt 0x132829ac0 <line:14:4>
|   | | `-IfStmt 0x13282a2e0 <line:17:3, line:22:3> has_else
|   | |   |-BinaryOperator 0x13282a028 <line:17:7, col:29> 'int' contains-errors '&&'
|   | |   | |-BinaryOperator 0x132829f68 <col:7, col:11> 'int' contains-errors '>'
|   | |   | | |-RecoveryExpr 0x132829f48 <col:7> '<dependent type>' contains-errors lvalue
|   | |   | | `-IntegerLiteral 0x132829e18 <col:11> 'int' 3
|   | |   | `-BinaryOperator 0x13282a008 <col:16, col:29> 'int' contains-errors '<='
|   | |   |   |-BinaryOperator 0x132829fa8 <col:16, col:20> '<dependent type>' contains-errors '+'
|   | |   |   | |-DeclRefExpr 0x132829e58 <col:16> 'const char *' lvalue Var 0x132828330 'ptr' 'const char *'
|   | |   |   | `-RecoveryExpr 0x132829f88 <col:20> '<dependent type>' contains-errors lvalue
|   | |   |   `-BinaryOperator 0x132829fe8 <col:25, col:29> '<dependent type>' contains-errors '+'
|   | |   |     |-DeclRefExpr 0x132829eb0 <col:25> 'const char *' lvalue ParmVar 0x13280e4d8 'buf' 'const char *'
|   | |   |     `-RecoveryExpr 0x132829fc8 <col:29> '<dependent type>' contains-errors lvalue
|   | |   |-CompoundStmt 0x13282a2b0 <col:34, line:20:3>
|   | |   `-CompoundStmt 0x13282a2c8 <col:10, line:22:3>
|   | |     `-BreakStmt 0x13282a2c0 <line:21:4>
|   | `-IntegerLiteral 0x13282a338 <line:23:11> 'int' 1
|   |-BinaryOperator 0x13282a440 <line:25:2, col:14> 'unsigned char' '='
|   | |-ArraySubscriptExpr 0x13282a3e8 <col:2, col:10> 'unsigned char' lvalue
|   | | |-ImplicitCastExpr 0x13282a3b8 <col:2> 'unsigned char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13282a378 <col:2> 'unsigned char *' lvalue Var 0x132828000 'outbuf' 'unsigned char *'
|   | | `-ImplicitCastExpr 0x13282a3d0 <col:9> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x13282a398 <col:9> 'int' lvalue Var 0x132828400 'p' 'int'
|   | `-ImplicitCastExpr 0x13282a428 <col:14> 'unsigned char' <IntegralCast>
|   |   `-IntegerLiteral 0x13282a408 <col:14> 'int' 0
|   |-BinaryOperator 0x13282a520 <line:26:2, col:10> '<dependent type>' contains-errors '='
|   | |-UnaryOperator 0x13282a508 <col:2, col:3> '<dependent type>' contains-errors prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x13282a4f0 <col:3> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x13282a460 <col:3> '<dependent type>' contains-errors lvalue
|   | `-DeclRefExpr 0x13282a4b0 <col:10> 'int' lvalue Var 0x132828400 'p' 'int'
|   `-ReturnStmt 0x13282a578 <line:27:2, col:9>
|     `-ImplicitCastExpr 0x13282a560 <col:9> 'unsigned char *' <LValueToRValue>
|       `-DeclRefExpr 0x13282a540 <col:9> 'unsigned char *' lvalue Var 0x132828000 'outbuf' 'unsigned char *'
|-FunctionDecl 0x132827aa0 <line:4:37> col:37 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x132827ba0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x132827b48 <<invalid sloc>> Implicit 902
|-FunctionDecl 0x1328280a8 <line:6:42> col:42 implicit used malloc 'void *(unsigned long)' extern
| |-ParmVarDecl 0x1328281a8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-BuiltinAttr 0x132828150 <<invalid sloc>> Implicit 871
| `-AllocSizeAttr 0x132828218 <col:42> Implicit 1
|-FunctionDecl 0x132828630 <line:12:10> col:10 implicit used strspn 'unsigned long (const char *, const char *)' extern
| |-ParmVarDecl 0x132828730 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x132828798 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x1328286d8 <<invalid sloc>> Implicit 897
`-FunctionDecl 0x132829b00 <line:16:7> col:7 implicit used strcspn 'unsigned long (const char *, const char *)' extern
  |-ParmVarDecl 0x132829c00 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x132829c68 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x132829ba8 <<invalid sloc>> Implicit 894
