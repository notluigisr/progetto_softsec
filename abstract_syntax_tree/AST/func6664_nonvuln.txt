TranslationUnitDecl 0x146820208 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1468210b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1468207d0 '__int128'
|-TypedefDecl 0x146821128 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1468207f0 'unsigned __int128'
|-TypedefDecl 0x1468f0e30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1468f0c00 'struct __NSConstantString_tag'
|   `-Record 0x146821180 '__NSConstantString_tag'
|-TypedefDecl 0x1468f0e98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x146820990 '__SVInt8_t'
|-TypedefDecl 0x1468f0f00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x1468209b0 '__SVInt16_t'
|-TypedefDecl 0x1468f0f68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x1468209d0 '__SVInt32_t'
|-TypedefDecl 0x1468f0fd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x1468209f0 '__SVInt64_t'
|-TypedefDecl 0x1468f1038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x146820a10 '__SVUint8_t'
|-TypedefDecl 0x1468f10a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x146820a30 '__SVUint16_t'
|-TypedefDecl 0x1468f1108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x146820a50 '__SVUint32_t'
|-TypedefDecl 0x1468f1170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x146820a70 '__SVUint64_t'
|-TypedefDecl 0x1468f11d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x146820a90 '__SVFloat16_t'
|-TypedefDecl 0x1468f1240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x146820ab0 '__SVFloat32_t'
|-TypedefDecl 0x1468f12a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x146820ad0 '__SVFloat64_t'
|-TypedefDecl 0x1468f1310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x146820af0 '__SVBfloat16_t'
|-TypedefDecl 0x1468f1378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x146820b10 '__clang_svint8x2_t'
|-TypedefDecl 0x1468f13e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x146820b30 '__clang_svint16x2_t'
|-TypedefDecl 0x1468f1448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x146820b50 '__clang_svint32x2_t'
|-TypedefDecl 0x1468f14b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x146820b70 '__clang_svint64x2_t'
|-TypedefDecl 0x1468f1518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x146820b90 '__clang_svuint8x2_t'
|-TypedefDecl 0x1468f1580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x146820bb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1468f15e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x146820bd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x1468f1650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x146820bf0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1468f16b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x146820c10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x1468f1720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x146820c30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x1468f1788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x146820c50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1468f17f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x146820c70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x1468f1858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x146820c90 '__clang_svint8x3_t'
|-TypedefDecl 0x1468f18c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x146820cb0 '__clang_svint16x3_t'
|-TypedefDecl 0x1468f1928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x146820cd0 '__clang_svint32x3_t'
|-TypedefDecl 0x1468f1990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x146820cf0 '__clang_svint64x3_t'
|-TypedefDecl 0x1468f19f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x146820d10 '__clang_svuint8x3_t'
|-TypedefDecl 0x1468f1a60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x146820d30 '__clang_svuint16x3_t'
|-TypedefDecl 0x1468f1ac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x146820d50 '__clang_svuint32x3_t'
|-TypedefDecl 0x1468f1b30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x146820d70 '__clang_svuint64x3_t'
|-TypedefDecl 0x1468f1b98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x146820d90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x1468f2400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x146820db0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x1468f2468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x146820dd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1468f24d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x146820df0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x1468f2538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x146820e10 '__clang_svint8x4_t'
|-TypedefDecl 0x1468f25a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x146820e30 '__clang_svint16x4_t'
|-TypedefDecl 0x1468f2608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x146820e50 '__clang_svint32x4_t'
|-TypedefDecl 0x1468f2670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x146820e70 '__clang_svint64x4_t'
|-TypedefDecl 0x1468f26d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x146820e90 '__clang_svuint8x4_t'
|-TypedefDecl 0x1468f2740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x146820eb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1468f27a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x146820ed0 '__clang_svuint32x4_t'
|-TypedefDecl 0x1468f2810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x146820ef0 '__clang_svuint64x4_t'
|-TypedefDecl 0x1468f2878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x146820f10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1468f28e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x146820f30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x1468f2948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x146820f50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1468f29b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x146820f70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x1468f2a18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x146820f90 '__SVBool_t'
|-TypedefDecl 0x1468f2a80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x146820fb0 '__clang_svboolx2_t'
|-TypedefDecl 0x1468f2ae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x146820fd0 '__clang_svboolx4_t'
|-TypedefDecl 0x1468f2b50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x146820ff0 '__SVCount_t'
|-TypedefDecl 0x1468f2bf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1468f2bb0 'char *'
|   `-BuiltinType 0x1468202b0 'char'
|-TypedefDecl 0x1468f2c68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1468f2bb0 'char *'
|   `-BuiltinType 0x1468202b0 'char'
`-FunctionDecl 0x14690b808 <dataset_diviso_filec/func6664_nonvuln.c:1:1, line:49:1> line:1:12 invalid __set_cpus_allowed_ptr 'int (struct task_struct *, const struct cpumask *, int)' static
  |-ParmVarDecl 0x1468f3248 <col:35, col:55> col:55 used p 'struct task_struct *'
  |-ParmVarDecl 0x14690b628 <line:2:7, col:29> col:29 used new_mask 'const struct cpumask *'
  |-ParmVarDecl 0x14690b6c0 <col:39, col:44> col:44 invalid check 'int'
  `-CompoundStmt 0x146912e00 <line:3:1, line:49:1>
    |-DeclStmt 0x14690b948 <line:4:2, col:21>
    | `-VarDecl 0x14690b8e0 <col:2, col:16> col:16 used flags 'unsigned long'
    |-DeclStmt 0x14690bb48 <line:5:2, col:15>
    | |-RecordDecl 0x14690b960 <col:2, col:9> col:9 struct rq
    | `-VarDecl 0x14690bac8 <col:2, col:13> col:13 used rq 'struct rq *'
    |-DeclStmt 0x14690bbe0 <line:6:2, col:23>
    | `-VarDecl 0x14690bb78 <col:2, col:15> col:15 used dest_cpu 'unsigned int'
    |-DeclStmt 0x14690bc98 <line:7:2, col:13>
    | `-VarDecl 0x14690bc10 <col:2, col:12> col:6 used ret 'int' cinit
    |   `-IntegerLiteral 0x14690bc78 <col:12> 'int' 0
    |-BinaryOperator 0x14690bf88 <line:9:2, col:29> 'struct rq *' '='
    | |-DeclRefExpr 0x14690bcb0 <col:2> 'struct rq *' lvalue Var 0x14690bac8 'rq' 'struct rq *'
    | `-ImplicitCastExpr 0x14690bf70 <col:7, col:29> 'struct rq *' <IntegralToPointer>
    |   `-CallExpr 0x14690bf28 <col:7, col:29> 'int'
    |     |-ImplicitCastExpr 0x14690bf10 <col:7> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x14690be30 <col:7> 'int ()' Function 0x14690bd78 'task_rq_lock' 'int ()'
    |     |-ImplicitCastExpr 0x14690bf58 <col:20> 'struct task_struct *' <LValueToRValue>
    |     | `-DeclRefExpr 0x14690be50 <col:20> 'struct task_struct *' lvalue ParmVar 0x1468f3248 'p' 'struct task_struct *'
    |     `-UnaryOperator 0x14690bec0 <col:23, col:24> 'unsigned long *' prefix '&' cannot overflow
    |       `-DeclRefExpr 0x14690be70 <col:24> 'unsigned long' lvalue Var 0x14690b8e0 'flags' 'unsigned long'
    |-IfStmt 0x14690c200 <line:12:2, line:15:2>
    | |-RecoveryExpr 0x14690c060 <line:12:6, col:44> '_Bool' contains-errors
    | `-CompoundStmt 0x14690c1e0 <col:47, line:15:2>
    |   |-BinaryOperator 0x14690c158 <line:13:3, col:10> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x14690c080 <col:3> 'int' lvalue Var 0x14690bc10 'ret' 'int'
    |   | `-UnaryOperator 0x14690c140 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |   `-ImplicitCastExpr 0x14690c128 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    |   |     `-RecoveryExpr 0x14690c108 <col:10> '<dependent type>' contains-errors lvalue
    |   `-GotoStmt 0x14690c1c8 <line:14:3, col:8> 'out' 0x14690c178
    |-IfStmt 0x14690c400 <line:17:2, line:18:8>
    | |-CallExpr 0x14690c3b8 <line:17:6, col:46> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x14690c300 <col:6> 'int ()' Function 0x14690c248 'cpumask_equal' 'int ()'
    | | |-UnaryOperator 0x14690c380 <col:20, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | | `-RecoveryExpr 0x14690c358 <col:21, col:24> '<dependent type>' contains-errors lvalue
    | | |   `-DeclRefExpr 0x14690c320 <col:21> 'struct task_struct *' lvalue ParmVar 0x1468f3248 'p' 'struct task_struct *'
    | | `-DeclRefExpr 0x14690c398 <col:38> 'const struct cpumask *' lvalue ParmVar 0x14690b628 'new_mask' 'const struct cpumask *'
    | `-GotoStmt 0x14690c3e8 <line:18:3, col:8> 'out' 0x14690c178
    |-IfStmt 0x14603b548 <line:20:2, line:23:2>
    | |-UnaryOperator 0x14603b400 <line:20:6, col:51> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-CallExpr 0x14690c5c0 <col:7, col:51> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x14690c500 <col:7> 'int ()' Function 0x14690c448 'cpumask_intersects' 'int ()'
    | |   |-DeclRefExpr 0x14690c520 <col:26> 'const struct cpumask *' lvalue ParmVar 0x14690b628 'new_mask' 'const struct cpumask *'
    | |   `-RecoveryExpr 0x14690c5a0 <col:36> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x14603b528 <col:54, line:23:2>
    |   |-BinaryOperator 0x14603b4f0 <line:21:3, col:10> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x14603b418 <col:3> 'int' lvalue Var 0x14690bc10 'ret' 'int'
    |   | `-UnaryOperator 0x14603b4d8 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |   `-ImplicitCastExpr 0x14603b4c0 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    |   |     `-RecoveryExpr 0x14603b4a0 <col:10> '<dependent type>' contains-errors lvalue
    |   `-GotoStmt 0x14603b510 <line:22:3, col:8> 'out' 0x14690c178
    |-CallExpr 0x14603b6c0 <line:25:2, col:33> 'int'
    | |-ImplicitCastExpr 0x14603b6a8 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x14603b648 <col:2> 'int ()' Function 0x14603b590 'do_set_cpus_allowed' 'int ()'
    | |-ImplicitCastExpr 0x14603b6f0 <col:22> 'struct task_struct *' <LValueToRValue>
    | | `-DeclRefExpr 0x14603b668 <col:22> 'struct task_struct *' lvalue ParmVar 0x1468f3248 'p' 'struct task_struct *'
    | `-ImplicitCastExpr 0x14603b708 <col:25> 'const struct cpumask *' <LValueToRValue>
    |   `-DeclRefExpr 0x14603b688 <col:25> 'const struct cpumask *' lvalue ParmVar 0x14690b628 'new_mask' 'const struct cpumask *'
    |-IfStmt 0x14603ba30 <line:28:2, line:29:8>
    | |-CallExpr 0x14603b9d0 <line:28:6, col:44> 'int'
    | | |-ImplicitCastExpr 0x14603b9b8 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x14603b800 <col:6> 'int ()' Function 0x14603b748 'cpumask_test_cpu' 'int ()'
    | | |-CallExpr 0x14603b958 <col:23, col:33> 'int'
    | | | |-ImplicitCastExpr 0x14603b940 <col:23> 'int (*)()' <FunctionToPointerDecay>
    | | | | `-DeclRefExpr 0x14603b900 <col:23> 'int ()' Function 0x14603b848 'task_cpu' 'int ()'
    | | | `-ImplicitCastExpr 0x14603b980 <col:32> 'struct task_struct *' <LValueToRValue>
    | | |   `-DeclRefExpr 0x14603b920 <col:32> 'struct task_struct *' lvalue ParmVar 0x1468f3248 'p' 'struct task_struct *'
    | | `-ImplicitCastExpr 0x14603ba00 <col:36> 'const struct cpumask *' <LValueToRValue>
    | |   `-DeclRefExpr 0x14603b998 <col:36> 'const struct cpumask *' lvalue ParmVar 0x14690b628 'new_mask' 'const struct cpumask *'
    | `-GotoStmt 0x14603ba18 <line:29:3, col:8> 'out' 0x14690c178
    |-BinaryOperator 0x14603bc48 <line:31:2, col:54> 'unsigned int' contains-errors '='
    | |-DeclRefExpr 0x14603ba50 <col:2> 'unsigned int' lvalue Var 0x14690bb78 'dest_cpu' 'unsigned int'
    | `-CallExpr 0x14603bc18 <col:13, col:54> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14603bb50 <col:13> 'int ()' Function 0x14603ba98 'cpumask_any_and' 'int ()'
    |   |-RecoveryExpr 0x14603bbf8 <col:29> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x14603bb88 <col:46> 'const struct cpumask *' lvalue ParmVar 0x14690b628 'new_mask' 'const struct cpumask *'
    |-IfStmt 0x146912c50 <line:32:2, line:44:2> has_else
    | |-BinaryOperator 0x14603c008 <line:32:6, col:41> 'int' contains-errors '||'
    | | |-CallExpr 0x14603bf68 <col:6, col:24> 'int'
    | | | |-ImplicitCastExpr 0x14603bf50 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | | `-DeclRefExpr 0x14603bd48 <col:6> 'int ()' Function 0x14603bc90 'task_running' 'int ()'
    | | | |-ImplicitCastExpr 0x14603bf98 <col:19> 'struct rq *' <LValueToRValue>
    | | | | `-DeclRefExpr 0x14603bd68 <col:19> 'struct rq *' lvalue Var 0x14690bac8 'rq' 'struct rq *'
    | | | `-ImplicitCastExpr 0x14603bfb0 <col:23> 'struct task_struct *' <LValueToRValue>
    | | |   `-DeclRefExpr 0x14603bd88 <col:23> 'struct task_struct *' lvalue ParmVar 0x1468f3248 'p' 'struct task_struct *'
    | | `-BinaryOperator 0x14603bfe8 <col:29, col:41> 'int' contains-errors '=='
    | |   |-RecoveryExpr 0x14603be58 <col:29, col:32> '<dependent type>' contains-errors lvalue
    | |   | `-DeclRefExpr 0x14603be20 <col:29> 'struct task_struct *' lvalue ParmVar 0x1468f3248 'p' 'struct task_struct *'
    | |   `-RecoveryExpr 0x14603bfc8 <col:41> '<dependent type>' contains-errors lvalue
    | |-CompoundStmt 0x1469124d0 <col:54, line:39:2>
    | | |-DeclStmt 0x14603c238 <line:33:3, col:45>
    | | | |-RecordDecl 0x14603c028 <col:3, col:10> col:10 struct migration_arg
    | | | `-VarDecl 0x14603c128 <col:3, col:24> col:24 invalid arg 'struct migration_arg'
    | | |-CallExpr 0x146912000 <line:35:3, col:31> 'int'
    | | | |-ImplicitCastExpr 0x14603c3c8 <col:3> 'int (*)()' <FunctionToPointerDecay>
    | | | | `-DeclRefExpr 0x14603c330 <col:3> 'int ()' Function 0x14603c278 'task_rq_unlock' 'int ()'
    | | | |-ImplicitCastExpr 0x146912038 <col:18> 'struct rq *' <LValueToRValue>
    | | | | `-DeclRefExpr 0x14603c350 <col:18> 'struct rq *' lvalue Var 0x14690bac8 'rq' 'struct rq *'
    | | | |-ImplicitCastExpr 0x146912050 <col:22> 'struct task_struct *' <LValueToRValue>
    | | | | `-DeclRefExpr 0x14603c370 <col:22> 'struct task_struct *' lvalue ParmVar 0x1468f3248 'p' 'struct task_struct *'
    | | | `-UnaryOperator 0x14603c3b0 <col:25, col:26> 'unsigned long *' prefix '&' cannot overflow
    | | |   `-DeclRefExpr 0x14603c390 <col:26> 'unsigned long' lvalue Var 0x14690b8e0 'flags' 'unsigned long'
    | | |-CallExpr 0x146912478 <line:37:3, col:27> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x1469123f8 <col:3> 'int ()' Function 0x146912340 'tlb_migrate_finish' 'int ()'
    | | | `-RecoveryExpr 0x146912450 <col:22, col:25> '<dependent type>' contains-errors lvalue
    | | |   `-DeclRefExpr 0x146912418 <col:22> 'struct task_struct *' lvalue ParmVar 0x1468f3248 'p' 'struct task_struct *'
    | | `-ReturnStmt 0x1469124c0 <line:38:3, col:10>
    | |   `-IntegerLiteral 0x1469124a0 <col:10> 'int' 0
    | `-IfStmt 0x146912c30 <line:39:9, line:44:2>
    |   |-CallExpr 0x146912638 <line:39:13, col:32> 'int'
    |   | |-ImplicitCastExpr 0x146912620 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x1469125e0 <col:13> 'int ()' Function 0x146912528 'task_on_rq_queued' 'int ()'
    |   | `-ImplicitCastExpr 0x146912660 <col:31> 'struct task_struct *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x146912600 <col:31> 'struct task_struct *' lvalue ParmVar 0x1468f3248 'p' 'struct task_struct *'
    |   `-CompoundStmt 0x146912c08 <col:35, line:44:2>
    |     |-CallExpr 0x1469127f0 <line:41:3, col:31> '<dependent type>' contains-errors
    |     | |-DeclRefExpr 0x146912758 <col:3> 'int ()' Function 0x1469126a0 'lockdep_unpin_lock' 'int ()'
    |     | `-UnaryOperator 0x1469127d8 <col:22, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     |   `-RecoveryExpr 0x1469127b0 <col:23, col:27> '<dependent type>' contains-errors lvalue
    |     |     `-DeclRefExpr 0x146912778 <col:23> 'struct rq *' lvalue Var 0x14690bac8 'rq' 'struct rq *'
    |     |-BinaryOperator 0x146912a48 <line:42:3, col:40> 'struct rq *' '='
    |     | |-DeclRefExpr 0x146912818 <col:3> 'struct rq *' lvalue Var 0x14690bac8 'rq' 'struct rq *'
    |     | `-ImplicitCastExpr 0x146912a30 <col:8, col:40> 'struct rq *' <IntegralToPointer>
    |     |   `-CallExpr 0x1469129b0 <col:8, col:40> 'int'
    |     |     |-ImplicitCastExpr 0x146912998 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |     |     | `-DeclRefExpr 0x146912918 <col:8> 'int ()' Function 0x146912860 'move_queued_task' 'int ()'
    |     |     |-ImplicitCastExpr 0x1469129e8 <col:25> 'struct rq *' <LValueToRValue>
    |     |     | `-DeclRefExpr 0x146912938 <col:25> 'struct rq *' lvalue Var 0x14690bac8 'rq' 'struct rq *'
    |     |     |-ImplicitCastExpr 0x146912a00 <col:29> 'struct task_struct *' <LValueToRValue>
    |     |     | `-DeclRefExpr 0x146912958 <col:29> 'struct task_struct *' lvalue ParmVar 0x1468f3248 'p' 'struct task_struct *'
    |     |     `-ImplicitCastExpr 0x146912a18 <col:32> 'unsigned int' <LValueToRValue>
    |     |       `-DeclRefExpr 0x146912978 <col:32> 'unsigned int' lvalue Var 0x14690bb78 'dest_cpu' 'unsigned int'
    |     `-CallExpr 0x146912be0 <line:43:3, col:29> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x146912b48 <col:3> 'int ()' Function 0x146912a90 'lockdep_pin_lock' 'int ()'
    |       `-UnaryOperator 0x146912bc8 <col:20, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow
    |         `-RecoveryExpr 0x146912ba0 <col:21, col:25> '<dependent type>' contains-errors lvalue
    |           `-DeclRefExpr 0x146912b68 <col:21> 'struct rq *' lvalue Var 0x14690bac8 'rq' 'struct rq *'
    |-LabelStmt 0x146912d98 <line:45:1, line:46:30> 'out'
    | `-CallExpr 0x146912d30 <col:2, col:30> 'int'
    |   |-ImplicitCastExpr 0x146912d18 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x146912c80 <col:2> 'int ()' Function 0x14603c278 'task_rq_unlock' 'int ()'
    |   |-ImplicitCastExpr 0x146912d68 <col:17> 'struct rq *' <LValueToRValue>
    |   | `-DeclRefExpr 0x146912ca0 <col:17> 'struct rq *' lvalue Var 0x14690bac8 'rq' 'struct rq *'
    |   |-ImplicitCastExpr 0x146912d80 <col:21> 'struct task_struct *' <LValueToRValue>
    |   | `-DeclRefExpr 0x146912cc0 <col:21> 'struct task_struct *' lvalue ParmVar 0x1468f3248 'p' 'struct task_struct *'
    |   `-UnaryOperator 0x146912d00 <col:24, col:25> 'unsigned long *' prefix '&' cannot overflow
    |     `-DeclRefExpr 0x146912ce0 <col:25> 'unsigned long' lvalue Var 0x14690b8e0 'flags' 'unsigned long'
    `-ReturnStmt 0x146912df0 <line:48:2, col:9>
      `-ImplicitCastExpr 0x146912dd8 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x146912db8 <col:9> 'int' lvalue Var 0x14690bc10 'ret' 'int'
