TranslationUnitDecl 0x123855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1238564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x123855bd0 '__int128'
|-TypedefDecl 0x123856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x123855bf0 'unsigned __int128'
|-TypedefDecl 0x12400be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12400bc00 'struct __NSConstantString_tag'
|   `-Record 0x123856580 '__NSConstantString_tag'
|-TypedefDecl 0x12400be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x123855d90 '__SVInt8_t'
|-TypedefDecl 0x12400bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x123855db0 '__SVInt16_t'
|-TypedefDecl 0x12400bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x123855dd0 '__SVInt32_t'
|-TypedefDecl 0x12400bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x123855df0 '__SVInt64_t'
|-TypedefDecl 0x12400c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x123855e10 '__SVUint8_t'
|-TypedefDecl 0x12400c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x123855e30 '__SVUint16_t'
|-TypedefDecl 0x12400c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x123855e50 '__SVUint32_t'
|-TypedefDecl 0x12400c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x123855e70 '__SVUint64_t'
|-TypedefDecl 0x12400c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x123855e90 '__SVFloat16_t'
|-TypedefDecl 0x12400c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x123855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12400c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x123855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12400c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x123855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12400c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x123855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12400c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x123855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12400c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x123855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12400c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x123855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12400c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x123855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12400c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x123855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12400c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x123855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12400c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x123855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12400c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x123856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12400c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x123856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12400c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x123856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12400c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x123856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12400c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x123856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12400c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1238560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12400c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1238560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12400c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1238560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12400c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x123856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12400ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x123856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12400cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x123856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12400cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x123856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12400cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x123856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12400d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1238561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12400d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1238561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12400d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1238561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12400d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x123856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12400d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x123856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12400d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x123856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12400d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x123856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12400d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x123856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12400d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1238562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12400d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1238562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12400d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1238562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12400d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x123856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12400d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x123856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12400d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x123856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12400d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x123856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12400da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x123856390 '__SVBool_t'
|-TypedefDecl 0x12400da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1238563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12400dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1238563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12400db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1238563f0 '__SVCount_t'
|-TypedefDecl 0x12400dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12400dbb0 'char *'
|   `-BuiltinType 0x1238556b0 'char'
|-TypedefDecl 0x12400dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12400dbb0 'char *'
|   `-BuiltinType 0x1238556b0 'char'
|-FunctionDecl 0x12400e038 <dataset_diviso_filec/func6371_vuln.c:1:1, line:68:1> line:1:12 invalid local_symlink 'int (int *, const char *, int *, const char *, int *)' static
| |-ParmVarDecl 0x12400dd28 <col:26, col:37> col:37 invalid fs_ctx 'int *'
| |-ParmVarDecl 0x12400dda8 <col:45, col:57> col:57 used oldpath 'const char *'
| |-ParmVarDecl 0x12400de28 <line:2:26, col:36> col:36 invalid dir_path 'int *'
| |-ParmVarDecl 0x12400dea8 <col:46, col:58> col:58 used name 'const char *'
| |-ParmVarDecl 0x12400df28 <col:64, col:72> col:72 referenced invalid credp 'int *'
| `-CompoundStmt 0x12402d310 <line:3:1, line:68:1>
|   |-DeclStmt 0x12400e1c0 <line:4:5, col:17>
|   | `-VarDecl 0x12400e120 <col:5, col:16> col:9 used err 'int' cinit
|   |   `-UnaryOperator 0x12400e1a8 <col:15, col:16> 'int' prefix '-'
|   |     `-IntegerLiteral 0x12400e188 <col:16> 'int' 1
|   |-DeclStmt 0x12400e258 <line:5:5, col:14>
|   | `-VarDecl 0x12400e1f0 <col:5, col:9> col:9 used dirfd 'int'
|   |-BinaryOperator 0x1240274d8 <line:7:5, col:58> 'int' contains-errors '='
|   | |-DeclRefExpr 0x12400e270 <col:5> 'int' lvalue Var 0x12400e1f0 'dirfd' 'int'
|   | `-CallExpr 0x1240274a8 <col:13, col:58> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x124027400 <col:13> 'int ()' Function 0x12400e338 'local_opendir_nofollow' 'int ()'
|   |   |-RecoveryExpr 0x124027420 <col:36> '<dependent type>' contains-errors lvalue
|   |   `-CXXDependentScopeMemberExpr 0x124027460 <col:44, col:54> '<dependent type>' contains-errors lvalue ->data
|   |     `-RecoveryExpr 0x124027440 <col:44> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x1240275e8 <line:8:5, line:10:5>
|   | |-BinaryOperator 0x124027568 <line:8:9, col:19> 'int' '=='
|   | | |-ImplicitCastExpr 0x124027550 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1240274f8 <col:9> 'int' lvalue Var 0x12400e1f0 'dirfd' 'int'
|   | | `-UnaryOperator 0x124027538 <col:18, col:19> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x124027518 <col:19> 'int' 1
|   | `-CompoundStmt 0x1240275d0 <col:22, line:10:5>
|   |   `-ReturnStmt 0x1240275c0 <line:9:9, col:17>
|   |     `-UnaryOperator 0x1240275a8 <col:16, col:17> 'int' prefix '-'
|   |       `-IntegerLiteral 0x124027588 <col:17> 'int' 1
|   |-IfStmt 0x12402cfc8 <line:13:5, line:60:5> has_else
|   | |-BinaryOperator 0x1240277e8 <line:13:9, line:14:32> 'int' contains-errors '||'
|   | | |-BinaryOperator 0x124027788 <line:13:9, col:32> '<dependent type>' contains-errors '&'
|   | | | |-CXXDependentScopeMemberExpr 0x124027628 <col:9, col:17> '<dependent type>' contains-errors lvalue ->export_flags
|   | | | | `-RecoveryExpr 0x124027608 <col:9> '<dependent type>' contains-errors lvalue
|   | | | `-RecoveryExpr 0x124027768 <col:32> '<dependent type>' contains-errors lvalue
|   | | `-BinaryOperator 0x1240277c8 <line:14:9, col:32> '<dependent type>' contains-errors '&'
|   | |   |-CXXDependentScopeMemberExpr 0x1240276c8 <col:9, col:17> '<dependent type>' contains-errors lvalue ->export_flags
|   | |   | `-RecoveryExpr 0x1240276a8 <col:9> '<dependent type>' contains-errors lvalue
|   | |   `-RecoveryExpr 0x1240277a8 <col:32> '<dependent type>' contains-errors lvalue
|   | |-CompoundStmt 0x12402b108 <col:53, line:44:5>
|   | | |-DeclStmt 0x124027888 <line:15:9, col:15>
|   | | | `-VarDecl 0x124027820 <col:9, col:13> col:13 used fd 'int'
|   | | |-BinaryOperator 0x124027c00 <line:18:9, line:19:44> 'int' contains-errors '='
|   | | | |-DeclRefExpr 0x1240278a0 <line:18:9> 'int' lvalue Var 0x124027820 'fd' 'int'
|   | | | `-CallExpr 0x124027bc0 <col:14, line:19:44> '<dependent type>' contains-errors
|   | | |   |-DeclRefExpr 0x1240279a0 <line:18:14> 'int ()' Function 0x1240278e8 'openat_file' 'int ()'
|   | | |   |-DeclRefExpr 0x1240279c0 <col:26> 'int' lvalue Var 0x12400e1f0 'dirfd' 'int'
|   | | |   |-DeclRefExpr 0x1240279e0 <col:33> 'const char *' lvalue ParmVar 0x12400dea8 'name' 'const char *'
|   | | |   |-BinaryOperator 0x124027b80 <col:39, col:58> '<dependent type>' contains-errors '|'
|   | | |   | |-BinaryOperator 0x124027b40 <col:39, col:49> '<dependent type>' contains-errors '|'
|   | | |   | | |-RecoveryExpr 0x124027b00 <col:39> '<dependent type>' contains-errors lvalue
|   | | |   | | `-RecoveryExpr 0x124027b20 <col:49> '<dependent type>' contains-errors lvalue
|   | | |   | `-RecoveryExpr 0x124027b60 <col:58> '<dependent type>' contains-errors lvalue
|   | | |   `-RecoveryExpr 0x124027ba0 <line:19:26> '<dependent type>' contains-errors lvalue
|   | | |-IfStmt 0x124027d30 <line:20:9, line:22:9>
|   | | | |-BinaryOperator 0x124027c90 <line:20:13, col:20> 'int' '=='
|   | | | | |-ImplicitCastExpr 0x124027c78 <col:13> 'int' <LValueToRValue>
|   | | | | | `-DeclRefExpr 0x124027c20 <col:13> 'int' lvalue Var 0x124027820 'fd' 'int'
|   | | | | `-UnaryOperator 0x124027c60 <col:19, col:20> 'int' prefix '-'
|   | | | |   `-IntegerLiteral 0x124027c40 <col:20> 'int' 1
|   | | | `-CompoundStmt 0x124027d18 <col:23, line:22:9>
|   | | |   `-GotoStmt 0x124027d00 <line:21:13, col:18> 'out' 0x124027cb0
|   | | |-DoStmt 0x12402a808 <line:25:9, line:27:52>
|   | | | |-CompoundStmt 0x12402a658 <line:25:12, line:27:9>
|   | | | `-BinaryOperator 0x12402a7e8 <col:18, col:47> 'int' contains-errors '&&'
|   | | |   |-BinaryOperator 0x12402a768 <col:18, col:33> 'int' contains-errors '=='
|   | | |   | |-RecoveryExpr 0x12402a748 <col:18> '<dependent type>' contains-errors lvalue
|   | | |   | `-UnaryOperator 0x12402a6a0 <col:32, col:33> 'int' prefix '-'
|   | | |   |   `-IntegerLiteral 0x12402a680 <col:33> 'int' 1
|   | | |   `-BinaryOperator 0x12402a7c8 <col:38, col:47> 'int' contains-errors '=='
|   | | |     |-RecoveryExpr 0x12402a788 <col:38> '<dependent type>' contains-errors lvalue
|   | | |     `-RecoveryExpr 0x12402a7a8 <col:47> '<dependent type>' contains-errors lvalue
|   | | |-CallExpr 0x12402a998 <line:28:9, col:32> 'int'
|   | | | |-ImplicitCastExpr 0x12402a980 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x12402a908 <col:9> 'int ()' Function 0x12402a850 'close_preserve_errno' 'int ()'
|   | | | `-ImplicitCastExpr 0x12402a9c0 <col:30> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x12402a928 <col:30> 'int' lvalue Var 0x124027820 'fd' 'int'
|   | | |-IfStmt 0x12402aa78 <line:30:9, line:32:9>
|   | | | |-RecoveryExpr 0x12402a9d8 <line:30:13, col:27> '_Bool' contains-errors
|   | | | `-CompoundStmt 0x12402aa60 <col:41, line:32:9>
|   | | |   `-GotoStmt 0x12402aa48 <line:31:13, col:18> 'err_end' 0x12402a9f8
|   | | |-IfStmt 0x12402aff8 <line:36:9, line:40:9> has_else
|   | | | |-RecoveryExpr 0x12402abf8 <line:36:13, col:36> '_Bool' contains-errors
|   | | | |-CompoundStmt 0x12402adf0 <col:52, line:38:9>
|   | | | | `-BinaryOperator 0x12402add0 <line:37:13, col:55> 'int' contains-errors '='
|   | | | |   |-DeclRefExpr 0x12402ac18 <col:13> 'int' lvalue Var 0x12400e120 'err' 'int'
|   | | | |   `-CallExpr 0x12402ad98 <col:19, col:55> '<dependent type>' contains-errors
|   | | | |     |-DeclRefExpr 0x12402ad18 <col:19> 'int ()' Function 0x12402ac60 'local_set_xattrat' 'int ()'
|   | | | |     |-DeclRefExpr 0x12402ad38 <col:37> 'int' lvalue Var 0x12400e1f0 'dirfd' 'int'
|   | | | |     |-DeclRefExpr 0x12402ad58 <col:44> 'const char *' lvalue ParmVar 0x12400dea8 'name' 'const char *'
|   | | | |     `-RecoveryExpr 0x12402ad78 <col:50> '<dependent type>' contains-errors lvalue
|   | | | `-CompoundStmt 0x12402afe0 <line:38:16, line:40:9>
|   | | |   `-BinaryOperator 0x12402afc0 <line:39:13, col:66> 'int' contains-errors '='
|   | | |     |-DeclRefExpr 0x12402ae08 <col:13> 'int' lvalue Var 0x12400e120 'err' 'int'
|   | | |     `-CallExpr 0x12402af88 <col:19, col:66> '<dependent type>' contains-errors
|   | | |       |-DeclRefExpr 0x12402af08 <col:19> 'int ()' Function 0x12402ae50 'local_set_mapped_file_attrat' 'int ()'
|   | | |       |-DeclRefExpr 0x12402af28 <col:48> 'int' lvalue Var 0x12400e1f0 'dirfd' 'int'
|   | | |       |-DeclRefExpr 0x12402af48 <col:55> 'const char *' lvalue ParmVar 0x12400dea8 'name' 'const char *'
|   | | |       `-RecoveryExpr 0x12402af68 <col:61> '<dependent type>' contains-errors lvalue
|   | | `-IfStmt 0x12402b0e8 <line:41:9, line:43:9>
|   | |   |-BinaryOperator 0x12402b098 <line:41:13, col:21> 'int' '=='
|   | |   | |-ImplicitCastExpr 0x12402b080 <col:13> 'int' <LValueToRValue>
|   | |   | | `-DeclRefExpr 0x12402b028 <col:13> 'int' lvalue Var 0x12400e120 'err' 'int'
|   | |   | `-UnaryOperator 0x12402b068 <col:20, col:21> 'int' prefix '-'
|   | |   |   `-IntegerLiteral 0x12402b048 <col:21> 'int' 1
|   | |   `-CompoundStmt 0x12402b0d0 <col:24, line:43:9>
|   | |     `-GotoStmt 0x12402b0b8 <line:42:13, col:18> 'err_end' 0x12402a9f8
|   | `-IfStmt 0x12402cfa8 <line:44:12, line:60:5>
|   |   |-RecoveryExpr 0x12402b228 <line:44:16, line:45:39> '_Bool' contains-errors
|   |   `-CompoundStmt 0x12402cf80 <col:53, line:60:5>
|   |     |-BinaryOperator 0x12402ca80 <line:46:9, col:45> 'int' '='
|   |     | |-DeclRefExpr 0x12402b248 <col:9> 'int' lvalue Var 0x12400e120 'err' 'int'
|   |     | `-CallExpr 0x12402ca00 <col:15, col:45> 'int'
|   |     |   |-ImplicitCastExpr 0x12402b3c8 <col:15> 'int (*)()' <FunctionToPointerDecay>
|   |     |   | `-DeclRefExpr 0x12402b348 <col:15> 'int ()' Function 0x12402b290 'symlinkat' 'int ()'
|   |     |   |-ImplicitCastExpr 0x12402ca38 <col:25> 'const char *' <LValueToRValue>
|   |     |   | `-DeclRefExpr 0x12402b368 <col:25> 'const char *' lvalue ParmVar 0x12400dda8 'oldpath' 'const char *'
|   |     |   |-ImplicitCastExpr 0x12402ca50 <col:34> 'int' <LValueToRValue>
|   |     |   | `-DeclRefExpr 0x12402b388 <col:34> 'int' lvalue Var 0x12400e1f0 'dirfd' 'int'
|   |     |   `-ImplicitCastExpr 0x12402ca68 <col:41> 'const char *' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x12402b3a8 <col:41> 'const char *' lvalue ParmVar 0x12400dea8 'name' 'const char *'
|   |     |-IfStmt 0x12402cb08 <line:47:9, line:49:9>
|   |     | |-ImplicitCastExpr 0x12402cac0 <line:47:13> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x12402caa0 <col:13> 'int' lvalue Var 0x12400e120 'err' 'int'
|   |     | `-CompoundStmt 0x12402caf0 <col:18, line:49:9>
|   |     |   `-GotoStmt 0x12402cad8 <line:48:13, col:18> 'out' 0x124027cb0
|   |     `-IfStmt 0x12402cf60 <line:52:9, line:59:9>
|   |       |-BinaryOperator 0x12402cdc8 <line:52:13, col:21> 'int' '=='
|   |       | |-ImplicitCastExpr 0x12402cdb0 <col:13> 'int' <LValueToRValue>
|   |       | | `-DeclRefExpr 0x12402cd58 <col:13> 'int' lvalue Var 0x12400e120 'err' 'int'
|   |       | `-UnaryOperator 0x12402cd98 <col:20, col:21> 'int' prefix '-'
|   |       |   `-IntegerLiteral 0x12402cd78 <col:21> 'int' 1
|   |       `-CompoundStmt 0x12402cf48 <col:24, line:59:9>
|   |         `-IfStmt 0x12402cf18 <line:54:13, line:58:13> has_else
|   |           |-RecoveryExpr 0x12402ce50 <line:54:17, col:59> '_Bool' contains-errors
|   |           |-CompoundStmt 0x12402ce88 <col:73, line:56:13>
|   |           | `-GotoStmt 0x12402ce70 <line:55:17, col:22> 'err_end' 0x12402a9f8
|   |           `-CompoundStmt 0x12402cf00 <line:56:20, line:58:13>
|   |             `-BinaryOperator 0x12402cee0 <line:57:17, col:23> 'int' '='
|   |               |-DeclRefExpr 0x12402cea0 <col:17> 'int' lvalue Var 0x12400e120 'err' 'int'
|   |               `-IntegerLiteral 0x12402cec0 <col:23> 'int' 0
|   |-GotoStmt 0x12402cff8 <line:61:5, col:10> 'out' 0x124027cb0
|   |-LabelStmt 0x12402d1f0 <line:63:1, line:64:43> 'err_end'
|   | `-CallExpr 0x12402d188 <col:5, col:43> 'int'
|   |   |-ImplicitCastExpr 0x12402d170 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x12402d0f0 <col:5> 'int ()' Function 0x12402d038 'unlinkat_preserve_errno' 'int ()'
|   |   |-ImplicitCastExpr 0x12402d1c0 <col:29> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x12402d110 <col:29> 'int' lvalue Var 0x12400e1f0 'dirfd' 'int'
|   |   |-ImplicitCastExpr 0x12402d1d8 <col:36> 'const char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x12402d130 <col:36> 'const char *' lvalue ParmVar 0x12400dea8 'name' 'const char *'
|   |   `-IntegerLiteral 0x12402d150 <col:42> 'int' 0
|   |-LabelStmt 0x12402d2a8 <line:65:1, line:66:31> 'out'
|   | `-CallExpr 0x12402d268 <col:5, col:31> 'int'
|   |   |-ImplicitCastExpr 0x12402d250 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x12402d210 <col:5> 'int ()' Function 0x12402a850 'close_preserve_errno' 'int ()'
|   |   `-ImplicitCastExpr 0x12402d290 <col:26> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x12402d230 <col:26> 'int' lvalue Var 0x12400e1f0 'dirfd' 'int'
|   `-ReturnStmt 0x12402d300 <line:67:5, col:12>
|     `-ImplicitCastExpr 0x12402d2e8 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x12402d2c8 <col:12> 'int' lvalue Var 0x12400e120 'err' 'int'
`-FunctionDecl 0x1240281b0 <line:24:24> col:24 implicit used strlen 'unsigned long (const char *)' extern
  |-ParmVarDecl 0x1240282b0 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x124028258 <<invalid sloc>> Implicit 902
