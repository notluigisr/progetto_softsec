TranslationUnitDecl 0x128855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1288564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x128855bd0 '__int128'
|-TypedefDecl 0x128856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x128855bf0 'unsigned __int128'
|-TypedefDecl 0x128926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x128926000 'struct __NSConstantString_tag'
|   `-Record 0x128856580 '__NSConstantString_tag'
|-TypedefDecl 0x128926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x128855d90 '__SVInt8_t'
|-TypedefDecl 0x128926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x128855db0 '__SVInt16_t'
|-TypedefDecl 0x128926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x128855dd0 '__SVInt32_t'
|-TypedefDecl 0x1289263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x128855df0 '__SVInt64_t'
|-TypedefDecl 0x128926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x128855e10 '__SVUint8_t'
|-TypedefDecl 0x1289264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x128855e30 '__SVUint16_t'
|-TypedefDecl 0x128926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x128855e50 '__SVUint32_t'
|-TypedefDecl 0x128926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x128855e70 '__SVUint64_t'
|-TypedefDecl 0x1289265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x128855e90 '__SVFloat16_t'
|-TypedefDecl 0x128926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x128855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1289266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x128855ed0 '__SVFloat64_t'
|-TypedefDecl 0x128926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x128855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x128926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x128855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1289267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x128855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x128926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x128855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1289268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x128855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x128926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x128855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x128926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x128855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1289269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x128855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x128926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x128855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x128926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x128856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x128926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x128856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x128926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x128856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x128926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x128856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x128926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x128856090 '__clang_svint8x3_t'
|-TypedefDecl 0x128926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1288560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x128926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1288560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x128926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1288560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x128926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x128856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x128926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x128856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x128926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x128856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x128926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x128856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x128926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x128856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x128927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1288561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x128927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1288561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1289278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1288561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x128927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x128856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1289279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x128856230 '__clang_svint16x4_t'
|-TypedefDecl 0x128927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x128856250 '__clang_svint32x4_t'
|-TypedefDecl 0x128927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x128856270 '__clang_svint64x4_t'
|-TypedefDecl 0x128927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x128856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x128927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1288562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x128927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1288562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x128927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1288562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x128927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x128856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x128927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x128856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x128927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x128856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x128927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x128856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x128927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x128856390 '__SVBool_t'
|-TypedefDecl 0x128927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1288563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x128927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1288563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x128927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1288563f0 '__SVCount_t'
|-TypedefDecl 0x128927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x128927fb0 'char *'
|   `-BuiltinType 0x1288556b0 'char'
|-TypedefDecl 0x128928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x128927fb0 'char *'
|   `-BuiltinType 0x1288556b0 'char'
`-FunctionDecl 0x128928288 <dataset_diviso_filec/func8382_vuln.c:1:1, line:40:1> line:1:5 invalid hllMerge 'int (int *, int *)'
  |-ParmVarDecl 0x128928128 <col:14, col:23> col:23 referenced invalid max 'int *'
  |-ParmVarDecl 0x1289281a8 <col:28, col:34> col:34 invalid hll 'int *'
  `-CompoundStmt 0x129809fd8 <col:39, line:40:1>
    |-DeclStmt 0x128928590 <line:2:5, col:34>
    | |-RecordDecl 0x128928340 <col:5, col:12> col:12 struct hllhdr
    | `-VarDecl 0x1289284a8 <col:5, col:31> col:20 used hdr 'struct hllhdr *' cinit
    |   `-CXXDependentScopeMemberExpr 0x128928530 <col:26, col:31> '<dependent type>' contains-errors lvalue ->ptr
    |     `-RecoveryExpr 0x128928510 <col:26> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x128928628 <line:3:5, col:10>
    | `-VarDecl 0x1289285c0 <col:5, col:9> col:9 used i 'int'
    `-IfStmt 0x129809fa8 <line:5:5, line:38:5> has_else
      |-BinaryOperator 0x128941b20 <line:5:9, col:26> 'int' contains-errors '=='
      | |-RecoveryExpr 0x128941aa0 <col:9, col:14> '<dependent type>' contains-errors lvalue
      | | `-DeclRefExpr 0x128928640 <col:9> 'struct hllhdr *' contains-errors lvalue Var 0x1289284a8 'hdr' 'struct hllhdr *'
      | `-RecoveryExpr 0x128941b00 <col:26> '<dependent type>' contains-errors lvalue
      |-CompoundStmt 0x1289422b8 <col:37, line:12:5>
      | `-ForStmt 0x128942280 <line:8:9, line:11:9>
      |   |-BinaryOperator 0x128941b80 <line:8:14, col:18> 'int' '='
      |   | |-DeclRefExpr 0x128941b40 <col:14> 'int' lvalue Var 0x1289285c0 'i' 'int'
      |   | `-IntegerLiteral 0x128941b60 <col:18> 'int' 0
      |   |-<<<NULL>>>
      |   |-BinaryOperator 0x128941c18 <col:21, col:25> 'int' contains-errors '<'
      |   | |-DeclRefExpr 0x128941ba0 <col:21> 'int' lvalue Var 0x1289285c0 'i' 'int'
      |   | `-RecoveryExpr 0x128941bf8 <col:25> '<dependent type>' contains-errors lvalue
      |   |-UnaryOperator 0x128941c58 <col:40, col:41> 'int' postfix '++'
      |   | `-DeclRefExpr 0x128941c38 <col:40> 'int' lvalue Var 0x1289285c0 'i' 'int'
      |   `-CompoundStmt 0x128942260 <col:45, line:11:9>
      |     |-CallExpr 0x128941ee0 <line:9:13, col:56> '<dependent type>' contains-errors
      |     | |-DeclRefExpr 0x128941dd0 <col:13> 'int ()' Function 0x128941d18 'HLL_DENSE_GET_REGISTER' 'int ()'
      |     | |-RecoveryExpr 0x128941ec0 <col:36> '<dependent type>' contains-errors lvalue
      |     | |-RecoveryExpr 0x128941e40 <col:40, col:45> '<dependent type>' contains-errors lvalue
      |     | | `-DeclRefExpr 0x128941e08 <col:40> 'struct hllhdr *' contains-errors lvalue Var 0x1289284a8 'hdr' 'struct hllhdr *'
      |     | `-DeclRefExpr 0x128941e68 <col:55> 'int' lvalue Var 0x1289285c0 'i' 'int'
      |     `-IfStmt 0x128942240 <line:10:13, col:40>
      |       |-BinaryOperator 0x128942050 <col:17, col:28> 'int' contains-errors '>'
      |       | |-RecoveryExpr 0x128941fe0 <col:17> '<dependent type>' contains-errors lvalue
      |       | `-ArraySubscriptExpr 0x128942030 <col:23, col:28> '<dependent type>' contains-errors lvalue
      |       |   |-ImplicitCastExpr 0x128942000 <col:23> '<dependent type>' contains-errors <LValueToRValue>
      |       |   | `-RecoveryExpr 0x128941f30 <col:23> '<dependent type>' contains-errors lvalue
      |       |   `-ImplicitCastExpr 0x128942018 <col:27> 'int' <LValueToRValue>
      |       |     `-DeclRefExpr 0x128941f50 <col:27> 'int' lvalue Var 0x1289285c0 'i' 'int'
      |       `-BinaryOperator 0x128942220 <col:31, col:40> '<dependent type>' contains-errors '='
      |         |-ArraySubscriptExpr 0x1289421e0 <col:31, col:36> '<dependent type>' contains-errors lvalue
      |         | |-ImplicitCastExpr 0x1289421b0 <col:31> '<dependent type>' contains-errors <LValueToRValue>
      |         | | `-RecoveryExpr 0x128942090 <col:31> '<dependent type>' contains-errors lvalue
      |         | |   `-DeclRefExpr 0x128942070 <col:31> 'int *' lvalue ParmVar 0x128928128 'max' 'int *'
      |         | `-ImplicitCastExpr 0x1289421c8 <col:35> 'int' <LValueToRValue>
      |         |   `-DeclRefExpr 0x1289420b8 <col:35> 'int' lvalue Var 0x1289285c0 'i' 'int'
      |         `-RecoveryExpr 0x128942200 <col:40> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x129809f80 <line:12:12, line:38:5>
        |-DeclStmt 0x128942698 <line:14:9, col:28>
        | |-VarDecl 0x128942598 <col:9, col:14> col:14 used runlen 'long'
        | `-VarDecl 0x128942618 <col:9, col:22> col:22 used regval 'long'
        |-BinaryOperator 0x128942708 <line:17:9, col:13> 'int' '='
        | |-DeclRefExpr 0x1289426c8 <col:9> 'int' lvalue Var 0x1289285c0 'i' 'int'
        | `-IntegerLiteral 0x1289426e8 <col:13> 'int' 0
        `-WhileStmt 0x129809f20 <line:18:9, line:36:9>
          |-BinaryOperator 0x1289427b8 <line:18:15, col:19> 'int' contains-errors '<'
          | |-RecoveryExpr 0x128942778 <col:15> '<dependent type>' contains-errors lvalue
          | `-RecoveryExpr 0x128942798 <col:19> '<dependent type>' contains-errors lvalue
          `-CompoundStmt 0x129809f08 <col:24, line:36:9>
            `-IfStmt 0x129809ed8 <line:19:13, line:35:13> has_else
              |-RecoveryExpr 0x1298094d8 <line:19:17, col:37> '_Bool' contains-errors
              |-CompoundStmt 0x1298096a0 <col:40, line:23:13>
              | `-CompoundAssignOperator 0x129809670 <line:21:17, col:22> 'int' '+=' ComputeLHSTy='long' ComputeResultTy='long'
              |   |-DeclRefExpr 0x129809618 <col:17> 'int' lvalue Var 0x1289285c0 'i' 'int'
              |   `-ImplicitCastExpr 0x129809658 <col:22> 'long' <LValueToRValue>
              |     `-DeclRefExpr 0x129809638 <col:22> 'long' lvalue Var 0x128942598 'runlen' 'long'
              `-IfStmt 0x129809ea8 <line:23:20, line:35:13> has_else
                |-RecoveryExpr 0x1298097b8 <line:23:24, col:45> '_Bool' contains-errors
                |-CompoundStmt 0x1298099a0 <col:48, line:27:13>
                | `-CompoundAssignOperator 0x129809950 <line:25:17, col:22> 'int' '+=' ComputeLHSTy='long' ComputeResultTy='long'
                |   |-DeclRefExpr 0x1298098f8 <col:17> 'int' lvalue Var 0x1289285c0 'i' 'int'
                |   `-ImplicitCastExpr 0x129809938 <col:22> 'long' <LValueToRValue>
                |     `-DeclRefExpr 0x129809918 <col:22> 'long' lvalue Var 0x128942598 'runlen' 'long'
                `-CompoundStmt 0x129809e90 <line:27:20, line:35:13>
                  `-WhileStmt 0x129809e70 <line:30:17, line:33:17>
                    |-UnaryOperator 0x129809c18 <line:30:23, col:29> 'long' postfix '--'
                    | `-DeclRefExpr 0x129809bf8 <col:23> 'long' lvalue Var 0x128942598 'runlen' 'long'
                    `-CompoundStmt 0x129809e50 <col:33, line:33:17>
                      |-IfStmt 0x129809df8 <line:31:21, col:51>
                      | |-BinaryOperator 0x129809ce0 <col:25, col:39> 'int' contains-errors '>'
                      | | |-DeclRefExpr 0x129809c30 <col:25> 'long' lvalue Var 0x128942618 'regval' 'long'
                      | | `-ArraySubscriptExpr 0x129809cc0 <col:34, col:39> '<dependent type>' contains-errors lvalue
                      | |   |-ImplicitCastExpr 0x129809c90 <col:34> '<dependent type>' contains-errors <LValueToRValue>
                      | |   | `-RecoveryExpr 0x129809c50 <col:34> '<dependent type>' contains-errors lvalue
                      | |   `-ImplicitCastExpr 0x129809ca8 <col:38> 'int' <LValueToRValue>
                      | |     `-DeclRefExpr 0x129809c70 <col:38> 'int' lvalue Var 0x1289285c0 'i' 'int'
                      | `-BinaryOperator 0x129809dd8 <col:42, col:51> '<dependent type>' contains-errors '='
                      |   |-ArraySubscriptExpr 0x129809d98 <col:42, col:47> '<dependent type>' contains-errors lvalue
                      |   | |-ImplicitCastExpr 0x129809d68 <col:42> '<dependent type>' contains-errors <LValueToRValue>
                      |   | | `-RecoveryExpr 0x129809d20 <col:42> '<dependent type>' contains-errors lvalue
                      |   | |   `-DeclRefExpr 0x129809d00 <col:42> 'int *' lvalue ParmVar 0x128928128 'max' 'int *'
                      |   | `-ImplicitCastExpr 0x129809d80 <col:46> 'int' <LValueToRValue>
                      |   |   `-DeclRefExpr 0x129809d48 <col:46> 'int' lvalue Var 0x1289285c0 'i' 'int'
                      |   `-DeclRefExpr 0x129809db8 <col:51> 'long' lvalue Var 0x128942618 'regval' 'long'
                      `-UnaryOperator 0x129809e38 <line:32:21, col:22> 'int' postfix '++'
                        `-DeclRefExpr 0x129809e18 <col:21> 'int' lvalue Var 0x1289285c0 'i' 'int'
