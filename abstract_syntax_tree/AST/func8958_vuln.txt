TranslationUnitDecl 0x130028208 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1300290b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1300287d0 '__int128'
|-TypedefDecl 0x130029128 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1300287f0 'unsigned __int128'
|-TypedefDecl 0x130014830 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x130014600 'struct __NSConstantString_tag'
|   `-Record 0x130029180 '__NSConstantString_tag'
|-TypedefDecl 0x130014898 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x130028990 '__SVInt8_t'
|-TypedefDecl 0x130014900 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x1300289b0 '__SVInt16_t'
|-TypedefDecl 0x130014968 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x1300289d0 '__SVInt32_t'
|-TypedefDecl 0x1300149d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x1300289f0 '__SVInt64_t'
|-TypedefDecl 0x130014a38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x130028a10 '__SVUint8_t'
|-TypedefDecl 0x130014aa0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x130028a30 '__SVUint16_t'
|-TypedefDecl 0x130014b08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x130028a50 '__SVUint32_t'
|-TypedefDecl 0x130014b70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x130028a70 '__SVUint64_t'
|-TypedefDecl 0x130014bd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x130028a90 '__SVFloat16_t'
|-TypedefDecl 0x130014c40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x130028ab0 '__SVFloat32_t'
|-TypedefDecl 0x130014ca8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x130028ad0 '__SVFloat64_t'
|-TypedefDecl 0x130014d10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x130028af0 '__SVBfloat16_t'
|-TypedefDecl 0x130014d78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x130028b10 '__clang_svint8x2_t'
|-TypedefDecl 0x130014de0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x130028b30 '__clang_svint16x2_t'
|-TypedefDecl 0x130014e48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x130028b50 '__clang_svint32x2_t'
|-TypedefDecl 0x130014eb0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x130028b70 '__clang_svint64x2_t'
|-TypedefDecl 0x130014f18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x130028b90 '__clang_svuint8x2_t'
|-TypedefDecl 0x130014f80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x130028bb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x130014fe8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x130028bd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x130015050 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x130028bf0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1300150b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x130028c10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x130015120 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x130028c30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x130015188 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x130028c50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1300151f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x130028c70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x130015258 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x130028c90 '__clang_svint8x3_t'
|-TypedefDecl 0x1300152c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x130028cb0 '__clang_svint16x3_t'
|-TypedefDecl 0x130015328 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x130028cd0 '__clang_svint32x3_t'
|-TypedefDecl 0x130015390 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x130028cf0 '__clang_svint64x3_t'
|-TypedefDecl 0x1300153f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x130028d10 '__clang_svuint8x3_t'
|-TypedefDecl 0x130015460 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x130028d30 '__clang_svuint16x3_t'
|-TypedefDecl 0x1300154c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x130028d50 '__clang_svuint32x3_t'
|-TypedefDecl 0x130015530 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x130028d70 '__clang_svuint64x3_t'
|-TypedefDecl 0x130015598 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x130028d90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13009b600 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x130028db0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13009b668 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x130028dd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13009b6d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x130028df0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13009b738 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x130028e10 '__clang_svint8x4_t'
|-TypedefDecl 0x13009b7a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x130028e30 '__clang_svint16x4_t'
|-TypedefDecl 0x13009b808 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x130028e50 '__clang_svint32x4_t'
|-TypedefDecl 0x13009b870 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x130028e70 '__clang_svint64x4_t'
|-TypedefDecl 0x13009b8d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x130028e90 '__clang_svuint8x4_t'
|-TypedefDecl 0x13009b940 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x130028eb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13009b9a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x130028ed0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13009ba10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x130028ef0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13009ba78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x130028f10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13009bae0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x130028f30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13009bb48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x130028f50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13009bbb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x130028f70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13009bc18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x130028f90 '__SVBool_t'
|-TypedefDecl 0x13009bc80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x130028fb0 '__clang_svboolx2_t'
|-TypedefDecl 0x13009bce8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x130028fd0 '__clang_svboolx4_t'
|-TypedefDecl 0x13009bd50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x130028ff0 '__SVCount_t'
|-TypedefDecl 0x13009bdf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13009bdb0 'char *'
|   `-BuiltinType 0x1300282b0 'char'
|-TypedefDecl 0x13009be68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13009bdb0 'char *'
|   `-BuiltinType 0x1300282b0 'char'
`-FunctionDecl 0x13009c1a0 <dataset_diviso_filec/func8958_vuln.c:1:1, line:21:1> line:1:13 invalid xhci_kick_ep 'void (int *, unsigned int, unsigned int, unsigned int)' static
  |-ParmVarDecl 0x13009bf28 <col:26, col:37> col:37 invalid xhci 'int *'
  |-ParmVarDecl 0x13009bfa8 <col:43, col:56> col:56 used slotid 'unsigned int'
  |-ParmVarDecl 0x13009c028 <line:2:26, col:39> col:39 used epid 'unsigned int'
  |-ParmVarDecl 0x13009c0a8 <col:45, col:58> col:58 used streamid 'unsigned int'
  `-CompoundStmt 0x1300b5950 <line:3:1, line:21:1>
    |-CallExpr 0x13009c558 <line:6:5, col:51> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13009c3e0 <col:5> 'int ()' Function 0x13009c328 'assert' 'int ()'
    | `-BinaryOperator 0x13009c538 <col:12, col:43> 'int' contains-errors '&&'
    |   |-BinaryOperator 0x13009c470 <col:12, col:22> 'int' '>='
    |   | |-ImplicitCastExpr 0x13009c440 <col:12> 'unsigned int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x13009c400 <col:12> 'unsigned int' lvalue ParmVar 0x13009bfa8 'slotid' 'unsigned int'
    |   | `-ImplicitCastExpr 0x13009c458 <col:22> 'unsigned int' <IntegralCast>
    |   |   `-IntegerLiteral 0x13009c420 <col:22> 'int' 1
    |   `-BinaryOperator 0x13009c518 <col:27, col:43> 'int' contains-errors '<='
    |     |-DeclRefExpr 0x13009c490 <col:27> 'unsigned int' lvalue ParmVar 0x13009bfa8 'slotid' 'unsigned int'
    |     `-CXXDependentScopeMemberExpr 0x13009c4d0 <col:37, col:43> '<dependent type>' contains-errors lvalue ->numslots
    |       `-RecoveryExpr 0x13009c4b0 <col:37> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x1300b4f38 <line:7:5, col:35> 'int'
    | |-ImplicitCastExpr 0x1300b4f20 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x13009c580 <col:5> 'int ()' Function 0x13009c328 'assert' 'int ()'
    | `-BinaryOperator 0x1300b4ec8 <col:12, col:33> 'int' '&&'
    |   |-BinaryOperator 0x1300b4e18 <col:12, col:20> 'int' '>='
    |   | |-ImplicitCastExpr 0x13009c5e0 <col:12> 'unsigned int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x13009c5a0 <col:12> 'unsigned int' lvalue ParmVar 0x13009c028 'epid' 'unsigned int'
    |   | `-ImplicitCastExpr 0x1300b4e00 <col:20> 'unsigned int' <IntegralCast>
    |   |   `-IntegerLiteral 0x13009c5c0 <col:20> 'int' 1
    |   `-BinaryOperator 0x1300b4ea8 <col:25, col:33> 'int' '<='
    |     |-ImplicitCastExpr 0x1300b4e78 <col:25> 'unsigned int' <LValueToRValue>
    |     | `-DeclRefExpr 0x1300b4e38 <col:25> 'unsigned int' lvalue ParmVar 0x13009c028 'epid' 'unsigned int'
    |     `-ImplicitCastExpr 0x1300b4e90 <col:33> 'unsigned int' <IntegralCast>
    |       `-IntegerLiteral 0x1300b4e58 <col:33> 'int' 31
    |-IfStmt 0x1300b5338 <line:9:5, line:12:5>
    | |-UnaryOperator 0x1300b50f0 <line:9:9, col:32> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x1300b50d8 <col:10, col:32> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-CXXDependentScopeMemberExpr 0x1300b5090 <col:10, col:32> '<dependent type>' contains-errors lvalue .enabled
    | |     `-ArraySubscriptExpr 0x1300b5070 <col:10, col:30> '<dependent type>' contains-errors lvalue
    | |       |-ImplicitCastExpr 0x1300b5058 <col:10, col:16> '<dependent type>' contains-errors <LValueToRValue>
    | |       | `-CXXDependentScopeMemberExpr 0x1300b4f80 <col:10, col:16> '<dependent type>' contains-errors lvalue ->slots
    | |       |   `-RecoveryExpr 0x1300b4f60 <col:10> '<dependent type>' contains-errors lvalue
    | |       `-BinaryOperator 0x1300b5038 <col:22, col:29> 'unsigned int' '-'
    | |         |-ImplicitCastExpr 0x1300b5008 <col:22> 'unsigned int' <LValueToRValue>
    | |         | `-DeclRefExpr 0x1300b4fc8 <col:22> 'unsigned int' lvalue ParmVar 0x13009bfa8 'slotid' 'unsigned int'
    | |         `-ImplicitCastExpr 0x1300b5020 <col:29> 'unsigned int' <IntegralCast>
    | |           `-IntegerLiteral 0x1300b4fe8 <col:29> 'int' 1
    | `-CompoundStmt 0x1300b5318 <col:41, line:12:5>
    |   |-CallExpr 0x1300b52a8 <line:10:9, col:30> 'int'
    |   | |-ImplicitCastExpr 0x1300b5290 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x1300b51e8 <col:9> 'int ()' Function 0x1300b5130 'DPRINTF' 'int ()'
    |   | |-ImplicitCastExpr 0x1300b52d8 <col:17> 'char *' <ArrayToPointerDecay>
    |   | | `-StringLiteral 0x1300b5250 <col:17> 'char[4]' lvalue "STR"
    |   | `-ImplicitCastExpr 0x1300b52f0 <col:24> 'unsigned int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x1300b5270 <col:24> 'unsigned int' lvalue ParmVar 0x13009bfa8 'slotid' 'unsigned int'
    |   `-ReturnStmt 0x1300b5308 <line:11:9>
    |-IfStmt 0x1300b5778 <line:14:5, line:18:5>
    | |-UnaryOperator 0x1300b5618 <line:14:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x1300b5600 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x1300b55e0 <col:10> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x1300b5758 <col:17, line:18:5>
    |   |-CallExpr 0x1300b56c8 <line:15:9, line:16:29> 'int'
    |   | |-ImplicitCastExpr 0x1300b56b0 <line:15:9> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x1300b5630 <col:9> 'int ()' Function 0x1300b5130 'DPRINTF' 'int ()'
    |   | |-ImplicitCastExpr 0x1300b5700 <col:17> 'char *' <ArrayToPointerDecay>
    |   | | `-StringLiteral 0x1300b5650 <col:17> 'char[4]' lvalue "STR"
    |   | |-ImplicitCastExpr 0x1300b5718 <line:16:17> 'unsigned int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x1300b5670 <col:17> 'unsigned int' lvalue ParmVar 0x13009c028 'epid' 'unsigned int'
    |   | `-ImplicitCastExpr 0x1300b5730 <col:23> 'unsigned int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x1300b5690 <col:23> 'unsigned int' lvalue ParmVar 0x13009bfa8 'slotid' 'unsigned int'
    |   `-ReturnStmt 0x1300b5748 <line:17:9>
    `-CallExpr 0x1300b5920 <line:20:5, col:36> '<dependent type>' contains-errors
      |-DeclRefExpr 0x1300b5878 <col:5> 'int ()' Function 0x1300b57c0 'xhci_kick_epctx' 'int ()'
      |-RecoveryExpr 0x1300b5900 <col:21> '<dependent type>' contains-errors lvalue
      `-DeclRefExpr 0x1300b58b0 <col:28> 'unsigned int' lvalue ParmVar 0x13009c0a8 'streamid' 'unsigned int'
