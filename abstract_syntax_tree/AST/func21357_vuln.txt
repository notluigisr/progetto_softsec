TranslationUnitDecl 0x13b055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13b0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13b055bd0 '__int128'
|-TypedefDecl 0x13b056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13b055bf0 'unsigned __int128'
|-TypedefDecl 0x13b126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13b126000 'struct __NSConstantString_tag'
|   `-Record 0x13b056580 '__NSConstantString_tag'
|-TypedefDecl 0x13b126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13b055d90 '__SVInt8_t'
|-TypedefDecl 0x13b126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13b055db0 '__SVInt16_t'
|-TypedefDecl 0x13b126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13b055dd0 '__SVInt32_t'
|-TypedefDecl 0x13b1263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13b055df0 '__SVInt64_t'
|-TypedefDecl 0x13b126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13b055e10 '__SVUint8_t'
|-TypedefDecl 0x13b1264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13b055e30 '__SVUint16_t'
|-TypedefDecl 0x13b126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13b055e50 '__SVUint32_t'
|-TypedefDecl 0x13b126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13b055e70 '__SVUint64_t'
|-TypedefDecl 0x13b1265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13b055e90 '__SVFloat16_t'
|-TypedefDecl 0x13b126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13b055eb0 '__SVFloat32_t'
|-TypedefDecl 0x13b1266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13b055ed0 '__SVFloat64_t'
|-TypedefDecl 0x13b126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13b055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13b126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13b055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13b1267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13b055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13b126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13b055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13b1268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13b055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13b126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13b055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13b126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13b055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13b1269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13b055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13b126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13b055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13b126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13b056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13b126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13b056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13b126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13b056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13b126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13b056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13b126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13b056090 '__clang_svint8x3_t'
|-TypedefDecl 0x13b126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13b0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13b126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13b0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13b126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13b0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13b126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13b056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13b126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13b056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13b126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13b056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13b126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13b056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13b126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13b056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13b127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13b0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13b127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13b0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13b1278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13b0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13b127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13b056210 '__clang_svint8x4_t'
|-TypedefDecl 0x13b1279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13b056230 '__clang_svint16x4_t'
|-TypedefDecl 0x13b127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13b056250 '__clang_svint32x4_t'
|-TypedefDecl 0x13b127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13b056270 '__clang_svint64x4_t'
|-TypedefDecl 0x13b127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13b056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13b127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13b0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13b127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13b0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13b127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13b0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13b127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13b056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13b127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13b056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13b127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13b056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13b127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13b056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13b127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13b056390 '__SVBool_t'
|-TypedefDecl 0x13b127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13b0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13b127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13b0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13b127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13b0563f0 '__SVCount_t'
|-TypedefDecl 0x13b127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13b127fb0 'char *'
|   `-BuiltinType 0x13b0556b0 'char'
|-TypedefDecl 0x13b128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13b127fb0 'char *'
|   `-BuiltinType 0x13b0556b0 'char'
|-FunctionDecl 0x13b1282f8 <dataset_diviso_filec/func21357_vuln.c:1:1, line:57:1> line:1:12 unzzip_cat 'int (int, char **, int)' static
| |-ParmVarDecl 0x13b1280d8 <col:24, col:28> col:28 used argc 'int'
| |-ParmVarDecl 0x13b128188 <col:34, col:42> col:42 used argv 'char **'
| |-ParmVarDecl 0x13b128208 <col:48, col:52> col:52 used extract 'int'
| `-CompoundStmt 0x13b80d678 <line:2:1, line:57:1>
|   |-DeclStmt 0x13b128480 <line:3:5, col:13>
|   | `-VarDecl 0x13b128418 <col:5, col:9> col:9 used argn 'int'
|   |-IfStmt 0x13b809128 <line:7:5, line:11:5>
|   | |-BinaryOperator 0x13b128520 <line:7:9, col:17> 'int' '=='
|   | | |-ImplicitCastExpr 0x13b128508 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13b1284c8 <col:9> 'int' lvalue ParmVar 0x13b1280d8 'argc' 'int'
|   | | `-IntegerLiteral 0x13b1284e8 <col:17> 'int' 1
|   | `-CompoundStmt 0x13b809108 <line:8:5, line:11:5>
|   |   |-CallExpr 0x13b809068 <line:9:9, col:30> 'int'
|   |   | |-ImplicitCastExpr 0x13b809050 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x13b808f58 <col:9> 'int (const char *, ...)' Function 0x13b808db0 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x13b8090a8 <<scratch space>:2:1, dataset_diviso_filec/func21357_vuln.c:9:25> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x13b809090 <<scratch space>:2:1, dataset_diviso_filec/func21357_vuln.c:9:25> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x13b808fc0 <<scratch space>:2:1, dataset_diviso_filec/func21357_vuln.c:9:25> 'char[41]' lvalue "dataset_diviso_filec/func21357_vuln.cSTR"
|   |   `-ReturnStmt 0x13b8090f8 <line:10:9, col:17>
|   |     `-UnaryOperator 0x13b8090e0 <col:16, col:17> 'int' prefix '-'
|   |       `-IntegerLiteral 0x13b8090c0 <col:17> 'int' 1
|   |-IfStmt 0x13b809690 <line:14:5, line:17:5>
|   | |-UnaryOperator 0x13b809410 <line:14:9, col:11> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x13b8093f8 <col:11> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x13b8093d8 <col:11> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x13b809670 <col:17, line:17:5>
|   |   |-CallExpr 0x13b8095e8 <line:15:2, col:16> 'int'
|   |   | |-ImplicitCastExpr 0x13b8095d0 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x13b809508 <col:2> 'int ()' Function 0x13b809450 'perror' 'int ()'
|   |   | `-ImplicitCastExpr 0x13b809610 <col:9, col:15> 'char *' <LValueToRValue>
|   |   |   `-ArraySubscriptExpr 0x13b809580 <col:9, col:15> 'char *' lvalue
|   |   |     |-ImplicitCastExpr 0x13b809568 <col:9> 'char **' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x13b809528 <col:9> 'char **' lvalue ParmVar 0x13b128188 'argv' 'char **'
|   |   |     `-IntegerLiteral 0x13b809548 <col:14> 'int' 1
|   |   `-ReturnStmt 0x13b809660 <line:16:2, col:10>
|   |     `-UnaryOperator 0x13b809648 <col:9, col:10> 'int' prefix '-'
|   |       `-IntegerLiteral 0x13b809628 <col:10> 'int' 1
|   |-IfStmt 0x13b80d518 <line:19:5, line:54:5> has_else
|   | |-BinaryOperator 0x13b809708 <line:19:9, col:17> 'int' '=='
|   | | |-ImplicitCastExpr 0x13b8096f0 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13b8096b0 <col:9> 'int' lvalue ParmVar 0x13b1280d8 'argc' 'int'
|   | | `-IntegerLiteral 0x13b8096d0 <col:17> 'int' 2
|   | |-CompoundStmt 0x13b80ce20 <line:20:5, line:32:5>
|   | | `-WhileStmt 0x13b80ce00 <line:22:2, line:31:2>
|   | |   |-CallExpr 0x13b8098f8 <line:22:8, col:34> '<dependent type>' contains-errors
|   | |   | |-DeclRefExpr 0x13b809808 <col:8> 'int ()' Function 0x13b809750 'zzip_dir_read' 'int ()'
|   | |   | |-RecoveryExpr 0x13b8098a0 <col:22> '<dependent type>' contains-errors lvalue
|   | |   | `-UnaryOperator 0x13b8098e0 <col:28, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | |   |   `-RecoveryExpr 0x13b8098c0 <col:29> '<dependent type>' contains-errors lvalue
|   | |   `-CompoundStmt 0x13b80cde0 <line:23:2, line:31:2>
|   | |     |-DeclStmt 0x13b809a70 <line:24:6, col:31>
|   | |     | `-VarDecl 0x13b809940 <col:6, col:25> col:12 used name 'char *' cinit
|   | |     |   `-CXXDependentScopeMemberExpr 0x13b809a28 <col:19, col:25> '<dependent type>' contains-errors lvalue .d_name
|   | |     |     `-RecoveryExpr 0x13b809a08 <col:19> '<dependent type>' contains-errors lvalue
|   | |     `-IfStmt 0x13b80cdc0 <line:27:6, line:30:6>
|   | |       |-RecoveryExpr 0x13b80cb38 <line:27:10> '<dependent type>' contains-errors lvalue
|   | |       `-CompoundStmt 0x13b80cdb0 <col:15, line:30:6>
|   | `-CompoundStmt 0x13b80d500 <line:34:5, line:54:5>
|   |   `-WhileStmt 0x13b80d4e0 <line:36:2, line:53:2>
|   |     |-RecoveryExpr 0x13b80ce58 <line:36:8, col:34> '_Bool' contains-errors
|   |     `-CompoundStmt 0x13b80d4c0 <line:37:2, line:53:2>
|   |       |-DeclStmt 0x13b80cef8 <line:38:6, col:31>
|   |       | `-VarDecl 0x13b80ce90 <col:6, col:12> col:12 used name 'char *'
|   |       `-ForStmt 0x13b80d488 <line:39:6, line:52:6>
|   |         |-BinaryOperator 0x13b80cf50 <line:39:11, col:16> 'int' '='
|   |         | |-DeclRefExpr 0x13b80cf10 <col:11> 'int' lvalue Var 0x13b128418 'argn' 'int'
|   |         | `-IntegerLiteral 0x13b80cf30 <col:16> 'int' 1
|   |         |-<<<NULL>>>
|   |         |-BinaryOperator 0x13b80cfe0 <col:19, col:26> 'int' '<'
|   |         | |-ImplicitCastExpr 0x13b80cfb0 <col:19> 'int' <LValueToRValue>
|   |         | | `-DeclRefExpr 0x13b80cf70 <col:19> 'int' lvalue Var 0x13b128418 'argn' 'int'
|   |         | `-ImplicitCastExpr 0x13b80cfc8 <col:26> 'int' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x13b80cf90 <col:26> 'int' lvalue ParmVar 0x13b1280d8 'argc' 'int'
|   |         |-UnaryOperator 0x13b80d020 <col:32, col:36> 'int' postfix '++'
|   |         | `-DeclRefExpr 0x13b80d000 <col:32> 'int' lvalue Var 0x13b128418 'argn' 'int'
|   |         `-CompoundStmt 0x13b80d470 <line:40:6, line:52:6>
|   |           `-IfStmt 0x13b80d450 <line:41:3, line:51:10>
|   |             |-RecoveryExpr 0x13b80d1e8 <line:41:7, line:42:43> '_Bool' contains-errors
|   |             `-CompoundStmt 0x13b80d430 <line:43:10, line:51:10>
|   |               |-IfStmt 0x13b80d408 <line:46:14, line:49:7>
|   |               | |-RecoveryExpr 0x13b80d340 <line:46:18> '_Bool' contains-errors
|   |               | `-CompoundStmt 0x13b80d3f8 <col:23, line:49:7>
|   |               `-BreakStmt 0x13b80d428 <line:50:7>
|   `-ReturnStmt 0x13b80d668 <line:56:5, col:12>
|     `-IntegerLiteral 0x13b80d648 <col:12> 'int' 0
`-FunctionDecl 0x13b808db0 <line:9:9> col:9 implicit used printf 'int (const char *, ...)' extern
  |-ParmVarDecl 0x13b808eb0 <<invalid sloc>> <invalid sloc> 'const char *'
  |-BuiltinAttr 0x13b808e58 <<invalid sloc>> Implicit 903
  `-FormatAttr 0x13b808f20 <col:9> Implicit printf 1 2
