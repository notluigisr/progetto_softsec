TranslationUnitDecl 0x13d855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13d8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13d855bd0 '__int128'
|-TypedefDecl 0x13d856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13d855bf0 'unsigned __int128'
|-TypedefDecl 0x13e00be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13e00bc00 'struct __NSConstantString_tag'
|   `-Record 0x13d856580 '__NSConstantString_tag'
|-TypedefDecl 0x13e00be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13d855d90 '__SVInt8_t'
|-TypedefDecl 0x13e00bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13d855db0 '__SVInt16_t'
|-TypedefDecl 0x13e00bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13d855dd0 '__SVInt32_t'
|-TypedefDecl 0x13e00bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13d855df0 '__SVInt64_t'
|-TypedefDecl 0x13e00c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13d855e10 '__SVUint8_t'
|-TypedefDecl 0x13e00c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13d855e30 '__SVUint16_t'
|-TypedefDecl 0x13e00c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13d855e50 '__SVUint32_t'
|-TypedefDecl 0x13e00c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13d855e70 '__SVUint64_t'
|-TypedefDecl 0x13e00c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13d855e90 '__SVFloat16_t'
|-TypedefDecl 0x13e00c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13d855eb0 '__SVFloat32_t'
|-TypedefDecl 0x13e00c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13d855ed0 '__SVFloat64_t'
|-TypedefDecl 0x13e00c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13d855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13e00c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13d855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13e00c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13d855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13e00c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13d855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13e00c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13d855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13e00c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13d855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13e00c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13d855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13e00c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13d855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13e00c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13d855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13e00c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13d856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13e00c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13d856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13e00c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13d856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13e00c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13d856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13e00c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13d856090 '__clang_svint8x3_t'
|-TypedefDecl 0x13e00c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13d8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13e00c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13d8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13e00c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13d8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13e00c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13d856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13e00ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13d856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13e00cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13d856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13e00cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13d856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13e00cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13d856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13e00d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13d8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13e00d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13d8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13e00d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13d8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13e00d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13d856210 '__clang_svint8x4_t'
|-TypedefDecl 0x13e00d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13d856230 '__clang_svint16x4_t'
|-TypedefDecl 0x13e00d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13d856250 '__clang_svint32x4_t'
|-TypedefDecl 0x13e00d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13d856270 '__clang_svint64x4_t'
|-TypedefDecl 0x13e00d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13d856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13e00d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13d8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13e00d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13d8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13e00d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13d8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13e00d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13d856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13e00d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13d856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13e00d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13d856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13e00d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13d856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13e00da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13d856390 '__SVBool_t'
|-TypedefDecl 0x13e00da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13d8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13e00dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13d8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13e00db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13d8563f0 '__SVCount_t'
|-TypedefDecl 0x13e00dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13e00dbb0 'char *'
|   `-BuiltinType 0x13d8556b0 'char'
|-TypedefDecl 0x13e00dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13e00dbb0 'char *'
|   `-BuiltinType 0x13d8556b0 'char'
|-RecordDecl 0x13e00dcc0 <dataset_diviso_filec/func301_vuln.c:1:8, col:15> col:15 struct child_process
|-FunctionDecl 0x13e026a48 <col:1, line:40:1> line:1:30 git_connect_git 'struct child_process *(int *, char *, const char *, const char *, enum protocol_version, int)' static
| |-ParmVarDecl 0x13e00de70 <col:46, col:54> col:50 used fd 'int *'
| |-ParmVarDecl 0x13e00def0 <col:57, col:63> col:63 used hostandport 'char *'
| |-ParmVarDecl 0x13e00df70 <line:2:11, col:23> col:23 used path 'const char *'
| |-ParmVarDecl 0x13e00dff0 <col:29, col:41> col:41 used prog 'const char *'
| |-ParmVarDecl 0x13e026798 <line:3:11, col:33> col:33 invalid version 'enum protocol_version'
| |-ParmVarDecl 0x13e026818 <line:4:11, col:15> col:15 used flags 'int'
| `-CompoundStmt 0x13f008e88 <line:5:1, line:40:1>
|   |-DeclStmt 0x13e026c60 <line:6:2, col:28>
|   | `-VarDecl 0x13e026bf8 <col:2, col:24> col:24 used conn 'struct child_process *'
|   |-DeclStmt 0x13e026e28 <line:7:2, col:37>
|   | |-RecordDecl 0x13e026c78 <col:2, col:9> col:9 struct strbuf
|   | `-VarDecl 0x13e026d78 <col:2, col:16> col:16 invalid request 'struct strbuf'
|   |-DeclStmt 0x13e0270f0 <line:9:2, col:35>
|   | `-VarDecl 0x13e026e58 <col:2, col:34> col:8 used target_host 'char *' cinit
|   |   `-ImplicitCastExpr 0x13e0270d8 <col:22, col:34> 'char *' <IntegralToPointer>
|   |     `-CallExpr 0x13e027098 <col:22, col:34> 'int'
|   |       |-ImplicitCastExpr 0x13e027080 <col:22> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x13e026fd0 <col:22> 'int ()' Function 0x13e026f18 'getenv' 'int ()'
|   |       `-ImplicitCastExpr 0x13e0270c0 <col:29> 'char *' <ArrayToPointerDecay>
|   |         `-StringLiteral 0x13e027030 <col:29> 'char[4]' lvalue "STR"
|   |-IfStmt 0x13e027400 <line:10:2, line:13:36> has_else
|   | |-ImplicitCastExpr 0x13e027128 <line:10:6> 'char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x13e027108 <col:6> 'char *' lvalue Var 0x13e026e58 'target_host' 'char *'
|   | |-BinaryOperator 0x13e0272f0 <line:11:3, col:36> 'char *' '='
|   | | |-DeclRefExpr 0x13e027140 <col:3> 'char *' lvalue Var 0x13e026e58 'target_host' 'char *'
|   | | `-ImplicitCastExpr 0x13e0272d8 <col:17, col:36> 'char *' <IntegralToPointer>
|   | |   `-CallExpr 0x13e027298 <col:17, col:36> 'int'
|   | |     |-ImplicitCastExpr 0x13e027280 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   | |     | `-DeclRefExpr 0x13e027240 <col:17> 'int ()' Function 0x13e027188 'xstrdup' 'int ()'
|   | |     `-ImplicitCastExpr 0x13e0272c0 <col:25> 'char *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x13e027260 <col:25> 'char *' lvalue Var 0x13e026e58 'target_host' 'char *'
|   | `-BinaryOperator 0x13e0273e0 <line:13:3, col:36> 'char *' '='
|   |   |-DeclRefExpr 0x13e027310 <col:3> 'char *' lvalue Var 0x13e026e58 'target_host' 'char *'
|   |   `-ImplicitCastExpr 0x13e0273c8 <col:17, col:36> 'char *' <IntegralToPointer>
|   |     `-CallExpr 0x13e027388 <col:17, col:36> 'int'
|   |       |-ImplicitCastExpr 0x13e027370 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x13e027330 <col:17> 'int ()' Function 0x13e027188 'xstrdup' 'int ()'
|   |       `-ImplicitCastExpr 0x13e0273b0 <col:25> 'char *' <LValueToRValue>
|   |         `-DeclRefExpr 0x13e027350 <col:25> 'char *' lvalue ParmVar 0x13e00def0 'hostandport' 'char *'
|   |-CallExpr 0x13e027568 <line:15:2, col:31> 'int'
|   | |-ImplicitCastExpr 0x13e027550 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13e027510 <col:2> 'int ()' Function 0x13e027458 'transport_check_allowed' 'int ()'
|   | `-ImplicitCastExpr 0x13e027590 <col:26> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x13e027530 <col:26> 'char[4]' lvalue "STR"
|   |-IfStmt 0x13d923fb0 <line:18:2, line:21:48> has_else
|   | |-CallExpr 0x13d923b10 <line:18:6, col:31> 'int'
|   | | |-ImplicitCastExpr 0x13d923af8 <col:6> 'int (*)()' <FunctionToPointerDecay>
|   | | | `-DeclRefExpr 0x13d923ab8 <col:6> 'int ()' Function 0x13d923a00 'git_use_proxy' 'int ()'
|   | | `-ImplicitCastExpr 0x13d923b38 <col:20> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x13d923ad8 <col:20> 'char *' lvalue ParmVar 0x13e00def0 'hostandport' 'char *'
|   | |-BinaryOperator 0x13d923d40 <line:19:3, col:43> 'struct child_process *' '='
|   | | |-DeclRefExpr 0x13d923b50 <col:3> 'struct child_process *' lvalue Var 0x13e026bf8 'conn' 'struct child_process *'
|   | | `-ImplicitCastExpr 0x13d923d28 <col:10, col:43> 'struct child_process *' <IntegralToPointer>
|   | |   `-CallExpr 0x13d923cc8 <col:10, col:43> 'int'
|   | |     |-ImplicitCastExpr 0x13d923cb0 <col:10> 'int (*)()' <FunctionToPointerDecay>
|   | |     | `-DeclRefExpr 0x13d923c50 <col:10> 'int ()' Function 0x13d923b98 'git_proxy_connect' 'int ()'
|   | |     |-ImplicitCastExpr 0x13d923cf8 <col:28> 'int *' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x13d923c70 <col:28> 'int *' lvalue ParmVar 0x13e00de70 'fd' 'int *'
|   | |     `-ImplicitCastExpr 0x13d923d10 <col:32> 'char *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x13d923c90 <col:32> 'char *' lvalue ParmVar 0x13e00def0 'hostandport' 'char *'
|   | `-BinaryOperator 0x13d923f90 <line:21:3, col:48> 'struct child_process *' '='
|   |   |-DeclRefExpr 0x13d923d60 <col:3> 'struct child_process *' lvalue Var 0x13e026bf8 'conn' 'struct child_process *'
|   |   `-ImplicitCastExpr 0x13d923f78 <col:10, col:48> 'struct child_process *' <IntegralToPointer>
|   |     `-CallExpr 0x13d923ef8 <col:10, col:48> 'int'
|   |       |-ImplicitCastExpr 0x13d923ee0 <col:10> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x13d923e60 <col:10> 'int ()' Function 0x13d923da8 'git_tcp_connect' 'int ()'
|   |       |-ImplicitCastExpr 0x13d923f30 <col:26> 'int *' <LValueToRValue>
|   |       | `-DeclRefExpr 0x13d923e80 <col:26> 'int *' lvalue ParmVar 0x13e00de70 'fd' 'int *'
|   |       |-ImplicitCastExpr 0x13d923f48 <col:30> 'char *' <LValueToRValue>
|   |       | `-DeclRefExpr 0x13d923ea0 <col:30> 'char *' lvalue ParmVar 0x13e00def0 'hostandport' 'char *'
|   |       `-ImplicitCastExpr 0x13d923f60 <col:43> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x13d923ec0 <col:43> 'int' lvalue ParmVar 0x13e026818 'flags' 'int'
|   |-CallExpr 0x13d9241d8 <line:23:2, line:26:21> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x13d9240c0 <line:23:2> 'int ()' Function 0x13d924008 'strbuf_addf' 'int ()'
|   | |-UnaryOperator 0x13d924100 <col:14, col:15> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | `-RecoveryExpr 0x13d9240e0 <col:15> '<dependent type>' contains-errors lvalue
|   | |-StringLiteral 0x13d924118 <line:24:7> 'char[4]' lvalue "STR"
|   | |-DeclRefExpr 0x13d924138 <line:25:7> 'const char *' lvalue ParmVar 0x13e00dff0 'prog' 'const char *'
|   | |-DeclRefExpr 0x13d924158 <col:13> 'const char *' lvalue ParmVar 0x13e00df70 'path' 'const char *'
|   | |-IntegerLiteral 0x13d924178 <col:19> 'int' 0
|   | |-DeclRefExpr 0x13d924198 <line:26:7> 'char *' lvalue Var 0x13e026e58 'target_host' 'char *'
|   | `-IntegerLiteral 0x13d9241b8 <col:20> 'int' 0
|   |-IfStmt 0x13d924520 <line:29:2, line:33:2>
|   | |-BinaryOperator 0x13d924270 <line:29:6, col:16> 'int' contains-errors '>'
|   | | |-RecoveryExpr 0x13d924230 <col:6> '<dependent type>' contains-errors lvalue
|   | | `-IntegerLiteral 0x13d924250 <col:16> 'int' 0
|   | `-CompoundStmt 0x13d924500 <col:19, line:33:2>
|   |   |-CallExpr 0x13d9243e0 <line:30:3, col:30> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x13d924370 <col:3> 'int ()' Function 0x13d9242b8 'strbuf_addch' 'int ()'
|   |   | |-UnaryOperator 0x13d9243b0 <col:16, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   | | `-RecoveryExpr 0x13d924390 <col:17> '<dependent type>' contains-errors lvalue
|   |   | `-CharacterLiteral 0x13d9243c8 <col:26> 'int' 0
|   |   `-CallExpr 0x13d9244c0 <line:31:3, line:32:21> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x13d924410 <line:31:3> 'int ()' Function 0x13d924008 'strbuf_addf' 'int ()'
|   |     |-UnaryOperator 0x13d924450 <col:15, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     | `-RecoveryExpr 0x13d924430 <col:16> '<dependent type>' contains-errors lvalue
|   |     |-StringLiteral 0x13d924468 <col:25> 'char[4]' lvalue "STR"
|   |     |-RecoveryExpr 0x13d924488 <line:32:8> '<dependent type>' contains-errors lvalue
|   |     `-CharacterLiteral 0x13d9244a8 <col:17> 'int' 0
|   |-CallExpr 0x13d9247f8 <line:35:2, col:46> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x13d924620 <col:2> 'int ()' Function 0x13d924568 'packet_write' 'int ()'
|   | |-ArraySubscriptExpr 0x13d9247d8 <col:15, col:19> 'int' lvalue
|   | | |-ImplicitCastExpr 0x13d9247c0 <col:15> 'int *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13d924640 <col:15> 'int *' lvalue ParmVar 0x13e00de70 'fd' 'int *'
|   | | `-IntegerLiteral 0x13d924660 <col:18> 'int' 1
|   | |-CXXDependentScopeMemberExpr 0x13d9246d8 <col:22, col:30> '<dependent type>' contains-errors lvalue .buf
|   | | `-RecoveryExpr 0x13d9246b8 <col:22> '<dependent type>' contains-errors lvalue
|   | `-CXXDependentScopeMemberExpr 0x13d924740 <col:35, col:43> '<dependent type>' contains-errors lvalue .len
|   |   `-RecoveryExpr 0x13d924720 <col:35> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x13f008c88 <line:37:2, col:18> 'void'
|   | |-ImplicitCastExpr 0x13f008c70 <col:2> 'void (*)(void *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13d9249d8 <col:2> 'void (void *)' Function 0x13d924868 'free' 'void (void *)'
|   | `-ImplicitCastExpr 0x13f008cc8 <col:7> 'void *' <BitCast>
|   |   `-ImplicitCastExpr 0x13f008cb0 <col:7> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x13f008c00 <col:7> 'char *' lvalue Var 0x13e026e58 'target_host' 'char *'
|   |-CallExpr 0x13f008e18 <line:38:2, col:25> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x13f008dc0 <col:2> 'int ()' Function 0x13f008d08 'strbuf_release' 'int ()'
|   | `-UnaryOperator 0x13f008e00 <col:17, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   `-RecoveryExpr 0x13f008de0 <col:18> '<dependent type>' contains-errors lvalue
|   `-ReturnStmt 0x13f008e78 <line:39:2, col:9>
|     `-ImplicitCastExpr 0x13f008e60 <col:9> 'struct child_process *' <LValueToRValue>
|       `-DeclRefExpr 0x13f008e40 <col:9> 'struct child_process *' lvalue Var 0x13e026bf8 'conn' 'struct child_process *'
`-FunctionDecl 0x13d924868 <line:37:2> col:2 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x13d924968 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x13d924910 <<invalid sloc>> Implicit 873
