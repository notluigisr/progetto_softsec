TranslationUnitDecl 0x142834008 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x142834eb8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1428345d0 '__int128'
|-TypedefDecl 0x142834f28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1428345f0 'unsigned __int128'
|-TypedefDecl 0x14380be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14380bc00 'struct __NSConstantString_tag'
|   `-Record 0x142834f80 '__NSConstantString_tag'
|-TypedefDecl 0x14380be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x142834790 '__SVInt8_t'
|-TypedefDecl 0x14380bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x1428347b0 '__SVInt16_t'
|-TypedefDecl 0x14380bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x1428347d0 '__SVInt32_t'
|-TypedefDecl 0x14380bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x1428347f0 '__SVInt64_t'
|-TypedefDecl 0x14380c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x142834810 '__SVUint8_t'
|-TypedefDecl 0x14380c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x142834830 '__SVUint16_t'
|-TypedefDecl 0x14380c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x142834850 '__SVUint32_t'
|-TypedefDecl 0x14380c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x142834870 '__SVUint64_t'
|-TypedefDecl 0x14380c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x142834890 '__SVFloat16_t'
|-TypedefDecl 0x14380c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x1428348b0 '__SVFloat32_t'
|-TypedefDecl 0x14380c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x1428348d0 '__SVFloat64_t'
|-TypedefDecl 0x14380c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x1428348f0 '__SVBfloat16_t'
|-TypedefDecl 0x14380c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x142834910 '__clang_svint8x2_t'
|-TypedefDecl 0x14380c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x142834930 '__clang_svint16x2_t'
|-TypedefDecl 0x14380c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x142834950 '__clang_svint32x2_t'
|-TypedefDecl 0x14380c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x142834970 '__clang_svint64x2_t'
|-TypedefDecl 0x14380c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x142834990 '__clang_svuint8x2_t'
|-TypedefDecl 0x14380c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x1428349b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14380c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x1428349d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14380c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x1428349f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14380c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x142834a10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14380c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x142834a30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14380c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x142834a50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14380c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x142834a70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14380c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x142834a90 '__clang_svint8x3_t'
|-TypedefDecl 0x14380c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x142834ab0 '__clang_svint16x3_t'
|-TypedefDecl 0x14380c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x142834ad0 '__clang_svint32x3_t'
|-TypedefDecl 0x14380c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x142834af0 '__clang_svint64x3_t'
|-TypedefDecl 0x14380c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x142834b10 '__clang_svuint8x3_t'
|-TypedefDecl 0x14380ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x142834b30 '__clang_svuint16x3_t'
|-TypedefDecl 0x14380cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x142834b50 '__clang_svuint32x3_t'
|-TypedefDecl 0x14380cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x142834b70 '__clang_svuint64x3_t'
|-TypedefDecl 0x14380cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x142834b90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14380d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x142834bb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14380d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x142834bd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14380d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x142834bf0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14380d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x142834c10 '__clang_svint8x4_t'
|-TypedefDecl 0x14380d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x142834c30 '__clang_svint16x4_t'
|-TypedefDecl 0x14380d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x142834c50 '__clang_svint32x4_t'
|-TypedefDecl 0x14380d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x142834c70 '__clang_svint64x4_t'
|-TypedefDecl 0x14380d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x142834c90 '__clang_svuint8x4_t'
|-TypedefDecl 0x14380d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x142834cb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14380d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x142834cd0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14380d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x142834cf0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14380d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x142834d10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14380d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x142834d30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14380d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x142834d50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14380d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x142834d70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14380da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x142834d90 '__SVBool_t'
|-TypedefDecl 0x14380da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x142834db0 '__clang_svboolx2_t'
|-TypedefDecl 0x14380dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x142834dd0 '__clang_svboolx4_t'
|-TypedefDecl 0x14380db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x142834df0 '__SVCount_t'
|-TypedefDecl 0x14380dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14380dbb0 'char *'
|   `-BuiltinType 0x1428340b0 'char'
|-TypedefDecl 0x14380dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14380dbb0 'char *'
|   `-BuiltinType 0x1428340b0 'char'
|-FunctionDecl 0x1438269c8 <dataset_diviso_filec/func15998_vuln.c:1:1, line:63:1> line:1:5 fscrypt_setup_filename 'int (struct inode *, const struct qstr *, int, struct fscrypt_name *)'
| |-ParmVarDecl 0x14380e248 <col:28, col:42> col:42 used dir 'struct inode *'
| |-ParmVarDecl 0x143826628 <col:47, col:66> col:66 used iname 'const struct qstr *'
| |-ParmVarDecl 0x1438266a8 <line:2:10, col:14> col:14 used lookup 'int'
| |-ParmVarDecl 0x143826878 <col:22, col:43> col:43 used fname 'struct fscrypt_name *'
| `-CompoundStmt 0x14382ce90 <line:3:1, line:63:1>
|   |-DeclStmt 0x143826c30 <line:4:2, col:26>
|   | |-VarDecl 0x143826af0 <col:2, col:12> col:6 used ret 'int' cinit
|   | | `-IntegerLiteral 0x143826b58 <col:12> 'int' 0
|   | `-VarDecl 0x143826b90 <col:2, col:25> col:15 used bigname 'int' cinit
|   |   `-IntegerLiteral 0x143826bf8 <col:25> 'int' 0
|   |-BinaryOperator 0x143827020 <line:7:2, col:21> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x143826fd8 <col:2, col:9> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x143826fa0 <col:2> 'struct fscrypt_name *' lvalue ParmVar 0x143826878 'fname' 'struct fscrypt_name *'
|   | `-DeclRefExpr 0x143827000 <col:21> 'const struct qstr *' lvalue ParmVar 0x143826628 'iname' 'const struct qstr *'
|   |-IfStmt 0x143829ad8 <line:9:2, line:14:2>
|   | |-BinaryOperator 0x143827388 <line:9:6, line:10:32> 'int' contains-errors '||'
|   | | |-UnaryOperator 0x143827178 <line:9:6, col:41> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | | `-CallExpr 0x143827150 <col:7, col:41> '<dependent type>' contains-errors
|   | | |   |-CXXDependentScopeMemberExpr 0x1438270e8 <col:7, col:25> '<dependent type>' contains-errors lvalue ->is_encrypted
|   | | |   | `-CXXDependentScopeMemberExpr 0x1438270a0 <col:7, col:18> '<dependent type>' contains-errors lvalue ->s_cop
|   | | |   |   `-RecoveryExpr 0x143827078 <col:7, col:12> '<dependent type>' contains-errors lvalue
|   | | |   |     `-DeclRefExpr 0x143827040 <col:7> 'struct inode *' lvalue ParmVar 0x14380e248 'dir' 'struct inode *'
|   | | |   `-DeclRefExpr 0x143827130 <col:38> 'struct inode *' lvalue ParmVar 0x14380e248 'dir' 'struct inode *'
|   | | `-CallExpr 0x143827348 <line:10:5, col:32> 'int'
|   | |   |-ImplicitCastExpr 0x143827330 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x1438272c0 <col:5> 'int ()' Function 0x143827208 'fscrypt_is_dot_dotdot' 'int ()'
|   | |   `-ImplicitCastExpr 0x143827370 <col:27> 'const struct qstr *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x1438272e0 <col:27> 'const struct qstr *' lvalue ParmVar 0x143826628 'iname' 'const struct qstr *'
|   | `-CompoundStmt 0x143829ab0 <col:35, line:14:2>
|   |   |-BinaryOperator 0x143827520 <line:11:3, col:51> '<dependent type>' contains-errors '='
|   |   | |-CXXDependentScopeMemberExpr 0x143827408 <col:3, col:20> '<dependent type>' contains-errors lvalue .name
|   |   | | `-RecoveryExpr 0x1438273e0 <col:3, col:10> '<dependent type>' contains-errors lvalue
|   |   | |   `-DeclRefExpr 0x1438273a8 <col:3> 'struct fscrypt_name *' lvalue ParmVar 0x143826878 'fname' 'struct fscrypt_name *'
|   |   | `-CStyleCastExpr 0x1438274f8 <col:27, col:51> 'unsigned char *' contains-errors <Dependent>
|   |   |   `-RecoveryExpr 0x143827488 <col:44, col:51> '<dependent type>' contains-errors lvalue
|   |   |     `-DeclRefExpr 0x143827450 <col:44> 'const struct qstr *' lvalue ParmVar 0x143826628 'iname' 'const struct qstr *'
|   |   |-BinaryOperator 0x143829a60 <line:12:3, col:33> '<dependent type>' contains-errors '='
|   |   | |-CXXDependentScopeMemberExpr 0x1438275a0 <col:3, col:20> '<dependent type>' contains-errors lvalue .len
|   |   | | `-RecoveryExpr 0x143827578 <col:3, col:10> '<dependent type>' contains-errors lvalue
|   |   | |   `-DeclRefExpr 0x143827540 <col:3> 'struct fscrypt_name *' lvalue ParmVar 0x143826878 'fname' 'struct fscrypt_name *'
|   |   | `-RecoveryExpr 0x143829a38 <col:26, col:33> '<dependent type>' contains-errors lvalue
|   |   |   `-DeclRefExpr 0x143829a00 <col:26> 'const struct qstr *' lvalue ParmVar 0x143826628 'iname' 'const struct qstr *'
|   |   `-ReturnStmt 0x143829aa0 <line:13:3, col:10>
|   |     `-IntegerLiteral 0x143829a80 <col:10> 'int' 0
|   |-BinaryOperator 0x143829c90 <line:15:2, col:34> 'int' '='
|   | |-DeclRefExpr 0x143829af8 <col:2> 'int' lvalue Var 0x143826af0 'ret' 'int'
|   | `-CallExpr 0x143829c50 <col:8, col:34> 'int'
|   |   |-ImplicitCastExpr 0x143829c38 <col:8> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x143829bf8 <col:8> 'int ()' Function 0x143829b40 'fscrypt_get_crypt_info' 'int ()'
|   |   `-ImplicitCastExpr 0x143829c78 <col:31> 'struct inode *' <LValueToRValue>
|   |     `-DeclRefExpr 0x143829c18 <col:31> 'struct inode *' lvalue ParmVar 0x14380e248 'dir' 'struct inode *'
|   |-IfStmt 0x143829e50 <line:16:2, line:17:10>
|   | |-BinaryOperator 0x143829de8 <line:16:6, col:21> 'int' contains-errors '&&'
|   | | |-DeclRefExpr 0x143829cb0 <col:6> 'int' lvalue Var 0x143826af0 'ret' 'int'
|   | | `-BinaryOperator 0x143829dc8 <col:13, col:21> 'int' contains-errors '!='
|   | |   |-DeclRefExpr 0x143829cd0 <col:13> 'int' lvalue Var 0x143826af0 'ret' 'int'
|   | |   `-UnaryOperator 0x143829db0 <col:20, col:21> '<dependent type>' contains-errors prefix '-' cannot overflow
|   | |     `-ImplicitCastExpr 0x143829d98 <col:21> '<dependent type>' contains-errors <LValueToRValue>
|   | |       `-RecoveryExpr 0x143829d78 <col:21> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x143829e40 <line:17:3, col:10>
|   |   `-ImplicitCastExpr 0x143829e28 <col:10> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x143829e08 <col:10> 'int' lvalue Var 0x143826af0 'ret' 'int'
|   |-IfStmt 0x14382a828 <line:19:2, line:30:2>
|   | |-RecoveryExpr 0x143829ea8 <line:19:6, col:11> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x143829e70 <col:6> 'struct inode *' lvalue ParmVar 0x14380e248 'dir' 'struct inode *'
|   | `-CompoundStmt 0x14382a7e0 <col:25, line:30:2>
|   |   |-BinaryOperator 0x14382a120 <line:20:3, line:21:26> 'int' contains-errors '='
|   |   | |-DeclRefExpr 0x143829ed0 <line:20:3> 'int' lvalue Var 0x143826af0 'ret' 'int'
|   |   | `-CallExpr 0x14382a0e8 <col:9, line:21:26> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x143829fd0 <line:20:9> 'int ()' Function 0x143829f18 'fscrypt_fname_alloc_buffer' 'int ()'
|   |   |   |-DeclRefExpr 0x143829ff0 <col:36> 'struct inode *' lvalue ParmVar 0x14380e248 'dir' 'struct inode *'
|   |   |   |-RecoveryExpr 0x14382a048 <col:41, col:48> '<dependent type>' contains-errors lvalue
|   |   |   | `-DeclRefExpr 0x14382a010 <col:41> 'const struct qstr *' lvalue ParmVar 0x143826628 'iname' 'const struct qstr *'
|   |   |   `-UnaryOperator 0x14382a0d0 <line:21:8, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   |     `-RecoveryExpr 0x14382a0a8 <col:9, col:16> '<dependent type>' contains-errors lvalue
|   |   |       `-DeclRefExpr 0x14382a070 <col:9> 'struct fscrypt_name *' lvalue ParmVar 0x143826878 'fname' 'struct fscrypt_name *'
|   |   |-IfStmt 0x14382a1c0 <line:22:3, line:23:11>
|   |   | |-ImplicitCastExpr 0x14382a160 <line:22:7> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x14382a140 <col:7> 'int' lvalue Var 0x143826af0 'ret' 'int'
|   |   | `-ReturnStmt 0x14382a1b0 <line:23:4, col:11>
|   |   |   `-ImplicitCastExpr 0x14382a198 <col:11> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x14382a178 <col:11> 'int' lvalue Var 0x143826af0 'ret' 'int'
|   |   |-BinaryOperator 0x14382a3f0 <line:24:3, col:53> 'int' contains-errors '='
|   |   | |-DeclRefExpr 0x14382a1e0 <col:3> 'int' lvalue Var 0x143826af0 'ret' 'int'
|   |   | `-CallExpr 0x14382a3b8 <col:9, col:53> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x14382a2e0 <col:9> 'int ()' Function 0x14382a228 'fname_encrypt' 'int ()'
|   |   |   |-DeclRefExpr 0x14382a300 <col:23> 'struct inode *' lvalue ParmVar 0x14380e248 'dir' 'struct inode *'
|   |   |   |-DeclRefExpr 0x14382a320 <col:28> 'const struct qstr *' lvalue ParmVar 0x143826628 'iname' 'const struct qstr *'
|   |   |   `-UnaryOperator 0x14382a3a0 <col:35, col:43> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   |     `-RecoveryExpr 0x14382a378 <col:36, col:43> '<dependent type>' contains-errors lvalue
|   |   |       `-DeclRefExpr 0x14382a340 <col:36> 'struct fscrypt_name *' lvalue ParmVar 0x143826878 'fname' 'struct fscrypt_name *'
|   |   |-IfStmt 0x14382a4b0 <line:25:3, line:26:9>
|   |   | |-ImplicitCastExpr 0x14382a430 <line:25:7> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x14382a410 <col:7> 'int' lvalue Var 0x143826af0 'ret' 'int'
|   |   | `-GotoStmt 0x14382a498 <line:26:4, col:9> 'errout' 0x14382a448
|   |   |-BinaryOperator 0x14382a620 <line:27:3, col:45> '<dependent type>' contains-errors '='
|   |   | |-CXXDependentScopeMemberExpr 0x14382a530 <col:3, col:20> '<dependent type>' contains-errors lvalue .name
|   |   | | `-RecoveryExpr 0x14382a508 <col:3, col:10> '<dependent type>' contains-errors lvalue
|   |   | |   `-DeclRefExpr 0x14382a4d0 <col:3> 'struct fscrypt_name *' lvalue ParmVar 0x143826878 'fname' 'struct fscrypt_name *'
|   |   | `-CXXDependentScopeMemberExpr 0x14382a5d8 <col:27, col:45> '<dependent type>' contains-errors lvalue .name
|   |   |   `-RecoveryExpr 0x14382a5b0 <col:27, col:34> '<dependent type>' contains-errors lvalue
|   |   |     `-DeclRefExpr 0x14382a578 <col:27> 'struct fscrypt_name *' lvalue ParmVar 0x143826878 'fname' 'struct fscrypt_name *'
|   |   |-BinaryOperator 0x14382a790 <line:28:3, col:44> '<dependent type>' contains-errors '='
|   |   | |-CXXDependentScopeMemberExpr 0x14382a6a0 <col:3, col:20> '<dependent type>' contains-errors lvalue .len
|   |   | | `-RecoveryExpr 0x14382a678 <col:3, col:10> '<dependent type>' contains-errors lvalue
|   |   | |   `-DeclRefExpr 0x14382a640 <col:3> 'struct fscrypt_name *' lvalue ParmVar 0x143826878 'fname' 'struct fscrypt_name *'
|   |   | `-CXXDependentScopeMemberExpr 0x14382a748 <col:26, col:44> '<dependent type>' contains-errors lvalue .len
|   |   |   `-RecoveryExpr 0x14382a720 <col:26, col:33> '<dependent type>' contains-errors lvalue
|   |   |     `-DeclRefExpr 0x14382a6e8 <col:26> 'struct fscrypt_name *' lvalue ParmVar 0x143826878 'fname' 'struct fscrypt_name *'
|   |   `-ReturnStmt 0x14382a7d0 <line:29:3, col:10>
|   |     `-IntegerLiteral 0x14382a7b0 <col:10> 'int' 0
|   |-IfStmt 0x14382b800 <line:35:2, line:36:13>
|   | |-BinaryOperator 0x14382a968 <line:35:6, col:24> 'int' contains-errors '=='
|   | | |-ArraySubscriptExpr 0x14382a930 <col:6, col:19> '<dependent type>' contains-errors lvalue
|   | | | |-ImplicitCastExpr 0x14382a918 <col:6, col:13> '<dependent type>' contains-errors <LValueToRValue>
|   | | | | `-RecoveryExpr 0x14382a8d0 <col:6, col:13> '<dependent type>' contains-errors lvalue
|   | | | |   `-DeclRefExpr 0x14382a898 <col:6> 'const struct qstr *' lvalue ParmVar 0x143826628 'iname' 'const struct qstr *'
|   | | | `-IntegerLiteral 0x14382a8f8 <col:18> 'int' 0
|   | | `-CharacterLiteral 0x14382a950 <col:24> 'int' 95
|   | `-BinaryOperator 0x14382a9c8 <line:36:3, col:13> 'int' '='
|   |   |-DeclRefExpr 0x14382a988 <col:3> 'int' lvalue Var 0x143826b90 'bigname' 'int'
|   |   `-IntegerLiteral 0x14382a9a8 <col:13> 'int' 1
|   |-BinaryOperator 0x14382c080 <line:44:2, line:45:27> 'int' contains-errors '='
|   | |-DeclRefExpr 0x14382bd40 <line:44:2> 'int' lvalue Var 0x143826af0 'ret' 'int'
|   | `-CallExpr 0x14382c048 <col:8, line:45:27> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x14382be40 <line:44:8> 'int ()' Function 0x14382bd88 'digest_decode' 'int ()'
|   |   |-BinaryOperator 0x14382bee0 <col:22, col:36> '<dependent type>' contains-errors '+'
|   |   | |-RecoveryExpr 0x14382be98 <col:22, col:29> '<dependent type>' contains-errors lvalue
|   |   | | `-DeclRefExpr 0x14382be60 <col:22> 'const struct qstr *' lvalue ParmVar 0x143826628 'iname' 'const struct qstr *'
|   |   | `-DeclRefExpr 0x14382bec0 <col:36> 'int' lvalue Var 0x143826b90 'bigname' 'int'
|   |   |-BinaryOperator 0x14382bf80 <col:45, col:58> '<dependent type>' contains-errors '-'
|   |   | |-RecoveryExpr 0x14382bf38 <col:45, col:52> '<dependent type>' contains-errors lvalue
|   |   | | `-DeclRefExpr 0x14382bf00 <col:45> 'const struct qstr *' lvalue ParmVar 0x143826628 'iname' 'const struct qstr *'
|   |   | `-DeclRefExpr 0x14382bf60 <col:58> 'int' lvalue Var 0x143826b90 'bigname' 'int'
|   |   `-CXXDependentScopeMemberExpr 0x14382c000 <line:45:5, col:23> '<dependent type>' contains-errors lvalue .name
|   |     `-RecoveryExpr 0x14382bfd8 <col:5, col:12> '<dependent type>' contains-errors lvalue
|   |       `-DeclRefExpr 0x14382bfa0 <col:5> 'struct fscrypt_name *' lvalue ParmVar 0x143826878 'fname' 'struct fscrypt_name *'
|   |-IfStmt 0x14382c168 <line:46:2, line:49:2>
|   | |-BinaryOperator 0x14382c0f8 <line:46:6, col:12> 'int' '<'
|   | | |-ImplicitCastExpr 0x14382c0e0 <col:6> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x14382c0a0 <col:6> 'int' lvalue Var 0x143826af0 'ret' 'int'
|   | | `-IntegerLiteral 0x14382c0c0 <col:12> 'int' 0
|   | `-CompoundStmt 0x14382c150 <col:15, line:49:2>
|   |   `-GotoStmt 0x14382c138 <line:48:3, col:8> 'errout' 0x14382a448
|   |-BinaryOperator 0x14382c250 <line:50:2, col:26> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x14382c1e8 <col:2, col:20> '<dependent type>' contains-errors lvalue .len
|   | | `-RecoveryExpr 0x14382c1c0 <col:2, col:9> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x14382c188 <col:2> 'struct fscrypt_name *' lvalue ParmVar 0x143826878 'fname' 'struct fscrypt_name *'
|   | `-DeclRefExpr 0x14382c230 <col:26> 'int' lvalue Var 0x143826af0 'ret' 'int'
|   |-IfStmt 0x14382cc28 <line:51:2, line:57:2> has_else
|   | |-ImplicitCastExpr 0x14382c290 <line:51:6> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x14382c270 <col:6> 'int' lvalue Var 0x143826b90 'bigname' 'int'
|   | |-CompoundStmt 0x14382c908 <col:15, line:54:2>
|   | | |-CallExpr 0x14382c6f0 <line:52:3, col:49> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x14382c578 <col:3> 'void *(void *, const void *, unsigned long)' Function 0x14382c328 'memcpy' 'void *(void *, const void *, unsigned long)'
|   | | | |-UnaryOperator 0x14382c5f8 <col:10, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | | | `-RecoveryExpr 0x14382c5d0 <col:11, col:18> '<dependent type>' contains-errors lvalue
|   | | | |   `-DeclRefExpr 0x14382c598 <col:11> 'struct fscrypt_name *' lvalue ParmVar 0x143826878 'fname' 'struct fscrypt_name *'
|   | | | |-CXXDependentScopeMemberExpr 0x14382c670 <col:24, col:42> '<dependent type>' contains-errors lvalue .name
|   | | | | `-RecoveryExpr 0x14382c648 <col:24, col:31> '<dependent type>' contains-errors lvalue
|   | | | |   `-DeclRefExpr 0x14382c610 <col:24> 'struct fscrypt_name *' lvalue ParmVar 0x143826878 'fname' 'struct fscrypt_name *'
|   | | | `-IntegerLiteral 0x14382c6b8 <col:48> 'int' 4
|   | | `-CallExpr 0x14382c8d0 <line:53:3, col:59> '<dependent type>' contains-errors
|   | |   |-DeclRefExpr 0x14382c728 <col:3> 'void *(void *, const void *, unsigned long)' Function 0x14382c328 'memcpy' 'void *(void *, const void *, unsigned long)'
|   | |   |-UnaryOperator 0x14382c7a8 <col:10, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | |   | `-RecoveryExpr 0x14382c780 <col:11, col:18> '<dependent type>' contains-errors lvalue
|   | |   |   `-DeclRefExpr 0x14382c748 <col:11> 'struct fscrypt_name *' lvalue ParmVar 0x143826878 'fname' 'struct fscrypt_name *'
|   | |   |-BinaryOperator 0x14382c890 <col:30, col:55> '<dependent type>' contains-errors '+'
|   | |   | |-CXXDependentScopeMemberExpr 0x14382c828 <col:30, col:48> '<dependent type>' contains-errors lvalue .name
|   | |   | | `-RecoveryExpr 0x14382c800 <col:30, col:37> '<dependent type>' contains-errors lvalue
|   | |   | |   `-DeclRefExpr 0x14382c7c0 <col:30> 'struct fscrypt_name *' lvalue ParmVar 0x143826878 'fname' 'struct fscrypt_name *'
|   | |   | `-IntegerLiteral 0x14382c870 <col:55> 'int' 4
|   | |   `-IntegerLiteral 0x14382c8b0 <col:58> 'int' 4
|   | `-CompoundStmt 0x14382cc08 <line:54:9, line:57:2>
|   |   |-BinaryOperator 0x14382ca78 <line:55:3, col:45> '<dependent type>' contains-errors '='
|   |   | |-CXXDependentScopeMemberExpr 0x14382c988 <col:3, col:20> '<dependent type>' contains-errors lvalue .name
|   |   | | `-RecoveryExpr 0x14382c960 <col:3, col:10> '<dependent type>' contains-errors lvalue
|   |   | |   `-DeclRefExpr 0x14382c928 <col:3> 'struct fscrypt_name *' lvalue ParmVar 0x143826878 'fname' 'struct fscrypt_name *'
|   |   | `-CXXDependentScopeMemberExpr 0x14382ca30 <col:27, col:45> '<dependent type>' contains-errors lvalue .name
|   |   |   `-RecoveryExpr 0x14382ca08 <col:27, col:34> '<dependent type>' contains-errors lvalue
|   |   |     `-DeclRefExpr 0x14382c9d0 <col:27> 'struct fscrypt_name *' lvalue ParmVar 0x143826878 'fname' 'struct fscrypt_name *'
|   |   `-BinaryOperator 0x14382cbe8 <line:56:3, col:44> '<dependent type>' contains-errors '='
|   |     |-CXXDependentScopeMemberExpr 0x14382caf8 <col:3, col:20> '<dependent type>' contains-errors lvalue .len
|   |     | `-RecoveryExpr 0x14382cad0 <col:3, col:10> '<dependent type>' contains-errors lvalue
|   |     |   `-DeclRefExpr 0x14382ca98 <col:3> 'struct fscrypt_name *' lvalue ParmVar 0x143826878 'fname' 'struct fscrypt_name *'
|   |     `-CXXDependentScopeMemberExpr 0x14382cba0 <col:26, col:44> '<dependent type>' contains-errors lvalue .len
|   |       `-RecoveryExpr 0x14382cb78 <col:26, col:33> '<dependent type>' contains-errors lvalue
|   |         `-DeclRefExpr 0x14382cb40 <col:26> 'struct fscrypt_name *' lvalue ParmVar 0x143826878 'fname' 'struct fscrypt_name *'
|   |-ReturnStmt 0x14382cc78 <line:58:2, col:9>
|   | `-IntegerLiteral 0x14382cc58 <col:9> 'int' 0
|   |-LabelStmt 0x14382ce28 <line:60:1, line:61:46> 'errout'
|   | `-CallExpr 0x14382ce00 <col:2, col:46> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x14382cd68 <col:2> 'int ()' Function 0x14382ccb0 'fscrypt_fname_free_buffer' 'int ()'
|   |   `-UnaryOperator 0x14382cde8 <col:28, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     `-RecoveryExpr 0x14382cdc0 <col:29, col:36> '<dependent type>' contains-errors lvalue
|   |       `-DeclRefExpr 0x14382cd88 <col:29> 'struct fscrypt_name *' lvalue ParmVar 0x143826878 'fname' 'struct fscrypt_name *'
|   `-ReturnStmt 0x14382ce80 <line:62:2, col:9>
|     `-ImplicitCastExpr 0x14382ce68 <col:9> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x14382ce48 <col:9> 'int' lvalue Var 0x143826af0 'ret' 'int'
|-FunctionDecl 0x143826c98 <line:6:2> col:2 implicit used memset 'void *(void *, int, unsigned long)' extern
| |-ParmVarDecl 0x143826d98 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x143826e00 <<invalid sloc>> <invalid sloc> 'int'
| |-ParmVarDecl 0x143826e68 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x143826d40 <<invalid sloc>> Implicit 900
`-FunctionDecl 0x14382c328 <line:52:3> col:3 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x14382c428 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x14382c490 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x14382c4f8 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x14382c3d0 <<invalid sloc>> Implicit 882
