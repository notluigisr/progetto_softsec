TranslationUnitDecl 0x121855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1218564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x121855bd0 '__int128'
|-TypedefDecl 0x121856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x121855bf0 'unsigned __int128'
|-TypedefDecl 0x12200be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12200bc00 'struct __NSConstantString_tag'
|   `-Record 0x121856580 '__NSConstantString_tag'
|-TypedefDecl 0x12200be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x121855d90 '__SVInt8_t'
|-TypedefDecl 0x12200bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x121855db0 '__SVInt16_t'
|-TypedefDecl 0x12200bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x121855dd0 '__SVInt32_t'
|-TypedefDecl 0x12200bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x121855df0 '__SVInt64_t'
|-TypedefDecl 0x12200c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x121855e10 '__SVUint8_t'
|-TypedefDecl 0x12200c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x121855e30 '__SVUint16_t'
|-TypedefDecl 0x12200c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x121855e50 '__SVUint32_t'
|-TypedefDecl 0x12200c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x121855e70 '__SVUint64_t'
|-TypedefDecl 0x12200c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x121855e90 '__SVFloat16_t'
|-TypedefDecl 0x12200c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x121855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12200c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x121855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12200c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x121855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12200c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x121855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12200c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x121855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12200c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x121855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12200c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x121855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12200c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x121855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12200c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x121855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12200c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x121855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12200c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x121855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12200c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x121856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12200c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x121856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12200c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x121856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12200c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x121856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12200c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x121856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12200c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1218560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12200c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1218560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12200c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1218560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12200c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x121856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12200ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x121856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12200cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x121856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12200cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x121856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12200cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x121856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12200d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1218561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12200d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1218561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12200d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1218561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12200d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x121856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12200d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x121856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12200d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x121856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12200d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x121856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12200d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x121856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12200d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1218562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12200d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1218562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12200d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1218562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12200d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x121856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12200d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x121856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12200d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x121856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12200d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x121856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12200da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x121856390 '__SVBool_t'
|-TypedefDecl 0x12200da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1218563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12200dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1218563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12200db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1218563f0 '__SVCount_t'
|-TypedefDecl 0x12200dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12200dbb0 'char *'
|   `-BuiltinType 0x1218556b0 'char'
|-TypedefDecl 0x12200dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12200dbb0 'char *'
|   `-BuiltinType 0x1218556b0 'char'
|-FunctionDecl 0x12200df18 <dataset_diviso_filec/func7492_vuln.c:1:1, line:40:1> line:1:8 invalid stbl_AppendSize 'int (int *, int, int)'
| |-ParmVarDecl 0x12200dd28 <col:24, col:43> col:43 referenced invalid stbl 'int *'
| |-ParmVarDecl 0x12200dda8 <col:49, col:53> col:53 invalid size 'int'
| |-ParmVarDecl 0x12200de28 <col:59, col:63> col:63 referenced invalid nb_pack 'int'
| `-CompoundStmt 0x12202a8e8 <line:2:1, line:40:1>
|   |-IfStmt 0x12200e0b0 <line:4:2, col:26>
|   | |-UnaryOperator 0x12200e010 <col:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x12200dff8 <col:7> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x12200dfd8 <col:7> '<dependent type>' contains-errors lvalue
|   | `-BinaryOperator 0x12200e090 <col:16, col:26> '<dependent type>' contains-errors '='
|   |   |-RecoveryExpr 0x12200e048 <col:16> '<dependent type>' contains-errors lvalue
|   |   | `-DeclRefExpr 0x12200e028 <col:16> 'int' lvalue ParmVar 0x12200de28 'nb_pack' 'int'
|   |   `-IntegerLiteral 0x12200e070 <col:26> 'int' 1
|   |-IfStmt 0x122027470 <line:6:2, line:10:2>
|   | |-UnaryOperator 0x12200e198 <line:6:6, col:25> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x12200e180 <col:7, col:25> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-CXXDependentScopeMemberExpr 0x12200e138 <col:7, col:25> '<dependent type>' contains-errors lvalue ->sampleCount
|   | |     `-CXXDependentScopeMemberExpr 0x12200e0f0 <col:7, col:13> '<dependent type>' contains-errors lvalue ->SampleSize
|   | |       `-RecoveryExpr 0x12200e0d0 <col:7> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x122027448 <col:38, line:10:2>
|   |   |-BinaryOperator 0x12200e2a8 <line:7:3, col:34> '<dependent type>' contains-errors '='
|   |   | |-CXXDependentScopeMemberExpr 0x12200e240 <col:3, col:21> '<dependent type>' contains-errors lvalue ->sampleSize
|   |   | | `-CXXDependentScopeMemberExpr 0x12200e1f8 <col:3, col:9> '<dependent type>' contains-errors lvalue ->SampleSize
|   |   | |   `-RecoveryExpr 0x12200e1d0 <col:3> '<dependent type>' contains-errors lvalue
|   |   | |     `-DeclRefExpr 0x12200e1b0 <col:3> 'int *' lvalue ParmVar 0x12200dd28 'stbl' 'int *'
|   |   | `-RecoveryExpr 0x12200e288 <col:34> '<dependent type>' contains-errors lvalue
|   |   |-CompoundAssignOperator 0x12200e3c0 <line:8:3, col:36> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |   | |-CXXDependentScopeMemberExpr 0x12200e358 <col:3, col:21> '<dependent type>' contains-errors lvalue ->sampleCount
|   |   | | `-CXXDependentScopeMemberExpr 0x12200e310 <col:3, col:9> '<dependent type>' contains-errors lvalue ->SampleSize
|   |   | |   `-RecoveryExpr 0x12200e2e8 <col:3> '<dependent type>' contains-errors lvalue
|   |   | |     `-DeclRefExpr 0x12200e2c8 <col:3> 'int *' lvalue ParmVar 0x12200dd28 'stbl' 'int *'
|   |   | `-RecoveryExpr 0x12200e3a0 <col:36> '<dependent type>' contains-errors lvalue
|   |   `-ReturnStmt 0x122027438 <line:9:3, col:10>
|   |     `-RecoveryExpr 0x122027418 <col:10> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x122027800 <line:11:2, line:14:2>
|   | |-BinaryOperator 0x122027650 <line:11:6, col:73> 'int' contains-errors '&&'
|   | | |-CXXDependentScopeMemberExpr 0x1220274f8 <col:6, col:24> '<dependent type>' contains-errors lvalue ->sampleSize
|   | | | `-CXXDependentScopeMemberExpr 0x1220274b0 <col:6, col:12> '<dependent type>' contains-errors lvalue ->SampleSize
|   | | |   `-RecoveryExpr 0x122027490 <col:6> '<dependent type>' contains-errors lvalue
|   | | `-ParenExpr 0x122027630 <col:38, col:73> 'int' contains-errors
|   | |   `-BinaryOperator 0x122027610 <col:39, col:69> 'int' contains-errors '=='
|   | |     |-CXXDependentScopeMemberExpr 0x1220275a8 <col:39, col:57> '<dependent type>' contains-errors lvalue ->sampleSize
|   | |     | `-CXXDependentScopeMemberExpr 0x122027560 <col:39, col:45> '<dependent type>' contains-errors lvalue ->SampleSize
|   | |     |   `-RecoveryExpr 0x122027540 <col:39> '<dependent type>' contains-errors lvalue
|   | |     `-RecoveryExpr 0x1220275f0 <col:69> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x1220277e0 <col:76, line:14:2>
|   |   |-CompoundAssignOperator 0x122027768 <line:12:3, col:36> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |   | |-CXXDependentScopeMemberExpr 0x122027700 <col:3, col:21> '<dependent type>' contains-errors lvalue ->sampleCount
|   |   | | `-CXXDependentScopeMemberExpr 0x1220276b8 <col:3, col:9> '<dependent type>' contains-errors lvalue ->SampleSize
|   |   | |   `-RecoveryExpr 0x122027690 <col:3> '<dependent type>' contains-errors lvalue
|   |   | |     `-DeclRefExpr 0x122027670 <col:3> 'int *' lvalue ParmVar 0x12200dd28 'stbl' 'int *'
|   |   | `-RecoveryExpr 0x122027748 <col:36> '<dependent type>' contains-errors lvalue
|   |   `-ReturnStmt 0x1220277d0 <line:13:3, col:10>
|   |     `-RecoveryExpr 0x1220277b0 <col:10> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x1220293d8 <line:15:2, line:29:2>
|   | |-BinaryOperator 0x122027ae0 <line:15:6, col:103> 'int' contains-errors '||'
|   | | |-UnaryOperator 0x1220278e8 <col:6, col:25> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | | `-ImplicitCastExpr 0x1220278d0 <col:7, col:25> '<dependent type>' contains-errors <LValueToRValue>
|   | | |   `-CXXDependentScopeMemberExpr 0x122027888 <col:7, col:25> '<dependent type>' contains-errors lvalue ->sizes
|   | | |     `-CXXDependentScopeMemberExpr 0x122027840 <col:7, col:13> '<dependent type>' contains-errors lvalue ->SampleSize
|   | | |       `-RecoveryExpr 0x122027820 <col:7> '<dependent type>' contains-errors lvalue
|   | | `-ParenExpr 0x122027ac0 <col:34, col:103> 'int' contains-errors
|   | |   `-BinaryOperator 0x122027aa0 <col:35, col:93> 'int' contains-errors '>'
|   | |     |-BinaryOperator 0x1220279d0 <col:35, col:65> '<dependent type>' contains-errors '+'
|   | |     | |-CXXDependentScopeMemberExpr 0x122027968 <col:35, col:53> '<dependent type>' contains-errors lvalue ->sampleCount
|   | |     | | `-CXXDependentScopeMemberExpr 0x122027920 <col:35, col:41> '<dependent type>' contains-errors lvalue ->SampleSize
|   | |     | |   `-RecoveryExpr 0x122027900 <col:35> '<dependent type>' contains-errors lvalue
|   | |     | `-RecoveryExpr 0x1220279b0 <col:65> '<dependent type>' contains-errors lvalue
|   | |     `-CXXDependentScopeMemberExpr 0x122027a58 <col:75, col:93> '<dependent type>' contains-errors lvalue ->alloc_size
|   | |       `-CXXDependentScopeMemberExpr 0x122027a10 <col:75, col:81> '<dependent type>' contains-errors lvalue ->SampleSize
|   | |         `-RecoveryExpr 0x1220279f0 <col:75> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x1220293a0 <col:106, line:29:2>
|   |   |-DeclStmt 0x122027ca0 <line:16:3, col:60>
|   |   | `-VarDecl 0x122027b10 <col:3, col:8> col:8 used init_table '_Bool'
|   |   |-CallExpr 0x122027ee0 <line:17:3, col:41> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x122027e10 <col:3> 'int ()' Function 0x122027d58 'ALLOC_INC' 'int ()'
|   |   | `-CXXDependentScopeMemberExpr 0x122027e98 <col:13, col:31> '<dependent type>' contains-errors lvalue ->alloc_size
|   |   |   `-CXXDependentScopeMemberExpr 0x122027e50 <col:13, col:19> '<dependent type>' contains-errors lvalue ->SampleSize
|   |   |     `-RecoveryExpr 0x122027e30 <col:13> '<dependent type>' contains-errors lvalue
|   |   |-IfStmt 0x1220282b0 <line:18:3, line:19:65>
|   |   | |-BinaryOperator 0x1220280a8 <line:18:7, col:65> 'int' contains-errors '>'
|   |   | | |-BinaryOperator 0x122027fd8 <col:7, col:37> '<dependent type>' contains-errors '+'
|   |   | | | |-CXXDependentScopeMemberExpr 0x122027f70 <col:7, col:25> '<dependent type>' contains-errors lvalue ->sampleCount
|   |   | | | | `-CXXDependentScopeMemberExpr 0x122027f28 <col:7, col:13> '<dependent type>' contains-errors lvalue ->SampleSize
|   |   | | | |   `-RecoveryExpr 0x122027f08 <col:7> '<dependent type>' contains-errors lvalue
|   |   | | | `-RecoveryExpr 0x122027fb8 <col:37> '<dependent type>' contains-errors lvalue
|   |   | | `-CXXDependentScopeMemberExpr 0x122028060 <col:47, col:65> '<dependent type>' contains-errors lvalue ->alloc_size
|   |   | |   `-CXXDependentScopeMemberExpr 0x122028018 <col:47, col:53> '<dependent type>' contains-errors lvalue ->SampleSize
|   |   | |     `-RecoveryExpr 0x122027ff8 <col:47> '<dependent type>' contains-errors lvalue
|   |   | `-BinaryOperator 0x122028290 <line:19:4, col:65> '<dependent type>' contains-errors '='
|   |   |   |-CXXDependentScopeMemberExpr 0x122028158 <col:4, col:22> '<dependent type>' contains-errors lvalue ->alloc_size
|   |   |   | `-CXXDependentScopeMemberExpr 0x122028110 <col:4, col:10> '<dependent type>' contains-errors lvalue ->SampleSize
|   |   |   |   `-RecoveryExpr 0x1220280e8 <col:4> '<dependent type>' contains-errors lvalue
|   |   |   |     `-DeclRefExpr 0x1220280c8 <col:4> 'int *' lvalue ParmVar 0x12200dd28 'stbl' 'int *'
|   |   |   `-BinaryOperator 0x122028270 <col:35, col:65> '<dependent type>' contains-errors '+'
|   |   |     |-CXXDependentScopeMemberExpr 0x122028208 <col:35, col:53> '<dependent type>' contains-errors lvalue ->sampleCount
|   |   |     | `-CXXDependentScopeMemberExpr 0x1220281c0 <col:35, col:41> '<dependent type>' contains-errors lvalue ->SampleSize
|   |   |     |   `-RecoveryExpr 0x1220281a0 <col:35> '<dependent type>' contains-errors lvalue
|   |   |     `-RecoveryExpr 0x122028250 <col:65> '<dependent type>' contains-errors lvalue
|   |   |-IfStmt 0x122028508 <line:22:3, col:40>
|   |   | |-UnaryOperator 0x1220284a8 <col:7, col:26> '<dependent type>' contains-errors prefix '!' cannot overflow
|   |   | | `-ImplicitCastExpr 0x122028490 <col:8, col:26> '<dependent type>' contains-errors <LValueToRValue>
|   |   | |   `-CXXDependentScopeMemberExpr 0x122028448 <col:8, col:26> '<dependent type>' contains-errors lvalue ->sizes
|   |   | |     `-CXXDependentScopeMemberExpr 0x122028400 <col:8, col:14> '<dependent type>' contains-errors lvalue ->SampleSize
|   |   | |       `-RecoveryExpr 0x1220283c0 <col:8> '<dependent type>' contains-errors lvalue
|   |   | `-ReturnStmt 0x1220284f8 <col:33, col:40>
|   |   |   `-RecoveryExpr 0x1220284d8 <col:40> '<dependent type>' contains-errors lvalue
|   |   `-IfStmt 0x122029380 <line:25:3, line:28:3>
|   |     |-ImplicitCastExpr 0x122028fd0 <line:25:7> '_Bool' <LValueToRValue>
|   |     | `-DeclRefExpr 0x122028fb0 <col:7> '_Bool' lvalue Var 0x122027b10 'init_table' '_Bool'
|   |     `-CompoundStmt 0x122029370 <col:19, line:28:3>
|   |-BinaryOperator 0x12202a0f8 <line:30:2, col:33> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x12202a090 <col:2, col:20> '<dependent type>' contains-errors lvalue ->sampleSize
|   | | `-CXXDependentScopeMemberExpr 0x12202a048 <col:2, col:8> '<dependent type>' contains-errors lvalue ->SampleSize
|   | |   `-RecoveryExpr 0x12202a020 <col:2> '<dependent type>' contains-errors lvalue
|   | |     `-DeclRefExpr 0x12202a000 <col:2> 'int *' lvalue ParmVar 0x12200dd28 'stbl' 'int *'
|   | `-IntegerLiteral 0x12202a0d8 <col:33> 'int' 0
|   |-CompoundAssignOperator 0x12202a440 <line:34:2, col:35> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   | |-CXXDependentScopeMemberExpr 0x12202a3d8 <col:2, col:20> '<dependent type>' contains-errors lvalue ->sampleCount
|   | | `-CXXDependentScopeMemberExpr 0x12202a390 <col:2, col:8> '<dependent type>' contains-errors lvalue ->SampleSize
|   | |   `-RecoveryExpr 0x12202a368 <col:2> '<dependent type>' contains-errors lvalue
|   | |     `-DeclRefExpr 0x12202a348 <col:2> 'int *' lvalue ParmVar 0x12200dd28 'stbl' 'int *'
|   | `-RecoveryExpr 0x12202a420 <col:35> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x12202a678 <line:35:2, line:36:32>
|   | |-BinaryOperator 0x12202a540 <line:35:6, col:31> 'int' contains-errors '>'
|   | | |-RecoveryExpr 0x12202a470 <col:6> '<dependent type>' contains-errors lvalue
|   | | `-CXXDependentScopeMemberExpr 0x12202a4f8 <col:13, col:31> '<dependent type>' contains-errors lvalue ->max_size
|   | |   `-CXXDependentScopeMemberExpr 0x12202a4b0 <col:13, col:19> '<dependent type>' contains-errors lvalue ->SampleSize
|   | |     `-RecoveryExpr 0x12202a490 <col:13> '<dependent type>' contains-errors lvalue
|   | `-BinaryOperator 0x12202a658 <line:36:3, col:32> '<dependent type>' contains-errors '='
|   |   |-CXXDependentScopeMemberExpr 0x12202a5f0 <col:3, col:21> '<dependent type>' contains-errors lvalue ->max_size
|   |   | `-CXXDependentScopeMemberExpr 0x12202a5a8 <col:3, col:9> '<dependent type>' contains-errors lvalue ->SampleSize
|   |   |   `-RecoveryExpr 0x12202a580 <col:3> '<dependent type>' contains-errors lvalue
|   |   |     `-DeclRefExpr 0x12202a560 <col:3> 'int *' lvalue ParmVar 0x12200dd28 'stbl' 'int *'
|   |   `-RecoveryExpr 0x12202a638 <col:32> '<dependent type>' contains-errors lvalue
|   |-CompoundAssignOperator 0x12202a790 <line:37:2, col:34> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   | |-CXXDependentScopeMemberExpr 0x12202a728 <col:2, col:20> '<dependent type>' contains-errors lvalue ->total_size
|   | | `-CXXDependentScopeMemberExpr 0x12202a6e0 <col:2, col:8> '<dependent type>' contains-errors lvalue ->SampleSize
|   | |   `-RecoveryExpr 0x12202a6b8 <col:2> '<dependent type>' contains-errors lvalue
|   | |     `-DeclRefExpr 0x12202a698 <col:2> 'int *' lvalue ParmVar 0x12200dd28 'stbl' 'int *'
|   | `-RecoveryExpr 0x12202a770 <col:34> '<dependent type>' contains-errors lvalue
|   `-CompoundAssignOperator 0x12202a8b8 <line:38:2, col:37> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|     |-CXXDependentScopeMemberExpr 0x12202a850 <col:2, col:20> '<dependent type>' contains-errors lvalue ->total_samples
|     | `-CXXDependentScopeMemberExpr 0x12202a808 <col:2, col:8> '<dependent type>' contains-errors lvalue ->SampleSize
|     |   `-RecoveryExpr 0x12202a7e0 <col:2> '<dependent type>' contains-errors lvalue
|     |     `-DeclRefExpr 0x12202a7c0 <col:2> 'int *' lvalue ParmVar 0x12200dd28 'stbl' 'int *'
|     `-RecoveryExpr 0x12202a898 <col:37> '<dependent type>' contains-errors lvalue
`-FunctionDecl 0x1220289a0 <line:23:3> col:3 implicit used memset 'void *(void *, int, unsigned long)' extern
  |-ParmVarDecl 0x122028aa0 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x122028b08 <<invalid sloc>> <invalid sloc> 'int'
  |-ParmVarDecl 0x122028b70 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x122028a48 <<invalid sloc>> Implicit 900
