TranslationUnitDecl 0x129055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1290564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x129055bd0 '__int128'
|-TypedefDecl 0x129056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x129055bf0 'unsigned __int128'
|-TypedefDecl 0x12980be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12980bc00 'struct __NSConstantString_tag'
|   `-Record 0x129056580 '__NSConstantString_tag'
|-TypedefDecl 0x12980be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x129055d90 '__SVInt8_t'
|-TypedefDecl 0x12980bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x129055db0 '__SVInt16_t'
|-TypedefDecl 0x12980bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x129055dd0 '__SVInt32_t'
|-TypedefDecl 0x12980bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x129055df0 '__SVInt64_t'
|-TypedefDecl 0x12980c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x129055e10 '__SVUint8_t'
|-TypedefDecl 0x12980c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x129055e30 '__SVUint16_t'
|-TypedefDecl 0x12980c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x129055e50 '__SVUint32_t'
|-TypedefDecl 0x12980c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x129055e70 '__SVUint64_t'
|-TypedefDecl 0x12980c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x129055e90 '__SVFloat16_t'
|-TypedefDecl 0x12980c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x129055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12980c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x129055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12980c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x129055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12980c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x129055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12980c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x129055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12980c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x129055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12980c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x129055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12980c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x129055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12980c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x129055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12980c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x129055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12980c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x129055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12980c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x129056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12980c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x129056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12980c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x129056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12980c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x129056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12980c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x129056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12980c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1290560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12980c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1290560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12980c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1290560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12980c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x129056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12980ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x129056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12980cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x129056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12980cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x129056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12980cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x129056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12980d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1290561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12980d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1290561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12980d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1290561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12980d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x129056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12980d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x129056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12980d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x129056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12980d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x129056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12980d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x129056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12980d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1290562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12980d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1290562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12980d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1290562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12980d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x129056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12980d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x129056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12980d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x129056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12980d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x129056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12980da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x129056390 '__SVBool_t'
|-TypedefDecl 0x12980da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1290563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12980dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1290563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12980db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1290563f0 '__SVCount_t'
|-TypedefDecl 0x12980dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12980dbb0 'char *'
|   `-BuiltinType 0x1290556b0 'char'
|-TypedefDecl 0x12980dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12980dbb0 'char *'
|   `-BuiltinType 0x1290556b0 'char'
`-FunctionDecl 0x12980df18 <dataset_diviso_filec/func23534_nonvuln.c:1:1, line:33:1> line:1:1 invalid gnutls_x509_crt_get_key_usage 'int (int, unsigned int *, unsigned int *)'
  |-ParmVarDecl 0x12980dcf0 <col:31, col:49> col:49 invalid cert 'int'
  |-ParmVarDecl 0x12980dda8 <line:2:10, col:24> col:24 used key_usage 'unsigned int *'
  |-ParmVarDecl 0x12980de28 <line:3:10, col:24> col:24 used critical 'unsigned int *'
  `-CompoundStmt 0x12a809968 <line:4:1, line:33:1>
    |-DeclStmt 0x12980e058 <line:5:2, col:12>
    | `-VarDecl 0x12980dff0 <col:2, col:6> col:6 used result 'int'
    |-IfStmt 0x12980e350 <line:8:2, line:11:2>
    | |-BinaryOperator 0x12980e0e8 <line:8:6, col:14> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x12980e070 <col:6> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x12980e0c8 <col:14> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x12980e330 <col:20, line:11:2>
    |   |-CallExpr 0x12980e2c8 <line:9:3, col:17> 'int'
    |   | `-ImplicitCastExpr 0x12980e2b0 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   |   `-DeclRefExpr 0x12980e260 <col:3> 'int ()' Function 0x12980e1a8 'gnutls_assert' 'int ()'
    |   `-ReturnStmt 0x12980e320 <line:10:3, col:10>
    |     `-RecoveryExpr 0x12980e300 <col:10> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12a808fd0 <line:13:2, line:17:2>
    | |-BinaryOperator 0x12a808f50 <line:13:6, line:15:34> 'int' contains-errors '<'
    | | |-ParenExpr 0x12a808f10 <line:13:6, line:15:30> 'int' contains-errors
    | | | `-BinaryOperator 0x12a808ef0 <line:13:7, line:15:29> 'int' contains-errors '='
    | | |   |-DeclRefExpr 0x12980e370 <line:13:7> 'int' lvalue Var 0x12980dff0 'result' 'int'
    | | |   `-CallExpr 0x12a808ea8 <line:14:7, line:15:29> '<dependent type>' contains-errors
    | | |     |-DeclRefExpr 0x12a808cb8 <line:14:7> 'int ()' Function 0x12a808c00 '_gnutls_x509_crt_get_extension' 'int ()'
    | | |     |-RecoveryExpr 0x12a808cd8 <col:38> '<dependent type>' contains-errors lvalue
    | | |     |-StringLiteral 0x12a808d40 <col:44> 'char[4]' lvalue "STR"
    | | |     |-IntegerLiteral 0x12a808d60 <col:51> 'int' 0
    | | |     |-UnaryOperator 0x12a808e90 <line:15:10, col:11> 'unsigned int **' prefix '&' cannot overflow
    | | |     | `-DeclRefExpr 0x12a808e38 <col:11> 'unsigned int *' lvalue ParmVar 0x12980dda8 'key_usage' 'unsigned int *'
    | | |     `-DeclRefExpr 0x12a808db0 <col:21> 'unsigned int *' lvalue ParmVar 0x12980de28 'critical' 'unsigned int *'
    | | `-IntegerLiteral 0x12a808f30 <col:34> 'int' 0
    | `-CompoundStmt 0x12a808fb8 <col:37, line:17:2>
    |   `-ReturnStmt 0x12a808fa8 <line:16:3, col:10>
    |     `-ImplicitCastExpr 0x12a808f90 <col:10> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x12a808f70 <col:10> 'int' lvalue Var 0x12980dff0 'result' 'int'
    |-IfStmt 0x12a809378 <line:19:2, line:22:2>
    | |-BinaryOperator 0x12a809298 <line:19:6, col:45> 'int' contains-errors '||'
    | | |-BinaryOperator 0x12a8091d0 <col:6, col:23> 'int' contains-errors '=='
    | | | |-CXXDependentScopeMemberExpr 0x12a809188 <col:6, col:15> '<dependent type>' contains-errors lvalue .size
    | | | | `-RecoveryExpr 0x12a809168 <col:6> '<dependent type>' contains-errors lvalue
    | | | `-IntegerLiteral 0x12a809050 <col:23> 'int' 0
    | | `-BinaryOperator 0x12a809278 <col:28, col:45> 'int' contains-errors '=='
    | |   |-CXXDependentScopeMemberExpr 0x12a809210 <col:28, col:37> '<dependent type>' contains-errors lvalue .data
    | |   | `-RecoveryExpr 0x12a8091f0 <col:28> '<dependent type>' contains-errors lvalue
    | |   `-RecoveryExpr 0x12a809258 <col:45> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x12a809358 <col:51, line:22:2>
    |   |-CallExpr 0x12a8092f0 <line:20:3, col:17> 'int'
    |   | `-ImplicitCastExpr 0x12a8092d8 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   |   `-DeclRefExpr 0x12a8092b8 <col:3> 'int ()' Function 0x12980e1a8 'gnutls_assert' 'int ()'
    |   `-ReturnStmt 0x12a809348 <line:21:3, col:10>
    |     `-RecoveryExpr 0x12a809328 <col:10> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x12a8095f0 <line:24:2, col:64> 'int' '='
    | |-DeclRefExpr 0x12a809398 <col:2> 'int' lvalue Var 0x12980dff0 'result' 'int'
    | `-CallExpr 0x12a8095a8 <col:11, col:64> 'int'
    |   |-ImplicitCastExpr 0x12a809590 <col:11> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x12a809498 <col:11> 'int ()' Function 0x12a8093e0 'gnutls_x509_ext_import_key_usage' 'int ()'
    |   |-UnaryOperator 0x12a809578 <col:44, col:45> 'unsigned int **' prefix '&' cannot overflow
    |   | `-DeclRefExpr 0x12a809558 <col:45> 'unsigned int *' lvalue ParmVar 0x12980dda8 'key_usage' 'unsigned int *'
    |   `-ImplicitCastExpr 0x12a8095d8 <col:55> 'unsigned int *' <LValueToRValue>
    |     `-DeclRefExpr 0x12a8094e8 <col:55> 'unsigned int *' lvalue ParmVar 0x12980dda8 'key_usage' 'unsigned int *'
    |-CallExpr 0x12a8097b8 <line:25:2, col:30> 'int'
    | |-ImplicitCastExpr 0x12a8097a0 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x12a8096f0 <col:2> 'int ()' Function 0x12a809638 '_gnutls_free_datum' 'int ()'
    | `-UnaryOperator 0x12a809788 <col:21, col:22> 'unsigned int **' prefix '&' cannot overflow
    |   `-DeclRefExpr 0x12a809768 <col:22> 'unsigned int *' lvalue ParmVar 0x12980dda8 'key_usage' 'unsigned int *'
    |-IfStmt 0x12a809918 <line:27:2, line:30:2>
    | |-BinaryOperator 0x12a809838 <line:27:6, col:15> 'int' '<'
    | | |-ImplicitCastExpr 0x12a809820 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x12a8097e0 <col:6> 'int' lvalue Var 0x12980dff0 'result' 'int'
    | | `-IntegerLiteral 0x12a809800 <col:15> 'int' 0
    | `-CompoundStmt 0x12a8098f8 <col:18, line:30:2>
    |   |-CallExpr 0x12a809890 <line:28:3, col:17> 'int'
    |   | `-ImplicitCastExpr 0x12a809878 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   |   `-DeclRefExpr 0x12a809858 <col:3> 'int ()' Function 0x12980e1a8 'gnutls_assert' 'int ()'
    |   `-ReturnStmt 0x12a8098e8 <line:29:3, col:10>
    |     `-ImplicitCastExpr 0x12a8098d0 <col:10> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x12a8098b0 <col:10> 'int' lvalue Var 0x12980dff0 'result' 'int'
    `-ReturnStmt 0x12a809958 <line:32:2, col:9>
      `-IntegerLiteral 0x12a809938 <col:9> 'int' 0
