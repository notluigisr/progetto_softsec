TranslationUnitDecl 0x126055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1260564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x126055bd0 '__int128'
|-TypedefDecl 0x126056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x126055bf0 'unsigned __int128'
|-TypedefDecl 0x126126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x126126000 'struct __NSConstantString_tag'
|   `-Record 0x126056580 '__NSConstantString_tag'
|-TypedefDecl 0x126126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x126055d90 '__SVInt8_t'
|-TypedefDecl 0x126126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x126055db0 '__SVInt16_t'
|-TypedefDecl 0x126126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x126055dd0 '__SVInt32_t'
|-TypedefDecl 0x1261263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x126055df0 '__SVInt64_t'
|-TypedefDecl 0x126126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x126055e10 '__SVUint8_t'
|-TypedefDecl 0x1261264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x126055e30 '__SVUint16_t'
|-TypedefDecl 0x126126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x126055e50 '__SVUint32_t'
|-TypedefDecl 0x126126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x126055e70 '__SVUint64_t'
|-TypedefDecl 0x1261265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x126055e90 '__SVFloat16_t'
|-TypedefDecl 0x126126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x126055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1261266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x126055ed0 '__SVFloat64_t'
|-TypedefDecl 0x126126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x126055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x126126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x126055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1261267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x126055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x126126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x126055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1261268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x126055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x126126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x126055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x126126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x126055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1261269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x126055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x126126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x126055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x126126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x126056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x126126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x126056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x126126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x126056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x126126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x126056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x126126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x126056090 '__clang_svint8x3_t'
|-TypedefDecl 0x126126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1260560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x126126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1260560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x126126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1260560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x126126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x126056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x126126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x126056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x126126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x126056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x126126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x126056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x126126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x126056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x126127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1260561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x126127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1260561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1261278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1260561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x126127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x126056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1261279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x126056230 '__clang_svint16x4_t'
|-TypedefDecl 0x126127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x126056250 '__clang_svint32x4_t'
|-TypedefDecl 0x126127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x126056270 '__clang_svint64x4_t'
|-TypedefDecl 0x126127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x126056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x126127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1260562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x126127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1260562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x126127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1260562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x126127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x126056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x126127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x126056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x126127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x126056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x126127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x126056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x126127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x126056390 '__SVBool_t'
|-TypedefDecl 0x126127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1260563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x126127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1260563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x126127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1260563f0 '__SVCount_t'
|-TypedefDecl 0x126127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x126127fb0 'char *'
|   `-BuiltinType 0x1260556b0 'char'
|-TypedefDecl 0x126128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x126127fb0 'char *'
|   `-BuiltinType 0x1260556b0 'char'
`-FunctionDecl 0x126141a28 <dataset_diviso_filec/func18060_vuln.c:1:1, line:44:1> line:1:1 invalid nfs3svc_decode_symlinkargs 'int (struct svc_rqst *, int *, struct nfsd3_symlinkargs *)'
  |-ParmVarDecl 0x126128648 <col:28, col:45> col:45 used rqstp 'struct svc_rqst *'
  |-ParmVarDecl 0x126128718 <col:52, col:60> col:60 referenced invalid p 'int *'
  |-ParmVarDecl 0x1261418e8 <line:2:6, col:32> col:32 used args 'struct nfsd3_symlinkargs *'
  `-CompoundStmt 0x126145b80 <line:3:1, line:44:1>
    |-DeclStmt 0x126141c00 <line:4:2, col:25>
    | |-VarDecl 0x126141b00 <col:2, col:15> col:15 used len 'unsigned int'
    | `-VarDecl 0x126141b80 <col:2, col:20> col:20 used avail 'unsigned int'
    |-DeclStmt 0x126141d30 <line:5:2, col:17>
    | |-VarDecl 0x126141c30 <col:2, col:8> col:8 used old 'char *'
    | `-VarDecl 0x126141cb0 <col:2, col:14> col:14 used new 'char *'
    |-DeclStmt 0x126141f38 <line:6:2, col:18>
    | |-RecordDecl 0x126141d48 <col:2, col:9> col:9 struct kvec
    | `-VarDecl 0x126141eb8 <col:2, col:15> col:15 used vec 'struct kvec *'
    |-IfStmt 0x126142520 <line:8:2, line:11:10>
    | |-BinaryOperator 0x1261424d0 <line:8:6, line:9:57> 'int' contains-errors '||'
    | | |-UnaryOperator 0x1261421f8 <line:8:6, col:36> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | | `-ParenExpr 0x1261421d8 <col:7, col:36> '<dependent type>' contains-errors
    | | |   `-BinaryOperator 0x1261421b8 <col:8, col:35> '<dependent type>' contains-errors '='
    | | |     |-RecoveryExpr 0x126141f50 <col:8> '<dependent type>' contains-errors lvalue
    | | |     `-CallExpr 0x126142188 <col:12, col:35> '<dependent type>' contains-errors
    | | |       |-DeclRefExpr 0x1261420d0 <col:12> 'int ()' Function 0x126142018 'decode_fh' 'int ()'
    | | |       |-RecoveryExpr 0x1261420f0 <col:22> '<dependent type>' contains-errors lvalue
    | | |       `-UnaryOperator 0x126142170 <col:25, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | |         `-RecoveryExpr 0x126142148 <col:26, col:32> '<dependent type>' contains-errors lvalue
    | | |           `-DeclRefExpr 0x126142110 <col:26> 'struct nfsd3_symlinkargs *' lvalue ParmVar 0x1261418e8 'args' 'struct nfsd3_symlinkargs *'
    | | `-UnaryOperator 0x1261424b8 <line:9:6, col:57> '<dependent type>' contains-errors prefix '!' cannot overflow
    | |   `-ParenExpr 0x126142498 <col:7, col:57> '<dependent type>' contains-errors
    | |     `-BinaryOperator 0x126142478 <col:8, col:56> '<dependent type>' contains-errors '='
    | |       |-RecoveryExpr 0x126142210 <col:8> '<dependent type>' contains-errors lvalue
    | |       `-CallExpr 0x126142440 <col:12, col:56> '<dependent type>' contains-errors
    | |         |-DeclRefExpr 0x126142310 <col:12> 'int ()' Function 0x126142258 'decode_filename' 'int ()'
    | |         |-RecoveryExpr 0x126142330 <col:28> '<dependent type>' contains-errors lvalue
    | |         |-UnaryOperator 0x1261423b0 <col:31, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |         | `-RecoveryExpr 0x126142388 <col:32, col:38> '<dependent type>' contains-errors lvalue
    | |         |   `-DeclRefExpr 0x126142350 <col:32> 'struct nfsd3_symlinkargs *' lvalue ParmVar 0x1261418e8 'args' 'struct nfsd3_symlinkargs *'
    | |         `-UnaryOperator 0x126142428 <col:45, col:52> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |           `-RecoveryExpr 0x126142400 <col:46, col:52> '<dependent type>' contains-errors lvalue
    | |             `-DeclRefExpr 0x1261423c8 <col:46> 'struct nfsd3_symlinkargs *' lvalue ParmVar 0x1261418e8 'args' 'struct nfsd3_symlinkargs *'
    | `-ReturnStmt 0x126142510 <line:11:3, col:10>
    |   `-IntegerLiteral 0x1261424f0 <col:10> 'int' 0
    |-BinaryOperator 0x126142750 <line:12:2, col:35> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x126142560 <col:2> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x126142540 <col:2> 'int *' lvalue ParmVar 0x126128718 'p' 'int *'
    | `-CallExpr 0x126142720 <col:6, col:35> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x126142668 <col:6> 'int ()' Function 0x1261425b0 'decode_sattr3' 'int ()'
    |   |-RecoveryExpr 0x126142688 <col:20> '<dependent type>' contains-errors lvalue
    |   `-UnaryOperator 0x126142708 <col:23, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x1261426e0 <col:24, col:30> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x1261426a8 <col:24> 'struct nfsd3_symlinkargs *' lvalue ParmVar 0x1261418e8 'args' 'struct nfsd3_symlinkargs *'
    |-BinaryOperator 0x126142950 <line:15:2, col:18> 'unsigned int' contains-errors '='
    | |-DeclRefExpr 0x126142770 <col:2> 'unsigned int' lvalue Var 0x126141b00 'len' 'unsigned int'
    | `-CallExpr 0x126142928 <col:8, col:18> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1261428b8 <col:8> 'int ()' Function 0x126142800 'ntohl' 'int ()'
    |   `-UnaryOperator 0x126142910 <col:14, col:16> '<dependent type>' contains-errors prefix '*' cannot overflow
    |     `-UnaryOperator 0x1261428f8 <col:15, col:16> '<dependent type>' contains-errors postfix '++' cannot overflow
    |       `-RecoveryExpr 0x1261428d8 <col:15> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x126142c80 <line:16:2, line:17:10>
    | |-BinaryOperator 0x126142c30 <line:16:6, col:50> 'int' contains-errors '||'
    | | |-BinaryOperator 0x126142bd0 <col:6, col:24> 'int' contains-errors '||'
    | | | |-BinaryOperator 0x126142b70 <col:6, col:13> 'int' '=='
    | | | | |-ImplicitCastExpr 0x126142b40 <col:6> 'unsigned int' <LValueToRValue>
    | | | | | `-DeclRefExpr 0x126142970 <col:6> 'unsigned int' lvalue Var 0x126141b00 'len' 'unsigned int'
    | | | | `-ImplicitCastExpr 0x126142b58 <col:13> 'unsigned int' <IntegralCast>
    | | | |   `-IntegerLiteral 0x126142990 <col:13> 'int' 0
    | | | `-BinaryOperator 0x126142bb0 <col:18, col:24> 'int' contains-errors '>'
    | | |   |-DeclRefExpr 0x126142a00 <col:18> 'unsigned int' lvalue Var 0x126141b00 'len' 'unsigned int'
    | | |   `-RecoveryExpr 0x126142b90 <col:24> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x126142c10 <col:43, col:50> 'int' contains-errors '>='
    | |   |-DeclRefExpr 0x126142a78 <col:43> 'unsigned int' lvalue Var 0x126141b00 'len' 'unsigned int'
    | |   `-RecoveryExpr 0x126142bf0 <col:50> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x126142c70 <line:17:3, col:10>
    |   `-IntegerLiteral 0x126142c50 <col:10> 'int' 0
    |-BinaryOperator 0x126142f18 <line:18:2, col:59> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x126142cd8 <col:2, col:8> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x126142ca0 <col:2> 'struct nfsd3_symlinkargs *' lvalue ParmVar 0x1261418e8 'args' 'struct nfsd3_symlinkargs *'
    | `-BinaryOperator 0x126142ef8 <col:16, col:59> 'char *' contains-errors '='
    |   |-DeclRefExpr 0x126142d00 <col:16> 'char *' lvalue Var 0x126141cb0 'new' 'char *'
    |   `-CallExpr 0x126142ed0 <col:22, col:59> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x126142e00 <col:22> 'int ()' Function 0x126142d48 'page_address' 'int ()'
    |     `-UnaryOperator 0x126142eb8 <col:35, col:58> '<dependent type>' contains-errors prefix '*' cannot overflow
    |       `-ParenExpr 0x126142e98 <col:36, col:58> '<dependent type>' contains-errors
    |         `-UnaryOperator 0x126142e80 <col:37, col:56> '<dependent type>' contains-errors postfix '++' cannot overflow
    |           `-RecoveryExpr 0x126142e58 <col:37, col:44> '<dependent type>' contains-errors lvalue
    |             `-DeclRefExpr 0x126142e20 <col:37> 'struct svc_rqst *' lvalue ParmVar 0x126128648 'rqstp' 'struct svc_rqst *'
    |-BinaryOperator 0x126142fb8 <line:19:2, col:15> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x126142f70 <col:2, col:8> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x126142f38 <col:2> 'struct nfsd3_symlinkargs *' lvalue ParmVar 0x1261418e8 'args' 'struct nfsd3_symlinkargs *'
    | `-DeclRefExpr 0x126142f98 <col:15> 'unsigned int' lvalue Var 0x126141b00 'len' 'unsigned int'
    |-BinaryOperator 0x126143058 <line:21:2, col:15> 'char *' contains-errors '='
    | |-DeclRefExpr 0x126142fd8 <col:2> 'char *' lvalue Var 0x126141c30 'old' 'char *'
    | `-CStyleCastExpr 0x126143030 <col:8, col:15> 'char *' contains-errors <Dependent>
    |   `-RecoveryExpr 0x126142ff8 <col:15> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x1261431b0 <line:22:2, col:29> 'struct kvec *' contains-errors '='
    | |-DeclRefExpr 0x126143078 <col:2> 'struct kvec *' lvalue Var 0x126141eb8 'vec' 'struct kvec *'
    | `-UnaryOperator 0x126143198 <col:8, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-ArraySubscriptExpr 0x126143178 <col:9, col:29> '<dependent type>' contains-errors lvalue
    |     |-ImplicitCastExpr 0x126143160 <col:9, col:23> '<dependent type>' contains-errors <LValueToRValue>
    |     | `-CXXDependentScopeMemberExpr 0x1261430f8 <col:9, col:23> '<dependent type>' contains-errors lvalue .head
    |     |   `-RecoveryExpr 0x1261430d0 <col:9, col:16> '<dependent type>' contains-errors lvalue
    |     |     `-DeclRefExpr 0x126143098 <col:9> 'struct svc_rqst *' lvalue ParmVar 0x126128648 'rqstp' 'struct svc_rqst *'
    |     `-IntegerLiteral 0x126143140 <col:28> 'int' 0
    |-BinaryOperator 0x126143388 <line:23:2, col:52> 'unsigned int' contains-errors '='
    | |-DeclRefExpr 0x1261431d0 <col:2> 'unsigned int' lvalue Var 0x126141b80 'avail' 'unsigned int'
    | `-BinaryOperator 0x126143368 <col:10, col:52> '<dependent type>' contains-errors '-'
    |   |-RecoveryExpr 0x126143228 <col:10, col:15> '<dependent type>' contains-errors lvalue
    |   | `-DeclRefExpr 0x1261431f0 <col:10> 'struct kvec *' lvalue Var 0x126141eb8 'vec' 'struct kvec *'
    |   `-ParenExpr 0x126143348 <col:25, col:52> 'long' contains-errors
    |     `-BinaryOperator 0x126143328 <col:26, col:44> 'long' contains-errors '-'
    |       |-ImplicitCastExpr 0x126143310 <col:26> 'char *' <LValueToRValue>
    |       | `-DeclRefExpr 0x126143250 <col:26> 'char *' lvalue Var 0x126141c30 'old' 'char *'
    |       `-CStyleCastExpr 0x1261432e8 <col:32, col:44> 'char *' contains-errors <Dependent>
    |         `-RecoveryExpr 0x1261432a8 <col:39, col:44> '<dependent type>' contains-errors lvalue
    |           `-DeclRefExpr 0x126143270 <col:39> 'struct kvec *' lvalue Var 0x126141eb8 'vec' 'struct kvec *'
    |-WhileStmt 0x126143648 <line:24:2, line:28:2>
    | |-BinaryOperator 0x1261434b8 <line:24:9, col:26> 'int' '&&'
    | | |-BinaryOperator 0x126143418 <col:9, col:16> 'int' '&&'
    | | | |-ImplicitCastExpr 0x1261433e8 <col:9> 'unsigned int' <LValueToRValue>
    | | | | `-DeclRefExpr 0x1261433a8 <col:9> 'unsigned int' lvalue Var 0x126141b00 'len' 'unsigned int'
    | | | `-ImplicitCastExpr 0x126143400 <col:16> 'unsigned int' <LValueToRValue>
    | | |   `-DeclRefExpr 0x1261433c8 <col:16> 'unsigned int' lvalue Var 0x126141b80 'avail' 'unsigned int'
    | | `-ImplicitCastExpr 0x1261434a0 <col:25, col:26> 'int' <IntegralCast>
    | |   `-ImplicitCastExpr 0x126143488 <col:25, col:26> 'char' <LValueToRValue>
    | |     `-UnaryOperator 0x126143470 <col:25, col:26> 'char' lvalue prefix '*' cannot overflow
    | |       `-ImplicitCastExpr 0x126143458 <col:26> 'char *' <LValueToRValue>
    | |         `-DeclRefExpr 0x126143438 <col:26> 'char *' lvalue Var 0x126141c30 'old' 'char *'
    | `-CompoundStmt 0x126143620 <col:31, line:28:2>
    |   |-BinaryOperator 0x126143590 <line:25:3, col:16> 'char' '='
    |   | |-UnaryOperator 0x126143510 <col:3, col:7> 'char' lvalue prefix '*' cannot overflow
    |   | | `-UnaryOperator 0x1261434f8 <col:4, col:7> 'char *' postfix '++'
    |   | |   `-DeclRefExpr 0x1261434d8 <col:4> 'char *' lvalue Var 0x126141cb0 'new' 'char *'
    |   | `-ImplicitCastExpr 0x126143578 <col:12, col:16> 'char' <LValueToRValue>
    |   |   `-UnaryOperator 0x126143560 <col:12, col:16> 'char' lvalue prefix '*' cannot overflow
    |   |     `-UnaryOperator 0x126143548 <col:13, col:16> 'char *' postfix '++'
    |   |       `-DeclRefExpr 0x126143528 <col:13> 'char *' lvalue Var 0x126141c30 'old' 'char *'
    |   |-UnaryOperator 0x1261435d0 <line:26:3, col:6> 'unsigned int' postfix '--'
    |   | `-DeclRefExpr 0x1261435b0 <col:3> 'unsigned int' lvalue Var 0x126141b00 'len' 'unsigned int'
    |   `-UnaryOperator 0x126143608 <line:27:3, col:8> 'unsigned int' postfix '--'
    |     `-DeclRefExpr 0x1261435e8 <col:3> 'unsigned int' lvalue Var 0x126141b80 'avail' 'unsigned int'
    |-IfStmt 0x126145748 <line:30:2, line:33:2>
    | |-BinaryOperator 0x1261437b8 <line:30:6, col:37> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x1261436f0 <col:6, col:14> 'int' '&&'
    | | | |-ImplicitCastExpr 0x1261436d8 <col:6> 'unsigned int' <LValueToRValue>
    | | | | `-DeclRefExpr 0x126143668 <col:6> 'unsigned int' lvalue Var 0x126141b00 'len' 'unsigned int'
    | | | `-UnaryOperator 0x1261436c0 <col:13, col:14> 'int' prefix '!' cannot overflow
    | | |   `-ImplicitCastExpr 0x1261436a8 <col:14> 'unsigned int' <LValueToRValue>
    | | |     `-DeclRefExpr 0x126143688 <col:14> 'unsigned int' lvalue Var 0x126141b80 'avail' 'unsigned int'
    | | `-CXXDependentScopeMemberExpr 0x126143770 <col:23, col:37> '<dependent type>' contains-errors lvalue .page_len
    | |   `-RecoveryExpr 0x126143748 <col:23, col:30> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x126143710 <col:23> 'struct svc_rqst *' lvalue ParmVar 0x126128648 'rqstp' 'struct svc_rqst *'
    | `-CompoundStmt 0x126145730 <col:47, line:33:2>
    |   `-BinaryOperator 0x126145710 <line:32:3, col:44> 'char *' contains-errors '='
    |     |-DeclRefExpr 0x1261455a8 <col:3> 'char *' lvalue Var 0x126141c30 'old' 'char *'
    |     `-CallExpr 0x1261456e8 <col:9, col:44> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x1261455c8 <col:9> 'int ()' Function 0x126142d48 'page_address' 'int ()'
    |       `-ArraySubscriptExpr 0x1261456c8 <col:22, col:43> '<dependent type>' contains-errors lvalue
    |         |-ImplicitCastExpr 0x1261456b0 <col:22, col:36> '<dependent type>' contains-errors <LValueToRValue>
    |         | `-CXXDependentScopeMemberExpr 0x126145648 <col:22, col:36> '<dependent type>' contains-errors lvalue .pages
    |         |   `-RecoveryExpr 0x126145620 <col:22, col:29> '<dependent type>' contains-errors lvalue
    |         |     `-DeclRefExpr 0x1261455e8 <col:22> 'struct svc_rqst *' lvalue ParmVar 0x126128648 'rqstp' 'struct svc_rqst *'
    |         `-IntegerLiteral 0x126145690 <col:42> 'int' 0
    |-WhileStmt 0x126145a08 <line:34:2, line:38:2>
    | |-BinaryOperator 0x126145878 <line:34:9, col:26> 'int' '&&'
    | | |-BinaryOperator 0x1261457d8 <col:9, col:16> 'int' '&&'
    | | | |-ImplicitCastExpr 0x1261457a8 <col:9> 'unsigned int' <LValueToRValue>
    | | | | `-DeclRefExpr 0x126145768 <col:9> 'unsigned int' lvalue Var 0x126141b00 'len' 'unsigned int'
    | | | `-ImplicitCastExpr 0x1261457c0 <col:16> 'unsigned int' <LValueToRValue>
    | | |   `-DeclRefExpr 0x126145788 <col:16> 'unsigned int' lvalue Var 0x126141b80 'avail' 'unsigned int'
    | | `-ImplicitCastExpr 0x126145860 <col:25, col:26> 'int' <IntegralCast>
    | |   `-ImplicitCastExpr 0x126145848 <col:25, col:26> 'char' <LValueToRValue>
    | |     `-UnaryOperator 0x126145830 <col:25, col:26> 'char' lvalue prefix '*' cannot overflow
    | |       `-ImplicitCastExpr 0x126145818 <col:26> 'char *' <LValueToRValue>
    | |         `-DeclRefExpr 0x1261457f8 <col:26> 'char *' lvalue Var 0x126141c30 'old' 'char *'
    | `-CompoundStmt 0x1261459e0 <col:31, line:38:2>
    |   |-BinaryOperator 0x126145950 <line:35:3, col:16> 'char' '='
    |   | |-UnaryOperator 0x1261458d0 <col:3, col:7> 'char' lvalue prefix '*' cannot overflow
    |   | | `-UnaryOperator 0x1261458b8 <col:4, col:7> 'char *' postfix '++'
    |   | |   `-DeclRefExpr 0x126145898 <col:4> 'char *' lvalue Var 0x126141cb0 'new' 'char *'
    |   | `-ImplicitCastExpr 0x126145938 <col:12, col:16> 'char' <LValueToRValue>
    |   |   `-UnaryOperator 0x126145920 <col:12, col:16> 'char' lvalue prefix '*' cannot overflow
    |   |     `-UnaryOperator 0x126145908 <col:13, col:16> 'char *' postfix '++'
    |   |       `-DeclRefExpr 0x1261458e8 <col:13> 'char *' lvalue Var 0x126141c30 'old' 'char *'
    |   |-UnaryOperator 0x126145990 <line:36:3, col:6> 'unsigned int' postfix '--'
    |   | `-DeclRefExpr 0x126145970 <col:3> 'unsigned int' lvalue Var 0x126141b00 'len' 'unsigned int'
    |   `-UnaryOperator 0x1261459c8 <line:37:3, col:8> 'unsigned int' postfix '--'
    |     `-DeclRefExpr 0x1261459a8 <col:3> 'unsigned int' lvalue Var 0x126141b80 'avail' 'unsigned int'
    |-BinaryOperator 0x126145aa8 <line:39:2, col:9> 'char' '='
    | |-UnaryOperator 0x126145a60 <col:2, col:3> 'char' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x126145a48 <col:3> 'char *' <LValueToRValue>
    | |   `-DeclRefExpr 0x126145a28 <col:3> 'char *' lvalue Var 0x126141cb0 'new' 'char *'
    | `-ImplicitCastExpr 0x126145a90 <col:9> 'char' <IntegralCast>
    |   `-CharacterLiteral 0x126145a78 <col:9> 'int' 0
    |-IfStmt 0x126145b30 <line:40:2, line:41:10>
    | |-ImplicitCastExpr 0x126145ae8 <line:40:6> 'unsigned int' <LValueToRValue>
    | | `-DeclRefExpr 0x126145ac8 <col:6> 'unsigned int' lvalue Var 0x126141b00 'len' 'unsigned int'
    | `-ReturnStmt 0x126145b20 <line:41:3, col:10>
    |   `-IntegerLiteral 0x126145b00 <col:10> 'int' 0
    `-ReturnStmt 0x126145b70 <line:43:2, col:9>
      `-IntegerLiteral 0x126145b50 <col:9> 'int' 1
