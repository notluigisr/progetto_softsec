TranslationUnitDecl 0x125055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1250564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x125055bd0 '__int128'
|-TypedefDecl 0x125056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x125055bf0 'unsigned __int128'
|-TypedefDecl 0x125126e30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x125126c00 'struct __NSConstantString_tag'
|   `-Record 0x125056580 '__NSConstantString_tag'
|-TypedefDecl 0x125126e98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x125055d90 '__SVInt8_t'
|-TypedefDecl 0x125126f00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x125055db0 '__SVInt16_t'
|-TypedefDecl 0x125126f68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x125055dd0 '__SVInt32_t'
|-TypedefDecl 0x125126fd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x125055df0 '__SVInt64_t'
|-TypedefDecl 0x125127038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x125055e10 '__SVUint8_t'
|-TypedefDecl 0x1251270a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x125055e30 '__SVUint16_t'
|-TypedefDecl 0x125127108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x125055e50 '__SVUint32_t'
|-TypedefDecl 0x125127170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x125055e70 '__SVUint64_t'
|-TypedefDecl 0x1251271d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x125055e90 '__SVFloat16_t'
|-TypedefDecl 0x125127240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x125055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1251272a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x125055ed0 '__SVFloat64_t'
|-TypedefDecl 0x125127310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x125055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x125127378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x125055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1251273e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x125055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x125127448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x125055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1251274b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x125055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x125127518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x125055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x125127580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x125055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1251275e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x125055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x125127650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x125055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1251276b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x125056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x125127720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x125056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x125127788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x125056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1251277f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x125056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x125127858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x125056090 '__clang_svint8x3_t'
|-TypedefDecl 0x1251278c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1250560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x125127928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1250560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x125127990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1250560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x1251279f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x125056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x125127a60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x125056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x125127ac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x125056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x125127b30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x125056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x125127b98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x125056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x125128400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1250561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x125128468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1250561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1251284d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1250561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x125128538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x125056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1251285a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x125056230 '__clang_svint16x4_t'
|-TypedefDecl 0x125128608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x125056250 '__clang_svint32x4_t'
|-TypedefDecl 0x125128670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x125056270 '__clang_svint64x4_t'
|-TypedefDecl 0x1251286d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x125056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x125128740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1250562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1251287a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1250562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x125128810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1250562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x125128878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x125056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1251288e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x125056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x125128948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x125056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1251289b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x125056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x125128a18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x125056390 '__SVBool_t'
|-TypedefDecl 0x125128a80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1250563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x125128ae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1250563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x125128b50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1250563f0 '__SVCount_t'
|-TypedefDecl 0x125128bf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x125128bb0 'char *'
|   `-BuiltinType 0x1250556b0 'char'
|-TypedefDecl 0x125128c68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x125128bb0 'char *'
|   `-BuiltinType 0x1250556b0 'char'
|-FunctionDecl 0x1251290c8 <dataset_diviso_filec/func23170_vuln.c:1:1, line:79:1> line:1:12 invalid exif_process_IFD_in_MAKERNOTE 'int (int *, char *, int, char *, int, int)' static
| |-ParmVarDecl 0x125128d28 <col:42, col:59> col:59 referenced invalid ImageInfo 'int *'
| |-ParmVarDecl 0x125128da8 <col:70, col:77> col:77 used value_ptr 'char *'
| |-ParmVarDecl 0x125128e28 <col:88, col:92> col:92 used value_len 'int'
| |-ParmVarDecl 0x125128ea8 <col:103, col:109> col:109 used offset_base 'char *'
| |-ParmVarDecl 0x125128f28 <col:122, col:129> col:129 invalid IFDlength 'int'
| |-ParmVarDecl 0x125128fa8 <col:140, col:147> col:147 invalid displacement 'int'
| `-CompoundStmt 0x125145c00 <line:2:1, line:79:1>
|   |-DeclStmt 0x125129398 <line:3:2, col:48>
|   | |-VarDecl 0x1251291b8 <col:2, col:6> col:6 used de 'int'
|   | |-VarDecl 0x125129238 <col:2, col:12> col:10 used i 'int' cinit
|   | | `-IntegerLiteral 0x1251292a0 <col:12> 'int' 0
|   | `-VarDecl 0x1251292d8 <col:2, col:31> col:15 used section_index 'int' cinit
|   |   `-RecoveryExpr 0x125129358 <col:31> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x125142588 <line:4:2, col:52>
|   | |-VarDecl 0x125142400 <col:2, col:6> col:6 used NumDirEntries 'int'
|   | |-VarDecl 0x125142480 <col:2, col:21> col:21 used old_motorola_intel 'int'
|   | `-VarDecl 0x125142500 <col:2, col:41> col:41 used offset_diff 'int'
|   |-DeclStmt 0x125142620 <line:5:2, col:35>
|   | `-VarDecl 0x1251425b8 <col:2, col:25> col:25 referenced invalid maker_note 'const int *'
|   |-DeclStmt 0x1251426b8 <line:6:2, col:17>
|   | `-VarDecl 0x125142650 <col:2, col:8> col:8 used dir_start 'char *'
|   |-BinaryOperator 0x1251443e0 <line:23:2, col:38> 'char *' contains-errors '='
|   | |-DeclRefExpr 0x125144318 <col:2> 'char *' lvalue Var 0x125142650 'dir_start' 'char *'
|   | `-BinaryOperator 0x1251443c0 <col:14, col:38> '<dependent type>' contains-errors '+'
|   |   |-DeclRefExpr 0x125144338 <col:14> 'char *' lvalue ParmVar 0x125128da8 'value_ptr' 'char *'
|   |   `-CXXDependentScopeMemberExpr 0x125144378 <col:26, col:38> '<dependent type>' contains-errors lvalue ->offset
|   |     `-RecoveryExpr 0x125144358 <col:26> '<dependent type>' contains-errors lvalue
|   |-CompoundAssignOperator 0x1251444f8 <line:29:2, col:31> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   | |-CXXDependentScopeMemberExpr 0x125144448 <col:2, col:13> '<dependent type>' contains-errors lvalue ->sections_found
|   | | `-RecoveryExpr 0x125144420 <col:2> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x125144400 <col:2> 'int *' lvalue ParmVar 0x125128d28 'ImageInfo' 'int *'
|   | `-RecoveryExpr 0x1251444d8 <col:31> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x1251445b0 <line:31:2, col:34> 'int' contains-errors '='
|   | |-DeclRefExpr 0x125144528 <col:2> 'int' lvalue Var 0x125142480 'old_motorola_intel' 'int'
|   | `-CXXDependentScopeMemberExpr 0x125144568 <col:23, col:34> '<dependent type>' contains-errors lvalue ->motorola_intel
|   |   `-RecoveryExpr 0x125144548 <col:23> '<dependent type>' contains-errors lvalue
|   |-SwitchStmt 0x125144650 <line:32:2, line:42:2>
|   | |-ImplicitCastExpr 0x125144638 <line:32:10, col:22> '<dependent type>' contains-errors <LValueToRValue>
|   | | `-CXXDependentScopeMemberExpr 0x1251445f0 <col:10, col:22> '<dependent type>' contains-errors lvalue ->byte_order
|   | |   `-RecoveryExpr 0x1251445d0 <col:10> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x125144898 <col:34, line:42:2>
|   |   |-BinaryOperator 0x125144740 <line:34:4, col:32> '<dependent type>' contains-errors '='
|   |   | |-CXXDependentScopeMemberExpr 0x1251446d8 <col:4, col:15> '<dependent type>' contains-errors lvalue ->motorola_intel
|   |   | | `-RecoveryExpr 0x1251446b0 <col:4> '<dependent type>' contains-errors lvalue
|   |   | |   `-DeclRefExpr 0x125144690 <col:4> 'int *' lvalue ParmVar 0x125128d28 'ImageInfo' 'int *'
|   |   | `-IntegerLiteral 0x125144720 <col:32> 'int' 0
|   |   |-BreakStmt 0x125144760 <line:35:4>
|   |   |-BinaryOperator 0x125144830 <line:37:4, col:32> '<dependent type>' contains-errors '='
|   |   | |-CXXDependentScopeMemberExpr 0x1251447c8 <col:4, col:15> '<dependent type>' contains-errors lvalue ->motorola_intel
|   |   | | `-RecoveryExpr 0x1251447a0 <col:4> '<dependent type>' contains-errors lvalue
|   |   | |   `-DeclRefExpr 0x125144780 <col:4> 'int *' lvalue ParmVar 0x125128d28 'ImageInfo' 'int *'
|   |   | `-IntegerLiteral 0x125144810 <col:32> 'int' 1
|   |   |-BreakStmt 0x125144850 <line:38:4>
|   |   `-DefaultStmt 0x125144878 <line:39:3, line:41:4>
|   |     `-BreakStmt 0x125144870 <col:4>
|   |-BinaryOperator 0x125144b28 <line:44:2, col:69> 'int' contains-errors '='
|   | |-DeclRefExpr 0x1251448d0 <col:2> 'int' lvalue Var 0x125142400 'NumDirEntries' 'int'
|   | `-CallExpr 0x125144af8 <col:18, col:69> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x125144a50 <col:18> 'int ()' Function 0x125144998 'php_ifd_get16u' 'int ()'
|   |   |-DeclRefExpr 0x125144a70 <col:33> 'char *' lvalue Var 0x125142650 'dir_start' 'char *'
|   |   `-CXXDependentScopeMemberExpr 0x125144ab0 <col:44, col:55> '<dependent type>' contains-errors lvalue ->motorola_intel
|   |     `-RecoveryExpr 0x125144a90 <col:44> '<dependent type>' contains-errors lvalue
|   |-SwitchStmt 0x125144bc8 <line:46:2, line:60:2>
|   | |-ImplicitCastExpr 0x125144bb0 <line:46:10, col:22> '<dependent type>' contains-errors <LValueToRValue>
|   | | `-CXXDependentScopeMemberExpr 0x125144b68 <col:10, col:22> '<dependent type>' contains-errors lvalue ->offset_mode
|   | |   `-RecoveryExpr 0x125144b48 <col:10> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x125145100 <col:35, line:60:2>
|   |   |-BinaryOperator 0x125144c70 <line:48:4, col:18> 'char *' '='
|   |   | |-DeclRefExpr 0x125144c18 <col:4> 'char *' lvalue ParmVar 0x125128ea8 'offset_base' 'char *'
|   |   | `-ImplicitCastExpr 0x125144c58 <col:18> 'char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x125144c38 <col:18> 'char *' lvalue ParmVar 0x125128da8 'value_ptr' 'char *'
|   |   |-BreakStmt 0x125144c90 <line:49:4>
|   |   |-BinaryOperator 0x125144fe0 <line:51:4, col:99> 'int' contains-errors '='
|   |   | |-DeclRefExpr 0x125144c98 <col:4> 'int' lvalue Var 0x125142500 'offset_diff' 'int'
|   |   | `-BinaryOperator 0x125144fc0 <col:18, col:99> '<dependent type>' contains-errors '-'
|   |   |   |-BinaryOperator 0x125144d90 <col:18, col:41> 'int' '+'
|   |   |   | |-BinaryOperator 0x125144d50 <col:18, col:36> 'int' '+'
|   |   |   | | |-IntegerLiteral 0x125144cb8 <col:18> 'int' 2
|   |   |   | | `-BinaryOperator 0x125144d30 <col:22, col:36> 'int' '*'
|   |   |   | |   |-ImplicitCastExpr 0x125144d18 <col:22> 'int' <LValueToRValue>
|   |   |   | |   | `-DeclRefExpr 0x125144cd8 <col:22> 'int' lvalue Var 0x125142400 'NumDirEntries' 'int'
|   |   |   | |   `-IntegerLiteral 0x125144cf8 <col:36> 'int' 12
|   |   |   | `-IntegerLiteral 0x125144d70 <col:41> 'int' 4
|   |   |   `-CallExpr 0x125144f90 <col:45, col:99> '<dependent type>' contains-errors
|   |   |     |-DeclRefExpr 0x125144e90 <col:45> 'int ()' Function 0x125144dd8 'php_ifd_get32u' 'int ()'
|   |   |     |-BinaryOperator 0x125144f08 <col:60, col:70> 'char *' '+'
|   |   |     | |-ImplicitCastExpr 0x125144ef0 <col:60> 'char *' <LValueToRValue>
|   |   |     | | `-DeclRefExpr 0x125144eb0 <col:60> 'char *' lvalue Var 0x125142650 'dir_start' 'char *'
|   |   |     | `-IntegerLiteral 0x125144ed0 <col:70> 'int' 10
|   |   |     `-CXXDependentScopeMemberExpr 0x125144f48 <col:74, col:85> '<dependent type>' contains-errors lvalue ->motorola_intel
|   |   |       `-RecoveryExpr 0x125144f28 <col:74> '<dependent type>' contains-errors lvalue
|   |   |-BinaryOperator 0x1251450b0 <line:55:4, col:30> 'char *' '='
|   |   | |-DeclRefExpr 0x125145000 <col:4> 'char *' lvalue ParmVar 0x125128ea8 'offset_base' 'char *'
|   |   | `-BinaryOperator 0x125145090 <col:18, col:30> 'char *' '+'
|   |   |   |-ImplicitCastExpr 0x125145060 <col:18> 'char *' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x125145020 <col:18> 'char *' lvalue ParmVar 0x125128da8 'value_ptr' 'char *'
|   |   |   `-ImplicitCastExpr 0x125145078 <col:30> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x125145040 <col:30> 'int' lvalue Var 0x125142500 'offset_diff' 'int'
|   |   |-BreakStmt 0x1251450d0 <line:56:4>
|   |   `-DefaultStmt 0x1251450e0 <line:57:3, line:59:4>
|   |     `-BreakStmt 0x1251450d8 <col:4>
|   |-IfStmt 0x1251455b8 <line:62:2, line:65:2>
|   | |-BinaryOperator 0x125145250 <line:62:6, col:29> 'int' '>'
|   | | |-ParenExpr 0x1251451f8 <col:6, col:25> 'int'
|   | | | `-BinaryOperator 0x1251451d8 <col:7, col:23> 'int' '+'
|   | | |   |-IntegerLiteral 0x125145140 <col:7> 'int' 2
|   | | |   `-BinaryOperator 0x1251451b8 <col:9, col:23> 'int' '*'
|   | | |     |-ImplicitCastExpr 0x1251451a0 <col:9> 'int' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x125145160 <col:9> 'int' lvalue Var 0x125142400 'NumDirEntries' 'int'
|   | | |     `-IntegerLiteral 0x125145180 <col:23> 'int' 12
|   | | `-ImplicitCastExpr 0x125145238 <col:29> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x125145218 <col:29> 'int' lvalue ParmVar 0x125128e28 'value_len' 'int'
|   | `-CompoundStmt 0x1251455a0 <col:40, line:65:2>
|   |   `-CallExpr 0x125145518 <line:63:3, col:72> 'int'
|   |     |-ImplicitCastExpr 0x125145500 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x125145350 <col:3> 'int ()' Function 0x125145298 'exif_error_docref' 'int ()'
|   |     |-ImplicitCastExpr 0x125145558 <col:21> 'char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x1251453b0 <col:21> 'char[4]' lvalue "STR"
|   |     |-ImplicitCastExpr 0x125145570 <col:28> 'int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1251453d0 <col:28> 'int' lvalue Var 0x125142400 'NumDirEntries' 'int'
|   |     |-BinaryOperator 0x125145488 <col:43, col:59> 'int' '+'
|   |     | |-IntegerLiteral 0x1251453f0 <col:43> 'int' 2
|   |     | `-BinaryOperator 0x125145468 <col:45, col:59> 'int' '*'
|   |     |   |-ImplicitCastExpr 0x125145450 <col:45> 'int' <LValueToRValue>
|   |     |   | `-DeclRefExpr 0x125145410 <col:45> 'int' lvalue Var 0x125142400 'NumDirEntries' 'int'
|   |     |   `-IntegerLiteral 0x125145430 <col:59> 'int' 12
|   |     `-ImplicitCastExpr 0x125145588 <col:63> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x1251454a8 <col:63> 'int' lvalue ParmVar 0x125128e28 'value_len' 'int'
|   |-ForStmt 0x125145aa0 <line:67:2, line:72:2>
|   | |-BinaryOperator 0x125145618 <line:67:7, col:10> 'int' '='
|   | | |-DeclRefExpr 0x1251455d8 <col:7> 'int' lvalue Var 0x1251291b8 'de' 'int'
|   | | `-IntegerLiteral 0x1251455f8 <col:10> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1251456a8 <col:12, col:15> 'int' '<'
|   | | |-ImplicitCastExpr 0x125145678 <col:12> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x125145638 <col:12> 'int' lvalue Var 0x1251291b8 'de' 'int'
|   | | `-ImplicitCastExpr 0x125145690 <col:15> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x125145658 <col:15> 'int' lvalue Var 0x125142400 'NumDirEntries' 'int'
|   | |-UnaryOperator 0x1251456e8 <col:29, col:31> 'int' postfix '++'
|   | | `-DeclRefExpr 0x1251456c8 <col:29> 'int' lvalue Var 0x1251291b8 'de' 'int'
|   | `-CompoundStmt 0x125145a88 <col:35, line:72:2>
|   |   `-IfStmt 0x125145a68 <line:68:3, line:71:3>
|   |     |-RecoveryExpr 0x125145a38 <line:68:7, line:69:98> '_Bool' contains-errors
|   |     `-CompoundStmt 0x125145a58 <col:101, line:71:3>
|   `-BinaryOperator 0x125145b88 <line:73:2, col:30> '<dependent type>' contains-errors '='
|     |-CXXDependentScopeMemberExpr 0x125145b20 <col:2, col:13> '<dependent type>' contains-errors lvalue ->motorola_intel
|     | `-RecoveryExpr 0x125145af8 <col:2> '<dependent type>' contains-errors lvalue
|     |   `-DeclRefExpr 0x125145ad8 <col:2> 'int *' lvalue ParmVar 0x125128d28 'ImageInfo' 'int *'
|     `-DeclRefExpr 0x125145b68 <col:30> 'int' lvalue Var 0x125142480 'old_motorola_intel' 'int'
|-FunctionDecl 0x125142f50 <line:14:48> col:48 implicit used strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x125143050 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1251430b8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x125142ff8 <<invalid sloc>> Implicit 887
`-FunctionDecl 0x125143ea8 <line:18:32> col:32 implicit used strncmp 'int (const char *, const char *, unsigned long)' extern
  |-ParmVarDecl 0x125143fa8 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x125144010 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x125144078 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x125143f50 <<invalid sloc>> Implicit 888
