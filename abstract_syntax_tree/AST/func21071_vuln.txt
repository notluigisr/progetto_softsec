TranslationUnitDecl 0x14d055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14d0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14d055bd0 '__int128'
|-TypedefDecl 0x14d056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14d055bf0 'unsigned __int128'
|-TypedefDecl 0x14d126c30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14d126a00 'struct __NSConstantString_tag'
|   `-Record 0x14d056580 '__NSConstantString_tag'
|-TypedefDecl 0x14d126c98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14d055d90 '__SVInt8_t'
|-TypedefDecl 0x14d126d00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14d055db0 '__SVInt16_t'
|-TypedefDecl 0x14d126d68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14d055dd0 '__SVInt32_t'
|-TypedefDecl 0x14d126dd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14d055df0 '__SVInt64_t'
|-TypedefDecl 0x14d126e38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14d055e10 '__SVUint8_t'
|-TypedefDecl 0x14d126ea0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14d055e30 '__SVUint16_t'
|-TypedefDecl 0x14d126f08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14d055e50 '__SVUint32_t'
|-TypedefDecl 0x14d126f70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14d055e70 '__SVUint64_t'
|-TypedefDecl 0x14d126fd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14d055e90 '__SVFloat16_t'
|-TypedefDecl 0x14d127040 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14d055eb0 '__SVFloat32_t'
|-TypedefDecl 0x14d1270a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14d055ed0 '__SVFloat64_t'
|-TypedefDecl 0x14d127110 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14d055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14d127178 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14d055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14d1271e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14d055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14d127248 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14d055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14d1272b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14d055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14d127318 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14d055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14d127380 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14d055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14d1273e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14d055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14d127450 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14d055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14d1274b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14d056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14d127520 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14d056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14d127588 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14d056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14d1275f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14d056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14d127658 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14d056090 '__clang_svint8x3_t'
|-TypedefDecl 0x14d1276c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14d0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14d127728 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14d0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14d127790 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14d0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14d1277f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14d056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14d127860 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14d056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14d1278c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14d056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14d127930 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14d056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14d127998 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14d056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14d128200 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14d0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14d128268 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14d0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14d1282d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14d0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14d128338 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14d056210 '__clang_svint8x4_t'
|-TypedefDecl 0x14d1283a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14d056230 '__clang_svint16x4_t'
|-TypedefDecl 0x14d128408 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14d056250 '__clang_svint32x4_t'
|-TypedefDecl 0x14d128470 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14d056270 '__clang_svint64x4_t'
|-TypedefDecl 0x14d1284d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14d056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14d128540 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14d0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14d1285a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14d0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14d128610 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14d0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14d128678 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14d056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14d1286e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14d056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14d128748 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14d056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14d1287b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14d056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14d128818 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14d056390 '__SVBool_t'
|-TypedefDecl 0x14d128880 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14d0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14d1288e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14d0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14d128950 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14d0563f0 '__SVCount_t'
|-TypedefDecl 0x14d1289f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14d1289b0 'char *'
|   `-BuiltinType 0x14d0556b0 'char'
|-TypedefDecl 0x14d128a68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14d1289b0 'char *'
|   `-BuiltinType 0x14d0556b0 'char'
|-FunctionDecl 0x14d808340 <dataset_diviso_filec/func21071_vuln.c:1:1, line:94:1> line:1:6 invalid problem_data_load_from_dump_dir 'void (int *, struct dump_dir *, char **)'
| |-ParmVarDecl 0x14d128b28 <col:38, col:54> col:54 invalid problem_data 'int *'
| |-ParmVarDecl 0x14d129118 <col:68, col:85> col:85 used dd 'struct dump_dir *'
| |-ParmVarDecl 0x14d808200 <col:89, col:96> col:96 used excluding 'char **'
| `-CompoundStmt 0x14e80aad0 <line:2:1, line:94:1>
|   |-DeclStmt 0x14d808480 <line:3:5, col:21>
|   | `-VarDecl 0x14d808418 <col:5, col:11> col:11 used short_name 'char *'
|   |-DeclStmt 0x14d808518 <line:4:5, col:20>
|   | `-VarDecl 0x14d8084b0 <col:5, col:11> col:11 used full_name 'char *'
|   |-CallExpr 0x14d808718 <line:6:5, col:25> 'int'
|   | |-ImplicitCastExpr 0x14d808700 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x14d808690 <col:5> 'int ()' Function 0x14d8085d8 'dd_init_next_file' 'int ()'
|   | `-ImplicitCastExpr 0x14d808740 <col:23> 'struct dump_dir *' <LValueToRValue>
|   |   `-DeclRefExpr 0x14d8086b0 <col:23> 'struct dump_dir *' lvalue ParmVar 0x14d129118 'dd' 'struct dump_dir *'
|   `-WhileStmt 0x14e80aab0 <line:7:5, line:93:5>
|     |-CallExpr 0x14d808900 <line:7:12, col:56> 'int'
|     | |-ImplicitCastExpr 0x14d8088e8 <col:12> 'int (*)()' <FunctionToPointerDecay>
|     | | `-DeclRefExpr 0x14d808838 <col:12> 'int ()' Function 0x14d808780 'dd_get_next_file' 'int ()'
|     | |-ImplicitCastExpr 0x14d808938 <col:29> 'struct dump_dir *' <LValueToRValue>
|     | | `-DeclRefExpr 0x14d808858 <col:29> 'struct dump_dir *' lvalue ParmVar 0x14d129118 'dd' 'struct dump_dir *'
|     | |-UnaryOperator 0x14d808898 <col:33, col:34> 'char **' prefix '&' cannot overflow
|     | | `-DeclRefExpr 0x14d808878 <col:34> 'char *' lvalue Var 0x14d808418 'short_name' 'char *'
|     | `-UnaryOperator 0x14d8088d0 <col:46, col:47> 'char **' prefix '&' cannot overflow
|     |   `-DeclRefExpr 0x14d8088b0 <col:47> 'char *' lvalue Var 0x14d8084b0 'full_name' 'char *'
|     `-CompoundStmt 0x14e80aa20 <line:8:5, line:93:5>
|       |-IfStmt 0x14d808be0 <line:9:9, line:13:9>
|       | |-BinaryOperator 0x14d808b40 <line:9:13, col:65> 'int' '&&'
|       | | |-ImplicitCastExpr 0x14d808b28 <col:13> 'char **' <LValueToRValue>
|       | | | `-DeclRefExpr 0x14d808950 <col:13> 'char **' lvalue ParmVar 0x14d808200 'excluding' 'char **'
|       | | `-CallExpr 0x14d808ac8 <col:26, col:65> 'int'
|       | |   |-ImplicitCastExpr 0x14d808ab0 <col:26> 'int (*)()' <FunctionToPointerDecay>
|       | |   | `-DeclRefExpr 0x14d808a50 <col:26> 'int ()' Function 0x14d808998 'is_in_string_list' 'int ()'
|       | |   |-ImplicitCastExpr 0x14d808af8 <col:44> 'char *' <LValueToRValue>
|       | |   | `-DeclRefExpr 0x14d808a70 <col:44> 'char *' lvalue Var 0x14d808418 'short_name' 'char *'
|       | |   `-ImplicitCastExpr 0x14d808b10 <col:56> 'char **' <LValueToRValue>
|       | |     `-DeclRefExpr 0x14d808a90 <col:56> 'char **' lvalue ParmVar 0x14d808200 'excluding' 'char **'
|       | `-CompoundStmt 0x14d808bc8 <line:10:9, line:13:9>
|       |   `-GotoStmt 0x14d808bb0 <line:12:13, col:18> 'next' 0x14d808b60
|       |-IfStmt 0x14d8091d8 <line:15:9, line:20:9>
|       | |-BinaryOperator 0x14d809188 <line:15:13, line:16:72> 'int' '||'
|       | | |-BinaryOperator 0x14d808cc0 <line:15:13, col:30> 'int' '=='
|       | | | |-ImplicitCastExpr 0x14d808ca8 <col:13, col:25> 'int' <IntegralCast>
|       | | | | `-ImplicitCastExpr 0x14d808c90 <col:13, col:25> 'char' <LValueToRValue>
|       | | | |   `-ArraySubscriptExpr 0x14d808c58 <col:13, col:25> 'char' lvalue
|       | | | |     |-ImplicitCastExpr 0x14d808c40 <col:13> 'char *' <LValueToRValue>
|       | | | |     | `-DeclRefExpr 0x14d808c00 <col:13> 'char *' lvalue Var 0x14d808418 'short_name' 'char *'
|       | | | |     `-IntegerLiteral 0x14d808c20 <col:24> 'int' 0
|       | | | `-CharacterLiteral 0x14d808c78 <col:30> 'int' 35
|       | | `-ParenExpr 0x14d809168 <line:16:13, col:72> 'int'
|       | |   `-BinaryOperator 0x14d809148 <col:14, col:69> 'int' '&&'
|       | |     |-ImplicitCastExpr 0x14d809130 <col:14, col:26> 'int' <IntegralCast>
|       | |     | `-ImplicitCastExpr 0x14d809118 <col:14, col:26> 'char' <LValueToRValue>
|       | |     |   `-ArraySubscriptExpr 0x14d808d38 <col:14, col:26> 'char' lvalue
|       | |     |     |-ImplicitCastExpr 0x14d808d20 <col:14> 'char *' <LValueToRValue>
|       | |     |     | `-DeclRefExpr 0x14d808ce0 <col:14> 'char *' lvalue Var 0x14d808418 'short_name' 'char *'
|       | |     |     `-IntegerLiteral 0x14d808d00 <col:25> 'int' 0
|       | |     `-BinaryOperator 0x14d8090f8 <col:31, col:69> 'int' '=='
|       | |       |-ImplicitCastExpr 0x14d8090e0 <col:31, col:64> 'int' <IntegralCast>
|       | |       | `-ImplicitCastExpr 0x14d8090c8 <col:31, col:64> 'char' <LValueToRValue>
|       | |       |   `-ArraySubscriptExpr 0x14d809090 <col:31, col:64> 'char' lvalue
|       | |       |     |-ImplicitCastExpr 0x14d809078 <col:31> 'char *' <LValueToRValue>
|       | |       |     | `-DeclRefExpr 0x14d808d58 <col:31> 'char *' lvalue Var 0x14d808418 'short_name' 'char *'
|       | |       |     `-BinaryOperator 0x14d809058 <col:42, col:63> 'unsigned long' '-'
|       | |       |       |-CallExpr 0x14d808fc8 <col:42, col:59> 'unsigned long'
|       | |       |       | |-ImplicitCastExpr 0x14d808fb0 <col:42> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|       | |       |       | | `-DeclRefExpr 0x14d808f28 <col:42> 'unsigned long (const char *)' Function 0x14d808db8 'strlen' 'unsigned long (const char *)'
|       | |       |       | `-ImplicitCastExpr 0x14d809008 <col:49> 'const char *' <NoOp>
|       | |       |       |   `-ImplicitCastExpr 0x14d808ff0 <col:49> 'char *' <LValueToRValue>
|       | |       |       |     `-DeclRefExpr 0x14d808f48 <col:49> 'char *' lvalue Var 0x14d808418 'short_name' 'char *'
|       | |       |       `-ImplicitCastExpr 0x14d809040 <col:63> 'unsigned long' <IntegralCast>
|       | |       |         `-IntegerLiteral 0x14d809020 <col:63> 'int' 1
|       | |       `-CharacterLiteral 0x14d8090b0 <col:69> 'int' 126
|       | `-CompoundStmt 0x14d8091c0 <line:17:11, line:20:9>
|       |   `-GotoStmt 0x14d8091a8 <line:19:13, col:18> 'next' 0x14d808b60
|       |-DeclStmt 0x14d142468 <line:23:9, col:50>
|       | `-VarDecl 0x14d142218 <col:9, col:49> col:15 used text 'char *' cinit
|       |   `-CallExpr 0x14d142438 <col:22, col:49> '<dependent type>' contains-errors
|       |     |-DeclRefExpr 0x14d142360 <col:22> 'int ()' Function 0x14d1422a8 'is_text_file' 'int ()'
|       |     |-DeclRefExpr 0x14d142380 <col:35> 'char *' lvalue Var 0x14d8084b0 'full_name' 'char *'
|       |     `-UnaryOperator 0x14d142420 <col:46, col:47> '<dependent type>' contains-errors prefix '&' cannot overflow
|       |       `-RecoveryExpr 0x14d142400 <col:47> '<dependent type>' contains-errors lvalue
|       |-IfStmt 0x14d142a10 <line:24:9, line:33:9>
|       | |-BinaryOperator 0x14d1425e8 <line:24:13, col:30> 'int' contains-errors '||'
|       | | |-UnaryOperator 0x14d142590 <col:13, col:14> 'int' contains-errors prefix '!' cannot overflow
|       | | | `-ImplicitCastExpr 0x14d142578 <col:14> 'char *' contains-errors <LValueToRValue>
|       | | |   `-DeclRefExpr 0x14d142480 <col:14> 'char *' contains-errors lvalue Var 0x14d142218 'text' 'char *'
|       | | `-BinaryOperator 0x14d1425c8 <col:22, col:30> 'int' contains-errors '=='
|       | |   |-DeclRefExpr 0x14d1424d0 <col:22> 'char *' contains-errors lvalue Var 0x14d142218 'text' 'char *'
|       | |   `-RecoveryExpr 0x14d1425a8 <col:30> '<dependent type>' contains-errors lvalue
|       | `-CompoundStmt 0x14d1429e8 <line:25:9, line:33:9>
|       |   |-DeclStmt 0x14d142740 <line:26:13, col:74>
|       |   | `-VarDecl 0x14d142620 <col:13, col:17> col:17 used flag 'int'
|       |   |-CallExpr 0x14d142990 <line:27:13, line:31:13> '<dependent type>' contains-errors
|       |   | |-DeclRefExpr 0x14d142838 <line:27:13> 'int ()' Function 0x14d142780 'problem_data_add' 'int ()'
|       |   | |-RecoveryExpr 0x14d142858 <col:30> '<dependent type>' contains-errors lvalue
|       |   | |-DeclRefExpr 0x14d142878 <line:28:21> 'char *' lvalue Var 0x14d808418 'short_name' 'char *'
|       |   | |-DeclRefExpr 0x14d142898 <line:29:21> 'char *' lvalue Var 0x14d8084b0 'full_name' 'char *'
|       |   | `-BinaryOperator 0x14d142970 <line:30:21, col:28> '<dependent type>' contains-errors '+'
|       |   |   |-DeclRefExpr 0x14d1428b8 <col:21> 'int' lvalue Var 0x14d142620 'flag' 'int'
|       |   |   `-RecoveryExpr 0x14d142950 <col:28> '<dependent type>' contains-errors lvalue
|       |   `-GotoStmt 0x14d1429d0 <line:32:13, col:18> 'next' 0x14d808b60
|       |-DeclStmt 0x14d142ab0 <line:35:9, col:22>
|       | `-VarDecl 0x14d142a48 <col:9, col:15> col:15 used content 'char *'
|       |-IfStmt 0x14d143100 <line:36:9, line:46:9> has_else
|       | |-BinaryOperator 0x14d142b80 <line:36:13, col:20> 'int' contains-errors '<'
|       | | |-RecoveryExpr 0x14d142b60 <col:13> '<dependent type>' contains-errors lvalue
|       | | `-BinaryOperator 0x14d142b20 <col:18, col:20> 'int' '*'
|       | |   |-IntegerLiteral 0x14d142ae0 <col:18> 'int' 4
|       | |   `-IntegerLiteral 0x14d142b00 <col:20> 'int' 1024
|       | |-CompoundStmt 0x14d142c18 <line:37:9, line:40:9>
|       | | `-BinaryOperator 0x14d142bf8 <line:39:13, col:23> 'char *' contains-errors '='
|       | |   |-DeclRefExpr 0x14d142ba0 <col:13> 'char *' lvalue Var 0x14d142a48 'content' 'char *'
|       | |   `-ImplicitCastExpr 0x14d142be0 <col:23> 'char *' contains-errors <LValueToRValue>
|       | |     `-DeclRefExpr 0x14d142bc0 <col:23> 'char *' contains-errors lvalue Var 0x14d142218 'text' 'char *'
|       | `-CompoundStmt 0x14d1430e0 <line:42:9, line:46:9>
|       |   |-CallExpr 0x14d142e78 <line:44:13, col:22> 'void' contains-errors
|       |   | |-ImplicitCastExpr 0x14d142e60 <col:13> 'void (*)(void *)' <FunctionToPointerDecay>
|       |   | | `-DeclRefExpr 0x14d142dd8 <col:13> 'void (void *)' Function 0x14d142c68 'free' 'void (void *)'
|       |   | `-ImplicitCastExpr 0x14d142eb8 <col:18> 'void *' contains-errors <BitCast>
|       |   |   `-ImplicitCastExpr 0x14d142ea0 <col:18> 'char *' contains-errors <LValueToRValue>
|       |   |     `-DeclRefExpr 0x14d142df8 <col:18> 'char *' contains-errors lvalue Var 0x14d142218 'text' 'char *'
|       |   `-BinaryOperator 0x14d1430c0 <line:45:13, col:50> 'char *' '='
|       |     |-DeclRefExpr 0x14d142ed0 <col:13> 'char *' lvalue Var 0x14d142a48 'content' 'char *'
|       |     `-ImplicitCastExpr 0x14d1430a8 <col:23, col:50> 'char *' <IntegralToPointer>
|       |       `-CallExpr 0x14d143048 <col:23, col:50> 'int'
|       |         |-ImplicitCastExpr 0x14d143030 <col:23> 'int (*)()' <FunctionToPointerDecay>
|       |         | `-DeclRefExpr 0x14d142fd0 <col:23> 'int ()' Function 0x14d142f18 'dd_load_text' 'int ()'
|       |         |-ImplicitCastExpr 0x14d143078 <col:36> 'struct dump_dir *' <LValueToRValue>
|       |         | `-DeclRefExpr 0x14d142ff0 <col:36> 'struct dump_dir *' lvalue ParmVar 0x14d129118 'dd' 'struct dump_dir *'
|       |         `-ImplicitCastExpr 0x14d143090 <col:40> 'char *' <LValueToRValue>
|       |           `-DeclRefExpr 0x14d143010 <col:40> 'char *' lvalue Var 0x14d808418 'short_name' 'char *'
|       |-DeclStmt 0x14e808af8 <line:48:9, col:41>
|       | `-VarDecl 0x14d143148 <col:9, col:40> col:15 used nl 'char *' cinit
|       |   `-CallExpr 0x14e808a98 <col:20, col:40> 'char *'
|       |     |-ImplicitCastExpr 0x14e808a80 <col:20> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x14e8089e0 <col:20> 'char *(const char *, int)' Function 0x14e808800 'strchr' 'char *(const char *, int)'
|       |     |-ImplicitCastExpr 0x14e808ae0 <col:27> 'const char *' <NoOp>
|       |     | `-ImplicitCastExpr 0x14e808ac8 <col:27> 'char *' <LValueToRValue>
|       |     |   `-DeclRefExpr 0x14e808a00 <col:27> 'char *' lvalue Var 0x14d142a48 'content' 'char *'
|       |     `-CharacterLiteral 0x14e808a20 <col:36> 'int' 10
|       |-IfStmt 0x14e808ce8 <line:49:9, line:50:19>
|       | |-BinaryOperator 0x14e808c28 <line:49:13, col:28> 'int' '&&'
|       | | |-ImplicitCastExpr 0x14e808c10 <col:13> 'char *' <LValueToRValue>
|       | | | `-DeclRefExpr 0x14e808b10 <col:13> 'char *' lvalue Var 0x14d143148 'nl' 'char *'
|       | | `-BinaryOperator 0x14e808bf0 <col:19, col:28> 'int' '=='
|       | |   |-ImplicitCastExpr 0x14e808bd8 <col:19, col:23> 'int' <IntegralCast>
|       | |   | `-ImplicitCastExpr 0x14e808bc0 <col:19, col:23> 'char' <LValueToRValue>
|       | |   |   `-ArraySubscriptExpr 0x14e808b88 <col:19, col:23> 'char' lvalue
|       | |   |     |-ImplicitCastExpr 0x14e808b70 <col:19> 'char *' <LValueToRValue>
|       | |   |     | `-DeclRefExpr 0x14e808b30 <col:19> 'char *' lvalue Var 0x14d143148 'nl' 'char *'
|       | |   |     `-IntegerLiteral 0x14e808b50 <col:22> 'int' 1
|       | |   `-CharacterLiteral 0x14e808ba8 <col:28> 'int' 0
|       | `-BinaryOperator 0x14e808cc8 <line:50:13, col:19> 'char' '='
|       |   |-UnaryOperator 0x14e808c80 <col:13, col:14> 'char' lvalue prefix '*' cannot overflow
|       |   | `-ImplicitCastExpr 0x14e808c68 <col:14> 'char *' <LValueToRValue>
|       |   |   `-DeclRefExpr 0x14e808c48 <col:14> 'char *' lvalue Var 0x14d143148 'nl' 'char *'
|       |   `-ImplicitCastExpr 0x14e808cb0 <col:19> 'char' <IntegralCast>
|       |     `-CharacterLiteral 0x14e808c98 <col:19> 'int' 0
|       |-DeclStmt 0x14e808ea8 <line:53:9, line:55:10>
|       | `-VarDecl 0x14e808d20 <line:53:9, col:15> col:15 used sanitized 'char *'
|       |-IfStmt 0x14e809058 <line:56:9, line:60:9>
|       | |-ImplicitCastExpr 0x14e808ee0 <line:56:13> 'char *' <LValueToRValue>
|       | | `-DeclRefExpr 0x14e808ec0 <col:13> 'char *' lvalue Var 0x14e808d20 'sanitized' 'char *'
|       | `-CompoundStmt 0x14e809038 <line:57:9, line:60:9>
|       |   |-CallExpr 0x14e808f68 <line:58:13, col:25> 'void'
|       |   | |-ImplicitCastExpr 0x14e808f50 <col:13> 'void (*)(void *)' <FunctionToPointerDecay>
|       |   | | `-DeclRefExpr 0x14e808ef8 <col:13> 'void (void *)' Function 0x14d142c68 'free' 'void (void *)'
|       |   | `-ImplicitCastExpr 0x14e808fa8 <col:18> 'void *' <BitCast>
|       |   |   `-ImplicitCastExpr 0x14e808f90 <col:18> 'char *' <LValueToRValue>
|       |   |     `-DeclRefExpr 0x14e808f18 <col:18> 'char *' lvalue Var 0x14d142a48 'content' 'char *'
|       |   `-BinaryOperator 0x14e809018 <line:59:13, col:23> 'char *' '='
|       |     |-DeclRefExpr 0x14e808fc0 <col:13> 'char *' lvalue Var 0x14d142a48 'content' 'char *'
|       |     `-ImplicitCastExpr 0x14e809000 <col:23> 'char *' <LValueToRValue>
|       |       `-DeclRefExpr 0x14e808fe0 <col:23> 'char *' lvalue Var 0x14e808d20 'sanitized' 'char *'
|       |-DeclStmt 0x14e809118 <line:63:9, col:22>
|       | `-VarDecl 0x14e809090 <col:9, col:21> col:13 used flags 'int' cinit
|       |   `-IntegerLiteral 0x14e8090f8 <col:21> 'int' 0
|       |-DeclStmt 0x14e809280 <line:69:9, line:77:10>
|       | `-VarDecl 0x14e809218 <line:69:9, col:45> col:34 used list_files 'const char *const[]' static
|       |-CallExpr 0x14e809760 <line:84:9, line:88:9> '<dependent type>' contains-errors
|       | |-DeclRefExpr 0x14e8096c0 <line:84:9> 'int ()' Function 0x14d142780 'problem_data_add' 'int ()'
|       | |-RecoveryExpr 0x14e8096e0 <col:26> '<dependent type>' contains-errors lvalue
|       | |-DeclRefExpr 0x14e809700 <line:85:17> 'char *' lvalue Var 0x14d808418 'short_name' 'char *'
|       | |-DeclRefExpr 0x14e809720 <line:86:17> 'char *' lvalue Var 0x14d142a48 'content' 'char *'
|       | `-DeclRefExpr 0x14e809740 <line:87:17> 'int' lvalue Var 0x14e809090 'flags' 'int'
|       |-CallExpr 0x14e80a818 <line:89:9, col:21> 'void'
|       | |-ImplicitCastExpr 0x14e80a800 <col:9> 'void (*)(void *)' <FunctionToPointerDecay>
|       | | `-DeclRefExpr 0x14e8097a0 <col:9> 'void (void *)' Function 0x14d142c68 'free' 'void (void *)'
|       | `-ImplicitCastExpr 0x14e80a858 <col:14> 'void *' <BitCast>
|       |   `-ImplicitCastExpr 0x14e80a840 <col:14> 'char *' <LValueToRValue>
|       |     `-DeclRefExpr 0x14e8097c0 <col:14> 'char *' lvalue Var 0x14d142a48 'content' 'char *'
|       |-LabelStmt 0x14e80a938 <line:90:2, line:91:24> 'next'
|       | `-CallExpr 0x14e80a8e0 <col:9, col:24> 'void'
|       |   |-ImplicitCastExpr 0x14e80a8c8 <col:9> 'void (*)(void *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x14e80a870 <col:9> 'void (void *)' Function 0x14d142c68 'free' 'void (void *)'
|       |   `-ImplicitCastExpr 0x14e80a920 <col:14> 'void *' <BitCast>
|       |     `-ImplicitCastExpr 0x14e80a908 <col:14> 'char *' <LValueToRValue>
|       |       `-DeclRefExpr 0x14e80a890 <col:14> 'char *' lvalue Var 0x14d808418 'short_name' 'char *'
|       `-CallExpr 0x14e80a9c8 <line:92:9, col:23> 'void'
|         |-ImplicitCastExpr 0x14e80a9b0 <col:9> 'void (*)(void *)' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x14e80a958 <col:9> 'void (void *)' Function 0x14d142c68 'free' 'void (void *)'
|         `-ImplicitCastExpr 0x14e80aa08 <col:14> 'void *' <BitCast>
|           `-ImplicitCastExpr 0x14e80a9f0 <col:14> 'char *' <LValueToRValue>
|             `-DeclRefExpr 0x14e80a978 <col:14> 'char *' lvalue Var 0x14d8084b0 'full_name' 'char *'
|-FunctionDecl 0x14d808db8 <line:16:42> col:42 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x14d808eb8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x14d808e60 <<invalid sloc>> Implicit 902
|-FunctionDecl 0x14d142c68 <line:44:13> col:13 implicit used free 'void (void *)' extern
| |-ParmVarDecl 0x14d142d68 <<invalid sloc>> <invalid sloc> 'void *'
| `-BuiltinAttr 0x14d142d10 <<invalid sloc>> Implicit 873
|-FunctionDecl 0x14e808800 <line:48:20> col:20 implicit used strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x14e808900 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x14e808968 <<invalid sloc>> <invalid sloc> 'int'
| `-BuiltinAttr 0x14e8088a8 <<invalid sloc>> Implicit 893
`-FunctionDecl 0x14e809440 <line:81:13> col:13 implicit used strcmp 'int (const char *, const char *)' extern
  |-ParmVarDecl 0x14e809540 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x14e8095a8 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x14e8094e8 <<invalid sloc>> Implicit 887
