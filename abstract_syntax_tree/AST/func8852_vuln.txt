TranslationUnitDecl 0x144855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1448564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x144855bd0 '__int128'
|-TypedefDecl 0x144856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x144855bf0 'unsigned __int128'
|-TypedefDecl 0x14500be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14500bc00 'struct __NSConstantString_tag'
|   `-Record 0x144856580 '__NSConstantString_tag'
|-TypedefDecl 0x14500be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x144855d90 '__SVInt8_t'
|-TypedefDecl 0x14500bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x144855db0 '__SVInt16_t'
|-TypedefDecl 0x14500bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x144855dd0 '__SVInt32_t'
|-TypedefDecl 0x14500bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x144855df0 '__SVInt64_t'
|-TypedefDecl 0x14500c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x144855e10 '__SVUint8_t'
|-TypedefDecl 0x14500c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x144855e30 '__SVUint16_t'
|-TypedefDecl 0x14500c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x144855e50 '__SVUint32_t'
|-TypedefDecl 0x14500c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x144855e70 '__SVUint64_t'
|-TypedefDecl 0x14500c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x144855e90 '__SVFloat16_t'
|-TypedefDecl 0x14500c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x144855eb0 '__SVFloat32_t'
|-TypedefDecl 0x14500c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x144855ed0 '__SVFloat64_t'
|-TypedefDecl 0x14500c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x144855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14500c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x144855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14500c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x144855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14500c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x144855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14500c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x144855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14500c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x144855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14500c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x144855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14500c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x144855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14500c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x144855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14500c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x144856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14500c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x144856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14500c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x144856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14500c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x144856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14500c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x144856090 '__clang_svint8x3_t'
|-TypedefDecl 0x14500c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1448560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14500c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1448560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14500c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1448560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14500c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x144856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14500ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x144856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14500cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x144856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14500cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x144856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14500cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x144856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14500d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1448561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14500d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1448561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14500d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1448561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14500d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x144856210 '__clang_svint8x4_t'
|-TypedefDecl 0x14500d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x144856230 '__clang_svint16x4_t'
|-TypedefDecl 0x14500d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x144856250 '__clang_svint32x4_t'
|-TypedefDecl 0x14500d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x144856270 '__clang_svint64x4_t'
|-TypedefDecl 0x14500d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x144856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14500d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1448562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14500d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1448562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14500d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1448562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14500d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x144856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14500d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x144856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14500d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x144856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14500d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x144856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14500da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x144856390 '__SVBool_t'
|-TypedefDecl 0x14500da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1448563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14500dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1448563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14500db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1448563f0 '__SVCount_t'
|-TypedefDecl 0x14500dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14500dbb0 'char *'
|   `-BuiltinType 0x1448556b0 'char'
|-TypedefDecl 0x14500dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14500dbb0 'char *'
|   `-BuiltinType 0x1448556b0 'char'
`-FunctionDecl 0x14500df18 <dataset_diviso_filec/func8852_vuln.c:1:1, line:43:1> line:1:1 invalid _asn1_extract_der_octet 'int (int, const unsigned char *, int)'
  |-ParmVarDecl 0x14500dcf0 <col:26, col:36> col:36 invalid node 'int'
  |-ParmVarDecl 0x14500dda8 <col:42, col:63> col:63 used der 'const unsigned char *'
  |-ParmVarDecl 0x14500de28 <line:2:5, col:9> col:9 used der_len 'int'
  `-CompoundStmt 0x145028f08 <line:3:1, line:43:1>
    |-DeclStmt 0x14500e0f0 <line:4:3, col:17>
    | |-VarDecl 0x14500dff0 <col:3, col:7> col:7 used len2 'int'
    | `-VarDecl 0x14500e070 <col:3, col:13> col:13 used len3 'int'
    |-DeclStmt 0x14500e220 <line:5:3, col:28>
    | |-VarDecl 0x14500e120 <col:3, col:7> col:7 used counter2 'int'
    | `-VarDecl 0x14500e1a0 <col:3, col:17> col:17 used counter_end 'int'
    |-BinaryOperator 0x145027540 <line:7:3, col:50> 'int' '='
    | |-DeclRefExpr 0x14500e238 <col:3> 'int' lvalue Var 0x14500dff0 'len2' 'int'
    | `-CallExpr 0x1450274d8 <col:10, col:50> 'int'
    |   |-ImplicitCastExpr 0x1450274c0 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x14500e3b0 <col:10> 'int ()' Function 0x14500e2f8 'asn1_get_length_der' 'int ()'
    |   |-ImplicitCastExpr 0x145027510 <col:31> 'const unsigned char *' <LValueToRValue>
    |   | `-DeclRefExpr 0x14500e3d0 <col:31> 'const unsigned char *' lvalue ParmVar 0x14500dda8 'der' 'const unsigned char *'
    |   |-ImplicitCastExpr 0x145027528 <col:36> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x145027400 <col:36> 'int' lvalue ParmVar 0x14500de28 'der_len' 'int'
    |   `-UnaryOperator 0x145027470 <col:45, col:46> 'int *' prefix '&' cannot overflow
    |     `-DeclRefExpr 0x145027420 <col:46> 'int' lvalue Var 0x14500e070 'len3' 'int'
    |-IfStmt 0x145027638 <line:8:3, line:9:12>
    | |-BinaryOperator 0x1450275d0 <line:8:7, col:15> 'int' '<'
    | | |-ImplicitCastExpr 0x1450275b8 <col:7> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x145027560 <col:7> 'int' lvalue Var 0x14500dff0 'len2' 'int'
    | | `-UnaryOperator 0x1450275a0 <col:14, col:15> 'int' prefix '-'
    | |   `-IntegerLiteral 0x145027580 <col:15> 'int' 1
    | `-ReturnStmt 0x145027628 <line:9:5, col:12>
    |   `-RecoveryExpr 0x145027608 <col:12> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x1450276f0 <line:11:3, col:21> 'int' '='
    | |-DeclRefExpr 0x145027658 <col:3> 'int' lvalue Var 0x14500e120 'counter2' 'int'
    | `-BinaryOperator 0x1450276d0 <col:14, col:21> 'int' '+'
    |   |-ImplicitCastExpr 0x1450276b8 <col:14> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x145027678 <col:14> 'int' lvalue Var 0x14500e070 'len3' 'int'
    |   `-IntegerLiteral 0x145027698 <col:21> 'int' 1
    |-IfStmt 0x1450278d0 <line:13:3, line:16:19> has_else
    | |-BinaryOperator 0x145027780 <line:13:7, col:16> 'int' '=='
    | | |-ImplicitCastExpr 0x145027768 <col:7> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x145027710 <col:7> 'int' lvalue Var 0x14500dff0 'len2' 'int'
    | | `-UnaryOperator 0x145027750 <col:15, col:16> 'int' prefix '-'
    | |   `-IntegerLiteral 0x145027730 <col:16> 'int' 1
    | |-BinaryOperator 0x145027838 <line:14:5, col:29> 'int' '='
    | | |-DeclRefExpr 0x1450277a0 <col:5> 'int' lvalue Var 0x14500e1a0 'counter_end' 'int'
    | | `-BinaryOperator 0x145027818 <col:19, col:29> 'int' '-'
    | |   |-ImplicitCastExpr 0x145027800 <col:19> 'int' <LValueToRValue>
    | |   | `-DeclRefExpr 0x1450277c0 <col:19> 'int' lvalue ParmVar 0x14500de28 'der_len' 'int'
    | |   `-IntegerLiteral 0x1450277e0 <col:29> 'int' 2
    | `-BinaryOperator 0x1450278b0 <line:16:5, col:19> 'int' '='
    |   |-DeclRefExpr 0x145027858 <col:5> 'int' lvalue Var 0x14500e1a0 'counter_end' 'int'
    |   `-ImplicitCastExpr 0x145027898 <col:19> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x145027878 <col:19> 'int' lvalue ParmVar 0x14500de28 'der_len' 'int'
    |-WhileStmt 0x145028ea0 <line:18:3, line:40:5>
    | |-BinaryOperator 0x145027970 <line:18:10, col:21> 'int' '<'
    | | |-ImplicitCastExpr 0x145027940 <col:10> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x145027900 <col:10> 'int' lvalue Var 0x14500e120 'counter2' 'int'
    | | `-ImplicitCastExpr 0x145027958 <col:21> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x145027920 <col:21> 'int' lvalue Var 0x14500e1a0 'counter_end' 'int'
    | `-CompoundStmt 0x145028e70 <line:19:5, line:40:5>
    |   |-BinaryOperator 0x145027b78 <line:20:7, col:76> 'int' '='
    |   | |-DeclRefExpr 0x145027990 <col:7> 'int' lvalue Var 0x14500dff0 'len2' 'int'
    |   | `-CallExpr 0x145027b40 <col:14, col:76> 'int'
    |   |   |-ImplicitCastExpr 0x145027b28 <col:14> 'int (*)()' <FunctionToPointerDecay>
    |   |   | `-DeclRefExpr 0x1450279b0 <col:14> 'int ()' Function 0x14500e2f8 'asn1_get_length_der' 'int ()'
    |   |   |-BinaryOperator 0x145027a40 <col:35, col:41> 'const unsigned char *' '+'
    |   |   | |-ImplicitCastExpr 0x145027a10 <col:35> 'const unsigned char *' <LValueToRValue>
    |   |   | | `-DeclRefExpr 0x1450279d0 <col:35> 'const unsigned char *' lvalue ParmVar 0x14500dda8 'der' 'const unsigned char *'
    |   |   | `-ImplicitCastExpr 0x145027a28 <col:41> 'int' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x1450279f0 <col:41> 'int' lvalue Var 0x14500e120 'counter2' 'int'
    |   |   |-BinaryOperator 0x145027ad0 <col:51, col:61> 'int' '-'
    |   |   | |-ImplicitCastExpr 0x145027aa0 <col:51> 'int' <LValueToRValue>
    |   |   | | `-DeclRefExpr 0x145027a60 <col:51> 'int' lvalue ParmVar 0x14500de28 'der_len' 'int'
    |   |   | `-ImplicitCastExpr 0x145027ab8 <col:61> 'int' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x145027a80 <col:61> 'int' lvalue Var 0x14500e120 'counter2' 'int'
    |   |   `-UnaryOperator 0x145027b10 <col:71, col:72> 'int *' prefix '&' cannot overflow
    |   |     `-DeclRefExpr 0x145027af0 <col:72> 'int' lvalue Var 0x14500e070 'len3' 'int'
    |   |-IfStmt 0x145027c70 <line:22:7, line:23:9>
    |   | |-BinaryOperator 0x145027c08 <line:22:11, col:19> 'int' '<'
    |   | | |-ImplicitCastExpr 0x145027bf0 <col:11> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x145027b98 <col:11> 'int' lvalue Var 0x14500dff0 'len2' 'int'
    |   | | `-UnaryOperator 0x145027bd8 <col:18, col:19> 'int' prefix '-'
    |   | |   `-IntegerLiteral 0x145027bb8 <col:19> 'int' 1
    |   | `-ReturnStmt 0x145027c60 <line:23:2, col:9>
    |   |   `-RecoveryExpr 0x145027c40 <col:9> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x145028308 <line:25:7, line:37:2> has_else
    |   | |-BinaryOperator 0x145027ce8 <line:25:11, col:18> 'int' '>'
    |   | | |-ImplicitCastExpr 0x145027cd0 <col:11> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x145027c90 <col:11> 'int' lvalue Var 0x14500dff0 'len2' 'int'
    |   | | `-IntegerLiteral 0x145027cb0 <col:18> 'int' 0
    |   | |-CompoundStmt 0x145027f68 <line:26:2, line:28:2>
    |   | | `-CallExpr 0x145027f30 <line:27:4, col:57> '<dependent type>' contains-errors
    |   | |   |-DeclRefExpr 0x145027de8 <col:4> 'int ()' Function 0x145027d30 '_asn1_append_value' 'int ()'
    |   | |   |-RecoveryExpr 0x145027e08 <col:24> '<dependent type>' contains-errors lvalue
    |   | |   |-BinaryOperator 0x145027ef0 <col:30, col:47> 'const unsigned char *' '+'
    |   | |   | |-BinaryOperator 0x145027e98 <col:30, col:36> 'const unsigned char *' '+'
    |   | |   | | |-ImplicitCastExpr 0x145027e68 <col:30> 'const unsigned char *' <LValueToRValue>
    |   | |   | | | `-DeclRefExpr 0x145027e28 <col:30> 'const unsigned char *' lvalue ParmVar 0x14500dda8 'der' 'const unsigned char *'
    |   | |   | | `-ImplicitCastExpr 0x145027e80 <col:36> 'int' <LValueToRValue>
    |   | |   | |   `-DeclRefExpr 0x145027e48 <col:36> 'int' lvalue Var 0x14500e120 'counter2' 'int'
    |   | |   | `-ImplicitCastExpr 0x145027ed8 <col:47> 'int' <LValueToRValue>
    |   | |   |   `-DeclRefExpr 0x145027eb8 <col:47> 'int' lvalue Var 0x14500e070 'len3' 'int'
    |   | |   `-DeclRefExpr 0x145027f10 <col:53> 'int' lvalue Var 0x14500dff0 'len2' 'int'
    |   | `-CompoundStmt 0x1450282e8 <line:30:2, line:37:2>
    |   |   |-BinaryOperator 0x1450281e8 <line:32:4, line:34:35> 'int' contains-errors '='
    |   |   | |-DeclRefExpr 0x145027f80 <line:32:4> 'int' lvalue Var 0x14500dff0 'len2' 'int'
    |   |   | `-CallExpr 0x1450281b0 <line:33:6, line:34:35> '<dependent type>' contains-errors
    |   |   |   |-RecoveryExpr 0x145027fa0 <line:33:6> '<dependent type>' contains-errors lvalue
    |   |   |   |-RecoveryExpr 0x145027fc0 <col:31> '<dependent type>' contains-errors lvalue
    |   |   |   |-BinaryOperator 0x1450280a8 <col:37, col:54> 'const unsigned char *' '+'
    |   |   |   | |-BinaryOperator 0x145028050 <col:37, col:43> 'const unsigned char *' '+'
    |   |   |   | | |-ImplicitCastExpr 0x145028020 <col:37> 'const unsigned char *' <LValueToRValue>
    |   |   |   | | | `-DeclRefExpr 0x145027fe0 <col:37> 'const unsigned char *' lvalue ParmVar 0x14500dda8 'der' 'const unsigned char *'
    |   |   |   | | `-ImplicitCastExpr 0x145028038 <col:43> 'int' <LValueToRValue>
    |   |   |   | |   `-DeclRefExpr 0x145028000 <col:43> 'int' lvalue Var 0x14500e120 'counter2' 'int'
    |   |   |   | `-ImplicitCastExpr 0x145028090 <col:54> 'int' <LValueToRValue>
    |   |   |   |   `-DeclRefExpr 0x145028070 <col:54> 'int' lvalue Var 0x14500e070 'len3' 'int'
    |   |   |   `-BinaryOperator 0x145028190 <line:34:10, col:31> 'int' '-'
    |   |   |     |-BinaryOperator 0x145028138 <col:10, col:20> 'int' '-'
    |   |   |     | |-ImplicitCastExpr 0x145028108 <col:10> 'int' <LValueToRValue>
    |   |   |     | | `-DeclRefExpr 0x1450280c8 <col:10> 'int' lvalue ParmVar 0x14500de28 'der_len' 'int'
    |   |   |     | `-ImplicitCastExpr 0x145028120 <col:20> 'int' <LValueToRValue>
    |   |   |     |   `-DeclRefExpr 0x1450280e8 <col:20> 'int' lvalue Var 0x14500e120 'counter2' 'int'
    |   |   |     `-ImplicitCastExpr 0x145028178 <col:31> 'int' <LValueToRValue>
    |   |   |       `-DeclRefExpr 0x145028158 <col:31> 'int' lvalue Var 0x14500e070 'len3' 'int'
    |   |   `-IfStmt 0x1450282c8 <line:35:4, line:36:13>
    |   |     |-BinaryOperator 0x145028260 <line:35:8, col:15> 'int' '<'
    |   |     | |-ImplicitCastExpr 0x145028248 <col:8> 'int' <LValueToRValue>
    |   |     | | `-DeclRefExpr 0x145028208 <col:8> 'int' lvalue Var 0x14500dff0 'len2' 'int'
    |   |     | `-IntegerLiteral 0x145028228 <col:15> 'int' 0
    |   |     `-ReturnStmt 0x1450282b8 <line:36:6, col:13>
    |   |       `-ImplicitCastExpr 0x1450282a0 <col:13> 'int' <LValueToRValue>
    |   |         `-DeclRefExpr 0x145028280 <col:13> 'int' lvalue Var 0x14500dff0 'len2' 'int'
    |   `-CompoundAssignOperator 0x145028e40 <line:39:7, col:33> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |     |-DeclRefExpr 0x145028338 <col:7> 'int' lvalue Var 0x14500e120 'counter2' 'int'
    |     `-BinaryOperator 0x145028e20 <col:19, col:33> 'int' '+'
    |       |-BinaryOperator 0x1450283c8 <col:19, col:26> 'int' '+'
    |       | |-ImplicitCastExpr 0x145028398 <col:19> 'int' <LValueToRValue>
    |       | | `-DeclRefExpr 0x145028358 <col:19> 'int' lvalue Var 0x14500dff0 'len2' 'int'
    |       | `-ImplicitCastExpr 0x1450283b0 <col:26> 'int' <LValueToRValue>
    |       |   `-DeclRefExpr 0x145028378 <col:26> 'int' lvalue Var 0x14500e070 'len3' 'int'
    |       `-IntegerLiteral 0x145028e00 <col:33> 'int' 1
    `-ReturnStmt 0x145028ef8 <line:42:3, col:10>
      `-RecoveryExpr 0x145028ed8 <col:10> '<dependent type>' contains-errors lvalue
