TranslationUnitDecl 0x12b055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12b0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12b055bd0 '__int128'
|-TypedefDecl 0x12b056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12b055bf0 'unsigned __int128'
|-TypedefDecl 0x12b80be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12b80bc00 'struct __NSConstantString_tag'
|   `-Record 0x12b056580 '__NSConstantString_tag'
|-TypedefDecl 0x12b80be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12b055d90 '__SVInt8_t'
|-TypedefDecl 0x12b80bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12b055db0 '__SVInt16_t'
|-TypedefDecl 0x12b80bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12b055dd0 '__SVInt32_t'
|-TypedefDecl 0x12b80bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12b055df0 '__SVInt64_t'
|-TypedefDecl 0x12b80c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12b055e10 '__SVUint8_t'
|-TypedefDecl 0x12b80c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12b055e30 '__SVUint16_t'
|-TypedefDecl 0x12b80c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12b055e50 '__SVUint32_t'
|-TypedefDecl 0x12b80c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12b055e70 '__SVUint64_t'
|-TypedefDecl 0x12b80c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12b055e90 '__SVFloat16_t'
|-TypedefDecl 0x12b80c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12b055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12b80c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12b055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12b80c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12b055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12b80c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12b055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12b80c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12b055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12b80c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12b055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12b80c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12b055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12b80c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12b055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12b80c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12b055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12b80c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12b055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12b80c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12b055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12b80c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12b056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12b80c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12b056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12b80c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12b056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12b80c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12b056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12b80c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12b056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12b80c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12b0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12b80c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12b0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12b80c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12b0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12b80c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12b056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12b80ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12b056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12b80cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12b056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12b80cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12b056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12b80cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12b056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12b80d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12b0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12b80d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12b0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12b80d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12b0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12b80d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12b056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12b80d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12b056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12b80d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12b056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12b80d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12b056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12b80d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12b056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12b80d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12b0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12b80d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12b0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12b80d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12b0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12b80d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12b056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12b80d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12b056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12b80d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12b056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12b80d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12b056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12b80da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12b056390 '__SVBool_t'
|-TypedefDecl 0x12b80da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12b0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12b80dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12b0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12b80db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12b0563f0 '__SVCount_t'
|-TypedefDecl 0x12b80dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12b80dbb0 'char *'
|   `-BuiltinType 0x12b0556b0 'char'
|-TypedefDecl 0x12b80dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12b80dbb0 'char *'
|   `-BuiltinType 0x12b0556b0 'char'
`-FunctionDecl 0x12b826918 <dataset_diviso_filec/func10153_nonvuln.c:1:1, line:38:1> line:1:12 hidp_queue_event 'int (struct hidp_session *, struct input_dev *, unsigned int, unsigned int, int)' static
  |-ParmVarDecl 0x12b80e248 <col:29, col:50> col:50 used session 'struct hidp_session *'
  |-ParmVarDecl 0x12b826628 <col:59, col:77> col:77 used dev 'struct input_dev *'
  |-ParmVarDecl 0x12b8266a8 <line:2:5, col:18> col:18 used type 'unsigned int'
  |-ParmVarDecl 0x12b826728 <col:24, col:37> col:37 used code 'unsigned int'
  |-ParmVarDecl 0x12b8267a8 <col:43, col:47> col:47 used value 'int'
  `-CompoundStmt 0x12c809c00 <line:3:1, line:38:1>
    |-DeclStmt 0x12b826ab0 <line:4:2, col:23>
    | `-VarDecl 0x12b826a48 <col:2, col:16> col:16 used newleds 'unsigned char'
    |-DeclStmt 0x12b826cb8 <line:5:2, col:21>
    | |-RecordDecl 0x12b826ac8 <col:2, col:9> col:9 struct sk_buff
    | `-VarDecl 0x12b826c38 <col:2, col:18> col:18 used skb 'struct sk_buff *'
    |-CallExpr 0x12b826f48 <line:7:2, col:42> 'int'
    | |-ImplicitCastExpr 0x12b826f30 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x12b826e00 <col:2> 'int ()' Function 0x12b826d48 'BT_DBG' 'int ()'
    | |-ImplicitCastExpr 0x12b826f90 <col:9> 'char *' <ArrayToPointerDecay>
    | | `-StringLiteral 0x12b826e60 <col:9> 'char[4]' lvalue "STR"
    | |-ImplicitCastExpr 0x12b826fa8 <col:16> 'struct hidp_session *' <LValueToRValue>
    | | `-DeclRefExpr 0x12b826e80 <col:16> 'struct hidp_session *' lvalue ParmVar 0x12b80e248 'session' 'struct hidp_session *'
    | |-ImplicitCastExpr 0x12b826fc0 <col:25> 'unsigned int' <LValueToRValue>
    | | `-DeclRefExpr 0x12b826ea0 <col:25> 'unsigned int' lvalue ParmVar 0x12b8266a8 'type' 'unsigned int'
    | |-ImplicitCastExpr 0x12b826fd8 <col:31> 'unsigned int' <LValueToRValue>
    | | `-DeclRefExpr 0x12b826ec0 <col:31> 'unsigned int' lvalue ParmVar 0x12b826728 'code' 'unsigned int'
    | `-ImplicitCastExpr 0x12b826ff0 <col:37> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x12b826ee0 <col:37> 'int' lvalue ParmVar 0x12b8267a8 'value' 'int'
    |-IfStmt 0x12b8270e8 <line:9:2, line:10:11>
    | |-BinaryOperator 0x12b827080 <line:9:6, col:14> 'int' contains-errors '!='
    | | |-DeclRefExpr 0x12b827008 <col:6> 'unsigned int' lvalue ParmVar 0x12b8266a8 'type' 'unsigned int'
    | | `-RecoveryExpr 0x12b827060 <col:14> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x12b8270d8 <line:10:3, col:11>
    |   `-UnaryOperator 0x12b8270c0 <col:10, col:11> 'int' prefix '-'
    |     `-IntegerLiteral 0x12b8270a0 <col:11> 'int' 1
    |-IfStmt 0x12c808ac8 <line:18:2, line:19:10>
    | |-BinaryOperator 0x12c808a78 <line:18:6, col:23> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x12c808a30 <col:6, col:15> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x12c8089f8 <col:6> 'struct hidp_session *' lvalue ParmVar 0x12b80e248 'session' 'struct hidp_session *'
    | | `-DeclRefExpr 0x12c808a58 <col:23> 'unsigned char' lvalue Var 0x12b826a48 'newleds' 'unsigned char'
    | `-ReturnStmt 0x12c808ab8 <line:19:3, col:10>
    |   `-IntegerLiteral 0x12c808a98 <col:10> 'int' 0
    |-BinaryOperator 0x12c808b68 <line:21:2, col:18> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x12c808b20 <col:2, col:11> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x12c808ae8 <col:2> 'struct hidp_session *' lvalue ParmVar 0x12b80e248 'session' 'struct hidp_session *'
    | `-DeclRefExpr 0x12c808b48 <col:18> 'unsigned char' lvalue Var 0x12b826a48 'newleds' 'unsigned char'
    |-BinaryOperator 0x12c808d80 <line:23:2, col:31> 'struct sk_buff *' contains-errors '='
    | |-DeclRefExpr 0x12c808b88 <col:2> 'struct sk_buff *' lvalue Var 0x12b826c38 'skb' 'struct sk_buff *'
    | `-CallExpr 0x12c808d50 <col:8, col:31> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12c808c88 <col:8> 'int ()' Function 0x12c808bd0 'alloc_skb' 'int ()'
    |   |-IntegerLiteral 0x12c808ca8 <col:18> 'int' 3
    |   `-RecoveryExpr 0x12c808d30 <col:21> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12c809030 <line:24:2, line:27:2>
    | |-UnaryOperator 0x12c808dd8 <line:24:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x12c808dc0 <col:7> 'struct sk_buff *' <LValueToRValue>
    | |   `-DeclRefExpr 0x12c808da0 <col:7> 'struct sk_buff *' lvalue Var 0x12b826c38 'skb' 'struct sk_buff *'
    | `-CompoundStmt 0x12c809010 <col:12, line:27:2>
    |   |-CallExpr 0x12c808f28 <line:25:3, col:15> 'int'
    |   | |-ImplicitCastExpr 0x12c808f10 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x12c808ed0 <col:3> 'int ()' Function 0x12c808e18 'BT_ERR' 'int ()'
    |   | `-ImplicitCastExpr 0x12c808f50 <col:10> 'char *' <ArrayToPointerDecay>
    |   |   `-StringLiteral 0x12c808ef0 <col:10> 'char[4]' lvalue "STR"
    |   `-ReturnStmt 0x12c809000 <line:26:3, col:11>
    |     `-UnaryOperator 0x12c808fe8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       `-ImplicitCastExpr 0x12c808fd0 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |         `-RecoveryExpr 0x12c808fb0 <col:11> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x12c809320 <line:30:2, col:21> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x12c8092d8 <col:2, col:17> '<dependent type>' contains-errors lvalue
    | | `-CallExpr 0x12c809290 <col:3, col:17> 'int'
    | |   |-ImplicitCastExpr 0x12c809278 <col:3> 'int (*)()' <FunctionToPointerDecay>
    | |   | `-DeclRefExpr 0x12c809218 <col:3> 'int ()' Function 0x12c809078 'skb_put' 'int ()'
    | |   |-ImplicitCastExpr 0x12c8092c0 <col:11> 'struct sk_buff *' <LValueToRValue>
    | |   | `-DeclRefExpr 0x12c809238 <col:11> 'struct sk_buff *' lvalue Var 0x12b826c38 'skb' 'struct sk_buff *'
    | |   `-IntegerLiteral 0x12c809258 <col:16> 'int' 1
    | `-IntegerLiteral 0x12c809300 <col:21> 'int' 1
    |-BinaryOperator 0x12c809448 <line:31:2, col:21> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x12c809400 <col:2, col:17> '<dependent type>' contains-errors lvalue
    | | `-CallExpr 0x12c8093b8 <col:3, col:17> 'int'
    | |   |-ImplicitCastExpr 0x12c8093a0 <col:3> 'int (*)()' <FunctionToPointerDecay>
    | |   | `-DeclRefExpr 0x12c809340 <col:3> 'int ()' Function 0x12c809078 'skb_put' 'int ()'
    | |   |-ImplicitCastExpr 0x12c8093e8 <col:11> 'struct sk_buff *' <LValueToRValue>
    | |   | `-DeclRefExpr 0x12c809360 <col:11> 'struct sk_buff *' lvalue Var 0x12b826c38 'skb' 'struct sk_buff *'
    | |   `-IntegerLiteral 0x12c809380 <col:16> 'int' 1
    | `-DeclRefExpr 0x12c809428 <col:21> 'unsigned char' lvalue Var 0x12b826a48 'newleds' 'unsigned char'
    |-CallExpr 0x12c809600 <line:33:2, col:45> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12c809548 <col:2> 'int ()' Function 0x12c809490 'skb_queue_tail' 'int ()'
    | |-UnaryOperator 0x12c8095c8 <col:17, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-RecoveryExpr 0x12c8095a0 <col:18, col:27> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x12c809568 <col:18> 'struct hidp_session *' lvalue ParmVar 0x12b80e248 'session' 'struct hidp_session *'
    | `-DeclRefExpr 0x12c8095e0 <col:42> 'struct sk_buff *' lvalue Var 0x12b826c38 'skb' 'struct sk_buff *'
    |-CallExpr 0x12c809768 <line:35:2, col:23> 'int'
    | |-ImplicitCastExpr 0x12c809750 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x12c809710 <col:2> 'int ()' Function 0x12c809658 'hidp_schedule' 'int ()'
    | `-ImplicitCastExpr 0x12c809790 <col:16> 'struct hidp_session *' <LValueToRValue>
    |   `-DeclRefExpr 0x12c809730 <col:16> 'struct hidp_session *' lvalue ParmVar 0x12b80e248 'session' 'struct hidp_session *'
    `-ReturnStmt 0x12c8097c8 <line:37:2, col:9>
      `-IntegerLiteral 0x12c8097a8 <col:9> 'int' 0
