TranslationUnitDecl 0x132055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1320564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x132055bd0 '__int128'
|-TypedefDecl 0x132056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x132055bf0 'unsigned __int128'
|-TypedefDecl 0x13300c630 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13300c400 'struct __NSConstantString_tag'
|   `-Record 0x132056580 '__NSConstantString_tag'
|-TypedefDecl 0x13300c698 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x132055d90 '__SVInt8_t'
|-TypedefDecl 0x13300c700 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x132055db0 '__SVInt16_t'
|-TypedefDecl 0x13300c768 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x132055dd0 '__SVInt32_t'
|-TypedefDecl 0x13300c7d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x132055df0 '__SVInt64_t'
|-TypedefDecl 0x13300c838 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x132055e10 '__SVUint8_t'
|-TypedefDecl 0x13300c8a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x132055e30 '__SVUint16_t'
|-TypedefDecl 0x13300c908 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x132055e50 '__SVUint32_t'
|-TypedefDecl 0x13300c970 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x132055e70 '__SVUint64_t'
|-TypedefDecl 0x13300c9d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x132055e90 '__SVFloat16_t'
|-TypedefDecl 0x13300ca40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x132055eb0 '__SVFloat32_t'
|-TypedefDecl 0x13300caa8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x132055ed0 '__SVFloat64_t'
|-TypedefDecl 0x13300cb10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x132055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13300cb78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x132055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13300cbe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x132055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13300cc48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x132055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13300ccb0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x132055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13300cd18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x132055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13300cd80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x132055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13300cde8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x132055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13300ce50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x132055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13300ceb8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x132056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13300cf20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x132056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13300cf88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x132056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13300cff0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x132056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13300d058 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x132056090 '__clang_svint8x3_t'
|-TypedefDecl 0x13300d0c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1320560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13300d128 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1320560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13300d190 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1320560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13300d1f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x132056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13300d260 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x132056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13300d2c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x132056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13300d330 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x132056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13300d398 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x132056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13300dc00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1320561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13300dc68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1320561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13300dcd0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1320561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13300dd38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x132056210 '__clang_svint8x4_t'
|-TypedefDecl 0x13300dda0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x132056230 '__clang_svint16x4_t'
|-TypedefDecl 0x13300de08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x132056250 '__clang_svint32x4_t'
|-TypedefDecl 0x13300de70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x132056270 '__clang_svint64x4_t'
|-TypedefDecl 0x13300ded8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x132056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13300df40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1320562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13300dfa8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1320562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13300e010 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1320562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13300e078 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x132056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13300e0e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x132056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13300e148 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x132056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13300e1b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x132056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13300e218 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x132056390 '__SVBool_t'
|-TypedefDecl 0x13300e280 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1320563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13300e2e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1320563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13300e350 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1320563f0 '__SVCount_t'
|-TypedefDecl 0x13300e3f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13300e3b0 'char *'
|   `-BuiltinType 0x1320556b0 'char'
|-TypedefDecl 0x13300e468 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13300e3b0 'char *'
|   `-BuiltinType 0x1320556b0 'char'
|-FunctionDecl 0x13300e958 <dataset_diviso_filec/func23602_vuln.c:1:1, line:59:1> line:1:19 invalid r_bin_dwarf_parse_comp_unit 'const int *(int *, const int *, int *, const int *, int, const int *, int)' static
| |-ParmVarDecl 0x13300e528 <col:47, col:52> col:52 invalid s 'int *'
| |-ParmVarDecl 0x13300e5a8 <col:55, col:66> col:66 invalid obuf 'const int *'
| |-ParmVarDecl 0x13300e628 <line:2:3, col:22> col:22 referenced invalid cu 'int *'
| |-ParmVarDecl 0x13300e6a8 <col:26, col:54> col:54 invalid da 'const int *'
| |-ParmVarDecl 0x13300e728 <line:3:3, col:10> col:10 invalid offset 'int'
| |-ParmVarDecl 0x13300e7a8 <col:18, col:29> col:29 invalid debug_str 'const int *'
| |-ParmVarDecl 0x13300e828 <col:40, col:47> col:47 invalid debug_str_len 'int'
| `-CompoundStmt 0x13400d068 <col:62, line:59:1>
|   |-DeclStmt 0x13300ead8 <line:4:2, col:34>
|   | `-VarDecl 0x13300ea50 <col:2, col:13> col:13 referenced invalid buf 'const int *'
|   |-UnaryExprOrTypeTraitExpr 0x13300eb48 <line:6:2, col:9> 'unsigned long' contains-errors sizeof
|   | `-RecoveryExpr 0x13300eb28 <col:9> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x134008ee8 <line:8:2, line:11:2>
|   | |-BinaryOperator 0x134008e68 <line:8:6, col:23> 'int' contains-errors '>'
|   | | |-CXXDependentScopeMemberExpr 0x134008e00 <col:6, col:14> '<dependent type>' contains-errors lvalue .length
|   | | | `-CXXDependentScopeMemberExpr 0x13300eb88 <col:6, col:10> '<dependent type>' contains-errors lvalue ->hdr
|   | | |   `-RecoveryExpr 0x13300eb68 <col:6> '<dependent type>' contains-errors lvalue
|   | | `-RecoveryExpr 0x134008e48 <col:23> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x134008ed0 <col:38, line:11:2>
|   |   `-ReturnStmt 0x134008ec0 <line:10:3, col:10>
|   |     `-RecoveryExpr 0x134008ea0 <col:10> '<dependent type>' contains-errors lvalue
|   |-WhileStmt 0x13400d018 <line:12:2, line:57:2>
|   | |-BinaryOperator 0x134009080 <line:12:9, col:40> 'int' contains-errors '&&'
|   | | |-BinaryOperator 0x134009060 <col:9, col:22> 'int' contains-errors '&&'
|   | | | |-RecoveryExpr 0x134008f08 <col:9> '<dependent type>' contains-errors lvalue
|   | | | `-BinaryOperator 0x134009040 <col:16, col:22> 'int' contains-errors '<'
|   | | |   |-RecoveryExpr 0x134008f28 <col:16> '<dependent type>' contains-errors lvalue
|   | | |   `-RecoveryExpr 0x134009020 <col:22> '<dependent type>' contains-errors lvalue
|   | | `-BinaryOperator 0x134008fe0 <col:33, col:40> 'int' contains-errors '>='
|   | |   |-RecoveryExpr 0x134008fa0 <col:33> '<dependent type>' contains-errors lvalue
|   | |   `-RecoveryExpr 0x134008fc0 <col:40> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x13400cfd0 <col:46, line:57:2>
|   |   |-IfStmt 0x1340093f0 <line:13:3, line:15:3>
|   |   | |-BinaryOperator 0x1340091f8 <line:13:7, col:41> 'int' contains-errors '&&'
|   |   | | |-CXXDependentScopeMemberExpr 0x1340090c0 <col:7, col:11> '<dependent type>' contains-errors lvalue ->length
|   |   | | | `-RecoveryExpr 0x1340090a0 <col:7> '<dependent type>' contains-errors lvalue
|   |   | | `-BinaryOperator 0x1340091d8 <col:21, col:41> 'int' contains-errors '=='
|   |   | |   |-CXXDependentScopeMemberExpr 0x134009128 <col:21, col:25> '<dependent type>' contains-errors lvalue ->capacity
|   |   | |   | `-RecoveryExpr 0x134009108 <col:21> '<dependent type>' contains-errors lvalue
|   |   | |   `-CXXDependentScopeMemberExpr 0x134009190 <col:37, col:41> '<dependent type>' contains-errors lvalue ->length
|   |   | |     `-RecoveryExpr 0x134009170 <col:37> '<dependent type>' contains-errors lvalue
|   |   | `-CompoundStmt 0x1340093d8 <col:49, line:15:3>
|   |   |   `-CallExpr 0x1340093b0 <line:14:4, col:29> '<dependent type>' contains-errors
|   |   |     |-DeclRefExpr 0x134009370 <col:4> 'int ()' Function 0x1340092b8 'r_bin_dwarf_expand_cu' 'int ()'
|   |   |     `-RecoveryExpr 0x134009390 <col:27> '<dependent type>' contains-errors lvalue
|   |   |-BinaryOperator 0x134009708 <line:16:3, col:50> '<dependent type>' contains-errors '='
|   |   | |-RecoveryExpr 0x134009430 <col:3> '<dependent type>' contains-errors lvalue
|   |   | | `-DeclRefExpr 0x134009410 <col:3> 'const int *' lvalue Var 0x13300ea50 'buf' 'const int *'
|   |   | `-CallExpr 0x1340096d0 <col:9, col:50> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x134009538 <col:9> 'int ()' Function 0x134009480 'r_uleb128' 'int ()'
|   |   |   |-RecoveryExpr 0x134009558 <col:20> '<dependent type>' contains-errors lvalue
|   |   |   |-BinaryOperator 0x134009678 <col:25, col:35> '<dependent type>' contains-errors '-'
|   |   |   | |-RecoveryExpr 0x134009658 <col:25> '<dependent type>' contains-errors lvalue
|   |   |   | `-RecoveryExpr 0x134009590 <col:35> '<dependent type>' contains-errors lvalue
|   |   |   `-UnaryOperator 0x1340096b8 <col:40, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   |     `-RecoveryExpr 0x134009698 <col:41> '<dependent type>' contains-errors lvalue
|   |   |-IfStmt 0x1340098d8 <line:17:3, line:19:3>
|   |   | |-BinaryOperator 0x1340098a8 <line:17:7, col:34> 'int' contains-errors '||'
|   |   | | |-BinaryOperator 0x134009858 <col:7, col:23> 'int' contains-errors '>'
|   |   | | | |-RecoveryExpr 0x134009838 <col:7> '<dependent type>' contains-errors lvalue
|   |   | | | `-CXXDependentScopeMemberExpr 0x134009760 <col:19, col:23> '<dependent type>' contains-errors lvalue ->length
|   |   | | |   `-RecoveryExpr 0x134009740 <col:19> '<dependent type>' contains-errors lvalue
|   |   | | `-UnaryOperator 0x134009890 <col:33, col:34> '<dependent type>' contains-errors prefix '!' cannot overflow
|   |   | |   `-ImplicitCastExpr 0x134009878 <col:34> '<dependent type>' contains-errors <LValueToRValue>
|   |   | |     `-RecoveryExpr 0x1340097c8 <col:34> '<dependent type>' contains-errors lvalue
|   |   | `-CompoundStmt 0x1340098c8 <col:39, line:19:3>
|   |   |-CallExpr 0x134009b30 <line:21:3, col:46> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x1340099d8 <col:3> 'int ()' Function 0x134009920 'r_bin_dwarf_init_die' 'int ()'
|   |   | `-UnaryOperator 0x134009b18 <col:25, col:45> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   |   `-ArraySubscriptExpr 0x134009af8 <col:26, col:45> '<dependent type>' contains-errors lvalue
|   |   |     |-ImplicitCastExpr 0x134009ac8 <col:26, col:30> '<dependent type>' contains-errors <LValueToRValue>
|   |   |     | `-CXXDependentScopeMemberExpr 0x134009a18 <col:26, col:30> '<dependent type>' contains-errors lvalue ->dies
|   |   |     |   `-RecoveryExpr 0x1340099f8 <col:26> '<dependent type>' contains-errors lvalue
|   |   |     `-ImplicitCastExpr 0x134009ae0 <col:35, col:39> '<dependent type>' contains-errors <LValueToRValue>
|   |   |       `-CXXDependentScopeMemberExpr 0x134009a80 <col:35, col:39> '<dependent type>' contains-errors lvalue ->length
|   |   |         `-RecoveryExpr 0x134009a60 <col:35> '<dependent type>' contains-errors lvalue
|   |   |-IfStmt 0x13400a898 <line:22:3, line:27:3>
|   |   | |-RecoveryExpr 0x134009b58 <line:22:7, col:8> '_Bool' contains-errors
|   |   | `-CompoundStmt 0x13400a868 <col:19, line:27:3>
|   |   |   |-BinaryOperator 0x134009d28 <line:23:4, col:39> '<dependent type>' contains-errors '='
|   |   |   | |-CXXDependentScopeMemberExpr 0x134009cc0 <col:4, col:25> '<dependent type>' contains-errors lvalue .abbrev_code
|   |   |   | | `-ArraySubscriptExpr 0x134009ca0 <col:4, col:23> '<dependent type>' contains-errors lvalue
|   |   |   | |   |-ImplicitCastExpr 0x134009c70 <col:4, col:8> '<dependent type>' contains-errors <LValueToRValue>
|   |   |   | |   | `-CXXDependentScopeMemberExpr 0x134009bc0 <col:4, col:8> '<dependent type>' contains-errors lvalue ->dies
|   |   |   | |   |   `-RecoveryExpr 0x134009b98 <col:4> '<dependent type>' contains-errors lvalue
|   |   |   | |   |     `-DeclRefExpr 0x134009b78 <col:4> 'int *' lvalue ParmVar 0x13300e628 'cu' 'int *'
|   |   |   | |   `-ImplicitCastExpr 0x134009c88 <col:13, col:17> '<dependent type>' contains-errors <LValueToRValue>
|   |   |   | |     `-CXXDependentScopeMemberExpr 0x134009c28 <col:13, col:17> '<dependent type>' contains-errors lvalue ->length
|   |   |   | |       `-RecoveryExpr 0x134009c08 <col:13> '<dependent type>' contains-errors lvalue
|   |   |   | `-IntegerLiteral 0x134009d08 <col:39> 'int' 0
|   |   |   |-UnaryOperator 0x134009dd8 <line:24:4, col:14> '<dependent type>' contains-errors postfix '++' cannot overflow
|   |   |   | `-CXXDependentScopeMemberExpr 0x134009d90 <col:4, col:8> '<dependent type>' contains-errors lvalue ->length
|   |   |   |   `-RecoveryExpr 0x134009d68 <col:4> '<dependent type>' contains-errors lvalue
|   |   |   |     `-DeclRefExpr 0x134009d48 <col:4> 'int *' lvalue ParmVar 0x13300e628 'cu' 'int *'
|   |   |   |-UnaryOperator 0x13400a848 <line:25:4, col:7> '<dependent type>' contains-errors postfix '++' cannot overflow
|   |   |   | `-RecoveryExpr 0x13400a820 <col:4> '<dependent type>' contains-errors lvalue
|   |   |   |   `-DeclRefExpr 0x13400a800 <col:4> 'const int *' lvalue Var 0x13300ea50 'buf' 'const int *'
|   |   |   `-ContinueStmt 0x13400a860 <line:26:4>
|   |   |-IfStmt 0x13400ad18 <line:33:3, line:35:3>
|   |   | |-RecoveryExpr 0x13400ace8 <line:33:7, col:22> '_Bool' contains-errors
|   |   | `-CompoundStmt 0x13400ad08 <col:33, line:35:3>
|   |   `-UnaryOperator 0x13400cfb8 <line:56:3, col:13> '<dependent type>' contains-errors postfix '++' cannot overflow
|   |     `-CXXDependentScopeMemberExpr 0x13400cf70 <col:3, col:7> '<dependent type>' contains-errors lvalue ->length
|   |       `-RecoveryExpr 0x13400cf48 <col:3> '<dependent type>' contains-errors lvalue
|   |         `-DeclRefExpr 0x13400cf28 <col:3> 'int *' lvalue ParmVar 0x13300e628 'cu' 'int *'
|   `-ReturnStmt 0x13400d058 <line:58:2, col:9>
|     `-RecoveryExpr 0x13400d038 <col:9> '<dependent type>' contains-errors lvalue
`-FunctionDecl 0x13400b800 <line:45:4> col:4 implicit used memset 'void *(void *, int, unsigned long)' extern
  |-ParmVarDecl 0x13400b900 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x13400b968 <<invalid sloc>> <invalid sloc> 'int'
  |-ParmVarDecl 0x13400b9d0 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x13400b8a8 <<invalid sloc>> Implicit 900
