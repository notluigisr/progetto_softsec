TranslationUnitDecl 0x125055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1250564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x125055bd0 '__int128'
|-TypedefDecl 0x125056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x125055bf0 'unsigned __int128'
|-TypedefDecl 0x12580be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12580bc00 'struct __NSConstantString_tag'
|   `-Record 0x125056580 '__NSConstantString_tag'
|-TypedefDecl 0x12580be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x125055d90 '__SVInt8_t'
|-TypedefDecl 0x12580bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x125055db0 '__SVInt16_t'
|-TypedefDecl 0x12580bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x125055dd0 '__SVInt32_t'
|-TypedefDecl 0x12580bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x125055df0 '__SVInt64_t'
|-TypedefDecl 0x12580c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x125055e10 '__SVUint8_t'
|-TypedefDecl 0x12580c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x125055e30 '__SVUint16_t'
|-TypedefDecl 0x12580c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x125055e50 '__SVUint32_t'
|-TypedefDecl 0x12580c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x125055e70 '__SVUint64_t'
|-TypedefDecl 0x12580c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x125055e90 '__SVFloat16_t'
|-TypedefDecl 0x12580c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x125055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12580c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x125055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12580c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x125055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12580c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x125055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12580c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x125055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12580c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x125055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12580c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x125055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12580c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x125055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12580c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x125055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12580c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x125055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12580c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x125055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12580c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x125056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12580c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x125056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12580c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x125056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12580c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x125056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12580c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x125056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12580c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1250560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12580c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1250560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12580c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1250560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12580c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x125056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12580ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x125056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12580cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x125056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12580cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x125056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12580cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x125056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12580d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1250561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12580d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1250561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12580d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1250561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12580d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x125056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12580d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x125056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12580d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x125056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12580d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x125056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12580d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x125056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12580d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1250562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12580d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1250562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12580d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1250562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12580d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x125056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12580d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x125056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12580d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x125056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12580d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x125056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12580da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x125056390 '__SVBool_t'
|-TypedefDecl 0x12580da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1250563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12580dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1250563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12580db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1250563f0 '__SVCount_t'
|-TypedefDecl 0x12580dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12580dbb0 'char *'
|   `-BuiltinType 0x1250556b0 'char'
|-TypedefDecl 0x12580dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12580dbb0 'char *'
|   `-BuiltinType 0x1250556b0 'char'
`-FunctionDecl 0x12580df10 <dataset_diviso_filec/func24139_vuln.c:1:1, line:64:1> line:1:13 invalid gf_dump_vrml_proto_field 'void (int *, int *, int)' static
  |-ParmVarDecl 0x12580dd28 <col:38, col:54> col:54 referenced invalid sdump 'int *'
  |-ParmVarDecl 0x12580dda8 <col:61, col:70> col:70 invalid node 'int *'
  |-ParmVarDecl 0x12580de28 <col:76, col:89> col:89 referenced invalid field 'int'
  `-CompoundStmt 0x12582a0c8 <line:2:1, line:64:1>
    |-DeclStmt 0x12580e050 <line:4:2, col:16>
    | `-VarDecl 0x12580dfe8 <col:2, col:8> col:8 used slot_ptr 'void *'
    |-CallExpr 0x12580e200 <line:6:2, col:16> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12580e1c0 <col:2> 'int ()' Function 0x12580e108 'DUMP_IND' 'int ()'
    | `-RecoveryExpr 0x12580e1e0 <col:11> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x125827468 <line:7:2, col:44> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12580e308 <col:2> 'int ()' Function 0x12580e250 'gf_fprintf' 'int ()'
    | |-CXXDependentScopeMemberExpr 0x12580e348 <col:13, col:20> '<dependent type>' contains-errors lvalue ->trace
    | | `-RecoveryExpr 0x12580e328 <col:13> '<dependent type>' contains-errors lvalue
    | |-StringLiteral 0x12580e3d0 <col:27> 'char[4]' lvalue "STR"
    | `-CXXDependentScopeMemberExpr 0x125827420 <col:34, col:40> '<dependent type>' contains-errors lvalue .name
    |   `-RecoveryExpr 0x125827400 <col:34> '<dependent type>' contains-errors lvalue
    `-IfStmt 0x12582a098 <line:8:2, line:63:2> has_else
      |-CallExpr 0x125827608 <line:8:6, col:44> '<dependent type>' contains-errors
      | |-DeclRefExpr 0x125827580 <col:6> 'int ()' Function 0x1258274c8 'gf_sg_vrml_is_sf_field' 'int ()'
      | `-CXXDependentScopeMemberExpr 0x1258275c0 <col:29, col:35> '<dependent type>' contains-errors lvalue .fieldType
      |   `-RecoveryExpr 0x1258275a0 <col:29> '<dependent type>' contains-errors lvalue
      |-CompoundStmt 0x125828bd8 <col:47, line:27:2>
      | `-IfStmt 0x125828ba8 <line:9:3, line:26:3> has_else
      |   |-BinaryOperator 0x1258276f0 <line:9:7, col:26> 'int' contains-errors '=='
      |   | |-CXXDependentScopeMemberExpr 0x125827650 <col:7, col:13> '<dependent type>' contains-errors lvalue .fieldType
      |   | | `-RecoveryExpr 0x125827630 <col:7> '<dependent type>' contains-errors lvalue
      |   | `-RecoveryExpr 0x1258276d0 <col:26> '<dependent type>' contains-errors lvalue
      |   |-CompoundStmt 0x125827fd8 <col:45, line:18:3>
      |   | |-CallExpr 0x1258277b8 <line:10:4, col:34> '<dependent type>' contains-errors
      |   | | |-DeclRefExpr 0x125827710 <col:4> 'int ()' Function 0x12580e250 'gf_fprintf' 'int ()'
      |   | | |-CXXDependentScopeMemberExpr 0x125827750 <col:15, col:22> '<dependent type>' contains-errors lvalue ->trace
      |   | | | `-RecoveryExpr 0x125827730 <col:15> '<dependent type>' contains-errors lvalue
      |   | | `-StringLiteral 0x125827798 <col:29> 'char[4]' lvalue "STR"
      |   | |-UnaryOperator 0x125827878 <line:11:4, col:17> '<dependent type>' contains-errors postfix '++' cannot overflow
      |   | | `-CXXDependentScopeMemberExpr 0x125827830 <col:4, col:11> '<dependent type>' contains-errors lvalue ->indent
      |   | |   `-RecoveryExpr 0x125827808 <col:4> '<dependent type>' contains-errors lvalue
      |   | |     `-DeclRefExpr 0x1258277e8 <col:4> 'int *' lvalue ParmVar 0x12580dd28 'sdump' 'int *'
      |   | |-IfStmt 0x125827a00 <line:12:4, col:55>
      |   | | |-UnaryOperator 0x125827910 <col:8, col:16> '<dependent type>' contains-errors prefix '!' cannot overflow
      |   | | | `-ImplicitCastExpr 0x1258278f8 <col:9, col:16> '<dependent type>' contains-errors <LValueToRValue>
      |   | | |   `-CXXDependentScopeMemberExpr 0x1258278b0 <col:9, col:16> '<dependent type>' contains-errors lvalue ->X3DDump
      |   | | |     `-RecoveryExpr 0x125827890 <col:9> '<dependent type>' contains-errors lvalue
      |   | | `-CallExpr 0x1258279d0 <col:25, col:55> '<dependent type>' contains-errors
      |   | |   |-DeclRefExpr 0x125827928 <col:25> 'int ()' Function 0x12580e250 'gf_fprintf' 'int ()'
      |   | |   |-CXXDependentScopeMemberExpr 0x125827968 <col:36, col:43> '<dependent type>' contains-errors lvalue ->trace
      |   | |   | `-RecoveryExpr 0x125827948 <col:36> '<dependent type>' contains-errors lvalue
      |   | |   `-StringLiteral 0x1258279b0 <col:50> 'char[4]' lvalue "STR"
      |   | |-IfStmt 0x125827dd0 <line:14:4, col:55>
      |   | | |-UnaryOperator 0x125827ce0 <col:8, col:16> '<dependent type>' contains-errors prefix '!' cannot overflow
      |   | | | `-ImplicitCastExpr 0x125827cc8 <col:9, col:16> '<dependent type>' contains-errors <LValueToRValue>
      |   | | |   `-CXXDependentScopeMemberExpr 0x125827c80 <col:9, col:16> '<dependent type>' contains-errors lvalue ->X3DDump
      |   | | |     `-RecoveryExpr 0x125827c60 <col:9> '<dependent type>' contains-errors lvalue
      |   | | `-CallExpr 0x125827da0 <col:25, col:55> '<dependent type>' contains-errors
      |   | |   |-DeclRefExpr 0x125827cf8 <col:25> 'int ()' Function 0x12580e250 'gf_fprintf' 'int ()'
      |   | |   |-CXXDependentScopeMemberExpr 0x125827d38 <col:36, col:43> '<dependent type>' contains-errors lvalue ->trace
      |   | |   | `-RecoveryExpr 0x125827d18 <col:36> '<dependent type>' contains-errors lvalue
      |   | |   `-StringLiteral 0x125827d80 <col:50> 'char[4]' lvalue "STR"
      |   | |-UnaryOperator 0x125827e80 <line:15:4, col:17> '<dependent type>' contains-errors postfix '--' cannot overflow
      |   | | `-CXXDependentScopeMemberExpr 0x125827e38 <col:4, col:11> '<dependent type>' contains-errors lvalue ->indent
      |   | |   `-RecoveryExpr 0x125827e10 <col:4> '<dependent type>' contains-errors lvalue
      |   | |     `-DeclRefExpr 0x125827df0 <col:4> 'int *' lvalue ParmVar 0x12580dd28 'sdump' 'int *'
      |   | |-CallExpr 0x125827ed8 <line:16:4, col:18> '<dependent type>' contains-errors
      |   | | |-DeclRefExpr 0x125827e98 <col:4> 'int ()' Function 0x12580e108 'DUMP_IND' 'int ()'
      |   | | `-RecoveryExpr 0x125827eb8 <col:13> '<dependent type>' contains-errors lvalue
      |   | `-CallExpr 0x125827fa8 <line:17:4, col:34> '<dependent type>' contains-errors
      |   |   |-DeclRefExpr 0x125827f00 <col:4> 'int ()' Function 0x12580e250 'gf_fprintf' 'int ()'
      |   |   |-CXXDependentScopeMemberExpr 0x125827f40 <col:15, col:22> '<dependent type>' contains-errors lvalue ->trace
      |   |   | `-RecoveryExpr 0x125827f20 <col:15> '<dependent type>' contains-errors lvalue
      |   |   `-StringLiteral 0x125827f88 <col:29> 'char[4]' lvalue "STR"
      |   `-CompoundStmt 0x125828b80 <line:18:10, line:26:3>
      |     |-IfStmt 0x125828800 <line:19:4, line:23:4> has_else
      |     | |-CXXDependentScopeMemberExpr 0x125828040 <line:19:8, col:15> '<dependent type>' contains-errors lvalue ->X3DDump
      |     | | `-RecoveryExpr 0x125828020 <col:8> '<dependent type>' contains-errors lvalue
      |     | |-CompoundStmt 0x125828160 <col:24, line:21:4>
      |     | | `-CallExpr 0x125828130 <line:20:5, col:35> '<dependent type>' contains-errors
      |     | |   |-DeclRefExpr 0x125828088 <col:5> 'int ()' Function 0x12580e250 'gf_fprintf' 'int ()'
      |     | |   |-CXXDependentScopeMemberExpr 0x1258280c8 <col:16, col:23> '<dependent type>' contains-errors lvalue ->trace
      |     | |   | `-RecoveryExpr 0x1258280a8 <col:16> '<dependent type>' contains-errors lvalue
      |     | |   `-StringLiteral 0x125828110 <col:30> 'char[4]' lvalue "STR"
      |     | `-CompoundStmt 0x1258283e8 <line:21:11, line:23:4>
      |     |   `-CallExpr 0x1258283b0 <line:22:5, col:78> '<dependent type>' contains-errors
      |     |     |-DeclRefExpr 0x125828178 <col:5> 'int ()' Function 0x12580e250 'gf_fprintf' 'int ()'
      |     |     |-CXXDependentScopeMemberExpr 0x1258281b8 <col:16, col:23> '<dependent type>' contains-errors lvalue ->trace
      |     |     | `-RecoveryExpr 0x125828198 <col:16> '<dependent type>' contains-errors lvalue
      |     |     |-StringLiteral 0x125828200 <col:30> 'char[4]' lvalue "STR"
      |     |     `-CallExpr 0x125828388 <col:37, col:77> '<dependent type>' contains-errors
      |     |       |-DeclRefExpr 0x125828300 <col:37> 'int ()' Function 0x125828248 'GetXMTFieldTypeValueName' 'int ()'
      |     |       `-CXXDependentScopeMemberExpr 0x125828340 <col:62, col:68> '<dependent type>' contains-errors lvalue .fieldType
      |     |         `-RecoveryExpr 0x125828320 <col:62> '<dependent type>' contains-errors lvalue
      |     |-CallExpr 0x125828a60 <line:24:4, col:71> '<dependent type>' contains-errors
      |     | |-DeclRefExpr 0x125828910 <col:4> 'int ()' Function 0x125828858 'gf_dump_vrml_sffield' 'int ()'
      |     | |-RecoveryExpr 0x125828930 <col:25> '<dependent type>' contains-errors lvalue
      |     | |-CXXDependentScopeMemberExpr 0x125828970 <col:32, col:38> '<dependent type>' contains-errors lvalue .fieldType
      |     | | `-RecoveryExpr 0x125828950 <col:32> '<dependent type>' contains-errors lvalue
      |     | |-CXXDependentScopeMemberExpr 0x1258289d8 <col:49, col:55> '<dependent type>' contains-errors lvalue .far_ptr
      |     | | `-RecoveryExpr 0x1258289b8 <col:49> '<dependent type>' contains-errors lvalue
      |     | |-IntegerLiteral 0x125828a20 <col:64> 'int' 0
      |     | `-RecoveryExpr 0x125828a40 <col:67> '<dependent type>' contains-errors lvalue
      |     `-CallExpr 0x125828b50 <line:25:4, col:34> '<dependent type>' contains-errors
      |       |-DeclRefExpr 0x125828aa8 <col:4> 'int ()' Function 0x12580e250 'gf_fprintf' 'int ()'
      |       |-CXXDependentScopeMemberExpr 0x125828ae8 <col:15, col:22> '<dependent type>' contains-errors lvalue ->trace
      |       | `-RecoveryExpr 0x125828ac8 <col:15> '<dependent type>' contains-errors lvalue
      |       `-StringLiteral 0x125828b30 <col:29> 'char[4]' lvalue "STR"
      `-CompoundStmt 0x12582a080 <line:27:9, line:63:2>
        `-IfStmt 0x12582a060 <line:31:3, line:62:3>
          |-RecoveryExpr 0x125828ea0 <line:31:7, col:90> '_Bool' contains-errors
          `-CompoundStmt 0x12582a048 <col:93, line:62:3>
            `-IfStmt 0x12582a018 <line:32:4, line:61:4> has_else
              |-RecoveryExpr 0x125828ec0 <line:32:8, col:19> '_Bool' contains-errors
              |-CompoundStmt 0x125829618 <col:38, line:45:4>
              | |-CallExpr 0x125828f88 <line:34:5, col:35> '<dependent type>' contains-errors
              | | |-DeclRefExpr 0x125828ee0 <col:5> 'int ()' Function 0x12580e250 'gf_fprintf' 'int ()'
              | | |-CXXDependentScopeMemberExpr 0x125828f20 <col:16, col:23> '<dependent type>' contains-errors lvalue ->trace
              | | | `-RecoveryExpr 0x125828f00 <col:16> '<dependent type>' contains-errors lvalue
              | | `-StringLiteral 0x125828f68 <col:30> 'char[4]' lvalue "STR"
              | |-UnaryOperator 0x125829048 <line:35:5, col:18> '<dependent type>' contains-errors postfix '++' cannot overflow
              | | `-CXXDependentScopeMemberExpr 0x125829000 <col:5, col:12> '<dependent type>' contains-errors lvalue ->indent
              | |   `-RecoveryExpr 0x125828fd8 <col:5> '<dependent type>' contains-errors lvalue
              | |     `-DeclRefExpr 0x125828fb8 <col:5> 'int *' lvalue ParmVar 0x12580dd28 'sdump' 'int *'
              | |-IfStmt 0x1258291d0 <line:36:5, col:56>
              | | |-UnaryOperator 0x1258290e0 <col:9, col:17> '<dependent type>' contains-errors prefix '!' cannot overflow
              | | | `-ImplicitCastExpr 0x1258290c8 <col:10, col:17> '<dependent type>' contains-errors <LValueToRValue>
              | | |   `-CXXDependentScopeMemberExpr 0x125829080 <col:10, col:17> '<dependent type>' contains-errors lvalue ->X3DDump
              | | |     `-RecoveryExpr 0x125829060 <col:10> '<dependent type>' contains-errors lvalue
              | | `-CallExpr 0x1258291a0 <col:26, col:56> '<dependent type>' contains-errors
              | |   |-DeclRefExpr 0x1258290f8 <col:26> 'int ()' Function 0x12580e250 'gf_fprintf' 'int ()'
              | |   |-CXXDependentScopeMemberExpr 0x125829138 <col:37, col:44> '<dependent type>' contains-errors lvalue ->trace
              | |   | `-RecoveryExpr 0x125829118 <col:37> '<dependent type>' contains-errors lvalue
              | |   `-StringLiteral 0x125829180 <col:51> 'char[4]' lvalue "STR"
              | |-WhileStmt 0x125829280 <line:37:5, line:40:5>
              | | |-RecoveryExpr 0x1258291f0 <line:37:12> '_Bool' contains-errors
              | | `-CompoundStmt 0x125829270 <col:18, line:40:5>
              | |-IfStmt 0x125829410 <line:41:5, col:56>
              | | |-UnaryOperator 0x125829320 <col:9, col:17> '<dependent type>' contains-errors prefix '!' cannot overflow
              | | | `-ImplicitCastExpr 0x125829308 <col:10, col:17> '<dependent type>' contains-errors <LValueToRValue>
              | | |   `-CXXDependentScopeMemberExpr 0x1258292c0 <col:10, col:17> '<dependent type>' contains-errors lvalue ->X3DDump
              | | |     `-RecoveryExpr 0x1258292a0 <col:10> '<dependent type>' contains-errors lvalue
              | | `-CallExpr 0x1258293e0 <col:26, col:56> '<dependent type>' contains-errors
              | |   |-DeclRefExpr 0x125829338 <col:26> 'int ()' Function 0x12580e250 'gf_fprintf' 'int ()'
              | |   |-CXXDependentScopeMemberExpr 0x125829378 <col:37, col:44> '<dependent type>' contains-errors lvalue ->trace
              | |   | `-RecoveryExpr 0x125829358 <col:37> '<dependent type>' contains-errors lvalue
              | |   `-StringLiteral 0x1258293c0 <col:51> 'char[4]' lvalue "STR"
              | |-UnaryOperator 0x1258294c0 <line:42:5, col:18> '<dependent type>' contains-errors postfix '--' cannot overflow
              | | `-CXXDependentScopeMemberExpr 0x125829478 <col:5, col:12> '<dependent type>' contains-errors lvalue ->indent
              | |   `-RecoveryExpr 0x125829450 <col:5> '<dependent type>' contains-errors lvalue
              | |     `-DeclRefExpr 0x125829430 <col:5> 'int *' lvalue ParmVar 0x12580dd28 'sdump' 'int *'
              | |-CallExpr 0x125829518 <line:43:5, col:19> '<dependent type>' contains-errors
              | | |-DeclRefExpr 0x1258294d8 <col:5> 'int ()' Function 0x12580e108 'DUMP_IND' 'int ()'
              | | `-RecoveryExpr 0x1258294f8 <col:14> '<dependent type>' contains-errors lvalue
              | `-CallExpr 0x1258295e8 <line:44:5, col:35> '<dependent type>' contains-errors
              |   |-DeclRefExpr 0x125829540 <col:5> 'int ()' Function 0x12580e250 'gf_fprintf' 'int ()'
              |   |-CXXDependentScopeMemberExpr 0x125829580 <col:16, col:23> '<dependent type>' contains-errors lvalue ->trace
              |   | `-RecoveryExpr 0x125829560 <col:16> '<dependent type>' contains-errors lvalue
              |   `-StringLiteral 0x1258295c8 <col:30> 'char[4]' lvalue "STR"
              `-CompoundStmt 0x125829ff0 <line:45:11, line:61:4>
                |-IfStmt 0x125829968 <line:46:5, line:50:5> has_else
                | |-CXXDependentScopeMemberExpr 0x125829688 <line:46:9, col:16> '<dependent type>' contains-errors lvalue ->X3DDump
                | | `-RecoveryExpr 0x125829668 <col:9> '<dependent type>' contains-errors lvalue
                | |-CompoundStmt 0x1258297a8 <col:25, line:48:5>
                | | `-CallExpr 0x125829778 <line:47:6, col:36> '<dependent type>' contains-errors
                | |   |-DeclRefExpr 0x1258296d0 <col:6> 'int ()' Function 0x12580e250 'gf_fprintf' 'int ()'
                | |   |-CXXDependentScopeMemberExpr 0x125829710 <col:17, col:24> '<dependent type>' contains-errors lvalue ->trace
                | |   | `-RecoveryExpr 0x1258296f0 <col:17> '<dependent type>' contains-errors lvalue
                | |   `-StringLiteral 0x125829758 <col:31> 'char[4]' lvalue "STR"
                | `-CompoundStmt 0x125829950 <line:48:12, line:50:5>
                |   `-CallExpr 0x125829918 <line:49:6, col:79> '<dependent type>' contains-errors
                |     |-DeclRefExpr 0x1258297c0 <col:6> 'int ()' Function 0x12580e250 'gf_fprintf' 'int ()'
                |     |-CXXDependentScopeMemberExpr 0x125829800 <col:17, col:24> '<dependent type>' contains-errors lvalue ->trace
                |     | `-RecoveryExpr 0x1258297e0 <col:17> '<dependent type>' contains-errors lvalue
                |     |-StringLiteral 0x125829848 <col:31> 'char[4]' lvalue "STR"
                |     `-CallExpr 0x1258298f0 <col:38, col:78> '<dependent type>' contains-errors
                |       |-DeclRefExpr 0x125829868 <col:38> 'int ()' Function 0x125828248 'GetXMTFieldTypeValueName' 'int ()'
                |       `-CXXDependentScopeMemberExpr 0x1258298a8 <col:63, col:69> '<dependent type>' contains-errors lvalue .fieldType
                |         `-RecoveryExpr 0x125829888 <col:63> '<dependent type>' contains-errors lvalue
                |-IfStmt 0x125829ef8 <line:51:5, line:59:5>
                | |-RecoveryExpr 0x125829998 <line:51:9> '_Bool' contains-errors
                | `-CompoundStmt 0x125829ee8 <col:18, line:59:5>
                `-CallExpr 0x125829fc0 <line:60:5, col:35> '<dependent type>' contains-errors
                  |-DeclRefExpr 0x125829f18 <col:5> 'int ()' Function 0x12580e250 'gf_fprintf' 'int ()'
                  |-CXXDependentScopeMemberExpr 0x125829f58 <col:16, col:23> '<dependent type>' contains-errors lvalue ->trace
                  | `-RecoveryExpr 0x125829f38 <col:16> '<dependent type>' contains-errors lvalue
                  `-StringLiteral 0x125829fa0 <col:30> 'char[4]' lvalue "STR"
