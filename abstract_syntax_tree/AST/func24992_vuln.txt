TranslationUnitDecl 0x14a855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14a8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14a855bd0 '__int128'
|-TypedefDecl 0x14a856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14a855bf0 'unsigned __int128'
|-TypedefDecl 0x14a926a30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14a926800 'struct __NSConstantString_tag'
|   `-Record 0x14a856580 '__NSConstantString_tag'
|-TypedefDecl 0x14a926a98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14a855d90 '__SVInt8_t'
|-TypedefDecl 0x14a926b00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14a855db0 '__SVInt16_t'
|-TypedefDecl 0x14a926b68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14a855dd0 '__SVInt32_t'
|-TypedefDecl 0x14a926bd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14a855df0 '__SVInt64_t'
|-TypedefDecl 0x14a926c38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14a855e10 '__SVUint8_t'
|-TypedefDecl 0x14a926ca0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14a855e30 '__SVUint16_t'
|-TypedefDecl 0x14a926d08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14a855e50 '__SVUint32_t'
|-TypedefDecl 0x14a926d70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14a855e70 '__SVUint64_t'
|-TypedefDecl 0x14a926dd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14a855e90 '__SVFloat16_t'
|-TypedefDecl 0x14a926e40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14a855eb0 '__SVFloat32_t'
|-TypedefDecl 0x14a926ea8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14a855ed0 '__SVFloat64_t'
|-TypedefDecl 0x14a926f10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14a855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14a926f78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14a855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14a926fe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14a855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14a927048 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14a855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14a9270b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14a855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14a927118 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14a855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14a927180 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14a855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14a9271e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14a855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14a927250 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14a855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14a9272b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14a856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14a927320 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14a856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14a927388 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14a856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14a9273f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14a856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14a927458 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14a856090 '__clang_svint8x3_t'
|-TypedefDecl 0x14a9274c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14a8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14a927528 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14a8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14a927590 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14a8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14a9275f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14a856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14a927660 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14a856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14a9276c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14a856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14a927730 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14a856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14a927798 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14a856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14a928000 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14a8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14a928068 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14a8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14a9280d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14a8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14a928138 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14a856210 '__clang_svint8x4_t'
|-TypedefDecl 0x14a9281a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14a856230 '__clang_svint16x4_t'
|-TypedefDecl 0x14a928208 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14a856250 '__clang_svint32x4_t'
|-TypedefDecl 0x14a928270 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14a856270 '__clang_svint64x4_t'
|-TypedefDecl 0x14a9282d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14a856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14a928340 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14a8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14a9283a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14a8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14a928410 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14a8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14a928478 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14a856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14a9284e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14a856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14a928548 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14a856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14a9285b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14a856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14a928618 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14a856390 '__SVBool_t'
|-TypedefDecl 0x14a928680 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14a8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14a9286e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14a8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14a928750 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14a8563f0 '__SVCount_t'
|-TypedefDecl 0x14a9287f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14a9287b0 'char *'
|   `-BuiltinType 0x14a8556b0 'char'
|-TypedefDecl 0x14a928868 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14a9287b0 'char *'
|   `-BuiltinType 0x14a8556b0 'char'
|-FunctionDecl 0x14a928a58 <dataset_diviso_filec/func24992_vuln.c:1:1, line:76:1> line:1:1 referenced invalid init_remote_listener 'int (int, int)'
| |-ParmVarDecl 0x14a9288d8 <col:22, col:26> col:26 used port 'int'
| |-ParmVarDecl 0x14a928970 <col:32, col:41> col:41 invalid encrypted 'int'
| `-CompoundStmt 0x14b00a2d0 <line:2:1, line:76:1>
|   |-DeclStmt 0x14a928b90 <line:3:5, col:11>
|   | `-VarDecl 0x14a928b28 <col:5, col:9> col:9 used rc 'int'
|   |-DeclStmt 0x14a928c98 <line:4:5, col:22>
|   | `-VarDecl 0x14a928bf8 <col:5, col:18> col:10 used ssock 'int *' cinit
|   |   `-RecoveryExpr 0x14a928c78 <col:18> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x14a942288 <line:5:5, col:29>
|   | |-RecordDecl 0x14a928cb0 <col:5, col:12> col:12 struct sockaddr_in
|   | `-VarDecl 0x14a928da8 <col:5, col:24> col:24 referenced invalid saddr 'struct sockaddr_in'
|   |-DeclStmt 0x14a942320 <line:6:5, col:15>
|   | `-VarDecl 0x14a9422b8 <col:5, col:9> col:9 used optval 'int'
|   |-DeclStmt 0x14a942588 <line:7:5, line:11:10>
|   | |-RecordDecl 0x14a942338 <line:7:12, col:19> col:19 struct mainloop_fd_callbacks
|   | `-VarDecl 0x14a942438 <col:5, col:41> col:41 invalid remote_listen_fd_callbacks 'struct mainloop_fd_callbacks' static
|   |-IfStmt 0x14a942660 <line:13:5, line:16:5>
|   | |-BinaryOperator 0x14a9425f8 <line:13:9, col:17> 'int' '<='
|   | | |-ImplicitCastExpr 0x14a9425e0 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x14a9425a0 <col:9> 'int' lvalue ParmVar 0x14a9288d8 'port' 'int'
|   | | `-IntegerLiteral 0x14a9425c0 <col:17> 'int' 0
|   | `-CompoundStmt 0x14a942648 <col:20, line:16:5>
|   |   `-ReturnStmt 0x14a942638 <line:15:9, col:16>
|   |     `-IntegerLiteral 0x14a942618 <col:16> 'int' 0
|   |-IfStmt 0x14a942a48 <line:18:5, line:34:5> has_else
|   | |-RecoveryExpr 0x14a942680 <line:18:9> '<dependent type>' contains-errors lvalue
|   | |-CompoundStmt 0x14a942938 <col:20, line:32:5>
|   | | |-CallExpr 0x14a9428c8 <line:20:9, col:23> 'int'
|   | | | |-ImplicitCastExpr 0x14a9428b0 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x14a942800 <col:9> 'int ()' Function 0x14a942748 'crm_warn' 'int ()'
|   | | | `-ImplicitCastExpr 0x14a9428f0 <col:18> 'char *' <ArrayToPointerDecay>
|   | | |   `-StringLiteral 0x14a942860 <col:18> 'char[4]' lvalue "STR"
|   | | `-ReturnStmt 0x14a942928 <line:21:9, col:16>
|   | |   `-IntegerLiteral 0x14a942908 <col:16> 'int' 0
|   | `-CompoundStmt 0x14a942a30 <line:32:12, line:34:5>
|   |   `-CallExpr 0x14a9429d0 <line:33:9, col:29> 'int'
|   |     |-ImplicitCastExpr 0x14a9429b8 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x14a942958 <col:9> 'int ()' Function 0x14a942748 'crm_warn' 'int ()'
|   |     |-ImplicitCastExpr 0x14a942a00 <col:18> 'char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x14a942978 <col:18> 'char[4]' lvalue "STR"
|   |     `-ImplicitCastExpr 0x14a942a18 <col:25> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x14a942998 <col:25> 'int' lvalue ParmVar 0x14a9288d8 'port' 'int'
|   |-CallExpr 0x14a942ad0 <line:36:5, col:19> 'int'
|   | |-ImplicitCastExpr 0x14a942ab8 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x14a942a78 <col:5> 'int ()' Function 0x14a942748 'crm_warn' 'int ()'
|   | `-ImplicitCastExpr 0x14a942af8 <col:14> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x14a942a98 <col:14> 'char[4]' lvalue "STR"
|   |-BinaryOperator 0x14a942de8 <line:40:5, col:31> 'int *' contains-errors '='
|   | |-DeclRefExpr 0x14a942b10 <col:5> 'int *' contains-errors lvalue Var 0x14a928bf8 'ssock' 'int *'
|   | `-ImplicitCastExpr 0x14a942dd0 <col:13, col:31> 'int *' <BitCast>
|   |   `-CallExpr 0x14a942da8 <col:13, col:31> 'void *'
|   |     |-ImplicitCastExpr 0x14a942d90 <col:13> 'void *(*)(unsigned long)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x14a942d08 <col:13> 'void *(unsigned long)' Function 0x14a942b68 'malloc' 'void *(unsigned long)'
|   |     `-UnaryExprOrTypeTraitExpr 0x14a942d40 <col:20, col:30> 'unsigned long' sizeof 'int'
|   |-BinaryOperator 0x14a9450d8 <line:41:5, col:44> 'int' contains-errors '='
|   | |-UnaryOperator 0x14a945048 <col:5, col:6> 'int' contains-errors lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x14a945030 <col:6> 'int *' contains-errors <LValueToRValue>
|   | |   `-DeclRefExpr 0x14a942e08 <col:6> 'int *' contains-errors lvalue Var 0x14a928bf8 'ssock' 'int *'
|   | `-CallExpr 0x14a9450a0 <col:14, col:44> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x14a942f38 <col:14> 'int ()' Function 0x14a942e80 'socket' 'int ()'
|   |   |-RecoveryExpr 0x14a945060 <col:21> '<dependent type>' contains-errors lvalue
|   |   |-RecoveryExpr 0x14a945080 <col:30> '<dependent type>' contains-errors lvalue
|   |   `-IntegerLiteral 0x14a942f88 <col:43> 'int' 0
|   |-IfStmt 0x14a9455f8 <line:42:5, line:46:5>
|   | |-BinaryOperator 0x14a945198 <line:42:9, col:20> 'int' contains-errors '=='
|   | | |-ImplicitCastExpr 0x14a945180 <col:9, col:10> 'int' contains-errors <LValueToRValue>
|   | | | `-UnaryOperator 0x14a945130 <col:9, col:10> 'int' contains-errors lvalue prefix '*' cannot overflow
|   | | |   `-ImplicitCastExpr 0x14a945118 <col:10> 'int *' contains-errors <LValueToRValue>
|   | | |     `-DeclRefExpr 0x14a9450f8 <col:10> 'int *' contains-errors lvalue Var 0x14a928bf8 'ssock' 'int *'
|   | | `-UnaryOperator 0x14a945168 <col:19, col:20> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x14a945148 <col:20> 'int' 1
|   | `-CompoundStmt 0x14a9455d8 <col:23, line:46:5>
|   |   |-CallExpr 0x14a945538 <line:44:9, col:19> 'void' contains-errors
|   |   | |-ImplicitCastExpr 0x14a945520 <col:9> 'void (*)(void *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x14a945498 <col:9> 'void (void *)' Function 0x14a945328 'free' 'void (void *)'
|   |   | `-ImplicitCastExpr 0x14a945578 <col:14> 'void *' contains-errors <BitCast>
|   |   |   `-ImplicitCastExpr 0x14a945560 <col:14> 'int *' contains-errors <LValueToRValue>
|   |   |     `-DeclRefExpr 0x14a9454b8 <col:14> 'int *' contains-errors lvalue Var 0x14a928bf8 'ssock' 'int *'
|   |   `-ReturnStmt 0x14a9455c8 <line:45:9, col:17>
|   |     `-UnaryOperator 0x14a9455b0 <col:16, col:17> 'int' prefix '-'
|   |       `-IntegerLiteral 0x14a945590 <col:17> 'int' 1
|   |-BinaryOperator 0x14a945658 <line:49:5, col:14> 'int' '='
|   | |-DeclRefExpr 0x14a945618 <col:5> 'int' lvalue Var 0x14a9422b8 'optval' 'int'
|   | `-IntegerLiteral 0x14a945638 <col:14> 'int' 1
|   |-BinaryOperator 0x14a945a00 <line:50:5, col:78> 'int' contains-errors '='
|   | |-DeclRefExpr 0x14a945678 <col:5> 'int' lvalue Var 0x14a928b28 'rc' 'int'
|   | `-CallExpr 0x14a9459b8 <col:10, col:78> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x14a945778 <col:10> 'int ()' Function 0x14a9456c0 'setsockopt' 'int ()'
|   |   |-UnaryOperator 0x14a945960 <col:21, col:22> 'int' contains-errors lvalue prefix '*' cannot overflow
|   |   | `-ImplicitCastExpr 0x14a945948 <col:22> 'int *' contains-errors <LValueToRValue>
|   |   |   `-DeclRefExpr 0x14a945798 <col:22> 'int *' contains-errors lvalue Var 0x14a928bf8 'ssock' 'int *'
|   |   |-RecoveryExpr 0x14a945978 <col:29> '<dependent type>' contains-errors lvalue
|   |   |-RecoveryExpr 0x14a945998 <col:41> '<dependent type>' contains-errors lvalue
|   |   |-UnaryOperator 0x14a945838 <col:55, col:56> 'int *' prefix '&' cannot overflow
|   |   | `-DeclRefExpr 0x14a945818 <col:56> 'int' lvalue Var 0x14a9422b8 'optval' 'int'
|   |   `-UnaryExprOrTypeTraitExpr 0x14a945890 <col:64, col:77> 'unsigned long' sizeof
|   |     `-ParenExpr 0x14a945870 <col:70, col:77> 'int' lvalue
|   |       `-DeclRefExpr 0x14a945850 <col:71> 'int' lvalue Var 0x14a9422b8 'optval' 'int' non_odr_use_unevaluated
|   |-IfStmt 0x14a945ae8 <line:51:5, line:53:5>
|   | |-BinaryOperator 0x14a945a78 <line:51:8, col:13> 'int' '<'
|   | | |-ImplicitCastExpr 0x14a945a60 <col:8> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x14a945a20 <col:8> 'int' lvalue Var 0x14a928b28 'rc' 'int'
|   | | `-IntegerLiteral 0x14a945a40 <col:13> 'int' 0
|   | `-CompoundStmt 0x14a945ad8 <col:16, line:53:5>
|   |-CallExpr 0x14a945e78 <line:56:5, col:39> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x14a945da8 <col:5> 'void *(void *, int, unsigned long)' Function 0x14a945b58 'memset' 'void *(void *, int, unsigned long)'
|   | |-UnaryOperator 0x14a945de8 <col:12, col:13> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | `-RecoveryExpr 0x14a945dc8 <col:13> '<dependent type>' contains-errors lvalue
|   | |-CharacterLiteral 0x14a945e00 <col:20> 'int' 0
|   | `-UnaryExprOrTypeTraitExpr 0x14a945e58 <col:26, col:38> 'unsigned long' contains-errors sizeof
|   |   `-ParenExpr 0x14a945e38 <col:32, col:38> '<dependent type>' contains-errors lvalue
|   |     `-RecoveryExpr 0x14a945e18 <col:33> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x14b009450 <line:59:5, col:32> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x14b009290 <col:5, col:11> '<dependent type>' contains-errors lvalue .sin_port
|   | | `-RecoveryExpr 0x14b009268 <col:5> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x14b009248 <col:5> 'struct sockaddr_in' lvalue Var 0x14a928da8 'saddr' 'struct sockaddr_in'
|   | `-CallExpr 0x14b009410 <col:22, col:32> 'int'
|   |   |-ImplicitCastExpr 0x14b0093f8 <col:22> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x14b0093b8 <col:22> 'int ()' Function 0x14b009300 'htons' 'int ()'
|   |   `-ImplicitCastExpr 0x14b009438 <col:28> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x14b0093d8 <col:28> 'int' lvalue ParmVar 0x14a9288d8 'port' 'int'
|   |-IfStmt 0x14b009bd0 <line:60:5, line:65:5>
|   | |-BinaryOperator 0x14b009890 <line:60:9, col:68> 'int' contains-errors '=='
|   | | |-CallExpr 0x14b009808 <col:9, col:62> 'int' contains-errors
|   | | | |-ImplicitCastExpr 0x14b0097f0 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x14b009550 <col:9> 'int ()' Function 0x14b009498 'bind' 'int ()'
|   | | | |-ImplicitCastExpr 0x14b009840 <col:14, col:15> 'int' contains-errors <LValueToRValue>
|   | | | | `-UnaryOperator 0x14b0095a8 <col:14, col:15> 'int' contains-errors lvalue prefix '*' cannot overflow
|   | | | |   `-ImplicitCastExpr 0x14b009590 <col:15> 'int *' contains-errors <LValueToRValue>
|   | | | |     `-DeclRefExpr 0x14b009570 <col:15> 'int *' contains-errors lvalue Var 0x14a928bf8 'ssock' 'int *'
|   | | | |-CStyleCastExpr 0x14b009768 <col:22, col:42> 'struct sockaddr *' contains-errors <Dependent>
|   | | | | `-UnaryOperator 0x14b009680 <col:41, col:42> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | | |   `-RecoveryExpr 0x14b009660 <col:42> '<dependent type>' contains-errors lvalue
|   | | | `-UnaryExprOrTypeTraitExpr 0x14b0097d0 <col:49, col:61> 'unsigned long' contains-errors sizeof
|   | | |   `-ParenExpr 0x14b0097b0 <col:55, col:61> '<dependent type>' contains-errors lvalue
|   | | |     `-RecoveryExpr 0x14b009790 <col:56> '<dependent type>' contains-errors lvalue
|   | | `-UnaryOperator 0x14b009878 <col:67, col:68> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x14b009858 <col:68> 'int' 1
|   | `-CompoundStmt 0x14b009ba8 <col:71, line:65:5>
|   |   |-CallExpr 0x14b009a58 <line:62:9, col:21> 'int' contains-errors
|   |   | |-ImplicitCastExpr 0x14b009a40 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x14b0099d0 <col:9> 'int ()' Function 0x14b009918 'close' 'int ()'
|   |   | `-ImplicitCastExpr 0x14b009a80 <col:15, col:16> 'int' contains-errors <LValueToRValue>
|   |   |   `-UnaryOperator 0x14b009a28 <col:15, col:16> 'int' contains-errors lvalue prefix '*' cannot overflow
|   |   |     `-ImplicitCastExpr 0x14b009a10 <col:16> 'int *' contains-errors <LValueToRValue>
|   |   |       `-DeclRefExpr 0x14b0099f0 <col:16> 'int *' contains-errors lvalue Var 0x14a928bf8 'ssock' 'int *'
|   |   |-CallExpr 0x14b009b08 <line:63:9, col:19> 'void' contains-errors
|   |   | |-ImplicitCastExpr 0x14b009af0 <col:9> 'void (*)(void *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x14b009a98 <col:9> 'void (void *)' Function 0x14a945328 'free' 'void (void *)'
|   |   | `-ImplicitCastExpr 0x14b009b48 <col:14> 'void *' contains-errors <BitCast>
|   |   |   `-ImplicitCastExpr 0x14b009b30 <col:14> 'int *' contains-errors <LValueToRValue>
|   |   |     `-DeclRefExpr 0x14b009ab8 <col:14> 'int *' contains-errors lvalue Var 0x14a928bf8 'ssock' 'int *'
|   |   `-ReturnStmt 0x14b009b98 <line:64:9, col:17>
|   |     `-UnaryOperator 0x14b009b80 <col:16, col:17> 'int' prefix '-'
|   |       `-IntegerLiteral 0x14b009b60 <col:17> 'int' 2
|   |-IfStmt 0x14b00a058 <line:66:5, line:71:5>
|   | |-BinaryOperator 0x14b009df8 <line:66:9, col:32> 'int' contains-errors '=='
|   | | |-CallExpr 0x14b009d78 <col:9, col:26> 'int' contains-errors
|   | | | |-ImplicitCastExpr 0x14b009d60 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x14b009cd0 <col:9> 'int ()' Function 0x14b009c18 'listen' 'int ()'
|   | | | |-ImplicitCastExpr 0x14b009da8 <col:16, col:17> 'int' contains-errors <LValueToRValue>
|   | | | | `-UnaryOperator 0x14b009d28 <col:16, col:17> 'int' contains-errors lvalue prefix '*' cannot overflow
|   | | | |   `-ImplicitCastExpr 0x14b009d10 <col:17> 'int *' contains-errors <LValueToRValue>
|   | | | |     `-DeclRefExpr 0x14b009cf0 <col:17> 'int *' contains-errors lvalue Var 0x14a928bf8 'ssock' 'int *'
|   | | | `-IntegerLiteral 0x14b009d40 <col:24> 'int' 10
|   | | `-UnaryOperator 0x14b009de0 <col:31, col:32> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x14b009dc0 <col:32> 'int' 1
|   | `-CompoundStmt 0x14b00a030 <col:35, line:71:5>
|   |   |-CallExpr 0x14b009ee0 <line:68:9, col:21> 'int' contains-errors
|   |   | |-ImplicitCastExpr 0x14b009ec8 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x14b009e58 <col:9> 'int ()' Function 0x14b009918 'close' 'int ()'
|   |   | `-ImplicitCastExpr 0x14b009f08 <col:15, col:16> 'int' contains-errors <LValueToRValue>
|   |   |   `-UnaryOperator 0x14b009eb0 <col:15, col:16> 'int' contains-errors lvalue prefix '*' cannot overflow
|   |   |     `-ImplicitCastExpr 0x14b009e98 <col:16> 'int *' contains-errors <LValueToRValue>
|   |   |       `-DeclRefExpr 0x14b009e78 <col:16> 'int *' contains-errors lvalue Var 0x14a928bf8 'ssock' 'int *'
|   |   |-CallExpr 0x14b009f90 <line:69:9, col:19> 'void' contains-errors
|   |   | |-ImplicitCastExpr 0x14b009f78 <col:9> 'void (*)(void *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x14b009f20 <col:9> 'void (void *)' Function 0x14a945328 'free' 'void (void *)'
|   |   | `-ImplicitCastExpr 0x14b009fd0 <col:14> 'void *' contains-errors <BitCast>
|   |   |   `-ImplicitCastExpr 0x14b009fb8 <col:14> 'int *' contains-errors <LValueToRValue>
|   |   |     `-DeclRefExpr 0x14b009f40 <col:14> 'int *' contains-errors lvalue Var 0x14a928bf8 'ssock' 'int *'
|   |   `-ReturnStmt 0x14b00a020 <line:70:9, col:17>
|   |     `-UnaryOperator 0x14b00a008 <col:16, col:17> 'int' prefix '-'
|   |       `-IntegerLiteral 0x14b009fe8 <col:17> 'int' 3
|   `-ReturnStmt 0x14b00a2c0 <line:75:5, col:13>
|     `-ImplicitCastExpr 0x14b00a2a8 <col:12, col:13> 'int' contains-errors <LValueToRValue>
|       `-UnaryOperator 0x14b00a290 <col:12, col:13> 'int' contains-errors lvalue prefix '*' cannot overflow
|         `-ImplicitCastExpr 0x14b00a278 <col:13> 'int *' contains-errors <LValueToRValue>
|           `-DeclRefExpr 0x14b00a258 <col:13> 'int *' contains-errors lvalue Var 0x14a928bf8 'ssock' 'int *'
|-FunctionDecl 0x14a942b68 <line:40:13> col:13 implicit used malloc 'void *(unsigned long)' extern
| |-ParmVarDecl 0x14a942c68 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-BuiltinAttr 0x14a942c10 <<invalid sloc>> Implicit 871
| `-AllocSizeAttr 0x14a942cd8 <col:13> Implicit 1
|-FunctionDecl 0x14a945328 <line:44:9> col:9 implicit used free 'void (void *)' extern
| |-ParmVarDecl 0x14a945428 <<invalid sloc>> <invalid sloc> 'void *'
| `-BuiltinAttr 0x14a9453d0 <<invalid sloc>> Implicit 873
`-FunctionDecl 0x14a945b58 <line:56:5> col:5 implicit used memset 'void *(void *, int, unsigned long)' extern
  |-ParmVarDecl 0x14a945c58 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x14a945cc0 <<invalid sloc>> <invalid sloc> 'int'
  |-ParmVarDecl 0x14a945d28 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x14a945c00 <<invalid sloc>> Implicit 900
