TranslationUnitDecl 0x13f055408 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13f0562b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13f0559d0 '__int128'
|-TypedefDecl 0x13f056328 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13f0559f0 'unsigned __int128'
|-TypedefDecl 0x14880be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14880bc00 'struct __NSConstantString_tag'
|   `-Record 0x13f056380 '__NSConstantString_tag'
|-TypedefDecl 0x14880be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13f055b90 '__SVInt8_t'
|-TypedefDecl 0x14880bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13f055bb0 '__SVInt16_t'
|-TypedefDecl 0x14880bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13f055bd0 '__SVInt32_t'
|-TypedefDecl 0x14880bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13f055bf0 '__SVInt64_t'
|-TypedefDecl 0x14880c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13f055c10 '__SVUint8_t'
|-TypedefDecl 0x14880c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13f055c30 '__SVUint16_t'
|-TypedefDecl 0x14880c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13f055c50 '__SVUint32_t'
|-TypedefDecl 0x14880c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13f055c70 '__SVUint64_t'
|-TypedefDecl 0x14880c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13f055c90 '__SVFloat16_t'
|-TypedefDecl 0x14880c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13f055cb0 '__SVFloat32_t'
|-TypedefDecl 0x14880c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13f055cd0 '__SVFloat64_t'
|-TypedefDecl 0x14880c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13f055cf0 '__SVBfloat16_t'
|-TypedefDecl 0x14880c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13f055d10 '__clang_svint8x2_t'
|-TypedefDecl 0x14880c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13f055d30 '__clang_svint16x2_t'
|-TypedefDecl 0x14880c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13f055d50 '__clang_svint32x2_t'
|-TypedefDecl 0x14880c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13f055d70 '__clang_svint64x2_t'
|-TypedefDecl 0x14880c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13f055d90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14880c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13f055db0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14880c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13f055dd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14880c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13f055df0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14880c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13f055e10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14880c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13f055e30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14880c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13f055e50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14880c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13f055e70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14880c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13f055e90 '__clang_svint8x3_t'
|-TypedefDecl 0x14880c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13f055eb0 '__clang_svint16x3_t'
|-TypedefDecl 0x14880c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13f055ed0 '__clang_svint32x3_t'
|-TypedefDecl 0x14880c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13f055ef0 '__clang_svint64x3_t'
|-TypedefDecl 0x14880c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13f055f10 '__clang_svuint8x3_t'
|-TypedefDecl 0x14880ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13f055f30 '__clang_svuint16x3_t'
|-TypedefDecl 0x14880cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13f055f50 '__clang_svuint32x3_t'
|-TypedefDecl 0x14880cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13f055f70 '__clang_svuint64x3_t'
|-TypedefDecl 0x14880cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13f055f90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14880d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13f055fb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14880d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13f055fd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14880d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13f055ff0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14880d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13f056010 '__clang_svint8x4_t'
|-TypedefDecl 0x14880d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13f056030 '__clang_svint16x4_t'
|-TypedefDecl 0x14880d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13f056050 '__clang_svint32x4_t'
|-TypedefDecl 0x14880d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13f056070 '__clang_svint64x4_t'
|-TypedefDecl 0x14880d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13f056090 '__clang_svuint8x4_t'
|-TypedefDecl 0x14880d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13f0560b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14880d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13f0560d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14880d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13f0560f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14880d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13f056110 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14880d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13f056130 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14880d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13f056150 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14880d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13f056170 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14880da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13f056190 '__SVBool_t'
|-TypedefDecl 0x14880da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13f0561b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14880dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13f0561d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14880db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13f0561f0 '__SVCount_t'
|-TypedefDecl 0x14880dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14880dbb0 'char *'
|   `-BuiltinType 0x13f0554b0 'char'
|-TypedefDecl 0x14880dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14880dbb0 'char *'
|   `-BuiltinType 0x13f0554b0 'char'
`-FunctionDecl 0x14880ddc0 <dataset_diviso_filec/func16699_nonvuln.c:1:1, line:54:1> line:1:13 invalid fill_model_structures 'void (int)' static
  |-ParmVarDecl 0x14880dcf0 <col:35, col:53> col:53 invalid Encoder 'int'
  `-CompoundStmt 0x148828da8 <line:6:1, line:54:1>
    |-DeclStmt 0x14880e158 <line:7:5, line:12:12>
    | |-VarDecl 0x14880de88 <line:7:5, line:8:5> col:5 used bsize 'unsigned int'
    | |-VarDecl 0x14880df08 <line:7:5, line:9:5> col:5 used bstart 'unsigned int'
    | |-VarDecl 0x14880df88 <line:7:5, line:10:12> col:5 used bend 'unsigned int' cinit
    | | `-ImplicitCastExpr 0x14880e010 <col:12> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x14880dff0 <col:12> 'int' 0
    | |-VarDecl 0x14880e040 <line:7:5, line:11:5> col:5 used repcntr 'unsigned int'
    | `-VarDecl 0x14880e0c0 <line:7:5, line:12:5> col:5 used bnumber 'unsigned int'
    |-BinaryOperator 0x14880e240 <line:16:5, col:15> 'unsigned int' '='
    | |-DeclRefExpr 0x14880e1e8 <col:5> 'unsigned int' lvalue Var 0x14880e0c0 'bnumber' 'unsigned int'
    | `-ImplicitCastExpr 0x14880e228 <col:15> 'unsigned int' <IntegralCast>
    |   `-IntegerLiteral 0x14880e208 <col:15> 'int' 0
    |-BinaryOperator 0x14880e338 <line:18:5, col:27> 'unsigned int' contains-errors '='
    | |-DeclRefExpr 0x14880e260 <col:5> 'unsigned int' lvalue Var 0x14880e040 'repcntr' 'unsigned int'
    | `-BinaryOperator 0x14880e318 <col:15, col:27> '<dependent type>' contains-errors '+'
    |   |-RecoveryExpr 0x14880e2f8 <col:15> '<dependent type>' contains-errors lvalue
    |   `-IntegerLiteral 0x14880e298 <col:27> 'int' 1
    |-BinaryOperator 0x14880e3d0 <line:19:5, col:13> 'unsigned int' contains-errors '='
    | |-DeclRefExpr 0x14880e358 <col:5> 'unsigned int' lvalue Var 0x14880de88 'bsize' 'unsigned int'
    | `-RecoveryExpr 0x14880e3b0 <col:13> '<dependent type>' contains-errors lvalue
    `-DoStmt 0x148828d68 <line:21:5, line:51:31>
      |-CompoundStmt 0x148828cc0 <line:21:8, line:51:5>
      | |-IfStmt 0x148827fb0 <line:22:9, line:26:9> has_else
      | | |-ImplicitCastExpr 0x148827e20 <line:22:13> 'unsigned int' <LValueToRValue>
      | | | `-DeclRefExpr 0x148827e00 <col:13> 'unsigned int' lvalue Var 0x14880e0c0 'bnumber' 'unsigned int'
      | | |-CompoundStmt 0x148827f08 <col:22, line:24:9>
      | | | `-BinaryOperator 0x148827ee8 <line:23:13, col:29> 'unsigned int' '='
      | | |   |-DeclRefExpr 0x148827e38 <col:13> 'unsigned int' lvalue Var 0x14880df08 'bstart' 'unsigned int'
      | | |   `-BinaryOperator 0x148827ec8 <col:22, col:29> 'unsigned int' '+'
      | | |     |-ImplicitCastExpr 0x148827e98 <col:22> 'unsigned int' <LValueToRValue>
      | | |     | `-DeclRefExpr 0x148827e58 <col:22> 'unsigned int' lvalue Var 0x14880df88 'bend' 'unsigned int'
      | | |     `-ImplicitCastExpr 0x148827eb0 <col:29> 'unsigned int' <IntegralCast>
      | | |       `-IntegerLiteral 0x148827e78 <col:29> 'int' 1
      | | `-CompoundStmt 0x148827f98 <line:24:16, line:26:9>
      | |   `-BinaryOperator 0x148827f78 <line:25:13, col:22> 'unsigned int' '='
      | |     |-DeclRefExpr 0x148827f20 <col:13> 'unsigned int' lvalue Var 0x14880df08 'bstart' 'unsigned int'
      | |     `-ImplicitCastExpr 0x148827f60 <col:22> 'unsigned int' <IntegralCast>
      | |       `-IntegerLiteral 0x148827f40 <col:22> 'int' 0
      | |-IfStmt 0x1488281a0 <line:28:9, line:31:9>
      | | |-UnaryOperator 0x148828018 <line:28:13, col:16> 'int' prefix '!' cannot overflow
      | | | `-UnaryOperator 0x148828000 <col:14, col:16> 'unsigned int' prefix '--'
      | | |   `-DeclRefExpr 0x148827fe0 <col:16> 'unsigned int' lvalue Var 0x14880e040 'repcntr' 'unsigned int'
      | | `-CompoundStmt 0x148828180 <col:25, line:31:9>
      | |   |-BinaryOperator 0x1488280a8 <line:29:13, col:23> 'unsigned int' contains-errors '='
      | |   | |-DeclRefExpr 0x148828030 <col:13> 'unsigned int' lvalue Var 0x14880e040 'repcntr' 'unsigned int'
      | |   | `-RecoveryExpr 0x148828088 <col:23> '<dependent type>' contains-errors lvalue
      | |   `-CompoundAssignOperator 0x148828150 <line:30:13, col:22> 'unsigned int' contains-errors '*=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
      | |     |-DeclRefExpr 0x1488280c8 <col:13> 'unsigned int' lvalue Var 0x14880de88 'bsize' 'unsigned int'
      | |     `-RecoveryExpr 0x148828130 <col:22> '<dependent type>' contains-errors lvalue
      | |-BinaryOperator 0x1488282c8 <line:33:9, col:33> 'unsigned int' '='
      | | |-DeclRefExpr 0x1488281c0 <col:9> 'unsigned int' lvalue Var 0x14880df88 'bend' 'unsigned int'
      | | `-BinaryOperator 0x1488282a8 <col:16, col:33> 'unsigned int' '-'
      | |   |-BinaryOperator 0x148828250 <col:16, col:25> 'unsigned int' '+'
      | |   | |-ImplicitCastExpr 0x148828220 <col:16> 'unsigned int' <LValueToRValue>
      | |   | | `-DeclRefExpr 0x1488281e0 <col:16> 'unsigned int' lvalue Var 0x14880df08 'bstart' 'unsigned int'
      | |   | `-ImplicitCastExpr 0x148828238 <col:25> 'unsigned int' <LValueToRValue>
      | |   |   `-DeclRefExpr 0x148828200 <col:25> 'unsigned int' lvalue Var 0x14880de88 'bsize' 'unsigned int'
      | |   `-ImplicitCastExpr 0x148828290 <col:33> 'unsigned int' <IntegralCast>
      | |     `-IntegerLiteral 0x148828270 <col:33> 'int' 1
      | |-IfStmt 0x1488285a0 <line:34:9, line:36:9>
      | | |-BinaryOperator 0x148828470 <line:34:13, col:29> 'int' contains-errors '>='
      | | | |-BinaryOperator 0x148828430 <col:13, col:20> 'unsigned int' '+'
      | | | | |-ImplicitCastExpr 0x148828400 <col:13> 'unsigned int' <LValueToRValue>
      | | | | | `-DeclRefExpr 0x1488282e8 <col:13> 'unsigned int' lvalue Var 0x14880df88 'bend' 'unsigned int'
      | | | | `-ImplicitCastExpr 0x148828418 <col:20> 'unsigned int' <LValueToRValue>
      | | | |   `-DeclRefExpr 0x148828308 <col:20> 'unsigned int' lvalue Var 0x14880de88 'bsize' 'unsigned int'
      | | | `-RecoveryExpr 0x148828450 <col:29> '<dependent type>' contains-errors lvalue
      | | `-CompoundStmt 0x148828588 <col:37, line:36:9>
      | |   `-BinaryOperator 0x148828568 <line:35:13, col:29> 'unsigned int' contains-errors '='
      | |     |-DeclRefExpr 0x148828490 <col:13> 'unsigned int' lvalue Var 0x14880df88 'bend' 'unsigned int'
      | |     `-BinaryOperator 0x148828548 <col:20, col:29> '<dependent type>' contains-errors '-'
      | |       |-RecoveryExpr 0x148828528 <col:20> '<dependent type>' contains-errors lvalue
      | |       `-IntegerLiteral 0x1488284c8 <col:29> 'int' 1
      | |-CallExpr 0x148828850 <line:41:9, col:45> '<dependent type>' contains-errors
      | | |-DeclRefExpr 0x148828770 <col:9> 'int ()' Function 0x1488286b8 'spice_assert' 'int ()'
      | | `-BinaryOperator 0x148828830 <col:22, col:31> 'int' contains-errors '<'
      | |   |-DeclRefExpr 0x148828790 <col:22> 'unsigned int' lvalue Var 0x14880df08 'bstart' 'unsigned int'
      | |   `-RecoveryExpr 0x148828810 <col:31> '<dependent type>' contains-errors lvalue
      | |-CompoundStmt 0x148828c60 <line:42:9, line:48:9>
      | | |-DeclStmt 0x1488288f8 <line:43:13, col:27>
      | | | `-VarDecl 0x148828890 <col:13, col:26> col:26 used i 'unsigned int'
      | | |-CallExpr 0x1488289f0 <line:44:13, col:47> '<dependent type>' contains-errors
      | | | |-DeclRefExpr 0x148828910 <col:13> 'int ()' Function 0x1488286b8 'spice_assert' 'int ()'
      | | | `-BinaryOperator 0x1488289d0 <col:26, col:33> 'int' contains-errors '<'
      | | |   |-DeclRefExpr 0x148828930 <col:26> 'unsigned int' lvalue Var 0x14880df88 'bend' 'unsigned int'
      | | |   `-RecoveryExpr 0x1488289b0 <col:33> '<dependent type>' contains-errors lvalue
      | | `-ForStmt 0x148828c28 <line:45:13, line:47:13>
      | |   |-BinaryOperator 0x148828a70 <line:45:18, col:22> 'unsigned int' '='
      | |   | |-DeclRefExpr 0x148828a18 <col:18> 'unsigned int' lvalue Var 0x148828890 'i' 'unsigned int'
      | |   | `-ImplicitCastExpr 0x148828a58 <col:22> 'unsigned int' <LValueToRValue>
      | |   |   `-DeclRefExpr 0x148828a38 <col:22> 'unsigned int' lvalue Var 0x14880df08 'bstart' 'unsigned int'
      | |   |-<<<NULL>>>
      | |   |-BinaryOperator 0x148828b00 <col:30, col:35> 'int' '<='
      | |   | |-ImplicitCastExpr 0x148828ad0 <col:30> 'unsigned int' <LValueToRValue>
      | |   | | `-DeclRefExpr 0x148828a90 <col:30> 'unsigned int' lvalue Var 0x148828890 'i' 'unsigned int'
      | |   | `-ImplicitCastExpr 0x148828ae8 <col:35> 'unsigned int' <LValueToRValue>
      | |   |   `-DeclRefExpr 0x148828ab0 <col:35> 'unsigned int' lvalue Var 0x14880df88 'bend' 'unsigned int'
      | |   |-UnaryOperator 0x148828b40 <col:41, col:42> 'unsigned int' postfix '++'
      | |   | `-DeclRefExpr 0x148828b20 <col:41> 'unsigned int' lvalue Var 0x148828890 'i' 'unsigned int'
      | |   `-CompoundStmt 0x148828c18 <col:46, line:47:13>
      | `-UnaryOperator 0x148828ca8 <line:50:9, col:16> 'unsigned int' postfix '++'
      |   `-DeclRefExpr 0x148828c88 <col:9> 'unsigned int' lvalue Var 0x14880e0c0 'bnumber' 'unsigned int'
      `-RecoveryExpr 0x148828d48 <line:51:14, col:30> '_Bool' contains-errors
