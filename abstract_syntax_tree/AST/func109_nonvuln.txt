TranslationUnitDecl 0x13c855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13c8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13c855bd0 '__int128'
|-TypedefDecl 0x13c856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13c855bf0 'unsigned __int128'
|-TypedefDecl 0x13c926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13c926000 'struct __NSConstantString_tag'
|   `-Record 0x13c856580 '__NSConstantString_tag'
|-TypedefDecl 0x13c926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13c855d90 '__SVInt8_t'
|-TypedefDecl 0x13c926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13c855db0 '__SVInt16_t'
|-TypedefDecl 0x13c926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13c855dd0 '__SVInt32_t'
|-TypedefDecl 0x13c9263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13c855df0 '__SVInt64_t'
|-TypedefDecl 0x13c926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13c855e10 '__SVUint8_t'
|-TypedefDecl 0x13c9264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13c855e30 '__SVUint16_t'
|-TypedefDecl 0x13c926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13c855e50 '__SVUint32_t'
|-TypedefDecl 0x13c926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13c855e70 '__SVUint64_t'
|-TypedefDecl 0x13c9265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13c855e90 '__SVFloat16_t'
|-TypedefDecl 0x13c926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13c855eb0 '__SVFloat32_t'
|-TypedefDecl 0x13c9266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13c855ed0 '__SVFloat64_t'
|-TypedefDecl 0x13c926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13c855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13c926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13c855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13c9267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13c855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13c926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13c855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13c9268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13c855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13c926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13c855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13c926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13c855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13c9269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13c855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13c926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13c855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13c926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13c856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13c926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13c856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13c926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13c856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13c926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13c856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13c926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13c856090 '__clang_svint8x3_t'
|-TypedefDecl 0x13c926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13c8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13c926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13c8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13c926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13c8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13c926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13c856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13c926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13c856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13c926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13c856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13c926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13c856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13c926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13c856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13c927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13c8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13c927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13c8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13c9278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13c8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13c927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13c856210 '__clang_svint8x4_t'
|-TypedefDecl 0x13c9279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13c856230 '__clang_svint16x4_t'
|-TypedefDecl 0x13c927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13c856250 '__clang_svint32x4_t'
|-TypedefDecl 0x13c927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13c856270 '__clang_svint64x4_t'
|-TypedefDecl 0x13c927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13c856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13c927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13c8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13c927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13c8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13c927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13c8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13c927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13c856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13c927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13c856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13c927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13c856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13c927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13c856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13c927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13c856390 '__SVBool_t'
|-TypedefDecl 0x13c927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13c8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13c927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13c8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13c927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13c8563f0 '__SVCount_t'
|-TypedefDecl 0x13c927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13c927fb0 'char *'
|   `-BuiltinType 0x13c8556b0 'char'
|-TypedefDecl 0x13c928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13c927fb0 'char *'
|   `-BuiltinType 0x13c8556b0 'char'
`-FunctionDecl 0x13c9281a8 <dataset_diviso_filec/func109_nonvuln.c:1:1, line:35:1> line:1:1 dwg_errstrings 'int (int)'
  |-ParmVarDecl 0x13c9280d8 <col:17, col:21> col:21 used error 'int'
  `-CompoundStmt 0x13c942a98 <line:2:1, line:35:1>
    |-IfStmt 0x13c928560 <line:3:3, line:4:27>
    | |-BinaryOperator 0x13c9282f8 <line:3:7, col:15> 'int' '&'
    | | |-ImplicitCastExpr 0x13c9282e0 <col:7> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x13c9282a0 <col:7> 'int' lvalue ParmVar 0x13c9280d8 'error' 'int'
    | | `-IntegerLiteral 0x13c9282c0 <col:15> 'int' 1
    | `-CallExpr 0x13c928530 <line:4:5, col:27> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13c928440 <col:5> 'int ()' Function 0x13c928388 'HANDLER' 'int ()'
    |   |-RecoveryExpr 0x13c928510 <col:14> '<dependent type>' contains-errors lvalue
    |   `-StringLiteral 0x13c9284c0 <col:22> 'char[4]' lvalue "STR"
    |-IfStmt 0x13c9286d0 <line:5:3, line:6:27>
    | |-BinaryOperator 0x13c9285d8 <line:5:7, col:15> 'int' '&'
    | | |-ImplicitCastExpr 0x13c9285c0 <col:7> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x13c928580 <col:7> 'int' lvalue ParmVar 0x13c9280d8 'error' 'int'
    | | `-IntegerLiteral 0x13c9285a0 <col:15> 'int' 2
    | `-CallExpr 0x13c9286a0 <line:6:5, col:27> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13c9285f8 <col:5> 'int ()' Function 0x13c928388 'HANDLER' 'int ()'
    |   |-RecoveryExpr 0x13c928680 <col:14> '<dependent type>' contains-errors lvalue
    |   `-StringLiteral 0x13c928630 <col:22> 'char[4]' lvalue "STR"
    |-IfStmt 0x13c940a50 <line:7:3, line:8:27>
    | |-BinaryOperator 0x13c928748 <line:7:7, col:15> 'int' '&'
    | | |-ImplicitCastExpr 0x13c928730 <col:7> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x13c9286f0 <col:7> 'int' lvalue ParmVar 0x13c9280d8 'error' 'int'
    | | `-IntegerLiteral 0x13c928710 <col:15> 'int' 4
    | `-CallExpr 0x13c940a20 <line:8:5, col:27> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13c928768 <col:5> 'int ()' Function 0x13c928388 'HANDLER' 'int ()'
    |   |-RecoveryExpr 0x13c940a00 <col:14> '<dependent type>' contains-errors lvalue
    |   `-StringLiteral 0x13c9287a0 <col:22> 'char[4]' lvalue "STR"
    |-IfStmt 0x13c940bc0 <line:9:3, line:10:27>
    | |-BinaryOperator 0x13c940ac8 <line:9:7, col:15> 'int' '&'
    | | |-ImplicitCastExpr 0x13c940ab0 <col:7> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x13c940a70 <col:7> 'int' lvalue ParmVar 0x13c9280d8 'error' 'int'
    | | `-IntegerLiteral 0x13c940a90 <col:15> 'int' 8
    | `-CallExpr 0x13c940b90 <line:10:5, col:27> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13c940ae8 <col:5> 'int ()' Function 0x13c928388 'HANDLER' 'int ()'
    |   |-RecoveryExpr 0x13c940b70 <col:14> '<dependent type>' contains-errors lvalue
    |   `-StringLiteral 0x13c940b20 <col:22> 'char[4]' lvalue "STR"
    |-IfStmt 0x13c940d30 <line:11:3, line:12:27>
    | |-BinaryOperator 0x13c940c38 <line:11:7, col:15> 'int' '&'
    | | |-ImplicitCastExpr 0x13c940c20 <col:7> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x13c940be0 <col:7> 'int' lvalue ParmVar 0x13c9280d8 'error' 'int'
    | | `-IntegerLiteral 0x13c940c00 <col:15> 'int' 16
    | `-CallExpr 0x13c940d00 <line:12:5, col:27> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13c940c58 <col:5> 'int ()' Function 0x13c928388 'HANDLER' 'int ()'
    |   |-RecoveryExpr 0x13c940ce0 <col:14> '<dependent type>' contains-errors lvalue
    |   `-StringLiteral 0x13c940c90 <col:22> 'char[4]' lvalue "STR"
    |-IfStmt 0x13c940ea0 <line:13:3, line:14:27>
    | |-BinaryOperator 0x13c940da8 <line:13:7, col:15> 'int' '&'
    | | |-ImplicitCastExpr 0x13c940d90 <col:7> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x13c940d50 <col:7> 'int' lvalue ParmVar 0x13c9280d8 'error' 'int'
    | | `-IntegerLiteral 0x13c940d70 <col:15> 'int' 32
    | `-CallExpr 0x13c940e70 <line:14:5, col:27> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13c940dc8 <col:5> 'int ()' Function 0x13c928388 'HANDLER' 'int ()'
    |   |-RecoveryExpr 0x13c940e50 <col:14> '<dependent type>' contains-errors lvalue
    |   `-StringLiteral 0x13c940e00 <col:22> 'char[4]' lvalue "STR"
    |-IfStmt 0x13c941010 <line:15:3, line:16:27>
    | |-BinaryOperator 0x13c940f18 <line:15:7, col:15> 'int' '&'
    | | |-ImplicitCastExpr 0x13c940f00 <col:7> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x13c940ec0 <col:7> 'int' lvalue ParmVar 0x13c9280d8 'error' 'int'
    | | `-IntegerLiteral 0x13c940ee0 <col:15> 'int' 64
    | `-CallExpr 0x13c940fe0 <line:16:5, col:27> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13c940f38 <col:5> 'int ()' Function 0x13c928388 'HANDLER' 'int ()'
    |   |-RecoveryExpr 0x13c940fc0 <col:14> '<dependent type>' contains-errors lvalue
    |   `-StringLiteral 0x13c940f70 <col:22> 'char[4]' lvalue "STR"
    |-IfStmt 0x13c941180 <line:18:3, line:19:27>
    | |-BinaryOperator 0x13c941088 <line:18:7, col:15> 'int' '>'
    | | |-ImplicitCastExpr 0x13c941070 <col:7> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x13c941030 <col:7> 'int' lvalue ParmVar 0x13c9280d8 'error' 'int'
    | | `-IntegerLiteral 0x13c941050 <col:15> 'int' 127
    | `-CallExpr 0x13c941150 <line:19:5, col:27> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13c9410a8 <col:5> 'int ()' Function 0x13c928388 'HANDLER' 'int ()'
    |   |-RecoveryExpr 0x13c941130 <col:14> '<dependent type>' contains-errors lvalue
    |   `-StringLiteral 0x13c9410e0 <col:22> 'char[4]' lvalue "STR"
    |-IfStmt 0x13c9412f0 <line:20:3, line:21:27>
    | |-BinaryOperator 0x13c9411f8 <line:20:7, col:15> 'int' '&'
    | | |-ImplicitCastExpr 0x13c9411e0 <col:7> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x13c9411a0 <col:7> 'int' lvalue ParmVar 0x13c9280d8 'error' 'int'
    | | `-IntegerLiteral 0x13c9411c0 <col:15> 'int' 128
    | `-CallExpr 0x13c9412c0 <line:21:5, col:27> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13c941218 <col:5> 'int ()' Function 0x13c928388 'HANDLER' 'int ()'
    |   |-RecoveryExpr 0x13c9412a0 <col:14> '<dependent type>' contains-errors lvalue
    |   `-StringLiteral 0x13c941250 <col:22> 'char[4]' lvalue "STR"
    |-IfStmt 0x13c941460 <line:22:3, line:23:27>
    | |-BinaryOperator 0x13c941368 <line:22:7, col:15> 'int' '&'
    | | |-ImplicitCastExpr 0x13c941350 <col:7> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x13c941310 <col:7> 'int' lvalue ParmVar 0x13c9280d8 'error' 'int'
    | | `-IntegerLiteral 0x13c941330 <col:15> 'int' 256
    | `-CallExpr 0x13c941430 <line:23:5, col:27> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13c941388 <col:5> 'int ()' Function 0x13c928388 'HANDLER' 'int ()'
    |   |-RecoveryExpr 0x13c941410 <col:14> '<dependent type>' contains-errors lvalue
    |   `-StringLiteral 0x13c9413c0 <col:22> 'char[4]' lvalue "STR"
    |-IfStmt 0x13c9415d0 <line:24:3, line:25:27>
    | |-BinaryOperator 0x13c9414d8 <line:24:7, col:15> 'int' '&'
    | | |-ImplicitCastExpr 0x13c9414c0 <col:7> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x13c941480 <col:7> 'int' lvalue ParmVar 0x13c9280d8 'error' 'int'
    | | `-IntegerLiteral 0x13c9414a0 <col:15> 'int' 512
    | `-CallExpr 0x13c9415a0 <line:25:5, col:27> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13c9414f8 <col:5> 'int ()' Function 0x13c928388 'HANDLER' 'int ()'
    |   |-RecoveryExpr 0x13c941580 <col:14> '<dependent type>' contains-errors lvalue
    |   `-StringLiteral 0x13c941530 <col:22> 'char[4]' lvalue "STR"
    |-IfStmt 0x13c941740 <line:26:3, line:27:27>
    | |-BinaryOperator 0x13c941648 <line:26:7, col:15> 'int' '&'
    | | |-ImplicitCastExpr 0x13c941630 <col:7> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x13c9415f0 <col:7> 'int' lvalue ParmVar 0x13c9280d8 'error' 'int'
    | | `-IntegerLiteral 0x13c941610 <col:15> 'int' 1024
    | `-CallExpr 0x13c941710 <line:27:5, col:27> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13c941668 <col:5> 'int ()' Function 0x13c928388 'HANDLER' 'int ()'
    |   |-RecoveryExpr 0x13c9416f0 <col:14> '<dependent type>' contains-errors lvalue
    |   `-StringLiteral 0x13c9416a0 <col:22> 'char[4]' lvalue "STR"
    |-IfStmt 0x13c9418b0 <line:28:3, line:29:27>
    | |-BinaryOperator 0x13c9417b8 <line:28:7, col:15> 'int' '&'
    | | |-ImplicitCastExpr 0x13c9417a0 <col:7> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x13c941760 <col:7> 'int' lvalue ParmVar 0x13c9280d8 'error' 'int'
    | | `-IntegerLiteral 0x13c941780 <col:15> 'int' 2048
    | `-CallExpr 0x13c941880 <line:29:5, col:27> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13c9417d8 <col:5> 'int ()' Function 0x13c928388 'HANDLER' 'int ()'
    |   |-RecoveryExpr 0x13c941860 <col:14> '<dependent type>' contains-errors lvalue
    |   `-StringLiteral 0x13c941810 <col:22> 'char[4]' lvalue "STR"
    |-IfStmt 0x13c942830 <line:30:3, line:31:27>
    | |-BinaryOperator 0x13c941928 <line:30:7, col:15> 'int' '&'
    | | |-ImplicitCastExpr 0x13c941910 <col:7> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x13c9418d0 <col:7> 'int' lvalue ParmVar 0x13c9280d8 'error' 'int'
    | | `-IntegerLiteral 0x13c9418f0 <col:15> 'int' 4096
    | `-CallExpr 0x13c942800 <line:31:5, col:27> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13c941948 <col:5> 'int ()' Function 0x13c928388 'HANDLER' 'int ()'
    |   |-RecoveryExpr 0x13c9419d0 <col:14> '<dependent type>' contains-errors lvalue
    |   `-StringLiteral 0x13c941980 <col:22> 'char[4]' lvalue "STR"
    |-IfStmt 0x13c9429a0 <line:32:3, line:33:27>
    | |-BinaryOperator 0x13c9428a8 <line:32:7, col:15> 'int' '&'
    | | |-ImplicitCastExpr 0x13c942890 <col:7> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x13c942850 <col:7> 'int' lvalue ParmVar 0x13c9280d8 'error' 'int'
    | | `-IntegerLiteral 0x13c942870 <col:15> 'int' 8192
    | `-CallExpr 0x13c942970 <line:33:5, col:27> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13c9428c8 <col:5> 'int ()' Function 0x13c928388 'HANDLER' 'int ()'
    |   |-RecoveryExpr 0x13c942950 <col:14> '<dependent type>' contains-errors lvalue
    |   `-StringLiteral 0x13c942900 <col:22> 'char[4]' lvalue "STR"
    `-CallExpr 0x13c942a68 <line:34:3, col:25> '<dependent type>' contains-errors
      |-DeclRefExpr 0x13c9429c0 <col:3> 'int ()' Function 0x13c928388 'HANDLER' 'int ()'
      |-RecoveryExpr 0x13c942a48 <col:12> '<dependent type>' contains-errors lvalue
      `-StringLiteral 0x13c9429f8 <col:20> 'char[4]' lvalue "STR"
