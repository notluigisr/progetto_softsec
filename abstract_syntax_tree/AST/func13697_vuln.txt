TranslationUnitDecl 0x11e855008 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x11e855eb8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x11e8555d0 '__int128'
|-TypedefDecl 0x11e855f28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x11e8555f0 'unsigned __int128'
|-TypedefDecl 0x11d80c430 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x11d80c200 'struct __NSConstantString_tag'
|   `-Record 0x11e855f80 '__NSConstantString_tag'
|-TypedefDecl 0x11d80c498 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x11e855790 '__SVInt8_t'
|-TypedefDecl 0x11d80c500 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x11e8557b0 '__SVInt16_t'
|-TypedefDecl 0x11d80c568 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x11e8557d0 '__SVInt32_t'
|-TypedefDecl 0x11d80c5d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x11e8557f0 '__SVInt64_t'
|-TypedefDecl 0x11d80c638 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x11e855810 '__SVUint8_t'
|-TypedefDecl 0x11d80c6a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x11e855830 '__SVUint16_t'
|-TypedefDecl 0x11d80c708 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x11e855850 '__SVUint32_t'
|-TypedefDecl 0x11d80c770 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x11e855870 '__SVUint64_t'
|-TypedefDecl 0x11d80c7d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x11e855890 '__SVFloat16_t'
|-TypedefDecl 0x11d80c840 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x11e8558b0 '__SVFloat32_t'
|-TypedefDecl 0x11d80c8a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x11e8558d0 '__SVFloat64_t'
|-TypedefDecl 0x11d80c910 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x11e8558f0 '__SVBfloat16_t'
|-TypedefDecl 0x11d80c978 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x11e855910 '__clang_svint8x2_t'
|-TypedefDecl 0x11d80c9e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x11e855930 '__clang_svint16x2_t'
|-TypedefDecl 0x11d80ca48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x11e855950 '__clang_svint32x2_t'
|-TypedefDecl 0x11d80cab0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x11e855970 '__clang_svint64x2_t'
|-TypedefDecl 0x11d80cb18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x11e855990 '__clang_svuint8x2_t'
|-TypedefDecl 0x11d80cb80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x11e8559b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x11d80cbe8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x11e8559d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x11d80cc50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x11e8559f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x11d80ccb8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x11e855a10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x11d80cd20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x11e855a30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x11d80cd88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x11e855a50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x11d80cdf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x11e855a70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x11d80ce58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x11e855a90 '__clang_svint8x3_t'
|-TypedefDecl 0x11d80cec0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x11e855ab0 '__clang_svint16x3_t'
|-TypedefDecl 0x11d80cf28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x11e855ad0 '__clang_svint32x3_t'
|-TypedefDecl 0x11d80cf90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x11e855af0 '__clang_svint64x3_t'
|-TypedefDecl 0x11d80cff8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x11e855b10 '__clang_svuint8x3_t'
|-TypedefDecl 0x11d80d060 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x11e855b30 '__clang_svuint16x3_t'
|-TypedefDecl 0x11d80d0c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x11e855b50 '__clang_svuint32x3_t'
|-TypedefDecl 0x11d80d130 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x11e855b70 '__clang_svuint64x3_t'
|-TypedefDecl 0x11d80d198 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x11e855b90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x11d80da00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x11e855bb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x11d80da68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x11e855bd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x11d80dad0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x11e855bf0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x11d80db38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x11e855c10 '__clang_svint8x4_t'
|-TypedefDecl 0x11d80dba0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x11e855c30 '__clang_svint16x4_t'
|-TypedefDecl 0x11d80dc08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x11e855c50 '__clang_svint32x4_t'
|-TypedefDecl 0x11d80dc70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x11e855c70 '__clang_svint64x4_t'
|-TypedefDecl 0x11d80dcd8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x11e855c90 '__clang_svuint8x4_t'
|-TypedefDecl 0x11d80dd40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x11e855cb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x11d80dda8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x11e855cd0 '__clang_svuint32x4_t'
|-TypedefDecl 0x11d80de10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x11e855cf0 '__clang_svuint64x4_t'
|-TypedefDecl 0x11d80de78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x11e855d10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x11d80dee0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x11e855d30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x11d80df48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x11e855d50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x11d80dfb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x11e855d70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x11d80e018 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x11e855d90 '__SVBool_t'
|-TypedefDecl 0x11d80e080 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x11e855db0 '__clang_svboolx2_t'
|-TypedefDecl 0x11d80e0e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x11e855dd0 '__clang_svboolx4_t'
|-TypedefDecl 0x11d80e150 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x11e855df0 '__SVCount_t'
|-TypedefDecl 0x11d80e1f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x11d80e1b0 'char *'
|   `-BuiltinType 0x11e8550b0 'char'
|-TypedefDecl 0x11d80e268 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x11d80e1b0 'char *'
|   `-BuiltinType 0x11e8550b0 'char'
|-FunctionDecl 0x11d80e668 <dataset_diviso_filec/func13697_vuln.c:1:1, line:16:1> line:1:17 invalid HuffmanTree_makeFromFrequencies 'unsigned int (int *, const unsigned int *, int, int, unsigned int)' static
| |-ParmVarDecl 0x11d80e328 <col:49, col:62> col:62 referenced invalid tree 'int *'
| |-ParmVarDecl 0x11d80e3d8 <col:68, col:84> col:84 used frequencies 'const unsigned int *'
| |-ParmVarDecl 0x11d80e458 <line:2:49, col:56> col:56 invalid mincodes 'int'
| |-ParmVarDecl 0x11d80e4d8 <col:66, col:73> col:73 referenced invalid numcodes 'int'
| |-ParmVarDecl 0x11d80e558 <col:83, col:92> col:92 used maxbitlen 'unsigned int'
| `-CompoundStmt 0x11f0086e8 <line:3:1, line:16:1>
|   |-DeclStmt 0x11d80e7f0 <line:4:3, col:21>
|   | `-VarDecl 0x11d80e750 <col:3, col:20> col:12 used error 'unsigned int' cinit
|   |   `-ImplicitCastExpr 0x11d80e7d8 <col:20> 'unsigned int' <IntegralCast>
|   |     `-IntegerLiteral 0x11d80e7b8 <col:20> 'int' 0
|   |-WhileStmt 0x11d80e9d0 <line:5:3, col:68>
|   | |-BinaryOperator 0x11d80e950 <col:9, col:50> 'int' contains-errors '&&'
|   | | |-UnaryOperator 0x11d80e8d8 <col:9, col:34> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | | `-ImplicitCastExpr 0x11d80e8c0 <col:10, col:34> '<dependent type>' contains-errors <LValueToRValue>
|   | | |   `-ArraySubscriptExpr 0x11d80e8a0 <col:10, col:34> '<dependent type>' contains-errors lvalue
|   | | |     |-ImplicitCastExpr 0x11d80e888 <col:10> 'const unsigned int *' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x11d80e808 <col:10> 'const unsigned int *' lvalue ParmVar 0x11d80e3d8 'frequencies' 'const unsigned int *'
|   | | |     `-BinaryOperator 0x11d80e868 <col:22, col:33> '<dependent type>' contains-errors '-'
|   | | |       |-RecoveryExpr 0x11d80e828 <col:22> '<dependent type>' contains-errors lvalue
|   | | |       `-IntegerLiteral 0x11d80e848 <col:33> 'int' 1
|   | | `-BinaryOperator 0x11d80e930 <col:39, col:50> 'int' contains-errors '>'
|   | |   |-RecoveryExpr 0x11d80e8f0 <col:39> '<dependent type>' contains-errors lvalue
|   | |   `-RecoveryExpr 0x11d80e910 <col:50> '<dependent type>' contains-errors lvalue
|   | `-UnaryOperator 0x11d80e9b8 <col:60, col:68> '<dependent type>' contains-errors postfix '--' cannot overflow
|   |   `-RecoveryExpr 0x11d80e990 <col:60> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x11d80e970 <col:60> 'int' lvalue ParmVar 0x11d80e4d8 'numcodes' 'int'
|   |-BinaryOperator 0x11d827ab0 <line:6:3, col:21> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x11d827a48 <col:3, col:9> '<dependent type>' contains-errors lvalue ->maxbitlen
|   | | `-RecoveryExpr 0x11d827a20 <col:3> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x11d827a00 <col:3> 'int *' lvalue ParmVar 0x11d80e328 'tree' 'int *'
|   | `-DeclRefExpr 0x11d827a90 <col:21> 'unsigned int' lvalue ParmVar 0x11d80e558 'maxbitlen' 'unsigned int'
|   |-BinaryOperator 0x11d827bc0 <line:7:3, col:30> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x11d827b18 <col:3, col:9> '<dependent type>' contains-errors lvalue ->numcodes
|   | | `-RecoveryExpr 0x11d827af0 <col:3> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x11d827ad0 <col:3> 'int *' lvalue ParmVar 0x11d80e328 'tree' 'int *'
|   | `-CStyleCastExpr 0x11d827b98 <col:20, col:30> 'unsigned int' contains-errors <Dependent>
|   |   `-RecoveryExpr 0x11d827b60 <col:30> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x11d8284a0 <line:8:3, col:80> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x11d827c28 <col:3, col:9> '<dependent type>' contains-errors lvalue ->lengths
|   | | `-RecoveryExpr 0x11d827c00 <col:3> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x11d827be0 <col:3> 'int *' lvalue ParmVar 0x11d80e328 'tree' 'int *'
|   | `-CStyleCastExpr 0x11d828478 <col:19, col:80> 'unsigned int *' contains-errors <Dependent>
|   |   `-CallExpr 0x11d8283f8 <col:30, col:80> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x11d8282e0 <col:30> 'void *(void *, unsigned long)' Function 0x11d8280d0 'realloc' 'void *(void *, unsigned long)'
|   |     |-CXXDependentScopeMemberExpr 0x11d828320 <col:38, col:44> '<dependent type>' contains-errors lvalue ->lengths
|   |     | `-RecoveryExpr 0x11d828300 <col:38> '<dependent type>' contains-errors lvalue
|   |     `-BinaryOperator 0x11d8283c0 <col:53, col:79> '<dependent type>' contains-errors '*'
|   |       |-RecoveryExpr 0x11d828368 <col:53> '<dependent type>' contains-errors lvalue
|   |       `-UnaryExprOrTypeTraitExpr 0x11d8283a0 <col:64, col:79> 'unsigned long' sizeof 'unsigned int'
|   |-IfStmt 0x11d8285a0 <line:9:3, col:29>
|   | |-UnaryOperator 0x11d828540 <col:6, col:13> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x11d828528 <col:7, col:13> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-CXXDependentScopeMemberExpr 0x11d8284e0 <col:7, col:13> '<dependent type>' contains-errors lvalue ->lengths
|   | |     `-RecoveryExpr 0x11d8284c0 <col:7> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x11d828590 <col:22, col:29>
|   |   `-ImplicitCastExpr 0x11d828578 <col:29> 'unsigned int' <IntegralCast>
|   |     `-IntegerLiteral 0x11d828558 <col:29> 'int' 83
|   |-CallExpr 0x11d828990 <line:11:3, col:55> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x11d828858 <col:3> 'void *(void *, int, unsigned long)' Function 0x11d828608 'memset' 'void *(void *, int, unsigned long)'
|   | |-CXXDependentScopeMemberExpr 0x11d828898 <col:10, col:16> '<dependent type>' contains-errors lvalue ->lengths
|   | | `-RecoveryExpr 0x11d828878 <col:10> '<dependent type>' contains-errors lvalue
|   | |-IntegerLiteral 0x11d8288e0 <col:25> 'int' 0
|   | `-BinaryOperator 0x11d828958 <col:28, col:54> '<dependent type>' contains-errors '*'
|   |   |-RecoveryExpr 0x11d828900 <col:28> '<dependent type>' contains-errors lvalue
|   |   `-UnaryExprOrTypeTraitExpr 0x11d828938 <col:39, col:54> 'unsigned long' sizeof 'unsigned int'
|   |-BinaryOperator 0x11f008488 <line:13:3, col:87> 'unsigned int' contains-errors '='
|   | |-DeclRefExpr 0x11d8289c8 <col:3> 'unsigned int' lvalue Var 0x11d80e750 'error' 'unsigned int'
|   | `-CallExpr 0x11f008448 <col:11, col:87> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x11f008360 <col:11> 'int ()' Function 0x11f0082a8 'lodepng_huffman_code_lengths' 'int ()'
|   |   |-CXXDependentScopeMemberExpr 0x11f0083a0 <col:40, col:46> '<dependent type>' contains-errors lvalue ->lengths
|   |   | `-RecoveryExpr 0x11f008380 <col:40> '<dependent type>' contains-errors lvalue
|   |   |-DeclRefExpr 0x11f0083e8 <col:55> 'const unsigned int *' lvalue ParmVar 0x11d80e3d8 'frequencies' 'const unsigned int *'
|   |   |-RecoveryExpr 0x11f008408 <col:68> '<dependent type>' contains-errors lvalue
|   |   `-DeclRefExpr 0x11f008428 <col:78> 'unsigned int' lvalue ParmVar 0x11d80e558 'maxbitlen' 'unsigned int'
|   |-IfStmt 0x11f008680 <line:14:3, col:55>
|   | |-UnaryOperator 0x11f0084e0 <col:6, col:7> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x11f0084c8 <col:7> 'unsigned int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x11f0084a8 <col:7> 'unsigned int' lvalue Var 0x11d80e750 'error' 'unsigned int'
|   | `-BinaryOperator 0x11f008660 <col:14, col:55> 'unsigned int' contains-errors '='
|   |   |-DeclRefExpr 0x11f0084f8 <col:14> 'unsigned int' lvalue Var 0x11d80e750 'error' 'unsigned int'
|   |   `-CallExpr 0x11f008638 <col:22, col:55> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x11f0085f8 <col:22> 'int ()' Function 0x11f008540 'HuffmanTree_makeFromLengths2' 'int ()'
|   |     `-RecoveryExpr 0x11f008618 <col:51> '<dependent type>' contains-errors lvalue
|   `-ReturnStmt 0x11f0086d8 <line:15:3, col:10>
|     `-ImplicitCastExpr 0x11f0086c0 <col:10> 'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x11f0086a0 <col:10> 'unsigned int' lvalue Var 0x11d80e750 'error' 'unsigned int'
|-FunctionDecl 0x11d8280d0 <line:8:30> col:30 implicit used realloc 'void *(void *, unsigned long)' extern
| |-ParmVarDecl 0x11d8281d0 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x11d828238 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-BuiltinAttr 0x11d828178 <<invalid sloc>> Implicit 872
| `-AllocSizeAttr 0x11d8282b0 <col:30> Implicit 2
`-FunctionDecl 0x11d828608 <line:11:3> col:3 implicit used memset 'void *(void *, int, unsigned long)' extern
  |-ParmVarDecl 0x11d828708 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x11d828770 <<invalid sloc>> <invalid sloc> 'int'
  |-ParmVarDecl 0x11d8287d8 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x11d8286b0 <<invalid sloc>> Implicit 900
