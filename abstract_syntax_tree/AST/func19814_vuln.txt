TranslationUnitDecl 0x14c055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14c0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14c055bd0 '__int128'
|-TypedefDecl 0x14c056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14c055bf0 'unsigned __int128'
|-TypedefDecl 0x14c80be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14c80bc00 'struct __NSConstantString_tag'
|   `-Record 0x14c056580 '__NSConstantString_tag'
|-TypedefDecl 0x14c80be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14c055d90 '__SVInt8_t'
|-TypedefDecl 0x14c80bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14c055db0 '__SVInt16_t'
|-TypedefDecl 0x14c80bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14c055dd0 '__SVInt32_t'
|-TypedefDecl 0x14c80bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14c055df0 '__SVInt64_t'
|-TypedefDecl 0x14c80c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14c055e10 '__SVUint8_t'
|-TypedefDecl 0x14c80c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14c055e30 '__SVUint16_t'
|-TypedefDecl 0x14c80c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14c055e50 '__SVUint32_t'
|-TypedefDecl 0x14c80c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14c055e70 '__SVUint64_t'
|-TypedefDecl 0x14c80c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14c055e90 '__SVFloat16_t'
|-TypedefDecl 0x14c80c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14c055eb0 '__SVFloat32_t'
|-TypedefDecl 0x14c80c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14c055ed0 '__SVFloat64_t'
|-TypedefDecl 0x14c80c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14c055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14c80c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14c055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14c80c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14c055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14c80c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14c055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14c80c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14c055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14c80c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14c055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14c80c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14c055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14c80c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14c055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14c80c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14c055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14c80c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14c056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14c80c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14c056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14c80c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14c056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14c80c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14c056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14c80c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14c056090 '__clang_svint8x3_t'
|-TypedefDecl 0x14c80c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14c0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14c80c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14c0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14c80c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14c0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14c80c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14c056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14c80ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14c056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14c80cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14c056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14c80cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14c056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14c80cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14c056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14c80d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14c0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14c80d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14c0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14c80d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14c0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14c80d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14c056210 '__clang_svint8x4_t'
|-TypedefDecl 0x14c80d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14c056230 '__clang_svint16x4_t'
|-TypedefDecl 0x14c80d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14c056250 '__clang_svint32x4_t'
|-TypedefDecl 0x14c80d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14c056270 '__clang_svint64x4_t'
|-TypedefDecl 0x14c80d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14c056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14c80d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14c0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14c80d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14c0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14c80d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14c0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14c80d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14c056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14c80d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14c056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14c80d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14c056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14c80d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14c056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14c80da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14c056390 '__SVBool_t'
|-TypedefDecl 0x14c80da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14c0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14c80dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14c0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14c80db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14c0563f0 '__SVCount_t'
|-TypedefDecl 0x14c80dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14c80dbb0 'char *'
|   `-BuiltinType 0x14c0556b0 'char'
|-TypedefDecl 0x14c80dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14c80dbb0 'char *'
|   `-BuiltinType 0x14c0556b0 'char'
|-FunctionDecl 0x14c80e0a8 <dataset_diviso_filec/func19814_vuln.c:1:1, line:69:1> line:1:7 suhosin_decrypt_single_cookie 'char *(char *, int, char *, int, char *, char **)'
| |-ParmVarDecl 0x14c80dcd8 <col:37, col:43> col:43 used name 'char *'
| |-ParmVarDecl 0x14c80dd58 <col:49, col:53> col:53 used name_len 'int'
| |-ParmVarDecl 0x14c80ddd8 <col:63, col:69> col:69 used value 'char *'
| |-ParmVarDecl 0x14c80de58 <col:76, col:80> col:80 used value_len 'int'
| |-ParmVarDecl 0x14c80ded8 <col:91, col:97> col:97 used key 'char *'
| |-ParmVarDecl 0x14c80df88 <col:102, col:109> col:109 used where 'char **'
| `-CompoundStmt 0x14c1296a8 <line:2:1, line:69:1>
|   |-DeclStmt 0x14c80e2d8 <line:3:2, col:19>
|   | `-VarDecl 0x14c80e270 <col:2, col:18> col:7 used buffer 'char[4096]'
|   |-DeclStmt 0x14c80e3b8 <line:4:5, col:23>
|   | `-VarDecl 0x14c80e350 <col:5, col:22> col:10 used buffer2 'char[4096]'
|   |-DeclStmt 0x14c1234a0 <line:5:5, col:30>
|   | `-VarDecl 0x14c123400 <col:5, col:22> col:9 used o_name_len 'int' cinit
|   |   `-ImplicitCastExpr 0x14c123488 <col:22> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x14c123468 <col:22> 'int' lvalue ParmVar 0x14c80dd58 'name_len' 'int'
|   |-DeclStmt 0x14c123750 <line:6:2, col:49>
|   | |-VarDecl 0x14c1234d0 <col:2, col:14> col:8 used buf 'char *' cinit
|   | | `-ImplicitCastExpr 0x14c123558 <col:14> 'char *' <ArrayToPointerDecay>
|   | |   `-DeclRefExpr 0x14c123538 <col:14> 'char[4096]' lvalue Var 0x14c80e270 'buffer' 'char[4096]'
|   | |-VarDecl 0x14c123588 <col:2, col:30> col:23 used buf2 'char *' cinit
|   | | `-ImplicitCastExpr 0x14c123610 <col:30> 'char *' <ArrayToPointerDecay>
|   | |   `-DeclRefExpr 0x14c1235f0 <col:30> 'char[4096]' lvalue Var 0x14c80e350 'buffer2' 'char[4096]'
|   | |-VarDecl 0x14c123640 <col:2, col:40> col:40 used d 'char *'
|   | `-VarDecl 0x14c1236c0 <col:2, col:44> col:44 used d_url 'char *'
|   |-DeclStmt 0x14c1237e8 <line:7:2, col:7>
|   | `-VarDecl 0x14c123780 <col:2, col:6> col:6 used l 'int'
|   |-IfStmt 0x14c126198 <line:9:2, line:14:2> has_else
|   | |-BinaryOperator 0x14c123908 <line:9:6, col:32> 'int' '>'
|   | | |-ImplicitCastExpr 0x14c1238f0 <col:6> 'unsigned long' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x14c1238d8 <col:6> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x14c123800 <col:6> 'int' lvalue ParmVar 0x14c80dd58 'name_len' 'int'
|   | | `-BinaryOperator 0x14c1238b8 <col:17, col:32> 'unsigned long' '-'
|   | |   |-UnaryExprOrTypeTraitExpr 0x14c123860 <col:17, col:30> 'unsigned long' sizeof
|   | |   | `-ParenExpr 0x14c123840 <col:23, col:30> 'char[4096]' lvalue
|   | |   |   `-DeclRefExpr 0x14c123820 <col:24> 'char[4096]' lvalue Var 0x14c80e270 'buffer' 'char[4096]' non_odr_use_unevaluated
|   | |   `-ImplicitCastExpr 0x14c1238a0 <col:32> 'unsigned long' <IntegralCast>
|   | |     `-IntegerLiteral 0x14c123880 <col:32> 'int' 2
|   | |-CompoundStmt 0x14c123fd0 <col:35, line:11:2>
|   | | `-BinaryOperator 0x14c123fb0 <line:10:3, col:32> 'char *' '='
|   | |   |-DeclRefExpr 0x14c123928 <col:3> 'char *' lvalue Var 0x14c1234d0 'buf' 'char *'
|   | |   `-ImplicitCastExpr 0x14c123b78 <col:9, col:32> 'char *' <IntegralToPointer>
|   | |     `-CallExpr 0x14c123b18 <col:9, col:32> 'int'
|   | |       |-ImplicitCastExpr 0x14c123b00 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x14c123a70 <col:9> 'int ()' Function 0x14c1239b8 'estrndup' 'int ()'
|   | |       |-ImplicitCastExpr 0x14c123b48 <col:18> 'char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x14c123a90 <col:18> 'char *' lvalue ParmVar 0x14c80dcd8 'name' 'char *'
|   | |       `-ImplicitCastExpr 0x14c123b60 <col:24> 'int' <LValueToRValue>
|   | |         `-DeclRefExpr 0x14c123ab0 <col:24> 'int' lvalue ParmVar 0x14c80dd58 'name_len' 'int'
|   | `-CompoundStmt 0x14c126178 <line:11:9, line:14:2>
|   |   |-CallExpr 0x14c1243c8 <line:12:3, col:29> 'void *'
|   |   | |-ImplicitCastExpr 0x14c1243b0 <col:3> 'void *(*)(void *, const void *, unsigned long)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x14c1242b8 <col:3> 'void *(void *, const void *, unsigned long)' Function 0x14c124068 'memcpy' 'void *(void *, const void *, unsigned long)'
|   |   | |-ImplicitCastExpr 0x14c126018 <col:10> 'void *' <BitCast>
|   |   | | `-ImplicitCastExpr 0x14c126000 <col:10> 'char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x14c1242d8 <col:10> 'char *' lvalue Var 0x14c1234d0 'buf' 'char *'
|   |   | |-ImplicitCastExpr 0x14c126048 <col:15> 'const void *' <BitCast>
|   |   | | `-ImplicitCastExpr 0x14c126030 <col:15> 'char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x14c1242f8 <col:15> 'char *' lvalue ParmVar 0x14c80dcd8 'name' 'char *'
|   |   | `-ImplicitCastExpr 0x14c126078 <col:21> 'unsigned long' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x14c126060 <col:21> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x14c124318 <col:21> 'int' lvalue ParmVar 0x14c80dd58 'name_len' 'int'
|   |   `-BinaryOperator 0x14c126158 <line:13:3, col:19> 'char' '='
|   |     |-ArraySubscriptExpr 0x14c126100 <col:3, col:15> 'char' lvalue
|   |     | |-ImplicitCastExpr 0x14c1260d0 <col:3> 'char *' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x14c126090 <col:3> 'char *' lvalue Var 0x14c1234d0 'buf' 'char *'
|   |     | `-ImplicitCastExpr 0x14c1260e8 <col:7> 'int' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x14c1260b0 <col:7> 'int' lvalue ParmVar 0x14c80dd58 'name_len' 'int'
|   |     `-ImplicitCastExpr 0x14c126140 <col:19> 'char' <IntegralCast>
|   |       `-IntegerLiteral 0x14c126120 <col:19> 'int' 0
|   |-BinaryOperator 0x14c1263a0 <line:16:2, col:41> 'int' '='
|   | |-DeclRefExpr 0x14c1261c8 <col:2> 'int' lvalue ParmVar 0x14c80dd58 'name_len' 'int'
|   | `-CallExpr 0x14c126340 <col:13, col:41> 'int'
|   |   |-ImplicitCastExpr 0x14c126328 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x14c1262c8 <col:13> 'int ()' Function 0x14c126210 'php_url_decode' 'int ()'
|   |   |-ImplicitCastExpr 0x14c126370 <col:28> 'char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x14c1262e8 <col:28> 'char *' lvalue Var 0x14c1234d0 'buf' 'char *'
|   |   `-ImplicitCastExpr 0x14c126388 <col:33> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x14c126308 <col:33> 'int' lvalue ParmVar 0x14c80dd58 'name_len' 'int'
|   |-CallExpr 0x14c1264f8 <line:17:5, col:26> 'int'
|   | |-ImplicitCastExpr 0x14c1264e0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x14c1264a0 <col:5> 'int ()' Function 0x14c1263e8 'normalize_varname' 'int ()'
|   | `-ImplicitCastExpr 0x14c126520 <col:23> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x14c1264c0 <col:23> 'char *' lvalue Var 0x14c1234d0 'buf' 'char *'
|   |-BinaryOperator 0x14c126818 <line:18:5, col:26> 'int' '='
|   | |-DeclRefExpr 0x14c126538 <col:5> 'int' lvalue ParmVar 0x14c80dd58 'name_len' 'int'
|   | `-ImplicitCastExpr 0x14c126800 <col:16, col:26> 'int' <IntegralCast>
|   |   `-CallExpr 0x14c1267a8 <col:16, col:26> 'unsigned long'
|   |     |-ImplicitCastExpr 0x14c126790 <col:16> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x14c126708 <col:16> 'unsigned long (const char *)' Function 0x14c126598 'strlen' 'unsigned long (const char *)'
|   |     `-ImplicitCastExpr 0x14c1267e8 <col:23> 'const char *' <NoOp>
|   |       `-ImplicitCastExpr 0x14c1267d0 <col:23> 'char *' <LValueToRValue>
|   |         `-DeclRefExpr 0x14c126728 <col:23> 'char *' lvalue Var 0x14c1234d0 'buf' 'char *'
|   |-IfStmt 0x14c127e68 <line:20:2, line:37:2> has_else
|   | |-CallExpr 0x14c126998 <line:20:6, col:32> '<dependent type>' contains-errors
|   | | |-DeclRefExpr 0x14c126918 <col:6> 'int ()' Function 0x14c126860 'SUHOSIN_G' 'int ()'
|   | | `-RecoveryExpr 0x14c126978 <col:16> '<dependent type>' contains-errors lvalue
|   | |-CompoundStmt 0x14c127ae8 <col:35, line:33:2>
|   | | `-IfStmt 0x14c127ac8 <line:21:3, line:32:3>
|   | |   |-CallExpr 0x14c126c70 <line:21:7, col:68> '<dependent type>' contains-errors
|   | |   | |-DeclRefExpr 0x14c126aa0 <col:7> 'int ()' Function 0x14c1269e8 'zend_hash_exists' 'int ()'
|   | |   | |-CallExpr 0x14c126c10 <col:24, col:50> '<dependent type>' contains-errors
|   | |   | | |-DeclRefExpr 0x14c126ac0 <col:24> 'int ()' Function 0x14c126860 'SUHOSIN_G' 'int ()'
|   | |   | | `-RecoveryExpr 0x14c126bf0 <col:34> '<dependent type>' contains-errors lvalue
|   | |   | |-DeclRefExpr 0x14c126b20 <col:53> 'char *' lvalue Var 0x14c1234d0 'buf' 'char *'
|   | |   | `-BinaryOperator 0x14c126c50 <col:58, col:67> 'int' '+'
|   | |   |   |-ImplicitCastExpr 0x14c126c38 <col:58> 'int' <LValueToRValue>
|   | |   |   | `-DeclRefExpr 0x14c126b40 <col:58> 'int' lvalue ParmVar 0x14c80dd58 'name_len' 'int'
|   | |   |   `-IntegerLiteral 0x14c126b60 <col:67> 'int' 1
|   | |   `-CompoundStmt 0x14c127a78 <col:71, line:32:3>
|   | |     |-LabelStmt 0x14c126f38 <line:22:1, line:25:4> 'decrypt_return_plain'
|   | |     | `-IfStmt 0x14c126ec8 <line:23:4, line:25:4>
|   | |     |   |-BinaryOperator 0x14c126d18 <line:23:8, col:15> 'int' '!='
|   | |     |   | |-ImplicitCastExpr 0x14c126ce8 <col:8> 'char *' <LValueToRValue>
|   | |     |   | | `-DeclRefExpr 0x14c126ca8 <col:8> 'char *' lvalue Var 0x14c1234d0 'buf' 'char *'
|   | |     |   | `-ImplicitCastExpr 0x14c126d00 <col:15> 'char *' <ArrayToPointerDecay>
|   | |     |   |   `-DeclRefExpr 0x14c126cc8 <col:15> 'char[4096]' lvalue Var 0x14c80e270 'buffer' 'char[4096]'
|   | |     |   `-CompoundStmt 0x14c126eb0 <col:23, line:25:4>
|   | |     |     `-CallExpr 0x14c126e70 <line:24:5, col:14> 'int'
|   | |     |       |-ImplicitCastExpr 0x14c126e58 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | |     |       | `-DeclRefExpr 0x14c126e18 <col:5> 'int ()' Function 0x14c126d60 'efree' 'int ()'
|   | |     |       `-ImplicitCastExpr 0x14c126e98 <col:11> 'char *' <LValueToRValue>
|   | |     |         `-DeclRefExpr 0x14c126e38 <col:11> 'char *' lvalue Var 0x14c1234d0 'buf' 'char *'
|   | |     |-CallExpr 0x14c127480 <line:26:13, col:44> 'void *'
|   | |     | |-ImplicitCastExpr 0x14c127468 <col:13> 'void *(*)(void *, const void *, unsigned long)' <FunctionToPointerDecay>
|   | |     | | `-DeclRefExpr 0x14c126f58 <col:13> 'void *(void *, const void *, unsigned long)' Function 0x14c124068 'memcpy' 'void *(void *, const void *, unsigned long)'
|   | |     | |-ImplicitCastExpr 0x14c1274d0 <col:20, col:21> 'void *' <BitCast>
|   | |     | | `-ImplicitCastExpr 0x14c1274b8 <col:20, col:21> 'char *' <LValueToRValue>
|   | |     | |   `-UnaryOperator 0x14c126fb0 <col:20, col:21> 'char *' lvalue prefix '*' cannot overflow
|   | |     | |     `-ImplicitCastExpr 0x14c126f98 <col:21> 'char **' <LValueToRValue>
|   | |     | |       `-DeclRefExpr 0x14c126f78 <col:21> 'char **' lvalue ParmVar 0x14c80df88 'where' 'char **'
|   | |     | |-ImplicitCastExpr 0x14c127500 <col:28> 'const void *' <BitCast>
|   | |     | | `-ImplicitCastExpr 0x14c1274e8 <col:28> 'char *' <LValueToRValue>
|   | |     | |   `-DeclRefExpr 0x14c126fc8 <col:28> 'char *' lvalue ParmVar 0x14c80dcd8 'name' 'char *'
|   | |     | `-ImplicitCastExpr 0x14c127530 <col:34> 'unsigned long' <IntegralCast>
|   | |     |   `-ImplicitCastExpr 0x14c127518 <col:34> 'int' <LValueToRValue>
|   | |     |     `-DeclRefExpr 0x14c127400 <col:34> 'int' lvalue Var 0x14c123400 'o_name_len' 'int'
|   | |     |-CompoundAssignOperator 0x14c1275d0 <line:27:13, col:23> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
|   | |     | |-UnaryOperator 0x14c127580 <col:13, col:14> 'char *' lvalue prefix '*' cannot overflow
|   | |     | | `-ImplicitCastExpr 0x14c127568 <col:14> 'char **' <LValueToRValue>
|   | |     | |   `-DeclRefExpr 0x14c127548 <col:14> 'char **' lvalue ParmVar 0x14c80df88 'where' 'char **'
|   | |     | `-ImplicitCastExpr 0x14c1275b8 <col:23> 'int' <LValueToRValue>
|   | |     |   `-DeclRefExpr 0x14c127598 <col:23> 'int' lvalue Var 0x14c123400 'o_name_len' 'int'
|   | |     |-BinaryOperator 0x14c1276b0 <line:28:13, col:23> 'char' '='
|   | |     | |-UnaryOperator 0x14c127668 <col:13, col:15> 'char' lvalue prefix '*' cannot overflow
|   | |     | | `-ImplicitCastExpr 0x14c127650 <col:14, col:15> 'char *' <LValueToRValue>
|   | |     | |   `-UnaryOperator 0x14c127638 <col:14, col:15> 'char *' lvalue prefix '*' cannot overflow
|   | |     | |     `-ImplicitCastExpr 0x14c127620 <col:15> 'char **' <LValueToRValue>
|   | |     | |       `-DeclRefExpr 0x14c127600 <col:15> 'char **' lvalue ParmVar 0x14c80df88 'where' 'char **'
|   | |     | `-ImplicitCastExpr 0x14c127698 <col:23> 'char' <IntegralCast>
|   | |     |   `-CharacterLiteral 0x14c127680 <col:23> 'int' 61
|   | |     |-CompoundAssignOperator 0x14c127740 <col:28, col:37> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
|   | |     | |-UnaryOperator 0x14c127708 <col:28, col:29> 'char *' lvalue prefix '*' cannot overflow
|   | |     | | `-ImplicitCastExpr 0x14c1276f0 <col:29> 'char **' <LValueToRValue>
|   | |     | |   `-DeclRefExpr 0x14c1276d0 <col:29> 'char **' lvalue ParmVar 0x14c80df88 'where' 'char **'
|   | |     | `-IntegerLiteral 0x14c127720 <col:37> 'int' 1
|   | |     |-CallExpr 0x14c127880 <line:29:10, col:41> 'void *'
|   | |     | |-ImplicitCastExpr 0x14c127868 <col:10> 'void *(*)(void *, const void *, unsigned long)' <FunctionToPointerDecay>
|   | |     | | `-DeclRefExpr 0x14c127770 <col:10> 'void *(void *, const void *, unsigned long)' Function 0x14c124068 'memcpy' 'void *(void *, const void *, unsigned long)'
|   | |     | |-ImplicitCastExpr 0x14c1278d0 <col:17, col:18> 'void *' <BitCast>
|   | |     | | `-ImplicitCastExpr 0x14c1278b8 <col:17, col:18> 'char *' <LValueToRValue>
|   | |     | |   `-UnaryOperator 0x14c1277c8 <col:17, col:18> 'char *' lvalue prefix '*' cannot overflow
|   | |     | |     `-ImplicitCastExpr 0x14c1277b0 <col:18> 'char **' <LValueToRValue>
|   | |     | |       `-DeclRefExpr 0x14c127790 <col:18> 'char **' lvalue ParmVar 0x14c80df88 'where' 'char **'
|   | |     | |-ImplicitCastExpr 0x14c127900 <col:25> 'const void *' <BitCast>
|   | |     | | `-ImplicitCastExpr 0x14c1278e8 <col:25> 'char *' <LValueToRValue>
|   | |     | |   `-DeclRefExpr 0x14c1277e0 <col:25> 'char *' lvalue ParmVar 0x14c80ddd8 'value' 'char *'
|   | |     | `-ImplicitCastExpr 0x14c127930 <col:32> 'unsigned long' <IntegralCast>
|   | |     |   `-ImplicitCastExpr 0x14c127918 <col:32> 'int' <LValueToRValue>
|   | |     |     `-DeclRefExpr 0x14c127800 <col:32> 'int' lvalue ParmVar 0x14c80de58 'value_len' 'int'
|   | |     |-CompoundAssignOperator 0x14c1279d0 <line:30:10, col:20> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
|   | |     | |-UnaryOperator 0x14c127980 <col:10, col:11> 'char *' lvalue prefix '*' cannot overflow
|   | |     | | `-ImplicitCastExpr 0x14c127968 <col:11> 'char **' <LValueToRValue>
|   | |     | |   `-DeclRefExpr 0x14c127948 <col:11> 'char **' lvalue ParmVar 0x14c80df88 'where' 'char **'
|   | |     | `-ImplicitCastExpr 0x14c1279b8 <col:20> 'int' <LValueToRValue>
|   | |     |   `-DeclRefExpr 0x14c127998 <col:20> 'int' lvalue ParmVar 0x14c80de58 'value_len' 'int'
|   | |     `-ReturnStmt 0x14c127a68 <line:31:4, col:12>
|   | |       `-ImplicitCastExpr 0x14c127a50 <col:11, col:12> 'char *' <LValueToRValue>
|   | |         `-UnaryOperator 0x14c127a38 <col:11, col:12> 'char *' lvalue prefix '*' cannot overflow
|   | |           `-ImplicitCastExpr 0x14c127a20 <col:12> 'char **' <LValueToRValue>
|   | |             `-DeclRefExpr 0x14c127a00 <col:12> 'char **' lvalue ParmVar 0x14c80df88 'where' 'char **'
|   | `-IfStmt 0x14c127e48 <line:33:9, line:37:2>
|   |   |-CallExpr 0x14c127b80 <line:33:13, col:39> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x14c127b00 <col:13> 'int ()' Function 0x14c126860 'SUHOSIN_G' 'int ()'
|   |   | `-RecoveryExpr 0x14c127b60 <col:23> '<dependent type>' contains-errors lvalue
|   |   `-CompoundStmt 0x14c127e30 <col:42, line:37:2>
|   |     `-IfStmt 0x14c127e10 <line:34:3, line:36:3>
|   |       |-UnaryOperator 0x14c127dc8 <line:34:7, col:69> '<dependent type>' contains-errors prefix '!' cannot overflow
|   |       | `-CallExpr 0x14c127d90 <col:8, col:69> '<dependent type>' contains-errors
|   |       |   |-DeclRefExpr 0x14c127ba8 <col:8> 'int ()' Function 0x14c1269e8 'zend_hash_exists' 'int ()'
|   |       |   |-CallExpr 0x14c127d30 <col:25, col:51> '<dependent type>' contains-errors
|   |       |   | |-DeclRefExpr 0x14c127bc8 <col:25> 'int ()' Function 0x14c126860 'SUHOSIN_G' 'int ()'
|   |       |   | `-RecoveryExpr 0x14c127d10 <col:35> '<dependent type>' contains-errors lvalue
|   |       |   |-DeclRefExpr 0x14c127c28 <col:54> 'char *' lvalue Var 0x14c1234d0 'buf' 'char *'
|   |       |   `-BinaryOperator 0x14c127d70 <col:59, col:68> 'int' '+'
|   |       |     |-ImplicitCastExpr 0x14c127d58 <col:59> 'int' <LValueToRValue>
|   |       |     | `-DeclRefExpr 0x14c127c48 <col:59> 'int' lvalue ParmVar 0x14c80dd58 'name_len' 'int'
|   |       |     `-IntegerLiteral 0x14c127c68 <col:68> 'int' 1
|   |       `-CompoundStmt 0x14c127df8 <col:72, line:36:3>
|   |         `-GotoStmt 0x14c127de0 <line:35:4, col:9> 'decrypt_return_plain' 0x14c126ee8
|   |-IfStmt 0x14c128438 <line:40:2, line:45:2> has_else
|   | |-BinaryOperator 0x14c128018 <line:40:6, col:39> 'int' '<='
|   | | |-CallExpr 0x14c127f08 <col:6, col:18> 'unsigned long'
|   | | | |-ImplicitCastExpr 0x14c127ef0 <col:6> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x14c127e98 <col:6> 'unsigned long (const char *)' Function 0x14c126598 'strlen' 'unsigned long (const char *)'
|   | | | `-ImplicitCastExpr 0x14c127f48 <col:13> 'const char *' <NoOp>
|   | | |   `-ImplicitCastExpr 0x14c127f30 <col:13> 'char *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x14c127eb8 <col:13> 'char *' lvalue ParmVar 0x14c80ddd8 'value' 'char *'
|   | | `-BinaryOperator 0x14c127ff8 <col:23, col:39> 'unsigned long' '-'
|   | |   |-UnaryExprOrTypeTraitExpr 0x14c127fa0 <col:23, col:37> 'unsigned long' sizeof
|   | |   | `-ParenExpr 0x14c127f80 <col:29, col:37> 'char[4096]' lvalue
|   | |   |   `-DeclRefExpr 0x14c127f60 <col:30> 'char[4096]' lvalue Var 0x14c80e350 'buffer2' 'char[4096]' non_odr_use_unevaluated
|   | |   `-ImplicitCastExpr 0x14c127fe0 <col:39> 'unsigned long' <IntegralCast>
|   | |     `-IntegerLiteral 0x14c127fc0 <col:39> 'int' 2
|   | |-CompoundStmt 0x14c1282c8 <col:42, line:43:2>
|   | | |-CallExpr 0x14c128118 <line:41:3, col:32> 'void *'
|   | | | |-ImplicitCastExpr 0x14c128100 <col:3> 'void *(*)(void *, const void *, unsigned long)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x14c128038 <col:3> 'void *(void *, const void *, unsigned long)' Function 0x14c124068 'memcpy' 'void *(void *, const void *, unsigned long)'
|   | | | |-ImplicitCastExpr 0x14c128168 <col:10> 'void *' <BitCast>
|   | | | | `-ImplicitCastExpr 0x14c128150 <col:10> 'char *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x14c128058 <col:10> 'char *' lvalue Var 0x14c123588 'buf2' 'char *'
|   | | | |-ImplicitCastExpr 0x14c128198 <col:16> 'const void *' <BitCast>
|   | | | | `-ImplicitCastExpr 0x14c128180 <col:16> 'char *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x14c128078 <col:16> 'char *' lvalue ParmVar 0x14c80ddd8 'value' 'char *'
|   | | | `-ImplicitCastExpr 0x14c1281c8 <col:23> 'unsigned long' <IntegralCast>
|   | | |   `-ImplicitCastExpr 0x14c1281b0 <col:23> 'int' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x14c128098 <col:23> 'int' lvalue ParmVar 0x14c80de58 'value_len' 'int'
|   | | `-BinaryOperator 0x14c1282a8 <line:42:3, col:21> 'char' '='
|   | |   |-ArraySubscriptExpr 0x14c128250 <col:3, col:17> 'char' lvalue
|   | |   | |-ImplicitCastExpr 0x14c128220 <col:3> 'char *' <LValueToRValue>
|   | |   | | `-DeclRefExpr 0x14c1281e0 <col:3> 'char *' lvalue Var 0x14c123588 'buf2' 'char *'
|   | |   | `-ImplicitCastExpr 0x14c128238 <col:8> 'int' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x14c128200 <col:8> 'int' lvalue ParmVar 0x14c80de58 'value_len' 'int'
|   | |   `-ImplicitCastExpr 0x14c128290 <col:21> 'char' <IntegralCast>
|   | |     `-IntegerLiteral 0x14c128270 <col:21> 'int' 0
|   | `-CompoundStmt 0x14c128420 <line:43:9, line:45:2>
|   |   `-BinaryOperator 0x14c128400 <line:44:3, col:35> 'char *' '='
|   |     |-DeclRefExpr 0x14c1282e8 <col:3> 'char *' lvalue Var 0x14c123588 'buf2' 'char *'
|   |     `-ImplicitCastExpr 0x14c1283e0 <col:10, col:35> 'char *' <IntegralToPointer>
|   |       `-CallExpr 0x14c128380 <col:10, col:35> 'int'
|   |         |-ImplicitCastExpr 0x14c128368 <col:10> 'int (*)()' <FunctionToPointerDecay>
|   |         | `-DeclRefExpr 0x14c128308 <col:10> 'int ()' Function 0x14c1239b8 'estrndup' 'int ()'
|   |         |-ImplicitCastExpr 0x14c1283b0 <col:19> 'char *' <LValueToRValue>
|   |         | `-DeclRefExpr 0x14c128328 <col:19> 'char *' lvalue ParmVar 0x14c80ddd8 'value' 'char *'
|   |         `-ImplicitCastExpr 0x14c1283c8 <col:26> 'int' <LValueToRValue>
|   |           `-DeclRefExpr 0x14c128348 <col:26> 'int' lvalue ParmVar 0x14c80de58 'value_len' 'int'
|   |-BinaryOperator 0x14c128560 <line:47:2, col:44> 'int' '='
|   | |-DeclRefExpr 0x14c128468 <col:2> 'int' lvalue ParmVar 0x14c80de58 'value_len' 'int'
|   | `-CallExpr 0x14c128500 <col:14, col:44> 'int'
|   |   |-ImplicitCastExpr 0x14c1284e8 <col:14> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x14c128488 <col:14> 'int ()' Function 0x14c126210 'php_url_decode' 'int ()'
|   |   |-ImplicitCastExpr 0x14c128530 <col:29> 'char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x14c1284a8 <col:29> 'char *' lvalue Var 0x14c123588 'buf2' 'char *'
|   |   `-ImplicitCastExpr 0x14c128548 <col:35> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x14c1284c8 <col:35> 'int' lvalue ParmVar 0x14c80de58 'value_len' 'int'
|   |-IfStmt 0x14c128920 <line:50:5, line:52:5>
|   | |-BinaryOperator 0x14c128880 <line:50:9, col:14> 'int' contains-errors '=='
|   | | |-DeclRefExpr 0x14c128808 <col:9> 'char *' lvalue Var 0x14c123640 'd' 'char *'
|   | | `-RecoveryExpr 0x14c128860 <col:14> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x14c128908 <col:20, line:52:5>
|   |   `-GotoStmt 0x14c1288f0 <line:51:9, col:14> 'skip_cookie' 0x14c1288a0
|   |-BinaryOperator 0x14c128b70 <line:53:2, col:33> 'char *' '='
|   | |-DeclRefExpr 0x14c128940 <col:2> 'char *' lvalue Var 0x14c1236c0 'd_url' 'char *'
|   | `-ImplicitCastExpr 0x14c128b58 <col:10, col:33> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x14c128af0 <col:10, col:33> 'int'
|   |     |-ImplicitCastExpr 0x14c128ad8 <col:10> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x14c128a40 <col:10> 'int ()' Function 0x14c128988 'php_url_encode' 'int ()'
|   |     |-ImplicitCastExpr 0x14c128b28 <col:25> 'char *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x14c128a60 <col:25> 'char *' lvalue Var 0x14c123640 'd' 'char *'
|   |     |-ImplicitCastExpr 0x14c128b40 <col:28> 'int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x14c128a80 <col:28> 'int' lvalue Var 0x14c123780 'l' 'int'
|   |     `-UnaryOperator 0x14c128ac0 <col:31, col:32> 'int *' prefix '&' cannot overflow
|   |       `-DeclRefExpr 0x14c128aa0 <col:32> 'int' lvalue Var 0x14c123780 'l' 'int'
|   |-CallExpr 0x14c128be8 <line:54:2, col:9> 'int'
|   | |-ImplicitCastExpr 0x14c128bd0 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x14c128b90 <col:2> 'int ()' Function 0x14c126d60 'efree' 'int ()'
|   | `-ImplicitCastExpr 0x14c128c10 <col:8> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x14c128bb0 <col:8> 'char *' lvalue Var 0x14c123640 'd' 'char *'
|   |-CallExpr 0x14c128d38 <line:55:5, col:36> 'void *'
|   | |-ImplicitCastExpr 0x14c128d20 <col:5> 'void *(*)(void *, const void *, unsigned long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x14c128c28 <col:5> 'void *(void *, const void *, unsigned long)' Function 0x14c124068 'memcpy' 'void *(void *, const void *, unsigned long)'
|   | |-ImplicitCastExpr 0x14c128d88 <col:12, col:13> 'void *' <BitCast>
|   | | `-ImplicitCastExpr 0x14c128d70 <col:12, col:13> 'char *' <LValueToRValue>
|   | |   `-UnaryOperator 0x14c128c80 <col:12, col:13> 'char *' lvalue prefix '*' cannot overflow
|   | |     `-ImplicitCastExpr 0x14c128c68 <col:13> 'char **' <LValueToRValue>
|   | |       `-DeclRefExpr 0x14c128c48 <col:13> 'char **' lvalue ParmVar 0x14c80df88 'where' 'char **'
|   | |-ImplicitCastExpr 0x14c128db8 <col:20> 'const void *' <BitCast>
|   | | `-ImplicitCastExpr 0x14c128da0 <col:20> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x14c128c98 <col:20> 'char *' lvalue ParmVar 0x14c80dcd8 'name' 'char *'
|   | `-ImplicitCastExpr 0x14c128de8 <col:26> 'unsigned long' <IntegralCast>
|   |   `-ImplicitCastExpr 0x14c128dd0 <col:26> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x14c128cb8 <col:26> 'int' lvalue Var 0x14c123400 'o_name_len' 'int'
|   |-CompoundAssignOperator 0x14c128e88 <line:56:5, col:15> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
|   | |-UnaryOperator 0x14c128e38 <col:5, col:6> 'char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x14c128e20 <col:6> 'char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x14c128e00 <col:6> 'char **' lvalue ParmVar 0x14c80df88 'where' 'char **'
|   | `-ImplicitCastExpr 0x14c128e70 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x14c128e50 <col:15> 'int' lvalue Var 0x14c123400 'o_name_len' 'int'
|   |-BinaryOperator 0x14c128f68 <line:57:5, col:15> 'char' '='
|   | |-UnaryOperator 0x14c128f20 <col:5, col:7> 'char' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x14c128f08 <col:6, col:7> 'char *' <LValueToRValue>
|   | |   `-UnaryOperator 0x14c128ef0 <col:6, col:7> 'char *' lvalue prefix '*' cannot overflow
|   | |     `-ImplicitCastExpr 0x14c128ed8 <col:7> 'char **' <LValueToRValue>
|   | |       `-DeclRefExpr 0x14c128eb8 <col:7> 'char **' lvalue ParmVar 0x14c80df88 'where' 'char **'
|   | `-ImplicitCastExpr 0x14c128f50 <col:15> 'char' <IntegralCast>
|   |   `-CharacterLiteral 0x14c128f38 <col:15> 'int' 61
|   |-CompoundAssignOperator 0x14c128ff8 <col:19, col:29> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
|   | |-UnaryOperator 0x14c128fc0 <col:19, col:20> 'char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x14c128fa8 <col:20> 'char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x14c128f88 <col:20> 'char **' lvalue ParmVar 0x14c80df88 'where' 'char **'
|   | `-IntegerLiteral 0x14c128fd8 <col:29> 'int' 1
|   |-CallExpr 0x14c129138 <line:58:2, col:25> 'void *'
|   | |-ImplicitCastExpr 0x14c129120 <col:2> 'void *(*)(void *, const void *, unsigned long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x14c129028 <col:2> 'void *(void *, const void *, unsigned long)' Function 0x14c124068 'memcpy' 'void *(void *, const void *, unsigned long)'
|   | |-ImplicitCastExpr 0x14c129188 <col:9, col:10> 'void *' <BitCast>
|   | | `-ImplicitCastExpr 0x14c129170 <col:9, col:10> 'char *' <LValueToRValue>
|   | |   `-UnaryOperator 0x14c129080 <col:9, col:10> 'char *' lvalue prefix '*' cannot overflow
|   | |     `-ImplicitCastExpr 0x14c129068 <col:10> 'char **' <LValueToRValue>
|   | |       `-DeclRefExpr 0x14c129048 <col:10> 'char **' lvalue ParmVar 0x14c80df88 'where' 'char **'
|   | |-ImplicitCastExpr 0x14c1291b8 <col:17> 'const void *' <BitCast>
|   | | `-ImplicitCastExpr 0x14c1291a0 <col:17> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x14c129098 <col:17> 'char *' lvalue Var 0x14c1236c0 'd_url' 'char *'
|   | `-ImplicitCastExpr 0x14c1291e8 <col:24> 'unsigned long' <IntegralCast>
|   |   `-ImplicitCastExpr 0x14c1291d0 <col:24> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x14c1290b8 <col:24> 'int' lvalue Var 0x14c123780 'l' 'int'
|   |-CompoundAssignOperator 0x14c129288 <line:59:2, col:12> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
|   | |-UnaryOperator 0x14c129238 <col:2, col:3> 'char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x14c129220 <col:3> 'char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x14c129200 <col:3> 'char **' lvalue ParmVar 0x14c80df88 'where' 'char **'
|   | `-ImplicitCastExpr 0x14c129270 <col:12> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x14c129250 <col:12> 'int' lvalue Var 0x14c123780 'l' 'int'
|   |-CallExpr 0x14c129310 <line:60:2, col:13> 'int'
|   | |-ImplicitCastExpr 0x14c1292f8 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x14c1292b8 <col:2> 'int ()' Function 0x14c126d60 'efree' 'int ()'
|   | `-ImplicitCastExpr 0x14c129338 <col:8> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x14c1292d8 <col:8> 'char *' lvalue Var 0x14c1236c0 'd_url' 'char *'
|   |-LabelStmt 0x14c1294b0 <line:61:1, line:64:2> 'skip_cookie'
|   | `-IfStmt 0x14c129490 <line:62:2, line:64:2>
|   |   |-BinaryOperator 0x14c1293c0 <line:62:6, col:13> 'int' '!='
|   |   | |-ImplicitCastExpr 0x14c129390 <col:6> 'char *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x14c129350 <col:6> 'char *' lvalue Var 0x14c1234d0 'buf' 'char *'
|   |   | `-ImplicitCastExpr 0x14c1293a8 <col:13> 'char *' <ArrayToPointerDecay>
|   |   |   `-DeclRefExpr 0x14c129370 <col:13> 'char[4096]' lvalue Var 0x14c80e270 'buffer' 'char[4096]'
|   |   `-CompoundStmt 0x14c129478 <col:21, line:64:2>
|   |     `-CallExpr 0x14c129438 <line:63:3, col:12> 'int'
|   |       |-ImplicitCastExpr 0x14c129420 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x14c1293e0 <col:3> 'int ()' Function 0x14c126d60 'efree' 'int ()'
|   |       `-ImplicitCastExpr 0x14c129460 <col:9> 'char *' <LValueToRValue>
|   |         `-DeclRefExpr 0x14c129400 <col:9> 'char *' lvalue Var 0x14c1234d0 'buf' 'char *'
|   |-IfStmt 0x14c129610 <line:65:2, line:67:2>
|   | |-BinaryOperator 0x14c129540 <line:65:6, col:14> 'int' '!='
|   | | |-ImplicitCastExpr 0x14c129510 <col:6> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x14c1294d0 <col:6> 'char *' lvalue Var 0x14c123588 'buf2' 'char *'
|   | | `-ImplicitCastExpr 0x14c129528 <col:14> 'char *' <ArrayToPointerDecay>
|   | |   `-DeclRefExpr 0x14c1294f0 <col:14> 'char[4096]' lvalue Var 0x14c80e350 'buffer2' 'char[4096]'
|   | `-CompoundStmt 0x14c1295f8 <col:23, line:67:2>
|   |   `-CallExpr 0x14c1295b8 <line:66:3, col:13> 'int'
|   |     |-ImplicitCastExpr 0x14c1295a0 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x14c129560 <col:3> 'int ()' Function 0x14c126d60 'efree' 'int ()'
|   |     `-ImplicitCastExpr 0x14c1295e0 <col:9> 'char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x14c129580 <col:9> 'char *' lvalue Var 0x14c123588 'buf2' 'char *'
|   `-ReturnStmt 0x14c129698 <line:68:2, col:10>
|     `-ImplicitCastExpr 0x14c129680 <col:9, col:10> 'char *' <LValueToRValue>
|       `-UnaryOperator 0x14c129668 <col:9, col:10> 'char *' lvalue prefix '*' cannot overflow
|         `-ImplicitCastExpr 0x14c129650 <col:10> 'char **' <LValueToRValue>
|           `-DeclRefExpr 0x14c129630 <col:10> 'char **' lvalue ParmVar 0x14c80df88 'where' 'char **'
|-FunctionDecl 0x14c124068 <line:12:3> col:3 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
| |-ParmVarDecl 0x14c124168 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x14c1241d0 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x14c124238 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x14c124110 <<invalid sloc>> Implicit 882
`-FunctionDecl 0x14c126598 <line:18:16> col:16 implicit used strlen 'unsigned long (const char *)' extern
  |-ParmVarDecl 0x14c126698 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x14c126640 <<invalid sloc>> Implicit 902
