TranslationUnitDecl 0x147055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1470564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x147055bd0 '__int128'
|-TypedefDecl 0x147056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x147055bf0 'unsigned __int128'
|-TypedefDecl 0x14780be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14780bc00 'struct __NSConstantString_tag'
|   `-Record 0x147056580 '__NSConstantString_tag'
|-TypedefDecl 0x14780be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x147055d90 '__SVInt8_t'
|-TypedefDecl 0x14780bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x147055db0 '__SVInt16_t'
|-TypedefDecl 0x14780bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x147055dd0 '__SVInt32_t'
|-TypedefDecl 0x14780bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x147055df0 '__SVInt64_t'
|-TypedefDecl 0x14780c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x147055e10 '__SVUint8_t'
|-TypedefDecl 0x14780c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x147055e30 '__SVUint16_t'
|-TypedefDecl 0x14780c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x147055e50 '__SVUint32_t'
|-TypedefDecl 0x14780c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x147055e70 '__SVUint64_t'
|-TypedefDecl 0x14780c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x147055e90 '__SVFloat16_t'
|-TypedefDecl 0x14780c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x147055eb0 '__SVFloat32_t'
|-TypedefDecl 0x14780c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x147055ed0 '__SVFloat64_t'
|-TypedefDecl 0x14780c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x147055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14780c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x147055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14780c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x147055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14780c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x147055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14780c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x147055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14780c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x147055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14780c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x147055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14780c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x147055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14780c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x147055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14780c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x147056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14780c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x147056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14780c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x147056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14780c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x147056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14780c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x147056090 '__clang_svint8x3_t'
|-TypedefDecl 0x14780c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1470560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14780c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1470560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14780c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1470560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14780c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x147056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14780ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x147056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14780cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x147056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14780cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x147056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14780cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x147056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14780d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1470561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14780d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1470561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14780d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1470561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14780d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x147056210 '__clang_svint8x4_t'
|-TypedefDecl 0x14780d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x147056230 '__clang_svint16x4_t'
|-TypedefDecl 0x14780d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x147056250 '__clang_svint32x4_t'
|-TypedefDecl 0x14780d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x147056270 '__clang_svint64x4_t'
|-TypedefDecl 0x14780d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x147056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14780d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1470562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14780d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1470562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14780d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1470562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14780d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x147056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14780d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x147056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14780d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x147056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14780d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x147056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14780da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x147056390 '__SVBool_t'
|-TypedefDecl 0x14780da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1470563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14780dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1470563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14780db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1470563f0 '__SVCount_t'
|-TypedefDecl 0x14780dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14780dbb0 'char *'
|   `-BuiltinType 0x1470556b0 'char'
|-TypedefDecl 0x14780dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14780dbb0 'char *'
|   `-BuiltinType 0x1470556b0 'char'
`-FunctionDecl 0x1508083f8 <dataset_diviso_filec/func4843_vuln.c:1:1, line:64:1> line:1:1 arch_get_unmapped_area_topdown 'int (struct file *, const unsigned long, const unsigned long, const unsigned long, const unsigned long)'
  |-ParmVarDecl 0x14780e248 <col:32, col:45> col:45 used filp 'struct file *'
  |-ParmVarDecl 0x14780e2c8 <col:51, col:71> col:71 used addr0 'const unsigned long'
  |-ParmVarDecl 0x14780e348 <line:2:6, col:26> col:26 used len 'const unsigned long'
  |-ParmVarDecl 0x150808200 <col:31, col:51> col:51 used pgoff 'const unsigned long'
  |-ParmVarDecl 0x150808280 <line:3:6, col:26> col:26 used flags 'const unsigned long'
  `-CompoundStmt 0x15080e2e8 <line:4:1, line:64:1>
    |-DeclStmt 0x1508086f8 <line:5:2, col:28>
    | |-RecordDecl 0x150808510 <col:2, col:9> col:9 struct vm_area_struct
    | `-VarDecl 0x150808678 <col:2, col:25> col:25 used vma 'struct vm_area_struct *'
    |-DeclStmt 0x1508089d8 <line:6:2, col:36>
    | |-RecordDecl 0x150808710 <col:2, col:9> col:9 struct mm_struct
    | `-VarDecl 0x150808878 <col:2, col:34> col:20 used mm 'struct mm_struct *' cinit
    |   `-CXXDependentScopeMemberExpr 0x150808978 <col:25, col:34> '<dependent type>' contains-errors lvalue ->mm
    |     `-RecoveryExpr 0x150808958 <col:25> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x150808aa8 <line:7:2, col:28>
    | `-VarDecl 0x150808a08 <col:2, col:23> col:16 used addr 'unsigned long' cinit
    |   `-ImplicitCastExpr 0x150808a90 <col:23> 'unsigned long' <LValueToRValue>
    |     `-DeclRefExpr 0x150808a70 <col:23> 'const unsigned long' lvalue ParmVar 0x14780e2c8 'addr0' 'const unsigned long'
    |-DeclStmt 0x150808bd8 <line:8:2, col:31>
    | |-VarDecl 0x150808ad8 <col:2, col:6> col:6 used do_color_align 'int'
    | `-VarDecl 0x150808b58 <col:2, col:22> col:22 used last_mmap 'int'
    |-DeclStmt 0x150808d68 <line:9:2, col:35>
    | |-RecordDecl 0x150808bf0 <col:2, col:9> col:9 struct vm_unmapped_area_info
    | `-VarDecl 0x150808ce8 <col:2, col:31> col:31 referenced invalid info 'struct vm_unmapped_area_info'
    |-IfStmt 0x150808ec0 <line:17:2, line:18:11>
    | |-BinaryOperator 0x150808df8 <line:17:6, col:12> 'int' contains-errors '>'
    | | |-DeclRefExpr 0x150808d80 <col:6> 'const unsigned long' lvalue ParmVar 0x14780e348 'len' 'const unsigned long'
    | | `-RecoveryExpr 0x150808dd8 <col:12> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x150808eb0 <line:18:3, col:11>
    |   `-UnaryOperator 0x150808e98 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x150808e80 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x150808e60 <col:11> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x150808f20 <line:20:2, col:19> 'int' '='
    | |-DeclRefExpr 0x150808ee0 <col:2> 'int' lvalue Var 0x150808ad8 'do_color_align' 'int'
    | `-IntegerLiteral 0x150808f00 <col:19> 'int' 0
    |-IfStmt 0x150809038 <line:21:2, line:22:20>
    | |-RecoveryExpr 0x150808fb8 <line:21:6, col:33> '_Bool' contains-errors
    | `-BinaryOperator 0x150809018 <line:22:3, col:20> 'int' '='
    |   |-DeclRefExpr 0x150808fd8 <col:3> 'int' lvalue Var 0x150808ad8 'do_color_align' 'int'
    |   `-IntegerLiteral 0x150808ff8 <col:20> 'int' 1
    |-BinaryOperator 0x15080ac58 <line:23:2, col:32> 'int' '='
    | |-DeclRefExpr 0x150809058 <col:2> 'int' lvalue Var 0x150808b58 'last_mmap' 'int'
    | `-CallExpr 0x15080ac18 <col:14, col:32> 'int'
    |   |-ImplicitCastExpr 0x15080ac00 <col:14> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x150809190 <col:14> 'int ()' Function 0x1508090d8 'GET_LAST_MMAP' 'int ()'
    |   `-ImplicitCastExpr 0x15080ac40 <col:28> 'struct file *' <LValueToRValue>
    |     `-DeclRefExpr 0x1508091b0 <col:28> 'struct file *' lvalue ParmVar 0x14780e248 'filp' 'struct file *'
    |-IfStmt 0x15080b198 <line:25:2, line:31:2>
    | |-BinaryOperator 0x15080acf0 <line:25:6, col:14> '<dependent type>' contains-errors '&'
    | | |-DeclRefExpr 0x15080ac78 <col:6> 'const unsigned long' lvalue ParmVar 0x150808280 'flags' 'const unsigned long'
    | | `-RecoveryExpr 0x15080acd0 <col:14> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x15080b178 <col:25, line:31:2>
    |   |-IfStmt 0x15080b0f0 <line:26:3, line:29:12>
    |   | |-RecoveryExpr 0x15080b028 <line:26:7, line:28:21> '_Bool' contains-errors
    |   | `-ReturnStmt 0x15080b0e0 <line:29:4, col:12>
    |   |   `-UnaryOperator 0x15080b0c8 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |     `-ImplicitCastExpr 0x15080b0b0 <col:12> '<dependent type>' contains-errors <LValueToRValue>
    |   |       `-RecoveryExpr 0x15080b090 <col:12> '<dependent type>' contains-errors lvalue
    |   `-GotoStmt 0x15080b160 <line:30:3, col:8> 'found_addr' 0x15080b110
    |-IfStmt 0x15080d3c0 <line:34:2, line:43:2>
    | |-ImplicitCastExpr 0x15080b1d8 <line:34:6> 'unsigned long' <LValueToRValue>
    | | `-DeclRefExpr 0x15080b1b8 <col:6> 'unsigned long' lvalue Var 0x150808a08 'addr' 'unsigned long'
    | `-CompoundStmt 0x15080d398 <col:12, line:43:2>
    |   |-IfStmt 0x15080b6a0 <line:35:3, line:38:26> has_else
    |   | |-BinaryOperator 0x15080b260 <line:35:7, col:25> 'int' '&&'
    |   | | |-ImplicitCastExpr 0x15080b230 <col:7> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x15080b1f0 <col:7> 'int' lvalue Var 0x150808ad8 'do_color_align' 'int'
    |   | | `-ImplicitCastExpr 0x15080b248 <col:25> 'int' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x15080b210 <col:25> 'int' lvalue Var 0x150808b58 'last_mmap' 'int'
    |   | |-BinaryOperator 0x15080b4b0 <line:36:4, col:45> 'unsigned long' '='
    |   | | |-DeclRefExpr 0x15080b280 <col:4> 'unsigned long' lvalue Var 0x150808a08 'addr' 'unsigned long'
    |   | | `-ImplicitCastExpr 0x15080b498 <col:11, col:45> 'unsigned long' <IntegralCast>
    |   | |   `-CallExpr 0x15080b418 <col:11, col:45> 'int'
    |   | |     |-ImplicitCastExpr 0x15080b400 <col:11> 'int (*)()' <FunctionToPointerDecay>
    |   | |     | `-DeclRefExpr 0x15080b380 <col:11> 'int ()' Function 0x15080b2c8 'COLOR_ALIGN' 'int ()'
    |   | |     |-ImplicitCastExpr 0x15080b450 <col:23> 'unsigned long' <LValueToRValue>
    |   | |     | `-DeclRefExpr 0x15080b3a0 <col:23> 'unsigned long' lvalue Var 0x150808a08 'addr' 'unsigned long'
    |   | |     |-ImplicitCastExpr 0x15080b468 <col:29> 'int' <LValueToRValue>
    |   | |     | `-DeclRefExpr 0x15080b3c0 <col:29> 'int' lvalue Var 0x150808b58 'last_mmap' 'int'
    |   | |     `-ImplicitCastExpr 0x15080b480 <col:40> 'unsigned long' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x15080b3e0 <col:40> 'const unsigned long' lvalue ParmVar 0x150808200 'pgoff' 'const unsigned long'
    |   | `-BinaryOperator 0x15080b680 <line:38:4, col:26> 'unsigned long' '='
    |   |   |-DeclRefExpr 0x15080b4d0 <col:4> 'unsigned long' lvalue Var 0x150808a08 'addr' 'unsigned long'
    |   |   `-ImplicitCastExpr 0x15080b668 <col:11, col:26> 'unsigned long' <IntegralCast>
    |   |     `-CallExpr 0x15080b628 <col:11, col:26> 'int'
    |   |       |-ImplicitCastExpr 0x15080b610 <col:11> 'int (*)()' <FunctionToPointerDecay>
    |   |       | `-DeclRefExpr 0x15080b5d0 <col:11> 'int ()' Function 0x15080b518 'PAGE_ALIGN' 'int ()'
    |   |       `-ImplicitCastExpr 0x15080b650 <col:22> 'unsigned long' <LValueToRValue>
    |   |         `-DeclRefExpr 0x15080b5f0 <col:22> 'unsigned long' lvalue Var 0x150808a08 'addr' 'unsigned long'
    |   |-BinaryOperator 0x15080b8c0 <line:39:3, col:26> 'struct vm_area_struct *' contains-errors '='
    |   | |-DeclRefExpr 0x15080b6d0 <col:3> 'struct vm_area_struct *' lvalue Var 0x150808678 'vma' 'struct vm_area_struct *'
    |   | `-ImplicitCastExpr 0x15080b8a8 <col:9, col:26> 'struct vm_area_struct *' contains-errors <IntegralToPointer>
    |   |   `-CallExpr 0x15080b848 <col:9, col:26> 'int' contains-errors
    |   |     |-ImplicitCastExpr 0x15080b830 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   |     | `-DeclRefExpr 0x15080b7d0 <col:9> 'int ()' Function 0x15080b718 'find_vma' 'int ()'
    |   |     |-ImplicitCastExpr 0x15080b878 <col:18> 'struct mm_struct *' contains-errors <LValueToRValue>
    |   |     | `-DeclRefExpr 0x15080b7f0 <col:18> 'struct mm_struct *' contains-errors lvalue Var 0x150808878 'mm' 'struct mm_struct *'
    |   |     `-ImplicitCastExpr 0x15080b890 <col:22> 'unsigned long' <LValueToRValue>
    |   |       `-DeclRefExpr 0x15080b810 <col:22> 'unsigned long' lvalue Var 0x150808a08 'addr' 'unsigned long'
    |   `-IfStmt 0x15080d378 <line:40:3, line:42:9>
    |     |-BinaryOperator 0x15080d340 <line:40:7, line:41:43> 'int' contains-errors '&&'
    |     | |-BinaryOperator 0x15080d240 <line:40:7, col:26> 'int' contains-errors '>='
    |     | | |-BinaryOperator 0x15080d220 <col:7, col:19> '<dependent type>' contains-errors '-'
    |     | | | |-RecoveryExpr 0x15080d200 <col:7> '<dependent type>' contains-errors lvalue
    |     | | | `-DeclRefExpr 0x15080b8f8 <col:19> 'const unsigned long' lvalue ParmVar 0x14780e348 'len' 'const unsigned long'
    |     | | `-DeclRefExpr 0x15080b938 <col:26> 'unsigned long' lvalue Var 0x150808a08 'addr' 'unsigned long'
    |     | `-ParenExpr 0x15080d320 <line:41:7, col:43> 'int' contains-errors
    |     |   `-BinaryOperator 0x15080d300 <col:8, col:35> 'int' contains-errors '||'
    |     |     |-UnaryOperator 0x15080d278 <col:8, col:9> 'int' prefix '!' cannot overflow
    |     |     | `-ImplicitCastExpr 0x15080d260 <col:9> 'struct vm_area_struct *' <LValueToRValue>
    |     |     |   `-DeclRefExpr 0x15080b978 <col:9> 'struct vm_area_struct *' lvalue Var 0x150808678 'vma' 'struct vm_area_struct *'
    |     |     `-BinaryOperator 0x15080d2e0 <col:16, col:35> 'int' contains-errors '<='
    |     |       |-BinaryOperator 0x15080d2c0 <col:16, col:23> 'unsigned long' '+'
    |     |       | |-ImplicitCastExpr 0x15080d290 <col:16> 'unsigned long' <LValueToRValue>
    |     |       | | `-DeclRefExpr 0x15080b9c8 <col:16> 'unsigned long' lvalue Var 0x150808a08 'addr' 'unsigned long'
    |     |       | `-ImplicitCastExpr 0x15080d2a8 <col:23> 'unsigned long' <LValueToRValue>
    |     |       |   `-DeclRefExpr 0x15080b9e8 <col:23> 'const unsigned long' lvalue ParmVar 0x14780e348 'len' 'const unsigned long'
    |     |       `-RecoveryExpr 0x15080ba90 <col:30, col:35> '<dependent type>' contains-errors lvalue
    |     |         `-DeclRefExpr 0x15080ba58 <col:30> 'struct vm_area_struct *' lvalue Var 0x150808678 'vma' 'struct vm_area_struct *'
    |     `-GotoStmt 0x15080d360 <line:42:4, col:9> 'found_addr' 0x15080b110
    |-BinaryOperator 0x15080d4c8 <line:45:2, col:15> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x15080d428 <col:2, col:7> '<dependent type>' contains-errors lvalue .flags
    | | `-RecoveryExpr 0x15080d400 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x15080d3e0 <col:2> 'struct vm_unmapped_area_info' lvalue Var 0x150808ce8 'info' 'struct vm_unmapped_area_info'
    | `-RecoveryExpr 0x15080d4a8 <col:15> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x15080d598 <line:46:2, col:16> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x15080d530 <col:2, col:7> '<dependent type>' contains-errors lvalue .length
    | | `-RecoveryExpr 0x15080d508 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x15080d4e8 <col:2> 'struct vm_unmapped_area_info' lvalue Var 0x150808ce8 'info' 'struct vm_unmapped_area_info'
    | `-DeclRefExpr 0x15080d578 <col:16> 'const unsigned long' lvalue ParmVar 0x14780e348 'len' 'const unsigned long'
    |-BinaryOperator 0x15080d6a0 <line:47:2, col:19> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x15080d600 <col:2, col:7> '<dependent type>' contains-errors lvalue .low_limit
    | | `-RecoveryExpr 0x15080d5d8 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x15080d5b8 <col:2> 'struct vm_unmapped_area_info' lvalue Var 0x150808ce8 'info' 'struct vm_unmapped_area_info'
    | `-RecoveryExpr 0x15080d680 <col:19> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x15080d7b0 <line:48:2, col:24> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x15080d708 <col:2, col:7> '<dependent type>' contains-errors lvalue .high_limit
    | | `-RecoveryExpr 0x15080d6e0 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x15080d6c0 <col:2> 'struct vm_unmapped_area_info' lvalue Var 0x150808ce8 'info' 'struct vm_unmapped_area_info'
    | `-RecoveryExpr 0x15080d788 <col:20, col:24> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x15080d750 <col:20> 'struct mm_struct *' contains-errors lvalue Var 0x150808878 'mm' 'struct mm_struct *'
    |-BinaryOperator 0x15080da28 <line:50:2, col:58> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x15080d908 <col:2, col:7> '<dependent type>' contains-errors lvalue .align_offset
    | | `-RecoveryExpr 0x15080d8e0 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x15080d8c0 <col:2> 'struct vm_unmapped_area_info' lvalue Var 0x150808ce8 'info' 'struct vm_unmapped_area_info'
    | `-CallExpr 0x15080d9c8 <col:22, col:58> 'int'
    |   |-ImplicitCastExpr 0x15080d9b0 <col:22> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x15080d950 <col:22> 'int ()' Function 0x15080add0 'shared_align_offset' 'int ()'
    |   |-ImplicitCastExpr 0x15080d9f8 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x15080d970 <col:42> 'int' lvalue Var 0x150808b58 'last_mmap' 'int'
    |   `-ImplicitCastExpr 0x15080da10 <col:53> 'unsigned long' <LValueToRValue>
    |     `-DeclRefExpr 0x15080d990 <col:53> 'const unsigned long' lvalue ParmVar 0x150808200 'pgoff' 'const unsigned long'
    |-BinaryOperator 0x15080dbc8 <line:51:2, col:31> 'unsigned long' contains-errors '='
    | |-DeclRefExpr 0x15080da48 <col:2> 'unsigned long' lvalue Var 0x150808a08 'addr' 'unsigned long'
    | `-CallExpr 0x15080dba0 <col:9, col:31> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x15080db48 <col:9> 'int ()' Function 0x15080da90 'vm_unmapped_area' 'int ()'
    |   `-UnaryOperator 0x15080db88 <col:26, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x15080db68 <col:27> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x15080dc40 <line:52:2, line:53:8>
    | |-RecoveryExpr 0x15080dc08 <line:52:6, col:25> '_Bool' contains-errors
    | `-GotoStmt 0x15080dc28 <line:53:3, col:8> 'found_addr' 0x15080b110
    |-ReturnStmt 0x15080dff8 <line:57:2, col:62>
    | `-CallExpr 0x15080df38 <col:9, col:62> 'int'
    |   |-ImplicitCastExpr 0x15080df20 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x15080de60 <col:9> 'int ()' Function 0x15080dda8 'arch_get_unmapped_area' 'int ()'
    |   |-ImplicitCastExpr 0x15080df80 <col:32> 'struct file *' <LValueToRValue>
    |   | `-DeclRefExpr 0x15080de80 <col:32> 'struct file *' lvalue ParmVar 0x14780e248 'filp' 'struct file *'
    |   |-ImplicitCastExpr 0x15080df98 <col:38> 'unsigned long' <LValueToRValue>
    |   | `-DeclRefExpr 0x15080dea0 <col:38> 'const unsigned long' lvalue ParmVar 0x14780e2c8 'addr0' 'const unsigned long'
    |   |-ImplicitCastExpr 0x15080dfb0 <col:45> 'unsigned long' <LValueToRValue>
    |   | `-DeclRefExpr 0x15080dec0 <col:45> 'const unsigned long' lvalue ParmVar 0x14780e348 'len' 'const unsigned long'
    |   |-ImplicitCastExpr 0x15080dfc8 <col:50> 'unsigned long' <LValueToRValue>
    |   | `-DeclRefExpr 0x15080dee0 <col:50> 'const unsigned long' lvalue ParmVar 0x150808200 'pgoff' 'const unsigned long'
    |   `-ImplicitCastExpr 0x15080dfe0 <col:57> 'unsigned long' <LValueToRValue>
    |     `-DeclRefExpr 0x15080df00 <col:57> 'const unsigned long' lvalue ParmVar 0x150808280 'flags' 'const unsigned long'
    |-LabelStmt 0x15080e268 <line:59:1, col:11> 'found_addr'
    | `-NullStmt 0x15080e260 <col:11>
    `-ReturnStmt 0x15080e2d8 <line:63:2, col:9>
      `-ImplicitCastExpr 0x15080e2c0 <col:9> 'int' <IntegralCast>
        `-ImplicitCastExpr 0x15080e2a8 <col:9> 'unsigned long' <LValueToRValue>
          `-DeclRefExpr 0x15080e288 <col:9> 'unsigned long' lvalue Var 0x150808a08 'addr' 'unsigned long'
