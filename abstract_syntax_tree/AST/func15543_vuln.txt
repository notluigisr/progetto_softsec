TranslationUnitDecl 0x157855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1578564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x157855bd0 '__int128'
|-TypedefDecl 0x157856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x157855bf0 'unsigned __int128'
|-TypedefDecl 0x16000be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x16000bc00 'struct __NSConstantString_tag'
|   `-Record 0x157856580 '__NSConstantString_tag'
|-TypedefDecl 0x16000be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x157855d90 '__SVInt8_t'
|-TypedefDecl 0x16000bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x157855db0 '__SVInt16_t'
|-TypedefDecl 0x16000bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x157855dd0 '__SVInt32_t'
|-TypedefDecl 0x16000bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x157855df0 '__SVInt64_t'
|-TypedefDecl 0x16000c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x157855e10 '__SVUint8_t'
|-TypedefDecl 0x16000c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x157855e30 '__SVUint16_t'
|-TypedefDecl 0x16000c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x157855e50 '__SVUint32_t'
|-TypedefDecl 0x16000c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x157855e70 '__SVUint64_t'
|-TypedefDecl 0x16000c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x157855e90 '__SVFloat16_t'
|-TypedefDecl 0x16000c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x157855eb0 '__SVFloat32_t'
|-TypedefDecl 0x16000c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x157855ed0 '__SVFloat64_t'
|-TypedefDecl 0x16000c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x157855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x16000c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x157855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x16000c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x157855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x16000c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x157855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x16000c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x157855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x16000c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x157855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x16000c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x157855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x16000c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x157855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x16000c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x157855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x16000c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x157856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x16000c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x157856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x16000c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x157856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x16000c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x157856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x16000c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x157856090 '__clang_svint8x3_t'
|-TypedefDecl 0x16000c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1578560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x16000c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1578560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x16000c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1578560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x16000c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x157856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x16000ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x157856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x16000cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x157856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x16000cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x157856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x16000cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x157856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x16000d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1578561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x16000d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1578561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x16000d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1578561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x16000d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x157856210 '__clang_svint8x4_t'
|-TypedefDecl 0x16000d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x157856230 '__clang_svint16x4_t'
|-TypedefDecl 0x16000d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x157856250 '__clang_svint32x4_t'
|-TypedefDecl 0x16000d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x157856270 '__clang_svint64x4_t'
|-TypedefDecl 0x16000d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x157856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x16000d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1578562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x16000d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1578562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x16000d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1578562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x16000d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x157856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x16000d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x157856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x16000d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x157856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x16000d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x157856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x16000da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x157856390 '__SVBool_t'
|-TypedefDecl 0x16000da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1578563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x16000dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1578563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x16000db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1578563f0 '__SVCount_t'
|-TypedefDecl 0x16000dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x16000dbb0 'char *'
|   `-BuiltinType 0x1578556b0 'char'
|-TypedefDecl 0x16000dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x16000dbb0 'char *'
|   `-BuiltinType 0x1578556b0 'char'
`-FunctionDecl 0x16000e2f8 <dataset_diviso_filec/func15543_vuln.c:1:1, line:52:1> line:1:12 invalid get_crl_sk 'int (int *, int **, int **, int **, int *, unsigned int *, int (*)())' static
  |-ParmVarDecl 0x16000dd28 <col:23, col:39> col:39 invalid ctx 'int *'
  |-ParmVarDecl 0x16000dde0 <col:44, col:55> col:55 referenced invalid pcrl 'int **'
  |-ParmVarDecl 0x16000de68 <col:61, col:72> col:72 invalid pdcrl 'int **'
  |-ParmVarDecl 0x16000def0 <line:2:23, col:30> col:30 referenced invalid pissuer 'int **'
  |-ParmVarDecl 0x16000df70 <col:39, col:44> col:44 used pscore 'int *'
  |-ParmVarDecl 0x16000e028 <col:52, col:66> col:66 used preasons 'unsigned int *'
  |-ParmVarDecl 0x16000e150 <line:3:23, <invalid sloc>> col:23 invalid STACK_OF 'int (*)()'
  `-CompoundStmt 0x16002a538 <line:4:1, line:52:1>
    |-DeclStmt 0x1600275f0 <line:5:5, col:43>
    | |-VarDecl 0x160027400 <col:5, col:9> col:9 used i 'int'
    | |-VarDecl 0x160027480 <col:5, col:12> col:12 used crl_score 'int'
    | `-VarDecl 0x160027500 <col:5, col:37> col:23 used best_score 'int' cinit
    |   `-ImplicitCastExpr 0x1600275b8 <col:36, col:37> 'int' <LValueToRValue>
    |     `-UnaryOperator 0x1600275a0 <col:36, col:37> 'int' lvalue prefix '*' cannot overflow
    |       `-ImplicitCastExpr 0x160027588 <col:37> 'int *' <LValueToRValue>
    |         `-DeclRefExpr 0x160027568 <col:37> 'int *' lvalue ParmVar 0x16000df70 'pscore' 'int *'
    |-DeclStmt 0x160027758 <line:6:5, col:43>
    | |-VarDecl 0x160027620 <col:5, col:18> col:18 used reasons 'unsigned int'
    | `-VarDecl 0x1600276a0 <col:5, col:42> col:27 used best_reasons 'unsigned int' cinit
    |   `-ImplicitCastExpr 0x160027728 <col:42> 'unsigned int' <IntegralCast>
    |     `-IntegerLiteral 0x160027708 <col:42> 'int' 0
    |-ForStmt 0x160029c08 <line:11:5, line:31:5>
    | |-BinaryOperator 0x1600279f0 <line:11:10, col:14> 'int' '='
    | | |-DeclRefExpr 0x1600279b0 <col:10> 'int' lvalue Var 0x160027400 'i' 'int'
    | | `-IntegerLiteral 0x1600279d0 <col:14> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x160027c40 <col:17, col:41> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x160027a10 <col:17> 'int' lvalue Var 0x160027400 'i' 'int'
    | | `-CallExpr 0x160027c18 <col:21, col:41> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x160027b58 <col:21> 'int ()' Function 0x160027aa0 'sk_X509_CRL_num' 'int ()'
    | |   `-RecoveryExpr 0x160027bf8 <col:37> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x160027c80 <col:44, col:45> 'int' postfix '++'
    | | `-DeclRefExpr 0x160027c60 <col:44> 'int' lvalue Var 0x160027400 'i' 'int'
    | `-CompoundStmt 0x160029bd0 <col:49, line:31:5>
    |   |-BinaryOperator 0x160027e40 <line:13:9, col:20> 'unsigned int' '='
    |   | |-DeclRefExpr 0x160027db8 <col:9> 'unsigned int' lvalue Var 0x160027620 'reasons' 'unsigned int'
    |   | `-ImplicitCastExpr 0x160027e28 <col:19, col:20> 'unsigned int' <LValueToRValue>
    |   |   `-UnaryOperator 0x160027e10 <col:19, col:20> 'unsigned int' lvalue prefix '*' cannot overflow
    |   |     `-ImplicitCastExpr 0x160027df8 <col:20> 'unsigned int *' <LValueToRValue>
    |   |       `-DeclRefExpr 0x160027dd8 <col:20> 'unsigned int *' lvalue ParmVar 0x16000e028 'preasons' 'unsigned int *'
    |   |-IfStmt 0x160028070 <line:15:9, line:16:13>
    |   | |-BinaryOperator 0x160028048 <line:15:13, col:25> 'int' '<'
    |   | | |-ImplicitCastExpr 0x160028018 <col:13> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x160027fd8 <col:13> 'int' lvalue Var 0x160027480 'crl_score' 'int'
    |   | | `-ImplicitCastExpr 0x160028030 <col:25> 'int' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x160027ff8 <col:25> 'int' lvalue Var 0x160027500 'best_score' 'int'
    |   | `-ContinueStmt 0x160028068 <line:16:13>
    |   |-IfStmt 0x160029ac0 <line:18:9, line:26:9>
    |   | |-BinaryOperator 0x160028100 <line:18:13, col:26> 'int' '=='
    |   | | |-ImplicitCastExpr 0x1600280d0 <col:13> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x160028090 <col:13> 'int' lvalue Var 0x160027480 'crl_score' 'int'
    |   | | `-ImplicitCastExpr 0x1600280e8 <col:26> 'int' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x1600280b0 <col:26> 'int' lvalue Var 0x160027500 'best_score' 'int'
    |   | `-CompoundStmt 0x160029a98 <col:38, line:26:9>
    |   |   |-DeclStmt 0x160028238 <line:19:13, col:25>
    |   |   | |-VarDecl 0x160028138 <col:13, col:17> col:17 used day 'int'
    |   |   | `-VarDecl 0x1600281b8 <col:13, col:22> col:22 used sec 'int'
    |   |   |-IfStmt 0x160029940 <line:20:13, line:22:17>
    |   |   | |-RecoveryExpr 0x160029918 <line:20:17, line:21:65> '_Bool' contains-errors
    |   |   | `-ContinueStmt 0x160029938 <line:22:17>
    |   |   `-IfStmt 0x160029a78 <line:24:13, line:25:17>
    |   |     |-BinaryOperator 0x160029a50 <line:24:17, col:36> 'int' '&&'
    |   |     | |-BinaryOperator 0x1600299b8 <col:17, col:24> 'int' '<='
    |   |     | | |-ImplicitCastExpr 0x1600299a0 <col:17> 'int' <LValueToRValue>
    |   |     | | | `-DeclRefExpr 0x160029960 <col:17> 'int' lvalue Var 0x160028138 'day' 'int'
    |   |     | | `-IntegerLiteral 0x160029980 <col:24> 'int' 0
    |   |     | `-BinaryOperator 0x160029a30 <col:29, col:36> 'int' '<='
    |   |     |   |-ImplicitCastExpr 0x160029a18 <col:29> 'int' <LValueToRValue>
    |   |     |   | `-DeclRefExpr 0x1600299d8 <col:29> 'int' lvalue Var 0x1600281b8 'sec' 'int'
    |   |     |   `-IntegerLiteral 0x1600299f8 <col:36> 'int' 0
    |   |     `-ContinueStmt 0x160029a70 <line:25:17>
    |   |-BinaryOperator 0x160029b38 <line:29:9, col:22> 'int' '='
    |   | |-DeclRefExpr 0x160029ae0 <col:9> 'int' lvalue Var 0x160027500 'best_score' 'int'
    |   | `-ImplicitCastExpr 0x160029b20 <col:22> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x160029b00 <col:22> 'int' lvalue Var 0x160027480 'crl_score' 'int'
    |   `-BinaryOperator 0x160029bb0 <line:30:9, col:24> 'unsigned int' '='
    |     |-DeclRefExpr 0x160029b58 <col:9> 'unsigned int' lvalue Var 0x1600276a0 'best_reasons' 'unsigned int'
    |     `-ImplicitCastExpr 0x160029b98 <col:24> 'unsigned int' <LValueToRValue>
    |       `-DeclRefExpr 0x160029b78 <col:24> 'unsigned int' lvalue Var 0x160027620 'reasons' 'unsigned int'
    |-IfStmt 0x16002a458 <line:33:5, line:46:5>
    | |-RecoveryExpr 0x160029c40 <line:33:9> '_Bool' contains-errors
    | `-CompoundStmt 0x16002a428 <col:19, line:46:5>
    |   |-IfStmt 0x160029e28 <line:34:9, line:35:32>
    |   | |-UnaryOperator 0x160029c98 <line:34:13, col:14> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   | | `-ImplicitCastExpr 0x160029c80 <col:14> '<dependent type>' contains-errors <LValueToRValue>
    |   | |   `-RecoveryExpr 0x160029c60 <col:14> '<dependent type>' contains-errors lvalue
    |   | `-CallExpr 0x160029e00 <line:35:13, col:32> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x160029d90 <col:13> 'int ()' Function 0x160029cd8 'X509_CRL_free' 'int ()'
    |   |   `-UnaryOperator 0x160029de8 <col:27, col:28> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   |     `-ImplicitCastExpr 0x160029dd0 <col:28> '<dependent type>' contains-errors <LValueToRValue>
    |   |       `-RecoveryExpr 0x160029db0 <col:28> '<dependent type>' contains-errors lvalue
    |   |-BinaryOperator 0x160029f70 <line:38:9, col:19> 'int' '='
    |   | |-UnaryOperator 0x160029f20 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
    |   | | `-ImplicitCastExpr 0x160029f08 <col:10> 'int *' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x160029ee8 <col:10> 'int *' lvalue ParmVar 0x16000df70 'pscore' 'int *'
    |   | `-ImplicitCastExpr 0x160029f58 <col:19> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x160029f38 <col:19> 'int' lvalue Var 0x160027500 'best_score' 'int'
    |   |-BinaryOperator 0x16002a018 <line:39:9, col:21> 'unsigned int' '='
    |   | |-UnaryOperator 0x160029fc8 <col:9, col:10> 'unsigned int' lvalue prefix '*' cannot overflow
    |   | | `-ImplicitCastExpr 0x160029fb0 <col:10> 'unsigned int *' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x160029f90 <col:10> 'unsigned int *' lvalue ParmVar 0x16000e028 'preasons' 'unsigned int *'
    |   | `-ImplicitCastExpr 0x16002a000 <col:21> 'unsigned int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x160029fe0 <col:21> 'unsigned int' lvalue Var 0x1600276a0 'best_reasons' 'unsigned int'
    |   `-IfStmt 0x16002a2a8 <line:41:9, line:44:9>
    |     |-UnaryOperator 0x16002a190 <line:41:13, col:14> '<dependent type>' contains-errors prefix '*' cannot overflow
    |     | `-ImplicitCastExpr 0x16002a178 <col:14> '<dependent type>' contains-errors <LValueToRValue>
    |     |   `-RecoveryExpr 0x16002a158 <col:14> '<dependent type>' contains-errors lvalue
    |     `-CompoundStmt 0x16002a290 <col:21, line:44:9>
    |       `-CallExpr 0x16002a218 <line:42:13, col:33> '<dependent type>' contains-errors
    |         |-DeclRefExpr 0x16002a1a8 <col:13> 'int ()' Function 0x160029cd8 'X509_CRL_free' 'int ()'
    |         `-UnaryOperator 0x16002a200 <col:27, col:28> '<dependent type>' contains-errors prefix '*' cannot overflow
    |           `-ImplicitCastExpr 0x16002a1e8 <col:28> '<dependent type>' contains-errors <LValueToRValue>
    |             `-RecoveryExpr 0x16002a1c8 <col:28> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x16002a4e8 <line:48:5, line:49:16>
    | |-RecoveryExpr 0x16002a498 <line:48:9, col:23> '_Bool' contains-errors
    | `-ReturnStmt 0x16002a4d8 <line:49:9, col:16>
    |   `-IntegerLiteral 0x16002a4b8 <col:16> 'int' 1
    `-ReturnStmt 0x16002a528 <line:51:5, col:12>
      `-IntegerLiteral 0x16002a508 <col:12> 'int' 0
