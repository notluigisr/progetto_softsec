TranslationUnitDecl 0x140855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1408564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x140855bd0 '__int128'
|-TypedefDecl 0x140856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x140855bf0 'unsigned __int128'
|-TypedefDecl 0x14100be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14100bc00 'struct __NSConstantString_tag'
|   `-Record 0x140856580 '__NSConstantString_tag'
|-TypedefDecl 0x14100be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x140855d90 '__SVInt8_t'
|-TypedefDecl 0x14100bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x140855db0 '__SVInt16_t'
|-TypedefDecl 0x14100bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x140855dd0 '__SVInt32_t'
|-TypedefDecl 0x14100bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x140855df0 '__SVInt64_t'
|-TypedefDecl 0x14100c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x140855e10 '__SVUint8_t'
|-TypedefDecl 0x14100c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x140855e30 '__SVUint16_t'
|-TypedefDecl 0x14100c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x140855e50 '__SVUint32_t'
|-TypedefDecl 0x14100c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x140855e70 '__SVUint64_t'
|-TypedefDecl 0x14100c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x140855e90 '__SVFloat16_t'
|-TypedefDecl 0x14100c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x140855eb0 '__SVFloat32_t'
|-TypedefDecl 0x14100c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x140855ed0 '__SVFloat64_t'
|-TypedefDecl 0x14100c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x140855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14100c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x140855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14100c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x140855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14100c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x140855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14100c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x140855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14100c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x140855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14100c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x140855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14100c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x140855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14100c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x140855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14100c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x140856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14100c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x140856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14100c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x140856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14100c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x140856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14100c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x140856090 '__clang_svint8x3_t'
|-TypedefDecl 0x14100c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1408560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14100c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1408560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14100c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1408560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14100c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x140856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14100ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x140856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14100cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x140856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14100cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x140856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14100cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x140856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14100d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1408561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14100d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1408561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14100d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1408561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14100d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x140856210 '__clang_svint8x4_t'
|-TypedefDecl 0x14100d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x140856230 '__clang_svint16x4_t'
|-TypedefDecl 0x14100d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x140856250 '__clang_svint32x4_t'
|-TypedefDecl 0x14100d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x140856270 '__clang_svint64x4_t'
|-TypedefDecl 0x14100d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x140856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14100d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1408562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14100d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1408562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14100d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1408562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14100d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x140856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14100d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x140856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14100d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x140856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14100d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x140856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14100da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x140856390 '__SVBool_t'
|-TypedefDecl 0x14100da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1408563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14100dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1408563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14100db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1408563f0 '__SVCount_t'
|-TypedefDecl 0x14100dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14100dbb0 'char *'
|   `-BuiltinType 0x1408556b0 'char'
|-TypedefDecl 0x14100dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14100dbb0 'char *'
|   `-BuiltinType 0x1408556b0 'char'
|-FunctionDecl 0x14100df28 <dataset_diviso_filec/func23530_vuln.c:1:1, line:45:1> line:1:5 main 'int (int, char **)'
| |-ParmVarDecl 0x14100dcd8 <col:10, col:14> col:14 used argc 'int'
| |-ParmVarDecl 0x14100de00 <col:20, col:31> col:26 used argv 'char **'
| `-CompoundStmt 0x14102c358 <line:2:1, line:45:1>
|   |-DeclStmt 0x14100e160 <line:3:3, col:20>
|   | |-VarDecl 0x14100e040 <col:3, col:7> col:7 used i 'int'
|   | `-VarDecl 0x14100e0c0 <col:3, col:19> col:10 used num4bf 'int' cinit
|   |   `-IntegerLiteral 0x14100e128 <col:19> 'int' 5
|   |-IfStmt 0x141029830 <line:8:3, line:16:3>
|   | |-BinaryOperator 0x14100e1d0 <line:8:7, col:14> 'int' '>'
|   | | |-ImplicitCastExpr 0x14100e1b8 <col:7> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x14100e178 <col:7> 'int' lvalue ParmVar 0x14100dcd8 'argc' 'int'
|   | | `-IntegerLiteral 0x14100e198 <col:14> 'int' 1
|   | `-CompoundStmt 0x141029818 <col:17, line:16:3>
|   |   `-ForStmt 0x1410297e0 <line:9:5, line:15:5>
|   |     |-BinaryOperator 0x14100e230 <line:9:10, col:14> 'int' '='
|   |     | |-DeclRefExpr 0x14100e1f0 <col:10> 'int' lvalue Var 0x14100e040 'i' 'int'
|   |     | `-IntegerLiteral 0x14100e210 <col:14> 'int' 1
|   |     |-<<<NULL>>>
|   |     |-BinaryOperator 0x14100e2c0 <col:17, col:21> 'int' '<'
|   |     | |-ImplicitCastExpr 0x14100e290 <col:17> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x14100e250 <col:17> 'int' lvalue Var 0x14100e040 'i' 'int'
|   |     | `-ImplicitCastExpr 0x14100e2a8 <col:21> 'int' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x14100e270 <col:21> 'int' lvalue ParmVar 0x14100dcd8 'argc' 'int'
|   |     |-UnaryOperator 0x14100e300 <col:27, col:28> 'int' postfix '++'
|   |     | `-DeclRefExpr 0x14100e2e0 <col:27> 'int' lvalue Var 0x14100e040 'i' 'int'
|   |     `-CompoundStmt 0x1410297c8 <col:32, line:15:5>
|   |       `-IfStmt 0x141029798 <line:10:7, line:14:25> has_else
|   |         |-UnaryOperator 0x141027188 <line:10:11, col:37> 'int' prefix '!' cannot overflow
|   |         | `-CallExpr 0x1410270f8 <col:12, col:37> 'int'
|   |         |   |-ImplicitCastExpr 0x1410270e0 <col:12> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |         |   | `-DeclRefExpr 0x141026f70 <col:12> 'int (const char *, const char *)' Function 0x141026d90 'strcasecmp' 'int (const char *, const char *)'
|   |         |   |-ImplicitCastExpr 0x141027140 <col:23, col:29> 'const char *' <NoOp>
|   |         |   | `-ImplicitCastExpr 0x141027128 <col:23, col:29> 'char *' <LValueToRValue>
|   |         |   |   `-ArraySubscriptExpr 0x141027000 <col:23, col:29> 'char *' lvalue
|   |         |   |     |-ImplicitCastExpr 0x141026fd0 <col:23> 'char **' <LValueToRValue>
|   |         |   |     | `-DeclRefExpr 0x141026f90 <col:23> 'char **' lvalue ParmVar 0x14100de00 'argv' 'char **'
|   |         |   |     `-ImplicitCastExpr 0x141026fe8 <col:28> 'int' <LValueToRValue>
|   |         |   |       `-DeclRefExpr 0x141026fb0 <col:28> 'int' lvalue Var 0x14100e040 'i' 'int'
|   |         |   `-ImplicitCastExpr 0x141027170 <col:32> 'const char *' <NoOp>
|   |         |     `-ImplicitCastExpr 0x141027158 <col:32> 'char *' <ArrayToPointerDecay>
|   |         |       `-StringLiteral 0x141027060 <col:32> 'char[4]' lvalue "STR"
|   |         |-NullStmt 0x141029790 <col:40>
|   |         `-IfStmt 0x141029760 <line:11:12, line:14:25> has_else
|   |           |-UnaryOperator 0x141027380 <line:11:16, col:42> 'int' prefix '!' cannot overflow
|   |           | `-CallExpr 0x1410272f0 <col:17, col:42> 'int'
|   |           |   |-ImplicitCastExpr 0x1410272d8 <col:17> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |           |   | `-DeclRefExpr 0x1410271d8 <col:17> 'int (const char *, const char *)' Function 0x141026d90 'strcasecmp' 'int (const char *, const char *)'
|   |           |   |-ImplicitCastExpr 0x141027338 <col:28, col:34> 'const char *' <NoOp>
|   |           |   | `-ImplicitCastExpr 0x141027320 <col:28, col:34> 'char *' <LValueToRValue>
|   |           |   |   `-ArraySubscriptExpr 0x141027268 <col:28, col:34> 'char *' lvalue
|   |           |   |     |-ImplicitCastExpr 0x141027238 <col:28> 'char **' <LValueToRValue>
|   |           |   |     | `-DeclRefExpr 0x1410271f8 <col:28> 'char **' lvalue ParmVar 0x14100de00 'argv' 'char **'
|   |           |   |     `-ImplicitCastExpr 0x141027250 <col:33> 'int' <LValueToRValue>
|   |           |   |       `-DeclRefExpr 0x141027218 <col:33> 'int' lvalue Var 0x14100e040 'i' 'int'
|   |           |   `-ImplicitCastExpr 0x141027368 <col:37> 'const char *' <NoOp>
|   |           |     `-ImplicitCastExpr 0x141027350 <col:37> 'char *' <ArrayToPointerDecay>
|   |           |       `-StringLiteral 0x141027288 <col:37> 'char[4]' lvalue "STR"
|   |           |-NullStmt 0x141029758 <col:45>
|   |           `-IfStmt 0x141029728 <line:12:12, line:14:25> has_else
|   |             |-UnaryOperator 0x141027560 <line:12:16, col:42> 'int' prefix '!' cannot overflow
|   |             | `-CallExpr 0x1410274d0 <col:17, col:42> 'int'
|   |             |   |-ImplicitCastExpr 0x1410274b8 <col:17> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |             |   | `-DeclRefExpr 0x1410273b8 <col:17> 'int (const char *, const char *)' Function 0x141026d90 'strcasecmp' 'int (const char *, const char *)'
|   |             |   |-ImplicitCastExpr 0x141027518 <col:28, col:34> 'const char *' <NoOp>
|   |             |   | `-ImplicitCastExpr 0x141027500 <col:28, col:34> 'char *' <LValueToRValue>
|   |             |   |   `-ArraySubscriptExpr 0x141027448 <col:28, col:34> 'char *' lvalue
|   |             |   |     |-ImplicitCastExpr 0x141027418 <col:28> 'char **' <LValueToRValue>
|   |             |   |     | `-DeclRefExpr 0x1410273d8 <col:28> 'char **' lvalue ParmVar 0x14100de00 'argv' 'char **'
|   |             |   |     `-ImplicitCastExpr 0x141027430 <col:33> 'int' <LValueToRValue>
|   |             |   |       `-DeclRefExpr 0x1410273f8 <col:33> 'int' lvalue Var 0x14100e040 'i' 'int'
|   |             |   `-ImplicitCastExpr 0x141027548 <col:37> 'const char *' <NoOp>
|   |             |     `-ImplicitCastExpr 0x141027530 <col:37> 'char *' <ArrayToPointerDecay>
|   |             |       `-StringLiteral 0x141027468 <col:37> 'char[4]' lvalue "STR"
|   |             |-NullStmt 0x141029720 <col:45>
|   |             `-IfStmt 0x1410296f0 <line:13:12, line:14:25> has_else
|   |               |-UnaryOperator 0x141027740 <line:13:16, col:42> 'int' prefix '!' cannot overflow
|   |               | `-CallExpr 0x1410276b0 <col:17, col:42> 'int'
|   |               |   |-ImplicitCastExpr 0x141027698 <col:17> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |               |   | `-DeclRefExpr 0x141027598 <col:17> 'int (const char *, const char *)' Function 0x141026d90 'strcasecmp' 'int (const char *, const char *)'
|   |               |   |-ImplicitCastExpr 0x1410276f8 <col:28, col:34> 'const char *' <NoOp>
|   |               |   | `-ImplicitCastExpr 0x1410276e0 <col:28, col:34> 'char *' <LValueToRValue>
|   |               |   |   `-ArraySubscriptExpr 0x141027628 <col:28, col:34> 'char *' lvalue
|   |               |   |     |-ImplicitCastExpr 0x1410275f8 <col:28> 'char **' <LValueToRValue>
|   |               |   |     | `-DeclRefExpr 0x1410275b8 <col:28> 'char **' lvalue ParmVar 0x14100de00 'argv' 'char **'
|   |               |   |     `-ImplicitCastExpr 0x141027610 <col:33> 'int' <LValueToRValue>
|   |               |   |       `-DeclRefExpr 0x1410275d8 <col:33> 'int' lvalue Var 0x14100e040 'i' 'int'
|   |               |   `-ImplicitCastExpr 0x141027728 <col:37> 'const char *' <NoOp>
|   |               |     `-ImplicitCastExpr 0x141027710 <col:37> 'char *' <ArrayToPointerDecay>
|   |               |       `-StringLiteral 0x141027648 <col:37> 'char[4]' lvalue "STR"
|   |               |-ReturnStmt 0x1410278f8 <col:45, col:60>
|   |               | `-CallExpr 0x1410278d8 <col:52, col:60> 'int'
|   |               |   `-ImplicitCastExpr 0x1410278c0 <col:52> 'int (*)()' <FunctionToPointerDecay>
|   |               |     `-DeclRefExpr 0x141027870 <col:52> 'int ()' Function 0x1410277b8 'bmpTest' 'int ()'
|   |               `-CallExpr 0x1410296b0 <line:14:12, col:25> 'int'
|   |                 |-ImplicitCastExpr 0x141029698 <col:12> 'int (*)()' <FunctionToPointerDecay>
|   |                 | `-DeclRefExpr 0x141029600 <col:12> 'int ()' Function 0x141027930 'usage' 'int ()'
|   |                 `-ImplicitCastExpr 0x1410296d8 <col:18, col:24> 'char *' <LValueToRValue>
|   |                   `-ArraySubscriptExpr 0x141029678 <col:18, col:24> 'char *' lvalue
|   |                     |-ImplicitCastExpr 0x141029660 <col:18> 'char **' <LValueToRValue>
|   |                     | `-DeclRefExpr 0x141029620 <col:18> 'char **' lvalue ParmVar 0x14100de00 'argv' 'char **'
|   |                     `-IntegerLiteral 0x141029640 <col:23> 'int' 0
|   |-IfStmt 0x141029b70 <line:17:3, col:26>
|   | |-RecoveryExpr 0x141029868 <col:7> '<dependent type>' contains-errors lvalue
|   | `-CallExpr 0x141029b18 <col:14, col:26> 'int'
|   |   |-ImplicitCastExpr 0x141029b00 <col:14> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x141029a78 <col:14> 'int (const char *, ...)' Function 0x1410298d0 'printf' 'int (const char *, ...)'
|   |   `-ImplicitCastExpr 0x141029b58 <col:21> 'const char *' <NoOp>
|   |     `-ImplicitCastExpr 0x141029b40 <col:21> 'char *' <ArrayToPointerDecay>
|   |       `-StringLiteral 0x141029a98 <col:21> 'char[4]' lvalue "STR"
|   |-IfStmt 0x141029c28 <line:18:3, col:23>
|   | |-RecoveryExpr 0x141029ba8 <col:7> '<dependent type>' contains-errors lvalue
|   | `-BinaryOperator 0x141029c08 <col:14, col:23> 'int' '='
|   |   |-DeclRefExpr 0x141029bc8 <col:14> 'int' lvalue Var 0x14100e0c0 'num4bf' 'int'
|   |   `-IntegerLiteral 0x141029be8 <col:23> 'int' 4
|   |-CallExpr 0x141029e88 <line:19:3, col:53> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x141029d28 <col:3> 'int ()' Function 0x141029c70 'doTest' 'int ()'
|   | |-IntegerLiteral 0x141029d48 <col:10> 'int' 35
|   | |-IntegerLiteral 0x141029d68 <col:14> 'int' 39
|   | |-RecoveryExpr 0x141029e48 <col:18> '<dependent type>' contains-errors lvalue
|   | |-IntegerLiteral 0x141029da0 <col:33> 'int' 2
|   | |-RecoveryExpr 0x141029e68 <col:36> '<dependent type>' contains-errors lvalue
|   | `-StringLiteral 0x141029dd8 <col:48> 'char[4]' lvalue "STR"
|   |-CallExpr 0x14102a038 <line:20:3, col:58> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x141029ed8 <col:3> 'int ()' Function 0x141029c70 'doTest' 'int ()'
|   | |-IntegerLiteral 0x141029ef8 <col:10> 'int' 39
|   | |-IntegerLiteral 0x141029f18 <col:14> 'int' 41
|   | |-RecoveryExpr 0x141029ff8 <col:18> '<dependent type>' contains-errors lvalue
|   | |-DeclRefExpr 0x141029f50 <col:33> 'int' lvalue Var 0x14100e0c0 'num4bf' 'int'
|   | |-RecoveryExpr 0x14102a018 <col:41> '<dependent type>' contains-errors lvalue
|   | `-StringLiteral 0x141029f88 <col:53> 'char[4]' lvalue "STR"
|   |-CallExpr 0x14102a1e8 <line:21:3, col:53> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x14102a088 <col:3> 'int ()' Function 0x141029c70 'doTest' 'int ()'
|   | |-IntegerLiteral 0x14102a0a8 <col:10> 'int' 41
|   | |-IntegerLiteral 0x14102a0c8 <col:14> 'int' 35
|   | |-RecoveryExpr 0x14102a1a8 <col:18> '<dependent type>' contains-errors lvalue
|   | |-IntegerLiteral 0x14102a100 <col:33> 'int' 2
|   | |-RecoveryExpr 0x14102a1c8 <col:36> '<dependent type>' contains-errors lvalue
|   | `-StringLiteral 0x14102a138 <col:48> 'char[4]' lvalue "STR"
|   |-CallExpr 0x14102a398 <line:22:3, col:58> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x14102a238 <col:3> 'int ()' Function 0x141029c70 'doTest' 'int ()'
|   | |-IntegerLiteral 0x14102a258 <col:10> 'int' 35
|   | |-IntegerLiteral 0x14102a278 <col:14> 'int' 39
|   | |-RecoveryExpr 0x14102a358 <col:18> '<dependent type>' contains-errors lvalue
|   | |-DeclRefExpr 0x14102a2b0 <col:33> 'int' lvalue Var 0x14100e0c0 'num4bf' 'int'
|   | |-RecoveryExpr 0x14102a378 <col:41> '<dependent type>' contains-errors lvalue
|   | `-StringLiteral 0x14102a2e8 <col:53> 'char[4]' lvalue "STR"
|   |-CallExpr 0x14102a548 <line:23:3, col:53> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x14102a3e8 <col:3> 'int ()' Function 0x141029c70 'doTest' 'int ()'
|   | |-IntegerLiteral 0x14102a408 <col:10> 'int' 39
|   | |-IntegerLiteral 0x14102a428 <col:14> 'int' 41
|   | |-RecoveryExpr 0x14102a508 <col:18> '<dependent type>' contains-errors lvalue
|   | |-IntegerLiteral 0x14102a460 <col:33> 'int' 2
|   | |-RecoveryExpr 0x14102a528 <col:36> '<dependent type>' contains-errors lvalue
|   | `-StringLiteral 0x14102a498 <col:48> 'char[4]' lvalue "STR"
|   |-CallExpr 0x14102bdb8 <line:32:3, col:15> 'int'
|   | `-ImplicitCastExpr 0x14102bda0 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x14102bd80 <col:3> 'int ()' Function 0x14102bcc8 'bufSizeTest' 'int ()'
|   `-IfStmt 0x14102c338 <line:33:3, line:42:3>
|     |-RecoveryExpr 0x14102bdd8 <line:33:7> '_Bool' contains-errors
|     `-CompoundStmt 0x14102c320 <col:14, line:42:3>
|       `-CallExpr 0x14102be68 <line:34:5, col:17> 'int'
|         |-ImplicitCastExpr 0x14102be50 <col:5> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x14102bdf8 <col:5> 'int (const char *, ...)' Function 0x1410298d0 'printf' 'int (const char *, ...)'
|         `-ImplicitCastExpr 0x14102bea8 <col:12> 'const char *' <NoOp>
|           `-ImplicitCastExpr 0x14102be90 <col:12> 'char *' <ArrayToPointerDecay>
|             `-StringLiteral 0x14102be18 <col:12> 'char[4]' lvalue "STR"
|-FunctionDecl 0x141026d90 <line:10:12> col:12 implicit used strcasecmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x141026e90 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x141026ef8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x141026e38 <<invalid sloc>> Implicit 957
`-FunctionDecl 0x1410298d0 <line:17:14> col:14 implicit used printf 'int (const char *, ...)' extern
  |-ParmVarDecl 0x1410299d0 <<invalid sloc>> <invalid sloc> 'const char *'
  |-BuiltinAttr 0x141029978 <<invalid sloc>> Implicit 903
  `-FormatAttr 0x141029a40 <col:14> Implicit printf 1 2
