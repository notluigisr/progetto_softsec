TranslationUnitDecl 0x124055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1240564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x124055bd0 '__int128'
|-TypedefDecl 0x124056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x124055bf0 'unsigned __int128'
|-TypedefDecl 0x124127030 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x124126e00 'struct __NSConstantString_tag'
|   `-Record 0x124056580 '__NSConstantString_tag'
|-TypedefDecl 0x124127098 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x124055d90 '__SVInt8_t'
|-TypedefDecl 0x124127100 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x124055db0 '__SVInt16_t'
|-TypedefDecl 0x124127168 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x124055dd0 '__SVInt32_t'
|-TypedefDecl 0x1241271d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x124055df0 '__SVInt64_t'
|-TypedefDecl 0x124127238 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x124055e10 '__SVUint8_t'
|-TypedefDecl 0x1241272a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x124055e30 '__SVUint16_t'
|-TypedefDecl 0x124127308 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x124055e50 '__SVUint32_t'
|-TypedefDecl 0x124127370 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x124055e70 '__SVUint64_t'
|-TypedefDecl 0x1241273d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x124055e90 '__SVFloat16_t'
|-TypedefDecl 0x124127440 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x124055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1241274a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x124055ed0 '__SVFloat64_t'
|-TypedefDecl 0x124127510 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x124055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x124127578 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x124055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1241275e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x124055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x124127648 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x124055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1241276b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x124055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x124127718 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x124055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x124127780 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x124055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1241277e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x124055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x124127850 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x124055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1241278b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x124056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x124127920 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x124056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x124127988 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x124056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1241279f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x124056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x124127a58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x124056090 '__clang_svint8x3_t'
|-TypedefDecl 0x124127ac0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1240560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x124127b28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1240560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x124127b90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1240560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x124127bf8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x124056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x124127c60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x124056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x124127cc8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x124056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x124127d30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x124056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x124127d98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x124056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x124128600 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1240561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x124128668 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1240561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1241286d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1240561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x124128738 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x124056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1241287a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x124056230 '__clang_svint16x4_t'
|-TypedefDecl 0x124128808 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x124056250 '__clang_svint32x4_t'
|-TypedefDecl 0x124128870 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x124056270 '__clang_svint64x4_t'
|-TypedefDecl 0x1241288d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x124056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x124128940 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1240562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1241289a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1240562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x124128a10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1240562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x124128a78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x124056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x124128ae0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x124056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x124128b48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x124056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x124128bb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x124056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x124128c18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x124056390 '__SVBool_t'
|-TypedefDecl 0x124128c80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1240563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x124128ce8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1240563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x124128d50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1240563f0 '__SVCount_t'
|-TypedefDecl 0x124128df8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x124128db0 'char *'
|   `-BuiltinType 0x1240556b0 'char'
|-TypedefDecl 0x124128e68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x124128db0 'char *'
|   `-BuiltinType 0x1240556b0 'char'
`-FunctionDecl 0x124129470 <dataset_diviso_filec/func14562_vuln.c:1:1, line:76:1> line:1:6 invalid EvalHybridPerChannel 'void (int *, int *, int *, int *, const int *, const int *, const int *, int *, int *)'
  |-ParmVarDecl 0x124128f28 <col:27, col:42> col:42 invalid context 'int *'
  |-ParmVarDecl 0x124128fa8 <col:51, col:63> col:63 invalid node 'int *'
  |-ParmVarDecl 0x124129028 <line:2:27, col:45> col:45 invalid params 'int *'
  |-ParmVarDecl 0x1241290a8 <col:53, col:61> col:61 referenced invalid data 'int *'
  |-ParmVarDecl 0x124129128 <line:3:27, col:47> col:47 invalid input 'const int *'
  |-ParmVarDecl 0x1241291a8 <col:54, col:74> col:74 invalid filter 'const int *'
  |-ParmVarDecl 0x124129228 <line:4:27, col:47> col:47 invalid bias 'const int *'
  |-ParmVarDecl 0x1241292a8 <col:53, col:67> col:67 invalid im2col 'int *'
  |-ParmVarDecl 0x124129328 <line:5:27, col:41> col:41 invalid output 'int *'
  `-CompoundStmt 0x1258090a8 <col:49, line:76:1>
    |-DeclStmt 0x124142680 <line:6:3, col:53>
    | |-VarDecl 0x124129578 <col:3, col:9> col:9 used output_activation_min 'float'
    | `-VarDecl 0x124142600 <col:3, col:32> col:32 used output_activation_max 'float'
    |-CallExpr 0x124142920 <line:7:3, line:8:50> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1241427f0 <line:7:3> 'int ()' Function 0x124142738 'CalculateActivationRange' 'int ()'
    | |-CXXDependentScopeMemberExpr 0x124142830 <col:28, col:36> '<dependent type>' contains-errors lvalue ->activation
    | | `-RecoveryExpr 0x124142810 <col:28> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x1241428d0 <col:48, col:49> 'float *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x124142878 <col:49> 'float' lvalue Var 0x124129578 'output_activation_min' 'float'
    | `-UnaryOperator 0x124142908 <line:8:28, col:29> 'float *' prefix '&' cannot overflow
    |   `-DeclRefExpr 0x1241428e8 <col:29> 'float' lvalue Var 0x124142600 'output_activation_max' 'float'
    |-DeclStmt 0x124142cb0 <line:10:3, col:72>
    | `-VarDecl 0x124142970 <col:3, col:71> col:13 used input_size 'const int' cinit
    |   `-BinaryOperator 0x124142c90 <col:26, col:71> '<dependent type>' contains-errors '/'
    |     |-CallExpr 0x124142af8 <col:26, col:43> '<dependent type>' contains-errors
    |     | |-DeclRefExpr 0x124142ab8 <col:26> 'int ()' Function 0x124142a00 'NumElements' 'int ()'
    |     | `-RecoveryExpr 0x124142ad8 <col:38> '<dependent type>' contains-errors lvalue
    |     `-CallExpr 0x124142c60 <col:47, col:71> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x124142c00 <col:47> 'int ()' Function 0x124142b48 'SizeOfDimension' 'int ()'
    |       |-RecoveryExpr 0x124142c20 <col:63> '<dependent type>' contains-errors lvalue
    |       `-IntegerLiteral 0x124142c40 <col:70> 'int' 0
    |-DeclStmt 0x124142dd8 <line:11:3, col:51>
    | `-VarDecl 0x124142ce0 <col:3, col:50> col:13 used batch_size 'const int' cinit
    |   `-CallExpr 0x124142da8 <col:26, col:50> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x124142d48 <col:26> 'int ()' Function 0x124142b48 'SizeOfDimension' 'int ()'
    |     |-RecoveryExpr 0x124142d68 <col:42> '<dependent type>' contains-errors lvalue
    |     `-IntegerLiteral 0x124142d88 <col:49> 'int' 0
    |-DeclStmt 0x124143130 <line:14:3, line:15:64>
    | `-VarDecl 0x124143090 <line:14:3, col:10> col:10 scaling_factors_ptr 'float *'
    |-ForStmt 0x124143528 <line:19:3, line:25:3>
    | |-DeclStmt 0x124143308 <line:19:8, col:17>
    | | `-VarDecl 0x124143280 <col:8, col:16> col:12 used b 'int' cinit
    | |   `-IntegerLiteral 0x1241432e8 <col:16> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x124143390 <col:19, col:23> 'int' contains-errors '<'
    | | |-ImplicitCastExpr 0x124143360 <col:19> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x124143320 <col:19> 'int' lvalue Var 0x124143280 'b' 'int'
    | | `-ImplicitCastExpr 0x124143378 <col:23> 'int' contains-errors <LValueToRValue>
    | |   `-DeclRefExpr 0x124143340 <col:23> 'const int' contains-errors lvalue Var 0x124142ce0 'batch_size' 'const int'
    | |-UnaryOperator 0x1241433d0 <col:35, col:37> 'int' prefix '++'
    | | `-DeclRefExpr 0x1241433b0 <col:37> 'int' lvalue Var 0x124143280 'b' 'int'
    | `-CompoundStmt 0x124143510 <col:40, line:25:3>
    |   `-DeclStmt 0x1241434f8 <line:20:5, col:38>
    |     `-VarDecl 0x124143400 <col:5, col:28> col:15 offset 'const int' cinit
    |       `-BinaryOperator 0x1241434d8 <col:24, col:28> 'int' contains-errors '*'
    |         |-ImplicitCastExpr 0x1241434a8 <col:24> 'int' <LValueToRValue>
    |         | `-DeclRefExpr 0x124143468 <col:24> 'int' lvalue Var 0x124143280 'b' 'int'
    |         `-ImplicitCastExpr 0x1241434c0 <col:28> 'int' contains-errors <LValueToRValue>
    |           `-DeclRefExpr 0x124143488 <col:28> 'const int' contains-errors lvalue Var 0x124142970 'input_size' 'const int'
    |-IfStmt 0x1258088a0 <line:29:3, line:31:3>
    | |-RecoveryExpr 0x124143580 <line:29:7, col:17> '_Bool' contains-errors
    | `-CompoundStmt 0x125808890 <col:26, line:31:3>
    |-DeclStmt 0x125808ac0 <line:33:3, line:34:79>
    | `-VarDecl 0x125808988 <line:33:3, col:15> col:15 affine_quantization 'const int *' auto
    `-SwitchStmt 0x125808da8 <line:45:3, line:75:3>
      |-RecoveryExpr 0x125808d88 <line:45:11> 'int' contains-errors
      `-CompoundStmt 0x125809088 <col:24, line:75:3>
        |-BreakStmt 0x125808dd0 <line:54:7>
        `-CompoundStmt 0x125809070 <line:57:27, line:74:5>
          `-BreakStmt 0x125809068 <line:73:7>
