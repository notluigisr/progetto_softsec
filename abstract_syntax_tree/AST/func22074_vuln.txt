TranslationUnitDecl 0x131055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1310564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x131055bd0 '__int128'
|-TypedefDecl 0x131056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x131055bf0 'unsigned __int128'
|-TypedefDecl 0x13180be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13180bc00 'struct __NSConstantString_tag'
|   `-Record 0x131056580 '__NSConstantString_tag'
|-TypedefDecl 0x13180be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x131055d90 '__SVInt8_t'
|-TypedefDecl 0x13180bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x131055db0 '__SVInt16_t'
|-TypedefDecl 0x13180bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x131055dd0 '__SVInt32_t'
|-TypedefDecl 0x13180bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x131055df0 '__SVInt64_t'
|-TypedefDecl 0x13180c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x131055e10 '__SVUint8_t'
|-TypedefDecl 0x13180c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x131055e30 '__SVUint16_t'
|-TypedefDecl 0x13180c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x131055e50 '__SVUint32_t'
|-TypedefDecl 0x13180c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x131055e70 '__SVUint64_t'
|-TypedefDecl 0x13180c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x131055e90 '__SVFloat16_t'
|-TypedefDecl 0x13180c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x131055eb0 '__SVFloat32_t'
|-TypedefDecl 0x13180c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x131055ed0 '__SVFloat64_t'
|-TypedefDecl 0x13180c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x131055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13180c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x131055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13180c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x131055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13180c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x131055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13180c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x131055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13180c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x131055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13180c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x131055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13180c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x131055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13180c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x131055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13180c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x131056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13180c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x131056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13180c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x131056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13180c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x131056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13180c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x131056090 '__clang_svint8x3_t'
|-TypedefDecl 0x13180c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1310560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13180c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1310560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13180c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1310560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13180c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x131056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13180ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x131056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13180cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x131056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13180cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x131056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13180cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x131056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13180d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1310561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13180d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1310561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13180d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1310561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13180d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x131056210 '__clang_svint8x4_t'
|-TypedefDecl 0x13180d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x131056230 '__clang_svint16x4_t'
|-TypedefDecl 0x13180d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x131056250 '__clang_svint32x4_t'
|-TypedefDecl 0x13180d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x131056270 '__clang_svint64x4_t'
|-TypedefDecl 0x13180d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x131056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13180d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1310562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13180d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1310562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13180d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1310562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13180d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x131056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13180d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x131056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13180d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x131056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13180d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x131056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13180da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x131056390 '__SVBool_t'
|-TypedefDecl 0x13180da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1310563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13180dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1310563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13180db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1310563f0 '__SVCount_t'
|-TypedefDecl 0x13180dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13180dbb0 'char *'
|   `-BuiltinType 0x1310556b0 'char'
|-TypedefDecl 0x13180dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13180dbb0 'char *'
|   `-BuiltinType 0x1310556b0 'char'
`-FunctionDecl 0x13180dfa0 <dataset_diviso_filec/func22074_vuln.c:1:1, line:13:1> line:1:6 invalid luaT_getvarargs 'void (int *, int *, int, int)'
  |-ParmVarDecl 0x13180dd28 <col:23, col:34> col:34 referenced invalid L 'int *'
  |-ParmVarDecl 0x13180dda8 <col:37, col:47> col:47 invalid ci 'int *'
  |-ParmVarDecl 0x13180de28 <col:51, col:57> col:57 invalid where 'int'
  |-ParmVarDecl 0x13180dea8 <col:64, col:68> col:68 used wanted 'int'
  `-CompoundStmt 0x131828550 <col:76, line:13:1>
    |-DeclStmt 0x13180e0e8 <line:2:3, col:8>
    | `-VarDecl 0x13180e080 <col:3, col:7> col:7 used i 'int'
    |-DeclStmt 0x13180e278 <line:3:3, col:34>
    | `-VarDecl 0x13180e118 <col:3, col:24> col:7 used nextra 'int' cinit
    |   `-CXXDependentScopeMemberExpr 0x13180e230 <col:16, col:24> '<dependent type>' contains-errors lvalue .nextraargs
    |     `-CXXDependentScopeMemberExpr 0x13180e1e8 <col:16, col:22> '<dependent type>' contains-errors lvalue .l
    |       `-CXXDependentScopeMemberExpr 0x13180e1a0 <col:16, col:20> '<dependent type>' contains-errors lvalue ->u
    |         `-RecoveryExpr 0x13180e180 <col:16> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x131827cd0 <line:4:3, line:8:3>
    | |-BinaryOperator 0x13180e2e8 <line:4:7, col:16> 'int' '<'
    | | |-ImplicitCastExpr 0x13180e2d0 <col:7> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x13180e290 <col:7> 'int' lvalue ParmVar 0x13180dea8 'wanted' 'int'
    | | `-IntegerLiteral 0x13180e2b0 <col:16> 'int' 0
    | `-CompoundStmt 0x131827ca8 <col:19, line:8:3>
    |   |-BinaryOperator 0x13180e360 <line:5:5, col:14> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x13180e308 <col:5> 'int' lvalue ParmVar 0x13180dea8 'wanted' 'int'
    |   | `-ImplicitCastExpr 0x13180e348 <col:14> 'int' contains-errors <LValueToRValue>
    |   |   `-DeclRefExpr 0x13180e328 <col:14> 'int' contains-errors lvalue Var 0x13180e118 'nextra' 'int'
    |   |-CallExpr 0x131827b60 <line:6:5, col:33> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x131827ae0 <col:5> 'int ()' Function 0x131827a28 'checkstackp' 'int ()'
    |   | |-RecoveryExpr 0x131827b00 <col:17> '<dependent type>' contains-errors lvalue
    |   | |-DeclRefExpr 0x131827b20 <col:20> 'int' contains-errors lvalue Var 0x13180e118 'nextra' 'int'
    |   | `-RecoveryExpr 0x131827b40 <col:28> '<dependent type>' contains-errors lvalue
    |   `-BinaryOperator 0x131827c88 <line:7:5, col:22> '<dependent type>' contains-errors '='
    |     |-CXXDependentScopeMemberExpr 0x131827be0 <col:5, col:8> '<dependent type>' contains-errors lvalue ->top
    |     | `-RecoveryExpr 0x131827bb8 <col:5> '<dependent type>' contains-errors lvalue
    |     |   `-DeclRefExpr 0x131827b98 <col:5> 'int *' lvalue ParmVar 0x13180dd28 'L' 'int *'
    |     `-BinaryOperator 0x131827c68 <col:14, col:22> '<dependent type>' contains-errors '+'
    |       |-RecoveryExpr 0x131827c28 <col:14> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x131827c48 <col:22> 'int' contains-errors lvalue Var 0x13180e118 'nextra' 'int'
    |-ForStmt 0x131828168 <line:9:3, line:10:50>
    | |-BinaryOperator 0x131827d30 <line:9:8, col:12> 'int' '='
    | | |-DeclRefExpr 0x131827cf0 <col:8> 'int' lvalue Var 0x13180e080 'i' 'int'
    | | `-IntegerLiteral 0x131827d10 <col:12> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x131827e70 <col:15, col:33> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x131827dc0 <col:15, col:19> 'int' '<'
    | | | |-ImplicitCastExpr 0x131827d90 <col:15> 'int' <LValueToRValue>
    | | | | `-DeclRefExpr 0x131827d50 <col:15> 'int' lvalue Var 0x13180e080 'i' 'int'
    | | | `-ImplicitCastExpr 0x131827da8 <col:19> 'int' <LValueToRValue>
    | | |   `-DeclRefExpr 0x131827d70 <col:19> 'int' lvalue ParmVar 0x13180dea8 'wanted' 'int'
    | | `-BinaryOperator 0x131827e50 <col:29, col:33> 'int' contains-errors '<'
    | |   |-ImplicitCastExpr 0x131827e20 <col:29> 'int' <LValueToRValue>
    | |   | `-DeclRefExpr 0x131827de0 <col:29> 'int' lvalue Var 0x13180e080 'i' 'int'
    | |   `-ImplicitCastExpr 0x131827e38 <col:33> 'int' contains-errors <LValueToRValue>
    | |     `-DeclRefExpr 0x131827e00 <col:33> 'int' contains-errors lvalue Var 0x13180e118 'nextra' 'int'
    | |-UnaryOperator 0x131827eb0 <col:41, col:42> 'int' postfix '++'
    | | `-DeclRefExpr 0x131827e90 <col:41> 'int' lvalue Var 0x13180e080 'i' 'int'
    | `-CallExpr 0x131828130 <line:10:5, col:50> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x131827fa8 <col:5> 'int ()' Function 0x131827ef0 'setobjs2s' 'int ()'
    |   |-RecoveryExpr 0x131827fc8 <col:15> '<dependent type>' contains-errors lvalue
    |   |-BinaryOperator 0x131828028 <col:18, col:26> '<dependent type>' contains-errors '+'
    |   | |-RecoveryExpr 0x131827fe8 <col:18> '<dependent type>' contains-errors lvalue
    |   | `-DeclRefExpr 0x131828008 <col:26> 'int' lvalue Var 0x13180e080 'i' 'int'
    |   `-BinaryOperator 0x131828110 <col:29, col:49> '<dependent type>' contains-errors '+'
    |     |-BinaryOperator 0x1318280d0 <col:29, col:40> '<dependent type>' contains-errors '-'
    |     | |-CXXDependentScopeMemberExpr 0x131828068 <col:29, col:33> '<dependent type>' contains-errors lvalue ->func
    |     | | `-RecoveryExpr 0x131828048 <col:29> '<dependent type>' contains-errors lvalue
    |     | `-DeclRefExpr 0x1318280b0 <col:40> 'int' contains-errors lvalue Var 0x13180e118 'nextra' 'int'
    |     `-DeclRefExpr 0x1318280f0 <col:49> 'int' lvalue Var 0x13180e080 'i' 'int'
    `-ForStmt 0x131828518 <line:11:3, line:12:31>
      |-<<<NULL>>>
      |-<<<NULL>>>
      |-BinaryOperator 0x131828210 <line:11:10, col:14> 'int' '<'
      | |-ImplicitCastExpr 0x1318281e0 <col:10> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x1318281a0 <col:10> 'int' lvalue Var 0x13180e080 'i' 'int'
      | `-ImplicitCastExpr 0x1318281f8 <col:14> 'int' <LValueToRValue>
      |   `-DeclRefExpr 0x1318281c0 <col:14> 'int' lvalue ParmVar 0x13180dea8 'wanted' 'int'
      |-UnaryOperator 0x131828250 <col:22, col:23> 'int' postfix '++'
      | `-DeclRefExpr 0x131828230 <col:22> 'int' lvalue Var 0x13180e080 'i' 'int'
      `-CallExpr 0x1318284f0 <line:12:5, col:31> '<dependent type>' contains-errors
        |-DeclRefExpr 0x131828348 <col:5> 'int ()' Function 0x131828290 'setnilvalue' 'int ()'
        `-CallExpr 0x1318284c8 <col:17, col:30> '<dependent type>' contains-errors
          |-DeclRefExpr 0x131828448 <col:17> 'int ()' Function 0x131828390 's2v' 'int ()'
          `-BinaryOperator 0x1318284a8 <col:21, col:29> '<dependent type>' contains-errors '+'
            |-RecoveryExpr 0x131828468 <col:21> '<dependent type>' contains-errors lvalue
            `-DeclRefExpr 0x131828488 <col:29> 'int' lvalue Var 0x13180e080 'i' 'int'
