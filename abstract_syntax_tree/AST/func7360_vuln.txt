TranslationUnitDecl 0x156055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1560564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x156055bd0 '__int128'
|-TypedefDecl 0x156056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x156055bf0 'unsigned __int128'
|-TypedefDecl 0x156126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x156126000 'struct __NSConstantString_tag'
|   `-Record 0x156056580 '__NSConstantString_tag'
|-TypedefDecl 0x156126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x156055d90 '__SVInt8_t'
|-TypedefDecl 0x156126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x156055db0 '__SVInt16_t'
|-TypedefDecl 0x156126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x156055dd0 '__SVInt32_t'
|-TypedefDecl 0x1561263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x156055df0 '__SVInt64_t'
|-TypedefDecl 0x156126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x156055e10 '__SVUint8_t'
|-TypedefDecl 0x1561264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x156055e30 '__SVUint16_t'
|-TypedefDecl 0x156126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x156055e50 '__SVUint32_t'
|-TypedefDecl 0x156126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x156055e70 '__SVUint64_t'
|-TypedefDecl 0x1561265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x156055e90 '__SVFloat16_t'
|-TypedefDecl 0x156126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x156055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1561266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x156055ed0 '__SVFloat64_t'
|-TypedefDecl 0x156126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x156055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x156126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x156055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1561267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x156055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x156126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x156055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1561268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x156055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x156126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x156055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x156126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x156055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1561269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x156055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x156126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x156055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x156126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x156056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x156126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x156056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x156126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x156056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x156126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x156056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x156126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x156056090 '__clang_svint8x3_t'
|-TypedefDecl 0x156126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1560560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x156126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1560560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x156126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1560560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x156126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x156056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x156126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x156056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x156126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x156056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x156126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x156056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x156126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x156056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x156127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1560561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x156127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1560561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1561278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1560561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x156127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x156056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1561279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x156056230 '__clang_svint16x4_t'
|-TypedefDecl 0x156127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x156056250 '__clang_svint32x4_t'
|-TypedefDecl 0x156127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x156056270 '__clang_svint64x4_t'
|-TypedefDecl 0x156127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x156056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x156127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1560562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x156127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1560562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x156127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1560562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x156127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x156056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x156127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x156056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x156127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x156056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x156127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x156056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x156127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x156056390 '__SVBool_t'
|-TypedefDecl 0x156127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1560563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x156127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1560563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x156127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1560563f0 '__SVCount_t'
|-TypedefDecl 0x156127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x156127fb0 'char *'
|   `-BuiltinType 0x1560556b0 'char'
|-TypedefDecl 0x156128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x156127fb0 'char *'
|   `-BuiltinType 0x1560556b0 'char'
|-FunctionDecl 0x156808688 <dataset_diviso_filec/func7360_vuln.c:1:1, line:66:1> line:1:12 invalid ax25_recvmsg 'int (struct kiocb *, struct socket *, struct msghdr *, int, int)' static
| |-ParmVarDecl 0x156128648 <col:25, col:39> col:39 iocb 'struct kiocb *'
| |-ParmVarDecl 0x156808228 <col:45, col:60> col:60 used sock 'struct socket *'
| |-ParmVarDecl 0x1568083f8 <line:2:2, col:17> col:17 used msg 'struct msghdr *'
| |-ParmVarDecl 0x156808490 <col:22, col:29> col:29 invalid size 'int'
| |-ParmVarDecl 0x156808510 <col:35, col:39> col:39 used flags 'int'
| `-CompoundStmt 0x15780bca0 <line:3:1, line:66:1>
|   |-DeclStmt 0x1568089a8 <line:4:2, col:28>
|   | |-RecordDecl 0x156808758 <col:2, col:9> col:9 struct sock
|   | `-VarDecl 0x1568088c8 <col:2, col:26> col:15 used sk 'struct sock *' cinit
|   |   `-RecoveryExpr 0x156808968 <col:20, col:26> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x156808930 <col:20> 'struct socket *' lvalue ParmVar 0x156808228 'sock' 'struct socket *'
|   |-DeclStmt 0x156808ba8 <line:5:2, col:21>
|   | |-RecordDecl 0x1568089c0 <col:2, col:9> col:9 struct sk_buff
|   | `-VarDecl 0x156808b28 <col:2, col:18> col:18 used skb 'struct sk_buff *'
|   |-DeclStmt 0x156808c40 <line:6:2, col:12>
|   | `-VarDecl 0x156808bd8 <col:2, col:6> col:6 used copied 'int'
|   |-DeclStmt 0x156808cf8 <line:7:2, col:13>
|   | `-VarDecl 0x156808c70 <col:2, col:12> col:6 used err 'int' cinit
|   |   `-IntegerLiteral 0x156808cd8 <col:12> 'int' 0
|   |-CallExpr 0x156808ef8 <line:9:2, col:14> 'int' contains-errors
|   | |-ImplicitCastExpr 0x156808ee0 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x156808e70 <col:2> 'int ()' Function 0x156808db8 'lock_sock' 'int ()'
|   | `-ImplicitCastExpr 0x156808f20 <col:12> 'struct sock *' contains-errors <LValueToRValue>
|   |   `-DeclRefExpr 0x156808e90 <col:12> 'struct sock *' contains-errors lvalue Var 0x1568088c8 'sk' 'struct sock *'
|   |-IfStmt 0x1600088a8 <line:11:2, line:14:2>
|   | |-BinaryOperator 0x156809108 <line:11:6, col:55> 'int' contains-errors '&&'
|   | | |-BinaryOperator 0x1568090a8 <col:6, col:21> 'int' contains-errors '=='
|   | | | |-RecoveryExpr 0x156808f70 <col:6, col:10> '<dependent type>' contains-errors lvalue
|   | | | | `-DeclRefExpr 0x156808f38 <col:6> 'struct sock *' contains-errors lvalue Var 0x1568088c8 'sk' 'struct sock *'
|   | | | `-RecoveryExpr 0x156809088 <col:21> '<dependent type>' contains-errors lvalue
|   | | `-BinaryOperator 0x1568090e8 <col:39, col:55> 'int' contains-errors '!='
|   | |   |-RecoveryExpr 0x156809008 <col:39, col:43> '<dependent type>' contains-errors lvalue
|   | |   | `-DeclRefExpr 0x156808fd0 <col:39> 'struct sock *' contains-errors lvalue Var 0x1568088c8 'sk' 'struct sock *'
|   | |   `-RecoveryExpr 0x1568090c8 <col:55> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x160008888 <col:72, line:14:2>
|   |   |-BinaryOperator 0x160008800 <line:12:3, col:11> 'int' contains-errors '='
|   |   | |-DeclRefExpr 0x156809128 <col:3> 'int' lvalue Var 0x156808c70 'err' 'int'
|   |   | `-UnaryOperator 0x1568091e8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |   |   `-ImplicitCastExpr 0x1568091d0 <col:11> '<dependent type>' contains-errors <LValueToRValue>
|   |   |     `-RecoveryExpr 0x1568091b0 <col:11> '<dependent type>' contains-errors lvalue
|   |   `-GotoStmt 0x160008870 <line:13:3, col:8> 'out' 0x160008820
|   |-BinaryOperator 0x160008ca8 <line:17:2, line:18:31> 'struct sk_buff *' contains-errors '='
|   | |-DeclRefExpr 0x1600088c8 <line:17:2> 'struct sk_buff *' lvalue Var 0x156808b28 'skb' 'struct sk_buff *'
|   | `-CallExpr 0x160008c68 <col:8, line:18:31> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x1600089c8 <line:17:8> 'int ()' Function 0x160008910 'skb_recv_datagram' 'int ()'
|   |   |-DeclRefExpr 0x1600089e8 <col:26> 'struct sock *' contains-errors lvalue Var 0x1568088c8 'sk' 'struct sock *'
|   |   |-BinaryOperator 0x160008c08 <col:30, col:39> '<dependent type>' contains-errors '&'
|   |   | |-DeclRefExpr 0x160008a08 <col:30> 'int' lvalue ParmVar 0x156808510 'flags' 'int'
|   |   | `-UnaryOperator 0x160008bf0 <col:38, col:39> '<dependent type>' contains-errors prefix '~' cannot overflow
|   |   |   `-ImplicitCastExpr 0x160008bd8 <col:39> '<dependent type>' contains-errors <LValueToRValue>
|   |   |     `-RecoveryExpr 0x160008bb8 <col:39> '<dependent type>' contains-errors lvalue
|   |   |-BinaryOperator 0x160008c48 <line:18:5, col:13> '<dependent type>' contains-errors '&'
|   |   | |-DeclRefExpr 0x160008a90 <col:5> 'int' lvalue ParmVar 0x156808510 'flags' 'int'
|   |   | `-RecoveryExpr 0x160008c28 <col:13> '<dependent type>' contains-errors lvalue
|   |   `-UnaryOperator 0x160008b40 <col:27, col:28> 'int *' prefix '&' cannot overflow
|   |     `-DeclRefExpr 0x160008ae8 <col:28> 'int' lvalue Var 0x156808c70 'err' 'int'
|   |-IfStmt 0x160008d78 <line:19:2, line:20:8>
|   | |-BinaryOperator 0x160008d40 <line:19:6, col:13> 'int' contains-errors '=='
|   | | |-DeclRefExpr 0x160008cc8 <col:6> 'struct sk_buff *' lvalue Var 0x156808b28 'skb' 'struct sk_buff *'
|   | | `-RecoveryExpr 0x160008d20 <col:13> '<dependent type>' contains-errors lvalue
|   | `-GotoStmt 0x160008d60 <line:20:3, col:8> 'out' 0x160008820
|   |-IfStmt 0x160009108 <line:22:2, line:23:18>
|   | |-UnaryOperator 0x160008f50 <line:22:6, col:20> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x160008f38 <col:7, col:20> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x160008f10 <col:7, col:20> '<dependent type>' contains-errors lvalue
|   | |     `-CallExpr 0x160008ed0 <col:7, col:17> 'int' contains-errors
|   | |       |-ImplicitCastExpr 0x160008eb8 <col:7> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x160008e78 <col:7> 'int ()' Function 0x160008dc0 'ax25_sk' 'int ()'
|   | |       `-ImplicitCastExpr 0x160008ef8 <col:15> 'struct sock *' contains-errors <LValueToRValue>
|   | |         `-DeclRefExpr 0x160008e98 <col:15> 'struct sock *' contains-errors lvalue Var 0x1568088c8 'sk' 'struct sock *'
|   | `-CallExpr 0x1600090c0 <line:23:3, col:18> 'int'
|   |   |-ImplicitCastExpr 0x1600090a8 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x160009048 <col:3> 'int ()' Function 0x160008f90 'skb_pull' 'int ()'
|   |   |-ImplicitCastExpr 0x1600090f0 <col:12> 'struct sk_buff *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x160009068 <col:12> 'struct sk_buff *' lvalue Var 0x156808b28 'skb' 'struct sk_buff *'
|   |   `-IntegerLiteral 0x160009088 <col:17> 'int' 1
|   |-CallExpr 0x160009260 <line:25:2, col:32> 'int'
|   | |-ImplicitCastExpr 0x160009248 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x160009208 <col:2> 'int ()' Function 0x160009150 'skb_reset_transport_header' 'int ()'
|   | `-ImplicitCastExpr 0x160009288 <col:29> 'struct sk_buff *' <LValueToRValue>
|   |   `-DeclRefExpr 0x160009228 <col:29> 'struct sk_buff *' lvalue Var 0x156808b28 'skb' 'struct sk_buff *'
|   |-BinaryOperator 0x160009320 <line:26:2, col:16> 'int' contains-errors '='
|   | |-DeclRefExpr 0x1600092a0 <col:2> 'int' lvalue Var 0x156808bd8 'copied' 'int'
|   | `-RecoveryExpr 0x1600092f8 <col:11, col:16> '<dependent type>' contains-errors lvalue
|   |   `-DeclRefExpr 0x1600092c0 <col:11> 'struct sk_buff *' lvalue Var 0x156808b28 'skb' 'struct sk_buff *'
|   |-IfStmt 0x160009518 <line:28:2, line:31:2>
|   | |-BinaryOperator 0x160009380 <line:28:6, col:15> 'int' contains-errors '>'
|   | | |-DeclRefExpr 0x160009340 <col:6> 'int' lvalue Var 0x156808bd8 'copied' 'int'
|   | | `-RecoveryExpr 0x160009360 <col:15> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x1600094f8 <col:21, line:31:2>
|   |   |-BinaryOperator 0x1600093e0 <line:29:3, col:12> 'int' contains-errors '='
|   |   | |-DeclRefExpr 0x1600093a0 <col:3> 'int' lvalue Var 0x156808bd8 'copied' 'int'
|   |   | `-RecoveryExpr 0x1600093c0 <col:12> '<dependent type>' contains-errors lvalue
|   |   `-CompoundAssignOperator 0x1600094c8 <line:30:3, col:21> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |     |-RecoveryExpr 0x160009438 <col:3, col:8> '<dependent type>' contains-errors lvalue
|   |     | `-DeclRefExpr 0x160009400 <col:3> 'struct msghdr *' lvalue ParmVar 0x1568083f8 'msg' 'struct msghdr *'
|   |     `-RecoveryExpr 0x1600094a8 <col:21> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x1600096f8 <line:33:2, col:54> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x160009618 <col:2> 'int ()' Function 0x160009560 'skb_copy_datagram_iovec' 'int ()'
|   | |-DeclRefExpr 0x160009638 <col:26> 'struct sk_buff *' lvalue Var 0x156808b28 'skb' 'struct sk_buff *'
|   | |-IntegerLiteral 0x160009658 <col:31> 'int' 0
|   | |-RecoveryExpr 0x1600096b0 <col:34, col:39> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x160009678 <col:34> 'struct msghdr *' lvalue ParmVar 0x1568083f8 'msg' 'struct msghdr *'
|   | `-DeclRefExpr 0x1600096d8 <col:48> 'int' lvalue Var 0x156808bd8 'copied' 'int'
|   |-IfStmt 0x15780b870 <line:35:2, line:57:2>
|   | |-BinaryOperator 0x1600097b8 <line:35:6, col:26> 'int' contains-errors '!='
|   | | |-RecoveryExpr 0x160009770 <col:6, col:11> '<dependent type>' contains-errors lvalue
|   | | | `-DeclRefExpr 0x160009738 <col:6> 'struct msghdr *' lvalue ParmVar 0x1568083f8 'msg' 'struct msghdr *'
|   | | `-IntegerLiteral 0x160009798 <col:26> 'int' 0
|   | `-CompoundStmt 0x15780b848 <col:29, line:57:2>
|   |   |-DeclStmt 0x1578098f8 <line:36:3, col:68>
|   |   | |-RecordDecl 0x157809600 <col:3, col:10> col:10 struct sockaddr_ax25
|   |   | `-VarDecl 0x157809768 <col:3, col:60> col:25 used sax 'struct sockaddr_ax25 *' cinit
|   |   |   `-CStyleCastExpr 0x1578098b8 <col:31, col:60> 'struct sockaddr_ax25 *' contains-errors <Dependent>
|   |   |     `-RecoveryExpr 0x157809808 <col:55, col:60> '<dependent type>' contains-errors lvalue
|   |   |       `-DeclRefExpr 0x1578097d0 <col:55> 'struct msghdr *' lvalue ParmVar 0x1568083f8 'msg' 'struct msghdr *'
|   |   |-DeclStmt 0x157809b50 <line:39:3, col:49>
|   |   | `-VarDecl 0x157809958 <col:3, col:48> col:24 used mac 'const unsigned char *' cinit
|   |   |   `-ImplicitCastExpr 0x157809b38 <col:30, col:48> 'const unsigned char *' <IntegralToPointer>
|   |   |     `-CallExpr 0x157809af8 <col:30, col:48> 'int'
|   |   |       |-ImplicitCastExpr 0x157809ae0 <col:30> 'int (*)()' <FunctionToPointerDecay>
|   |   |       | `-DeclRefExpr 0x157809aa0 <col:30> 'int ()' Function 0x1578099e8 'skb_mac_header' 'int ()'
|   |   |       `-ImplicitCastExpr 0x157809b20 <col:45> 'struct sk_buff *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x157809ac0 <col:45> 'struct sk_buff *' lvalue Var 0x156808b28 'skb' 'struct sk_buff *'
|   |   `-IfStmt 0x15780b7a8 <line:49:3, line:55:3>
|   |     |-BinaryOperator 0x15780a360 <line:49:7, col:28> 'int' contains-errors '!='
|   |     | |-RecoveryExpr 0x15780a318 <col:7, col:12> '<dependent type>' contains-errors lvalue
|   |     | | `-DeclRefExpr 0x15780a2e0 <col:7> 'struct sockaddr_ax25 *' contains-errors lvalue Var 0x157809768 'sax' 'struct sockaddr_ax25 *'
|   |     | `-IntegerLiteral 0x15780a340 <col:28> 'int' 0
|   |     `-CompoundStmt 0x15780b788 <col:31, line:55:3>
|   |       |-DeclStmt 0x15780a400 <line:50:4, col:10>
|   |       | `-VarDecl 0x15780a398 <col:4, col:8> col:8 used ct 'int'
|   |       `-DeclStmt 0x15780a5c8 <line:51:4, col:69>
|   |         `-VarDecl 0x15780a4d8 <col:4, col:66> col:31 used fsa 'struct full_sockaddr_ax25 *' cinit
|   |           `-CStyleCastExpr 0x15780a5a0 <col:37, col:66> 'struct full_sockaddr_ax25 *' contains-errors <BitCast>
|   |             `-ImplicitCastExpr 0x15780a588 <col:66> 'struct sockaddr_ax25 *' contains-errors <LValueToRValue> part_of_explicit_cast
|   |               `-DeclRefExpr 0x15780a540 <col:66> 'struct sockaddr_ax25 *' contains-errors lvalue Var 0x157809768 'sax' 'struct sockaddr_ax25 *'
|   |-CallExpr 0x15780b9e8 <line:59:2, col:27> 'int' contains-errors
|   | |-ImplicitCastExpr 0x15780b9d0 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x15780b970 <col:2> 'int ()' Function 0x15780b8b8 'skb_free_datagram' 'int ()'
|   | |-ImplicitCastExpr 0x15780ba18 <col:20> 'struct sock *' contains-errors <LValueToRValue>
|   | | `-DeclRefExpr 0x15780b990 <col:20> 'struct sock *' contains-errors lvalue Var 0x1568088c8 'sk' 'struct sock *'
|   | `-ImplicitCastExpr 0x15780ba30 <col:24> 'struct sk_buff *' <LValueToRValue>
|   |   `-DeclRefExpr 0x15780b9b0 <col:24> 'struct sk_buff *' lvalue Var 0x156808b28 'skb' 'struct sk_buff *'
|   |-BinaryOperator 0x15780baa0 <line:60:2, col:8> 'int' '='
|   | |-DeclRefExpr 0x15780ba48 <col:2> 'int' lvalue Var 0x156808c70 'err' 'int'
|   | `-ImplicitCastExpr 0x15780ba88 <col:8> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x15780ba68 <col:8> 'int' lvalue Var 0x156808bd8 'copied' 'int'
|   |-LabelStmt 0x15780bc38 <line:62:1, line:63:17> 'out'
|   | `-CallExpr 0x15780bbf8 <col:2, col:17> 'int' contains-errors
|   |   |-ImplicitCastExpr 0x15780bbe0 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x15780bba0 <col:2> 'int ()' Function 0x15780bae8 'release_sock' 'int ()'
|   |   `-ImplicitCastExpr 0x15780bc20 <col:15> 'struct sock *' contains-errors <LValueToRValue>
|   |     `-DeclRefExpr 0x15780bbc0 <col:15> 'struct sock *' contains-errors lvalue Var 0x1568088c8 'sk' 'struct sock *'
|   `-ReturnStmt 0x15780bc90 <line:65:2, col:9>
|     `-ImplicitCastExpr 0x15780bc78 <col:9> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x15780bc58 <col:9> 'int' lvalue Var 0x156808c70 'err' 'int'
`-FunctionDecl 0x157809bb8 <line:41:3> col:3 implicit used memset 'void *(void *, int, unsigned long)' extern
  |-ParmVarDecl 0x157809cb8 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x157809d20 <<invalid sloc>> <invalid sloc> 'int'
  |-ParmVarDecl 0x157809d88 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x157809c60 <<invalid sloc>> Implicit 900
