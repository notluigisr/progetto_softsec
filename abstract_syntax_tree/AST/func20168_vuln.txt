TranslationUnitDecl 0x126028008 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x126028eb8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1260285d0 '__int128'
|-TypedefDecl 0x126028f28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1260285f0 'unsigned __int128'
|-TypedefDecl 0x12700be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12700bc00 'struct __NSConstantString_tag'
|   `-Record 0x126028f80 '__NSConstantString_tag'
|-TypedefDecl 0x12700be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x126028790 '__SVInt8_t'
|-TypedefDecl 0x12700bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x1260287b0 '__SVInt16_t'
|-TypedefDecl 0x12700bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x1260287d0 '__SVInt32_t'
|-TypedefDecl 0x12700bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x1260287f0 '__SVInt64_t'
|-TypedefDecl 0x12700c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x126028810 '__SVUint8_t'
|-TypedefDecl 0x12700c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x126028830 '__SVUint16_t'
|-TypedefDecl 0x12700c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x126028850 '__SVUint32_t'
|-TypedefDecl 0x12700c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x126028870 '__SVUint64_t'
|-TypedefDecl 0x12700c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x126028890 '__SVFloat16_t'
|-TypedefDecl 0x12700c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x1260288b0 '__SVFloat32_t'
|-TypedefDecl 0x12700c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x1260288d0 '__SVFloat64_t'
|-TypedefDecl 0x12700c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x1260288f0 '__SVBfloat16_t'
|-TypedefDecl 0x12700c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x126028910 '__clang_svint8x2_t'
|-TypedefDecl 0x12700c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x126028930 '__clang_svint16x2_t'
|-TypedefDecl 0x12700c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x126028950 '__clang_svint32x2_t'
|-TypedefDecl 0x12700c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x126028970 '__clang_svint64x2_t'
|-TypedefDecl 0x12700c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x126028990 '__clang_svuint8x2_t'
|-TypedefDecl 0x12700c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x1260289b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12700c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x1260289d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12700c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x1260289f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12700c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x126028a10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12700c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x126028a30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12700c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x126028a50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12700c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x126028a70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12700c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x126028a90 '__clang_svint8x3_t'
|-TypedefDecl 0x12700c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x126028ab0 '__clang_svint16x3_t'
|-TypedefDecl 0x12700c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x126028ad0 '__clang_svint32x3_t'
|-TypedefDecl 0x12700c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x126028af0 '__clang_svint64x3_t'
|-TypedefDecl 0x12700c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x126028b10 '__clang_svuint8x3_t'
|-TypedefDecl 0x12700ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x126028b30 '__clang_svuint16x3_t'
|-TypedefDecl 0x12700cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x126028b50 '__clang_svuint32x3_t'
|-TypedefDecl 0x12700cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x126028b70 '__clang_svuint64x3_t'
|-TypedefDecl 0x12700cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x126028b90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12700d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x126028bb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12700d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x126028bd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12700d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x126028bf0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12700d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x126028c10 '__clang_svint8x4_t'
|-TypedefDecl 0x12700d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x126028c30 '__clang_svint16x4_t'
|-TypedefDecl 0x12700d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x126028c50 '__clang_svint32x4_t'
|-TypedefDecl 0x12700d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x126028c70 '__clang_svint64x4_t'
|-TypedefDecl 0x12700d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x126028c90 '__clang_svuint8x4_t'
|-TypedefDecl 0x12700d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x126028cb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12700d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x126028cd0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12700d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x126028cf0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12700d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x126028d10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12700d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x126028d30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12700d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x126028d50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12700d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x126028d70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12700da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x126028d90 '__SVBool_t'
|-TypedefDecl 0x12700da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x126028db0 '__clang_svboolx2_t'
|-TypedefDecl 0x12700dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x126028dd0 '__clang_svboolx4_t'
|-TypedefDecl 0x12700db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x126028df0 '__SVCount_t'
|-TypedefDecl 0x12700dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12700dbb0 'char *'
|   `-BuiltinType 0x1260280b0 'char'
|-TypedefDecl 0x12700dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12700dbb0 'char *'
|   `-BuiltinType 0x1260280b0 'char'
|-FunctionDecl 0x12700df28 <dataset_diviso_filec/func20168_vuln.c:1:1, line:32:1> line:1:1 main 'int (int, char **)'
| |-ParmVarDecl 0x12700dcd8 <col:6, col:10> col:10 used argc 'int'
| |-ParmVarDecl 0x12700de00 <col:16, col:27> col:22 used argv 'char **'
| `-CompoundStmt 0x125831720 <line:2:1, line:32:1>
|   |-DeclStmt 0x12700e1c8 <line:3:3, col:16>
|   | |-VarDecl 0x12700e040 <col:3, col:7> col:7 used cnt 'int'
|   | |-VarDecl 0x12700e0c0 <col:3, col:11> col:11 used rc 'int'
|   | `-VarDecl 0x12700e140 <col:3, col:14> col:14 used cc 'int'
|   |-DeclStmt 0x12700e2e8 <line:4:3, col:17>
|   | `-VarDecl 0x12700e280 <col:3, col:16> col:8 used cmnd 'char[255]'
|   |-CallExpr 0x1260f5690 <line:6:3, col:19> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x1260f5570 <col:3> 'char *(char *, const char *)' Function 0x1260f5390 'strcpy' 'char *(char *, const char *)'
|   | |-DeclRefExpr 0x1260f5590 <col:10> 'char[255]' lvalue Var 0x12700e280 'cmnd' 'char[255]'
|   | `-RecoveryExpr 0x1260f5640 <col:16> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x125830f38 <line:8:3, line:20:3> has_else
|   | |-BinaryOperator 0x1260f5718 <line:8:7, col:14> 'int' '>'
|   | | |-ImplicitCastExpr 0x1260f5700 <col:7> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1260f56c0 <col:7> 'int' lvalue ParmVar 0x12700dcd8 'argc' 'int'
|   | | `-IntegerLiteral 0x1260f56e0 <col:14> 'int' 1
|   | |-CompoundStmt 0x1260f5db8 <line:9:3, line:15:3>
|   | | `-ForStmt 0x1260f5d80 <line:10:5, line:14:5>
|   | |   |-BinaryOperator 0x1260f5778 <line:10:10, col:16> 'int' '='
|   | |   | |-DeclRefExpr 0x1260f5738 <col:10> 'int' lvalue Var 0x12700e040 'cnt' 'int'
|   | |   | `-IntegerLiteral 0x1260f5758 <col:16> 'int' 1
|   | |   |-<<<NULL>>>
|   | |   |-BinaryOperator 0x1260f5808 <col:19, col:25> 'int' '<'
|   | |   | |-ImplicitCastExpr 0x1260f57d8 <col:19> 'int' <LValueToRValue>
|   | |   | | `-DeclRefExpr 0x1260f5798 <col:19> 'int' lvalue Var 0x12700e040 'cnt' 'int'
|   | |   | `-ImplicitCastExpr 0x1260f57f0 <col:25> 'int' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x1260f57b8 <col:25> 'int' lvalue ParmVar 0x12700dcd8 'argc' 'int'
|   | |   |-UnaryOperator 0x1260f5848 <col:31, col:34> 'int' postfix '++'
|   | |   | `-DeclRefExpr 0x1260f5828 <col:31> 'int' lvalue Var 0x12700e040 'cnt' 'int'
|   | |   `-CompoundStmt 0x1260f5d60 <line:11:5, line:14:5>
|   | |     |-CallExpr 0x1260f5b58 <line:12:7, col:25> 'char *'
|   | |     | |-ImplicitCastExpr 0x1260f5b40 <col:7> 'char *(*)(char *, const char *)' <FunctionToPointerDecay>
|   | |     | | `-DeclRefExpr 0x1260f5a40 <col:7> 'char *(char *, const char *)' Function 0x1260f5860 'strcat' 'char *(char *, const char *)'
|   | |     | |-ImplicitCastExpr 0x1260f5b88 <col:14> 'char *' <ArrayToPointerDecay>
|   | |     | | `-DeclRefExpr 0x1260f5a60 <col:14> 'char[255]' lvalue Var 0x12700e280 'cmnd' 'char[255]'
|   | |     | `-ImplicitCastExpr 0x1260f5bb8 <col:20> 'const char *' <NoOp>
|   | |     |   `-ImplicitCastExpr 0x1260f5ba0 <col:20> 'char *' <ArrayToPointerDecay>
|   | |     |     `-StringLiteral 0x1260f5ac0 <col:20> 'char[4]' lvalue "STR"
|   | |     `-CallExpr 0x1260f5ce8 <line:13:7, col:29> 'char *'
|   | |       |-ImplicitCastExpr 0x1260f5cd0 <col:7> 'char *(*)(char *, const char *)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x1260f5bd0 <col:7> 'char *(char *, const char *)' Function 0x1260f5860 'strcat' 'char *(char *, const char *)'
|   | |       |-ImplicitCastExpr 0x1260f5d18 <col:14> 'char *' <ArrayToPointerDecay>
|   | |       | `-DeclRefExpr 0x1260f5bf0 <col:14> 'char[255]' lvalue Var 0x12700e280 'cmnd' 'char[255]'
|   | |       `-ImplicitCastExpr 0x1260f5d48 <col:20, col:28> 'const char *' <NoOp>
|   | |         `-ImplicitCastExpr 0x1260f5d30 <col:20, col:28> 'char *' <LValueToRValue>
|   | |           `-ArraySubscriptExpr 0x1260f5c80 <col:20, col:28> 'char *' lvalue
|   | |             |-ImplicitCastExpr 0x1260f5c50 <col:20> 'char **' <LValueToRValue>
|   | |             | `-DeclRefExpr 0x1260f5c10 <col:20> 'char **' lvalue ParmVar 0x12700de00 'argv' 'char **'
|   | |             `-ImplicitCastExpr 0x1260f5c68 <col:25> 'int' <LValueToRValue>
|   | |               `-DeclRefExpr 0x1260f5c30 <col:25> 'int' lvalue Var 0x12700e040 'cnt' 'int'
|   | `-CompoundStmt 0x125830f18 <line:17:3, line:20:3>
|   |   |-CallExpr 0x125830ea0 <line:18:5, col:43> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x1260f5ee0 <col:5> 'int ()' Function 0x1260f5e28 'fprintf' 'int ()'
|   |   | |-RecoveryExpr 0x125830e48 <col:13> '<dependent type>' contains-errors lvalue
|   |   | |-StringLiteral 0x1260f5f18 <col:21> 'char[4]' lvalue "STR"
|   |   | |-ArraySubscriptExpr 0x125830e80 <col:28, col:34> 'char *' lvalue
|   |   | | |-ImplicitCastExpr 0x125830e68 <col:28> 'char **' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1260f5f38 <col:28> 'char **' lvalue ParmVar 0x12700de00 'argv' 'char **'
|   |   | | `-IntegerLiteral 0x1260f5f58 <col:33> 'int' 0
|   |   | |-DeclRefExpr 0x1260f5fb0 <col:37> 'int' lvalue Var 0x12700e0c0 'rc' 'int'
|   |   | `-DeclRefExpr 0x1260f5fd0 <col:41> 'int' lvalue Var 0x12700e140 'cc' 'int'
|   |   `-ReturnStmt 0x125830f08 <line:19:5, col:12>
|   |     `-IntegerLiteral 0x125830ee8 <col:12> 'int' 255
|   |-BinaryOperator 0x125831130 <line:22:3, col:18> 'int' contains-errors '='
|   | |-DeclRefExpr 0x125830f68 <col:3> 'int' lvalue Var 0x12700e140 'cc' 'int'
|   | `-CallExpr 0x125831108 <col:8, col:18> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x125831068 <col:8> 'int ()' Function 0x125830fb0 'setuid' 'int ()'
|   |   `-RecoveryExpr 0x1258310e8 <col:15> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x125831318 <line:23:3, col:19> 'int' '='
|   | |-DeclRefExpr 0x125831150 <col:3> 'int' lvalue Var 0x12700e0c0 'rc' 'int'
|   | `-CallExpr 0x1258312d8 <col:8, col:19> 'int'
|   |   |-ImplicitCastExpr 0x1258312c0 <col:8> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x125831250 <col:8> 'int ()' Function 0x125831198 'system' 'int ()'
|   |   `-ImplicitCastExpr 0x125831300 <col:15> 'char *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x125831270 <col:15> 'char[255]' lvalue Var 0x12700e280 'cmnd' 'char[255]'
|   |-IfStmt 0x1258316d0 <line:25:3, line:29:3>
|   | |-BinaryOperator 0x125831468 <line:25:7, col:28> 'int' '||'
|   | | |-ParenExpr 0x1258313b0 <col:7, col:15> 'int'
|   | | | `-BinaryOperator 0x125831390 <col:8, col:14> 'int' '!='
|   | | |   |-ImplicitCastExpr 0x125831378 <col:8> 'int' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x125831338 <col:8> 'int' lvalue Var 0x12700e0c0 'rc' 'int'
|   | | |   `-IntegerLiteral 0x125831358 <col:14> 'int' 0
|   | | `-ParenExpr 0x125831448 <col:20, col:28> 'int'
|   | |   `-BinaryOperator 0x125831428 <col:21, col:27> 'int' '!='
|   | |     |-ImplicitCastExpr 0x125831410 <col:21> 'int' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x1258313d0 <col:21> 'int' lvalue Var 0x12700e140 'cc' 'int'
|   | |     `-IntegerLiteral 0x1258313f0 <col:27> 'int' 0
|   | `-CompoundStmt 0x1258316b0 <line:26:3, line:29:3>
|   |   |-CallExpr 0x125831638 <line:27:5, col:43> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x125831488 <col:5> 'int ()' Function 0x1260f5e28 'fprintf' 'int ()'
|   |   | |-RecoveryExpr 0x1258315e0 <col:13> '<dependent type>' contains-errors lvalue
|   |   | |-StringLiteral 0x1258314c0 <col:21> 'char[4]' lvalue "STR"
|   |   | |-ArraySubscriptExpr 0x125831618 <col:28, col:34> 'char *' lvalue
|   |   | | |-ImplicitCastExpr 0x125831600 <col:28> 'char **' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1258314e0 <col:28> 'char **' lvalue ParmVar 0x12700de00 'argv' 'char **'
|   |   | | `-IntegerLiteral 0x125831500 <col:33> 'int' 0
|   |   | |-DeclRefExpr 0x125831558 <col:37> 'int' lvalue Var 0x12700e0c0 'rc' 'int'
|   |   | `-DeclRefExpr 0x125831578 <col:41> 'int' lvalue Var 0x12700e140 'cc' 'int'
|   |   `-ReturnStmt 0x1258316a0 <line:28:5, col:12>
|   |     `-IntegerLiteral 0x125831680 <col:12> 'int' 1
|   `-ReturnStmt 0x125831710 <line:31:3, col:10>
|     `-IntegerLiteral 0x1258316f0 <col:10> 'int' 0
|-FunctionDecl 0x1260f5390 <line:6:3> col:3 implicit used strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1260f5490 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1260f54f8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x1260f5438 <<invalid sloc>> Implicit 885
`-FunctionDecl 0x1260f5860 <line:12:7> col:7 implicit used strcat 'char *(char *, const char *)' extern
  |-ParmVarDecl 0x1260f5960 <<invalid sloc>> <invalid sloc> 'char *'
  |-ParmVarDecl 0x1260f59c8 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x1260f5908 <<invalid sloc>> Implicit 889
