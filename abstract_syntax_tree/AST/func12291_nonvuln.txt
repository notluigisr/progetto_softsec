TranslationUnitDecl 0x14d055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14d0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14d055bd0 '__int128'
|-TypedefDecl 0x14d056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14d055bf0 'unsigned __int128'
|-TypedefDecl 0x14d126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14d126000 'struct __NSConstantString_tag'
|   `-Record 0x14d056580 '__NSConstantString_tag'
|-TypedefDecl 0x14d126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14d055d90 '__SVInt8_t'
|-TypedefDecl 0x14d126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14d055db0 '__SVInt16_t'
|-TypedefDecl 0x14d126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14d055dd0 '__SVInt32_t'
|-TypedefDecl 0x14d1263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14d055df0 '__SVInt64_t'
|-TypedefDecl 0x14d126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14d055e10 '__SVUint8_t'
|-TypedefDecl 0x14d1264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14d055e30 '__SVUint16_t'
|-TypedefDecl 0x14d126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14d055e50 '__SVUint32_t'
|-TypedefDecl 0x14d126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14d055e70 '__SVUint64_t'
|-TypedefDecl 0x14d1265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14d055e90 '__SVFloat16_t'
|-TypedefDecl 0x14d126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14d055eb0 '__SVFloat32_t'
|-TypedefDecl 0x14d1266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14d055ed0 '__SVFloat64_t'
|-TypedefDecl 0x14d126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14d055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14d126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14d055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14d1267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14d055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14d126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14d055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14d1268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14d055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14d126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14d055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14d126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14d055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14d1269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14d055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14d126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14d055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14d126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14d056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14d126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14d056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14d126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14d056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14d126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14d056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14d126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14d056090 '__clang_svint8x3_t'
|-TypedefDecl 0x14d126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14d0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14d126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14d0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14d126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14d0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14d126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14d056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14d126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14d056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14d126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14d056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14d126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14d056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14d126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14d056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14d127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14d0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14d127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14d0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14d1278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14d0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14d127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14d056210 '__clang_svint8x4_t'
|-TypedefDecl 0x14d1279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14d056230 '__clang_svint16x4_t'
|-TypedefDecl 0x14d127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14d056250 '__clang_svint32x4_t'
|-TypedefDecl 0x14d127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14d056270 '__clang_svint64x4_t'
|-TypedefDecl 0x14d127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14d056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14d127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14d0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14d127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14d0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14d127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14d0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14d127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14d056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14d127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14d056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14d127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14d056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14d127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14d056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14d127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14d056390 '__SVBool_t'
|-TypedefDecl 0x14d127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14d0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14d127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14d0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14d127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14d0563f0 '__SVCount_t'
|-TypedefDecl 0x14d127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14d127fb0 'char *'
|   `-BuiltinType 0x14d0556b0 'char'
|-TypedefDecl 0x14d128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14d127fb0 'char *'
|   `-BuiltinType 0x14d0556b0 'char'
|-FunctionDecl 0x14d1281f8 <dataset_diviso_filec/func12291_nonvuln.c:1:1, line:38:1> line:1:12 invalid ntop_rrd_graph 'int (int *)' static
| |-ParmVarDecl 0x14d128128 <col:27, col:38> col:38 invalid vm 'int *'
| `-CompoundStmt 0x14f008be0 <col:42, line:38:1>
|   |-DeclStmt 0x14d128360 <line:2:3, col:16>
|   | `-VarDecl 0x14d1282f8 <col:3, col:10> col:10 used calcpr 'char **'
|   |-DeclStmt 0x14d128518 <line:3:3, col:22>
|   | |-VarDecl 0x14d128390 <col:3, col:7> col:7 used i 'int'
|   | |-VarDecl 0x14d128410 <col:3, col:10> col:10 used xsize 'int'
|   | `-VarDecl 0x14d128490 <col:3, col:17> col:17 used ysize 'int'
|   |-DeclStmt 0x14d128648 <line:4:3, col:20>
|   | |-VarDecl 0x14d128548 <col:3, col:10> col:10 used ymin 'double'
|   | `-VarDecl 0x14d1285c8 <col:3, col:16> col:16 used ymax 'double'
|   |-DeclStmt 0x14d1286e0 <line:5:3, col:13>
|   | `-VarDecl 0x14d128678 <col:3, col:7> col:7 used status 'int'
|   |-DeclStmt 0x14d128778 <line:6:3, col:11>
|   | `-VarDecl 0x14d128710 <col:3, col:7> col:7 used argc 'int'
|   |-DeclStmt 0x14d141a90 <line:7:3, col:48>
|   | `-VarDecl 0x14d141800 <col:3, col:47> col:10 used argv 'char **' cinit
|   |   `-CallExpr 0x14d141a58 <col:17, col:47> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x14d1419c0 <col:17> 'int ()' Function 0x14d141908 'read_string_array' 'int ()'
|   |     |-RecoveryExpr 0x14d1419e0 <col:35> '<dependent type>' contains-errors lvalue
|   |     |-IntegerLiteral 0x14d141a00 <col:39> 'int' 1
|   |     `-UnaryOperator 0x14d141a40 <col:42, col:43> 'int *' prefix '&' cannot overflow
|   |       `-DeclRefExpr 0x14d141a20 <col:43> 'int' lvalue Var 0x14d128710 'argc' 'int'
|   |-CallExpr 0x14d141bf8 <line:9:3, col:19> 'int'
|   | `-ImplicitCastExpr 0x14d141be0 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x14d141b88 <col:3> 'int ()' Function 0x14d141ad0 'reset_rrd_state' 'int ()'
|   |-BinaryOperator 0x14d142010 <line:10:3, col:77> 'int' contains-errors '='
|   | |-DeclRefExpr 0x14d141c18 <col:3> 'int' lvalue Var 0x14d128678 'status' 'int'
|   | `-CallExpr 0x14d141fb0 <col:12, col:77> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x14d141d18 <col:12> 'int ()' Function 0x14d141c60 'rrd_graph' 'int ()'
|   |   |-DeclRefExpr 0x14d141d38 <col:22> 'int' lvalue Var 0x14d128710 'argc' 'int'
|   |   |-DeclRefExpr 0x14d141d58 <col:28> 'char **' contains-errors lvalue Var 0x14d141800 'argv' 'char **'
|   |   |-UnaryOperator 0x14d141dd0 <col:34, col:35> 'char ***' prefix '&' cannot overflow
|   |   | `-DeclRefExpr 0x14d141d78 <col:35> 'char **' lvalue Var 0x14d1282f8 'calcpr' 'char **'
|   |   |-UnaryOperator 0x14d141e08 <col:43, col:44> 'int *' prefix '&' cannot overflow
|   |   | `-DeclRefExpr 0x14d141de8 <col:44> 'int' lvalue Var 0x14d128410 'xsize' 'int'
|   |   |-UnaryOperator 0x14d141e40 <col:51, col:52> 'int *' prefix '&' cannot overflow
|   |   | `-DeclRefExpr 0x14d141e20 <col:52> 'int' lvalue Var 0x14d128490 'ysize' 'int'
|   |   |-RecoveryExpr 0x14d141f90 <col:59> '<dependent type>' contains-errors lvalue
|   |   |-UnaryOperator 0x14d141ec0 <col:65, col:66> 'double *' prefix '&' cannot overflow
|   |   | `-DeclRefExpr 0x14d141e70 <col:66> 'double' lvalue Var 0x14d128548 'ymin' 'double'
|   |   `-UnaryOperator 0x14d141ef8 <col:72, col:73> 'double *' prefix '&' cannot overflow
|   |     `-DeclRefExpr 0x14d141ed8 <col:73> 'double' lvalue Var 0x14d1285c8 'ymax' 'double'
|   |-IfStmt 0x14d8089c0 <line:12:3, line:22:3>
|   | |-BinaryOperator 0x14d142088 <line:12:6, col:16> 'int' '!='
|   | | |-ImplicitCastExpr 0x14d142070 <col:6> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x14d142030 <col:6> 'int' lvalue Var 0x14d128678 'status' 'int'
|   | | `-IntegerLiteral 0x14d142050 <col:16> 'int' 0
|   | `-CompoundStmt 0x14d808998 <col:19, line:22:3>
|   |   |-DeclStmt 0x14d1426a0 <line:14:5, col:32>
|   |   | `-VarDecl 0x14d1420c0 <col:5, col:31> col:11 used err 'char *' cinit
|   |   |   `-ImplicitCastExpr 0x14d142260 <col:17, col:31> 'char *' <IntegralToPointer>
|   |   |     `-CallExpr 0x14d142240 <col:17, col:31> 'int'
|   |   |       `-ImplicitCastExpr 0x14d142228 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |   |         `-DeclRefExpr 0x14d142208 <col:17> 'int ()' Function 0x14d142150 'rrd_get_error' 'int ()'
|   |   |-IfStmt 0x14d8086c0 <line:16:5, line:18:5>
|   |   | |-BinaryOperator 0x14d808538 <line:16:8, col:37> 'int' contains-errors '&&'
|   |   | | |-BinaryOperator 0x14d808458 <col:8, col:15> 'int' contains-errors '!='
|   |   | | | |-DeclRefExpr 0x14d1426b8 <col:8> 'char *' lvalue Var 0x14d1420c0 'err' 'char *'
|   |   | | | `-RecoveryExpr 0x14d808438 <col:15> '<dependent type>' contains-errors lvalue
|   |   | | `-BinaryOperator 0x14d808518 <col:23, col:37> 'int' '>'
|   |   | |   |-CallExpr 0x14d8084a8 <col:23, col:33> 'unsigned long'
|   |   | |   | |-ImplicitCastExpr 0x14d808490 <col:23> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |   | |   | | `-DeclRefExpr 0x14d8082c8 <col:23> 'unsigned long (const char *)' Function 0x14d142748 'strlen' 'unsigned long (const char *)'
|   |   | |   | `-ImplicitCastExpr 0x14d8084e8 <col:30> 'const char *' <NoOp>
|   |   | |   |   `-ImplicitCastExpr 0x14d8084d0 <col:30> 'char *' <LValueToRValue>
|   |   | |   |     `-DeclRefExpr 0x14d8082e8 <col:30> 'char *' lvalue Var 0x14d1420c0 'err' 'char *'
|   |   | |   `-ImplicitCastExpr 0x14d808500 <col:37> 'unsigned long' <IntegralCast>
|   |   | |     `-IntegerLiteral 0x14d8083c0 <col:37> 'int' 0
|   |   | `-CompoundStmt 0x14d8086b0 <col:40, line:18:5>
|   |   `-CallExpr 0x14d808928 <line:20:5, col:14> 'void' contains-errors
|   |     |-ImplicitCastExpr 0x14d808910 <col:5> 'void (*)(void *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x14d808888 <col:5> 'void (void *)' Function 0x14d808718 'free' 'void (void *)'
|   |     `-ImplicitCastExpr 0x14d808968 <col:10> 'void *' contains-errors <BitCast>
|   |       `-ImplicitCastExpr 0x14d808950 <col:10> 'char **' contains-errors <LValueToRValue>
|   |         `-DeclRefExpr 0x14d8088a8 <col:10> 'char **' contains-errors lvalue Var 0x14d141800 'argv' 'char **'
|   |-CallExpr 0x14d808c90 <line:27:3, col:18> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x14d808c50 <col:3> 'int ()' Function 0x14d808b98 'lua_newtable' 'int ()'
|   | `-RecoveryExpr 0x14d808c70 <col:16> '<dependent type>' contains-errors lvalue
|   |-ForStmt 0x14f008a48 <line:28:3, line:32:3>
|   | |-BinaryOperator 0x14d808cf8 <line:28:7, col:11> 'int' '='
|   | | |-DeclRefExpr 0x14d808cb8 <col:7> 'int' lvalue Var 0x14d128390 'i' 'int'
|   | | `-IntegerLiteral 0x14d808cd8 <col:11> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x14d808df8 <col:14, col:32> 'int' '&&'
|   | | |-ImplicitCastExpr 0x14d808dc8 <col:14> 'char **' <LValueToRValue>
|   | | | `-DeclRefExpr 0x14d808d18 <col:14> 'char **' lvalue Var 0x14d1282f8 'calcpr' 'char **'
|   | | `-ImplicitCastExpr 0x14d808de0 <col:24, col:32> 'char *' <LValueToRValue>
|   | |   `-ArraySubscriptExpr 0x14d808da8 <col:24, col:32> 'char *' lvalue
|   | |     |-ImplicitCastExpr 0x14d808d78 <col:24> 'char **' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x14d808d38 <col:24> 'char **' lvalue Var 0x14d1282f8 'calcpr' 'char **'
|   | |     `-ImplicitCastExpr 0x14d808d90 <col:31> 'int' <LValueToRValue>
|   | |       `-DeclRefExpr 0x14d808d58 <col:31> 'int' lvalue Var 0x14d128390 'i' 'int'
|   | |-UnaryOperator 0x14d808e38 <col:35, col:36> 'int' postfix '++'
|   | | `-DeclRefExpr 0x14d808e18 <col:35> 'int' lvalue Var 0x14d128390 'i' 'int'
|   | `-CompoundStmt 0x14f008a20 <col:40, line:32:3>
|   |   |-CallExpr 0x14d809000 <line:29:5, col:33> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x14d808f30 <col:5> 'int ()' Function 0x14d808e78 'lua_pushstring' 'int ()'
|   |   | |-RecoveryExpr 0x14d808f50 <col:20> '<dependent type>' contains-errors lvalue
|   |   | `-ArraySubscriptExpr 0x14d808fe0 <col:24, col:32> 'char *' lvalue
|   |   |   |-ImplicitCastExpr 0x14d808fb0 <col:24> 'char **' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x14d808f70 <col:24> 'char **' lvalue Var 0x14d1282f8 'calcpr' 'char **'
|   |   |   `-ImplicitCastExpr 0x14d808fc8 <col:31> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x14d808f90 <col:31> 'int' lvalue Var 0x14d128390 'i' 'int'
|   |   |-CallExpr 0x14f008800 <line:30:5, col:28> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x14d809110 <col:5> 'int ()' Function 0x14d809058 'lua_rawseti' 'int ()'
|   |   | |-RecoveryExpr 0x14d809130 <col:17> '<dependent type>' contains-errors lvalue
|   |   | |-UnaryOperator 0x14d809170 <col:21, col:22> 'int' prefix '-'
|   |   | | `-IntegerLiteral 0x14d809150 <col:22> 'int' 2
|   |   | `-BinaryOperator 0x14d8091e0 <col:25, col:27> 'int' '+'
|   |   |   |-ImplicitCastExpr 0x14d8091c8 <col:25> 'int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x14d809188 <col:25> 'int' lvalue Var 0x14d128390 'i' 'int'
|   |   |   `-IntegerLiteral 0x14d8091a8 <col:27> 'int' 1
|   |   `-CallExpr 0x14f0089e0 <line:31:5, col:26> 'int'
|   |     |-ImplicitCastExpr 0x14f0089c8 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x14f008918 <col:5> 'int ()' Function 0x14f008860 'rrd_freemem' 'int ()'
|   |     `-ImplicitCastExpr 0x14f008a08 <col:17, col:25> 'char *' <LValueToRValue>
|   |       `-ArraySubscriptExpr 0x14f0089a8 <col:17, col:25> 'char *' lvalue
|   |         |-ImplicitCastExpr 0x14f008978 <col:17> 'char **' <LValueToRValue>
|   |         | `-DeclRefExpr 0x14f008938 <col:17> 'char **' lvalue Var 0x14d1282f8 'calcpr' 'char **'
|   |         `-ImplicitCastExpr 0x14f008990 <col:24> 'int' <LValueToRValue>
|   |           `-DeclRefExpr 0x14f008958 <col:24> 'int' lvalue Var 0x14d128390 'i' 'int'
|   |-CallExpr 0x14f008ad8 <line:34:3, col:21> 'int'
|   | |-ImplicitCastExpr 0x14f008ac0 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x14f008a80 <col:3> 'int ()' Function 0x14f008860 'rrd_freemem' 'int ()'
|   | `-ImplicitCastExpr 0x14f008b00 <col:15> 'char **' <LValueToRValue>
|   |   `-DeclRefExpr 0x14f008aa0 <col:15> 'char **' lvalue Var 0x14d1282f8 'calcpr' 'char **'
|   `-CallExpr 0x14f008b88 <line:35:3, col:12> 'void' contains-errors
|     |-ImplicitCastExpr 0x14f008b70 <col:3> 'void (*)(void *)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x14f008b18 <col:3> 'void (void *)' Function 0x14d808718 'free' 'void (void *)'
|     `-ImplicitCastExpr 0x14f008bc8 <col:8> 'void *' contains-errors <BitCast>
|       `-ImplicitCastExpr 0x14f008bb0 <col:8> 'char **' contains-errors <LValueToRValue>
|         `-DeclRefExpr 0x14f008b38 <col:8> 'char **' contains-errors lvalue Var 0x14d141800 'argv' 'char **'
|-FunctionDecl 0x14d142748 <line:16:23> col:23 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x14d808258 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x14d808200 <<invalid sloc>> Implicit 902
`-FunctionDecl 0x14d808718 <line:20:5> col:5 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x14d808818 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x14d8087c0 <<invalid sloc>> Implicit 873
