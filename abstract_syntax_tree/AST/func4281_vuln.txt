TranslationUnitDecl 0x148855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1488564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x148855bd0 '__int128'
|-TypedefDecl 0x148856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x148855bf0 'unsigned __int128'
|-TypedefDecl 0x1488d0c30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1488d0a00 'struct __NSConstantString_tag'
|   `-Record 0x148856580 '__NSConstantString_tag'
|-TypedefDecl 0x1488d0c98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x148855d90 '__SVInt8_t'
|-TypedefDecl 0x1488d0d00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x148855db0 '__SVInt16_t'
|-TypedefDecl 0x1488d0d68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x148855dd0 '__SVInt32_t'
|-TypedefDecl 0x1488d0dd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x148855df0 '__SVInt64_t'
|-TypedefDecl 0x1488d0e38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x148855e10 '__SVUint8_t'
|-TypedefDecl 0x1488d0ea0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x148855e30 '__SVUint16_t'
|-TypedefDecl 0x1488d0f08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x148855e50 '__SVUint32_t'
|-TypedefDecl 0x1488d0f70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x148855e70 '__SVUint64_t'
|-TypedefDecl 0x1488d0fd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x148855e90 '__SVFloat16_t'
|-TypedefDecl 0x1488d1040 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x148855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1488d10a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x148855ed0 '__SVFloat64_t'
|-TypedefDecl 0x1488d1110 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x148855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x1488d1178 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x148855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1488d11e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x148855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x1488d1248 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x148855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1488d12b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x148855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x1488d1318 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x148855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x1488d1380 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x148855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1488d13e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x148855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x1488d1450 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x148855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1488d14b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x148856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x1488d1520 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x148856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x1488d1588 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x148856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1488d15f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x148856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x1488d1658 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x148856090 '__clang_svint8x3_t'
|-TypedefDecl 0x1488d16c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1488560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x1488d1728 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1488560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x1488d1790 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1488560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x1488d17f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x148856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x1488d1860 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x148856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x1488d18c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x148856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x1488d1930 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x148856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x1488d1998 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x148856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x1488d2200 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1488561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x1488d2268 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1488561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1488d22d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1488561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x1488d2338 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x148856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1488d23a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x148856230 '__clang_svint16x4_t'
|-TypedefDecl 0x1488d2408 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x148856250 '__clang_svint32x4_t'
|-TypedefDecl 0x1488d2470 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x148856270 '__clang_svint64x4_t'
|-TypedefDecl 0x1488d24d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x148856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x1488d2540 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1488562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1488d25a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1488562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x1488d2610 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1488562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x1488d2678 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x148856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1488d26e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x148856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x1488d2748 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x148856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1488d27b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x148856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x1488d2818 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x148856390 '__SVBool_t'
|-TypedefDecl 0x1488d2880 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1488563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1488d28e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1488563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x1488d2950 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1488563f0 '__SVCount_t'
|-TypedefDecl 0x1488d29f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1488d29b0 'char *'
|   `-BuiltinType 0x1488556b0 'char'
|-TypedefDecl 0x1488d2a68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1488d29b0 'char *'
|   `-BuiltinType 0x1488556b0 'char'
`-FunctionDecl 0x1488d2c38 <dataset_diviso_filec/func4281_vuln.c:1:1, line:42:1> line:1:8 ConvertAnyFormat 'double (void *, int)'
  |-ParmVarDecl 0x1488d2ad8 <col:25, col:32> col:32 used ValuePtr 'void *'
  |-ParmVarDecl 0x1488d2b58 <col:42, col:46> col:46 used Format 'int'
  `-CompoundStmt 0x149856ae0 <line:2:1, line:42:1>
    |-DeclStmt 0x1488d2db8 <line:3:5, col:17>
    | `-VarDecl 0x1488d2d50 <col:5, col:12> col:12 used Value 'double'
    |-BinaryOperator 0x1488d2e28 <line:4:5, col:13> 'double' '='
    | |-DeclRefExpr 0x1488d2dd0 <col:5> 'double' lvalue Var 0x1488d2d50 'Value' 'double'
    | `-ImplicitCastExpr 0x1488d2e10 <col:13> 'double' <IntegralToFloating>
    |   `-IntegerLiteral 0x1488d2df0 <col:13> 'int' 0
    |-SwitchStmt 0x1488d2e80 <line:6:5, line:40:5>
    | |-ImplicitCastExpr 0x1488d2e68 <line:6:12> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x1488d2e48 <col:12> 'int' lvalue ParmVar 0x1488d2b58 'Format' 'int'
    | `-CompoundStmt 0x149856a00 <col:19, line:40:5>
    |   |-BinaryOperator 0x1488d2ff0 <line:7:29, col:53> 'double' '='
    |   | |-DeclRefExpr 0x1488d2ed8 <col:29> 'double' lvalue Var 0x1488d2d50 'Value' 'double'
    |   | `-ImplicitCastExpr 0x1488d2fd8 <col:37, col:53> 'double' <IntegralToFloating>
    |   |   `-ImplicitCastExpr 0x1488d2fc0 <col:37, col:53> 'signed char' <LValueToRValue>
    |   |     `-UnaryOperator 0x1488d2fa8 <col:37, col:53> 'signed char' lvalue prefix '*' cannot overflow
    |   |       `-CStyleCastExpr 0x1488d2f80 <col:38, col:53> 'signed char *' <BitCast>
    |   |         `-ImplicitCastExpr 0x1488d2f68 <col:53> 'void *' <LValueToRValue> part_of_explicit_cast
    |   |           `-DeclRefExpr 0x1488d2ef8 <col:53> 'void *' lvalue ParmVar 0x1488d2ad8 'ValuePtr' 'void *'
    |   |-BreakStmt 0x1488d3010 <col:64>
    |   |-BreakStmt 0x1488d3068 <line:8:64>
    |   |-BinaryOperator 0x1498552a0 <line:10:29, col:52> 'double' '='
    |   | |-DeclRefExpr 0x1488d3088 <col:29> 'double' lvalue Var 0x1488d2d50 'Value' 'double'
    |   | `-ImplicitCastExpr 0x149855288 <col:37, col:52> 'double' <IntegralToFloating>
    |   |   `-CallExpr 0x149855248 <col:37, col:52> 'int'
    |   |     |-ImplicitCastExpr 0x149855230 <col:37> 'int (*)()' <FunctionToPointerDecay>
    |   |     | `-DeclRefExpr 0x1488d31c0 <col:37> 'int ()' Function 0x1488d3108 'Get16u' 'int ()'
    |   |     `-ImplicitCastExpr 0x149855270 <col:44> 'void *' <LValueToRValue>
    |   |       `-DeclRefExpr 0x1488d31e0 <col:44> 'void *' lvalue ParmVar 0x1488d2ad8 'ValuePtr' 'void *'
    |   |-BreakStmt 0x1498552c0 <col:64>
    |   |-BinaryOperator 0x149855490 <line:11:29, col:52> 'double' '='
    |   | |-DeclRefExpr 0x1498552e0 <col:29> 'double' lvalue Var 0x1488d2d50 'Value' 'double'
    |   | `-ImplicitCastExpr 0x149855478 <col:37, col:52> 'double' <IntegralToFloating>
    |   |   `-CallExpr 0x149855438 <col:37, col:52> 'int'
    |   |     |-ImplicitCastExpr 0x149855420 <col:37> 'int (*)()' <FunctionToPointerDecay>
    |   |     | `-DeclRefExpr 0x1498553e0 <col:37> 'int ()' Function 0x149855328 'Get32u' 'int ()'
    |   |     `-ImplicitCastExpr 0x149855460 <col:44> 'void *' <LValueToRValue>
    |   |       `-DeclRefExpr 0x149855400 <col:44> 'void *' lvalue ParmVar 0x1488d2ad8 'ValuePtr' 'void *'
    |   |-BreakStmt 0x1498554b0 <col:64>
    |   |-CompoundStmt 0x149855e70 <line:15:13, line:29:13>
    |   | |-DeclStmt 0x149855600 <line:16:17, col:28>
    |   | | |-VarDecl 0x149855500 <col:17, col:21> col:21 used Num 'int'
    |   | | `-VarDecl 0x149855580 <col:17, col:25> col:25 used Den 'int'
    |   | |-BinaryOperator 0x1498557b0 <line:17:17, col:38> 'int' '='
    |   | | |-DeclRefExpr 0x149855618 <col:17> 'int' lvalue Var 0x149855500 'Num' 'int'
    |   | | `-CallExpr 0x149855770 <col:23, col:38> 'int'
    |   | |   |-ImplicitCastExpr 0x149855758 <col:23> 'int (*)()' <FunctionToPointerDecay>
    |   | |   | `-DeclRefExpr 0x149855718 <col:23> 'int ()' Function 0x149855660 'Get32s' 'int ()'
    |   | |   `-ImplicitCastExpr 0x149855798 <col:30> 'void *' <LValueToRValue>
    |   | |     `-DeclRefExpr 0x149855738 <col:30> 'void *' lvalue ParmVar 0x1488d2ad8 'ValuePtr' 'void *'
    |   | |-BinaryOperator 0x149855908 <line:18:17, col:48> 'int' '='
    |   | | |-DeclRefExpr 0x1498557d0 <col:17> 'int' lvalue Var 0x149855580 'Den' 'int'
    |   | | `-CallExpr 0x1498558e0 <col:23, col:48> 'int'
    |   | |   |-ImplicitCastExpr 0x1498558c8 <col:23> 'int (*)()' <FunctionToPointerDecay>
    |   | |   | `-DeclRefExpr 0x1498557f0 <col:23> 'int ()' Function 0x149855660 'Get32s' 'int ()'
    |   | |   `-BinaryOperator 0x1498558a8 <col:30, col:40> 'char *' '+'
    |   | |     |-IntegerLiteral 0x149855810 <col:30> 'int' 4
    |   | |     `-CStyleCastExpr 0x149855880 <col:32, col:40> 'char *' <BitCast>
    |   | |       `-ImplicitCastExpr 0x149855868 <col:40> 'void *' <LValueToRValue> part_of_explicit_cast
    |   | |         `-DeclRefExpr 0x149855830 <col:40> 'void *' lvalue ParmVar 0x1488d2ad8 'ValuePtr' 'void *'
    |   | |-IfStmt 0x149855e38 <line:19:17, line:27:17> has_else
    |   | | |-BinaryOperator 0x149855980 <line:19:21, col:28> 'int' '=='
    |   | | | |-ImplicitCastExpr 0x149855968 <col:21> 'int' <LValueToRValue>
    |   | | | | `-DeclRefExpr 0x149855928 <col:21> 'int' lvalue Var 0x149855580 'Den' 'int'
    |   | | | `-IntegerLiteral 0x149855948 <col:28> 'int' 0
    |   | | |-CompoundStmt 0x149855a18 <col:30, line:21:17>
    |   | | | `-BinaryOperator 0x1498559f8 <line:20:21, col:29> 'double' '='
    |   | | |   |-DeclRefExpr 0x1498559a0 <col:21> 'double' lvalue Var 0x1488d2d50 'Value' 'double'
    |   | | |   `-ImplicitCastExpr 0x1498559e0 <col:29> 'double' <IntegralToFloating>
    |   | | |     `-IntegerLiteral 0x1498559c0 <col:29> 'int' 0
    |   | | `-CompoundStmt 0x149855e20 <line:21:22, line:27:17>
    |   | |   `-IfStmt 0x149855df0 <line:22:21, line:26:21> has_else
    |   | |     |-BinaryOperator 0x149855aa8 <line:22:25, col:35> 'int' contains-errors '=='
    |   | |     | |-DeclRefExpr 0x149855a30 <col:25> 'int' lvalue ParmVar 0x1488d2b58 'Format' 'int'
    |   | |     | `-RecoveryExpr 0x149855a88 <col:35> '<dependent type>' contains-errors lvalue
    |   | |     |-CompoundStmt 0x149855bf0 <col:49, line:24:21>
    |   | |     | `-BinaryOperator 0x149855bd0 <line:23:25, col:45> 'double' '='
    |   | |     |   |-DeclRefExpr 0x149855ac8 <col:25> 'double' lvalue Var 0x1488d2d50 'Value' 'double'
    |   | |     |   `-BinaryOperator 0x149855bb0 <col:33, col:45> 'double' '/'
    |   | |     |     |-CStyleCastExpr 0x149855b38 <col:33, col:41> 'double' <IntegralToFloating>
    |   | |     |     | `-ImplicitCastExpr 0x149855b20 <col:41> 'int' <LValueToRValue> part_of_explicit_cast
    |   | |     |     |   `-DeclRefExpr 0x149855ae8 <col:41> 'int' lvalue Var 0x149855500 'Num' 'int'
    |   | |     |     `-ImplicitCastExpr 0x149855b98 <col:45> 'double' <IntegralToFloating>
    |   | |     |       `-ImplicitCastExpr 0x149855b80 <col:45> 'int' <LValueToRValue>
    |   | |     |         `-DeclRefExpr 0x149855b60 <col:45> 'int' lvalue Var 0x149855580 'Den' 'int'
    |   | |     `-CompoundStmt 0x149855dd8 <line:24:26, line:26:21>
    |   | |       `-BinaryOperator 0x149855db8 <line:25:25, col:73> 'double' '='
    |   | |         |-DeclRefExpr 0x149855c08 <col:25> 'double' lvalue Var 0x1488d2d50 'Value' 'double'
    |   | |         `-BinaryOperator 0x149855d98 <col:33, col:73> 'double' '/'
    |   | |           |-CStyleCastExpr 0x149855cb8 <col:33, col:51> 'double' <IntegralToFloating>
    |   | |           | `-CStyleCastExpr 0x149855c78 <col:41, col:51> 'unsigned int' <IntegralCast>
    |   | |           |   `-ImplicitCastExpr 0x149855c60 <col:51> 'int' <LValueToRValue> part_of_explicit_cast
    |   | |           |     `-DeclRefExpr 0x149855c28 <col:51> 'int' lvalue Var 0x149855500 'Num' 'int'
    |   | |           `-CStyleCastExpr 0x149855d70 <col:55, col:73> 'double' <IntegralToFloating>
    |   | |             `-CStyleCastExpr 0x149855d30 <col:63, col:73> 'unsigned int' <IntegralCast>
    |   | |               `-ImplicitCastExpr 0x149855d18 <col:73> 'int' <LValueToRValue> part_of_explicit_cast
    |   | |                 `-DeclRefExpr 0x149855ce0 <col:73> 'int' lvalue Var 0x149855580 'Den' 'int'
    |   | `-BreakStmt 0x149855e68 <line:28:17>
    |   |-BinaryOperator 0x149855fd0 <line:31:29, col:66> 'double' '='
    |   | |-DeclRefExpr 0x149855ec0 <col:29> 'double' lvalue Var 0x1488d2d50 'Value' 'double'
    |   | `-ImplicitCastExpr 0x149855fb8 <col:37, col:66> 'double' <IntegralToFloating>
    |   |   `-CStyleCastExpr 0x149855f90 <col:37, col:66> 'short' <IntegralCast>
    |   |     `-CallExpr 0x149855f38 <col:51, col:66> 'int'
    |   |       |-ImplicitCastExpr 0x149855f20 <col:51> 'int (*)()' <FunctionToPointerDecay>
    |   |       | `-DeclRefExpr 0x149855ee0 <col:51> 'int ()' Function 0x1488d3108 'Get16u' 'int ()'
    |   |       `-ImplicitCastExpr 0x149855f60 <col:58> 'void *' <LValueToRValue>
    |   |         `-DeclRefExpr 0x149855f00 <col:58> 'void *' lvalue ParmVar 0x1488d2ad8 'ValuePtr' 'void *'
    |   |-BreakStmt 0x149855ff0 <col:70>
    |   |-BinaryOperator 0x1498560e0 <line:32:29, col:52> 'double' '='
    |   | |-DeclRefExpr 0x149856010 <col:29> 'double' lvalue Var 0x1488d2d50 'Value' 'double'
    |   | `-ImplicitCastExpr 0x1498560c8 <col:37, col:52> 'double' <IntegralToFloating>
    |   |   `-CallExpr 0x149856088 <col:37, col:52> 'int'
    |   |     |-ImplicitCastExpr 0x149856070 <col:37> 'int (*)()' <FunctionToPointerDecay>
    |   |     | `-DeclRefExpr 0x149856030 <col:37> 'int ()' Function 0x149855660 'Get32s' 'int ()'
    |   |     `-ImplicitCastExpr 0x1498560b0 <col:44> 'void *' <LValueToRValue>
    |   |       `-DeclRefExpr 0x149856050 <col:44> 'void *' lvalue ParmVar 0x1488d2ad8 'ValuePtr' 'void *'
    |   |-BreakStmt 0x149856100 <col:70>
    |   |-BinaryOperator 0x149856658 <line:35:29, col:55> 'double' '='
    |   | |-DeclRefExpr 0x149856120 <col:29> 'double' lvalue Var 0x1488d2d50 'Value' 'double'
    |   | `-CStyleCastExpr 0x149856630 <col:37, col:55> 'double' <FloatingCast>
    |   |   `-ImplicitCastExpr 0x149856618 <col:45, col:55> 'float' <LValueToRValue> part_of_explicit_cast
    |   |     `-UnaryOperator 0x1498561e8 <col:45, col:55> 'float' lvalue prefix '*' cannot overflow
    |   |       `-CStyleCastExpr 0x1498561c0 <col:46, col:55> 'float *' <BitCast>
    |   |         `-ImplicitCastExpr 0x1498561a8 <col:55> 'void *' <LValueToRValue> part_of_explicit_cast
    |   |           `-DeclRefExpr 0x149856140 <col:55> 'void *' lvalue ParmVar 0x1488d2ad8 'ValuePtr' 'void *'
    |   |-BreakStmt 0x149856678 <col:70>
    |   |-BinaryOperator 0x149856798 <line:36:29, col:48> 'double' '='
    |   | |-DeclRefExpr 0x149856698 <col:29> 'double' lvalue Var 0x1488d2d50 'Value' 'double'
    |   | `-ImplicitCastExpr 0x149856780 <col:37, col:48> 'double' <LValueToRValue>
    |   |   `-UnaryOperator 0x149856768 <col:37, col:48> 'double' lvalue prefix '*' cannot overflow
    |   |     `-CStyleCastExpr 0x149856740 <col:38, col:48> 'double *' <BitCast>
    |   |       `-ImplicitCastExpr 0x149856728 <col:48> 'void *' <LValueToRValue> part_of_explicit_cast
    |   |         `-DeclRefExpr 0x1498566b8 <col:48> 'void *' lvalue ParmVar 0x1488d2ad8 'ValuePtr' 'void *'
    |   |-BreakStmt 0x1498567b8 <col:70>
    |   `-DefaultStmt 0x1498569e0 <line:38:9, line:39:39>
    |     `-CallExpr 0x149856978 <col:13, col:39> 'int'
    |       |-ImplicitCastExpr 0x149856960 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x1498568a0 <col:13> 'int ()' Function 0x1498567e8 'ErrNonfatal' 'int ()'
    |       |-ImplicitCastExpr 0x1498569b0 <col:25> 'char *' <ArrayToPointerDecay>
    |       | `-StringLiteral 0x149856900 <col:25> 'char[4]' lvalue "STR"
    |       |-ImplicitCastExpr 0x1498569c8 <col:31> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x149856920 <col:31> 'int' lvalue ParmVar 0x1488d2b58 'Format' 'int'
    |       `-IntegerLiteral 0x149856940 <col:38> 'int' 0
    `-ReturnStmt 0x149856ad0 <line:41:5, col:12>
      `-ImplicitCastExpr 0x149856ab8 <col:12> 'double' <LValueToRValue>
        `-DeclRefExpr 0x149856a98 <col:12> 'double' lvalue Var 0x1488d2d50 'Value' 'double'
