TranslationUnitDecl 0x11d028208 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x11d0290b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x11d0287d0 '__int128'
|-TypedefDecl 0x11d029128 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x11d0287f0 'unsigned __int128'
|-TypedefDecl 0x11d0f5430 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x11d0f5200 'struct __NSConstantString_tag'
|   `-Record 0x11d029180 '__NSConstantString_tag'
|-TypedefDecl 0x11d0f5498 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x11d028990 '__SVInt8_t'
|-TypedefDecl 0x11d0f5500 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x11d0289b0 '__SVInt16_t'
|-TypedefDecl 0x11d0f5568 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x11d0289d0 '__SVInt32_t'
|-TypedefDecl 0x11d0f55d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x11d0289f0 '__SVInt64_t'
|-TypedefDecl 0x11d0f5638 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x11d028a10 '__SVUint8_t'
|-TypedefDecl 0x11d0f56a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x11d028a30 '__SVUint16_t'
|-TypedefDecl 0x11d0f5708 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x11d028a50 '__SVUint32_t'
|-TypedefDecl 0x11d0f5770 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x11d028a70 '__SVUint64_t'
|-TypedefDecl 0x11d0f57d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x11d028a90 '__SVFloat16_t'
|-TypedefDecl 0x11d0f5840 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x11d028ab0 '__SVFloat32_t'
|-TypedefDecl 0x11d0f58a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x11d028ad0 '__SVFloat64_t'
|-TypedefDecl 0x11d0f5910 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x11d028af0 '__SVBfloat16_t'
|-TypedefDecl 0x11d0f5978 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x11d028b10 '__clang_svint8x2_t'
|-TypedefDecl 0x11d0f59e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x11d028b30 '__clang_svint16x2_t'
|-TypedefDecl 0x11d0f5a48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x11d028b50 '__clang_svint32x2_t'
|-TypedefDecl 0x11d0f5ab0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x11d028b70 '__clang_svint64x2_t'
|-TypedefDecl 0x11d0f5b18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x11d028b90 '__clang_svuint8x2_t'
|-TypedefDecl 0x11d0f5b80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x11d028bb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x11d0f5be8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x11d028bd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x11d0f5c50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x11d028bf0 '__clang_svuint64x2_t'
|-TypedefDecl 0x11d0f5cb8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x11d028c10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x11d0f5d20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x11d028c30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x11d0f5d88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x11d028c50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x11d0f5df0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x11d028c70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x11d0f5e58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x11d028c90 '__clang_svint8x3_t'
|-TypedefDecl 0x11d0f5ec0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x11d028cb0 '__clang_svint16x3_t'
|-TypedefDecl 0x11d0f5f28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x11d028cd0 '__clang_svint32x3_t'
|-TypedefDecl 0x11d0f5f90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x11d028cf0 '__clang_svint64x3_t'
|-TypedefDecl 0x11d0f5ff8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x11d028d10 '__clang_svuint8x3_t'
|-TypedefDecl 0x11d0f6060 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x11d028d30 '__clang_svuint16x3_t'
|-TypedefDecl 0x11d0f60c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x11d028d50 '__clang_svuint32x3_t'
|-TypedefDecl 0x11d0f6130 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x11d028d70 '__clang_svuint64x3_t'
|-TypedefDecl 0x11d0f6198 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x11d028d90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x11d0f6a00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x11d028db0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x11d0f6a68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x11d028dd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x11d0f6ad0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x11d028df0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x11d0f6b38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x11d028e10 '__clang_svint8x4_t'
|-TypedefDecl 0x11d0f6ba0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x11d028e30 '__clang_svint16x4_t'
|-TypedefDecl 0x11d0f6c08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x11d028e50 '__clang_svint32x4_t'
|-TypedefDecl 0x11d0f6c70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x11d028e70 '__clang_svint64x4_t'
|-TypedefDecl 0x11d0f6cd8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x11d028e90 '__clang_svuint8x4_t'
|-TypedefDecl 0x11d0f6d40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x11d028eb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x11d0f6da8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x11d028ed0 '__clang_svuint32x4_t'
|-TypedefDecl 0x11d0f6e10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x11d028ef0 '__clang_svuint64x4_t'
|-TypedefDecl 0x11d0f6e78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x11d028f10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x11d0f6ee0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x11d028f30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x11d0f6f48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x11d028f50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x11d0f6fb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x11d028f70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x11d0f7018 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x11d028f90 '__SVBool_t'
|-TypedefDecl 0x11d0f7080 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x11d028fb0 '__clang_svboolx2_t'
|-TypedefDecl 0x11d0f70e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x11d028fd0 '__clang_svboolx4_t'
|-TypedefDecl 0x11d0f7150 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x11d028ff0 '__SVCount_t'
|-TypedefDecl 0x11d0f71f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x11d0f71b0 'char *'
|   `-BuiltinType 0x11d0282b0 'char'
|-TypedefDecl 0x11d0f7268 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x11d0f71b0 'char *'
|   `-BuiltinType 0x11d0282b0 'char'
`-FunctionDecl 0x11d113f48 <dataset_diviso_filec/func18922_nonvuln.c:1:1, line:18:1> line:1:5 __ext4_write_dirty_metadata 'int (struct inode *, struct buffer_head *)'
  |-ParmVarDecl 0x11d0f7848 <col:33, col:47> col:47 used inode 'struct inode *'
  |-ParmVarDecl 0x11d113e28 <col:54, col:74> col:74 used bh 'struct buffer_head *'
  `-CompoundStmt 0x11d116d18 <line:2:1, line:18:1>
    |-DeclStmt 0x11d1140e8 <line:3:2, col:13>
    | `-VarDecl 0x11d114060 <col:2, col:12> col:6 used err 'int' cinit
    |   `-IntegerLiteral 0x11d1140c8 <col:12> 'int' 0
    |-CallExpr 0x11d1142b8 <line:5:2, col:22> 'int'
    | |-ImplicitCastExpr 0x11d1142a0 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x11d114230 <col:2> 'int ()' Function 0x11d114178 'mark_buffer_dirty' 'int ()'
    | `-ImplicitCastExpr 0x11d1142e0 <col:20> 'struct buffer_head *' <LValueToRValue>
    |   `-DeclRefExpr 0x11d114250 <col:20> 'struct buffer_head *' lvalue ParmVar 0x11d113e28 'bh' 'struct buffer_head *'
    |-IfStmt 0x11d116cb0 <line:6:2, line:16:2>
    | |-BinaryOperator 0x11d1144a8 <line:6:6, col:37> 'int' '&&'
    | | |-ImplicitCastExpr 0x11d114490 <col:6> 'struct inode *' <LValueToRValue>
    | | | `-DeclRefExpr 0x11d1142f8 <col:6> 'struct inode *' lvalue ParmVar 0x11d0f7848 'inode' 'struct inode *'
    | | `-CallExpr 0x11d114450 <col:15, col:37> 'int'
    | |   |-ImplicitCastExpr 0x11d114438 <col:15> 'int (*)()' <FunctionToPointerDecay>
    | |   | `-DeclRefExpr 0x11d1143f8 <col:15> 'int ()' Function 0x11d114340 'inode_needs_sync' 'int ()'
    | |   `-ImplicitCastExpr 0x11d114478 <col:32> 'struct inode *' <LValueToRValue>
    | |     `-DeclRefExpr 0x11d114418 <col:32> 'struct inode *' lvalue ParmVar 0x11d0f7848 'inode' 'struct inode *'
    | `-CompoundStmt 0x11d116c90 <col:40, line:16:2>
    |   |-CallExpr 0x11d114600 <line:7:3, col:23> 'int'
    |   | |-ImplicitCastExpr 0x11d1145e8 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x11d1145a8 <col:3> 'int ()' Function 0x11d1144f0 'sync_dirty_buffer' 'int ()'
    |   | `-ImplicitCastExpr 0x11d114628 <col:21> 'struct buffer_head *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x11d1145c8 <col:21> 'struct buffer_head *' lvalue ParmVar 0x11d113e28 'bh' 'struct buffer_head *'
    |   `-IfStmt 0x11d116c70 <line:8:3, line:15:3>
    |     |-BinaryOperator 0x11d114948 <line:8:7, col:44> 'int' '&&'
    |     | |-CallExpr 0x11d114778 <col:7, col:20> 'int'
    |     | | |-ImplicitCastExpr 0x11d114760 <col:7> 'int (*)()' <FunctionToPointerDecay>
    |     | | | `-DeclRefExpr 0x11d114720 <col:7> 'int ()' Function 0x11d114668 'buffer_req' 'int ()'
    |     | | `-ImplicitCastExpr 0x11d1147a0 <col:18> 'struct buffer_head *' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x11d114740 <col:18> 'struct buffer_head *' lvalue ParmVar 0x11d113e28 'bh' 'struct buffer_head *'
    |     | `-UnaryOperator 0x11d114930 <col:25, col:44> 'int' prefix '!' cannot overflow
    |     |   `-CallExpr 0x11d1148f0 <col:26, col:44> 'int'
    |     |     |-ImplicitCastExpr 0x11d1148d8 <col:26> 'int (*)()' <FunctionToPointerDecay>
    |     |     | `-DeclRefExpr 0x11d114898 <col:26> 'int ()' Function 0x11d1147e0 'buffer_uptodate' 'int ()'
    |     |     `-ImplicitCastExpr 0x11d114918 <col:42> 'struct buffer_head *' <LValueToRValue>
    |     |       `-DeclRefExpr 0x11d1148b8 <col:42> 'struct buffer_head *' lvalue ParmVar 0x11d113e28 'bh' 'struct buffer_head *'
    |     `-CompoundStmt 0x11d116c50 <col:47, line:15:3>
    |       |-CallExpr 0x11d114d08 <line:9:4, line:13:41> '<dependent type>' contains-errors
    |       | |-DeclRefExpr 0x11d114a48 <line:9:4> 'int ()' Function 0x11d114990 'ext4_error' 'int ()'
    |       | |-RecoveryExpr 0x11d114aa0 <col:15, col:22> '<dependent type>' contains-errors lvalue
    |       | | `-DeclRefExpr 0x11d114a68 <col:15> 'struct inode *' lvalue ParmVar 0x11d0f7848 'inode' 'struct inode *'
    |       | |-PredefinedExpr 0x11d114b88 <col:28> 'const char[28]' lvalue __func__
    |       | | `-StringLiteral 0x11d114b50 <col:28> 'const char[28]' lvalue "__ext4_write_dirty_metadata"
    |       | |-StringLiteral 0x11d114be0 <line:10:8, line:11:8> 'char[7]' lvalue "STRSTR"
    |       | |-RecoveryExpr 0x11d114c40 <line:12:8, col:15> '<dependent type>' contains-errors lvalue
    |       | | `-DeclRefExpr 0x11d114c08 <col:8> 'struct inode *' lvalue ParmVar 0x11d0f7848 'inode' 'struct inode *'
    |       | `-CStyleCastExpr 0x11d114ce0 <line:13:8, col:32> 'unsigned long long' contains-errors <Dependent>
    |       |   `-RecoveryExpr 0x11d114ca0 <col:28, col:32> '<dependent type>' contains-errors lvalue
    |       |     `-DeclRefExpr 0x11d114c68 <col:28> 'struct buffer_head *' lvalue ParmVar 0x11d113e28 'bh' 'struct buffer_head *'
    |       `-BinaryOperator 0x11d116c30 <line:14:4, col:11> 'int' contains-errors '='
    |         |-DeclRefExpr 0x11d114d50 <col:4> 'int' lvalue Var 0x11d114060 'err' 'int'
    |         `-UnaryOperator 0x11d116c18 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |           `-ImplicitCastExpr 0x11d116c00 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |             `-RecoveryExpr 0x11d114dd8 <col:11> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x11d116d08 <line:17:2, col:9>
      `-ImplicitCastExpr 0x11d116cf0 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x11d116cd0 <col:9> 'int' lvalue Var 0x11d114060 'err' 'int'
