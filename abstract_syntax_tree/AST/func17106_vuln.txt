TranslationUnitDecl 0x128855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1288564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x128855bd0 '__int128'
|-TypedefDecl 0x128856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x128855bf0 'unsigned __int128'
|-TypedefDecl 0x12900be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12900bc00 'struct __NSConstantString_tag'
|   `-Record 0x128856580 '__NSConstantString_tag'
|-TypedefDecl 0x12900be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x128855d90 '__SVInt8_t'
|-TypedefDecl 0x12900bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x128855db0 '__SVInt16_t'
|-TypedefDecl 0x12900bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x128855dd0 '__SVInt32_t'
|-TypedefDecl 0x12900bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x128855df0 '__SVInt64_t'
|-TypedefDecl 0x12900c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x128855e10 '__SVUint8_t'
|-TypedefDecl 0x12900c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x128855e30 '__SVUint16_t'
|-TypedefDecl 0x12900c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x128855e50 '__SVUint32_t'
|-TypedefDecl 0x12900c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x128855e70 '__SVUint64_t'
|-TypedefDecl 0x12900c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x128855e90 '__SVFloat16_t'
|-TypedefDecl 0x12900c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x128855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12900c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x128855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12900c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x128855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12900c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x128855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12900c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x128855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12900c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x128855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12900c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x128855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12900c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x128855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12900c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x128855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12900c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x128855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12900c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x128855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12900c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x128856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12900c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x128856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12900c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x128856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12900c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x128856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12900c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x128856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12900c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1288560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12900c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1288560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12900c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1288560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12900c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x128856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12900ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x128856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12900cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x128856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12900cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x128856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12900cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x128856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12900d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1288561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12900d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1288561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12900d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1288561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12900d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x128856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12900d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x128856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12900d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x128856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12900d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x128856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12900d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x128856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12900d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1288562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12900d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1288562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12900d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1288562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12900d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x128856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12900d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x128856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12900d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x128856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12900d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x128856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12900da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x128856390 '__SVBool_t'
|-TypedefDecl 0x12900da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1288563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12900dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1288563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12900db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1288563f0 '__SVCount_t'
|-TypedefDecl 0x12900dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12900dbb0 'char *'
|   `-BuiltinType 0x1288556b0 'char'
|-TypedefDecl 0x12900dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12900dbb0 'char *'
|   `-BuiltinType 0x1288556b0 'char'
|-FunctionDecl 0x12900de88 <dataset_diviso_filec/func17106_vuln.c:1:1, line:27:1> line:1:1 invalid srs_timestamp_check 'int (int *, const char *)'
| |-ParmVarDecl 0x12900dd28 <col:21, col:28> col:28 invalid srs 'int *'
| |-ParmVarDecl 0x12900dda8 <col:33, col:45> col:45 used stamp 'const char *'
| `-CompoundStmt 0x12980a198 <line:2:1, line:27:1>
|   |-DeclStmt 0x12900dfc0 <line:3:2, col:16>
|   | `-VarDecl 0x12900df58 <col:2, col:14> col:14 used sp 'const char *'
|   |-DeclStmt 0x12900e058 <line:4:2, col:11>
|   | `-VarDecl 0x12900dff0 <col:2, col:9> col:9 used bp 'char *'
|   |-DeclStmt 0x12900e0f0 <line:5:2, col:12>
|   | `-VarDecl 0x12900e088 <col:2, col:9> col:9 used off 'int'
|   |-ForStmt 0x129809e20 <line:11:2, line:17:2>
|   | |-BinaryOperator 0x12900e180 <line:11:7, col:12> 'const char *' '='
|   | | |-DeclRefExpr 0x12900e128 <col:7> 'const char *' lvalue Var 0x12900df58 'sp' 'const char *'
|   | | `-ImplicitCastExpr 0x12900e168 <col:12> 'const char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x12900e148 <col:12> 'const char *' lvalue ParmVar 0x12900dda8 'stamp' 'const char *'
|   | |-<<<NULL>>>
|   | |-ImplicitCastExpr 0x12900e1f0 <col:19, col:20> 'char' <LValueToRValue>
|   | | `-UnaryOperator 0x12900e1d8 <col:19, col:20> 'const char' lvalue prefix '*' cannot overflow
|   | |   `-ImplicitCastExpr 0x12900e1c0 <col:20> 'const char *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x12900e1a0 <col:20> 'const char *' lvalue Var 0x12900df58 'sp' 'const char *'
|   | |-UnaryOperator 0x12900e228 <col:24, col:26> 'const char *' postfix '++'
|   | | `-DeclRefExpr 0x12900e208 <col:24> 'const char *' lvalue Var 0x12900df58 'sp' 'const char *'
|   | `-CompoundStmt 0x129809df8 <col:30, line:17:2>
|   |   |-BinaryOperator 0x129809b70 <line:12:3, col:47> 'char *' contains-errors '='
|   |   | |-DeclRefExpr 0x12900e240 <col:3> 'char *' lvalue Var 0x12900dff0 'bp' 'char *'
|   |   | `-CallExpr 0x129809b40 <col:8, col:47> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x1298096b0 <col:8> 'char *(const char *, int)' Function 0x1298094d0 'strchr' 'char *(const char *, int)'
|   |   |   |-RecoveryExpr 0x129809a68 <col:15> '<dependent type>' contains-errors lvalue
|   |   |   `-CallExpr 0x129809ad0 <col:35, col:46> 'int'
|   |   |     |-ImplicitCastExpr 0x129809ab8 <col:35> 'int (*)(int)' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x1298098e8 <col:35> 'int (int)' Function 0x129809728 'toupper' 'int (int)'
|   |   |     `-ImplicitCastExpr 0x129809b10 <col:43, col:44> 'int' <IntegralCast>
|   |   |       `-ImplicitCastExpr 0x129809af8 <col:43, col:44> 'char' <LValueToRValue>
|   |   |         `-UnaryOperator 0x129809aa0 <col:43, col:44> 'const char' lvalue prefix '*' cannot overflow
|   |   |           `-ImplicitCastExpr 0x129809a88 <col:44> 'const char *' <LValueToRValue>
|   |   |             `-DeclRefExpr 0x129809908 <col:44> 'const char *' lvalue Var 0x12900df58 'sp' 'const char *'
|   |   |-IfStmt 0x129809c70 <line:13:3, line:14:11>
|   |   | |-BinaryOperator 0x129809c08 <line:13:7, col:13> 'int' contains-errors '=='
|   |   | | |-DeclRefExpr 0x129809b90 <col:7> 'char *' lvalue Var 0x12900dff0 'bp' 'char *'
|   |   | | `-RecoveryExpr 0x129809be8 <col:13> '<dependent type>' contains-errors lvalue
|   |   | `-ReturnStmt 0x129809c60 <line:14:4, col:11>
|   |   |   `-RecoveryExpr 0x129809c40 <col:11> '<dependent type>' contains-errors lvalue
|   |   `-BinaryOperator 0x129809d68 <line:15:3, col:14> 'int' contains-errors '='
|   |     |-DeclRefExpr 0x129809c90 <col:3> 'int' lvalue Var 0x12900e088 'off' 'int'
|   |     `-BinaryOperator 0x129809d48 <col:9, col:14> '<dependent type>' contains-errors '-'
|   |       |-DeclRefExpr 0x129809cb0 <col:9> 'char *' lvalue Var 0x12900dff0 'bp' 'char *'
|   |       `-RecoveryExpr 0x129809d28 <col:14> '<dependent type>' contains-errors lvalue
|   `-CallExpr 0x12980a060 <line:19:2, col:11> '<dependent type>' contains-errors
|     |-DeclRefExpr 0x129809fb0 <col:2> 'int ()' Function 0x129809ef8 'time' 'int ()'
|     `-UnaryOperator 0x12980a048 <col:7, col:8> '<dependent type>' contains-errors prefix '&' cannot overflow
|       `-RecoveryExpr 0x12980a028 <col:8> '<dependent type>' contains-errors lvalue
|-FunctionDecl 0x1298094d0 <line:12:8> col:8 implicit used strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x1298095d0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x129809638 <<invalid sloc>> <invalid sloc> 'int'
| `-BuiltinAttr 0x129809578 <<invalid sloc>> Implicit 893
`-FunctionDecl 0x129809728 <col:35> col:35 implicit used toupper 'int (int)' extern
  |-ParmVarDecl 0x129809828 <<invalid sloc>> <invalid sloc> 'int'
  |-BuiltinAttr 0x1298097d0 <<invalid sloc>> Implicit 933
  |-NoThrowAttr 0x129809898 <col:35> Implicit
  `-PureAttr 0x1298098c0 <col:35> Implicit
