TranslationUnitDecl 0x14e855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14e8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14e855bd0 '__int128'
|-TypedefDecl 0x14e856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14e855bf0 'unsigned __int128'
|-TypedefDecl 0x14e926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14e926000 'struct __NSConstantString_tag'
|   `-Record 0x14e856580 '__NSConstantString_tag'
|-TypedefDecl 0x14e926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14e855d90 '__SVInt8_t'
|-TypedefDecl 0x14e926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14e855db0 '__SVInt16_t'
|-TypedefDecl 0x14e926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14e855dd0 '__SVInt32_t'
|-TypedefDecl 0x14e9263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14e855df0 '__SVInt64_t'
|-TypedefDecl 0x14e926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14e855e10 '__SVUint8_t'
|-TypedefDecl 0x14e9264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14e855e30 '__SVUint16_t'
|-TypedefDecl 0x14e926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14e855e50 '__SVUint32_t'
|-TypedefDecl 0x14e926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14e855e70 '__SVUint64_t'
|-TypedefDecl 0x14e9265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14e855e90 '__SVFloat16_t'
|-TypedefDecl 0x14e926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14e855eb0 '__SVFloat32_t'
|-TypedefDecl 0x14e9266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14e855ed0 '__SVFloat64_t'
|-TypedefDecl 0x14e926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14e855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14e926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14e855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14e9267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14e855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14e926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14e855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14e9268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14e855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14e926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14e855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14e926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14e855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14e9269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14e855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14e926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14e855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14e926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14e856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14e926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14e856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14e926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14e856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14e926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14e856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14e926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14e856090 '__clang_svint8x3_t'
|-TypedefDecl 0x14e926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14e8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14e926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14e8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14e926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14e8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14e926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14e856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14e926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14e856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14e926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14e856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14e926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14e856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14e926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14e856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14e927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14e8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14e927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14e8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14e9278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14e8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14e927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14e856210 '__clang_svint8x4_t'
|-TypedefDecl 0x14e9279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14e856230 '__clang_svint16x4_t'
|-TypedefDecl 0x14e927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14e856250 '__clang_svint32x4_t'
|-TypedefDecl 0x14e927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14e856270 '__clang_svint64x4_t'
|-TypedefDecl 0x14e927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14e856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14e927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14e8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14e927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14e8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14e927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14e8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14e927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14e856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14e927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14e856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14e927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14e856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14e927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14e856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14e927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14e856390 '__SVBool_t'
|-TypedefDecl 0x14e927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14e8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14e927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14e8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14e927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14e8563f0 '__SVCount_t'
|-TypedefDecl 0x14e927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14e927fb0 'char *'
|   `-BuiltinType 0x14e8556b0 'char'
|-TypedefDecl 0x14e928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14e927fb0 'char *'
|   `-BuiltinType 0x14e8556b0 'char'
`-FunctionDecl 0x14e940e48 <dataset_diviso_filec/func20101_vuln.c:1:1, line:58:1> line:1:12 ebt_size_mwt 'int (struct compat_ebt_entry_mwt *, unsigned int, enum compat_mwt, struct ebt_entries_buf_state *, const void *)' static
  |-ParmVarDecl 0x14e928648 <col:25, col:54> col:54 used match32 'struct compat_ebt_entry_mwt *'
  |-ParmVarDecl 0x14e9286c8 <line:2:4, col:17> col:17 used size_left 'unsigned int'
  |-ParmVarDecl 0x14e940a58 <col:28, col:44> col:44 invalid type 'enum compat_mwt'
  |-ParmVarDecl 0x14e940c28 <line:3:4, col:34> col:34 used state 'struct ebt_entries_buf_state *'
  |-ParmVarDecl 0x14e940cd8 <col:41, col:53> col:53 used base 'const void *'
  `-CompoundStmt 0x14f00ab98 <line:4:1, line:58:1>
    |-DeclStmt 0x14e941000 <line:5:2, col:16>
    | `-VarDecl 0x14e940f78 <col:2, col:15> col:6 used growth 'int' cinit
    |   `-IntegerLiteral 0x14e940fe0 <col:15> 'int' 0
    |-DeclStmt 0x14e941098 <line:6:2, col:11>
    | `-VarDecl 0x14e941030 <col:2, col:8> col:8 used buf 'char *'
    |-IfStmt 0x14e941170 <line:8:2, line:9:10>
    | |-BinaryOperator 0x14e941120 <line:8:6, col:19> 'int' '=='
    | | |-ImplicitCastExpr 0x14e9410f0 <col:6> 'unsigned int' <LValueToRValue>
    | | | `-DeclRefExpr 0x14e9410b0 <col:6> 'unsigned int' lvalue ParmVar 0x14e9286c8 'size_left' 'unsigned int'
    | | `-ImplicitCastExpr 0x14e941108 <col:19> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x14e9410d0 <col:19> 'int' 0
    | `-ReturnStmt 0x14e941160 <line:9:3, col:10>
    |   `-IntegerLiteral 0x14e941140 <col:10> 'int' 0
    |-BinaryOperator 0x14e941228 <line:11:2, col:17> 'char *' '='
    | |-DeclRefExpr 0x14e941190 <col:2> 'char *' lvalue Var 0x14e941030 'buf' 'char *'
    | `-CStyleCastExpr 0x14e941200 <col:8, col:17> 'char *' <BitCast>
    |   `-ImplicitCastExpr 0x14e9411e8 <col:17> 'struct compat_ebt_entry_mwt *' <LValueToRValue> part_of_explicit_cast
    |     `-DeclRefExpr 0x14e9411b0 <col:17> 'struct compat_ebt_entry_mwt *' lvalue ParmVar 0x14e928648 'match32' 'struct compat_ebt_entry_mwt *'
    |-WhileStmt 0x14f00ab30 <line:13:2, line:55:2>
    | |-RecoveryExpr 0x14e9412d8 <line:13:9, col:37> '_Bool' contains-errors
    | `-CompoundStmt 0x14f00aa98 <col:40, line:55:2>
    |   |-DeclStmt 0x14e9414e8 <line:14:3, col:37>
    |   | |-RecordDecl 0x14e9412f8 <col:3, col:10> col:10 struct ebt_entry_match
    |   | `-VarDecl 0x14e941468 <col:3, col:27> col:27 used match_kern 'struct ebt_entry_match *'
    |   |-DeclStmt 0x14e941580 <line:15:3, col:10>
    |   | `-VarDecl 0x14e941518 <col:3, col:7> col:7 used ret 'int'
    |   |-BinaryOperator 0x14e9416d0 <line:17:3, col:50> 'struct ebt_entry_match *' contains-errors '='
    |   | |-DeclRefExpr 0x14e941598 <col:3> 'struct ebt_entry_match *' lvalue Var 0x14e941468 'match_kern' 'struct ebt_entry_match *'
    |   | `-CStyleCastExpr 0x14e9416a8 <col:16, col:50> 'struct ebt_entry_match *' contains-errors <Dependent>
    |   |   `-RecoveryExpr 0x14e9415f0 <col:43, col:50> '<dependent type>' contains-errors lvalue
    |   |     `-DeclRefExpr 0x14e9415b8 <col:43> 'struct ebt_entries_buf_state *' lvalue ParmVar 0x14e940c28 'state' 'struct ebt_entries_buf_state *'
    |   |-IfStmt 0x14e9419d0 <line:18:3, line:22:3>
    |   | |-ImplicitCastExpr 0x14e941710 <line:18:7> 'struct ebt_entry_match *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x14e9416f0 <col:7> 'struct ebt_entry_match *' lvalue Var 0x14e941468 'match_kern' 'struct ebt_entry_match *'
    |   | `-CompoundStmt 0x14e9419a8 <col:19, line:22:3>
    |   |   |-DeclStmt 0x14e9417a8 <line:19:4, col:13>
    |   |   | `-VarDecl 0x14e941740 <col:4, col:10> col:10 used tmp 'char *'
    |   |   |-BinaryOperator 0x14e9418c0 <line:20:4, col:41> 'char *' contains-errors '='
    |   |   | |-DeclRefExpr 0x14e9417c0 <col:4> 'char *' lvalue Var 0x14e941740 'tmp' 'char *'
    |   |   | `-BinaryOperator 0x14e9418a0 <col:10, col:41> '<dependent type>' contains-errors '+'
    |   |   |   |-RecoveryExpr 0x14e941818 <col:10, col:17> '<dependent type>' contains-errors lvalue
    |   |   |   | `-DeclRefExpr 0x14e9417e0 <col:10> 'struct ebt_entries_buf_state *' lvalue ParmVar 0x14e940c28 'state' 'struct ebt_entries_buf_state *'
    |   |   |   `-RecoveryExpr 0x14e941878 <col:34, col:41> '<dependent type>' contains-errors lvalue
    |   |   |     `-DeclRefExpr 0x14e941840 <col:34> 'struct ebt_entries_buf_state *' lvalue ParmVar 0x14e940c28 'state' 'struct ebt_entries_buf_state *'
    |   |   `-BinaryOperator 0x14e941988 <line:21:4, col:44> 'struct ebt_entry_match *' '='
    |   |     |-DeclRefExpr 0x14e9418e0 <col:4> 'struct ebt_entry_match *' lvalue Var 0x14e941468 'match_kern' 'struct ebt_entry_match *'
    |   |     `-CStyleCastExpr 0x14e941960 <col:17, col:44> 'struct ebt_entry_match *' <BitCast>
    |   |       `-ImplicitCastExpr 0x14e941948 <col:44> 'char *' <LValueToRValue> part_of_explicit_cast
    |   |         `-DeclRefExpr 0x14e941900 <col:44> 'char *' lvalue Var 0x14e941740 'tmp' 'char *'
    |   |-IfStmt 0x14f0084e0 <line:24:3, line:25:11>
    |   | |-BinaryOperator 0x14f008478 <line:24:7, col:13> 'int' '<'
    |   | | |-ImplicitCastExpr 0x14f008460 <col:7> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x14f008420 <col:7> 'int' lvalue Var 0x14e941518 'ret' 'int'
    |   | | `-IntegerLiteral 0x14f008440 <col:13> 'int' 0
    |   | `-ReturnStmt 0x14f0084d0 <line:25:4, col:11>
    |   |   `-ImplicitCastExpr 0x14f0084b8 <col:11> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x14f008498 <col:11> 'int' lvalue Var 0x14e941518 'ret' 'int'
    |   |-BinaryOperator 0x14f008898 <line:29:3, col:58> 'int' '='
    |   | |-DeclRefExpr 0x14f008590 <col:3> 'int' lvalue Var 0x14e941518 'ret' 'int'
    |   | `-CallExpr 0x14f008850 <col:9, col:58> 'int'
    |   |   |-ImplicitCastExpr 0x14f008838 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   |   | `-DeclRefExpr 0x14f008690 <col:9> 'int ()' Function 0x14f0085d8 'ebt_buf_add_pad' 'int ()'
    |   |   |-ImplicitCastExpr 0x14f008880 <col:25> 'struct ebt_entries_buf_state *' <LValueToRValue>
    |   |   | `-DeclRefExpr 0x14f0086b0 <col:25> 'struct ebt_entries_buf_state *' lvalue ParmVar 0x14e940c28 'state' 'struct ebt_entries_buf_state *'
    |   |   `-CallExpr 0x14f008818 <col:32, col:57> 'int'
    |   |     `-ImplicitCastExpr 0x14f008800 <col:32> 'int (*)()' <FunctionToPointerDecay>
    |   |       `-DeclRefExpr 0x14f0087b0 <col:32> 'int ()' Function 0x14f0086f8 'ebt_compat_entry_padsize' 'int ()'
    |   |-IfStmt 0x14f008978 <line:30:3, line:31:11>
    |   | |-BinaryOperator 0x14f008910 <line:30:7, col:13> 'int' '<'
    |   | | |-ImplicitCastExpr 0x14f0088f8 <col:7> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x14f0088b8 <col:7> 'int' lvalue Var 0x14e941518 'ret' 'int'
    |   | | `-IntegerLiteral 0x14f0088d8 <col:13> 'int' 0
    |   | `-ReturnStmt 0x14f008968 <line:31:4, col:11>
    |   |   `-ImplicitCastExpr 0x14f008950 <col:11> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x14f008930 <col:11> 'int' lvalue Var 0x14e941518 'ret' 'int'
    |   |-IfStmt 0x14f008ae0 <line:33:3, line:34:12>
    |   | |-BinaryOperator 0x14f008a18 <line:33:7, col:29> 'int' contains-errors '>'
    |   | | |-RecoveryExpr 0x14f0089d0 <col:7, col:16> '<dependent type>' contains-errors lvalue
    |   | | | `-DeclRefExpr 0x14f008998 <col:7> 'struct compat_ebt_entry_mwt *' lvalue ParmVar 0x14e928648 'match32' 'struct compat_ebt_entry_mwt *'
    |   | | `-DeclRefExpr 0x14f0089f8 <col:29> 'unsigned int' lvalue ParmVar 0x14e9286c8 'size_left' 'unsigned int'
    |   | `-ReturnStmt 0x14f008ad0 <line:34:4, col:12>
    |   |   `-UnaryOperator 0x14f008ab8 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |     `-ImplicitCastExpr 0x14f008aa0 <col:12> '<dependent type>' contains-errors <LValueToRValue>
    |   |       `-RecoveryExpr 0x14f008a80 <col:12> '<dependent type>' contains-errors lvalue
    |   |-CompoundAssignOperator 0x14f008b80 <line:36:3, col:25> 'unsigned int' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   | |-DeclRefExpr 0x14f008b00 <col:3> 'unsigned int' lvalue ParmVar 0x14e9286c8 'size_left' 'unsigned int'
    |   | `-RecoveryExpr 0x14f008b58 <col:16, col:25> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x14f008b20 <col:16> 'struct compat_ebt_entry_mwt *' lvalue ParmVar 0x14e928648 'match32' 'struct compat_ebt_entry_mwt *'
    |   |-BinaryOperator 0x14f008d90 <line:38:3, col:56> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x14f008bb0 <col:3> 'int' lvalue Var 0x14e941518 'ret' 'int'
    |   | `-CallExpr 0x14f008d50 <col:9, col:56> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x14f008cb0 <col:9> 'int ()' Function 0x14f008bf8 'compat_mtw_from_user' 'int ()'
    |   |   |-DeclRefExpr 0x14f008cd0 <col:30> 'struct compat_ebt_entry_mwt *' lvalue ParmVar 0x14e928648 'match32' 'struct compat_ebt_entry_mwt *'
    |   |   |-RecoveryExpr 0x14f008cf0 <col:39> '<dependent type>' contains-errors lvalue
    |   |   |-DeclRefExpr 0x14f008d10 <col:45> 'struct ebt_entries_buf_state *' lvalue ParmVar 0x14e940c28 'state' 'struct ebt_entries_buf_state *'
    |   |   `-DeclRefExpr 0x14f008d30 <col:52> 'const void *' lvalue ParmVar 0x14e940cd8 'base' 'const void *'
    |   |-IfStmt 0x14f008e70 <line:39:3, line:40:11>
    |   | |-BinaryOperator 0x14f008e08 <line:39:7, col:13> 'int' '<'
    |   | | |-ImplicitCastExpr 0x14f008df0 <col:7> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x14f008db0 <col:7> 'int' lvalue Var 0x14e941518 'ret' 'int'
    |   | | `-IntegerLiteral 0x14f008dd0 <col:13> 'int' 0
    |   | `-ReturnStmt 0x14f008e60 <line:40:4, col:11>
    |   |   `-ImplicitCastExpr 0x14f008e48 <col:11> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x14f008e28 <col:11> 'int' lvalue Var 0x14e941518 'ret' 'int'
    |   |-IfStmt 0x14f009100 <line:42:3, line:43:12>
    |   | |-CallExpr 0x14f009030 <line:42:7, col:40> '<dependent type>' contains-errors
    |   | | |-DeclRefExpr 0x14f008f70 <col:7> 'int ()' Function 0x14f008eb8 'WARN_ON' 'int ()'
    |   | | `-BinaryOperator 0x14f009010 <col:15, col:30> 'int' contains-errors '<'
    |   | |   |-DeclRefExpr 0x14f008f90 <col:15> 'int' lvalue Var 0x14e941518 'ret' 'int'
    |   | |   `-RecoveryExpr 0x14f008fe8 <col:21, col:30> '<dependent type>' contains-errors lvalue
    |   | |     `-DeclRefExpr 0x14f008fb0 <col:21> 'struct compat_ebt_entry_mwt *' lvalue ParmVar 0x14e928648 'match32' 'struct compat_ebt_entry_mwt *'
    |   | `-ReturnStmt 0x14f0090f0 <line:43:4, col:12>
    |   |   `-UnaryOperator 0x14f0090d8 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |     `-ImplicitCastExpr 0x14f0090c0 <col:12> '<dependent type>' contains-errors <LValueToRValue>
    |   |       `-RecoveryExpr 0x14f0090a0 <col:12> '<dependent type>' contains-errors lvalue
    |   |-CompoundAssignOperator 0x14f00a600 <line:44:3, col:28> 'int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   | |-DeclRefExpr 0x14f009120 <col:3> 'int' lvalue Var 0x14e940f78 'growth' 'int'
    |   | `-BinaryOperator 0x14f0091c0 <col:13, col:28> '<dependent type>' contains-errors '-'
    |   |   |-DeclRefExpr 0x14f009140 <col:13> 'int' lvalue Var 0x14e941518 'ret' 'int'
    |   |   `-RecoveryExpr 0x14f009198 <col:19, col:28> '<dependent type>' contains-errors lvalue
    |   |     `-DeclRefExpr 0x14f009160 <col:19> 'struct compat_ebt_entry_mwt *' lvalue ParmVar 0x14e928648 'match32' 'struct compat_ebt_entry_mwt *'
    |   |-CompoundAssignOperator 0x14f00a6a8 <line:45:3, col:38> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |   | |-DeclRefExpr 0x14f00a630 <col:3> 'int' lvalue Var 0x14e940f78 'growth' 'int'
    |   | `-CallExpr 0x14f00a688 <col:13, col:38> 'int'
    |   |   `-ImplicitCastExpr 0x14f00a670 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |   |     `-DeclRefExpr 0x14f00a650 <col:13> 'int ()' Function 0x14f0086f8 'ebt_compat_entry_padsize' 'int ()'
    |   |-CompoundAssignOperator 0x14f00a7e8 <line:48:3, col:19> 'char *' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   | |-DeclRefExpr 0x14f00a768 <col:3> 'char *' lvalue Var 0x14e941030 'buf' 'char *'
    |   | `-RecoveryExpr 0x14f00a7c0 <col:10, col:19> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x14f00a788 <col:10> 'struct compat_ebt_entry_mwt *' lvalue ParmVar 0x14e928648 'match32' 'struct compat_ebt_entry_mwt *'
    |   |-IfStmt 0x14f00a8f0 <line:50:3, line:51:29>
    |   | |-ImplicitCastExpr 0x14f00a838 <line:50:7> 'struct ebt_entry_match *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x14f00a818 <col:7> 'struct ebt_entry_match *' lvalue Var 0x14e941468 'match_kern' 'struct ebt_entry_match *'
    |   | `-BinaryOperator 0x14f00a8d0 <line:51:4, col:29> '<dependent type>' contains-errors '='
    |   |   |-RecoveryExpr 0x14f00a888 <col:4, col:16> '<dependent type>' contains-errors lvalue
    |   |   | `-DeclRefExpr 0x14f00a850 <col:4> 'struct ebt_entry_match *' lvalue Var 0x14e941468 'match_kern' 'struct ebt_entry_match *'
    |   |   `-DeclRefExpr 0x14f00a8b0 <col:29> 'int' lvalue Var 0x14e941518 'ret' 'int'
    |   `-BinaryOperator 0x14f00aa78 <line:54:3, col:45> 'struct compat_ebt_entry_mwt *' '='
    |     |-DeclRefExpr 0x14f00a970 <col:3> 'struct compat_ebt_entry_mwt *' lvalue ParmVar 0x14e928648 'match32' 'struct compat_ebt_entry_mwt *'
    |     `-CStyleCastExpr 0x14f00aa50 <col:13, col:45> 'struct compat_ebt_entry_mwt *' <BitCast>
    |       `-ImplicitCastExpr 0x14f00aa38 <col:45> 'char *' <LValueToRValue> part_of_explicit_cast
    |         `-DeclRefExpr 0x14f00a990 <col:45> 'char *' lvalue Var 0x14e941030 'buf' 'char *'
    `-ReturnStmt 0x14f00ab88 <line:57:2, col:9>
      `-ImplicitCastExpr 0x14f00ab70 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x14f00ab50 <col:9> 'int' lvalue Var 0x14e940f78 'growth' 'int'
