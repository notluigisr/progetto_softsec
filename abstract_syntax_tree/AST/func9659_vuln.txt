TranslationUnitDecl 0x123055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1230564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x123055bd0 '__int128'
|-TypedefDecl 0x123056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x123055bf0 'unsigned __int128'
|-TypedefDecl 0x12380be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12380bc00 'struct __NSConstantString_tag'
|   `-Record 0x123056580 '__NSConstantString_tag'
|-TypedefDecl 0x12380be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x123055d90 '__SVInt8_t'
|-TypedefDecl 0x12380bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x123055db0 '__SVInt16_t'
|-TypedefDecl 0x12380bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x123055dd0 '__SVInt32_t'
|-TypedefDecl 0x12380bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x123055df0 '__SVInt64_t'
|-TypedefDecl 0x12380c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x123055e10 '__SVUint8_t'
|-TypedefDecl 0x12380c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x123055e30 '__SVUint16_t'
|-TypedefDecl 0x12380c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x123055e50 '__SVUint32_t'
|-TypedefDecl 0x12380c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x123055e70 '__SVUint64_t'
|-TypedefDecl 0x12380c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x123055e90 '__SVFloat16_t'
|-TypedefDecl 0x12380c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x123055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12380c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x123055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12380c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x123055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12380c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x123055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12380c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x123055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12380c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x123055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12380c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x123055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12380c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x123055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12380c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x123055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12380c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x123055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12380c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x123055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12380c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x123056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12380c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x123056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12380c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x123056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12380c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x123056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12380c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x123056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12380c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1230560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12380c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1230560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12380c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1230560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12380c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x123056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12380ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x123056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12380cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x123056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12380cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x123056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12380cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x123056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12380d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1230561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12380d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1230561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12380d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1230561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12380d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x123056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12380d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x123056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12380d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x123056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12380d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x123056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12380d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x123056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12380d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1230562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12380d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1230562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12380d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1230562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12380d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x123056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12380d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x123056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12380d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x123056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12380d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x123056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12380da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x123056390 '__SVBool_t'
|-TypedefDecl 0x12380da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1230563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12380dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1230563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12380db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1230563f0 '__SVCount_t'
|-TypedefDecl 0x12380dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12380dbb0 'char *'
|   `-BuiltinType 0x1230556b0 'char'
|-TypedefDecl 0x12380dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12380dbb0 'char *'
|   `-BuiltinType 0x1230556b0 'char'
`-FunctionDecl 0x12380dfa8 <dataset_diviso_filec/func9659_vuln.c:1:1, line:48:1> line:1:12 invalid decode_dds1 'int (int *, int *, int, int)' static
  |-ParmVarDecl 0x12380dd28 <col:24, col:40> col:40 invalid gb 'int *'
  |-ParmVarDecl 0x12380dda8 <col:44, col:53> col:53 referenced invalid frame 'int *'
  |-ParmVarDecl 0x12380de28 <col:60, col:64> col:64 used width 'int'
  |-ParmVarDecl 0x12380dea8 <col:71, col:75> col:75 used height 'int'
  `-CompoundStmt 0x123124350 <line:2:1, line:48:1>
    |-DeclStmt 0x12380e110 <line:3:5, col:39>
    | `-VarDecl 0x12380e088 <col:5, col:20> col:20 invalid frame_start 'const int *'
    |-DeclStmt 0x12380e278 <line:4:5, col:56>
    | `-VarDecl 0x12380e140 <col:5, col:20> col:20 invalid frame_end 'const int *'
    |-DeclStmt 0x12380e3e8 <line:5:5, col:35>
    | |-VarDecl 0x12380e2a8 <col:5, col:16> col:9 used mask 'int' cinit
    | | `-IntegerLiteral 0x12380e310 <col:16> 'int' 65536
    | `-VarDecl 0x12380e348 <col:5, col:34> col:25 used bitbuf 'int' cinit
    |   `-IntegerLiteral 0x12380e3b0 <col:34> 'int' 0
    |-DeclStmt 0x1238276b0 <line:6:5, col:38>
    | |-VarDecl 0x123827418 <col:5, col:9> col:9 used i 'int'
    | |-VarDecl 0x123827498 <col:5, col:12> col:12 used v 'int'
    | |-VarDecl 0x123827518 <col:5, col:15> col:15 used offset 'int'
    | |-VarDecl 0x123827598 <col:5, col:23> col:23 used count 'int'
    | `-VarDecl 0x123827618 <col:5, col:30> col:30 used segments 'int'
    |-BinaryOperator 0x1238278a8 <line:8:5, col:39> 'int' contains-errors '='
    | |-DeclRefExpr 0x1238276c8 <col:5> 'int' lvalue Var 0x123827618 'segments' 'int'
    | `-CallExpr 0x123827880 <col:16, col:39> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x123827840 <col:16> 'int ()' Function 0x123827788 'bytestream2_get_le16' 'int ()'
    |   `-RecoveryExpr 0x123827860 <col:37> '<dependent type>' contains-errors lvalue
    |-WhileStmt 0x123124300 <line:9:5, line:45:5>
    | |-UnaryOperator 0x1238278e8 <line:9:12, col:20> 'int' postfix '--'
    | | `-DeclRefExpr 0x1238278c8 <col:12> 'int' lvalue Var 0x123827618 'segments' 'int'
    | `-CompoundStmt 0x1231242d0 <col:24, line:45:5>
    |   |-IfStmt 0x123827ad0 <line:10:9, line:11:20>
    |   | |-BinaryOperator 0x123827a68 <line:10:13, col:46> 'int' contains-errors '<'
    |   | | |-CallExpr 0x123827a20 <col:13, col:42> '<dependent type>' contains-errors
    |   | | | |-DeclRefExpr 0x1238279e0 <col:13> 'int ()' Function 0x123827928 'bytestream2_get_bytes_left' 'int ()'
    |   | | | `-RecoveryExpr 0x123827a00 <col:40> '<dependent type>' contains-errors lvalue
    |   | | `-IntegerLiteral 0x123827a48 <col:46> 'int' 2
    |   | `-ReturnStmt 0x123827ac0 <line:11:13, col:20>
    |   |   `-RecoveryExpr 0x123827aa0 <col:20> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x123827d70 <line:12:9, line:15:9>
    |   | |-BinaryOperator 0x123827b48 <line:12:13, col:21> 'int' '=='
    |   | | |-ImplicitCastExpr 0x123827b30 <col:13> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x123827af0 <col:13> 'int' lvalue Var 0x12380e2a8 'mask' 'int'
    |   | | `-IntegerLiteral 0x123827b10 <col:21> 'int' 65536
    |   | `-CompoundStmt 0x123827d50 <col:30, line:15:9>
    |   |   |-BinaryOperator 0x123827cd0 <line:13:13, col:46> 'int' contains-errors '='
    |   |   | |-DeclRefExpr 0x123827b68 <col:13> 'int' lvalue Var 0x12380e348 'bitbuf' 'int'
    |   |   | `-CallExpr 0x123827ca8 <col:22, col:46> '<dependent type>' contains-errors
    |   |   |   |-DeclRefExpr 0x123827c68 <col:22> 'int ()' Function 0x123827bb0 'bytestream2_get_le16u' 'int ()'
    |   |   |   `-RecoveryExpr 0x123827c88 <col:44> '<dependent type>' contains-errors lvalue
    |   |   `-BinaryOperator 0x123827d30 <line:14:13, col:20> 'int' '='
    |   |     |-DeclRefExpr 0x123827cf0 <col:13> 'int' lvalue Var 0x12380e2a8 'mask' 'int'
    |   |     `-IntegerLiteral 0x123827d10 <col:20> 'int' 1
    |   |-IfStmt 0x123124218 <line:17:9, line:43:9> has_else
    |   | |-BinaryOperator 0x123827e00 <line:17:13, col:22> 'int' '&'
    |   | | |-ImplicitCastExpr 0x123827dd0 <col:13> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x123827d90 <col:13> 'int' lvalue Var 0x12380e348 'bitbuf' 'int'
    |   | | `-ImplicitCastExpr 0x123827de8 <col:22> 'int' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x123827db0 <col:22> 'int' lvalue Var 0x12380e2a8 'mask' 'int'
    |   | |-CompoundStmt 0x123123398 <col:28, line:29:9>
    |   | | |-BinaryOperator 0x123827ea8 <line:18:13, col:40> 'int' contains-errors '='
    |   | | | |-DeclRefExpr 0x123827e20 <col:13> 'int' lvalue Var 0x123827498 'v' 'int'
    |   | | | `-CallExpr 0x123827e80 <col:17, col:40> '<dependent type>' contains-errors
    |   | | |   |-DeclRefExpr 0x123827e40 <col:17> 'int ()' Function 0x123827788 'bytestream2_get_le16' 'int ()'
    |   | | |   `-RecoveryExpr 0x123827e60 <col:38> '<dependent type>' contains-errors lvalue
    |   | | |-BinaryOperator 0x123827fc0 <line:19:13, col:38> 'int' '='
    |   | | | |-DeclRefExpr 0x123827ec8 <col:13> 'int' lvalue Var 0x123827518 'offset' 'int'
    |   | | | `-BinaryOperator 0x123827fa0 <col:22, col:38> 'int' '<<'
    |   | | |   |-ParenExpr 0x123827f60 <col:22, col:33> 'int'
    |   | | |   | `-BinaryOperator 0x123827f40 <col:23, col:27> 'int' '&'
    |   | | |   |   |-ImplicitCastExpr 0x123827f28 <col:23> 'int' <LValueToRValue>
    |   | | |   |   | `-DeclRefExpr 0x123827ee8 <col:23> 'int' lvalue Var 0x123827498 'v' 'int'
    |   | | |   |   `-IntegerLiteral 0x123827f08 <col:27> 'int' 8191
    |   | | |   `-IntegerLiteral 0x123827f80 <col:38> 'int' 2
    |   | | |-BinaryOperator 0x123828138 <line:20:13, col:40> 'int' '='
    |   | | | |-DeclRefExpr 0x123827fe0 <col:13> 'int' lvalue Var 0x123827598 'count' 'int'
    |   | | | `-BinaryOperator 0x123828118 <col:21, col:40> 'int' '<<'
    |   | | |   |-ParenExpr 0x1238280d8 <col:21, col:35> 'int'
    |   | | |   | `-BinaryOperator 0x1238280b8 <col:22, col:34> 'int' '+'
    |   | | |   |   |-ParenExpr 0x123828078 <col:22, col:30> 'int'
    |   | | |   |   | `-BinaryOperator 0x123828058 <col:23, col:28> 'int' '>>'
    |   | | |   |   |   |-ImplicitCastExpr 0x123828040 <col:23> 'int' <LValueToRValue>
    |   | | |   |   |   | `-DeclRefExpr 0x123828000 <col:23> 'int' lvalue Var 0x123827498 'v' 'int'
    |   | | |   |   |   `-IntegerLiteral 0x123828020 <col:28> 'int' 13
    |   | | |   |   `-IntegerLiteral 0x123828098 <col:34> 'int' 2
    |   | | |   `-IntegerLiteral 0x1238280f8 <col:40> 'int' 1
    |   | | |-IfStmt 0x1238283b0 <line:21:13, line:22:24>
    |   | | | |-BinaryOperator 0x123828348 <line:21:17, col:79> 'int' contains-errors '||'
    |   | | | | |-BinaryOperator 0x1238281d8 <col:17, col:39> 'int' contains-errors '<'
    |   | | | | | |-BinaryOperator 0x123828198 <col:17, col:25> '<dependent type>' contains-errors '-'
    |   | | | | | | |-RecoveryExpr 0x123828158 <col:17> '<dependent type>' contains-errors lvalue
    |   | | | | | | `-RecoveryExpr 0x123828178 <col:25> '<dependent type>' contains-errors lvalue
    |   | | | | | `-DeclRefExpr 0x1238281b8 <col:39> 'int' lvalue Var 0x123827518 'offset' 'int'
    |   | | | | `-BinaryOperator 0x123828328 <col:49, col:79> 'int' contains-errors '<'
    |   | | | |   |-BinaryOperator 0x123828238 <col:49, col:61> '<dependent type>' contains-errors '-'
    |   | | | |   | |-RecoveryExpr 0x1238281f8 <col:49> '<dependent type>' contains-errors lvalue
    |   | | | |   | `-RecoveryExpr 0x123828218 <col:61> '<dependent type>' contains-errors lvalue
    |   | | | |   `-BinaryOperator 0x123828308 <col:69, col:79> 'int' '+'
    |   | | | |     |-BinaryOperator 0x1238282b0 <col:69, col:75> 'int' '*'
    |   | | | |     | |-ImplicitCastExpr 0x123828298 <col:69> 'int' <LValueToRValue>
    |   | | | |     | | `-DeclRefExpr 0x123828258 <col:69> 'int' lvalue Var 0x123827598 'count' 'int'
    |   | | | |     | `-IntegerLiteral 0x123828278 <col:75> 'int' 2
    |   | | | |     `-ImplicitCastExpr 0x1238282f0 <col:79> 'int' <LValueToRValue>
    |   | | | |       `-DeclRefExpr 0x1238282d0 <col:79> 'int' lvalue ParmVar 0x12380de28 'width' 'int'
    |   | | | `-ReturnStmt 0x1238283a0 <line:22:17, col:24>
    |   | | |   `-RecoveryExpr 0x123828380 <col:24> '<dependent type>' contains-errors lvalue
    |   | | `-ForStmt 0x123123360 <line:23:13, line:28:13>
    |   | |   |-BinaryOperator 0x123122e20 <line:23:18, col:22> 'int' '='
    |   | |   | |-DeclRefExpr 0x1238283d0 <col:18> 'int' lvalue Var 0x123827418 'i' 'int'
    |   | |   | `-IntegerLiteral 0x123122e00 <col:22> 'int' 0
    |   | |   |-<<<NULL>>>
    |   | |   |-BinaryOperator 0x123122eb0 <col:25, col:29> 'int' '<'
    |   | |   | |-ImplicitCastExpr 0x123122e80 <col:25> 'int' <LValueToRValue>
    |   | |   | | `-DeclRefExpr 0x123122e40 <col:25> 'int' lvalue Var 0x123827418 'i' 'int'
    |   | |   | `-ImplicitCastExpr 0x123122e98 <col:29> 'int' <LValueToRValue>
    |   | |   |   `-DeclRefExpr 0x123122e60 <col:29> 'int' lvalue Var 0x123827598 'count' 'int'
    |   | |   |-UnaryOperator 0x123122ef0 <col:36, col:37> 'int' postfix '++'
    |   | |   | `-DeclRefExpr 0x123122ed0 <col:36> 'int' lvalue Var 0x123827418 'i' 'int'
    |   | |   `-CompoundStmt 0x123123340 <col:41, line:28:13>
    |   | |     |-BinaryOperator 0x123123288 <line:24:17, line:25:64> '<dependent type>' contains-errors '='
    |   | |     | |-ArraySubscriptExpr 0x123122f88 <line:24:17, col:24> '<dependent type>' contains-errors lvalue
    |   | |     | | |-ImplicitCastExpr 0x123122f70 <col:17> '<dependent type>' contains-errors <LValueToRValue>
    |   | |     | | | `-RecoveryExpr 0x123122f28 <col:17> '<dependent type>' contains-errors lvalue
    |   | |     | | |   `-DeclRefExpr 0x123122f08 <col:17> 'int *' lvalue ParmVar 0x12380dda8 'frame' 'int *'
    |   | |     | | `-IntegerLiteral 0x123122f50 <col:23> 'int' 0
    |   | |     | `-BinaryOperator 0x123123268 <col:28, line:25:64> '<dependent type>' contains-errors '='
    |   | |     |   |-ArraySubscriptExpr 0x123123000 <line:24:28, col:35> '<dependent type>' contains-errors lvalue
    |   | |     |   | |-ImplicitCastExpr 0x123122fe8 <col:28> '<dependent type>' contains-errors <LValueToRValue>
    |   | |     |   | | `-RecoveryExpr 0x123122fa8 <col:28> '<dependent type>' contains-errors lvalue
    |   | |     |   | `-IntegerLiteral 0x123122fc8 <col:34> 'int' 1
    |   | |     |   `-BinaryOperator 0x123123248 <line:25:17, col:64> '<dependent type>' contains-errors '='
    |   | |     |     |-ArraySubscriptExpr 0x123123090 <col:17, col:28> '<dependent type>' contains-errors lvalue
    |   | |     |     | |-ImplicitCastExpr 0x123123060 <col:17> '<dependent type>' contains-errors <LValueToRValue>
    |   | |     |     | | `-RecoveryExpr 0x123123020 <col:17> '<dependent type>' contains-errors lvalue
    |   | |     |     | `-ImplicitCastExpr 0x123123078 <col:23> 'int' <LValueToRValue>
    |   | |     |     |   `-DeclRefExpr 0x123123040 <col:23> 'int' lvalue ParmVar 0x12380de28 'width' 'int'
    |   | |     |     `-BinaryOperator 0x123123228 <col:32, col:64> '<dependent type>' contains-errors '='
    |   | |     |       |-ArraySubscriptExpr 0x123123160 <col:32, col:47> '<dependent type>' contains-errors lvalue
    |   | |     |       | |-ImplicitCastExpr 0x123123148 <col:32> '<dependent type>' contains-errors <LValueToRValue>
    |   | |     |       | | `-RecoveryExpr 0x1231230b0 <col:32> '<dependent type>' contains-errors lvalue
    |   | |     |       | `-BinaryOperator 0x123123128 <col:38, col:46> 'int' '+'
    |   | |     |       |   |-ImplicitCastExpr 0x123123110 <col:38> 'int' <LValueToRValue>
    |   | |     |       |   | `-DeclRefExpr 0x1231230d0 <col:38> 'int' lvalue ParmVar 0x12380de28 'width' 'int'
    |   | |     |       |   `-IntegerLiteral 0x1231230f0 <col:46> 'int' 1
    |   | |     |       `-ArraySubscriptExpr 0x123123208 <col:51, col:64> '<dependent type>' contains-errors lvalue
    |   | |     |         |-ImplicitCastExpr 0x1231231f0 <col:51> '<dependent type>' contains-errors <LValueToRValue>
    |   | |     |         | `-RecoveryExpr 0x123123180 <col:51> '<dependent type>' contains-errors lvalue
    |   | |     |         `-UnaryOperator 0x1231231d8 <col:57, col:58> 'int' prefix '-'
    |   | |     |           `-ImplicitCastExpr 0x1231231c0 <col:58> 'int' <LValueToRValue>
    |   | |     |             `-DeclRefExpr 0x1231231a0 <col:58> 'int' lvalue Var 0x123827518 'offset' 'int'
    |   | |     `-CompoundAssignOperator 0x123123310 <line:27:17, col:26> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   | |       |-RecoveryExpr 0x1231232c8 <col:17> '<dependent type>' contains-errors lvalue
    |   | |       | `-DeclRefExpr 0x1231232a8 <col:17> 'int *' lvalue ParmVar 0x12380dda8 'frame' 'int *'
    |   | |       `-IntegerLiteral 0x1231232f0 <col:26> 'int' 2
    |   | `-IfStmt 0x1231241e8 <line:29:16, line:43:9> has_else
    |   |   |-BinaryOperator 0x1231234a0 <line:29:20, col:39> 'int' '&'
    |   |   | |-ImplicitCastExpr 0x123123488 <col:20> 'int' <LValueToRValue>
    |   |   | | `-DeclRefExpr 0x1231233d0 <col:20> 'int' lvalue Var 0x12380e348 'bitbuf' 'int'
    |   |   | `-ParenExpr 0x123123468 <col:29, col:39> 'int'
    |   |   |   `-BinaryOperator 0x123123448 <col:30, col:38> 'int' '<<'
    |   |   |     |-ImplicitCastExpr 0x123123430 <col:30> 'int' <LValueToRValue>
    |   |   |     | `-DeclRefExpr 0x1231233f0 <col:30> 'int' lvalue Var 0x12380e2a8 'mask' 'int'
    |   |   |     `-IntegerLiteral 0x123123410 <col:38> 'int' 1
    |   |   |-CompoundStmt 0x123123748 <col:42, line:34:9>
    |   |   | |-BinaryOperator 0x123123588 <line:30:13, col:42> 'int' contains-errors '='
    |   |   | | |-DeclRefExpr 0x1231234c0 <col:13> 'int' lvalue Var 0x123827498 'v' 'int'
    |   |   | | `-BinaryOperator 0x123123568 <col:17, col:42> '<dependent type>' contains-errors '*'
    |   |   | |   |-CallExpr 0x123123520 <col:17, col:40> '<dependent type>' contains-errors
    |   |   | |   | |-DeclRefExpr 0x1231234e0 <col:17> 'int ()' Function 0x123827788 'bytestream2_get_le16' 'int ()'
    |   |   | |   | `-RecoveryExpr 0x123123500 <col:38> '<dependent type>' contains-errors lvalue
    |   |   | |   `-IntegerLiteral 0x123123548 <col:42> 'int' 2
    |   |   | |-IfStmt 0x123123690 <line:31:13, line:32:24>
    |   |   | | |-BinaryOperator 0x123123628 <line:31:17, col:37> 'int' contains-errors '<'
    |   |   | | | |-BinaryOperator 0x1231235e8 <col:17, col:25> '<dependent type>' contains-errors '-'
    |   |   | | | | |-RecoveryExpr 0x1231235a8 <col:17> '<dependent type>' contains-errors lvalue
    |   |   | | | | `-RecoveryExpr 0x1231235c8 <col:25> '<dependent type>' contains-errors lvalue
    |   |   | | | `-DeclRefExpr 0x123123608 <col:37> 'int' lvalue Var 0x123827498 'v' 'int'
    |   |   | | `-ReturnStmt 0x123123680 <line:32:17, col:24>
    |   |   | |   `-RecoveryExpr 0x123123660 <col:24> '<dependent type>' contains-errors lvalue
    |   |   | `-CompoundAssignOperator 0x123123718 <line:33:13, col:22> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   |   |   |-RecoveryExpr 0x1231236d0 <col:13> '<dependent type>' contains-errors lvalue
    |   |   |   | `-DeclRefExpr 0x1231236b0 <col:13> 'int *' lvalue ParmVar 0x12380dda8 'frame' 'int *'
    |   |   |   `-DeclRefExpr 0x1231236f8 <col:22> 'int' lvalue Var 0x123827498 'v' 'int'
    |   |   `-CompoundStmt 0x1231241b0 <line:34:16, line:43:9>
    |   |     |-IfStmt 0x1231238b0 <line:35:13, line:36:24>
    |   |     | |-BinaryOperator 0x123123848 <line:35:17, col:45> 'int' contains-errors '<'
    |   |     | | |-BinaryOperator 0x1231237b0 <col:17, col:29> '<dependent type>' contains-errors '-'
    |   |     | | | |-RecoveryExpr 0x123123770 <col:17> '<dependent type>' contains-errors lvalue
    |   |     | | | `-RecoveryExpr 0x123123790 <col:29> '<dependent type>' contains-errors lvalue
    |   |     | | `-BinaryOperator 0x123123828 <col:37, col:45> 'int' '+'
    |   |     | |   |-ImplicitCastExpr 0x123123810 <col:37> 'int' <LValueToRValue>
    |   |     | |   | `-DeclRefExpr 0x1231237d0 <col:37> 'int' lvalue ParmVar 0x12380de28 'width' 'int'
    |   |     | |   `-IntegerLiteral 0x1231237f0 <col:45> 'int' 3
    |   |     | `-ReturnStmt 0x1231238a0 <line:36:17, col:24>
    |   |     |   `-RecoveryExpr 0x123123880 <col:24> '<dependent type>' contains-errors lvalue
    |   |     |-BinaryOperator 0x123123cf0 <line:37:13, line:38:71> '<dependent type>' contains-errors '='
    |   |     | |-ArraySubscriptExpr 0x123123950 <line:37:13, col:20> '<dependent type>' contains-errors lvalue
    |   |     | | |-ImplicitCastExpr 0x123123938 <col:13> '<dependent type>' contains-errors <LValueToRValue>
    |   |     | | | `-RecoveryExpr 0x1231238f0 <col:13> '<dependent type>' contains-errors lvalue
    |   |     | | |   `-DeclRefExpr 0x1231238d0 <col:13> 'int *' lvalue ParmVar 0x12380dda8 'frame' 'int *'
    |   |     | | `-IntegerLiteral 0x123123918 <col:19> 'int' 0
    |   |     | `-BinaryOperator 0x123123cd0 <col:24, line:38:71> '<dependent type>' contains-errors '='
    |   |     |   |-ArraySubscriptExpr 0x1231239c8 <line:37:24, col:31> '<dependent type>' contains-errors lvalue
    |   |     |   | |-ImplicitCastExpr 0x1231239b0 <col:24> '<dependent type>' contains-errors <LValueToRValue>
    |   |     |   | | `-RecoveryExpr 0x123123970 <col:24> '<dependent type>' contains-errors lvalue
    |   |     |   | `-IntegerLiteral 0x123123990 <col:30> 'int' 1
    |   |     |   `-BinaryOperator 0x123123cb0 <line:38:13, col:71> '<dependent type>' contains-errors '='
    |   |     |     |-ArraySubscriptExpr 0x123123a58 <col:13, col:24> '<dependent type>' contains-errors lvalue
    |   |     |     | |-ImplicitCastExpr 0x123123a28 <col:13> '<dependent type>' contains-errors <LValueToRValue>
    |   |     |     | | `-RecoveryExpr 0x1231239e8 <col:13> '<dependent type>' contains-errors lvalue
    |   |     |     | `-ImplicitCastExpr 0x123123a40 <col:19> 'int' <LValueToRValue>
    |   |     |     |   `-DeclRefExpr 0x123123a08 <col:19> 'int' lvalue ParmVar 0x12380de28 'width' 'int'
    |   |     |     `-BinaryOperator 0x123123c90 <col:28, col:71> '<dependent type>' contains-errors '='
    |   |     |       |-ArraySubscriptExpr 0x123123b28 <col:28, col:43> '<dependent type>' contains-errors lvalue
    |   |     |       | |-ImplicitCastExpr 0x123123b10 <col:28> '<dependent type>' contains-errors <LValueToRValue>
    |   |     |       | | `-RecoveryExpr 0x123123a78 <col:28> '<dependent type>' contains-errors lvalue
    |   |     |       | `-BinaryOperator 0x123123af0 <col:34, col:42> 'int' '+'
    |   |     |       |   |-ImplicitCastExpr 0x123123ad8 <col:34> 'int' <LValueToRValue>
    |   |     |       |   | `-DeclRefExpr 0x123123a98 <col:34> 'int' lvalue ParmVar 0x12380de28 'width' 'int'
    |   |     |       |   `-IntegerLiteral 0x123123ab8 <col:42> 'int' 1
    |   |     |       `-CallExpr 0x123123c68 <col:48, col:71> '<dependent type>' contains-errors
    |   |     |         |-DeclRefExpr 0x123123c28 <col:48> 'int ()' Function 0x123123b70 'bytestream2_get_byte' 'int ()'
    |   |     |         `-RecoveryExpr 0x123123c48 <col:69> '<dependent type>' contains-errors lvalue
    |   |     |-CompoundAssignOperator 0x123123d78 <line:39:13, col:22> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   |     | |-RecoveryExpr 0x123123d30 <col:13> '<dependent type>' contains-errors lvalue
    |   |     | | `-DeclRefExpr 0x123123d10 <col:13> 'int *' lvalue ParmVar 0x12380dda8 'frame' 'int *'
    |   |     | `-IntegerLiteral 0x123123d58 <col:22> 'int' 2
    |   |     |-BinaryOperator 0x1231240f8 <line:40:13, line:41:71> '<dependent type>' contains-errors '='
    |   |     | |-ArraySubscriptExpr 0x123123e38 <line:40:13, col:20> '<dependent type>' contains-errors lvalue
    |   |     | | |-ImplicitCastExpr 0x123123e20 <col:13> '<dependent type>' contains-errors <LValueToRValue>
    |   |     | | | `-RecoveryExpr 0x123123dc8 <col:13> '<dependent type>' contains-errors lvalue
    |   |     | | |   `-DeclRefExpr 0x123123da8 <col:13> 'int *' lvalue ParmVar 0x12380dda8 'frame' 'int *'
    |   |     | | `-IntegerLiteral 0x123123e00 <col:19> 'int' 0
    |   |     | `-BinaryOperator 0x1231240d8 <col:24, line:41:71> '<dependent type>' contains-errors '='
    |   |     |   |-ArraySubscriptExpr 0x123123eb0 <line:40:24, col:31> '<dependent type>' contains-errors lvalue
    |   |     |   | |-ImplicitCastExpr 0x123123e98 <col:24> '<dependent type>' contains-errors <LValueToRValue>
    |   |     |   | | `-RecoveryExpr 0x123123e58 <col:24> '<dependent type>' contains-errors lvalue
    |   |     |   | `-IntegerLiteral 0x123123e78 <col:30> 'int' 1
    |   |     |   `-BinaryOperator 0x1231240b8 <line:41:13, col:71> '<dependent type>' contains-errors '='
    |   |     |     |-ArraySubscriptExpr 0x123123f40 <col:13, col:24> '<dependent type>' contains-errors lvalue
    |   |     |     | |-ImplicitCastExpr 0x123123f10 <col:13> '<dependent type>' contains-errors <LValueToRValue>
    |   |     |     | | `-RecoveryExpr 0x123123ed0 <col:13> '<dependent type>' contains-errors lvalue
    |   |     |     | `-ImplicitCastExpr 0x123123f28 <col:19> 'int' <LValueToRValue>
    |   |     |     |   `-DeclRefExpr 0x123123ef0 <col:19> 'int' lvalue ParmVar 0x12380de28 'width' 'int'
    |   |     |     `-BinaryOperator 0x123124098 <col:28, col:71> '<dependent type>' contains-errors '='
    |   |     |       |-ArraySubscriptExpr 0x123124010 <col:28, col:43> '<dependent type>' contains-errors lvalue
    |   |     |       | |-ImplicitCastExpr 0x123123ff8 <col:28> '<dependent type>' contains-errors <LValueToRValue>
    |   |     |       | | `-RecoveryExpr 0x123123f60 <col:28> '<dependent type>' contains-errors lvalue
    |   |     |       | `-BinaryOperator 0x123123fd8 <col:34, col:42> 'int' '+'
    |   |     |       |   |-ImplicitCastExpr 0x123123fc0 <col:34> 'int' <LValueToRValue>
    |   |     |       |   | `-DeclRefExpr 0x123123f80 <col:34> 'int' lvalue ParmVar 0x12380de28 'width' 'int'
    |   |     |       |   `-IntegerLiteral 0x123123fa0 <col:42> 'int' 1
    |   |     |       `-CallExpr 0x123124070 <col:48, col:71> '<dependent type>' contains-errors
    |   |     |         |-DeclRefExpr 0x123124030 <col:48> 'int ()' Function 0x123123b70 'bytestream2_get_byte' 'int ()'
    |   |     |         `-RecoveryExpr 0x123124050 <col:69> '<dependent type>' contains-errors lvalue
    |   |     `-CompoundAssignOperator 0x123124180 <line:42:13, col:22> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   |       |-RecoveryExpr 0x123124138 <col:13> '<dependent type>' contains-errors lvalue
    |   |       | `-DeclRefExpr 0x123124118 <col:13> 'int *' lvalue ParmVar 0x12380dda8 'frame' 'int *'
    |   |       `-IntegerLiteral 0x123124160 <col:22> 'int' 2
    |   `-CompoundAssignOperator 0x1231242a0 <line:44:9, col:18> 'int' '<<=' ComputeLHSTy='int' ComputeResultTy='int'
    |     |-DeclRefExpr 0x123124248 <col:9> 'int' lvalue Var 0x12380e2a8 'mask' 'int'
    |     `-IntegerLiteral 0x123124268 <col:18> 'int' 2
    `-ReturnStmt 0x123124340 <line:47:5, col:12>
      `-IntegerLiteral 0x123124320 <col:12> 'int' 0
