TranslationUnitDecl 0x14301bc08 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14301cab8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14301c1d0 '__int128'
|-TypedefDecl 0x14301cb28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14301c1f0 'unsigned __int128'
|-TypedefDecl 0x14283d630 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14283d400 'struct __NSConstantString_tag'
|   `-Record 0x14301cb80 '__NSConstantString_tag'
|-TypedefDecl 0x14283d698 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14301c390 '__SVInt8_t'
|-TypedefDecl 0x14283d700 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14301c3b0 '__SVInt16_t'
|-TypedefDecl 0x14283d768 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14301c3d0 '__SVInt32_t'
|-TypedefDecl 0x14283d7d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14301c3f0 '__SVInt64_t'
|-TypedefDecl 0x14283d838 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14301c410 '__SVUint8_t'
|-TypedefDecl 0x14283d8a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14301c430 '__SVUint16_t'
|-TypedefDecl 0x14283d908 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14301c450 '__SVUint32_t'
|-TypedefDecl 0x14283d970 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14301c470 '__SVUint64_t'
|-TypedefDecl 0x14283d9d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14301c490 '__SVFloat16_t'
|-TypedefDecl 0x14283da40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14301c4b0 '__SVFloat32_t'
|-TypedefDecl 0x14283daa8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14301c4d0 '__SVFloat64_t'
|-TypedefDecl 0x14283db10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14301c4f0 '__SVBfloat16_t'
|-TypedefDecl 0x14283db78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14301c510 '__clang_svint8x2_t'
|-TypedefDecl 0x14283dbe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14301c530 '__clang_svint16x2_t'
|-TypedefDecl 0x14283dc48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14301c550 '__clang_svint32x2_t'
|-TypedefDecl 0x14283dcb0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14301c570 '__clang_svint64x2_t'
|-TypedefDecl 0x14283dd18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14301c590 '__clang_svuint8x2_t'
|-TypedefDecl 0x14283dd80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14301c5b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14283dde8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14301c5d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14283de50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14301c5f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14283deb8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14301c610 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14283df20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14301c630 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14283df88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14301c650 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14283dff0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14301c670 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14283e058 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14301c690 '__clang_svint8x3_t'
|-TypedefDecl 0x14283e0c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14301c6b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14283e128 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14301c6d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14283e190 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14301c6f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14283e1f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14301c710 '__clang_svuint8x3_t'
|-TypedefDecl 0x14283e260 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14301c730 '__clang_svuint16x3_t'
|-TypedefDecl 0x14283e2c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14301c750 '__clang_svuint32x3_t'
|-TypedefDecl 0x14283e330 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14301c770 '__clang_svuint64x3_t'
|-TypedefDecl 0x14283e398 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14301c790 '__clang_svfloat16x3_t'
|-TypedefDecl 0x142841e00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14301c7b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x142841e68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14301c7d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x142841ed0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14301c7f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x142841f38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14301c810 '__clang_svint8x4_t'
|-TypedefDecl 0x142841fa0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14301c830 '__clang_svint16x4_t'
|-TypedefDecl 0x142842008 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14301c850 '__clang_svint32x4_t'
|-TypedefDecl 0x142842070 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14301c870 '__clang_svint64x4_t'
|-TypedefDecl 0x1428420d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14301c890 '__clang_svuint8x4_t'
|-TypedefDecl 0x142842140 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14301c8b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1428421a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14301c8d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x142842210 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14301c8f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x142842278 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14301c910 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1428422e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14301c930 '__clang_svfloat32x4_t'
|-TypedefDecl 0x142842348 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14301c950 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1428423b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14301c970 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x142842418 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14301c990 '__SVBool_t'
|-TypedefDecl 0x142842480 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14301c9b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1428424e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14301c9d0 '__clang_svboolx4_t'
|-TypedefDecl 0x142842550 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14301c9f0 '__SVCount_t'
|-TypedefDecl 0x1428425f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1428425b0 'char *'
|   `-BuiltinType 0x14301bcb0 'char'
|-TypedefDecl 0x142842668 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1428425b0 'char *'
|   `-BuiltinType 0x14301bcb0 'char'
`-FunctionDecl 0x142842d58 <dataset_diviso_filec/func21862_vuln.c:1:1, line:37:1> line:1:12 handle_vmread 'int (struct kvm_vcpu *)' static
  |-ParmVarDecl 0x142842c48 <col:26, col:43> col:43 used vcpu 'struct kvm_vcpu *'
  `-CompoundStmt 0x144809908 <line:2:1, line:37:1>
    |-DeclStmt 0x14285a8d0 <line:3:2, col:21>
    | `-VarDecl 0x14285a868 <col:2, col:16> col:16 used field 'unsigned long'
    |-DeclStmt 0x14285ab38 <line:5:2, col:67>
    | `-VarDecl 0x14285a918 <col:2, col:66> col:16 used exit_qualification 'unsigned long' cinit
    |   `-CallExpr 0x14285ab10 <col:37, col:66> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x14285aa90 <col:37> 'int ()' Function 0x14285a9d8 'vmcs_readl' 'int ()'
    |     `-RecoveryExpr 0x14285aaf0 <col:48> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14285ad40 <line:9:2, line:10:10>
    | |-UnaryOperator 0x14285acf8 <line:9:6, col:39> 'int' prefix '!' cannot overflow
    | | `-CallExpr 0x14285acb8 <col:7, col:39> 'int'
    | |   |-ImplicitCastExpr 0x14285aca0 <col:7> 'int (*)()' <FunctionToPointerDecay>
    | |   | `-DeclRefExpr 0x14285ac30 <col:7> 'int ()' Function 0x14285ab78 'nested_vmx_check_permission' 'int ()'
    | |   `-ImplicitCastExpr 0x14285ace0 <col:35> 'struct kvm_vcpu *' <LValueToRValue>
    | |     `-DeclRefExpr 0x14285ac50 <col:35> 'struct kvm_vcpu *' lvalue ParmVar 0x142842c48 'vcpu' 'struct kvm_vcpu *'
    | `-ReturnStmt 0x14285ad30 <line:10:3, col:10>
    |   `-IntegerLiteral 0x14285ad10 <col:10> 'int' 1
    |-IfStmt 0x14285b078 <line:12:2, line:13:44>
    | |-UnaryOperator 0x14285aed8 <line:12:6, col:35> 'int' prefix '!' cannot overflow
    | | `-CallExpr 0x14285ae98 <col:7, col:35> 'int'
    | |   |-ImplicitCastExpr 0x14285ae80 <col:7> 'int (*)()' <FunctionToPointerDecay>
    | |   | `-DeclRefExpr 0x14285ae40 <col:7> 'int ()' Function 0x14285ad88 'nested_vmx_check_vmcs12' 'int ()'
    | |   `-ImplicitCastExpr 0x14285aec0 <col:31> 'struct kvm_vcpu *' <LValueToRValue>
    | |     `-DeclRefExpr 0x14285ae60 <col:31> 'struct kvm_vcpu *' lvalue ParmVar 0x142842c48 'vcpu' 'struct kvm_vcpu *'
    | `-ReturnStmt 0x14285b068 <line:13:3, col:44>
    |   `-CallExpr 0x14285b028 <col:10, col:44> 'int'
    |     |-ImplicitCastExpr 0x14285b010 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x14285afd0 <col:10> 'int ()' Function 0x14285af18 'kvm_skip_emulated_instruction' 'int ()'
    |     `-ImplicitCastExpr 0x14285b050 <col:40> 'struct kvm_vcpu *' <LValueToRValue>
    |       `-DeclRefExpr 0x14285aff0 <col:40> 'struct kvm_vcpu *' lvalue ParmVar 0x142842c48 'vcpu' 'struct kvm_vcpu *'
    |-IfStmt 0x14285b728 <line:18:2, line:21:2>
    | |-BinaryOperator 0x14285b488 <line:18:6, col:51> 'int' contains-errors '<'
    | | |-CallExpr 0x14285b450 <col:6, col:47> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x14285b310 <col:6> 'int ()' Function 0x14285b258 'vmcs12_read_any' 'int ()'
    | | | |-DeclRefExpr 0x14285b330 <col:22> 'struct kvm_vcpu *' lvalue ParmVar 0x142842c48 'vcpu' 'struct kvm_vcpu *'
    | | | |-DeclRefExpr 0x14285b350 <col:28> 'unsigned long' lvalue Var 0x14285a868 'field' 'unsigned long'
    | | | `-UnaryOperator 0x14285b438 <col:35, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | |   `-RecoveryExpr 0x14285b418 <col:36> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x14285b3d8 <col:51> 'int' 0
    | `-CompoundStmt 0x14285b708 <col:54, line:21:2>
    |   |-CallExpr 0x14285b630 <line:19:3, col:63> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x14285b588 <col:3> 'int ()' Function 0x14285b4d0 'nested_vmx_failValid' 'int ()'
    |   | |-DeclRefExpr 0x14285b5a8 <col:24> 'struct kvm_vcpu *' lvalue ParmVar 0x142842c48 'vcpu' 'struct kvm_vcpu *'
    |   | `-RecoveryExpr 0x14285b610 <col:30> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x14285b6f8 <line:20:3, col:44>
    |     `-CallExpr 0x14285b6b8 <col:10, col:44> 'int'
    |       |-ImplicitCastExpr 0x14285b6a0 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x14285b660 <col:10> 'int ()' Function 0x14285af18 'kvm_skip_emulated_instruction' 'int ()'
    |       `-ImplicitCastExpr 0x14285b6e0 <col:40> 'struct kvm_vcpu *' <LValueToRValue>
    |         `-DeclRefExpr 0x14285b680 <col:40> 'struct kvm_vcpu *' lvalue ParmVar 0x142842c48 'vcpu' 'struct kvm_vcpu *'
    |-IfStmt 0x1448096b8 <line:23:2, line:33:2> has_else
    | |-BinaryOperator 0x144808e20 <line:23:6, col:38> '<dependent type>' contains-errors '&'
    | | |-RecoveryExpr 0x144808e00 <col:6> '<dependent type>' contains-errors lvalue
    | | `-ParenExpr 0x14285b7c0 <col:29, col:38> 'unsigned int'
    | |   `-BinaryOperator 0x14285b7a0 <col:30, col:36> 'unsigned int' '<<'
    | |     |-IntegerLiteral 0x14285b760 <col:30> 'unsigned int' 1
    | |     `-IntegerLiteral 0x14285b780 <col:36> 'int' 10
    | |-CompoundStmt 0x144808fd0 <col:41, line:26:2>
    | `-CompoundStmt 0x1448096a0 <col:9, line:33:2>
    |   `-IfStmt 0x1448092b8 <line:27:3, line:29:11>
    |     |-CallExpr 0x144809240 <line:27:7, line:28:37> '<dependent type>' contains-errors
    |     | |-DeclRefExpr 0x1448090c0 <line:27:7> 'int ()' Function 0x144809008 'get_vmx_mem_address' 'int ()'
    |     | |-DeclRefExpr 0x1448090e0 <col:27> 'struct kvm_vcpu *' lvalue ParmVar 0x142842c48 'vcpu' 'struct kvm_vcpu *'
    |     | |-DeclRefExpr 0x144809100 <col:33> 'unsigned long' contains-errors lvalue Var 0x14285a918 'exit_qualification' 'unsigned long'
    |     | |-RecoveryExpr 0x1448091c8 <line:28:5> '<dependent type>' contains-errors lvalue
    |     | |-RecoveryExpr 0x1448091e8 <col:27> '<dependent type>' contains-errors lvalue
    |     | `-UnaryOperator 0x144809228 <col:33, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     |   `-RecoveryExpr 0x144809208 <col:34> '<dependent type>' contains-errors lvalue
    |     `-ReturnStmt 0x1448092a8 <line:29:4, col:11>
    |       `-IntegerLiteral 0x144809288 <col:11> 'int' 1
    |-CallExpr 0x144809820 <line:35:2, col:25> 'int'
    | |-ImplicitCastExpr 0x144809808 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x1448097c8 <col:2> 'int ()' Function 0x144809710 'nested_vmx_succeed' 'int ()'
    | `-ImplicitCastExpr 0x144809848 <col:21> 'struct kvm_vcpu *' <LValueToRValue>
    |   `-DeclRefExpr 0x1448097e8 <col:21> 'struct kvm_vcpu *' lvalue ParmVar 0x142842c48 'vcpu' 'struct kvm_vcpu *'
    `-ReturnStmt 0x1448098f8 <line:36:2, col:43>
      `-CallExpr 0x1448098b8 <col:9, col:43> 'int'
        |-ImplicitCastExpr 0x1448098a0 <col:9> 'int (*)()' <FunctionToPointerDecay>
        | `-DeclRefExpr 0x144809860 <col:9> 'int ()' Function 0x14285af18 'kvm_skip_emulated_instruction' 'int ()'
        `-ImplicitCastExpr 0x1448098e0 <col:39> 'struct kvm_vcpu *' <LValueToRValue>
          `-DeclRefExpr 0x144809880 <col:39> 'struct kvm_vcpu *' lvalue ParmVar 0x142842c48 'vcpu' 'struct kvm_vcpu *'
