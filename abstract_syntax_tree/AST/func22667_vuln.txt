TranslationUnitDecl 0x154855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1548564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x154855bd0 '__int128'
|-TypedefDecl 0x154856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x154855bf0 'unsigned __int128'
|-TypedefDecl 0x15500be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15500bc00 'struct __NSConstantString_tag'
|   `-Record 0x154856580 '__NSConstantString_tag'
|-TypedefDecl 0x15500be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x154855d90 '__SVInt8_t'
|-TypedefDecl 0x15500bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x154855db0 '__SVInt16_t'
|-TypedefDecl 0x15500bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x154855dd0 '__SVInt32_t'
|-TypedefDecl 0x15500bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x154855df0 '__SVInt64_t'
|-TypedefDecl 0x15500c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x154855e10 '__SVUint8_t'
|-TypedefDecl 0x15500c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x154855e30 '__SVUint16_t'
|-TypedefDecl 0x15500c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x154855e50 '__SVUint32_t'
|-TypedefDecl 0x15500c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x154855e70 '__SVUint64_t'
|-TypedefDecl 0x15500c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x154855e90 '__SVFloat16_t'
|-TypedefDecl 0x15500c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x154855eb0 '__SVFloat32_t'
|-TypedefDecl 0x15500c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x154855ed0 '__SVFloat64_t'
|-TypedefDecl 0x15500c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x154855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15500c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x154855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15500c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x154855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15500c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x154855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15500c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x154855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15500c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x154855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15500c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x154855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15500c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x154855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15500c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x154855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15500c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x154856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15500c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x154856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15500c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x154856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15500c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x154856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15500c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x154856090 '__clang_svint8x3_t'
|-TypedefDecl 0x15500c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1548560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15500c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1548560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15500c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1548560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15500c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x154856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15500ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x154856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15500cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x154856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15500cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x154856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15500cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x154856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15500d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1548561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15500d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1548561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15500d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1548561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15500d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x154856210 '__clang_svint8x4_t'
|-TypedefDecl 0x15500d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x154856230 '__clang_svint16x4_t'
|-TypedefDecl 0x15500d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x154856250 '__clang_svint32x4_t'
|-TypedefDecl 0x15500d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x154856270 '__clang_svint64x4_t'
|-TypedefDecl 0x15500d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x154856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15500d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1548562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15500d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1548562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15500d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1548562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15500d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x154856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15500d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x154856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15500d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x154856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15500d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x154856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15500da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x154856390 '__SVBool_t'
|-TypedefDecl 0x15500da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1548563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15500dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1548563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15500db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1548563f0 '__SVCount_t'
|-TypedefDecl 0x15500dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15500dbb0 'char *'
|   `-BuiltinType 0x1548556b0 'char'
|-TypedefDecl 0x15500dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15500dbb0 'char *'
|   `-BuiltinType 0x1548556b0 'char'
|-FunctionDecl 0x15500de68 <dataset_diviso_filec/func22667_vuln.c:1:1, line:14:1> line:1:1 addlists 'int (char **, char **)'
| |-ParmVarDecl 0x15500dd08 <col:11, col:18> col:18 used old 'char **'
| |-ParmVarDecl 0x15500dd88 <col:23, col:30> col:30 used new 'char **'
| `-CompoundStmt 0x1550271e0 <line:2:1, line:14:1>
|   |-DeclStmt 0x15500dfe8 <line:3:3, col:8>
|   | `-VarDecl 0x15500df80 <col:3, col:7> col:7 used i 'int'
|   |-IfStmt 0x15500e1d0 <line:5:3, line:6:12>
|   | |-BinaryOperator 0x15500e168 <line:5:7, col:29> 'int' contains-errors '||'
|   | | |-BinaryOperator 0x15500e108 <col:7, col:14> 'int' contains-errors '=='
|   | | | |-DeclRefExpr 0x15500e000 <col:7> 'char **' lvalue ParmVar 0x15500dd08 'old' 'char **'
|   | | | `-RecoveryExpr 0x15500e0e8 <col:14> '<dependent type>' contains-errors lvalue
|   | | `-BinaryOperator 0x15500e148 <col:22, col:29> 'int' contains-errors '=='
|   | |   |-DeclRefExpr 0x15500e070 <col:22> 'char **' lvalue ParmVar 0x15500dd88 'new' 'char **'
|   | |   `-RecoveryExpr 0x15500e128 <col:29> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x15500e1c0 <line:6:5, col:12>
|   |   `-RecoveryExpr 0x15500e1a0 <col:12> '<dependent type>' contains-errors lvalue
|   |-ForStmt 0x155027148 <line:7:3, line:12:5>
|   | |-BinaryOperator 0x15500e230 <line:7:8, col:12> 'int' '='
|   | | |-DeclRefExpr 0x15500e1f0 <col:8> 'int' lvalue Var 0x15500df80 'i' 'int'
|   | | `-IntegerLiteral 0x15500e210 <col:12> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x15500e3d8 <col:15, col:25> 'int' contains-errors '!='
|   | | |-ArraySubscriptExpr 0x15500e398 <col:15, col:20> 'char *' lvalue
|   | | | |-ImplicitCastExpr 0x15500e368 <col:15> 'char **' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x15500e250 <col:15> 'char **' lvalue ParmVar 0x15500dd88 'new' 'char **'
|   | | | `-ImplicitCastExpr 0x15500e380 <col:19> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x15500e270 <col:19> 'int' lvalue Var 0x15500df80 'i' 'int'
|   | | `-RecoveryExpr 0x15500e3b8 <col:25> '<dependent type>' contains-errors lvalue
|   | |-UnaryOperator 0x155026620 <col:31, col:33> 'int' prefix '++'
|   | | `-DeclRefExpr 0x155026600 <col:33> 'int' lvalue Var 0x15500df80 'i' 'int'
|   | `-CompoundStmt 0x155027128 <line:8:5, line:12:5>
|   |   |-BinaryOperator 0x155027048 <line:9:7, col:47> 'char **' '='
|   |   | |-DeclRefExpr 0x155026638 <col:7> 'char **' lvalue ParmVar 0x15500dd08 'old' 'char **'
|   |   | `-ImplicitCastExpr 0x155027030 <col:13, col:47> 'char **' <IntegralToPointer>
|   |   |   `-CallExpr 0x155026fc8 <col:13, col:47> 'int'
|   |   |     |-ImplicitCastExpr 0x155026fb0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x155026770 <col:13> 'int ()' Function 0x1550266b8 'enlist' 'int ()'
|   |   |     |-ImplicitCastExpr 0x155027000 <col:20> 'char **' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x155026790 <col:20> 'char **' lvalue ParmVar 0x15500dd08 'old' 'char **'
|   |   |     |-ImplicitCastExpr 0x155027018 <col:25, col:30> 'char *' <LValueToRValue>
|   |   |     | `-ArraySubscriptExpr 0x155026820 <col:25, col:30> 'char *' lvalue
|   |   |     |   |-ImplicitCastExpr 0x1550267f0 <col:25> 'char **' <LValueToRValue>
|   |   |     |   | `-DeclRefExpr 0x1550267b0 <col:25> 'char **' lvalue ParmVar 0x15500dd88 'new' 'char **'
|   |   |     |   `-ImplicitCastExpr 0x155026808 <col:29> 'int' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x1550267d0 <col:29> 'int' lvalue Var 0x15500df80 'i' 'int'
|   |   |     `-CallExpr 0x155026f28 <col:33, col:46> 'unsigned long'
|   |   |       |-ImplicitCastExpr 0x155026f10 <col:33> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |   |       | `-DeclRefExpr 0x155026e10 <col:33> 'unsigned long (const char *)' Function 0x155026ca0 'strlen' 'unsigned long (const char *)'
|   |   |       `-ImplicitCastExpr 0x155026f68 <col:40, col:45> 'const char *' <NoOp>
|   |   |         `-ImplicitCastExpr 0x155026f50 <col:40, col:45> 'char *' <LValueToRValue>
|   |   |           `-ArraySubscriptExpr 0x155026ea0 <col:40, col:45> 'char *' lvalue
|   |   |             |-ImplicitCastExpr 0x155026e70 <col:40> 'char **' <LValueToRValue>
|   |   |             | `-DeclRefExpr 0x155026e30 <col:40> 'char **' lvalue ParmVar 0x15500dd88 'new' 'char **'
|   |   |             `-ImplicitCastExpr 0x155026e88 <col:44> 'int' <LValueToRValue>
|   |   |               `-DeclRefExpr 0x155026e50 <col:44> 'int' lvalue Var 0x15500df80 'i' 'int'
|   |   `-IfStmt 0x155027108 <line:10:7, line:11:9>
|   |     |-BinaryOperator 0x1550270e0 <line:10:11, col:18> 'int' contains-errors '=='
|   |     | |-DeclRefExpr 0x155027068 <col:11> 'char **' lvalue ParmVar 0x15500dd08 'old' 'char **'
|   |     | `-RecoveryExpr 0x1550270c0 <col:18> '<dependent type>' contains-errors lvalue
|   |     `-BreakStmt 0x155027100 <line:11:9>
|   `-ReturnStmt 0x1550271d0 <line:13:3, col:10>
|     `-ImplicitCastExpr 0x1550271b8 <col:10> 'int' <PointerToIntegral>
|       `-ImplicitCastExpr 0x1550271a0 <col:10> 'char **' <LValueToRValue>
|         `-DeclRefExpr 0x155027180 <col:10> 'char **' lvalue ParmVar 0x15500dd08 'old' 'char **'
`-FunctionDecl 0x155026ca0 <line:9:33> col:33 implicit used strlen 'unsigned long (const char *)' extern
  |-ParmVarDecl 0x155026da0 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x155026d48 <<invalid sloc>> Implicit 902
