TranslationUnitDecl 0x12f828208 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12f8290b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12f8287d0 '__int128'
|-TypedefDecl 0x12f829128 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12f8287f0 'unsigned __int128'
|-TypedefDecl 0x12f01f030 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12f01ee00 'struct __NSConstantString_tag'
|   `-Record 0x12f829180 '__NSConstantString_tag'
|-TypedefDecl 0x12f01f098 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12f828990 '__SVInt8_t'
|-TypedefDecl 0x12f01f100 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12f8289b0 '__SVInt16_t'
|-TypedefDecl 0x12f01f168 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12f8289d0 '__SVInt32_t'
|-TypedefDecl 0x12f01f1d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12f8289f0 '__SVInt64_t'
|-TypedefDecl 0x12f01f238 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12f828a10 '__SVUint8_t'
|-TypedefDecl 0x12f01f2a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12f828a30 '__SVUint16_t'
|-TypedefDecl 0x12f01f308 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12f828a50 '__SVUint32_t'
|-TypedefDecl 0x12f01f370 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12f828a70 '__SVUint64_t'
|-TypedefDecl 0x12f01f3d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12f828a90 '__SVFloat16_t'
|-TypedefDecl 0x12f01f440 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12f828ab0 '__SVFloat32_t'
|-TypedefDecl 0x12f01f4a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12f828ad0 '__SVFloat64_t'
|-TypedefDecl 0x12f01f510 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12f828af0 '__SVBfloat16_t'
|-TypedefDecl 0x12f01f578 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12f828b10 '__clang_svint8x2_t'
|-TypedefDecl 0x12f01f5e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12f828b30 '__clang_svint16x2_t'
|-TypedefDecl 0x12f01f648 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12f828b50 '__clang_svint32x2_t'
|-TypedefDecl 0x12f01f6b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12f828b70 '__clang_svint64x2_t'
|-TypedefDecl 0x12f01f718 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12f828b90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12f01f780 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12f828bb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12f01f7e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12f828bd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12f01f850 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12f828bf0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12f01f8b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12f828c10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12f01f920 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12f828c30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12f01f988 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12f828c50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12f01f9f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12f828c70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12f01fa58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12f828c90 '__clang_svint8x3_t'
|-TypedefDecl 0x12f01fac0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12f828cb0 '__clang_svint16x3_t'
|-TypedefDecl 0x12f01fb28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12f828cd0 '__clang_svint32x3_t'
|-TypedefDecl 0x12f01fb90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12f828cf0 '__clang_svint64x3_t'
|-TypedefDecl 0x12f01fbf8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12f828d10 '__clang_svuint8x3_t'
|-TypedefDecl 0x12f01fc60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12f828d30 '__clang_svuint16x3_t'
|-TypedefDecl 0x12f01fcc8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12f828d50 '__clang_svuint32x3_t'
|-TypedefDecl 0x12f01fd30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12f828d70 '__clang_svuint64x3_t'
|-TypedefDecl 0x12f01fd98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12f828d90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12f030000 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12f828db0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12f030068 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12f828dd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12f0300d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12f828df0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12f030138 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12f828e10 '__clang_svint8x4_t'
|-TypedefDecl 0x12f0301a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12f828e30 '__clang_svint16x4_t'
|-TypedefDecl 0x12f030208 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12f828e50 '__clang_svint32x4_t'
|-TypedefDecl 0x12f030270 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12f828e70 '__clang_svint64x4_t'
|-TypedefDecl 0x12f0302d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12f828e90 '__clang_svuint8x4_t'
|-TypedefDecl 0x12f030340 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12f828eb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12f0303a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12f828ed0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12f030410 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12f828ef0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12f030478 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12f828f10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12f0304e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12f828f30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12f030548 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12f828f50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12f0305b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12f828f70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12f030618 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12f828f90 '__SVBool_t'
|-TypedefDecl 0x12f030680 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12f828fb0 '__clang_svboolx2_t'
|-TypedefDecl 0x12f0306e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12f828fd0 '__clang_svboolx4_t'
|-TypedefDecl 0x12f030750 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12f828ff0 '__SVCount_t'
|-TypedefDecl 0x12f0307f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12f0307b0 'char *'
|   `-BuiltinType 0x12f8282b0 'char'
|-TypedefDecl 0x12f030868 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12f0307b0 'char *'
|   `-BuiltinType 0x12f8282b0 'char'
|-FunctionDecl 0x12f030ba8 <dataset_diviso_filec/func11667_vuln.c:1:1, line:73:1> line:1:1 invalid ImagingPcxDecode 'int (int, int, int *, int)'
| |-ParmVarDecl 0x12f0308f0 <col:18, col:26> col:26 invalid im 'int'
| |-ParmVarDecl 0x12f030970 <col:30, col:48> col:48 referenced invalid state 'int'
| |-ParmVarDecl 0x12f030a28 <col:55, col:62> col:62 invalid buf 'int *'
| |-ParmVarDecl 0x12f030aa8 <col:67, col:78> col:78 referenced invalid bytes 'int'
| `-CompoundStmt 0x12f057d68 <line:2:1, line:73:1>
|   |-IfStmt 0x12f055f28 <line:6:5, line:12:5> has_else
|   | |-BinaryOperator 0x12f0559b0 <line:6:9, col:71> 'int' contains-errors '&&'
|   | | |-BinaryOperator 0x12f055860 <col:9, col:36> 'int' contains-errors '=='
|   | | | |-CallExpr 0x12f055810 <col:9, col:31> '<dependent type>' contains-errors
|   | | | | |-DeclRefExpr 0x12f0556f0 <col:9> 'int (const char *, const char *)' Function 0x12f055510 'strcmp' 'int (const char *, const char *)'
|   | | | | |-CXXDependentScopeMemberExpr 0x12f055730 <col:16, col:20> '<dependent type>' contains-errors lvalue ->mode
|   | | | | | `-RecoveryExpr 0x12f055710 <col:16> '<dependent type>' contains-errors lvalue
|   | | | | `-StringLiteral 0x12f0557c0 <col:26> 'char[4]' lvalue "STR"
|   | | | `-IntegerLiteral 0x12f055840 <col:36> 'int' 0
|   | | `-BinaryOperator 0x12f055990 <col:41, col:71> 'int' contains-errors '>'
|   | |   |-CXXDependentScopeMemberExpr 0x12f0558a0 <col:41, col:48> '<dependent type>' contains-errors lvalue ->xsize
|   | |   | `-RecoveryExpr 0x12f055880 <col:41> '<dependent type>' contains-errors lvalue
|   | |   `-BinaryOperator 0x12f055970 <col:56, col:71> '<dependent type>' contains-errors '*'
|   | |     |-CXXDependentScopeMemberExpr 0x12f055908 <col:56, col:63> '<dependent type>' contains-errors lvalue ->bytes
|   | |     | `-RecoveryExpr 0x12f0558e8 <col:56> '<dependent type>' contains-errors lvalue
|   | |     `-IntegerLiteral 0x12f055950 <col:71> 'int' 8
|   | |-CompoundStmt 0x12f055b20 <col:74, line:9:5>
|   | | |-BinaryOperator 0x12f055ab8 <line:7:9, col:26> '<dependent type>' contains-errors '='
|   | | | |-CXXDependentScopeMemberExpr 0x12f055a18 <col:9, col:16> '<dependent type>' contains-errors lvalue ->errcode
|   | | | | `-RecoveryExpr 0x12f0559f0 <col:9> '<dependent type>' contains-errors lvalue
|   | | | |   `-DeclRefExpr 0x12f0559d0 <col:9> 'int' lvalue ParmVar 0x12f030970 'state' 'int'
|   | | | `-RecoveryExpr 0x12f055a98 <col:26> '<dependent type>' contains-errors lvalue
|   | | `-ReturnStmt 0x12f055b10 <line:8:9, col:17>
|   | |   `-UnaryOperator 0x12f055af8 <col:16, col:17> 'int' prefix '-'
|   | |     `-IntegerLiteral 0x12f055ad8 <col:17> 'int' 1
|   | `-IfStmt 0x12f055f08 <line:9:12, line:12:5>
|   |   |-BinaryOperator 0x12f055d78 <line:9:16, col:70> 'int' contains-errors '&&'
|   |   | |-BinaryOperator 0x12f055c68 <col:16, col:43> 'int' contains-errors '=='
|   |   | | |-CallExpr 0x12f055c18 <col:16, col:38> '<dependent type>' contains-errors
|   |   | | | |-DeclRefExpr 0x12f055b40 <col:16> 'int (const char *, const char *)' Function 0x12f055510 'strcmp' 'int (const char *, const char *)'
|   |   | | | |-CXXDependentScopeMemberExpr 0x12f055b80 <col:23, col:27> '<dependent type>' contains-errors lvalue ->mode
|   |   | | | | `-RecoveryExpr 0x12f055b60 <col:23> '<dependent type>' contains-errors lvalue
|   |   | | | `-StringLiteral 0x12f055bc8 <col:33> 'char[4]' lvalue "STR"
|   |   | | `-IntegerLiteral 0x12f055c48 <col:43> 'int' 0
|   |   | `-BinaryOperator 0x12f055d58 <col:48, col:70> 'int' contains-errors '>'
|   |   |   |-CXXDependentScopeMemberExpr 0x12f055ca8 <col:48, col:55> '<dependent type>' contains-errors lvalue ->xsize
|   |   |   | `-RecoveryExpr 0x12f055c88 <col:48> '<dependent type>' contains-errors lvalue
|   |   |   `-CXXDependentScopeMemberExpr 0x12f055d10 <col:63, col:70> '<dependent type>' contains-errors lvalue ->bytes
|   |   |     `-RecoveryExpr 0x12f055cf0 <col:63> '<dependent type>' contains-errors lvalue
|   |   `-CompoundStmt 0x12f055ee8 <col:77, line:12:5>
|   |     |-BinaryOperator 0x12f055e80 <line:10:9, col:26> '<dependent type>' contains-errors '='
|   |     | |-CXXDependentScopeMemberExpr 0x12f055de0 <col:9, col:16> '<dependent type>' contains-errors lvalue ->errcode
|   |     | | `-RecoveryExpr 0x12f055db8 <col:9> '<dependent type>' contains-errors lvalue
|   |     | |   `-DeclRefExpr 0x12f055d98 <col:9> 'int' lvalue ParmVar 0x12f030970 'state' 'int'
|   |     | `-RecoveryExpr 0x12f055e60 <col:26> '<dependent type>' contains-errors lvalue
|   |     `-ReturnStmt 0x12f055ed8 <line:11:9, col:17>
|   |       `-UnaryOperator 0x12f055ec0 <col:16, col:17> 'int' prefix '-'
|   |         `-IntegerLiteral 0x12f055ea0 <col:17> 'int' 1
|   `-ForStmt 0x12f057d30 <line:16:5, line:72:5>
|     |-<<<NULL>>>
|     |-<<<NULL>>>
|     |-<<<NULL>>>
|     |-<<<NULL>>>
|     `-CompoundStmt 0x12f057d08 <line:16:14, line:72:5>
|       |-IfStmt 0x12f056080 <line:18:2, line:19:19>
|       | |-BinaryOperator 0x12f055fb8 <line:18:6, col:14> 'int' contains-errors '<'
|       | | |-RecoveryExpr 0x12f055f78 <col:6> '<dependent type>' contains-errors lvalue
|       | | `-IntegerLiteral 0x12f055f98 <col:14> 'int' 1
|       | `-ReturnStmt 0x12f056070 <line:19:6, col:19>
|       |   `-BinaryOperator 0x12f056050 <col:13, col:19> '<dependent type>' contains-errors '-'
|       |     |-RecoveryExpr 0x12f056030 <col:13> '<dependent type>' contains-errors lvalue
|       |     `-RecoveryExpr 0x12f055ff0 <col:19> '<dependent type>' contains-errors lvalue
|       |-IfStmt 0x12f056a50 <line:21:2, line:46:2> has_else
|       | |-RecoveryExpr 0x12f056148 <line:21:6, col:23> '_Bool' contains-errors
|       | |-CompoundStmt 0x12f056848 <col:29, line:40:2>
|       | | |-IfStmt 0x12f056270 <line:24:6, line:25:16>
|       | | | |-BinaryOperator 0x12f0561a8 <line:24:10, col:18> 'int' contains-errors '<'
|       | | | | |-RecoveryExpr 0x12f056168 <col:10> '<dependent type>' contains-errors lvalue
|       | | | | `-IntegerLiteral 0x12f056188 <col:18> 'int' 2
|       | | | `-ReturnStmt 0x12f056260 <line:25:3, col:16>
|       | | |   `-BinaryOperator 0x12f056240 <col:10, col:16> '<dependent type>' contains-errors '-'
|       | | |     |-RecoveryExpr 0x12f056220 <col:10> '<dependent type>' contains-errors lvalue
|       | | |     `-RecoveryExpr 0x12f0561e0 <col:16> '<dependent type>' contains-errors lvalue
|       | | |-WhileStmt 0x12f056770 <line:29:6, line:36:6>
|       | | | |-BinaryOperator 0x12f056360 <line:29:13, col:17> 'int' contains-errors '>'
|       | | | | |-RecoveryExpr 0x12f056340 <col:13> '<dependent type>' contains-errors lvalue
|       | | | | `-IntegerLiteral 0x12f056300 <col:17> 'int' 0
|       | | | `-CompoundStmt 0x12f056758 <col:20, line:36:6>
|       | | |   `-IfStmt 0x12f0565b8 <line:30:3, line:33:3>
|       | | |     |-BinaryOperator 0x12f056468 <line:30:7, col:26> 'int' contains-errors '>='
|       | | |     | |-CXXDependentScopeMemberExpr 0x12f0563a0 <col:7, col:14> '<dependent type>' contains-errors lvalue ->x
|       | | |     | | `-RecoveryExpr 0x12f056380 <col:7> '<dependent type>' contains-errors lvalue
|       | | |     | `-CXXDependentScopeMemberExpr 0x12f056420 <col:19, col:26> '<dependent type>' contains-errors lvalue ->bytes
|       | | |     |   `-RecoveryExpr 0x12f056400 <col:19> '<dependent type>' contains-errors lvalue
|       | | |     `-CompoundStmt 0x12f056598 <col:33, line:33:3>
|       | | |       |-BinaryOperator 0x12f056570 <line:31:7, col:24> '<dependent type>' contains-errors '='
|       | | |       | |-CXXDependentScopeMemberExpr 0x12f0564d0 <col:7, col:14> '<dependent type>' contains-errors lvalue ->errcode
|       | | |       | | `-RecoveryExpr 0x12f0564a8 <col:7> '<dependent type>' contains-errors lvalue
|       | | |       | |   `-DeclRefExpr 0x12f056488 <col:7> 'int' lvalue ParmVar 0x12f030970 'state' 'int'
|       | | |       | `-RecoveryExpr 0x12f056550 <col:24> '<dependent type>' contains-errors lvalue
|       | | |       `-BreakStmt 0x12f056590 <line:32:7>
|       | | `-CompoundAssignOperator 0x12f056818 <line:38:16, col:25> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|       | |   |-RecoveryExpr 0x12f0567d0 <col:16> '<dependent type>' contains-errors lvalue
|       | |   | `-DeclRefExpr 0x12f0567b0 <col:16> 'int' lvalue ParmVar 0x12f030aa8 'bytes' 'int'
|       | |   `-IntegerLiteral 0x12f0567f8 <col:25> 'int' 2
|       | `-CompoundStmt 0x12f056a38 <line:40:9, line:46:2>
|       |   `-UnaryOperator 0x12f056a20 <line:44:13, col:18> '<dependent type>' contains-errors postfix '--' cannot overflow
|       |     `-RecoveryExpr 0x12f0569f8 <col:13> '<dependent type>' contains-errors lvalue
|       |       `-DeclRefExpr 0x12f0569d8 <col:13> 'int' lvalue ParmVar 0x12f030aa8 'bytes' 'int'
|       `-IfStmt 0x12f057ce8 <line:48:2, line:70:2>
|         |-BinaryOperator 0x12f056b50 <line:48:6, col:25> 'int' contains-errors '>='
|         | |-CXXDependentScopeMemberExpr 0x12f056aa0 <col:6, col:13> '<dependent type>' contains-errors lvalue ->x
|         | | `-RecoveryExpr 0x12f056a80 <col:6> '<dependent type>' contains-errors lvalue
|         | `-CXXDependentScopeMemberExpr 0x12f056b08 <col:18, col:25> '<dependent type>' contains-errors lvalue ->bytes
|         |   `-RecoveryExpr 0x12f056ae8 <col:18> '<dependent type>' contains-errors lvalue
|         `-CompoundStmt 0x12f057cc0 <col:32, line:70:2>
|           |-IfStmt 0x12f0578e8 <line:49:9, line:58:9>
|           | |-BinaryOperator 0x12f056d50 <line:49:13, col:66> 'int' contains-errors '&&'
|           | | |-BinaryOperator 0x12f056c40 <col:13, col:35> '<dependent type>' contains-errors '%'
|           | | | |-CXXDependentScopeMemberExpr 0x12f056b90 <col:13, col:20> '<dependent type>' contains-errors lvalue ->bytes
|           | | | | `-RecoveryExpr 0x12f056b70 <col:13> '<dependent type>' contains-errors lvalue
|           | | | `-CXXDependentScopeMemberExpr 0x12f056bf8 <col:28, col:35> '<dependent type>' contains-errors lvalue ->xsize
|           | | |   `-RecoveryExpr 0x12f056bd8 <col:28> '<dependent type>' contains-errors lvalue
|           | | `-BinaryOperator 0x12f056d30 <col:44, col:66> 'int' contains-errors '>'
|           | |   |-CXXDependentScopeMemberExpr 0x12f056c80 <col:44, col:51> '<dependent type>' contains-errors lvalue ->bytes
|           | |   | `-RecoveryExpr 0x12f056c60 <col:44> '<dependent type>' contains-errors lvalue
|           | |   `-CXXDependentScopeMemberExpr 0x12f056ce8 <col:59, col:66> '<dependent type>' contains-errors lvalue ->xsize
|           | |     `-RecoveryExpr 0x12f056cc8 <col:59> '<dependent type>' contains-errors lvalue
|           | `-CompoundStmt 0x12f0578b8 <col:73, line:58:9>
|           |   |-DeclStmt 0x12f056ee0 <line:50:13, col:52>
|           |   | `-VarDecl 0x12f056d88 <col:13, col:47> col:17 used bands 'int' cinit
|           |   |   `-BinaryOperator 0x12f056ec0 <col:25, col:47> '<dependent type>' contains-errors '/'
|           |   |     |-CXXDependentScopeMemberExpr 0x12f056e10 <col:25, col:32> '<dependent type>' contains-errors lvalue ->bytes
|           |   |     | `-RecoveryExpr 0x12f056df0 <col:25> '<dependent type>' contains-errors lvalue
|           |   |     `-CXXDependentScopeMemberExpr 0x12f056e78 <col:40, col:47> '<dependent type>' contains-errors lvalue ->xsize
|           |   |       `-RecoveryExpr 0x12f056e58 <col:40> '<dependent type>' contains-errors lvalue
|           |   |-DeclStmt 0x12f057020 <line:51:13, col:46>
|           |   | `-VarDecl 0x12f056f10 <col:13, col:41> col:17 used stride 'int' cinit
|           |   |   `-BinaryOperator 0x12f057000 <col:26, col:41> '<dependent type>' contains-errors '/'
|           |   |     |-CXXDependentScopeMemberExpr 0x12f056f98 <col:26, col:33> '<dependent type>' contains-errors lvalue ->bytes
|           |   |     | `-RecoveryExpr 0x12f056f78 <col:26> '<dependent type>' contains-errors lvalue
|           |   |     `-DeclRefExpr 0x12f056fe0 <col:41> 'int' contains-errors lvalue Var 0x12f056d88 'bands' 'int'
|           |   |-DeclStmt 0x12f0570b8 <line:52:13, col:18>
|           |   | `-VarDecl 0x12f057050 <col:13, col:17> col:17 used i 'int'
|           |   `-ForStmt 0x12f057880 <line:53:13, line:57:13>
|           |     |-BinaryOperator 0x12f057110 <line:53:18, col:20> 'int' '='
|           |     | |-DeclRefExpr 0x12f0570d0 <col:18> 'int' lvalue Var 0x12f057050 'i' 'int'
|           |     | `-IntegerLiteral 0x12f0570f0 <col:20> 'int' 1
|           |     |-<<<NULL>>>
|           |     |-BinaryOperator 0x12f0571a0 <col:23, col:26> 'int' contains-errors '<'
|           |     | |-ImplicitCastExpr 0x12f057170 <col:23> 'int' <LValueToRValue>
|           |     | | `-DeclRefExpr 0x12f057130 <col:23> 'int' lvalue Var 0x12f057050 'i' 'int'
|           |     | `-ImplicitCastExpr 0x12f057188 <col:26> 'int' contains-errors <LValueToRValue>
|           |     |   `-DeclRefExpr 0x12f057150 <col:26> 'int' contains-errors lvalue Var 0x12f056d88 'bands' 'int'
|           |     |-UnaryOperator 0x12f0571e0 <col:33, col:34> 'int' postfix '++'
|           |     | `-DeclRefExpr 0x12f0571c0 <col:33> 'int' lvalue Var 0x12f057050 'i' 'int'
|           |     `-CompoundStmt 0x12f057868 <col:38, line:57:13>
|           |       `-CallExpr 0x12f057830 <line:54:17, line:56:37> '<dependent type>' contains-errors
|           |         |-DeclRefExpr 0x12f0574e8 <line:54:17> 'void *(void *, const void *, unsigned long)' Function 0x12f057278 'memmove' 'void *(void *, const void *, unsigned long)'
|           |         |-UnaryOperator 0x12f057650 <col:25, col:54> '<dependent type>' contains-errors prefix '&' cannot overflow
|           |         | `-ArraySubscriptExpr 0x12f057630 <col:26, col:54> '<dependent type>' contains-errors lvalue
|           |         |   |-ImplicitCastExpr 0x12f057618 <col:26, col:33> '<dependent type>' contains-errors <LValueToRValue>
|           |         |   | `-CXXDependentScopeMemberExpr 0x12f057528 <col:26, col:33> '<dependent type>' contains-errors lvalue ->buffer
|           |         |   |   `-RecoveryExpr 0x12f057508 <col:26> '<dependent type>' contains-errors lvalue
|           |         |   `-BinaryOperator 0x12f0575f8 <col:40, col:49> '<dependent type>' contains-errors '*'
|           |         |     |-DeclRefExpr 0x12f057570 <col:40> 'int' lvalue Var 0x12f057050 'i' 'int'
|           |         |     `-CXXDependentScopeMemberExpr 0x12f0575b0 <col:42, col:49> '<dependent type>' contains-errors lvalue ->xsize
|           |         |       `-RecoveryExpr 0x12f057590 <col:42> '<dependent type>' contains-errors lvalue
|           |         |-UnaryOperator 0x12f057798 <line:55:25, col:48> '<dependent type>' contains-errors prefix '&' cannot overflow
|           |         | `-ArraySubscriptExpr 0x12f057778 <col:26, col:48> '<dependent type>' contains-errors lvalue
|           |         |   |-ImplicitCastExpr 0x12f057760 <col:26, col:33> '<dependent type>' contains-errors <LValueToRValue>
|           |         |   | `-CXXDependentScopeMemberExpr 0x12f057688 <col:26, col:33> '<dependent type>' contains-errors lvalue ->buffer
|           |         |   |   `-RecoveryExpr 0x12f057668 <col:26> '<dependent type>' contains-errors lvalue
|           |         |   `-BinaryOperator 0x12f057740 <col:40, col:42> 'int' contains-errors '*'
|           |         |     |-ImplicitCastExpr 0x12f057710 <col:40> 'int' <LValueToRValue>
|           |         |     | `-DeclRefExpr 0x12f0576d0 <col:40> 'int' lvalue Var 0x12f057050 'i' 'int'
|           |         |     `-ImplicitCastExpr 0x12f057728 <col:42> 'int' contains-errors <LValueToRValue>
|           |         |       `-DeclRefExpr 0x12f0576f0 <col:42> 'int' contains-errors lvalue Var 0x12f056f10 'stride' 'int'
|           |         `-CXXDependentScopeMemberExpr 0x12f0577d0 <line:56:25, col:32> '<dependent type>' contains-errors lvalue ->xsize
|           |           `-RecoveryExpr 0x12f0577b0 <col:25> '<dependent type>' contains-errors lvalue
|           |-BinaryOperator 0x12f057b18 <line:64:6, col:17> '<dependent type>' contains-errors '='
|           | |-CXXDependentScopeMemberExpr 0x12f057ab0 <col:6, col:13> '<dependent type>' contains-errors lvalue ->x
|           | | `-RecoveryExpr 0x12f057a88 <col:6> '<dependent type>' contains-errors lvalue
|           | |   `-DeclRefExpr 0x12f057a68 <col:6> 'int' lvalue ParmVar 0x12f030970 'state' 'int'
|           | `-IntegerLiteral 0x12f057af8 <col:17> 'int' 0
|           `-IfStmt 0x12f057ca0 <line:66:6, line:69:6>
|             |-BinaryOperator 0x12f057c20 <line:66:10, col:31> 'int' contains-errors '>='
|             | |-UnaryOperator 0x12f057ba0 <col:10, col:19> '<dependent type>' contains-errors prefix '++' cannot overflow
|             | | `-CXXDependentScopeMemberExpr 0x12f057b58 <col:12, col:19> '<dependent type>' contains-errors lvalue ->y
|             | |   `-RecoveryExpr 0x12f057b38 <col:12> '<dependent type>' contains-errors lvalue
|             | `-CXXDependentScopeMemberExpr 0x12f057bd8 <col:24, col:31> '<dependent type>' contains-errors lvalue ->ysize
|             |   `-RecoveryExpr 0x12f057bb8 <col:24> '<dependent type>' contains-errors lvalue
|             `-CompoundStmt 0x12f057c88 <col:38, line:69:6>
|               `-ReturnStmt 0x12f057c78 <line:68:3, col:11>
|                 `-UnaryOperator 0x12f057c60 <col:10, col:11> 'int' prefix '-'
|                   `-IntegerLiteral 0x12f057c40 <col:11> 'int' 1
|-FunctionDecl 0x12f055510 <line:6:9> col:9 implicit used strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x12f055610 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x12f055678 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x12f0555b8 <<invalid sloc>> Implicit 887
`-FunctionDecl 0x12f057278 <line:54:17> col:17 implicit used memmove 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x12f057378 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x12f057400 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x12f057468 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x12f057320 <<invalid sloc>> Implicit 884
