TranslationUnitDecl 0x12e033a08 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12e0348b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12e033fd0 '__int128'
|-TypedefDecl 0x12e034928 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12e033ff0 'unsigned __int128'
|-TypedefDecl 0x12e104630 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12e104400 'struct __NSConstantString_tag'
|   `-Record 0x12e034980 '__NSConstantString_tag'
|-TypedefDecl 0x12e104698 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12e034190 '__SVInt8_t'
|-TypedefDecl 0x12e104700 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12e0341b0 '__SVInt16_t'
|-TypedefDecl 0x12e104768 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12e0341d0 '__SVInt32_t'
|-TypedefDecl 0x12e1047d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12e0341f0 '__SVInt64_t'
|-TypedefDecl 0x12e104838 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12e034210 '__SVUint8_t'
|-TypedefDecl 0x12e1048a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12e034230 '__SVUint16_t'
|-TypedefDecl 0x12e104908 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12e034250 '__SVUint32_t'
|-TypedefDecl 0x12e104970 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12e034270 '__SVUint64_t'
|-TypedefDecl 0x12e1049d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12e034290 '__SVFloat16_t'
|-TypedefDecl 0x12e104a40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12e0342b0 '__SVFloat32_t'
|-TypedefDecl 0x12e104aa8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12e0342d0 '__SVFloat64_t'
|-TypedefDecl 0x12e104b10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12e0342f0 '__SVBfloat16_t'
|-TypedefDecl 0x12e104b78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12e034310 '__clang_svint8x2_t'
|-TypedefDecl 0x12e104be0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12e034330 '__clang_svint16x2_t'
|-TypedefDecl 0x12e104c48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12e034350 '__clang_svint32x2_t'
|-TypedefDecl 0x12e104cb0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12e034370 '__clang_svint64x2_t'
|-TypedefDecl 0x12e104d18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12e034390 '__clang_svuint8x2_t'
|-TypedefDecl 0x12e104d80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12e0343b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12e104de8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12e0343d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12e104e50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12e0343f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12e104eb8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12e034410 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12e104f20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12e034430 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12e104f88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12e034450 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12e104ff0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12e034470 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12e105058 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12e034490 '__clang_svint8x3_t'
|-TypedefDecl 0x12e1050c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12e0344b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12e105128 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12e0344d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12e105190 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12e0344f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12e1051f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12e034510 '__clang_svuint8x3_t'
|-TypedefDecl 0x12e105260 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12e034530 '__clang_svuint16x3_t'
|-TypedefDecl 0x12e1052c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12e034550 '__clang_svuint32x3_t'
|-TypedefDecl 0x12e105330 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12e034570 '__clang_svuint64x3_t'
|-TypedefDecl 0x12e105398 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12e034590 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12e105c00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12e0345b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12e105c68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12e0345d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12e105cd0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12e0345f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12e105d38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12e034610 '__clang_svint8x4_t'
|-TypedefDecl 0x12e105da0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12e034630 '__clang_svint16x4_t'
|-TypedefDecl 0x12e105e08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12e034650 '__clang_svint32x4_t'
|-TypedefDecl 0x12e105e70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12e034670 '__clang_svint64x4_t'
|-TypedefDecl 0x12e105ed8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12e034690 '__clang_svuint8x4_t'
|-TypedefDecl 0x12e105f40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12e0346b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12e105fa8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12e0346d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12e106010 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12e0346f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12e106078 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12e034710 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12e1060e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12e034730 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12e106148 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12e034750 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12e1061b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12e034770 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12e106218 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12e034790 '__SVBool_t'
|-TypedefDecl 0x12e106280 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12e0347b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12e1062e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12e0347d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12e106350 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12e0347f0 '__SVCount_t'
|-TypedefDecl 0x12e1063f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12e1063b0 'char *'
|   `-BuiltinType 0x12e033ab0 'char'
|-TypedefDecl 0x12e106468 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12e1063b0 'char *'
|   `-BuiltinType 0x12e033ab0 'char'
|-FunctionDecl 0x12e1065f8 <dataset_diviso_filec/func18288_vuln.c:1:1, line:50:1> line:1:12 invalid init_strtab 'int (int *)' static
| |-ParmVarDecl 0x12e106528 <col:24, col:32> col:32 referenced invalid bin 'int *'
| `-CompoundStmt 0x12e80ab78 <col:37, line:50:1>
|   |-CallExpr 0x12e106980 <line:2:2, col:43> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x12e106800 <col:2> 'int ()' Function 0x12e106748 'r_return_val_if_fail' 'int ()'
|   | |-UnaryOperator 0x12e106948 <col:24, col:30> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x12e106930 <col:25, col:30> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-CXXDependentScopeMemberExpr 0x12e106840 <col:25, col:30> '<dependent type>' contains-errors lvalue ->strtab
|   | |     `-RecoveryExpr 0x12e106820 <col:25> '<dependent type>' contains-errors lvalue
|   | `-RecoveryExpr 0x12e106960 <col:38> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x12e106a70 <line:4:2, line:6:2>
|   | |-UnaryOperator 0x12e106a30 <line:4:6, col:12> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x12e106a18 <col:7, col:12> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-CXXDependentScopeMemberExpr 0x12e1069d0 <col:7, col:12> '<dependent type>' contains-errors lvalue ->shdr
|   | |     `-RecoveryExpr 0x12e1069b0 <col:7> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x12e106a60 <col:18, line:6:2>
|   |-CallExpr 0x12e11fc00 <line:8:2, col:11> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x12e106b70 <col:2> 'int ()' Function 0x12e106ab8 'Elf_' 'int ()'
|   | `-RecoveryExpr 0x12e106bd0 <col:7> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x12e11ffd8 <line:9:2, line:11:2>
|   | |-BinaryOperator 0x12e11ff90 <line:9:6, col:61> 'int' contains-errors '&&'
|   | | |-BinaryOperator 0x12e11ff08 <col:6, col:18> 'int' contains-errors '!='
|   | | | |-RecoveryExpr 0x12e11fec8 <col:6> '<dependent type>' contains-errors lvalue
|   | | | `-RecoveryExpr 0x12e11fee8 <col:18> '<dependent type>' contains-errors lvalue
|   | | `-UnaryOperator 0x12e11ff78 <col:31, col:61> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | |   `-CallExpr 0x12e11ff48 <col:32, col:61> '<dependent type>' contains-errors
|   | |     |-DeclRefExpr 0x12e11fe08 <col:32> 'int ()' Function 0x12e11fd50 'is_shidx_valid' 'int ()'
|   | |     |-RecoveryExpr 0x12e11fe28 <col:48> '<dependent type>' contains-errors lvalue
|   | |     `-RecoveryExpr 0x12e11ff28 <col:53> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x12e11ffc8 <col:64, line:11:2>
|   |-IfStmt 0x12e1200d8 <line:14:2, line:16:2>
|   | |-RecoveryExpr 0x12e120090 <line:14:6, col:36> '_Bool' contains-errors
|   | `-CompoundStmt 0x12e1200c8 <col:46, line:16:2>
|   |-IfStmt 0x12e1201a8 <line:17:2, line:19:2>
|   | |-RecoveryExpr 0x12e120178 <line:17:6, col:27> '_Bool' contains-errors
|   | `-CompoundStmt 0x12e120198 <col:36, line:19:2>
|   |-BinaryOperator 0x12e120468 <line:21:2, col:46> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x12e120370 <col:2, col:7> '<dependent type>' contains-errors lvalue ->shstrtab_size
|   | | `-RecoveryExpr 0x12e120348 <col:2> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x12e120328 <col:2> 'int *' lvalue ParmVar 0x12e106528 'bin' 'int *'
|   | `-CXXDependentScopeMemberExpr 0x12e120420 <col:23, col:46> '<dependent type>' contains-errors lvalue ->sh_size
|   |   `-CXXDependentScopeMemberExpr 0x12e1203d8 <col:23, col:28> '<dependent type>' contains-errors lvalue ->shstrtab_section
|   |     `-RecoveryExpr 0x12e1203b8 <col:23> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x12e120588 <line:22:2, line:24:2>
|   | |-BinaryOperator 0x12e120558 <line:22:6, col:32> 'int' contains-errors '>'
|   | | |-CXXDependentScopeMemberExpr 0x12e1204a8 <col:6, col:11> '<dependent type>' contains-errors lvalue ->shstrtab_size
|   | | | `-RecoveryExpr 0x12e120488 <col:6> '<dependent type>' contains-errors lvalue
|   | | `-CXXDependentScopeMemberExpr 0x12e120510 <col:27, col:32> '<dependent type>' contains-errors lvalue ->size
|   | |   `-RecoveryExpr 0x12e1204f0 <col:27> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x12e120578 <col:38, line:24:2>
|   |-IfStmt 0x12e1206f0 <line:25:2, line:27:2>
|   | |-BinaryOperator 0x12e1206c0 <line:25:6, col:46> 'int' contains-errors '>'
|   | | |-CXXDependentScopeMemberExpr 0x12e120610 <col:6, col:29> '<dependent type>' contains-errors lvalue ->sh_offset
|   | | | `-CXXDependentScopeMemberExpr 0x12e1205c8 <col:6, col:11> '<dependent type>' contains-errors lvalue ->shstrtab_section
|   | | |   `-RecoveryExpr 0x12e1205a8 <col:6> '<dependent type>' contains-errors lvalue
|   | | `-CXXDependentScopeMemberExpr 0x12e120678 <col:41, col:46> '<dependent type>' contains-errors lvalue ->size
|   | |   `-RecoveryExpr 0x12e120658 <col:41> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x12e1206e0 <col:52, line:27:2>
|   |-IfStmt 0x12e120928 <line:28:2, line:30:2>
|   | |-BinaryOperator 0x12e1208f8 <line:28:6, col:79> 'int' contains-errors '>'
|   | | |-BinaryOperator 0x12e120870 <col:6, col:64> '<dependent type>' contains-errors '+'
|   | | | |-CXXDependentScopeMemberExpr 0x12e120778 <col:6, col:29> '<dependent type>' contains-errors lvalue ->sh_offset
|   | | | | `-CXXDependentScopeMemberExpr 0x12e120730 <col:6, col:11> '<dependent type>' contains-errors lvalue ->shstrtab_section
|   | | | |   `-RecoveryExpr 0x12e120710 <col:6> '<dependent type>' contains-errors lvalue
|   | | | `-CXXDependentScopeMemberExpr 0x12e120828 <col:41, col:64> '<dependent type>' contains-errors lvalue ->sh_size
|   | | |   `-CXXDependentScopeMemberExpr 0x12e1207e0 <col:41, col:46> '<dependent type>' contains-errors lvalue ->shstrtab_section
|   | | |     `-RecoveryExpr 0x12e1207c0 <col:41> '<dependent type>' contains-errors lvalue
|   | | `-CXXDependentScopeMemberExpr 0x12e1208b0 <col:74, col:79> '<dependent type>' contains-errors lvalue ->size
|   | |   `-RecoveryExpr 0x12e120890 <col:74> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x12e120918 <col:85, line:30:2>
|   |-IfStmt 0x12e809a00 <line:32:2, line:36:2>
|   | |-UnaryOperator 0x12e809758 <line:32:6, col:58> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-ParenExpr 0x12e809738 <col:7, col:58> '<dependent type>' contains-errors
|   | |   `-BinaryOperator 0x12e809718 <col:8, col:57> '<dependent type>' contains-errors '='
|   | |     |-CXXDependentScopeMemberExpr 0x12e120968 <col:8, col:13> '<dependent type>' contains-errors lvalue ->shstrtab
|   | |     | `-RecoveryExpr 0x12e120948 <col:8> '<dependent type>' contains-errors lvalue
|   | |     `-CallExpr 0x12e8096e8 <col:24, col:57> '<dependent type>' contains-errors
|   | |       |-DeclRefExpr 0x12e809600 <col:24> 'void *(unsigned long, unsigned long)' Function 0x12e1209f0 'calloc' 'void *(unsigned long, unsigned long)'
|   | |       |-IntegerLiteral 0x12e809620 <col:32> 'int' 1
|   | |       `-BinaryOperator 0x12e8096c8 <col:35, col:56> '<dependent type>' contains-errors '+'
|   | |         |-CXXDependentScopeMemberExpr 0x12e809660 <col:35, col:40> '<dependent type>' contains-errors lvalue ->shstrtab_size
|   | |         | `-RecoveryExpr 0x12e809640 <col:35> '<dependent type>' contains-errors lvalue
|   | |         `-IntegerLiteral 0x12e8096a8 <col:56> 'int' 1
|   | `-CompoundStmt 0x12e8099e8 <col:61, line:36:2>
|   |   `-CallExpr 0x12e809918 <line:33:3, col:22> 'int'
|   |     |-ImplicitCastExpr 0x12e809900 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x12e809850 <col:3> 'int ()' Function 0x12e809798 'r_sys_perror' 'int ()'
|   |     `-ImplicitCastExpr 0x12e809940 <col:17> 'char *' <ArrayToPointerDecay>
|   |       `-StringLiteral 0x12e8098b0 <col:17> 'char[4]' lvalue "STR"
|   |-DeclStmt 0x12e809d68 <line:37:2, line:38:34>
|   | `-VarDecl 0x12e809a38 <line:37:2, col:6> col:6 used res 'int'
|   |-IfStmt 0x12e80a0c0 <line:39:2, line:43:2>
|   | |-BinaryOperator 0x12e809dd8 <line:39:6, col:12> 'int' '<'
|   | | |-ImplicitCastExpr 0x12e809dc0 <col:6> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x12e809d80 <col:6> 'int' lvalue Var 0x12e809a38 'res' 'int'
|   | | `-IntegerLiteral 0x12e809da0 <col:12> 'int' 1
|   | `-CompoundStmt 0x12e80a0a8 <col:15, line:43:2>
|   |   `-CallExpr 0x12e80a080 <line:41:3, col:24> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x12e809ff8 <col:3> 'int ()' Function 0x12e809f40 'R_FREE' 'int ()'
|   |     `-CXXDependentScopeMemberExpr 0x12e80a038 <col:11, col:16> '<dependent type>' contains-errors lvalue ->shstrtab
|   |       `-RecoveryExpr 0x12e80a018 <col:11> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x12e80a2f8 <line:44:2, col:50> '<dependent type>' contains-errors '='
|   | |-ArraySubscriptExpr 0x12e80a2d8 <col:2, col:46> '<dependent type>' contains-errors lvalue
|   | | |-ImplicitCastExpr 0x12e80a2a8 <col:2, col:7> '<dependent type>' contains-errors <LValueToRValue>
|   | | | `-CXXDependentScopeMemberExpr 0x12e80a128 <col:2, col:7> '<dependent type>' contains-errors lvalue ->shstrtab
|   | | |   `-RecoveryExpr 0x12e80a100 <col:2> '<dependent type>' contains-errors lvalue
|   | | |     `-DeclRefExpr 0x12e80a0e0 <col:2> 'int *' lvalue ParmVar 0x12e106528 'bin' 'int *'
|   | | `-ImplicitCastExpr 0x12e80a2c0 <col:16, col:39> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-CXXDependentScopeMemberExpr 0x12e80a1d8 <col:16, col:39> '<dependent type>' contains-errors lvalue ->sh_size
|   | |     `-CXXDependentScopeMemberExpr 0x12e80a190 <col:16, col:21> '<dependent type>' contains-errors lvalue ->shstrtab_section
|   | |       `-RecoveryExpr 0x12e80a170 <col:16> '<dependent type>' contains-errors lvalue
|   | `-CharacterLiteral 0x12e80a270 <col:50> 'int' 0
|   |-CallExpr 0x12e80a570 <line:46:2, col:66> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x12e80a3f8 <col:2> 'int ()' Function 0x12e80a340 'sdb_num_set' 'int ()'
|   | |-CXXDependentScopeMemberExpr 0x12e80a438 <col:15, col:20> '<dependent type>' contains-errors lvalue ->kv
|   | | `-RecoveryExpr 0x12e80a418 <col:15> '<dependent type>' contains-errors lvalue
|   | |-StringLiteral 0x12e80a480 <col:24> 'char[4]' lvalue "STR"
|   | |-CXXDependentScopeMemberExpr 0x12e80a508 <col:31, col:54> '<dependent type>' contains-errors lvalue ->sh_offset
|   | | `-CXXDependentScopeMemberExpr 0x12e80a4c0 <col:31, col:36> '<dependent type>' contains-errors lvalue ->shstrtab_section
|   | |   `-RecoveryExpr 0x12e80a4a0 <col:31> '<dependent type>' contains-errors lvalue
|   | `-IntegerLiteral 0x12e80a550 <col:65> 'int' 0
|   `-CallExpr 0x12e80ab38 <line:47:2, col:64> '<dependent type>' contains-errors
|     |-DeclRefExpr 0x12e80a5b0 <col:2> 'int ()' Function 0x12e80a340 'sdb_num_set' 'int ()'
|     |-CXXDependentScopeMemberExpr 0x12e80aa00 <col:15, col:20> '<dependent type>' contains-errors lvalue ->kv
|     | `-RecoveryExpr 0x12e80a5d0 <col:15> '<dependent type>' contains-errors lvalue
|     |-StringLiteral 0x12e80aa48 <col:24> 'char[4]' lvalue "STR"
|     |-CXXDependentScopeMemberExpr 0x12e80aad0 <col:31, col:54> '<dependent type>' contains-errors lvalue ->sh_size
|     | `-CXXDependentScopeMemberExpr 0x12e80aa88 <col:31, col:36> '<dependent type>' contains-errors lvalue ->shstrtab_section
|     |   `-RecoveryExpr 0x12e80aa68 <col:31> '<dependent type>' contains-errors lvalue
|     `-IntegerLiteral 0x12e80ab18 <col:63> 'int' 0
`-FunctionDecl 0x12e1209f0 <line:32:24> col:24 implicit used calloc 'void *(unsigned long, unsigned long)' extern
  |-ParmVarDecl 0x12e120af0 <<invalid sloc>> <invalid sloc> 'unsigned long'
  |-ParmVarDecl 0x12e120b58 <<invalid sloc>> <invalid sloc> 'unsigned long'
  |-BuiltinAttr 0x12e120a98 <<invalid sloc>> Implicit 868
  `-AllocSizeAttr 0x12e120bd0 <col:24> Implicit 1 2
