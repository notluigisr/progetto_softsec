TranslationUnitDecl 0x120855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1208564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x120855bd0 '__int128'
|-TypedefDecl 0x120856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x120855bf0 'unsigned __int128'
|-TypedefDecl 0x12100be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12100bc00 'struct __NSConstantString_tag'
|   `-Record 0x120856580 '__NSConstantString_tag'
|-TypedefDecl 0x12100be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x120855d90 '__SVInt8_t'
|-TypedefDecl 0x12100bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x120855db0 '__SVInt16_t'
|-TypedefDecl 0x12100bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x120855dd0 '__SVInt32_t'
|-TypedefDecl 0x12100bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x120855df0 '__SVInt64_t'
|-TypedefDecl 0x12100c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x120855e10 '__SVUint8_t'
|-TypedefDecl 0x12100c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x120855e30 '__SVUint16_t'
|-TypedefDecl 0x12100c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x120855e50 '__SVUint32_t'
|-TypedefDecl 0x12100c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x120855e70 '__SVUint64_t'
|-TypedefDecl 0x12100c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x120855e90 '__SVFloat16_t'
|-TypedefDecl 0x12100c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x120855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12100c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x120855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12100c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x120855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12100c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x120855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12100c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x120855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12100c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x120855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12100c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x120855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12100c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x120855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12100c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x120855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12100c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x120855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12100c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x120855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12100c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x120856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12100c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x120856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12100c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x120856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12100c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x120856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12100c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x120856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12100c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1208560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12100c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1208560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12100c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1208560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12100c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x120856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12100ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x120856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12100cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x120856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12100cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x120856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12100cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x120856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12100d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1208561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12100d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1208561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12100d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1208561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12100d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x120856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12100d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x120856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12100d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x120856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12100d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x120856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12100d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x120856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12100d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1208562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12100d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1208562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12100d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1208562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12100d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x120856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12100d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x120856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12100d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x120856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12100d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x120856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12100da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x120856390 '__SVBool_t'
|-TypedefDecl 0x12100da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1208563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12100dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1208563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12100db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1208563f0 '__SVCount_t'
|-TypedefDecl 0x12100dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12100dbb0 'char *'
|   `-BuiltinType 0x1208556b0 'char'
|-TypedefDecl 0x12100dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12100dbb0 'char *'
|   `-BuiltinType 0x1208556b0 'char'
|-FunctionDecl 0x12100dda8 <dataset_diviso_filec/func19842_nonvuln.c:1:1, line:27:1> line:1:1 set_duplicate_opt_detection 'int (int)'
| |-ParmVarDecl 0x12100dcd8 <line:2:1, col:5> col:5 used on_or_off 'int'
| `-CompoundStmt 0x12102b388 <line:3:1, line:27:1>
|   |-DeclStmt 0x12100dfe8 <line:4:2, col:16>
|   | |-VarDecl 0x12100deb8 <col:2, col:6> col:6 used k 'int'
|   | `-VarDecl 0x12100df68 <col:2, col:10> col:10 used optptr 'int *'
|   `-IfStmt 0x12102b358 <line:5:2, line:26:2> has_else
|     |-BinaryOperator 0x12100e058 <line:5:6, col:19> 'int' '!='
|     | |-ImplicitCastExpr 0x12100e040 <col:6> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x12100e000 <col:6> 'int' lvalue ParmVar 0x12100dcd8 'on_or_off' 'int'
|     | `-IntegerLiteral 0x12100e020 <col:19> 'int' 0
|     |-CompoundStmt 0x121028c68 <col:22, line:20:2>
|     | |-IfStmt 0x12100e378 <line:7:3, line:8:20>
|     | | |-CXXDependentScopeMemberExpr 0x12100e110 <line:7:7, col:14> '<dependent type>' contains-errors lvalue .opt_booldup
|     | | | `-RecoveryExpr 0x12100e0f0 <col:7> '<dependent type>' contains-errors lvalue
|     | | `-CallExpr 0x12100e338 <line:8:4, col:20> 'int'
|     | |   |-ImplicitCastExpr 0x12100e320 <col:4> 'int (*)()' <FunctionToPointerDecay>
|     | |   | `-DeclRefExpr 0x12100e270 <col:4> 'int ()' Function 0x12100e1b8 'impossible' 'int ()'
|     | |   `-ImplicitCastExpr 0x12100e360 <col:15> 'char *' <ArrayToPointerDecay>
|     | |     `-StringLiteral 0x12100e2d0 <col:15> 'char[4]' lvalue "STR"
|     | |-BinaryOperator 0x1210283b8 <line:10:3, col:19> 'int *' contains-errors '='
|     | | |-DeclRefExpr 0x1210282b0 <col:3> 'int *' lvalue Var 0x12100df68 'optptr' 'int *'
|     | | `-CXXDependentScopeMemberExpr 0x121028370 <col:12, col:19> '<dependent type>' contains-errors lvalue .opt_booldup
|     | |   `-RecoveryExpr 0x121028350 <col:12> '<dependent type>' contains-errors lvalue
|     | |-ForStmt 0x121028608 <line:11:3, line:12:16>
|     | | |-BinaryOperator 0x121028418 <line:11:8, col:12> 'int' '='
|     | | | |-DeclRefExpr 0x1210283d8 <col:8> 'int' lvalue Var 0x12100deb8 'k' 'int'
|     | | | `-IntegerLiteral 0x1210283f8 <col:12> 'int' 0
|     | | |-<<<NULL>>>
|     | | |-BinaryOperator 0x121028520 <col:15, col:31> 'int' contains-errors '<'
|     | | | |-DeclRefExpr 0x121028438 <col:15> 'int' lvalue Var 0x12100deb8 'k' 'int'
|     | | | `-CallExpr 0x1210284f8 <col:19, col:31> '<dependent type>' contains-errors
|     | | |   |-DeclRefExpr 0x121028458 <col:19> 'int ()' Function 0x121028100 'SIZE' 'int ()'
|     | | |   `-RecoveryExpr 0x1210284d8 <col:24> '<dependent type>' contains-errors lvalue
|     | | |-UnaryOperator 0x121028560 <col:34, col:36> 'int' prefix '++'
|     | | | `-DeclRefExpr 0x121028540 <col:36> 'int' lvalue Var 0x12100deb8 'k' 'int'
|     | | `-BinaryOperator 0x1210285e8 <line:12:4, col:16> 'int' '='
|     | |   |-UnaryOperator 0x1210285b0 <col:4, col:11> 'int' lvalue prefix '*' cannot overflow
|     | |   | `-UnaryOperator 0x121028598 <col:5, col:11> 'int *' postfix '++'
|     | |   |   `-DeclRefExpr 0x121028578 <col:5> 'int *' lvalue Var 0x12100df68 'optptr' 'int *'
|     | |   `-IntegerLiteral 0x1210285c8 <col:16> 'int' 0
|     | |-IfStmt 0x1210287a0 <line:14:3, line:15:20>
|     | | |-CXXDependentScopeMemberExpr 0x1210286c0 <line:14:7, col:14> '<dependent type>' contains-errors lvalue .opt_compdup
|     | | | `-RecoveryExpr 0x1210286a0 <col:7> '<dependent type>' contains-errors lvalue
|     | | `-CallExpr 0x121028760 <line:15:4, col:20> 'int'
|     | |   |-ImplicitCastExpr 0x121028748 <col:4> 'int (*)()' <FunctionToPointerDecay>
|     | |   | `-DeclRefExpr 0x121028708 <col:4> 'int ()' Function 0x12100e1b8 'impossible' 'int ()'
|     | |   `-ImplicitCastExpr 0x121028788 <col:15> 'char *' <ArrayToPointerDecay>
|     | |     `-StringLiteral 0x121028728 <col:15> 'char[4]' lvalue "STR"
|     | |-BinaryOperator 0x1210289e0 <line:17:3, col:19> 'int *' contains-errors '='
|     | | |-DeclRefExpr 0x1210288d8 <col:3> 'int *' lvalue Var 0x12100df68 'optptr' 'int *'
|     | | `-CXXDependentScopeMemberExpr 0x121028998 <col:12, col:19> '<dependent type>' contains-errors lvalue .opt_compdup
|     | |   `-RecoveryExpr 0x121028978 <col:12> '<dependent type>' contains-errors lvalue
|     | `-ForStmt 0x121028c30 <line:18:3, line:19:16>
|     |   |-BinaryOperator 0x121028a40 <line:18:8, col:12> 'int' '='
|     |   | |-DeclRefExpr 0x121028a00 <col:8> 'int' lvalue Var 0x12100deb8 'k' 'int'
|     |   | `-IntegerLiteral 0x121028a20 <col:12> 'int' 0
|     |   |-<<<NULL>>>
|     |   |-BinaryOperator 0x121028b48 <col:15, col:31> 'int' contains-errors '<'
|     |   | |-DeclRefExpr 0x121028a60 <col:15> 'int' lvalue Var 0x12100deb8 'k' 'int'
|     |   | `-CallExpr 0x121028b20 <col:19, col:31> '<dependent type>' contains-errors
|     |   |   |-DeclRefExpr 0x121028a80 <col:19> 'int ()' Function 0x121028100 'SIZE' 'int ()'
|     |   |   `-RecoveryExpr 0x121028b00 <col:24> '<dependent type>' contains-errors lvalue
|     |   |-UnaryOperator 0x121028b88 <col:34, col:36> 'int' prefix '++'
|     |   | `-DeclRefExpr 0x121028b68 <col:36> 'int' lvalue Var 0x12100deb8 'k' 'int'
|     |   `-BinaryOperator 0x121028c10 <line:19:4, col:16> 'int' '='
|     |     |-UnaryOperator 0x121028bd8 <col:4, col:11> 'int' lvalue prefix '*' cannot overflow
|     |     | `-UnaryOperator 0x121028bc0 <col:5, col:11> 'int *' postfix '++'
|     |     |   `-DeclRefExpr 0x121028ba0 <col:5> 'int *' lvalue Var 0x12100df68 'optptr' 'int *'
|     |     `-IntegerLiteral 0x121028bf0 <col:16> 'int' 0
|     `-CompoundStmt 0x12102b348 <line:20:9, line:26:2>
`-FunctionDecl 0x12102afe0 <line:22:27> col:27 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x12102b0e0 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x12102b088 <<invalid sloc>> Implicit 873
