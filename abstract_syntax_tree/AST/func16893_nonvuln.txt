TranslationUnitDecl 0x124855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1248564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x124855bd0 '__int128'
|-TypedefDecl 0x124856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x124855bf0 'unsigned __int128'
|-TypedefDecl 0x12500be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12500bc00 'struct __NSConstantString_tag'
|   `-Record 0x124856580 '__NSConstantString_tag'
|-TypedefDecl 0x12500be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x124855d90 '__SVInt8_t'
|-TypedefDecl 0x12500bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x124855db0 '__SVInt16_t'
|-TypedefDecl 0x12500bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x124855dd0 '__SVInt32_t'
|-TypedefDecl 0x12500bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x124855df0 '__SVInt64_t'
|-TypedefDecl 0x12500c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x124855e10 '__SVUint8_t'
|-TypedefDecl 0x12500c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x124855e30 '__SVUint16_t'
|-TypedefDecl 0x12500c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x124855e50 '__SVUint32_t'
|-TypedefDecl 0x12500c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x124855e70 '__SVUint64_t'
|-TypedefDecl 0x12500c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x124855e90 '__SVFloat16_t'
|-TypedefDecl 0x12500c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x124855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12500c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x124855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12500c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x124855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12500c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x124855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12500c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x124855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12500c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x124855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12500c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x124855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12500c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x124855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12500c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x124855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12500c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x124855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12500c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x124855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12500c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x124856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12500c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x124856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12500c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x124856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12500c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x124856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12500c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x124856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12500c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1248560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12500c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1248560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12500c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1248560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12500c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x124856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12500ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x124856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12500cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x124856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12500cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x124856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12500cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x124856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12500d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1248561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12500d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1248561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12500d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1248561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12500d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x124856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12500d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x124856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12500d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x124856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12500d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x124856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12500d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x124856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12500d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1248562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12500d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1248562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12500d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1248562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12500d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x124856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12500d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x124856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12500d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x124856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12500d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x124856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12500da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x124856390 '__SVBool_t'
|-TypedefDecl 0x12500da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1248563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12500dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1248563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12500db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1248563f0 '__SVCount_t'
|-TypedefDecl 0x12500dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12500dbb0 'char *'
|   `-BuiltinType 0x1248556b0 'char'
|-TypedefDecl 0x12500dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12500dbb0 'char *'
|   `-BuiltinType 0x1248556b0 'char'
|-VarDecl 0x12500dd28 <dataset_diviso_filec/func16893_nonvuln.c:1:3, col:18> col:18 referenced invalid ds 'int *'
|-FunctionDecl 0x12500de38 <<invalid sloc>> col:23 implicit used gf_list_get 'int ()'
|-FunctionDecl 0x12500e238 <line:8:1, line:39:19> line:8:15 invalid dasher_reload_muxed_comp 'int (int *, int *, char *, _Bool)' static
| |-ParmVarDecl 0x12500dfc0 <col:40, col:54> col:54 invalid ctx 'int *'
| |-ParmVarDecl 0x12500e040 <col:59, col:74> col:74 referenced invalid base_ds 'int *'
| |-ParmVarDecl 0x12500e0c0 <col:83, col:89> col:89 used mux_pids 'char *'
| |-ParmVarDecl 0x12500e138 <col:99, col:104> col:104 used check_only '_Bool'
| `-CompoundStmt 0x124925760 <line:9:1, line:39:19>
|   `-WhileStmt 0x124925740 <line:11:2, line:39:19>
|     |-ImplicitCastExpr 0x12500e320 <line:11:9> 'char *' <LValueToRValue>
|     | `-DeclRefExpr 0x12500e300 <col:9> 'char *' lvalue ParmVar 0x12500e0c0 'mux_pids' 'char *'
|     `-CompoundStmt 0x124925710 <col:19, line:39:19>
|       |-DeclStmt 0x124923358 <line:14:3, col:36>
|       | `-VarDecl 0x12500e370 <col:3, col:35> col:9 used sep 'char *' cinit
|       |   `-CallExpr 0x1249232f8 <col:15, col:35> 'char *'
|       |     |-ImplicitCastExpr 0x1249232e0 <col:15> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x124923240 <col:15> 'char *(const char *, int)' Function 0x124923060 'strchr' 'char *(const char *, int)'
|       |     |-ImplicitCastExpr 0x124923340 <col:22> 'const char *' <NoOp>
|       |     | `-ImplicitCastExpr 0x124923328 <col:22> 'char *' <LValueToRValue>
|       |     |   `-DeclRefExpr 0x124923260 <col:22> 'char *' lvalue ParmVar 0x12500e0c0 'mux_pids' 'char *'
|       |     `-CharacterLiteral 0x124923280 <col:32> 'int' 32
|       |-IfStmt 0x124923478 <line:15:3, col:21>
|       | |-ImplicitCastExpr 0x124923390 <col:7> 'char *' <LValueToRValue>
|       | | `-DeclRefExpr 0x124923370 <col:7> 'char *' lvalue Var 0x12500e370 'sep' 'char *'
|       | `-BinaryOperator 0x124923458 <col:12, col:21> 'char' '='
|       |   |-ArraySubscriptExpr 0x124923400 <col:12, col:17> 'char' lvalue
|       |   | |-ImplicitCastExpr 0x1249233e8 <col:12> 'char *' <LValueToRValue>
|       |   | | `-DeclRefExpr 0x1249233a8 <col:12> 'char *' lvalue Var 0x12500e370 'sep' 'char *'
|       |   | `-IntegerLiteral 0x1249233c8 <col:16> 'int' 0
|       |   `-ImplicitCastExpr 0x124923440 <col:21> 'char' <IntegralCast>
|       |     `-IntegerLiteral 0x124923420 <col:21> 'int' 0
|       |-IfStmt 0x124925668 <line:19:3, line:37:3> has_else
|       | |-RecoveryExpr 0x124923838 <line:19:7> '<dependent type>' contains-errors lvalue
|       | |-CompoundStmt 0x124925478 <col:11, line:34:3>
|       | | `-IfStmt 0x124925458 <line:20:4, line:33:4>
|       | |   |-UnaryOperator 0x124923890 <line:20:8, col:9> 'int' prefix '!' cannot overflow
|       | |   | `-ImplicitCastExpr 0x124923878 <col:9> '_Bool' <LValueToRValue>
|       | |   |   `-DeclRefExpr 0x124923858 <col:9> '_Bool' lvalue ParmVar 0x12500e138 'check_only' '_Bool'
|       | |   `-CompoundStmt 0x1249253f8 <col:21, line:33:4>
|       | |     |-IfStmt 0x124923aa0 <line:21:5, col:52>
|       | |     | |-CXXDependentScopeMemberExpr 0x1249238c8 <col:9, col:13> '<dependent type>' contains-errors lvalue ->rep
|       | |     | | `-RecoveryExpr 0x1249238a8 <col:9> '<dependent type>' contains-errors lvalue
|       | |     | `-CallExpr 0x124923a78 <col:18, col:52> '<dependent type>' contains-errors
|       | |     |   |-DeclRefExpr 0x1249239f0 <col:18> 'int ()' Function 0x124923938 'gf_mpd_representation_free' 'int ()'
|       | |     |   `-CXXDependentScopeMemberExpr 0x124923a30 <col:45, col:49> '<dependent type>' contains-errors lvalue ->rep
|       | |     |     `-RecoveryExpr 0x124923a10 <col:45> '<dependent type>' contains-errors lvalue
|       | |     |-BinaryOperator 0x124924a48 <line:23:5, col:24> '<dependent type>' contains-errors '='
|       | |     | |-CXXDependentScopeMemberExpr 0x124923b98 <col:5, col:9> '<dependent type>' contains-errors lvalue ->set
|       | |     | | `-RecoveryExpr 0x124923b70 <col:5> '<dependent type>' contains-errors lvalue
|       | |     | |   `-DeclRefExpr 0x124923b50 <col:5> 'int *' lvalue Var 0x12500dd28 'ds' 'int *'
|       | |     | `-CXXDependentScopeMemberExpr 0x124924a00 <col:15, col:24> '<dependent type>' contains-errors lvalue ->set
|       | |     |   `-RecoveryExpr 0x124923be0 <col:15> '<dependent type>' contains-errors lvalue
|       | |     |-BinaryOperator 0x124924b18 <line:24:5, col:22> '<dependent type>' contains-errors '='
|       | |     | |-CXXDependentScopeMemberExpr 0x124924ab0 <col:5, col:9> '<dependent type>' contains-errors lvalue ->muxed_base
|       | |     | | `-RecoveryExpr 0x124924a88 <col:5> '<dependent type>' contains-errors lvalue
|       | |     | |   `-DeclRefExpr 0x124924a68 <col:5> 'int *' lvalue Var 0x12500dd28 'ds' 'int *'
|       | |     | `-RecoveryExpr 0x124924af8 <col:22> '<dependent type>' contains-errors lvalue
|       | |     |-UnaryOperator 0x124924bc8 <line:25:5, col:22> '<dependent type>' contains-errors postfix '++' cannot overflow
|       | |     | `-CXXDependentScopeMemberExpr 0x124924b80 <col:5, col:14> '<dependent type>' contains-errors lvalue ->nb_comp
|       | |     |   `-RecoveryExpr 0x124924b58 <col:5> '<dependent type>' contains-errors lvalue
|       | |     |     `-DeclRefExpr 0x124924b38 <col:5> 'int *' lvalue ParmVar 0x12500e040 'base_ds' 'int *'
|       | |     |-BinaryOperator 0x124924c90 <line:26:5, col:19> '<dependent type>' contains-errors '='
|       | |     | |-CXXDependentScopeMemberExpr 0x124924c28 <col:5, col:9> '<dependent type>' contains-errors lvalue ->nb_comp
|       | |     | | `-RecoveryExpr 0x124924c00 <col:5> '<dependent type>' contains-errors lvalue
|       | |     | |   `-DeclRefExpr 0x124924be0 <col:5> 'int *' lvalue Var 0x12500dd28 'ds' 'int *'
|       | |     | `-IntegerLiteral 0x124924c70 <col:19> 'int' 1
|       | |     |-BinaryOperator 0x124924da8 <line:27:5, col:25> '<dependent type>' contains-errors '='
|       | |     | |-CXXDependentScopeMemberExpr 0x124924cf8 <col:5, col:9> '<dependent type>' contains-errors lvalue ->done
|       | |     | | `-RecoveryExpr 0x124924cd0 <col:5> '<dependent type>' contains-errors lvalue
|       | |     | |   `-DeclRefExpr 0x124924cb0 <col:5> 'int *' lvalue Var 0x12500dd28 'ds' 'int *'
|       | |     | `-CXXDependentScopeMemberExpr 0x124924d60 <col:16, col:25> '<dependent type>' contains-errors lvalue ->done
|       | |     |   `-RecoveryExpr 0x124924d40 <col:16> '<dependent type>' contains-errors lvalue
|       | |     |-BinaryOperator 0x124924ec0 <line:28:5, col:32> '<dependent type>' contains-errors '='
|       | |     | |-CXXDependentScopeMemberExpr 0x124924e10 <col:5, col:9> '<dependent type>' contains-errors lvalue ->subdur_done
|       | |     | | `-RecoveryExpr 0x124924de8 <col:5> '<dependent type>' contains-errors lvalue
|       | |     | |   `-DeclRefExpr 0x124924dc8 <col:5> 'int *' lvalue Var 0x12500dd28 'ds' 'int *'
|       | |     | `-CXXDependentScopeMemberExpr 0x124924e78 <col:23, col:32> '<dependent type>' contains-errors lvalue ->subdur_done
|       | |     |   `-RecoveryExpr 0x124924e58 <col:23> '<dependent type>' contains-errors lvalue
|       | |     |-BinaryOperator 0x124924fd8 <line:29:5, col:23> '<dependent type>' contains-errors '='
|       | |     | |-CXXDependentScopeMemberExpr 0x124924f28 <col:5, col:9> '<dependent type>' contains-errors lvalue ->period
|       | |     | | `-RecoveryExpr 0x124924f00 <col:5> '<dependent type>' contains-errors lvalue
|       | |     | |   `-DeclRefExpr 0x124924ee0 <col:5> 'int *' lvalue Var 0x12500dd28 'ds' 'int *'
|       | |     | `-CXXDependentScopeMemberExpr 0x124924f90 <col:18, col:23> '<dependent type>' contains-errors lvalue ->current_period
|       | |     |   `-RecoveryExpr 0x124924f70 <col:18> '<dependent type>' contains-errors lvalue
|       | |     |-CallExpr 0x1249251c8 <line:31:5, col:51> '<dependent type>' contains-errors
|       | |     | |-DeclRefExpr 0x1249250d8 <col:5> 'int ()' Function 0x124925020 'gf_list_del_item' 'int ()'
|       | |     | |-CXXDependentScopeMemberExpr 0x124925160 <col:22, col:40> '<dependent type>' contains-errors lvalue ->streams
|       | |     | | `-CXXDependentScopeMemberExpr 0x124925118 <col:22, col:27> '<dependent type>' contains-errors lvalue ->next_period
|       | |     | |   `-RecoveryExpr 0x1249250f8 <col:22> '<dependent type>' contains-errors lvalue
|       | |     | `-RecoveryExpr 0x1249251a8 <col:49> '<dependent type>' contains-errors lvalue
|       | |     `-CallExpr 0x1249253c8 <line:32:5, col:49> '<dependent type>' contains-errors
|       | |       |-DeclRefExpr 0x1249252d8 <col:5> 'int ()' Function 0x124925220 'gf_list_add' 'int ()'
|       | |       |-CXXDependentScopeMemberExpr 0x124925360 <col:17, col:38> '<dependent type>' contains-errors lvalue ->streams
|       | |       | `-CXXDependentScopeMemberExpr 0x124925318 <col:17, col:22> '<dependent type>' contains-errors lvalue ->current_period
|       | |       |   `-RecoveryExpr 0x1249252f8 <col:17> '<dependent type>' contains-errors lvalue
|       | |       `-RecoveryExpr 0x1249253a8 <col:47> '<dependent type>' contains-errors lvalue
|       | `-CompoundStmt 0x124925658 <line:34:10, line:37:3>
|       `-IfStmt 0x1249256f0 <line:39:3, col:13>
|         |-UnaryOperator 0x1249256d0 <col:7, col:8> 'int' prefix '!' cannot overflow
|         | `-ImplicitCastExpr 0x1249256b8 <col:8> 'char *' <LValueToRValue>
|         |   `-DeclRefExpr 0x124925698 <col:8> 'char *' lvalue Var 0x12500e370 'sep' 'char *'
|         `-BreakStmt 0x1249256e8 <col:13>
`-FunctionDecl 0x124923060 <line:14:15> col:15 implicit used strchr 'char *(const char *, int)' extern
  |-ParmVarDecl 0x124923160 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x1249231c8 <<invalid sloc>> <invalid sloc> 'int'
  `-BuiltinAttr 0x124923108 <<invalid sloc>> Implicit 893
