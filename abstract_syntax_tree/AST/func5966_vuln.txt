TranslationUnitDecl 0x11f855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x11f8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x11f855bd0 '__int128'
|-TypedefDecl 0x11f856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x11f855bf0 'unsigned __int128'
|-TypedefDecl 0x10500be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x10500bc00 'struct __NSConstantString_tag'
|   `-Record 0x11f856580 '__NSConstantString_tag'
|-TypedefDecl 0x10500be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x11f855d90 '__SVInt8_t'
|-TypedefDecl 0x10500bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x11f855db0 '__SVInt16_t'
|-TypedefDecl 0x10500bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x11f855dd0 '__SVInt32_t'
|-TypedefDecl 0x10500bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x11f855df0 '__SVInt64_t'
|-TypedefDecl 0x10500c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x11f855e10 '__SVUint8_t'
|-TypedefDecl 0x10500c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x11f855e30 '__SVUint16_t'
|-TypedefDecl 0x10500c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x11f855e50 '__SVUint32_t'
|-TypedefDecl 0x10500c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x11f855e70 '__SVUint64_t'
|-TypedefDecl 0x10500c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x11f855e90 '__SVFloat16_t'
|-TypedefDecl 0x10500c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x11f855eb0 '__SVFloat32_t'
|-TypedefDecl 0x10500c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x11f855ed0 '__SVFloat64_t'
|-TypedefDecl 0x10500c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x11f855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x10500c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x11f855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x10500c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x11f855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x10500c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x11f855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x10500c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x11f855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x10500c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x11f855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x10500c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x11f855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x10500c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x11f855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x10500c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x11f855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x10500c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x11f856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x10500c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x11f856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x10500c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x11f856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x10500c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x11f856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x10500c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x11f856090 '__clang_svint8x3_t'
|-TypedefDecl 0x10500c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x11f8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x10500c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x11f8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x10500c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x11f8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x10500c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x11f856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x10500ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x11f856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x10500cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x11f856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x10500cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x11f856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x10500cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x11f856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x10500d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x11f8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x10500d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x11f8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x10500d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x11f8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x10500d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x11f856210 '__clang_svint8x4_t'
|-TypedefDecl 0x10500d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x11f856230 '__clang_svint16x4_t'
|-TypedefDecl 0x10500d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x11f856250 '__clang_svint32x4_t'
|-TypedefDecl 0x10500d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x11f856270 '__clang_svint64x4_t'
|-TypedefDecl 0x10500d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x11f856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x10500d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x11f8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x10500d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x11f8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x10500d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x11f8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x10500d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x11f856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x10500d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x11f856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x10500d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x11f856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x10500d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x11f856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x10500da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x11f856390 '__SVBool_t'
|-TypedefDecl 0x10500da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x11f8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x10500dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x11f8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x10500db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x11f8563f0 '__SVCount_t'
|-TypedefDecl 0x10500dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x10500dbb0 'char *'
|   `-BuiltinType 0x11f8556b0 'char'
|-TypedefDecl 0x10500dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x10500dbb0 'char *'
|   `-BuiltinType 0x11f8556b0 'char'
|-FunctionDecl 0x10500def8 <dataset_diviso_filec/func5966_vuln.c:1:1, line:59:1> line:1:5 fit_config_verify_required_sigs 'int (const void *, int, const void *)'
| |-ParmVarDecl 0x10500dd08 <col:37, col:49> col:49 used fit 'const void *'
| |-ParmVarDecl 0x10500dd88 <col:54, col:58> col:58 used conf_noffset 'int'
| |-ParmVarDecl 0x10500de08 <line:2:9, col:21> col:21 used sig_blob 'const void *'
| `-CompoundStmt 0x10502b168 <line:3:1, line:59:1>
|   |-DeclStmt 0x10500e080 <line:4:2, col:13>
|   | `-VarDecl 0x10500e018 <col:2, col:6> col:6 used noffset 'int'
|   |-DeclStmt 0x10500e118 <line:5:2, col:14>
|   | `-VarDecl 0x10500e0b0 <col:2, col:6> col:6 used sig_node 'int'
|   |-DeclStmt 0x10500e1d0 <line:6:2, col:18>
|   | `-VarDecl 0x10500e148 <col:2, col:17> col:6 used verified 'int' cinit
|   |   `-IntegerLiteral 0x10500e1b0 <col:17> 'int' 0
|   |-DeclStmt 0x10500e288 <line:7:2, col:19>
|   | `-VarDecl 0x10500e200 <col:2, col:18> col:6 used reqd_sigs 'int' cinit
|   |   `-IntegerLiteral 0x10500e268 <col:18> 'int' 0
|   |-DeclStmt 0x10500e338 <line:9:2, col:23>
|   | `-VarDecl 0x10500e2d0 <col:2, col:14> col:14 used reqd_mode 'const char *'
|   |-BinaryOperator 0x1050275e0 <line:12:2, col:61> 'int' contains-errors '='
|   | |-DeclRefExpr 0x10500e350 <col:2> 'int' lvalue Var 0x10500e0b0 'sig_node' 'int'
|   | `-CallExpr 0x1050275a8 <col:13, col:61> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x1050274b8 <col:13> 'int ()' Function 0x105027400 'fdt_subnode_offset' 'int ()'
|   |   |-DeclRefExpr 0x1050274d8 <col:32> 'const void *' lvalue ParmVar 0x10500de08 'sig_blob' 'const void *'
|   |   |-IntegerLiteral 0x1050274f8 <col:42> 'int' 0
|   |   `-RecoveryExpr 0x105027588 <col:45> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x105027b28 <line:13:2, line:17:2>
|   | |-BinaryOperator 0x105027658 <line:13:6, col:17> 'int' '<'
|   | | |-ImplicitCastExpr 0x105027640 <col:6> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x105027600 <col:6> 'int' lvalue Var 0x10500e0b0 'sig_node' 'int'
|   | | `-IntegerLiteral 0x105027620 <col:17> 'int' 0
|   | `-CompoundStmt 0x105027b08 <col:20, line:17:2>
|   |   |-CallExpr 0x105027a70 <line:14:3, line:15:31> 'int'
|   |   | |-ImplicitCastExpr 0x105027a58 <line:14:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x105027758 <col:3> 'int ()' Function 0x1050276a0 'debug' 'int ()'
|   |   | |-ImplicitCastExpr 0x105027aa8 <col:9> 'char *' <ArrayToPointerDecay>
|   |   | | `-StringLiteral 0x1050277c0 <col:9> 'char[4]' lvalue "STR"
|   |   | |-ImplicitCastExpr 0x105027ac0 <col:16> 'const char *' <ArrayToPointerDecay>
|   |   | | `-PredefinedExpr 0x105027898 <col:16> 'const char[32]' lvalue __func__
|   |   | |   `-StringLiteral 0x105027860 <col:16> 'const char[32]' lvalue "fit_config_verify_required_sigs"
|   |   | `-CallExpr 0x105027a18 <line:15:9, col:30> 'int'
|   |   |   |-ImplicitCastExpr 0x105027a00 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x105027990 <col:9> 'int ()' Function 0x1050278d8 'fdt_strerror' 'int ()'
|   |   |   `-ImplicitCastExpr 0x105027a40 <col:22> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1050279b0 <col:22> 'int' lvalue Var 0x10500e0b0 'sig_node' 'int'
|   |   `-ReturnStmt 0x105027af8 <line:16:3, col:10>
|   |     `-IntegerLiteral 0x105027ad8 <col:10> 'int' 0
|   |-BinaryOperator 0x105027da0 <line:20:2, col:57> 'const char *' contains-errors '='
|   | |-DeclRefExpr 0x105027b48 <col:2> 'const char *' lvalue Var 0x10500e2d0 'reqd_mode' 'const char *'
|   | `-CallExpr 0x105027d60 <col:14, col:57> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x105027c48 <col:14> 'int ()' Function 0x105027b90 'fdt_getprop' 'int ()'
|   |   |-DeclRefExpr 0x105027c68 <col:26> 'const void *' lvalue ParmVar 0x10500de08 'sig_blob' 'const void *'
|   |   |-DeclRefExpr 0x105027c88 <col:36> 'int' lvalue Var 0x10500e0b0 'sig_node' 'int'
|   |   |-StringLiteral 0x105027ca8 <col:46> 'char[4]' lvalue "STR"
|   |   `-RecoveryExpr 0x105027d40 <col:53> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x105029e78 <line:27:2, col:50> 'int'
|   | |-ImplicitCastExpr 0x105029e60 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x105029de0 <col:2> 'int ()' Function 0x105029d28 'fdt_for_each_subnode' 'int ()'
|   | |-ImplicitCastExpr 0x105029eb0 <col:23> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x105029e00 <col:23> 'int' lvalue Var 0x10500e018 'noffset' 'int'
|   | |-ImplicitCastExpr 0x105029ec8 <col:32> 'const void *' <LValueToRValue>
|   | | `-DeclRefExpr 0x105029e20 <col:32> 'const void *' lvalue ParmVar 0x10500de08 'sig_blob' 'const void *'
|   | `-ImplicitCastExpr 0x105029ee0 <col:42> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x105029e40 <col:42> 'int' lvalue Var 0x10500e0b0 'sig_node' 'int'
|   |-CompoundStmt 0x10502af18 <col:52, line:51:2>
|   | |-DeclStmt 0x105029f78 <line:28:3, col:23>
|   | | `-VarDecl 0x105029f10 <col:3, col:15> col:15 used required 'const char *'
|   | |-DeclStmt 0x10502a010 <line:29:3, col:10>
|   | | `-VarDecl 0x105029fa8 <col:3, col:7> col:7 used ret 'int'
|   | |-BinaryOperator 0x10502a1b8 <line:31:3, line:32:16> 'const char *' contains-errors '='
|   | | |-DeclRefExpr 0x10502a028 <line:31:3> 'const char *' lvalue Var 0x105029f10 'required' 'const char *'
|   | | `-CallExpr 0x10502a178 <col:14, line:32:16> '<dependent type>' contains-errors
|   | |   |-DeclRefExpr 0x10502a048 <line:31:14> 'int ()' Function 0x105027b90 'fdt_getprop' 'int ()'
|   | |   |-DeclRefExpr 0x10502a068 <col:26> 'const void *' lvalue ParmVar 0x10500de08 'sig_blob' 'const void *'
|   | |   |-DeclRefExpr 0x10502a088 <col:36> 'int' lvalue Var 0x10500e018 'noffset' 'int'
|   | |   |-RecoveryExpr 0x10502a138 <col:45> '<dependent type>' contains-errors lvalue
|   | |   `-RecoveryExpr 0x10502a158 <line:32:12> '<dependent type>' contains-errors lvalue
|   | |-UnaryOperator 0x10502a388 <line:36:3, col:12> 'int' postfix '++'
|   | | `-DeclRefExpr 0x10502a368 <col:3> 'int' lvalue Var 0x10500e200 'reqd_sigs' 'int'
|   | |-BinaryOperator 0x10502a5f8 <line:38:3, line:39:17> 'int' '='
|   | | |-DeclRefExpr 0x10502a3a0 <line:38:3> 'int' lvalue Var 0x105029fa8 'ret' 'int'
|   | | `-CallExpr 0x10502a558 <col:9, line:39:17> 'int'
|   | |   |-ImplicitCastExpr 0x10502a540 <line:38:9> 'int (*)()' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x10502a4a0 <col:9> 'int ()' Function 0x10502a3e8 'fit_config_verify_sig' 'int ()'
|   | |   |-ImplicitCastExpr 0x10502a598 <col:31> 'const void *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x10502a4c0 <col:31> 'const void *' lvalue ParmVar 0x10500dd08 'fit' 'const void *'
|   | |   |-ImplicitCastExpr 0x10502a5b0 <col:36> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x10502a4e0 <col:36> 'int' lvalue ParmVar 0x10500dd88 'conf_noffset' 'int'
|   | |   |-ImplicitCastExpr 0x10502a5c8 <col:50> 'const void *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x10502a500 <col:50> 'const void *' lvalue ParmVar 0x10500de08 'sig_blob' 'const void *'
|   | |   `-ImplicitCastExpr 0x10502a5e0 <line:39:10> 'int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x10502a520 <col:10> 'int' lvalue Var 0x10500e018 'noffset' 'int'
|   | `-IfStmt 0x10502aee8 <line:40:3, line:50:3> has_else
|   |   |-ImplicitCastExpr 0x10502a638 <line:40:7> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x10502a618 <col:7> 'int' lvalue Var 0x105029fa8 'ret' 'int'
|   |   |-CompoundStmt 0x10502ae60 <col:12, line:46:3>
|   |   | `-IfStmt 0x10502ae40 <line:41:4, line:45:4>
|   |   |   |-RecoveryExpr 0x10502a650 <line:41:8> '_Bool' contains-errors
|   |   |   `-CompoundStmt 0x10502ae28 <col:25, line:45:4>
|   |   |     `-ReturnStmt 0x10502ae18 <line:44:5, col:12>
|   |   |       `-ImplicitCastExpr 0x10502ae00 <col:12> 'int' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x10502a9d8 <col:12> 'int' lvalue Var 0x105029fa8 'ret' 'int'
|   |   `-CompoundStmt 0x10502aed0 <line:46:10, line:50:3>
|   |     `-UnaryOperator 0x10502ae98 <line:47:4, col:12> 'int' postfix '++'
|   |       `-DeclRefExpr 0x10502ae78 <col:4> 'int' lvalue Var 0x10500e148 'verified' 'int'
|   |-IfStmt 0x10502b118 <line:53:2, line:56:2>
|   | |-BinaryOperator 0x10502afe0 <line:53:6, col:20> 'int' '&&'
|   | | |-ImplicitCastExpr 0x10502afc8 <col:6> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x10502af58 <col:6> 'int' lvalue Var 0x10500e200 'reqd_sigs' 'int'
|   | | `-UnaryOperator 0x10502afb0 <col:19, col:20> 'int' prefix '!' cannot overflow
|   | |   `-ImplicitCastExpr 0x10502af98 <col:20> 'int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x10502af78 <col:20> 'int' lvalue Var 0x10500e148 'verified' 'int'
|   | `-CompoundStmt 0x10502b100 <col:30, line:56:2>
|   |   `-CallExpr 0x10502b0a8 <line:54:3, col:15> 'int'
|   |     |-ImplicitCastExpr 0x10502b090 <col:3> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x10502b000 <col:3> 'int (const char *, ...)' Function 0x10502a6b0 'printf' 'int (const char *, ...)'
|   |     `-ImplicitCastExpr 0x10502b0e8 <col:10> 'const char *' <NoOp>
|   |       `-ImplicitCastExpr 0x10502b0d0 <col:10> 'char *' <ArrayToPointerDecay>
|   |         `-StringLiteral 0x10502b020 <col:10> 'char[4]' lvalue "STR"
|   `-ReturnStmt 0x10502b158 <line:58:2, col:9>
|     `-IntegerLiteral 0x10502b138 <col:9> 'int' 0
|-FunctionDecl 0x105028240 <line:21:20> col:20 implicit used strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x105028340 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x105029a00 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x1050282e8 <<invalid sloc>> Implicit 887
`-FunctionDecl 0x10502a6b0 <line:42:5> col:5 implicit used printf 'int (const char *, ...)' extern
  |-ParmVarDecl 0x10502a7b0 <<invalid sloc>> <invalid sloc> 'const char *'
  |-BuiltinAttr 0x10502a758 <<invalid sloc>> Implicit 903
  `-FormatAttr 0x10502a820 <col:5> Implicit printf 1 2
