TranslationUnitDecl 0x144855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1448564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x144855bd0 '__int128'
|-TypedefDecl 0x144856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x144855bf0 'unsigned __int128'
|-TypedefDecl 0x14500be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14500bc00 'struct __NSConstantString_tag'
|   `-Record 0x144856580 '__NSConstantString_tag'
|-TypedefDecl 0x14500be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x144855d90 '__SVInt8_t'
|-TypedefDecl 0x14500bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x144855db0 '__SVInt16_t'
|-TypedefDecl 0x14500bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x144855dd0 '__SVInt32_t'
|-TypedefDecl 0x14500bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x144855df0 '__SVInt64_t'
|-TypedefDecl 0x14500c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x144855e10 '__SVUint8_t'
|-TypedefDecl 0x14500c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x144855e30 '__SVUint16_t'
|-TypedefDecl 0x14500c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x144855e50 '__SVUint32_t'
|-TypedefDecl 0x14500c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x144855e70 '__SVUint64_t'
|-TypedefDecl 0x14500c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x144855e90 '__SVFloat16_t'
|-TypedefDecl 0x14500c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x144855eb0 '__SVFloat32_t'
|-TypedefDecl 0x14500c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x144855ed0 '__SVFloat64_t'
|-TypedefDecl 0x14500c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x144855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14500c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x144855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14500c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x144855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14500c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x144855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14500c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x144855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14500c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x144855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14500c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x144855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14500c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x144855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14500c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x144855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14500c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x144856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14500c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x144856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14500c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x144856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14500c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x144856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14500c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x144856090 '__clang_svint8x3_t'
|-TypedefDecl 0x14500c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1448560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14500c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1448560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14500c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1448560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14500c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x144856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14500ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x144856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14500cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x144856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14500cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x144856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14500cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x144856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14500d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1448561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14500d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1448561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14500d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1448561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14500d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x144856210 '__clang_svint8x4_t'
|-TypedefDecl 0x14500d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x144856230 '__clang_svint16x4_t'
|-TypedefDecl 0x14500d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x144856250 '__clang_svint32x4_t'
|-TypedefDecl 0x14500d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x144856270 '__clang_svint64x4_t'
|-TypedefDecl 0x14500d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x144856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14500d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1448562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14500d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1448562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14500d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1448562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14500d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x144856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14500d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x144856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14500d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x144856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14500d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x144856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14500da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x144856390 '__SVBool_t'
|-TypedefDecl 0x14500da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1448563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14500dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1448563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14500db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1448563f0 '__SVCount_t'
|-TypedefDecl 0x14500dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14500dbb0 'char *'
|   `-BuiltinType 0x1448556b0 'char'
|-TypedefDecl 0x14500dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14500dbb0 'char *'
|   `-BuiltinType 0x1448556b0 'char'
|-FunctionDecl 0x145026878 <dataset_diviso_filec/func12202_vuln.c:1:1, line:23:1> line:1:1 lyd_new_output_leaf 'int (struct lyd_node *, const struct lys_module *, const char *, const char *)'
| |-ParmVarDecl 0x14500e248 <col:21, col:38> col:38 used parent 'struct lyd_node *'
| |-ParmVarDecl 0x145026628 <col:46, col:71> col:71 used module 'const struct lys_module *'
| |-ParmVarDecl 0x1450266a8 <col:79, col:91> col:91 used name 'const char *'
| |-ParmVarDecl 0x145026728 <col:97, col:109> col:109 used val_str 'const char *'
| `-CompoundStmt 0x145809000 <line:2:1, line:23:1>
|   |-DeclStmt 0x145026c60 <line:3:5, col:51>
|   | |-RecordDecl 0x145026988 <col:11, col:18> col:18 struct lys_node
|   | |-VarDecl 0x145026af8 <col:5, col:36> col:28 used snode 'const struct lys_node *' cinit
|   | | `-RecoveryExpr 0x145026b90 <col:36> '<dependent type>' contains-errors lvalue
|   | `-VarDecl 0x145026bd8 <col:5, col:43> col:43 used siblings 'const struct lys_node *'
|   |-IfStmt 0x145026e28 <line:5:5, line:8:5>
|   | |-BinaryOperator 0x145026da8 <line:5:9, col:34> 'int' '||'
|   | | |-ParenExpr 0x145026d38 <col:9, col:28> 'int'
|   | | | `-BinaryOperator 0x145026d18 <col:10, col:22> 'int' '&&'
|   | | |   |-UnaryOperator 0x145026cb0 <col:10, col:11> 'int' prefix '!' cannot overflow
|   | | |   | `-ImplicitCastExpr 0x145026c98 <col:11> 'struct lyd_node *' <LValueToRValue>
|   | | |   |   `-DeclRefExpr 0x145026c78 <col:11> 'struct lyd_node *' lvalue ParmVar 0x14500e248 'parent' 'struct lyd_node *'
|   | | |   `-UnaryOperator 0x145026d00 <col:21, col:22> 'int' prefix '!' cannot overflow
|   | | |     `-ImplicitCastExpr 0x145026ce8 <col:22> 'const struct lys_module *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x145026cc8 <col:22> 'const struct lys_module *' lvalue ParmVar 0x145026628 'module' 'const struct lys_module *'
|   | | `-UnaryOperator 0x145026d90 <col:33, col:34> 'int' prefix '!' cannot overflow
|   | |   `-ImplicitCastExpr 0x145026d78 <col:34> 'const char *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x145026d58 <col:34> 'const char *' lvalue ParmVar 0x1450266a8 'name' 'const char *'
|   | `-CompoundStmt 0x145026e10 <col:40, line:8:5>
|   |   `-ReturnStmt 0x145026e00 <line:7:9, col:16>
|   |     `-RecoveryExpr 0x145026de0 <col:16> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x1450270c8 <line:10:5, col:53> 'const struct lys_node *' '='
|   | |-DeclRefExpr 0x145026e48 <col:5> 'const struct lys_node *' lvalue Var 0x145026bd8 'siblings' 'const struct lys_node *'
|   | `-ImplicitCastExpr 0x1450270b0 <col:16, col:53> 'const struct lys_node *' <IntegralToPointer>
|   |   `-CallExpr 0x145027048 <col:16, col:53> 'int'
|   |     |-ImplicitCastExpr 0x145027030 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x145026f80 <col:16> 'int ()' Function 0x145026ec8 'lyd_new_find_schema' 'int ()'
|   |     |-ImplicitCastExpr 0x145027080 <col:36> 'struct lyd_node *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x145026fa0 <col:36> 'struct lyd_node *' lvalue ParmVar 0x14500e248 'parent' 'struct lyd_node *'
|   |     |-ImplicitCastExpr 0x145027098 <col:44> 'const struct lys_module *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x145026fc0 <col:44> 'const struct lys_module *' lvalue ParmVar 0x145026628 'module' 'const struct lys_module *'
|   |     `-IntegerLiteral 0x145026fe0 <col:52> 'int' 1
|   |-IfStmt 0x145027198 <line:11:5, line:14:5>
|   | |-UnaryOperator 0x145027120 <line:11:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x145027108 <col:10> 'const struct lys_node *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1450270e8 <col:10> 'const struct lys_node *' lvalue Var 0x145026bd8 'siblings' 'const struct lys_node *'
|   | `-CompoundStmt 0x145027180 <col:20, line:14:5>
|   |   `-ReturnStmt 0x145027170 <line:13:9, col:16>
|   |     `-RecoveryExpr 0x145027150 <col:16> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x145808d88 <line:16:5, line:20:5>
|   | |-BinaryOperator 0x145808778 <line:16:9, col:113> 'int' contains-errors '||'
|   | | |-CallExpr 0x1458086f8 <col:9, col:107> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x145027298 <col:9> 'int ()' Function 0x1450271e0 'lys_getnext_data' 'int ()'
|   | | | |-DeclRefExpr 0x1450272b8 <col:26> 'const struct lys_module *' lvalue ParmVar 0x145026628 'module' 'const struct lys_module *'
|   | | | |-CallExpr 0x1458085e8 <col:34, col:53> 'int'
|   | | | | |-ImplicitCastExpr 0x1458085d0 <col:34> 'int (*)()' <FunctionToPointerDecay>
|   | | | | | `-DeclRefExpr 0x1450273b8 <col:34> 'int ()' Function 0x145027300 'lys_parent' 'int ()'
|   | | | | `-ImplicitCastExpr 0x145808610 <col:45> 'const struct lys_node *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x1450273d8 <col:45> 'const struct lys_node *' lvalue Var 0x145026bd8 'siblings' 'const struct lys_node *'
|   | | | |-DeclRefExpr 0x145027450 <col:56> 'const char *' lvalue ParmVar 0x1450266a8 'name' 'const char *'
|   | | | |-CallExpr 0x145808658 <col:62, col:73> 'unsigned long'
|   | | | | |-ImplicitCastExpr 0x145808640 <col:62> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   | | | | | `-DeclRefExpr 0x145808270 <col:62> 'unsigned long (const char *)' Function 0x1450274a8 'strlen' 'unsigned long (const char *)'
|   | | | | `-ImplicitCastExpr 0x145808680 <col:69> 'const char *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x145808290 <col:69> 'const char *' lvalue ParmVar 0x1450266a8 'name' 'const char *'
|   | | | |-BinaryOperator 0x1458086d8 <col:76, col:91> '<dependent type>' contains-errors '|'
|   | | | | |-RecoveryExpr 0x145808698 <col:76> '<dependent type>' contains-errors lvalue
|   | | | | `-RecoveryExpr 0x1458086b8 <col:91> '<dependent type>' contains-errors lvalue
|   | | | `-UnaryOperator 0x145808430 <col:101, col:102> 'const struct lys_node **' contains-errors prefix '&' cannot overflow
|   | | |   `-DeclRefExpr 0x1458083a8 <col:102> 'const struct lys_node *' contains-errors lvalue Var 0x145026af8 'snode' 'const struct lys_node *'
|   | | `-UnaryOperator 0x145808760 <col:112, col:113> 'int' contains-errors prefix '!' cannot overflow
|   | |   `-ImplicitCastExpr 0x145808748 <col:113> 'const struct lys_node *' contains-errors <LValueToRValue>
|   | |     `-DeclRefExpr 0x145808498 <col:113> 'const struct lys_node *' contains-errors lvalue Var 0x145026af8 'snode' 'const struct lys_node *'
|   | `-CompoundStmt 0x145808d68 <col:120, line:20:5>
|   |   |-CallExpr 0x145808cd0 <line:17:9, line:18:69> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x145808878 <line:17:9> 'int ()' Function 0x1458087c0 'LOGERR' 'int ()'
|   |   | |-CXXDependentScopeMemberExpr 0x1458088f8 <col:16, col:34> '<dependent type>' contains-errors lvalue ->ctx
|   |   | | `-RecoveryExpr 0x1458088d0 <col:16, col:26> '<dependent type>' contains-errors lvalue
|   |   | |   `-DeclRefExpr 0x145808898 <col:16> 'const struct lys_node *' lvalue Var 0x145026bd8 'siblings' 'const struct lys_node *'
|   |   | |-RecoveryExpr 0x145808c30 <col:39> '<dependent type>' contains-errors lvalue
|   |   | |-StringLiteral 0x1458089a0 <col:50> 'char[4]' lvalue "STR"
|   |   | |-DeclRefExpr 0x1458089c0 <line:18:16> 'const char *' lvalue ParmVar 0x1450266a8 'name' 'const char *'
|   |   | |-RecoveryExpr 0x145808ca8 <col:22, col:49> '<dependent type>' contains-errors lvalue
|   |   | | `-CallExpr 0x145808c68 <col:22, col:46> 'int'
|   |   | |   |-ImplicitCastExpr 0x145808c50 <col:22> 'int (*)()' <FunctionToPointerDecay>
|   |   | |   | `-DeclRefExpr 0x145808ac0 <col:22> 'int ()' Function 0x145808a08 'lys_node_module' 'int ()'
|   |   | |   `-ImplicitCastExpr 0x145808c90 <col:38> 'const struct lys_node *' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x145808ae0 <col:38> 'const struct lys_node *' lvalue Var 0x145026bd8 'siblings' 'const struct lys_node *'
|   |   | `-RecoveryExpr 0x145808bb8 <col:55, col:65> '<dependent type>' contains-errors lvalue
|   |   |   `-DeclRefExpr 0x145808b80 <col:55> 'const struct lys_node *' lvalue Var 0x145026bd8 'siblings' 'const struct lys_node *'
|   |   `-ReturnStmt 0x145808d58 <line:19:9, col:16>
|   |     `-RecoveryExpr 0x145808d38 <col:16> '<dependent type>' contains-errors lvalue
|   `-ReturnStmt 0x145808ff0 <line:22:5, col:54>
|     `-CallExpr 0x145808f60 <col:12, col:54> 'int' contains-errors
|       |-ImplicitCastExpr 0x145808f48 <col:12> 'int (*)()' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x145808e88 <col:12> 'int ()' Function 0x145808dd0 '_lyd_new_leaf' 'int ()'
|       |-ImplicitCastExpr 0x145808fa8 <col:26> 'struct lyd_node *' <LValueToRValue>
|       | `-DeclRefExpr 0x145808ea8 <col:26> 'struct lyd_node *' lvalue ParmVar 0x14500e248 'parent' 'struct lyd_node *'
|       |-ImplicitCastExpr 0x145808fc0 <col:34> 'const struct lys_node *' contains-errors <LValueToRValue>
|       | `-DeclRefExpr 0x145808ec8 <col:34> 'const struct lys_node *' contains-errors lvalue Var 0x145026af8 'snode' 'const struct lys_node *'
|       |-ImplicitCastExpr 0x145808fd8 <col:41> 'const char *' <LValueToRValue>
|       | `-DeclRefExpr 0x145808ee8 <col:41> 'const char *' lvalue ParmVar 0x145026728 'val_str' 'const char *'
|       |-IntegerLiteral 0x145808f08 <col:50> 'int' 0
|       `-IntegerLiteral 0x145808f28 <col:53> 'int' 0
`-FunctionDecl 0x1450274a8 <line:16:62> col:62 implicit used strlen 'unsigned long (const char *)' extern
  |-ParmVarDecl 0x145808200 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x145027550 <<invalid sloc>> Implicit 902
