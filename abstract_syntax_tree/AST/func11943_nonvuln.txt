TranslationUnitDecl 0x15b055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x15b0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x15b055bd0 '__int128'
|-TypedefDecl 0x15b056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x15b055bf0 'unsigned __int128'
|-TypedefDecl 0x15b80be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15b80bc00 'struct __NSConstantString_tag'
|   `-Record 0x15b056580 '__NSConstantString_tag'
|-TypedefDecl 0x15b80be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x15b055d90 '__SVInt8_t'
|-TypedefDecl 0x15b80bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x15b055db0 '__SVInt16_t'
|-TypedefDecl 0x15b80bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x15b055dd0 '__SVInt32_t'
|-TypedefDecl 0x15b80bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x15b055df0 '__SVInt64_t'
|-TypedefDecl 0x15b80c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x15b055e10 '__SVUint8_t'
|-TypedefDecl 0x15b80c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x15b055e30 '__SVUint16_t'
|-TypedefDecl 0x15b80c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x15b055e50 '__SVUint32_t'
|-TypedefDecl 0x15b80c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x15b055e70 '__SVUint64_t'
|-TypedefDecl 0x15b80c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x15b055e90 '__SVFloat16_t'
|-TypedefDecl 0x15b80c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x15b055eb0 '__SVFloat32_t'
|-TypedefDecl 0x15b80c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x15b055ed0 '__SVFloat64_t'
|-TypedefDecl 0x15b80c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x15b055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15b80c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x15b055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15b80c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x15b055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15b80c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x15b055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15b80c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x15b055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15b80c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x15b055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15b80c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x15b055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15b80c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x15b055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15b80c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x15b055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15b80c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x15b056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15b80c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x15b056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15b80c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x15b056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15b80c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x15b056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15b80c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x15b056090 '__clang_svint8x3_t'
|-TypedefDecl 0x15b80c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x15b0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15b80c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x15b0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15b80c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x15b0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15b80c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x15b056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15b80ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x15b056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15b80cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x15b056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15b80cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x15b056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15b80cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x15b056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15b80d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x15b0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15b80d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x15b0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15b80d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x15b0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15b80d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x15b056210 '__clang_svint8x4_t'
|-TypedefDecl 0x15b80d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x15b056230 '__clang_svint16x4_t'
|-TypedefDecl 0x15b80d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x15b056250 '__clang_svint32x4_t'
|-TypedefDecl 0x15b80d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x15b056270 '__clang_svint64x4_t'
|-TypedefDecl 0x15b80d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x15b056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15b80d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x15b0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15b80d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x15b0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15b80d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x15b0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15b80d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x15b056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15b80d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x15b056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15b80d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x15b056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15b80d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x15b056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15b80da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x15b056390 '__SVBool_t'
|-TypedefDecl 0x15b80da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x15b0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15b80dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x15b0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15b80db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x15b0563f0 '__SVCount_t'
|-TypedefDecl 0x15b80dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15b80dbb0 'char *'
|   `-BuiltinType 0x15b0556b0 'char'
|-TypedefDecl 0x15b80dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15b80dbb0 'char *'
|   `-BuiltinType 0x15b0556b0 'char'
`-FunctionDecl 0x15b80e358 <dataset_diviso_filec/func11943_nonvuln.c:1:1, line:36:1> line:1:12 fixup_call_args 'int (struct bpf_verifier_env *)' static
  |-ParmVarDecl 0x15b80e248 <col:28, col:53> col:53 used env 'struct bpf_verifier_env *'
  `-CompoundStmt 0x15b82a010 <line:2:1, line:36:1>
    |-DeclStmt 0x15b826898 <line:4:2, col:35>
    | |-RecordDecl 0x15b826650 <col:2, col:9> col:9 struct bpf_prog
    | `-VarDecl 0x15b8267b8 <col:2, col:31> col:19 used prog 'struct bpf_prog *' cinit
    |   `-RecoveryExpr 0x15b826858 <col:26, col:31> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x15b826820 <col:26> 'struct bpf_verifier_env *' lvalue ParmVar 0x15b80e248 'env' 'struct bpf_verifier_env *'
    |-DeclStmt 0x15b826af8 <line:5:2, col:38>
    | |-RecordDecl 0x15b8268b0 <col:2, col:9> col:9 struct bpf_insn
    | `-VarDecl 0x15b826a18 <col:2, col:32> col:19 used insn 'struct bpf_insn *' cinit
    |   `-RecoveryExpr 0x15b826ab8 <col:26, col:32> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x15b826a80 <col:26> 'struct bpf_prog *' contains-errors lvalue Var 0x15b8267b8 'prog' 'struct bpf_prog *'
    |-DeclStmt 0x15b826c28 <line:6:2, col:14>
    | |-VarDecl 0x15b826b28 <col:2, col:6> col:6 used i 'int'
    | `-VarDecl 0x15b826ba8 <col:2, col:9> col:9 used depth 'int'
    |-DeclStmt 0x15b826ce0 <line:8:2, col:13>
    | `-VarDecl 0x15b826c58 <col:2, col:12> col:6 used err 'int' cinit
    |   `-IntegerLiteral 0x15b826cc0 <col:12> 'int' 0
    |-IfStmt 0x15b827438 <line:10:2, line:17:2>
    | |-BinaryOperator 0x15b826fd8 <line:10:6, line:11:43> 'int' contains-errors '&&'
    | | |-CXXDependentScopeMemberExpr 0x15b826d58 <line:10:6, col:17> '<dependent type>' contains-errors lvalue ->jit_requested
    | | | `-RecoveryExpr 0x15b826d30 <col:6, col:11> '<dependent type>' contains-errors lvalue
    | | |   `-DeclRefExpr 0x15b826cf8 <col:6> 'struct bpf_verifier_env *' lvalue ParmVar 0x15b80e248 'env' 'struct bpf_verifier_env *'
    | | `-UnaryOperator 0x15b826fc0 <line:11:6, col:43> '<dependent type>' contains-errors prefix '!' cannot overflow
    | |   `-CallExpr 0x15b826f98 <col:7, col:43> '<dependent type>' contains-errors
    | |     |-DeclRefExpr 0x15b826ed0 <col:7> 'int ()' Function 0x15b826e18 'bpf_prog_is_dev_bound' 'int ()'
    | |     `-CXXDependentScopeMemberExpr 0x15b826f50 <col:29, col:40> '<dependent type>' contains-errors lvalue ->aux
    | |       `-RecoveryExpr 0x15b826f28 <col:29, col:34> '<dependent type>' contains-errors lvalue
    | |         `-DeclRefExpr 0x15b826ef0 <col:29> 'struct bpf_verifier_env *' lvalue ParmVar 0x15b80e248 'env' 'struct bpf_verifier_env *'
    | `-CompoundStmt 0x15b827410 <col:46, line:17:2>
    |   |-BinaryOperator 0x15b8271c8 <line:12:3, col:25> 'int' '='
    |   | |-DeclRefExpr 0x15b826ff8 <col:3> 'int' lvalue Var 0x15b826c58 'err' 'int'
    |   | `-CallExpr 0x15b827188 <col:9, col:25> 'int'
    |   |   |-ImplicitCastExpr 0x15b827170 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   |   | `-DeclRefExpr 0x15b8270f8 <col:9> 'int ()' Function 0x15b827040 'jit_subprogs' 'int ()'
    |   |   `-ImplicitCastExpr 0x15b8271b0 <col:22> 'struct bpf_verifier_env *' <LValueToRValue>
    |   |     `-DeclRefExpr 0x15b827118 <col:22> 'struct bpf_verifier_env *' lvalue ParmVar 0x15b80e248 'env' 'struct bpf_verifier_env *'
    |   |-IfStmt 0x15b827290 <line:13:3, line:14:11>
    |   | |-BinaryOperator 0x15b827240 <line:13:7, col:14> 'int' '=='
    |   | | |-ImplicitCastExpr 0x15b827228 <col:7> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x15b8271e8 <col:7> 'int' lvalue Var 0x15b826c58 'err' 'int'
    |   | | `-IntegerLiteral 0x15b827208 <col:14> 'int' 0
    |   | `-ReturnStmt 0x15b827280 <line:14:4, col:11>
    |   |   `-IntegerLiteral 0x15b827260 <col:11> 'int' 0
    |   `-IfStmt 0x15b8273f0 <line:15:3, line:16:11>
    |     |-BinaryOperator 0x15b827388 <line:15:7, col:15> 'int' contains-errors '=='
    |     | |-DeclRefExpr 0x15b8272b0 <col:7> 'int' lvalue Var 0x15b826c58 'err' 'int'
    |     | `-UnaryOperator 0x15b827370 <col:14, col:15> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     |   `-ImplicitCastExpr 0x15b827358 <col:15> '<dependent type>' contains-errors <LValueToRValue>
    |     |     `-RecoveryExpr 0x15b827338 <col:15> '<dependent type>' contains-errors lvalue
    |     `-ReturnStmt 0x15b8273e0 <line:16:4, col:11>
    |       `-ImplicitCastExpr 0x15b8273c8 <col:11> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x15b8273a8 <col:11> 'int' lvalue Var 0x15b826c58 'err' 'int'
    |-IfStmt 0x15b8296e0 <line:19:2, line:23:2>
    | |-BinaryOperator 0x15b829400 <line:19:6, col:46> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x15b8274d8 <col:6, col:25> 'int' contains-errors '>'
    | | | |-RecoveryExpr 0x15b827490 <col:6, col:11> '<dependent type>' contains-errors lvalue
    | | | | `-DeclRefExpr 0x15b827458 <col:6> 'struct bpf_verifier_env *' lvalue ParmVar 0x15b80e248 'env' 'struct bpf_verifier_env *'
    | | | `-IntegerLiteral 0x15b8274b8 <col:25> 'int' 1
    | | `-CXXDependentScopeMemberExpr 0x15b8275a0 <col:30, col:46> '<dependent type>' contains-errors lvalue ->tail_call_reachable
    | |   `-CXXDependentScopeMemberExpr 0x15b827558 <col:30, col:41> '<dependent type>' contains-errors lvalue ->aux
    | |     `-RecoveryExpr 0x15b827530 <col:30, col:35> '<dependent type>' contains-errors lvalue
    | |       `-DeclRefExpr 0x15b8274f8 <col:30> 'struct bpf_verifier_env *' lvalue ParmVar 0x15b80e248 'env' 'struct bpf_verifier_env *'
    | `-CompoundStmt 0x15b8296c0 <col:67, line:23:2>
    |   |-CallExpr 0x15b8295b8 <line:21:3, col:21> 'int'
    |   | |-ImplicitCastExpr 0x15b8295a0 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x15b829500 <col:3> 'int ()' Function 0x15b829448 'verbose' 'int ()'
    |   | |-ImplicitCastExpr 0x15b8295e8 <col:11> 'struct bpf_verifier_env *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x15b829520 <col:11> 'struct bpf_verifier_env *' lvalue ParmVar 0x15b80e248 'env' 'struct bpf_verifier_env *'
    |   | `-ImplicitCastExpr 0x15b829600 <col:16> 'char *' <ArrayToPointerDecay>
    |   |   `-StringLiteral 0x15b829580 <col:16> 'char[4]' lvalue "STR"
    |   `-ReturnStmt 0x15b8296b0 <line:22:3, col:11>
    |     `-UnaryOperator 0x15b829698 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       `-ImplicitCastExpr 0x15b829680 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |         `-RecoveryExpr 0x15b829660 <col:11> '<dependent type>' contains-errors lvalue
    |-ForStmt 0x15b829f30 <line:24:2, line:32:2>
    | |-BinaryOperator 0x15b829740 <line:24:7, col:11> 'int' '='
    | | |-DeclRefExpr 0x15b829700 <col:7> 'int' lvalue Var 0x15b826b28 'i' 'int'
    | | `-IntegerLiteral 0x15b829720 <col:11> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x15b8297e0 <col:14, col:24> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x15b829760 <col:14> 'int' lvalue Var 0x15b826b28 'i' 'int'
    | | `-RecoveryExpr 0x15b8297b8 <col:18, col:24> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x15b829780 <col:18> 'struct bpf_prog *' contains-errors lvalue Var 0x15b8267b8 'prog' 'struct bpf_prog *'
    | |-BinaryOperator 0x15b829880 <col:29, col:38> '<dependent type>' contains-errors ','
    | | |-UnaryOperator 0x15b829820 <col:29, col:30> 'int' postfix '++'
    | | | `-DeclRefExpr 0x15b829800 <col:29> 'int' lvalue Var 0x15b826b28 'i' 'int'
    | | `-RecoveryExpr 0x15b829858 <col:34, col:38> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x15b829838 <col:34> 'struct bpf_insn *' contains-errors lvalue Var 0x15b826a18 'insn' 'struct bpf_insn *'
    | `-CompoundStmt 0x15b829f00 <col:42, line:32:2>
    |   |-IfStmt 0x15b829a10 <line:25:3, line:27:4>
    |   | |-RecoveryExpr 0x15b8299e8 <line:25:7, line:26:24> '_Bool' contains-errors
    |   | `-ContinueStmt 0x15b829a08 <line:27:4>
    |   |-BinaryOperator 0x15b829c48 <line:28:3, col:46> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x15b829a30 <col:3> 'int' lvalue Var 0x15b826ba8 'depth' 'int'
    |   | `-CallExpr 0x15b829bc8 <col:11, col:46> 'int' contains-errors
    |   |   |-ImplicitCastExpr 0x15b829bb0 <col:11> 'int (*)()' <FunctionToPointerDecay>
    |   |   | `-DeclRefExpr 0x15b829b30 <col:11> 'int ()' Function 0x15b829a78 'get_callee_stack_depth' 'int ()'
    |   |   |-ImplicitCastExpr 0x15b829c00 <col:34> 'struct bpf_verifier_env *' <LValueToRValue>
    |   |   | `-DeclRefExpr 0x15b829b50 <col:34> 'struct bpf_verifier_env *' lvalue ParmVar 0x15b80e248 'env' 'struct bpf_verifier_env *'
    |   |   |-ImplicitCastExpr 0x15b829c18 <col:39> 'struct bpf_insn *' contains-errors <LValueToRValue>
    |   |   | `-DeclRefExpr 0x15b829b70 <col:39> 'struct bpf_insn *' contains-errors lvalue Var 0x15b826a18 'insn' 'struct bpf_insn *'
    |   |   `-ImplicitCastExpr 0x15b829c30 <col:45> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x15b829b90 <col:45> 'int' lvalue Var 0x15b826b28 'i' 'int'
    |   |-IfStmt 0x15b829d28 <line:29:3, line:30:11>
    |   | |-BinaryOperator 0x15b829cc0 <line:29:7, col:15> 'int' '<'
    |   | | |-ImplicitCastExpr 0x15b829ca8 <col:7> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x15b829c68 <col:7> 'int' lvalue Var 0x15b826ba8 'depth' 'int'
    |   | | `-IntegerLiteral 0x15b829c88 <col:15> 'int' 0
    |   | `-ReturnStmt 0x15b829d18 <line:30:4, col:11>
    |   |   `-ImplicitCastExpr 0x15b829d00 <col:11> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x15b829ce0 <col:11> 'int' lvalue Var 0x15b826ba8 'depth' 'int'
    |   `-CallExpr 0x15b829ea0 <line:31:3, col:34> 'int' contains-errors
    |     |-ImplicitCastExpr 0x15b829e88 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x15b829e28 <col:3> 'int ()' Function 0x15b829d70 'bpf_patch_call_args' 'int ()'
    |     |-ImplicitCastExpr 0x15b829ed0 <col:23> 'struct bpf_insn *' contains-errors <LValueToRValue>
    |     | `-DeclRefExpr 0x15b829e48 <col:23> 'struct bpf_insn *' contains-errors lvalue Var 0x15b826a18 'insn' 'struct bpf_insn *'
    |     `-ImplicitCastExpr 0x15b829ee8 <col:29> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x15b829e68 <col:29> 'int' lvalue Var 0x15b826ba8 'depth' 'int'
    |-BinaryOperator 0x15b829fa8 <line:33:2, col:8> 'int' '='
    | |-DeclRefExpr 0x15b829f68 <col:2> 'int' lvalue Var 0x15b826c58 'err' 'int'
    | `-IntegerLiteral 0x15b829f88 <col:8> 'int' 0
    `-ReturnStmt 0x15b82a000 <line:35:2, col:9>
      `-ImplicitCastExpr 0x15b829fe8 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x15b829fc8 <col:9> 'int' lvalue Var 0x15b826c58 'err' 'int'
