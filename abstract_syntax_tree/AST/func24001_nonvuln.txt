TranslationUnitDecl 0x130855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1308564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x130855bd0 '__int128'
|-TypedefDecl 0x130856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x130855bf0 'unsigned __int128'
|-TypedefDecl 0x130926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x130926000 'struct __NSConstantString_tag'
|   `-Record 0x130856580 '__NSConstantString_tag'
|-TypedefDecl 0x130926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x130855d90 '__SVInt8_t'
|-TypedefDecl 0x130926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x130855db0 '__SVInt16_t'
|-TypedefDecl 0x130926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x130855dd0 '__SVInt32_t'
|-TypedefDecl 0x1309263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x130855df0 '__SVInt64_t'
|-TypedefDecl 0x130926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x130855e10 '__SVUint8_t'
|-TypedefDecl 0x1309264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x130855e30 '__SVUint16_t'
|-TypedefDecl 0x130926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x130855e50 '__SVUint32_t'
|-TypedefDecl 0x130926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x130855e70 '__SVUint64_t'
|-TypedefDecl 0x1309265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x130855e90 '__SVFloat16_t'
|-TypedefDecl 0x130926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x130855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1309266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x130855ed0 '__SVFloat64_t'
|-TypedefDecl 0x130926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x130855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x130926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x130855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1309267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x130855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x130926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x130855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1309268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x130855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x130926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x130855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x130926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x130855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1309269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x130855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x130926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x130855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x130926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x130856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x130926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x130856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x130926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x130856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x130926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x130856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x130926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x130856090 '__clang_svint8x3_t'
|-TypedefDecl 0x130926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1308560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x130926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1308560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x130926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1308560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x130926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x130856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x130926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x130856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x130926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x130856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x130926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x130856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x130926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x130856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x130927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1308561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x130927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1308561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1309278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1308561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x130927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x130856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1309279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x130856230 '__clang_svint16x4_t'
|-TypedefDecl 0x130927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x130856250 '__clang_svint32x4_t'
|-TypedefDecl 0x130927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x130856270 '__clang_svint64x4_t'
|-TypedefDecl 0x130927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x130856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x130927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1308562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x130927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1308562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x130927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1308562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x130927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x130856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x130927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x130856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x130927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x130856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x130927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x130856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x130927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x130856390 '__SVBool_t'
|-TypedefDecl 0x130927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1308563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x130927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1308563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x130927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1308563f0 '__SVCount_t'
|-TypedefDecl 0x130927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x130927fb0 'char *'
|   `-BuiltinType 0x1308556b0 'char'
|-TypedefDecl 0x130928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x130927fb0 'char *'
|   `-BuiltinType 0x1308556b0 'char'
|-FunctionDecl 0x1309281a8 <dataset_diviso_filec/func24001_nonvuln.c:1:1, line:22:1> line:1:1 make_optional_header_string 'int (char *)'
| |-ParmVarDecl 0x1309280d8 <col:29, col:35> col:35 used s 'char *'
| `-CompoundStmt 0x130943608 <line:2:1, line:22:1>
|   |-DeclStmt 0x130928320 <line:3:5, col:12>
|   | `-VarDecl 0x1309282b8 <col:5, col:11> col:11 used p 'char *'
|   |-IfStmt 0x130940e48 <line:6:5, line:7:9>
|   | |-BinaryOperator 0x130940de0 <line:6:9, col:42> 'int' '||'
|   | | |-CallExpr 0x130940c98 <col:9, col:23> 'char *'
|   | | | |-ImplicitCastExpr 0x130940c80 <col:9> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x130940be0 <col:9> 'char *(const char *, int)' Function 0x130940a00 'strchr' 'char *(const char *, int)'
|   | | | |-ImplicitCastExpr 0x130940ce0 <col:16> 'const char *' <NoOp>
|   | | | | `-ImplicitCastExpr 0x130940cc8 <col:16> 'char *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x130940c00 <col:16> 'char *' lvalue ParmVar 0x1309280d8 's' 'char *'
|   | | | `-CharacterLiteral 0x130940c20 <col:19> 'int' 10
|   | | `-CallExpr 0x130940d80 <col:28, col:42> 'char *'
|   | |   |-ImplicitCastExpr 0x130940d68 <col:28> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x130940cf8 <col:28> 'char *(const char *, int)' Function 0x130940a00 'strchr' 'char *(const char *, int)'
|   | |   |-ImplicitCastExpr 0x130940dc8 <col:35> 'const char *' <NoOp>
|   | |   | `-ImplicitCastExpr 0x130940db0 <col:35> 'char *' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x130940d18 <col:35> 'char *' lvalue ParmVar 0x1309280d8 's' 'char *'
|   | |   `-CharacterLiteral 0x130940d38 <col:38> 'int' 13
|   | `-ReturnStmt 0x130940e38 <line:7:2, col:9>
|   |   `-RecoveryExpr 0x130940e18 <col:9> '<dependent type>' contains-errors lvalue
|   |-ForStmt 0x130941078 <line:8:5, col:39>
|   | |-BinaryOperator 0x130940ec0 <col:10, col:14> 'char *' '='
|   | | |-DeclRefExpr 0x130940e68 <col:10> 'char *' lvalue Var 0x1309282b8 'p' 'char *'
|   | | `-ImplicitCastExpr 0x130940ea8 <col:14> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x130940e88 <col:14> 'char *' lvalue ParmVar 0x1309280d8 's' 'char *'
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x130941018 <col:17, col:29> 'int' '&&'
|   | | |-ImplicitCastExpr 0x130941000 <col:17, col:18> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x130940fe8 <col:17, col:18> 'char' <LValueToRValue>
|   | | |   `-UnaryOperator 0x130940f18 <col:17, col:18> 'char' lvalue prefix '*' cannot overflow
|   | | |     `-ImplicitCastExpr 0x130940f00 <col:18> 'char *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x130940ee0 <col:18> 'char *' lvalue Var 0x1309282b8 'p' 'char *'
|   | | `-BinaryOperator 0x130940fc8 <col:23, col:29> 'int' '!='
|   | |   |-ImplicitCastExpr 0x130940fb0 <col:23, col:24> 'int' <IntegralCast>
|   | |   | `-ImplicitCastExpr 0x130940f98 <col:23, col:24> 'char' <LValueToRValue>
|   | |   |   `-UnaryOperator 0x130940f68 <col:23, col:24> 'char' lvalue prefix '*' cannot overflow
|   | |   |     `-ImplicitCastExpr 0x130940f50 <col:24> 'char *' <LValueToRValue>
|   | |   |       `-DeclRefExpr 0x130940f30 <col:24> 'char *' lvalue Var 0x1309282b8 'p' 'char *'
|   | |   `-CharacterLiteral 0x130940f80 <col:29> 'int' 58
|   | |-UnaryOperator 0x130941058 <col:34, col:35> 'char *' postfix '++'
|   | | `-DeclRefExpr 0x130941038 <col:34> 'char *' lvalue Var 0x1309282b8 'p' 'char *'
|   | `-NullStmt 0x130941070 <col:39>
|   |-IfStmt 0x130941260 <line:9:5, line:10:9>
|   | |-BinaryOperator 0x1309411f8 <line:9:9, col:27> 'int' '||'
|   | | |-BinaryOperator 0x130941148 <col:9, col:15> 'int' '!='
|   | | | |-ImplicitCastExpr 0x130941130 <col:9, col:10> 'int' <IntegralCast>
|   | | | | `-ImplicitCastExpr 0x130941118 <col:9, col:10> 'char' <LValueToRValue>
|   | | | |   `-UnaryOperator 0x1309410e8 <col:9, col:10> 'char' lvalue prefix '*' cannot overflow
|   | | | |     `-ImplicitCastExpr 0x1309410d0 <col:10> 'char *' <LValueToRValue>
|   | | | |       `-DeclRefExpr 0x1309410b0 <col:10> 'char *' lvalue Var 0x1309282b8 'p' 'char *'
|   | | | `-CharacterLiteral 0x130941100 <col:15> 'int' 58
|   | | `-BinaryOperator 0x1309411d8 <col:22, col:27> 'int' '=='
|   | |   |-ImplicitCastExpr 0x1309411a8 <col:22> 'char *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x130941168 <col:22> 'char *' lvalue Var 0x1309282b8 'p' 'char *'
|   | |   `-ImplicitCastExpr 0x1309411c0 <col:27> 'char *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x130941188 <col:27> 'char *' lvalue ParmVar 0x1309280d8 's' 'char *'
|   | `-ReturnStmt 0x130941250 <line:10:2, col:9>
|   |   `-RecoveryExpr 0x130941230 <col:9> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x130941990 <line:12:5, col:33> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x130941800 <col:5> 'int ()' Function 0x130941748 'Strcopy_charp_n' 'int ()'
|   | |-RecoveryExpr 0x130941920 <col:21> '<dependent type>' contains-errors lvalue
|   | |-DeclRefExpr 0x130941838 <col:25> 'char *' lvalue ParmVar 0x1309280d8 's' 'char *'
|   | `-BinaryOperator 0x130941970 <col:28, col:32> 'long' '-'
|   |   |-ImplicitCastExpr 0x130941940 <col:28> 'char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x130941858 <col:28> 'char *' lvalue Var 0x1309282b8 'p' 'char *'
|   |   `-ImplicitCastExpr 0x130941958 <col:32> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x130941878 <col:32> 'char *' lvalue ParmVar 0x1309280d8 's' 'char *'
|   |-CallExpr 0x1309431a0 <line:15:5, col:27> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x1309430f8 <col:5> 'int ()' Function 0x130943040 'Strcat_charp' 'int ()'
|   | |-RecoveryExpr 0x130943180 <col:18> '<dependent type>' contains-errors lvalue
|   | `-StringLiteral 0x130943130 <col:22> 'char[4]' lvalue "STR"
|   |-IfStmt 0x1309434c8 <line:16:5, line:19:5>
|   | |-ImplicitCastExpr 0x130943240 <line:16:9, col:14> 'char' <LValueToRValue>
|   | | `-UnaryOperator 0x130943228 <col:9, col:14> 'char' lvalue prefix '*' cannot overflow
|   | |   `-ParenExpr 0x130943208 <col:10, col:14> 'char *'
|   | |     `-UnaryOperator 0x1309431f0 <col:11, col:13> 'char *' prefix '++'
|   | |       `-DeclRefExpr 0x1309431d0 <col:13> 'char *' lvalue Var 0x1309282b8 'p' 'char *'
|   | `-CompoundStmt 0x1309434a8 <col:17, line:19:5>
|   |   |-CallExpr 0x130943390 <line:17:2, col:15> 'int'
|   |   | |-ImplicitCastExpr 0x130943378 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x130943338 <col:2> 'int ()' Function 0x130943280 'SKIP_BLANKS' 'int ()'
|   |   | `-ImplicitCastExpr 0x1309433b8 <col:14> 'char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x130943358 <col:14> 'char *' lvalue Var 0x1309282b8 'p' 'char *'
|   |   `-CallExpr 0x130943478 <line:18:2, col:20> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x1309433d0 <col:2> 'int ()' Function 0x130943040 'Strcat_charp' 'int ()'
|   |     |-RecoveryExpr 0x130943458 <col:15> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x130943408 <col:19> 'char *' lvalue Var 0x1309282b8 'p' 'char *'
|   |-CallExpr 0x130943590 <line:20:5, col:27> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x1309434e8 <col:5> 'int ()' Function 0x130943040 'Strcat_charp' 'int ()'
|   | |-RecoveryExpr 0x130943570 <col:18> '<dependent type>' contains-errors lvalue
|   | `-StringLiteral 0x130943520 <col:22> 'char[4]' lvalue "STR"
|   `-ReturnStmt 0x1309435f8 <line:21:5, col:12>
|     `-RecoveryExpr 0x1309435d8 <col:12> '<dependent type>' contains-errors lvalue
|-FunctionDecl 0x130940a00 <line:6:9> col:9 implicit used strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x130940b00 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x130940b68 <<invalid sloc>> <invalid sloc> 'int'
| `-BuiltinAttr 0x130940aa8 <<invalid sloc>> Implicit 893
`-FunctionDecl 0x1309413e8 <line:11:22> col:22 implicit used strlen 'unsigned long (const char *)' extern
  |-ParmVarDecl 0x1309414e8 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x130941490 <<invalid sloc>> Implicit 902
