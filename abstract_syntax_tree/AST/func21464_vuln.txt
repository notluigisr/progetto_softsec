TranslationUnitDecl 0x149020808 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1490216b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x149020dd0 '__int128'
|-TypedefDecl 0x149021728 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x149020df0 'unsigned __int128'
|-TypedefDecl 0x15909f630 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15909f400 'struct __NSConstantString_tag'
|   `-Record 0x149021780 '__NSConstantString_tag'
|-TypedefDecl 0x15909f698 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x149020f90 '__SVInt8_t'
|-TypedefDecl 0x15909f700 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x149020fb0 '__SVInt16_t'
|-TypedefDecl 0x15909f768 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x149020fd0 '__SVInt32_t'
|-TypedefDecl 0x15909f7d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x149020ff0 '__SVInt64_t'
|-TypedefDecl 0x15909f838 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x149021010 '__SVUint8_t'
|-TypedefDecl 0x15909f8a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x149021030 '__SVUint16_t'
|-TypedefDecl 0x15909f908 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x149021050 '__SVUint32_t'
|-TypedefDecl 0x15909f970 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x149021070 '__SVUint64_t'
|-TypedefDecl 0x15909f9d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x149021090 '__SVFloat16_t'
|-TypedefDecl 0x15909fa40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x1490210b0 '__SVFloat32_t'
|-TypedefDecl 0x15909faa8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x1490210d0 '__SVFloat64_t'
|-TypedefDecl 0x15909fb10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x1490210f0 '__SVBfloat16_t'
|-TypedefDecl 0x15909fb78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x149021110 '__clang_svint8x2_t'
|-TypedefDecl 0x15909fbe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x149021130 '__clang_svint16x2_t'
|-TypedefDecl 0x15909fc48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x149021150 '__clang_svint32x2_t'
|-TypedefDecl 0x15909fcb0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x149021170 '__clang_svint64x2_t'
|-TypedefDecl 0x15909fd18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x149021190 '__clang_svuint8x2_t'
|-TypedefDecl 0x15909fd80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x1490211b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15909fde8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x1490211d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15909fe50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x1490211f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15909feb8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x149021210 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15909ff20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x149021230 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15909ff88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x149021250 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15909fff0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x149021270 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x1590a0058 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x149021290 '__clang_svint8x3_t'
|-TypedefDecl 0x1590a00c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1490212b0 '__clang_svint16x3_t'
|-TypedefDecl 0x1590a0128 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1490212d0 '__clang_svint32x3_t'
|-TypedefDecl 0x1590a0190 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1490212f0 '__clang_svint64x3_t'
|-TypedefDecl 0x1590a01f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x149021310 '__clang_svuint8x3_t'
|-TypedefDecl 0x1590a0260 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x149021330 '__clang_svuint16x3_t'
|-TypedefDecl 0x1590a02c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x149021350 '__clang_svuint32x3_t'
|-TypedefDecl 0x1590a0330 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x149021370 '__clang_svuint64x3_t'
|-TypedefDecl 0x1590a0398 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x149021390 '__clang_svfloat16x3_t'
|-TypedefDecl 0x1590a0800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1490213b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x1590a0868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1490213d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1590a08d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1490213f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x1590a0938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x149021410 '__clang_svint8x4_t'
|-TypedefDecl 0x1590a09a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x149021430 '__clang_svint16x4_t'
|-TypedefDecl 0x1590a0a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x149021450 '__clang_svint32x4_t'
|-TypedefDecl 0x1590a0a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x149021470 '__clang_svint64x4_t'
|-TypedefDecl 0x1590a0ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x149021490 '__clang_svuint8x4_t'
|-TypedefDecl 0x1590a0b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1490214b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1590a0ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1490214d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x1590a0c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1490214f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x1590a0c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x149021510 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1590a0ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x149021530 '__clang_svfloat32x4_t'
|-TypedefDecl 0x1590a0d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x149021550 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1590a0db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x149021570 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x1590a0e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x149021590 '__SVBool_t'
|-TypedefDecl 0x1590a0e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1490215b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1590a0ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1490215d0 '__clang_svboolx4_t'
|-TypedefDecl 0x1590a0f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1490215f0 '__SVCount_t'
|-TypedefDecl 0x1590a0ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1590a0fb0 'char *'
|   `-BuiltinType 0x1490208b0 'char'
|-TypedefDecl 0x1590a1068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1590a0fb0 'char *'
|   `-BuiltinType 0x1490208b0 'char'
|-FunctionDecl 0x1590bd858 <dataset_diviso_filec/func21464_vuln.c:1:1, line:90:1> line:1:1 translate_compat_table 'int (struct net *, struct xt_table_info **, void **, const struct compat_ipt_replace *)'
| |-ParmVarDecl 0x1590a1648 <col:24, col:36> col:36 used net 'struct net *'
| |-ParmVarDecl 0x1590bd488 <line:2:10, col:33> col:33 used pinfo 'struct xt_table_info **'
| |-ParmVarDecl 0x1590bd538 <line:3:10, col:17> col:17 used pentry0 'void **'
| |-ParmVarDecl 0x1590bd708 <line:4:10, col:43> col:43 used compatr 'const struct compat_ipt_replace *'
| `-CompoundStmt 0x149093a70 <line:5:1, line:90:1>
|   |-DeclStmt 0x1590bda80 <line:6:2, col:19>
|   | |-VarDecl 0x1590bd980 <col:2, col:15> col:15 used i 'unsigned int'
|   | `-VarDecl 0x1590bda00 <col:2, col:18> col:18 used j 'unsigned int'
|   |-DeclStmt 0x1590bdc38 <line:7:2, col:38>
|   | |-VarDecl 0x1590bdb28 <col:2, col:24> col:24 used newinfo 'struct xt_table_info *'
|   | `-VarDecl 0x1590bdbb8 <col:2, col:34> col:34 used info 'struct xt_table_info *'
|   |-DeclStmt 0x1590bddf0 <line:8:2, col:29>
|   | |-VarDecl 0x1590bdc68 <col:2, col:8> col:8 used pos 'void *'
|   | |-VarDecl 0x1590bdce8 <col:2, col:14> col:14 used entry0 'void *'
|   | `-VarDecl 0x1590bdd68 <col:2, col:23> col:23 used entry1 'void *'
|   |-DeclStmt 0x1590bdff8 <line:9:2, col:32>
|   | |-RecordDecl 0x1590bde08 <col:2, col:9> col:9 struct compat_ipt_entry
|   | `-VarDecl 0x1590bdf78 <col:2, col:27> col:27 used iter0 'struct compat_ipt_entry *'
|   |-DeclStmt 0x1590be188 <line:10:2, col:25>
|   | |-RecordDecl 0x1590be010 <col:2, col:9> col:9 struct ipt_replace
|   | `-VarDecl 0x1590be108 <col:2, col:21> col:21 referenced invalid repl 'struct ipt_replace'
|   |-DeclStmt 0x1590be220 <line:11:2, col:19>
|   | `-VarDecl 0x1590be1b8 <col:2, col:15> col:15 used size 'unsigned int'
|   |-DeclStmt 0x1590be2b8 <line:12:2, col:9>
|   | `-VarDecl 0x1590be250 <col:2, col:6> col:6 used ret 'int'
|   |-BinaryOperator 0x1590be358 <line:14:2, col:10> 'struct xt_table_info *' '='
|   | |-DeclRefExpr 0x1590be2d0 <col:2> 'struct xt_table_info *' lvalue Var 0x1590bdbb8 'info' 'struct xt_table_info *'
|   | `-ImplicitCastExpr 0x1590be340 <col:9, col:10> 'struct xt_table_info *' <LValueToRValue>
|   |   `-UnaryOperator 0x1590be328 <col:9, col:10> 'struct xt_table_info *' lvalue prefix '*' cannot overflow
|   |     `-ImplicitCastExpr 0x1590be310 <col:10> 'struct xt_table_info **' <LValueToRValue>
|   |       `-DeclRefExpr 0x1590be2f0 <col:10> 'struct xt_table_info **' lvalue ParmVar 0x1590bd488 'pinfo' 'struct xt_table_info **'
|   |-BinaryOperator 0x1590be400 <line:15:2, col:12> 'void *' '='
|   | |-DeclRefExpr 0x1590be378 <col:2> 'void *' lvalue Var 0x1590bdce8 'entry0' 'void *'
|   | `-ImplicitCastExpr 0x1590be3e8 <col:11, col:12> 'void *' <LValueToRValue>
|   |   `-UnaryOperator 0x1590be3d0 <col:11, col:12> 'void *' lvalue prefix '*' cannot overflow
|   |     `-ImplicitCastExpr 0x1590be3b8 <col:12> 'void **' <LValueToRValue>
|   |       `-DeclRefExpr 0x1590be398 <col:12> 'void **' lvalue ParmVar 0x1590bd538 'pentry0' 'void **'
|   |-BinaryOperator 0x1590be4a0 <line:16:2, col:18> 'unsigned int' contains-errors '='
|   | |-DeclRefExpr 0x1590be420 <col:2> 'unsigned int' lvalue Var 0x1590be1b8 'size' 'unsigned int'
|   | `-RecoveryExpr 0x1590be478 <col:9, col:18> '<dependent type>' contains-errors lvalue
|   |   `-DeclRefExpr 0x1590be440 <col:9> 'const struct compat_ipt_replace *' lvalue ParmVar 0x1590bd708 'compatr' 'const struct compat_ipt_replace *'
|   |-BinaryOperator 0x1590be580 <line:17:2, col:26> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x1590be4f8 <col:2, col:8> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x1590be4c0 <col:2> 'struct xt_table_info *' lvalue Var 0x1590bdbb8 'info' 'struct xt_table_info *'
|   | `-RecoveryExpr 0x1590be558 <col:17, col:26> '<dependent type>' contains-errors lvalue
|   |   `-DeclRefExpr 0x1590be520 <col:17> 'const struct compat_ipt_replace *' lvalue ParmVar 0x1590bd708 'compatr' 'const struct compat_ipt_replace *'
|   |-BinaryOperator 0x1590be5f8 <line:19:2, col:6> 'unsigned int' '='
|   | |-DeclRefExpr 0x1590be5a0 <col:2> 'unsigned int' lvalue Var 0x1590bda00 'j' 'unsigned int'
|   | `-ImplicitCastExpr 0x1590be5e0 <col:6> 'unsigned int' <IntegralCast>
|   |   `-IntegerLiteral 0x1590be5c0 <col:6> 'int' 0
|   |-CallExpr 0x1590be7c0 <line:20:2, col:24> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x1590be740 <col:2> 'int ()' Function 0x1590be688 'xt_compat_lock' 'int ()'
|   | `-RecoveryExpr 0x1590be7a0 <col:17> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x1590bea20 <line:21:2, col:60> 'int' contains-errors '='
|   | |-DeclRefExpr 0x1590be7e8 <col:2> 'int' lvalue Var 0x1590be250 'ret' 'int'
|   | `-CallExpr 0x1590be9f0 <col:8, col:60> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x1590be8e8 <col:8> 'int ()' Function 0x1590be830 'xt_compat_init_offsets' 'int ()'
|   |   |-RecoveryExpr 0x1590be9d0 <col:31> '<dependent type>' contains-errors lvalue
|   |   `-RecoveryExpr 0x1590be958 <col:40, col:49> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x1590be920 <col:40> 'const struct compat_ipt_replace *' lvalue ParmVar 0x1590bd708 'compatr' 'const struct compat_ipt_replace *'
|   |-IfStmt 0x1590beae0 <line:22:2, line:23:8>
|   | |-ImplicitCastExpr 0x1590bea60 <line:22:6> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1590bea40 <col:6> 'int' lvalue Var 0x1590be250 'ret' 'int'
|   | `-GotoStmt 0x1590beac8 <line:23:3, col:8> 'out_unlock' 0x1590bea78
|   |-CallExpr 0x1590beca0 <line:25:2, col:47> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x1590bebe0 <col:2> 'int ()' Function 0x1590beb28 'xt_entry_foreach' 'int ()'
|   | |-DeclRefExpr 0x1590bec00 <col:19> 'struct compat_ipt_entry *' lvalue Var 0x1590bdf78 'iter0' 'struct compat_ipt_entry *'
|   | |-DeclRefExpr 0x1590bec20 <col:26> 'void *' lvalue Var 0x1590bdce8 'entry0' 'void *'
|   | `-RecoveryExpr 0x1590bec78 <col:34, col:43> '<dependent type>' contains-errors lvalue
|   |   `-DeclRefExpr 0x1590bec40 <col:34> 'const struct compat_ipt_replace *' lvalue ParmVar 0x1590bd708 'compatr' 'const struct compat_ipt_replace *'
|   |-CompoundStmt 0x1590bf0b8 <col:49, line:32:2>
|   | |-BinaryOperator 0x1590befb0 <line:26:3, line:28:30> 'int' contains-errors '='
|   | | |-DeclRefExpr 0x1590becd8 <line:26:3> 'int' lvalue Var 0x1590be250 'ret' 'int'
|   | | `-CallExpr 0x1590bef68 <col:9, line:28:30> '<dependent type>' contains-errors
|   | |   |-DeclRefExpr 0x1590bedd8 <line:26:9> 'int ()' Function 0x1590bed20 'check_compat_entry_size_and_hooks' 'int ()'
|   | |   |-DeclRefExpr 0x1590bedf8 <col:43> 'struct compat_ipt_entry *' lvalue Var 0x1590bdf78 'iter0' 'struct compat_ipt_entry *'
|   | |   |-DeclRefExpr 0x1590bee18 <col:50> 'struct xt_table_info *' lvalue Var 0x1590bdbb8 'info' 'struct xt_table_info *'
|   | |   |-UnaryOperator 0x1590bee90 <col:56, col:57> 'unsigned int *' prefix '&' cannot overflow
|   | |   | `-DeclRefExpr 0x1590bee38 <col:57> 'unsigned int' lvalue Var 0x1590be1b8 'size' 'unsigned int'
|   | |   |-DeclRefExpr 0x1590beea8 <line:27:8> 'void *' lvalue Var 0x1590bdce8 'entry0' 'void *'
|   | |   `-BinaryOperator 0x1590bef48 <line:28:8, col:26> '<dependent type>' contains-errors '+'
|   | |     |-DeclRefExpr 0x1590beec8 <col:8> 'void *' lvalue Var 0x1590bdce8 'entry0' 'void *'
|   | |     `-RecoveryExpr 0x1590bef20 <col:17, col:26> '<dependent type>' contains-errors lvalue
|   | |       `-DeclRefExpr 0x1590beee8 <col:17> 'const struct compat_ipt_replace *' lvalue ParmVar 0x1590bd708 'compatr' 'const struct compat_ipt_replace *'
|   | |-IfStmt 0x1590bf060 <line:29:3, line:30:9>
|   | | |-BinaryOperator 0x1590bf028 <line:29:7, col:14> 'int' '!='
|   | | | |-ImplicitCastExpr 0x1590bf010 <col:7> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1590befd0 <col:7> 'int' lvalue Var 0x1590be250 'ret' 'int'
|   | | | `-IntegerLiteral 0x1590beff0 <col:14> 'int' 0
|   | | `-GotoStmt 0x1590bf048 <line:30:4, col:9> 'out_unlock' 0x1590bea78
|   | `-UnaryOperator 0x1590bf0a0 <line:31:3, col:5> 'unsigned int' prefix '++'
|   |   `-DeclRefExpr 0x1590bf080 <col:5> 'unsigned int' lvalue Var 0x1590bda00 'j' 'unsigned int'
|   |-BinaryOperator 0x1590bf1b8 <line:34:2, col:9> 'int' contains-errors '='
|   | |-DeclRefExpr 0x1590bf0e0 <col:2> 'int' lvalue Var 0x1590be250 'ret' 'int'
|   | `-UnaryOperator 0x1590bf1a0 <col:8, col:9> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |   `-ImplicitCastExpr 0x1590bf188 <col:9> '<dependent type>' contains-errors <LValueToRValue>
|   |     `-RecoveryExpr 0x1590bf168 <col:9> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x1590bf290 <line:35:2, line:36:8>
|   | |-BinaryOperator 0x1590bf258 <line:35:6, col:20> 'int' contains-errors '!='
|   | | |-DeclRefExpr 0x1590bf1d8 <col:6> 'unsigned int' lvalue Var 0x1590bda00 'j' 'unsigned int'
|   | | `-RecoveryExpr 0x1590bf230 <col:11, col:20> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x1590bf1f8 <col:11> 'const struct compat_ipt_replace *' lvalue ParmVar 0x1590bd708 'compatr' 'const struct compat_ipt_replace *'
|   | `-GotoStmt 0x1590bf278 <line:36:3, col:8> 'out_unlock' 0x1590bea78
|   |-BinaryOperator 0x1590bf388 <line:38:2, col:9> 'int' contains-errors '='
|   | |-DeclRefExpr 0x1590bf2b0 <col:2> 'int' lvalue Var 0x1590be250 'ret' 'int'
|   | `-UnaryOperator 0x1590bf370 <col:8, col:9> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |   `-ImplicitCastExpr 0x1590bf358 <col:9> '<dependent type>' contains-errors <LValueToRValue>
|   |     `-RecoveryExpr 0x1590bf338 <col:9> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x1490917a0 <line:39:2, col:36> 'struct xt_table_info *' '='
|   | |-DeclRefExpr 0x1590bf3a8 <col:2> 'struct xt_table_info *' lvalue Var 0x1590bdb28 'newinfo' 'struct xt_table_info *'
|   | `-ImplicitCastExpr 0x149091788 <col:12, col:36> 'struct xt_table_info *' <IntegralToPointer>
|   |   `-CallExpr 0x149091748 <col:12, col:36> 'int'
|   |     |-ImplicitCastExpr 0x149091730 <col:12> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1490916b8 <col:12> 'int ()' Function 0x149091600 'xt_alloc_table_info' 'int ()'
|   |     `-ImplicitCastExpr 0x149091770 <col:32> 'unsigned int' <LValueToRValue>
|   |       `-DeclRefExpr 0x1490916d8 <col:32> 'unsigned int' lvalue Var 0x1590be1b8 'size' 'unsigned int'
|   |-IfStmt 0x149091828 <line:40:2, line:41:8>
|   | |-UnaryOperator 0x1490917f8 <line:40:6, col:7> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x1490917e0 <col:7> 'struct xt_table_info *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1490917c0 <col:7> 'struct xt_table_info *' lvalue Var 0x1590bdb28 'newinfo' 'struct xt_table_info *'
|   | `-GotoStmt 0x149091810 <line:41:3, col:8> 'out_unlock' 0x1590bea78
|   |-BinaryOperator 0x149091908 <line:43:2, col:29> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x149091880 <col:2, col:11> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x149091848 <col:2> 'struct xt_table_info *' lvalue Var 0x1590bdb28 'newinfo' 'struct xt_table_info *'
|   | `-RecoveryExpr 0x1490918e0 <col:20, col:29> '<dependent type>' contains-errors lvalue
|   |   `-DeclRefExpr 0x1490918a8 <col:20> 'const struct compat_ipt_replace *' lvalue ParmVar 0x1590bd708 'compatr' 'const struct compat_ipt_replace *'
|   |-BinaryOperator 0x149091e18 <line:48:2, col:20> 'void *' contains-errors '='
|   | |-DeclRefExpr 0x149091d98 <col:2> 'void *' lvalue Var 0x1590bdd68 'entry1' 'void *'
|   | `-RecoveryExpr 0x149091df0 <col:11, col:20> '<dependent type>' contains-errors lvalue
|   |   `-DeclRefExpr 0x149091db8 <col:11> 'struct xt_table_info *' lvalue Var 0x1590bdb28 'newinfo' 'struct xt_table_info *'
|   |-BinaryOperator 0x149091e90 <line:49:2, col:8> 'void *' '='
|   | |-DeclRefExpr 0x149091e38 <col:2> 'void *' lvalue Var 0x1590bdc68 'pos' 'void *'
|   | `-ImplicitCastExpr 0x149091e78 <col:8> 'void *' <LValueToRValue>
|   |   `-DeclRefExpr 0x149091e58 <col:8> 'void *' lvalue Var 0x1590bdd68 'entry1' 'void *'
|   |-BinaryOperator 0x149091f30 <line:50:2, col:18> 'unsigned int' contains-errors '='
|   | |-DeclRefExpr 0x149091eb0 <col:2> 'unsigned int' lvalue Var 0x1590be1b8 'size' 'unsigned int'
|   | `-RecoveryExpr 0x149091f08 <col:9, col:18> '<dependent type>' contains-errors lvalue
|   |   `-DeclRefExpr 0x149091ed0 <col:9> 'const struct compat_ipt_replace *' lvalue ParmVar 0x1590bd708 'compatr' 'const struct compat_ipt_replace *'
|   |-CallExpr 0x149092010 <line:51:2, col:47> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x149091f50 <col:2> 'int ()' Function 0x1590beb28 'xt_entry_foreach' 'int ()'
|   | |-DeclRefExpr 0x149091f70 <col:19> 'struct compat_ipt_entry *' lvalue Var 0x1590bdf78 'iter0' 'struct compat_ipt_entry *'
|   | |-DeclRefExpr 0x149091f90 <col:26> 'void *' lvalue Var 0x1590bdce8 'entry0' 'void *'
|   | `-RecoveryExpr 0x149091fe8 <col:34, col:43> '<dependent type>' contains-errors lvalue
|   |   `-DeclRefExpr 0x149091fb0 <col:34> 'const struct compat_ipt_replace *' lvalue ParmVar 0x1590bd708 'compatr' 'const struct compat_ipt_replace *'
|   |-CallExpr 0x149092230 <line:52:3, line:53:25> 'int'
|   | |-ImplicitCastExpr 0x149092218 <line:52:3> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x149092128 <col:3> 'int ()' Function 0x149092070 'compat_copy_entry_from_user' 'int ()'
|   | |-ImplicitCastExpr 0x149092278 <col:31> 'struct compat_ipt_entry *' <LValueToRValue>
|   | | `-DeclRefExpr 0x149092148 <col:31> 'struct compat_ipt_entry *' lvalue Var 0x1590bdf78 'iter0' 'struct compat_ipt_entry *'
|   | |-UnaryOperator 0x149092188 <col:38, col:39> 'void **' prefix '&' cannot overflow
|   | | `-DeclRefExpr 0x149092168 <col:39> 'void *' lvalue Var 0x1590bdc68 'pos' 'void *'
|   | |-UnaryOperator 0x1490921c0 <col:44, col:45> 'unsigned int *' prefix '&' cannot overflow
|   | | `-DeclRefExpr 0x1490921a0 <col:45> 'unsigned int' lvalue Var 0x1590be1b8 'size' 'unsigned int'
|   | |-ImplicitCastExpr 0x149092290 <line:53:10> 'struct xt_table_info *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1490921d8 <col:10> 'struct xt_table_info *' lvalue Var 0x1590bdb28 'newinfo' 'struct xt_table_info *'
|   | `-ImplicitCastExpr 0x1490922a8 <col:19> 'void *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1490921f8 <col:19> 'void *' lvalue Var 0x1590bdd68 'entry1' 'void *'
|   |-BinaryOperator 0x149092e10 <line:66:2, col:22> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x149092da8 <col:2, col:7> '<dependent type>' contains-errors lvalue .num_counters
|   | | `-RecoveryExpr 0x149092d80 <col:2> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x149092d60 <col:2> 'struct ipt_replace' lvalue Var 0x1590be108 'repl' 'struct ipt_replace'
|   | `-IntegerLiteral 0x149092df0 <col:22> 'int' 0
|   |-BinaryOperator 0x149092fb0 <line:68:2, col:23> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x149092f08 <col:2, col:7> '<dependent type>' contains-errors lvalue .size
|   | | `-RecoveryExpr 0x149092ee0 <col:2> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x149092ec0 <col:2> 'struct ipt_replace' lvalue Var 0x1590be108 'repl' 'struct ipt_replace'
|   | `-RecoveryExpr 0x149092f88 <col:14, col:23> '<dependent type>' contains-errors lvalue
|   |   `-DeclRefExpr 0x149092f50 <col:14> 'struct xt_table_info *' lvalue Var 0x1590bdb28 'newinfo' 'struct xt_table_info *'
|   |-BinaryOperator 0x1490931c8 <line:69:2, col:51> 'int' contains-errors '='
|   | |-DeclRefExpr 0x149092fd0 <col:2> 'int' lvalue Var 0x1590be250 'ret' 'int'
|   | `-CallExpr 0x149093188 <col:8, col:51> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x1490930d0 <col:8> 'int ()' Function 0x149093018 'translate_table' 'int ()'
|   |   |-DeclRefExpr 0x1490930f0 <col:24> 'struct net *' lvalue ParmVar 0x1590a1648 'net' 'struct net *'
|   |   |-DeclRefExpr 0x149093110 <col:29> 'struct xt_table_info *' lvalue Var 0x1590bdb28 'newinfo' 'struct xt_table_info *'
|   |   |-DeclRefExpr 0x149093130 <col:38> 'void *' lvalue Var 0x1590bdd68 'entry1' 'void *'
|   |   `-UnaryOperator 0x149093170 <col:46, col:47> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     `-RecoveryExpr 0x149093150 <col:47> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x149093288 <line:70:2, line:71:8>
|   | |-ImplicitCastExpr 0x149093208 <line:70:6> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1490931e8 <col:6> 'int' lvalue Var 0x1590be250 'ret' 'int'
|   | `-GotoStmt 0x149093270 <line:71:3, col:8> 'free_newinfo' 0x149093220
|   |-BinaryOperator 0x149093330 <line:73:2, col:11> 'struct xt_table_info *' '='
|   | |-UnaryOperator 0x1490932e0 <col:2, col:3> 'struct xt_table_info *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x1490932c8 <col:3> 'struct xt_table_info **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1490932a8 <col:3> 'struct xt_table_info **' lvalue ParmVar 0x1590bd488 'pinfo' 'struct xt_table_info **'
|   | `-ImplicitCastExpr 0x149093318 <col:11> 'struct xt_table_info *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1490932f8 <col:11> 'struct xt_table_info *' lvalue Var 0x1590bdb28 'newinfo' 'struct xt_table_info *'
|   |-BinaryOperator 0x1490933d8 <line:74:2, col:13> 'void *' '='
|   | |-UnaryOperator 0x149093388 <col:2, col:3> 'void *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x149093370 <col:3> 'void **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x149093350 <col:3> 'void **' lvalue ParmVar 0x1590bd538 'pentry0' 'void **'
|   | `-ImplicitCastExpr 0x1490933c0 <col:13> 'void *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1490933a0 <col:13> 'void *' lvalue Var 0x1590bdd68 'entry1' 'void *'
|   |-CallExpr 0x149093530 <line:75:2, col:25> 'int'
|   | |-ImplicitCastExpr 0x149093518 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1490934d8 <col:2> 'int ()' Function 0x149093420 'xt_free_table_info' 'int ()'
|   | `-ImplicitCastExpr 0x149093558 <col:21> 'struct xt_table_info *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1490934f8 <col:21> 'struct xt_table_info *' lvalue Var 0x1590bdbb8 'info' 'struct xt_table_info *'
|   |-ReturnStmt 0x149093590 <line:76:2, col:9>
|   | `-IntegerLiteral 0x149093570 <col:9> 'int' 0
|   |-LabelStmt 0x149093640 <line:78:1, line:79:28> 'free_newinfo'
|   | `-CallExpr 0x149093600 <col:2, col:28> 'int'
|   |   |-ImplicitCastExpr 0x1490935e0 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1490935a0 <col:2> 'int ()' Function 0x149093420 'xt_free_table_info' 'int ()'
|   |   `-ImplicitCastExpr 0x149093628 <col:21> 'struct xt_table_info *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1490935c0 <col:21> 'struct xt_table_info *' lvalue Var 0x1590bdb28 'newinfo' 'struct xt_table_info *'
|   |-ReturnStmt 0x149093698 <line:80:2, col:9>
|   | `-ImplicitCastExpr 0x149093680 <col:9> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x149093660 <col:9> 'int' lvalue Var 0x1590be250 'ret' 'int'
|   |-LabelStmt 0x1490936d0 <line:81:1, col:11> 'out_unlock'
|   | `-NullStmt 0x1490936c8 <col:11>
|   |-CallExpr 0x1490937d0 <line:84:2, col:47> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x149093710 <col:2> 'int ()' Function 0x1590beb28 'xt_entry_foreach' 'int ()'
|   | |-DeclRefExpr 0x149093730 <col:19> 'struct compat_ipt_entry *' lvalue Var 0x1590bdf78 'iter0' 'struct compat_ipt_entry *'
|   | |-DeclRefExpr 0x149093750 <col:26> 'void *' lvalue Var 0x1590bdce8 'entry0' 'void *'
|   | `-RecoveryExpr 0x1490937a8 <col:34, col:43> '<dependent type>' contains-errors lvalue
|   |   `-DeclRefExpr 0x149093770 <col:34> 'const struct compat_ipt_replace *' lvalue ParmVar 0x1590bd708 'compatr' 'const struct compat_ipt_replace *'
|   |-CompoundStmt 0x149093a10 <col:49, line:88:2>
|   | `-CallExpr 0x1490939d0 <line:87:3, col:29> 'int'
|   |   |-ImplicitCastExpr 0x1490939b8 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x149093978 <col:3> 'int ()' Function 0x1490938c0 'compat_release_entry' 'int ()'
|   |   `-ImplicitCastExpr 0x1490939f8 <col:24> 'struct compat_ipt_entry *' <LValueToRValue>
|   |     `-DeclRefExpr 0x149093998 <col:24> 'struct compat_ipt_entry *' lvalue Var 0x1590bdf78 'iter0' 'struct compat_ipt_entry *'
|   `-ReturnStmt 0x149093a60 <line:89:2, col:9>
|     `-ImplicitCastExpr 0x149093a48 <col:9> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x149093a28 <col:9> 'int' lvalue Var 0x1590be250 'ret' 'int'
`-FunctionDecl 0x149092538 <line:59:2> col:2 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x149092658 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x1490926c0 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x149092728 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x149092600 <<invalid sloc>> Implicit 882
