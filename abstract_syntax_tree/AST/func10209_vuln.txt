TranslationUnitDecl 0x11e055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x11e0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x11e055bd0 '__int128'
|-TypedefDecl 0x11e056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x11e055bf0 'unsigned __int128'
|-TypedefDecl 0x11e126a30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x11e126800 'struct __NSConstantString_tag'
|   `-Record 0x11e056580 '__NSConstantString_tag'
|-TypedefDecl 0x11e126a98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x11e055d90 '__SVInt8_t'
|-TypedefDecl 0x11e126b00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x11e055db0 '__SVInt16_t'
|-TypedefDecl 0x11e126b68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x11e055dd0 '__SVInt32_t'
|-TypedefDecl 0x11e126bd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x11e055df0 '__SVInt64_t'
|-TypedefDecl 0x11e126c38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x11e055e10 '__SVUint8_t'
|-TypedefDecl 0x11e126ca0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x11e055e30 '__SVUint16_t'
|-TypedefDecl 0x11e126d08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x11e055e50 '__SVUint32_t'
|-TypedefDecl 0x11e126d70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x11e055e70 '__SVUint64_t'
|-TypedefDecl 0x11e126dd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x11e055e90 '__SVFloat16_t'
|-TypedefDecl 0x11e126e40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x11e055eb0 '__SVFloat32_t'
|-TypedefDecl 0x11e126ea8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x11e055ed0 '__SVFloat64_t'
|-TypedefDecl 0x11e126f10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x11e055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x11e126f78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x11e055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x11e126fe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x11e055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x11e127048 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x11e055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x11e1270b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x11e055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x11e127118 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x11e055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x11e127180 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x11e055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x11e1271e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x11e055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x11e127250 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x11e055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x11e1272b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x11e056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x11e127320 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x11e056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x11e127388 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x11e056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x11e1273f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x11e056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x11e127458 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x11e056090 '__clang_svint8x3_t'
|-TypedefDecl 0x11e1274c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x11e0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x11e127528 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x11e0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x11e127590 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x11e0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x11e1275f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x11e056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x11e127660 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x11e056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x11e1276c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x11e056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x11e127730 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x11e056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x11e127798 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x11e056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x11e128000 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x11e0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x11e128068 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x11e0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x11e1280d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x11e0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x11e128138 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x11e056210 '__clang_svint8x4_t'
|-TypedefDecl 0x11e1281a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x11e056230 '__clang_svint16x4_t'
|-TypedefDecl 0x11e128208 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x11e056250 '__clang_svint32x4_t'
|-TypedefDecl 0x11e128270 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x11e056270 '__clang_svint64x4_t'
|-TypedefDecl 0x11e1282d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x11e056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x11e128340 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x11e0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x11e1283a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x11e0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x11e128410 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x11e0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x11e128478 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x11e056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x11e1284e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x11e056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x11e128548 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x11e056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x11e1285b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x11e056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x11e128618 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x11e056390 '__SVBool_t'
|-TypedefDecl 0x11e128680 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x11e0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x11e1286e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x11e0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x11e128750 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x11e0563f0 '__SVCount_t'
|-TypedefDecl 0x11e1287f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x11e1287b0 'char *'
|   `-BuiltinType 0x11e0556b0 'char'
|-TypedefDecl 0x11e128868 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x11e1287b0 'char *'
|   `-BuiltinType 0x11e0556b0 'char'
|-FunctionDecl 0x11e128c38 <dataset_diviso_filec/func10209_vuln.c:1:1, line:62:1> line:1:5 invalid dane_query_tlsa 'int (int, int *, const char *, const char *, unsigned int)'
| |-ParmVarDecl 0x11e1288f0 <col:21, col:34> col:34 invalid s 'int'
| |-ParmVarDecl 0x11e1289a8 <col:37, col:51> col:51 invalid r 'int *'
| |-ParmVarDecl 0x11e128a28 <col:54, col:66> col:66 used host 'const char *'
| |-ParmVarDecl 0x11e128aa8 <col:72, col:84> col:84 used proto 'const char *'
| |-ParmVarDecl 0x11e128b28 <col:91, col:104> col:104 used port 'unsigned int'
| `-CompoundStmt 0x11e147ac0 <line:2:1, line:62:1>
|   |-DeclStmt 0x11e128e18 <line:3:2, col:15>
|   | `-VarDecl 0x11e128db0 <col:2, col:14> col:7 used ns 'char[1024]'
|   |-DeclStmt 0x11e128eb0 <line:4:2, col:9>
|   | `-VarDecl 0x11e128e48 <col:2, col:6> col:6 used ret 'int'
|   |-DeclStmt 0x11e128f48 <line:5:2, col:16>
|   | `-VarDecl 0x11e128ee0 <col:2, col:15> col:15 used i 'unsigned int'
|   |-IfStmt 0x11e142aa8 <line:8:2, line:9:47>
|   | |-BinaryOperator 0x11e142870 <line:8:6, col:12> 'int' contains-errors '=='
|   | | |-UnaryOperator 0x11e142838 <col:6, col:7> '<dependent type>' contains-errors prefix '*' cannot overflow
|   | | | `-ImplicitCastExpr 0x11e142820 <col:7> '<dependent type>' contains-errors <LValueToRValue>
|   | | |   `-RecoveryExpr 0x11e142768 <col:7> '<dependent type>' contains-errors lvalue
|   | | `-RecoveryExpr 0x11e142850 <col:12> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x11e142a98 <line:9:3, col:47>
|   |   `-CallExpr 0x11e142a70 <col:10, col:47> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x11e1429f0 <col:10> 'int ()' Function 0x11e142938 'gnutls_assert_val' 'int ()'
|   |     `-RecoveryExpr 0x11e142a50 <col:28> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x11e142f88 <line:11:2, col:51> 'int'
|   | |-ImplicitCastExpr 0x11e142f70 <col:2> 'int (*)(char *, unsigned long, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x11e142da8 <col:2> 'int (char *, unsigned long, const char *, ...)' Function 0x11e142b20 'snprintf' 'int (char *, unsigned long, const char *, ...)'
|   | |-ImplicitCastExpr 0x11e142fd8 <col:11> 'char *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x11e142dc8 <col:11> 'char[1024]' lvalue Var 0x11e128db0 'ns' 'char[1024]'
|   | |-UnaryExprOrTypeTraitExpr 0x11e142e28 <col:15, col:24> 'unsigned long' sizeof
|   | | `-ParenExpr 0x11e142e08 <col:21, col:24> 'char[1024]' lvalue
|   | |   `-DeclRefExpr 0x11e142de8 <col:22> 'char[1024]' lvalue Var 0x11e128db0 'ns' 'char[1024]' non_odr_use_unevaluated
|   | |-ImplicitCastExpr 0x11e144618 <col:27> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x11e144600 <col:27> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x11e142e90 <col:27> 'char[4]' lvalue "STR"
|   | |-ImplicitCastExpr 0x11e144630 <col:34> 'unsigned int' <LValueToRValue>
|   | | `-DeclRefExpr 0x11e142eb0 <col:34> 'unsigned int' lvalue ParmVar 0x11e128b28 'port' 'unsigned int'
|   | |-ImplicitCastExpr 0x11e144648 <col:40> 'const char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x11e142ed0 <col:40> 'const char *' lvalue ParmVar 0x11e128aa8 'proto' 'const char *'
|   | `-ImplicitCastExpr 0x11e144660 <col:47> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x11e142ef0 <col:47> 'const char *' lvalue ParmVar 0x11e128a28 'host' 'const char *'
|   |-BinaryOperator 0x11e144978 <line:14:2, col:51> 'int' contains-errors '='
|   | |-DeclRefExpr 0x11e144678 <col:2> 'int' lvalue Var 0x11e128e48 'ret' 'int'
|   | `-CallExpr 0x11e144930 <col:8, col:51> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x11e144778 <col:8> 'int ()' Function 0x11e1446c0 'ub_resolve' 'int ()'
|   |   |-CXXDependentScopeMemberExpr 0x11e1447b8 <col:19, col:22> '<dependent type>' contains-errors lvalue ->ctx
|   |   | `-RecoveryExpr 0x11e144798 <col:19> '<dependent type>' contains-errors lvalue
|   |   |-DeclRefExpr 0x11e144800 <col:27> 'char[1024]' lvalue Var 0x11e128db0 'ns' 'char[1024]'
|   |   |-IntegerLiteral 0x11e144820 <col:31> 'int' 52
|   |   |-IntegerLiteral 0x11e144840 <col:35> 'int' 1
|   |   `-UnaryOperator 0x11e144918 <col:38, col:45> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     `-CXXDependentScopeMemberExpr 0x11e1448d0 <col:39, col:45> '<dependent type>' contains-errors lvalue ->result
|   |       `-ParenExpr 0x11e1448b0 <col:39, col:42> '<dependent type>' contains-errors
|   |         `-UnaryOperator 0x11e144898 <col:40, col:41> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |           `-ImplicitCastExpr 0x11e144880 <col:41> '<dependent type>' contains-errors <LValueToRValue>
|   |             `-RecoveryExpr 0x11e144860 <col:41> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x11e144ae0 <line:15:2, line:17:2>
|   | |-BinaryOperator 0x11e1449f0 <line:15:5, col:12> 'int' '!='
|   | | |-ImplicitCastExpr 0x11e1449d8 <col:5> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x11e144998 <col:5> 'int' lvalue Var 0x11e128e48 'ret' 'int'
|   | | `-IntegerLiteral 0x11e1449b8 <col:12> 'int' 0
|   | `-CompoundStmt 0x11e144ac8 <col:15, line:17:2>
|   |   `-ReturnStmt 0x11e144ab8 <line:16:3, col:50>
|   |     `-CallExpr 0x11e144a90 <col:10, col:50> '<dependent type>' contains-errors
|   |       |-DeclRefExpr 0x11e144a10 <col:10> 'int ()' Function 0x11e142938 'gnutls_assert_val' 'int ()'
|   |       `-RecoveryExpr 0x11e144a70 <col:28> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x11e144d00 <line:20:2, line:22:2>
|   | |-UnaryOperator 0x11e144c18 <line:20:5, col:20> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x11e144c00 <col:6, col:20> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-CXXDependentScopeMemberExpr 0x11e144bb8 <col:6, col:20> '<dependent type>' contains-errors lvalue ->havedata
|   | |     `-CXXDependentScopeMemberExpr 0x11e144b70 <col:6, col:12> '<dependent type>' contains-errors lvalue ->result
|   | |       `-ParenExpr 0x11e144b50 <col:6, col:9> '<dependent type>' contains-errors
|   | |         `-UnaryOperator 0x11e144b38 <col:7, col:8> '<dependent type>' contains-errors prefix '*' cannot overflow
|   | |           `-ImplicitCastExpr 0x11e144b20 <col:8> '<dependent type>' contains-errors <LValueToRValue>
|   | |             `-RecoveryExpr 0x11e144b00 <col:8> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x11e144ce8 <col:30, line:22:2>
|   |   `-ReturnStmt 0x11e144cd8 <line:21:3, col:47>
|   |     `-CallExpr 0x11e144cb0 <col:10, col:47> '<dependent type>' contains-errors
|   |       |-DeclRefExpr 0x11e144c30 <col:10> 'int ()' Function 0x11e142938 'gnutls_assert_val' 'int ()'
|   |       `-RecoveryExpr 0x11e144c90 <col:28> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x11e144d78 <line:24:2, col:6> 'unsigned int' '='
|   | |-DeclRefExpr 0x11e144d20 <col:2> 'unsigned int' lvalue Var 0x11e128ee0 'i' 'unsigned int'
|   | `-ImplicitCastExpr 0x11e144d60 <col:6> 'unsigned int' <IntegralCast>
|   |   `-IntegerLiteral 0x11e144d40 <col:6> 'int' 0
|   |-DoStmt 0x11e146600 <line:25:2, line:39:39>
|   | |-CompoundStmt 0x11e146168 <line:25:5, line:39:2>
|   | | |-IfStmt 0x11e1450b0 <line:27:3, line:31:3> has_else
|   | | | |-BinaryOperator 0x11e144f28 <line:27:7, col:30> 'int' contains-errors '>'
|   | | | | |-ArraySubscriptExpr 0x11e144ee8 <col:7, col:26> '<dependent type>' contains-errors lvalue
|   | | | | | |-ImplicitCastExpr 0x11e144eb8 <col:7, col:21> '<dependent type>' contains-errors <LValueToRValue>
|   | | | | | | `-CXXDependentScopeMemberExpr 0x11e144e50 <col:7, col:21> '<dependent type>' contains-errors lvalue ->len
|   | | | | | |   `-CXXDependentScopeMemberExpr 0x11e144e08 <col:7, col:13> '<dependent type>' contains-errors lvalue ->result
|   | | | | | |     `-ParenExpr 0x11e144de8 <col:7, col:10> '<dependent type>' contains-errors
|   | | | | | |       `-UnaryOperator 0x11e144dd0 <col:8, col:9> '<dependent type>' contains-errors prefix '*' cannot overflow
|   | | | | | |         `-ImplicitCastExpr 0x11e144db8 <col:9> '<dependent type>' contains-errors <LValueToRValue>
|   | | | | | |           `-RecoveryExpr 0x11e144d98 <col:9> '<dependent type>' contains-errors lvalue
|   | | | | | `-ImplicitCastExpr 0x11e144ed0 <col:25> 'unsigned int' <LValueToRValue>
|   | | | | |   `-DeclRefExpr 0x11e144e98 <col:25> 'unsigned int' lvalue Var 0x11e128ee0 'i' 'unsigned int'
|   | | | | `-IntegerLiteral 0x11e144f08 <col:30> 'int' 3
|   | | | |-BinaryOperator 0x11e144fc0 <line:28:4, col:10> 'int' contains-errors '='
|   | | | | |-DeclRefExpr 0x11e144f48 <col:4> 'int' lvalue Var 0x11e128e48 'ret' 'int'
|   | | | | `-RecoveryExpr 0x11e144fa0 <col:10> '<dependent type>' contains-errors lvalue
|   | | | `-CompoundStmt 0x11e145098 <line:29:8, line:31:3>
|   | | |   `-ReturnStmt 0x11e145088 <line:30:4, col:57>
|   | | |     `-CallExpr 0x11e145060 <col:11, col:57> '<dependent type>' contains-errors
|   | | |       |-DeclRefExpr 0x11e144fe0 <col:11> 'int ()' Function 0x11e142938 'gnutls_assert_val' 'int ()'
|   | | |       `-RecoveryExpr 0x11e145040 <col:29> '<dependent type>' contains-errors lvalue
|   | | |-BinaryOperator 0x11e1453d0 <line:33:3, col:43> '<dependent type>' contains-errors '='
|   | | | |-ArraySubscriptExpr 0x11e1451e8 <col:3, col:16> '<dependent type>' contains-errors lvalue
|   | | | | |-ImplicitCastExpr 0x11e1451b8 <col:3, col:9> '<dependent type>' contains-errors <LValueToRValue>
|   | | | | | `-CXXDependentScopeMemberExpr 0x11e145150 <col:3, col:9> '<dependent type>' contains-errors lvalue ->usage
|   | | | | |   `-ParenExpr 0x11e145130 <col:3, col:6> '<dependent type>' contains-errors
|   | | | | |     `-UnaryOperator 0x11e145118 <col:4, col:5> '<dependent type>' contains-errors prefix '*' cannot overflow
|   | | | | |       `-ImplicitCastExpr 0x11e145100 <col:5> '<dependent type>' contains-errors <LValueToRValue>
|   | | | | |         `-RecoveryExpr 0x11e1450e0 <col:5> '<dependent type>' contains-errors lvalue
|   | | | | `-ImplicitCastExpr 0x11e1451d0 <col:15> 'unsigned int' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x11e145198 <col:15> 'unsigned int' lvalue Var 0x11e128ee0 'i' 'unsigned int'
|   | | | `-ArraySubscriptExpr 0x11e1453b0 <col:20, col:43> '<dependent type>' contains-errors lvalue
|   | | |   |-ImplicitCastExpr 0x11e145398 <col:20, col:40> '<dependent type>' contains-errors <LValueToRValue>
|   | | |   | `-ArraySubscriptExpr 0x11e145358 <col:20, col:40> '<dependent type>' contains-errors lvalue
|   | | |   |   |-ImplicitCastExpr 0x11e145328 <col:20, col:34> '<dependent type>' contains-errors <LValueToRValue>
|   | | |   |   | `-CXXDependentScopeMemberExpr 0x11e1452c0 <col:20, col:34> '<dependent type>' contains-errors lvalue ->data
|   | | |   |   |   `-CXXDependentScopeMemberExpr 0x11e145278 <col:20, col:26> '<dependent type>' contains-errors lvalue ->result
|   | | |   |   |     `-ParenExpr 0x11e145258 <col:20, col:23> '<dependent type>' contains-errors
|   | | |   |   |       `-UnaryOperator 0x11e145240 <col:21, col:22> '<dependent type>' contains-errors prefix '*' cannot overflow
|   | | |   |   |         `-ImplicitCastExpr 0x11e145228 <col:22> '<dependent type>' contains-errors <LValueToRValue>
|   | | |   |   |           `-RecoveryExpr 0x11e145208 <col:22> '<dependent type>' contains-errors lvalue
|   | | |   |   `-ImplicitCastExpr 0x11e145340 <col:39> 'unsigned int' <LValueToRValue>
|   | | |   |     `-DeclRefExpr 0x11e145308 <col:39> 'unsigned int' lvalue Var 0x11e128ee0 'i' 'unsigned int'
|   | | |   `-IntegerLiteral 0x11e145378 <col:42> 'int' 0
|   | | |-BinaryOperator 0x11e145710 <line:34:3, col:42> '<dependent type>' contains-errors '='
|   | | | |-ArraySubscriptExpr 0x11e1454f8 <col:3, col:15> '<dependent type>' contains-errors lvalue
|   | | | | |-ImplicitCastExpr 0x11e1454c8 <col:3, col:9> '<dependent type>' contains-errors <LValueToRValue>
|   | | | | | `-CXXDependentScopeMemberExpr 0x11e145460 <col:3, col:9> '<dependent type>' contains-errors lvalue ->type
|   | | | | |   `-ParenExpr 0x11e145440 <col:3, col:6> '<dependent type>' contains-errors
|   | | | | |     `-UnaryOperator 0x11e145428 <col:4, col:5> '<dependent type>' contains-errors prefix '*' cannot overflow
|   | | | | |       `-ImplicitCastExpr 0x11e145410 <col:5> '<dependent type>' contains-errors <LValueToRValue>
|   | | | | |         `-RecoveryExpr 0x11e1453f0 <col:5> '<dependent type>' contains-errors lvalue
|   | | | | `-ImplicitCastExpr 0x11e1454e0 <col:14> 'unsigned int' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x11e1454a8 <col:14> 'unsigned int' lvalue Var 0x11e128ee0 'i' 'unsigned int'
|   | | | `-ArraySubscriptExpr 0x11e1456f0 <col:19, col:42> '<dependent type>' contains-errors lvalue
|   | | |   |-ImplicitCastExpr 0x11e1456d8 <col:19, col:39> '<dependent type>' contains-errors <LValueToRValue>
|   | | |   | `-ArraySubscriptExpr 0x11e145698 <col:19, col:39> '<dependent type>' contains-errors lvalue
|   | | |   |   |-ImplicitCastExpr 0x11e145668 <col:19, col:33> '<dependent type>' contains-errors <LValueToRValue>
|   | | |   |   | `-CXXDependentScopeMemberExpr 0x11e145600 <col:19, col:33> '<dependent type>' contains-errors lvalue ->data
|   | | |   |   |   `-CXXDependentScopeMemberExpr 0x11e145588 <col:19, col:25> '<dependent type>' contains-errors lvalue ->result
|   | | |   |   |     `-ParenExpr 0x11e145568 <col:19, col:22> '<dependent type>' contains-errors
|   | | |   |   |       `-UnaryOperator 0x11e145550 <col:20, col:21> '<dependent type>' contains-errors prefix '*' cannot overflow
|   | | |   |   |         `-ImplicitCastExpr 0x11e145538 <col:21> '<dependent type>' contains-errors <LValueToRValue>
|   | | |   |   |           `-RecoveryExpr 0x11e145518 <col:21> '<dependent type>' contains-errors lvalue
|   | | |   |   `-ImplicitCastExpr 0x11e145680 <col:38> 'unsigned int' <LValueToRValue>
|   | | |   |     `-DeclRefExpr 0x11e145648 <col:38> 'unsigned int' lvalue Var 0x11e128ee0 'i' 'unsigned int'
|   | | |   `-IntegerLiteral 0x11e1456b8 <col:41> 'int' 1
|   | | |-BinaryOperator 0x11e145a20 <line:35:3, col:43> '<dependent type>' contains-errors '='
|   | | | |-ArraySubscriptExpr 0x11e145838 <col:3, col:16> '<dependent type>' contains-errors lvalue
|   | | | | |-ImplicitCastExpr 0x11e145808 <col:3, col:9> '<dependent type>' contains-errors <LValueToRValue>
|   | | | | | `-CXXDependentScopeMemberExpr 0x11e1457a0 <col:3, col:9> '<dependent type>' contains-errors lvalue ->match
|   | | | | |   `-ParenExpr 0x11e145780 <col:3, col:6> '<dependent type>' contains-errors
|   | | | | |     `-UnaryOperator 0x11e145768 <col:4, col:5> '<dependent type>' contains-errors prefix '*' cannot overflow
|   | | | | |       `-ImplicitCastExpr 0x11e145750 <col:5> '<dependent type>' contains-errors <LValueToRValue>
|   | | | | |         `-RecoveryExpr 0x11e145730 <col:5> '<dependent type>' contains-errors lvalue
|   | | | | `-ImplicitCastExpr 0x11e145820 <col:15> 'unsigned int' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x11e1457e8 <col:15> 'unsigned int' lvalue Var 0x11e128ee0 'i' 'unsigned int'
|   | | | `-ArraySubscriptExpr 0x11e145a00 <col:20, col:43> '<dependent type>' contains-errors lvalue
|   | | |   |-ImplicitCastExpr 0x11e1459e8 <col:20, col:40> '<dependent type>' contains-errors <LValueToRValue>
|   | | |   | `-ArraySubscriptExpr 0x11e1459a8 <col:20, col:40> '<dependent type>' contains-errors lvalue
|   | | |   |   |-ImplicitCastExpr 0x11e145978 <col:20, col:34> '<dependent type>' contains-errors <LValueToRValue>
|   | | |   |   | `-CXXDependentScopeMemberExpr 0x11e145910 <col:20, col:34> '<dependent type>' contains-errors lvalue ->data
|   | | |   |   |   `-CXXDependentScopeMemberExpr 0x11e1458c8 <col:20, col:26> '<dependent type>' contains-errors lvalue ->result
|   | | |   |   |     `-ParenExpr 0x11e1458a8 <col:20, col:23> '<dependent type>' contains-errors
|   | | |   |   |       `-UnaryOperator 0x11e145890 <col:21, col:22> '<dependent type>' contains-errors prefix '*' cannot overflow
|   | | |   |   |         `-ImplicitCastExpr 0x11e145878 <col:22> '<dependent type>' contains-errors <LValueToRValue>
|   | | |   |   |           `-RecoveryExpr 0x11e145858 <col:22> '<dependent type>' contains-errors lvalue
|   | | |   |   `-ImplicitCastExpr 0x11e145990 <col:39> 'unsigned int' <LValueToRValue>
|   | | |   |     `-DeclRefExpr 0x11e145958 <col:39> 'unsigned int' lvalue Var 0x11e128ee0 'i' 'unsigned int'
|   | | |   `-IntegerLiteral 0x11e1459c8 <col:42> 'int' 2
|   | | |-BinaryOperator 0x11e145dd0 <line:36:3, col:55> '<dependent type>' contains-errors '='
|   | | | |-CXXDependentScopeMemberExpr 0x11e145b68 <col:3, col:17> '<dependent type>' contains-errors lvalue .data
|   | | | | `-ArraySubscriptExpr 0x11e145b48 <col:3, col:15> '<dependent type>' contains-errors lvalue
|   | | | |   |-ImplicitCastExpr 0x11e145b18 <col:3, col:9> '<dependent type>' contains-errors <LValueToRValue>
|   | | | |   | `-CXXDependentScopeMemberExpr 0x11e145ab0 <col:3, col:9> '<dependent type>' contains-errors lvalue ->data
|   | | | |   |   `-ParenExpr 0x11e145a90 <col:3, col:6> '<dependent type>' contains-errors
|   | | | |   |     `-UnaryOperator 0x11e145a78 <col:4, col:5> '<dependent type>' contains-errors prefix '*' cannot overflow
|   | | | |   |       `-ImplicitCastExpr 0x11e145a60 <col:5> '<dependent type>' contains-errors <LValueToRValue>
|   | | | |   |         `-RecoveryExpr 0x11e145a40 <col:5> '<dependent type>' contains-errors lvalue
|   | | | |   `-ImplicitCastExpr 0x11e145b30 <col:14> 'unsigned int' <LValueToRValue>
|   | | | |     `-DeclRefExpr 0x11e145af8 <col:14> 'unsigned int' lvalue Var 0x11e128ee0 'i' 'unsigned int'
|   | | | `-CStyleCastExpr 0x11e145da8 <col:24, col:55> 'void *' contains-errors <Dependent>
|   | | |   `-UnaryOperator 0x11e145d78 <col:31, col:55> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | |     `-ArraySubscriptExpr 0x11e145d58 <col:32, col:55> '<dependent type>' contains-errors lvalue
|   | | |       |-ImplicitCastExpr 0x11e145d40 <col:32, col:52> '<dependent type>' contains-errors <LValueToRValue>
|   | | |       | `-ArraySubscriptExpr 0x11e145d00 <col:32, col:52> '<dependent type>' contains-errors lvalue
|   | | |       |   |-ImplicitCastExpr 0x11e145cd0 <col:32, col:46> '<dependent type>' contains-errors <LValueToRValue>
|   | | |       |   | `-CXXDependentScopeMemberExpr 0x11e145c68 <col:32, col:46> '<dependent type>' contains-errors lvalue ->data
|   | | |       |   |   `-CXXDependentScopeMemberExpr 0x11e145c20 <col:32, col:38> '<dependent type>' contains-errors lvalue ->result
|   | | |       |   |     `-ParenExpr 0x11e145c00 <col:32, col:35> '<dependent type>' contains-errors
|   | | |       |   |       `-UnaryOperator 0x11e145be8 <col:33, col:34> '<dependent type>' contains-errors prefix '*' cannot overflow
|   | | |       |   |         `-ImplicitCastExpr 0x11e145bd0 <col:34> '<dependent type>' contains-errors <LValueToRValue>
|   | | |       |   |           `-RecoveryExpr 0x11e145bb0 <col:34> '<dependent type>' contains-errors lvalue
|   | | |       |   `-ImplicitCastExpr 0x11e145ce8 <col:51> 'unsigned int' <LValueToRValue>
|   | | |       |     `-DeclRefExpr 0x11e145cb0 <col:51> 'unsigned int' lvalue Var 0x11e128ee0 'i' 'unsigned int'
|   | | |       `-IntegerLiteral 0x11e145d20 <col:54> 'int' 3
|   | | |-BinaryOperator 0x11e146110 <line:37:3, col:47> '<dependent type>' contains-errors '='
|   | | | |-CXXDependentScopeMemberExpr 0x11e145f18 <col:3, col:17> '<dependent type>' contains-errors lvalue .size
|   | | | | `-ArraySubscriptExpr 0x11e145ef8 <col:3, col:15> '<dependent type>' contains-errors lvalue
|   | | | |   |-ImplicitCastExpr 0x11e145ec8 <col:3, col:9> '<dependent type>' contains-errors <LValueToRValue>
|   | | | |   | `-CXXDependentScopeMemberExpr 0x11e145e60 <col:3, col:9> '<dependent type>' contains-errors lvalue ->data
|   | | | |   |   `-ParenExpr 0x11e145e40 <col:3, col:6> '<dependent type>' contains-errors
|   | | | |   |     `-UnaryOperator 0x11e145e28 <col:4, col:5> '<dependent type>' contains-errors prefix '*' cannot overflow
|   | | | |   |       `-ImplicitCastExpr 0x11e145e10 <col:5> '<dependent type>' contains-errors <LValueToRValue>
|   | | | |   |         `-RecoveryExpr 0x11e145df0 <col:5> '<dependent type>' contains-errors lvalue
|   | | | |   `-ImplicitCastExpr 0x11e145ee0 <col:14> 'unsigned int' <LValueToRValue>
|   | | | |     `-DeclRefExpr 0x11e145ea8 <col:14> 'unsigned int' lvalue Var 0x11e128ee0 'i' 'unsigned int'
|   | | | `-BinaryOperator 0x11e1460f0 <col:24, col:47> '<dependent type>' contains-errors '-'
|   | | |   |-ArraySubscriptExpr 0x11e1460b0 <col:24, col:43> '<dependent type>' contains-errors lvalue
|   | | |   | |-ImplicitCastExpr 0x11e146080 <col:24, col:38> '<dependent type>' contains-errors <LValueToRValue>
|   | | |   | | `-CXXDependentScopeMemberExpr 0x11e146018 <col:24, col:38> '<dependent type>' contains-errors lvalue ->len
|   | | |   | |   `-CXXDependentScopeMemberExpr 0x11e145fd0 <col:24, col:30> '<dependent type>' contains-errors lvalue ->result
|   | | |   | |     `-ParenExpr 0x11e145fb0 <col:24, col:27> '<dependent type>' contains-errors
|   | | |   | |       `-UnaryOperator 0x11e145f98 <col:25, col:26> '<dependent type>' contains-errors prefix '*' cannot overflow
|   | | |   | |         `-ImplicitCastExpr 0x11e145f80 <col:26> '<dependent type>' contains-errors <LValueToRValue>
|   | | |   | |           `-RecoveryExpr 0x11e145f60 <col:26> '<dependent type>' contains-errors lvalue
|   | | |   | `-ImplicitCastExpr 0x11e146098 <col:42> 'unsigned int' <LValueToRValue>
|   | | |   |   `-DeclRefExpr 0x11e146060 <col:42> 'unsigned int' lvalue Var 0x11e128ee0 'i' 'unsigned int'
|   | | |   `-IntegerLiteral 0x11e1460d0 <col:47> 'int' 3
|   | | `-UnaryOperator 0x11e146150 <line:38:3, col:4> 'unsigned int' postfix '++'
|   | |   `-DeclRefExpr 0x11e146130 <col:3> 'unsigned int' lvalue Var 0x11e128ee0 'i' 'unsigned int'
|   | `-BinaryOperator 0x11e1465d8 <line:39:10, col:35> 'int' contains-errors '!='
|   |   |-ArraySubscriptExpr 0x11e146598 <col:10, col:30> '<dependent type>' contains-errors lvalue
|   |   | |-ImplicitCastExpr 0x11e146568 <col:10, col:24> '<dependent type>' contains-errors <LValueToRValue>
|   |   | | `-CXXDependentScopeMemberExpr 0x11e146520 <col:10, col:24> '<dependent type>' contains-errors lvalue ->data
|   |   | |   `-CXXDependentScopeMemberExpr 0x11e1464d8 <col:10, col:16> '<dependent type>' contains-errors lvalue ->result
|   |   | |     `-ParenExpr 0x11e1464b8 <col:10, col:13> '<dependent type>' contains-errors
|   |   | |       `-UnaryOperator 0x11e1464a0 <col:11, col:12> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |   | |         `-ImplicitCastExpr 0x11e146488 <col:12> '<dependent type>' contains-errors <LValueToRValue>
|   |   | |           `-RecoveryExpr 0x11e1461b0 <col:12> '<dependent type>' contains-errors lvalue
|   |   | `-ImplicitCastExpr 0x11e146580 <col:29> 'unsigned int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x11e1462b0 <col:29> 'unsigned int' lvalue Var 0x11e128ee0 'i' 'unsigned int'
|   |   `-RecoveryExpr 0x11e1465b8 <col:35> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x11e1466f8 <line:41:2, col:23> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x11e146690 <col:2, col:8> '<dependent type>' contains-errors lvalue ->data_entries
|   | | `-ParenExpr 0x11e146670 <col:2, col:5> '<dependent type>' contains-errors
|   | |   `-UnaryOperator 0x11e146658 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow
|   | |     `-ImplicitCastExpr 0x11e146640 <col:4> '<dependent type>' contains-errors <LValueToRValue>
|   | |       `-RecoveryExpr 0x11e146620 <col:4> '<dependent type>' contains-errors lvalue
|   | `-DeclRefExpr 0x11e1466d8 <col:23> 'unsigned int' lvalue Var 0x11e128ee0 'i' 'unsigned int'
|   |-IfStmt 0x11e146c60 <line:43:2, line:48:2>
|   | |-RecoveryExpr 0x11e1468e8 <line:43:6, col:54> '_Bool' contains-errors
|   | `-CompoundStmt 0x11e146c48 <col:62, line:48:2>
|   |   `-IfStmt 0x11e146c18 <line:44:3, line:47:48> has_else
|   |     |-CXXDependentScopeMemberExpr 0x11e1469c0 <line:44:7, col:21> '<dependent type>' contains-errors lvalue ->bogus
|   |     | `-CXXDependentScopeMemberExpr 0x11e146978 <col:7, col:13> '<dependent type>' contains-errors lvalue ->result
|   |     |   `-ParenExpr 0x11e146958 <col:7, col:10> '<dependent type>' contains-errors
|   |     |     `-UnaryOperator 0x11e146940 <col:8, col:9> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |     |       `-ImplicitCastExpr 0x11e146928 <col:9> '<dependent type>' contains-errors <LValueToRValue>
|   |     |         `-RecoveryExpr 0x11e146908 <col:9> '<dependent type>' contains-errors lvalue
|   |     |-BinaryOperator 0x11e146af0 <line:45:4, col:53> 'int' contains-errors '='
|   |     | |-DeclRefExpr 0x11e146a08 <col:4> 'int' lvalue Var 0x11e128e48 'ret' 'int'
|   |     | `-CallExpr 0x11e146ac8 <col:10, col:53> '<dependent type>' contains-errors
|   |     |   |-DeclRefExpr 0x11e146a28 <col:10> 'int ()' Function 0x11e142938 'gnutls_assert_val' 'int ()'
|   |     |   `-RecoveryExpr 0x11e146aa8 <col:28> '<dependent type>' contains-errors lvalue
|   |     `-BinaryOperator 0x11e146bf8 <line:47:4, col:48> 'int' contains-errors '='
|   |       |-DeclRefExpr 0x11e146b10 <col:4> 'int' lvalue Var 0x11e128e48 'ret' 'int'
|   |       `-CallExpr 0x11e146bd0 <col:10, col:48> '<dependent type>' contains-errors
|   |         |-DeclRefExpr 0x11e146b30 <col:10> 'int ()' Function 0x11e142938 'gnutls_assert_val' 'int ()'
|   |         `-RecoveryExpr 0x11e146bb0 <col:28> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x11e147a48 <line:51:2, line:59:9> has_else
|   | |-CXXDependentScopeMemberExpr 0x11e146d38 <line:51:6, col:20> '<dependent type>' contains-errors lvalue ->secure
|   | | `-CXXDependentScopeMemberExpr 0x11e146cf0 <col:6, col:12> '<dependent type>' contains-errors lvalue ->result
|   | |   `-ParenExpr 0x11e146cd0 <col:6, col:9> '<dependent type>' contains-errors
|   | |     `-UnaryOperator 0x11e146cb8 <col:7, col:8> '<dependent type>' contains-errors prefix '*' cannot overflow
|   | |       `-ImplicitCastExpr 0x11e146ca0 <col:8> '<dependent type>' contains-errors <LValueToRValue>
|   | |         `-RecoveryExpr 0x11e146c80 <col:8> '<dependent type>' contains-errors lvalue
|   | |-CompoundStmt 0x11e146fe0 <col:28, line:53:2>
|   | | `-BinaryOperator 0x11e146fc0 <line:52:3, col:18> '<dependent type>' contains-errors '='
|   | |   |-CXXDependentScopeMemberExpr 0x11e146f58 <col:3, col:9> '<dependent type>' contains-errors lvalue ->status
|   | |   | `-ParenExpr 0x11e146f38 <col:3, col:6> '<dependent type>' contains-errors
|   | |   |   `-UnaryOperator 0x11e146f20 <col:4, col:5> '<dependent type>' contains-errors prefix '*' cannot overflow
|   | |   |     `-ImplicitCastExpr 0x11e146f08 <col:5> '<dependent type>' contains-errors <LValueToRValue>
|   | |   |       `-RecoveryExpr 0x11e146d80 <col:5> '<dependent type>' contains-errors lvalue
|   | |   `-RecoveryExpr 0x11e146fa0 <col:18> '<dependent type>' contains-errors lvalue
|   | `-IfStmt 0x11e147a18 <line:53:9, line:59:9> has_else
|   |   |-CXXDependentScopeMemberExpr 0x11e1470b0 <line:53:13, col:27> '<dependent type>' contains-errors lvalue ->bogus
|   |   | `-CXXDependentScopeMemberExpr 0x11e147068 <col:13, col:19> '<dependent type>' contains-errors lvalue ->result
|   |   |   `-ParenExpr 0x11e147048 <col:13, col:16> '<dependent type>' contains-errors
|   |   |     `-UnaryOperator 0x11e147030 <col:14, col:15> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |   |       `-ImplicitCastExpr 0x11e147018 <col:15> '<dependent type>' contains-errors <LValueToRValue>
|   |   |         `-RecoveryExpr 0x11e146ff8 <col:15> '<dependent type>' contains-errors lvalue
|   |   |-CompoundStmt 0x11e1474c8 <col:34, line:56:2>
|   |   | |-CallExpr 0x11e147248 <line:54:10, col:24> 'int'
|   |   | | `-ImplicitCastExpr 0x11e147230 <col:10> 'int (*)()' <FunctionToPointerDecay>
|   |   | |   `-DeclRefExpr 0x11e1471d8 <col:10> 'int ()' Function 0x11e147120 'gnutls_assert' 'int ()'
|   |   | `-BinaryOperator 0x11e1474a8 <line:55:3, col:18> '<dependent type>' contains-errors '='
|   |   |   |-CXXDependentScopeMemberExpr 0x11e147440 <col:3, col:9> '<dependent type>' contains-errors lvalue ->status
|   |   |   | `-ParenExpr 0x11e147420 <col:3, col:6> '<dependent type>' contains-errors
|   |   |   |   `-UnaryOperator 0x11e147408 <col:4, col:5> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |   |   |     `-ImplicitCastExpr 0x11e1473f0 <col:5> '<dependent type>' contains-errors <LValueToRValue>
|   |   |   |       `-RecoveryExpr 0x11e147268 <col:5> '<dependent type>' contains-errors lvalue
|   |   |   `-RecoveryExpr 0x11e147488 <col:18> '<dependent type>' contains-errors lvalue
|   |   `-CompoundStmt 0x11e147a00 <line:56:9, line:59:9>
|   |     `-CallExpr 0x11e147520 <line:57:10, col:24> 'int'
|   |       `-ImplicitCastExpr 0x11e147508 <col:10> 'int (*)()' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x11e1474e8 <col:10> 'int ()' Function 0x11e147120 'gnutls_assert' 'int ()'
|   `-ReturnStmt 0x11e147ab0 <line:61:2, col:9>
|     `-ImplicitCastExpr 0x11e147a98 <col:9> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x11e147a78 <col:9> 'int' lvalue Var 0x11e128e48 'ret' 'int'
|-FunctionDecl 0x11e142420 <line:7:7> col:7 implicit used calloc 'void *(unsigned long, unsigned long)' extern
| |-ParmVarDecl 0x11e142520 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0x11e142588 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-BuiltinAttr 0x11e1424c8 <<invalid sloc>> Implicit 868
| `-AllocSizeAttr 0x11e142600 <col:7> Implicit 1 2
`-FunctionDecl 0x11e142b20 <line:11:2> col:2 implicit used snprintf 'int (char *, unsigned long, const char *, ...)' extern
  |-ParmVarDecl 0x11e142c20 <<invalid sloc>> <invalid sloc> 'char *'
  |-ParmVarDecl 0x11e142c88 <<invalid sloc>> <invalid sloc> 'unsigned long'
  |-ParmVarDecl 0x11e142cf0 <<invalid sloc>> <invalid sloc> 'const char *'
  |-BuiltinAttr 0x11e142bc8 <<invalid sloc>> Implicit 905
  `-FormatAttr 0x11e142d70 <col:2> Implicit printf 3 4
