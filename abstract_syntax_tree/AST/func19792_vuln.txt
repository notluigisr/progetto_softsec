TranslationUnitDecl 0x13b055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13b0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13b055bd0 '__int128'
|-TypedefDecl 0x13b056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13b055bf0 'unsigned __int128'
|-TypedefDecl 0x13b126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13b126000 'struct __NSConstantString_tag'
|   `-Record 0x13b056580 '__NSConstantString_tag'
|-TypedefDecl 0x13b126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13b055d90 '__SVInt8_t'
|-TypedefDecl 0x13b126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13b055db0 '__SVInt16_t'
|-TypedefDecl 0x13b126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13b055dd0 '__SVInt32_t'
|-TypedefDecl 0x13b1263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13b055df0 '__SVInt64_t'
|-TypedefDecl 0x13b126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13b055e10 '__SVUint8_t'
|-TypedefDecl 0x13b1264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13b055e30 '__SVUint16_t'
|-TypedefDecl 0x13b126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13b055e50 '__SVUint32_t'
|-TypedefDecl 0x13b126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13b055e70 '__SVUint64_t'
|-TypedefDecl 0x13b1265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13b055e90 '__SVFloat16_t'
|-TypedefDecl 0x13b126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13b055eb0 '__SVFloat32_t'
|-TypedefDecl 0x13b1266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13b055ed0 '__SVFloat64_t'
|-TypedefDecl 0x13b126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13b055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13b126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13b055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13b1267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13b055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13b126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13b055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13b1268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13b055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13b126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13b055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13b126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13b055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13b1269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13b055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13b126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13b055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13b126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13b056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13b126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13b056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13b126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13b056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13b126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13b056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13b126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13b056090 '__clang_svint8x3_t'
|-TypedefDecl 0x13b126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13b0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13b126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13b0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13b126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13b0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13b126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13b056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13b126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13b056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13b126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13b056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13b126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13b056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13b126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13b056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13b127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13b0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13b127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13b0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13b1278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13b0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13b127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13b056210 '__clang_svint8x4_t'
|-TypedefDecl 0x13b1279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13b056230 '__clang_svint16x4_t'
|-TypedefDecl 0x13b127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13b056250 '__clang_svint32x4_t'
|-TypedefDecl 0x13b127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13b056270 '__clang_svint64x4_t'
|-TypedefDecl 0x13b127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13b056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13b127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13b0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13b127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13b0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13b127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13b0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13b127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13b056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13b127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13b056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13b127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13b056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13b127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13b056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13b127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13b056390 '__SVBool_t'
|-TypedefDecl 0x13b127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13b0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13b127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13b0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13b127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13b0563f0 '__SVCount_t'
|-TypedefDecl 0x13b127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13b127fb0 'char *'
|   `-BuiltinType 0x13b0556b0 'char'
|-TypedefDecl 0x13b128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13b127fb0 'char *'
|   `-BuiltinType 0x13b0556b0 'char'
|-FunctionDecl 0x13b128318 <dataset_diviso_filec/func19792_vuln.c:1:1, line:46:1> line:1:7 invalid ztryrealloc_usable 'void *(void *, int, int *)'
| |-ParmVarDecl 0x13b1280d8 <col:26, col:32> col:32 used ptr 'void *'
| |-ParmVarDecl 0x13b128170 <col:37, col:44> col:44 invalid size 'int'
| |-ParmVarDecl 0x13b128228 <col:50, col:58> col:58 invalid usable 'int *'
| `-CompoundStmt 0x13c808e20 <col:66, line:46:1>
|   |-DeclStmt 0x13b128458 <line:3:5, col:18>
|   | `-VarDecl 0x13b1283f0 <col:5, col:11> col:11 used realptr 'void *'
|   |-UnaryExprOrTypeTraitExpr 0x13b1284e0 <line:5:5, col:12> 'unsigned long' contains-errors sizeof
|   | `-RecoveryExpr 0x13b1284c0 <col:12> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x13b128580 <line:6:5, col:17>
|   | `-VarDecl 0x13b128518 <col:5, col:11> col:11 used newptr 'void *'
|   |-IfStmt 0x13b809918 <line:9:5, line:13:5>
|   | |-BinaryOperator 0x13b1286b0 <line:9:9, col:29> 'int' contains-errors '&&'
|   | | |-BinaryOperator 0x13b1285d8 <col:9, col:17> 'int' contains-errors '=='
|   | | | |-RecoveryExpr 0x13b128598 <col:9> '<dependent type>' contains-errors lvalue
|   | | | `-IntegerLiteral 0x13b1285b8 <col:17> 'int' 0
|   | | `-BinaryOperator 0x13b128690 <col:22, col:29> 'int' contains-errors '!='
|   | |   |-DeclRefExpr 0x13b1285f8 <col:22> 'void *' lvalue ParmVar 0x13b1280d8 'ptr' 'void *'
|   | |   `-RecoveryExpr 0x13b128670 <col:29> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x13b8098f0 <col:35, line:13:5>
|   |   |-CallExpr 0x13b809748 <line:10:9, col:18> 'int'
|   |   | |-ImplicitCastExpr 0x13b809730 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x13b8096b8 <col:9> 'int ()' Function 0x13b809600 'zfree' 'int ()'
|   |   | `-ImplicitCastExpr 0x13b809770 <col:15> 'void *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x13b8096d8 <col:15> 'void *' lvalue ParmVar 0x13b1280d8 'ptr' 'void *'
|   |   |-IfStmt 0x13b809888 <line:11:9, col:31>
|   |   | |-RecoveryExpr 0x13b809788 <col:13> '<dependent type>' contains-errors lvalue
|   |   | `-BinaryOperator 0x13b809868 <col:21, col:31> '<dependent type>' contains-errors '='
|   |   |   |-UnaryOperator 0x13b809850 <col:21, col:22> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x13b809838 <col:22> '<dependent type>' contains-errors <LValueToRValue>
|   |   |   |   `-RecoveryExpr 0x13b8097a8 <col:22> '<dependent type>' contains-errors lvalue
|   |   |   `-IntegerLiteral 0x13b8097f8 <col:31> 'int' 0
|   |   `-ReturnStmt 0x13b8098e0 <line:12:9, col:16>
|   |     `-RecoveryExpr 0x13b8098c0 <col:16> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x13b809b50 <line:15:5, line:16:46>
|   | |-BinaryOperator 0x13b8099b0 <line:15:9, col:16> 'int' contains-errors '=='
|   | | |-DeclRefExpr 0x13b809938 <col:9> 'void *' lvalue ParmVar 0x13b1280d8 'ptr' 'void *'
|   | | `-RecoveryExpr 0x13b809990 <col:16> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x13b809b40 <line:16:9, col:46>
|   |   `-CallExpr 0x13b809b10 <col:16, col:46> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x13b809ab0 <col:16> 'int ()' Function 0x13b8099f8 'ztrymalloc_usable' 'int ()'
|   |     |-RecoveryExpr 0x13b809ad0 <col:34> '<dependent type>' contains-errors lvalue
|   |     `-RecoveryExpr 0x13b809af0 <col:40> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x13b809d50 <line:32:5, col:26> 'void *' contains-errors '='
|   | |-DeclRefExpr 0x13b809b70 <col:5> 'void *' lvalue Var 0x13b1283f0 'realptr' 'void *'
|   | `-BinaryOperator 0x13b809d30 <col:15, col:26> '<dependent type>' contains-errors '-'
|   |   |-CStyleCastExpr 0x13b809ce8 <col:15, col:22> 'char *' <BitCast>
|   |   | `-ImplicitCastExpr 0x13b809cd0 <col:22> 'void *' <LValueToRValue> part_of_explicit_cast
|   |   |   `-DeclRefExpr 0x13b809b90 <col:22> 'void *' lvalue ParmVar 0x13b1280d8 'ptr' 'void *'
|   |   `-RecoveryExpr 0x13b809d10 <col:26> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x13b80a5a8 <line:34:5, col:46> 'void *' contains-errors '='
|   | |-DeclRefExpr 0x13b809d88 <col:5> 'void *' lvalue Var 0x13b128518 'newptr' 'void *'
|   | `-CallExpr 0x13b80a578 <col:14, col:46> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x13b80a420 <col:14> 'void *(void *, unsigned long)' Function 0x13b80a210 'realloc' 'void *(void *, unsigned long)'
|   |   |-DeclRefExpr 0x13b80a440 <col:22> 'void *' lvalue Var 0x13b1283f0 'realptr' 'void *'
|   |   `-BinaryOperator 0x13b80a540 <col:30, col:35> '<dependent type>' contains-errors '+'
|   |     |-RecoveryExpr 0x13b80a460 <col:30> '<dependent type>' contains-errors lvalue
|   |     `-RecoveryExpr 0x13b80a520 <col:35> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x13c8089e8 <line:35:5, line:38:5>
|   | |-BinaryOperator 0x13c808840 <line:35:9, col:19> 'int' contains-errors '=='
|   | | |-DeclRefExpr 0x13b80a5c8 <col:9> 'void *' lvalue Var 0x13b128518 'newptr' 'void *'
|   | | `-RecoveryExpr 0x13c808820 <col:19> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x13c8089c8 <col:25, line:38:5>
|   |   |-IfStmt 0x13c808960 <line:36:9, col:31>
|   |   | |-RecoveryExpr 0x13c808860 <col:13> '<dependent type>' contains-errors lvalue
|   |   | `-BinaryOperator 0x13c808940 <col:21, col:31> '<dependent type>' contains-errors '='
|   |   |   |-UnaryOperator 0x13c808928 <col:21, col:22> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x13c808910 <col:22> '<dependent type>' contains-errors <LValueToRValue>
|   |   |   |   `-RecoveryExpr 0x13c808880 <col:22> '<dependent type>' contains-errors lvalue
|   |   |   `-IntegerLiteral 0x13c8088d0 <col:31> 'int' 0
|   |   `-ReturnStmt 0x13c8089b8 <line:37:9, col:16>
|   |     `-RecoveryExpr 0x13c808998 <col:16> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x13c808c60 <line:42:5, col:35> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x13c808c20 <col:5> 'int ()' Function 0x13c808b68 'update_zmalloc_stat_alloc' 'int ()'
|   | `-RecoveryExpr 0x13c808c40 <col:31> '<dependent type>' contains-errors lvalue
|   `-IfStmt 0x13c808d88 <line:43:5, col:27>
|     |-RecoveryExpr 0x13c808c88 <col:9> '<dependent type>' contains-errors lvalue
|     `-BinaryOperator 0x13c808d68 <col:17, col:27> '<dependent type>' contains-errors '='
|       |-UnaryOperator 0x13c808d50 <col:17, col:18> '<dependent type>' contains-errors prefix '*' cannot overflow
|       | `-ImplicitCastExpr 0x13c808d38 <col:18> '<dependent type>' contains-errors <LValueToRValue>
|       |   `-RecoveryExpr 0x13c808ca8 <col:18> '<dependent type>' contains-errors lvalue
|       `-RecoveryExpr 0x13c808cf8 <col:27> '<dependent type>' contains-errors lvalue
`-FunctionDecl 0x13b80a210 <line:34:14> col:14 implicit used realloc 'void *(void *, unsigned long)' extern
  |-ParmVarDecl 0x13b80a310 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x13b80a378 <<invalid sloc>> <invalid sloc> 'unsigned long'
  |-BuiltinAttr 0x13b80a2b8 <<invalid sloc>> Implicit 872
  `-AllocSizeAttr 0x13b80a3f0 <col:14> Implicit 2
