TranslationUnitDecl 0x12c855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12c8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12c855bd0 '__int128'
|-TypedefDecl 0x12c856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12c855bf0 'unsigned __int128'
|-TypedefDecl 0x12d00be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12d00bc00 'struct __NSConstantString_tag'
|   `-Record 0x12c856580 '__NSConstantString_tag'
|-TypedefDecl 0x12d00be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12c855d90 '__SVInt8_t'
|-TypedefDecl 0x12d00bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12c855db0 '__SVInt16_t'
|-TypedefDecl 0x12d00bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12c855dd0 '__SVInt32_t'
|-TypedefDecl 0x12d00bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12c855df0 '__SVInt64_t'
|-TypedefDecl 0x12d00c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12c855e10 '__SVUint8_t'
|-TypedefDecl 0x12d00c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12c855e30 '__SVUint16_t'
|-TypedefDecl 0x12d00c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12c855e50 '__SVUint32_t'
|-TypedefDecl 0x12d00c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12c855e70 '__SVUint64_t'
|-TypedefDecl 0x12d00c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12c855e90 '__SVFloat16_t'
|-TypedefDecl 0x12d00c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12c855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12d00c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12c855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12d00c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12c855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12d00c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12c855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12d00c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12c855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12d00c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12c855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12d00c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12c855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12d00c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12c855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12d00c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12c855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12d00c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12c855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12d00c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12c855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12d00c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12c856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12d00c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12c856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12d00c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12c856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12d00c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12c856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12d00c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12c856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12d00c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12c8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12d00c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12c8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12d00c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12c8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12d00c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12c856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12d00ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12c856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12d00cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12c856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12d00cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12c856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12d00cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12c856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12d00d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12c8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12d00d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12c8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12d00d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12c8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12d00d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12c856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12d00d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12c856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12d00d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12c856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12d00d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12c856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12d00d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12c856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12d00d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12c8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12d00d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12c8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12d00d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12c8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12d00d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12c856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12d00d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12c856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12d00d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12c856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12d00d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12c856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12d00da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12c856390 '__SVBool_t'
|-TypedefDecl 0x12d00da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12c8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12d00dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12c8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12d00db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12c8563f0 '__SVCount_t'
|-TypedefDecl 0x12d00dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12d00dbb0 'char *'
|   `-BuiltinType 0x12c8556b0 'char'
|-TypedefDecl 0x12d00dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12d00dbb0 'char *'
|   `-BuiltinType 0x12c8556b0 'char'
|-FunctionDecl 0x12d00dfe8 <dataset_diviso_filec/func10727_vuln.c:1:1, line:71:1> line:1:6 do_mount 'long (const char *, const char *, const char *, unsigned long, void *)'
| |-ParmVarDecl 0x12d00dcd8 <col:15, col:27> col:27 used dev_name 'const char *'
| |-ParmVarDecl 0x12d00dd58 <col:37, col:49> col:49 used dir_name 'const char *'
| |-ParmVarDecl 0x12d00ddd8 <line:2:3, col:15> col:15 used type_page 'const char *'
| |-ParmVarDecl 0x12d00de58 <col:26, col:40> col:40 used flags 'unsigned long'
| |-ParmVarDecl 0x12d00ded8 <col:47, col:53> col:53 used data_page 'void *'
| `-CompoundStmt 0x12d030470 <line:3:1, line:71:1>
|   |-DeclStmt 0x12d02aab8 <line:4:2, col:18>
|   | |-RecordDecl 0x12d00e100 <col:2, col:9> col:9 struct path
|   | `-VarDecl 0x12d00e1f8 <col:2, col:14> col:14 invalid path 'struct path'
|   |-DeclStmt 0x12d02ab70 <line:5:2, col:16>
|   | `-VarDecl 0x12d02aae8 <col:2, col:15> col:6 used retval 'int' cinit
|   |   `-IntegerLiteral 0x12d02ab50 <col:15> 'int' 0
|   |-DeclStmt 0x12d02ac28 <line:6:2, col:19>
|   | `-VarDecl 0x12d02aba0 <col:2, col:18> col:6 used mnt_flags 'int' cinit
|   |   `-IntegerLiteral 0x12d02ac08 <col:18> 'int' 0
|   |-IfStmt 0x12d02ae00 <line:9:2, line:10:13>
|   | |-RecoveryExpr 0x12d02acc8 <line:9:6, col:30> '_Bool' contains-errors
|   | `-CompoundAssignOperator 0x12d02add0 <line:10:3, col:13> 'unsigned long' contains-errors '&=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |   |-DeclRefExpr 0x12d02ace8 <col:3> 'unsigned long' lvalue ParmVar 0x12d00de58 'flags' 'unsigned long'
|   |   `-UnaryOperator 0x12d02adb8 <col:12, col:13> '<dependent type>' contains-errors prefix '~' cannot overflow
|   |     `-ImplicitCastExpr 0x12d02ada0 <col:13> '<dependent type>' contains-errors <LValueToRValue>
|   |       `-RecoveryExpr 0x12d02ad80 <col:13> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x12d02b5b8 <line:14:2, line:15:11>
|   | |-BinaryOperator 0x12d02b4f0 <line:14:6, col:63> 'int' contains-errors '||'
|   | | |-BinaryOperator 0x12d02b430 <col:6, col:21> 'int' '||'
|   | | | |-UnaryOperator 0x12d02b3b8 <col:6, col:7> 'int' prefix '!' cannot overflow
|   | | | | `-ImplicitCastExpr 0x12d02b3a0 <col:7> 'const char *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x12d02ae20 <col:7> 'const char *' lvalue ParmVar 0x12d00dd58 'dir_name' 'const char *'
|   | | | `-UnaryOperator 0x12d02b418 <col:19, col:21> 'int' prefix '!' cannot overflow
|   | | |   `-ImplicitCastExpr 0x12d02b400 <col:20, col:21> 'char' <LValueToRValue>
|   | | |     `-UnaryOperator 0x12d02b3e8 <col:20, col:21> 'const char' lvalue prefix '*' cannot overflow
|   | | |       `-ImplicitCastExpr 0x12d02b3d0 <col:21> 'const char *' <LValueToRValue>
|   | | |         `-DeclRefExpr 0x12d02ae70 <col:21> 'const char *' lvalue ParmVar 0x12d00dd58 'dir_name' 'const char *'
|   | | `-UnaryOperator 0x12d02b4d8 <col:33, col:63> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | |   `-CallExpr 0x12d02b4a0 <col:34, col:63> '<dependent type>' contains-errors
|   | |     |-DeclRefExpr 0x12d02b1d8 <col:34> 'void *(const void *, int, unsigned long)' Function 0x12d02af88 'memchr' 'void *(const void *, int, unsigned long)'
|   | |     |-DeclRefExpr 0x12d02b1f8 <col:41> 'const char *' lvalue ParmVar 0x12d00dd58 'dir_name' 'const char *'
|   | |     |-IntegerLiteral 0x12d02b218 <col:51> 'int' 0
|   | |     `-RecoveryExpr 0x12d02b450 <col:54> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x12d02b5a8 <line:15:3, col:11>
|   |   `-UnaryOperator 0x12d02b590 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |     `-ImplicitCastExpr 0x12d02b578 <col:11> '<dependent type>' contains-errors <LValueToRValue>
|   |       `-RecoveryExpr 0x12d02b558 <col:11> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x12d02e5f8 <line:21:2, col:51> 'int' contains-errors '='
|   | |-DeclRefExpr 0x12d02b720 <col:2> 'int' lvalue Var 0x12d02aae8 'retval' 'int'
|   | `-CallExpr 0x12d02e5c0 <col:11, col:51> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x12d02e4b8 <col:11> 'int ()' Function 0x12d02e400 'kern_path' 'int ()'
|   |   |-DeclRefExpr 0x12d02e4d8 <col:21> 'const char *' lvalue ParmVar 0x12d00dd58 'dir_name' 'const char *'
|   |   |-RecoveryExpr 0x12d02e5a0 <col:31> '<dependent type>' contains-errors lvalue
|   |   `-UnaryOperator 0x12d02e530 <col:46, col:47> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     `-RecoveryExpr 0x12d02e510 <col:47> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x12d02e6b0 <line:22:2, line:23:10>
|   | |-ImplicitCastExpr 0x12d02e638 <line:22:6> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x12d02e618 <col:6> 'int' lvalue Var 0x12d02aae8 'retval' 'int'
|   | `-ReturnStmt 0x12d02e6a0 <line:23:3, col:10>
|   |   `-ImplicitCastExpr 0x12d02e688 <col:10> 'long' <IntegralCast>
|   |     `-ImplicitCastExpr 0x12d02e670 <col:10> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x12d02e650 <col:10> 'int' lvalue Var 0x12d02aae8 'retval' 'int'
|   |-BinaryOperator 0x12d02e8f0 <line:25:2, line:26:35> 'int' contains-errors '='
|   | |-DeclRefExpr 0x12d02e6d0 <line:25:2> 'int' lvalue Var 0x12d02aae8 'retval' 'int'
|   | `-CallExpr 0x12d02e8a8 <col:11, line:26:35> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x12d02e7d0 <line:25:11> 'int ()' Function 0x12d02e718 'security_sb_mount' 'int ()'
|   |   |-DeclRefExpr 0x12d02e7f0 <col:29> 'const char *' lvalue ParmVar 0x12d00dcd8 'dev_name' 'const char *'
|   |   |-UnaryOperator 0x12d02e830 <col:39, col:40> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   | `-RecoveryExpr 0x12d02e810 <col:40> '<dependent type>' contains-errors lvalue
|   |   |-DeclRefExpr 0x12d02e848 <line:26:8> 'const char *' lvalue ParmVar 0x12d00ddd8 'type_page' 'const char *'
|   |   |-DeclRefExpr 0x12d02e868 <col:19> 'unsigned long' lvalue ParmVar 0x12d00de58 'flags' 'unsigned long'
|   |   `-DeclRefExpr 0x12d02e888 <col:26> 'void *' lvalue ParmVar 0x12d00ded8 'data_page' 'void *'
|   |-IfStmt 0x12d02ebf8 <line:27:2, line:28:13>
|   | |-BinaryOperator 0x12d02eae0 <line:27:6, col:28> 'int' '&&'
|   | | |-UnaryOperator 0x12d02e948 <col:6, col:7> 'int' prefix '!' cannot overflow
|   | | | `-ImplicitCastExpr 0x12d02e930 <col:7> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x12d02e910 <col:7> 'int' lvalue Var 0x12d02aae8 'retval' 'int'
|   | | `-UnaryOperator 0x12d02eac8 <col:17, col:28> 'int' prefix '!' cannot overflow
|   | |   `-CallExpr 0x12d02eaa8 <col:18, col:28> 'int'
|   | |     `-ImplicitCastExpr 0x12d02ea90 <col:18> 'int (*)()' <FunctionToPointerDecay>
|   | |       `-DeclRefExpr 0x12d02ea40 <col:18> 'int ()' Function 0x12d02e988 'may_mount' 'int ()'
|   | `-BinaryOperator 0x12d02ebd8 <line:28:3, col:13> 'int' contains-errors '='
|   |   |-DeclRefExpr 0x12d02eb00 <col:3> 'int' lvalue Var 0x12d02aae8 'retval' 'int'
|   |   `-UnaryOperator 0x12d02ebc0 <col:12, col:13> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |     `-ImplicitCastExpr 0x12d02eba8 <col:13> '<dependent type>' contains-errors <LValueToRValue>
|   |       `-RecoveryExpr 0x12d02eb88 <col:13> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x12d02ecb8 <line:29:2, line:30:8>
|   | |-ImplicitCastExpr 0x12d02ec38 <line:29:6> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x12d02ec18 <col:6> 'int' lvalue Var 0x12d02aae8 'retval' 'int'
|   | `-GotoStmt 0x12d02eca0 <line:30:3, col:8> 'dput_out' 0x12d02ec50
|   |-IfStmt 0x12d02ee08 <line:33:2, line:34:16>
|   | |-RecoveryExpr 0x12d02ed30 <line:33:6, col:26> '_Bool' contains-errors
|   | `-CompoundAssignOperator 0x12d02edd8 <line:34:3, col:16> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |   |-DeclRefExpr 0x12d02ed50 <col:3> 'int' lvalue Var 0x12d02aba0 'mnt_flags' 'int'
|   |   `-RecoveryExpr 0x12d02edb8 <col:16> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x12d02ef78 <line:37:2, line:38:16>
|   | |-BinaryOperator 0x12d02eea0 <line:37:6, col:14> '<dependent type>' contains-errors '&'
|   | | |-DeclRefExpr 0x12d02ee28 <col:6> 'unsigned long' lvalue ParmVar 0x12d00de58 'flags' 'unsigned long'
|   | | `-RecoveryExpr 0x12d02ee80 <col:14> '<dependent type>' contains-errors lvalue
|   | `-CompoundAssignOperator 0x12d02ef48 <line:38:3, col:16> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |   |-DeclRefExpr 0x12d02eec0 <col:3> 'int' lvalue Var 0x12d02aba0 'mnt_flags' 'int'
|   |   `-RecoveryExpr 0x12d02ef28 <col:16> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x12d02f0e8 <line:39:2, line:40:16>
|   | |-BinaryOperator 0x12d02f010 <line:39:6, col:14> '<dependent type>' contains-errors '&'
|   | | |-DeclRefExpr 0x12d02ef98 <col:6> 'unsigned long' lvalue ParmVar 0x12d00de58 'flags' 'unsigned long'
|   | | `-RecoveryExpr 0x12d02eff0 <col:14> '<dependent type>' contains-errors lvalue
|   | `-CompoundAssignOperator 0x12d02f0b8 <line:40:3, col:16> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |   |-DeclRefExpr 0x12d02f030 <col:3> 'int' lvalue Var 0x12d02aba0 'mnt_flags' 'int'
|   |   `-RecoveryExpr 0x12d02f098 <col:16> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x12d030260 <line:56:2, line:67:30> has_else
|   | |-RecoveryExpr 0x12d02f380 <line:56:6, col:14> '_Bool' contains-errors
|   | |-NullStmt 0x12d030258 <line:57:3>
|   | `-IfStmt 0x12d030228 <line:59:7, line:67:30> has_else
|   |   |-RecoveryExpr 0x12d02f990 <line:59:11, col:19> '_Bool' contains-errors
|   |   |-NullStmt 0x12d030220 <line:60:3>
|   |   `-IfStmt 0x12d0301f0 <line:61:7, line:67:30> has_else
|   |     |-RecoveryExpr 0x12d02fb68 <line:61:11, col:69> '_Bool' contains-errors
|   |     |-BinaryOperator 0x12d02fd30 <line:62:3, col:39> 'int' contains-errors '='
|   |     | |-DeclRefExpr 0x12d02fb88 <col:3> 'int' lvalue Var 0x12d02aae8 'retval' 'int'
|   |     | `-CallExpr 0x12d02fd00 <col:12, col:39> '<dependent type>' contains-errors
|   |     |   |-DeclRefExpr 0x12d02fc88 <col:12> 'int ()' Function 0x12d02fbd0 'do_change_type' 'int ()'
|   |     |   |-UnaryOperator 0x12d02fcc8 <col:27, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     |   | `-RecoveryExpr 0x12d02fca8 <col:28> '<dependent type>' contains-errors lvalue
|   |     |   `-DeclRefExpr 0x12d02fce0 <col:34> 'unsigned long' lvalue ParmVar 0x12d00de58 'flags' 'unsigned long'
|   |     `-IfStmt 0x12d0301c0 <line:63:7, line:67:30> has_else
|   |       |-RecoveryExpr 0x12d02fd70 <line:63:11, col:19> '_Bool' contains-errors
|   |       |-BinaryOperator 0x12d02ff38 <line:64:3, col:41> 'int' contains-errors '='
|   |       | |-DeclRefExpr 0x12d02fd90 <col:3> 'int' lvalue Var 0x12d02aae8 'retval' 'int'
|   |       | `-CallExpr 0x12d02ff08 <col:12, col:41> '<dependent type>' contains-errors
|   |       |   |-DeclRefExpr 0x12d02fe90 <col:12> 'int ()' Function 0x12d02fdd8 'do_move_mount' 'int ()'
|   |       |   |-UnaryOperator 0x12d02fed0 <col:26, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |       |   | `-RecoveryExpr 0x12d02feb0 <col:27> '<dependent type>' contains-errors lvalue
|   |       |   `-DeclRefExpr 0x12d02fee8 <col:33> 'const char *' lvalue ParmVar 0x12d00dcd8 'dev_name' 'const char *'
|   |       `-BinaryOperator 0x12d0301a0 <line:66:3, line:67:30> 'int' contains-errors '='
|   |         |-DeclRefExpr 0x12d02ff58 <line:66:3> 'int' lvalue Var 0x12d02aae8 'retval' 'int'
|   |         `-CallExpr 0x12d030150 <col:12, line:67:30> '<dependent type>' contains-errors
|   |           |-DeclRefExpr 0x12d030058 <line:66:12> 'int ()' Function 0x12d02ffa0 'do_new_mount' 'int ()'
|   |           |-UnaryOperator 0x12d030098 <col:25, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |           | `-RecoveryExpr 0x12d030078 <col:26> '<dependent type>' contains-errors lvalue
|   |           |-DeclRefExpr 0x12d0300b0 <col:32> 'const char *' lvalue ParmVar 0x12d00ddd8 'type_page' 'const char *'
|   |           |-DeclRefExpr 0x12d0300d0 <col:43> 'unsigned long' lvalue ParmVar 0x12d00de58 'flags' 'unsigned long'
|   |           |-DeclRefExpr 0x12d0300f0 <col:50> 'int' lvalue Var 0x12d02aba0 'mnt_flags' 'int'
|   |           |-DeclRefExpr 0x12d030110 <line:67:11> 'const char *' lvalue ParmVar 0x12d00dcd8 'dev_name' 'const char *'
|   |           `-DeclRefExpr 0x12d030130 <col:21> 'void *' lvalue ParmVar 0x12d00ded8 'data_page' 'void *'
|   |-LabelStmt 0x12d0303f0 <line:68:1, line:69:16> 'dput_out'
|   | `-CallExpr 0x12d0303c8 <col:2, col:16> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x12d030370 <col:2> 'int ()' Function 0x12d0302b8 'path_put' 'int ()'
|   |   `-UnaryOperator 0x12d0303b0 <col:11, col:12> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     `-RecoveryExpr 0x12d030390 <col:12> '<dependent type>' contains-errors lvalue
|   `-ReturnStmt 0x12d030460 <line:70:2, col:9>
|     `-ImplicitCastExpr 0x12d030448 <col:9> 'long' <IntegralCast>
|       `-ImplicitCastExpr 0x12d030430 <col:9> 'int' <LValueToRValue>
|         `-DeclRefExpr 0x12d030410 <col:9> 'int' lvalue Var 0x12d02aae8 'retval' 'int'
`-FunctionDecl 0x12d02af88 <line:14:34> col:34 implicit used memchr 'void *(const void *, int, unsigned long)' extern
  |-ParmVarDecl 0x12d02b088 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x12d02b0f0 <<invalid sloc>> <invalid sloc> 'int'
  |-ParmVarDecl 0x12d02b158 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x12d02b030 <<invalid sloc>> Implicit 892
