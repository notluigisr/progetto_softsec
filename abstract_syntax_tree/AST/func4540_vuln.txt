TranslationUnitDecl 0x135855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1358564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x135855bd0 '__int128'
|-TypedefDecl 0x135856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x135855bf0 'unsigned __int128'
|-TypedefDecl 0x135926a30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x135926800 'struct __NSConstantString_tag'
|   `-Record 0x135856580 '__NSConstantString_tag'
|-TypedefDecl 0x135926a98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x135855d90 '__SVInt8_t'
|-TypedefDecl 0x135926b00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x135855db0 '__SVInt16_t'
|-TypedefDecl 0x135926b68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x135855dd0 '__SVInt32_t'
|-TypedefDecl 0x135926bd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x135855df0 '__SVInt64_t'
|-TypedefDecl 0x135926c38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x135855e10 '__SVUint8_t'
|-TypedefDecl 0x135926ca0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x135855e30 '__SVUint16_t'
|-TypedefDecl 0x135926d08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x135855e50 '__SVUint32_t'
|-TypedefDecl 0x135926d70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x135855e70 '__SVUint64_t'
|-TypedefDecl 0x135926dd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x135855e90 '__SVFloat16_t'
|-TypedefDecl 0x135926e40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x135855eb0 '__SVFloat32_t'
|-TypedefDecl 0x135926ea8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x135855ed0 '__SVFloat64_t'
|-TypedefDecl 0x135926f10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x135855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x135926f78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x135855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x135926fe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x135855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x135927048 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x135855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1359270b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x135855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x135927118 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x135855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x135927180 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x135855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1359271e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x135855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x135927250 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x135855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1359272b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x135856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x135927320 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x135856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x135927388 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x135856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1359273f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x135856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x135927458 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x135856090 '__clang_svint8x3_t'
|-TypedefDecl 0x1359274c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1358560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x135927528 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1358560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x135927590 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1358560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x1359275f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x135856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x135927660 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x135856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x1359276c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x135856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x135927730 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x135856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x135927798 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x135856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x135928000 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1358561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x135928068 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1358561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1359280d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1358561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x135928138 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x135856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1359281a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x135856230 '__clang_svint16x4_t'
|-TypedefDecl 0x135928208 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x135856250 '__clang_svint32x4_t'
|-TypedefDecl 0x135928270 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x135856270 '__clang_svint64x4_t'
|-TypedefDecl 0x1359282d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x135856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x135928340 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1358562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1359283a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1358562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x135928410 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1358562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x135928478 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x135856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1359284e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x135856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x135928548 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x135856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1359285b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x135856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x135928618 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x135856390 '__SVBool_t'
|-TypedefDecl 0x135928680 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1358563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1359286e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1358563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x135928750 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1358563f0 '__SVCount_t'
|-TypedefDecl 0x1359287f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1359287b0 'char *'
|   `-BuiltinType 0x1358556b0 'char'
|-TypedefDecl 0x135928868 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1359287b0 'char *'
|   `-BuiltinType 0x1358556b0 'char'
|-FunctionDecl 0x135928cf0 <dataset_diviso_filec/func4540_vuln.c:1:1, line:77:1> line:1:13 invalid uv__process_child_init 'void (const int *, int, int (*)[2], int)' static
| |-ParmVarDecl 0x1359288f0 <col:36, col:64> col:64 invalid options 'const int *'
| |-ParmVarDecl 0x135928970 <line:2:36, col:40> col:40 used stdio_count 'int'
| |-ParmVarDecl 0x135928b28 <line:3:36, col:50> col:42 used pipes 'int (*)[2]'
| |-ParmVarDecl 0x135928ba8 <line:4:36, col:40> col:40 used error_fd 'int'
| `-CompoundStmt 0x1359468e0 <col:50, line:77:1>
|   |-DeclStmt 0x135928e38 <line:5:3, col:15>
|   | `-VarDecl 0x135928dd0 <col:3, col:7> col:7 used close_fd 'int'
|   |-DeclStmt 0x135928ed0 <line:6:3, col:13>
|   | `-VarDecl 0x135928e68 <col:3, col:7> col:7 used use_fd 'int'
|   |-DeclStmt 0x135928f68 <line:7:3, col:9>
|   | `-VarDecl 0x135928f00 <col:3, col:7> col:7 used fd 'int'
|   |-IfStmt 0x135942248 <line:9:3, line:10:12>
|   | |-BinaryOperator 0x135942040 <line:9:7, col:24> '<dependent type>' contains-errors '&'
|   | | |-CXXDependentScopeMemberExpr 0x135928fa0 <col:7, col:16> '<dependent type>' contains-errors lvalue ->flags
|   | | | `-RecoveryExpr 0x135928f80 <col:7> '<dependent type>' contains-errors lvalue
|   | | `-RecoveryExpr 0x135942020 <col:24> '<dependent type>' contains-errors lvalue
|   | `-CallExpr 0x135942228 <line:10:5, col:12> 'int'
|   |   `-ImplicitCastExpr 0x135942210 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x1359421c0 <col:5> 'int ()' Function 0x135942108 'setsid' 'int ()'
|   |-ForStmt 0x135945200 <line:12:3, line:42:3>
|   | |-BinaryOperator 0x1359422a8 <line:12:8, col:13> 'int' '='
|   | | |-DeclRefExpr 0x135942268 <col:8> 'int' lvalue Var 0x135928f00 'fd' 'int'
|   | | `-IntegerLiteral 0x135942288 <col:13> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x135942338 <col:16, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x135942308 <col:16> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1359422c8 <col:16> 'int' lvalue Var 0x135928f00 'fd' 'int'
|   | | `-ImplicitCastExpr 0x135942320 <col:21> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1359422e8 <col:21> 'int' lvalue ParmVar 0x135928970 'stdio_count' 'int'
|   | |-UnaryOperator 0x135942378 <col:34, col:36> 'int' postfix '++'
|   | | `-DeclRefExpr 0x135942358 <col:34> 'int' lvalue Var 0x135928f00 'fd' 'int'
|   | `-CompoundStmt 0x135945190 <col:40, line:42:3>
|   |   |-BinaryOperator 0x1359424e0 <line:13:5, col:27> 'int' '='
|   |   | |-DeclRefExpr 0x135942390 <col:5> 'int' lvalue Var 0x135928dd0 'close_fd' 'int'
|   |   | `-ImplicitCastExpr 0x1359424c8 <col:16, col:27> 'int' <LValueToRValue>
|   |   |   `-ArraySubscriptExpr 0x1359424a8 <col:16, col:27> 'int' lvalue
|   |   |     |-ImplicitCastExpr 0x135942490 <col:16, col:24> 'int *' <ArrayToPointerDecay>
|   |   |     | `-ArraySubscriptExpr 0x135942420 <col:16, col:24> 'int[2]' lvalue
|   |   |     |   |-ImplicitCastExpr 0x1359423f0 <col:16> 'int (*)[2]' <LValueToRValue>
|   |   |     |   | `-DeclRefExpr 0x1359423b0 <col:16> 'int (*)[2]' lvalue ParmVar 0x135928b28 'pipes' 'int (*)[2]'
|   |   |     |   `-ImplicitCastExpr 0x135942408 <col:22> 'int' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x1359423d0 <col:22> 'int' lvalue Var 0x135928f00 'fd' 'int'
|   |   |     `-IntegerLiteral 0x135942440 <col:26> 'int' 0
|   |   |-BinaryOperator 0x135942620 <line:14:5, col:25> 'int' '='
|   |   | |-DeclRefExpr 0x135942500 <col:5> 'int' lvalue Var 0x135928e68 'use_fd' 'int'
|   |   | `-ImplicitCastExpr 0x135942608 <col:14, col:25> 'int' <LValueToRValue>
|   |   |   `-ArraySubscriptExpr 0x1359425e8 <col:14, col:25> 'int' lvalue
|   |   |     |-ImplicitCastExpr 0x1359425d0 <col:14, col:22> 'int *' <ArrayToPointerDecay>
|   |   |     | `-ArraySubscriptExpr 0x135942590 <col:14, col:22> 'int[2]' lvalue
|   |   |     |   |-ImplicitCastExpr 0x135942560 <col:14> 'int (*)[2]' <LValueToRValue>
|   |   |     |   | `-DeclRefExpr 0x135942520 <col:14> 'int (*)[2]' lvalue ParmVar 0x135928b28 'pipes' 'int (*)[2]'
|   |   |     |   `-ImplicitCastExpr 0x135942578 <col:20> 'int' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x135942540 <col:20> 'int' lvalue Var 0x135928f00 'fd' 'int'
|   |   |     `-IntegerLiteral 0x1359425b0 <col:24> 'int' 1
|   |   |-IfStmt 0x1359448f8 <line:16:5, line:30:5>
|   |   | |-BinaryOperator 0x135942698 <line:16:9, col:18> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x135942680 <col:9> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x135942640 <col:9> 'int' lvalue Var 0x135928e68 'use_fd' 'int'
|   |   | | `-IntegerLiteral 0x135942660 <col:18> 'int' 0
|   |   | `-CompoundStmt 0x1359448e0 <col:21, line:30:5>
|   |   |   `-IfStmt 0x1359448b0 <line:17:7, line:29:7> has_else
|   |   |     |-BinaryOperator 0x135942710 <line:17:11, col:17> 'int' '>='
|   |   |     | |-ImplicitCastExpr 0x1359426f8 <col:11> 'int' <LValueToRValue>
|   |   |     | | `-DeclRefExpr 0x1359426b8 <col:11> 'int' lvalue Var 0x135928f00 'fd' 'int'
|   |   |     | `-IntegerLiteral 0x1359426d8 <col:17> 'int' 3
|   |   |     |-ContinueStmt 0x135942730 <line:18:9>
|   |   |     `-CompoundStmt 0x135944888 <line:19:12, line:29:7>
|   |   |       |-BinaryOperator 0x135942af8 <line:21:9, col:57> 'int' contains-errors '='
|   |   |       | |-DeclRefExpr 0x135942738 <col:9> 'int' lvalue Var 0x135928e68 'use_fd' 'int'
|   |   |       | `-CallExpr 0x135942ac8 <col:18, col:57> '<dependent type>' contains-errors
|   |   |       |   |-DeclRefExpr 0x135942838 <col:18> 'int ()' Function 0x135942780 'open' 'int ()'
|   |   |       |   |-StringLiteral 0x1359428a0 <col:23> 'char[4]' lvalue "STR"
|   |   |       |   `-ConditionalOperator 0x135942a98 <col:30, col:51> '<dependent type>' contains-errors
|   |   |       |     |-BinaryOperator 0x135942a38 <col:30, col:36> 'int' '=='
|   |   |       |     | |-ImplicitCastExpr 0x135942a20 <col:30> 'int' <LValueToRValue>
|   |   |       |     | | `-DeclRefExpr 0x1359428c0 <col:30> 'int' lvalue Var 0x135928f00 'fd' 'int'
|   |   |       |     | `-IntegerLiteral 0x1359428e0 <col:36> 'int' 0
|   |   |       |     |-RecoveryExpr 0x135942a58 <col:40> '<dependent type>' contains-errors lvalue
|   |   |       |     `-RecoveryExpr 0x135942a78 <col:51> '<dependent type>' contains-errors lvalue
|   |   |       |-BinaryOperator 0x135942b70 <line:22:9, col:20> 'int' '='
|   |   |       | |-DeclRefExpr 0x135942b18 <col:9> 'int' lvalue Var 0x135928dd0 'close_fd' 'int'
|   |   |       | `-ImplicitCastExpr 0x135942b58 <col:20> 'int' <LValueToRValue>
|   |   |       |   `-DeclRefExpr 0x135942b38 <col:20> 'int' lvalue Var 0x135928e68 'use_fd' 'int'
|   |   |       `-IfStmt 0x135944868 <line:24:9, line:28:9>
|   |   |         |-BinaryOperator 0x135942c00 <line:24:13, col:24> 'int' '=='
|   |   |         | |-ImplicitCastExpr 0x135942be8 <col:13> 'int' <LValueToRValue>
|   |   |         | | `-DeclRefExpr 0x135942b90 <col:13> 'int' lvalue Var 0x135928e68 'use_fd' 'int'
|   |   |         | `-UnaryOperator 0x135942bd0 <col:23, col:24> 'int' prefix '-'
|   |   |         |   `-IntegerLiteral 0x135942bb0 <col:24> 'int' 1
|   |   |         `-CompoundStmt 0x135944840 <col:27, line:28:9>
|   |   |           |-CallExpr 0x135942e08 <line:25:9, col:39> '<dependent type>' contains-errors
|   |   |           | |-DeclRefExpr 0x135942d00 <col:9> 'int ()' Function 0x135942c48 'uv__write_int' 'int ()'
|   |   |           | |-DeclRefExpr 0x135942d20 <col:23> 'int' lvalue ParmVar 0x135928ba8 'error_fd' 'int'
|   |   |           | `-UnaryOperator 0x135942df0 <col:33, col:34> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |   |           |   `-ImplicitCastExpr 0x135942dd8 <col:34> '<dependent type>' contains-errors <LValueToRValue>
|   |   |           |     `-RecoveryExpr 0x135942db8 <col:34> '<dependent type>' contains-errors lvalue
|   |   |           |-CallExpr 0x135942f70 <line:26:11, col:23> 'int'
|   |   |           | |-ImplicitCastExpr 0x135942f58 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |   |           | | `-DeclRefExpr 0x135942f18 <col:11> 'int ()' Function 0x135942e60 'perror' 'int ()'
|   |   |           | `-ImplicitCastExpr 0x135942f98 <col:18> 'char *' <ArrayToPointerDecay>
|   |   |           |   `-StringLiteral 0x135942f38 <col:18> 'char[4]' lvalue "STR"
|   |   |           `-CallExpr 0x135944818 <line:27:11, col:20> 'void'
|   |   |             |-ImplicitCastExpr 0x135944800 <col:11> 'void (*)(int) __attribute__((noreturn))' <FunctionToPointerDecay>
|   |   |             | `-DeclRefExpr 0x135944790 <col:11> 'void (int) __attribute__((noreturn))' Function 0x135944620 '_exit' 'void (int) __attribute__((noreturn))'
|   |   |             `-IntegerLiteral 0x1359447b0 <col:17> 'int' 127
|   |   |-IfStmt 0x135944d00 <line:32:5, line:35:22> has_else
|   |   | |-BinaryOperator 0x135944988 <line:32:9, col:15> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x135944958 <col:9> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x135944918 <col:9> 'int' lvalue Var 0x135928f00 'fd' 'int'
|   |   | | `-ImplicitCastExpr 0x135944970 <col:15> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x135944938 <col:15> 'int' lvalue Var 0x135928e68 'use_fd' 'int'
|   |   | |-CallExpr 0x135944b00 <line:33:7, col:28> 'int'
|   |   | | |-ImplicitCastExpr 0x135944ae8 <col:7> 'int (*)()' <FunctionToPointerDecay>
|   |   | | | `-DeclRefExpr 0x135944a88 <col:7> 'int ()' Function 0x1359449d0 'uv__cloexec' 'int ()'
|   |   | | |-ImplicitCastExpr 0x135944b30 <col:19> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x135944aa8 <col:19> 'int' lvalue Var 0x135928e68 'use_fd' 'int'
|   |   | | `-IntegerLiteral 0x135944ac8 <col:27> 'int' 0
|   |   | `-CallExpr 0x135944ca0 <line:35:7, col:22> 'int'
|   |   |   |-ImplicitCastExpr 0x135944c88 <col:7> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x135944c28 <col:7> 'int ()' Function 0x135944b70 'dup2' 'int ()'
|   |   |   |-ImplicitCastExpr 0x135944cd0 <col:12> 'int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x135944c48 <col:12> 'int' lvalue Var 0x135928e68 'use_fd' 'int'
|   |   |   `-ImplicitCastExpr 0x135944ce8 <col:20> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x135944c68 <col:20> 'int' lvalue Var 0x135928f00 'fd' 'int'
|   |   |-IfStmt 0x135944f48 <line:37:5, line:38:25>
|   |   | |-BinaryOperator 0x135944d88 <line:37:9, col:15> 'int' '<='
|   |   | | |-ImplicitCastExpr 0x135944d70 <col:9> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x135944d30 <col:9> 'int' lvalue Var 0x135928f00 'fd' 'int'
|   |   | | `-IntegerLiteral 0x135944d50 <col:15> 'int' 2
|   |   | `-CallExpr 0x135944f00 <line:38:7, col:25> 'int'
|   |   |   |-ImplicitCastExpr 0x135944ee8 <col:7> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x135944e88 <col:7> 'int ()' Function 0x135944dd0 'uv__nonblock' 'int ()'
|   |   |   |-ImplicitCastExpr 0x135944f30 <col:20> 'int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x135944ea8 <col:20> 'int' lvalue Var 0x135928f00 'fd' 'int'
|   |   |   `-IntegerLiteral 0x135944ec8 <col:24> 'int' 0
|   |   `-IfStmt 0x135945170 <line:40:5, line:41:25>
|   |     |-BinaryOperator 0x135944fd8 <line:40:9, col:22> 'int' '!='
|   |     | |-ImplicitCastExpr 0x135944fc0 <col:9> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x135944f68 <col:9> 'int' lvalue Var 0x135928dd0 'close_fd' 'int'
|   |     | `-UnaryOperator 0x135944fa8 <col:21, col:22> 'int' prefix '-'
|   |     |   `-IntegerLiteral 0x135944f88 <col:22> 'int' 1
|   |     `-CallExpr 0x135945130 <line:41:7, col:25> 'int'
|   |       |-ImplicitCastExpr 0x135945118 <col:7> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x1359450d8 <col:7> 'int ()' Function 0x135945020 'uv__close' 'int ()'
|   |       `-ImplicitCastExpr 0x135945158 <col:17> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x1359450f8 <col:17> 'int' lvalue Var 0x135928dd0 'close_fd' 'int'
|   |-ForStmt 0x135945780 <line:44:3, line:49:3>
|   | |-BinaryOperator 0x135945278 <line:44:8, col:13> 'int' '='
|   | | |-DeclRefExpr 0x135945238 <col:8> 'int' lvalue Var 0x135928f00 'fd' 'int'
|   | | `-IntegerLiteral 0x135945258 <col:13> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x135945308 <col:16, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x1359452d8 <col:16> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x135945298 <col:16> 'int' lvalue Var 0x135928f00 'fd' 'int'
|   | | `-ImplicitCastExpr 0x1359452f0 <col:21> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1359452b8 <col:21> 'int' lvalue ParmVar 0x135928970 'stdio_count' 'int'
|   | |-UnaryOperator 0x135945348 <col:34, col:36> 'int' postfix '++'
|   | | `-DeclRefExpr 0x135945328 <col:34> 'int' lvalue Var 0x135928f00 'fd' 'int'
|   | `-CompoundStmt 0x135945760 <col:40, line:49:3>
|   |   |-BinaryOperator 0x135945480 <line:45:5, col:25> 'int' '='
|   |   | |-DeclRefExpr 0x135945360 <col:5> 'int' lvalue Var 0x135928e68 'use_fd' 'int'
|   |   | `-ImplicitCastExpr 0x135945468 <col:14, col:25> 'int' <LValueToRValue>
|   |   |   `-ArraySubscriptExpr 0x135945448 <col:14, col:25> 'int' lvalue
|   |   |     |-ImplicitCastExpr 0x135945430 <col:14, col:22> 'int *' <ArrayToPointerDecay>
|   |   |     | `-ArraySubscriptExpr 0x1359453f0 <col:14, col:22> 'int[2]' lvalue
|   |   |     |   |-ImplicitCastExpr 0x1359453c0 <col:14> 'int (*)[2]' <LValueToRValue>
|   |   |     |   | `-DeclRefExpr 0x135945380 <col:14> 'int (*)[2]' lvalue ParmVar 0x135928b28 'pipes' 'int (*)[2]'
|   |   |     |   `-ImplicitCastExpr 0x1359453d8 <col:20> 'int' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x1359453a0 <col:20> 'int' lvalue Var 0x135928f00 'fd' 'int'
|   |   |     `-IntegerLiteral 0x135945410 <col:24> 'int' 1
|   |   `-IfStmt 0x135945740 <line:47:5, line:48:19>
|   |     |-BinaryOperator 0x1359455a8 <line:47:9, col:30> 'int' '&&'
|   |     | |-BinaryOperator 0x1359454f8 <col:9, col:19> 'int' '>='
|   |     | | |-ImplicitCastExpr 0x1359454e0 <col:9> 'int' <LValueToRValue>
|   |     | | | `-DeclRefExpr 0x1359454a0 <col:9> 'int' lvalue Var 0x135928e68 'use_fd' 'int'
|   |     | | `-IntegerLiteral 0x1359454c0 <col:19> 'int' 0
|   |     | `-BinaryOperator 0x135945588 <col:24, col:30> 'int' '!='
|   |     |   |-ImplicitCastExpr 0x135945558 <col:24> 'int' <LValueToRValue>
|   |     |   | `-DeclRefExpr 0x135945518 <col:24> 'int' lvalue Var 0x135928f00 'fd' 'int'
|   |     |   `-ImplicitCastExpr 0x135945570 <col:30> 'int' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x135945538 <col:30> 'int' lvalue Var 0x135928e68 'use_fd' 'int'
|   |     `-CallExpr 0x135945700 <line:48:7, col:19> 'int'
|   |       |-ImplicitCastExpr 0x1359456e8 <col:7> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x1359456a8 <col:7> 'int ()' Function 0x1359455f0 'close' 'int ()'
|   |       `-ImplicitCastExpr 0x135945728 <col:13> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x1359456c8 <col:13> 'int' lvalue Var 0x135928e68 'use_fd' 'int'
|   |-IfStmt 0x135945ce0 <line:51:3, line:55:3>
|   | |-BinaryOperator 0x135945a48 <line:51:7, col:49> 'int' contains-errors '&&'
|   | | |-BinaryOperator 0x135945a28 <col:7, col:23> 'int' contains-errors '!='
|   | | | |-CXXDependentScopeMemberExpr 0x1359457d8 <col:7, col:16> '<dependent type>' contains-errors lvalue ->cwd
|   | | | | `-RecoveryExpr 0x1359457b8 <col:7> '<dependent type>' contains-errors lvalue
|   | | | `-RecoveryExpr 0x135945a08 <col:23> '<dependent type>' contains-errors lvalue
|   | | `-CallExpr 0x1359459c0 <col:31, col:49> '<dependent type>' contains-errors
|   | |   |-DeclRefExpr 0x135945938 <col:31> 'int ()' Function 0x135945880 'chdir' 'int ()'
|   | |   `-CXXDependentScopeMemberExpr 0x135945978 <col:37, col:46> '<dependent type>' contains-errors lvalue ->cwd
|   | |     `-RecoveryExpr 0x135945958 <col:37> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x135945cb8 <col:52, line:55:3>
|   |   |-CallExpr 0x135945b70 <line:52:5, col:35> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x135945a68 <col:5> 'int ()' Function 0x135942c48 'uv__write_int' 'int ()'
|   |   | |-DeclRefExpr 0x135945a88 <col:19> 'int' lvalue ParmVar 0x135928ba8 'error_fd' 'int'
|   |   | `-UnaryOperator 0x135945b58 <col:29, col:30> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |   |   `-ImplicitCastExpr 0x135945b40 <col:30> '<dependent type>' contains-errors <LValueToRValue>
|   |   |     `-RecoveryExpr 0x135945b20 <col:30> '<dependent type>' contains-errors lvalue
|   |   |-CallExpr 0x135945bf8 <line:53:5, col:17> 'int'
|   |   | |-ImplicitCastExpr 0x135945be0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x135945ba0 <col:5> 'int ()' Function 0x135942e60 'perror' 'int ()'
|   |   | `-ImplicitCastExpr 0x135945c20 <col:12> 'char *' <ArrayToPointerDecay>
|   |   |   `-StringLiteral 0x135945bc0 <col:12> 'char[4]' lvalue "STR"
|   |   `-CallExpr 0x135945c90 <line:54:5, col:14> 'void'
|   |     |-ImplicitCastExpr 0x135945c78 <col:5> 'void (*)(int) __attribute__((noreturn))' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x135945c38 <col:5> 'void (int) __attribute__((noreturn))' Function 0x135944620 '_exit' 'void (int) __attribute__((noreturn))'
|   |     `-IntegerLiteral 0x135945c58 <col:11> 'int' 127
|   |-IfStmt 0x135946090 <line:57:3, line:61:3>
|   | |-RecoveryExpr 0x135945ef8 <line:57:7, col:66> '_Bool' contains-errors
|   | `-CompoundStmt 0x135946070 <col:69, line:61:3>
|   |   |-CallExpr 0x135945fb0 <line:59:5, col:17> 'int'
|   |   | |-ImplicitCastExpr 0x135945f98 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x135945f58 <col:5> 'int ()' Function 0x135942e60 'perror' 'int ()'
|   |   | `-ImplicitCastExpr 0x135945fd8 <col:12> 'char *' <ArrayToPointerDecay>
|   |   |   `-StringLiteral 0x135945f78 <col:12> 'char[4]' lvalue "STR"
|   |   `-CallExpr 0x135946048 <line:60:5, col:14> 'void'
|   |     |-ImplicitCastExpr 0x135946030 <col:5> 'void (*)(int) __attribute__((noreturn))' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x135945ff0 <col:5> 'void (int) __attribute__((noreturn))' Function 0x135944620 '_exit' 'void (int) __attribute__((noreturn))'
|   |     `-IntegerLiteral 0x135946010 <col:11> 'int' 127
|   |-IfStmt 0x135946448 <line:63:3, line:67:3>
|   | |-RecoveryExpr 0x1359462b0 <line:63:7, col:66> '_Bool' contains-errors
|   | `-CompoundStmt 0x135946428 <col:69, line:67:3>
|   |   |-CallExpr 0x135946368 <line:65:5, col:17> 'int'
|   |   | |-ImplicitCastExpr 0x135946350 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x135946310 <col:5> 'int ()' Function 0x135942e60 'perror' 'int ()'
|   |   | `-ImplicitCastExpr 0x135946390 <col:12> 'char *' <ArrayToPointerDecay>
|   |   |   `-StringLiteral 0x135946330 <col:12> 'char[4]' lvalue "STR"
|   |   `-CallExpr 0x135946400 <line:66:5, col:14> 'void'
|   |     |-ImplicitCastExpr 0x1359463e8 <col:5> 'void (*)(int) __attribute__((noreturn))' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1359463a8 <col:5> 'void (int) __attribute__((noreturn))' Function 0x135944620 '_exit' 'void (int) __attribute__((noreturn))'
|   |     `-IntegerLiteral 0x1359463c8 <col:11> 'int' 127
|   |-IfStmt 0x135946568 <line:69:3, line:71:3>
|   | |-RecoveryExpr 0x1359464d0 <line:69:7, col:23> '_Bool' contains-errors
|   | `-CompoundStmt 0x135946558 <col:29, line:71:3>
|   |-CallExpr 0x135946758 <line:73:3, col:38> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x135946668 <col:3> 'int ()' Function 0x1359465b0 'execvp' 'int ()'
|   | |-CXXDependentScopeMemberExpr 0x1359466a8 <col:10, col:19> '<dependent type>' contains-errors lvalue ->file
|   | | `-RecoveryExpr 0x135946688 <col:10> '<dependent type>' contains-errors lvalue
|   | `-CXXDependentScopeMemberExpr 0x135946710 <col:25, col:34> '<dependent type>' contains-errors lvalue ->args
|   |   `-RecoveryExpr 0x1359466f0 <col:25> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x135946820 <line:75:3, col:15> 'int'
|   | |-ImplicitCastExpr 0x135946808 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1359467c8 <col:3> 'int ()' Function 0x135942e60 'perror' 'int ()'
|   | `-ImplicitCastExpr 0x135946848 <col:10> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1359467e8 <col:10> 'char[4]' lvalue "STR"
|   `-CallExpr 0x1359468b8 <line:76:3, col:12> 'void'
|     |-ImplicitCastExpr 0x1359468a0 <col:3> 'void (*)(int) __attribute__((noreturn))' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x135946860 <col:3> 'void (int) __attribute__((noreturn))' Function 0x135944620 '_exit' 'void (int) __attribute__((noreturn))'
|     `-IntegerLiteral 0x135946880 <col:9> 'int' 127
`-FunctionDecl 0x135944620 <line:27:11> col:11 implicit used _exit 'void (int) __attribute__((noreturn))' extern
  |-ParmVarDecl 0x135944720 <<invalid sloc>> <invalid sloc> 'int'
  `-BuiltinAttr 0x1359446c8 <<invalid sloc>> Implicit 959
