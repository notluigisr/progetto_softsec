TranslationUnitDecl 0x14e855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14e8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14e855bd0 '__int128'
|-TypedefDecl 0x14e856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14e855bf0 'unsigned __int128'
|-TypedefDecl 0x14e926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14e926000 'struct __NSConstantString_tag'
|   `-Record 0x14e856580 '__NSConstantString_tag'
|-TypedefDecl 0x14e926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14e855d90 '__SVInt8_t'
|-TypedefDecl 0x14e926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14e855db0 '__SVInt16_t'
|-TypedefDecl 0x14e926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14e855dd0 '__SVInt32_t'
|-TypedefDecl 0x14e9263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14e855df0 '__SVInt64_t'
|-TypedefDecl 0x14e926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14e855e10 '__SVUint8_t'
|-TypedefDecl 0x14e9264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14e855e30 '__SVUint16_t'
|-TypedefDecl 0x14e926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14e855e50 '__SVUint32_t'
|-TypedefDecl 0x14e926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14e855e70 '__SVUint64_t'
|-TypedefDecl 0x14e9265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14e855e90 '__SVFloat16_t'
|-TypedefDecl 0x14e926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14e855eb0 '__SVFloat32_t'
|-TypedefDecl 0x14e9266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14e855ed0 '__SVFloat64_t'
|-TypedefDecl 0x14e926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14e855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14e926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14e855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14e9267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14e855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14e926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14e855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14e9268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14e855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14e926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14e855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14e926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14e855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14e9269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14e855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14e926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14e855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14e926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14e856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14e926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14e856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14e926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14e856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14e926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14e856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14e926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14e856090 '__clang_svint8x3_t'
|-TypedefDecl 0x14e926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14e8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14e926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14e8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14e926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14e8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14e926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14e856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14e926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14e856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14e926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14e856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14e926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14e856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14e926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14e856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14e927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14e8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14e927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14e8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14e9278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14e8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14e927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14e856210 '__clang_svint8x4_t'
|-TypedefDecl 0x14e9279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14e856230 '__clang_svint16x4_t'
|-TypedefDecl 0x14e927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14e856250 '__clang_svint32x4_t'
|-TypedefDecl 0x14e927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14e856270 '__clang_svint64x4_t'
|-TypedefDecl 0x14e927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14e856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14e927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14e8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14e927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14e8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14e927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14e8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14e927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14e856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14e927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14e856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14e927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14e856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14e927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14e856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14e927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14e856390 '__SVBool_t'
|-TypedefDecl 0x14e927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14e8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14e927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14e8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14e927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14e8563f0 '__SVCount_t'
|-TypedefDecl 0x14e927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14e927fb0 'char *'
|   `-BuiltinType 0x14e8556b0 'char'
|-TypedefDecl 0x14e928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14e927fb0 'char *'
|   `-BuiltinType 0x14e8556b0 'char'
`-FunctionDecl 0x14e928500 <dataset_diviso_filec/func1117_nonvuln.c:1:1, line:19:1> line:1:20 ConvertDisplayP3ToXYZ 'void (const double, const double, const double, double *, double *, double *)' static inline
  |-ParmVarDecl 0x14e9280d8 <col:42, col:55> col:55 used red 'const double'
  |-ParmVarDecl 0x14e928158 <col:59, col:72> col:72 used green 'const double'
  |-ParmVarDecl 0x14e9281d8 <line:2:3, col:16> col:16 used blue 'const double'
  |-ParmVarDecl 0x14e928288 <col:21, col:29> col:29 used X 'double *'
  |-ParmVarDecl 0x14e928308 <col:31, col:39> col:39 used Y 'double *'
  |-ParmVarDecl 0x14e928388 <col:41, col:49> col:49 used Z 'double *'
  `-CompoundStmt 0x14e942718 <line:3:1, line:19:1>
    |-DeclStmt 0x14e9287c0 <line:4:3, line:7:6>
    | |-VarDecl 0x14e928638 <line:4:3, line:5:5> col:5 used b 'double'
    | |-VarDecl 0x14e9286b8 <line:4:3, line:6:5> col:5 used g 'double'
    | `-VarDecl 0x14e928738 <line:4:3, line:7:5> col:5 used r 'double'
    |-BinaryOperator 0x14e941d20 <line:13:3, col:38> 'double' contains-errors '='
    | |-DeclRefExpr 0x14e941a60 <col:3> 'double' lvalue Var 0x14e928738 'r' 'double'
    | `-BinaryOperator 0x14e941d00 <col:5, col:38> '<dependent type>' contains-errors '*'
    |   |-RecoveryExpr 0x14e941c88 <col:5> '<dependent type>' contains-errors lvalue
    |   `-CallExpr 0x14e941cc0 <col:18, col:38> 'int'
    |     |-ImplicitCastExpr 0x14e941ca8 <col:18> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x14e941b78 <col:18> 'int ()' Function 0x14e941ac0 'DecodePixelGamma' 'int ()'
    |     `-ImplicitCastExpr 0x14e941ce8 <col:35> 'double' <LValueToRValue>
    |       `-DeclRefExpr 0x14e941b98 <col:35> 'const double' lvalue ParmVar 0x14e9280d8 'red' 'const double'
    |-BinaryOperator 0x14e941ee8 <line:14:3, col:40> 'double' contains-errors '='
    | |-DeclRefExpr 0x14e941d40 <col:3> 'double' lvalue Var 0x14e9286b8 'g' 'double'
    | `-BinaryOperator 0x14e941ec8 <col:5, col:40> '<dependent type>' contains-errors '*'
    |   |-RecoveryExpr 0x14e941e50 <col:5> '<dependent type>' contains-errors lvalue
    |   `-CallExpr 0x14e941e88 <col:18, col:40> 'int'
    |     |-ImplicitCastExpr 0x14e941e70 <col:18> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x14e941d78 <col:18> 'int ()' Function 0x14e941ac0 'DecodePixelGamma' 'int ()'
    |     `-ImplicitCastExpr 0x14e941eb0 <col:35> 'double' <LValueToRValue>
    |       `-DeclRefExpr 0x14e941d98 <col:35> 'const double' lvalue ParmVar 0x14e928158 'green' 'const double'
    |-BinaryOperator 0x14e9420b0 <line:15:3, col:39> 'double' contains-errors '='
    | |-DeclRefExpr 0x14e941f08 <col:3> 'double' lvalue Var 0x14e928638 'b' 'double'
    | `-BinaryOperator 0x14e942090 <col:5, col:39> '<dependent type>' contains-errors '*'
    |   |-RecoveryExpr 0x14e942018 <col:5> '<dependent type>' contains-errors lvalue
    |   `-CallExpr 0x14e942050 <col:18, col:39> 'int'
    |     |-ImplicitCastExpr 0x14e942038 <col:18> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x14e941f40 <col:18> 'int ()' Function 0x14e941ac0 'DecodePixelGamma' 'int ()'
    |     `-ImplicitCastExpr 0x14e942078 <col:35> 'double' <LValueToRValue>
    |       `-DeclRefExpr 0x14e941f60 <col:35> 'const double' lvalue ParmVar 0x14e9281d8 'blue' 'const double'
    |-BinaryOperator 0x14e9422c8 <line:16:3, col:68> 'double' '='
    | |-UnaryOperator 0x14e942108 <col:3, col:4> 'double' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x14e9420f0 <col:4> 'double *' <LValueToRValue>
    | |   `-DeclRefExpr 0x14e9420d0 <col:4> 'double *' lvalue ParmVar 0x14e928288 'X' 'double *'
    | `-BinaryOperator 0x14e9422a8 <col:6, col:68> 'double' '+'
    |   |-BinaryOperator 0x14e942210 <col:6, col:47> 'double' '+'
    |   | |-BinaryOperator 0x14e942178 <col:6, col:25> 'double' '*'
    |   | | |-FloatingLiteral 0x14e942120 <col:6> 'double' 4.865709e-01
    |   | | `-ImplicitCastExpr 0x14e942160 <col:25> 'double' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x14e942140 <col:25> 'double' lvalue Var 0x14e928738 'r' 'double'
    |   | `-BinaryOperator 0x14e9421f0 <col:27, col:47> 'double' '*'
    |   |   |-FloatingLiteral 0x14e942198 <col:27> 'double' 2.656677e-01
    |   |   `-ImplicitCastExpr 0x14e9421d8 <col:47> 'double' <LValueToRValue>
    |   |     `-DeclRefExpr 0x14e9421b8 <col:47> 'double' lvalue Var 0x14e9286b8 'g' 'double'
    |   `-BinaryOperator 0x14e942288 <col:49, col:68> 'double' '*'
    |     |-FloatingLiteral 0x14e942230 <col:49> 'double' 1.982173e-01
    |     `-ImplicitCastExpr 0x14e942270 <col:68> 'double' <LValueToRValue>
    |       `-DeclRefExpr 0x14e942250 <col:68> 'double' lvalue Var 0x14e928638 'b' 'double'
    |-BinaryOperator 0x14e9424e0 <line:17:3, col:68> 'double' '='
    | |-UnaryOperator 0x14e942320 <col:3, col:4> 'double' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x14e942308 <col:4> 'double *' <LValueToRValue>
    | |   `-DeclRefExpr 0x14e9422e8 <col:4> 'double *' lvalue ParmVar 0x14e928308 'Y' 'double *'
    | `-BinaryOperator 0x14e9424c0 <col:6, col:68> 'double' '+'
    |   |-BinaryOperator 0x14e942428 <col:6, col:47> 'double' '+'
    |   | |-BinaryOperator 0x14e942390 <col:6, col:25> 'double' '*'
    |   | | |-FloatingLiteral 0x14e942338 <col:6> 'double' 2.289746e-01
    |   | | `-ImplicitCastExpr 0x14e942378 <col:25> 'double' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x14e942358 <col:25> 'double' lvalue Var 0x14e928738 'r' 'double'
    |   | `-BinaryOperator 0x14e942408 <col:27, col:47> 'double' '*'
    |   |   |-FloatingLiteral 0x14e9423b0 <col:27> 'double' 6.917385e-01
    |   |   `-ImplicitCastExpr 0x14e9423f0 <col:47> 'double' <LValueToRValue>
    |   |     `-DeclRefExpr 0x14e9423d0 <col:47> 'double' lvalue Var 0x14e9286b8 'g' 'double'
    |   `-BinaryOperator 0x14e9424a0 <col:49, col:68> 'double' '*'
    |     |-FloatingLiteral 0x14e942448 <col:49> 'double' 7.928691e-02
    |     `-ImplicitCastExpr 0x14e942488 <col:68> 'double' <LValueToRValue>
    |       `-DeclRefExpr 0x14e942468 <col:68> 'double' lvalue Var 0x14e928638 'b' 'double'
    `-BinaryOperator 0x14e9426f8 <line:18:3, col:68> 'double' '='
      |-UnaryOperator 0x14e942538 <col:3, col:4> 'double' lvalue prefix '*' cannot overflow
      | `-ImplicitCastExpr 0x14e942520 <col:4> 'double *' <LValueToRValue>
      |   `-DeclRefExpr 0x14e942500 <col:4> 'double *' lvalue ParmVar 0x14e928388 'Z' 'double *'
      `-BinaryOperator 0x14e9426d8 <col:6, col:68> 'double' '+'
        |-BinaryOperator 0x14e942640 <col:6, col:47> 'double' '+'
        | |-BinaryOperator 0x14e9425a8 <col:6, col:25> 'double' '*'
        | | |-FloatingLiteral 0x14e942550 <col:6> 'double' 0.000000e+00
        | | `-ImplicitCastExpr 0x14e942590 <col:25> 'double' <LValueToRValue>
        | |   `-DeclRefExpr 0x14e942570 <col:25> 'double' lvalue Var 0x14e928738 'r' 'double'
        | `-BinaryOperator 0x14e942620 <col:27, col:47> 'double' '*'
        |   |-FloatingLiteral 0x14e9425c8 <col:27> 'double' 4.511338e-02
        |   `-ImplicitCastExpr 0x14e942608 <col:47> 'double' <LValueToRValue>
        |     `-DeclRefExpr 0x14e9425e8 <col:47> 'double' lvalue Var 0x14e9286b8 'g' 'double'
        `-BinaryOperator 0x14e9426b8 <col:49, col:68> 'double' '*'
          |-FloatingLiteral 0x14e942660 <col:49> 'double' 1.043944e+00
          `-ImplicitCastExpr 0x14e9426a0 <col:68> 'double' <LValueToRValue>
            `-DeclRefExpr 0x14e942680 <col:68> 'double' lvalue Var 0x14e928638 'b' 'double'
