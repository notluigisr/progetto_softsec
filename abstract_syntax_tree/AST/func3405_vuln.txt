TranslationUnitDecl 0x130055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1300564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x130055bd0 '__int128'
|-TypedefDecl 0x130056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x130055bf0 'unsigned __int128'
|-TypedefDecl 0x130126a30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x130126800 'struct __NSConstantString_tag'
|   `-Record 0x130056580 '__NSConstantString_tag'
|-TypedefDecl 0x130126a98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x130055d90 '__SVInt8_t'
|-TypedefDecl 0x130126b00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x130055db0 '__SVInt16_t'
|-TypedefDecl 0x130126b68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x130055dd0 '__SVInt32_t'
|-TypedefDecl 0x130126bd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x130055df0 '__SVInt64_t'
|-TypedefDecl 0x130126c38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x130055e10 '__SVUint8_t'
|-TypedefDecl 0x130126ca0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x130055e30 '__SVUint16_t'
|-TypedefDecl 0x130126d08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x130055e50 '__SVUint32_t'
|-TypedefDecl 0x130126d70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x130055e70 '__SVUint64_t'
|-TypedefDecl 0x130126dd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x130055e90 '__SVFloat16_t'
|-TypedefDecl 0x130126e40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x130055eb0 '__SVFloat32_t'
|-TypedefDecl 0x130126ea8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x130055ed0 '__SVFloat64_t'
|-TypedefDecl 0x130126f10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x130055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x130126f78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x130055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x130126fe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x130055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x130127048 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x130055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1301270b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x130055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x130127118 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x130055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x130127180 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x130055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1301271e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x130055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x130127250 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x130055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1301272b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x130056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x130127320 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x130056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x130127388 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x130056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1301273f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x130056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x130127458 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x130056090 '__clang_svint8x3_t'
|-TypedefDecl 0x1301274c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1300560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x130127528 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1300560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x130127590 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1300560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x1301275f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x130056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x130127660 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x130056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x1301276c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x130056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x130127730 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x130056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x130127798 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x130056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x130128000 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1300561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x130128068 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1300561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1301280d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1300561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x130128138 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x130056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1301281a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x130056230 '__clang_svint16x4_t'
|-TypedefDecl 0x130128208 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x130056250 '__clang_svint32x4_t'
|-TypedefDecl 0x130128270 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x130056270 '__clang_svint64x4_t'
|-TypedefDecl 0x1301282d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x130056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x130128340 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1300562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1301283a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1300562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x130128410 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1300562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x130128478 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x130056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1301284e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x130056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x130128548 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x130056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1301285b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x130056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x130128618 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x130056390 '__SVBool_t'
|-TypedefDecl 0x130128680 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1300563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1301286e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1300563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x130128750 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1300563f0 '__SVCount_t'
|-TypedefDecl 0x1301287f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1301287b0 'char *'
|   `-BuiltinType 0x1300556b0 'char'
|-TypedefDecl 0x130128868 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1301287b0 'char *'
|   `-BuiltinType 0x1300556b0 'char'
|-FunctionDecl 0x130128a88 <dataset_diviso_filec/func3405_vuln.c:1:1, line:51:1> line:1:12 invalid get_cox 'int (int *, int *)' static
| |-ParmVarDecl 0x130128928 <col:20, col:44> col:44 invalid s 'int *'
| |-ParmVarDecl 0x1301289a8 <col:47, col:68> col:68 referenced invalid c 'int *'
| `-CompoundStmt 0x1301447b8 <line:2:1, line:51:1>
|   |-IfStmt 0x130128df0 <line:5:5, line:6:16>
|   | |-BinaryOperator 0x130128d88 <line:5:9, col:45> 'int' contains-errors '<'
|   | | |-CallExpr 0x130128d40 <col:9, col:41> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x130128ca0 <col:9> 'int ()' Function 0x130128be8 'bytestream2_get_bytes_left' 'int ()'
|   | | | `-UnaryOperator 0x130128d28 <col:36, col:40> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | |   `-CXXDependentScopeMemberExpr 0x130128ce0 <col:37, col:40> '<dependent type>' contains-errors lvalue ->g
|   | | |     `-RecoveryExpr 0x130128cc0 <col:37> '<dependent type>' contains-errors lvalue
|   | | `-IntegerLiteral 0x130128d68 <col:45> 'int' 5
|   | `-ReturnStmt 0x130128de0 <line:6:9, col:16>
|   |   `-RecoveryExpr 0x130128dc0 <col:16> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x1301420c8 <line:9:5, col:52> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x130128e58 <col:5, col:8> '<dependent type>' contains-errors lvalue ->nreslevels
|   | | `-RecoveryExpr 0x130128e30 <col:5> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x130128e10 <col:5> 'int *' lvalue ParmVar 0x1301289a8 'c' 'int *'
|   | `-BinaryOperator 0x1301420a8 <col:21, col:52> '<dependent type>' contains-errors '+'
|   |   |-CallExpr 0x130142060 <col:21, col:48> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x130128f80 <col:21> 'int ()' Function 0x130128ec8 'bytestream2_get_byteu' 'int ()'
|   |   | `-UnaryOperator 0x130142048 <col:43, col:47> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   |   `-CXXDependentScopeMemberExpr 0x130142000 <col:44, col:47> '<dependent type>' contains-errors lvalue ->g
|   |   |     `-RecoveryExpr 0x130128fa0 <col:44> '<dependent type>' contains-errors lvalue
|   |   `-IntegerLiteral 0x130142088 <col:52> 'int' 1
|   |-IfStmt 0x130142520 <line:10:5, line:13:5>
|   | |-BinaryOperator 0x1301421a8 <line:10:9, col:26> 'int' contains-errors '>='
|   | | |-CXXDependentScopeMemberExpr 0x130142108 <col:9, col:12> '<dependent type>' contains-errors lvalue ->nreslevels
|   | | | `-RecoveryExpr 0x1301420e8 <col:9> '<dependent type>' contains-errors lvalue
|   | | `-RecoveryExpr 0x130142188 <col:26> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x130142500 <col:50, line:13:5>
|   |   |-CallExpr 0x130142478 <line:11:9, col:60> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x1301422a8 <col:9> 'int ()' Function 0x1301421f0 'av_log' 'int ()'
|   |   | |-CXXDependentScopeMemberExpr 0x1301422e8 <col:16, col:19> '<dependent type>' contains-errors lvalue ->avctx
|   |   | | `-RecoveryExpr 0x1301422c8 <col:16> '<dependent type>' contains-errors lvalue
|   |   | |-RecoveryExpr 0x130142458 <col:26> '<dependent type>' contains-errors lvalue
|   |   | |-StringLiteral 0x130142390 <col:40> 'char[4]' lvalue "STR"
|   |   | `-CXXDependentScopeMemberExpr 0x1301423d0 <col:47, col:50> '<dependent type>' contains-errors lvalue ->nreslevels
|   |   |   `-RecoveryExpr 0x1301423b0 <col:47> '<dependent type>' contains-errors lvalue
|   |   `-ReturnStmt 0x1301424f0 <line:12:9, col:16>
|   |     `-RecoveryExpr 0x1301424d0 <col:16> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x1301428a0 <line:16:5, line:19:51> has_else
|   | |-BinaryOperator 0x130142610 <line:16:9, col:28> 'int' contains-errors '<'
|   | | |-CXXDependentScopeMemberExpr 0x130142560 <col:9, col:12> '<dependent type>' contains-errors lvalue ->nreslevels
|   | | | `-RecoveryExpr 0x130142540 <col:9> '<dependent type>' contains-errors lvalue
|   | | `-CXXDependentScopeMemberExpr 0x1301425c8 <col:25, col:28> '<dependent type>' contains-errors lvalue ->reduction_factor
|   | |   `-RecoveryExpr 0x1301425a8 <col:25> '<dependent type>' contains-errors lvalue
|   | |-BinaryOperator 0x1301426e0 <line:17:9, col:32> '<dependent type>' contains-errors '='
|   | | |-CXXDependentScopeMemberExpr 0x130142678 <col:9, col:12> '<dependent type>' contains-errors lvalue ->nreslevels2decode
|   | | | `-RecoveryExpr 0x130142650 <col:9> '<dependent type>' contains-errors lvalue
|   | | |   `-DeclRefExpr 0x130142630 <col:9> 'int *' lvalue ParmVar 0x1301289a8 'c' 'int *'
|   | | `-IntegerLiteral 0x1301426c0 <col:32> 'int' 1
|   | `-BinaryOperator 0x130142880 <line:19:9, col:51> '<dependent type>' contains-errors '='
|   |   |-CXXDependentScopeMemberExpr 0x130142748 <col:9, col:12> '<dependent type>' contains-errors lvalue ->nreslevels2decode
|   |   | `-RecoveryExpr 0x130142720 <col:9> '<dependent type>' contains-errors lvalue
|   |   |   `-DeclRefExpr 0x130142700 <col:9> 'int *' lvalue ParmVar 0x1301289a8 'c' 'int *'
|   |   `-BinaryOperator 0x130142860 <col:32, col:51> '<dependent type>' contains-errors '-'
|   |     |-CXXDependentScopeMemberExpr 0x1301427b0 <col:32, col:35> '<dependent type>' contains-errors lvalue ->nreslevels
|   |     | `-RecoveryExpr 0x130142790 <col:32> '<dependent type>' contains-errors lvalue
|   |     `-CXXDependentScopeMemberExpr 0x130142818 <col:48, col:51> '<dependent type>' contains-errors lvalue ->reduction_factor
|   |       `-RecoveryExpr 0x1301427f8 <col:48> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x130142ac8 <line:21:5, col:65> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x130142918 <col:5, col:8> '<dependent type>' contains-errors lvalue ->log2_cblk_width
|   | | `-RecoveryExpr 0x1301428f0 <col:5> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x1301428d0 <col:5> 'int *' lvalue ParmVar 0x1301289a8 'c' 'int *'
|   | `-BinaryOperator 0x130142aa8 <col:27, col:65> '<dependent type>' contains-errors '+'
|   |   |-ParenExpr 0x130142a68 <col:27, col:61> '<dependent type>' contains-errors
|   |   | `-BinaryOperator 0x130142a48 <col:28, col:59> '<dependent type>' contains-errors '&'
|   |   |   |-CallExpr 0x130142a00 <col:28, col:55> '<dependent type>' contains-errors
|   |   |   | |-DeclRefExpr 0x130142960 <col:28> 'int ()' Function 0x130128ec8 'bytestream2_get_byteu' 'int ()'
|   |   |   | `-UnaryOperator 0x1301429e8 <col:50, col:54> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   |   |   `-CXXDependentScopeMemberExpr 0x1301429a0 <col:51, col:54> '<dependent type>' contains-errors lvalue ->g
|   |   |   |     `-RecoveryExpr 0x130142980 <col:51> '<dependent type>' contains-errors lvalue
|   |   |   `-IntegerLiteral 0x130142a28 <col:59> 'int' 15
|   |   `-IntegerLiteral 0x130142a88 <col:65> 'int' 2
|   |-BinaryOperator 0x130142ce0 <line:22:5, col:65> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x130142b30 <col:5, col:8> '<dependent type>' contains-errors lvalue ->log2_cblk_height
|   | | `-RecoveryExpr 0x130142b08 <col:5> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x130142ae8 <col:5> 'int *' lvalue ParmVar 0x1301289a8 'c' 'int *'
|   | `-BinaryOperator 0x130142cc0 <col:27, col:65> '<dependent type>' contains-errors '+'
|   |   |-ParenExpr 0x130142c80 <col:27, col:61> '<dependent type>' contains-errors
|   |   | `-BinaryOperator 0x130142c60 <col:28, col:59> '<dependent type>' contains-errors '&'
|   |   |   |-CallExpr 0x130142c18 <col:28, col:55> '<dependent type>' contains-errors
|   |   |   | |-DeclRefExpr 0x130142b78 <col:28> 'int ()' Function 0x130128ec8 'bytestream2_get_byteu' 'int ()'
|   |   |   | `-UnaryOperator 0x130142c00 <col:50, col:54> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   |   |   `-CXXDependentScopeMemberExpr 0x130142bb8 <col:51, col:54> '<dependent type>' contains-errors lvalue ->g
|   |   |   |     `-RecoveryExpr 0x130142b98 <col:51> '<dependent type>' contains-errors lvalue
|   |   |   `-IntegerLiteral 0x130142c40 <col:59> 'int' 15
|   |   `-IntegerLiteral 0x130142ca0 <col:65> 'int' 2
|   |-IfStmt 0x130143178 <line:24:5, line:28:5>
|   | |-BinaryOperator 0x130142fa0 <line:24:9, line:25:52> 'int' contains-errors '||'
|   | | |-BinaryOperator 0x130142e50 <line:24:9, col:58> 'int' contains-errors '||'
|   | | | |-BinaryOperator 0x130142d88 <col:9, col:30> 'int' contains-errors '>'
|   | | | | |-CXXDependentScopeMemberExpr 0x130142d20 <col:9, col:12> '<dependent type>' contains-errors lvalue ->log2_cblk_width
|   | | | | | `-RecoveryExpr 0x130142d00 <col:9> '<dependent type>' contains-errors lvalue
|   | | | | `-IntegerLiteral 0x130142d68 <col:30> 'int' 10
|   | | | `-BinaryOperator 0x130142e30 <col:36, col:58> 'int' contains-errors '>'
|   | | |   |-CXXDependentScopeMemberExpr 0x130142dc8 <col:36, col:39> '<dependent type>' contains-errors lvalue ->log2_cblk_height
|   | | |   | `-RecoveryExpr 0x130142da8 <col:36> '<dependent type>' contains-errors lvalue
|   | | |   `-IntegerLiteral 0x130142e10 <col:58> 'int' 10
|   | | `-BinaryOperator 0x130142f80 <line:25:9, col:52> 'int' contains-errors '>'
|   | |   |-BinaryOperator 0x130142f40 <col:9, col:33> '<dependent type>' contains-errors '+'
|   | |   | |-CXXDependentScopeMemberExpr 0x130142e90 <col:9, col:12> '<dependent type>' contains-errors lvalue ->log2_cblk_width
|   | |   | | `-RecoveryExpr 0x130142e70 <col:9> '<dependent type>' contains-errors lvalue
|   | |   | `-CXXDependentScopeMemberExpr 0x130142ef8 <col:30, col:33> '<dependent type>' contains-errors lvalue ->log2_cblk_height
|   | |   |   `-RecoveryExpr 0x130142ed8 <col:30> '<dependent type>' contains-errors lvalue
|   | |   `-IntegerLiteral 0x130142f60 <col:52> 'int' 12
|   | `-CompoundStmt 0x130143158 <col:56, line:28:5>
|   |   |-CallExpr 0x1301430d8 <line:26:9, col:45> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x130142fc0 <col:9> 'int ()' Function 0x1301421f0 'av_log' 'int ()'
|   |   | |-CXXDependentScopeMemberExpr 0x130143000 <col:16, col:19> '<dependent type>' contains-errors lvalue ->avctx
|   |   | | `-RecoveryExpr 0x130142fe0 <col:16> '<dependent type>' contains-errors lvalue
|   |   | |-RecoveryExpr 0x1301430b8 <col:26> '<dependent type>' contains-errors lvalue
|   |   | `-StringLiteral 0x130143060 <col:40> 'char[4]' lvalue "STR"
|   |   `-ReturnStmt 0x130143148 <line:27:9, col:16>
|   |     `-RecoveryExpr 0x130143128 <col:16> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x1301432f0 <line:30:5, col:48> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x1301431e0 <col:5, col:8> '<dependent type>' contains-errors lvalue ->cblk_style
|   | | `-RecoveryExpr 0x1301431b8 <col:5> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x130143198 <col:5> 'int *' lvalue ParmVar 0x1301289a8 'c' 'int *'
|   | `-CallExpr 0x1301432c8 <col:21, col:48> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x130143228 <col:21> 'int ()' Function 0x130128ec8 'bytestream2_get_byteu' 'int ()'
|   |   `-UnaryOperator 0x1301432b0 <col:43, col:47> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     `-CXXDependentScopeMemberExpr 0x130143268 <col:44, col:47> '<dependent type>' contains-errors lvalue ->g
|   |       `-RecoveryExpr 0x130143248 <col:44> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x130143598 <line:31:5, line:33:5>
|   | |-BinaryOperator 0x130143398 <line:31:9, col:26> 'int' contains-errors '!='
|   | | |-CXXDependentScopeMemberExpr 0x130143330 <col:9, col:12> '<dependent type>' contains-errors lvalue ->cblk_style
|   | | | `-RecoveryExpr 0x130143310 <col:9> '<dependent type>' contains-errors lvalue
|   | | `-IntegerLiteral 0x130143378 <col:26> 'int' 0
|   | `-CompoundStmt 0x130143580 <col:29, line:33:5>
|   |   `-CallExpr 0x130143540 <line:32:9, col:62> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x1301433b8 <col:9> 'int ()' Function 0x1301421f0 'av_log' 'int ()'
|   |     |-CXXDependentScopeMemberExpr 0x1301433f8 <col:16, col:19> '<dependent type>' contains-errors lvalue ->avctx
|   |     | `-RecoveryExpr 0x1301433d8 <col:16> '<dependent type>' contains-errors lvalue
|   |     |-RecoveryExpr 0x130143520 <col:26> '<dependent type>' contains-errors lvalue
|   |     |-StringLiteral 0x130143458 <col:42> 'char[4]' lvalue "STR"
|   |     `-CXXDependentScopeMemberExpr 0x130143498 <col:49, col:52> '<dependent type>' contains-errors lvalue ->cblk_style
|   |       `-RecoveryExpr 0x130143478 <col:49> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x130143710 <line:34:5, col:47> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x130143600 <col:5, col:8> '<dependent type>' contains-errors lvalue ->transform
|   | | `-RecoveryExpr 0x1301435d8 <col:5> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x1301435b8 <col:5> 'int *' lvalue ParmVar 0x1301289a8 'c' 'int *'
|   | `-CallExpr 0x1301436e8 <col:20, col:47> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x130143648 <col:20> 'int ()' Function 0x130128ec8 'bytestream2_get_byteu' 'int ()'
|   |   `-UnaryOperator 0x1301436d0 <col:42, col:46> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     `-CXXDependentScopeMemberExpr 0x130143688 <col:43, col:46> '<dependent type>' contains-errors lvalue ->g
|   |       `-RecoveryExpr 0x130143668 <col:43> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x1301439e0 <line:36:5, line:37:24>
|   | |-RecoveryExpr 0x1301438b8 <line:36:9, col:77> '_Bool' contains-errors
|   | `-BinaryOperator 0x1301439c0 <line:37:9, col:24> '<dependent type>' contains-errors '='
|   |   |-CXXDependentScopeMemberExpr 0x130143920 <col:9, col:12> '<dependent type>' contains-errors lvalue ->transform
|   |   | `-RecoveryExpr 0x1301438f8 <col:9> '<dependent type>' contains-errors lvalue
|   |   |   `-DeclRefExpr 0x1301438d8 <col:9> 'int *' lvalue ParmVar 0x1301289a8 'c' 'int *'
|   |   `-RecoveryExpr 0x1301439a0 <col:24> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x130144758 <line:39:5, line:49:5> has_else
|   | |-BinaryOperator 0x130143ac0 <line:39:9, col:19> '<dependent type>' contains-errors '&'
|   | | |-CXXDependentScopeMemberExpr 0x130143a20 <col:9, col:12> '<dependent type>' contains-errors lvalue ->csty
|   | | | `-RecoveryExpr 0x130143a00 <col:9> '<dependent type>' contains-errors lvalue
|   | | `-RecoveryExpr 0x130143aa0 <col:19> '<dependent type>' contains-errors lvalue
|   | |-CompoundStmt 0x130144140 <col:39, line:46:5>
|   | | |-DeclStmt 0x130143b60 <line:40:9, col:14>
|   | | | `-VarDecl 0x130143af8 <col:9, col:13> col:13 used i 'int'
|   | | `-ForStmt 0x130144108 <line:41:9, line:45:9>
|   | |   |-BinaryOperator 0x130143bb8 <line:41:14, col:18> 'int' '='
|   | |   | |-DeclRefExpr 0x130143b78 <col:14> 'int' lvalue Var 0x130143af8 'i' 'int'
|   | |   | `-IntegerLiteral 0x130143b98 <col:18> 'int' 0
|   | |   |-<<<NULL>>>
|   | |   |-BinaryOperator 0x130143c60 <col:21, col:28> 'int' contains-errors '<'
|   | |   | |-DeclRefExpr 0x130143bd8 <col:21> 'int' lvalue Var 0x130143af8 'i' 'int'
|   | |   | `-CXXDependentScopeMemberExpr 0x130143c18 <col:25, col:28> '<dependent type>' contains-errors lvalue ->nreslevels
|   | |   |   `-RecoveryExpr 0x130143bf8 <col:25> '<dependent type>' contains-errors lvalue
|   | |   |-UnaryOperator 0x130143ca0 <col:40, col:41> 'int' postfix '++'
|   | |   | `-DeclRefExpr 0x130143c80 <col:40> 'int' lvalue Var 0x130143af8 'i' 'int'
|   | |   `-CompoundStmt 0x1301440f8 <col:45, line:45:9>
|   | `-CompoundStmt 0x130144738 <line:46:12, line:49:5>
|   |   |-CallExpr 0x130144560 <line:47:9, col:70> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x1301443f8 <col:9> 'void *(void *, int, unsigned long)' Function 0x1301441a8 'memset' 'void *(void *, int, unsigned long)'
|   |   | |-CXXDependentScopeMemberExpr 0x130144438 <col:16, col:19> '<dependent type>' contains-errors lvalue ->log2_prec_widths
|   |   | | `-RecoveryExpr 0x130144418 <col:16> '<dependent type>' contains-errors lvalue
|   |   | |-IntegerLiteral 0x130144480 <col:38> 'int' 15
|   |   | `-UnaryExprOrTypeTraitExpr 0x130144528 <col:42, col:69> 'unsigned long' contains-errors sizeof
|   |   |   `-ParenExpr 0x130144508 <col:48, col:69> '<dependent type>' contains-errors lvalue
|   |   |     `-CXXDependentScopeMemberExpr 0x1301444c0 <col:49, col:52> '<dependent type>' contains-errors lvalue ->log2_prec_widths
|   |   |       `-RecoveryExpr 0x1301444a0 <col:49> '<dependent type>' contains-errors lvalue
|   |   `-CallExpr 0x130144700 <line:48:9, col:70> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x130144598 <col:9> 'void *(void *, int, unsigned long)' Function 0x1301441a8 'memset' 'void *(void *, int, unsigned long)'
|   |     |-CXXDependentScopeMemberExpr 0x1301445d8 <col:16, col:19> '<dependent type>' contains-errors lvalue ->log2_prec_heights
|   |     | `-RecoveryExpr 0x1301445b8 <col:16> '<dependent type>' contains-errors lvalue
|   |     |-IntegerLiteral 0x130144620 <col:38> 'int' 15
|   |     `-UnaryExprOrTypeTraitExpr 0x1301446c8 <col:42, col:69> 'unsigned long' contains-errors sizeof
|   |       `-ParenExpr 0x1301446a8 <col:48, col:69> '<dependent type>' contains-errors lvalue
|   |         `-CXXDependentScopeMemberExpr 0x130144660 <col:49, col:52> '<dependent type>' contains-errors lvalue ->log2_prec_heights
|   |           `-RecoveryExpr 0x130144640 <col:49> '<dependent type>' contains-errors lvalue
|   `-ReturnStmt 0x1301447a8 <line:50:5, col:12>
|     `-IntegerLiteral 0x130144788 <col:12> 'int' 0
`-FunctionDecl 0x1301441a8 <line:47:9> col:9 implicit used memset 'void *(void *, int, unsigned long)' extern
  |-ParmVarDecl 0x1301442a8 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x130144310 <<invalid sloc>> <invalid sloc> 'int'
  |-ParmVarDecl 0x130144378 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x130144250 <<invalid sloc>> Implicit 900
