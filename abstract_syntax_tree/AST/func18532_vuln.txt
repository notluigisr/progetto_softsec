TranslationUnitDecl 0x133855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1338564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x133855bd0 '__int128'
|-TypedefDecl 0x133856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x133855bf0 'unsigned __int128'
|-TypedefDecl 0x13400be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13400bc00 'struct __NSConstantString_tag'
|   `-Record 0x133856580 '__NSConstantString_tag'
|-TypedefDecl 0x13400be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x133855d90 '__SVInt8_t'
|-TypedefDecl 0x13400bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x133855db0 '__SVInt16_t'
|-TypedefDecl 0x13400bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x133855dd0 '__SVInt32_t'
|-TypedefDecl 0x13400bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x133855df0 '__SVInt64_t'
|-TypedefDecl 0x13400c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x133855e10 '__SVUint8_t'
|-TypedefDecl 0x13400c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x133855e30 '__SVUint16_t'
|-TypedefDecl 0x13400c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x133855e50 '__SVUint32_t'
|-TypedefDecl 0x13400c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x133855e70 '__SVUint64_t'
|-TypedefDecl 0x13400c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x133855e90 '__SVFloat16_t'
|-TypedefDecl 0x13400c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x133855eb0 '__SVFloat32_t'
|-TypedefDecl 0x13400c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x133855ed0 '__SVFloat64_t'
|-TypedefDecl 0x13400c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x133855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13400c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x133855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13400c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x133855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13400c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x133855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13400c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x133855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13400c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x133855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13400c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x133855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13400c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x133855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13400c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x133855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13400c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x133856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13400c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x133856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13400c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x133856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13400c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x133856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13400c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x133856090 '__clang_svint8x3_t'
|-TypedefDecl 0x13400c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1338560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13400c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1338560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13400c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1338560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13400c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x133856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13400ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x133856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13400cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x133856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13400cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x133856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13400cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x133856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13400d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1338561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13400d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1338561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13400d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1338561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13400d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x133856210 '__clang_svint8x4_t'
|-TypedefDecl 0x13400d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x133856230 '__clang_svint16x4_t'
|-TypedefDecl 0x13400d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x133856250 '__clang_svint32x4_t'
|-TypedefDecl 0x13400d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x133856270 '__clang_svint64x4_t'
|-TypedefDecl 0x13400d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x133856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13400d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1338562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13400d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1338562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13400d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1338562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13400d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x133856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13400d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x133856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13400d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x133856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13400d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x133856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13400da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x133856390 '__SVBool_t'
|-TypedefDecl 0x13400da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1338563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13400dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1338563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13400db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1338563f0 '__SVCount_t'
|-TypedefDecl 0x13400dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13400dbb0 'char *'
|   `-BuiltinType 0x1338556b0 'char'
|-TypedefDecl 0x13400dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13400dbb0 'char *'
|   `-BuiltinType 0x1338556b0 'char'
`-FunctionDecl 0x134027438 <dataset_diviso_filec/func18532_vuln.c:1:1, line:34:1> line:1:25 invalid __key_update 'int (int, struct key_preparsed_payload *)' static inline
  |-ParmVarDecl 0x13400dcf0 <col:38, col:48> col:48 referenced invalid key_ref 'int'
  |-ParmVarDecl 0x13400e2e8 <line:2:10, col:40> col:40 used prep 'struct key_preparsed_payload *'
  `-CompoundStmt 0x13402e4d0 <line:3:1, line:34:1>
    |-DeclStmt 0x1340278a0 <line:4:2, col:43>
    | |-RecordDecl 0x1340274f0 <col:2, col:9> col:9 struct key
    | `-VarDecl 0x134027658 <col:2, col:42> col:14 used key 'struct key *' cinit
    |   `-CallExpr 0x134027860 <col:20, col:42> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x134027820 <col:20> 'int ()' Function 0x134027768 'key_ref_to_ptr' 'int ()'
    |     `-RecoveryExpr 0x134027840 <col:35> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x134027938 <line:5:2, col:9>
    | `-VarDecl 0x1340278d0 <col:2, col:6> col:6 used ret 'int'
    |-BinaryOperator 0x134027b48 <line:8:2, col:46> 'int' contains-errors '='
    | |-DeclRefExpr 0x134027950 <col:2> 'int' lvalue Var 0x1340278d0 'ret' 'int'
    | `-CallExpr 0x134027b18 <col:8, col:46> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x134027a50 <col:8> 'int ()' Function 0x134027998 'key_permission' 'int ()'
    |   |-RecoveryExpr 0x134027a70 <col:23> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x134027af8 <col:32> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x134027c48 <line:9:2, line:10:8>
    | |-BinaryOperator 0x134027bc0 <line:9:6, col:12> 'int' '<'
    | | |-ImplicitCastExpr 0x134027ba8 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x134027b68 <col:6> 'int' lvalue Var 0x1340278d0 'ret' 'int'
    | | `-IntegerLiteral 0x134027b88 <col:12> 'int' 0
    | `-GotoStmt 0x134027c30 <line:10:3, col:8> 'error' 0x134027be0
    |-BinaryOperator 0x134027d40 <line:12:2, col:9> 'int' contains-errors '='
    | |-DeclRefExpr 0x134027c68 <col:2> 'int' lvalue Var 0x1340278d0 'ret' 'int'
    | `-UnaryOperator 0x134027d28 <col:8, col:9> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   `-ImplicitCastExpr 0x134027d10 <col:9> '<dependent type>' contains-errors <LValueToRValue>
    |     `-RecoveryExpr 0x134027cf0 <col:9> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x134027e50 <line:13:2, line:14:8>
    | |-UnaryOperator 0x134027e20 <line:13:6, col:18> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x134027e08 <col:7, col:18> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-CXXDependentScopeMemberExpr 0x134027dc0 <col:7, col:18> '<dependent type>' contains-errors lvalue ->update
    | |     `-RecoveryExpr 0x134027d98 <col:7, col:12> '<dependent type>' contains-errors lvalue
    | |       `-DeclRefExpr 0x134027d60 <col:7> 'struct key *' contains-errors lvalue Var 0x134027658 'key' 'struct key *'
    | `-GotoStmt 0x134027e38 <line:14:3, col:8> 'error' 0x134027be0
    |-CallExpr 0x134027fe8 <line:16:2, col:22> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x134027f50 <col:2> 'int ()' Function 0x134027e98 'down_write' 'int ()'
    | `-UnaryOperator 0x134027fd0 <col:13, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x134027fa8 <col:14, col:19> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x134027f70 <col:14> 'struct key *' contains-errors lvalue Var 0x134027658 'key' 'struct key *'
    |-BinaryOperator 0x134028148 <line:18:2, col:35> 'int' contains-errors '='
    | |-DeclRefExpr 0x134028010 <col:2> 'int' lvalue Var 0x1340278d0 'ret' 'int'
    | `-CallExpr 0x134028118 <col:8, col:35> '<dependent type>' contains-errors
    |   |-CXXDependentScopeMemberExpr 0x134028090 <col:8, col:19> '<dependent type>' contains-errors lvalue ->update
    |   | `-RecoveryExpr 0x134028068 <col:8, col:13> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x134028030 <col:8> 'struct key *' contains-errors lvalue Var 0x134027658 'key' 'struct key *'
    |   |-DeclRefExpr 0x1340280d8 <col:26> 'struct key *' contains-errors lvalue Var 0x134027658 'key' 'struct key *'
    |   `-DeclRefExpr 0x1340280f8 <col:31> 'struct key_preparsed_payload *' lvalue ParmVar 0x13400e2e8 'prep' 'struct key_preparsed_payload *'
    |-IfStmt 0x13402de00 <line:19:2, line:21:43>
    | |-BinaryOperator 0x1340281c0 <line:19:6, col:13> 'int' '=='
    | | |-ImplicitCastExpr 0x1340281a8 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x134028168 <col:6> 'int' lvalue Var 0x1340278d0 'ret' 'int'
    | | `-IntegerLiteral 0x134028188 <col:13> 'int' 0
    | `-CallExpr 0x1340283c0 <line:21:3, col:43> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1340282c0 <col:3> 'int ()' Function 0x134028208 'clear_bit' 'int ()'
    |   |-RecoveryExpr 0x1340283a0 <col:13> '<dependent type>' contains-errors lvalue
    |   `-UnaryOperator 0x134028358 <col:32, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x134028330 <col:33, col:38> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x1340282f8 <col:33> 'struct key *' contains-errors lvalue Var 0x134027658 'key' 'struct key *'
    |-CallExpr 0x13402df98 <line:23:2, col:20> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13402df00 <col:2> 'int ()' Function 0x13402de48 'up_write' 'int ()'
    | `-UnaryOperator 0x13402df80 <col:11, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x13402df58 <col:12, col:17> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x13402df20 <col:12> 'struct key *' contains-errors lvalue Var 0x134027658 'key' 'struct key *'
    |-IfStmt 0x13402e050 <line:25:2, line:26:8>
    | |-BinaryOperator 0x13402e018 <line:25:6, col:12> 'int' '<'
    | | |-ImplicitCastExpr 0x13402e000 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x13402dfc0 <col:6> 'int' lvalue Var 0x1340278d0 'ret' 'int'
    | | `-IntegerLiteral 0x13402dfe0 <col:12> 'int' 0
    | `-GotoStmt 0x13402e038 <line:26:3, col:8> 'error' 0x134027be0
    |-LabelStmt 0x13402e0f0 <line:27:1, line:28:9> 'out'
    | `-ReturnStmt 0x13402e090 <col:2, col:9>
    |   `-RecoveryExpr 0x13402e070 <col:9> '<dependent type>' contains-errors lvalue
    |-LabelStmt 0x13402e2b8 <line:30:1, line:31:13> 'error'
    | `-CallExpr 0x13402e278 <col:2, col:13> 'int' contains-errors
    |   |-ImplicitCastExpr 0x13402e260 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x13402e1f0 <col:2> 'int ()' Function 0x13402e138 'key_put' 'int ()'
    |   `-ImplicitCastExpr 0x13402e2a0 <col:10> 'struct key *' contains-errors <LValueToRValue>
    |     `-DeclRefExpr 0x13402e210 <col:10> 'struct key *' contains-errors lvalue Var 0x134027658 'key' 'struct key *'
    |-BinaryOperator 0x13402e498 <line:32:2, col:23> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x13402e2f8 <col:2> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x13402e2d8 <col:2> 'int' lvalue ParmVar 0x13400dcf0 'key_ref' 'int'
    | `-CallExpr 0x13402e458 <col:12, col:23> 'int'
    |   |-ImplicitCastExpr 0x13402e440 <col:12> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x13402e400 <col:12> 'int ()' Function 0x13402e348 'ERR_PTR' 'int ()'
    |   `-ImplicitCastExpr 0x13402e480 <col:20> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x13402e420 <col:20> 'int' lvalue Var 0x1340278d0 'ret' 'int'
    `-GotoStmt 0x13402e4b8 <line:33:2, col:7> 'out' 0x13402e0a0
