TranslationUnitDecl 0x12c055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12c0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12c055bd0 '__int128'
|-TypedefDecl 0x12c056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12c055bf0 'unsigned __int128'
|-TypedefDecl 0x12c80be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12c80bc00 'struct __NSConstantString_tag'
|   `-Record 0x12c056580 '__NSConstantString_tag'
|-TypedefDecl 0x12c80be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12c055d90 '__SVInt8_t'
|-TypedefDecl 0x12c80bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12c055db0 '__SVInt16_t'
|-TypedefDecl 0x12c80bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12c055dd0 '__SVInt32_t'
|-TypedefDecl 0x12c80bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12c055df0 '__SVInt64_t'
|-TypedefDecl 0x12c80c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12c055e10 '__SVUint8_t'
|-TypedefDecl 0x12c80c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12c055e30 '__SVUint16_t'
|-TypedefDecl 0x12c80c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12c055e50 '__SVUint32_t'
|-TypedefDecl 0x12c80c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12c055e70 '__SVUint64_t'
|-TypedefDecl 0x12c80c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12c055e90 '__SVFloat16_t'
|-TypedefDecl 0x12c80c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12c055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12c80c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12c055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12c80c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12c055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12c80c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12c055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12c80c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12c055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12c80c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12c055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12c80c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12c055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12c80c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12c055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12c80c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12c055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12c80c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12c055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12c80c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12c055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12c80c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12c056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12c80c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12c056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12c80c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12c056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12c80c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12c056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12c80c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12c056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12c80c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12c0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12c80c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12c0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12c80c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12c0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12c80c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12c056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12c80ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12c056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12c80cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12c056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12c80cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12c056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12c80cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12c056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12c80d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12c0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12c80d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12c0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12c80d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12c0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12c80d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12c056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12c80d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12c056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12c80d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12c056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12c80d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12c056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12c80d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12c056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12c80d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12c0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12c80d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12c0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12c80d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12c0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12c80d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12c056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12c80d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12c056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12c80d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12c056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12c80d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12c056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12c80da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12c056390 '__SVBool_t'
|-TypedefDecl 0x12c80da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12c0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12c80dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12c0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12c80db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12c0563f0 '__SVCount_t'
|-TypedefDecl 0x12c80dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12c80dbb0 'char *'
|   `-BuiltinType 0x12c0556b0 'char'
|-TypedefDecl 0x12c80dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12c80dbb0 'char *'
|   `-BuiltinType 0x12c0556b0 'char'
|-FunctionDecl 0x12c80e0f8 <dataset_diviso_filec/func15822_vuln.c:1:1, line:62:1> line:1:1 invalid gerbv_gdk_draw_prim7 'int (int *, int *, double *, double, int, int)'
| |-ParmVarDecl 0x12c80dd28 <col:22, col:33> col:33 invalid pixmap 'int *'
| |-ParmVarDecl 0x12c80dda8 <col:41, col:48> col:48 invalid gc 'int *'
| |-ParmVarDecl 0x12c80de58 <col:52, col:60> col:60 used p 'double *'
| |-ParmVarDecl 0x12c80ded8 <line:2:4, col:11> col:11 used scale 'double'
| |-ParmVarDecl 0x12c80df58 <col:18, col:23> col:23 used x 'int'
| |-ParmVarDecl 0x12c80dfd8 <col:26, col:31> col:31 used y 'int'
| `-CompoundStmt 0x12c82c8d0 <line:3:1, line:62:1>
|   |-DeclStmt 0x12c80e270 <line:4:5, col:34>
|   | `-VarDecl 0x12c80e1e8 <col:5, col:33> col:15 used outside_dia_idx 'const int' cinit
|   |   `-IntegerLiteral 0x12c80e250 <col:33> 'int' 2
|   |-DeclStmt 0x12c80e328 <line:5:5, col:33>
|   | `-VarDecl 0x12c80e2a0 <col:5, col:32> col:15 used inside_dia_idx 'const int' cinit
|   |   `-IntegerLiteral 0x12c80e308 <col:32> 'int' 3
|   |-DeclStmt 0x12c80e3e0 <line:6:5, col:35>
|   | `-VarDecl 0x12c80e358 <col:5, col:34> col:15 used ch_thickness_idx 'const int' cinit
|   |   `-IntegerLiteral 0x12c80e3c0 <col:34> 'int' 4
|   |-DeclStmt 0x12c8274a0 <line:7:5, col:31>
|   | `-VarDecl 0x12c827418 <col:5, col:30> col:15 used rotation_idx 'const int' cinit
|   |   `-IntegerLiteral 0x12c827480 <col:30> 'int' 5
|   |-DeclStmt 0x12c827558 <line:8:5, col:35>
|   | `-VarDecl 0x12c8274d0 <col:5, col:30> col:16 used full_circle 'const int' cinit
|   |   `-IntegerLiteral 0x12c827538 <col:30> 'int' 23360
|   |-DeclStmt 0x12c827688 <line:10:5, col:20>
|   | |-VarDecl 0x12c827588 <col:5, col:9> col:9 used diameter 'int'
|   | `-VarDecl 0x12c827608 <col:5, col:19> col:19 used i 'int'
|   |-DeclStmt 0x12c827b78 <line:13:5, line:14:31>
|   | `-VarDecl 0x12c827890 <line:13:5, line:14:28> line:13:12 used ci_thickness 'double' cinit
|   |   `-BinaryOperator 0x12c827b58 <col:27, line:14:28> 'double' '/'
|   |     |-ParenExpr 0x12c827b18 <line:13:27, line:14:24> 'double'
|   |     | `-BinaryOperator 0x12c827af8 <line:13:28, line:14:23> 'double' '-'
|   |     |   |-ImplicitCastExpr 0x12c827a18 <line:13:28, col:45> 'double' <LValueToRValue>
|   |     |   | `-ArraySubscriptExpr 0x12c827968 <col:28, col:45> 'double' lvalue
|   |     |   |   |-ImplicitCastExpr 0x12c827938 <col:28> 'double *' <LValueToRValue>
|   |     |   |   | `-DeclRefExpr 0x12c8278f8 <col:28> 'double *' lvalue ParmVar 0x12c80de58 'p' 'double *'
|   |     |   |   `-ImplicitCastExpr 0x12c827950 <col:30> 'int' <LValueToRValue>
|   |     |   |     `-DeclRefExpr 0x12c827918 <col:30> 'const int' lvalue Var 0x12c80e1e8 'outside_dia_idx' 'const int'
|   |     |   `-ImplicitCastExpr 0x12c827a30 <line:14:7, col:23> 'double' <LValueToRValue>
|   |     |     `-ArraySubscriptExpr 0x12c8279f8 <col:7, col:23> 'double' lvalue
|   |     |       |-ImplicitCastExpr 0x12c8279c8 <col:7> 'double *' <LValueToRValue>
|   |     |       | `-DeclRefExpr 0x12c827988 <col:7> 'double *' lvalue ParmVar 0x12c80de58 'p' 'double *'
|   |     |       `-ImplicitCastExpr 0x12c8279e0 <col:9> 'int' <LValueToRValue>
|   |     |         `-DeclRefExpr 0x12c8279a8 <col:9> 'const int' lvalue Var 0x12c80e2a0 'inside_dia_idx' 'const int'
|   |     `-FloatingLiteral 0x12c827b38 <col:28> 'double' 2.000000e+00
|   |-CallExpr 0x12c827d18 <line:16:5, col:29> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x12c827c70 <col:5> 'int ()' Function 0x12c827bb8 'gdk_gc_copy' 'int ()'
|   | |-RecoveryExpr 0x12c827cf8 <col:17> '<dependent type>' contains-errors lvalue
|   | `-RecoveryExpr 0x12c827ca8 <col:27> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x12c829e00 <line:17:5, line:21:25> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x12c827e28 <line:17:5> 'int ()' Function 0x12c827d70 'gdk_gc_set_line_attributes' 'int ()'
|   | |-RecoveryExpr 0x12c829cb0 <col:32> '<dependent type>' contains-errors lvalue
|   | |-CStyleCastExpr 0x12c829d78 <line:18:11, col:42> 'int' <FloatingToIntegral>
|   | | `-CallExpr 0x12c829d50 <col:16, col:42> 'double'
|   | |   |-ImplicitCastExpr 0x12c829d38 <col:16> 'double (*)(double)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x12c829ac0 <col:16> 'double (double)' Function 0x12c8282c0 'round' 'double (double)'
|   | |   `-BinaryOperator 0x12c829d18 <col:22, col:30> 'double' '*'
|   | |     |-ImplicitCastExpr 0x12c829ce8 <col:22> 'double' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x12c829ae0 <col:22> 'double' lvalue ParmVar 0x12c80ded8 'scale' 'double'
|   | |     `-ImplicitCastExpr 0x12c829d00 <col:30> 'double' <LValueToRValue>
|   | |       `-DeclRefExpr 0x12c829b00 <col:30> 'double' lvalue Var 0x12c827890 'ci_thickness' 'double'
|   | |-RecoveryExpr 0x12c829da0 <line:19:11> '<dependent type>' contains-errors lvalue
|   | |-RecoveryExpr 0x12c829dc0 <line:20:11> '<dependent type>' contains-errors lvalue
|   | `-RecoveryExpr 0x12c829de0 <line:21:11> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x12c829ff8 <line:24:5, col:53> 'int' '='
|   | |-DeclRefExpr 0x12c829e48 <col:5> 'int' lvalue Var 0x12c827588 'diameter' 'int'
|   | `-ImplicitCastExpr 0x12c829fe0 <col:16, col:53> 'int' <FloatingToIntegral>
|   |   `-BinaryOperator 0x12c829fc0 <col:16, col:53> 'double' '*'
|   |     |-ParenExpr 0x12c829f68 <col:16, col:49> 'double'
|   |     | `-BinaryOperator 0x12c829f48 <col:17, col:37> 'double' '+'
|   |     |   |-ImplicitCastExpr 0x12c829f18 <col:17, col:33> 'double' <LValueToRValue>
|   |     |   | `-ArraySubscriptExpr 0x12c829ed8 <col:17, col:33> 'double' lvalue
|   |     |   |   |-ImplicitCastExpr 0x12c829ea8 <col:17> 'double *' <LValueToRValue>
|   |     |   |   | `-DeclRefExpr 0x12c829e68 <col:17> 'double *' lvalue ParmVar 0x12c80de58 'p' 'double *'
|   |     |   |   `-ImplicitCastExpr 0x12c829ec0 <col:19> 'int' <LValueToRValue>
|   |     |   |     `-DeclRefExpr 0x12c829e88 <col:19> 'const int' lvalue Var 0x12c80e2a0 'inside_dia_idx' 'const int'
|   |     |   `-ImplicitCastExpr 0x12c829f30 <col:37> 'double' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x12c829ef8 <col:37> 'double' lvalue Var 0x12c827890 'ci_thickness' 'double'
|   |     `-ImplicitCastExpr 0x12c829fa8 <col:53> 'double' <LValueToRValue>
|   |       `-DeclRefExpr 0x12c829f88 <col:53> 'double' lvalue ParmVar 0x12c80ded8 'scale' 'double'
|   |-ForStmt 0x12c82c090 <line:31:5, line:37:5>
|   | |-BinaryOperator 0x12c82a3b8 <line:31:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x12c82a378 <col:10> 'int' lvalue Var 0x12c827608 'i' 'int'
|   | | `-IntegerLiteral 0x12c82a398 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x12c82a430 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x12c82a418 <col:17> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x12c82a3d8 <col:17> 'int' lvalue Var 0x12c827608 'i' 'int'
|   | | `-IntegerLiteral 0x12c82a3f8 <col:21> 'int' 4
|   | |-UnaryOperator 0x12c82a470 <col:24, col:25> 'int' postfix '++'
|   | | `-DeclRefExpr 0x12c82a450 <col:24> 'int' lvalue Var 0x12c827608 'i' 'int'
|   | `-CompoundStmt 0x12c82c080 <col:29, line:37:5>
|   `-ReturnStmt 0x12c82c8c0 <line:61:5>
`-FunctionDecl 0x12c8282c0 <line:18:16> col:16 implicit used round 'double (double)' extern
  |-ParmVarDecl 0x12c829a00 <<invalid sloc>> <invalid sloc> 'double'
  |-BuiltinAttr 0x12c828368 <<invalid sloc>> Implicit 1145
  |-NoThrowAttr 0x12c829a70 <col:16> Implicit
  `-ConstAttr 0x12c829a98 <col:16> Implicit
