TranslationUnitDecl 0x11d055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x11d0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x11d055bd0 '__int128'
|-TypedefDecl 0x11d056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x11d055bf0 'unsigned __int128'
|-TypedefDecl 0x11d126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x11d126000 'struct __NSConstantString_tag'
|   `-Record 0x11d056580 '__NSConstantString_tag'
|-TypedefDecl 0x11d126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x11d055d90 '__SVInt8_t'
|-TypedefDecl 0x11d126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x11d055db0 '__SVInt16_t'
|-TypedefDecl 0x11d126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x11d055dd0 '__SVInt32_t'
|-TypedefDecl 0x11d1263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x11d055df0 '__SVInt64_t'
|-TypedefDecl 0x11d126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x11d055e10 '__SVUint8_t'
|-TypedefDecl 0x11d1264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x11d055e30 '__SVUint16_t'
|-TypedefDecl 0x11d126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x11d055e50 '__SVUint32_t'
|-TypedefDecl 0x11d126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x11d055e70 '__SVUint64_t'
|-TypedefDecl 0x11d1265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x11d055e90 '__SVFloat16_t'
|-TypedefDecl 0x11d126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x11d055eb0 '__SVFloat32_t'
|-TypedefDecl 0x11d1266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x11d055ed0 '__SVFloat64_t'
|-TypedefDecl 0x11d126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x11d055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x11d126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x11d055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x11d1267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x11d055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x11d126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x11d055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x11d1268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x11d055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x11d126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x11d055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x11d126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x11d055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x11d1269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x11d055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x11d126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x11d055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x11d126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x11d056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x11d126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x11d056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x11d126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x11d056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x11d126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x11d056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x11d126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x11d056090 '__clang_svint8x3_t'
|-TypedefDecl 0x11d126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x11d0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x11d126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x11d0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x11d126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x11d0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x11d126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x11d056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x11d126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x11d056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x11d126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x11d056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x11d126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x11d056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x11d126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x11d056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x11d127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x11d0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x11d127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x11d0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x11d1278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x11d0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x11d127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x11d056210 '__clang_svint8x4_t'
|-TypedefDecl 0x11d1279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x11d056230 '__clang_svint16x4_t'
|-TypedefDecl 0x11d127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x11d056250 '__clang_svint32x4_t'
|-TypedefDecl 0x11d127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x11d056270 '__clang_svint64x4_t'
|-TypedefDecl 0x11d127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x11d056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x11d127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x11d0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x11d127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x11d0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x11d127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x11d0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x11d127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x11d056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x11d127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x11d056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x11d127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x11d056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x11d127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x11d056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x11d127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x11d056390 '__SVBool_t'
|-TypedefDecl 0x11d127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x11d0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x11d127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x11d0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x11d127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x11d0563f0 '__SVCount_t'
|-TypedefDecl 0x11d127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x11d127fb0 'char *'
|   `-BuiltinType 0x11d0556b0 'char'
|-TypedefDecl 0x11d128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x11d127fb0 'char *'
|   `-BuiltinType 0x11d0556b0 'char'
`-FunctionDecl 0x11d128438 <dataset_diviso_filec/func1077_nonvuln.c:1:1, line:26:1> line:1:1 referenced invalid dissect_kafka_metadata_request 'int (int *, int *, int *, int, int)'
  |-ParmVarDecl 0x11d128128 <col:32, col:42> col:42 invalid tvb 'int *'
  |-ParmVarDecl 0x11d1281a8 <col:47, col:60> col:60 invalid pinfo 'int *'
  |-ParmVarDecl 0x11d128228 <col:67, col:79> col:79 invalid tree 'int *'
  |-ParmVarDecl 0x11d1282a8 <col:85, col:89> col:89 used offset 'int'
  |-ParmVarDecl 0x11d128328 <line:2:32, col:52> col:52 invalid api_version 'int'
  `-CompoundStmt 0x11d142510 <line:3:1, line:26:1>
    |-BinaryOperator 0x11d141958 <line:5:5, line:6:77> 'int' contains-errors '='
    | |-DeclRefExpr 0x11d128508 <line:5:5> 'int' lvalue ParmVar 0x11d1282a8 'offset' 'int'
    | `-CallExpr 0x11d1418f8 <col:14, line:6:77> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x11d128680 <line:5:14> 'int ()' Function 0x11d1285c8 'dissect_kafka_array' 'int ()'
    |   |-RecoveryExpr 0x11d1286a0 <col:34> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x11d1286c0 <col:40> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x11d1286e0 <col:45> '<dependent type>' contains-errors lvalue
    |   |-DeclRefExpr 0x11d128700 <col:52> 'int' lvalue ParmVar 0x11d1282a8 'offset' 'int'
    |   |-BinaryOperator 0x11d128760 <col:60, col:75> 'int' contains-errors '>='
    |   | |-RecoveryExpr 0x11d128720 <col:60> '<dependent type>' contains-errors lvalue
    |   | `-IntegerLiteral 0x11d128740 <col:75> 'int' 9
    |   |-RecoveryExpr 0x11d128780 <col:78> '<dependent type>' contains-errors lvalue
    |   |-UnaryOperator 0x11d1418c0 <line:6:34, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-RecoveryExpr 0x11d1418a0 <col:35> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x11d1418d8 <col:73> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x11d141cf8 <line:8:5, line:11:5>
    | |-BinaryOperator 0x11d1419b8 <line:8:9, col:24> 'int' contains-errors '>='
    | | |-RecoveryExpr 0x11d141978 <col:9> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x11d141998 <col:24> 'int' 4
    | `-CompoundStmt 0x11d141cd8 <col:27, line:11:5>
    |   |-CallExpr 0x11d141c18 <line:9:9, col:101> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x11d141ab8 <col:9> 'int ()' Function 0x11d141a00 'proto_tree_add_item' 'int ()'
    |   | |-RecoveryExpr 0x11d141ad8 <col:29> '<dependent type>' contains-errors lvalue
    |   | |-RecoveryExpr 0x11d141bd8 <col:35> '<dependent type>' contains-errors lvalue
    |   | |-RecoveryExpr 0x11d141b10 <col:71> '<dependent type>' contains-errors lvalue
    |   | |-DeclRefExpr 0x11d141b30 <col:76> 'int' lvalue ParmVar 0x11d1282a8 'offset' 'int'
    |   | |-IntegerLiteral 0x11d141b50 <col:84> 'int' 1
    |   | `-RecoveryExpr 0x11d141bf8 <col:87> '<dependent type>' contains-errors lvalue
    |   `-CompoundAssignOperator 0x11d141ca8 <line:10:9, col:19> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |     |-DeclRefExpr 0x11d141c68 <col:9> 'int' lvalue ParmVar 0x11d1282a8 'offset' 'int'
    |     `-IntegerLiteral 0x11d141c88 <col:19> 'int' 1
    |-IfStmt 0x11d1421e8 <line:13:5, line:19:5>
    | |-BinaryOperator 0x11d141d58 <line:13:9, col:24> 'int' contains-errors '>='
    | | |-RecoveryExpr 0x11d141d18 <col:9> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x11d141d38 <col:24> 'int' 8
    | `-CompoundStmt 0x11d1421b8 <col:27, line:19:5>
    |   |-CallExpr 0x11d141ed8 <line:14:9, col:106> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x11d141d78 <col:9> 'int ()' Function 0x11d141a00 'proto_tree_add_item' 'int ()'
    |   | |-RecoveryExpr 0x11d141d98 <col:29> '<dependent type>' contains-errors lvalue
    |   | |-RecoveryExpr 0x11d141e98 <col:35> '<dependent type>' contains-errors lvalue
    |   | |-RecoveryExpr 0x11d141dd0 <col:76> '<dependent type>' contains-errors lvalue
    |   | |-DeclRefExpr 0x11d141df0 <col:81> 'int' lvalue ParmVar 0x11d1282a8 'offset' 'int'
    |   | |-IntegerLiteral 0x11d141e10 <col:89> 'int' 1
    |   | `-RecoveryExpr 0x11d141eb8 <col:92> '<dependent type>' contains-errors lvalue
    |   |-CompoundAssignOperator 0x11d141f68 <line:15:9, col:19> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |   | |-DeclRefExpr 0x11d141f28 <col:9> 'int' lvalue ParmVar 0x11d1282a8 'offset' 'int'
    |   | `-IntegerLiteral 0x11d141f48 <col:19> 'int' 1
    |   |-CallExpr 0x11d1420f8 <line:17:9, col:104> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x11d141f98 <col:9> 'int ()' Function 0x11d141a00 'proto_tree_add_item' 'int ()'
    |   | |-RecoveryExpr 0x11d141fb8 <col:29> '<dependent type>' contains-errors lvalue
    |   | |-RecoveryExpr 0x11d1420b8 <col:35> '<dependent type>' contains-errors lvalue
    |   | |-RecoveryExpr 0x11d141ff0 <col:74> '<dependent type>' contains-errors lvalue
    |   | |-DeclRefExpr 0x11d142010 <col:79> 'int' lvalue ParmVar 0x11d1282a8 'offset' 'int'
    |   | |-IntegerLiteral 0x11d142030 <col:87> 'int' 1
    |   | `-RecoveryExpr 0x11d1420d8 <col:90> '<dependent type>' contains-errors lvalue
    |   `-CompoundAssignOperator 0x11d142188 <line:18:9, col:19> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |     |-DeclRefExpr 0x11d142148 <col:9> 'int' lvalue ParmVar 0x11d1282a8 'offset' 'int'
    |     `-IntegerLiteral 0x11d142168 <col:19> 'int' 1
    |-IfStmt 0x11d1424a8 <line:21:5, line:23:5>
    | |-BinaryOperator 0x11d142248 <line:21:9, col:24> 'int' contains-errors '>='
    | | |-RecoveryExpr 0x11d142208 <col:9> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x11d142228 <col:24> 'int' 9
    | `-CompoundStmt 0x11d142490 <col:27, line:23:5>
    |   `-BinaryOperator 0x11d142470 <line:22:9, col:73> 'int' contains-errors '='
    |     |-DeclRefExpr 0x11d142268 <col:9> 'int' lvalue ParmVar 0x11d1282a8 'offset' 'int'
    |     `-CallExpr 0x11d142428 <col:18, col:73> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x11d142368 <col:18> 'int ()' Function 0x11d1422b0 'dissect_kafka_tagged_fields' 'int ()'
    |       |-RecoveryExpr 0x11d142388 <col:46> '<dependent type>' contains-errors lvalue
    |       |-RecoveryExpr 0x11d1423a8 <col:51> '<dependent type>' contains-errors lvalue
    |       |-RecoveryExpr 0x11d1423c8 <col:58> '<dependent type>' contains-errors lvalue
    |       |-DeclRefExpr 0x11d1423e8 <col:64> 'int' lvalue ParmVar 0x11d1282a8 'offset' 'int'
    |       `-IntegerLiteral 0x11d142408 <col:72> 'int' 0
    `-ReturnStmt 0x11d142500 <line:25:5, col:12>
      `-ImplicitCastExpr 0x11d1424e8 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x11d1424c8 <col:12> 'int' lvalue ParmVar 0x11d1282a8 'offset' 'int'
