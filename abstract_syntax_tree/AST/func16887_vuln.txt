TranslationUnitDecl 0x135834408 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1358352b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1358349d0 '__int128'
|-TypedefDecl 0x135835328 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1358349f0 'unsigned __int128'
|-TypedefDecl 0x1340db830 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1340db600 'struct __NSConstantString_tag'
|   `-Record 0x135835380 '__NSConstantString_tag'
|-TypedefDecl 0x1340db898 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x135834b90 '__SVInt8_t'
|-TypedefDecl 0x1340db900 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x135834bb0 '__SVInt16_t'
|-TypedefDecl 0x1340db968 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x135834bd0 '__SVInt32_t'
|-TypedefDecl 0x1340db9d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x135834bf0 '__SVInt64_t'
|-TypedefDecl 0x1340dba38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x135834c10 '__SVUint8_t'
|-TypedefDecl 0x1340dbaa0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x135834c30 '__SVUint16_t'
|-TypedefDecl 0x1340dbb08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x135834c50 '__SVUint32_t'
|-TypedefDecl 0x1340dbb70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x135834c70 '__SVUint64_t'
|-TypedefDecl 0x1340dbbd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x135834c90 '__SVFloat16_t'
|-TypedefDecl 0x1340dbc40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x135834cb0 '__SVFloat32_t'
|-TypedefDecl 0x1340dbca8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x135834cd0 '__SVFloat64_t'
|-TypedefDecl 0x1340dbd10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x135834cf0 '__SVBfloat16_t'
|-TypedefDecl 0x1340dbd78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x135834d10 '__clang_svint8x2_t'
|-TypedefDecl 0x1340dbde0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x135834d30 '__clang_svint16x2_t'
|-TypedefDecl 0x1340dbe48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x135834d50 '__clang_svint32x2_t'
|-TypedefDecl 0x1340dbeb0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x135834d70 '__clang_svint64x2_t'
|-TypedefDecl 0x1340dbf18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x135834d90 '__clang_svuint8x2_t'
|-TypedefDecl 0x1340dbf80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x135834db0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1340dbfe8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x135834dd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x1340dc050 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x135834df0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1340dc0b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x135834e10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x1340dc120 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x135834e30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x1340dc188 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x135834e50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1340dc1f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x135834e70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x1340dc258 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x135834e90 '__clang_svint8x3_t'
|-TypedefDecl 0x1340dc2c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x135834eb0 '__clang_svint16x3_t'
|-TypedefDecl 0x1340dc328 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x135834ed0 '__clang_svint32x3_t'
|-TypedefDecl 0x1340dc390 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x135834ef0 '__clang_svint64x3_t'
|-TypedefDecl 0x1340dc3f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x135834f10 '__clang_svuint8x3_t'
|-TypedefDecl 0x1340dc460 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x135834f30 '__clang_svuint16x3_t'
|-TypedefDecl 0x1340dc4c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x135834f50 '__clang_svuint32x3_t'
|-TypedefDecl 0x1340dc530 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x135834f70 '__clang_svuint64x3_t'
|-TypedefDecl 0x1340dc598 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x135834f90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x1340dca00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x135834fb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x1340dca68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x135834fd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1340dcad0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x135834ff0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x1340dcb38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x135835010 '__clang_svint8x4_t'
|-TypedefDecl 0x1340dcba0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x135835030 '__clang_svint16x4_t'
|-TypedefDecl 0x1340dcc08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x135835050 '__clang_svint32x4_t'
|-TypedefDecl 0x1340dcc70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x135835070 '__clang_svint64x4_t'
|-TypedefDecl 0x1340dccd8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x135835090 '__clang_svuint8x4_t'
|-TypedefDecl 0x1340dcd40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1358350b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1340dcda8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1358350d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x1340dce10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1358350f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x1340dce78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x135835110 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1340dcee0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x135835130 '__clang_svfloat32x4_t'
|-TypedefDecl 0x1340dcf48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x135835150 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1340dcfb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x135835170 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x1340dd018 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x135835190 '__SVBool_t'
|-TypedefDecl 0x1340dd080 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1358351b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1340dd0e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1358351d0 '__clang_svboolx4_t'
|-TypedefDecl 0x1340dd150 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1358351f0 '__SVCount_t'
|-TypedefDecl 0x1340dd1f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1340dd1b0 'char *'
|   `-BuiltinType 0x1358344b0 'char'
|-TypedefDecl 0x1340dd268 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1340dd1b0 'char *'
|   `-BuiltinType 0x1358344b0 'char'
|-FunctionDecl 0x1340dd3a8 <dataset_diviso_filec/func16887_vuln.c:1:1, line:26:1> line:1:12 is_git_directory 'int (const char *)' static
| |-ParmVarDecl 0x1340dd2d8 <col:29, col:41> col:41 used suspect 'const char *'
| `-CompoundStmt 0x1340f5bb0 <line:2:1, line:26:1>
|   |-DeclStmt 0x1340dd548 <line:3:2, col:21>
|   | `-VarDecl 0x1340dd4e0 <col:2, col:7> col:7 invalid path 'char'
|   |-RecoveryExpr 0x1340f3750 <line:4:2, col:29> '<dependent type>' contains-errors lvalue
|   | |-UnaryExprOrTypeTraitExpr 0x1340f36c0 <col:2, col:9> 'unsigned long' contains-errors sizeof
|   | | `-RecoveryExpr 0x1340f36a0 <col:9> '<dependent type>' contains-errors lvalue
|   | `-CallExpr 0x1340f3710 <col:15, col:29> 'unsigned long'
|   |   |-ImplicitCastExpr 0x1340f36f8 <col:15> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1340f3570 <col:15> 'unsigned long (const char *)' Function 0x1340f3400 'strlen' 'unsigned long (const char *)'
|   |   `-ImplicitCastExpr 0x1340f3738 <col:22> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1340f3590 <col:22> 'const char *' lvalue ParmVar 0x1340dd2d8 'suspect' 'const char *'
|   |-CallExpr 0x1340f3a30 <line:6:2, col:22> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x1340f39a0 <col:2> 'char *(char *, const char *)' Function 0x1340f37c0 'strcpy' 'char *(char *, const char *)'
|   | |-RecoveryExpr 0x1340f39c0 <col:9> '<dependent type>' contains-errors lvalue
|   | `-DeclRefExpr 0x1340f39e0 <col:15> 'const char *' lvalue ParmVar 0x1340dd2d8 'suspect' 'const char *'
|   |-IfStmt 0x1340f41b8 <line:7:2, line:15:2> has_else
|   | |-CallExpr 0x1340f3bf0 <line:7:6, col:27> '<dependent type>' contains-errors
|   | | |-DeclRefExpr 0x1340f3b70 <col:6> 'int ()' Function 0x1340f3ab8 'getenv' 'int ()'
|   | | `-RecoveryExpr 0x1340f3bd0 <col:13> '<dependent type>' contains-errors lvalue
|   | |-CompoundStmt 0x1340f3ea8 <col:30, line:10:2>
|   | | `-IfStmt 0x1340f3e88 <line:8:3, line:9:11>
|   | |   |-CallExpr 0x1340f3e28 <line:8:7, col:42> '<dependent type>' contains-errors
|   | |   | |-DeclRefExpr 0x1340f3cf8 <col:7> 'int ()' Function 0x1340f3c40 'access' 'int ()'
|   | |   | |-CallExpr 0x1340f3de0 <col:14, col:35> '<dependent type>' contains-errors
|   | |   | | |-DeclRefExpr 0x1340f3d18 <col:14> 'int ()' Function 0x1340f3ab8 'getenv' 'int ()'
|   | |   | | `-RecoveryExpr 0x1340f3dc0 <col:21> '<dependent type>' contains-errors lvalue
|   | |   | `-RecoveryExpr 0x1340f3e08 <col:38> '<dependent type>' contains-errors lvalue
|   | |   `-ReturnStmt 0x1340f3e78 <line:9:4, col:11>
|   | |     `-IntegerLiteral 0x1340f3e58 <col:11> 'int' 0
|   | `-CompoundStmt 0x1340f4198 <line:11:7, line:15:2>
|   |   |-CallExpr 0x1340f4040 <line:12:3, col:27> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x1340f3ec0 <col:3> 'char *(char *, const char *)' Function 0x1340f37c0 'strcpy' 'char *(char *, const char *)'
|   |   | |-BinaryOperator 0x1340f4008 <col:10, col:17> '<dependent type>' contains-errors '+'
|   |   | | |-RecoveryExpr 0x1340f3ee0 <col:10> '<dependent type>' contains-errors lvalue
|   |   | | `-RecoveryExpr 0x1340f3fe8 <col:17> '<dependent type>' contains-errors lvalue
|   |   | `-StringLiteral 0x1340f3f80 <col:22> 'char[4]' lvalue "STR"
|   |   `-IfStmt 0x1340f4178 <line:13:3, line:14:11>
|   |     |-CallExpr 0x1340f4118 <line:13:7, col:24> '<dependent type>' contains-errors
|   |     | |-DeclRefExpr 0x1340f4070 <col:7> 'int ()' Function 0x1340f3c40 'access' 'int ()'
|   |     | |-RecoveryExpr 0x1340f4090 <col:14> '<dependent type>' contains-errors lvalue
|   |     | `-RecoveryExpr 0x1340f40f8 <col:20> '<dependent type>' contains-errors lvalue
|   |     `-ReturnStmt 0x1340f4168 <line:14:4, col:11>
|   |       `-IntegerLiteral 0x1340f4148 <col:11> 'int' 0
|   |-CallExpr 0x1340f4320 <line:17:2, col:26> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x1340f41e8 <col:2> 'char *(char *, const char *)' Function 0x1340f37c0 'strcpy' 'char *(char *, const char *)'
|   | |-BinaryOperator 0x1340f42e8 <col:9, col:16> '<dependent type>' contains-errors '+'
|   | | |-RecoveryExpr 0x1340f4208 <col:9> '<dependent type>' contains-errors lvalue
|   | | `-RecoveryExpr 0x1340f42c8 <col:16> '<dependent type>' contains-errors lvalue
|   | `-StringLiteral 0x1340f4260 <col:21> 'char[4]' lvalue "STR"
|   |-IfStmt 0x1340f5860 <line:18:2, line:19:10>
|   | |-CallExpr 0x1340f5800 <line:18:6, col:23> '<dependent type>' contains-errors
|   | | |-DeclRefExpr 0x1340f4350 <col:6> 'int ()' Function 0x1340f3c40 'access' 'int ()'
|   | | |-RecoveryExpr 0x1340f4370 <col:13> '<dependent type>' contains-errors lvalue
|   | | `-RecoveryExpr 0x1340f43d8 <col:19> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x1340f5850 <line:19:3, col:10>
|   |   `-IntegerLiteral 0x1340f5830 <col:10> 'int' 0
|   |-CallExpr 0x1340f59b8 <line:21:2, col:26> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x1340f5880 <col:2> 'char *(char *, const char *)' Function 0x1340f37c0 'strcpy' 'char *(char *, const char *)'
|   | |-BinaryOperator 0x1340f5980 <col:9, col:16> '<dependent type>' contains-errors '+'
|   | | |-RecoveryExpr 0x1340f58a0 <col:9> '<dependent type>' contains-errors lvalue
|   | | `-RecoveryExpr 0x1340f5960 <col:16> '<dependent type>' contains-errors lvalue
|   | `-StringLiteral 0x1340f58f8 <col:21> 'char[4]' lvalue "STR"
|   |-IfStmt 0x1340f5b60 <line:22:2, line:23:10>
|   | |-CallExpr 0x1340f5b08 <line:22:6, col:27> '<dependent type>' contains-errors
|   | | |-DeclRefExpr 0x1340f5ac8 <col:6> 'int ()' Function 0x1340f5a10 'validate_headref' 'int ()'
|   | | `-RecoveryExpr 0x1340f5ae8 <col:23> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x1340f5b50 <line:23:3, col:10>
|   |   `-IntegerLiteral 0x1340f5b30 <col:10> 'int' 0
|   `-ReturnStmt 0x1340f5ba0 <line:25:2, col:9>
|     `-IntegerLiteral 0x1340f5b80 <col:9> 'int' 1
|-FunctionDecl 0x1340f3400 <line:4:15> col:15 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x1340f3500 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x1340f34a8 <<invalid sloc>> Implicit 902
`-FunctionDecl 0x1340f37c0 <line:6:2> col:2 implicit used strcpy 'char *(char *, const char *)' extern
  |-ParmVarDecl 0x1340f38c0 <<invalid sloc>> <invalid sloc> 'char *'
  |-ParmVarDecl 0x1340f3928 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x1340f3868 <<invalid sloc>> Implicit 885
