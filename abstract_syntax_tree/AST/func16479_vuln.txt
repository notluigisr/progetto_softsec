TranslationUnitDecl 0x120055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1200564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x120055bd0 '__int128'
|-TypedefDecl 0x120056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x120055bf0 'unsigned __int128'
|-TypedefDecl 0x120126c30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x120126a00 'struct __NSConstantString_tag'
|   `-Record 0x120056580 '__NSConstantString_tag'
|-TypedefDecl 0x120126c98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x120055d90 '__SVInt8_t'
|-TypedefDecl 0x120126d00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x120055db0 '__SVInt16_t'
|-TypedefDecl 0x120126d68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x120055dd0 '__SVInt32_t'
|-TypedefDecl 0x120126dd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x120055df0 '__SVInt64_t'
|-TypedefDecl 0x120126e38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x120055e10 '__SVUint8_t'
|-TypedefDecl 0x120126ea0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x120055e30 '__SVUint16_t'
|-TypedefDecl 0x120126f08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x120055e50 '__SVUint32_t'
|-TypedefDecl 0x120126f70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x120055e70 '__SVUint64_t'
|-TypedefDecl 0x120126fd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x120055e90 '__SVFloat16_t'
|-TypedefDecl 0x120127040 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x120055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1201270a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x120055ed0 '__SVFloat64_t'
|-TypedefDecl 0x120127110 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x120055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x120127178 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x120055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1201271e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x120055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x120127248 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x120055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1201272b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x120055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x120127318 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x120055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x120127380 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x120055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1201273e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x120055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x120127450 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x120055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1201274b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x120056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x120127520 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x120056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x120127588 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x120056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1201275f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x120056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x120127658 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x120056090 '__clang_svint8x3_t'
|-TypedefDecl 0x1201276c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1200560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x120127728 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1200560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x120127790 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1200560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x1201277f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x120056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x120127860 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x120056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x1201278c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x120056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x120127930 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x120056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x120127998 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x120056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x120128200 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1200561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x120128268 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1200561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1201282d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1200561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x120128338 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x120056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1201283a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x120056230 '__clang_svint16x4_t'
|-TypedefDecl 0x120128408 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x120056250 '__clang_svint32x4_t'
|-TypedefDecl 0x120128470 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x120056270 '__clang_svint64x4_t'
|-TypedefDecl 0x1201284d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x120056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x120128540 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1200562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1201285a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1200562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x120128610 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1200562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x120128678 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x120056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1201286e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x120056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x120128748 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x120056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1201287b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x120056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x120128818 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x120056390 '__SVBool_t'
|-TypedefDecl 0x120128880 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1200563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1201288e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1200563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x120128950 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1200563f0 '__SVCount_t'
|-TypedefDecl 0x1201289f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1201289b0 'char *'
|   `-BuiltinType 0x1200556b0 'char'
|-TypedefDecl 0x120128a68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1201289b0 'char *'
|   `-BuiltinType 0x1200556b0 'char'
|-FunctionDecl 0x120128f68 <dataset_diviso_filec/func16479_vuln.c:1:1, line:74:1> line:1:1 invalid read_channel_data 'int (int *, const int, const int, const int *, int *, int **)'
| |-ParmVarDecl 0x120128b28 <col:20, col:36> col:36 referenced invalid channel 'int *'
| |-ParmVarDecl 0x120128ba8 <line:2:20, col:36> col:36 invalid bps 'const int'
| |-ParmVarDecl 0x120128c28 <line:3:20, col:36> col:36 invalid compression 'const int'
| |-ParmVarDecl 0x120128ca8 <line:4:20, col:36> col:36 invalid rle_pack_len 'const int *'
| |-ParmVarDecl 0x120128d28 <line:5:20, col:36> col:36 invalid f 'int *'
| |-ParmVarDecl 0x120128de0 <line:6:20, col:36> col:36 invalid error 'int **'
| `-CompoundStmt 0x120144ab0 <line:7:1, line:74:1>
|   |-DeclStmt 0x1201290c0 <line:8:3, col:21>
|   | `-VarDecl 0x120129058 <col:3, col:13> col:13 used raw_data 'char *'
|   |-DeclStmt 0x120129158 <line:9:3, col:16>
|   | `-VarDecl 0x1201290f0 <col:3, col:13> col:13 used src 'char *'
|   |-DeclStmt 0x120142200 <line:10:3, col:16>
|   | `-VarDecl 0x120129188 <col:3, col:13> col:13 used dst 'char *'
|   |-DeclStmt 0x120142298 <line:12:3, col:14>
|   | `-VarDecl 0x120142230 <col:3, col:13> col:13 used i 'int'
|   |-CallExpr 0x120142728 <line:19:3, col:10> 'int'
|   | |-ImplicitCastExpr 0x120142710 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1201426a0 <col:3> 'int ()' Function 0x1201425e8 'IFDBG' 'int ()'
|   | `-IntegerLiteral 0x1201426c0 <col:9> 'int' 3
|   |-CallExpr 0x120142a70 <col:12, line:20:64> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x120142830 <line:19:12> 'int ()' Function 0x120142778 'g_debug' 'int ()'
|   | |-StringLiteral 0x120142890 <col:21> 'char[4]' lvalue "STR"
|   | |-RecoveryExpr 0x120142a10 <col:28> '<dependent type>' contains-errors lvalue
|   | |-CXXDependentScopeMemberExpr 0x1201428e8 <line:20:21, col:30> '<dependent type>' contains-errors lvalue ->rows
|   | | `-RecoveryExpr 0x1201428c8 <col:21> '<dependent type>' contains-errors lvalue
|   | `-BinaryOperator 0x120142a50 <col:36, col:60> '<dependent type>' contains-errors '*'
|   |   |-RecoveryExpr 0x120142a30 <col:36> '<dependent type>' contains-errors lvalue
|   |   `-CXXDependentScopeMemberExpr 0x120142968 <col:51, col:60> '<dependent type>' contains-errors lvalue ->rows
|   |     `-RecoveryExpr 0x120142948 <col:51> '<dependent type>' contains-errors lvalue
|   |-SwitchStmt 0x120142c70 <line:22:3, line:50:5>
|   | |-ImplicitCastExpr 0x120142c58 <line:22:11> '<dependent type>' contains-errors <LValueToRValue>
|   | | `-RecoveryExpr 0x120142c38 <col:11> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x120143e70 <line:23:5, line:50:5>
|   |   |-IfStmt 0x120143148 <line:25:9, line:29:11>
|   |   | |-RecoveryExpr 0x120142e60 <line:25:13, col:64> '_Bool' contains-errors
|   |   | `-CompoundStmt 0x120143130 <line:26:11, line:29:11>
|   |   |   `-ReturnStmt 0x120143120 <line:28:13, col:21>
|   |   |     `-UnaryOperator 0x120143108 <col:20, col:21> 'int' prefix '-'
|   |   |       `-IntegerLiteral 0x1201430e8 <col:21> 'int' 1
|   |   |-BreakStmt 0x120143168 <line:30:9>
|   |   |-ForStmt 0x120143e30 <line:33:9, line:48:11>
|   |   | |-BinaryOperator 0x1201431b0 <line:33:14, col:18> 'int' '='
|   |   | | |-DeclRefExpr 0x120143170 <col:14> 'int' lvalue Var 0x120142230 'i' 'int'
|   |   | | `-IntegerLiteral 0x120143190 <col:18> 'int' 0
|   |   | |-<<<NULL>>>
|   |   | |-BinaryOperator 0x120143268 <col:21, col:34> 'int' contains-errors '<'
|   |   | | |-DeclRefExpr 0x1201431d0 <col:21> 'int' lvalue Var 0x120142230 'i' 'int'
|   |   | | `-CXXDependentScopeMemberExpr 0x120143220 <col:25, col:34> '<dependent type>' contains-errors lvalue ->rows
|   |   | |   `-RecoveryExpr 0x120143200 <col:25> '<dependent type>' contains-errors lvalue
|   |   | |-UnaryOperator 0x1201432a8 <col:40, col:42> 'int' prefix '++'
|   |   | | `-DeclRefExpr 0x120143288 <col:42> 'int' lvalue Var 0x120142230 'i' 'int'
|   |   | `-CompoundStmt 0x120143e00 <line:34:11, line:48:11>
|   |   |   |-BinaryOperator 0x1201433b8 <line:35:13, col:44> 'char *' contains-errors '='
|   |   |   | |-DeclRefExpr 0x1201432c0 <col:13> 'char *' lvalue Var 0x1201290f0 'src' 'char *'
|   |   |   | `-CallExpr 0x120143390 <col:19, col:44> '<dependent type>' contains-errors
|   |   |   |   |-DeclRefExpr 0x1201432e0 <col:19> 'int ()' Function 0x120142af8 'g_malloc' 'int ()'
|   |   |   |   `-ArraySubscriptExpr 0x120143370 <col:29, col:43> '<dependent type>' contains-errors lvalue
|   |   |   |     |-ImplicitCastExpr 0x120143340 <col:29> '<dependent type>' contains-errors <LValueToRValue>
|   |   |   |     | `-RecoveryExpr 0x120143300 <col:29> '<dependent type>' contains-errors lvalue
|   |   |   |     `-ImplicitCastExpr 0x120143358 <col:42> 'int' <LValueToRValue>
|   |   |   |       `-DeclRefExpr 0x120143320 <col:42> 'int' lvalue Var 0x120142230 'i' 'int'
|   |   |   |-IfStmt 0x1201436b0 <line:38:13, line:42:15>
|   |   |   | |-BinaryOperator 0x120143588 <line:38:17, col:54> 'int' contains-errors '<'
|   |   |   | | |-CallExpr 0x120143528 <col:17, col:50> '<dependent type>' contains-errors
|   |   |   | | | |-DeclRefExpr 0x120143418 <col:17> 'int ()' Function 0x120142cc0 'fread' 'int ()'
|   |   |   | | | |-DeclRefExpr 0x120143438 <col:24> 'char *' lvalue Var 0x1201290f0 'src' 'char *'
|   |   |   | | | |-ArraySubscriptExpr 0x1201434c8 <col:29, col:43> '<dependent type>' contains-errors lvalue
|   |   |   | | | | |-ImplicitCastExpr 0x120143498 <col:29> '<dependent type>' contains-errors <LValueToRValue>
|   |   |   | | | | | `-RecoveryExpr 0x120143458 <col:29> '<dependent type>' contains-errors lvalue
|   |   |   | | | | `-ImplicitCastExpr 0x1201434b0 <col:42> 'int' <LValueToRValue>
|   |   |   | | | |   `-DeclRefExpr 0x120143478 <col:42> 'int' lvalue Var 0x120142230 'i' 'int'
|   |   |   | | | |-IntegerLiteral 0x1201434e8 <col:46> 'int' 1
|   |   |   | | | `-RecoveryExpr 0x120143508 <col:49> '<dependent type>' contains-errors lvalue
|   |   |   | | `-IntegerLiteral 0x120143568 <col:54> 'int' 1
|   |   |   | `-CompoundStmt 0x120143698 <line:39:15, line:42:15>
|   |   |   |   `-ReturnStmt 0x120143688 <line:41:17, col:25>
|   |   |   |     `-UnaryOperator 0x120143670 <col:24, col:25> 'int' prefix '-'
|   |   |   |       `-IntegerLiteral 0x120143650 <col:25> 'int' 1
|   |   |   |-CallExpr 0x1201439d8 <line:45:13, col:24> 'int'
|   |   |   | |-ImplicitCastExpr 0x1201439c0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x120143980 <col:13> 'int ()' Function 0x1201438c8 'g_free' 'int ()'
|   |   |   | `-ImplicitCastExpr 0x120143a00 <col:21> 'char *' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x1201439a0 <col:21> 'char *' lvalue Var 0x1201290f0 'src' 'char *'
|   |   |   `-CallExpr 0x120143dc0 <line:47:13, col:24> 'int'
|   |   |     |-ImplicitCastExpr 0x120143da8 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x120143d68 <col:13> 'int ()' Function 0x1201438c8 'g_free' 'int ()'
|   |   |     `-ImplicitCastExpr 0x120143de8 <col:21> 'char *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x120143d88 <col:21> 'char *' lvalue Var 0x120129188 'dst' 'char *'
|   |   `-BreakStmt 0x120143e68 <line:49:9>
|   |-SwitchStmt 0x120143ed8 <line:53:3, line:69:5>
|   | |-ImplicitCastExpr 0x120143ec0 <line:53:11> '<dependent type>' contains-errors <LValueToRValue>
|   | | `-RecoveryExpr 0x120143ea0 <col:11> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x120144990 <line:54:5, line:69:5>
|   |   |-CaseStmt 0x120143f20 <line:55:7, <invalid sloc>>
|   |   | |-IntegerLiteral 0x120143f00 <col:12> 'int' 16
|   |   | `-NullStmt 0x120143fd8 <<invalid sloc>>
|   |   |-CallExpr 0x1201442c8 <line:57:9, col:89> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x1201440c0 <col:9> 'int ()' Function 0x120144008 'convert_16_bit' 'int ()'
|   |   | |-DeclRefExpr 0x1201440e0 <col:25> 'char *' lvalue Var 0x120129058 'raw_data' 'char *'
|   |   | |-CXXDependentScopeMemberExpr 0x120144120 <col:35, col:44> '<dependent type>' contains-errors lvalue ->data
|   |   | | `-RecoveryExpr 0x120144100 <col:35> '<dependent type>' contains-errors lvalue
|   |   | `-BinaryOperator 0x1201442a8 <col:50, col:88> '<dependent type>' contains-errors '<<'
|   |   |   |-ParenExpr 0x120144268 <col:50, col:83> '<dependent type>' contains-errors
|   |   |   | `-BinaryOperator 0x120144248 <col:51, col:76> '<dependent type>' contains-errors '*'
|   |   |   |   |-CXXDependentScopeMemberExpr 0x120144188 <col:51, col:60> '<dependent type>' contains-errors lvalue ->rows
|   |   |   |   | `-RecoveryExpr 0x120144168 <col:51> '<dependent type>' contains-errors lvalue
|   |   |   |   `-CXXDependentScopeMemberExpr 0x120144200 <col:67, col:76> '<dependent type>' contains-errors lvalue ->columns
|   |   |   |     `-RecoveryExpr 0x1201441d0 <col:67> '<dependent type>' contains-errors lvalue
|   |   |   `-IntegerLiteral 0x120144288 <col:88> 'int' 1
|   |   |-BreakStmt 0x120144300 <line:58:9>
|   |   |-CaseStmt 0x120144328 <line:60:7, <invalid sloc>>
|   |   | |-IntegerLiteral 0x120144308 <col:12> 'int' 8
|   |   | `-NullStmt 0x1201443e0 <<invalid sloc>>
|   |   |-CallExpr 0x1201445d0 <line:62:9, col:76> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x1201443e8 <col:9> 'void *(void *, const void *, unsigned long)' Function 0x120143a98 'memcpy' 'void *(void *, const void *, unsigned long)'
|   |   | |-CXXDependentScopeMemberExpr 0x120144428 <col:17, col:26> '<dependent type>' contains-errors lvalue ->data
|   |   | | `-RecoveryExpr 0x120144408 <col:17> '<dependent type>' contains-errors lvalue
|   |   | |-DeclRefExpr 0x120144470 <col:32> 'char *' lvalue Var 0x120129058 'raw_data' 'char *'
|   |   | `-ParenExpr 0x120144580 <col:42, col:75> '<dependent type>' contains-errors
|   |   |   `-BinaryOperator 0x120144560 <col:43, col:68> '<dependent type>' contains-errors '*'
|   |   |     |-CXXDependentScopeMemberExpr 0x1201444b0 <col:43, col:52> '<dependent type>' contains-errors lvalue ->rows
|   |   |     | `-RecoveryExpr 0x120144490 <col:43> '<dependent type>' contains-errors lvalue
|   |   |     `-CXXDependentScopeMemberExpr 0x120144518 <col:59, col:68> '<dependent type>' contains-errors lvalue ->columns
|   |   |       `-RecoveryExpr 0x1201444f8 <col:59> '<dependent type>' contains-errors lvalue
|   |   |-BreakStmt 0x120144608 <line:63:9>
|   |   |-CaseStmt 0x120144630 <line:65:7, <invalid sloc>>
|   |   | |-IntegerLiteral 0x120144610 <col:12> 'int' 1
|   |   | `-NullStmt 0x1201446e8 <<invalid sloc>>
|   |   |-CallExpr 0x120144948 <line:67:9, col:80> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x1201447d0 <col:9> 'int ()' Function 0x120144718 'convert_1_bit' 'int ()'
|   |   | |-DeclRefExpr 0x1201447f0 <col:24> 'char *' lvalue Var 0x120129058 'raw_data' 'char *'
|   |   | |-CXXDependentScopeMemberExpr 0x120144830 <col:34, col:43> '<dependent type>' contains-errors lvalue ->data
|   |   | | `-RecoveryExpr 0x120144810 <col:34> '<dependent type>' contains-errors lvalue
|   |   | |-CXXDependentScopeMemberExpr 0x120144898 <col:49, col:58> '<dependent type>' contains-errors lvalue ->rows
|   |   | | `-RecoveryExpr 0x120144878 <col:49> '<dependent type>' contains-errors lvalue
|   |   | `-CXXDependentScopeMemberExpr 0x120144900 <col:64, col:73> '<dependent type>' contains-errors lvalue ->columns
|   |   |   `-RecoveryExpr 0x1201448e0 <col:64> '<dependent type>' contains-errors lvalue
|   |   `-BreakStmt 0x120144988 <line:68:9>
|   |-CallExpr 0x120144a40 <line:71:3, col:19> 'int'
|   | |-ImplicitCastExpr 0x120144a28 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1201449e8 <col:3> 'int ()' Function 0x1201438c8 'g_free' 'int ()'
|   | `-ImplicitCastExpr 0x120144a68 <col:11> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x120144a08 <col:11> 'char *' lvalue Var 0x120129058 'raw_data' 'char *'
|   `-ReturnStmt 0x120144aa0 <line:73:3, col:10>
|     `-IntegerLiteral 0x120144a80 <col:10> 'int' 1
`-FunctionDecl 0x120143a98 <line:46:13> col:13 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x120143b98 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x120143c00 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x120143c68 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x120143b40 <<invalid sloc>> Implicit 882
