TranslationUnitDecl 0x15a055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x15a0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x15a055bd0 '__int128'
|-TypedefDecl 0x15a056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x15a055bf0 'unsigned __int128'
|-TypedefDecl 0x14a00be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14a00bc00 'struct __NSConstantString_tag'
|   `-Record 0x15a056580 '__NSConstantString_tag'
|-TypedefDecl 0x14a00be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x15a055d90 '__SVInt8_t'
|-TypedefDecl 0x14a00bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x15a055db0 '__SVInt16_t'
|-TypedefDecl 0x14a00bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x15a055dd0 '__SVInt32_t'
|-TypedefDecl 0x14a00bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x15a055df0 '__SVInt64_t'
|-TypedefDecl 0x14a00c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x15a055e10 '__SVUint8_t'
|-TypedefDecl 0x14a00c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x15a055e30 '__SVUint16_t'
|-TypedefDecl 0x14a00c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x15a055e50 '__SVUint32_t'
|-TypedefDecl 0x14a00c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x15a055e70 '__SVUint64_t'
|-TypedefDecl 0x14a00c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x15a055e90 '__SVFloat16_t'
|-TypedefDecl 0x14a00c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x15a055eb0 '__SVFloat32_t'
|-TypedefDecl 0x14a00c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x15a055ed0 '__SVFloat64_t'
|-TypedefDecl 0x14a00c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x15a055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14a00c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x15a055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14a00c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x15a055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14a00c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x15a055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14a00c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x15a055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14a00c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x15a055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14a00c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x15a055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14a00c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x15a055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14a00c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x15a055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14a00c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x15a056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14a00c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x15a056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14a00c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x15a056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14a00c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x15a056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14a00c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x15a056090 '__clang_svint8x3_t'
|-TypedefDecl 0x14a00c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x15a0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14a00c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x15a0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14a00c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x15a0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14a00c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x15a056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14a00ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x15a056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14a00cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x15a056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14a00cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x15a056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14a00cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x15a056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14a00d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x15a0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14a00d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x15a0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14a00d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x15a0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14a00d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x15a056210 '__clang_svint8x4_t'
|-TypedefDecl 0x14a00d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x15a056230 '__clang_svint16x4_t'
|-TypedefDecl 0x14a00d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x15a056250 '__clang_svint32x4_t'
|-TypedefDecl 0x14a00d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x15a056270 '__clang_svint64x4_t'
|-TypedefDecl 0x14a00d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x15a056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14a00d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x15a0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14a00d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x15a0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14a00d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x15a0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14a00d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x15a056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14a00d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x15a056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14a00d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x15a056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14a00d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x15a056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14a00da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x15a056390 '__SVBool_t'
|-TypedefDecl 0x14a00da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x15a0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14a00dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x15a0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14a00db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x15a0563f0 '__SVCount_t'
|-TypedefDecl 0x14a00dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14a00dbb0 'char *'
|   `-BuiltinType 0x15a0556b0 'char'
|-TypedefDecl 0x14a00dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14a00dbb0 'char *'
|   `-BuiltinType 0x15a0556b0 'char'
|-FunctionDecl 0x14a0266d8 <dataset_diviso_filec/func1354_vuln.c:1:1, line:17:1> line:1:12 smack_getprocattr 'int (struct task_struct *, char *, char **)' static
| |-ParmVarDecl 0x14a00e248 <col:30, col:50> col:50 used p 'struct task_struct *'
| |-ParmVarDecl 0x14a00e2c8 <col:53, col:59> col:59 used name 'char *'
| |-ParmVarDecl 0x14a00e378 <col:65, col:72> col:72 used value 'char **'
| `-CompoundStmt 0x14b808fc8 <line:2:1, line:17:1>
|   |-DeclStmt 0x14a026bd8 <line:3:2, col:54>
|   | |-RecordDecl 0x14a0267e0 <col:2, col:9> col:9 struct smack_known
|   | `-VarDecl 0x14a026948 <col:2, col:53> col:22 used skp 'struct smack_known *' cinit
|   |   `-ImplicitCastExpr 0x14a026ba8 <col:28, col:53> 'struct smack_known *' <IntegralToPointer>
|   |     `-CallExpr 0x14a026b68 <col:28, col:53> 'int'
|   |       |-ImplicitCastExpr 0x14a026b50 <col:28> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x14a026ae0 <col:28> 'int ()' Function 0x14a026a28 'smk_of_task_struct_subj' 'int ()'
|   |       `-ImplicitCastExpr 0x14a026b90 <col:52> 'struct task_struct *' <LValueToRValue>
|   |         `-DeclRefExpr 0x14a026b00 <col:52> 'struct task_struct *' lvalue ParmVar 0x14a00e248 'p' 'struct task_struct *'
|   |-DeclStmt 0x14a026c70 <line:4:2, col:10>
|   | `-VarDecl 0x14a026c08 <col:2, col:8> col:8 used cp 'char *'
|   |-DeclStmt 0x14a026d08 <line:5:2, col:10>
|   | `-VarDecl 0x14a026ca0 <col:2, col:6> col:6 used slen 'int'
|   |-IfStmt 0x14a0271d0 <line:7:2, line:8:11>
|   | |-BinaryOperator 0x14a027108 <line:7:6, col:29> 'int' '!='
|   | | |-CallExpr 0x14a027058 <col:6, col:24> 'int'
|   | | | |-ImplicitCastExpr 0x14a027040 <col:6> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x14a026f40 <col:6> 'int (const char *, const char *)' Function 0x14a026d60 'strcmp' 'int (const char *, const char *)'
|   | | | |-ImplicitCastExpr 0x14a0270a0 <col:13> 'const char *' <NoOp>
|   | | | | `-ImplicitCastExpr 0x14a027088 <col:13> 'char *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x14a026f60 <col:13> 'char *' lvalue ParmVar 0x14a00e2c8 'name' 'char *'
|   | | | `-ImplicitCastExpr 0x14a0270d0 <col:19> 'const char *' <NoOp>
|   | | |   `-ImplicitCastExpr 0x14a0270b8 <col:19> 'char *' <ArrayToPointerDecay>
|   | | |     `-StringLiteral 0x14a026fc0 <col:19> 'char[4]' lvalue "STR"
|   | | `-IntegerLiteral 0x14a0270e8 <col:29> 'int' 0
|   | `-ReturnStmt 0x14a0271c0 <line:8:3, col:11>
|   |   `-UnaryOperator 0x14a0271a8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |     `-ImplicitCastExpr 0x14a027190 <col:11> '<dependent type>' contains-errors <LValueToRValue>
|   |       `-RecoveryExpr 0x14a027170 <col:11> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x14a027428 <line:10:2, col:41> 'char *' contains-errors '='
|   | |-DeclRefExpr 0x14a0271f0 <col:2> 'char *' lvalue Var 0x14a026c08 'cp' 'char *'
|   | `-CallExpr 0x14a0273f8 <col:7, col:41> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x14a0272f0 <col:7> 'int ()' Function 0x14a027238 'kstrdup' 'int ()'
|   |   |-RecoveryExpr 0x14a027348 <col:15, col:20> '<dependent type>' contains-errors lvalue
|   |   | `-DeclRefExpr 0x14a027310 <col:15> 'struct smack_known *' lvalue Var 0x14a026948 'skp' 'struct smack_known *'
|   |   `-RecoveryExpr 0x14a0273d8 <col:31> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x14a027588 <line:11:2, line:12:11>
|   | |-BinaryOperator 0x14a0274c0 <line:11:6, col:12> 'int' contains-errors '=='
|   | | |-DeclRefExpr 0x14a027448 <col:6> 'char *' lvalue Var 0x14a026c08 'cp' 'char *'
|   | | `-RecoveryExpr 0x14a0274a0 <col:12> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x14a027578 <line:12:3, col:11>
|   |   `-UnaryOperator 0x14a027560 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |     `-ImplicitCastExpr 0x14a027548 <col:11> '<dependent type>' contains-errors <LValueToRValue>
|   |       `-RecoveryExpr 0x14a027528 <col:11> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x14b808eb8 <line:14:2, col:18> 'int' '='
|   | |-DeclRefExpr 0x14a0275a8 <col:2> 'int' lvalue Var 0x14a026ca0 'slen' 'int'
|   | `-ImplicitCastExpr 0x14b808ea0 <col:9, col:18> 'int' <IntegralCast>
|   |   `-CallExpr 0x14b808e48 <col:9, col:18> 'unsigned long'
|   |     |-ImplicitCastExpr 0x14b808e30 <col:9> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x14b808da8 <col:9> 'unsigned long (const char *)' Function 0x14b808c38 'strlen' 'unsigned long (const char *)'
|   |     `-ImplicitCastExpr 0x14b808e88 <col:16> 'const char *' <NoOp>
|   |       `-ImplicitCastExpr 0x14b808e70 <col:16> 'char *' <LValueToRValue>
|   |         `-DeclRefExpr 0x14b808dc8 <col:16> 'char *' lvalue Var 0x14a026c08 'cp' 'char *'
|   |-BinaryOperator 0x14b808f60 <line:15:2, col:11> 'char *' '='
|   | |-UnaryOperator 0x14b808f10 <col:2, col:3> 'char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x14b808ef8 <col:3> 'char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x14b808ed8 <col:3> 'char **' lvalue ParmVar 0x14a00e378 'value' 'char **'
|   | `-ImplicitCastExpr 0x14b808f48 <col:11> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x14b808f28 <col:11> 'char *' lvalue Var 0x14a026c08 'cp' 'char *'
|   `-ReturnStmt 0x14b808fb8 <line:16:2, col:9>
|     `-ImplicitCastExpr 0x14b808fa0 <col:9> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x14b808f80 <col:9> 'int' lvalue Var 0x14a026ca0 'slen' 'int'
|-FunctionDecl 0x14a026d60 <line:7:6> col:6 implicit used strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x14a026e60 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x14a026ec8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x14a026e08 <<invalid sloc>> Implicit 887
`-FunctionDecl 0x14b808c38 <line:14:9> col:9 implicit used strlen 'unsigned long (const char *)' extern
  |-ParmVarDecl 0x14b808d38 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x14b808ce0 <<invalid sloc>> Implicit 902
