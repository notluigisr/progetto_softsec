TranslationUnitDecl 0x151055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1510564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x151055bd0 '__int128'
|-TypedefDecl 0x151056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x151055bf0 'unsigned __int128'
|-TypedefDecl 0x151126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x151126000 'struct __NSConstantString_tag'
|   `-Record 0x151056580 '__NSConstantString_tag'
|-TypedefDecl 0x151126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x151055d90 '__SVInt8_t'
|-TypedefDecl 0x151126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x151055db0 '__SVInt16_t'
|-TypedefDecl 0x151126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x151055dd0 '__SVInt32_t'
|-TypedefDecl 0x1511263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x151055df0 '__SVInt64_t'
|-TypedefDecl 0x151126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x151055e10 '__SVUint8_t'
|-TypedefDecl 0x1511264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x151055e30 '__SVUint16_t'
|-TypedefDecl 0x151126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x151055e50 '__SVUint32_t'
|-TypedefDecl 0x151126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x151055e70 '__SVUint64_t'
|-TypedefDecl 0x1511265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x151055e90 '__SVFloat16_t'
|-TypedefDecl 0x151126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x151055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1511266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x151055ed0 '__SVFloat64_t'
|-TypedefDecl 0x151126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x151055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x151126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x151055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1511267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x151055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x151126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x151055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1511268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x151055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x151126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x151055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x151126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x151055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1511269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x151055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x151126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x151055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x151126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x151056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x151126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x151056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x151126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x151056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x151126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x151056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x151126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x151056090 '__clang_svint8x3_t'
|-TypedefDecl 0x151126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1510560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x151126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1510560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x151126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1510560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x151126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x151056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x151126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x151056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x151126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x151056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x151126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x151056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x151126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x151056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x151127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1510561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x151127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1510561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1511278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1510561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x151127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x151056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1511279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x151056230 '__clang_svint16x4_t'
|-TypedefDecl 0x151127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x151056250 '__clang_svint32x4_t'
|-TypedefDecl 0x151127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x151056270 '__clang_svint64x4_t'
|-TypedefDecl 0x151127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x151056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x151127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1510562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x151127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1510562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x151127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1510562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x151127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x151056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x151127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x151056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x151127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x151056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x151127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x151056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x151127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x151056390 '__SVBool_t'
|-TypedefDecl 0x151127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1510563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x151127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1510563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x151127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1510563f0 '__SVCount_t'
|-TypedefDecl 0x151127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x151127fb0 'char *'
|   `-BuiltinType 0x1510556b0 'char'
|-TypedefDecl 0x151128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x151127fb0 'char *'
|   `-BuiltinType 0x1510556b0 'char'
|-FunctionDecl 0x1511281a8 <dataset_diviso_filec/func16892_vuln.c:1:1, line:43:1> line:1:1 resp_new 'int (const char *)'
| |-ParmVarDecl 0x1511280d8 <col:11, col:23> col:23 used head 'const char *'
| `-CompoundStmt 0x151143980 <line:2:1, line:43:1>
|   |-DeclStmt 0x151128320 <line:3:3, col:18>
|   | `-VarDecl 0x1511282b8 <col:3, col:15> col:15 used hdr 'const char *'
|   |-DeclStmt 0x151128450 <line:4:3, col:18>
|   | |-VarDecl 0x151128350 <col:3, col:7> col:7 used count 'int'
|   | `-VarDecl 0x1511283d0 <col:3, col:14> col:14 used size 'int'
|   |-DeclStmt 0x1511287a8 <line:6:3, col:50>
|   | |-RecordDecl 0x151128468 <col:3, col:10> col:10 struct response
|   | `-VarDecl 0x1511285d8 <col:3, col:20> col:20 used resp 'struct response *'
|   |-BinaryOperator 0x151140e68 <line:7:3, col:16> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x151140e20 <col:3, col:9> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x1511287c0 <col:3> 'struct response *' lvalue Var 0x1511285d8 'resp' 'struct response *'
|   | `-DeclRefExpr 0x151140e48 <col:16> 'const char *' lvalue ParmVar 0x1511280d8 'head' 'const char *'
|   |-IfStmt 0x151140fb8 <line:9:3, line:13:5>
|   | |-BinaryOperator 0x151140f20 <line:9:7, col:16> 'int' '=='
|   | | |-ImplicitCastExpr 0x151140f08 <col:7, col:8> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x151140ef0 <col:7, col:8> 'char' <LValueToRValue>
|   | | |   `-UnaryOperator 0x151140ec0 <col:7, col:8> 'const char' lvalue prefix '*' cannot overflow
|   | | |     `-ImplicitCastExpr 0x151140ea8 <col:8> 'const char *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x151140e88 <col:8> 'const char *' lvalue ParmVar 0x1511280d8 'head' 'const char *'
|   | | `-CharacterLiteral 0x151140ed8 <col:16> 'int' 0
|   | `-CompoundStmt 0x151140fa0 <line:10:5, line:13:5>
|   |   `-ReturnStmt 0x151140f90 <line:12:7, col:14>
|   |     `-ImplicitCastExpr 0x151140f78 <col:14> 'int' <PointerToIntegral>
|   |       `-ImplicitCastExpr 0x151140f60 <col:14> 'struct response *' <LValueToRValue>
|   |         `-DeclRefExpr 0x151140f40 <col:14> 'struct response *' lvalue Var 0x1511285d8 'resp' 'struct response *'
|   |-BinaryOperator 0x151141058 <line:17:3, col:18> 'int' '='
|   | |-DeclRefExpr 0x151140fd8 <col:3> 'int' lvalue Var 0x1511283d0 'size' 'int'
|   | `-BinaryOperator 0x151141038 <col:10, col:18> 'int' '='
|   |   |-DeclRefExpr 0x151140ff8 <col:10> 'int' lvalue Var 0x151128350 'count' 'int'
|   |   `-IntegerLiteral 0x151141018 <col:18> 'int' 0
|   |-BinaryOperator 0x1511410d0 <line:18:3, col:9> 'const char *' '='
|   | |-DeclRefExpr 0x151141078 <col:3> 'const char *' lvalue Var 0x1511282b8 'hdr' 'const char *'
|   | `-ImplicitCastExpr 0x1511410b8 <col:9> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x151141098 <col:9> 'const char *' lvalue ParmVar 0x1511280d8 'head' 'const char *'
|   |-WhileStmt 0x151143600 <line:19:3, line:38:5>
|   | |-IntegerLiteral 0x1511410f0 <line:19:10> 'int' 1
|   | `-CompoundStmt 0x1511435d8 <line:20:5, line:38:5>
|   |   |-BinaryOperator 0x1511413f8 <line:22:7, col:32> '<dependent type>' contains-errors '='
|   |   | |-ArraySubscriptExpr 0x1511413b8 <col:7, col:28> '<dependent type>' contains-errors lvalue
|   |   | | |-ImplicitCastExpr 0x1511413a0 <col:7, col:13> '<dependent type>' contains-errors <LValueToRValue>
|   |   | | | `-RecoveryExpr 0x151141340 <col:7, col:13> '<dependent type>' contains-errors lvalue
|   |   | | |   `-DeclRefExpr 0x151141308 <col:7> 'struct response *' lvalue Var 0x1511285d8 'resp' 'struct response *'
|   |   | | `-UnaryOperator 0x151141388 <col:21, col:26> 'int' postfix '++'
|   |   | |   `-DeclRefExpr 0x151141368 <col:21> 'int' lvalue Var 0x151128350 'count' 'int'
|   |   | `-DeclRefExpr 0x1511413d8 <col:32> 'const char *' lvalue Var 0x1511282b8 'hdr' 'const char *'
|   |   |-IfStmt 0x1511417e8 <line:25:7, line:26:9>
|   |   | |-BinaryOperator 0x1511417c0 <line:25:11, col:70> 'int' '||'
|   |   | | |-BinaryOperator 0x1511416c0 <col:11, col:55> 'int' '||'
|   |   | | | |-UnaryOperator 0x1511414a8 <col:11, col:17> 'int' prefix '!' cannot overflow
|   |   | | | | `-ImplicitCastExpr 0x151141490 <col:12, col:17> 'char' <LValueToRValue>
|   |   | | | |   `-ArraySubscriptExpr 0x151141470 <col:12, col:17> 'const char' lvalue
|   |   | | | |     |-ImplicitCastExpr 0x151141458 <col:12> 'const char *' <LValueToRValue>
|   |   | | | |     | `-DeclRefExpr 0x151141418 <col:12> 'const char *' lvalue Var 0x1511282b8 'hdr' 'const char *'
|   |   | | | |     `-IntegerLiteral 0x151141438 <col:16> 'int' 0
|   |   | | | `-ParenExpr 0x1511416a0 <col:22, col:55> 'int'
|   |   | | |   `-BinaryOperator 0x151141680 <col:23, col:51> 'int' '&&'
|   |   | | |     |-BinaryOperator 0x151141580 <col:23, col:33> 'int' '=='
|   |   | | |     | |-ImplicitCastExpr 0x151141568 <col:23, col:28> 'int' <IntegralCast>
|   |   | | |     | | `-ImplicitCastExpr 0x151141550 <col:23, col:28> 'char' <LValueToRValue>
|   |   | | |     | |   `-ArraySubscriptExpr 0x151141518 <col:23, col:28> 'const char' lvalue
|   |   | | |     | |     |-ImplicitCastExpr 0x151141500 <col:23> 'const char *' <LValueToRValue>
|   |   | | |     | |     | `-DeclRefExpr 0x1511414c0 <col:23> 'const char *' lvalue Var 0x1511282b8 'hdr' 'const char *'
|   |   | | |     | |     `-IntegerLiteral 0x1511414e0 <col:27> 'int' 0
|   |   | | |     | `-CharacterLiteral 0x151141538 <col:33> 'int' 13
|   |   | | |     `-BinaryOperator 0x151141660 <col:41, col:51> 'int' '=='
|   |   | | |       |-ImplicitCastExpr 0x151141648 <col:41, col:46> 'int' <IntegralCast>
|   |   | | |       | `-ImplicitCastExpr 0x151141630 <col:41, col:46> 'char' <LValueToRValue>
|   |   | | |       |   `-ArraySubscriptExpr 0x1511415f8 <col:41, col:46> 'const char' lvalue
|   |   | | |       |     |-ImplicitCastExpr 0x1511415e0 <col:41> 'const char *' <LValueToRValue>
|   |   | | |       |     | `-DeclRefExpr 0x1511415a0 <col:41> 'const char *' lvalue Var 0x1511282b8 'hdr' 'const char *'
|   |   | | |       |     `-IntegerLiteral 0x1511415c0 <col:45> 'int' 1
|   |   | | |       `-CharacterLiteral 0x151141618 <col:51> 'int' 10
|   |   | | `-BinaryOperator 0x1511417a0 <col:60, col:70> 'int' '=='
|   |   | |   |-ImplicitCastExpr 0x151141788 <col:60, col:65> 'int' <IntegralCast>
|   |   | |   | `-ImplicitCastExpr 0x151141770 <col:60, col:65> 'char' <LValueToRValue>
|   |   | |   |   `-ArraySubscriptExpr 0x151141738 <col:60, col:65> 'const char' lvalue
|   |   | |   |     |-ImplicitCastExpr 0x151141720 <col:60> 'const char *' <LValueToRValue>
|   |   | |   |     | `-DeclRefExpr 0x1511416e0 <col:60> 'const char *' lvalue Var 0x1511282b8 'hdr' 'const char *'
|   |   | |   |     `-IntegerLiteral 0x151141700 <col:64> 'int' 0
|   |   | |   `-CharacterLiteral 0x151141758 <col:70> 'int' 10
|   |   | `-BreakStmt 0x1511417e0 <line:26:9>
|   |   `-DoStmt 0x1511435b8 <line:29:7, line:37:41>
|   |     |-CompoundStmt 0x151143408 <line:30:9, line:36:9>
|   |     | |-DeclStmt 0x151142ff8 <line:31:11, col:47>
|   |     | | `-VarDecl 0x151141820 <col:11, col:46> col:23 used end 'const char *' cinit
|   |     | |   `-ImplicitCastExpr 0x151142fe0 <col:29, col:46> 'const char *' <NoOp>
|   |     | |     `-CallExpr 0x151142f98 <col:29, col:46> 'char *'
|   |     | |       |-ImplicitCastExpr 0x151142f80 <col:29> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   |     | |       | `-DeclRefExpr 0x151142ee0 <col:29> 'char *(const char *, int)' Function 0x1511418d0 'strchr' 'char *(const char *, int)'
|   |     | |       |-ImplicitCastExpr 0x151142fc8 <col:37> 'const char *' <LValueToRValue>
|   |     | |       | `-DeclRefExpr 0x151142f00 <col:37> 'const char *' lvalue Var 0x1511282b8 'hdr' 'const char *'
|   |     | |       `-CharacterLiteral 0x151142f20 <col:42> 'int' 10
|   |     | `-IfStmt 0x1511433d8 <line:32:11, line:35:31> has_else
|   |     |   |-ImplicitCastExpr 0x151143030 <line:32:15> 'const char *' <LValueToRValue>
|   |     |   | `-DeclRefExpr 0x151143010 <col:15> 'const char *' lvalue Var 0x151141820 'end' 'const char *'
|   |     |   |-BinaryOperator 0x1511430e0 <line:33:13, col:25> 'const char *' '='
|   |     |   | |-DeclRefExpr 0x151143048 <col:13> 'const char *' lvalue Var 0x1511282b8 'hdr' 'const char *'
|   |     |   | `-BinaryOperator 0x1511430c0 <col:19, col:25> 'const char *' '+'
|   |     |   |   |-ImplicitCastExpr 0x1511430a8 <col:19> 'const char *' <LValueToRValue>
|   |     |   |   | `-DeclRefExpr 0x151143068 <col:19> 'const char *' lvalue Var 0x151141820 'end' 'const char *'
|   |     |   |   `-IntegerLiteral 0x151143088 <col:25> 'int' 1
|   |     |   `-CompoundAssignOperator 0x1511433a8 <line:35:13, col:31> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'
|   |     |     |-DeclRefExpr 0x151143100 <col:13> 'const char *' lvalue Var 0x1511282b8 'hdr' 'const char *'
|   |     |     `-CallExpr 0x151143368 <col:20, col:31> 'unsigned long'
|   |     |       |-ImplicitCastExpr 0x151143350 <col:20> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |     |       | `-DeclRefExpr 0x1511432c8 <col:20> 'unsigned long (const char *)' Function 0x151143158 'strlen' 'unsigned long (const char *)'
|   |     |       `-ImplicitCastExpr 0x151143390 <col:28> 'const char *' <LValueToRValue>
|   |     |         `-DeclRefExpr 0x1511432e8 <col:28> 'const char *' lvalue Var 0x1511282b8 'hdr' 'const char *'
|   |     `-BinaryOperator 0x151143598 <line:37:14, col:37> 'int' '||'
|   |       |-BinaryOperator 0x1511434c0 <col:14, col:22> 'int' '=='
|   |       | |-ImplicitCastExpr 0x1511434a8 <col:14, col:15> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x151143490 <col:14, col:15> 'char' <LValueToRValue>
|   |       | |   `-UnaryOperator 0x151143460 <col:14, col:15> 'const char' lvalue prefix '*' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x151143448 <col:15> 'const char *' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x151143428 <col:15> 'const char *' lvalue Var 0x1511282b8 'hdr' 'const char *'
|   |       | `-CharacterLiteral 0x151143478 <col:22> 'int' 32
|   |       `-BinaryOperator 0x151143578 <col:29, col:37> 'int' '=='
|   |         |-ImplicitCastExpr 0x151143560 <col:29, col:30> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x151143548 <col:29, col:30> 'char' <LValueToRValue>
|   |         |   `-UnaryOperator 0x151143518 <col:29, col:30> 'const char' lvalue prefix '*' cannot overflow
|   |         |     `-ImplicitCastExpr 0x151143500 <col:30> 'const char *' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x1511434e0 <col:30> 'const char *' lvalue Var 0x1511282b8 'hdr' 'const char *'
|   |         `-CharacterLiteral 0x151143530 <col:37> 'int' 9
|   |-BinaryOperator 0x151143900 <line:40:3, col:26> '<dependent type>' contains-errors '='
|   | |-ArraySubscriptExpr 0x1511438c0 <col:3, col:22> '<dependent type>' contains-errors lvalue
|   | | |-ImplicitCastExpr 0x151143890 <col:3, col:9> '<dependent type>' contains-errors <LValueToRValue>
|   | | | `-RecoveryExpr 0x151143770 <col:3, col:9> '<dependent type>' contains-errors lvalue
|   | | |   `-DeclRefExpr 0x151143738 <col:3> 'struct response *' lvalue Var 0x1511285d8 'resp' 'struct response *'
|   | | `-ImplicitCastExpr 0x1511438a8 <col:17> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x151143798 <col:17> 'int' lvalue Var 0x151128350 'count' 'int'
|   | `-RecoveryExpr 0x1511438e0 <col:26> '<dependent type>' contains-errors lvalue
|   `-ReturnStmt 0x151143970 <line:42:3, col:10>
|     `-ImplicitCastExpr 0x151143958 <col:10> 'int' <PointerToIntegral>
|       `-ImplicitCastExpr 0x151143940 <col:10> 'struct response *' <LValueToRValue>
|         `-DeclRefExpr 0x151143920 <col:10> 'struct response *' lvalue Var 0x1511285d8 'resp' 'struct response *'
|-FunctionDecl 0x1511418d0 <line:31:29> col:29 implicit used strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x151142e00 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x151142e68 <<invalid sloc>> <invalid sloc> 'int'
| `-BuiltinAttr 0x151141978 <<invalid sloc>> Implicit 893
`-FunctionDecl 0x151143158 <line:35:20> col:20 implicit used strlen 'unsigned long (const char *)' extern
  |-ParmVarDecl 0x151143258 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x151143200 <<invalid sloc>> Implicit 902
