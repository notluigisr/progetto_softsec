TranslationUnitDecl 0x14e055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14e0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14e055bd0 '__int128'
|-TypedefDecl 0x14e056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14e055bf0 'unsigned __int128'
|-TypedefDecl 0x14e126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14e126000 'struct __NSConstantString_tag'
|   `-Record 0x14e056580 '__NSConstantString_tag'
|-TypedefDecl 0x14e126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14e055d90 '__SVInt8_t'
|-TypedefDecl 0x14e126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14e055db0 '__SVInt16_t'
|-TypedefDecl 0x14e126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14e055dd0 '__SVInt32_t'
|-TypedefDecl 0x14e1263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14e055df0 '__SVInt64_t'
|-TypedefDecl 0x14e126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14e055e10 '__SVUint8_t'
|-TypedefDecl 0x14e1264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14e055e30 '__SVUint16_t'
|-TypedefDecl 0x14e126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14e055e50 '__SVUint32_t'
|-TypedefDecl 0x14e126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14e055e70 '__SVUint64_t'
|-TypedefDecl 0x14e1265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14e055e90 '__SVFloat16_t'
|-TypedefDecl 0x14e126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14e055eb0 '__SVFloat32_t'
|-TypedefDecl 0x14e1266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14e055ed0 '__SVFloat64_t'
|-TypedefDecl 0x14e126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14e055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14e126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14e055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14e1267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14e055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14e126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14e055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14e1268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14e055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14e126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14e055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14e126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14e055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14e1269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14e055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14e126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14e055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14e126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14e056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14e126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14e056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14e126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14e056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14e126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14e056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14e126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14e056090 '__clang_svint8x3_t'
|-TypedefDecl 0x14e126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14e0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14e126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14e0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14e126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14e0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14e126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14e056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14e126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14e056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14e126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14e056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14e126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14e056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14e126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14e056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14e127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14e0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14e127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14e0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14e1278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14e0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14e127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14e056210 '__clang_svint8x4_t'
|-TypedefDecl 0x14e1279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14e056230 '__clang_svint16x4_t'
|-TypedefDecl 0x14e127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14e056250 '__clang_svint32x4_t'
|-TypedefDecl 0x14e127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14e056270 '__clang_svint64x4_t'
|-TypedefDecl 0x14e127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14e056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14e127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14e0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14e127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14e0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14e127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14e0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14e127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14e056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14e127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14e056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14e127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14e056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14e127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14e056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14e127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14e056390 '__SVBool_t'
|-TypedefDecl 0x14e127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14e0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14e127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14e0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14e127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14e0563f0 '__SVCount_t'
|-TypedefDecl 0x14e127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14e127fb0 'char *'
|   `-BuiltinType 0x14e0556b0 'char'
|-TypedefDecl 0x14e128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14e127fb0 'char *'
|   `-BuiltinType 0x14e0556b0 'char'
`-FunctionDecl 0x14e140c08 <dataset_diviso_filec/func9408_vuln.c:1:1, line:21:1> line:1:12 invalid ceph_x_decrypt 'int (struct ceph_crypto_key *, void **, void *, void *, int)' static
  |-ParmVarDecl 0x14e128648 <col:27, col:51> col:51 used secret 'struct ceph_crypto_key *'
  |-ParmVarDecl 0x14e1286f8 <line:2:6, col:13> col:13 used p 'void **'
  |-ParmVarDecl 0x14e128778 <col:16, col:22> col:22 used end 'void *'
  |-ParmVarDecl 0x14e140a00 <col:27, col:33> col:33 used obuf 'void *'
  |-ParmVarDecl 0x14e140a98 <col:39, col:46> col:46 invalid olen 'int'
  `-CompoundStmt 0x14e142e40 <line:3:1, line:21:1>
    |-DeclStmt 0x14e140e58 <line:4:2, col:35>
    | |-RecordDecl 0x14e140cd8 <col:2, col:9> col:9 struct ceph_x_encrypt_header
    | `-VarDecl 0x14e140dd8 <col:2, col:31> col:31 invalid head 'struct ceph_x_encrypt_header'
    |-RecoveryExpr 0x14e140f90 <line:5:2, col:31> '<dependent type>' contains-errors lvalue
    | |-UnaryExprOrTypeTraitExpr 0x14e140f70 <col:2, col:9> 'unsigned long' contains-errors sizeof
    | | `-RecoveryExpr 0x14e140f50 <col:9> '<dependent type>' contains-errors lvalue
    | `-UnaryExprOrTypeTraitExpr 0x14e140ee8 <col:20, col:31> 'unsigned long' contains-errors sizeof
    |   `-ParenExpr 0x14e140ec8 <col:26, col:31> '<dependent type>' contains-errors lvalue
    |     `-RecoveryExpr 0x14e140ea8 <col:27> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x14e1410d8 <line:6:2, col:14>
    | |-VarDecl 0x14e140fd8 <col:2, col:6> col:6 used len 'int'
    | `-VarDecl 0x14e141058 <col:2, col:11> col:11 used ret 'int'
    |-BinaryOperator 0x14e141338 <line:8:2, col:24> 'int' '='
    | |-DeclRefExpr 0x14e1410f0 <col:2> 'int' lvalue Var 0x14e140fd8 'len' 'int'
    | `-CallExpr 0x14e1412f8 <col:8, col:24> 'int'
    |   |-ImplicitCastExpr 0x14e1412e0 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x14e141270 <col:8> 'int ()' Function 0x14e1411b8 'ceph_decode_32' 'int ()'
    |   `-ImplicitCastExpr 0x14e141320 <col:23> 'void **' <LValueToRValue>
    |     `-DeclRefExpr 0x14e141290 <col:23> 'void **' lvalue ParmVar 0x14e1286f8 'p' 'void **'
    |-IfStmt 0x14e141518 <line:9:2, line:10:11>
    | |-BinaryOperator 0x14e141450 <line:9:6, col:17> 'int' '>'
    | | |-BinaryOperator 0x14e1413f8 <col:6, col:11> 'void *' '+'
    | | | |-ImplicitCastExpr 0x14e1413c8 <col:6, col:7> 'void *' <LValueToRValue>
    | | | | `-UnaryOperator 0x14e141390 <col:6, col:7> 'void *' lvalue prefix '*' cannot overflow
    | | | |   `-ImplicitCastExpr 0x14e141378 <col:7> 'void **' <LValueToRValue>
    | | | |     `-DeclRefExpr 0x14e141358 <col:7> 'void **' lvalue ParmVar 0x14e1286f8 'p' 'void **'
    | | | `-ImplicitCastExpr 0x14e1413e0 <col:11> 'int' <LValueToRValue>
    | | |   `-DeclRefExpr 0x14e1413a8 <col:11> 'int' lvalue Var 0x14e140fd8 'len' 'int'
    | | `-ImplicitCastExpr 0x14e141438 <col:17> 'void *' <LValueToRValue>
    | |   `-DeclRefExpr 0x14e141418 <col:17> 'void *' lvalue ParmVar 0x14e128778 'end' 'void *'
    | `-ReturnStmt 0x14e141508 <line:10:3, col:11>
    |   `-UnaryOperator 0x14e1414f0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x14e1414d8 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x14e1414b8 <col:11> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x14e1416d8 <line:12:2, col:17> 'int'
    | |-ImplicitCastExpr 0x14e1416c0 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x14e141618 <col:2> 'int ()' Function 0x14e141560 'dout' 'int ()'
    | |-ImplicitCastExpr 0x14e141708 <col:7> 'char *' <ArrayToPointerDecay>
    | | `-StringLiteral 0x14e141680 <col:7> 'char[4]' lvalue "STR"
    | `-ImplicitCastExpr 0x14e141720 <col:14> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x14e1416a0 <col:14> 'int' lvalue Var 0x14e140fd8 'len' 'int'
    |-BinaryOperator 0x14e1428e0 <line:13:2, line:14:15> 'int' contains-errors '='
    | |-DeclRefExpr 0x14e141738 <line:13:2> 'int' lvalue Var 0x14e141058 'ret' 'int'
    | `-CallExpr 0x14e142888 <col:8, line:14:15> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14e141838 <line:13:8> 'int ()' Function 0x14e141780 'ceph_decrypt2' 'int ()'
    |   |-DeclRefExpr 0x14e141858 <col:22> 'struct ceph_crypto_key *' lvalue ParmVar 0x14e128648 'secret' 'struct ceph_crypto_key *'
    |   |-UnaryOperator 0x14e141898 <col:30, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-RecoveryExpr 0x14e141878 <col:31> '<dependent type>' contains-errors lvalue
    |   |-UnaryOperator 0x14e142840 <col:37, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-RecoveryExpr 0x14e142820 <col:38> '<dependent type>' contains-errors lvalue
    |   |-DeclRefExpr 0x14e1418e0 <col:48> 'void *' lvalue ParmVar 0x14e140a00 'obuf' 'void *'
    |   |-UnaryOperator 0x14e141920 <col:54, col:55> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-RecoveryExpr 0x14e141900 <col:55> '<dependent type>' contains-errors lvalue
    |   |-UnaryOperator 0x14e142870 <line:14:8, col:9> 'void *' lvalue prefix '*' cannot overflow
    |   | `-ImplicitCastExpr 0x14e142858 <col:9> 'void **' <LValueToRValue>
    |   |   `-DeclRefExpr 0x14e141938 <col:9> 'void **' lvalue ParmVar 0x14e1286f8 'p' 'void **'
    |   `-DeclRefExpr 0x14e141988 <col:12> 'int' lvalue Var 0x14e140fd8 'len' 'int'
    |-IfStmt 0x14e142980 <line:15:2, line:16:10>
    | |-ImplicitCastExpr 0x14e142920 <line:15:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x14e142900 <col:6> 'int' lvalue Var 0x14e141058 'ret' 'int'
    | `-ReturnStmt 0x14e142970 <line:16:3, col:10>
    |   `-ImplicitCastExpr 0x14e142958 <col:10> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x14e142938 <col:10> 'int' lvalue Var 0x14e141058 'ret' 'int'
    |-IfStmt 0x14e142d38 <line:17:2, line:18:11>
    | |-BinaryOperator 0x14e142c70 <line:17:6, col:55> 'int' contains-errors '||'
    | | |-BinaryOperator 0x14e142a28 <col:6, col:23> 'int' contains-errors '!='
    | | | |-CXXDependentScopeMemberExpr 0x14e1429c0 <col:6, col:11> '<dependent type>' contains-errors lvalue .struct_v
    | | | | `-RecoveryExpr 0x14e1429a0 <col:6> '<dependent type>' contains-errors lvalue
    | | | `-IntegerLiteral 0x14e142a08 <col:23> 'int' 1
    | | `-BinaryOperator 0x14e142c50 <col:28, col:55> 'int' contains-errors '!='
    | |   |-CallExpr 0x14e142bb0 <col:28, col:50> '<dependent type>' contains-errors
    | |   | |-DeclRefExpr 0x14e142b28 <col:28> 'int ()' Function 0x14e142a70 'le64_to_cpu' 'int ()'
    | |   | `-CXXDependentScopeMemberExpr 0x14e142b68 <col:40, col:45> '<dependent type>' contains-errors lvalue .magic
    | |   |   `-RecoveryExpr 0x14e142b48 <col:40> '<dependent type>' contains-errors lvalue
    | |   `-RecoveryExpr 0x14e142c30 <col:55> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x14e142d28 <line:18:3, col:11>
    |   `-UnaryOperator 0x14e142d10 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x14e142cf8 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x14e142cd8 <col:11> '<dependent type>' contains-errors lvalue
    |-CompoundAssignOperator 0x14e142de0 <line:19:2, col:8> 'void *' '+=' ComputeLHSTy='void *' ComputeResultTy='void *'
    | |-UnaryOperator 0x14e142d90 <col:2, col:3> 'void *' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x14e142d78 <col:3> 'void **' <LValueToRValue>
    | |   `-DeclRefExpr 0x14e142d58 <col:3> 'void **' lvalue ParmVar 0x14e1286f8 'p' 'void **'
    | `-ImplicitCastExpr 0x14e142dc8 <col:8> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x14e142da8 <col:8> 'int' lvalue Var 0x14e140fd8 'len' 'int'
    `-ReturnStmt 0x14e142e30 <line:20:2, col:9>
      `-RecoveryExpr 0x14e142e10 <col:9> '<dependent type>' contains-errors lvalue
