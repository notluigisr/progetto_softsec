TranslationUnitDecl 0x147855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1478564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x147855bd0 '__int128'
|-TypedefDecl 0x147856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x147855bf0 'unsigned __int128'
|-TypedefDecl 0x15000be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15000bc00 'struct __NSConstantString_tag'
|   `-Record 0x147856580 '__NSConstantString_tag'
|-TypedefDecl 0x15000be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x147855d90 '__SVInt8_t'
|-TypedefDecl 0x15000bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x147855db0 '__SVInt16_t'
|-TypedefDecl 0x15000bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x147855dd0 '__SVInt32_t'
|-TypedefDecl 0x15000bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x147855df0 '__SVInt64_t'
|-TypedefDecl 0x15000c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x147855e10 '__SVUint8_t'
|-TypedefDecl 0x15000c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x147855e30 '__SVUint16_t'
|-TypedefDecl 0x15000c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x147855e50 '__SVUint32_t'
|-TypedefDecl 0x15000c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x147855e70 '__SVUint64_t'
|-TypedefDecl 0x15000c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x147855e90 '__SVFloat16_t'
|-TypedefDecl 0x15000c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x147855eb0 '__SVFloat32_t'
|-TypedefDecl 0x15000c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x147855ed0 '__SVFloat64_t'
|-TypedefDecl 0x15000c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x147855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15000c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x147855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15000c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x147855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15000c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x147855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15000c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x147855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15000c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x147855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15000c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x147855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15000c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x147855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15000c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x147855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15000c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x147856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15000c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x147856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15000c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x147856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15000c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x147856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15000c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x147856090 '__clang_svint8x3_t'
|-TypedefDecl 0x15000c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1478560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15000c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1478560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15000c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1478560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15000c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x147856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15000ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x147856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15000cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x147856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15000cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x147856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15000cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x147856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15000d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1478561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15000d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1478561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15000d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1478561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15000d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x147856210 '__clang_svint8x4_t'
|-TypedefDecl 0x15000d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x147856230 '__clang_svint16x4_t'
|-TypedefDecl 0x15000d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x147856250 '__clang_svint32x4_t'
|-TypedefDecl 0x15000d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x147856270 '__clang_svint64x4_t'
|-TypedefDecl 0x15000d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x147856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15000d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1478562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15000d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1478562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15000d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1478562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15000d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x147856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15000d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x147856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15000d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x147856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15000d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x147856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15000da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x147856390 '__SVBool_t'
|-TypedefDecl 0x15000da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1478563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15000dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1478563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15000db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1478563f0 '__SVCount_t'
|-TypedefDecl 0x15000dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15000dbb0 'char *'
|   `-BuiltinType 0x1478556b0 'char'
|-TypedefDecl 0x15000dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15000dbb0 'char *'
|   `-BuiltinType 0x1478556b0 'char'
|-FunctionDecl 0x15000de88 <dataset_diviso_filec/func1951_vuln.c:1:1, line:43:1> line:1:1 invalid httpHdrContRangeParseInit 'int (int *, const char *)'
| |-ParmVarDecl 0x15000dd28 <col:27, col:46> col:46 referenced invalid range 'int *'
| |-ParmVarDecl 0x15000dda8 <col:53, col:65> col:65 used str 'const char *'
| `-CompoundStmt 0x15002b8e8 <line:2:1, line:43:1>
|   |-DeclStmt 0x15000dfc0 <line:3:5, col:18>
|   | `-VarDecl 0x15000df58 <col:5, col:17> col:17 used p 'const char *'
|   |-CallExpr 0x15000e1b0 <line:4:5, col:24> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x15000e130 <col:5> 'int ()' Function 0x15000e078 'assert' 'int ()'
|   | `-BinaryOperator 0x15000e190 <col:12, col:21> 'int' contains-errors '&&'
|   |   |-RecoveryExpr 0x15000e150 <col:12> '<dependent type>' contains-errors lvalue
|   |   `-DeclRefExpr 0x15000e170 <col:21> 'const char *' lvalue ParmVar 0x15000dda8 'str' 'const char *'
|   |-CallExpr 0x15000e3c8 <line:5:5, col:24> 'int'
|   | |-ImplicitCastExpr 0x15000e3b0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x15000e2b8 <col:5> 'int ()' Function 0x15000e200 'debugs' 'int ()'
|   | |-IntegerLiteral 0x15000e2d8 <col:12> 'int' 68
|   | |-IntegerLiteral 0x15000e2f8 <col:16> 'int' 8
|   | `-ImplicitCastExpr 0x150027400 <col:19> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x15000e360 <col:19> 'char[4]' lvalue "STR"
|   |-IfStmt 0x150027ca0 <line:8:5, line:9:16>
|   | |-CallExpr 0x150027bd8 <line:8:9, col:34> 'int'
|   | | |-ImplicitCastExpr 0x150027bc0 <col:9> 'int (*)(const char *, const char *, unsigned long)' <FunctionToPointerDecay>
|   | | | `-DeclRefExpr 0x150027ae0 <col:9> 'int (const char *, const char *, unsigned long)' Function 0x150027890 'strncasecmp' 'int (const char *, const char *, unsigned long)'
|   | | |-ImplicitCastExpr 0x150027c10 <col:21> 'const char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x150027b00 <col:21> 'const char *' lvalue ParmVar 0x15000dda8 'str' 'const char *'
|   | | |-ImplicitCastExpr 0x150027c40 <col:26> 'const char *' <NoOp>
|   | | | `-ImplicitCastExpr 0x150027c28 <col:26> 'char *' <ArrayToPointerDecay>
|   | | |   `-StringLiteral 0x150027b20 <col:26> 'char[4]' lvalue "STR"
|   | | `-ImplicitCastExpr 0x150027c58 <col:33> 'unsigned long' <IntegralCast>
|   | |   `-IntegerLiteral 0x150027b40 <col:33> 'int' 6
|   | `-ReturnStmt 0x150027c90 <line:9:9, col:16>
|   |   `-IntegerLiteral 0x150027c70 <col:16> 'int' 0
|   |-CompoundAssignOperator 0x150027d00 <line:11:5, col:12> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'
|   | |-DeclRefExpr 0x150027cc0 <col:5> 'const char *' lvalue ParmVar 0x15000dda8 'str' 'const char *'
|   | `-IntegerLiteral 0x150027ce0 <col:12> 'int' 6
|   |-IfStmt 0x150028110 <line:14:5, line:15:16>
|   | |-UnaryOperator 0x1500280c8 <line:14:9, col:31> 'int' prefix '!' cannot overflow
|   | | `-ParenExpr 0x1500280a8 <col:10, col:31> 'const char *'
|   | |   `-BinaryOperator 0x150028088 <col:11, col:30> 'const char *' '='
|   | |     |-DeclRefExpr 0x150027d30 <col:11> 'const char *' lvalue Var 0x15000df58 'p' 'const char *'
|   | |     `-ImplicitCastExpr 0x150028070 <col:15, col:30> 'const char *' <NoOp>
|   | |       `-CallExpr 0x150028028 <col:15, col:30> 'char *'
|   | |         |-ImplicitCastExpr 0x150028010 <col:15> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   | |         | `-DeclRefExpr 0x150027f70 <col:15> 'char *(const char *, int)' Function 0x150027d90 'strchr' 'char *(const char *, int)'
|   | |         |-ImplicitCastExpr 0x150028058 <col:22> 'const char *' <LValueToRValue>
|   | |         | `-DeclRefExpr 0x150027f90 <col:22> 'const char *' lvalue ParmVar 0x15000dda8 'str' 'const char *'
|   | |         `-CharacterLiteral 0x150027fb0 <col:27> 'int' 47
|   | `-ReturnStmt 0x150028100 <line:15:9, col:16>
|   |   `-IntegerLiteral 0x1500280e0 <col:16> 'int' 0
|   |-IfStmt 0x150029910 <line:17:5, line:20:16> has_else
|   | |-BinaryOperator 0x1500281c8 <line:17:9, col:17> 'int' '=='
|   | | |-ImplicitCastExpr 0x1500281b0 <col:9, col:10> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x150028198 <col:9, col:10> 'char' <LValueToRValue>
|   | | |   `-UnaryOperator 0x150028168 <col:9, col:10> 'const char' lvalue prefix '*' cannot overflow
|   | | |     `-ImplicitCastExpr 0x150028150 <col:10> 'const char *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x150028130 <col:10> 'const char *' lvalue ParmVar 0x15000dda8 'str' 'const char *'
|   | | `-CharacterLiteral 0x150028180 <col:17> 'int' 42
|   | |-BinaryOperator 0x150029620 <line:18:9, col:51> '<dependent type>' contains-errors '='
|   | | |-CXXDependentScopeMemberExpr 0x150028278 <col:9, col:21> '<dependent type>' contains-errors lvalue .offset
|   | | | `-CXXDependentScopeMemberExpr 0x150028230 <col:9, col:16> '<dependent type>' contains-errors lvalue ->spec
|   | | |   `-RecoveryExpr 0x150028208 <col:9> '<dependent type>' contains-errors lvalue
|   | | |     `-DeclRefExpr 0x1500281e8 <col:9> 'int *' lvalue ParmVar 0x15000dd28 'range' 'int *'
|   | | `-BinaryOperator 0x150029600 <col:30, col:51> '<dependent type>' contains-errors '='
|   | |   |-CXXDependentScopeMemberExpr 0x150028328 <col:30, col:42> '<dependent type>' contains-errors lvalue .length
|   | |   | `-CXXDependentScopeMemberExpr 0x1500282e0 <col:30, col:37> '<dependent type>' contains-errors lvalue ->spec
|   | |   |   `-RecoveryExpr 0x1500282c0 <col:30> '<dependent type>' contains-errors lvalue
|   | |   `-RecoveryExpr 0x1500283c8 <col:51> '<dependent type>' contains-errors lvalue
|   | `-IfStmt 0x1500298f0 <line:19:10, line:20:16>
|   |   |-UnaryOperator 0x1500298a8 <line:19:14, col:71> '<dependent type>' contains-errors prefix '!' cannot overflow
|   |   | `-CallExpr 0x150029870 <col:15, col:71> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x150029720 <col:15> 'int ()' Function 0x150029668 'httpHdrRangeRespSpecParseInit' 'int ()'
|   |   |   |-UnaryOperator 0x1500297a8 <col:45, col:53> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   |   | `-CXXDependentScopeMemberExpr 0x150029760 <col:46, col:53> '<dependent type>' contains-errors lvalue ->spec
|   |   |   |   `-RecoveryExpr 0x150029740 <col:46> '<dependent type>' contains-errors lvalue
|   |   |   |-DeclRefExpr 0x1500297c0 <col:59> 'const char *' lvalue ParmVar 0x15000dda8 'str' 'const char *'
|   |   |   `-BinaryOperator 0x150029850 <col:64, col:68> 'long' '-'
|   |   |     |-ImplicitCastExpr 0x150029820 <col:64> 'const char *' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x1500297e0 <col:64> 'const char *' lvalue Var 0x15000df58 'p' 'const char *'
|   |   |     `-ImplicitCastExpr 0x150029838 <col:68> 'const char *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x150029800 <col:68> 'const char *' lvalue ParmVar 0x15000dda8 'str' 'const char *'
|   |   `-ReturnStmt 0x1500298e0 <line:20:9, col:16>
|   |     `-IntegerLiteral 0x1500298c0 <col:16> 'int' 0
|   |-UnaryOperator 0x150029960 <line:22:5, col:7> 'const char *' prefix '++'
|   | `-DeclRefExpr 0x150029940 <col:7> 'const char *' lvalue Var 0x15000df58 'p' 'const char *'
|   |-IfStmt 0x15002a508 <line:24:5, line:35:5> has_else
|   | |-BinaryOperator 0x150029a10 <line:24:9, col:15> 'int' '=='
|   | | |-ImplicitCastExpr 0x1500299f8 <col:9, col:10> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x1500299e0 <col:9, col:10> 'char' <LValueToRValue>
|   | | |   `-UnaryOperator 0x1500299b0 <col:9, col:10> 'const char' lvalue prefix '*' cannot overflow
|   | | |     `-ImplicitCastExpr 0x150029998 <col:10> 'const char *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x150029978 <col:10> 'const char *' lvalue Var 0x15000df58 'p' 'const char *'
|   | | `-CharacterLiteral 0x1500299c8 <col:15> 'int' 42
|   | |-BinaryOperator 0x150029b18 <line:25:9, col:26> '<dependent type>' contains-errors '='
|   | | |-CXXDependentScopeMemberExpr 0x150029a78 <col:9, col:16> '<dependent type>' contains-errors lvalue ->elength
|   | | | `-RecoveryExpr 0x150029a50 <col:9> '<dependent type>' contains-errors lvalue
|   | | |   `-DeclRefExpr 0x150029a30 <col:9> 'int *' lvalue ParmVar 0x15000dd28 'range' 'int *'
|   | | `-RecoveryExpr 0x150029af8 <col:26> '<dependent type>' contains-errors lvalue
|   | `-IfStmt 0x15002a4d8 <line:26:10, line:35:5> has_else
|   |   |-UnaryOperator 0x150029d08 <line:26:14, col:55> '<dependent type>' contains-errors prefix '!' cannot overflow
|   |   | `-CallExpr 0x150029cd8 <col:15, col:55> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x150029c18 <col:15> 'int ()' Function 0x150029b60 'httpHeaderParseOffset' 'int ()'
|   |   |   |-DeclRefExpr 0x150029c38 <col:37> 'const char *' lvalue Var 0x15000df58 'p' 'const char *'
|   |   |   `-UnaryOperator 0x150029cc0 <col:40, col:48> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   |     `-CXXDependentScopeMemberExpr 0x150029c78 <col:41, col:48> '<dependent type>' contains-errors lvalue ->elength
|   |   |       `-RecoveryExpr 0x150029c58 <col:41> '<dependent type>' contains-errors lvalue
|   |   |-ReturnStmt 0x150029d40 <line:27:9, col:16>
|   |   | `-IntegerLiteral 0x150029d20 <col:16> 'int' 0
|   |   `-IfStmt 0x15002a4a8 <line:28:10, line:35:5> has_else
|   |     |-BinaryOperator 0x150029dd8 <line:28:14, col:32> 'int' contains-errors '<='
|   |     | |-CXXDependentScopeMemberExpr 0x150029d70 <col:14, col:21> '<dependent type>' contains-errors lvalue ->elength
|   |     | | `-RecoveryExpr 0x150029d50 <col:14> '<dependent type>' contains-errors lvalue
|   |     | `-IntegerLiteral 0x150029db8 <col:32> 'int' 0
|   |     |-CompoundStmt 0x150029f10 <col:35, line:32:5>
|   |     | |-CallExpr 0x150029e90 <line:30:9, col:28> 'int'
|   |     | | |-ImplicitCastExpr 0x150029e78 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |     | | | `-DeclRefExpr 0x150029df8 <col:9> 'int ()' Function 0x15000e200 'debugs' 'int ()'
|   |     | | |-IntegerLiteral 0x150029e18 <col:16> 'int' 68
|   |     | | |-IntegerLiteral 0x150029e38 <col:20> 'int' 2
|   |     | | `-ImplicitCastExpr 0x150029ec8 <col:23> 'char *' <ArrayToPointerDecay>
|   |     | |   `-StringLiteral 0x150029e58 <col:23> 'char[4]' lvalue "STR"
|   |     | `-ReturnStmt 0x150029f00 <line:31:9, col:16>
|   |     |   `-IntegerLiteral 0x150029ee0 <col:16> 'int' 0
|   |     `-IfStmt 0x15002a488 <line:32:12, line:35:5>
|   |       |-BinaryOperator 0x15002a330 <line:32:16, col:107> 'int' contains-errors '&&'
|   |       | |-CallExpr 0x15002a0e0 <col:16, col:45> '<dependent type>' contains-errors
|   |       | | |-DeclRefExpr 0x15002a010 <col:16> 'int ()' Function 0x150029f58 'known_spec' 'int ()'
|   |       | | `-CXXDependentScopeMemberExpr 0x15002a098 <col:27, col:39> '<dependent type>' contains-errors lvalue .length
|   |       | |   `-CXXDependentScopeMemberExpr 0x15002a050 <col:27, col:34> '<dependent type>' contains-errors lvalue ->spec
|   |       | |     `-RecoveryExpr 0x15002a030 <col:27> '<dependent type>' contains-errors lvalue
|   |       | `-BinaryOperator 0x15002a310 <col:50, col:107> 'int' contains-errors '<'
|   |       |   |-CXXDependentScopeMemberExpr 0x15002a128 <col:50, col:57> '<dependent type>' contains-errors lvalue ->elength
|   |       |   | `-RecoveryExpr 0x15002a108 <col:50> '<dependent type>' contains-errors lvalue
|   |       |   `-ParenExpr 0x15002a2f0 <col:67, col:107> '<dependent type>' contains-errors
|   |       |     `-BinaryOperator 0x15002a2d0 <col:68, col:101> '<dependent type>' contains-errors '+'
|   |       |       |-CXXDependentScopeMemberExpr 0x15002a1d8 <col:68, col:80> '<dependent type>' contains-errors lvalue .offset
|   |       |       | `-CXXDependentScopeMemberExpr 0x15002a190 <col:68, col:75> '<dependent type>' contains-errors lvalue ->spec
|   |       |       |   `-RecoveryExpr 0x15002a170 <col:68> '<dependent type>' contains-errors lvalue
|   |       |       `-CXXDependentScopeMemberExpr 0x15002a288 <col:89, col:101> '<dependent type>' contains-errors lvalue .length
|   |       |         `-CXXDependentScopeMemberExpr 0x15002a240 <col:89, col:96> '<dependent type>' contains-errors lvalue ->spec
|   |       |           `-RecoveryExpr 0x15002a220 <col:89> '<dependent type>' contains-errors lvalue
|   |       `-CompoundStmt 0x15002a468 <col:110, line:35:5>
|   |         |-CallExpr 0x15002a3e8 <line:33:9, col:28> 'int'
|   |         | |-ImplicitCastExpr 0x15002a3d0 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |         | | `-DeclRefExpr 0x15002a350 <col:9> 'int ()' Function 0x15000e200 'debugs' 'int ()'
|   |         | |-IntegerLiteral 0x15002a370 <col:16> 'int' 68
|   |         | |-IntegerLiteral 0x15002a390 <col:20> 'int' 2
|   |         | `-ImplicitCastExpr 0x15002a420 <col:23> 'char *' <ArrayToPointerDecay>
|   |         |   `-StringLiteral 0x15002a3b0 <col:23> 'char[4]' lvalue "STR"
|   |         `-ReturnStmt 0x15002a458 <line:34:9, col:16>
|   |           `-IntegerLiteral 0x15002a438 <col:16> 'int' 0
|   |-CallExpr 0x15002b880 <line:37:5, line:40:37> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x15002a538 <line:37:5> 'int ()' Function 0x15000e200 'debugs' 'int ()'
|   | |-IntegerLiteral 0x15002a558 <col:12> 'int' 68
|   | |-IntegerLiteral 0x15002a578 <col:16> 'int' 8
|   | `-BinaryOperator 0x15002b860 <col:19, line:40:30> '<dependent type>' contains-errors '<<'
|   |   |-BinaryOperator 0x15002b798 <line:37:19, line:39:70> '<dependent type>' contains-errors '<<'
|   |   | |-BinaryOperator 0x15002b758 <line:37:19, line:39:65> '<dependent type>' contains-errors '<<'
|   |   | | |-BinaryOperator 0x15002b538 <line:37:19, line:38:45> '<dependent type>' contains-errors '<<'
|   |   | | | |-RecoveryExpr 0x15002b4e8 <line:37:19, line:38:35> '<dependent type>' contains-errors lvalue
|   |   | | | | |-StringLiteral 0x15002a598 <line:37:19> 'char[4]' lvalue "STR"
|   |   | | | | `-CStyleCastExpr 0x15002b4a8 <line:38:12, col:35> 'long' contains-errors <Dependent>
|   |   | | | |   `-CXXDependentScopeMemberExpr 0x15002b448 <col:23, col:35> '<dependent type>' contains-errors lvalue .offset
|   |   | | | |     `-CXXDependentScopeMemberExpr 0x15002b400 <col:23, col:30> '<dependent type>' contains-errors lvalue ->spec
|   |   | | | |       `-RecoveryExpr 0x15002a5b8 <col:23> '<dependent type>' contains-errors lvalue
|   |   | | | `-StringLiteral 0x15002b518 <col:45> 'char[4]' lvalue "STR"
|   |   | | `-BinaryOperator 0x15002b738 <line:39:12, col:65> '<dependent type>' contains-errors '-'
|   |   | |   |-BinaryOperator 0x15002b6f8 <col:12, col:56> '<dependent type>' contains-errors '+'
|   |   | |   | |-CStyleCastExpr 0x15002b620 <col:12, col:35> 'long' contains-errors <Dependent>
|   |   | |   | | `-CXXDependentScopeMemberExpr 0x15002b5c0 <col:23, col:35> '<dependent type>' contains-errors lvalue .offset
|   |   | |   | |   `-CXXDependentScopeMemberExpr 0x15002b578 <col:23, col:30> '<dependent type>' contains-errors lvalue ->spec
|   |   | |   | |     `-RecoveryExpr 0x15002b558 <col:23> '<dependent type>' contains-errors lvalue
|   |   | |   | `-CXXDependentScopeMemberExpr 0x15002b6b0 <col:44, col:56> '<dependent type>' contains-errors lvalue .length
|   |   | |   |   `-CXXDependentScopeMemberExpr 0x15002b668 <col:44, col:51> '<dependent type>' contains-errors lvalue ->spec
|   |   | |   |     `-RecoveryExpr 0x15002b648 <col:44> '<dependent type>' contains-errors lvalue
|   |   | |   `-IntegerLiteral 0x15002b718 <col:65> 'int' 1
|   |   | `-StringLiteral 0x15002b778 <col:70> 'char[4]' lvalue "STR"
|   |   `-CStyleCastExpr 0x15002b838 <line:40:12, col:30> 'long' contains-errors <Dependent>
|   |     `-CXXDependentScopeMemberExpr 0x15002b7d8 <col:23, col:30> '<dependent type>' contains-errors lvalue ->elength
|   |       `-RecoveryExpr 0x15002b7b8 <col:23> '<dependent type>' contains-errors lvalue
|   `-ReturnStmt 0x15002b8d8 <line:42:5, col:12>
|     `-IntegerLiteral 0x15002b8b8 <col:12> 'int' 1
|-FunctionDecl 0x150027890 <line:8:9> col:9 implicit used strncasecmp 'int (const char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0x150027990 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1500279f8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x150027a60 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x150027938 <<invalid sloc>> Implicit 958
`-FunctionDecl 0x150027d90 <line:14:15> col:15 implicit used strchr 'char *(const char *, int)' extern
  |-ParmVarDecl 0x150027e90 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x150027ef8 <<invalid sloc>> <invalid sloc> 'int'
  `-BuiltinAttr 0x150027e38 <<invalid sloc>> Implicit 893
