TranslationUnitDecl 0x137055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1370564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x137055bd0 '__int128'
|-TypedefDecl 0x137056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x137055bf0 'unsigned __int128'
|-TypedefDecl 0x13780be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13780bc00 'struct __NSConstantString_tag'
|   `-Record 0x137056580 '__NSConstantString_tag'
|-TypedefDecl 0x13780be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x137055d90 '__SVInt8_t'
|-TypedefDecl 0x13780bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x137055db0 '__SVInt16_t'
|-TypedefDecl 0x13780bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x137055dd0 '__SVInt32_t'
|-TypedefDecl 0x13780bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x137055df0 '__SVInt64_t'
|-TypedefDecl 0x13780c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x137055e10 '__SVUint8_t'
|-TypedefDecl 0x13780c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x137055e30 '__SVUint16_t'
|-TypedefDecl 0x13780c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x137055e50 '__SVUint32_t'
|-TypedefDecl 0x13780c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x137055e70 '__SVUint64_t'
|-TypedefDecl 0x13780c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x137055e90 '__SVFloat16_t'
|-TypedefDecl 0x13780c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x137055eb0 '__SVFloat32_t'
|-TypedefDecl 0x13780c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x137055ed0 '__SVFloat64_t'
|-TypedefDecl 0x13780c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x137055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13780c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x137055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13780c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x137055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13780c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x137055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13780c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x137055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13780c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x137055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13780c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x137055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13780c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x137055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13780c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x137055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13780c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x137056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13780c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x137056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13780c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x137056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13780c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x137056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13780c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x137056090 '__clang_svint8x3_t'
|-TypedefDecl 0x13780c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1370560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13780c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1370560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13780c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1370560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13780c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x137056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13780ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x137056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13780cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x137056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13780cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x137056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13780cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x137056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13780d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1370561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13780d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1370561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13780d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1370561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13780d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x137056210 '__clang_svint8x4_t'
|-TypedefDecl 0x13780d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x137056230 '__clang_svint16x4_t'
|-TypedefDecl 0x13780d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x137056250 '__clang_svint32x4_t'
|-TypedefDecl 0x13780d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x137056270 '__clang_svint64x4_t'
|-TypedefDecl 0x13780d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x137056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13780d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1370562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13780d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1370562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13780d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1370562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13780d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x137056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13780d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x137056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13780d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x137056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13780d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x137056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13780da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x137056390 '__SVBool_t'
|-TypedefDecl 0x13780da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1370563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13780dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1370563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13780db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1370563f0 '__SVCount_t'
|-TypedefDecl 0x13780dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13780dbb0 'char *'
|   `-BuiltinType 0x1370556b0 'char'
|-TypedefDecl 0x13780dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13780dbb0 'char *'
|   `-BuiltinType 0x1370556b0 'char'
`-FunctionDecl 0x13782a800 <dataset_diviso_filec/func22025_vuln.c:1:1, line:36:1> line:1:12 fscrypt_d_revalidate 'int (struct dentry *, unsigned int)' static
  |-ParmVarDecl 0x13780e248 <col:33, col:48> col:48 used dentry 'struct dentry *'
  |-ParmVarDecl 0x13780e2c8 <col:56, col:69> col:69 used flags 'unsigned int'
  `-CompoundStmt 0x13782dfd0 <line:2:1, line:36:1>
    |-DeclStmt 0x13782a9f0 <line:3:2, col:20>
    | `-VarDecl 0x13782a988 <col:2, col:17> col:17 used dir 'struct dentry *'
    |-DeclStmt 0x13782abf8 <line:4:2, col:25>
    | |-RecordDecl 0x13782aa08 <col:2, col:9> col:9 struct fscrypt_info
    | `-VarDecl 0x13782ab78 <col:2, col:23> col:23 used ci 'struct fscrypt_info *'
    |-DeclStmt 0x13782ad28 <line:5:2, col:34>
    | |-VarDecl 0x13782ac28 <col:2, col:6> col:6 used dir_has_key 'int'
    | `-VarDecl 0x13782aca8 <col:2, col:19> col:19 used cached_with_key 'int'
    |-IfStmt 0x13782ae98 <line:7:2, line:8:11>
    | |-BinaryOperator 0x13782add0 <line:7:6, col:14> '<dependent type>' contains-errors '&'
    | | |-DeclRefExpr 0x13782ad40 <col:6> 'unsigned int' lvalue ParmVar 0x13780e2c8 'flags' 'unsigned int'
    | | `-RecoveryExpr 0x13782adb0 <col:14> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x13782ae88 <line:8:3, col:11>
    |   `-UnaryOperator 0x13782ae70 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x13782ae58 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x13782ae38 <col:11> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x13782b0d0 <line:10:2, col:26> 'struct dentry *' '='
    | |-DeclRefExpr 0x13782aeb8 <col:2> 'struct dentry *' lvalue Var 0x13782a988 'dir' 'struct dentry *'
    | `-ImplicitCastExpr 0x13782b0b8 <col:8, col:26> 'struct dentry *' <IntegralToPointer>
    |   `-CallExpr 0x13782b078 <col:8, col:26> 'int'
    |     |-ImplicitCastExpr 0x13782b060 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x13782aff0 <col:8> 'int ()' Function 0x13782af38 'dget_parent' 'int ()'
    |     `-ImplicitCastExpr 0x13782b0a0 <col:20> 'struct dentry *' <LValueToRValue>
    |       `-DeclRefExpr 0x13782b010 <col:20> 'struct dentry *' lvalue ParmVar 0x13780e248 'dentry' 'struct dentry *'
    |-IfStmt 0x13782b5c0 <line:11:2, line:14:2>
    | |-UnaryOperator 0x13782b3e0 <line:11:6, col:59> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-CallExpr 0x13782b3b8 <col:7, col:59> '<dependent type>' contains-errors
    | |   |-CXXDependentScopeMemberExpr 0x13782b2d8 <col:7, col:34> '<dependent type>' contains-errors lvalue ->is_encrypted
    | |   | `-CXXDependentScopeMemberExpr 0x13782b290 <col:7, col:27> '<dependent type>' contains-errors lvalue ->s_cop
    | |   |   `-RecoveryExpr 0x13782b268 <col:7, col:21> '<dependent type>' contains-errors lvalue
    | |   |     `-CallExpr 0x13782b228 <col:7, col:18> 'int'
    | |   |       |-ImplicitCastExpr 0x13782b210 <col:7> 'int (*)()' <FunctionToPointerDecay>
    | |   |       | `-DeclRefExpr 0x13782b1d0 <col:7> 'int ()' Function 0x13782b118 'd_inode' 'int ()'
    | |   |       `-ImplicitCastExpr 0x13782b250 <col:15> 'struct dentry *' <LValueToRValue>
    | |   |         `-DeclRefExpr 0x13782b1f0 <col:15> 'struct dentry *' lvalue Var 0x13782a988 'dir' 'struct dentry *'
    | |   `-CallExpr 0x13782b378 <col:47, col:58> 'int'
    | |     |-ImplicitCastExpr 0x13782b360 <col:47> 'int (*)()' <FunctionToPointerDecay>
    | |     | `-DeclRefExpr 0x13782b320 <col:47> 'int ()' Function 0x13782b118 'd_inode' 'int ()'
    | |     `-ImplicitCastExpr 0x13782b3a0 <col:55> 'struct dentry *' <LValueToRValue>
    | |       `-DeclRefExpr 0x13782b340 <col:55> 'struct dentry *' lvalue Var 0x13782a988 'dir' 'struct dentry *'
    | `-CompoundStmt 0x13782b5a0 <col:62, line:14:2>
    |   |-CallExpr 0x13782b530 <line:12:3, col:11> 'int'
    |   | |-ImplicitCastExpr 0x13782b518 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x13782b4d8 <col:3> 'int ()' Function 0x13782b420 'dput' 'int ()'
    |   | `-ImplicitCastExpr 0x13782b558 <col:8> 'struct dentry *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x13782b4f8 <col:8> 'struct dentry *' lvalue Var 0x13782a988 'dir' 'struct dentry *'
    |   `-ReturnStmt 0x13782b590 <line:13:3, col:10>
    |     `-IntegerLiteral 0x13782b570 <col:10> 'int' 0
    |-BinaryOperator 0x13782b6c0 <line:16:2, col:21> 'struct fscrypt_info *' contains-errors '='
    | |-DeclRefExpr 0x13782b5e0 <col:2> 'struct fscrypt_info *' lvalue Var 0x13782ab78 'ci' 'struct fscrypt_info *'
    | `-RecoveryExpr 0x13782b698 <col:7, col:21> '<dependent type>' contains-errors lvalue
    |   `-CallExpr 0x13782b658 <col:7, col:18> 'int'
    |     |-ImplicitCastExpr 0x13782b640 <col:7> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x13782b600 <col:7> 'int ()' Function 0x13782b118 'd_inode' 'int ()'
    |     `-ImplicitCastExpr 0x13782b680 <col:15> 'struct dentry *' <LValueToRValue>
    |       `-DeclRefExpr 0x13782b620 <col:15> 'struct dentry *' lvalue Var 0x13782a988 'dir' 'struct dentry *'
    |-IfStmt 0x13782d608 <line:17:2, line:21:8>
    | |-RecoveryExpr 0x13782d550 <line:17:6, line:20:29> '_Bool' contains-errors
    | `-BinaryOperator 0x13782d5e8 <line:21:3, col:8> 'struct fscrypt_info *' contains-errors '='
    |   |-DeclRefExpr 0x13782d570 <col:3> 'struct fscrypt_info *' lvalue Var 0x13782ab78 'ci' 'struct fscrypt_info *'
    |   `-RecoveryExpr 0x13782d5c8 <col:8> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x13782d7a0 <line:24:2, col:27> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13782d708 <col:2> 'int ()' Function 0x13782d650 'spin_lock' 'int ()'
    | `-UnaryOperator 0x13782d788 <col:12, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x13782d760 <col:13, col:21> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x13782d728 <col:13> 'struct dentry *' lvalue ParmVar 0x13780e248 'dentry' 'struct dentry *'
    |-BinaryOperator 0x13782d8e0 <line:25:2, col:38> 'int' contains-errors '='
    | |-DeclRefExpr 0x13782d7c8 <col:2> 'int' lvalue Var 0x13782aca8 'cached_with_key' 'int'
    | `-BinaryOperator 0x13782d8c0 <col:20, col:38> '<dependent type>' contains-errors '&'
    |   |-RecoveryExpr 0x13782d820 <col:20, col:28> '<dependent type>' contains-errors lvalue
    |   | `-DeclRefExpr 0x13782d7e8 <col:20> 'struct dentry *' lvalue ParmVar 0x13780e248 'dentry' 'struct dentry *'
    |   `-RecoveryExpr 0x13782d8a0 <col:38> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x13782da78 <line:26:2, col:29> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13782d9e0 <col:2> 'int ()' Function 0x13782d928 'spin_unlock' 'int ()'
    | `-UnaryOperator 0x13782da60 <col:14, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x13782da38 <col:15, col:23> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x13782da00 <col:15> 'struct dentry *' lvalue ParmVar 0x13780e248 'dentry' 'struct dentry *'
    |-CallExpr 0x13782db38 <line:28:2, col:10> 'int'
    | |-ImplicitCastExpr 0x13782db20 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x13782dae0 <col:2> 'int ()' Function 0x13782b420 'dput' 'int ()'
    | `-ImplicitCastExpr 0x13782db60 <col:7> 'struct dentry *' <LValueToRValue>
    |   `-DeclRefExpr 0x13782db00 <col:7> 'struct dentry *' lvalue Var 0x13782a988 'dir' 'struct dentry *'
    |-IfStmt 0x13782df80 <line:31:2, line:34:10>
    | |-BinaryOperator 0x13782df30 <line:31:6, line:33:36> 'int' '||'
    | | |-BinaryOperator 0x13782de48 <line:31:6, line:32:36> 'int' '||'
    | | | |-ParenExpr 0x13782dd60 <line:31:6, col:48> 'int'
    | | | | `-BinaryOperator 0x13782dd40 <col:7, col:47> 'int' '&&'
    | | | |   |-UnaryOperator 0x13782dbb0 <col:7, col:8> 'int' prefix '!' cannot overflow
    | | | |   | `-ImplicitCastExpr 0x13782db98 <col:8> 'int' <LValueToRValue>
    | | | |   |   `-DeclRefExpr 0x13782db78 <col:8> 'int' lvalue Var 0x13782aca8 'cached_with_key' 'int'
    | | | |   `-CallExpr 0x13782dd00 <col:27, col:47> 'int'
    | | | |     |-ImplicitCastExpr 0x13782dce8 <col:27> 'int (*)()' <FunctionToPointerDecay>
    | | | |     | `-DeclRefExpr 0x13782dca8 <col:27> 'int ()' Function 0x13782dbf0 'd_is_negative' 'int ()'
    | | | |     `-ImplicitCastExpr 0x13782dd28 <col:41> 'struct dentry *' <LValueToRValue>
    | | | |       `-DeclRefExpr 0x13782dcc8 <col:41> 'struct dentry *' lvalue ParmVar 0x13780e248 'dentry' 'struct dentry *'
    | | | `-ParenExpr 0x13782de28 <line:32:4, col:36> 'int'
    | | |   `-BinaryOperator 0x13782de08 <col:5, col:25> 'int' '&&'
    | | |     |-UnaryOperator 0x13782ddb8 <col:5, col:6> 'int' prefix '!' cannot overflow
    | | |     | `-ImplicitCastExpr 0x13782dda0 <col:6> 'int' <LValueToRValue>
    | | |     |   `-DeclRefExpr 0x13782dd80 <col:6> 'int' lvalue Var 0x13782aca8 'cached_with_key' 'int'
    | | |     `-ImplicitCastExpr 0x13782ddf0 <col:25> 'int' <LValueToRValue>
    | | |       `-DeclRefExpr 0x13782ddd0 <col:25> 'int' lvalue Var 0x13782ac28 'dir_has_key' 'int'
    | | `-ParenExpr 0x13782df10 <line:33:4, col:36> 'int'
    | |   `-BinaryOperator 0x13782def0 <col:5, col:25> 'int' '&&'
    | |     |-ImplicitCastExpr 0x13782ded8 <col:5> 'int' <LValueToRValue>
    | |     | `-DeclRefExpr 0x13782de68 <col:5> 'int' lvalue Var 0x13782aca8 'cached_with_key' 'int'
    | |     `-UnaryOperator 0x13782dec0 <col:24, col:25> 'int' prefix '!' cannot overflow
    | |       `-ImplicitCastExpr 0x13782dea8 <col:25> 'int' <LValueToRValue>
    | |         `-DeclRefExpr 0x13782de88 <col:25> 'int' lvalue Var 0x13782ac28 'dir_has_key' 'int'
    | `-ReturnStmt 0x13782df70 <line:34:3, col:10>
    |   `-IntegerLiteral 0x13782df50 <col:10> 'int' 0
    `-ReturnStmt 0x13782dfc0 <line:35:2, col:9>
      `-IntegerLiteral 0x13782dfa0 <col:9> 'int' 1
