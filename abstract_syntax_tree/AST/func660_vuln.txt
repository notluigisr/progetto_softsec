TranslationUnitDecl 0x135055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1350564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x135055bd0 '__int128'
|-TypedefDecl 0x135056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x135055bf0 'unsigned __int128'
|-TypedefDecl 0x135126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x135126000 'struct __NSConstantString_tag'
|   `-Record 0x135056580 '__NSConstantString_tag'
|-TypedefDecl 0x135126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x135055d90 '__SVInt8_t'
|-TypedefDecl 0x135126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x135055db0 '__SVInt16_t'
|-TypedefDecl 0x135126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x135055dd0 '__SVInt32_t'
|-TypedefDecl 0x1351263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x135055df0 '__SVInt64_t'
|-TypedefDecl 0x135126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x135055e10 '__SVUint8_t'
|-TypedefDecl 0x1351264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x135055e30 '__SVUint16_t'
|-TypedefDecl 0x135126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x135055e50 '__SVUint32_t'
|-TypedefDecl 0x135126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x135055e70 '__SVUint64_t'
|-TypedefDecl 0x1351265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x135055e90 '__SVFloat16_t'
|-TypedefDecl 0x135126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x135055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1351266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x135055ed0 '__SVFloat64_t'
|-TypedefDecl 0x135126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x135055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x135126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x135055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1351267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x135055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x135126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x135055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1351268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x135055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x135126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x135055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x135126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x135055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1351269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x135055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x135126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x135055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x135126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x135056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x135126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x135056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x135126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x135056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x135126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x135056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x135126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x135056090 '__clang_svint8x3_t'
|-TypedefDecl 0x135126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1350560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x135126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1350560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x135126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1350560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x135126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x135056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x135126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x135056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x135126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x135056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x135126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x135056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x135126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x135056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x135127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1350561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x135127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1350561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1351278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1350561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x135127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x135056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1351279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x135056230 '__clang_svint16x4_t'
|-TypedefDecl 0x135127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x135056250 '__clang_svint32x4_t'
|-TypedefDecl 0x135127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x135056270 '__clang_svint64x4_t'
|-TypedefDecl 0x135127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x135056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x135127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1350562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x135127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1350562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x135127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1350562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x135127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x135056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x135127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x135056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x135127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x135056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x135127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x135056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x135127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x135056390 '__SVBool_t'
|-TypedefDecl 0x135127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1350563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x135127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1350563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x135127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1350563f0 '__SVCount_t'
|-TypedefDecl 0x135127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x135127fb0 'char *'
|   `-BuiltinType 0x1350556b0 'char'
|-TypedefDecl 0x135128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x135127fb0 'char *'
|   `-BuiltinType 0x1350556b0 'char'
|-FunctionDecl 0x135128238 <dataset_diviso_filec/func660_vuln.c:1:1, line:48:1> line:1:1 grepbuf 'int (const char *, const char *)'
| |-ParmVarDecl 0x1351280d8 <col:10, col:22> col:22 used beg 'const char *'
| |-ParmVarDecl 0x135128158 <col:27, col:39> col:39 used lim 'const char *'
| `-CompoundStmt 0x13680a5c8 <line:2:1, line:48:1>
|   |-DeclStmt 0x135128450 <line:3:3, col:16>
|   | |-VarDecl 0x135128350 <col:3, col:7> col:7 used nlines 'int'
|   | `-VarDecl 0x1351283d0 <col:3, col:15> col:15 used n 'int'
|   |-DeclStmt 0x1351284e8 <line:4:3, col:16>
|   | `-VarDecl 0x135128480 <col:3, col:15> col:15 used p 'const char *'
|   |-UnaryExprOrTypeTraitExpr 0x135128570 <line:5:3, col:10> 'unsigned long' contains-errors sizeof
|   | `-RecoveryExpr 0x135128550 <col:10> '<dependent type>' contains-errors lvalue
|   |-UnaryExprOrTypeTraitExpr 0x1351285e8 <line:6:3, col:10> 'unsigned long' contains-errors sizeof
|   | `-RecoveryExpr 0x1351285c8 <col:10> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x135128648 <line:8:3, col:12> 'int' '='
|   | |-DeclRefExpr 0x135128608 <col:3> 'int' lvalue Var 0x135128350 'nlines' 'int'
|   | `-IntegerLiteral 0x135128628 <col:12> 'int' 0
|   |-BinaryOperator 0x1351286c0 <line:9:3, col:7> 'const char *' '='
|   | |-DeclRefExpr 0x135128668 <col:3> 'const char *' lvalue Var 0x135128480 'p' 'const char *'
|   | `-ImplicitCastExpr 0x1351286a8 <col:7> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x135128688 <col:7> 'const char *' lvalue ParmVar 0x1351280d8 'beg' 'const char *'
|   |-WhileStmt 0x13680a2b0 <line:10:3, line:40:5>
|   | |-RecoveryExpr 0x135142050 <line:10:10, line:11:58> '_Bool' contains-errors
|   | `-CompoundStmt 0x13680a278 <line:12:5, line:40:5>
|   |   |-DeclStmt 0x135142188 <line:13:7, col:39>
|   |   | `-VarDecl 0x135142088 <col:7, col:27> col:19 used b 'const char *' cinit
|   |   |   `-BinaryOperator 0x135142168 <col:23, col:27> '<dependent type>' contains-errors '+'
|   |   |     |-DeclRefExpr 0x1351420f0 <col:23> 'const char *' lvalue Var 0x135128480 'p' 'const char *'
|   |   |     `-RecoveryExpr 0x135142148 <col:27> '<dependent type>' contains-errors lvalue
|   |   |-DeclStmt 0x1351422b8 <line:14:7, col:40>
|   |   | `-VarDecl 0x1351421b8 <col:7, col:30> col:19 used endp 'const char *' cinit
|   |   |   `-BinaryOperator 0x135142298 <col:26, col:30> '<dependent type>' contains-errors '+'
|   |   |     |-DeclRefExpr 0x135142220 <col:26> 'const char *' contains-errors lvalue Var 0x135142088 'b' 'const char *'
|   |   |     `-RecoveryExpr 0x135142278 <col:30> '<dependent type>' contains-errors lvalue
|   |   |-IfStmt 0x135142368 <line:16:7, line:17:9>
|   |   | |-BinaryOperator 0x135142340 <line:16:11, col:16> 'int' contains-errors '=='
|   |   | | |-ImplicitCastExpr 0x135142310 <col:11> 'const char *' contains-errors <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1351422d0 <col:11> 'const char *' contains-errors lvalue Var 0x135142088 'b' 'const char *'
|   |   | | `-ImplicitCastExpr 0x135142328 <col:16> 'const char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1351422f0 <col:16> 'const char *' lvalue ParmVar 0x135128158 'lim' 'const char *'
|   |   | `-BreakStmt 0x135142360 <line:17:9>
|   |   |-IfStmt 0x135142dd0 <line:18:7, line:38:9> has_else
|   |   | |-UnaryOperator 0x135142408 <line:18:11, col:12> '<dependent type>' contains-errors prefix '!' cannot overflow
|   |   | | `-ImplicitCastExpr 0x1351423f0 <col:12> '<dependent type>' contains-errors <LValueToRValue>
|   |   | |   `-RecoveryExpr 0x1351423d0 <col:12> '<dependent type>' contains-errors lvalue
|   |   | |-CompoundStmt 0x135142a88 <line:19:9, line:30:9>
|   |   | | |-CallExpr 0x135142638 <line:20:11, col:37> 'int' contains-errors
|   |   | | | |-ImplicitCastExpr 0x135142620 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |   | | | | `-DeclRefExpr 0x135142500 <col:11> 'int ()' Function 0x135142448 'prtext' 'int ()'
|   |   | | | |-ImplicitCastExpr 0x135142670 <col:19> 'const char *' contains-errors <LValueToRValue>
|   |   | | | | `-DeclRefExpr 0x135142520 <col:19> 'const char *' contains-errors lvalue Var 0x135142088 'b' 'const char *'
|   |   | | | |-ImplicitCastExpr 0x135142688 <col:22> 'const char *' contains-errors <LValueToRValue>
|   |   | | | | `-DeclRefExpr 0x135142540 <col:22> 'const char *' contains-errors lvalue Var 0x1351421b8 'endp' 'const char *'
|   |   | | | `-CStyleCastExpr 0x1351425c8 <col:28, col:36> 'int *' <NullToPointer>
|   |   | | |   `-IntegerLiteral 0x135142560 <col:36> 'int' 0
|   |   | | |-UnaryOperator 0x1351426c0 <line:21:11, col:17> 'int' postfix '++'
|   |   | | | `-DeclRefExpr 0x1351426a0 <col:11> 'int' lvalue Var 0x135128350 'nlines' 'int'
|   |   | | `-IfStmt 0x135142a68 <line:23:11, line:29:13>
|   |   | |   |-BinaryOperator 0x1351427c8 <line:23:15, col:27> 'int' contains-errors '||'
|   |   | |   | |-UnaryOperator 0x135142790 <col:15, col:16> '<dependent type>' contains-errors prefix '!' cannot overflow
|   |   | |   | | `-ImplicitCastExpr 0x135142778 <col:16> '<dependent type>' contains-errors <LValueToRValue>
|   |   | |   | |   `-RecoveryExpr 0x135142758 <col:16> '<dependent type>' contains-errors lvalue
|   |   | |   | `-RecoveryExpr 0x1351427a8 <col:27> '<dependent type>' contains-errors lvalue
|   |   | |   `-CompoundStmt 0x135142a50 <line:24:13, line:29:13>
|   |   | |     `-ReturnStmt 0x135142a40 <line:28:15, col:22>
|   |   | |       `-ImplicitCastExpr 0x135142a28 <col:22> 'int' <LValueToRValue>
|   |   | |         `-DeclRefExpr 0x135142a08 <col:22> 'int' lvalue Var 0x135128350 'nlines' 'int'
|   |   | `-IfStmt 0x135142db0 <line:31:12, line:38:9>
|   |   |   |-BinaryOperator 0x135142b20 <line:31:16, col:20> 'int' contains-errors '<'
|   |   |   | |-ImplicitCastExpr 0x135142af0 <col:16> 'const char *' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x135142ab0 <col:16> 'const char *' lvalue Var 0x135128480 'p' 'const char *'
|   |   |   | `-ImplicitCastExpr 0x135142b08 <col:20> 'const char *' contains-errors <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x135142ad0 <col:20> 'const char *' contains-errors lvalue Var 0x135142088 'b' 'const char *'
|   |   |   `-CompoundStmt 0x135142d88 <line:32:9, line:38:9>
|   |   |     |-CallExpr 0x135142bf0 <line:33:11, col:27> 'int' contains-errors
|   |   |     | |-ImplicitCastExpr 0x135142bd8 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |   |     | | `-DeclRefExpr 0x135142b40 <col:11> 'int ()' Function 0x135142448 'prtext' 'int ()'
|   |   |     | |-ImplicitCastExpr 0x135142c28 <col:19> 'const char *' <LValueToRValue>
|   |   |     | | `-DeclRefExpr 0x135142b60 <col:19> 'const char *' lvalue Var 0x135128480 'p' 'const char *'
|   |   |     | |-ImplicitCastExpr 0x135142c40 <col:22> 'const char *' contains-errors <LValueToRValue>
|   |   |     | | `-DeclRefExpr 0x135142b80 <col:22> 'const char *' contains-errors lvalue Var 0x135142088 'b' 'const char *'
|   |   |     | `-UnaryOperator 0x135142bc0 <col:25, col:26> 'int *' prefix '&' cannot overflow
|   |   |     |   `-DeclRefExpr 0x135142ba0 <col:26> 'int' lvalue Var 0x1351283d0 'n' 'int'
|   |   |     |-CompoundAssignOperator 0x135142cb0 <line:34:11, col:21> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |     | |-DeclRefExpr 0x135142c58 <col:11> 'int' lvalue Var 0x135128350 'nlines' 'int'
|   |   |     | `-ImplicitCastExpr 0x135142c98 <col:21> 'int' <LValueToRValue>
|   |   |     |   `-DeclRefExpr 0x135142c78 <col:21> 'int' lvalue Var 0x1351283d0 'n' 'int'
|   |   |     `-IfStmt 0x135142d68 <line:36:11, line:37:20>
|   |   |       |-RecoveryExpr 0x135142d00 <line:36:15, col:16> '_Bool' contains-errors
|   |   |       `-ReturnStmt 0x135142d58 <line:37:13, col:20>
|   |   |         `-ImplicitCastExpr 0x135142d40 <col:20> 'int' <LValueToRValue>
|   |   |           `-DeclRefExpr 0x135142d20 <col:20> 'int' lvalue Var 0x135128350 'nlines' 'int'
|   |   `-BinaryOperator 0x13680a258 <line:39:7, col:11> 'const char *' contains-errors '='
|   |     |-DeclRefExpr 0x13680a200 <col:7> 'const char *' lvalue Var 0x135128480 'p' 'const char *'
|   |     `-ImplicitCastExpr 0x13680a240 <col:11> 'const char *' contains-errors <LValueToRValue>
|   |       `-DeclRefExpr 0x13680a220 <col:11> 'const char *' contains-errors lvalue Var 0x1351421b8 'endp' 'const char *'
|   |-IfStmt 0x13680a560 <line:41:3, line:46:5>
|   | |-RecoveryExpr 0x13680a360 <line:41:7, col:25> '_Bool' contains-errors
|   | `-CompoundStmt 0x13680a540 <line:42:5, line:46:5>
|   |   |-CallExpr 0x13680a430 <line:43:7, col:25> 'int'
|   |   | |-ImplicitCastExpr 0x13680a418 <col:7> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x13680a380 <col:7> 'int ()' Function 0x135142448 'prtext' 'int ()'
|   |   | |-ImplicitCastExpr 0x13680a468 <col:15> 'const char *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x13680a3a0 <col:15> 'const char *' lvalue Var 0x135128480 'p' 'const char *'
|   |   | |-ImplicitCastExpr 0x13680a480 <col:18> 'const char *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x13680a3c0 <col:18> 'const char *' lvalue ParmVar 0x135128158 'lim' 'const char *'
|   |   | `-UnaryOperator 0x13680a400 <col:23, col:24> 'int *' prefix '&' cannot overflow
|   |   |   `-DeclRefExpr 0x13680a3e0 <col:24> 'int' lvalue Var 0x1351283d0 'n' 'int'
|   |   `-CompoundAssignOperator 0x13680a4f0 <line:44:7, col:17> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     |-DeclRefExpr 0x13680a498 <col:7> 'int' lvalue Var 0x135128350 'nlines' 'int'
|   |     `-ImplicitCastExpr 0x13680a4d8 <col:17> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x13680a4b8 <col:17> 'int' lvalue Var 0x1351283d0 'n' 'int'
|   `-ReturnStmt 0x13680a5b8 <line:47:3, col:10>
|     `-ImplicitCastExpr 0x13680a5a0 <col:10> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x13680a580 <col:10> 'int' lvalue Var 0x135128350 'nlines' 'int'
`-FunctionDecl 0x135142858 <line:26:17> col:17 implicit used exit 'void (int) __attribute__((noreturn))' extern
  |-ParmVarDecl 0x135142958 <<invalid sloc>> <invalid sloc> 'int'
  `-BuiltinAttr 0x135142900 <<invalid sloc>> Implicit 869
