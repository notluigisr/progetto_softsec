TranslationUnitDecl 0x12a055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12a0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12a055bd0 '__int128'
|-TypedefDecl 0x12a056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12a055bf0 'unsigned __int128'
|-TypedefDecl 0x12a126a30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12a126800 'struct __NSConstantString_tag'
|   `-Record 0x12a056580 '__NSConstantString_tag'
|-TypedefDecl 0x12a126a98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12a055d90 '__SVInt8_t'
|-TypedefDecl 0x12a126b00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12a055db0 '__SVInt16_t'
|-TypedefDecl 0x12a126b68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12a055dd0 '__SVInt32_t'
|-TypedefDecl 0x12a126bd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12a055df0 '__SVInt64_t'
|-TypedefDecl 0x12a126c38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12a055e10 '__SVUint8_t'
|-TypedefDecl 0x12a126ca0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12a055e30 '__SVUint16_t'
|-TypedefDecl 0x12a126d08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12a055e50 '__SVUint32_t'
|-TypedefDecl 0x12a126d70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12a055e70 '__SVUint64_t'
|-TypedefDecl 0x12a126dd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12a055e90 '__SVFloat16_t'
|-TypedefDecl 0x12a126e40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12a055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12a126ea8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12a055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12a126f10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12a055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12a126f78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12a055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12a126fe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12a055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12a127048 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12a055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12a1270b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12a055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12a127118 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12a055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12a127180 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12a055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12a1271e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12a055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12a127250 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12a055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12a1272b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12a056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12a127320 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12a056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12a127388 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12a056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12a1273f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12a056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12a127458 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12a056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12a1274c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12a0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12a127528 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12a0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12a127590 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12a0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12a1275f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12a056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12a127660 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12a056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12a1276c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12a056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12a127730 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12a056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12a127798 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12a056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12a128000 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12a0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12a128068 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12a0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12a1280d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12a0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12a128138 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12a056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12a1281a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12a056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12a128208 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12a056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12a128270 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12a056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12a1282d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12a056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12a128340 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12a0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12a1283a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12a0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12a128410 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12a0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12a128478 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12a056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12a1284e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12a056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12a128548 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12a056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12a1285b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12a056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12a128618 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12a056390 '__SVBool_t'
|-TypedefDecl 0x12a128680 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12a0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12a1286e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12a0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12a128750 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12a0563f0 '__SVCount_t'
|-TypedefDecl 0x12a1287f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12a1287b0 'char *'
|   `-BuiltinType 0x12a0556b0 'char'
|-TypedefDecl 0x12a128868 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12a1287b0 'char *'
|   `-BuiltinType 0x12a0556b0 'char'
|-FunctionDecl 0x12a808768 <dataset_diviso_filec/func7210_vuln.c:1:1, line:75:1> line:1:1 check_compat_entry_size_and_hooks 'int (struct compat_arpt_entry *, struct xt_table_info *, unsigned int *, const unsigned char *, const unsigned char *, const unsigned int *, const unsigned int *, const char *)'
| |-ParmVarDecl 0x12a128e48 <col:35, col:61> col:61 used e 'struct compat_arpt_entry *'
| |-ParmVarDecl 0x12a808228 <line:2:7, col:29> col:29 used newinfo 'struct xt_table_info *'
| |-ParmVarDecl 0x12a8082d8 <line:3:7, col:21> col:21 used size 'unsigned int *'
| |-ParmVarDecl 0x12a808388 <line:4:7, col:28> col:28 used base 'const unsigned char *'
| |-ParmVarDecl 0x12a808408 <line:5:7, col:28> col:28 used limit 'const unsigned char *'
| |-ParmVarDecl 0x12a8084b8 <line:6:7, col:27> col:27 used hook_entries 'const unsigned int *'
| |-ParmVarDecl 0x12a808538 <line:7:7, col:27> col:27 used underflows 'const unsigned int *'
| |-ParmVarDecl 0x12a8085b8 <line:8:7, col:19> col:19 name 'const char *'
| `-CompoundStmt 0x12a143200 <line:9:1, line:75:1>
|   |-DeclStmt 0x12a808a88 <line:10:2, col:27>
|   | |-RecordDecl 0x12a808898 <col:2, col:9> col:9 struct xt_entry_target
|   | `-VarDecl 0x12a808a08 <col:2, col:26> col:26 used t 'struct xt_entry_target *'
|   |-DeclStmt 0x12a808c88 <line:11:2, col:26>
|   | |-RecordDecl 0x12a808aa0 <col:2, col:9> col:9 struct xt_target
|   | `-VarDecl 0x12a808c08 <col:2, col:20> col:20 used target 'struct xt_target *'
|   |-DeclStmt 0x12a808d20 <line:12:2, col:27>
|   | `-VarDecl 0x12a808cb8 <col:2, col:15> col:15 used entry_offset 'unsigned int'
|   |-DeclStmt 0x12a808ed8 <line:13:2, col:17>
|   | |-VarDecl 0x12a808d50 <col:2, col:6> col:6 used ret 'int'
|   | |-VarDecl 0x12a808dd0 <col:2, col:11> col:11 used off 'int'
|   | `-VarDecl 0x12a808e50 <col:2, col:16> col:16 used h 'int'
|   |-CallExpr 0x12a809108 <line:15:2, col:19> 'int'
|   | |-ImplicitCastExpr 0x12a8090f0 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x12a809020 <col:2> 'int ()' Function 0x12a808f68 'duprintf' 'int ()'
|   | |-ImplicitCastExpr 0x12a809138 <col:11> 'char *' <ArrayToPointerDecay>
|   | | `-StringLiteral 0x12a809080 <col:11> 'char[4]' lvalue "STR"
|   | `-ImplicitCastExpr 0x12a809150 <col:18> 'struct compat_arpt_entry *' <LValueToRValue>
|   |   `-DeclRefExpr 0x12a8090a0 <col:18> 'struct compat_arpt_entry *' lvalue ParmVar 0x12a128e48 'e' 'struct compat_arpt_entry *'
|   |-IfStmt 0x12a80d690 <line:16:2, line:21:2>
|   | |-RecoveryExpr 0x12a80d490 <line:16:6, line:18:44> '_Bool' contains-errors
|   | `-CompoundStmt 0x12a80d670 <col:51, line:21:2>
|   |   |-CallExpr 0x12a80d548 <line:19:3, col:27> 'int'
|   |   | |-ImplicitCastExpr 0x12a80d530 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x12a80d4b0 <col:3> 'int ()' Function 0x12a808f68 'duprintf' 'int ()'
|   |   | |-ImplicitCastExpr 0x12a80d580 <col:12> 'char *' <ArrayToPointerDecay>
|   |   | | `-StringLiteral 0x12a80d4d0 <col:12> 'char[4]' lvalue "STR"
|   |   | |-ImplicitCastExpr 0x12a80d598 <col:19> 'struct compat_arpt_entry *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x12a80d4f0 <col:19> 'struct compat_arpt_entry *' lvalue ParmVar 0x12a128e48 'e' 'struct compat_arpt_entry *'
|   |   | `-ImplicitCastExpr 0x12a80d5b0 <col:22> 'const unsigned char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x12a80d510 <col:22> 'const unsigned char *' lvalue ParmVar 0x12a808408 'limit' 'const unsigned char *'
|   |   `-ReturnStmt 0x12a80d660 <line:20:3, col:11>
|   |     `-UnaryOperator 0x12a80d648 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |       `-ImplicitCastExpr 0x12a80d630 <col:11> '<dependent type>' contains-errors <LValueToRValue>
|   |         `-RecoveryExpr 0x12a80d610 <col:11> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x12a80da08 <line:23:2, line:28:2>
|   | |-RecoveryExpr 0x12a80d828 <line:23:6, line:24:45> '_Bool' contains-errors
|   | `-CompoundStmt 0x12a80d9e8 <col:48, line:28:2>
|   |   |-CallExpr 0x12a80d908 <line:25:3, line:26:22> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x12a80d848 <line:25:3> 'int ()' Function 0x12a808f68 'duprintf' 'int ()'
|   |   | |-StringLiteral 0x12a80d868 <col:12> 'char[4]' lvalue "STR"
|   |   | |-DeclRefExpr 0x12a80d888 <line:26:5> 'struct compat_arpt_entry *' lvalue ParmVar 0x12a128e48 'e' 'struct compat_arpt_entry *'
|   |   | `-RecoveryExpr 0x12a80d8e0 <col:8, col:11> '<dependent type>' contains-errors lvalue
|   |   |   `-DeclRefExpr 0x12a80d8a8 <col:8> 'struct compat_arpt_entry *' lvalue ParmVar 0x12a128e48 'e' 'struct compat_arpt_entry *'
|   |   `-ReturnStmt 0x12a80d9d8 <line:27:3, col:11>
|   |     `-UnaryOperator 0x12a80d9c0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |       `-ImplicitCastExpr 0x12a80d9a8 <col:11> '<dependent type>' contains-errors <LValueToRValue>
|   |         `-RecoveryExpr 0x12a80d988 <col:11> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x12a80dc88 <line:30:2, line:31:11>
|   | |-UnaryOperator 0x12a80dbc8 <line:30:6, col:29> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-CallExpr 0x12a80dba0 <col:7, col:29> '<dependent type>' contains-errors
|   | |   |-DeclRefExpr 0x12a80db08 <col:7> 'int ()' Function 0x12a80da50 'arp_checkentry' 'int ()'
|   | |   `-UnaryOperator 0x12a80db88 <col:22, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | |     `-RecoveryExpr 0x12a80db60 <col:23, col:26> '<dependent type>' contains-errors lvalue
|   | |       `-DeclRefExpr 0x12a80db28 <col:23> 'struct compat_arpt_entry *' lvalue ParmVar 0x12a128e48 'e' 'struct compat_arpt_entry *'
|   | `-ReturnStmt 0x12a80dc78 <line:31:3, col:11>
|   |   `-UnaryOperator 0x12a80dc60 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |     `-ImplicitCastExpr 0x12a80dc48 <col:11> '<dependent type>' contains-errors <LValueToRValue>
|   |       `-RecoveryExpr 0x12a80dc28 <col:11> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x12a80dee0 <line:33:2, line:34:24> 'int' contains-errors '='
|   | |-DeclRefExpr 0x12a80dca8 <line:33:2> 'int' lvalue Var 0x12a808d50 'ret' 'int'
|   | `-CallExpr 0x12a80dea8 <col:8, line:34:24> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x12a80dda8 <line:33:8> 'int ()' Function 0x12a80dcf0 'xt_compat_check_entry_offsets' 'int ()'
|   |   |-DeclRefExpr 0x12a80ddc8 <col:38> 'struct compat_arpt_entry *' lvalue ParmVar 0x12a128e48 'e' 'struct compat_arpt_entry *'
|   |   |-RecoveryExpr 0x12a80de20 <col:41, col:44> '<dependent type>' contains-errors lvalue
|   |   | `-DeclRefExpr 0x12a80dde8 <col:41> 'struct compat_arpt_entry *' lvalue ParmVar 0x12a128e48 'e' 'struct compat_arpt_entry *'
|   |   `-RecoveryExpr 0x12a80de80 <line:34:10, col:13> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x12a80de48 <col:10> 'struct compat_arpt_entry *' lvalue ParmVar 0x12a128e48 'e' 'struct compat_arpt_entry *'
|   |-IfStmt 0x12a80df80 <line:35:2, line:36:10>
|   | |-ImplicitCastExpr 0x12a80df20 <line:35:6> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x12a80df00 <col:6> 'int' lvalue Var 0x12a808d50 'ret' 'int'
|   | `-ReturnStmt 0x12a80df70 <line:36:3, col:10>
|   |   `-ImplicitCastExpr 0x12a80df58 <col:10> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x12a80df38 <col:10> 'int' lvalue Var 0x12a808d50 'ret' 'int'
|   |-BinaryOperator 0x12a141238 <line:39:2, col:37> 'unsigned int' '='
|   | |-DeclRefExpr 0x12a80e0d8 <col:2> 'unsigned int' lvalue Var 0x12a808cb8 'entry_offset' 'unsigned int'
|   | `-ImplicitCastExpr 0x12a141220 <col:17, col:37> 'unsigned int' <IntegralCast>
|   |   `-BinaryOperator 0x12a141200 <col:17, col:37> 'long' '-'
|   |     |-CStyleCastExpr 0x12a80e148 <col:17, col:25> 'void *' <BitCast>
|   |     | `-ImplicitCastExpr 0x12a80e130 <col:25> 'struct compat_arpt_entry *' <LValueToRValue> part_of_explicit_cast
|   |     |   `-DeclRefExpr 0x12a80e0f8 <col:25> 'struct compat_arpt_entry *' lvalue ParmVar 0x12a128e48 'e' 'struct compat_arpt_entry *'
|   |     `-CStyleCastExpr 0x12a80e1c0 <col:29, col:37> 'void *' <BitCast>
|   |       `-ImplicitCastExpr 0x12a80e1a8 <col:37> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
|   |         `-DeclRefExpr 0x12a80e170 <col:37> 'const unsigned char *' lvalue ParmVar 0x12a808388 'base' 'const unsigned char *'
|   |-BinaryOperator 0x12a141408 <line:41:2, col:30> 'struct xt_entry_target *' '='
|   | |-DeclRefExpr 0x12a141258 <col:2> 'struct xt_entry_target *' lvalue Var 0x12a808a08 't' 'struct xt_entry_target *'
|   | `-ImplicitCastExpr 0x12a1413f0 <col:6, col:30> 'struct xt_entry_target *' <IntegralToPointer>
|   |   `-CallExpr 0x12a1413b0 <col:6, col:30> 'int'
|   |     |-ImplicitCastExpr 0x12a141398 <col:6> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x12a141358 <col:6> 'int ()' Function 0x12a1412a0 'compat_arpt_get_target' 'int ()'
|   |     `-ImplicitCastExpr 0x12a1413d8 <col:29> 'struct compat_arpt_entry *' <LValueToRValue>
|   |       `-DeclRefExpr 0x12a141378 <col:29> 'struct compat_arpt_entry *' lvalue ParmVar 0x12a128e48 'e' 'struct compat_arpt_entry *'
|   |-IfStmt 0x12a141c48 <line:44:2, line:49:2>
|   | |-CallExpr 0x12a141860 <line:44:6, col:19> 'int'
|   | | |-ImplicitCastExpr 0x12a141848 <col:6> 'int (*)()' <FunctionToPointerDecay>
|   | | | `-DeclRefExpr 0x12a141808 <col:6> 'int ()' Function 0x12a141750 'IS_ERR' 'int ()'
|   | | `-ImplicitCastExpr 0x12a141888 <col:13> 'struct xt_target *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x12a141828 <col:13> 'struct xt_target *' lvalue Var 0x12a808c08 'target' 'struct xt_target *'
|   | `-CompoundStmt 0x12a141c20 <col:22, line:49:2>
|   |   |-CallExpr 0x12a1419d0 <line:45:3, line:46:19> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x12a1418a0 <line:45:3> 'int ()' Function 0x12a808f68 'duprintf' 'int ()'
|   |   | |-StringLiteral 0x12a1418c0 <col:12> 'char[4]' lvalue "STR"
|   |   | `-CXXDependentScopeMemberExpr 0x12a141988 <line:46:5, col:15> '<dependent type>' contains-errors lvalue .name
|   |   |   `-CXXDependentScopeMemberExpr 0x12a141940 <col:5, col:10> '<dependent type>' contains-errors lvalue .user
|   |   |     `-RecoveryExpr 0x12a141918 <col:5, col:8> '<dependent type>' contains-errors lvalue
|   |   |       `-DeclRefExpr 0x12a1418e0 <col:5> 'struct xt_entry_target *' lvalue Var 0x12a808a08 't' 'struct xt_entry_target *'
|   |   |-BinaryOperator 0x12a141b98 <line:47:3, col:23> 'int' '='
|   |   | |-DeclRefExpr 0x12a141a00 <col:3> 'int' lvalue Var 0x12a808d50 'ret' 'int'
|   |   | `-CallExpr 0x12a141b58 <col:9, col:23> 'int'
|   |   |   |-ImplicitCastExpr 0x12a141b40 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x12a141b00 <col:9> 'int ()' Function 0x12a141a48 'PTR_ERR' 'int ()'
|   |   |   `-ImplicitCastExpr 0x12a141b80 <col:17> 'struct xt_target *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x12a141b20 <col:17> 'struct xt_target *' lvalue Var 0x12a808c08 'target' 'struct xt_target *'
|   |   `-GotoStmt 0x12a141c08 <line:48:3, col:8> 'out' 0x12a141bb8
|   |-BinaryOperator 0x12a141d78 <line:50:2, col:23> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x12a141d10 <col:2, col:14> '<dependent type>' contains-errors lvalue .target
|   | | `-CXXDependentScopeMemberExpr 0x12a141cc8 <col:2, col:7> '<dependent type>' contains-errors lvalue .kernel
|   | |   `-RecoveryExpr 0x12a141ca0 <col:2, col:5> '<dependent type>' contains-errors lvalue
|   | |     `-DeclRefExpr 0x12a141c68 <col:2> 'struct xt_entry_target *' lvalue Var 0x12a808a08 't' 'struct xt_entry_target *'
|   | `-DeclRefExpr 0x12a141d58 <col:23> 'struct xt_target *' lvalue Var 0x12a808c08 'target' 'struct xt_target *'
|   |-CompoundAssignOperator 0x12a141f30 <line:52:2, col:39> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-DeclRefExpr 0x12a141d98 <col:2> 'int' lvalue Var 0x12a808dd0 'off' 'int'
|   | `-CallExpr 0x12a141ef0 <col:9, col:39> 'int'
|   |   |-ImplicitCastExpr 0x12a141ed8 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x12a141e98 <col:9> 'int ()' Function 0x12a141de0 'xt_compat_target_offset' 'int ()'
|   |   `-ImplicitCastExpr 0x12a141f18 <col:33> 'struct xt_target *' <LValueToRValue>
|   |     `-DeclRefExpr 0x12a141eb8 <col:33> 'struct xt_target *' lvalue Var 0x12a808c08 'target' 'struct xt_target *'
|   |-CompoundAssignOperator 0x12a142000 <line:53:2, col:11> 'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   | |-UnaryOperator 0x12a141f98 <col:2, col:3> 'unsigned int' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x12a141f80 <col:3> 'unsigned int *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x12a141f60 <col:3> 'unsigned int *' lvalue ParmVar 0x12a8082d8 'size' 'unsigned int *'
|   | `-ImplicitCastExpr 0x12a141fe8 <col:11> 'unsigned int' <IntegralCast>
|   |   `-ImplicitCastExpr 0x12a141fd0 <col:11> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x12a141fb0 <col:11> 'int' lvalue Var 0x12a808dd0 'off' 'int'
|   |-IfStmt 0x12a142268 <line:55:2, line:56:8>
|   | |-ImplicitCastExpr 0x12a1421b0 <line:55:6> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x12a142190 <col:6> 'int' lvalue Var 0x12a808d50 'ret' 'int'
|   | `-GotoStmt 0x12a142250 <line:56:3, col:8> 'release_target' 0x12a142200
|   |-CallExpr 0x12a142df0 <line:67:2, col:45> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x12a142c98 <col:2> 'void *(void *, int, unsigned long)' Function 0x12a142a48 'memset' 'void *(void *, int, unsigned long)'
|   | |-UnaryOperator 0x12a142d18 <col:9, col:13> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | `-RecoveryExpr 0x12a142cf0 <col:10, col:13> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x12a142cb8 <col:10> 'struct compat_arpt_entry *' lvalue ParmVar 0x12a128e48 'e' 'struct compat_arpt_entry *'
|   | |-IntegerLiteral 0x12a142d30 <col:23> 'int' 0
|   | `-UnaryExprOrTypeTraitExpr 0x12a142dd0 <col:26, col:44> 'unsigned long' contains-errors sizeof
|   |   `-ParenExpr 0x12a142db0 <col:32, col:44> '<dependent type>' contains-errors lvalue
|   |     `-RecoveryExpr 0x12a142d88 <col:33, col:36> '<dependent type>' contains-errors lvalue
|   |       `-DeclRefExpr 0x12a142d50 <col:33> 'struct compat_arpt_entry *' lvalue ParmVar 0x12a128e48 'e' 'struct compat_arpt_entry *' non_odr_use_unevaluated
|   |-BinaryOperator 0x12a142ea8 <line:68:2, col:16> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x12a142e60 <col:2, col:5> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x12a142e28 <col:2> 'struct compat_arpt_entry *' lvalue ParmVar 0x12a128e48 'e' 'struct compat_arpt_entry *'
|   | `-IntegerLiteral 0x12a142e88 <col:16> 'int' 0
|   |-ReturnStmt 0x12a142ee8 <line:69:2, col:9>
|   | `-IntegerLiteral 0x12a142ec8 <col:9> 'int' 0
|   |-LabelStmt 0x12a143158 <line:71:1, line:72:35> 'release_target'
|   | `-CallExpr 0x12a143130 <col:2, col:35> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x12a142fd8 <col:2> 'int ()' Function 0x12a142f20 'module_put' 'int ()'
|   |   `-CXXDependentScopeMemberExpr 0x12a1430e8 <col:13, col:33> '<dependent type>' contains-errors lvalue ->me
|   |     `-CXXDependentScopeMemberExpr 0x12a1430a0 <col:13, col:25> '<dependent type>' contains-errors lvalue .target
|   |       `-CXXDependentScopeMemberExpr 0x12a143058 <col:13, col:18> '<dependent type>' contains-errors lvalue .kernel
|   |         `-RecoveryExpr 0x12a143030 <col:13, col:16> '<dependent type>' contains-errors lvalue
|   |           `-DeclRefExpr 0x12a142ff8 <col:13> 'struct xt_entry_target *' lvalue Var 0x12a808a08 't' 'struct xt_entry_target *'
|   `-LabelStmt 0x12a1431c0 <line:73:1, line:74:9> 'out'
|     `-ReturnStmt 0x12a1431b0 <col:2, col:9>
|       `-ImplicitCastExpr 0x12a143198 <col:9> 'int' <LValueToRValue>
|         `-DeclRefExpr 0x12a143178 <col:9> 'int' lvalue Var 0x12a808d50 'ret' 'int'
`-FunctionDecl 0x12a142a48 <line:67:2> col:2 implicit used memset 'void *(void *, int, unsigned long)' extern
  |-ParmVarDecl 0x12a142b48 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x12a142bb0 <<invalid sloc>> <invalid sloc> 'int'
  |-ParmVarDecl 0x12a142c18 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x12a142af0 <<invalid sloc>> Implicit 900
