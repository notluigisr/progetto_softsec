TranslationUnitDecl 0x14d855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14d8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14d855bd0 '__int128'
|-TypedefDecl 0x14d856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14d855bf0 'unsigned __int128'
|-TypedefDecl 0x14e00be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14e00bc00 'struct __NSConstantString_tag'
|   `-Record 0x14d856580 '__NSConstantString_tag'
|-TypedefDecl 0x14e00be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14d855d90 '__SVInt8_t'
|-TypedefDecl 0x14e00bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14d855db0 '__SVInt16_t'
|-TypedefDecl 0x14e00bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14d855dd0 '__SVInt32_t'
|-TypedefDecl 0x14e00bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14d855df0 '__SVInt64_t'
|-TypedefDecl 0x14e00c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14d855e10 '__SVUint8_t'
|-TypedefDecl 0x14e00c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14d855e30 '__SVUint16_t'
|-TypedefDecl 0x14e00c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14d855e50 '__SVUint32_t'
|-TypedefDecl 0x14e00c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14d855e70 '__SVUint64_t'
|-TypedefDecl 0x14e00c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14d855e90 '__SVFloat16_t'
|-TypedefDecl 0x14e00c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14d855eb0 '__SVFloat32_t'
|-TypedefDecl 0x14e00c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14d855ed0 '__SVFloat64_t'
|-TypedefDecl 0x14e00c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14d855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14e00c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14d855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14e00c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14d855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14e00c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14d855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14e00c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14d855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14e00c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14d855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14e00c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14d855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14e00c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14d855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14e00c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14d855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14e00c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14d856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14e00c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14d856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14e00c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14d856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14e00c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14d856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14e00c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14d856090 '__clang_svint8x3_t'
|-TypedefDecl 0x14e00c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14d8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14e00c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14d8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14e00c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14d8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14e00c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14d856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14e00ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14d856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14e00cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14d856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14e00cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14d856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14e00cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14d856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14e00d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14d8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14e00d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14d8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14e00d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14d8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14e00d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14d856210 '__clang_svint8x4_t'
|-TypedefDecl 0x14e00d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14d856230 '__clang_svint16x4_t'
|-TypedefDecl 0x14e00d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14d856250 '__clang_svint32x4_t'
|-TypedefDecl 0x14e00d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14d856270 '__clang_svint64x4_t'
|-TypedefDecl 0x14e00d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14d856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14e00d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14d8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14e00d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14d8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14e00d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14d8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14e00d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14d856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14e00d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14d856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14e00d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14d856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14e00d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14d856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14e00da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14d856390 '__SVBool_t'
|-TypedefDecl 0x14e00da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14d8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14e00dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14d8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14e00db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14d8563f0 '__SVCount_t'
|-TypedefDecl 0x14e00dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14e00dbb0 'char *'
|   `-BuiltinType 0x14d8556b0 'char'
|-TypedefDecl 0x14e00dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14e00dbb0 'char *'
|   `-BuiltinType 0x14d8556b0 'char'
|-FunctionDecl 0x14e027438 <dataset_diviso_filec/func15231_vuln.c:1:1, line:80:1> line:1:1 invalid input_csi_dispatch_sgr_colon 'int (struct input_ctx *, int)'
| |-ParmVarDecl 0x14e00e248 <col:30, col:48> col:48 used ictx 'struct input_ctx *'
| |-ParmVarDecl 0x14e00e2e0 <col:54, col:60> col:60 referenced invalid i 'int'
| `-CompoundStmt 0x14e02cb88 <line:2:1, line:80:1>
|   |-DeclStmt 0x14e027798 <line:3:2, col:41>
|   | |-RecordDecl 0x14e0274f0 <col:2, col:9> col:9 struct grid_cell
|   | `-VarDecl 0x14e027658 <col:2, col:37> col:20 used gc 'struct grid_cell *' cinit
|   |   `-UnaryOperator 0x14e027768 <col:25, col:37> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     `-CXXDependentScopeMemberExpr 0x14e027720 <col:26, col:37> '<dependent type>' contains-errors lvalue .cell
|   |       `-RecoveryExpr 0x14e0276f8 <col:26, col:32> '<dependent type>' contains-errors lvalue
|   |         `-DeclRefExpr 0x14e0276c0 <col:26> 'struct input_ctx *' lvalue ParmVar 0x14e00e248 'ictx' 'struct input_ctx *'
|   |-DeclStmt 0x14e027af0 <line:4:2, col:56>
|   | |-VarDecl 0x14e0277c8 <col:2, col:34> col:10 used s 'char *' cinit
|   | | `-CXXDependentScopeMemberExpr 0x14e027900 <col:14, col:34> '<dependent type>' contains-errors lvalue .str
|   | |   `-ArraySubscriptExpr 0x14e0278e0 <col:14, col:32> '<dependent type>' contains-errors lvalue
|   | |     |-ImplicitCastExpr 0x14e0278b0 <col:14, col:20> '<dependent type>' contains-errors <LValueToRValue>
|   | |     | `-RecoveryExpr 0x14e027868 <col:14, col:20> '<dependent type>' contains-errors lvalue
|   | |     |   `-DeclRefExpr 0x14e027830 <col:14> 'struct input_ctx *' lvalue ParmVar 0x14e00e248 'ictx' 'struct input_ctx *'
|   | |     `-ImplicitCastExpr 0x14e0278c8 <col:31> '<dependent type>' contains-errors <LValueToRValue>
|   | |       `-RecoveryExpr 0x14e027890 <col:31> '<dependent type>' contains-errors lvalue
|   | |-VarDecl 0x14e027960 <col:2, col:40> col:40 used copy 'char *'
|   | |-VarDecl 0x14e0279e0 <col:2, col:47> col:47 used ptr 'char *'
|   | `-VarDecl 0x14e027a60 <col:2, col:53> col:53 used out 'char *'
|   |-DeclStmt 0x14e027c20 <line:5:2, col:13>
|   | `-VarDecl 0x14e027bb8 <col:2, col:12> col:9 used p 'int[8]'
|   |-DeclStmt 0x14e027cb8 <line:7:2, col:21>
|   | `-VarDecl 0x14e027c50 <col:2, col:15> col:15 used errstr 'const char *'
|   |-BinaryOperator 0x14e028338 <line:13:2, col:24> 'char *' contains-errors '='
|   | |-DeclRefExpr 0x14e028148 <col:2> 'char *' lvalue Var 0x14e0279e0 'ptr' 'char *'
|   | `-BinaryOperator 0x14e028318 <col:8, col:24> 'char *' contains-errors '='
|   |   |-DeclRefExpr 0x14e028168 <col:8> 'char *' lvalue Var 0x14e027960 'copy' 'char *'
|   |   `-ImplicitCastExpr 0x14e028300 <col:15, col:24> 'char *' contains-errors <IntegralToPointer>
|   |     `-CallExpr 0x14e0282c0 <col:15, col:24> 'int' contains-errors
|   |       |-ImplicitCastExpr 0x14e0282a8 <col:15> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x14e028268 <col:15> 'int ()' Function 0x14e0281b0 'xstrdup' 'int ()'
|   |       `-ImplicitCastExpr 0x14e0282e8 <col:23> 'char *' contains-errors <LValueToRValue>
|   |         `-DeclRefExpr 0x14e028288 <col:23> 'char *' contains-errors lvalue Var 0x14e0277c8 's' 'char *'
|   |-WhileStmt 0x14e02a1d8 <line:14:2, line:24:2>
|   | |-BinaryOperator 0x14e029830 <line:14:9, col:40> 'int' contains-errors '!='
|   | | |-ParenExpr 0x14e0297f0 <col:9, col:35> 'char *'
|   | | | `-BinaryOperator 0x14e0297d0 <col:10, col:34> 'char *' '='
|   | | |   |-DeclRefExpr 0x14e028358 <col:10> 'char *' lvalue Var 0x14e027a60 'out' 'char *'
|   | | |   `-ImplicitCastExpr 0x14e0297b8 <col:16, col:34> 'char *' <IntegralToPointer>
|   | | |     `-CallExpr 0x14e029770 <col:16, col:34> 'int'
|   | | |       |-ImplicitCastExpr 0x14e029758 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   | | |       | `-DeclRefExpr 0x14e0294b8 <col:16> 'int ()' Function 0x14e029400 'strsep' 'int ()'
|   | | |       |-UnaryOperator 0x14e029530 <col:23, col:24> 'char **' prefix '&' cannot overflow
|   | | |       | `-DeclRefExpr 0x14e0294d8 <col:24> 'char *' lvalue Var 0x14e0279e0 'ptr' 'char *'
|   | | |       `-ImplicitCastExpr 0x14e0297a0 <col:29> 'char *' <ArrayToPointerDecay>
|   | | |         `-StringLiteral 0x14e029590 <col:29> 'char[4]' lvalue "STR"
|   | | `-RecoveryExpr 0x14e029810 <col:40> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x14e02a1c0 <col:46, line:24:2>
|   |   `-IfStmt 0x14e029f40 <line:15:3, line:22:4> has_else
|   |     |-BinaryOperator 0x14e0298e8 <line:15:7, col:15> 'int' '!='
|   |     | |-ImplicitCastExpr 0x14e0298d0 <col:7, col:8> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x14e0298b8 <col:7, col:8> 'char' <LValueToRValue>
|   |     | |   `-UnaryOperator 0x14e029888 <col:7, col:8> 'char' lvalue prefix '*' cannot overflow
|   |     | |     `-ImplicitCastExpr 0x14e029870 <col:8> 'char *' <LValueToRValue>
|   |     | |       `-DeclRefExpr 0x14e029850 <col:8> 'char *' lvalue Var 0x14e027a60 'out' 'char *'
|   |     | `-CharacterLiteral 0x14e0298a0 <col:15> 'int' 0
|   |     |-CompoundStmt 0x14e029f20 <col:21, line:21:3>
|   |     | `-IfStmt 0x14e029f00 <line:17:4, line:20:4>
|   |     |   |-RecoveryExpr 0x14e029c10 <line:17:8, col:39> '_Bool' contains-errors
|   |     |   `-CompoundStmt 0x14e029ee0 <col:42, line:20:4>
|   |     |     |-CallExpr 0x14e029e78 <line:18:5, col:14> 'void'
|   |     |     | |-ImplicitCastExpr 0x14e029e60 <col:5> 'void (*)(void *)' <FunctionToPointerDecay>
|   |     |     | | `-DeclRefExpr 0x14e029dd8 <col:5> 'void (void *)' Function 0x14e029c68 'free' 'void (void *)'
|   |     |     | `-ImplicitCastExpr 0x14e029eb8 <col:10> 'void *' <BitCast>
|   |     |     |   `-ImplicitCastExpr 0x14e029ea0 <col:10> 'char *' <LValueToRValue>
|   |     |     |     `-DeclRefExpr 0x14e029df8 <col:10> 'char *' lvalue Var 0x14e027960 'copy' 'char *'
|   |     |     `-ReturnStmt 0x14e029ed0 <line:19:5>
|   |     `-NullStmt 0x14e029f38 <line:22:4>
|   |-CallExpr 0x14e02a268 <line:25:2, col:11> 'void'
|   | |-ImplicitCastExpr 0x14e02a250 <col:2> 'void (*)(void *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x14e02a1f8 <col:2> 'void (void *)' Function 0x14e029c68 'free' 'void (void *)'
|   | `-ImplicitCastExpr 0x14e02a2a8 <col:7> 'void *' <BitCast>
|   |   `-ImplicitCastExpr 0x14e02a290 <col:7> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x14e02a218 <col:7> 'char *' lvalue Var 0x14e027960 'copy' 'char *'
|   |-IfStmt 0x14e02a310 <line:27:2, line:28:3>
|   | |-RecoveryExpr 0x14e02a2e0 <line:27:6, col:11> '_Bool' contains-errors
|   | `-ReturnStmt 0x14e02a300 <line:28:3>
|   |-IfStmt 0x14e02bc90 <line:29:2, line:58:2>
|   | |-BinaryOperator 0x14e02a3e0 <line:29:6, col:14> 'int' '=='
|   | | |-ImplicitCastExpr 0x14e02a3c8 <col:6, col:9> 'int' <LValueToRValue>
|   | | | `-ArraySubscriptExpr 0x14e02a388 <col:6, col:9> 'int' lvalue
|   | | |   |-ImplicitCastExpr 0x14e02a370 <col:6> 'int *' <ArrayToPointerDecay>
|   | | |   | `-DeclRefExpr 0x14e02a330 <col:6> 'int[8]' lvalue Var 0x14e027bb8 'p' 'int[8]'
|   | | |   `-IntegerLiteral 0x14e02a350 <col:8> 'int' 0
|   | | `-IntegerLiteral 0x14e02a3a8 <col:14> 'int' 4
|   | `-CompoundStmt 0x14e02bc68 <col:17, line:58:2>
|   |   |-IfStmt 0x14e02b450 <line:30:3, line:31:4>
|   |   | |-RecoveryExpr 0x14e02b420 <line:30:7, col:12> '_Bool' contains-errors
|   |   | `-ReturnStmt 0x14e02b440 <line:31:4>
|   |   |-SwitchStmt 0x14e02b500 <line:32:3, line:56:3>
|   |   | |-ImplicitCastExpr 0x14e02b4e8 <line:32:11, col:14> 'int' <LValueToRValue>
|   |   | | `-ArraySubscriptExpr 0x14e02b4c8 <col:11, col:14> 'int' lvalue
|   |   | |   |-ImplicitCastExpr 0x14e02b4b0 <col:11> 'int *' <ArrayToPointerDecay>
|   |   | |   | `-DeclRefExpr 0x14e02b470 <col:11> 'int[8]' lvalue Var 0x14e027bb8 'p' 'int[8]'
|   |   | |   `-IntegerLiteral 0x14e02b490 <col:13> 'int' 1
|   |   | `-CompoundStmt 0x14e02bbe8 <col:17, line:56:3>
|   |   |   |-CaseStmt 0x14e02b560 <line:33:3, <invalid sloc>>
|   |   |   | |-ConstantExpr 0x14e02b548 <col:8> 'int'
|   |   |   | | `-IntegerLiteral 0x14e02b528 <col:8> 'int' 0
|   |   |   | `-NullStmt 0x14e02b5e8 <<invalid sloc>>
|   |   |   |-BreakStmt 0x14e02b5f0 <line:35:4>
|   |   |   |-CaseStmt 0x14e02b630 <line:36:3, <invalid sloc>>
|   |   |   | |-ConstantExpr 0x14e02b618 <col:8> 'int'
|   |   |   | | `-IntegerLiteral 0x14e02b5f8 <col:8> 'int' 1
|   |   |   | `-NullStmt 0x14e02b6b8 <<invalid sloc>>
|   |   |   |-BreakStmt 0x14e02b720 <line:39:4>
|   |   |   |-CaseStmt 0x14e02b760 <line:40:3, <invalid sloc>>
|   |   |   | |-ConstantExpr 0x14e02b748 <col:8> 'int'
|   |   |   | | `-IntegerLiteral 0x14e02b728 <col:8> 'int' 2
|   |   |   | `-NullStmt 0x14e02b7e8 <<invalid sloc>>
|   |   |   |-BreakStmt 0x14e02b850 <line:43:4>
|   |   |   |-CaseStmt 0x14e02b890 <line:44:3, <invalid sloc>>
|   |   |   | |-ConstantExpr 0x14e02b878 <col:8> 'int'
|   |   |   | | `-IntegerLiteral 0x14e02b858 <col:8> 'int' 3
|   |   |   | `-NullStmt 0x14e02b918 <<invalid sloc>>
|   |   |   |-BreakStmt 0x14e02b980 <line:47:4>
|   |   |   |-CaseStmt 0x14e02b9c0 <line:48:3, <invalid sloc>>
|   |   |   | |-ConstantExpr 0x14e02b9a8 <col:8> 'int'
|   |   |   | | `-IntegerLiteral 0x14e02b988 <col:8> 'int' 4
|   |   |   | `-NullStmt 0x14e02ba48 <<invalid sloc>>
|   |   |   |-BreakStmt 0x14e02bab0 <line:51:4>
|   |   |   |-CaseStmt 0x14e02baf0 <line:52:3, <invalid sloc>>
|   |   |   | |-ConstantExpr 0x14e02bad8 <col:8> 'int'
|   |   |   | | `-IntegerLiteral 0x14e02bab8 <col:8> 'int' 5
|   |   |   | `-NullStmt 0x14e02bb78 <<invalid sloc>>
|   |   |   `-BreakStmt 0x14e02bbe0 <line:55:4>
|   |   `-ReturnStmt 0x14e02bc58 <line:57:3>
|   |-IfStmt 0x14e02bfd0 <line:59:2, line:60:3>
|   | |-RecoveryExpr 0x14e02bfa0 <line:59:6, col:54> '_Bool' contains-errors
|   | `-ReturnStmt 0x14e02bfc0 <line:60:3>
|   `-SwitchStmt 0x14e02c080 <line:61:2, line:79:2>
|     |-ImplicitCastExpr 0x14e02c068 <line:61:10, col:13> 'int' <LValueToRValue>
|     | `-ArraySubscriptExpr 0x14e02c048 <col:10, col:13> 'int' lvalue
|     |   |-ImplicitCastExpr 0x14e02c030 <col:10> 'int *' <ArrayToPointerDecay>
|     |   | `-DeclRefExpr 0x14e02bff0 <col:10> 'int[8]' lvalue Var 0x14e027bb8 'p' 'int[8]'
|     |   `-IntegerLiteral 0x14e02c010 <col:12> 'int' 1
|     `-CompoundStmt 0x14e02cb38 <col:16, line:79:2>
|       |-CaseStmt 0x14e02c0e0 <line:62:2, line:64:4>
|       | |-ConstantExpr 0x14e02c0c8 <line:62:7> 'int'
|       | | `-IntegerLiteral 0x14e02c0a8 <col:7> 'int' 2
|       | `-IfStmt 0x14e02c150 <line:63:3, line:64:4>
|       |   |-RecoveryExpr 0x14e02c128 <line:63:7, col:11> '_Bool' contains-errors
|       |   `-BreakStmt 0x14e02c148 <line:64:4>
|       |-IfStmt 0x14e02c2c0 <line:65:3, line:68:8> has_else
|       | |-RecoveryExpr 0x14e02c190 <line:65:7, col:12> '_Bool' contains-errors
|       | |-BinaryOperator 0x14e02c218 <line:66:4, col:8> '<dependent type>' contains-errors '='
|       | | |-RecoveryExpr 0x14e02c1d0 <col:4> '<dependent type>' contains-errors lvalue
|       | | | `-DeclRefExpr 0x14e02c1b0 <col:4> 'int' lvalue ParmVar 0x14e00e2e0 'i' 'int'
|       | | `-IntegerLiteral 0x14e02c1f8 <col:8> 'int' 2
|       | `-BinaryOperator 0x14e02c2a0 <line:68:4, col:8> '<dependent type>' contains-errors '='
|       |   |-RecoveryExpr 0x14e02c258 <col:4> '<dependent type>' contains-errors lvalue
|       |   | `-DeclRefExpr 0x14e02c238 <col:4> 'int' lvalue ParmVar 0x14e00e2e0 'i' 'int'
|       |   `-IntegerLiteral 0x14e02c280 <col:8> 'int' 3
|       |-IfStmt 0x14e02c378 <line:69:3, line:70:4>
|       | |-RecoveryExpr 0x14e02c350 <line:69:7, col:15> '_Bool' contains-errors
|       | `-BreakStmt 0x14e02c370 <line:70:4>
|       |-CallExpr 0x14e02c770 <line:71:3, line:72:15> '<dependent type>' contains-errors
|       | |-DeclRefExpr 0x14e02c4b8 <line:71:3> 'int ()' Function 0x14e02c400 'input_csi_dispatch_sgr_rgb_do' 'int ()'
|       | |-DeclRefExpr 0x14e02c4d8 <col:33> 'struct input_ctx *' lvalue ParmVar 0x14e00e248 'ictx' 'struct input_ctx *'
|       | |-ArraySubscriptExpr 0x14e02c550 <col:39, col:42> 'int' lvalue
|       | | |-ImplicitCastExpr 0x14e02c538 <col:39> 'int *' <ArrayToPointerDecay>
|       | | | `-DeclRefExpr 0x14e02c4f8 <col:39> 'int[8]' lvalue Var 0x14e027bb8 'p' 'int[8]'
|       | | `-IntegerLiteral 0x14e02c518 <col:41> 'int' 0
|       | |-ArraySubscriptExpr 0x14e02c5e0 <col:45, col:48> '<dependent type>' contains-errors lvalue
|       | | |-ImplicitCastExpr 0x14e02c5b0 <col:45> 'int *' <ArrayToPointerDecay>
|       | | | `-DeclRefExpr 0x14e02c570 <col:45> 'int[8]' lvalue Var 0x14e027bb8 'p' 'int[8]'
|       | | `-ImplicitCastExpr 0x14e02c5c8 <col:47> '<dependent type>' contains-errors <LValueToRValue>
|       | |   `-RecoveryExpr 0x14e02c590 <col:47> '<dependent type>' contains-errors lvalue
|       | |-ArraySubscriptExpr 0x14e02c698 <col:51, col:58> '<dependent type>' contains-errors lvalue
|       | | |-ImplicitCastExpr 0x14e02c680 <col:51> 'int *' <ArrayToPointerDecay>
|       | | | `-DeclRefExpr 0x14e02c600 <col:51> 'int[8]' lvalue Var 0x14e027bb8 'p' 'int[8]'
|       | | `-BinaryOperator 0x14e02c660 <col:53, col:57> '<dependent type>' contains-errors '+'
|       | |   |-RecoveryExpr 0x14e02c620 <col:53> '<dependent type>' contains-errors lvalue
|       | |   `-IntegerLiteral 0x14e02c640 <col:57> 'int' 1
|       | `-ArraySubscriptExpr 0x14e02c750 <line:72:7, col:14> '<dependent type>' contains-errors lvalue
|       |   |-ImplicitCastExpr 0x14e02c738 <col:7> 'int *' <ArrayToPointerDecay>
|       |   | `-DeclRefExpr 0x14e02c6b8 <col:7> 'int[8]' lvalue Var 0x14e027bb8 'p' 'int[8]'
|       |   `-BinaryOperator 0x14e02c718 <col:9, col:13> '<dependent type>' contains-errors '+'
|       |     |-RecoveryExpr 0x14e02c6d8 <col:9> '<dependent type>' contains-errors lvalue
|       |     `-IntegerLiteral 0x14e02c6f8 <col:13> 'int' 2
|       |-BreakStmt 0x14e02c7b8 <line:73:3>
|       |-CaseStmt 0x14e02c7f8 <line:74:2, line:76:4>
|       | |-ConstantExpr 0x14e02c7e0 <line:74:7> 'int'
|       | | `-IntegerLiteral 0x14e02c7c0 <col:7> 'int' 5
|       | `-IfStmt 0x14e02c868 <line:75:3, line:76:4>
|       |   |-RecoveryExpr 0x14e02c840 <line:75:7, col:11> '_Bool' contains-errors
|       |   `-BreakStmt 0x14e02c860 <line:76:4>
|       |-CallExpr 0x14e02cab0 <line:77:3, col:49> 'int'
|       | |-ImplicitCastExpr 0x14e02ca98 <col:3> 'int (*)()' <FunctionToPointerDecay>
|       | | `-DeclRefExpr 0x14e02c968 <col:3> 'int ()' Function 0x14e02c8b0 'input_csi_dispatch_sgr_256_do' 'int ()'
|       | |-ImplicitCastExpr 0x14e02cae8 <col:33> 'struct input_ctx *' <LValueToRValue>
|       | | `-DeclRefExpr 0x14e02c988 <col:33> 'struct input_ctx *' lvalue ParmVar 0x14e00e248 'ictx' 'struct input_ctx *'
|       | |-ImplicitCastExpr 0x14e02cb00 <col:39, col:42> 'int' <LValueToRValue>
|       | | `-ArraySubscriptExpr 0x14e02ca00 <col:39, col:42> 'int' lvalue
|       | |   |-ImplicitCastExpr 0x14e02c9e8 <col:39> 'int *' <ArrayToPointerDecay>
|       | |   | `-DeclRefExpr 0x14e02c9a8 <col:39> 'int[8]' lvalue Var 0x14e027bb8 'p' 'int[8]'
|       | |   `-IntegerLiteral 0x14e02c9c8 <col:41> 'int' 0
|       | `-ImplicitCastExpr 0x14e02cb18 <col:45, col:48> 'int' <LValueToRValue>
|       |   `-ArraySubscriptExpr 0x14e02ca78 <col:45, col:48> 'int' lvalue
|       |     |-ImplicitCastExpr 0x14e02ca60 <col:45> 'int *' <ArrayToPointerDecay>
|       |     | `-DeclRefExpr 0x14e02ca20 <col:45> 'int[8]' lvalue Var 0x14e027bb8 'p' 'int[8]'
|       |     `-IntegerLiteral 0x14e02ca40 <col:47> 'int' 2
|       `-BreakStmt 0x14e02cb30 <line:78:3>
`-FunctionDecl 0x14e029c68 <line:18:5> col:5 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x14e029d68 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x14e029d10 <<invalid sloc>> Implicit 873
