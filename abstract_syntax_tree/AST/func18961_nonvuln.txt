TranslationUnitDecl 0x150855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1508564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x150855bd0 '__int128'
|-TypedefDecl 0x150856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x150855bf0 'unsigned __int128'
|-TypedefDecl 0x150926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x150926000 'struct __NSConstantString_tag'
|   `-Record 0x150856580 '__NSConstantString_tag'
|-TypedefDecl 0x150926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x150855d90 '__SVInt8_t'
|-TypedefDecl 0x150926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x150855db0 '__SVInt16_t'
|-TypedefDecl 0x150926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x150855dd0 '__SVInt32_t'
|-TypedefDecl 0x1509263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x150855df0 '__SVInt64_t'
|-TypedefDecl 0x150926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x150855e10 '__SVUint8_t'
|-TypedefDecl 0x1509264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x150855e30 '__SVUint16_t'
|-TypedefDecl 0x150926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x150855e50 '__SVUint32_t'
|-TypedefDecl 0x150926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x150855e70 '__SVUint64_t'
|-TypedefDecl 0x1509265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x150855e90 '__SVFloat16_t'
|-TypedefDecl 0x150926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x150855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1509266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x150855ed0 '__SVFloat64_t'
|-TypedefDecl 0x150926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x150855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x150926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x150855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1509267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x150855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x150926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x150855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1509268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x150855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x150926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x150855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x150926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x150855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1509269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x150855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x150926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x150855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x150926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x150856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x150926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x150856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x150926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x150856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x150926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x150856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x150926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x150856090 '__clang_svint8x3_t'
|-TypedefDecl 0x150926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1508560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x150926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1508560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x150926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1508560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x150926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x150856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x150926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x150856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x150926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x150856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x150926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x150856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x150926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x150856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x150927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1508561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x150927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1508561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1509278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1508561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x150927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x150856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1509279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x150856230 '__clang_svint16x4_t'
|-TypedefDecl 0x150927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x150856250 '__clang_svint32x4_t'
|-TypedefDecl 0x150927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x150856270 '__clang_svint64x4_t'
|-TypedefDecl 0x150927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x150856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x150927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1508562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x150927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1508562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x150927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1508562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x150927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x150856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x150927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x150856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x150927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x150856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x150927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x150856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x150927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x150856390 '__SVBool_t'
|-TypedefDecl 0x150927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1508563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x150927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1508563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x150927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1508563f0 '__SVCount_t'
|-TypedefDecl 0x150927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x150927fb0 'char *'
|   `-BuiltinType 0x1508556b0 'char'
|-TypedefDecl 0x150928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x150927fb0 'char *'
|   `-BuiltinType 0x1508556b0 'char'
`-FunctionDecl 0x150940a00 <dataset_diviso_filec/func18961_nonvuln.c:1:1, line:25:1> line:1:12 wcd9335_codec_find_amic_input 'int (struct snd_soc_component *, int)' static
  |-ParmVarDecl 0x150928648 <col:42, col:68> col:68 used comp 'struct snd_soc_component *'
  |-ParmVarDecl 0x1509286c8 <line:2:7, col:11> col:11 used adc_mux_n 'int'
  `-CompoundStmt 0x150942f98 <line:3:1, line:25:1>
    |-DeclStmt 0x150940ca0 <line:4:2, col:24>
    | |-VarDecl 0x150940b18 <col:2, col:6> col:6 used mux_sel 'int'
    | |-VarDecl 0x150940b98 <col:2, col:15> col:15 used reg 'int'
    | `-VarDecl 0x150940c18 <col:2, col:20> col:20 used mreg 'int'
    |-IfStmt 0x150940f98 <line:6:2, line:8:10>
    | |-BinaryOperator 0x150940f48 <line:6:6, line:7:19> 'int' contains-errors '||'
    | | |-BinaryOperator 0x150940ee8 <line:6:6, col:35> 'int' contains-errors '||'
    | | | |-BinaryOperator 0x150940e88 <col:6, col:18> 'int' '<'
    | | | | |-ImplicitCastExpr 0x150940e70 <col:6> 'int' <LValueToRValue>
    | | | | | `-DeclRefExpr 0x150940cb8 <col:6> 'int' lvalue ParmVar 0x1509286c8 'adc_mux_n' 'int'
    | | | | `-IntegerLiteral 0x150940cd8 <col:18> 'int' 0
    | | | `-BinaryOperator 0x150940ec8 <col:23, col:35> 'int' contains-errors '>'
    | | |   |-DeclRefExpr 0x150940d30 <col:23> 'int' lvalue ParmVar 0x1509286c8 'adc_mux_n' 'int'
    | | |   `-RecoveryExpr 0x150940ea8 <col:35> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x150940f28 <line:7:6, col:19> 'int' contains-errors '=='
    | |   |-DeclRefExpr 0x150940dc0 <col:6> 'int' lvalue ParmVar 0x1509286c8 'adc_mux_n' 'int'
    | |   `-RecoveryExpr 0x150940f08 <col:19> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x150940f88 <line:8:3, col:10>
    |   `-IntegerLiteral 0x150940f68 <col:10> 'int' 0
    |-IfStmt 0x150941950 <line:11:2, line:19:2> has_else
    | |-BinaryOperator 0x150941010 <line:11:6, col:18> 'int' '<'
    | | |-ImplicitCastExpr 0x150940ff8 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x150940fb8 <col:6> 'int' lvalue ParmVar 0x1509286c8 'adc_mux_n' 'int'
    | | `-IntegerLiteral 0x150940fd8 <col:18> 'int' 4
    | |-CompoundStmt 0x1509415d8 <col:21, line:15:2>
    | | |-BinaryOperator 0x150941198 <line:12:3, col:52> 'int' contains-errors '='
    | | | |-DeclRefExpr 0x150941030 <col:3> 'int' lvalue Var 0x150940b98 'reg' 'int'
    | | | `-BinaryOperator 0x150941178 <col:9, col:52> '<dependent type>' contains-errors '+'
    | | |   |-RecoveryExpr 0x150941120 <col:9> '<dependent type>' contains-errors lvalue
    | | |   `-BinaryOperator 0x150941158 <col:48, col:52> 'int' '*'
    | | |     |-IntegerLiteral 0x150941068 <col:48> 'int' 2
    | | |     `-ImplicitCastExpr 0x150941140 <col:52> 'int' <LValueToRValue>
    | | |       `-DeclRefExpr 0x150941088 <col:52> 'int' lvalue ParmVar 0x1509286c8 'adc_mux_n' 'int'
    | | |-BinaryOperator 0x150941320 <line:13:3, col:53> 'int' contains-errors '='
    | | | |-DeclRefExpr 0x1509411b8 <col:3> 'int' lvalue Var 0x150940c18 'mreg' 'int'
    | | | `-BinaryOperator 0x150941300 <col:10, col:53> '<dependent type>' contains-errors '+'
    | | |   |-RecoveryExpr 0x1509412a8 <col:10> '<dependent type>' contains-errors lvalue
    | | |   `-BinaryOperator 0x1509412e0 <col:49, col:53> 'int' '*'
    | | |     |-IntegerLiteral 0x1509411f0 <col:49> 'int' 2
    | | |     `-ImplicitCastExpr 0x1509412c8 <col:53> 'int' <LValueToRValue>
    | | |       `-DeclRefExpr 0x150941210 <col:53> 'int' lvalue ParmVar 0x1509286c8 'adc_mux_n' 'int'
    | | `-BinaryOperator 0x1509415b8 <line:14:3, col:51> 'int' '='
    | |   |-DeclRefExpr 0x150941340 <col:3> 'int' lvalue Var 0x150940b18 'mux_sel' 'int'
    | |   `-BinaryOperator 0x150941598 <col:13, col:51> 'int' '&'
    | |     |-CallExpr 0x150941518 <col:13, col:47> 'int'
    | |     | |-ImplicitCastExpr 0x150941500 <col:13> 'int (*)()' <FunctionToPointerDecay>
    | |     | | `-DeclRefExpr 0x150941470 <col:13> 'int ()' Function 0x1509413b8 'snd_soc_component_read32' 'int ()'
    | |     | |-ImplicitCastExpr 0x150941548 <col:38> 'struct snd_soc_component *' <LValueToRValue>
    | |     | | `-DeclRefExpr 0x150941490 <col:38> 'struct snd_soc_component *' lvalue ParmVar 0x150928648 'comp' 'struct snd_soc_component *'
    | |     | `-ImplicitCastExpr 0x150941560 <col:44> 'int' <LValueToRValue>
    | |     |   `-DeclRefExpr 0x1509414b0 <col:44> 'int' lvalue Var 0x150940b98 'reg' 'int'
    | |     `-IntegerLiteral 0x150941578 <col:51> 'int' 3
    | `-CompoundStmt 0x150941928 <line:15:9, line:19:2>
    |   |-BinaryOperator 0x150941738 <line:16:3, col:60> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x150941600 <col:3> 'int' lvalue Var 0x150940b98 'reg' 'int'
    |   | `-BinaryOperator 0x150941718 <col:9, col:60> '<dependent type>' contains-errors '-'
    |   |   |-BinaryOperator 0x1509416f8 <col:9, col:48> '<dependent type>' contains-errors '+'
    |   |   | |-RecoveryExpr 0x1509416d8 <col:9> '<dependent type>' contains-errors lvalue
    |   |   | `-DeclRefExpr 0x150941638 <col:48> 'int' lvalue ParmVar 0x1509286c8 'adc_mux_n' 'int'
    |   |   `-IntegerLiteral 0x150941678 <col:60> 'int' 4
    |   |-BinaryOperator 0x1509417b0 <line:17:3, col:10> 'int' '='
    |   | |-DeclRefExpr 0x150941758 <col:3> 'int' lvalue Var 0x150940c18 'mreg' 'int'
    |   | `-ImplicitCastExpr 0x150941798 <col:10> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x150941778 <col:10> 'int' lvalue Var 0x150940b98 'reg' 'int'
    |   `-BinaryOperator 0x150941908 <line:18:3, col:52> 'int' '='
    |     |-DeclRefExpr 0x1509417d0 <col:3> 'int' lvalue Var 0x150940b18 'mux_sel' 'int'
    |     `-BinaryOperator 0x1509418e8 <col:13, col:52> 'int' '>>'
    |       |-CallExpr 0x150941868 <col:13, col:47> 'int'
    |       | |-ImplicitCastExpr 0x150941850 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |       | | `-DeclRefExpr 0x1509417f0 <col:13> 'int ()' Function 0x1509413b8 'snd_soc_component_read32' 'int ()'
    |       | |-ImplicitCastExpr 0x150941898 <col:38> 'struct snd_soc_component *' <LValueToRValue>
    |       | | `-DeclRefExpr 0x150941810 <col:38> 'struct snd_soc_component *' lvalue ParmVar 0x150928648 'comp' 'struct snd_soc_component *'
    |       | `-ImplicitCastExpr 0x1509418b0 <col:44> 'int' <LValueToRValue>
    |       |   `-DeclRefExpr 0x150941830 <col:44> 'int' lvalue Var 0x150940b98 'reg' 'int'
    |       `-IntegerLiteral 0x1509418c8 <col:52> 'int' 6
    |-IfStmt 0x150942e50 <line:21:2, line:22:10>
    | |-BinaryOperator 0x150942e00 <line:21:6, col:17> 'int' contains-errors '!='
    | | |-DeclRefExpr 0x150941980 <col:6> 'int' lvalue Var 0x150940b18 'mux_sel' 'int'
    | | `-RecoveryExpr 0x1509419d8 <col:17> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x150942e40 <line:22:3, col:10>
    |   `-IntegerLiteral 0x150942e20 <col:10> 'int' 0
    `-ReturnStmt 0x150942f88 <line:24:2, col:48>
      `-BinaryOperator 0x150942f68 <col:9, col:48> 'int' '&'
        |-CallExpr 0x150942ee8 <col:9, col:44> 'int'
        | |-ImplicitCastExpr 0x150942ed0 <col:9> 'int (*)()' <FunctionToPointerDecay>
        | | `-DeclRefExpr 0x150942e70 <col:9> 'int ()' Function 0x1509413b8 'snd_soc_component_read32' 'int ()'
        | |-ImplicitCastExpr 0x150942f18 <col:34> 'struct snd_soc_component *' <LValueToRValue>
        | | `-DeclRefExpr 0x150942e90 <col:34> 'struct snd_soc_component *' lvalue ParmVar 0x150928648 'comp' 'struct snd_soc_component *'
        | `-ImplicitCastExpr 0x150942f30 <col:40> 'int' <LValueToRValue>
        |   `-DeclRefExpr 0x150942eb0 <col:40> 'int' lvalue Var 0x150940c18 'mreg' 'int'
        `-IntegerLiteral 0x150942f48 <col:48> 'int' 7
