TranslationUnitDecl 0x12d025008 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12d025eb8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12d0255d0 '__int128'
|-TypedefDecl 0x12d025f28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12d0255f0 'unsigned __int128'
|-TypedefDecl 0x12d045030 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12d044e00 'struct __NSConstantString_tag'
|   `-Record 0x12d025f80 '__NSConstantString_tag'
|-TypedefDecl 0x12d045098 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12d025790 '__SVInt8_t'
|-TypedefDecl 0x12d045100 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12d0257b0 '__SVInt16_t'
|-TypedefDecl 0x12d045168 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12d0257d0 '__SVInt32_t'
|-TypedefDecl 0x12d0451d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12d0257f0 '__SVInt64_t'
|-TypedefDecl 0x12d045238 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12d025810 '__SVUint8_t'
|-TypedefDecl 0x12d0452a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12d025830 '__SVUint16_t'
|-TypedefDecl 0x12d045308 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12d025850 '__SVUint32_t'
|-TypedefDecl 0x12d045370 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12d025870 '__SVUint64_t'
|-TypedefDecl 0x12d0453d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12d025890 '__SVFloat16_t'
|-TypedefDecl 0x12d045440 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12d0258b0 '__SVFloat32_t'
|-TypedefDecl 0x12d0454a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12d0258d0 '__SVFloat64_t'
|-TypedefDecl 0x12d045510 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12d0258f0 '__SVBfloat16_t'
|-TypedefDecl 0x12d045578 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12d025910 '__clang_svint8x2_t'
|-TypedefDecl 0x12d0455e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12d025930 '__clang_svint16x2_t'
|-TypedefDecl 0x12d045648 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12d025950 '__clang_svint32x2_t'
|-TypedefDecl 0x12d0456b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12d025970 '__clang_svint64x2_t'
|-TypedefDecl 0x12d045718 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12d025990 '__clang_svuint8x2_t'
|-TypedefDecl 0x12d045780 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12d0259b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12d0457e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12d0259d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12d045850 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12d0259f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12d0458b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12d025a10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12d045920 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12d025a30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12d045988 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12d025a50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12d0459f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12d025a70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12d045a58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12d025a90 '__clang_svint8x3_t'
|-TypedefDecl 0x12d045ac0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12d025ab0 '__clang_svint16x3_t'
|-TypedefDecl 0x12d045b28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12d025ad0 '__clang_svint32x3_t'
|-TypedefDecl 0x12d045b90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12d025af0 '__clang_svint64x3_t'
|-TypedefDecl 0x12d045bf8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12d025b10 '__clang_svuint8x3_t'
|-TypedefDecl 0x12d045c60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12d025b30 '__clang_svuint16x3_t'
|-TypedefDecl 0x12d045cc8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12d025b50 '__clang_svuint32x3_t'
|-TypedefDecl 0x12d045d30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12d025b70 '__clang_svuint64x3_t'
|-TypedefDecl 0x12d045d98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12d025b90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12d046600 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12d025bb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12d046668 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12d025bd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12d0466d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12d025bf0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12d046738 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12d025c10 '__clang_svint8x4_t'
|-TypedefDecl 0x12d0467a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12d025c30 '__clang_svint16x4_t'
|-TypedefDecl 0x12d046808 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12d025c50 '__clang_svint32x4_t'
|-TypedefDecl 0x12d046870 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12d025c70 '__clang_svint64x4_t'
|-TypedefDecl 0x12d0468d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12d025c90 '__clang_svuint8x4_t'
|-TypedefDecl 0x12d046940 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12d025cb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12d0469a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12d025cd0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12d046a10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12d025cf0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12d046a78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12d025d10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12d046ae0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12d025d30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12d046b48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12d025d50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12d046bb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12d025d70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12d046c18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12d025d90 '__SVBool_t'
|-TypedefDecl 0x12d046c80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12d025db0 '__clang_svboolx2_t'
|-TypedefDecl 0x12d046ce8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12d025dd0 '__clang_svboolx4_t'
|-TypedefDecl 0x12d046d50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12d025df0 '__SVCount_t'
|-TypedefDecl 0x12d046df8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12d046db0 'char *'
|   `-BuiltinType 0x12d0250b0 'char'
|-TypedefDecl 0x12d046e68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12d046db0 'char *'
|   `-BuiltinType 0x12d0250b0 'char'
|-FunctionDecl 0x12d047038 <dataset_diviso_filec/func11908_vuln.c:1:1, line:39:1> line:1:1 PHP_METHOD 'int (int, int)'
| |-ParmVarDecl 0x12d046f58 <col:12> col:12 Phar 'int'
| |-ParmVarDecl 0x12d046ed8 <col:18> col:18 addFile 'int'
| `-CompoundStmt 0x12d0622d8 <line:2:1, line:39:1>
|   |-DeclStmt 0x12d0472a0 <line:3:2, col:32>
|   | |-VarDecl 0x12d047150 <col:2, col:8> col:8 used fname 'char *'
|   | `-VarDecl 0x12d0471d0 <col:2, col:28> col:16 used localname 'char *' cinit
|   |   `-RecoveryExpr 0x12d047268 <col:28> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x12d0473e8 <line:4:2, col:36> '<dependent type>' contains-errors ','
|   | |-UnaryExprOrTypeTraitExpr 0x12d047388 <col:2, col:9> 'unsigned long' contains-errors sizeof
|   | | `-RecoveryExpr 0x12d047368 <col:9> '<dependent type>' contains-errors lvalue
|   | `-BinaryOperator 0x12d0473c8 <col:20, col:36> '<dependent type>' contains-errors '='
|   |   |-RecoveryExpr 0x12d0473a8 <col:20> '<dependent type>' contains-errors lvalue
|   |   `-IntegerLiteral 0x12d047308 <col:36> 'int' 0
|   |-CallExpr 0x12d047598 <line:8:2, col:22> 'int'
|   | `-ImplicitCastExpr 0x12d047580 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x12d047530 <col:2> 'int ()' Function 0x12d047478 'PHAR_ARCHIVE_OBJECT' 'int ()'
|   |-IfStmt 0x12d060b90 <line:10:2, line:12:2>
|   | |-BinaryOperator 0x12d060b48 <line:10:6, col:103> 'int' contains-errors '=='
|   | | |-CallExpr 0x12d060ad8 <col:6, col:98> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x12d0606b8 <col:6> 'int ()' Function 0x12d060600 'zend_parse_parameters' 'int ()'
|   | | | |-CallExpr 0x12d060a48 <col:28, col:42> 'int'
|   | | | | `-ImplicitCastExpr 0x12d060a30 <col:28> 'int (*)()' <FunctionToPointerDecay>
|   | | | |   `-DeclRefExpr 0x12d0607b8 <col:28> 'int ()' Function 0x12d060700 'ZEND_NUM_ARGS' 'int ()'
|   | | | |-StringLiteral 0x12d060850 <col:45> 'char[4]' lvalue "STR"
|   | | | |-UnaryOperator 0x12d0608c0 <col:52, col:53> 'char **' prefix '&' cannot overflow
|   | | | | `-DeclRefExpr 0x12d060870 <col:53> 'char *' lvalue Var 0x12d047150 'fname' 'char *'
|   | | | |-UnaryOperator 0x12d060a88 <col:60, col:61> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | | | `-RecoveryExpr 0x12d060a68 <col:61> '<dependent type>' contains-errors lvalue
|   | | | |-UnaryOperator 0x12d060928 <col:72, col:73> 'char **' contains-errors prefix '&' cannot overflow
|   | | | | `-DeclRefExpr 0x12d060908 <col:73> 'char *' contains-errors lvalue Var 0x12d0471d0 'localname' 'char *'
|   | | | `-UnaryOperator 0x12d060ac0 <col:84, col:85> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | |   `-RecoveryExpr 0x12d060aa0 <col:85> '<dependent type>' contains-errors lvalue
|   | | `-RecoveryExpr 0x12d060b28 <col:103> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x12d060b78 <col:112, line:12:2>
|   |   `-ReturnStmt 0x12d060b68 <line:11:3>
|   |-IfStmt 0x12d061038 <line:15:2, line:18:2>
|   | |-RecoveryExpr 0x12d060e90 <line:15:6, col:76> '_Bool' contains-errors
|   | `-CompoundStmt 0x12d061020 <col:79, line:18:2>
|   |   `-ReturnStmt 0x12d061010 <line:17:3>
|   |-IfStmt 0x12d061c48 <line:21:2, line:24:2>
|   | |-BinaryOperator 0x12d061578 <line:21:6, col:59> 'int' '&&'
|   | | |-UnaryOperator 0x12d0613e8 <col:6, col:26> 'int' prefix '!' cannot overflow
|   | | | `-CallExpr 0x12d061358 <col:7, col:26> 'char *'
|   | | |   |-ImplicitCastExpr 0x12d061340 <col:7> 'char *(*)(const char *, const char *)' <FunctionToPointerDecay>
|   | | |   | `-DeclRefExpr 0x12d061280 <col:7> 'char *(const char *, const char *)' Function 0x12d0610a0 'strstr' 'char *(const char *, const char *)'
|   | | |   |-ImplicitCastExpr 0x12d0613a0 <col:14> 'const char *' <NoOp>
|   | | |   | `-ImplicitCastExpr 0x12d061388 <col:14> 'char *' <LValueToRValue>
|   | | |   |   `-DeclRefExpr 0x12d0612a0 <col:14> 'char *' lvalue Var 0x12d047150 'fname' 'char *'
|   | | |   `-ImplicitCastExpr 0x12d0613d0 <col:21> 'const char *' <NoOp>
|   | | |     `-ImplicitCastExpr 0x12d0613b8 <col:21> 'char *' <ArrayToPointerDecay>
|   | | |       `-StringLiteral 0x12d0612c0 <col:21> 'char[4]' lvalue "STR"
|   | | `-CallExpr 0x12d061538 <col:31, col:59> 'int'
|   | |   |-ImplicitCastExpr 0x12d061520 <col:31> 'int (*)()' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x12d0614e0 <col:31> 'int ()' Function 0x12d061428 'php_check_open_basedir' 'int ()'
|   | |   `-ImplicitCastExpr 0x12d061560 <col:54> 'char *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x12d061500 <col:54> 'char *' lvalue Var 0x12d047150 'fname' 'char *'
|   | `-CompoundStmt 0x12d061c30 <col:62, line:24:2>
|   |   `-ReturnStmt 0x12d061c20 <line:23:3>
|   |-IfStmt 0x12d061e90 <line:26:2, line:29:2>
|   | |-RecoveryExpr 0x12d061dc8 <line:26:6, col:65> '_Bool' contains-errors
|   | `-CompoundStmt 0x12d061e78 <col:68, line:29:2>
|   |   `-ReturnStmt 0x12d061e68 <line:28:3>
|   `-IfStmt 0x12d061f78 <line:31:2, line:34:2>
|     |-ImplicitCastExpr 0x12d061ed0 <line:31:6> 'char *' contains-errors <LValueToRValue>
|     | `-DeclRefExpr 0x12d061eb0 <col:6> 'char *' contains-errors lvalue Var 0x12d0471d0 'localname' 'char *'
|     `-CompoundStmt 0x12d061f60 <col:17, line:34:2>
|       `-BinaryOperator 0x12d061f40 <line:32:3, col:11> 'char *' contains-errors '='
|         |-DeclRefExpr 0x12d061ee8 <col:3> 'char *' lvalue Var 0x12d047150 'fname' 'char *'
|         `-ImplicitCastExpr 0x12d061f28 <col:11> 'char *' contains-errors <LValueToRValue>
|           `-DeclRefExpr 0x12d061f08 <col:11> 'char *' contains-errors lvalue Var 0x12d0471d0 'localname' 'char *'
`-FunctionDecl 0x12d0610a0 <line:21:7> col:7 implicit used strstr 'char *(const char *, const char *)' extern
  |-ParmVarDecl 0x12d0611a0 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x12d061208 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x12d061148 <<invalid sloc>> Implicit 898
