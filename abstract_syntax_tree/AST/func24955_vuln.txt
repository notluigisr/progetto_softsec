TranslationUnitDecl 0x13c855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13c8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13c855bd0 '__int128'
|-TypedefDecl 0x13c856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13c855bf0 'unsigned __int128'
|-TypedefDecl 0x13d045430 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13d045200 'struct __NSConstantString_tag'
|   `-Record 0x13c856580 '__NSConstantString_tag'
|-TypedefDecl 0x13d045498 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13c855d90 '__SVInt8_t'
|-TypedefDecl 0x13d045500 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13c855db0 '__SVInt16_t'
|-TypedefDecl 0x13d045568 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13c855dd0 '__SVInt32_t'
|-TypedefDecl 0x13d0455d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13c855df0 '__SVInt64_t'
|-TypedefDecl 0x13d045638 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13c855e10 '__SVUint8_t'
|-TypedefDecl 0x13d0456a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13c855e30 '__SVUint16_t'
|-TypedefDecl 0x13d045708 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13c855e50 '__SVUint32_t'
|-TypedefDecl 0x13d045770 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13c855e70 '__SVUint64_t'
|-TypedefDecl 0x13d0457d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13c855e90 '__SVFloat16_t'
|-TypedefDecl 0x13d045840 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13c855eb0 '__SVFloat32_t'
|-TypedefDecl 0x13d0458a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13c855ed0 '__SVFloat64_t'
|-TypedefDecl 0x13d045910 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13c855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13d045978 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13c855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13d0459e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13c855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13d045a48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13c855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13d045ab0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13c855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13d045b18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13c855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13d045b80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13c855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13d045be8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13c855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13d045c50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13c855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13d045cb8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13c856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13d045d20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13c856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13d045d88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13c856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13d045df0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13c856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13d045e58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13c856090 '__clang_svint8x3_t'
|-TypedefDecl 0x13d045ec0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13c8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13d045f28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13c8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13d045f90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13c8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13d045ff8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13c856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13d046060 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13c856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13d0460c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13c856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13d046130 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13c856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13d046198 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13c856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13d046a00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13c8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13d046a68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13c8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13d046ad0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13c8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13d046b38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13c856210 '__clang_svint8x4_t'
|-TypedefDecl 0x13d046ba0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13c856230 '__clang_svint16x4_t'
|-TypedefDecl 0x13d046c08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13c856250 '__clang_svint32x4_t'
|-TypedefDecl 0x13d046c70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13c856270 '__clang_svint64x4_t'
|-TypedefDecl 0x13d046cd8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13c856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13d046d40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13c8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13d046da8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13c8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13d046e10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13c8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13d046e78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13c856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13d046ee0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13c856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13d046f48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13c856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13d046fb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13c856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13d047018 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13c856390 '__SVBool_t'
|-TypedefDecl 0x13d047080 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13c8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13d0470e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13c8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13d047150 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13c8563f0 '__SVCount_t'
|-TypedefDecl 0x13d0471f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13d0471b0 'char *'
|   `-BuiltinType 0x13c8556b0 'char'
|-TypedefDecl 0x13d047268 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13d0471b0 'char *'
|   `-BuiltinType 0x13c8556b0 'char'
`-FunctionDecl 0x13d047668 <dataset_diviso_filec/func24955_vuln.c:1:1, line:60:1> line:1:1 invalid sync_create_state_control 'int (int *, int **, int, int *, _Bool)'
  |-ParmVarDecl 0x13d047328 <col:27, col:40> col:40 invalid e 'int *'
  |-ParmVarDecl 0x13d0473e0 <col:43, col:57> col:57 invalid ctrlp 'int **'
  |-ParmVarDecl 0x13d047460 <col:64, col:68> col:68 used type 'int'
  |-ParmVarDecl 0x13d0474e0 <col:74, col:87> col:87 invalid cookie 'int *'
  |-ParmVarDecl 0x13d047558 <col:95, col:102> col:102 used openldap_compat '_Bool'
  `-CompoundStmt 0x13d064b78 <line:2:1, line:60:1>
    |-DeclStmt 0x13d0477b8 <line:3:5, col:11>
    | `-VarDecl 0x13d047750 <col:5, col:9> col:9 used rc 'int'
    |-DeclStmt 0x13d0479d8 <line:5:5, col:23>
    | |-RecordDecl 0x13d0477e8 <col:5, col:12> col:12 struct berval
    | `-VarDecl 0x13d047958 <col:5, col:20> col:20 used bvp 'struct berval *'
    |-DeclStmt 0x13d060a80 <line:6:5, col:15>
    | `-VarDecl 0x13d060a18 <col:5, col:11> col:11 used uuid 'char *'
    |-IfStmt 0x13d060e18 <line:10:5, line:12:5>
    | |-RecoveryExpr 0x13d060dd0 <line:10:9, col:75> '_Bool' contains-errors
    | `-CompoundStmt 0x13d060e08 <col:81, line:12:5>
    |-BinaryOperator 0x13d060f40 <line:14:5, col:14> '<dependent type>' contains-errors '='
    | |-UnaryOperator 0x13d060f08 <col:5, col:6> '<dependent type>' contains-errors prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x13d060ef0 <col:6> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x13d060e38 <col:6> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x13d060f20 <col:14> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x13d061870 <line:16:5, line:30:5> has_else
    | |-ImplicitCastExpr 0x13d060f80 <line:16:9> '_Bool' <LValueToRValue>
    | | `-DeclRefExpr 0x13d060f60 <col:9> '_Bool' lvalue ParmVar 0x13d047558 'openldap_compat' '_Bool'
    | |-CompoundStmt 0x13d0616a0 <col:26, line:26:5>
    | | |-CallExpr 0x13d061190 <line:17:9, col:61> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x13d061078 <col:9> 'int ()' Function 0x13d060fc0 'slapi_entry_attr_find' 'int ()'
    | | | |-RecoveryExpr 0x13d061098 <col:31> '<dependent type>' contains-errors lvalue
    | | | |-RecoveryExpr 0x13d061138 <col:34> '<dependent type>' contains-errors lvalue
    | | | `-UnaryOperator 0x13d061178 <col:56, col:57> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | |   `-RecoveryExpr 0x13d061158 <col:57> '<dependent type>' contains-errors lvalue
    | | `-IfStmt 0x13d061360 <line:18:9, line:23:9>
    | |   |-RecoveryExpr 0x13d0611c8 <line:18:13, col:14> '_Bool' contains-errors
    | |   `-CompoundStmt 0x13d061350 <col:20, line:23:9>
    | `-CompoundStmt 0x13d061860 <line:26:12, line:30:5>
    |-IfStmt 0x13d062a18 <line:32:5, line:40:5>
    | |-RecoveryExpr 0x13d062478 <line:32:9, col:59> '_Bool' contains-errors
    | `-CompoundStmt 0x13d062a00 <col:62, line:40:5>
    |   `-IfStmt 0x13d0629d0 <line:33:9, line:39:9> has_else
    |     |-RecoveryExpr 0x13d062498 <line:33:13> '<dependent type>' contains-errors lvalue
    |     |-CompoundStmt 0x13d062940 <col:21, line:37:9>
    |     | |-DeclStmt 0x13d062680 <line:34:13, col:54>
    |     | | `-VarDecl 0x13d0624d0 <col:13, col:53> col:19 used cookiestr 'char *' cinit
    |     | |   `-CallExpr 0x13d062658 <col:31, col:53> '<dependent type>' contains-errors
    |     | |     |-DeclRefExpr 0x13d062618 <col:31> 'int ()' Function 0x13d062560 'sync_cookie2str' 'int ()'
    |     | |     `-RecoveryExpr 0x13d062638 <col:47> '<dependent type>' contains-errors lvalue
    |     | `-CallExpr 0x13d062918 <line:36:13, col:46> 'int' contains-errors
    |     |   |-ImplicitCastExpr 0x13d062900 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |     |   | `-DeclRefExpr 0x13d0627f8 <col:13> 'int ()' Function 0x13d062740 'slapi_ch_free' 'int ()'
    |     |   `-CStyleCastExpr 0x13d0628d8 <col:27, col:37> 'void **' contains-errors <BitCast>
    |     |     `-UnaryOperator 0x13d062870 <col:36, col:37> 'char **' contains-errors prefix '&' cannot overflow
    |     |       `-DeclRefExpr 0x13d062818 <col:37> 'char *' contains-errors lvalue Var 0x13d0624d0 'cookiestr' 'char *'
    |     `-CompoundStmt 0x13d0629c0 <line:37:16, line:39:9>
    |-IfStmt 0x13d062c98 <line:41:5, line:43:5>
    | |-BinaryOperator 0x13d062aa8 <line:41:9, col:16> 'int' '!='
    | | |-ImplicitCastExpr 0x13d062a90 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x13d062a38 <col:9> 'int' lvalue Var 0x13d047750 'rc' 'int'
    | | `-UnaryOperator 0x13d062a78 <col:15, col:16> 'int' prefix '-'
    | |   `-IntegerLiteral 0x13d062a58 <col:16> 'int' 1
    | `-CompoundStmt 0x13d062c88 <col:19, line:43:5>
    |-CallExpr 0x13d062e88 <line:45:5, col:33> 'int'
    | |-ImplicitCastExpr 0x13d062e70 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x13d062dd8 <col:5> 'int ()' Function 0x13d062740 'slapi_ch_free' 'int ()'
    | `-CStyleCastExpr 0x13d062e48 <col:19, col:29> 'void **' <BitCast>
    |   `-UnaryOperator 0x13d062e18 <col:28, col:29> 'char **' prefix '&' cannot overflow
    |     `-DeclRefExpr 0x13d062df8 <col:29> 'char *' lvalue Var 0x13d060a18 'uuid' 'char *'
    |-IfStmt 0x13d062f50 <line:47:5, line:49:5>
    | |-BinaryOperator 0x13d062f20 <line:47:9, col:16> 'int' '=='
    | | |-ImplicitCastExpr 0x13d062f08 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x13d062eb0 <col:9> 'int' lvalue Var 0x13d047750 'rc' 'int'
    | | `-UnaryOperator 0x13d062ef0 <col:15, col:16> 'int' prefix '-'
    | |   `-IntegerLiteral 0x13d062ed0 <col:16> 'int' 1
    | `-CompoundStmt 0x13d062f40 <col:19, line:49:5>
    |-BinaryOperator 0x13d063098 <line:52:5, col:34> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x13d063030 <col:5, col:15> '<dependent type>' contains-errors lvalue ->ldctl_iscritical
    | | `-ParenExpr 0x13d063010 <col:5, col:12> '<dependent type>' contains-errors
    | |   `-UnaryOperator 0x13d062ff8 <col:6, col:7> '<dependent type>' contains-errors prefix '*' cannot overflow
    | |     `-ImplicitCastExpr 0x13d062fe0 <col:7> '<dependent type>' contains-errors <LValueToRValue>
    | |       `-RecoveryExpr 0x13d062fc0 <col:7> '<dependent type>' contains-errors lvalue
    | `-IntegerLiteral 0x13d063078 <col:34> 'int' 0
    |-BinaryOperator 0x13d063378 <line:54:5, col:30> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x13d0632e0 <col:5, col:15> '<dependent type>' contains-errors lvalue ->ldctl_value
    | | `-ParenExpr 0x13d0632c0 <col:5, col:12> '<dependent type>' contains-errors
    | |   `-UnaryOperator 0x13d0632a8 <col:6, col:7> '<dependent type>' contains-errors prefix '*' cannot overflow
    | |     `-ImplicitCastExpr 0x13d063290 <col:7> '<dependent type>' contains-errors <LValueToRValue>
    | |       `-RecoveryExpr 0x13d063270 <col:7> '<dependent type>' contains-errors lvalue
    | `-UnaryOperator 0x13d063360 <col:29, col:30> 'struct berval' lvalue prefix '*' cannot overflow
    |   `-ImplicitCastExpr 0x13d063348 <col:30> 'struct berval *' <LValueToRValue>
    |     `-DeclRefExpr 0x13d063328 <col:30> 'struct berval *' lvalue Var 0x13d047958 'bvp' 'struct berval *'
    `-CallExpr 0x13d064b38 <line:57:5, col:19> 'int'
      |-ImplicitCastExpr 0x13d064b20 <col:5> 'int (*)()' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x13d064ae0 <col:5> 'int ()' Function 0x13d064a28 'ber_bvfree' 'int ()'
      `-ImplicitCastExpr 0x13d064b60 <col:16> 'struct berval *' <LValueToRValue>
        `-DeclRefExpr 0x13d064b00 <col:16> 'struct berval *' lvalue Var 0x13d047958 'bvp' 'struct berval *'
