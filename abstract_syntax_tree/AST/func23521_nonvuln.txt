TranslationUnitDecl 0x14b055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14b0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14b055bd0 '__int128'
|-TypedefDecl 0x14b056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14b055bf0 'unsigned __int128'
|-TypedefDecl 0x14b80be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14b80bc00 'struct __NSConstantString_tag'
|   `-Record 0x14b056580 '__NSConstantString_tag'
|-TypedefDecl 0x14b80be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14b055d90 '__SVInt8_t'
|-TypedefDecl 0x14b80bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14b055db0 '__SVInt16_t'
|-TypedefDecl 0x14b80bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14b055dd0 '__SVInt32_t'
|-TypedefDecl 0x14b80bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14b055df0 '__SVInt64_t'
|-TypedefDecl 0x14b80c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14b055e10 '__SVUint8_t'
|-TypedefDecl 0x14b80c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14b055e30 '__SVUint16_t'
|-TypedefDecl 0x14b80c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14b055e50 '__SVUint32_t'
|-TypedefDecl 0x14b80c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14b055e70 '__SVUint64_t'
|-TypedefDecl 0x14b80c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14b055e90 '__SVFloat16_t'
|-TypedefDecl 0x14b80c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14b055eb0 '__SVFloat32_t'
|-TypedefDecl 0x14b80c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14b055ed0 '__SVFloat64_t'
|-TypedefDecl 0x14b80c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14b055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14b80c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14b055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14b80c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14b055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14b80c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14b055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14b80c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14b055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14b80c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14b055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14b80c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14b055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14b80c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14b055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14b80c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14b055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14b80c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14b056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14b80c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14b056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14b80c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14b056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14b80c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14b056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14b80c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14b056090 '__clang_svint8x3_t'
|-TypedefDecl 0x14b80c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14b0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14b80c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14b0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14b80c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14b0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14b80c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14b056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14b80ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14b056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14b80cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14b056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14b80cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14b056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14b80cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14b056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14b80d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14b0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14b80d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14b0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14b80d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14b0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14b80d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14b056210 '__clang_svint8x4_t'
|-TypedefDecl 0x14b80d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14b056230 '__clang_svint16x4_t'
|-TypedefDecl 0x14b80d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14b056250 '__clang_svint32x4_t'
|-TypedefDecl 0x14b80d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14b056270 '__clang_svint64x4_t'
|-TypedefDecl 0x14b80d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14b056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14b80d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14b0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14b80d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14b0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14b80d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14b0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14b80d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14b056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14b80d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14b056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14b80d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14b056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14b80d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14b056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14b80da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14b056390 '__SVBool_t'
|-TypedefDecl 0x14b80da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14b0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14b80dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14b0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14b80db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14b0563f0 '__SVCount_t'
|-TypedefDecl 0x14b80dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14b80dbb0 'char *'
|   `-BuiltinType 0x14b0556b0 'char'
|-TypedefDecl 0x14b80dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14b80dbb0 'char *'
|   `-BuiltinType 0x14b0556b0 'char'
|-FunctionDecl 0x14b80dda8 <dataset_diviso_filec/func23521_nonvuln.c:1:1, line:60:1> line:1:1 valid_db_path 'int (const char *)'
| |-ParmVarDecl 0x14b80dcd8 <col:15, col:27> col:27 used nominal 'const char *'
| `-CompoundStmt 0x14b122e30 <line:2:1, line:60:1>
|   |-DeclStmt 0x14b826648 <line:3:5, col:19>
|   | |-RecordDecl 0x14b80dea0 <col:5, col:12> col:12 struct stat
|   | `-VarDecl 0x14b80df98 <col:5, col:17> col:17 invalid sb 'struct stat'
|   |-DeclStmt 0x14b826968 <line:16:5, col:35>
|   | `-VarDecl 0x14b826678 <col:5, col:34> col:11 used result 'char *' cinit
|   |   `-CallExpr 0x14b826928 <col:20, col:34> 'char *'
|   |     |-ImplicitCastExpr 0x14b826910 <col:20> 'char *(*)(const char *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x14b826888 <col:20> 'char *(const char *)' Function 0x14b826718 'strdup' 'char *(const char *)'
|   |     `-ImplicitCastExpr 0x14b826950 <col:27> 'const char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x14b8268a8 <col:27> 'const char *' lvalue ParmVar 0x14b80dcd8 'nominal' 'const char *'
|   |-CallExpr 0x14b826c28 <line:19:5, col:29> 'int'
|   | |-ImplicitCastExpr 0x14b826c10 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x14b826ab0 <col:5> 'int ()' Function 0x14b8269f8 'DEBUG' 'int ()'
|   | |-IntegerLiteral 0x14b826ad0 <col:11> 'int' 1
|   | `-ParenExpr 0x14b826bc0 <col:14, col:28> 'char *'
|   |   `-BinaryOperator 0x14b826ba0 <col:15, col:22> 'char *' ','
|   |     |-ImplicitCastExpr 0x14b826b70 <col:15> 'char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x14b826b30 <col:15> 'char[4]' lvalue "STR"
|   |     `-ImplicitCastExpr 0x14b826b88 <col:22> 'char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x14b826b50 <col:22> 'char *' lvalue Var 0x14b826678 'result' 'char *'
|   |-IfStmt 0x14b122da0 <line:20:5, line:58:5> has_else
|   | |-BinaryOperator 0x14b826e00 <line:20:9, col:30> 'int' contains-errors '>='
|   | | |-CallExpr 0x14b826db0 <col:9, col:25> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x14b826d38 <col:9> 'int ()' Function 0x14b826c80 'stat' 'int ()'
|   | | | |-DeclRefExpr 0x14b826d58 <col:14> 'char *' lvalue Var 0x14b826678 'result' 'char *'
|   | | | `-UnaryOperator 0x14b826d98 <col:22, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | |   `-RecoveryExpr 0x14b826d78 <col:23> '<dependent type>' contains-errors lvalue
|   | | `-IntegerLiteral 0x14b826de0 <col:30> 'int' 0
|   | |-CompoundStmt 0x14b82ef60 <col:33, line:36:5>
|   | | `-IfStmt 0x14b82ef40 <line:29:2, line:34:2>
|   | |   |-BinaryOperator 0x14b8272f0 <line:29:6, line:30:47> 'int' contains-errors '||'
|   | |   | |-UnaryOperator 0x14b826fb0 <line:29:6, col:25> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | |   | | `-CallExpr 0x14b826f88 <col:7, col:25> '<dependent type>' contains-errors
|   | |   | |   |-DeclRefExpr 0x14b826f00 <col:7> 'int ()' Function 0x14b826e48 'S_ISDIR' 'int ()'
|   | |   | |   `-CXXDependentScopeMemberExpr 0x14b826f40 <col:15, col:18> '<dependent type>' contains-errors lvalue .st_mode
|   | |   | |     `-RecoveryExpr 0x14b826f20 <col:15> '<dependent type>' contains-errors lvalue
|   | |   | `-BinaryOperator 0x14b8272d0 <line:30:9, col:47> 'int' contains-errors '!='
|   | |   |   |-CallExpr 0x14b8272a0 <col:9, col:42> '<dependent type>' contains-errors
|   | |   |   | |-DeclRefExpr 0x14b8270a8 <col:9> 'int ()' Function 0x14b826ff0 'access' 'int ()'
|   | |   |   | |-DeclRefExpr 0x14b8270c8 <col:16> 'char *' lvalue Var 0x14b826678 'result' 'char *'
|   | |   |   | `-BinaryOperator 0x14b827280 <col:24, col:38> '<dependent type>' contains-errors '|'
|   | |   |   |   |-BinaryOperator 0x14b827240 <col:24, col:31> '<dependent type>' contains-errors '|'
|   | |   |   |   | |-RecoveryExpr 0x14b827200 <col:24> '<dependent type>' contains-errors lvalue
|   | |   |   |   | `-RecoveryExpr 0x14b827220 <col:31> '<dependent type>' contains-errors lvalue
|   | |   |   |   `-RecoveryExpr 0x14b827260 <col:38> '<dependent type>' contains-errors lvalue
|   | |   |   `-IntegerLiteral 0x14b8271a0 <col:47> 'int' 0
|   | |   `-CompoundStmt 0x14b82ef18 <col:50, line:34:2>
|   | |     |-CallExpr 0x14b8273a8 <line:31:6, col:22> 'int'
|   | |     | |-ImplicitCastExpr 0x14b827390 <col:6> 'int (*)()' <FunctionToPointerDecay>
|   | |     | | `-DeclRefExpr 0x14b827310 <col:6> 'int ()' Function 0x14b8269f8 'DEBUG' 'int ()'
|   | |     | |-IntegerLiteral 0x14b827330 <col:12> 'int' 1
|   | |     | `-ImplicitCastExpr 0x14b8273d8 <col:15, col:21> 'char *' <ArrayToPointerDecay>
|   | |     |   `-ParenExpr 0x14b827370 <col:15, col:21> 'char[4]' lvalue
|   | |     |     `-StringLiteral 0x14b827350 <col:16> 'char[4]' lvalue "STR"
|   | |     |-CallExpr 0x14b82ee48 <line:32:6, col:17> 'void'
|   | |     | |-ImplicitCastExpr 0x14b82ee30 <col:6> 'void (*)(void *)' <FunctionToPointerDecay>
|   | |     | | `-DeclRefExpr 0x14b827598 <col:6> 'void (void *)' Function 0x14b827428 'free' 'void (void *)'
|   | |     | `-ImplicitCastExpr 0x14b82ee88 <col:11> 'void *' <BitCast>
|   | |     |   `-ImplicitCastExpr 0x14b82ee70 <col:11> 'char *' <LValueToRValue>
|   | |     |     `-DeclRefExpr 0x14b8275b8 <col:11> 'char *' lvalue Var 0x14b826678 'result' 'char *'
|   | |     `-BinaryOperator 0x14b82eef8 <line:33:6, col:15> 'char *' '='
|   | |       |-DeclRefExpr 0x14b82eea0 <col:6> 'char *' lvalue Var 0x14b826678 'result' 'char *'
|   | |       `-ImplicitCastExpr 0x14b82eee0 <col:15> 'char *' <NullToPointer>
|   | |         `-IntegerLiteral 0x14b82eec0 <col:15> 'int' 0
|   | `-CompoundStmt 0x14b122d78 <line:36:12, line:58:5>
|   |   |-DeclStmt 0x14b82f188 <line:38:2, col:38>
|   |   | `-VarDecl 0x14b82ef90 <col:2, col:37> col:11 used leaf 'unsigned int' cinit
|   |   |   `-ImplicitCastExpr 0x14b82f170 <col:18, col:37> 'unsigned int' <IntegralCast>
|   |   |     `-CallExpr 0x14b82f130 <col:18, col:37> 'int'
|   |   |       |-ImplicitCastExpr 0x14b82f118 <col:18> 'int (*)()' <FunctionToPointerDecay>
|   |   |       | `-DeclRefExpr 0x14b82f0d8 <col:18> 'int ()' Function 0x14b82f020 '_nc_pathlast' 'int ()'
|   |   |       `-ImplicitCastExpr 0x14b82f158 <col:31> 'char *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x14b82f0f8 <col:31> 'char *' lvalue Var 0x14b826678 'result' 'char *'
|   |   |-CallExpr 0x14b82f238 <line:40:2, col:18> 'int'
|   |   | |-ImplicitCastExpr 0x14b82f220 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x14b82f1a0 <col:2> 'int ()' Function 0x14b8269f8 'DEBUG' 'int ()'
|   |   | |-IntegerLiteral 0x14b82f1c0 <col:8> 'int' 1
|   |   | `-ImplicitCastExpr 0x14b82f268 <col:11, col:17> 'char *' <ArrayToPointerDecay>
|   |   |   `-ParenExpr 0x14b82f200 <col:11, col:17> 'char[4]' lvalue
|   |   |     `-StringLiteral 0x14b82f1e0 <col:12> 'char[4]' lvalue "STR"
|   |   `-IfStmt 0x14b122d48 <line:41:2, line:57:2> has_else
|   |     |-ImplicitCastExpr 0x14b82f2a0 <line:41:6> 'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x14b82f280 <col:6> 'unsigned int' lvalue Var 0x14b82ef90 'leaf' 'unsigned int'
|   |     |-CompoundStmt 0x14b82fcc8 <col:12, line:53:2>
|   |     | |-DeclStmt 0x14b82f3d8 <line:42:6, col:30>
|   |     | | `-VarDecl 0x14b82f2c8 <col:6, col:29> col:11 used save 'char' cinit
|   |     | |   `-ImplicitCastExpr 0x14b82f3c0 <col:18, col:29> 'char' <LValueToRValue>
|   |     | |     `-ArraySubscriptExpr 0x14b82f3a0 <col:18, col:29> 'char' lvalue
|   |     | |       |-ImplicitCastExpr 0x14b82f370 <col:18> 'char *' <LValueToRValue>
|   |     | |       | `-DeclRefExpr 0x14b82f330 <col:18> 'char *' lvalue Var 0x14b826678 'result' 'char *'
|   |     | |       `-ImplicitCastExpr 0x14b82f388 <col:25> 'unsigned int' <LValueToRValue>
|   |     | |         `-DeclRefExpr 0x14b82f350 <col:25> 'unsigned int' lvalue Var 0x14b82ef90 'leaf' 'unsigned int'
|   |     | |-BinaryOperator 0x14b82f4b8 <line:43:6, col:21> 'char' '='
|   |     | | |-ArraySubscriptExpr 0x14b82f460 <col:6, col:17> 'char' lvalue
|   |     | | | |-ImplicitCastExpr 0x14b82f430 <col:6> 'char *' <LValueToRValue>
|   |     | | | | `-DeclRefExpr 0x14b82f3f0 <col:6> 'char *' lvalue Var 0x14b826678 'result' 'char *'
|   |     | | | `-ImplicitCastExpr 0x14b82f448 <col:13> 'unsigned int' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x14b82f410 <col:13> 'unsigned int' lvalue Var 0x14b82ef90 'leaf' 'unsigned int'
|   |     | | `-ImplicitCastExpr 0x14b82f4a0 <col:21> 'char' <IntegralCast>
|   |     | |   `-IntegerLiteral 0x14b82f480 <col:21> 'int' 0
|   |     | `-IfStmt 0x14b82fc98 <line:44:6, line:52:6> has_else
|   |     |   |-BinaryOperator 0x14b82f8d8 <line:44:10, line:46:44> 'int' contains-errors '&&'
|   |     |   | |-BinaryOperator 0x14b82f670 <line:44:10, line:45:24> 'int' contains-errors '&&'
|   |     |   | | |-BinaryOperator 0x14b82f5a0 <line:44:10, col:31> 'int' contains-errors '>='
|   |     |   | | | |-CallExpr 0x14b82f550 <col:10, col:26> '<dependent type>' contains-errors
|   |     |   | | | | |-DeclRefExpr 0x14b82f4d8 <col:10> 'int ()' Function 0x14b826c80 'stat' 'int ()'
|   |     |   | | | | |-DeclRefExpr 0x14b82f4f8 <col:15> 'char *' lvalue Var 0x14b826678 'result' 'char *'
|   |     |   | | | | `-UnaryOperator 0x14b82f538 <col:23, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     |   | | | |   `-RecoveryExpr 0x14b82f518 <col:24> '<dependent type>' contains-errors lvalue
|   |     |   | | | `-IntegerLiteral 0x14b82f580 <col:31> 'int' 0
|   |     |   | | `-CallExpr 0x14b82f648 <line:45:6, col:24> '<dependent type>' contains-errors
|   |     |   | |   |-DeclRefExpr 0x14b82f5c0 <col:6> 'int ()' Function 0x14b826e48 'S_ISDIR' 'int ()'
|   |     |   | |   `-CXXDependentScopeMemberExpr 0x14b82f600 <col:14, col:17> '<dependent type>' contains-errors lvalue .st_mode
|   |     |   | |     `-RecoveryExpr 0x14b82f5e0 <col:14> '<dependent type>' contains-errors lvalue
|   |     |   | `-BinaryOperator 0x14b82f8b8 <line:46:6, col:44> 'int' contains-errors '=='
|   |     |   |   |-CallExpr 0x14b82f888 <col:6, col:39> '<dependent type>' contains-errors
|   |     |   |   | |-DeclRefExpr 0x14b82f690 <col:6> 'int ()' Function 0x14b826ff0 'access' 'int ()'
|   |     |   |   | |-DeclRefExpr 0x14b82f6b0 <col:13> 'char *' lvalue Var 0x14b826678 'result' 'char *'
|   |     |   |   | `-BinaryOperator 0x14b82f868 <col:21, col:35> '<dependent type>' contains-errors '|'
|   |     |   |   |   |-BinaryOperator 0x14b82f828 <col:21, col:28> '<dependent type>' contains-errors '|'
|   |     |   |   |   | |-RecoveryExpr 0x14b82f7e8 <col:21> '<dependent type>' contains-errors lvalue
|   |     |   |   |   | `-RecoveryExpr 0x14b82f808 <col:28> '<dependent type>' contains-errors lvalue
|   |     |   |   |   `-RecoveryExpr 0x14b82f848 <col:35> '<dependent type>' contains-errors lvalue
|   |     |   |   `-IntegerLiteral 0x14b82f788 <col:44> 'int' 0
|   |     |   |-CompoundStmt 0x14b82f9e0 <col:47, line:48:6>
|   |     |   | `-BinaryOperator 0x14b82f9c0 <line:47:3, col:18> 'char' '='
|   |     |   |   |-ArraySubscriptExpr 0x14b82f968 <col:3, col:14> 'char' lvalue
|   |     |   |   | |-ImplicitCastExpr 0x14b82f938 <col:3> 'char *' <LValueToRValue>
|   |     |   |   | | `-DeclRefExpr 0x14b82f8f8 <col:3> 'char *' lvalue Var 0x14b826678 'result' 'char *'
|   |     |   |   | `-ImplicitCastExpr 0x14b82f950 <col:10> 'unsigned int' <LValueToRValue>
|   |     |   |   |   `-DeclRefExpr 0x14b82f918 <col:10> 'unsigned int' lvalue Var 0x14b82ef90 'leaf' 'unsigned int'
|   |     |   |   `-ImplicitCastExpr 0x14b82f9a8 <col:18> 'char' <LValueToRValue>
|   |     |   |     `-DeclRefExpr 0x14b82f988 <col:18> 'char' lvalue Var 0x14b82f2c8 'save' 'char'
|   |     |   `-CompoundStmt 0x14b82fc70 <line:48:13, line:52:6>
|   |     |     |-CallExpr 0x14b82fb00 <line:49:3, col:27> 'int'
|   |     |     | |-ImplicitCastExpr 0x14b82fae8 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |     |     | | `-DeclRefExpr 0x14b82f9f8 <col:3> 'int ()' Function 0x14b8269f8 'DEBUG' 'int ()'
|   |     |     | |-IntegerLiteral 0x14b82fa18 <col:9> 'int' 1
|   |     |     | `-ParenExpr 0x14b82fac8 <col:12, col:26> 'char *'
|   |     |     |   `-BinaryOperator 0x14b82faa8 <col:13, col:20> 'char *' ','
|   |     |     |     |-ImplicitCastExpr 0x14b82fa78 <col:13> 'char *' <ArrayToPointerDecay>
|   |     |     |     | `-StringLiteral 0x14b82fa38 <col:13> 'char[4]' lvalue "STR"
|   |     |     |     `-ImplicitCastExpr 0x14b82fa90 <col:20> 'char *' <LValueToRValue>
|   |     |     |       `-DeclRefExpr 0x14b82fa58 <col:20> 'char *' lvalue Var 0x14b826678 'result' 'char *'
|   |     |     |-CallExpr 0x14b82fba0 <line:50:3, col:14> 'void'
|   |     |     | |-ImplicitCastExpr 0x14b82fb88 <col:3> 'void (*)(void *)' <FunctionToPointerDecay>
|   |     |     | | `-DeclRefExpr 0x14b82fb30 <col:3> 'void (void *)' Function 0x14b827428 'free' 'void (void *)'
|   |     |     | `-ImplicitCastExpr 0x14b82fbe0 <col:8> 'void *' <BitCast>
|   |     |     |   `-ImplicitCastExpr 0x14b82fbc8 <col:8> 'char *' <LValueToRValue>
|   |     |     |     `-DeclRefExpr 0x14b82fb50 <col:8> 'char *' lvalue Var 0x14b826678 'result' 'char *'
|   |     |     `-BinaryOperator 0x14b82fc50 <line:51:3, col:12> 'char *' '='
|   |     |       |-DeclRefExpr 0x14b82fbf8 <col:3> 'char *' lvalue Var 0x14b826678 'result' 'char *'
|   |     |       `-ImplicitCastExpr 0x14b82fc38 <col:12> 'char *' <NullToPointer>
|   |     |         `-IntegerLiteral 0x14b82fc18 <col:12> 'int' 0
|   |     `-CompoundStmt 0x14b122d20 <line:53:9, line:57:2>
|   |       |-CallExpr 0x14b82fd88 <line:54:6, col:22> 'int'
|   |       | |-ImplicitCastExpr 0x14b82fd70 <col:6> 'int (*)()' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x14b82fcf0 <col:6> 'int ()' Function 0x14b8269f8 'DEBUG' 'int ()'
|   |       | |-IntegerLiteral 0x14b82fd10 <col:12> 'int' 1
|   |       | `-ImplicitCastExpr 0x14b82fdb8 <col:15, col:21> 'char *' <ArrayToPointerDecay>
|   |       |   `-ParenExpr 0x14b82fd50 <col:15, col:21> 'char[4]' lvalue
|   |       |     `-StringLiteral 0x14b82fd30 <col:16> 'char[4]' lvalue "STR"
|   |       |-CallExpr 0x14b122c50 <line:55:6, col:17> 'void'
|   |       | |-ImplicitCastExpr 0x14b122c38 <col:6> 'void (*)(void *)' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x14b82fdd0 <col:6> 'void (void *)' Function 0x14b827428 'free' 'void (void *)'
|   |       | `-ImplicitCastExpr 0x14b122c90 <col:11> 'void *' <BitCast>
|   |       |   `-ImplicitCastExpr 0x14b122c78 <col:11> 'char *' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x14b122c00 <col:11> 'char *' lvalue Var 0x14b826678 'result' 'char *'
|   |       `-BinaryOperator 0x14b122d00 <line:56:6, col:15> 'char *' '='
|   |         |-DeclRefExpr 0x14b122ca8 <col:6> 'char *' lvalue Var 0x14b826678 'result' 'char *'
|   |         `-ImplicitCastExpr 0x14b122ce8 <col:15> 'char *' <NullToPointer>
|   |           `-IntegerLiteral 0x14b122cc8 <col:15> 'int' 0
|   `-ReturnStmt 0x14b122e20 <line:59:5, col:12>
|     `-ImplicitCastExpr 0x14b122e08 <col:12> 'int' <PointerToIntegral>
|       `-ImplicitCastExpr 0x14b122df0 <col:12> 'char *' <LValueToRValue>
|         `-DeclRefExpr 0x14b122dd0 <col:12> 'char *' lvalue Var 0x14b826678 'result' 'char *'
|-FunctionDecl 0x14b826718 <line:16:20> col:20 implicit used strdup 'char *(const char *)' extern
| |-ParmVarDecl 0x14b826818 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x14b8267c0 <<invalid sloc>> Implicit 950
`-FunctionDecl 0x14b827428 <line:32:6> col:6 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x14b827528 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x14b8274d0 <<invalid sloc>> Implicit 873
