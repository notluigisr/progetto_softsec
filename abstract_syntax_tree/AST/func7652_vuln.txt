TranslationUnitDecl 0x127055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1270564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x127055bd0 '__int128'
|-TypedefDecl 0x127056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x127055bf0 'unsigned __int128'
|-TypedefDecl 0x12780be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12780bc00 'struct __NSConstantString_tag'
|   `-Record 0x127056580 '__NSConstantString_tag'
|-TypedefDecl 0x12780be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x127055d90 '__SVInt8_t'
|-TypedefDecl 0x12780bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x127055db0 '__SVInt16_t'
|-TypedefDecl 0x12780bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x127055dd0 '__SVInt32_t'
|-TypedefDecl 0x12780bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x127055df0 '__SVInt64_t'
|-TypedefDecl 0x12780c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x127055e10 '__SVUint8_t'
|-TypedefDecl 0x12780c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x127055e30 '__SVUint16_t'
|-TypedefDecl 0x12780c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x127055e50 '__SVUint32_t'
|-TypedefDecl 0x12780c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x127055e70 '__SVUint64_t'
|-TypedefDecl 0x12780c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x127055e90 '__SVFloat16_t'
|-TypedefDecl 0x12780c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x127055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12780c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x127055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12780c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x127055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12780c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x127055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12780c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x127055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12780c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x127055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12780c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x127055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12780c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x127055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12780c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x127055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12780c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x127055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12780c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x127055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12780c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x127056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12780c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x127056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12780c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x127056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12780c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x127056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12780c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x127056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12780c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1270560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12780c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1270560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12780c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1270560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12780c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x127056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12780ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x127056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12780cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x127056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12780cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x127056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12780cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x127056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12780d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1270561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12780d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1270561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12780d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1270561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12780d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x127056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12780d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x127056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12780d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x127056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12780d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x127056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12780d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x127056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12780d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1270562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12780d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1270562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12780d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1270562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12780d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x127056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12780d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x127056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12780d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x127056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12780d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x127056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12780da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x127056390 '__SVBool_t'
|-TypedefDecl 0x12780da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1270563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12780dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1270563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12780db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1270563f0 '__SVCount_t'
|-TypedefDecl 0x12780dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12780dbb0 'char *'
|   `-BuiltinType 0x1270556b0 'char'
|-TypedefDecl 0x12780dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12780dbb0 'char *'
|   `-BuiltinType 0x1270556b0 'char'
`-FunctionDecl 0x12782ad38 <dataset_diviso_filec/func7652_vuln.c:1:1, line:35:1> line:1:12 referenced report_tree 'int (struct dquot *, unsigned int, int, char *, int (*)(struct dquot *, void *), void *)' static
  |-ParmVarDecl 0x12780e248 <col:24, col:38> col:38 used dquot 'struct dquot *'
  |-ParmVarDecl 0x12780e2c8 <col:45, col:58> col:58 used blk 'unsigned int'
  |-ParmVarDecl 0x12780e348 <col:63, col:67> col:67 used depth 'int'
  |-ParmVarDecl 0x12782a800 <line:2:10, col:16> col:16 used bitmap 'char *'
  |-ParmVarDecl 0x12782ab38 <line:3:10, col:54> col:16 used process_dquot 'int (*)(struct dquot *, void *)'
  |-ParmVarDecl 0x12782abb8 <line:4:10, col:16> col:16 used data 'void *'
  `-CompoundStmt 0x12782e280 <line:5:1, line:35:1>
    |-DeclStmt 0x12782af90 <line:6:2, col:20>
    | |-VarDecl 0x12782ae70 <col:2, col:16> col:6 used entries 'int' cinit
    | | `-IntegerLiteral 0x12782aed8 <col:16> 'int' 0
    | `-VarDecl 0x12782af10 <col:2, col:19> col:19 used i 'int'
    |-IfStmt 0x12782b0b8 <line:10:2, line:11:10>
    | |-UnaryOperator 0x12782b070 <line:10:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x12782b058 <col:7> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x12782b038 <col:7> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x12782b0a8 <line:11:3, col:10>
    |   `-IntegerLiteral 0x12782b088 <col:10> 'int' 0
    |-CallExpr 0x12782b300 <line:13:2, col:32> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12782b1f0 <col:2> 'int ()' Function 0x12782b138 'read_blk' 'int ()'
    | |-RecoveryExpr 0x12782b248 <col:11, col:18> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x12782b210 <col:11> 'struct dquot *' lvalue ParmVar 0x12780e248 'dquot' 'struct dquot *'
    | |-DeclRefExpr 0x12782b270 <col:24> 'unsigned int' lvalue ParmVar 0x12780e2c8 'blk' 'unsigned int'
    | `-RecoveryExpr 0x12782b2e0 <col:29> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12782e108 <line:14:2, line:32:2> has_else
    | |-BinaryOperator 0x12782b410 <line:14:6, col:30> 'int' contains-errors '=='
    | | |-DeclRefExpr 0x12782b338 <col:6> 'int' lvalue ParmVar 0x12780e348 'depth' 'int'
    | | `-BinaryOperator 0x12782b3f0 <col:15, col:30> '<dependent type>' contains-errors '-'
    | |   |-RecoveryExpr 0x12782b3d0 <col:15> '<dependent type>' contains-errors lvalue
    | |   `-IntegerLiteral 0x12782b370 <col:30> 'int' 1
    | |-CompoundStmt 0x12782da68 <col:33, line:22:2>
    | | `-ForStmt 0x12782da30 <line:15:3, line:21:3>
    | |   |-BinaryOperator 0x12782b470 <line:15:8, col:12> 'int' '='
    | |   | |-DeclRefExpr 0x12782b430 <col:8> 'int' lvalue Var 0x12782af10 'i' 'int'
    | |   | `-IntegerLiteral 0x12782b450 <col:12> 'int' 0
    | |   |-<<<NULL>>>
    | |   |-BinaryOperator 0x12782b568 <col:15, col:33> 'int' contains-errors '<'
    | |   | |-DeclRefExpr 0x12782b490 <col:15> 'int' lvalue Var 0x12782af10 'i' 'int'
    | |   | `-BinaryOperator 0x12782b548 <col:19, col:33> '<dependent type>' contains-errors '>>'
    | |   |   |-RecoveryExpr 0x12782b528 <col:19> '<dependent type>' contains-errors lvalue
    | |   |   `-IntegerLiteral 0x12782b4c8 <col:33> 'int' 2
    | |   |-UnaryOperator 0x12782b5a8 <col:36, col:37> 'int' postfix '++'
    | |   | `-DeclRefExpr 0x12782b588 <col:36> 'int' lvalue Var 0x12782af10 'i' 'int'
    | |   `-CompoundStmt 0x12782da10 <col:41, line:21:3>
    | |     |-CallExpr 0x12782d4a0 <line:17:4, col:36> '<dependent type>' contains-errors
    | |     | |-DeclRefExpr 0x12782d400 <col:4> 'int ()' Function 0x12782b740 'check_reference' 'int ()'
    | |     | |-RecoveryExpr 0x12782d458 <col:20, col:27> '<dependent type>' contains-errors lvalue
    | |     | | `-DeclRefExpr 0x12782d420 <col:20> 'struct dquot *' lvalue ParmVar 0x12780e248 'dquot' 'struct dquot *'
    | |     | `-DeclRefExpr 0x12782d480 <col:33> 'unsigned int' lvalue ParmVar 0x12780e2c8 'blk' 'unsigned int'
    | |     `-IfStmt 0x12782d9f0 <line:18:4, line:20:27>
    | |       |-BinaryOperator 0x12782d708 <line:18:8, col:35> 'int' '&&'
    | |       | |-ImplicitCastExpr 0x12782d6f0 <col:8> 'unsigned int' <LValueToRValue>
    | |       | | `-DeclRefExpr 0x12782d4d0 <col:8> 'unsigned int' lvalue ParmVar 0x12780e2c8 'blk' 'unsigned int'
    | |       | `-UnaryOperator 0x12782d6d8 <col:15, col:35> 'int' prefix '!' cannot overflow
    | |       |   `-CallExpr 0x12782d678 <col:16, col:35> 'int'
    | |       |     |-ImplicitCastExpr 0x12782d660 <col:16> 'int (*)()' <FunctionToPointerDecay>
    | |       |     | `-DeclRefExpr 0x12782d5d0 <col:16> 'int ()' Function 0x12782d518 'get_bit' 'int ()'
    | |       |     |-ImplicitCastExpr 0x12782d6a8 <col:24> 'char *' <LValueToRValue>
    | |       |     | `-DeclRefExpr 0x12782d5f0 <col:24> 'char *' lvalue ParmVar 0x12782a800 'bitmap' 'char *'
    | |       |     `-ImplicitCastExpr 0x12782d6c0 <col:32> 'unsigned int' <LValueToRValue>
    | |       |       `-DeclRefExpr 0x12782d610 <col:32> 'unsigned int' lvalue ParmVar 0x12780e2c8 'blk' 'unsigned int'
    | |       `-CompoundAssignOperator 0x12782d9c0 <line:19:5, line:20:27> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    | |         |-DeclRefExpr 0x12782d728 <line:19:5> 'int' lvalue Var 0x12782ae70 'entries' 'int'
    | |         `-CallExpr 0x12782d900 <col:16, line:20:27> 'int'
    | |           |-ImplicitCastExpr 0x12782d8e8 <line:19:16> 'int (*)()' <FunctionToPointerDecay>
    | |           | `-DeclRefExpr 0x12782d828 <col:16> 'int ()' Function 0x12782d770 'report_block' 'int ()'
    | |           |-ImplicitCastExpr 0x12782d948 <col:29> 'struct dquot *' <LValueToRValue>
    | |           | `-DeclRefExpr 0x12782d848 <col:29> 'struct dquot *' lvalue ParmVar 0x12780e248 'dquot' 'struct dquot *'
    | |           |-ImplicitCastExpr 0x12782d960 <col:36> 'unsigned int' <LValueToRValue>
    | |           | `-DeclRefExpr 0x12782d868 <col:36> 'unsigned int' lvalue ParmVar 0x12780e2c8 'blk' 'unsigned int'
    | |           |-ImplicitCastExpr 0x12782d978 <col:41> 'char *' <LValueToRValue>
    | |           | `-DeclRefExpr 0x12782d888 <col:41> 'char *' lvalue ParmVar 0x12782a800 'bitmap' 'char *'
    | |           |-ImplicitCastExpr 0x12782d990 <line:20:8> 'int (*)(struct dquot *, void *)' <LValueToRValue>
    | |           | `-DeclRefExpr 0x12782d8a8 <col:8> 'int (*)(struct dquot *, void *)' lvalue ParmVar 0x12782ab38 'process_dquot' 'int (*)(struct dquot *, void *)'
    | |           `-ImplicitCastExpr 0x12782d9a8 <col:23> 'void *' <LValueToRValue>
    | |             `-DeclRefExpr 0x12782d8c8 <col:23> 'void *' lvalue ParmVar 0x12782abb8 'data' 'void *'
    | `-CompoundStmt 0x12782e0f0 <line:22:9, line:32:2>
    |   `-ForStmt 0x12782e0b8 <line:23:3, line:31:3>
    |     |-BinaryOperator 0x12782dac0 <line:23:8, col:12> 'int' '='
    |     | |-DeclRefExpr 0x12782da80 <col:8> 'int' lvalue Var 0x12782af10 'i' 'int'
    |     | `-IntegerLiteral 0x12782daa0 <col:12> 'int' 0
    |     |-<<<NULL>>>
    |     |-BinaryOperator 0x12782dbb8 <col:15, col:33> 'int' contains-errors '<'
    |     | |-DeclRefExpr 0x12782dae0 <col:15> 'int' lvalue Var 0x12782af10 'i' 'int'
    |     | `-BinaryOperator 0x12782db98 <col:19, col:33> '<dependent type>' contains-errors '>>'
    |     |   |-RecoveryExpr 0x12782db78 <col:19> '<dependent type>' contains-errors lvalue
    |     |   `-IntegerLiteral 0x12782db18 <col:33> 'int' 2
    |     |-UnaryOperator 0x12782dbf8 <col:36, col:37> 'int' postfix '++'
    |     | `-DeclRefExpr 0x12782dbd8 <col:36> 'int' lvalue Var 0x12782af10 'i' 'int'
    |     `-CompoundStmt 0x12782e0a0 <col:41, line:31:3>
    |       `-IfStmt 0x12782e080 <line:25:4, line:30:4>
    |         |-ImplicitCastExpr 0x12782dca8 <line:25:8> 'unsigned int' <LValueToRValue>
    |         | `-DeclRefExpr 0x12782dc88 <col:8> 'unsigned int' lvalue ParmVar 0x12780e2c8 'blk' 'unsigned int'
    |         `-CompoundStmt 0x12782e060 <col:13, line:30:4>
    |           |-CallExpr 0x12782dd60 <line:26:5, col:37> '<dependent type>' contains-errors
    |           | |-DeclRefExpr 0x12782dcc0 <col:5> 'int ()' Function 0x12782b740 'check_reference' 'int ()'
    |           | |-RecoveryExpr 0x12782dd18 <col:21, col:28> '<dependent type>' contains-errors lvalue
    |           | | `-DeclRefExpr 0x12782dce0 <col:21> 'struct dquot *' lvalue ParmVar 0x12780e248 'dquot' 'struct dquot *'
    |           | `-DeclRefExpr 0x12782dd40 <col:34> 'unsigned int' lvalue ParmVar 0x12780e2c8 'blk' 'unsigned int'
    |           `-CompoundAssignOperator 0x12782e030 <line:27:5, line:29:18> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |             |-DeclRefExpr 0x12782dd90 <line:27:5> 'int' lvalue Var 0x12782ae70 'entries' 'int'
    |             `-CallExpr 0x12782df68 <col:16, line:29:18> 'int'
    |               |-ImplicitCastExpr 0x12782df50 <line:27:16> 'int (*)(struct dquot *, unsigned int, int, char *, int (*)(struct dquot *, void *), void *)' <FunctionToPointerDecay>
    |               | `-DeclRefExpr 0x12782ddb0 <col:16> 'int (struct dquot *, unsigned int, int, char *, int (*)(struct dquot *, void *), void *)' Function 0x12782ad38 'report_tree' 'int (struct dquot *, unsigned int, int, char *, int (*)(struct dquot *, void *), void *)'
    |               |-ImplicitCastExpr 0x12782dfb8 <col:28> 'struct dquot *' <LValueToRValue>
    |               | `-DeclRefExpr 0x12782ddd0 <col:28> 'struct dquot *' lvalue ParmVar 0x12780e248 'dquot' 'struct dquot *'
    |               |-ImplicitCastExpr 0x12782dfd0 <col:35> 'unsigned int' <LValueToRValue>
    |               | `-DeclRefExpr 0x12782ddf0 <col:35> 'unsigned int' lvalue ParmVar 0x12780e2c8 'blk' 'unsigned int'
    |               |-BinaryOperator 0x12782de68 <col:40, col:48> 'int' '+'
    |               | |-ImplicitCastExpr 0x12782de50 <col:40> 'int' <LValueToRValue>
    |               | | `-DeclRefExpr 0x12782de10 <col:40> 'int' lvalue ParmVar 0x12780e348 'depth' 'int'
    |               | `-IntegerLiteral 0x12782de30 <col:48> 'int' 1
    |               |-ImplicitCastExpr 0x12782dfe8 <line:28:14> 'char *' <LValueToRValue>
    |               | `-DeclRefExpr 0x12782de88 <col:14> 'char *' lvalue ParmVar 0x12782a800 'bitmap' 'char *'
    |               |-ImplicitCastExpr 0x12782e000 <col:22> 'int (*)(struct dquot *, void *)' <LValueToRValue>
    |               | `-DeclRefExpr 0x12782dea8 <col:22> 'int (*)(struct dquot *, void *)' lvalue ParmVar 0x12782ab38 'process_dquot' 'int (*)(struct dquot *, void *)'
    |               `-ImplicitCastExpr 0x12782e018 <line:29:14> 'void *' <LValueToRValue>
    |                 `-DeclRefExpr 0x12782dec8 <col:14> 'void *' lvalue ParmVar 0x12782abb8 'data' 'void *'
    `-ReturnStmt 0x12782e270 <line:34:2, col:9>
      `-ImplicitCastExpr 0x12782e258 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x12782e238 <col:9> 'int' lvalue Var 0x12782ae70 'entries' 'int'
