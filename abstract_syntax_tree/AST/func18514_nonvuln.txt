TranslationUnitDecl 0x122855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1228564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x122855bd0 '__int128'
|-TypedefDecl 0x122856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x122855bf0 'unsigned __int128'
|-TypedefDecl 0x122926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x122926000 'struct __NSConstantString_tag'
|   `-Record 0x122856580 '__NSConstantString_tag'
|-TypedefDecl 0x122926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x122855d90 '__SVInt8_t'
|-TypedefDecl 0x122926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x122855db0 '__SVInt16_t'
|-TypedefDecl 0x122926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x122855dd0 '__SVInt32_t'
|-TypedefDecl 0x1229263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x122855df0 '__SVInt64_t'
|-TypedefDecl 0x122926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x122855e10 '__SVUint8_t'
|-TypedefDecl 0x1229264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x122855e30 '__SVUint16_t'
|-TypedefDecl 0x122926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x122855e50 '__SVUint32_t'
|-TypedefDecl 0x122926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x122855e70 '__SVUint64_t'
|-TypedefDecl 0x1229265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x122855e90 '__SVFloat16_t'
|-TypedefDecl 0x122926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x122855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1229266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x122855ed0 '__SVFloat64_t'
|-TypedefDecl 0x122926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x122855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x122926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x122855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1229267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x122855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x122926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x122855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1229268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x122855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x122926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x122855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x122926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x122855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1229269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x122855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x122926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x122855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x122926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x122856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x122926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x122856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x122926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x122856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x122926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x122856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x122926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x122856090 '__clang_svint8x3_t'
|-TypedefDecl 0x122926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1228560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x122926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1228560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x122926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1228560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x122926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x122856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x122926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x122856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x122926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x122856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x122926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x122856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x122926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x122856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x122927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1228561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x122927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1228561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1229278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1228561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x122927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x122856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1229279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x122856230 '__clang_svint16x4_t'
|-TypedefDecl 0x122927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x122856250 '__clang_svint32x4_t'
|-TypedefDecl 0x122927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x122856270 '__clang_svint64x4_t'
|-TypedefDecl 0x122927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x122856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x122927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1228562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x122927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1228562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x122927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1228562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x122927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x122856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x122927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x122856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x122927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x122856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x122927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x122856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x122927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x122856390 '__SVBool_t'
|-TypedefDecl 0x122927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1228563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x122927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1228563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x122927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1228563f0 '__SVCount_t'
|-TypedefDecl 0x122927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x122927fb0 'char *'
|   `-BuiltinType 0x1228556b0 'char'
|-TypedefDecl 0x122928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x122927fb0 'char *'
|   `-BuiltinType 0x1228556b0 'char'
|-RecordDecl 0x1229280c0 <dataset_diviso_filec/func18514_nonvuln.c:1:8, col:15> col:15 struct sock
`-FunctionDecl 0x1229285b8 <col:1, line:51:1> line:1:21 invalid sctp_accept 'struct sock *(struct sock *, int, int *, int)' static
  |-ParmVarDecl 0x122928218 <col:33, col:46> col:46 used sk 'struct sock *'
  |-ParmVarDecl 0x122928298 <col:50, col:54> col:54 used flags 'int'
  |-ParmVarDecl 0x122928348 <col:61, col:66> col:66 used err 'int *'
  |-ParmVarDecl 0x1229283e0 <col:71, col:76> col:76 invalid kern 'int'
  `-CompoundStmt 0x122943dc8 <line:2:1, line:51:1>
    |-DeclStmt 0x122941880 <line:3:2, col:22>
    | |-RecordDecl 0x122928680 <col:2, col:9> col:9 struct sctp_sock
    | `-VarDecl 0x122941800 <col:2, col:20> col:20 used sp 'struct sctp_sock *'
    |-DeclStmt 0x122941a88 <line:4:2, col:26>
    | |-RecordDecl 0x122941898 <col:2, col:9> col:9 struct sctp_endpoint
    | `-VarDecl 0x122941a08 <col:2, col:24> col:24 used ep 'struct sctp_endpoint *'
    |-DeclStmt 0x122941b68 <line:5:2, col:27>
    | `-VarDecl 0x122941ac8 <col:2, col:23> col:15 used newsk 'struct sock *' cinit
    |   `-RecoveryExpr 0x122941b48 <col:23> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x122941d68 <line:6:2, col:31>
    | |-RecordDecl 0x122941b80 <col:2, col:9> col:9 struct sctp_association
    | `-VarDecl 0x122941ce8 <col:2, col:27> col:27 used asoc 'struct sctp_association *'
    |-DeclStmt 0x122941e00 <line:7:2, col:12>
    | `-VarDecl 0x122941d98 <col:2, col:7> col:7 used timeo 'long'
    |-DeclStmt 0x122941eb8 <line:8:2, col:15>
    | `-VarDecl 0x122941e30 <col:2, col:14> col:6 used error 'int' cinit
    |   `-IntegerLiteral 0x122941e98 <col:14> 'int' 0
    |-CallExpr 0x1229420b8 <line:10:2, col:14> 'int'
    | |-ImplicitCastExpr 0x1229420a0 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x122942030 <col:2> 'int ()' Function 0x122941f78 'lock_sock' 'int ()'
    | `-ImplicitCastExpr 0x1229420e0 <col:12> 'struct sock *' <LValueToRValue>
    |   `-DeclRefExpr 0x122942050 <col:12> 'struct sock *' lvalue ParmVar 0x122928218 'sk' 'struct sock *'
    |-BinaryOperator 0x1229426d0 <line:12:2, col:17> 'struct sctp_sock *' '='
    | |-DeclRefExpr 0x1229420f8 <col:2> 'struct sctp_sock *' lvalue Var 0x122941800 'sp' 'struct sctp_sock *'
    | `-ImplicitCastExpr 0x122942290 <col:7, col:17> 'struct sctp_sock *' <IntegralToPointer>
    |   `-CallExpr 0x122942250 <col:7, col:17> 'int'
    |     |-ImplicitCastExpr 0x122942238 <col:7> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x1229421f8 <col:7> 'int ()' Function 0x122942140 'sctp_sk' 'int ()'
    |     `-ImplicitCastExpr 0x122942278 <col:15> 'struct sock *' <LValueToRValue>
    |       `-DeclRefExpr 0x122942218 <col:15> 'struct sock *' lvalue ParmVar 0x122928218 'sk' 'struct sock *'
    |-BinaryOperator 0x122942770 <line:13:2, col:11> 'struct sctp_endpoint *' contains-errors '='
    | |-DeclRefExpr 0x1229426f0 <col:2> 'struct sctp_endpoint *' lvalue Var 0x122941a08 'ep' 'struct sctp_endpoint *'
    | `-RecoveryExpr 0x122942748 <col:7, col:11> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x122942710 <col:7> 'struct sctp_sock *' lvalue Var 0x122941800 'sp' 'struct sctp_sock *'
    |-IfStmt 0x122942b40 <line:15:2, line:18:2>
    | |-UnaryOperator 0x1229429a8 <line:15:6, col:25> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-CallExpr 0x122942978 <col:7, col:25> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x1229428b8 <col:7> 'int ()' Function 0x122942800 'sctp_style' 'int ()'
    | |   |-DeclRefExpr 0x1229428d8 <col:18> 'struct sock *' lvalue ParmVar 0x122928218 'sk' 'struct sock *'
    | |   `-RecoveryExpr 0x122942958 <col:22> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x122942b20 <col:28, line:18:2>
    |   |-BinaryOperator 0x122942a98 <line:16:3, col:12> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x1229429c0 <col:3> 'int' lvalue Var 0x122941e30 'error' 'int'
    |   | `-UnaryOperator 0x122942a80 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |   `-ImplicitCastExpr 0x122942a68 <col:12> '<dependent type>' contains-errors <LValueToRValue>
    |   |     `-RecoveryExpr 0x122942a48 <col:12> '<dependent type>' contains-errors lvalue
    |   `-GotoStmt 0x122942b08 <line:17:3, col:8> 'out' 0x122942ab8
    |-IfStmt 0x122942e78 <line:20:2, line:23:2>
    | |-UnaryOperator 0x122942d30 <line:20:6, col:32> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-CallExpr 0x122942d00 <col:7, col:32> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x122942c40 <col:7> 'int ()' Function 0x122942b88 'sctp_sstate' 'int ()'
    | |   |-DeclRefExpr 0x122942c60 <col:19> 'struct sock *' lvalue ParmVar 0x122928218 'sk' 'struct sock *'
    | |   `-RecoveryExpr 0x122942ce0 <col:23> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x122942e58 <col:35, line:23:2>
    |   |-BinaryOperator 0x122942e20 <line:21:3, col:12> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x122942d48 <col:3> 'int' lvalue Var 0x122941e30 'error' 'int'
    |   | `-UnaryOperator 0x122942e08 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |   `-ImplicitCastExpr 0x122942df0 <col:12> '<dependent type>' contains-errors <LValueToRValue>
    |   |     `-RecoveryExpr 0x122942dd0 <col:12> '<dependent type>' contains-errors lvalue
    |   `-GotoStmt 0x122942e40 <line:22:3, col:8> 'out' 0x122942ab8
    |-BinaryOperator 0x1229430f0 <line:25:2, col:46> 'long' contains-errors '='
    | |-DeclRefExpr 0x122942e98 <col:2> 'long' lvalue Var 0x122941d98 'timeo' 'long'
    | `-CallExpr 0x1229430c0 <col:10, col:46> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x122942f98 <col:10> 'int ()' Function 0x122942ee0 'sock_rcvtimeo' 'int ()'
    |   |-DeclRefExpr 0x122942fb8 <col:24> 'struct sock *' lvalue ParmVar 0x122928218 'sk' 'struct sock *'
    |   `-BinaryOperator 0x1229430a0 <col:28, col:36> '<dependent type>' contains-errors '&'
    |     |-DeclRefExpr 0x122942fd8 <col:28> 'int' lvalue ParmVar 0x122928298 'flags' 'int'
    |     `-RecoveryExpr 0x122943080 <col:36> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x1229432e8 <line:27:2, col:40> 'int' '='
    | |-DeclRefExpr 0x122943110 <col:2> 'int' lvalue Var 0x122941e30 'error' 'int'
    | `-CallExpr 0x122943288 <col:10, col:40> 'int'
    |   |-ImplicitCastExpr 0x122943270 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x122943210 <col:10> 'int ()' Function 0x122943158 'sctp_wait_for_accept' 'int ()'
    |   |-ImplicitCastExpr 0x1229432b8 <col:31> 'struct sock *' <LValueToRValue>
    |   | `-DeclRefExpr 0x122943230 <col:31> 'struct sock *' lvalue ParmVar 0x122928218 'sk' 'struct sock *'
    |   `-ImplicitCastExpr 0x1229432d0 <col:35> 'long' <LValueToRValue>
    |     `-DeclRefExpr 0x122943250 <col:35> 'long' lvalue Var 0x122941d98 'timeo' 'long'
    |-IfStmt 0x122943358 <line:28:2, line:29:8>
    | |-ImplicitCastExpr 0x122943328 <line:28:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x122943308 <col:6> 'int' lvalue Var 0x122941e30 'error' 'int'
    | `-GotoStmt 0x122943340 <line:29:3, col:8> 'out' 0x122942ab8
    |-BinaryOperator 0x1229436d8 <line:34:2, col:49> 'struct sock *' contains-errors '='
    | |-DeclRefExpr 0x122943578 <col:2> 'struct sock *' contains-errors lvalue Var 0x122941ac8 'newsk' 'struct sock *'
    | `-CallExpr 0x1229436a0 <col:10, col:49> '<dependent type>' contains-errors
    |   |-CXXDependentScopeMemberExpr 0x1229435f8 <col:10, col:18> '<dependent type>' contains-errors lvalue ->create_accept_sk
    |   | `-RecoveryExpr 0x1229435d0 <col:10, col:14> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x122943598 <col:10> 'struct sctp_sock *' lvalue Var 0x122941800 'sp' 'struct sctp_sock *'
    |   |-DeclRefExpr 0x122943640 <col:35> 'struct sock *' lvalue ParmVar 0x122928218 'sk' 'struct sock *'
    |   |-DeclRefExpr 0x122943660 <col:39> 'struct sctp_association *' lvalue Var 0x122941ce8 'asoc' 'struct sctp_association *'
    |   `-RecoveryExpr 0x122943680 <col:45> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x122943798 <line:35:2, line:38:2>
    | |-UnaryOperator 0x122943730 <line:35:6, col:7> 'int' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x122943718 <col:7> 'struct sock *' contains-errors <LValueToRValue>
    | |   `-DeclRefExpr 0x1229436f8 <col:7> 'struct sock *' contains-errors lvalue Var 0x122941ac8 'newsk' 'struct sock *'
    | `-CompoundStmt 0x122943780 <col:14, line:38:2>
    |   `-GotoStmt 0x122943768 <line:37:3, col:8> 'out' 0x122942ab8
    |-IfStmt 0x122943b20 <line:42:2, line:45:2>
    | |-ImplicitCastExpr 0x122943958 <line:42:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x122943938 <col:6> 'int' lvalue Var 0x122941e30 'error' 'int'
    | `-CompoundStmt 0x122943b08 <col:13, line:45:2>
    |   `-CallExpr 0x122943aa8 <line:43:3, col:26> 'int' contains-errors
    |     |-ImplicitCastExpr 0x122943a90 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x122943a50 <col:3> 'int ()' Function 0x122943998 'sk_common_release' 'int ()'
    |     `-ImplicitCastExpr 0x122943ad0 <col:21> 'struct sock *' contains-errors <LValueToRValue>
    |       `-DeclRefExpr 0x122943a70 <col:21> 'struct sock *' contains-errors lvalue Var 0x122941ac8 'newsk' 'struct sock *'
    |-LabelStmt 0x122943cb8 <line:47:1, line:48:17> 'out'
    | `-CallExpr 0x122943c78 <col:2, col:17> 'int'
    |   |-ImplicitCastExpr 0x122943c60 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x122943c20 <col:2> 'int ()' Function 0x122943b68 'release_sock' 'int ()'
    |   `-ImplicitCastExpr 0x122943ca0 <col:15> 'struct sock *' <LValueToRValue>
    |     `-DeclRefExpr 0x122943c40 <col:15> 'struct sock *' lvalue ParmVar 0x122928218 'sk' 'struct sock *'
    |-BinaryOperator 0x122943d60 <line:49:2, col:9> 'int' '='
    | |-UnaryOperator 0x122943d10 <col:2, col:3> 'int' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x122943cf8 <col:3> 'int *' <LValueToRValue>
    | |   `-DeclRefExpr 0x122943cd8 <col:3> 'int *' lvalue ParmVar 0x122928348 'err' 'int *'
    | `-ImplicitCastExpr 0x122943d48 <col:9> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x122943d28 <col:9> 'int' lvalue Var 0x122941e30 'error' 'int'
    `-ReturnStmt 0x122943db8 <line:50:2, col:9>
      `-ImplicitCastExpr 0x122943da0 <col:9> 'struct sock *' contains-errors <LValueToRValue>
        `-DeclRefExpr 0x122943d80 <col:9> 'struct sock *' contains-errors lvalue Var 0x122941ac8 'newsk' 'struct sock *'
