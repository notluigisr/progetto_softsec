TranslationUnitDecl 0x145855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1458564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x145855bd0 '__int128'
|-TypedefDecl 0x145856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x145855bf0 'unsigned __int128'
|-TypedefDecl 0x14600be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14600bc00 'struct __NSConstantString_tag'
|   `-Record 0x145856580 '__NSConstantString_tag'
|-TypedefDecl 0x14600be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x145855d90 '__SVInt8_t'
|-TypedefDecl 0x14600bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x145855db0 '__SVInt16_t'
|-TypedefDecl 0x14600bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x145855dd0 '__SVInt32_t'
|-TypedefDecl 0x14600bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x145855df0 '__SVInt64_t'
|-TypedefDecl 0x14600c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x145855e10 '__SVUint8_t'
|-TypedefDecl 0x14600c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x145855e30 '__SVUint16_t'
|-TypedefDecl 0x14600c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x145855e50 '__SVUint32_t'
|-TypedefDecl 0x14600c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x145855e70 '__SVUint64_t'
|-TypedefDecl 0x14600c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x145855e90 '__SVFloat16_t'
|-TypedefDecl 0x14600c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x145855eb0 '__SVFloat32_t'
|-TypedefDecl 0x14600c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x145855ed0 '__SVFloat64_t'
|-TypedefDecl 0x14600c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x145855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14600c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x145855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14600c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x145855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14600c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x145855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14600c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x145855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14600c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x145855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14600c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x145855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14600c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x145855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14600c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x145855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14600c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x145856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14600c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x145856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14600c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x145856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14600c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x145856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14600c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x145856090 '__clang_svint8x3_t'
|-TypedefDecl 0x14600c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1458560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14600c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1458560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14600c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1458560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14600c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x145856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14600ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x145856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14600cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x145856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14600cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x145856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14600cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x145856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14600d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1458561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14600d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1458561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14600d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1458561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14600d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x145856210 '__clang_svint8x4_t'
|-TypedefDecl 0x14600d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x145856230 '__clang_svint16x4_t'
|-TypedefDecl 0x14600d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x145856250 '__clang_svint32x4_t'
|-TypedefDecl 0x14600d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x145856270 '__clang_svint64x4_t'
|-TypedefDecl 0x14600d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x145856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14600d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1458562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14600d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1458562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14600d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1458562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14600d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x145856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14600d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x145856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14600d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x145856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14600d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x145856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14600da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x145856390 '__SVBool_t'
|-TypedefDecl 0x14600da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1458563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14600dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1458563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14600db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1458563f0 '__SVCount_t'
|-TypedefDecl 0x14600dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14600dbb0 'char *'
|   `-BuiltinType 0x1458556b0 'char'
|-TypedefDecl 0x14600dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14600dbb0 'char *'
|   `-BuiltinType 0x1458556b0 'char'
`-FunctionDecl 0x14600dfe8 <dataset_diviso_filec/func24859_vuln.c:1:1, line:49:1> line:1:1 _asn1_convert_integer 'int (const unsigned char *, unsigned char *, int, int *)'
  |-ParmVarDecl 0x14600dd08 <col:24, col:45> col:45 used value 'const unsigned char *'
  |-ParmVarDecl 0x14600ddb8 <col:52, col:67> col:67 used value_out 'unsigned char *'
  |-ParmVarDecl 0x14600de38 <line:2:10, col:14> col:14 used value_out_size 'int'
  |-ParmVarDecl 0x14600dee8 <col:30, col:35> col:35 used len 'int *'
  `-CompoundStmt 0x145925648 <line:3:1, line:49:1>
    |-DeclStmt 0x14600e170 <line:4:3, col:16>
    | `-VarDecl 0x14600e108 <col:3, col:8> col:8 used negative 'char'
    |-DeclStmt 0x14600e238 <line:5:3, col:46>
    | `-VarDecl 0x14600e1d0 <col:3, col:17> col:17 referenced invalid val 'unsigned char'
    |-DeclStmt 0x14600e2d0 <line:6:3, col:14>
    | `-VarDecl 0x14600e268 <col:3, col:8> col:8 used valtmp 'long'
    |-DeclStmt 0x145922600 <line:7:3, col:12>
    | |-VarDecl 0x14600e300 <col:3, col:7> col:7 used k 'int'
    | `-VarDecl 0x14600e380 <col:3, col:10> col:10 used k2 'int'
    |-BinaryOperator 0x145922878 <line:9:3, col:41> 'long' contains-errors '='
    | |-DeclRefExpr 0x145922618 <col:3> 'long' lvalue Var 0x14600e268 'valtmp' 'long'
    | `-CallExpr 0x145922840 <col:12, col:41> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x145922750 <col:12> 'int ()' Function 0x145922698 '_asn1_strtol' 'int ()'
    |   |-DeclRefExpr 0x145922770 <col:26> 'const unsigned char *' lvalue ParmVar 0x14600dd08 'value' 'const unsigned char *'
    |   |-RecoveryExpr 0x145922820 <col:33> '<dependent type>' contains-errors lvalue
    |   `-IntegerLiteral 0x1459227a8 <col:39> 'int' 10
    |-ForStmt 0x145922c20 <line:11:3, line:14:5>
    | |-BinaryOperator 0x1459228d8 <line:11:8, col:12> 'int' '='
    | | |-DeclRefExpr 0x145922898 <col:8> 'int' lvalue Var 0x14600e300 'k' 'int'
    | | `-IntegerLiteral 0x1459228b8 <col:12> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x145922970 <col:15, col:19> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x1459228f8 <col:15> 'int' lvalue Var 0x14600e300 'k' 'int'
    | | `-RecoveryExpr 0x145922950 <col:19> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x1459229b0 <col:45, col:46> 'int' postfix '++'
    | | `-DeclRefExpr 0x145922990 <col:45> 'int' lvalue Var 0x14600e300 'k' 'int'
    | `-CompoundStmt 0x145922c10 <line:12:5, line:14:5>
    |-IfStmt 0x145922e00 <line:16:3, line:19:16> has_else
    | |-BinaryOperator 0x145922cf0 <line:16:7, col:16> '<dependent type>' contains-errors '&'
    | | |-ArraySubscriptExpr 0x145922cb0 <col:7, col:12> '<dependent type>' contains-errors lvalue
    | | | |-ImplicitCastExpr 0x145922c98 <col:7> '<dependent type>' contains-errors <LValueToRValue>
    | | | | `-RecoveryExpr 0x145922c58 <col:7> '<dependent type>' contains-errors lvalue
    | | | `-IntegerLiteral 0x145922c78 <col:11> 'int' 0
    | | `-IntegerLiteral 0x145922cd0 <col:16> 'int' 128
    | |-BinaryOperator 0x145922d68 <line:17:5, col:16> 'char' '='
    | | |-DeclRefExpr 0x145922d10 <col:5> 'char' lvalue Var 0x14600e108 'negative' 'char'
    | | `-ImplicitCastExpr 0x145922d50 <col:16> 'char' <IntegralCast>
    | |   `-IntegerLiteral 0x145922d30 <col:16> 'int' 1
    | `-BinaryOperator 0x145922de0 <line:19:5, col:16> 'char' '='
    |   |-DeclRefExpr 0x145922d88 <col:5> 'char' lvalue Var 0x14600e108 'negative' 'char'
    |   `-ImplicitCastExpr 0x145922dc8 <col:16> 'char' <IntegralCast>
    |     `-IntegerLiteral 0x145922da8 <col:16> 'int' 0
    |-ForStmt 0x145923268 <line:21:3, line:27:5>
    | |-BinaryOperator 0x145922e70 <line:21:8, col:12> 'int' '='
    | | |-DeclRefExpr 0x145922e30 <col:8> 'int' lvalue Var 0x14600e300 'k' 'int'
    | | `-IntegerLiteral 0x145922e50 <col:12> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x145922f68 <col:15, col:46> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x145922e90 <col:15> 'int' lvalue Var 0x14600e300 'k' 'int'
    | | `-BinaryOperator 0x145922f48 <col:19, col:46> '<dependent type>' contains-errors '-'
    | |   |-RecoveryExpr 0x145922f28 <col:19> '<dependent type>' contains-errors lvalue
    | |   `-IntegerLiteral 0x145922ec8 <col:46> 'int' 1
    | |-UnaryOperator 0x145922fa8 <col:49, col:50> 'int' postfix '++'
    | | `-DeclRefExpr 0x145922f88 <col:49> 'int' lvalue Var 0x14600e300 'k' 'int'
    | `-CompoundStmt 0x145923250 <line:22:5, line:27:5>
    |   `-IfStmt 0x145923220 <line:23:7, line:26:2> has_else
    |     |-BinaryOperator 0x1459230d0 <line:23:11, col:38> 'int' contains-errors '&&'
    |     | |-DeclRefExpr 0x145922fc0 <col:11> 'char' lvalue Var 0x14600e108 'negative' 'char'
    |     | `-ParenExpr 0x1459230b0 <col:23, col:38> 'int' contains-errors
    |     |   `-BinaryOperator 0x145923090 <col:24, col:34> 'int' contains-errors '!='
    |     |     |-ArraySubscriptExpr 0x145923050 <col:24, col:29> '<dependent type>' contains-errors lvalue
    |     |     | |-ImplicitCastExpr 0x145923020 <col:24> '<dependent type>' contains-errors <LValueToRValue>
    |     |     | | `-RecoveryExpr 0x145922fe0 <col:24> '<dependent type>' contains-errors lvalue
    |     |     | `-ImplicitCastExpr 0x145923038 <col:28> 'int' <LValueToRValue>
    |     |     |   `-DeclRefExpr 0x145923000 <col:28> 'int' lvalue Var 0x14600e300 'k' 'int'
    |     |     `-IntegerLiteral 0x145923070 <col:34> 'int' 255
    |     |-BreakStmt 0x1459230f0 <line:24:2>
    |     `-IfStmt 0x145923200 <line:25:12, line:26:2>
    |       |-BinaryOperator 0x1459231d8 <line:25:16, col:34> 'int' contains-errors '&&'
    |       | |-UnaryOperator 0x145923130 <col:16, col:17> 'int' prefix '!' cannot overflow
    |       | | `-ImplicitCastExpr 0x145923118 <col:17> 'char' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x1459230f8 <col:17> 'char' lvalue Var 0x14600e108 'negative' 'char'
    |       | `-ArraySubscriptExpr 0x1459231b8 <col:29, col:34> '<dependent type>' contains-errors lvalue
    |       |   |-ImplicitCastExpr 0x145923188 <col:29> '<dependent type>' contains-errors <LValueToRValue>
    |       |   | `-RecoveryExpr 0x145923148 <col:29> '<dependent type>' contains-errors lvalue
    |       |   `-ImplicitCastExpr 0x1459231a0 <col:33> 'int' <LValueToRValue>
    |       |     `-DeclRefExpr 0x145923168 <col:33> 'int' lvalue Var 0x14600e300 'k' 'int'
    |       `-BreakStmt 0x1459231f8 <line:26:2>
    |-IfStmt 0x1459235e0 <line:29:3, line:30:6>
    | |-BinaryOperator 0x145923588 <line:29:7, col:70> 'int' contains-errors '||'
    | | |-ParenExpr 0x1459233e8 <col:7, col:36> 'int' contains-errors
    | | | `-BinaryOperator 0x1459233c8 <col:8, col:35> 'int' contains-errors '&&'
    | | |   |-DeclRefExpr 0x1459232a0 <col:8> 'char' lvalue Var 0x14600e108 'negative' 'char'
    | | |   `-UnaryOperator 0x1459233b0 <col:20, col:35> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | |     `-ParenExpr 0x145923390 <col:21, col:35> '<dependent type>' contains-errors
    | | |       `-BinaryOperator 0x145923370 <col:22, col:31> '<dependent type>' contains-errors '&'
    | | |         |-ArraySubscriptExpr 0x145923330 <col:22, col:27> '<dependent type>' contains-errors lvalue
    | | |         | |-ImplicitCastExpr 0x145923300 <col:22> '<dependent type>' contains-errors <LValueToRValue>
    | | |         | | `-RecoveryExpr 0x1459232c0 <col:22> '<dependent type>' contains-errors lvalue
    | | |         | `-ImplicitCastExpr 0x145923318 <col:26> 'int' <LValueToRValue>
    | | |         |   `-DeclRefExpr 0x1459232e0 <col:26> 'int' lvalue Var 0x14600e300 'k' 'int'
    | | |         `-IntegerLiteral 0x145923350 <col:31> 'int' 128
    | | `-ParenExpr 0x145923568 <col:41, col:70> 'int' contains-errors
    | |   `-BinaryOperator 0x145923548 <col:42, col:69> 'int' contains-errors '&&'
    | |     |-UnaryOperator 0x145923440 <col:42, col:43> 'int' prefix '!' cannot overflow
    | |     | `-ImplicitCastExpr 0x145923428 <col:43> 'char' <LValueToRValue>
    | |     |   `-DeclRefExpr 0x145923408 <col:43> 'char' lvalue Var 0x14600e108 'negative' 'char'
    | |     `-ParenExpr 0x145923528 <col:55, col:69> '<dependent type>' contains-errors
    | |       `-BinaryOperator 0x145923508 <col:56, col:65> '<dependent type>' contains-errors '&'
    | |         |-ArraySubscriptExpr 0x1459234c8 <col:56, col:61> '<dependent type>' contains-errors lvalue
    | |         | |-ImplicitCastExpr 0x145923498 <col:56> '<dependent type>' contains-errors <LValueToRValue>
    | |         | | `-RecoveryExpr 0x145923458 <col:56> '<dependent type>' contains-errors lvalue
    | |         | `-ImplicitCastExpr 0x1459234b0 <col:60> 'int' <LValueToRValue>
    | |         |   `-DeclRefExpr 0x145923478 <col:60> 'int' lvalue Var 0x14600e300 'k' 'int'
    | |         `-IntegerLiteral 0x1459234e8 <col:65> 'int' 128
    | `-UnaryOperator 0x1459235c8 <line:30:5, col:6> 'int' postfix '--'
    |   `-DeclRefExpr 0x1459235a8 <col:5> 'int' lvalue Var 0x14600e300 'k' 'int'
    |-BinaryOperator 0x145925168 <line:32:3, col:37> 'int' contains-errors '='
    | |-UnaryOperator 0x145925110 <col:3, col:4> 'int' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x1459250f8 <col:4> 'int *' <LValueToRValue>
    | |   `-DeclRefExpr 0x145925000 <col:4> 'int *' lvalue ParmVar 0x14600dee8 'len' 'int *'
    | `-BinaryOperator 0x145925148 <col:10, col:37> '<dependent type>' contains-errors '-'
    |   |-RecoveryExpr 0x145925128 <col:10> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x145925068 <col:37> 'int' lvalue Var 0x14600e300 'k' 'int'
    |-IfStmt 0x1459252c8 <line:34:3, line:36:12>
    | |-BinaryOperator 0x145925260 <line:34:7, col:38> 'int' contains-errors '>'
    | | |-BinaryOperator 0x145925240 <col:7, col:34> '<dependent type>' contains-errors '-'
    | | | |-RecoveryExpr 0x145925220 <col:7> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x1459251a0 <col:34> 'int' lvalue Var 0x14600e300 'k' 'int'
    | | `-DeclRefExpr 0x1459251e0 <col:38> 'int' lvalue ParmVar 0x14600de38 'value_out_size' 'int'
    | `-ReturnStmt 0x1459252b8 <line:36:5, col:12>
    |   `-RecoveryExpr 0x145925298 <col:12> '<dependent type>' contains-errors lvalue
    |-ForStmt 0x1459255c8 <line:38:3, line:39:31>
    | |-BinaryOperator 0x145925340 <line:38:8, col:13> 'int' '='
    | | |-DeclRefExpr 0x1459252e8 <col:8> 'int' lvalue Var 0x14600e380 'k2' 'int'
    | | `-ImplicitCastExpr 0x145925328 <col:13> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x145925308 <col:13> 'int' lvalue Var 0x14600e300 'k' 'int'
    | |-<<<NULL>>>
    | |-BinaryOperator 0x1459253d8 <col:16, col:21> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x145925360 <col:16> 'int' lvalue Var 0x14600e380 'k2' 'int'
    | | `-RecoveryExpr 0x1459253b8 <col:21> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x145925418 <col:47, col:49> 'int' postfix '++'
    | | `-DeclRefExpr 0x1459253f8 <col:47> 'int' lvalue Var 0x14600e380 'k2' 'int'
    | `-BinaryOperator 0x1459255a8 <line:39:5, col:31> 'unsigned char' contains-errors '='
    |   |-ArraySubscriptExpr 0x1459254f8 <col:5, col:21> 'unsigned char' lvalue
    |   | |-ImplicitCastExpr 0x1459254e0 <col:5> 'unsigned char *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x145925430 <col:5> 'unsigned char *' lvalue ParmVar 0x14600ddb8 'value_out' 'unsigned char *'
    |   | `-BinaryOperator 0x1459254c0 <col:15, col:20> 'int' '-'
    |   |   |-ImplicitCastExpr 0x145925490 <col:15> 'int' <LValueToRValue>
    |   |   | `-DeclRefExpr 0x145925450 <col:15> 'int' lvalue Var 0x14600e380 'k2' 'int'
    |   |   `-ImplicitCastExpr 0x1459254a8 <col:20> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x145925470 <col:20> 'int' lvalue Var 0x14600e300 'k' 'int'
    |   `-ArraySubscriptExpr 0x145925588 <col:25, col:31> '<dependent type>' contains-errors lvalue
    |     |-ImplicitCastExpr 0x145925558 <col:25> '<dependent type>' contains-errors <LValueToRValue>
    |     | `-RecoveryExpr 0x145925518 <col:25> '<dependent type>' contains-errors lvalue
    |     `-ImplicitCastExpr 0x145925570 <col:29> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x145925538 <col:29> 'int' lvalue Var 0x14600e380 'k2' 'int'
    `-ReturnStmt 0x145925638 <line:48:3, col:10>
      `-RecoveryExpr 0x145925618 <col:10> '<dependent type>' contains-errors lvalue
