TranslationUnitDecl 0x157053408 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1570542b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1570539d0 '__int128'
|-TypedefDecl 0x157054328 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1570539f0 'unsigned __int128'
|-TypedefDecl 0x16080be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x16080bc00 'struct __NSConstantString_tag'
|   `-Record 0x157054380 '__NSConstantString_tag'
|-TypedefDecl 0x16080be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x157053b90 '__SVInt8_t'
|-TypedefDecl 0x16080bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x157053bb0 '__SVInt16_t'
|-TypedefDecl 0x16080bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x157053bd0 '__SVInt32_t'
|-TypedefDecl 0x16080bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x157053bf0 '__SVInt64_t'
|-TypedefDecl 0x16080c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x157053c10 '__SVUint8_t'
|-TypedefDecl 0x16080c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x157053c30 '__SVUint16_t'
|-TypedefDecl 0x16080c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x157053c50 '__SVUint32_t'
|-TypedefDecl 0x16080c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x157053c70 '__SVUint64_t'
|-TypedefDecl 0x16080c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x157053c90 '__SVFloat16_t'
|-TypedefDecl 0x16080c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x157053cb0 '__SVFloat32_t'
|-TypedefDecl 0x16080c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x157053cd0 '__SVFloat64_t'
|-TypedefDecl 0x16080c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x157053cf0 '__SVBfloat16_t'
|-TypedefDecl 0x16080c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x157053d10 '__clang_svint8x2_t'
|-TypedefDecl 0x16080c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x157053d30 '__clang_svint16x2_t'
|-TypedefDecl 0x16080c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x157053d50 '__clang_svint32x2_t'
|-TypedefDecl 0x16080c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x157053d70 '__clang_svint64x2_t'
|-TypedefDecl 0x16080c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x157053d90 '__clang_svuint8x2_t'
|-TypedefDecl 0x16080c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x157053db0 '__clang_svuint16x2_t'
|-TypedefDecl 0x16080c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x157053dd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x16080c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x157053df0 '__clang_svuint64x2_t'
|-TypedefDecl 0x16080c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x157053e10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x16080c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x157053e30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x16080c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x157053e50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x16080c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x157053e70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x16080c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x157053e90 '__clang_svint8x3_t'
|-TypedefDecl 0x16080c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x157053eb0 '__clang_svint16x3_t'
|-TypedefDecl 0x16080c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x157053ed0 '__clang_svint32x3_t'
|-TypedefDecl 0x16080c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x157053ef0 '__clang_svint64x3_t'
|-TypedefDecl 0x16080c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x157053f10 '__clang_svuint8x3_t'
|-TypedefDecl 0x16080ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x157053f30 '__clang_svuint16x3_t'
|-TypedefDecl 0x16080cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x157053f50 '__clang_svuint32x3_t'
|-TypedefDecl 0x16080cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x157053f70 '__clang_svuint64x3_t'
|-TypedefDecl 0x16080cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x157053f90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x16080d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x157053fb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x16080d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x157053fd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x16080d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x157053ff0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x16080d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x157054010 '__clang_svint8x4_t'
|-TypedefDecl 0x16080d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x157054030 '__clang_svint16x4_t'
|-TypedefDecl 0x16080d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x157054050 '__clang_svint32x4_t'
|-TypedefDecl 0x16080d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x157054070 '__clang_svint64x4_t'
|-TypedefDecl 0x16080d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x157054090 '__clang_svuint8x4_t'
|-TypedefDecl 0x16080d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1570540b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x16080d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1570540d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x16080d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1570540f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x16080d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x157054110 '__clang_svfloat16x4_t'
|-TypedefDecl 0x16080d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x157054130 '__clang_svfloat32x4_t'
|-TypedefDecl 0x16080d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x157054150 '__clang_svfloat64x4_t'
|-TypedefDecl 0x16080d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x157054170 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x16080da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x157054190 '__SVBool_t'
|-TypedefDecl 0x16080da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1570541b0 '__clang_svboolx2_t'
|-TypedefDecl 0x16080dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1570541d0 '__clang_svboolx4_t'
|-TypedefDecl 0x16080db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1570541f0 '__SVCount_t'
|-TypedefDecl 0x16080dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x16080dbb0 'char *'
|   `-BuiltinType 0x1570534b0 'char'
|-TypedefDecl 0x16080dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x16080dbb0 'char *'
|   `-BuiltinType 0x1570534b0 'char'
|-FunctionDecl 0x16080de88 <dataset_diviso_filec/func12387_nonvuln.c:1:1, line:64:1> line:1:1 invalid tparm_setup 'int (const char *, int *)'
| |-ParmVarDecl 0x16080dcd8 <col:13, col:25> col:25 used string 'const char *'
| |-ParmVarDecl 0x16080dda8 <col:33, col:46> col:46 referenced invalid result 'int *'
| `-CompoundStmt 0x160829b30 <line:2:1, line:64:1>
|   |-DeclStmt 0x16080dff8 <line:3:5, col:16>
|   | `-VarDecl 0x16080df58 <col:5, col:14> col:9 used rc 'int' cinit
|   |   `-RecoveryExpr 0x16080dfd8 <col:14> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x16080e258 <line:5:5, col:21> '<dependent type>' contains-errors '='
|   | |-CallExpr 0x16080e230 <col:5, col:17> '<dependent type>' contains-errors
|   | | |-DeclRefExpr 0x16080e170 <col:5> 'int ()' Function 0x16080e0b8 'TPS' 'int ()'
|   | | `-RecoveryExpr 0x16080e210 <col:9> '<dependent type>' contains-errors lvalue
|   | `-IntegerLiteral 0x16080e1d0 <col:21> 'int' 0
|   |-CallExpr 0x160827a58 <line:6:5, col:38> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x160827950 <col:5> 'void *(void *, int, unsigned long)' Function 0x160827700 'memset' 'void *(void *, int, unsigned long)'
|   | |-RecoveryExpr 0x160827970 <col:12> '<dependent type>' contains-errors lvalue
|   | |-IntegerLiteral 0x160827990 <col:20> 'int' 0
|   | `-UnaryExprOrTypeTraitExpr 0x160827a20 <col:23, col:37> 'unsigned long' contains-errors sizeof
|   |   `-ParenExpr 0x160827a00 <col:29, col:37> '<dependent type>' contains-errors
|   |     `-UnaryOperator 0x1608279e8 <col:30, col:31> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |       `-ImplicitCastExpr 0x1608279d0 <col:31> '<dependent type>' contains-errors <LValueToRValue>
|   |         `-RecoveryExpr 0x1608279b0 <col:31> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x160829ab8 <line:8:5, line:61:5> has_else
|   | |-BinaryOperator 0x160827b08 <line:8:9, col:19> 'int' contains-errors '=='
|   | | |-DeclRefExpr 0x160827a90 <col:9> 'const char *' lvalue ParmVar 0x16080dcd8 'string' 'const char *'
|   | | `-RecoveryExpr 0x160827ae8 <col:19> '<dependent type>' contains-errors lvalue
|   | |-CompoundStmt 0x160827db8 <col:25, line:11:5>
|   | | `-BinaryOperator 0x160827d98 <line:10:2, col:7> 'int' contains-errors '='
|   | |   |-DeclRefExpr 0x160827d20 <col:2> 'int' contains-errors lvalue Var 0x16080df58 'rc' 'int'
|   | |   `-RecoveryExpr 0x160827d78 <col:7> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x160829aa0 <line:11:12, line:61:5>
|   |   `-CompoundStmt 0x160829a80 <line:22:2, line:60:2>
|   |     |-BinaryOperator 0x1608280c0 <line:24:6, line:26:31> '<dependent type>' contains-errors '='
|   |     | |-CXXDependentScopeMemberExpr 0x160827e18 <line:24:6, col:14> '<dependent type>' contains-errors lvalue ->num_parsed
|   |     | | `-RecoveryExpr 0x160827df0 <col:6> '<dependent type>' contains-errors lvalue
|   |     | |   `-DeclRefExpr 0x160827dd0 <col:6> 'int *' lvalue ParmVar 0x16080dda8 'result' 'int *'
|   |     | `-CallExpr 0x160828088 <col:27, line:26:31> '<dependent type>' contains-errors
|   |     |   |-DeclRefExpr 0x160827f40 <line:24:27> 'int ()' Function 0x160827e88 '_nc_tparm_analyze' 'int ()'
|   |     |   |-DeclRefExpr 0x160827f60 <col:45> 'const char *' lvalue ParmVar 0x16080dcd8 'string' 'const char *'
|   |     |   |-CXXDependentScopeMemberExpr 0x160827fa0 <line:25:10, col:18> '<dependent type>' contains-errors lvalue ->p_is_s
|   |     |   | `-RecoveryExpr 0x160827f80 <col:10> '<dependent type>' contains-errors lvalue
|   |     |   `-UnaryOperator 0x160828070 <line:26:10, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     |     `-ParenExpr 0x160828050 <col:11, col:30> '<dependent type>' contains-errors lvalue
|   |     |       `-CXXDependentScopeMemberExpr 0x160828008 <col:12, col:20> '<dependent type>' contains-errors lvalue ->num_popped
|   |     |         `-RecoveryExpr 0x160827fe8 <col:12> '<dependent type>' contains-errors lvalue
|   |     `-IfStmt 0x160829a50 <line:27:6, line:59:6> has_else
|   |       |-BinaryOperator 0x1608281c8 <line:27:10, col:27> 'int' contains-errors '=='
|   |       | |-CallExpr 0x1608281a0 <col:10, col:22> '<dependent type>' contains-errors
|   |       | | |-DeclRefExpr 0x1608280e0 <col:10> 'int ()' Function 0x16080e0b8 'TPS' 'int ()'
|   |       | | `-RecoveryExpr 0x160828180 <col:14> '<dependent type>' contains-errors lvalue
|   |       | `-IntegerLiteral 0x160828140 <col:27> 'int' 0
|   |       |-CompoundStmt 0x160828358 <col:30, line:30:6>
|   |       | `-BinaryOperator 0x160828338 <line:29:3, col:8> 'int' contains-errors '='
|   |       |   |-DeclRefExpr 0x1608282c0 <col:3> 'int' contains-errors lvalue Var 0x16080df58 'rc' 'int'
|   |       |   `-RecoveryExpr 0x160828318 <col:8> '<dependent type>' contains-errors lvalue
|   |       `-CompoundStmt 0x160829a20 <line:30:13, line:59:6>
|   |         |-DeclStmt 0x160829000 <line:31:3, col:8>
|   |         | `-VarDecl 0x160828388 <col:3, col:7> col:7 used n 'int'
|   |         |-IfStmt 0x160829200 <line:33:3, line:34:28>
|   |         | |-BinaryOperator 0x1608290d8 <line:33:7, col:28> 'int' contains-errors '>'
|   |         | | |-CXXDependentScopeMemberExpr 0x160829038 <col:7, col:15> '<dependent type>' contains-errors lvalue ->num_parsed
|   |         | | | `-RecoveryExpr 0x160829018 <col:7> '<dependent type>' contains-errors lvalue
|   |         | | `-RecoveryExpr 0x1608290b8 <col:28> '<dependent type>' contains-errors lvalue
|   |         | `-BinaryOperator 0x1608291e0 <line:34:7, col:28> '<dependent type>' contains-errors '='
|   |         |   |-CXXDependentScopeMemberExpr 0x160829140 <col:7, col:15> '<dependent type>' contains-errors lvalue ->num_parsed
|   |         |   | `-RecoveryExpr 0x160829118 <col:7> '<dependent type>' contains-errors lvalue
|   |         |   |   `-DeclRefExpr 0x1608290f8 <col:7> 'int *' lvalue ParmVar 0x16080dda8 'result' 'int *'
|   |         |   `-RecoveryExpr 0x1608291c0 <col:28> '<dependent type>' contains-errors lvalue
|   |         |-BinaryOperator 0x160829620 <line:37:3, col:66> '<dependent type>' contains-errors '='
|   |         | |-CXXDependentScopeMemberExpr 0x1608293d8 <col:3, col:11> '<dependent type>' contains-errors lvalue ->num_actual
|   |         | | `-RecoveryExpr 0x1608293b0 <col:3> '<dependent type>' contains-errors lvalue
|   |         | |   `-DeclRefExpr 0x160829390 <col:3> 'int *' lvalue ParmVar 0x16080dda8 'result' 'int *'
|   |         | `-CallExpr 0x1608295f0 <col:24, col:66> '<dependent type>' contains-errors
|   |         |   |-DeclRefExpr 0x160829500 <col:24> 'int ()' Function 0x160829448 'max' 'int ()'
|   |         |   |-CXXDependentScopeMemberExpr 0x160829540 <col:28, col:36> '<dependent type>' contains-errors lvalue ->num_popped
|   |         |   | `-RecoveryExpr 0x160829520 <col:28> '<dependent type>' contains-errors lvalue
|   |         |   `-CXXDependentScopeMemberExpr 0x1608295a8 <col:48, col:56> '<dependent type>' contains-errors lvalue ->num_parsed
|   |         |     `-RecoveryExpr 0x160829588 <col:48> '<dependent type>' contains-errors lvalue
|   |         `-ForStmt 0x1608299e8 <line:39:3, line:42:3>
|   |           |-BinaryOperator 0x160829680 <line:39:8, col:12> 'int' '='
|   |           | |-DeclRefExpr 0x160829640 <col:8> 'int' lvalue Var 0x160828388 'n' 'int'
|   |           | `-IntegerLiteral 0x160829660 <col:12> 'int' 0
|   |           |-<<<NULL>>>
|   |           |-BinaryOperator 0x160829728 <col:15, col:27> 'int' contains-errors '<'
|   |           | |-DeclRefExpr 0x1608296a0 <col:15> 'int' lvalue Var 0x160828388 'n' 'int'
|   |           | `-CXXDependentScopeMemberExpr 0x1608296e0 <col:19, col:27> '<dependent type>' contains-errors lvalue ->num_actual
|   |           |   `-RecoveryExpr 0x1608296c0 <col:19> '<dependent type>' contains-errors lvalue
|   |           |-UnaryOperator 0x160829768 <col:39, col:41> 'int' prefix '++'
|   |           | `-DeclRefExpr 0x160829748 <col:41> 'int' lvalue Var 0x160828388 'n' 'int'
|   |           `-CompoundStmt 0x1608299d0 <col:44, line:42:3>
|   |             `-IfStmt 0x1608299b0 <line:40:7, line:41:33>
|   |               |-ArraySubscriptExpr 0x160829838 <line:40:11, col:27> '<dependent type>' contains-errors lvalue
|   |               | |-ImplicitCastExpr 0x160829808 <col:11, col:19> '<dependent type>' contains-errors <LValueToRValue>
|   |               | | `-CXXDependentScopeMemberExpr 0x1608297a0 <col:11, col:19> '<dependent type>' contains-errors lvalue ->p_is_s
|   |               | |   `-RecoveryExpr 0x160829780 <col:11> '<dependent type>' contains-errors lvalue
|   |               | `-ImplicitCastExpr 0x160829820 <col:26> 'int' <LValueToRValue>
|   |               |   `-DeclRefExpr 0x1608297e8 <col:26> 'int' lvalue Var 0x160828388 'n' 'int'
|   |               `-CompoundAssignOperator 0x160829980 <line:41:4, col:33> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |                 |-CXXDependentScopeMemberExpr 0x1608298a0 <col:4, col:12> '<dependent type>' contains-errors lvalue ->tparm_type
|   |                 | `-RecoveryExpr 0x160829878 <col:4> '<dependent type>' contains-errors lvalue
|   |                 |   `-DeclRefExpr 0x160829858 <col:4> 'int *' lvalue ParmVar 0x16080dda8 'result' 'int *'
|   |                 `-ParenExpr 0x160829960 <col:26, col:33> 'int'
|   |                   `-BinaryOperator 0x160829940 <col:27, col:32> 'int' '<<'
|   |                     |-IntegerLiteral 0x1608298e8 <col:27> 'int' 1
|   |                     `-ImplicitCastExpr 0x160829928 <col:32> 'int' <LValueToRValue>
|   |                       `-DeclRefExpr 0x160829908 <col:32> 'int' lvalue Var 0x160828388 'n' 'int'
|   `-ReturnStmt 0x160829b20 <line:63:5, col:12>
|     `-ImplicitCastExpr 0x160829b08 <col:12> 'int' contains-errors <LValueToRValue>
|       `-DeclRefExpr 0x160829ae8 <col:12> 'int' contains-errors lvalue Var 0x16080df58 'rc' 'int'
`-FunctionDecl 0x160827700 <line:6:5> col:5 implicit used memset 'void *(void *, int, unsigned long)' extern
  |-ParmVarDecl 0x160827800 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x160827868 <<invalid sloc>> <invalid sloc> 'int'
  |-ParmVarDecl 0x1608278d0 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x1608277a8 <<invalid sloc>> Implicit 900
