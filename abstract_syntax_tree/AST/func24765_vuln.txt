TranslationUnitDecl 0x123855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1238564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x123855bd0 '__int128'
|-TypedefDecl 0x123856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x123855bf0 'unsigned __int128'
|-TypedefDecl 0x12400be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12400bc00 'struct __NSConstantString_tag'
|   `-Record 0x123856580 '__NSConstantString_tag'
|-TypedefDecl 0x12400be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x123855d90 '__SVInt8_t'
|-TypedefDecl 0x12400bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x123855db0 '__SVInt16_t'
|-TypedefDecl 0x12400bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x123855dd0 '__SVInt32_t'
|-TypedefDecl 0x12400bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x123855df0 '__SVInt64_t'
|-TypedefDecl 0x12400c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x123855e10 '__SVUint8_t'
|-TypedefDecl 0x12400c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x123855e30 '__SVUint16_t'
|-TypedefDecl 0x12400c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x123855e50 '__SVUint32_t'
|-TypedefDecl 0x12400c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x123855e70 '__SVUint64_t'
|-TypedefDecl 0x12400c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x123855e90 '__SVFloat16_t'
|-TypedefDecl 0x12400c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x123855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12400c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x123855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12400c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x123855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12400c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x123855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12400c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x123855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12400c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x123855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12400c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x123855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12400c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x123855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12400c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x123855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12400c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x123855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12400c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x123855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12400c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x123856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12400c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x123856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12400c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x123856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12400c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x123856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12400c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x123856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12400c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1238560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12400c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1238560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12400c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1238560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12400c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x123856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12400ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x123856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12400cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x123856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12400cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x123856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12400cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x123856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12400d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1238561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12400d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1238561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12400d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1238561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12400d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x123856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12400d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x123856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12400d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x123856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12400d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x123856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12400d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x123856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12400d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1238562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12400d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1238562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12400d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1238562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12400d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x123856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12400d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x123856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12400d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x123856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12400d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x123856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12400da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x123856390 '__SVBool_t'
|-TypedefDecl 0x12400da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1238563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12400dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1238563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12400db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1238563f0 '__SVCount_t'
|-TypedefDecl 0x12400dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12400dbb0 'char *'
|   `-BuiltinType 0x1238556b0 'char'
|-TypedefDecl 0x12400dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12400dbb0 'char *'
|   `-BuiltinType 0x1238556b0 'char'
|-FunctionDecl 0x1240276a8 <dataset_diviso_filec/func24765_vuln.c:1:1, line:75:1> line:1:16 invalid usbip_sockfd_store 'int (struct device *, struct device_attribute *, const char *, int)' static
| |-ParmVarDecl 0x12400e268 <col:35, col:50> col:50 used dev 'struct device *'
| |-ParmVarDecl 0x124027458 <col:55, col:80> col:80 attr 'struct device_attribute *'
| |-ParmVarDecl 0x1240274d8 <line:2:8, col:20> col:20 used buf 'const char *'
| |-ParmVarDecl 0x124027558 <col:25, col:32> col:32 invalid count 'int'
| `-CompoundStmt 0x124028950 <line:3:1, line:75:1>
|   |-DeclStmt 0x124027b98 <line:4:2, col:49>
|   | |-RecordDecl 0x124027770 <col:2, col:9> col:9 struct stub_device
|   | `-VarDecl 0x1240278d8 <col:2, col:48> col:22 used sdev 'struct stub_device *' cinit
|   |   `-ImplicitCastExpr 0x124027b68 <col:29, col:48> 'struct stub_device *' <IntegralToPointer>
|   |     `-CallExpr 0x124027b28 <col:29, col:48> 'int'
|   |       |-ImplicitCastExpr 0x124027b10 <col:29> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x124027aa0 <col:29> 'int ()' Function 0x1240279e8 'dev_get_drvdata' 'int ()'
|   |       `-ImplicitCastExpr 0x124027b50 <col:45> 'struct device *' <LValueToRValue>
|   |         `-DeclRefExpr 0x124027ac0 <col:45> 'struct device *' lvalue ParmVar 0x12400e268 'dev' 'struct device *'
|   |-DeclStmt 0x124027c50 <line:5:2, col:16>
|   | `-VarDecl 0x124027bc8 <col:2, col:15> col:6 used sockfd 'int' cinit
|   |   `-IntegerLiteral 0x124027c30 <col:15> 'int' 0
|   |-DeclStmt 0x124027e58 <line:6:2, col:23>
|   | |-RecordDecl 0x124027c68 <col:2, col:9> col:9 struct socket
|   | `-VarDecl 0x124027dd8 <col:2, col:17> col:17 used socket 'struct socket *'
|   |-DeclStmt 0x124027ef0 <line:7:2, col:8>
|   | `-VarDecl 0x124027e88 <col:2, col:6> col:6 used rv 'int'
|   |-IfStmt 0x124028220 <line:9:2, line:12:2>
|   | |-UnaryOperator 0x124027f40 <line:9:6, col:7> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x124027f28 <col:7> 'struct stub_device *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x124027f08 <col:7> 'struct stub_device *' lvalue Var 0x1240278d8 'sdev' 'struct stub_device *'
|   | `-CompoundStmt 0x124028200 <col:13, line:12:2>
|   |   |-CallExpr 0x1240280f8 <line:10:3, col:21> 'int'
|   |   | |-ImplicitCastExpr 0x1240280e0 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x124028038 <col:3> 'int ()' Function 0x124027f80 'dev_err' 'int ()'
|   |   | |-ImplicitCastExpr 0x124028128 <col:11> 'struct device *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x124028058 <col:11> 'struct device *' lvalue ParmVar 0x12400e268 'dev' 'struct device *'
|   |   | `-ImplicitCastExpr 0x124028140 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |   `-StringLiteral 0x1240280c0 <col:16> 'char[4]' lvalue "STR"
|   |   `-ReturnStmt 0x1240281f0 <line:11:3, col:11>
|   |     `-UnaryOperator 0x1240281d8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |       `-ImplicitCastExpr 0x1240281c0 <col:11> '<dependent type>' contains-errors <LValueToRValue>
|   |         `-RecoveryExpr 0x1240281a0 <col:11> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x123927718 <line:14:2, col:33> 'int' '='
|   | |-DeclRefExpr 0x124028240 <col:2> 'int' lvalue Var 0x124027e88 'rv' 'int'
|   | `-CallExpr 0x123927698 <col:7, col:33> 'int'
|   |   |-ImplicitCastExpr 0x123927680 <col:7> 'int (*)(const char *restrict, const char *restrict, ...)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x123927518 <col:7> 'int (const char *restrict, const char *restrict, ...)' Function 0x1240282f8 'sscanf' 'int (const char *restrict, const char *restrict, ...)'
|   |   |-ImplicitCastExpr 0x1239276d0 <col:14> 'const char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x123927538 <col:14> 'const char *' lvalue ParmVar 0x1240274d8 'buf' 'const char *'
|   |   |-ImplicitCastExpr 0x123927700 <col:19> 'const char *' <NoOp>
|   |   | `-ImplicitCastExpr 0x1239276e8 <col:19> 'char *' <ArrayToPointerDecay>
|   |   |   `-StringLiteral 0x123927558 <col:19> 'char[4]' lvalue "STR"
|   |   `-UnaryOperator 0x1239275d0 <col:26, col:27> 'int *' prefix '&' cannot overflow
|   |     `-DeclRefExpr 0x123927578 <col:27> 'int' lvalue Var 0x124027bc8 'sockfd' 'int'
|   |-IfStmt 0x123927858 <line:15:2, line:16:11>
|   | |-BinaryOperator 0x123927790 <line:15:6, col:12> 'int' '!='
|   | | |-ImplicitCastExpr 0x123927778 <col:6> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x123927738 <col:6> 'int' lvalue Var 0x124027e88 'rv' 'int'
|   | | `-IntegerLiteral 0x123927758 <col:12> 'int' 1
|   | `-ReturnStmt 0x123927848 <line:16:3, col:11>
|   |   `-UnaryOperator 0x123927830 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |     `-ImplicitCastExpr 0x123927818 <col:11> '<dependent type>' contains-errors <LValueToRValue>
|   |       `-RecoveryExpr 0x1239277f8 <col:11> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x124028630 <line:18:2, line:66:2> has_else
|   | |-BinaryOperator 0x1239278e8 <line:18:6, col:17> 'int' '!='
|   | | |-ImplicitCastExpr 0x1239278d0 <col:6> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x123927878 <col:6> 'int' lvalue Var 0x124027bc8 'sockfd' 'int'
|   | | `-UnaryOperator 0x1239278b8 <col:16, col:17> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x123927898 <col:17> 'int' 1
|   | |-CompoundStmt 0x123929a10 <col:20, line:56:2>
|   | | |-DeclStmt 0x123927988 <line:19:3, col:10>
|   | | | `-VarDecl 0x123927920 <col:3, col:7> col:7 used err 'int'
|   | | |-CallExpr 0x123927af8 <line:21:3, col:22> 'int'
|   | | | |-ImplicitCastExpr 0x123927ae0 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x123927a80 <col:3> 'int ()' Function 0x1239279c8 'dev_info' 'int ()'
|   | | | |-ImplicitCastExpr 0x123927b28 <col:12> 'struct device *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x123927aa0 <col:12> 'struct device *' lvalue ParmVar 0x12400e268 'dev' 'struct device *'
|   | | | `-ImplicitCastExpr 0x123927b40 <col:17> 'char *' <ArrayToPointerDecay>
|   | | |   `-StringLiteral 0x123927ac0 <col:17> 'char[4]' lvalue "STR"
|   | | |-CallExpr 0x123927d18 <line:23:3, col:31> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x123927c38 <col:3> 'int ()' Function 0x123927b80 'spin_lock_irq' 'int ()'
|   | | | `-UnaryOperator 0x123927d00 <col:17, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | |   `-CXXDependentScopeMemberExpr 0x123927cb8 <col:18, col:27> '<dependent type>' contains-errors lvalue .lock
|   | | |     `-RecoveryExpr 0x123927c90 <col:18, col:24> '<dependent type>' contains-errors lvalue
|   | | |       `-DeclRefExpr 0x123927c58 <col:18> 'struct stub_device *' lvalue Var 0x1240278d8 'sdev' 'struct stub_device *'
|   | | |-IfStmt 0x123927fc0 <line:25:3, line:28:3>
|   | | | |-BinaryOperator 0x123927e40 <line:25:7, col:26> 'int' contains-errors '!='
|   | | | | |-CXXDependentScopeMemberExpr 0x123927da0 <col:7, col:16> '<dependent type>' contains-errors lvalue .status
|   | | | | | `-RecoveryExpr 0x123927d78 <col:7, col:13> '<dependent type>' contains-errors lvalue
|   | | | | |   `-DeclRefExpr 0x123927d40 <col:7> 'struct stub_device *' lvalue Var 0x1240278d8 'sdev' 'struct stub_device *'
|   | | | | `-RecoveryExpr 0x123927e20 <col:26> '<dependent type>' contains-errors lvalue
|   | | | `-CompoundStmt 0x123927fa0 <col:45, line:28:3>
|   | | |   |-CallExpr 0x123927ed8 <line:26:4, col:22> 'int'
|   | | |   | |-ImplicitCastExpr 0x123927ec0 <col:4> 'int (*)()' <FunctionToPointerDecay>
|   | | |   | | `-DeclRefExpr 0x123927e60 <col:4> 'int ()' Function 0x124027f80 'dev_err' 'int ()'
|   | | |   | |-ImplicitCastExpr 0x123927f08 <col:12> 'struct device *' <LValueToRValue>
|   | | |   | | `-DeclRefExpr 0x123927e80 <col:12> 'struct device *' lvalue ParmVar 0x12400e268 'dev' 'struct device *'
|   | | |   | `-ImplicitCastExpr 0x123927f20 <col:17> 'char *' <ArrayToPointerDecay>
|   | | |   |   `-StringLiteral 0x123927ea0 <col:17> 'char[4]' lvalue "STR"
|   | | |   `-GotoStmt 0x123927f88 <line:27:4, col:9> 'err' 0x123927f38
|   | | |-BinaryOperator 0x1239281d0 <line:30:3, col:38> 'struct socket *' '='
|   | | | |-DeclRefExpr 0x123927fe0 <col:3> 'struct socket *' lvalue Var 0x124027dd8 'socket' 'struct socket *'
|   | | | `-ImplicitCastExpr 0x1239281b8 <col:12, col:38> 'struct socket *' <IntegralToPointer>
|   | | |   `-CallExpr 0x123928170 <col:12, col:38> 'int'
|   | | |     |-ImplicitCastExpr 0x123928158 <col:12> 'int (*)()' <FunctionToPointerDecay>
|   | | |     | `-DeclRefExpr 0x1239280e0 <col:12> 'int ()' Function 0x123928028 'sockfd_lookup' 'int ()'
|   | | |     |-ImplicitCastExpr 0x1239281a0 <col:26> 'int' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x123928100 <col:26> 'int' lvalue Var 0x124027bc8 'sockfd' 'int'
|   | | |     `-UnaryOperator 0x123928140 <col:34, col:35> 'int *' prefix '&' cannot overflow
|   | | |       `-DeclRefExpr 0x123928120 <col:35> 'int' lvalue Var 0x123927920 'err' 'int'
|   | | |-IfStmt 0x123928350 <line:31:3, line:34:3>
|   | | | |-UnaryOperator 0x123928228 <line:31:7, col:8> 'int' prefix '!' cannot overflow
|   | | | | `-ImplicitCastExpr 0x123928210 <col:8> 'struct socket *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x1239281f0 <col:8> 'struct socket *' lvalue Var 0x124027dd8 'socket' 'struct socket *'
|   | | | `-CompoundStmt 0x123928330 <col:16, line:34:3>
|   | | |   |-CallExpr 0x1239282b8 <line:32:4, col:22> 'int'
|   | | |   | |-ImplicitCastExpr 0x1239282a0 <col:4> 'int (*)()' <FunctionToPointerDecay>
|   | | |   | | `-DeclRefExpr 0x123928240 <col:4> 'int ()' Function 0x124027f80 'dev_err' 'int ()'
|   | | |   | |-ImplicitCastExpr 0x1239282e8 <col:12> 'struct device *' <LValueToRValue>
|   | | |   | | `-DeclRefExpr 0x123928260 <col:12> 'struct device *' lvalue ParmVar 0x12400e268 'dev' 'struct device *'
|   | | |   | `-ImplicitCastExpr 0x123928300 <col:17> 'char *' <ArrayToPointerDecay>
|   | | |   |   `-StringLiteral 0x123928280 <col:17> 'char[4]' lvalue "STR"
|   | | |   `-GotoStmt 0x123928318 <line:33:4, col:9> 'err' 0x123927f38
|   | | |-IfStmt 0x123928fe0 <line:36:3, line:40:3>
|   | | | |-BinaryOperator 0x123928e40 <line:36:7, col:23> 'int' contains-errors '!='
|   | | | | |-RecoveryExpr 0x1239283a8 <col:7, col:15> '<dependent type>' contains-errors lvalue
|   | | | | | `-DeclRefExpr 0x123928370 <col:7> 'struct socket *' lvalue Var 0x124027dd8 'socket' 'struct socket *'
|   | | | | `-RecoveryExpr 0x123928e20 <col:23> '<dependent type>' contains-errors lvalue
|   | | | `-CompoundStmt 0x123928fc0 <col:36, line:40:3>
|   | | |   |-CallExpr 0x123928f20 <line:37:4, line:38:17> '<dependent type>' contains-errors
|   | | |   | |-DeclRefExpr 0x123928e60 <line:37:4> 'int ()' Function 0x124027f80 'dev_err' 'int ()'
|   | | |   | |-DeclRefExpr 0x123928e80 <col:12> 'struct device *' lvalue ParmVar 0x12400e268 'dev' 'struct device *'
|   | | |   | |-StringLiteral 0x123928ea0 <col:17> 'char[4]' lvalue "STR"
|   | | |   | `-RecoveryExpr 0x123928ef8 <line:38:5, col:13> '<dependent type>' contains-errors lvalue
|   | | |   |   `-DeclRefExpr 0x123928ec0 <col:5> 'struct socket *' lvalue Var 0x124027dd8 'socket' 'struct socket *'
|   | | |   `-GotoStmt 0x123928fa8 <line:39:4, col:9> 'sock_err' 0x123928f58
|   | | |-BinaryOperator 0x1239290c8 <line:42:3, col:25> '<dependent type>' contains-errors '='
|   | | | |-CXXDependentScopeMemberExpr 0x123929060 <col:3, col:12> '<dependent type>' contains-errors lvalue .tcp_socket
|   | | | | `-RecoveryExpr 0x123929038 <col:3, col:9> '<dependent type>' contains-errors lvalue
|   | | | |   `-DeclRefExpr 0x123929000 <col:3> 'struct stub_device *' lvalue Var 0x1240278d8 'sdev' 'struct stub_device *'
|   | | | `-DeclRefExpr 0x1239290a8 <col:25> 'struct socket *' lvalue Var 0x124027dd8 'socket' 'struct socket *'
|   | | |-BinaryOperator 0x1239291b0 <line:43:3, col:21> '<dependent type>' contains-errors '='
|   | | | |-CXXDependentScopeMemberExpr 0x123929148 <col:3, col:12> '<dependent type>' contains-errors lvalue .sockfd
|   | | | | `-RecoveryExpr 0x123929120 <col:3, col:9> '<dependent type>' contains-errors lvalue
|   | | | |   `-DeclRefExpr 0x1239290e8 <col:3> 'struct stub_device *' lvalue Var 0x1240278d8 'sdev' 'struct stub_device *'
|   | | | `-DeclRefExpr 0x123929190 <col:21> 'int' lvalue Var 0x124027bc8 'sockfd' 'int'
|   | | |-CallExpr 0x123929390 <line:45:3, col:33> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x1239292b0 <col:3> 'int ()' Function 0x1239291f8 'spin_unlock_irq' 'int ()'
|   | | | `-UnaryOperator 0x123929378 <col:19, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | |   `-CXXDependentScopeMemberExpr 0x123929330 <col:20, col:29> '<dependent type>' contains-errors lvalue .lock
|   | | |     `-RecoveryExpr 0x123929308 <col:20, col:26> '<dependent type>' contains-errors lvalue
|   | | |       `-DeclRefExpr 0x1239292d0 <col:20> 'struct stub_device *' lvalue Var 0x1240278d8 'sdev' 'struct stub_device *'
|   | | |-CallExpr 0x123929838 <line:52:3, col:31> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x123929758 <col:3> 'int ()' Function 0x123927b80 'spin_lock_irq' 'int ()'
|   | | | `-UnaryOperator 0x123929820 <col:17, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | |   `-CXXDependentScopeMemberExpr 0x1239297d8 <col:18, col:27> '<dependent type>' contains-errors lvalue .lock
|   | | |     `-RecoveryExpr 0x1239297b0 <col:18, col:24> '<dependent type>' contains-errors lvalue
|   | | |       `-DeclRefExpr 0x123929778 <col:18> 'struct stub_device *' lvalue Var 0x1240278d8 'sdev' 'struct stub_device *'
|   | | `-CallExpr 0x1239299e8 <line:54:3, col:33> '<dependent type>' contains-errors
|   | |   |-DeclRefExpr 0x123929908 <col:3> 'int ()' Function 0x1239291f8 'spin_unlock_irq' 'int ()'
|   | |   `-UnaryOperator 0x1239299d0 <col:19, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | |     `-CXXDependentScopeMemberExpr 0x123929988 <col:20, col:29> '<dependent type>' contains-errors lvalue .lock
|   | |       `-RecoveryExpr 0x123929960 <col:20, col:26> '<dependent type>' contains-errors lvalue
|   | |         `-DeclRefExpr 0x123929928 <col:20> 'struct stub_device *' lvalue Var 0x1240278d8 'sdev' 'struct stub_device *'
|   | `-CompoundStmt 0x124028600 <line:56:9, line:66:2>
|   |   |-CallExpr 0x123929af8 <line:57:3, col:22> 'int'
|   |   | |-ImplicitCastExpr 0x123929ae0 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x123929a80 <col:3> 'int ()' Function 0x1239279c8 'dev_info' 'int ()'
|   |   | |-ImplicitCastExpr 0x123929b28 <col:12> 'struct device *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x123929aa0 <col:12> 'struct device *' lvalue ParmVar 0x12400e268 'dev' 'struct device *'
|   |   | `-ImplicitCastExpr 0x123929b40 <col:17> 'char *' <ArrayToPointerDecay>
|   |   |   `-StringLiteral 0x123929ac0 <col:17> 'char[4]' lvalue "STR"
|   |   |-CallExpr 0x123929c38 <line:59:3, col:31> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x123929b58 <col:3> 'int ()' Function 0x123927b80 'spin_lock_irq' 'int ()'
|   |   | `-UnaryOperator 0x123929c20 <col:17, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   |   `-CXXDependentScopeMemberExpr 0x123929bd8 <col:18, col:27> '<dependent type>' contains-errors lvalue .lock
|   |   |     `-RecoveryExpr 0x123929bb0 <col:18, col:24> '<dependent type>' contains-errors lvalue
|   |   |       `-DeclRefExpr 0x123929b78 <col:18> 'struct stub_device *' lvalue Var 0x1240278d8 'sdev' 'struct stub_device *'
|   |   |-IfStmt 0x123929d40 <line:60:3, line:61:9>
|   |   | |-RecoveryExpr 0x123929d08 <line:60:7, col:26> '_Bool' contains-errors
|   |   | `-GotoStmt 0x123929d28 <line:61:4, col:9> 'err' 0x123927f38
|   |   `-CallExpr 0x124028460 <line:63:3, col:33> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x123929d60 <col:3> 'int ()' Function 0x1239291f8 'spin_unlock_irq' 'int ()'
|   |     `-UnaryOperator 0x124028448 <col:19, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |       `-CXXDependentScopeMemberExpr 0x124028400 <col:20, col:29> '<dependent type>' contains-errors lvalue .lock
|   |         `-RecoveryExpr 0x123929db8 <col:20, col:26> '<dependent type>' contains-errors lvalue
|   |           `-DeclRefExpr 0x123929d80 <col:20> 'struct stub_device *' lvalue Var 0x1240278d8 'sdev' 'struct stub_device *'
|   |-ReturnStmt 0x124028680 <line:68:2, col:9>
|   | `-RecoveryExpr 0x124028660 <col:9> '<dependent type>' contains-errors lvalue
|   |-LabelStmt 0x124028808 <line:70:1, line:71:19> 'sock_err'
|   | `-CallExpr 0x1240287c8 <col:2, col:19> 'int'
|   |   |-ImplicitCastExpr 0x1240287b0 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x124028770 <col:2> 'int ()' Function 0x1240286b8 'sockfd_put' 'int ()'
|   |   `-ImplicitCastExpr 0x1240287f0 <col:13> 'struct socket *' <LValueToRValue>
|   |     `-DeclRefExpr 0x124028790 <col:13> 'struct socket *' lvalue Var 0x124027dd8 'socket' 'struct socket *'
|   `-LabelStmt 0x124028930 <line:72:1, line:73:32> 'err'
|     `-CallExpr 0x124028908 <col:2, col:32> '<dependent type>' contains-errors
|       |-DeclRefExpr 0x124028828 <col:2> 'int ()' Function 0x1239291f8 'spin_unlock_irq' 'int ()'
|       `-UnaryOperator 0x1240288f0 <col:18, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow
|         `-CXXDependentScopeMemberExpr 0x1240288a8 <col:19, col:28> '<dependent type>' contains-errors lvalue .lock
|           `-RecoveryExpr 0x124028880 <col:19, col:25> '<dependent type>' contains-errors lvalue
|             `-DeclRefExpr 0x124028848 <col:19> 'struct stub_device *' lvalue Var 0x1240278d8 'sdev' 'struct stub_device *'
`-FunctionDecl 0x1240282f8 <line:14:7> col:7 implicit used sscanf 'int (const char *restrict, const char *restrict, ...)' extern
  |-ParmVarDecl 0x123927400 <<invalid sloc>> <invalid sloc> 'const char *restrict'
  |-ParmVarDecl 0x123927468 <<invalid sloc>> <invalid sloc> 'const char *restrict'
  |-BuiltinAttr 0x1240283a0 <<invalid sloc>> Implicit 913
  `-FormatAttr 0x1239274e0 <col:7> Implicit scanf 2 3
