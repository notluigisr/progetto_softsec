TranslationUnitDecl 0x138055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1380564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x138055bd0 '__int128'
|-TypedefDecl 0x138056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x138055bf0 'unsigned __int128'
|-TypedefDecl 0x138126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x138126000 'struct __NSConstantString_tag'
|   `-Record 0x138056580 '__NSConstantString_tag'
|-TypedefDecl 0x138126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x138055d90 '__SVInt8_t'
|-TypedefDecl 0x138126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x138055db0 '__SVInt16_t'
|-TypedefDecl 0x138126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x138055dd0 '__SVInt32_t'
|-TypedefDecl 0x1381263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x138055df0 '__SVInt64_t'
|-TypedefDecl 0x138126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x138055e10 '__SVUint8_t'
|-TypedefDecl 0x1381264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x138055e30 '__SVUint16_t'
|-TypedefDecl 0x138126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x138055e50 '__SVUint32_t'
|-TypedefDecl 0x138126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x138055e70 '__SVUint64_t'
|-TypedefDecl 0x1381265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x138055e90 '__SVFloat16_t'
|-TypedefDecl 0x138126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x138055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1381266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x138055ed0 '__SVFloat64_t'
|-TypedefDecl 0x138126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x138055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x138126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x138055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1381267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x138055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x138126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x138055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1381268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x138055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x138126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x138055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x138126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x138055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1381269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x138055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x138126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x138055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x138126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x138056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x138126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x138056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x138126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x138056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x138126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x138056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x138126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x138056090 '__clang_svint8x3_t'
|-TypedefDecl 0x138126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1380560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x138126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1380560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x138126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1380560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x138126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x138056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x138126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x138056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x138126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x138056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x138126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x138056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x138126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x138056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x138127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1380561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x138127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1380561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1381278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1380561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x138127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x138056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1381279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x138056230 '__clang_svint16x4_t'
|-TypedefDecl 0x138127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x138056250 '__clang_svint32x4_t'
|-TypedefDecl 0x138127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x138056270 '__clang_svint64x4_t'
|-TypedefDecl 0x138127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x138056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x138127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1380562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x138127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1380562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x138127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1380562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x138127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x138056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x138127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x138056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x138127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x138056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x138127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x138056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x138127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x138056390 '__SVBool_t'
|-TypedefDecl 0x138127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1380563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x138127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1380563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x138127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1380563f0 '__SVCount_t'
|-TypedefDecl 0x138127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x138127fb0 'char *'
|   `-BuiltinType 0x1380556b0 'char'
|-TypedefDecl 0x138128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x138127fb0 'char *'
|   `-BuiltinType 0x1380556b0 'char'
|-FunctionDecl 0x1300082d8 <dataset_diviso_filec/func22110_vuln.c:1:1, line:33:1> line:1:1 invalid verify_host_key 'int (char *, struct sockaddr *, int *)'
| |-ParmVarDecl 0x1381280d8 <col:17, col:23> col:23 used host 'char *'
| |-ParmVarDecl 0x1381286c8 <col:29, col:46> col:46 used hostaddr 'struct sockaddr *'
| |-ParmVarDecl 0x138128798 <col:56, col:61> col:61 invalid host_key 'int *'
| `-CompoundStmt 0x13000b610 <line:2:1, line:33:1>
|   |-DeclStmt 0x130008438 <line:3:2, col:15>
|   | `-VarDecl 0x1300083b0 <col:2, col:14> col:6 used flags 'int' cinit
|   |   `-IntegerLiteral 0x130008418 <col:14> 'int' 0
|   |-DeclStmt 0x1300084d0 <line:4:2, col:10>
|   | `-VarDecl 0x130008468 <col:2, col:8> col:8 used fp 'char *'
|   |-BinaryOperator 0x1300087a0 <line:6:2, col:55> 'char *' contains-errors '='
|   | |-DeclRefExpr 0x1300084e8 <col:2> 'char *' lvalue Var 0x130008468 'fp' 'char *'
|   | `-CallExpr 0x130008768 <col:7, col:55> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x130008660 <col:7> 'int ()' Function 0x1300085a8 'key_fingerprint' 'int ()'
|   |   |-RecoveryExpr 0x130008680 <col:23> '<dependent type>' contains-errors lvalue
|   |   |-RecoveryExpr 0x130008728 <col:33> '<dependent type>' contains-errors lvalue
|   |   `-RecoveryExpr 0x130008748 <col:45> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x130008a88 <line:7:2, col:37> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x1300088a0 <col:2> 'int ()' Function 0x1300087e8 'debug' 'int ()'
|   | |-StringLiteral 0x130008900 <col:8> 'char[4]' lvalue "STR"
|   | |-CallExpr 0x130008a40 <col:15, col:32> '<dependent type>' contains-errors
|   | | |-DeclRefExpr 0x130008a00 <col:15> 'int ()' Function 0x130008948 'key_type' 'int ()'
|   | | `-RecoveryExpr 0x130008a20 <col:24> '<dependent type>' contains-errors lvalue
|   | `-DeclRefExpr 0x130008a68 <col:35> 'char *' lvalue Var 0x130008468 'fp' 'char *'
|   |-CallExpr 0x130008d08 <line:8:2, col:9> 'void'
|   | |-ImplicitCastExpr 0x130008cf0 <col:2> 'void (*)(void *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x130008c68 <col:2> 'void (void *)' Function 0x130008af8 'free' 'void (void *)'
|   | `-ImplicitCastExpr 0x130008d48 <col:7> 'void *' <BitCast>
|   |   `-ImplicitCastExpr 0x130008d30 <col:7> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x130008c88 <col:7> 'char *' lvalue Var 0x130008468 'fp' 'char *'
|   `-IfStmt 0x13000b490 <line:11:2, line:28:2>
|     |-BinaryOperator 0x13000ac00 <line:11:6, line:12:63> 'int' contains-errors '&&'
|     | |-BinaryOperator 0x1300091e0 <line:11:6, col:40> 'int' contains-errors '&&'
|     | | |-UnaryOperator 0x130008ea8 <col:6, col:27> '<dependent type>' contains-errors prefix '!' cannot overflow
|     | | | `-CallExpr 0x130008e80 <col:7, col:27> '<dependent type>' contains-errors
|     | | |   |-DeclRefExpr 0x130008e40 <col:7> 'int ()' Function 0x130008d88 'key_is_cert' 'int ()'
|     | | |   `-RecoveryExpr 0x130008e60 <col:19> '<dependent type>' contains-errors lvalue
|     | | `-CXXDependentScopeMemberExpr 0x130009198 <col:32, col:40> '<dependent type>' contains-errors lvalue .verify_host_key_dns
|     | |   `-RecoveryExpr 0x130009178 <col:32> '<dependent type>' contains-errors lvalue
|     | `-BinaryOperator 0x130009138 <line:12:6, col:63> 'int' contains-errors '=='
|     |   |-CallExpr 0x1300090d8 <col:6, col:58> '<dependent type>' contains-errors
|     |   | |-DeclRefExpr 0x130009020 <col:6> 'int ()' Function 0x130008f68 'verify_host_key_dns' 'int ()'
|     |   | |-DeclRefExpr 0x130009040 <col:26> 'char *' lvalue ParmVar 0x1381280d8 'host' 'char *'
|     |   | |-DeclRefExpr 0x130009060 <col:32> 'struct sockaddr *' lvalue ParmVar 0x1381286c8 'hostaddr' 'struct sockaddr *'
|     |   | |-RecoveryExpr 0x130009080 <col:42> '<dependent type>' contains-errors lvalue
|     |   | `-UnaryOperator 0x1300090c0 <col:52, col:53> 'int *' prefix '&' cannot overflow
|     |   |   `-DeclRefExpr 0x1300090a0 <col:53> 'int' lvalue Var 0x1300083b0 'flags' 'int'
|     |   `-IntegerLiteral 0x130009118 <col:63> 'int' 0
|     `-CompoundStmt 0x13000b478 <col:66, line:28:2>
|       `-IfStmt 0x13000b458 <line:13:3, line:27:3>
|         |-BinaryOperator 0x13000ac98 <line:13:7, col:15> '<dependent type>' contains-errors '&'
|         | |-DeclRefExpr 0x13000ac20 <col:7> 'int' lvalue Var 0x1300083b0 'flags' 'int'
|         | `-RecoveryExpr 0x13000ac78 <col:15> '<dependent type>' contains-errors lvalue
|         `-CompoundStmt 0x13000b438 <col:33, line:27:3>
|           |-IfStmt 0x13000afc0 <line:15:4, line:18:12>
|           | |-BinaryOperator 0x13000af70 <line:15:8, line:17:16> 'int' contains-errors '&&'
|           | | |-BinaryOperator 0x13000af10 <line:15:8, line:16:16> 'int' contains-errors '&&'
|           | | | |-BinaryOperator 0x13000aeb0 <line:15:8, col:39> 'int' contains-errors '=='
|           | | | | |-CXXDependentScopeMemberExpr 0x13000ae68 <col:8, col:16> '<dependent type>' contains-errors lvalue .verify_host_key_dns
|           | | | | | `-RecoveryExpr 0x13000ae48 <col:8> '<dependent type>' contains-errors lvalue
|           | | | | `-IntegerLiteral 0x13000ad18 <col:39> 'int' 1
|           | | | `-BinaryOperator 0x13000aef0 <line:16:8, col:16> '<dependent type>' contains-errors '&'
|           | | |   |-DeclRefExpr 0x13000ad58 <col:8> 'int' lvalue Var 0x1300083b0 'flags' 'int'
|           | | |   `-RecoveryExpr 0x13000aed0 <col:16> '<dependent type>' contains-errors lvalue
|           | | `-BinaryOperator 0x13000af50 <line:17:8, col:16> '<dependent type>' contains-errors '&'
|           | |   |-DeclRefExpr 0x13000add0 <col:8> 'int' lvalue Var 0x1300083b0 'flags' 'int'
|           | |   `-RecoveryExpr 0x13000af30 <col:16> '<dependent type>' contains-errors lvalue
|           | `-ReturnStmt 0x13000afb0 <line:18:5, col:12>
|           |   `-IntegerLiteral 0x13000af90 <col:12> 'int' 0
|           `-IfStmt 0x13000b408 <line:20:4, line:26:4> has_else
|             |-BinaryOperator 0x13000b058 <line:20:8, col:16> '<dependent type>' contains-errors '&'
|             | |-DeclRefExpr 0x13000afe0 <col:8> 'int' lvalue Var 0x1300083b0 'flags' 'int'
|             | `-RecoveryExpr 0x13000b038 <col:16> '<dependent type>' contains-errors lvalue
|             |-CompoundStmt 0x13000b098 <col:34, line:22:4>
|             `-CompoundStmt 0x13000b3e8 <col:11, line:26:4>
|               |-CallExpr 0x13000b1c8 <line:23:5, col:30> '<dependent type>' contains-errors
|               | |-DeclRefExpr 0x13000b188 <col:5> 'int ()' Function 0x13000b0d0 'warn_changed_key' 'int ()'
|               | `-RecoveryExpr 0x13000b1a8 <col:22> '<dependent type>' contains-errors lvalue
|               `-CallExpr 0x13000b3a8 <line:24:5, line:25:14> 'int'
|                 |-ImplicitCastExpr 0x13000b390 <line:24:5> 'int (*)()' <FunctionToPointerDecay>
|                 | `-DeclRefExpr 0x13000b2d0 <col:5> 'int ()' Function 0x13000b218 'error' 'int ()'
|                 `-ImplicitCastExpr 0x13000b3d0 <col:11, line:25:9> 'char *' <ArrayToPointerDecay>
|                   `-StringLiteral 0x13000b330 <line:24:11, line:25:9> 'char[7]' lvalue "STRSTR"
`-FunctionDecl 0x130008af8 <line:8:2> col:2 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x130008bf8 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x130008ba0 <<invalid sloc>> Implicit 873
