TranslationUnitDecl 0x132055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1320564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x132055bd0 '__int128'
|-TypedefDecl 0x132056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x132055bf0 'unsigned __int128'
|-TypedefDecl 0x132126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x132126000 'struct __NSConstantString_tag'
|   `-Record 0x132056580 '__NSConstantString_tag'
|-TypedefDecl 0x132126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x132055d90 '__SVInt8_t'
|-TypedefDecl 0x132126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x132055db0 '__SVInt16_t'
|-TypedefDecl 0x132126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x132055dd0 '__SVInt32_t'
|-TypedefDecl 0x1321263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x132055df0 '__SVInt64_t'
|-TypedefDecl 0x132126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x132055e10 '__SVUint8_t'
|-TypedefDecl 0x1321264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x132055e30 '__SVUint16_t'
|-TypedefDecl 0x132126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x132055e50 '__SVUint32_t'
|-TypedefDecl 0x132126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x132055e70 '__SVUint64_t'
|-TypedefDecl 0x1321265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x132055e90 '__SVFloat16_t'
|-TypedefDecl 0x132126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x132055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1321266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x132055ed0 '__SVFloat64_t'
|-TypedefDecl 0x132126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x132055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x132126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x132055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1321267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x132055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x132126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x132055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1321268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x132055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x132126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x132055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x132126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x132055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1321269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x132055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x132126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x132055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x132126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x132056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x132126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x132056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x132126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x132056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x132126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x132056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x132126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x132056090 '__clang_svint8x3_t'
|-TypedefDecl 0x132126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1320560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x132126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1320560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x132126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1320560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x132126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x132056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x132126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x132056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x132126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x132056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x132126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x132056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x132126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x132056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x132127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1320561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x132127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1320561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1321278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1320561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x132127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x132056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1321279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x132056230 '__clang_svint16x4_t'
|-TypedefDecl 0x132127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x132056250 '__clang_svint32x4_t'
|-TypedefDecl 0x132127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x132056270 '__clang_svint64x4_t'
|-TypedefDecl 0x132127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x132056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x132127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1320562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x132127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1320562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x132127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1320562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x132127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x132056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x132127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x132056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x132127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x132056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x132127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x132056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x132127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x132056390 '__SVBool_t'
|-TypedefDecl 0x132127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1320563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x132127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1320563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x132127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1320563f0 '__SVCount_t'
|-TypedefDecl 0x132127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x132127fb0 'char *'
|   `-BuiltinType 0x1320556b0 'char'
|-TypedefDecl 0x132128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x132127fb0 'char *'
|   `-BuiltinType 0x1320556b0 'char'
|-FunctionDecl 0x1321281f8 <dataset_diviso_filec/func2872_vuln.c:1:1, line:27:1> line:1:1 invalid id3_skip 'int (int *)'
| |-ParmVarDecl 0x132128128 <col:11, col:24> col:24 referenced invalid psf 'int *'
| `-CompoundStmt 0x132143500 <line:2:1, line:27:1>
|   |-DeclStmt 0x1321283c0 <line:2:3, col:26>
|   | `-VarDecl 0x132128358 <col:3, col:24> col:17 used buf 'unsigned char[10]'
|   |-CallExpr 0x132141c08 <line:4:2, col:30> 'void *'
|   | |-ImplicitCastExpr 0x132141bf0 <col:2> 'void *(*)(void *, int, unsigned long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x132141ab0 <col:2> 'void *(void *, int, unsigned long)' Function 0x132141860 'memset' 'void *(void *, int, unsigned long)'
|   | |-ImplicitCastExpr 0x132141c58 <col:10> 'void *' <BitCast>
|   | | `-ImplicitCastExpr 0x132141c40 <col:10> 'unsigned char *' <ArrayToPointerDecay>
|   | |   `-DeclRefExpr 0x132141ad0 <col:10> 'unsigned char[10]' lvalue Var 0x132128358 'buf' 'unsigned char[10]'
|   | |-IntegerLiteral 0x132141af0 <col:15> 'int' 0
|   | `-UnaryExprOrTypeTraitExpr 0x132141b50 <col:18, col:29> 'unsigned long' sizeof
|   |   `-ParenExpr 0x132141b30 <col:25, col:29> 'unsigned char[10]' lvalue
|   |     `-DeclRefExpr 0x132141b10 <col:26> 'unsigned char[10]' lvalue Var 0x132128358 'buf' 'unsigned char[10]' non_odr_use_unevaluated
|   |-CallExpr 0x132141ed0 <line:5:2, col:45> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x132141dd0 <col:2> 'int ()' Function 0x132141d18 'psf_binheader_readf' 'int ()'
|   | |-RecoveryExpr 0x132141df0 <col:23> '<dependent type>' contains-errors lvalue
|   | |-StringLiteral 0x132141e50 <col:28> 'char[4]' lvalue "STR"
|   | |-IntegerLiteral 0x132141e70 <col:35> 'int' 0
|   | |-DeclRefExpr 0x132141e90 <col:38> 'unsigned char[10]' lvalue Var 0x132128358 'buf' 'unsigned char[10]'
|   | `-IntegerLiteral 0x132141eb0 <col:43> 'int' 10
|   |-IfStmt 0x1321434a8 <line:7:2, line:24:3>
|   | |-BinaryOperator 0x1321421d8 <line:7:6, col:53> 'int' '&&'
|   | | |-BinaryOperator 0x1321420d8 <col:6, col:35> 'int' '&&'
|   | | | |-BinaryOperator 0x132141fd8 <col:6, col:17> 'int' '=='
|   | | | | |-ImplicitCastExpr 0x132141fc0 <col:6, col:12> 'int' <IntegralCast>
|   | | | | | `-ImplicitCastExpr 0x132141fa8 <col:6, col:12> 'unsigned char' <LValueToRValue>
|   | | | | |   `-ArraySubscriptExpr 0x132141f70 <col:6, col:12> 'unsigned char' lvalue
|   | | | | |     |-ImplicitCastExpr 0x132141f58 <col:6> 'unsigned char *' <ArrayToPointerDecay>
|   | | | | |     | `-DeclRefExpr 0x132141f18 <col:6> 'unsigned char[10]' lvalue Var 0x132128358 'buf' 'unsigned char[10]'
|   | | | | |     `-IntegerLiteral 0x132141f38 <col:11> 'int' 0
|   | | | | `-CharacterLiteral 0x132141f90 <col:17> 'int' 73
|   | | | `-BinaryOperator 0x1321420b8 <col:24, col:35> 'int' '=='
|   | | |   |-ImplicitCastExpr 0x1321420a0 <col:24, col:30> 'int' <IntegralCast>
|   | | |   | `-ImplicitCastExpr 0x132142088 <col:24, col:30> 'unsigned char' <LValueToRValue>
|   | | |   |   `-ArraySubscriptExpr 0x132142050 <col:24, col:30> 'unsigned char' lvalue
|   | | |   |     |-ImplicitCastExpr 0x132142038 <col:24> 'unsigned char *' <ArrayToPointerDecay>
|   | | |   |     | `-DeclRefExpr 0x132141ff8 <col:24> 'unsigned char[10]' lvalue Var 0x132128358 'buf' 'unsigned char[10]'
|   | | |   |     `-IntegerLiteral 0x132142018 <col:29> 'int' 1
|   | | |   `-CharacterLiteral 0x132142070 <col:35> 'int' 68
|   | | `-BinaryOperator 0x1321421b8 <col:42, col:53> 'int' '=='
|   | |   |-ImplicitCastExpr 0x1321421a0 <col:42, col:48> 'int' <IntegralCast>
|   | |   | `-ImplicitCastExpr 0x132142188 <col:42, col:48> 'unsigned char' <LValueToRValue>
|   | |   |   `-ArraySubscriptExpr 0x132142150 <col:42, col:48> 'unsigned char' lvalue
|   | |   |     |-ImplicitCastExpr 0x132142138 <col:42> 'unsigned char *' <ArrayToPointerDecay>
|   | |   |     | `-DeclRefExpr 0x1321420f8 <col:42> 'unsigned char[10]' lvalue Var 0x132128358 'buf' 'unsigned char[10]'
|   | |   |     `-IntegerLiteral 0x132142118 <col:47> 'int' 2
|   | |   `-CharacterLiteral 0x132142170 <col:53> 'int' 51
|   | `-CompoundStmt 0x132143450 <line:8:2, line:24:3>
|   |   |-DeclStmt 0x132142360 <line:8:4, col:32>
|   |   | `-VarDecl 0x132142210 <col:4, col:27> col:8 used offset 'int' cinit
|   |   |   `-BinaryOperator 0x132142340 <col:17, col:27> 'int' '&'
|   |   |     |-ImplicitCastExpr 0x132142328 <col:17, col:23> 'int' <IntegralCast>
|   |   |     | `-ImplicitCastExpr 0x132142310 <col:17, col:23> 'unsigned char' <LValueToRValue>
|   |   |     |   `-ArraySubscriptExpr 0x1321422d0 <col:17, col:23> 'unsigned char' lvalue
|   |   |     |     |-ImplicitCastExpr 0x1321422b8 <col:17> 'unsigned char *' <ArrayToPointerDecay>
|   |   |     |     | `-DeclRefExpr 0x132142278 <col:17> 'unsigned char[10]' lvalue Var 0x132128358 'buf' 'unsigned char[10]'
|   |   |     |     `-IntegerLiteral 0x132142298 <col:22> 'int' 6
|   |   |     `-IntegerLiteral 0x1321422f0 <col:27> 'int' 127
|   |   |-BinaryOperator 0x132142558 <line:9:3, col:43> 'int' '='
|   |   | |-DeclRefExpr 0x132142378 <col:3> 'int' lvalue Var 0x132142210 'offset' 'int'
|   |   | `-BinaryOperator 0x132142538 <col:12, col:43> 'int' '|'
|   |   |   |-ParenExpr 0x132142410 <col:12, col:24> 'int'
|   |   |   | `-BinaryOperator 0x1321423f0 <col:13, col:23> 'int' '<<'
|   |   |   |   |-ImplicitCastExpr 0x1321423d8 <col:13> 'int' <LValueToRValue>
|   |   |   |   | `-DeclRefExpr 0x132142398 <col:13> 'int' lvalue Var 0x132142210 'offset' 'int'
|   |   |   |   `-IntegerLiteral 0x1321423b8 <col:23> 'int' 7
|   |   |   `-ParenExpr 0x132142518 <col:28, col:43> 'int'
|   |   |     `-BinaryOperator 0x1321424f8 <col:29, col:39> 'int' '&'
|   |   |       |-ImplicitCastExpr 0x1321424e0 <col:29, col:35> 'int' <IntegralCast>
|   |   |       | `-ImplicitCastExpr 0x1321424c8 <col:29, col:35> 'unsigned char' <LValueToRValue>
|   |   |       |   `-ArraySubscriptExpr 0x132142488 <col:29, col:35> 'unsigned char' lvalue
|   |   |       |     |-ImplicitCastExpr 0x132142470 <col:29> 'unsigned char *' <ArrayToPointerDecay>
|   |   |       |     | `-DeclRefExpr 0x132142430 <col:29> 'unsigned char[10]' lvalue Var 0x132128358 'buf' 'unsigned char[10]'
|   |   |       |     `-IntegerLiteral 0x132142450 <col:34> 'int' 7
|   |   |       `-IntegerLiteral 0x1321424a8 <col:39> 'int' 127
|   |   |-BinaryOperator 0x132142758 <line:10:3, col:43> 'int' '='
|   |   | |-DeclRefExpr 0x132142578 <col:3> 'int' lvalue Var 0x132142210 'offset' 'int'
|   |   | `-BinaryOperator 0x132142738 <col:12, col:43> 'int' '|'
|   |   |   |-ParenExpr 0x132142610 <col:12, col:24> 'int'
|   |   |   | `-BinaryOperator 0x1321425f0 <col:13, col:23> 'int' '<<'
|   |   |   |   |-ImplicitCastExpr 0x1321425d8 <col:13> 'int' <LValueToRValue>
|   |   |   |   | `-DeclRefExpr 0x132142598 <col:13> 'int' lvalue Var 0x132142210 'offset' 'int'
|   |   |   |   `-IntegerLiteral 0x1321425b8 <col:23> 'int' 7
|   |   |   `-ParenExpr 0x132142718 <col:28, col:43> 'int'
|   |   |     `-BinaryOperator 0x1321426f8 <col:29, col:39> 'int' '&'
|   |   |       |-ImplicitCastExpr 0x1321426e0 <col:29, col:35> 'int' <IntegralCast>
|   |   |       | `-ImplicitCastExpr 0x1321426c8 <col:29, col:35> 'unsigned char' <LValueToRValue>
|   |   |       |   `-ArraySubscriptExpr 0x132142688 <col:29, col:35> 'unsigned char' lvalue
|   |   |       |     |-ImplicitCastExpr 0x132142670 <col:29> 'unsigned char *' <ArrayToPointerDecay>
|   |   |       |     | `-DeclRefExpr 0x132142630 <col:29> 'unsigned char[10]' lvalue Var 0x132128358 'buf' 'unsigned char[10]'
|   |   |       |     `-IntegerLiteral 0x132142650 <col:34> 'int' 8
|   |   |       `-IntegerLiteral 0x1321426a8 <col:39> 'int' 127
|   |   |-BinaryOperator 0x132142f68 <line:11:3, col:43> 'int' '='
|   |   | |-DeclRefExpr 0x132142778 <col:3> 'int' lvalue Var 0x132142210 'offset' 'int'
|   |   | `-BinaryOperator 0x132142f48 <col:12, col:43> 'int' '|'
|   |   |   |-ParenExpr 0x132142e20 <col:12, col:24> 'int'
|   |   |   | `-BinaryOperator 0x132142e00 <col:13, col:23> 'int' '<<'
|   |   |   |   |-ImplicitCastExpr 0x1321427d8 <col:13> 'int' <LValueToRValue>
|   |   |   |   | `-DeclRefExpr 0x132142798 <col:13> 'int' lvalue Var 0x132142210 'offset' 'int'
|   |   |   |   `-IntegerLiteral 0x1321427b8 <col:23> 'int' 7
|   |   |   `-ParenExpr 0x132142f28 <col:28, col:43> 'int'
|   |   |     `-BinaryOperator 0x132142f08 <col:29, col:39> 'int' '&'
|   |   |       |-ImplicitCastExpr 0x132142ef0 <col:29, col:35> 'int' <IntegralCast>
|   |   |       | `-ImplicitCastExpr 0x132142ed8 <col:29, col:35> 'unsigned char' <LValueToRValue>
|   |   |       |   `-ArraySubscriptExpr 0x132142e98 <col:29, col:35> 'unsigned char' lvalue
|   |   |       |     |-ImplicitCastExpr 0x132142e80 <col:29> 'unsigned char *' <ArrayToPointerDecay>
|   |   |       |     | `-DeclRefExpr 0x132142e40 <col:29> 'unsigned char[10]' lvalue Var 0x132128358 'buf' 'unsigned char[10]'
|   |   |       |     `-IntegerLiteral 0x132142e60 <col:34> 'int' 9
|   |   |       `-IntegerLiteral 0x132142eb8 <col:39> 'int' 127
|   |   |-CallExpr 0x1321430e8 <line:13:3, col:37> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x132143068 <col:3> 'int ()' Function 0x132142fb0 'psf_log_printf' 'int ()'
|   |   | |-RecoveryExpr 0x132143088 <col:19> '<dependent type>' contains-errors lvalue
|   |   | |-StringLiteral 0x1321430a8 <col:24> 'char[4]' lvalue "STR"
|   |   | `-DeclRefExpr 0x1321430c8 <col:31> 'int' lvalue Var 0x132142210 'offset' 'int'
|   |   |-IfStmt 0x1321431c8 <line:16:3, line:17:11>
|   |   | |-BinaryOperator 0x132143178 <line:16:7, col:16> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x132143160 <col:7> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x132143120 <col:7> 'int' lvalue Var 0x132142210 'offset' 'int'
|   |   | | `-IntegerLiteral 0x132143140 <col:16> 'int' 0
|   |   | `-ReturnStmt 0x1321431b8 <line:17:4, col:11>
|   |   |   `-IntegerLiteral 0x132143198 <col:11> 'int' 0
|   |   |-CompoundAssignOperator 0x1321432f0 <line:20:3, col:31> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |   | |-CXXDependentScopeMemberExpr 0x132143230 <col:3, col:8> '<dependent type>' contains-errors lvalue ->fileoffset
|   |   | | `-RecoveryExpr 0x132143208 <col:3> '<dependent type>' contains-errors lvalue
|   |   | |   `-DeclRefExpr 0x1321431e8 <col:3> 'int *' lvalue ParmVar 0x132128128 'psf' 'int *'
|   |   | `-BinaryOperator 0x1321432d0 <col:22, col:31> 'int' '+'
|   |   |   |-ImplicitCastExpr 0x1321432b8 <col:22> 'int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x132143278 <col:22> 'int' lvalue Var 0x132142210 'offset' 'int'
|   |   |   `-IntegerLiteral 0x132143298 <col:31> 'int' 10
|   |   |-CallExpr 0x1321433e8 <line:21:3, col:51> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x132143320 <col:3> 'int ()' Function 0x132141d18 'psf_binheader_readf' 'int ()'
|   |   | |-RecoveryExpr 0x132143340 <col:24> '<dependent type>' contains-errors lvalue
|   |   | |-StringLiteral 0x132143360 <col:29> 'char[4]' lvalue "STR"
|   |   | `-CXXDependentScopeMemberExpr 0x1321433a0 <col:36, col:41> '<dependent type>' contains-errors lvalue ->fileoffset
|   |   |   `-RecoveryExpr 0x132143380 <col:36> '<dependent type>' contains-errors lvalue
|   |   `-ReturnStmt 0x132143440 <line:23:3, col:10>
|   |     `-IntegerLiteral 0x132143420 <col:10> 'int' 1
|   |-NullStmt 0x1321434c8 <line:24:5>
|   `-ReturnStmt 0x1321434f0 <line:26:2, col:9>
|     `-IntegerLiteral 0x1321434d0 <col:9> 'int' 0
`-FunctionDecl 0x132141860 <line:4:2> col:2 implicit used memset 'void *(void *, int, unsigned long)' extern
  |-ParmVarDecl 0x132141960 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x1321419c8 <<invalid sloc>> <invalid sloc> 'int'
  |-ParmVarDecl 0x132141a30 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x132141908 <<invalid sloc>> Implicit 900
