TranslationUnitDecl 0x11f03e208 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x11f03f0b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x11f03e7d0 '__int128'
|-TypedefDecl 0x11f03f128 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x11f03e7f0 'unsigned __int128'
|-TypedefDecl 0x11f10ee30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x11f10ec00 'struct __NSConstantString_tag'
|   `-Record 0x11f03f180 '__NSConstantString_tag'
|-TypedefDecl 0x11f10ee98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x11f03e990 '__SVInt8_t'
|-TypedefDecl 0x11f10ef00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x11f03e9b0 '__SVInt16_t'
|-TypedefDecl 0x11f10ef68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x11f03e9d0 '__SVInt32_t'
|-TypedefDecl 0x11f10efd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x11f03e9f0 '__SVInt64_t'
|-TypedefDecl 0x11f10f038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x11f03ea10 '__SVUint8_t'
|-TypedefDecl 0x11f10f0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x11f03ea30 '__SVUint16_t'
|-TypedefDecl 0x11f10f108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x11f03ea50 '__SVUint32_t'
|-TypedefDecl 0x11f10f170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x11f03ea70 '__SVUint64_t'
|-TypedefDecl 0x11f10f1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x11f03ea90 '__SVFloat16_t'
|-TypedefDecl 0x11f10f240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x11f03eab0 '__SVFloat32_t'
|-TypedefDecl 0x11f10f2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x11f03ead0 '__SVFloat64_t'
|-TypedefDecl 0x11f10f310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x11f03eaf0 '__SVBfloat16_t'
|-TypedefDecl 0x11f10f378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x11f03eb10 '__clang_svint8x2_t'
|-TypedefDecl 0x11f10f3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x11f03eb30 '__clang_svint16x2_t'
|-TypedefDecl 0x11f10f448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x11f03eb50 '__clang_svint32x2_t'
|-TypedefDecl 0x11f10f4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x11f03eb70 '__clang_svint64x2_t'
|-TypedefDecl 0x11f10f518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x11f03eb90 '__clang_svuint8x2_t'
|-TypedefDecl 0x11f10f580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x11f03ebb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x11f10f5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x11f03ebd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x11f10f650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x11f03ebf0 '__clang_svuint64x2_t'
|-TypedefDecl 0x11f10f6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x11f03ec10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x11f10f720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x11f03ec30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x11f10f788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x11f03ec50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x11f10f7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x11f03ec70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x11f10f858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x11f03ec90 '__clang_svint8x3_t'
|-TypedefDecl 0x11f10f8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x11f03ecb0 '__clang_svint16x3_t'
|-TypedefDecl 0x11f10f928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x11f03ecd0 '__clang_svint32x3_t'
|-TypedefDecl 0x11f10f990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x11f03ecf0 '__clang_svint64x3_t'
|-TypedefDecl 0x11f10f9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x11f03ed10 '__clang_svuint8x3_t'
|-TypedefDecl 0x11f10fa60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x11f03ed30 '__clang_svuint16x3_t'
|-TypedefDecl 0x11f10fac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x11f03ed50 '__clang_svuint32x3_t'
|-TypedefDecl 0x11f10fb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x11f03ed70 '__clang_svuint64x3_t'
|-TypedefDecl 0x11f10fb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x11f03ed90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x11f110400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x11f03edb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x11f110468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x11f03edd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x11f1104d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x11f03edf0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x11f110538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x11f03ee10 '__clang_svint8x4_t'
|-TypedefDecl 0x11f1105a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x11f03ee30 '__clang_svint16x4_t'
|-TypedefDecl 0x11f110608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x11f03ee50 '__clang_svint32x4_t'
|-TypedefDecl 0x11f110670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x11f03ee70 '__clang_svint64x4_t'
|-TypedefDecl 0x11f1106d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x11f03ee90 '__clang_svuint8x4_t'
|-TypedefDecl 0x11f110740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x11f03eeb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x11f1107a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x11f03eed0 '__clang_svuint32x4_t'
|-TypedefDecl 0x11f110810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x11f03eef0 '__clang_svuint64x4_t'
|-TypedefDecl 0x11f110878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x11f03ef10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x11f1108e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x11f03ef30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x11f110948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x11f03ef50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x11f1109b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x11f03ef70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x11f110a18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x11f03ef90 '__SVBool_t'
|-TypedefDecl 0x11f110a80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x11f03efb0 '__clang_svboolx2_t'
|-TypedefDecl 0x11f110ae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x11f03efd0 '__clang_svboolx4_t'
|-TypedefDecl 0x11f110b50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x11f03eff0 '__SVCount_t'
|-TypedefDecl 0x11f110bf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x11f110bb0 'char *'
|   `-BuiltinType 0x11f03e2b0 'char'
|-TypedefDecl 0x11f110c68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x11f110bb0 'char *'
|   `-BuiltinType 0x11f03e2b0 'char'
`-FunctionDecl 0x11f110e88 <dataset_diviso_filec/func8736_nonvuln.c:1:1, line:57:1> line:1:5 invalid read_header_tga 'int (int *, int *)'
  |-ParmVarDecl 0x11f110d28 <col:21, col:30> col:30 invalid ctx 'int *'
  |-ParmVarDecl 0x11f110da8 <col:35, col:41> col:41 referenced invalid tga 'int *'
  `-CompoundStmt 0x11f12da50 <line:2:1, line:57:1>
    |-DeclStmt 0x11f111050 <line:4:2, col:26>
    | `-VarDecl 0x11f110fe8 <col:2, col:25> col:16 used header 'unsigned char[18]'
    |-IfStmt 0x11f12ab50 <line:6:2, line:9:2>
    | |-BinaryOperator 0x11f1112d8 <line:6:6, col:46> 'int' contains-errors '<'
    | | |-CallExpr 0x11f111280 <col:6, col:42> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x11f1111c0 <col:6> 'int ()' Function 0x11f111108 'gdGetBuf' 'int ()'
    | | | |-DeclRefExpr 0x11f1111e0 <col:15> 'unsigned char[18]' lvalue Var 0x11f110fe8 'header' 'unsigned char[18]'
    | | | |-UnaryExprOrTypeTraitExpr 0x11f111240 <col:23, col:36> 'unsigned long' sizeof
    | | | | `-ParenExpr 0x11f111220 <col:29, col:36> 'unsigned char[18]' lvalue
    | | | |   `-DeclRefExpr 0x11f111200 <col:30> 'unsigned char[18]' lvalue Var 0x11f110fe8 'header' 'unsigned char[18]' non_odr_use_unevaluated
    | | | `-RecoveryExpr 0x11f111260 <col:39> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x11f1112b8 <col:46> 'int' 18
    | `-CompoundStmt 0x11f12ab30 <col:50, line:9:2>
    |   |-CallExpr 0x11f12aaa8 <line:7:3, col:17> 'int'
    |   | |-ImplicitCastExpr 0x11f12aa90 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x11f1113d8 <col:3> 'int ()' Function 0x11f111320 'gd_error' 'int ()'
    |   | `-ImplicitCastExpr 0x11f12aad0 <col:12> 'char *' <ArrayToPointerDecay>
    |   |   `-StringLiteral 0x11f12aa40 <col:12> 'char[4]' lvalue "STR"
    |   `-ReturnStmt 0x11f12ab20 <line:8:3, col:11>
    |     `-UnaryOperator 0x11f12ab08 <col:10, col:11> 'int' prefix '-'
    |       `-IntegerLiteral 0x11f12aae8 <col:11> 'int' 1
    |-BinaryOperator 0x11f12aca8 <line:11:2, col:27> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x11f12abb8 <col:2, col:7> '<dependent type>' contains-errors lvalue ->identsize
    | | `-RecoveryExpr 0x11f12ab90 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x11f12ab70 <col:2> 'int *' lvalue ParmVar 0x11f110da8 'tga' 'int *'
    | `-ArraySubscriptExpr 0x11f12ac88 <col:19, col:27> 'unsigned char' lvalue
    |   |-ImplicitCastExpr 0x11f12ac70 <col:19> 'unsigned char *' <ArrayToPointerDecay>
    |   | `-DeclRefExpr 0x11f12ac00 <col:19> 'unsigned char[18]' lvalue Var 0x11f110fe8 'header' 'unsigned char[18]'
    |   `-IntegerLiteral 0x11f12ac20 <col:26> 'int' 0
    |-BinaryOperator 0x11f12add0 <line:12:2, col:30> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x11f12ad10 <col:2, col:7> '<dependent type>' contains-errors lvalue ->colormaptype
    | | `-RecoveryExpr 0x11f12ace8 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x11f12acc8 <col:2> 'int *' lvalue ParmVar 0x11f110da8 'tga' 'int *'
    | `-ArraySubscriptExpr 0x11f12adb0 <col:22, col:30> 'unsigned char' lvalue
    |   |-ImplicitCastExpr 0x11f12ad98 <col:22> 'unsigned char *' <ArrayToPointerDecay>
    |   | `-DeclRefExpr 0x11f12ad58 <col:22> 'unsigned char[18]' lvalue Var 0x11f110fe8 'header' 'unsigned char[18]'
    |   `-IntegerLiteral 0x11f12ad78 <col:29> 'int' 1
    |-BinaryOperator 0x11f12aef8 <line:13:2, col:27> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x11f12ae38 <col:2, col:7> '<dependent type>' contains-errors lvalue ->imagetype
    | | `-RecoveryExpr 0x11f12ae10 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x11f12adf0 <col:2> 'int *' lvalue ParmVar 0x11f110da8 'tga' 'int *'
    | `-ArraySubscriptExpr 0x11f12aed8 <col:19, col:27> 'unsigned char' lvalue
    |   |-ImplicitCastExpr 0x11f12aec0 <col:19> 'unsigned char *' <ArrayToPointerDecay>
    |   | `-DeclRefExpr 0x11f12ae80 <col:19> 'unsigned char[18]' lvalue Var 0x11f110fe8 'header' 'unsigned char[18]'
    |   `-IntegerLiteral 0x11f12aea0 <col:26> 'int' 2
    |-BinaryOperator 0x11f12b178 <line:14:2, col:50> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x11f12af60 <col:2, col:7> '<dependent type>' contains-errors lvalue ->colormapstart
    | | `-RecoveryExpr 0x11f12af38 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x11f12af18 <col:2> 'int *' lvalue ParmVar 0x11f110da8 'tga' 'int *'
    | `-BinaryOperator 0x11f12b158 <col:23, col:50> 'int' '+'
    |   |-ImplicitCastExpr 0x11f12b140 <col:23, col:31> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x11f12b128 <col:23, col:31> 'unsigned char' <LValueToRValue>
    |   |   `-ArraySubscriptExpr 0x11f12b000 <col:23, col:31> 'unsigned char' lvalue
    |   |     |-ImplicitCastExpr 0x11f12afe8 <col:23> 'unsigned char *' <ArrayToPointerDecay>
    |   |     | `-DeclRefExpr 0x11f12afa8 <col:23> 'unsigned char[18]' lvalue Var 0x11f110fe8 'header' 'unsigned char[18]'
    |   |     `-IntegerLiteral 0x11f12afc8 <col:30> 'int' 3
    |   `-ParenExpr 0x11f12b108 <col:35, col:50> 'int'
    |     `-BinaryOperator 0x11f12b0e8 <col:36, col:49> 'int' '<<'
    |       |-ImplicitCastExpr 0x11f12b0d0 <col:36, col:44> 'int' <IntegralCast>
    |       | `-ImplicitCastExpr 0x11f12b0b8 <col:36, col:44> 'unsigned char' <LValueToRValue>
    |       |   `-ArraySubscriptExpr 0x11f12b078 <col:36, col:44> 'unsigned char' lvalue
    |       |     |-ImplicitCastExpr 0x11f12b060 <col:36> 'unsigned char *' <ArrayToPointerDecay>
    |       |     | `-DeclRefExpr 0x11f12b020 <col:36> 'unsigned char[18]' lvalue Var 0x11f110fe8 'header' 'unsigned char[18]'
    |       |     `-IntegerLiteral 0x11f12b040 <col:43> 'int' 4
    |       `-IntegerLiteral 0x11f12b098 <col:49> 'int' 8
    |-BinaryOperator 0x11f12b3f8 <line:15:2, col:51> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x11f12b1e0 <col:2, col:7> '<dependent type>' contains-errors lvalue ->colormaplength
    | | `-RecoveryExpr 0x11f12b1b8 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x11f12b198 <col:2> 'int *' lvalue ParmVar 0x11f110da8 'tga' 'int *'
    | `-BinaryOperator 0x11f12b3d8 <col:24, col:51> 'int' '+'
    |   |-ImplicitCastExpr 0x11f12b3c0 <col:24, col:32> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x11f12b3a8 <col:24, col:32> 'unsigned char' <LValueToRValue>
    |   |   `-ArraySubscriptExpr 0x11f12b280 <col:24, col:32> 'unsigned char' lvalue
    |   |     |-ImplicitCastExpr 0x11f12b268 <col:24> 'unsigned char *' <ArrayToPointerDecay>
    |   |     | `-DeclRefExpr 0x11f12b228 <col:24> 'unsigned char[18]' lvalue Var 0x11f110fe8 'header' 'unsigned char[18]'
    |   |     `-IntegerLiteral 0x11f12b248 <col:31> 'int' 5
    |   `-ParenExpr 0x11f12b388 <col:36, col:51> 'int'
    |     `-BinaryOperator 0x11f12b368 <col:37, col:50> 'int' '<<'
    |       |-ImplicitCastExpr 0x11f12b350 <col:37, col:45> 'int' <IntegralCast>
    |       | `-ImplicitCastExpr 0x11f12b338 <col:37, col:45> 'unsigned char' <LValueToRValue>
    |       |   `-ArraySubscriptExpr 0x11f12b2f8 <col:37, col:45> 'unsigned char' lvalue
    |       |     |-ImplicitCastExpr 0x11f12b2e0 <col:37> 'unsigned char *' <ArrayToPointerDecay>
    |       |     | `-DeclRefExpr 0x11f12b2a0 <col:37> 'unsigned char[18]' lvalue Var 0x11f110fe8 'header' 'unsigned char[18]'
    |       |     `-IntegerLiteral 0x11f12b2c0 <col:44> 'int' 6
    |       `-IntegerLiteral 0x11f12b318 <col:50> 'int' 8
    |-BinaryOperator 0x11f12b520 <line:16:2, col:30> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x11f12b460 <col:2, col:7> '<dependent type>' contains-errors lvalue ->colormapbits
    | | `-RecoveryExpr 0x11f12b438 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x11f12b418 <col:2> 'int *' lvalue ParmVar 0x11f110da8 'tga' 'int *'
    | `-ArraySubscriptExpr 0x11f12b500 <col:22, col:30> 'unsigned char' lvalue
    |   |-ImplicitCastExpr 0x11f12b4e8 <col:22> 'unsigned char *' <ArrayToPointerDecay>
    |   | `-DeclRefExpr 0x11f12b4a8 <col:22> 'unsigned char[18]' lvalue Var 0x11f110fe8 'header' 'unsigned char[18]'
    |   `-IntegerLiteral 0x11f12b4c8 <col:29> 'int' 7
    |-BinaryOperator 0x11f12b7a0 <line:17:2, col:43> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x11f12b588 <col:2, col:7> '<dependent type>' contains-errors lvalue ->xstart
    | | `-RecoveryExpr 0x11f12b560 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x11f12b540 <col:2> 'int *' lvalue ParmVar 0x11f110da8 'tga' 'int *'
    | `-BinaryOperator 0x11f12b780 <col:16, col:43> 'int' '+'
    |   |-ImplicitCastExpr 0x11f12b768 <col:16, col:24> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x11f12b750 <col:16, col:24> 'unsigned char' <LValueToRValue>
    |   |   `-ArraySubscriptExpr 0x11f12b628 <col:16, col:24> 'unsigned char' lvalue
    |   |     |-ImplicitCastExpr 0x11f12b610 <col:16> 'unsigned char *' <ArrayToPointerDecay>
    |   |     | `-DeclRefExpr 0x11f12b5d0 <col:16> 'unsigned char[18]' lvalue Var 0x11f110fe8 'header' 'unsigned char[18]'
    |   |     `-IntegerLiteral 0x11f12b5f0 <col:23> 'int' 8
    |   `-ParenExpr 0x11f12b730 <col:28, col:43> 'int'
    |     `-BinaryOperator 0x11f12b710 <col:29, col:42> 'int' '<<'
    |       |-ImplicitCastExpr 0x11f12b6f8 <col:29, col:37> 'int' <IntegralCast>
    |       | `-ImplicitCastExpr 0x11f12b6e0 <col:29, col:37> 'unsigned char' <LValueToRValue>
    |       |   `-ArraySubscriptExpr 0x11f12b6a0 <col:29, col:37> 'unsigned char' lvalue
    |       |     |-ImplicitCastExpr 0x11f12b688 <col:29> 'unsigned char *' <ArrayToPointerDecay>
    |       |     | `-DeclRefExpr 0x11f12b648 <col:29> 'unsigned char[18]' lvalue Var 0x11f110fe8 'header' 'unsigned char[18]'
    |       |     `-IntegerLiteral 0x11f12b668 <col:36> 'int' 9
    |       `-IntegerLiteral 0x11f12b6c0 <col:42> 'int' 8
    |-BinaryOperator 0x11f12ba20 <line:18:2, col:45> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x11f12b808 <col:2, col:7> '<dependent type>' contains-errors lvalue ->ystart
    | | `-RecoveryExpr 0x11f12b7e0 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x11f12b7c0 <col:2> 'int *' lvalue ParmVar 0x11f110da8 'tga' 'int *'
    | `-BinaryOperator 0x11f12ba00 <col:16, col:45> 'int' '+'
    |   |-ImplicitCastExpr 0x11f12b9e8 <col:16, col:25> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x11f12b9d0 <col:16, col:25> 'unsigned char' <LValueToRValue>
    |   |   `-ArraySubscriptExpr 0x11f12b8a8 <col:16, col:25> 'unsigned char' lvalue
    |   |     |-ImplicitCastExpr 0x11f12b890 <col:16> 'unsigned char *' <ArrayToPointerDecay>
    |   |     | `-DeclRefExpr 0x11f12b850 <col:16> 'unsigned char[18]' lvalue Var 0x11f110fe8 'header' 'unsigned char[18]'
    |   |     `-IntegerLiteral 0x11f12b870 <col:23> 'int' 10
    |   `-ParenExpr 0x11f12b9b0 <col:29, col:45> 'int'
    |     `-BinaryOperator 0x11f12b990 <col:30, col:44> 'int' '<<'
    |       |-ImplicitCastExpr 0x11f12b978 <col:30, col:39> 'int' <IntegralCast>
    |       | `-ImplicitCastExpr 0x11f12b960 <col:30, col:39> 'unsigned char' <LValueToRValue>
    |       |   `-ArraySubscriptExpr 0x11f12b920 <col:30, col:39> 'unsigned char' lvalue
    |       |     |-ImplicitCastExpr 0x11f12b908 <col:30> 'unsigned char *' <ArrayToPointerDecay>
    |       |     | `-DeclRefExpr 0x11f12b8c8 <col:30> 'unsigned char[18]' lvalue Var 0x11f110fe8 'header' 'unsigned char[18]'
    |       |     `-IntegerLiteral 0x11f12b8e8 <col:37> 'int' 11
    |       `-IntegerLiteral 0x11f12b940 <col:44> 'int' 8
    |-BinaryOperator 0x11f12bca0 <line:19:2, col:44> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x11f12ba88 <col:2, col:7> '<dependent type>' contains-errors lvalue ->width
    | | `-RecoveryExpr 0x11f12ba60 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x11f12ba40 <col:2> 'int *' lvalue ParmVar 0x11f110da8 'tga' 'int *'
    | `-BinaryOperator 0x11f12bc80 <col:15, col:44> 'int' '+'
    |   |-ImplicitCastExpr 0x11f12bc68 <col:15, col:24> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x11f12bc50 <col:15, col:24> 'unsigned char' <LValueToRValue>
    |   |   `-ArraySubscriptExpr 0x11f12bb28 <col:15, col:24> 'unsigned char' lvalue
    |   |     |-ImplicitCastExpr 0x11f12bb10 <col:15> 'unsigned char *' <ArrayToPointerDecay>
    |   |     | `-DeclRefExpr 0x11f12bad0 <col:15> 'unsigned char[18]' lvalue Var 0x11f110fe8 'header' 'unsigned char[18]'
    |   |     `-IntegerLiteral 0x11f12baf0 <col:22> 'int' 12
    |   `-ParenExpr 0x11f12bc30 <col:28, col:44> 'int'
    |     `-BinaryOperator 0x11f12bc10 <col:29, col:43> 'int' '<<'
    |       |-ImplicitCastExpr 0x11f12bbf8 <col:29, col:38> 'int' <IntegralCast>
    |       | `-ImplicitCastExpr 0x11f12bbe0 <col:29, col:38> 'unsigned char' <LValueToRValue>
    |       |   `-ArraySubscriptExpr 0x11f12bba0 <col:29, col:38> 'unsigned char' lvalue
    |       |     |-ImplicitCastExpr 0x11f12bb88 <col:29> 'unsigned char *' <ArrayToPointerDecay>
    |       |     | `-DeclRefExpr 0x11f12bb48 <col:29> 'unsigned char[18]' lvalue Var 0x11f110fe8 'header' 'unsigned char[18]'
    |       |     `-IntegerLiteral 0x11f12bb68 <col:36> 'int' 13
    |       `-IntegerLiteral 0x11f12bbc0 <col:43> 'int' 8
    |-BinaryOperator 0x11f12bf20 <line:20:2, col:45> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x11f12bd08 <col:2, col:7> '<dependent type>' contains-errors lvalue ->height
    | | `-RecoveryExpr 0x11f12bce0 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x11f12bcc0 <col:2> 'int *' lvalue ParmVar 0x11f110da8 'tga' 'int *'
    | `-BinaryOperator 0x11f12bf00 <col:16, col:45> 'int' '+'
    |   |-ImplicitCastExpr 0x11f12bee8 <col:16, col:25> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x11f12bed0 <col:16, col:25> 'unsigned char' <LValueToRValue>
    |   |   `-ArraySubscriptExpr 0x11f12bda8 <col:16, col:25> 'unsigned char' lvalue
    |   |     |-ImplicitCastExpr 0x11f12bd90 <col:16> 'unsigned char *' <ArrayToPointerDecay>
    |   |     | `-DeclRefExpr 0x11f12bd50 <col:16> 'unsigned char[18]' lvalue Var 0x11f110fe8 'header' 'unsigned char[18]'
    |   |     `-IntegerLiteral 0x11f12bd70 <col:23> 'int' 14
    |   `-ParenExpr 0x11f12beb0 <col:29, col:45> 'int'
    |     `-BinaryOperator 0x11f12be90 <col:30, col:44> 'int' '<<'
    |       |-ImplicitCastExpr 0x11f12be78 <col:30, col:39> 'int' <IntegralCast>
    |       | `-ImplicitCastExpr 0x11f12be60 <col:30, col:39> 'unsigned char' <LValueToRValue>
    |       |   `-ArraySubscriptExpr 0x11f12be20 <col:30, col:39> 'unsigned char' lvalue
    |       |     |-ImplicitCastExpr 0x11f12be08 <col:30> 'unsigned char *' <ArrayToPointerDecay>
    |       |     | `-DeclRefExpr 0x11f12bdc8 <col:30> 'unsigned char[18]' lvalue Var 0x11f110fe8 'header' 'unsigned char[18]'
    |       |     `-IntegerLiteral 0x11f12bde8 <col:37> 'int' 15
    |       `-IntegerLiteral 0x11f12be40 <col:44> 'int' 8
    |-BinaryOperator 0x11f12c048 <line:21:2, col:23> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x11f12bf88 <col:2, col:7> '<dependent type>' contains-errors lvalue ->bits
    | | `-RecoveryExpr 0x11f12bf60 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x11f12bf40 <col:2> 'int *' lvalue ParmVar 0x11f110da8 'tga' 'int *'
    | `-ArraySubscriptExpr 0x11f12c028 <col:14, col:23> 'unsigned char' lvalue
    |   |-ImplicitCastExpr 0x11f12c010 <col:14> 'unsigned char *' <ArrayToPointerDecay>
    |   | `-DeclRefExpr 0x11f12bfd0 <col:14> 'unsigned char[18]' lvalue Var 0x11f110fe8 'header' 'unsigned char[18]'
    |   `-IntegerLiteral 0x11f12bff0 <col:21> 'int' 16
    |-BinaryOperator 0x11f12c1e0 <line:22:2, col:32> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x11f12c0b0 <col:2, col:7> '<dependent type>' contains-errors lvalue ->alphabits
    | | `-RecoveryExpr 0x11f12c088 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x11f12c068 <col:2> 'int *' lvalue ParmVar 0x11f110da8 'tga' 'int *'
    | `-BinaryOperator 0x11f12c1c0 <col:19, col:32> 'int' '&'
    |   |-ImplicitCastExpr 0x11f12c1a8 <col:19, col:28> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x11f12c190 <col:19, col:28> 'unsigned char' <LValueToRValue>
    |   |   `-ArraySubscriptExpr 0x11f12c150 <col:19, col:28> 'unsigned char' lvalue
    |   |     |-ImplicitCastExpr 0x11f12c138 <col:19> 'unsigned char *' <ArrayToPointerDecay>
    |   |     | `-DeclRefExpr 0x11f12c0f8 <col:19> 'unsigned char[18]' lvalue Var 0x11f110fe8 'header' 'unsigned char[18]'
    |   |     `-IntegerLiteral 0x11f12c118 <col:26> 'int' 17
    |   `-IntegerLiteral 0x11f12c170 <col:32> 'int' 15
    |-BinaryOperator 0x11f12c408 <line:23:2, col:41> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x11f12c248 <col:2, col:7> '<dependent type>' contains-errors lvalue ->fliph
    | | `-RecoveryExpr 0x11f12c220 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x11f12c200 <col:2> 'int *' lvalue ParmVar 0x11f110da8 'tga' 'int *'
    | `-ConditionalOperator 0x11f12c3d8 <col:15, col:41> 'int'
    |   |-ParenExpr 0x11f12c378 <col:15, col:33> 'int'
    |   | `-BinaryOperator 0x11f12c358 <col:16, col:29> 'int' '&'
    |   |   |-ImplicitCastExpr 0x11f12c340 <col:16, col:25> 'int' <IntegralCast>
    |   |   | `-ImplicitCastExpr 0x11f12c328 <col:16, col:25> 'unsigned char' <LValueToRValue>
    |   |   |   `-ArraySubscriptExpr 0x11f12c2e8 <col:16, col:25> 'unsigned char' lvalue
    |   |   |     |-ImplicitCastExpr 0x11f12c2d0 <col:16> 'unsigned char *' <ArrayToPointerDecay>
    |   |   |     | `-DeclRefExpr 0x11f12c290 <col:16> 'unsigned char[18]' lvalue Var 0x11f110fe8 'header' 'unsigned char[18]'
    |   |   |     `-IntegerLiteral 0x11f12c2b0 <col:23> 'int' 17
    |   |   `-IntegerLiteral 0x11f12c308 <col:29> 'int' 16
    |   |-IntegerLiteral 0x11f12c398 <col:37> 'int' 1
    |   `-IntegerLiteral 0x11f12c3b8 <col:41> 'int' 0
    |-BinaryOperator 0x11f12c630 <line:24:2, col:41> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x11f12c470 <col:2, col:7> '<dependent type>' contains-errors lvalue ->flipv
    | | `-RecoveryExpr 0x11f12c448 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x11f12c428 <col:2> 'int *' lvalue ParmVar 0x11f110da8 'tga' 'int *'
    | `-ConditionalOperator 0x11f12c600 <col:15, col:41> 'int'
    |   |-ParenExpr 0x11f12c5a0 <col:15, col:33> 'int'
    |   | `-BinaryOperator 0x11f12c580 <col:16, col:29> 'int' '&'
    |   |   |-ImplicitCastExpr 0x11f12c568 <col:16, col:25> 'int' <IntegralCast>
    |   |   | `-ImplicitCastExpr 0x11f12c550 <col:16, col:25> 'unsigned char' <LValueToRValue>
    |   |   |   `-ArraySubscriptExpr 0x11f12c510 <col:16, col:25> 'unsigned char' lvalue
    |   |   |     |-ImplicitCastExpr 0x11f12c4f8 <col:16> 'unsigned char *' <ArrayToPointerDecay>
    |   |   |     | `-DeclRefExpr 0x11f12c4b8 <col:16> 'unsigned char[18]' lvalue Var 0x11f110fe8 'header' 'unsigned char[18]'
    |   |   |     `-IntegerLiteral 0x11f12c4d8 <col:23> 'int' 17
    |   |   `-IntegerLiteral 0x11f12c530 <col:29> 'int' 32
    |   |-IntegerLiteral 0x11f12c5c0 <col:37> 'int' 0
    |   `-IntegerLiteral 0x11f12c5e0 <col:41> 'int' 1
    |-IfStmt 0x11f12d0e8 <line:33:2, line:39:2>
    | |-RecoveryExpr 0x11f12c920 <line:33:6, line:34:54> '_Bool' contains-errors
    | `-CompoundStmt 0x11f12d0c8 <line:35:2, line:39:2>
    |   |-CallExpr 0x11f12d040 <line:36:3, line:37:29> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x11f12ceb8 <line:36:3> 'int ()' Function 0x11f12ce00 'gd_error_ex' 'int ()'
    |   | |-RecoveryExpr 0x11f12d020 <col:15> '<dependent type>' contains-errors lvalue
    |   | |-StringLiteral 0x11f12cef0 <col:27> 'char[4]' lvalue "STR"
    |   | |-CXXDependentScopeMemberExpr 0x11f12cf30 <line:37:4, col:9> '<dependent type>' contains-errors lvalue ->bits
    |   | | `-RecoveryExpr 0x11f12cf10 <col:4> '<dependent type>' contains-errors lvalue
    |   | `-CXXDependentScopeMemberExpr 0x11f12cf98 <col:15, col:20> '<dependent type>' contains-errors lvalue ->alphabits
    |   |   `-RecoveryExpr 0x11f12cf78 <col:15> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x11f12d0b8 <line:38:3, col:11>
    |     `-UnaryOperator 0x11f12d0a0 <col:10, col:11> 'int' prefix '-'
    |       `-IntegerLiteral 0x11f12d080 <col:11> 'int' 1
    |-BinaryOperator 0x11f12d1f0 <line:41:2, col:15> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x11f12d150 <col:2, col:7> '<dependent type>' contains-errors lvalue ->ident
    | | `-RecoveryExpr 0x11f12d128 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x11f12d108 <col:2> 'int *' lvalue ParmVar 0x11f110da8 'tga' 'int *'
    | `-RecoveryExpr 0x11f12d1d0 <col:15> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x11f12da00 <line:43:2, line:54:2>
    | |-BinaryOperator 0x11f12d298 <line:43:6, col:23> 'int' contains-errors '>'
    | | |-CXXDependentScopeMemberExpr 0x11f12d230 <col:6, col:11> '<dependent type>' contains-errors lvalue ->identsize
    | | | `-RecoveryExpr 0x11f12d210 <col:6> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x11f12d278 <col:23> 'int' 0
    | `-CompoundStmt 0x11f12d9d8 <col:26, line:54:2>
    |   |-BinaryOperator 0x11f12d568 <line:44:3, col:63> '<dependent type>' contains-errors '='
    |   | |-CXXDependentScopeMemberExpr 0x11f12d300 <col:3, col:8> '<dependent type>' contains-errors lvalue ->ident
    |   | | `-RecoveryExpr 0x11f12d2d8 <col:3> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x11f12d2b8 <col:3> 'int *' lvalue ParmVar 0x11f110da8 'tga' 'int *'
    |   | `-CStyleCastExpr 0x11f12d540 <col:16, col:63> 'char *' contains-errors <Dependent>
    |   |   `-CallExpr 0x11f12d500 <col:25, col:63> '<dependent type>' contains-errors
    |   |     |-DeclRefExpr 0x11f12d428 <col:25> 'int ()' Function 0x11f12d370 'gdMalloc' 'int ()'
    |   |     `-BinaryOperator 0x11f12d4e0 <col:34, col:62> '<dependent type>' contains-errors '*'
    |   |       |-CXXDependentScopeMemberExpr 0x11f12d468 <col:34, col:39> '<dependent type>' contains-errors lvalue ->identsize
    |   |       | `-RecoveryExpr 0x11f12d448 <col:34> '<dependent type>' contains-errors lvalue
    |   |       `-UnaryExprOrTypeTraitExpr 0x11f12d4c0 <col:51, col:62> 'unsigned long' sizeof 'char'
    |   |-IfStmt 0x11f12d6c8 <line:45:3, line:47:3>
    |   | |-BinaryOperator 0x11f12d648 <line:45:6, col:20> 'int' contains-errors '=='
    |   | | |-CXXDependentScopeMemberExpr 0x11f12d5a8 <col:6, col:11> '<dependent type>' contains-errors lvalue ->ident
    |   | | | `-RecoveryExpr 0x11f12d588 <col:6> '<dependent type>' contains-errors lvalue
    |   | | `-RecoveryExpr 0x11f12d628 <col:20> '<dependent type>' contains-errors lvalue
    |   | `-CompoundStmt 0x11f12d6b0 <col:26, line:47:3>
    |   |   `-ReturnStmt 0x11f12d6a0 <line:46:4, col:12>
    |   |     `-UnaryOperator 0x11f12d688 <col:11, col:12> 'int' prefix '-'
    |   |       `-IntegerLiteral 0x11f12d668 <col:12> 'int' 1
    |   `-IfStmt 0x11f12d9b8 <line:50:3, line:53:3>
    |     |-BinaryOperator 0x11f12d898 <line:50:7, col:57> 'int' contains-errors '!='
    |     | |-CallExpr 0x11f12d7f8 <col:7, col:47> '<dependent type>' contains-errors
    |     | | |-DeclRefExpr 0x11f12d6e8 <col:7> 'int ()' Function 0x11f111108 'gdGetBuf' 'int ()'
    |     | | |-CXXDependentScopeMemberExpr 0x11f12d728 <col:16, col:21> '<dependent type>' contains-errors lvalue ->ident
    |     | | | `-RecoveryExpr 0x11f12d708 <col:16> '<dependent type>' contains-errors lvalue
    |     | | |-CXXDependentScopeMemberExpr 0x11f12d790 <col:28, col:33> '<dependent type>' contains-errors lvalue ->identsize
    |     | | | `-RecoveryExpr 0x11f12d770 <col:28> '<dependent type>' contains-errors lvalue
    |     | | `-RecoveryExpr 0x11f12d7d8 <col:44> '<dependent type>' contains-errors lvalue
    |     | `-CXXDependentScopeMemberExpr 0x11f12d850 <col:52, col:57> '<dependent type>' contains-errors lvalue ->identsize
    |     |   `-RecoveryExpr 0x11f12d830 <col:52> '<dependent type>' contains-errors lvalue
    |     `-CompoundStmt 0x11f12d998 <col:68, line:53:3>
    |       |-CallExpr 0x11f12d910 <line:51:4, col:18> 'int'
    |       | |-ImplicitCastExpr 0x11f12d8f8 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |       | | `-DeclRefExpr 0x11f12d8b8 <col:4> 'int ()' Function 0x11f111320 'gd_error' 'int ()'
    |       | `-ImplicitCastExpr 0x11f12d938 <col:13> 'char *' <ArrayToPointerDecay>
    |       |   `-StringLiteral 0x11f12d8d8 <col:13> 'char[4]' lvalue "STR"
    |       `-ReturnStmt 0x11f12d988 <line:52:4, col:12>
    |         `-UnaryOperator 0x11f12d970 <col:11, col:12> 'int' prefix '-'
    |           `-IntegerLiteral 0x11f12d950 <col:12> 'int' 1
    `-ReturnStmt 0x11f12da40 <line:56:2, col:9>
      `-IntegerLiteral 0x11f12da20 <col:9> 'int' 1
