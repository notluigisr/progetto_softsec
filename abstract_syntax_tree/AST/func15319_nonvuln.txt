TranslationUnitDecl 0x150855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1508564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x150855bd0 '__int128'
|-TypedefDecl 0x150856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x150855bf0 'unsigned __int128'
|-TypedefDecl 0x15100be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15100bc00 'struct __NSConstantString_tag'
|   `-Record 0x150856580 '__NSConstantString_tag'
|-TypedefDecl 0x15100be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x150855d90 '__SVInt8_t'
|-TypedefDecl 0x15100bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x150855db0 '__SVInt16_t'
|-TypedefDecl 0x15100bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x150855dd0 '__SVInt32_t'
|-TypedefDecl 0x15100bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x150855df0 '__SVInt64_t'
|-TypedefDecl 0x15100c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x150855e10 '__SVUint8_t'
|-TypedefDecl 0x15100c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x150855e30 '__SVUint16_t'
|-TypedefDecl 0x15100c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x150855e50 '__SVUint32_t'
|-TypedefDecl 0x15100c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x150855e70 '__SVUint64_t'
|-TypedefDecl 0x15100c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x150855e90 '__SVFloat16_t'
|-TypedefDecl 0x15100c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x150855eb0 '__SVFloat32_t'
|-TypedefDecl 0x15100c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x150855ed0 '__SVFloat64_t'
|-TypedefDecl 0x15100c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x150855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15100c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x150855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15100c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x150855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15100c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x150855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15100c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x150855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15100c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x150855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15100c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x150855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15100c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x150855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15100c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x150855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15100c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x150856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15100c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x150856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15100c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x150856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15100c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x150856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15100c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x150856090 '__clang_svint8x3_t'
|-TypedefDecl 0x15100c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1508560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15100c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1508560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15100c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1508560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15100c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x150856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15100ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x150856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15100cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x150856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15100cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x150856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15100cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x150856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15100d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1508561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15100d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1508561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15100d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1508561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15100d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x150856210 '__clang_svint8x4_t'
|-TypedefDecl 0x15100d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x150856230 '__clang_svint16x4_t'
|-TypedefDecl 0x15100d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x150856250 '__clang_svint32x4_t'
|-TypedefDecl 0x15100d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x150856270 '__clang_svint64x4_t'
|-TypedefDecl 0x15100d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x150856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15100d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1508562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15100d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1508562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15100d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1508562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15100d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x150856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15100d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x150856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15100d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x150856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15100d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x150856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15100da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x150856390 '__SVBool_t'
|-TypedefDecl 0x15100da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1508563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15100dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1508563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15100db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1508563f0 '__SVCount_t'
|-TypedefDecl 0x15100dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15100dbb0 'char *'
|   `-BuiltinType 0x1508556b0 'char'
|-TypedefDecl 0x15100dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15100dbb0 'char *'
|   `-BuiltinType 0x1508556b0 'char'
|-FunctionDecl 0x151026600 <dataset_diviso_filec/func15319_nonvuln.c:2:1, line:30:13> line:2:5 skb_pad 'int (struct sk_buff *, int)'
| |-ParmVarDecl 0x15100e248 <col:13, col:29> col:29 used skb 'struct sk_buff *'
| |-ParmVarDecl 0x15100e2c8 <col:34, col:38> col:38 used pad 'int'
| `-CompoundStmt 0x152009c98 <line:3:1, line:30:13>
|   |-DeclStmt 0x151026780 <line:4:2, col:9>
|   | `-VarDecl 0x151026718 <col:2, col:6> col:6 used err 'int'
|   |-DeclStmt 0x151026818 <line:5:2, col:11>
|   | `-VarDecl 0x1510267b0 <col:2, col:6> col:6 used ntail 'int'
|   |-IfStmt 0x1510270a8 <line:8:2, line:11:2>
|   | |-BinaryOperator 0x151026c10 <line:8:6, col:47> 'int' '&&'
|   | | |-UnaryOperator 0x151026a28 <col:6, col:21> 'int' prefix '!' cannot overflow
|   | | | `-CallExpr 0x1510269e8 <col:7, col:21> 'int'
|   | | |   |-ImplicitCastExpr 0x1510269d0 <col:7> 'int (*)()' <FunctionToPointerDecay>
|   | | |   | `-DeclRefExpr 0x151026960 <col:7> 'int ()' Function 0x1510268a8 'skb_cloned' 'int ()'
|   | | |   `-ImplicitCastExpr 0x151026a10 <col:18> 'struct sk_buff *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x151026980 <col:18> 'struct sk_buff *' lvalue ParmVar 0x15100e248 'skb' 'struct sk_buff *'
|   | | `-BinaryOperator 0x151026bf0 <col:26, col:47> 'int' '>='
|   | |   |-CallExpr 0x151026b78 <col:26, col:42> 'int'
|   | |   | |-ImplicitCastExpr 0x151026b60 <col:26> 'int (*)()' <FunctionToPointerDecay>
|   | |   | | `-DeclRefExpr 0x151026b20 <col:26> 'int ()' Function 0x151026a68 'skb_tailroom' 'int ()'
|   | |   | `-ImplicitCastExpr 0x151026ba0 <col:39> 'struct sk_buff *' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x151026b40 <col:39> 'struct sk_buff *' lvalue ParmVar 0x15100e248 'skb' 'struct sk_buff *'
|   | |   `-ImplicitCastExpr 0x151026bd8 <col:47> 'int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x151026bb8 <col:47> 'int' lvalue ParmVar 0x15100e2c8 'pad' 'int'
|   | `-CompoundStmt 0x151027088 <col:52, line:11:2>
|   |   |-CallExpr 0x151027020 <line:9:3, col:36> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x151026ec8 <col:3> 'void *(void *, int, unsigned long)' Function 0x151026c78 'memset' 'void *(void *, int, unsigned long)'
|   |   | |-BinaryOperator 0x151026fa8 <col:10, col:25> '<dependent type>' contains-errors '+'
|   |   | | |-RecoveryExpr 0x151026f20 <col:10, col:15> '<dependent type>' contains-errors lvalue
|   |   | | | `-DeclRefExpr 0x151026ee8 <col:10> 'struct sk_buff *' lvalue ParmVar 0x15100e248 'skb' 'struct sk_buff *'
|   |   | | `-RecoveryExpr 0x151026f80 <col:20, col:25> '<dependent type>' contains-errors lvalue
|   |   | |   `-DeclRefExpr 0x151026f48 <col:20> 'struct sk_buff *' lvalue ParmVar 0x15100e248 'skb' 'struct sk_buff *'
|   |   | |-IntegerLiteral 0x151026fc8 <col:30> 'int' 0
|   |   | `-DeclRefExpr 0x151026fe8 <col:33> 'int' lvalue ParmVar 0x15100e2c8 'pad' 'int'
|   |   `-ReturnStmt 0x151027078 <line:10:3, col:10>
|   |     `-IntegerLiteral 0x151027058 <col:10> 'int' 0
|   |-BinaryOperator 0x1510272a8 <line:13:2, col:53> 'int' contains-errors '='
|   | |-DeclRefExpr 0x1510270c8 <col:2> 'int' lvalue Var 0x1510267b0 'ntail' 'int'
|   | `-BinaryOperator 0x151027288 <col:10, col:53> '<dependent type>' contains-errors '-'
|   |   |-BinaryOperator 0x151027168 <col:10, col:26> '<dependent type>' contains-errors '+'
|   |   | |-RecoveryExpr 0x151027120 <col:10, col:15> '<dependent type>' contains-errors lvalue
|   |   | | `-DeclRefExpr 0x1510270e8 <col:10> 'struct sk_buff *' lvalue ParmVar 0x15100e248 'skb' 'struct sk_buff *'
|   |   | `-DeclRefExpr 0x151027148 <col:26> 'int' lvalue ParmVar 0x15100e2c8 'pad' 'int'
|   |   `-ParenExpr 0x151027268 <col:32, col:53> '<dependent type>' contains-errors
|   |     `-BinaryOperator 0x151027248 <col:33, col:49> '<dependent type>' contains-errors '-'
|   |       |-RecoveryExpr 0x1510271c0 <col:33, col:38> '<dependent type>' contains-errors lvalue
|   |       | `-DeclRefExpr 0x151027188 <col:33> 'struct sk_buff *' lvalue ParmVar 0x15100e248 'skb' 'struct sk_buff *'
|   |       `-RecoveryExpr 0x151027220 <col:44, col:49> '<dependent type>' contains-errors lvalue
|   |         `-DeclRefExpr 0x1510271e8 <col:44> 'struct sk_buff *' lvalue ParmVar 0x15100e248 'skb' 'struct sk_buff *'
|   |-IfStmt 0x152009650 <line:14:2, line:18:2>
|   | |-CallExpr 0x151027510 <line:14:6, col:41> 'int'
|   | | |-ImplicitCastExpr 0x1510274f8 <col:6> 'int (*)()' <FunctionToPointerDecay>
|   | | | `-DeclRefExpr 0x1510273a8 <col:6> 'int ()' Function 0x1510272f0 'likely' 'int ()'
|   | | `-BinaryOperator 0x1510274d8 <col:13, col:40> 'int' '||'
|   | |   |-CallExpr 0x151027420 <col:13, col:27> 'int'
|   | |   | |-ImplicitCastExpr 0x151027408 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |   | | `-DeclRefExpr 0x1510273c8 <col:13> 'int ()' Function 0x1510268a8 'skb_cloned' 'int ()'
|   | |   | `-ImplicitCastExpr 0x151027448 <col:24> 'struct sk_buff *' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x1510273e8 <col:24> 'struct sk_buff *' lvalue ParmVar 0x15100e248 'skb' 'struct sk_buff *'
|   | |   `-BinaryOperator 0x1510274b8 <col:32, col:40> 'int' '>'
|   | |     |-ImplicitCastExpr 0x1510274a0 <col:32> 'int' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x151027460 <col:32> 'int' lvalue Var 0x1510267b0 'ntail' 'int'
|   | |     `-IntegerLiteral 0x151027480 <col:40> 'int' 0
|   | `-CompoundStmt 0x152009630 <col:44, line:18:2>
|   |   |-BinaryOperator 0x152009410 <line:15:3, col:51> 'int' contains-errors '='
|   |   | |-DeclRefExpr 0x151027538 <col:3> 'int' lvalue Var 0x151026718 'err' 'int'
|   |   | `-CallExpr 0x1520093d0 <col:9, col:51> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x1520092b8 <col:9> 'int ()' Function 0x152009200 'pskb_expand_head' 'int ()'
|   |   |   |-DeclRefExpr 0x1520092d8 <col:26> 'struct sk_buff *' lvalue ParmVar 0x15100e248 'skb' 'struct sk_buff *'
|   |   |   |-IntegerLiteral 0x1520092f8 <col:31> 'int' 0
|   |   |   |-DeclRefExpr 0x152009318 <col:34> 'int' lvalue Var 0x1510267b0 'ntail' 'int'
|   |   |   `-RecoveryExpr 0x1520093b0 <col:41> '<dependent type>' contains-errors lvalue
|   |   `-IfStmt 0x152009610 <line:16:3, line:17:9>
|   |     |-CallExpr 0x152009568 <line:16:7, col:19> 'int'
|   |     | |-ImplicitCastExpr 0x152009550 <col:7> 'int (*)()' <FunctionToPointerDecay>
|   |     | | `-DeclRefExpr 0x152009510 <col:7> 'int ()' Function 0x152009458 'unlikely' 'int ()'
|   |     | `-ImplicitCastExpr 0x152009590 <col:16> 'int' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x152009530 <col:16> 'int' lvalue Var 0x151026718 'err' 'int'
|   |     `-GotoStmt 0x1520095f8 <line:17:4, col:9> 'free_skb' 0x1520095a8
|   |-BinaryOperator 0x152009808 <line:21:2, col:25> 'int' '='
|   | |-DeclRefExpr 0x152009670 <col:2> 'int' lvalue Var 0x151026718 'err' 'int'
|   | `-CallExpr 0x1520097c8 <col:8, col:25> 'int'
|   |   |-ImplicitCastExpr 0x1520097b0 <col:8> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x152009770 <col:8> 'int ()' Function 0x1520096b8 'skb_linearize' 'int ()'
|   |   `-ImplicitCastExpr 0x1520097f0 <col:22> 'struct sk_buff *' <LValueToRValue>
|   |     `-DeclRefExpr 0x152009790 <col:22> 'struct sk_buff *' lvalue ParmVar 0x15100e248 'skb' 'struct sk_buff *'
|   |-IfStmt 0x1520098d8 <line:22:2, line:23:8>
|   | |-CallExpr 0x152009880 <line:22:6, col:18> 'int'
|   | | |-ImplicitCastExpr 0x152009868 <col:6> 'int (*)()' <FunctionToPointerDecay>
|   | | | `-DeclRefExpr 0x152009828 <col:6> 'int ()' Function 0x152009458 'unlikely' 'int ()'
|   | | `-ImplicitCastExpr 0x1520098a8 <col:15> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x152009848 <col:15> 'int' lvalue Var 0x151026718 'err' 'int'
|   | `-GotoStmt 0x1520098c0 <line:23:3, col:8> 'free_skb' 0x1520095a8
|   |-CallExpr 0x152009a50 <line:25:2, col:37> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x1520098f8 <col:2> 'void *(void *, int, unsigned long)' Function 0x151026c78 'memset' 'void *(void *, int, unsigned long)'
|   | |-BinaryOperator 0x1520099d8 <col:9, col:26> '<dependent type>' contains-errors '+'
|   | | |-RecoveryExpr 0x152009950 <col:9, col:14> '<dependent type>' contains-errors lvalue
|   | | | `-DeclRefExpr 0x152009918 <col:9> 'struct sk_buff *' lvalue ParmVar 0x15100e248 'skb' 'struct sk_buff *'
|   | | `-RecoveryExpr 0x1520099b0 <col:21, col:26> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x152009978 <col:21> 'struct sk_buff *' lvalue ParmVar 0x15100e248 'skb' 'struct sk_buff *'
|   | |-IntegerLiteral 0x1520099f8 <col:31> 'int' 0
|   | `-DeclRefExpr 0x152009a18 <col:34> 'int' lvalue ParmVar 0x15100e2c8 'pad' 'int'
|   |-ReturnStmt 0x152009aa8 <line:26:2, col:9>
|   | `-IntegerLiteral 0x152009a88 <col:9> 'int' 0
|   |-LabelStmt 0x152009c30 <line:28:1, line:29:15> 'free_skb'
|   | `-CallExpr 0x152009bf0 <col:2, col:15> 'int'
|   |   |-ImplicitCastExpr 0x152009bd8 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x152009b98 <col:2> 'int ()' Function 0x152009ae0 'kfree_skb' 'int ()'
|   |   `-ImplicitCastExpr 0x152009c18 <col:12> 'struct sk_buff *' <LValueToRValue>
|   |     `-DeclRefExpr 0x152009bb8 <col:12> 'struct sk_buff *' lvalue ParmVar 0x15100e248 'skb' 'struct sk_buff *'
|   `-ReturnStmt 0x152009c88 <line:30:2, col:9>
|     `-ImplicitCastExpr 0x152009c70 <col:9> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x152009c50 <col:9> 'int' lvalue Var 0x151026718 'err' 'int'
`-FunctionDecl 0x151026c78 <line:9:3> col:3 implicit used memset 'void *(void *, int, unsigned long)' extern
  |-ParmVarDecl 0x151026d78 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x151026de0 <<invalid sloc>> <invalid sloc> 'int'
  |-ParmVarDecl 0x151026e48 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x151026d20 <<invalid sloc>> Implicit 900
