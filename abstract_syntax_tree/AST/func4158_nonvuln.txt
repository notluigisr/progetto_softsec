TranslationUnitDecl 0x144855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1448564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x144855bd0 '__int128'
|-TypedefDecl 0x144856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x144855bf0 'unsigned __int128'
|-TypedefDecl 0x144926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x144926000 'struct __NSConstantString_tag'
|   `-Record 0x144856580 '__NSConstantString_tag'
|-TypedefDecl 0x144926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x144855d90 '__SVInt8_t'
|-TypedefDecl 0x144926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x144855db0 '__SVInt16_t'
|-TypedefDecl 0x144926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x144855dd0 '__SVInt32_t'
|-TypedefDecl 0x1449263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x144855df0 '__SVInt64_t'
|-TypedefDecl 0x144926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x144855e10 '__SVUint8_t'
|-TypedefDecl 0x1449264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x144855e30 '__SVUint16_t'
|-TypedefDecl 0x144926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x144855e50 '__SVUint32_t'
|-TypedefDecl 0x144926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x144855e70 '__SVUint64_t'
|-TypedefDecl 0x1449265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x144855e90 '__SVFloat16_t'
|-TypedefDecl 0x144926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x144855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1449266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x144855ed0 '__SVFloat64_t'
|-TypedefDecl 0x144926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x144855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x144926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x144855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1449267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x144855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x144926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x144855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1449268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x144855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x144926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x144855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x144926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x144855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1449269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x144855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x144926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x144855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x144926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x144856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x144926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x144856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x144926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x144856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x144926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x144856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x144926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x144856090 '__clang_svint8x3_t'
|-TypedefDecl 0x144926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1448560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x144926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1448560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x144926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1448560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x144926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x144856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x144926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x144856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x144926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x144856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x144926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x144856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x144926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x144856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x144927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1448561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x144927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1448561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1449278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1448561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x144927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x144856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1449279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x144856230 '__clang_svint16x4_t'
|-TypedefDecl 0x144927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x144856250 '__clang_svint32x4_t'
|-TypedefDecl 0x144927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x144856270 '__clang_svint64x4_t'
|-TypedefDecl 0x144927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x144856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x144927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1448562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x144927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1448562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x144927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1448562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x144927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x144856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x144927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x144856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x144927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x144856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x144927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x144856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x144927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x144856390 '__SVBool_t'
|-TypedefDecl 0x144927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1448563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x144927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1448563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x144927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1448563f0 '__SVCount_t'
|-TypedefDecl 0x144927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x144927fb0 'char *'
|   `-BuiltinType 0x1448556b0 'char'
|-TypedefDecl 0x144928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x144927fb0 'char *'
|   `-BuiltinType 0x1448556b0 'char'
`-FunctionDecl 0x144928238 <dataset_diviso_filec/func4158_nonvuln.c:1:1, line:19:1> line:1:1 TEST 'int (int, int)'
  |-ParmVarDecl 0x144928158 <col:6> col:6 UriSuite 'int'
  |-ParmVarDecl 0x1449280d8 <col:16> col:16 TestUriUserInfoHostPort2 'int'
  `-CompoundStmt 0x144941460 <col:42, line:19:1>
    |-DeclStmt 0x144928498 <line:7:3, line:9:10>
    | `-VarDecl 0x144928398 <line:7:3, line:9:5> line:7:22 used input 'const char *const' cinit
    |   `-ImplicitCastExpr 0x144928480 <col:30, line:9:5> 'const char *' <NoOp>
    |     `-ImplicitCastExpr 0x144928468 <line:7:30, line:9:5> 'char *' <ArrayToPointerDecay>
    |       `-StringLiteral 0x144928440 <line:7:30, line:9:5> 'char[7]' lvalue "STRSTR"
    |-CallExpr 0x145008c50 <line:10:3, col:48> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1449285c0 <col:3> 'int ()' Function 0x144928508 'ASSERT_TRUE' 'int ()'
    | `-BinaryOperator 0x145008c30 <col:15, col:47> 'int' contains-errors '=='
    |   |-IntegerLiteral 0x1449285e0 <col:15> 'int' 0
    |   `-CallExpr 0x145008c00 <col:20, col:47> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x1449286e0 <col:20> 'int ()' Function 0x144928628 'uriParseUriA' 'int ()'
    |     |-UnaryOperator 0x1449287e8 <col:33, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     | `-RecoveryExpr 0x1449287c8 <col:34> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x144928730 <col:42> 'const char *const' lvalue Var 0x144928398 'input' 'const char *const'
    |-CallExpr 0x145008f68 <line:12:3, col:51> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x145008c78 <col:3> 'int ()' Function 0x144928508 'ASSERT_TRUE' 'int ()'
    | `-BinaryOperator 0x145008f48 <col:15, col:50> 'int' contains-errors '=='
    |   |-CXXDependentScopeMemberExpr 0x145008ea8 <col:15, col:29> '<dependent type>' contains-errors lvalue .first
    |   | `-CXXDependentScopeMemberExpr 0x145008e60 <col:15, col:20> '<dependent type>' contains-errors lvalue .userInfo
    |   |   `-RecoveryExpr 0x145008e40 <col:15> '<dependent type>' contains-errors lvalue
    |   `-BinaryOperator 0x145008f28 <col:38, col:50> 'const char *' '+'
    |     |-BinaryOperator 0x145008f08 <col:38, col:46> 'const char *' '+'
    |     | |-ImplicitCastExpr 0x145008ef0 <col:38> 'const char *' <LValueToRValue>
    |     | | `-DeclRefExpr 0x145008d40 <col:38> 'const char *const' lvalue Var 0x144928398 'input' 'const char *const'
    |     | `-IntegerLiteral 0x145008d60 <col:46> 'int' 4
    |     `-IntegerLiteral 0x145008db8 <col:50> 'int' 3
    |-CallExpr 0x1450092e0 <line:13:3, col:59> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x145008f90 <col:3> 'int ()' Function 0x144928508 'ASSERT_TRUE' 'int ()'
    | `-BinaryOperator 0x1450092c0 <col:15, col:58> 'int' contains-errors '=='
    |   |-CXXDependentScopeMemberExpr 0x145009200 <col:15, col:29> '<dependent type>' contains-errors lvalue .afterLast
    |   | `-CXXDependentScopeMemberExpr 0x1450091b8 <col:15, col:20> '<dependent type>' contains-errors lvalue .userInfo
    |   |   `-RecoveryExpr 0x145009198 <col:15> '<dependent type>' contains-errors lvalue
    |   `-BinaryOperator 0x1450092a0 <col:42, col:58> 'const char *' '+'
    |     |-BinaryOperator 0x145009280 <col:42, col:54> 'const char *' '+'
    |     | |-BinaryOperator 0x145009260 <col:42, col:50> 'const char *' '+'
    |     | | |-ImplicitCastExpr 0x145009248 <col:42> 'const char *' <LValueToRValue>
    |     | | | `-DeclRefExpr 0x145009058 <col:42> 'const char *const' lvalue Var 0x144928398 'input' 'const char *const'
    |     | | `-IntegerLiteral 0x145009078 <col:50> 'int' 4
    |     | `-IntegerLiteral 0x1450090d0 <col:54> 'int' 3
    |     `-IntegerLiteral 0x145009110 <col:58> 'int' 7
    |-CallExpr 0x1450096b8 <line:14:3, col:59> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x145009308 <col:3> 'int ()' Function 0x144928508 'ASSERT_TRUE' 'int ()'
    | `-BinaryOperator 0x145009698 <col:15, col:58> 'int' contains-errors '=='
    |   |-CXXDependentScopeMemberExpr 0x1450095b8 <col:15, col:29> '<dependent type>' contains-errors lvalue .first
    |   | `-CXXDependentScopeMemberExpr 0x145009570 <col:15, col:20> '<dependent type>' contains-errors lvalue .hostText
    |   |   `-RecoveryExpr 0x145009550 <col:15> '<dependent type>' contains-errors lvalue
    |   `-BinaryOperator 0x145009678 <col:38, col:58> 'const char *' '+'
    |     |-BinaryOperator 0x145009658 <col:38, col:54> 'const char *' '+'
    |     | |-BinaryOperator 0x145009638 <col:38, col:50> 'const char *' '+'
    |     | | |-BinaryOperator 0x145009618 <col:38, col:46> 'const char *' '+'
    |     | | | |-ImplicitCastExpr 0x145009600 <col:38> 'const char *' <LValueToRValue>
    |     | | | | `-DeclRefExpr 0x1450093d0 <col:38> 'const char *const' lvalue Var 0x144928398 'input' 'const char *const'
    |     | | | `-IntegerLiteral 0x1450093f0 <col:46> 'int' 4
    |     | | `-IntegerLiteral 0x145009448 <col:50> 'int' 3
    |     | `-IntegerLiteral 0x145009488 <col:54> 'int' 7
    |     `-IntegerLiteral 0x1450094c8 <col:58> 'int' 1
    |-CallExpr 0x145009af0 <line:15:3, col:67> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1450096e0 <col:3> 'int ()' Function 0x144928508 'ASSERT_TRUE' 'int ()'
    | `-BinaryOperator 0x145009ad0 <col:15, col:66> 'int' contains-errors '=='
    |   |-CXXDependentScopeMemberExpr 0x1450099d0 <col:15, col:29> '<dependent type>' contains-errors lvalue .afterLast
    |   | `-CXXDependentScopeMemberExpr 0x145009988 <col:15, col:20> '<dependent type>' contains-errors lvalue .hostText
    |   |   `-RecoveryExpr 0x145009968 <col:15> '<dependent type>' contains-errors lvalue
    |   `-BinaryOperator 0x145009ab0 <col:42, col:66> 'const char *' '+'
    |     |-BinaryOperator 0x145009a90 <col:42, col:62> 'const char *' '+'
    |     | |-BinaryOperator 0x145009a70 <col:42, col:58> 'const char *' '+'
    |     | | |-BinaryOperator 0x145009a50 <col:42, col:54> 'const char *' '+'
    |     | | | |-BinaryOperator 0x145009a30 <col:42, col:50> 'const char *' '+'
    |     | | | | |-ImplicitCastExpr 0x145009a18 <col:42> 'const char *' <LValueToRValue>
    |     | | | | | `-DeclRefExpr 0x1450097a8 <col:42> 'const char *const' lvalue Var 0x144928398 'input' 'const char *const'
    |     | | | | `-IntegerLiteral 0x1450097c8 <col:50> 'int' 4
    |     | | | `-IntegerLiteral 0x145009820 <col:54> 'int' 3
    |     | | `-IntegerLiteral 0x145009860 <col:58> 'int' 7
    |     | `-IntegerLiteral 0x1450098a0 <col:62> 'int' 1
    |     `-IntegerLiteral 0x1450098e0 <col:66> 'int' 9
    |-CallExpr 0x144940d88 <line:16:3, col:67> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x145009b18 <col:3> 'int ()' Function 0x144928508 'ASSERT_TRUE' 'int ()'
    | `-BinaryOperator 0x144940d68 <col:15, col:66> 'int' contains-errors '=='
    |   |-CXXDependentScopeMemberExpr 0x144940c48 <col:15, col:29> '<dependent type>' contains-errors lvalue .first
    |   | `-CXXDependentScopeMemberExpr 0x144940c00 <col:15, col:20> '<dependent type>' contains-errors lvalue .portText
    |   |   `-RecoveryExpr 0x144940be0 <col:15> '<dependent type>' contains-errors lvalue
    |   `-BinaryOperator 0x144940d48 <col:38, col:66> 'const char *' '+'
    |     |-BinaryOperator 0x144940d28 <col:38, col:62> 'const char *' '+'
    |     | |-BinaryOperator 0x144940d08 <col:38, col:58> 'const char *' '+'
    |     | | |-BinaryOperator 0x144940ce8 <col:38, col:54> 'const char *' '+'
    |     | | | |-BinaryOperator 0x144940cc8 <col:38, col:50> 'const char *' '+'
    |     | | | | |-BinaryOperator 0x144940ca8 <col:38, col:46> 'const char *' '+'
    |     | | | | | |-ImplicitCastExpr 0x144940c90 <col:38> 'const char *' <LValueToRValue>
    |     | | | | | | `-DeclRefExpr 0x145009be0 <col:38> 'const char *const' lvalue Var 0x144928398 'input' 'const char *const'
    |     | | | | | `-IntegerLiteral 0x144940a00 <col:46> 'int' 4
    |     | | | | `-IntegerLiteral 0x144940a58 <col:50> 'int' 3
    |     | | | `-IntegerLiteral 0x144940a98 <col:54> 'int' 7
    |     | | `-IntegerLiteral 0x144940ad8 <col:58> 'int' 1
    |     | `-IntegerLiteral 0x144940b18 <col:62> 'int' 9
    |     `-IntegerLiteral 0x144940b58 <col:66> 'int' 1
    |-CallExpr 0x144941280 <line:17:3, col:75> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x144940db0 <col:3> 'int ()' Function 0x144928508 'ASSERT_TRUE' 'int ()'
    | `-BinaryOperator 0x144941260 <col:15, col:74> 'int' contains-errors '=='
    |   |-CXXDependentScopeMemberExpr 0x144941120 <col:15, col:29> '<dependent type>' contains-errors lvalue .afterLast
    |   | `-CXXDependentScopeMemberExpr 0x1449410d8 <col:15, col:20> '<dependent type>' contains-errors lvalue .portText
    |   |   `-RecoveryExpr 0x1449410b8 <col:15> '<dependent type>' contains-errors lvalue
    |   `-BinaryOperator 0x144941240 <col:42, col:74> 'const char *' '+'
    |     |-BinaryOperator 0x144941220 <col:42, col:70> 'const char *' '+'
    |     | |-BinaryOperator 0x144941200 <col:42, col:66> 'const char *' '+'
    |     | | |-BinaryOperator 0x1449411e0 <col:42, col:62> 'const char *' '+'
    |     | | | |-BinaryOperator 0x1449411c0 <col:42, col:58> 'const char *' '+'
    |     | | | | |-BinaryOperator 0x1449411a0 <col:42, col:54> 'const char *' '+'
    |     | | | | | |-BinaryOperator 0x144941180 <col:42, col:50> 'const char *' '+'
    |     | | | | | | |-ImplicitCastExpr 0x144941168 <col:42> 'const char *' <LValueToRValue>
    |     | | | | | | | `-DeclRefExpr 0x144940e78 <col:42> 'const char *const' lvalue Var 0x144928398 'input' 'const char *const'
    |     | | | | | | `-IntegerLiteral 0x144940e98 <col:50> 'int' 4
    |     | | | | | `-IntegerLiteral 0x144940ef0 <col:54> 'int' 3
    |     | | | | `-IntegerLiteral 0x144940f30 <col:58> 'int' 7
    |     | | | `-IntegerLiteral 0x144940f70 <col:62> 'int' 1
    |     | | `-IntegerLiteral 0x144940fb0 <col:66> 'int' 9
    |     | `-IntegerLiteral 0x144940ff0 <col:70> 'int' 1
    |     `-IntegerLiteral 0x144941030 <col:74> 'int' 3
    `-CallExpr 0x144941438 <line:18:3, col:27> '<dependent type>' contains-errors
      |-DeclRefExpr 0x144941388 <col:3> 'int ()' Function 0x1449412d0 'uriFreeUriMembersA' 'int ()'
      `-UnaryOperator 0x144941420 <col:22, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow
        `-RecoveryExpr 0x144941400 <col:23> '<dependent type>' contains-errors lvalue
