TranslationUnitDecl 0x12b055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12b0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12b055bd0 '__int128'
|-TypedefDecl 0x12b056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12b055bf0 'unsigned __int128'
|-TypedefDecl 0x12c00be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12c00bc00 'struct __NSConstantString_tag'
|   `-Record 0x12b056580 '__NSConstantString_tag'
|-TypedefDecl 0x12c00be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12b055d90 '__SVInt8_t'
|-TypedefDecl 0x12c00bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12b055db0 '__SVInt16_t'
|-TypedefDecl 0x12c00bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12b055dd0 '__SVInt32_t'
|-TypedefDecl 0x12c00bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12b055df0 '__SVInt64_t'
|-TypedefDecl 0x12c00c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12b055e10 '__SVUint8_t'
|-TypedefDecl 0x12c00c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12b055e30 '__SVUint16_t'
|-TypedefDecl 0x12c00c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12b055e50 '__SVUint32_t'
|-TypedefDecl 0x12c00c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12b055e70 '__SVUint64_t'
|-TypedefDecl 0x12c00c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12b055e90 '__SVFloat16_t'
|-TypedefDecl 0x12c00c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12b055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12c00c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12b055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12c00c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12b055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12c00c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12b055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12c00c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12b055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12c00c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12b055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12c00c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12b055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12c00c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12b055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12c00c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12b055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12c00c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12b055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12c00c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12b055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12c00c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12b056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12c00c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12b056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12c00c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12b056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12c00c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12b056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12c00c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12b056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12c00c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12b0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12c00c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12b0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12c00c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12b0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12c00c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12b056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12c00ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12b056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12c00cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12b056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12c00cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12b056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12c00cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12b056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12c00d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12b0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12c00d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12b0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12c00d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12b0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12c00d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12b056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12c00d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12b056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12c00d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12b056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12c00d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12b056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12c00d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12b056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12c00d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12b0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12c00d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12b0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12c00d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12b0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12c00d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12b056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12c00d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12b056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12c00d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12b056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12c00d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12b056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12c00da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12b056390 '__SVBool_t'
|-TypedefDecl 0x12c00da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12b0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12c00dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12b0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12c00db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12b0563f0 '__SVCount_t'
|-TypedefDecl 0x12c00dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12c00dbb0 'char *'
|   `-BuiltinType 0x12b0556b0 'char'
|-TypedefDecl 0x12c00dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12c00dbb0 'char *'
|   `-BuiltinType 0x12b0556b0 'char'
|-FunctionDecl 0x12c00dff8 <dataset_diviso_filec/func20083_vuln.c:1:1, line:15:1> line:1:1 invalid z_check_file_permissions 'int (int *, const char *, const int, const char *)'
| |-ParmVarDecl 0x12c00dd28 <col:26, col:39> col:39 invalid mem 'int *'
| |-ParmVarDecl 0x12c00dda8 <col:44, col:56> col:56 used fname 'const char *'
| |-ParmVarDecl 0x12c00de28 <col:63, col:73> col:73 used len 'const int'
| |-ParmVarDecl 0x12c00dea8 <col:78, col:90> col:90 used permission 'const char *'
| `-CompoundStmt 0x12c028b68 <line:2:1, line:15:1>
|   |-DeclStmt 0x12c0278b0 <line:5:5, col:59>
|   | `-VarDecl 0x12c00e2f8 <col:5, col:17> col:17 used permitgroup 'const char *'
|   |-DeclStmt 0x12c027c10 <line:6:5, col:63>
|   | `-VarDecl 0x12c0278e0 <col:5, col:62> col:9 used code 'int' cinit
|   |   `-CallExpr 0x12c027bd0 <col:16, col:62> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x12c027a28 <col:16> 'int ()' Function 0x12c027970 'gs_parse_file_name' 'int ()'
|   |     |-UnaryOperator 0x12c027b98 <col:35, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     | `-RecoveryExpr 0x12c027b78 <col:36> '<dependent type>' contains-errors lvalue
|   |     |-DeclRefExpr 0x12c027a78 <col:43> 'const char *' lvalue ParmVar 0x12c00dda8 'fname' 'const char *'
|   |     |-DeclRefExpr 0x12c027a98 <col:50> 'const int' lvalue ParmVar 0x12c00de28 'len' 'const int'
|   |     `-RecoveryExpr 0x12c027bb0 <col:55> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x12c027ce8 <line:7:5, line:8:16>
|   | |-BinaryOperator 0x12c027c80 <line:7:9, col:16> 'int' contains-errors '<'
|   | | |-ImplicitCastExpr 0x12c027c68 <col:9> 'int' contains-errors <LValueToRValue>
|   | | | `-DeclRefExpr 0x12c027c28 <col:9> 'int' contains-errors lvalue Var 0x12c0278e0 'code' 'int'
|   | | `-IntegerLiteral 0x12c027c48 <col:16> 'int' 0
|   | `-ReturnStmt 0x12c027cd8 <line:8:9, col:16>
|   |   `-ImplicitCastExpr 0x12c027cc0 <col:16> 'int' contains-errors <LValueToRValue>
|   |     `-DeclRefExpr 0x12c027ca0 <col:16> 'int' contains-errors lvalue Var 0x12c0278e0 'code' 'int'
|   |-IfStmt 0x12c028888 <line:10:5, line:11:16>
|   | |-BinaryOperator 0x12c028820 <line:10:9, col:93> 'int' contains-errors '&&'
|   | | |-BinaryOperator 0x12c0286c8 <col:9, col:33> 'int' contains-errors '&&'
|   | | | |-CXXDependentScopeMemberExpr 0x12c028618 <col:9, col:15> '<dependent type>' contains-errors lvalue .iodev
|   | | | | `-RecoveryExpr 0x12c0285f8 <col:9> '<dependent type>' contains-errors lvalue
|   | | | `-CXXDependentScopeMemberExpr 0x12c028680 <col:24, col:33> '<dependent type>' contains-errors lvalue ->LockFilePermissions
|   | | |   `-RecoveryExpr 0x12c028660 <col:24> '<dependent type>' contains-errors lvalue
|   | | `-BinaryOperator 0x12c028800 <col:56, col:93> 'int' contains-errors '=='
|   | |   |-CallExpr 0x12c0287c8 <col:56, col:88> '<dependent type>' contains-errors
|   | |   | |-DeclRefExpr 0x12c028430 <col:56> 'int (const char *, const char *)' Function 0x12c028250 'strcmp' 'int (const char *, const char *)'
|   | |   | |-CXXDependentScopeMemberExpr 0x12c028750 <col:63, col:76> '<dependent type>' contains-errors lvalue ->dname
|   | |   | | `-CXXDependentScopeMemberExpr 0x12c028708 <col:63, col:69> '<dependent type>' contains-errors lvalue .iodev
|   | |   | |   `-RecoveryExpr 0x12c0286e8 <col:63> '<dependent type>' contains-errors lvalue
|   | |   | `-StringLiteral 0x12c0284f8 <col:83> 'char[4]' lvalue "STR"
|   | |   `-IntegerLiteral 0x12c028578 <col:93> 'int' 0
|   | `-ReturnStmt 0x12c028878 <line:11:9, col:16>
|   |   `-RecoveryExpr 0x12c028858 <col:16> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x12c028b00 <line:13:5, col:67> 'int' contains-errors '='
|   | |-DeclRefExpr 0x12c0288a8 <col:5> 'int' contains-errors lvalue Var 0x12c0278e0 'code' 'int'
|   | `-CallExpr 0x12c028ac0 <col:12, col:67> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x12c0289a8 <col:12> 'int ()' Function 0x12c0288f0 'check_file_permissions' 'int ()'
|   |   |-RecoveryExpr 0x12c028aa0 <col:35> '<dependent type>' contains-errors lvalue
|   |   |-DeclRefExpr 0x12c0289e0 <col:44> 'const char *' lvalue ParmVar 0x12c00dda8 'fname' 'const char *'
|   |   |-DeclRefExpr 0x12c028a00 <col:51> 'const int' lvalue ParmVar 0x12c00de28 'len' 'const int'
|   |   `-DeclRefExpr 0x12c028a20 <col:56> 'const char *' lvalue Var 0x12c00e2f8 'permitgroup' 'const char *'
|   `-ReturnStmt 0x12c028b58 <line:14:5, col:12>
|     `-ImplicitCastExpr 0x12c028b40 <col:12> 'int' contains-errors <LValueToRValue>
|       `-DeclRefExpr 0x12c028b20 <col:12> 'int' contains-errors lvalue Var 0x12c0278e0 'code' 'int'
`-FunctionDecl 0x12c028250 <line:10:56> col:56 implicit used strcmp 'int (const char *, const char *)' extern
  |-ParmVarDecl 0x12c028350 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x12c0283b8 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x12c0282f8 <<invalid sloc>> Implicit 887
