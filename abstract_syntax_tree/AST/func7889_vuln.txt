TranslationUnitDecl 0x155055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1550564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x155055bd0 '__int128'
|-TypedefDecl 0x155056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x155055bf0 'unsigned __int128'
|-TypedefDecl 0x15580be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15580bc00 'struct __NSConstantString_tag'
|   `-Record 0x155056580 '__NSConstantString_tag'
|-TypedefDecl 0x15580be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x155055d90 '__SVInt8_t'
|-TypedefDecl 0x15580bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x155055db0 '__SVInt16_t'
|-TypedefDecl 0x15580bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x155055dd0 '__SVInt32_t'
|-TypedefDecl 0x15580bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x155055df0 '__SVInt64_t'
|-TypedefDecl 0x15580c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x155055e10 '__SVUint8_t'
|-TypedefDecl 0x15580c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x155055e30 '__SVUint16_t'
|-TypedefDecl 0x15580c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x155055e50 '__SVUint32_t'
|-TypedefDecl 0x15580c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x155055e70 '__SVUint64_t'
|-TypedefDecl 0x15580c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x155055e90 '__SVFloat16_t'
|-TypedefDecl 0x15580c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x155055eb0 '__SVFloat32_t'
|-TypedefDecl 0x15580c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x155055ed0 '__SVFloat64_t'
|-TypedefDecl 0x15580c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x155055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15580c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x155055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15580c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x155055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15580c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x155055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15580c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x155055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15580c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x155055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15580c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x155055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15580c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x155055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15580c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x155055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15580c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x155056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15580c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x155056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15580c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x155056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15580c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x155056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15580c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x155056090 '__clang_svint8x3_t'
|-TypedefDecl 0x15580c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1550560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15580c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1550560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15580c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1550560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15580c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x155056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15580ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x155056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15580cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x155056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15580cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x155056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15580cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x155056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15580d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1550561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15580d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1550561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15580d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1550561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15580d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x155056210 '__clang_svint8x4_t'
|-TypedefDecl 0x15580d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x155056230 '__clang_svint16x4_t'
|-TypedefDecl 0x15580d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x155056250 '__clang_svint32x4_t'
|-TypedefDecl 0x15580d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x155056270 '__clang_svint64x4_t'
|-TypedefDecl 0x15580d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x155056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15580d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1550562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15580d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1550562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15580d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1550562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15580d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x155056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15580d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x155056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15580d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x155056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15580d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x155056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15580da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x155056390 '__SVBool_t'
|-TypedefDecl 0x15580da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1550563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15580dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1550563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15580db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1550563f0 '__SVCount_t'
|-TypedefDecl 0x15580dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15580dbb0 'char *'
|   `-BuiltinType 0x1550556b0 'char'
|-TypedefDecl 0x15580dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15580dbb0 'char *'
|   `-BuiltinType 0x1550556b0 'char'
|-FunctionDecl 0x15580e008 <dataset_diviso_filec/func7889_vuln.c:1:1, line:28:1> line:1:1 invalid gql_intro_eval 'int (int, int, int, int, int)'
| |-ParmVarDecl 0x15580dcf0 <col:16, col:24> col:24 invalid err 'int'
| |-ParmVarDecl 0x15580dd70 <col:29, col:36> col:36 referenced invalid doc 'int'
| |-ParmVarDecl 0x15580ddf0 <col:41, col:48> col:48 invalid sel 'int'
| |-ParmVarDecl 0x15580de70 <col:53, col:62> col:62 invalid result 'int'
| |-ParmVarDecl 0x15580def0 <col:70, col:74> col:74 used depth 'int'
| `-CompoundStmt 0x155124168 <col:81, line:28:1>
|   |-DeclStmt 0x155827688 <line:2:5, col:27>
|   | |-RecordDecl 0x15580e0d8 <col:5, col:12> col:12 struct _gqlField
|   | `-VarDecl 0x15580e1d8 <col:5, col:22> col:22 referenced invalid field 'struct _gqlField'
|   |-DeclStmt 0x155827818 <line:3:5, col:24>
|   | |-RecordDecl 0x1558276a0 <col:5, col:12> col:12 struct _gqlCobj
|   | `-VarDecl 0x155827798 <col:5, col:21> col:21 referenced invalid obj 'struct _gqlCobj'
|   |-IfStmt 0x1551236c0 <line:5:5, line:19:5> has_else
|   | |-BinaryOperator 0x155827bb8 <line:5:9, col:37> 'int' contains-errors '=='
|   | | |-IntegerLiteral 0x155827830 <col:9> 'int' 0
|   | | `-CallExpr 0x155827b88 <col:14, col:37> '<dependent type>' contains-errors
|   | |   |-DeclRefExpr 0x155827a70 <col:14> 'int (const char *, const char *)' Function 0x155827890 'strcmp' 'int (const char *, const char *)'
|   | |   |-StringLiteral 0x155827ad0 <col:21> 'char[4]' lvalue "STR"
|   | |   `-CXXDependentScopeMemberExpr 0x155827b10 <col:28, col:33> '<dependent type>' contains-errors lvalue ->name
|   | |     `-RecoveryExpr 0x155827af0 <col:28> '<dependent type>' contains-errors lvalue
|   | |-CompoundStmt 0x155828140 <col:40, line:11:5>
|   | | |-IfStmt 0x155827ee0 <line:6:2, line:8:2>
|   | | | |-BinaryOperator 0x155827c30 <line:6:6, col:10> 'int' '<'
|   | | | | |-IntegerLiteral 0x155827bd8 <col:6> 'int' 1
|   | | | | `-ImplicitCastExpr 0x155827c18 <col:10> 'int' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x155827bf8 <col:10> 'int' lvalue ParmVar 0x15580def0 'depth' 'int'
|   | | | `-CompoundStmt 0x155827ec8 <col:17, line:8:2>
|   | | |   `-ReturnStmt 0x155827eb8 <line:7:6, col:51>
|   | | |     `-CallExpr 0x155827e80 <col:13, col:51> '<dependent type>' contains-errors
|   | | |       |-DeclRefExpr 0x155827db0 <col:13> 'int ()' Function 0x155827cf8 'agoo_err_set' 'int ()'
|   | | |       |-RecoveryExpr 0x155827dd0 <col:26> '<dependent type>' contains-errors lvalue
|   | | |       |-RecoveryExpr 0x155827e60 <col:31> '<dependent type>' contains-errors lvalue
|   | | |       `-StringLiteral 0x155827e08 <col:46> 'char[4]' lvalue "STR"
|   | | |-BinaryOperator 0x155828018 <line:9:2, col:14> '<dependent type>' contains-errors '='
|   | | | |-CXXDependentScopeMemberExpr 0x155827f48 <col:2, col:6> '<dependent type>' contains-errors lvalue .clas
|   | | | | `-RecoveryExpr 0x155827f20 <col:2> '<dependent type>' contains-errors lvalue
|   | | | |   `-DeclRefExpr 0x155827f00 <col:2> 'struct _gqlCobj' lvalue Var 0x155827798 'obj' 'struct _gqlCobj'
|   | | | `-UnaryOperator 0x155828000 <col:13, col:14> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | |   `-RecoveryExpr 0x155827fe0 <col:14> '<dependent type>' contains-errors lvalue
|   | | `-BinaryOperator 0x155828120 <line:10:2, col:12> '<dependent type>' contains-errors '='
|   | |   |-CXXDependentScopeMemberExpr 0x155828080 <col:2, col:6> '<dependent type>' contains-errors lvalue .ptr
|   | |   | `-RecoveryExpr 0x155828058 <col:2> '<dependent type>' contains-errors lvalue
|   | |   |   `-DeclRefExpr 0x155828038 <col:2> 'struct _gqlCobj' lvalue Var 0x155827798 'obj' 'struct _gqlCobj'
|   | |   `-RecoveryExpr 0x155828100 <col:12> '<dependent type>' contains-errors lvalue
|   | `-IfStmt 0x155123690 <line:11:12, line:19:5> has_else
|   |   |-BinaryOperator 0x155828290 <line:11:16, col:44> 'int' contains-errors '=='
|   |   | |-IntegerLiteral 0x155828168 <col:16> 'int' 0
|   |   | `-CallExpr 0x155828260 <col:21, col:44> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x155828188 <col:21> 'int (const char *, const char *)' Function 0x155827890 'strcmp' 'int (const char *, const char *)'
|   |   |   |-StringLiteral 0x1558281a8 <col:28> 'char[4]' lvalue "STR"
|   |   |   `-CXXDependentScopeMemberExpr 0x1558281e8 <col:35, col:40> '<dependent type>' contains-errors lvalue ->name
|   |   |     `-RecoveryExpr 0x1558281c8 <col:35> '<dependent type>' contains-errors lvalue
|   |   |-CompoundStmt 0x1551234c0 <col:47, line:17:5>
|   |   | |-IfStmt 0x155123260 <line:12:2, line:14:2>
|   |   | | |-BinaryOperator 0x155828308 <line:12:6, col:10> 'int' '<'
|   |   | | | |-IntegerLiteral 0x1558282b0 <col:6> 'int' 1
|   |   | | | `-ImplicitCastExpr 0x1558282f0 <col:10> 'int' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x1558282d0 <col:10> 'int' lvalue ParmVar 0x15580def0 'depth' 'int'
|   |   | | `-CompoundStmt 0x155123248 <col:17, line:14:2>
|   |   | |   `-ReturnStmt 0x155123238 <line:13:6, col:51>
|   |   | |     `-CallExpr 0x155123200 <col:13, col:51> '<dependent type>' contains-errors
|   |   | |       |-DeclRefExpr 0x155828328 <col:13> 'int ()' Function 0x155827cf8 'agoo_err_set' 'int ()'
|   |   | |       |-RecoveryExpr 0x155828348 <col:26> '<dependent type>' contains-errors lvalue
|   |   | |       |-RecoveryExpr 0x1558283d8 <col:31> '<dependent type>' contains-errors lvalue
|   |   | |       `-StringLiteral 0x155828380 <col:46> 'char[4]' lvalue "STR"
|   |   | |-BinaryOperator 0x155123398 <line:15:2, col:14> '<dependent type>' contains-errors '='
|   |   | | |-CXXDependentScopeMemberExpr 0x1551232c8 <col:2, col:6> '<dependent type>' contains-errors lvalue .clas
|   |   | | | `-RecoveryExpr 0x1551232a0 <col:2> '<dependent type>' contains-errors lvalue
|   |   | | |   `-DeclRefExpr 0x155123280 <col:2> 'struct _gqlCobj' lvalue Var 0x155827798 'obj' 'struct _gqlCobj'
|   |   | | `-UnaryOperator 0x155123380 <col:13, col:14> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   | |   `-RecoveryExpr 0x155123360 <col:14> '<dependent type>' contains-errors lvalue
|   |   | `-BinaryOperator 0x1551234a0 <line:16:2, col:12> '<dependent type>' contains-errors '='
|   |   |   |-CXXDependentScopeMemberExpr 0x155123400 <col:2, col:6> '<dependent type>' contains-errors lvalue .ptr
|   |   |   | `-RecoveryExpr 0x1551233d8 <col:2> '<dependent type>' contains-errors lvalue
|   |   |   |   `-DeclRefExpr 0x1551233b8 <col:2> 'struct _gqlCobj' lvalue Var 0x155827798 'obj' 'struct _gqlCobj'
|   |   |   `-RecoveryExpr 0x155123480 <col:12> '<dependent type>' contains-errors lvalue
|   |   `-CompoundStmt 0x155123678 <line:17:12, line:19:5>
|   |     `-ReturnStmt 0x155123668 <line:18:2, col:58>
|   |       `-CallExpr 0x155123628 <col:9, col:58> '<dependent type>' contains-errors
|   |         |-DeclRefExpr 0x1551234e8 <col:9> 'int ()' Function 0x155827cf8 'agoo_err_set' 'int ()'
|   |         |-RecoveryExpr 0x155123508 <col:22> '<dependent type>' contains-errors lvalue
|   |         |-RecoveryExpr 0x155123608 <col:27> '<dependent type>' contains-errors lvalue
|   |         |-StringLiteral 0x155123540 <col:42> 'char[4]' lvalue "STR"
|   |         `-CXXDependentScopeMemberExpr 0x155123580 <col:49, col:54> '<dependent type>' contains-errors lvalue ->name
|   |           `-RecoveryExpr 0x155123560 <col:49> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x155123a60 <line:20:5, col:36> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x155123988 <col:5> 'void *(void *, int, unsigned long)' Function 0x155123738 'memset' 'void *(void *, int, unsigned long)'
|   | |-UnaryOperator 0x1551239c8 <col:12, col:13> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | `-RecoveryExpr 0x1551239a8 <col:13> '<dependent type>' contains-errors lvalue
|   | |-IntegerLiteral 0x1551239e0 <col:20> 'int' 0
|   | `-UnaryExprOrTypeTraitExpr 0x155123a40 <col:23, col:35> 'unsigned long' contains-errors sizeof
|   |   `-ParenExpr 0x155123a20 <col:29, col:35> '<dependent type>' contains-errors lvalue
|   |     `-RecoveryExpr 0x155123a00 <col:30> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x155123b90 <line:21:5, col:23> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x155123ae0 <col:5, col:11> '<dependent type>' contains-errors lvalue .name
|   | | `-RecoveryExpr 0x155123ab8 <col:5> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x155123a98 <col:5> 'struct _gqlField' lvalue Var 0x15580e1d8 'field' 'struct _gqlField'
|   | `-CXXDependentScopeMemberExpr 0x155123b48 <col:18, col:23> '<dependent type>' contains-errors lvalue ->name
|   |   `-RecoveryExpr 0x155123b28 <col:18> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x155123ca8 <line:22:5, col:23> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x155123bf8 <col:5, col:11> '<dependent type>' contains-errors lvalue .type
|   | | `-RecoveryExpr 0x155123bd0 <col:5> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x155123bb0 <col:5> 'struct _gqlField' lvalue Var 0x15580e1d8 'field' 'struct _gqlField'
|   | `-CXXDependentScopeMemberExpr 0x155123c60 <col:18, col:23> '<dependent type>' contains-errors lvalue ->type
|   |   `-RecoveryExpr 0x155123c40 <col:18> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x155123df8 <line:24:5, col:26> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x155123d58 <col:5, col:16> '<dependent type>' contains-errors lvalue .resolve
|   | | `-CXXDependentScopeMemberExpr 0x155123d10 <col:5, col:10> '<dependent type>' contains-errors lvalue ->funcs
|   | |   `-RecoveryExpr 0x155123ce8 <col:5> '<dependent type>' contains-errors lvalue
|   | |     `-DeclRefExpr 0x155123cc8 <col:5> 'int' lvalue ParmVar 0x15580dd70 'doc' 'int'
|   | `-RecoveryExpr 0x155123dd8 <col:26> '<dependent type>' contains-errors lvalue
|   `-ReturnStmt 0x155124158 <line:27:5, col:71>
|     `-CallExpr 0x155124100 <col:12, col:71> '<dependent type>' contains-errors
|       |-DeclRefExpr 0x155123fd0 <col:12> 'int ()' Function 0x155123f18 'gql_cobj_resolve' 'int ()'
|       |-RecoveryExpr 0x155123ff0 <col:29> '<dependent type>' contains-errors lvalue
|       |-RecoveryExpr 0x155124010 <col:34> '<dependent type>' contains-errors lvalue
|       |-UnaryOperator 0x155124050 <col:39, col:40> '<dependent type>' contains-errors prefix '&' cannot overflow
|       | `-RecoveryExpr 0x155124030 <col:40> '<dependent type>' contains-errors lvalue
|       |-UnaryOperator 0x155124088 <col:45, col:46> '<dependent type>' contains-errors prefix '&' cannot overflow
|       | `-RecoveryExpr 0x155124068 <col:46> '<dependent type>' contains-errors lvalue
|       |-RecoveryExpr 0x1551240a0 <col:53> '<dependent type>' contains-errors lvalue
|       |-RecoveryExpr 0x1551240c0 <col:58> '<dependent type>' contains-errors lvalue
|       `-DeclRefExpr 0x1551240e0 <col:66> 'int' lvalue ParmVar 0x15580def0 'depth' 'int'
|-FunctionDecl 0x155827890 <line:5:14> col:14 implicit used strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x155827990 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1558279f8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x155827938 <<invalid sloc>> Implicit 887
`-FunctionDecl 0x155123738 <line:20:5> col:5 implicit used memset 'void *(void *, int, unsigned long)' extern
  |-ParmVarDecl 0x155123838 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x1551238a0 <<invalid sloc>> <invalid sloc> 'int'
  |-ParmVarDecl 0x155123908 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x1551237e0 <<invalid sloc>> Implicit 900
