TranslationUnitDecl 0x129055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1290564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x129055bd0 '__int128'
|-TypedefDecl 0x129056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x129055bf0 'unsigned __int128'
|-TypedefDecl 0x12980be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12980bc00 'struct __NSConstantString_tag'
|   `-Record 0x129056580 '__NSConstantString_tag'
|-TypedefDecl 0x12980be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x129055d90 '__SVInt8_t'
|-TypedefDecl 0x12980bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x129055db0 '__SVInt16_t'
|-TypedefDecl 0x12980bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x129055dd0 '__SVInt32_t'
|-TypedefDecl 0x12980bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x129055df0 '__SVInt64_t'
|-TypedefDecl 0x12980c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x129055e10 '__SVUint8_t'
|-TypedefDecl 0x12980c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x129055e30 '__SVUint16_t'
|-TypedefDecl 0x12980c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x129055e50 '__SVUint32_t'
|-TypedefDecl 0x12980c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x129055e70 '__SVUint64_t'
|-TypedefDecl 0x12980c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x129055e90 '__SVFloat16_t'
|-TypedefDecl 0x12980c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x129055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12980c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x129055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12980c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x129055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12980c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x129055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12980c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x129055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12980c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x129055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12980c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x129055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12980c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x129055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12980c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x129055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12980c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x129055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12980c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x129055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12980c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x129056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12980c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x129056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12980c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x129056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12980c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x129056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12980c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x129056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12980c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1290560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12980c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1290560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12980c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1290560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12980c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x129056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12980ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x129056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12980cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x129056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12980cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x129056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12980cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x129056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12980d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1290561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12980d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1290561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12980d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1290561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12980d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x129056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12980d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x129056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12980d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x129056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12980d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x129056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12980d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x129056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12980d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1290562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12980d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1290562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12980d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1290562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12980d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x129056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12980d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x129056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12980d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x129056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12980d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x129056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12980da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x129056390 '__SVBool_t'
|-TypedefDecl 0x12980da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1290563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12980dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1290563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12980db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1290563f0 '__SVCount_t'
|-TypedefDecl 0x12980dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12980dbb0 'char *'
|   `-BuiltinType 0x1290556b0 'char'
|-TypedefDecl 0x12980dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12980dbb0 'char *'
|   `-BuiltinType 0x1290556b0 'char'
|-FunctionDecl 0x129122600 <dataset_diviso_filec/func21470_nonvuln.c:1:1, line:69:1> line:1:5 gg_send_packet 'int (struct gg_session *, int, ...)'
| |-ParmVarDecl 0x12980e248 <col:20, col:39> col:39 used sess 'struct gg_session *'
| |-ParmVarDecl 0x12980e2c8 <col:45, col:49> col:49 used type 'int'
| `-CompoundStmt 0x12a80a890 <line:2:1, line:69:1>
|   |-DeclStmt 0x1291228e8 <line:3:2, col:21>
|   | |-RecordDecl 0x129122700 <col:2, col:9> col:9 struct gg_header
|   | `-VarDecl 0x129122868 <col:2, col:20> col:20 used h 'struct gg_header *'
|   |-DeclStmt 0x129122980 <line:4:2, col:11>
|   | `-VarDecl 0x129122918 <col:2, col:8> col:8 used tmp 'char *'
|   |-DeclStmt 0x129122a18 <line:5:2, col:25>
|   | `-VarDecl 0x1291229b0 <col:2, col:15> col:15 used tmp_length 'unsigned int'
|   |-DeclStmt 0x129122ab0 <line:6:2, col:15>
|   | `-VarDecl 0x129122a48 <col:2, col:8> col:8 used payload 'void *'
|   |-DeclStmt 0x129122b48 <line:7:2, col:29>
|   | `-VarDecl 0x129122ae0 <col:2, col:15> col:15 used payload_length 'unsigned int'
|   |-DeclStmt 0x129122bf8 <line:9:2, col:9>
|   | `-VarDecl 0x129122b90 <col:2, col:6> col:6 used res 'int'
|   |-CallExpr 0x129122e88 <line:11:2, col:61> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x129122d20 <col:2> 'int ()' Function 0x129122c68 'gg_debug_session' 'int ()'
|   | |-DeclRefExpr 0x129122d40 <col:19> 'struct gg_session *' lvalue ParmVar 0x12980e248 'sess' 'struct gg_session *'
|   | |-RecoveryExpr 0x129122e68 <col:25> '<dependent type>' contains-errors lvalue
|   | |-StringLiteral 0x129122dc0 <col:44> 'char[4]' lvalue "STR"
|   | |-DeclRefExpr 0x129122de0 <col:51> 'struct gg_session *' lvalue ParmVar 0x12980e248 'sess' 'struct gg_session *'
|   | `-DeclRefExpr 0x129122e00 <col:57> 'int' lvalue ParmVar 0x12980e2c8 'type' 'int'
|   |-IfStmt 0x129123410 <line:15:2, line:18:2>
|   | |-UnaryOperator 0x129123288 <line:15:6, col:32> 'int' prefix '!' cannot overflow
|   | | `-ParenExpr 0x129123268 <col:7, col:32> 'char *'
|   | |   `-BinaryOperator 0x129123248 <col:8, col:31> 'char *' '='
|   | |     |-DeclRefExpr 0x129122f40 <col:8> 'char *' lvalue Var 0x129122918 'tmp' 'char *'
|   | |     `-ImplicitCastExpr 0x129123230 <col:14, col:31> 'char *' <BitCast>
|   | |       `-CallExpr 0x1291231d8 <col:14, col:31> 'void *'
|   | |         |-ImplicitCastExpr 0x1291231c0 <col:14> 'void *(*)(unsigned long)' <FunctionToPointerDecay>
|   | |         | `-DeclRefExpr 0x129123138 <col:14> 'void *(unsigned long)' Function 0x129122f98 'malloc' 'void *(unsigned long)'
|   | |         `-ImplicitCastExpr 0x129123218 <col:21> 'unsigned long' <IntegralCast>
|   | |           `-ImplicitCastExpr 0x129123200 <col:21> 'unsigned int' <LValueToRValue>
|   | |             `-DeclRefExpr 0x129123158 <col:21> 'unsigned int' lvalue Var 0x1291229b0 'tmp_length' 'unsigned int'
|   | `-CompoundStmt 0x1291233f0 <col:35, line:18:2>
|   |   |-CallExpr 0x129123370 <line:16:3, col:47> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x1291232a0 <col:3> 'int ()' Function 0x129122c68 'gg_debug_session' 'int ()'
|   |   | |-DeclRefExpr 0x1291232c0 <col:20> 'struct gg_session *' lvalue ParmVar 0x12980e248 'sess' 'struct gg_session *'
|   |   | |-RecoveryExpr 0x129123350 <col:26> '<dependent type>' contains-errors lvalue
|   |   | `-StringLiteral 0x1291232f8 <col:42> 'char[4]' lvalue "STR"
|   |   `-ReturnStmt 0x1291233e0 <line:17:3, col:11>
|   |     `-UnaryOperator 0x1291233c8 <col:10, col:11> 'int' prefix '-'
|   |       `-IntegerLiteral 0x1291233a8 <col:11> 'int' 1
|   |-CallExpr 0x129125170 <line:20:2, col:19> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x1291250c8 <col:2> 'void (__builtin_va_list &, ...)' Function 0x129123510 'va_start' 'void (__builtin_va_list &, ...)'
|   | |-RecoveryExpr 0x129125150 <col:11> '<dependent type>' contains-errors lvalue
|   | `-DeclRefExpr 0x129125100 <col:15> 'int' lvalue ParmVar 0x12980e2c8 'type' 'int'
|   |-WhileStmt 0x12a809420 <line:24:2, line:42:2>
|   | |-ImplicitCastExpr 0x1291252f8 <line:24:9> 'void *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1291252d8 <col:9> 'void *' lvalue Var 0x129122a48 'payload' 'void *'
|   | `-CompoundStmt 0x12a8093e8 <col:18, line:42:2>
|   |   |-DeclStmt 0x129125390 <line:25:3, col:13>
|   |   | `-VarDecl 0x129125328 <col:3, col:9> col:9 used tmp2 'char *'
|   |   |-IfStmt 0x129125f70 <line:29:3, line:34:3>
|   |   | |-UnaryOperator 0x129125878 <line:29:7, col:57> 'int' prefix '!' cannot overflow
|   |   | | `-ParenExpr 0x129125858 <col:8, col:57> 'char *'
|   |   | |   `-BinaryOperator 0x129125838 <col:9, col:56> 'char *' '='
|   |   | |     |-DeclRefExpr 0x129125400 <col:9> 'char *' lvalue Var 0x129125328 'tmp2' 'char *'
|   |   | |     `-ImplicitCastExpr 0x129125820 <col:16, col:56> 'char *' <BitCast>
|   |   | |       `-CallExpr 0x1291257a8 <col:16, col:56> 'void *'
|   |   | |         |-ImplicitCastExpr 0x129125790 <col:16> 'void *(*)(void *, unsigned long)' <FunctionToPointerDecay>
|   |   | |         | `-DeclRefExpr 0x129125670 <col:16> 'void *(void *, unsigned long)' Function 0x129125460 'realloc' 'void *(void *, unsigned long)'
|   |   | |         |-ImplicitCastExpr 0x1291257f0 <col:24> 'void *' <BitCast>
|   |   | |         | `-ImplicitCastExpr 0x1291257d8 <col:24> 'char *' <LValueToRValue>
|   |   | |         |   `-DeclRefExpr 0x129125690 <col:24> 'char *' lvalue Var 0x129122918 'tmp' 'char *'
|   |   | |         `-ImplicitCastExpr 0x129125808 <col:29, col:42> 'unsigned long' <IntegralCast>
|   |   | |           `-BinaryOperator 0x129125720 <col:29, col:42> 'unsigned int' '+'
|   |   | |             |-ImplicitCastExpr 0x1291256f0 <col:29> 'unsigned int' <LValueToRValue>
|   |   | |             | `-DeclRefExpr 0x1291256b0 <col:29> 'unsigned int' lvalue Var 0x1291229b0 'tmp_length' 'unsigned int'
|   |   | |             `-ImplicitCastExpr 0x129125708 <col:42> 'unsigned int' <LValueToRValue>
|   |   | |               `-DeclRefExpr 0x1291256d0 <col:42> 'unsigned int' lvalue Var 0x129122ae0 'payload_length' 'unsigned int'
|   |   | `-CompoundStmt 0x129125f40 <col:60, line:34:3>
|   |   |   |-CallExpr 0x129125960 <line:30:4, col:48> '<dependent type>' contains-errors
|   |   |   | |-DeclRefExpr 0x129125890 <col:4> 'int ()' Function 0x129122c68 'gg_debug_session' 'int ()'
|   |   |   | |-DeclRefExpr 0x1291258b0 <col:21> 'struct gg_session *' lvalue ParmVar 0x12980e248 'sess' 'struct gg_session *'
|   |   |   | |-RecoveryExpr 0x129125940 <col:27> '<dependent type>' contains-errors lvalue
|   |   |   | `-StringLiteral 0x1291258e8 <col:43> 'char[4]' lvalue "STR"
|   |   |   |-CallExpr 0x129125be8 <line:31:4, col:12> 'void'
|   |   |   | |-ImplicitCastExpr 0x129125bd0 <col:4> 'void (*)(void *)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x129125b48 <col:4> 'void (void *)' Function 0x1291259d8 'free' 'void (void *)'
|   |   |   | `-ImplicitCastExpr 0x129125c28 <col:9> 'void *' <BitCast>
|   |   |   |   `-ImplicitCastExpr 0x129125c10 <col:9> 'char *' <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x129125b68 <col:9> 'char *' lvalue Var 0x129122918 'tmp' 'char *'
|   |   |   |-CallExpr 0x129125ed0 <line:32:4, col:13> '<dependent type>' contains-errors
|   |   |   | |-DeclRefExpr 0x129125e50 <col:4> 'void (__builtin_va_list &)' Function 0x129125cb8 'va_end' 'void (__builtin_va_list &)'
|   |   |   | `-RecoveryExpr 0x129125eb0 <col:11> '<dependent type>' contains-errors lvalue
|   |   |   `-ReturnStmt 0x129125f30 <line:33:4, col:12>
|   |   |     `-UnaryOperator 0x129125f18 <col:11, col:12> 'int' prefix '-'
|   |   |       `-IntegerLiteral 0x129125ef8 <col:12> 'int' 1
|   |   |-BinaryOperator 0x12a808e00 <line:36:3, col:9> 'char *' '='
|   |   | |-DeclRefExpr 0x129125f90 <col:3> 'char *' lvalue Var 0x129122918 'tmp' 'char *'
|   |   | `-ImplicitCastExpr 0x129125fd0 <col:9> 'char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x129125fb0 <col:9> 'char *' lvalue Var 0x129125328 'tmp2' 'char *'
|   |   |-CallExpr 0x12a809258 <line:38:3, col:51> 'void *'
|   |   | |-ImplicitCastExpr 0x12a809240 <col:3> 'void *(*)(void *, const void *, unsigned long)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x12a8090e8 <col:3> 'void *(void *, const void *, unsigned long)' Function 0x12a808e98 'memcpy' 'void *(void *, const void *, unsigned long)'
|   |   | |-ImplicitCastExpr 0x12a809290 <col:10, col:16> 'void *' <BitCast>
|   |   | | `-BinaryOperator 0x12a809178 <col:10, col:16> 'char *' '+'
|   |   | |   |-ImplicitCastExpr 0x12a809148 <col:10> 'char *' <LValueToRValue>
|   |   | |   | `-DeclRefExpr 0x12a809108 <col:10> 'char *' lvalue Var 0x129122918 'tmp' 'char *'
|   |   | |   `-ImplicitCastExpr 0x12a809160 <col:16> 'unsigned int' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x12a809128 <col:16> 'unsigned int' lvalue Var 0x1291229b0 'tmp_length' 'unsigned int'
|   |   | |-ImplicitCastExpr 0x12a8092c0 <col:28> 'const void *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x12a8092a8 <col:28> 'void *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x12a809198 <col:28> 'void *' lvalue Var 0x129122a48 'payload' 'void *'
|   |   | `-ImplicitCastExpr 0x12a8092f0 <col:37> 'unsigned long' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x12a8092d8 <col:37> 'unsigned int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x12a8091b8 <col:37> 'unsigned int' lvalue Var 0x129122ae0 'payload_length' 'unsigned int'
|   |   `-CompoundAssignOperator 0x12a809360 <line:39:3, col:17> 'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |     |-DeclRefExpr 0x12a809308 <col:3> 'unsigned int' lvalue Var 0x1291229b0 'tmp_length' 'unsigned int'
|   |     `-ImplicitCastExpr 0x12a809348 <col:17> 'unsigned int' <LValueToRValue>
|   |       `-DeclRefExpr 0x12a809328 <col:17> 'unsigned int' lvalue Var 0x129122ae0 'payload_length' 'unsigned int'
|   |-BinaryOperator 0x12a809538 <line:46:2, col:26> 'struct gg_header *' '='
|   | |-DeclRefExpr 0x12a809460 <col:2> 'struct gg_header *' lvalue Var 0x129122868 'h' 'struct gg_header *'
|   | `-CStyleCastExpr 0x12a809510 <col:6, col:26> 'struct gg_header *' <BitCast>
|   |   `-ImplicitCastExpr 0x12a8094f8 <col:26> 'char *' <LValueToRValue> part_of_explicit_cast
|   |     `-DeclRefExpr 0x12a809480 <col:26> 'char *' lvalue Var 0x129122918 'tmp' 'char *'
|   |-BinaryOperator 0x12a809768 <line:47:2, col:25> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x12a809590 <col:2, col:5> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x12a809558 <col:2> 'struct gg_header *' lvalue Var 0x129122868 'h' 'struct gg_header *'
|   | `-CallExpr 0x12a809728 <col:12, col:25> 'int'
|   |   |-ImplicitCastExpr 0x12a809710 <col:12> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x12a809698 <col:12> 'int ()' Function 0x12a8095e0 'gg_fix32' 'int ()'
|   |   `-ImplicitCastExpr 0x12a809750 <col:21> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x12a8096b8 <col:21> 'int' lvalue ParmVar 0x12980e2c8 'type' 'int'
|   |-BinaryOperator 0x12a809d70 <line:53:2, col:38> 'int' '='
|   | |-DeclRefExpr 0x12a809b58 <col:2> 'int' lvalue Var 0x129122b90 'res' 'int'
|   | `-CallExpr 0x12a809cf0 <col:8, col:38> 'int'
|   |   |-ImplicitCastExpr 0x12a809cd8 <col:8> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x12a809c58 <col:8> 'int ()' Function 0x12a809ba0 'gg_write' 'int ()'
|   |   |-ImplicitCastExpr 0x12a809d28 <col:17> 'struct gg_session *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x12a809c78 <col:17> 'struct gg_session *' lvalue ParmVar 0x12980e248 'sess' 'struct gg_session *'
|   |   |-ImplicitCastExpr 0x12a809d40 <col:23> 'char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x12a809c98 <col:23> 'char *' lvalue Var 0x129122918 'tmp' 'char *'
|   |   `-ImplicitCastExpr 0x12a809d58 <col:28> 'unsigned int' <LValueToRValue>
|   |     `-DeclRefExpr 0x12a809cb8 <col:28> 'unsigned int' lvalue Var 0x1291229b0 'tmp_length' 'unsigned int'
|   |-CallExpr 0x12a80a200 <line:55:2, col:10> 'void'
|   | |-ImplicitCastExpr 0x12a809de8 <col:2> 'void (*)(void *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x12a809d90 <col:2> 'void (void *)' Function 0x1291259d8 'free' 'void (void *)'
|   | `-ImplicitCastExpr 0x12a80a240 <col:7> 'void *' <BitCast>
|   |   `-ImplicitCastExpr 0x12a80a228 <col:7> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x12a809db0 <col:7> 'char *' lvalue Var 0x129122918 'tmp' 'char *'
|   |-IfStmt 0x12a80a598 <line:57:2, line:60:2>
|   | |-BinaryOperator 0x12a80a2c8 <line:57:6, col:14> 'int' '=='
|   | | |-ImplicitCastExpr 0x12a80a2b0 <col:6> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x12a80a258 <col:6> 'int' lvalue Var 0x129122b90 'res' 'int'
|   | | `-UnaryOperator 0x12a80a298 <col:13, col:14> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x12a80a278 <col:14> 'int' 1
|   | `-CompoundStmt 0x12a80a580 <col:17, line:60:2>
|   |   `-ReturnStmt 0x12a80a570 <line:59:3, col:11>
|   |     `-UnaryOperator 0x12a80a558 <col:10, col:11> 'int' prefix '-'
|   |       `-IntegerLiteral 0x12a80a538 <col:11> 'int' 1
|   `-ReturnStmt 0x12a80a880 <line:68:2, col:9>
|     `-IntegerLiteral 0x12a80a860 <col:9> 'int' 0
|-FunctionDecl 0x129122f98 <line:15:14> col:14 implicit used malloc 'void *(unsigned long)' extern
| |-ParmVarDecl 0x129123098 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-BuiltinAttr 0x129123040 <<invalid sloc>> Implicit 871
| `-AllocSizeAttr 0x129123108 <col:14> Implicit 1
|-FunctionDecl 0x129123510 <line:20:2> col:2 implicit used va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x129125030 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| |-BuiltinAttr 0x1291235b8 <<invalid sloc>> Implicit 864
| `-NoThrowAttr 0x1291250a0 <col:2> Implicit
|-FunctionDecl 0x129125460 <line:29:16> col:16 implicit used realloc 'void *(void *, unsigned long)' extern
| |-ParmVarDecl 0x129125560 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1291255c8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-BuiltinAttr 0x129125508 <<invalid sloc>> Implicit 872
| `-AllocSizeAttr 0x129125640 <col:16> Implicit 2
|-FunctionDecl 0x1291259d8 <line:31:4> col:4 implicit used free 'void (void *)' extern
| |-ParmVarDecl 0x129125ad8 <<invalid sloc>> <invalid sloc> 'void *'
| `-BuiltinAttr 0x129125a80 <<invalid sloc>> Implicit 873
|-FunctionDecl 0x129125cb8 <line:32:4> col:4 implicit used va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x129125db8 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| |-BuiltinAttr 0x129125d60 <<invalid sloc>> Implicit 865
| `-NoThrowAttr 0x129125e28 <col:4> Implicit
|-FunctionDecl 0x12a808e98 <line:38:3> col:3 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
| |-ParmVarDecl 0x12a808f98 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x12a809000 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x12a809068 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x12a808f40 <<invalid sloc>> Implicit 882
`-FunctionDecl 0x12a80a3a8 <line:58:61> col:61 implicit used strerror 'char *(int)' extern
  |-ParmVarDecl 0x12a80a4a8 <<invalid sloc>> <invalid sloc> 'int'
  `-BuiltinAttr 0x12a80a450 <<invalid sloc>> Implicit 901
