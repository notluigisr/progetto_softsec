TranslationUnitDecl 0x120055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1200564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x120055bd0 '__int128'
|-TypedefDecl 0x120056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x120055bf0 'unsigned __int128'
|-TypedefDecl 0x120126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x120126000 'struct __NSConstantString_tag'
|   `-Record 0x120056580 '__NSConstantString_tag'
|-TypedefDecl 0x120126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x120055d90 '__SVInt8_t'
|-TypedefDecl 0x120126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x120055db0 '__SVInt16_t'
|-TypedefDecl 0x120126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x120055dd0 '__SVInt32_t'
|-TypedefDecl 0x1201263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x120055df0 '__SVInt64_t'
|-TypedefDecl 0x120126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x120055e10 '__SVUint8_t'
|-TypedefDecl 0x1201264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x120055e30 '__SVUint16_t'
|-TypedefDecl 0x120126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x120055e50 '__SVUint32_t'
|-TypedefDecl 0x120126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x120055e70 '__SVUint64_t'
|-TypedefDecl 0x1201265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x120055e90 '__SVFloat16_t'
|-TypedefDecl 0x120126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x120055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1201266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x120055ed0 '__SVFloat64_t'
|-TypedefDecl 0x120126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x120055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x120126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x120055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1201267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x120055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x120126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x120055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1201268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x120055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x120126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x120055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x120126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x120055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1201269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x120055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x120126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x120055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x120126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x120056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x120126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x120056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x120126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x120056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x120126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x120056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x120126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x120056090 '__clang_svint8x3_t'
|-TypedefDecl 0x120126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1200560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x120126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1200560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x120126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1200560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x120126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x120056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x120126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x120056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x120126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x120056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x120126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x120056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x120126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x120056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x120127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1200561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x120127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1200561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1201278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1200561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x120127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x120056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1201279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x120056230 '__clang_svint16x4_t'
|-TypedefDecl 0x120127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x120056250 '__clang_svint32x4_t'
|-TypedefDecl 0x120127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x120056270 '__clang_svint64x4_t'
|-TypedefDecl 0x120127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x120056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x120127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1200562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x120127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1200562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x120127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1200562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x120127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x120056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x120127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x120056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x120127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x120056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x120127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x120056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x120127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x120056390 '__SVBool_t'
|-TypedefDecl 0x120127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1200563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x120127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1200563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x120127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1200563f0 '__SVCount_t'
|-TypedefDecl 0x120127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x120127fb0 'char *'
|   `-BuiltinType 0x1200556b0 'char'
|-TypedefDecl 0x120128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x120127fb0 'char *'
|   `-BuiltinType 0x1200556b0 'char'
|-FunctionDecl 0x1201281a8 <dataset_diviso_filec/func17613_vuln.c:1:1, line:36:1> line:1:1 chkpass_in 'int (int)'
| |-ParmVarDecl 0x1201280d8 <col:12> col:12 PG_FUNCTION_ARGS 'int'
| `-CompoundStmt 0x120145670 <line:2:1, line:36:1>
|   |-DeclStmt 0x120140b40 <line:3:2, col:37>
|   | `-VarDecl 0x1201282b8 <col:2, col:36> col:11 used str 'char *' cinit
|   |   `-ImplicitCastExpr 0x120128500 <col:17, col:36> 'char *' <IntegralToPointer>
|   |     `-CallExpr 0x1201284d8 <col:17, col:36> 'int'
|   |       |-ImplicitCastExpr 0x1201284c0 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x120128450 <col:17> 'int ()' Function 0x120128398 'PG_GETARG_CSTRING' 'int ()'
|   |       `-IntegerLiteral 0x120128470 <col:35> 'int' 0
|   |-DeclStmt 0x120140c78 <line:5:2, col:17>
|   | `-VarDecl 0x120140c10 <col:2, col:16> col:8 used mysalt 'char[4]'
|   |-DeclStmt 0x120140d10 <line:6:2, col:23>
|   | `-VarDecl 0x120140ca8 <col:2, col:11> col:11 used crypt_output 'char *'
|   |-DeclStmt 0x120140e08 <line:7:2, line:8:7>
|   | `-VarDecl 0x120140d80 <line:7:2, line:8:2> line:7:14 used salt_chars 'char[4]' static cinit
|   |   `-StringLiteral 0x120140de8 <line:8:2> 'char[4]' "STR"
|   |-IfStmt 0x1201415c8 <line:11:2, line:16:2>
|   | |-BinaryOperator 0x120140eb8 <line:11:6, col:14> 'int' '=='
|   | | |-ImplicitCastExpr 0x120140ea0 <col:6, col:7> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x120140e88 <col:6, col:7> 'char' <LValueToRValue>
|   | | |   `-UnaryOperator 0x120140e58 <col:6, col:7> 'char' lvalue prefix '*' cannot overflow
|   | | |     `-ImplicitCastExpr 0x120140e40 <col:7> 'char *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x120140e20 <col:7> 'char *' lvalue Var 0x1201282b8 'str' 'char *'
|   | | `-CharacterLiteral 0x120140e70 <col:14> 'int' 58
|   | `-CompoundStmt 0x1201415a8 <line:12:2, line:16:2>
|   |   |-CallExpr 0x1201413e8 <line:14:3, col:44> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x120141188 <col:3> 'unsigned long (char *, const char *, unsigned long)' Function 0x120140f38 'strlcpy' 'unsigned long (char *, const char *, unsigned long)'
|   |   | |-CXXDependentScopeMemberExpr 0x120141350 <col:11, col:19> '<dependent type>' contains-errors lvalue ->password
|   |   | | `-RecoveryExpr 0x120141330 <col:11> '<dependent type>' contains-errors lvalue
|   |   | |-BinaryOperator 0x1201413b0 <col:29, col:35> 'char *' '+'
|   |   | | |-ImplicitCastExpr 0x120141398 <col:29> 'char *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x120141208 <col:29> 'char *' lvalue Var 0x1201282b8 'str' 'char *'
|   |   | | `-IntegerLiteral 0x120141228 <col:35> 'int' 1
|   |   | `-BinaryOperator 0x1201412c0 <col:38, col:43> 'int' '+'
|   |   |   |-IntegerLiteral 0x120141280 <col:38> 'int' 13
|   |   |   `-IntegerLiteral 0x1201412a0 <col:43> 'int' 1
|   |   `-CallExpr 0x120141580 <line:15:3, col:27> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x120141500 <col:3> 'int ()' Function 0x120141448 'PG_RETURN_POINTER' 'int ()'
|   |     `-RecoveryExpr 0x120141560 <col:21> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x120144e38 <line:25:2, col:40> 'char' '='
|   | |-ArraySubscriptExpr 0x120144c30 <col:2, col:10> 'char' lvalue
|   | | |-ImplicitCastExpr 0x120144c18 <col:2> 'char *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x120144bd8 <col:2> 'char[4]' lvalue Var 0x120140c10 'mysalt' 'char[4]'
|   | | `-IntegerLiteral 0x120144bf8 <col:9> 'int' 0
|   | `-ImplicitCastExpr 0x120144e20 <col:14, col:40> 'char' <LValueToRValue>
|   |   `-ArraySubscriptExpr 0x120144e00 <col:14, col:40> 'char' lvalue
|   |     |-ImplicitCastExpr 0x120144de8 <col:14> 'char *' <ArrayToPointerDecay>
|   |     | `-DeclRefExpr 0x120144c50 <col:14> 'char[4]' lvalue Var 0x120140d80 'salt_chars' 'char[4]'
|   |     `-BinaryOperator 0x120144dc8 <col:25, col:36> 'int' '&'
|   |       |-CallExpr 0x120144d88 <col:25, col:32> 'int'
|   |       | `-ImplicitCastExpr 0x120144d70 <col:25> 'int (*)()' <FunctionToPointerDecay>
|   |       |   `-DeclRefExpr 0x120144d50 <col:25> 'int ()' Function 0x120144c98 'random' 'int ()'
|   |       `-IntegerLiteral 0x120144da8 <col:36> 'int' 63
|   |-BinaryOperator 0x120144fd8 <line:26:2, col:40> 'char' '='
|   | |-ArraySubscriptExpr 0x120144eb0 <col:2, col:10> 'char' lvalue
|   | | |-ImplicitCastExpr 0x120144e98 <col:2> 'char *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x120144e58 <col:2> 'char[4]' lvalue Var 0x120140c10 'mysalt' 'char[4]'
|   | | `-IntegerLiteral 0x120144e78 <col:9> 'int' 1
|   | `-ImplicitCastExpr 0x120144fc0 <col:14, col:40> 'char' <LValueToRValue>
|   |   `-ArraySubscriptExpr 0x120144fa0 <col:14, col:40> 'char' lvalue
|   |     |-ImplicitCastExpr 0x120144f88 <col:14> 'char *' <ArrayToPointerDecay>
|   |     | `-DeclRefExpr 0x120144ed0 <col:14> 'char[4]' lvalue Var 0x120140d80 'salt_chars' 'char[4]'
|   |     `-BinaryOperator 0x120144f68 <col:25, col:36> 'int' '&'
|   |       |-CallExpr 0x120144f28 <col:25, col:32> 'int'
|   |       | `-ImplicitCastExpr 0x120144f10 <col:25> 'int (*)()' <FunctionToPointerDecay>
|   |       |   `-DeclRefExpr 0x120144ef0 <col:25> 'int ()' Function 0x120144c98 'random' 'int ()'
|   |       `-IntegerLiteral 0x120144f48 <col:36> 'int' 63
|   `-BinaryOperator 0x1201450a8 <line:27:2, col:14> 'char' '='
|     |-ArraySubscriptExpr 0x120145050 <col:2, col:10> 'char' lvalue
|     | |-ImplicitCastExpr 0x120145038 <col:2> 'char *' <ArrayToPointerDecay>
|     | | `-DeclRefExpr 0x120144ff8 <col:2> 'char[4]' lvalue Var 0x120140c10 'mysalt' 'char[4]'
|     | `-IntegerLiteral 0x120145018 <col:9> 'int' 2
|     `-ImplicitCastExpr 0x120145090 <col:14> 'char' <IntegralCast>
|       `-IntegerLiteral 0x120145070 <col:14> 'int' 0
|-FunctionDecl 0x120140f38 <line:14:3> col:3 implicit used strlcpy 'unsigned long (char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0x120141038 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1201410a0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x120141108 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x120140fe0 <<invalid sloc>> Implicit 969
`-FunctionDecl 0x120145430 <line:33:2> col:2 implicit used strcpy 'char *(char *, const char *)' extern
  |-ParmVarDecl 0x120145530 <<invalid sloc>> <invalid sloc> 'char *'
  |-ParmVarDecl 0x120145598 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x1201454d8 <<invalid sloc>> Implicit 885
