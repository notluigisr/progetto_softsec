TranslationUnitDecl 0x128027808 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1280286b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x128027dd0 '__int128'
|-TypedefDecl 0x128028728 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x128027df0 'unsigned __int128'
|-TypedefDecl 0x13003b630 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13003b400 'struct __NSConstantString_tag'
|   `-Record 0x128028780 '__NSConstantString_tag'
|-TypedefDecl 0x13003b698 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x128027f90 '__SVInt8_t'
|-TypedefDecl 0x13003b700 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x128027fb0 '__SVInt16_t'
|-TypedefDecl 0x13003b768 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x128027fd0 '__SVInt32_t'
|-TypedefDecl 0x13003b7d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x128027ff0 '__SVInt64_t'
|-TypedefDecl 0x13003b838 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x128028010 '__SVUint8_t'
|-TypedefDecl 0x13003b8a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x128028030 '__SVUint16_t'
|-TypedefDecl 0x13003b908 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x128028050 '__SVUint32_t'
|-TypedefDecl 0x13003b970 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x128028070 '__SVUint64_t'
|-TypedefDecl 0x13003b9d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x128028090 '__SVFloat16_t'
|-TypedefDecl 0x13003ba40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x1280280b0 '__SVFloat32_t'
|-TypedefDecl 0x13003baa8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x1280280d0 '__SVFloat64_t'
|-TypedefDecl 0x13003bb10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x1280280f0 '__SVBfloat16_t'
|-TypedefDecl 0x13003bb78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x128028110 '__clang_svint8x2_t'
|-TypedefDecl 0x13003bbe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x128028130 '__clang_svint16x2_t'
|-TypedefDecl 0x13003bc48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x128028150 '__clang_svint32x2_t'
|-TypedefDecl 0x13003bcb0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x128028170 '__clang_svint64x2_t'
|-TypedefDecl 0x13003bd18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x128028190 '__clang_svuint8x2_t'
|-TypedefDecl 0x13003bd80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x1280281b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13003bde8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x1280281d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13003be50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x1280281f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13003beb8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x128028210 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13003bf20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x128028230 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13003bf88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x128028250 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13003bff0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x128028270 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13003c058 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x128028290 '__clang_svint8x3_t'
|-TypedefDecl 0x13003c0c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1280282b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13003c128 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1280282d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13003c190 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1280282f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13003c1f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x128028310 '__clang_svuint8x3_t'
|-TypedefDecl 0x13003c260 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x128028330 '__clang_svuint16x3_t'
|-TypedefDecl 0x13003c2c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x128028350 '__clang_svuint32x3_t'
|-TypedefDecl 0x13003c330 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x128028370 '__clang_svuint64x3_t'
|-TypedefDecl 0x13003c398 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x128028390 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13003c400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1280283b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13003c468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1280283d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13003c4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1280283f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13003c538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x128028410 '__clang_svint8x4_t'
|-TypedefDecl 0x13003c5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x128028430 '__clang_svint16x4_t'
|-TypedefDecl 0x13003c608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x128028450 '__clang_svint32x4_t'
|-TypedefDecl 0x13003c670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x128028470 '__clang_svint64x4_t'
|-TypedefDecl 0x13003c6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x128028490 '__clang_svuint8x4_t'
|-TypedefDecl 0x13003c740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1280284b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13003c7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1280284d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13003c810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1280284f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13003c878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x128028510 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13003c8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x128028530 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13003c948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x128028550 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13003c9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x128028570 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13003ca18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x128028590 '__SVBool_t'
|-TypedefDecl 0x13003ca80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1280285b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13003cae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1280285d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13003cb50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1280285f0 '__SVCount_t'
|-TypedefDecl 0x13003cbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13003cbb0 'char *'
|   `-BuiltinType 0x1280278b0 'char'
|-TypedefDecl 0x13003cc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13003cbb0 'char *'
|   `-BuiltinType 0x1280278b0 'char'
`-FunctionDecl 0x130059208 <dataset_diviso_filec/func23850_vuln.c:1:1, line:75:1> line:1:12 prepend_path 'int (const struct path *, const struct path *, char **, int *)' static
  |-ParmVarDecl 0x13003d248 <col:25, col:44> col:44 used path 'const struct path *'
  |-ParmVarDecl 0x13003d338 <line:2:4, col:23> col:23 used root 'const struct path *'
  |-ParmVarDecl 0x130059000 <line:3:4, col:11> col:11 used buffer 'char **'
  |-ParmVarDecl 0x1300590b8 <col:19, col:24> col:24 used buflen 'int *'
  `-CompoundStmt 0x13005db88 <line:4:1, line:75:1>
    |-DeclStmt 0x130059508 <line:5:2, col:23>
    | |-RecordDecl 0x130059318 <col:2, col:9> col:9 struct dentry
    | `-VarDecl 0x130059488 <col:2, col:17> col:17 used dentry 'struct dentry *'
    |-DeclStmt 0x130059708 <line:6:2, col:25>
    | |-RecordDecl 0x130059520 <col:2, col:9> col:9 struct vfsmount
    | `-VarDecl 0x130059688 <col:2, col:19> col:19 used vfsmnt 'struct vfsmount *'
    |-DeclStmt 0x130059908 <line:7:2, col:19>
    | |-RecordDecl 0x130059720 <col:2, col:9> col:9 struct mount
    | `-VarDecl 0x130059888 <col:2, col:16> col:16 used mnt 'struct mount *'
    |-DeclStmt 0x1300599c0 <line:8:2, col:15>
    | `-VarDecl 0x130059938 <col:2, col:14> col:6 used error 'int' cinit
    |   `-IntegerLiteral 0x1300599a0 <col:14> 'int' 0
    |-DeclStmt 0x130059b28 <line:9:2, col:25>
    | |-VarDecl 0x1300599f0 <col:2, col:11> col:11 used seq 'unsigned int'
    | `-VarDecl 0x130059a70 <col:2, col:24> col:16 used m_seq 'unsigned int' cinit
    |   `-ImplicitCastExpr 0x130059af8 <col:24> 'unsigned int' <IntegralCast>
    |     `-IntegerLiteral 0x130059ad8 <col:24> 'int' 0
    |-DeclStmt 0x130059bc0 <line:10:2, col:12>
    | `-VarDecl 0x130059b58 <col:2, col:8> col:8 used bptr 'char *'
    |-DeclStmt 0x130059c58 <line:11:2, col:10>
    | `-VarDecl 0x130059bf0 <col:2, col:6> col:6 used blen 'int'
    |-CallExpr 0x130059e08 <line:13:2, col:16> 'int'
    | `-ImplicitCastExpr 0x130059df0 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x130059da0 <col:2> 'int ()' Function 0x130059ce8 'rcu_read_lock' 'int ()'
    |-LabelStmt 0x13005b4b8 <line:14:1, line:15:43> 'restart_mnt'
    | `-CallExpr 0x13005b438 <col:2, col:43> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x130059f08 <col:2> 'int ()' Function 0x130059e50 'read_seqbegin_or_lock' 'int ()'
    |   |-UnaryOperator 0x13005b420 <col:24, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-RecoveryExpr 0x13005b400 <col:25> '<dependent type>' contains-errors lvalue
    |   `-UnaryOperator 0x130059fb0 <col:37, col:38> 'unsigned int *' prefix '&' cannot overflow
    |     `-DeclRefExpr 0x130059f58 <col:38> 'unsigned int' lvalue Var 0x130059a70 'm_seq' 'unsigned int'
    |-BinaryOperator 0x13005b530 <line:16:2, col:8> 'unsigned int' '='
    | |-DeclRefExpr 0x13005b4d8 <col:2> 'unsigned int' lvalue Var 0x1300599f0 'seq' 'unsigned int'
    | `-ImplicitCastExpr 0x13005b518 <col:8> 'unsigned int' <IntegralCast>
    |   `-IntegerLiteral 0x13005b4f8 <col:8> 'int' 0
    |-CallExpr 0x13005b588 <line:17:2, col:16> 'int'
    | `-ImplicitCastExpr 0x13005b570 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x13005b550 <col:2> 'int ()' Function 0x130059ce8 'rcu_read_lock' 'int ()'
    |-LabelStmt 0x13005b6a0 <line:18:1, line:19:10> 'restart'
    | `-BinaryOperator 0x13005b630 <col:2, col:10> 'char *' '='
    |   |-DeclRefExpr 0x13005b5a8 <col:2> 'char *' lvalue Var 0x130059b58 'bptr' 'char *'
    |   `-ImplicitCastExpr 0x13005b618 <col:9, col:10> 'char *' <LValueToRValue>
    |     `-UnaryOperator 0x13005b600 <col:9, col:10> 'char *' lvalue prefix '*' cannot overflow
    |       `-ImplicitCastExpr 0x13005b5e8 <col:10> 'char **' <LValueToRValue>
    |         `-DeclRefExpr 0x13005b5c8 <col:10> 'char **' lvalue ParmVar 0x130059000 'buffer' 'char **'
    |-BinaryOperator 0x13005b748 <line:20:2, col:10> 'int' '='
    | |-DeclRefExpr 0x13005b6c0 <col:2> 'int' lvalue Var 0x130059bf0 'blen' 'int'
    | `-ImplicitCastExpr 0x13005b730 <col:9, col:10> 'int' <LValueToRValue>
    |   `-UnaryOperator 0x13005b718 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
    |     `-ImplicitCastExpr 0x13005b700 <col:10> 'int *' <LValueToRValue>
    |       `-DeclRefExpr 0x13005b6e0 <col:10> 'int *' lvalue ParmVar 0x1300590b8 'buflen' 'int *'
    |-BinaryOperator 0x13005b7a8 <line:21:2, col:10> 'int' '='
    | |-DeclRefExpr 0x13005b768 <col:2> 'int' lvalue Var 0x130059938 'error' 'int'
    | `-IntegerLiteral 0x13005b788 <col:10> 'int' 0
    |-BinaryOperator 0x13005b848 <line:22:2, col:17> 'struct dentry *' contains-errors '='
    | |-DeclRefExpr 0x13005b7c8 <col:2> 'struct dentry *' lvalue Var 0x130059488 'dentry' 'struct dentry *'
    | `-RecoveryExpr 0x13005b820 <col:11, col:17> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x13005b7e8 <col:11> 'const struct path *' lvalue ParmVar 0x13003d248 'path' 'const struct path *'
    |-BinaryOperator 0x13005b8e8 <line:23:2, col:17> 'struct vfsmount *' contains-errors '='
    | |-DeclRefExpr 0x13005b868 <col:2> 'struct vfsmount *' lvalue Var 0x130059688 'vfsmnt' 'struct vfsmount *'
    | `-RecoveryExpr 0x13005b8c0 <col:11, col:17> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x13005b888 <col:11> 'const struct path *' lvalue ParmVar 0x13003d248 'path' 'const struct path *'
    |-BinaryOperator 0x13005bab8 <line:24:2, col:25> 'struct mount *' '='
    | |-DeclRefExpr 0x13005b908 <col:2> 'struct mount *' lvalue Var 0x130059888 'mnt' 'struct mount *'
    | `-ImplicitCastExpr 0x13005baa0 <col:8, col:25> 'struct mount *' <IntegralToPointer>
    |   `-CallExpr 0x13005ba60 <col:8, col:25> 'int'
    |     |-ImplicitCastExpr 0x13005ba48 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x13005ba08 <col:8> 'int ()' Function 0x13005b950 'real_mount' 'int ()'
    |     `-ImplicitCastExpr 0x13005ba88 <col:19> 'struct vfsmount *' <LValueToRValue>
    |       `-DeclRefExpr 0x13005ba28 <col:19> 'struct vfsmount *' lvalue Var 0x130059688 'vfsmnt' 'struct vfsmount *'
    |-CallExpr 0x13005bbc8 <line:25:2, col:42> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13005bad8 <col:2> 'int ()' Function 0x130059e50 'read_seqbegin_or_lock' 'int ()'
    | |-UnaryOperator 0x13005bbb0 <col:24, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-RecoveryExpr 0x13005bb90 <col:25> '<dependent type>' contains-errors lvalue
    | `-UnaryOperator 0x13005bb48 <col:38, col:39> 'unsigned int *' prefix '&' cannot overflow
    |   `-DeclRefExpr 0x13005bb28 <col:39> 'unsigned int' lvalue Var 0x1300599f0 'seq' 'unsigned int'
    |-WhileStmt 0x13005ceb8 <line:26:2, line:49:2>
    | |-BinaryOperator 0x13005bd38 <line:26:9, col:51> 'int' contains-errors '||'
    | | |-BinaryOperator 0x13005bc78 <col:9, col:25> 'int' contains-errors '!='
    | | | |-DeclRefExpr 0x13005bbf8 <col:9> 'struct dentry *' lvalue Var 0x130059488 'dentry' 'struct dentry *'
    | | | `-RecoveryExpr 0x13005bc50 <col:19, col:25> '<dependent type>' contains-errors lvalue
    | | |   `-DeclRefExpr 0x13005bc18 <col:19> 'const struct path *' lvalue ParmVar 0x13003d338 'root' 'const struct path *'
    | | `-BinaryOperator 0x13005bd18 <col:35, col:51> 'int' contains-errors '!='
    | |   |-DeclRefExpr 0x13005bc98 <col:35> 'struct vfsmount *' lvalue Var 0x130059688 'vfsmnt' 'struct vfsmount *'
    | |   `-RecoveryExpr 0x13005bcf0 <col:45, col:51> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x13005bcb8 <col:45> 'const struct path *' lvalue ParmVar 0x13003d338 'root' 'const struct path *'
    | `-CompoundStmt 0x13005ce70 <col:56, line:49:2>
    |   |-DeclStmt 0x13005be50 <line:27:3, col:25>
    |   | `-VarDecl 0x13005bde8 <col:3, col:19> col:19 used parent 'struct dentry *'
    |   |-IfStmt 0x13005c900 <line:29:3, line:41:3>
    |   | |-BinaryOperator 0x13005c080 <line:29:7, col:51> 'int' contains-errors '||'
    |   | | |-BinaryOperator 0x13005bee8 <col:7, col:25> 'int' contains-errors '=='
    |   | | | |-DeclRefExpr 0x13005be68 <col:7> 'struct dentry *' lvalue Var 0x130059488 'dentry' 'struct dentry *'
    |   | | | `-RecoveryExpr 0x13005bec0 <col:17, col:25> '<dependent type>' contains-errors lvalue
    |   | | |   `-DeclRefExpr 0x13005be88 <col:17> 'struct vfsmount *' lvalue Var 0x130059688 'vfsmnt' 'struct vfsmount *'
    |   | | `-CallExpr 0x13005c040 <col:37, col:51> 'int'
    |   | |   |-ImplicitCastExpr 0x13005c028 <col:37> 'int (*)()' <FunctionToPointerDecay>
    |   | |   | `-DeclRefExpr 0x13005bfe8 <col:37> 'int ()' Function 0x13005bf30 'IS_ROOT' 'int ()'
    |   | |   `-ImplicitCastExpr 0x13005c068 <col:45> 'struct dentry *' <LValueToRValue>
    |   | |     `-DeclRefExpr 0x13005c008 <col:45> 'struct dentry *' lvalue Var 0x130059488 'dentry' 'struct dentry *'
    |   | `-CompoundStmt 0x13005c8d0 <col:54, line:41:3>
    |   |   |-DeclStmt 0x13005c318 <line:30:4, col:55>
    |   |   | `-VarDecl 0x13005c128 <col:4, col:54> col:18 used parent 'struct mount *' cinit
    |   |   |   `-CallExpr 0x13005c2f0 <col:27, col:54> '<dependent type>' contains-errors
    |   |   |     |-DeclRefExpr 0x13005c270 <col:27> 'int ()' Function 0x13005c1b8 'ACCESS_ONCE' 'int ()'
    |   |   |     `-RecoveryExpr 0x13005c2c8 <col:39, col:44> '<dependent type>' contains-errors lvalue
    |   |   |       `-DeclRefExpr 0x13005c290 <col:39> 'struct mount *' lvalue Var 0x130059888 'mnt' 'struct mount *'
    |   |   |-IfStmt 0x13005c610 <line:32:4, line:37:4>
    |   |   | |-BinaryOperator 0x13005c3a0 <line:32:8, col:15> 'int' contains-errors '!='
    |   |   | | |-ImplicitCastExpr 0x13005c370 <col:8> 'struct mount *' <LValueToRValue>
    |   |   | | | `-DeclRefExpr 0x13005c330 <col:8> 'struct mount *' lvalue Var 0x130059888 'mnt' 'struct mount *'
    |   |   | | `-ImplicitCastExpr 0x13005c388 <col:15> 'struct mount *' contains-errors <LValueToRValue>
    |   |   | |   `-DeclRefExpr 0x13005c350 <col:15> 'struct mount *' contains-errors lvalue Var 0x13005c128 'parent' 'struct mount *'
    |   |   | `-CompoundStmt 0x13005c5e0 <col:23, line:37:4>
    |   |   |   |-BinaryOperator 0x13005c488 <line:33:5, col:45> 'struct dentry *' contains-errors '='
    |   |   |   | |-DeclRefExpr 0x13005c3c0 <col:5> 'struct dentry *' lvalue Var 0x130059488 'dentry' 'struct dentry *'
    |   |   |   | `-CallExpr 0x13005c460 <col:14, col:45> '<dependent type>' contains-errors
    |   |   |   |   |-DeclRefExpr 0x13005c3e0 <col:14> 'int ()' Function 0x13005c1b8 'ACCESS_ONCE' 'int ()'
    |   |   |   |   `-RecoveryExpr 0x13005c438 <col:26, col:31> '<dependent type>' contains-errors lvalue
    |   |   |   |     `-DeclRefExpr 0x13005c400 <col:26> 'struct mount *' lvalue Var 0x130059888 'mnt' 'struct mount *'
    |   |   |   |-BinaryOperator 0x13005c500 <line:34:5, col:11> 'struct mount *' contains-errors '='
    |   |   |   | |-DeclRefExpr 0x13005c4a8 <col:5> 'struct mount *' lvalue Var 0x130059888 'mnt' 'struct mount *'
    |   |   |   | `-ImplicitCastExpr 0x13005c4e8 <col:11> 'struct mount *' contains-errors <LValueToRValue>
    |   |   |   |   `-DeclRefExpr 0x13005c4c8 <col:11> 'struct mount *' contains-errors lvalue Var 0x13005c128 'parent' 'struct mount *'
    |   |   |   |-BinaryOperator 0x13005c5b8 <line:35:5, col:20> 'struct vfsmount *' contains-errors '='
    |   |   |   | |-DeclRefExpr 0x13005c520 <col:5> 'struct vfsmount *' lvalue Var 0x130059688 'vfsmnt' 'struct vfsmount *'
    |   |   |   | `-UnaryOperator 0x13005c5a0 <col:14, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   |   |   `-RecoveryExpr 0x13005c578 <col:15, col:20> '<dependent type>' contains-errors lvalue
    |   |   |   |     `-DeclRefExpr 0x13005c540 <col:15> 'struct mount *' lvalue Var 0x130059888 'mnt' 'struct mount *'
    |   |   |   `-ContinueStmt 0x13005c5d8 <line:36:5>
    |   |   |-IfStmt 0x13005c8a8 <line:38:4, line:39:38>
    |   |   | |-UnaryOperator 0x13005c668 <line:38:8, col:9> 'int' prefix '!' cannot overflow
    |   |   | | `-ImplicitCastExpr 0x13005c650 <col:9> 'int' <LValueToRValue>
    |   |   | |   `-DeclRefExpr 0x13005c630 <col:9> 'int' lvalue Var 0x130059938 'error' 'int'
    |   |   | `-BinaryOperator 0x13005c888 <line:39:5, col:38> 'int' '='
    |   |   |   |-DeclRefExpr 0x13005c680 <col:5> 'int' lvalue Var 0x130059938 'error' 'int'
    |   |   |   `-ConditionalOperator 0x13005c858 <col:13, col:38> 'int'
    |   |   |     |-CallExpr 0x13005c7d8 <col:13, col:30> 'int'
    |   |   |     | |-ImplicitCastExpr 0x13005c7c0 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |   |   |     | | `-DeclRefExpr 0x13005c780 <col:13> 'int ()' Function 0x13005c6c8 'is_mounted' 'int ()'
    |   |   |     | `-ImplicitCastExpr 0x13005c800 <col:24> 'struct vfsmount *' <LValueToRValue>
    |   |   |     |   `-DeclRefExpr 0x13005c7a0 <col:24> 'struct vfsmount *' lvalue Var 0x130059688 'vfsmnt' 'struct vfsmount *'
    |   |   |     |-IntegerLiteral 0x13005c818 <col:34> 'int' 1
    |   |   |     `-IntegerLiteral 0x13005c838 <col:38> 'int' 2
    |   |   `-BreakStmt 0x13005c8c8 <line:40:4>
    |   |-BinaryOperator 0x13005c9a0 <line:42:3, col:20> 'struct dentry *' contains-errors '='
    |   | |-DeclRefExpr 0x13005c920 <col:3> 'struct dentry *' lvalue Var 0x13005bde8 'parent' 'struct dentry *'
    |   | `-RecoveryExpr 0x13005c978 <col:12, col:20> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x13005c940 <col:12> 'struct dentry *' lvalue Var 0x130059488 'dentry' 'struct dentry *'
    |   |-CallExpr 0x13005caf8 <line:43:3, col:18> 'int'
    |   | |-ImplicitCastExpr 0x13005cae0 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x13005caa0 <col:3> 'int ()' Function 0x13005c9e8 'prefetch' 'int ()'
    |   | `-ImplicitCastExpr 0x13005cb20 <col:12> 'struct dentry *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x13005cac0 <col:12> 'struct dentry *' lvalue Var 0x13005bde8 'parent' 'struct dentry *'
    |   |-BinaryOperator 0x13005cd78 <line:44:3, col:53> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x13005cb38 <col:3> 'int' lvalue Var 0x130059938 'error' 'int'
    |   | `-CallExpr 0x13005cd40 <col:11, col:53> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x13005cc38 <col:11> 'int ()' Function 0x13005cb80 'prepend_name' 'int ()'
    |   |   |-UnaryOperator 0x13005cc78 <col:24, col:25> 'char **' prefix '&' cannot overflow
    |   |   | `-DeclRefExpr 0x13005cc58 <col:25> 'char *' lvalue Var 0x130059b58 'bptr' 'char *'
    |   |   |-UnaryOperator 0x13005ccb0 <col:31, col:32> 'int *' prefix '&' cannot overflow
    |   |   | `-DeclRefExpr 0x13005cc90 <col:32> 'int' lvalue Var 0x130059bf0 'blen' 'int'
    |   |   `-UnaryOperator 0x13005cd28 <col:38, col:47> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |     `-RecoveryExpr 0x13005cd00 <col:39, col:47> '<dependent type>' contains-errors lvalue
    |   |       `-DeclRefExpr 0x13005ccc8 <col:39> 'struct dentry *' lvalue Var 0x130059488 'dentry' 'struct dentry *'
    |   |-IfStmt 0x13005cdd8 <line:45:3, line:46:4>
    |   | |-ImplicitCastExpr 0x13005cdb8 <line:45:7> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x13005cd98 <col:7> 'int' lvalue Var 0x130059938 'error' 'int'
    |   | `-BreakStmt 0x13005cdd0 <line:46:4>
    |   `-BinaryOperator 0x13005ce50 <line:48:3, col:12> 'struct dentry *' '='
    |     |-DeclRefExpr 0x13005cdf8 <col:3> 'struct dentry *' lvalue Var 0x130059488 'dentry' 'struct dentry *'
    |     `-ImplicitCastExpr 0x13005ce38 <col:12> 'struct dentry *' <LValueToRValue>
    |       `-DeclRefExpr 0x13005ce18 <col:12> 'struct dentry *' lvalue Var 0x13005bde8 'parent' 'struct dentry *'
    |-IfStmt 0x13005d0d8 <line:50:2, line:51:19>
    | |-UnaryOperator 0x13005cf88 <line:50:6, col:15> 'int' prefix '!' cannot overflow
    | | `-ParenExpr 0x13005cf68 <col:7, col:15> 'unsigned int'
    | |   `-BinaryOperator 0x13005cf48 <col:8, col:14> 'unsigned int' '&'
    | |     |-ImplicitCastExpr 0x13005cf18 <col:8> 'unsigned int' <LValueToRValue>
    | |     | `-DeclRefExpr 0x13005ced8 <col:8> 'unsigned int' lvalue Var 0x1300599f0 'seq' 'unsigned int'
    | |     `-ImplicitCastExpr 0x13005cf30 <col:14> 'unsigned int' <IntegralCast>
    | |       `-IntegerLiteral 0x13005cef8 <col:14> 'int' 1
    | `-CallExpr 0x13005d0b8 <line:51:3, col:19> 'int'
    |   `-ImplicitCastExpr 0x13005d0a0 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x13005d080 <col:3> 'int ()' Function 0x13005cfc8 'rcu_read_unlock' 'int ()'
    |-IfStmt 0x13005d2e8 <line:52:2, line:55:2>
    | |-RecoveryExpr 0x13005d218 <line:52:6, col:37> '_Bool' contains-errors
    | `-CompoundStmt 0x13005d2c8 <col:40, line:55:2>
    |   |-BinaryOperator 0x13005d290 <line:53:3, col:9> 'unsigned int' '='
    |   | |-DeclRefExpr 0x13005d238 <col:3> 'unsigned int' lvalue Var 0x1300599f0 'seq' 'unsigned int'
    |   | `-ImplicitCastExpr 0x13005d278 <col:9> 'unsigned int' <IntegralCast>
    |   |   `-IntegerLiteral 0x13005d258 <col:9> 'int' 1
    |   `-GotoStmt 0x13005d2b0 <line:54:3, col:8> 'restart' 0x13005b650
    |-IfStmt 0x13005d560 <line:58:2, line:59:19>
    | |-UnaryOperator 0x13005d4f0 <line:58:6, col:17> 'int' prefix '!' cannot overflow
    | | `-ParenExpr 0x13005d4d0 <col:7, col:17> 'unsigned int'
    | |   `-BinaryOperator 0x13005d4b0 <col:8, col:16> 'unsigned int' '&'
    | |     |-ImplicitCastExpr 0x13005d480 <col:8> 'unsigned int' <LValueToRValue>
    | |     | `-DeclRefExpr 0x13005d440 <col:8> 'unsigned int' lvalue Var 0x130059a70 'm_seq' 'unsigned int'
    | |     `-ImplicitCastExpr 0x13005d498 <col:16> 'unsigned int' <IntegralCast>
    | |       `-IntegerLiteral 0x13005d460 <col:16> 'int' 1
    | `-CallExpr 0x13005d540 <line:59:3, col:19> 'int'
    |   `-ImplicitCastExpr 0x13005d528 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x13005d508 <col:3> 'int ()' Function 0x13005cfc8 'rcu_read_unlock' 'int ()'
    |-IfStmt 0x13005d690 <line:60:2, line:63:2>
    | |-RecoveryExpr 0x13005d5c0 <line:60:6, col:38> '_Bool' contains-errors
    | `-CompoundStmt 0x13005d670 <col:41, line:63:2>
    |   |-BinaryOperator 0x13005d638 <line:61:3, col:11> 'unsigned int' '='
    |   | |-DeclRefExpr 0x13005d5e0 <col:3> 'unsigned int' lvalue Var 0x130059a70 'm_seq' 'unsigned int'
    |   | `-ImplicitCastExpr 0x13005d620 <col:11> 'unsigned int' <IntegralCast>
    |   |   `-IntegerLiteral 0x13005d600 <col:11> 'int' 1
    |   `-GotoStmt 0x13005d658 <line:62:3, col:8> 'restart_mnt' 0x13005b468
    |-IfStmt 0x13005d9d0 <line:66:2, line:71:2>
    | |-BinaryOperator 0x13005d828 <line:66:6, col:29> 'int' '&&'
    | | |-BinaryOperator 0x13005d748 <col:6, col:15> 'int' '>='
    | | | |-ImplicitCastExpr 0x13005d730 <col:6> 'int' <LValueToRValue>
    | | | | `-DeclRefExpr 0x13005d6f0 <col:6> 'int' lvalue Var 0x130059938 'error' 'int'
    | | | `-IntegerLiteral 0x13005d710 <col:15> 'int' 0
    | | `-BinaryOperator 0x13005d808 <col:20, col:29> 'int' '=='
    | |   |-ImplicitCastExpr 0x13005d7d8 <col:20> 'char *' <LValueToRValue>
    | |   | `-DeclRefExpr 0x13005d768 <col:20> 'char *' lvalue Var 0x130059b58 'bptr' 'char *'
    | |   `-ImplicitCastExpr 0x13005d7f0 <col:28, col:29> 'char *' <LValueToRValue>
    | |     `-UnaryOperator 0x13005d7c0 <col:28, col:29> 'char *' lvalue prefix '*' cannot overflow
    | |       `-ImplicitCastExpr 0x13005d7a8 <col:29> 'char **' <LValueToRValue>
    | |         `-DeclRefExpr 0x13005d788 <col:29> 'char **' lvalue ParmVar 0x130059000 'buffer' 'char **'
    | `-CompoundStmt 0x13005d9b8 <col:37, line:71:2>
    |   `-IfStmt 0x13005d988 <line:67:3, line:70:14> has_else
    |     |-BinaryOperator 0x13005d8a0 <line:67:7, col:16> 'int' '<'
    |     | |-UnaryOperator 0x13005d868 <col:7, col:9> 'int' prefix '--'
    |     | | `-DeclRefExpr 0x13005d848 <col:9> 'int' lvalue Var 0x130059bf0 'blen' 'int'
    |     | `-IntegerLiteral 0x13005d880 <col:16> 'int' 0
    |     |-NullStmt 0x13005d980 <line:68:4>
    |     `-BinaryOperator 0x13005d960 <line:70:4, col:14> 'char' '='
    |       |-UnaryOperator 0x13005d918 <col:4, col:7> 'char' lvalue prefix '*' cannot overflow
    |       | `-UnaryOperator 0x13005d900 <col:5, col:7> 'char *' prefix '--'
    |       |   `-DeclRefExpr 0x13005d8e0 <col:7> 'char *' lvalue Var 0x130059b58 'bptr' 'char *'
    |       `-ImplicitCastExpr 0x13005d948 <col:14> 'char' <IntegralCast>
    |         `-CharacterLiteral 0x13005d930 <col:14> 'int' 47
    |-BinaryOperator 0x13005da78 <line:72:2, col:12> 'char *' '='
    | |-UnaryOperator 0x13005da28 <col:2, col:3> 'char *' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x13005da10 <col:3> 'char **' <LValueToRValue>
    | |   `-DeclRefExpr 0x13005d9f0 <col:3> 'char **' lvalue ParmVar 0x130059000 'buffer' 'char **'
    | `-ImplicitCastExpr 0x13005da60 <col:12> 'char *' <LValueToRValue>
    |   `-DeclRefExpr 0x13005da40 <col:12> 'char *' lvalue Var 0x130059b58 'bptr' 'char *'
    |-BinaryOperator 0x13005db20 <line:73:2, col:12> 'int' '='
    | |-UnaryOperator 0x13005dad0 <col:2, col:3> 'int' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x13005dab8 <col:3> 'int *' <LValueToRValue>
    | |   `-DeclRefExpr 0x13005da98 <col:3> 'int *' lvalue ParmVar 0x1300590b8 'buflen' 'int *'
    | `-ImplicitCastExpr 0x13005db08 <col:12> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x13005dae8 <col:12> 'int' lvalue Var 0x130059bf0 'blen' 'int'
    `-ReturnStmt 0x13005db78 <line:74:2, col:9>
      `-ImplicitCastExpr 0x13005db60 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x13005db40 <col:9> 'int' lvalue Var 0x130059938 'error' 'int'
