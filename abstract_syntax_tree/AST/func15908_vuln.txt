TranslationUnitDecl 0x148855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1488564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x148855bd0 '__int128'
|-TypedefDecl 0x148856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x148855bf0 'unsigned __int128'
|-TypedefDecl 0x14900be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14900bc00 'struct __NSConstantString_tag'
|   `-Record 0x148856580 '__NSConstantString_tag'
|-TypedefDecl 0x14900be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x148855d90 '__SVInt8_t'
|-TypedefDecl 0x14900bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x148855db0 '__SVInt16_t'
|-TypedefDecl 0x14900bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x148855dd0 '__SVInt32_t'
|-TypedefDecl 0x14900bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x148855df0 '__SVInt64_t'
|-TypedefDecl 0x14900c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x148855e10 '__SVUint8_t'
|-TypedefDecl 0x14900c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x148855e30 '__SVUint16_t'
|-TypedefDecl 0x14900c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x148855e50 '__SVUint32_t'
|-TypedefDecl 0x14900c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x148855e70 '__SVUint64_t'
|-TypedefDecl 0x14900c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x148855e90 '__SVFloat16_t'
|-TypedefDecl 0x14900c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x148855eb0 '__SVFloat32_t'
|-TypedefDecl 0x14900c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x148855ed0 '__SVFloat64_t'
|-TypedefDecl 0x14900c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x148855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14900c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x148855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14900c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x148855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14900c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x148855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14900c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x148855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14900c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x148855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14900c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x148855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14900c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x148855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14900c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x148855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14900c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x148856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14900c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x148856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14900c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x148856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14900c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x148856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14900c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x148856090 '__clang_svint8x3_t'
|-TypedefDecl 0x14900c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1488560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14900c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1488560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14900c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1488560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14900c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x148856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14900ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x148856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14900cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x148856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14900cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x148856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14900cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x148856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14900d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1488561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14900d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1488561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14900d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1488561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14900d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x148856210 '__clang_svint8x4_t'
|-TypedefDecl 0x14900d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x148856230 '__clang_svint16x4_t'
|-TypedefDecl 0x14900d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x148856250 '__clang_svint32x4_t'
|-TypedefDecl 0x14900d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x148856270 '__clang_svint64x4_t'
|-TypedefDecl 0x14900d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x148856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14900d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1488562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14900d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1488562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14900d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1488562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14900d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x148856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14900d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x148856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14900d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x148856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14900d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x148856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14900da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x148856390 '__SVBool_t'
|-TypedefDecl 0x14900da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1488563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14900dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1488563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14900db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1488563f0 '__SVCount_t'
|-TypedefDecl 0x14900dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14900dbb0 'char *'
|   `-BuiltinType 0x1488556b0 'char'
|-TypedefDecl 0x14900dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14900dbb0 'char *'
|   `-BuiltinType 0x1488556b0 'char'
|-FunctionDecl 0x149026968 <dataset_diviso_filec/func15908_vuln.c:1:1, line:29:1> line:1:1 get_chainname_rulenum 'int (const struct ip6t_entry *, const struct ip6t_entry *, const char *, const char **, const char **, unsigned int *)'
| |-ParmVarDecl 0x14900e248 <col:23, col:48> col:48 used s 'const struct ip6t_entry *'
| |-ParmVarDecl 0x14900e338 <col:51, col:76> col:76 used e 'const struct ip6t_entry *'
| |-ParmVarDecl 0x149026600 <line:2:9, col:21> col:21 used hookname 'const char *'
| |-ParmVarDecl 0x1490266b8 <col:31, col:44> col:44 used chainname 'const char **'
| |-ParmVarDecl 0x149026738 <line:3:9, col:22> col:22 used comment 'const char **'
| |-ParmVarDecl 0x1490267e8 <col:31, col:45> col:45 used rulenum 'unsigned int *'
| `-CompoundStmt 0x148923fa0 <line:4:1, line:29:1>
|   |-DeclStmt 0x149026ec8 <line:5:2, col:67>
|   | |-RecordDecl 0x149026a88 <col:8, col:15> col:15 struct xt_standard_target
|   | `-VarDecl 0x149026bf8 <col:2, col:66> col:35 used t 'const struct xt_standard_target *' cinit
|   |   `-ImplicitCastExpr 0x149026e98 <col:39, col:66> 'const struct xt_standard_target *' <BitCast>
|   |     `-CStyleCastExpr 0x149026e70 <col:39, col:66> 'void *' <IntegralToPointer>
|   |       `-CallExpr 0x149026e18 <col:47, col:66> 'int'
|   |         |-ImplicitCastExpr 0x149026e00 <col:47> 'int (*)()' <FunctionToPointerDecay>
|   |         | `-DeclRefExpr 0x149026d90 <col:47> 'int ()' Function 0x149026cd8 'ip6t_get_target_c' 'int ()'
|   |         `-ImplicitCastExpr 0x149026e40 <col:65> 'const struct ip6t_entry *' <LValueToRValue>
|   |           `-DeclRefExpr 0x149026db0 <col:65> 'const struct ip6t_entry *' lvalue ParmVar 0x14900e248 's' 'const struct ip6t_entry *'
|   |-IfStmt 0x148923f40 <line:7:2, line:26:13> has_else
|   | |-BinaryOperator 0x1490273d8 <line:7:6, col:66> 'int' contains-errors '=='
|   | | |-CallExpr 0x1490273a8 <col:6, col:61> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x149027100 <col:6> 'int (const char *, const char *)' Function 0x149026f20 'strcmp' 'int (const char *, const char *)'
|   | | | |-CXXDependentScopeMemberExpr 0x149027258 <col:13, col:40> '<dependent type>' contains-errors lvalue ->name
|   | | | | `-CXXDependentScopeMemberExpr 0x149027210 <col:13, col:32> '<dependent type>' contains-errors lvalue .target
|   | | | |   `-CXXDependentScopeMemberExpr 0x1490271c8 <col:13, col:25> '<dependent type>' contains-errors lvalue .kernel
|   | | | |     `-CXXDependentScopeMemberExpr 0x149027180 <col:13, col:23> '<dependent type>' contains-errors lvalue .u
|   | | | |       `-RecoveryExpr 0x149027158 <col:13, col:16> '<dependent type>' contains-errors lvalue
|   | | | |         `-DeclRefExpr 0x149027120 <col:13> 'const struct xt_standard_target *' lvalue Var 0x149026bf8 't' 'const struct xt_standard_target *'
|   | | | `-RecoveryExpr 0x149027358 <col:46> '<dependent type>' contains-errors lvalue
|   | | `-IntegerLiteral 0x149027318 <col:66> 'int' 0
|   | |-CompoundStmt 0x1490275d8 <col:69, line:11:2>
|   | | |-BinaryOperator 0x1490274f0 <line:9:3, col:26> 'const char *' contains-errors '='
|   | | | |-UnaryOperator 0x149027430 <col:3, col:4> 'const char *' lvalue prefix '*' cannot overflow
|   | | | | `-ImplicitCastExpr 0x149027418 <col:4> 'const char **' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x1490273f8 <col:4> 'const char **' lvalue ParmVar 0x1490266b8 'chainname' 'const char **'
|   | | | `-CXXDependentScopeMemberExpr 0x1490274a8 <col:16, col:26> '<dependent type>' contains-errors lvalue .data
|   | | |   `-RecoveryExpr 0x149027480 <col:16, col:19> '<dependent type>' contains-errors lvalue
|   | | |     `-DeclRefExpr 0x149027448 <col:16> 'const struct xt_standard_target *' lvalue Var 0x149026bf8 't' 'const struct xt_standard_target *'
|   | | `-BinaryOperator 0x1490275b8 <line:10:3, col:16> 'unsigned int' '='
|   | |   |-ParenExpr 0x149027560 <col:3, col:12> 'unsigned int' lvalue
|   | |   | `-UnaryOperator 0x149027548 <col:4, col:5> 'unsigned int' lvalue prefix '*' cannot overflow
|   | |   |   `-ImplicitCastExpr 0x149027530 <col:5> 'unsigned int *' <LValueToRValue>
|   | |   |     `-DeclRefExpr 0x149027510 <col:5> 'unsigned int *' lvalue ParmVar 0x1490267e8 'rulenum' 'unsigned int *'
|   | |   `-ImplicitCastExpr 0x1490275a0 <col:16> 'unsigned int' <IntegralCast>
|   | |     `-IntegerLiteral 0x149027580 <col:16> 'int' 0
|   | `-IfStmt 0x148923f10 <line:11:9, line:26:13> has_else
|   |   |-BinaryOperator 0x148923670 <line:11:13, col:18> 'int' '=='
|   |   | |-ImplicitCastExpr 0x148923640 <col:13> 'const struct ip6t_entry *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x148923600 <col:13> 'const struct ip6t_entry *' lvalue ParmVar 0x14900e248 's' 'const struct ip6t_entry *'
|   |   | `-ImplicitCastExpr 0x148923658 <col:18> 'const struct ip6t_entry *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x148923620 <col:18> 'const struct ip6t_entry *' lvalue ParmVar 0x14900e338 'e' 'const struct ip6t_entry *'
|   |   |-CompoundStmt 0x148923e60 <col:21, line:25:2>
|   |   | |-UnaryOperator 0x148923700 <line:12:3, col:13> 'unsigned int' postfix '++'
|   |   | | `-ParenExpr 0x1489236e0 <col:3, col:12> 'unsigned int' lvalue
|   |   | |   `-UnaryOperator 0x1489236c8 <col:4, col:5> 'unsigned int' lvalue prefix '*' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x1489236b0 <col:5> 'unsigned int *' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x148923690 <col:5> 'unsigned int *' lvalue ParmVar 0x1490267e8 'rulenum' 'unsigned int *'
|   |   | |-IfStmt 0x148923e10 <line:14:3, line:23:3>
|   |   | | |-RecoveryExpr 0x148923c30 <line:14:7, line:18:29> '_Bool' contains-errors
|   |   | | `-CompoundStmt 0x148923e00 <col:32, line:23:3>
|   |   | `-ReturnStmt 0x148923e50 <line:24:3, col:10>
|   |   |   `-IntegerLiteral 0x148923e30 <col:10> 'int' 1
|   |   `-UnaryOperator 0x148923ef8 <line:26:3, col:13> 'unsigned int' postfix '++'
|   |     `-ParenExpr 0x148923ed8 <col:3, col:12> 'unsigned int' lvalue
|   |       `-UnaryOperator 0x148923ec0 <col:4, col:5> 'unsigned int' lvalue prefix '*' cannot overflow
|   |         `-ImplicitCastExpr 0x148923ea8 <col:5> 'unsigned int *' <LValueToRValue>
|   |           `-DeclRefExpr 0x148923e88 <col:5> 'unsigned int *' lvalue ParmVar 0x1490267e8 'rulenum' 'unsigned int *'
|   `-ReturnStmt 0x148923f90 <line:28:2, col:9>
|     `-IntegerLiteral 0x148923f70 <col:9> 'int' 0
`-FunctionDecl 0x149026f20 <line:7:6> col:6 implicit used strcmp 'int (const char *, const char *)' extern
  |-ParmVarDecl 0x149027020 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x149027088 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x149026fc8 <<invalid sloc>> Implicit 887
