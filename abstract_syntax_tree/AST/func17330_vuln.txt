TranslationUnitDecl 0x129055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1290564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x129055bd0 '__int128'
|-TypedefDecl 0x129056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x129055bf0 'unsigned __int128'
|-TypedefDecl 0x129126a30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x129126800 'struct __NSConstantString_tag'
|   `-Record 0x129056580 '__NSConstantString_tag'
|-TypedefDecl 0x129126a98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x129055d90 '__SVInt8_t'
|-TypedefDecl 0x129126b00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x129055db0 '__SVInt16_t'
|-TypedefDecl 0x129126b68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x129055dd0 '__SVInt32_t'
|-TypedefDecl 0x129126bd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x129055df0 '__SVInt64_t'
|-TypedefDecl 0x129126c38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x129055e10 '__SVUint8_t'
|-TypedefDecl 0x129126ca0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x129055e30 '__SVUint16_t'
|-TypedefDecl 0x129126d08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x129055e50 '__SVUint32_t'
|-TypedefDecl 0x129126d70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x129055e70 '__SVUint64_t'
|-TypedefDecl 0x129126dd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x129055e90 '__SVFloat16_t'
|-TypedefDecl 0x129126e40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x129055eb0 '__SVFloat32_t'
|-TypedefDecl 0x129126ea8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x129055ed0 '__SVFloat64_t'
|-TypedefDecl 0x129126f10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x129055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x129126f78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x129055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x129126fe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x129055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x129127048 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x129055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1291270b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x129055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x129127118 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x129055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x129127180 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x129055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1291271e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x129055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x129127250 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x129055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1291272b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x129056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x129127320 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x129056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x129127388 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x129056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1291273f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x129056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x129127458 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x129056090 '__clang_svint8x3_t'
|-TypedefDecl 0x1291274c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1290560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x129127528 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1290560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x129127590 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1290560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x1291275f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x129056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x129127660 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x129056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x1291276c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x129056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x129127730 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x129056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x129127798 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x129056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x129128000 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1290561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x129128068 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1290561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1291280d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1290561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x129128138 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x129056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1291281a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x129056230 '__clang_svint16x4_t'
|-TypedefDecl 0x129128208 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x129056250 '__clang_svint32x4_t'
|-TypedefDecl 0x129128270 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x129056270 '__clang_svint64x4_t'
|-TypedefDecl 0x1291282d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x129056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x129128340 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1290562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1291283a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1290562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x129128410 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1290562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x129128478 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x129056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1291284e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x129056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x129128548 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x129056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1291285b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x129056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x129128618 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x129056390 '__SVBool_t'
|-TypedefDecl 0x129128680 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1290563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1291286e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1290563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x129128750 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1290563f0 '__SVCount_t'
|-TypedefDecl 0x1291287f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1291287b0 'char *'
|   `-BuiltinType 0x1290556b0 'char'
|-TypedefDecl 0x129128868 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1291287b0 'char *'
|   `-BuiltinType 0x1290556b0 'char'
`-FunctionDecl 0x129128b18 <dataset_diviso_filec/func17330_vuln.c:1:1, line:66:1> line:1:1 invalid ripng_print 'int (int *, const char *, unsigned int)'
  |-ParmVarDecl 0x129128928 <col:13, col:33> col:33 invalid ndo 'int *'
  |-ParmVarDecl 0x1291289a8 <col:38, col:52> col:52 used dat 'const char *'
  |-ParmVarDecl 0x129128a28 <col:57, col:70> col:70 used length 'unsigned int'
  `-CompoundStmt 0x1291470b0 <line:2:1, line:66:1>
    |-DeclStmt 0x129128eb0 <line:3:2, col:59>
    | |-RecordDecl 0x129128bd8 <col:17, col:24> col:24 struct rip6
    | `-VarDecl 0x129128d48 <col:2, col:56> col:30 used rp 'const struct rip6 *' register cinit
    |   `-CStyleCastExpr 0x129128e70 <col:35, col:56> 'const struct rip6 *' <BitCast>
    |     `-ImplicitCastExpr 0x129128e58 <col:56> 'const char *' <LValueToRValue> part_of_explicit_cast
    |       `-DeclRefExpr 0x129128db0 <col:56> 'const char *' lvalue ParmVar 0x1291289a8 'dat' 'const char *'
    |-DeclStmt 0x1291430d8 <line:4:2, col:36>
    | |-RecordDecl 0x129128ec8 <col:17, col:24> col:24 struct netinfo6
    | `-VarDecl 0x129143058 <col:2, col:34> col:34 used ni 'const struct netinfo6 *' register
    |-DeclStmt 0x129143170 <line:5:2, col:20>
    | `-VarDecl 0x129143108 <col:2, col:17> col:17 referenced invalid amt 'int' register
    |-DeclStmt 0x129143208 <line:6:2, col:18>
    | `-VarDecl 0x1291431a0 <col:2, col:17> col:17 referenced invalid i 'int' register
    |-DeclStmt 0x1291432a0 <line:7:2, col:7>
    | `-VarDecl 0x129143238 <col:2, col:6> col:6 used j 'int'
    |-DeclStmt 0x129143338 <line:8:2, col:11>
    | `-VarDecl 0x1291432d0 <col:2, col:6> col:6 used trunc 'int'
    |-IfStmt 0x129143408 <line:10:2, line:11:3>
    | |-BinaryOperator 0x1291433d8 <line:10:6, col:25> 'int' contains-errors '<'
    | | |-CXXDependentScopeMemberExpr 0x129143370 <col:6, col:11> '<dependent type>' contains-errors lvalue ->ndo_snapend
    | | | `-RecoveryExpr 0x129143350 <col:6> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x1291433b8 <col:25> 'const char *' lvalue ParmVar 0x1291289a8 'dat' 'const char *'
    | `-ReturnStmt 0x1291433f8 <line:11:3>
    |-BinaryOperator 0x129143518 <line:12:2, col:27> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x129143448 <col:2> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x129143428 <col:2> 'int' lvalue Var 0x129143108 'amt' 'int'
    | `-BinaryOperator 0x1291434f8 <col:8, col:27> '<dependent type>' contains-errors '-'
    |   |-CXXDependentScopeMemberExpr 0x129143490 <col:8, col:13> '<dependent type>' contains-errors lvalue ->ndo_snapend
    |   | `-RecoveryExpr 0x129143470 <col:8> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x1291434d8 <col:27> 'const char *' lvalue ParmVar 0x1291289a8 'dat' 'const char *'
    |-BinaryOperator 0x129143770 <line:13:2, col:21> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x129143558 <col:2> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x129143538 <col:2> 'int' lvalue Var 0x1291431a0 'i' 'int'
    | `-CallExpr 0x129143740 <col:6, col:21> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1291436e0 <col:6> 'int ()' Function 0x129143628 'min' 'int ()'
    |   |-DeclRefExpr 0x129143700 <col:10> 'unsigned int' lvalue ParmVar 0x129128a28 'length' 'unsigned int'
    |   `-RecoveryExpr 0x129143720 <col:18> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x129143c70 <line:14:2, line:15:3>
    | |-RecoveryExpr 0x129143c40 <line:14:6, col:56> '_Bool' contains-errors
    | `-ReturnStmt 0x129143c60 <line:15:3>
    |-SwitchStmt 0x129143d90 <line:18:2, line:63:2>
    | |-ImplicitCastExpr 0x129143d78 <line:18:10, col:14> '<dependent type>' contains-errors <LValueToRValue>
    | | `-RecoveryExpr 0x129143d50 <col:10, col:14> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x129143d18 <col:10> 'const struct rip6 *' lvalue Var 0x129128d48 'rp' 'const struct rip6 *'
    | `-CompoundStmt 0x129146e70 <col:24, line:63:2>
    |   |-IfStmt 0x129144b10 <line:22:3, line:27:3>
    |   | |-BinaryOperator 0x1291448d8 <line:22:7, line:24:60> 'int' contains-errors '&&'
    |   | | |-BinaryOperator 0x1291448b8 <line:22:7, line:23:41> 'int' contains-errors '&&'
    |   | | | |-BinaryOperator 0x129144858 <line:22:7, col:12> 'int' '=='
    |   | | | | |-ImplicitCastExpr 0x129144840 <col:7> 'int' <LValueToRValue>
    |   | | | | | `-DeclRefExpr 0x129143e80 <col:7> 'int' lvalue Var 0x129143238 'j' 'int'
    |   | | | | `-IntegerLiteral 0x129143ea0 <col:12> 'int' 1
    |   | | | `-BinaryOperator 0x129144898 <line:23:11, col:41> 'int' contains-errors '=='
    |   | | |   |-CXXDependentScopeMemberExpr 0x129143f58 <col:11, col:26> '<dependent type>' contains-errors lvalue ->rip6_metric
    |   | | |   | `-RecoveryExpr 0x129143f30 <col:11, col:15> '<dependent type>' contains-errors lvalue
    |   | | |   |   `-DeclRefExpr 0x129143ef8 <col:11> 'const struct rip6 *' lvalue Var 0x129128d48 'rp' 'const struct rip6 *'
    |   | | |   `-RecoveryExpr 0x129144878 <col:41> '<dependent type>' contains-errors lvalue
    |   | | `-CallExpr 0x1291447c0 <line:24:11, col:60> '<dependent type>' contains-errors
    |   | |   |-DeclRefExpr 0x1291446e0 <col:11> 'int ()' Function 0x129144628 'IN6_IS_ADDR_UNSPECIFIED' 'int ()'
    |   | |   `-UnaryOperator 0x1291447a8 <col:35, col:51> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | |     `-CXXDependentScopeMemberExpr 0x129144760 <col:36, col:51> '<dependent type>' contains-errors lvalue ->rip6_dest
    |   | |       `-RecoveryExpr 0x129144738 <col:36, col:40> '<dependent type>' contains-errors lvalue
    |   | |         `-DeclRefExpr 0x129144700 <col:36> 'const struct rip6 *' lvalue Var 0x129128d48 'rp' 'const struct rip6 *'
    |   | `-CompoundStmt 0x129144af0 <col:63, line:27:3>
    |   |   |-CallExpr 0x129144ac0 <line:25:4, col:25> '<dependent type>' contains-errors
    |   |   | |-DeclRefExpr 0x1291449d8 <col:4> 'int ()' Function 0x129144920 'ND_PRINT' 'int ()'
    |   |   | `-ParenExpr 0x129144aa0 <col:13, col:24> 'char[4]' contains-errors
    |   |   |   `-BinaryOperator 0x129144a80 <col:14, col:19> 'char[4]' contains-errors ','
    |   |   |     |-RecoveryExpr 0x1291449f8 <col:14> '<dependent type>' contains-errors lvalue
    |   |   |     `-StringLiteral 0x129144a60 <col:19> 'char[4]' lvalue "STR"
    |   |   `-BreakStmt 0x129144ae8 <line:26:4>
    |   |-IfStmt 0x129144ec0 <line:28:3, line:31:28> has_else
    |   | |-RecoveryExpr 0x129144c50 <line:28:7, col:35> '_Bool' contains-errors
    |   | |-CallExpr 0x129144d90 <line:29:4, col:36> '<dependent type>' contains-errors
    |   | | |-DeclRefExpr 0x129144c70 <col:4> 'int ()' Function 0x129144920 'ND_PRINT' 'int ()'
    |   | | `-ParenExpr 0x129144d70 <col:13, col:35> 'unsigned int' contains-errors
    |   | |   `-BinaryOperator 0x129144d50 <col:14, col:29> 'unsigned int' contains-errors ','
    |   | |     |-BinaryOperator 0x129144d10 <col:14, col:26> 'int' contains-errors ','
    |   | |     | |-BinaryOperator 0x129144cd0 <col:14, col:19> 'char[4]' contains-errors ','
    |   | |     | | |-RecoveryExpr 0x129144c90 <col:14> '<dependent type>' contains-errors lvalue
    |   | |     | | `-StringLiteral 0x129144cb0 <col:19> 'char[4]' lvalue "STR"
    |   | |     | `-DeclRefExpr 0x129144cf0 <col:26> 'int' lvalue Var 0x129143238 'j' 'int'
    |   | |     `-DeclRefExpr 0x129144d30 <col:29> 'unsigned int' lvalue ParmVar 0x129128a28 'length' 'unsigned int'
    |   | `-CallExpr 0x129144e98 <line:31:4, col:28> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x129144db8 <col:4> 'int ()' Function 0x129144920 'ND_PRINT' 'int ()'
    |   |   `-ParenExpr 0x129144e78 <col:13, col:27> 'int' contains-errors
    |   |     `-BinaryOperator 0x129144e58 <col:14, col:26> 'int' contains-errors ','
    |   |       |-BinaryOperator 0x129144e18 <col:14, col:19> 'char[4]' contains-errors ','
    |   |       | |-RecoveryExpr 0x129144dd8 <col:14> '<dependent type>' contains-errors lvalue
    |   |       | `-StringLiteral 0x129144df8 <col:19> 'char[4]' lvalue "STR"
    |   |       `-DeclRefExpr 0x129144e38 <col:26> 'int' lvalue Var 0x129143238 'j' 'int'
    |   |-BreakStmt 0x129146058 <line:41:3>
    |   |-IfStmt 0x1291464a0 <line:44:3, line:47:28> has_else
    |   | |-RecoveryExpr 0x129146230 <line:44:7, col:35> '_Bool' contains-errors
    |   | |-CallExpr 0x129146370 <line:45:4, col:36> '<dependent type>' contains-errors
    |   | | |-DeclRefExpr 0x129146250 <col:4> 'int ()' Function 0x129144920 'ND_PRINT' 'int ()'
    |   | | `-ParenExpr 0x129146350 <col:13, col:35> 'unsigned int' contains-errors
    |   | |   `-BinaryOperator 0x129146330 <col:14, col:29> 'unsigned int' contains-errors ','
    |   | |     |-BinaryOperator 0x1291462f0 <col:14, col:26> 'int' contains-errors ','
    |   | |     | |-BinaryOperator 0x1291462b0 <col:14, col:19> 'char[4]' contains-errors ','
    |   | |     | | |-RecoveryExpr 0x129146270 <col:14> '<dependent type>' contains-errors lvalue
    |   | |     | | `-StringLiteral 0x129146290 <col:19> 'char[4]' lvalue "STR"
    |   | |     | `-DeclRefExpr 0x1291462d0 <col:26> 'int' lvalue Var 0x129143238 'j' 'int'
    |   | |     `-DeclRefExpr 0x129146310 <col:29> 'unsigned int' lvalue ParmVar 0x129128a28 'length' 'unsigned int'
    |   | `-CallExpr 0x129146478 <line:47:4, col:28> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x129146398 <col:4> 'int ()' Function 0x129144920 'ND_PRINT' 'int ()'
    |   |   `-ParenExpr 0x129146458 <col:13, col:27> 'int' contains-errors
    |   |     `-BinaryOperator 0x129146438 <col:14, col:26> 'int' contains-errors ','
    |   |       |-BinaryOperator 0x1291463f8 <col:14, col:19> 'char[4]' contains-errors ','
    |   |       | |-RecoveryExpr 0x1291463b8 <col:14> '<dependent type>' contains-errors lvalue
    |   |       | `-StringLiteral 0x1291463d8 <col:19> 'char[4]' lvalue "STR"
    |   |       `-DeclRefExpr 0x129146418 <col:26> 'int' lvalue Var 0x129143238 'j' 'int'
    |   |-IfStmt 0x129146c98 <line:57:3, line:58:25>
    |   | |-ImplicitCastExpr 0x129146bb8 <line:57:7> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x129146b98 <col:7> 'int' lvalue Var 0x1291432d0 'trunc' 'int'
    |   | `-CallExpr 0x129146c70 <line:58:4, col:25> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x129146bd0 <col:4> 'int ()' Function 0x129144920 'ND_PRINT' 'int ()'
    |   |   `-ParenExpr 0x129146c50 <col:13, col:24> 'char[4]' contains-errors
    |   |     `-BinaryOperator 0x129146c30 <col:14, col:19> 'char[4]' contains-errors ','
    |   |       |-RecoveryExpr 0x129146bf0 <col:14> '<dependent type>' contains-errors lvalue
    |   |       `-StringLiteral 0x129146c10 <col:19> 'char[4]' lvalue "STR"
    |   |-BreakStmt 0x129146cb8 <line:59:3>
    |   |-DefaultStmt 0x129146e48 <line:60:2, line:61:46>
    |   | `-CallExpr 0x129146e20 <col:3, col:46> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x129146cc0 <col:3> 'int ()' Function 0x129144920 'ND_PRINT' 'int ()'
    |   |   `-ParenExpr 0x129146e00 <col:12, col:45> 'unsigned int' contains-errors
    |   |     `-BinaryOperator 0x129146de0 <col:13, col:39> 'unsigned int' contains-errors ','
    |   |       |-BinaryOperator 0x129146da0 <col:13, col:29> '<dependent type>' contains-errors ','
    |   |       | |-BinaryOperator 0x129146d20 <col:13, col:18> 'char[4]' contains-errors ','
    |   |       | | |-RecoveryExpr 0x129146ce0 <col:13> '<dependent type>' contains-errors lvalue
    |   |       | | `-StringLiteral 0x129146d00 <col:18> 'char[4]' lvalue "STR"
    |   |       | `-RecoveryExpr 0x129146d78 <col:25, col:29> '<dependent type>' contains-errors lvalue
    |   |       |   `-DeclRefExpr 0x129146d40 <col:25> 'const struct rip6 *' lvalue Var 0x129128d48 'rp' 'const struct rip6 *'
    |   |       `-DeclRefExpr 0x129146dc0 <col:39> 'unsigned int' lvalue ParmVar 0x129128a28 'length' 'unsigned int'
    |   `-BreakStmt 0x129146e68 <line:62:3>
    `-IfStmt 0x129147090 <line:64:2, line:65:39>
      |-RecoveryExpr 0x129146f20 <line:64:6, col:23> '_Bool' contains-errors
      `-CallExpr 0x129147068 <line:65:3, col:39> '<dependent type>' contains-errors
        |-DeclRefExpr 0x129146f40 <col:3> 'int ()' Function 0x129144920 'ND_PRINT' 'int ()'
        `-ParenExpr 0x129147048 <col:12, col:38> '<dependent type>' contains-errors
          `-BinaryOperator 0x129147028 <col:13, col:29> '<dependent type>' contains-errors ','
            |-BinaryOperator 0x129146fa0 <col:13, col:18> 'char[4]' contains-errors ','
            | |-RecoveryExpr 0x129146f60 <col:13> '<dependent type>' contains-errors lvalue
            | `-StringLiteral 0x129146f80 <col:18> 'char[4]' lvalue "STR"
            `-RecoveryExpr 0x129147000 <col:25, col:29> '<dependent type>' contains-errors lvalue
              `-DeclRefExpr 0x129146fc0 <col:25> 'const struct rip6 *' lvalue Var 0x129128d48 'rp' 'const struct rip6 *'
