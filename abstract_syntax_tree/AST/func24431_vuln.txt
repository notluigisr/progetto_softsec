TranslationUnitDecl 0x156855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1568564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x156855bd0 '__int128'
|-TypedefDecl 0x156856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x156855bf0 'unsigned __int128'
|-TypedefDecl 0x15700be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15700bc00 'struct __NSConstantString_tag'
|   `-Record 0x156856580 '__NSConstantString_tag'
|-TypedefDecl 0x15700be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x156855d90 '__SVInt8_t'
|-TypedefDecl 0x15700bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x156855db0 '__SVInt16_t'
|-TypedefDecl 0x15700bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x156855dd0 '__SVInt32_t'
|-TypedefDecl 0x15700bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x156855df0 '__SVInt64_t'
|-TypedefDecl 0x15700c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x156855e10 '__SVUint8_t'
|-TypedefDecl 0x15700c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x156855e30 '__SVUint16_t'
|-TypedefDecl 0x15700c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x156855e50 '__SVUint32_t'
|-TypedefDecl 0x15700c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x156855e70 '__SVUint64_t'
|-TypedefDecl 0x15700c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x156855e90 '__SVFloat16_t'
|-TypedefDecl 0x15700c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x156855eb0 '__SVFloat32_t'
|-TypedefDecl 0x15700c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x156855ed0 '__SVFloat64_t'
|-TypedefDecl 0x15700c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x156855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15700c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x156855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15700c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x156855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15700c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x156855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15700c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x156855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15700c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x156855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15700c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x156855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15700c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x156855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15700c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x156855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15700c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x156856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15700c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x156856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15700c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x156856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15700c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x156856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15700c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x156856090 '__clang_svint8x3_t'
|-TypedefDecl 0x15700c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1568560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15700c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1568560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15700c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1568560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15700c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x156856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15700ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x156856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15700cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x156856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15700cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x156856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15700cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x156856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15700d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1568561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15700d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1568561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15700d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1568561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15700d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x156856210 '__clang_svint8x4_t'
|-TypedefDecl 0x15700d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x156856230 '__clang_svint16x4_t'
|-TypedefDecl 0x15700d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x156856250 '__clang_svint32x4_t'
|-TypedefDecl 0x15700d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x156856270 '__clang_svint64x4_t'
|-TypedefDecl 0x15700d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x156856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15700d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1568562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15700d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1568562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15700d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1568562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15700d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x156856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15700d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x156856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15700d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x156856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15700d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x156856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15700da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x156856390 '__SVBool_t'
|-TypedefDecl 0x15700da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1568563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15700dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1568563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15700db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1568563f0 '__SVCount_t'
|-TypedefDecl 0x15700dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15700dbb0 'char *'
|   `-BuiltinType 0x1568556b0 'char'
|-TypedefDecl 0x15700dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15700dbb0 'char *'
|   `-BuiltinType 0x1568556b0 'char'
|-FunctionDecl 0x15700e0c8 <dataset_diviso_filec/func24431_vuln.c:1:1, line:40:1> line:1:12 invalid fit_image_verify_sig 'int (const void *, int, const char *, int, const void *, int)' static
| |-ParmVarDecl 0x15700dd08 <col:33, col:45> col:45 used fit 'const void *'
| |-ParmVarDecl 0x15700dd88 <col:50, col:54> col:54 used image_noffset 'int'
| |-ParmVarDecl 0x15700de08 <line:2:5, col:17> col:17 used data 'const char *'
| |-ParmVarDecl 0x15700dea0 <col:23, col:30> col:30 invalid size 'int'
| |-ParmVarDecl 0x15700df20 <line:3:5, col:17> col:17 sig_blob 'const void *'
| |-ParmVarDecl 0x15700dfa0 <col:27, col:31> col:31 sig_offset 'int'
| `-CompoundStmt 0x157029af8 <line:4:1, line:40:1>
|   |-DeclStmt 0x15700e220 <line:5:2, col:13>
|   | `-VarDecl 0x15700e1b8 <col:2, col:6> col:6 used noffset 'int'
|   |-DeclStmt 0x15700e330 <line:6:2, col:20>
|   | `-VarDecl 0x15700e250 <col:2, col:18> col:8 used err_msg 'char *' cinit
|   |   `-ImplicitCastExpr 0x15700e318 <col:18> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x15700e300 <col:18> 'char[1]' lvalue ""
|   |-DeclStmt 0x15700e3e8 <line:7:2, col:18>
|   | `-VarDecl 0x15700e360 <col:2, col:17> col:6 used verified 'int' cinit
|   |   `-IntegerLiteral 0x15700e3c8 <col:17> 'int' 0
|   |-DeclStmt 0x157027480 <line:8:2, col:9>
|   | `-VarDecl 0x157027418 <col:2, col:6> col:6 used ret 'int'
|   |-CallExpr 0x1570276b8 <line:11:2, col:50> 'int'
|   | |-ImplicitCastExpr 0x1570276a0 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1570275f0 <col:2> 'int ()' Function 0x157027538 'fdt_for_each_subnode' 'int ()'
|   | |-ImplicitCastExpr 0x1570276f0 <col:23> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x157027610 <col:23> 'int' lvalue Var 0x15700e1b8 'noffset' 'int'
|   | |-ImplicitCastExpr 0x157027708 <col:32> 'const void *' <LValueToRValue>
|   | | `-DeclRefExpr 0x157027630 <col:32> 'const void *' lvalue ParmVar 0x15700dd08 'fit' 'const void *'
|   | `-ImplicitCastExpr 0x157027720 <col:37> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x157027650 <col:37> 'int' lvalue ParmVar 0x15700dd88 'image_noffset' 'int'
|   |-CompoundStmt 0x1570290c8 <col:52, line:26:2>
|   | |-DeclStmt 0x1570279a0 <line:12:3, col:54>
|   | | `-VarDecl 0x157027750 <col:3, col:53> col:15 used name 'const char *' cinit
|   | |   `-CallExpr 0x157027968 <col:22, col:53> '<dependent type>' contains-errors
|   | |     |-DeclRefExpr 0x157027898 <col:22> 'int ()' Function 0x1570277e0 'fit_get_name' 'int ()'
|   | |     |-DeclRefExpr 0x1570278b8 <col:35> 'const void *' lvalue ParmVar 0x15700dd08 'fit' 'const void *'
|   | |     |-DeclRefExpr 0x1570278d8 <col:40> 'int' lvalue Var 0x15700e1b8 'noffset' 'int'
|   | |     `-RecoveryExpr 0x157027948 <col:49> '<dependent type>' contains-errors lvalue
|   | `-IfStmt 0x1570290a8 <line:14:3, line:25:3>
|   |   |-UnaryOperator 0x157028a68 <line:14:7, line:15:33> '<dependent type>' contains-errors prefix '!' cannot overflow
|   |   | `-CallExpr 0x157028a30 <line:14:8, line:15:33> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x157028080 <line:14:8> 'int (const char *, const char *, unsigned long)' Function 0x157027e30 'strncmp' 'int (const char *, const char *, unsigned long)'
|   |   |   |-DeclRefExpr 0x1570280a0 <col:16> 'const char *' contains-errors lvalue Var 0x157027750 'name' 'const char *'
|   |   |   |-RecoveryExpr 0x157028380 <col:22> '<dependent type>' contains-errors lvalue
|   |   |   `-CallExpr 0x1570283d8 <line:15:9, col:32> '<dependent type>' contains-errors
|   |   |     |-DeclRefExpr 0x157028288 <col:9> 'unsigned long (const char *)' Function 0x157028118 'strlen' 'unsigned long (const char *)'
|   |   |     `-RecoveryExpr 0x1570283a0 <col:16> '<dependent type>' contains-errors lvalue
|   |   `-CompoundStmt 0x157029088 <col:36, line:25:3>
|   |     |-BinaryOperator 0x157028d18 <line:16:4, line:17:27> 'int' contains-errors '='
|   |     | |-DeclRefExpr 0x157028a80 <line:16:4> 'int' lvalue Var 0x157027418 'ret' 'int'
|   |     | `-CallExpr 0x157028cc8 <col:10, line:17:27> '<dependent type>' contains-errors
|   |     |   |-DeclRefExpr 0x157028b80 <line:16:10> 'int ()' Function 0x157028ac8 'fit_image_check_sig' 'int ()'
|   |     |   |-DeclRefExpr 0x157028ba0 <col:30> 'const void *' lvalue ParmVar 0x15700dd08 'fit' 'const void *'
|   |     |   |-DeclRefExpr 0x157028bc0 <col:35> 'int' lvalue Var 0x15700e1b8 'noffset' 'int'
|   |     |   |-DeclRefExpr 0x157028be0 <col:44> 'const char *' lvalue ParmVar 0x15700de08 'data' 'const char *'
|   |     |   |-RecoveryExpr 0x157028c00 <line:17:9> '<dependent type>' contains-errors lvalue
|   |     |   |-UnaryOperator 0x157028c40 <col:15, col:16> 'int' prefix '-'
|   |     |   | `-IntegerLiteral 0x157028c20 <col:16> 'int' 1
|   |     |   `-UnaryOperator 0x157028cb0 <col:19, col:20> 'char **' prefix '&' cannot overflow
|   |     |     `-DeclRefExpr 0x157028c58 <col:20> 'char *' lvalue Var 0x15700e250 'err_msg' 'char *'
|   |     `-IfStmt 0x157029058 <line:18:4, line:24:4> has_else
|   |       |-ImplicitCastExpr 0x157028d58 <line:18:8> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x157028d38 <col:8> 'int' lvalue Var 0x157027418 'ret' 'int'
|   |       |-CompoundStmt 0x157028f28 <col:13, line:20:4>
|   |       | `-CallExpr 0x157028ee8 <line:19:5, col:15> 'int'
|   |       |   |-ImplicitCastExpr 0x157028ed0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   |       |   | `-DeclRefExpr 0x157028e50 <col:5> 'int ()' Function 0x157028d98 'puts' 'int ()'
|   |       |   `-ImplicitCastExpr 0x157028f10 <col:10> 'char *' <ArrayToPointerDecay>
|   |       |     `-StringLiteral 0x157028eb0 <col:10> 'char[4]' lvalue "STR"
|   |       `-CompoundStmt 0x157029038 <line:20:11, line:24:4>
|   |         |-CallExpr 0x157028f98 <line:21:5, col:15> 'int'
|   |         | |-ImplicitCastExpr 0x157028f80 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   |         | | `-DeclRefExpr 0x157028f40 <col:5> 'int ()' Function 0x157028d98 'puts' 'int ()'
|   |         | `-ImplicitCastExpr 0x157028fc0 <col:10> 'char *' <ArrayToPointerDecay>
|   |         |   `-StringLiteral 0x157028f60 <col:10> 'char[4]' lvalue "STR"
|   |         `-BinaryOperator 0x157029018 <line:22:5, col:16> 'int' '='
|   |           |-DeclRefExpr 0x157028fd8 <col:5> 'int' lvalue Var 0x15700e360 'verified' 'int'
|   |           `-IntegerLiteral 0x157028ff8 <col:16> 'int' 1
|   |-IfStmt 0x157029418 <line:28:2, line:31:2>
|   | |-BinaryOperator 0x1570292f8 <line:28:6, col:51> 'int' contains-errors '||'
|   | | |-BinaryOperator 0x157029268 <col:6, col:18> 'int' contains-errors '=='
|   | | | |-DeclRefExpr 0x1570290e8 <col:6> 'int' lvalue Var 0x15700e1b8 'noffset' 'int'
|   | | | `-UnaryOperator 0x157029250 <col:17, col:18> '<dependent type>' contains-errors prefix '-' cannot overflow
|   | | |   `-ImplicitCastExpr 0x157029238 <col:18> '<dependent type>' contains-errors <LValueToRValue>
|   | | |     `-RecoveryExpr 0x157029218 <col:18> '<dependent type>' contains-errors lvalue
|   | | `-BinaryOperator 0x1570292d8 <col:39, col:51> 'int' contains-errors '=='
|   | |   |-DeclRefExpr 0x157029170 <col:39> 'int' lvalue Var 0x15700e1b8 'noffset' 'int'
|   | |   `-UnaryOperator 0x1570292c0 <col:50, col:51> '<dependent type>' contains-errors prefix '-' cannot overflow
|   | |     `-ImplicitCastExpr 0x1570292a8 <col:51> '<dependent type>' contains-errors <LValueToRValue>
|   | |       `-RecoveryExpr 0x157029288 <col:51> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x1570293f8 <col:73, line:31:2>
|   |   |-BinaryOperator 0x157029370 <line:29:3, col:13> 'char *' '='
|   |   | |-DeclRefExpr 0x157029318 <col:3> 'char *' lvalue Var 0x15700e250 'err_msg' 'char *'
|   |   | `-ImplicitCastExpr 0x157029358 <col:13> 'char *' <ArrayToPointerDecay>
|   |   |   `-StringLiteral 0x157029338 <col:13> 'char[4]' lvalue "STR"
|   |   `-GotoStmt 0x1570293e0 <line:30:3, col:8> 'error' 0x157029390
|   |-ReturnStmt 0x157029570 <line:33:2, col:25>
|   | `-ConditionalOperator 0x157029540 <col:9, col:25> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x157029438 <col:9> 'int' lvalue Var 0x15700e360 'verified' 'int'
|   |   |-IntegerLiteral 0x157029458 <col:20> 'int' 0
|   |   `-UnaryOperator 0x157029528 <col:24, col:25> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |     `-ImplicitCastExpr 0x157029510 <col:25> '<dependent type>' contains-errors <LValueToRValue>
|   |       `-RecoveryExpr 0x1570294f0 <col:25> '<dependent type>' contains-errors lvalue
|   |-LabelStmt 0x157029a90 <line:35:1, line:38:47> 'error'
|   | `-CallExpr 0x157029a50 <line:36:2, line:38:47> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x157029768 <line:36:2> 'int (const char *, ...)' Function 0x1570295c0 'printf' 'int (const char *, ...)'
|   |   |-StringLiteral 0x157029788 <col:9> 'char[4]' lvalue "STR"
|   |   |-DeclRefExpr 0x1570297a8 <line:37:9> 'char *' lvalue Var 0x15700e250 'err_msg' 'char *'
|   |   |-CallExpr 0x1570299a0 <col:18, col:49> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x1570297c8 <col:18> 'int ()' Function 0x1570277e0 'fit_get_name' 'int ()'
|   |   | |-DeclRefExpr 0x1570297e8 <col:31> 'const void *' lvalue ParmVar 0x15700dd08 'fit' 'const void *'
|   |   | |-DeclRefExpr 0x157029808 <col:36> 'int' lvalue Var 0x15700e1b8 'noffset' 'int'
|   |   | `-RecoveryExpr 0x157029980 <col:45> '<dependent type>' contains-errors lvalue
|   |   `-CallExpr 0x157029a00 <line:38:9, col:46> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x157029878 <col:9> 'int ()' Function 0x1570277e0 'fit_get_name' 'int ()'
|   |     |-DeclRefExpr 0x157029898 <col:22> 'const void *' lvalue ParmVar 0x15700dd08 'fit' 'const void *'
|   |     |-DeclRefExpr 0x1570298b8 <col:27> 'int' lvalue ParmVar 0x15700dd88 'image_noffset' 'int'
|   |     `-RecoveryExpr 0x1570299d8 <col:42> '<dependent type>' contains-errors lvalue
|   `-ReturnStmt 0x157029ae8 <line:39:2, col:10>
|     `-UnaryOperator 0x157029ad0 <col:9, col:10> 'int' prefix '-'
|       `-IntegerLiteral 0x157029ab0 <col:10> 'int' 1
|-FunctionDecl 0x157027e30 <line:14:8> col:8 implicit used strncmp 'int (const char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0x157027f30 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x157027f98 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x157028000 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x157027ed8 <<invalid sloc>> Implicit 888
|-FunctionDecl 0x157028118 <line:15:9> col:9 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x157028218 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x1570281c0 <<invalid sloc>> Implicit 902
`-FunctionDecl 0x1570295c0 <line:36:2> col:2 implicit used printf 'int (const char *, ...)' extern
  |-ParmVarDecl 0x1570296c0 <<invalid sloc>> <invalid sloc> 'const char *'
  |-BuiltinAttr 0x157029668 <<invalid sloc>> Implicit 903
  `-FormatAttr 0x157029730 <col:2> Implicit printf 1 2
