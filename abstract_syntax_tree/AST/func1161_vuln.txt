TranslationUnitDecl 0x12e055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12e0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12e055bd0 '__int128'
|-TypedefDecl 0x12e056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12e055bf0 'unsigned __int128'
|-TypedefDecl 0x12e126e30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12e126c00 'struct __NSConstantString_tag'
|   `-Record 0x12e056580 '__NSConstantString_tag'
|-TypedefDecl 0x12e126e98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12e055d90 '__SVInt8_t'
|-TypedefDecl 0x12e126f00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12e055db0 '__SVInt16_t'
|-TypedefDecl 0x12e126f68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12e055dd0 '__SVInt32_t'
|-TypedefDecl 0x12e126fd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12e055df0 '__SVInt64_t'
|-TypedefDecl 0x12e127038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12e055e10 '__SVUint8_t'
|-TypedefDecl 0x12e1270a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12e055e30 '__SVUint16_t'
|-TypedefDecl 0x12e127108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12e055e50 '__SVUint32_t'
|-TypedefDecl 0x12e127170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12e055e70 '__SVUint64_t'
|-TypedefDecl 0x12e1271d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12e055e90 '__SVFloat16_t'
|-TypedefDecl 0x12e127240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12e055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12e1272a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12e055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12e127310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12e055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12e127378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12e055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12e1273e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12e055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12e127448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12e055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12e1274b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12e055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12e127518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12e055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12e127580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12e055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12e1275e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12e055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12e127650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12e055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12e1276b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12e056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12e127720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12e056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12e127788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12e056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12e1277f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12e056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12e127858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12e056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12e1278c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12e0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12e127928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12e0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12e127990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12e0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12e1279f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12e056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12e127a60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12e056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12e127ac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12e056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12e127b30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12e056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12e127b98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12e056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12e128400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12e0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12e128468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12e0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12e1284d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12e0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12e128538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12e056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12e1285a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12e056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12e128608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12e056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12e128670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12e056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12e1286d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12e056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12e128740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12e0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12e1287a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12e0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12e128810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12e0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12e128878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12e056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12e1288e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12e056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12e128948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12e056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12e1289b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12e056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12e128a18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12e056390 '__SVBool_t'
|-TypedefDecl 0x12e128a80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12e0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12e128ae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12e0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12e128b50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12e0563f0 '__SVCount_t'
|-TypedefDecl 0x12e128bf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12e128bb0 'char *'
|   `-BuiltinType 0x12e0556b0 'char'
|-TypedefDecl 0x12e128c68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12e128bb0 'char *'
|   `-BuiltinType 0x12e0556b0 'char'
|-FunctionDecl 0x12e128ec8 <dataset_diviso_filec/func1161_vuln.c:1:1, line:73:1> line:1:18 invalid wstunnel_handler_setup 'int (int *const, int *const)' static
| |-ParmVarDecl 0x12e128d28 <col:42, col:61> col:61 invalid r 'int *const'
| |-ParmVarDecl 0x12e128da8 <col:64, col:84> col:84 invalid p 'int *const'
| `-CompoundStmt 0x12e143d68 <col:87, line:73:1>
|   |-DeclStmt 0x12e129138 <line:3:5, col:17>
|   | `-VarDecl 0x12e1290d0 <col:5, col:9> col:9 used hybivers 'int'
|   |-BinaryOperator 0x12e8096d8 <line:6:5, col:46> 'int' contains-errors '='
|   | |-DeclRefExpr 0x12e129268 <col:5> 'int' lvalue Var 0x12e1290d0 'hybivers' 'int'
|   | `-CallExpr 0x12e8096a8 <col:16, col:46> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x12e1293e0 <col:16> 'int ()' Function 0x12e129328 'wstunnel_check_request' 'int ()'
|   |   |-RecoveryExpr 0x12e809600 <col:39> '<dependent type>' contains-errors lvalue
|   |   `-RecoveryExpr 0x12e809688 <col:42> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x12e8097b8 <line:7:5, col:30>
|   | |-BinaryOperator 0x12e809750 <col:9, col:20> 'int' '<'
|   | | |-ImplicitCastExpr 0x12e809738 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x12e8096f8 <col:9> 'int' lvalue Var 0x12e1290d0 'hybivers' 'int'
|   | | `-IntegerLiteral 0x12e809718 <col:20> 'int' 0
|   | `-ReturnStmt 0x12e8097a8 <col:23, col:30>
|   |   `-RecoveryExpr 0x12e809788 <col:30> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x12e809b60 <line:9:5, line:14:5> has_else
|   | |-BinaryOperator 0x12e809850 <line:9:9, col:14> 'int' '=='
|   | | |-IntegerLiteral 0x12e8097f8 <col:9> 'int' 0
|   | | `-ImplicitCastExpr 0x12e809838 <col:14> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x12e809818 <col:14> 'int' lvalue Var 0x12e1290d0 'hybivers' 'int'
|   | |-CompoundStmt 0x12e809a58 <col:24, line:11:5>
|   | | `-CallExpr 0x12e809a18 <line:10:9, col:29> 'int'
|   | |   |-ImplicitCastExpr 0x12e809a00 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x12e809950 <col:9> 'int ()' Function 0x12e809898 'DEBUG_LOG_INFO' 'int ()'
|   | |   `-ImplicitCastExpr 0x12e809a40 <col:24> 'char *' <ArrayToPointerDecay>
|   | |     `-StringLiteral 0x12e8099b0 <col:24> 'char[4]' lvalue "STR"
|   | `-CompoundStmt 0x12e809b48 <line:12:10, line:14:5>
|   |   `-CallExpr 0x12e809ae8 <line:13:9, col:39> 'int'
|   |     |-ImplicitCastExpr 0x12e809ad0 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x12e809a70 <col:9> 'int ()' Function 0x12e809898 'DEBUG_LOG_INFO' 'int ()'
|   |     |-ImplicitCastExpr 0x12e809b18 <col:24> 'char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x12e809a90 <col:24> 'char[4]' lvalue "STR"
|   |     `-ImplicitCastExpr 0x12e809b30 <col:31> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x12e809ab0 <col:31> 'int' lvalue Var 0x12e1290d0 'hybivers' 'int'
|   |-DeclStmt 0x12e809e08 <line:29:5, col:48>
|   | `-VarDecl 0x12e809da0 <col:5, col:18> col:18 used binary 'unsigned int'
|   |-IfStmt 0x12e143b80 <line:30:5, line:57:5>
|   | |-UnaryOperator 0x12e809e58 <line:30:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x12e809e40 <col:10> 'unsigned int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x12e809e20 <col:10> 'unsigned int' lvalue Var 0x12e809da0 'binary' 'unsigned int'
|   | `-CompoundStmt 0x12e143b60 <col:18, line:57:5>
|   |   |-DeclStmt 0x12e80a188 <line:31:9, line:32:78>
|   |   | `-VarDecl 0x12e809e88 <line:31:9, col:23> col:23 invalid vb 'const int *'
|   |   `-IfStmt 0x12e143b40 <line:33:9, line:56:9>
|   |     |-RecoveryExpr 0x12e80a1c0 <line:33:13, col:21> '_Bool' contains-errors
|   |     `-CompoundStmt 0x12e143b28 <col:25, line:56:9>
|   |       `-ForStmt 0x12e143af0 <line:34:13, line:55:13>
|   |         |-DeclStmt 0x12e80a2c8 <line:34:18, col:41>
|   |         | `-VarDecl 0x12e80a1f8 <col:18, col:38> col:30 used s 'const char *' cinit
|   |         |   `-CXXDependentScopeMemberExpr 0x12e80a280 <col:34, col:38> '<dependent type>' contains-errors lvalue ->ptr
|   |         |     `-RecoveryExpr 0x12e80a260 <col:34> '<dependent type>' contains-errors lvalue
|   |         |-<<<NULL>>>
|   |         |-ImplicitCastExpr 0x12e80a330 <col:43, col:44> 'char' contains-errors <LValueToRValue>
|   |         | `-UnaryOperator 0x12e80a318 <col:43, col:44> 'const char' contains-errors lvalue prefix '*' cannot overflow
|   |         |   `-ImplicitCastExpr 0x12e80a300 <col:44> 'const char *' contains-errors <LValueToRValue>
|   |         |     `-DeclRefExpr 0x12e80a2e0 <col:44> 'const char *' contains-errors lvalue Var 0x12e80a1f8 's' 'const char *'
|   |         |-UnaryOperator 0x12e80a368 <col:47, col:49> 'const char *' contains-errors prefix '++'
|   |         | `-DeclRefExpr 0x12e80a348 <col:49> 'const char *' contains-errors lvalue Var 0x12e80a1f8 's' 'const char *'
|   |         `-CompoundStmt 0x12e143ac0 <col:52, line:55:13>
|   |           |-WhileStmt 0x12e142510 <line:35:17, col:65>
|   |           | |-BinaryOperator 0x12e1424b8 <col:24, col:57> 'int' contains-errors '||'
|   |           | | |-BinaryOperator 0x12e80a5c8 <col:24, col:47> 'int' contains-errors '||'
|   |           | | | |-BinaryOperator 0x12e80a4f0 <col:24, col:37> 'int' contains-errors '||'
|   |           | | | | |-BinaryOperator 0x12e80a418 <col:24, col:28> 'int' contains-errors '=='
|   |           | | | | | |-ImplicitCastExpr 0x12e80a400 <col:24, col:25> 'int' contains-errors <IntegralCast>
|   |           | | | | | | `-ImplicitCastExpr 0x12e80a3e8 <col:24, col:25> 'char' contains-errors <LValueToRValue>
|   |           | | | | | |   `-UnaryOperator 0x12e80a3b8 <col:24, col:25> 'const char' contains-errors lvalue prefix '*' cannot overflow
|   |           | | | | | |     `-ImplicitCastExpr 0x12e80a3a0 <col:25> 'const char *' contains-errors <LValueToRValue>
|   |           | | | | | |       `-DeclRefExpr 0x12e80a380 <col:25> 'const char *' contains-errors lvalue Var 0x12e80a1f8 's' 'const char *'
|   |           | | | | | `-CharacterLiteral 0x12e80a3d0 <col:28> 'int' 32
|   |           | | | | `-BinaryOperator 0x12e80a4d0 <col:33, col:37> 'int' contains-errors '=='
|   |           | | | |   |-ImplicitCastExpr 0x12e80a4b8 <col:33, col:34> 'int' contains-errors <IntegralCast>
|   |           | | | |   | `-ImplicitCastExpr 0x12e80a4a0 <col:33, col:34> 'char' contains-errors <LValueToRValue>
|   |           | | | |   |   `-UnaryOperator 0x12e80a470 <col:33, col:34> 'const char' contains-errors lvalue prefix '*' cannot overflow
|   |           | | | |   |     `-ImplicitCastExpr 0x12e80a458 <col:34> 'const char *' contains-errors <LValueToRValue>
|   |           | | | |   |       `-DeclRefExpr 0x12e80a438 <col:34> 'const char *' contains-errors lvalue Var 0x12e80a1f8 's' 'const char *'
|   |           | | | |   `-CharacterLiteral 0x12e80a488 <col:37> 'int' 9
|   |           | | | `-BinaryOperator 0x12e80a5a8 <col:43, col:47> 'int' contains-errors '=='
|   |           | | |   |-ImplicitCastExpr 0x12e80a590 <col:43, col:44> 'int' contains-errors <IntegralCast>
|   |           | | |   | `-ImplicitCastExpr 0x12e80a578 <col:43, col:44> 'char' contains-errors <LValueToRValue>
|   |           | | |   |   `-UnaryOperator 0x12e80a548 <col:43, col:44> 'const char' contains-errors lvalue prefix '*' cannot overflow
|   |           | | |   |     `-ImplicitCastExpr 0x12e80a530 <col:44> 'const char *' contains-errors <LValueToRValue>
|   |           | | |   |       `-DeclRefExpr 0x12e80a510 <col:44> 'const char *' contains-errors lvalue Var 0x12e80a1f8 's' 'const char *'
|   |           | | |   `-CharacterLiteral 0x12e80a560 <col:47> 'int' 13
|   |           | | `-BinaryOperator 0x12e142498 <col:53, col:57> 'int' contains-errors '=='
|   |           | |   |-ImplicitCastExpr 0x12e142480 <col:53, col:54> 'int' contains-errors <IntegralCast>
|   |           | |   | `-ImplicitCastExpr 0x12e142468 <col:53, col:54> 'char' contains-errors <LValueToRValue>
|   |           | |   |   `-UnaryOperator 0x12e142438 <col:53, col:54> 'const char' contains-errors lvalue prefix '*' cannot overflow
|   |           | |   |     `-ImplicitCastExpr 0x12e142420 <col:54> 'const char *' contains-errors <LValueToRValue>
|   |           | |   |       `-DeclRefExpr 0x12e142400 <col:54> 'const char *' contains-errors lvalue Var 0x12e80a1f8 's' 'const char *'
|   |           | |   `-CharacterLiteral 0x12e142450 <col:57> 'int' 10
|   |           | `-UnaryOperator 0x12e1424f8 <col:63, col:65> 'const char *' contains-errors prefix '++'
|   |           |   `-DeclRefExpr 0x12e1424d8 <col:65> 'const char *' contains-errors lvalue Var 0x12e80a1f8 's' 'const char *'
|   |           |-IfStmt 0x12e1436a8 <line:36:17, line:52:17> has_else
|   |           | |-CallExpr 0x12e142700 <line:36:21, col:64> 'int' contains-errors
|   |           | | |-ImplicitCastExpr 0x12e1426e8 <col:21> 'int (*)()' <FunctionToPointerDecay>
|   |           | | | `-DeclRefExpr 0x12e142610 <col:21> 'int ()' Function 0x12e142558 'buffer_eq_icase_ssn' 'int ()'
|   |           | | |-ImplicitCastExpr 0x12e142730 <col:41> 'const char *' contains-errors <LValueToRValue>
|   |           | | | `-DeclRefExpr 0x12e142630 <col:41> 'const char *' contains-errors lvalue Var 0x12e80a1f8 's' 'const char *'
|   |           | | `-CallExpr 0x12e1426a8 <col:44, col:63> 'int'
|   |           | |   |-ImplicitCastExpr 0x12e142690 <col:44> 'int (*)()' <FunctionToPointerDecay>
|   |           | |   | `-DeclRefExpr 0x12e142650 <col:44> 'int ()' Function 0x12e80a038 'CONST_STR_LEN' 'int ()'
|   |           | |   `-ImplicitCastExpr 0x12e1426d0 <col:58> 'char *' <ArrayToPointerDecay>
|   |           | |     `-StringLiteral 0x12e142670 <col:58> 'char[4]' lvalue "STR"
|   |           | |-CompoundStmt 0x12e142e58 <col:67, line:44:17>
|   |           | | |-CompoundAssignOperator 0x12e142820 <line:37:21, col:40> 'const char *' contains-errors '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'
|   |           | | | |-DeclRefExpr 0x12e142748 <col:21> 'const char *' contains-errors lvalue Var 0x12e80a1f8 's' 'const char *'
|   |           | | | `-BinaryOperator 0x12e142800 <col:26, col:40> 'unsigned long' '-'
|   |           | | |   |-UnaryExprOrTypeTraitExpr 0x12e1427a8 <col:26, col:38> 'unsigned long' sizeof
|   |           | | |   | `-ParenExpr 0x12e142788 <col:32, col:38> 'char[4]' lvalue
|   |           | | |   |   `-StringLiteral 0x12e142768 <col:33> 'char[4]' lvalue "STR"
|   |           | | |   `-ImplicitCastExpr 0x12e1427e8 <col:40> 'unsigned long' <IntegralCast>
|   |           | | |     `-IntegerLiteral 0x12e1427c8 <col:40> 'int' 1
|   |           | | |-WhileStmt 0x12e142bc8 <line:38:21, col:69>
|   |           | | | |-BinaryOperator 0x12e142b70 <col:28, col:61> 'int' contains-errors '||'
|   |           | | | | |-BinaryOperator 0x12e142a98 <col:28, col:51> 'int' contains-errors '||'
|   |           | | | | | |-BinaryOperator 0x12e1429c0 <col:28, col:41> 'int' contains-errors '||'
|   |           | | | | | | |-BinaryOperator 0x12e1428e8 <col:28, col:32> 'int' contains-errors '=='
|   |           | | | | | | | |-ImplicitCastExpr 0x12e1428d0 <col:28, col:29> 'int' contains-errors <IntegralCast>
|   |           | | | | | | | | `-ImplicitCastExpr 0x12e1428b8 <col:28, col:29> 'char' contains-errors <LValueToRValue>
|   |           | | | | | | | |   `-UnaryOperator 0x12e142888 <col:28, col:29> 'const char' contains-errors lvalue prefix '*' cannot overflow
|   |           | | | | | | | |     `-ImplicitCastExpr 0x12e142870 <col:29> 'const char *' contains-errors <LValueToRValue>
|   |           | | | | | | | |       `-DeclRefExpr 0x12e142850 <col:29> 'const char *' contains-errors lvalue Var 0x12e80a1f8 's' 'const char *'
|   |           | | | | | | | `-CharacterLiteral 0x12e1428a0 <col:32> 'int' 32
|   |           | | | | | | `-BinaryOperator 0x12e1429a0 <col:37, col:41> 'int' contains-errors '=='
|   |           | | | | | |   |-ImplicitCastExpr 0x12e142988 <col:37, col:38> 'int' contains-errors <IntegralCast>
|   |           | | | | | |   | `-ImplicitCastExpr 0x12e142970 <col:37, col:38> 'char' contains-errors <LValueToRValue>
|   |           | | | | | |   |   `-UnaryOperator 0x12e142940 <col:37, col:38> 'const char' contains-errors lvalue prefix '*' cannot overflow
|   |           | | | | | |   |     `-ImplicitCastExpr 0x12e142928 <col:38> 'const char *' contains-errors <LValueToRValue>
|   |           | | | | | |   |       `-DeclRefExpr 0x12e142908 <col:38> 'const char *' contains-errors lvalue Var 0x12e80a1f8 's' 'const char *'
|   |           | | | | | |   `-CharacterLiteral 0x12e142958 <col:41> 'int' 9
|   |           | | | | | `-BinaryOperator 0x12e142a78 <col:47, col:51> 'int' contains-errors '=='
|   |           | | | | |   |-ImplicitCastExpr 0x12e142a60 <col:47, col:48> 'int' contains-errors <IntegralCast>
|   |           | | | | |   | `-ImplicitCastExpr 0x12e142a48 <col:47, col:48> 'char' contains-errors <LValueToRValue>
|   |           | | | | |   |   `-UnaryOperator 0x12e142a18 <col:47, col:48> 'const char' contains-errors lvalue prefix '*' cannot overflow
|   |           | | | | |   |     `-ImplicitCastExpr 0x12e142a00 <col:48> 'const char *' contains-errors <LValueToRValue>
|   |           | | | | |   |       `-DeclRefExpr 0x12e1429e0 <col:48> 'const char *' contains-errors lvalue Var 0x12e80a1f8 's' 'const char *'
|   |           | | | | |   `-CharacterLiteral 0x12e142a30 <col:51> 'int' 13
|   |           | | | | `-BinaryOperator 0x12e142b50 <col:57, col:61> 'int' contains-errors '=='
|   |           | | | |   |-ImplicitCastExpr 0x12e142b38 <col:57, col:58> 'int' contains-errors <IntegralCast>
|   |           | | | |   | `-ImplicitCastExpr 0x12e142b20 <col:57, col:58> 'char' contains-errors <LValueToRValue>
|   |           | | | |   |   `-UnaryOperator 0x12e142af0 <col:57, col:58> 'const char' contains-errors lvalue prefix '*' cannot overflow
|   |           | | | |   |     `-ImplicitCastExpr 0x12e142ad8 <col:58> 'const char *' contains-errors <LValueToRValue>
|   |           | | | |   |       `-DeclRefExpr 0x12e142ab8 <col:58> 'const char *' contains-errors lvalue Var 0x12e80a1f8 's' 'const char *'
|   |           | | | |   `-CharacterLiteral 0x12e142b08 <col:61> 'int' 10
|   |           | | | `-UnaryOperator 0x12e142bb0 <col:67, col:69> 'const char *' contains-errors prefix '++'
|   |           | | |   `-DeclRefExpr 0x12e142b90 <col:69> 'const char *' contains-errors lvalue Var 0x12e80a1f8 's' 'const char *'
|   |           | | `-IfStmt 0x12e142e38 <line:39:21, line:43:21>
|   |           | |   |-BinaryOperator 0x12e142d58 <line:39:25, col:38> 'int' contains-errors '||'
|   |           | |   | |-BinaryOperator 0x12e142c80 <col:25, col:29> 'int' contains-errors '=='
|   |           | |   | | |-ImplicitCastExpr 0x12e142c68 <col:25, col:26> 'int' contains-errors <IntegralCast>
|   |           | |   | | | `-ImplicitCastExpr 0x12e142c50 <col:25, col:26> 'char' contains-errors <LValueToRValue>
|   |           | |   | | |   `-UnaryOperator 0x12e142c20 <col:25, col:26> 'const char' contains-errors lvalue prefix '*' cannot overflow
|   |           | |   | | |     `-ImplicitCastExpr 0x12e142c08 <col:26> 'const char *' contains-errors <LValueToRValue>
|   |           | |   | | |       `-DeclRefExpr 0x12e142be8 <col:26> 'const char *' contains-errors lvalue Var 0x12e80a1f8 's' 'const char *'
|   |           | |   | | `-CharacterLiteral 0x12e142c38 <col:29> 'int' 44
|   |           | |   | `-BinaryOperator 0x12e142d38 <col:34, col:38> 'int' contains-errors '=='
|   |           | |   |   |-ImplicitCastExpr 0x12e142d20 <col:34, col:35> 'int' contains-errors <IntegralCast>
|   |           | |   |   | `-ImplicitCastExpr 0x12e142d08 <col:34, col:35> 'char' contains-errors <LValueToRValue>
|   |           | |   |   |   `-UnaryOperator 0x12e142cd8 <col:34, col:35> 'const char' contains-errors lvalue prefix '*' cannot overflow
|   |           | |   |   |     `-ImplicitCastExpr 0x12e142cc0 <col:35> 'const char *' contains-errors <LValueToRValue>
|   |           | |   |   |       `-DeclRefExpr 0x12e142ca0 <col:35> 'const char *' contains-errors lvalue Var 0x12e80a1f8 's' 'const char *'
|   |           | |   |   `-CharacterLiteral 0x12e142cf0 <col:38> 'int' 0
|   |           | |   `-CompoundStmt 0x12e142e18 <col:44, line:43:21>
|   |           | |     |-BinaryOperator 0x12e142df0 <line:41:25, col:34> 'unsigned int' '='
|   |           | |     | |-DeclRefExpr 0x12e142d98 <col:25> 'unsigned int' lvalue Var 0x12e809da0 'binary' 'unsigned int'
|   |           | |     | `-ImplicitCastExpr 0x12e142dd8 <col:34> 'unsigned int' <IntegralCast>
|   |           | |     |   `-IntegerLiteral 0x12e142db8 <col:34> 'int' 1
|   |           | |     `-BreakStmt 0x12e142e10 <line:42:25>
|   |           | `-IfStmt 0x12e143688 <line:45:22, line:52:17>
|   |           |   |-CallExpr 0x12e142f70 <line:45:26, col:69> 'int' contains-errors
|   |           |   | |-ImplicitCastExpr 0x12e142f58 <col:26> 'int (*)()' <FunctionToPointerDecay>
|   |           |   | | `-DeclRefExpr 0x12e142e80 <col:26> 'int ()' Function 0x12e142558 'buffer_eq_icase_ssn' 'int ()'
|   |           |   | |-ImplicitCastExpr 0x12e142fa0 <col:46> 'const char *' contains-errors <LValueToRValue>
|   |           |   | | `-DeclRefExpr 0x12e142ea0 <col:46> 'const char *' contains-errors lvalue Var 0x12e80a1f8 's' 'const char *'
|   |           |   | `-CallExpr 0x12e142f18 <col:49, col:68> 'int'
|   |           |   |   |-ImplicitCastExpr 0x12e142f00 <col:49> 'int (*)()' <FunctionToPointerDecay>
|   |           |   |   | `-DeclRefExpr 0x12e142ec0 <col:49> 'int ()' Function 0x12e80a038 'CONST_STR_LEN' 'int ()'
|   |           |   |   `-ImplicitCastExpr 0x12e142f40 <col:63> 'char *' <ArrayToPointerDecay>
|   |           |   |     `-StringLiteral 0x12e142ee0 <col:63> 'char[4]' lvalue "STR"
|   |           |   `-CompoundStmt 0x12e143660 <col:72, line:52:17>
|   |           |     |-CompoundAssignOperator 0x12e143090 <line:46:21, col:40> 'const char *' contains-errors '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'
|   |           |     | |-DeclRefExpr 0x12e142fb8 <col:21> 'const char *' contains-errors lvalue Var 0x12e80a1f8 's' 'const char *'
|   |           |     | `-BinaryOperator 0x12e143070 <col:26, col:40> 'unsigned long' '-'
|   |           |     |   |-UnaryExprOrTypeTraitExpr 0x12e143018 <col:26, col:38> 'unsigned long' sizeof
|   |           |     |   | `-ParenExpr 0x12e142ff8 <col:32, col:38> 'char[4]' lvalue
|   |           |     |   |   `-StringLiteral 0x12e142fd8 <col:33> 'char[4]' lvalue "STR"
|   |           |     |   `-ImplicitCastExpr 0x12e143058 <col:40> 'unsigned long' <IntegralCast>
|   |           |     |     `-IntegerLiteral 0x12e143038 <col:40> 'int' 1
|   |           |     |-WhileStmt 0x12e143438 <line:47:21, col:69>
|   |           |     | |-BinaryOperator 0x12e1433e0 <col:28, col:61> 'int' contains-errors '||'
|   |           |     | | |-BinaryOperator 0x12e143308 <col:28, col:51> 'int' contains-errors '||'
|   |           |     | | | |-BinaryOperator 0x12e143230 <col:28, col:41> 'int' contains-errors '||'
|   |           |     | | | | |-BinaryOperator 0x12e143158 <col:28, col:32> 'int' contains-errors '=='
|   |           |     | | | | | |-ImplicitCastExpr 0x12e143140 <col:28, col:29> 'int' contains-errors <IntegralCast>
|   |           |     | | | | | | `-ImplicitCastExpr 0x12e143128 <col:28, col:29> 'char' contains-errors <LValueToRValue>
|   |           |     | | | | | |   `-UnaryOperator 0x12e1430f8 <col:28, col:29> 'const char' contains-errors lvalue prefix '*' cannot overflow
|   |           |     | | | | | |     `-ImplicitCastExpr 0x12e1430e0 <col:29> 'const char *' contains-errors <LValueToRValue>
|   |           |     | | | | | |       `-DeclRefExpr 0x12e1430c0 <col:29> 'const char *' contains-errors lvalue Var 0x12e80a1f8 's' 'const char *'
|   |           |     | | | | | `-CharacterLiteral 0x12e143110 <col:32> 'int' 32
|   |           |     | | | | `-BinaryOperator 0x12e143210 <col:37, col:41> 'int' contains-errors '=='
|   |           |     | | | |   |-ImplicitCastExpr 0x12e1431f8 <col:37, col:38> 'int' contains-errors <IntegralCast>
|   |           |     | | | |   | `-ImplicitCastExpr 0x12e1431e0 <col:37, col:38> 'char' contains-errors <LValueToRValue>
|   |           |     | | | |   |   `-UnaryOperator 0x12e1431b0 <col:37, col:38> 'const char' contains-errors lvalue prefix '*' cannot overflow
|   |           |     | | | |   |     `-ImplicitCastExpr 0x12e143198 <col:38> 'const char *' contains-errors <LValueToRValue>
|   |           |     | | | |   |       `-DeclRefExpr 0x12e143178 <col:38> 'const char *' contains-errors lvalue Var 0x12e80a1f8 's' 'const char *'
|   |           |     | | | |   `-CharacterLiteral 0x12e1431c8 <col:41> 'int' 9
|   |           |     | | | `-BinaryOperator 0x12e1432e8 <col:47, col:51> 'int' contains-errors '=='
|   |           |     | | |   |-ImplicitCastExpr 0x12e1432d0 <col:47, col:48> 'int' contains-errors <IntegralCast>
|   |           |     | | |   | `-ImplicitCastExpr 0x12e1432b8 <col:47, col:48> 'char' contains-errors <LValueToRValue>
|   |           |     | | |   |   `-UnaryOperator 0x12e143288 <col:47, col:48> 'const char' contains-errors lvalue prefix '*' cannot overflow
|   |           |     | | |   |     `-ImplicitCastExpr 0x12e143270 <col:48> 'const char *' contains-errors <LValueToRValue>
|   |           |     | | |   |       `-DeclRefExpr 0x12e143250 <col:48> 'const char *' contains-errors lvalue Var 0x12e80a1f8 's' 'const char *'
|   |           |     | | |   `-CharacterLiteral 0x12e1432a0 <col:51> 'int' 13
|   |           |     | | `-BinaryOperator 0x12e1433c0 <col:57, col:61> 'int' contains-errors '=='
|   |           |     | |   |-ImplicitCastExpr 0x12e1433a8 <col:57, col:58> 'int' contains-errors <IntegralCast>
|   |           |     | |   | `-ImplicitCastExpr 0x12e143390 <col:57, col:58> 'char' contains-errors <LValueToRValue>
|   |           |     | |   |   `-UnaryOperator 0x12e143360 <col:57, col:58> 'const char' contains-errors lvalue prefix '*' cannot overflow
|   |           |     | |   |     `-ImplicitCastExpr 0x12e143348 <col:58> 'const char *' contains-errors <LValueToRValue>
|   |           |     | |   |       `-DeclRefExpr 0x12e143328 <col:58> 'const char *' contains-errors lvalue Var 0x12e80a1f8 's' 'const char *'
|   |           |     | |   `-CharacterLiteral 0x12e143378 <col:61> 'int' 10
|   |           |     | `-UnaryOperator 0x12e143420 <col:67, col:69> 'const char *' contains-errors prefix '++'
|   |           |     |   `-DeclRefExpr 0x12e143400 <col:69> 'const char *' contains-errors lvalue Var 0x12e80a1f8 's' 'const char *'
|   |           |     `-IfStmt 0x12e143640 <line:48:21, line:51:21>
|   |           |       |-BinaryOperator 0x12e1435c8 <line:48:25, col:38> 'int' contains-errors '||'
|   |           |       | |-BinaryOperator 0x12e1434f0 <col:25, col:29> 'int' contains-errors '=='
|   |           |       | | |-ImplicitCastExpr 0x12e1434d8 <col:25, col:26> 'int' contains-errors <IntegralCast>
|   |           |       | | | `-ImplicitCastExpr 0x12e1434c0 <col:25, col:26> 'char' contains-errors <LValueToRValue>
|   |           |       | | |   `-UnaryOperator 0x12e143490 <col:25, col:26> 'const char' contains-errors lvalue prefix '*' cannot overflow
|   |           |       | | |     `-ImplicitCastExpr 0x12e143478 <col:26> 'const char *' contains-errors <LValueToRValue>
|   |           |       | | |       `-DeclRefExpr 0x12e143458 <col:26> 'const char *' contains-errors lvalue Var 0x12e80a1f8 's' 'const char *'
|   |           |       | | `-CharacterLiteral 0x12e1434a8 <col:29> 'int' 44
|   |           |       | `-BinaryOperator 0x12e1435a8 <col:34, col:38> 'int' contains-errors '=='
|   |           |       |   |-ImplicitCastExpr 0x12e143590 <col:34, col:35> 'int' contains-errors <IntegralCast>
|   |           |       |   | `-ImplicitCastExpr 0x12e143578 <col:34, col:35> 'char' contains-errors <LValueToRValue>
|   |           |       |   |   `-UnaryOperator 0x12e143548 <col:34, col:35> 'const char' contains-errors lvalue prefix '*' cannot overflow
|   |           |       |   |     `-ImplicitCastExpr 0x12e143530 <col:35> 'const char *' contains-errors <LValueToRValue>
|   |           |       |   |       `-DeclRefExpr 0x12e143510 <col:35> 'const char *' contains-errors lvalue Var 0x12e80a1f8 's' 'const char *'
|   |           |       |   `-CharacterLiteral 0x12e143560 <col:38> 'int' 0
|   |           |       `-CompoundStmt 0x12e143628 <col:44, line:51:21>
|   |           |         `-BreakStmt 0x12e143620 <line:50:25>
|   |           |-BinaryOperator 0x12e143a38 <line:53:17, col:34> 'const char *' contains-errors '='
|   |           | |-DeclRefExpr 0x12e1436d8 <col:17> 'const char *' contains-errors lvalue Var 0x12e80a1f8 's' 'const char *'
|   |           | `-ImplicitCastExpr 0x12e143a20 <col:21, col:34> 'const char *' contains-errors <NoOp>
|   |           |   `-CallExpr 0x12e1439d8 <col:21, col:34> 'char *' contains-errors
|   |           |     |-ImplicitCastExpr 0x12e1439c0 <col:21> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   |           |     | `-DeclRefExpr 0x12e143920 <col:21> 'char *(const char *, int)' Function 0x12e143740 'strchr' 'char *(const char *, int)'
|   |           |     |-ImplicitCastExpr 0x12e143a08 <col:28> 'const char *' contains-errors <LValueToRValue>
|   |           |     | `-DeclRefExpr 0x12e143940 <col:28> 'const char *' contains-errors lvalue Var 0x12e80a1f8 's' 'const char *'
|   |           |     `-CharacterLiteral 0x12e143960 <col:31> 'int' 44
|   |           `-IfStmt 0x12e143aa0 <line:54:17, col:32>
|   |             |-RecoveryExpr 0x12e143a78 <col:21, col:29> '_Bool' contains-errors
|   |             `-BreakStmt 0x12e143a98 <col:32>
|   `-IfStmt 0x12e143d38 <line:59:5, line:70:5> has_else
|     |-ImplicitCastExpr 0x12e143bc0 <line:59:9> 'unsigned int' <LValueToRValue>
|     | `-DeclRefExpr 0x12e143ba0 <col:9> 'unsigned int' lvalue Var 0x12e809da0 'binary' 'unsigned int'
|     |-CompoundStmt 0x12e143c70 <col:17, line:64:5>
|     | `-CallExpr 0x12e143c30 <line:60:9, col:29> 'int'
|     |   |-ImplicitCastExpr 0x12e143c18 <col:9> 'int (*)()' <FunctionToPointerDecay>
|     |   | `-DeclRefExpr 0x12e143bd8 <col:9> 'int ()' Function 0x12e809898 'DEBUG_LOG_INFO' 'int ()'
|     |   `-ImplicitCastExpr 0x12e143c58 <col:24> 'char *' <ArrayToPointerDecay>
|     |     `-StringLiteral 0x12e143bf8 <col:24> 'char[4]' lvalue "STR"
|     `-CompoundStmt 0x12e143d20 <line:65:10, line:70:5>
|       `-CallExpr 0x12e143ce0 <line:66:9, col:29> 'int'
|         |-ImplicitCastExpr 0x12e143cc8 <col:9> 'int (*)()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x12e143c88 <col:9> 'int ()' Function 0x12e809898 'DEBUG_LOG_INFO' 'int ()'
|         `-ImplicitCastExpr 0x12e143d08 <col:24> 'char *' <ArrayToPointerDecay>
|           `-StringLiteral 0x12e143ca8 <col:24> 'char[4]' lvalue "STR"
`-FunctionDecl 0x12e143740 <line:53:21> col:21 implicit used strchr 'char *(const char *, int)' extern
  |-ParmVarDecl 0x12e143840 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x12e1438a8 <<invalid sloc>> <invalid sloc> 'int'
  `-BuiltinAttr 0x12e1437e8 <<invalid sloc>> Implicit 893
