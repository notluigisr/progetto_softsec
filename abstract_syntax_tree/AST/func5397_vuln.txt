TranslationUnitDecl 0x10503d008 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x10503deb8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x10503d5d0 '__int128'
|-TypedefDecl 0x10503df28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x10503d5f0 'unsigned __int128'
|-TypedefDecl 0x11f81d830 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x11f81d600 'struct __NSConstantString_tag'
|   `-Record 0x10503df80 '__NSConstantString_tag'
|-TypedefDecl 0x11f81d898 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x10503d790 '__SVInt8_t'
|-TypedefDecl 0x11f81d900 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x10503d7b0 '__SVInt16_t'
|-TypedefDecl 0x11f81d968 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x10503d7d0 '__SVInt32_t'
|-TypedefDecl 0x11f81d9d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x10503d7f0 '__SVInt64_t'
|-TypedefDecl 0x11f81da38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x10503d810 '__SVUint8_t'
|-TypedefDecl 0x11f81daa0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x10503d830 '__SVUint16_t'
|-TypedefDecl 0x11f81db08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x10503d850 '__SVUint32_t'
|-TypedefDecl 0x11f81db70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x10503d870 '__SVUint64_t'
|-TypedefDecl 0x11f81dbd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x10503d890 '__SVFloat16_t'
|-TypedefDecl 0x11f81dc40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x10503d8b0 '__SVFloat32_t'
|-TypedefDecl 0x11f81dca8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x10503d8d0 '__SVFloat64_t'
|-TypedefDecl 0x11f81dd10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x10503d8f0 '__SVBfloat16_t'
|-TypedefDecl 0x11f81dd78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x10503d910 '__clang_svint8x2_t'
|-TypedefDecl 0x11f81dde0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x10503d930 '__clang_svint16x2_t'
|-TypedefDecl 0x11f81de48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x10503d950 '__clang_svint32x2_t'
|-TypedefDecl 0x11f81deb0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x10503d970 '__clang_svint64x2_t'
|-TypedefDecl 0x11f81df18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x10503d990 '__clang_svuint8x2_t'
|-TypedefDecl 0x11f81df80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x10503d9b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x11f81dfe8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x10503d9d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x11f81e050 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x10503d9f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x11f81e0b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x10503da10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x11f81e120 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x10503da30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x11f81e188 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x10503da50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x11f81e1f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x10503da70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x11f81e258 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x10503da90 '__clang_svint8x3_t'
|-TypedefDecl 0x11f81e2c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x10503dab0 '__clang_svint16x3_t'
|-TypedefDecl 0x11f81e328 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x10503dad0 '__clang_svint32x3_t'
|-TypedefDecl 0x11f81e390 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x10503daf0 '__clang_svint64x3_t'
|-TypedefDecl 0x11f81e3f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x10503db10 '__clang_svuint8x3_t'
|-TypedefDecl 0x11f81e460 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x10503db30 '__clang_svuint16x3_t'
|-TypedefDecl 0x11f81e4c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x10503db50 '__clang_svuint32x3_t'
|-TypedefDecl 0x11f81e530 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x10503db70 '__clang_svuint64x3_t'
|-TypedefDecl 0x11f81e598 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x10503db90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x11f81ea00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x10503dbb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x11f81ea68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x10503dbd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x11f81ead0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x10503dbf0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x11f81eb38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x10503dc10 '__clang_svint8x4_t'
|-TypedefDecl 0x11f81eba0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x10503dc30 '__clang_svint16x4_t'
|-TypedefDecl 0x11f81ec08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x10503dc50 '__clang_svint32x4_t'
|-TypedefDecl 0x11f81ec70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x10503dc70 '__clang_svint64x4_t'
|-TypedefDecl 0x11f81ecd8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x10503dc90 '__clang_svuint8x4_t'
|-TypedefDecl 0x11f81ed40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x10503dcb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x11f81eda8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x10503dcd0 '__clang_svuint32x4_t'
|-TypedefDecl 0x11f81ee10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x10503dcf0 '__clang_svuint64x4_t'
|-TypedefDecl 0x11f81ee78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x10503dd10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x11f81eee0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x10503dd30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x11f81ef48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x10503dd50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x11f81efb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x10503dd70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x11f81f018 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x10503dd90 '__SVBool_t'
|-TypedefDecl 0x11f81f080 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x10503ddb0 '__clang_svboolx2_t'
|-TypedefDecl 0x11f81f0e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x10503ddd0 '__clang_svboolx4_t'
|-TypedefDecl 0x11f81f150 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x10503ddf0 '__SVCount_t'
|-TypedefDecl 0x11f81f1f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x11f81f1b0 'char *'
|   `-BuiltinType 0x10503d0b0 'char'
|-TypedefDecl 0x11f81f268 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x11f81f1b0 'char *'
|   `-BuiltinType 0x10503d0b0 'char'
|-FunctionDecl 0x11f81f3c8 <dataset_diviso_filec/func5397_vuln.c:1:3, line:78:3> line:1:3 invalid write_header 'int (int)'
| |-ParmVarDecl 0x11f81f2f0 <col:17, col:26> col:26 invalid error_code 'int'
| `-CompoundStmt 0x11f842fc8 <line:2:3, line:78:3>
|   |-DeclStmt 0x11f81f4f8 <line:4:5, col:26>
|   | `-VarDecl 0x11f81f490 <col:5, col:18> col:18 used basename 'const char *'
|   |-DeclStmt 0x11f81f590 <line:5:5, col:24>
|   | `-VarDecl 0x11f81f528 <col:5, col:18> col:18 used format 'const char *'
|   |-IfStmt 0x11f83fee8 <line:10:5, line:11:20>
|   | |-RecoveryExpr 0x11f81f8a8 <line:10:10> '<dependent type>' contains-errors lvalue
|   | `-CallExpr 0x11f83fea8 <line:11:7, col:20> 'int'
|   |   |-ImplicitCastExpr 0x11f83fe90 <col:7> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x11f81f9a8 <col:7> 'int ()' Function 0x11f81f8f0 'Fatal' 'int ()'
|   |   `-ImplicitCastExpr 0x11f83fed0 <col:14> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x11f83fe40 <col:14> 'char[4]' lvalue "STR"
|   |-IfStmt 0x11f840ce8 <line:13:5, line:41:5>
|   | |-UnaryOperator 0x11f840018 <line:13:10, col:18> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x11f840000 <col:11, col:18> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-CXXDependentScopeMemberExpr 0x11f83ffb8 <col:11, col:18> '<dependent type>' contains-errors lvalue .header
|   | |     `-RecoveryExpr 0x11f83ff98 <col:11> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x11f840cc8 <line:14:5, line:41:5>
|   |   |-BinaryOperator 0x11f840318 <line:15:7, col:66> 'const char *' contains-errors '='
|   |   | |-DeclRefExpr 0x11f840030 <col:7> 'const char *' lvalue Var 0x11f81f490 'basename' 'const char *'
|   |   | `-CallExpr 0x11f8402f0 <col:18, col:66> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x11f840130 <col:18> 'int ()' Function 0x11f840078 'ft_basename' 'int ()'
|   |   |   `-CXXDependentScopeMemberExpr 0x11f8402a8 <col:31, col:53> '<dependent type>' contains-errors lvalue ->filepathname
|   |   |     `-CXXDependentScopeMemberExpr 0x11f840260 <col:31, col:39> '<dependent type>' contains-errors lvalue ->current_font
|   |   |       `-RecoveryExpr 0x11f840240 <col:31> '<dependent type>' contains-errors lvalue
|   |   `-SwitchStmt 0x11f840370 <line:17:7, line:38:7>
|   |     |-ImplicitCastExpr 0x11f840358 <line:17:16> '<dependent type>' contains-errors <LValueToRValue>
|   |     | `-RecoveryExpr 0x11f840338 <col:16> '<dependent type>' contains-errors lvalue
|   |     `-CompoundStmt 0x11f840c90 <line:18:7, line:38:7>
|   |       |-BreakStmt 0x11f840b28 <line:22:9>
|   |       |-BreakStmt 0x11f840b90 <line:27:9>
|   |       |-BreakStmt 0x11f840bf8 <line:32:9>
|   |       |-DefaultStmt 0x11f840c68 <line:34:7, col:14>
|   |       | `-NullStmt 0x11f840c60 <col:14>
|   |       `-BreakStmt 0x11f840c88 <line:37:9>
|   |-BinaryOperator 0x11f841ad0 <line:46:5, col:14> 'const char *' '='
|   | |-DeclRefExpr 0x11f841a60 <col:5> 'const char *' lvalue Var 0x11f81f528 'format' 'const char *'
|   | `-ImplicitCastExpr 0x11f841ab8 <col:14> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x11f841aa0 <col:14> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x11f841a80 <col:14> 'char[4]' lvalue "STR"
|   `-IfStmt 0x11f842e68 <line:50:5, line:71:5>
|     |-RecoveryExpr 0x11f841f48 <line:50:10, col:35> '_Bool' contains-errors
|     `-CompoundStmt 0x11f842e28 <line:51:5, line:71:5>
|       |-DeclStmt 0x11f841fe8 <line:52:7, col:15>
|       | `-VarDecl 0x11f841f80 <col:7, col:14> col:14 used p 'char *'
|       |-DeclStmt 0x11f8421a0 <line:53:7, col:38>
|       | |-VarDecl 0x11f842018 <col:7, col:14> col:14 used format_len 'int'
|       | |-VarDecl 0x11f842098 <col:7, col:26> col:26 used gindex 'int'
|       | `-VarDecl 0x11f842118 <col:7, col:34> col:34 used size 'int'
|       |-BinaryOperator 0x11f842480 <line:58:7, col:20> 'int' '='
|       | |-DeclRefExpr 0x11f8423e8 <col:7> 'int' lvalue Var 0x11f842118 'size' 'int'
|       | `-BinaryOperator 0x11f842460 <col:14, col:20> 'int' '-'
|       |   |-IntegerLiteral 0x11f842408 <col:14> 'int' 256
|       |   `-ImplicitCastExpr 0x11f842448 <col:20> 'int' <LValueToRValue>
|       |     `-DeclRefExpr 0x11f842428 <col:20> 'int' lvalue Var 0x11f842118 'size' 'int'
|       |-BinaryOperator 0x11f842510 <line:60:7, col:16> 'const char *' '='
|       | |-DeclRefExpr 0x11f8424a0 <col:7> 'const char *' lvalue Var 0x11f81f528 'format' 'const char *'
|       | `-ImplicitCastExpr 0x11f8424f8 <col:16> 'const char *' <NoOp>
|       |   `-ImplicitCastExpr 0x11f8424e0 <col:16> 'char *' <ArrayToPointerDecay>
|       |     `-StringLiteral 0x11f8424c0 <col:16> 'char[4]' lvalue "STR"
|       |-BinaryOperator 0x11f842650 <line:61:7, col:35> 'int' '='
|       | |-DeclRefExpr 0x11f842530 <col:7> 'int' lvalue Var 0x11f842018 'format_len' 'int'
|       | `-ImplicitCastExpr 0x11f842638 <col:20, col:35> 'int' <IntegralCast>
|       |   `-CallExpr 0x11f8425f8 <col:20, col:35> 'unsigned long'
|       |     |-ImplicitCastExpr 0x11f8425e0 <col:20> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x11f842550 <col:20> 'unsigned long (const char *)' Function 0x11f842218 'strlen' 'unsigned long (const char *)'
|       |     `-ImplicitCastExpr 0x11f842620 <col:28> 'const char *' <LValueToRValue>
|       |       `-DeclRefExpr 0x11f842570 <col:28> 'const char *' lvalue Var 0x11f81f528 'format' 'const char *'
|       `-IfStmt 0x11f842e08 <line:63:7, line:70:7>
|         |-BinaryOperator 0x11f842720 <line:63:12, col:33> 'int' '>='
|         | |-ImplicitCastExpr 0x11f842708 <col:12> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x11f842670 <col:12> 'int' lvalue Var 0x11f842118 'size' 'int'
|         | `-BinaryOperator 0x11f8426e8 <col:20, col:33> 'int' '+'
|         |   |-ImplicitCastExpr 0x11f8426d0 <col:20> 'int' <LValueToRValue>
|         |   | `-DeclRefExpr 0x11f842690 <col:20> 'int' lvalue Var 0x11f842018 'format_len' 'int'
|         |   `-IntegerLiteral 0x11f8426b0 <col:33> 'int' 2
|         `-CompoundStmt 0x11f842de8 <line:64:7, line:70:7>
|           |-CallExpr 0x11f842a68 <line:67:9, col:27> 'char *'
|           | |-ImplicitCastExpr 0x11f842a50 <col:9> 'char *(*)(char *, const char *)' <FunctionToPointerDecay>
|           | | `-DeclRefExpr 0x11f842980 <col:9> 'char *(char *, const char *)' Function 0x11f8427a0 'strcpy' 'char *(char *, const char *)'
|           | |-ImplicitCastExpr 0x11f842a98 <col:17> 'char *' <LValueToRValue>
|           | | `-DeclRefExpr 0x11f8429a0 <col:17> 'char *' lvalue Var 0x11f841f80 'p' 'char *'
|           | `-ImplicitCastExpr 0x11f842ab0 <col:20> 'const char *' <LValueToRValue>
|           |   `-DeclRefExpr 0x11f8429c0 <col:20> 'const char *' lvalue Var 0x11f81f528 'format' 'const char *'
|           `-IfStmt 0x11f842dc8 <line:68:9, line:69:16>
|             |-RecoveryExpr 0x11f842d08 <line:68:14, col:81> '_Bool' contains-errors
|             `-BinaryOperator 0x11f842da8 <line:69:11, col:16> 'char' '='
|               |-UnaryOperator 0x11f842d60 <col:11, col:12> 'char' lvalue prefix '*' cannot overflow
|               | `-ImplicitCastExpr 0x11f842d48 <col:12> 'char *' <LValueToRValue>
|               |   `-DeclRefExpr 0x11f842d28 <col:12> 'char *' lvalue Var 0x11f841f80 'p' 'char *'
|               `-ImplicitCastExpr 0x11f842d90 <col:16> 'char' <IntegralCast>
|                 `-CharacterLiteral 0x11f842d78 <col:16> 'int' 0
|-FunctionDecl 0x11f840820 <line:20:9> col:9 implicit used sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x11f840920 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x11f840988 <<invalid sloc>> <invalid sloc> 'const char *'
| |-BuiltinAttr 0x11f8408c8 <<invalid sloc>> Implicit 906
| `-FormatAttr 0x11f840a00 <col:9> Implicit printf 2 3
|-FunctionDecl 0x11f841b40 <line:48:5> col:5 implicit used snprintf 'int (char *, unsigned long, const char *, ...)' extern
| |-ParmVarDecl 0x11f841c40 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x11f841ca8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0x11f841d10 <<invalid sloc>> <invalid sloc> 'const char *'
| |-BuiltinAttr 0x11f841be8 <<invalid sloc>> Implicit 905
| `-FormatAttr 0x11f841d90 <col:5> Implicit printf 3 4
|-FunctionDecl 0x11f842218 <line:56:14> col:14 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x11f842318 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x11f8422c0 <<invalid sloc>> Implicit 902
`-FunctionDecl 0x11f8427a0 <line:67:9> col:9 implicit used strcpy 'char *(char *, const char *)' extern
  |-ParmVarDecl 0x11f8428a0 <<invalid sloc>> <invalid sloc> 'char *'
  |-ParmVarDecl 0x11f842908 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x11f842848 <<invalid sloc>> Implicit 885
