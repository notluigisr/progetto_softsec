TranslationUnitDecl 0x151855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1518564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x151855bd0 '__int128'
|-TypedefDecl 0x151856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x151855bf0 'unsigned __int128'
|-TypedefDecl 0x151926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x151926000 'struct __NSConstantString_tag'
|   `-Record 0x151856580 '__NSConstantString_tag'
|-TypedefDecl 0x151926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x151855d90 '__SVInt8_t'
|-TypedefDecl 0x151926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x151855db0 '__SVInt16_t'
|-TypedefDecl 0x151926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x151855dd0 '__SVInt32_t'
|-TypedefDecl 0x1519263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x151855df0 '__SVInt64_t'
|-TypedefDecl 0x151926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x151855e10 '__SVUint8_t'
|-TypedefDecl 0x1519264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x151855e30 '__SVUint16_t'
|-TypedefDecl 0x151926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x151855e50 '__SVUint32_t'
|-TypedefDecl 0x151926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x151855e70 '__SVUint64_t'
|-TypedefDecl 0x1519265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x151855e90 '__SVFloat16_t'
|-TypedefDecl 0x151926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x151855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1519266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x151855ed0 '__SVFloat64_t'
|-TypedefDecl 0x151926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x151855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x151926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x151855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1519267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x151855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x151926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x151855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1519268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x151855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x151926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x151855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x151926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x151855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1519269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x151855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x151926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x151855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x151926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x151856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x151926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x151856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x151926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x151856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x151926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x151856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x151926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x151856090 '__clang_svint8x3_t'
|-TypedefDecl 0x151926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1518560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x151926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1518560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x151926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1518560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x151926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x151856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x151926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x151856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x151926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x151856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x151926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x151856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x151926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x151856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x151927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1518561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x151927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1518561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1519278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1518561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x151927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x151856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1519279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x151856230 '__clang_svint16x4_t'
|-TypedefDecl 0x151927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x151856250 '__clang_svint32x4_t'
|-TypedefDecl 0x151927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x151856270 '__clang_svint64x4_t'
|-TypedefDecl 0x151927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x151856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x151927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1518562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x151927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1518562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x151927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1518562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x151927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x151856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x151927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x151856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x151927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x151856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x151927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x151856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x151927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x151856390 '__SVBool_t'
|-TypedefDecl 0x151927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1518563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x151927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1518563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x151927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1518563f0 '__SVCount_t'
|-TypedefDecl 0x151927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x151927fb0 'char *'
|   `-BuiltinType 0x1518556b0 'char'
|-TypedefDecl 0x151928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x151927fb0 'char *'
|   `-BuiltinType 0x1518556b0 'char'
`-FunctionDecl 0x151940c08 <dataset_diviso_filec/func10819_vuln.c:1:1, line:50:1> line:1:1 asn1_oid_decode 'int (struct asn1_ctx *, unsigned char *, unsigned long **, unsigned int *)'
  |-ParmVarDecl 0x151928648 <col:17, col:34> col:34 used ctx 'struct asn1_ctx *'
  |-ParmVarDecl 0x1519286f8 <line:2:3, col:18> col:18 used eoc 'unsigned char *'
  |-ParmVarDecl 0x151940a00 <col:23, col:39> col:39 used oid 'unsigned long **'
  |-ParmVarDecl 0x151940ab8 <col:44, col:58> col:58 used len 'unsigned int *'
  `-CompoundStmt 0x152809f38 <line:3:1, line:50:1>
    |-DeclStmt 0x151940d98 <line:4:2, col:21>
    | `-VarDecl 0x151940d30 <col:2, col:16> col:16 used subid 'unsigned long'
    |-DeclStmt 0x151940e30 <line:5:2, col:19>
    | `-VarDecl 0x151940dc8 <col:2, col:15> col:15 used size 'unsigned int'
    |-DeclStmt 0x151940ec8 <line:6:2, col:21>
    | `-VarDecl 0x151940e60 <col:2, col:17> col:17 used optr 'unsigned long *'
    |-BinaryOperator 0x151940fe0 <line:8:2, col:30> 'unsigned int' contains-errors '='
    | |-DeclRefExpr 0x151940ee0 <col:2> 'unsigned int' lvalue Var 0x151940dc8 'size' 'unsigned int'
    | `-BinaryOperator 0x151940fc0 <col:9, col:30> '<dependent type>' contains-errors '+'
    |   |-BinaryOperator 0x151940f80 <col:9, col:20> '<dependent type>' contains-errors '-'
    |   | |-DeclRefExpr 0x151940f00 <col:9> 'unsigned char *' lvalue ParmVar 0x1519286f8 'eoc' 'unsigned char *'
    |   | `-RecoveryExpr 0x151940f58 <col:15, col:20> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x151940f20 <col:15> 'struct asn1_ctx *' lvalue ParmVar 0x151928648 'ctx' 'struct asn1_ctx *'
    |   `-IntegerLiteral 0x151940fa0 <col:30> 'int' 1
    |-BinaryOperator 0x151941470 <line:9:2, col:57> 'unsigned long *' contains-errors '='
    | |-UnaryOperator 0x151941380 <col:2, col:3> 'unsigned long *' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x151941368 <col:3> 'unsigned long **' <LValueToRValue>
    | |   `-DeclRefExpr 0x151941000 <col:3> 'unsigned long **' lvalue ParmVar 0x151940a00 'oid' 'unsigned long **'
    | `-CallExpr 0x151941440 <col:9, col:57> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x151941180 <col:9> 'int ()' Function 0x1519410c8 'kmalloc' 'int ()'
    |   |-BinaryOperator 0x151941400 <col:17, col:44> 'unsigned long' '*'
    |   | |-ImplicitCastExpr 0x1519413e8 <col:17> 'unsigned long' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x1519413d0 <col:17> 'unsigned int' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x1519411a0 <col:17> 'unsigned int' lvalue Var 0x151940dc8 'size' 'unsigned int'
    |   | `-UnaryExprOrTypeTraitExpr 0x1519413b0 <col:24, col:44> 'unsigned long' sizeof 'unsigned long'
    |   `-RecoveryExpr 0x151941420 <col:47> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x1519415e8 <line:10:2, line:11:10>
    | |-BinaryOperator 0x151941598 <line:10:6, col:14> 'int' contains-errors '=='
    | | |-UnaryOperator 0x151941560 <col:6, col:7> 'unsigned long *' lvalue prefix '*' cannot overflow
    | | | `-ImplicitCastExpr 0x151941548 <col:7> 'unsigned long **' <LValueToRValue>
    | | |   `-DeclRefExpr 0x151941490 <col:7> 'unsigned long **' lvalue ParmVar 0x151940a00 'oid' 'unsigned long **'
    | | `-RecoveryExpr 0x151941578 <col:14> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x1519415d8 <line:11:3, col:10>
    |   `-IntegerLiteral 0x1519415b8 <col:10> 'int' 0
    |-BinaryOperator 0x151941690 <line:13:2, col:10> 'unsigned long *' '='
    | |-DeclRefExpr 0x151941608 <col:2> 'unsigned long *' lvalue Var 0x151940e60 'optr' 'unsigned long *'
    | `-ImplicitCastExpr 0x151941678 <col:9, col:10> 'unsigned long *' <LValueToRValue>
    |   `-UnaryOperator 0x151941660 <col:9, col:10> 'unsigned long *' lvalue prefix '*' cannot overflow
    |     `-ImplicitCastExpr 0x151941648 <col:10> 'unsigned long **' <LValueToRValue>
    |       `-DeclRefExpr 0x151941628 <col:10> 'unsigned long **' lvalue ParmVar 0x151940a00 'oid' 'unsigned long **'
    |-IfStmt 0x152808df0 <line:15:2, line:19:2>
    | |-UnaryOperator 0x1519418a0 <line:15:6, col:36> 'int' prefix '!' cannot overflow
    | | `-CallExpr 0x151941858 <col:7, col:36> 'int'
    | |   |-ImplicitCastExpr 0x151941840 <col:7> 'int (*)()' <FunctionToPointerDecay>
    | |   | `-DeclRefExpr 0x151941790 <col:7> 'int ()' Function 0x1519416d8 'asn1_subid_decode' 'int ()'
    | |   |-ImplicitCastExpr 0x151941888 <col:25> 'struct asn1_ctx *' <LValueToRValue>
    | |   | `-DeclRefExpr 0x1519417b0 <col:25> 'struct asn1_ctx *' lvalue ParmVar 0x151928648 'ctx' 'struct asn1_ctx *'
    | |   `-UnaryOperator 0x1519417f0 <col:30, col:31> 'unsigned long *' prefix '&' cannot overflow
    | |     `-DeclRefExpr 0x1519417d0 <col:31> 'unsigned long' lvalue Var 0x151940d30 'subid' 'unsigned long'
    | `-CompoundStmt 0x152808dc8 <col:39, line:19:2>
    |   |-CallExpr 0x152808c30 <line:16:3, col:13> 'int'
    |   | |-ImplicitCastExpr 0x152808c18 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x151941998 <col:3> 'int ()' Function 0x1519418e0 'kfree' 'int ()'
    |   | `-ImplicitCastExpr 0x152808c58 <col:9, col:10> 'unsigned long *' <LValueToRValue>
    |   |   `-UnaryOperator 0x152808c00 <col:9, col:10> 'unsigned long *' lvalue prefix '*' cannot overflow
    |   |     `-ImplicitCastExpr 0x1519419d8 <col:10> 'unsigned long **' <LValueToRValue>
    |   |       `-DeclRefExpr 0x1519419b8 <col:10> 'unsigned long **' lvalue ParmVar 0x151940a00 'oid' 'unsigned long **'
    |   |-BinaryOperator 0x152808d78 <line:17:3, col:10> 'unsigned long *' contains-errors '='
    |   | |-UnaryOperator 0x152808d40 <col:3, col:4> 'unsigned long *' lvalue prefix '*' cannot overflow
    |   | | `-ImplicitCastExpr 0x152808d28 <col:4> 'unsigned long **' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x152808c70 <col:4> 'unsigned long **' lvalue ParmVar 0x151940a00 'oid' 'unsigned long **'
    |   | `-RecoveryExpr 0x152808d58 <col:10> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x152808db8 <line:18:3, col:10>
    |     `-IntegerLiteral 0x152808d98 <col:10> 'int' 0
    |-IfStmt 0x152809550 <line:21:2, line:30:2> has_else
    | |-BinaryOperator 0x152808e80 <line:21:6, col:14> 'int' '<'
    | | |-ImplicitCastExpr 0x152808e50 <col:6> 'unsigned long' <LValueToRValue>
    | | | `-DeclRefExpr 0x152808e10 <col:6> 'unsigned long' lvalue Var 0x151940d30 'subid' 'unsigned long'
    | | `-ImplicitCastExpr 0x152808e68 <col:14> 'unsigned long' <IntegralCast>
    | |   `-IntegerLiteral 0x152808e30 <col:14> 'int' 40
    | |-CompoundStmt 0x152809040 <col:18, line:24:2>
    | | |-BinaryOperator 0x152808f50 <line:22:3, col:13> 'unsigned long' '='
    | | | |-ArraySubscriptExpr 0x152808ef8 <col:3, col:9> 'unsigned long' lvalue
    | | | | |-ImplicitCastExpr 0x152808ee0 <col:3> 'unsigned long *' <LValueToRValue>
    | | | | | `-DeclRefExpr 0x152808ea0 <col:3> 'unsigned long *' lvalue Var 0x151940e60 'optr' 'unsigned long *'
    | | | | `-IntegerLiteral 0x152808ec0 <col:8> 'int' 0
    | | | `-ImplicitCastExpr 0x152808f38 <col:13> 'unsigned long' <IntegralCast>
    | | |   `-IntegerLiteral 0x152808f18 <col:13> 'int' 0
    | | `-BinaryOperator 0x152809020 <line:23:3, col:13> 'unsigned long' '='
    | |   |-ArraySubscriptExpr 0x152808fc8 <col:3, col:9> 'unsigned long' lvalue
    | |   | |-ImplicitCastExpr 0x152808fb0 <col:3> 'unsigned long *' <LValueToRValue>
    | |   | | `-DeclRefExpr 0x152808f70 <col:3> 'unsigned long *' lvalue Var 0x151940e60 'optr' 'unsigned long *'
    | |   | `-IntegerLiteral 0x152808f90 <col:8> 'int' 1
    | |   `-ImplicitCastExpr 0x152809008 <col:13> 'unsigned long' <LValueToRValue>
    | |     `-DeclRefExpr 0x152808fe8 <col:13> 'unsigned long' lvalue Var 0x151940d30 'subid' 'unsigned long'
    | `-IfStmt 0x152809520 <line:24:9, line:30:2> has_else
    |   |-BinaryOperator 0x1528090d0 <line:24:13, col:21> 'int' '<'
    |   | |-ImplicitCastExpr 0x1528090a0 <col:13> 'unsigned long' <LValueToRValue>
    |   | | `-DeclRefExpr 0x152809060 <col:13> 'unsigned long' lvalue Var 0x151940d30 'subid' 'unsigned long'
    |   | `-ImplicitCastExpr 0x1528090b8 <col:21> 'unsigned long' <IntegralCast>
    |   |   `-IntegerLiteral 0x152809080 <col:21> 'int' 80
    |   |-CompoundStmt 0x1528092e8 <col:25, line:27:2>
    |   | |-BinaryOperator 0x1528091a0 <line:25:3, col:13> 'unsigned long' '='
    |   | | |-ArraySubscriptExpr 0x152809148 <col:3, col:9> 'unsigned long' lvalue
    |   | | | |-ImplicitCastExpr 0x152809130 <col:3> 'unsigned long *' <LValueToRValue>
    |   | | | | `-DeclRefExpr 0x1528090f0 <col:3> 'unsigned long *' lvalue Var 0x151940e60 'optr' 'unsigned long *'
    |   | | | `-IntegerLiteral 0x152809110 <col:8> 'int' 0
    |   | | `-ImplicitCastExpr 0x152809188 <col:13> 'unsigned long' <IntegralCast>
    |   | |   `-IntegerLiteral 0x152809168 <col:13> 'int' 1
    |   | `-BinaryOperator 0x1528092c8 <line:26:3, col:21> 'unsigned long' '='
    |   |   |-ArraySubscriptExpr 0x152809218 <col:3, col:9> 'unsigned long' lvalue
    |   |   | |-ImplicitCastExpr 0x152809200 <col:3> 'unsigned long *' <LValueToRValue>
    |   |   | | `-DeclRefExpr 0x1528091c0 <col:3> 'unsigned long *' lvalue Var 0x151940e60 'optr' 'unsigned long *'
    |   |   | `-IntegerLiteral 0x1528091e0 <col:8> 'int' 1
    |   |   `-BinaryOperator 0x1528092a8 <col:13, col:21> 'unsigned long' '-'
    |   |     |-ImplicitCastExpr 0x152809278 <col:13> 'unsigned long' <LValueToRValue>
    |   |     | `-DeclRefExpr 0x152809238 <col:13> 'unsigned long' lvalue Var 0x151940d30 'subid' 'unsigned long'
    |   |     `-ImplicitCastExpr 0x152809290 <col:21> 'unsigned long' <IntegralCast>
    |   |       `-IntegerLiteral 0x152809258 <col:21> 'int' 40
    |   `-CompoundStmt 0x152809500 <line:27:9, line:30:2>
    |     |-BinaryOperator 0x1528093b8 <line:28:3, col:13> 'unsigned long' '='
    |     | |-ArraySubscriptExpr 0x152809360 <col:3, col:9> 'unsigned long' lvalue
    |     | | |-ImplicitCastExpr 0x152809348 <col:3> 'unsigned long *' <LValueToRValue>
    |     | | | `-DeclRefExpr 0x152809308 <col:3> 'unsigned long *' lvalue Var 0x151940e60 'optr' 'unsigned long *'
    |     | | `-IntegerLiteral 0x152809328 <col:8> 'int' 0
    |     | `-ImplicitCastExpr 0x1528093a0 <col:13> 'unsigned long' <IntegralCast>
    |     |   `-IntegerLiteral 0x152809380 <col:13> 'int' 2
    |     `-BinaryOperator 0x1528094e0 <line:29:3, col:21> 'unsigned long' '='
    |       |-ArraySubscriptExpr 0x152809430 <col:3, col:9> 'unsigned long' lvalue
    |       | |-ImplicitCastExpr 0x152809418 <col:3> 'unsigned long *' <LValueToRValue>
    |       | | `-DeclRefExpr 0x1528093d8 <col:3> 'unsigned long *' lvalue Var 0x151940e60 'optr' 'unsigned long *'
    |       | `-IntegerLiteral 0x1528093f8 <col:8> 'int' 1
    |       `-BinaryOperator 0x1528094c0 <col:13, col:21> 'unsigned long' '-'
    |         |-ImplicitCastExpr 0x152809490 <col:13> 'unsigned long' <LValueToRValue>
    |         | `-DeclRefExpr 0x152809450 <col:13> 'unsigned long' lvalue Var 0x151940d30 'subid' 'unsigned long'
    |         `-ImplicitCastExpr 0x1528094a8 <col:21> 'unsigned long' <IntegralCast>
    |           `-IntegerLiteral 0x152809470 <col:21> 'int' 80
    |-BinaryOperator 0x152809608 <line:32:2, col:9> 'unsigned int' '='
    | |-UnaryOperator 0x1528095b8 <col:2, col:3> 'unsigned int' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x1528095a0 <col:3> 'unsigned int *' <LValueToRValue>
    | |   `-DeclRefExpr 0x152809580 <col:3> 'unsigned int *' lvalue ParmVar 0x151940ab8 'len' 'unsigned int *'
    | `-ImplicitCastExpr 0x1528095f0 <col:9> 'unsigned int' <IntegralCast>
    |   `-IntegerLiteral 0x1528095d0 <col:9> 'int' 2
    |-CompoundAssignOperator 0x152809668 <line:33:2, col:10> 'unsigned long *' '+=' ComputeLHSTy='unsigned long *' ComputeResultTy='unsigned long *'
    | |-DeclRefExpr 0x152809628 <col:2> 'unsigned long *' lvalue Var 0x151940e60 'optr' 'unsigned long *'
    | `-IntegerLiteral 0x152809648 <col:10> 'int' 2
    |-WhileStmt 0x152809ee8 <line:35:2, line:48:2>
    | |-BinaryOperator 0x152809718 <line:35:9, col:24> 'int' contains-errors '<'
    | | |-RecoveryExpr 0x1528096d0 <col:9, col:14> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x152809698 <col:9> 'struct asn1_ctx *' lvalue ParmVar 0x151928648 'ctx' 'struct asn1_ctx *'
    | | `-DeclRefExpr 0x1528096f8 <col:24> 'unsigned char *' lvalue ParmVar 0x1519286f8 'eoc' 'unsigned char *'
    | `-CompoundStmt 0x152809ec8 <col:29, line:48:2>
    |   |-IfStmt 0x152809b40 <line:36:3, line:41:3>
    |   | |-BinaryOperator 0x1528097f8 <line:36:7, col:18> 'int' '>'
    |   | | |-UnaryOperator 0x1528097a8 <col:7, col:14> 'unsigned int' prefix '++'
    |   | | | `-ParenExpr 0x152809788 <col:9, col:14> 'unsigned int' lvalue
    |   | | |   `-UnaryOperator 0x152809770 <col:10, col:11> 'unsigned int' lvalue prefix '*' cannot overflow
    |   | | |     `-ImplicitCastExpr 0x152809758 <col:11> 'unsigned int *' <LValueToRValue>
    |   | | |       `-DeclRefExpr 0x152809738 <col:11> 'unsigned int *' lvalue ParmVar 0x151940ab8 'len' 'unsigned int *'
    |   | | `-ImplicitCastExpr 0x1528097e0 <col:18> 'unsigned int' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x1528097c0 <col:18> 'unsigned int' lvalue Var 0x151940dc8 'size' 'unsigned int'
    |   | `-CompoundStmt 0x152809b10 <col:24, line:41:3>
    |   |   |-BinaryOperator 0x1528098d0 <line:37:4, col:17> '<dependent type>' contains-errors '='
    |   |   | |-RecoveryExpr 0x152809850 <col:4, col:9> '<dependent type>' contains-errors lvalue
    |   |   | | `-DeclRefExpr 0x152809818 <col:4> 'struct asn1_ctx *' lvalue ParmVar 0x151928648 'ctx' 'struct asn1_ctx *'
    |   |   | `-RecoveryExpr 0x1528098b0 <col:17> '<dependent type>' contains-errors lvalue
    |   |   |-CallExpr 0x152809978 <line:38:4, col:14> 'int'
    |   |   | |-ImplicitCastExpr 0x152809960 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |   |   | | `-DeclRefExpr 0x1528098f0 <col:4> 'int ()' Function 0x1519418e0 'kfree' 'int ()'
    |   |   | `-ImplicitCastExpr 0x1528099a0 <col:10, col:11> 'unsigned long *' <LValueToRValue>
    |   |   |   `-UnaryOperator 0x152809948 <col:10, col:11> 'unsigned long *' lvalue prefix '*' cannot overflow
    |   |   |     `-ImplicitCastExpr 0x152809930 <col:11> 'unsigned long **' <LValueToRValue>
    |   |   |       `-DeclRefExpr 0x152809910 <col:11> 'unsigned long **' lvalue ParmVar 0x151940a00 'oid' 'unsigned long **'
    |   |   |-BinaryOperator 0x152809ac0 <line:39:4, col:11> 'unsigned long *' contains-errors '='
    |   |   | |-UnaryOperator 0x152809a88 <col:4, col:5> 'unsigned long *' lvalue prefix '*' cannot overflow
    |   |   | | `-ImplicitCastExpr 0x152809a70 <col:5> 'unsigned long **' <LValueToRValue>
    |   |   | |   `-DeclRefExpr 0x1528099b8 <col:5> 'unsigned long **' lvalue ParmVar 0x151940a00 'oid' 'unsigned long **'
    |   |   | `-RecoveryExpr 0x152809aa0 <col:11> '<dependent type>' contains-errors lvalue
    |   |   `-ReturnStmt 0x152809b00 <line:40:4, col:11>
    |   |     `-IntegerLiteral 0x152809ae0 <col:11> 'int' 0
    |   `-IfStmt 0x152809ea8 <line:43:3, line:47:3>
    |     |-UnaryOperator 0x152809c48 <line:43:7, col:37> 'int' prefix '!' cannot overflow
    |     | `-CallExpr 0x152809c00 <col:8, col:37> 'int'
    |     |   |-ImplicitCastExpr 0x152809bd8 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |     |   | `-DeclRefExpr 0x152809b60 <col:8> 'int ()' Function 0x1519416d8 'asn1_subid_decode' 'int ()'
    |     |   |-ImplicitCastExpr 0x152809c30 <col:26> 'struct asn1_ctx *' <LValueToRValue>
    |     |   | `-DeclRefExpr 0x152809b80 <col:26> 'struct asn1_ctx *' lvalue ParmVar 0x151928648 'ctx' 'struct asn1_ctx *'
    |     |   `-UnaryOperator 0x152809bc0 <col:31, col:35> 'unsigned long *' postfix '++'
    |     |     `-DeclRefExpr 0x152809ba0 <col:31> 'unsigned long *' lvalue Var 0x151940e60 'optr' 'unsigned long *'
    |     `-CompoundStmt 0x152809e80 <col:40, line:47:3>
    |       |-CallExpr 0x152809ce8 <line:44:4, col:14> 'int'
    |       | |-ImplicitCastExpr 0x152809cd0 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |       | | `-DeclRefExpr 0x152809c60 <col:4> 'int ()' Function 0x1519418e0 'kfree' 'int ()'
    |       | `-ImplicitCastExpr 0x152809d10 <col:10, col:11> 'unsigned long *' <LValueToRValue>
    |       |   `-UnaryOperator 0x152809cb8 <col:10, col:11> 'unsigned long *' lvalue prefix '*' cannot overflow
    |       |     `-ImplicitCastExpr 0x152809ca0 <col:11> 'unsigned long **' <LValueToRValue>
    |       |       `-DeclRefExpr 0x152809c80 <col:11> 'unsigned long **' lvalue ParmVar 0x151940a00 'oid' 'unsigned long **'
    |       |-BinaryOperator 0x152809e30 <line:45:4, col:11> 'unsigned long *' contains-errors '='
    |       | |-UnaryOperator 0x152809df8 <col:4, col:5> 'unsigned long *' lvalue prefix '*' cannot overflow
    |       | | `-ImplicitCastExpr 0x152809de0 <col:5> 'unsigned long **' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x152809d28 <col:5> 'unsigned long **' lvalue ParmVar 0x151940a00 'oid' 'unsigned long **'
    |       | `-RecoveryExpr 0x152809e10 <col:11> '<dependent type>' contains-errors lvalue
    |       `-ReturnStmt 0x152809e70 <line:46:4, col:11>
    |         `-IntegerLiteral 0x152809e50 <col:11> 'int' 0
    `-ReturnStmt 0x152809f28 <line:49:2, col:9>
      `-IntegerLiteral 0x152809f08 <col:9> 'int' 1
