TranslationUnitDecl 0x127826408 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1278272b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1278269d0 '__int128'
|-TypedefDecl 0x127827328 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1278269f0 'unsigned __int128'
|-TypedefDecl 0x13780c430 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13780c200 'struct __NSConstantString_tag'
|   `-Record 0x127827380 '__NSConstantString_tag'
|-TypedefDecl 0x13780c498 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x127826b90 '__SVInt8_t'
|-TypedefDecl 0x13780c500 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x127826bb0 '__SVInt16_t'
|-TypedefDecl 0x13780c568 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x127826bd0 '__SVInt32_t'
|-TypedefDecl 0x13780c5d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x127826bf0 '__SVInt64_t'
|-TypedefDecl 0x13780c638 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x127826c10 '__SVUint8_t'
|-TypedefDecl 0x13780c6a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x127826c30 '__SVUint16_t'
|-TypedefDecl 0x13780c708 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x127826c50 '__SVUint32_t'
|-TypedefDecl 0x13780c770 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x127826c70 '__SVUint64_t'
|-TypedefDecl 0x13780c7d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x127826c90 '__SVFloat16_t'
|-TypedefDecl 0x13780c840 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x127826cb0 '__SVFloat32_t'
|-TypedefDecl 0x13780c8a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x127826cd0 '__SVFloat64_t'
|-TypedefDecl 0x13780c910 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x127826cf0 '__SVBfloat16_t'
|-TypedefDecl 0x13780c978 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x127826d10 '__clang_svint8x2_t'
|-TypedefDecl 0x13780c9e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x127826d30 '__clang_svint16x2_t'
|-TypedefDecl 0x13780ca48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x127826d50 '__clang_svint32x2_t'
|-TypedefDecl 0x13780cab0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x127826d70 '__clang_svint64x2_t'
|-TypedefDecl 0x13780cb18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x127826d90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13780cb80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x127826db0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13780cbe8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x127826dd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13780cc50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x127826df0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13780ccb8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x127826e10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13780cd20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x127826e30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13780cd88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x127826e50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13780cdf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x127826e70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13780ce58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x127826e90 '__clang_svint8x3_t'
|-TypedefDecl 0x13780cec0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x127826eb0 '__clang_svint16x3_t'
|-TypedefDecl 0x13780cf28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x127826ed0 '__clang_svint32x3_t'
|-TypedefDecl 0x13780cf90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x127826ef0 '__clang_svint64x3_t'
|-TypedefDecl 0x13780cff8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x127826f10 '__clang_svuint8x3_t'
|-TypedefDecl 0x13780d060 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x127826f30 '__clang_svuint16x3_t'
|-TypedefDecl 0x13780d0c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x127826f50 '__clang_svuint32x3_t'
|-TypedefDecl 0x13780d130 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x127826f70 '__clang_svuint64x3_t'
|-TypedefDecl 0x13780d198 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x127826f90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13780da00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x127826fb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13780da68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x127826fd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13780dad0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x127826ff0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13780db38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x127827010 '__clang_svint8x4_t'
|-TypedefDecl 0x13780dba0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x127827030 '__clang_svint16x4_t'
|-TypedefDecl 0x13780dc08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x127827050 '__clang_svint32x4_t'
|-TypedefDecl 0x13780dc70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x127827070 '__clang_svint64x4_t'
|-TypedefDecl 0x13780dcd8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x127827090 '__clang_svuint8x4_t'
|-TypedefDecl 0x13780dd40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1278270b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13780dda8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1278270d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13780de10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1278270f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13780de78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x127827110 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13780dee0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x127827130 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13780df48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x127827150 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13780dfb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x127827170 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13780e018 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x127827190 '__SVBool_t'
|-TypedefDecl 0x13780e080 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1278271b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13780e0e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1278271d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13780e150 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1278271f0 '__SVCount_t'
|-TypedefDecl 0x13780e1f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13780e1b0 'char *'
|   `-BuiltinType 0x1278264b0 'char'
|-TypedefDecl 0x13780e268 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13780e1b0 'char *'
|   `-BuiltinType 0x1278264b0 'char'
`-FunctionDecl 0x1278f3d48 <dataset_diviso_filec/func14261_vuln.c:1:1, line:73:1> line:1:12 cqspi_setup_flash 'int (struct cqspi_st *, struct device_node *)' static
  |-ParmVarDecl 0x13780e848 <col:30, col:47> col:47 used cqspi 'struct cqspi_st *'
  |-ParmVarDecl 0x1278f3c28 <col:54, col:74> col:74 used np 'struct device_node *'
  `-CompoundStmt 0x137829578 <line:2:1, line:73:1>
    |-DeclStmt 0x1278f4098 <line:3:2, col:44>
    | |-RecordDecl 0x1278f3e48 <col:2, col:9> col:9 struct platform_device
    | `-VarDecl 0x1278f3fb8 <col:2, col:40> col:26 used pdev 'struct platform_device *' cinit
    |   `-RecoveryExpr 0x1278f4058 <col:33, col:40> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x1278f4020 <col:33> 'struct cqspi_st *' lvalue ParmVar 0x13780e848 'cqspi' 'struct cqspi_st *'
    |-DeclStmt 0x1278f4310 <line:4:2, col:33>
    | |-RecordDecl 0x1278f40b0 <col:2, col:9> col:9 struct device
    | `-VarDecl 0x1278f4218 <col:2, col:30> col:17 used dev 'struct device *' cinit
    |   `-UnaryOperator 0x1278f42e0 <col:23, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x1278f42b8 <col:24, col:30> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x1278f4280 <col:24> 'struct platform_device *' contains-errors lvalue Var 0x1278f3fb8 'pdev' 'struct platform_device *'
    |-DeclStmt 0x1278f4518 <line:5:2, col:35>
    | |-RecordDecl 0x1278f4328 <col:2, col:9> col:9 struct cqspi_flash_pdata
    | `-VarDecl 0x1278f4498 <col:2, col:28> col:28 used f_pdata 'struct cqspi_flash_pdata *'
    |-DeclStmt 0x1278f4718 <line:6:2, col:21>
    | |-RecordDecl 0x1278f4530 <col:2, col:9> col:9 struct spi_nor
    | `-VarDecl 0x1278f4698 <col:2, col:18> col:18 used nor 'struct spi_nor *'
    |-DeclStmt 0x1278f4918 <line:7:2, col:22>
    | |-RecordDecl 0x1278f4730 <col:2, col:9> col:9 struct mtd_info
    | `-VarDecl 0x1278f4898 <col:2, col:19> col:19 used mtd 'struct mtd_info *'
    |-DeclStmt 0x1278f49b0 <line:8:2, col:17>
    | `-VarDecl 0x1278f4948 <col:2, col:15> col:15 used cs 'unsigned int'
    |-DeclStmt 0x1278f4ae0 <line:9:2, col:12>
    | |-VarDecl 0x1278f49e0 <col:2, col:6> col:6 used i 'int'
    | `-VarDecl 0x1278f4a60 <col:2, col:9> col:9 used ret 'int'
    |-CallExpr 0x137827b58 <line:12:2, col:51> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x137827ab8 <col:2> 'int ()' Function 0x137827a00 'for_each_available_child_of_node' 'int ()'
    | |-RecoveryExpr 0x137827b10 <col:35, col:40> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x137827ad8 <col:35> 'struct device *' contains-errors lvalue Var 0x1278f4218 'dev' 'struct device *'
    | `-DeclRefExpr 0x137827b38 <col:49> 'struct device_node *' lvalue ParmVar 0x1278f3c28 'np' 'struct device_node *'
    |-CompoundStmt 0x130008f78 <col:53, line:64:2>
    | |-IfStmt 0x137828070 <line:13:3, line:16:3>
    | | |-CallExpr 0x137827dc8 <line:13:7, col:42> 'int'
    | | | |-ImplicitCastExpr 0x137827db0 <col:7> 'int (*)()' <FunctionToPointerDecay>
    | | | | `-DeclRefExpr 0x137827c68 <col:7> 'int ()' Function 0x137827bb0 'of_property_read_u32' 'int ()'
    | | | |-ImplicitCastExpr 0x137827e00 <col:28> 'struct device_node *' <LValueToRValue>
    | | | | `-DeclRefExpr 0x137827c88 <col:28> 'struct device_node *' lvalue ParmVar 0x1278f3c28 'np' 'struct device_node *'
    | | | |-ImplicitCastExpr 0x137827e18 <col:32> 'char *' <ArrayToPointerDecay>
    | | | | `-StringLiteral 0x137827cf0 <col:32> 'char[4]' lvalue "STR"
    | | | `-UnaryOperator 0x137827d60 <col:39, col:40> 'unsigned int *' prefix '&' cannot overflow
    | | |   `-DeclRefExpr 0x137827d10 <col:40> 'unsigned int' lvalue Var 0x1278f4948 'cs' 'unsigned int'
    | | `-CompoundStmt 0x137828050 <col:45, line:16:3>
    | |   |-CallExpr 0x137827f88 <line:14:4, col:22> 'int' contains-errors
    | |   | |-ImplicitCastExpr 0x137827f70 <col:4> 'int (*)()' <FunctionToPointerDecay>
    | |   | | `-DeclRefExpr 0x137827f10 <col:4> 'int ()' Function 0x137827e58 'dev_err' 'int ()'
    | |   | |-ImplicitCastExpr 0x137827fb8 <col:12> 'struct device *' contains-errors <LValueToRValue>
    | |   | | `-DeclRefExpr 0x137827f30 <col:12> 'struct device *' contains-errors lvalue Var 0x1278f4218 'dev' 'struct device *'
    | |   | `-ImplicitCastExpr 0x137827fd0 <col:17> 'char *' <ArrayToPointerDecay>
    | |   |   `-StringLiteral 0x137827f50 <col:17> 'char[4]' lvalue "STR"
    | |   `-GotoStmt 0x137828038 <line:15:4, col:9> 'err' 0x137827fe8
    | |-IfStmt 0x137828278 <line:18:3, line:21:3>
    | | |-BinaryOperator 0x137828108 <line:18:7, col:12> 'int' contains-errors '>'
    | | | |-DeclRefExpr 0x137828090 <col:7> 'unsigned int' lvalue Var 0x1278f4948 'cs' 'unsigned int'
    | | | `-RecoveryExpr 0x1378280e8 <col:12> '<dependent type>' contains-errors lvalue
    | | `-CompoundStmt 0x137828258 <col:34, line:21:3>
    | |   |-CallExpr 0x1378281c0 <line:19:4, col:26> 'int' contains-errors
    | |   | |-ImplicitCastExpr 0x1378281a8 <col:4> 'int (*)()' <FunctionToPointerDecay>
    | |   | | `-DeclRefExpr 0x137828128 <col:4> 'int ()' Function 0x137827e58 'dev_err' 'int ()'
    | |   | |-ImplicitCastExpr 0x1378281f8 <col:12> 'struct device *' contains-errors <LValueToRValue>
    | |   | | `-DeclRefExpr 0x137828148 <col:12> 'struct device *' contains-errors lvalue Var 0x1278f4218 'dev' 'struct device *'
    | |   | |-ImplicitCastExpr 0x137828210 <col:17> 'char *' <ArrayToPointerDecay>
    | |   | | `-StringLiteral 0x137828168 <col:17> 'char[4]' lvalue "STR"
    | |   | `-ImplicitCastExpr 0x137828228 <col:24> 'unsigned int' <LValueToRValue>
    | |   |   `-DeclRefExpr 0x137828188 <col:24> 'unsigned int' lvalue Var 0x1278f4948 'cs' 'unsigned int'
    | |   `-GotoStmt 0x137828240 <line:20:4, col:9> 'err' 0x137827fe8
    | |-BinaryOperator 0x1378283a0 <line:23:3, col:31> 'struct cqspi_flash_pdata *' contains-errors '='
    | | |-DeclRefExpr 0x137828298 <col:3> 'struct cqspi_flash_pdata *' lvalue Var 0x1278f4498 'f_pdata' 'struct cqspi_flash_pdata *'
    | | `-UnaryOperator 0x137828388 <col:13, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |   `-ArraySubscriptExpr 0x137828368 <col:14, col:31> '<dependent type>' contains-errors lvalue
    | |     |-ImplicitCastExpr 0x137828338 <col:14, col:21> '<dependent type>' contains-errors <LValueToRValue>
    | |     | `-RecoveryExpr 0x1378282f0 <col:14, col:21> '<dependent type>' contains-errors lvalue
    | |     |   `-DeclRefExpr 0x1378282b8 <col:14> 'struct cqspi_st *' lvalue ParmVar 0x13780e848 'cqspi' 'struct cqspi_st *'
    | |     `-ImplicitCastExpr 0x137828350 <col:29> 'unsigned int' <LValueToRValue>
    | |       `-DeclRefExpr 0x137828318 <col:29> 'unsigned int' lvalue Var 0x1278f4948 'cs' 'unsigned int'
    | |-BinaryOperator 0x137828440 <line:24:3, col:20> '<dependent type>' contains-errors '='
    | | |-RecoveryExpr 0x1378283f8 <col:3, col:12> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x1378283c0 <col:3> 'struct cqspi_flash_pdata *' lvalue Var 0x1278f4498 'f_pdata' 'struct cqspi_flash_pdata *'
    | | `-DeclRefExpr 0x137828420 <col:20> 'struct cqspi_st *' lvalue ParmVar 0x13780e848 'cqspi' 'struct cqspi_st *'
    | |-BinaryOperator 0x1378284e0 <line:25:3, col:17> '<dependent type>' contains-errors '='
    | | |-RecoveryExpr 0x137828498 <col:3, col:12> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x137828460 <col:3> 'struct cqspi_flash_pdata *' lvalue Var 0x1278f4498 'f_pdata' 'struct cqspi_flash_pdata *'
    | | `-DeclRefExpr 0x1378284c0 <col:17> 'unsigned int' lvalue Var 0x1278f4948 'cs' 'unsigned int'
    | |-BinaryOperator 0x137828718 <line:27:3, col:51> 'int' contains-errors '='
    | | |-DeclRefExpr 0x137828500 <col:3> 'int' lvalue Var 0x1278f4a60 'ret' 'int'
    | | `-CallExpr 0x137828698 <col:9, col:51> 'int' contains-errors
    | |   |-ImplicitCastExpr 0x137828680 <col:9> 'int (*)()' <FunctionToPointerDecay>
    | |   | `-DeclRefExpr 0x137828600 <col:9> 'int ()' Function 0x137828548 'cqspi_of_get_flash_pdata' 'int ()'
    | |   |-ImplicitCastExpr 0x1378286d0 <col:34> 'struct platform_device *' contains-errors <LValueToRValue>
    | |   | `-DeclRefExpr 0x137828620 <col:34> 'struct platform_device *' contains-errors lvalue Var 0x1278f3fb8 'pdev' 'struct platform_device *'
    | |   |-ImplicitCastExpr 0x1378286e8 <col:40> 'struct cqspi_flash_pdata *' <LValueToRValue>
    | |   | `-DeclRefExpr 0x137828640 <col:40> 'struct cqspi_flash_pdata *' lvalue Var 0x1278f4498 'f_pdata' 'struct cqspi_flash_pdata *'
    | |   `-ImplicitCastExpr 0x137828700 <col:49> 'struct device_node *' <LValueToRValue>
    | |     `-DeclRefExpr 0x137828660 <col:49> 'struct device_node *' lvalue ParmVar 0x1278f3c28 'np' 'struct device_node *'
    | |-IfStmt 0x137828788 <line:28:3, line:29:9>
    | | |-ImplicitCastExpr 0x137828758 <line:28:7> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x137828738 <col:7> 'int' lvalue Var 0x1278f4a60 'ret' 'int'
    | | `-GotoStmt 0x137828770 <line:29:4, col:9> 'err' 0x137827fe8
    | |-BinaryOperator 0x137828840 <line:31:3, col:19> 'struct spi_nor *' contains-errors '='
    | | |-DeclRefExpr 0x1378287a8 <col:3> 'struct spi_nor *' lvalue Var 0x1278f4698 'nor' 'struct spi_nor *'
    | | `-UnaryOperator 0x137828828 <col:9, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |   `-RecoveryExpr 0x137828800 <col:10, col:19> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x1378287c8 <col:10> 'struct cqspi_flash_pdata *' lvalue Var 0x1278f4498 'f_pdata' 'struct cqspi_flash_pdata *'
    | |-BinaryOperator 0x1378288f8 <line:32:3, col:15> 'struct mtd_info *' contains-errors '='
    | | |-DeclRefExpr 0x137828860 <col:3> 'struct mtd_info *' lvalue Var 0x1278f4898 'mtd' 'struct mtd_info *'
    | | `-UnaryOperator 0x1378288e0 <col:9, col:15> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |   `-RecoveryExpr 0x1378288b8 <col:10, col:15> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x137828880 <col:10> 'struct spi_nor *' lvalue Var 0x1278f4698 'nor' 'struct spi_nor *'
    | |-BinaryOperator 0x137828998 <line:34:3, col:15> '<dependent type>' contains-errors '='
    | | |-RecoveryExpr 0x137828950 <col:3, col:8> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x137828918 <col:3> 'struct mtd_info *' lvalue Var 0x1278f4898 'mtd' 'struct mtd_info *'
    | | `-DeclRefExpr 0x137828978 <col:15> 'struct spi_nor *' lvalue Var 0x1278f4698 'nor' 'struct spi_nor *'
    | |-BinaryOperator 0x130008248 <line:36:3, col:14> '<dependent type>' contains-errors '='
    | | |-RecoveryExpr 0x130008200 <col:3, col:8> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x1378289b8 <col:3> 'struct spi_nor *' lvalue Var 0x1278f4698 'nor' 'struct spi_nor *'
    | | `-DeclRefExpr 0x130008228 <col:14> 'struct device *' contains-errors lvalue Var 0x1278f4218 'dev' 'struct device *'
    | |-CallExpr 0x1300083c0 <line:37:3, col:33> 'int'
    | | |-ImplicitCastExpr 0x1300083a8 <col:3> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x130008348 <col:3> 'int ()' Function 0x130008290 'spi_nor_set_flash_node' 'int ()'
    | | |-ImplicitCastExpr 0x1300083f0 <col:26> 'struct spi_nor *' <LValueToRValue>
    | | | `-DeclRefExpr 0x130008368 <col:26> 'struct spi_nor *' lvalue Var 0x1278f4698 'nor' 'struct spi_nor *'
    | | `-ImplicitCastExpr 0x130008408 <col:31> 'struct device_node *' <LValueToRValue>
    | |   `-DeclRefExpr 0x130008388 <col:31> 'struct device_node *' lvalue ParmVar 0x1278f3c28 'np' 'struct device_node *'
    | |-BinaryOperator 0x1300084a0 <line:38:3, col:15> '<dependent type>' contains-errors '='
    | | |-RecoveryExpr 0x130008458 <col:3, col:8> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x130008420 <col:3> 'struct spi_nor *' lvalue Var 0x1278f4698 'nor' 'struct spi_nor *'
    | | `-DeclRefExpr 0x130008480 <col:15> 'struct cqspi_flash_pdata *' lvalue Var 0x1278f4498 'f_pdata' 'struct cqspi_flash_pdata *'
    | |-IfStmt 0x130008b78 <line:50:3, line:53:3>
    | | |-UnaryOperator 0x130008b10 <line:50:7, col:13> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | | `-ImplicitCastExpr 0x130008af8 <col:8, col:13> '<dependent type>' contains-errors <LValueToRValue>
    | | |   `-RecoveryExpr 0x130008ad0 <col:8, col:13> '<dependent type>' contains-errors lvalue
    | | |     `-DeclRefExpr 0x130008a98 <col:8> 'struct mtd_info *' lvalue Var 0x1278f4898 'mtd' 'struct mtd_info *'
    | | `-CompoundStmt 0x130008b60 <col:19, line:53:3>
    | |   `-GotoStmt 0x130008b48 <line:52:4, col:9> 'err' 0x137827fe8
    | |-IfStmt 0x130008d28 <line:56:3, line:57:9>
    | | |-ImplicitCastExpr 0x130008cf8 <line:56:7> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x130008cd8 <col:7> 'int' lvalue Var 0x1278f4a60 'ret' 'int'
    | | `-GotoStmt 0x130008d10 <line:57:4, col:9> 'err' 0x137827fe8
    | `-IfStmt 0x130008ef8 <line:60:3, line:61:9>
    |   |-ImplicitCastExpr 0x130008ec8 <line:60:7> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x130008ea8 <col:7> 'int' lvalue Var 0x1278f4a60 'ret' 'int'
    |   `-GotoStmt 0x130008ee0 <line:61:4, col:9> 'err' 0x137827fe8
    |-ReturnStmt 0x130009028 <line:66:2, col:9>
    | `-IntegerLiteral 0x130009008 <col:9> 'int' 0
    |-LabelStmt 0x137829510 <line:68:1, col:4> 'err'
    | `-NullStmt 0x137829508 <col:4>
    `-ReturnStmt 0x137829568 <line:72:2, col:9>
      `-ImplicitCastExpr 0x137829550 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x137829530 <col:9> 'int' lvalue Var 0x1278f4a60 'ret' 'int'
