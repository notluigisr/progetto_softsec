TranslationUnitDecl 0x14c055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14c0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14c055bd0 '__int128'
|-TypedefDecl 0x14c056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14c055bf0 'unsigned __int128'
|-TypedefDecl 0x14c126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14c126000 'struct __NSConstantString_tag'
|   `-Record 0x14c056580 '__NSConstantString_tag'
|-TypedefDecl 0x14c126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14c055d90 '__SVInt8_t'
|-TypedefDecl 0x14c126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14c055db0 '__SVInt16_t'
|-TypedefDecl 0x14c126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14c055dd0 '__SVInt32_t'
|-TypedefDecl 0x14c1263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14c055df0 '__SVInt64_t'
|-TypedefDecl 0x14c126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14c055e10 '__SVUint8_t'
|-TypedefDecl 0x14c1264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14c055e30 '__SVUint16_t'
|-TypedefDecl 0x14c126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14c055e50 '__SVUint32_t'
|-TypedefDecl 0x14c126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14c055e70 '__SVUint64_t'
|-TypedefDecl 0x14c1265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14c055e90 '__SVFloat16_t'
|-TypedefDecl 0x14c126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14c055eb0 '__SVFloat32_t'
|-TypedefDecl 0x14c1266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14c055ed0 '__SVFloat64_t'
|-TypedefDecl 0x14c126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14c055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14c126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14c055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14c1267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14c055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14c126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14c055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14c1268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14c055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14c126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14c055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14c126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14c055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14c1269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14c055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14c126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14c055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14c126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14c056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14c126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14c056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14c126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14c056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14c126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14c056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14c126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14c056090 '__clang_svint8x3_t'
|-TypedefDecl 0x14c126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14c0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14c126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14c0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14c126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14c0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14c126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14c056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14c126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14c056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14c126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14c056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14c126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14c056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14c126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14c056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14c127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14c0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14c127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14c0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14c1278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14c0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14c127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14c056210 '__clang_svint8x4_t'
|-TypedefDecl 0x14c1279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14c056230 '__clang_svint16x4_t'
|-TypedefDecl 0x14c127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14c056250 '__clang_svint32x4_t'
|-TypedefDecl 0x14c127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14c056270 '__clang_svint64x4_t'
|-TypedefDecl 0x14c127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14c056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14c127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14c0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14c127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14c0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14c127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14c0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14c127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14c056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14c127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14c056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14c127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14c056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14c127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14c056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14c127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14c056390 '__SVBool_t'
|-TypedefDecl 0x14c127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14c0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14c127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14c0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14c127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14c0563f0 '__SVCount_t'
|-TypedefDecl 0x14c127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14c127fb0 'char *'
|   `-BuiltinType 0x14c0556b0 'char'
|-TypedefDecl 0x14c128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14c127fb0 'char *'
|   `-BuiltinType 0x14c0556b0 'char'
`-FunctionDecl 0x14c128378 <dataset_diviso_filec/func16546_nonvuln.c:1:1, line:29:1> line:1:1 invalid convert_1_bit 'int (const char *, char *, int, int)'
  |-ParmVarDecl 0x14c1280f0 <col:16, col:29> col:29 used src 'const char *'
  |-ParmVarDecl 0x14c128170 <line:2:16, col:29> col:29 used dst 'char *'
  |-ParmVarDecl 0x14c1281f0 <line:3:16, col:29> col:29 invalid rows 'int'
  |-ParmVarDecl 0x14c128270 <line:4:16, col:29> col:29 invalid columns 'int'
  `-CompoundStmt 0x14d009d40 <line:5:1, line:29:1>
    |-DeclStmt 0x14c128558 <line:8:3, col:15>
    | |-VarDecl 0x14c128458 <col:3, col:11> col:11 used i 'int'
    | `-VarDecl 0x14c1284d8 <col:3, col:14> col:14 used j 'int'
    |-CallExpr 0x14c128758 <line:10:3, col:10> 'int'
    | |-ImplicitCastExpr 0x14c128740 <col:3> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x14c1286d0 <col:3> 'int ()' Function 0x14c128618 'IFDBG' 'int ()'
    | `-IntegerLiteral 0x14c1286f0 <col:9> 'int' 3
    |-CallExpr 0x14d008f58 <col:13, col:27> 'int'
    | |-ImplicitCastExpr 0x14d008f40 <col:13> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x14d008eb8 <col:13> 'int ()' Function 0x14d008e00 'g_debug' 'int ()'
    | `-ImplicitCastExpr 0x14d008f80 <col:22> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x14d008f20 <col:22> 'char[4]' lvalue "STR"
    |-ForStmt 0x14d009bf0 <line:12:3, line:27:5>
    | |-BinaryOperator 0x14d008fd8 <line:12:8, col:12> 'int' '='
    | | |-DeclRefExpr 0x14d008f98 <col:8> 'int' lvalue Var 0x14c128458 'i' 'int'
    | | `-IntegerLiteral 0x14d008fb8 <col:12> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x14d009138 <col:15, col:45> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x14d008ff8 <col:15> 'int' lvalue Var 0x14c128458 'i' 'int'
    | | `-BinaryOperator 0x14d009118 <col:19, col:45> '<dependent type>' contains-errors '*'
    | |   |-RecoveryExpr 0x14d009018 <col:19> '<dependent type>' contains-errors lvalue
    | |   `-ParenExpr 0x14d0090f8 <col:26, col:45> '<dependent type>' contains-errors
    | |     `-BinaryOperator 0x14d0090d8 <col:27, col:44> '<dependent type>' contains-errors '>>'
    | |       |-ParenExpr 0x14d009098 <col:27, col:39> '<dependent type>' contains-errors
    | |       | `-BinaryOperator 0x14d009078 <col:28, col:38> '<dependent type>' contains-errors '+'
    | |       |   |-RecoveryExpr 0x14d009038 <col:28> '<dependent type>' contains-errors lvalue
    | |       |   `-IntegerLiteral 0x14d009058 <col:38> 'int' 7
    | |       `-IntegerLiteral 0x14d0090b8 <col:44> 'int' 3
    | |-UnaryOperator 0x14d009178 <col:48, col:50> 'int' prefix '++'
    | | `-DeclRefExpr 0x14d009158 <col:50> 'int' lvalue Var 0x14c128458 'i' 'int'
    | `-CompoundStmt 0x14d009bc8 <line:13:5, line:27:5>
    |   |-DeclStmt 0x14d009240 <line:14:7, col:28>
    |   | `-VarDecl 0x14d0091a0 <col:7, col:24> col:17 used mask 'char' cinit
    |   |   `-ImplicitCastExpr 0x14d009228 <col:24> 'char' <IntegralCast>
    |   |     `-IntegerLiteral 0x14d009208 <col:24> 'int' 128
    |   |-ForStmt 0x14d009aa0 <line:15:7, line:23:9>
    |   | |-BinaryOperator 0x14d009298 <line:15:12, col:16> 'int' '='
    |   | | |-DeclRefExpr 0x14d009258 <col:12> 'int' lvalue Var 0x14c1284d8 'j' 'int'
    |   | | `-IntegerLiteral 0x14d009278 <col:16> 'int' 0
    |   | |-<<<NULL>>>
    |   | |-BinaryOperator 0x14d009458 <col:19, col:38> 'int' contains-errors '&&'
    |   | | |-BinaryOperator 0x14d0093f8 <col:19, col:23> 'int' '<'
    |   | | | |-ImplicitCastExpr 0x14d0093e0 <col:19> 'int' <LValueToRValue>
    |   | | | | `-DeclRefExpr 0x14d0092b8 <col:19> 'int' lvalue Var 0x14c1284d8 'j' 'int'
    |   | | | `-IntegerLiteral 0x14d0092d8 <col:23> 'int' 8
    |   | | `-BinaryOperator 0x14d009438 <col:28, col:38> 'int' contains-errors '<'
    |   | |   |-RecoveryExpr 0x14d009418 <col:28> '<dependent type>' contains-errors lvalue
    |   | |   `-RecoveryExpr 0x14d009348 <col:38> '<dependent type>' contains-errors lvalue
    |   | |-UnaryOperator 0x14d009498 <col:47, col:49> 'int' prefix '++'
    |   | | `-DeclRefExpr 0x14d009478 <col:49> 'int' lvalue Var 0x14c1284d8 'j' 'int'
    |   | `-CompoundStmt 0x14d009a68 <line:16:9, line:23:9>
    |   |   |-BinaryOperator 0x14d009698 <line:17:11, col:38> 'char' '='
    |   |   | |-UnaryOperator 0x14d0094e8 <col:11, col:12> 'char' lvalue prefix '*' cannot overflow
    |   |   | | `-ImplicitCastExpr 0x14d0094d0 <col:12> 'char *' <LValueToRValue>
    |   |   | |   `-DeclRefExpr 0x14d0094b0 <col:12> 'char *' lvalue ParmVar 0x14c128170 'dst' 'char *'
    |   |   | `-ImplicitCastExpr 0x14d009680 <col:18, col:38> 'char' <IntegralCast>
    |   |   |   `-ConditionalOperator 0x14d009650 <col:18, col:38> 'int'
    |   |   |     |-ParenExpr 0x14d0095f0 <col:18, col:30> 'int'
    |   |   |     | `-BinaryOperator 0x14d0095d0 <col:19, col:26> 'int' '&'
    |   |   |     |   |-ImplicitCastExpr 0x14d009588 <col:19, col:20> 'int' <IntegralCast>
    |   |   |     |   | `-ImplicitCastExpr 0x14d009570 <col:19, col:20> 'char' <LValueToRValue>
    |   |   |     |   |   `-UnaryOperator 0x14d009538 <col:19, col:20> 'const char' lvalue prefix '*' cannot overflow
    |   |   |     |   |     `-ImplicitCastExpr 0x14d009520 <col:20> 'const char *' <LValueToRValue>
    |   |   |     |   |       `-DeclRefExpr 0x14d009500 <col:20> 'const char *' lvalue ParmVar 0x14c1280f0 'src' 'const char *'
    |   |   |     |   `-ImplicitCastExpr 0x14d0095b8 <col:26> 'int' <IntegralCast>
    |   |   |     |     `-ImplicitCastExpr 0x14d0095a0 <col:26> 'char' <LValueToRValue>
    |   |   |     |       `-DeclRefExpr 0x14d009550 <col:26> 'char' lvalue Var 0x14d0091a0 'mask' 'char'
    |   |   |     |-IntegerLiteral 0x14d009610 <col:34> 'int' 0
    |   |   |     `-IntegerLiteral 0x14d009630 <col:38> 'int' 1
    |   |   |-CallExpr 0x14d009710 <line:18:11, col:18> 'int'
    |   |   | |-ImplicitCastExpr 0x14d0096f8 <col:11> 'int (*)()' <FunctionToPointerDecay>
    |   |   | | `-DeclRefExpr 0x14d0096b8 <col:11> 'int ()' Function 0x14c128618 'IFDBG' 'int ()'
    |   |   | `-IntegerLiteral 0x14d0096d8 <col:17> 'int' 3
    |   |   |-CallExpr 0x14d009940 <col:20, line:19:39> '<dependent type>' contains-errors
    |   |   | |-DeclRefExpr 0x14d009738 <line:18:20> 'int ()' Function 0x14d008e00 'g_debug' 'int ()'
    |   |   | |-StringLiteral 0x14d009758 <col:29> 'char[4]' lvalue "STR"
    |   |   | |-DeclRefExpr 0x14d009778 <line:19:13> 'int' lvalue Var 0x14c128458 'i' 'int'
    |   |   | |-DeclRefExpr 0x14d009798 <col:17> 'int' lvalue Var 0x14c1284d8 'j' 'int'
    |   |   | |-RecoveryExpr 0x14d0098c0 <col:20> '<dependent type>' contains-errors lvalue
    |   |   | |-UnaryOperator 0x14d0098f8 <col:29, col:30> 'const char' lvalue prefix '*' cannot overflow
    |   |   | | `-ImplicitCastExpr 0x14d0098e0 <col:30> 'const char *' <LValueToRValue>
    |   |   | |   `-DeclRefExpr 0x14d0097d0 <col:30> 'const char *' lvalue ParmVar 0x14c1280f0 'src' 'const char *'
    |   |   | `-UnaryOperator 0x14d009928 <col:35, col:36> 'char' lvalue prefix '*' cannot overflow
    |   |   |   `-ImplicitCastExpr 0x14d009910 <col:36> 'char *' <LValueToRValue>
    |   |   |     `-DeclRefExpr 0x14d009820 <col:36> 'char *' lvalue ParmVar 0x14c128170 'dst' 'char *'
    |   |   |-UnaryOperator 0x14d0099b0 <line:20:11, col:14> 'char *' postfix '++'
    |   |   | `-DeclRefExpr 0x14d009990 <col:11> 'char *' lvalue ParmVar 0x14c128170 'dst' 'char *'
    |   |   `-CompoundAssignOperator 0x14d009a38 <line:21:11, col:20> 'char' '>>=' ComputeLHSTy='int' ComputeResultTy='int'
    |   |     |-DeclRefExpr 0x14d0099c8 <col:11> 'char' lvalue Var 0x14d0091a0 'mask' 'char'
    |   |     `-IntegerLiteral 0x14d0099e8 <col:20> 'int' 1
    |   `-UnaryOperator 0x14d009bb0 <line:26:7, col:10> 'const char *' postfix '++'
    |     `-DeclRefExpr 0x14d009b90 <col:7> 'const char *' lvalue ParmVar 0x14c1280f0 'src' 'const char *'
    |-CallExpr 0x14d009c80 <line:28:3, col:10> 'int'
    | |-ImplicitCastExpr 0x14d009c68 <col:3> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x14d009c28 <col:3> 'int ()' Function 0x14c128618 'IFDBG' 'int ()'
    | `-IntegerLiteral 0x14d009c48 <col:9> 'int' 3
    `-CallExpr 0x14d009d00 <col:13, col:27> 'int'
      |-ImplicitCastExpr 0x14d009ce8 <col:13> 'int (*)()' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x14d009ca8 <col:13> 'int ()' Function 0x14d008e00 'g_debug' 'int ()'
      `-ImplicitCastExpr 0x14d009d28 <col:22> 'char *' <ArrayToPointerDecay>
        `-StringLiteral 0x14d009cc8 <col:22> 'char[4]' lvalue "STR"
