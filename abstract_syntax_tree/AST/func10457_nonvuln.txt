TranslationUnitDecl 0x139855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1398564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x139855bd0 '__int128'
|-TypedefDecl 0x139856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x139855bf0 'unsigned __int128'
|-TypedefDecl 0x13a00be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13a00bc00 'struct __NSConstantString_tag'
|   `-Record 0x139856580 '__NSConstantString_tag'
|-TypedefDecl 0x13a00be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x139855d90 '__SVInt8_t'
|-TypedefDecl 0x13a00bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x139855db0 '__SVInt16_t'
|-TypedefDecl 0x13a00bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x139855dd0 '__SVInt32_t'
|-TypedefDecl 0x13a00bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x139855df0 '__SVInt64_t'
|-TypedefDecl 0x13a00c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x139855e10 '__SVUint8_t'
|-TypedefDecl 0x13a00c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x139855e30 '__SVUint16_t'
|-TypedefDecl 0x13a00c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x139855e50 '__SVUint32_t'
|-TypedefDecl 0x13a00c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x139855e70 '__SVUint64_t'
|-TypedefDecl 0x13a00c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x139855e90 '__SVFloat16_t'
|-TypedefDecl 0x13a00c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x139855eb0 '__SVFloat32_t'
|-TypedefDecl 0x13a00c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x139855ed0 '__SVFloat64_t'
|-TypedefDecl 0x13a00c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x139855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13a00c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x139855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13a00c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x139855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13a00c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x139855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13a00c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x139855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13a00c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x139855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13a00c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x139855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13a00c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x139855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13a00c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x139855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13a00c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x139856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13a00c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x139856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13a00c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x139856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13a00c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x139856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13a00c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x139856090 '__clang_svint8x3_t'
|-TypedefDecl 0x13a00c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1398560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13a00c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1398560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13a00c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1398560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13a00c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x139856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13a00ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x139856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13a00cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x139856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13a00cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x139856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13a00cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x139856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13a00d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1398561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13a00d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1398561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13a00d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1398561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13a00d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x139856210 '__clang_svint8x4_t'
|-TypedefDecl 0x13a00d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x139856230 '__clang_svint16x4_t'
|-TypedefDecl 0x13a00d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x139856250 '__clang_svint32x4_t'
|-TypedefDecl 0x13a00d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x139856270 '__clang_svint64x4_t'
|-TypedefDecl 0x13a00d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x139856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13a00d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1398562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13a00d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1398562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13a00d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1398562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13a00d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x139856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13a00d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x139856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13a00d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x139856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13a00d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x139856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13a00da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x139856390 '__SVBool_t'
|-TypedefDecl 0x13a00da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1398563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13a00dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1398563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13a00db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1398563f0 '__SVCount_t'
|-TypedefDecl 0x13a00dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13a00dbb0 'char *'
|   `-BuiltinType 0x1398556b0 'char'
|-TypedefDecl 0x13a00dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13a00dbb0 'char *'
|   `-BuiltinType 0x1398556b0 'char'
`-FunctionDecl 0x13a00df18 <dataset_diviso_filec/func10457_nonvuln.c:1:1, line:28:1> line:1:1 invalid get_compflags 'int (int *, char *, char *)'
  |-ParmVarDecl 0x13a00dd28 <line:2:5, col:16> col:16 invalid affile 'int *'
  |-ParmVarDecl 0x13a00dda8 <line:3:5, col:13> col:13 used afflist 'char *'
  |-ParmVarDecl 0x13a00de28 <line:4:5, col:13> col:13 used store_afflist 'char *'
  `-CompoundStmt 0x13a029250 <line:5:1, line:28:1>
    |-DeclStmt 0x13a00e058 <line:6:5, col:14>
    | `-VarDecl 0x13a00dff0 <col:5, col:13> col:13 used p 'char *'
    |-DeclStmt 0x13a00e0f0 <line:7:5, col:18>
    | `-VarDecl 0x13a00e088 <col:5, col:13> col:13 used prevp 'char *'
    |-DeclStmt 0x13a00e1a8 <line:8:5, col:17>
    | `-VarDecl 0x13a00e120 <col:5, col:16> col:10 used cnt 'int' cinit
    |   `-IntegerLiteral 0x13a00e188 <col:16> 'int' 0
    |-DeclStmt 0x13a00e250 <line:9:5, col:27>
    | `-VarDecl 0x13a00e1e8 <col:5, col:12> col:12 invalid key 'char'
    `-ForStmt 0x13a028778 <line:12:5, line:25:5>
      |-BinaryOperator 0x13a00e2d8 <line:12:10, col:14> 'char *' '='
      | |-DeclRefExpr 0x13a00e280 <col:10> 'char *' lvalue Var 0x13a00dff0 'p' 'char *'
      | `-ImplicitCastExpr 0x13a00e2c0 <col:14> 'char *' <LValueToRValue>
      |   `-DeclRefExpr 0x13a00e2a0 <col:14> 'char *' lvalue ParmVar 0x13a00dda8 'afflist' 'char *'
      |-<<<NULL>>>
      |-BinaryOperator 0x13a027800 <col:23, col:29> 'int' contains-errors '!='
      | |-UnaryOperator 0x13a00e3c8 <col:23, col:24> 'char' lvalue prefix '*' cannot overflow
      | | `-ImplicitCastExpr 0x13a00e3b0 <col:24> 'char *' <LValueToRValue>
      | |   `-DeclRefExpr 0x13a00e2f8 <col:24> 'char *' lvalue Var 0x13a00dff0 'p' 'char *'
      | `-RecoveryExpr 0x13a00e3e0 <col:29> '<dependent type>' contains-errors lvalue
      |-<<<NULL>>>
      `-CompoundStmt 0x13a028750 <line:13:5, line:25:5>
        |-BinaryOperator 0x13a027878 <line:14:2, col:10> 'char *' '='
        | |-DeclRefExpr 0x13a027820 <col:2> 'char *' lvalue Var 0x13a00e088 'prevp' 'char *'
        | `-ImplicitCastExpr 0x13a027860 <col:10> 'char *' <LValueToRValue>
        |   `-DeclRefExpr 0x13a027840 <col:10> 'char *' lvalue Var 0x13a00dff0 'p' 'char *'
        |-IfStmt 0x13a028480 <line:15:2, line:22:2>
        | |-BinaryOperator 0x13a027b38 <line:15:6, col:46> 'int' contains-errors '!='
        | | |-CallExpr 0x13a027ae8 <col:6, col:41> '<dependent type>' contains-errors
        | | | |-DeclRefExpr 0x13a0279f0 <col:6> 'int ()' Function 0x13a027938 'get_affitem' 'int ()'
        | | | |-CXXDependentScopeMemberExpr 0x13a027a30 <col:18, col:26> '<dependent type>' contains-errors lvalue ->af_flagtype
        | | | | `-RecoveryExpr 0x13a027a10 <col:18> '<dependent type>' contains-errors lvalue
        | | | `-UnaryOperator 0x13a027ad0 <col:39, col:40> 'char **' prefix '&' cannot overflow
        | | |   `-DeclRefExpr 0x13a027a78 <col:40> 'char *' lvalue Var 0x13a00dff0 'p' 'char *'
        | | `-IntegerLiteral 0x13a027b18 <col:46> 'int' 0
        | `-CompoundStmt 0x13a028460 <line:16:2, line:22:2>
        |   |-CallExpr 0x13a027d28 <line:18:6, col:39> '<dependent type>' contains-errors
        |   | |-DeclRefExpr 0x13a027c38 <col:6> 'int ()' Function 0x13a027b80 'vim_strncpy' 'int ()'
        |   | |-RecoveryExpr 0x13a027c58 <col:18> '<dependent type>' contains-errors lvalue
        |   | |-DeclRefExpr 0x13a027c78 <col:23> 'char *' lvalue Var 0x13a00e088 'prevp' 'char *'
        |   | `-BinaryOperator 0x13a027d08 <col:30, col:34> 'long' '-'
        |   |   |-ImplicitCastExpr 0x13a027cd8 <col:30> 'char *' <LValueToRValue>
        |   |   | `-DeclRefExpr 0x13a027c98 <col:30> 'char *' lvalue Var 0x13a00dff0 'p' 'char *'
        |   |   `-ImplicitCastExpr 0x13a027cf0 <col:34> 'char *' <LValueToRValue>
        |   |     `-DeclRefExpr 0x13a027cb8 <col:34> 'char *' lvalue Var 0x13a00e088 'prevp' 'char *'
        |   `-IfStmt 0x13a028440 <line:20:6, line:21:37>
        |     |-UnaryOperator 0x13a0280d0 <line:20:10, col:28> '<dependent type>' contains-errors prefix '!' cannot overflow
        |     | `-CallExpr 0x13a0280a8 <col:11, col:28> '<dependent type>' contains-errors
        |     |   |-DeclRefExpr 0x13a028010 <col:11> 'int ()' Function 0x13a027f58 'HASHITEM_EMPTY' 'int ()'
        |     |   `-RecoveryExpr 0x13a028088 <col:26> '<dependent type>' contains-errors lvalue
        |     `-BinaryOperator 0x13a028420 <line:21:3, col:37> 'char' contains-errors '='
        |       |-ArraySubscriptExpr 0x13a028370 <col:3, col:22> 'char' lvalue
        |       | |-ImplicitCastExpr 0x13a028358 <col:3> 'char *' <LValueToRValue>
        |       | | `-DeclRefExpr 0x13a0280e8 <col:3> 'char *' lvalue ParmVar 0x13a00de28 'store_afflist' 'char *'
        |       | `-UnaryOperator 0x13a028128 <col:17, col:20> 'int' postfix '++'
        |       |   `-DeclRefExpr 0x13a028108 <col:17> 'int' lvalue Var 0x13a00e120 'cnt' 'int'
        |       `-CXXDependentScopeMemberExpr 0x13a0283d8 <col:26, col:37> '<dependent type>' contains-errors lvalue ->ci_newID
        |         `-CallExpr 0x13a0283b0 <col:26, col:34> '<dependent type>' contains-errors
        |           |-DeclRefExpr 0x13a028258 <col:26> 'int ()' Function 0x13a0281a0 'HI2CI' 'int ()'
        |           `-RecoveryExpr 0x13a028390 <col:32> '<dependent type>' contains-errors lvalue
        `-IfStmt 0x13a028730 <line:23:2, line:24:8>
          |-BinaryOperator 0x13a0286d8 <line:23:6, col:46> 'int' contains-errors '&&'
          | |-BinaryOperator 0x13a028638 <col:6, col:29> 'int' contains-errors '=='
          | | |-CXXDependentScopeMemberExpr 0x13a0284c0 <col:6, col:14> '<dependent type>' contains-errors lvalue ->af_flagtype
          | | | `-RecoveryExpr 0x13a0284a0 <col:6> '<dependent type>' contains-errors lvalue
          | | `-RecoveryExpr 0x13a028618 <col:29> '<dependent type>' contains-errors lvalue
          | `-BinaryOperator 0x13a0286b8 <col:40, col:46> 'int' '=='
          |   |-ImplicitCastExpr 0x13a0286a0 <col:40, col:41> 'int' <IntegralCast>
          |   | `-ImplicitCastExpr 0x13a028688 <col:40, col:41> 'char' <LValueToRValue>
          |   |   `-UnaryOperator 0x13a028670 <col:40, col:41> 'char' lvalue prefix '*' cannot overflow
          |   |     `-ImplicitCastExpr 0x13a028658 <col:41> 'char *' <LValueToRValue>
          |   |       `-DeclRefExpr 0x13a028540 <col:41> 'char *' lvalue Var 0x13a00dff0 'p' 'char *'
          |   `-CharacterLiteral 0x13a028590 <col:46> 'int' 44
          `-UnaryOperator 0x13a028718 <line:24:6, col:8> 'char *' prefix '++'
            `-DeclRefExpr 0x13a0286f8 <col:8> 'char *' lvalue Var 0x13a00dff0 'p' 'char *'
