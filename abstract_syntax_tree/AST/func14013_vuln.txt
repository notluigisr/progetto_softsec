TranslationUnitDecl 0x131855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1318564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x131855bd0 '__int128'
|-TypedefDecl 0x131856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x131855bf0 'unsigned __int128'
|-TypedefDecl 0x13200be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13200bc00 'struct __NSConstantString_tag'
|   `-Record 0x131856580 '__NSConstantString_tag'
|-TypedefDecl 0x13200be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x131855d90 '__SVInt8_t'
|-TypedefDecl 0x13200bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x131855db0 '__SVInt16_t'
|-TypedefDecl 0x13200bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x131855dd0 '__SVInt32_t'
|-TypedefDecl 0x13200bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x131855df0 '__SVInt64_t'
|-TypedefDecl 0x13200c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x131855e10 '__SVUint8_t'
|-TypedefDecl 0x13200c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x131855e30 '__SVUint16_t'
|-TypedefDecl 0x13200c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x131855e50 '__SVUint32_t'
|-TypedefDecl 0x13200c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x131855e70 '__SVUint64_t'
|-TypedefDecl 0x13200c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x131855e90 '__SVFloat16_t'
|-TypedefDecl 0x13200c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x131855eb0 '__SVFloat32_t'
|-TypedefDecl 0x13200c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x131855ed0 '__SVFloat64_t'
|-TypedefDecl 0x13200c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x131855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13200c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x131855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13200c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x131855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13200c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x131855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13200c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x131855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13200c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x131855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13200c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x131855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13200c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x131855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13200c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x131855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13200c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x131856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13200c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x131856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13200c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x131856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13200c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x131856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13200c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x131856090 '__clang_svint8x3_t'
|-TypedefDecl 0x13200c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1318560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13200c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1318560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13200c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1318560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13200c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x131856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13200ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x131856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13200cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x131856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13200cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x131856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13200cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x131856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13200d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1318561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13200d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1318561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13200d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1318561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13200d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x131856210 '__clang_svint8x4_t'
|-TypedefDecl 0x13200d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x131856230 '__clang_svint16x4_t'
|-TypedefDecl 0x13200d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x131856250 '__clang_svint32x4_t'
|-TypedefDecl 0x13200d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x131856270 '__clang_svint64x4_t'
|-TypedefDecl 0x13200d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x131856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13200d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1318562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13200d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1318562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13200d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1318562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13200d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x131856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13200d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x131856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13200d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x131856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13200d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x131856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13200da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x131856390 '__SVBool_t'
|-TypedefDecl 0x13200da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1318563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13200dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1318563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13200db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1318563f0 '__SVCount_t'
|-TypedefDecl 0x13200dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13200dbb0 'char *'
|   `-BuiltinType 0x1318556b0 'char'
|-TypedefDecl 0x13200dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13200dbb0 'char *'
|   `-BuiltinType 0x1318556b0 'char'
`-FunctionDecl 0x13200e008 <dataset_diviso_filec/func14013_vuln.c:1:1, line:68:1> line:1:1 find_file_name_in_path 'int (char *, int, int, long, char *)'
  |-ParmVarDecl 0x13200dcf0 <line:2:5, col:13> col:13 used ptr 'char *'
  |-ParmVarDecl 0x13200dd70 <line:3:5, col:10> col:10 used len 'int'
  |-ParmVarDecl 0x13200ddf0 <line:4:5, col:10> col:10 used options 'int'
  |-ParmVarDecl 0x13200de70 <line:5:5, col:10> col:10 used count 'long'
  |-ParmVarDecl 0x13200def0 <line:6:5, col:13> col:13 used rel_fname 'char *'
  `-CompoundStmt 0x13280a990 <line:7:1, line:68:1>
    |-DeclStmt 0x13200e1a0 <line:8:5, col:22>
    | `-VarDecl 0x13200e138 <col:5, col:13> col:13 used file_name 'char *'
    |-DeclStmt 0x13200e238 <line:9:5, col:11>
    | `-VarDecl 0x13200e1d0 <col:5, col:10> col:10 used c 'int'
    |-IfStmt 0x13280a900 <line:24:5, line:61:35> has_else
    | |-BinaryOperator 0x13200e2c8 <line:24:9, col:19> '<dependent type>' contains-errors '&'
    | | |-DeclRefExpr 0x13200e250 <col:9> 'int' lvalue ParmVar 0x13200ddf0 'options' 'int'
    | | `-RecoveryExpr 0x13200e2a8 <col:19> '<dependent type>' contains-errors lvalue
    | |-CompoundStmt 0x13280a2a8 <line:25:5, line:59:5>
    | | |-BinaryOperator 0x132808518 <line:26:2, line:27:28> 'char *' contains-errors '='
    | | | |-DeclRefExpr 0x13200e2e8 <line:26:2> 'char *' lvalue Var 0x13200e138 'file_name' 'char *'
    | | | `-CallExpr 0x1328084d0 <col:14, line:27:28> '<dependent type>' contains-errors
    | | |   |-DeclRefExpr 0x1328082b8 <line:26:14> 'int ()' Function 0x132808200 'find_file_in_path' 'int ()'
    | | |   |-DeclRefExpr 0x1328082d8 <col:32> 'char *' lvalue ParmVar 0x13200dcf0 'ptr' 'char *'
    | | |   |-DeclRefExpr 0x1328082f8 <col:37> 'int' lvalue ParmVar 0x13200dd70 'len' 'int'
    | | |   |-BinaryOperator 0x132808490 <col:42, col:53> '<dependent type>' contains-errors '&'
    | | |   | |-DeclRefExpr 0x132808318 <col:42> 'int' lvalue ParmVar 0x13200ddf0 'options' 'int'
    | | |   | `-UnaryOperator 0x132808478 <col:52, col:53> '<dependent type>' contains-errors prefix '~' cannot overflow
    | | |   |   `-ImplicitCastExpr 0x132808460 <col:53> '<dependent type>' contains-errors <LValueToRValue>
    | | |   |     `-RecoveryExpr 0x132808440 <col:53> '<dependent type>' contains-errors lvalue
    | | |   |-RecoveryExpr 0x1328084b0 <line:27:13> '<dependent type>' contains-errors lvalue
    | | |   `-DeclRefExpr 0x1328083b8 <col:19> 'char *' lvalue ParmVar 0x13200def0 'rel_fname' 'char *'
    | | |-IfStmt 0x132808d48 <line:44:2, line:50:2>
    | | | |-RecoveryExpr 0x1328085e8 <line:44:6, col:48> '_Bool' contains-errors
    | | | `-CompoundStmt 0x132808d18 <line:45:2, line:50:2>
    | | |   |-BinaryOperator 0x1328086e8 <line:46:6, col:17> 'int' '='
    | | |   | |-DeclRefExpr 0x132808608 <col:6> 'int' lvalue Var 0x13200e1d0 'c' 'int'
    | | |   | `-ImplicitCastExpr 0x1328086d0 <col:10, col:17> 'int' <IntegralCast>
    | | |   |   `-ImplicitCastExpr 0x1328086b8 <col:10, col:17> 'char' <LValueToRValue>
    | | |   |     `-ArraySubscriptExpr 0x132808698 <col:10, col:17> 'char' lvalue
    | | |   |       |-ImplicitCastExpr 0x132808668 <col:10> 'char *' <LValueToRValue>
    | | |   |       | `-DeclRefExpr 0x132808628 <col:10> 'char *' lvalue ParmVar 0x13200dcf0 'ptr' 'char *'
    | | |   |       `-ImplicitCastExpr 0x132808680 <col:14> 'int' <LValueToRValue>
    | | |   |         `-DeclRefExpr 0x132808648 <col:14> 'int' lvalue ParmVar 0x13200dd70 'len' 'int'
    | | |   |-BinaryOperator 0x132808890 <line:47:6, col:17> 'char' contains-errors '='
    | | |   | |-ArraySubscriptExpr 0x132808850 <col:6, col:13> 'char' lvalue
    | | |   | | |-ImplicitCastExpr 0x132808820 <col:6> 'char *' <LValueToRValue>
    | | |   | | | `-DeclRefExpr 0x132808708 <col:6> 'char *' lvalue ParmVar 0x13200dcf0 'ptr' 'char *'
    | | |   | | `-ImplicitCastExpr 0x132808838 <col:10> 'int' <LValueToRValue>
    | | |   | |   `-DeclRefExpr 0x132808728 <col:10> 'int' lvalue ParmVar 0x13200dd70 'len' 'int'
    | | |   | `-RecoveryExpr 0x132808870 <col:17> '<dependent type>' contains-errors lvalue
    | | |   |-CallExpr 0x132808bd0 <line:48:6, col:25> 'int'
    | | |   | |-ImplicitCastExpr 0x132808bb8 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | |   | | `-DeclRefExpr 0x132808990 <col:6> 'int ()' Function 0x1328088d8 'semsg' 'int ()'
    | | |   | |-CallExpr 0x132808b58 <col:12, col:19> 'int'
    | | |   | | |-ImplicitCastExpr 0x132808b40 <col:12> 'int (*)()' <FunctionToPointerDecay>
    | | |   | | | `-DeclRefExpr 0x132808a90 <col:12> 'int ()' Function 0x1328089d8 '_' 'int ()'
    | | |   | | `-ImplicitCastExpr 0x132808b80 <col:14> 'char *' <ArrayToPointerDecay>
    | | |   | |   `-StringLiteral 0x132808af0 <col:14> 'char[4]' lvalue "STR"
    | | |   | `-ImplicitCastExpr 0x132808c00 <col:22> 'char *' <LValueToRValue>
    | | |   |   `-DeclRefExpr 0x132808b98 <col:22> 'char *' lvalue ParmVar 0x13200dcf0 'ptr' 'char *'
    | | |   `-BinaryOperator 0x132808cf8 <line:49:6, col:17> 'char' '='
    | | |     |-ArraySubscriptExpr 0x132808c88 <col:6, col:13> 'char' lvalue
    | | |     | |-ImplicitCastExpr 0x132808c58 <col:6> 'char *' <LValueToRValue>
    | | |     | | `-DeclRefExpr 0x132808c18 <col:6> 'char *' lvalue ParmVar 0x13200dcf0 'ptr' 'char *'
    | | |     | `-ImplicitCastExpr 0x132808c70 <col:10> 'int' <LValueToRValue>
    | | |     |   `-DeclRefExpr 0x132808c38 <col:10> 'int' lvalue ParmVar 0x13200dd70 'len' 'int'
    | | |     `-ImplicitCastExpr 0x132808ce0 <col:17> 'char' <IntegralCast>
    | | |       `-ImplicitCastExpr 0x132808cc8 <col:17> 'int' <LValueToRValue>
    | | |         `-DeclRefExpr 0x132808ca8 <col:17> 'int' lvalue Var 0x13200e1d0 'c' 'int'
    | | `-WhileStmt 0x13280a288 <line:54:2, line:58:2>
    | |   |-BinaryOperator 0x132808ee8 <line:54:9, col:40> 'int' contains-errors '&&'
    | |   | |-BinaryOperator 0x132808e90 <col:9, col:22> 'int' contains-errors '!='
    | |   | | |-DeclRefExpr 0x132808d68 <col:9> 'char *' lvalue Var 0x13200e138 'file_name' 'char *'
    | |   | | `-RecoveryExpr 0x132808e70 <col:22> '<dependent type>' contains-errors lvalue
    | |   | `-BinaryOperator 0x132808ec8 <col:30, col:40> 'int' '>'
    | |   |   |-UnaryOperator 0x132808de0 <col:30, col:32> 'long' prefix '--'
    | |   |   | `-DeclRefExpr 0x132808dc0 <col:32> 'long' lvalue ParmVar 0x13200de70 'count' 'long'
    | |   |   `-ImplicitCastExpr 0x132808eb0 <col:40> 'long' <IntegralCast>
    | |   |     `-IntegerLiteral 0x132808df8 <col:40> 'int' 0
    | |   `-CompoundStmt 0x13280a268 <line:55:2, line:58:2>
    | |     |-CallExpr 0x132809040 <line:56:6, col:24> 'int'
    | |     | |-ImplicitCastExpr 0x132809028 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | |     | | `-DeclRefExpr 0x132808fe8 <col:6> 'int ()' Function 0x132808f30 'vim_free' 'int ()'
    | |     | `-ImplicitCastExpr 0x132809068 <col:15> 'char *' <LValueToRValue>
    | |     |   `-DeclRefExpr 0x132809008 <col:15> 'char *' lvalue Var 0x13200e138 'file_name' 'char *'
    | |     `-BinaryOperator 0x13280a248 <line:57:6, col:71> 'char *' contains-errors '='
    | |       |-DeclRefExpr 0x132809080 <col:6> 'char *' lvalue Var 0x13200e138 'file_name' 'char *'
    | |       `-CallExpr 0x13280a200 <col:18, col:71> '<dependent type>' contains-errors
    | |         |-DeclRefExpr 0x1328090a0 <col:18> 'int ()' Function 0x132808200 'find_file_in_path' 'int ()'
    | |         |-DeclRefExpr 0x1328090c0 <col:36> 'char *' lvalue ParmVar 0x13200dcf0 'ptr' 'char *'
    | |         |-DeclRefExpr 0x1328090e0 <col:41> 'int' lvalue ParmVar 0x13200dd70 'len' 'int'
    | |         |-DeclRefExpr 0x132809100 <col:46> 'int' lvalue ParmVar 0x13200ddf0 'options' 'int'
    | |         |-RecoveryExpr 0x1328091c0 <col:55> '<dependent type>' contains-errors lvalue
    | |         `-DeclRefExpr 0x132809138 <col:62> 'char *' lvalue ParmVar 0x13200def0 'rel_fname' 'char *'
    | `-BinaryOperator 0x13280a8e0 <line:61:2, col:35> 'char *' '='
    |   |-DeclRefExpr 0x13280a2d0 <col:2> 'char *' lvalue Var 0x13200e138 'file_name' 'char *'
    |   `-ImplicitCastExpr 0x13280a4a8 <col:14, col:35> 'char *' <IntegralToPointer>
    |     `-CallExpr 0x13280a448 <col:14, col:35> 'int'
    |       |-ImplicitCastExpr 0x13280a430 <col:14> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x13280a3d0 <col:14> 'int ()' Function 0x13280a318 'vim_strnsave' 'int ()'
    |       |-ImplicitCastExpr 0x13280a478 <col:27> 'char *' <LValueToRValue>
    |       | `-DeclRefExpr 0x13280a3f0 <col:27> 'char *' lvalue ParmVar 0x13200dcf0 'ptr' 'char *'
    |       `-ImplicitCastExpr 0x13280a490 <col:32> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x13280a410 <col:32> 'int' lvalue ParmVar 0x13200dd70 'len' 'int'
    `-ReturnStmt 0x13280a980 <line:67:5, col:12>
      `-ImplicitCastExpr 0x13280a968 <col:12> 'int' <PointerToIntegral>
        `-ImplicitCastExpr 0x13280a950 <col:12> 'char *' <LValueToRValue>
          `-DeclRefExpr 0x13280a930 <col:12> 'char *' lvalue Var 0x13200e138 'file_name' 'char *'
