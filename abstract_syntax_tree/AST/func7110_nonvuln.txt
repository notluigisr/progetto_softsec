TranslationUnitDecl 0x150013e08 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x150014cb8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1500143d0 '__int128'
|-TypedefDecl 0x150014d28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1500143f0 'unsigned __int128'
|-TypedefDecl 0x1500e6a30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1500e6800 'struct __NSConstantString_tag'
|   `-Record 0x150014d80 '__NSConstantString_tag'
|-TypedefDecl 0x1500e6a98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x150014590 '__SVInt8_t'
|-TypedefDecl 0x1500e6b00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x1500145b0 '__SVInt16_t'
|-TypedefDecl 0x1500e6b68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x1500145d0 '__SVInt32_t'
|-TypedefDecl 0x1500e6bd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x1500145f0 '__SVInt64_t'
|-TypedefDecl 0x1500e6c38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x150014610 '__SVUint8_t'
|-TypedefDecl 0x1500e6ca0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x150014630 '__SVUint16_t'
|-TypedefDecl 0x1500e6d08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x150014650 '__SVUint32_t'
|-TypedefDecl 0x1500e6d70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x150014670 '__SVUint64_t'
|-TypedefDecl 0x1500e6dd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x150014690 '__SVFloat16_t'
|-TypedefDecl 0x1500e6e40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x1500146b0 '__SVFloat32_t'
|-TypedefDecl 0x1500e6ea8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x1500146d0 '__SVFloat64_t'
|-TypedefDecl 0x1500e6f10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x1500146f0 '__SVBfloat16_t'
|-TypedefDecl 0x1500e6f78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x150014710 '__clang_svint8x2_t'
|-TypedefDecl 0x1500e6fe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x150014730 '__clang_svint16x2_t'
|-TypedefDecl 0x1500e7048 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x150014750 '__clang_svint32x2_t'
|-TypedefDecl 0x1500e70b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x150014770 '__clang_svint64x2_t'
|-TypedefDecl 0x1500e7118 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x150014790 '__clang_svuint8x2_t'
|-TypedefDecl 0x1500e7180 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x1500147b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1500e71e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x1500147d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x1500e7250 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x1500147f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1500e72b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x150014810 '__clang_svfloat16x2_t'
|-TypedefDecl 0x1500e7320 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x150014830 '__clang_svfloat32x2_t'
|-TypedefDecl 0x1500e7388 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x150014850 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1500e73f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x150014870 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x1500e7458 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x150014890 '__clang_svint8x3_t'
|-TypedefDecl 0x1500e74c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1500148b0 '__clang_svint16x3_t'
|-TypedefDecl 0x1500e7528 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1500148d0 '__clang_svint32x3_t'
|-TypedefDecl 0x1500e7590 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1500148f0 '__clang_svint64x3_t'
|-TypedefDecl 0x1500e75f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x150014910 '__clang_svuint8x3_t'
|-TypedefDecl 0x1500e7660 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x150014930 '__clang_svuint16x3_t'
|-TypedefDecl 0x1500e76c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x150014950 '__clang_svuint32x3_t'
|-TypedefDecl 0x1500e7730 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x150014970 '__clang_svuint64x3_t'
|-TypedefDecl 0x1500e7798 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x150014990 '__clang_svfloat16x3_t'
|-TypedefDecl 0x1500e8000 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1500149b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x1500e8068 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1500149d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1500e80d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1500149f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x1500e8138 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x150014a10 '__clang_svint8x4_t'
|-TypedefDecl 0x1500e81a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x150014a30 '__clang_svint16x4_t'
|-TypedefDecl 0x1500e8208 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x150014a50 '__clang_svint32x4_t'
|-TypedefDecl 0x1500e8270 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x150014a70 '__clang_svint64x4_t'
|-TypedefDecl 0x1500e82d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x150014a90 '__clang_svuint8x4_t'
|-TypedefDecl 0x1500e8340 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x150014ab0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1500e83a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x150014ad0 '__clang_svuint32x4_t'
|-TypedefDecl 0x1500e8410 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x150014af0 '__clang_svuint64x4_t'
|-TypedefDecl 0x1500e8478 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x150014b10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1500e84e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x150014b30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x1500e8548 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x150014b50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1500e85b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x150014b70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x1500e8618 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x150014b90 '__SVBool_t'
|-TypedefDecl 0x1500e8680 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x150014bb0 '__clang_svboolx2_t'
|-TypedefDecl 0x1500e86e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x150014bd0 '__clang_svboolx4_t'
|-TypedefDecl 0x1500e8750 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x150014bf0 '__SVCount_t'
|-TypedefDecl 0x1500e87f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1500e87b0 'char *'
|   `-BuiltinType 0x150013eb0 'char'
|-TypedefDecl 0x1500e8868 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1500e87b0 'char *'
|   `-BuiltinType 0x150013eb0 'char'
`-FunctionDecl 0x150101348 <dataset_diviso_filec/func7110_nonvuln.c:1:1, line:50:1> line:1:12 hw_rule_channels 'int (struct snd_pcm_hw_params *, struct snd_pcm_hw_rule *)' static
  |-ParmVarDecl 0x1500e8e48 <col:29, col:55> col:55 used params 'struct snd_pcm_hw_params *'
  |-ParmVarDecl 0x150101228 <line:2:8, col:32> col:32 used rule 'struct snd_pcm_hw_rule *'
  `-CompoundStmt 0x158049f20 <line:3:1, line:50:1>
    |-DeclStmt 0x150101698 <line:4:2, col:48>
    | |-RecordDecl 0x150101448 <col:2, col:9> col:9 struct snd_usb_substream
    | `-VarDecl 0x1501015b8 <col:2, col:41> col:28 used subs 'struct snd_usb_substream *' cinit
    |   `-RecoveryExpr 0x150101658 <col:35, col:41> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x150101620 <col:35> 'struct snd_pcm_hw_rule *' lvalue ParmVar 0x150101228 'rule' 'struct snd_pcm_hw_rule *'
    |-DeclStmt 0x150101898 <line:5:2, col:24>
    | |-RecordDecl 0x1501016b0 <col:2, col:9> col:9 struct audioformat
    | `-VarDecl 0x150101818 <col:2, col:22> col:22 used fp 'struct audioformat *'
    |-DeclStmt 0x150101ca0 <line:6:2, col:82>
    | |-RecordDecl 0x1501018b0 <col:2, col:9> col:9 struct snd_interval
    | `-VarDecl 0x150101a18 <col:2, col:81> col:23 used it 'struct snd_interval *' cinit
    |   `-CallExpr 0x150101c58 <col:28, col:81> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x150101bb0 <col:28> 'int ()' Function 0x150101af8 'hw_param_interval' 'int ()'
    |     |-DeclRefExpr 0x150101bd0 <col:46> 'struct snd_pcm_hw_params *' lvalue ParmVar 0x1500e8e48 'params' 'struct snd_pcm_hw_params *'
    |     `-RecoveryExpr 0x150101c38 <col:54> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x150101dd0 <line:7:2, col:25>
    | |-VarDecl 0x150101cd0 <col:2, col:15> col:15 used rmin 'unsigned int'
    | `-VarDecl 0x150101d50 <col:2, col:21> col:21 used rmax 'unsigned int'
    |-DeclStmt 0x150101e68 <line:8:2, col:13>
    | `-VarDecl 0x150101e00 <col:2, col:6> col:6 used changed 'int'
    |-CallExpr 0x1501020a0 <line:10:2, col:35> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x150101f60 <col:2> 'int ()' Function 0x150101ea8 'hwc_debug' 'int ()'
    | |-StringLiteral 0x150101fc0 <col:12> 'char[4]' lvalue "STR"
    | |-RecoveryExpr 0x150102018 <col:19, col:23> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x150101fe0 <col:19> 'struct snd_interval *' contains-errors lvalue Var 0x150101a18 'it' 'struct snd_interval *'
    | `-RecoveryExpr 0x150102078 <col:28, col:32> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x150102040 <col:28> 'struct snd_interval *' contains-errors lvalue Var 0x150101a18 'it' 'struct snd_interval *'
    |-BinaryOperator 0x150102118 <line:11:2, col:12> 'int' '='
    | |-DeclRefExpr 0x1501020d8 <col:2> 'int' lvalue Var 0x150101e00 'changed' 'int'
    | `-IntegerLiteral 0x1501020f8 <col:12> 'int' 0
    |-BinaryOperator 0x1501021d0 <line:12:2, col:16> 'unsigned int' '='
    | |-DeclRefExpr 0x150102138 <col:2> 'unsigned int' lvalue Var 0x150101cd0 'rmin' 'unsigned int'
    | `-BinaryOperator 0x1501021b0 <col:9, col:16> 'unsigned int' '='
    |   |-DeclRefExpr 0x150102158 <col:9> 'unsigned int' lvalue Var 0x150101d50 'rmax' 'unsigned int'
    |   `-ImplicitCastExpr 0x150102198 <col:16> 'unsigned int' <IntegralCast>
    |     `-IntegerLiteral 0x150102178 <col:16> 'int' 0
    |-CallExpr 0x158042808 <line:13:2, col:47> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1580426e0 <col:2> 'int ()' Function 0x158042628 'list_for_each_entry' 'int ()'
    | |-DeclRefExpr 0x158042700 <col:22> 'struct audioformat *' lvalue Var 0x150101818 'fp' 'struct audioformat *'
    | |-UnaryOperator 0x158042780 <col:26, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-RecoveryExpr 0x158042758 <col:27, col:33> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x158042720 <col:27> 'struct snd_usb_substream *' contains-errors lvalue Var 0x1501015b8 'subs' 'struct snd_usb_substream *'
    | `-RecoveryExpr 0x1580427e8 <col:43> '<dependent type>' contains-errors lvalue
    |-CompoundStmt 0x158042f28 <col:49, line:25:2>
    | `-IfStmt 0x158042ef8 <line:16:3, line:24:3> has_else
    |   |-UnaryOperator 0x158042aa0 <line:16:7, col:14> 'int' postfix '++'
    |   | `-DeclRefExpr 0x158042a80 <col:7> 'int' lvalue Var 0x150101e00 'changed' 'int'
    |   |-CompoundStmt 0x158042d78 <col:18, line:21:3>
    |   | |-IfStmt 0x158042bf8 <line:17:4, line:18:16>
    |   | | |-BinaryOperator 0x158042b38 <line:17:8, col:19> 'int' contains-errors '>'
    |   | | | |-DeclRefExpr 0x158042ab8 <col:8> 'unsigned int' lvalue Var 0x150101cd0 'rmin' 'unsigned int'
    |   | | | `-RecoveryExpr 0x158042b10 <col:15, col:19> '<dependent type>' contains-errors lvalue
    |   | | |   `-DeclRefExpr 0x158042ad8 <col:15> 'struct audioformat *' lvalue Var 0x150101818 'fp' 'struct audioformat *'
    |   | | `-BinaryOperator 0x158042bd8 <line:18:5, col:16> 'unsigned int' contains-errors '='
    |   | |   |-DeclRefExpr 0x158042b58 <col:5> 'unsigned int' lvalue Var 0x150101cd0 'rmin' 'unsigned int'
    |   | |   `-RecoveryExpr 0x158042bb0 <col:12, col:16> '<dependent type>' contains-errors lvalue
    |   | |     `-DeclRefExpr 0x158042b78 <col:12> 'struct audioformat *' lvalue Var 0x150101818 'fp' 'struct audioformat *'
    |   | `-IfStmt 0x158042d58 <line:19:4, line:20:16>
    |   |   |-BinaryOperator 0x158042c98 <line:19:8, col:19> 'int' contains-errors '<'
    |   |   | |-DeclRefExpr 0x158042c18 <col:8> 'unsigned int' lvalue Var 0x150101d50 'rmax' 'unsigned int'
    |   |   | `-RecoveryExpr 0x158042c70 <col:15, col:19> '<dependent type>' contains-errors lvalue
    |   |   |   `-DeclRefExpr 0x158042c38 <col:15> 'struct audioformat *' lvalue Var 0x150101818 'fp' 'struct audioformat *'
    |   |   `-BinaryOperator 0x158042d38 <line:20:5, col:16> 'unsigned int' contains-errors '='
    |   |     |-DeclRefExpr 0x158042cb8 <col:5> 'unsigned int' lvalue Var 0x150101d50 'rmax' 'unsigned int'
    |   |     `-RecoveryExpr 0x158042d10 <col:12, col:16> '<dependent type>' contains-errors lvalue
    |   |       `-DeclRefExpr 0x158042cd8 <col:12> 'struct audioformat *' lvalue Var 0x150101818 'fp' 'struct audioformat *'
    |   `-CompoundStmt 0x158042ed8 <line:21:10, line:24:3>
    |     |-BinaryOperator 0x158042e18 <line:22:4, col:15> 'unsigned int' contains-errors '='
    |     | |-DeclRefExpr 0x158042d98 <col:4> 'unsigned int' lvalue Var 0x150101cd0 'rmin' 'unsigned int'
    |     | `-RecoveryExpr 0x158042df0 <col:11, col:15> '<dependent type>' contains-errors lvalue
    |     |   `-DeclRefExpr 0x158042db8 <col:11> 'struct audioformat *' lvalue Var 0x150101818 'fp' 'struct audioformat *'
    |     `-BinaryOperator 0x158042eb8 <line:23:4, col:15> 'unsigned int' contains-errors '='
    |       |-DeclRefExpr 0x158042e38 <col:4> 'unsigned int' lvalue Var 0x150101d50 'rmax' 'unsigned int'
    |       `-RecoveryExpr 0x158042e90 <col:11, col:15> '<dependent type>' contains-errors lvalue
    |         `-DeclRefExpr 0x158042e58 <col:11> 'struct audioformat *' lvalue Var 0x150101818 'fp' 'struct audioformat *'
    |-IfStmt 0x158043198 <line:27:2, line:31:2>
    | |-UnaryOperator 0x158042f78 <line:27:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x158042f60 <col:7> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x158042f40 <col:7> 'int' lvalue Var 0x150101e00 'changed' 'int'
    | `-CompoundStmt 0x158043170 <col:16, line:31:2>
    |   |-CallExpr 0x158042fe8 <line:28:3, col:18> 'int'
    |   | |-ImplicitCastExpr 0x158042fd0 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x158042f90 <col:3> 'int ()' Function 0x150101ea8 'hwc_debug' 'int ()'
    |   | `-ImplicitCastExpr 0x158043010 <col:13> 'char *' <ArrayToPointerDecay>
    |   |   `-StringLiteral 0x158042fb0 <col:13> 'char[4]' lvalue "STR"
    |   |-BinaryOperator 0x1580430a8 <line:29:3, col:15> '<dependent type>' contains-errors '='
    |   | |-RecoveryExpr 0x158043060 <col:3, col:7> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x158043028 <col:3> 'struct snd_interval *' contains-errors lvalue Var 0x150101a18 'it' 'struct snd_interval *'
    |   | `-IntegerLiteral 0x158043088 <col:15> 'int' 1
    |   `-ReturnStmt 0x158043160 <line:30:3, col:11>
    |     `-UnaryOperator 0x158043148 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       `-ImplicitCastExpr 0x158043130 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |         `-RecoveryExpr 0x158043110 <col:11> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x1580431f8 <line:33:2, col:12> 'int' '='
    | |-DeclRefExpr 0x1580431b8 <col:2> 'int' lvalue Var 0x150101e00 'changed' 'int'
    | `-IntegerLiteral 0x1580431d8 <col:12> 'int' 0
    |-IfStmt 0x158043480 <line:34:2, line:38:2>
    | |-BinaryOperator 0x158043298 <line:34:6, col:16> 'int' contains-errors '<'
    | | |-RecoveryExpr 0x158043250 <col:6, col:10> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x158043218 <col:6> 'struct snd_interval *' contains-errors lvalue Var 0x150101a18 'it' 'struct snd_interval *'
    | | `-DeclRefExpr 0x158043278 <col:16> 'unsigned int' lvalue Var 0x150101cd0 'rmin' 'unsigned int'
    | `-CompoundStmt 0x158043458 <col:22, line:38:2>
    |   |-BinaryOperator 0x158043338 <line:35:3, col:13> '<dependent type>' contains-errors '='
    |   | |-RecoveryExpr 0x1580432f0 <col:3, col:7> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x1580432b8 <col:3> 'struct snd_interval *' contains-errors lvalue Var 0x150101a18 'it' 'struct snd_interval *'
    |   | `-DeclRefExpr 0x158043318 <col:13> 'unsigned int' lvalue Var 0x150101cd0 'rmin' 'unsigned int'
    |   |-BinaryOperator 0x1580433d8 <line:36:3, col:17> '<dependent type>' contains-errors '='
    |   | |-RecoveryExpr 0x158043390 <col:3, col:7> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x158043358 <col:3> 'struct snd_interval *' contains-errors lvalue Var 0x150101a18 'it' 'struct snd_interval *'
    |   | `-IntegerLiteral 0x1580433b8 <col:17> 'int' 0
    |   `-BinaryOperator 0x158043438 <line:37:3, col:13> 'int' '='
    |     |-DeclRefExpr 0x1580433f8 <col:3> 'int' lvalue Var 0x150101e00 'changed' 'int'
    |     `-IntegerLiteral 0x158043418 <col:13> 'int' 1
    |-IfStmt 0x158049b08 <line:39:2, line:43:2>
    | |-BinaryOperator 0x158043520 <line:39:6, col:16> 'int' contains-errors '>'
    | | |-RecoveryExpr 0x1580434d8 <col:6, col:10> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x1580434a0 <col:6> 'struct snd_interval *' contains-errors lvalue Var 0x150101a18 'it' 'struct snd_interval *'
    | | `-DeclRefExpr 0x158043500 <col:16> 'unsigned int' lvalue Var 0x150101d50 'rmax' 'unsigned int'
    | `-CompoundStmt 0x158049ae0 <col:22, line:43:2>
    |   |-BinaryOperator 0x1580435c0 <line:40:3, col:13> '<dependent type>' contains-errors '='
    |   | |-RecoveryExpr 0x158043578 <col:3, col:7> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x158043540 <col:3> 'struct snd_interval *' contains-errors lvalue Var 0x150101a18 'it' 'struct snd_interval *'
    |   | `-DeclRefExpr 0x1580435a0 <col:13> 'unsigned int' lvalue Var 0x150101d50 'rmax' 'unsigned int'
    |   |-BinaryOperator 0x158049a60 <line:41:3, col:17> '<dependent type>' contains-errors '='
    |   | |-RecoveryExpr 0x158049a18 <col:3, col:7> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x1580435e0 <col:3> 'struct snd_interval *' contains-errors lvalue Var 0x150101a18 'it' 'struct snd_interval *'
    |   | `-IntegerLiteral 0x158049a40 <col:17> 'int' 0
    |   `-BinaryOperator 0x158049ac0 <line:42:3, col:13> 'int' '='
    |     |-DeclRefExpr 0x158049a80 <col:3> 'int' lvalue Var 0x150101e00 'changed' 'int'
    |     `-IntegerLiteral 0x158049aa0 <col:13> 'int' 1
    |-IfStmt 0x158049d58 <line:44:2, line:47:2>
    | |-CallExpr 0x158049c60 <line:44:6, col:32> 'int' contains-errors
    | | |-ImplicitCastExpr 0x158049c48 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x158049c08 <col:6> 'int ()' Function 0x158049b50 'snd_interval_checkempty' 'int ()'
    | | `-ImplicitCastExpr 0x158049c88 <col:30> 'struct snd_interval *' contains-errors <LValueToRValue>
    | |   `-DeclRefExpr 0x158049c28 <col:30> 'struct snd_interval *' contains-errors lvalue Var 0x150101a18 'it' 'struct snd_interval *'
    | `-CompoundStmt 0x158049d40 <col:35, line:47:2>
    |   `-BinaryOperator 0x158049d20 <line:45:3, col:15> '<dependent type>' contains-errors '='
    |     |-RecoveryExpr 0x158049cd8 <col:3, col:7> '<dependent type>' contains-errors lvalue
    |     | `-DeclRefExpr 0x158049ca0 <col:3> 'struct snd_interval *' contains-errors lvalue Var 0x150101a18 'it' 'struct snd_interval *'
    |     `-IntegerLiteral 0x158049d00 <col:15> 'int' 1
    |-CallExpr 0x158049e98 <line:48:2, col:44> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x158049d78 <col:2> 'int ()' Function 0x150101ea8 'hwc_debug' 'int ()'
    | |-StringLiteral 0x158049d98 <col:12> 'char[4]' lvalue "STR"
    | |-RecoveryExpr 0x158049df0 <col:19, col:23> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x158049db8 <col:19> 'struct snd_interval *' contains-errors lvalue Var 0x150101a18 'it' 'struct snd_interval *'
    | |-RecoveryExpr 0x158049e50 <col:28, col:32> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x158049e18 <col:28> 'struct snd_interval *' contains-errors lvalue Var 0x150101a18 'it' 'struct snd_interval *'
    | `-DeclRefExpr 0x158049e78 <col:37> 'int' lvalue Var 0x150101e00 'changed' 'int'
    `-ReturnStmt 0x158049f10 <line:49:2, col:9>
      `-ImplicitCastExpr 0x158049ef8 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x158049ed8 <col:9> 'int' lvalue Var 0x150101e00 'changed' 'int'
