TranslationUnitDecl 0x156855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1568564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x156855bd0 '__int128'
|-TypedefDecl 0x156856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x156855bf0 'unsigned __int128'
|-TypedefDecl 0x156926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x156926000 'struct __NSConstantString_tag'
|   `-Record 0x156856580 '__NSConstantString_tag'
|-TypedefDecl 0x156926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x156855d90 '__SVInt8_t'
|-TypedefDecl 0x156926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x156855db0 '__SVInt16_t'
|-TypedefDecl 0x156926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x156855dd0 '__SVInt32_t'
|-TypedefDecl 0x1569263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x156855df0 '__SVInt64_t'
|-TypedefDecl 0x156926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x156855e10 '__SVUint8_t'
|-TypedefDecl 0x1569264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x156855e30 '__SVUint16_t'
|-TypedefDecl 0x156926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x156855e50 '__SVUint32_t'
|-TypedefDecl 0x156926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x156855e70 '__SVUint64_t'
|-TypedefDecl 0x1569265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x156855e90 '__SVFloat16_t'
|-TypedefDecl 0x156926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x156855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1569266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x156855ed0 '__SVFloat64_t'
|-TypedefDecl 0x156926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x156855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x156926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x156855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1569267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x156855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x156926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x156855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1569268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x156855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x156926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x156855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x156926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x156855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1569269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x156855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x156926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x156855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x156926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x156856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x156926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x156856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x156926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x156856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x156926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x156856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x156926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x156856090 '__clang_svint8x3_t'
|-TypedefDecl 0x156926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1568560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x156926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1568560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x156926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1568560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x156926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x156856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x156926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x156856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x156926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x156856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x156926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x156856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x156926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x156856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x156927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1568561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x156927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1568561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1569278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1568561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x156927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x156856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1569279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x156856230 '__clang_svint16x4_t'
|-TypedefDecl 0x156927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x156856250 '__clang_svint32x4_t'
|-TypedefDecl 0x156927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x156856270 '__clang_svint64x4_t'
|-TypedefDecl 0x156927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x156856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x156927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1568562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x156927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1568562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x156927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1568562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x156927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x156856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x156927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x156856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x156927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x156856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x156927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x156856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x156927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x156856390 '__SVBool_t'
|-TypedefDecl 0x156927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1568563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x156927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1568563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x156927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1568563f0 '__SVCount_t'
|-TypedefDecl 0x156927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x156927fb0 'char *'
|   `-BuiltinType 0x1568556b0 'char'
|-TypedefDecl 0x156928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x156927fb0 'char *'
|   `-BuiltinType 0x1568556b0 'char'
`-FunctionDecl 0x156928558 <dataset_diviso_filec/func4277_vuln.c:1:1, line:29:1> line:1:1 invalid addMultiArrayContentJSON 'int (int *, void *, const int *, int *, int *, int, int)'
  |-ParmVarDecl 0x156928128 <col:26, col:35> col:35 referenced invalid ctx 'int *'
  |-ParmVarDecl 0x1569281a8 <col:40, col:46> col:46 used array 'void *'
  |-ParmVarDecl 0x156928228 <col:53, col:72> col:72 invalid type 'const int *'
  |-ParmVarDecl 0x1569282a8 <line:2:26, col:34> col:34 invalid index 'int *'
  |-ParmVarDecl 0x156928328 <col:41, col:52> col:52 invalid arrayDimensions 'int *'
  |-ParmVarDecl 0x1569283a8 <col:69, col:76> col:76 invalid dimensionIndex 'int'
  |-ParmVarDecl 0x156928428 <line:3:26, col:33> col:33 invalid dimensionSize 'int'
  `-CompoundStmt 0x157008e18 <col:48, line:29:1>
    |-IfStmt 0x156928760 <line:5:5, line:6:16>
    | |-BinaryOperator 0x1569286f8 <line:5:8, col:21> 'int' contains-errors '>'
    | | |-CXXDependentScopeMemberExpr 0x156928658 <col:8, col:13> '<dependent type>' contains-errors lvalue ->depth
    | | | `-RecoveryExpr 0x156928638 <col:8> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x1569286d8 <col:21> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x156928750 <line:6:9, col:16>
    |   `-RecoveryExpr 0x156928730 <col:16> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x156941800 <line:9:5, col:15>
    | `-VarDecl 0x156928798 <col:5, col:12> col:12 used ret 'int' static
    |-IfStmt 0x156941de8 <line:10:5, line:15:5>
    | |-BinaryOperator 0x1569418b8 <line:10:8, col:44> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x156941818 <col:8> '<dependent type>' contains-errors lvalue
    | | `-ParenExpr 0x156941898 <col:26, col:44> '<dependent type>' contains-errors
    | |   `-BinaryOperator 0x156941878 <col:27, col:43> '<dependent type>' contains-errors '-'
    | |     |-RecoveryExpr 0x156941838 <col:27> '<dependent type>' contains-errors lvalue
    | |     `-IntegerLiteral 0x156941858 <col:43> 'int' 1
    | `-CompoundStmt 0x156941dc8 <col:47, line:15:5>
    |   |-CompoundAssignOperator 0x156941d50 <line:13:9, col:51> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   | |-ParenExpr 0x156941ca0 <col:9, col:16> '<dependent type>' contains-errors
    |   | | `-UnaryOperator 0x156941c88 <col:10, col:11> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   | |   `-ImplicitCastExpr 0x156941c70 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |   | |     `-RecoveryExpr 0x156941c50 <col:11> '<dependent type>' contains-errors lvalue
    |   | `-ArraySubscriptExpr 0x156941d30 <col:21, col:51> '<dependent type>' contains-errors lvalue
    |   |   |-ImplicitCastExpr 0x156941d00 <col:21> '<dependent type>' contains-errors <LValueToRValue>
    |   |   | `-RecoveryExpr 0x156941cc0 <col:21> '<dependent type>' contains-errors lvalue
    |   |   `-ImplicitCastExpr 0x156941d18 <col:37> '<dependent type>' contains-errors <LValueToRValue>
    |   |     `-RecoveryExpr 0x156941ce0 <col:37> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x156941db8 <line:14:9, col:16>
    |     `-ImplicitCastExpr 0x156941da0 <col:16> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x156941d80 <col:16> 'int' lvalue Var 0x156928798 'ret' 'int'
    |-BinaryOperator 0x156941f70 <line:18:5, col:32> 'int' contains-errors '='
    | |-DeclRefExpr 0x156941e08 <col:5> 'int' lvalue Var 0x156928798 'ret' 'int'
    | `-CallExpr 0x156941f48 <col:11, col:32> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x156941f08 <col:11> 'int ()' Function 0x156941e50 'writeJsonArrStart' 'int ()'
    |   `-RecoveryExpr 0x156941f28 <col:29> '<dependent type>' contains-errors lvalue
    |-ForStmt 0x157008c00 <line:19:5, line:26:5>
    | |-<<<NULL>>>
    | |-<<<NULL>>>
    | |-BinaryOperator 0x156942168 <line:19:23, col:57> 'int' contains-errors '<'
    | | |-RecoveryExpr 0x1569420f8 <col:23> '<dependent type>' contains-errors lvalue
    | | `-ArraySubscriptExpr 0x156942148 <col:27, col:57> '<dependent type>' contains-errors lvalue
    | |   |-ImplicitCastExpr 0x156942118 <col:27> '<dependent type>' contains-errors <LValueToRValue>
    | |   | `-RecoveryExpr 0x156942048 <col:27> '<dependent type>' contains-errors lvalue
    | |   `-ImplicitCastExpr 0x156942130 <col:43> '<dependent type>' contains-errors <LValueToRValue>
    | |     `-RecoveryExpr 0x156942068 <col:43> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x1569421d8 <col:60, col:61> '<dependent type>' contains-errors postfix '++' cannot overflow
    | | `-RecoveryExpr 0x1569421b8 <col:60> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x1569427b0 <col:65, line:26:5>
    |   |-CompoundAssignOperator 0x156942358 <line:20:9, col:42> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   | |-DeclRefExpr 0x1569421f0 <col:9> 'int' lvalue Var 0x156928798 'ret' 'int'
    |   | `-CallExpr 0x156942330 <col:16, col:42> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x1569422f0 <col:16> 'int ()' Function 0x156942238 'writeJsonCommaIfNeeded' 'int ()'
    |   |   `-RecoveryExpr 0x156942310 <col:39> '<dependent type>' contains-errors lvalue
    |   |-CompoundAssignOperator 0x156942540 <line:21:9, line:22:74> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   | |-DeclRefExpr 0x156942388 <line:21:9> 'int' lvalue Var 0x156928798 'ret' 'int'
    |   | `-CallExpr 0x1569424e8 <col:16, line:22:74> '<dependent type>' contains-errors
    |   |   |-RecoveryExpr 0x1569423a8 <line:21:16> '<dependent type>' contains-errors lvalue
    |   |   |-RecoveryExpr 0x1569423c8 <col:41> '<dependent type>' contains-errors lvalue
    |   |   |-DeclRefExpr 0x1569423e8 <col:46> 'void *' lvalue ParmVar 0x1569281a8 'array' 'void *'
    |   |   |-RecoveryExpr 0x156942408 <col:53> '<dependent type>' contains-errors lvalue
    |   |   |-RecoveryExpr 0x156942428 <col:59> '<dependent type>' contains-errors lvalue
    |   |   |-RecoveryExpr 0x156942448 <col:66> '<dependent type>' contains-errors lvalue
    |   |   |-BinaryOperator 0x1569424a8 <line:22:41, col:58> '<dependent type>' contains-errors '+'
    |   |   | |-RecoveryExpr 0x156942468 <col:41> '<dependent type>' contains-errors lvalue
    |   |   | `-IntegerLiteral 0x156942488 <col:58> 'int' 1
    |   |   `-RecoveryExpr 0x1569424c8 <col:61> '<dependent type>' contains-errors lvalue
    |   `-IfStmt 0x156942790 <line:24:9, line:25:20>
    |     |-RecoveryExpr 0x156942728 <line:24:12, col:19> '_Bool' contains-errors
    |     `-ReturnStmt 0x156942780 <line:25:13, col:20>
    |       `-ImplicitCastExpr 0x156942768 <col:20> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x156942748 <col:20> 'int' lvalue Var 0x156928798 'ret' 'int'
    |-CompoundAssignOperator 0x157008da0 <line:27:5, col:31> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | |-DeclRefExpr 0x157008c38 <col:5> 'int' lvalue Var 0x156928798 'ret' 'int'
    | `-CallExpr 0x157008d78 <col:12, col:31> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x157008d38 <col:12> 'int ()' Function 0x157008c80 'writeJsonArrEnd' 'int ()'
    |   `-RecoveryExpr 0x157008d58 <col:28> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x157008e08 <line:28:5, col:12>
      `-ImplicitCastExpr 0x157008df0 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x157008dd0 <col:12> 'int' lvalue Var 0x156928798 'ret' 'int'
