TranslationUnitDecl 0x149855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1498564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x149855bd0 '__int128'
|-TypedefDecl 0x149856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x149855bf0 'unsigned __int128'
|-TypedefDecl 0x14a00be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14a00bc00 'struct __NSConstantString_tag'
|   `-Record 0x149856580 '__NSConstantString_tag'
|-TypedefDecl 0x14a00be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x149855d90 '__SVInt8_t'
|-TypedefDecl 0x14a00bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x149855db0 '__SVInt16_t'
|-TypedefDecl 0x14a00bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x149855dd0 '__SVInt32_t'
|-TypedefDecl 0x14a00bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x149855df0 '__SVInt64_t'
|-TypedefDecl 0x14a00c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x149855e10 '__SVUint8_t'
|-TypedefDecl 0x14a00c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x149855e30 '__SVUint16_t'
|-TypedefDecl 0x14a00c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x149855e50 '__SVUint32_t'
|-TypedefDecl 0x14a00c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x149855e70 '__SVUint64_t'
|-TypedefDecl 0x14a00c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x149855e90 '__SVFloat16_t'
|-TypedefDecl 0x14a00c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x149855eb0 '__SVFloat32_t'
|-TypedefDecl 0x14a00c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x149855ed0 '__SVFloat64_t'
|-TypedefDecl 0x14a00c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x149855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14a00c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x149855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14a00c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x149855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14a00c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x149855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14a00c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x149855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14a00c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x149855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14a00c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x149855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14a00c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x149855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14a00c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x149855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14a00c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x149856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14a00c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x149856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14a00c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x149856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14a00c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x149856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14a00c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x149856090 '__clang_svint8x3_t'
|-TypedefDecl 0x14a00c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1498560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14a00c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1498560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14a00c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1498560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14a00c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x149856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14a00ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x149856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14a00cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x149856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14a00cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x149856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14a00cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x149856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14a00d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1498561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14a00d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1498561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14a00d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1498561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14a00d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x149856210 '__clang_svint8x4_t'
|-TypedefDecl 0x14a00d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x149856230 '__clang_svint16x4_t'
|-TypedefDecl 0x14a00d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x149856250 '__clang_svint32x4_t'
|-TypedefDecl 0x14a00d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x149856270 '__clang_svint64x4_t'
|-TypedefDecl 0x14a00d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x149856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14a00d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1498562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14a00d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1498562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14a00d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1498562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14a00d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x149856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14a00d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x149856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14a00d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x149856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14a00d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x149856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14a00da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x149856390 '__SVBool_t'
|-TypedefDecl 0x14a00da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1498563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14a00dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1498563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14a00db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1498563f0 '__SVCount_t'
|-TypedefDecl 0x14a00dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14a00dbb0 'char *'
|   `-BuiltinType 0x1498556b0 'char'
|-TypedefDecl 0x14a00dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14a00dbb0 'char *'
|   `-BuiltinType 0x1498556b0 'char'
|-FunctionDecl 0x14a027480 <dataset_diviso_filec/func21889_vuln.c:1:1, line:50:1> line:1:12 invalid parse_rr 'int (unsigned char *, unsigned char *, unsigned char *, unsigned char *, unsigned int *, int *, int *, int *, int *, unsigned char **, char *)' static
| |-ParmVarDecl 0x14a00dd08 <col:21, col:36> col:36 used buf 'unsigned char *'
| |-ParmVarDecl 0x14a00dd88 <col:41, col:56> col:56 used start 'unsigned char *'
| |-ParmVarDecl 0x14a00de08 <line:2:4, col:19> col:19 used max 'unsigned char *'
| |-ParmVarDecl 0x14a00de88 <line:3:4, col:19> col:19 used response 'unsigned char *'
| |-ParmVarDecl 0x14a00df38 <col:29, col:43> col:43 used response_size 'unsigned int *'
| |-ParmVarDecl 0x14a00e008 <line:4:4, col:14> col:14 invalid type 'int *'
| |-ParmVarDecl 0x14a00e088 <col:20, col:30> col:30 invalid class 'int *'
| |-ParmVarDecl 0x14a00e108 <col:37, col:42> col:42 used ttl 'int *'
| |-ParmVarDecl 0x14a00e188 <col:47, col:52> col:52 used rdlen 'int *'
| |-ParmVarDecl 0x14a00e240 <line:5:4, col:20> col:20 used end 'unsigned char **'
| |-ParmVarDecl 0x14a00e2c0 <line:6:4, col:10> col:10 used name 'char *'
| `-CompoundStmt 0x14a02c328 <line:7:1, line:50:1>
|   |-DeclStmt 0x14a027768 <line:8:2, col:22>
|   | |-RecordDecl 0x14a027580 <col:2, col:9> col:9 struct domain_rr
|   | `-VarDecl 0x14a0276e8 <col:2, col:20> col:20 used rr 'struct domain_rr *'
|   |-DeclStmt 0x14a027898 <line:9:2, col:17>
|   | |-VarDecl 0x14a027798 <col:2, col:6> col:6 used err 'int'
|   | `-VarDecl 0x14a027818 <col:2, col:11> col:11 used offset 'int'
|   |-DeclStmt 0x14a027b10 <line:10:2, col:60>
|   | |-VarDecl 0x14a0278c8 <col:2, col:17> col:6 used name_len 'int' cinit
|   | | `-IntegerLiteral 0x14a027930 <col:17> 'int' 0
|   | |-VarDecl 0x14a027968 <col:2, col:33> col:20 used output_len 'int' cinit
|   | | `-IntegerLiteral 0x14a0279d0 <col:33> 'int' 0
|   | `-VarDecl 0x14a027a08 <col:2, col:47> col:36 used max_rsp 'int' cinit
|   |   `-ImplicitCastExpr 0x14a027ad8 <col:46, col:47> 'int' <IntegralCast>
|   |     `-ImplicitCastExpr 0x14a027ac0 <col:46, col:47> 'unsigned int' <LValueToRValue>
|   |       `-UnaryOperator 0x14a027aa8 <col:46, col:47> 'unsigned int' lvalue prefix '*' cannot overflow
|   |         `-ImplicitCastExpr 0x14a027a90 <col:47> 'unsigned int *' <LValueToRValue>
|   |           `-DeclRefExpr 0x14a027a70 <col:47> 'unsigned int *' lvalue ParmVar 0x14a00df38 'response_size' 'unsigned int *'
|   |-BinaryOperator 0x14a027f90 <line:12:2, line:13:36> 'int' '='
|   | |-DeclRefExpr 0x14a027b28 <line:12:2> 'int' lvalue Var 0x14a027798 'err' 'int'
|   | `-CallExpr 0x14a027e78 <col:8, line:13:36> 'int'
|   |   |-ImplicitCastExpr 0x14a027e60 <line:12:8> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x14a027ca0 <col:8> 'int ()' Function 0x14a027be8 'get_name' 'int ()'
|   |   |-IntegerLiteral 0x14a027cc0 <col:17> 'int' 0
|   |   |-ImplicitCastExpr 0x14a027ee8 <col:20> 'unsigned char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x14a027ce0 <col:20> 'unsigned char *' lvalue ParmVar 0x14a00dd08 'buf' 'unsigned char *'
|   |   |-ImplicitCastExpr 0x14a027f00 <col:25> 'unsigned char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x14a027d00 <col:25> 'unsigned char *' lvalue ParmVar 0x14a00dd88 'start' 'unsigned char *'
|   |   |-ImplicitCastExpr 0x14a027f18 <col:32> 'unsigned char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x14a027d20 <col:32> 'unsigned char *' lvalue ParmVar 0x14a00de08 'max' 'unsigned char *'
|   |   |-ImplicitCastExpr 0x14a027f30 <col:37> 'unsigned char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x14a027d40 <col:37> 'unsigned char *' lvalue ParmVar 0x14a00de88 'response' 'unsigned char *'
|   |   |-ImplicitCastExpr 0x14a027f48 <col:47> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x14a027d60 <col:47> 'int' lvalue Var 0x14a027a08 'max_rsp' 'int'
|   |   |-UnaryOperator 0x14a027da0 <line:13:3, col:4> 'int *' prefix '&' cannot overflow
|   |   | `-DeclRefExpr 0x14a027d80 <col:4> 'int' lvalue Var 0x14a027968 'output_len' 'int'
|   |   |-ImplicitCastExpr 0x14a027f60 <col:16> 'unsigned char **' <LValueToRValue>
|   |   | `-DeclRefExpr 0x14a027db8 <col:16> 'unsigned char **' lvalue ParmVar 0x14a00e240 'end' 'unsigned char **'
|   |   |-ImplicitCastExpr 0x14a027f78 <col:21> 'char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x14a027dd8 <col:21> 'char *' lvalue ParmVar 0x14a00e2c0 'name' 'char *'
|   |   `-UnaryOperator 0x14a027e18 <col:27, col:28> 'int *' prefix '&' cannot overflow
|   |     `-DeclRefExpr 0x14a027df8 <col:28> 'int' lvalue Var 0x14a0278c8 'name_len' 'int'
|   |-IfStmt 0x14a028070 <line:14:2, line:15:10>
|   | |-BinaryOperator 0x14a028008 <line:14:6, col:12> 'int' '<'
|   | | |-ImplicitCastExpr 0x14a027ff0 <col:6> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x14a027fb0 <col:6> 'int' lvalue Var 0x14a027798 'err' 'int'
|   | | `-IntegerLiteral 0x14a027fd0 <col:12> 'int' 0
|   | `-ReturnStmt 0x14a028060 <line:15:3, col:10>
|   |   `-ImplicitCastExpr 0x14a028048 <col:10> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x14a028028 <col:10> 'int' lvalue Var 0x14a027798 'err' 'int'
|   |-BinaryOperator 0x14a0280e8 <line:17:2, col:11> 'int' '='
|   | |-DeclRefExpr 0x14a028090 <col:2> 'int' lvalue Var 0x14a027818 'offset' 'int'
|   | `-ImplicitCastExpr 0x14a0280d0 <col:11> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x14a0280b0 <col:11> 'int' lvalue Var 0x14a027968 'output_len' 'int'
|   |-IfStmt 0x14a0282b0 <line:19:2, line:20:11>
|   | |-BinaryOperator 0x14a0281e8 <line:19:6, col:31> 'int' '>'
|   | | |-CStyleCastExpr 0x14a028158 <col:6, col:21> 'unsigned int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x14a028140 <col:21> 'int' <LValueToRValue> part_of_explicit_cast
|   | | |   `-DeclRefExpr 0x14a028108 <col:21> 'int' lvalue Var 0x14a027818 'offset' 'int'
|   | | `-ImplicitCastExpr 0x14a0281d0 <col:30, col:31> 'unsigned int' <LValueToRValue>
|   | |   `-UnaryOperator 0x14a0281b8 <col:30, col:31> 'unsigned int' lvalue prefix '*' cannot overflow
|   | |     `-ImplicitCastExpr 0x14a0281a0 <col:31> 'unsigned int *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x14a028180 <col:31> 'unsigned int *' lvalue ParmVar 0x14a00df38 'response_size' 'unsigned int *'
|   | `-ReturnStmt 0x14a0282a0 <line:20:3, col:11>
|   |   `-UnaryOperator 0x14a028288 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |     `-ImplicitCastExpr 0x14a028270 <col:11> '<dependent type>' contains-errors <LValueToRValue>
|   |       `-RecoveryExpr 0x14a028250 <col:11> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x14a02a600 <line:22:2, col:21> 'struct domain_rr *' '='
|   | |-DeclRefExpr 0x14a0282d0 <col:2> 'struct domain_rr *' lvalue Var 0x14a0276e8 'rr' 'struct domain_rr *'
|   | `-ImplicitCastExpr 0x14a0283d8 <col:7, col:21> 'struct domain_rr *' <BitCast>
|   |   `-CStyleCastExpr 0x14a0283b0 <col:7, col:21> 'void *' <BitCast>
|   |     `-ImplicitCastExpr 0x14a028398 <col:16, col:21> 'unsigned char *' <LValueToRValue> part_of_explicit_cast
|   |       `-ParenExpr 0x14a028378 <col:16, col:21> 'unsigned char *' lvalue
|   |         `-UnaryOperator 0x14a028328 <col:17, col:18> 'unsigned char *' lvalue prefix '*' cannot overflow
|   |           `-ImplicitCastExpr 0x14a028310 <col:18> 'unsigned char **' <LValueToRValue>
|   |             `-DeclRefExpr 0x14a0282f0 <col:18> 'unsigned char **' lvalue ParmVar 0x14a00e240 'end' 'unsigned char **'
|   |-IfStmt 0x14a02a718 <line:24:2, line:25:11>
|   | |-UnaryOperator 0x14a02a658 <line:24:6, col:7> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x14a02a640 <col:7> 'struct domain_rr *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x14a02a620 <col:7> 'struct domain_rr *' lvalue Var 0x14a0276e8 'rr' 'struct domain_rr *'
|   | `-ReturnStmt 0x14a02a708 <line:25:3, col:11>
|   |   `-UnaryOperator 0x14a02a6f0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |     `-ImplicitCastExpr 0x14a02a6d8 <col:11> '<dependent type>' contains-errors <LValueToRValue>
|   |       `-RecoveryExpr 0x14a02a6b8 <col:11> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x14a02ad30 <line:27:2, col:24> '<dependent type>' contains-errors '='
|   | |-UnaryOperator 0x14a02a770 <col:2, col:3> '<dependent type>' contains-errors prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x14a02a758 <col:3> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x14a02a738 <col:3> '<dependent type>' contains-errors lvalue
|   | `-CallExpr 0x14a02ad08 <col:10, col:24> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x14a02a868 <col:10> 'int ()' Function 0x14a02a7b0 'ntohs' 'int ()'
|   |   `-RecoveryExpr 0x14a02ace0 <col:16, col:20> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x14a02a888 <col:16> 'struct domain_rr *' lvalue Var 0x14a0276e8 'rr' 'struct domain_rr *'
|   |-BinaryOperator 0x14a02ae48 <line:28:2, col:26> '<dependent type>' contains-errors '='
|   | |-UnaryOperator 0x14a02ad88 <col:2, col:3> '<dependent type>' contains-errors prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x14a02ad70 <col:3> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x14a02ad50 <col:3> '<dependent type>' contains-errors lvalue
|   | `-CallExpr 0x14a02ae20 <col:11, col:26> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x14a02ada0 <col:11> 'int ()' Function 0x14a02a7b0 'ntohs' 'int ()'
|   |   `-RecoveryExpr 0x14a02adf8 <col:17, col:21> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x14a02adc0 <col:17> 'struct domain_rr *' lvalue Var 0x14a0276e8 'rr' 'struct domain_rr *'
|   |-BinaryOperator 0x14a02b040 <line:29:2, col:22> 'int' contains-errors '='
|   | |-UnaryOperator 0x14a02aea0 <col:2, col:3> 'int' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x14a02ae88 <col:3> 'int *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x14a02ae68 <col:3> 'int *' lvalue ParmVar 0x14a00e108 'ttl' 'int *'
|   | `-CallExpr 0x14a02b018 <col:9, col:22> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x14a02af98 <col:9> 'int ()' Function 0x14a02aee0 'ntohl' 'int ()'
|   |   `-RecoveryExpr 0x14a02aff0 <col:15, col:19> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x14a02afb8 <col:15> 'struct domain_rr *' lvalue Var 0x14a0276e8 'rr' 'struct domain_rr *'
|   |-BinaryOperator 0x14a02b158 <line:30:2, col:26> 'int' contains-errors '='
|   | |-UnaryOperator 0x14a02b098 <col:2, col:3> 'int' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x14a02b080 <col:3> 'int *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x14a02b060 <col:3> 'int *' lvalue ParmVar 0x14a00e188 'rdlen' 'int *'
|   | `-CallExpr 0x14a02b130 <col:11, col:26> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x14a02b0b0 <col:11> 'int ()' Function 0x14a02a7b0 'ntohs' 'int ()'
|   |   `-RecoveryExpr 0x14a02b108 <col:17, col:21> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x14a02b0d0 <col:17> 'struct domain_rr *' lvalue Var 0x14a0276e8 'rr' 'struct domain_rr *'
|   |-IfStmt 0x14a02b2c8 <line:32:2, line:33:11>
|   | |-BinaryOperator 0x14a02b200 <line:32:6, col:13> 'int' '<'
|   | | |-ImplicitCastExpr 0x14a02b1e8 <col:6, col:7> 'int' <LValueToRValue>
|   | | | `-UnaryOperator 0x14a02b1b0 <col:6, col:7> 'int' lvalue prefix '*' cannot overflow
|   | | |   `-ImplicitCastExpr 0x14a02b198 <col:7> 'int *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x14a02b178 <col:7> 'int *' lvalue ParmVar 0x14a00e108 'ttl' 'int *'
|   | | `-IntegerLiteral 0x14a02b1c8 <col:13> 'int' 0
|   | `-ReturnStmt 0x14a02b2b8 <line:33:3, col:11>
|   |   `-UnaryOperator 0x14a02b2a0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |     `-ImplicitCastExpr 0x14a02b288 <col:11> '<dependent type>' contains-errors <LValueToRValue>
|   |       `-RecoveryExpr 0x14a02b268 <col:11> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x14a02be30 <line:40:2, line:41:11>
|   | |-BinaryOperator 0x14a02bd68 <line:40:6, col:42> 'int' '>'
|   | | |-CStyleCastExpr 0x14a02bcd8 <col:6, col:37> 'unsigned int' <IntegralCast>
|   | | | `-ParenExpr 0x14a02bcb8 <col:21, col:37> 'int'
|   | | |   `-BinaryOperator 0x14a02bc60 <col:22, col:32> 'int' '+'
|   | | |     |-ImplicitCastExpr 0x14a02bc30 <col:22> 'int' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x14a02bbc0 <col:22> 'int' lvalue Var 0x14a027818 'offset' 'int'
|   | | |     `-ImplicitCastExpr 0x14a02bc48 <col:31, col:32> 'int' <LValueToRValue>
|   | | |       `-UnaryOperator 0x14a02bc18 <col:31, col:32> 'int' lvalue prefix '*' cannot overflow
|   | | |         `-ImplicitCastExpr 0x14a02bc00 <col:32> 'int *' <LValueToRValue>
|   | | |           `-DeclRefExpr 0x14a02bbe0 <col:32> 'int *' lvalue ParmVar 0x14a00e188 'rdlen' 'int *'
|   | | `-ImplicitCastExpr 0x14a02bd50 <col:41, col:42> 'unsigned int' <LValueToRValue>
|   | |   `-UnaryOperator 0x14a02bd38 <col:41, col:42> 'unsigned int' lvalue prefix '*' cannot overflow
|   | |     `-ImplicitCastExpr 0x14a02bd20 <col:42> 'unsigned int *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x14a02bd00 <col:42> 'unsigned int *' lvalue ParmVar 0x14a00df38 'response_size' 'unsigned int *'
|   | `-ReturnStmt 0x14a02be20 <line:41:3, col:11>
|   |   `-UnaryOperator 0x14a02be08 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |     `-ImplicitCastExpr 0x14a02bdf0 <col:11> '<dependent type>' contains-errors <LValueToRValue>
|   |       `-RecoveryExpr 0x14a02bdd0 <col:11> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x14a02c018 <line:43:2, col:40> 'void *'
|   | |-ImplicitCastExpr 0x14a02c000 <col:2> 'void *(*)(void *, const void *, unsigned long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x14a02be50 <col:2> 'void *(void *, const void *, unsigned long)' Function 0x14a02b368 'memcpy' 'void *(void *, const void *, unsigned long)'
|   | |-ImplicitCastExpr 0x14a02c050 <col:9, col:20> 'void *' <BitCast>
|   | | `-BinaryOperator 0x14a02bee0 <col:9, col:20> 'unsigned char *' '+'
|   | |   |-ImplicitCastExpr 0x14a02beb0 <col:9> 'unsigned char *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x14a02be70 <col:9> 'unsigned char *' lvalue ParmVar 0x14a00de88 'response' 'unsigned char *'
|   | |   `-ImplicitCastExpr 0x14a02bec8 <col:20> 'int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x14a02be90 <col:20> 'int' lvalue Var 0x14a027818 'offset' 'int'
|   | |-ImplicitCastExpr 0x14a02c080 <col:28, col:29> 'const void *' <BitCast>
|   | | `-ImplicitCastExpr 0x14a02c068 <col:28, col:29> 'unsigned char *' <LValueToRValue>
|   | |   `-UnaryOperator 0x14a02bf38 <col:28, col:29> 'unsigned char *' lvalue prefix '*' cannot overflow
|   | |     `-ImplicitCastExpr 0x14a02bf20 <col:29> 'unsigned char **' <LValueToRValue>
|   | |       `-DeclRefExpr 0x14a02bf00 <col:29> 'unsigned char **' lvalue ParmVar 0x14a00e240 'end' 'unsigned char **'
|   | `-ImplicitCastExpr 0x14a02c0b0 <col:34, col:35> 'unsigned long' <IntegralCast>
|   |   `-ImplicitCastExpr 0x14a02c098 <col:34, col:35> 'int' <LValueToRValue>
|   |     `-UnaryOperator 0x14a02bf88 <col:34, col:35> 'int' lvalue prefix '*' cannot overflow
|   |       `-ImplicitCastExpr 0x14a02bf70 <col:35> 'int *' <LValueToRValue>
|   |         `-DeclRefExpr 0x14a02bf50 <col:35> 'int *' lvalue ParmVar 0x14a00e188 'rdlen' 'int *'
|   |-CompoundAssignOperator 0x14a02c180 <line:45:2, col:11> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   | |-UnaryOperator 0x14a02c100 <col:2, col:3> 'unsigned char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x14a02c0e8 <col:3> 'unsigned char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x14a02c0c8 <col:3> 'unsigned char **' lvalue ParmVar 0x14a00e240 'end' 'unsigned char **'
|   | `-ImplicitCastExpr 0x14a02c168 <col:10, col:11> 'int' <LValueToRValue>
|   |   `-UnaryOperator 0x14a02c150 <col:10, col:11> 'int' lvalue prefix '*' cannot overflow
|   |     `-ImplicitCastExpr 0x14a02c138 <col:11> 'int *' <LValueToRValue>
|   |       `-DeclRefExpr 0x14a02c118 <col:11> 'int *' lvalue ParmVar 0x14a00e188 'rdlen' 'int *'
|   |-BinaryOperator 0x14a02c2d8 <line:47:2, col:29> 'unsigned int' '='
|   | |-UnaryOperator 0x14a02c1e8 <col:2, col:3> 'unsigned int' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x14a02c1d0 <col:3> 'unsigned int *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x14a02c1b0 <col:3> 'unsigned int *' lvalue ParmVar 0x14a00df38 'response_size' 'unsigned int *'
|   | `-ImplicitCastExpr 0x14a02c2c0 <col:19, col:29> 'unsigned int' <IntegralCast>
|   |   `-BinaryOperator 0x14a02c2a0 <col:19, col:29> 'int' '+'
|   |     |-ImplicitCastExpr 0x14a02c270 <col:19> 'int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x14a02c200 <col:19> 'int' lvalue Var 0x14a027818 'offset' 'int'
|   |     `-ImplicitCastExpr 0x14a02c288 <col:28, col:29> 'int' <LValueToRValue>
|   |       `-UnaryOperator 0x14a02c258 <col:28, col:29> 'int' lvalue prefix '*' cannot overflow
|   |         `-ImplicitCastExpr 0x14a02c240 <col:29> 'int *' <LValueToRValue>
|   |           `-DeclRefExpr 0x14a02c220 <col:29> 'int *' lvalue ParmVar 0x14a00e188 'rdlen' 'int *'
|   `-ReturnStmt 0x14a02c318 <line:49:2, col:9>
|     `-IntegerLiteral 0x14a02c2f8 <col:9> 'int' 0
`-FunctionDecl 0x14a02b368 <line:35:2> col:2 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x14a02b468 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x14a02b4d0 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x14a02b538 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x14a02b410 <<invalid sloc>> Implicit 882
