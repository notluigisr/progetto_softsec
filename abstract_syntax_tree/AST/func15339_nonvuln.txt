TranslationUnitDecl 0x145855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1458564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x145855bd0 '__int128'
|-TypedefDecl 0x145856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x145855bf0 'unsigned __int128'
|-TypedefDecl 0x145926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x145926000 'struct __NSConstantString_tag'
|   `-Record 0x145856580 '__NSConstantString_tag'
|-TypedefDecl 0x145926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x145855d90 '__SVInt8_t'
|-TypedefDecl 0x145926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x145855db0 '__SVInt16_t'
|-TypedefDecl 0x145926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x145855dd0 '__SVInt32_t'
|-TypedefDecl 0x1459263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x145855df0 '__SVInt64_t'
|-TypedefDecl 0x145926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x145855e10 '__SVUint8_t'
|-TypedefDecl 0x1459264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x145855e30 '__SVUint16_t'
|-TypedefDecl 0x145926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x145855e50 '__SVUint32_t'
|-TypedefDecl 0x145926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x145855e70 '__SVUint64_t'
|-TypedefDecl 0x1459265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x145855e90 '__SVFloat16_t'
|-TypedefDecl 0x145926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x145855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1459266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x145855ed0 '__SVFloat64_t'
|-TypedefDecl 0x145926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x145855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x145926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x145855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1459267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x145855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x145926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x145855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1459268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x145855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x145926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x145855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x145926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x145855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1459269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x145855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x145926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x145855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x145926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x145856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x145926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x145856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x145926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x145856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x145926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x145856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x145926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x145856090 '__clang_svint8x3_t'
|-TypedefDecl 0x145926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1458560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x145926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1458560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x145926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1458560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x145926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x145856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x145926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x145856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x145926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x145856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x145926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x145856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x145926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x145856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x145927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1458561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x145927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1458561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1459278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1458561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x145927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x145856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1459279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x145856230 '__clang_svint16x4_t'
|-TypedefDecl 0x145927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x145856250 '__clang_svint32x4_t'
|-TypedefDecl 0x145927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x145856270 '__clang_svint64x4_t'
|-TypedefDecl 0x145927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x145856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x145927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1458562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x145927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1458562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x145927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1458562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x145927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x145856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x145927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x145856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x145927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x145856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x145927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x145856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x145927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x145856390 '__SVBool_t'
|-TypedefDecl 0x145927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1458563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x145927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1458563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x145927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1458563f0 '__SVCount_t'
|-TypedefDecl 0x145927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x145927fb0 'char *'
|   `-BuiltinType 0x1458556b0 'char'
|-TypedefDecl 0x145928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x145927fb0 'char *'
|   `-BuiltinType 0x1458556b0 'char'
|-FunctionDecl 0x145928190 <dataset_diviso_filec/func15339_nonvuln.c:1:1, line:53:1> line:1:6 preproc_clean_run 'void (void)'
| `-CompoundStmt 0x146009100 <col:30, line:53:1>
|   |-DeclStmt 0x145928320 <line:2:2, col:20>
|   | `-VarDecl 0x145928298 <col:2, col:15> col:6 used max_pids 'int' cinit
|   |   `-IntegerLiteral 0x145928300 <col:15> 'int' 32769
|   |-DeclStmt 0x1459283d8 <line:3:2, col:21>
|   | `-VarDecl 0x145928350 <col:2, col:18> col:6 used start_pid 'int' cinit
|   |   `-IntegerLiteral 0x1459283b8 <col:18> 'int' 100
|   |-IfStmt 0x145941e08 <line:6:2, line:15:2>
|   | |-RecoveryExpr 0x145928650 <line:6:6> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x145941de0 <col:10, line:15:2>
|   |   |-DeclStmt 0x1459286f0 <line:7:3, col:10>
|   |   | `-VarDecl 0x145928688 <col:3, col:7> col:7 used val 'int'
|   |   |-IfStmt 0x145941c38 <line:8:3, line:13:3>
|   |   | |-BinaryOperator 0x145941998 <line:8:7, col:34> 'int' contains-errors '=='
|   |   | | |-CallExpr 0x145941960 <col:7, col:29> '<dependent type>' contains-errors
|   |   | | | |-DeclRefExpr 0x145941800 <col:7> 'int ()' Function 0x145928730 'fscanf' 'int ()'
|   |   | | | |-RecoveryExpr 0x145941940 <col:14> '<dependent type>' contains-errors lvalue
|   |   | | | |-StringLiteral 0x145941838 <col:18> 'char[4]' lvalue "STR"
|   |   | | | `-UnaryOperator 0x1459418b0 <col:25, col:26> 'int *' prefix '&' cannot overflow
|   |   | | |   `-DeclRefExpr 0x145941858 <col:26> 'int' lvalue Var 0x145928688 'val' 'int'
|   |   | | `-IntegerLiteral 0x145941900 <col:34> 'int' 1
|   |   | `-CompoundStmt 0x145941c18 <col:37, line:13:3>
|   |   |   |-IfStmt 0x145941a90 <line:9:4, line:10:11>
|   |   |   | |-BinaryOperator 0x145941a10 <line:9:8, col:14> 'int' '>'
|   |   |   | | |-ImplicitCastExpr 0x1459419f8 <col:8> 'int' <LValueToRValue>
|   |   |   | | | `-DeclRefExpr 0x1459419b8 <col:8> 'int' lvalue Var 0x145928688 'val' 'int'
|   |   |   | | `-IntegerLiteral 0x1459419d8 <col:14> 'int' 4194304
|   |   |   | `-BinaryOperator 0x145941a70 <line:10:5, col:11> 'int' '='
|   |   |   |   |-DeclRefExpr 0x145941a30 <col:5> 'int' lvalue Var 0x145928688 'val' 'int'
|   |   |   |   `-IntegerLiteral 0x145941a50 <col:11> 'int' 4194304
|   |   |   `-IfStmt 0x145941bf8 <line:11:4, line:12:22>
|   |   |     |-BinaryOperator 0x145941b20 <line:11:8, col:15> 'int' '>='
|   |   |     | |-ImplicitCastExpr 0x145941af0 <col:8> 'int' <LValueToRValue>
|   |   |     | | `-DeclRefExpr 0x145941ab0 <col:8> 'int' lvalue Var 0x145928688 'val' 'int'
|   |   |     | `-ImplicitCastExpr 0x145941b08 <col:15> 'int' <LValueToRValue>
|   |   |     |   `-DeclRefExpr 0x145941ad0 <col:15> 'int' lvalue Var 0x145928298 'max_pids' 'int'
|   |   |     `-BinaryOperator 0x145941bd8 <line:12:5, col:22> 'int' '='
|   |   |       |-DeclRefExpr 0x145941b40 <col:5> 'int' lvalue Var 0x145928298 'max_pids' 'int'
|   |   |       `-BinaryOperator 0x145941bb8 <col:16, col:22> 'int' '+'
|   |   |         |-ImplicitCastExpr 0x145941ba0 <col:16> 'int' <LValueToRValue>
|   |   |         | `-DeclRefExpr 0x145941b60 <col:16> 'int' lvalue Var 0x145928688 'val' 'int'
|   |   |         `-IntegerLiteral 0x145941b80 <col:22> 'int' 1
|   |   `-CallExpr 0x145941db8 <line:14:3, col:12> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x145941d38 <col:3> 'int ()' Function 0x145941c80 'fclose' 'int ()'
|   |     `-RecoveryExpr 0x145941d98 <col:10> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x145942608 <line:16:2, col:46>
|   | `-VarDecl 0x145941e40 <col:2, col:45> col:7 used pidarr 'int *' cinit
|   |   `-ImplicitCastExpr 0x1459425f0 <col:16, col:45> 'int *' <BitCast>
|   |     `-CallExpr 0x1459425c8 <col:16, col:45> 'void *'
|   |       |-ImplicitCastExpr 0x1459425b0 <col:16> 'void *(*)(unsigned long)' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x1459424b0 <col:16> 'void *(unsigned long)' Function 0x145942310 'malloc' 'void *(unsigned long)'
|   |       `-BinaryOperator 0x145942558 <col:23, col:44> 'unsigned long' '*'
|   |         |-ImplicitCastExpr 0x145942540 <col:23> 'unsigned long' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x145942528 <col:23> 'int' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x1459424d0 <col:23> 'int' lvalue Var 0x145928298 'max_pids' 'int'
|   |         `-UnaryExprOrTypeTraitExpr 0x145942508 <col:34, col:44> 'unsigned long' sizeof 'int'
|   |-IfStmt 0x145944a00 <line:17:2, line:18:16>
|   | |-UnaryOperator 0x145942658 <line:17:6, col:7> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x145942640 <col:7> 'int *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x145942620 <col:7> 'int *' lvalue Var 0x145941e40 'pidarr' 'int *'
|   | `-CallExpr 0x1459427a8 <line:18:3, col:16> 'int'
|   |   |-ImplicitCastExpr 0x145942790 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x145942750 <col:3> 'int ()' Function 0x145942698 'errExit' 'int ()'
|   |   `-ImplicitCastExpr 0x1459427d0 <col:11> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x145942770 <col:11> 'char[4]' lvalue "STR"
|   |-CallExpr 0x145944e28 <line:20:2, col:42> 'void *'
|   | |-ImplicitCastExpr 0x145944e10 <col:2> 'void *(*)(void *, int, unsigned long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x145944cb8 <col:2> 'void *(void *, int, unsigned long)' Function 0x145944a68 'memset' 'void *(void *, int, unsigned long)'
|   | |-ImplicitCastExpr 0x145944e78 <col:9> 'void *' <BitCast>
|   | | `-ImplicitCastExpr 0x145944e60 <col:9> 'int *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x145944cd8 <col:9> 'int *' lvalue Var 0x145941e40 'pidarr' 'int *'
|   | |-IntegerLiteral 0x145944cf8 <col:17> 'int' 0
|   | `-BinaryOperator 0x145944da0 <col:20, col:41> 'unsigned long' '*'
|   |   |-ImplicitCastExpr 0x145944d88 <col:20> 'unsigned long' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x145944d70 <col:20> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x145944d18 <col:20> 'int' lvalue Var 0x145928298 'max_pids' 'int'
|   |   `-UnaryExprOrTypeTraitExpr 0x145944d50 <col:31, col:41> 'unsigned long' sizeof 'int'
|   |-IfStmt 0x145945740 <line:24:2, line:31:2>
|   | |-RecoveryExpr 0x145945058 <line:24:6, col:28> '_Bool' contains-errors
|   | `-CompoundStmt 0x145945720 <col:31, line:31:2>
|   |   |-CallExpr 0x1459451b0 <line:26:3, col:10> 'int'
|   |   | |-ImplicitCastExpr 0x145945198 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x145945158 <col:3> 'int ()' Function 0x1459450a0 'sleep' 'int ()'
|   |   | `-IntegerLiteral 0x145945178 <col:9> 'int' 2
|   |   `-IfStmt 0x145945700 <line:27:3, line:30:3>
|   |     |-RecoveryExpr 0x1459452a8 <line:27:7, col:29> '_Bool' contains-errors
|   |     `-CompoundStmt 0x1459456e0 <col:32, line:30:3>
|   |       |-CallExpr 0x145945450 <line:28:4, col:25> '<dependent type>' contains-errors
|   |       | |-DeclRefExpr 0x1459453a8 <col:4> 'int ()' Function 0x1459452f0 'fprintf' 'int ()'
|   |       | |-RecoveryExpr 0x145945430 <col:12> '<dependent type>' contains-errors lvalue
|   |       | `-StringLiteral 0x1459453e0 <col:20> 'char[4]' lvalue "STR"
|   |       `-CallExpr 0x1459456b8 <line:29:4, col:10> 'void'
|   |         |-ImplicitCastExpr 0x1459456a0 <col:4> 'void (*)(int) __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         | `-DeclRefExpr 0x145945628 <col:4> 'void (int) __attribute__((noreturn))' Function 0x1459454b8 'exit' 'void (int) __attribute__((noreturn))'
|   |         `-IntegerLiteral 0x145945648 <col:9> 'int' 1
|   |-DeclStmt 0x145945948 <line:34:2, col:22>
|   | |-RecordDecl 0x145945760 <col:2, col:9> col:9 struct dirent
|   | `-VarDecl 0x1459458c8 <col:2, col:17> col:17 used entry 'struct dirent *'
|   |-DeclStmt 0x1459459e0 <line:35:2, col:11>
|   | `-VarDecl 0x145945978 <col:2, col:8> col:8 used end 'char *'
|   |-WhileStmt 0x146008b60 <line:36:2, line:45:2>
|   | |-RecoveryExpr 0x146008920 <line:36:9, col:35> '_Bool' contains-errors
|   | `-CompoundStmt 0x146008b40 <col:41, line:45:2>
|   |   |-IfStmt 0x146008a78 <line:39:3, line:40:4>
|   |   | |-BinaryOperator 0x146008a50 <line:39:7, col:32> 'int' contains-errors '||'
|   |   | | |-BinaryOperator 0x1460089e0 <col:7, col:21> 'int' contains-errors '=='
|   |   | | | |-DeclRefExpr 0x146008960 <col:7> 'char *' lvalue Var 0x145945978 'end' 'char *'
|   |   | | | `-RecoveryExpr 0x1460089b8 <col:14, col:21> '<dependent type>' contains-errors lvalue
|   |   | | |   `-DeclRefExpr 0x146008980 <col:14> 'struct dirent *' lvalue Var 0x1459458c8 'entry' 'struct dirent *'
|   |   | | `-UnaryOperator 0x146008a38 <col:31, col:32> 'char' lvalue prefix '*' cannot overflow
|   |   | |   `-ImplicitCastExpr 0x146008a20 <col:32> 'char *' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x146008a00 <col:32> 'char *' lvalue Var 0x145945978 'end' 'char *'
|   |   | `-ContinueStmt 0x146008a70 <line:40:4>
|   |   `-IfStmt 0x146008ae0 <line:42:3, line:43:4>
|   |     |-RecoveryExpr 0x146008ab8 <line:42:7, col:13> '_Bool' contains-errors
|   |     `-ContinueStmt 0x146008ad8 <line:43:4>
|   `-CallExpr 0x1460090a8 <line:52:2, col:13> 'void'
|     |-ImplicitCastExpr 0x146009090 <col:2> 'void (*)(void *)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x146009008 <col:2> 'void (void *)' Function 0x146008e98 'free' 'void (void *)'
|     `-ImplicitCastExpr 0x1460090e8 <col:7> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x1460090d0 <col:7> 'int *' <LValueToRValue>
|         `-DeclRefExpr 0x146009028 <col:7> 'int *' lvalue Var 0x145941e40 'pidarr' 'int *'
|-FunctionDecl 0x145942310 <line:16:16> col:16 implicit used malloc 'void *(unsigned long)' extern
| |-ParmVarDecl 0x145942410 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-BuiltinAttr 0x1459423b8 <<invalid sloc>> Implicit 871
| `-AllocSizeAttr 0x145942480 <col:16> Implicit 1
|-FunctionDecl 0x145944a68 <line:20:2> col:2 implicit used memset 'void *(void *, int, unsigned long)' extern
| |-ParmVarDecl 0x145944b68 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x145944bd0 <<invalid sloc>> <invalid sloc> 'int'
| |-ParmVarDecl 0x145944c38 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x145944b10 <<invalid sloc>> Implicit 900
|-FunctionDecl 0x1459454b8 <line:29:4> col:4 implicit used exit 'void (int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x1459455b8 <<invalid sloc>> <invalid sloc> 'int'
| `-BuiltinAttr 0x145945560 <<invalid sloc>> Implicit 869
`-FunctionDecl 0x146008e98 <line:52:2> col:2 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x146008f98 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x146008f40 <<invalid sloc>> Implicit 873
