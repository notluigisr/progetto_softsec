TranslationUnitDecl 0x14e055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14e0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14e055bd0 '__int128'
|-TypedefDecl 0x14e056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14e055bf0 'unsigned __int128'
|-TypedefDecl 0x14e126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14e126000 'struct __NSConstantString_tag'
|   `-Record 0x14e056580 '__NSConstantString_tag'
|-TypedefDecl 0x14e126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14e055d90 '__SVInt8_t'
|-TypedefDecl 0x14e126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14e055db0 '__SVInt16_t'
|-TypedefDecl 0x14e126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14e055dd0 '__SVInt32_t'
|-TypedefDecl 0x14e1263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14e055df0 '__SVInt64_t'
|-TypedefDecl 0x14e126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14e055e10 '__SVUint8_t'
|-TypedefDecl 0x14e1264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14e055e30 '__SVUint16_t'
|-TypedefDecl 0x14e126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14e055e50 '__SVUint32_t'
|-TypedefDecl 0x14e126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14e055e70 '__SVUint64_t'
|-TypedefDecl 0x14e1265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14e055e90 '__SVFloat16_t'
|-TypedefDecl 0x14e126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14e055eb0 '__SVFloat32_t'
|-TypedefDecl 0x14e1266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14e055ed0 '__SVFloat64_t'
|-TypedefDecl 0x14e126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14e055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14e126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14e055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14e1267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14e055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14e126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14e055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14e1268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14e055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14e126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14e055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14e126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14e055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14e1269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14e055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14e126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14e055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14e126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14e056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14e126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14e056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14e126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14e056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14e126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14e056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14e126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14e056090 '__clang_svint8x3_t'
|-TypedefDecl 0x14e126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14e0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14e126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14e0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14e126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14e0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14e126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14e056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14e126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14e056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14e126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14e056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14e126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14e056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14e126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14e056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14e127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14e0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14e127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14e0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14e1278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14e0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14e127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14e056210 '__clang_svint8x4_t'
|-TypedefDecl 0x14e1279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14e056230 '__clang_svint16x4_t'
|-TypedefDecl 0x14e127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14e056250 '__clang_svint32x4_t'
|-TypedefDecl 0x14e127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14e056270 '__clang_svint64x4_t'
|-TypedefDecl 0x14e127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14e056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14e127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14e0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14e127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14e0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14e127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14e0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14e127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14e056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14e127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14e056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14e127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14e056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14e127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14e056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14e127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14e056390 '__SVBool_t'
|-TypedefDecl 0x14e127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14e0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14e127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14e0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14e127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14e0563f0 '__SVCount_t'
|-TypedefDecl 0x14e127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14e127fb0 'char *'
|   `-BuiltinType 0x14e0556b0 'char'
|-TypedefDecl 0x14e128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14e127fb0 'char *'
|   `-BuiltinType 0x14e0556b0 'char'
`-FunctionDecl 0x14e140d38 <dataset_diviso_filec/func17705_nonvuln.c:1:1, line:72:1> line:1:12 rawv6_push_pending_frames 'int (struct sock *, struct flowi6 *, struct raw6_sock *)' static
  |-ParmVarDecl 0x14e128648 <col:38, col:51> col:51 used sk 'struct sock *'
  |-ParmVarDecl 0x14e140a28 <col:55, col:70> col:70 used fl6 'struct flowi6 *'
  |-ParmVarDecl 0x14e140bf8 <line:2:10, col:28> col:28 used rp 'struct raw6_sock *'
  `-CompoundStmt 0x14e809918 <line:3:1, line:72:1>
    |-DeclStmt 0x14e141028 <line:4:2, col:21>
    | |-RecordDecl 0x14e140e40 <col:2, col:9> col:9 struct sk_buff
    | `-VarDecl 0x14e140fa8 <col:2, col:18> col:18 used skb 'struct sk_buff *'
    |-DeclStmt 0x14e1410e0 <line:5:2, col:13>
    | `-VarDecl 0x14e141058 <col:2, col:12> col:6 used err 'int' cinit
    |   `-IntegerLiteral 0x14e1410c0 <col:12> 'int' 0
    |-DeclStmt 0x14e141178 <line:6:2, col:12>
    | `-VarDecl 0x14e141110 <col:2, col:6> col:6 used offset 'int'
    |-DeclStmt 0x14e141210 <line:7:2, col:9>
    | `-VarDecl 0x14e1411a8 <col:2, col:6> col:6 used len 'int'
    |-DeclStmt 0x14e1412a8 <line:8:2, col:15>
    | `-VarDecl 0x14e141240 <col:2, col:6> col:6 used total_len 'int'
    |-IfStmt 0x14e1413d0 <line:12:2, line:13:8>
    | |-UnaryOperator 0x14e141350 <line:12:6, col:11> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x14e141338 <col:7, col:11> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x14e141310 <col:7, col:11> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x14e1412d8 <col:7> 'struct raw6_sock *' lvalue ParmVar 0x14e140bf8 'rp' 'struct raw6_sock *'
    | `-GotoStmt 0x14e1413b8 <line:13:3, col:8> 'send' 0x14e141368
    |-BinaryOperator 0x14e1415e0 <line:15:2, col:36> 'struct sk_buff *' contains-errors '='
    | |-DeclRefExpr 0x14e1413f0 <col:2> 'struct sk_buff *' lvalue Var 0x14e140fa8 'skb' 'struct sk_buff *'
    | `-CallExpr 0x14e1415b8 <col:8, col:36> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14e141520 <col:8> 'int ()' Function 0x14e141468 'skb_peek' 'int ()'
    |   `-UnaryOperator 0x14e1415a0 <col:17, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x14e141578 <col:18, col:22> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x14e141540 <col:18> 'struct sock *' lvalue ParmVar 0x14e128648 'sk' 'struct sock *'
    |-IfStmt 0x14e1416b8 <line:16:2, line:17:8>
    | |-UnaryOperator 0x14e141638 <line:16:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x14e141620 <col:7> 'struct sk_buff *' <LValueToRValue>
    | |   `-DeclRefExpr 0x14e141600 <col:7> 'struct sk_buff *' lvalue Var 0x14e140fa8 'skb' 'struct sk_buff *'
    | `-GotoStmt 0x14e1416a0 <line:17:3, col:8> 'out' 0x14e141650
    |-BinaryOperator 0x14e141758 <line:19:2, col:15> 'int' contains-errors '='
    | |-DeclRefExpr 0x14e1416d8 <col:2> 'int' lvalue Var 0x14e141110 'offset' 'int'
    | `-RecoveryExpr 0x14e141730 <col:11, col:15> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x14e1416f8 <col:11> 'struct raw6_sock *' lvalue ParmVar 0x14e140bf8 'rp' 'struct raw6_sock *'
    |-BinaryOperator 0x14e142e00 <line:20:2, col:37> 'int' contains-errors '='
    | |-DeclRefExpr 0x14e141778 <col:2> 'int' lvalue Var 0x14e141240 'total_len' 'int'
    | `-CXXDependentScopeMemberExpr 0x14e1419b8 <col:14, col:37> '<dependent type>' contains-errors lvalue .length
    |   `-CXXDependentScopeMemberExpr 0x14e141970 <col:14, col:32> '<dependent type>' contains-errors lvalue .base
    |     `-RecoveryExpr 0x14e141948 <col:14, col:27> '<dependent type>' contains-errors lvalue
    |       `-CallExpr 0x14e141908 <col:14, col:24> 'int'
    |         |-ImplicitCastExpr 0x14e1418f0 <col:14> 'int (*)()' <FunctionToPointerDecay>
    |         | `-DeclRefExpr 0x14e141878 <col:14> 'int ()' Function 0x14e1417c0 'inet_sk' 'int ()'
    |         `-ImplicitCastExpr 0x14e141930 <col:22> 'struct sock *' <LValueToRValue>
    |           `-DeclRefExpr 0x14e141898 <col:22> 'struct sock *' lvalue ParmVar 0x14e128648 'sk' 'struct sock *'
    |-IfStmt 0x14e1431a0 <line:21:2, line:25:2>
    | |-BinaryOperator 0x14e142ed0 <line:21:6, col:28> 'int' '>='
    | | |-ImplicitCastExpr 0x14e142eb8 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x14e142e20 <col:6> 'int' lvalue Var 0x14e141110 'offset' 'int'
    | | `-BinaryOperator 0x14e142e98 <col:16, col:28> 'int' '-'
    | |   |-ImplicitCastExpr 0x14e142e80 <col:16> 'int' <LValueToRValue>
    | |   | `-DeclRefExpr 0x14e142e40 <col:16> 'int' lvalue Var 0x14e141240 'total_len' 'int'
    | |   `-IntegerLiteral 0x14e142e60 <col:28> 'int' 1
    | `-CompoundStmt 0x14e143178 <col:31, line:25:2>
    |   |-BinaryOperator 0x14e142fc8 <line:22:3, col:10> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x14e142ef0 <col:3> 'int' lvalue Var 0x14e141058 'err' 'int'
    |   | `-UnaryOperator 0x14e142fb0 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |   `-ImplicitCastExpr 0x14e142f98 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    |   |     `-RecoveryExpr 0x14e142f78 <col:10> '<dependent type>' contains-errors lvalue
    |   |-CallExpr 0x14e143120 <line:23:3, col:30> 'int'
    |   | |-ImplicitCastExpr 0x14e143108 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x14e1430c8 <col:3> 'int ()' Function 0x14e143010 'ip6_flush_pending_frames' 'int ()'
    |   | `-ImplicitCastExpr 0x14e143148 <col:28> 'struct sock *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x14e1430e8 <col:28> 'struct sock *' lvalue ParmVar 0x14e128648 'sk' 'struct sock *'
    |   `-GotoStmt 0x14e143160 <line:24:3, col:8> 'out' 0x14e141650
    |-IfStmt 0x14e143da0 <line:28:2, line:51:2> has_else
    | |-BinaryOperator 0x14e143380 <line:28:6, col:44> 'int' contains-errors '=='
    | | |-CallExpr 0x14e143338 <col:6, col:39> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x14e1432a0 <col:6> 'int ()' Function 0x14e1431e8 'skb_queue_len' 'int ()'
    | | | `-UnaryOperator 0x14e143320 <col:20, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | |   `-RecoveryExpr 0x14e1432f8 <col:21, col:25> '<dependent type>' contains-errors lvalue
    | | |     `-DeclRefExpr 0x14e1432c0 <col:21> 'struct sock *' lvalue ParmVar 0x14e128648 'sk' 'struct sock *'
    | | `-IntegerLiteral 0x14e143360 <col:44> 'int' 1
    | |-CompoundStmt 0x14e143400 <col:47, line:31:2>
    | `-CompoundStmt 0x14e143d70 <col:9, line:51:2>
    |   |-DeclStmt 0x14e143538 <line:32:3, col:34>
    |   | `-VarDecl 0x14e143498 <col:3, col:30> col:19 used csum_skb 'struct sk_buff *' cinit
    |   |   `-RecoveryExpr 0x14e143518 <col:30> '<dependent type>' contains-errors lvalue
    |   |-CallExpr 0x14e143708 <line:35:3, col:42> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x14e143650 <col:3> 'int ()' Function 0x14e143598 'skb_queue_walk' 'int ()'
    |   | |-UnaryOperator 0x14e1436d0 <col:18, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | | `-RecoveryExpr 0x14e1436a8 <col:19, col:23> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x14e143670 <col:19> 'struct sock *' lvalue ParmVar 0x14e128648 'sk' 'struct sock *'
    |   | `-DeclRefExpr 0x14e1436e8 <col:39> 'struct sk_buff *' lvalue Var 0x14e140fa8 'skb' 'struct sk_buff *'
    |   |-CompoundStmt 0x14e143cd0 <col:44, line:48:3>
    |   | |-BinaryOperator 0x14e143ae8 <line:41:4, col:45> 'int' contains-errors '='
    |   | | |-DeclRefExpr 0x14e1438d0 <col:4> 'int' lvalue Var 0x14e1411a8 'len' 'int'
    |   | | `-BinaryOperator 0x14e143ac8 <col:10, col:45> '<dependent type>' contains-errors '-'
    |   | |   |-RecoveryExpr 0x14e143928 <col:10, col:15> '<dependent type>' contains-errors lvalue
    |   | |   | `-DeclRefExpr 0x14e1438f0 <col:10> 'struct sk_buff *' lvalue Var 0x14e140fa8 'skb' 'struct sk_buff *'
    |   | |   `-CallExpr 0x14e143a88 <col:21, col:45> 'int'
    |   | |     |-ImplicitCastExpr 0x14e143a70 <col:21> 'int (*)()' <FunctionToPointerDecay>
    |   | |     | `-DeclRefExpr 0x14e143a30 <col:21> 'int ()' Function 0x14e143978 'skb_transport_offset' 'int ()'
    |   | |     `-ImplicitCastExpr 0x14e143ab0 <col:42> 'struct sk_buff *' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x14e143a50 <col:42> 'struct sk_buff *' lvalue Var 0x14e140fa8 'skb' 'struct sk_buff *'
    |   | |-IfStmt 0x14e143c38 <line:42:4, line:45:4>
    |   | | |-BinaryOperator 0x14e143b78 <line:42:8, col:18> 'int' '>='
    |   | | | |-ImplicitCastExpr 0x14e143b48 <col:8> 'int' <LValueToRValue>
    |   | | | | `-DeclRefExpr 0x14e143b08 <col:8> 'int' lvalue Var 0x14e141110 'offset' 'int'
    |   | | | `-ImplicitCastExpr 0x14e143b60 <col:18> 'int' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x14e143b28 <col:18> 'int' lvalue Var 0x14e1411a8 'len' 'int'
    |   | | `-CompoundStmt 0x14e143c20 <col:23, line:45:4>
    |   | |   `-CompoundAssignOperator 0x14e143bf0 <line:43:5, col:15> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
    |   | |     |-DeclRefExpr 0x14e143b98 <col:5> 'int' lvalue Var 0x14e141110 'offset' 'int'
    |   | |     `-ImplicitCastExpr 0x14e143bd8 <col:15> 'int' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x14e143bb8 <col:15> 'int' lvalue Var 0x14e1411a8 'len' 'int'
    |   | `-BinaryOperator 0x14e143cb0 <line:47:4, col:15> 'struct sk_buff *' contains-errors '='
    |   |   |-DeclRefExpr 0x14e143c58 <col:4> 'struct sk_buff *' contains-errors lvalue Var 0x14e143498 'csum_skb' 'struct sk_buff *'
    |   |   `-ImplicitCastExpr 0x14e143c98 <col:15> 'struct sk_buff *' <LValueToRValue>
    |   |     `-DeclRefExpr 0x14e143c78 <col:15> 'struct sk_buff *' lvalue Var 0x14e140fa8 'skb' 'struct sk_buff *'
    |   `-BinaryOperator 0x14e143d50 <line:50:3, col:9> 'struct sk_buff *' contains-errors '='
    |     |-DeclRefExpr 0x14e143cf8 <col:3> 'struct sk_buff *' lvalue Var 0x14e140fa8 'skb' 'struct sk_buff *'
    |     `-ImplicitCastExpr 0x14e143d38 <col:9> 'struct sk_buff *' contains-errors <LValueToRValue>
    |       `-DeclRefExpr 0x14e143d18 <col:9> 'struct sk_buff *' contains-errors lvalue Var 0x14e143498 'csum_skb' 'struct sk_buff *'
    |-CompoundAssignOperator 0x14e808c98 <line:53:2, col:36> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    | |-DeclRefExpr 0x14e143dd0 <col:2> 'int' lvalue Var 0x14e141110 'offset' 'int'
    | `-CallExpr 0x14e808c58 <col:12, col:36> 'int'
    |   |-ImplicitCastExpr 0x14e808c40 <col:12> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x14e808c00 <col:12> 'int ()' Function 0x14e143978 'skb_transport_offset' 'int ()'
    |   `-ImplicitCastExpr 0x14e808c80 <col:33> 'struct sk_buff *' <LValueToRValue>
    |     `-DeclRefExpr 0x14e808c20 <col:33> 'struct sk_buff *' lvalue Var 0x14e140fa8 'skb' 'struct sk_buff *'
    |-LabelStmt 0x14e809890 <line:68:1, line:69:34> 'send'
    | `-BinaryOperator 0x14e809870 <col:2, col:34> 'int' '='
    |   |-DeclRefExpr 0x14e8096d8 <col:2> 'int' lvalue Var 0x14e141058 'err' 'int'
    |   `-CallExpr 0x14e809830 <col:8, col:34> 'int'
    |     |-ImplicitCastExpr 0x14e809818 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x14e8097d8 <col:8> 'int ()' Function 0x14e809720 'ip6_push_pending_frames' 'int ()'
    |     `-ImplicitCastExpr 0x14e809858 <col:32> 'struct sock *' <LValueToRValue>
    |       `-DeclRefExpr 0x14e8097f8 <col:32> 'struct sock *' lvalue ParmVar 0x14e128648 'sk' 'struct sock *'
    `-LabelStmt 0x14e8098f8 <line:70:1, line:71:9> 'out'
      `-ReturnStmt 0x14e8098e8 <col:2, col:9>
        `-ImplicitCastExpr 0x14e8098d0 <col:9> 'int' <LValueToRValue>
          `-DeclRefExpr 0x14e8098b0 <col:9> 'int' lvalue Var 0x14e141058 'err' 'int'
