TranslationUnitDecl 0x14f855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14f8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14f855bd0 '__int128'
|-TypedefDecl 0x14f856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14f855bf0 'unsigned __int128'
|-TypedefDecl 0x15800be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15800bc00 'struct __NSConstantString_tag'
|   `-Record 0x14f856580 '__NSConstantString_tag'
|-TypedefDecl 0x15800be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14f855d90 '__SVInt8_t'
|-TypedefDecl 0x15800bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14f855db0 '__SVInt16_t'
|-TypedefDecl 0x15800bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14f855dd0 '__SVInt32_t'
|-TypedefDecl 0x15800bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14f855df0 '__SVInt64_t'
|-TypedefDecl 0x15800c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14f855e10 '__SVUint8_t'
|-TypedefDecl 0x15800c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14f855e30 '__SVUint16_t'
|-TypedefDecl 0x15800c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14f855e50 '__SVUint32_t'
|-TypedefDecl 0x15800c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14f855e70 '__SVUint64_t'
|-TypedefDecl 0x15800c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14f855e90 '__SVFloat16_t'
|-TypedefDecl 0x15800c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14f855eb0 '__SVFloat32_t'
|-TypedefDecl 0x15800c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14f855ed0 '__SVFloat64_t'
|-TypedefDecl 0x15800c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14f855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15800c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14f855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15800c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14f855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15800c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14f855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15800c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14f855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15800c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14f855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15800c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14f855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15800c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14f855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15800c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14f855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15800c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14f856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15800c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14f856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15800c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14f856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15800c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14f856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15800c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14f856090 '__clang_svint8x3_t'
|-TypedefDecl 0x15800c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14f8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15800c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14f8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15800c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14f8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15800c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14f856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15800ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14f856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15800cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14f856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15800cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14f856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15800cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14f856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15800d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14f8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15800d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14f8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15800d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14f8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15800d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14f856210 '__clang_svint8x4_t'
|-TypedefDecl 0x15800d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14f856230 '__clang_svint16x4_t'
|-TypedefDecl 0x15800d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14f856250 '__clang_svint32x4_t'
|-TypedefDecl 0x15800d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14f856270 '__clang_svint64x4_t'
|-TypedefDecl 0x15800d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14f856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15800d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14f8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15800d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14f8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15800d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14f8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15800d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14f856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15800d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14f856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15800d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14f856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15800d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14f856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15800da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14f856390 '__SVBool_t'
|-TypedefDecl 0x15800da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14f8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15800dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14f8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15800db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14f8563f0 '__SVCount_t'
|-TypedefDecl 0x15800dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15800dbb0 'char *'
|   `-BuiltinType 0x14f8556b0 'char'
|-TypedefDecl 0x15800dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15800dbb0 'char *'
|   `-BuiltinType 0x14f8556b0 'char'
|-FunctionDecl 0x15802ab88 <dataset_diviso_filec/func19125_vuln.c:1:1, line:89:1> line:1:1 referenced lys_node_free 'int (struct lys_node *, void (*)(const struct lys_node *, void *), int)'
| |-ParmVarDecl 0x15800e248 <col:15, col:32> col:32 used node 'struct lys_node *'
| |-ParmVarDecl 0x15802a9c0 <col:38, col:104> col:45 used private_destructor 'void (*)(const struct lys_node *, void *)'
| |-ParmVarDecl 0x15802aa40 <col:107, col:111> col:111 used shallow 'int'
| `-CompoundStmt 0x1580315a0 <line:2:1, line:89:1>
|   |-DeclStmt 0x15802ae78 <line:3:5, col:23>
|   | |-RecordDecl 0x15802ac90 <col:5, col:12> col:12 struct ly_ctx
|   | `-VarDecl 0x15802adf8 <col:5, col:20> col:20 used ctx 'struct ly_ctx *'
|   |-DeclStmt 0x15802aff8 <line:4:5, col:32>
|   | |-VarDecl 0x15802aee8 <col:5, col:22> col:22 used sub 'struct lys_node *'
|   | `-VarDecl 0x15802af78 <col:5, col:28> col:28 used next 'struct lys_node *'
|   |-IfStmt 0x15802b088 <line:6:5, line:8:5>
|   | |-UnaryOperator 0x15802b048 <line:6:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x15802b030 <col:10> 'struct lys_node *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x15802b010 <col:10> 'struct lys_node *' lvalue ParmVar 0x15800e248 'node' 'struct lys_node *'
|   | `-CompoundStmt 0x15802b070 <col:16, line:8:5>
|   |   `-ReturnStmt 0x15802b060 <line:7:9>
|   |-CallExpr 0x15802b250 <line:10:5, col:24> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x15802b1d0 <col:5> 'int ()' Function 0x15802b118 'assert' 'int ()'
|   | `-RecoveryExpr 0x15802b228 <col:12, col:18> '<dependent type>' contains-errors lvalue
|   |   `-DeclRefExpr 0x15802b1f0 <col:12> 'struct lys_node *' lvalue ParmVar 0x15800e248 'node' 'struct lys_node *'
|   |-CallExpr 0x15802b340 <line:11:5, col:29> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x15802b278 <col:5> 'int ()' Function 0x15802b118 'assert' 'int ()'
|   | `-CXXDependentScopeMemberExpr 0x15802b2f8 <col:12, col:26> '<dependent type>' contains-errors lvalue ->ctx
|   |   `-RecoveryExpr 0x15802b2d0 <col:12, col:18> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x15802b298 <col:12> 'struct lys_node *' lvalue ParmVar 0x15800e248 'node' 'struct lys_node *'
|   |-BinaryOperator 0x15802b430 <line:13:5, col:25> 'struct ly_ctx *' contains-errors '='
|   | |-DeclRefExpr 0x15802b368 <col:5> 'struct ly_ctx *' lvalue Var 0x15802adf8 'ctx' 'struct ly_ctx *'
|   | `-CXXDependentScopeMemberExpr 0x15802b3e8 <col:11, col:25> '<dependent type>' contains-errors lvalue ->ctx
|   |   `-RecoveryExpr 0x15802b3c0 <col:11, col:17> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x15802b388 <col:11> 'struct lys_node *' lvalue ParmVar 0x15800e248 'node' 'struct lys_node *'
|   |-IfStmt 0x15802b5d8 <line:16:5, line:18:5>
|   | |-BinaryOperator 0x15802b4d0 <line:16:9, col:23> 'int' contains-errors '&&'
|   | | |-RecoveryExpr 0x15802b488 <col:9, col:15> '<dependent type>' contains-errors lvalue
|   | | | `-DeclRefExpr 0x15802b450 <col:9> 'struct lys_node *' lvalue ParmVar 0x15800e248 'node' 'struct lys_node *'
|   | | `-DeclRefExpr 0x15802b4b0 <col:23> 'void (*)(const struct lys_node *, void *)' lvalue ParmVar 0x15802a9c0 'private_destructor' 'void (*)(const struct lys_node *, void *)'
|   | `-CompoundStmt 0x15802b5c0 <col:43, line:18:5>
|   |   `-CallExpr 0x15802b590 <line:17:9, col:44> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x15802b4f0 <col:9> 'void (*)(const struct lys_node *, void *)' lvalue ParmVar 0x15802a9c0 'private_destructor' 'void (*)(const struct lys_node *, void *)'
|   |     |-DeclRefExpr 0x15802b510 <col:28> 'struct lys_node *' lvalue ParmVar 0x15800e248 'node' 'struct lys_node *'
|   |     `-RecoveryExpr 0x15802b568 <col:34, col:40> '<dependent type>' contains-errors lvalue
|   |       `-DeclRefExpr 0x15802b530 <col:34> 'struct lys_node *' lvalue ParmVar 0x15800e248 'node' 'struct lys_node *'
|   |-CallExpr 0x15802b778 <line:21:5, col:34> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x15802b6d8 <col:5> 'int ()' Function 0x15802b620 'lydict_remove' 'int ()'
|   | |-DeclRefExpr 0x15802b6f8 <col:19> 'struct ly_ctx *' lvalue Var 0x15802adf8 'ctx' 'struct ly_ctx *'
|   | `-RecoveryExpr 0x15802b750 <col:24, col:30> '<dependent type>' contains-errors lvalue
|   |   `-DeclRefExpr 0x15802b718 <col:24> 'struct lys_node *' lvalue ParmVar 0x15800e248 'node' 'struct lys_node *'
|   |-IfStmt 0x15802bcc8 <line:22:5, line:26:5>
|   | |-RecoveryExpr 0x15802b878 <line:22:9, col:52> '_Bool' contains-errors
|   | `-CompoundStmt 0x15802bca0 <col:55, line:26:5>
|   |   |-CallExpr 0x15802bab8 <line:23:9, col:99> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x15802b978 <col:9> 'int ()' Function 0x15802b8c0 'lys_iffeature_free' 'int ()'
|   |   | |-DeclRefExpr 0x15802b998 <col:28> 'struct ly_ctx *' lvalue Var 0x15802adf8 'ctx' 'struct ly_ctx *'
|   |   | |-RecoveryExpr 0x15802b9f0 <col:33, col:39> '<dependent type>' contains-errors lvalue
|   |   | | `-DeclRefExpr 0x15802b9b8 <col:33> 'struct lys_node *' lvalue ParmVar 0x15800e248 'node' 'struct lys_node *'
|   |   | |-RecoveryExpr 0x15802ba50 <col:50, col:56> '<dependent type>' contains-errors lvalue
|   |   | | `-DeclRefExpr 0x15802ba18 <col:50> 'struct lys_node *' lvalue ParmVar 0x15800e248 'node' 'struct lys_node *'
|   |   | |-DeclRefExpr 0x15802ba78 <col:72> 'int' lvalue ParmVar 0x15802aa40 'shallow' 'int'
|   |   | `-DeclRefExpr 0x15802ba98 <col:81> 'void (*)(const struct lys_node *, void *)' lvalue ParmVar 0x15802a9c0 'private_destructor' 'void (*)(const struct lys_node *, void *)'
|   |   |-CallExpr 0x15802bba0 <line:24:9, col:37> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x15802bb00 <col:9> 'int ()' Function 0x15802b620 'lydict_remove' 'int ()'
|   |   | |-DeclRefExpr 0x15802bb20 <col:23> 'struct ly_ctx *' lvalue Var 0x15802adf8 'ctx' 'struct ly_ctx *'
|   |   | `-RecoveryExpr 0x15802bb78 <col:28, col:34> '<dependent type>' contains-errors lvalue
|   |   |   `-DeclRefExpr 0x15802bb40 <col:28> 'struct lys_node *' lvalue ParmVar 0x15800e248 'node' 'struct lys_node *'
|   |   `-CallExpr 0x15802bc70 <line:25:9, col:37> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x15802bbd0 <col:9> 'int ()' Function 0x15802b620 'lydict_remove' 'int ()'
|   |     |-DeclRefExpr 0x15802bbf0 <col:23> 'struct ly_ctx *' lvalue Var 0x15802adf8 'ctx' 'struct ly_ctx *'
|   |     `-RecoveryExpr 0x15802bc48 <col:28, col:34> '<dependent type>' contains-errors lvalue
|   |       `-DeclRefExpr 0x15802bc10 <col:28> 'struct lys_node *' lvalue ParmVar 0x15800e248 'node' 'struct lys_node *'
|   |-IfStmt 0x15802c178 <line:28:5, line:32:5>
|   | |-RecoveryExpr 0x15802bde8 <line:28:9, col:65> '_Bool' contains-errors
|   | `-CompoundStmt 0x15802c158 <col:68, line:32:5>
|   |   |-CallExpr 0x15802bfa8 <line:29:9, col:48> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x15802bee8 <col:9> 'int ()' Function 0x15802be30 'LY_TREE_FOR_SAFE' 'int ()'
|   |   | |-RecoveryExpr 0x15802bf40 <col:26, col:32> '<dependent type>' contains-errors lvalue
|   |   | | `-DeclRefExpr 0x15802bf08 <col:26> 'struct lys_node *' lvalue ParmVar 0x15800e248 'node' 'struct lys_node *'
|   |   | |-DeclRefExpr 0x15802bf68 <col:39> 'struct lys_node *' lvalue Var 0x15802af78 'next' 'struct lys_node *'
|   |   | `-DeclRefExpr 0x15802bf88 <col:45> 'struct lys_node *' lvalue Var 0x15802aee8 'sub' 'struct lys_node *'
|   |   `-CompoundStmt 0x15802c140 <col:50, line:31:9>
|   |     `-CallExpr 0x15802c0d8 <line:30:13, col:53> 'int'
|   |       |-ImplicitCastExpr 0x15802c0c0 <col:13> 'int (*)(struct lys_node *, void (*)(const struct lys_node *, void *), int)' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x15802bfe0 <col:13> 'int (struct lys_node *, void (*)(const struct lys_node *, void *), int)' Function 0x15802ab88 'lys_node_free' 'int (struct lys_node *, void (*)(const struct lys_node *, void *), int)'
|   |       |-ImplicitCastExpr 0x15802c110 <col:27> 'struct lys_node *' <LValueToRValue>
|   |       | `-DeclRefExpr 0x15802c000 <col:27> 'struct lys_node *' lvalue Var 0x15802aee8 'sub' 'struct lys_node *'
|   |       |-ImplicitCastExpr 0x15802c128 <col:32> 'void (*)(const struct lys_node *, void *)' <LValueToRValue>
|   |       | `-DeclRefExpr 0x15802c020 <col:32> 'void (*)(const struct lys_node *, void *)' lvalue ParmVar 0x15802a9c0 'private_destructor' 'void (*)(const struct lys_node *, void *)'
|   |       `-IntegerLiteral 0x15802c040 <col:52> 'int' 0
|   |-CallExpr 0x15802c398 <line:34:5, col:84> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x15802c278 <col:5> 'int ()' Function 0x15802c1c0 'lys_extension_instances_free' 'int ()'
|   | |-DeclRefExpr 0x15802c298 <col:34> 'struct ly_ctx *' lvalue Var 0x15802adf8 'ctx' 'struct ly_ctx *'
|   | |-RecoveryExpr 0x15802c2f0 <col:39, col:45> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x15802c2b8 <col:39> 'struct lys_node *' lvalue ParmVar 0x15800e248 'node' 'struct lys_node *'
|   | |-RecoveryExpr 0x15802c350 <col:50, col:56> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x15802c318 <col:50> 'struct lys_node *' lvalue ParmVar 0x15800e248 'node' 'struct lys_node *'
|   | `-DeclRefExpr 0x15802c378 <col:66> 'void (*)(const struct lys_node *, void *)' lvalue ParmVar 0x15802a9c0 'private_destructor' 'void (*)(const struct lys_node *, void *)'
|   |-SwitchStmt 0x15802c450 <line:37:5, line:84:5>
|   | |-ImplicitCastExpr 0x15802c438 <line:37:13, col:19> '<dependent type>' contains-errors <LValueToRValue>
|   | | `-RecoveryExpr 0x15802c410 <col:13, col:19> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x15802c3d8 <col:13> 'struct lys_node *' lvalue ParmVar 0x15800e248 'node' 'struct lys_node *'
|   | `-CompoundStmt 0x1580310a0 <col:29, line:84:5>
|   |   |-CallExpr 0x15802e200 <line:39:9, col:86> 'int'
|   |   | |-ImplicitCastExpr 0x15802c7c0 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x15802c558 <col:9> 'int ()' Function 0x15802c4a0 'lys_container_free' 'int ()'
|   |   | |-ImplicitCastExpr 0x15802e238 <col:28> 'struct ly_ctx *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x15802c578 <col:28> 'struct ly_ctx *' lvalue Var 0x15802adf8 'ctx' 'struct ly_ctx *'
|   |   | |-CStyleCastExpr 0x15802c740 <col:33, col:62> 'struct lys_node_container *' <BitCast>
|   |   | | `-ImplicitCastExpr 0x15802c728 <col:62> 'struct lys_node *' <LValueToRValue> part_of_explicit_cast
|   |   | |   `-DeclRefExpr 0x15802c640 <col:62> 'struct lys_node *' lvalue ParmVar 0x15800e248 'node' 'struct lys_node *'
|   |   | `-ImplicitCastExpr 0x15802e250 <col:68> 'void (*)(const struct lys_node *, void *)' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x15802c768 <col:68> 'void (*)(const struct lys_node *, void *)' lvalue ParmVar 0x15802a9c0 'private_destructor' 'void (*)(const struct lys_node *, void *)'
|   |   |-BreakStmt 0x15802e268 <line:40:9>
|   |   |-CallExpr 0x15802e5c0 <line:42:9, col:86> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x15802e350 <col:9> 'int ()' Function 0x15802e298 'lys_when_free' 'int ()'
|   |   | |-DeclRefExpr 0x15802e370 <col:23> 'struct ly_ctx *' lvalue Var 0x15802adf8 'ctx' 'struct ly_ctx *'
|   |   | |-RecoveryExpr 0x15802e578 <col:28, col:62> '<dependent type>' contains-errors lvalue
|   |   | | `-ParenExpr 0x15802e558 <col:28, col:59> 'struct lys_node_choice *'
|   |   | |   `-CStyleCastExpr 0x15802e530 <col:29, col:55> 'struct lys_node_choice *' <BitCast>
|   |   | |     `-ImplicitCastExpr 0x15802e518 <col:55> 'struct lys_node *' <LValueToRValue> part_of_explicit_cast
|   |   | |       `-DeclRefExpr 0x15802e430 <col:55> 'struct lys_node *' lvalue ParmVar 0x15800e248 'node' 'struct lys_node *'
|   |   | `-DeclRefExpr 0x15802e5a0 <col:68> 'void (*)(const struct lys_node *, void *)' lvalue ParmVar 0x15802a9c0 'private_destructor' 'void (*)(const struct lys_node *, void *)'
|   |   |-BreakStmt 0x15802e5f8 <line:43:9>
|   |   |-CallExpr 0x15802e920 <line:45:9, col:76> 'int'
|   |   | |-ImplicitCastExpr 0x15802e908 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x15802e6e0 <col:9> 'int ()' Function 0x15802e628 'lys_leaf_free' 'int ()'
|   |   | |-ImplicitCastExpr 0x15802e958 <col:23> 'struct ly_ctx *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x15802e700 <col:23> 'struct ly_ctx *' lvalue Var 0x15802adf8 'ctx' 'struct ly_ctx *'
|   |   | |-CStyleCastExpr 0x15802e8c0 <col:28, col:52> 'struct lys_node_leaf *' <BitCast>
|   |   | | `-ImplicitCastExpr 0x15802e8a8 <col:52> 'struct lys_node *' <LValueToRValue> part_of_explicit_cast
|   |   | |   `-DeclRefExpr 0x15802e7c0 <col:52> 'struct lys_node *' lvalue ParmVar 0x15800e248 'node' 'struct lys_node *'
|   |   | `-ImplicitCastExpr 0x15802e970 <col:58> 'void (*)(const struct lys_node *, void *)' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x15802e8e8 <col:58> 'void (*)(const struct lys_node *, void *)' lvalue ParmVar 0x15802a9c0 'private_destructor' 'void (*)(const struct lys_node *, void *)'
|   |   |-BreakStmt 0x15802e988 <line:46:9>
|   |   |-CallExpr 0x15802ecb0 <line:48:9, col:84> 'int'
|   |   | |-ImplicitCastExpr 0x15802ec98 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x15802ea70 <col:9> 'int ()' Function 0x15802e9b8 'lys_leaflist_free' 'int ()'
|   |   | |-ImplicitCastExpr 0x15802ece8 <col:27> 'struct ly_ctx *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x15802ea90 <col:27> 'struct ly_ctx *' lvalue Var 0x15802adf8 'ctx' 'struct ly_ctx *'
|   |   | |-CStyleCastExpr 0x15802ec50 <col:32, col:60> 'struct lys_node_leaflist *' <BitCast>
|   |   | | `-ImplicitCastExpr 0x15802ec38 <col:60> 'struct lys_node *' <LValueToRValue> part_of_explicit_cast
|   |   | |   `-DeclRefExpr 0x15802eb50 <col:60> 'struct lys_node *' lvalue ParmVar 0x15800e248 'node' 'struct lys_node *'
|   |   | `-ImplicitCastExpr 0x15802ed00 <col:66> 'void (*)(const struct lys_node *, void *)' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x15802ec78 <col:66> 'void (*)(const struct lys_node *, void *)' lvalue ParmVar 0x15802a9c0 'private_destructor' 'void (*)(const struct lys_node *, void *)'
|   |   |-BreakStmt 0x15802ed18 <line:49:9>
|   |   |-CallExpr 0x15802f040 <line:51:9, col:76> 'int'
|   |   | |-ImplicitCastExpr 0x15802f028 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x15802ee00 <col:9> 'int ()' Function 0x15802ed48 'lys_list_free' 'int ()'
|   |   | |-ImplicitCastExpr 0x15802f078 <col:23> 'struct ly_ctx *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x15802ee20 <col:23> 'struct ly_ctx *' lvalue Var 0x15802adf8 'ctx' 'struct ly_ctx *'
|   |   | |-CStyleCastExpr 0x15802efe0 <col:28, col:52> 'struct lys_node_list *' <BitCast>
|   |   | | `-ImplicitCastExpr 0x15802efc8 <col:52> 'struct lys_node *' <LValueToRValue> part_of_explicit_cast
|   |   | |   `-DeclRefExpr 0x15802eee0 <col:52> 'struct lys_node *' lvalue ParmVar 0x15800e248 'node' 'struct lys_node *'
|   |   | `-ImplicitCastExpr 0x15802f090 <col:58> 'void (*)(const struct lys_node *, void *)' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x15802f008 <col:58> 'void (*)(const struct lys_node *, void *)' lvalue ParmVar 0x15802a9c0 'private_destructor' 'void (*)(const struct lys_node *, void *)'
|   |   |-BreakStmt 0x15802f0a8 <line:52:9>
|   |   |-CallExpr 0x15802fa00 <line:55:9, col:82> 'int'
|   |   | |-ImplicitCastExpr 0x15802f9e8 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x15802f190 <col:9> 'int ()' Function 0x15802f0d8 'lys_anydata_free' 'int ()'
|   |   | |-ImplicitCastExpr 0x15802fa38 <col:26> 'struct ly_ctx *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x15802f1b0 <col:26> 'struct ly_ctx *' lvalue Var 0x15802adf8 'ctx' 'struct ly_ctx *'
|   |   | |-CStyleCastExpr 0x15802f9a0 <col:31, col:58> 'struct lys_node_anydata *' <BitCast>
|   |   | | `-ImplicitCastExpr 0x15802f988 <col:58> 'struct lys_node *' <LValueToRValue> part_of_explicit_cast
|   |   | |   `-DeclRefExpr 0x15802f8a0 <col:58> 'struct lys_node *' lvalue ParmVar 0x15800e248 'node' 'struct lys_node *'
|   |   | `-ImplicitCastExpr 0x15802fa50 <col:64> 'void (*)(const struct lys_node *, void *)' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x15802f9c8 <col:64> 'void (*)(const struct lys_node *, void *)' lvalue ParmVar 0x15802a9c0 'private_destructor' 'void (*)(const struct lys_node *, void *)'
|   |   |-BreakStmt 0x15802fa68 <line:56:9>
|   |   |-CallExpr 0x15802fd90 <line:58:9, col:76> 'int'
|   |   | |-ImplicitCastExpr 0x15802fd78 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x15802fb50 <col:9> 'int ()' Function 0x15802fa98 'lys_uses_free' 'int ()'
|   |   | |-ImplicitCastExpr 0x15802fdc8 <col:23> 'struct ly_ctx *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x15802fb70 <col:23> 'struct ly_ctx *' lvalue Var 0x15802adf8 'ctx' 'struct ly_ctx *'
|   |   | |-CStyleCastExpr 0x15802fd30 <col:28, col:52> 'struct lys_node_uses *' <BitCast>
|   |   | | `-ImplicitCastExpr 0x15802fd18 <col:52> 'struct lys_node *' <LValueToRValue> part_of_explicit_cast
|   |   | |   `-DeclRefExpr 0x15802fc30 <col:52> 'struct lys_node *' lvalue ParmVar 0x15800e248 'node' 'struct lys_node *'
|   |   | `-ImplicitCastExpr 0x15802fde0 <col:58> 'void (*)(const struct lys_node *, void *)' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x15802fd58 <col:58> 'void (*)(const struct lys_node *, void *)' lvalue ParmVar 0x15802a9c0 'private_destructor' 'void (*)(const struct lys_node *, void *)'
|   |   |-BreakStmt 0x15802fdf8 <line:59:9>
|   |   |-CallExpr 0x158030070 <line:61:9, col:84> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x15802fe00 <col:9> 'int ()' Function 0x15802e298 'lys_when_free' 'int ()'
|   |   | |-DeclRefExpr 0x15802fe20 <col:23> 'struct ly_ctx *' lvalue Var 0x15802adf8 'ctx' 'struct ly_ctx *'
|   |   | |-RecoveryExpr 0x158030028 <col:28, col:60> '<dependent type>' contains-errors lvalue
|   |   | | `-ParenExpr 0x158030008 <col:28, col:57> 'struct lys_node_case *'
|   |   | |   `-CStyleCastExpr 0x15802ffe0 <col:29, col:53> 'struct lys_node_case *' <BitCast>
|   |   | |     `-ImplicitCastExpr 0x15802ffc8 <col:53> 'struct lys_node *' <LValueToRValue> part_of_explicit_cast
|   |   | |       `-DeclRefExpr 0x15802fee0 <col:53> 'struct lys_node *' lvalue ParmVar 0x15800e248 'node' 'struct lys_node *'
|   |   | `-DeclRefExpr 0x158030050 <col:66> 'void (*)(const struct lys_node *, void *)' lvalue ParmVar 0x15802a9c0 'private_destructor' 'void (*)(const struct lys_node *, void *)'
|   |   |-BreakStmt 0x1580300a8 <line:62:9>
|   |   |-BreakStmt 0x1580300b0 <line:65:9>
|   |   |-CallExpr 0x1580303e0 <line:67:9, col:74> 'int'
|   |   | |-ImplicitCastExpr 0x1580303c8 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x158030198 <col:9> 'int ()' Function 0x1580300e0 'lys_grp_free' 'int ()'
|   |   | |-ImplicitCastExpr 0x158030418 <col:22> 'struct ly_ctx *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1580301b8 <col:22> 'struct ly_ctx *' lvalue Var 0x15802adf8 'ctx' 'struct ly_ctx *'
|   |   | |-CStyleCastExpr 0x158030380 <col:27, col:50> 'struct lys_node_grp *' <BitCast>
|   |   | | `-ImplicitCastExpr 0x158030368 <col:50> 'struct lys_node *' <LValueToRValue> part_of_explicit_cast
|   |   | |   `-DeclRefExpr 0x158030280 <col:50> 'struct lys_node *' lvalue ParmVar 0x15800e248 'node' 'struct lys_node *'
|   |   | `-ImplicitCastExpr 0x158030430 <col:56> 'void (*)(const struct lys_node *, void *)' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1580303a8 <col:56> 'void (*)(const struct lys_node *, void *)' lvalue ParmVar 0x15802a9c0 'private_destructor' 'void (*)(const struct lys_node *, void *)'
|   |   |-BreakStmt 0x158030448 <line:68:9>
|   |   |-CallExpr 0x158030770 <line:71:9, col:88> 'int'
|   |   | |-ImplicitCastExpr 0x158030758 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x158030530 <col:9> 'int ()' Function 0x158030478 'lys_rpc_action_free' 'int ()'
|   |   | |-ImplicitCastExpr 0x1580307a8 <col:29> 'struct ly_ctx *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x158030550 <col:29> 'struct ly_ctx *' lvalue Var 0x15802adf8 'ctx' 'struct ly_ctx *'
|   |   | |-CStyleCastExpr 0x158030710 <col:34, col:64> 'struct lys_node_rpc_action *' <BitCast>
|   |   | | `-ImplicitCastExpr 0x1580306f8 <col:64> 'struct lys_node *' <LValueToRValue> part_of_explicit_cast
|   |   | |   `-DeclRefExpr 0x158030610 <col:64> 'struct lys_node *' lvalue ParmVar 0x15800e248 'node' 'struct lys_node *'
|   |   | `-ImplicitCastExpr 0x1580307c0 <col:70> 'void (*)(const struct lys_node *, void *)' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x158030738 <col:70> 'void (*)(const struct lys_node *, void *)' lvalue ParmVar 0x15802a9c0 'private_destructor' 'void (*)(const struct lys_node *, void *)'
|   |   |-BreakStmt 0x1580307d8 <line:72:9>
|   |   |-CallExpr 0x158030b20 <line:74:9, col:78> 'int'
|   |   | |-ImplicitCastExpr 0x158030b08 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1580308e0 <col:9> 'int ()' Function 0x158030828 'lys_notif_free' 'int ()'
|   |   | |-ImplicitCastExpr 0x158030b58 <col:24> 'struct ly_ctx *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x158030900 <col:24> 'struct ly_ctx *' lvalue Var 0x15802adf8 'ctx' 'struct ly_ctx *'
|   |   | |-CStyleCastExpr 0x158030ac0 <col:29, col:54> 'struct lys_node_notif *' <BitCast>
|   |   | | `-ImplicitCastExpr 0x158030aa8 <col:54> 'struct lys_node *' <LValueToRValue> part_of_explicit_cast
|   |   | |   `-DeclRefExpr 0x1580309c0 <col:54> 'struct lys_node *' lvalue ParmVar 0x15800e248 'node' 'struct lys_node *'
|   |   | `-ImplicitCastExpr 0x158030b70 <col:60> 'void (*)(const struct lys_node *, void *)' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x158030ae8 <col:60> 'void (*)(const struct lys_node *, void *)' lvalue ParmVar 0x15802a9c0 'private_destructor' 'void (*)(const struct lys_node *, void *)'
|   |   |-BreakStmt 0x158030b88 <line:75:9>
|   |   |-CallExpr 0x158030eb0 <line:78:9, col:78> 'int'
|   |   | |-ImplicitCastExpr 0x158030e98 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x158030c70 <col:9> 'int ()' Function 0x158030bb8 'lys_inout_free' 'int ()'
|   |   | |-ImplicitCastExpr 0x158030ee8 <col:24> 'struct ly_ctx *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x158030c90 <col:24> 'struct ly_ctx *' lvalue Var 0x15802adf8 'ctx' 'struct ly_ctx *'
|   |   | |-CStyleCastExpr 0x158030e50 <col:29, col:54> 'struct lys_node_inout *' <BitCast>
|   |   | | `-ImplicitCastExpr 0x158030e38 <col:54> 'struct lys_node *' <LValueToRValue> part_of_explicit_cast
|   |   | |   `-DeclRefExpr 0x158030d50 <col:54> 'struct lys_node *' lvalue ParmVar 0x15800e248 'node' 'struct lys_node *'
|   |   | `-ImplicitCastExpr 0x158030f00 <col:60> 'void (*)(const struct lys_node *, void *)' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x158030e78 <col:60> 'void (*)(const struct lys_node *, void *)' lvalue ParmVar 0x15802a9c0 'private_destructor' 'void (*)(const struct lys_node *, void *)'
|   |   |-BreakStmt 0x158030f18 <line:79:9>
|   |   |-CallExpr 0x158031058 <line:82:9, col:19> 'int'
|   |   | |-ImplicitCastExpr 0x158031040 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x158031000 <col:9> 'int ()' Function 0x158030f48 'LOGINT' 'int ()'
|   |   | `-ImplicitCastExpr 0x158031080 <col:16> 'struct ly_ctx *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x158031020 <col:16> 'struct ly_ctx *' lvalue Var 0x15802adf8 'ctx' 'struct ly_ctx *'
|   |   `-BreakStmt 0x158031098 <line:83:9>
|   |-CallExpr 0x1580312c0 <line:87:5, col:25> 'int'
|   | |-ImplicitCastExpr 0x1580312a8 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x158031268 <col:5> 'int ()' Function 0x1580311b0 'lys_node_unlink' 'int ()'
|   | `-ImplicitCastExpr 0x1580312e8 <col:21> 'struct lys_node *' <LValueToRValue>
|   |   `-DeclRefExpr 0x158031288 <col:21> 'struct lys_node *' lvalue ParmVar 0x15800e248 'node' 'struct lys_node *'
|   `-CallExpr 0x158031548 <line:88:5, col:14> 'void'
|     |-ImplicitCastExpr 0x158031530 <col:5> 'void (*)(void *)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x1580314a8 <col:5> 'void (void *)' Function 0x158031338 'free' 'void (void *)'
|     `-ImplicitCastExpr 0x158031588 <col:10> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x158031570 <col:10> 'struct lys_node *' <LValueToRValue>
|         `-DeclRefExpr 0x1580314c8 <col:10> 'struct lys_node *' lvalue ParmVar 0x15800e248 'node' 'struct lys_node *'
`-FunctionDecl 0x158031338 <col:5> col:5 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x158031438 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x1580313e0 <<invalid sloc>> Implicit 873
