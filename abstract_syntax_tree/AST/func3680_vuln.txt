TranslationUnitDecl 0x14f055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14f0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14f055bd0 '__int128'
|-TypedefDecl 0x14f056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14f055bf0 'unsigned __int128'
|-TypedefDecl 0x14f126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14f126000 'struct __NSConstantString_tag'
|   `-Record 0x14f056580 '__NSConstantString_tag'
|-TypedefDecl 0x14f126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14f055d90 '__SVInt8_t'
|-TypedefDecl 0x14f126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14f055db0 '__SVInt16_t'
|-TypedefDecl 0x14f126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14f055dd0 '__SVInt32_t'
|-TypedefDecl 0x14f1263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14f055df0 '__SVInt64_t'
|-TypedefDecl 0x14f126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14f055e10 '__SVUint8_t'
|-TypedefDecl 0x14f1264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14f055e30 '__SVUint16_t'
|-TypedefDecl 0x14f126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14f055e50 '__SVUint32_t'
|-TypedefDecl 0x14f126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14f055e70 '__SVUint64_t'
|-TypedefDecl 0x14f1265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14f055e90 '__SVFloat16_t'
|-TypedefDecl 0x14f126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14f055eb0 '__SVFloat32_t'
|-TypedefDecl 0x14f1266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14f055ed0 '__SVFloat64_t'
|-TypedefDecl 0x14f126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14f055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14f126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14f055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14f1267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14f055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14f126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14f055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14f1268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14f055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14f126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14f055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14f126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14f055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14f1269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14f055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14f126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14f055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14f126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14f056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14f126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14f056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14f126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14f056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14f126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14f056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14f126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14f056090 '__clang_svint8x3_t'
|-TypedefDecl 0x14f126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14f0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14f126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14f0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14f126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14f0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14f126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14f056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14f126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14f056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14f126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14f056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14f126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14f056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14f126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14f056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14f127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14f0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14f127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14f0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14f1278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14f0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14f127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14f056210 '__clang_svint8x4_t'
|-TypedefDecl 0x14f1279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14f056230 '__clang_svint16x4_t'
|-TypedefDecl 0x14f127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14f056250 '__clang_svint32x4_t'
|-TypedefDecl 0x14f127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14f056270 '__clang_svint64x4_t'
|-TypedefDecl 0x14f127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14f056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14f127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14f0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14f127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14f0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14f127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14f0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14f127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14f056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14f127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14f056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14f127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14f056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14f127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14f056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14f127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14f056390 '__SVBool_t'
|-TypedefDecl 0x14f127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14f0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14f127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14f0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14f127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14f0563f0 '__SVCount_t'
|-TypedefDecl 0x14f127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14f127fb0 'char *'
|   `-BuiltinType 0x14f0556b0 'char'
|-TypedefDecl 0x14f128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14f127fb0 'char *'
|   `-BuiltinType 0x14f0556b0 'char'
`-FunctionDecl 0x14f128288 <dataset_diviso_filec/func3680_vuln.c:1:1, line:35:1> line:1:19 invalid vpx_read 'int (int *, int)' static
  |-ParmVarDecl 0x14f128128 <col:28, col:40> col:40 referenced invalid r 'int *'
  |-ParmVarDecl 0x14f1281a8 <col:43, col:47> col:47 used prob 'int'
  `-CompoundStmt 0x14f142520 <col:53, line:35:1>
    |-DeclStmt 0x14f1283f8 <line:2:3, col:23>
    | `-VarDecl 0x14f128358 <col:3, col:22> col:16 used bit 'unsigned int' cinit
    |   `-ImplicitCastExpr 0x14f1283e0 <col:22> 'unsigned int' <IntegralCast>
    |     `-IntegerLiteral 0x14f1283c0 <col:22> 'int' 0
    |-DeclStmt 0x14f128490 <line:5:3, col:12>
    | `-VarDecl 0x14f128428 <col:3, col:7> col:7 used count 'int'
    |-DeclStmt 0x14f128528 <line:6:3, col:21>
    | `-VarDecl 0x14f1284c0 <col:3, col:16> col:16 used range 'unsigned int'
    |-DeclStmt 0x14f1418f8 <line:7:3, col:68>
    | `-VarDecl 0x14f128558 <col:3, col:60> col:16 used split 'unsigned int' cinit
    |   `-BinaryOperator 0x14f1418d8 <col:24, col:60> '<dependent type>' contains-errors '>>'
    |     |-ParenExpr 0x14f141898 <col:24, col:55> '<dependent type>' contains-errors
    |     | `-BinaryOperator 0x14f141878 <col:25, col:54> '<dependent type>' contains-errors '+'
    |     |   |-BinaryOperator 0x14f128648 <col:25, col:36> '<dependent type>' contains-errors '*'
    |     |   | |-CXXDependentScopeMemberExpr 0x14f1285e0 <col:25, col:28> '<dependent type>' contains-errors lvalue ->range
    |     |   | | `-RecoveryExpr 0x14f1285c0 <col:25> '<dependent type>' contains-errors lvalue
    |     |   | `-DeclRefExpr 0x14f128628 <col:36> 'int' lvalue ParmVar 0x14f1281a8 'prob' 'int'
    |     |   `-ParenExpr 0x14f141858 <col:43, col:54> 'int'
    |     |     `-BinaryOperator 0x14f141838 <col:44, col:50> 'int' '-'
    |     |       |-IntegerLiteral 0x14f128668 <col:44> 'int' 256
    |     |       `-ImplicitCastExpr 0x14f141820 <col:50> 'int' <LValueToRValue>
    |     |         `-DeclRefExpr 0x14f128688 <col:50> 'int' lvalue ParmVar 0x14f1281a8 'prob' 'int'
    |     `-RecoveryExpr 0x14f1418b8 <col:60> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14f141b78 <line:9:3, col:38>
    | |-BinaryOperator 0x14f141998 <col:7, col:18> 'int' contains-errors '<'
    | | |-CXXDependentScopeMemberExpr 0x14f141930 <col:7, col:10> '<dependent type>' contains-errors lvalue ->count
    | | | `-RecoveryExpr 0x14f141910 <col:7> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x14f141978 <col:18> 'int' 0
    | `-CallExpr 0x14f141b50 <col:21, col:38> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14f141b10 <col:21> 'int ()' Function 0x14f141a58 'vpx_reader_fill' 'int ()'
    |   `-RecoveryExpr 0x14f141b30 <col:37> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x14f141c88 <line:12:3, col:14> 'int' contains-errors '='
    | |-DeclRefExpr 0x14f141c00 <col:3> 'int' lvalue Var 0x14f128428 'count' 'int'
    | `-CXXDependentScopeMemberExpr 0x14f141c40 <col:11, col:14> '<dependent type>' contains-errors lvalue ->count
    |   `-RecoveryExpr 0x14f141c20 <col:11> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x14f141d18 <line:16:3, col:11> 'unsigned int' contains-errors '='
    | |-DeclRefExpr 0x14f141cc0 <col:3> 'unsigned int' lvalue Var 0x14f1284c0 'range' 'unsigned int'
    | `-ImplicitCastExpr 0x14f141d00 <col:11> 'unsigned int' contains-errors <LValueToRValue>
    |   `-DeclRefExpr 0x14f141ce0 <col:11> 'unsigned int' contains-errors lvalue Var 0x14f128558 'split' 'unsigned int'
    |-IfStmt 0x14f141fb8 <line:18:3, line:22:3>
    | |-BinaryOperator 0x14f141dc8 <line:18:7, col:16> 'int' contains-errors '>='
    | | |-RecoveryExpr 0x14f141d88 <col:7> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x14f141da8 <col:16> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x14f141f98 <col:26, line:22:3>
    |   |-BinaryOperator 0x14f141eb0 <line:19:5, col:24> 'unsigned int' contains-errors '='
    |   | |-DeclRefExpr 0x14f141de8 <col:5> 'unsigned int' lvalue Var 0x14f1284c0 'range' 'unsigned int'
    |   | `-BinaryOperator 0x14f141e90 <col:13, col:24> '<dependent type>' contains-errors '-'
    |   |   |-CXXDependentScopeMemberExpr 0x14f141e28 <col:13, col:16> '<dependent type>' contains-errors lvalue ->range
    |   |   | `-RecoveryExpr 0x14f141e08 <col:13> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x14f141e70 <col:24> 'unsigned int' contains-errors lvalue Var 0x14f128558 'split' 'unsigned int'
    |   `-BinaryOperator 0x14f141f78 <line:21:5, col:11> 'unsigned int' '='
    |     |-DeclRefExpr 0x14f141f20 <col:5> 'unsigned int' lvalue Var 0x14f128358 'bit' 'unsigned int'
    |     `-ImplicitCastExpr 0x14f141f60 <col:11> 'unsigned int' <IntegralCast>
    |       `-IntegerLiteral 0x14f141f40 <col:11> 'int' 1
    |-CompoundStmt 0x14f1421f0 <line:24:3, line:29:3>
    | |-DeclStmt 0x14f142090 <line:25:5, col:38>
    | | `-VarDecl 0x14f141ff0 <col:5, col:15> col:15 used shift 'const int'
    | |-CompoundAssignOperator 0x14f142118 <line:26:5, col:15> 'unsigned int' '<<=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
    | | |-DeclRefExpr 0x14f1420a8 <col:5> 'unsigned int' lvalue Var 0x14f1284c0 'range' 'unsigned int'
    | | `-ImplicitCastExpr 0x14f142100 <col:15> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x14f1420c8 <col:15> 'const int' lvalue Var 0x14f141ff0 'shift' 'const int'
    | `-CompoundAssignOperator 0x14f1421c0 <line:28:5, col:14> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
    |   |-DeclRefExpr 0x14f142168 <col:5> 'int' lvalue Var 0x14f128428 'count' 'int'
    |   `-ImplicitCastExpr 0x14f1421a8 <col:14> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x14f142188 <col:14> 'const int' lvalue Var 0x14f141ff0 'shift' 'const int'
    |-BinaryOperator 0x14f142300 <line:30:3, col:14> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x14f142260 <col:3, col:6> '<dependent type>' contains-errors lvalue ->value
    | | `-RecoveryExpr 0x14f142238 <col:3> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x14f142218 <col:3> 'int *' lvalue ParmVar 0x14f128128 'r' 'int *'
    | `-RecoveryExpr 0x14f1422e0 <col:14> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x14f1423d0 <line:31:3, col:14> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x14f142368 <col:3, col:6> '<dependent type>' contains-errors lvalue ->count
    | | `-RecoveryExpr 0x14f142340 <col:3> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x14f142320 <col:3> 'int *' lvalue ParmVar 0x14f128128 'r' 'int *'
    | `-DeclRefExpr 0x14f1423b0 <col:14> 'int' lvalue Var 0x14f128428 'count' 'int'
    |-BinaryOperator 0x14f1424a0 <line:32:3, col:14> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x14f142438 <col:3, col:6> '<dependent type>' contains-errors lvalue ->range
    | | `-RecoveryExpr 0x14f142410 <col:3> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x14f1423f0 <col:3> 'int *' lvalue ParmVar 0x14f128128 'r' 'int *'
    | `-DeclRefExpr 0x14f142480 <col:14> 'unsigned int' lvalue Var 0x14f1284c0 'range' 'unsigned int'
    `-ReturnStmt 0x14f142510 <line:34:3, col:10>
      `-ImplicitCastExpr 0x14f1424f8 <col:10> 'int' <IntegralCast>
        `-ImplicitCastExpr 0x14f1424e0 <col:10> 'unsigned int' <LValueToRValue>
          `-DeclRefExpr 0x14f1424c0 <col:10> 'unsigned int' lvalue Var 0x14f128358 'bit' 'unsigned int'
