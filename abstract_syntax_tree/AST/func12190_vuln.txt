TranslationUnitDecl 0x12c055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12c0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12c055bd0 '__int128'
|-TypedefDecl 0x12c056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12c055bf0 'unsigned __int128'
|-TypedefDecl 0x12c126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12c126000 'struct __NSConstantString_tag'
|   `-Record 0x12c056580 '__NSConstantString_tag'
|-TypedefDecl 0x12c126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12c055d90 '__SVInt8_t'
|-TypedefDecl 0x12c126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12c055db0 '__SVInt16_t'
|-TypedefDecl 0x12c126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12c055dd0 '__SVInt32_t'
|-TypedefDecl 0x12c1263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12c055df0 '__SVInt64_t'
|-TypedefDecl 0x12c126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12c055e10 '__SVUint8_t'
|-TypedefDecl 0x12c1264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12c055e30 '__SVUint16_t'
|-TypedefDecl 0x12c126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12c055e50 '__SVUint32_t'
|-TypedefDecl 0x12c126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12c055e70 '__SVUint64_t'
|-TypedefDecl 0x12c1265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12c055e90 '__SVFloat16_t'
|-TypedefDecl 0x12c126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12c055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12c1266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12c055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12c126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12c055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12c126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12c055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12c1267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12c055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12c126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12c055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12c1268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12c055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12c126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12c055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12c126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12c055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12c1269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12c055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12c126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12c055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12c126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12c056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12c126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12c056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12c126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12c056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12c126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12c056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12c126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12c056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12c126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12c0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12c126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12c0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12c126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12c0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12c126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12c056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12c126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12c056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12c126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12c056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12c126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12c056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12c126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12c056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12c127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12c0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12c127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12c0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12c1278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12c0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12c127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12c056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12c1279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12c056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12c127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12c056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12c127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12c056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12c127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12c056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12c127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12c0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12c127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12c0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12c127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12c0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12c127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12c056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12c127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12c056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12c127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12c056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12c127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12c056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12c127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12c056390 '__SVBool_t'
|-TypedefDecl 0x12c127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12c0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12c127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12c0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12c127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12c0563f0 '__SVCount_t'
|-TypedefDecl 0x12c127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12c127fb0 'char *'
|   `-BuiltinType 0x12c0556b0 'char'
|-TypedefDecl 0x12c128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12c127fb0 'char *'
|   `-BuiltinType 0x12c0556b0 'char'
`-FunctionDecl 0x12c140b58 <dataset_diviso_filec/func12190_vuln.c:1:1, line:11:1> line:1:12 chip_write_masked 'int (struct CHIPSTATE *, int, int, int)' static
  |-ParmVarDecl 0x12c128648 <col:30, col:48> col:48 used chip 'struct CHIPSTATE *'
  |-ParmVarDecl 0x12c1286c8 <col:54, col:58> col:58 used subaddr 'int'
  |-ParmVarDecl 0x12c128748 <col:67, col:71> col:71 used val 'int'
  |-ParmVarDecl 0x12c140a00 <col:76, col:80> col:80 used mask 'int'
  `-CompoundStmt 0x12c141628 <line:2:1, line:11:1>
    |-IfStmt 0x12c141380 <line:3:2, line:9:2>
    | |-BinaryOperator 0x12c140cc0 <line:3:6, col:14> 'int' '!='
    | | |-ImplicitCastExpr 0x12c140ca8 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x12c140c68 <col:6> 'int' lvalue ParmVar 0x12c140a00 'mask' 'int'
    | | `-IntegerLiteral 0x12c140c88 <col:14> 'int' 0
    | `-CompoundStmt 0x12c141368 <col:17, line:9:2>
    |   `-IfStmt 0x12c141338 <line:4:3, line:8:3> has_else
    |     |-BinaryOperator 0x12c140d50 <line:4:7, col:13> 'int' '=='
    |     | |-UnaryOperator 0x12c140d00 <col:7, col:8> 'int' prefix '-'
    |     | | `-IntegerLiteral 0x12c140ce0 <col:8> 'int' 1
    |     | `-ImplicitCastExpr 0x12c140d38 <col:13> 'int' <LValueToRValue>
    |     |   `-DeclRefExpr 0x12c140d18 <col:13> 'int' lvalue ParmVar 0x12c1286c8 'subaddr' 'int'
    |     |-CompoundStmt 0x12c141010 <col:22, line:6:3>
    |     | `-BinaryOperator 0x12c140ff0 <line:5:4, col:55> 'int' contains-errors '='
    |     |   |-DeclRefExpr 0x12c140d70 <col:4> 'int' lvalue ParmVar 0x12c128748 'val' 'int'
    |     |   `-BinaryOperator 0x12c140fd0 <col:10, col:55> '<dependent type>' contains-errors '|'
    |     |     |-ParenExpr 0x12c140f00 <col:10, col:40> '<dependent type>' contains-errors
    |     |     | `-BinaryOperator 0x12c140ee0 <col:11, col:36> '<dependent type>' contains-errors '&'
    |     |     |   |-ArraySubscriptExpr 0x12c140e70 <col:11, col:31> '<dependent type>' contains-errors lvalue
    |     |     |   | |-ImplicitCastExpr 0x12c140e58 <col:11, col:24> '<dependent type>' contains-errors <LValueToRValue>
    |     |     |   | | `-CXXDependentScopeMemberExpr 0x12c140df0 <col:11, col:24> '<dependent type>' contains-errors lvalue .bytes
    |     |     |   | |   `-RecoveryExpr 0x12c140dc8 <col:11, col:17> '<dependent type>' contains-errors lvalue
    |     |     |   | |     `-DeclRefExpr 0x12c140d90 <col:11> 'struct CHIPSTATE *' lvalue ParmVar 0x12c128648 'chip' 'struct CHIPSTATE *'
    |     |     |   | `-IntegerLiteral 0x12c140e38 <col:30> 'int' 1
    |     |     |   `-UnaryOperator 0x12c140ec8 <col:35, col:36> 'int' prefix '~' cannot overflow
    |     |     |     `-ImplicitCastExpr 0x12c140eb0 <col:36> 'int' <LValueToRValue>
    |     |     |       `-DeclRefExpr 0x12c140e90 <col:36> 'int' lvalue ParmVar 0x12c140a00 'mask' 'int'
    |     |     `-ParenExpr 0x12c140fb0 <col:44, col:55> 'int'
    |     |       `-BinaryOperator 0x12c140f90 <col:45, col:51> 'int' '&'
    |     |         |-ImplicitCastExpr 0x12c140f60 <col:45> 'int' <LValueToRValue>
    |     |         | `-DeclRefExpr 0x12c140f20 <col:45> 'int' lvalue ParmVar 0x12c128748 'val' 'int'
    |     |         `-ImplicitCastExpr 0x12c140f78 <col:51> 'int' <LValueToRValue>
    |     |           `-DeclRefExpr 0x12c140f40 <col:51> 'int' lvalue ParmVar 0x12c140a00 'mask' 'int'
    |     `-CompoundStmt 0x12c141320 <line:6:10, line:8:3>
    |       `-BinaryOperator 0x12c141300 <line:7:4, col:63> 'int' contains-errors '='
    |         |-DeclRefExpr 0x12c141028 <col:4> 'int' lvalue ParmVar 0x12c128748 'val' 'int'
    |         `-BinaryOperator 0x12c1412e0 <col:10, col:63> '<dependent type>' contains-errors '|'
    |           |-ParenExpr 0x12c141210 <col:10, col:48> '<dependent type>' contains-errors
    |           | `-BinaryOperator 0x12c1411f0 <col:11, col:44> '<dependent type>' contains-errors '&'
    |           |   |-ArraySubscriptExpr 0x12c141180 <col:11, col:39> '<dependent type>' contains-errors lvalue
    |           |   | |-ImplicitCastExpr 0x12c141168 <col:11, col:24> '<dependent type>' contains-errors <LValueToRValue>
    |           |   | | `-CXXDependentScopeMemberExpr 0x12c1410a8 <col:11, col:24> '<dependent type>' contains-errors lvalue .bytes
    |           |   | |   `-RecoveryExpr 0x12c141080 <col:11, col:17> '<dependent type>' contains-errors lvalue
    |           |   | |     `-DeclRefExpr 0x12c141048 <col:11> 'struct CHIPSTATE *' lvalue ParmVar 0x12c128648 'chip' 'struct CHIPSTATE *'
    |           |   | `-BinaryOperator 0x12c141148 <col:30, col:38> 'int' '+'
    |           |   |   |-ImplicitCastExpr 0x12c141130 <col:30> 'int' <LValueToRValue>
    |           |   |   | `-DeclRefExpr 0x12c1410f0 <col:30> 'int' lvalue ParmVar 0x12c1286c8 'subaddr' 'int'
    |           |   |   `-IntegerLiteral 0x12c141110 <col:38> 'int' 1
    |           |   `-UnaryOperator 0x12c1411d8 <col:43, col:44> 'int' prefix '~' cannot overflow
    |           |     `-ImplicitCastExpr 0x12c1411c0 <col:44> 'int' <LValueToRValue>
    |           |       `-DeclRefExpr 0x12c1411a0 <col:44> 'int' lvalue ParmVar 0x12c140a00 'mask' 'int'
    |           `-ParenExpr 0x12c1412c0 <col:52, col:63> 'int'
    |             `-BinaryOperator 0x12c1412a0 <col:53, col:59> 'int' '&'
    |               |-ImplicitCastExpr 0x12c141270 <col:53> 'int' <LValueToRValue>
    |               | `-DeclRefExpr 0x12c141230 <col:53> 'int' lvalue ParmVar 0x12c128748 'val' 'int'
    |               `-ImplicitCastExpr 0x12c141288 <col:59> 'int' <LValueToRValue>
    |                 `-DeclRefExpr 0x12c141250 <col:59> 'int' lvalue ParmVar 0x12c140a00 'mask' 'int'
    `-ReturnStmt 0x12c141618 <line:10:2, col:38>
      `-CallExpr 0x12c141598 <col:9, col:38> 'int'
        |-ImplicitCastExpr 0x12c141580 <col:9> 'int (*)()' <FunctionToPointerDecay>
        | `-DeclRefExpr 0x12c1414d0 <col:9> 'int ()' Function 0x12c141418 'chip_write' 'int ()'
        |-ImplicitCastExpr 0x12c1415d0 <col:20> 'struct CHIPSTATE *' <LValueToRValue>
        | `-DeclRefExpr 0x12c1414f0 <col:20> 'struct CHIPSTATE *' lvalue ParmVar 0x12c128648 'chip' 'struct CHIPSTATE *'
        |-ImplicitCastExpr 0x12c1415e8 <col:26> 'int' <LValueToRValue>
        | `-DeclRefExpr 0x12c141510 <col:26> 'int' lvalue ParmVar 0x12c1286c8 'subaddr' 'int'
        `-ImplicitCastExpr 0x12c141600 <col:35> 'int' <LValueToRValue>
          `-DeclRefExpr 0x12c141530 <col:35> 'int' lvalue ParmVar 0x12c128748 'val' 'int'
