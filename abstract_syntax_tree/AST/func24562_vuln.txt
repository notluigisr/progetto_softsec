TranslationUnitDecl 0x14a829008 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14a829eb8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14a8295d0 '__int128'
|-TypedefDecl 0x14a829f28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14a8295f0 'unsigned __int128'
|-TypedefDecl 0x14a8fa630 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14a8fa400 'struct __NSConstantString_tag'
|   `-Record 0x14a829f80 '__NSConstantString_tag'
|-TypedefDecl 0x14a8fa698 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14a829790 '__SVInt8_t'
|-TypedefDecl 0x14a8fa700 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14a8297b0 '__SVInt16_t'
|-TypedefDecl 0x14a8fa768 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14a8297d0 '__SVInt32_t'
|-TypedefDecl 0x14a8fa7d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14a8297f0 '__SVInt64_t'
|-TypedefDecl 0x14a8fa838 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14a829810 '__SVUint8_t'
|-TypedefDecl 0x14a8fa8a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14a829830 '__SVUint16_t'
|-TypedefDecl 0x14a8fa908 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14a829850 '__SVUint32_t'
|-TypedefDecl 0x14a8fa970 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14a829870 '__SVUint64_t'
|-TypedefDecl 0x14a8fa9d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14a829890 '__SVFloat16_t'
|-TypedefDecl 0x14a8faa40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14a8298b0 '__SVFloat32_t'
|-TypedefDecl 0x14a8faaa8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14a8298d0 '__SVFloat64_t'
|-TypedefDecl 0x14a8fab10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14a8298f0 '__SVBfloat16_t'
|-TypedefDecl 0x14a8fab78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14a829910 '__clang_svint8x2_t'
|-TypedefDecl 0x14a8fabe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14a829930 '__clang_svint16x2_t'
|-TypedefDecl 0x14a8fac48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14a829950 '__clang_svint32x2_t'
|-TypedefDecl 0x14a8facb0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14a829970 '__clang_svint64x2_t'
|-TypedefDecl 0x14a8fad18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14a829990 '__clang_svuint8x2_t'
|-TypedefDecl 0x14a8fad80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14a8299b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14a8fade8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14a8299d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14a8fae50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14a8299f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14a8faeb8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14a829a10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14a8faf20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14a829a30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14a8faf88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14a829a50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14a8faff0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14a829a70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14a8fb058 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14a829a90 '__clang_svint8x3_t'
|-TypedefDecl 0x14a8fb0c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14a829ab0 '__clang_svint16x3_t'
|-TypedefDecl 0x14a8fb128 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14a829ad0 '__clang_svint32x3_t'
|-TypedefDecl 0x14a8fb190 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14a829af0 '__clang_svint64x3_t'
|-TypedefDecl 0x14a8fb1f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14a829b10 '__clang_svuint8x3_t'
|-TypedefDecl 0x14a8fb260 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14a829b30 '__clang_svuint16x3_t'
|-TypedefDecl 0x14a8fb2c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14a829b50 '__clang_svuint32x3_t'
|-TypedefDecl 0x14a8fb330 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14a829b70 '__clang_svuint64x3_t'
|-TypedefDecl 0x14a8fb398 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14a829b90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14a8fbc00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14a829bb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14a8fbc68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14a829bd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14a8fbcd0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14a829bf0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14a8fbd38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14a829c10 '__clang_svint8x4_t'
|-TypedefDecl 0x14a8fbda0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14a829c30 '__clang_svint16x4_t'
|-TypedefDecl 0x14a8fbe08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14a829c50 '__clang_svint32x4_t'
|-TypedefDecl 0x14a8fbe70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14a829c70 '__clang_svint64x4_t'
|-TypedefDecl 0x14a8fbed8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14a829c90 '__clang_svuint8x4_t'
|-TypedefDecl 0x14a8fbf40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14a829cb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14a8fbfa8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14a829cd0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14a8fc010 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14a829cf0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14a8fc078 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14a829d10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14a8fc0e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14a829d30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14a8fc148 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14a829d50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14a8fc1b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14a829d70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14a8fc218 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14a829d90 '__SVBool_t'
|-TypedefDecl 0x14a8fc280 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14a829db0 '__clang_svboolx2_t'
|-TypedefDecl 0x14a8fc2e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14a829dd0 '__clang_svboolx4_t'
|-TypedefDecl 0x14a8fc350 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14a829df0 '__SVCount_t'
|-TypedefDecl 0x14a8fc3f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14a8fc3b0 'char *'
|   `-BuiltinType 0x14a8290b0 'char'
|-TypedefDecl 0x14a8fc468 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14a8fc3b0 'char *'
|   `-BuiltinType 0x14a8290b0 'char'
`-FunctionDecl 0x14a915df8 <dataset_diviso_filec/func24562_vuln.c:1:1, line:70:1> line:1:12 invalid rm_rf_children_inner 'int (int, const char *, int, int, const struct stat *)' static
  |-ParmVarDecl 0x14a8fc4d8 <line:2:17, col:21> col:21 used fd 'int'
  |-ParmVarDecl 0x14a8fc558 <line:3:17, col:29> col:29 used fname 'const char *'
  |-ParmVarDecl 0x14a8fc5d8 <line:4:17, col:21> col:21 used is_dir 'int'
  |-ParmVarDecl 0x14a8fc670 <line:5:17, col:29> col:29 invalid flags 'int'
  |-ParmVarDecl 0x14a915c88 <line:6:17, col:36> col:36 used root_dev 'const struct stat *'
  `-CompoundStmt 0x14a917ee8 <col:46, line:70:1>
    |-DeclStmt 0x14a915f88 <line:8:9, col:23>
    | `-VarDecl 0x14a915f20 <col:9, col:21> col:21 invalid st 'struct stat'
    |-DeclStmt 0x14a9160d8 <line:9:9, col:21>
    | |-VarDecl 0x14a915fb8 <col:9, col:13> col:13 used r 'int'
    | `-VarDecl 0x14a916038 <col:9, col:20> col:16 used q 'int' cinit
    |   `-IntegerLiteral 0x14a9160a0 <col:20> 'int' 0
    |-CallExpr 0x14a916338 <line:11:9, col:23> 'int'
    | |-ImplicitCastExpr 0x14a916320 <col:9> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x14a916250 <col:9> 'int ()' Function 0x14a916198 'assert' 'int ()'
    | `-BinaryOperator 0x14a9162c8 <col:16, col:22> 'int' '>='
    |   |-ImplicitCastExpr 0x14a9162b0 <col:16> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x14a916270 <col:16> 'int' lvalue ParmVar 0x14a8fc4d8 'fd' 'int'
    |   `-IntegerLiteral 0x14a916290 <col:22> 'int' 0
    |-CallExpr 0x14a9163b8 <line:12:9, col:21> 'int'
    | |-ImplicitCastExpr 0x14a9163a0 <col:9> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x14a916360 <col:9> 'int ()' Function 0x14a916198 'assert' 'int ()'
    | `-ImplicitCastExpr 0x14a9163e0 <col:16> 'const char *' <LValueToRValue>
    |   `-DeclRefExpr 0x14a916380 <col:16> 'const char *' lvalue ParmVar 0x14a8fc558 'fname' 'const char *'
    |-IfStmt 0x14a916b70 <line:14:9, line:23:9>
    | |-RecoveryExpr 0x14a9165b8 <line:14:13, line:16:68> '_Bool' contains-errors
    | `-CompoundStmt 0x14a916b48 <col:71, line:23:9>
    |   |-BinaryOperator 0x14a916878 <line:18:17, col:78> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x14a9165d8 <col:17> 'int' lvalue Var 0x14a915fb8 'r' 'int'
    |   | `-CallExpr 0x14a916830 <col:21, col:78> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x14a9166d8 <col:21> 'int ()' Function 0x14a916620 'fstatat_harder' 'int ()'
    |   |   |-DeclRefExpr 0x14a9166f8 <col:36> 'int' lvalue ParmVar 0x14a8fc4d8 'fd' 'int'
    |   |   |-DeclRefExpr 0x14a916718 <col:40> 'const char *' lvalue ParmVar 0x14a8fc558 'fname' 'const char *'
    |   |   |-UnaryOperator 0x14a916758 <col:47, col:48> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   | `-RecoveryExpr 0x14a916738 <col:48> '<dependent type>' contains-errors lvalue
    |   |   |-RecoveryExpr 0x14a916810 <col:52> '<dependent type>' contains-errors lvalue
    |   |   `-RecoveryExpr 0x14a916788 <col:73> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x14a916958 <line:19:17, line:20:32>
    |   | |-BinaryOperator 0x14a9168f0 <line:19:21, col:25> 'int' '<'
    |   | | |-ImplicitCastExpr 0x14a9168d8 <col:21> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x14a916898 <col:21> 'int' lvalue Var 0x14a915fb8 'r' 'int'
    |   | | `-IntegerLiteral 0x14a9168b8 <col:25> 'int' 0
    |   | `-ReturnStmt 0x14a916948 <line:20:25, col:32>
    |   |   `-ImplicitCastExpr 0x14a916930 <col:32> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x14a916910 <col:32> 'int' lvalue Var 0x14a915fb8 'r' 'int'
    |   `-BinaryOperator 0x14a916b28 <line:22:17, col:44> 'int' contains-errors '='
    |     |-DeclRefExpr 0x14a916978 <col:17> 'int' lvalue ParmVar 0x14a8fc5d8 'is_dir' 'int'
    |     `-CallExpr 0x14a916b00 <col:26, col:44> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x14a916a78 <col:26> 'int ()' Function 0x14a9169c0 'S_ISDIR' 'int ()'
    |       `-CXXDependentScopeMemberExpr 0x14a916ab8 <col:34, col:37> '<dependent type>' contains-errors lvalue .st_mode
    |         `-RecoveryExpr 0x14a916a98 <col:34> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14a917b08 <line:25:9, line:62:24> has_else
    | |-ImplicitCastExpr 0x14a916bb0 <line:25:13> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x14a916b90 <col:13> 'int' lvalue ParmVar 0x14a8fc5d8 'is_dir' 'int'
    | |-CompoundStmt 0x14a917a40 <col:21, line:61:9>
    | | |-IfStmt 0x14b008d38 <line:29:17, line:30:32>
    | | | |-BinaryOperator 0x14b008ce8 <line:29:21, col:56> 'int' contains-errors '&&'
    | | | | |-DeclRefExpr 0x14a916bc8 <col:21> 'const struct stat *' lvalue ParmVar 0x14a915c88 'root_dev' 'const struct stat *'
    | | | | `-BinaryOperator 0x14b008cc8 <col:33, col:56> 'int' contains-errors '!='
    | | | |   |-CXXDependentScopeMemberExpr 0x14b008c20 <col:33, col:36> '<dependent type>' contains-errors lvalue .st_dev
    | | | |   | `-RecoveryExpr 0x14b008c00 <col:33> '<dependent type>' contains-errors lvalue
    | | | |   `-RecoveryExpr 0x14b008ca0 <col:46, col:56> '<dependent type>' contains-errors lvalue
    | | | |     `-DeclRefExpr 0x14b008c68 <col:46> 'const struct stat *' lvalue ParmVar 0x14a915c88 'root_dev' 'const struct stat *'
    | | | `-ReturnStmt 0x14b008d28 <line:30:25, col:32>
    | | |   `-IntegerLiteral 0x14b008d08 <col:32> 'int' 0
    | | |-BinaryOperator 0x14b008f58 <line:33:17, col:51> 'int' '='
    | | | |-DeclRefExpr 0x14b008d58 <col:17> 'int' lvalue Var 0x14a915fb8 'r' 'int'
    | | | `-CallExpr 0x14b008ef0 <col:21, col:51> 'int'
    | | |   |-ImplicitCastExpr 0x14b008ed8 <col:21> 'int (*)()' <FunctionToPointerDecay>
    | | |   | `-DeclRefExpr 0x14b008e58 <col:21> 'int ()' Function 0x14b008da0 'fd_is_mount_point' 'int ()'
    | | |   |-ImplicitCastExpr 0x14b008f28 <col:39> 'int' <LValueToRValue>
    | | |   | `-DeclRefExpr 0x14b008e78 <col:39> 'int' lvalue ParmVar 0x14a8fc4d8 'fd' 'int'
    | | |   |-ImplicitCastExpr 0x14b008f40 <col:43> 'const char *' <LValueToRValue>
    | | |   | `-DeclRefExpr 0x14b008e98 <col:43> 'const char *' lvalue ParmVar 0x14a8fc558 'fname' 'const char *'
    | | |   `-IntegerLiteral 0x14b008eb8 <col:50> 'int' 0
    | | |-IfStmt 0x14b009038 <line:34:17, line:35:32>
    | | | |-BinaryOperator 0x14b008fd0 <line:34:21, col:25> 'int' '<'
    | | | | |-ImplicitCastExpr 0x14b008fb8 <col:21> 'int' <LValueToRValue>
    | | | | | `-DeclRefExpr 0x14b008f78 <col:21> 'int' lvalue Var 0x14a915fb8 'r' 'int'
    | | | | `-IntegerLiteral 0x14b008f98 <col:25> 'int' 0
    | | | `-ReturnStmt 0x14b009028 <line:35:25, col:32>
    | | |   `-ImplicitCastExpr 0x14b009010 <col:32> 'int' <LValueToRValue>
    | | |     `-DeclRefExpr 0x14b008ff0 <col:32> 'int' lvalue Var 0x14a915fb8 'r' 'int'
    | | |-IfStmt 0x14b009100 <line:36:17, line:37:32>
    | | | |-BinaryOperator 0x14b0090b0 <line:36:21, col:25> 'int' '>'
    | | | | |-ImplicitCastExpr 0x14b009098 <col:21> 'int' <LValueToRValue>
    | | | | | `-DeclRefExpr 0x14b009058 <col:21> 'int' lvalue Var 0x14a915fb8 'r' 'int'
    | | | | `-IntegerLiteral 0x14b009078 <col:25> 'int' 0
    | | | `-ReturnStmt 0x14b0090f0 <line:37:25, col:32>
    | | |   `-IntegerLiteral 0x14b0090d0 <col:32> 'int' 0
    | | `-IfStmt 0x14b009a20 <line:39:17, line:52:17>
    | |   |-RecoveryExpr 0x14b0092d8 <line:39:21, col:76> '_Bool' contains-errors
    | |   `-CompoundStmt 0x14b009a00 <col:79, line:52:17>
    | |     |-BinaryOperator 0x14b009598 <line:43:25, col:104> 'int' contains-errors '='
    | |     | |-DeclRefExpr 0x14b0092f8 <col:25> 'int' lvalue Var 0x14a915fb8 'r' 'int'
    | |     | `-CallExpr 0x14b009560 <col:29, col:104> '<dependent type>' contains-errors
    | |     |   |-DeclRefExpr 0x14b0093f8 <col:29> 'int ()' Function 0x14b009340 'btrfs_subvol_remove_fd' 'int ()'
    | |     |   |-DeclRefExpr 0x14b009418 <col:52> 'int' lvalue ParmVar 0x14a8fc4d8 'fd' 'int'
    | |     |   |-DeclRefExpr 0x14b009438 <col:56> 'const char *' lvalue ParmVar 0x14a8fc558 'fname' 'const char *'
    | |     |   `-BinaryOperator 0x14b009540 <col:63, col:86> '<dependent type>' contains-errors '|'
    | |     |     |-RecoveryExpr 0x14b009500 <col:63> '<dependent type>' contains-errors lvalue
    | |     |     `-RecoveryExpr 0x14b009520 <col:86> '<dependent type>' contains-errors lvalue
    | |     `-IfStmt 0x14b0099d0 <line:44:25, line:51:40> has_else
    | |       |-BinaryOperator 0x14b009610 <line:44:29, col:33> 'int' '<'
    | |       | |-ImplicitCastExpr 0x14b0095f8 <col:29> 'int' <LValueToRValue>
    | |       | | `-DeclRefExpr 0x14b0095b8 <col:29> 'int' lvalue Var 0x14a915fb8 'r' 'int'
    | |       | `-IntegerLiteral 0x14b0095d8 <col:33> 'int' 0
    | |       |-CompoundStmt 0x14b009988 <col:36, line:49:25>
    | |       | `-IfStmt 0x14b009968 <line:45:33, line:46:48>
    | |       |   |-UnaryOperator 0x14b009908 <line:45:37, col:64> '<dependent type>' contains-errors prefix '!' cannot overflow
    | |       |   | `-CallExpr 0x14b0098d0 <col:38, col:64> '<dependent type>' contains-errors
    | |       |   |   |-DeclRefExpr 0x14b009710 <col:38> 'int ()' Function 0x14b009658 'IN_SET' 'int ()'
    | |       |   |   |-DeclRefExpr 0x14b009730 <col:45> 'int' lvalue Var 0x14a915fb8 'r' 'int'
    | |       |   |   |-UnaryOperator 0x14b009868 <col:48, col:49> '<dependent type>' contains-errors prefix '-' cannot overflow
    | |       |   |   | `-ImplicitCastExpr 0x14b009850 <col:49> '<dependent type>' contains-errors <LValueToRValue>
    | |       |   |   |   `-RecoveryExpr 0x14b009830 <col:49> '<dependent type>' contains-errors lvalue
    | |       |   |   `-UnaryOperator 0x14b0098b8 <col:57, col:58> '<dependent type>' contains-errors prefix '-' cannot overflow
    | |       |   |     `-ImplicitCastExpr 0x14b0098a0 <col:58> '<dependent type>' contains-errors <LValueToRValue>
    | |       |   |       `-RecoveryExpr 0x14b009880 <col:58> '<dependent type>' contains-errors lvalue
    | |       |   `-ReturnStmt 0x14b009958 <line:46:41, col:48>
    | |       |     `-ImplicitCastExpr 0x14b009940 <col:48> 'int' <LValueToRValue>
    | |       |       `-DeclRefExpr 0x14b009920 <col:48> 'int' lvalue Var 0x14a915fb8 'r' 'int'
    | |       `-ReturnStmt 0x14b0099c0 <line:51:33, col:40>
    | |         `-IntegerLiteral 0x14b0099a0 <col:40> 'int' 1
    | `-IfStmt 0x14a917ae8 <line:61:16, line:62:24>
    |   |-RecoveryExpr 0x14a917a98 <line:61:20, col:28> '_Bool' contains-errors
    |   `-ReturnStmt 0x14a917ad8 <line:62:17, col:24>
    |     `-IntegerLiteral 0x14a917ab8 <col:24> 'int' 0
    |-IfStmt 0x14a917db8 <line:65:9, line:66:24>
    | |-BinaryOperator 0x14a917d50 <line:65:13, col:17> 'int' '<'
    | | |-ImplicitCastExpr 0x14a917d38 <col:13> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x14a917cf8 <col:13> 'int' lvalue Var 0x14a915fb8 'r' 'int'
    | | `-IntegerLiteral 0x14a917d18 <col:17> 'int' 0
    | `-ReturnStmt 0x14a917da8 <line:66:17, col:24>
    |   `-ImplicitCastExpr 0x14a917d90 <col:24> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x14a917d70 <col:24> 'int' lvalue Var 0x14a915fb8 'r' 'int'
    |-IfStmt 0x14a917e98 <line:67:9, line:68:24>
    | |-BinaryOperator 0x14a917e30 <line:67:13, col:17> 'int' '<'
    | | |-ImplicitCastExpr 0x14a917e18 <col:13> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x14a917dd8 <col:13> 'int' lvalue Var 0x14a916038 'q' 'int'
    | | `-IntegerLiteral 0x14a917df8 <col:17> 'int' 0
    | `-ReturnStmt 0x14a917e88 <line:68:17, col:24>
    |   `-ImplicitCastExpr 0x14a917e70 <col:24> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x14a917e50 <col:24> 'int' lvalue Var 0x14a916038 'q' 'int'
    `-ReturnStmt 0x14a917ed8 <line:69:9, col:16>
      `-IntegerLiteral 0x14a917eb8 <col:16> 'int' 1
