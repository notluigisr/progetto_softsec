TranslationUnitDecl 0x12a855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12a8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12a855bd0 '__int128'
|-TypedefDecl 0x12a856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12a855bf0 'unsigned __int128'
|-TypedefDecl 0x12a926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12a926000 'struct __NSConstantString_tag'
|   `-Record 0x12a856580 '__NSConstantString_tag'
|-TypedefDecl 0x12a926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12a855d90 '__SVInt8_t'
|-TypedefDecl 0x12a926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12a855db0 '__SVInt16_t'
|-TypedefDecl 0x12a926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12a855dd0 '__SVInt32_t'
|-TypedefDecl 0x12a9263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12a855df0 '__SVInt64_t'
|-TypedefDecl 0x12a926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12a855e10 '__SVUint8_t'
|-TypedefDecl 0x12a9264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12a855e30 '__SVUint16_t'
|-TypedefDecl 0x12a926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12a855e50 '__SVUint32_t'
|-TypedefDecl 0x12a926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12a855e70 '__SVUint64_t'
|-TypedefDecl 0x12a9265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12a855e90 '__SVFloat16_t'
|-TypedefDecl 0x12a926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12a855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12a9266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12a855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12a926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12a855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12a926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12a855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12a9267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12a855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12a926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12a855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12a9268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12a855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12a926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12a855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12a926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12a855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12a9269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12a855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12a926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12a855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12a926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12a856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12a926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12a856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12a926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12a856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12a926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12a856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12a926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12a856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12a926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12a8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12a926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12a8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12a926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12a8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12a926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12a856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12a926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12a856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12a926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12a856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12a926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12a856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12a926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12a856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12a927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12a8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12a927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12a8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12a9278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12a8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12a927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12a856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12a9279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12a856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12a927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12a856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12a927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12a856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12a927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12a856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12a927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12a8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12a927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12a8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12a927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12a8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12a927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12a856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12a927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12a856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12a927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12a856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12a927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12a856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12a927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12a856390 '__SVBool_t'
|-TypedefDecl 0x12a927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12a8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12a927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12a8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12a927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12a8563f0 '__SVCount_t'
|-TypedefDecl 0x12a927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12a927fb0 'char *'
|   `-BuiltinType 0x12a8556b0 'char'
|-TypedefDecl 0x12a928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12a927fb0 'char *'
|   `-BuiltinType 0x12a8556b0 'char'
`-FunctionDecl 0x12a928318 <dataset_diviso_filec/func6582_nonvuln.c:1:1, line:56:1> line:1:1 invalid ngx_mail_auth_plain 'int (int *, int *, int)'
  |-ParmVarDecl 0x12a928128 <col:21, col:41> col:41 referenced invalid s 'int *'
  |-ParmVarDecl 0x12a9281a8 <col:44, col:62> col:62 invalid c 'int *'
  |-ParmVarDecl 0x12a928228 <col:65, col:76> col:76 invalid n 'int'
  `-CompoundStmt 0x12a9434c0 <line:2:1, line:56:1>
    |-DeclStmt 0x12a9284f0 <line:3:5, col:25>
    | |-VarDecl 0x12a9283f0 <col:5, col:17> col:17 used p 'char *'
    | `-VarDecl 0x12a928470 <col:5, col:21> col:21 used last 'char *'
    |-IfStmt 0x12a941ab0 <line:14:5, line:16:5>
    | |-BinaryOperator 0x12a941a30 <line:14:9, col:23> 'int' contains-errors '=='
    | | |-CXXDependentScopeMemberExpr 0x12a9419c8 <col:9, col:15> '<dependent type>' contains-errors lvalue .data
    | | | `-RecoveryExpr 0x12a9419a8 <col:9> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x12a941a10 <col:23> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x12a941a98 <col:29, line:16:5>
    |   `-ReturnStmt 0x12a941a88 <line:15:9, col:16>
    |     `-RecoveryExpr 0x12a941a68 <col:16> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12a941e70 <line:18:5, line:22:5>
    | |-RecoveryExpr 0x12a941c50 <line:18:9, col:47> '_Bool' contains-errors
    | `-CompoundStmt 0x12a941e60 <col:55, line:22:5>
    |-WhileStmt 0x12a942030 <line:27:5, col:33>
    | |-BinaryOperator 0x12a942000 <col:12, col:26> 'int' '&&'
    | | |-BinaryOperator 0x12a941f60 <col:12, col:16> 'int' '<'
    | | | |-ImplicitCastExpr 0x12a941f30 <col:12> 'char *' <LValueToRValue>
    | | | | `-DeclRefExpr 0x12a941ef0 <col:12> 'char *' lvalue Var 0x12a9283f0 'p' 'char *'
    | | | `-ImplicitCastExpr 0x12a941f48 <col:16> 'char *' <LValueToRValue>
    | | |   `-DeclRefExpr 0x12a941f10 <col:16> 'char *' lvalue Var 0x12a928470 'last' 'char *'
    | | `-ImplicitCastExpr 0x12a941fe8 <col:24, col:26> 'int' <IntegralCast>
    | |   `-ImplicitCastExpr 0x12a941fd0 <col:24, col:26> 'char' <LValueToRValue>
    | |     `-UnaryOperator 0x12a941fb8 <col:24, col:26> 'char' lvalue prefix '*' cannot overflow
    | |       `-UnaryOperator 0x12a941fa0 <col:25, col:26> 'char *' postfix '++'
    | |         `-DeclRefExpr 0x12a941f80 <col:25> 'char *' lvalue Var 0x12a9283f0 'p' 'char *'
    | `-CompoundStmt 0x12a942020 <col:30, col:33>
    |-IfStmt 0x12a9421b8 <line:29:5, line:33:5>
    | |-BinaryOperator 0x12a9420c0 <line:29:9, col:14> 'int' '=='
    | | |-ImplicitCastExpr 0x12a942090 <col:9> 'char *' <LValueToRValue>
    | | | `-DeclRefExpr 0x12a942050 <col:9> 'char *' lvalue Var 0x12a9283f0 'p' 'char *'
    | | `-ImplicitCastExpr 0x12a9420a8 <col:14> 'char *' <LValueToRValue>
    | |   `-DeclRefExpr 0x12a942070 <col:14> 'char *' lvalue Var 0x12a928470 'last' 'char *'
    | `-CompoundStmt 0x12a9421a8 <col:20, line:33:5>
    |-BinaryOperator 0x12a9422d0 <line:35:5, col:21> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x12a942268 <col:5, col:14> '<dependent type>' contains-errors lvalue .data
    | | `-CXXDependentScopeMemberExpr 0x12a942220 <col:5, col:8> '<dependent type>' contains-errors lvalue ->login
    | |   `-RecoveryExpr 0x12a9421f8 <col:5> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x12a9421d8 <col:5> 'int *' lvalue ParmVar 0x12a928128 's' 'int *'
    | `-DeclRefExpr 0x12a9422b0 <col:21> 'char *' lvalue Var 0x12a9283f0 'p' 'char *'
    |-WhileStmt 0x12a942470 <line:37:5, col:35>
    | |-BinaryOperator 0x12a942400 <col:12, col:25> 'int' '&&'
    | | |-BinaryOperator 0x12a942360 <col:12, col:16> 'int' '<'
    | | | |-ImplicitCastExpr 0x12a942330 <col:12> 'char *' <LValueToRValue>
    | | | | `-DeclRefExpr 0x12a9422f0 <col:12> 'char *' lvalue Var 0x12a9283f0 'p' 'char *'
    | | | `-ImplicitCastExpr 0x12a942348 <col:16> 'char *' <LValueToRValue>
    | | |   `-DeclRefExpr 0x12a942310 <col:16> 'char *' lvalue Var 0x12a928470 'last' 'char *'
    | | `-ImplicitCastExpr 0x12a9423e8 <col:24, col:25> 'int' <IntegralCast>
    | |   `-ImplicitCastExpr 0x12a9423d0 <col:24, col:25> 'char' <LValueToRValue>
    | |     `-UnaryOperator 0x12a9423b8 <col:24, col:25> 'char' lvalue prefix '*' cannot overflow
    | |       `-ImplicitCastExpr 0x12a9423a0 <col:25> 'char *' <LValueToRValue>
    | |         `-DeclRefExpr 0x12a942380 <col:25> 'char *' lvalue Var 0x12a9283f0 'p' 'char *'
    | `-CompoundStmt 0x12a942458 <col:28, col:35>
    |   `-UnaryOperator 0x12a942440 <col:30, col:31> 'char *' postfix '++'
    |     `-DeclRefExpr 0x12a942420 <col:30> 'char *' lvalue Var 0x12a9283f0 'p' 'char *'
    |-IfStmt 0x12a9425f8 <line:39:5, line:43:5>
    | |-BinaryOperator 0x12a942500 <line:39:9, col:14> 'int' '=='
    | | |-ImplicitCastExpr 0x12a9424d0 <col:9> 'char *' <LValueToRValue>
    | | | `-DeclRefExpr 0x12a942490 <col:9> 'char *' lvalue Var 0x12a9283f0 'p' 'char *'
    | | `-ImplicitCastExpr 0x12a9424e8 <col:14> 'char *' <LValueToRValue>
    | |   `-DeclRefExpr 0x12a9424b0 <col:14> 'char *' lvalue Var 0x12a928470 'last' 'char *'
    | `-CompoundStmt 0x12a9425e8 <col:20, line:43:5>
    |-BinaryOperator 0x12a943200 <line:45:5, col:35> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x12a9426a8 <col:5, col:14> '<dependent type>' contains-errors lvalue .len
    | | `-CXXDependentScopeMemberExpr 0x12a942660 <col:5, col:8> '<dependent type>' contains-errors lvalue ->login
    | |   `-RecoveryExpr 0x12a942638 <col:5> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x12a942618 <col:5> 'int *' lvalue ParmVar 0x12a928128 's' 'int *'
    | `-BinaryOperator 0x12a9427d8 <col:20, col:35> '<dependent type>' contains-errors '-'
    |   |-UnaryOperator 0x12a942710 <col:20, col:21> 'char *' postfix '++'
    |   | `-DeclRefExpr 0x12a9426f0 <col:20> 'char *' lvalue Var 0x12a9283f0 'p' 'char *'
    |   `-CXXDependentScopeMemberExpr 0x12a942790 <col:26, col:35> '<dependent type>' contains-errors lvalue .data
    |     `-CXXDependentScopeMemberExpr 0x12a942748 <col:26, col:29> '<dependent type>' contains-errors lvalue ->login
    |       `-RecoveryExpr 0x12a942728 <col:26> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x12a943388 <line:47:5, col:28> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x12a9432b0 <col:5, col:15> '<dependent type>' contains-errors lvalue .len
    | | `-CXXDependentScopeMemberExpr 0x12a943268 <col:5, col:8> '<dependent type>' contains-errors lvalue ->passwd
    | |   `-RecoveryExpr 0x12a943240 <col:5> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x12a943220 <col:5> 'int *' lvalue ParmVar 0x12a928128 's' 'int *'
    | `-BinaryOperator 0x12a943368 <col:21, col:28> 'long' '-'
    |   |-ImplicitCastExpr 0x12a943338 <col:21> 'char *' <LValueToRValue>
    |   | `-DeclRefExpr 0x12a9432f8 <col:21> 'char *' lvalue Var 0x12a928470 'last' 'char *'
    |   `-ImplicitCastExpr 0x12a943350 <col:28> 'char *' <LValueToRValue>
    |     `-DeclRefExpr 0x12a943318 <col:28> 'char *' lvalue Var 0x12a9283f0 'p' 'char *'
    `-BinaryOperator 0x12a9434a0 <line:48:5, col:22> '<dependent type>' contains-errors '='
      |-CXXDependentScopeMemberExpr 0x12a943438 <col:5, col:15> '<dependent type>' contains-errors lvalue .data
      | `-CXXDependentScopeMemberExpr 0x12a9433f0 <col:5, col:8> '<dependent type>' contains-errors lvalue ->passwd
      |   `-RecoveryExpr 0x12a9433c8 <col:5> '<dependent type>' contains-errors lvalue
      |     `-DeclRefExpr 0x12a9433a8 <col:5> 'int *' lvalue ParmVar 0x12a928128 's' 'int *'
      `-DeclRefExpr 0x12a943480 <col:22> 'char *' lvalue Var 0x12a9283f0 'p' 'char *'
