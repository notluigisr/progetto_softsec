TranslationUnitDecl 0x123055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1230564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x123055bd0 '__int128'
|-TypedefDecl 0x123056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x123055bf0 'unsigned __int128'
|-TypedefDecl 0x12380be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12380bc00 'struct __NSConstantString_tag'
|   `-Record 0x123056580 '__NSConstantString_tag'
|-TypedefDecl 0x12380be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x123055d90 '__SVInt8_t'
|-TypedefDecl 0x12380bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x123055db0 '__SVInt16_t'
|-TypedefDecl 0x12380bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x123055dd0 '__SVInt32_t'
|-TypedefDecl 0x12380bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x123055df0 '__SVInt64_t'
|-TypedefDecl 0x12380c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x123055e10 '__SVUint8_t'
|-TypedefDecl 0x12380c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x123055e30 '__SVUint16_t'
|-TypedefDecl 0x12380c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x123055e50 '__SVUint32_t'
|-TypedefDecl 0x12380c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x123055e70 '__SVUint64_t'
|-TypedefDecl 0x12380c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x123055e90 '__SVFloat16_t'
|-TypedefDecl 0x12380c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x123055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12380c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x123055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12380c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x123055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12380c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x123055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12380c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x123055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12380c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x123055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12380c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x123055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12380c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x123055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12380c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x123055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12380c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x123055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12380c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x123055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12380c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x123056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12380c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x123056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12380c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x123056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12380c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x123056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12380c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x123056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12380c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1230560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12380c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1230560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12380c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1230560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12380c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x123056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12380ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x123056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12380cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x123056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12380cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x123056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12380cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x123056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12380d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1230561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12380d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1230561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12380d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1230561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12380d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x123056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12380d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x123056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12380d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x123056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12380d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x123056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12380d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x123056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12380d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1230562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12380d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1230562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12380d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1230562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12380d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x123056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12380d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x123056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12380d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x123056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12380d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x123056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12380da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x123056390 '__SVBool_t'
|-TypedefDecl 0x12380da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1230563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12380dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1230563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12380db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1230563f0 '__SVCount_t'
|-TypedefDecl 0x12380dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12380dbb0 'char *'
|   `-BuiltinType 0x1230556b0 'char'
|-TypedefDecl 0x12380dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12380dbb0 'char *'
|   `-BuiltinType 0x1230556b0 'char'
|-FunctionDecl 0x12380e358 <dataset_diviso_filec/func10518_vuln.c:1:1, line:23:1> line:1:1 validate_group 'int (struct perf_event *)'
| |-ParmVarDecl 0x12380e248 <col:16, col:35> col:35 used event 'struct perf_event *'
| `-CompoundStmt 0x123122830 <line:2:1, line:23:1>
|   |-DeclStmt 0x123826848 <line:3:2, col:59>
|   | |-VarDecl 0x1238266d8 <col:2, col:21> col:21 used sibling 'struct perf_event *'
|   | `-VarDecl 0x123826768 <col:2, col:47> col:31 used leader 'struct perf_event *' cinit
|   |   `-RecoveryExpr 0x123826808 <col:40, col:47> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x1238267d0 <col:40> 'struct perf_event *' lvalue ParmVar 0x12380e248 'event' 'struct perf_event *'
|   |-DeclStmt 0x1238269d8 <line:4:2, col:31>
|   | |-RecordDecl 0x123826860 <col:2, col:9> col:9 struct pmu_hw_events
|   | `-VarDecl 0x123826958 <col:2, col:23> col:23 referenced invalid fake_pmu 'struct pmu_hw_events'
|   |-CallExpr 0x123826be0 <line:5:2, col:52> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x123826b20 <col:2> 'int ()' Function 0x123826a68 'DECLARE_BITMAP' 'int ()'
|   | |-RecoveryExpr 0x123826ba0 <col:17> '<dependent type>' contains-errors lvalue
|   | `-RecoveryExpr 0x123826bc0 <col:33> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x123827000 <line:9:2, col:23> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x123826f60 <col:2, col:11> '<dependent type>' contains-errors lvalue .used_mask
|   | | `-RecoveryExpr 0x123826f38 <col:2> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x123826f18 <col:2> 'struct pmu_hw_events' lvalue Var 0x123826958 'fake_pmu' 'struct pmu_hw_events'
|   | `-RecoveryExpr 0x123826fe0 <col:23> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x123827268 <line:11:2, line:12:11>
|   | |-UnaryOperator 0x1238271a8 <line:11:6, col:39> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-CallExpr 0x123827178 <col:7, col:39> '<dependent type>' contains-errors
|   | |   |-DeclRefExpr 0x123827100 <col:7> 'int ()' Function 0x123827048 'validate_event' 'int ()'
|   | |   |-UnaryOperator 0x123827140 <col:22, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | |   | `-RecoveryExpr 0x123827120 <col:23> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x123827158 <col:33> 'struct perf_event *' contains-errors lvalue Var 0x123826768 'leader' 'struct perf_event *'
|   | `-ReturnStmt 0x123827258 <line:12:3, col:11>
|   |   `-UnaryOperator 0x123827240 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |     `-ImplicitCastExpr 0x123827228 <col:11> '<dependent type>' contains-errors <LValueToRValue>
|   |       `-RecoveryExpr 0x123827208 <col:11> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x123827490 <line:14:2, col:65> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x123827368 <col:2> 'int ()' Function 0x1238272b0 'list_for_each_entry' 'int ()'
|   | |-DeclRefExpr 0x123827388 <col:22> 'struct perf_event *' lvalue Var 0x1238266d8 'sibling' 'struct perf_event *'
|   | |-UnaryOperator 0x123827408 <col:31, col:40> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | `-RecoveryExpr 0x1238273e0 <col:32, col:40> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x1238273a8 <col:32> 'struct perf_event *' contains-errors lvalue Var 0x123826768 'leader' 'struct perf_event *'
|   | `-RecoveryExpr 0x123827470 <col:54> '<dependent type>' contains-errors lvalue
|   |-CompoundStmt 0x123122660 <col:67, line:17:2>
|   | `-IfStmt 0x123122640 <line:15:3, line:16:12>
|   |   |-UnaryOperator 0x123827570 <line:15:7, col:41> '<dependent type>' contains-errors prefix '!' cannot overflow
|   |   | `-CallExpr 0x123827540 <col:8, col:41> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x1238274c8 <col:8> 'int ()' Function 0x123827048 'validate_event' 'int ()'
|   |   |   |-UnaryOperator 0x123827508 <col:23, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   |   | `-RecoveryExpr 0x1238274e8 <col:24> '<dependent type>' contains-errors lvalue
|   |   |   `-DeclRefExpr 0x123827520 <col:34> 'struct perf_event *' lvalue Var 0x1238266d8 'sibling' 'struct perf_event *'
|   |   `-ReturnStmt 0x123122630 <line:16:4, col:12>
|   |     `-UnaryOperator 0x123122618 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |       `-ImplicitCastExpr 0x123122600 <col:12> '<dependent type>' contains-errors <LValueToRValue>
|   |         `-RecoveryExpr 0x1238275d0 <col:12> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x1231227e0 <line:19:2, line:20:11>
|   | |-UnaryOperator 0x123122720 <line:19:6, col:38> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-CallExpr 0x1231226f0 <col:7, col:38> '<dependent type>' contains-errors
|   | |   |-DeclRefExpr 0x123122678 <col:7> 'int ()' Function 0x123827048 'validate_event' 'int ()'
|   | |   |-UnaryOperator 0x1231226b8 <col:22, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | |   | `-RecoveryExpr 0x123122698 <col:23> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x1231226d0 <col:33> 'struct perf_event *' lvalue ParmVar 0x12380e248 'event' 'struct perf_event *'
|   | `-ReturnStmt 0x1231227d0 <line:20:3, col:11>
|   |   `-UnaryOperator 0x1231227b8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |     `-ImplicitCastExpr 0x1231227a0 <col:11> '<dependent type>' contains-errors <LValueToRValue>
|   |       `-RecoveryExpr 0x123122780 <col:11> '<dependent type>' contains-errors lvalue
|   `-ReturnStmt 0x123122820 <line:22:2, col:9>
|     `-IntegerLiteral 0x123122800 <col:9> 'int' 0
`-FunctionDecl 0x123826c58 <line:8:2> col:2 implicit used memset 'void *(void *, int, unsigned long)' extern
  |-ParmVarDecl 0x123826d58 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x123826dc0 <<invalid sloc>> <invalid sloc> 'int'
  |-ParmVarDecl 0x123826e28 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x123826d00 <<invalid sloc>> Implicit 900
