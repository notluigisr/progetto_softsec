TranslationUnitDecl 0x15b855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x15b8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x15b855bd0 '__int128'
|-TypedefDecl 0x15b856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x15b855bf0 'unsigned __int128'
|-TypedefDecl 0x15b926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15b926000 'struct __NSConstantString_tag'
|   `-Record 0x15b856580 '__NSConstantString_tag'
|-TypedefDecl 0x15b926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x15b855d90 '__SVInt8_t'
|-TypedefDecl 0x15b926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x15b855db0 '__SVInt16_t'
|-TypedefDecl 0x15b926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x15b855dd0 '__SVInt32_t'
|-TypedefDecl 0x15b9263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x15b855df0 '__SVInt64_t'
|-TypedefDecl 0x15b926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x15b855e10 '__SVUint8_t'
|-TypedefDecl 0x15b9264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x15b855e30 '__SVUint16_t'
|-TypedefDecl 0x15b926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x15b855e50 '__SVUint32_t'
|-TypedefDecl 0x15b926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x15b855e70 '__SVUint64_t'
|-TypedefDecl 0x15b9265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x15b855e90 '__SVFloat16_t'
|-TypedefDecl 0x15b926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x15b855eb0 '__SVFloat32_t'
|-TypedefDecl 0x15b9266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x15b855ed0 '__SVFloat64_t'
|-TypedefDecl 0x15b926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x15b855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15b926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x15b855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15b9267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x15b855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15b926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x15b855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15b9268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x15b855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15b926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x15b855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15b926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x15b855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15b9269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x15b855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15b926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x15b855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15b926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x15b856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15b926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x15b856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15b926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x15b856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15b926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x15b856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15b926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x15b856090 '__clang_svint8x3_t'
|-TypedefDecl 0x15b926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x15b8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15b926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x15b8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15b926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x15b8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15b926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x15b856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15b926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x15b856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15b926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x15b856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15b926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x15b856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15b926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x15b856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15b927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x15b8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15b927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x15b8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15b9278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x15b8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15b927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x15b856210 '__clang_svint8x4_t'
|-TypedefDecl 0x15b9279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x15b856230 '__clang_svint16x4_t'
|-TypedefDecl 0x15b927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x15b856250 '__clang_svint32x4_t'
|-TypedefDecl 0x15b927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x15b856270 '__clang_svint64x4_t'
|-TypedefDecl 0x15b927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x15b856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15b927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x15b8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15b927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x15b8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15b927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x15b8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15b927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x15b856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15b927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x15b856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15b927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x15b856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15b927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x15b856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15b927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x15b856390 '__SVBool_t'
|-TypedefDecl 0x15b927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x15b8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15b927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x15b8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15b927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x15b8563f0 '__SVCount_t'
|-TypedefDecl 0x15b927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15b927fb0 'char *'
|   `-BuiltinType 0x15b8556b0 'char'
|-TypedefDecl 0x15b928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15b927fb0 'char *'
|   `-BuiltinType 0x15b8556b0 'char'
|-FunctionDecl 0x15b9282c8 <dataset_diviso_filec/func21281_vuln.c:1:1, line:70:1> line:1:1 parse_keyserver_line 'int (char *, const char *, unsigned int)'
| |-ParmVarDecl 0x15b9280d8 <col:23, col:29> col:29 used line 'char *'
| |-ParmVarDecl 0x15b928158 <line:2:9, col:21> col:21 used filename 'const char *'
| |-ParmVarDecl 0x15b9281d8 <col:31, col:44> col:44 used lineno 'unsigned int'
| `-CompoundStmt 0x15b9451e0 <line:3:1, line:70:1>
|   |-DeclStmt 0x15b928450 <line:4:3, col:10>
|   | `-VarDecl 0x15b9283e8 <col:3, col:9> col:9 used p 'char *'
|   |-DeclStmt 0x15b9284e8 <line:5:3, col:13>
|   | `-VarDecl 0x15b928480 <col:3, col:9> col:9 used endp 'char *'
|   |-DeclStmt 0x15b9286e8 <line:6:3, col:32>
|   | |-RecordDecl 0x15b928500 <col:3, col:10> col:10 struct keyserver_spec
|   | `-VarDecl 0x15b928668 <col:3, col:26> col:26 used server 'struct keyserver_spec *'
|   |-DeclStmt 0x15b928780 <line:7:3, col:14>
|   | `-VarDecl 0x15b928718 <col:3, col:7> col:7 used fieldno 'int'
|   |-DeclStmt 0x15b940a88 <line:8:3, col:15>
|   | `-VarDecl 0x15b940a00 <col:3, col:14> col:7 used fail 'int' cinit
|   |   `-IntegerLiteral 0x15b940a68 <col:14> 'int' 0
|   |-ForStmt 0x15b944d00 <line:12:3, line:61:5>
|   | |-BinaryOperator 0x15b941178 <line:12:8, col:25> 'char *' ','
|   | | |-BinaryOperator 0x15b9410e0 <col:8, col:18> 'int' '='
|   | | | |-DeclRefExpr 0x15b9410a0 <col:8> 'int' lvalue Var 0x15b928718 'fieldno' 'int'
|   | | | `-IntegerLiteral 0x15b9410c0 <col:18> 'int' 1
|   | | `-BinaryOperator 0x15b941158 <col:21, col:25> 'char *' '='
|   | |   |-DeclRefExpr 0x15b941100 <col:21> 'char *' lvalue Var 0x15b9283e8 'p' 'char *'
|   | |   `-ImplicitCastExpr 0x15b941140 <col:25> 'char *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x15b941120 <col:25> 'char *' lvalue ParmVar 0x15b9280d8 'line' 'char *'
|   | |-<<<NULL>>>
|   | |-ImplicitCastExpr 0x15b9411b8 <col:31> 'char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x15b941198 <col:31> 'char *' lvalue Var 0x15b9283e8 'p' 'char *'
|   | |-BinaryOperator 0x15b941280 <col:34, col:51> 'int' ','
|   | | |-BinaryOperator 0x15b941228 <col:34, col:38> 'char *' '='
|   | | | |-DeclRefExpr 0x15b9411d0 <col:34> 'char *' lvalue Var 0x15b9283e8 'p' 'char *'
|   | | | `-ImplicitCastExpr 0x15b941210 <col:38> 'char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x15b9411f0 <col:38> 'char *' lvalue Var 0x15b928480 'endp' 'char *'
|   | | `-UnaryOperator 0x15b941268 <col:44, col:51> 'int' postfix '++'
|   | |   `-DeclRefExpr 0x15b941248 <col:44> 'int' lvalue Var 0x15b928718 'fieldno' 'int'
|   | `-CompoundStmt 0x15b944cd0 <line:13:5, line:61:5>
|   |   |-BinaryOperator 0x15b9415f8 <line:14:7, col:28> 'char *' '='
|   |   | |-DeclRefExpr 0x15b9412a0 <col:7> 'char *' lvalue Var 0x15b928480 'endp' 'char *'
|   |   | `-CallExpr 0x15b941598 <col:14, col:28> 'char *'
|   |   |   |-ImplicitCastExpr 0x15b941580 <col:14> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x15b9414e0 <col:14> 'char *(const char *, int)' Function 0x15b941300 'strchr' 'char *(const char *, int)'
|   |   |   |-ImplicitCastExpr 0x15b9415e0 <col:22> 'const char *' <NoOp>
|   |   |   | `-ImplicitCastExpr 0x15b9415c8 <col:22> 'char *' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x15b941500 <col:22> 'char *' lvalue Var 0x15b9283e8 'p' 'char *'
|   |   |   `-CharacterLiteral 0x15b941520 <col:25> 'int' 58
|   |   |-IfStmt 0x15b9416f0 <line:15:7, line:16:12>
|   |   | |-ImplicitCastExpr 0x15b941638 <line:15:11> 'char *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x15b941618 <col:11> 'char *' lvalue Var 0x15b928480 'endp' 'char *'
|   |   | `-BinaryOperator 0x15b9416d0 <line:16:2, col:12> 'char' '='
|   |   |   |-UnaryOperator 0x15b941688 <col:2, col:7> 'char' lvalue prefix '*' cannot overflow
|   |   |   | `-UnaryOperator 0x15b941670 <col:3, col:7> 'char *' postfix '++'
|   |   |   |   `-DeclRefExpr 0x15b941650 <col:3> 'char *' lvalue Var 0x15b928480 'endp' 'char *'
|   |   |   `-ImplicitCastExpr 0x15b9416b8 <col:12> 'char' <IntegralCast>
|   |   |     `-CharacterLiteral 0x15b9416a0 <col:12> 'int' 0
|   |   |-CallExpr 0x15b941878 <line:17:7, col:21> 'int'
|   |   | |-ImplicitCastExpr 0x15b941860 <col:7> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x15b9417f0 <col:7> 'int ()' Function 0x15b941738 'trim_spaces' 'int ()'
|   |   | `-ImplicitCastExpr 0x15b9418a0 <col:20> 'char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x15b941810 <col:20> 'char *' lvalue Var 0x15b9283e8 'p' 'char *'
|   |   `-SwitchStmt 0x15b9418f0 <line:18:7, line:60:2>
|   |     |-ImplicitCastExpr 0x15b9418d8 <line:18:15> 'int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x15b9418b8 <col:15> 'int' lvalue Var 0x15b928718 'fieldno' 'int'
|   |     `-CompoundStmt 0x15b944c68 <line:19:2, line:60:2>
|   |       |-CaseStmt 0x15b941950 <line:20:2, line:28:6>
|   |       | |-ConstantExpr 0x15b941938 <line:20:7> 'int'
|   |       | | `-IntegerLiteral 0x15b941918 <col:7> 'int' 1
|   |       | `-IfStmt 0x15b943bd8 <line:21:4, line:28:6> has_else
|   |       |   |-ImplicitCastExpr 0x15b9419c8 <line:21:8, col:9> 'char' <LValueToRValue>
|   |       |   | `-UnaryOperator 0x15b9419b0 <col:8, col:9> 'char' lvalue prefix '*' cannot overflow
|   |       |   |   `-ImplicitCastExpr 0x15b941998 <col:9> 'char *' <LValueToRValue>
|   |       |   |     `-DeclRefExpr 0x15b941978 <col:9> 'char *' lvalue Var 0x15b9283e8 'p' 'char *'
|   |       |   |-BinaryOperator 0x15b9437b8 <line:22:6, col:31> '<dependent type>' contains-errors '='
|   |       |   | |-RecoveryExpr 0x15b943618 <col:6, col:14> '<dependent type>' contains-errors lvalue
|   |       |   | | `-DeclRefExpr 0x15b9419e0 <col:6> 'struct keyserver_spec *' lvalue Var 0x15b928668 'server' 'struct keyserver_spec *'
|   |       |   | `-CallExpr 0x15b943778 <col:21, col:31> 'int'
|   |       |   |   |-ImplicitCastExpr 0x15b943760 <col:21> 'int (*)()' <FunctionToPointerDecay>
|   |       |   |   | `-DeclRefExpr 0x15b943720 <col:21> 'int ()' Function 0x15b943668 'xstrdup' 'int ()'
|   |       |   |   `-ImplicitCastExpr 0x15b9437a0 <col:30> 'char *' <LValueToRValue>
|   |       |   |     `-DeclRefExpr 0x15b943740 <col:30> 'char *' lvalue Var 0x15b9283e8 'p' 'char *'
|   |       |   `-CompoundStmt 0x15b943bb8 <line:24:6, line:28:6>
|   |       |     |-CallExpr 0x15b943af0 <line:25:8, line:26:21> 'int'
|   |       |     | |-ImplicitCastExpr 0x15b943ad8 <line:25:8> 'int (*)()' <FunctionToPointerDecay>
|   |       |     | | `-DeclRefExpr 0x15b9438b8 <col:8> 'int ()' Function 0x15b943800 'log_error' 'int ()'
|   |       |     | |-CallExpr 0x15b943a58 <col:19, col:26> 'int'
|   |       |     | | |-ImplicitCastExpr 0x15b943a40 <col:19> 'int (*)()' <FunctionToPointerDecay>
|   |       |     | | | `-DeclRefExpr 0x15b9439b8 <col:19> 'int ()' Function 0x15b943900 '_' 'int ()'
|   |       |     | | `-ImplicitCastExpr 0x15b943a80 <col:21> 'char *' <ArrayToPointerDecay>
|   |       |     | |   `-StringLiteral 0x15b943a20 <col:21> 'char[4]' lvalue "STR"
|   |       |     | |-ImplicitCastExpr 0x15b943b28 <line:26:5> 'const char *' <LValueToRValue>
|   |       |     | | `-DeclRefExpr 0x15b943a98 <col:5> 'const char *' lvalue ParmVar 0x15b928158 'filename' 'const char *'
|   |       |     | `-ImplicitCastExpr 0x15b943b40 <col:15> 'unsigned int' <LValueToRValue>
|   |       |     |   `-DeclRefExpr 0x15b943ab8 <col:15> 'unsigned int' lvalue ParmVar 0x15b9281d8 'lineno' 'unsigned int'
|   |       |     `-BinaryOperator 0x15b943b98 <line:27:8, col:15> 'int' '='
|   |       |       |-DeclRefExpr 0x15b943b58 <col:8> 'int' lvalue Var 0x15b940a00 'fail' 'int'
|   |       |       `-IntegerLiteral 0x15b943b78 <col:15> 'int' 1
|   |       |-BreakStmt 0x15b943c08 <line:29:4>
|   |       |-CaseStmt 0x15b943c48 <line:31:2, line:33:28>
|   |       | |-ConstantExpr 0x15b943c30 <line:31:7> 'int'
|   |       | | `-IntegerLiteral 0x15b943c10 <col:7> 'int' 2
|   |       | `-IfStmt 0x15b943ed0 <line:32:4, line:33:28>
|   |       |   |-ImplicitCastExpr 0x15b943cc0 <line:32:8, col:9> 'char' <LValueToRValue>
|   |       |   | `-UnaryOperator 0x15b943ca8 <col:8, col:9> 'char' lvalue prefix '*' cannot overflow
|   |       |   |   `-ImplicitCastExpr 0x15b943c90 <col:9> 'char *' <LValueToRValue>
|   |       |   |     `-DeclRefExpr 0x15b943c70 <col:9> 'char *' lvalue Var 0x15b9283e8 'p' 'char *'
|   |       |   `-BinaryOperator 0x15b943eb0 <line:33:6, col:28> '<dependent type>' contains-errors '='
|   |       |     |-RecoveryExpr 0x15b943d10 <col:6, col:14> '<dependent type>' contains-errors lvalue
|   |       |     | `-DeclRefExpr 0x15b943cd8 <col:6> 'struct keyserver_spec *' lvalue Var 0x15b928668 'server' 'struct keyserver_spec *'
|   |       |     `-CallExpr 0x15b943e70 <col:21, col:28> 'int'
|   |       |       |-ImplicitCastExpr 0x15b943e58 <col:21> 'int (*)()' <FunctionToPointerDecay>
|   |       |       | `-DeclRefExpr 0x15b943e18 <col:21> 'int ()' Function 0x15b943d60 'atoi' 'int ()'
|   |       |       `-ImplicitCastExpr 0x15b943e98 <col:27> 'char *' <LValueToRValue>
|   |       |         `-DeclRefExpr 0x15b943e38 <col:27> 'char *' lvalue Var 0x15b9283e8 'p' 'char *'
|   |       |-BreakStmt 0x15b943ef0 <line:34:4>
|   |       |-CaseStmt 0x15b943f30 <line:36:2, line:38:31>
|   |       | |-ConstantExpr 0x15b943f18 <line:36:7> 'int'
|   |       | | `-IntegerLiteral 0x15b943ef8 <col:7> 'int' 3
|   |       | `-IfStmt 0x15b9440d8 <line:37:4, line:38:31>
|   |       |   |-ImplicitCastExpr 0x15b943fa8 <line:37:8, col:9> 'char' <LValueToRValue>
|   |       |   | `-UnaryOperator 0x15b943f90 <col:8, col:9> 'char' lvalue prefix '*' cannot overflow
|   |       |   |   `-ImplicitCastExpr 0x15b943f78 <col:9> 'char *' <LValueToRValue>
|   |       |   |     `-DeclRefExpr 0x15b943f58 <col:9> 'char *' lvalue Var 0x15b9283e8 'p' 'char *'
|   |       |   `-BinaryOperator 0x15b9440b8 <line:38:6, col:31> '<dependent type>' contains-errors '='
|   |       |     |-RecoveryExpr 0x15b943ff8 <col:6, col:14> '<dependent type>' contains-errors lvalue
|   |       |     | `-DeclRefExpr 0x15b943fc0 <col:6> 'struct keyserver_spec *' lvalue Var 0x15b928668 'server' 'struct keyserver_spec *'
|   |       |     `-CallExpr 0x15b944078 <col:21, col:31> 'int'
|   |       |       |-ImplicitCastExpr 0x15b944060 <col:21> 'int (*)()' <FunctionToPointerDecay>
|   |       |       | `-DeclRefExpr 0x15b944020 <col:21> 'int ()' Function 0x15b943668 'xstrdup' 'int ()'
|   |       |       `-ImplicitCastExpr 0x15b9440a0 <col:30> 'char *' <LValueToRValue>
|   |       |         `-DeclRefExpr 0x15b944040 <col:30> 'char *' lvalue Var 0x15b9283e8 'p' 'char *'
|   |       |-BreakStmt 0x15b9440f8 <line:39:4>
|   |       |-CaseStmt 0x15b944138 <line:41:2, line:49:31>
|   |       | |-ConstantExpr 0x15b944120 <line:41:7> 'int'
|   |       | | `-IntegerLiteral 0x15b944100 <col:7> 'int' 4
|   |       | `-IfStmt 0x15b944a00 <line:42:4, line:49:31> has_else
|   |       |   |-BinaryOperator 0x15b944240 <line:42:8, col:23> 'int' contains-errors '&&'
|   |       |   | |-UnaryOperator 0x15b944198 <col:8, col:9> 'char' lvalue prefix '*' cannot overflow
|   |       |   | | `-ImplicitCastExpr 0x15b944180 <col:9> 'char *' <LValueToRValue>
|   |       |   | |   `-DeclRefExpr 0x15b944160 <col:9> 'char *' lvalue Var 0x15b9283e8 'p' 'char *'
|   |       |   | `-UnaryOperator 0x15b944228 <col:14, col:23> '<dependent type>' contains-errors prefix '!' cannot overflow
|   |       |   |   `-ImplicitCastExpr 0x15b944210 <col:15, col:23> '<dependent type>' contains-errors <LValueToRValue>
|   |       |   |     `-RecoveryExpr 0x15b9441e8 <col:15, col:23> '<dependent type>' contains-errors lvalue
|   |       |   |       `-DeclRefExpr 0x15b9441b0 <col:15> 'struct keyserver_spec *' lvalue Var 0x15b928668 'server' 'struct keyserver_spec *'
|   |       |   |-CompoundStmt 0x15b944438 <line:43:6, line:47:6>
|   |       |   | |-CallExpr 0x15b944370 <line:44:8, line:45:21> 'int'
|   |       |   | | |-ImplicitCastExpr 0x15b944358 <line:44:8> 'int (*)()' <FunctionToPointerDecay>
|   |       |   | | | `-DeclRefExpr 0x15b944260 <col:8> 'int ()' Function 0x15b943800 'log_error' 'int ()'
|   |       |   | | |-CallExpr 0x15b9442d8 <col:19, col:26> 'int'
|   |       |   | | | |-ImplicitCastExpr 0x15b9442c0 <col:19> 'int (*)()' <FunctionToPointerDecay>
|   |       |   | | | | `-DeclRefExpr 0x15b944280 <col:19> 'int ()' Function 0x15b943900 '_' 'int ()'
|   |       |   | | | `-ImplicitCastExpr 0x15b944300 <col:21> 'char *' <ArrayToPointerDecay>
|   |       |   | | |   `-StringLiteral 0x15b9442a0 <col:21> 'char[4]' lvalue "STR"
|   |       |   | | |-ImplicitCastExpr 0x15b9443a8 <line:45:5> 'const char *' <LValueToRValue>
|   |       |   | | | `-DeclRefExpr 0x15b944318 <col:5> 'const char *' lvalue ParmVar 0x15b928158 'filename' 'const char *'
|   |       |   | | `-ImplicitCastExpr 0x15b9443c0 <col:15> 'unsigned int' <LValueToRValue>
|   |       |   | |   `-DeclRefExpr 0x15b944338 <col:15> 'unsigned int' lvalue ParmVar 0x15b9281d8 'lineno' 'unsigned int'
|   |       |   | `-BinaryOperator 0x15b944418 <line:46:8, col:15> 'int' '='
|   |       |   |   |-DeclRefExpr 0x15b9443d8 <col:8> 'int' lvalue Var 0x15b940a00 'fail' 'int'
|   |       |   |   `-IntegerLiteral 0x15b9443f8 <col:15> 'int' 1
|   |       |   `-IfStmt 0x15b9445d8 <line:48:9, line:49:31>
|   |       |     |-ImplicitCastExpr 0x15b9444a8 <line:48:13, col:14> 'char' <LValueToRValue>
|   |       |     | `-UnaryOperator 0x15b944490 <col:13, col:14> 'char' lvalue prefix '*' cannot overflow
|   |       |     |   `-ImplicitCastExpr 0x15b944478 <col:14> 'char *' <LValueToRValue>
|   |       |     |     `-DeclRefExpr 0x15b944458 <col:14> 'char *' lvalue Var 0x15b9283e8 'p' 'char *'
|   |       |     `-BinaryOperator 0x15b9445b8 <line:49:6, col:31> '<dependent type>' contains-errors '='
|   |       |       |-RecoveryExpr 0x15b9444f8 <col:6, col:14> '<dependent type>' contains-errors lvalue
|   |       |       | `-DeclRefExpr 0x15b9444c0 <col:6> 'struct keyserver_spec *' lvalue Var 0x15b928668 'server' 'struct keyserver_spec *'
|   |       |       `-CallExpr 0x15b944578 <col:21, col:31> 'int'
|   |       |         |-ImplicitCastExpr 0x15b944560 <col:21> 'int (*)()' <FunctionToPointerDecay>
|   |       |         | `-DeclRefExpr 0x15b944520 <col:21> 'int ()' Function 0x15b943668 'xstrdup' 'int ()'
|   |       |         `-ImplicitCastExpr 0x15b9445a0 <col:30> 'char *' <LValueToRValue>
|   |       |           `-DeclRefExpr 0x15b944540 <col:30> 'char *' lvalue Var 0x15b9283e8 'p' 'char *'
|   |       |-BreakStmt 0x15b944a30 <line:50:4>
|   |       |-CaseStmt 0x15b944a70 <line:52:2, line:54:31>
|   |       | |-ConstantExpr 0x15b944a58 <line:52:7> 'int'
|   |       | | `-IntegerLiteral 0x15b944a38 <col:7> 'int' 5
|   |       | `-IfStmt 0x15b944c18 <line:53:4, line:54:31>
|   |       |   |-ImplicitCastExpr 0x15b944ae8 <line:53:8, col:9> 'char' <LValueToRValue>
|   |       |   | `-UnaryOperator 0x15b944ad0 <col:8, col:9> 'char' lvalue prefix '*' cannot overflow
|   |       |   |   `-ImplicitCastExpr 0x15b944ab8 <col:9> 'char *' <LValueToRValue>
|   |       |   |     `-DeclRefExpr 0x15b944a98 <col:9> 'char *' lvalue Var 0x15b9283e8 'p' 'char *'
|   |       |   `-BinaryOperator 0x15b944bf8 <line:54:6, col:31> '<dependent type>' contains-errors '='
|   |       |     |-RecoveryExpr 0x15b944b38 <col:6, col:14> '<dependent type>' contains-errors lvalue
|   |       |     | `-DeclRefExpr 0x15b944b00 <col:6> 'struct keyserver_spec *' lvalue Var 0x15b928668 'server' 'struct keyserver_spec *'
|   |       |     `-CallExpr 0x15b944bb8 <col:21, col:31> 'int'
|   |       |       |-ImplicitCastExpr 0x15b944ba0 <col:21> 'int (*)()' <FunctionToPointerDecay>
|   |       |       | `-DeclRefExpr 0x15b944b60 <col:21> 'int ()' Function 0x15b943668 'xstrdup' 'int ()'
|   |       |       `-ImplicitCastExpr 0x15b944be0 <col:30> 'char *' <LValueToRValue>
|   |       |         `-DeclRefExpr 0x15b944b80 <col:30> 'char *' lvalue Var 0x15b9283e8 'p' 'char *'
|   |       |-BreakStmt 0x15b944c38 <line:55:4>
|   |       `-DefaultStmt 0x15b944c48 <line:57:2, line:59:4>
|   |         `-BreakStmt 0x15b944c40 <col:4>
|   |-IfStmt 0x15b945160 <line:63:3, line:67:5>
|   | |-ImplicitCastExpr 0x15b944d58 <line:63:7> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x15b944d38 <col:7> 'int' lvalue Var 0x15b940a00 'fail' 'int'
|   | `-CompoundStmt 0x15b945140 <line:64:5, line:67:5>
|   |   |-CallExpr 0x15b944f60 <line:65:7, col:43> 'int'
|   |   | |-ImplicitCastExpr 0x15b944f48 <col:7> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x15b944e50 <col:7> 'int ()' Function 0x15b944d98 'log_info' 'int ()'
|   |   | |-CallExpr 0x15b944ec8 <col:17, col:24> 'int'
|   |   | | |-ImplicitCastExpr 0x15b944eb0 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |   | | | `-DeclRefExpr 0x15b944e70 <col:17> 'int ()' Function 0x15b943900 '_' 'int ()'
|   |   | | `-ImplicitCastExpr 0x15b944ef0 <col:19> 'char *' <ArrayToPointerDecay>
|   |   | |   `-StringLiteral 0x15b944e90 <col:19> 'char[4]' lvalue "STR"
|   |   | |-ImplicitCastExpr 0x15b944f98 <col:27> 'const char *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x15b944f08 <col:27> 'const char *' lvalue ParmVar 0x15b928158 'filename' 'const char *'
|   |   | `-ImplicitCastExpr 0x15b944fb0 <col:37> 'unsigned int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x15b944f28 <col:37> 'unsigned int' lvalue ParmVar 0x15b9281d8 'lineno' 'unsigned int'
|   |   `-CallExpr 0x15b945100 <line:66:7, col:34> 'int'
|   |     |-ImplicitCastExpr 0x15b9450e8 <col:7> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x15b9450a8 <col:7> 'int ()' Function 0x15b944ff0 'keyserver_list_free' 'int ()'
|   |     `-ImplicitCastExpr 0x15b945128 <col:28> 'struct keyserver_spec *' <LValueToRValue>
|   |       `-DeclRefExpr 0x15b9450c8 <col:28> 'struct keyserver_spec *' lvalue Var 0x15b928668 'server' 'struct keyserver_spec *'
|   `-ReturnStmt 0x15b9451d0 <line:69:3, col:10>
|     `-ImplicitCastExpr 0x15b9451b8 <col:10> 'int' <PointerToIntegral>
|       `-ImplicitCastExpr 0x15b9451a0 <col:10> 'struct keyserver_spec *' <LValueToRValue>
|         `-DeclRefExpr 0x15b945180 <col:10> 'struct keyserver_spec *' lvalue Var 0x15b928668 'server' 'struct keyserver_spec *'
`-FunctionDecl 0x15b941300 <line:14:14> col:14 implicit used strchr 'char *(const char *, int)' extern
  |-ParmVarDecl 0x15b941400 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x15b941468 <<invalid sloc>> <invalid sloc> 'int'
  `-BuiltinAttr 0x15b9413a8 <<invalid sloc>> Implicit 893
