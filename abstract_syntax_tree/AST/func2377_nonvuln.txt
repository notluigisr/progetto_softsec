TranslationUnitDecl 0x12c83d408 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12c83e2b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12c83d9d0 '__int128'
|-TypedefDecl 0x12c83e328 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12c83d9f0 'unsigned __int128'
|-TypedefDecl 0x12d80ee30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12d80ec00 'struct __NSConstantString_tag'
|   `-Record 0x12c83e380 '__NSConstantString_tag'
|-TypedefDecl 0x12d80ee98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12c83db90 '__SVInt8_t'
|-TypedefDecl 0x12d80ef00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12c83dbb0 '__SVInt16_t'
|-TypedefDecl 0x12d80ef68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12c83dbd0 '__SVInt32_t'
|-TypedefDecl 0x12d80efd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12c83dbf0 '__SVInt64_t'
|-TypedefDecl 0x12d80f038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12c83dc10 '__SVUint8_t'
|-TypedefDecl 0x12d80f0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12c83dc30 '__SVUint16_t'
|-TypedefDecl 0x12d80f108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12c83dc50 '__SVUint32_t'
|-TypedefDecl 0x12d80f170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12c83dc70 '__SVUint64_t'
|-TypedefDecl 0x12d80f1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12c83dc90 '__SVFloat16_t'
|-TypedefDecl 0x12d80f240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12c83dcb0 '__SVFloat32_t'
|-TypedefDecl 0x12d80f2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12c83dcd0 '__SVFloat64_t'
|-TypedefDecl 0x12d80f310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12c83dcf0 '__SVBfloat16_t'
|-TypedefDecl 0x12d80f378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12c83dd10 '__clang_svint8x2_t'
|-TypedefDecl 0x12d80f3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12c83dd30 '__clang_svint16x2_t'
|-TypedefDecl 0x12d80f448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12c83dd50 '__clang_svint32x2_t'
|-TypedefDecl 0x12d80f4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12c83dd70 '__clang_svint64x2_t'
|-TypedefDecl 0x12d80f518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12c83dd90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12d80f580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12c83ddb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12d80f5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12c83ddd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12d80f650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12c83ddf0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12d80f6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12c83de10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12d80f720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12c83de30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12d80f788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12c83de50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12d80f7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12c83de70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12d80f858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12c83de90 '__clang_svint8x3_t'
|-TypedefDecl 0x12d80f8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12c83deb0 '__clang_svint16x3_t'
|-TypedefDecl 0x12d80f928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12c83ded0 '__clang_svint32x3_t'
|-TypedefDecl 0x12d80f990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12c83def0 '__clang_svint64x3_t'
|-TypedefDecl 0x12d80f9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12c83df10 '__clang_svuint8x3_t'
|-TypedefDecl 0x12d80fa60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12c83df30 '__clang_svuint16x3_t'
|-TypedefDecl 0x12d80fac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12c83df50 '__clang_svuint32x3_t'
|-TypedefDecl 0x12d80fb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12c83df70 '__clang_svuint64x3_t'
|-TypedefDecl 0x12d80fb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12c83df90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12d80fc00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12c83dfb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12d80fc68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12c83dfd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12d80fcd0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12c83dff0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12d80fd38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12c83e010 '__clang_svint8x4_t'
|-TypedefDecl 0x12d80fda0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12c83e030 '__clang_svint16x4_t'
|-TypedefDecl 0x12d80fe08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12c83e050 '__clang_svint32x4_t'
|-TypedefDecl 0x12d80fe70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12c83e070 '__clang_svint64x4_t'
|-TypedefDecl 0x12d80fed8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12c83e090 '__clang_svuint8x4_t'
|-TypedefDecl 0x12d80ff40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12c83e0b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12d80ffa8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12c83e0d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12d810010 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12c83e0f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12d810078 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12c83e110 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12d8100e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12c83e130 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12d810148 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12c83e150 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12d8101b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12c83e170 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12d810218 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12c83e190 '__SVBool_t'
|-TypedefDecl 0x12d810280 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12c83e1b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12d8102e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12c83e1d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12d810350 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12c83e1f0 '__SVCount_t'
|-TypedefDecl 0x12d8103f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12d8103b0 'char *'
|   `-BuiltinType 0x12c83d4b0 'char'
|-TypedefDecl 0x12d810468 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12d8103b0 'char *'
|   `-BuiltinType 0x12c83d4b0 'char'
|-FunctionDecl 0x12d810710 <dataset_diviso_filec/func2377_nonvuln.c:1:1, line:39:1> line:1:6 invalid simplestring_addn 'void (int *, const char *, int)'
| |-ParmVarDecl 0x12d810528 <col:24, col:38> col:38 referenced invalid target 'int *'
| |-ParmVarDecl 0x12d8105a8 <col:46, col:58> col:58 used source 'const char *'
| |-ParmVarDecl 0x12d810628 <col:66, col:73> col:73 invalid add_len 'int'
| `-CompoundStmt 0x12c90c1c8 <col:82, line:39:1>
|   |-BinaryOperator 0x12d8109a8 <line:2:4, col:42> '<dependent type>' contains-errors ','
|   | |-BinaryOperator 0x12d810948 <col:4, col:29> 'unsigned long' contains-errors '='
|   | | |-UnaryExprOrTypeTraitExpr 0x12d810928 <col:4, col:11> 'unsigned long' contains-errors sizeof
|   | | | `-RecoveryExpr 0x12d810908 <col:11> '<dependent type>' contains-errors lvalue
|   | | `-CXXDependentScopeMemberExpr 0x12d810828 <col:21, col:29> '<dependent type>' contains-errors lvalue ->size
|   | |   `-RecoveryExpr 0x12d810808 <col:21> '<dependent type>' contains-errors lvalue
|   | `-BinaryOperator 0x12d810988 <col:35, col:42> '<dependent type>' contains-errors '='
|   |   |-RecoveryExpr 0x12d810968 <col:35> '<dependent type>' contains-errors lvalue
|   |   `-IntegerLiteral 0x12d8108a8 <col:42> 'int' 0
|   `-IfStmt 0x12c90c1a8 <line:3:4, line:38:4>
|     |-BinaryOperator 0x12d810a08 <line:3:7, col:17> 'int' contains-errors '&&'
|     | |-RecoveryExpr 0x12d8109c8 <col:7> '<dependent type>' contains-errors lvalue
|     | `-DeclRefExpr 0x12d8109e8 <col:17> 'const char *' lvalue ParmVar 0x12d8105a8 'source' 'const char *'
|     `-CompoundStmt 0x12c90c178 <col:25, line:38:4>
|       |-IfStmt 0x12c014938 <line:4:7, line:6:7>
|       | |-UnaryOperator 0x12d810aa8 <line:4:10, col:19> '<dependent type>' contains-errors prefix '!' cannot overflow
|       | | `-ImplicitCastExpr 0x12d810a90 <col:11, col:19> '<dependent type>' contains-errors <LValueToRValue>
|       | |   `-CXXDependentScopeMemberExpr 0x12d810a48 <col:11, col:19> '<dependent type>' contains-errors lvalue ->str
|       | |     `-RecoveryExpr 0x12d810a28 <col:11> '<dependent type>' contains-errors lvalue
|       | `-CompoundStmt 0x12c014920 <col:24, line:6:7>
|       |   `-CallExpr 0x12c0148f8 <line:5:10, col:38> '<dependent type>' contains-errors
|       |     |-DeclRefExpr 0x12c0148b8 <col:10> 'int ()' Function 0x12c014800 'simplestring_init_str' 'int ()'
|       |     `-RecoveryExpr 0x12c0148d8 <col:32> '<dependent type>' contains-errors lvalue
|       |-IfStmt 0x12c014b60 <line:8:7, line:11:7>
|       | |-RecoveryExpr 0x12c014b18 <line:8:10, col:83> '_Bool' contains-errors
|       | `-CompoundStmt 0x12c014b48 <col:88, line:11:7>
|       |   `-ReturnStmt 0x12c014b38 <line:10:8>
|       |-IfStmt 0x12c90b960 <line:13:7, line:29:7>
|       | |-BinaryOperator 0x12c014cd0 <line:13:10, col:46> 'int' contains-errors '>'
|       | | |-BinaryOperator 0x12c014c48 <col:10, col:34> '<dependent type>' contains-errors '+'
|       | | | |-BinaryOperator 0x12c014c08 <col:10, col:24> '<dependent type>' contains-errors '+'
|       | | | | |-CXXDependentScopeMemberExpr 0x12c014ba0 <col:10, col:18> '<dependent type>' contains-errors lvalue ->len
|       | | | | | `-RecoveryExpr 0x12c014b80 <col:10> '<dependent type>' contains-errors lvalue
|       | | | | `-RecoveryExpr 0x12c014be8 <col:24> '<dependent type>' contains-errors lvalue
|       | | | `-IntegerLiteral 0x12c014c28 <col:34> 'int' 1
|       | | `-CXXDependentScopeMemberExpr 0x12c014c88 <col:38, col:46> '<dependent type>' contains-errors lvalue ->size
|       | |   `-RecoveryExpr 0x12c014c68 <col:38> '<dependent type>' contains-errors lvalue
|       | `-CompoundStmt 0x12c90b938 <col:52, line:29:7>
|       |   |-IfStmt 0x12c014f48 <line:19:10, line:21:10>
|       |   | |-RecoveryExpr 0x12c014e98 <line:19:14> '<dependent type>' contains-errors lvalue
|       |   | `-CompoundStmt 0x12c014f38 <col:20, line:21:10>
|       |   |-IfStmt 0x12c015110 <line:22:10, line:25:10>
|       |   | |-BinaryOperator 0x12c0150c8 <line:22:13, col:49> 'int' contains-errors '<'
|       |   | | |-RecoveryExpr 0x12c0150a8 <col:13> '<dependent type>' contains-errors lvalue
|       |   | | `-ParenExpr 0x12c015068 <col:23, col:49> '<dependent type>' contains-errors
|       |   | |   `-BinaryOperator 0x12c015048 <col:24, col:48> '<dependent type>' contains-errors '+'
|       |   | |     |-BinaryOperator 0x12c015008 <col:24, col:38> '<dependent type>' contains-errors '+'
|       |   | |     | |-CXXDependentScopeMemberExpr 0x12c014fa0 <col:24, col:32> '<dependent type>' contains-errors lvalue ->len
|       |   | |     | | `-RecoveryExpr 0x12c014f80 <col:24> '<dependent type>' contains-errors lvalue
|       |   | |     | `-RecoveryExpr 0x12c014fe8 <col:38> '<dependent type>' contains-errors lvalue
|       |   | |     `-IntegerLiteral 0x12c015028 <col:48> 'int' 1
|       |   | `-CompoundStmt 0x12c0150f8 <col:52, line:25:10>
|       |   |   `-ReturnStmt 0x12c0150e8 <line:24:11>
|       |   `-BinaryOperator 0x12c90b918 <line:28:10, col:49> '<dependent type>' contains-errors '='
|       |     |-CXXDependentScopeMemberExpr 0x12c90b790 <col:10, col:18> '<dependent type>' contains-errors lvalue ->size
|       |     | `-RecoveryExpr 0x12c90b768 <col:10> '<dependent type>' contains-errors lvalue
|       |     |   `-DeclRefExpr 0x12c90b748 <col:10> 'int *' lvalue ParmVar 0x12d810528 'target' 'int *'
|       |     `-ConditionalOperator 0x12c90b8e8 <col:25, col:49> '<dependent type>' contains-errors
|       |       |-CXXDependentScopeMemberExpr 0x12c90b7f8 <col:25, col:33> '<dependent type>' contains-errors lvalue ->str
|       |       | `-RecoveryExpr 0x12c90b7d8 <col:25> '<dependent type>' contains-errors lvalue
|       |       |-RecoveryExpr 0x12c90b8c8 <col:39> '<dependent type>' contains-errors lvalue
|       |       `-IntegerLiteral 0x12c90b858 <col:49> 'int' 0
|       `-IfStmt 0x12c90c158 <line:31:7, line:37:7>
|         |-CXXDependentScopeMemberExpr 0x12c90b9a0 <line:31:10, col:18> '<dependent type>' contains-errors lvalue ->str
|         | `-RecoveryExpr 0x12c90b980 <col:10> '<dependent type>' contains-errors lvalue
|         `-CompoundStmt 0x12c90c130 <col:23, line:37:7>
|           |-IfStmt 0x12c90bea8 <line:32:10, line:34:10>
|           | |-RecoveryExpr 0x12c90b9e8 <line:32:13> '<dependent type>' contains-errors lvalue
|           | `-CompoundStmt 0x12c90be90 <col:22, line:34:10>
|           |   `-CallExpr 0x12c90be58 <line:33:13, col:62> '<dependent type>' contains-errors
|           |     |-DeclRefExpr 0x12c90bcd8 <col:13> 'void *(void *, const void *, unsigned long)' Function 0x12c90ba88 'memcpy' 'void *(void *, const void *, unsigned long)'
|           |     |-BinaryOperator 0x12c90bdc8 <col:20, col:42> '<dependent type>' contains-errors '+'
|           |     | |-CXXDependentScopeMemberExpr 0x12c90bd18 <col:20, col:28> '<dependent type>' contains-errors lvalue ->str
|           |     | | `-RecoveryExpr 0x12c90bcf8 <col:20> '<dependent type>' contains-errors lvalue
|           |     | `-CXXDependentScopeMemberExpr 0x12c90bd80 <col:34, col:42> '<dependent type>' contains-errors lvalue ->len
|           |     |   `-RecoveryExpr 0x12c90bd60 <col:34> '<dependent type>' contains-errors lvalue
|           |     |-DeclRefExpr 0x12c90bde8 <col:47> 'const char *' lvalue ParmVar 0x12d8105a8 'source' 'const char *'
|           |     `-RecoveryExpr 0x12c90be08 <col:55> '<dependent type>' contains-errors lvalue
|           |-CompoundAssignOperator 0x12c90bf78 <line:35:10, col:25> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|           | |-CXXDependentScopeMemberExpr 0x12c90bf10 <col:10, col:18> '<dependent type>' contains-errors lvalue ->len
|           | | `-RecoveryExpr 0x12c90bee8 <col:10> '<dependent type>' contains-errors lvalue
|           | |   `-DeclRefExpr 0x12c90bec8 <col:10> 'int *' lvalue ParmVar 0x12d810528 'target' 'int *'
|           | `-RecoveryExpr 0x12c90bf58 <col:25> '<dependent type>' contains-errors lvalue
|           `-BinaryOperator 0x12c90c110 <line:36:10, col:37> '<dependent type>' contains-errors '='
|             |-ArraySubscriptExpr 0x12c90c0d0 <col:10, col:33> '<dependent type>' contains-errors lvalue
|             | |-ImplicitCastExpr 0x12c90c0a0 <col:10, col:18> '<dependent type>' contains-errors <LValueToRValue>
|             | | `-CXXDependentScopeMemberExpr 0x12c90bff0 <col:10, col:18> '<dependent type>' contains-errors lvalue ->str
|             | |   `-RecoveryExpr 0x12c90bfc8 <col:10> '<dependent type>' contains-errors lvalue
|             | |     `-DeclRefExpr 0x12c90bfa8 <col:10> 'int *' lvalue ParmVar 0x12d810528 'target' 'int *'
|             | `-ImplicitCastExpr 0x12c90c0b8 <col:22, col:30> '<dependent type>' contains-errors <LValueToRValue>
|             |   `-CXXDependentScopeMemberExpr 0x12c90c058 <col:22, col:30> '<dependent type>' contains-errors lvalue ->len
|             |     `-RecoveryExpr 0x12c90c038 <col:22> '<dependent type>' contains-errors lvalue
|             `-IntegerLiteral 0x12c90c0f0 <col:37> 'int' 0
|-FunctionDecl 0x12c015620 <line:26:31> col:31 implicit used realloc 'void *(void *, unsigned long)' extern
| |-ParmVarDecl 0x12c015720 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x12c015788 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-BuiltinAttr 0x12c0156c8 <<invalid sloc>> Implicit 872
| `-AllocSizeAttr 0x12c90b600 <col:31> Implicit 2
`-FunctionDecl 0x12c90ba88 <line:33:13> col:13 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x12c90bb88 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x12c90bbf0 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x12c90bc58 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x12c90bb30 <<invalid sloc>> Implicit 882
