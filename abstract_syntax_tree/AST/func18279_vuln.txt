TranslationUnitDecl 0x120055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1200564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x120055bd0 '__int128'
|-TypedefDecl 0x120056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x120055bf0 'unsigned __int128'
|-TypedefDecl 0x10280be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x10280bc00 'struct __NSConstantString_tag'
|   `-Record 0x120056580 '__NSConstantString_tag'
|-TypedefDecl 0x10280be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x120055d90 '__SVInt8_t'
|-TypedefDecl 0x10280bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x120055db0 '__SVInt16_t'
|-TypedefDecl 0x10280bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x120055dd0 '__SVInt32_t'
|-TypedefDecl 0x10280bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x120055df0 '__SVInt64_t'
|-TypedefDecl 0x10280c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x120055e10 '__SVUint8_t'
|-TypedefDecl 0x10280c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x120055e30 '__SVUint16_t'
|-TypedefDecl 0x10280c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x120055e50 '__SVUint32_t'
|-TypedefDecl 0x10280c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x120055e70 '__SVUint64_t'
|-TypedefDecl 0x10280c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x120055e90 '__SVFloat16_t'
|-TypedefDecl 0x10280c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x120055eb0 '__SVFloat32_t'
|-TypedefDecl 0x10280c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x120055ed0 '__SVFloat64_t'
|-TypedefDecl 0x10280c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x120055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x10280c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x120055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x10280c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x120055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x10280c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x120055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x10280c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x120055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x10280c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x120055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x10280c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x120055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x10280c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x120055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x10280c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x120055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x10280c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x120056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x10280c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x120056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x10280c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x120056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x10280c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x120056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x10280c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x120056090 '__clang_svint8x3_t'
|-TypedefDecl 0x10280c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1200560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x10280c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1200560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x10280c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1200560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x10280c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x120056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x10280ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x120056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x10280cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x120056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x10280cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x120056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x10280cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x120056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x10280d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1200561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x10280d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1200561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x10280d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1200561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x10280d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x120056210 '__clang_svint8x4_t'
|-TypedefDecl 0x10280d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x120056230 '__clang_svint16x4_t'
|-TypedefDecl 0x10280d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x120056250 '__clang_svint32x4_t'
|-TypedefDecl 0x10280d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x120056270 '__clang_svint64x4_t'
|-TypedefDecl 0x10280d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x120056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x10280d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1200562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x10280d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1200562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x10280d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1200562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x10280d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x120056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x10280d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x120056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x10280d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x120056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x10280d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x120056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x10280da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x120056390 '__SVBool_t'
|-TypedefDecl 0x10280da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1200563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x10280dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1200563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x10280db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1200563f0 '__SVCount_t'
|-TypedefDecl 0x10280dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x10280dbb0 'char *'
|   `-BuiltinType 0x1200556b0 'char'
|-TypedefDecl 0x10280dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x10280dbb0 'char *'
|   `-BuiltinType 0x1200556b0 'char'
|-FunctionDecl 0x10280dfa8 <dataset_diviso_filec/func18279_vuln.c:1:1, line:70:1> line:1:1 invalid ImagingPcxDecode 'int (int, int, int *, int)'
| |-ParmVarDecl 0x10280dcf0 <col:18, col:26> col:26 invalid im 'int'
| |-ParmVarDecl 0x10280dd70 <col:30, col:48> col:48 referenced invalid state 'int'
| |-ParmVarDecl 0x10280de28 <col:55, col:62> col:62 invalid buf 'int *'
| |-ParmVarDecl 0x10280dea8 <col:67, col:78> col:78 referenced invalid bytes 'int'
| `-CompoundStmt 0x102828950 <line:2:1, line:70:1>
|   |-IfStmt 0x10300a140 <line:6:5, line:9:5>
|   | |-BinaryOperator 0x103009fb0 <line:6:9, col:71> 'int' contains-errors '&&'
|   | | |-BinaryOperator 0x103009e60 <col:9, col:36> 'int' contains-errors '=='
|   | | | |-CallExpr 0x103009e10 <col:9, col:31> '<dependent type>' contains-errors
|   | | | | |-DeclRefExpr 0x103009cf0 <col:9> 'int (const char *, const char *)' Function 0x103009b10 'strcmp' 'int (const char *, const char *)'
|   | | | | |-CXXDependentScopeMemberExpr 0x103009d30 <col:16, col:20> '<dependent type>' contains-errors lvalue ->mode
|   | | | | | `-RecoveryExpr 0x103009d10 <col:16> '<dependent type>' contains-errors lvalue
|   | | | | `-StringLiteral 0x103009dc0 <col:26> 'char[4]' lvalue "STR"
|   | | | `-IntegerLiteral 0x103009e40 <col:36> 'int' 0
|   | | `-BinaryOperator 0x103009f90 <col:41, col:71> 'int' contains-errors '>'
|   | |   |-CXXDependentScopeMemberExpr 0x103009ea0 <col:41, col:48> '<dependent type>' contains-errors lvalue ->xsize
|   | |   | `-RecoveryExpr 0x103009e80 <col:41> '<dependent type>' contains-errors lvalue
|   | |   `-BinaryOperator 0x103009f70 <col:56, col:71> '<dependent type>' contains-errors '*'
|   | |     |-CXXDependentScopeMemberExpr 0x103009f08 <col:56, col:63> '<dependent type>' contains-errors lvalue ->bytes
|   | |     | `-RecoveryExpr 0x103009ee8 <col:56> '<dependent type>' contains-errors lvalue
|   | |     `-IntegerLiteral 0x103009f50 <col:71> 'int' 8
|   | `-CompoundStmt 0x10300a120 <col:74, line:9:5>
|   |   |-BinaryOperator 0x10300a0b8 <line:7:9, col:26> '<dependent type>' contains-errors '='
|   |   | |-CXXDependentScopeMemberExpr 0x10300a018 <col:9, col:16> '<dependent type>' contains-errors lvalue ->errcode
|   |   | | `-RecoveryExpr 0x103009ff0 <col:9> '<dependent type>' contains-errors lvalue
|   |   | |   `-DeclRefExpr 0x103009fd0 <col:9> 'int' lvalue ParmVar 0x10280dd70 'state' 'int'
|   |   | `-RecoveryExpr 0x10300a098 <col:26> '<dependent type>' contains-errors lvalue
|   |   `-ReturnStmt 0x10300a110 <line:8:9, col:17>
|   |     `-UnaryOperator 0x10300a0f8 <col:16, col:17> 'int' prefix '-'
|   |       `-IntegerLiteral 0x10300a0d8 <col:17> 'int' 1
|   `-ForStmt 0x102828918 <line:13:5, line:69:5>
|     |-<<<NULL>>>
|     |-<<<NULL>>>
|     |-<<<NULL>>>
|     |-<<<NULL>>>
|     `-CompoundStmt 0x1028288f0 <line:13:14, line:69:5>
|       |-IfStmt 0x10300a288 <line:15:2, line:16:19>
|       | |-BinaryOperator 0x10300a1c0 <line:15:6, col:14> 'int' contains-errors '<'
|       | | |-RecoveryExpr 0x10300a180 <col:6> '<dependent type>' contains-errors lvalue
|       | | `-IntegerLiteral 0x10300a1a0 <col:14> 'int' 1
|       | `-ReturnStmt 0x10300a278 <line:16:6, col:19>
|       |   `-BinaryOperator 0x10300a258 <col:13, col:19> '<dependent type>' contains-errors '-'
|       |     |-RecoveryExpr 0x10300a238 <col:13> '<dependent type>' contains-errors lvalue
|       |     `-RecoveryExpr 0x10300a1f8 <col:19> '<dependent type>' contains-errors lvalue
|       |-IfStmt 0x102827658 <line:18:2, line:43:2> has_else
|       | |-RecoveryExpr 0x10300a350 <line:18:6, col:23> '_Bool' contains-errors
|       | |-CompoundStmt 0x102827450 <col:29, line:37:2>
|       | | |-IfStmt 0x10300a478 <line:21:6, line:22:16>
|       | | | |-BinaryOperator 0x10300a3b0 <line:21:10, col:18> 'int' contains-errors '<'
|       | | | | |-RecoveryExpr 0x10300a370 <col:10> '<dependent type>' contains-errors lvalue
|       | | | | `-IntegerLiteral 0x10300a390 <col:18> 'int' 2
|       | | | `-ReturnStmt 0x10300a468 <line:22:3, col:16>
|       | | |   `-BinaryOperator 0x10300a448 <col:10, col:16> '<dependent type>' contains-errors '-'
|       | | |     |-RecoveryExpr 0x10300a428 <col:10> '<dependent type>' contains-errors lvalue
|       | | |     `-RecoveryExpr 0x10300a3e8 <col:16> '<dependent type>' contains-errors lvalue
|       | | |-WhileStmt 0x10300a960 <line:26:6, line:33:6>
|       | | | |-BinaryOperator 0x10300a568 <line:26:13, col:17> 'int' contains-errors '>'
|       | | | | |-RecoveryExpr 0x10300a548 <col:13> '<dependent type>' contains-errors lvalue
|       | | | | `-IntegerLiteral 0x10300a508 <col:17> 'int' 0
|       | | | `-CompoundStmt 0x10300a948 <col:20, line:33:6>
|       | | |   `-IfStmt 0x10300a7a8 <line:27:3, line:30:3>
|       | | |     |-BinaryOperator 0x10300a658 <line:27:7, col:26> 'int' contains-errors '>='
|       | | |     | |-CXXDependentScopeMemberExpr 0x10300a5a8 <col:7, col:14> '<dependent type>' contains-errors lvalue ->x
|       | | |     | | `-RecoveryExpr 0x10300a588 <col:7> '<dependent type>' contains-errors lvalue
|       | | |     | `-CXXDependentScopeMemberExpr 0x10300a610 <col:19, col:26> '<dependent type>' contains-errors lvalue ->bytes
|       | | |     |   `-RecoveryExpr 0x10300a5f0 <col:19> '<dependent type>' contains-errors lvalue
|       | | |     `-CompoundStmt 0x10300a788 <col:33, line:30:3>
|       | | |       |-BinaryOperator 0x10300a760 <line:28:7, col:24> '<dependent type>' contains-errors '='
|       | | |       | |-CXXDependentScopeMemberExpr 0x10300a6c0 <col:7, col:14> '<dependent type>' contains-errors lvalue ->errcode
|       | | |       | | `-RecoveryExpr 0x10300a698 <col:7> '<dependent type>' contains-errors lvalue
|       | | |       | |   `-DeclRefExpr 0x10300a678 <col:7> 'int' lvalue ParmVar 0x10280dd70 'state' 'int'
|       | | |       | `-RecoveryExpr 0x10300a740 <col:24> '<dependent type>' contains-errors lvalue
|       | | |       `-BreakStmt 0x10300a780 <line:29:7>
|       | | `-CompoundAssignOperator 0x102827420 <line:35:16, col:25> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|       | |   |-RecoveryExpr 0x10300a9c0 <col:16> '<dependent type>' contains-errors lvalue
|       | |   | `-DeclRefExpr 0x10300a9a0 <col:16> 'int' lvalue ParmVar 0x10280dea8 'bytes' 'int'
|       | |   `-IntegerLiteral 0x102827400 <col:25> 'int' 2
|       | `-CompoundStmt 0x102827640 <line:37:9, line:43:2>
|       |   `-UnaryOperator 0x102827628 <line:41:13, col:18> '<dependent type>' contains-errors postfix '--' cannot overflow
|       |     `-RecoveryExpr 0x102827600 <col:13> '<dependent type>' contains-errors lvalue
|       |       `-DeclRefExpr 0x1028275e0 <col:13> 'int' lvalue ParmVar 0x10280dea8 'bytes' 'int'
|       `-IfStmt 0x1028288d0 <line:45:2, line:67:2>
|         |-BinaryOperator 0x102827758 <line:45:6, col:25> 'int' contains-errors '>='
|         | |-CXXDependentScopeMemberExpr 0x1028276a8 <col:6, col:13> '<dependent type>' contains-errors lvalue ->x
|         | | `-RecoveryExpr 0x102827688 <col:6> '<dependent type>' contains-errors lvalue
|         | `-CXXDependentScopeMemberExpr 0x102827710 <col:18, col:25> '<dependent type>' contains-errors lvalue ->bytes
|         |   `-RecoveryExpr 0x1028276f0 <col:18> '<dependent type>' contains-errors lvalue
|         `-CompoundStmt 0x1028288a8 <col:32, line:67:2>
|           |-IfStmt 0x1028284d0 <line:46:9, line:55:9>
|           | |-BinaryOperator 0x102827958 <line:46:13, col:66> 'int' contains-errors '&&'
|           | | |-BinaryOperator 0x102827848 <col:13, col:35> '<dependent type>' contains-errors '%'
|           | | | |-CXXDependentScopeMemberExpr 0x102827798 <col:13, col:20> '<dependent type>' contains-errors lvalue ->bytes
|           | | | | `-RecoveryExpr 0x102827778 <col:13> '<dependent type>' contains-errors lvalue
|           | | | `-CXXDependentScopeMemberExpr 0x102827800 <col:28, col:35> '<dependent type>' contains-errors lvalue ->xsize
|           | | |   `-RecoveryExpr 0x1028277e0 <col:28> '<dependent type>' contains-errors lvalue
|           | | `-BinaryOperator 0x102827938 <col:44, col:66> 'int' contains-errors '>'
|           | |   |-CXXDependentScopeMemberExpr 0x102827888 <col:44, col:51> '<dependent type>' contains-errors lvalue ->bytes
|           | |   | `-RecoveryExpr 0x102827868 <col:44> '<dependent type>' contains-errors lvalue
|           | |   `-CXXDependentScopeMemberExpr 0x1028278f0 <col:59, col:66> '<dependent type>' contains-errors lvalue ->xsize
|           | |     `-RecoveryExpr 0x1028278d0 <col:59> '<dependent type>' contains-errors lvalue
|           | `-CompoundStmt 0x1028284a0 <col:73, line:55:9>
|           |   |-DeclStmt 0x102827ae8 <line:47:13, col:52>
|           |   | `-VarDecl 0x102827990 <col:13, col:47> col:17 used bands 'int' cinit
|           |   |   `-BinaryOperator 0x102827ac8 <col:25, col:47> '<dependent type>' contains-errors '/'
|           |   |     |-CXXDependentScopeMemberExpr 0x102827a18 <col:25, col:32> '<dependent type>' contains-errors lvalue ->bytes
|           |   |     | `-RecoveryExpr 0x1028279f8 <col:25> '<dependent type>' contains-errors lvalue
|           |   |     `-CXXDependentScopeMemberExpr 0x102827a80 <col:40, col:47> '<dependent type>' contains-errors lvalue ->xsize
|           |   |       `-RecoveryExpr 0x102827a60 <col:40> '<dependent type>' contains-errors lvalue
|           |   |-DeclStmt 0x102827c28 <line:48:13, col:46>
|           |   | `-VarDecl 0x102827b18 <col:13, col:41> col:17 used stride 'int' cinit
|           |   |   `-BinaryOperator 0x102827c08 <col:26, col:41> '<dependent type>' contains-errors '/'
|           |   |     |-CXXDependentScopeMemberExpr 0x102827ba0 <col:26, col:33> '<dependent type>' contains-errors lvalue ->bytes
|           |   |     | `-RecoveryExpr 0x102827b80 <col:26> '<dependent type>' contains-errors lvalue
|           |   |     `-DeclRefExpr 0x102827be8 <col:41> 'int' contains-errors lvalue Var 0x102827990 'bands' 'int'
|           |   |-DeclStmt 0x102827cc0 <line:49:13, col:18>
|           |   | `-VarDecl 0x102827c58 <col:13, col:17> col:17 used i 'int'
|           |   `-ForStmt 0x102828468 <line:50:13, line:54:13>
|           |     |-BinaryOperator 0x102827d18 <line:50:18, col:20> 'int' '='
|           |     | |-DeclRefExpr 0x102827cd8 <col:18> 'int' lvalue Var 0x102827c58 'i' 'int'
|           |     | `-IntegerLiteral 0x102827cf8 <col:20> 'int' 1
|           |     |-<<<NULL>>>
|           |     |-BinaryOperator 0x102827da8 <col:23, col:26> 'int' contains-errors '<'
|           |     | |-ImplicitCastExpr 0x102827d78 <col:23> 'int' <LValueToRValue>
|           |     | | `-DeclRefExpr 0x102827d38 <col:23> 'int' lvalue Var 0x102827c58 'i' 'int'
|           |     | `-ImplicitCastExpr 0x102827d90 <col:26> 'int' contains-errors <LValueToRValue>
|           |     |   `-DeclRefExpr 0x102827d58 <col:26> 'int' contains-errors lvalue Var 0x102827990 'bands' 'int'
|           |     |-UnaryOperator 0x102827de8 <col:33, col:34> 'int' postfix '++'
|           |     | `-DeclRefExpr 0x102827dc8 <col:33> 'int' lvalue Var 0x102827c58 'i' 'int'
|           |     `-CompoundStmt 0x102828450 <col:38, line:54:13>
|           |       `-CallExpr 0x102828418 <line:51:17, line:53:37> '<dependent type>' contains-errors
|           |         |-DeclRefExpr 0x1028280c8 <line:51:17> 'void *(void *, const void *, unsigned long)' Function 0x102827e78 'memmove' 'void *(void *, const void *, unsigned long)'
|           |         |-UnaryOperator 0x102828230 <col:25, col:54> '<dependent type>' contains-errors prefix '&' cannot overflow
|           |         | `-ArraySubscriptExpr 0x102828210 <col:26, col:54> '<dependent type>' contains-errors lvalue
|           |         |   |-ImplicitCastExpr 0x1028281f8 <col:26, col:33> '<dependent type>' contains-errors <LValueToRValue>
|           |         |   | `-CXXDependentScopeMemberExpr 0x102828108 <col:26, col:33> '<dependent type>' contains-errors lvalue ->buffer
|           |         |   |   `-RecoveryExpr 0x1028280e8 <col:26> '<dependent type>' contains-errors lvalue
|           |         |   `-BinaryOperator 0x1028281d8 <col:40, col:49> '<dependent type>' contains-errors '*'
|           |         |     |-DeclRefExpr 0x102828150 <col:40> 'int' lvalue Var 0x102827c58 'i' 'int'
|           |         |     `-CXXDependentScopeMemberExpr 0x102828190 <col:42, col:49> '<dependent type>' contains-errors lvalue ->xsize
|           |         |       `-RecoveryExpr 0x102828170 <col:42> '<dependent type>' contains-errors lvalue
|           |         |-UnaryOperator 0x102828378 <line:52:25, col:48> '<dependent type>' contains-errors prefix '&' cannot overflow
|           |         | `-ArraySubscriptExpr 0x102828358 <col:26, col:48> '<dependent type>' contains-errors lvalue
|           |         |   |-ImplicitCastExpr 0x102828340 <col:26, col:33> '<dependent type>' contains-errors <LValueToRValue>
|           |         |   | `-CXXDependentScopeMemberExpr 0x102828268 <col:26, col:33> '<dependent type>' contains-errors lvalue ->buffer
|           |         |   |   `-RecoveryExpr 0x102828248 <col:26> '<dependent type>' contains-errors lvalue
|           |         |   `-BinaryOperator 0x102828320 <col:40, col:42> 'int' contains-errors '*'
|           |         |     |-ImplicitCastExpr 0x1028282f0 <col:40> 'int' <LValueToRValue>
|           |         |     | `-DeclRefExpr 0x1028282b0 <col:40> 'int' lvalue Var 0x102827c58 'i' 'int'
|           |         |     `-ImplicitCastExpr 0x102828308 <col:42> 'int' contains-errors <LValueToRValue>
|           |         |       `-DeclRefExpr 0x1028282d0 <col:42> 'int' contains-errors lvalue Var 0x102827b18 'stride' 'int'
|           |         `-CXXDependentScopeMemberExpr 0x1028283b0 <line:53:25, col:32> '<dependent type>' contains-errors lvalue ->xsize
|           |           `-RecoveryExpr 0x102828390 <col:25> '<dependent type>' contains-errors lvalue
|           |-BinaryOperator 0x102828700 <line:61:6, col:17> '<dependent type>' contains-errors '='
|           | |-CXXDependentScopeMemberExpr 0x102828698 <col:6, col:13> '<dependent type>' contains-errors lvalue ->x
|           | | `-RecoveryExpr 0x102828670 <col:6> '<dependent type>' contains-errors lvalue
|           | |   `-DeclRefExpr 0x102828650 <col:6> 'int' lvalue ParmVar 0x10280dd70 'state' 'int'
|           | `-IntegerLiteral 0x1028286e0 <col:17> 'int' 0
|           `-IfStmt 0x102828888 <line:63:6, line:66:6>
|             |-BinaryOperator 0x102828808 <line:63:10, col:31> 'int' contains-errors '>='
|             | |-UnaryOperator 0x102828788 <col:10, col:19> '<dependent type>' contains-errors prefix '++' cannot overflow
|             | | `-CXXDependentScopeMemberExpr 0x102828740 <col:12, col:19> '<dependent type>' contains-errors lvalue ->y
|             | |   `-RecoveryExpr 0x102828720 <col:12> '<dependent type>' contains-errors lvalue
|             | `-CXXDependentScopeMemberExpr 0x1028287c0 <col:24, col:31> '<dependent type>' contains-errors lvalue ->ysize
|             |   `-RecoveryExpr 0x1028287a0 <col:24> '<dependent type>' contains-errors lvalue
|             `-CompoundStmt 0x102828870 <col:38, line:66:6>
|               `-ReturnStmt 0x102828860 <line:65:3, col:11>
|                 `-UnaryOperator 0x102828848 <col:10, col:11> 'int' prefix '-'
|                   `-IntegerLiteral 0x102828828 <col:11> 'int' 1
|-FunctionDecl 0x103009b10 <line:6:9> col:9 implicit used strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x103009c10 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x103009c78 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x103009bb8 <<invalid sloc>> Implicit 887
`-FunctionDecl 0x102827e78 <line:51:17> col:17 implicit used memmove 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x102827f78 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x102827fe0 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x102828048 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x102827f20 <<invalid sloc>> Implicit 884
