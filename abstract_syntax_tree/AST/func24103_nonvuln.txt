TranslationUnitDecl 0x125041a08 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1250428b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x125041fd0 '__int128'
|-TypedefDecl 0x125042928 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x125041ff0 'unsigned __int128'
|-TypedefDecl 0x12581c830 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12581c600 'struct __NSConstantString_tag'
|   `-Record 0x125042980 '__NSConstantString_tag'
|-TypedefDecl 0x12581c898 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x125042190 '__SVInt8_t'
|-TypedefDecl 0x12581c900 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x1250421b0 '__SVInt16_t'
|-TypedefDecl 0x12581c968 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x1250421d0 '__SVInt32_t'
|-TypedefDecl 0x12581c9d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x1250421f0 '__SVInt64_t'
|-TypedefDecl 0x12581ca38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x125042210 '__SVUint8_t'
|-TypedefDecl 0x12581caa0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x125042230 '__SVUint16_t'
|-TypedefDecl 0x12581cb08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x125042250 '__SVUint32_t'
|-TypedefDecl 0x12581cb70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x125042270 '__SVUint64_t'
|-TypedefDecl 0x12581cbd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x125042290 '__SVFloat16_t'
|-TypedefDecl 0x12581cc40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x1250422b0 '__SVFloat32_t'
|-TypedefDecl 0x12581cca8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x1250422d0 '__SVFloat64_t'
|-TypedefDecl 0x12581cd10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x1250422f0 '__SVBfloat16_t'
|-TypedefDecl 0x12581cd78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x125042310 '__clang_svint8x2_t'
|-TypedefDecl 0x12581cde0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x125042330 '__clang_svint16x2_t'
|-TypedefDecl 0x12581ce48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x125042350 '__clang_svint32x2_t'
|-TypedefDecl 0x12581ceb0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x125042370 '__clang_svint64x2_t'
|-TypedefDecl 0x12581cf18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x125042390 '__clang_svuint8x2_t'
|-TypedefDecl 0x12581cf80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x1250423b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12581cfe8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x1250423d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12581d050 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x1250423f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12581d0b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x125042410 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12581d120 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x125042430 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12581d188 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x125042450 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12581d1f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x125042470 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12581d258 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x125042490 '__clang_svint8x3_t'
|-TypedefDecl 0x12581d2c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1250424b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12581d328 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1250424d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12581d390 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1250424f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12581d3f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x125042510 '__clang_svuint8x3_t'
|-TypedefDecl 0x12581d460 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x125042530 '__clang_svuint16x3_t'
|-TypedefDecl 0x12581d4c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x125042550 '__clang_svuint32x3_t'
|-TypedefDecl 0x12581d530 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x125042570 '__clang_svuint64x3_t'
|-TypedefDecl 0x12581d598 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x125042590 '__clang_svfloat16x3_t'
|-TypedefDecl 0x125821400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1250425b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x125821468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1250425d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1258214d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1250425f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x125821538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x125042610 '__clang_svint8x4_t'
|-TypedefDecl 0x1258215a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x125042630 '__clang_svint16x4_t'
|-TypedefDecl 0x125821608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x125042650 '__clang_svint32x4_t'
|-TypedefDecl 0x125821670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x125042670 '__clang_svint64x4_t'
|-TypedefDecl 0x1258216d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x125042690 '__clang_svuint8x4_t'
|-TypedefDecl 0x125821740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1250426b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1258217a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1250426d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x125821810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1250426f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x125821878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x125042710 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1258218e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x125042730 '__clang_svfloat32x4_t'
|-TypedefDecl 0x125821948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x125042750 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1258219b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x125042770 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x125821a18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x125042790 '__SVBool_t'
|-TypedefDecl 0x125821a80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1250427b0 '__clang_svboolx2_t'
|-TypedefDecl 0x125821ae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1250427d0 '__clang_svboolx4_t'
|-TypedefDecl 0x125821b50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1250427f0 '__SVCount_t'
|-TypedefDecl 0x125821bf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x125821bb0 'char *'
|   `-BuiltinType 0x125041ab0 'char'
|-TypedefDecl 0x125821c68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x125821bb0 'char *'
|   `-BuiltinType 0x125041ab0 'char'
`-FunctionDecl 0x125822350 <dataset_diviso_filec/func24103_nonvuln.c:1:1, line:48:1> line:1:13 sco_conn_ready 'void (struct sco_conn *)' static
  |-ParmVarDecl 0x125822248 <col:28, col:45> col:45 used conn 'struct sco_conn *'
  `-CompoundStmt 0x1260091d0 <line:2:1, line:48:1>
    |-DeclStmt 0x12583a838 <line:3:2, col:21>
    | |-RecordDecl 0x12583a648 <col:2, col:9> col:9 struct sock
    | `-VarDecl 0x12583a7b8 <col:2, col:15> col:15 used parent 'struct sock *'
    |-DeclStmt 0x12583a9a0 <line:4:2, col:28>
    | `-VarDecl 0x12583a8d8 <col:2, col:26> col:15 used sk 'struct sock *' cinit
    |   `-RecoveryExpr 0x12583a978 <col:20, col:26> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x12583a940 <col:20> 'struct sco_conn *' lvalue ParmVar 0x125822248 'conn' 'struct sco_conn *'
    |-CallExpr 0x12583abc8 <line:6:2, col:20> 'int'
    | |-ImplicitCastExpr 0x12583abb0 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x12583aae0 <col:2> 'int ()' Function 0x12583aa28 'BT_DBG' 'int ()'
    | |-ImplicitCastExpr 0x12583abf8 <col:9> 'char *' <ArrayToPointerDecay>
    | | `-StringLiteral 0x12583ab40 <col:9> 'char[4]' lvalue "STR"
    | `-ImplicitCastExpr 0x12583ac10 <col:16> 'struct sco_conn *' <LValueToRValue>
    |   `-DeclRefExpr 0x12583ab60 <col:16> 'struct sco_conn *' lvalue ParmVar 0x125822248 'conn' 'struct sco_conn *'
    |-CallExpr 0x12583ad60 <line:8:2, col:20> 'int'
    | |-ImplicitCastExpr 0x12583ad48 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x12583ad08 <col:2> 'int ()' Function 0x12583ac50 'sco_conn_lock' 'int ()'
    | `-ImplicitCastExpr 0x12583ad88 <col:16> 'struct sco_conn *' <LValueToRValue>
    |   `-DeclRefExpr 0x12583ad28 <col:16> 'struct sco_conn *' lvalue ParmVar 0x125822248 'conn' 'struct sco_conn *'
    |-IfStmt 0x126009008 <line:10:2, line:44:2> has_else
    | |-ImplicitCastExpr 0x12583adc0 <line:10:6> 'struct sock *' contains-errors <LValueToRValue>
    | | `-DeclRefExpr 0x12583ada0 <col:6> 'struct sock *' contains-errors lvalue Var 0x12583a8d8 'sk' 'struct sock *'
    | |-CompoundStmt 0x12583b3c0 <col:10, line:16:2>
    | | |-CallExpr 0x12583af10 <line:11:3, col:26> 'int' contains-errors
    | | | |-ImplicitCastExpr 0x12583aef8 <col:3> 'int (*)()' <FunctionToPointerDecay>
    | | | | `-DeclRefExpr 0x12583aeb8 <col:3> 'int ()' Function 0x12583ae00 'sco_sock_clear_timer' 'int ()'
    | | | `-ImplicitCastExpr 0x12583af38 <col:24> 'struct sock *' contains-errors <LValueToRValue>
    | | |   `-DeclRefExpr 0x12583aed8 <col:24> 'struct sock *' contains-errors lvalue Var 0x12583a8d8 'sk' 'struct sock *'
    | | |-CallExpr 0x12583b088 <line:12:3, col:18> 'int' contains-errors
    | | | |-ImplicitCastExpr 0x12583b070 <col:3> 'int (*)()' <FunctionToPointerDecay>
    | | | | `-DeclRefExpr 0x12583b030 <col:3> 'int ()' Function 0x12583af78 'bh_lock_sock' 'int ()'
    | | | `-ImplicitCastExpr 0x12583b0b0 <col:16> 'struct sock *' contains-errors <LValueToRValue>
    | | |   `-DeclRefExpr 0x12583b050 <col:16> 'struct sock *' contains-errors lvalue Var 0x12583a8d8 'sk' 'struct sock *'
    | | |-BinaryOperator 0x12583b180 <line:13:3, col:18> '<dependent type>' contains-errors '='
    | | | |-RecoveryExpr 0x12583b100 <col:3, col:7> '<dependent type>' contains-errors lvalue
    | | | | `-DeclRefExpr 0x12583b0c8 <col:3> 'struct sock *' contains-errors lvalue Var 0x12583a8d8 'sk' 'struct sock *'
    | | | `-RecoveryExpr 0x12583b160 <col:18> '<dependent type>' contains-errors lvalue
    | | |-CallExpr 0x12583b220 <line:14:3, col:25> '<dependent type>' contains-errors
    | | | |-RecoveryExpr 0x12583b1d8 <col:3, col:7> '<dependent type>' contains-errors lvalue
    | | | | `-DeclRefExpr 0x12583b1a0 <col:3> 'struct sock *' contains-errors lvalue Var 0x12583a8d8 'sk' 'struct sock *'
    | | | `-DeclRefExpr 0x12583b200 <col:23> 'struct sock *' contains-errors lvalue Var 0x12583a8d8 'sk' 'struct sock *'
    | | `-CallExpr 0x12583b380 <line:15:3, col:20> 'int' contains-errors
    | |   |-ImplicitCastExpr 0x12583b368 <col:3> 'int (*)()' <FunctionToPointerDecay>
    | |   | `-DeclRefExpr 0x12583b328 <col:3> 'int ()' Function 0x12583b270 'bh_unlock_sock' 'int ()'
    | |   `-ImplicitCastExpr 0x12583b3a8 <col:18> 'struct sock *' contains-errors <LValueToRValue>
    | |     `-DeclRefExpr 0x12583b348 <col:18> 'struct sock *' contains-errors lvalue Var 0x12583a8d8 'sk' 'struct sock *'
    | `-CompoundStmt 0x126008f98 <line:16:9, line:44:2>
    |   |-BinaryOperator 0x12583b5a0 <line:17:3, col:41> 'struct sock *' contains-errors '='
    |   | |-DeclRefExpr 0x12583b3f8 <col:3> 'struct sock *' lvalue Var 0x12583a7b8 'parent' 'struct sock *'
    |   | `-CallExpr 0x12583b578 <col:12, col:41> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x12583b4f8 <col:12> 'int ()' Function 0x12583b440 'sco_get_sock_listen' 'int ()'
    |   |   `-RecoveryExpr 0x12583b550 <col:32, col:38> '<dependent type>' contains-errors lvalue
    |   |     `-DeclRefExpr 0x12583b518 <col:32> 'struct sco_conn *' lvalue ParmVar 0x125822248 'conn' 'struct sco_conn *'
    |   |-IfStmt 0x125033280 <line:18:3, line:19:9>
    |   | |-UnaryOperator 0x125033200 <line:18:7, col:8> 'int' prefix '!' cannot overflow
    |   | | `-ImplicitCastExpr 0x12583b5e0 <col:8> 'struct sock *' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x12583b5c0 <col:8> 'struct sock *' lvalue Var 0x12583a7b8 'parent' 'struct sock *'
    |   | `-GotoStmt 0x125033268 <line:19:4, col:9> 'done' 0x125033218
    |   |-CallExpr 0x1250332f8 <line:21:3, col:22> 'int'
    |   | |-ImplicitCastExpr 0x1250332e0 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x1250332a0 <col:3> 'int ()' Function 0x12583af78 'bh_lock_sock' 'int ()'
    |   | `-ImplicitCastExpr 0x125033320 <col:16> 'struct sock *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x1250332c0 <col:16> 'struct sock *' lvalue Var 0x12583a7b8 'parent' 'struct sock *'
    |   |-BinaryOperator 0x1250337c8 <line:23:3, line:24:28> 'struct sock *' contains-errors '='
    |   | |-DeclRefExpr 0x125033338 <line:23:3> 'struct sock *' contains-errors lvalue Var 0x12583a8d8 'sk' 'struct sock *'
    |   | `-CallExpr 0x125033788 <col:8, line:24:28> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x125033438 <line:23:8> 'int ()' Function 0x125033380 'sco_sock_alloc' 'int ()'
    |   |   |-CallExpr 0x1250336e8 <col:23, col:38> 'int'
    |   |   | |-ImplicitCastExpr 0x1250336d0 <col:23> 'int (*)()' <FunctionToPointerDecay>
    |   |   | | `-DeclRefExpr 0x125033538 <col:23> 'int ()' Function 0x125033480 'sock_net' 'int ()'
    |   |   | `-ImplicitCastExpr 0x125033710 <col:32> 'struct sock *' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x125033558 <col:32> 'struct sock *' lvalue Var 0x12583a7b8 'parent' 'struct sock *'
    |   |   |-RecoveryExpr 0x125033728 <col:41> '<dependent type>' contains-errors lvalue
    |   |   |-RecoveryExpr 0x125033748 <line:24:5> '<dependent type>' contains-errors lvalue
    |   |   `-RecoveryExpr 0x125033768 <col:18> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x125033908 <line:25:3, line:28:3>
    |   | |-UnaryOperator 0x125033820 <line:25:7, col:8> 'int' contains-errors prefix '!' cannot overflow
    |   | | `-ImplicitCastExpr 0x125033808 <col:8> 'struct sock *' contains-errors <LValueToRValue>
    |   | |   `-DeclRefExpr 0x1250337e8 <col:8> 'struct sock *' contains-errors lvalue Var 0x12583a8d8 'sk' 'struct sock *'
    |   | `-CompoundStmt 0x1250338e8 <col:12, line:28:3>
    |   |   |-CallExpr 0x125033890 <line:26:4, col:25> 'int'
    |   |   | |-ImplicitCastExpr 0x125033878 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |   |   | | `-DeclRefExpr 0x125033838 <col:4> 'int ()' Function 0x12583b270 'bh_unlock_sock' 'int ()'
    |   |   | `-ImplicitCastExpr 0x1250338b8 <col:19> 'struct sock *' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x125033858 <col:19> 'struct sock *' lvalue Var 0x12583a7b8 'parent' 'struct sock *'
    |   |   `-GotoStmt 0x1250338d0 <line:27:4, col:9> 'done' 0x125033218
    |   |-CallExpr 0x125033a80 <line:30:3, col:27> 'int' contains-errors
    |   | |-ImplicitCastExpr 0x125033a68 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x125033a08 <col:3> 'int ()' Function 0x125033950 'sco_sock_init' 'int ()'
    |   | |-ImplicitCastExpr 0x125033ab0 <col:17> 'struct sock *' contains-errors <LValueToRValue>
    |   | | `-DeclRefExpr 0x125033a28 <col:17> 'struct sock *' contains-errors lvalue Var 0x12583a8d8 'sk' 'struct sock *'
    |   | `-ImplicitCastExpr 0x125033ac8 <col:21> 'struct sock *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x125033a48 <col:21> 'struct sock *' lvalue Var 0x12583a7b8 'parent' 'struct sock *'
    |   |-CallExpr 0x125033df8 <line:32:3, col:35> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x125033bc0 <col:3> 'int ()' Function 0x125033b08 'bacpy' 'int ()'
    |   | |-UnaryOperator 0x125033d80 <col:9, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | | `-RecoveryExpr 0x125033d58 <col:10, col:21> '<dependent type>' contains-errors lvalue
    |   | |   `-CallExpr 0x125033d18 <col:10, col:18> 'int' contains-errors
    |   | |     |-ImplicitCastExpr 0x125033d00 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |   | |     | `-DeclRefExpr 0x125033cc0 <col:10> 'int ()' Function 0x125033c08 'bt_sk' 'int ()'
    |   | |     `-ImplicitCastExpr 0x125033d40 <col:16> 'struct sock *' contains-errors <LValueToRValue>
    |   | |       `-DeclRefExpr 0x125033ce0 <col:16> 'struct sock *' contains-errors lvalue Var 0x12583a8d8 'sk' 'struct sock *'
    |   | `-RecoveryExpr 0x125033dd0 <col:26, col:32> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x125033d98 <col:26> 'struct sco_conn *' lvalue ParmVar 0x125822248 'conn' 'struct sco_conn *'
    |   |-CallExpr 0x125033f80 <line:33:3, col:35> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x125033e28 <col:3> 'int ()' Function 0x125033b08 'bacpy' 'int ()'
    |   | |-UnaryOperator 0x125033f08 <col:9, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | | `-RecoveryExpr 0x125033ee0 <col:10, col:21> '<dependent type>' contains-errors lvalue
    |   | |   `-CallExpr 0x125033ea0 <col:10, col:18> 'int' contains-errors
    |   | |     |-ImplicitCastExpr 0x125033e88 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |   | |     | `-DeclRefExpr 0x125033e48 <col:10> 'int ()' Function 0x125033c08 'bt_sk' 'int ()'
    |   | |     `-ImplicitCastExpr 0x125033ec8 <col:16> 'struct sock *' contains-errors <LValueToRValue>
    |   | |       `-DeclRefExpr 0x125033e68 <col:16> 'struct sock *' contains-errors lvalue Var 0x12583a8d8 'sk' 'struct sock *'
    |   | `-RecoveryExpr 0x125033f58 <col:26, col:32> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x125033f20 <col:26> 'struct sco_conn *' lvalue ParmVar 0x125822248 'conn' 'struct sco_conn *'
    |   |-CallExpr 0x125034110 <line:35:3, col:27> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x125034090 <col:3> 'int ()' Function 0x125033fd8 'hci_conn_hold' 'int ()'
    |   | `-RecoveryExpr 0x1250340e8 <col:17, col:23> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x1250340b0 <col:17> 'struct sco_conn *' lvalue ParmVar 0x125822248 'conn' 'struct sco_conn *'
    |   |-CallExpr 0x126008d50 <line:36:3, col:34> 'int' contains-errors
    |   | |-ImplicitCastExpr 0x126008d38 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x126008cb8 <col:3> 'int ()' Function 0x126008c00 '__sco_chan_add' 'int ()'
    |   | |-ImplicitCastExpr 0x126008d88 <col:18> 'struct sco_conn *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x126008cd8 <col:18> 'struct sco_conn *' lvalue ParmVar 0x125822248 'conn' 'struct sco_conn *'
    |   | |-ImplicitCastExpr 0x126008da0 <col:24> 'struct sock *' contains-errors <LValueToRValue>
    |   | | `-DeclRefExpr 0x126008cf8 <col:24> 'struct sock *' contains-errors lvalue Var 0x12583a8d8 'sk' 'struct sock *'
    |   | `-ImplicitCastExpr 0x126008db8 <col:28> 'struct sock *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x126008d18 <col:28> 'struct sock *' lvalue Var 0x12583a7b8 'parent' 'struct sock *'
    |   |-CallExpr 0x126008ed0 <line:41:3, col:34> '<dependent type>' contains-errors
    |   | |-RecoveryExpr 0x126008e68 <col:3, col:11> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x126008e30 <col:3> 'struct sock *' lvalue Var 0x12583a7b8 'parent' 'struct sock *'
    |   | |-DeclRefExpr 0x126008e90 <col:25> 'struct sock *' lvalue Var 0x12583a7b8 'parent' 'struct sock *'
    |   | `-IntegerLiteral 0x126008eb0 <col:33> 'int' 1
    |   `-CallExpr 0x126008f58 <line:43:3, col:24> 'int'
    |     |-ImplicitCastExpr 0x126008f40 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x126008f00 <col:3> 'int ()' Function 0x12583b270 'bh_unlock_sock' 'int ()'
    |     `-ImplicitCastExpr 0x126008f80 <col:18> 'struct sock *' <LValueToRValue>
    |       `-DeclRefExpr 0x126008f20 <col:18> 'struct sock *' lvalue Var 0x12583a7b8 'parent' 'struct sock *'
    `-LabelStmt 0x1260091b0 <line:46:1, line:47:22> 'done'
      `-CallExpr 0x126009170 <col:2, col:22> 'int'
        |-ImplicitCastExpr 0x126009158 <col:2> 'int (*)()' <FunctionToPointerDecay>
        | `-DeclRefExpr 0x126009118 <col:2> 'int ()' Function 0x126009060 'sco_conn_unlock' 'int ()'
        `-ImplicitCastExpr 0x126009198 <col:18> 'struct sco_conn *' <LValueToRValue>
          `-DeclRefExpr 0x126009138 <col:18> 'struct sco_conn *' lvalue ParmVar 0x125822248 'conn' 'struct sco_conn *'
