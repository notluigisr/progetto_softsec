TranslationUnitDecl 0x158855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1588564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x158855bd0 '__int128'
|-TypedefDecl 0x158856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x158855bf0 'unsigned __int128'
|-TypedefDecl 0x158926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x158926000 'struct __NSConstantString_tag'
|   `-Record 0x158856580 '__NSConstantString_tag'
|-TypedefDecl 0x158926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x158855d90 '__SVInt8_t'
|-TypedefDecl 0x158926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x158855db0 '__SVInt16_t'
|-TypedefDecl 0x158926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x158855dd0 '__SVInt32_t'
|-TypedefDecl 0x1589263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x158855df0 '__SVInt64_t'
|-TypedefDecl 0x158926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x158855e10 '__SVUint8_t'
|-TypedefDecl 0x1589264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x158855e30 '__SVUint16_t'
|-TypedefDecl 0x158926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x158855e50 '__SVUint32_t'
|-TypedefDecl 0x158926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x158855e70 '__SVUint64_t'
|-TypedefDecl 0x1589265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x158855e90 '__SVFloat16_t'
|-TypedefDecl 0x158926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x158855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1589266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x158855ed0 '__SVFloat64_t'
|-TypedefDecl 0x158926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x158855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x158926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x158855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1589267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x158855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x158926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x158855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1589268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x158855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x158926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x158855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x158926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x158855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1589269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x158855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x158926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x158855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x158926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x158856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x158926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x158856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x158926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x158856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x158926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x158856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x158926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x158856090 '__clang_svint8x3_t'
|-TypedefDecl 0x158926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1588560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x158926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1588560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x158926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1588560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x158926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x158856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x158926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x158856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x158926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x158856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x158926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x158856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x158926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x158856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x158927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1588561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x158927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1588561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1589278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1588561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x158927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x158856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1589279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x158856230 '__clang_svint16x4_t'
|-TypedefDecl 0x158927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x158856250 '__clang_svint32x4_t'
|-TypedefDecl 0x158927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x158856270 '__clang_svint64x4_t'
|-TypedefDecl 0x158927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x158856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x158927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1588562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x158927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1588562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x158927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1588562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x158927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x158856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x158927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x158856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x158927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x158856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x158927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x158856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x158927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x158856390 '__SVBool_t'
|-TypedefDecl 0x158927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1588563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x158927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1588563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x158927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1588563f0 '__SVCount_t'
|-TypedefDecl 0x158927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x158927fb0 'char *'
|   `-BuiltinType 0x1588556b0 'char'
|-TypedefDecl 0x158928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x158927fb0 'char *'
|   `-BuiltinType 0x1588556b0 'char'
`-FunctionDecl 0x1589284a8 <dataset_diviso_filec/func98_nonvuln.c:1:1, line:16:1> line:1:1 c_valid_time_p 'int (int, int, int, int *, int *, int *)'
  |-ParmVarDecl 0x1589280d8 <col:16, col:20> col:20 used h 'int'
  |-ParmVarDecl 0x158928158 <col:23, col:27> col:27 used min 'int'
  |-ParmVarDecl 0x1589281d8 <col:32, col:36> col:36 used s 'int'
  |-ParmVarDecl 0x158928288 <col:39, col:44> col:44 used rh 'int *'
  |-ParmVarDecl 0x158928308 <col:48, col:53> col:53 used rmin 'int *'
  |-ParmVarDecl 0x158928388 <col:59, col:64> col:64 used rs 'int *'
  `-CompoundStmt 0x1589412a0 <line:2:1, line:16:1>
    |-IfStmt 0x1589286b0 <line:3:5, line:4:7>
    | |-BinaryOperator 0x158928620 <line:3:9, col:13> 'int' '<'
    | | |-ImplicitCastExpr 0x158928608 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1589285c8 <col:9> 'int' lvalue ParmVar 0x1589280d8 'h' 'int'
    | | `-IntegerLiteral 0x1589285e8 <col:13> 'int' 0
    | `-CompoundAssignOperator 0x158928680 <line:4:2, col:7> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |   |-DeclRefExpr 0x158928640 <col:2> 'int' lvalue ParmVar 0x1589280d8 'h' 'int'
    |   `-IntegerLiteral 0x158928660 <col:7> 'int' 24
    |-IfStmt 0x1589287b8 <line:5:5, line:6:9>
    | |-BinaryOperator 0x158928728 <line:5:9, col:15> 'int' '<'
    | | |-ImplicitCastExpr 0x158928710 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1589286d0 <col:9> 'int' lvalue ParmVar 0x158928158 'min' 'int'
    | | `-IntegerLiteral 0x1589286f0 <col:15> 'int' 0
    | `-CompoundAssignOperator 0x158928788 <line:6:2, col:9> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |   |-DeclRefExpr 0x158928748 <col:2> 'int' lvalue ParmVar 0x158928158 'min' 'int'
    |   `-IntegerLiteral 0x158928768 <col:9> 'int' 60
    |-IfStmt 0x158940ac8 <line:7:5, line:8:7>
    | |-BinaryOperator 0x158940a38 <line:7:9, col:13> 'int' '<'
    | | |-ImplicitCastExpr 0x158940a20 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1589287d8 <col:9> 'int' lvalue ParmVar 0x1589281d8 's' 'int'
    | | `-IntegerLiteral 0x158940a00 <col:13> 'int' 0
    | `-CompoundAssignOperator 0x158940a98 <line:8:2, col:7> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |   |-DeclRefExpr 0x158940a58 <col:2> 'int' lvalue ParmVar 0x1589281d8 's' 'int'
    |   `-IntegerLiteral 0x158940a78 <col:7> 'int' 60
    |-BinaryOperator 0x158940b70 <line:9:5, col:11> 'int' '='
    | |-UnaryOperator 0x158940b20 <col:5, col:6> 'int' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x158940b08 <col:6> 'int *' <LValueToRValue>
    | |   `-DeclRefExpr 0x158940ae8 <col:6> 'int *' lvalue ParmVar 0x158928288 'rh' 'int *'
    | `-ImplicitCastExpr 0x158940b58 <col:11> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x158940b38 <col:11> 'int' lvalue ParmVar 0x1589280d8 'h' 'int'
    |-BinaryOperator 0x158940c18 <line:10:5, col:13> 'int' '='
    | |-UnaryOperator 0x158940bc8 <col:5, col:6> 'int' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x158940bb0 <col:6> 'int *' <LValueToRValue>
    | |   `-DeclRefExpr 0x158940b90 <col:6> 'int *' lvalue ParmVar 0x158928308 'rmin' 'int *'
    | `-ImplicitCastExpr 0x158940c00 <col:13> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x158940be0 <col:13> 'int' lvalue ParmVar 0x158928158 'min' 'int'
    |-BinaryOperator 0x158940cc0 <line:11:5, col:11> 'int' '='
    | |-UnaryOperator 0x158940c70 <col:5, col:6> 'int' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x158940c58 <col:6> 'int *' <LValueToRValue>
    | |   `-DeclRefExpr 0x158940c38 <col:6> 'int *' lvalue ParmVar 0x158928388 'rs' 'int *'
    | `-ImplicitCastExpr 0x158940ca8 <col:11> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x158940c88 <col:11> 'int' lvalue ParmVar 0x1589281d8 's' 'int'
    `-ReturnStmt 0x158941290 <line:12:5, line:15:38>
      `-UnaryOperator 0x158941278 <line:12:12, line:15:38> 'int' prefix '!' cannot overflow
        `-ParenExpr 0x158941258 <line:12:13, line:15:38> 'int'
          `-BinaryOperator 0x158941238 <line:12:14, line:15:37> 'int' '||'
            |-BinaryOperator 0x158941030 <line:12:14, line:14:24> 'int' '||'
            | |-BinaryOperator 0x158940f98 <line:12:14, line:14:13> 'int' '||'
            | | |-BinaryOperator 0x158940f00 <line:12:14, line:13:24> 'int' '||'
            | | | |-BinaryOperator 0x158940e68 <line:12:14, line:13:13> 'int' '||'
            | | | | |-BinaryOperator 0x158940dd0 <line:12:14, col:31> 'int' '||'
            | | | | | |-BinaryOperator 0x158940d38 <col:14, col:20> 'int' '<'
            | | | | | | |-ImplicitCastExpr 0x158940d20 <col:14> 'int' <LValueToRValue>
            | | | | | | | `-DeclRefExpr 0x158940ce0 <col:14> 'int' lvalue ParmVar 0x1589280d8 'h' 'int'
            | | | | | | `-IntegerLiteral 0x158940d00 <col:20> 'int' 0
            | | | | | `-BinaryOperator 0x158940db0 <col:25, col:31> 'int' '>'
            | | | | |   |-ImplicitCastExpr 0x158940d98 <col:25> 'int' <LValueToRValue>
            | | | | |   | `-DeclRefExpr 0x158940d58 <col:25> 'int' lvalue ParmVar 0x1589280d8 'h' 'int'
            | | | | |   `-IntegerLiteral 0x158940d78 <col:31> 'int' 24
            | | | | `-BinaryOperator 0x158940e48 <line:13:7, col:13> 'int' '<'
            | | | |   |-ImplicitCastExpr 0x158940e30 <col:7> 'int' <LValueToRValue>
            | | | |   | `-DeclRefExpr 0x158940df0 <col:7> 'int' lvalue ParmVar 0x158928158 'min' 'int'
            | | | |   `-IntegerLiteral 0x158940e10 <col:13> 'int' 0
            | | | `-BinaryOperator 0x158940ee0 <col:18, col:24> 'int' '>'
            | | |   |-ImplicitCastExpr 0x158940ec8 <col:18> 'int' <LValueToRValue>
            | | |   | `-DeclRefExpr 0x158940e88 <col:18> 'int' lvalue ParmVar 0x158928158 'min' 'int'
            | | |   `-IntegerLiteral 0x158940ea8 <col:24> 'int' 59
            | | `-BinaryOperator 0x158940f78 <line:14:7, col:13> 'int' '<'
            | |   |-ImplicitCastExpr 0x158940f60 <col:7> 'int' <LValueToRValue>
            | |   | `-DeclRefExpr 0x158940f20 <col:7> 'int' lvalue ParmVar 0x1589281d8 's' 'int'
            | |   `-IntegerLiteral 0x158940f40 <col:13> 'int' 0
            | `-BinaryOperator 0x158941010 <col:18, col:24> 'int' '>'
            |   |-ImplicitCastExpr 0x158940ff8 <col:18> 'int' <LValueToRValue>
            |   | `-DeclRefExpr 0x158940fb8 <col:18> 'int' lvalue ParmVar 0x1589281d8 's' 'int'
            |   `-IntegerLiteral 0x158940fd8 <col:24> 'int' 59
            `-ParenExpr 0x158941218 <line:15:7, col:37> 'int'
              `-BinaryOperator 0x1589411f8 <col:8, col:36> 'int' '&&'
                |-BinaryOperator 0x1589410a8 <col:8, col:13> 'int' '=='
                | |-ImplicitCastExpr 0x158941090 <col:8> 'int' <LValueToRValue>
                | | `-DeclRefExpr 0x158941050 <col:8> 'int' lvalue ParmVar 0x1589280d8 'h' 'int'
                | `-IntegerLiteral 0x158941070 <col:13> 'int' 24
                `-ParenExpr 0x1589411d8 <col:19, col:36> 'int'
                  `-BinaryOperator 0x1589411b8 <col:20, col:35> 'int' '||'
                    |-BinaryOperator 0x158941120 <col:20, col:26> 'int' '>'
                    | |-ImplicitCastExpr 0x158941108 <col:20> 'int' <LValueToRValue>
                    | | `-DeclRefExpr 0x1589410c8 <col:20> 'int' lvalue ParmVar 0x158928158 'min' 'int'
                    | `-IntegerLiteral 0x1589410e8 <col:26> 'int' 0
                    `-BinaryOperator 0x158941198 <col:31, col:35> 'int' '>'
                      |-ImplicitCastExpr 0x158941180 <col:31> 'int' <LValueToRValue>
                      | `-DeclRefExpr 0x158941140 <col:31> 'int' lvalue ParmVar 0x1589281d8 's' 'int'
                      `-IntegerLiteral 0x158941160 <col:35> 'int' 0
