TranslationUnitDecl 0x15a055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x15a0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x15a055bd0 '__int128'
|-TypedefDecl 0x15a056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x15a055bf0 'unsigned __int128'
|-TypedefDecl 0x15a80be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15a80bc00 'struct __NSConstantString_tag'
|   `-Record 0x15a056580 '__NSConstantString_tag'
|-TypedefDecl 0x15a80be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x15a055d90 '__SVInt8_t'
|-TypedefDecl 0x15a80bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x15a055db0 '__SVInt16_t'
|-TypedefDecl 0x15a80bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x15a055dd0 '__SVInt32_t'
|-TypedefDecl 0x15a80bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x15a055df0 '__SVInt64_t'
|-TypedefDecl 0x15a80c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x15a055e10 '__SVUint8_t'
|-TypedefDecl 0x15a80c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x15a055e30 '__SVUint16_t'
|-TypedefDecl 0x15a80c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x15a055e50 '__SVUint32_t'
|-TypedefDecl 0x15a80c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x15a055e70 '__SVUint64_t'
|-TypedefDecl 0x15a80c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x15a055e90 '__SVFloat16_t'
|-TypedefDecl 0x15a80c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x15a055eb0 '__SVFloat32_t'
|-TypedefDecl 0x15a80c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x15a055ed0 '__SVFloat64_t'
|-TypedefDecl 0x15a80c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x15a055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15a80c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x15a055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15a80c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x15a055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15a80c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x15a055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15a80c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x15a055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15a80c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x15a055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15a80c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x15a055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15a80c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x15a055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15a80c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x15a055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15a80c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x15a056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15a80c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x15a056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15a80c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x15a056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15a80c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x15a056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15a80c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x15a056090 '__clang_svint8x3_t'
|-TypedefDecl 0x15a80c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x15a0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15a80c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x15a0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15a80c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x15a0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15a80c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x15a056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15a80ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x15a056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15a80cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x15a056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15a80cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x15a056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15a80cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x15a056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15a80d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x15a0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15a80d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x15a0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15a80d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x15a0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15a80d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x15a056210 '__clang_svint8x4_t'
|-TypedefDecl 0x15a80d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x15a056230 '__clang_svint16x4_t'
|-TypedefDecl 0x15a80d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x15a056250 '__clang_svint32x4_t'
|-TypedefDecl 0x15a80d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x15a056270 '__clang_svint64x4_t'
|-TypedefDecl 0x15a80d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x15a056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15a80d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x15a0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15a80d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x15a0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15a80d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x15a0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15a80d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x15a056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15a80d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x15a056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15a80d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x15a056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15a80d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x15a056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15a80da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x15a056390 '__SVBool_t'
|-TypedefDecl 0x15a80da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x15a0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15a80dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x15a0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15a80db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x15a0563f0 '__SVCount_t'
|-TypedefDecl 0x15a80dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15a80dbb0 'char *'
|   `-BuiltinType 0x15a0556b0 'char'
|-TypedefDecl 0x15a80dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15a80dbb0 'char *'
|   `-BuiltinType 0x15a0556b0 'char'
`-FunctionDecl 0x15a80deb0 <dataset_diviso_filec/func6251_nonvuln.c:1:1, line:29:1> line:1:13 invalid read_binary_datetime 'void (int *, char **)' static
  |-ParmVarDecl 0x15a80dd28 <col:34, col:46> col:46 referenced invalid tm 'int *'
  |-ParmVarDecl 0x15a80ddd8 <col:50, col:58> col:58 used pos 'char **'
  `-CompoundStmt 0x15a8297f0 <line:2:1, line:29:1>
    |-DeclStmt 0x15a80e208 <line:3:3, col:37>
    | `-VarDecl 0x15a80df80 <col:3, col:36> col:8 used length 'int' cinit
    |   `-CallExpr 0x15a80e1c8 <col:16, col:36> 'int'
    |     |-ImplicitCastExpr 0x15a80e1b0 <col:16> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x15a80e140 <col:16> 'int ()' Function 0x15a80e088 'net_field_length' 'int ()'
    |     `-ImplicitCastExpr 0x15a80e1f0 <col:33> 'char **' <LValueToRValue>
    |       `-DeclRefExpr 0x15a80e160 <col:33> 'char **' lvalue ParmVar 0x15a80ddd8 'pos' 'char **'
    `-IfStmt 0x15a8297c0 <line:5:3, line:28:5> has_else
      |-ImplicitCastExpr 0x15a80e240 <line:5:7> 'int' <LValueToRValue>
      | `-DeclRefExpr 0x15a80e220 <col:7> 'int' lvalue Var 0x15a80df80 'length' 'int'
      |-CompoundStmt 0x15a829638 <line:6:3, line:26:3>
      | |-DeclStmt 0x15a80e340 <line:7:5, col:20>
      | | `-VarDecl 0x15a80e270 <col:5, col:17> col:12 used to 'char *' cinit
      | |   `-ImplicitCastExpr 0x15a80e328 <col:16, col:17> 'char *' <LValueToRValue>
      | |     `-UnaryOperator 0x15a80e310 <col:16, col:17> 'char *' lvalue prefix '*' cannot overflow
      | |       `-ImplicitCastExpr 0x15a80e2f8 <col:17> 'char **' <LValueToRValue>
      | |         `-DeclRefExpr 0x15a80e2d8 <col:17> 'char **' lvalue ParmVar 0x15a80ddd8 'pos' 'char **'
      | |-BinaryOperator 0x15a827420 <line:9:5, col:17> '<dependent type>' contains-errors '='
      | | |-CXXDependentScopeMemberExpr 0x15a80e3a0 <col:5, col:9> '<dependent type>' contains-errors lvalue ->neg
      | | | `-RecoveryExpr 0x15a80e378 <col:5> '<dependent type>' contains-errors lvalue
      | | |   `-DeclRefExpr 0x15a80e358 <col:5> 'int *' lvalue ParmVar 0x15a80dd28 'tm' 'int *'
      | | `-IntegerLiteral 0x15a827400 <col:17> 'int' 0
      | |-ImplicitCastExpr 0x15a8279a0 <line:10:5, col:22> '<dependent type>' contains-errors <LValueToRValue>
      | | `-RecoveryExpr 0x15a827970 <col:5, col:22> '<dependent type>' contains-errors lvalue
      | |   |-CXXDependentScopeMemberExpr 0x15a827488 <col:5, col:9> '<dependent type>' contains-errors lvalue ->year
      | |   | `-RecoveryExpr 0x15a827460 <col:5> '<dependent type>' contains-errors lvalue
      | |   |   `-DeclRefExpr 0x15a827440 <col:5> 'int *' lvalue ParmVar 0x15a80dd28 'tm' 'int *'
      | |   `-ParenExpr 0x15a827528 <col:17, col:22> '<overloaded function type>' lvalue
      | |     `-UnresolvedLookupExpr 0x15a8274e8 <col:18> '<overloaded function type>' lvalue (no ADL) = 'uint' empty
      | |-CallExpr 0x15a827af0 <col:24, col:36> 'int'
      | | |-ImplicitCastExpr 0x15a827ad8 <col:24> 'int (*)()' <FunctionToPointerDecay>
      | | | `-DeclRefExpr 0x15a827a98 <col:24> 'int ()' Function 0x15a8279e0 'sint2korr' 'int ()'
      | | `-ImplicitCastExpr 0x15a827b18 <col:34> 'char *' <LValueToRValue>
      | |   `-DeclRefExpr 0x15a827ab8 <col:34> 'char *' lvalue Var 0x15a80e270 'to' 'char *'
      | |-ImplicitCastExpr 0x15a827c68 <line:11:5, col:22> '<dependent type>' contains-errors <LValueToRValue>
      | | `-RecoveryExpr 0x15a827c38 <col:5, col:22> '<dependent type>' contains-errors lvalue
      | |   |-CXXDependentScopeMemberExpr 0x15a827b78 <col:5, col:9> '<dependent type>' contains-errors lvalue ->month
      | |   | `-RecoveryExpr 0x15a827b50 <col:5> '<dependent type>' contains-errors lvalue
      | |   |   `-DeclRefExpr 0x15a827b30 <col:5> 'int *' lvalue ParmVar 0x15a80dd28 'tm' 'int *'
      | |   `-ParenExpr 0x15a827c18 <col:17, col:22> '<overloaded function type>' lvalue
      | |     `-UnresolvedLookupExpr 0x15a827bd8 <col:18> '<overloaded function type>' lvalue (no ADL) = 'uint' empty
      | |-ImplicitCastExpr 0x15a827cf8 <col:24, col:28> 'char' <LValueToRValue>
      | | `-ArraySubscriptExpr 0x15a827cd8 <col:24, col:28> 'char' lvalue
      | |   |-ImplicitCastExpr 0x15a827cc0 <col:24> 'char *' <LValueToRValue>
      | |   | `-DeclRefExpr 0x15a827c80 <col:24> 'char *' lvalue Var 0x15a80e270 'to' 'char *'
      | |   `-IntegerLiteral 0x15a827ca0 <col:27> 'int' 2
      | |-ImplicitCastExpr 0x15a827e48 <line:12:5, col:22> '<dependent type>' contains-errors <LValueToRValue>
      | | `-RecoveryExpr 0x15a827e18 <col:5, col:22> '<dependent type>' contains-errors lvalue
      | |   |-CXXDependentScopeMemberExpr 0x15a827d58 <col:5, col:9> '<dependent type>' contains-errors lvalue ->day
      | |   | `-RecoveryExpr 0x15a827d30 <col:5> '<dependent type>' contains-errors lvalue
      | |   |   `-DeclRefExpr 0x15a827d10 <col:5> 'int *' lvalue ParmVar 0x15a80dd28 'tm' 'int *'
      | |   `-ParenExpr 0x15a827df8 <col:17, col:22> '<overloaded function type>' lvalue
      | |     `-UnresolvedLookupExpr 0x15a827db8 <col:18> '<overloaded function type>' lvalue (no ADL) = 'uint' empty
      | |-ImplicitCastExpr 0x15a827ed8 <col:24, col:28> 'char' <LValueToRValue>
      | | `-ArraySubscriptExpr 0x15a827eb8 <col:24, col:28> 'char' lvalue
      | |   |-ImplicitCastExpr 0x15a827ea0 <col:24> 'char *' <LValueToRValue>
      | |   | `-DeclRefExpr 0x15a827e60 <col:24> 'char *' lvalue Var 0x15a80e270 'to' 'char *'
      | |   `-IntegerLiteral 0x15a827e80 <col:27> 'int' 3
      | |-IfStmt 0x15a8291e0 <line:14:5, line:21:41> has_else
      | | |-BinaryOperator 0x15a827f48 <line:14:9, col:18> 'int' '>'
      | | | |-ImplicitCastExpr 0x15a827f30 <col:9> 'int' <LValueToRValue>
      | | | | `-DeclRefExpr 0x15a827ef0 <col:9> 'int' lvalue Var 0x15a80df80 'length' 'int'
      | | | `-IntegerLiteral 0x15a827f10 <col:18> 'int' 4
      | | |-CompoundStmt 0x15a8283b8 <line:15:5, line:19:5>
      | | | |-ImplicitCastExpr 0x15a8280a0 <line:16:7, col:24> '<dependent type>' contains-errors <LValueToRValue>
      | | | | `-RecoveryExpr 0x15a828070 <col:7, col:24> '<dependent type>' contains-errors lvalue
      | | | |   |-CXXDependentScopeMemberExpr 0x15a827fb0 <col:7, col:11> '<dependent type>' contains-errors lvalue ->hour
      | | | |   | `-RecoveryExpr 0x15a827f88 <col:7> '<dependent type>' contains-errors lvalue
      | | | |   |   `-DeclRefExpr 0x15a827f68 <col:7> 'int *' lvalue ParmVar 0x15a80dd28 'tm' 'int *'
      | | | |   `-ParenExpr 0x15a828050 <col:19, col:24> '<overloaded function type>' lvalue
      | | | |     `-UnresolvedLookupExpr 0x15a828010 <col:20> '<overloaded function type>' lvalue (no ADL) = 'uint' empty
      | | | |-ImplicitCastExpr 0x15a828130 <col:26, col:30> 'char' <LValueToRValue>
      | | | | `-ArraySubscriptExpr 0x15a828110 <col:26, col:30> 'char' lvalue
      | | | |   |-ImplicitCastExpr 0x15a8280f8 <col:26> 'char *' <LValueToRValue>
      | | | |   | `-DeclRefExpr 0x15a8280b8 <col:26> 'char *' lvalue Var 0x15a80e270 'to' 'char *'
      | | | |   `-IntegerLiteral 0x15a8280d8 <col:29> 'int' 4
      | | | |-ImplicitCastExpr 0x15a828280 <line:17:7, col:24> '<dependent type>' contains-errors <LValueToRValue>
      | | | | `-RecoveryExpr 0x15a828250 <col:7, col:24> '<dependent type>' contains-errors lvalue
      | | | |   |-CXXDependentScopeMemberExpr 0x15a828190 <col:7, col:11> '<dependent type>' contains-errors lvalue ->minute
      | | | |   | `-RecoveryExpr 0x15a828168 <col:7> '<dependent type>' contains-errors lvalue
      | | | |   |   `-DeclRefExpr 0x15a828148 <col:7> 'int *' lvalue ParmVar 0x15a80dd28 'tm' 'int *'
      | | | |   `-ParenExpr 0x15a828230 <col:19, col:24> '<overloaded function type>' lvalue
      | | | |     `-UnresolvedLookupExpr 0x15a8281f0 <col:20> '<overloaded function type>' lvalue (no ADL) = 'uint' empty
      | | | `-ImplicitCastExpr 0x15a828310 <col:26, col:30> 'char' <LValueToRValue>
      | | |   `-ArraySubscriptExpr 0x15a8282f0 <col:26, col:30> 'char' lvalue
      | | |     |-ImplicitCastExpr 0x15a8282d8 <col:26> 'char *' <LValueToRValue>
      | | |     | `-DeclRefExpr 0x15a828298 <col:26> 'char *' lvalue Var 0x15a80e270 'to' 'char *'
      | | |     `-IntegerLiteral 0x15a8282b8 <col:29> 'int' 5
      | | `-BinaryOperator 0x15a8291c0 <line:21:7, col:41> '<dependent type>' contains-errors '='
      | |   |-CXXDependentScopeMemberExpr 0x15a829048 <col:7, col:11> '<dependent type>' contains-errors lvalue ->hour
      | |   | `-RecoveryExpr 0x15a829020 <col:7> '<dependent type>' contains-errors lvalue
      | |   |   `-DeclRefExpr 0x15a829000 <col:7> 'int *' lvalue ParmVar 0x15a80dd28 'tm' 'int *'
      | |   `-BinaryOperator 0x15a8291a0 <col:17, col:41> '<dependent type>' contains-errors '='
      | |     |-CXXDependentScopeMemberExpr 0x15a8290b0 <col:17, col:21> '<dependent type>' contains-errors lvalue ->minute
      | |     | `-RecoveryExpr 0x15a829090 <col:17> '<dependent type>' contains-errors lvalue
      | |     `-BinaryOperator 0x15a829180 <col:29, col:41> '<dependent type>' contains-errors '='
      | |       |-CXXDependentScopeMemberExpr 0x15a829118 <col:29, col:33> '<dependent type>' contains-errors lvalue ->second
      | |       | `-RecoveryExpr 0x15a8290f8 <col:29> '<dependent type>' contains-errors lvalue
      | |       `-IntegerLiteral 0x15a829160 <col:41> 'int' 0
      | `-CompoundAssignOperator 0x15a829608 <line:25:5, col:12> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
      |   |-UnaryOperator 0x15a8295b8 <col:5, col:6> 'char *' lvalue prefix '*' cannot overflow
      |   | `-ImplicitCastExpr 0x15a8295a0 <col:6> 'char **' <LValueToRValue>
      |   |   `-DeclRefExpr 0x15a829580 <col:6> 'char **' lvalue ParmVar 0x15a80ddd8 'pos' 'char **'
      |   `-ImplicitCastExpr 0x15a8295f0 <col:12> 'int' <LValueToRValue>
      |     `-DeclRefExpr 0x15a8295d0 <col:12> 'int' lvalue Var 0x15a80df80 'length' 'int'
      `-NullStmt 0x15a8297b8 <line:28:5>
