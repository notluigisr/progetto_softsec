TranslationUnitDecl 0x120855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1208564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x120855bd0 '__int128'
|-TypedefDecl 0x120856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x120855bf0 'unsigned __int128'
|-TypedefDecl 0x12100be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12100bc00 'struct __NSConstantString_tag'
|   `-Record 0x120856580 '__NSConstantString_tag'
|-TypedefDecl 0x12100be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x120855d90 '__SVInt8_t'
|-TypedefDecl 0x12100bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x120855db0 '__SVInt16_t'
|-TypedefDecl 0x12100bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x120855dd0 '__SVInt32_t'
|-TypedefDecl 0x12100bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x120855df0 '__SVInt64_t'
|-TypedefDecl 0x12100c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x120855e10 '__SVUint8_t'
|-TypedefDecl 0x12100c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x120855e30 '__SVUint16_t'
|-TypedefDecl 0x12100c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x120855e50 '__SVUint32_t'
|-TypedefDecl 0x12100c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x120855e70 '__SVUint64_t'
|-TypedefDecl 0x12100c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x120855e90 '__SVFloat16_t'
|-TypedefDecl 0x12100c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x120855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12100c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x120855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12100c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x120855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12100c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x120855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12100c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x120855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12100c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x120855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12100c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x120855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12100c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x120855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12100c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x120855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12100c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x120855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12100c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x120855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12100c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x120856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12100c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x120856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12100c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x120856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12100c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x120856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12100c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x120856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12100c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1208560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12100c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1208560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12100c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1208560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12100c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x120856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12100ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x120856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12100cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x120856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12100cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x120856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12100cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x120856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12100d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1208561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12100d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1208561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12100d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1208561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12100d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x120856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12100d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x120856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12100d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x120856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12100d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x120856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12100d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x120856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12100d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1208562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12100d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1208562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12100d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1208562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12100d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x120856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12100d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x120856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12100d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x120856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12100d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x120856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12100da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x120856390 '__SVBool_t'
|-TypedefDecl 0x12100da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1208563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12100dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1208563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12100db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1208563f0 '__SVCount_t'
|-TypedefDecl 0x12100dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12100dbb0 'char *'
|   `-BuiltinType 0x1208556b0 'char'
|-TypedefDecl 0x12100dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12100dbb0 'char *'
|   `-BuiltinType 0x1208556b0 'char'
`-FunctionDecl 0x121027438 <dataset_diviso_filec/func614_nonvuln.c:1:1, line:11:1> line:1:9 invalid cli_bcapi_pdf_lookupobj 'int (struct cli_bc_ctx *, int)'
  |-ParmVarDecl 0x12100e268 <col:33, col:52> col:52 used ctx 'struct cli_bc_ctx *'
  |-ParmVarDecl 0x12100e2e8 <col:58, col:67> col:67 invalid objid 'int'
  `-CompoundStmt 0x121027a40 <line:2:1, line:11:1>
    |-DeclStmt 0x121027570 <line:3:5, col:15>
    | `-VarDecl 0x121027508 <col:5, col:14> col:14 used i 'unsigned int'
    |-IfStmt 0x121027660 <line:4:5, line:5:10>
    | |-UnaryOperator 0x121027600 <line:4:9, col:15> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x1210275e8 <col:10, col:15> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x1210275c0 <col:10, col:15> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x121027588 <col:10> 'struct cli_bc_ctx *' lvalue ParmVar 0x12100e268 'ctx' 'struct cli_bc_ctx *'
    | `-ReturnStmt 0x121027650 <line:5:2, col:10>
    |   `-UnaryOperator 0x121027638 <col:9, col:10> 'int' prefix '-'
    |     `-IntegerLiteral 0x121027618 <col:10> 'int' 1
    |-ForStmt 0x1210279c0 <line:6:5, line:9:5>
    | |-BinaryOperator 0x1210276d8 <line:6:10, col:12> 'unsigned int' '='
    | | |-DeclRefExpr 0x121027680 <col:10> 'unsigned int' lvalue Var 0x121027508 'i' 'unsigned int'
    | | `-ImplicitCastExpr 0x1210276c0 <col:12> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x1210276a0 <col:12> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x121027778 <col:14, col:21> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x1210276f8 <col:14> 'unsigned int' lvalue Var 0x121027508 'i' 'unsigned int'
    | | `-RecoveryExpr 0x121027750 <col:16, col:21> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x121027718 <col:16> 'struct cli_bc_ctx *' lvalue ParmVar 0x12100e268 'ctx' 'struct cli_bc_ctx *'
    | |-UnaryOperator 0x1210277b8 <col:31, col:32> 'unsigned int' postfix '++'
    | | `-DeclRefExpr 0x121027798 <col:31> 'unsigned int' lvalue Var 0x121027508 'i' 'unsigned int'
    | `-CompoundStmt 0x1210279a8 <col:36, line:9:5>
    |   `-IfStmt 0x121027988 <line:7:2, line:8:13>
    |     |-BinaryOperator 0x121027908 <line:7:6, col:29> 'int' contains-errors '=='
    |     | |-CXXDependentScopeMemberExpr 0x1210278a0 <col:6, col:23> '<dependent type>' contains-errors lvalue .id
    |     | | `-ArraySubscriptExpr 0x121027880 <col:6, col:21> '<dependent type>' contains-errors lvalue
    |     | |   |-ImplicitCastExpr 0x121027850 <col:6, col:11> '<dependent type>' contains-errors <LValueToRValue>
    |     | |   | `-RecoveryExpr 0x121027808 <col:6, col:11> '<dependent type>' contains-errors lvalue
    |     | |   |   `-DeclRefExpr 0x1210277d0 <col:6> 'struct cli_bc_ctx *' lvalue ParmVar 0x12100e268 'ctx' 'struct cli_bc_ctx *'
    |     | |   `-ImplicitCastExpr 0x121027868 <col:20> 'unsigned int' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x121027830 <col:20> 'unsigned int' lvalue Var 0x121027508 'i' 'unsigned int'
    |     | `-RecoveryExpr 0x1210278e8 <col:29> '<dependent type>' contains-errors lvalue
    |     `-ReturnStmt 0x121027978 <line:8:6, col:13>
    |       `-ImplicitCastExpr 0x121027960 <col:13> 'int' <IntegralCast>
    |         `-ImplicitCastExpr 0x121027948 <col:13> 'unsigned int' <LValueToRValue>
    |           `-DeclRefExpr 0x121027928 <col:13> 'unsigned int' lvalue Var 0x121027508 'i' 'unsigned int'
    `-ReturnStmt 0x121027a30 <line:10:5, col:13>
      `-UnaryOperator 0x121027a18 <col:12, col:13> 'int' prefix '-'
        `-IntegerLiteral 0x1210279f8 <col:13> 'int' 1
