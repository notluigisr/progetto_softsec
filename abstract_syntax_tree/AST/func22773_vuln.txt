TranslationUnitDecl 0x15c050a08 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x15c0518b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x15c050fd0 '__int128'
|-TypedefDecl 0x15c051928 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x15c050ff0 'unsigned __int128'
|-TypedefDecl 0x15c80b430 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15c80b200 'struct __NSConstantString_tag'
|   `-Record 0x15c051980 '__NSConstantString_tag'
|-TypedefDecl 0x15c80b498 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x15c051190 '__SVInt8_t'
|-TypedefDecl 0x15c80b500 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x15c0511b0 '__SVInt16_t'
|-TypedefDecl 0x15c80b568 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x15c0511d0 '__SVInt32_t'
|-TypedefDecl 0x15c80b5d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x15c0511f0 '__SVInt64_t'
|-TypedefDecl 0x15c80b638 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x15c051210 '__SVUint8_t'
|-TypedefDecl 0x15c80b6a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x15c051230 '__SVUint16_t'
|-TypedefDecl 0x15c80b708 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x15c051250 '__SVUint32_t'
|-TypedefDecl 0x15c80b770 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x15c051270 '__SVUint64_t'
|-TypedefDecl 0x15c80b7d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x15c051290 '__SVFloat16_t'
|-TypedefDecl 0x15c80b840 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x15c0512b0 '__SVFloat32_t'
|-TypedefDecl 0x15c80b8a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x15c0512d0 '__SVFloat64_t'
|-TypedefDecl 0x15c80b910 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x15c0512f0 '__SVBfloat16_t'
|-TypedefDecl 0x15c80b978 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x15c051310 '__clang_svint8x2_t'
|-TypedefDecl 0x15c80b9e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x15c051330 '__clang_svint16x2_t'
|-TypedefDecl 0x15c80ba48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x15c051350 '__clang_svint32x2_t'
|-TypedefDecl 0x15c80bab0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x15c051370 '__clang_svint64x2_t'
|-TypedefDecl 0x15c80bb18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x15c051390 '__clang_svuint8x2_t'
|-TypedefDecl 0x15c80bb80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x15c0513b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15c80bbe8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x15c0513d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15c80bc50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x15c0513f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15c80bcb8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x15c051410 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15c80bd20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x15c051430 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15c80bd88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x15c051450 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15c80bdf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x15c051470 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15c80be58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x15c051490 '__clang_svint8x3_t'
|-TypedefDecl 0x15c80bec0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x15c0514b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15c80bf28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x15c0514d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15c80bf90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x15c0514f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15c80bff8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x15c051510 '__clang_svuint8x3_t'
|-TypedefDecl 0x15c80c060 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x15c051530 '__clang_svuint16x3_t'
|-TypedefDecl 0x15c80c0c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x15c051550 '__clang_svuint32x3_t'
|-TypedefDecl 0x15c80c130 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x15c051570 '__clang_svuint64x3_t'
|-TypedefDecl 0x15c80c198 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x15c051590 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15c812a00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x15c0515b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15c812a68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x15c0515d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15c812ad0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x15c0515f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15c812b38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x15c051610 '__clang_svint8x4_t'
|-TypedefDecl 0x15c812ba0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x15c051630 '__clang_svint16x4_t'
|-TypedefDecl 0x15c812c08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x15c051650 '__clang_svint32x4_t'
|-TypedefDecl 0x15c812c70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x15c051670 '__clang_svint64x4_t'
|-TypedefDecl 0x15c812cd8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x15c051690 '__clang_svuint8x4_t'
|-TypedefDecl 0x15c812d40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x15c0516b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15c812da8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x15c0516d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15c812e10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x15c0516f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15c812e78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x15c051710 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15c812ee0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x15c051730 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15c812f48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x15c051750 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15c812fb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x15c051770 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15c813018 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x15c051790 '__SVBool_t'
|-TypedefDecl 0x15c813080 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x15c0517b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15c8130e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x15c0517d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15c813150 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x15c0517f0 '__SVCount_t'
|-TypedefDecl 0x15c8131f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15c8131b0 'char *'
|   `-BuiltinType 0x15c050ab0 'char'
|-TypedefDecl 0x15c813268 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15c8131b0 'char *'
|   `-BuiltinType 0x15c050ab0 'char'
|-FunctionDecl 0x15c813538 <dataset_diviso_filec/func22773_vuln.c:1:1, line:48:1> line:1:12 invalid gdImageRotateInterpolated 'int (const int, const float, int)'
| |-ParmVarDecl 0x15c8132f0 <col:38, col:55> col:55 invalid src 'const int'
| |-ParmVarDecl 0x15c813370 <col:60, col:72> col:72 used angle 'const float'
| |-ParmVarDecl 0x15c8133f0 <col:79, col:83> col:83 used bgcolor 'int'
| `-CompoundStmt 0x15c82f798 <line:2:1, line:48:1>
|   |-DeclStmt 0x15c82b448 <line:3:2, col:51>
|   | `-VarDecl 0x15c813610 <col:2, col:50> col:12 used angle_rounded 'const int' cinit
|   |   `-CStyleCastExpr 0x15c82b420 <col:28, col:50> 'int' <FloatingToIntegral>
|   |     `-CallExpr 0x15c82b3c8 <col:33, col:50> 'double'
|   |       |-ImplicitCastExpr 0x15c82b3b0 <col:33> 'double (*)(double)' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x15c82b2d0 <col:33> 'double (double)' Function 0x15c82b110 'floor' 'double (double)'
|   |       `-ImplicitCastExpr 0x15c82b3f0 <col:39, col:47> 'double' <FloatingCast>
|   |         `-BinaryOperator 0x15c82b360 <col:39, col:47> 'float' '*'
|   |           |-ImplicitCastExpr 0x15c82b330 <col:39> 'float' <LValueToRValue>
|   |           | `-DeclRefExpr 0x15c82b2f0 <col:39> 'const float' lvalue ParmVar 0x15c813370 'angle' 'const float'
|   |           `-ImplicitCastExpr 0x15c82b348 <col:47> 'float' <IntegralToFloating>
|   |             `-IntegerLiteral 0x15c82b310 <col:47> 'int' 100
|   |-IfStmt 0x15c82b538 <line:5:2, line:7:2>
|   | |-BinaryOperator 0x15c82b4b8 <line:5:6, col:16> 'int' '<'
|   | | |-ImplicitCastExpr 0x15c82b4a0 <col:6> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x15c82b460 <col:6> 'int' lvalue ParmVar 0x15c8133f0 'bgcolor' 'int'
|   | | `-IntegerLiteral 0x15c82b480 <col:16> 'int' 0
|   | `-CompoundStmt 0x15c82b520 <col:19, line:7:2>
|   |   `-ReturnStmt 0x15c82b510 <line:6:3, col:10>
|   |     `-RecoveryExpr 0x15c82b4f0 <col:10> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x15c82bd70 <line:10:2, line:15:2>
|   | |-BinaryOperator 0x15c82b5e0 <line:10:6, col:24> 'int' contains-errors '=='
|   | | |-CXXDependentScopeMemberExpr 0x15c82b578 <col:6, col:11> '<dependent type>' contains-errors lvalue ->trueColor
|   | | | `-RecoveryExpr 0x15c82b558 <col:6> '<dependent type>' contains-errors lvalue
|   | | `-IntegerLiteral 0x15c82b5c0 <col:24> 'int' 0
|   | `-CompoundStmt 0x15c82bd50 <col:27, line:15:2>
|   |   |-IfStmt 0x15c82bbe8 <line:11:3, line:13:3>
|   |   | |-BinaryOperator 0x15c82b658 <line:11:7, col:18> 'int' '>='
|   |   | | |-ImplicitCastExpr 0x15c82b640 <col:7> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x15c82b600 <col:7> 'int' lvalue ParmVar 0x15c8133f0 'bgcolor' 'int'
|   |   | | `-IntegerLiteral 0x15c82b620 <col:18> 'int' 0
|   |   | `-CompoundStmt 0x15c82bbd0 <col:21, line:13:3>
|   |   |   `-BinaryOperator 0x15c82bbb0 <line:12:4, col:111> 'int' contains-errors '='
|   |   |     |-DeclRefExpr 0x15c82b678 <col:4> 'int' lvalue ParmVar 0x15c8133f0 'bgcolor' 'int'
|   |   |     `-CallExpr 0x15c82bb70 <col:15, col:111> '<dependent type>' contains-errors
|   |   |       |-DeclRefExpr 0x15c82b7f0 <col:15> 'int ()' Function 0x15c82b738 'gdTrueColorAlpha' 'int ()'
|   |   |       |-ArraySubscriptExpr 0x15c82b8c8 <col:32, col:48> '<dependent type>' contains-errors lvalue
|   |   |       | |-ImplicitCastExpr 0x15c82b898 <col:32, col:37> '<dependent type>' contains-errors <LValueToRValue>
|   |   |       | | `-CXXDependentScopeMemberExpr 0x15c82b830 <col:32, col:37> '<dependent type>' contains-errors lvalue ->red
|   |   |       | |   `-RecoveryExpr 0x15c82b810 <col:32> '<dependent type>' contains-errors lvalue
|   |   |       | `-ImplicitCastExpr 0x15c82b8b0 <col:41> 'int' <LValueToRValue>
|   |   |       |   `-DeclRefExpr 0x15c82b878 <col:41> 'int' lvalue ParmVar 0x15c8133f0 'bgcolor' 'int'
|   |   |       |-ArraySubscriptExpr 0x15c82b9a0 <col:51, col:69> '<dependent type>' contains-errors lvalue
|   |   |       | |-ImplicitCastExpr 0x15c82b970 <col:51, col:56> '<dependent type>' contains-errors <LValueToRValue>
|   |   |       | | `-CXXDependentScopeMemberExpr 0x15c82b908 <col:51, col:56> '<dependent type>' contains-errors lvalue ->green
|   |   |       | |   `-RecoveryExpr 0x15c82b8e8 <col:51> '<dependent type>' contains-errors lvalue
|   |   |       | `-ImplicitCastExpr 0x15c82b988 <col:62> 'int' <LValueToRValue>
|   |   |       |   `-DeclRefExpr 0x15c82b950 <col:62> 'int' lvalue ParmVar 0x15c8133f0 'bgcolor' 'int'
|   |   |       |-ArraySubscriptExpr 0x15c82ba78 <col:72, col:89> '<dependent type>' contains-errors lvalue
|   |   |       | |-ImplicitCastExpr 0x15c82ba48 <col:72, col:77> '<dependent type>' contains-errors <LValueToRValue>
|   |   |       | | `-CXXDependentScopeMemberExpr 0x15c82b9e0 <col:72, col:77> '<dependent type>' contains-errors lvalue ->blue
|   |   |       | |   `-RecoveryExpr 0x15c82b9c0 <col:72> '<dependent type>' contains-errors lvalue
|   |   |       | `-ImplicitCastExpr 0x15c82ba60 <col:82> 'int' <LValueToRValue>
|   |   |       |   `-DeclRefExpr 0x15c82ba28 <col:82> 'int' lvalue ParmVar 0x15c8133f0 'bgcolor' 'int'
|   |   |       `-ArraySubscriptExpr 0x15c82bb50 <col:92, col:110> '<dependent type>' contains-errors lvalue
|   |   |         |-ImplicitCastExpr 0x15c82bb20 <col:92, col:97> '<dependent type>' contains-errors <LValueToRValue>
|   |   |         | `-CXXDependentScopeMemberExpr 0x15c82bab8 <col:92, col:97> '<dependent type>' contains-errors lvalue ->alpha
|   |   |         |   `-RecoveryExpr 0x15c82ba98 <col:92> '<dependent type>' contains-errors lvalue
|   |   |         `-ImplicitCastExpr 0x15c82bb38 <col:103> 'int' <LValueToRValue>
|   |   |           `-DeclRefExpr 0x15c82bb00 <col:103> 'int' lvalue ParmVar 0x15c8133f0 'bgcolor' 'int'
|   |   `-CallExpr 0x15c82bd28 <line:14:3, col:32> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x15c82bce8 <col:3> 'int ()' Function 0x15c82bc30 'gdImagePaletteToTrueColor' 'int ()'
|   |     `-RecoveryExpr 0x15c82bd08 <col:29> '<dependent type>' contains-errors lvalue
|   |-SwitchStmt 0x15c82bdc8 <line:18:2, line:25:2>
|   | |-ImplicitCastExpr 0x15c82bdb0 <line:18:10> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x15c82bd90 <col:10> 'const int' lvalue Var 0x15c813610 'angle_rounded' 'const int'
|   | `-CompoundStmt 0x15c82eba0 <col:25, line:25:2>
|   |   |-CaseStmt 0x15c82be28 <line:19:3, line:20:33>
|   |   | |-ConstantExpr 0x15c82be10 <line:19:8> 'int'
|   |   | | `-IntegerLiteral 0x15c82bdf0 <col:8> 'int' 9000
|   |   | `-ReturnStmt 0x15c82bfc0 <line:20:4, col:33>
|   |   |   `-CallExpr 0x15c82bf90 <col:11, col:33> '<dependent type>' contains-errors
|   |   |     |-DeclRefExpr 0x15c82bf30 <col:11> 'int ()' Function 0x15c82be78 'gdImageRotate90' 'int ()'
|   |   |     |-RecoveryExpr 0x15c82bf50 <col:27> '<dependent type>' contains-errors lvalue
|   |   |     `-IntegerLiteral 0x15c82bf70 <col:32> 'int' 0
|   |   |-CaseStmt 0x15c82e818 <line:21:3, line:22:34>
|   |   | |-ConstantExpr 0x15c82e800 <line:21:8> 'int'
|   |   | | `-IntegerLiteral 0x15c82bfd0 <col:8> 'int' 18000
|   |   | `-ReturnStmt 0x15c82e9b0 <line:22:4, col:34>
|   |   |   `-CallExpr 0x15c82e980 <col:11, col:34> '<dependent type>' contains-errors
|   |   |     |-DeclRefExpr 0x15c82e920 <col:11> 'int ()' Function 0x15c82e868 'gdImageRotate180' 'int ()'
|   |   |     |-RecoveryExpr 0x15c82e940 <col:28> '<dependent type>' contains-errors lvalue
|   |   |     `-IntegerLiteral 0x15c82e960 <col:33> 'int' 0
|   |   `-CaseStmt 0x15c82e9f8 <line:23:3, line:24:34>
|   |     |-ConstantExpr 0x15c82e9e0 <line:23:8> 'int'
|   |     | `-IntegerLiteral 0x15c82e9c0 <col:8> 'int' 27000
|   |     `-ReturnStmt 0x15c82eb90 <line:24:4, col:34>
|   |       `-CallExpr 0x15c82eb60 <col:11, col:34> '<dependent type>' contains-errors
|   |         |-DeclRefExpr 0x15c82eb00 <col:11> 'int ()' Function 0x15c82ea48 'gdImageRotate270' 'int ()'
|   |         |-RecoveryExpr 0x15c82eb20 <col:28> '<dependent type>' contains-errors lvalue
|   |         `-IntegerLiteral 0x15c82eb40 <col:33> 'int' 0
|   |-IfStmt 0x15c82ef20 <line:27:2, line:29:2>
|   | |-BinaryOperator 0x15c82eea0 <line:27:6, col:74> 'int' contains-errors '||'
|   | | |-BinaryOperator 0x15c82ee40 <col:6, col:45> 'int' contains-errors '||'
|   | | | |-BinaryOperator 0x15c82ee20 <col:6, col:13> 'int' contains-errors '=='
|   | | | | |-RecoveryExpr 0x15c82ec20 <col:6> '<dependent type>' contains-errors lvalue
|   | | | | `-RecoveryExpr 0x15c82ee00 <col:13> '<dependent type>' contains-errors lvalue
|   | | | `-BinaryOperator 0x15c82ed00 <col:21, col:45> 'int' contains-errors '<'
|   | | |   |-CXXDependentScopeMemberExpr 0x15c82ec98 <col:21, col:26> '<dependent type>' contains-errors lvalue ->interpolation_id
|   | | |   | `-RecoveryExpr 0x15c82ec78 <col:21> '<dependent type>' contains-errors lvalue
|   | | |   `-IntegerLiteral 0x15c82ece0 <col:45> 'int' 1
|   | | `-BinaryOperator 0x15c82ee80 <col:50, col:74> 'int' contains-errors '>'
|   | |   |-CXXDependentScopeMemberExpr 0x15c82ed60 <col:50, col:55> '<dependent type>' contains-errors lvalue ->interpolation_id
|   | |   | `-RecoveryExpr 0x15c82ed40 <col:50> '<dependent type>' contains-errors lvalue
|   | |   `-RecoveryExpr 0x15c82ee60 <col:74> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x15c82ef08 <col:91, line:29:2>
|   |   `-ReturnStmt 0x15c82eef8 <line:28:3, col:10>
|   |     `-RecoveryExpr 0x15c82eed8 <col:10> '<dependent type>' contains-errors lvalue
|   |-SwitchStmt 0x15c82efc0 <line:31:2, line:46:2>
|   | |-ImplicitCastExpr 0x15c82efa8 <line:31:10, col:15> '<dependent type>' contains-errors <LValueToRValue>
|   | | `-CXXDependentScopeMemberExpr 0x15c82ef60 <col:10, col:15> '<dependent type>' contains-errors lvalue ->interpolation_id
|   | |   `-RecoveryExpr 0x15c82ef40 <col:10> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x15c82f708 <col:33, line:46:2>
|   |   |-ReturnStmt 0x15c82f198 <line:33:4, col:60>
|   |   | `-CallExpr 0x15c82f160 <col:11, col:60> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x15c82f0e0 <col:11> 'int ()' Function 0x15c82f028 'gdImageRotateNearestNeighbour' 'int ()'
|   |   |   |-RecoveryExpr 0x15c82f100 <col:41> '<dependent type>' contains-errors lvalue
|   |   |   |-DeclRefExpr 0x15c82f120 <col:46> 'const float' lvalue ParmVar 0x15c813370 'angle' 'const float'
|   |   |   `-DeclRefExpr 0x15c82f140 <col:53> 'int' lvalue ParmVar 0x15c8133f0 'bgcolor' 'int'
|   |   |-BreakStmt 0x15c82f1a8 <line:34:4>
|   |   |-ReturnStmt 0x15c82f360 <line:37:4, col:52>
|   |   | `-CallExpr 0x15c82f328 <col:11, col:52> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x15c82f2a8 <col:11> 'int ()' Function 0x15c82f1f0 'gdImageRotateBilinear' 'int ()'
|   |   |   |-RecoveryExpr 0x15c82f2c8 <col:33> '<dependent type>' contains-errors lvalue
|   |   |   |-DeclRefExpr 0x15c82f2e8 <col:38> 'const float' lvalue ParmVar 0x15c813370 'angle' 'const float'
|   |   |   `-DeclRefExpr 0x15c82f308 <col:45> 'int' lvalue ParmVar 0x15c8133f0 'bgcolor' 'int'
|   |   |-BreakStmt 0x15c82f370 <line:38:4>
|   |   |-ReturnStmt 0x15c82f528 <line:41:4, col:56>
|   |   | `-CallExpr 0x15c82f4f0 <col:11, col:56> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x15c82f470 <col:11> 'int ()' Function 0x15c82f3b8 'gdImageRotateBicubicFixed' 'int ()'
|   |   |   |-RecoveryExpr 0x15c82f490 <col:37> '<dependent type>' contains-errors lvalue
|   |   |   |-DeclRefExpr 0x15c82f4b0 <col:42> 'const float' lvalue ParmVar 0x15c813370 'angle' 'const float'
|   |   |   `-DeclRefExpr 0x15c82f4d0 <col:49> 'int' lvalue ParmVar 0x15c8133f0 'bgcolor' 'int'
|   |   |-BreakStmt 0x15c82f538 <line:42:4>
|   |   `-DefaultStmt 0x15c82f6e8 <line:44:3, line:45:51>
|   |     `-ReturnStmt 0x15c82f6d8 <col:4, col:51>
|   |       `-CallExpr 0x15c82f6a0 <col:11, col:51> '<dependent type>' contains-errors
|   |         |-DeclRefExpr 0x15c82f620 <col:11> 'int ()' Function 0x15c82f568 'gdImageRotateGeneric' 'int ()'
|   |         |-RecoveryExpr 0x15c82f640 <col:32> '<dependent type>' contains-errors lvalue
|   |         |-DeclRefExpr 0x15c82f660 <col:37> 'const float' lvalue ParmVar 0x15c813370 'angle' 'const float'
|   |         `-DeclRefExpr 0x15c82f680 <col:44> 'int' lvalue ParmVar 0x15c8133f0 'bgcolor' 'int'
|   `-ReturnStmt 0x15c82f788 <line:47:2, col:9>
|     `-RecoveryExpr 0x15c82f768 <col:9> '<dependent type>' contains-errors lvalue
`-FunctionDecl 0x15c82b110 <line:3:33> col:33 implicit used floor 'double (double)' extern
  |-ParmVarDecl 0x15c82b210 <<invalid sloc>> <invalid sloc> 'double'
  |-BuiltinAttr 0x15c82b1b8 <<invalid sloc>> Implicit 1079
  |-NoThrowAttr 0x15c82b280 <col:33> Implicit
  `-ConstAttr 0x15c82b2a8 <col:33> Implicit
