TranslationUnitDecl 0x11e055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x11e0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x11e055bd0 '__int128'
|-TypedefDecl 0x11e056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x11e055bf0 'unsigned __int128'
|-TypedefDecl 0x11e126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x11e126000 'struct __NSConstantString_tag'
|   `-Record 0x11e056580 '__NSConstantString_tag'
|-TypedefDecl 0x11e126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x11e055d90 '__SVInt8_t'
|-TypedefDecl 0x11e126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x11e055db0 '__SVInt16_t'
|-TypedefDecl 0x11e126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x11e055dd0 '__SVInt32_t'
|-TypedefDecl 0x11e1263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x11e055df0 '__SVInt64_t'
|-TypedefDecl 0x11e126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x11e055e10 '__SVUint8_t'
|-TypedefDecl 0x11e1264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x11e055e30 '__SVUint16_t'
|-TypedefDecl 0x11e126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x11e055e50 '__SVUint32_t'
|-TypedefDecl 0x11e126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x11e055e70 '__SVUint64_t'
|-TypedefDecl 0x11e1265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x11e055e90 '__SVFloat16_t'
|-TypedefDecl 0x11e126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x11e055eb0 '__SVFloat32_t'
|-TypedefDecl 0x11e1266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x11e055ed0 '__SVFloat64_t'
|-TypedefDecl 0x11e126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x11e055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x11e126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x11e055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x11e1267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x11e055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x11e126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x11e055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x11e1268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x11e055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x11e126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x11e055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x11e126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x11e055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x11e1269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x11e055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x11e126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x11e055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x11e126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x11e056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x11e126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x11e056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x11e126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x11e056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x11e126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x11e056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x11e126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x11e056090 '__clang_svint8x3_t'
|-TypedefDecl 0x11e126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x11e0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x11e126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x11e0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x11e126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x11e0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x11e126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x11e056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x11e126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x11e056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x11e126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x11e056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x11e126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x11e056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x11e126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x11e056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x11e127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x11e0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x11e127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x11e0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x11e1278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x11e0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x11e127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x11e056210 '__clang_svint8x4_t'
|-TypedefDecl 0x11e1279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x11e056230 '__clang_svint16x4_t'
|-TypedefDecl 0x11e127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x11e056250 '__clang_svint32x4_t'
|-TypedefDecl 0x11e127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x11e056270 '__clang_svint64x4_t'
|-TypedefDecl 0x11e127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x11e056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x11e127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x11e0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x11e127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x11e0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x11e127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x11e0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x11e127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x11e056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x11e127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x11e056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x11e127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x11e056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x11e127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x11e056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x11e127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x11e056390 '__SVBool_t'
|-TypedefDecl 0x11e127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x11e0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x11e127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x11e0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x11e127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x11e0563f0 '__SVCount_t'
|-TypedefDecl 0x11e127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x11e127fb0 'char *'
|   `-BuiltinType 0x11e0556b0 'char'
|-TypedefDecl 0x11e128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x11e127fb0 'char *'
|   `-BuiltinType 0x11e0556b0 'char'
|-FunctionDecl 0x11e1283d8 <dataset_diviso_filec/func17076_nonvuln.c:1:1, line:53:1> line:1:12 invalid mailimf_domain_literal_parse 'int (const char *, int, int *, char **)' static
| |-ParmVarDecl 0x11e1280d8 <col:41, col:54> col:54 used message 'const char *'
| |-ParmVarDecl 0x11e128170 <col:63, col:70> col:70 invalid length 'int'
| |-ParmVarDecl 0x11e128228 <line:2:6, col:15> col:15 invalid indx 'int *'
| |-ParmVarDecl 0x11e1282d8 <col:21, col:29> col:29 used result 'char **'
| `-CompoundStmt 0x11e1438a0 <line:3:1, line:53:1>
|   |-UnaryExprOrTypeTraitExpr 0x11e1284f8 <line:4:3, col:10> 'unsigned long' contains-errors sizeof
|   | `-RecoveryExpr 0x11e1284d8 <col:10> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x11e128598 <line:5:3, col:10>
|   | `-VarDecl 0x11e128530 <col:3, col:7> col:7 used len 'int'
|   |-DeclStmt 0x11e128630 <line:6:3, col:12>
|   | `-VarDecl 0x11e1285c8 <col:3, col:7> col:7 used begin 'int'
|   |-DeclStmt 0x11e1286c8 <line:7:3, col:24>
|   | `-VarDecl 0x11e128660 <col:3, col:10> col:10 used domain_literal 'char *'
|   |-DeclStmt 0x11e128760 <line:8:3, col:8>
|   | `-VarDecl 0x11e1286f8 <col:3, col:7> col:7 used r 'int'
|   |-BinaryOperator 0x11e141ab8 <line:12:3, col:53> 'int' contains-errors '='
|   | |-DeclRefExpr 0x11e1287c8 <col:3> 'int' lvalue Var 0x11e1286f8 'r' 'int'
|   | `-CallExpr 0x11e141a80 <col:7, col:53> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x11e141960 <col:7> 'int ()' Function 0x11e1418a8 'mailimf_cfws_parse' 'int ()'
|   |   |-DeclRefExpr 0x11e141980 <col:26> 'const char *' lvalue ParmVar 0x11e1280d8 'message' 'const char *'
|   |   |-RecoveryExpr 0x11e1419a0 <col:35> '<dependent type>' contains-errors lvalue
|   |   `-UnaryOperator 0x11e141a68 <col:43, col:44> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     `-RecoveryExpr 0x11e141a48 <col:44> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x11e141bf0 <line:13:3, line:14:12>
|   | |-RecoveryExpr 0x11e141b88 <line:13:7, col:59> '_Bool' contains-errors
|   | `-ReturnStmt 0x11e141be0 <line:14:5, col:12>
|   |   `-ImplicitCastExpr 0x11e141bc8 <col:12> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x11e141ba8 <col:12> 'int' lvalue Var 0x11e1286f8 'r' 'int'
|   |-BinaryOperator 0x11e141c88 <line:16:3, col:11> 'int' contains-errors '='
|   | |-DeclRefExpr 0x11e141c10 <col:3> 'int' lvalue Var 0x11e1285c8 'begin' 'int'
|   | `-RecoveryExpr 0x11e141c68 <col:11> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x11e141f00 <line:17:3, col:57> 'int' contains-errors '='
|   | |-DeclRefExpr 0x11e141ca8 <col:3> 'int' lvalue Var 0x11e1286f8 'r' 'int'
|   | `-CallExpr 0x11e141ec8 <col:7, col:57> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x11e141da8 <col:7> 'int ()' Function 0x11e141cf0 'mailimf_obracket_parse' 'int ()'
|   |   |-DeclRefExpr 0x11e141dc8 <col:30> 'const char *' lvalue ParmVar 0x11e1280d8 'message' 'const char *'
|   |   |-RecoveryExpr 0x11e141de8 <col:39> '<dependent type>' contains-errors lvalue
|   |   `-UnaryOperator 0x11e141eb0 <col:47, col:48> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     `-RecoveryExpr 0x11e141e90 <col:48> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x11e142000 <line:18:3, line:19:12>
|   | |-BinaryOperator 0x11e141f98 <line:18:7, col:12> 'int' contains-errors '!='
|   | | |-DeclRefExpr 0x11e141f20 <col:7> 'int' lvalue Var 0x11e1286f8 'r' 'int'
|   | | `-RecoveryExpr 0x11e141f78 <col:12> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x11e141ff0 <line:19:5, col:12>
|   |   `-ImplicitCastExpr 0x11e141fd8 <col:12> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x11e141fb8 <col:12> 'int' lvalue Var 0x11e1286f8 'r' 'int'
|   |-WhileStmt 0x11e1424c8 <line:21:3, line:31:3>
|   | |-IntegerLiteral 0x11e142020 <line:21:10> 'int' 1
|   | `-CompoundStmt 0x11e1424a8 <col:13, line:31:3>
|   |   |-BinaryOperator 0x11e142298 <line:22:5, line:23:19> 'int' contains-errors '='
|   |   | |-DeclRefExpr 0x11e142040 <line:22:5> 'int' lvalue Var 0x11e1286f8 'r' 'int'
|   |   | `-CallExpr 0x11e142260 <col:9, line:23:19> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x11e142140 <line:22:9> 'int ()' Function 0x11e142088 'mailimf_domain_literal_fws_dcontent_parse' 'int ()'
|   |   |   |-DeclRefExpr 0x11e142160 <col:51> 'const char *' lvalue ParmVar 0x11e1280d8 'message' 'const char *'
|   |   |   |-RecoveryExpr 0x11e142180 <col:60> '<dependent type>' contains-errors lvalue
|   |   |   `-UnaryOperator 0x11e142248 <line:23:9, col:10> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   |     `-RecoveryExpr 0x11e142228 <col:10> '<dependent type>' contains-errors lvalue
|   |   `-IfStmt 0x11e142478 <line:24:5, line:30:14> has_else
|   |     |-BinaryOperator 0x11e142330 <line:24:9, col:14> 'int' contains-errors '=='
|   |     | |-DeclRefExpr 0x11e1422b8 <col:9> 'int' lvalue Var 0x11e1286f8 'r' 'int'
|   |     | `-RecoveryExpr 0x11e142310 <col:14> '<dependent type>' contains-errors lvalue
|   |     |-CompoundStmt 0x11e142350 <col:32, line:26:5>
|   |     `-IfStmt 0x11e142448 <line:27:10, line:30:14> has_else
|   |       |-BinaryOperator 0x11e1423d8 <line:27:14, col:19> 'int' contains-errors '=='
|   |       | |-DeclRefExpr 0x11e142360 <col:14> 'int' lvalue Var 0x11e1286f8 'r' 'int'
|   |       | `-RecoveryExpr 0x11e1423b8 <col:19> '<dependent type>' contains-errors lvalue
|   |       |-BreakStmt 0x11e1423f8 <line:28:7>
|   |       `-ReturnStmt 0x11e142438 <line:30:7, col:14>
|   |         `-ImplicitCastExpr 0x11e142420 <col:14> 'int' <LValueToRValue>
|   |           `-DeclRefExpr 0x11e142400 <col:14> 'int' lvalue Var 0x11e1286f8 'r' 'int'
|   |-BinaryOperator 0x11e142740 <line:33:3, col:52> 'int' contains-errors '='
|   | |-DeclRefExpr 0x11e1424e8 <col:3> 'int' lvalue Var 0x11e1286f8 'r' 'int'
|   | `-CallExpr 0x11e142708 <col:7, col:52> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x11e1425e8 <col:7> 'int ()' Function 0x11e142530 'mailimf_fws_parse' 'int ()'
|   |   |-DeclRefExpr 0x11e142608 <col:25> 'const char *' lvalue ParmVar 0x11e1280d8 'message' 'const char *'
|   |   |-RecoveryExpr 0x11e142628 <col:34> '<dependent type>' contains-errors lvalue
|   |   `-UnaryOperator 0x11e1426f0 <col:42, col:43> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     `-RecoveryExpr 0x11e1426d0 <col:43> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x11e142c48 <line:34:3, line:35:12>
|   | |-RecoveryExpr 0x11e1427d8 <line:34:7, col:59> '_Bool' contains-errors
|   | `-ReturnStmt 0x11e142c38 <line:35:5, col:12>
|   |   `-ImplicitCastExpr 0x11e142c20 <col:12> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x11e142c00 <col:12> 'int' lvalue Var 0x11e1286f8 'r' 'int'
|   |-IfStmt 0x11e142e50 <line:38:3, line:39:12>
|   | |-RecoveryExpr 0x11e142de8 <line:38:7, col:12> '_Bool' contains-errors
|   | `-ReturnStmt 0x11e142e40 <line:39:5, col:12>
|   |   `-ImplicitCastExpr 0x11e142e28 <col:12> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x11e142e08 <col:12> 'int' lvalue Var 0x11e1286f8 'r' 'int'
|   |-BinaryOperator 0x11e1431e0 <line:43:3, col:34> 'char *' '='
|   | |-DeclRefExpr 0x11e142eb0 <col:3> 'char *' lvalue Var 0x11e128660 'domain_literal' 'char *'
|   | `-ImplicitCastExpr 0x11e1431c8 <col:20, col:34> 'char *' <BitCast>
|   |   `-CallExpr 0x11e143188 <col:20, col:34> 'void *'
|   |     |-ImplicitCastExpr 0x11e143170 <col:20> 'void *(*)(unsigned long)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x11e1430a8 <col:20> 'void *(unsigned long)' Function 0x11e142f08 'malloc' 'void *(unsigned long)'
|   |     `-ImplicitCastExpr 0x11e1431b0 <col:27, col:33> 'unsigned long' <IntegralCast>
|   |       `-BinaryOperator 0x11e143120 <col:27, col:33> 'int' '+'
|   |         |-ImplicitCastExpr 0x11e143108 <col:27> 'int' <LValueToRValue>
|   |         | `-DeclRefExpr 0x11e1430c8 <col:27> 'int' lvalue Var 0x11e128530 'len' 'int'
|   |         `-IntegerLiteral 0x11e1430e8 <col:33> 'int' 1
|   |-CallExpr 0x11e143648 <line:46:3, col:47> 'char *'
|   | |-ImplicitCastExpr 0x11e143630 <col:3> 'char *(*)(char *, const char *, unsigned long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x11e1434d8 <col:3> 'char *(char *, const char *, unsigned long)' Function 0x11e143288 'strncpy' 'char *(char *, const char *, unsigned long)'
|   | |-ImplicitCastExpr 0x11e143680 <col:11> 'char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x11e1434f8 <col:11> 'char *' lvalue Var 0x11e128660 'domain_literal' 'char *'
|   | |-BinaryOperator 0x11e143588 <col:27, col:37> 'const char *' '+'
|   | | |-ImplicitCastExpr 0x11e143558 <col:27> 'const char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x11e143518 <col:27> 'const char *' lvalue ParmVar 0x11e1280d8 'message' 'const char *'
|   | | `-ImplicitCastExpr 0x11e143570 <col:37> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x11e143538 <col:37> 'int' lvalue Var 0x11e1285c8 'begin' 'int'
|   | `-ImplicitCastExpr 0x11e1436b0 <col:44> 'unsigned long' <IntegralCast>
|   |   `-ImplicitCastExpr 0x11e143698 <col:44> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x11e1435a8 <col:44> 'int' lvalue Var 0x11e128530 'len' 'int'
|   |-BinaryOperator 0x11e143788 <line:47:3, col:25> 'char' '='
|   | |-ArraySubscriptExpr 0x11e143738 <col:3, col:21> 'char' lvalue
|   | | |-ImplicitCastExpr 0x11e143708 <col:3> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x11e1436c8 <col:3> 'char *' lvalue Var 0x11e128660 'domain_literal' 'char *'
|   | | `-ImplicitCastExpr 0x11e143720 <col:18> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x11e1436e8 <col:18> 'int' lvalue Var 0x11e128530 'len' 'int'
|   | `-ImplicitCastExpr 0x11e143770 <col:25> 'char' <IntegralCast>
|   |   `-CharacterLiteral 0x11e143758 <col:25> 'int' 0
|   `-BinaryOperator 0x11e143830 <line:49:3, col:14> 'char *' '='
|     |-UnaryOperator 0x11e1437e0 <col:3, col:5> 'char *' lvalue prefix '*' cannot overflow
|     | `-ImplicitCastExpr 0x11e1437c8 <col:5> 'char **' <LValueToRValue>
|     |   `-DeclRefExpr 0x11e1437a8 <col:5> 'char **' lvalue ParmVar 0x11e1282d8 'result' 'char **'
|     `-ImplicitCastExpr 0x11e143818 <col:14> 'char *' <LValueToRValue>
|       `-DeclRefExpr 0x11e1437f8 <col:14> 'char *' lvalue Var 0x11e128660 'domain_literal' 'char *'
|-FunctionDecl 0x11e142f08 <line:43:20> col:20 implicit used malloc 'void *(unsigned long)' extern
| |-ParmVarDecl 0x11e143008 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-BuiltinAttr 0x11e142fb0 <<invalid sloc>> Implicit 871
| `-AllocSizeAttr 0x11e143078 <col:20> Implicit 1
`-FunctionDecl 0x11e143288 <line:46:3> col:3 implicit used strncpy 'char *(char *, const char *, unsigned long)' extern
  |-ParmVarDecl 0x11e143388 <<invalid sloc>> <invalid sloc> 'char *'
  |-ParmVarDecl 0x11e1433f0 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x11e143458 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x11e143330 <<invalid sloc>> Implicit 886
