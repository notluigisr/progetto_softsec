TranslationUnitDecl 0x14c837008 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14c837eb8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14c8375d0 '__int128'
|-TypedefDecl 0x14c837f28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14c8375f0 'unsigned __int128'
|-TypedefDecl 0x14c01d830 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14c01d600 'struct __NSConstantString_tag'
|   `-Record 0x14c837f80 '__NSConstantString_tag'
|-TypedefDecl 0x14c01d898 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14c837790 '__SVInt8_t'
|-TypedefDecl 0x14c01d900 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14c8377b0 '__SVInt16_t'
|-TypedefDecl 0x14c01d968 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14c8377d0 '__SVInt32_t'
|-TypedefDecl 0x14c01d9d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14c8377f0 '__SVInt64_t'
|-TypedefDecl 0x14c01da38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14c837810 '__SVUint8_t'
|-TypedefDecl 0x14c01daa0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14c837830 '__SVUint16_t'
|-TypedefDecl 0x14c01db08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14c837850 '__SVUint32_t'
|-TypedefDecl 0x14c01db70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14c837870 '__SVUint64_t'
|-TypedefDecl 0x14c01dbd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14c837890 '__SVFloat16_t'
|-TypedefDecl 0x14c01dc40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14c8378b0 '__SVFloat32_t'
|-TypedefDecl 0x14c01dca8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14c8378d0 '__SVFloat64_t'
|-TypedefDecl 0x14c01dd10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14c8378f0 '__SVBfloat16_t'
|-TypedefDecl 0x14c01dd78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14c837910 '__clang_svint8x2_t'
|-TypedefDecl 0x14c01dde0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14c837930 '__clang_svint16x2_t'
|-TypedefDecl 0x14c01de48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14c837950 '__clang_svint32x2_t'
|-TypedefDecl 0x14c01deb0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14c837970 '__clang_svint64x2_t'
|-TypedefDecl 0x14c01df18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14c837990 '__clang_svuint8x2_t'
|-TypedefDecl 0x14c01df80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14c8379b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14c01dfe8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14c8379d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14c01e050 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14c8379f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14c01e0b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14c837a10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14c01e120 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14c837a30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14c01e188 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14c837a50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14c01e1f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14c837a70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14c01e258 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14c837a90 '__clang_svint8x3_t'
|-TypedefDecl 0x14c01e2c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14c837ab0 '__clang_svint16x3_t'
|-TypedefDecl 0x14c01e328 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14c837ad0 '__clang_svint32x3_t'
|-TypedefDecl 0x14c01e390 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14c837af0 '__clang_svint64x3_t'
|-TypedefDecl 0x14c01e3f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14c837b10 '__clang_svuint8x3_t'
|-TypedefDecl 0x14c01e460 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14c837b30 '__clang_svuint16x3_t'
|-TypedefDecl 0x14c01e4c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14c837b50 '__clang_svuint32x3_t'
|-TypedefDecl 0x14c01e530 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14c837b70 '__clang_svuint64x3_t'
|-TypedefDecl 0x14c01e598 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14c837b90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14c01ea00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14c837bb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14c01ea68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14c837bd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14c01ead0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14c837bf0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14c01eb38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14c837c10 '__clang_svint8x4_t'
|-TypedefDecl 0x14c01eba0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14c837c30 '__clang_svint16x4_t'
|-TypedefDecl 0x14c01ec08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14c837c50 '__clang_svint32x4_t'
|-TypedefDecl 0x14c01ec70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14c837c70 '__clang_svint64x4_t'
|-TypedefDecl 0x14c01ecd8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14c837c90 '__clang_svuint8x4_t'
|-TypedefDecl 0x14c01ed40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14c837cb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14c01eda8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14c837cd0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14c01ee10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14c837cf0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14c01ee78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14c837d10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14c01eee0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14c837d30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14c01ef48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14c837d50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14c01efb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14c837d70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14c01f018 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14c837d90 '__SVBool_t'
|-TypedefDecl 0x14c01f080 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14c837db0 '__clang_svboolx2_t'
|-TypedefDecl 0x14c01f0e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14c837dd0 '__clang_svboolx4_t'
|-TypedefDecl 0x14c01f150 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14c837df0 '__SVCount_t'
|-TypedefDecl 0x14c01f1f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14c01f1b0 'char *'
|   `-BuiltinType 0x14c8370b0 'char'
|-TypedefDecl 0x14c01f268 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14c01f1b0 'char *'
|   `-BuiltinType 0x14c8370b0 'char'
`-FunctionDecl 0x14c01f950 <dataset_diviso_filec/func1381_nonvuln.c:1:1, line:40:1> line:1:13 __dentry_kill 'void (struct dentry *)' static
  |-ParmVarDecl 0x14c01f848 <col:27, col:42> col:42 used dentry 'struct dentry *'
  `-CompoundStmt 0x14c04c4b0 <line:2:1, line:40:1>
    |-DeclStmt 0x14c049590 <line:3:2, col:30>
    | `-VarDecl 0x14c0494d8 <col:2, col:26> col:17 used parent 'struct dentry *' cinit
    |   `-RecoveryExpr 0x14c049570 <col:26> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14c049840 <line:5:2, line:6:20>
    | |-UnaryOperator 0x14c049788 <line:5:6, col:21> 'int' prefix '!' cannot overflow
    | | `-CallExpr 0x14c049748 <col:7, col:21> 'int'
    | |   |-ImplicitCastExpr 0x14c049730 <col:7> 'int (*)()' <FunctionToPointerDecay>
    | |   | `-DeclRefExpr 0x14c0496c0 <col:7> 'int ()' Function 0x14c049608 'IS_ROOT' 'int ()'
    | |   `-ImplicitCastExpr 0x14c049770 <col:15> 'struct dentry *' <LValueToRValue>
    | |     `-DeclRefExpr 0x14c0496e0 <col:15> 'struct dentry *' lvalue ParmVar 0x14c01f848 'dentry' 'struct dentry *'
    | `-BinaryOperator 0x14c049820 <line:6:3, col:20> 'struct dentry *' contains-errors '='
    |   |-DeclRefExpr 0x14c0497a0 <col:3> 'struct dentry *' contains-errors lvalue Var 0x14c0494d8 'parent' 'struct dentry *'
    |   `-RecoveryExpr 0x14c0497f8 <col:12, col:20> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x14c0497c0 <col:12> 'struct dentry *' lvalue ParmVar 0x14c01f848 'dentry' 'struct dentry *'
    |-CallExpr 0x14c0499d8 <line:9:2, col:38> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14c049940 <col:2> 'int ()' Function 0x14c049888 'lockref_mark_dead' 'int ()'
    | `-UnaryOperator 0x14c0499c0 <col:20, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x14c049998 <col:21, col:29> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x14c049960 <col:21> 'struct dentry *' lvalue ParmVar 0x14c01f848 'dentry' 'struct dentry *'
    |-IfStmt 0x14c049bc8 <line:12:2, line:13:31>
    | |-BinaryOperator 0x14c049ab8 <line:12:6, col:24> '<dependent type>' contains-errors '&'
    | | |-RecoveryExpr 0x14c049a38 <col:6, col:14> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x14c049a00 <col:6> 'struct dentry *' lvalue ParmVar 0x14c01f848 'dentry' 'struct dentry *'
    | | `-RecoveryExpr 0x14c049a98 <col:24> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x14c049ba0 <line:13:3, col:31> '<dependent type>' contains-errors
    |   |-CXXDependentScopeMemberExpr 0x14c049b38 <col:3, col:17> '<dependent type>' contains-errors lvalue ->d_prune
    |   | `-RecoveryExpr 0x14c049b10 <col:3, col:11> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x14c049ad8 <col:3> 'struct dentry *' lvalue ParmVar 0x14c01f848 'dentry' 'struct dentry *'
    |   `-DeclRefExpr 0x14c049b80 <col:25> 'struct dentry *' lvalue ParmVar 0x14c01f848 'dentry' 'struct dentry *'
    |-IfStmt 0x14c049f28 <line:15:2, line:18:2>
    | |-BinaryOperator 0x14c049ca0 <line:15:6, col:24> '<dependent type>' contains-errors '&'
    | | |-RecoveryExpr 0x14c049c20 <col:6, col:14> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x14c049be8 <col:6> 'struct dentry *' lvalue ParmVar 0x14c01f848 'dentry' 'struct dentry *'
    | | `-RecoveryExpr 0x14c049c80 <col:24> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x14c049f10 <col:41, line:18:2>
    |   `-IfStmt 0x14c049ef0 <line:16:3, line:17:20>
    |     |-RecoveryExpr 0x14c049d58 <line:16:7, col:45> '_Bool' contains-errors
    |     `-CallExpr 0x14c049eb0 <line:17:4, col:20> 'int'
    |       |-ImplicitCastExpr 0x14c049e98 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x14c049e58 <col:4> 'int ()' Function 0x14c049da0 'd_lru_del' 'int ()'
    |       `-ImplicitCastExpr 0x14c049ed8 <col:14> 'struct dentry *' <LValueToRValue>
    |         `-DeclRefExpr 0x14c049e78 <col:14> 'struct dentry *' lvalue ParmVar 0x14c01f848 'dentry' 'struct dentry *'
    |-CallExpr 0x14c04a080 <line:20:2, col:17> 'int'
    | |-ImplicitCastExpr 0x14c04a068 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x14c04a028 <col:2> 'int ()' Function 0x14c049f70 '__d_drop' 'int ()'
    | `-ImplicitCastExpr 0x14c04a0a8 <col:11> 'struct dentry *' <LValueToRValue>
    |   `-DeclRefExpr 0x14c04a048 <col:11> 'struct dentry *' lvalue ParmVar 0x14c01f848 'dentry' 'struct dentry *'
    |-CallExpr 0x14c04a218 <line:21:2, col:30> 'int' contains-errors
    | |-ImplicitCastExpr 0x14c04a200 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x14c04a1a0 <col:2> 'int ()' Function 0x14c04a0e8 'dentry_unlist' 'int ()'
    | |-ImplicitCastExpr 0x14c04a248 <col:16> 'struct dentry *' <LValueToRValue>
    | | `-DeclRefExpr 0x14c04a1c0 <col:16> 'struct dentry *' lvalue ParmVar 0x14c01f848 'dentry' 'struct dentry *'
    | `-ImplicitCastExpr 0x14c04a260 <col:24> 'struct dentry *' contains-errors <LValueToRValue>
    |   `-DeclRefExpr 0x14c04a1e0 <col:24> 'struct dentry *' contains-errors lvalue Var 0x14c0494d8 'parent' 'struct dentry *'
    |-IfStmt 0x14c04b868 <line:22:2, line:23:30>
    | |-ImplicitCastExpr 0x14c04a298 <line:22:6> 'struct dentry *' contains-errors <LValueToRValue>
    | | `-DeclRefExpr 0x14c04a278 <col:6> 'struct dentry *' contains-errors lvalue Var 0x14c0494d8 'parent' 'struct dentry *'
    | `-CallExpr 0x14c04b840 <line:23:3, col:30> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14c04a390 <col:3> 'int ()' Function 0x14c04a2d8 'spin_unlock' 'int ()'
    |   `-UnaryOperator 0x14c04b828 <col:15, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x14c04b800 <col:16, col:24> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x14c04a3b0 <col:16> 'struct dentry *' contains-errors lvalue Var 0x14c0494d8 'parent' 'struct dentry *'
    |-IfStmt 0x14c04bb20 <line:24:2, line:27:30> has_else
    | |-RecoveryExpr 0x14c04b8c0 <line:24:6, col:14> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x14c04b888 <col:6> 'struct dentry *' lvalue ParmVar 0x14c01f848 'dentry' 'struct dentry *'
    | |-CallExpr 0x14c04ba20 <line:25:3, col:29> 'int'
    | | |-ImplicitCastExpr 0x14c04ba08 <col:3> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x14c04b9c8 <col:3> 'int ()' Function 0x14c04b910 'dentry_unlink_inode' 'int ()'
    | | `-ImplicitCastExpr 0x14c04ba48 <col:23> 'struct dentry *' <LValueToRValue>
    | |   `-DeclRefExpr 0x14c04b9e8 <col:23> 'struct dentry *' lvalue ParmVar 0x14c01f848 'dentry' 'struct dentry *'
    | `-CallExpr 0x14c04baf8 <line:27:3, col:30> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14c04ba60 <col:3> 'int ()' Function 0x14c04a2d8 'spin_unlock' 'int ()'
    |   `-UnaryOperator 0x14c04bae0 <col:15, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x14c04bab8 <col:16, col:24> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x14c04ba80 <col:16> 'struct dentry *' lvalue ParmVar 0x14c01f848 'dentry' 'struct dentry *'
    |-IfStmt 0x14c04be68 <line:29:2, line:30:33>
    | |-BinaryOperator 0x14c04bd58 <line:29:6, col:36> 'int' contains-errors '&&'
    | | |-RecoveryExpr 0x14c04bc88 <col:6, col:14> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x14c04bc50 <col:6> 'struct dentry *' lvalue ParmVar 0x14c01f848 'dentry' 'struct dentry *'
    | | `-CXXDependentScopeMemberExpr 0x14c04bd10 <col:22, col:36> '<dependent type>' contains-errors lvalue ->d_release
    | |   `-RecoveryExpr 0x14c04bce8 <col:22, col:30> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x14c04bcb0 <col:22> 'struct dentry *' lvalue ParmVar 0x14c01f848 'dentry' 'struct dentry *'
    | `-CallExpr 0x14c04be40 <line:30:3, col:33> '<dependent type>' contains-errors
    |   |-CXXDependentScopeMemberExpr 0x14c04bdd8 <col:3, col:17> '<dependent type>' contains-errors lvalue ->d_release
    |   | `-RecoveryExpr 0x14c04bdb0 <col:3, col:11> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x14c04bd78 <col:3> 'struct dentry *' lvalue ParmVar 0x14c01f848 'dentry' 'struct dentry *'
    |   `-DeclRefExpr 0x14c04be20 <col:27> 'struct dentry *' lvalue ParmVar 0x14c01f848 'dentry' 'struct dentry *'
    |-CallExpr 0x14c04c000 <line:32:2, col:27> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14c04bf68 <col:2> 'int ()' Function 0x14c04beb0 'spin_lock' 'int ()'
    | `-UnaryOperator 0x14c04bfe8 <col:12, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x14c04bfc0 <col:13, col:21> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x14c04bf88 <col:13> 'struct dentry *' lvalue ParmVar 0x14c01f848 'dentry' 'struct dentry *'
    |-IfStmt 0x14c04c118 <line:33:2, line:36:2>
    | |-RecoveryExpr 0x14c04c088 <line:33:6, col:24> '_Bool' contains-errors
    | `-CompoundStmt 0x14c04c108 <col:44, line:36:2>
    |-CallExpr 0x14c04c1d0 <line:37:2, col:29> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14c04c138 <col:2> 'int ()' Function 0x14c04a2d8 'spin_unlock' 'int ()'
    | `-UnaryOperator 0x14c04c1b8 <col:14, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x14c04c190 <col:15, col:23> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x14c04c158 <col:15> 'struct dentry *' lvalue ParmVar 0x14c01f848 'dentry' 'struct dentry *'
    `-IfStmt 0x14c04c490 <line:38:2, line:39:21>
      |-RecoveryExpr 0x14c04c2f8 <line:38:6, col:21> '_Bool' contains-errors
      `-CallExpr 0x14c04c450 <line:39:3, col:21> 'int'
        |-ImplicitCastExpr 0x14c04c438 <col:3> 'int (*)()' <FunctionToPointerDecay>
        | `-DeclRefExpr 0x14c04c3f8 <col:3> 'int ()' Function 0x14c04c340 'dentry_free' 'int ()'
        `-ImplicitCastExpr 0x14c04c478 <col:15> 'struct dentry *' <LValueToRValue>
          `-DeclRefExpr 0x14c04c418 <col:15> 'struct dentry *' lvalue ParmVar 0x14c01f848 'dentry' 'struct dentry *'
