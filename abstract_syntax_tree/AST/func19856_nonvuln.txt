TranslationUnitDecl 0x156855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1568564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x156855bd0 '__int128'
|-TypedefDecl 0x156856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x156855bf0 'unsigned __int128'
|-TypedefDecl 0x156927030 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x156926e00 'struct __NSConstantString_tag'
|   `-Record 0x156856580 '__NSConstantString_tag'
|-TypedefDecl 0x156927098 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x156855d90 '__SVInt8_t'
|-TypedefDecl 0x156927100 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x156855db0 '__SVInt16_t'
|-TypedefDecl 0x156927168 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x156855dd0 '__SVInt32_t'
|-TypedefDecl 0x1569271d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x156855df0 '__SVInt64_t'
|-TypedefDecl 0x156927238 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x156855e10 '__SVUint8_t'
|-TypedefDecl 0x1569272a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x156855e30 '__SVUint16_t'
|-TypedefDecl 0x156927308 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x156855e50 '__SVUint32_t'
|-TypedefDecl 0x156927370 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x156855e70 '__SVUint64_t'
|-TypedefDecl 0x1569273d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x156855e90 '__SVFloat16_t'
|-TypedefDecl 0x156927440 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x156855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1569274a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x156855ed0 '__SVFloat64_t'
|-TypedefDecl 0x156927510 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x156855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x156927578 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x156855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1569275e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x156855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x156927648 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x156855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1569276b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x156855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x156927718 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x156855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x156927780 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x156855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1569277e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x156855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x156927850 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x156855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1569278b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x156856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x156927920 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x156856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x156927988 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x156856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1569279f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x156856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x156927a58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x156856090 '__clang_svint8x3_t'
|-TypedefDecl 0x156927ac0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1568560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x156927b28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1568560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x156927b90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1568560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x156927bf8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x156856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x156927c60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x156856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x156927cc8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x156856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x156927d30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x156856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x156927d98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x156856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x156928600 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1568561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x156928668 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1568561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1569286d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1568561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x156928738 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x156856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1569287a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x156856230 '__clang_svint16x4_t'
|-TypedefDecl 0x156928808 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x156856250 '__clang_svint32x4_t'
|-TypedefDecl 0x156928870 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x156856270 '__clang_svint64x4_t'
|-TypedefDecl 0x1569288d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x156856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x156928940 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1568562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1569289a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1568562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x156928a10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1568562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x156928a78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x156856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x156928ae0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x156856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x156928b48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x156856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x156928bb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x156856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x156928c18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x156856390 '__SVBool_t'
|-TypedefDecl 0x156928c80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1568563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x156928ce8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1568563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x156928d50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1568563f0 '__SVCount_t'
|-TypedefDecl 0x156928df8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x156928db0 'char *'
|   `-BuiltinType 0x1568556b0 'char'
|-TypedefDecl 0x156928e68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x156928db0 'char *'
|   `-BuiltinType 0x1568556b0 'char'
|-FunctionDecl 0x156929080 <dataset_diviso_filec/func19856_nonvuln.c:1:1, line:95:1> line:1:6 invalid comps_mrtree_unset 'void (int *, const char *)'
| |-ParmVarDecl 0x156928f28 <col:25, col:40> col:40 invalid rt 'int *'
| |-ParmVarDecl 0x156928fa8 <col:44, col:57> col:57 used key 'const char *'
| `-CompoundStmt 0x1569466b0 <col:62, line:95:1>
|   |-DeclStmt 0x156929320 <line:5:5, col:32>
|   | |-VarDecl 0x156929198 <col:5, col:18> col:18 used offset 'unsigned int'
|   | |-VarDecl 0x156929218 <col:5, col:26> col:26 used len 'unsigned int'
|   | `-VarDecl 0x156929298 <col:5, col:31> col:31 used x 'unsigned int'
|   |-DeclStmt 0x156929440 <line:6:5, col:22>
|   | |-VarDecl 0x156929348 <col:5, col:10> col:10 used found 'char'
|   | `-VarDecl 0x1569293c0 <col:5, col:17> col:17 used ended 'char'
|   |-DeclStmt 0x156942748 <line:9:5, line:12:16>
|   | |-RecordDecl 0x156929470 <line:9:5, line:12:5> line:9:12 invalid struct Relation definition
|   | | |-FieldDecl 0x156929528 <line:10:9, col:24> col:24 invalid parent_nodes 'int *'
|   | | `-FieldDecl 0x156929590 <line:11:9, col:28> col:28 invalid child_it 'int *'
|   | `-VarDecl 0x1569426c8 <line:9:5, line:12:8> col:8 used relation 'struct Relation *'
|   |-CallExpr 0x156943168 <line:15:5, col:46> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x156942a28 <col:5> 'int ()' Function 0x156942970 'comps_hslist_init' 'int ()'
|   | |-RecoveryExpr 0x156943108 <col:23> '<dependent type>' contains-errors lvalue
|   | |-RecoveryExpr 0x156943128 <col:29> '<dependent type>' contains-errors lvalue
|   | |-RecoveryExpr 0x156943148 <col:35> '<dependent type>' contains-errors lvalue
|   | `-UnaryOperator 0x1569430b0 <col:41, col:42> 'void (*)(void *)' prefix '&' cannot overflow
|   |   `-DeclRefExpr 0x156943060 <col:42> 'void (void *)' Function 0x156942ef0 'free' 'void (void *)'
|   |-BinaryOperator 0x156943470 <line:17:5, col:21> 'unsigned int' '='
|   | |-DeclRefExpr 0x1569431a8 <col:5> 'unsigned int' lvalue Var 0x156929218 'len' 'unsigned int'
|   | `-ImplicitCastExpr 0x156943458 <col:11, col:21> 'unsigned int' <IntegralCast>
|   |   `-CallExpr 0x156943418 <col:11, col:21> 'unsigned long'
|   |     |-ImplicitCastExpr 0x156943400 <col:11> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x156943378 <col:11> 'unsigned long (const char *)' Function 0x156943208 'strlen' 'unsigned long (const char *)'
|   |     `-ImplicitCastExpr 0x156943440 <col:18> 'const char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x156943398 <col:18> 'const char *' lvalue ParmVar 0x156928fa8 'key' 'const char *'
|   |-BinaryOperator 0x1569434e8 <line:18:5, col:14> 'unsigned int' '='
|   | |-DeclRefExpr 0x156943490 <col:5> 'unsigned int' lvalue Var 0x156929198 'offset' 'unsigned int'
|   | `-ImplicitCastExpr 0x1569434d0 <col:14> 'unsigned int' <IntegralCast>
|   |   `-IntegerLiteral 0x1569434b0 <col:14> 'int' 0
|   |-WhileStmt 0x156946660 <line:20:5, line:92:5>
|   | |-BinaryOperator 0x1569435e0 <line:20:12, col:22> 'int' '!='
|   | | |-ImplicitCastExpr 0x1569435b0 <col:12> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x156943570 <col:12> 'unsigned int' lvalue Var 0x156929198 'offset' 'unsigned int'
|   | | `-ImplicitCastExpr 0x1569435c8 <col:22> 'unsigned int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x156943590 <col:22> 'unsigned int' lvalue Var 0x156929218 'len' 'unsigned int'
|   | `-CompoundStmt 0x156946628 <col:27, line:92:5>
|   |   |-BinaryOperator 0x156944a58 <line:21:9, col:17> 'char' '='
|   |   | |-DeclRefExpr 0x156944a00 <col:9> 'char' lvalue Var 0x156929348 'found' 'char'
|   |   | `-ImplicitCastExpr 0x156944a40 <col:17> 'char' <IntegralCast>
|   |   |   `-IntegerLiteral 0x156944a20 <col:17> 'int' 0
|   |   |-IfStmt 0x156944d98 <line:28:9, line:31:9>
|   |   | |-UnaryOperator 0x156944c58 <line:28:13, col:14> 'int' prefix '!' cannot overflow
|   |   | | `-ImplicitCastExpr 0x156944c40 <col:14> 'char' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x156944c20 <col:14> 'char' lvalue Var 0x156929348 'found' 'char'
|   |   | `-CompoundStmt 0x156944d80 <col:21, line:31:9>
|   |   |   `-ReturnStmt 0x156944d70 <line:30:13>
|   |   |-ForStmt 0x156945388 <line:34:9, line:40:9>
|   |   | |-BinaryOperator 0x156944e10 <line:34:14, col:16> 'unsigned int' '='
|   |   | | |-DeclRefExpr 0x156944db8 <col:14> 'unsigned int' lvalue Var 0x156929298 'x' 'unsigned int'
|   |   | | `-ImplicitCastExpr 0x156944df8 <col:16> 'unsigned int' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x156944dd8 <col:16> 'int' 1
|   |   | |-<<<NULL>>>
|   |   | |-<<<NULL>>>
|   |   | |-UnaryOperator 0x156944e50 <col:20, col:21> 'unsigned int' postfix '++'
|   |   | | `-DeclRefExpr 0x156944e30 <col:20> 'unsigned int' lvalue Var 0x156929298 'x' 'unsigned int'
|   |   | `-CompoundStmt 0x156945350 <col:25, line:40:9>
|   |   |   |-BinaryOperator 0x156944ec0 <line:35:13, col:19> 'char' '='
|   |   |   | |-DeclRefExpr 0x156944e68 <col:13> 'char' lvalue Var 0x1569293c0 'ended' 'char'
|   |   |   | `-ImplicitCastExpr 0x156944ea8 <col:19> 'char' <IntegralCast>
|   |   |   |   `-IntegerLiteral 0x156944e88 <col:19> 'int' 0
|   |   |   |-IfStmt 0x156944fb0 <line:36:13, col:47>
|   |   |   | |-RecoveryExpr 0x156944f20 <col:17, col:35> '_Bool' contains-errors
|   |   |   | `-CompoundAssignOperator 0x156944f80 <col:38, col:47> 'char' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |   |   |-DeclRefExpr 0x156944f40 <col:38> 'char' lvalue Var 0x1569293c0 'ended' 'char'
|   |   |   |   `-IntegerLiteral 0x156944f60 <col:47> 'int' 1
|   |   |   |-IfStmt 0x156945128 <line:37:13, col:45>
|   |   |   | |-BinaryOperator 0x156945098 <col:17, col:28> 'int' '=='
|   |   |   | | |-ImplicitCastExpr 0x156945080 <col:17> 'unsigned int' <LValueToRValue>
|   |   |   | | | `-DeclRefExpr 0x156944fd0 <col:17> 'unsigned int' lvalue Var 0x156929298 'x' 'unsigned int'
|   |   |   | | `-BinaryOperator 0x156945060 <col:22, col:28> 'unsigned int' '-'
|   |   |   | |   |-ImplicitCastExpr 0x156945030 <col:22> 'unsigned int' <LValueToRValue>
|   |   |   | |   | `-DeclRefExpr 0x156944ff0 <col:22> 'unsigned int' lvalue Var 0x156929218 'len' 'unsigned int'
|   |   |   | |   `-ImplicitCastExpr 0x156945048 <col:28> 'unsigned int' <LValueToRValue>
|   |   |   | |     `-DeclRefExpr 0x156945010 <col:28> 'unsigned int' lvalue Var 0x156929198 'offset' 'unsigned int'
|   |   |   | `-CompoundAssignOperator 0x1569450f8 <col:36, col:45> 'char' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |   |   |-DeclRefExpr 0x1569450b8 <col:36> 'char' lvalue Var 0x1569293c0 'ended' 'char'
|   |   |   |   `-IntegerLiteral 0x1569450d8 <col:45> 'int' 2
|   |   |   |-IfStmt 0x1569451e0 <line:38:13, col:29>
|   |   |   | |-BinaryOperator 0x1569451b8 <col:17, col:26> 'int' '!='
|   |   |   | | |-ImplicitCastExpr 0x1569451a0 <col:17> 'int' <IntegralCast>
|   |   |   | | | `-ImplicitCastExpr 0x156945188 <col:17> 'char' <LValueToRValue>
|   |   |   | | |   `-DeclRefExpr 0x156945148 <col:17> 'char' lvalue Var 0x1569293c0 'ended' 'char'
|   |   |   | | `-IntegerLiteral 0x156945168 <col:26> 'int' 0
|   |   |   | `-BreakStmt 0x1569451d8 <col:29>
|   |   |   `-IfStmt 0x156945330 <line:39:13, col:50>
|   |   |     |-RecoveryExpr 0x156945308 <col:17, col:47> '_Bool' contains-errors
|   |   |     `-BreakStmt 0x156945328 <col:50>
|   |   |-IfStmt 0x156945fb8 <line:41:9, line:83:9> has_else
|   |   | |-BinaryOperator 0x156945430 <line:41:13, col:22> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x156945418 <col:13> 'int' <IntegralCast>
|   |   | | | `-ImplicitCastExpr 0x156945400 <col:13> 'char' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x1569453c0 <col:13> 'char' lvalue Var 0x1569293c0 'ended' 'char'
|   |   | | `-IntegerLiteral 0x1569453e0 <col:22> 'int' 3
|   |   | |-CompoundStmt 0x156945df8 <col:25, line:78:9>
|   |   | | |-IfStmt 0x156945be0 <line:43:13, line:53:13> has_else
|   |   | | | |-RecoveryExpr 0x156945450 <line:43:17, col:43> '_Bool' contains-errors
|   |   | | | |-CompoundStmt 0x1569459c0 <col:49, line:48:13>
|   |   | | | | `-CallExpr 0x156945748 <line:44:17, col:29> 'int'
|   |   | | | |   |-ImplicitCastExpr 0x156945730 <col:17> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | | |   | `-DeclRefExpr 0x156945658 <col:17> 'int (const char *, ...)' Function 0x1569454b0 'printf' 'int (const char *, ...)'
|   |   | | | |   `-ImplicitCastExpr 0x156945788 <col:24> 'const char *' <NoOp>
|   |   | | | |     `-ImplicitCastExpr 0x156945770 <col:24> 'char *' <ArrayToPointerDecay>
|   |   | | | |       `-StringLiteral 0x1569456c0 <col:24> 'char[4]' lvalue "STR"
|   |   | | | `-CompoundStmt 0x156945bc8 <line:49:18, line:53:13>
|   |   | | |   `-CallExpr 0x156945a50 <line:50:17, col:29> 'int'
|   |   | | |     |-ImplicitCastExpr 0x156945a38 <col:17> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | |     | `-DeclRefExpr 0x1569459d8 <col:17> 'int (const char *, ...)' Function 0x1569454b0 'printf' 'int (const char *, ...)'
|   |   | | |     `-ImplicitCastExpr 0x156945a90 <col:24> 'const char *' <NoOp>
|   |   | | |       `-ImplicitCastExpr 0x156945a78 <col:24> 'char *' <ArrayToPointerDecay>
|   |   | | |         `-StringLiteral 0x156945a00 <col:24> 'char[4]' lvalue "STR"
|   |   | | |-IfStmt 0x156945c78 <line:55:13, line:58:13>
|   |   | | | |-RecoveryExpr 0x156945c10 <line:55:17, col:31> '_Bool' contains-errors
|   |   | | | `-CompoundStmt 0x156945c60 <col:37, line:58:13>
|   |   | | |   `-ReturnStmt 0x156945c50 <line:57:17>
|   |   | | |-WhileStmt 0x156945da8 <line:63:13, line:75:13>
|   |   | | | |-RecoveryExpr 0x156945c98 <line:63:20, col:46> '_Bool' contains-errors
|   |   | | | `-CompoundStmt 0x156945d98 <col:52, line:75:13>
|   |   | | `-ReturnStmt 0x156945de8 <line:77:13>
|   |   | `-IfStmt 0x156945f88 <line:79:14, line:83:9> has_else
|   |   |   |-BinaryOperator 0x156945e98 <line:79:18, col:27> 'int' '=='
|   |   |   | |-ImplicitCastExpr 0x156945e80 <col:18> 'int' <IntegralCast>
|   |   |   | | `-ImplicitCastExpr 0x156945e68 <col:18> 'char' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x156945e28 <col:18> 'char' lvalue Var 0x1569293c0 'ended' 'char'
|   |   |   | `-IntegerLiteral 0x156945e48 <col:27> 'int' 1
|   |   |   |-CompoundAssignOperator 0x156945f10 <col:30, col:38> 'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |   |   | |-DeclRefExpr 0x156945eb8 <col:30> 'unsigned int' lvalue Var 0x156929198 'offset' 'unsigned int'
|   |   |   | `-ImplicitCastExpr 0x156945ef8 <col:38> 'unsigned int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x156945ed8 <col:38> 'unsigned int' lvalue Var 0x156929298 'x' 'unsigned int'
|   |   |   `-CompoundStmt 0x156945f70 <line:80:14, line:83:9>
|   |   |     `-ReturnStmt 0x156945f60 <line:82:13>
|   |   `-IfStmt 0x1569463b0 <line:84:9, line:87:9>
|   |     |-RecoveryExpr 0x156946348 <line:84:13, col:61> '_Bool' contains-errors
|   |     `-CompoundStmt 0x156946398 <col:67, line:87:9>
|   |       `-ReturnStmt 0x156946388 <line:86:13>
|   `-ReturnStmt 0x1569466a0 <line:94:5>
|-FunctionDecl 0x156942ef0 <line:15:42> col:42 implicit used free 'void (void *)' extern
| |-ParmVarDecl 0x156942ff0 <<invalid sloc>> <invalid sloc> 'void *'
| `-BuiltinAttr 0x156942f98 <<invalid sloc>> Implicit 873
|-FunctionDecl 0x156943208 <line:17:11> col:11 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x156943308 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x1569432b0 <<invalid sloc>> Implicit 902
|-FunctionDecl 0x1569454b0 <line:44:17> col:17 implicit used printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x1569455b0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-BuiltinAttr 0x156945558 <<invalid sloc>> Implicit 903
| `-FormatAttr 0x156945620 <col:17> Implicit printf 1 2
`-FunctionDecl 0x156946048 <line:84:25> col:25 implicit used malloc 'void *(unsigned long)' extern
  |-ParmVarDecl 0x156946148 <<invalid sloc>> <invalid sloc> 'unsigned long'
  |-BuiltinAttr 0x1569460f0 <<invalid sloc>> Implicit 871
  `-AllocSizeAttr 0x1569461b8 <col:25> Implicit 1
