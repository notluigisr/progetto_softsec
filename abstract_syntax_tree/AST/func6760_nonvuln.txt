TranslationUnitDecl 0x124855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1248564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x124855bd0 '__int128'
|-TypedefDecl 0x124856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x124855bf0 'unsigned __int128'
|-TypedefDecl 0x124926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x124926000 'struct __NSConstantString_tag'
|   `-Record 0x124856580 '__NSConstantString_tag'
|-TypedefDecl 0x124926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x124855d90 '__SVInt8_t'
|-TypedefDecl 0x124926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x124855db0 '__SVInt16_t'
|-TypedefDecl 0x124926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x124855dd0 '__SVInt32_t'
|-TypedefDecl 0x1249263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x124855df0 '__SVInt64_t'
|-TypedefDecl 0x124926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x124855e10 '__SVUint8_t'
|-TypedefDecl 0x1249264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x124855e30 '__SVUint16_t'
|-TypedefDecl 0x124926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x124855e50 '__SVUint32_t'
|-TypedefDecl 0x124926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x124855e70 '__SVUint64_t'
|-TypedefDecl 0x1249265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x124855e90 '__SVFloat16_t'
|-TypedefDecl 0x124926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x124855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1249266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x124855ed0 '__SVFloat64_t'
|-TypedefDecl 0x124926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x124855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x124926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x124855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1249267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x124855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x124926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x124855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1249268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x124855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x124926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x124855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x124926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x124855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1249269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x124855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x124926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x124855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x124926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x124856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x124926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x124856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x124926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x124856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x124926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x124856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x124926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x124856090 '__clang_svint8x3_t'
|-TypedefDecl 0x124926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1248560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x124926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1248560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x124926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1248560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x124926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x124856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x124926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x124856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x124926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x124856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x124926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x124856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x124926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x124856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x124927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1248561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x124927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1248561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1249278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1248561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x124927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x124856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1249279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x124856230 '__clang_svint16x4_t'
|-TypedefDecl 0x124927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x124856250 '__clang_svint32x4_t'
|-TypedefDecl 0x124927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x124856270 '__clang_svint64x4_t'
|-TypedefDecl 0x124927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x124856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x124927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1248562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x124927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1248562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x124927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1248562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x124927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x124856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x124927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x124856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x124927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x124856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x124927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x124856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x124927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x124856390 '__SVBool_t'
|-TypedefDecl 0x124927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1248563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x124927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1248563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x124927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1248563f0 '__SVCount_t'
|-TypedefDecl 0x124927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x124927fb0 'char *'
|   `-BuiltinType 0x1248556b0 'char'
|-TypedefDecl 0x124928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x124927fb0 'char *'
|   `-BuiltinType 0x1248556b0 'char'
|-FunctionDecl 0x124928548 <dataset_diviso_filec/func6760_nonvuln.c:1:1, line:61:1> line:1:5 invalid run_command 'int (char *, int, int (*)(void *), void *)'
| |-ParmVarDecl 0x1249280d8 <col:17, col:23> col:23 used buf 'char *'
| |-ParmVarDecl 0x124928170 <col:28, col:35> col:35 invalid buf_size 'int'
| |-ParmVarDecl 0x124928370 <col:45, col:67> col:51 used child_fn 'int (*)(void *)'
| |-ParmVarDecl 0x1249283f0 <col:70, col:76> col:76 used args 'void *'
| `-CompoundStmt 0x1249445e0 <line:2:1, line:61:1>
|   |-DeclStmt 0x124941888 <line:4:2, col:26>
|   | |-VarDecl 0x124928628 <col:2, col:6> col:6 used ret 'int'
|   | |-VarDecl 0x1249286a8 <col:2, col:11> col:11 used fret 'int'
|   | `-VarDecl 0x124941800 <col:2, col:25> col:17 used pipefd 'int[2]'
|   |-IfStmt 0x124941a08 <line:8:2, line:9:12>
|   | |-BinaryOperator 0x124941920 <line:8:6, col:22> 'int' contains-errors '&&'
|   | | |-BinaryOperator 0x1249418e0 <col:6, col:17> 'int' contains-errors '>'
|   | | | |-RecoveryExpr 0x1249418a0 <col:6> '<dependent type>' contains-errors lvalue
|   | | | `-IntegerLiteral 0x1249418c0 <col:17> 'int' 0
|   | | `-DeclRefExpr 0x124941900 <col:22> 'char *' lvalue ParmVar 0x1249280d8 'buf' 'char *'
|   | `-BinaryOperator 0x1249419e8 <line:9:3, col:12> 'char' '='
|   |   |-ArraySubscriptExpr 0x124941998 <col:3, col:8> 'char' lvalue
|   |   | |-ImplicitCastExpr 0x124941980 <col:3> 'char *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x124941940 <col:3> 'char *' lvalue ParmVar 0x1249280d8 'buf' 'char *'
|   |   | `-IntegerLiteral 0x124941960 <col:7> 'int' 0
|   |   `-ImplicitCastExpr 0x1249419d0 <col:12> 'char' <IntegralCast>
|   |     `-CharacterLiteral 0x1249419b8 <col:12> 'int' 0
|   |-IfStmt 0x124941ee0 <line:11:2, line:14:2>
|   | |-BinaryOperator 0x124941c98 <line:11:6, col:21> 'int' '<'
|   | | |-CallExpr 0x124941c08 <col:6, col:17> 'int'
|   | | | |-ImplicitCastExpr 0x124941bf0 <col:6> 'int (*)()' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x124941b80 <col:6> 'int ()' Function 0x124941ac8 'pipe' 'int ()'
|   | | | `-ImplicitCastExpr 0x124941c60 <col:11> 'int *' <ArrayToPointerDecay>
|   | | |   `-DeclRefExpr 0x124941ba0 <col:11> 'int[2]' lvalue Var 0x124941800 'pipefd' 'int[2]'
|   | | `-IntegerLiteral 0x124941c78 <col:21> 'int' 0
|   | `-CompoundStmt 0x124941ec0 <col:24, line:14:2>
|   |   |-CallExpr 0x124941e38 <line:12:3, col:17> 'int'
|   |   | |-ImplicitCastExpr 0x124941e20 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x124941d98 <col:3> 'int ()' Function 0x124941ce0 'SYSERROR' 'int ()'
|   |   | `-ImplicitCastExpr 0x124941e60 <col:12> 'char *' <ArrayToPointerDecay>
|   |   |   `-StringLiteral 0x124941e00 <col:12> 'char[4]' lvalue "STR"
|   |   `-ReturnStmt 0x124941eb0 <line:13:3, col:11>
|   |     `-UnaryOperator 0x124941e98 <col:10, col:11> 'int' prefix '-'
|   |       `-IntegerLiteral 0x124941e78 <col:11> 'int' 1
|   |-IfStmt 0x124942468 <line:17:2, line:22:2>
|   | |-RecoveryExpr 0x124942078 <line:17:6, col:14> '_Bool' contains-errors
|   | `-CompoundStmt 0x124942438 <col:17, line:22:2>
|   |   |-CallExpr 0x124942228 <line:18:3, col:18> 'int'
|   |   | |-ImplicitCastExpr 0x124942210 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x124942178 <col:3> 'int ()' Function 0x1249420c0 'close' 'int ()'
|   |   | `-ImplicitCastExpr 0x124942250 <col:9, col:17> 'int' <LValueToRValue>
|   |   |   `-ArraySubscriptExpr 0x1249421f0 <col:9, col:17> 'int' lvalue
|   |   |     |-ImplicitCastExpr 0x1249421d8 <col:9> 'int *' <ArrayToPointerDecay>
|   |   |     | `-DeclRefExpr 0x124942198 <col:9> 'int[2]' lvalue Var 0x124941800 'pipefd' 'int[2]'
|   |   |     `-IntegerLiteral 0x1249421b8 <col:16> 'int' 0
|   |   |-CallExpr 0x124942318 <line:19:3, col:18> 'int'
|   |   | |-ImplicitCastExpr 0x124942300 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x124942268 <col:3> 'int ()' Function 0x1249420c0 'close' 'int ()'
|   |   | `-ImplicitCastExpr 0x124942340 <col:9, col:17> 'int' <LValueToRValue>
|   |   |   `-ArraySubscriptExpr 0x1249422e0 <col:9, col:17> 'int' lvalue
|   |   |     |-ImplicitCastExpr 0x1249422c8 <col:9> 'int *' <ArrayToPointerDecay>
|   |   |     | `-DeclRefExpr 0x124942288 <col:9> 'int[2]' lvalue Var 0x124941800 'pipefd' 'int[2]'
|   |   |     `-IntegerLiteral 0x1249422a8 <col:16> 'int' 1
|   |   |-CallExpr 0x1249423b0 <line:20:3, col:17> 'int'
|   |   | |-ImplicitCastExpr 0x124942398 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x124942358 <col:3> 'int ()' Function 0x124941ce0 'SYSERROR' 'int ()'
|   |   | `-ImplicitCastExpr 0x1249423d8 <col:12> 'char *' <ArrayToPointerDecay>
|   |   |   `-StringLiteral 0x124942378 <col:12> 'char[4]' lvalue "STR"
|   |   `-ReturnStmt 0x124942428 <line:21:3, col:11>
|   |     `-UnaryOperator 0x124942410 <col:10, col:11> 'int' prefix '-'
|   |       `-IntegerLiteral 0x1249423f0 <col:11> 'int' 1
|   |-IfStmt 0x124943e60 <line:24:2, line:45:2>
|   | |-RecoveryExpr 0x1249424a0 <line:24:6, col:15> '_Bool' contains-errors
|   | `-CompoundStmt 0x124943e18 <col:18, line:45:2>
|   |   |-CallExpr 0x124942570 <line:26:3, col:18> 'int'
|   |   | |-ImplicitCastExpr 0x124942558 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1249424c0 <col:3> 'int ()' Function 0x1249420c0 'close' 'int ()'
|   |   | `-ImplicitCastExpr 0x124942598 <col:9, col:17> 'int' <LValueToRValue>
|   |   |   `-ArraySubscriptExpr 0x124942538 <col:9, col:17> 'int' lvalue
|   |   |     |-ImplicitCastExpr 0x124942520 <col:9> 'int *' <ArrayToPointerDecay>
|   |   |     | `-DeclRefExpr 0x1249424e0 <col:9> 'int[2]' lvalue Var 0x124941800 'pipefd' 'int[2]'
|   |   |     `-IntegerLiteral 0x124942500 <col:16> 'int' 0
|   |   |-BinaryOperator 0x124943070 <line:29:3, col:38> 'int' contains-errors '='
|   |   | |-DeclRefExpr 0x1249425b0 <col:3> 'int' lvalue Var 0x124928628 'ret' 'int'
|   |   | `-CallExpr 0x124943040 <col:9, col:38> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x1249426b0 <col:9> 'int ()' Function 0x1249425f8 'dup2' 'int ()'
|   |   |   |-ArraySubscriptExpr 0x124943000 <col:14, col:22> 'int' lvalue
|   |   |   | |-ImplicitCastExpr 0x1249427e8 <col:14> 'int *' <ArrayToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x1249426d0 <col:14> 'int[2]' lvalue Var 0x124941800 'pipefd' 'int[2]'
|   |   |   | `-IntegerLiteral 0x1249426f0 <col:21> 'int' 1
|   |   |   `-RecoveryExpr 0x124943020 <col:25> '<dependent type>' contains-errors lvalue
|   |   |-IfStmt 0x124943308 <line:30:3, line:31:39>
|   |   | |-BinaryOperator 0x1249430e8 <line:30:7, col:14> 'int' '>='
|   |   | | |-ImplicitCastExpr 0x1249430d0 <col:7> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x124943090 <col:7> 'int' lvalue Var 0x124928628 'ret' 'int'
|   |   | | `-IntegerLiteral 0x1249430b0 <col:14> 'int' 0
|   |   | `-BinaryOperator 0x1249432e8 <line:31:4, col:39> 'int' contains-errors '='
|   |   |   |-DeclRefExpr 0x124943108 <col:4> 'int' lvalue Var 0x124928628 'ret' 'int'
|   |   |   `-CallExpr 0x1249432b8 <col:10, col:39> '<dependent type>' contains-errors
|   |   |     |-DeclRefExpr 0x124943128 <col:10> 'int ()' Function 0x1249425f8 'dup2' 'int ()'
|   |   |     |-ArraySubscriptExpr 0x124943278 <col:15, col:23> 'int' lvalue
|   |   |     | |-ImplicitCastExpr 0x124943260 <col:15> 'int *' <ArrayToPointerDecay>
|   |   |     | | `-DeclRefExpr 0x124943148 <col:15> 'int[2]' lvalue Var 0x124941800 'pipefd' 'int[2]'
|   |   |     | `-IntegerLiteral 0x124943168 <col:22> 'int' 1
|   |   |     `-RecoveryExpr 0x124943298 <col:26> '<dependent type>' contains-errors lvalue
|   |   |-CallExpr 0x1249433d8 <line:34:3, col:18> 'int'
|   |   | |-ImplicitCastExpr 0x1249433c0 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x124943328 <col:3> 'int ()' Function 0x1249420c0 'close' 'int ()'
|   |   | `-ImplicitCastExpr 0x124943400 <col:9, col:17> 'int' <LValueToRValue>
|   |   |   `-ArraySubscriptExpr 0x1249433a0 <col:9, col:17> 'int' lvalue
|   |   |     |-ImplicitCastExpr 0x124943388 <col:9> 'int *' <ArrayToPointerDecay>
|   |   |     | `-DeclRefExpr 0x124943348 <col:9> 'int[2]' lvalue Var 0x124941800 'pipefd' 'int[2]'
|   |   |     `-IntegerLiteral 0x124943368 <col:16> 'int' 1
|   |   |-IfStmt 0x124943bc8 <line:36:3, line:39:3>
|   |   | |-BinaryOperator 0x124943470 <line:36:7, col:13> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x124943458 <col:7> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x124943418 <col:7> 'int' lvalue Var 0x124928628 'ret' 'int'
|   |   | | `-IntegerLiteral 0x124943438 <col:13> 'int' 0
|   |   | `-CompoundStmt 0x124943ba8 <col:16, line:39:3>
|   |   |   |-CallExpr 0x1249434e8 <line:37:4, col:18> 'int'
|   |   |   | |-ImplicitCastExpr 0x1249434d0 <col:4> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x124943490 <col:4> 'int ()' Function 0x124941ce0 'SYSERROR' 'int ()'
|   |   |   | `-ImplicitCastExpr 0x124943510 <col:13> 'char *' <ArrayToPointerDecay>
|   |   |   |   `-StringLiteral 0x1249434b0 <col:13> 'char[4]' lvalue "STR"
|   |   |   `-CallExpr 0x124943b80 <line:38:4, col:22> '<dependent type>' contains-errors
|   |   |     |-DeclRefExpr 0x124943b00 <col:4> 'void (int) __attribute__((noreturn))' Function 0x124943990 '_exit' 'void (int) __attribute__((noreturn))'
|   |   |     `-RecoveryExpr 0x124943b60 <col:10> '<dependent type>' contains-errors lvalue
|   |   |-CallExpr 0x124943c40 <line:42:3, col:16> 'int'
|   |   | |-ImplicitCastExpr 0x124943c28 <col:3> 'int (*)(void *)' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x124943be8 <col:3> 'int (*)(void *)' lvalue ParmVar 0x124928370 'child_fn' 'int (*)(void *)'
|   |   | `-ImplicitCastExpr 0x124943c68 <col:12> 'void *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x124943c08 <col:12> 'void *' lvalue ParmVar 0x1249283f0 'args' 'void *'
|   |   `-CallExpr 0x124943db8 <line:43:3, col:14> 'int'
|   |     |-ImplicitCastExpr 0x124943da0 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x124943d60 <col:3> 'int ()' Function 0x124943ca8 'ERROR' 'int ()'
|   |     `-ImplicitCastExpr 0x124943de0 <col:9> 'char *' <ArrayToPointerDecay>
|   |       `-StringLiteral 0x124943d80 <col:9> 'char[4]' lvalue "STR"
|   |-CallExpr 0x124943f30 <line:48:2, col:17> 'int'
|   | |-ImplicitCastExpr 0x124943f18 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x124943e80 <col:2> 'int ()' Function 0x1249420c0 'close' 'int ()'
|   | `-ImplicitCastExpr 0x124943f58 <col:8, col:16> 'int' <LValueToRValue>
|   |   `-ArraySubscriptExpr 0x124943ef8 <col:8, col:16> 'int' lvalue
|   |     |-ImplicitCastExpr 0x124943ee0 <col:8> 'int *' <ArrayToPointerDecay>
|   |     | `-DeclRefExpr 0x124943ea0 <col:8> 'int[2]' lvalue Var 0x124941800 'pipefd' 'int[2]'
|   |     `-IntegerLiteral 0x124943ec0 <col:15> 'int' 1
|   |-IfStmt 0x124944368 <line:50:2, line:54:2>
|   | |-BinaryOperator 0x124944000 <line:50:6, col:24> 'int' contains-errors '&&'
|   | | |-DeclRefExpr 0x124943f70 <col:6> 'char *' lvalue ParmVar 0x1249280d8 'buf' 'char *'
|   | | `-BinaryOperator 0x124943fd0 <col:13, col:24> 'int' contains-errors '>'
|   | |   |-RecoveryExpr 0x124943f90 <col:13> '<dependent type>' contains-errors lvalue
|   | |   `-IntegerLiteral 0x124943fb0 <col:24> 'int' 0
|   | `-CompoundStmt 0x124944358 <col:27, line:54:2>
|   |-CallExpr 0x124944558 <line:58:2, col:17> 'int'
|   | |-ImplicitCastExpr 0x124944540 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1249444a8 <col:2> 'int ()' Function 0x1249420c0 'close' 'int ()'
|   | `-ImplicitCastExpr 0x124944580 <col:8, col:16> 'int' <LValueToRValue>
|   |   `-ArraySubscriptExpr 0x124944520 <col:8, col:16> 'int' lvalue
|   |     |-ImplicitCastExpr 0x124944508 <col:8> 'int *' <ArrayToPointerDecay>
|   |     | `-DeclRefExpr 0x1249444c8 <col:8> 'int[2]' lvalue Var 0x124941800 'pipefd' 'int[2]'
|   |     `-IntegerLiteral 0x1249444e8 <col:15> 'int' 0
|   `-ReturnStmt 0x1249445d0 <line:60:2, col:9>
|     `-ImplicitCastExpr 0x1249445b8 <col:9> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x124944598 <col:9> 'int' lvalue Var 0x1249286a8 'fret' 'int'
`-FunctionDecl 0x124943990 <line:38:4> col:4 implicit used _exit 'void (int) __attribute__((noreturn))' extern
  |-ParmVarDecl 0x124943a90 <<invalid sloc>> <invalid sloc> 'int'
  `-BuiltinAttr 0x124943a38 <<invalid sloc>> Implicit 959
