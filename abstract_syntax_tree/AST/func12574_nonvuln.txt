TranslationUnitDecl 0x128855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1288564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x128855bd0 '__int128'
|-TypedefDecl 0x128856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x128855bf0 'unsigned __int128'
|-TypedefDecl 0x128926a30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x128926800 'struct __NSConstantString_tag'
|   `-Record 0x128856580 '__NSConstantString_tag'
|-TypedefDecl 0x128926a98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x128855d90 '__SVInt8_t'
|-TypedefDecl 0x128926b00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x128855db0 '__SVInt16_t'
|-TypedefDecl 0x128926b68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x128855dd0 '__SVInt32_t'
|-TypedefDecl 0x128926bd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x128855df0 '__SVInt64_t'
|-TypedefDecl 0x128926c38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x128855e10 '__SVUint8_t'
|-TypedefDecl 0x128926ca0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x128855e30 '__SVUint16_t'
|-TypedefDecl 0x128926d08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x128855e50 '__SVUint32_t'
|-TypedefDecl 0x128926d70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x128855e70 '__SVUint64_t'
|-TypedefDecl 0x128926dd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x128855e90 '__SVFloat16_t'
|-TypedefDecl 0x128926e40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x128855eb0 '__SVFloat32_t'
|-TypedefDecl 0x128926ea8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x128855ed0 '__SVFloat64_t'
|-TypedefDecl 0x128926f10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x128855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x128926f78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x128855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x128926fe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x128855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x128927048 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x128855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1289270b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x128855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x128927118 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x128855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x128927180 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x128855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1289271e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x128855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x128927250 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x128855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1289272b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x128856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x128927320 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x128856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x128927388 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x128856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1289273f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x128856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x128927458 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x128856090 '__clang_svint8x3_t'
|-TypedefDecl 0x1289274c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1288560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x128927528 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1288560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x128927590 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1288560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x1289275f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x128856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x128927660 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x128856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x1289276c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x128856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x128927730 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x128856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x128927798 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x128856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x128928000 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1288561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x128928068 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1288561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1289280d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1288561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x128928138 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x128856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1289281a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x128856230 '__clang_svint16x4_t'
|-TypedefDecl 0x128928208 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x128856250 '__clang_svint32x4_t'
|-TypedefDecl 0x128928270 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x128856270 '__clang_svint64x4_t'
|-TypedefDecl 0x1289282d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x128856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x128928340 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1288562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1289283a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1288562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x128928410 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1288562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x128928478 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x128856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1289284e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x128856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x128928548 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x128856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1289285b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x128856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x128928618 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x128856390 '__SVBool_t'
|-TypedefDecl 0x128928680 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1288563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1289286e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1288563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x128928750 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1288563f0 '__SVCount_t'
|-TypedefDecl 0x1289287f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1289287b0 'char *'
|   `-BuiltinType 0x1288556b0 'char'
|-TypedefDecl 0x128928868 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1289287b0 'char *'
|   `-BuiltinType 0x1288556b0 'char'
`-FunctionDecl 0x128928f58 <dataset_diviso_filec/func12574_nonvuln.c:1:1, line:56:1> line:1:1 evdev_reject_device 'int (struct evdev_device *)'
  |-ParmVarDecl 0x128928e48 <col:21, col:42> col:42 used device 'struct evdev_device *'
  `-CompoundStmt 0x1289434b0 <line:2:1, line:56:1>
    |-DeclStmt 0x128941498 <line:3:2, col:40>
    | |-RecordDecl 0x128941250 <col:2, col:9> col:9 struct libevdev
    | `-VarDecl 0x1289413b8 <col:2, col:35> col:19 used evdev 'struct libevdev *' cinit
    |   `-RecoveryExpr 0x128941458 <col:27, col:35> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x128941420 <col:27> 'struct evdev_device *' lvalue ParmVar 0x128928e48 'device' 'struct evdev_device *'
    |-DeclStmt 0x128941530 <line:4:2, col:19>
    | `-VarDecl 0x1289414c8 <col:2, col:15> col:15 used code 'unsigned int'
    |-DeclStmt 0x1289417d0 <line:5:2, col:41>
    | |-RecordDecl 0x128941548 <col:8, col:15> col:15 struct input_absinfo
    | |-VarDecl 0x1289416b8 <col:2, col:30> col:30 used absx 'const struct input_absinfo *'
    | `-VarDecl 0x128941748 <col:2, col:37> col:37 used absy 'const struct input_absinfo *'
    |-IfStmt 0x128941bd8 <line:7:2, line:9:10>
    | |-BinaryOperator 0x128941b70 <line:7:6, line:8:50> '<dependent type>' contains-errors '^'
    | | |-CallExpr 0x128941ac0 <line:7:6, col:50> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x128941910 <col:6> 'int ()' Function 0x128941858 'libevdev_has_event_code' 'int ()'
    | | | |-DeclRefExpr 0x128941930 <col:30> 'struct libevdev *' contains-errors lvalue Var 0x1289413b8 'evdev' 'struct libevdev *'
    | | | |-RecoveryExpr 0x128941a80 <col:37> '<dependent type>' contains-errors lvalue
    | | | `-RecoveryExpr 0x128941aa0 <col:45> '<dependent type>' contains-errors lvalue
    | | `-CallExpr 0x128941b38 <line:8:6, col:50> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x1289419b8 <col:6> 'int ()' Function 0x128941858 'libevdev_has_event_code' 'int ()'
    | |   |-DeclRefExpr 0x1289419d8 <col:30> 'struct libevdev *' contains-errors lvalue Var 0x1289413b8 'evdev' 'struct libevdev *'
    | |   |-RecoveryExpr 0x128941af8 <col:37> '<dependent type>' contains-errors lvalue
    | |   `-RecoveryExpr 0x128941b18 <col:45> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x128941bc8 <line:9:3, col:10>
    |   `-RecoveryExpr 0x128941ba8 <col:10> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x128941ec0 <line:11:2, line:13:10>
    | |-BinaryOperator 0x128941e58 <line:11:6, line:12:50> '<dependent type>' contains-errors '^'
    | | |-CallExpr 0x128941da8 <line:11:6, col:50> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x128941bf8 <col:6> 'int ()' Function 0x128941858 'libevdev_has_event_code' 'int ()'
    | | | |-DeclRefExpr 0x128941c18 <col:30> 'struct libevdev *' contains-errors lvalue Var 0x1289413b8 'evdev' 'struct libevdev *'
    | | | |-RecoveryExpr 0x128941d68 <col:37> '<dependent type>' contains-errors lvalue
    | | | `-RecoveryExpr 0x128941d88 <col:45> '<dependent type>' contains-errors lvalue
    | | `-CallExpr 0x128941e20 <line:12:6, col:50> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x128941ca0 <col:6> 'int ()' Function 0x128941858 'libevdev_has_event_code' 'int ()'
    | |   |-DeclRefExpr 0x128941cc0 <col:30> 'struct libevdev *' contains-errors lvalue Var 0x1289413b8 'evdev' 'struct libevdev *'
    | |   |-RecoveryExpr 0x128941de0 <col:37> '<dependent type>' contains-errors lvalue
    | |   `-RecoveryExpr 0x128941e00 <col:45> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x128941eb0 <line:13:3, col:10>
    |   `-RecoveryExpr 0x128941e90 <col:10> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x128944498 <line:15:2, line:18:10>
    | |-BinaryOperator 0x128944430 <line:15:6, line:17:62> 'int' contains-errors '&&'
    | | |-UnaryOperator 0x128944308 <line:15:6, col:37> 'int' prefix '!' cannot overflow
    | | | `-CallExpr 0x1289442c8 <col:7, col:37> 'int'
    | | |   |-ImplicitCastExpr 0x1289442b0 <col:7> 'int (*)()' <FunctionToPointerDecay>
    | | |   | `-DeclRefExpr 0x128941fc0 <col:7> 'int ()' Function 0x128941f08 'evdev_is_fake_mt_device' 'int ()'
    | | |   `-ImplicitCastExpr 0x1289442f0 <col:31> 'struct evdev_device *' <LValueToRValue>
    | | |     `-DeclRefExpr 0x128941fe0 <col:31> 'struct evdev_device *' lvalue ParmVar 0x128928e48 'device' 'struct evdev_device *'
    | | `-BinaryOperator 0x128944410 <line:16:6, line:17:62> '<dependent type>' contains-errors '^'
    | |   |-CallExpr 0x128944360 <line:16:6, col:62> '<dependent type>' contains-errors
    | |   | |-DeclRefExpr 0x1289420a0 <col:6> 'int ()' Function 0x128941858 'libevdev_has_event_code' 'int ()'
    | |   | |-DeclRefExpr 0x1289420c0 <col:30> 'struct libevdev *' contains-errors lvalue Var 0x1289413b8 'evdev' 'struct libevdev *'
    | |   | |-RecoveryExpr 0x128944320 <col:37> '<dependent type>' contains-errors lvalue
    | |   | `-RecoveryExpr 0x128944340 <col:45> '<dependent type>' contains-errors lvalue
    | |   `-CallExpr 0x1289443d8 <line:17:6, col:62> '<dependent type>' contains-errors
    | |     |-DeclRefExpr 0x128942148 <col:6> 'int ()' Function 0x128941858 'libevdev_has_event_code' 'int ()'
    | |     |-DeclRefExpr 0x128942168 <col:30> 'struct libevdev *' contains-errors lvalue Var 0x1289413b8 'evdev' 'struct libevdev *'
    | |     |-RecoveryExpr 0x128944398 <col:37> '<dependent type>' contains-errors lvalue
    | |     `-RecoveryExpr 0x1289443b8 <col:45> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x128944488 <line:18:3, col:10>
    |   `-RecoveryExpr 0x128944468 <col:10> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x128944ce8 <line:20:2, line:29:2>
    | |-CallExpr 0x1289445a0 <line:20:6, col:50> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x1289444b8 <col:6> 'int ()' Function 0x128941858 'libevdev_has_event_code' 'int ()'
    | | |-DeclRefExpr 0x1289444d8 <col:30> 'struct libevdev *' contains-errors lvalue Var 0x1289413b8 'evdev' 'struct libevdev *'
    | | |-RecoveryExpr 0x128944560 <col:37> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x128944580 <col:45> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x128944cd0 <col:53, line:29:2>
    |   `-IfStmt 0x128944cb0 <line:23:3, line:28:3>
    |     |-BinaryOperator 0x128944a78 <line:23:7, line:24:54> 'int' contains-errors '||'
    |     | |-ParenExpr 0x1289448d8 <line:23:7, col:54> 'int' contains-errors
    |     | | `-BinaryOperator 0x1289448b8 <col:8, col:53> 'int' contains-errors '&&'
    |     | |   |-BinaryOperator 0x1289447f8 <col:8, col:28> 'int' contains-errors '=='
    |     | |   | |-RecoveryExpr 0x1289447b0 <col:8, col:14> '<dependent type>' contains-errors lvalue
    |     | |   | | `-DeclRefExpr 0x128944778 <col:8> 'const struct input_absinfo *' lvalue Var 0x1289416b8 'absx' 'const struct input_absinfo *'
    |     | |   | `-IntegerLiteral 0x1289447d8 <col:28> 'int' 0
    |     | |   `-BinaryOperator 0x128944898 <col:33, col:53> 'int' contains-errors '!='
    |     | |     |-RecoveryExpr 0x128944850 <col:33, col:39> '<dependent type>' contains-errors lvalue
    |     | |     | `-DeclRefExpr 0x128944818 <col:33> 'const struct input_absinfo *' lvalue Var 0x128941748 'absy' 'const struct input_absinfo *'
    |     | |     `-IntegerLiteral 0x128944878 <col:53> 'int' 0
    |     | `-ParenExpr 0x128944a58 <line:24:7, col:54> 'int' contains-errors
    |     |   `-BinaryOperator 0x128944a38 <col:8, col:53> 'int' contains-errors '&&'
    |     |     |-BinaryOperator 0x128944978 <col:8, col:28> 'int' contains-errors '!='
    |     |     | |-RecoveryExpr 0x128944930 <col:8, col:14> '<dependent type>' contains-errors lvalue
    |     |     | | `-DeclRefExpr 0x1289448f8 <col:8> 'const struct input_absinfo *' lvalue Var 0x1289416b8 'absx' 'const struct input_absinfo *'
    |     |     | `-IntegerLiteral 0x128944958 <col:28> 'int' 0
    |     |     `-BinaryOperator 0x128944a18 <col:33, col:53> 'int' contains-errors '=='
    |     |       |-RecoveryExpr 0x1289449d0 <col:33, col:39> '<dependent type>' contains-errors lvalue
    |     |       | `-DeclRefExpr 0x128944998 <col:33> 'const struct input_absinfo *' lvalue Var 0x128941748 'absy' 'const struct input_absinfo *'
    |     |       `-IntegerLiteral 0x1289449f8 <col:53> 'int' 0
    |     `-CompoundStmt 0x128944c98 <col:57, line:28:3>
    |       `-CallExpr 0x128944c38 <line:25:4, line:26:17> 'int'
    |         |-ImplicitCastExpr 0x128944c20 <line:25:4> 'int (*)()' <FunctionToPointerDecay>
    |         | `-DeclRefExpr 0x128944b78 <col:4> 'int ()' Function 0x128944ac0 'evdev_log_bug_kernel' 'int ()'
    |         |-ImplicitCastExpr 0x128944c68 <col:25> 'struct evdev_device *' <LValueToRValue>
    |         | `-DeclRefExpr 0x128944b98 <col:25> 'struct evdev_device *' lvalue ParmVar 0x128928e48 'device' 'struct evdev_device *'
    |         `-ImplicitCastExpr 0x128944c80 <line:26:12> 'char *' <ArrayToPointerDecay>
    |           `-StringLiteral 0x128944c00 <col:12> 'char[4]' lvalue "STR"
    `-IfStmt 0x128943128 <line:31:2, line:41:2>
      |-RecoveryExpr 0x128944df8 <line:31:6, line:32:62> '_Bool' contains-errors
      `-CompoundStmt 0x128943110 <col:65, line:41:2>
        `-IfStmt 0x1289430f0 <line:35:3, line:40:3>
          |-BinaryOperator 0x1289451d8 <line:35:7, line:36:54> 'int' contains-errors '||'
          | |-ParenExpr 0x128945038 <line:35:7, col:54> 'int' contains-errors
          | | `-BinaryOperator 0x128945018 <col:8, col:53> 'int' contains-errors '&&'
          | |   |-BinaryOperator 0x128944f58 <col:8, col:28> 'int' contains-errors '=='
          | |   | |-RecoveryExpr 0x128944f10 <col:8, col:14> '<dependent type>' contains-errors lvalue
          | |   | | `-DeclRefExpr 0x128944ed8 <col:8> 'const struct input_absinfo *' lvalue Var 0x1289416b8 'absx' 'const struct input_absinfo *'
          | |   | `-IntegerLiteral 0x128944f38 <col:28> 'int' 0
          | |   `-BinaryOperator 0x128944ff8 <col:33, col:53> 'int' contains-errors '!='
          | |     |-RecoveryExpr 0x128944fb0 <col:33, col:39> '<dependent type>' contains-errors lvalue
          | |     | `-DeclRefExpr 0x128944f78 <col:33> 'const struct input_absinfo *' lvalue Var 0x128941748 'absy' 'const struct input_absinfo *'
          | |     `-IntegerLiteral 0x128944fd8 <col:53> 'int' 0
          | `-ParenExpr 0x1289451b8 <line:36:7, col:54> 'int' contains-errors
          |   `-BinaryOperator 0x128945198 <col:8, col:53> 'int' contains-errors '&&'
          |     |-BinaryOperator 0x1289450d8 <col:8, col:28> 'int' contains-errors '!='
          |     | |-RecoveryExpr 0x128945090 <col:8, col:14> '<dependent type>' contains-errors lvalue
          |     | | `-DeclRefExpr 0x128945058 <col:8> 'const struct input_absinfo *' lvalue Var 0x1289416b8 'absx' 'const struct input_absinfo *'
          |     | `-IntegerLiteral 0x1289450b8 <col:28> 'int' 0
          |     `-BinaryOperator 0x128945178 <col:33, col:53> 'int' contains-errors '=='
          |       |-RecoveryExpr 0x128945130 <col:33, col:39> '<dependent type>' contains-errors lvalue
          |       | `-DeclRefExpr 0x1289450f8 <col:33> 'const struct input_absinfo *' lvalue Var 0x128941748 'absy' 'const struct input_absinfo *'
          |       `-IntegerLiteral 0x128945158 <col:53> 'int' 0
          `-CompoundStmt 0x1289430d8 <col:57, line:40:3>
            `-CallExpr 0x128943078 <line:37:4, line:38:17> 'int'
              |-ImplicitCastExpr 0x128943060 <line:37:4> 'int (*)()' <FunctionToPointerDecay>
              | `-DeclRefExpr 0x128943000 <col:4> 'int ()' Function 0x128944ac0 'evdev_log_bug_kernel' 'int ()'
              |-ImplicitCastExpr 0x1289430a8 <col:25> 'struct evdev_device *' <LValueToRValue>
              | `-DeclRefExpr 0x128943020 <col:25> 'struct evdev_device *' lvalue ParmVar 0x128928e48 'device' 'struct evdev_device *'
              `-ImplicitCastExpr 0x1289430c0 <line:38:12> 'char *' <ArrayToPointerDecay>
                `-StringLiteral 0x128943040 <col:12> 'char[4]' lvalue "STR"
