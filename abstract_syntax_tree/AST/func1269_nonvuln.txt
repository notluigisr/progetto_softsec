TranslationUnitDecl 0x107828208 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1078290b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1078287d0 '__int128'
|-TypedefDecl 0x107829128 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1078287f0 'unsigned __int128'
|-TypedefDecl 0x12001e230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12001e000 'struct __NSConstantString_tag'
|   `-Record 0x107829180 '__NSConstantString_tag'
|-TypedefDecl 0x12001e298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x107828990 '__SVInt8_t'
|-TypedefDecl 0x12001e300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x1078289b0 '__SVInt16_t'
|-TypedefDecl 0x12001e368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x1078289d0 '__SVInt32_t'
|-TypedefDecl 0x12001e3d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x1078289f0 '__SVInt64_t'
|-TypedefDecl 0x12001e438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x107828a10 '__SVUint8_t'
|-TypedefDecl 0x12001e4a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x107828a30 '__SVUint16_t'
|-TypedefDecl 0x12001e508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x107828a50 '__SVUint32_t'
|-TypedefDecl 0x12001e570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x107828a70 '__SVUint64_t'
|-TypedefDecl 0x12001e5d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x107828a90 '__SVFloat16_t'
|-TypedefDecl 0x12001e640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x107828ab0 '__SVFloat32_t'
|-TypedefDecl 0x12001e6a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x107828ad0 '__SVFloat64_t'
|-TypedefDecl 0x12001e710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x107828af0 '__SVBfloat16_t'
|-TypedefDecl 0x12001e778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x107828b10 '__clang_svint8x2_t'
|-TypedefDecl 0x12001e7e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x107828b30 '__clang_svint16x2_t'
|-TypedefDecl 0x12001e848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x107828b50 '__clang_svint32x2_t'
|-TypedefDecl 0x12001e8b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x107828b70 '__clang_svint64x2_t'
|-TypedefDecl 0x12001e918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x107828b90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12001e980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x107828bb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12001e9e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x107828bd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12001ea50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x107828bf0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12001eab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x107828c10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12001eb20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x107828c30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12001eb88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x107828c50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12001ebf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x107828c70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12001ec58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x107828c90 '__clang_svint8x3_t'
|-TypedefDecl 0x12001ecc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x107828cb0 '__clang_svint16x3_t'
|-TypedefDecl 0x12001ed28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x107828cd0 '__clang_svint32x3_t'
|-TypedefDecl 0x12001ed90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x107828cf0 '__clang_svint64x3_t'
|-TypedefDecl 0x12001edf8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x107828d10 '__clang_svuint8x3_t'
|-TypedefDecl 0x12001ee60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x107828d30 '__clang_svuint16x3_t'
|-TypedefDecl 0x12001eec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x107828d50 '__clang_svuint32x3_t'
|-TypedefDecl 0x12001ef30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x107828d70 '__clang_svuint64x3_t'
|-TypedefDecl 0x12001ef98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x107828d90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x120030000 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x107828db0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x120030068 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x107828dd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1200300d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x107828df0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x120030138 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x107828e10 '__clang_svint8x4_t'
|-TypedefDecl 0x1200301a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x107828e30 '__clang_svint16x4_t'
|-TypedefDecl 0x120030208 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x107828e50 '__clang_svint32x4_t'
|-TypedefDecl 0x120030270 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x107828e70 '__clang_svint64x4_t'
|-TypedefDecl 0x1200302d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x107828e90 '__clang_svuint8x4_t'
|-TypedefDecl 0x120030340 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x107828eb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1200303a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x107828ed0 '__clang_svuint32x4_t'
|-TypedefDecl 0x120030410 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x107828ef0 '__clang_svuint64x4_t'
|-TypedefDecl 0x120030478 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x107828f10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1200304e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x107828f30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x120030548 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x107828f50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1200305b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x107828f70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x120030618 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x107828f90 '__SVBool_t'
|-TypedefDecl 0x120030680 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x107828fb0 '__clang_svboolx2_t'
|-TypedefDecl 0x1200306e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x107828fd0 '__clang_svboolx4_t'
|-TypedefDecl 0x120030750 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x107828ff0 '__SVCount_t'
|-TypedefDecl 0x1200307f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1200307b0 'char *'
|   `-BuiltinType 0x1078282b0 'char'
|-TypedefDecl 0x120030868 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1200307b0 'char *'
|   `-BuiltinType 0x1078282b0 'char'
`-FunctionDecl 0x1200309d0 <dataset_diviso_filec/func1269_nonvuln.c:1:1, line:22:1> line:1:13 seq_sysex_message 'void (unsigned char *)' static
  |-ParmVarDecl 0x120030908 <col:31, col:46> col:46 used event_rec 'unsigned char *'
  `-CompoundStmt 0x120054418 <line:2:1, line:22:1>
    |-DeclStmt 0x120030bf0 <line:3:2, col:33>
    | `-VarDecl 0x120030ae0 <col:2, col:32> col:15 used dev 'unsigned int' cinit
    |   `-ImplicitCastExpr 0x120030bd8 <col:21, col:32> 'unsigned int' <IntegralCast>
    |     `-ImplicitCastExpr 0x120030bc0 <col:21, col:32> 'unsigned char' <LValueToRValue>
    |       `-ArraySubscriptExpr 0x120030ba0 <col:21, col:32> 'unsigned char' lvalue
    |         |-ImplicitCastExpr 0x120030b88 <col:21> 'unsigned char *' <LValueToRValue>
    |         | `-DeclRefExpr 0x120030b48 <col:21> 'unsigned char *' lvalue ParmVar 0x120030908 'event_rec' 'unsigned char *'
    |         `-IntegerLiteral 0x120030b68 <col:31> 'int' 1
    |-DeclStmt 0x120030d40 <line:4:2, col:14>
    | |-VarDecl 0x120030c20 <col:2, col:6> col:6 used i 'int'
    | `-VarDecl 0x120030ca0 <col:2, col:13> col:9 used l 'int' cinit
    |   `-IntegerLiteral 0x120030d08 <col:13> 'int' 0
    |-DeclStmt 0x120030e68 <line:5:2, col:37>
    | `-VarDecl 0x120030d70 <col:2, col:36> col:18 used buf 'unsigned char *' cinit
    |   `-UnaryOperator 0x120030e50 <col:24, col:36> 'unsigned char *' prefix '&' cannot overflow
    |     `-ArraySubscriptExpr 0x120030e30 <col:25, col:36> 'unsigned char' lvalue
    |       |-ImplicitCastExpr 0x120030e18 <col:25> 'unsigned char *' <LValueToRValue>
    |       | `-DeclRefExpr 0x120030dd8 <col:25> 'unsigned char *' lvalue ParmVar 0x120030908 'event_rec' 'unsigned char *'
    |       `-IntegerLiteral 0x120030df8 <col:35> 'int' 2
    |-IfStmt 0x120030f40 <line:7:2, line:8:3>
    | |-BinaryOperator 0x120030f10 <line:7:6, col:12> 'int' contains-errors '>'
    | | |-DeclRefExpr 0x120030e80 <col:6> 'unsigned int' lvalue Var 0x120030ae0 'dev' 'unsigned int'
    | | `-RecoveryExpr 0x120030ef0 <col:12> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x120030f30 <line:8:3>
    |-IfStmt 0x120053e70 <line:9:2, line:10:3>
    | |-RecoveryExpr 0x120053e40 <line:9:6, col:36> '_Bool' contains-errors
    | `-ReturnStmt 0x120053e60 <line:10:3>
    |-IfStmt 0x120053ef8 <line:11:2, line:12:3>
    | |-RecoveryExpr 0x120053ec8 <line:11:6, col:21> '_Bool' contains-errors
    | `-ReturnStmt 0x120053ee8 <line:12:3>
    |-BinaryOperator 0x120053f58 <line:14:2, col:6> 'int' '='
    | |-DeclRefExpr 0x120053f18 <col:2> 'int' lvalue Var 0x120030ca0 'l' 'int'
    | `-IntegerLiteral 0x120053f38 <col:6> 'int' 0
    |-ForStmt 0x120054260 <line:15:2, line:16:11>
    | |-BinaryOperator 0x120053fb8 <line:15:7, col:11> 'int' '='
    | | |-DeclRefExpr 0x120053f78 <col:7> 'int' lvalue Var 0x120030c20 'i' 'int'
    | | `-IntegerLiteral 0x120053f98 <col:11> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x120054150 <col:14, col:33> 'int' '&&'
    | | |-BinaryOperator 0x120054030 <col:14, col:18> 'int' '<'
    | | | |-ImplicitCastExpr 0x120054018 <col:14> 'int' <LValueToRValue>
    | | | | `-DeclRefExpr 0x120053fd8 <col:14> 'int' lvalue Var 0x120030c20 'i' 'int'
    | | | `-IntegerLiteral 0x120053ff8 <col:18> 'int' 6
    | | `-BinaryOperator 0x120054130 <col:23, col:33> 'int' '!='
    | |   |-ImplicitCastExpr 0x120054118 <col:23, col:28> 'int' <IntegralCast>
    | |   | `-ImplicitCastExpr 0x120054100 <col:23, col:28> 'unsigned char' <LValueToRValue>
    | |   |   `-ArraySubscriptExpr 0x1200540c0 <col:23, col:28> 'unsigned char' lvalue
    | |   |     |-ImplicitCastExpr 0x120054090 <col:23> 'unsigned char *' <LValueToRValue>
    | |   |     | `-DeclRefExpr 0x120054050 <col:23> 'unsigned char *' lvalue Var 0x120030d70 'buf' 'unsigned char *'
    | |   |     `-ImplicitCastExpr 0x1200540a8 <col:27> 'int' <LValueToRValue>
    | |   |       `-DeclRefExpr 0x120054070 <col:27> 'int' lvalue Var 0x120030c20 'i' 'int'
    | |   `-IntegerLiteral 0x1200540e0 <col:33> 'int' 255
    | |-UnaryOperator 0x120054190 <col:39, col:40> 'int' postfix '++'
    | | `-DeclRefExpr 0x120054170 <col:39> 'int' lvalue Var 0x120030c20 'i' 'int'
    | `-BinaryOperator 0x120054240 <line:16:3, col:11> 'int' '='
    |   |-DeclRefExpr 0x1200541a8 <col:3> 'int' lvalue Var 0x120030ca0 'l' 'int'
    |   `-BinaryOperator 0x120054220 <col:7, col:11> 'int' '+'
    |     |-ImplicitCastExpr 0x120054208 <col:7> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x1200541c8 <col:7> 'int' lvalue Var 0x120030c20 'i' 'int'
    |     `-IntegerLiteral 0x1200541e8 <col:11> 'int' 1
    `-IfStmt 0x120054300 <line:18:2, line:19:3>
      |-RecoveryExpr 0x1200542d0 <line:18:6, col:24> '_Bool' contains-errors
      `-ReturnStmt 0x1200542f0 <line:19:3>
