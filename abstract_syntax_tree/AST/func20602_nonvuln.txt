TranslationUnitDecl 0x158031408 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1580322b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1580319d0 '__int128'
|-TypedefDecl 0x158032328 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1580319f0 'unsigned __int128'
|-TypedefDecl 0x15880be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15880bc00 'struct __NSConstantString_tag'
|   `-Record 0x158032380 '__NSConstantString_tag'
|-TypedefDecl 0x15880be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x158031b90 '__SVInt8_t'
|-TypedefDecl 0x15880bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x158031bb0 '__SVInt16_t'
|-TypedefDecl 0x15880bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x158031bd0 '__SVInt32_t'
|-TypedefDecl 0x15880bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x158031bf0 '__SVInt64_t'
|-TypedefDecl 0x15880c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x158031c10 '__SVUint8_t'
|-TypedefDecl 0x15880c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x158031c30 '__SVUint16_t'
|-TypedefDecl 0x15880c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x158031c50 '__SVUint32_t'
|-TypedefDecl 0x15880c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x158031c70 '__SVUint64_t'
|-TypedefDecl 0x15880c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x158031c90 '__SVFloat16_t'
|-TypedefDecl 0x15880c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x158031cb0 '__SVFloat32_t'
|-TypedefDecl 0x15880c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x158031cd0 '__SVFloat64_t'
|-TypedefDecl 0x15880c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x158031cf0 '__SVBfloat16_t'
|-TypedefDecl 0x15880c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x158031d10 '__clang_svint8x2_t'
|-TypedefDecl 0x15880c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x158031d30 '__clang_svint16x2_t'
|-TypedefDecl 0x15880c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x158031d50 '__clang_svint32x2_t'
|-TypedefDecl 0x15880c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x158031d70 '__clang_svint64x2_t'
|-TypedefDecl 0x15880c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x158031d90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15880c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x158031db0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15880c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x158031dd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15880c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x158031df0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15880c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x158031e10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15880c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x158031e30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15880c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x158031e50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15880c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x158031e70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15880c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x158031e90 '__clang_svint8x3_t'
|-TypedefDecl 0x15880c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x158031eb0 '__clang_svint16x3_t'
|-TypedefDecl 0x15880c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x158031ed0 '__clang_svint32x3_t'
|-TypedefDecl 0x15880c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x158031ef0 '__clang_svint64x3_t'
|-TypedefDecl 0x15880c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x158031f10 '__clang_svuint8x3_t'
|-TypedefDecl 0x15880ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x158031f30 '__clang_svuint16x3_t'
|-TypedefDecl 0x15880cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x158031f50 '__clang_svuint32x3_t'
|-TypedefDecl 0x15880cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x158031f70 '__clang_svuint64x3_t'
|-TypedefDecl 0x15880cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x158031f90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15880d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x158031fb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15880d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x158031fd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15880d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x158031ff0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15880d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x158032010 '__clang_svint8x4_t'
|-TypedefDecl 0x15880d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x158032030 '__clang_svint16x4_t'
|-TypedefDecl 0x15880d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x158032050 '__clang_svint32x4_t'
|-TypedefDecl 0x15880d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x158032070 '__clang_svint64x4_t'
|-TypedefDecl 0x15880d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x158032090 '__clang_svuint8x4_t'
|-TypedefDecl 0x15880d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1580320b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15880d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1580320d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15880d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1580320f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15880d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x158032110 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15880d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x158032130 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15880d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x158032150 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15880d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x158032170 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15880da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x158032190 '__SVBool_t'
|-TypedefDecl 0x15880da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1580321b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15880dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1580321d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15880db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1580321f0 '__SVCount_t'
|-TypedefDecl 0x15880dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15880dbb0 'char *'
|   `-BuiltinType 0x1580314b0 'char'
|-TypedefDecl 0x15880dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15880dbb0 'char *'
|   `-BuiltinType 0x1580314b0 'char'
|-FunctionDecl 0x15880dfd8 <dataset_diviso_filec/func20602_nonvuln.c:1:1, line:29:1> line:1:5 invalid _gnutls_x509_encode_string 'int (unsigned int, const void *, int, int *)'
| |-ParmVarDecl 0x15880dcd8 <col:32, col:45> col:45 used etype 'unsigned int'
| |-ParmVarDecl 0x15880dd88 <line:2:11, col:23> col:23 used input_data 'const void *'
| |-ParmVarDecl 0x15880de20 <col:35, col:42> col:42 invalid input_size 'int'
| |-ParmVarDecl 0x15880ded8 <line:3:11, col:28> col:28 referenced invalid output 'int *'
| `-CompoundStmt 0x14e81d5e0 <line:4:1, line:29:1>
|   |-DeclStmt 0x15880e120 <line:6:2, col:22>
|   | `-VarDecl 0x15880e0b8 <col:2, col:15> col:15 used tl_size 'unsigned int'
|   |-DeclStmt 0x15880e1b8 <line:7:2, col:9>
|   | `-VarDecl 0x15880e150 <col:2, col:6> col:6 used ret 'int'
|   |-BinaryOperator 0x158827958 <line:10:2, line:12:16> 'int' contains-errors '='
|   | |-DeclRefExpr 0x15880e208 <line:10:2> 'int' lvalue Var 0x15880e150 'ret' 'int'
|   | `-CallExpr 0x158827910 <line:11:6, line:12:16> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x15880e380 <line:11:6> 'int ()' Function 0x15880e2c8 'asn1_encode_simple_der' 'int ()'
|   |   |-DeclRefExpr 0x15880e3a0 <col:29> 'unsigned int' lvalue ParmVar 0x15880dcd8 'etype' 'unsigned int'
|   |   |-DeclRefExpr 0x15880e3c0 <col:36> 'const void *' lvalue ParmVar 0x15880dd88 'input_data' 'const void *'
|   |   |-RecoveryExpr 0x15880e3e0 <col:48> '<dependent type>' contains-errors lvalue
|   |   |-RecoveryExpr 0x1588278f0 <col:60> '<dependent type>' contains-errors lvalue
|   |   `-UnaryOperator 0x158827870 <line:12:8, col:9> 'unsigned int *' prefix '&' cannot overflow
|   |     `-DeclRefExpr 0x158827818 <col:9> 'unsigned int' lvalue Var 0x15880e0b8 'tl_size' 'unsigned int'
|   |-IfStmt 0x158827da0 <line:13:2, line:17:2>
|   | |-BinaryOperator 0x1588279f0 <line:13:6, col:13> 'int' contains-errors '!='
|   | | |-DeclRefExpr 0x158827978 <col:6> 'int' lvalue Var 0x15880e150 'ret' 'int'
|   | | `-RecoveryExpr 0x1588279d0 <col:13> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x158827d78 <col:27, line:17:2>
|   |   |-CallExpr 0x158827b58 <line:14:3, col:17> 'int'
|   |   | `-ImplicitCastExpr 0x158827b40 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   |   `-DeclRefExpr 0x158827af0 <col:3> 'int ()' Function 0x158827a38 'gnutls_assert' 'int ()'
|   |   |-BinaryOperator 0x158827d10 <line:15:3, col:28> 'int' '='
|   |   | |-DeclRefExpr 0x158827b78 <col:3> 'int' lvalue Var 0x15880e150 'ret' 'int'
|   |   | `-CallExpr 0x158827cd0 <col:9, col:28> 'int'
|   |   |   |-ImplicitCastExpr 0x158827cb8 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x158827c78 <col:9> 'int ()' Function 0x158827bc0 '_gnutls_asn2err' 'int ()'
|   |   |   `-ImplicitCastExpr 0x158827cf8 <col:25> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x158827c98 <col:25> 'int' lvalue Var 0x15880e150 'ret' 'int'
|   |   `-ReturnStmt 0x158827d68 <line:16:3, col:10>
|   |     `-ImplicitCastExpr 0x158827d50 <col:10> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x158827d30 <col:10> 'int' lvalue Var 0x15880e150 'ret' 'int'
|   |-BinaryOperator 0x158827fd8 <line:19:2, col:51> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x158827e08 <col:2, col:10> '<dependent type>' contains-errors lvalue ->data
|   | | `-RecoveryExpr 0x158827de0 <col:2> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x158827dc0 <col:2> 'int *' lvalue ParmVar 0x15880ded8 'output' 'int *'
|   | `-CallExpr 0x158827fb0 <col:17, col:51> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x158827f30 <col:17> 'int ()' Function 0x158827e78 'gnutls_malloc' 'int ()'
|   |   `-BinaryOperator 0x158827f90 <col:31, col:41> '<dependent type>' contains-errors '+'
|   |     |-DeclRefExpr 0x158827f50 <col:31> 'unsigned int' lvalue Var 0x15880e0b8 'tl_size' 'unsigned int'
|   |     `-RecoveryExpr 0x158827f70 <col:41> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x158828270 <line:20:2, line:21:49>
|   | |-BinaryOperator 0x1588280b8 <line:20:6, col:22> 'int' contains-errors '=='
|   | | |-CXXDependentScopeMemberExpr 0x158828018 <col:6, col:14> '<dependent type>' contains-errors lvalue ->data
|   | | | `-RecoveryExpr 0x158827ff8 <col:6> '<dependent type>' contains-errors lvalue
|   | | `-RecoveryExpr 0x158828098 <col:22> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x158828260 <line:21:3, col:49>
|   |   `-CallExpr 0x158828238 <col:10, col:49> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x1588281b8 <col:10> 'int ()' Function 0x158828100 'gnutls_assert_val' 'int ()'
|   |     `-RecoveryExpr 0x158828218 <col:28> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x14e81d2f8 <line:23:2, col:34> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x14e81d150 <col:2> 'void *(void *, const void *, unsigned long)' Function 0x158828700 'memcpy' 'void *(void *, const void *, unsigned long)'
|   | |-CXXDependentScopeMemberExpr 0x14e81d190 <col:9, col:17> '<dependent type>' contains-errors lvalue ->data
|   | | `-RecoveryExpr 0x14e81d170 <col:9> '<dependent type>' contains-errors lvalue
|   | |-RecoveryExpr 0x14e81d290 <col:23> '<dependent type>' contains-errors lvalue
|   | `-DeclRefExpr 0x14e81d1f0 <col:27> 'unsigned int' lvalue Var 0x15880e0b8 'tl_size' 'unsigned int'
|   |-CallExpr 0x14e81d468 <line:24:2, col:55> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x14e81d330 <col:2> 'void *(void *, const void *, unsigned long)' Function 0x158828700 'memcpy' 'void *(void *, const void *, unsigned long)'
|   | |-BinaryOperator 0x14e81d3d8 <col:9, col:24> '<dependent type>' contains-errors '+'
|   | | |-CXXDependentScopeMemberExpr 0x14e81d370 <col:9, col:17> '<dependent type>' contains-errors lvalue ->data
|   | | | `-RecoveryExpr 0x14e81d350 <col:9> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x14e81d3b8 <col:24> 'unsigned int' lvalue Var 0x15880e0b8 'tl_size' 'unsigned int'
|   | |-DeclRefExpr 0x14e81d3f8 <col:33> 'const void *' lvalue ParmVar 0x15880dd88 'input_data' 'const void *'
|   | `-RecoveryExpr 0x14e81d418 <col:45> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x14e81d590 <line:26:2, col:27> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x14e81d4e8 <col:2, col:10> '<dependent type>' contains-errors lvalue ->size
|   | | `-RecoveryExpr 0x14e81d4c0 <col:2> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x14e81d4a0 <col:2> 'int *' lvalue ParmVar 0x15880ded8 'output' 'int *'
|   | `-BinaryOperator 0x14e81d570 <col:17, col:27> '<dependent type>' contains-errors '+'
|   |   |-DeclRefExpr 0x14e81d530 <col:17> 'unsigned int' lvalue Var 0x15880e0b8 'tl_size' 'unsigned int'
|   |   `-RecoveryExpr 0x14e81d550 <col:27> '<dependent type>' contains-errors lvalue
|   `-ReturnStmt 0x14e81d5d0 <line:28:2, col:9>
|     `-IntegerLiteral 0x14e81d5b0 <col:9> 'int' 0
`-FunctionDecl 0x158828700 <line:23:2> col:2 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x14e81d000 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x14e81d068 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x14e81d0d0 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x1588287a8 <<invalid sloc>> Implicit 882
