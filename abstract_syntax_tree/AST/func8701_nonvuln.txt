TranslationUnitDecl 0x123855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1238564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x123855bd0 '__int128'
|-TypedefDecl 0x123856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x123855bf0 'unsigned __int128'
|-TypedefDecl 0x123926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x123926000 'struct __NSConstantString_tag'
|   `-Record 0x123856580 '__NSConstantString_tag'
|-TypedefDecl 0x123926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x123855d90 '__SVInt8_t'
|-TypedefDecl 0x123926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x123855db0 '__SVInt16_t'
|-TypedefDecl 0x123926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x123855dd0 '__SVInt32_t'
|-TypedefDecl 0x1239263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x123855df0 '__SVInt64_t'
|-TypedefDecl 0x123926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x123855e10 '__SVUint8_t'
|-TypedefDecl 0x1239264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x123855e30 '__SVUint16_t'
|-TypedefDecl 0x123926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x123855e50 '__SVUint32_t'
|-TypedefDecl 0x123926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x123855e70 '__SVUint64_t'
|-TypedefDecl 0x1239265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x123855e90 '__SVFloat16_t'
|-TypedefDecl 0x123926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x123855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1239266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x123855ed0 '__SVFloat64_t'
|-TypedefDecl 0x123926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x123855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x123926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x123855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1239267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x123855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x123926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x123855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1239268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x123855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x123926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x123855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x123926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x123855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1239269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x123855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x123926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x123855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x123926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x123856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x123926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x123856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x123926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x123856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x123926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x123856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x123926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x123856090 '__clang_svint8x3_t'
|-TypedefDecl 0x123926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1238560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x123926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1238560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x123926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1238560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x123926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x123856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x123926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x123856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x123926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x123856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x123926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x123856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x123926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x123856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x123927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1238561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x123927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1238561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1239278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1238561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x123927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x123856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1239279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x123856230 '__clang_svint16x4_t'
|-TypedefDecl 0x123927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x123856250 '__clang_svint32x4_t'
|-TypedefDecl 0x123927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x123856270 '__clang_svint64x4_t'
|-TypedefDecl 0x123927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x123856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x123927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1238562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x123927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1238562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x123927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1238562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x123927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x123856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x123927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x123856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x123927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x123856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x123927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x123856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x123927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x123856390 '__SVBool_t'
|-TypedefDecl 0x123927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1238563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x123927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1238563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x123927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1238563f0 '__SVCount_t'
|-TypedefDecl 0x123927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x123927fb0 'char *'
|   `-BuiltinType 0x1238556b0 'char'
|-TypedefDecl 0x123928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x123927fb0 'char *'
|   `-BuiltinType 0x1238556b0 'char'
|-FunctionDecl 0x123928288 <dataset_diviso_filec/func8701_nonvuln.c:1:1, line:20:1> line:1:21 invalid read_chunk 'unsigned int (int *, int *)' inline
| |-ParmVarDecl 0x123928128 <col:32, col:40> col:40 invalid r 'int *'
| |-ParmVarDecl 0x1239281a8 <col:43, col:50> col:50 referenced invalid pChunk 'int *'
| `-CompoundStmt 0x123943440 <col:58, line:20:1>
|   |-DeclStmt 0x123928450 <line:2:3, col:23>
|   | `-VarDecl 0x1239283e8 <col:3, col:22> col:17 used len 'unsigned char[4]'
|   |-BinaryOperator 0x123928518 <line:3:3, col:18> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x1239284b0 <col:3, col:11> '<dependent type>' contains-errors lvalue ->size
|   | | `-RecoveryExpr 0x123928488 <col:3> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x123928468 <col:3> 'int *' lvalue ParmVar 0x1239281a8 'pChunk' 'int *'
|   | `-IntegerLiteral 0x1239284f8 <col:18> 'int' 0
|   |-BinaryOperator 0x1239285e8 <line:4:3, col:15> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x123928580 <col:3, col:11> '<dependent type>' contains-errors lvalue ->p
|   | | `-RecoveryExpr 0x123928558 <col:3> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x123928538 <col:3> 'int *' lvalue ParmVar 0x1239281a8 'pChunk' 'int *'
|   | `-IntegerLiteral 0x1239285c8 <col:15> 'int' 0
|   |-IfStmt 0x1239433d8 <line:5:3, line:18:3>
|   | |-CallExpr 0x1239286f8 <line:5:7, col:22> '<dependent type>' contains-errors
|   | | |-CXXDependentScopeMemberExpr 0x123928628 <col:7, col:10> '<dependent type>' contains-errors lvalue ->Read
|   | | | `-RecoveryExpr 0x123928608 <col:7> '<dependent type>' contains-errors lvalue
|   | | |-UnaryOperator 0x1239286c0 <col:15, col:16> 'unsigned char (*)[4]' prefix '&' cannot overflow
|   | | | `-DeclRefExpr 0x123928670 <col:16> 'unsigned char[4]' lvalue Var 0x1239283e8 'len' 'unsigned char[4]'
|   | | `-IntegerLiteral 0x1239286d8 <col:21> 'int' 4
|   | `-CompoundStmt 0x123943398 <col:25, line:18:3>
|   |   |-DeclStmt 0x123941a08 <line:6:5, col:43>
|   |   | `-VarDecl 0x123928740 <col:5, col:42> col:16 used size 'const int' auto cinit
|   |   |   `-CallExpr 0x123941998 <col:23, col:42> 'int'
|   |   |     |-ImplicitCastExpr 0x123941980 <col:23> 'int (*)()' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x123941910 <col:23> 'int ()' Function 0x123941858 'png_get_uint_32' 'int ()'
|   |   |     `-ImplicitCastExpr 0x1239419f0 <col:39> 'unsigned char *' <ArrayToPointerDecay>
|   |   |       `-DeclRefExpr 0x123941930 <col:39> 'unsigned char[4]' lvalue Var 0x1239283e8 'len' 'unsigned char[4]'
|   |   |-IfStmt 0x123941ce0 <line:8:5, line:11:5>
|   |   | |-BinaryOperator 0x123941a98 <line:8:9, col:16> 'int' contains-errors '>'
|   |   | | |-DeclRefExpr 0x123941a20 <col:9> 'const int' lvalue Var 0x123928740 'size' 'const int'
|   |   | | `-RecoveryExpr 0x123941a78 <col:16> '<dependent type>' contains-errors lvalue
|   |   | `-CompoundStmt 0x123941cc0 <col:34, line:11:5>
|   |   |   |-CallExpr 0x123941c38 <line:9:7, col:24> 'int'
|   |   |   | |-ImplicitCastExpr 0x123941c20 <col:7> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x123941b98 <col:7> 'int ()' Function 0x123941ae0 'JXL_WARNING' 'int ()'
|   |   |   | `-ImplicitCastExpr 0x123941c60 <col:19> 'char *' <ArrayToPointerDecay>
|   |   |   |   `-StringLiteral 0x123941c00 <col:19> 'char[4]' lvalue "STR"
|   |   |   `-ReturnStmt 0x123941cb0 <line:10:7, col:14>
|   |   |     `-ImplicitCastExpr 0x123941c98 <col:14> 'unsigned int' <IntegralCast>
|   |   |       `-IntegerLiteral 0x123941c78 <col:14> 'int' 0
|   |   |-BinaryOperator 0x123941e08 <line:12:5, col:27> '<dependent type>' contains-errors '='
|   |   | |-CXXDependentScopeMemberExpr 0x123941d48 <col:5, col:13> '<dependent type>' contains-errors lvalue ->size
|   |   | | `-RecoveryExpr 0x123941d20 <col:5> '<dependent type>' contains-errors lvalue
|   |   | |   `-DeclRefExpr 0x123941d00 <col:5> 'int *' lvalue ParmVar 0x1239281a8 'pChunk' 'int *'
|   |   | `-BinaryOperator 0x123941de8 <col:20, col:27> 'int' '+'
|   |   |   |-ImplicitCastExpr 0x123941dd0 <col:20> 'int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x123941d90 <col:20> 'const int' lvalue Var 0x123928740 'size' 'const int'
|   |   |   `-IntegerLiteral 0x123941db0 <col:27> 'int' 12
|   |   |-BinaryOperator 0x123941f10 <line:13:5, col:17> '<dependent type>' contains-errors '='
|   |   | |-CXXDependentScopeMemberExpr 0x123941e70 <col:5, col:13> '<dependent type>' contains-errors lvalue ->p
|   |   | | `-RecoveryExpr 0x123941e48 <col:5> '<dependent type>' contains-errors lvalue
|   |   | |   `-DeclRefExpr 0x123941e28 <col:5> 'int *' lvalue ParmVar 0x1239281a8 'pChunk' 'int *'
|   |   | `-RecoveryExpr 0x123941ef0 <col:17> '<dependent type>' contains-errors lvalue
|   |   |-CallExpr 0x123942788 <line:14:5, col:29> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x123942690 <col:5> 'void *(void *, const void *, unsigned long)' Function 0x123942440 'memcpy' 'void *(void *, const void *, unsigned long)'
|   |   | |-CXXDependentScopeMemberExpr 0x1239426d0 <col:12, col:20> '<dependent type>' contains-errors lvalue ->p
|   |   | | `-RecoveryExpr 0x1239426b0 <col:12> '<dependent type>' contains-errors lvalue
|   |   | |-DeclRefExpr 0x123942718 <col:23> 'unsigned char[4]' lvalue Var 0x1239283e8 'len' 'unsigned char[4]'
|   |   | `-IntegerLiteral 0x123942738 <col:28> 'int' 4
|   |   `-IfStmt 0x123943378 <line:15:5, line:17:5>
|   |     |-CallExpr 0x123943198 <line:15:9, col:48> '<dependent type>' contains-errors
|   |     | |-CXXDependentScopeMemberExpr 0x123943000 <col:9, col:12> '<dependent type>' contains-errors lvalue ->Read
|   |     | | `-RecoveryExpr 0x1239427c0 <col:9> '<dependent type>' contains-errors lvalue
|   |     | |-BinaryOperator 0x1239430d0 <col:17, col:29> '<dependent type>' contains-errors '+'
|   |     | | |-CXXDependentScopeMemberExpr 0x123943068 <col:17, col:25> '<dependent type>' contains-errors lvalue ->p
|   |     | | | `-RecoveryExpr 0x123943048 <col:17> '<dependent type>' contains-errors lvalue
|   |     | | `-IntegerLiteral 0x1239430b0 <col:29> 'int' 4
|   |     | `-BinaryOperator 0x123943178 <col:32, col:47> '<dependent type>' contains-errors '-'
|   |     |   |-CXXDependentScopeMemberExpr 0x123943110 <col:32, col:40> '<dependent type>' contains-errors lvalue ->size
|   |     |   | `-RecoveryExpr 0x1239430f0 <col:32> '<dependent type>' contains-errors lvalue
|   |     |   `-IntegerLiteral 0x123943158 <col:47> 'int' 4
|   |     `-CompoundStmt 0x123943360 <col:51, line:17:5>
|   |       `-ReturnStmt 0x123943350 <line:16:7, col:44>
|   |         `-ImplicitCastExpr 0x123943338 <col:14, col:44> 'unsigned int' contains-errors <LValueToRValue>
|   |           `-UnaryOperator 0x123943320 <col:14, col:44> 'unsigned int' contains-errors lvalue prefix '*' cannot overflow
|   |             `-CStyleCastExpr 0x1239432f8 <col:15, col:44> 'unsigned int *' contains-errors <Dependent>
|   |               `-ParenExpr 0x1239432d8 <col:30, col:44> '<dependent type>' contains-errors
|   |                 `-BinaryOperator 0x123943250 <col:31, col:43> '<dependent type>' contains-errors '+'
|   |                   |-CXXDependentScopeMemberExpr 0x1239431e8 <col:31, col:39> '<dependent type>' contains-errors lvalue ->p
|   |                   | `-RecoveryExpr 0x1239431c8 <col:31> '<dependent type>' contains-errors lvalue
|   |                   `-IntegerLiteral 0x123943230 <col:43> 'int' 4
|   `-ReturnStmt 0x123943430 <line:19:3, col:10>
|     `-ImplicitCastExpr 0x123943418 <col:10> 'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x1239433f8 <col:10> 'int' 0
`-FunctionDecl 0x123942440 <line:14:5> col:5 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x123942540 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x1239425a8 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x123942610 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x1239424e8 <<invalid sloc>> Implicit 882
