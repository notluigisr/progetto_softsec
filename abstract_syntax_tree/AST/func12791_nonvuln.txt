TranslationUnitDecl 0x154055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1540564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x154055bd0 '__int128'
|-TypedefDecl 0x154056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x154055bf0 'unsigned __int128'
|-TypedefDecl 0x15480be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15480bc00 'struct __NSConstantString_tag'
|   `-Record 0x154056580 '__NSConstantString_tag'
|-TypedefDecl 0x15480be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x154055d90 '__SVInt8_t'
|-TypedefDecl 0x15480bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x154055db0 '__SVInt16_t'
|-TypedefDecl 0x15480bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x154055dd0 '__SVInt32_t'
|-TypedefDecl 0x15480bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x154055df0 '__SVInt64_t'
|-TypedefDecl 0x15480c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x154055e10 '__SVUint8_t'
|-TypedefDecl 0x15480c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x154055e30 '__SVUint16_t'
|-TypedefDecl 0x15480c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x154055e50 '__SVUint32_t'
|-TypedefDecl 0x15480c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x154055e70 '__SVUint64_t'
|-TypedefDecl 0x15480c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x154055e90 '__SVFloat16_t'
|-TypedefDecl 0x15480c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x154055eb0 '__SVFloat32_t'
|-TypedefDecl 0x15480c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x154055ed0 '__SVFloat64_t'
|-TypedefDecl 0x15480c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x154055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15480c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x154055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15480c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x154055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15480c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x154055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15480c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x154055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15480c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x154055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15480c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x154055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15480c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x154055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15480c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x154055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15480c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x154056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15480c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x154056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15480c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x154056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15480c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x154056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15480c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x154056090 '__clang_svint8x3_t'
|-TypedefDecl 0x15480c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1540560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15480c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1540560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15480c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1540560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15480c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x154056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15480ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x154056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15480cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x154056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15480cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x154056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15480cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x154056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15480d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1540561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15480d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1540561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15480d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1540561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15480d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x154056210 '__clang_svint8x4_t'
|-TypedefDecl 0x15480d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x154056230 '__clang_svint16x4_t'
|-TypedefDecl 0x15480d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x154056250 '__clang_svint32x4_t'
|-TypedefDecl 0x15480d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x154056270 '__clang_svint64x4_t'
|-TypedefDecl 0x15480d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x154056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15480d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1540562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15480d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1540562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15480d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1540562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15480d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x154056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15480d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x154056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15480d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x154056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15480d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x154056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15480da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x154056390 '__SVBool_t'
|-TypedefDecl 0x15480da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1540563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15480dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1540563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15480db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1540563f0 '__SVCount_t'
|-TypedefDecl 0x15480dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15480dbb0 'char *'
|   `-BuiltinType 0x1540556b0 'char'
|-TypedefDecl 0x15480dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15480dbb0 'char *'
|   `-BuiltinType 0x1540556b0 'char'
`-FunctionDecl 0x15480e038 <dataset_diviso_filec/func12791_nonvuln.c:1:1, line:28:1> line:1:1 invalid set_one_pref 'int (int, int, const char *, int *, int *)'
  |-ParmVarDecl 0x15480dcd8 <col:15, col:19> col:19 used val 'int'
  |-ParmVarDecl 0x15480dd58 <col:24, col:28> col:28 used type 'int'
  |-ParmVarDecl 0x15480ddd8 <col:34, col:46> col:46 used item 'const char *'
  |-ParmVarDecl 0x15480dea8 <col:52, col:58> col:58 referenced invalid buf 'int *'
  |-ParmVarDecl 0x15480df28 <col:63, col:68> col:68 used nbuf 'int *'
  `-CompoundStmt 0x1548281e8 <line:2:1, line:28:1>
    |-DeclStmt 0x15480e188 <line:3:5, col:10>
    | `-VarDecl 0x15480e120 <col:5, col:9> col:9 used i 'int'
    |-ForStmt 0x154827870 <line:5:5, line:10:9>
    | |-BinaryOperator 0x15480e1e0 <line:5:10, col:12> 'int' '='
    | | |-DeclRefExpr 0x15480e1a0 <col:10> 'int' lvalue Var 0x15480e120 'i' 'int'
    | | `-IntegerLiteral 0x15480e1c0 <col:12> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x15480e2a0 <col:15, col:20> 'int' '<'
    | | |-ImplicitCastExpr 0x15480e270 <col:15> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x15480e200 <col:15> 'int' lvalue Var 0x15480e120 'i' 'int'
    | | `-ImplicitCastExpr 0x15480e288 <col:19, col:20> 'int' <LValueToRValue>
    | |   `-UnaryOperator 0x15480e258 <col:19, col:20> 'int' lvalue prefix '*' cannot overflow
    | |     `-ImplicitCastExpr 0x15480e240 <col:20> 'int *' <LValueToRValue>
    | |       `-DeclRefExpr 0x15480e220 <col:20> 'int *' lvalue ParmVar 0x15480df28 'nbuf' 'int *'
    | |-UnaryOperator 0x15480e2e0 <col:26, col:27> 'int' postfix '++'
    | | `-DeclRefExpr 0x15480e2c0 <col:26> 'int' lvalue Var 0x15480e120 'i' 'int'
    | `-IfStmt 0x154827850 <line:6:7, line:10:9>
    |   |-BinaryOperator 0x15480e3a8 <line:6:11, col:21> 'int' contains-errors '=='
    |   | |-ArraySubscriptExpr 0x15480e368 <col:11, col:16> '<dependent type>' contains-errors lvalue
    |   | | |-ImplicitCastExpr 0x15480e338 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |   | | | `-RecoveryExpr 0x15480e2f8 <col:11> '<dependent type>' contains-errors lvalue
    |   | | `-ImplicitCastExpr 0x15480e350 <col:15> 'int' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x15480e318 <col:15> 'int' lvalue Var 0x15480e120 'i' 'int'
    |   | `-DeclRefExpr 0x15480e388 <col:21> 'int' lvalue ParmVar 0x15480dcd8 'val' 'int'
    |   `-CompoundStmt 0x154827830 <line:7:2, line:10:9>
    |     |-CallExpr 0x1548277a0 <line:8:4, col:28> 'int'
    |     | |-ImplicitCastExpr 0x154827788 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |     | | `-DeclRefExpr 0x154827560 <col:4> 'int ()' Function 0x1548274a8 'log_info' 'int ()'
    |     | |-CallExpr 0x154827728 <col:14, col:21> 'int'
    |     | | |-ImplicitCastExpr 0x154827710 <col:14> 'int (*)()' <FunctionToPointerDecay>
    |     | | | `-DeclRefExpr 0x154827660 <col:14> 'int ()' Function 0x1548275a8 '_' 'int ()'
    |     | | `-ImplicitCastExpr 0x154827750 <col:16> 'char *' <ArrayToPointerDecay>
    |     | |   `-StringLiteral 0x1548276c0 <col:16> 'char[4]' lvalue "STR"
    |     | `-ImplicitCastExpr 0x1548277d0 <col:24> 'const char *' <LValueToRValue>
    |     |   `-DeclRefExpr 0x154827768 <col:24> 'const char *' lvalue ParmVar 0x15480ddd8 'item' 'const char *'
    |     `-ReturnStmt 0x154827820 <line:9:4, col:12>
    |       `-UnaryOperator 0x154827808 <col:11, col:12> 'int' prefix '-'
    |         `-IntegerLiteral 0x1548277e8 <col:12> 'int' 1
    |-IfStmt 0x154828050 <line:12:5, line:24:7>
    | |-BinaryOperator 0x1548279b0 <line:12:9, col:18> 'int' contains-errors '>='
    | | |-UnaryOperator 0x154827978 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
    | | | `-ImplicitCastExpr 0x154827960 <col:10> 'int *' <LValueToRValue>
    | | |   `-DeclRefExpr 0x1548278a8 <col:10> 'int *' lvalue ParmVar 0x15480df28 'nbuf' 'int *'
    | | `-RecoveryExpr 0x154827990 <col:18> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x154828030 <line:13:7, line:24:7>
    |   |-IfStmt 0x154827fb8 <line:14:2, line:21:8> has_else
    |   | |-BinaryOperator 0x154827a28 <line:14:5, col:11> 'int' '=='
    |   | | |-ImplicitCastExpr 0x154827a10 <col:5> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x1548279d0 <col:5> 'int' lvalue ParmVar 0x15480dd58 'type' 'int'
    |   | | `-IntegerLiteral 0x1548279f0 <col:11> 'int' 1
    |   | |-CallExpr 0x154827b18 <line:15:4, col:21> 'int'
    |   | | |-ImplicitCastExpr 0x154827b00 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |   | | | `-DeclRefExpr 0x154827a48 <col:4> 'int ()' Function 0x1548274a8 'log_info' 'int ()'
    |   | | `-CallExpr 0x154827ac0 <col:13, col:20> 'int'
    |   | |   |-ImplicitCastExpr 0x154827aa8 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |   | |   | `-DeclRefExpr 0x154827a68 <col:13> 'int ()' Function 0x1548275a8 '_' 'int ()'
    |   | |   `-ImplicitCastExpr 0x154827ae8 <col:15> 'char *' <ArrayToPointerDecay>
    |   | |     `-StringLiteral 0x154827a88 <col:15> 'char[4]' lvalue "STR"
    |   | `-IfStmt 0x154827f88 <line:16:7, line:21:8> has_else
    |   |   |-BinaryOperator 0x154827b98 <line:16:10, col:16> 'int' '=='
    |   |   | |-ImplicitCastExpr 0x154827b80 <col:10> 'int' <LValueToRValue>
    |   |   | | `-DeclRefExpr 0x154827b40 <col:10> 'int' lvalue ParmVar 0x15480dd58 'type' 'int'
    |   |   | `-IntegerLiteral 0x154827b60 <col:16> 'int' 2
    |   |   |-CallExpr 0x154827c88 <line:17:4, col:21> 'int'
    |   |   | |-ImplicitCastExpr 0x154827c70 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |   |   | | `-DeclRefExpr 0x154827bb8 <col:4> 'int ()' Function 0x1548274a8 'log_info' 'int ()'
    |   |   | `-CallExpr 0x154827c30 <col:13, col:20> 'int'
    |   |   |   |-ImplicitCastExpr 0x154827c18 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |   |   |   | `-DeclRefExpr 0x154827bd8 <col:13> 'int ()' Function 0x1548275a8 '_' 'int ()'
    |   |   |   `-ImplicitCastExpr 0x154827c58 <col:15> 'char *' <ArrayToPointerDecay>
    |   |   |     `-StringLiteral 0x154827bf8 <col:15> 'char[4]' lvalue "STR"
    |   |   `-IfStmt 0x154827f58 <line:18:7, line:21:8> has_else
    |   |     |-BinaryOperator 0x154827d08 <line:18:10, col:16> 'int' '=='
    |   |     | |-ImplicitCastExpr 0x154827cf0 <col:10> 'int' <LValueToRValue>
    |   |     | | `-DeclRefExpr 0x154827cb0 <col:10> 'int' lvalue ParmVar 0x15480dd58 'type' 'int'
    |   |     | `-IntegerLiteral 0x154827cd0 <col:16> 'int' 3
    |   |     |-CallExpr 0x154827df8 <line:19:4, col:21> 'int'
    |   |     | |-ImplicitCastExpr 0x154827de0 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |   |     | | `-DeclRefExpr 0x154827d28 <col:4> 'int ()' Function 0x1548274a8 'log_info' 'int ()'
    |   |     | `-CallExpr 0x154827da0 <col:13, col:20> 'int'
    |   |     |   |-ImplicitCastExpr 0x154827d88 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |   |     |   | `-DeclRefExpr 0x154827d48 <col:13> 'int ()' Function 0x1548275a8 '_' 'int ()'
    |   |     |   `-ImplicitCastExpr 0x154827dc8 <col:15> 'char *' <ArrayToPointerDecay>
    |   |     |     `-StringLiteral 0x154827d68 <col:15> 'char[4]' lvalue "STR"
    |   |     `-CallExpr 0x154827f38 <line:21:4, col:8> 'int'
    |   |       `-ImplicitCastExpr 0x154827f20 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |   |         `-DeclRefExpr 0x154827f00 <col:4> 'int ()' Function 0x154827e48 'BUG' 'int ()'
    |   `-ReturnStmt 0x154828020 <line:23:9, col:17>
    |     `-UnaryOperator 0x154828008 <col:16, col:17> 'int' prefix '-'
    |       `-IntegerLiteral 0x154827fe8 <col:17> 'int' 1
    |-BinaryOperator 0x154828198 <line:26:5, col:22> '<dependent type>' contains-errors '='
    | |-ArraySubscriptExpr 0x154828158 <col:5, col:18> '<dependent type>' contains-errors lvalue
    | | |-ImplicitCastExpr 0x154828140 <col:5> '<dependent type>' contains-errors <LValueToRValue>
    | | | `-RecoveryExpr 0x154828090 <col:5> '<dependent type>' contains-errors lvalue
    | | |   `-DeclRefExpr 0x154828070 <col:5> 'int *' lvalue ParmVar 0x15480dea8 'buf' 'int *'
    | | `-UnaryOperator 0x154828128 <col:9, col:16> 'int' postfix '++'
    | |   `-ParenExpr 0x154828108 <col:9, col:15> 'int' lvalue
    | |     `-UnaryOperator 0x1548280f0 <col:10, col:11> 'int' lvalue prefix '*' cannot overflow
    | |       `-ImplicitCastExpr 0x1548280d8 <col:11> 'int *' <LValueToRValue>
    | |         `-DeclRefExpr 0x1548280b8 <col:11> 'int *' lvalue ParmVar 0x15480df28 'nbuf' 'int *'
    | `-DeclRefExpr 0x154828178 <col:22> 'int' lvalue ParmVar 0x15480dcd8 'val' 'int'
    `-ReturnStmt 0x1548281d8 <line:27:5, col:12>
      `-IntegerLiteral 0x1548281b8 <col:12> 'int' 0
