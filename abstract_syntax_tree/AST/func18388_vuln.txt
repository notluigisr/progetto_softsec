TranslationUnitDecl 0x159055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1590564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x159055bd0 '__int128'
|-TypedefDecl 0x159056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x159055bf0 'unsigned __int128'
|-TypedefDecl 0x159126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x159126000 'struct __NSConstantString_tag'
|   `-Record 0x159056580 '__NSConstantString_tag'
|-TypedefDecl 0x159126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x159055d90 '__SVInt8_t'
|-TypedefDecl 0x159126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x159055db0 '__SVInt16_t'
|-TypedefDecl 0x159126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x159055dd0 '__SVInt32_t'
|-TypedefDecl 0x1591263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x159055df0 '__SVInt64_t'
|-TypedefDecl 0x159126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x159055e10 '__SVUint8_t'
|-TypedefDecl 0x1591264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x159055e30 '__SVUint16_t'
|-TypedefDecl 0x159126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x159055e50 '__SVUint32_t'
|-TypedefDecl 0x159126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x159055e70 '__SVUint64_t'
|-TypedefDecl 0x1591265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x159055e90 '__SVFloat16_t'
|-TypedefDecl 0x159126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x159055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1591266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x159055ed0 '__SVFloat64_t'
|-TypedefDecl 0x159126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x159055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x159126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x159055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1591267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x159055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x159126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x159055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1591268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x159055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x159126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x159055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x159126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x159055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1591269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x159055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x159126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x159055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x159126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x159056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x159126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x159056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x159126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x159056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x159126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x159056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x159126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x159056090 '__clang_svint8x3_t'
|-TypedefDecl 0x159126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1590560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x159126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1590560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x159126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1590560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x159126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x159056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x159126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x159056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x159126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x159056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x159126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x159056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x159126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x159056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x159127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1590561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x159127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1590561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1591278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1590561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x159127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x159056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1591279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x159056230 '__clang_svint16x4_t'
|-TypedefDecl 0x159127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x159056250 '__clang_svint32x4_t'
|-TypedefDecl 0x159127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x159056270 '__clang_svint64x4_t'
|-TypedefDecl 0x159127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x159056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x159127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1590562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x159127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1590562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x159127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1590562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x159127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x159056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x159127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x159056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x159127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x159056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x159127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x159056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x159127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x159056390 '__SVBool_t'
|-TypedefDecl 0x159127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1590563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x159127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1590563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x159127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1590563f0 '__SVCount_t'
|-TypedefDecl 0x159127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x159127fb0 'char *'
|   `-BuiltinType 0x1590556b0 'char'
|-TypedefDecl 0x159128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x159127fb0 'char *'
|   `-BuiltinType 0x1590556b0 'char'
`-FunctionDecl 0x159140cb8 <dataset_diviso_filec/func18388_vuln.c:1:1, line:67:1> line:1:1 process_rs 'int (struct Interface *, unsigned char *, int, struct sockaddr_in6 *)'
  |-ParmVarDecl 0x159128648 <col:12, col:30> col:30 used iface 'struct Interface *'
  |-ParmVarDecl 0x1591286f8 <col:37, col:52> col:52 used msg 'unsigned char *'
  |-ParmVarDecl 0x159128778 <col:57, col:61> col:61 used len 'int'
  |-ParmVarDecl 0x159140b68 <line:2:2, col:23> col:23 used addr 'struct sockaddr_in6 *'
  `-CompoundStmt 0x159146ad8 <line:3:1, line:67:1>
    |-DeclStmt 0x159140e48 <line:4:2, col:14>
    | `-VarDecl 0x159140de0 <col:2, col:9> col:9 used delay 'double'
    |-DeclStmt 0x159140ee0 <line:5:2, col:13>
    | `-VarDecl 0x159140e78 <col:2, col:9> col:9 used next 'double'
    |-DeclStmt 0x159141078 <line:6:2, col:19>
    | |-RecordDecl 0x159140ef8 <col:2, col:9> col:9 struct timeval
    | `-VarDecl 0x159140ff8 <col:2, col:17> col:17 invalid tv 'struct timeval'
    |-WhileStmt 0x1591448a8 <line:14:2, line:45:2>
    | |-BinaryOperator 0x1591412b8 <line:14:9, col:15> 'int' '>'
    | | |-ImplicitCastExpr 0x1591412a0 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x159141260 <col:9> 'int' lvalue ParmVar 0x159128778 'len' 'int'
    | | `-IntegerLiteral 0x159141280 <col:15> 'int' 0
    | `-CompoundStmt 0x159144870 <line:15:2, line:45:2>
    |   |-DeclStmt 0x159141358 <line:16:3, col:13>
    |   | `-VarDecl 0x1591412f0 <col:3, col:7> col:7 used optlen 'int'
    |   |-IfStmt 0x159141650 <line:18:3, line:22:3>
    |   | |-BinaryOperator 0x1591413c8 <line:18:7, col:13> 'int' '<'
    |   | | |-ImplicitCastExpr 0x1591413b0 <col:7> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x159141370 <col:7> 'int' lvalue ParmVar 0x159128778 'len' 'int'
    |   | | `-IntegerLiteral 0x159141390 <col:13> 'int' 2
    |   | `-CompoundStmt 0x159141630 <line:19:3, line:22:3>
    |   |   |-CallExpr 0x1591415f0 <line:20:4, col:27> '<dependent type>' contains-errors
    |   |   | |-DeclRefExpr 0x159141500 <col:4> 'int ()' Function 0x159141448 'flog' 'int ()'
    |   |   | |-RecoveryExpr 0x1591415d0 <col:9> '<dependent type>' contains-errors lvalue
    |   |   | `-StringLiteral 0x159141580 <col:22> 'char[4]' lvalue "STR"
    |   |   `-ReturnStmt 0x159141620 <line:21:4>
    |   |-IfStmt 0x159144420 <line:26:3, line:35:3> has_else
    |   | |-BinaryOperator 0x159141740 <line:26:7, col:17> 'int' '=='
    |   | | |-ImplicitCastExpr 0x159141728 <col:7> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x1591416e8 <col:7> 'int' lvalue Var 0x1591412f0 'optlen' 'int'
    |   | | `-IntegerLiteral 0x159141708 <col:17> 'int' 0
    |   | |-CompoundStmt 0x159141848 <line:27:3, line:30:3>
    |   | | |-CallExpr 0x159141808 <line:28:4, col:27> '<dependent type>' contains-errors
    |   | | | |-DeclRefExpr 0x159141760 <col:4> 'int ()' Function 0x159141448 'flog' 'int ()'
    |   | | | |-RecoveryExpr 0x1591417e8 <col:9> '<dependent type>' contains-errors lvalue
    |   | | | `-StringLiteral 0x159141798 <col:22> 'char[4]' lvalue "STR"
    |   | | `-ReturnStmt 0x159141838 <line:29:4>
    |   | `-IfStmt 0x159144400 <line:31:8, line:35:3>
    |   |   |-BinaryOperator 0x1591418d8 <line:31:12, col:21> 'int' '>'
    |   |   | |-ImplicitCastExpr 0x1591418a8 <col:12> 'int' <LValueToRValue>
    |   |   | | `-DeclRefExpr 0x159141868 <col:12> 'int' lvalue Var 0x1591412f0 'optlen' 'int'
    |   |   | `-ImplicitCastExpr 0x1591418c0 <col:21> 'int' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x159141888 <col:21> 'int' lvalue ParmVar 0x159128778 'len' 'int'
    |   |   `-CompoundStmt 0x1591419e0 <line:32:3, line:35:3>
    |   |     |-CallExpr 0x1591419a0 <line:33:4, col:27> '<dependent type>' contains-errors
    |   |     | |-DeclRefExpr 0x1591418f8 <col:4> 'int ()' Function 0x159141448 'flog' 'int ()'
    |   |     | |-RecoveryExpr 0x159141980 <col:9> '<dependent type>' contains-errors lvalue
    |   |     | `-StringLiteral 0x159141930 <col:22> 'char[4]' lvalue "STR"
    |   |     `-ReturnStmt 0x1591419d0 <line:34:4>
    |   |-IfStmt 0x1591447a8 <line:37:3, line:41:3>
    |   | |-BinaryOperator 0x159144720 <line:37:7, line:38:47> 'int' contains-errors '&&'
    |   | | |-BinaryOperator 0x159144700 <line:37:7, col:19> 'int' contains-errors '=='
    |   | | | |-UnaryOperator 0x1591446c8 <col:7, col:8> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   | | | | `-ImplicitCastExpr 0x1591446b0 <col:8> '<dependent type>' contains-errors <LValueToRValue>
    |   | | | |   `-RecoveryExpr 0x159144690 <col:8> '<dependent type>' contains-errors lvalue
    |   | | | `-RecoveryExpr 0x1591446e0 <col:19> '<dependent type>' contains-errors lvalue
    |   | | `-CallExpr 0x159144648 <line:38:7, col:47> '<dependent type>' contains-errors
    |   | |   |-DeclRefExpr 0x1591445b0 <col:7> 'int ()' Function 0x1591444f8 'IN6_IS_ADDR_UNSPECIFIED' 'int ()'
    |   | |   `-UnaryOperator 0x159144630 <col:31, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | |     `-RecoveryExpr 0x159144608 <col:32, col:38> '<dependent type>' contains-errors lvalue
    |   | |       `-DeclRefExpr 0x1591445d0 <col:32> 'struct sockaddr_in6 *' lvalue ParmVar 0x159140b68 'addr' 'struct sockaddr_in6 *'
    |   | `-CompoundStmt 0x159144790 <col:50, line:41:3>
    |   |   `-ReturnStmt 0x159144780 <line:40:4>
    |   `-CompoundAssignOperator 0x159144820 <line:43:3, col:10> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
    |     |-DeclRefExpr 0x1591447c8 <col:3> 'int' lvalue ParmVar 0x159128778 'len' 'int'
    |     `-ImplicitCastExpr 0x159144808 <col:10> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x1591447e8 <col:10> 'int' lvalue Var 0x1591412f0 'optlen' 'int'
    `-IfStmt 0x159146aa8 <line:51:2, line:66:2> has_else
      |-RecoveryExpr 0x159144be0 <line:51:6, col:13> '<dependent type>' contains-errors lvalue
      | `-DeclRefExpr 0x159144ba8 <col:6> 'struct Interface *' lvalue ParmVar 0x159128648 'iface' 'struct Interface *'
      |-CompoundStmt 0x159145160 <col:26, line:55:2>
      | |-CallExpr 0x159144f58 <line:53:3, col:15> 'int'
      | | |-ImplicitCastExpr 0x159144f40 <col:3> 'int (*)()' <FunctionToPointerDecay>
      | | | `-DeclRefExpr 0x159144f00 <col:3> 'int ()' Function 0x159144e48 'mdelay' 'int ()'
      | | `-ImplicitCastExpr 0x159144f80 <col:10> 'double' <LValueToRValue>
      | |   `-DeclRefExpr 0x159144f20 <col:10> 'double' lvalue Var 0x159140de0 'delay' 'double'
      | `-CallExpr 0x159145130 <line:54:3, col:41> '<dependent type>' contains-errors
      |   |-DeclRefExpr 0x159145078 <col:3> 'int ()' Function 0x159144fc0 'send_ra_forall' 'int ()'
      |   |-DeclRefExpr 0x159145098 <col:18> 'struct Interface *' lvalue ParmVar 0x159128648 'iface' 'struct Interface *'
      |   `-UnaryOperator 0x159145118 <col:25, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow
      |     `-RecoveryExpr 0x1591450f0 <col:26, col:32> '<dependent type>' contains-errors lvalue
      |       `-DeclRefExpr 0x1591450b8 <col:26> 'struct sockaddr_in6 *' lvalue ParmVar 0x159140b68 'addr' 'struct sockaddr_in6 *'
      `-IfStmt 0x159146a78 <line:56:7, line:66:2> has_else
        |-BinaryOperator 0x159146000 <line:56:12, col:71> 'int' contains-errors '<'
        | |-BinaryOperator 0x159145380 <col:12, col:55> '<dependent type>' contains-errors '/'
        | | |-CallExpr 0x159145330 <col:12, col:51> '<dependent type>' contains-errors
        | | | |-DeclRefExpr 0x159145260 <col:12> 'int ()' Function 0x1591451a8 'timevaldiff' 'int ()'
        | | | |-UnaryOperator 0x1591452a0 <col:24, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow
        | | | | `-RecoveryExpr 0x159145280 <col:25> '<dependent type>' contains-errors lvalue
        | | | `-UnaryOperator 0x159145318 <col:29, col:37> '<dependent type>' contains-errors prefix '&' cannot overflow
        | | |   `-RecoveryExpr 0x1591452f0 <col:30, col:37> '<dependent type>' contains-errors lvalue
        | | |     `-DeclRefExpr 0x1591452b8 <col:30> 'struct Interface *' lvalue ParmVar 0x159128648 'iface' 'struct Interface *'
        | | `-FloatingLiteral 0x159145360 <col:55> 'double' 1.000000e+03
        | `-RecoveryExpr 0x1591453d8 <col:64, col:71> '<dependent type>' contains-errors lvalue
        |   `-DeclRefExpr 0x1591453a0 <col:64> 'struct Interface *' lvalue ParmVar 0x159128648 'iface' 'struct Interface *'
        |-CompoundStmt 0x1591466b0 <col:92, line:60:2>
        | |-BinaryOperator 0x159146498 <line:58:3, col:160> 'double' contains-errors '='
        | | |-DeclRefExpr 0x159146020 <col:3> 'double' lvalue Var 0x159140e78 'next' 'double'
        | | `-BinaryOperator 0x159146478 <col:10, col:160> '<dependent type>' contains-errors '+'
        | |   |-BinaryOperator 0x1591463e0 <col:10, col:150> '<dependent type>' contains-errors '+'
        | |   | |-BinaryOperator 0x1591461f0 <col:10, col:73> '<dependent type>' contains-errors '-'
        | |   | | |-RecoveryExpr 0x159146078 <col:10, col:17> '<dependent type>' contains-errors lvalue
        | |   | | | `-DeclRefExpr 0x159146040 <col:10> 'struct Interface *' lvalue ParmVar 0x159128648 'iface' 'struct Interface *'
        | |   | | `-ParenExpr 0x1591461d0 <col:38, col:73> '<dependent type>' contains-errors
        | |   | |   `-BinaryOperator 0x1591461b0 <col:39, col:64> '<dependent type>' contains-errors '+'
        | |   | |     |-CXXDependentScopeMemberExpr 0x1591460c0 <col:39, col:42> '<dependent type>' contains-errors lvalue .tv_sec
        | |   | |     | `-RecoveryExpr 0x1591460a0 <col:39> '<dependent type>' contains-errors lvalue
        | |   | |     `-BinaryOperator 0x159146190 <col:51, col:64> '<dependent type>' contains-errors '/'
        | |   | |       |-CXXDependentScopeMemberExpr 0x159146128 <col:51, col:54> '<dependent type>' contains-errors lvalue .tv_usec
        | |   | |       | `-RecoveryExpr 0x159146108 <col:51> '<dependent type>' contains-errors lvalue
        | |   | |       `-FloatingLiteral 0x159146170 <col:64> 'double' 1.000000e+06
        | |   | `-ParenExpr 0x1591463c0 <col:77, col:150> '<dependent type>' contains-errors
        | |   |   `-BinaryOperator 0x1591463a0 <col:78, col:141> '<dependent type>' contains-errors '+'
        | |   |     |-CXXDependentScopeMemberExpr 0x159146270 <col:78, col:100> '<dependent type>' contains-errors lvalue .tv_sec
        | |   |     | `-RecoveryExpr 0x159146248 <col:78, col:85> '<dependent type>' contains-errors lvalue
        | |   |     |   `-DeclRefExpr 0x159146210 <col:78> 'struct Interface *' lvalue ParmVar 0x159128648 'iface' 'struct Interface *'
        | |   |     `-BinaryOperator 0x159146380 <col:109, col:141> '<dependent type>' contains-errors '/'
        | |   |       |-CXXDependentScopeMemberExpr 0x159146318 <col:109, col:131> '<dependent type>' contains-errors lvalue .tv_usec
        | |   |       | `-RecoveryExpr 0x1591462f0 <col:109, col:116> '<dependent type>' contains-errors lvalue
        | |   |       |   `-DeclRefExpr 0x1591462b8 <col:109> 'struct Interface *' lvalue ParmVar 0x159128648 'iface' 'struct Interface *'
        | |   |       `-FloatingLiteral 0x159146360 <col:141> 'double' 1.000000e+06
        | |   `-BinaryOperator 0x159146458 <col:154, col:160> 'double' '/'
        | |     |-ImplicitCastExpr 0x159146440 <col:154> 'double' <LValueToRValue>
        | |     | `-DeclRefExpr 0x159146400 <col:154> 'double' lvalue Var 0x159140de0 'delay' 'double'
        | |     `-FloatingLiteral 0x159146420 <col:160> 'double' 1.000000e+03
        | `-BinaryOperator 0x159146690 <line:59:3, col:44> '<dependent type>' contains-errors '='
        |   |-RecoveryExpr 0x1591464f0 <col:3, col:10> '<dependent type>' contains-errors lvalue
        |   | `-DeclRefExpr 0x1591464b8 <col:3> 'struct Interface *' lvalue ParmVar 0x159128648 'iface' 'struct Interface *'
        |   `-CallExpr 0x159146650 <col:27, col:44> 'int'
        |     |-ImplicitCastExpr 0x159146638 <col:27> 'int (*)()' <FunctionToPointerDecay>
        |     | `-DeclRefExpr 0x1591465f8 <col:27> 'int ()' Function 0x159146540 'next_timeval' 'int ()'
        |     `-ImplicitCastExpr 0x159146678 <col:40> 'double' <LValueToRValue>
        |       `-DeclRefExpr 0x159146618 <col:40> 'double' lvalue Var 0x159140e78 'next' 'double'
        `-CompoundStmt 0x159146a58 <line:61:7, line:66:2>
          |-BinaryOperator 0x159146920 <line:64:3, col:73> 'double' contains-errors '='
          | |-DeclRefExpr 0x159146710 <col:3> 'double' lvalue Var 0x159140e78 'next' 'double'
          | `-CallExpr 0x1591468f0 <col:10, col:73> '<dependent type>' contains-errors
          |   |-DeclRefExpr 0x159146810 <col:10> 'int ()' Function 0x159146758 'rand_between' 'int ()'
          |   |-RecoveryExpr 0x159146868 <col:23, col:30> '<dependent type>' contains-errors lvalue
          |   | `-DeclRefExpr 0x159146830 <col:23> 'struct Interface *' lvalue ParmVar 0x159128648 'iface' 'struct Interface *'
          |   `-RecoveryExpr 0x1591468c8 <col:49, col:56> '<dependent type>' contains-errors lvalue
          |     `-DeclRefExpr 0x159146890 <col:49> 'struct Interface *' lvalue ParmVar 0x159128648 'iface' 'struct Interface *'
          `-BinaryOperator 0x159146a38 <line:65:3, col:44> '<dependent type>' contains-errors '='
            |-RecoveryExpr 0x159146978 <col:3, col:10> '<dependent type>' contains-errors lvalue
            | `-DeclRefExpr 0x159146940 <col:3> 'struct Interface *' lvalue ParmVar 0x159128648 'iface' 'struct Interface *'
            `-CallExpr 0x1591469f8 <col:27, col:44> 'int'
              |-ImplicitCastExpr 0x1591469e0 <col:27> 'int (*)()' <FunctionToPointerDecay>
              | `-DeclRefExpr 0x1591469a0 <col:27> 'int ()' Function 0x159146540 'next_timeval' 'int ()'
              `-ImplicitCastExpr 0x159146a20 <col:40> 'double' <LValueToRValue>
                `-DeclRefExpr 0x1591469c0 <col:40> 'double' lvalue Var 0x159140e78 'next' 'double'
