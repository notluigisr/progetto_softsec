TranslationUnitDecl 0x130055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1300564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x130055bd0 '__int128'
|-TypedefDecl 0x130056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x130055bf0 'unsigned __int128'
|-TypedefDecl 0x12800be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12800bc00 'struct __NSConstantString_tag'
|   `-Record 0x130056580 '__NSConstantString_tag'
|-TypedefDecl 0x12800be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x130055d90 '__SVInt8_t'
|-TypedefDecl 0x12800bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x130055db0 '__SVInt16_t'
|-TypedefDecl 0x12800bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x130055dd0 '__SVInt32_t'
|-TypedefDecl 0x12800bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x130055df0 '__SVInt64_t'
|-TypedefDecl 0x12800c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x130055e10 '__SVUint8_t'
|-TypedefDecl 0x12800c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x130055e30 '__SVUint16_t'
|-TypedefDecl 0x12800c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x130055e50 '__SVUint32_t'
|-TypedefDecl 0x12800c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x130055e70 '__SVUint64_t'
|-TypedefDecl 0x12800c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x130055e90 '__SVFloat16_t'
|-TypedefDecl 0x12800c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x130055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12800c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x130055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12800c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x130055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12800c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x130055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12800c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x130055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12800c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x130055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12800c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x130055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12800c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x130055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12800c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x130055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12800c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x130055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12800c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x130055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12800c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x130056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12800c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x130056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12800c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x130056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12800c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x130056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12800c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x130056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12800c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1300560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12800c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1300560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12800c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1300560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12800c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x130056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12800ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x130056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12800cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x130056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12800cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x130056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12800cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x130056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12800d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1300561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12800d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1300561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12800d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1300561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12800d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x130056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12800d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x130056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12800d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x130056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12800d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x130056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12800d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x130056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12800d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1300562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12800d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1300562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12800d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1300562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12800d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x130056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12800d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x130056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12800d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x130056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12800d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x130056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12800da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x130056390 '__SVBool_t'
|-TypedefDecl 0x12800da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1300563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12800dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1300563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12800db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1300563f0 '__SVCount_t'
|-TypedefDecl 0x12800dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12800dbb0 'char *'
|   `-BuiltinType 0x1300556b0 'char'
|-TypedefDecl 0x12800dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12800dbb0 'char *'
|   `-BuiltinType 0x1300556b0 'char'
|-FunctionDecl 0x12800ddf8 <dataset_diviso_filec/func8501_vuln.c:1:1, line:109:2> line:1:5 invalid ssl3_client_hello 'int (int *)'
| |-ParmVarDecl 0x12800dd28 <col:23, col:28> col:28 referenced invalid s 'int *'
| `-CompoundStmt 0x12802e5a8 <line:2:2, line:109:2>
|   |-DeclStmt 0x12800df60 <line:3:2, col:20>
|   | `-VarDecl 0x12800def8 <col:2, col:17> col:17 used buf 'unsigned char *'
|   |-DeclStmt 0x12800e090 <line:4:2, col:21>
|   | |-VarDecl 0x12800df90 <col:2, col:17> col:17 used p 'unsigned char *'
|   | `-VarDecl 0x12800e010 <col:2, col:20> col:20 used d 'unsigned char *'
|   |-DeclStmt 0x12800e128 <line:5:2, col:7>
|   | `-VarDecl 0x12800e0c0 <col:2, col:6> col:6 used i 'int'
|   |-DeclStmt 0x12800e258 <line:6:2, col:22>
|   | |-VarDecl 0x12800e158 <col:2, col:16> col:16 used Time 'unsigned long'
|   | `-VarDecl 0x12800e1d8 <col:2, col:21> col:21 used l 'unsigned long'
|   |-DeclStmt 0x12800e2f0 <line:8:2, col:7>
|   | `-VarDecl 0x12800e288 <col:2, col:6> col:6 used j 'int'
|   |-BinaryOperator 0x128027840 <line:12:2, col:36> 'unsigned char *' contains-errors '='
|   | |-DeclRefExpr 0x12800e320 <col:2> 'unsigned char *' lvalue Var 0x12800def8 'buf' 'unsigned char *'
|   | `-CStyleCastExpr 0x128027818 <col:6, col:36> 'unsigned char *' contains-errors <Dependent>
|   |   `-CXXDependentScopeMemberExpr 0x12800e3a8 <col:23, col:36> '<dependent type>' contains-errors lvalue ->data
|   |     `-CXXDependentScopeMemberExpr 0x12800e360 <col:23, col:26> '<dependent type>' contains-errors lvalue ->init_buf
|   |       `-RecoveryExpr 0x12800e340 <col:23> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x12802e3c8 <line:13:2, line:103:3>
|   | |-BinaryOperator 0x128027920 <line:13:6, col:18> 'int' contains-errors '=='
|   | | |-CXXDependentScopeMemberExpr 0x128027880 <col:6, col:9> '<dependent type>' contains-errors lvalue ->state
|   | | | `-RecoveryExpr 0x128027860 <col:6> '<dependent type>' contains-errors lvalue
|   | | `-RecoveryExpr 0x128027900 <col:18> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x12802e2e0 <line:14:3, line:103:3>
|   |   |-IfStmt 0x128027ec8 <line:15:3, line:21:4>
|   |   | |-RecoveryExpr 0x128027c08 <line:15:7, line:17:30> '_Bool' contains-errors
|   |   | `-CompoundStmt 0x128027eb0 <line:18:4, line:21:4>
|   |   |   `-IfStmt 0x128027e90 <line:19:4, line:20:10>
|   |   |     |-UnaryOperator 0x128027e10 <line:19:8, col:32> '<dependent type>' contains-errors prefix '!' cannot overflow
|   |   |     | `-CallExpr 0x128027de0 <col:9, col:32> '<dependent type>' contains-errors
|   |   |     |   |-DeclRefExpr 0x128027d80 <col:9> 'int ()' Function 0x128027cc8 'ssl_get_new_session' 'int ()'
|   |   |     |   |-RecoveryExpr 0x128027da0 <col:29> '<dependent type>' contains-errors lvalue
|   |   |     |   `-IntegerLiteral 0x128027dc0 <col:31> 'int' 0
|   |   |     `-GotoStmt 0x128027e78 <line:20:5, col:10> 'err' 0x128027e28
|   |   |-BinaryOperator 0x128027fb8 <line:24:3, col:12> 'unsigned char *' contains-errors '='
|   |   | |-DeclRefExpr 0x128027ee8 <col:3> 'unsigned char *' lvalue Var 0x12800df90 'p' 'unsigned char *'
|   |   | `-CXXDependentScopeMemberExpr 0x128027f70 <col:5, col:12> '<dependent type>' contains-errors lvalue ->client_random
|   |   |   `-CXXDependentScopeMemberExpr 0x128027f28 <col:5, col:8> '<dependent type>' contains-errors lvalue ->s3
|   |   |     `-RecoveryExpr 0x128027f08 <col:5> '<dependent type>' contains-errors lvalue
|   |   |-CallExpr 0x1280282d8 <line:26:3, col:13> 'int'
|   |   | |-ImplicitCastExpr 0x1280282c0 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x128028230 <col:3> 'int ()' Function 0x128028178 'l2n' 'int ()'
|   |   | |-ImplicitCastExpr 0x128028308 <col:7> 'unsigned long' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x128028250 <col:7> 'unsigned long' lvalue Var 0x12800e158 'Time' 'unsigned long'
|   |   | `-ImplicitCastExpr 0x128028320 <col:12> 'unsigned char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x128028270 <col:12> 'unsigned char *' lvalue Var 0x12800df90 'p' 'unsigned char *'
|   |   |-IfStmt 0x1280285c8 <line:27:3, line:28:9>
|   |   | |-BinaryOperator 0x128028590 <line:27:7, col:50> 'int' contains-errors '<='
|   |   | | |-CallExpr 0x128028560 <col:7, col:45> '<dependent type>' contains-errors
|   |   | | | |-DeclRefExpr 0x128028418 <col:7> 'int ()' Function 0x128028360 'RAND_pseudo_bytes' 'int ()'
|   |   | | | |-DeclRefExpr 0x128028438 <col:25> 'unsigned char *' lvalue Var 0x12800df90 'p' 'unsigned char *'
|   |   | | | `-BinaryOperator 0x128028540 <col:27, col:44> '<dependent type>' contains-errors '-'
|   |   | | |   |-RecoveryExpr 0x128028520 <col:27> '<dependent type>' contains-errors lvalue
|   |   | | |   `-IntegerLiteral 0x128028470 <col:44> 'int' 4
|   |   | | `-IntegerLiteral 0x1280284e0 <col:50> 'int' 0
|   |   | `-GotoStmt 0x1280285b0 <line:28:4, col:9> 'err' 0x128027e28
|   |   |-BinaryOperator 0x1280286f8 <line:31:3, col:16> 'unsigned char *' '='
|   |   | |-DeclRefExpr 0x1280285e8 <col:3> 'unsigned char *' lvalue Var 0x12800e010 'd' 'unsigned char *'
|   |   | `-BinaryOperator 0x1280286d8 <col:5, col:16> 'unsigned char *' '='
|   |   |   |-DeclRefExpr 0x128028608 <col:5> 'unsigned char *' lvalue Var 0x12800df90 'p' 'unsigned char *'
|   |   |   `-UnaryOperator 0x1280286c0 <col:8, col:16> 'unsigned char *' prefix '&' cannot overflow
|   |   |     `-ParenExpr 0x1280286a0 <col:9, col:16> 'unsigned char' lvalue
|   |   |       `-ArraySubscriptExpr 0x128028680 <col:10, col:15> 'unsigned char' lvalue
|   |   |         |-ImplicitCastExpr 0x128028668 <col:10> 'unsigned char *' <LValueToRValue>
|   |   |         | `-DeclRefExpr 0x128028628 <col:10> 'unsigned char *' lvalue Var 0x12800def8 'buf' 'unsigned char *'
|   |   |         `-IntegerLiteral 0x128028648 <col:14> 'int' 4
|   |   |-BinaryOperator 0x128029c40 <line:33:3, col:22> 'unsigned char' contains-errors '='
|   |   | |-UnaryOperator 0x128028770 <col:3, col:8> 'unsigned char' lvalue prefix '*' cannot overflow
|   |   | | `-ParenExpr 0x128028750 <col:4, col:8> 'unsigned char *'
|   |   | |   `-UnaryOperator 0x128028738 <col:5, col:6> 'unsigned char *' postfix '++'
|   |   | |     `-DeclRefExpr 0x128028718 <col:5> 'unsigned char *' lvalue Var 0x12800df90 'p' 'unsigned char *'
|   |   | `-BinaryOperator 0x128029c20 <col:10, col:22> '<dependent type>' contains-errors '>>'
|   |   |   |-CXXDependentScopeMemberExpr 0x1280287a8 <col:10, col:13> '<dependent type>' contains-errors lvalue ->version
|   |   |   | `-RecoveryExpr 0x128028788 <col:10> '<dependent type>' contains-errors lvalue
|   |   |   `-IntegerLiteral 0x128029c00 <col:22> 'int' 8
|   |   |-BinaryOperator 0x128029d78 <line:34:3, col:21> 'unsigned char' contains-errors '='
|   |   | |-UnaryOperator 0x128029cb8 <col:3, col:8> 'unsigned char' lvalue prefix '*' cannot overflow
|   |   | | `-ParenExpr 0x128029c98 <col:4, col:8> 'unsigned char *'
|   |   | |   `-UnaryOperator 0x128029c80 <col:5, col:6> 'unsigned char *' postfix '++'
|   |   | |     `-DeclRefExpr 0x128029c60 <col:5> 'unsigned char *' lvalue Var 0x12800df90 'p' 'unsigned char *'
|   |   | `-BinaryOperator 0x128029d58 <col:10, col:21> '<dependent type>' contains-errors '&'
|   |   |   |-CXXDependentScopeMemberExpr 0x128029cf0 <col:10, col:13> '<dependent type>' contains-errors lvalue ->version
|   |   |   | `-RecoveryExpr 0x128029cd0 <col:10> '<dependent type>' contains-errors lvalue
|   |   |   `-IntegerLiteral 0x128029d38 <col:21> 'int' 255
|   |   |-BinaryOperator 0x128029e90 <line:35:3, col:24> '<dependent type>' contains-errors '='
|   |   | |-CXXDependentScopeMemberExpr 0x128029de0 <col:3, col:6> '<dependent type>' contains-errors lvalue ->client_version
|   |   | | `-RecoveryExpr 0x128029db8 <col:3> '<dependent type>' contains-errors lvalue
|   |   | |   `-DeclRefExpr 0x128029d98 <col:3> 'int *' lvalue ParmVar 0x12800dd28 's' 'int *'
|   |   | `-CXXDependentScopeMemberExpr 0x128029e48 <col:21, col:24> '<dependent type>' contains-errors lvalue ->version
|   |   |   `-RecoveryExpr 0x128029e28 <col:21> '<dependent type>' contains-errors lvalue
|   |   |-CallExpr 0x12802a790 <line:38:3, col:49> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x12802a5a0 <col:3> 'void *(void *, const void *, unsigned long)' Function 0x12802a350 'memcpy' 'void *(void *, const void *, unsigned long)'
|   |   | |-DeclRefExpr 0x12802a5c0 <col:10> 'unsigned char *' lvalue Var 0x12800df90 'p' 'unsigned char *'
|   |   | |-CXXDependentScopeMemberExpr 0x12802a648 <col:12, col:19> '<dependent type>' contains-errors lvalue ->client_random
|   |   | | `-CXXDependentScopeMemberExpr 0x12802a600 <col:12, col:15> '<dependent type>' contains-errors lvalue ->s3
|   |   | |   `-RecoveryExpr 0x12802a5e0 <col:12> '<dependent type>' contains-errors lvalue
|   |   | `-RecoveryExpr 0x12802a728 <col:33> '<dependent type>' contains-errors lvalue
|   |   |-CompoundAssignOperator 0x12802a850 <line:39:3, col:6> 'unsigned char *' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |   | |-DeclRefExpr 0x12802a7c8 <col:3> 'unsigned char *' lvalue Var 0x12800df90 'p' 'unsigned char *'
|   |   | `-RecoveryExpr 0x12802a830 <col:6> '<dependent type>' contains-errors lvalue
|   |   |-IfStmt 0x12802aa38 <line:42:3, line:45:18> has_else
|   |   | |-CXXDependentScopeMemberExpr 0x12802a8a0 <line:42:7, col:10> '<dependent type>' contains-errors lvalue ->new_session
|   |   | | `-RecoveryExpr 0x12802a880 <col:7> '<dependent type>' contains-errors lvalue
|   |   | |-BinaryOperator 0x12802a928 <line:43:4, col:6> 'int' '='
|   |   | | |-DeclRefExpr 0x12802a8e8 <col:4> 'int' lvalue Var 0x12800e0c0 'i' 'int'
|   |   | | `-IntegerLiteral 0x12802a908 <col:6> 'int' 0
|   |   | `-BinaryOperator 0x12802aa18 <line:45:4, col:18> 'int' contains-errors '='
|   |   |   |-DeclRefExpr 0x12802a948 <col:4> 'int' lvalue Var 0x12800e0c0 'i' 'int'
|   |   |   `-CXXDependentScopeMemberExpr 0x12802a9d0 <col:6, col:18> '<dependent type>' contains-errors lvalue ->session_id_length
|   |   |     `-CXXDependentScopeMemberExpr 0x12802a988 <col:6, col:9> '<dependent type>' contains-errors lvalue ->session
|   |   |       `-RecoveryExpr 0x12802a968 <col:6> '<dependent type>' contains-errors lvalue
|   |   |-BinaryOperator 0x12802ab28 <line:46:3, col:10> 'unsigned char' '='
|   |   | |-UnaryOperator 0x12802aac0 <col:3, col:8> 'unsigned char' lvalue prefix '*' cannot overflow
|   |   | | `-ParenExpr 0x12802aaa0 <col:4, col:8> 'unsigned char *'
|   |   | |   `-UnaryOperator 0x12802aa88 <col:5, col:6> 'unsigned char *' postfix '++'
|   |   | |     `-DeclRefExpr 0x12802aa68 <col:5> 'unsigned char *' lvalue Var 0x12800df90 'p' 'unsigned char *'
|   |   | `-ImplicitCastExpr 0x12802ab10 <col:10> 'unsigned char' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x12802aaf8 <col:10> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x12802aad8 <col:10> 'int' lvalue Var 0x12800e0c0 'i' 'int'
|   |   |-IfStmt 0x12802bfb0 <line:47:3, line:56:4>
|   |   | |-BinaryOperator 0x12802aba0 <line:47:7, col:12> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x12802ab88 <col:7> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x12802ab48 <col:7> 'int' lvalue Var 0x12800e0c0 'i' 'int'
|   |   | | `-IntegerLiteral 0x12802ab68 <col:12> 'int' 0
|   |   | `-CompoundStmt 0x12802bf88 <line:48:4, line:56:4>
|   |   |   |-IfStmt 0x12802bd50 <line:49:4, line:53:5>
|   |   |   | |-BinaryOperator 0x12802bb28 <line:49:8, col:46> 'int' contains-errors '>'
|   |   |   | | |-ImplicitCastExpr 0x12802bb10 <col:8> 'int' <LValueToRValue>
|   |   |   | | | `-DeclRefExpr 0x12802abc0 <col:8> 'int' lvalue Var 0x12800e0c0 'i' 'int'
|   |   |   | | `-CStyleCastExpr 0x12802bae8 <col:12, col:46> 'int' contains-errors <Dependent>
|   |   |   | |   `-UnaryExprOrTypeTraitExpr 0x12802bab0 <col:17, col:46> 'unsigned long' contains-errors sizeof
|   |   |   | |     `-ParenExpr 0x12802ba90 <col:23, col:46> '<dependent type>' contains-errors lvalue
|   |   |   | |       `-CXXDependentScopeMemberExpr 0x12802ba48 <col:24, col:36> '<dependent type>' contains-errors lvalue ->session_id
|   |   |   | |         `-CXXDependentScopeMemberExpr 0x12802ba00 <col:24, col:27> '<dependent type>' contains-errors lvalue ->session
|   |   |   | |           `-RecoveryExpr 0x12802abe0 <col:24> '<dependent type>' contains-errors lvalue
|   |   |   | `-CompoundStmt 0x12802bd30 <line:50:5, line:53:5>
|   |   |   |   |-CallExpr 0x12802bce8 <line:51:5, col:57> '<dependent type>' contains-errors
|   |   |   |   | |-DeclRefExpr 0x12802bc28 <col:5> 'int ()' Function 0x12802bb70 'SSLerr' 'int ()'
|   |   |   |   | |-RecoveryExpr 0x12802bca8 <col:12> '<dependent type>' contains-errors lvalue
|   |   |   |   | `-RecoveryExpr 0x12802bcc8 <col:37> '<dependent type>' contains-errors lvalue
|   |   |   |   `-GotoStmt 0x12802bd18 <line:52:5, col:10> 'err' 0x128027e28
|   |   |   |-CallExpr 0x12802bec8 <line:54:4, col:37> '<dependent type>' contains-errors
|   |   |   | |-DeclRefExpr 0x12802bd70 <col:4> 'void *(void *, const void *, unsigned long)' Function 0x12802a350 'memcpy' 'void *(void *, const void *, unsigned long)'
|   |   |   | |-DeclRefExpr 0x12802bd90 <col:11> 'unsigned char *' lvalue Var 0x12800df90 'p' 'unsigned char *'
|   |   |   | |-CXXDependentScopeMemberExpr 0x12802be18 <col:13, col:25> '<dependent type>' contains-errors lvalue ->session_id
|   |   |   | | `-CXXDependentScopeMemberExpr 0x12802bdd0 <col:13, col:16> '<dependent type>' contains-errors lvalue ->session
|   |   |   | |   `-RecoveryExpr 0x12802bdb0 <col:13> '<dependent type>' contains-errors lvalue
|   |   |   | `-DeclRefExpr 0x12802be60 <col:36> 'int' lvalue Var 0x12800e0c0 'i' 'int'
|   |   |   `-CompoundAssignOperator 0x12802bf58 <line:55:4, col:7> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   |   |     |-DeclRefExpr 0x12802bf00 <col:4> 'unsigned char *' lvalue Var 0x12800df90 'p' 'unsigned char *'
|   |   |     `-ImplicitCastExpr 0x12802bf40 <col:7> 'int' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x12802bf20 <col:7> 'int' lvalue Var 0x12800e0c0 'i' 'int'
|   |   |-BinaryOperator 0x12802c368 <line:59:3, col:60> 'int' contains-errors '='
|   |   | |-DeclRefExpr 0x12802bfd0 <col:3> 'int' lvalue Var 0x12800e0c0 'i' 'int'
|   |   | `-CallExpr 0x12802c328 <col:5, col:60> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x12802c0d0 <col:5> 'int ()' Function 0x12802c018 'ssl_cipher_list_to_bytes' 'int ()'
|   |   |   |-RecoveryExpr 0x12802c0f0 <col:30> '<dependent type>' contains-errors lvalue
|   |   |   |-CallExpr 0x12802c230 <col:32, col:49> '<dependent type>' contains-errors
|   |   |   | |-DeclRefExpr 0x12802c1f0 <col:32> 'int ()' Function 0x12802c138 'SSL_get_ciphers' 'int ()'
|   |   |   | `-RecoveryExpr 0x12802c210 <col:48> '<dependent type>' contains-errors lvalue
|   |   |   |-UnaryOperator 0x12802c2f0 <col:51, col:57> 'unsigned char *' prefix '&' cannot overflow
|   |   |   | `-ParenExpr 0x12802c2d0 <col:52, col:57> 'unsigned char' lvalue
|   |   |   |   `-ArraySubscriptExpr 0x12802c2b0 <col:53, col:56> 'unsigned char' lvalue
|   |   |   |     |-ImplicitCastExpr 0x12802c298 <col:53> 'unsigned char *' <LValueToRValue>
|   |   |   |     | `-DeclRefExpr 0x12802c258 <col:53> 'unsigned char *' lvalue Var 0x12800df90 'p' 'unsigned char *'
|   |   |   |     `-IntegerLiteral 0x12802c278 <col:55> 'int' 2
|   |   |   `-IntegerLiteral 0x12802c308 <col:59> 'int' 0
|   |   |-IfStmt 0x12802c450 <line:60:3, line:64:4>
|   |   | |-BinaryOperator 0x12802c3e0 <line:60:7, col:12> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x12802c3c8 <col:7> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x12802c388 <col:7> 'int' lvalue Var 0x12800e0c0 'i' 'int'
|   |   | | `-IntegerLiteral 0x12802c3a8 <col:12> 'int' 0
|   |   | `-CompoundStmt 0x12802c438 <line:61:4, line:64:4>
|   |   |   `-GotoStmt 0x12802c420 <line:63:4, col:9> 'err' 0x128027e28
|   |   |-CallExpr 0x12802c5c8 <line:65:3, col:10> 'int'
|   |   | |-ImplicitCastExpr 0x12802c5b0 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x12802c550 <col:3> 'int ()' Function 0x12802c498 's2n' 'int ()'
|   |   | |-ImplicitCastExpr 0x12802c5f8 <col:7> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x12802c570 <col:7> 'int' lvalue Var 0x12800e0c0 'i' 'int'
|   |   | `-ImplicitCastExpr 0x12802c610 <col:9> 'unsigned char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x12802c590 <col:9> 'unsigned char *' lvalue Var 0x12800df90 'p' 'unsigned char *'
|   |   |-CompoundAssignOperator 0x12802c680 <line:66:3, col:6> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   |   | |-DeclRefExpr 0x12802c628 <col:3> 'unsigned char *' lvalue Var 0x12800df90 'p' 'unsigned char *'
|   |   | `-ImplicitCastExpr 0x12802c668 <col:6> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x12802c648 <col:6> 'int' lvalue Var 0x12800e0c0 'i' 'int'
|   |   |-IfStmt 0x12802d490 <line:73:3, line:77:42> has_else
|   |   | |-RecoveryExpr 0x12802c7f8 <line:73:7, line:74:18> '_Bool' contains-errors
|   |   | |-BinaryOperator 0x12802c858 <line:75:4, col:6> 'int' '='
|   |   | | |-DeclRefExpr 0x12802c818 <col:4> 'int' lvalue Var 0x12800e288 'j' 'int'
|   |   | | `-IntegerLiteral 0x12802c838 <col:6> 'int' 0
|   |   | `-BinaryOperator 0x12802d470 <line:77:4, col:42> 'int' contains-errors '='
|   |   |   |-DeclRefExpr 0x12802c878 <col:4> 'int' lvalue Var 0x12800e288 'j' 'int'
|   |   |   `-CallExpr 0x12802d448 <col:6, col:42> '<dependent type>' contains-errors
|   |   |     |-DeclRefExpr 0x12802c978 <col:6> 'int ()' Function 0x12802c8c0 'sk_SSL_COMP_num' 'int ()'
|   |   |     `-CXXDependentScopeMemberExpr 0x12802d400 <col:22, col:30> '<dependent type>' contains-errors lvalue ->comp_methods
|   |   |       `-CXXDependentScopeMemberExpr 0x12802c9b8 <col:22, col:25> '<dependent type>' contains-errors lvalue ->ctx
|   |   |         `-RecoveryExpr 0x12802c998 <col:22> '<dependent type>' contains-errors lvalue
|   |   |-BinaryOperator 0x12802d5c0 <line:78:3, col:12> 'unsigned char' '='
|   |   | |-UnaryOperator 0x12802d518 <col:3, col:8> 'unsigned char' lvalue prefix '*' cannot overflow
|   |   | | `-ParenExpr 0x12802d4f8 <col:4, col:8> 'unsigned char *'
|   |   | |   `-UnaryOperator 0x12802d4e0 <col:5, col:6> 'unsigned char *' postfix '++'
|   |   | |     `-DeclRefExpr 0x12802d4c0 <col:5> 'unsigned char *' lvalue Var 0x12800df90 'p' 'unsigned char *'
|   |   | `-ImplicitCastExpr 0x12802d5a8 <col:10, col:12> 'unsigned char' <IntegralCast>
|   |   |   `-BinaryOperator 0x12802d588 <col:10, col:12> 'int' '+'
|   |   |     |-IntegerLiteral 0x12802d530 <col:10> 'int' 1
|   |   |     `-ImplicitCastExpr 0x12802d570 <col:12> 'int' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x12802d550 <col:12> 'int' lvalue Var 0x12800e288 'j' 'int'
|   |   |-ForStmt 0x12802d988 <line:79:3, line:83:4>
|   |   | |-BinaryOperator 0x12802d620 <line:79:8, col:10> 'int' '='
|   |   | | |-DeclRefExpr 0x12802d5e0 <col:8> 'int' lvalue Var 0x12800e0c0 'i' 'int'
|   |   | | `-IntegerLiteral 0x12802d600 <col:10> 'int' 0
|   |   | |-<<<NULL>>>
|   |   | |-BinaryOperator 0x12802d6b0 <col:13, col:15> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x12802d680 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x12802d640 <col:13> 'int' lvalue Var 0x12800e0c0 'i' 'int'
|   |   | | `-ImplicitCastExpr 0x12802d698 <col:15> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x12802d660 <col:15> 'int' lvalue Var 0x12800e288 'j' 'int'
|   |   | |-UnaryOperator 0x12802d6f0 <col:18, col:19> 'int' postfix '++'
|   |   | | `-DeclRefExpr 0x12802d6d0 <col:18> 'int' lvalue Var 0x12800e0c0 'i' 'int'
|   |   | `-CompoundStmt 0x12802d978 <line:80:4, line:83:4>
|   |   |-BinaryOperator 0x12802da68 <line:85:3, col:10> 'unsigned char' '='
|   |   | |-UnaryOperator 0x12802da18 <col:3, col:8> 'unsigned char' lvalue prefix '*' cannot overflow
|   |   | | `-ParenExpr 0x12802d9f8 <col:4, col:8> 'unsigned char *'
|   |   | |   `-UnaryOperator 0x12802d9e0 <col:5, col:6> 'unsigned char *' postfix '++'
|   |   | |     `-DeclRefExpr 0x12802d9c0 <col:5> 'unsigned char *' lvalue Var 0x12800df90 'p' 'unsigned char *'
|   |   | `-ImplicitCastExpr 0x12802da50 <col:10> 'unsigned char' <IntegralCast>
|   |   |   `-IntegerLiteral 0x12802da30 <col:10> 'int' 0
|   |   |-IfStmt 0x12802dc78 <line:87:3, line:91:4>
|   |   | |-RecoveryExpr 0x12802dc08 <line:87:7, col:79> '_Bool' contains-errors
|   |   | `-CompoundStmt 0x12802dc60 <line:88:4, line:91:4>
|   |   |   `-GotoStmt 0x12802dc48 <line:90:4, col:9> 'err' 0x128027e28
|   |   |-BinaryOperator 0x12802dd80 <line:94:3, col:9> 'unsigned long' '='
|   |   | |-DeclRefExpr 0x12802dc98 <col:3> 'unsigned long' lvalue Var 0x12800e1d8 'l' 'unsigned long'
|   |   | `-ImplicitCastExpr 0x12802dd68 <col:5, col:9> 'unsigned long' <IntegralCast>
|   |   |   `-ParenExpr 0x12802dd48 <col:5, col:9> 'long'
|   |   |     `-BinaryOperator 0x12802dd28 <col:6, col:8> 'long' '-'
|   |   |       |-ImplicitCastExpr 0x12802dcf8 <col:6> 'unsigned char *' <LValueToRValue>
|   |   |       | `-DeclRefExpr 0x12802dcb8 <col:6> 'unsigned char *' lvalue Var 0x12800df90 'p' 'unsigned char *'
|   |   |       `-ImplicitCastExpr 0x12802dd10 <col:8> 'unsigned char *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x12802dcd8 <col:8> 'unsigned char *' lvalue Var 0x12800e010 'd' 'unsigned char *'
|   |   |-BinaryOperator 0x12802ddf8 <line:95:3, col:5> 'unsigned char *' '='
|   |   | |-DeclRefExpr 0x12802dda0 <col:3> 'unsigned char *' lvalue Var 0x12800e010 'd' 'unsigned char *'
|   |   | `-ImplicitCastExpr 0x12802dde0 <col:5> 'unsigned char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x12802ddc0 <col:5> 'unsigned char *' lvalue Var 0x12800def8 'buf' 'unsigned char *'
|   |   |-CallExpr 0x12802dfe0 <line:97:3, col:11> 'int'
|   |   | |-ImplicitCastExpr 0x12802dfc8 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x12802df68 <col:3> 'int ()' Function 0x12802deb0 'l2n3' 'int ()'
|   |   | |-ImplicitCastExpr 0x12802e010 <col:8> 'unsigned long' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x12802df88 <col:8> 'unsigned long' lvalue Var 0x12800e1d8 'l' 'unsigned long'
|   |   | `-ImplicitCastExpr 0x12802e028 <col:10> 'unsigned char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x12802dfa8 <col:10> 'unsigned char *' lvalue Var 0x12800e010 'd' 'unsigned char *'
|   |   |-BinaryOperator 0x12802e1f0 <line:101:3, col:17> '<dependent type>' contains-errors '='
|   |   | |-CXXDependentScopeMemberExpr 0x12802e118 <col:3, col:6> '<dependent type>' contains-errors lvalue ->init_num
|   |   | | `-RecoveryExpr 0x12802e0f0 <col:3> '<dependent type>' contains-errors lvalue
|   |   | |   `-DeclRefExpr 0x12802e0d0 <col:3> 'int *' lvalue ParmVar 0x12800dd28 's' 'int *'
|   |   | `-BinaryOperator 0x12802e1d0 <col:15, col:17> 'long' '-'
|   |   |   |-ImplicitCastExpr 0x12802e1a0 <col:15> 'unsigned char *' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x12802e160 <col:15> 'unsigned char *' lvalue Var 0x12800df90 'p' 'unsigned char *'
|   |   |   `-ImplicitCastExpr 0x12802e1b8 <col:17> 'unsigned char *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x12802e180 <col:17> 'unsigned char *' lvalue Var 0x12800def8 'buf' 'unsigned char *'
|   |   `-BinaryOperator 0x12802e2c0 <line:102:3, col:15> '<dependent type>' contains-errors '='
|   |     |-CXXDependentScopeMemberExpr 0x12802e258 <col:3, col:6> '<dependent type>' contains-errors lvalue ->init_off
|   |     | `-RecoveryExpr 0x12802e230 <col:3> '<dependent type>' contains-errors lvalue
|   |     |   `-DeclRefExpr 0x12802e210 <col:3> 'int *' lvalue ParmVar 0x12800dd28 's' 'int *'
|   |     `-IntegerLiteral 0x12802e2a0 <col:15> 'int' 0
|   `-LabelStmt 0x12802e588 <line:107:1, line:108:11> 'err'
|     `-ReturnStmt 0x12802e578 <col:2, col:11>
|       `-ParenExpr 0x12802e558 <col:8, col:11> 'int'
|         `-UnaryOperator 0x12802e540 <col:9, col:10> 'int' prefix '-'
|           `-IntegerLiteral 0x12802e520 <col:10> 'int' 1
`-FunctionDecl 0x12802a350 <line:38:3> col:3 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x12802a450 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x12802a4b8 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x12802a520 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x12802a3f8 <<invalid sloc>> Implicit 882
