TranslationUnitDecl 0x13784d808 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13784e6b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13784ddd0 '__int128'
|-TypedefDecl 0x13784e728 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13784ddf0 'unsigned __int128'
|-TypedefDecl 0x137016430 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x137016200 'struct __NSConstantString_tag'
|   `-Record 0x13784e780 '__NSConstantString_tag'
|-TypedefDecl 0x137016498 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13784df90 '__SVInt8_t'
|-TypedefDecl 0x137016500 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13784dfb0 '__SVInt16_t'
|-TypedefDecl 0x137016568 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13784dfd0 '__SVInt32_t'
|-TypedefDecl 0x1370165d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13784dff0 '__SVInt64_t'
|-TypedefDecl 0x137016638 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13784e010 '__SVUint8_t'
|-TypedefDecl 0x1370166a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13784e030 '__SVUint16_t'
|-TypedefDecl 0x137016708 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13784e050 '__SVUint32_t'
|-TypedefDecl 0x137016770 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13784e070 '__SVUint64_t'
|-TypedefDecl 0x1370167d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13784e090 '__SVFloat16_t'
|-TypedefDecl 0x137016840 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13784e0b0 '__SVFloat32_t'
|-TypedefDecl 0x1370168a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13784e0d0 '__SVFloat64_t'
|-TypedefDecl 0x137016910 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13784e0f0 '__SVBfloat16_t'
|-TypedefDecl 0x137016978 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13784e110 '__clang_svint8x2_t'
|-TypedefDecl 0x1370169e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13784e130 '__clang_svint16x2_t'
|-TypedefDecl 0x137016a48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13784e150 '__clang_svint32x2_t'
|-TypedefDecl 0x137016ab0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13784e170 '__clang_svint64x2_t'
|-TypedefDecl 0x137016b18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13784e190 '__clang_svuint8x2_t'
|-TypedefDecl 0x137016b80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13784e1b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x137016be8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13784e1d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x137016c50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13784e1f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x137016cb8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13784e210 '__clang_svfloat16x2_t'
|-TypedefDecl 0x137016d20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13784e230 '__clang_svfloat32x2_t'
|-TypedefDecl 0x137016d88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13784e250 '__clang_svfloat64x2_t'
|-TypedefDecl 0x137016df0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13784e270 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x137016e58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13784e290 '__clang_svint8x3_t'
|-TypedefDecl 0x137016ec0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13784e2b0 '__clang_svint16x3_t'
|-TypedefDecl 0x137016f28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13784e2d0 '__clang_svint32x3_t'
|-TypedefDecl 0x137016f90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13784e2f0 '__clang_svint64x3_t'
|-TypedefDecl 0x137016ff8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13784e310 '__clang_svuint8x3_t'
|-TypedefDecl 0x137017060 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13784e330 '__clang_svuint16x3_t'
|-TypedefDecl 0x1370170c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13784e350 '__clang_svuint32x3_t'
|-TypedefDecl 0x137017130 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13784e370 '__clang_svuint64x3_t'
|-TypedefDecl 0x137017198 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13784e390 '__clang_svfloat16x3_t'
|-TypedefDecl 0x137017200 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13784e3b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x137017268 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13784e3d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1370172d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13784e3f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x137017338 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13784e410 '__clang_svint8x4_t'
|-TypedefDecl 0x1370173a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13784e430 '__clang_svint16x4_t'
|-TypedefDecl 0x137017408 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13784e450 '__clang_svint32x4_t'
|-TypedefDecl 0x137017470 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13784e470 '__clang_svint64x4_t'
|-TypedefDecl 0x1370174d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13784e490 '__clang_svuint8x4_t'
|-TypedefDecl 0x137017540 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13784e4b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1370175a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13784e4d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x137017610 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13784e4f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x137017678 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13784e510 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1370176e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13784e530 '__clang_svfloat32x4_t'
|-TypedefDecl 0x137017748 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13784e550 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1370177b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13784e570 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x137017818 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13784e590 '__SVBool_t'
|-TypedefDecl 0x137017880 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13784e5b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1370178e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13784e5d0 '__clang_svboolx4_t'
|-TypedefDecl 0x137017950 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13784e5f0 '__SVCount_t'
|-TypedefDecl 0x1370179f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1370179b0 'char *'
|   `-BuiltinType 0x13784d8b0 'char'
|-TypedefDecl 0x137017a68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1370179b0 'char *'
|   `-BuiltinType 0x13784d8b0 'char'
|-FunctionDecl 0x137017d40 <dataset_diviso_filec/func14514_vuln.c:1:1, line:67:1> line:1:13 invalid ssl_check_for_safari 'void (int *, const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x137017b28 <col:34, col:39> col:39 referenced invalid s 'int *'
| |-ParmVarDecl 0x137017bd8 <col:42, col:63> col:63 used data 'const unsigned char *'
| |-ParmVarDecl 0x137017c58 <line:2:34, col:55> col:55 used limit 'const unsigned char *'
| `-CompoundStmt 0x137032738 <line:3:1, line:67:1>
|   |-DeclStmt 0x137017f18 <line:4:5, col:30>
|   | |-VarDecl 0x137017e18 <col:5, col:20> col:20 used type 'unsigned short'
|   | `-VarDecl 0x137017e98 <col:5, col:26> col:26 used size 'unsigned short'
|   |-DeclStmt 0x13702f5b0 <line:5:5, line:17:6>
|   | `-VarDecl 0x137017fb8 <line:5:5, line:17:5> line:5:32 used kSafariExtensionsBlock 'const unsigned char[18]' static cinit
|   |   `-InitListExpr 0x13702f140 <col:59, line:17:5> 'const unsigned char[18]'
|   |     |-ImplicitCastExpr 0x13702f180 <line:6:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x137018020 <col:9> 'int' 0
|   |     |-ImplicitCastExpr 0x13702f1a0 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x137018040 <col:15> 'int' 10
|   |     |-ImplicitCastExpr 0x13702f1c8 <line:7:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x137018060 <col:9> 'int' 0
|   |     |-ImplicitCastExpr 0x13702f200 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x137018080 <col:15> 'int' 8
|   |     |-ImplicitCastExpr 0x13702f218 <line:8:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1370180a0 <col:9> 'int' 0
|   |     |-ImplicitCastExpr 0x13702f270 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1370180c0 <col:15> 'int' 6
|   |     |-ImplicitCastExpr 0x13702f288 <line:9:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1370180e0 <col:9> 'int' 0
|   |     |-ImplicitCastExpr 0x13702f2a0 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x137018100 <col:15> 'int' 23
|   |     |-ImplicitCastExpr 0x13702f2b8 <line:10:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x137018120 <col:9> 'int' 0
|   |     |-ImplicitCastExpr 0x13702f350 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x137018140 <col:15> 'int' 24
|   |     |-ImplicitCastExpr 0x13702f368 <line:11:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x137018160 <col:9> 'int' 0
|   |     |-ImplicitCastExpr 0x13702f380 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x137018180 <col:15> 'int' 25
|   |     |-ImplicitCastExpr 0x13702f398 <line:13:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1370181a0 <col:9> 'int' 0
|   |     |-ImplicitCastExpr 0x13702f3b0 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1370181c0 <col:15> 'int' 11
|   |     |-ImplicitCastExpr 0x13702f3c8 <line:14:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1370181e0 <col:9> 'int' 0
|   |     |-ImplicitCastExpr 0x13702f3e0 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13702f000 <col:15> 'int' 2
|   |     |-ImplicitCastExpr 0x13702f3f8 <line:15:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13702f020 <col:9> 'int' 1
|   |     `-ImplicitCastExpr 0x13702f510 <line:16:9> 'unsigned char' <IntegralCast>
|   |       `-IntegerLiteral 0x13702f040 <col:9> 'int' 0
|   |-DeclStmt 0x13702fc60 <line:20:5, line:29:6>
|   | `-VarDecl 0x13702f5f0 <line:20:5, line:29:5> line:20:32 used kSafariTLS12ExtensionsBlock 'const unsigned char[16]' static cinit
|   |   `-InitListExpr 0x13702f928 <col:64, line:29:5> 'const unsigned char[16]'
|   |     |-ImplicitCastExpr 0x13702f968 <line:21:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13702f658 <col:9> 'int' 0
|   |     |-ImplicitCastExpr 0x13702f988 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13702f678 <col:15> 'int' 13
|   |     |-ImplicitCastExpr 0x13702f9b0 <line:22:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13702f698 <col:9> 'int' 0
|   |     |-ImplicitCastExpr 0x13702f9e8 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13702f6b8 <col:15> 'int' 12
|   |     |-ImplicitCastExpr 0x13702fa00 <line:23:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13702f6d8 <col:9> 'int' 0
|   |     |-ImplicitCastExpr 0x13702fa58 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13702f6f8 <col:15> 'int' 10
|   |     |-ImplicitCastExpr 0x13702fa70 <line:24:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13702f718 <col:9> 'int' 5
|   |     |-ImplicitCastExpr 0x13702fa88 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13702f738 <col:15> 'int' 1
|   |     |-ImplicitCastExpr 0x13702faa0 <line:25:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13702f758 <col:9> 'int' 4
|   |     |-ImplicitCastExpr 0x13702fb38 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13702f778 <col:15> 'int' 1
|   |     |-ImplicitCastExpr 0x13702fb50 <line:26:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13702f798 <col:9> 'int' 2
|   |     |-ImplicitCastExpr 0x13702fb68 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13702f7b8 <col:15> 'int' 1
|   |     |-ImplicitCastExpr 0x13702fb80 <line:27:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13702f7d8 <col:9> 'int' 4
|   |     |-ImplicitCastExpr 0x13702fb98 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13702f7f8 <col:15> 'int' 3
|   |     |-ImplicitCastExpr 0x13702fbb0 <line:28:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13702f818 <col:9> 'int' 2
|   |     `-ImplicitCastExpr 0x13702fbc8 <col:15> 'unsigned char' <IntegralCast>
|   |       `-IntegerLiteral 0x13702f838 <col:15> 'int' 3
|   |-IfStmt 0x13702fd78 <line:31:5, line:32:9>
|   | |-BinaryOperator 0x13702fd48 <line:31:9, col:27> 'int' '>='
|   | | |-ImplicitCastExpr 0x13702fd30 <col:9> 'const unsigned char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13702fc78 <col:9> 'const unsigned char *' lvalue ParmVar 0x137017bd8 'data' 'const unsigned char *'
|   | | `-ParenExpr 0x13702fd10 <col:17, col:27> 'const unsigned char *'
|   | |   `-BinaryOperator 0x13702fcf0 <col:18, col:26> 'const unsigned char *' '-'
|   | |     |-ImplicitCastExpr 0x13702fcd8 <col:18> 'const unsigned char *' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x13702fc98 <col:18> 'const unsigned char *' lvalue ParmVar 0x137017c58 'limit' 'const unsigned char *'
|   | |     `-IntegerLiteral 0x13702fcb8 <col:26> 'int' 2
|   | `-ReturnStmt 0x13702fd68 <line:32:9>
|   |-CompoundAssignOperator 0x13702fdd8 <line:33:5, col:13> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   | |-DeclRefExpr 0x13702fd98 <col:5> 'const unsigned char *' lvalue ParmVar 0x137017bd8 'data' 'const unsigned char *'
|   | `-IntegerLiteral 0x13702fdb8 <col:13> 'int' 2
|   |-IfStmt 0x13702ff08 <line:35:5, line:36:9>
|   | |-BinaryOperator 0x13702fed8 <line:35:9, col:26> 'int' '>'
|   | | |-ImplicitCastExpr 0x13702fec0 <col:9> 'const unsigned char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13702fe08 <col:9> 'const unsigned char *' lvalue ParmVar 0x137017bd8 'data' 'const unsigned char *'
|   | | `-ParenExpr 0x13702fea0 <col:16, col:26> 'const unsigned char *'
|   | |   `-BinaryOperator 0x13702fe80 <col:17, col:25> 'const unsigned char *' '-'
|   | |     |-ImplicitCastExpr 0x13702fe68 <col:17> 'const unsigned char *' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x13702fe28 <col:17> 'const unsigned char *' lvalue ParmVar 0x137017c58 'limit' 'const unsigned char *'
|   | |     `-IntegerLiteral 0x13702fe48 <col:25> 'int' 4
|   | `-ReturnStmt 0x13702fef8 <line:36:9>
|   |-CallExpr 0x137030768 <line:37:5, col:19> 'int'
|   | |-ImplicitCastExpr 0x137030750 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1370306b8 <col:5> 'int ()' Function 0x137030600 'n2s' 'int ()'
|   | |-ImplicitCastExpr 0x137030798 <col:9> 'const unsigned char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1370306d8 <col:9> 'const unsigned char *' lvalue ParmVar 0x137017bd8 'data' 'const unsigned char *'
|   | `-ImplicitCastExpr 0x1370307c8 <col:15> 'int' <IntegralCast>
|   |   `-ImplicitCastExpr 0x1370307b0 <col:15> 'unsigned short' <LValueToRValue>
|   |     `-DeclRefExpr 0x1370306f8 <col:15> 'unsigned short' lvalue Var 0x137017e18 'type' 'unsigned short'
|   |-CallExpr 0x137030858 <line:38:5, col:19> 'int'
|   | |-ImplicitCastExpr 0x137030840 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1370307e0 <col:5> 'int ()' Function 0x137030600 'n2s' 'int ()'
|   | |-ImplicitCastExpr 0x137030888 <col:9> 'const unsigned char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x137030800 <col:9> 'const unsigned char *' lvalue ParmVar 0x137017bd8 'data' 'const unsigned char *'
|   | `-ImplicitCastExpr 0x1370308b8 <col:15> 'int' <IntegralCast>
|   |   `-ImplicitCastExpr 0x1370308a0 <col:15> 'unsigned short' <LValueToRValue>
|   |     `-DeclRefExpr 0x137030820 <col:15> 'unsigned short' lvalue Var 0x137017e98 'size' 'unsigned short'
|   |-IfStmt 0x137030978 <line:40:5, line:41:9>
|   | |-BinaryOperator 0x137030948 <line:40:9, col:17> 'int' contains-errors '!='
|   | | |-DeclRefExpr 0x1370308d0 <col:9> 'unsigned short' lvalue Var 0x137017e18 'type' 'unsigned short'
|   | | `-RecoveryExpr 0x137030928 <col:17> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x137030968 <line:41:9>
|   |-IfStmt 0x137030aa8 <line:43:5, line:44:9>
|   | |-BinaryOperator 0x137030a78 <line:43:9, col:23> 'int' '>'
|   | | |-BinaryOperator 0x137030a20 <col:9, col:16> 'const unsigned char *' '+'
|   | | | |-ImplicitCastExpr 0x1370309d8 <col:9> 'const unsigned char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x137030998 <col:9> 'const unsigned char *' lvalue ParmVar 0x137017bd8 'data' 'const unsigned char *'
|   | | | `-ImplicitCastExpr 0x137030a08 <col:16> 'int' <IntegralCast>
|   | | |   `-ImplicitCastExpr 0x1370309f0 <col:16> 'unsigned short' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x1370309b8 <col:16> 'unsigned short' lvalue Var 0x137017e98 'size' 'unsigned short'
|   | | `-ImplicitCastExpr 0x137030a60 <col:23> 'const unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x137030a40 <col:23> 'const unsigned char *' lvalue ParmVar 0x137017c58 'limit' 'const unsigned char *'
|   | `-ReturnStmt 0x137030a98 <line:44:9>
|   |-CompoundAssignOperator 0x137030b38 <line:45:5, col:13> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   | |-DeclRefExpr 0x137030ac8 <col:5> 'const unsigned char *' lvalue ParmVar 0x137017bd8 'data' 'const unsigned char *'
|   | `-ImplicitCastExpr 0x137030b20 <col:13> 'int' <IntegralCast>
|   |   `-ImplicitCastExpr 0x137030b08 <col:13> 'unsigned short' <LValueToRValue>
|   |     `-DeclRefExpr 0x137030ae8 <col:13> 'unsigned short' lvalue Var 0x137017e98 'size' 'unsigned short'
|   |-IfStmt 0x1370325f0 <line:47:5, line:64:5> has_else
|   | |-BinaryOperator 0x137030d08 <line:47:9, col:39> 'int' contains-errors '>='
|   | | |-CallExpr 0x137030c88 <col:9, col:34> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x137030c48 <col:9> 'int ()' Function 0x137030b90 'TLS1_get_client_version' 'int ()'
|   | | | `-RecoveryExpr 0x137030c68 <col:33> '<dependent type>' contains-errors lvalue
|   | | `-RecoveryExpr 0x137030ce8 <col:39> '<dependent type>' contains-errors lvalue
|   | |-CompoundStmt 0x137032258 <col:55, line:57:5>
|   | | |-DeclStmt 0x137030e08 <line:48:9, col:59>
|   | | | `-VarDecl 0x137030d40 <col:9, col:22> col:22 invalid len1 'const int'
|   | | |-DeclStmt 0x137030f00 <line:49:9, col:64>
|   | | | `-VarDecl 0x137030e38 <col:9, col:22> col:22 invalid len2 'const int'
|   | | |-IfStmt 0x137031008 <line:51:9, line:52:13>
|   | | | |-BinaryOperator 0x137030fd8 <line:51:13, col:35> 'int' contains-errors '!='
|   | | | | |-BinaryOperator 0x137030f98 <col:13, col:27> '<dependent type>' contains-errors '+'
|   | | | | | |-BinaryOperator 0x137030f58 <col:13, col:20> '<dependent type>' contains-errors '+'
|   | | | | | | |-DeclRefExpr 0x137030f18 <col:13> 'const unsigned char *' lvalue ParmVar 0x137017bd8 'data' 'const unsigned char *'
|   | | | | | | `-RecoveryExpr 0x137030f38 <col:20> '<dependent type>' contains-errors lvalue
|   | | | | | `-RecoveryExpr 0x137030f78 <col:27> '<dependent type>' contains-errors lvalue
|   | | | | `-DeclRefExpr 0x137030fb8 <col:35> 'const unsigned char *' lvalue ParmVar 0x137017c58 'limit' 'const unsigned char *'
|   | | | `-ReturnStmt 0x137030ff8 <line:52:13>
|   | | |-IfStmt 0x1370320a0 <line:53:9, line:54:13>
|   | | | |-BinaryOperator 0x137032070 <line:53:13, col:59> 'int' contains-errors '!='
|   | | | | |-CallExpr 0x137032018 <col:13, col:54> '<dependent type>' contains-errors
|   | | | | | |-DeclRefExpr 0x137031f50 <col:13> 'int (const void *, const void *, unsigned long)' Function 0x1370314d0 'memcmp' 'int (const void *, const void *, unsigned long)'
|   | | | | | |-DeclRefExpr 0x137031f70 <col:20> 'const unsigned char *' lvalue ParmVar 0x137017bd8 'data' 'const unsigned char *'
|   | | | | | |-DeclRefExpr 0x137031f90 <col:26> 'const unsigned char[18]' lvalue Var 0x137017fb8 'kSafariExtensionsBlock' 'const unsigned char[18]'
|   | | | | | `-RecoveryExpr 0x137031fb0 <col:50> '<dependent type>' contains-errors lvalue
|   | | | | `-IntegerLiteral 0x137032050 <col:59> 'int' 0
|   | | | `-ReturnStmt 0x137032090 <line:54:13>
|   | | `-IfStmt 0x137032238 <line:55:9, line:56:13>
|   | |   |-BinaryOperator 0x137032208 <line:55:13, col:71> 'int' contains-errors '!='
|   | |   | |-CallExpr 0x1370321b0 <col:13, col:66> '<dependent type>' contains-errors
|   | |   | | |-DeclRefExpr 0x1370320c0 <col:13> 'int (const void *, const void *, unsigned long)' Function 0x1370314d0 'memcmp' 'int (const void *, const void *, unsigned long)'
|   | |   | | |-BinaryOperator 0x137032120 <col:20, col:27> '<dependent type>' contains-errors '+'
|   | |   | | | |-DeclRefExpr 0x1370320e0 <col:20> 'const unsigned char *' lvalue ParmVar 0x137017bd8 'data' 'const unsigned char *'
|   | |   | | | `-RecoveryExpr 0x137032100 <col:27> '<dependent type>' contains-errors lvalue
|   | |   | | |-DeclRefExpr 0x137032140 <col:33> 'const unsigned char[16]' lvalue Var 0x13702f5f0 'kSafariTLS12ExtensionsBlock' 'const unsigned char[16]'
|   | |   | | `-RecoveryExpr 0x137032160 <col:62> '<dependent type>' contains-errors lvalue
|   | |   | `-IntegerLiteral 0x1370321e8 <col:71> 'int' 0
|   | |   `-ReturnStmt 0x137032228 <line:56:13>
|   | `-CompoundStmt 0x1370325c8 <line:57:12, line:64:5>
|   |   |-DeclStmt 0x137032370 <line:58:9, col:58>
|   |   | `-VarDecl 0x1370322a8 <col:9, col:22> col:22 invalid len 'const int'
|   |   |-IfStmt 0x137032438 <line:60:9, line:61:13>
|   |   | |-BinaryOperator 0x137032408 <line:60:13, col:27> 'int' contains-errors '!='
|   |   | | |-BinaryOperator 0x1370323c8 <col:13, col:20> '<dependent type>' contains-errors '+'
|   |   | | | |-DeclRefExpr 0x137032388 <col:13> 'const unsigned char *' lvalue ParmVar 0x137017bd8 'data' 'const unsigned char *'
|   |   | | | `-RecoveryExpr 0x1370323a8 <col:20> '<dependent type>' contains-errors lvalue
|   |   | | `-DeclRefExpr 0x1370323e8 <col:27> 'const unsigned char *' lvalue ParmVar 0x137017c58 'limit' 'const unsigned char *'
|   |   | `-ReturnStmt 0x137032428 <line:61:13>
|   |   `-IfStmt 0x1370325a8 <line:62:9, line:63:13>
|   |     |-BinaryOperator 0x137032578 <line:62:13, col:58> 'int' contains-errors '!='
|   |     | |-CallExpr 0x137032520 <col:13, col:53> '<dependent type>' contains-errors
|   |     | | |-DeclRefExpr 0x137032458 <col:13> 'int (const void *, const void *, unsigned long)' Function 0x1370314d0 'memcmp' 'int (const void *, const void *, unsigned long)'
|   |     | | |-DeclRefExpr 0x137032478 <col:20> 'const unsigned char *' lvalue ParmVar 0x137017bd8 'data' 'const unsigned char *'
|   |     | | |-DeclRefExpr 0x137032498 <col:26> 'const unsigned char[18]' lvalue Var 0x137017fb8 'kSafariExtensionsBlock' 'const unsigned char[18]'
|   |     | | `-RecoveryExpr 0x1370324b8 <col:50> '<dependent type>' contains-errors lvalue
|   |     | `-IntegerLiteral 0x137032558 <col:58> 'int' 0
|   |     `-ReturnStmt 0x137032598 <line:63:13>
|   `-BinaryOperator 0x137032718 <line:66:5, col:33> '<dependent type>' contains-errors '='
|     |-CXXDependentScopeMemberExpr 0x1370326b0 <col:5, col:12> '<dependent type>' contains-errors lvalue ->is_probably_safari
|     | `-CXXDependentScopeMemberExpr 0x137032668 <col:5, col:8> '<dependent type>' contains-errors lvalue ->s3
|     |   `-RecoveryExpr 0x137032640 <col:5> '<dependent type>' contains-errors lvalue
|     |     `-DeclRefExpr 0x137032620 <col:5> 'int *' lvalue ParmVar 0x137017b28 's' 'int *'
|     `-IntegerLiteral 0x1370326f8 <col:33> 'int' 1
`-FunctionDecl 0x1370314d0 <line:53:13> col:13 implicit used memcmp 'int (const void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x137031e00 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x137031e68 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x137031ed0 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x137031578 <<invalid sloc>> Implicit 883
