TranslationUnitDecl 0x125855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1258564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x125855bd0 '__int128'
|-TypedefDecl 0x125856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x125855bf0 'unsigned __int128'
|-TypedefDecl 0x125926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x125926000 'struct __NSConstantString_tag'
|   `-Record 0x125856580 '__NSConstantString_tag'
|-TypedefDecl 0x125926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x125855d90 '__SVInt8_t'
|-TypedefDecl 0x125926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x125855db0 '__SVInt16_t'
|-TypedefDecl 0x125926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x125855dd0 '__SVInt32_t'
|-TypedefDecl 0x1259263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x125855df0 '__SVInt64_t'
|-TypedefDecl 0x125926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x125855e10 '__SVUint8_t'
|-TypedefDecl 0x1259264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x125855e30 '__SVUint16_t'
|-TypedefDecl 0x125926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x125855e50 '__SVUint32_t'
|-TypedefDecl 0x125926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x125855e70 '__SVUint64_t'
|-TypedefDecl 0x1259265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x125855e90 '__SVFloat16_t'
|-TypedefDecl 0x125926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x125855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1259266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x125855ed0 '__SVFloat64_t'
|-TypedefDecl 0x125926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x125855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x125926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x125855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1259267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x125855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x125926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x125855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1259268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x125855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x125926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x125855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x125926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x125855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1259269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x125855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x125926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x125855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x125926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x125856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x125926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x125856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x125926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x125856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x125926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x125856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x125926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x125856090 '__clang_svint8x3_t'
|-TypedefDecl 0x125926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1258560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x125926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1258560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x125926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1258560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x125926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x125856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x125926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x125856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x125926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x125856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x125926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x125856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x125926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x125856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x125927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1258561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x125927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1258561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1259278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1258561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x125927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x125856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1259279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x125856230 '__clang_svint16x4_t'
|-TypedefDecl 0x125927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x125856250 '__clang_svint32x4_t'
|-TypedefDecl 0x125927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x125856270 '__clang_svint64x4_t'
|-TypedefDecl 0x125927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x125856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x125927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1258562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x125927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1258562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x125927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1258562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x125927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x125856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x125927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x125856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x125927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x125856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x125927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x125856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x125927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x125856390 '__SVBool_t'
|-TypedefDecl 0x125927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1258563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x125927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1258563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x125927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1258563f0 '__SVCount_t'
|-TypedefDecl 0x125927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x125927fb0 'char *'
|   `-BuiltinType 0x1258556b0 'char'
|-TypedefDecl 0x125928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x125927fb0 'char *'
|   `-BuiltinType 0x1258556b0 'char'
`-FunctionDecl 0x1259418d8 <dataset_diviso_filec/func16236_vuln.c:1:1, line:40:1> line:1:1 referenced invalid xid_map_enter 'int (int *, const struct sunrpc_msg *, const char *)'
  |-ParmVarDecl 0x125928128 <col:15, col:35> col:35 invalid ndo 'int *'
  |-ParmVarDecl 0x125928718 <line:2:15, col:40> col:40 used rp 'const struct sunrpc_msg *'
  |-ParmVarDecl 0x125928798 <col:44, col:58> col:58 used bp 'const char *'
  `-CompoundStmt 0x12594a3b8 <line:3:1, line:40:1>
    |-DeclStmt 0x125941bc0 <line:4:2, col:28>
    | |-RecordDecl 0x125941998 <col:8, col:15> col:15 struct ip
    | `-VarDecl 0x125941b08 <col:2, col:24> col:19 used ip 'const struct ip *' cinit
    |   `-RecoveryExpr 0x125941b88 <col:24> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x125941e00 <line:5:2, col:34>
    | |-RecordDecl 0x125941bd8 <col:8, col:15> col:15 struct ip6_hdr
    | `-VarDecl 0x125941d48 <col:2, col:30> col:24 used ip6 'const struct ip6_hdr *' cinit
    |   `-RecoveryExpr 0x125941dc8 <col:30> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x125942008 <line:6:2, col:28>
    | |-RecordDecl 0x125941e18 <col:2, col:9> col:9 struct xid_map_entry
    | `-VarDecl 0x125941f88 <col:2, col:24> col:24 used xmep 'struct xid_map_entry *'
    |-IfStmt 0x1259422d8 <line:8:2, line:9:12>
    | |-UnaryOperator 0x125942270 <line:8:6, col:35> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-CallExpr 0x125942248 <col:7, col:35> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x125942180 <col:7> 'int ()' Function 0x1259420c8 'ND_TTEST' 'int ()'
    | |   `-CXXDependentScopeMemberExpr 0x125942200 <col:16, col:28> '<dependent type>' contains-errors lvalue .cb_vers
    | |     `-RecoveryExpr 0x1259421d8 <col:16, col:20> '<dependent type>' contains-errors lvalue
    | |       `-DeclRefExpr 0x1259421a0 <col:16> 'const struct sunrpc_msg *' lvalue ParmVar 0x125928718 'rp' 'const struct sunrpc_msg *'
    | `-ReturnStmt 0x1259422c8 <line:9:3, col:12>
    |   `-ParenExpr 0x1259422a8 <col:10, col:12> 'int'
    |     `-IntegerLiteral 0x125942288 <col:11> 'int' 0
    |-SwitchStmt 0x125942560 <line:10:2, line:19:2>
    | |-CallExpr 0x125942538 <line:10:10, col:36> 'int'
    | | |-ImplicitCastExpr 0x125942520 <col:10> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x1259423d8 <col:10> 'int ()' Function 0x125942320 'IP_V' 'int ()'
    | | `-CStyleCastExpr 0x1259424c0 <col:15, col:34> 'const struct ip *' <BitCast>
    | |   `-ImplicitCastExpr 0x1259424a8 <col:34> 'const char *' <LValueToRValue> part_of_explicit_cast
    | |     `-DeclRefExpr 0x1259423f8 <col:34> 'const char *' lvalue ParmVar 0x125928798 'bp' 'const char *'
    | `-CompoundStmt 0x125943ec0 <col:39, line:19:2>
    |   |-CaseStmt 0x1259425c0 <line:11:2, line:12:27>
    |   | |-ConstantExpr 0x1259425a8 <line:11:7> 'int'
    |   | | `-IntegerLiteral 0x125942588 <col:7> 'int' 4
    |   | `-BinaryOperator 0x125942690 <line:12:3, col:27> 'const struct ip *' contains-errors '='
    |   |   |-DeclRefExpr 0x1259425e8 <col:3> 'const struct ip *' contains-errors lvalue Var 0x125941b08 'ip' 'const struct ip *'
    |   |   `-CStyleCastExpr 0x125942668 <col:8, col:27> 'const struct ip *' <BitCast>
    |   |     `-ImplicitCastExpr 0x125942650 <col:27> 'const char *' <LValueToRValue> part_of_explicit_cast
    |   |       `-DeclRefExpr 0x125942608 <col:27> 'const char *' lvalue ParmVar 0x125928798 'bp' 'const char *'
    |   |-BreakStmt 0x1259426b0 <line:13:3>
    |   |-CaseStmt 0x1259426f0 <line:14:2, line:15:33>
    |   | |-ConstantExpr 0x1259426d8 <line:14:7> 'int'
    |   | | `-IntegerLiteral 0x1259426b8 <col:7> 'int' 6
    |   | `-BinaryOperator 0x125943e28 <line:15:3, col:33> 'const struct ip6_hdr *' contains-errors '='
    |   |   |-DeclRefExpr 0x125942718 <col:3> 'const struct ip6_hdr *' contains-errors lvalue Var 0x125941d48 'ip6' 'const struct ip6_hdr *'
    |   |   `-CStyleCastExpr 0x125943e00 <col:9, col:33> 'const struct ip6_hdr *' <BitCast>
    |   |     `-ImplicitCastExpr 0x1259427e8 <col:33> 'const char *' <LValueToRValue> part_of_explicit_cast
    |   |       `-DeclRefExpr 0x125942738 <col:33> 'const char *' lvalue ParmVar 0x125928798 'bp' 'const char *'
    |   |-BreakStmt 0x125943e48 <line:16:3>
    |   `-DefaultStmt 0x125943ea0 <line:17:2, line:18:12>
    |     `-ReturnStmt 0x125943e90 <col:3, col:12>
    |       `-ParenExpr 0x125943e70 <col:10, col:12> 'int'
    |         `-IntegerLiteral 0x125943e50 <col:11> 'int' 1
    |-CallExpr 0x125944318 <line:26:2, col:61> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x125944168 <col:2> 'int ()' Function 0x1259440b0 'UNALIGNED_MEMCPY' 'int ()'
    | |-UnaryOperator 0x1259441e8 <col:19, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-RecoveryExpr 0x1259441c0 <col:20, col:26> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x125944188 <col:20> 'struct xid_map_entry *' lvalue Var 0x125941f88 'xmep' 'struct xid_map_entry *'
    | |-UnaryOperator 0x125944260 <col:31, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-RecoveryExpr 0x125944238 <col:32, col:36> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x125944200 <col:32> 'const struct sunrpc_msg *' lvalue ParmVar 0x125928718 'rp' 'const struct sunrpc_msg *'
    | `-UnaryExprOrTypeTraitExpr 0x1259442f8 <col:44, col:60> 'unsigned long' contains-errors sizeof
    |   `-ParenExpr 0x1259442d8 <col:50, col:60> '<dependent type>' contains-errors lvalue
    |     `-RecoveryExpr 0x1259442b0 <col:51, col:57> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x125944278 <col:51> 'struct xid_map_entry *' lvalue Var 0x125941f88 'xmep' 'struct xid_map_entry *' non_odr_use_unevaluated
    |-IfStmt 0x125944d10 <line:27:2, line:36:2> has_else
    | |-ImplicitCastExpr 0x125944370 <line:27:6> 'const struct ip *' contains-errors <LValueToRValue>
    | | `-DeclRefExpr 0x125944350 <col:6> 'const struct ip *' contains-errors lvalue Var 0x125941b08 'ip' 'const struct ip *'
    | |-CompoundStmt 0x1259447f8 <col:10, line:31:2>
    | | |-BinaryOperator 0x125944408 <line:28:3, col:17> '<dependent type>' contains-errors '='
    | | | |-RecoveryExpr 0x1259443c0 <col:3, col:9> '<dependent type>' contains-errors lvalue
    | | | | `-DeclRefExpr 0x125944388 <col:3> 'struct xid_map_entry *' lvalue Var 0x125941f88 'xmep' 'struct xid_map_entry *'
    | | | `-IntegerLiteral 0x1259443e8 <col:17> 'int' 4
    | | |-CallExpr 0x1259445d8 <line:29:3, col:66> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x125944428 <col:3> 'int ()' Function 0x1259440b0 'UNALIGNED_MEMCPY' 'int ()'
    | | | |-UnaryOperator 0x1259444a8 <col:20, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | | | `-RecoveryExpr 0x125944480 <col:21, col:27> '<dependent type>' contains-errors lvalue
    | | | |   `-DeclRefExpr 0x125944448 <col:21> 'struct xid_map_entry *' lvalue Var 0x125941f88 'xmep' 'struct xid_map_entry *'
    | | | |-UnaryOperator 0x125944520 <col:35, col:40> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | | | `-RecoveryExpr 0x1259444f8 <col:36, col:40> '<dependent type>' contains-errors lvalue
    | | | |   `-DeclRefExpr 0x1259444c0 <col:36> 'const struct ip *' contains-errors lvalue Var 0x125941b08 'ip' 'const struct ip *'
    | | | `-UnaryExprOrTypeTraitExpr 0x1259445b8 <col:48, col:65> 'unsigned long' contains-errors sizeof
    | | |   `-ParenExpr 0x125944598 <col:54, col:65> '<dependent type>' contains-errors lvalue
    | | |     `-RecoveryExpr 0x125944570 <col:55, col:59> '<dependent type>' contains-errors lvalue
    | | |       `-DeclRefExpr 0x125944538 <col:55> 'const struct ip *' contains-errors lvalue Var 0x125941b08 'ip' 'const struct ip *' non_odr_use_unevaluated
    | | `-CallExpr 0x1259447c0 <line:30:3, col:66> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x125944610 <col:3> 'int ()' Function 0x1259440b0 'UNALIGNED_MEMCPY' 'int ()'
    | |   |-UnaryOperator 0x125944690 <col:20, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |   | `-RecoveryExpr 0x125944668 <col:21, col:27> '<dependent type>' contains-errors lvalue
    | |   |   `-DeclRefExpr 0x125944630 <col:21> 'struct xid_map_entry *' lvalue Var 0x125941f88 'xmep' 'struct xid_map_entry *'
    | |   |-UnaryOperator 0x125944708 <col:35, col:40> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |   | `-RecoveryExpr 0x1259446e0 <col:36, col:40> '<dependent type>' contains-errors lvalue
    | |   |   `-DeclRefExpr 0x1259446a8 <col:36> 'const struct ip *' contains-errors lvalue Var 0x125941b08 'ip' 'const struct ip *'
    | |   `-UnaryExprOrTypeTraitExpr 0x1259447a0 <col:48, col:65> 'unsigned long' contains-errors sizeof
    | |     `-ParenExpr 0x125944780 <col:54, col:65> '<dependent type>' contains-errors lvalue
    | |       `-RecoveryExpr 0x125944758 <col:55, col:59> '<dependent type>' contains-errors lvalue
    | |         `-DeclRefExpr 0x125944720 <col:55> 'const struct ip *' contains-errors lvalue Var 0x125941b08 'ip' 'const struct ip *' non_odr_use_unevaluated
    | `-IfStmt 0x125944cf0 <line:32:7, line:36:2>
    |   |-ImplicitCastExpr 0x125944840 <line:32:11> 'const struct ip6_hdr *' contains-errors <LValueToRValue>
    |   | `-DeclRefExpr 0x125944820 <col:11> 'const struct ip6_hdr *' contains-errors lvalue Var 0x125941d48 'ip6' 'const struct ip6_hdr *'
    |   `-CompoundStmt 0x125944cc8 <col:16, line:36:2>
    |     |-BinaryOperator 0x1259448d8 <line:33:3, col:17> '<dependent type>' contains-errors '='
    |     | |-RecoveryExpr 0x125944890 <col:3, col:9> '<dependent type>' contains-errors lvalue
    |     | | `-DeclRefExpr 0x125944858 <col:3> 'struct xid_map_entry *' lvalue Var 0x125941f88 'xmep' 'struct xid_map_entry *'
    |     | `-IntegerLiteral 0x1259448b8 <col:17> 'int' 6
    |     |-CallExpr 0x125944aa8 <line:34:3, col:70> '<dependent type>' contains-errors
    |     | |-DeclRefExpr 0x1259448f8 <col:3> 'int ()' Function 0x1259440b0 'UNALIGNED_MEMCPY' 'int ()'
    |     | |-UnaryOperator 0x125944978 <col:20, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     | | `-RecoveryExpr 0x125944950 <col:21, col:27> '<dependent type>' contains-errors lvalue
    |     | |   `-DeclRefExpr 0x125944918 <col:21> 'struct xid_map_entry *' lvalue Var 0x125941f88 'xmep' 'struct xid_map_entry *'
    |     | |-UnaryOperator 0x1259449f0 <col:35, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     | | `-RecoveryExpr 0x1259449c8 <col:36, col:41> '<dependent type>' contains-errors lvalue
    |     | |   `-DeclRefExpr 0x125944990 <col:36> 'const struct ip6_hdr *' contains-errors lvalue Var 0x125941d48 'ip6' 'const struct ip6_hdr *'
    |     | `-UnaryExprOrTypeTraitExpr 0x125944a88 <col:50, col:69> 'unsigned long' contains-errors sizeof
    |     |   `-ParenExpr 0x125944a68 <col:56, col:69> '<dependent type>' contains-errors lvalue
    |     |     `-RecoveryExpr 0x125944a40 <col:57, col:62> '<dependent type>' contains-errors lvalue
    |     |       `-DeclRefExpr 0x125944a08 <col:57> 'const struct ip6_hdr *' contains-errors lvalue Var 0x125941d48 'ip6' 'const struct ip6_hdr *' non_odr_use_unevaluated
    |     `-CallExpr 0x125944c90 <line:35:3, col:70> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x125944ae0 <col:3> 'int ()' Function 0x1259440b0 'UNALIGNED_MEMCPY' 'int ()'
    |       |-UnaryOperator 0x125944b60 <col:20, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow
    |       | `-RecoveryExpr 0x125944b38 <col:21, col:27> '<dependent type>' contains-errors lvalue
    |       |   `-DeclRefExpr 0x125944b00 <col:21> 'struct xid_map_entry *' lvalue Var 0x125941f88 'xmep' 'struct xid_map_entry *'
    |       |-UnaryOperator 0x125944bd8 <col:35, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow
    |       | `-RecoveryExpr 0x125944bb0 <col:36, col:41> '<dependent type>' contains-errors lvalue
    |       |   `-DeclRefExpr 0x125944b78 <col:36> 'const struct ip6_hdr *' contains-errors lvalue Var 0x125941d48 'ip6' 'const struct ip6_hdr *'
    |       `-UnaryExprOrTypeTraitExpr 0x125944c70 <col:50, col:69> 'unsigned long' contains-errors sizeof
    |         `-ParenExpr 0x125944c50 <col:56, col:69> '<dependent type>' contains-errors lvalue
    |           `-RecoveryExpr 0x125944c28 <col:57, col:62> '<dependent type>' contains-errors lvalue
    |             `-DeclRefExpr 0x125944bf0 <col:57> 'const struct ip6_hdr *' contains-errors lvalue Var 0x125941d48 'ip6' 'const struct ip6_hdr *' non_odr_use_unevaluated
    |-BinaryOperator 0x12594a1c0 <line:37:2, col:50> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x125944d78 <col:2, col:8> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x125944d40 <col:2> 'struct xid_map_entry *' lvalue Var 0x125941f88 'xmep' 'struct xid_map_entry *'
    | `-CallExpr 0x12594a198 <col:15, col:50> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12594a0b8 <col:15> 'int ()' Function 0x12594a000 'EXTRACT_32BITS' 'int ()'
    |   `-UnaryOperator 0x12594a180 <col:30, col:43> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-CXXDependentScopeMemberExpr 0x12594a138 <col:31, col:43> '<dependent type>' contains-errors lvalue .cb_proc
    |       `-RecoveryExpr 0x12594a110 <col:31, col:35> '<dependent type>' contains-errors lvalue
    |         `-DeclRefExpr 0x12594a0d8 <col:31> 'const struct sunrpc_msg *' lvalue ParmVar 0x125928718 'rp' 'const struct sunrpc_msg *'
    |-BinaryOperator 0x12594a348 <line:38:2, col:50> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x12594a218 <col:2, col:8> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x12594a1e0 <col:2> 'struct xid_map_entry *' lvalue Var 0x125941f88 'xmep' 'struct xid_map_entry *'
    | `-CallExpr 0x12594a320 <col:15, col:50> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12594a240 <col:15> 'int ()' Function 0x12594a000 'EXTRACT_32BITS' 'int ()'
    |   `-UnaryOperator 0x12594a308 <col:30, col:43> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-CXXDependentScopeMemberExpr 0x12594a2c0 <col:31, col:43> '<dependent type>' contains-errors lvalue .cb_vers
    |       `-RecoveryExpr 0x12594a298 <col:31, col:35> '<dependent type>' contains-errors lvalue
    |         `-DeclRefExpr 0x12594a260 <col:31> 'const struct sunrpc_msg *' lvalue ParmVar 0x125928718 'rp' 'const struct sunrpc_msg *'
    `-ReturnStmt 0x12594a3a8 <line:39:2, col:11>
      `-ParenExpr 0x12594a388 <col:9, col:11> 'int'
        `-IntegerLiteral 0x12594a368 <col:10> 'int' 1
