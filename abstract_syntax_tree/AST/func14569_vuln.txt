TranslationUnitDecl 0x158055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1580564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x158055bd0 '__int128'
|-TypedefDecl 0x158056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x158055bf0 'unsigned __int128'
|-TypedefDecl 0x158126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x158126000 'struct __NSConstantString_tag'
|   `-Record 0x158056580 '__NSConstantString_tag'
|-TypedefDecl 0x158126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x158055d90 '__SVInt8_t'
|-TypedefDecl 0x158126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x158055db0 '__SVInt16_t'
|-TypedefDecl 0x158126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x158055dd0 '__SVInt32_t'
|-TypedefDecl 0x1581263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x158055df0 '__SVInt64_t'
|-TypedefDecl 0x158126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x158055e10 '__SVUint8_t'
|-TypedefDecl 0x1581264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x158055e30 '__SVUint16_t'
|-TypedefDecl 0x158126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x158055e50 '__SVUint32_t'
|-TypedefDecl 0x158126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x158055e70 '__SVUint64_t'
|-TypedefDecl 0x1581265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x158055e90 '__SVFloat16_t'
|-TypedefDecl 0x158126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x158055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1581266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x158055ed0 '__SVFloat64_t'
|-TypedefDecl 0x158126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x158055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x158126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x158055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1581267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x158055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x158126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x158055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1581268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x158055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x158126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x158055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x158126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x158055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1581269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x158055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x158126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x158055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x158126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x158056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x158126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x158056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x158126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x158056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x158126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x158056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x158126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x158056090 '__clang_svint8x3_t'
|-TypedefDecl 0x158126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1580560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x158126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1580560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x158126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1580560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x158126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x158056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x158126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x158056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x158126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x158056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x158126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x158056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x158126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x158056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x158127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1580561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x158127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1580561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1581278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1580561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x158127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x158056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1581279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x158056230 '__clang_svint16x4_t'
|-TypedefDecl 0x158127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x158056250 '__clang_svint32x4_t'
|-TypedefDecl 0x158127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x158056270 '__clang_svint64x4_t'
|-TypedefDecl 0x158127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x158056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x158127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1580562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x158127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1580562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x158127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1580562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x158127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x158056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x158127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x158056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x158127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x158056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x158127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x158056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x158127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x158056390 '__SVBool_t'
|-TypedefDecl 0x158127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1580563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x158127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1580563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x158127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1580563f0 '__SVCount_t'
|-TypedefDecl 0x158127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x158127fb0 'char *'
|   `-BuiltinType 0x1580556b0 'char'
|-TypedefDecl 0x158128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x158127fb0 'char *'
|   `-BuiltinType 0x1580556b0 'char'
`-FunctionDecl 0x158128348 <dataset_diviso_filec/func14569_vuln.c:1:1, line:31:1> line:1:7 invalid get_56_lenc_string 'char *(char **, int *, int *)'
  |-ParmVarDecl 0x158128108 <col:26, col:33> col:33 used buffer 'char **'
  |-ParmVarDecl 0x1581281d8 <line:2:26, col:34> col:34 invalid max_bytes_available 'int *'
  |-ParmVarDecl 0x158128258 <line:3:26, col:34> col:34 invalid string_length 'int *'
  `-CompoundStmt 0x1508083f0 <line:4:1, line:31:1>
    |-DeclStmt 0x1581285e8 <line:5:3, col:40>
    | `-VarDecl 0x1581284b0 <col:3, col:39> col:15 used empty_string 'char[1]' static cinit
    |   `-InitListExpr 0x158128588 <col:32, col:39> 'char[1]'
    |     `-ImplicitCastExpr 0x1581285d0 <col:34> 'char' <IntegralCast>
    |       `-CharacterLiteral 0x158128518 <col:34> 'int' 0
    |-DeclStmt 0x1581286e8 <line:6:3, col:23>
    | `-VarDecl 0x158128618 <col:3, col:17> col:9 used begin 'char *' cinit
    |   `-ImplicitCastExpr 0x1581286d0 <col:16, col:17> 'char *' <LValueToRValue>
    |     `-UnaryOperator 0x1581286b8 <col:16, col:17> 'char *' lvalue prefix '*' cannot overflow
    |       `-ImplicitCastExpr 0x1581286a0 <col:17> 'char **' <LValueToRValue>
    |         `-DeclRefExpr 0x158128680 <col:17> 'char **' lvalue ParmVar 0x158128108 'buffer' 'char **'
    |-IfStmt 0x1581287d8 <line:8:3, line:9:12>
    | |-BinaryOperator 0x158128770 <line:8:7, col:31> 'int' contains-errors '=='
    | | |-UnaryOperator 0x158128738 <col:7, col:8> '<dependent type>' contains-errors prefix '*' cannot overflow
    | | | `-ImplicitCastExpr 0x158128720 <col:8> '<dependent type>' contains-errors <LValueToRValue>
    | | |   `-RecoveryExpr 0x158128700 <col:8> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x158128750 <col:31> 'int' 0
    | `-ReturnStmt 0x1581287c8 <line:9:5, col:12>
    |   `-RecoveryExpr 0x1581287a8 <col:12> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x158141a98 <line:12:3, line:19:3>
    | |-BinaryOperator 0x1581418a0 <line:12:7, col:17> 'int' '=='
    | | |-ImplicitCastExpr 0x158141888 <col:7, col:8> 'int' <IntegralCast>
    | | | `-ImplicitCastExpr 0x158141870 <col:7, col:8> 'char' <LValueToRValue>
    | | |   `-UnaryOperator 0x158141838 <col:7, col:8> 'char' lvalue prefix '*' cannot overflow
    | | |     `-ImplicitCastExpr 0x158141820 <col:8> 'char *' <LValueToRValue>
    | | |       `-DeclRefExpr 0x158141800 <col:8> 'char *' lvalue Var 0x158128618 'begin' 'char *'
    | | `-IntegerLiteral 0x158141850 <col:17> 'int' 0
    | `-CompoundStmt 0x158141a68 <line:13:3, line:19:3>
    |   |-BinaryOperator 0x158141930 <line:14:5, col:21> '<dependent type>' contains-errors '='
    |   | |-UnaryOperator 0x1581418f8 <col:5, col:6> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   | | `-ImplicitCastExpr 0x1581418e0 <col:6> '<dependent type>' contains-errors <LValueToRValue>
    |   | |   `-RecoveryExpr 0x1581418c0 <col:6> '<dependent type>' contains-errors lvalue
    |   | `-IntegerLiteral 0x158141910 <col:21> 'int' 0
    |   |-UnaryOperator 0x1581419a0 <line:15:5, col:8> '<dependent type>' contains-errors prefix '--' cannot overflow
    |   | `-UnaryOperator 0x158141988 <col:7, col:8> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   |   `-ImplicitCastExpr 0x158141970 <col:8> '<dependent type>' contains-errors <LValueToRValue>
    |   |     `-RecoveryExpr 0x158141950 <col:8> '<dependent type>' contains-errors lvalue
    |   |-UnaryOperator 0x158141a08 <line:16:5, col:8> 'char *' prefix '++'
    |   | `-UnaryOperator 0x1581419f0 <col:7, col:8> 'char *' lvalue prefix '*' cannot overflow
    |   |   `-ImplicitCastExpr 0x1581419d8 <col:8> 'char **' <LValueToRValue>
    |   |     `-DeclRefExpr 0x1581419b8 <col:8> 'char **' lvalue ParmVar 0x158128108 'buffer' 'char **'
    |   `-ReturnStmt 0x158141a58 <line:18:5, col:12>
    |     `-ImplicitCastExpr 0x158141a40 <col:12> 'char *' <ArrayToPointerDecay>
    |       `-DeclRefExpr 0x158141a20 <col:12> 'char[1]' lvalue Var 0x1581284b0 'empty_string' 'char[1]'
    |-ImplicitCastExpr 0x158141fd0 <line:21:3, col:26> '<dependent type>' contains-errors <LValueToRValue>
    | `-RecoveryExpr 0x158141fa0 <col:3, col:26> '<dependent type>' contains-errors lvalue
    |   |-UnaryOperator 0x158141af0 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   | `-ImplicitCastExpr 0x158141ad8 <col:4> '<dependent type>' contains-errors <LValueToRValue>
    |   |   `-RecoveryExpr 0x158141ab8 <col:4> '<dependent type>' contains-errors lvalue
    |   `-ParenExpr 0x158141b60 <col:19, col:26> '<overloaded function type>' lvalue
    |     `-UnresolvedLookupExpr 0x158141b20 <col:20> '<overloaded function type>' lvalue (no ADL) = 'size_t' empty
    |-IfStmt 0x1581425a8 <line:25:3, line:26:12>
    | |-BinaryOperator 0x158142540 <line:25:7, col:35> 'int' contains-errors '>'
    | | |-BinaryOperator 0x1581424f0 <col:7, col:24> '<dependent type>' contains-errors '+'
    | | | |-UnaryOperator 0x1581424b8 <col:7, col:8> '<dependent type>' contains-errors prefix '*' cannot overflow
    | | | | `-ImplicitCastExpr 0x1581424a0 <col:8> '<dependent type>' contains-errors <LValueToRValue>
    | | | |   `-RecoveryExpr 0x158142378 <col:8> '<dependent type>' contains-errors lvalue
    | | | `-RecoveryExpr 0x1581424d0 <col:24> '<dependent type>' contains-errors lvalue
    | | `-UnaryOperator 0x158142528 <col:34, col:35> '<dependent type>' contains-errors prefix '*' cannot overflow
    | |   `-ImplicitCastExpr 0x158142510 <col:35> '<dependent type>' contains-errors <LValueToRValue>
    | |     `-RecoveryExpr 0x158142400 <col:35> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x158142598 <line:26:5, col:12>
    |   `-RecoveryExpr 0x158142578 <col:12> '<dependent type>' contains-errors lvalue
    |-CompoundAssignOperator 0x1581427d0 <line:28:3, col:44> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | |-UnaryOperator 0x158142748 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x158142730 <col:4> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x1581425c8 <col:4> '<dependent type>' contains-errors lvalue
    | `-BinaryOperator 0x1581427b0 <col:27, col:44> '<dependent type>' contains-errors '+'
    |   |-UnaryOperator 0x158142778 <col:27, col:28> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   | `-ImplicitCastExpr 0x158142760 <col:28> '<dependent type>' contains-errors <LValueToRValue>
    |   |   `-RecoveryExpr 0x158142618 <col:28> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x158142790 <col:44> '<dependent type>' contains-errors lvalue
    `-CompoundAssignOperator 0x150808330 <line:29:3, col:15> 'char *' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
      |-UnaryOperator 0x1508082e8 <col:3, col:4> 'char *' lvalue prefix '*' cannot overflow
      | `-ImplicitCastExpr 0x1508082d0 <col:4> 'char **' <LValueToRValue>
      |   `-DeclRefExpr 0x150808200 <col:4> 'char **' lvalue ParmVar 0x158128108 'buffer' 'char **'
      `-UnaryOperator 0x150808318 <col:14, col:15> '<dependent type>' contains-errors prefix '*' cannot overflow
        `-ImplicitCastExpr 0x150808300 <col:15> '<dependent type>' contains-errors <LValueToRValue>
          `-RecoveryExpr 0x150808250 <col:15> '<dependent type>' contains-errors lvalue
