TranslationUnitDecl 0x11c855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x11c8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x11c855bd0 '__int128'
|-TypedefDecl 0x11c856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x11c855bf0 'unsigned __int128'
|-TypedefDecl 0x11d00be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x11d00bc00 'struct __NSConstantString_tag'
|   `-Record 0x11c856580 '__NSConstantString_tag'
|-TypedefDecl 0x11d00be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x11c855d90 '__SVInt8_t'
|-TypedefDecl 0x11d00bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x11c855db0 '__SVInt16_t'
|-TypedefDecl 0x11d00bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x11c855dd0 '__SVInt32_t'
|-TypedefDecl 0x11d00bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x11c855df0 '__SVInt64_t'
|-TypedefDecl 0x11d00c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x11c855e10 '__SVUint8_t'
|-TypedefDecl 0x11d00c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x11c855e30 '__SVUint16_t'
|-TypedefDecl 0x11d00c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x11c855e50 '__SVUint32_t'
|-TypedefDecl 0x11d00c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x11c855e70 '__SVUint64_t'
|-TypedefDecl 0x11d00c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x11c855e90 '__SVFloat16_t'
|-TypedefDecl 0x11d00c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x11c855eb0 '__SVFloat32_t'
|-TypedefDecl 0x11d00c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x11c855ed0 '__SVFloat64_t'
|-TypedefDecl 0x11d00c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x11c855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x11d00c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x11c855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x11d00c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x11c855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x11d00c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x11c855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x11d00c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x11c855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x11d00c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x11c855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x11d00c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x11c855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x11d00c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x11c855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x11d00c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x11c855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x11d00c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x11c856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x11d00c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x11c856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x11d00c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x11c856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x11d00c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x11c856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x11d00c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x11c856090 '__clang_svint8x3_t'
|-TypedefDecl 0x11d00c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x11c8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x11d00c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x11c8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x11d00c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x11c8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x11d00c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x11c856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x11d00ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x11c856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x11d00cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x11c856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x11d00cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x11c856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x11d00cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x11c856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x11d00d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x11c8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x11d00d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x11c8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x11d00d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x11c8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x11d00d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x11c856210 '__clang_svint8x4_t'
|-TypedefDecl 0x11d00d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x11c856230 '__clang_svint16x4_t'
|-TypedefDecl 0x11d00d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x11c856250 '__clang_svint32x4_t'
|-TypedefDecl 0x11d00d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x11c856270 '__clang_svint64x4_t'
|-TypedefDecl 0x11d00d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x11c856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x11d00d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x11c8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x11d00d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x11c8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x11d00d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x11c8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x11d00d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x11c856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x11d00d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x11c856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x11d00d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x11c856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x11d00d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x11c856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x11d00da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x11c856390 '__SVBool_t'
|-TypedefDecl 0x11d00da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x11c8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x11d00dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x11c8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x11d00db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x11c8563f0 '__SVCount_t'
|-TypedefDecl 0x11d00dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x11d00dbb0 'char *'
|   `-BuiltinType 0x11c8556b0 'char'
|-TypedefDecl 0x11d00dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x11d00dbb0 'char *'
|   `-BuiltinType 0x11c8556b0 'char'
|-FunctionDecl 0x11d00ddf8 <dataset_diviso_filec/func15026_vuln.c:1:1, line:62:2> line:1:1 invalid tls1_process_heartbeat 'int (int *)'
| |-ParmVarDecl 0x11d00dd28 <col:24, col:29> col:29 referenced invalid s 'int *'
| `-CompoundStmt 0x11d02c1a8 <line:2:2, line:62:2>
|   |-DeclStmt 0x11d00e160 <line:3:2, col:46>
|   | |-VarDecl 0x11d00def8 <col:2, col:40> col:17 used p 'unsigned char *' cinit
|   | | `-UnaryOperator 0x11d00e0b0 <col:21, col:40> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x11d00e090 <col:22, col:40> '<dependent type>' contains-errors lvalue
|   | |     |-ImplicitCastExpr 0x11d00e078 <col:22, col:34> '<dependent type>' contains-errors <LValueToRValue>
|   | |     | `-CXXDependentScopeMemberExpr 0x11d00e010 <col:22, col:34> '<dependent type>' contains-errors lvalue .data
|   | |     |   `-CXXDependentScopeMemberExpr 0x11d00dfc8 <col:22, col:29> '<dependent type>' contains-errors lvalue ->rrec
|   | |     |     `-CXXDependentScopeMemberExpr 0x11d00df80 <col:22, col:25> '<dependent type>' contains-errors lvalue ->s3
|   | |     |       `-RecoveryExpr 0x11d00df60 <col:22> '<dependent type>' contains-errors lvalue
|   | |     `-IntegerLiteral 0x11d00e058 <col:39> 'int' 0
|   | `-VarDecl 0x11d00e0e0 <col:2, col:44> col:44 used pl 'unsigned char *'
|   |-DeclStmt 0x11d00e1f8 <line:4:2, col:23>
|   | `-VarDecl 0x11d00e190 <col:2, col:17> col:17 used hbtype 'unsigned short'
|   |-DeclStmt 0x11d00e290 <line:5:2, col:22>
|   | `-VarDecl 0x11d00e228 <col:2, col:15> col:15 used payload 'unsigned int'
|   |-DeclStmt 0x11d00e360 <line:6:2, col:27>
|   | `-VarDecl 0x11d00e2c0 <col:2, col:25> col:15 used padding 'unsigned int' cinit
|   |   `-ImplicitCastExpr 0x11d00e348 <col:25> 'unsigned int' <IntegralCast>
|   |     `-IntegerLiteral 0x11d00e328 <col:25> 'int' 16
|   |-BinaryOperator 0x11d027418 <line:9:2, col:13> 'unsigned short' contains-errors '='
|   | |-DeclRefExpr 0x11d00e378 <col:2> 'unsigned short' lvalue Var 0x11d00e190 'hbtype' 'unsigned short'
|   | `-ImplicitCastExpr 0x11d027400 <col:11, col:13> 'unsigned short' contains-errors <IntegralCast>
|   |   `-ImplicitCastExpr 0x11d00e3e8 <col:11, col:13> 'unsigned char' contains-errors <LValueToRValue>
|   |     `-UnaryOperator 0x11d00e3d0 <col:11, col:13> 'unsigned char' contains-errors lvalue prefix '*' cannot overflow
|   |       `-UnaryOperator 0x11d00e3b8 <col:12, col:13> 'unsigned char *' contains-errors postfix '++'
|   |         `-DeclRefExpr 0x11d00e398 <col:12> 'unsigned char *' contains-errors lvalue Var 0x11d00def8 'p' 'unsigned char *'
|   |-CallExpr 0x11d027638 <line:10:2, col:16> 'int' contains-errors
|   | |-ImplicitCastExpr 0x11d027620 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x11d027590 <col:2> 'int ()' Function 0x11d0274d8 'n2s' 'int ()'
|   | |-ImplicitCastExpr 0x11d027668 <col:6> 'unsigned char *' contains-errors <LValueToRValue>
|   | | `-DeclRefExpr 0x11d0275b0 <col:6> 'unsigned char *' contains-errors lvalue Var 0x11d00def8 'p' 'unsigned char *'
|   | `-ImplicitCastExpr 0x11d027680 <col:9> 'unsigned int' <LValueToRValue>
|   |   `-DeclRefExpr 0x11d0275d0 <col:9> 'unsigned int' lvalue Var 0x11d00e228 'payload' 'unsigned int'
|   |-BinaryOperator 0x11d0276f0 <line:11:2, col:7> 'unsigned char *' contains-errors '='
|   | |-DeclRefExpr 0x11d027698 <col:2> 'unsigned char *' lvalue Var 0x11d00e0e0 'pl' 'unsigned char *'
|   | `-ImplicitCastExpr 0x11d0276d8 <col:7> 'unsigned char *' contains-errors <LValueToRValue>
|   |   `-DeclRefExpr 0x11d0276b8 <col:7> 'unsigned char *' contains-errors lvalue Var 0x11d00def8 'p' 'unsigned char *'
|   |-IfStmt 0x11d027cb0 <line:13:2, line:16:26>
|   | |-CXXDependentScopeMemberExpr 0x11d027730 <line:13:6, col:9> '<dependent type>' contains-errors lvalue ->msg_callback
|   | | `-RecoveryExpr 0x11d027710 <col:6> '<dependent type>' contains-errors lvalue
|   | `-CallExpr 0x11d027c58 <line:14:3, line:16:26> '<dependent type>' contains-errors
|   |   |-CXXDependentScopeMemberExpr 0x11d0277c0 <line:14:3, col:6> '<dependent type>' contains-errors lvalue ->msg_callback
|   |   | `-RecoveryExpr 0x11d027798 <col:3> '<dependent type>' contains-errors lvalue
|   |   |   `-DeclRefExpr 0x11d027778 <col:3> 'int *' lvalue ParmVar 0x11d00dd28 's' 'int *'
|   |   |-IntegerLiteral 0x11d027808 <col:19> 'int' 0
|   |   |-CXXDependentScopeMemberExpr 0x11d027848 <col:22, col:25> '<dependent type>' contains-errors lvalue ->version
|   |   | `-RecoveryExpr 0x11d027828 <col:22> '<dependent type>' contains-errors lvalue
|   |   |-RecoveryExpr 0x11d027be8 <col:34> '<dependent type>' contains-errors lvalue
|   |   |-UnaryOperator 0x11d027c40 <line:15:4, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   | `-ArraySubscriptExpr 0x11d027c20 <col:5, col:23> '<dependent type>' contains-errors lvalue
|   |   |   |-ImplicitCastExpr 0x11d027c08 <col:5, col:17> '<dependent type>' contains-errors <LValueToRValue>
|   |   |   | `-CXXDependentScopeMemberExpr 0x11d027958 <col:5, col:17> '<dependent type>' contains-errors lvalue .data
|   |   |   |   `-CXXDependentScopeMemberExpr 0x11d027910 <col:5, col:12> '<dependent type>' contains-errors lvalue ->rrec
|   |   |   |     `-CXXDependentScopeMemberExpr 0x11d0278c8 <col:5, col:8> '<dependent type>' contains-errors lvalue ->s3
|   |   |   |       `-RecoveryExpr 0x11d0278a8 <col:5> '<dependent type>' contains-errors lvalue
|   |   |   `-IntegerLiteral 0x11d0279a0 <col:22> 'int' 0
|   |   |-CXXDependentScopeMemberExpr 0x11d027ac0 <col:26, col:38> '<dependent type>' contains-errors lvalue .length
|   |   | `-CXXDependentScopeMemberExpr 0x11d027a78 <col:26, col:33> '<dependent type>' contains-errors lvalue ->rrec
|   |   |   `-CXXDependentScopeMemberExpr 0x11d027a30 <col:26, col:29> '<dependent type>' contains-errors lvalue ->s3
|   |   |     `-RecoveryExpr 0x11d027a10 <col:26> '<dependent type>' contains-errors lvalue
|   |   |-RecoveryExpr 0x11d027b08 <line:16:4> '<dependent type>' contains-errors lvalue
|   |   `-CXXDependentScopeMemberExpr 0x11d027b48 <col:7, col:10> '<dependent type>' contains-errors lvalue ->msg_callback_arg
|   |     `-RecoveryExpr 0x11d027b28 <col:7> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x11d02c148 <line:18:2, line:59:3> has_else
|   | |-BinaryOperator 0x11d027d48 <line:18:6, col:16> 'int' contains-errors '=='
|   | | |-DeclRefExpr 0x11d027cd0 <col:6> 'unsigned short' lvalue Var 0x11d00e190 'hbtype' 'unsigned short'
|   | | `-RecoveryExpr 0x11d027d28 <col:16> '<dependent type>' contains-errors lvalue
|   | |-CompoundStmt 0x11d02bb70 <line:19:3, line:46:3>
|   | | |-DeclStmt 0x11d027e80 <line:20:3, col:29>
|   | | | |-VarDecl 0x11d027d80 <col:3, col:18> col:18 used buffer 'unsigned char *'
|   | | | `-VarDecl 0x11d027e00 <col:3, col:27> col:27 used bp 'unsigned char *'
|   | | |-DeclStmt 0x11d027f18 <line:21:3, col:8>
|   | | | `-VarDecl 0x11d027eb0 <col:3, col:7> col:7 used r 'int'
|   | | |-BinaryOperator 0x11d029010 <line:24:3, col:52> 'unsigned char *' '='
|   | | | |-DeclRefExpr 0x11d027f30 <col:3> 'unsigned char *' lvalue Var 0x11d027d80 'buffer' 'unsigned char *'
|   | | | `-ImplicitCastExpr 0x11d0281b8 <col:12, col:52> 'unsigned char *' <IntegralToPointer>
|   | | |   `-CallExpr 0x11d028190 <col:12, col:52> 'int'
|   | | |     |-ImplicitCastExpr 0x11d028178 <col:12> 'int (*)()' <FunctionToPointerDecay>
|   | | |     | `-DeclRefExpr 0x11d028030 <col:12> 'int ()' Function 0x11d027f78 'OPENSSL_malloc' 'int ()'
|   | | |     `-BinaryOperator 0x11d028158 <col:27, col:45> 'unsigned int' '+'
|   | | |       |-BinaryOperator 0x11d028100 <col:27, col:35> 'unsigned int' '+'
|   | | |       | |-ImplicitCastExpr 0x11d0280e8 <col:27, col:31> 'unsigned int' <IntegralCast>
|   | | |       | | `-BinaryOperator 0x11d028090 <col:27, col:31> 'int' '+'
|   | | |       | |   |-IntegerLiteral 0x11d028050 <col:27> 'int' 1
|   | | |       | |   `-IntegerLiteral 0x11d028070 <col:31> 'int' 2
|   | | |       | `-ImplicitCastExpr 0x11d0280d0 <col:35> 'unsigned int' <LValueToRValue>
|   | | |       |   `-DeclRefExpr 0x11d0280b0 <col:35> 'unsigned int' lvalue Var 0x11d00e228 'payload' 'unsigned int'
|   | | |       `-ImplicitCastExpr 0x11d028140 <col:45> 'unsigned int' <LValueToRValue>
|   | | |         `-DeclRefExpr 0x11d028120 <col:45> 'unsigned int' lvalue Var 0x11d00e2c0 'padding' 'unsigned int'
|   | | |-BinaryOperator 0x11d029088 <line:25:3, col:8> 'unsigned char *' '='
|   | | | |-DeclRefExpr 0x11d029030 <col:3> 'unsigned char *' lvalue Var 0x11d027e00 'bp' 'unsigned char *'
|   | | | `-ImplicitCastExpr 0x11d029070 <col:8> 'unsigned char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x11d029050 <col:8> 'unsigned char *' lvalue Var 0x11d027d80 'buffer' 'unsigned char *'
|   | | |-BinaryOperator 0x11d029150 <line:28:3, col:11> 'unsigned char' contains-errors '='
|   | | | |-UnaryOperator 0x11d0290e0 <col:3, col:6> 'unsigned char' lvalue prefix '*' cannot overflow
|   | | | | `-UnaryOperator 0x11d0290c8 <col:4, col:6> 'unsigned char *' postfix '++'
|   | | | |   `-DeclRefExpr 0x11d0290a8 <col:4> 'unsigned char *' lvalue Var 0x11d027e00 'bp' 'unsigned char *'
|   | | | `-RecoveryExpr 0x11d029130 <col:11> '<dependent type>' contains-errors lvalue
|   | | |-CallExpr 0x11d0292c8 <line:29:3, col:18> 'int'
|   | | | |-ImplicitCastExpr 0x11d0292b0 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x11d029250 <col:3> 'int ()' Function 0x11d029198 's2n' 'int ()'
|   | | | |-ImplicitCastExpr 0x11d0292f8 <col:7> 'unsigned int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x11d029270 <col:7> 'unsigned int' lvalue Var 0x11d00e228 'payload' 'unsigned int'
|   | | | `-ImplicitCastExpr 0x11d029310 <col:16> 'unsigned char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x11d029290 <col:16> 'unsigned char *' lvalue Var 0x11d027e00 'bp' 'unsigned char *'
|   | | |-CallExpr 0x11d029708 <line:30:3, col:25> 'void *'
|   | | | |-ImplicitCastExpr 0x11d0296f0 <col:3> 'void *(*)(void *, const void *, unsigned long)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x11d0295f8 <col:3> 'void *(void *, const void *, unsigned long)' Function 0x11d0293a8 'memcpy' 'void *(void *, const void *, unsigned long)'
|   | | | |-ImplicitCastExpr 0x11d029758 <col:10> 'void *' <BitCast>
|   | | | | `-ImplicitCastExpr 0x11d029740 <col:10> 'unsigned char *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x11d029618 <col:10> 'unsigned char *' lvalue Var 0x11d027e00 'bp' 'unsigned char *'
|   | | | |-ImplicitCastExpr 0x11d029788 <col:14> 'const void *' <BitCast>
|   | | | | `-ImplicitCastExpr 0x11d029770 <col:14> 'unsigned char *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x11d029638 <col:14> 'unsigned char *' lvalue Var 0x11d00e0e0 'pl' 'unsigned char *'
|   | | | `-ImplicitCastExpr 0x11d0297b8 <col:18> 'unsigned long' <IntegralCast>
|   | | |   `-ImplicitCastExpr 0x11d0297a0 <col:18> 'unsigned int' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x11d029658 <col:18> 'unsigned int' lvalue Var 0x11d00e228 'payload' 'unsigned int'
|   | | |-CompoundAssignOperator 0x11d029828 <line:31:3, col:9> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   | | | |-DeclRefExpr 0x11d0297d0 <col:3> 'unsigned char *' lvalue Var 0x11d027e00 'bp' 'unsigned char *'
|   | | | `-ImplicitCastExpr 0x11d029810 <col:9> 'unsigned int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x11d0297f0 <col:9> 'unsigned int' lvalue Var 0x11d00e228 'payload' 'unsigned int'
|   | | |-CallExpr 0x11d0299b0 <line:33:3, col:32> 'int'
|   | | | |-ImplicitCastExpr 0x11d029998 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x11d029938 <col:3> 'int ()' Function 0x11d029880 'RAND_pseudo_bytes' 'int ()'
|   | | | |-ImplicitCastExpr 0x11d0299e0 <col:21> 'unsigned char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x11d029958 <col:21> 'unsigned char *' lvalue Var 0x11d027e00 'bp' 'unsigned char *'
|   | | | `-ImplicitCastExpr 0x11d0299f8 <col:25> 'unsigned int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x11d029978 <col:25> 'unsigned int' lvalue Var 0x11d00e2c0 'padding' 'unsigned int'
|   | | |-BinaryOperator 0x11d029db8 <line:35:3, col:75> 'int' contains-errors '='
|   | | | |-DeclRefExpr 0x11d029a10 <col:3> 'int' lvalue Var 0x11d027eb0 'r' 'int'
|   | | | `-CallExpr 0x11d029d78 <col:7, col:75> '<dependent type>' contains-errors
|   | | |   |-DeclRefExpr 0x11d029b10 <col:7> 'int ()' Function 0x11d029a58 'ssl3_write_bytes' 'int ()'
|   | | |   |-RecoveryExpr 0x11d029b30 <col:24> '<dependent type>' contains-errors lvalue
|   | | |   |-RecoveryExpr 0x11d029cd0 <col:27> '<dependent type>' contains-errors lvalue
|   | | |   |-DeclRefExpr 0x11d029b68 <col:46> 'unsigned char *' lvalue Var 0x11d027d80 'buffer' 'unsigned char *'
|   | | |   `-BinaryOperator 0x11d029d58 <col:54, col:68> 'unsigned int' '+'
|   | | |     |-BinaryOperator 0x11d029d20 <col:54, col:58> 'unsigned int' '+'
|   | | |     | |-ImplicitCastExpr 0x11d029d08 <col:54> 'unsigned int' <IntegralCast>
|   | | |     | | `-IntegerLiteral 0x11d029b88 <col:54> 'int' 3
|   | | |     | `-ImplicitCastExpr 0x11d029cf0 <col:58> 'unsigned int' <LValueToRValue>
|   | | |     |   `-DeclRefExpr 0x11d029ba8 <col:58> 'unsigned int' lvalue Var 0x11d00e228 'payload' 'unsigned int'
|   | | |     `-ImplicitCastExpr 0x11d029d40 <col:68> 'unsigned int' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x11d029c18 <col:68> 'unsigned int' lvalue Var 0x11d00e2c0 'padding' 'unsigned int'
|   | | |-IfStmt 0x11d02b8f8 <line:37:3, line:40:27>
|   | | | |-BinaryOperator 0x11d02b4c0 <line:37:7, col:20> 'int' contains-errors '&&'
|   | | | | |-BinaryOperator 0x11d02b438 <col:7, col:12> 'int' '>='
|   | | | | | |-ImplicitCastExpr 0x11d02b420 <col:7> 'int' <LValueToRValue>
|   | | | | | | `-DeclRefExpr 0x11d029dd8 <col:7> 'int' lvalue Var 0x11d027eb0 'r' 'int'
|   | | | | | `-IntegerLiteral 0x11d02b400 <col:12> 'int' 0
|   | | | | `-CXXDependentScopeMemberExpr 0x11d02b478 <col:17, col:20> '<dependent type>' contains-errors lvalue ->msg_callback
|   | | | |   `-RecoveryExpr 0x11d02b458 <col:17> '<dependent type>' contains-errors lvalue
|   | | | `-CallExpr 0x11d02b8a0 <line:38:4, line:40:27> '<dependent type>' contains-errors
|   | | |   |-CXXDependentScopeMemberExpr 0x11d02b528 <line:38:4, col:7> '<dependent type>' contains-errors lvalue ->msg_callback
|   | | |   | `-RecoveryExpr 0x11d02b500 <col:4> '<dependent type>' contains-errors lvalue
|   | | |   |   `-DeclRefExpr 0x11d02b4e0 <col:4> 'int *' lvalue ParmVar 0x11d00dd28 's' 'int *'
|   | | |   |-IntegerLiteral 0x11d02b570 <col:20> 'int' 1
|   | | |   |-CXXDependentScopeMemberExpr 0x11d02b5b0 <col:23, col:26> '<dependent type>' contains-errors lvalue ->version
|   | | |   | `-RecoveryExpr 0x11d02b590 <col:23> '<dependent type>' contains-errors lvalue
|   | | |   |-RecoveryExpr 0x11d02b7f8 <col:35> '<dependent type>' contains-errors lvalue
|   | | |   |-DeclRefExpr 0x11d02b610 <line:39:5> 'unsigned char *' lvalue Var 0x11d027d80 'buffer' 'unsigned char *'
|   | | |   |-BinaryOperator 0x11d02b880 <col:13, col:27> 'unsigned int' '+'
|   | | |   | |-BinaryOperator 0x11d02b848 <col:13, col:17> 'unsigned int' '+'
|   | | |   | | |-ImplicitCastExpr 0x11d02b830 <col:13> 'unsigned int' <IntegralCast>
|   | | |   | | | `-IntegerLiteral 0x11d02b630 <col:13> 'int' 3
|   | | |   | | `-ImplicitCastExpr 0x11d02b818 <col:17> 'unsigned int' <LValueToRValue>
|   | | |   | |   `-DeclRefExpr 0x11d02b650 <col:17> 'unsigned int' lvalue Var 0x11d00e228 'payload' 'unsigned int'
|   | | |   | `-ImplicitCastExpr 0x11d02b868 <col:27> 'unsigned int' <LValueToRValue>
|   | | |   |   `-DeclRefExpr 0x11d02b6c0 <col:27> 'unsigned int' lvalue Var 0x11d00e2c0 'padding' 'unsigned int'
|   | | |   |-RecoveryExpr 0x11d02b718 <line:40:5> '<dependent type>' contains-errors lvalue
|   | | |   `-CXXDependentScopeMemberExpr 0x11d02b758 <col:8, col:11> '<dependent type>' contains-errors lvalue ->msg_callback_arg
|   | | |     `-RecoveryExpr 0x11d02b738 <col:8> '<dependent type>' contains-errors lvalue
|   | | |-CallExpr 0x11d02ba50 <line:42:3, col:22> 'int'
|   | | | |-ImplicitCastExpr 0x11d02ba38 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x11d02b9f8 <col:3> 'int ()' Function 0x11d02b940 'OPENSSL_free' 'int ()'
|   | | | `-ImplicitCastExpr 0x11d02ba78 <col:16> 'unsigned char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x11d02ba18 <col:16> 'unsigned char *' lvalue Var 0x11d027d80 'buffer' 'unsigned char *'
|   | | `-IfStmt 0x11d02bb50 <line:44:3, line:45:11>
|   | |   |-BinaryOperator 0x11d02bae8 <line:44:7, col:11> 'int' '<'
|   | |   | |-ImplicitCastExpr 0x11d02bad0 <col:7> 'int' <LValueToRValue>
|   | |   | | `-DeclRefExpr 0x11d02ba90 <col:7> 'int' lvalue Var 0x11d027eb0 'r' 'int'
|   | |   | `-IntegerLiteral 0x11d02bab0 <col:11> 'int' 0
|   | |   `-ReturnStmt 0x11d02bb40 <line:45:4, col:11>
|   | |     `-ImplicitCastExpr 0x11d02bb28 <col:11> 'int' <LValueToRValue>
|   | |       `-DeclRefExpr 0x11d02bb08 <col:11> 'int' lvalue Var 0x11d027eb0 'r' 'int'
|   | `-IfStmt 0x11d02c128 <line:47:7, line:59:3>
|   |   |-BinaryOperator 0x11d02bc60 <line:47:11, col:21> 'int' contains-errors '=='
|   |   | |-DeclRefExpr 0x11d02bbe8 <col:11> 'unsigned short' lvalue Var 0x11d00e190 'hbtype' 'unsigned short'
|   |   | `-RecoveryExpr 0x11d02bc40 <col:21> '<dependent type>' contains-errors lvalue
|   |   `-CompoundStmt 0x11d02c100 <line:48:3, line:59:3>
|   |     |-DeclStmt 0x11d02bd00 <line:49:3, col:19>
|   |     | `-VarDecl 0x11d02bc98 <col:3, col:16> col:16 used seq 'unsigned int'
|   |     |-CallExpr 0x11d02bd90 <line:52:3, col:14> 'int'
|   |     | |-ImplicitCastExpr 0x11d02bd78 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |     | | `-DeclRefExpr 0x11d02bd18 <col:3> 'int ()' Function 0x11d0274d8 'n2s' 'int ()'
|   |     | |-ImplicitCastExpr 0x11d02bdc0 <col:7> 'unsigned char *' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x11d02bd38 <col:7> 'unsigned char *' lvalue Var 0x11d00e0e0 'pl' 'unsigned char *'
|   |     | `-ImplicitCastExpr 0x11d02bdd8 <col:11> 'unsigned int' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x11d02bd58 <col:11> 'unsigned int' lvalue Var 0x11d02bc98 'seq' 'unsigned int'
|   |     `-IfStmt 0x11d02c0e0 <line:54:3, line:58:4>
|   |       |-BinaryOperator 0x11d02bf28 <line:54:7, col:34> 'int' contains-errors '&&'
|   |       | |-BinaryOperator 0x11d02be60 <col:7, col:18> 'int' '=='
|   |       | | |-ImplicitCastExpr 0x11d02be30 <col:7> 'unsigned int' <LValueToRValue>
|   |       | | | `-DeclRefExpr 0x11d02bdf0 <col:7> 'unsigned int' lvalue Var 0x11d00e228 'payload' 'unsigned int'
|   |       | | `-ImplicitCastExpr 0x11d02be48 <col:18> 'unsigned int' <IntegralCast>
|   |       | |   `-IntegerLiteral 0x11d02be10 <col:18> 'int' 18
|   |       | `-BinaryOperator 0x11d02bf08 <col:24, col:34> 'int' contains-errors '=='
|   |       |   |-DeclRefExpr 0x11d02be80 <col:24> 'unsigned int' lvalue Var 0x11d02bc98 'seq' 'unsigned int'
|   |       |   `-CXXDependentScopeMemberExpr 0x11d02bec0 <col:31, col:34> '<dependent type>' contains-errors lvalue ->tlsext_hb_seq
|   |       |     `-RecoveryExpr 0x11d02bea0 <col:31> '<dependent type>' contains-errors lvalue
|   |       `-CompoundStmt 0x11d02c0c0 <line:55:4, line:58:4>
|   |         |-UnaryOperator 0x11d02bfd8 <line:56:4, col:20> '<dependent type>' contains-errors postfix '++' cannot overflow
|   |         | `-CXXDependentScopeMemberExpr 0x11d02bf90 <col:4, col:7> '<dependent type>' contains-errors lvalue ->tlsext_hb_seq
|   |         |   `-RecoveryExpr 0x11d02bf68 <col:4> '<dependent type>' contains-errors lvalue
|   |         |     `-DeclRefExpr 0x11d02bf48 <col:4> 'int *' lvalue ParmVar 0x11d00dd28 's' 'int *'
|   |         `-BinaryOperator 0x11d02c0a0 <line:57:4, col:27> '<dependent type>' contains-errors '='
|   |           |-CXXDependentScopeMemberExpr 0x11d02c038 <col:4, col:7> '<dependent type>' contains-errors lvalue ->tlsext_hb_pending
|   |           | `-RecoveryExpr 0x11d02c010 <col:4> '<dependent type>' contains-errors lvalue
|   |           |   `-DeclRefExpr 0x11d02bff0 <col:4> 'int *' lvalue ParmVar 0x11d00dd28 's' 'int *'
|   |           `-IntegerLiteral 0x11d02c080 <col:27> 'int' 0
|   `-ReturnStmt 0x11d02c198 <line:61:2, col:9>
|     `-IntegerLiteral 0x11d02c178 <col:9> 'int' 0
`-FunctionDecl 0x11d0293a8 <line:30:3> col:3 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x11d0294a8 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x11d029510 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x11d029578 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x11d029450 <<invalid sloc>> Implicit 882
