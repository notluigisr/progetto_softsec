TranslationUnitDecl 0x122055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1220564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x122055bd0 '__int128'
|-TypedefDecl 0x122056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x122055bf0 'unsigned __int128'
|-TypedefDecl 0x122126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x122126000 'struct __NSConstantString_tag'
|   `-Record 0x122056580 '__NSConstantString_tag'
|-TypedefDecl 0x122126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x122055d90 '__SVInt8_t'
|-TypedefDecl 0x122126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x122055db0 '__SVInt16_t'
|-TypedefDecl 0x122126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x122055dd0 '__SVInt32_t'
|-TypedefDecl 0x1221263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x122055df0 '__SVInt64_t'
|-TypedefDecl 0x122126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x122055e10 '__SVUint8_t'
|-TypedefDecl 0x1221264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x122055e30 '__SVUint16_t'
|-TypedefDecl 0x122126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x122055e50 '__SVUint32_t'
|-TypedefDecl 0x122126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x122055e70 '__SVUint64_t'
|-TypedefDecl 0x1221265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x122055e90 '__SVFloat16_t'
|-TypedefDecl 0x122126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x122055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1221266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x122055ed0 '__SVFloat64_t'
|-TypedefDecl 0x122126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x122055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x122126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x122055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1221267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x122055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x122126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x122055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1221268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x122055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x122126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x122055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x122126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x122055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1221269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x122055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x122126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x122055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x122126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x122056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x122126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x122056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x122126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x122056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x122126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x122056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x122126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x122056090 '__clang_svint8x3_t'
|-TypedefDecl 0x122126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1220560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x122126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1220560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x122126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1220560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x122126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x122056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x122126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x122056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x122126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x122056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x122126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x122056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x122126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x122056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x122127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1220561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x122127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1220561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1221278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1220561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x122127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x122056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1221279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x122056230 '__clang_svint16x4_t'
|-TypedefDecl 0x122127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x122056250 '__clang_svint32x4_t'
|-TypedefDecl 0x122127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x122056270 '__clang_svint64x4_t'
|-TypedefDecl 0x122127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x122056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x122127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1220562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x122127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1220562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x122127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1220562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x122127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x122056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x122127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x122056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x122127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x122056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x122127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x122056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x122127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x122056390 '__SVBool_t'
|-TypedefDecl 0x122127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1220563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x122127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1220563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x122127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1220563f0 '__SVCount_t'
|-TypedefDecl 0x122127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x122127fb0 'char *'
|   `-BuiltinType 0x1220556b0 'char'
|-TypedefDecl 0x122128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x122127fb0 'char *'
|   `-BuiltinType 0x1220556b0 'char'
`-FunctionDecl 0x122140cc8 <dataset_diviso_filec/func1278_vuln.c:1:1, line:46:1> line:1:12 referenced remove_tree 'int (struct qtree_mem_dqinfo *, struct dquot *, int *, int)' static
  |-ParmVarDecl 0x122128648 <col:24, col:49> col:49 used info 'struct qtree_mem_dqinfo *'
  |-ParmVarDecl 0x122140a28 <col:55, col:69> col:69 used dquot 'struct dquot *'
  |-ParmVarDecl 0x122140af8 <line:2:10, col:16> col:16 used blk 'int *'
  |-ParmVarDecl 0x122140b78 <col:21, col:25> col:25 used depth 'int'
  `-CompoundStmt 0x122149a90 <line:3:1, line:46:1>
    |-DeclStmt 0x122141088 <line:4:2, col:52>
    | `-VarDecl 0x122140df0 <col:2, col:51> col:8 used buf 'char *' cinit
    |   `-CallExpr 0x122141058 <col:14, col:51> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x122140f70 <col:14> 'int ()' Function 0x122140eb8 'kmalloc' 'int ()'
    |     |-RecoveryExpr 0x122140fc8 <col:22, col:28> '<dependent type>' contains-errors lvalue
    |     | `-DeclRefExpr 0x122140f90 <col:22> 'struct qtree_mem_dqinfo *' lvalue ParmVar 0x122128648 'info' 'struct qtree_mem_dqinfo *'
    |     `-RecoveryExpr 0x122141038 <col:43> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x122141140 <line:5:2, col:13>
    | `-VarDecl 0x1221410b8 <col:2, col:12> col:6 used ret 'int' cinit
    |   `-IntegerLiteral 0x122141120 <col:12> 'int' 0
    |-DeclStmt 0x1221411d8 <line:6:2, col:13>
    | `-VarDecl 0x122141170 <col:2, col:7> col:7 used newblk 'int'
    |-IfStmt 0x122141338 <line:9:2, line:10:11>
    | |-UnaryOperator 0x122141278 <line:9:6, col:7> 'int' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x122141260 <col:7> 'char *' contains-errors <LValueToRValue>
    | |   `-DeclRefExpr 0x122141240 <col:7> 'char *' contains-errors lvalue Var 0x122140df0 'buf' 'char *'
    | `-ReturnStmt 0x122141328 <line:10:3, col:11>
    |   `-UnaryOperator 0x122141310 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x1221412f8 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x1221412d8 <col:11> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x1221415d8 <line:11:2, col:32> 'int' contains-errors '='
    | |-DeclRefExpr 0x122141358 <col:2> 'int' lvalue Var 0x1221410b8 'ret' 'int'
    | `-CallExpr 0x122141558 <col:8, col:32> 'int' contains-errors
    |   |-ImplicitCastExpr 0x122141540 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x122141458 <col:8> 'int ()' Function 0x1221413a0 'read_blk' 'int ()'
    |   |-ImplicitCastExpr 0x122141590 <col:17> 'struct qtree_mem_dqinfo *' <LValueToRValue>
    |   | `-DeclRefExpr 0x122141478 <col:17> 'struct qtree_mem_dqinfo *' lvalue ParmVar 0x122128648 'info' 'struct qtree_mem_dqinfo *'
    |   |-ImplicitCastExpr 0x1221415a8 <col:23, col:24> 'int' <LValueToRValue>
    |   | `-UnaryOperator 0x1221414d0 <col:23, col:24> 'int' lvalue prefix '*' cannot overflow
    |   |   `-ImplicitCastExpr 0x1221414b8 <col:24> 'int *' <LValueToRValue>
    |   |     `-DeclRefExpr 0x122141498 <col:24> 'int *' lvalue ParmVar 0x122140af8 'blk' 'int *'
    |   `-ImplicitCastExpr 0x1221415c0 <col:29> 'char *' contains-errors <LValueToRValue>
    |     `-DeclRefExpr 0x1221414e8 <col:29> 'char *' contains-errors lvalue Var 0x122140df0 'buf' 'char *'
    |-IfStmt 0x122141940 <line:12:2, line:16:2>
    | |-BinaryOperator 0x122141650 <line:12:6, col:12> 'int' '<'
    | | |-ImplicitCastExpr 0x122141638 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1221415f8 <col:6> 'int' lvalue Var 0x1221410b8 'ret' 'int'
    | | `-IntegerLiteral 0x122141618 <col:12> 'int' 0
    | `-CompoundStmt 0x122141920 <col:15, line:16:2>
    |   |-CallExpr 0x122141880 <line:13:3, line:14:12> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x122141750 <line:13:3> 'int ()' Function 0x122141698 'quota_error' 'int ()'
    |   | |-RecoveryExpr 0x1221417a8 <col:15, col:22> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x122141770 <col:15> 'struct dquot *' lvalue ParmVar 0x122140a28 'dquot' 'struct dquot *'
    |   | |-StringLiteral 0x122141810 <col:29> 'char[4]' lvalue "STR"
    |   | `-UnaryOperator 0x122141868 <line:14:8, col:9> 'int' lvalue prefix '*' cannot overflow
    |   |   `-ImplicitCastExpr 0x122141850 <col:9> 'int *' <LValueToRValue>
    |   |     `-DeclRefExpr 0x122141830 <col:9> 'int *' lvalue ParmVar 0x122140af8 'blk' 'int *'
    |   `-GotoStmt 0x122141908 <line:15:3, col:8> 'out_buf' 0x1221418b8
    |-BinaryOperator 0x122148348 <line:17:2, col:64> 'int' contains-errors '='
    | |-DeclRefExpr 0x122141960 <col:2> 'int' lvalue Var 0x122141170 'newblk' 'int'
    | `-CallExpr 0x122148320 <col:11, col:64> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1221480b8 <col:11> 'int ()' Function 0x122148000 'le32_to_cpu' 'int ()'
    |   `-ArraySubscriptExpr 0x122148300 <col:23, col:63> '<dependent type>' contains-errors lvalue
    |     |-ImplicitCastExpr 0x1221482e8 <col:23> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x1221482c8 <col:23> 'int' lvalue Var 0x1221410b8 'ret' 'int'
    |     `-CallExpr 0x122148290 <col:27, col:62> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x1221481d0 <col:27> 'int ()' Function 0x122148118 'get_index' 'int ()'
    |       |-DeclRefExpr 0x1221481f0 <col:37> 'struct qtree_mem_dqinfo *' lvalue ParmVar 0x122128648 'info' 'struct qtree_mem_dqinfo *'
    |       |-RecoveryExpr 0x122148248 <col:43, col:50> '<dependent type>' contains-errors lvalue
    |       | `-DeclRefExpr 0x122148210 <col:43> 'struct dquot *' lvalue ParmVar 0x122140a28 'dquot' 'struct dquot *'
    |       `-DeclRefExpr 0x122148270 <col:57> 'int' lvalue ParmVar 0x122140b78 'depth' 'int'
    |-IfStmt 0x122148950 <line:18:2, line:23:2> has_else
    | |-BinaryOperator 0x122148428 <line:18:6, col:39> 'int' contains-errors '=='
    | | |-DeclRefExpr 0x122148368 <col:6> 'int' lvalue ParmVar 0x122140b78 'depth' 'int'
    | | `-BinaryOperator 0x122148408 <col:15, col:39> '<dependent type>' contains-errors '-'
    | |   |-RecoveryExpr 0x1221483c0 <col:15, col:21> '<dependent type>' contains-errors lvalue
    | |   | `-DeclRefExpr 0x122148388 <col:15> 'struct qtree_mem_dqinfo *' lvalue ParmVar 0x122128648 'info' 'struct qtree_mem_dqinfo *'
    | |   `-IntegerLiteral 0x1221483e8 <col:39> 'int' 1
    | |-CompoundStmt 0x1221486e0 <col:42, line:21:2>
    | | |-BinaryOperator 0x122148660 <line:19:3, col:41> 'int' '='
    | | | |-DeclRefExpr 0x122148448 <col:3> 'int' lvalue Var 0x1221410b8 'ret' 'int'
    | | | `-CallExpr 0x1221485e0 <col:9, col:41> 'int'
    | | |   |-ImplicitCastExpr 0x1221485c8 <col:9> 'int (*)()' <FunctionToPointerDecay>
    | | |   | `-DeclRefExpr 0x122148548 <col:9> 'int ()' Function 0x122148490 'free_dqentry' 'int ()'
    | | |   |-ImplicitCastExpr 0x122148618 <col:22> 'struct qtree_mem_dqinfo *' <LValueToRValue>
    | | |   | `-DeclRefExpr 0x122148568 <col:22> 'struct qtree_mem_dqinfo *' lvalue ParmVar 0x122128648 'info' 'struct qtree_mem_dqinfo *'
    | | |   |-ImplicitCastExpr 0x122148630 <col:28> 'struct dquot *' <LValueToRValue>
    | | |   | `-DeclRefExpr 0x122148588 <col:28> 'struct dquot *' lvalue ParmVar 0x122140a28 'dquot' 'struct dquot *'
    | | |   `-ImplicitCastExpr 0x122148648 <col:35> 'int' <LValueToRValue>
    | | |     `-DeclRefExpr 0x1221485a8 <col:35> 'int' lvalue Var 0x122141170 'newblk' 'int'
    | | `-BinaryOperator 0x1221486c0 <line:20:3, col:12> 'int' '='
    | |   |-DeclRefExpr 0x122148680 <col:3> 'int' lvalue Var 0x122141170 'newblk' 'int'
    | |   `-IntegerLiteral 0x1221486a0 <col:12> 'int' 0
    | `-CompoundStmt 0x122148938 <line:21:9, line:23:2>
    |   `-BinaryOperator 0x122148918 <line:22:3, col:50> 'int' '='
    |     |-DeclRefExpr 0x122148700 <col:3> 'int' lvalue Var 0x1221410b8 'ret' 'int'
    |     `-CallExpr 0x1221488a8 <col:9, col:50> 'int'
    |       |-ImplicitCastExpr 0x122148890 <col:9> 'int (*)(struct qtree_mem_dqinfo *, struct dquot *, int *, int)' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x122148720 <col:9> 'int (struct qtree_mem_dqinfo *, struct dquot *, int *, int)' Function 0x122140cc8 'remove_tree' 'int (struct qtree_mem_dqinfo *, struct dquot *, int *, int)'
    |       |-ImplicitCastExpr 0x1221488e8 <col:21> 'struct qtree_mem_dqinfo *' <LValueToRValue>
    |       | `-DeclRefExpr 0x122148740 <col:21> 'struct qtree_mem_dqinfo *' lvalue ParmVar 0x122128648 'info' 'struct qtree_mem_dqinfo *'
    |       |-ImplicitCastExpr 0x122148900 <col:27> 'struct dquot *' <LValueToRValue>
    |       | `-DeclRefExpr 0x122148760 <col:27> 'struct dquot *' lvalue ParmVar 0x122140a28 'dquot' 'struct dquot *'
    |       |-UnaryOperator 0x1221487a0 <col:34, col:35> 'int *' prefix '&' cannot overflow
    |       | `-DeclRefExpr 0x122148780 <col:35> 'int' lvalue Var 0x122141170 'newblk' 'int'
    |       `-BinaryOperator 0x122148810 <col:43, col:49> 'int' '+'
    |         |-ImplicitCastExpr 0x1221487f8 <col:43> 'int' <LValueToRValue>
    |         | `-DeclRefExpr 0x1221487b8 <col:43> 'int' lvalue ParmVar 0x122140b78 'depth' 'int'
    |         `-IntegerLiteral 0x1221487d8 <col:49> 'int' 1
    |-IfStmt 0x122149890 <line:24:2, line:42:2>
    | |-BinaryOperator 0x122148a48 <line:24:6, col:19> 'int' '&&'
    | | |-BinaryOperator 0x1221489d8 <col:6, col:13> 'int' '>='
    | | | |-ImplicitCastExpr 0x1221489c0 <col:6> 'int' <LValueToRValue>
    | | | | `-DeclRefExpr 0x122148980 <col:6> 'int' lvalue Var 0x1221410b8 'ret' 'int'
    | | | `-IntegerLiteral 0x1221489a0 <col:13> 'int' 0
    | | `-UnaryOperator 0x122148a30 <col:18, col:19> 'int' prefix '!' cannot overflow
    | |   `-ImplicitCastExpr 0x122148a18 <col:19> 'int' <LValueToRValue>
    | |     `-DeclRefExpr 0x1221489f8 <col:19> 'int' lvalue Var 0x122141170 'newblk' 'int'
    | `-CompoundStmt 0x122149868 <col:27, line:42:2>
    |   |-DeclStmt 0x122148ae8 <line:25:3, col:8>
    |   | `-VarDecl 0x122148a80 <col:3, col:7> col:7 used i 'int'
    |   |-BinaryOperator 0x122148db0 <line:26:3, col:60> '<dependent type>' contains-errors '='
    |   | |-ArraySubscriptExpr 0x122148c30 <col:3, col:43> '<dependent type>' contains-errors lvalue
    |   | | |-ImplicitCastExpr 0x122148c18 <col:3> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x122148b00 <col:3> 'int' lvalue Var 0x1221410b8 'ret' 'int'
    |   | | `-CallExpr 0x122148be0 <col:7, col:42> '<dependent type>' contains-errors
    |   | |   |-DeclRefExpr 0x122148b20 <col:7> 'int ()' Function 0x122148118 'get_index' 'int ()'
    |   | |   |-DeclRefExpr 0x122148b40 <col:17> 'struct qtree_mem_dqinfo *' lvalue ParmVar 0x122128648 'info' 'struct qtree_mem_dqinfo *'
    |   | |   |-RecoveryExpr 0x122148b98 <col:23, col:30> '<dependent type>' contains-errors lvalue
    |   | |   | `-DeclRefExpr 0x122148b60 <col:23> 'struct dquot *' lvalue ParmVar 0x122140a28 'dquot' 'struct dquot *'
    |   | |   `-DeclRefExpr 0x122148bc0 <col:37> 'int' lvalue ParmVar 0x122140b78 'depth' 'int'
    |   | `-CallExpr 0x122148d88 <col:47, col:60> 'int'
    |   |   |-ImplicitCastExpr 0x122148d70 <col:47> 'int (*)()' <FunctionToPointerDecay>
    |   |   | `-DeclRefExpr 0x122148d30 <col:47> 'int ()' Function 0x122148c78 'cpu_to_le32' 'int ()'
    |   |   `-IntegerLiteral 0x122148d50 <col:59> 'int' 0
    |   `-IfStmt 0x122149838 <line:31:3, line:41:3> has_else
    |     |-RecoveryExpr 0x1221490f8 <line:31:7, line:32:18> '_Bool' contains-errors
    |     |-CompoundStmt 0x1221493d0 <col:30, line:35:3>
    |     | |-CallExpr 0x1221492c0 <line:33:4, col:34> 'int' contains-errors
    |     | | |-ImplicitCastExpr 0x1221492a8 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |     | | | `-DeclRefExpr 0x1221491f8 <col:4> 'int ()' Function 0x122149140 'put_free_dqblk' 'int ()'
    |     | | |-ImplicitCastExpr 0x1221492f8 <col:19> 'struct qtree_mem_dqinfo *' <LValueToRValue>
    |     | | | `-DeclRefExpr 0x122149218 <col:19> 'struct qtree_mem_dqinfo *' lvalue ParmVar 0x122128648 'info' 'struct qtree_mem_dqinfo *'
    |     | | |-ImplicitCastExpr 0x122149310 <col:25> 'char *' contains-errors <LValueToRValue>
    |     | | | `-DeclRefExpr 0x122149238 <col:25> 'char *' contains-errors lvalue Var 0x122140df0 'buf' 'char *'
    |     | | `-ImplicitCastExpr 0x122149328 <col:30, col:31> 'int' <LValueToRValue>
    |     | |   `-UnaryOperator 0x122149290 <col:30, col:31> 'int' lvalue prefix '*' cannot overflow
    |     | |     `-ImplicitCastExpr 0x122149278 <col:31> 'int *' <LValueToRValue>
    |     | |       `-DeclRefExpr 0x122149258 <col:31> 'int *' lvalue ParmVar 0x122140af8 'blk' 'int *'
    |     | `-BinaryOperator 0x1221493b0 <line:34:4, col:11> 'int' '='
    |     |   |-UnaryOperator 0x122149378 <col:4, col:5> 'int' lvalue prefix '*' cannot overflow
    |     |   | `-ImplicitCastExpr 0x122149360 <col:5> 'int *' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x122149340 <col:5> 'int *' lvalue ParmVar 0x122140af8 'blk' 'int *'
    |     |   `-IntegerLiteral 0x122149390 <col:11> 'int' 0
    |     `-CompoundStmt 0x122149818 <line:35:10, line:41:3>
    |       |-BinaryOperator 0x122149638 <line:36:4, col:35> 'int' contains-errors '='
    |       | |-DeclRefExpr 0x1221493f0 <col:4> 'int' lvalue Var 0x1221410b8 'ret' 'int'
    |       | `-CallExpr 0x1221495b8 <col:10, col:35> 'int' contains-errors
    |       |   |-ImplicitCastExpr 0x1221495a0 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |       |   | `-DeclRefExpr 0x1221494f0 <col:10> 'int ()' Function 0x122149438 'write_blk' 'int ()'
    |       |   |-ImplicitCastExpr 0x1221495f0 <col:20> 'struct qtree_mem_dqinfo *' <LValueToRValue>
    |       |   | `-DeclRefExpr 0x122149510 <col:20> 'struct qtree_mem_dqinfo *' lvalue ParmVar 0x122128648 'info' 'struct qtree_mem_dqinfo *'
    |       |   |-ImplicitCastExpr 0x122149608 <col:26, col:27> 'int' <LValueToRValue>
    |       |   | `-UnaryOperator 0x122149568 <col:26, col:27> 'int' lvalue prefix '*' cannot overflow
    |       |   |   `-ImplicitCastExpr 0x122149550 <col:27> 'int *' <LValueToRValue>
    |       |   |     `-DeclRefExpr 0x122149530 <col:27> 'int *' lvalue ParmVar 0x122140af8 'blk' 'int *'
    |       |   `-ImplicitCastExpr 0x122149620 <col:32> 'char *' contains-errors <LValueToRValue>
    |       |     `-DeclRefExpr 0x122149580 <col:32> 'char *' contains-errors lvalue Var 0x122140df0 'buf' 'char *'
    |       `-IfStmt 0x1221497f8 <line:37:4, line:40:14>
    |         |-BinaryOperator 0x1221496b0 <line:37:8, col:14> 'int' '<'
    |         | |-ImplicitCastExpr 0x122149698 <col:8> 'int' <LValueToRValue>
    |         | | `-DeclRefExpr 0x122149658 <col:8> 'int' lvalue Var 0x1221410b8 'ret' 'int'
    |         | `-IntegerLiteral 0x122149678 <col:14> 'int' 0
    |         `-CallExpr 0x1221497c0 <line:38:5, line:40:14> '<dependent type>' contains-errors
    |           |-DeclRefExpr 0x1221496d0 <line:38:5> 'int ()' Function 0x122141698 'quota_error' 'int ()'
    |           |-RecoveryExpr 0x122149728 <col:17, col:24> '<dependent type>' contains-errors lvalue
    |           | `-DeclRefExpr 0x1221496f0 <col:17> 'struct dquot *' lvalue ParmVar 0x122140a28 'dquot' 'struct dquot *'
    |           |-StringLiteral 0x122149750 <line:39:10> 'char[4]' lvalue "STR"
    |           `-UnaryOperator 0x1221497a8 <line:40:10, col:11> 'int' lvalue prefix '*' cannot overflow
    |             `-ImplicitCastExpr 0x122149790 <col:11> 'int *' <LValueToRValue>
    |               `-DeclRefExpr 0x122149770 <col:11> 'int *' lvalue ParmVar 0x122140af8 'blk' 'int *'
    |-LabelStmt 0x122149a28 <line:43:1, line:44:11> 'out_buf'
    | `-CallExpr 0x1221499e8 <col:2, col:11> 'int' contains-errors
    |   |-ImplicitCastExpr 0x1221499d0 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x122149990 <col:2> 'int ()' Function 0x1221498d8 'kfree' 'int ()'
    |   `-ImplicitCastExpr 0x122149a10 <col:8> 'char *' contains-errors <LValueToRValue>
    |     `-DeclRefExpr 0x1221499b0 <col:8> 'char *' contains-errors lvalue Var 0x122140df0 'buf' 'char *'
    `-ReturnStmt 0x122149a80 <line:45:2, col:9>
      `-ImplicitCastExpr 0x122149a68 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x122149a48 <col:9> 'int' lvalue Var 0x1221410b8 'ret' 'int'
