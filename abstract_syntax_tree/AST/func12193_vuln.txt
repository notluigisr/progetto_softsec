TranslationUnitDecl 0x132055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1320564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x132055bd0 '__int128'
|-TypedefDecl 0x132056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x132055bf0 'unsigned __int128'
|-TypedefDecl 0x132126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x132126000 'struct __NSConstantString_tag'
|   `-Record 0x132056580 '__NSConstantString_tag'
|-TypedefDecl 0x132126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x132055d90 '__SVInt8_t'
|-TypedefDecl 0x132126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x132055db0 '__SVInt16_t'
|-TypedefDecl 0x132126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x132055dd0 '__SVInt32_t'
|-TypedefDecl 0x1321263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x132055df0 '__SVInt64_t'
|-TypedefDecl 0x132126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x132055e10 '__SVUint8_t'
|-TypedefDecl 0x1321264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x132055e30 '__SVUint16_t'
|-TypedefDecl 0x132126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x132055e50 '__SVUint32_t'
|-TypedefDecl 0x132126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x132055e70 '__SVUint64_t'
|-TypedefDecl 0x1321265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x132055e90 '__SVFloat16_t'
|-TypedefDecl 0x132126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x132055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1321266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x132055ed0 '__SVFloat64_t'
|-TypedefDecl 0x132126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x132055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x132126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x132055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1321267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x132055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x132126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x132055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1321268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x132055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x132126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x132055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x132126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x132055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1321269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x132055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x132126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x132055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x132126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x132056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x132126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x132056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x132126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x132056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x132126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x132056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x132126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x132056090 '__clang_svint8x3_t'
|-TypedefDecl 0x132126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1320560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x132126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1320560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x132126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1320560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x132126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x132056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x132126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x132056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x132126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x132056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x132126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x132056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x132126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x132056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x132127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1320561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x132127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1320561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1321278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1320561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x132127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x132056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1321279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x132056230 '__clang_svint16x4_t'
|-TypedefDecl 0x132127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x132056250 '__clang_svint32x4_t'
|-TypedefDecl 0x132127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x132056270 '__clang_svint64x4_t'
|-TypedefDecl 0x132127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x132056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x132127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1320562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x132127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1320562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x132127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1320562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x132127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x132056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x132127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x132056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x132127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x132056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x132127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x132056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x132127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x132056390 '__SVBool_t'
|-TypedefDecl 0x132127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1320563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x132127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1320563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x132127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1320563f0 '__SVCount_t'
|-TypedefDecl 0x132127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x132127fb0 'char *'
|   `-BuiltinType 0x1320556b0 'char'
|-TypedefDecl 0x132128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x132127fb0 'char *'
|   `-BuiltinType 0x1320556b0 'char'
|-FunctionDecl 0x132141a38 <dataset_diviso_filec/func12193_vuln.c:1:1, line:55:1> line:1:1 invalid decrypt_response 'int (struct sc_card *, unsigned char *, int, unsigned char *, int *)'
| |-ParmVarDecl 0x132128648 <col:18, col:34> col:34 used card 'struct sc_card *'
| |-ParmVarDecl 0x1321286f8 <col:40, col:55> col:55 used in 'unsigned char *'
| |-ParmVarDecl 0x132128790 <col:59, col:66> col:66 invalid inlen 'int'
| |-ParmVarDecl 0x132141818 <col:73, col:88> col:88 used out 'unsigned char *'
| |-ParmVarDecl 0x1321418c8 <col:93, col:102> col:102 invalid out_len 'int *'
| `-CompoundStmt 0x133809688 <line:2:1, line:55:1>
|   |-UnaryExprOrTypeTraitExpr 0x132141b60 <line:3:2, col:9> 'unsigned long' contains-errors sizeof
|   | `-RecoveryExpr 0x132141b40 <col:9> '<dependent type>' contains-errors lvalue
|   |-UnaryExprOrTypeTraitExpr 0x132141bd8 <line:4:2, col:9> 'unsigned long' contains-errors sizeof
|   | `-RecoveryExpr 0x132141bb8 <col:9> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x132141df8 <line:5:2, col:30>
|   | `-VarDecl 0x132141ca8 <col:2, col:29> col:16 used iv 'unsigned char[16]' cinit
|   |   `-InitListExpr 0x132141d88 <col:25, col:29> 'unsigned char[16]'
|   |     |-array_filler: ImplicitValueInitExpr 0x132141de8 <<invalid sloc>> 'unsigned char'
|   |     `-ImplicitCastExpr 0x132141dc8 <col:27> 'unsigned char' <IntegralCast>
|   |       `-IntegerLiteral 0x132141d10 <col:27> 'int' 0
|   |-DeclStmt 0x132142008 <line:6:2, col:39>
|   | `-VarDecl 0x132141eb8 <col:2, col:38> col:16 used plaintext 'unsigned char[4096]' cinit
|   |   `-InitListExpr 0x132141f98 <col:34, col:38> 'unsigned char[4096]'
|   |     |-array_filler: ImplicitValueInitExpr 0x132141ff8 <<invalid sloc>> 'unsigned char'
|   |     `-ImplicitCastExpr 0x132141fd8 <col:36> 'unsigned char' <IntegralCast>
|   |       `-IntegerLiteral 0x132141f20 <col:36> 'int' 0
|   |-IfStmt 0x132142128 <line:9:2, line:10:10>
|   | |-UnaryOperator 0x1321420c8 <line:9:6, col:13> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x1321420b0 <col:7, col:13> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x132142088 <col:7, col:13> '<dependent type>' contains-errors lvalue
|   | |     `-DeclRefExpr 0x132142050 <col:7> 'struct sc_card *' lvalue ParmVar 0x132128648 'card' 'struct sc_card *'
|   | `-ReturnStmt 0x132142118 <line:10:3, col:10>
|   |   `-RecoveryExpr 0x1321420f8 <col:10> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x132142278 <line:15:2, line:16:10>
|   | |-BinaryOperator 0x132142228 <line:15:6, col:15> 'int' '=='
|   | | |-ImplicitCastExpr 0x132142210 <col:6, col:10> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x1321421f8 <col:6, col:10> 'unsigned char' <LValueToRValue>
|   | | |   `-ArraySubscriptExpr 0x1321421b8 <col:6, col:10> 'unsigned char' lvalue
|   | | |     |-ImplicitCastExpr 0x1321421a0 <col:6> 'unsigned char *' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x132142160 <col:6> 'unsigned char *' lvalue ParmVar 0x1321286f8 'in' 'unsigned char *'
|   | | |     `-IntegerLiteral 0x132142180 <col:9> 'int' 0
|   | | `-IntegerLiteral 0x1321421d8 <col:15> 'int' 153
|   | `-ReturnStmt 0x132142268 <line:16:3, col:10>
|   |   `-IntegerLiteral 0x132142248 <col:10> 'int' 0
|   |-IfStmt 0x133808c20 <line:19:2, line:34:2> has_else
|   | |-BinaryOperator 0x132142468 <line:19:6, col:35> 'int' '&&'
|   | | |-BinaryOperator 0x132142360 <col:6, col:18> 'int' '=='
|   | | | |-IntegerLiteral 0x132142298 <col:6> 'int' 1
|   | | | `-ImplicitCastExpr 0x132142348 <col:14, col:18> 'int' <IntegralCast>
|   | | |   `-ImplicitCastExpr 0x132142330 <col:14, col:18> 'unsigned char' <LValueToRValue>
|   | | |     `-ArraySubscriptExpr 0x132142310 <col:14, col:18> 'unsigned char' lvalue
|   | | |       |-ImplicitCastExpr 0x1321422f8 <col:14> 'unsigned char *' <LValueToRValue>
|   | | |       | `-DeclRefExpr 0x1321422b8 <col:14> 'unsigned char *' lvalue ParmVar 0x1321286f8 'in' 'unsigned char *'
|   | | |       `-IntegerLiteral 0x1321422d8 <col:17> 'int' 2
|   | | `-BinaryOperator 0x132142448 <col:23, col:35> 'int' '!='
|   | |   |-IntegerLiteral 0x132142380 <col:23> 'int' 130
|   | |   `-ImplicitCastExpr 0x132142430 <col:31, col:35> 'int' <IntegralCast>
|   | |     `-ImplicitCastExpr 0x132142418 <col:31, col:35> 'unsigned char' <LValueToRValue>
|   | |       `-ArraySubscriptExpr 0x1321423f8 <col:31, col:35> 'unsigned char' lvalue
|   | |         |-ImplicitCastExpr 0x1321423e0 <col:31> 'unsigned char *' <LValueToRValue>
|   | |         | `-DeclRefExpr 0x1321423a0 <col:31> 'unsigned char *' lvalue ParmVar 0x1321286f8 'in' 'unsigned char *'
|   | |         `-IntegerLiteral 0x1321423c0 <col:34> 'int' 1
|   | |-CompoundStmt 0x132142520 <col:38, line:22:2>
|   | `-IfStmt 0x133808bf0 <line:23:7, line:34:2> has_else
|   |   |-BinaryOperator 0x132142700 <line:23:11, col:40> 'int' '&&'
|   |   | |-BinaryOperator 0x1321425f8 <col:11, col:23> 'int' '=='
|   |   | | |-IntegerLiteral 0x132142530 <col:11> 'int' 1
|   |   | | `-ImplicitCastExpr 0x1321425e0 <col:19, col:23> 'int' <IntegralCast>
|   |   | |   `-ImplicitCastExpr 0x1321425c8 <col:19, col:23> 'unsigned char' <LValueToRValue>
|   |   | |     `-ArraySubscriptExpr 0x1321425a8 <col:19, col:23> 'unsigned char' lvalue
|   |   | |       |-ImplicitCastExpr 0x132142590 <col:19> 'unsigned char *' <LValueToRValue>
|   |   | |       | `-DeclRefExpr 0x132142550 <col:19> 'unsigned char *' lvalue ParmVar 0x1321286f8 'in' 'unsigned char *'
|   |   | |       `-IntegerLiteral 0x132142570 <col:22> 'int' 3
|   |   | `-BinaryOperator 0x1321426e0 <col:28, col:40> 'int' '=='
|   |   |   |-IntegerLiteral 0x132142618 <col:28> 'int' 129
|   |   |   `-ImplicitCastExpr 0x1321426c8 <col:36, col:40> 'int' <IntegralCast>
|   |   |     `-ImplicitCastExpr 0x1321426b0 <col:36, col:40> 'unsigned char' <LValueToRValue>
|   |   |       `-ArraySubscriptExpr 0x132142690 <col:36, col:40> 'unsigned char' lvalue
|   |   |         |-ImplicitCastExpr 0x132142678 <col:36> 'unsigned char *' <LValueToRValue>
|   |   |         | `-DeclRefExpr 0x132142638 <col:36> 'unsigned char *' lvalue ParmVar 0x1321286f8 'in' 'unsigned char *'
|   |   |         `-IntegerLiteral 0x132142658 <col:39> 'int' 1
|   |   |-CompoundStmt 0x1321427b8 <col:43, line:26:2>
|   |   `-IfStmt 0x133808bc0 <line:27:7, line:34:2> has_else
|   |     |-BinaryOperator 0x1338089b0 <line:27:11, col:40> 'int' '&&'
|   |     | |-BinaryOperator 0x1338088a8 <col:11, col:23> 'int' '=='
|   |     | | |-IntegerLiteral 0x1321427c8 <col:11> 'int' 1
|   |     | | `-ImplicitCastExpr 0x133808890 <col:19, col:23> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x133808878 <col:19, col:23> 'unsigned char' <LValueToRValue>
|   |     | |     `-ArraySubscriptExpr 0x133808858 <col:19, col:23> 'unsigned char' lvalue
|   |     | |       |-ImplicitCastExpr 0x133808840 <col:19> 'unsigned char *' <LValueToRValue>
|   |     | |       | `-DeclRefExpr 0x133808800 <col:19> 'unsigned char *' lvalue ParmVar 0x1321286f8 'in' 'unsigned char *'
|   |     | |       `-IntegerLiteral 0x133808820 <col:22> 'int' 4
|   |     | `-BinaryOperator 0x133808990 <col:28, col:40> 'int' '=='
|   |     |   |-IntegerLiteral 0x1338088c8 <col:28> 'int' 130
|   |     |   `-ImplicitCastExpr 0x133808978 <col:36, col:40> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x133808960 <col:36, col:40> 'unsigned char' <LValueToRValue>
|   |     |       `-ArraySubscriptExpr 0x133808940 <col:36, col:40> 'unsigned char' lvalue
|   |     |         |-ImplicitCastExpr 0x133808928 <col:36> 'unsigned char *' <LValueToRValue>
|   |     |         | `-DeclRefExpr 0x1338088e8 <col:36> 'unsigned char *' lvalue ParmVar 0x1321286f8 'in' 'unsigned char *'
|   |     |         `-IntegerLiteral 0x133808908 <col:39> 'int' 1
|   |     |-CompoundStmt 0x133808b50 <col:43, line:31:2>
|   |     `-CompoundStmt 0x133808ba8 <line:32:7, line:34:2>
|   |       `-ReturnStmt 0x133808b98 <line:33:3, col:11>
|   |         `-UnaryOperator 0x133808b80 <col:10, col:11> 'int' prefix '-'
|   |           `-IntegerLiteral 0x133808b60 <col:11> 'int' 1
|   |-IfStmt 0x133808d38 <line:36:2, line:37:11>
|   | |-RecoveryExpr 0x133808cd0 <line:36:6, col:68> '_Bool' contains-errors
|   | `-ReturnStmt 0x133808d28 <line:37:3, col:11>
|   |   `-UnaryOperator 0x133808d10 <col:10, col:11> 'int' prefix '-'
|   |     `-IntegerLiteral 0x133808cf0 <col:11> 'int' 1
|   |-IfStmt 0x133809278 <line:49:2, line:50:11>
|   | |-RecoveryExpr 0x133809210 <line:49:6, col:11> '_Bool' contains-errors
|   | `-ReturnStmt 0x133809268 <line:50:3, col:11>
|   |   `-UnaryOperator 0x133809250 <col:10, col:11> 'int' prefix '-'
|   |     `-IntegerLiteral 0x133809230 <col:11> 'int' 1
|   `-ReturnStmt 0x133809678 <line:54:2, col:9>
|     `-IntegerLiteral 0x133809658 <col:9> 'int' 0
`-FunctionDecl 0x133809318 <line:52:2> col:2 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x133809418 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x133809480 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x1338094e8 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x1338093c0 <<invalid sloc>> Implicit 882
