TranslationUnitDecl 0x120055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1200564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x120055bd0 '__int128'
|-TypedefDecl 0x120056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x120055bf0 'unsigned __int128'
|-TypedefDecl 0x120126c30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x120126a00 'struct __NSConstantString_tag'
|   `-Record 0x120056580 '__NSConstantString_tag'
|-TypedefDecl 0x120126c98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x120055d90 '__SVInt8_t'
|-TypedefDecl 0x120126d00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x120055db0 '__SVInt16_t'
|-TypedefDecl 0x120126d68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x120055dd0 '__SVInt32_t'
|-TypedefDecl 0x120126dd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x120055df0 '__SVInt64_t'
|-TypedefDecl 0x120126e38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x120055e10 '__SVUint8_t'
|-TypedefDecl 0x120126ea0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x120055e30 '__SVUint16_t'
|-TypedefDecl 0x120126f08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x120055e50 '__SVUint32_t'
|-TypedefDecl 0x120126f70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x120055e70 '__SVUint64_t'
|-TypedefDecl 0x120126fd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x120055e90 '__SVFloat16_t'
|-TypedefDecl 0x120127040 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x120055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1201270a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x120055ed0 '__SVFloat64_t'
|-TypedefDecl 0x120127110 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x120055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x120127178 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x120055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1201271e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x120055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x120127248 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x120055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1201272b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x120055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x120127318 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x120055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x120127380 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x120055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1201273e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x120055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x120127450 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x120055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1201274b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x120056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x120127520 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x120056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x120127588 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x120056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1201275f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x120056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x120127658 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x120056090 '__clang_svint8x3_t'
|-TypedefDecl 0x1201276c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1200560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x120127728 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1200560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x120127790 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1200560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x1201277f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x120056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x120127860 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x120056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x1201278c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x120056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x120127930 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x120056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x120127998 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x120056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x120128200 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1200561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x120128268 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1200561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1201282d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1200561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x120128338 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x120056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1201283a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x120056230 '__clang_svint16x4_t'
|-TypedefDecl 0x120128408 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x120056250 '__clang_svint32x4_t'
|-TypedefDecl 0x120128470 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x120056270 '__clang_svint64x4_t'
|-TypedefDecl 0x1201284d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x120056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x120128540 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1200562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1201285a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1200562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x120128610 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1200562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x120128678 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x120056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1201286e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x120056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x120128748 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x120056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1201287b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x120056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x120128818 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x120056390 '__SVBool_t'
|-TypedefDecl 0x120128880 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1200563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1201288e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1200563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x120128950 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1200563f0 '__SVCount_t'
|-TypedefDecl 0x1201289f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1201289b0 'char *'
|   `-BuiltinType 0x1200556b0 'char'
|-TypedefDecl 0x120128a68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1201289b0 'char *'
|   `-BuiltinType 0x1200556b0 'char'
|-FunctionDecl 0x120128d48 <dataset_diviso_filec/func1553_vuln.c:1:1, line:76:1> line:1:1 invalid parse_option 'int (const char *, int **, char)'
| |-ParmVarDecl 0x120128ad8 <col:14, col:26> col:26 used origin 'const char *'
| |-ParmVarDecl 0x120128be0 <col:34, col:50> col:50 invalid stmt 'int **'
| |-ParmVarDecl 0x120128c58 <col:56, col:61> col:61 used delm 'char'
| `-CompoundStmt 0x120144888 <line:2:1, line:76:1>
|   |-DeclStmt 0x120128e88 <line:3:3, col:15>
|   | `-VarDecl 0x120128e20 <col:3, col:9> col:9 used retstr 'char *'
|   |-DeclStmt 0x120128f98 <line:4:3, col:28>
|   | `-VarDecl 0x120128eb8 <col:3, col:22> col:9 used ptr 'char *' cinit
|   |   `-CStyleCastExpr 0x120128f70 <col:14, col:22> 'char *' <NoOp>
|   |     `-ImplicitCastExpr 0x120128f58 <col:22> 'const char *' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0x120128f20 <col:22> 'const char *' lvalue ParmVar 0x120128ad8 'origin' 'const char *'
|   |-RecoveryExpr 0x103808e80 <line:7:3, col:31> '<dependent type>' contains-errors lvalue
|   | |-UnaryExprOrTypeTraitExpr 0x103808df0 <col:3, col:10> 'unsigned long' contains-errors sizeof
|   | | `-RecoveryExpr 0x103808dd0 <col:10> '<dependent type>' contains-errors lvalue
|   | `-CallExpr 0x103808e40 <col:18, col:31> 'unsigned long'
|   |   |-ImplicitCastExpr 0x103808e28 <col:18> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x103808ca0 <col:18> 'unsigned long (const char *)' Function 0x103808b30 'strlen' 'unsigned long (const char *)'
|   |   `-ImplicitCastExpr 0x103808e68 <col:25> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x103808cc0 <col:25> 'const char *' lvalue ParmVar 0x120128ad8 'origin' 'const char *'
|   |-DeclStmt 0x103808f50 <line:8:3, col:16>
|   | `-VarDecl 0x103808ec8 <col:3, col:15> col:8 used count 'int' cinit
|   |   `-IntegerLiteral 0x103808f30 <col:15> 'int' 0
|   |-ForStmt 0x1201440f8 <line:10:3, line:46:3>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-ParenExpr 0x1038093f8 <line:12:8, col:34> 'char *'
|   | | `-BinaryOperator 0x1038093d8 <col:9, col:33> 'char *' '='
|   | |   |-DeclRefExpr 0x103809030 <col:9> 'char *' lvalue Var 0x120128e20 'retstr' 'char *'
|   | |   `-CallExpr 0x103809348 <col:17, col:33> 'char *'
|   | |     |-ImplicitCastExpr 0x103809330 <col:17> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   | |     | `-DeclRefExpr 0x103809270 <col:17> 'char *(const char *, int)' Function 0x103809090 'strchr' 'char *(const char *, int)'
|   | |     |-ImplicitCastExpr 0x103809390 <col:24> 'const char *' <NoOp>
|   | |     | `-ImplicitCastExpr 0x103809378 <col:24> 'char *' <LValueToRValue>
|   | |     |   `-DeclRefExpr 0x103809290 <col:24> 'char *' lvalue Var 0x120128eb8 'ptr' 'char *'
|   | |     `-ImplicitCastExpr 0x1038093c0 <col:29> 'int' <IntegralCast>
|   | |       `-ImplicitCastExpr 0x1038093a8 <col:29> 'char' <LValueToRValue>
|   | |         `-DeclRefExpr 0x1038092b0 <col:29> 'char' lvalue ParmVar 0x120128c58 'delm' 'char'
|   | |-<<<NULL>>>
|   | `-CompoundStmt 0x1201440b0 <line:16:3, line:46:3>
|   |   |-DeclStmt 0x103809508 <line:17:5, col:36>
|   |   | `-VarDecl 0x1038094a0 <col:5, col:10> col:10 invalid buffer 'char'
|   |   |-DeclStmt 0x1038095a0 <line:18:5, col:21>
|   |   | `-VarDecl 0x103809538 <col:5, col:11> col:11 used buffer_ptr 'char *'
|   |   |-UnaryOperator 0x1038095d8 <line:20:5, col:10> 'int' postfix '++'
|   |   | `-DeclRefExpr 0x1038095b8 <col:5> 'int' lvalue Var 0x103808ec8 'count' 'int'
|   |   |-IfStmt 0x120143ba0 <line:22:5, line:40:5> has_else
|   |   | |-ParenExpr 0x1201434b8 <line:22:9, col:41> 'char *' contains-errors
|   |   | | `-BinaryOperator 0x120143498 <col:10, col:40> 'char *' contains-errors '='
|   |   | |   |-DeclRefExpr 0x1201433d8 <col:10> 'char *' lvalue Var 0x103809538 'buffer_ptr' 'char *'
|   |   | |   `-CallExpr 0x120143468 <col:22, col:40> '<dependent type>' contains-errors
|   |   | |     |-DeclRefExpr 0x1201433f8 <col:22> 'char *(const char *, int)' Function 0x103809090 'strchr' 'char *(const char *, int)'
|   |   | |     |-RecoveryExpr 0x120143418 <col:29> '<dependent type>' contains-errors lvalue
|   |   | |     `-CharacterLiteral 0x120143438 <col:37> 'int' 58
|   |   | |-CompoundStmt 0x1201439f8 <line:23:5, line:35:5>
|   |   | | `-DeclStmt 0x120143558 <line:24:7, col:23>
|   |   | |   `-VarDecl 0x1201434f0 <col:7, col:13> col:13 used option_ptr 'char *'
|   |   | `-CompoundStmt 0x120143b90 <line:37:5, line:40:5>
|   |   |-CompoundAssignOperator 0x120143cd8 <line:42:5, col:26> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
|   |   | |-DeclRefExpr 0x120143bd0 <col:5> 'char *' lvalue Var 0x120128eb8 'ptr' 'char *'
|   |   | `-BinaryOperator 0x120143cb8 <col:11, col:26> 'long' '+'
|   |   |   |-BinaryOperator 0x120143c60 <col:11, col:20> 'long' '-'
|   |   |   | |-ImplicitCastExpr 0x120143c30 <col:11> 'char *' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x120143bf0 <col:11> 'char *' lvalue Var 0x120128e20 'retstr' 'char *'
|   |   |   | `-ImplicitCastExpr 0x120143c48 <col:20> 'char *' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x120143c10 <col:20> 'char *' lvalue Var 0x120128eb8 'ptr' 'char *'
|   |   |   `-ImplicitCastExpr 0x120143ca0 <col:26> 'long' <IntegralCast>
|   |   |     `-IntegerLiteral 0x120143c80 <col:26> 'int' 1
|   |   |-IfStmt 0x120144058 <line:43:5, line:44:10>
|   |   | |-CallExpr 0x120143fc8 <line:43:9, col:21> 'int'
|   |   | | |-ImplicitCastExpr 0x120143fb0 <col:9> 'int (*)(int)' <FunctionToPointerDecay>
|   |   | | | `-DeclRefExpr 0x120143f08 <col:9> 'int (int)' Function 0x120143d48 'isspace' 'int (int)'
|   |   | | `-ImplicitCastExpr 0x120144008 <col:17, col:18> 'int' <IntegralCast>
|   |   | |   `-ImplicitCastExpr 0x120143ff0 <col:17, col:18> 'char' <LValueToRValue>
|   |   | |     `-UnaryOperator 0x120143f60 <col:17, col:18> 'char' lvalue prefix '*' cannot overflow
|   |   | |       `-ImplicitCastExpr 0x120143f48 <col:18> 'char *' <LValueToRValue>
|   |   | |         `-DeclRefExpr 0x120143f28 <col:18> 'char *' lvalue Var 0x120128eb8 'ptr' 'char *'
|   |   | `-UnaryOperator 0x120144040 <line:44:7, col:10> 'char *' postfix '++'
|   |   |   `-DeclRefExpr 0x120144020 <col:7> 'char *' lvalue Var 0x120128eb8 'ptr' 'char *'
|   |   `-UnaryOperator 0x120144098 <line:45:5, col:10> 'int' postfix '++'
|   |     `-DeclRefExpr 0x120144078 <col:5> 'int' lvalue Var 0x103808ec8 'count' 'int'
|   |-IfStmt 0x120144820 <line:48:3, line:73:3>
|   | |-RecoveryExpr 0x120144170 <line:48:7, col:21> '_Bool' contains-errors
|   | `-CompoundStmt 0x1201447f8 <line:49:3, line:73:3>
|   |   |-DeclStmt 0x120144268 <line:50:5, col:21>
|   |   | `-VarDecl 0x120144200 <col:5, col:11> col:11 used origin_ptr 'char *'
|   |   |-IfStmt 0x120144790 <line:52:5, line:70:5> has_else
|   |   | |-ParenExpr 0x1201443a8 <line:52:9, col:38> 'char *'
|   |   | | `-BinaryOperator 0x120144388 <col:10, col:37> 'char *' '='
|   |   | |   |-DeclRefExpr 0x120144280 <col:10> 'char *' lvalue Var 0x120144200 'origin_ptr' 'char *'
|   |   | |   `-CallExpr 0x120144328 <col:22, col:37> 'char *'
|   |   | |     |-ImplicitCastExpr 0x120144310 <col:22> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   |   | |     | `-DeclRefExpr 0x1201442a0 <col:22> 'char *(const char *, int)' Function 0x103809090 'strchr' 'char *(const char *, int)'
|   |   | |     |-ImplicitCastExpr 0x120144370 <col:29> 'const char *' <NoOp>
|   |   | |     | `-ImplicitCastExpr 0x120144358 <col:29> 'char *' <LValueToRValue>
|   |   | |     |   `-DeclRefExpr 0x1201442c0 <col:29> 'char *' lvalue Var 0x120128eb8 'ptr' 'char *'
|   |   | |     `-CharacterLiteral 0x1201442e0 <col:34> 'int' 58
|   |   | |-CompoundStmt 0x1201446c8 <line:53:5, line:65:5>
|   |   | | `-DeclStmt 0x120144448 <line:54:7, col:23>
|   |   | |   `-VarDecl 0x1201443e0 <col:7, col:13> col:13 used option_ptr 'char *'
|   |   | `-CompoundStmt 0x120144780 <line:67:5, line:70:5>
|   |   `-UnaryOperator 0x1201447e0 <line:72:5, col:10> 'int' postfix '++'
|   |     `-DeclRefExpr 0x1201447c0 <col:5> 'int' lvalue Var 0x103808ec8 'count' 'int'
|   `-ReturnStmt 0x120144878 <line:75:3, col:10>
|     `-ImplicitCastExpr 0x120144860 <col:10> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x120144840 <col:10> 'int' lvalue Var 0x103808ec8 'count' 'int'
|-FunctionDecl 0x103808b30 <line:7:18> col:18 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x103808c30 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x103808bd8 <<invalid sloc>> Implicit 902
|-FunctionDecl 0x103809090 <line:12:17> col:17 implicit used strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x103809190 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1038091f8 <<invalid sloc>> <invalid sloc> 'int'
| `-BuiltinAttr 0x103809138 <<invalid sloc>> Implicit 893
|-FunctionDecl 0x103809638 <line:21:5> col:5 implicit used strncpy 'char *(char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0x103809738 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x120143200 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x120143268 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x1038096e0 <<invalid sloc>> Implicit 886
`-FunctionDecl 0x120143d48 <line:43:9> col:9 implicit used isspace 'int (int)' extern
  |-ParmVarDecl 0x120143e48 <<invalid sloc>> <invalid sloc> 'int'
  |-BuiltinAttr 0x120143df0 <<invalid sloc>> Implicit 929
  |-NoThrowAttr 0x120143eb8 <col:9> Implicit
  `-PureAttr 0x120143ee0 <col:9> Implicit
