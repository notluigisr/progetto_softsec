TranslationUnitDecl 0x12b855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12b8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12b855bd0 '__int128'
|-TypedefDecl 0x12b856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12b855bf0 'unsigned __int128'
|-TypedefDecl 0x12c00be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12c00bc00 'struct __NSConstantString_tag'
|   `-Record 0x12b856580 '__NSConstantString_tag'
|-TypedefDecl 0x12c00be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12b855d90 '__SVInt8_t'
|-TypedefDecl 0x12c00bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12b855db0 '__SVInt16_t'
|-TypedefDecl 0x12c00bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12b855dd0 '__SVInt32_t'
|-TypedefDecl 0x12c00bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12b855df0 '__SVInt64_t'
|-TypedefDecl 0x12c00c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12b855e10 '__SVUint8_t'
|-TypedefDecl 0x12c00c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12b855e30 '__SVUint16_t'
|-TypedefDecl 0x12c00c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12b855e50 '__SVUint32_t'
|-TypedefDecl 0x12c00c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12b855e70 '__SVUint64_t'
|-TypedefDecl 0x12c00c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12b855e90 '__SVFloat16_t'
|-TypedefDecl 0x12c00c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12b855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12c00c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12b855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12c00c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12b855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12c00c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12b855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12c00c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12b855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12c00c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12b855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12c00c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12b855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12c00c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12b855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12c00c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12b855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12c00c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12b855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12c00c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12b855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12c00c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12b856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12c00c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12b856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12c00c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12b856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12c00c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12b856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12c00c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12b856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12c00c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12b8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12c00c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12b8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12c00c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12b8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12c00c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12b856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12c00ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12b856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12c00cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12b856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12c00cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12b856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12c00cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12b856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12c00d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12b8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12c00d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12b8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12c00d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12b8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12c00d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12b856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12c00d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12b856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12c00d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12b856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12c00d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12b856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12c00d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12b856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12c00d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12b8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12c00d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12b8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12c00d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12b8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12c00d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12b856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12c00d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12b856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12c00d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12b856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12c00d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12b856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12c00da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12b856390 '__SVBool_t'
|-TypedefDecl 0x12c00da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12b8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12c00dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12b8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12c00db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12b8563f0 '__SVCount_t'
|-TypedefDecl 0x12c00dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12c00dbb0 'char *'
|   `-BuiltinType 0x12b8556b0 'char'
|-TypedefDecl 0x12c00dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12c00dbb0 'char *'
|   `-BuiltinType 0x12b8556b0 'char'
|-FunctionDecl 0x12c00ddf8 <dataset_diviso_filec/func21630_vuln.c:1:1, line:80:1> line:1:12 invalid exif_scan_thumbnail 'int (int *)' static
| |-ParmVarDecl 0x12c00dd28 <col:32, col:49> col:49 referenced invalid ImageInfo 'int *'
| `-CompoundStmt 0x12c02a1c0 <line:2:1, line:80:1>
|   |-DeclStmt 0x12c00dfd0 <line:3:2, col:62>
|   | |-VarDecl 0x12c00deb8 <col:2, col:18> col:18 used c 'char'
|   | `-VarDecl 0x12c00df38 <col:2, col:22> col:22 used data 'char *'
|   |-DeclStmt 0x12c00e100 <line:4:2, col:27>
|   | |-VarDecl 0x12c00e000 <col:2, col:18> col:18 used n 'int'
|   | `-VarDecl 0x12c00e080 <col:2, col:21> col:21 used marker 'int'
|   |-BinaryOperator 0x12c00e2c8 <line:5:2, col:32> '<dependent type>' contains-errors ','
|   | |-RecoveryExpr 0x12c00e258 <col:2, col:25> '<dependent type>' contains-errors lvalue
|   | | |-UnaryExprOrTypeTraitExpr 0x12c00e238 <col:2, col:18> 'unsigned long' contains-errors sizeof
|   | | | `-RecoveryExpr 0x12c00e218 <col:18> '<dependent type>' contains-errors lvalue
|   | | `-IntegerLiteral 0x12c00e150 <col:25> 'int' 2
|   | `-BinaryOperator 0x12c00e2a8 <col:28, col:32> '<dependent type>' contains-errors '='
|   |   |-RecoveryExpr 0x12c00e288 <col:28> '<dependent type>' contains-errors lvalue
|   |   `-IntegerLiteral 0x12c00e1b8 <col:32> 'int' 0
|   |-IfStmt 0x12c00e398 <line:8:2, line:10:2>
|   | |-UnaryOperator 0x12c00e320 <line:8:6, col:7> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x12c00e308 <col:7> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x12c00e2e8 <col:7> 'char *' lvalue Var 0x12c00df38 'data' 'char *'
|   | `-CompoundStmt 0x12c00e380 <col:13, line:10:2>
|   |   `-ReturnStmt 0x12c00e370 <line:9:3, col:10>
|   |     `-RecoveryExpr 0x12c00e350 <col:10> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x12c028530 <line:11:2, line:16:2>
|   | |-CallExpr 0x12c027ff8 <line:11:6, col:27> 'int'
|   | | |-ImplicitCastExpr 0x12c027fe0 <col:6> 'int (*)(const void *, const void *, unsigned long)' <FunctionToPointerDecay>
|   | | | `-DeclRefExpr 0x12c027ec0 <col:6> 'int (const void *, const void *, unsigned long)' Function 0x12c027c70 'memcmp' 'int (const void *, const void *, unsigned long)'
|   | | |-ImplicitCastExpr 0x12c028048 <col:13> 'const void *' <BitCast>
|   | | | `-ImplicitCastExpr 0x12c028030 <col:13> 'char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x12c027ee0 <col:13> 'char *' lvalue Var 0x12c00df38 'data' 'char *'
|   | | |-ImplicitCastExpr 0x12c028078 <col:19> 'const void *' <BitCast>
|   | | | `-ImplicitCastExpr 0x12c028060 <col:19> 'char *' <ArrayToPointerDecay>
|   | | |   `-StringLiteral 0x12c027f40 <col:19> 'char[4]' lvalue "STR"
|   | | `-ImplicitCastExpr 0x12c028090 <col:26> 'unsigned long' <IntegralCast>
|   | |   `-IntegerLiteral 0x12c027f60 <col:26> 'int' 3
|   | `-CompoundStmt 0x12c028510 <col:30, line:16:2>
|   |   |-IfStmt 0x12c0284a8 <line:12:3, line:14:3>
|   |   | |-BinaryOperator 0x12c0282e8 <line:12:7, col:60> 'int' contains-errors '&&'
|   |   | | |-UnaryOperator 0x12c0282a0 <col:7, col:29> '<dependent type>' contains-errors prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x12c028288 <col:8, col:29> '<dependent type>' contains-errors <LValueToRValue>
|   |   | | |   `-CXXDependentScopeMemberExpr 0x12c028110 <col:8, col:29> '<dependent type>' contains-errors lvalue .width
|   |   | | |     `-CXXDependentScopeMemberExpr 0x12c0280c8 <col:8, col:19> '<dependent type>' contains-errors lvalue ->Thumbnail
|   |   | | |       `-RecoveryExpr 0x12c0280a8 <col:8> '<dependent type>' contains-errors lvalue
|   |   | | `-UnaryOperator 0x12c0282d0 <col:38, col:60> '<dependent type>' contains-errors prefix '!' cannot overflow
|   |   | |   `-ImplicitCastExpr 0x12c0282b8 <col:39, col:60> '<dependent type>' contains-errors <LValueToRValue>
|   |   | |     `-CXXDependentScopeMemberExpr 0x12c0281f0 <col:39, col:60> '<dependent type>' contains-errors lvalue .height
|   |   | |       `-CXXDependentScopeMemberExpr 0x12c0281a8 <col:39, col:50> '<dependent type>' contains-errors lvalue ->Thumbnail
|   |   | |         `-RecoveryExpr 0x12c028188 <col:39> '<dependent type>' contains-errors lvalue
|   |   | `-CompoundStmt 0x12c028498 <col:68, line:14:3>
|   |   `-ReturnStmt 0x12c028500 <line:15:3, col:10>
|   |     `-RecoveryExpr 0x12c0284e0 <col:10> '<dependent type>' contains-errors lvalue
|   `-ForStmt 0x12c02a128 <line:17:2, line:76:2>
|     |-<<<NULL>>>
|     |-<<<NULL>>>
|     |-<<<NULL>>>
|     |-<<<NULL>>>
|     `-CompoundStmt 0x12c02a0e0 <line:17:11, line:76:2>
|       |-IfStmt 0x12c0286d8 <line:19:3, line:20:11>
|       | |-BinaryOperator 0x12c028670 <line:19:7, col:33> 'int' contains-errors '>='
|       | | |-RecoveryExpr 0x12c028650 <col:7> '<dependent type>' contains-errors lvalue
|       | | `-CXXDependentScopeMemberExpr 0x12c0285e8 <col:12, col:33> '<dependent type>' contains-errors lvalue .size
|       | |   `-CXXDependentScopeMemberExpr 0x12c0285a0 <col:12, col:23> '<dependent type>' contains-errors lvalue ->Thumbnail
|       | |     `-RecoveryExpr 0x12c028580 <col:12> '<dependent type>' contains-errors lvalue
|       | `-ReturnStmt 0x12c0286c8 <line:20:4, col:11>
|       |   `-RecoveryExpr 0x12c0286a8 <col:11> '<dependent type>' contains-errors lvalue
|       |-IfStmt 0x12c029748 <line:24:3, line:26:3>
|       | |-BinaryOperator 0x12c029718 <line:24:7, col:12> 'int' '!='
|       | | |-ImplicitCastExpr 0x12c029700 <col:7> 'int' <IntegralCast>
|       | | | `-ImplicitCastExpr 0x12c0296e8 <col:7> 'char' <LValueToRValue>
|       | | |   `-DeclRefExpr 0x12c0296a8 <col:7> 'char' lvalue Var 0x12c00deb8 'c' 'char'
|       | | `-IntegerLiteral 0x12c0296c8 <col:12> 'int' 255
|       | `-CompoundStmt 0x12c029738 <col:18, line:26:3>
|       |-BinaryOperator 0x12c0297a8 <line:27:3, col:7> 'int' '='
|       | |-DeclRefExpr 0x12c029768 <col:3> 'int' lvalue Var 0x12c00e000 'n' 'int'
|       | `-IntegerLiteral 0x12c029788 <col:7> 'int' 8
|       |-WhileStmt 0x12c029980 <line:28:3, line:32:3>
|       | |-RecoveryExpr 0x12c029860 <line:28:10, col:40> '_Bool' contains-errors
|       | `-CompoundStmt 0x12c029970 <col:44, line:32:3>
|       |-BinaryOperator 0x12c029aa0 <line:35:3, col:12> 'int' '='
|       | |-DeclRefExpr 0x12c029a30 <col:3> 'int' lvalue Var 0x12c00e080 'marker' 'int'
|       | `-ImplicitCastExpr 0x12c029a88 <col:12> 'int' <IntegralCast>
|       |   `-ImplicitCastExpr 0x12c029a70 <col:12> 'char' <LValueToRValue>
|       |     `-DeclRefExpr 0x12c029a50 <col:12> 'char' lvalue Var 0x12c00deb8 'c' 'char'
|       |-IfStmt 0x12c029cc0 <line:37:3, line:39:3>
|       | |-RecoveryExpr 0x12c029c90 <line:37:7, col:40> '_Bool' contains-errors
|       | `-CompoundStmt 0x12c029cb0 <col:46, line:39:3>
|       `-SwitchStmt 0x12c029d18 <line:43:3, line:75:3>
|         |-ImplicitCastExpr 0x12c029d00 <line:43:11> 'int' <LValueToRValue>
|         | `-DeclRefExpr 0x12c029ce0 <col:11> 'int' lvalue Var 0x12c00e080 'marker' 'int'
|         `-CompoundStmt 0x12c02a0c0 <col:19, line:75:3>
|           |-BreakStmt 0x12c02a090 <line:70:5>
|           `-DefaultStmt 0x12c02a0a0 <line:72:4, line:74:5>
|             `-BreakStmt 0x12c02a098 <col:5>
`-FunctionDecl 0x12c027c70 <line:11:6> col:6 implicit used memcmp 'int (const void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x12c027d70 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x12c027dd8 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x12c027e40 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x12c027d18 <<invalid sloc>> Implicit 883
