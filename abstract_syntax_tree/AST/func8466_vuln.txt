TranslationUnitDecl 0x13d055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13d0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13d055bd0 '__int128'
|-TypedefDecl 0x13d056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13d055bf0 'unsigned __int128'
|-TypedefDecl 0x13d80be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13d80bc00 'struct __NSConstantString_tag'
|   `-Record 0x13d056580 '__NSConstantString_tag'
|-TypedefDecl 0x13d80be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13d055d90 '__SVInt8_t'
|-TypedefDecl 0x13d80bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13d055db0 '__SVInt16_t'
|-TypedefDecl 0x13d80bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13d055dd0 '__SVInt32_t'
|-TypedefDecl 0x13d80bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13d055df0 '__SVInt64_t'
|-TypedefDecl 0x13d80c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13d055e10 '__SVUint8_t'
|-TypedefDecl 0x13d80c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13d055e30 '__SVUint16_t'
|-TypedefDecl 0x13d80c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13d055e50 '__SVUint32_t'
|-TypedefDecl 0x13d80c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13d055e70 '__SVUint64_t'
|-TypedefDecl 0x13d80c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13d055e90 '__SVFloat16_t'
|-TypedefDecl 0x13d80c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13d055eb0 '__SVFloat32_t'
|-TypedefDecl 0x13d80c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13d055ed0 '__SVFloat64_t'
|-TypedefDecl 0x13d80c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13d055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13d80c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13d055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13d80c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13d055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13d80c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13d055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13d80c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13d055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13d80c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13d055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13d80c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13d055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13d80c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13d055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13d80c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13d055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13d80c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13d056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13d80c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13d056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13d80c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13d056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13d80c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13d056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13d80c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13d056090 '__clang_svint8x3_t'
|-TypedefDecl 0x13d80c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13d0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13d80c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13d0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13d80c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13d0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13d80c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13d056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13d80ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13d056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13d80cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13d056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13d80cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13d056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13d80cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13d056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13d80d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13d0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13d80d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13d0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13d80d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13d0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13d80d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13d056210 '__clang_svint8x4_t'
|-TypedefDecl 0x13d80d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13d056230 '__clang_svint16x4_t'
|-TypedefDecl 0x13d80d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13d056250 '__clang_svint32x4_t'
|-TypedefDecl 0x13d80d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13d056270 '__clang_svint64x4_t'
|-TypedefDecl 0x13d80d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13d056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13d80d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13d0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13d80d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13d0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13d80d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13d0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13d80d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13d056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13d80d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13d056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13d80d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13d056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13d80d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13d056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13d80da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13d056390 '__SVBool_t'
|-TypedefDecl 0x13d80da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13d0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13d80dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13d0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13d80db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13d0563f0 '__SVCount_t'
|-TypedefDecl 0x13d80dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13d80dbb0 'char *'
|   `-BuiltinType 0x13d0556b0 'char'
|-TypedefDecl 0x13d80dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13d80dbb0 'char *'
|   `-BuiltinType 0x13d0556b0 'char'
|-FunctionDecl 0x13d80de58 <dataset_diviso_filec/func8466_vuln.c:1:1, line:53:1> line:1:12 invalid fsmVerify 'int (const char *, int)' static
| |-ParmVarDecl 0x13d80dcd8 <col:22, col:34> col:34 used path 'const char *'
| |-ParmVarDecl 0x13d80dd70 <col:40, col:46> col:46 invalid fi 'int'
| `-CompoundStmt 0x13f00c588 <line:2:1, line:53:1>
|   |-DeclStmt 0x13d80df90 <line:3:5, col:11>
|   | `-VarDecl 0x13d80df28 <col:5, col:9> col:9 used rc 'int'
|   |-DeclStmt 0x13d80e060 <line:4:5, col:26>
|   | `-VarDecl 0x13d80dfc0 <col:5, col:21> col:9 used saveerrno 'int' cinit
|   |   `-RecoveryExpr 0x13d80e040 <col:21> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x13d827628 <line:5:5, col:20>
|   | |-RecordDecl 0x13d80e078 <col:5, col:12> col:12 struct stat
|   | `-VarDecl 0x13d80e178 <col:5, col:17> col:17 invalid dsb 'struct stat'
|   |-BinaryOperator 0x13d827890 <line:8:5, col:31> 'int' contains-errors '='
|   | |-DeclRefExpr 0x13d827640 <col:5> 'int' lvalue Var 0x13d80df28 'rc' 'int'
|   | `-CallExpr 0x13d827858 <col:10, col:31> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x13d8277c0 <col:10> 'int ()' Function 0x13d827708 'fsmStat' 'int ()'
|   |   |-DeclRefExpr 0x13d8277e0 <col:18> 'const char *' lvalue ParmVar 0x13d80dcd8 'path' 'const char *'
|   |   |-IntegerLiteral 0x13d827800 <col:24> 'int' 1
|   |   `-UnaryOperator 0x13d827840 <col:27, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     `-RecoveryExpr 0x13d827820 <col:28> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x13d827930 <line:9:5, line:10:9>
|   | |-ImplicitCastExpr 0x13d8278d0 <line:9:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x13d8278b0 <col:9> 'int' lvalue Var 0x13d80df28 'rc' 'int'
|   | `-ReturnStmt 0x13d827920 <line:10:2, col:9>
|   |   `-ImplicitCastExpr 0x13d827908 <col:9> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x13d8278e8 <col:9> 'int' lvalue Var 0x13d80df28 'rc' 'int'
|   |-IfStmt 0x13f00c3a8 <line:12:5, line:48:5> has_else
|   | |-CallExpr 0x13d827ab0 <line:12:9, col:21> '<dependent type>' contains-errors
|   | | |-DeclRefExpr 0x13d827a30 <col:9> 'int ()' Function 0x13d827978 'S_ISREG' 'int ()'
|   | | `-RecoveryExpr 0x13d827a90 <col:17> '<dependent type>' contains-errors lvalue
|   | |-CompoundStmt 0x13f00a828 <col:24, line:23:5>
|   | | |-DeclStmt 0x13d827dc8 <line:14:2, col:50>
|   | | | `-VarDecl 0x13d827af0 <col:2, col:49> col:8 used rmpath 'char *' cinit
|   | | |   `-CallExpr 0x13d827d88 <col:17, col:49> '<dependent type>' contains-errors
|   | | |     |-DeclRefExpr 0x13d827c38 <col:17> 'int ()' Function 0x13d827b80 'rstrscat' 'int ()'
|   | | |     |-RecoveryExpr 0x13d827d48 <col:26> '<dependent type>' contains-errors lvalue
|   | | |     |-DeclRefExpr 0x13d827c70 <col:32> 'const char *' lvalue ParmVar 0x13d80dcd8 'path' 'const char *'
|   | | |     |-StringLiteral 0x13d827cd0 <col:38> 'char[4]' lvalue "STR"
|   | | |     `-RecoveryExpr 0x13d827d68 <col:45> '<dependent type>' contains-errors lvalue
|   | | |-BinaryOperator 0x13d827fe8 <line:15:2, col:29> 'int' contains-errors '='
|   | | | |-DeclRefExpr 0x13d827de0 <col:2> 'int' lvalue Var 0x13d80df28 'rc' 'int'
|   | | | `-CallExpr 0x13d827f88 <col:7, col:29> 'int' contains-errors
|   | | |   |-ImplicitCastExpr 0x13d827f70 <col:7> 'int (*)()' <FunctionToPointerDecay>
|   | | |   | `-DeclRefExpr 0x13d827ee0 <col:7> 'int ()' Function 0x13d827e28 'fsmRename' 'int ()'
|   | | |   |-ImplicitCastExpr 0x13d827fb8 <col:17> 'const char *' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x13d827f00 <col:17> 'const char *' lvalue ParmVar 0x13d80dcd8 'path' 'const char *'
|   | | |   `-ImplicitCastExpr 0x13d827fd0 <col:23> 'char *' contains-errors <LValueToRValue>
|   | | |     `-DeclRefExpr 0x13d827f20 <col:23> 'char *' contains-errors lvalue Var 0x13d827af0 'rmpath' 'char *'
|   | | |-IfStmt 0x13d8282a0 <line:17:2, line:20:11> has_else
|   | | | |-UnaryOperator 0x13d828040 <line:17:6, col:7> 'int' prefix '!' cannot overflow
|   | | | | `-ImplicitCastExpr 0x13d828028 <col:7> 'int' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x13d828008 <col:7> 'int' lvalue Var 0x13d80df28 'rc' 'int'
|   | | | |-CStyleCastExpr 0x13d8281e0 <line:18:6, col:29> 'void' contains-errors <ToVoid>
|   | | | | `-CallExpr 0x13d828190 <col:13, col:29> 'int' contains-errors
|   | | | |   |-ImplicitCastExpr 0x13d828178 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | | | |   | `-DeclRefExpr 0x13d828138 <col:13> 'int ()' Function 0x13d828080 'fsmUnlink' 'int ()'
|   | | | |   `-ImplicitCastExpr 0x13d8281b8 <col:23> 'char *' contains-errors <LValueToRValue>
|   | | | |     `-DeclRefExpr 0x13d828158 <col:23> 'char *' contains-errors lvalue Var 0x13d827af0 'rmpath' 'char *'
|   | | | `-BinaryOperator 0x13d828280 <line:20:6, col:11> 'int' contains-errors '='
|   | | |   |-DeclRefExpr 0x13d828208 <col:6> 'int' lvalue Var 0x13d80df28 'rc' 'int'
|   | | |   `-RecoveryExpr 0x13d828260 <col:11> '<dependent type>' contains-errors lvalue
|   | | `-CallExpr 0x13f00a748 <line:21:2, col:13> 'void' contains-errors
|   | |   |-ImplicitCastExpr 0x13f00a730 <col:2> 'void (*)(void *)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x13f00a6a0 <col:2> 'void (void *)' Function 0x13d828308 'free' 'void (void *)'
|   | |   `-ImplicitCastExpr 0x13f00a788 <col:7> 'void *' contains-errors <BitCast>
|   | |     `-ImplicitCastExpr 0x13f00a770 <col:7> 'char *' contains-errors <LValueToRValue>
|   | |       `-DeclRefExpr 0x13f00a6c0 <col:7> 'char *' contains-errors lvalue Var 0x13d827af0 'rmpath' 'char *'
|   | `-IfStmt 0x13f00c378 <line:23:12, line:48:5> has_else
|   |   |-CallExpr 0x13f00a9b8 <line:23:16, col:28> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x13f00a938 <col:16> 'int ()' Function 0x13f00a880 'S_ISDIR' 'int ()'
|   |   | `-RecoveryExpr 0x13f00a998 <col:24> '<dependent type>' contains-errors lvalue
|   |   |-CompoundStmt 0x13f00b0a8 <col:31, line:32:5>
|   |   | |-IfStmt 0x13f00aac0 <line:24:9, col:42>
|   |   | | |-CallExpr 0x13f00aa68 <col:13, col:32> '<dependent type>' contains-errors
|   |   | | | |-DeclRefExpr 0x13f00a9e0 <col:13> 'int ()' Function 0x13f00a880 'S_ISDIR' 'int ()'
|   |   | | | `-CXXDependentScopeMemberExpr 0x13f00aa20 <col:21, col:25> '<dependent type>' contains-errors lvalue .st_mode
|   |   | | |   `-RecoveryExpr 0x13f00aa00 <col:21> '<dependent type>' contains-errors lvalue
|   |   | | `-ReturnStmt 0x13f00aab0 <col:35, col:42>
|   |   | |   `-IntegerLiteral 0x13f00aa90 <col:42> 'int' 0
|   |   | `-IfStmt 0x13f00b088 <line:25:9, line:31:9>
|   |   |   |-CallExpr 0x13f00ac48 <line:25:13, col:32> '<dependent type>' contains-errors
|   |   |   | |-DeclRefExpr 0x13f00abc0 <col:13> 'int ()' Function 0x13f00ab08 'S_ISLNK' 'int ()'
|   |   |   | `-CXXDependentScopeMemberExpr 0x13f00ac00 <col:21, col:25> '<dependent type>' contains-errors lvalue .st_mode
|   |   |   |   `-RecoveryExpr 0x13f00abe0 <col:21> '<dependent type>' contains-errors lvalue
|   |   |   `-CompoundStmt 0x13f00b058 <col:35, line:31:9>
|   |   |     |-BinaryOperator 0x13f00ad60 <line:26:13, col:39> 'int' contains-errors '='
|   |   |     | |-DeclRefExpr 0x13f00ac70 <col:13> 'int' lvalue Var 0x13d80df28 'rc' 'int'
|   |   |     | `-CallExpr 0x13f00ad28 <col:18, col:39> '<dependent type>' contains-errors
|   |   |     |   |-DeclRefExpr 0x13f00ac90 <col:18> 'int ()' Function 0x13d827708 'fsmStat' 'int ()'
|   |   |     |   |-DeclRefExpr 0x13f00acb0 <col:26> 'const char *' lvalue ParmVar 0x13d80dcd8 'path' 'const char *'
|   |   |     |   |-IntegerLiteral 0x13f00acd0 <col:32> 'int' 0
|   |   |     |   `-UnaryOperator 0x13f00ad10 <col:35, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   |     |     `-RecoveryExpr 0x13f00acf0 <col:36> '<dependent type>' contains-errors lvalue
|   |   |     |-IfStmt 0x13f00ae78 <line:27:13, col:43>
|   |   |     | |-BinaryOperator 0x13f00adf8 <col:17, col:23> 'int' contains-errors '=='
|   |   |     | | |-DeclRefExpr 0x13f00ad80 <col:17> 'int' lvalue Var 0x13d80df28 'rc' 'int'
|   |   |     | | `-RecoveryExpr 0x13f00add8 <col:23> '<dependent type>' contains-errors lvalue
|   |   |     | `-BinaryOperator 0x13f00ae58 <col:38, col:43> 'int' '='
|   |   |     |   |-DeclRefExpr 0x13f00ae18 <col:38> 'int' lvalue Var 0x13d80df28 'rc' 'int'
|   |   |     |   `-IntegerLiteral 0x13f00ae38 <col:43> 'int' 0
|   |   |     |-IfStmt 0x13f00af18 <line:28:13, col:28>
|   |   |     | |-ImplicitCastExpr 0x13f00aeb8 <col:17> 'int' <LValueToRValue>
|   |   |     | | `-DeclRefExpr 0x13f00ae98 <col:17> 'int' lvalue Var 0x13d80df28 'rc' 'int'
|   |   |     | `-ReturnStmt 0x13f00af08 <col:21, col:28>
|   |   |     |   `-ImplicitCastExpr 0x13f00aef0 <col:28> 'int' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x13f00aed0 <col:28> 'int' lvalue Var 0x13d80df28 'rc' 'int'
|   |   |     `-IfStmt 0x13f00b038 <line:30:13, col:46>
|   |   |       |-CallExpr 0x13f00afe0 <col:17, col:36> '<dependent type>' contains-errors
|   |   |       | |-DeclRefExpr 0x13f00af58 <col:17> 'int ()' Function 0x13f00a880 'S_ISDIR' 'int ()'
|   |   |       | `-CXXDependentScopeMemberExpr 0x13f00af98 <col:25, col:29> '<dependent type>' contains-errors lvalue .st_mode
|   |   |       |   `-RecoveryExpr 0x13f00af78 <col:25> '<dependent type>' contains-errors lvalue
|   |   |       `-ReturnStmt 0x13f00b028 <col:39, col:46>
|   |   |         `-IntegerLiteral 0x13f00b008 <col:46> 'int' 0
|   |   `-IfStmt 0x13f00c348 <line:32:12, line:48:5> has_else
|   |     |-RecoveryExpr 0x13f00b0e8 <line:32:16, col:28> '_Bool' contains-errors
|   |     |-CompoundStmt 0x13f00b808 <col:31, line:41:5>
|   |     | `-IfStmt 0x13f00b7e8 <line:33:9, line:40:9>
|   |     |   |-CallExpr 0x13f00b190 <line:33:13, col:32> '<dependent type>' contains-errors
|   |     |   | |-DeclRefExpr 0x13f00b108 <col:13> 'int ()' Function 0x13f00ab08 'S_ISLNK' 'int ()'
|   |     |   | `-CXXDependentScopeMemberExpr 0x13f00b148 <col:21, col:25> '<dependent type>' contains-errors lvalue .st_mode
|   |     |   |   `-RecoveryExpr 0x13f00b128 <col:21> '<dependent type>' contains-errors lvalue
|   |     |   `-CompoundStmt 0x13f00b7c0 <col:35, line:40:9>
|   |     |     |-DeclStmt 0x13f00b250 <line:34:13, col:33>
|   |     |     | `-VarDecl 0x13f00b1e8 <col:13, col:18> col:18 invalid buf 'char'
|   |     |     |-IfStmt 0x13f00b488 <line:38:13, col:28>
|   |     |     | |-ImplicitCastExpr 0x13f00b428 <col:17> 'int' <LValueToRValue>
|   |     |     | | `-DeclRefExpr 0x13f00b408 <col:17> 'int' lvalue Var 0x13d80df28 'rc' 'int'
|   |     |     | `-ReturnStmt 0x13f00b478 <col:21, col:28>
|   |     |     |   `-ImplicitCastExpr 0x13f00b460 <col:28> 'int' <LValueToRValue>
|   |     |     |     `-DeclRefExpr 0x13f00b440 <col:28> 'int' lvalue Var 0x13d80df28 'rc' 'int'
|   |     |     `-IfStmt 0x13f00b7a0 <line:39:13, col:53>
|   |     |       |-CallExpr 0x13f00b740 <col:17, col:43> '<dependent type>' contains-errors
|   |     |       | |-DeclRefExpr 0x13f00b588 <col:17> 'int ()' Function 0x13f00b4d0 'rstreq' 'int ()'
|   |     |       | |-CallExpr 0x13f00b6f8 <col:24, col:37> '<dependent type>' contains-errors
|   |     |       | | |-DeclRefExpr 0x13f00b6b8 <col:24> 'int ()' Function 0x13f00b600 'rpmfiFLink' 'int ()'
|   |     |       | | `-RecoveryExpr 0x13f00b6d8 <col:35> '<dependent type>' contains-errors lvalue
|   |     |       | `-RecoveryExpr 0x13f00b720 <col:40> '<dependent type>' contains-errors lvalue
|   |     |       `-ReturnStmt 0x13f00b790 <col:46, col:53>
|   |     |         `-IntegerLiteral 0x13f00b770 <col:53> 'int' 0
|   |     `-IfStmt 0x13f00c318 <line:41:12, line:48:5> has_else
|   |       |-RecoveryExpr 0x13f00b920 <line:41:16, col:29> '_Bool' contains-errors
|   |       |-CompoundStmt 0x13f00ba40 <col:32, line:43:5>
|   |       | `-IfStmt 0x13f00ba20 <line:42:9, col:43>
|   |       |   |-CallExpr 0x13f00b9c8 <col:13, col:33> '<dependent type>' contains-errors
|   |       |   | |-DeclRefExpr 0x13f00b940 <col:13> 'int ()' Function 0x13f00b848 'S_ISFIFO' 'int ()'
|   |       |   | `-CXXDependentScopeMemberExpr 0x13f00b980 <col:22, col:26> '<dependent type>' contains-errors lvalue .st_mode
|   |       |   |   `-RecoveryExpr 0x13f00b960 <col:22> '<dependent type>' contains-errors lvalue
|   |       |   `-ReturnStmt 0x13f00ba10 <col:36, col:43>
|   |       |     `-IntegerLiteral 0x13f00b9f0 <col:43> 'int' 0
|   |       `-IfStmt 0x13f00c2e8 <line:43:12, line:48:5> has_else
|   |         |-RecoveryExpr 0x13f00bc58 <line:43:16, col:45> '_Bool' contains-errors
|   |         |-CompoundStmt 0x13f00c078 <col:48, line:46:5>
|   |         | `-IfStmt 0x13f00c058 <line:44:9, line:45:53>
|   |         |   |-BinaryOperator 0x13f00c008 <line:44:13, line:45:43> 'int' contains-errors '&&'
|   |         |   | |-ParenExpr 0x13f00bdf8 <line:44:13, col:58> 'int' contains-errors
|   |         |   | | `-BinaryOperator 0x13f00bdd8 <col:14, col:57> 'int' contains-errors '||'
|   |         |   | |   |-CallExpr 0x13f00bd00 <col:14, col:33> '<dependent type>' contains-errors
|   |         |   | |   | |-DeclRefExpr 0x13f00bc78 <col:14> 'int ()' Function 0x13f00ba80 'S_ISCHR' 'int ()'
|   |         |   | |   | `-CXXDependentScopeMemberExpr 0x13f00bcb8 <col:22, col:26> '<dependent type>' contains-errors lvalue .st_mode
|   |         |   | |   |   `-RecoveryExpr 0x13f00bc98 <col:22> '<dependent type>' contains-errors lvalue
|   |         |   | |   `-CallExpr 0x13f00bdb0 <col:38, col:57> '<dependent type>' contains-errors
|   |         |   | |     |-DeclRefExpr 0x13f00bd28 <col:38> 'int ()' Function 0x13f00bb80 'S_ISBLK' 'int ()'
|   |         |   | |     `-CXXDependentScopeMemberExpr 0x13f00bd68 <col:46, col:50> '<dependent type>' contains-errors lvalue .st_mode
|   |         |   | |       `-RecoveryExpr 0x13f00bd48 <col:46> '<dependent type>' contains-errors lvalue
|   |         |   | `-ParenExpr 0x13f00bfe8 <line:45:13, col:43> 'int' contains-errors
|   |         |   |   `-BinaryOperator 0x13f00bfc8 <col:14, col:42> 'int' contains-errors '=='
|   |         |   |     |-CXXDependentScopeMemberExpr 0x13f00be38 <col:14, col:18> '<dependent type>' contains-errors lvalue .st_rdev
|   |         |   |     | `-RecoveryExpr 0x13f00be18 <col:14> '<dependent type>' contains-errors lvalue
|   |         |   |     `-CallExpr 0x13f00bfa0 <col:29, col:42> '<dependent type>' contains-errors
|   |         |   |       |-DeclRefExpr 0x13f00bf60 <col:29> 'int ()' Function 0x13f00bea8 'rpmfiFRdev' 'int ()'
|   |         |   |       `-RecoveryExpr 0x13f00bf80 <col:40> '<dependent type>' contains-errors lvalue
|   |         |   `-ReturnStmt 0x13f00c048 <col:46, col:53>
|   |         |     `-IntegerLiteral 0x13f00c028 <col:53> 'int' 0
|   |         `-IfStmt 0x13f00c2c8 <line:46:12, line:48:5>
|   |           |-RecoveryExpr 0x13f00c190 <line:46:16, col:29> '_Bool' contains-errors
|   |           `-CompoundStmt 0x13f00c2b0 <col:32, line:48:5>
|   |             `-IfStmt 0x13f00c290 <line:47:9, col:43>
|   |               |-CallExpr 0x13f00c238 <col:13, col:33> '<dependent type>' contains-errors
|   |               | |-DeclRefExpr 0x13f00c1b0 <col:13> 'int ()' Function 0x13f00c0b8 'S_ISSOCK' 'int ()'
|   |               | `-CXXDependentScopeMemberExpr 0x13f00c1f0 <col:22, col:26> '<dependent type>' contains-errors lvalue .st_mode
|   |               |   `-RecoveryExpr 0x13f00c1d0 <col:22> '<dependent type>' contains-errors lvalue
|   |               `-ReturnStmt 0x13f00c280 <col:36, col:43>
|   |                 `-IntegerLiteral 0x13f00c260 <col:43> 'int' 0
|   `-BinaryOperator 0x13f00c490 <line:50:5, col:24> 'int' '='
|     |-DeclRefExpr 0x13f00c3d8 <col:5> 'int' lvalue Var 0x13d80df28 'rc' 'int'
|     `-CallExpr 0x13f00c450 <col:10, col:24> 'int'
|       |-ImplicitCastExpr 0x13f00c438 <col:10> 'int (*)()' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x13f00c3f8 <col:10> 'int ()' Function 0x13d828080 'fsmUnlink' 'int ()'
|       `-ImplicitCastExpr 0x13f00c478 <col:20> 'const char *' <LValueToRValue>
|         `-DeclRefExpr 0x13f00c418 <col:20> 'const char *' lvalue ParmVar 0x13d80dcd8 'path' 'const char *'
`-FunctionDecl 0x13d828308 <line:21:2> col:2 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x13f00a630 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x13d8283b0 <<invalid sloc>> Implicit 873
