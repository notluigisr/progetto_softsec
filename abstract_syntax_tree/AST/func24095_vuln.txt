TranslationUnitDecl 0x132855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1328564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x132855bd0 '__int128'
|-TypedefDecl 0x132856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x132855bf0 'unsigned __int128'
|-TypedefDecl 0x132926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x132926000 'struct __NSConstantString_tag'
|   `-Record 0x132856580 '__NSConstantString_tag'
|-TypedefDecl 0x132926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x132855d90 '__SVInt8_t'
|-TypedefDecl 0x132926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x132855db0 '__SVInt16_t'
|-TypedefDecl 0x132926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x132855dd0 '__SVInt32_t'
|-TypedefDecl 0x1329263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x132855df0 '__SVInt64_t'
|-TypedefDecl 0x132926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x132855e10 '__SVUint8_t'
|-TypedefDecl 0x1329264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x132855e30 '__SVUint16_t'
|-TypedefDecl 0x132926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x132855e50 '__SVUint32_t'
|-TypedefDecl 0x132926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x132855e70 '__SVUint64_t'
|-TypedefDecl 0x1329265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x132855e90 '__SVFloat16_t'
|-TypedefDecl 0x132926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x132855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1329266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x132855ed0 '__SVFloat64_t'
|-TypedefDecl 0x132926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x132855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x132926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x132855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1329267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x132855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x132926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x132855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1329268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x132855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x132926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x132855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x132926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x132855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1329269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x132855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x132926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x132855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x132926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x132856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x132926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x132856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x132926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x132856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x132926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x132856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x132926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x132856090 '__clang_svint8x3_t'
|-TypedefDecl 0x132926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1328560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x132926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1328560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x132926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1328560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x132926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x132856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x132926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x132856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x132926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x132856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x132926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x132856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x132926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x132856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x132927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1328561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x132927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1328561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1329278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1328561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x132927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x132856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1329279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x132856230 '__clang_svint16x4_t'
|-TypedefDecl 0x132927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x132856250 '__clang_svint32x4_t'
|-TypedefDecl 0x132927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x132856270 '__clang_svint64x4_t'
|-TypedefDecl 0x132927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x132856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x132927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1328562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x132927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1328562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x132927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1328562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x132927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x132856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x132927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x132856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x132927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x132856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x132927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x132856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x132927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x132856390 '__SVBool_t'
|-TypedefDecl 0x132927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1328563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x132927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1328563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x132927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1328563f0 '__SVCount_t'
|-TypedefDecl 0x132927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x132927fb0 'char *'
|   `-BuiltinType 0x1328556b0 'char'
|-TypedefDecl 0x132928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x132927fb0 'char *'
|   `-BuiltinType 0x1328556b0 'char'
`-FunctionDecl 0x132928338 <dataset_diviso_filec/func24095_vuln.c:1:1, line:31:1> line:1:18 invalid _quicklistNodeAllowInsert 'int (const int *, const int, const int)'
  |-ParmVarDecl 0x1329280f0 <col:44, col:65> col:65 invalid node 'const int *'
  |-ParmVarDecl 0x132928170 <line:2:44, col:54> col:54 used fill 'const int'
  |-ParmVarDecl 0x1329281f0 <col:60, col:73> col:73 invalid sz 'const int'
  `-CompoundStmt 0x132942378 <col:77, line:31:1>
    |-IfStmt 0x132928618 <line:3:5, line:4:16>
    | |-CallExpr 0x1329285c0 <line:3:9, col:23> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x132928550 <col:9> 'int ()' Function 0x132928498 'unlikely' 'int ()'
    | | `-UnaryOperator 0x1329285a8 <col:18, col:19> '<dependent type>' contains-errors prefix '!' cannot overflow
    | |   `-ImplicitCastExpr 0x132928590 <col:19> '<dependent type>' contains-errors <LValueToRValue>
    | |     `-RecoveryExpr 0x132928570 <col:19> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x132928608 <line:4:9, col:16>
    |   `-IntegerLiteral 0x1329285e8 <col:16> 'int' 0
    |-DeclStmt 0x1329286b8 <line:6:5, col:25>
    | `-VarDecl 0x132928650 <col:5, col:9> col:9 used ziplist_overhead 'int'
    |-IfStmt 0x132941800 <line:8:5, line:11:28> has_else
    | |-BinaryOperator 0x132928710 <line:8:9, col:14> 'int' contains-errors '<'
    | | |-RecoveryExpr 0x1329286d0 <col:9> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x1329286f0 <col:14> 'int' 254
    | |-BinaryOperator 0x132928770 <line:9:9, col:28> 'int' '='
    | | |-DeclRefExpr 0x132928730 <col:9> 'int' lvalue Var 0x132928650 'ziplist_overhead' 'int'
    | | `-IntegerLiteral 0x132928750 <col:28> 'int' 1
    | `-BinaryOperator 0x1329287d0 <line:11:9, col:28> 'int' '='
    |   |-DeclRefExpr 0x132928790 <col:9> 'int' lvalue Var 0x132928650 'ziplist_overhead' 'int'
    |   `-IntegerLiteral 0x1329287b0 <col:28> 'int' 5
    |-IfStmt 0x132941b98 <line:14:5, line:19:29> has_else
    | |-BinaryOperator 0x132941870 <line:14:9, col:14> 'int' contains-errors '<'
    | | |-RecoveryExpr 0x132941830 <col:9> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x132941850 <col:14> 'int' 64
    | |-CompoundAssignOperator 0x1329418d0 <line:15:9, col:29> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    | | |-DeclRefExpr 0x132941890 <col:9> 'int' lvalue Var 0x132928650 'ziplist_overhead' 'int'
    | | `-IntegerLiteral 0x1329418b0 <col:29> 'int' 1
    | `-IfStmt 0x132941b68 <line:16:10, line:19:29> has_else
    |   |-CallExpr 0x132941a60 <line:16:14, col:31> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x1329419e0 <col:14> 'int ()' Function 0x132941928 'likely' 'int ()'
    |   | `-BinaryOperator 0x132941a40 <col:21, col:26> 'int' contains-errors '<'
    |   |   |-RecoveryExpr 0x132941a00 <col:21> '<dependent type>' contains-errors lvalue
    |   |   `-IntegerLiteral 0x132941a20 <col:26> 'int' 16384
    |   |-CompoundAssignOperator 0x132941ac8 <line:17:9, col:29> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |   | |-DeclRefExpr 0x132941a88 <col:9> 'int' lvalue Var 0x132928650 'ziplist_overhead' 'int'
    |   | `-IntegerLiteral 0x132941aa8 <col:29> 'int' 2
    |   `-CompoundAssignOperator 0x132941b38 <line:19:9, col:29> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |     |-DeclRefExpr 0x132941af8 <col:9> 'int' lvalue Var 0x132928650 'ziplist_overhead' 'int'
    |     `-IntegerLiteral 0x132941b18 <col:29> 'int' 5
    |-DeclStmt 0x132941d30 <line:22:5, col:59>
    | `-VarDecl 0x132941be0 <col:5, col:43> col:18 used new_sz 'unsigned int' cinit
    |   `-BinaryOperator 0x132941d10 <col:27, col:43> '<dependent type>' contains-errors '+'
    |     |-BinaryOperator 0x132941cd0 <col:27, col:38> '<dependent type>' contains-errors '+'
    |     | |-CXXDependentScopeMemberExpr 0x132941c68 <col:27, col:33> '<dependent type>' contains-errors lvalue ->sz
    |     | | `-RecoveryExpr 0x132941c48 <col:27> '<dependent type>' contains-errors lvalue
    |     | `-RecoveryExpr 0x132941cb0 <col:38> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x132941cf0 <col:43> 'int' lvalue Var 0x132928650 'ziplist_overhead' 'int'
    `-IfStmt 0x132942348 <line:23:5, line:30:16> has_else
      |-CallExpr 0x132941f70 <line:23:9, col:76> 'int' contains-errors
      | |-ImplicitCastExpr 0x132941f58 <col:9> 'int (*)()' <FunctionToPointerDecay>
      | | `-DeclRefExpr 0x132941d48 <col:9> 'int ()' Function 0x132941928 'likely' 'int ()'
      | `-CallExpr 0x132941ef8 <col:16, col:75> 'int' contains-errors
      |   |-ImplicitCastExpr 0x132941ee0 <col:16> 'int (*)()' <FunctionToPointerDecay>
      |   | `-DeclRefExpr 0x132941e48 <col:16> 'int ()' Function 0x132941d90 '_quicklistNodeSizeMeetsOptimizationRequirement' 'int ()'
      |   |-ImplicitCastExpr 0x132941f28 <col:63> 'unsigned int' contains-errors <LValueToRValue>
      |   | `-DeclRefExpr 0x132941e68 <col:63> 'unsigned int' contains-errors lvalue Var 0x132941be0 'new_sz' 'unsigned int'
      |   `-ImplicitCastExpr 0x132941f40 <col:71> 'int' <LValueToRValue>
      |     `-DeclRefExpr 0x132941e88 <col:71> 'const int' lvalue ParmVar 0x132928170 'fill' 'const int'
      |-ReturnStmt 0x132941fb8 <line:24:9, col:16>
      | `-IntegerLiteral 0x132941f98 <col:16> 'int' 1
      `-IfStmt 0x132942318 <line:25:10, line:30:16> has_else
        |-UnaryOperator 0x132942140 <line:25:14, col:42> 'int' contains-errors prefix '!' cannot overflow
        | `-CallExpr 0x132942100 <col:15, col:42> 'int' contains-errors
        |   |-ImplicitCastExpr 0x1329420e8 <col:15> 'int (*)()' <FunctionToPointerDecay>
        |   | `-DeclRefExpr 0x1329420a8 <col:15> 'int ()' Function 0x132941ff0 'sizeMeetsSafetyLimit' 'int ()'
        |   `-ImplicitCastExpr 0x132942128 <col:36> 'unsigned int' contains-errors <LValueToRValue>
        |     `-DeclRefExpr 0x1329420c8 <col:36> 'unsigned int' contains-errors lvalue Var 0x132941be0 'new_sz' 'unsigned int'
        |-ReturnStmt 0x132942178 <line:26:9, col:16>
        | `-IntegerLiteral 0x132942158 <col:16> 'int' 0
        `-IfStmt 0x1329422e8 <line:27:10, line:30:16> has_else
          |-BinaryOperator 0x132942268 <line:27:14, col:33> 'int' contains-errors '<'
          | |-CStyleCastExpr 0x132942208 <col:14, col:25> 'int' contains-errors <Dependent>
          | | `-CXXDependentScopeMemberExpr 0x1329421a8 <col:19, col:25> '<dependent type>' contains-errors lvalue ->count
          | |   `-RecoveryExpr 0x132942188 <col:19> '<dependent type>' contains-errors lvalue
          | `-ImplicitCastExpr 0x132942250 <col:33> 'int' <LValueToRValue>
          |   `-DeclRefExpr 0x132942230 <col:33> 'const int' lvalue ParmVar 0x132928170 'fill' 'const int'
          |-ReturnStmt 0x1329422a8 <line:28:9, col:16>
          | `-IntegerLiteral 0x132942288 <col:16> 'int' 1
          `-ReturnStmt 0x1329422d8 <line:30:9, col:16>
            `-IntegerLiteral 0x1329422b8 <col:16> 'int' 0
