TranslationUnitDecl 0x12d855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12d8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12d855bd0 '__int128'
|-TypedefDecl 0x12d856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12d855bf0 'unsigned __int128'
|-TypedefDecl 0x12d926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12d926000 'struct __NSConstantString_tag'
|   `-Record 0x12d856580 '__NSConstantString_tag'
|-TypedefDecl 0x12d926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12d855d90 '__SVInt8_t'
|-TypedefDecl 0x12d926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12d855db0 '__SVInt16_t'
|-TypedefDecl 0x12d926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12d855dd0 '__SVInt32_t'
|-TypedefDecl 0x12d9263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12d855df0 '__SVInt64_t'
|-TypedefDecl 0x12d926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12d855e10 '__SVUint8_t'
|-TypedefDecl 0x12d9264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12d855e30 '__SVUint16_t'
|-TypedefDecl 0x12d926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12d855e50 '__SVUint32_t'
|-TypedefDecl 0x12d926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12d855e70 '__SVUint64_t'
|-TypedefDecl 0x12d9265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12d855e90 '__SVFloat16_t'
|-TypedefDecl 0x12d926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12d855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12d9266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12d855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12d926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12d855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12d926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12d855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12d9267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12d855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12d926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12d855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12d9268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12d855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12d926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12d855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12d926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12d855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12d9269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12d855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12d926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12d855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12d926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12d856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12d926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12d856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12d926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12d856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12d926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12d856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12d926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12d856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12d926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12d8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12d926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12d8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12d926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12d8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12d926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12d856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12d926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12d856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12d926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12d856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12d926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12d856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12d926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12d856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12d927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12d8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12d927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12d8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12d9278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12d8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12d927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12d856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12d9279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12d856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12d927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12d856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12d927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12d856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12d927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12d856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12d927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12d8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12d927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12d8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12d927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12d8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12d927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12d856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12d927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12d856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12d927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12d856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12d927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12d856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12d927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12d856390 '__SVBool_t'
|-TypedefDecl 0x12d927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12d8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12d927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12d8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12d927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12d8563f0 '__SVCount_t'
|-TypedefDecl 0x12d927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12d927fb0 'char *'
|   `-BuiltinType 0x12d8556b0 'char'
|-TypedefDecl 0x12d928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12d927fb0 'char *'
|   `-BuiltinType 0x12d8556b0 'char'
|-FunctionDecl 0x12d9284f8 <dataset_diviso_filec/func6466_vuln.c:1:1, line:39:1> line:1:1 invalid gerbv_gdk_draw_prim1 'int (int *, int *, double *, double, int, int)'
| |-ParmVarDecl 0x12d928128 <col:22, col:33> col:33 invalid pixmap 'int *'
| |-ParmVarDecl 0x12d9281a8 <col:41, col:48> col:48 invalid gc 'int *'
| |-ParmVarDecl 0x12d928258 <col:52, col:60> col:60 used p 'double *'
| |-ParmVarDecl 0x12d9282d8 <line:2:8, col:15> col:15 used scale 'double'
| |-ParmVarDecl 0x12d928358 <col:22, col:27> col:27 used x 'int'
| |-ParmVarDecl 0x12d9283d8 <col:30, col:35> col:35 used y 'int'
| `-CompoundStmt 0x12f009c00 <line:3:1, line:39:1>
|   |-DeclStmt 0x12d928670 <line:4:5, col:31>
|   | `-VarDecl 0x12d9285e8 <col:5, col:30> col:15 used exposure_idx 'const int' cinit
|   |   `-IntegerLiteral 0x12d928650 <col:30> 'int' 0
|   |-DeclStmt 0x12d928728 <line:5:5, col:31>
|   | `-VarDecl 0x12d9286a0 <col:5, col:30> col:15 used diameter_idx 'const int' cinit
|   |   `-IntegerLiteral 0x12d928708 <col:30> 'int' 1
|   |-DeclStmt 0x12d9287e0 <line:6:5, col:31>
|   | `-VarDecl 0x12d928758 <col:5, col:30> col:15 used x_offset_idx 'const int' cinit
|   |   `-IntegerLiteral 0x12d9287c0 <col:30> 'int' 2
|   |-DeclStmt 0x12d9418a0 <line:7:5, col:31>
|   | `-VarDecl 0x12d941818 <col:5, col:30> col:15 used y_offset_idx 'const int' cinit
|   |   `-IntegerLiteral 0x12d941880 <col:30> 'int' 3
|   |-DeclStmt 0x12d941958 <line:8:5, col:35>
|   | `-VarDecl 0x12d9418d0 <col:5, col:30> col:16 used full_circle 'const int' cinit
|   |   `-IntegerLiteral 0x12d941938 <col:30> 'int' 23360
|   |-DeclStmt 0x12d942618 <line:10:5, col:55>
|   | `-VarDecl 0x12d941b60 <col:5, col:54> col:10 used dia 'int' cinit
|   |   `-ImplicitCastExpr 0x12d942600 <col:19, col:54> 'int' <FloatingToIntegral>
|   |     `-CallExpr 0x12d9425d8 <col:19, col:54> 'double'
|   |       |-ImplicitCastExpr 0x12d9425c0 <col:19> 'double (*)(double)' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x12d9421f0 <col:19> 'double (double)' Function 0x12d942030 'round' 'double (double)'
|   |       `-CallExpr 0x12d942598 <col:25, col:53> 'double'
|   |         |-ImplicitCastExpr 0x12d942580 <col:25> 'double (*)(double)' <FunctionToPointerDecay>
|   |         | `-DeclRefExpr 0x12d9423d0 <col:25> 'double (double)' Function 0x12d942210 'fabs' 'double (double)'
|   |         `-BinaryOperator 0x12d942528 <col:30, col:48> 'double' '*'
|   |           |-ImplicitCastExpr 0x12d9424a0 <col:30, col:44> 'double' <LValueToRValue>
|   |           | `-ArraySubscriptExpr 0x12d942460 <col:30, col:44> 'double' lvalue
|   |           |   |-ImplicitCastExpr 0x12d942430 <col:30> 'double *' <LValueToRValue>
|   |           |   | `-DeclRefExpr 0x12d9423f0 <col:30> 'double *' lvalue ParmVar 0x12d928258 'p' 'double *'
|   |           |   `-ImplicitCastExpr 0x12d942448 <col:32> 'int' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x12d942410 <col:32> 'const int' lvalue Var 0x12d9286a0 'diameter_idx' 'const int'
|   |           `-ImplicitCastExpr 0x12d9424b8 <col:48> 'double' <LValueToRValue>
|   |             `-DeclRefExpr 0x12d942480 <col:48> 'double' lvalue ParmVar 0x12d9282d8 'scale' 'double'
|   |-DeclStmt 0x12d942780 <line:11:5, col:30>
|   | `-VarDecl 0x12d942648 <col:5, col:29> col:10 used real_x 'int' cinit
|   |   `-BinaryOperator 0x12d942760 <col:19, col:29> 'int' '-'
|   |     |-ImplicitCastExpr 0x12d942748 <col:19> 'int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x12d9426b0 <col:19> 'int' lvalue ParmVar 0x12d928358 'x' 'int'
|   |     `-BinaryOperator 0x12d942728 <col:23, col:29> 'int' '/'
|   |       |-ImplicitCastExpr 0x12d942710 <col:23> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x12d9426d0 <col:23> 'int' lvalue Var 0x12d941b60 'dia' 'int'
|   |       `-IntegerLiteral 0x12d9426f0 <col:29> 'int' 2
|   |-DeclStmt 0x12f008938 <line:12:5, col:30>
|   | `-VarDecl 0x12f008800 <col:5, col:29> col:10 used real_y 'int' cinit
|   |   `-BinaryOperator 0x12f008918 <col:19, col:29> 'int' '-'
|   |     |-ImplicitCastExpr 0x12f008900 <col:19> 'int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x12f008868 <col:19> 'int' lvalue ParmVar 0x12d9283d8 'y' 'int'
|   |     `-BinaryOperator 0x12f0088e0 <col:23, col:29> 'int' '/'
|   |       |-ImplicitCastExpr 0x12f0088c8 <col:23> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x12f008888 <col:23> 'int' lvalue Var 0x12d941b60 'dia' 'int'
|   |       `-IntegerLiteral 0x12f0088a8 <col:29> 'int' 2
|   |-CallExpr 0x12f008ad8 <line:15:5, col:29> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x12f008a30 <col:5> 'int ()' Function 0x12f008978 'gdk_gc_copy' 'int ()'
|   | |-RecoveryExpr 0x12f008ab8 <col:17> '<dependent type>' contains-errors lvalue
|   | `-RecoveryExpr 0x12f008a68 <col:27> '<dependent type>' contains-errors lvalue
|   |-CompoundAssignOperator 0x12f008d40 <line:17:5, col:52> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-DeclRefExpr 0x12f008b08 <col:5> 'int' lvalue Var 0x12d942648 'real_x' 'int'
|   | `-CStyleCastExpr 0x12f008d18 <col:15, col:52> 'int' <FloatingToIntegral>
|   |   `-ParenExpr 0x12f008cf8 <col:20, col:52> 'double'
|   |     `-BinaryOperator 0x12f008ca0 <col:21, col:47> 'double' '*'
|   |       |-ImplicitCastExpr 0x12f008c30 <col:21, col:35> 'double' <LValueToRValue>
|   |       | `-ArraySubscriptExpr 0x12f008b98 <col:21, col:35> 'double' lvalue
|   |       |   |-ImplicitCastExpr 0x12f008b68 <col:21> 'double *' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x12f008b28 <col:21> 'double *' lvalue ParmVar 0x12d928258 'p' 'double *'
|   |       |   `-ImplicitCastExpr 0x12f008b80 <col:23> 'int' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x12f008b48 <col:23> 'const int' lvalue Var 0x12d928758 'x_offset_idx' 'const int'
|   |       `-CStyleCastExpr 0x12f008c08 <col:39, col:47> 'double' <NoOp>
|   |         `-ImplicitCastExpr 0x12f008bf0 <col:47> 'double' <LValueToRValue> part_of_explicit_cast
|   |           `-DeclRefExpr 0x12f008bb8 <col:47> 'double' lvalue ParmVar 0x12d9282d8 'scale' 'double'
|   |-CompoundAssignOperator 0x12f008fa8 <line:18:5, col:52> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-DeclRefExpr 0x12f008d70 <col:5> 'int' lvalue Var 0x12f008800 'real_y' 'int'
|   | `-CStyleCastExpr 0x12f008f80 <col:15, col:52> 'int' <FloatingToIntegral>
|   |   `-ParenExpr 0x12f008f60 <col:20, col:52> 'double'
|   |     `-BinaryOperator 0x12f008f08 <col:21, col:47> 'double' '*'
|   |       |-ImplicitCastExpr 0x12f008e98 <col:21, col:35> 'double' <LValueToRValue>
|   |       | `-ArraySubscriptExpr 0x12f008e00 <col:21, col:35> 'double' lvalue
|   |       |   |-ImplicitCastExpr 0x12f008dd0 <col:21> 'double *' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x12f008d90 <col:21> 'double *' lvalue ParmVar 0x12d928258 'p' 'double *'
|   |       |   `-ImplicitCastExpr 0x12f008de8 <col:23> 'int' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x12f008db0 <col:23> 'const int' lvalue Var 0x12d941818 'y_offset_idx' 'const int'
|   |       `-CStyleCastExpr 0x12f008e70 <col:39, col:47> 'double' <NoOp>
|   |         `-ImplicitCastExpr 0x12f008e58 <col:47> 'double' <LValueToRValue> part_of_explicit_cast
|   |           `-DeclRefExpr 0x12f008e20 <col:47> 'double' lvalue ParmVar 0x12d9282d8 'scale' 'double'
|   |-IfStmt 0x12f009350 <line:21:5, line:24:5>
|   | |-BinaryOperator 0x12f0090f8 <line:21:9, col:28> 'int' '=='
|   | | |-ImplicitCastExpr 0x12f009088 <col:9, col:23> 'double' <LValueToRValue>
|   | | | `-ArraySubscriptExpr 0x12f009048 <col:9, col:23> 'double' lvalue
|   | | |   |-ImplicitCastExpr 0x12f009018 <col:9> 'double *' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x12f008fd8 <col:9> 'double *' lvalue ParmVar 0x12d928258 'p' 'double *'
|   | | |   `-ImplicitCastExpr 0x12f009030 <col:11> 'int' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x12f008ff8 <col:11> 'const int' lvalue Var 0x12d9285e8 'exposure_idx' 'const int'
|   | | `-FloatingLiteral 0x12f009068 <col:28> 'double' 0.000000e+00
|   | `-CompoundStmt 0x12f009338 <col:33, line:24:5>
|   |   `-CallExpr 0x12f009308 <line:23:2, col:40> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x12f009218 <col:2> 'int ()' Function 0x12f009160 'gdk_gc_set_foreground' 'int ()'
|   |     |-RecoveryExpr 0x12f0092b0 <col:24> '<dependent type>' contains-errors lvalue
|   |     `-UnaryOperator 0x12f0092f0 <col:34, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |       `-RecoveryExpr 0x12f0092d0 <col:35> '<dependent type>' contains-errors lvalue
|   `-ReturnStmt 0x12f009790 <line:38:5>
|-FunctionDecl 0x12d942030 <line:10:19> col:19 implicit used round 'double (double)' extern
| |-ParmVarDecl 0x12d942130 <<invalid sloc>> <invalid sloc> 'double'
| |-BuiltinAttr 0x12d9420d8 <<invalid sloc>> Implicit 1145
| |-NoThrowAttr 0x12d9421a0 <col:19> Implicit
| `-ConstAttr 0x12d9421c8 <col:19> Implicit
`-FunctionDecl 0x12d942210 <col:25> col:25 implicit used fabs 'double (double)' extern
  |-ParmVarDecl 0x12d942310 <<invalid sloc>> <invalid sloc> 'double'
  |-BuiltinAttr 0x12d9422b8 <<invalid sloc>> Implicit 1004
  |-NoThrowAttr 0x12d942380 <col:25> Implicit
  `-ConstAttr 0x12d9423a8 <col:25> Implicit
