TranslationUnitDecl 0x13e855008 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13e855eb8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13e8555d0 '__int128'
|-TypedefDecl 0x13e855f28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13e8555f0 'unsigned __int128'
|-TypedefDecl 0x13e925c30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13e925a00 'struct __NSConstantString_tag'
|   `-Record 0x13e855f80 '__NSConstantString_tag'
|-TypedefDecl 0x13e925c98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13e855790 '__SVInt8_t'
|-TypedefDecl 0x13e925d00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13e8557b0 '__SVInt16_t'
|-TypedefDecl 0x13e925d68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13e8557d0 '__SVInt32_t'
|-TypedefDecl 0x13e925dd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13e8557f0 '__SVInt64_t'
|-TypedefDecl 0x13e925e38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13e855810 '__SVUint8_t'
|-TypedefDecl 0x13e925ea0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13e855830 '__SVUint16_t'
|-TypedefDecl 0x13e925f08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13e855850 '__SVUint32_t'
|-TypedefDecl 0x13e925f70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13e855870 '__SVUint64_t'
|-TypedefDecl 0x13e925fd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13e855890 '__SVFloat16_t'
|-TypedefDecl 0x13e926040 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13e8558b0 '__SVFloat32_t'
|-TypedefDecl 0x13e9260a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13e8558d0 '__SVFloat64_t'
|-TypedefDecl 0x13e926110 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13e8558f0 '__SVBfloat16_t'
|-TypedefDecl 0x13e926178 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13e855910 '__clang_svint8x2_t'
|-TypedefDecl 0x13e9261e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13e855930 '__clang_svint16x2_t'
|-TypedefDecl 0x13e926248 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13e855950 '__clang_svint32x2_t'
|-TypedefDecl 0x13e9262b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13e855970 '__clang_svint64x2_t'
|-TypedefDecl 0x13e926318 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13e855990 '__clang_svuint8x2_t'
|-TypedefDecl 0x13e926380 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13e8559b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13e9263e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13e8559d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13e926450 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13e8559f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13e9264b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13e855a10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13e926520 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13e855a30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13e926588 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13e855a50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13e9265f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13e855a70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13e926658 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13e855a90 '__clang_svint8x3_t'
|-TypedefDecl 0x13e9266c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13e855ab0 '__clang_svint16x3_t'
|-TypedefDecl 0x13e926728 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13e855ad0 '__clang_svint32x3_t'
|-TypedefDecl 0x13e926790 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13e855af0 '__clang_svint64x3_t'
|-TypedefDecl 0x13e9267f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13e855b10 '__clang_svuint8x3_t'
|-TypedefDecl 0x13e926860 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13e855b30 '__clang_svuint16x3_t'
|-TypedefDecl 0x13e9268c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13e855b50 '__clang_svuint32x3_t'
|-TypedefDecl 0x13e926930 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13e855b70 '__clang_svuint64x3_t'
|-TypedefDecl 0x13e926998 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13e855b90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13e927200 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13e855bb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13e927268 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13e855bd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13e9272d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13e855bf0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13e927338 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13e855c10 '__clang_svint8x4_t'
|-TypedefDecl 0x13e9273a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13e855c30 '__clang_svint16x4_t'
|-TypedefDecl 0x13e927408 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13e855c50 '__clang_svint32x4_t'
|-TypedefDecl 0x13e927470 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13e855c70 '__clang_svint64x4_t'
|-TypedefDecl 0x13e9274d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13e855c90 '__clang_svuint8x4_t'
|-TypedefDecl 0x13e927540 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13e855cb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13e9275a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13e855cd0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13e927610 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13e855cf0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13e927678 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13e855d10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13e9276e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13e855d30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13e927748 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13e855d50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13e9277b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13e855d70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13e927818 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13e855d90 '__SVBool_t'
|-TypedefDecl 0x13e927880 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13e855db0 '__clang_svboolx2_t'
|-TypedefDecl 0x13e9278e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13e855dd0 '__clang_svboolx4_t'
|-TypedefDecl 0x13e927950 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13e855df0 '__SVCount_t'
|-TypedefDecl 0x13e9279f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13e9279b0 'char *'
|   `-BuiltinType 0x13e8550b0 'char'
|-TypedefDecl 0x13e927a68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13e9279b0 'char *'
|   `-BuiltinType 0x13e8550b0 'char'
|-FunctionDecl 0x13e927c88 <dataset_diviso_filec/func14373_nonvuln.c:1:1, line:42:1> line:1:9 invalid menu_cache_get_desktop_env_flag 'int (int *, const char *)'
| |-ParmVarDecl 0x13e927b28 <col:42, col:53> col:53 invalid cache 'int *'
| |-ParmVarDecl 0x13e927ba8 <col:60, col:72> col:72 used desktop_env 'const char *'
| `-CompoundStmt 0x13e943db0 <line:2:1, line:42:1>
|   |-DeclStmt 0x13e927df0 <line:3:5, col:14>
|   | `-VarDecl 0x13e927d88 <col:5, col:12> col:12 used de 'char **'
|   |-DeclStmt 0x13e927e88 <line:4:5, col:16>
|   | `-VarDecl 0x13e927e20 <col:5, col:12> col:12 used envs 'char **'
|   |-DeclStmt 0x13e927f20 <line:6:5, col:10>
|   | `-VarDecl 0x13e927eb8 <col:5, col:9> col:9 used j 'int'
|   |-IfStmt 0x13e9281c0 <line:8:5, line:9:16>
|   | |-BinaryOperator 0x13e928158 <line:8:9, col:50> 'int' contains-errors '||'
|   | | |-BinaryOperator 0x13e9280b0 <col:9, col:24> 'int' contains-errors '=='
|   | | | |-DeclRefExpr 0x13e927f38 <col:9> 'const char *' lvalue ParmVar 0x13e927ba8 'desktop_env' 'const char *'
|   | | | `-RecoveryExpr 0x13e928090 <col:24> '<dependent type>' contains-errors lvalue
|   | | `-BinaryOperator 0x13e928138 <col:32, col:50> 'int' '=='
|   | |   |-ImplicitCastExpr 0x13e928120 <col:32, col:45> 'int' <IntegralCast>
|   | |   | `-ImplicitCastExpr 0x13e928108 <col:32, col:45> 'char' <LValueToRValue>
|   | |   |   `-ArraySubscriptExpr 0x13e9280e8 <col:32, col:45> 'const char' lvalue
|   | |   |     |-ImplicitCastExpr 0x13e9280d0 <col:32> 'const char *' <LValueToRValue>
|   | |   |     | `-DeclRefExpr 0x13e927f90 <col:32> 'const char *' lvalue ParmVar 0x13e927ba8 'desktop_env' 'const char *'
|   | |   |     `-IntegerLiteral 0x13e927fb0 <col:44> 'int' 0
|   | |   `-CharacterLiteral 0x13e928008 <col:50> 'int' 0
|   | `-ReturnStmt 0x13e9281b0 <line:9:9, col:16>
|   |   `-RecoveryExpr 0x13e928190 <col:16> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x13e941f30 <line:11:5, col:45> 'char **' '='
|   | |-DeclRefExpr 0x13e9281e0 <col:5> 'char **' lvalue Var 0x13e927e20 'envs' 'char **'
|   | `-ImplicitCastExpr 0x13e941af0 <col:12, col:45> 'char **' <IntegralToPointer>
|   |   `-CallExpr 0x13e941a88 <col:12, col:45> 'int'
|   |     |-ImplicitCastExpr 0x13e941a70 <col:12> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x13e941960 <col:12> 'int ()' Function 0x13e9418a8 'g_strsplit' 'int ()'
|   |     |-ImplicitCastExpr 0x13e941ac0 <col:23> 'const char *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x13e941980 <col:23> 'const char *' lvalue ParmVar 0x13e927ba8 'desktop_env' 'const char *'
|   |     |-ImplicitCastExpr 0x13e941ad8 <col:36> 'char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x13e9419e0 <col:36> 'char[4]' lvalue "STR"
|   |     `-UnaryOperator 0x13e941a20 <col:43, col:44> 'int' prefix '-'
|   |       `-IntegerLiteral 0x13e941a00 <col:44> 'int' 1
|   |-BinaryOperator 0x13e941fd8 <line:13:5, col:17> 'char **' contains-errors '='
|   | |-DeclRefExpr 0x13e941f50 <col:5> 'char **' lvalue Var 0x13e927d88 'de' 'char **'
|   | `-CXXDependentScopeMemberExpr 0x13e941f90 <col:10, col:17> '<dependent type>' contains-errors lvalue ->known_des
|   |   `-RecoveryExpr 0x13e941f70 <col:10> '<dependent type>' contains-errors lvalue
|   |-ForStmt 0x13e943c00 <line:14:5, line:38:5>
|   | |-BinaryOperator 0x13e942038 <line:14:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x13e941ff8 <col:10> 'int' lvalue Var 0x13e927eb8 'j' 'int'
|   | | `-IntegerLiteral 0x13e942018 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-ImplicitCastExpr 0x13e9420e8 <col:17, col:23> 'char *' <LValueToRValue>
|   | | `-ArraySubscriptExpr 0x13e9420c8 <col:17, col:23> 'char *' lvalue
|   | |   |-ImplicitCastExpr 0x13e942098 <col:17> 'char **' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x13e942058 <col:17> 'char **' lvalue Var 0x13e927e20 'envs' 'char **'
|   | |   `-ImplicitCastExpr 0x13e9420b0 <col:22> 'int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x13e942078 <col:22> 'int' lvalue Var 0x13e927eb8 'j' 'int'
|   | |-UnaryOperator 0x13e942120 <col:26, col:27> 'int' postfix '++'
|   | | `-DeclRefExpr 0x13e942100 <col:26> 'int' lvalue Var 0x13e927eb8 'j' 'int'
|   | `-CompoundStmt 0x13e943be8 <line:15:5, line:38:5>
|   |   `-IfStmt 0x13e9431e0 <line:16:9, line:27:9>
|   |     |-ImplicitCastExpr 0x13e942158 <line:16:13> 'char **' <LValueToRValue>
|   |     | `-DeclRefExpr 0x13e942138 <col:13> 'char **' lvalue Var 0x13e927d88 'de' 'char **'
|   |     `-CompoundStmt 0x13e9431b8 <line:17:9, line:27:9>
|   |       |-DeclStmt 0x13e9421f0 <line:18:13, col:18>
|   |       | `-VarDecl 0x13e942188 <col:13, col:17> col:17 used i 'int'
|   |       |-ForStmt 0x13e943020 <line:19:13, line:21:21>
|   |       | |-BinaryOperator 0x13e942248 <line:19:18, col:22> 'int' '='
|   |       | | |-DeclRefExpr 0x13e942208 <col:18> 'int' lvalue Var 0x13e942188 'i' 'int'
|   |       | | `-IntegerLiteral 0x13e942228 <col:22> 'int' 0
|   |       | |-<<<NULL>>>
|   |       | |-ImplicitCastExpr 0x13e9422f8 <col:25, col:29> 'char *' <LValueToRValue>
|   |       | | `-ArraySubscriptExpr 0x13e9422d8 <col:25, col:29> 'char *' lvalue
|   |       | |   |-ImplicitCastExpr 0x13e9422a8 <col:25> 'char **' <LValueToRValue>
|   |       | |   | `-DeclRefExpr 0x13e942268 <col:25> 'char **' lvalue Var 0x13e927d88 'de' 'char **'
|   |       | |   `-ImplicitCastExpr 0x13e9422c0 <col:28> 'int' <LValueToRValue>
|   |       | |     `-DeclRefExpr 0x13e942288 <col:28> 'int' lvalue Var 0x13e942188 'i' 'int'
|   |       | |-UnaryOperator 0x13e942330 <col:32, col:34> 'int' prefix '++'
|   |       | | `-DeclRefExpr 0x13e942310 <col:34> 'int' lvalue Var 0x13e942188 'i' 'int'
|   |       | `-IfStmt 0x13e943000 <line:20:17, line:21:21>
|   |       |   |-BinaryOperator 0x13e9427d8 <line:20:21, col:47> 'int' '=='
|   |       |   | |-CallExpr 0x13e942728 <col:21, col:42> 'int'
|   |       |   | | |-ImplicitCastExpr 0x13e942710 <col:21> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |       |   | | | `-DeclRefExpr 0x13e942570 <col:21> 'int (const char *, const char *)' Function 0x13e942390 'strcmp' 'int (const char *, const char *)'
|   |       |   | | |-ImplicitCastExpr 0x13e942770 <col:28, col:34> 'const char *' <NoOp>
|   |       |   | | | `-ImplicitCastExpr 0x13e942758 <col:28, col:34> 'char *' <LValueToRValue>
|   |       |   | | |   `-ArraySubscriptExpr 0x13e942600 <col:28, col:34> 'char *' lvalue
|   |       |   | | |     |-ImplicitCastExpr 0x13e9425d0 <col:28> 'char **' <LValueToRValue>
|   |       |   | | |     | `-DeclRefExpr 0x13e942590 <col:28> 'char **' lvalue Var 0x13e927e20 'envs' 'char **'
|   |       |   | | |     `-ImplicitCastExpr 0x13e9425e8 <col:33> 'int' <LValueToRValue>
|   |       |   | | |       `-DeclRefExpr 0x13e9425b0 <col:33> 'int' lvalue Var 0x13e927eb8 'j' 'int'
|   |       |   | | `-ImplicitCastExpr 0x13e9427a0 <col:37, col:41> 'const char *' <NoOp>
|   |       |   | |   `-ImplicitCastExpr 0x13e942788 <col:37, col:41> 'char *' <LValueToRValue>
|   |       |   | |     `-ArraySubscriptExpr 0x13e942690 <col:37, col:41> 'char *' lvalue
|   |       |   | |       |-ImplicitCastExpr 0x13e942660 <col:37> 'char **' <LValueToRValue>
|   |       |   | |       | `-DeclRefExpr 0x13e942620 <col:37> 'char **' lvalue Var 0x13e927d88 'de' 'char **'
|   |       |   | |       `-ImplicitCastExpr 0x13e942678 <col:40> 'int' <LValueToRValue>
|   |       |   | |         `-DeclRefExpr 0x13e942640 <col:40> 'int' lvalue Var 0x13e942188 'i' 'int'
|   |       |   | `-IntegerLiteral 0x13e9427b8 <col:47> 'int' 0
|   |       |   `-BreakStmt 0x13e9427f8 <line:21:21>
|   |       `-IfStmt 0x13e943198 <line:22:13, line:26:13>
|   |         |-ImplicitCastExpr 0x13e9430e8 <line:22:17, col:21> 'char *' <LValueToRValue>
|   |         | `-ArraySubscriptExpr 0x13e9430c8 <col:17, col:21> 'char *' lvalue
|   |         |   |-ImplicitCastExpr 0x13e943098 <col:17> 'char **' <LValueToRValue>
|   |         |   | `-DeclRefExpr 0x13e943058 <col:17> 'char **' lvalue Var 0x13e927d88 'de' 'char **'
|   |         |   `-ImplicitCastExpr 0x13e9430b0 <col:20> 'int' <LValueToRValue>
|   |         |     `-DeclRefExpr 0x13e943078 <col:20> 'int' lvalue Var 0x13e942188 'i' 'int'
|   |         `-CompoundStmt 0x13e943180 <line:23:13, line:26:13>
|   |           `-ContinueStmt 0x13e943178 <line:25:17>
|   `-CallExpr 0x13e943d70 <line:40:5, col:20> 'int'
|     |-ImplicitCastExpr 0x13e943d58 <col:5> 'int (*)()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x13e943d18 <col:5> 'int ()' Function 0x13e943c60 'g_strfreev' 'int ()'
|     `-ImplicitCastExpr 0x13e943d98 <col:16> 'char **' <LValueToRValue>
|       `-DeclRefExpr 0x13e943d38 <col:16> 'char **' lvalue Var 0x13e927e20 'envs' 'char **'
`-FunctionDecl 0x13e942390 <line:20:21> col:21 implicit used strcmp 'int (const char *, const char *)' extern
  |-ParmVarDecl 0x13e942490 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x13e9424f8 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x13e942438 <<invalid sloc>> Implicit 887
