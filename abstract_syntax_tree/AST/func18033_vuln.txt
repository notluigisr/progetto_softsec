TranslationUnitDecl 0x123055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1230564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x123055bd0 '__int128'
|-TypedefDecl 0x123056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x123055bf0 'unsigned __int128'
|-TypedefDecl 0x123126c30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x123126a00 'struct __NSConstantString_tag'
|   `-Record 0x123056580 '__NSConstantString_tag'
|-TypedefDecl 0x123126c98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x123055d90 '__SVInt8_t'
|-TypedefDecl 0x123126d00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x123055db0 '__SVInt16_t'
|-TypedefDecl 0x123126d68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x123055dd0 '__SVInt32_t'
|-TypedefDecl 0x123126dd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x123055df0 '__SVInt64_t'
|-TypedefDecl 0x123126e38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x123055e10 '__SVUint8_t'
|-TypedefDecl 0x123126ea0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x123055e30 '__SVUint16_t'
|-TypedefDecl 0x123126f08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x123055e50 '__SVUint32_t'
|-TypedefDecl 0x123126f70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x123055e70 '__SVUint64_t'
|-TypedefDecl 0x123126fd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x123055e90 '__SVFloat16_t'
|-TypedefDecl 0x123127040 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x123055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1231270a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x123055ed0 '__SVFloat64_t'
|-TypedefDecl 0x123127110 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x123055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x123127178 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x123055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1231271e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x123055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x123127248 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x123055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1231272b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x123055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x123127318 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x123055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x123127380 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x123055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1231273e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x123055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x123127450 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x123055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1231274b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x123056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x123127520 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x123056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x123127588 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x123056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1231275f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x123056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x123127658 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x123056090 '__clang_svint8x3_t'
|-TypedefDecl 0x1231276c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1230560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x123127728 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1230560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x123127790 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1230560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x1231277f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x123056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x123127860 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x123056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x1231278c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x123056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x123127930 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x123056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x123127998 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x123056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x123128200 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1230561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x123128268 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1230561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1231282d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1230561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x123128338 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x123056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1231283a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x123056230 '__clang_svint16x4_t'
|-TypedefDecl 0x123128408 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x123056250 '__clang_svint32x4_t'
|-TypedefDecl 0x123128470 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x123056270 '__clang_svint64x4_t'
|-TypedefDecl 0x1231284d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x123056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x123128540 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1230562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1231285a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1230562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x123128610 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1230562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x123128678 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x123056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1231286e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x123056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x123128748 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x123056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1231287b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x123056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x123128818 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x123056390 '__SVBool_t'
|-TypedefDecl 0x123128880 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1230563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1231288e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1230563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x123128950 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1230563f0 '__SVCount_t'
|-TypedefDecl 0x1231289f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1231289b0 'char *'
|   `-BuiltinType 0x1230556b0 'char'
|-TypedefDecl 0x123128a68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1231289b0 'char *'
|   `-BuiltinType 0x1230556b0 'char'
|-RecordDecl 0x123128ac0 <dataset_diviso_filec/func18033_vuln.c:1:8, col:15> col:15 struct dentry
`-FunctionDecl 0x123141688 <col:1, line:97:1> line:1:23 ecryptfs_mount 'struct dentry *(struct file_system_type *, int, const char *, void *)' static
  |-ParmVarDecl 0x1231290e8 <col:38, col:63> col:63 used fs_type 'struct file_system_type *'
  |-ParmVarDecl 0x123129168 <col:72, col:76> col:76 used flags 'int'
  |-ParmVarDecl 0x123141400 <line:2:4, col:16> col:16 used dev_name 'const char *'
  |-ParmVarDecl 0x123141480 <col:26, col:32> col:32 used raw_data 'void *'
  `-CompoundStmt 0x12314b2d8 <line:3:1, line:97:1>
    |-DeclStmt 0x123141988 <line:4:2, col:23>
    | |-RecordDecl 0x123141798 <col:2, col:9> col:9 struct super_block
    | `-VarDecl 0x123141908 <col:2, col:22> col:22 used s 'struct super_block *'
    |-DeclStmt 0x123141b88 <line:5:2, col:30>
    | |-RecordDecl 0x1231419a0 <col:2, col:9> col:9 struct ecryptfs_sb_info
    | `-VarDecl 0x123141b08 <col:2, col:27> col:27 used sbi 'struct ecryptfs_sb_info *'
    |-DeclStmt 0x123141d88 <line:6:2, col:40>
    | |-RecordDecl 0x123141ba0 <col:2, col:9> col:9 struct ecryptfs_dentry_info
    | `-VarDecl 0x123141d08 <col:2, col:31> col:31 used root_info 'struct ecryptfs_dentry_info *'
    |-DeclStmt 0x123141eb0 <line:7:2, col:25>
    | `-VarDecl 0x123141db8 <col:2, col:20> col:14 used err 'const char *' cinit
    |   `-ImplicitCastExpr 0x123141e98 <col:20> 'const char *' <NoOp>
    |     `-ImplicitCastExpr 0x123141e80 <col:20> 'char *' <ArrayToPointerDecay>
    |       `-StringLiteral 0x123141e60 <col:20> 'char[4]' lvalue "STR"
    |-DeclStmt 0x1231420b8 <line:8:2, col:21>
    | |-RecordDecl 0x123141ec8 <col:2, col:9> col:9 struct inode
    | `-VarDecl 0x123142038 <col:2, col:16> col:16 used inode 'struct inode *'
    |-DeclStmt 0x123142248 <line:9:2, col:18>
    | |-RecordDecl 0x1231420d0 <col:2, col:9> col:9 struct path
    | `-VarDecl 0x1231421c8 <col:2, col:14> col:14 invalid path 'struct path'
    |-DeclStmt 0x1231422e0 <line:10:2, col:8>
    | `-VarDecl 0x123142278 <col:2, col:6> col:6 used rc 'int'
    |-BinaryOperator 0x1231475c8 <line:12:2, col:60> 'struct ecryptfs_sb_info *' contains-errors '='
    | |-DeclRefExpr 0x1231422f8 <col:2> 'struct ecryptfs_sb_info *' lvalue Var 0x123141b08 'sbi' 'struct ecryptfs_sb_info *'
    | `-CallExpr 0x123147598 <col:8, col:60> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1231474b8 <col:8> 'int ()' Function 0x123147400 'kmem_cache_zalloc' 'int ()'
    |   |-RecoveryExpr 0x123147558 <col:26> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x123147578 <col:50> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x1231477b8 <line:13:2, line:16:2>
    | |-UnaryOperator 0x123147620 <line:13:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x123147608 <col:7> 'struct ecryptfs_sb_info *' <LValueToRValue>
    | |   `-DeclRefExpr 0x1231475e8 <col:7> 'struct ecryptfs_sb_info *' lvalue Var 0x123141b08 'sbi' 'struct ecryptfs_sb_info *'
    | `-CompoundStmt 0x123147798 <col:12, line:16:2>
    |   |-BinaryOperator 0x123147710 <line:14:3, col:9> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x123147638 <col:3> 'int' lvalue Var 0x123142278 'rc' 'int'
    |   | `-UnaryOperator 0x1231476f8 <col:8, col:9> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |   `-ImplicitCastExpr 0x1231476e0 <col:9> '<dependent type>' contains-errors <LValueToRValue>
    |   |     `-RecoveryExpr 0x1231476c0 <col:9> '<dependent type>' contains-errors lvalue
    |   `-GotoStmt 0x123147780 <line:15:3, col:8> 'out' 0x123147730
    |-BinaryOperator 0x1231479e8 <line:18:2, col:43> 'int' '='
    | |-DeclRefExpr 0x1231477d8 <col:2> 'int' lvalue Var 0x123142278 'rc' 'int'
    | `-CallExpr 0x123147988 <col:7, col:43> 'int'
    |   |-ImplicitCastExpr 0x123147970 <col:7> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x1231478d8 <col:7> 'int ()' Function 0x123147820 'ecryptfs_parse_options' 'int ()'
    |   |-ImplicitCastExpr 0x1231479b8 <col:30> 'struct ecryptfs_sb_info *' <LValueToRValue>
    |   | `-DeclRefExpr 0x1231478f8 <col:30> 'struct ecryptfs_sb_info *' lvalue Var 0x123141b08 'sbi' 'struct ecryptfs_sb_info *'
    |   `-ImplicitCastExpr 0x1231479d0 <col:35> 'void *' <LValueToRValue>
    |     `-DeclRefExpr 0x123147918 <col:35> 'void *' lvalue ParmVar 0x123141480 'raw_data' 'void *'
    |-IfStmt 0x123147b08 <line:19:2, line:22:2>
    | |-ImplicitCastExpr 0x123147a28 <line:19:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x123147a08 <col:6> 'int' lvalue Var 0x123142278 'rc' 'int'
    | `-CompoundStmt 0x123147ae8 <col:10, line:22:2>
    |   |-BinaryOperator 0x123147ab0 <line:20:3, col:9> 'const char *' '='
    |   | |-DeclRefExpr 0x123147a40 <col:3> 'const char *' lvalue Var 0x123141db8 'err' 'const char *'
    |   | `-ImplicitCastExpr 0x123147a98 <col:9> 'const char *' <NoOp>
    |   |   `-ImplicitCastExpr 0x123147a80 <col:9> 'char *' <ArrayToPointerDecay>
    |   |     `-StringLiteral 0x123147a60 <col:9> 'char[4]' lvalue "STR"
    |   `-GotoStmt 0x123147ad0 <line:21:3, col:8> 'out' 0x123147730
    |-BinaryOperator 0x123147db0 <line:24:2, col:46> 'struct super_block *' contains-errors '='
    | |-DeclRefExpr 0x123147b28 <col:2> 'struct super_block *' lvalue Var 0x123141908 's' 'struct super_block *'
    | `-CallExpr 0x123147d70 <col:6, col:46> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x123147c28 <col:6> 'int ()' Function 0x123147b70 'sget' 'int ()'
    |   |-DeclRefExpr 0x123147c48 <col:11> 'struct file_system_type *' lvalue ParmVar 0x1231290e8 'fs_type' 'struct file_system_type *'
    |   |-RecoveryExpr 0x123147d10 <col:20> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x123147d30 <col:26> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x123147d50 <col:42> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x123148138 <line:25:2, line:28:2>
    | |-CallExpr 0x123147f08 <line:25:6, col:14> 'int'
    | | |-ImplicitCastExpr 0x123147ef0 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x123147eb0 <col:6> 'int ()' Function 0x123147df8 'IS_ERR' 'int ()'
    | | `-ImplicitCastExpr 0x123147f30 <col:13> 'struct super_block *' <LValueToRValue>
    | |   `-DeclRefExpr 0x123147ed0 <col:13> 'struct super_block *' lvalue Var 0x123141908 's' 'struct super_block *'
    | `-CompoundStmt 0x123148118 <col:17, line:28:2>
    |   |-BinaryOperator 0x1231480e0 <line:26:3, col:17> 'int' '='
    |   | |-DeclRefExpr 0x123147f48 <col:3> 'int' lvalue Var 0x123142278 'rc' 'int'
    |   | `-CallExpr 0x1231480a0 <col:8, col:17> 'int'
    |   |   |-ImplicitCastExpr 0x123148088 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |   |   | `-DeclRefExpr 0x123148048 <col:8> 'int ()' Function 0x123147f90 'PTR_ERR' 'int ()'
    |   |   `-ImplicitCastExpr 0x1231480c8 <col:16> 'struct super_block *' <LValueToRValue>
    |   |     `-DeclRefExpr 0x123148068 <col:16> 'struct super_block *' lvalue Var 0x123141908 's' 'struct super_block *'
    |   `-GotoStmt 0x123148100 <line:27:3, col:8> 'out' 0x123147730
    |-BinaryOperator 0x1231481d8 <line:30:2, col:15> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x123148190 <col:2, col:5> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x123148158 <col:2> 'struct super_block *' lvalue Var 0x123141908 's' 'struct super_block *'
    | `-DeclRefExpr 0x1231481b8 <col:15> 'int' lvalue ParmVar 0x123129168 'flags' 'int'
    |-BinaryOperator 0x123148478 <line:31:2, col:64> 'int' contains-errors '='
    | |-DeclRefExpr 0x1231481f8 <col:2> 'int' lvalue Var 0x123142278 'rc' 'int'
    | `-CallExpr 0x123148440 <col:7, col:64> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1231482f8 <col:7> 'int ()' Function 0x123148240 'bdi_setup_and_register' 'int ()'
    |   |-UnaryOperator 0x123148378 <col:30, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-RecoveryExpr 0x123148350 <col:31, col:36> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x123148318 <col:31> 'struct ecryptfs_sb_info *' lvalue Var 0x123141b08 'sbi' 'struct ecryptfs_sb_info *'
    |   |-StringLiteral 0x123148390 <col:41> 'char[4]' lvalue "STR"
    |   `-RecoveryExpr 0x123148420 <col:48> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x123148538 <line:32:2, line:33:8>
    | |-ImplicitCastExpr 0x1231484b8 <line:32:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x123148498 <col:6> 'int' lvalue Var 0x123142278 'rc' 'int'
    | `-GotoStmt 0x123148520 <line:33:3, col:8> 'out1' 0x1231484d0
    |-CallExpr 0x1231486b0 <line:35:2, col:40> 'int'
    | |-ImplicitCastExpr 0x123148698 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x123148638 <col:2> 'int ()' Function 0x123148580 'ecryptfs_set_superblock_private' 'int ()'
    | |-ImplicitCastExpr 0x1231486e0 <col:34> 'struct super_block *' <LValueToRValue>
    | | `-DeclRefExpr 0x123148658 <col:34> 'struct super_block *' lvalue Var 0x123141908 's' 'struct super_block *'
    | `-ImplicitCastExpr 0x1231486f8 <col:37> 'struct ecryptfs_sb_info *' <LValueToRValue>
    |   `-DeclRefExpr 0x123148678 <col:37> 'struct ecryptfs_sb_info *' lvalue Var 0x123141b08 'sbi' 'struct ecryptfs_sb_info *'
    |-BinaryOperator 0x1231487e8 <line:36:2, col:19> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x123148748 <col:2, col:5> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x123148710 <col:2> 'struct super_block *' lvalue Var 0x123141908 's' 'struct super_block *'
    | `-UnaryOperator 0x1231487d0 <col:13, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x1231487a8 <col:14, col:19> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x123148770 <col:14> 'struct ecryptfs_sb_info *' lvalue Var 0x123141b08 'sbi' 'struct ecryptfs_sb_info *'
    |-BinaryOperator 0x123148880 <line:39:2, col:8> 'struct ecryptfs_sb_info *' contains-errors '='
    | |-DeclRefExpr 0x123148808 <col:2> 'struct ecryptfs_sb_info *' lvalue Var 0x123141b08 'sbi' 'struct ecryptfs_sb_info *'
    | `-RecoveryExpr 0x123148860 <col:8> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x1231489d0 <line:43:2, col:8> 'const char *' '='
    | |-DeclRefExpr 0x123148960 <col:2> 'const char *' lvalue Var 0x123141db8 'err' 'const char *'
    | `-ImplicitCastExpr 0x1231489b8 <col:8> 'const char *' <NoOp>
    |   `-ImplicitCastExpr 0x1231489a0 <col:8> 'char *' <ArrayToPointerDecay>
    |     `-StringLiteral 0x123148980 <col:8> 'char[4]' lvalue "STR"
    |-IfStmt 0x123148cf0 <line:45:2, line:48:2>
    | |-ImplicitCastExpr 0x123148b88 <line:45:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x123148b68 <col:6> 'int' lvalue Var 0x123142278 'rc' 'int'
    | `-CompoundStmt 0x123148cd8 <col:10, line:48:2>
    |   `-GotoStmt 0x123148cc0 <line:47:3, col:8> 'out1' 0x1231484d0
    |-IfStmt 0x123148fc8 <line:49:2, line:55:2>
    | |-RecoveryExpr 0x123148e08 <line:49:6, col:36> '_Bool' contains-errors
    | `-CompoundStmt 0x123148fb0 <col:54, line:55:2>
    |   `-GotoStmt 0x123148f98 <line:54:3, col:8> 'out_free' 0x123148f48
    |-CallExpr 0x1231491b8 <line:56:2, col:52> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1231490c8 <col:2> 'int ()' Function 0x123149010 'ecryptfs_set_superblock_lower' 'int ()'
    | |-DeclRefExpr 0x1231490e8 <col:32> 'struct super_block *' lvalue Var 0x123141908 's' 'struct super_block *'
    | `-CXXDependentScopeMemberExpr 0x123149170 <col:35, col:48> '<dependent type>' contains-errors lvalue ->d_sb
    |   `-CXXDependentScopeMemberExpr 0x123149128 <col:35, col:40> '<dependent type>' contains-errors lvalue .dentry
    |     `-RecoveryExpr 0x123149108 <col:35> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x123149340 <line:57:2, col:37> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x123149220 <col:2, col:5> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x1231491e8 <col:2> 'struct super_block *' lvalue Var 0x123141908 's' 'struct super_block *'
    | `-CXXDependentScopeMemberExpr 0x1231492f8 <col:18, col:37> '<dependent type>' contains-errors lvalue ->s_maxbytes
    |   `-CXXDependentScopeMemberExpr 0x1231492b0 <col:18, col:31> '<dependent type>' contains-errors lvalue ->d_sb
    |     `-CXXDependentScopeMemberExpr 0x123149268 <col:18, col:23> '<dependent type>' contains-errors lvalue .dentry
    |       `-RecoveryExpr 0x123149248 <col:18> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x1231494d8 <line:58:2, col:38> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x123149398 <col:2, col:5> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x123149360 <col:2> 'struct super_block *' lvalue Var 0x123141908 's' 'struct super_block *'
    | `-CXXDependentScopeMemberExpr 0x123149490 <col:19, col:38> '<dependent type>' contains-errors lvalue ->s_blocksize
    |   `-CXXDependentScopeMemberExpr 0x123149448 <col:19, col:32> '<dependent type>' contains-errors lvalue ->d_sb
    |     `-CXXDependentScopeMemberExpr 0x123149400 <col:19, col:24> '<dependent type>' contains-errors lvalue .dentry
    |       `-RecoveryExpr 0x1231493c0 <col:19> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x123149778 <line:61:2, col:52> 'struct inode *' contains-errors '='
    | |-DeclRefExpr 0x123149558 <col:2> 'struct inode *' lvalue Var 0x123142038 'inode' 'struct inode *'
    | `-CallExpr 0x123149748 <col:10, col:52> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x123149658 <col:10> 'int ()' Function 0x1231495a0 'ecryptfs_get_inode' 'int ()'
    |   |-CXXDependentScopeMemberExpr 0x1231496e0 <col:29, col:42> '<dependent type>' contains-errors lvalue ->d_inode
    |   | `-CXXDependentScopeMemberExpr 0x123149698 <col:29, col:34> '<dependent type>' contains-errors lvalue .dentry
    |   |   `-RecoveryExpr 0x123149678 <col:29> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x123149728 <col:51> 'struct super_block *' lvalue Var 0x123141908 's' 'struct super_block *'
    |-BinaryOperator 0x123149850 <line:62:2, col:20> 'int' '='
    | |-DeclRefExpr 0x123149798 <col:2> 'int' lvalue Var 0x123142278 'rc' 'int'
    | `-CallExpr 0x123149810 <col:7, col:20> 'int'
    |   |-ImplicitCastExpr 0x1231497f8 <col:7> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x1231497b8 <col:7> 'int ()' Function 0x123147f90 'PTR_ERR' 'int ()'
    |   `-ImplicitCastExpr 0x123149838 <col:15> 'struct inode *' <LValueToRValue>
    |     `-DeclRefExpr 0x1231497d8 <col:15> 'struct inode *' lvalue Var 0x123142038 'inode' 'struct inode *'
    |-IfStmt 0x123149920 <line:63:2, line:64:8>
    | |-CallExpr 0x1231498c8 <line:63:6, col:18> 'int'
    | | |-ImplicitCastExpr 0x1231498b0 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x123149870 <col:6> 'int ()' Function 0x123147df8 'IS_ERR' 'int ()'
    | | `-ImplicitCastExpr 0x1231498f0 <col:13> 'struct inode *' <LValueToRValue>
    | |   `-DeclRefExpr 0x123149890 <col:13> 'struct inode *' lvalue Var 0x123142038 'inode' 'struct inode *'
    | `-GotoStmt 0x123149908 <line:64:3, col:8> 'out_free' 0x123148f48
    |-BinaryOperator 0x123149b18 <line:66:2, col:32> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x123149978 <col:2, col:5> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x123149940 <col:2> 'struct super_block *' lvalue Var 0x123141908 's' 'struct super_block *'
    | `-CallExpr 0x123149ad8 <col:14, col:32> 'int'
    |   |-ImplicitCastExpr 0x123149ac0 <col:14> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x123149a80 <col:14> 'int ()' Function 0x1231499c8 'd_alloc_root' 'int ()'
    |   `-ImplicitCastExpr 0x123149b00 <col:27> 'struct inode *' <LValueToRValue>
    |     `-DeclRefExpr 0x123149aa0 <col:27> 'struct inode *' lvalue Var 0x123142038 'inode' 'struct inode *'
    |-IfStmt 0x123149d98 <line:67:2, line:71:2>
    | |-UnaryOperator 0x123149bb0 <line:67:6, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x123149b98 <col:7, col:10> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x123149b70 <col:7, col:10> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x123149b38 <col:7> 'struct super_block *' lvalue Var 0x123141908 's' 'struct super_block *'
    | `-CompoundStmt 0x123149d78 <col:18, line:71:2>
    |   |-CallExpr 0x123149d00 <line:68:3, col:13> 'int'
    |   | |-ImplicitCastExpr 0x123149ce8 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x123149ca8 <col:3> 'int ()' Function 0x123149bf0 'iput' 'int ()'
    |   | `-ImplicitCastExpr 0x123149d28 <col:8> 'struct inode *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x123149cc8 <col:8> 'struct inode *' lvalue Var 0x123142038 'inode' 'struct inode *'
    |   `-GotoStmt 0x123149d60 <line:70:3, col:8> 'out_free' 0x123148f48
    |-IfStmt 0x123149e80 <line:75:2, line:76:8>
    | |-UnaryOperator 0x123149e50 <line:75:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x123149e38 <col:7> 'struct ecryptfs_dentry_info *' <LValueToRValue>
    | |   `-DeclRefExpr 0x123149e18 <col:7> 'struct ecryptfs_dentry_info *' lvalue Var 0x123141d08 'root_info' 'struct ecryptfs_dentry_info *'
    | `-GotoStmt 0x123149e68 <line:76:3, col:8> 'out_free' 0x123148f48
    |-CallExpr 0x12314a020 <line:79:2, col:50> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x123149f80 <col:2> 'int ()' Function 0x123149ec8 'ecryptfs_set_dentry_private' 'int ()'
    | |-RecoveryExpr 0x123149fd8 <col:30, col:33> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x123149fa0 <col:30> 'struct super_block *' lvalue Var 0x123141908 's' 'struct super_block *'
    | `-DeclRefExpr 0x12314a000 <col:41> 'struct ecryptfs_dentry_info *' lvalue Var 0x123141d08 'root_info' 'struct ecryptfs_dentry_info *'
    |-CallExpr 0x12314a218 <line:80:2, col:50> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12314a130 <col:2> 'int ()' Function 0x12314a078 'ecryptfs_set_dentry_lower' 'int ()'
    | |-RecoveryExpr 0x12314a188 <col:28, col:31> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x12314a150 <col:28> 'struct super_block *' lvalue Var 0x123141908 's' 'struct super_block *'
    | `-CXXDependentScopeMemberExpr 0x12314a1d0 <col:39, col:44> '<dependent type>' contains-errors lvalue .dentry
    |   `-RecoveryExpr 0x12314a1b0 <col:39> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x12314a848 <line:81:2, col:51> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12314a328 <col:2> 'int ()' Function 0x12314a270 'ecryptfs_set_dentry_lower_mnt' 'int ()'
    | |-RecoveryExpr 0x12314a380 <col:32, col:35> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x12314a348 <col:32> 'struct super_block *' lvalue Var 0x123141908 's' 'struct super_block *'
    | `-CXXDependentScopeMemberExpr 0x12314a800 <col:43, col:48> '<dependent type>' contains-errors lvalue .mnt
    |   `-RecoveryExpr 0x12314a3a8 <col:43> '<dependent type>' contains-errors lvalue
    |-ReturnStmt 0x12314aa60 <line:84:2, col:23>
    | `-CallExpr 0x12314aa38 <col:9, col:23> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12314a9b8 <col:9> 'int ()' Function 0x12314a900 'dget' 'int ()'
    |   `-RecoveryExpr 0x12314aa10 <col:14, col:17> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x12314a9d8 <col:14> 'struct super_block *' lvalue Var 0x123141908 's' 'struct super_block *'
    |-LabelStmt 0x12314abd0 <line:86:1, line:87:16> 'out_free'
    | `-CallExpr 0x12314aba8 <col:2, col:16> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12314ab50 <col:2> 'int ()' Function 0x12314aa98 'path_put' 'int ()'
    |   `-UnaryOperator 0x12314ab90 <col:11, col:12> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x12314ab70 <col:12> '<dependent type>' contains-errors lvalue
    |-LabelStmt 0x12314ad68 <line:88:1, line:89:27> 'out1'
    | `-CallExpr 0x12314ad28 <col:2, col:27> 'int'
    |   |-ImplicitCastExpr 0x12314ad10 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x12314acd0 <col:2> 'int ()' Function 0x12314ac18 'deactivate_locked_super' 'int ()'
    |   `-ImplicitCastExpr 0x12314ad50 <col:26> 'struct super_block *' <LValueToRValue>
    |     `-DeclRefExpr 0x12314acf0 <col:26> 'struct super_block *' lvalue Var 0x123141908 's' 'struct super_block *'
    |-LabelStmt 0x12314b0b8 <line:90:1, line:94:2> 'out'
    | `-IfStmt 0x12314b098 <line:91:2, line:94:2>
    |   |-ImplicitCastExpr 0x12314ada8 <line:91:6> 'struct ecryptfs_sb_info *' <LValueToRValue>
    |   | `-DeclRefExpr 0x12314ad88 <col:6> 'struct ecryptfs_sb_info *' lvalue Var 0x123141b08 'sbi' 'struct ecryptfs_sb_info *'
    |   `-CompoundStmt 0x12314b080 <col:11, line:94:2>
    |     `-CallExpr 0x12314af38 <line:92:3, col:59> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x12314aea0 <col:3> 'int ()' Function 0x12314ade8 'ecryptfs_destroy_mount_crypt_stat' 'int ()'
    |       `-UnaryOperator 0x12314af20 <col:37, col:43> '<dependent type>' contains-errors prefix '&' cannot overflow
    |         `-RecoveryExpr 0x12314aef8 <col:38, col:43> '<dependent type>' contains-errors lvalue
    |           `-DeclRefExpr 0x12314aec0 <col:38> 'struct ecryptfs_sb_info *' lvalue Var 0x123141b08 'sbi' 'struct ecryptfs_sb_info *'
    `-ReturnStmt 0x12314b2c8 <line:96:2, col:19>
      `-ImplicitCastExpr 0x12314b2b0 <col:9, col:19> 'struct dentry *' <IntegralToPointer>
        `-CallExpr 0x12314b270 <col:9, col:19> 'int'
          |-ImplicitCastExpr 0x12314b258 <col:9> 'int (*)()' <FunctionToPointerDecay>
          | `-DeclRefExpr 0x12314b218 <col:9> 'int ()' Function 0x12314b160 'ERR_PTR' 'int ()'
          `-ImplicitCastExpr 0x12314b298 <col:17> 'int' <LValueToRValue>
            `-DeclRefExpr 0x12314b238 <col:17> 'int' lvalue Var 0x123142278 'rc' 'int'
