TranslationUnitDecl 0x11f855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x11f8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x11f855bd0 '__int128'
|-TypedefDecl 0x11f856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x11f855bf0 'unsigned __int128'
|-TypedefDecl 0x12800be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12800bc00 'struct __NSConstantString_tag'
|   `-Record 0x11f856580 '__NSConstantString_tag'
|-TypedefDecl 0x12800be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x11f855d90 '__SVInt8_t'
|-TypedefDecl 0x12800bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x11f855db0 '__SVInt16_t'
|-TypedefDecl 0x12800bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x11f855dd0 '__SVInt32_t'
|-TypedefDecl 0x12800bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x11f855df0 '__SVInt64_t'
|-TypedefDecl 0x12800c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x11f855e10 '__SVUint8_t'
|-TypedefDecl 0x12800c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x11f855e30 '__SVUint16_t'
|-TypedefDecl 0x12800c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x11f855e50 '__SVUint32_t'
|-TypedefDecl 0x12800c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x11f855e70 '__SVUint64_t'
|-TypedefDecl 0x12800c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x11f855e90 '__SVFloat16_t'
|-TypedefDecl 0x12800c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x11f855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12800c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x11f855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12800c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x11f855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12800c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x11f855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12800c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x11f855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12800c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x11f855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12800c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x11f855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12800c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x11f855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12800c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x11f855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12800c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x11f855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12800c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x11f855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12800c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x11f856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12800c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x11f856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12800c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x11f856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12800c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x11f856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12800c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x11f856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12800c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x11f8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12800c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x11f8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12800c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x11f8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12800c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x11f856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12800ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x11f856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12800cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x11f856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12800cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x11f856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12800cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x11f856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12800d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x11f8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12800d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x11f8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12800d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x11f8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12800d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x11f856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12800d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x11f856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12800d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x11f856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12800d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x11f856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12800d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x11f856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12800d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x11f8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12800d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x11f8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12800d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x11f8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12800d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x11f856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12800d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x11f856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12800d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x11f856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12800d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x11f856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12800da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x11f856390 '__SVBool_t'
|-TypedefDecl 0x12800da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x11f8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12800dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x11f8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12800db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x11f8563f0 '__SVCount_t'
|-TypedefDecl 0x12800dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12800dbb0 'char *'
|   `-BuiltinType 0x11f8556b0 'char'
|-TypedefDecl 0x12800dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12800dbb0 'char *'
|   `-BuiltinType 0x11f8556b0 'char'
|-FunctionDecl 0x12800dee8 <dataset_diviso_filec/func4380_nonvuln.c:1:1, line:92:1> line:1:12 invalid guess_month 'int (const char *, int, int)' static
| |-ParmVarDecl 0x12800dcd8 <col:24, col:37> col:37 used message 'const char *'
| |-ParmVarDecl 0x12800dd70 <col:46, col:53> col:53 invalid length 'int'
| |-ParmVarDecl 0x12800ddf0 <col:61, col:68> col:68 referenced invalid indx 'int'
| `-CompoundStmt 0x12802afc8 <line:2:1, line:92:1>
|   |-DeclStmt 0x12800e028 <line:3:3, col:12>
|   | `-VarDecl 0x12800dfc0 <col:3, col:7> col:7 used state 'int'
|   |-BinaryOperator 0x12800e0b8 <line:5:3, col:11> 'int' contains-errors '='
|   | |-DeclRefExpr 0x12800e040 <col:3> 'int' lvalue Var 0x12800dfc0 'state' 'int'
|   | `-RecoveryExpr 0x12800e098 <col:11> '<dependent type>' contains-errors lvalue
|   `-WhileStmt 0x12802afa8 <line:7:3, line:91:3>
|     |-IntegerLiteral 0x12800e0d8 <line:7:10> 'int' 1
|     `-CompoundStmt 0x12802af80 <col:13, line:91:3>
|       |-IfStmt 0x12800e1a0 <line:9:5, line:10:15>
|       | |-BinaryOperator 0x12800e138 <line:9:9, col:17> 'int' contains-errors '>='
|       | | |-RecoveryExpr 0x12800e0f8 <col:9> '<dependent type>' contains-errors lvalue
|       | | `-RecoveryExpr 0x12800e118 <col:17> '<dependent type>' contains-errors lvalue
|       | `-ReturnStmt 0x12800e190 <line:10:7, col:15>
|       |   `-UnaryOperator 0x12800e178 <col:14, col:15> 'int' prefix '-'
|       |     `-IntegerLiteral 0x12800e158 <col:15> 'int' 1
|       |-SwitchStmt 0x12800e1f8 <line:12:5, line:88:5>
|       | |-ImplicitCastExpr 0x12800e1e0 <line:12:12> 'int' <LValueToRValue>
|       | | `-DeclRefExpr 0x12800e1c0 <col:12> 'int' lvalue Var 0x12800dfc0 'state' 'int'
|       | `-CompoundStmt 0x12802aeb0 <col:19, line:88:5>
|       |   |-SwitchStmt 0x128027e28 <line:14:7, line:36:7>
|       |   | |-ImplicitCastExpr 0x128027e10 <line:14:14, col:58> 'int' contains-errors <IntegralCast>
|       |   | | `-CStyleCastExpr 0x128027de8 <col:14, col:58> 'char' contains-errors <Dependent>
|       |   | |   `-CallExpr 0x128027d98 <col:21, col:58> 'int' contains-errors
|       |   | |     |-ImplicitCastExpr 0x128027d80 <col:21> 'int (*)(int)' <FunctionToPointerDecay>
|       |   | |     | `-DeclRefExpr 0x128027c60 <col:21> 'int (int)' Function 0x128027aa0 'toupper' 'int (int)'
|       |   | |     `-ImplicitCastExpr 0x128027dc0 <col:29, col:57> 'int' contains-errors <IntegralCast>
|       |   | |       `-CStyleCastExpr 0x128027d28 <col:29, col:57> 'unsigned char' contains-errors <Dependent>
|       |   | |         `-ArraySubscriptExpr 0x128027cf0 <col:45, col:57> '<dependent type>' contains-errors lvalue
|       |   | |           |-ImplicitCastExpr 0x128027cc0 <col:45> 'const char *' <LValueToRValue>
|       |   | |           | `-DeclRefExpr 0x128027c80 <col:45> 'const char *' lvalue ParmVar 0x12800dcd8 'message' 'const char *'
|       |   | |           `-ImplicitCastExpr 0x128027cd8 <col:53> '<dependent type>' contains-errors <LValueToRValue>
|       |   | |             `-RecoveryExpr 0x128027ca0 <col:53> '<dependent type>' contains-errors lvalue
|       |   | `-CompoundStmt 0x128028448 <col:61, line:36:7>
|       |   |   |-CaseStmt 0x128027e80 <line:15:7, line:16:10>
|       |   |   | |-ConstantExpr 0x128027e68 <line:15:12> 'int'
|       |   |   | | `-CharacterLiteral 0x128027e50 <col:12> 'int' 74
|       |   |   | `-BinaryOperator 0x128027f20 <line:16:2, col:10> 'int' contains-errors '='
|       |   |   |   |-DeclRefExpr 0x128027ea8 <col:2> 'int' lvalue Var 0x12800dfc0 'state' 'int'
|       |   |   |   `-RecoveryExpr 0x128027f00 <col:10> '<dependent type>' contains-errors lvalue
|       |   |   |-BreakStmt 0x128027f40 <line:17:2>
|       |   |   |-CaseStmt 0x128027f78 <line:18:7, line:19:9>
|       |   |   | |-ConstantExpr 0x128027f60 <line:18:12> 'int'
|       |   |   | | `-CharacterLiteral 0x128027f48 <col:12> 'int' 70
|       |   |   | `-ReturnStmt 0x128027fc0 <line:19:2, col:9>
|       |   |   |   `-IntegerLiteral 0x128027fa0 <col:9> 'int' 2
|       |   |   |-CaseStmt 0x128028000 <line:20:7, line:21:10>
|       |   |   | |-ConstantExpr 0x128027fe8 <line:20:12> 'int'
|       |   |   | | `-CharacterLiteral 0x128027fd0 <col:12> 'int' 77
|       |   |   | `-BinaryOperator 0x1280280a0 <line:21:2, col:10> 'int' contains-errors '='
|       |   |   |   |-DeclRefExpr 0x128028028 <col:2> 'int' lvalue Var 0x12800dfc0 'state' 'int'
|       |   |   |   `-RecoveryExpr 0x128028080 <col:10> '<dependent type>' contains-errors lvalue
|       |   |   |-BreakStmt 0x1280280c0 <line:22:2>
|       |   |   |-CaseStmt 0x1280280f8 <line:23:7, line:24:10>
|       |   |   | |-ConstantExpr 0x1280280e0 <line:23:12> 'int'
|       |   |   | | `-CharacterLiteral 0x1280280c8 <col:12> 'int' 65
|       |   |   | `-BinaryOperator 0x128028198 <line:24:2, col:10> 'int' contains-errors '='
|       |   |   |   |-DeclRefExpr 0x128028120 <col:2> 'int' lvalue Var 0x12800dfc0 'state' 'int'
|       |   |   |   `-RecoveryExpr 0x128028178 <col:10> '<dependent type>' contains-errors lvalue
|       |   |   |-BreakStmt 0x1280281b8 <line:25:2>
|       |   |   |-CaseStmt 0x1280281f0 <line:26:7, line:27:9>
|       |   |   | |-ConstantExpr 0x1280281d8 <line:26:12> 'int'
|       |   |   | | `-CharacterLiteral 0x1280281c0 <col:12> 'int' 83
|       |   |   | `-ReturnStmt 0x128028238 <line:27:2, col:9>
|       |   |   |   `-IntegerLiteral 0x128028218 <col:9> 'int' 9
|       |   |   |-CaseStmt 0x128028278 <line:28:7, line:29:9>
|       |   |   | |-ConstantExpr 0x128028260 <line:28:12> 'int'
|       |   |   | | `-CharacterLiteral 0x128028248 <col:12> 'int' 79
|       |   |   | `-ReturnStmt 0x1280282c0 <line:29:2, col:9>
|       |   |   |   `-IntegerLiteral 0x1280282a0 <col:9> 'int' 10
|       |   |   |-CaseStmt 0x128028300 <line:30:7, line:31:9>
|       |   |   | |-ConstantExpr 0x1280282e8 <line:30:12> 'int'
|       |   |   | | `-CharacterLiteral 0x1280282d0 <col:12> 'int' 78
|       |   |   | `-ReturnStmt 0x128028348 <line:31:2, col:9>
|       |   |   |   `-IntegerLiteral 0x128028328 <col:9> 'int' 11
|       |   |   |-CaseStmt 0x128028388 <line:32:7, line:33:9>
|       |   |   | |-ConstantExpr 0x128028370 <line:32:12> 'int'
|       |   |   | | `-CharacterLiteral 0x128028358 <col:12> 'int' 68
|       |   |   | `-ReturnStmt 0x1280283d0 <line:33:2, col:9>
|       |   |   |   `-IntegerLiteral 0x1280283b0 <col:9> 'int' 12
|       |   |   `-DefaultStmt 0x128028428 <line:34:7, line:35:10>
|       |   |     `-ReturnStmt 0x128028418 <col:2, col:10>
|       |   |       `-UnaryOperator 0x128028400 <col:9, col:10> 'int' prefix '-'
|       |   |         `-IntegerLiteral 0x1280283e0 <col:10> 'int' 1
|       |   |-BreakStmt 0x1280284b8 <line:37:7>
|       |   |-SwitchStmt 0x128028670 <line:39:7, line:47:7>
|       |   | |-ImplicitCastExpr 0x128028658 <line:39:14, col:58> 'int' contains-errors <IntegralCast>
|       |   | | `-CStyleCastExpr 0x128028630 <col:14, col:58> 'char' contains-errors <Dependent>
|       |   | |   `-CallExpr 0x1280285e0 <col:21, col:58> 'int' contains-errors
|       |   | |     |-ImplicitCastExpr 0x1280285c8 <col:21> 'int (*)(int)' <FunctionToPointerDecay>
|       |   | |     | `-DeclRefExpr 0x1280284d8 <col:21> 'int (int)' Function 0x128027aa0 'toupper' 'int (int)'
|       |   | |     `-ImplicitCastExpr 0x128028608 <col:29, col:57> 'int' contains-errors <IntegralCast>
|       |   | |       `-CStyleCastExpr 0x1280285a0 <col:29, col:57> 'unsigned char' contains-errors <Dependent>
|       |   | |         `-ArraySubscriptExpr 0x128028568 <col:45, col:57> '<dependent type>' contains-errors lvalue
|       |   | |           |-ImplicitCastExpr 0x128028538 <col:45> 'const char *' <LValueToRValue>
|       |   | |           | `-DeclRefExpr 0x1280284f8 <col:45> 'const char *' lvalue ParmVar 0x12800dcd8 'message' 'const char *'
|       |   | |           `-ImplicitCastExpr 0x128028550 <col:53> '<dependent type>' contains-errors <LValueToRValue>
|       |   | |             `-RecoveryExpr 0x128028518 <col:53> '<dependent type>' contains-errors lvalue
|       |   | `-CompoundStmt 0x12802a090 <col:61, line:47:7>
|       |   |   |-CaseStmt 0x1280286c8 <line:40:7, line:41:9>
|       |   |   | |-ConstantExpr 0x1280286b0 <line:40:12> 'int'
|       |   |   | | `-CharacterLiteral 0x128028698 <col:12> 'int' 65
|       |   |   | `-ReturnStmt 0x128028710 <line:41:2, col:9>
|       |   |   |   `-IntegerLiteral 0x1280286f0 <col:9> 'int' 1
|       |   |   |-CaseStmt 0x128028750 <line:42:7, line:43:10>
|       |   |   | |-ConstantExpr 0x128028738 <line:42:12> 'int'
|       |   |   | | `-CharacterLiteral 0x128028720 <col:12> 'int' 85
|       |   |   | `-BinaryOperator 0x12802a000 <line:43:2, col:10> 'int' contains-errors '='
|       |   |   |   |-DeclRefExpr 0x128028778 <col:2> 'int' lvalue Var 0x12800dfc0 'state' 'int'
|       |   |   |   `-RecoveryExpr 0x1280287d0 <col:10> '<dependent type>' contains-errors lvalue
|       |   |   |-BreakStmt 0x12802a020 <line:44:2>
|       |   |   `-DefaultStmt 0x12802a070 <line:45:7, line:46:10>
|       |   |     `-ReturnStmt 0x12802a060 <col:2, col:10>
|       |   |       `-UnaryOperator 0x12802a048 <col:9, col:10> 'int' prefix '-'
|       |   |         `-IntegerLiteral 0x12802a028 <col:10> 'int' 1
|       |   |-BreakStmt 0x12802a0c0 <line:48:7>
|       |   |-SwitchStmt 0x12802a278 <line:50:7, line:57:7>
|       |   | |-ImplicitCastExpr 0x12802a260 <line:50:14, col:58> 'int' contains-errors <IntegralCast>
|       |   | | `-CStyleCastExpr 0x12802a238 <col:14, col:58> 'char' contains-errors <Dependent>
|       |   | |   `-CallExpr 0x12802a1e8 <col:21, col:58> 'int' contains-errors
|       |   | |     |-ImplicitCastExpr 0x12802a1d0 <col:21> 'int (*)(int)' <FunctionToPointerDecay>
|       |   | |     | `-DeclRefExpr 0x12802a0e0 <col:21> 'int (int)' Function 0x128027aa0 'toupper' 'int (int)'
|       |   | |     `-ImplicitCastExpr 0x12802a210 <col:29, col:57> 'int' contains-errors <IntegralCast>
|       |   | |       `-CStyleCastExpr 0x12802a1a8 <col:29, col:57> 'unsigned char' contains-errors <Dependent>
|       |   | |         `-ArraySubscriptExpr 0x12802a170 <col:45, col:57> '<dependent type>' contains-errors lvalue
|       |   | |           |-ImplicitCastExpr 0x12802a140 <col:45> 'const char *' <LValueToRValue>
|       |   | |           | `-DeclRefExpr 0x12802a100 <col:45> 'const char *' lvalue ParmVar 0x12800dcd8 'message' 'const char *'
|       |   | |           `-ImplicitCastExpr 0x12802a158 <col:53> '<dependent type>' contains-errors <LValueToRValue>
|       |   | |             `-RecoveryExpr 0x12802a120 <col:53> '<dependent type>' contains-errors lvalue
|       |   | `-CompoundStmt 0x12802a418 <col:61, line:57:7>
|       |   |   |-CaseStmt 0x12802a2d0 <line:51:7, line:52:9>
|       |   |   | |-ConstantExpr 0x12802a2b8 <line:51:12> 'int'
|       |   |   | | `-CharacterLiteral 0x12802a2a0 <col:12> 'int' 78
|       |   |   | `-ReturnStmt 0x12802a318 <line:52:2, col:9>
|       |   |   |   `-IntegerLiteral 0x12802a2f8 <col:9> 'int' 6
|       |   |   |-CaseStmt 0x12802a358 <line:53:7, line:54:9>
|       |   |   | |-ConstantExpr 0x12802a340 <line:53:12> 'int'
|       |   |   | | `-CharacterLiteral 0x12802a328 <col:12> 'int' 76
|       |   |   | `-ReturnStmt 0x12802a3a0 <line:54:2, col:9>
|       |   |   |   `-IntegerLiteral 0x12802a380 <col:9> 'int' 7
|       |   |   `-DefaultStmt 0x12802a3f8 <line:55:7, line:56:10>
|       |   |     `-ReturnStmt 0x12802a3e8 <col:2, col:10>
|       |   |       `-UnaryOperator 0x12802a3d0 <col:9, col:10> 'int' prefix '-'
|       |   |         `-IntegerLiteral 0x12802a3b0 <col:10> 'int' 1
|       |   |-BreakStmt 0x12802a440 <line:58:7>
|       |   |-SwitchStmt 0x12802a5f8 <line:60:7, line:66:7>
|       |   | |-ImplicitCastExpr 0x12802a5e0 <line:60:14, col:58> 'int' contains-errors <IntegralCast>
|       |   | | `-CStyleCastExpr 0x12802a5b8 <col:14, col:58> 'char' contains-errors <Dependent>
|       |   | |   `-CallExpr 0x12802a568 <col:21, col:58> 'int' contains-errors
|       |   | |     |-ImplicitCastExpr 0x12802a550 <col:21> 'int (*)(int)' <FunctionToPointerDecay>
|       |   | |     | `-DeclRefExpr 0x12802a460 <col:21> 'int (int)' Function 0x128027aa0 'toupper' 'int (int)'
|       |   | |     `-ImplicitCastExpr 0x12802a590 <col:29, col:57> 'int' contains-errors <IntegralCast>
|       |   | |       `-CStyleCastExpr 0x12802a528 <col:29, col:57> 'unsigned char' contains-errors <Dependent>
|       |   | |         `-ArraySubscriptExpr 0x12802a4f0 <col:45, col:57> '<dependent type>' contains-errors lvalue
|       |   | |           |-ImplicitCastExpr 0x12802a4c0 <col:45> 'const char *' <LValueToRValue>
|       |   | |           | `-DeclRefExpr 0x12802a480 <col:45> 'const char *' lvalue ParmVar 0x12800dcd8 'message' 'const char *'
|       |   | |           `-ImplicitCastExpr 0x12802a4d8 <col:53> '<dependent type>' contains-errors <LValueToRValue>
|       |   | |             `-RecoveryExpr 0x12802a4a0 <col:53> '<dependent type>' contains-errors lvalue
|       |   | `-CompoundStmt 0x12802a780 <col:61, line:66:7>
|       |   |   |-CaseStmt 0x12802a650 <line:61:7, line:62:10>
|       |   |   | |-ConstantExpr 0x12802a638 <line:61:12> 'int'
|       |   |   | | `-CharacterLiteral 0x12802a620 <col:12> 'int' 65
|       |   |   | `-BinaryOperator 0x12802a6f0 <line:62:2, col:10> 'int' contains-errors '='
|       |   |   |   |-DeclRefExpr 0x12802a678 <col:2> 'int' lvalue Var 0x12800dfc0 'state' 'int'
|       |   |   |   `-RecoveryExpr 0x12802a6d0 <col:10> '<dependent type>' contains-errors lvalue
|       |   |   |-BreakStmt 0x12802a710 <line:63:2>
|       |   |   `-DefaultStmt 0x12802a760 <line:64:7, line:65:10>
|       |   |     `-ReturnStmt 0x12802a750 <col:2, col:10>
|       |   |       `-UnaryOperator 0x12802a738 <col:9, col:10> 'int' prefix '-'
|       |   |         `-IntegerLiteral 0x12802a718 <col:10> 'int' 1
|       |   |-BreakStmt 0x12802a7a8 <line:67:7>
|       |   |-SwitchStmt 0x12802a960 <line:69:7, line:76:7>
|       |   | |-ImplicitCastExpr 0x12802a948 <line:69:14, col:58> 'int' contains-errors <IntegralCast>
|       |   | | `-CStyleCastExpr 0x12802a920 <col:14, col:58> 'char' contains-errors <Dependent>
|       |   | |   `-CallExpr 0x12802a8d0 <col:21, col:58> 'int' contains-errors
|       |   | |     |-ImplicitCastExpr 0x12802a8b8 <col:21> 'int (*)(int)' <FunctionToPointerDecay>
|       |   | |     | `-DeclRefExpr 0x12802a7c8 <col:21> 'int (int)' Function 0x128027aa0 'toupper' 'int (int)'
|       |   | |     `-ImplicitCastExpr 0x12802a8f8 <col:29, col:57> 'int' contains-errors <IntegralCast>
|       |   | |       `-CStyleCastExpr 0x12802a890 <col:29, col:57> 'unsigned char' contains-errors <Dependent>
|       |   | |         `-ArraySubscriptExpr 0x12802a858 <col:45, col:57> '<dependent type>' contains-errors lvalue
|       |   | |           |-ImplicitCastExpr 0x12802a828 <col:45> 'const char *' <LValueToRValue>
|       |   | |           | `-DeclRefExpr 0x12802a7e8 <col:45> 'const char *' lvalue ParmVar 0x12800dcd8 'message' 'const char *'
|       |   | |           `-ImplicitCastExpr 0x12802a840 <col:53> '<dependent type>' contains-errors <LValueToRValue>
|       |   | |             `-RecoveryExpr 0x12802a808 <col:53> '<dependent type>' contains-errors lvalue
|       |   | `-CompoundStmt 0x12802ab00 <col:61, line:76:7>
|       |   |   |-CaseStmt 0x12802a9b8 <line:70:7, line:71:9>
|       |   |   | |-ConstantExpr 0x12802a9a0 <line:70:12> 'int'
|       |   |   | | `-CharacterLiteral 0x12802a988 <col:12> 'int' 89
|       |   |   | `-ReturnStmt 0x12802aa00 <line:71:2, col:9>
|       |   |   |   `-IntegerLiteral 0x12802a9e0 <col:9> 'int' 5
|       |   |   |-CaseStmt 0x12802aa40 <line:72:7, line:73:9>
|       |   |   | |-ConstantExpr 0x12802aa28 <line:72:12> 'int'
|       |   |   | | `-CharacterLiteral 0x12802aa10 <col:12> 'int' 82
|       |   |   | `-ReturnStmt 0x12802aa88 <line:73:2, col:9>
|       |   |   |   `-IntegerLiteral 0x12802aa68 <col:9> 'int' 3
|       |   |   `-DefaultStmt 0x12802aae0 <line:74:7, line:75:10>
|       |   |     `-ReturnStmt 0x12802aad0 <col:2, col:10>
|       |   |       `-UnaryOperator 0x12802aab8 <col:9, col:10> 'int' prefix '-'
|       |   |         `-IntegerLiteral 0x12802aa98 <col:10> 'int' 1
|       |   |-BreakStmt 0x12802ab28 <line:77:7>
|       |   |-SwitchStmt 0x12802ace0 <line:79:7, line:86:7>
|       |   | |-ImplicitCastExpr 0x12802acc8 <line:79:14, col:58> 'int' contains-errors <IntegralCast>
|       |   | | `-CStyleCastExpr 0x12802aca0 <col:14, col:58> 'char' contains-errors <Dependent>
|       |   | |   `-CallExpr 0x12802ac50 <col:21, col:58> 'int' contains-errors
|       |   | |     |-ImplicitCastExpr 0x12802ac38 <col:21> 'int (*)(int)' <FunctionToPointerDecay>
|       |   | |     | `-DeclRefExpr 0x12802ab48 <col:21> 'int (int)' Function 0x128027aa0 'toupper' 'int (int)'
|       |   | |     `-ImplicitCastExpr 0x12802ac78 <col:29, col:57> 'int' contains-errors <IntegralCast>
|       |   | |       `-CStyleCastExpr 0x12802ac10 <col:29, col:57> 'unsigned char' contains-errors <Dependent>
|       |   | |         `-ArraySubscriptExpr 0x12802abd8 <col:45, col:57> '<dependent type>' contains-errors lvalue
|       |   | |           |-ImplicitCastExpr 0x12802aba8 <col:45> 'const char *' <LValueToRValue>
|       |   | |           | `-DeclRefExpr 0x12802ab68 <col:45> 'const char *' lvalue ParmVar 0x12800dcd8 'message' 'const char *'
|       |   | |           `-ImplicitCastExpr 0x12802abc0 <col:53> '<dependent type>' contains-errors <LValueToRValue>
|       |   | |             `-RecoveryExpr 0x12802ab88 <col:53> '<dependent type>' contains-errors lvalue
|       |   | `-CompoundStmt 0x12802ae80 <col:61, line:86:7>
|       |   |   |-CaseStmt 0x12802ad38 <line:80:7, line:81:9>
|       |   |   | |-ConstantExpr 0x12802ad20 <line:80:12> 'int'
|       |   |   | | `-CharacterLiteral 0x12802ad08 <col:12> 'int' 80
|       |   |   | `-ReturnStmt 0x12802ad80 <line:81:2, col:9>
|       |   |   |   `-IntegerLiteral 0x12802ad60 <col:9> 'int' 4
|       |   |   |-CaseStmt 0x12802adc0 <line:82:7, line:83:9>
|       |   |   | |-ConstantExpr 0x12802ada8 <line:82:12> 'int'
|       |   |   | | `-CharacterLiteral 0x12802ad90 <col:12> 'int' 85
|       |   |   | `-ReturnStmt 0x12802ae08 <line:83:2, col:9>
|       |   |   |   `-IntegerLiteral 0x12802ade8 <col:9> 'int' 8
|       |   |   `-DefaultStmt 0x12802ae60 <line:84:7, line:85:10>
|       |   |     `-ReturnStmt 0x12802ae50 <col:2, col:10>
|       |   |       `-UnaryOperator 0x12802ae38 <col:9, col:10> 'int' prefix '-'
|       |   |         `-IntegerLiteral 0x12802ae18 <col:10> 'int' 1
|       |   `-BreakStmt 0x12802aea8 <line:87:7>
|       `-UnaryOperator 0x12802af68 <line:90:5, col:10> '<dependent type>' contains-errors postfix '++' cannot overflow
|         `-RecoveryExpr 0x12802af40 <col:5> '<dependent type>' contains-errors lvalue
|           `-DeclRefExpr 0x12802af20 <col:5> 'int' lvalue ParmVar 0x12800ddf0 'indx' 'int'
`-FunctionDecl 0x128027aa0 <line:14:21> col:21 implicit used toupper 'int (int)' extern
  |-ParmVarDecl 0x128027ba0 <<invalid sloc>> <invalid sloc> 'int'
  |-BuiltinAttr 0x128027b48 <<invalid sloc>> Implicit 933
  |-NoThrowAttr 0x128027c10 <col:21> Implicit
  `-PureAttr 0x128027c38 <col:21> Implicit
