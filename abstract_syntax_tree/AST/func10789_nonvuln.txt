TranslationUnitDecl 0x11d055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x11d0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x11d055bd0 '__int128'
|-TypedefDecl 0x11d056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x11d055bf0 'unsigned __int128'
|-TypedefDecl 0x11d126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x11d126000 'struct __NSConstantString_tag'
|   `-Record 0x11d056580 '__NSConstantString_tag'
|-TypedefDecl 0x11d126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x11d055d90 '__SVInt8_t'
|-TypedefDecl 0x11d126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x11d055db0 '__SVInt16_t'
|-TypedefDecl 0x11d126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x11d055dd0 '__SVInt32_t'
|-TypedefDecl 0x11d1263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x11d055df0 '__SVInt64_t'
|-TypedefDecl 0x11d126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x11d055e10 '__SVUint8_t'
|-TypedefDecl 0x11d1264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x11d055e30 '__SVUint16_t'
|-TypedefDecl 0x11d126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x11d055e50 '__SVUint32_t'
|-TypedefDecl 0x11d126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x11d055e70 '__SVUint64_t'
|-TypedefDecl 0x11d1265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x11d055e90 '__SVFloat16_t'
|-TypedefDecl 0x11d126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x11d055eb0 '__SVFloat32_t'
|-TypedefDecl 0x11d1266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x11d055ed0 '__SVFloat64_t'
|-TypedefDecl 0x11d126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x11d055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x11d126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x11d055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x11d1267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x11d055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x11d126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x11d055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x11d1268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x11d055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x11d126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x11d055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x11d126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x11d055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x11d1269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x11d055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x11d126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x11d055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x11d126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x11d056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x11d126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x11d056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x11d126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x11d056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x11d126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x11d056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x11d126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x11d056090 '__clang_svint8x3_t'
|-TypedefDecl 0x11d126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x11d0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x11d126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x11d0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x11d126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x11d0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x11d126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x11d056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x11d126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x11d056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x11d126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x11d056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x11d126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x11d056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x11d126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x11d056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x11d127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x11d0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x11d127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x11d0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x11d1278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x11d0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x11d127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x11d056210 '__clang_svint8x4_t'
|-TypedefDecl 0x11d1279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x11d056230 '__clang_svint16x4_t'
|-TypedefDecl 0x11d127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x11d056250 '__clang_svint32x4_t'
|-TypedefDecl 0x11d127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x11d056270 '__clang_svint64x4_t'
|-TypedefDecl 0x11d127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x11d056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x11d127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x11d0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x11d127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x11d0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x11d127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x11d0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x11d127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x11d056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x11d127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x11d056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x11d127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x11d056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x11d127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x11d056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x11d127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x11d056390 '__SVBool_t'
|-TypedefDecl 0x11d127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x11d0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x11d127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x11d0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x11d127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x11d0563f0 '__SVCount_t'
|-TypedefDecl 0x11d127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x11d127fb0 'char *'
|   `-BuiltinType 0x11d0556b0 'char'
|-TypedefDecl 0x11d128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x11d127fb0 'char *'
|   `-BuiltinType 0x11d0556b0 'char'
|-FunctionDecl 0x11d140b48 <dataset_diviso_filec/func10789_nonvuln.c:1:1, line:20:1> line:1:1 free_yang_common 'int (struct lys_module *, struct lys_node *)'
| |-ParmVarDecl 0x11d128648 <col:18, col:37> col:37 used module 'struct lys_module *'
| |-ParmVarDecl 0x11d140a28 <col:45, col:62> col:62 used node 'struct lys_node *'
| `-CompoundStmt 0x11d80b908 <line:2:1, line:20:1>
|   |-DeclStmt 0x11d140ce0 <line:3:5, col:11>
|   | `-VarDecl 0x11d140c78 <col:5, col:10> col:10 used i 'int'
|   |-CallExpr 0x11d140f70 <line:4:5, col:67> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x11d140e10 <col:5> 'int ()' Function 0x11d140d58 'yang_tpdf_free' 'int ()'
|   | |-RecoveryExpr 0x11d140e68 <col:20, col:28> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x11d140e30 <col:20> 'struct lys_module *' lvalue ParmVar 0x11d128648 'module' 'struct lys_module *'
|   | |-RecoveryExpr 0x11d140ec8 <col:33, col:41> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x11d140e90 <col:33> 'struct lys_module *' lvalue ParmVar 0x11d128648 'module' 'struct lys_module *'
|   | |-IntegerLiteral 0x11d140ef0 <col:47> 'int' 0
|   | `-RecoveryExpr 0x11d140f48 <col:50, col:58> '<dependent type>' contains-errors lvalue
|   |   `-DeclRefExpr 0x11d140f10 <col:50> 'struct lys_module *' lvalue ParmVar 0x11d128648 'module' 'struct lys_module *'
|   |-BinaryOperator 0x11d141030 <line:5:5, col:25> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x11d140fe8 <col:5, col:13> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x11d140fb0 <col:5> 'struct lys_module *' lvalue ParmVar 0x11d128648 'module' 'struct lys_module *'
|   | `-IntegerLiteral 0x11d141010 <col:25> 'int' 0
|   |-CallExpr 0x11d141230 <line:6:5, col:62> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x11d141130 <col:5> 'int ()' Function 0x11d141078 'yang_free_ident_base' 'int ()'
|   | |-RecoveryExpr 0x11d141188 <col:26, col:34> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x11d141150 <col:26> 'struct lys_module *' lvalue ParmVar 0x11d128648 'module' 'struct lys_module *'
|   | |-IntegerLiteral 0x11d1411b0 <col:41> 'int' 0
|   | `-RecoveryExpr 0x11d141208 <col:44, col:52> '<dependent type>' contains-errors lvalue
|   |   `-DeclRefExpr 0x11d1411d0 <col:44> 'struct lys_module *' lvalue ParmVar 0x11d128648 'module' 'struct lys_module *'
|   |-CallExpr 0x11d1413e8 <line:7:5, col:38> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x11d141348 <col:5> 'int ()' Function 0x11d141290 'yang_free_nodes' 'int ()'
|   | |-RecoveryExpr 0x11d1413a0 <col:21, col:29> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x11d141368 <col:21> 'struct lys_module *' lvalue ParmVar 0x11d128648 'module' 'struct lys_module *'
|   | `-DeclRefExpr 0x11d1413c8 <col:34> 'struct lys_node *' lvalue ParmVar 0x11d140a28 'node' 'struct lys_node *'
|   |-ForStmt 0x11d1417e0 <line:8:5, line:10:5>
|   | |-BinaryOperator 0x11d141458 <line:8:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x11d141418 <col:10> 'int' lvalue Var 0x11d140c78 'i' 'int'
|   | | `-IntegerLiteral 0x11d141438 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x11d1414f8 <col:17, col:29> 'int' contains-errors '<'
|   | | |-DeclRefExpr 0x11d141478 <col:17> 'int' lvalue Var 0x11d140c78 'i' 'int'
|   | | `-RecoveryExpr 0x11d1414d0 <col:21, col:29> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x11d141498 <col:21> 'struct lys_module *' lvalue ParmVar 0x11d128648 'module' 'struct lys_module *'
|   | |-UnaryOperator 0x11d141538 <col:43, col:45> 'int' prefix '++'
|   | | `-DeclRefExpr 0x11d141518 <col:45> 'int' lvalue Var 0x11d140c78 'i' 'int'
|   | `-CompoundStmt 0x11d1417c8 <col:48, line:10:5>
|   |   `-CallExpr 0x11d141798 <line:9:9, col:59> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x11d141630 <col:9> 'int ()' Function 0x11d141578 'yang_free_augment' 'int ()'
|   |     |-RecoveryExpr 0x11d141688 <col:27, col:35> '<dependent type>' contains-errors lvalue
|   |     | `-DeclRefExpr 0x11d141650 <col:27> 'struct lys_module *' lvalue ParmVar 0x11d128648 'module' 'struct lys_module *'
|   |     `-UnaryOperator 0x11d141780 <col:40, col:58> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |       `-ArraySubscriptExpr 0x11d141760 <col:41, col:58> '<dependent type>' contains-errors lvalue
|   |         |-ImplicitCastExpr 0x11d141730 <col:41, col:49> '<dependent type>' contains-errors <LValueToRValue>
|   |         | `-RecoveryExpr 0x11d1416e8 <col:41, col:49> '<dependent type>' contains-errors lvalue
|   |         |   `-DeclRefExpr 0x11d1416b0 <col:41> 'struct lys_module *' lvalue ParmVar 0x11d128648 'module' 'struct lys_module *'
|   |         `-ImplicitCastExpr 0x11d141748 <col:57> 'int' <LValueToRValue>
|   |           `-DeclRefExpr 0x11d141710 <col:57> 'int' lvalue Var 0x11d140c78 'i' 'int'
|   |-BinaryOperator 0x11d141898 <line:11:5, col:28> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x11d141850 <col:5, col:13> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x11d141818 <col:5> 'struct lys_module *' lvalue ParmVar 0x11d128648 'module' 'struct lys_module *'
|   | `-IntegerLiteral 0x11d141878 <col:28> 'int' 0
|   |-ForStmt 0x11d80b830 <line:12:5, line:18:5>
|   | |-BinaryOperator 0x11d1418f8 <line:12:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x11d1418b8 <col:10> 'int' lvalue Var 0x11d140c78 'i' 'int'
|   | | `-IntegerLiteral 0x11d1418d8 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x11d141998 <col:17, col:29> 'int' contains-errors '<'
|   | | |-DeclRefExpr 0x11d141918 <col:17> 'int' lvalue Var 0x11d140c78 'i' 'int'
|   | | `-RecoveryExpr 0x11d141970 <col:21, col:29> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x11d141938 <col:21> 'struct lys_module *' lvalue ParmVar 0x11d128648 'module' 'struct lys_module *'
|   | |-UnaryOperator 0x11d1419d8 <col:45, col:47> 'int' prefix '++'
|   | | `-DeclRefExpr 0x11d1419b8 <col:47> 'int' lvalue Var 0x11d140c78 'i' 'int'
|   | `-CompoundStmt 0x11d80b7f8 <col:50, line:18:5>
|   |   |-CallExpr 0x11d80ae68 <line:13:9, col:64> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x11d80ace0 <col:9> 'int ()' Function 0x11d80ac28 'yang_free_deviate' 'int ()'
|   |   | |-RecoveryExpr 0x11d80ad38 <col:27, col:35> '<dependent type>' contains-errors lvalue
|   |   | | `-DeclRefExpr 0x11d80ad00 <col:27> 'struct lys_module *' lvalue ParmVar 0x11d128648 'module' 'struct lys_module *'
|   |   | |-UnaryOperator 0x11d80ae30 <col:40, col:60> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   | | `-ArraySubscriptExpr 0x11d80ae10 <col:41, col:60> '<dependent type>' contains-errors lvalue
|   |   | |   |-ImplicitCastExpr 0x11d80ade0 <col:41, col:49> '<dependent type>' contains-errors <LValueToRValue>
|   |   | |   | `-RecoveryExpr 0x11d80ad98 <col:41, col:49> '<dependent type>' contains-errors lvalue
|   |   | |   |   `-DeclRefExpr 0x11d80ad60 <col:41> 'struct lys_module *' lvalue ParmVar 0x11d128648 'module' 'struct lys_module *'
|   |   | |   `-ImplicitCastExpr 0x11d80adf8 <col:59> 'int' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x11d80adc0 <col:59> 'int' lvalue Var 0x11d140c78 'i' 'int'
|   |   | `-IntegerLiteral 0x11d80ae48 <col:63> 'int' 0
|   |   |-CallExpr 0x11d80b198 <line:14:9, col:42> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x11d80b048 <col:9> 'void (void *)' Function 0x11d80aed8 'free' 'void (void *)'
|   |   | `-CXXDependentScopeMemberExpr 0x11d80b138 <col:14, col:35> '<dependent type>' contains-errors lvalue .deviate
|   |   |   `-ArraySubscriptExpr 0x11d80b118 <col:14, col:33> '<dependent type>' contains-errors lvalue
|   |   |     |-ImplicitCastExpr 0x11d80b0e8 <col:14, col:22> '<dependent type>' contains-errors <LValueToRValue>
|   |   |     | `-RecoveryExpr 0x11d80b0a0 <col:14, col:22> '<dependent type>' contains-errors lvalue
|   |   |     |   `-DeclRefExpr 0x11d80b068 <col:14> 'struct lys_module *' lvalue ParmVar 0x11d128648 'module' 'struct lys_module *'
|   |   |     `-ImplicitCastExpr 0x11d80b100 <col:32> 'int' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x11d80b0c8 <col:32> 'int' lvalue Var 0x11d140c78 'i' 'int'
|   |   |-CallExpr 0x11d80b438 <line:15:9, col:68> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x11d80b2a0 <col:9> 'int ()' Function 0x11d80b1e8 'lydict_remove' 'int ()'
|   |   | |-RecoveryExpr 0x11d80b2f8 <col:23, col:31> '<dependent type>' contains-errors lvalue
|   |   | | `-DeclRefExpr 0x11d80b2c0 <col:23> 'struct lys_module *' lvalue ParmVar 0x11d128648 'module' 'struct lys_module *'
|   |   | `-CXXDependentScopeMemberExpr 0x11d80b3f0 <col:36, col:57> '<dependent type>' contains-errors lvalue .target_name
|   |   |   `-ArraySubscriptExpr 0x11d80b3d0 <col:36, col:55> '<dependent type>' contains-errors lvalue
|   |   |     |-ImplicitCastExpr 0x11d80b3a0 <col:36, col:44> '<dependent type>' contains-errors <LValueToRValue>
|   |   |     | `-RecoveryExpr 0x11d80b358 <col:36, col:44> '<dependent type>' contains-errors lvalue
|   |   |     |   `-DeclRefExpr 0x11d80b320 <col:36> 'struct lys_module *' lvalue ParmVar 0x11d128648 'module' 'struct lys_module *'
|   |   |     `-ImplicitCastExpr 0x11d80b3b8 <col:54> 'int' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x11d80b380 <col:54> 'int' lvalue Var 0x11d140c78 'i' 'int'
|   |   |-CallExpr 0x11d80b600 <line:16:9, col:60> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x11d80b468 <col:9> 'int ()' Function 0x11d80b1e8 'lydict_remove' 'int ()'
|   |   | |-RecoveryExpr 0x11d80b4c0 <col:23, col:31> '<dependent type>' contains-errors lvalue
|   |   | | `-DeclRefExpr 0x11d80b488 <col:23> 'struct lys_module *' lvalue ParmVar 0x11d128648 'module' 'struct lys_module *'
|   |   | `-CXXDependentScopeMemberExpr 0x11d80b5b8 <col:36, col:57> '<dependent type>' contains-errors lvalue .dsc
|   |   |   `-ArraySubscriptExpr 0x11d80b598 <col:36, col:55> '<dependent type>' contains-errors lvalue
|   |   |     |-ImplicitCastExpr 0x11d80b568 <col:36, col:44> '<dependent type>' contains-errors <LValueToRValue>
|   |   |     | `-RecoveryExpr 0x11d80b520 <col:36, col:44> '<dependent type>' contains-errors lvalue
|   |   |     |   `-DeclRefExpr 0x11d80b4e8 <col:36> 'struct lys_module *' lvalue ParmVar 0x11d128648 'module' 'struct lys_module *'
|   |   |     `-ImplicitCastExpr 0x11d80b580 <col:54> 'int' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x11d80b548 <col:54> 'int' lvalue Var 0x11d140c78 'i' 'int'
|   |   `-CallExpr 0x11d80b7c8 <line:17:9, col:60> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x11d80b630 <col:9> 'int ()' Function 0x11d80b1e8 'lydict_remove' 'int ()'
|   |     |-RecoveryExpr 0x11d80b688 <col:23, col:31> '<dependent type>' contains-errors lvalue
|   |     | `-DeclRefExpr 0x11d80b650 <col:23> 'struct lys_module *' lvalue ParmVar 0x11d128648 'module' 'struct lys_module *'
|   |     `-CXXDependentScopeMemberExpr 0x11d80b780 <col:36, col:57> '<dependent type>' contains-errors lvalue .ref
|   |       `-ArraySubscriptExpr 0x11d80b760 <col:36, col:55> '<dependent type>' contains-errors lvalue
|   |         |-ImplicitCastExpr 0x11d80b730 <col:36, col:44> '<dependent type>' contains-errors <LValueToRValue>
|   |         | `-RecoveryExpr 0x11d80b6e8 <col:36, col:44> '<dependent type>' contains-errors lvalue
|   |         |   `-DeclRefExpr 0x11d80b6b0 <col:36> 'struct lys_module *' lvalue ParmVar 0x11d128648 'module' 'struct lys_module *'
|   |         `-ImplicitCastExpr 0x11d80b748 <col:54> 'int' <LValueToRValue>
|   |           `-DeclRefExpr 0x11d80b710 <col:54> 'int' lvalue Var 0x11d140c78 'i' 'int'
|   `-BinaryOperator 0x11d80b8e8 <line:19:5, col:30> '<dependent type>' contains-errors '='
|     |-RecoveryExpr 0x11d80b8a0 <col:5, col:13> '<dependent type>' contains-errors lvalue
|     | `-DeclRefExpr 0x11d80b868 <col:5> 'struct lys_module *' lvalue ParmVar 0x11d128648 'module' 'struct lys_module *'
|     `-IntegerLiteral 0x11d80b8c8 <col:30> 'int' 0
`-FunctionDecl 0x11d80aed8 <line:14:9> col:9 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x11d80afd8 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x11d80af80 <<invalid sloc>> Implicit 873
