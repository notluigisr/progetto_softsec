TranslationUnitDecl 0x13a054208 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13a0550b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13a0547d0 '__int128'
|-TypedefDecl 0x13a055128 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13a0547f0 'unsigned __int128'
|-TypedefDecl 0x13980c430 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13980c200 'struct __NSConstantString_tag'
|   `-Record 0x13a055180 '__NSConstantString_tag'
|-TypedefDecl 0x13980c498 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13a054990 '__SVInt8_t'
|-TypedefDecl 0x13980c500 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13a0549b0 '__SVInt16_t'
|-TypedefDecl 0x13980c568 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13a0549d0 '__SVInt32_t'
|-TypedefDecl 0x13980c5d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13a0549f0 '__SVInt64_t'
|-TypedefDecl 0x13980c638 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13a054a10 '__SVUint8_t'
|-TypedefDecl 0x13980c6a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13a054a30 '__SVUint16_t'
|-TypedefDecl 0x13980c708 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13a054a50 '__SVUint32_t'
|-TypedefDecl 0x13980c770 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13a054a70 '__SVUint64_t'
|-TypedefDecl 0x13980c7d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13a054a90 '__SVFloat16_t'
|-TypedefDecl 0x13980c840 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13a054ab0 '__SVFloat32_t'
|-TypedefDecl 0x13980c8a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13a054ad0 '__SVFloat64_t'
|-TypedefDecl 0x13980c910 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13a054af0 '__SVBfloat16_t'
|-TypedefDecl 0x13980c978 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13a054b10 '__clang_svint8x2_t'
|-TypedefDecl 0x13980c9e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13a054b30 '__clang_svint16x2_t'
|-TypedefDecl 0x13980ca48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13a054b50 '__clang_svint32x2_t'
|-TypedefDecl 0x13980cab0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13a054b70 '__clang_svint64x2_t'
|-TypedefDecl 0x13980cb18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13a054b90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13980cb80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13a054bb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13980cbe8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13a054bd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13980cc50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13a054bf0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13980ccb8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13a054c10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13980cd20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13a054c30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13980cd88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13a054c50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13980cdf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13a054c70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13980ce58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13a054c90 '__clang_svint8x3_t'
|-TypedefDecl 0x13980cec0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13a054cb0 '__clang_svint16x3_t'
|-TypedefDecl 0x13980cf28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13a054cd0 '__clang_svint32x3_t'
|-TypedefDecl 0x13980cf90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13a054cf0 '__clang_svint64x3_t'
|-TypedefDecl 0x13980cff8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13a054d10 '__clang_svuint8x3_t'
|-TypedefDecl 0x13980d060 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13a054d30 '__clang_svuint16x3_t'
|-TypedefDecl 0x13980d0c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13a054d50 '__clang_svuint32x3_t'
|-TypedefDecl 0x13980d130 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13a054d70 '__clang_svuint64x3_t'
|-TypedefDecl 0x13980d198 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13a054d90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13980da00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13a054db0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13980da68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13a054dd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13980dad0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13a054df0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13980db38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13a054e10 '__clang_svint8x4_t'
|-TypedefDecl 0x13980dba0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13a054e30 '__clang_svint16x4_t'
|-TypedefDecl 0x13980dc08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13a054e50 '__clang_svint32x4_t'
|-TypedefDecl 0x13980dc70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13a054e70 '__clang_svint64x4_t'
|-TypedefDecl 0x13980dcd8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13a054e90 '__clang_svuint8x4_t'
|-TypedefDecl 0x13980dd40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13a054eb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13980dda8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13a054ed0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13980de10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13a054ef0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13980de78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13a054f10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13980dee0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13a054f30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13980df48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13a054f50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13980dfb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13a054f70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13980e018 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13a054f90 '__SVBool_t'
|-TypedefDecl 0x13980e080 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13a054fb0 '__clang_svboolx2_t'
|-TypedefDecl 0x13980e0e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13a054fd0 '__clang_svboolx4_t'
|-TypedefDecl 0x13980e150 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13a054ff0 '__SVCount_t'
|-TypedefDecl 0x13980e1f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13980e1b0 'char *'
|   `-BuiltinType 0x13a0542b0 'char'
|-TypedefDecl 0x13980e268 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13980e1b0 'char *'
|   `-BuiltinType 0x13a0542b0 'char'
|-FunctionDecl 0x13980e4c8 <dataset_diviso_filec/func13386_vuln.c:1:1, line:67:1> line:1:12 qh_core 'int (int, char *, unsigned int)' static
| |-ParmVarDecl 0x13980e2d8 <col:20, col:24> col:24 used sd 'int'
| |-ParmVarDecl 0x13980e358 <col:28, col:34> col:34 used buf 'char *'
| |-ParmVarDecl 0x13980e3d8 <col:39, col:52> col:52 used len 'unsigned int'
| `-CompoundStmt 0x13982ab28 <line:2:1, line:67:1>
|   |-DeclStmt 0x13980e650 <line:3:2, col:13>
|   | `-VarDecl 0x13980e5e8 <col:2, col:8> col:8 used space 'char *'
|   |-IfStmt 0x139827458 <line:5:2, line:18:2>
|   | |-BinaryOperator 0x139827140 <line:5:6, col:37> 'int' '||'
|   | | |-BinaryOperator 0x13980e708 <col:6, col:14> 'int' '=='
|   | | | |-ImplicitCastExpr 0x13980e6f0 <col:6, col:7> 'int' <IntegralCast>
|   | | | | `-ImplicitCastExpr 0x13980e6d8 <col:6, col:7> 'char' <LValueToRValue>
|   | | | |   `-UnaryOperator 0x13980e6a0 <col:6, col:7> 'char' lvalue prefix '*' cannot overflow
|   | | | |     `-ImplicitCastExpr 0x13980e688 <col:7> 'char *' <LValueToRValue>
|   | | | |       `-DeclRefExpr 0x13980e668 <col:7> 'char *' lvalue ParmVar 0x13980e358 'buf' 'char *'
|   | | | `-IntegerLiteral 0x13980e6b8 <col:14> 'int' 0
|   | | `-UnaryOperator 0x139827128 <col:19, col:37> 'int' prefix '!' cannot overflow
|   | |   `-CallExpr 0x139827098 <col:20, col:37> 'int'
|   | |     |-ImplicitCastExpr 0x139827080 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | |     | `-DeclRefExpr 0x139826f80 <col:20> 'int (const char *, const char *)' Function 0x139826da0 'strcmp' 'int (const char *, const char *)'
|   | |     |-ImplicitCastExpr 0x1398270e0 <col:27> 'const char *' <NoOp>
|   | |     | `-ImplicitCastExpr 0x1398270c8 <col:27> 'char *' <LValueToRValue>
|   | |     |   `-DeclRefExpr 0x139826fa0 <col:27> 'char *' lvalue ParmVar 0x13980e358 'buf' 'char *'
|   | |     `-ImplicitCastExpr 0x139827110 <col:32> 'const char *' <NoOp>
|   | |       `-ImplicitCastExpr 0x1398270f8 <col:32> 'char *' <ArrayToPointerDecay>
|   | |         `-StringLiteral 0x139827000 <col:32> 'char[4]' lvalue "STR"
|   | `-CompoundStmt 0x139827438 <col:40, line:18:2>
|   |   |-CallExpr 0x1398273a8 <line:7:3, line:15:3> 'int'
|   |   | |-ImplicitCastExpr 0x139827390 <line:7:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x139827290 <col:3> 'int ()' Function 0x1398271d8 'nsock_printf_nul' 'int ()'
|   |   | |-ImplicitCastExpr 0x1398273d8 <col:20> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1398272b0 <col:20> 'int' lvalue ParmVar 0x13980e2d8 'sd' 'int'
|   |   | `-ImplicitCastExpr 0x1398273f0 <line:8:4, line:14:4> 'char *' <ArrayToPointerDecay>
|   |   |   `-StringLiteral 0x139827310 <line:8:4, line:14:4> 'char[22]' lvalue "STRSTRSTRSTRSTRSTRSTR"
|   |   `-ReturnStmt 0x139827428 <line:17:3, col:10>
|   |     `-IntegerLiteral 0x139827408 <col:10> 'int' 0
|   |-BinaryOperator 0x139827908 <line:19:2, col:30> 'char *' '='
|   | |-DeclRefExpr 0x139827478 <col:2> 'char *' lvalue Var 0x13980e5e8 'space' 'char *'
|   | `-ImplicitCastExpr 0x1398278f0 <col:10, col:30> 'char *' <BitCast>
|   |   `-CallExpr 0x139827858 <col:10, col:30> 'void *'
|   |     |-ImplicitCastExpr 0x139827840 <col:10> 'void *(*)(const void *, int, unsigned long)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x139827768 <col:10> 'void *(const void *, int, unsigned long)' Function 0x139827518 'memchr' 'void *(const void *, int, unsigned long)'
|   |     |-ImplicitCastExpr 0x1398278a8 <col:17> 'const void *' <BitCast>
|   |     | `-ImplicitCastExpr 0x139827890 <col:17> 'char *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x139827788 <col:17> 'char *' lvalue ParmVar 0x13980e358 'buf' 'char *'
|   |     |-CharacterLiteral 0x1398277a8 <col:22> 'int' 32
|   |     `-ImplicitCastExpr 0x1398278d8 <col:27> 'unsigned long' <IntegralCast>
|   |       `-ImplicitCastExpr 0x1398278c0 <col:27> 'unsigned int' <LValueToRValue>
|   |         `-DeclRefExpr 0x1398277c0 <col:27> 'unsigned int' lvalue ParmVar 0x13980e3d8 'len' 'unsigned int'
|   |-IfStmt 0x139827aa0 <line:21:2, line:23:2>
|   | |-BinaryOperator 0x1398279a0 <line:21:6, col:15> 'int' contains-errors '!='
|   | | |-DeclRefExpr 0x139827928 <col:6> 'char *' lvalue Var 0x13980e5e8 'space' 'char *'
|   | | `-RecoveryExpr 0x139827980 <col:15> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x139827a88 <col:21, line:23:2>
|   |   `-BinaryOperator 0x139827a68 <line:22:3, col:16> 'char' '='
|   |     |-UnaryOperator 0x139827a18 <col:3, col:12> 'char' lvalue prefix '*' cannot overflow
|   |     | `-ParenExpr 0x1398279f8 <col:4, col:12> 'char *'
|   |     |   `-UnaryOperator 0x1398279e0 <col:5, col:10> 'char *' postfix '++'
|   |     |     `-DeclRefExpr 0x1398279c0 <col:5> 'char *' lvalue Var 0x13980e5e8 'space' 'char *'
|   |     `-ImplicitCastExpr 0x139827a50 <col:16> 'char' <IntegralCast>
|   |       `-IntegerLiteral 0x139827a30 <col:16> 'int' 0
|   |-IfStmt 0x13982aac8 <line:25:2, line:63:2> has_else
|   | |-BinaryOperator 0x139827b38 <line:25:6, col:15> 'int' contains-errors '=='
|   | | |-DeclRefExpr 0x139827ac0 <col:6> 'char *' lvalue Var 0x13980e5e8 'space' 'char *'
|   | | `-RecoveryExpr 0x139827b18 <col:15> '<dependent type>' contains-errors lvalue
|   | |-CompoundStmt 0x13982a5b8 <col:21, line:53:2>
|   | | `-IfStmt 0x13982a588 <line:27:3, line:52:3> has_else
|   | |   |-UnaryOperator 0x139829c90 <line:27:7, col:25> 'int' prefix '!' cannot overflow
|   | |   | `-CallExpr 0x139829c00 <col:8, col:25> 'int'
|   | |   |   |-ImplicitCastExpr 0x139827be8 <col:8> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | |   |   | `-DeclRefExpr 0x139827b58 <col:8> 'int (const char *, const char *)' Function 0x139826da0 'strcmp' 'int (const char *, const char *)'
|   | |   |   |-ImplicitCastExpr 0x139829c48 <col:15> 'const char *' <NoOp>
|   | |   |   | `-ImplicitCastExpr 0x139829c30 <col:15> 'char *' <LValueToRValue>
|   | |   |   |   `-DeclRefExpr 0x139827b78 <col:15> 'char *' lvalue ParmVar 0x13980e358 'buf' 'char *'
|   | |   |   `-ImplicitCastExpr 0x139829c78 <col:20> 'const char *' <NoOp>
|   | |   |     `-ImplicitCastExpr 0x139829c60 <col:20> 'char *' <ArrayToPointerDecay>
|   | |   |       `-StringLiteral 0x139827b98 <col:20> 'char[4]' lvalue "STR"
|   | |   |-CompoundStmt 0x13982a260 <col:28, line:47:3>
|   | |   | `-ReturnStmt 0x13982a250 <line:46:4, col:11>
|   | |   |   `-IntegerLiteral 0x13982a230 <col:11> 'int' 0
|   | |   `-IfStmt 0x13982a568 <line:49:8, line:52:3>
|   | |     |-UnaryOperator 0x13982a3b0 <line:49:12, col:30> 'int' prefix '!' cannot overflow
|   | |     | `-CallExpr 0x13982a320 <col:13, col:30> 'int'
|   | |     |   |-ImplicitCastExpr 0x13982a308 <col:13> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | |     |   | `-DeclRefExpr 0x13982a278 <col:13> 'int (const char *, const char *)' Function 0x139826da0 'strcmp' 'int (const char *, const char *)'
|   | |     |   |-ImplicitCastExpr 0x13982a368 <col:20> 'const char *' <NoOp>
|   | |     |   | `-ImplicitCastExpr 0x13982a350 <col:20> 'char *' <LValueToRValue>
|   | |     |   |   `-DeclRefExpr 0x13982a298 <col:20> 'char *' lvalue ParmVar 0x13980e358 'buf' 'char *'
|   | |     |   `-ImplicitCastExpr 0x13982a398 <col:25> 'const char *' <NoOp>
|   | |     |     `-ImplicitCastExpr 0x13982a380 <col:25> 'char *' <ArrayToPointerDecay>
|   | |     |       `-StringLiteral 0x13982a2b8 <col:25> 'char[4]' lvalue "STR"
|   | |     `-CompoundStmt 0x13982a550 <col:33, line:52:3>
|   | |       `-ReturnStmt 0x13982a540 <line:51:4, col:30>
|   | |         `-CallExpr 0x13982a500 <col:11, col:30> 'int'
|   | |           |-ImplicitCastExpr 0x13982a4e8 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   | |           | `-DeclRefExpr 0x13982a4a8 <col:11> 'int ()' Function 0x13982a3f0 'dump_event_stats' 'int ()'
|   | |           `-ImplicitCastExpr 0x13982a528 <col:28> 'int' <LValueToRValue>
|   | |             `-DeclRefExpr 0x13982a4c8 <col:28> 'int' lvalue ParmVar 0x13980e2d8 'sd' 'int'
|   | `-CompoundStmt 0x13982aaa8 <line:56:7, line:63:2>
|   |   |-CompoundAssignOperator 0x13982a700 <line:58:3, col:37> 'unsigned int' '-=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |   | |-DeclRefExpr 0x13982a5d0 <col:3> 'unsigned int' lvalue ParmVar 0x13980e3d8 'len' 'unsigned int'
|   |   | `-CStyleCastExpr 0x13982a6d8 <col:10, col:37> 'unsigned long' <IntegralCast>
|   |   |   `-ParenExpr 0x13982a6b8 <col:25, col:37> 'long'
|   |   |     `-BinaryOperator 0x13982a660 <col:26, col:34> 'long' '-'
|   |   |       |-ImplicitCastExpr 0x13982a630 <col:26> 'char *' <LValueToRValue>
|   |   |       | `-DeclRefExpr 0x13982a5f0 <col:26> 'char *' lvalue Var 0x13980e5e8 'space' 'char *'
|   |   |       `-ImplicitCastExpr 0x13982a648 <col:34> 'char *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x13982a610 <col:34> 'char *' lvalue ParmVar 0x13980e358 'buf' 'char *'
|   |   `-IfStmt 0x13982aa88 <line:60:3, line:62:3>
|   |     |-UnaryOperator 0x13982a868 <line:60:7, col:25> 'int' prefix '!' cannot overflow
|   |     | `-CallExpr 0x13982a7d8 <col:8, col:25> 'int'
|   |     |   |-ImplicitCastExpr 0x13982a7c0 <col:8> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |     |   | `-DeclRefExpr 0x13982a730 <col:8> 'int (const char *, const char *)' Function 0x139826da0 'strcmp' 'int (const char *, const char *)'
|   |     |   |-ImplicitCastExpr 0x13982a820 <col:15> 'const char *' <NoOp>
|   |     |   | `-ImplicitCastExpr 0x13982a808 <col:15> 'char *' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x13982a750 <col:15> 'char *' lvalue ParmVar 0x13980e358 'buf' 'char *'
|   |     |   `-ImplicitCastExpr 0x13982a850 <col:20> 'const char *' <NoOp>
|   |     |     `-ImplicitCastExpr 0x13982a838 <col:20> 'char *' <ArrayToPointerDecay>
|   |     |       `-StringLiteral 0x13982a770 <col:20> 'char[4]' lvalue "STR"
|   |     `-CompoundStmt 0x13982aa78 <col:28, line:62:3>
|   `-ReturnStmt 0x13982ab18 <line:66:2, col:9>
|     `-IntegerLiteral 0x13982aaf8 <col:9> 'int' 404
|-FunctionDecl 0x139826da0 <line:5:20> col:20 implicit used strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x139826ea0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x139826f08 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x139826e48 <<invalid sloc>> Implicit 887
`-FunctionDecl 0x139827518 <line:19:10> col:10 implicit used memchr 'void *(const void *, int, unsigned long)' extern
  |-ParmVarDecl 0x139827618 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x139827680 <<invalid sloc>> <invalid sloc> 'int'
  |-ParmVarDecl 0x1398276e8 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x1398275c0 <<invalid sloc>> Implicit 892
