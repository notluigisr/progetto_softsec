TranslationUnitDecl 0x12e826408 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12e8272b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12e8269d0 '__int128'
|-TypedefDecl 0x12e827328 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12e8269f0 'unsigned __int128'
|-TypedefDecl 0x12f021430 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12f021200 'struct __NSConstantString_tag'
|   `-Record 0x12e827380 '__NSConstantString_tag'
|-TypedefDecl 0x12f021498 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12e826b90 '__SVInt8_t'
|-TypedefDecl 0x12f021500 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12e826bb0 '__SVInt16_t'
|-TypedefDecl 0x12f021568 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12e826bd0 '__SVInt32_t'
|-TypedefDecl 0x12f0215d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12e826bf0 '__SVInt64_t'
|-TypedefDecl 0x12f021638 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12e826c10 '__SVUint8_t'
|-TypedefDecl 0x12f0216a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12e826c30 '__SVUint16_t'
|-TypedefDecl 0x12f021708 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12e826c50 '__SVUint32_t'
|-TypedefDecl 0x12f021770 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12e826c70 '__SVUint64_t'
|-TypedefDecl 0x12f0217d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12e826c90 '__SVFloat16_t'
|-TypedefDecl 0x12f021840 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12e826cb0 '__SVFloat32_t'
|-TypedefDecl 0x12f0218a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12e826cd0 '__SVFloat64_t'
|-TypedefDecl 0x12f021910 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12e826cf0 '__SVBfloat16_t'
|-TypedefDecl 0x12f021978 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12e826d10 '__clang_svint8x2_t'
|-TypedefDecl 0x12f0219e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12e826d30 '__clang_svint16x2_t'
|-TypedefDecl 0x12f021a48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12e826d50 '__clang_svint32x2_t'
|-TypedefDecl 0x12f021ab0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12e826d70 '__clang_svint64x2_t'
|-TypedefDecl 0x12f021b18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12e826d90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12f021b80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12e826db0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12f021be8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12e826dd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12f021c50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12e826df0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12f021cb8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12e826e10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12f021d20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12e826e30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12f021d88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12e826e50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12f021df0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12e826e70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12f021e58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12e826e90 '__clang_svint8x3_t'
|-TypedefDecl 0x12f021ec0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12e826eb0 '__clang_svint16x3_t'
|-TypedefDecl 0x12f021f28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12e826ed0 '__clang_svint32x3_t'
|-TypedefDecl 0x12f021f90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12e826ef0 '__clang_svint64x3_t'
|-TypedefDecl 0x12f021ff8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12e826f10 '__clang_svuint8x3_t'
|-TypedefDecl 0x12f022060 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12e826f30 '__clang_svuint16x3_t'
|-TypedefDecl 0x12f0220c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12e826f50 '__clang_svuint32x3_t'
|-TypedefDecl 0x12f022130 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12e826f70 '__clang_svuint64x3_t'
|-TypedefDecl 0x12f022198 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12e826f90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12f022a00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12e826fb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12f022a68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12e826fd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12f022ad0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12e826ff0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12f022b38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12e827010 '__clang_svint8x4_t'
|-TypedefDecl 0x12f022ba0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12e827030 '__clang_svint16x4_t'
|-TypedefDecl 0x12f022c08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12e827050 '__clang_svint32x4_t'
|-TypedefDecl 0x12f022c70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12e827070 '__clang_svint64x4_t'
|-TypedefDecl 0x12f022cd8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12e827090 '__clang_svuint8x4_t'
|-TypedefDecl 0x12f022d40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12e8270b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12f022da8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12e8270d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12f022e10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12e8270f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12f022e78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12e827110 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12f022ee0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12e827130 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12f022f48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12e827150 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12f022fb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12e827170 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12f023018 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12e827190 '__SVBool_t'
|-TypedefDecl 0x12f023080 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12e8271b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12f0230e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12e8271d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12f023150 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12e8271f0 '__SVCount_t'
|-TypedefDecl 0x12f0231f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12f0231b0 'char *'
|   `-BuiltinType 0x12e8264b0 'char'
|-TypedefDecl 0x12f023268 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12f0231b0 'char *'
|   `-BuiltinType 0x12e8264b0 'char'
`-FunctionDecl 0x12f023488 <dataset_diviso_filec/func19926_nonvuln.c:1:1, line:35:1> line:1:1 invalid spell_iswordp 'int (char *, int *)'
  |-ParmVarDecl 0x12f0232f0 <line:2:5, col:13> col:13 used p 'char *'
  |-ParmVarDecl 0x12f0233a8 <line:3:5, col:12> col:12 invalid wp 'int *'
  `-CompoundStmt 0x12e0934b8 <line:4:1, line:35:1>
    |-DeclStmt 0x12f0235c0 <line:5:5, col:14>
    | `-VarDecl 0x12f023558 <col:5, col:13> col:13 used s 'char *'
    |-DeclStmt 0x12f023658 <line:6:5, col:11>
    | `-VarDecl 0x12f0235f0 <col:5, col:10> col:10 used l 'int'
    |-DeclStmt 0x12f0236f0 <line:7:5, col:11>
    | `-VarDecl 0x12f023688 <col:5, col:10> col:10 used c 'int'
    `-IfStmt 0x12e0923c8 <line:9:5, line:32:5>
      |-RecoveryExpr 0x12f023720 <line:9:9> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x12e092390 <line:10:5, line:32:5>
        |-BinaryOperator 0x12f023988 <line:11:2, col:18> 'int' '='
        | |-DeclRefExpr 0x12f023740 <col:2> 'int' lvalue Var 0x12f0235f0 'l' 'int'
        | `-CallExpr 0x12f023948 <col:6, col:18> 'int'
        |   |-ImplicitCastExpr 0x12f023930 <col:6> 'int (*)()' <FunctionToPointerDecay>
        |   | `-DeclRefExpr 0x12f0238c0 <col:6> 'int ()' Function 0x12f023808 'mb_ptr2len' 'int ()'
        |   `-ImplicitCastExpr 0x12f023970 <col:17> 'char *' <LValueToRValue>
        |     `-DeclRefExpr 0x12f0238e0 <col:17> 'char *' lvalue ParmVar 0x12f0232f0 'p' 'char *'
        |-BinaryOperator 0x12e091400 <line:12:2, col:6> 'char *' '='
        | |-DeclRefExpr 0x12f0239a8 <col:2> 'char *' lvalue Var 0x12f023558 's' 'char *'
        | `-ImplicitCastExpr 0x12f0239e8 <col:6> 'char *' <LValueToRValue>
        |   `-DeclRefExpr 0x12f0239c8 <col:6> 'char *' lvalue ParmVar 0x12f0232f0 'p' 'char *'
        |-IfStmt 0x12e091e98 <line:13:2, line:26:2> has_else
        | |-BinaryOperator 0x12e091478 <line:13:6, col:11> 'int' '=='
        | | |-ImplicitCastExpr 0x12e091460 <col:6> 'int' <LValueToRValue>
        | | | `-DeclRefExpr 0x12e091420 <col:6> 'int' lvalue Var 0x12f0235f0 'l' 'int'
        | | `-IntegerLiteral 0x12e091440 <col:11> 'int' 1
        | |-CompoundStmt 0x12e0916c0 <line:14:2, line:18:2>
        | | `-IfStmt 0x12e0916a0 <line:16:6, line:17:11>
        | |   |-ArraySubscriptExpr 0x12e0915c8 <line:16:10, col:34> '<dependent type>' contains-errors lvalue
        | |   | |-ImplicitCastExpr 0x12e091598 <col:10, col:19> '<dependent type>' contains-errors <LValueToRValue>
        | |   | | `-CXXDependentScopeMemberExpr 0x12e091500 <col:10, col:19> '<dependent type>' contains-errors lvalue ->b_spell_ismw
        | |   | |   `-CXXDependentScopeMemberExpr 0x12e0914b8 <col:10, col:14> '<dependent type>' contains-errors lvalue ->w_s
        | |   | |     `-RecoveryExpr 0x12e091498 <col:10> '<dependent type>' contains-errors lvalue
        | |   | `-ImplicitCastExpr 0x12e0915b0 <col:32, col:33> 'char' <LValueToRValue>
        | |   |   `-UnaryOperator 0x12e091580 <col:32, col:33> 'char' lvalue prefix '*' cannot overflow
        | |   |     `-ImplicitCastExpr 0x12e091568 <col:33> 'char *' <LValueToRValue>
        | |   |       `-DeclRefExpr 0x12e091548 <col:33> 'char *' lvalue ParmVar 0x12f0232f0 'p' 'char *'
        | |   `-BinaryOperator 0x12e091680 <line:17:3, col:11> 'char *' '='
        | |     |-DeclRefExpr 0x12e0915e8 <col:3> 'char *' lvalue Var 0x12f023558 's' 'char *'
        | |     `-BinaryOperator 0x12e091660 <col:7, col:11> 'char *' '+'
        | |       |-ImplicitCastExpr 0x12e091648 <col:7> 'char *' <LValueToRValue>
        | |       | `-DeclRefExpr 0x12e091608 <col:7> 'char *' lvalue ParmVar 0x12f0232f0 'p' 'char *'
        | |       `-IntegerLiteral 0x12e091628 <col:11> 'int' 1
        | `-CompoundStmt 0x12e091e78 <line:20:2, line:26:2>
        |   |-BinaryOperator 0x12e091870 <line:21:6, col:23> 'int' '='
        |   | |-DeclRefExpr 0x12e0916d8 <col:6> 'int' lvalue Var 0x12f023688 'c' 'int'
        |   | `-CallExpr 0x12e091830 <col:10, col:23> 'int'
        |   |   |-ImplicitCastExpr 0x12e091818 <col:10> 'int (*)()' <FunctionToPointerDecay>
        |   |   | `-DeclRefExpr 0x12e0917d8 <col:10> 'int ()' Function 0x12e091720 'mb_ptr2char' 'int ()'
        |   |   `-ImplicitCastExpr 0x12e091858 <col:22> 'char *' <LValueToRValue>
        |   |     `-DeclRefExpr 0x12e0917f8 <col:22> 'char *' lvalue ParmVar 0x12f0232f0 'p' 'char *'
        |   `-IfStmt 0x12e091e58 <line:22:6, line:25:11>
        |     |-RecoveryExpr 0x12e091d68 <line:22:10, line:24:57> '_Bool' contains-errors
        |     `-BinaryOperator 0x12e091e38 <line:25:3, col:11> 'char *' '='
        |       |-DeclRefExpr 0x12e091d88 <col:3> 'char *' lvalue Var 0x12f023558 's' 'char *'
        |       `-BinaryOperator 0x12e091e18 <col:7, col:11> 'char *' '+'
        |         |-ImplicitCastExpr 0x12e091de8 <col:7> 'char *' <LValueToRValue>
        |         | `-DeclRefExpr 0x12e091da8 <col:7> 'char *' lvalue ParmVar 0x12f0232f0 'p' 'char *'
        |         `-ImplicitCastExpr 0x12e091e00 <col:11> 'int' <LValueToRValue>
        |           `-DeclRefExpr 0x12e091dc8 <col:11> 'int' lvalue Var 0x12f0235f0 'l' 'int'
        |-BinaryOperator 0x12e091f80 <line:28:2, col:19> 'int' '='
        | |-DeclRefExpr 0x12e091ec8 <col:2> 'int' lvalue Var 0x12f023688 'c' 'int'
        | `-CallExpr 0x12e091f40 <col:6, col:19> 'int'
        |   |-ImplicitCastExpr 0x12e091f28 <col:6> 'int (*)()' <FunctionToPointerDecay>
        |   | `-DeclRefExpr 0x12e091ee8 <col:6> 'int ()' Function 0x12e091720 'mb_ptr2char' 'int ()'
        |   `-ImplicitCastExpr 0x12e091f68 <col:18> 'char *' <LValueToRValue>
        |     `-DeclRefExpr 0x12e091f08 <col:18> 'char *' lvalue Var 0x12f023558 's' 'char *'
        `-IfStmt 0x12e0922f0 <line:29:2, line:30:54>
          |-BinaryOperator 0x12e091ff8 <line:29:6, col:10> 'int' '>'
          | |-ImplicitCastExpr 0x12e091fe0 <col:6> 'int' <LValueToRValue>
          | | `-DeclRefExpr 0x12e091fa0 <col:6> 'int' lvalue Var 0x12f023688 'c' 'int'
          | `-IntegerLiteral 0x12e091fc0 <col:10> 'int' 255
          `-ReturnStmt 0x12e0922e0 <line:30:6, col:54>
            `-CallExpr 0x12e0922b0 <col:13, col:54> '<dependent type>' contains-errors
              |-DeclRefExpr 0x12e0920f8 <col:13> 'int ()' Function 0x12e092040 'spell_mb_isword_class' 'int ()'
              |-CallExpr 0x12e092250 <col:35, col:49> 'int'
              | |-ImplicitCastExpr 0x12e092238 <col:35> 'int (*)()' <FunctionToPointerDecay>
              | | `-DeclRefExpr 0x12e0921f8 <col:35> 'int ()' Function 0x12e092140 'mb_get_class' 'int ()'
              | `-ImplicitCastExpr 0x12e092278 <col:48> 'char *' <LValueToRValue>
              |   `-DeclRefExpr 0x12e092218 <col:48> 'char *' lvalue Var 0x12f023558 's' 'char *'
              `-RecoveryExpr 0x12e092290 <col:52> '<dependent type>' contains-errors lvalue
