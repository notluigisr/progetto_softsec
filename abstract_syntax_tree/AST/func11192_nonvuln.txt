TranslationUnitDecl 0x150055008 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x150055eb8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1500555d0 '__int128'
|-TypedefDecl 0x150055f28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1500555f0 'unsigned __int128'
|-TypedefDecl 0x150125c30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x150125a00 'struct __NSConstantString_tag'
|   `-Record 0x150055f80 '__NSConstantString_tag'
|-TypedefDecl 0x150125c98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x150055790 '__SVInt8_t'
|-TypedefDecl 0x150125d00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x1500557b0 '__SVInt16_t'
|-TypedefDecl 0x150125d68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x1500557d0 '__SVInt32_t'
|-TypedefDecl 0x150125dd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x1500557f0 '__SVInt64_t'
|-TypedefDecl 0x150125e38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x150055810 '__SVUint8_t'
|-TypedefDecl 0x150125ea0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x150055830 '__SVUint16_t'
|-TypedefDecl 0x150125f08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x150055850 '__SVUint32_t'
|-TypedefDecl 0x150125f70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x150055870 '__SVUint64_t'
|-TypedefDecl 0x150125fd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x150055890 '__SVFloat16_t'
|-TypedefDecl 0x150126040 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x1500558b0 '__SVFloat32_t'
|-TypedefDecl 0x1501260a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x1500558d0 '__SVFloat64_t'
|-TypedefDecl 0x150126110 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x1500558f0 '__SVBfloat16_t'
|-TypedefDecl 0x150126178 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x150055910 '__clang_svint8x2_t'
|-TypedefDecl 0x1501261e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x150055930 '__clang_svint16x2_t'
|-TypedefDecl 0x150126248 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x150055950 '__clang_svint32x2_t'
|-TypedefDecl 0x1501262b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x150055970 '__clang_svint64x2_t'
|-TypedefDecl 0x150126318 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x150055990 '__clang_svuint8x2_t'
|-TypedefDecl 0x150126380 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x1500559b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1501263e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x1500559d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x150126450 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x1500559f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1501264b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x150055a10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x150126520 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x150055a30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x150126588 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x150055a50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1501265f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x150055a70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x150126658 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x150055a90 '__clang_svint8x3_t'
|-TypedefDecl 0x1501266c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x150055ab0 '__clang_svint16x3_t'
|-TypedefDecl 0x150126728 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x150055ad0 '__clang_svint32x3_t'
|-TypedefDecl 0x150126790 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x150055af0 '__clang_svint64x3_t'
|-TypedefDecl 0x1501267f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x150055b10 '__clang_svuint8x3_t'
|-TypedefDecl 0x150126860 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x150055b30 '__clang_svuint16x3_t'
|-TypedefDecl 0x1501268c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x150055b50 '__clang_svuint32x3_t'
|-TypedefDecl 0x150126930 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x150055b70 '__clang_svuint64x3_t'
|-TypedefDecl 0x150126998 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x150055b90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x150127200 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x150055bb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x150127268 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x150055bd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1501272d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x150055bf0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x150127338 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x150055c10 '__clang_svint8x4_t'
|-TypedefDecl 0x1501273a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x150055c30 '__clang_svint16x4_t'
|-TypedefDecl 0x150127408 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x150055c50 '__clang_svint32x4_t'
|-TypedefDecl 0x150127470 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x150055c70 '__clang_svint64x4_t'
|-TypedefDecl 0x1501274d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x150055c90 '__clang_svuint8x4_t'
|-TypedefDecl 0x150127540 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x150055cb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1501275a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x150055cd0 '__clang_svuint32x4_t'
|-TypedefDecl 0x150127610 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x150055cf0 '__clang_svuint64x4_t'
|-TypedefDecl 0x150127678 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x150055d10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1501276e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x150055d30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x150127748 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x150055d50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1501277b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x150055d70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x150127818 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x150055d90 '__SVBool_t'
|-TypedefDecl 0x150127880 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x150055db0 '__clang_svboolx2_t'
|-TypedefDecl 0x1501278e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x150055dd0 '__clang_svboolx4_t'
|-TypedefDecl 0x150127950 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x150055df0 '__SVCount_t'
|-TypedefDecl 0x1501279f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1501279b0 'char *'
|   `-BuiltinType 0x1500550b0 'char'
|-TypedefDecl 0x150127a68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1501279b0 'char *'
|   `-BuiltinType 0x1500550b0 'char'
`-FunctionDecl 0x14f808800 <dataset_diviso_filec/func11192_nonvuln.c:1:1, line:48:1> line:1:1 lys_is_disabled 'int (const struct lys_node *, int)'
  |-ParmVarDecl 0x150128048 <col:17, col:40> col:40 used node 'const struct lys_node *'
  |-ParmVarDecl 0x1501280c8 <col:46, col:50> col:50 used recursive 'int'
  `-CompoundStmt 0x1488084f8 <line:2:1, line:48:1>
    |-DeclStmt 0x14f808980 <line:3:5, col:10>
    | `-VarDecl 0x14f808918 <col:5, col:9> col:9 used i 'int'
    |-IfStmt 0x14f808a60 <line:5:5, line:7:5>
    | |-UnaryOperator 0x14f8089d0 <line:5:9, col:10> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x14f8089b8 <col:10> 'const struct lys_node *' <LValueToRValue>
    | |   `-DeclRefExpr 0x14f808998 <col:10> 'const struct lys_node *' lvalue ParmVar 0x150128048 'node' 'const struct lys_node *'
    | `-CompoundStmt 0x14f808a48 <col:16, line:7:5>
    |   `-ReturnStmt 0x14f808a38 <line:6:9, col:16>
    |     `-RecoveryExpr 0x14f808a18 <col:16> '<dependent type>' contains-errors lvalue
    |-LabelStmt 0x14f809178 <line:9:1, line:19:5> 'check'
    | `-IfStmt 0x14f809108 <line:10:5, line:19:5>
    |   |-BinaryOperator 0x14f808c50 <line:10:9, col:58> 'int' contains-errors '&&'
    |   | |-BinaryOperator 0x14f808bf0 <col:9, col:27> 'int' contains-errors '!='
    |   | | |-RecoveryExpr 0x14f808ab8 <col:9, col:15> '<dependent type>' contains-errors lvalue
    |   | | | `-DeclRefExpr 0x14f808a80 <col:9> 'const struct lys_node *' lvalue ParmVar 0x150128048 'node' 'const struct lys_node *'
    |   | | `-RecoveryExpr 0x14f808bd0 <col:27> '<dependent type>' contains-errors lvalue
    |   | `-BinaryOperator 0x14f808c30 <col:40, col:58> 'int' contains-errors '!='
    |   |   |-RecoveryExpr 0x14f808b50 <col:40, col:46> '<dependent type>' contains-errors lvalue
    |   |   | `-DeclRefExpr 0x14f808b18 <col:40> 'const struct lys_node *' lvalue ParmVar 0x150128048 'node' 'const struct lys_node *'
    |   |   `-RecoveryExpr 0x14f808c10 <col:58> '<dependent type>' contains-errors lvalue
    |   `-CompoundStmt 0x14f8090f0 <col:70, line:19:5>
    |     `-ForStmt 0x14f8090b8 <line:14:9, line:18:9>
    |       |-BinaryOperator 0x14f808cb0 <line:14:14, col:18> 'int' '='
    |       | |-DeclRefExpr 0x14f808c70 <col:14> 'int' lvalue Var 0x14f808918 'i' 'int'
    |       | `-IntegerLiteral 0x14f808c90 <col:18> 'int' 0
    |       |-<<<NULL>>>
    |       |-BinaryOperator 0x14f808d50 <col:21, col:31> 'int' contains-errors '<'
    |       | |-DeclRefExpr 0x14f808cd0 <col:21> 'int' lvalue Var 0x14f808918 'i' 'int'
    |       | `-RecoveryExpr 0x14f808d28 <col:25, col:31> '<dependent type>' contains-errors lvalue
    |       |   `-DeclRefExpr 0x14f808cf0 <col:25> 'const struct lys_node *' lvalue ParmVar 0x150128048 'node' 'const struct lys_node *'
    |       |-UnaryOperator 0x14f808d90 <col:47, col:48> 'int' postfix '++'
    |       | `-DeclRefExpr 0x14f808d70 <col:47> 'int' lvalue Var 0x14f808918 'i' 'int'
    |       `-CompoundStmt 0x14f8090a0 <col:52, line:18:9>
    |         `-IfStmt 0x14f809080 <line:15:13, line:17:13>
    |           |-UnaryOperator 0x14f808ff0 <line:15:17, col:55> '<dependent type>' contains-errors prefix '!' cannot overflow
    |           | `-CallExpr 0x14f808fc8 <col:18, col:55> '<dependent type>' contains-errors
    |           |   |-DeclRefExpr 0x14f808ec0 <col:18> 'int ()' Function 0x14f808e08 'resolve_iffeature' 'int ()'
    |           |   `-UnaryOperator 0x14f808fb0 <col:36, col:54> '<dependent type>' contains-errors prefix '&' cannot overflow
    |           |     `-ArraySubscriptExpr 0x14f808f90 <col:37, col:54> '<dependent type>' contains-errors lvalue
    |           |       |-ImplicitCastExpr 0x14f808f60 <col:37, col:43> '<dependent type>' contains-errors <LValueToRValue>
    |           |       | `-RecoveryExpr 0x14f808f18 <col:37, col:43> '<dependent type>' contains-errors lvalue
    |           |       |   `-DeclRefExpr 0x14f808ee0 <col:37> 'const struct lys_node *' lvalue ParmVar 0x150128048 'node' 'const struct lys_node *'
    |           |       `-ImplicitCastExpr 0x14f808f78 <col:53> 'int' <LValueToRValue>
    |           |         `-DeclRefExpr 0x14f808f40 <col:53> 'int' lvalue Var 0x14f808918 'i' 'int'
    |           `-CompoundStmt 0x14f809068 <col:58, line:17:13>
    |             `-ReturnStmt 0x14f809058 <line:16:17, col:24>
    |               `-ImplicitCastExpr 0x14f809040 <col:24> 'int' <PointerToIntegral>
    |                 `-ImplicitCastExpr 0x14f809028 <col:24> 'const struct lys_node *' <LValueToRValue>
    |                   `-DeclRefExpr 0x14f809008 <col:24> 'const struct lys_node *' lvalue ParmVar 0x150128048 'node' 'const struct lys_node *'
    |-IfStmt 0x14f809248 <line:21:5, line:23:5>
    | |-UnaryOperator 0x14f8091d0 <line:21:9, col:10> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x14f8091b8 <col:10> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x14f809198 <col:10> 'int' lvalue ParmVar 0x1501280c8 'recursive' 'int'
    | `-CompoundStmt 0x14f809230 <col:21, line:23:5>
    |   `-ReturnStmt 0x14f809220 <line:22:9, col:16>
    |     `-RecoveryExpr 0x14f809200 <col:16> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x148808350 <line:26:5, line:39:5> has_else
    | |-BinaryOperator 0x14f809320 <line:26:9, col:27> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x14f8092a0 <col:9, col:15> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x14f809268 <col:9> 'const struct lys_node *' lvalue ParmVar 0x150128048 'node' 'const struct lys_node *'
    | | `-RecoveryExpr 0x14f809300 <col:27> '<dependent type>' contains-errors lvalue
    | |-CompoundStmt 0x14f809660 <col:40, line:33:5>
    | | |-BinaryOperator 0x14f809570 <line:28:9, col:51> 'const struct lys_node *' contains-errors '='
    | | | |-DeclRefExpr 0x14f809340 <col:9> 'const struct lys_node *' lvalue ParmVar 0x150128048 'node' 'const struct lys_node *'
    | | | `-RecoveryExpr 0x14f809548 <col:16, col:51> '<dependent type>' contains-errors lvalue
    | | |   `-ParenExpr 0x14f809528 <col:16, col:48> 'struct lys_node_augment *'
    | | |     `-CStyleCastExpr 0x14f809500 <col:17, col:44> 'struct lys_node_augment *' <BitCast>
    | | |       `-ImplicitCastExpr 0x14f8094e8 <col:44> 'const struct lys_node *' <LValueToRValue> part_of_explicit_cast
    | | |         `-DeclRefExpr 0x14f809400 <col:44> 'const struct lys_node *' lvalue ParmVar 0x150128048 'node' 'const struct lys_node *'
    | | `-IfStmt 0x14f809640 <line:29:9, line:32:9>
    | |   |-UnaryOperator 0x14f8095c8 <line:29:13, col:14> 'int' prefix '!' cannot overflow
    | |   | `-ImplicitCastExpr 0x14f8095b0 <col:14> 'const struct lys_node *' <LValueToRValue>
    | |   |   `-DeclRefExpr 0x14f809590 <col:14> 'const struct lys_node *' lvalue ParmVar 0x150128048 'node' 'const struct lys_node *'
    | |   `-CompoundStmt 0x14f809628 <col:20, line:32:9>
    | |     `-ReturnStmt 0x14f809618 <line:31:13, col:20>
    | |       `-RecoveryExpr 0x14f8095f8 <col:20> '<dependent type>' contains-errors lvalue
    | `-IfStmt 0x148808320 <line:33:12, line:39:5> has_else
    |   |-BinaryOperator 0x14f809738 <line:33:16, col:34> 'int' contains-errors '=='
    |   | |-RecoveryExpr 0x14f8096b8 <col:16, col:22> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x14f809680 <col:16> 'const struct lys_node *' lvalue ParmVar 0x150128048 'node' 'const struct lys_node *'
    |   | `-RecoveryExpr 0x14f809718 <col:34> '<dependent type>' contains-errors lvalue
    |   |-CompoundStmt 0x14f8097a0 <col:43, line:35:5>
    |   | `-ReturnStmt 0x14f809790 <line:34:9, col:16>
    |   |   `-RecoveryExpr 0x14f809770 <col:16> '<dependent type>' contains-errors lvalue
    |   `-IfStmt 0x1488082f0 <line:35:12, line:39:5> has_else
    |     |-RecoveryExpr 0x148808200 <line:35:16, col:22> '<dependent type>' contains-errors lvalue
    |     | `-DeclRefExpr 0x14f8097b8 <col:16> 'const struct lys_node *' lvalue ParmVar 0x150128048 'node' 'const struct lys_node *'
    |     |-CompoundStmt 0x1488082c8 <col:30, line:37:5>
    |     | `-BinaryOperator 0x1488082a8 <line:36:9, col:22> 'const struct lys_node *' contains-errors '='
    |     |   |-DeclRefExpr 0x148808228 <col:9> 'const struct lys_node *' lvalue ParmVar 0x150128048 'node' 'const struct lys_node *'
    |     |   `-RecoveryExpr 0x148808280 <col:16, col:22> '<dependent type>' contains-errors lvalue
    |     |     `-DeclRefExpr 0x148808248 <col:16> 'const struct lys_node *' lvalue ParmVar 0x150128048 'node' 'const struct lys_node *'
    |     `-CompoundStmt 0x1488082e0 <line:37:12, line:39:5>
    |-IfStmt 0x1488084c0 <line:41:5, line:46:5>
    | |-BinaryOperator 0x1488083d8 <line:41:9, col:22> 'int' '=='
    | | |-ImplicitCastExpr 0x1488083c0 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x148808380 <col:9> 'int' lvalue ParmVar 0x1501280c8 'recursive' 'int'
    | | `-IntegerLiteral 0x1488083a0 <col:22> 'int' 2
    | `-CompoundStmt 0x1488084a8 <col:25, line:46:5>
    |   `-IfStmt 0x148808488 <line:43:9, line:45:9>
    |     |-RecoveryExpr 0x148808458 <line:43:13, col:81> '_Bool' contains-errors
    |     `-CompoundStmt 0x148808478 <col:84, line:45:9>
    `-GotoStmt 0x1488084e0 <line:47:5, col:10> 'check' 0x14f809128
