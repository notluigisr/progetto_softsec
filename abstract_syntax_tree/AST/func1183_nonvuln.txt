TranslationUnitDecl 0x145055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1450564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x145055bd0 '__int128'
|-TypedefDecl 0x145056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x145055bf0 'unsigned __int128'
|-TypedefDecl 0x145126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x145126000 'struct __NSConstantString_tag'
|   `-Record 0x145056580 '__NSConstantString_tag'
|-TypedefDecl 0x145126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x145055d90 '__SVInt8_t'
|-TypedefDecl 0x145126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x145055db0 '__SVInt16_t'
|-TypedefDecl 0x145126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x145055dd0 '__SVInt32_t'
|-TypedefDecl 0x1451263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x145055df0 '__SVInt64_t'
|-TypedefDecl 0x145126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x145055e10 '__SVUint8_t'
|-TypedefDecl 0x1451264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x145055e30 '__SVUint16_t'
|-TypedefDecl 0x145126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x145055e50 '__SVUint32_t'
|-TypedefDecl 0x145126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x145055e70 '__SVUint64_t'
|-TypedefDecl 0x1451265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x145055e90 '__SVFloat16_t'
|-TypedefDecl 0x145126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x145055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1451266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x145055ed0 '__SVFloat64_t'
|-TypedefDecl 0x145126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x145055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x145126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x145055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1451267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x145055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x145126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x145055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1451268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x145055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x145126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x145055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x145126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x145055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1451269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x145055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x145126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x145055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x145126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x145056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x145126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x145056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x145126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x145056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x145126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x145056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x145126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x145056090 '__clang_svint8x3_t'
|-TypedefDecl 0x145126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1450560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x145126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1450560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x145126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1450560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x145126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x145056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x145126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x145056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x145126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x145056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x145126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x145056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x145126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x145056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x145127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1450561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x145127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1450561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1451278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1450561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x145127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x145056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1451279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x145056230 '__clang_svint16x4_t'
|-TypedefDecl 0x145127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x145056250 '__clang_svint32x4_t'
|-TypedefDecl 0x145127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x145056270 '__clang_svint64x4_t'
|-TypedefDecl 0x145127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x145056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x145127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1450562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x145127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1450562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x145127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1450562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x145127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x145056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x145127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x145056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x145127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x145056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x145127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x145056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x145127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x145056390 '__SVBool_t'
|-TypedefDecl 0x145127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1450563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x145127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1450563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x145127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1450563f0 '__SVCount_t'
|-TypedefDecl 0x145127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x145127fb0 'char *'
|   `-BuiltinType 0x1450556b0 'char'
|-TypedefDecl 0x145128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x145127fb0 'char *'
|   `-BuiltinType 0x1450556b0 'char'
|-FunctionDecl 0x145128438 <dataset_diviso_filec/func1183_nonvuln.c:1:1, line:27:1> line:1:1 host_nmtoa 'int (int, int *, int, char *, int)'
| |-ParmVarDecl 0x1451280d8 <col:12, col:16> col:16 used count 'int'
| |-ParmVarDecl 0x145128188 <col:23, col:28> col:28 used binary 'int *'
| |-ParmVarDecl 0x145128208 <col:36, col:40> col:40 used mask 'int'
| |-ParmVarDecl 0x1451282a0 <col:46, col:54> col:54 used buffer 'char *'
| |-ParmVarDecl 0x145128320 <col:62, col:66> col:66 sep 'int'
| `-CompoundStmt 0x145141860 <line:2:1, line:27:1>
|   |-DeclStmt 0x1451285d0 <line:3:1, col:6>
|   | `-VarDecl 0x145128568 <col:1, col:5> col:5 used j 'int'
|   |-DeclStmt 0x1451286a0 <line:4:1, col:20>
|   | `-VarDecl 0x145128600 <col:1, col:14> col:9 used tt 'char *' cinit
|   |   `-ImplicitCastExpr 0x145128688 <col:14> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x145128668 <col:14> 'char *' lvalue ParmVar 0x1451282a0 'buffer' 'char *'
|   |-IfStmt 0x145141590 <line:6:1, line:17:5> has_else
|   | |-BinaryOperator 0x145128710 <line:6:5, col:14> 'int' '=='
|   | | |-ImplicitCastExpr 0x1451286f8 <col:5> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1451286b8 <col:5> 'int' lvalue ParmVar 0x1451280d8 'count' 'int'
|   | | `-IntegerLiteral 0x1451286d8 <col:14> 'int' 1
|   | |-CompoundStmt 0x145141280 <line:7:3, line:11:3>
|   | | `-BinaryOperator 0x1451287e0 <line:8:3, col:15> 'int' '='
|   | |   |-DeclRefExpr 0x145128730 <col:3> 'int' lvalue Var 0x145128568 'j' 'int'
|   | |   `-ImplicitCastExpr 0x1451287c8 <col:7, col:15> 'int' <LValueToRValue>
|   | |     `-ArraySubscriptExpr 0x1451287a8 <col:7, col:15> 'int' lvalue
|   | |       |-ImplicitCastExpr 0x145128790 <col:7> 'int *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x145128750 <col:7> 'int *' lvalue ParmVar 0x145128188 'binary' 'int *'
|   | |       `-IntegerLiteral 0x145128770 <col:14> 'int' 0
|   | `-ForStmt 0x145141558 <line:13:3, line:17:5>
|   |   |-DeclStmt 0x145141338 <line:13:8, col:17>
|   |   | `-VarDecl 0x1451412b0 <col:8, col:16> col:12 used i 'int' cinit
|   |   |   `-IntegerLiteral 0x145141318 <col:16> 'int' 0
|   |   |-<<<NULL>>>
|   |   |-BinaryOperator 0x1451413a8 <col:19, col:23> 'int' '<'
|   |   | |-ImplicitCastExpr 0x145141390 <col:19> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x145141350 <col:19> 'int' lvalue Var 0x1451412b0 'i' 'int'
|   |   | `-IntegerLiteral 0x145141370 <col:23> 'int' 4
|   |   |-UnaryOperator 0x1451413e8 <col:26, col:27> 'int' postfix '++'
|   |   | `-DeclRefExpr 0x1451413c8 <col:26> 'int' lvalue Var 0x1451412b0 'i' 'int'
|   |   `-CompoundStmt 0x145141540 <line:14:5, line:17:5>
|   |     `-BinaryOperator 0x1451414c8 <line:15:5, col:17> 'int' '='
|   |       |-DeclRefExpr 0x145141400 <col:5> 'int' lvalue Var 0x145128568 'j' 'int'
|   |       `-ImplicitCastExpr 0x1451414b0 <col:9, col:17> 'int' <LValueToRValue>
|   |         `-ArraySubscriptExpr 0x145141490 <col:9, col:17> 'int' lvalue
|   |           |-ImplicitCastExpr 0x145141460 <col:9> 'int *' <LValueToRValue>
|   |           | `-DeclRefExpr 0x145141420 <col:9> 'int *' lvalue ParmVar 0x145128188 'binary' 'int *'
|   |           `-ImplicitCastExpr 0x145141478 <col:16> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x145141440 <col:16> 'int' lvalue Var 0x1451412b0 'i' 'int'
|   |-UnaryOperator 0x1451415e0 <line:19:1, col:3> 'char *' postfix '--'
|   | `-DeclRefExpr 0x1451415c0 <col:1> 'char *' lvalue Var 0x145128600 'tt' 'char *'
|   |-IfStmt 0x145141778 <line:21:1, line:24:3> has_else
|   | |-BinaryOperator 0x145141650 <line:21:5, col:12> 'int' '<'
|   | | |-ImplicitCastExpr 0x145141638 <col:5> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1451415f8 <col:5> 'int' lvalue ParmVar 0x145128208 'mask' 'int'
|   | | `-IntegerLiteral 0x145141618 <col:12> 'int' 0
|   | |-BinaryOperator 0x1451416f8 <line:22:3, col:9> 'char' '='
|   | | |-UnaryOperator 0x1451416a8 <col:3, col:4> 'char' lvalue prefix '*' cannot overflow
|   | | | `-ImplicitCastExpr 0x145141690 <col:4> 'char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x145141670 <col:4> 'char *' lvalue Var 0x145128600 'tt' 'char *'
|   | | `-ImplicitCastExpr 0x1451416e0 <col:9> 'char' <IntegralCast>
|   | |   `-IntegerLiteral 0x1451416c0 <col:9> 'int' 0
|   | `-NullStmt 0x145141770 <line:24:3>
|   `-ReturnStmt 0x145141850 <line:26:1, col:13>
|     `-ImplicitCastExpr 0x145141838 <col:8, col:13> 'int' <IntegralCast>
|       `-BinaryOperator 0x145141818 <col:8, col:13> 'long' '-'
|         |-ImplicitCastExpr 0x1451417e8 <col:8> 'char *' <LValueToRValue>
|         | `-DeclRefExpr 0x1451417a8 <col:8> 'char *' lvalue Var 0x145128600 'tt' 'char *'
|         `-ImplicitCastExpr 0x145141800 <col:13> 'char *' <LValueToRValue>
|           `-DeclRefExpr 0x1451417c8 <col:13> 'char *' lvalue ParmVar 0x1451282a0 'buffer' 'char *'
`-FunctionDecl 0x145141030 <line:10:11> col:11 implicit used sprintf 'int (char *, const char *, ...)' extern
  |-ParmVarDecl 0x145141130 <<invalid sloc>> <invalid sloc> 'char *'
  |-ParmVarDecl 0x145141198 <<invalid sloc>> <invalid sloc> 'const char *'
  |-BuiltinAttr 0x1451410d8 <<invalid sloc>> Implicit 906
  `-FormatAttr 0x145141210 <col:11> Implicit printf 2 3
