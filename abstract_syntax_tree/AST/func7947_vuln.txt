TranslationUnitDecl 0x125855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1258564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x125855bd0 '__int128'
|-TypedefDecl 0x125856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x125855bf0 'unsigned __int128'
|-TypedefDecl 0x125926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x125926000 'struct __NSConstantString_tag'
|   `-Record 0x125856580 '__NSConstantString_tag'
|-TypedefDecl 0x125926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x125855d90 '__SVInt8_t'
|-TypedefDecl 0x125926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x125855db0 '__SVInt16_t'
|-TypedefDecl 0x125926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x125855dd0 '__SVInt32_t'
|-TypedefDecl 0x1259263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x125855df0 '__SVInt64_t'
|-TypedefDecl 0x125926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x125855e10 '__SVUint8_t'
|-TypedefDecl 0x1259264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x125855e30 '__SVUint16_t'
|-TypedefDecl 0x125926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x125855e50 '__SVUint32_t'
|-TypedefDecl 0x125926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x125855e70 '__SVUint64_t'
|-TypedefDecl 0x1259265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x125855e90 '__SVFloat16_t'
|-TypedefDecl 0x125926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x125855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1259266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x125855ed0 '__SVFloat64_t'
|-TypedefDecl 0x125926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x125855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x125926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x125855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1259267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x125855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x125926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x125855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1259268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x125855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x125926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x125855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x125926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x125855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1259269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x125855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x125926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x125855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x125926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x125856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x125926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x125856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x125926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x125856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x125926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x125856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x125926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x125856090 '__clang_svint8x3_t'
|-TypedefDecl 0x125926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1258560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x125926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1258560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x125926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1258560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x125926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x125856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x125926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x125856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x125926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x125856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x125926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x125856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x125926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x125856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x125927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1258561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x125927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1258561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1259278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1258561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x125927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x125856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1259279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x125856230 '__clang_svint16x4_t'
|-TypedefDecl 0x125927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x125856250 '__clang_svint32x4_t'
|-TypedefDecl 0x125927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x125856270 '__clang_svint64x4_t'
|-TypedefDecl 0x125927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x125856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x125927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1258562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x125927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1258562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x125927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1258562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x125927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x125856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x125927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x125856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x125927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x125856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x125927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x125856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x125927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x125856390 '__SVBool_t'
|-TypedefDecl 0x125927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1258563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x125927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1258563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x125927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1258563f0 '__SVCount_t'
|-TypedefDecl 0x125927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x125927fb0 'char *'
|   `-BuiltinType 0x1258556b0 'char'
|-TypedefDecl 0x125928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x125927fb0 'char *'
|   `-BuiltinType 0x1258556b0 'char'
|-FunctionDecl 0x125928318 <dataset_diviso_filec/func7947_vuln.c:1:1, line:46:1> line:1:18 invalid add_post_var 'int (int *, int *, int)' static
| |-ParmVarDecl 0x125928128 <col:31, col:37> col:37 invalid arr 'int *'
| |-ParmVarDecl 0x1259281a8 <col:42, col:59> col:59 referenced invalid var 'int *'
| |-ParmVarDecl 0x125928228 <col:64, col:74> col:74 invalid eof 'int'
| `-CompoundStmt 0x12600bd18 <line:2:1, line:46:1>
|   |-DeclStmt 0x1259284f0 <line:3:2, col:19>
|   | |-VarDecl 0x1259283f0 <col:2, col:8> col:8 used ksep 'char *'
|   | `-VarDecl 0x125928470 <col:2, col:15> col:15 used vsep 'char *'
|   |-BinaryOperator 0x1259285f0 <line:4:2, col:15> 'char *' ','
|   | |-UnaryExprOrTypeTraitExpr 0x125928598 <col:2, col:9> 'unsigned long' sizeof
|   | | `-DeclRefExpr 0x125928578 <col:9> 'char *' lvalue Var 0x1259283f0 'ksep' 'char *' non_odr_use_unevaluated
|   | `-ImplicitCastExpr 0x1259285d8 <col:15> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1259285b8 <col:15> 'char *' lvalue Var 0x125928470 'vsep' 'char *'
|   |-DeclStmt 0x125928690 <line:6:2, col:23>
|   | `-VarDecl 0x125928628 <col:2, col:15> col:15 used new_vlen 'unsigned int'
|   |-IfStmt 0x1259287e0 <line:8:2, line:10:2>
|   | |-BinaryOperator 0x125928778 <line:8:6, col:23> 'int' contains-errors '>='
|   | | |-CXXDependentScopeMemberExpr 0x1259286c8 <col:6, col:11> '<dependent type>' contains-errors lvalue ->ptr
|   | | | `-RecoveryExpr 0x1259286a8 <col:6> '<dependent type>' contains-errors lvalue
|   | | `-CXXDependentScopeMemberExpr 0x125928730 <col:18, col:23> '<dependent type>' contains-errors lvalue ->end
|   | |   `-RecoveryExpr 0x125928710 <col:18> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x1259287c8 <col:28, line:10:2>
|   |   `-ReturnStmt 0x1259287b8 <line:9:3, col:10>
|   |     `-IntegerLiteral 0x125928798 <col:10> 'int' 0
|   |-BinaryOperator 0x126008af0 <line:12:2, col:50> 'char *' contains-errors '='
|   | |-DeclRefExpr 0x126008200 <col:2> 'char *' lvalue Var 0x125928470 'vsep' 'char *'
|   | `-CallExpr 0x126008ab8 <col:9, col:50> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x126008910 <col:9> 'void *(const void *, int, unsigned long)' Function 0x1260086c0 'memchr' 'void *(const void *, int, unsigned long)'
|   |   |-CXXDependentScopeMemberExpr 0x126008950 <col:16, col:21> '<dependent type>' contains-errors lvalue ->ptr
|   |   | `-RecoveryExpr 0x126008930 <col:16> '<dependent type>' contains-errors lvalue
|   |   |-CharacterLiteral 0x126008998 <col:26> 'int' 38
|   |   `-BinaryOperator 0x126008a80 <col:31, col:47> '<dependent type>' contains-errors '-'
|   |     |-CXXDependentScopeMemberExpr 0x1260089d0 <col:31, col:36> '<dependent type>' contains-errors lvalue ->end
|   |     | `-RecoveryExpr 0x1260089b0 <col:31> '<dependent type>' contains-errors lvalue
|   |     `-CXXDependentScopeMemberExpr 0x126008a38 <col:42, col:47> '<dependent type>' contains-errors lvalue ->ptr
|   |       `-RecoveryExpr 0x126008a18 <col:42> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x126008d00 <line:13:2, line:19:2>
|   | |-UnaryOperator 0x126008b48 <line:13:6, col:7> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x126008b30 <col:7> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x126008b10 <col:7> 'char *' lvalue Var 0x125928470 'vsep' 'char *'
|   | `-CompoundStmt 0x126008ce8 <col:13, line:19:2>
|   |   `-IfStmt 0x126008cb8 <line:14:3, line:18:3> has_else
|   |     |-UnaryOperator 0x126008b98 <line:14:7, col:8> '<dependent type>' contains-errors prefix '!' cannot overflow
|   |     | `-ImplicitCastExpr 0x126008b80 <col:8> '<dependent type>' contains-errors <LValueToRValue>
|   |     |   `-RecoveryExpr 0x126008b60 <col:8> '<dependent type>' contains-errors lvalue
|   |     |-CompoundStmt 0x126008be0 <col:13, line:16:3>
|   |     | `-ReturnStmt 0x126008bd0 <line:15:4, col:11>
|   |     |   `-IntegerLiteral 0x126008bb0 <col:11> 'int' 0
|   |     `-CompoundStmt 0x126008ca0 <line:16:10, line:18:3>
|   |       `-BinaryOperator 0x126008c80 <line:17:4, col:16> 'char *' contains-errors '='
|   |         |-DeclRefExpr 0x126008bf8 <col:4> 'char *' lvalue Var 0x125928470 'vsep' 'char *'
|   |         `-CXXDependentScopeMemberExpr 0x126008c38 <col:11, col:16> '<dependent type>' contains-errors lvalue ->end
|   |           `-RecoveryExpr 0x126008c18 <col:11> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x126008ed8 <line:21:2, col:46> 'char *' contains-errors '='
|   | |-DeclRefExpr 0x126008d20 <col:2> 'char *' lvalue Var 0x1259283f0 'ksep' 'char *'
|   | `-CallExpr 0x126008ea0 <col:9, col:46> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x126008d40 <col:9> 'void *(const void *, int, unsigned long)' Function 0x1260086c0 'memchr' 'void *(const void *, int, unsigned long)'
|   |   |-CXXDependentScopeMemberExpr 0x126008d80 <col:16, col:21> '<dependent type>' contains-errors lvalue ->ptr
|   |   | `-RecoveryExpr 0x126008d60 <col:16> '<dependent type>' contains-errors lvalue
|   |   |-CharacterLiteral 0x126008dc8 <col:26> 'int' 61
|   |   `-BinaryOperator 0x126008e68 <col:31, col:43> '<dependent type>' contains-errors '-'
|   |     |-DeclRefExpr 0x126008de0 <col:31> 'char *' lvalue Var 0x125928470 'vsep' 'char *'
|   |     `-CXXDependentScopeMemberExpr 0x126008e20 <col:38, col:43> '<dependent type>' contains-errors lvalue ->ptr
|   |       `-RecoveryExpr 0x126008e00 <col:38> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x12600b2c0 <line:22:2, line:32:2> has_else
|   | |-ImplicitCastExpr 0x126008f18 <line:22:6> 'char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x126008ef8 <col:6> 'char *' lvalue Var 0x1259283f0 'ksep' 'char *'
|   | |-CompoundStmt 0x126009108 <col:12, line:27:2>
|   | | `-BinaryOperator 0x126008fb0 <line:23:3, col:11> 'char' '='
|   | |   |-UnaryOperator 0x126008f68 <col:3, col:4> 'char' lvalue prefix '*' cannot overflow
|   | |   | `-ImplicitCastExpr 0x126008f50 <col:4> 'char *' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x126008f30 <col:4> 'char *' lvalue Var 0x1259283f0 'ksep' 'char *'
|   | |   `-ImplicitCastExpr 0x126008f98 <col:11> 'char' <IntegralCast>
|   | |     `-CharacterLiteral 0x126008f80 <col:11> 'int' 0
|   | `-CompoundStmt 0x12600b2a8 <line:27:9, line:32:2>
|   |   `-BinaryOperator 0x1260091b0 <line:28:3, col:10> 'char *' '='
|   |     |-DeclRefExpr 0x126009120 <col:3> 'char *' lvalue Var 0x1259283f0 'ksep' 'char *'
|   |     `-ImplicitCastExpr 0x126009198 <col:10> 'char *' <ArrayToPointerDecay>
|   |       `-StringLiteral 0x126009180 <col:10> 'char[1]' lvalue ""
|   |-CallExpr 0x12600b540 <line:35:2, col:31> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x12600b450 <col:2> 'int ()' Function 0x12600b398 'php_url_decode' 'int ()'
|   | |-CXXDependentScopeMemberExpr 0x12600b490 <col:17, col:22> '<dependent type>' contains-errors lvalue ->ptr
|   | | `-RecoveryExpr 0x12600b470 <col:17> '<dependent type>' contains-errors lvalue
|   | `-DeclRefExpr 0x12600b520 <col:27> 'char *' lvalue Var 0x1259283f0 'ksep' 'char *'
|   |-IfStmt 0x12600b708 <line:36:2, line:38:2>
|   | |-DeclRefExpr 0x12600b588 <line:36:6> 'char *' lvalue Var 0x125928470 'vsep' 'char *'
|   | `-CompoundStmt 0x12600b6f8 <col:12, line:38:2>
|   |-IfStmt 0x12600bb10 <line:40:2, line:42:2>
|   | |-RecoveryExpr 0x12600b918 <line:40:6, col:85> '_Bool' contains-errors
|   | `-CompoundStmt 0x12600bb00 <col:88, line:42:2>
|   |-BinaryOperator 0x12600bcc8 <line:44:2, col:37> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x12600bb78 <col:2, col:7> '<dependent type>' contains-errors lvalue ->ptr
|   | | `-RecoveryExpr 0x12600bb50 <col:2> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x12600bb30 <col:2> 'int *' lvalue ParmVar 0x1259281a8 'var' 'int *'
|   | `-BinaryOperator 0x12600bca8 <col:13, col:37> '<dependent type>' contains-errors '+'
|   |   |-DeclRefExpr 0x12600bbc0 <col:13> 'char *' lvalue Var 0x125928470 'vsep' 'char *'
|   |   `-ParenExpr 0x12600bc88 <col:20, col:37> 'int' contains-errors
|   |     `-BinaryOperator 0x12600bc68 <col:21, col:34> 'int' contains-errors '!='
|   |       |-DeclRefExpr 0x12600bbe0 <col:21> 'char *' lvalue Var 0x125928470 'vsep' 'char *'
|   |       `-CXXDependentScopeMemberExpr 0x12600bc20 <col:29, col:34> '<dependent type>' contains-errors lvalue ->end
|   |         `-RecoveryExpr 0x12600bc00 <col:29> '<dependent type>' contains-errors lvalue
|   `-ReturnStmt 0x12600bd08 <line:45:2, col:9>
|     `-IntegerLiteral 0x12600bce8 <col:9> 'int' 1
`-FunctionDecl 0x1260086c0 <line:12:9> col:9 implicit used memchr 'void *(const void *, int, unsigned long)' extern
  |-ParmVarDecl 0x1260087c0 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x126008828 <<invalid sloc>> <invalid sloc> 'int'
  |-ParmVarDecl 0x126008890 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x126008768 <<invalid sloc>> Implicit 892
