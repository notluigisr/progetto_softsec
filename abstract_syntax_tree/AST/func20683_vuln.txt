TranslationUnitDecl 0x15b055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x15b0564b8 <<invalid sloc>> <invalid sloc> implicit referenced __int128_t '__int128'
| `-BuiltinType 0x15b055bd0 '__int128'
|-TypedefDecl 0x15b056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x15b055bf0 'unsigned __int128'
|-TypedefDecl 0x15b126c30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15b126a00 'struct __NSConstantString_tag'
|   `-Record 0x15b056580 '__NSConstantString_tag'
|-TypedefDecl 0x15b126c98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x15b055d90 '__SVInt8_t'
|-TypedefDecl 0x15b126d00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x15b055db0 '__SVInt16_t'
|-TypedefDecl 0x15b126d68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x15b055dd0 '__SVInt32_t'
|-TypedefDecl 0x15b126dd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x15b055df0 '__SVInt64_t'
|-TypedefDecl 0x15b126e38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x15b055e10 '__SVUint8_t'
|-TypedefDecl 0x15b126ea0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x15b055e30 '__SVUint16_t'
|-TypedefDecl 0x15b126f08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x15b055e50 '__SVUint32_t'
|-TypedefDecl 0x15b126f70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x15b055e70 '__SVUint64_t'
|-TypedefDecl 0x15b126fd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x15b055e90 '__SVFloat16_t'
|-TypedefDecl 0x15b127040 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x15b055eb0 '__SVFloat32_t'
|-TypedefDecl 0x15b1270a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x15b055ed0 '__SVFloat64_t'
|-TypedefDecl 0x15b127110 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x15b055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15b127178 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x15b055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15b1271e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x15b055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15b127248 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x15b055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15b1272b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x15b055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15b127318 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x15b055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15b127380 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x15b055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15b1273e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x15b055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15b127450 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x15b055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15b1274b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x15b056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15b127520 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x15b056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15b127588 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x15b056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15b1275f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x15b056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15b127658 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x15b056090 '__clang_svint8x3_t'
|-TypedefDecl 0x15b1276c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x15b0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15b127728 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x15b0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15b127790 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x15b0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15b1277f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x15b056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15b127860 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x15b056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15b1278c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x15b056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15b127930 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x15b056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15b127998 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x15b056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15b128200 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x15b0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15b128268 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x15b0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15b1282d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x15b0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15b128338 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x15b056210 '__clang_svint8x4_t'
|-TypedefDecl 0x15b1283a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x15b056230 '__clang_svint16x4_t'
|-TypedefDecl 0x15b128408 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x15b056250 '__clang_svint32x4_t'
|-TypedefDecl 0x15b128470 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x15b056270 '__clang_svint64x4_t'
|-TypedefDecl 0x15b1284d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x15b056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15b128540 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x15b0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15b1285a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x15b0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15b128610 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x15b0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15b128678 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x15b056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15b1286e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x15b056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15b128748 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x15b056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15b1287b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x15b056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15b128818 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x15b056390 '__SVBool_t'
|-TypedefDecl 0x15b128880 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x15b0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15b1288e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x15b0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15b128950 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x15b0563f0 '__SVCount_t'
|-TypedefDecl 0x15b1289f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15b1289b0 'char *'
|   `-BuiltinType 0x15b0556b0 'char'
|-TypedefDecl 0x15b128a68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15b1289b0 'char *'
|   `-BuiltinType 0x15b0556b0 'char'
`-FunctionDecl 0x15b1419d8 <dataset_diviso_filec/func20683_vuln.c:1:1, line:84:1> line:1:1 check_compat_entry_size_and_hooks 'int (struct ipt_entry *, struct xt_table_info *, unsigned int *, unsigned char *, unsigned char *, unsigned int *, unsigned int *, unsigned int *, const char *)'
  |-ParmVarDecl 0x15b129048 <col:35, col:53> col:53 used e 'struct ipt_entry *'
  |-ParmVarDecl 0x15b141428 <line:2:7, col:29> col:29 used newinfo 'struct xt_table_info *'
  |-ParmVarDecl 0x15b1414d8 <line:3:7, col:21> col:21 used size 'unsigned int *'
  |-ParmVarDecl 0x15b141588 <line:4:7, col:22> col:22 used base 'unsigned char *'
  |-ParmVarDecl 0x15b141608 <line:5:7, col:22> col:22 used limit 'unsigned char *'
  |-ParmVarDecl 0x15b141688 <line:6:7, col:21> col:21 used hook_entries 'unsigned int *'
  |-ParmVarDecl 0x15b141708 <line:7:7, col:21> col:21 used underflows 'unsigned int *'
  |-ParmVarDecl 0x15b141788 <line:8:7, col:21> col:21 used i 'unsigned int *'
  |-ParmVarDecl 0x15b141808 <line:9:7, col:19> col:19 used name 'const char *'
  `-CompoundStmt 0x15b148c08 <line:10:1, line:84:1>
    |-DeclStmt 0x15b141cf8 <line:11:2, col:28>
    | |-RecordDecl 0x15b141b10 <col:2, col:9> col:9 struct ipt_entry_target
    | `-VarDecl 0x15b141c78 <col:2, col:27> col:27 used t 'struct ipt_entry_target *'
    |-DeclStmt 0x15b141ef8 <line:12:2, col:27>
    | |-RecordDecl 0x15b141d10 <col:2, col:9> col:9 struct ipt_target
    | `-VarDecl 0x15b141e78 <col:2, col:21> col:21 used target 'struct ipt_target *'
    |-DeclStmt 0x15b142008 <line:13:2, col:24>
    | `-VarDecl 0x15b141fa0 <col:2, col:12> col:12 used entry_offset '__int128_t':'__int128'
    |-DeclStmt 0x15b142248 <line:14:2, col:20>
    | |-VarDecl 0x15b142038 <col:2, col:6> col:6 used ret 'int'
    | |-VarDecl 0x15b1420b8 <col:2, col:11> col:11 used off 'int'
    | |-VarDecl 0x15b142138 <col:2, col:16> col:16 used h 'int'
    | `-VarDecl 0x15b1421b8 <col:2, col:19> col:19 used j 'int'
    |-CallExpr 0x15b142468 <line:16:2, col:19> 'int'
    | |-ImplicitCastExpr 0x15b142450 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x15b142370 <col:2> 'int ()' Function 0x15b1422b8 'duprintf' 'int ()'
    | |-ImplicitCastExpr 0x15b142498 <col:11> 'char *' <ArrayToPointerDecay>
    | | `-StringLiteral 0x15b1423d0 <col:11> 'char[4]' lvalue "STR"
    | `-ImplicitCastExpr 0x15b1424b0 <col:18> 'struct ipt_entry *' <LValueToRValue>
    |   `-DeclRefExpr 0x15b142400 <col:18> 'struct ipt_entry *' lvalue ParmVar 0x15b129048 'e' 'struct ipt_entry *'
    |-IfStmt 0x15b142940 <line:17:2, line:21:2>
    | |-RecoveryExpr 0x15b142740 <line:17:6, line:18:65> '_Bool' contains-errors
    | `-CompoundStmt 0x15b142920 <col:72, line:21:2>
    |   |-CallExpr 0x15b1427f8 <line:19:3, col:27> 'int'
    |   | |-ImplicitCastExpr 0x15b1427e0 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x15b142760 <col:3> 'int ()' Function 0x15b1422b8 'duprintf' 'int ()'
    |   | |-ImplicitCastExpr 0x15b142830 <col:12> 'char *' <ArrayToPointerDecay>
    |   | | `-StringLiteral 0x15b142780 <col:12> 'char[4]' lvalue "STR"
    |   | |-ImplicitCastExpr 0x15b142848 <col:19> 'struct ipt_entry *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x15b1427a0 <col:19> 'struct ipt_entry *' lvalue ParmVar 0x15b129048 'e' 'struct ipt_entry *'
    |   | `-ImplicitCastExpr 0x15b142860 <col:22> 'unsigned char *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x15b1427c0 <col:22> 'unsigned char *' lvalue ParmVar 0x15b141608 'limit' 'unsigned char *'
    |   `-ReturnStmt 0x15b142910 <line:20:3, col:11>
    |     `-UnaryOperator 0x15b1428f8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       `-ImplicitCastExpr 0x15b1428e0 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |         `-RecoveryExpr 0x15b1428c0 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x15b142d98 <line:23:2, line:28:2>
    | |-RecoveryExpr 0x15b142bb8 <line:23:6, line:24:40> '_Bool' contains-errors
    | `-CompoundStmt 0x15b142d78 <col:43, line:28:2>
    |   |-CallExpr 0x15b142c98 <line:25:3, line:26:22> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x15b142bd8 <line:25:3> 'int ()' Function 0x15b1422b8 'duprintf' 'int ()'
    |   | |-StringLiteral 0x15b142bf8 <col:12> 'char[4]' lvalue "STR"
    |   | |-DeclRefExpr 0x15b142c18 <line:26:5> 'struct ipt_entry *' lvalue ParmVar 0x15b129048 'e' 'struct ipt_entry *'
    |   | `-RecoveryExpr 0x15b142c70 <col:8, col:11> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x15b142c38 <col:8> 'struct ipt_entry *' lvalue ParmVar 0x15b129048 'e' 'struct ipt_entry *'
    |   `-ReturnStmt 0x15b142d68 <line:27:3, col:11>
    |     `-UnaryOperator 0x15b142d50 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       `-ImplicitCastExpr 0x15b142d38 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |         `-RecoveryExpr 0x15b142d18 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x15b143150 <line:30:2, line:33:2>
    | |-UnaryOperator 0x15b142f58 <line:30:6, col:27> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-CallExpr 0x15b142f30 <col:7, col:27> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x15b142e98 <col:7> 'int ()' Function 0x15b142de0 'ip_checkentry' 'int ()'
    | |   `-UnaryOperator 0x15b142f18 <col:21, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |     `-RecoveryExpr 0x15b142ef0 <col:22, col:25> '<dependent type>' contains-errors lvalue
    | |       `-DeclRefExpr 0x15b142eb8 <col:22> 'struct ipt_entry *' lvalue ParmVar 0x15b129048 'e' 'struct ipt_entry *'
    | `-CompoundStmt 0x15b143130 <col:30, line:33:2>
    |   |-CallExpr 0x15b143008 <line:31:3, col:26> 'int'
    |   | |-ImplicitCastExpr 0x15b142ff0 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x15b142f70 <col:3> 'int ()' Function 0x15b1422b8 'duprintf' 'int ()'
    |   | |-ImplicitCastExpr 0x15b143040 <col:12> 'char *' <ArrayToPointerDecay>
    |   | | `-StringLiteral 0x15b142f90 <col:12> 'char[4]' lvalue "STR"
    |   | |-ImplicitCastExpr 0x15b143058 <col:19> 'struct ipt_entry *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x15b142fb0 <col:19> 'struct ipt_entry *' lvalue ParmVar 0x15b129048 'e' 'struct ipt_entry *'
    |   | `-ImplicitCastExpr 0x15b143070 <col:22> 'const char *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x15b142fd0 <col:22> 'const char *' lvalue ParmVar 0x15b141808 'name' 'const char *'
    |   `-ReturnStmt 0x15b143120 <line:32:3, col:11>
    |     `-UnaryOperator 0x15b143108 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       `-ImplicitCastExpr 0x15b1430f0 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |         `-RecoveryExpr 0x15b1430d0 <col:11> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x15b1431b0 <line:35:2, col:8> 'int' '='
    | |-DeclRefExpr 0x15b143170 <col:2> 'int' lvalue Var 0x15b1420b8 'off' 'int'
    | `-IntegerLiteral 0x15b143190 <col:8> 'int' 0
    |-BinaryOperator 0x15b143318 <line:36:2, col:37> '__int128_t':'__int128' '='
    | |-DeclRefExpr 0x15b1431d0 <col:2> '__int128_t':'__int128' lvalue Var 0x15b141fa0 'entry_offset' '__int128_t':'__int128'
    | `-ImplicitCastExpr 0x15b143300 <col:17, col:37> '__int128_t':'__int128' <IntegralCast>
    |   `-BinaryOperator 0x15b1432e0 <col:17, col:37> 'long' '-'
    |     |-CStyleCastExpr 0x15b143240 <col:17, col:25> 'void *' <BitCast>
    |     | `-ImplicitCastExpr 0x15b143228 <col:25> 'struct ipt_entry *' <LValueToRValue> part_of_explicit_cast
    |     |   `-DeclRefExpr 0x15b1431f0 <col:25> 'struct ipt_entry *' lvalue ParmVar 0x15b129048 'e' 'struct ipt_entry *'
    |     `-CStyleCastExpr 0x15b1432b8 <col:29, col:37> 'void *' <BitCast>
    |       `-ImplicitCastExpr 0x15b1432a0 <col:37> 'unsigned char *' <LValueToRValue> part_of_explicit_cast
    |         `-DeclRefExpr 0x15b143268 <col:37> 'unsigned char *' lvalue ParmVar 0x15b141588 'base' 'unsigned char *'
    |-BinaryOperator 0x15b143378 <line:37:2, col:6> 'int' '='
    | |-DeclRefExpr 0x15b143338 <col:2> 'int' lvalue Var 0x15b1421b8 'j' 'int'
    | `-IntegerLiteral 0x15b143358 <col:6> 'int' 0
    |-BinaryOperator 0x15b1467a0 <line:38:2, line:39:25> 'int' contains-errors '='
    | |-DeclRefExpr 0x15b143398 <line:38:2> 'int' lvalue Var 0x15b142038 'ret' 'int'
    | `-CallExpr 0x15b146748 <col:8, line:39:25> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x15b1464b8 <line:38:8> 'int ()' Function 0x15b146400 'IPT_MATCH_ITERATE' 'int ()'
    |   |-DeclRefExpr 0x15b1464d8 <col:26> 'struct ipt_entry *' lvalue ParmVar 0x15b129048 'e' 'struct ipt_entry *'
    |   |-RecoveryExpr 0x15b146728 <col:29> '<dependent type>' contains-errors lvalue
    |   |-DeclRefExpr 0x15b146510 <col:54> 'const char *' lvalue ParmVar 0x15b141808 'name' 'const char *'
    |   |-UnaryOperator 0x15b146590 <col:60, col:64> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-RecoveryExpr 0x15b146568 <col:61, col:64> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x15b146530 <col:61> 'struct ipt_entry *' lvalue ParmVar 0x15b129048 'e' 'struct ipt_entry *'
    |   |-RecoveryExpr 0x15b1465e0 <line:39:4, col:7> '<dependent type>' contains-errors lvalue
    |   | `-DeclRefExpr 0x15b1465a8 <col:4> 'struct ipt_entry *' lvalue ParmVar 0x15b129048 'e' 'struct ipt_entry *'
    |   |-UnaryOperator 0x15b146660 <col:17, col:18> 'int *' prefix '&' cannot overflow
    |   | `-DeclRefExpr 0x15b146608 <col:18> 'int' lvalue Var 0x15b1420b8 'off' 'int'
    |   `-UnaryOperator 0x15b146698 <col:23, col:24> 'int *' prefix '&' cannot overflow
    |     `-DeclRefExpr 0x15b146678 <col:24> 'int' lvalue Var 0x15b1421b8 'j' 'int'
    |-IfStmt 0x15b1468a0 <line:40:2, line:41:8>
    | |-BinaryOperator 0x15b146818 <line:40:6, col:13> 'int' '!='
    | | |-ImplicitCastExpr 0x15b146800 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x15b1467c0 <col:6> 'int' lvalue Var 0x15b142038 'ret' 'int'
    | | `-IntegerLiteral 0x15b1467e0 <col:13> 'int' 0
    | `-GotoStmt 0x15b146888 <line:41:3, col:8> 'cleanup_matches' 0x15b146838
    |-BinaryOperator 0x15b146a70 <line:43:2, col:22> 'struct ipt_entry_target *' '='
    | |-DeclRefExpr 0x15b1468c0 <col:2> 'struct ipt_entry_target *' lvalue Var 0x15b141c78 't' 'struct ipt_entry_target *'
    | `-ImplicitCastExpr 0x15b146a58 <col:6, col:22> 'struct ipt_entry_target *' <IntegralToPointer>
    |   `-CallExpr 0x15b146a18 <col:6, col:22> 'int'
    |     |-ImplicitCastExpr 0x15b146a00 <col:6> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x15b1469c0 <col:6> 'int ()' Function 0x15b146908 'ipt_get_target' 'int ()'
    |     `-ImplicitCastExpr 0x15b146a40 <col:21> 'struct ipt_entry *' <LValueToRValue>
    |       `-DeclRefExpr 0x15b1469e0 <col:21> 'struct ipt_entry *' lvalue ParmVar 0x15b129048 'e' 'struct ipt_entry *'
    |-IfStmt 0x15b1474e0 <line:48:2, line:52:2>
    | |-BinaryOperator 0x15b147168 <line:48:6, col:25> 'int' '||'
    | | |-CallExpr 0x15b1470d8 <col:6, col:19> 'int'
    | | | |-ImplicitCastExpr 0x15b1470c0 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | | `-DeclRefExpr 0x15b147080 <col:6> 'int ()' Function 0x15b146fc8 'IS_ERR' 'int ()'
    | | | `-ImplicitCastExpr 0x15b147100 <col:13> 'struct ipt_target *' <LValueToRValue>
    | | |   `-DeclRefExpr 0x15b1470a0 <col:13> 'struct ipt_target *' lvalue Var 0x15b141e78 'target' 'struct ipt_target *'
    | | `-UnaryOperator 0x15b147150 <col:24, col:25> 'int' prefix '!' cannot overflow
    | |   `-ImplicitCastExpr 0x15b147138 <col:25> 'struct ipt_target *' <LValueToRValue>
    | |     `-DeclRefExpr 0x15b147118 <col:25> 'struct ipt_target *' lvalue Var 0x15b141e78 'target' 'struct ipt_target *'
    | `-CompoundStmt 0x15b1474c0 <col:33, line:52:2>
    |   |-CallExpr 0x15b1472b8 <line:49:3, col:33> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x15b147188 <col:3> 'int ()' Function 0x15b1422b8 'duprintf' 'int ()'
    |   | |-StringLiteral 0x15b1471a8 <col:12> 'char[4]' lvalue "STR"
    |   | `-CXXDependentScopeMemberExpr 0x15b147270 <col:19, col:29> '<dependent type>' contains-errors lvalue .name
    |   |   `-CXXDependentScopeMemberExpr 0x15b147228 <col:19, col:24> '<dependent type>' contains-errors lvalue .user
    |   |     `-RecoveryExpr 0x15b147200 <col:19, col:22> '<dependent type>' contains-errors lvalue
    |   |       `-DeclRefExpr 0x15b1471c8 <col:19> 'struct ipt_entry_target *' lvalue Var 0x15b141c78 't' 'struct ipt_entry_target *'
    |   `-GotoStmt 0x15b1474a8 <line:51:3, col:8> 'cleanup_matches' 0x15b146838
    |-BinaryOperator 0x15b147610 <line:53:2, col:23> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x15b1475a8 <col:2, col:14> '<dependent type>' contains-errors lvalue .target
    | | `-CXXDependentScopeMemberExpr 0x15b147560 <col:2, col:7> '<dependent type>' contains-errors lvalue .kernel
    | |   `-RecoveryExpr 0x15b147538 <col:2, col:5> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x15b147500 <col:2> 'struct ipt_entry_target *' lvalue Var 0x15b141c78 't' 'struct ipt_entry_target *'
    | `-DeclRefExpr 0x15b1475f0 <col:23> 'struct ipt_target *' lvalue Var 0x15b141e78 'target' 'struct ipt_target *'
    |-CompoundAssignOperator 0x15b147af0 <line:59:2, col:11> 'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
    | |-UnaryOperator 0x15b147a88 <col:2, col:3> 'unsigned int' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x15b147a70 <col:3> 'unsigned int *' <LValueToRValue>
    | |   `-DeclRefExpr 0x15b147a50 <col:3> 'unsigned int *' lvalue ParmVar 0x15b1414d8 'size' 'unsigned int *'
    | `-ImplicitCastExpr 0x15b147ad8 <col:11> 'unsigned int' <IntegralCast>
    |   `-ImplicitCastExpr 0x15b147ac0 <col:11> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x15b147aa0 <col:11> 'int' lvalue Var 0x15b1420b8 'off' 'int'
    |-BinaryOperator 0x15b147cf8 <line:60:2, col:43> 'int' '='
    | |-DeclRefExpr 0x15b147b20 <col:2> 'int' lvalue Var 0x15b142038 'ret' 'int'
    | `-CallExpr 0x15b147c98 <col:8, col:43> 'int'
    |   |-ImplicitCastExpr 0x15b147c80 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x15b147c20 <col:8> 'int ()' Function 0x15b147b68 'compat_add_offset' 'int ()'
    |   |-ImplicitCastExpr 0x15b147cc8 <col:26> '__int128_t':'__int128' <LValueToRValue>
    |   | `-DeclRefExpr 0x15b147c40 <col:26> '__int128_t':'__int128' lvalue Var 0x15b141fa0 'entry_offset' '__int128_t':'__int128'
    |   `-ImplicitCastExpr 0x15b147ce0 <col:40> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x15b147c60 <col:40> 'int' lvalue Var 0x15b1420b8 'off' 'int'
    |-IfStmt 0x15b147db8 <line:61:2, line:62:8>
    | |-ImplicitCastExpr 0x15b147d38 <line:61:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x15b147d18 <col:6> 'int' lvalue Var 0x15b142038 'ret' 'int'
    | `-GotoStmt 0x15b147da0 <line:62:3, col:8> 'out' 0x15b147d50
    |-BinaryOperator 0x15b1487c8 <line:74:2, col:16> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x15b148780 <col:2, col:5> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x15b148748 <col:2> 'struct ipt_entry *' lvalue ParmVar 0x15b129048 'e' 'struct ipt_entry *'
    | `-IntegerLiteral 0x15b1487a8 <col:16> 'int' 0
    |-UnaryOperator 0x15b148858 <line:76:2, col:6> 'unsigned int' postfix '++'
    | `-ParenExpr 0x15b148838 <col:2, col:5> 'unsigned int' lvalue
    |   `-UnaryOperator 0x15b148820 <col:3, col:4> 'unsigned int' lvalue prefix '*' cannot overflow
    |     `-ImplicitCastExpr 0x15b148808 <col:4> 'unsigned int *' <LValueToRValue>
    |       `-DeclRefExpr 0x15b1487e8 <col:4> 'unsigned int *' lvalue ParmVar 0x15b141788 'i' 'unsigned int *'
    |-ReturnStmt 0x15b148890 <line:77:2, col:9>
    | `-IntegerLiteral 0x15b148870 <col:9> 'int' 0
    |-LabelStmt 0x15b148b00 <line:79:1, line:80:35> 'out'
    | `-CallExpr 0x15b148ad8 <col:2, col:35> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x15b148980 <col:2> 'int ()' Function 0x15b1488c8 'module_put' 'int ()'
    |   `-CXXDependentScopeMemberExpr 0x15b148a90 <col:13, col:33> '<dependent type>' contains-errors lvalue ->me
    |     `-CXXDependentScopeMemberExpr 0x15b148a48 <col:13, col:25> '<dependent type>' contains-errors lvalue .target
    |       `-CXXDependentScopeMemberExpr 0x15b148a00 <col:13, col:18> '<dependent type>' contains-errors lvalue .kernel
    |         `-RecoveryExpr 0x15b1489d8 <col:13, col:16> '<dependent type>' contains-errors lvalue
    |           `-DeclRefExpr 0x15b1489a0 <col:13> 'struct ipt_entry_target *' lvalue Var 0x15b141c78 't' 'struct ipt_entry_target *'
    |-LabelStmt 0x15b148ba0 <line:81:1, col:16> 'cleanup_matches'
    | `-NullStmt 0x15b148b98 <col:16>
    `-ReturnStmt 0x15b148bf8 <line:83:2, col:9>
      `-ImplicitCastExpr 0x15b148be0 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x15b148bc0 <col:9> 'int' lvalue Var 0x15b142038 'ret' 'int'
