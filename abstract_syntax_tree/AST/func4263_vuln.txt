TranslationUnitDecl 0x12e047008 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12e047eb8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12e0475d0 '__int128'
|-TypedefDecl 0x12e047f28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12e0475f0 'unsigned __int128'
|-TypedefDecl 0x12e117c30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12e117a00 'struct __NSConstantString_tag'
|   `-Record 0x12e047f80 '__NSConstantString_tag'
|-TypedefDecl 0x12e117c98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12e047790 '__SVInt8_t'
|-TypedefDecl 0x12e117d00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12e0477b0 '__SVInt16_t'
|-TypedefDecl 0x12e117d68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12e0477d0 '__SVInt32_t'
|-TypedefDecl 0x12e117dd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12e0477f0 '__SVInt64_t'
|-TypedefDecl 0x12e117e38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12e047810 '__SVUint8_t'
|-TypedefDecl 0x12e117ea0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12e047830 '__SVUint16_t'
|-TypedefDecl 0x12e117f08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12e047850 '__SVUint32_t'
|-TypedefDecl 0x12e117f70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12e047870 '__SVUint64_t'
|-TypedefDecl 0x12e117fd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12e047890 '__SVFloat16_t'
|-TypedefDecl 0x12e118040 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12e0478b0 '__SVFloat32_t'
|-TypedefDecl 0x12e1180a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12e0478d0 '__SVFloat64_t'
|-TypedefDecl 0x12e118110 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12e0478f0 '__SVBfloat16_t'
|-TypedefDecl 0x12e118178 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12e047910 '__clang_svint8x2_t'
|-TypedefDecl 0x12e1181e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12e047930 '__clang_svint16x2_t'
|-TypedefDecl 0x12e118248 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12e047950 '__clang_svint32x2_t'
|-TypedefDecl 0x12e1182b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12e047970 '__clang_svint64x2_t'
|-TypedefDecl 0x12e118318 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12e047990 '__clang_svuint8x2_t'
|-TypedefDecl 0x12e118380 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12e0479b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12e1183e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12e0479d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12e118450 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12e0479f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12e1184b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12e047a10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12e118520 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12e047a30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12e118588 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12e047a50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12e1185f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12e047a70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12e118658 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12e047a90 '__clang_svint8x3_t'
|-TypedefDecl 0x12e1186c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12e047ab0 '__clang_svint16x3_t'
|-TypedefDecl 0x12e118728 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12e047ad0 '__clang_svint32x3_t'
|-TypedefDecl 0x12e118790 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12e047af0 '__clang_svint64x3_t'
|-TypedefDecl 0x12e1187f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12e047b10 '__clang_svuint8x3_t'
|-TypedefDecl 0x12e118860 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12e047b30 '__clang_svuint16x3_t'
|-TypedefDecl 0x12e1188c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12e047b50 '__clang_svuint32x3_t'
|-TypedefDecl 0x12e118930 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12e047b70 '__clang_svuint64x3_t'
|-TypedefDecl 0x12e118998 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12e047b90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12e119200 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12e047bb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12e119268 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12e047bd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12e1192d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12e047bf0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12e119338 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12e047c10 '__clang_svint8x4_t'
|-TypedefDecl 0x12e1193a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12e047c30 '__clang_svint16x4_t'
|-TypedefDecl 0x12e119408 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12e047c50 '__clang_svint32x4_t'
|-TypedefDecl 0x12e119470 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12e047c70 '__clang_svint64x4_t'
|-TypedefDecl 0x12e1194d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12e047c90 '__clang_svuint8x4_t'
|-TypedefDecl 0x12e119540 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12e047cb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12e1195a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12e047cd0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12e119610 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12e047cf0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12e119678 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12e047d10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12e1196e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12e047d30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12e119748 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12e047d50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12e1197b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12e047d70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12e119818 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12e047d90 '__SVBool_t'
|-TypedefDecl 0x12e119880 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12e047db0 '__clang_svboolx2_t'
|-TypedefDecl 0x12e1198e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12e047dd0 '__clang_svboolx4_t'
|-TypedefDecl 0x12e119950 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12e047df0 '__SVCount_t'
|-TypedefDecl 0x12e1199f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12e1199b0 'char *'
|   `-BuiltinType 0x12e0470b0 'char'
|-TypedefDecl 0x12e119a68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12e1199b0 'char *'
|   `-BuiltinType 0x12e0470b0 'char'
|-FunctionDecl 0x12e119cc0 <dataset_diviso_filec/func4263_vuln.c:1:1, line:36:1> line:1:6 PrintFormatNumber 'void (void *, int, int)'
| |-ParmVarDecl 0x12e119ad8 <col:24, col:31> col:31 used ValuePtr 'void *'
| |-ParmVarDecl 0x12e119b58 <col:41, col:45> col:45 used Format 'int'
| |-ParmVarDecl 0x12e119bd8 <col:53, col:57> col:57 used ByteCount 'int'
| `-CompoundStmt 0x12e136290 <line:2:1, line:36:1>
|   |-DeclStmt 0x12e119ee0 <line:3:5, col:12>
|   | |-VarDecl 0x12e119de0 <col:5, col:9> col:9 used s 'int'
|   | `-VarDecl 0x12e119e60 <col:5, col:11> col:11 used n 'int'
|   |-ForStmt 0x12e1360f8 <line:5:5, line:34:5>
|   | |-BinaryOperator 0x12e119f38 <line:5:9, col:11> 'int' '='
|   | | |-DeclRefExpr 0x12e119ef8 <col:9> 'int' lvalue Var 0x12e119e60 'n' 'int'
|   | | `-IntegerLiteral 0x12e119f18 <col:11> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x12e119fb0 <col:13, col:15> 'int' '<'
|   | | |-ImplicitCastExpr 0x12e119f98 <col:13> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x12e119f58 <col:13> 'int' lvalue Var 0x12e119e60 'n' 'int'
|   | | `-IntegerLiteral 0x12e119f78 <col:15> 'int' 16
|   | |-UnaryOperator 0x12e119ff0 <col:18, col:19> 'int' postfix '++'
|   | | `-DeclRefExpr 0x12e119fd0 <col:18> 'int' lvalue Var 0x12e119e60 'n' 'int'
|   | `-CompoundStmt 0x12e1360c0 <col:22, line:34:5>
|   |   |-SwitchStmt 0x12e11a040 <line:6:9, line:28:9>
|   |   | |-ImplicitCastExpr 0x12e11a028 <line:6:16> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x12e11a008 <col:16> 'int' lvalue ParmVar 0x12e119b58 'Format' 'int'
|   |   | `-CompoundStmt 0x12e135c68 <col:23, line:28:9>
|   |   |   |-BinaryOperator 0x12e132fb8 <line:8:67, col:69> 'int' '='
|   |   |   | |-DeclRefExpr 0x12e132f78 <col:67> 'int' lvalue Var 0x12e119de0 's' 'int'
|   |   |   | `-IntegerLiteral 0x12e132f98 <col:69> 'int' 1
|   |   |   |-BreakStmt 0x12e132fd8 <col:73>
|   |   |   |-CallExpr 0x12e133278 <line:9:33, col:62> 'int'
|   |   |   | |-ImplicitCastExpr 0x12e133260 <col:33> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x12e132ff8 <col:33> 'int (const char *, ...)' Function 0x12e132d30 'printf' 'int (const char *, ...)'
|   |   |   | |-ImplicitCastExpr 0x12e1332c0 <col:40> 'const char *' <NoOp>
|   |   |   | | `-ImplicitCastExpr 0x12e1332a8 <col:40> 'char *' <ArrayToPointerDecay>
|   |   |   | |   `-StringLiteral 0x12e133018 <col:40> 'char[4]' lvalue "STR"
|   |   |   | `-CallExpr 0x12e1331d8 <col:46, col:61> 'int'
|   |   |   |   |-ImplicitCastExpr 0x12e1331c0 <col:46> 'int (*)()' <FunctionToPointerDecay>
|   |   |   |   | `-DeclRefExpr 0x12e133150 <col:46> 'int ()' Function 0x12e133098 'Get16u' 'int ()'
|   |   |   |   `-ImplicitCastExpr 0x12e133200 <col:53> 'void *' <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x12e133170 <col:53> 'void *' lvalue ParmVar 0x12e119ad8 'ValuePtr' 'void *'
|   |   |   |-BinaryOperator 0x12e133318 <col:65, col:67> 'int' '='
|   |   |   | |-DeclRefExpr 0x12e1332d8 <col:65> 'int' lvalue Var 0x12e119de0 's' 'int'
|   |   |   | `-IntegerLiteral 0x12e1332f8 <col:67> 'int' 2
|   |   |   |-BreakStmt 0x12e133338 <col:75>
|   |   |   |-CallExpr 0x12e133558 <line:11:33, col:62> 'int'
|   |   |   | |-ImplicitCastExpr 0x12e133540 <col:33> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x12e133370 <col:33> 'int (const char *, ...)' Function 0x12e132d30 'printf' 'int (const char *, ...)'
|   |   |   | |-ImplicitCastExpr 0x12e1335a0 <col:40> 'const char *' <NoOp>
|   |   |   | | `-ImplicitCastExpr 0x12e133588 <col:40> 'char *' <ArrayToPointerDecay>
|   |   |   | |   `-StringLiteral 0x12e133390 <col:40> 'char[4]' lvalue "STR"
|   |   |   | `-CallExpr 0x12e1334e8 <col:46, col:61> 'int'
|   |   |   |   |-ImplicitCastExpr 0x12e1334d0 <col:46> 'int (*)()' <FunctionToPointerDecay>
|   |   |   |   | `-DeclRefExpr 0x12e133490 <col:46> 'int ()' Function 0x12e1333d8 'Get32s' 'int ()'
|   |   |   |   `-ImplicitCastExpr 0x12e133510 <col:53> 'void *' <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x12e1334b0 <col:53> 'void *' lvalue ParmVar 0x12e119ad8 'ValuePtr' 'void *'
|   |   |   |-BinaryOperator 0x12e1335f8 <col:65, col:67> 'int' '='
|   |   |   | |-DeclRefExpr 0x12e1335b8 <col:65> 'int' lvalue Var 0x12e119de0 's' 'int'
|   |   |   | `-IntegerLiteral 0x12e1335d8 <col:67> 'int' 4
|   |   |   |-BreakStmt 0x12e133618 <col:75>
|   |   |   |-CallExpr 0x12e133780 <line:12:33, col:76> 'int'
|   |   |   | |-ImplicitCastExpr 0x12e133768 <col:33> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x12e133638 <col:33> 'int (const char *, ...)' Function 0x12e132d30 'printf' 'int (const char *, ...)'
|   |   |   | |-ImplicitCastExpr 0x12e1337c8 <col:40> 'const char *' <NoOp>
|   |   |   | | `-ImplicitCastExpr 0x12e1337b0 <col:40> 'char *' <ArrayToPointerDecay>
|   |   |   | |   `-StringLiteral 0x12e133658 <col:40> 'char[4]' lvalue "STR"
|   |   |   | `-ImplicitCastExpr 0x12e1337e0 <col:46, col:75> 'int' <IntegralCast>
|   |   |   |   `-CStyleCastExpr 0x12e133728 <col:46, col:75> 'short' <IntegralCast>
|   |   |   |     `-CallExpr 0x12e1336d0 <col:60, col:75> 'int'
|   |   |   |       |-ImplicitCastExpr 0x12e1336b8 <col:60> 'int (*)()' <FunctionToPointerDecay>
|   |   |   |       | `-DeclRefExpr 0x12e133678 <col:60> 'int ()' Function 0x12e133098 'Get16u' 'int ()'
|   |   |   |       `-ImplicitCastExpr 0x12e1336f8 <col:67> 'void *' <LValueToRValue>
|   |   |   |         `-DeclRefExpr 0x12e133698 <col:67> 'void *' lvalue ParmVar 0x12e119ad8 'ValuePtr' 'void *'
|   |   |   |-BinaryOperator 0x12e133838 <col:79, col:81> 'int' '='
|   |   |   | |-DeclRefExpr 0x12e1337f8 <col:79> 'int' lvalue Var 0x12e119de0 's' 'int'
|   |   |   | `-IntegerLiteral 0x12e133818 <col:81> 'int' 2
|   |   |   |-BreakStmt 0x12e133858 <col:84>
|   |   |   |-CallExpr 0x12e1352b8 <line:14:17, col:74> 'int'
|   |   |   | |-ImplicitCastExpr 0x12e1352a0 <col:17> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x12e133878 <col:17> 'int (const char *, ...)' Function 0x12e132d30 'printf' 'int (const char *, ...)'
|   |   |   | |-ImplicitCastExpr 0x12e135308 <col:24> 'const char *' <NoOp>
|   |   |   | | `-ImplicitCastExpr 0x12e1352f0 <col:24> 'char *' <ArrayToPointerDecay>
|   |   |   | |   `-StringLiteral 0x12e133898 <col:24> 'char[4]' lvalue "STR"
|   |   |   | |-CallExpr 0x12e133910 <col:30, col:45> 'int'
|   |   |   | | |-ImplicitCastExpr 0x12e1338f8 <col:30> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | | | `-DeclRefExpr 0x12e1338b8 <col:30> 'int ()' Function 0x12e1333d8 'Get32s' 'int ()'
|   |   |   | | `-ImplicitCastExpr 0x12e133938 <col:37> 'void *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x12e1338d8 <col:37> 'void *' lvalue ParmVar 0x12e119ad8 'ValuePtr' 'void *'
|   |   |   | `-CallExpr 0x12e135260 <col:48, col:73> 'int'
|   |   |   |   |-ImplicitCastExpr 0x12e135248 <col:48> 'int (*)()' <FunctionToPointerDecay>
|   |   |   |   | `-DeclRefExpr 0x12e133950 <col:48> 'int ()' Function 0x12e1333d8 'Get32s' 'int ()'
|   |   |   |   `-BinaryOperator 0x12e135228 <col:55, col:65> 'char *' '+'
|   |   |   |     |-IntegerLiteral 0x12e133970 <col:55> 'int' 4
|   |   |   |     `-CStyleCastExpr 0x12e135200 <col:57, col:65> 'char *' <BitCast>
|   |   |   |       `-ImplicitCastExpr 0x12e1339c8 <col:65> 'void *' <LValueToRValue> part_of_explicit_cast
|   |   |   |         `-DeclRefExpr 0x12e133990 <col:65> 'void *' lvalue ParmVar 0x12e119ad8 'ValuePtr' 'void *'
|   |   |   |-BinaryOperator 0x12e135360 <line:15:17, col:21> 'int' '='
|   |   |   | |-DeclRefExpr 0x12e135320 <col:17> 'int' lvalue Var 0x12e119de0 's' 'int'
|   |   |   | `-IntegerLiteral 0x12e135340 <col:21> 'int' 8
|   |   |   |-BreakStmt 0x12e135380 <line:16:17>
|   |   |   |-CallExpr 0x12e1355c0 <line:19:17, col:74> 'int'
|   |   |   | |-ImplicitCastExpr 0x12e1355a8 <col:17> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x12e1353a0 <col:17> 'int (const char *, ...)' Function 0x12e132d30 'printf' 'int (const char *, ...)'
|   |   |   | |-ImplicitCastExpr 0x12e135610 <col:24> 'const char *' <NoOp>
|   |   |   | | `-ImplicitCastExpr 0x12e1355f8 <col:24> 'char *' <ArrayToPointerDecay>
|   |   |   | |   `-StringLiteral 0x12e1353c0 <col:24> 'char[4]' lvalue "STR"
|   |   |   | |-CallExpr 0x12e135438 <col:30, col:45> 'int'
|   |   |   | | |-ImplicitCastExpr 0x12e135420 <col:30> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | | | `-DeclRefExpr 0x12e1353e0 <col:30> 'int ()' Function 0x12e1333d8 'Get32s' 'int ()'
|   |   |   | | `-ImplicitCastExpr 0x12e135460 <col:37> 'void *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x12e135400 <col:37> 'void *' lvalue ParmVar 0x12e119ad8 'ValuePtr' 'void *'
|   |   |   | `-CallExpr 0x12e135568 <col:48, col:73> 'int'
|   |   |   |   |-ImplicitCastExpr 0x12e135550 <col:48> 'int (*)()' <FunctionToPointerDecay>
|   |   |   |   | `-DeclRefExpr 0x12e135478 <col:48> 'int ()' Function 0x12e1333d8 'Get32s' 'int ()'
|   |   |   |   `-BinaryOperator 0x12e135530 <col:55, col:65> 'char *' '+'
|   |   |   |     |-IntegerLiteral 0x12e135498 <col:55> 'int' 4
|   |   |   |     `-CStyleCastExpr 0x12e135508 <col:57, col:65> 'char *' <BitCast>
|   |   |   |       `-ImplicitCastExpr 0x12e1354f0 <col:65> 'void *' <LValueToRValue> part_of_explicit_cast
|   |   |   |         `-DeclRefExpr 0x12e1354b8 <col:65> 'void *' lvalue ParmVar 0x12e119ad8 'ValuePtr' 'void *'
|   |   |   |-BinaryOperator 0x12e135668 <line:20:17, col:21> 'int' '='
|   |   |   | |-DeclRefExpr 0x12e135628 <col:17> 'int' lvalue Var 0x12e119de0 's' 'int'
|   |   |   | `-IntegerLiteral 0x12e135648 <col:21> 'int' 8
|   |   |   |-BreakStmt 0x12e135688 <line:21:17>
|   |   |   |-CallExpr 0x12e135838 <line:23:33, col:72> 'int'
|   |   |   | |-ImplicitCastExpr 0x12e135820 <col:33> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x12e1356a8 <col:33> 'int (const char *, ...)' Function 0x12e132d30 'printf' 'int (const char *, ...)'
|   |   |   | |-ImplicitCastExpr 0x12e135880 <col:40> 'const char *' <NoOp>
|   |   |   | | `-ImplicitCastExpr 0x12e135868 <col:40> 'char *' <ArrayToPointerDecay>
|   |   |   | |   `-StringLiteral 0x12e1356c8 <col:40> 'char[4]' lvalue "STR"
|   |   |   | `-CStyleCastExpr 0x12e1357e0 <col:46, col:64> 'double' <FloatingCast>
|   |   |   |   `-ImplicitCastExpr 0x12e1357c8 <col:54, col:64> 'float' <LValueToRValue> part_of_explicit_cast
|   |   |   |     `-UnaryOperator 0x12e135798 <col:54, col:64> 'float' lvalue prefix '*' cannot overflow
|   |   |   |       `-CStyleCastExpr 0x12e135770 <col:55, col:64> 'float *' <BitCast>
|   |   |   |         `-ImplicitCastExpr 0x12e135758 <col:64> 'void *' <LValueToRValue> part_of_explicit_cast
|   |   |   |           `-DeclRefExpr 0x12e1356e8 <col:64> 'void *' lvalue ParmVar 0x12e119ad8 'ValuePtr' 'void *'
|   |   |   |-BinaryOperator 0x12e1358d8 <col:75, col:77> 'int' '='
|   |   |   | |-DeclRefExpr 0x12e135898 <col:75> 'int' lvalue Var 0x12e119de0 's' 'int'
|   |   |   | `-IntegerLiteral 0x12e1358b8 <col:77> 'int' 8
|   |   |   |-BreakStmt 0x12e1358f8 <col:80>
|   |   |   |-CallExpr 0x12e135a50 <line:24:33, col:65> 'int'
|   |   |   | |-ImplicitCastExpr 0x12e135a38 <col:33> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x12e135918 <col:33> 'int (const char *, ...)' Function 0x12e132d30 'printf' 'int (const char *, ...)'
|   |   |   | |-ImplicitCastExpr 0x12e135a98 <col:40> 'const char *' <NoOp>
|   |   |   | | `-ImplicitCastExpr 0x12e135a80 <col:40> 'char *' <ArrayToPointerDecay>
|   |   |   | |   `-StringLiteral 0x12e135938 <col:40> 'char[4]' lvalue "STR"
|   |   |   | `-ImplicitCastExpr 0x12e135ab0 <col:46, col:57> 'double' <LValueToRValue>
|   |   |   |   `-UnaryOperator 0x12e135a08 <col:46, col:57> 'double' lvalue prefix '*' cannot overflow
|   |   |   |     `-CStyleCastExpr 0x12e1359e0 <col:47, col:57> 'double *' <BitCast>
|   |   |   |       `-ImplicitCastExpr 0x12e1359c8 <col:57> 'void *' <LValueToRValue> part_of_explicit_cast
|   |   |   |         `-DeclRefExpr 0x12e135958 <col:57> 'void *' lvalue ParmVar 0x12e119ad8 'ValuePtr' 'void *'
|   |   |   |-BinaryOperator 0x12e135b08 <col:75, col:77> 'int' '='
|   |   |   | |-DeclRefExpr 0x12e135ac8 <col:75> 'int' lvalue Var 0x12e119de0 's' 'int'
|   |   |   | `-IntegerLiteral 0x12e135ae8 <col:77> 'int' 8
|   |   |   |-BreakStmt 0x12e135b28 <col:80>
|   |   |   |-DefaultStmt 0x12e135c38 <line:25:13, line:26:37>
|   |   |   | `-CallExpr 0x12e135bc0 <col:17, col:37> 'int'
|   |   |   |   |-ImplicitCastExpr 0x12e135ba8 <col:17> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |   |   | `-DeclRefExpr 0x12e135b30 <col:17> 'int (const char *, ...)' Function 0x12e132d30 'printf' 'int (const char *, ...)'
|   |   |   |   |-ImplicitCastExpr 0x12e135c08 <col:24> 'const char *' <NoOp>
|   |   |   |   | `-ImplicitCastExpr 0x12e135bf0 <col:24> 'char *' <ArrayToPointerDecay>
|   |   |   |   |   `-StringLiteral 0x12e135b50 <col:24> 'char[4]' lvalue "STR"
|   |   |   |   `-ImplicitCastExpr 0x12e135c20 <col:31> 'int' <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x12e135b70 <col:31> 'int' lvalue ParmVar 0x12e119b58 'Format' 'int'
|   |   |   `-ReturnStmt 0x12e135c58 <line:27:17>
|   |   |-CompoundAssignOperator 0x12e135d98 <line:29:9, col:22> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-DeclRefExpr 0x12e135d40 <col:9> 'int' lvalue ParmVar 0x12e119bd8 'ByteCount' 'int'
|   |   | `-ImplicitCastExpr 0x12e135d80 <col:22> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x12e135d60 <col:22> 'int' lvalue Var 0x12e119de0 's' 'int'
|   |   |-IfStmt 0x12e135e48 <line:30:9, col:29>
|   |   | |-BinaryOperator 0x12e135e20 <col:13, col:26> 'int' '<='
|   |   | | |-ImplicitCastExpr 0x12e135e08 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x12e135dc8 <col:13> 'int' lvalue ParmVar 0x12e119bd8 'ByteCount' 'int'
|   |   | | `-IntegerLiteral 0x12e135de8 <col:26> 'int' 0
|   |   | `-BreakStmt 0x12e135e40 <col:29>
|   |   |-CallExpr 0x12e135ed8 <line:31:9, col:21> 'int'
|   |   | |-ImplicitCastExpr 0x12e135ec0 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x12e135e68 <col:9> 'int (const char *, ...)' Function 0x12e132d30 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x12e135f18 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x12e135f00 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x12e135e88 <col:16> 'char[4]' lvalue "STR"
|   |   `-BinaryOperator 0x12e1360a0 <line:32:9, col:49> 'void *' '='
|   |     |-DeclRefExpr 0x12e135f30 <col:9> 'void *' lvalue ParmVar 0x12e119ad8 'ValuePtr' 'void *'
|   |     `-CStyleCastExpr 0x12e136078 <col:20, col:49> 'void *' <BitCast>
|   |       `-ParenExpr 0x12e136058 <col:28, col:49> 'char *'
|   |         `-BinaryOperator 0x12e136000 <col:29, col:48> 'char *' '+'
|   |           |-CStyleCastExpr 0x12e135fa0 <col:29, col:37> 'char *' <BitCast>
|   |           | `-ImplicitCastExpr 0x12e135f88 <col:37> 'void *' <LValueToRValue> part_of_explicit_cast
|   |           |   `-DeclRefExpr 0x12e135f50 <col:37> 'void *' lvalue ParmVar 0x12e119ad8 'ValuePtr' 'void *'
|   |           `-ImplicitCastExpr 0x12e135fe8 <col:48> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x12e135fc8 <col:48> 'int' lvalue Var 0x12e119de0 's' 'int'
|   `-IfStmt 0x12e136270 <line:35:5, col:30>
|     |-BinaryOperator 0x12e136188 <col:9, col:14> 'int' '>='
|     | |-ImplicitCastExpr 0x12e136170 <col:9> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x12e136130 <col:9> 'int' lvalue Var 0x12e119e60 'n' 'int'
|     | `-IntegerLiteral 0x12e136150 <col:14> 'int' 16
|     `-CallExpr 0x12e136218 <col:18, col:30> 'int'
|       |-ImplicitCastExpr 0x12e136200 <col:18> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x12e1361a8 <col:18> 'int (const char *, ...)' Function 0x12e132d30 'printf' 'int (const char *, ...)'
|       `-ImplicitCastExpr 0x12e136258 <col:25> 'const char *' <NoOp>
|         `-ImplicitCastExpr 0x12e136240 <col:25> 'char *' <ArrayToPointerDecay>
|           `-StringLiteral 0x12e1361c8 <col:25> 'char[4]' lvalue "STR"
`-FunctionDecl 0x12e132d30 <line:8:33> col:33 implicit used printf 'int (const char *, ...)' extern
  |-ParmVarDecl 0x12e132e30 <<invalid sloc>> <invalid sloc> 'const char *'
  |-BuiltinAttr 0x12e132dd8 <<invalid sloc>> Implicit 903
  `-FormatAttr 0x12e132ea0 <col:33> Implicit printf 1 2
