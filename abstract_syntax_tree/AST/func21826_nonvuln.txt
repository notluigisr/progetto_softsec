TranslationUnitDecl 0x143055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1430564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x143055bd0 '__int128'
|-TypedefDecl 0x143056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x143055bf0 'unsigned __int128'
|-TypedefDecl 0x14380be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14380bc00 'struct __NSConstantString_tag'
|   `-Record 0x143056580 '__NSConstantString_tag'
|-TypedefDecl 0x14380be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x143055d90 '__SVInt8_t'
|-TypedefDecl 0x14380bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x143055db0 '__SVInt16_t'
|-TypedefDecl 0x14380bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x143055dd0 '__SVInt32_t'
|-TypedefDecl 0x14380bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x143055df0 '__SVInt64_t'
|-TypedefDecl 0x14380c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x143055e10 '__SVUint8_t'
|-TypedefDecl 0x14380c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x143055e30 '__SVUint16_t'
|-TypedefDecl 0x14380c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x143055e50 '__SVUint32_t'
|-TypedefDecl 0x14380c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x143055e70 '__SVUint64_t'
|-TypedefDecl 0x14380c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x143055e90 '__SVFloat16_t'
|-TypedefDecl 0x14380c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x143055eb0 '__SVFloat32_t'
|-TypedefDecl 0x14380c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x143055ed0 '__SVFloat64_t'
|-TypedefDecl 0x14380c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x143055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14380c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x143055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14380c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x143055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14380c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x143055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14380c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x143055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14380c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x143055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14380c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x143055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14380c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x143055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14380c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x143055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14380c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x143056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14380c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x143056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14380c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x143056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14380c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x143056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14380c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x143056090 '__clang_svint8x3_t'
|-TypedefDecl 0x14380c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1430560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14380c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1430560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14380c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1430560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14380c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x143056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14380ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x143056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14380cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x143056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14380cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x143056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14380cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x143056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14380d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1430561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14380d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1430561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14380d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1430561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14380d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x143056210 '__clang_svint8x4_t'
|-TypedefDecl 0x14380d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x143056230 '__clang_svint16x4_t'
|-TypedefDecl 0x14380d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x143056250 '__clang_svint32x4_t'
|-TypedefDecl 0x14380d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x143056270 '__clang_svint64x4_t'
|-TypedefDecl 0x14380d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x143056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14380d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1430562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14380d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1430562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14380d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1430562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14380d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x143056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14380d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x143056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14380d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x143056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14380d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x143056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14380da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x143056390 '__SVBool_t'
|-TypedefDecl 0x14380da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1430563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14380dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1430563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14380db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1430563f0 '__SVCount_t'
|-TypedefDecl 0x14380dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14380dbb0 'char *'
|   `-BuiltinType 0x1430556b0 'char'
|-TypedefDecl 0x14380dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14380dbb0 'char *'
|   `-BuiltinType 0x1430556b0 'char'
|-FunctionDecl 0x1438267e8 <dataset_diviso_filec/func21826_nonvuln.c:1:1, line:54:1> line:1:12 nf_tables_set_alloc_name 'int (struct nft_ctx *, struct nft_set *, const char *)' static
| |-ParmVarDecl 0x14380e248 <col:37, col:53> col:53 used ctx 'struct nft_ctx *'
| |-ParmVarDecl 0x143826628 <col:58, col:74> col:74 used set 'struct nft_set *'
| |-ParmVarDecl 0x1438266a8 <line:2:9, col:21> col:21 used name 'const char *'
| `-CompoundStmt 0x14480b910 <line:3:1, line:54:1>
|   |-DeclStmt 0x143826a10 <line:4:2, col:25>
|   | `-VarDecl 0x1438269a8 <col:2, col:24> col:24 used i 'const struct nft_set *'
|   |-DeclStmt 0x143826aa8 <line:5:2, col:15>
|   | `-VarDecl 0x143826a40 <col:2, col:14> col:14 used p 'const char *'
|   |-DeclStmt 0x143826b70 <line:6:2, col:22>
|   | `-VarDecl 0x143826b08 <col:2, col:17> col:17 used inuse 'unsigned long *'
|   |-DeclStmt 0x143826d10 <line:7:2, col:29>
|   | |-VarDecl 0x143826ba0 <col:2, col:19> col:15 used n 'unsigned int' cinit
|   | | `-ImplicitCastExpr 0x143826c28 <col:19> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x143826c08 <col:19> 'int' 0
|   | `-VarDecl 0x143826c58 <col:2, col:28> col:22 used min 'unsigned int' cinit
|   |   `-ImplicitCastExpr 0x143826ce0 <col:28> 'unsigned int' <IntegralCast>
|   |     `-IntegerLiteral 0x143826cc0 <col:28> 'int' 0
|   |-BinaryOperator 0x143827088 <line:9:2, col:22> 'const char *' '='
|   | |-DeclRefExpr 0x143826d28 <col:2> 'const char *' lvalue Var 0x143826a40 'p' 'const char *'
|   | `-ImplicitCastExpr 0x143827070 <col:6, col:22> 'const char *' <NoOp>
|   |   `-CallExpr 0x143827028 <col:6, col:22> 'char *'
|   |     |-ImplicitCastExpr 0x143827010 <col:6> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x143826f70 <col:6> 'char *(const char *, int)' Function 0x143826d90 'strchr' 'char *(const char *, int)'
|   |     |-ImplicitCastExpr 0x143827058 <col:13> 'const char *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x143826f90 <col:13> 'const char *' lvalue ParmVar 0x1438266a8 'name' 'const char *'
|   |     `-CharacterLiteral 0x143826fb0 <col:19> 'int' 37
|   `-IfStmt 0x14480b550 <line:10:2, line:38:2>
|     |-BinaryOperator 0x143827138 <line:10:6, col:11> 'int' contains-errors '!='
|     | |-DeclRefExpr 0x1438270a8 <col:6> 'const char *' lvalue Var 0x143826a40 'p' 'const char *'
|     | `-RecoveryExpr 0x143827118 <col:11> '<dependent type>' contains-errors lvalue
|     `-CompoundStmt 0x14480b510 <col:17, line:38:2>
|       |-IfStmt 0x1438273f8 <line:11:3, line:12:12>
|       | |-BinaryOperator 0x143827330 <line:11:7, col:39> 'int' '||'
|       | | |-BinaryOperator 0x143827218 <col:7, col:15> 'int' '!='
|       | | | |-ImplicitCastExpr 0x143827200 <col:7, col:10> 'int' <IntegralCast>
|       | | | | `-ImplicitCastExpr 0x1438271e8 <col:7, col:10> 'char' <LValueToRValue>
|       | | | |   `-ArraySubscriptExpr 0x1438271b0 <col:7, col:10> 'const char' lvalue
|       | | | |     |-ImplicitCastExpr 0x143827198 <col:7> 'const char *' <LValueToRValue>
|       | | | |     | `-DeclRefExpr 0x143827158 <col:7> 'const char *' lvalue Var 0x143826a40 'p' 'const char *'
|       | | | |     `-IntegerLiteral 0x143827178 <col:9> 'int' 1
|       | | | `-CharacterLiteral 0x1438271d0 <col:15> 'int' 100
|       | | `-CallExpr 0x143827300 <col:22, col:39> 'char *'
|       | |   |-ImplicitCastExpr 0x1438272e8 <col:22> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|       | |   | `-DeclRefExpr 0x143827238 <col:22> 'char *(const char *, int)' Function 0x143826d90 'strchr' 'char *(const char *, int)'
|       | |   |-BinaryOperator 0x1438272b0 <col:29, col:33> 'const char *' '+'
|       | |   | |-ImplicitCastExpr 0x143827298 <col:29> 'const char *' <LValueToRValue>
|       | |   | | `-DeclRefExpr 0x143827258 <col:29> 'const char *' lvalue Var 0x143826a40 'p' 'const char *'
|       | |   | `-IntegerLiteral 0x143827278 <col:33> 'int' 2
|       | |   `-CharacterLiteral 0x1438272d0 <col:36> 'int' 37
|       | `-ReturnStmt 0x1438273e8 <line:12:4, col:12>
|       |   `-UnaryOperator 0x1438273d0 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow
|       |     `-ImplicitCastExpr 0x1438273b8 <col:12> '<dependent type>' contains-errors <LValueToRValue>
|       |       `-RecoveryExpr 0x143827398 <col:12> '<dependent type>' contains-errors lvalue
|       |-IfStmt 0x144809b08 <line:15:3, line:16:12>
|       | |-BinaryOperator 0x144809a40 <line:15:7, col:16> 'int' contains-errors '=='
|       | | |-DeclRefExpr 0x1438275c8 <col:7> 'unsigned long *' lvalue Var 0x143826b08 'inuse' 'unsigned long *'
|       | | `-RecoveryExpr 0x144809a20 <col:16> '<dependent type>' contains-errors lvalue
|       | `-ReturnStmt 0x144809af8 <line:16:4, col:12>
|       |   `-UnaryOperator 0x144809ae0 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow
|       |     `-ImplicitCastExpr 0x144809ac8 <col:12> '<dependent type>' contains-errors <LValueToRValue>
|       |       `-RecoveryExpr 0x144809aa8 <col:12> '<dependent type>' contains-errors lvalue
|       |-LabelStmt 0x144809e00 <line:17:1, line:18:49> 'cont'
|       | `-CallExpr 0x144809d78 <col:3, col:49> '<dependent type>' contains-errors
|       |   |-DeclRefExpr 0x144809c08 <col:3> 'int ()' Function 0x144809b50 'list_for_each_entry' 'int ()'
|       |   |-DeclRefExpr 0x144809c28 <col:23> 'const struct nft_set *' lvalue Var 0x1438269a8 'i' 'const struct nft_set *'
|       |   |-UnaryOperator 0x144809cf0 <col:26, col:39> '<dependent type>' contains-errors prefix '&' cannot overflow
|       |   | `-CXXDependentScopeMemberExpr 0x144809ca8 <col:27, col:39> '<dependent type>' contains-errors lvalue ->sets
|       |   |   `-RecoveryExpr 0x144809c80 <col:27, col:32> '<dependent type>' contains-errors lvalue
|       |   |     `-DeclRefExpr 0x144809c48 <col:27> 'struct nft_ctx *' lvalue ParmVar 0x14380e248 'ctx' 'struct nft_ctx *'
|       |   `-RecoveryExpr 0x144809d58 <col:45> '<dependent type>' contains-errors lvalue
|       |-CompoundStmt 0x14480ae48 <col:51, line:29:3>
|       | |-DeclStmt 0x144809ea0 <line:19:4, col:11>
|       | | `-VarDecl 0x144809e38 <col:4, col:8> col:8 used tmp 'int'
|       | `-CallExpr 0x14480ae00 <line:28:4, col:28> 'int'
|       |   |-ImplicitCastExpr 0x14480a9e0 <col:4> 'int (*)()' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x14480a8c0 <col:4> 'int ()' Function 0x14480a808 'set_bit' 'int ()'
|       |   |-BinaryOperator 0x14480a968 <col:12, col:18> 'unsigned int' '-'
|       |   | |-ImplicitCastExpr 0x14480a950 <col:12> 'unsigned int' <IntegralCast>
|       |   | | `-ImplicitCastExpr 0x14480a920 <col:12> 'int' <LValueToRValue>
|       |   | |   `-DeclRefExpr 0x14480a8e0 <col:12> 'int' lvalue Var 0x144809e38 'tmp' 'int'
|       |   | `-ImplicitCastExpr 0x14480a938 <col:18> 'unsigned int' <LValueToRValue>
|       |   |   `-DeclRefExpr 0x14480a900 <col:18> 'unsigned int' lvalue Var 0x143826c58 'min' 'unsigned int'
|       |   `-ImplicitCastExpr 0x14480ae30 <col:23> 'unsigned long *' <LValueToRValue>
|       |     `-DeclRefExpr 0x14480a988 <col:23> 'unsigned long *' lvalue Var 0x143826b08 'inuse' 'unsigned long *'
|       |-IfStmt 0x14480b338 <line:32:3, line:36:3>
|       | |-RecoveryExpr 0x14480afc8 <line:32:7, col:28> '_Bool' contains-errors
|       | `-CompoundStmt 0x14480b320 <col:39, line:36:3>
|       |   `-GotoStmt 0x14480b308 <line:35:4, col:9> 'cont' 0x144809db0
|       `-CallExpr 0x14480b4e8 <line:37:3, col:33> 'int'
|         |-ImplicitCastExpr 0x14480b4d0 <col:3> 'int (*)()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x14480b438 <col:3> 'int ()' Function 0x14480b380 'free_page' 'int ()'
|         `-CStyleCastExpr 0x14480b4a8 <col:13, col:28> 'unsigned long' <PointerToIntegral>
|           `-ImplicitCastExpr 0x14480b490 <col:28> 'unsigned long *' <LValueToRValue> part_of_explicit_cast
|             `-DeclRefExpr 0x14480b458 <col:28> 'unsigned long *' lvalue Var 0x143826b08 'inuse' 'unsigned long *'
|-FunctionDecl 0x143826d90 <line:9:6> col:6 implicit used strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x143826e90 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x143826ef8 <<invalid sloc>> <invalid sloc> 'int'
| `-BuiltinAttr 0x143826e38 <<invalid sloc>> Implicit 893
|-FunctionDecl 0x14480a118 <line:23:9> col:9 implicit used sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x14480a218 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x14480a280 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-BuiltinAttr 0x14480a1c0 <<invalid sloc>> Implicit 913
| `-FormatAttr 0x14480a2f8 <col:9> Implicit scanf 2 3
`-FunctionDecl 0x14480b058 <line:34:4> col:4 implicit used memset 'void *(void *, int, unsigned long)' extern
  |-ParmVarDecl 0x14480b158 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x14480b1c0 <<invalid sloc>> <invalid sloc> 'int'
  |-ParmVarDecl 0x14480b228 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x14480b100 <<invalid sloc>> Implicit 900
