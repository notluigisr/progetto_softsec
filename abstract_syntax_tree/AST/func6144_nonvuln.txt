TranslationUnitDecl 0x15b855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x15b8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x15b855bd0 '__int128'
|-TypedefDecl 0x15b856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x15b855bf0 'unsigned __int128'
|-TypedefDecl 0x15b926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15b926000 'struct __NSConstantString_tag'
|   `-Record 0x15b856580 '__NSConstantString_tag'
|-TypedefDecl 0x15b926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x15b855d90 '__SVInt8_t'
|-TypedefDecl 0x15b926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x15b855db0 '__SVInt16_t'
|-TypedefDecl 0x15b926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x15b855dd0 '__SVInt32_t'
|-TypedefDecl 0x15b9263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x15b855df0 '__SVInt64_t'
|-TypedefDecl 0x15b926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x15b855e10 '__SVUint8_t'
|-TypedefDecl 0x15b9264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x15b855e30 '__SVUint16_t'
|-TypedefDecl 0x15b926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x15b855e50 '__SVUint32_t'
|-TypedefDecl 0x15b926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x15b855e70 '__SVUint64_t'
|-TypedefDecl 0x15b9265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x15b855e90 '__SVFloat16_t'
|-TypedefDecl 0x15b926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x15b855eb0 '__SVFloat32_t'
|-TypedefDecl 0x15b9266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x15b855ed0 '__SVFloat64_t'
|-TypedefDecl 0x15b926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x15b855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15b926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x15b855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15b9267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x15b855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15b926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x15b855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15b9268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x15b855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15b926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x15b855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15b926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x15b855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15b9269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x15b855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15b926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x15b855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15b926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x15b856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15b926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x15b856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15b926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x15b856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15b926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x15b856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15b926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x15b856090 '__clang_svint8x3_t'
|-TypedefDecl 0x15b926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x15b8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15b926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x15b8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15b926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x15b8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15b926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x15b856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15b926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x15b856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15b926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x15b856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15b926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x15b856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15b926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x15b856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15b927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x15b8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15b927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x15b8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15b9278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x15b8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15b927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x15b856210 '__clang_svint8x4_t'
|-TypedefDecl 0x15b9279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x15b856230 '__clang_svint16x4_t'
|-TypedefDecl 0x15b927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x15b856250 '__clang_svint32x4_t'
|-TypedefDecl 0x15b927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x15b856270 '__clang_svint64x4_t'
|-TypedefDecl 0x15b927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x15b856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15b927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x15b8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15b927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x15b8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15b927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x15b8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15b927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x15b856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15b927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x15b856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15b927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x15b856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15b927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x15b856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15b927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x15b856390 '__SVBool_t'
|-TypedefDecl 0x15b927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x15b8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15b927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x15b8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15b927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x15b8563f0 '__SVCount_t'
|-TypedefDecl 0x15b927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15b927fb0 'char *'
|   `-BuiltinType 0x15b8556b0 'char'
|-TypedefDecl 0x15b928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15b927fb0 'char *'
|   `-BuiltinType 0x15b8556b0 'char'
|-FunctionDecl 0x15b928320 <dataset_diviso_filec/func6144_nonvuln.c:1:1, line:42:1> line:1:13 get_token 'void (char **, char **, int *)' static
| |-ParmVarDecl 0x15b928108 <col:24, col:31> col:31 used ppsz_path 'char **'
| |-ParmVarDecl 0x15b928188 <col:42, col:49> col:49 used ppsz_token 'char **'
| |-ParmVarDecl 0x15b928238 <col:61, col:66> col:66 used pi_number 'int *'
| `-CompoundStmt 0x15d008ab0 <line:2:1, line:42:1>
|   |-UnaryExprOrTypeTraitExpr 0x15b928498 <line:3:5, col:12> 'unsigned long' contains-errors sizeof
|   | `-RecoveryExpr 0x15b928478 <col:12> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x15b928780 <line:4:5, line:9:5>
|   | |-UnaryOperator 0x15b928578 <line:4:9, col:22> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x15b928560 <col:10, col:22> 'char' <LValueToRValue>
|   | |   `-UnaryOperator 0x15b928548 <col:10, col:22> 'char' lvalue prefix '*' cannot overflow
|   | |     `-ImplicitCastExpr 0x15b928530 <col:11, col:22> 'char *' <LValueToRValue>
|   | |       `-ArraySubscriptExpr 0x15b928510 <col:11, col:22> 'char *' lvalue
|   | |         |-ImplicitCastExpr 0x15b9284f8 <col:11> 'char **' <LValueToRValue>
|   | |         | `-DeclRefExpr 0x15b9284b8 <col:11> 'char **' lvalue ParmVar 0x15b928108 'ppsz_path' 'char **'
|   | |         `-IntegerLiteral 0x15b9284d8 <col:21> 'int' 0
|   | `-CompoundStmt 0x15b928758 <line:5:5, line:9:5>
|   |   |-BinaryOperator 0x15b928698 <line:6:9, col:23> 'char *' contains-errors '='
|   |   | |-UnaryOperator 0x15b928660 <col:9, col:10> 'char *' lvalue prefix '*' cannot overflow
|   |   | | `-ImplicitCastExpr 0x15b928648 <col:10> 'char **' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x15b928590 <col:10> 'char **' lvalue ParmVar 0x15b928188 'ppsz_token' 'char **'
|   |   | `-RecoveryExpr 0x15b928678 <col:23> '<dependent type>' contains-errors lvalue
|   |   |-BinaryOperator 0x15b928728 <line:7:9, col:22> 'int' '='
|   |   | |-UnaryOperator 0x15b9286f0 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
|   |   | | `-ImplicitCastExpr 0x15b9286d8 <col:10> 'int *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x15b9286b8 <col:10> 'int *' lvalue ParmVar 0x15b928238 'pi_number' 'int *'
|   |   | `-IntegerLiteral 0x15b928708 <col:22> 'int' 0
|   |   `-ReturnStmt 0x15b928748 <line:8:9>
|   |-IfStmt 0x15b942278 <line:11:5, line:14:5>
|   | |-BinaryOperator 0x15b942228 <line:11:9, col:34> 'int' contains-errors '&&'
|   | | |-UnaryOperator 0x15b942160 <col:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | | `-ImplicitCastExpr 0x15b942148 <col:10> '<dependent type>' contains-errors <LValueToRValue>
|   | | |   `-RecoveryExpr 0x15b942128 <col:10> '<dependent type>' contains-errors lvalue
|   | | `-BinaryOperator 0x15b942208 <col:19, col:34> 'int' '=='
|   | |   |-ImplicitCastExpr 0x15b9421f0 <col:19, col:21> 'int' <IntegralCast>
|   | |   | `-ImplicitCastExpr 0x15b9421d8 <col:19, col:21> 'char' <LValueToRValue>
|   | |   |   `-UnaryOperator 0x15b9421c0 <col:19, col:21> 'char' lvalue prefix '*' cannot overflow
|   | |   |     `-ImplicitCastExpr 0x15b9421a8 <col:20, col:21> 'char *' <LValueToRValue>
|   | |   |       `-UnaryOperator 0x15b942190 <col:20, col:21> 'char *' lvalue prefix '*' cannot overflow
|   | |   |         `-ImplicitCastExpr 0x15b942178 <col:21> 'char **' <LValueToRValue>
|   | |   |           `-DeclRefExpr 0x15b942020 <col:21> 'char **' lvalue ParmVar 0x15b928108 'ppsz_path' 'char **'
|   | |   `-CharacterLiteral 0x15b9420a0 <col:34> 'int' 47
|   | `-CompoundStmt 0x15b942268 <line:12:5, line:14:5>
|   |-BinaryOperator 0x15b942758 <line:15:5, col:46> 'char *' contains-errors '='
|   | |-UnaryOperator 0x15b942690 <col:5, col:6> 'char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x15b942678 <col:6> 'char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x15b942298 <col:6> 'char **' lvalue ParmVar 0x15b928188 'ppsz_token' 'char **'
|   | `-CallExpr 0x15b942728 <col:19, col:46> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x15b942510 <col:19> 'char *(const char *, unsigned long)' Function 0x15b942330 'strndup' 'char *(const char *, unsigned long)'
|   |   |-UnaryOperator 0x15b9426c0 <col:28, col:29> 'char *' lvalue prefix '*' cannot overflow
|   |   | `-ImplicitCastExpr 0x15b9426a8 <col:29> 'char **' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x15b942530 <col:29> 'char **' lvalue ParmVar 0x15b928108 'ppsz_path' 'char **'
|   |   `-RecoveryExpr 0x15b9426d8 <col:40> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x15c008b88 <line:16:5, line:17:15>
|   | |-CallExpr 0x15c0089a8 <line:16:9, col:30> 'int'
|   | | |-ImplicitCastExpr 0x15c008990 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | | `-DeclRefExpr 0x15c0088b8 <col:9> 'int ()' Function 0x15c008800 'unlikely' 'int ()'
|   | | `-UnaryOperator 0x15c008940 <col:18, col:20> 'int' prefix '!' cannot overflow
|   | |   `-ImplicitCastExpr 0x15c008928 <col:19, col:20> 'char *' <LValueToRValue>
|   | |     `-UnaryOperator 0x15c008910 <col:19, col:20> 'char *' lvalue prefix '*' cannot overflow
|   | |       `-ImplicitCastExpr 0x15c0088f8 <col:20> 'char **' <LValueToRValue>
|   | |         `-DeclRefExpr 0x15c0088d8 <col:20> 'char **' lvalue ParmVar 0x15b928188 'ppsz_token' 'char **'
|   | `-CallExpr 0x15c008b68 <line:17:9, col:15> 'void'
|   |   `-ImplicitCastExpr 0x15c008b50 <col:9> 'void (*)(void) __attribute__((noreturn))' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x15c008b00 <col:9> 'void (void) __attribute__((noreturn))' Function 0x15c008a00 'abort' 'void (void) __attribute__((noreturn))'
|   |-CompoundAssignOperator 0x15c008cc0 <line:19:5, col:19> 'char *' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   | |-UnaryOperator 0x15c008c88 <col:5, col:6> 'char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x15c008c70 <col:6> 'char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x15c008ba8 <col:6> 'char **' lvalue ParmVar 0x15b928108 'ppsz_path' 'char **'
|   | `-RecoveryExpr 0x15c008ca0 <col:19> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x15d0088d8 <line:21:5, line:37:5> has_else
|   | |-BinaryOperator 0x15c008db8 <line:21:9, col:24> 'int' '=='
|   | | |-ImplicitCastExpr 0x15c008da0 <col:9, col:11> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x15c008d88 <col:9, col:11> 'char' <LValueToRValue>
|   | | |   `-UnaryOperator 0x15c008d58 <col:9, col:11> 'char' lvalue prefix '*' cannot overflow
|   | | |     `-ImplicitCastExpr 0x15c008d40 <col:10, col:11> 'char *' <LValueToRValue>
|   | | |       `-UnaryOperator 0x15c008d28 <col:10, col:11> 'char *' lvalue prefix '*' cannot overflow
|   | | |         `-ImplicitCastExpr 0x15c008d10 <col:11> 'char **' <LValueToRValue>
|   | | |           `-DeclRefExpr 0x15c008cf0 <col:11> 'char **' lvalue ParmVar 0x15b928108 'ppsz_path' 'char **'
|   | | `-CharacterLiteral 0x15c008d70 <col:24> 'int' 91
|   | |-CompoundStmt 0x15d008800 <line:22:5, line:33:5>
|   | | |-UnaryOperator 0x15c008e48 <line:23:9, col:21> 'char *' postfix '++'
|   | | | `-ParenExpr 0x15c008e28 <col:9, col:20> 'char *' lvalue
|   | | |   `-UnaryOperator 0x15c008e10 <col:10, col:11> 'char *' lvalue prefix '*' cannot overflow
|   | | |     `-ImplicitCastExpr 0x15c008df8 <col:11> 'char **' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x15c008dd8 <col:11> 'char **' lvalue ParmVar 0x15b928108 'ppsz_path' 'char **'
|   | | |-BinaryOperator 0x15c0093c0 <line:24:9, col:51> 'int' contains-errors '='
|   | | | |-UnaryOperator 0x15c0092f0 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
|   | | | | `-ImplicitCastExpr 0x15c0092d8 <col:10> 'int *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x15c008e60 <col:10> 'int *' lvalue ParmVar 0x15b928238 'pi_number' 'int *'
|   | | | `-CallExpr 0x15c009388 <col:22, col:51> '<dependent type>' contains-errors
|   | | |   |-DeclRefExpr 0x15c009148 <col:22> 'long (const char *, char **, int)' Function 0x15c008ef8 'strtol' 'long (const char *, char **, int)'
|   | | |   |-UnaryOperator 0x15c009320 <col:30, col:31> 'char *' lvalue prefix '*' cannot overflow
|   | | |   | `-ImplicitCastExpr 0x15c009308 <col:31> 'char **' <LValueToRValue>
|   | | |   |   `-DeclRefExpr 0x15c009168 <col:31> 'char **' lvalue ParmVar 0x15b928108 'ppsz_path' 'char **'
|   | | |   |-RecoveryExpr 0x15c009338 <col:42> '<dependent type>' contains-errors lvalue
|   | | |   `-IntegerLiteral 0x15c0091d0 <col:48> 'int' 10
|   | | |-WhileStmt 0x15c009638 <line:25:9, line:28:9>
|   | | | |-BinaryOperator 0x15c009578 <line:25:16, col:46> 'int' '&&'
|   | | | | |-ImplicitCastExpr 0x15c009560 <col:16, col:18> 'int' <IntegralCast>
|   | | | | | `-ImplicitCastExpr 0x15c009548 <col:16, col:18> 'char' <LValueToRValue>
|   | | | | |   `-UnaryOperator 0x15c009448 <col:16, col:18> 'char' lvalue prefix '*' cannot overflow
|   | | | | |     `-ImplicitCastExpr 0x15c009430 <col:17, col:18> 'char *' <LValueToRValue>
|   | | | | |       `-UnaryOperator 0x15c009418 <col:17, col:18> 'char *' lvalue prefix '*' cannot overflow
|   | | | | |         `-ImplicitCastExpr 0x15c009400 <col:18> 'char **' <LValueToRValue>
|   | | | | |           `-DeclRefExpr 0x15c0093e0 <col:18> 'char **' lvalue ParmVar 0x15b928108 'ppsz_path' 'char **'
|   | | | | `-BinaryOperator 0x15c009528 <col:31, col:46> 'int' '!='
|   | | | |   |-ImplicitCastExpr 0x15c009510 <col:31, col:33> 'int' <IntegralCast>
|   | | | |   | `-ImplicitCastExpr 0x15c0094f8 <col:31, col:33> 'char' <LValueToRValue>
|   | | | |   |   `-UnaryOperator 0x15c0094c8 <col:31, col:33> 'char' lvalue prefix '*' cannot overflow
|   | | | |   |     `-ImplicitCastExpr 0x15c0094b0 <col:32, col:33> 'char *' <LValueToRValue>
|   | | | |   |       `-UnaryOperator 0x15c009498 <col:32, col:33> 'char *' lvalue prefix '*' cannot overflow
|   | | | |   |         `-ImplicitCastExpr 0x15c009480 <col:33> 'char **' <LValueToRValue>
|   | | | |   |           `-DeclRefExpr 0x15c009460 <col:33> 'char **' lvalue ParmVar 0x15b928108 'ppsz_path' 'char **'
|   | | | |   `-CharacterLiteral 0x15c0094e0 <col:46> 'int' 93
|   | | | `-CompoundStmt 0x15c009620 <line:26:9, line:28:9>
|   | | |   `-UnaryOperator 0x15c009608 <line:27:13, col:25> 'char *' postfix '++'
|   | | |     `-ParenExpr 0x15c0095e8 <col:13, col:24> 'char *' lvalue
|   | | |       `-UnaryOperator 0x15c0095d0 <col:14, col:15> 'char *' lvalue prefix '*' cannot overflow
|   | | |         `-ImplicitCastExpr 0x15c0095b8 <col:15> 'char **' <LValueToRValue>
|   | | |           `-DeclRefExpr 0x15c009598 <col:15> 'char **' lvalue ParmVar 0x15b928108 'ppsz_path' 'char **'
|   | | `-IfStmt 0x15c0097e0 <line:29:9, line:32:9>
|   | |   |-BinaryOperator 0x15c009720 <line:29:13, col:28> 'int' '=='
|   | |   | |-ImplicitCastExpr 0x15c009708 <col:13, col:15> 'int' <IntegralCast>
|   | |   | | `-ImplicitCastExpr 0x15c0096f0 <col:13, col:15> 'char' <LValueToRValue>
|   | |   | |   `-UnaryOperator 0x15c0096c0 <col:13, col:15> 'char' lvalue prefix '*' cannot overflow
|   | |   | |     `-ImplicitCastExpr 0x15c0096a8 <col:14, col:15> 'char *' <LValueToRValue>
|   | |   | |       `-UnaryOperator 0x15c009690 <col:14, col:15> 'char *' lvalue prefix '*' cannot overflow
|   | |   | |         `-ImplicitCastExpr 0x15c009678 <col:15> 'char **' <LValueToRValue>
|   | |   | |           `-DeclRefExpr 0x15c009658 <col:15> 'char **' lvalue ParmVar 0x15b928108 'ppsz_path' 'char **'
|   | |   | `-CharacterLiteral 0x15c0096d8 <col:28> 'int' 93
|   | |   `-CompoundStmt 0x15c0097c8 <line:30:9, line:32:9>
|   | |     `-UnaryOperator 0x15c0097b0 <line:31:13, col:25> 'char *' postfix '++'
|   | |       `-ParenExpr 0x15c009790 <col:13, col:24> 'char *' lvalue
|   | |         `-UnaryOperator 0x15c009778 <col:14, col:15> 'char *' lvalue prefix '*' cannot overflow
|   | |           `-ImplicitCastExpr 0x15c009760 <col:15> 'char **' <LValueToRValue>
|   | |             `-DeclRefExpr 0x15c009740 <col:15> 'char **' lvalue ParmVar 0x15b928108 'ppsz_path' 'char **'
|   | `-CompoundStmt 0x15d0088c0 <line:35:5, line:37:5>
|   |   `-BinaryOperator 0x15d0088a0 <line:36:9, col:22> 'int' '='
|   |     |-UnaryOperator 0x15d008868 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
|   |     | `-ImplicitCastExpr 0x15d008850 <col:10> 'int *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x15d008830 <col:10> 'int *' lvalue ParmVar 0x15b928238 'pi_number' 'int *'
|   |     `-IntegerLiteral 0x15d008880 <col:22> 'int' 0
|   `-WhileStmt 0x15d008a90 <line:38:5, line:41:5>
|     |-BinaryOperator 0x15d0089d0 <line:38:12, col:27> 'int' '=='
|     | |-ImplicitCastExpr 0x15d0089b8 <col:12, col:14> 'int' <IntegralCast>
|     | | `-ImplicitCastExpr 0x15d0089a0 <col:12, col:14> 'char' <LValueToRValue>
|     | |   `-UnaryOperator 0x15d008970 <col:12, col:14> 'char' lvalue prefix '*' cannot overflow
|     | |     `-ImplicitCastExpr 0x15d008958 <col:13, col:14> 'char *' <LValueToRValue>
|     | |       `-UnaryOperator 0x15d008940 <col:13, col:14> 'char *' lvalue prefix '*' cannot overflow
|     | |         `-ImplicitCastExpr 0x15d008928 <col:14> 'char **' <LValueToRValue>
|     | |           `-DeclRefExpr 0x15d008908 <col:14> 'char **' lvalue ParmVar 0x15b928108 'ppsz_path' 'char **'
|     | `-CharacterLiteral 0x15d008988 <col:27> 'int' 47
|     `-CompoundStmt 0x15d008a78 <line:39:5, line:41:5>
|       `-UnaryOperator 0x15d008a60 <line:40:9, col:21> 'char *' postfix '++'
|         `-ParenExpr 0x15d008a40 <col:9, col:20> 'char *' lvalue
|           `-UnaryOperator 0x15d008a28 <col:10, col:11> 'char *' lvalue prefix '*' cannot overflow
|             `-ImplicitCastExpr 0x15d008a10 <col:11> 'char **' <LValueToRValue>
|               `-DeclRefExpr 0x15d0089f0 <col:11> 'char **' lvalue ParmVar 0x15b928108 'ppsz_path' 'char **'
|-FunctionDecl 0x15b941c20 <line:10:13> col:13 implicit used strcspn 'unsigned long (const char *, const char *)' extern
| |-ParmVarDecl 0x15b941d20 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x15b941d88 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x15b941cc8 <<invalid sloc>> Implicit 894
|-FunctionDecl 0x15b942330 <line:15:19> col:19 implicit used strndup 'char *(const char *, unsigned long)' extern
| |-ParmVarDecl 0x15b942430 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x15b942498 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x15b9423d8 <<invalid sloc>> Implicit 951
|-FunctionDecl 0x15c008a00 <line:17:9> col:9 implicit used abort 'void (void) __attribute__((noreturn))' extern
| `-BuiltinAttr 0x15c008aa8 <<invalid sloc>> Implicit 867
`-FunctionDecl 0x15c008ef8 <line:24:22> col:22 implicit used strtol 'long (const char *, char **, int)' extern
  |-ParmVarDecl 0x15c008ff8 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x15c009060 <<invalid sloc>> <invalid sloc> 'char **'
  |-ParmVarDecl 0x15c0090c8 <<invalid sloc>> <invalid sloc> 'int'
  `-BuiltinAttr 0x15c008fa0 <<invalid sloc>> Implicit 877
