TranslationUnitDecl 0x14d055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14d0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14d055bd0 '__int128'
|-TypedefDecl 0x14d056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14d055bf0 'unsigned __int128'
|-TypedefDecl 0x14d126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14d126000 'struct __NSConstantString_tag'
|   `-Record 0x14d056580 '__NSConstantString_tag'
|-TypedefDecl 0x14d126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14d055d90 '__SVInt8_t'
|-TypedefDecl 0x14d126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14d055db0 '__SVInt16_t'
|-TypedefDecl 0x14d126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14d055dd0 '__SVInt32_t'
|-TypedefDecl 0x14d1263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14d055df0 '__SVInt64_t'
|-TypedefDecl 0x14d126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14d055e10 '__SVUint8_t'
|-TypedefDecl 0x14d1264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14d055e30 '__SVUint16_t'
|-TypedefDecl 0x14d126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14d055e50 '__SVUint32_t'
|-TypedefDecl 0x14d126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14d055e70 '__SVUint64_t'
|-TypedefDecl 0x14d1265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14d055e90 '__SVFloat16_t'
|-TypedefDecl 0x14d126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14d055eb0 '__SVFloat32_t'
|-TypedefDecl 0x14d1266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14d055ed0 '__SVFloat64_t'
|-TypedefDecl 0x14d126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14d055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14d126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14d055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14d1267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14d055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14d126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14d055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14d1268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14d055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14d126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14d055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14d126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14d055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14d1269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14d055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14d126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14d055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14d126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14d056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14d126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14d056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14d126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14d056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14d126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14d056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14d126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14d056090 '__clang_svint8x3_t'
|-TypedefDecl 0x14d126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14d0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14d126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14d0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14d126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14d0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14d126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14d056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14d126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14d056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14d126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14d056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14d126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14d056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14d126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14d056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14d127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14d0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14d127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14d0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14d1278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14d0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14d127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14d056210 '__clang_svint8x4_t'
|-TypedefDecl 0x14d1279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14d056230 '__clang_svint16x4_t'
|-TypedefDecl 0x14d127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14d056250 '__clang_svint32x4_t'
|-TypedefDecl 0x14d127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14d056270 '__clang_svint64x4_t'
|-TypedefDecl 0x14d127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14d056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14d127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14d0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14d127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14d0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14d127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14d0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14d127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14d056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14d127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14d056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14d127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14d056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14d127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14d056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14d127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14d056390 '__SVBool_t'
|-TypedefDecl 0x14d127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14d0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14d127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14d0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14d127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14d0563f0 '__SVCount_t'
|-TypedefDecl 0x14d127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14d127fb0 'char *'
|   `-BuiltinType 0x14d0556b0 'char'
|-TypedefDecl 0x14d128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14d127fb0 'char *'
|   `-BuiltinType 0x14d0556b0 'char'
`-FunctionDecl 0x14d144de8 <dataset_diviso_filec/func19843_vuln.c:1:1, line:67:1> line:1:5 orangefs_set_acl 'int (struct inode *, struct posix_acl *, int)'
  |-ParmVarDecl 0x14d128648 <col:22, col:36> col:36 used inode 'struct inode *'
  |-ParmVarDecl 0x14d144c28 <col:43, col:61> col:61 used acl 'struct posix_acl *'
  |-ParmVarDecl 0x14d144ca8 <col:66, col:70> col:70 used type 'int'
  `-CompoundStmt 0x14d149088 <line:2:1, line:67:1>
    |-DeclStmt 0x14d1452e8 <line:3:2, col:61>
    | |-RecordDecl 0x14d144ef0 <col:2, col:9> col:9 struct orangefs_inode_s
    | `-VarDecl 0x14d145058 <col:2, col:60> col:27 used orangefs_inode 'struct orangefs_inode_s *' cinit
    |   `-ImplicitCastExpr 0x14d1452b8 <col:44, col:60> 'struct orangefs_inode_s *' <IntegralToPointer>
    |     `-CallExpr 0x14d145278 <col:44, col:60> 'int'
    |       |-ImplicitCastExpr 0x14d145260 <col:44> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x14d1451f0 <col:44> 'int ()' Function 0x14d145138 'ORANGEFS_I' 'int ()'
    |       `-ImplicitCastExpr 0x14d1452a0 <col:55> 'struct inode *' <LValueToRValue>
    |         `-DeclRefExpr 0x14d145210 <col:55> 'struct inode *' lvalue ParmVar 0x14d128648 'inode' 'struct inode *'
    |-DeclStmt 0x14d1453a0 <line:4:2, col:15>
    | `-VarDecl 0x14d145318 <col:2, col:14> col:6 used error 'int' cinit
    |   `-IntegerLiteral 0x14d145380 <col:14> 'int' 0
    |-DeclStmt 0x14d145470 <line:5:2, col:20>
    | `-VarDecl 0x14d1453d0 <col:2, col:16> col:8 used value 'void *' cinit
    |   `-RecoveryExpr 0x14d145450 <col:16> '<dependent type>' contains-errors lvalue
    |-RecoveryExpr 0x14d145568 <line:6:2, col:16> '<dependent type>' contains-errors lvalue
    | |-UnaryExprOrTypeTraitExpr 0x14d145548 <col:2, col:9> 'unsigned long' contains-errors sizeof
    | | `-RecoveryExpr 0x14d145528 <col:9> '<dependent type>' contains-errors lvalue
    | `-IntegerLiteral 0x14d1454c0 <col:16> 'int' 0
    |-DeclStmt 0x14d145650 <line:7:2, col:25>
    | `-VarDecl 0x14d1455b0 <col:2, col:21> col:14 used name 'const char *' cinit
    |   `-RecoveryExpr 0x14d145630 <col:21> '<dependent type>' contains-errors lvalue
    |-SwitchStmt 0x14d1456a0 <line:9:2, line:37:2>
    | |-ImplicitCastExpr 0x14d145688 <line:9:10> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x14d145668 <col:10> 'int' lvalue ParmVar 0x14d144ca8 'type' 'int'
    | `-CompoundStmt 0x14d148038 <col:16, line:37:2>
    |   |-BinaryOperator 0x14d145758 <line:11:3, col:10> 'const char *' contains-errors '='
    |   | |-DeclRefExpr 0x14d1456e0 <col:3> 'const char *' contains-errors lvalue Var 0x14d1455b0 'name' 'const char *'
    |   | `-RecoveryExpr 0x14d145738 <col:10> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x14d147e90 <line:12:3, line:29:3>
    |   | |-ImplicitCastExpr 0x14d145798 <line:12:7> 'struct posix_acl *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x14d145778 <col:7> 'struct posix_acl *' lvalue ParmVar 0x14d144c28 'acl' 'struct posix_acl *'
    |   | `-CompoundStmt 0x14d147e50 <col:12, line:29:3>
    |   |   |-BinaryOperator 0x14d145a68 <line:15:4, col:43> 'int' '='
    |   |   | |-DeclRefExpr 0x14d1457b0 <col:4> 'int' lvalue Var 0x14d145318 'error' 'int'
    |   |   | `-CallExpr 0x14d145a20 <col:12, col:43> 'int'
    |   |   |   |-ImplicitCastExpr 0x14d145a08 <col:12> 'int (*)()' <FunctionToPointerDecay>
    |   |   |   | `-DeclRefExpr 0x14d1458b0 <col:12> 'int ()' Function 0x14d1457f8 'posix_acl_equiv_mode' 'int ()'
    |   |   |   |-ImplicitCastExpr 0x14d145a50 <col:33> 'struct posix_acl *' <LValueToRValue>
    |   |   |   | `-DeclRefExpr 0x14d1458d0 <col:33> 'struct posix_acl *' lvalue ParmVar 0x14d144c28 'acl' 'struct posix_acl *'
    |   |   |   `-UnaryOperator 0x14d1459f0 <col:38, col:39> 'struct inode **' prefix '&' cannot overflow
    |   |   |     `-DeclRefExpr 0x14d145970 <col:39> 'struct inode *' lvalue ParmVar 0x14d128648 'inode' 'struct inode *'
    |   |   |-IfStmt 0x14d147840 <line:16:4, line:21:4>
    |   |   | |-BinaryOperator 0x14d145ae0 <line:16:8, col:16> 'int' '<'
    |   |   | | |-ImplicitCastExpr 0x14d145ac8 <col:8> 'int' <LValueToRValue>
    |   |   | | | `-DeclRefExpr 0x14d145a88 <col:8> 'int' lvalue Var 0x14d145318 'error' 'int'
    |   |   | | `-IntegerLiteral 0x14d145aa8 <col:16> 'int' 0
    |   |   | `-CompoundStmt 0x14d147820 <col:19, line:21:4>
    |   |   |   |-CallExpr 0x14d147758 <line:17:5, line:19:14> 'int'
    |   |   |   | |-ImplicitCastExpr 0x14d147740 <line:17:5> 'int (*)()' <FunctionToPointerDecay>
    |   |   |   | | `-DeclRefExpr 0x14d145be0 <col:5> 'int ()' Function 0x14d145b28 'gossip_err' 'int ()'
    |   |   |   | |-ImplicitCastExpr 0x14d147790 <col:16> 'char *' <ArrayToPointerDecay>
    |   |   |   | | `-StringLiteral 0x14d147640 <col:16> 'char[4]' lvalue "STR"
    |   |   |   | |-ImplicitCastExpr 0x14d1477a8 <line:18:9> 'const char *' <ArrayToPointerDecay>
    |   |   |   | | `-PredefinedExpr 0x14d147708 <col:9> 'const char[17]' lvalue __func__
    |   |   |   | |   `-StringLiteral 0x14d1476e0 <col:9> 'const char[17]' lvalue "orangefs_set_acl"
    |   |   |   | `-ImplicitCastExpr 0x14d1477c0 <line:19:9> 'int' <LValueToRValue>
    |   |   |   |   `-DeclRefExpr 0x14d147720 <col:9> 'int' lvalue Var 0x14d145318 'error' 'int'
    |   |   |   `-ReturnStmt 0x14d147810 <line:20:5, col:12>
    |   |   |     `-ImplicitCastExpr 0x14d1477f8 <col:12> 'int' <LValueToRValue>
    |   |   |       `-DeclRefExpr 0x14d1477d8 <col:12> 'int' lvalue Var 0x14d145318 'error' 'int'
    |   |   |-IfStmt 0x14d147ab0 <line:23:4, line:24:31>
    |   |   | |-BinaryOperator 0x14d147918 <line:23:8, col:25> 'int' contains-errors '!='
    |   |   | | |-RecoveryExpr 0x14d147898 <col:8, col:15> '<dependent type>' contains-errors lvalue
    |   |   | | | `-DeclRefExpr 0x14d147860 <col:8> 'struct inode *' lvalue ParmVar 0x14d128648 'inode' 'struct inode *'
    |   |   | | `-DeclRefExpr 0x14d1478f8 <col:25> 'struct inode *' lvalue ParmVar 0x14d128648 'inode' 'struct inode *'
    |   |   | `-CallExpr 0x14d147a70 <line:24:5, col:31> 'int'
    |   |   |   |-ImplicitCastExpr 0x14d147a58 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   |   |   | `-DeclRefExpr 0x14d147a18 <col:5> 'int ()' Function 0x14d147960 'SetModeFlag' 'int ()'
    |   |   |   `-ImplicitCastExpr 0x14d147a98 <col:17> 'struct orangefs_inode_s *' <LValueToRValue>
    |   |   |     `-DeclRefExpr 0x14d147a38 <col:17> 'struct orangefs_inode_s *' lvalue Var 0x14d145058 'orangefs_inode' 'struct orangefs_inode_s *'
    |   |   |-BinaryOperator 0x14d147b88 <line:25:4, col:20> '<dependent type>' contains-errors '='
    |   |   | |-RecoveryExpr 0x14d147b08 <col:4, col:11> '<dependent type>' contains-errors lvalue
    |   |   | | `-DeclRefExpr 0x14d147ad0 <col:4> 'struct inode *' lvalue ParmVar 0x14d128648 'inode' 'struct inode *'
    |   |   | `-DeclRefExpr 0x14d147b68 <col:20> 'struct inode *' lvalue ParmVar 0x14d128648 'inode' 'struct inode *'
    |   |   |-CallExpr 0x14d147ce0 <line:26:4, col:31> 'int'
    |   |   | |-ImplicitCastExpr 0x14d147cc8 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |   |   | | `-DeclRefExpr 0x14d147c88 <col:4> 'int ()' Function 0x14d147bd0 'mark_inode_dirty_sync' 'int ()'
    |   |   | `-ImplicitCastExpr 0x14d147d08 <col:26> 'struct inode *' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x14d147ca8 <col:26> 'struct inode *' lvalue ParmVar 0x14d128648 'inode' 'struct inode *'
    |   |   `-IfStmt 0x14d147e30 <line:27:4, line:28:11>
    |   |     |-BinaryOperator 0x14d147d78 <line:27:8, col:17> 'int' '=='
    |   |     | |-ImplicitCastExpr 0x14d147d60 <col:8> 'int' <LValueToRValue>
    |   |     | | `-DeclRefExpr 0x14d147d20 <col:8> 'int' lvalue Var 0x14d145318 'error' 'int'
    |   |     | `-IntegerLiteral 0x14d147d40 <col:17> 'int' 0
    |   |     `-BinaryOperator 0x14d147e10 <line:28:5, col:11> 'struct posix_acl *' contains-errors '='
    |   |       |-DeclRefExpr 0x14d147d98 <col:5> 'struct posix_acl *' lvalue ParmVar 0x14d144c28 'acl' 'struct posix_acl *'
    |   |       `-RecoveryExpr 0x14d147df0 <col:11> '<dependent type>' contains-errors lvalue
    |   |-BreakStmt 0x14d147eb0 <line:30:3>
    |   |-BreakStmt 0x14d147ed8 <line:33:3>
    |   `-DefaultStmt 0x14d148018 <line:34:2, line:35:35>
    |     `-CallExpr 0x14d147f98 <col:3, col:35> 'int'
    |       |-ImplicitCastExpr 0x14d147f80 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x14d147ee0 <col:3> 'int ()' Function 0x14d145b28 'gossip_err' 'int ()'
    |       |-ImplicitCastExpr 0x14d147fd0 <col:14> 'char *' <ArrayToPointerDecay>
    |       | `-StringLiteral 0x14d147f00 <col:14> 'char[4]' lvalue "STR"
    |       |-ImplicitCastExpr 0x14d147fe8 <col:21> 'const char *' <ArrayToPointerDecay>
    |       | `-PredefinedExpr 0x14d147f48 <col:21> 'const char[17]' lvalue __func__
    |       |   `-StringLiteral 0x14d147f20 <col:21> 'const char[17]' lvalue "orangefs_set_acl"
    |       `-ImplicitCastExpr 0x14d148000 <col:31> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x14d147f60 <col:31> 'int' lvalue ParmVar 0x14d144ca8 'type' 'int'
    |-IfStmt 0x14d1489a0 <line:45:2, line:54:2>
    | |-ImplicitCastExpr 0x14d1483a8 <line:45:6> 'struct posix_acl *' <LValueToRValue>
    | | `-DeclRefExpr 0x14d148388 <col:6> 'struct posix_acl *' lvalue ParmVar 0x14d144c28 'acl' 'struct posix_acl *'
    | `-CompoundStmt 0x14d148988 <col:11, line:54:2>
    |   `-IfStmt 0x14d148968 <line:52:3, line:53:9>
    |     |-BinaryOperator 0x14d1488e0 <line:52:7, col:15> 'int' '<'
    |     | |-ImplicitCastExpr 0x14d1488c8 <col:7> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x14d148888 <col:7> 'int' lvalue Var 0x14d145318 'error' 'int'
    |     | `-IntegerLiteral 0x14d1488a8 <col:15> 'int' 0
    |     `-GotoStmt 0x14d148950 <line:53:4, col:9> 'out' 0x14d148900
    |-LabelStmt 0x14d148db8 <line:62:1, line:63:13> 'out'
    | `-CallExpr 0x14d148d78 <col:2, col:13> 'int' contains-errors
    |   |-ImplicitCastExpr 0x14d148d60 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x14d148d20 <col:2> 'int ()' Function 0x14d148c68 'kfree' 'int ()'
    |   `-ImplicitCastExpr 0x14d148da0 <col:8> 'void *' contains-errors <LValueToRValue>
    |     `-DeclRefExpr 0x14d148d40 <col:8> 'void *' contains-errors lvalue Var 0x14d1453d0 'value' 'void *'
    |-IfStmt 0x14d149020 <line:64:2, line:65:34>
    | |-UnaryOperator 0x14d148e10 <line:64:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x14d148df8 <col:7> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x14d148dd8 <col:7> 'int' lvalue Var 0x14d145318 'error' 'int'
    | `-CallExpr 0x14d148fa0 <line:65:3, col:34> 'int'
    |   |-ImplicitCastExpr 0x14d148f88 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x14d148f08 <col:3> 'int ()' Function 0x14d148e50 'set_cached_acl' 'int ()'
    |   |-ImplicitCastExpr 0x14d148fd8 <col:18> 'struct inode *' <LValueToRValue>
    |   | `-DeclRefExpr 0x14d148f28 <col:18> 'struct inode *' lvalue ParmVar 0x14d128648 'inode' 'struct inode *'
    |   |-ImplicitCastExpr 0x14d148ff0 <col:25> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x14d148f48 <col:25> 'int' lvalue ParmVar 0x14d144ca8 'type' 'int'
    |   `-ImplicitCastExpr 0x14d149008 <col:31> 'struct posix_acl *' <LValueToRValue>
    |     `-DeclRefExpr 0x14d148f68 <col:31> 'struct posix_acl *' lvalue ParmVar 0x14d144c28 'acl' 'struct posix_acl *'
    `-ReturnStmt 0x14d149078 <line:66:2, col:9>
      `-ImplicitCastExpr 0x14d149060 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x14d149040 <col:9> 'int' lvalue Var 0x14d145318 'error' 'int'
