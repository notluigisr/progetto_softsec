TranslationUnitDecl 0x127055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1270564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x127055bd0 '__int128'
|-TypedefDecl 0x127056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x127055bf0 'unsigned __int128'
|-TypedefDecl 0x127126c30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x127126a00 'struct __NSConstantString_tag'
|   `-Record 0x127056580 '__NSConstantString_tag'
|-TypedefDecl 0x127126c98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x127055d90 '__SVInt8_t'
|-TypedefDecl 0x127126d00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x127055db0 '__SVInt16_t'
|-TypedefDecl 0x127126d68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x127055dd0 '__SVInt32_t'
|-TypedefDecl 0x127126dd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x127055df0 '__SVInt64_t'
|-TypedefDecl 0x127126e38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x127055e10 '__SVUint8_t'
|-TypedefDecl 0x127126ea0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x127055e30 '__SVUint16_t'
|-TypedefDecl 0x127126f08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x127055e50 '__SVUint32_t'
|-TypedefDecl 0x127126f70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x127055e70 '__SVUint64_t'
|-TypedefDecl 0x127126fd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x127055e90 '__SVFloat16_t'
|-TypedefDecl 0x127127040 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x127055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1271270a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x127055ed0 '__SVFloat64_t'
|-TypedefDecl 0x127127110 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x127055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x127127178 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x127055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1271271e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x127055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x127127248 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x127055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1271272b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x127055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x127127318 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x127055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x127127380 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x127055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1271273e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x127055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x127127450 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x127055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1271274b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x127056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x127127520 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x127056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x127127588 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x127056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1271275f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x127056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x127127658 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x127056090 '__clang_svint8x3_t'
|-TypedefDecl 0x1271276c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1270560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x127127728 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1270560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x127127790 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1270560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x1271277f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x127056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x127127860 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x127056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x1271278c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x127056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x127127930 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x127056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x127127998 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x127056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x127128200 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1270561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x127128268 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1270561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1271282d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1270561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x127128338 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x127056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1271283a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x127056230 '__clang_svint16x4_t'
|-TypedefDecl 0x127128408 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x127056250 '__clang_svint32x4_t'
|-TypedefDecl 0x127128470 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x127056270 '__clang_svint64x4_t'
|-TypedefDecl 0x1271284d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x127056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x127128540 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1270562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1271285a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1270562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x127128610 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1270562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x127128678 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x127056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1271286e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x127056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x127128748 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x127056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1271287b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x127056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x127128818 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x127056390 '__SVBool_t'
|-TypedefDecl 0x127128880 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1270563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1271288e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1270563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x127128950 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1270563f0 '__SVCount_t'
|-TypedefDecl 0x1271289f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1271289b0 'char *'
|   `-BuiltinType 0x1270556b0 'char'
|-TypedefDecl 0x127128a68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1271289b0 'char *'
|   `-BuiltinType 0x1270556b0 'char'
|-FunctionDecl 0x127128bf0 <dataset_diviso_filec/func14159_vuln.c:1:1, line:74:1> line:1:13 invalid process_bin_complete_sasl_auth 'void (int *)' static
| |-ParmVarDecl 0x127128b28 <col:44, col:50> col:50 referenced invalid c 'int *'
| `-CompoundStmt 0x12780bf50 <col:53, line:74:1>
|   |-CallExpr 0x127128f10 <line:2:5, col:25> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x127128e00 <col:5> 'int ()' Function 0x127128d48 'assert' 'int ()'
|   | `-CXXDependentScopeMemberExpr 0x127128ec8 <col:12, col:21> '<dependent type>' contains-errors lvalue .sasl
|   |   `-RecoveryExpr 0x127128ea8 <col:12> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x127128ff0 <line:3:5, col:27>
|   | `-VarDecl 0x127128f50 <col:5, col:23> col:17 used out 'const char *' cinit
|   |   `-RecoveryExpr 0x127128fd0 <col:23> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x1271290c0 <line:4:5, col:28>
|   | `-VarDecl 0x127129020 <col:5, col:27> col:18 used outlen 'unsigned int' cinit
|   |   `-ImplicitCastExpr 0x1271290a8 <col:27> 'unsigned int' <IntegralCast>
|   |     `-IntegerLiteral 0x127129088 <col:27> 'int' 0
|   |-CallExpr 0x127129160 <line:6:5, col:19> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x1271290d8 <col:5> 'int ()' Function 0x127128d48 'assert' 'int ()'
|   | `-CXXDependentScopeMemberExpr 0x127129118 <col:12, col:15> '<dependent type>' contains-errors lvalue ->item
|   |   `-RecoveryExpr 0x1271290f8 <col:12> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x1271422f8 <line:7:5, col:21> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x1271422b8 <col:5> 'int ()' Function 0x127142200 'init_sasl_conn' 'int ()'
|   | `-RecoveryExpr 0x1271422d8 <col:20> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x127142498 <line:9:5, col:47>
|   | `-VarDecl 0x127142338 <col:5, col:41> col:9 used nkey 'int' cinit
|   |   `-CXXDependentScopeMemberExpr 0x127142450 <col:16, col:41> '<dependent type>' contains-errors lvalue .keylen
|   |     `-CXXDependentScopeMemberExpr 0x127142408 <col:16, col:33> '<dependent type>' contains-errors lvalue .request
|   |       `-CXXDependentScopeMemberExpr 0x1271423c0 <col:16, col:19> '<dependent type>' contains-errors lvalue ->binary_header
|   |         `-RecoveryExpr 0x1271423a0 <col:16> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x127142668 <line:10:5, col:55>
|   | `-VarDecl 0x1271424c8 <col:5, col:51> col:9 used vlen 'int' cinit
|   |   `-BinaryOperator 0x127142648 <col:16, col:51> '<dependent type>' contains-errors '-'
|   |     |-CXXDependentScopeMemberExpr 0x1271425e0 <col:16, col:41> '<dependent type>' contains-errors lvalue .bodylen
|   |     | `-CXXDependentScopeMemberExpr 0x127142598 <col:16, col:33> '<dependent type>' contains-errors lvalue .request
|   |     |   `-CXXDependentScopeMemberExpr 0x127142550 <col:16, col:19> '<dependent type>' contains-errors lvalue ->binary_header
|   |     |     `-RecoveryExpr 0x127142530 <col:16> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x127142628 <col:51> 'int' contains-errors lvalue Var 0x127142338 'nkey' 'int'
|   |-DeclStmt 0x1271427d8 <line:12:5, col:22>
|   | `-VarDecl 0x127142770 <col:5, col:21> col:10 used mech 'char[nkey + 1]'
|   |-BinaryOperator 0x127143120 <line:14:5, col:18> 'char' contains-errors '='
|   | |-ArraySubscriptExpr 0x1271430c8 <col:5, col:14> 'char' contains-errors lvalue
|   | | |-ImplicitCastExpr 0x127143098 <col:5> 'char *' contains-errors <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x127143058 <col:5> 'char[nkey + 1]' contains-errors lvalue Var 0x127142770 'mech' 'char[nkey + 1]'
|   | | `-ImplicitCastExpr 0x1271430b0 <col:10> 'int' contains-errors <LValueToRValue>
|   | |   `-DeclRefExpr 0x127143078 <col:10> 'int' contains-errors lvalue Var 0x127142338 'nkey' 'int'
|   | `-ImplicitCastExpr 0x127143108 <col:18> 'char' <IntegralCast>
|   |   `-IntegerLiteral 0x1271430e8 <col:18> 'int' 0
|   |-IfStmt 0x1278096a0 <line:16:5, line:17:42>
|   | |-CXXDependentScopeMemberExpr 0x127809400 <line:16:9, col:18> '<dependent type>' contains-errors lvalue .verbose
|   | | `-RecoveryExpr 0x1271431a0 <col:9> '<dependent type>' contains-errors lvalue
|   | `-CallExpr 0x127809660 <line:17:9, col:42> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x127809528 <col:9> 'int ()' Function 0x127809470 'fprintf' 'int ()'
|   |   |-RecoveryExpr 0x127809640 <col:17> '<dependent type>' contains-errors lvalue
|   |   |-StringLiteral 0x1278095a0 <col:25> 'char[4]' lvalue "STR"
|   |   |-DeclRefExpr 0x1278095c0 <col:32> 'char[nkey + 1]' contains-errors lvalue Var 0x127142770 'mech' 'char[nkey + 1]'
|   |   `-DeclRefExpr 0x1278095e0 <col:38> 'int' contains-errors lvalue Var 0x1271424c8 'vlen' 'int'
|   |-DeclStmt 0x1278098e8 <line:19:5, col:74>
|   | `-VarDecl 0x1278096d8 <col:5, col:17> col:17 used challenge 'const char *'
|   |-DeclStmt 0x1278099b8 <line:21:5, col:18>
|   | `-VarDecl 0x127809918 <col:5, col:17> col:9 used result 'int' cinit
|   |   `-UnaryOperator 0x1278099a0 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x127809980 <col:17> 'int' 1
|   |-SwitchStmt 0x127809a50 <line:23:5, line:42:5>
|   | |-ImplicitCastExpr 0x127809a38 <line:23:13, col:16> '<dependent type>' contains-errors <LValueToRValue>
|   | | `-CXXDependentScopeMemberExpr 0x1278099f0 <col:13, col:16> '<dependent type>' contains-errors lvalue ->cmd
|   | |   `-RecoveryExpr 0x1278099d0 <col:13> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x12780a1f8 <col:21, line:42:5>
|   |   |-BinaryOperator 0x127809da8 <line:25:9, line:27:49> 'int' contains-errors '='
|   |   | |-DeclRefExpr 0x127809a90 <line:25:9> 'int' lvalue Var 0x127809918 'result' 'int'
|   |   | `-CallExpr 0x127809d58 <col:18, line:27:49> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x127809b90 <line:25:18> 'int ()' Function 0x127809ad8 'sasl_server_start' 'int ()'
|   |   |   |-CXXDependentScopeMemberExpr 0x127809bd0 <col:36, col:39> '<dependent type>' contains-errors lvalue ->sasl_conn
|   |   |   | `-RecoveryExpr 0x127809bb0 <col:36> '<dependent type>' contains-errors lvalue
|   |   |   |-DeclRefExpr 0x127809c18 <col:50> 'char[nkey + 1]' contains-errors lvalue Var 0x127142770 'mech' 'char[nkey + 1]'
|   |   |   |-DeclRefExpr 0x127809c38 <line:26:36> 'const char *' lvalue Var 0x1278096d8 'challenge' 'const char *'
|   |   |   |-DeclRefExpr 0x127809c58 <col:47> 'int' contains-errors lvalue Var 0x1271424c8 'vlen' 'int'
|   |   |   |-UnaryOperator 0x127809cd0 <line:27:36, col:37> 'const char **' contains-errors prefix '&' cannot overflow
|   |   |   | `-DeclRefExpr 0x127809c78 <col:37> 'const char *' contains-errors lvalue Var 0x127128f50 'out' 'const char *'
|   |   |   `-UnaryOperator 0x127809d40 <col:42, col:43> 'unsigned int *' prefix '&' cannot overflow
|   |   |     `-DeclRefExpr 0x127809ce8 <col:43> 'unsigned int' lvalue Var 0x127129020 'outlen' 'unsigned int'
|   |   |-BreakStmt 0x127809dc8 <line:28:9>
|   |   |-BinaryOperator 0x12780a068 <line:30:9, line:32:48> 'int' contains-errors '='
|   |   | |-DeclRefExpr 0x127809de8 <line:30:9> 'int' lvalue Var 0x127809918 'result' 'int'
|   |   | `-CallExpr 0x12780a020 <col:18, line:32:48> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x127809ee8 <line:30:18> 'int ()' Function 0x127809e30 'sasl_server_step' 'int ()'
|   |   |   |-CXXDependentScopeMemberExpr 0x127809f28 <col:35, col:38> '<dependent type>' contains-errors lvalue ->sasl_conn
|   |   |   | `-RecoveryExpr 0x127809f08 <col:35> '<dependent type>' contains-errors lvalue
|   |   |   |-DeclRefExpr 0x127809f70 <line:31:35> 'const char *' lvalue Var 0x1278096d8 'challenge' 'const char *'
|   |   |   |-DeclRefExpr 0x127809f90 <col:46> 'int' contains-errors lvalue Var 0x1271424c8 'vlen' 'int'
|   |   |   |-UnaryOperator 0x127809fd0 <line:32:35, col:36> 'const char **' contains-errors prefix '&' cannot overflow
|   |   |   | `-DeclRefExpr 0x127809fb0 <col:36> 'const char *' contains-errors lvalue Var 0x127128f50 'out' 'const char *'
|   |   |   `-UnaryOperator 0x12780a008 <col:41, col:42> 'unsigned int *' prefix '&' cannot overflow
|   |   |     `-DeclRefExpr 0x127809fe8 <col:42> 'unsigned int' lvalue Var 0x127129020 'outlen' 'unsigned int'
|   |   |-BreakStmt 0x12780a088 <line:33:9>
|   |   |-DefaultStmt 0x12780a0b8 <line:34:5, col:12>
|   |   | `-NullStmt 0x12780a0b0 <col:12>
|   |   |-IfStmt 0x12780a1d0 <line:37:9, line:40:9>
|   |   | |-RecoveryExpr 0x12780a0d8 <line:37:13, col:22> '_Bool' contains-errors
|   |   | `-CompoundStmt 0x12780a1c0 <col:31, line:40:9>
|   |   `-BreakStmt 0x12780a1f0 <line:41:9>
|   |-CallExpr 0x12780a3a8 <line:44:5, col:24> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x12780a320 <col:5> 'int ()' Function 0x12780a268 'item_unlink' 'int ()'
|   | `-CXXDependentScopeMemberExpr 0x12780a360 <col:17, col:20> '<dependent type>' contains-errors lvalue ->item
|   |   `-RecoveryExpr 0x12780a340 <col:17> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x12780aa70 <line:46:5, line:48:5>
|   | |-RecoveryExpr 0x12780a3d0 <line:46:9, col:18> '_Bool' contains-errors
|   | `-CompoundStmt 0x12780aa60 <col:27, line:48:5>
|   `-SwitchStmt 0x12780aac8 <line:50:5, line:73:5>
|     |-ImplicitCastExpr 0x12780aab0 <line:50:12> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x12780aa90 <col:12> 'int' lvalue Var 0x127809918 'result' 'int'
|     `-CompoundStmt 0x12780bee0 <col:20, line:73:5>
|       |-CallExpr 0x12780ac30 <line:52:9, col:36> '<dependent type>' contains-errors
|       | |-DeclRefExpr 0x12780abd0 <col:9> 'int ()' Function 0x12780ab18 'write_bin_response' 'int ()'
|       | |-RecoveryExpr 0x12780abf0 <col:28> '<dependent type>' contains-errors lvalue
|       | `-StringLiteral 0x12780ac10 <col:31> 'char[4]' lvalue "STR"
|       |-CallExpr 0x12780ae70 <line:53:9, col:51> '<dependent type>' contains-errors
|       | |-DeclRefExpr 0x12780ad40 <col:9> 'int ()' Function 0x12780ac88 'pthread_mutex_lock' 'int ()'
|       | `-UnaryOperator 0x12780ae58 <col:28, col:46> '<dependent type>' contains-errors prefix '&' cannot overflow
|       |   `-CXXDependentScopeMemberExpr 0x12780ae10 <col:29, col:46> '<dependent type>' contains-errors lvalue .mutex
|       |     `-CXXDependentScopeMemberExpr 0x12780adc8 <col:29, col:40> '<dependent type>' contains-errors lvalue ->stats
|       |       `-CXXDependentScopeMemberExpr 0x12780ad80 <col:29, col:32> '<dependent type>' contains-errors lvalue ->thread
|       |         `-RecoveryExpr 0x12780ad60 <col:29> '<dependent type>' contains-errors lvalue
|       |-UnaryOperator 0x12780afb8 <line:54:9, col:35> '<dependent type>' contains-errors postfix '++' cannot overflow
|       | `-CXXDependentScopeMemberExpr 0x12780af70 <col:9, col:26> '<dependent type>' contains-errors lvalue .auth_cmds
|       |   `-CXXDependentScopeMemberExpr 0x12780af28 <col:9, col:20> '<dependent type>' contains-errors lvalue ->stats
|       |     `-CXXDependentScopeMemberExpr 0x12780aee0 <col:9, col:12> '<dependent type>' contains-errors lvalue ->thread
|       |       `-RecoveryExpr 0x12780aeb8 <col:9> '<dependent type>' contains-errors lvalue
|       |         `-DeclRefExpr 0x12780ae98 <col:9> 'int *' lvalue ParmVar 0x127128b28 'c' 'int *'
|       |-CallExpr 0x12780b1e0 <line:55:9, col:53> '<dependent type>' contains-errors
|       | |-DeclRefExpr 0x12780b0b0 <col:9> 'int ()' Function 0x12780aff8 'pthread_mutex_unlock' 'int ()'
|       | `-UnaryOperator 0x12780b1c8 <col:30, col:48> '<dependent type>' contains-errors prefix '&' cannot overflow
|       |   `-CXXDependentScopeMemberExpr 0x12780b180 <col:31, col:48> '<dependent type>' contains-errors lvalue .mutex
|       |     `-CXXDependentScopeMemberExpr 0x12780b138 <col:31, col:42> '<dependent type>' contains-errors lvalue ->stats
|       |       `-CXXDependentScopeMemberExpr 0x12780b0f0 <col:31, col:34> '<dependent type>' contains-errors lvalue ->thread
|       |         `-RecoveryExpr 0x12780b0d0 <col:31> '<dependent type>' contains-errors lvalue
|       |-BreakStmt 0x12780b208 <line:56:9>
|       |-IfStmt 0x12780b5d0 <line:59:9, line:61:9>
|       | |-BinaryOperator 0x12780b400 <line:59:12, col:21> 'int' '>'
|       | | |-ImplicitCastExpr 0x12780b3d0 <col:12> 'unsigned int' <LValueToRValue>
|       | | | `-DeclRefExpr 0x12780b390 <col:12> 'unsigned int' lvalue Var 0x127129020 'outlen' 'unsigned int'
|       | | `-ImplicitCastExpr 0x12780b3e8 <col:21> 'unsigned int' <IntegralCast>
|       | |   `-IntegerLiteral 0x12780b3b0 <col:21> 'int' 0
|       | `-CompoundStmt 0x12780b5b8 <col:24, line:61:9>
|       |   `-CallExpr 0x12780b580 <line:60:13, col:35> '<dependent type>' contains-errors
|       |     |-DeclRefExpr 0x12780b500 <col:13> 'int ()' Function 0x12780b448 'add_iov' 'int ()'
|       |     |-RecoveryExpr 0x12780b520 <col:21> '<dependent type>' contains-errors lvalue
|       |     |-DeclRefExpr 0x12780b540 <col:24> 'const char *' contains-errors lvalue Var 0x127128f50 'out' 'const char *'
|       |     `-DeclRefExpr 0x12780b560 <col:29> 'unsigned int' lvalue Var 0x127129020 'outlen' 'unsigned int'
|       |-BreakStmt 0x12780b7a0 <line:64:9>
|       |-DefaultStmt 0x12780b830 <line:65:5, col:12>
|       | `-NullStmt 0x12780b828 <col:12>
|       |-CallExpr 0x12780baf0 <line:69:9, col:51> '<dependent type>' contains-errors
|       | |-DeclRefExpr 0x12780b990 <col:9> 'int ()' Function 0x12780ac88 'pthread_mutex_lock' 'int ()'
|       | `-UnaryOperator 0x12780bad8 <col:28, col:46> '<dependent type>' contains-errors prefix '&' cannot overflow
|       |   `-CXXDependentScopeMemberExpr 0x12780ba90 <col:29, col:46> '<dependent type>' contains-errors lvalue .mutex
|       |     `-CXXDependentScopeMemberExpr 0x12780ba48 <col:29, col:40> '<dependent type>' contains-errors lvalue ->stats
|       |       `-CXXDependentScopeMemberExpr 0x12780ba00 <col:29, col:32> '<dependent type>' contains-errors lvalue ->thread
|       |         `-RecoveryExpr 0x12780b9b0 <col:29> '<dependent type>' contains-errors lvalue
|       |-UnaryOperator 0x12780bc38 <line:70:9, col:35> '<dependent type>' contains-errors postfix '++' cannot overflow
|       | `-CXXDependentScopeMemberExpr 0x12780bbf0 <col:9, col:26> '<dependent type>' contains-errors lvalue .auth_cmds
|       |   `-CXXDependentScopeMemberExpr 0x12780bba8 <col:9, col:20> '<dependent type>' contains-errors lvalue ->stats
|       |     `-CXXDependentScopeMemberExpr 0x12780bb60 <col:9, col:12> '<dependent type>' contains-errors lvalue ->thread
|       |       `-RecoveryExpr 0x12780bb38 <col:9> '<dependent type>' contains-errors lvalue
|       |         `-DeclRefExpr 0x12780bb18 <col:9> 'int *' lvalue ParmVar 0x127128b28 'c' 'int *'
|       |-UnaryOperator 0x12780bd70 <line:71:9, col:37> '<dependent type>' contains-errors postfix '++' cannot overflow
|       | `-CXXDependentScopeMemberExpr 0x12780bd28 <col:9, col:26> '<dependent type>' contains-errors lvalue .auth_errors
|       |   `-CXXDependentScopeMemberExpr 0x12780bce0 <col:9, col:20> '<dependent type>' contains-errors lvalue ->stats
|       |     `-CXXDependentScopeMemberExpr 0x12780bc98 <col:9, col:12> '<dependent type>' contains-errors lvalue ->thread
|       |       `-RecoveryExpr 0x12780bc70 <col:9> '<dependent type>' contains-errors lvalue
|       |         `-DeclRefExpr 0x12780bc50 <col:9> 'int *' lvalue ParmVar 0x127128b28 'c' 'int *'
|       `-CallExpr 0x12780beb8 <line:72:9, col:53> '<dependent type>' contains-errors
|         |-DeclRefExpr 0x12780bd88 <col:9> 'int ()' Function 0x12780aff8 'pthread_mutex_unlock' 'int ()'
|         `-UnaryOperator 0x12780bea0 <col:30, col:48> '<dependent type>' contains-errors prefix '&' cannot overflow
|           `-CXXDependentScopeMemberExpr 0x12780be58 <col:31, col:48> '<dependent type>' contains-errors lvalue .mutex
|             `-CXXDependentScopeMemberExpr 0x12780be10 <col:31, col:42> '<dependent type>' contains-errors lvalue ->stats
|               `-CXXDependentScopeMemberExpr 0x12780bdc8 <col:31, col:34> '<dependent type>' contains-errors lvalue ->thread
|                 `-RecoveryExpr 0x12780bda8 <col:31> '<dependent type>' contains-errors lvalue
`-FunctionDecl 0x127142c90 <line:13:5> col:5 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x127142d90 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x127142df8 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x127142e60 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x127142d38 <<invalid sloc>> Implicit 882
