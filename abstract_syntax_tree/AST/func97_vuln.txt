TranslationUnitDecl 0x156055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1560564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x156055bd0 '__int128'
|-TypedefDecl 0x156056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x156055bf0 'unsigned __int128'
|-TypedefDecl 0x15780be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15780bc00 'struct __NSConstantString_tag'
|   `-Record 0x156056580 '__NSConstantString_tag'
|-TypedefDecl 0x15780be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x156055d90 '__SVInt8_t'
|-TypedefDecl 0x15780bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x156055db0 '__SVInt16_t'
|-TypedefDecl 0x15780bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x156055dd0 '__SVInt32_t'
|-TypedefDecl 0x15780bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x156055df0 '__SVInt64_t'
|-TypedefDecl 0x15780c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x156055e10 '__SVUint8_t'
|-TypedefDecl 0x15780c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x156055e30 '__SVUint16_t'
|-TypedefDecl 0x15780c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x156055e50 '__SVUint32_t'
|-TypedefDecl 0x15780c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x156055e70 '__SVUint64_t'
|-TypedefDecl 0x15780c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x156055e90 '__SVFloat16_t'
|-TypedefDecl 0x15780c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x156055eb0 '__SVFloat32_t'
|-TypedefDecl 0x15780c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x156055ed0 '__SVFloat64_t'
|-TypedefDecl 0x15780c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x156055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15780c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x156055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15780c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x156055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15780c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x156055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15780c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x156055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15780c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x156055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15780c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x156055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15780c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x156055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15780c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x156055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15780c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x156056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15780c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x156056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15780c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x156056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15780c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x156056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15780c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x156056090 '__clang_svint8x3_t'
|-TypedefDecl 0x15780c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1560560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15780c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1560560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15780c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1560560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15780c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x156056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15780ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x156056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15780cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x156056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15780cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x156056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15780cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x156056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15780d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1560561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15780d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1560561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15780d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1560561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15780d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x156056210 '__clang_svint8x4_t'
|-TypedefDecl 0x15780d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x156056230 '__clang_svint16x4_t'
|-TypedefDecl 0x15780d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x156056250 '__clang_svint32x4_t'
|-TypedefDecl 0x15780d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x156056270 '__clang_svint64x4_t'
|-TypedefDecl 0x15780d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x156056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15780d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1560562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15780d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1560562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15780d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1560562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15780d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x156056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15780d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x156056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15780d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x156056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15780d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x156056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15780da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x156056390 '__SVBool_t'
|-TypedefDecl 0x15780da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1560563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15780dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1560563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15780db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1560563f0 '__SVCount_t'
|-TypedefDecl 0x15780dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15780dbb0 'char *'
|   `-BuiltinType 0x1560556b0 'char'
|-TypedefDecl 0x15780dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15780dbb0 'char *'
|   `-BuiltinType 0x1560556b0 'char'
|-FunctionDecl 0x15780df18 <dataset_diviso_filec/func97_vuln.c:1:1, line:43:2> line:1:5 invalid FIPS_drbg_init 'int (int *, int, unsigned int)'
| |-ParmVarDecl 0x15780dd28 <col:20, col:30> col:30 referenced invalid dctx 'int *'
| |-ParmVarDecl 0x15780dda8 <col:36, col:40> col:40 used type 'int'
| |-ParmVarDecl 0x15780de28 <col:46, col:59> col:59 used flags 'unsigned int'
| `-CompoundStmt 0x1578270d0 <line:2:2, line:43:2>
|   |-DeclStmt 0x15780e058 <line:3:2, col:8>
|   | `-VarDecl 0x15780dff0 <col:2, col:6> col:6 used rv 'int'
|   |-BinaryOperator 0x16000a2c0 <line:5:2, col:17> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x16000a220 <col:2, col:8> '<dependent type>' contains-errors lvalue ->status
|   | | `-RecoveryExpr 0x16000a1f8 <col:2> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x16000a1d8 <col:2> 'int *' lvalue ParmVar 0x15780dd28 'dctx' 'int *'
|   | `-RecoveryExpr 0x16000a2a0 <col:17> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x16000a390 <line:6:2, col:17> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x16000a328 <col:2, col:8> '<dependent type>' contains-errors lvalue ->xflags
|   | | `-RecoveryExpr 0x16000a300 <col:2> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x16000a2e0 <col:2> 'int *' lvalue ParmVar 0x15780dd28 'dctx' 'int *'
|   | `-DeclRefExpr 0x16000a370 <col:17> 'unsigned int' lvalue ParmVar 0x15780de28 'flags' 'unsigned int'
|   |-BinaryOperator 0x16000a460 <line:7:2, col:15> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x16000a3f8 <col:2, col:8> '<dependent type>' contains-errors lvalue ->type
|   | | `-RecoveryExpr 0x16000a3d0 <col:2> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x16000a3b0 <col:2> 'int *' lvalue ParmVar 0x15780dd28 'dctx' 'int *'
|   | `-DeclRefExpr 0x16000a440 <col:15> 'int' lvalue ParmVar 0x15780dda8 'type' 'int'
|   |-BinaryOperator 0x16000a530 <line:9:2, col:17> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x16000a4c8 <col:2, col:8> '<dependent type>' contains-errors lvalue ->iflags
|   | | `-RecoveryExpr 0x16000a4a0 <col:2> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x16000a480 <col:2> 'int *' lvalue ParmVar 0x15780dd28 'dctx' 'int *'
|   | `-IntegerLiteral 0x16000a510 <col:17> 'int' 0
|   |-BinaryOperator 0x16000a600 <line:10:2, col:27> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x16000a598 <col:2, col:8> '<dependent type>' contains-errors lvalue ->entropy_blocklen
|   | | `-RecoveryExpr 0x16000a570 <col:2> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x16000a550 <col:2> 'int *' lvalue ParmVar 0x15780dd28 'dctx' 'int *'
|   | `-IntegerLiteral 0x16000a5e0 <col:27> 'int' 0
|   |-BinaryOperator 0x16000a6d0 <line:11:2, col:27> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x16000a668 <col:2, col:8> '<dependent type>' contains-errors lvalue ->health_check_cnt
|   | | `-RecoveryExpr 0x16000a640 <col:2> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x16000a620 <col:2> 'int *' lvalue ParmVar 0x15780dd28 'dctx' 'int *'
|   | `-IntegerLiteral 0x16000a6b0 <col:27> 'int' 0
|   |-BinaryOperator 0x16000a7d8 <line:12:2, col:32> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x16000a738 <col:2, col:8> '<dependent type>' contains-errors lvalue ->health_check_interval
|   | | `-RecoveryExpr 0x16000a710 <col:2> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x16000a6f0 <col:2> 'int *' lvalue ParmVar 0x15780dd28 'dctx' 'int *'
|   | `-RecoveryExpr 0x16000a7b8 <col:32> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x16000a9d8 <line:14:2, col:31> 'int' contains-errors '='
|   | |-DeclRefExpr 0x16000a7f8 <col:2> 'int' lvalue Var 0x15780dff0 'rv' 'int'
|   | `-CallExpr 0x16000a9b0 <col:7, col:31> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x16000a970 <col:7> 'int ()' Function 0x16000a8b8 'fips_drbg_hash_init' 'int ()'
|   |   `-RecoveryExpr 0x16000a990 <col:27> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x16000ac10 <line:16:2, line:17:31>
|   | |-BinaryOperator 0x16000aa68 <line:16:6, col:13> 'int' '=='
|   | | |-ImplicitCastExpr 0x16000aa50 <col:6> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x16000a9f8 <col:6> 'int' lvalue Var 0x15780dff0 'rv' 'int'
|   | | `-UnaryOperator 0x16000aa38 <col:12, col:13> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x16000aa18 <col:13> 'int' 2
|   | `-BinaryOperator 0x16000abf0 <line:17:3, col:31> 'int' contains-errors '='
|   |   |-DeclRefExpr 0x16000aa88 <col:3> 'int' lvalue Var 0x15780dff0 'rv' 'int'
|   |   `-CallExpr 0x16000abc8 <col:8, col:31> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x16000ab88 <col:8> 'int ()' Function 0x16000aad0 'fips_drbg_ctr_init' 'int ()'
|   |     `-RecoveryExpr 0x16000aba8 <col:27> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x157826648 <line:18:2, line:19:32>
|   | |-BinaryOperator 0x16000aca0 <line:18:6, col:13> 'int' '=='
|   | | |-ImplicitCastExpr 0x16000ac88 <col:6> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x16000ac30 <col:6> 'int' lvalue Var 0x15780dff0 'rv' 'int'
|   | | `-UnaryOperator 0x16000ac70 <col:12, col:13> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x16000ac50 <col:13> 'int' 2
|   | `-BinaryOperator 0x157826628 <line:19:3, col:32> 'int' contains-errors '='
|   |   |-DeclRefExpr 0x16000acc0 <col:3> 'int' lvalue Var 0x15780dff0 'rv' 'int'
|   |   `-CallExpr 0x157826600 <col:8, col:32> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x16000adc0 <col:8> 'int ()' Function 0x16000ad08 'fips_drbg_hmac_init' 'int ()'
|   |     `-RecoveryExpr 0x16000ade0 <col:28> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x157826880 <line:20:2, line:21:30>
|   | |-BinaryOperator 0x1578266d8 <line:20:6, col:13> 'int' '=='
|   | | |-ImplicitCastExpr 0x1578266c0 <col:6> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x157826668 <col:6> 'int' lvalue Var 0x15780dff0 'rv' 'int'
|   | | `-UnaryOperator 0x1578266a8 <col:12, col:13> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x157826688 <col:13> 'int' 2
|   | `-BinaryOperator 0x157826860 <line:21:3, col:30> 'int' contains-errors '='
|   |   |-DeclRefExpr 0x1578266f8 <col:3> 'int' lvalue Var 0x15780dff0 'rv' 'int'
|   |   `-CallExpr 0x157826838 <col:8, col:30> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x1578267f8 <col:8> 'int ()' Function 0x157826740 'fips_drbg_ec_init' 'int ()'
|   |     `-RecoveryExpr 0x157826818 <col:26> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x157826cb0 <line:23:2, line:29:3>
|   | |-BinaryOperator 0x1578268f8 <line:23:6, col:12> 'int' '<='
|   | | |-ImplicitCastExpr 0x1578268e0 <col:6> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1578268a0 <col:6> 'int' lvalue Var 0x15780dff0 'rv' 'int'
|   | | `-IntegerLiteral 0x1578268c0 <col:12> 'int' 0
|   | `-CompoundStmt 0x157826c98 <line:24:3, line:29:3>
|   |   `-IfStmt 0x157826c68 <line:25:3, line:28:65> has_else
|   |     |-BinaryOperator 0x157826988 <line:25:7, col:14> 'int' '=='
|   |     | |-ImplicitCastExpr 0x157826970 <col:7> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x157826918 <col:7> 'int' lvalue Var 0x15780dff0 'rv' 'int'
|   |     | `-UnaryOperator 0x157826958 <col:13, col:14> 'int' prefix '-'
|   |     |   `-IntegerLiteral 0x157826938 <col:14> 'int' 2
|   |     |-CallExpr 0x157826b48 <line:26:4, col:63> '<dependent type>' contains-errors
|   |     | |-DeclRefExpr 0x157826a88 <col:4> 'int ()' Function 0x1578269d0 'FIPSerr' 'int ()'
|   |     | |-RecoveryExpr 0x157826b08 <col:12> '<dependent type>' contains-errors lvalue
|   |     | `-RecoveryExpr 0x157826b28 <col:35> '<dependent type>' contains-errors lvalue
|   |     `-CallExpr 0x157826c38 <line:28:4, col:65> '<dependent type>' contains-errors
|   |       |-DeclRefExpr 0x157826b78 <col:4> 'int ()' Function 0x1578269d0 'FIPSerr' 'int ()'
|   |       |-RecoveryExpr 0x157826bf8 <col:12> '<dependent type>' contains-errors lvalue
|   |       `-RecoveryExpr 0x157826c18 <col:35> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x157827068 <line:33:2, line:40:3>
|   | |-RecoveryExpr 0x157826d70 <line:33:6, col:37> '_Bool' contains-errors
|   | `-CompoundStmt 0x157827050 <line:34:3, line:40:3>
|   |   `-IfStmt 0x157827030 <line:35:3, line:39:4>
|   |     |-UnaryOperator 0x157826ed8 <line:35:7, col:35> '<dependent type>' contains-errors prefix '!' cannot overflow
|   |     | `-CallExpr 0x157826eb0 <col:8, col:35> '<dependent type>' contains-errors
|   |     |   |-DeclRefExpr 0x157826e70 <col:8> 'int ()' Function 0x157826db8 'FIPS_drbg_health_check' 'int ()'
|   |     |   `-RecoveryExpr 0x157826e90 <col:31> '<dependent type>' contains-errors lvalue
|   |     `-CompoundStmt 0x157827010 <line:36:4, line:39:4>
|   |       |-CallExpr 0x157826fb0 <line:37:4, col:58> '<dependent type>' contains-errors
|   |       | |-DeclRefExpr 0x157826ef0 <col:4> 'int ()' Function 0x1578269d0 'FIPSerr' 'int ()'
|   |       | |-RecoveryExpr 0x157826f70 <col:12> '<dependent type>' contains-errors lvalue
|   |       | `-RecoveryExpr 0x157826f90 <col:35> '<dependent type>' contains-errors lvalue
|   |       `-ReturnStmt 0x157827000 <line:38:4, col:11>
|   |         `-IntegerLiteral 0x157826fe0 <col:11> 'int' 0
|   `-ReturnStmt 0x1578270c0 <line:42:2, col:9>
|     `-ImplicitCastExpr 0x1578270a8 <col:9> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x157827088 <col:9> 'int' lvalue Var 0x15780dff0 'rv' 'int'
`-FunctionDecl 0x160009f10 <line:4:2> col:2 implicit used memset 'void *(void *, int, unsigned long)' extern
  |-ParmVarDecl 0x16000a010 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x16000a078 <<invalid sloc>> <invalid sloc> 'int'
  |-ParmVarDecl 0x16000a0e0 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x160009fb8 <<invalid sloc>> Implicit 900
