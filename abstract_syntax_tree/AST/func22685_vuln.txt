TranslationUnitDecl 0x121031208 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1210320b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1210317d0 '__int128'
|-TypedefDecl 0x121032128 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1210317f0 'unsigned __int128'
|-TypedefDecl 0x12200be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12200bc00 'struct __NSConstantString_tag'
|   `-Record 0x121032180 '__NSConstantString_tag'
|-TypedefDecl 0x12200be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x121031990 '__SVInt8_t'
|-TypedefDecl 0x12200bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x1210319b0 '__SVInt16_t'
|-TypedefDecl 0x12200bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x1210319d0 '__SVInt32_t'
|-TypedefDecl 0x12200bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x1210319f0 '__SVInt64_t'
|-TypedefDecl 0x12200c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x121031a10 '__SVUint8_t'
|-TypedefDecl 0x12200c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x121031a30 '__SVUint16_t'
|-TypedefDecl 0x12200c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x121031a50 '__SVUint32_t'
|-TypedefDecl 0x12200c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x121031a70 '__SVUint64_t'
|-TypedefDecl 0x12200c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x121031a90 '__SVFloat16_t'
|-TypedefDecl 0x12200c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x121031ab0 '__SVFloat32_t'
|-TypedefDecl 0x12200c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x121031ad0 '__SVFloat64_t'
|-TypedefDecl 0x12200c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x121031af0 '__SVBfloat16_t'
|-TypedefDecl 0x12200c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x121031b10 '__clang_svint8x2_t'
|-TypedefDecl 0x12200c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x121031b30 '__clang_svint16x2_t'
|-TypedefDecl 0x12200c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x121031b50 '__clang_svint32x2_t'
|-TypedefDecl 0x12200c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x121031b70 '__clang_svint64x2_t'
|-TypedefDecl 0x12200c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x121031b90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12200c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x121031bb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12200c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x121031bd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12200c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x121031bf0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12200c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x121031c10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12200c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x121031c30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12200c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x121031c50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12200c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x121031c70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12200c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x121031c90 '__clang_svint8x3_t'
|-TypedefDecl 0x12200c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x121031cb0 '__clang_svint16x3_t'
|-TypedefDecl 0x12200c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x121031cd0 '__clang_svint32x3_t'
|-TypedefDecl 0x12200c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x121031cf0 '__clang_svint64x3_t'
|-TypedefDecl 0x12200c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x121031d10 '__clang_svuint8x3_t'
|-TypedefDecl 0x12200ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x121031d30 '__clang_svuint16x3_t'
|-TypedefDecl 0x12200cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x121031d50 '__clang_svuint32x3_t'
|-TypedefDecl 0x12200cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x121031d70 '__clang_svuint64x3_t'
|-TypedefDecl 0x12200cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x121031d90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12200d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x121031db0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12200d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x121031dd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12200d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x121031df0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12200d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x121031e10 '__clang_svint8x4_t'
|-TypedefDecl 0x12200d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x121031e30 '__clang_svint16x4_t'
|-TypedefDecl 0x12200d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x121031e50 '__clang_svint32x4_t'
|-TypedefDecl 0x12200d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x121031e70 '__clang_svint64x4_t'
|-TypedefDecl 0x12200d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x121031e90 '__clang_svuint8x4_t'
|-TypedefDecl 0x12200d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x121031eb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12200d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x121031ed0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12200d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x121031ef0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12200d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x121031f10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12200d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x121031f30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12200d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x121031f50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12200d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x121031f70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12200da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x121031f90 '__SVBool_t'
|-TypedefDecl 0x12200da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x121031fb0 '__clang_svboolx2_t'
|-TypedefDecl 0x12200dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x121031fd0 '__clang_svboolx4_t'
|-TypedefDecl 0x12200db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x121031ff0 '__SVCount_t'
|-TypedefDecl 0x12200dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12200dbb0 'char *'
|   `-BuiltinType 0x1210312b0 'char'
|-TypedefDecl 0x12200dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12200dbb0 'char *'
|   `-BuiltinType 0x1210312b0 'char'
|-FunctionDecl 0x1220276b0 <dataset_diviso_filec/func22685_vuln.c:1:1, line:13:1> line:1:6 invalid show_object_with_name 'void (int *, struct object *, struct strbuf *, const char *)'
| |-ParmVarDecl 0x12200dd28 <col:28, col:34> col:34 invalid out 'int *'
| |-ParmVarDecl 0x12200e318 <col:39, col:54> col:54 used obj 'struct object *'
| |-ParmVarDecl 0x1220274e8 <line:2:7, col:22> col:22 used path 'struct strbuf *'
| |-ParmVarDecl 0x122027568 <col:28, col:40> col:40 used component 'const char *'
| `-CompoundStmt 0x1220299a0 <line:3:1, line:13:1>
|   |-DeclStmt 0x122027a70 <line:4:2, col:41>
|   | `-VarDecl 0x122027790 <col:2, col:40> col:8 used name 'char *' cinit
|   |   `-ImplicitCastExpr 0x122027a58 <col:15, col:40> 'char *' <IntegralToPointer>
|   |     `-CallExpr 0x1220279f8 <col:15, col:40> 'int'
|   |       |-ImplicitCastExpr 0x1220279e0 <col:15> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x122027950 <col:15> 'int ()' Function 0x122027898 'path_name' 'int ()'
|   |       |-ImplicitCastExpr 0x122027a28 <col:25> 'struct strbuf *' <LValueToRValue>
|   |       | `-DeclRefExpr 0x122027970 <col:25> 'struct strbuf *' lvalue ParmVar 0x1220274e8 'path' 'struct strbuf *'
|   |       `-ImplicitCastExpr 0x122027a40 <col:31> 'const char *' <LValueToRValue>
|   |         `-DeclRefExpr 0x122027990 <col:31> 'const char *' lvalue ParmVar 0x122027568 'component' 'const char *'
|   |-DeclStmt 0x122027b08 <line:5:2, col:9>
|   | `-VarDecl 0x122027aa0 <col:2, col:8> col:8 used p 'char *'
|   |-CallExpr 0x122027e40 <line:7:2, col:43> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x122027c00 <col:2> 'int ()' Function 0x122027b48 'fprintf' 'int ()'
|   | |-RecoveryExpr 0x122027c20 <col:10> '<dependent type>' contains-errors lvalue
|   | |-StringLiteral 0x122027c80 <col:15> 'char[4]' lvalue "STR"
|   | `-CallExpr 0x122027e18 <col:22, col:42> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x122027d80 <col:22> 'int ()' Function 0x122027cc8 'oid_to_hex' 'int ()'
|   |   `-UnaryOperator 0x122027e00 <col:33, col:39> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     `-RecoveryExpr 0x122027dd8 <col:34, col:39> '<dependent type>' contains-errors lvalue
|   |       `-DeclRefExpr 0x122027da0 <col:34> 'struct object *' lvalue ParmVar 0x12200e318 'obj' 'struct object *'
|   |-ForStmt 0x122028220 <line:8:2, line:9:16>
|   | |-BinaryOperator 0x122027ed0 <line:8:7, col:11> 'char *' '='
|   | | |-DeclRefExpr 0x122027e78 <col:7> 'char *' lvalue Var 0x122027aa0 'p' 'char *'
|   | | `-ImplicitCastExpr 0x122027eb8 <col:11> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x122027e98 <col:11> 'char *' lvalue Var 0x122027790 'name' 'char *'
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x122028028 <col:17, col:29> 'int' '&&'
|   | | |-ImplicitCastExpr 0x122028010 <col:17, col:18> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x122027ff8 <col:17, col:18> 'char' <LValueToRValue>
|   | | |   `-UnaryOperator 0x122027f28 <col:17, col:18> 'char' lvalue prefix '*' cannot overflow
|   | | |     `-ImplicitCastExpr 0x122027f10 <col:18> 'char *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x122027ef0 <col:18> 'char *' lvalue Var 0x122027aa0 'p' 'char *'
|   | | `-BinaryOperator 0x122027fd8 <col:23, col:29> 'int' '!='
|   | |   |-ImplicitCastExpr 0x122027fc0 <col:23, col:24> 'int' <IntegralCast>
|   | |   | `-ImplicitCastExpr 0x122027fa8 <col:23, col:24> 'char' <LValueToRValue>
|   | |   |   `-UnaryOperator 0x122027f78 <col:23, col:24> 'char' lvalue prefix '*' cannot overflow
|   | |   |     `-ImplicitCastExpr 0x122027f60 <col:24> 'char *' <LValueToRValue>
|   | |   |       `-DeclRefExpr 0x122027f40 <col:24> 'char *' lvalue Var 0x122027aa0 'p' 'char *'
|   | |   `-CharacterLiteral 0x122027f90 <col:29> 'int' 10
|   | |-UnaryOperator 0x122028068 <col:35, col:36> 'char *' postfix '++'
|   | | `-DeclRefExpr 0x122028048 <col:35> 'char *' lvalue Var 0x122027aa0 'p' 'char *'
|   | `-CallExpr 0x1220281f0 <line:9:3, col:16> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x122028160 <col:3> 'int ()' Function 0x1220280a8 'fputc' 'int ()'
|   |   |-UnaryOperator 0x1220281b8 <col:9, col:10> 'char' lvalue prefix '*' cannot overflow
|   |   | `-ImplicitCastExpr 0x1220281a0 <col:10> 'char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x122028180 <col:10> 'char *' lvalue Var 0x122027aa0 'p' 'char *'
|   |   `-RecoveryExpr 0x1220281d0 <col:13> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x1220282b0 <line:10:2, col:17> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x122028258 <col:2> 'int ()' Function 0x1220280a8 'fputc' 'int ()'
|   | |-CharacterLiteral 0x122028278 <col:8> 'int' 10
|   | `-RecoveryExpr 0x122028290 <col:14> '<dependent type>' contains-errors lvalue
|   `-CallExpr 0x122029948 <line:12:2, col:11> 'void'
|     |-ImplicitCastExpr 0x122029930 <col:2> 'void (*)(void *)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x1220298a0 <col:2> 'void (void *)' Function 0x122028318 'free' 'void (void *)'
|     `-ImplicitCastExpr 0x122029988 <col:7> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x122029970 <col:7> 'char *' <LValueToRValue>
|         `-DeclRefExpr 0x1220298c0 <col:7> 'char *' lvalue Var 0x122027790 'name' 'char *'
`-FunctionDecl 0x122028318 <col:2> col:2 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x122029830 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x1220283c0 <<invalid sloc>> Implicit 873
