TranslationUnitDecl 0x14b055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14b0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14b055bd0 '__int128'
|-TypedefDecl 0x14b056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14b055bf0 'unsigned __int128'
|-TypedefDecl 0x14b80be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14b80bc00 'struct __NSConstantString_tag'
|   `-Record 0x14b056580 '__NSConstantString_tag'
|-TypedefDecl 0x14b80be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14b055d90 '__SVInt8_t'
|-TypedefDecl 0x14b80bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14b055db0 '__SVInt16_t'
|-TypedefDecl 0x14b80bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14b055dd0 '__SVInt32_t'
|-TypedefDecl 0x14b80bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14b055df0 '__SVInt64_t'
|-TypedefDecl 0x14b80c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14b055e10 '__SVUint8_t'
|-TypedefDecl 0x14b80c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14b055e30 '__SVUint16_t'
|-TypedefDecl 0x14b80c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14b055e50 '__SVUint32_t'
|-TypedefDecl 0x14b80c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14b055e70 '__SVUint64_t'
|-TypedefDecl 0x14b80c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14b055e90 '__SVFloat16_t'
|-TypedefDecl 0x14b80c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14b055eb0 '__SVFloat32_t'
|-TypedefDecl 0x14b80c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14b055ed0 '__SVFloat64_t'
|-TypedefDecl 0x14b80c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14b055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14b80c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14b055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14b80c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14b055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14b80c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14b055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14b80c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14b055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14b80c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14b055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14b80c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14b055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14b80c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14b055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14b80c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14b055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14b80c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14b056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14b80c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14b056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14b80c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14b056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14b80c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14b056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14b80c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14b056090 '__clang_svint8x3_t'
|-TypedefDecl 0x14b80c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14b0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14b80c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14b0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14b80c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14b0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14b80c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14b056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14b80ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14b056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14b80cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14b056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14b80cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14b056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14b80cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14b056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14b80d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14b0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14b80d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14b0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14b80d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14b0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14b80d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14b056210 '__clang_svint8x4_t'
|-TypedefDecl 0x14b80d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14b056230 '__clang_svint16x4_t'
|-TypedefDecl 0x14b80d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14b056250 '__clang_svint32x4_t'
|-TypedefDecl 0x14b80d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14b056270 '__clang_svint64x4_t'
|-TypedefDecl 0x14b80d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14b056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14b80d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14b0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14b80d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14b0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14b80d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14b0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14b80d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14b056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14b80d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14b056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14b80d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14b056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14b80d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14b056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14b80da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14b056390 '__SVBool_t'
|-TypedefDecl 0x14b80da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14b0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14b80dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14b0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14b80db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14b0563f0 '__SVCount_t'
|-TypedefDecl 0x14b80dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14b80dbb0 'char *'
|   `-BuiltinType 0x14b0556b0 'char'
|-TypedefDecl 0x14b80dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14b80dbb0 'char *'
|   `-BuiltinType 0x14b0556b0 'char'
|-FunctionDecl 0x14b80e0c8 <dataset_diviso_filec/func23525_vuln.c:1:1, line:55:1> line:1:12 invalid security_context_to_sid_core 'int (const char *, int, int *, int, int, int)' static
| |-ParmVarDecl 0x14b80dcd8 <col:41, col:53> col:53 used scontext 'const char *'
| |-ParmVarDecl 0x14b80dd70 <col:63, col:67> col:67 invalid scontext_len 'int'
| |-ParmVarDecl 0x14b80de28 <line:2:6, col:11> col:11 invalid sid 'int *'
| |-ParmVarDecl 0x14b80dea8 <col:16, col:20> col:20 invalid def_sid 'int'
| |-ParmVarDecl 0x14b80df28 <col:29, col:35> col:35 invalid gfp_flags 'int'
| |-ParmVarDecl 0x14b80dfa8 <line:3:6, col:10> col:10 used force 'int'
| `-CompoundStmt 0x14d00a4a8 <line:4:1, line:55:1>
|   |-DeclStmt 0x14b80e2f0 <line:5:2, col:30>
|   | |-VarDecl 0x14b80e1b8 <col:2, col:8> col:8 used scontext2 'char *'
|   | `-VarDecl 0x14b80e238 <col:2, col:26> col:20 used str 'char *' cinit
|   |   `-RecoveryExpr 0x14b80e2b8 <col:26> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x14c8096c8 <line:6:2, col:24>
|   | |-RecordDecl 0x14b80e308 <col:2, col:9> col:9 struct context
|   | `-VarDecl 0x14c809220 <col:2, col:17> col:17 referenced invalid context 'struct context'
|   |-DeclStmt 0x14c809780 <line:7:2, col:12>
|   | `-VarDecl 0x14c8096f8 <col:2, col:11> col:6 used rc 'int' cinit
|   |   `-IntegerLiteral 0x14c809760 <col:11> 'int' 0
|   |-IfStmt 0x14c809f90 <line:9:2, line:20:2>
|   | |-UnaryOperator 0x14c809818 <line:9:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x14c809800 <col:7> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x14c8097e0 <col:7> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x14c809f60 <col:23, line:20:2>
|   |   |-DeclStmt 0x14c8098b0 <line:10:3, col:8>
|   |   | `-VarDecl 0x14c809848 <col:3, col:7> col:7 used i 'int'
|   |   |-ForStmt 0x14c809dd0 <line:12:3, line:17:3>
|   |   | |-BinaryOperator 0x14c809908 <line:12:8, col:12> 'int' '='
|   |   | | |-DeclRefExpr 0x14c8098c8 <col:8> 'int' lvalue Var 0x14c809848 'i' 'int'
|   |   | | `-IntegerLiteral 0x14c8098e8 <col:12> 'int' 1
|   |   | |-<<<NULL>>>
|   |   | |-BinaryOperator 0x14c8099a0 <col:15, col:19> 'int' contains-errors '<'
|   |   | | |-DeclRefExpr 0x14c809928 <col:15> 'int' lvalue Var 0x14c809848 'i' 'int'
|   |   | | `-RecoveryExpr 0x14c809980 <col:19> '<dependent type>' contains-errors lvalue
|   |   | |-UnaryOperator 0x14c8099e0 <col:35, col:36> 'int' postfix '++'
|   |   | | `-DeclRefExpr 0x14c8099c0 <col:35> 'int' lvalue Var 0x14c809848 'i' 'int'
|   |   | `-CompoundStmt 0x14c809db8 <col:40, line:17:3>
|   |   |   `-IfStmt 0x14c809d98 <line:13:4, line:16:4>
|   |   |     |-RecoveryExpr 0x14c809c98 <line:13:8, col:50> '_Bool' contains-errors
|   |   |     `-CompoundStmt 0x14c809d78 <col:53, line:16:4>
|   |   |       |-BinaryOperator 0x14c809d28 <line:14:5, col:12> '<dependent type>' contains-errors '='
|   |   |       | |-UnaryOperator 0x14c809cf0 <col:5, col:6> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |   |       | | `-ImplicitCastExpr 0x14c809cd8 <col:6> '<dependent type>' contains-errors <LValueToRValue>
|   |   |       | |   `-RecoveryExpr 0x14c809cb8 <col:6> '<dependent type>' contains-errors lvalue
|   |   |       | `-DeclRefExpr 0x14c809d08 <col:12> 'int' lvalue Var 0x14c809848 'i' 'int'
|   |   |       `-ReturnStmt 0x14c809d68 <line:15:5, col:12>
|   |   |         `-IntegerLiteral 0x14c809d48 <col:12> 'int' 0
|   |   |-BinaryOperator 0x14c809f10 <line:18:3, col:10> '<dependent type>' contains-errors '='
|   |   | |-UnaryOperator 0x14c809ed8 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |   | | `-ImplicitCastExpr 0x14c809ec0 <col:4> '<dependent type>' contains-errors <LValueToRValue>
|   |   | |   `-RecoveryExpr 0x14c809e08 <col:4> '<dependent type>' contains-errors lvalue
|   |   | `-RecoveryExpr 0x14c809ef0 <col:10> '<dependent type>' contains-errors lvalue
|   |   `-ReturnStmt 0x14c809f50 <line:19:3, col:10>
|   |     `-IntegerLiteral 0x14c809f30 <col:10> 'int' 0
|   |-BinaryOperator 0x14c80a0b8 <line:21:2, col:9> '<dependent type>' contains-errors '='
|   | |-UnaryOperator 0x14c80a080 <col:2, col:3> '<dependent type>' contains-errors prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x14c80a068 <col:3> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x14c809fb0 <col:3> '<dependent type>' contains-errors lvalue
|   | `-RecoveryExpr 0x14c80a098 <col:9> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x14d008988 <line:24:2, col:49> 'char *' contains-errors '='
|   | |-DeclRefExpr 0x14c80a0d8 <col:2> 'char *' lvalue Var 0x14b80e1b8 'scontext2' 'char *'
|   | `-CallExpr 0x14d008958 <col:14, col:49> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x14d0088b8 <col:14> 'int ()' Function 0x14d008800 'kmalloc' 'int ()'
|   |   |-BinaryOperator 0x14d008918 <col:22, col:37> '<dependent type>' contains-errors '+'
|   |   | |-RecoveryExpr 0x14d0088d8 <col:22> '<dependent type>' contains-errors lvalue
|   |   | `-IntegerLiteral 0x14d0088f8 <col:37> 'int' 1
|   |   `-RecoveryExpr 0x14d008938 <col:40> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x14d008aa0 <line:25:2, line:26:11>
|   | |-UnaryOperator 0x14d0089e0 <line:25:6, col:7> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x14d0089c8 <col:7> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x14d0089a8 <col:7> 'char *' lvalue Var 0x14b80e1b8 'scontext2' 'char *'
|   | `-ReturnStmt 0x14d008a90 <line:26:3, col:11>
|   |   `-UnaryOperator 0x14d008a78 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |     `-ImplicitCastExpr 0x14d008a60 <col:11> '<dependent type>' contains-errors <LValueToRValue>
|   |       `-RecoveryExpr 0x14d008a40 <col:11> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x14d008e50 <line:27:2, col:42> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x14d008d88 <col:2> 'void *(void *, const void *, unsigned long)' Function 0x14d008b38 'memcpy' 'void *(void *, const void *, unsigned long)'
|   | |-DeclRefExpr 0x14d008da8 <col:9> 'char *' lvalue Var 0x14b80e1b8 'scontext2' 'char *'
|   | |-DeclRefExpr 0x14d008dc8 <col:20> 'const char *' lvalue ParmVar 0x14b80dcd8 'scontext' 'const char *'
|   | `-RecoveryExpr 0x14d008de8 <col:30> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x14d008f38 <line:28:2, col:28> '<dependent type>' contains-errors '='
|   | |-ArraySubscriptExpr 0x14d008ef8 <col:2, col:24> '<dependent type>' contains-errors lvalue
|   | | |-ImplicitCastExpr 0x14d008ec8 <col:2> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x14d008e88 <col:2> 'char *' lvalue Var 0x14b80e1b8 'scontext2' 'char *'
|   | | `-ImplicitCastExpr 0x14d008ee0 <col:12> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x14d008ea8 <col:12> '<dependent type>' contains-errors lvalue
|   | `-IntegerLiteral 0x14d008f18 <col:28> 'int' 0
|   |-IfStmt 0x14d009338 <line:30:2, line:36:2>
|   | |-ImplicitCastExpr 0x14d008f78 <line:30:6> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x14d008f58 <col:6> 'int' lvalue ParmVar 0x14b80dfa8 'force' 'int'
|   | `-CompoundStmt 0x14d009310 <col:13, line:36:2>
|   |   |-BinaryOperator 0x14d009068 <line:32:3, col:9> 'int' contains-errors '='
|   |   | |-DeclRefExpr 0x14d008f90 <col:3> 'int' lvalue Var 0x14c8096f8 'rc' 'int'
|   |   | `-UnaryOperator 0x14d009050 <col:8, col:9> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |   |   `-ImplicitCastExpr 0x14d009038 <col:9> '<dependent type>' contains-errors <LValueToRValue>
|   |   |     `-RecoveryExpr 0x14d009018 <col:9> '<dependent type>' contains-errors lvalue
|   |   |-BinaryOperator 0x14d009218 <line:33:3, col:37> 'char *' contains-errors '='
|   |   | |-DeclRefExpr 0x14d009088 <col:3> 'char *' contains-errors lvalue Var 0x14b80e238 'str' 'char *'
|   |   | `-CallExpr 0x14d0091e8 <col:9, col:37> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x14d009188 <col:9> 'int ()' Function 0x14d0090d0 'kstrdup' 'int ()'
|   |   |   |-DeclRefExpr 0x14d0091a8 <col:17> 'char *' lvalue Var 0x14b80e1b8 'scontext2' 'char *'
|   |   |   `-RecoveryExpr 0x14d0091c8 <col:28> '<dependent type>' contains-errors lvalue
|   |   `-IfStmt 0x14d0092f0 <line:34:3, line:35:9>
|   |     |-UnaryOperator 0x14d009270 <line:34:7, col:8> 'int' contains-errors prefix '!' cannot overflow
|   |     | `-ImplicitCastExpr 0x14d009258 <col:8> 'char *' contains-errors <LValueToRValue>
|   |     |   `-DeclRefExpr 0x14d009238 <col:8> 'char *' contains-errors lvalue Var 0x14b80e238 'str' 'char *'
|   |     `-GotoStmt 0x14d0092d8 <line:35:4, col:9> 'out' 0x14d009288
|   |-CallExpr 0x14d0094e8 <line:38:2, col:26> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x14d009438 <col:2> 'int ()' Function 0x14d009380 'read_lock' 'int ()'
|   | `-UnaryOperator 0x14d0094d0 <col:12, col:13> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   `-RecoveryExpr 0x14d0094b0 <col:13> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x14d009dd0 <line:41:2, line:46:8> has_else
|   | |-RecoveryExpr 0x14d009708 <line:41:6, col:23> '_Bool' contains-errors
|   | |-CompoundStmt 0x14d009cf0 <col:30, line:45:2>
|   | | |-BinaryOperator 0x14d0097d8 <line:42:3, col:17> '<dependent type>' contains-errors '='
|   | | | |-CXXDependentScopeMemberExpr 0x14d009770 <col:3, col:11> '<dependent type>' contains-errors lvalue .str
|   | | | | `-RecoveryExpr 0x14d009748 <col:3> '<dependent type>' contains-errors lvalue
|   | | | |   `-DeclRefExpr 0x14d009728 <col:3> 'struct context' lvalue Var 0x14c809220 'context' 'struct context'
|   | | | `-DeclRefExpr 0x14d0097b8 <col:17> 'char *' contains-errors lvalue Var 0x14b80e238 'str' 'char *'
|   | | `-BinaryOperator 0x14d009cb0 <line:43:3, col:17> '<dependent type>' contains-errors '='
|   | |   |-CXXDependentScopeMemberExpr 0x14d009c48 <col:3, col:11> '<dependent type>' contains-errors lvalue .len
|   | |   | `-RecoveryExpr 0x14d009c20 <col:3> '<dependent type>' contains-errors lvalue
|   | |   |   `-DeclRefExpr 0x14d009c00 <col:3> 'struct context' lvalue Var 0x14c809220 'context' 'struct context'
|   | |   `-RecoveryExpr 0x14d009c90 <col:17> '<dependent type>' contains-errors lvalue
|   | `-IfStmt 0x14d009db0 <line:45:9, line:46:8>
|   |   |-ImplicitCastExpr 0x14d009d30 <line:45:13> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x14d009d10 <col:13> 'int' lvalue Var 0x14c8096f8 'rc' 'int'
|   |   `-GotoStmt 0x14d009d98 <line:46:3, col:8> 'out_unlock' 0x14d009d48
|   |-CallExpr 0x14d00a0b0 <line:48:2, col:26> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x14d00a058 <col:2> 'int ()' Function 0x14d009fa0 'context_destroy' 'int ()'
|   | `-UnaryOperator 0x14d00a098 <col:18, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   `-RecoveryExpr 0x14d00a078 <col:19> '<dependent type>' contains-errors lvalue
|   |-LabelStmt 0x14d00a1e0 <line:49:1, col:11> 'out_unlock'
|   | `-NullStmt 0x14d00a1d8 <col:11>
|   |-LabelStmt 0x14d00a3a8 <line:51:1, line:52:17> 'out'
|   | `-CallExpr 0x14d00a368 <col:2, col:17> 'int'
|   |   |-ImplicitCastExpr 0x14d00a350 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x14d00a2e0 <col:2> 'int ()' Function 0x14d00a228 'kfree' 'int ()'
|   |   `-ImplicitCastExpr 0x14d00a390 <col:8> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x14d00a300 <col:8> 'char *' lvalue Var 0x14b80e1b8 'scontext2' 'char *'
|   |-CallExpr 0x14d00a420 <line:53:2, col:11> 'int' contains-errors
|   | |-ImplicitCastExpr 0x14d00a408 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x14d00a3c8 <col:2> 'int ()' Function 0x14d00a228 'kfree' 'int ()'
|   | `-ImplicitCastExpr 0x14d00a448 <col:8> 'char *' contains-errors <LValueToRValue>
|   |   `-DeclRefExpr 0x14d00a3e8 <col:8> 'char *' contains-errors lvalue Var 0x14b80e238 'str' 'char *'
|   `-ReturnStmt 0x14d00a498 <line:54:2, col:9>
|     `-ImplicitCastExpr 0x14d00a480 <col:9> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x14d00a460 <col:9> 'int' lvalue Var 0x14c8096f8 'rc' 'int'
|-FunctionDecl 0x14c809a40 <line:13:9> col:9 implicit used strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x14c809b40 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x14c809ba8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x14c809ae8 <<invalid sloc>> Implicit 887
`-FunctionDecl 0x14d008b38 <line:27:2> col:2 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x14d008c38 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x14d008ca0 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x14d008d08 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x14d008be0 <<invalid sloc>> Implicit 882
