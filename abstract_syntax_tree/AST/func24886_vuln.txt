TranslationUnitDecl 0x145055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1450564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x145055bd0 '__int128'
|-TypedefDecl 0x145056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x145055bf0 'unsigned __int128'
|-TypedefDecl 0x145126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x145126000 'struct __NSConstantString_tag'
|   `-Record 0x145056580 '__NSConstantString_tag'
|-TypedefDecl 0x145126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x145055d90 '__SVInt8_t'
|-TypedefDecl 0x145126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x145055db0 '__SVInt16_t'
|-TypedefDecl 0x145126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x145055dd0 '__SVInt32_t'
|-TypedefDecl 0x1451263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x145055df0 '__SVInt64_t'
|-TypedefDecl 0x145126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x145055e10 '__SVUint8_t'
|-TypedefDecl 0x1451264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x145055e30 '__SVUint16_t'
|-TypedefDecl 0x145126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x145055e50 '__SVUint32_t'
|-TypedefDecl 0x145126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x145055e70 '__SVUint64_t'
|-TypedefDecl 0x1451265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x145055e90 '__SVFloat16_t'
|-TypedefDecl 0x145126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x145055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1451266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x145055ed0 '__SVFloat64_t'
|-TypedefDecl 0x145126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x145055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x145126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x145055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1451267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x145055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x145126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x145055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1451268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x145055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x145126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x145055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x145126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x145055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1451269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x145055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x145126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x145055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x145126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x145056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x145126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x145056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x145126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x145056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x145126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x145056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x145126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x145056090 '__clang_svint8x3_t'
|-TypedefDecl 0x145126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1450560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x145126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1450560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x145126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1450560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x145126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x145056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x145126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x145056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x145126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x145056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x145126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x145056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x145126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x145056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x145127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1450561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x145127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1450561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1451278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1450561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x145127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x145056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1451279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x145056230 '__clang_svint16x4_t'
|-TypedefDecl 0x145127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x145056250 '__clang_svint32x4_t'
|-TypedefDecl 0x145127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x145056270 '__clang_svint64x4_t'
|-TypedefDecl 0x145127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x145056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x145127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1450562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x145127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1450562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x145127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1450562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x145127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x145056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x145127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x145056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x145127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x145056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x145127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x145056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x145127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x145056390 '__SVBool_t'
|-TypedefDecl 0x145127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1450563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x145127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1450563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x145127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1450563f0 '__SVCount_t'
|-TypedefDecl 0x145127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x145127fb0 'char *'
|   `-BuiltinType 0x1450556b0 'char'
|-TypedefDecl 0x145128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x145127fb0 'char *'
|   `-BuiltinType 0x1450556b0 'char'
`-FunctionDecl 0x1451281f8 <dataset_diviso_filec/func24886_vuln.c:1:1, line:42:1> line:1:12 invalid link_stop_clients 'int (int *)' static
  |-ParmVarDecl 0x145128128 <col:30, col:36> col:36 invalid link 'int *'
  `-CompoundStmt 0x1451433e8 <col:42, line:42:1>
    |-DeclStmt 0x1451283e0 <line:2:9, col:21>
    | |-VarDecl 0x1451282c0 <col:9, col:17> col:13 used r 'int' cinit
    | | `-IntegerLiteral 0x145128328 <col:17> 'int' 0
    | `-VarDecl 0x145128360 <col:9, col:20> col:20 used k 'int'
    |-CallExpr 0x145128590 <line:4:9, col:20> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x145128550 <col:9> 'int ()' Function 0x145128498 'assert' 'int ()'
    | `-RecoveryExpr 0x145128570 <col:16> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x145128640 <line:5:9, col:29> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1451285b8 <col:9> 'int ()' Function 0x145128498 'assert' 'int ()'
    | `-CXXDependentScopeMemberExpr 0x1451285f8 <col:16, col:22> '<dependent type>' contains-errors lvalue ->manager
    |   `-RecoveryExpr 0x1451285d8 <col:16> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x145128738 <line:6:9, col:36> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x145128668 <col:9> 'int ()' Function 0x145128498 'assert' 'int ()'
    | `-CXXDependentScopeMemberExpr 0x1451286f0 <col:16, col:31> '<dependent type>' contains-errors lvalue ->event
    |   `-CXXDependentScopeMemberExpr 0x1451286a8 <col:16, col:22> '<dependent type>' contains-errors lvalue ->manager
    |     `-RecoveryExpr 0x145128688 <col:16> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x145141830 <line:8:9, line:9:24>
    | |-UnaryOperator 0x1451287e0 <line:8:13, col:20> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x1451287c8 <col:14, col:20> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-CXXDependentScopeMemberExpr 0x145128780 <col:14, col:20> '<dependent type>' contains-errors lvalue ->network
    | |     `-RecoveryExpr 0x145128760 <col:14> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x145141820 <line:9:17, col:24>
    |   `-IntegerLiteral 0x145141800 <col:24> 'int' 0
    |-IfStmt 0x145141d58 <line:11:9, line:15:9>
    | |-CXXDependentScopeMemberExpr 0x145141870 <line:11:13, col:19> '<dependent type>' contains-errors lvalue ->dhcp_client
    | | `-RecoveryExpr 0x145141850 <col:13> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x145141d38 <col:32, line:15:9>
    |   |-BinaryOperator 0x145141a68 <line:12:17, col:58> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x1451418b8 <col:17> 'int' lvalue Var 0x145128360 'k' 'int'
    |   | `-CallExpr 0x145141a40 <col:21, col:58> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x1451419b8 <col:21> 'int ()' Function 0x145141900 'sd_dhcp_client_stop' 'int ()'
    |   |   `-CXXDependentScopeMemberExpr 0x1451419f8 <col:41, col:47> '<dependent type>' contains-errors lvalue ->dhcp_client
    |   |     `-RecoveryExpr 0x1451419d8 <col:41> '<dependent type>' contains-errors lvalue
    |   `-IfStmt 0x145141d18 <line:13:17, line:14:66>
    |     |-BinaryOperator 0x145141ae0 <line:13:21, col:25> 'int' '<'
    |     | |-ImplicitCastExpr 0x145141ac8 <col:21> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x145141a88 <col:21> 'int' lvalue Var 0x145128360 'k' 'int'
    |     | `-IntegerLiteral 0x145141aa8 <col:25> 'int' 0
    |     `-BinaryOperator 0x145141cf8 <line:14:25, col:66> 'int' contains-errors '='
    |       |-DeclRefExpr 0x145141b00 <col:25> 'int' lvalue Var 0x1451282c0 'r' 'int'
    |       `-CallExpr 0x145141cc0 <col:29, col:66> '<dependent type>' contains-errors
    |         |-DeclRefExpr 0x145141c00 <col:29> 'int ()' Function 0x145141b48 'log_link_warning_errno' 'int ()'
    |         |-RecoveryExpr 0x145141c20 <col:52> '<dependent type>' contains-errors lvalue
    |         |-DeclRefExpr 0x145141c40 <col:58> 'int' lvalue Var 0x1451282c0 'r' 'int'
    |         `-StringLiteral 0x145141ca0 <col:61> 'char[4]' lvalue "STR"
    |-IfStmt 0x145142160 <line:17:9, line:21:9>
    | |-CXXDependentScopeMemberExpr 0x145141d98 <line:17:13, col:19> '<dependent type>' contains-errors lvalue ->ipv4ll
    | | `-RecoveryExpr 0x145141d78 <col:13> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x145142140 <col:27, line:21:9>
    |   |-BinaryOperator 0x145141f90 <line:18:17, col:48> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x145141de0 <col:17> 'int' lvalue Var 0x145128360 'k' 'int'
    |   | `-CallExpr 0x145141f68 <col:21, col:48> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x145141ee0 <col:21> 'int ()' Function 0x145141e28 'sd_ipv4ll_stop' 'int ()'
    |   |   `-CXXDependentScopeMemberExpr 0x145141f20 <col:36, col:42> '<dependent type>' contains-errors lvalue ->ipv4ll
    |   |     `-RecoveryExpr 0x145141f00 <col:36> '<dependent type>' contains-errors lvalue
    |   `-IfStmt 0x145142120 <line:19:17, line:20:66>
    |     |-BinaryOperator 0x145142008 <line:19:21, col:25> 'int' '<'
    |     | |-ImplicitCastExpr 0x145141ff0 <col:21> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x145141fb0 <col:21> 'int' lvalue Var 0x145128360 'k' 'int'
    |     | `-IntegerLiteral 0x145141fd0 <col:25> 'int' 0
    |     `-BinaryOperator 0x145142100 <line:20:25, col:66> 'int' contains-errors '='
    |       |-DeclRefExpr 0x145142028 <col:25> 'int' lvalue Var 0x1451282c0 'r' 'int'
    |       `-CallExpr 0x1451420c8 <col:29, col:66> '<dependent type>' contains-errors
    |         |-DeclRefExpr 0x145142048 <col:29> 'int ()' Function 0x145141b48 'log_link_warning_errno' 'int ()'
    |         |-RecoveryExpr 0x145142068 <col:52> '<dependent type>' contains-errors lvalue
    |         |-DeclRefExpr 0x145142088 <col:58> 'int' lvalue Var 0x1451282c0 'r' 'int'
    |         `-StringLiteral 0x1451420a8 <col:61> 'char[4]' lvalue "STR"
    |-IfStmt 0x145142f78 <line:23:9, line:33:9>
    | |-CXXDependentScopeMemberExpr 0x1451421a0 <line:23:12, col:18> '<dependent type>' contains-errors lvalue ->ndisc_router_discovery
    | | `-RecoveryExpr 0x145142180 <col:12> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x145142f50 <col:42, line:33:9>
    |   |-IfStmt 0x1451425d0 <line:24:17, line:28:17>
    |   | |-CXXDependentScopeMemberExpr 0x145142208 <line:24:21, col:27> '<dependent type>' contains-errors lvalue ->dhcp6_client
    |   | | `-RecoveryExpr 0x1451421e8 <col:21> '<dependent type>' contains-errors lvalue
    |   | `-CompoundStmt 0x1451425b0 <col:41, line:28:17>
    |   |   |-BinaryOperator 0x145142400 <line:25:25, col:68> 'int' contains-errors '='
    |   |   | |-DeclRefExpr 0x145142250 <col:25> 'int' lvalue Var 0x145128360 'k' 'int'
    |   |   | `-CallExpr 0x1451423d8 <col:29, col:68> '<dependent type>' contains-errors
    |   |   |   |-DeclRefExpr 0x145142350 <col:29> 'int ()' Function 0x145142298 'sd_dhcp6_client_stop' 'int ()'
    |   |   |   `-CXXDependentScopeMemberExpr 0x145142390 <col:50, col:56> '<dependent type>' contains-errors lvalue ->dhcp6_client
    |   |   |     `-RecoveryExpr 0x145142370 <col:50> '<dependent type>' contains-errors lvalue
    |   |   `-IfStmt 0x145142590 <line:26:25, line:27:74>
    |   |     |-BinaryOperator 0x145142478 <line:26:29, col:33> 'int' '<'
    |   |     | |-ImplicitCastExpr 0x145142460 <col:29> 'int' <LValueToRValue>
    |   |     | | `-DeclRefExpr 0x145142420 <col:29> 'int' lvalue Var 0x145128360 'k' 'int'
    |   |     | `-IntegerLiteral 0x145142440 <col:33> 'int' 0
    |   |     `-BinaryOperator 0x145142570 <line:27:33, col:74> 'int' contains-errors '='
    |   |       |-DeclRefExpr 0x145142498 <col:33> 'int' lvalue Var 0x1451282c0 'r' 'int'
    |   |       `-CallExpr 0x145142538 <col:37, col:74> '<dependent type>' contains-errors
    |   |         |-DeclRefExpr 0x1451424b8 <col:37> 'int ()' Function 0x145141b48 'log_link_warning_errno' 'int ()'
    |   |         |-RecoveryExpr 0x1451424d8 <col:60> '<dependent type>' contains-errors lvalue
    |   |         |-DeclRefExpr 0x1451424f8 <col:66> 'int' lvalue Var 0x1451282c0 'r' 'int'
    |   |         `-StringLiteral 0x145142518 <col:69> 'char[4]' lvalue "STR"
    |   |-BinaryOperator 0x1451427a0 <line:30:17, col:63> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x1451425f0 <col:17> 'int' lvalue Var 0x145128360 'k' 'int'
    |   | `-CallExpr 0x145142778 <col:21, col:63> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x1451426f0 <col:21> 'int ()' Function 0x145142638 'sd_ndisc_stop' 'int ()'
    |   |   `-CXXDependentScopeMemberExpr 0x145142730 <col:35, col:41> '<dependent type>' contains-errors lvalue ->ndisc_router_discovery
    |   |     `-RecoveryExpr 0x145142710 <col:35> '<dependent type>' contains-errors lvalue
    |   `-IfStmt 0x145142f30 <line:31:17, line:32:66>
    |     |-BinaryOperator 0x145142e18 <line:31:21, col:25> 'int' '<'
    |     | |-ImplicitCastExpr 0x145142e00 <col:21> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x1451427c0 <col:21> 'int' lvalue Var 0x145128360 'k' 'int'
    |     | `-IntegerLiteral 0x1451427e0 <col:25> 'int' 0
    |     `-BinaryOperator 0x145142f10 <line:32:25, col:66> 'int' contains-errors '='
    |       |-DeclRefExpr 0x145142e38 <col:25> 'int' lvalue Var 0x1451282c0 'r' 'int'
    |       `-CallExpr 0x145142ed8 <col:29, col:66> '<dependent type>' contains-errors
    |         |-DeclRefExpr 0x145142e58 <col:29> 'int ()' Function 0x145141b48 'log_link_warning_errno' 'int ()'
    |         |-RecoveryExpr 0x145142e78 <col:52> '<dependent type>' contains-errors lvalue
    |         |-DeclRefExpr 0x145142e98 <col:58> 'int' lvalue Var 0x1451282c0 'r' 'int'
    |         `-StringLiteral 0x145142eb8 <col:61> 'char[4]' lvalue "STR"
    |-IfStmt 0x145143380 <line:35:9, line:39:9>
    | |-CXXDependentScopeMemberExpr 0x145142fb8 <line:35:13, col:19> '<dependent type>' contains-errors lvalue ->lldp
    | | `-RecoveryExpr 0x145142f98 <col:13> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x145143360 <col:25, line:39:9>
    |   |-BinaryOperator 0x1451431b0 <line:36:17, col:44> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x145143000 <col:17> 'int' lvalue Var 0x145128360 'k' 'int'
    |   | `-CallExpr 0x145143188 <col:21, col:44> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x145143100 <col:21> 'int ()' Function 0x145143048 'sd_lldp_stop' 'int ()'
    |   |   `-CXXDependentScopeMemberExpr 0x145143140 <col:34, col:40> '<dependent type>' contains-errors lvalue ->lldp
    |   |     `-RecoveryExpr 0x145143120 <col:34> '<dependent type>' contains-errors lvalue
    |   `-IfStmt 0x145143340 <line:37:17, line:38:66>
    |     |-BinaryOperator 0x145143228 <line:37:21, col:25> 'int' '<'
    |     | |-ImplicitCastExpr 0x145143210 <col:21> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x1451431d0 <col:21> 'int' lvalue Var 0x145128360 'k' 'int'
    |     | `-IntegerLiteral 0x1451431f0 <col:25> 'int' 0
    |     `-BinaryOperator 0x145143320 <line:38:25, col:66> 'int' contains-errors '='
    |       |-DeclRefExpr 0x145143248 <col:25> 'int' lvalue Var 0x1451282c0 'r' 'int'
    |       `-CallExpr 0x1451432e8 <col:29, col:66> '<dependent type>' contains-errors
    |         |-DeclRefExpr 0x145143268 <col:29> 'int ()' Function 0x145141b48 'log_link_warning_errno' 'int ()'
    |         |-RecoveryExpr 0x145143288 <col:52> '<dependent type>' contains-errors lvalue
    |         |-DeclRefExpr 0x1451432a8 <col:58> 'int' lvalue Var 0x1451282c0 'r' 'int'
    |         `-StringLiteral 0x1451432c8 <col:61> 'char[4]' lvalue "STR"
    `-ReturnStmt 0x1451433d8 <line:41:9, col:16>
      `-ImplicitCastExpr 0x1451433c0 <col:16> 'int' <LValueToRValue>
        `-DeclRefExpr 0x1451433a0 <col:16> 'int' lvalue Var 0x1451282c0 'r' 'int'
