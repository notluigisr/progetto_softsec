TranslationUnitDecl 0x13b055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13b0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13b055bd0 '__int128'
|-TypedefDecl 0x13b056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13b055bf0 'unsigned __int128'
|-TypedefDecl 0x13b80be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13b80bc00 'struct __NSConstantString_tag'
|   `-Record 0x13b056580 '__NSConstantString_tag'
|-TypedefDecl 0x13b80be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13b055d90 '__SVInt8_t'
|-TypedefDecl 0x13b80bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13b055db0 '__SVInt16_t'
|-TypedefDecl 0x13b80bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13b055dd0 '__SVInt32_t'
|-TypedefDecl 0x13b80bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13b055df0 '__SVInt64_t'
|-TypedefDecl 0x13b80c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13b055e10 '__SVUint8_t'
|-TypedefDecl 0x13b80c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13b055e30 '__SVUint16_t'
|-TypedefDecl 0x13b80c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13b055e50 '__SVUint32_t'
|-TypedefDecl 0x13b80c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13b055e70 '__SVUint64_t'
|-TypedefDecl 0x13b80c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13b055e90 '__SVFloat16_t'
|-TypedefDecl 0x13b80c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13b055eb0 '__SVFloat32_t'
|-TypedefDecl 0x13b80c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13b055ed0 '__SVFloat64_t'
|-TypedefDecl 0x13b80c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13b055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13b80c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13b055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13b80c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13b055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13b80c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13b055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13b80c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13b055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13b80c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13b055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13b80c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13b055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13b80c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13b055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13b80c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13b055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13b80c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13b056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13b80c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13b056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13b80c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13b056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13b80c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13b056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13b80c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13b056090 '__clang_svint8x3_t'
|-TypedefDecl 0x13b80c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13b0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13b80c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13b0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13b80c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13b0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13b80c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13b056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13b80ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13b056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13b80cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13b056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13b80cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13b056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13b80cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13b056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13b80d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13b0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13b80d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13b0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13b80d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13b0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13b80d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13b056210 '__clang_svint8x4_t'
|-TypedefDecl 0x13b80d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13b056230 '__clang_svint16x4_t'
|-TypedefDecl 0x13b80d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13b056250 '__clang_svint32x4_t'
|-TypedefDecl 0x13b80d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13b056270 '__clang_svint64x4_t'
|-TypedefDecl 0x13b80d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13b056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13b80d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13b0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13b80d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13b0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13b80d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13b0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13b80d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13b056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13b80d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13b056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13b80d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13b056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13b80d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13b056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13b80da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13b056390 '__SVBool_t'
|-TypedefDecl 0x13b80da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13b0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13b80dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13b0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13b80db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13b0563f0 '__SVCount_t'
|-TypedefDecl 0x13b80dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13b80dbb0 'char *'
|   `-BuiltinType 0x13b0556b0 'char'
|-TypedefDecl 0x13b80dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13b80dbb0 'char *'
|   `-BuiltinType 0x13b0556b0 'char'
|-FunctionDecl 0x13b827438 <dataset_diviso_filec/func4404_vuln.c:1:1, line:56:1> line:1:1 invalid purgekeys_2_svc 'int (int *, struct svc_req *)'
| |-ParmVarDecl 0x13b80dd28 <col:17, col:32> col:32 invalid arg 'int *'
| |-ParmVarDecl 0x13b80e318 <col:37, col:53> col:53 used rqstp 'struct svc_req *'
| `-CompoundStmt 0x13c809af0 <line:2:1, line:56:1>
|   |-DeclStmt 0x13b827570 <line:3:5, col:36>
|   | `-VarDecl 0x13b827508 <col:5, col:33> col:33 referenced invalid ret 'int' static
|   |-DeclStmt 0x13b8276a0 <line:4:5, col:54>
|   | |-VarDecl 0x13b8275a0 <col:5, col:34> col:34 used prime_arg 'char *'
|   | `-VarDecl 0x13b827620 <col:5, col:46> col:46 used funcname 'char *'
|   |-DeclStmt 0x13b827770 <line:9:5, col:47>
|   | `-VarDecl 0x13b8276d0 <col:5, col:43> col:34 used errmsg 'const char *' cinit
|   |   `-RecoveryExpr 0x13b827750 <col:43> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x13b8279a0 <line:11:5, col:35> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x13b8278e0 <col:5> 'int ()' Function 0x13b827828 'xdr_free' 'int ()'
|   | |-RecoveryExpr 0x13b827980 <col:14> '<dependent type>' contains-errors lvalue
|   | `-UnaryOperator 0x13b827938 <col:31, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   `-RecoveryExpr 0x13b827918 <col:32> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x13b827cd0 <line:13:5, line:14:14>
|   | |-RecoveryExpr 0x13b827c48 <line:13:9, col:72> '_Bool' contains-errors
|   | `-GotoStmt 0x13b827cb8 <line:14:9, col:14> 'exit_func' 0x13b827c68
|   |-IfStmt 0x13b827ec0 <line:16:5, line:17:14>
|   | |-RecoveryExpr 0x13b827e88 <line:16:9, col:49> '_Bool' contains-errors
|   | `-GotoStmt 0x13b827ea8 <line:17:9, col:14> 'exit_func' 0x13b827c68
|   |-BinaryOperator 0x13b828058 <line:19:5, col:31> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x13b827f28 <col:5, col:9> '<dependent type>' contains-errors lvalue .api_version
|   | | `-RecoveryExpr 0x13b827f00 <col:5> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x13b827ee0 <col:5> 'int' lvalue Var 0x13b827508 'ret' 'int'
|   | `-CXXDependentScopeMemberExpr 0x13b828010 <col:23, col:31> '<dependent type>' contains-errors lvalue ->api_version
|   |   `-RecoveryExpr 0x13b827ff0 <col:23> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x13b828118 <line:21:5, col:16> 'char *' '='
|   | |-DeclRefExpr 0x13b828078 <col:5> 'char *' lvalue Var 0x13b827620 'funcname' 'char *'
|   | `-ImplicitCastExpr 0x13b828100 <col:16> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x13b8280e0 <col:16> 'char[4]' lvalue "STR"
|   |-IfStmt 0x13b122f40 <line:23:5, line:26:5>
|   | |-BinaryOperator 0x13b8283d8 <line:23:9, col:63> 'int' contains-errors '<'
|   | | |-CallExpr 0x13b8283a0 <col:9, col:59> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x13b828218 <col:9> 'int ()' Function 0x13b828160 'setup_gss_names' 'int ()'
|   | | | |-DeclRefExpr 0x13b828238 <col:25> 'struct svc_req *' lvalue ParmVar 0x13b80e318 'rqstp' 'struct svc_req *'
|   | | | |-UnaryOperator 0x13b828350 <col:32, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | | | `-RecoveryExpr 0x13b828330 <col:33> '<dependent type>' contains-errors lvalue
|   | | | `-UnaryOperator 0x13b828388 <col:46, col:47> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | |   `-RecoveryExpr 0x13b828368 <col:47> '<dependent type>' contains-errors lvalue
|   | | `-IntegerLiteral 0x13b8282f0 <col:63> 'int' 0
|   | `-CompoundStmt 0x13b122f20 <col:66, line:26:5>
|   |   |-BinaryOperator 0x13b122ee8 <line:24:9, col:20> '<dependent type>' contains-errors '='
|   |   | |-CXXDependentScopeMemberExpr 0x13b122e48 <col:9, col:13> '<dependent type>' contains-errors lvalue .code
|   |   | | `-RecoveryExpr 0x13b122e20 <col:9> '<dependent type>' contains-errors lvalue
|   |   | |   `-DeclRefExpr 0x13b122e00 <col:9> 'int' lvalue Var 0x13b827508 'ret' 'int'
|   |   | `-RecoveryExpr 0x13b122ec8 <col:20> '<dependent type>' contains-errors lvalue
|   |   `-GotoStmt 0x13b122f08 <line:25:9, col:14> 'exit_func' 0x13b827c68
|   |-IfStmt 0x13b123330 <line:27:5, line:30:5>
|   | |-CallExpr 0x13b123238 <line:27:9, col:66> '<dependent type>' contains-errors
|   | | |-DeclRefExpr 0x13b123040 <col:9> 'int ()' Function 0x13b122f88 'krb5_unparse_name' 'int ()'
|   | | |-CXXDependentScopeMemberExpr 0x13b1231f0 <col:27, col:35> '<dependent type>' contains-errors lvalue ->context
|   | | | `-RecoveryExpr 0x13b1231d0 <col:27> '<dependent type>' contains-errors lvalue
|   | | |-CXXDependentScopeMemberExpr 0x13b1230e0 <col:44, col:49> '<dependent type>' contains-errors lvalue ->princ
|   | | | `-RecoveryExpr 0x13b1230c0 <col:44> '<dependent type>' contains-errors lvalue
|   | | `-UnaryOperator 0x13b123180 <col:56, col:57> 'char **' prefix '&' cannot overflow
|   | |   `-DeclRefExpr 0x13b123128 <col:57> 'char *' lvalue Var 0x13b8275a0 'prime_arg' 'char *'
|   | `-CompoundStmt 0x13b123318 <col:69, line:30:5>
|   |   `-GotoStmt 0x13b123300 <line:29:9, col:14> 'exit_func' 0x13b827c68
|   |-IfStmt 0x13c809588 <line:32:5, line:49:5> has_else
|   | |-RecoveryExpr 0x13b1239d8 <line:32:9, line:35:50> '_Bool' contains-errors
|   | |-CompoundStmt 0x13b123be8 <col:53, line:38:5>
|   | `-CompoundStmt 0x13c809578 <col:12, line:49:5>
|   |-CallExpr 0x13c809808 <line:50:5, col:19> 'void'
|   | |-ImplicitCastExpr 0x13c8097f0 <col:5> 'void (*)(void *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13c809768 <col:5> 'void (void *)' Function 0x13c8095f8 'free' 'void (void *)'
|   | `-ImplicitCastExpr 0x13c809848 <col:10> 'void *' <BitCast>
|   |   `-ImplicitCastExpr 0x13c809830 <col:10> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x13c809788 <col:10> 'char *' lvalue Var 0x13b8275a0 'prime_arg' 'char *'
|   |-LabelStmt 0x13c809a88 <line:53:1, col:10> 'exit_func'
|   | `-NullStmt 0x13c809a80 <col:10>
|   `-ReturnStmt 0x13c809ae0 <line:55:5, col:13>
|     `-UnaryOperator 0x13c809ac8 <col:12, col:13> '<dependent type>' contains-errors prefix '&' cannot overflow
|       `-RecoveryExpr 0x13c809aa8 <col:13> '<dependent type>' contains-errors lvalue
`-FunctionDecl 0x13c8095f8 <line:50:5> col:5 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x13c8096f8 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x13c8096a0 <<invalid sloc>> Implicit 873
