TranslationUnitDecl 0x12a855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12a8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12a855bd0 '__int128'
|-TypedefDecl 0x12a856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12a855bf0 'unsigned __int128'
|-TypedefDecl 0x12a926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12a926000 'struct __NSConstantString_tag'
|   `-Record 0x12a856580 '__NSConstantString_tag'
|-TypedefDecl 0x12a926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12a855d90 '__SVInt8_t'
|-TypedefDecl 0x12a926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12a855db0 '__SVInt16_t'
|-TypedefDecl 0x12a926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12a855dd0 '__SVInt32_t'
|-TypedefDecl 0x12a9263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12a855df0 '__SVInt64_t'
|-TypedefDecl 0x12a926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12a855e10 '__SVUint8_t'
|-TypedefDecl 0x12a9264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12a855e30 '__SVUint16_t'
|-TypedefDecl 0x12a926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12a855e50 '__SVUint32_t'
|-TypedefDecl 0x12a926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12a855e70 '__SVUint64_t'
|-TypedefDecl 0x12a9265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12a855e90 '__SVFloat16_t'
|-TypedefDecl 0x12a926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12a855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12a9266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12a855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12a926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12a855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12a926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12a855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12a9267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12a855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12a926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12a855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12a9268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12a855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12a926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12a855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12a926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12a855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12a9269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12a855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12a926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12a855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12a926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12a856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12a926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12a856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12a926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12a856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12a926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12a856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12a926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12a856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12a926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12a8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12a926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12a8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12a926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12a8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12a926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12a856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12a926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12a856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12a926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12a856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12a926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12a856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12a926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12a856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12a927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12a8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12a927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12a8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12a9278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12a8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12a927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12a856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12a9279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12a856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12a927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12a856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12a927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12a856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12a927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12a856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12a927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12a8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12a927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12a8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12a927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12a8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12a927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12a856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12a927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12a856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12a927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12a856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12a927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12a856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12a927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12a856390 '__SVBool_t'
|-TypedefDecl 0x12a927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12a8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12a927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12a8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12a927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12a8563f0 '__SVCount_t'
|-TypedefDecl 0x12a927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12a927fb0 'char *'
|   `-BuiltinType 0x12a8556b0 'char'
|-TypedefDecl 0x12a928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12a927fb0 'char *'
|   `-BuiltinType 0x12a8556b0 'char'
`-FunctionDecl 0x12a928310 <dataset_diviso_filec/func3164_vuln.c:1:1, line:28:1> line:1:13 invalid compactxref 'void (int *, int *, int *)' static
  |-ParmVarDecl 0x12a928128 <col:25, col:37> col:37 invalid ctx 'int *'
  |-ParmVarDecl 0x12a9281a8 <col:42, col:56> col:56 invalid doc 'int *'
  |-ParmVarDecl 0x12a928228 <col:61, col:78> col:78 referenced invalid opts 'int *'
  `-CompoundStmt 0x12a942440 <line:2:1, line:28:1>
    |-DeclStmt 0x12a9284e8 <line:3:2, col:17>
    | |-VarDecl 0x12a9283e8 <col:2, col:6> col:6 used num 'int'
    | `-VarDecl 0x12a928468 <col:2, col:11> col:11 used newnum 'int'
    |-DeclStmt 0x12a928770 <line:4:2, col:39>
    | `-VarDecl 0x12a928518 <col:2, col:38> col:6 used xref_len 'int' cinit
    |   `-CallExpr 0x12a928740 <col:17, col:38> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x12a9286e0 <col:17> 'int ()' Function 0x12a928628 'pdf_xref_len' 'int ()'
    |     |-RecoveryExpr 0x12a928700 <col:30> '<dependent type>' contains-errors lvalue
    |     `-RecoveryExpr 0x12a928720 <col:35> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x12a9287c8 <line:8:2, col:11> 'int' '='
    | |-DeclRefExpr 0x12a928788 <col:2> 'int' lvalue Var 0x12a928468 'newnum' 'int'
    | `-IntegerLiteral 0x12a9287a8 <col:11> 'int' 1
    `-ForStmt 0x12a942408 <line:9:2, line:27:2>
      |-BinaryOperator 0x12a941840 <line:9:7, col:13> 'int' '='
      | |-DeclRefExpr 0x12a941800 <col:7> 'int' lvalue Var 0x12a9283e8 'num' 'int'
      | `-IntegerLiteral 0x12a941820 <col:13> 'int' 1
      |-<<<NULL>>>
      |-BinaryOperator 0x12a9418d0 <col:16, col:22> 'int' contains-errors '<'
      | |-ImplicitCastExpr 0x12a9418a0 <col:16> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x12a941860 <col:16> 'int' lvalue Var 0x12a9283e8 'num' 'int'
      | `-ImplicitCastExpr 0x12a9418b8 <col:22> 'int' contains-errors <LValueToRValue>
      |   `-DeclRefExpr 0x12a941880 <col:22> 'int' contains-errors lvalue Var 0x12a928518 'xref_len' 'int'
      |-UnaryOperator 0x12a941910 <col:32, col:35> 'int' postfix '++'
      | `-DeclRefExpr 0x12a9418f0 <col:32> 'int' lvalue Var 0x12a9283e8 'num' 'int'
      `-CompoundStmt 0x12a9423f0 <line:10:2, line:27:2>
        `-IfStmt 0x12a9423c0 <line:12:3, line:26:3> has_else
          |-UnaryOperator 0x12a941ad0 <line:12:7, col:46> '<dependent type>' contains-errors prefix '!' cannot overflow
          | `-ImplicitCastExpr 0x12a941ab8 <col:8, col:46> '<dependent type>' contains-errors <LValueToRValue>
          |   `-ArraySubscriptExpr 0x12a941a98 <col:8, col:46> '<dependent type>' contains-errors lvalue
          |     |-ImplicitCastExpr 0x12a941a68 <col:8, col:14> '<dependent type>' contains-errors <LValueToRValue>
          |     | `-CXXDependentScopeMemberExpr 0x12a941948 <col:8, col:14> '<dependent type>' contains-errors lvalue ->use_list
          |     |   `-RecoveryExpr 0x12a941928 <col:8> '<dependent type>' contains-errors lvalue
          |     `-ImplicitCastExpr 0x12a941a80 <col:23, col:45> '<dependent type>' contains-errors <LValueToRValue>
          |       `-ArraySubscriptExpr 0x12a941a48 <col:23, col:45> '<dependent type>' contains-errors lvalue
          |         |-ImplicitCastExpr 0x12a941a18 <col:23, col:29> '<dependent type>' contains-errors <LValueToRValue>
          |         | `-CXXDependentScopeMemberExpr 0x12a9419b0 <col:23, col:29> '<dependent type>' contains-errors lvalue ->renumber_map
          |         |   `-RecoveryExpr 0x12a941990 <col:23> '<dependent type>' contains-errors lvalue
          |         `-ImplicitCastExpr 0x12a941a30 <col:42> 'int' <LValueToRValue>
          |           `-DeclRefExpr 0x12a9419f8 <col:42> 'int' lvalue Var 0x12a9283e8 'num' 'int'
          |-CompoundStmt 0x12a941c28 <line:13:3, line:15:3>
          | `-BinaryOperator 0x12a941c08 <line:14:4, col:30> '<dependent type>' contains-errors '='
          |   |-ArraySubscriptExpr 0x12a941bc8 <col:4, col:26> '<dependent type>' contains-errors lvalue
          |   | |-ImplicitCastExpr 0x12a941b98 <col:4, col:10> '<dependent type>' contains-errors <LValueToRValue>
          |   | | `-CXXDependentScopeMemberExpr 0x12a941b30 <col:4, col:10> '<dependent type>' contains-errors lvalue ->renumber_map
          |   | |   `-RecoveryExpr 0x12a941b08 <col:4> '<dependent type>' contains-errors lvalue
          |   | |     `-DeclRefExpr 0x12a941ae8 <col:4> 'int *' lvalue ParmVar 0x12a928228 'opts' 'int *'
          |   | `-ImplicitCastExpr 0x12a941bb0 <col:23> 'int' <LValueToRValue>
          |   |   `-DeclRefExpr 0x12a941b78 <col:23> 'int' lvalue Var 0x12a9283e8 'num' 'int'
          |   `-IntegerLiteral 0x12a941be8 <col:30> 'int' 0
          `-IfStmt 0x12a942390 <line:17:8, line:26:3> has_else
            |-BinaryOperator 0x12a941d38 <line:17:12, col:39> 'int' contains-errors '=='
            | |-ArraySubscriptExpr 0x12a941cf8 <col:12, col:34> '<dependent type>' contains-errors lvalue
            | | |-ImplicitCastExpr 0x12a941cc8 <col:12, col:18> '<dependent type>' contains-errors <LValueToRValue>
            | | | `-CXXDependentScopeMemberExpr 0x12a941c60 <col:12, col:18> '<dependent type>' contains-errors lvalue ->renumber_map
            | | |   `-RecoveryExpr 0x12a941c40 <col:12> '<dependent type>' contains-errors lvalue
            | | `-ImplicitCastExpr 0x12a941ce0 <col:31> 'int' <LValueToRValue>
            | |   `-DeclRefExpr 0x12a941ca8 <col:31> 'int' lvalue Var 0x12a9283e8 'num' 'int'
            | `-DeclRefExpr 0x12a941d18 <col:39> 'int' lvalue Var 0x12a9283e8 'num' 'int'
            |-CompoundStmt 0x12a9420a8 <line:18:3, line:21:3>
            | |-BinaryOperator 0x12a941f30 <line:19:4, col:63> '<dependent type>' contains-errors '='
            | | |-ArraySubscriptExpr 0x12a941e38 <col:4, col:33> '<dependent type>' contains-errors lvalue
            | | | |-ImplicitCastExpr 0x12a941e08 <col:4, col:10> '<dependent type>' contains-errors <LValueToRValue>
            | | | | `-CXXDependentScopeMemberExpr 0x12a941da0 <col:4, col:10> '<dependent type>' contains-errors lvalue ->rev_renumber_map
            | | | |   `-RecoveryExpr 0x12a941d78 <col:4> '<dependent type>' contains-errors lvalue
            | | | |     `-DeclRefExpr 0x12a941d58 <col:4> 'int *' lvalue ParmVar 0x12a928228 'opts' 'int *'
            | | | `-ImplicitCastExpr 0x12a941e20 <col:27> 'int' <LValueToRValue>
            | | |   `-DeclRefExpr 0x12a941de8 <col:27> 'int' lvalue Var 0x12a928468 'newnum' 'int'
            | | `-ArraySubscriptExpr 0x12a941f10 <col:37, col:63> '<dependent type>' contains-errors lvalue
            | |   |-ImplicitCastExpr 0x12a941ee0 <col:37, col:43> '<dependent type>' contains-errors <LValueToRValue>
            | |   | `-CXXDependentScopeMemberExpr 0x12a941e78 <col:37, col:43> '<dependent type>' contains-errors lvalue ->rev_renumber_map
            | |   |   `-RecoveryExpr 0x12a941e58 <col:37> '<dependent type>' contains-errors lvalue
            | |   `-ImplicitCastExpr 0x12a941ef8 <col:60> 'int' <LValueToRValue>
            | |     `-DeclRefExpr 0x12a941ec0 <col:60> 'int' lvalue Var 0x12a9283e8 'num' 'int'
            | `-BinaryOperator 0x12a942088 <line:20:4, col:36> '<dependent type>' contains-errors '='
            |   |-ArraySubscriptExpr 0x12a942030 <col:4, col:26> '<dependent type>' contains-errors lvalue
            |   | |-ImplicitCastExpr 0x12a942000 <col:4, col:10> '<dependent type>' contains-errors <LValueToRValue>
            |   | | `-CXXDependentScopeMemberExpr 0x12a941f98 <col:4, col:10> '<dependent type>' contains-errors lvalue ->renumber_map
            |   | |   `-RecoveryExpr 0x12a941f70 <col:4> '<dependent type>' contains-errors lvalue
            |   | |     `-DeclRefExpr 0x12a941f50 <col:4> 'int *' lvalue ParmVar 0x12a928228 'opts' 'int *'
            |   | `-ImplicitCastExpr 0x12a942018 <col:23> 'int' <LValueToRValue>
            |   |   `-DeclRefExpr 0x12a941fe0 <col:23> 'int' lvalue Var 0x12a9283e8 'num' 'int'
            |   `-UnaryOperator 0x12a942070 <col:30, col:36> 'int' postfix '++'
            |     `-DeclRefExpr 0x12a942050 <col:30> 'int' lvalue Var 0x12a928468 'newnum' 'int'
            `-CompoundStmt 0x12a942378 <line:24:3, line:26:3>
              `-BinaryOperator 0x12a942358 <line:25:4, col:72> '<dependent type>' contains-errors '='
                |-ArraySubscriptExpr 0x12a9421a8 <col:4, col:26> '<dependent type>' contains-errors lvalue
                | |-ImplicitCastExpr 0x12a942178 <col:4, col:10> '<dependent type>' contains-errors <LValueToRValue>
                | | `-CXXDependentScopeMemberExpr 0x12a942110 <col:4, col:10> '<dependent type>' contains-errors lvalue ->renumber_map
                | |   `-RecoveryExpr 0x12a9420e8 <col:4> '<dependent type>' contains-errors lvalue
                | |     `-DeclRefExpr 0x12a9420c8 <col:4> 'int *' lvalue ParmVar 0x12a928228 'opts' 'int *'
                | `-ImplicitCastExpr 0x12a942190 <col:23> 'int' <LValueToRValue>
                |   `-DeclRefExpr 0x12a942158 <col:23> 'int' lvalue Var 0x12a9283e8 'num' 'int'
                `-ArraySubscriptExpr 0x12a942338 <col:30, col:72> '<dependent type>' contains-errors lvalue
                  |-ImplicitCastExpr 0x12a942308 <col:30, col:36> '<dependent type>' contains-errors <LValueToRValue>
                  | `-CXXDependentScopeMemberExpr 0x12a9421e8 <col:30, col:36> '<dependent type>' contains-errors lvalue ->renumber_map
                  |   `-RecoveryExpr 0x12a9421c8 <col:30> '<dependent type>' contains-errors lvalue
                  `-ImplicitCastExpr 0x12a942320 <col:49, col:71> '<dependent type>' contains-errors <LValueToRValue>
                    `-ArraySubscriptExpr 0x12a9422e8 <col:49, col:71> '<dependent type>' contains-errors lvalue
                      |-ImplicitCastExpr 0x12a9422b8 <col:49, col:55> '<dependent type>' contains-errors <LValueToRValue>
                      | `-CXXDependentScopeMemberExpr 0x12a942250 <col:49, col:55> '<dependent type>' contains-errors lvalue ->renumber_map
                      |   `-RecoveryExpr 0x12a942230 <col:49> '<dependent type>' contains-errors lvalue
                      `-ImplicitCastExpr 0x12a9422d0 <col:68> 'int' <LValueToRValue>
                        `-DeclRefExpr 0x12a942298 <col:68> 'int' lvalue Var 0x12a9283e8 'num' 'int'
