TranslationUnitDecl 0x123855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1238564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x123855bd0 '__int128'
|-TypedefDecl 0x123856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x123855bf0 'unsigned __int128'
|-TypedefDecl 0x123926a30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x123926800 'struct __NSConstantString_tag'
|   `-Record 0x123856580 '__NSConstantString_tag'
|-TypedefDecl 0x123926a98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x123855d90 '__SVInt8_t'
|-TypedefDecl 0x123926b00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x123855db0 '__SVInt16_t'
|-TypedefDecl 0x123926b68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x123855dd0 '__SVInt32_t'
|-TypedefDecl 0x123926bd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x123855df0 '__SVInt64_t'
|-TypedefDecl 0x123926c38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x123855e10 '__SVUint8_t'
|-TypedefDecl 0x123926ca0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x123855e30 '__SVUint16_t'
|-TypedefDecl 0x123926d08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x123855e50 '__SVUint32_t'
|-TypedefDecl 0x123926d70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x123855e70 '__SVUint64_t'
|-TypedefDecl 0x123926dd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x123855e90 '__SVFloat16_t'
|-TypedefDecl 0x123926e40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x123855eb0 '__SVFloat32_t'
|-TypedefDecl 0x123926ea8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x123855ed0 '__SVFloat64_t'
|-TypedefDecl 0x123926f10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x123855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x123926f78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x123855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x123926fe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x123855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x123927048 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x123855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1239270b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x123855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x123927118 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x123855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x123927180 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x123855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1239271e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x123855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x123927250 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x123855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1239272b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x123856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x123927320 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x123856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x123927388 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x123856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1239273f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x123856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x123927458 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x123856090 '__clang_svint8x3_t'
|-TypedefDecl 0x1239274c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1238560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x123927528 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1238560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x123927590 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1238560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x1239275f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x123856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x123927660 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x123856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x1239276c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x123856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x123927730 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x123856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x123927798 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x123856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x123928000 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1238561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x123928068 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1238561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1239280d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1238561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x123928138 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x123856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1239281a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x123856230 '__clang_svint16x4_t'
|-TypedefDecl 0x123928208 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x123856250 '__clang_svint32x4_t'
|-TypedefDecl 0x123928270 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x123856270 '__clang_svint64x4_t'
|-TypedefDecl 0x1239282d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x123856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x123928340 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1238562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1239283a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1238562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x123928410 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1238562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x123928478 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x123856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1239284e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x123856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x123928548 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x123856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1239285b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x123856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x123928618 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x123856390 '__SVBool_t'
|-TypedefDecl 0x123928680 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1238563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1239286e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1238563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x123928750 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1238563f0 '__SVCount_t'
|-TypedefDecl 0x1239287f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1239287b0 'char *'
|   `-BuiltinType 0x1238556b0 'char'
|-TypedefDecl 0x123928868 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1239287b0 'char *'
|   `-BuiltinType 0x1238556b0 'char'
|-FunctionDecl 0x1239289f8 <dataset_diviso_filec/func10630_vuln.c:1:1, line:65:1> line:1:12 invalid b_unpack 'int (int *)' static
| |-ParmVarDecl 0x123928928 <col:22, col:33> col:33 invalid L 'int *'
| `-CompoundStmt 0x123947400 <col:36, line:65:1>
|   |-DeclStmt 0x123928d10 <line:3:3, col:43>
|   | `-VarDecl 0x123928ac0 <col:3, col:42> col:15 used fmt 'const char *' cinit
|   |   `-CallExpr 0x123928ce0 <col:21, col:42> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x123928c80 <col:21> 'int ()' Function 0x123928bc8 'luaL_checkstring' 'int ()'
|   |     |-RecoveryExpr 0x123928ca0 <col:38> '<dependent type>' contains-errors lvalue
|   |     `-IntegerLiteral 0x123928cc0 <col:41> 'int' 1
|   |-UnaryExprOrTypeTraitExpr 0x123928d80 <line:4:3, col:10> 'unsigned long' contains-errors sizeof
|   | `-RecoveryExpr 0x123928d60 <col:10> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x123942038 <line:5:3, col:50>
|   | `-VarDecl 0x123928db8 <col:3, col:49> col:15 used data 'const char *' cinit
|   |   `-CallExpr 0x123942000 <col:22, col:49> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x123928f00 <col:22> 'int ()' Function 0x123928e48 'luaL_checklstring' 'int ()'
|   |     |-RecoveryExpr 0x123928f20 <col:40> '<dependent type>' contains-errors lvalue
|   |     |-IntegerLiteral 0x123928f40 <col:43> 'int' 2
|   |     `-UnaryOperator 0x123928fe8 <col:46, col:47> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |       `-RecoveryExpr 0x123928fc8 <col:47> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x1239422c0 <line:6:3, col:43> 'unsigned long' contains-errors '='
|   | |-UnaryExprOrTypeTraitExpr 0x1239422a0 <col:3, col:10> 'unsigned long' contains-errors sizeof
|   | | `-RecoveryExpr 0x123942280 <col:10> '<dependent type>' contains-errors lvalue
|   | `-BinaryOperator 0x123942240 <col:16, col:43> '<dependent type>' contains-errors '-'
|   |   |-CallExpr 0x1239421e8 <col:16, col:39> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x123942168 <col:16> 'int ()' Function 0x1239420b0 'luaL_optinteger' 'int ()'
|   |   | |-RecoveryExpr 0x123942188 <col:32> '<dependent type>' contains-errors lvalue
|   |   | |-IntegerLiteral 0x1239421a8 <col:35> 'int' 3
|   |   | `-IntegerLiteral 0x1239421c8 <col:38> 'int' 1
|   |   `-IntegerLiteral 0x123942220 <col:43> 'int' 1
|   |-CallExpr 0x123942470 <line:7:3, col:20> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x1239423c0 <col:3> 'int ()' Function 0x123942308 'defaultoptions' 'int ()'
|   | `-UnaryOperator 0x123942458 <col:18, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   `-RecoveryExpr 0x123942438 <col:19> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x1239425d8 <line:8:3, col:18> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x123942578 <col:3> 'int ()' Function 0x1239424c0 'lua_settop' 'int ()'
|   | |-RecoveryExpr 0x123942598 <col:14> '<dependent type>' contains-errors lvalue
|   | `-IntegerLiteral 0x1239425b8 <col:17> 'int' 2
|   |-WhileStmt 0x123947108 <line:9:3, line:62:3>
|   | |-ImplicitCastExpr 0x123942658 <line:9:10, col:11> 'char' contains-errors <LValueToRValue>
|   | | `-UnaryOperator 0x123942640 <col:10, col:11> 'const char' contains-errors lvalue prefix '*' cannot overflow
|   | |   `-ImplicitCastExpr 0x123942628 <col:11> 'const char *' contains-errors <LValueToRValue>
|   | |     `-DeclRefExpr 0x123942608 <col:11> 'const char *' contains-errors lvalue Var 0x123928ac0 'fmt' 'const char *'
|   | `-CompoundStmt 0x1239470d8 <col:16, line:62:3>
|   |   |-DeclStmt 0x123942770 <line:10:5, col:21>
|   |   | `-VarDecl 0x123942688 <col:5, col:19> col:9 used opt 'int' cinit
|   |   |   `-ImplicitCastExpr 0x123942758 <col:15, col:19> 'int' contains-errors <IntegralCast>
|   |   |     `-ImplicitCastExpr 0x123942740 <col:15, col:19> 'char' contains-errors <LValueToRValue>
|   |   |       `-UnaryOperator 0x123942728 <col:15, col:19> 'const char' contains-errors lvalue prefix '*' cannot overflow
|   |   |         `-UnaryOperator 0x123942710 <col:16, col:19> 'const char *' contains-errors postfix '++'
|   |   |           `-DeclRefExpr 0x1239426f0 <col:16> 'const char *' contains-errors lvalue Var 0x123928ac0 'fmt' 'const char *'
|   |   |-BinaryOperator 0x123942a00 <line:11:5, col:39> 'unsigned long' contains-errors '='
|   |   | |-UnaryExprOrTypeTraitExpr 0x1239429e0 <col:5, col:12> 'unsigned long' contains-errors sizeof
|   |   | | `-RecoveryExpr 0x1239429c0 <col:12> '<dependent type>' contains-errors lvalue
|   |   | `-CallExpr 0x123942968 <col:19, col:39> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x1239428a0 <col:19> 'int ()' Function 0x1239427e8 'optsize' 'int ()'
|   |   |   |-RecoveryExpr 0x1239428c0 <col:27> '<dependent type>' contains-errors lvalue
|   |   |   |-DeclRefExpr 0x1239428e0 <col:30> 'int' contains-errors lvalue Var 0x123942688 'opt' 'int'
|   |   |   `-UnaryOperator 0x123942950 <col:35, col:36> 'const char **' contains-errors prefix '&' cannot overflow
|   |   |     `-DeclRefExpr 0x123942900 <col:36> 'const char *' contains-errors lvalue Var 0x123928ac0 'fmt' 'const char *'
|   |   |-CallExpr 0x123942ee0 <line:14:5, col:32> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x123942e60 <col:5> 'int ()' Function 0x123942da8 'luaL_checkstack' 'int ()'
|   |   | |-RecoveryExpr 0x123942e80 <col:21> '<dependent type>' contains-errors lvalue
|   |   | |-IntegerLiteral 0x123942ea0 <col:24> 'int' 1
|   |   | `-StringLiteral 0x123942ec0 <col:27> 'char[4]' lvalue "STR"
|   |   `-SwitchStmt 0x123942f50 <line:15:5, line:60:5>
|   |     |-ImplicitCastExpr 0x123942f38 <line:15:13> 'int' contains-errors <LValueToRValue>
|   |     | `-DeclRefExpr 0x123942f18 <col:13> 'int' contains-errors lvalue Var 0x123942688 'opt' 'int'
|   |     `-CompoundStmt 0x123947090 <col:18, line:60:5>
|   |       |-CaseStmt 0x123942fa8 <line:16:7, line:22:7>
|   |       | |-ConstantExpr 0x123942f90 <line:16:12> 'int'
|   |       | | `-CharacterLiteral 0x123942f78 <col:12> 'int' 98
|   |       | `-CaseStmt 0x123943000 <col:17, line:22:7>
|   |       |   |-ConstantExpr 0x123942fe8 <line:16:22> 'int'
|   |       |   | `-CharacterLiteral 0x123942fd0 <col:22> 'int' 66
|   |       |   `-CaseStmt 0x123943058 <col:27, line:22:7>
|   |       |     |-ConstantExpr 0x123943040 <line:16:32> 'int'
|   |       |     | `-CharacterLiteral 0x123943028 <col:32> 'int' 104
|   |       |     `-CaseStmt 0x1239430b0 <col:37, line:22:7>
|   |       |       |-ConstantExpr 0x123943098 <line:16:42> 'int'
|   |       |       | `-CharacterLiteral 0x123943080 <col:42> 'int' 72
|   |       |       `-CaseStmt 0x123943108 <line:17:7, line:22:7>
|   |       |         |-ConstantExpr 0x1239430f0 <line:17:12> 'int'
|   |       |         | `-CharacterLiteral 0x1239430d8 <col:12> 'int' 108
|   |       |         `-CaseStmt 0x123943160 <col:17, line:22:7>
|   |       |           |-ConstantExpr 0x123943148 <line:17:22> 'int'
|   |       |           | `-CharacterLiteral 0x123943130 <col:22> 'int' 76
|   |       |           `-CaseStmt 0x1239431b8 <col:27, line:22:7>
|   |       |             |-ConstantExpr 0x1239431a0 <line:17:32> 'int'
|   |       |             | `-CharacterLiteral 0x123943188 <col:32> 'int' 84
|   |       |             `-CaseStmt 0x123943210 <col:37, line:22:7>
|   |       |               |-ConstantExpr 0x1239431f8 <line:17:42> 'int'
|   |       |               | `-CharacterLiteral 0x1239431e0 <col:42> 'int' 105
|   |       |               `-CaseStmt 0x123943268 <col:48, line:22:7>
|   |       |                 |-ConstantExpr 0x123943250 <line:17:53> 'int'
|   |       |                 | `-CharacterLiteral 0x123943238 <col:53> 'int' 73
|   |       |                 `-CompoundStmt 0x123943718 <col:58, line:22:7>
|   |       |                   |-DeclStmt 0x1239435d8 <line:18:9, col:36>
|   |       |                   | `-VarDecl 0x1239432a8 <col:9, col:35> col:13 issigned 'int' cinit
|   |       |                   |   `-CallExpr 0x123943598 <col:24, col:35> 'int' contains-errors
|   |       |                   |     |-ImplicitCastExpr 0x123943580 <col:24> 'int (*)(int)' <FunctionToPointerDecay>
|   |       |                   |     | `-DeclRefExpr 0x123943508 <col:24> 'int (int)' Function 0x123943348 'islower' 'int (int)'
|   |       |                   |     `-ImplicitCastExpr 0x1239435c0 <col:32> 'int' contains-errors <LValueToRValue>
|   |       |                   |       `-DeclRefExpr 0x123943528 <col:32> 'int' contains-errors lvalue Var 0x123942688 'opt' 'int'
|   |       |                   `-BreakStmt 0x123943710 <line:21:9>
|   |       |-CaseStmt 0x123943768 <line:23:7, line:25:7>
|   |       | |-ConstantExpr 0x123943750 <line:23:12> 'int'
|   |       | | `-CharacterLiteral 0x123943738 <col:12> 'int' 120
|   |       | `-CompoundStmt 0x123943798 <col:17, line:25:7>
|   |       |   `-BreakStmt 0x123943790 <line:24:9>
|   |       |-CaseStmt 0x1239437e0 <line:26:7, line:32:7>
|   |       | |-ConstantExpr 0x1239437c8 <line:26:12> 'int'
|   |       | | `-CharacterLiteral 0x1239437b0 <col:12> 'int' 102
|   |       | `-CompoundStmt 0x123943e88 <col:17, line:32:7>
|   |       |   |-DeclStmt 0x123943888 <line:27:9, col:16>
|   |       |   | `-VarDecl 0x123943820 <col:9, col:15> col:15 used f 'float'
|   |       |   |-CallExpr 0x123943e50 <line:30:9, col:28> '<dependent type>' contains-errors
|   |       |   | |-DeclRefExpr 0x123943df0 <col:9> 'int ()' Function 0x123943618 'lua_pushnumber' 'int ()'
|   |       |   | |-RecoveryExpr 0x123943e10 <col:24> '<dependent type>' contains-errors lvalue
|   |       |   | `-DeclRefExpr 0x123943e30 <col:27> 'float' lvalue Var 0x123943820 'f' 'float'
|   |       |   `-BreakStmt 0x123943e80 <line:31:9>
|   |       |-CaseStmt 0x123943ee0 <line:33:7, line:39:7>
|   |       | |-ConstantExpr 0x123943ec8 <line:33:12> 'int'
|   |       | | `-CharacterLiteral 0x123943eb0 <col:12> 'int' 100
|   |       | `-CompoundStmt 0x1239457f8 <col:17, line:39:7>
|   |       |   |-DeclStmt 0x123943f88 <line:34:9, col:17>
|   |       |   | `-VarDecl 0x123943f20 <col:9, col:16> col:16 used d 'double'
|   |       |   |-CallExpr 0x1239457c0 <line:37:9, col:28> '<dependent type>' contains-errors
|   |       |   | |-DeclRefExpr 0x123945760 <col:9> 'int ()' Function 0x123943618 'lua_pushnumber' 'int ()'
|   |       |   | |-RecoveryExpr 0x123945780 <col:24> '<dependent type>' contains-errors lvalue
|   |       |   | `-DeclRefExpr 0x1239457a0 <col:27> 'double' lvalue Var 0x123943f20 'd' 'double'
|   |       |   `-BreakStmt 0x1239457f0 <line:38:9>
|   |       |-CaseStmt 0x123945850 <line:40:7, line:50:7>
|   |       | |-ConstantExpr 0x123945838 <line:40:12> 'int'
|   |       | | `-CharacterLiteral 0x123945820 <col:12> 'int' 99
|   |       | `-CompoundStmt 0x1239460e8 <col:17, line:50:7>
|   |       |   |-IfStmt 0x123945f80 <line:41:9, line:47:9>
|   |       |   | |-RecoveryExpr 0x123945898 <line:41:13, col:21> '_Bool' contains-errors
|   |       |   | `-CompoundStmt 0x123945f60 <col:24, line:47:9>
|   |       |   |   |-IfStmt 0x123945bc8 <line:42:11, line:43:32>
|   |       |   |   | |-UnaryOperator 0x123945a40 <line:42:15, col:34> '<dependent type>' contains-errors prefix '!' cannot overflow
|   |       |   |   | | `-CallExpr 0x123945a10 <col:16, col:34> '<dependent type>' contains-errors
|   |       |   |   | |   |-DeclRefExpr 0x123945998 <col:16> 'int ()' Function 0x1239458e0 'lua_isnumber' 'int ()'
|   |       |   |   | |   |-RecoveryExpr 0x1239459b8 <col:29> '<dependent type>' contains-errors lvalue
|   |       |   |   | |   `-UnaryOperator 0x1239459f8 <col:32, col:33> 'int' prefix '-'
|   |       |   |   | |     `-IntegerLiteral 0x1239459d8 <col:33> 'int' 1
|   |       |   |   | `-CallExpr 0x123945b98 <line:43:13, col:32> '<dependent type>' contains-errors
|   |       |   |   |   |-DeclRefExpr 0x123945b38 <col:13> 'int ()' Function 0x123945a80 'luaL_error' 'int ()'
|   |       |   |   |   |-RecoveryExpr 0x123945b58 <col:24> '<dependent type>' contains-errors lvalue
|   |       |   |   |   `-StringLiteral 0x123945b78 <col:27> 'char[4]' lvalue "STR"
|   |       |   |   `-CallExpr 0x123945eb0 <line:45:11, col:23> '<dependent type>' contains-errors
|   |       |   |     |-DeclRefExpr 0x123945e50 <col:11> 'int ()' Function 0x123945d98 'lua_pop' 'int ()'
|   |       |   |     |-RecoveryExpr 0x123945e70 <col:19> '<dependent type>' contains-errors lvalue
|   |       |   |     `-IntegerLiteral 0x123945e90 <col:22> 'int' 1
|   |       |   `-BreakStmt 0x1239460e0 <line:49:9>
|   |       |-CaseStmt 0x123946138 <line:51:7, line:58:7>
|   |       | |-ConstantExpr 0x123946120 <line:51:12> 'int'
|   |       | | `-CharacterLiteral 0x123946108 <col:12> 'int' 115
|   |       | `-CompoundStmt 0x123946ec8 <col:17, line:58:7>
|   |       |   |-DeclStmt 0x1239464d0 <line:52:9, col:71>
|   |       |   | `-VarDecl 0x123946178 <col:9, col:21> col:21 used e 'const char *'
|   |       |   |-IfStmt 0x1239465b8 <line:53:9, line:54:30>
|   |       |   | |-RecoveryExpr 0x123946508 <line:53:13, col:18> '_Bool' contains-errors
|   |       |   | `-CallExpr 0x123946588 <line:54:11, col:30> '<dependent type>' contains-errors
|   |       |   |   |-DeclRefExpr 0x123946528 <col:11> 'int ()' Function 0x123945a80 'luaL_error' 'int ()'
|   |       |   |   |-RecoveryExpr 0x123946548 <col:22> '<dependent type>' contains-errors lvalue
|   |       |   |   `-StringLiteral 0x123946568 <col:25> 'char[4]' lvalue "STR"
|   |       |   `-BreakStmt 0x123946ec0 <line:57:9>
|   |       `-DefaultStmt 0x123947070 <line:59:7, col:14>
|   |         `-NullStmt 0x123947068 <col:14>
|   `-ReturnStmt 0x1239473f0 <line:64:3, col:26>
|     `-BinaryOperator 0x1239473d0 <col:10, col:26> '<dependent type>' contains-errors '-'
|       |-CallExpr 0x123947388 <col:10, col:22> '<dependent type>' contains-errors
|       | |-DeclRefExpr 0x123947348 <col:10> 'int ()' Function 0x123947290 'lua_gettop' 'int ()'
|       | `-RecoveryExpr 0x123947368 <col:21> '<dependent type>' contains-errors lvalue
|       `-IntegerLiteral 0x1239473b0 <col:26> 'int' 2
|-FunctionDecl 0x123943348 <line:18:24> col:24 implicit used islower 'int (int)' extern
| |-ParmVarDecl 0x123943448 <<invalid sloc>> <invalid sloc> 'int'
| |-BuiltinAttr 0x1239433f0 <<invalid sloc>> Implicit 926
| |-NoThrowAttr 0x1239434b8 <col:24> Implicit
| `-PureAttr 0x1239434e0 <col:24> Implicit
|-FunctionDecl 0x123943918 <line:28:9> col:9 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
| |-ParmVarDecl 0x123943a18 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x123943a80 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x123943ae8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x1239439c0 <<invalid sloc>> Implicit 882
`-FunctionDecl 0x123946228 <line:52:39> col:39 implicit used memchr 'void *(const void *, int, unsigned long)' extern
  |-ParmVarDecl 0x123946328 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x123946390 <<invalid sloc>> <invalid sloc> 'int'
  |-ParmVarDecl 0x1239463f8 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x1239462d0 <<invalid sloc>> Implicit 892
