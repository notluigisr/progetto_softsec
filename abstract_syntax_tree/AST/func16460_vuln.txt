TranslationUnitDecl 0x13d855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13d8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13d855bd0 '__int128'
|-TypedefDecl 0x13d856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13d855bf0 'unsigned __int128'
|-TypedefDecl 0x13d91a030 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13d919e00 'struct __NSConstantString_tag'
|   `-Record 0x13d856580 '__NSConstantString_tag'
|-TypedefDecl 0x13d91a098 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13d855d90 '__SVInt8_t'
|-TypedefDecl 0x13d91a100 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13d855db0 '__SVInt16_t'
|-TypedefDecl 0x13d91a168 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13d855dd0 '__SVInt32_t'
|-TypedefDecl 0x13d91a1d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13d855df0 '__SVInt64_t'
|-TypedefDecl 0x13d91a238 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13d855e10 '__SVUint8_t'
|-TypedefDecl 0x13d91a2a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13d855e30 '__SVUint16_t'
|-TypedefDecl 0x13d91a308 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13d855e50 '__SVUint32_t'
|-TypedefDecl 0x13d91a370 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13d855e70 '__SVUint64_t'
|-TypedefDecl 0x13d91a3d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13d855e90 '__SVFloat16_t'
|-TypedefDecl 0x13d91a440 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13d855eb0 '__SVFloat32_t'
|-TypedefDecl 0x13d91a4a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13d855ed0 '__SVFloat64_t'
|-TypedefDecl 0x13d91a510 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13d855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13d91a578 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13d855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13d91a5e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13d855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13d91a648 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13d855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13d91a6b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13d855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13d91a718 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13d855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13d91a780 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13d855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13d91a7e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13d855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13d91a850 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13d855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13d91a8b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13d856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13d91a920 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13d856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13d91a988 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13d856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13d91a9f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13d856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13d91aa58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13d856090 '__clang_svint8x3_t'
|-TypedefDecl 0x13d91aac0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13d8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13d91ab28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13d8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13d91ab90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13d8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13d91abf8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13d856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13d91ac60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13d856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13d91acc8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13d856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13d91ad30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13d856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13d91ad98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13d856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13d91b600 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13d8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13d91b668 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13d8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13d91b6d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13d8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13d91b738 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13d856210 '__clang_svint8x4_t'
|-TypedefDecl 0x13d91b7a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13d856230 '__clang_svint16x4_t'
|-TypedefDecl 0x13d91b808 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13d856250 '__clang_svint32x4_t'
|-TypedefDecl 0x13d91b870 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13d856270 '__clang_svint64x4_t'
|-TypedefDecl 0x13d91b8d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13d856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13d91b940 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13d8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13d91b9a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13d8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13d91ba10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13d8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13d91ba78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13d856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13d91bae0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13d856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13d91bb48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13d856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13d91bbb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13d856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13d91bc18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13d856390 '__SVBool_t'
|-TypedefDecl 0x13d91bc80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13d8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13d91bce8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13d8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13d91bd50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13d8563f0 '__SVCount_t'
|-TypedefDecl 0x13d91bdf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13d91bdb0 'char *'
|   `-BuiltinType 0x13d8556b0 'char'
|-TypedefDecl 0x13d91be68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13d91bdb0 'char *'
|   `-BuiltinType 0x13d8556b0 'char'
|-FunctionDecl 0x13d91c088 <dataset_diviso_filec/func16460_vuln.c:1:1, line:77:2> line:1:5 invalid EC_GROUP_copy 'int (int *, const int *)'
| |-ParmVarDecl 0x13d91bf28 <col:19, col:29> col:29 referenced invalid dest 'int *'
| |-ParmVarDecl 0x13d91bfa8 <col:35, col:51> col:51 invalid src 'const int *'
| `-CompoundStmt 0x13e0179b0 <line:2:2, line:77:2>
|   |-IfStmt 0x13d91c4e0 <line:5:2, line:9:3>
|   | |-BinaryOperator 0x13d91c228 <line:5:6, col:32> 'int' contains-errors '=='
|   | | |-CXXDependentScopeMemberExpr 0x13d91c1c0 <col:6, col:18> '<dependent type>' contains-errors lvalue ->group_copy
|   | | | `-CXXDependentScopeMemberExpr 0x13d91c178 <col:6, col:12> '<dependent type>' contains-errors lvalue ->meth
|   | | |   `-RecoveryExpr 0x13d91c158 <col:6> '<dependent type>' contains-errors lvalue
|   | | `-IntegerLiteral 0x13d91c208 <col:32> 'int' 0
|   | `-CompoundStmt 0x13d91c4c0 <line:6:3, line:9:3>
|   |   |-CallExpr 0x13d91c460 <line:7:3, col:62> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x13d91c3a0 <col:3> 'int ()' Function 0x13d91c2e8 'ECerr' 'int ()'
|   |   | |-RecoveryExpr 0x13d91c420 <col:9> '<dependent type>' contains-errors lvalue
|   |   | `-RecoveryExpr 0x13d91c440 <col:29> '<dependent type>' contains-errors lvalue
|   |   `-ReturnStmt 0x13d91c4b0 <line:8:3, col:10>
|   |     `-IntegerLiteral 0x13d91c490 <col:10> 'int' 0
|   |-IfStmt 0x13d935740 <line:10:2, line:14:3>
|   | |-BinaryOperator 0x13d91c5d0 <line:10:6, col:25> 'int' contains-errors '!='
|   | | |-CXXDependentScopeMemberExpr 0x13d91c520 <col:6, col:12> '<dependent type>' contains-errors lvalue ->meth
|   | | | `-RecoveryExpr 0x13d91c500 <col:6> '<dependent type>' contains-errors lvalue
|   | | `-CXXDependentScopeMemberExpr 0x13d91c588 <col:20, col:25> '<dependent type>' contains-errors lvalue ->meth
|   | |   `-RecoveryExpr 0x13d91c568 <col:20> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x13d935720 <line:11:3, line:14:3>
|   |   |-CallExpr 0x13d9356c0 <line:12:3, col:54> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x13d935600 <col:3> 'int ()' Function 0x13d91c2e8 'ECerr' 'int ()'
|   |   | |-RecoveryExpr 0x13d935680 <col:9> '<dependent type>' contains-errors lvalue
|   |   | `-RecoveryExpr 0x13d9356a0 <col:29> '<dependent type>' contains-errors lvalue
|   |   `-ReturnStmt 0x13d935710 <line:13:3, col:10>
|   |     `-IntegerLiteral 0x13d9356f0 <col:10> 'int' 0
|   |-IfStmt 0x13d9357f0 <line:15:2, line:16:10>
|   | |-BinaryOperator 0x13d9357a0 <line:15:6, col:14> 'int' contains-errors '=='
|   | | |-RecoveryExpr 0x13d935760 <col:6> '<dependent type>' contains-errors lvalue
|   | | `-RecoveryExpr 0x13d935780 <col:14> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x13d9357e0 <line:16:3, col:10>
|   |   `-IntegerLiteral 0x13d9357c0 <col:10> 'int' 1
|   |-CallExpr 0x13d935990 <line:18:2, col:44> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x13d9358f0 <col:2> 'int ()' Function 0x13d935838 'EC_EX_DATA_free_all_data' 'int ()'
|   | `-UnaryOperator 0x13d935978 <col:27, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   `-CXXDependentScopeMemberExpr 0x13d935930 <col:28, col:34> '<dependent type>' contains-errors lvalue ->extra_data
|   |     `-RecoveryExpr 0x13d935910 <col:28> '<dependent type>' contains-errors lvalue
|   |-ForStmt 0x13d9361e0 <line:20:2, line:28:3>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x13d935ae8 <line:20:28, col:33> 'int' contains-errors '!='
|   | | |-RecoveryExpr 0x13d935aa8 <col:28> '<dependent type>' contains-errors lvalue
|   | | `-RecoveryExpr 0x13d935ac8 <col:33> '<dependent type>' contains-errors lvalue
|   | |-BinaryOperator 0x13d935c28 <col:39, col:46> '<dependent type>' contains-errors '='
|   | | |-RecoveryExpr 0x13d935ba0 <col:39> '<dependent type>' contains-errors lvalue
|   | | `-CXXDependentScopeMemberExpr 0x13d935be0 <col:43, col:46> '<dependent type>' contains-errors lvalue ->next
|   | |   `-RecoveryExpr 0x13d935bc0 <col:43> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x13d9361b8 <line:21:3, line:28:3>
|   |   |-DeclStmt 0x13d935ea8 <line:22:3, col:33>
|   |   | `-VarDecl 0x13d935c60 <col:3, col:32> col:9 used t 'void *' cinit
|   |   |   `-CallExpr 0x13d935e80 <col:13, col:32> '<dependent type>' contains-errors
|   |   |     |-CXXDependentScopeMemberExpr 0x13d935dd0 <col:13, col:16> '<dependent type>' contains-errors lvalue ->dup_func
|   |   |     | `-RecoveryExpr 0x13d935db0 <col:13> '<dependent type>' contains-errors lvalue
|   |   |     `-CXXDependentScopeMemberExpr 0x13d935e38 <col:25, col:28> '<dependent type>' contains-errors lvalue ->data
|   |   |       `-RecoveryExpr 0x13d935e18 <col:25> '<dependent type>' contains-errors lvalue
|   |   |-IfStmt 0x13d935f88 <line:24:3, line:25:11>
|   |   | |-BinaryOperator 0x13d935f38 <line:24:7, col:12> 'int' contains-errors '=='
|   |   | | |-DeclRefExpr 0x13d935ec0 <col:7> 'void *' contains-errors lvalue Var 0x13d935c60 't' 'void *'
|   |   | | `-RecoveryExpr 0x13d935f18 <col:12> '<dependent type>' contains-errors lvalue
|   |   | `-ReturnStmt 0x13d935f78 <line:25:4, col:11>
|   |   |   `-IntegerLiteral 0x13d935f58 <col:11> 'int' 0
|   |   `-IfStmt 0x13d936198 <line:26:3, line:27:11>
|   |     |-RecoveryExpr 0x13d936148 <line:26:7, col:95> '_Bool' contains-errors
|   |     `-ReturnStmt 0x13d936188 <line:27:4, col:11>
|   |       `-IntegerLiteral 0x13d936168 <col:11> 'int' 0
|   |-IfStmt 0x13e0161c0 <line:30:2, line:47:3> has_else
|   | |-RecoveryExpr 0x13d936280 <line:30:6, col:24> '_Bool' contains-errors
|   | |-CompoundStmt 0x13e015ea8 <line:31:3, line:38:3>
|   | | |-IfStmt 0x13e015c20 <line:32:3, line:36:4>
|   | | | |-RecoveryExpr 0x13d936308 <line:32:7, col:26> '_Bool' contains-errors
|   | | | `-CompoundStmt 0x13e015c00 <line:33:4, line:36:4>
|   | | |   |-BinaryOperator 0x13d936500 <line:34:4, col:39> '<dependent type>' contains-errors '='
|   | | |   | |-CXXDependentScopeMemberExpr 0x13d936370 <col:4, col:10> '<dependent type>' contains-errors lvalue ->generator
|   | | |   | | `-RecoveryExpr 0x13d936348 <col:4> '<dependent type>' contains-errors lvalue
|   | | |   | |   `-DeclRefExpr 0x13d936328 <col:4> 'int *' lvalue ParmVar 0x13d91bf28 'dest' 'int *'
|   | | |   | `-CallExpr 0x13d9364d8 <col:22, col:39> '<dependent type>' contains-errors
|   | | |   |   |-DeclRefExpr 0x13d936498 <col:22> 'int ()' Function 0x13d9363e0 'EC_POINT_new' 'int ()'
|   | | |   |   `-RecoveryExpr 0x13d9364b8 <col:35> '<dependent type>' contains-errors lvalue
|   | | |   `-IfStmt 0x13d9365d8 <line:35:4, col:40>
|   | | |     |-RecoveryExpr 0x13d936588 <col:8, col:27> '_Bool' contains-errors
|   | | |     `-ReturnStmt 0x13d9365c8 <col:33, col:40>
|   | | |       `-IntegerLiteral 0x13d9365a8 <col:40> 'int' 0
|   | | `-IfStmt 0x13e015e88 <line:37:3, col:63>
|   | |   |-UnaryOperator 0x13e015e40 <col:7, col:53> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | |   | `-CallExpr 0x13e015e10 <col:8, col:53> '<dependent type>' contains-errors
|   | |   |   |-DeclRefExpr 0x13e015d20 <col:8> 'int ()' Function 0x13e015c68 'EC_POINT_copy' 'int ()'
|   | |   |   |-CXXDependentScopeMemberExpr 0x13e015d60 <col:22, col:28> '<dependent type>' contains-errors lvalue ->generator
|   | |   |   | `-RecoveryExpr 0x13e015d40 <col:22> '<dependent type>' contains-errors lvalue
|   | |   |   `-CXXDependentScopeMemberExpr 0x13e015dc8 <col:39, col:44> '<dependent type>' contains-errors lvalue ->generator
|   | |   |     `-RecoveryExpr 0x13e015da8 <col:39> '<dependent type>' contains-errors lvalue
|   | |   `-ReturnStmt 0x13e015e78 <col:56, col:63>
|   | |     `-IntegerLiteral 0x13e015e58 <col:63> 'int' 0
|   | `-CompoundStmt 0x13e0161a8 <line:40:3, line:47:3>
|   |   `-IfStmt 0x13e016188 <line:42:3, line:46:4>
|   |     |-RecoveryExpr 0x13e015f30 <line:42:7, col:26> '_Bool' contains-errors
|   |     `-CompoundStmt 0x13e016170 <line:43:4, line:46:4>
|   |       `-CallExpr 0x13e0160b8 <line:44:4, col:39> '<dependent type>' contains-errors
|   |         |-DeclRefExpr 0x13e016030 <col:4> 'int ()' Function 0x13e015f78 'EC_POINT_clear_free' 'int ()'
|   |         `-CXXDependentScopeMemberExpr 0x13e016070 <col:24, col:30> '<dependent type>' contains-errors lvalue ->generator
|   |           `-RecoveryExpr 0x13e016050 <col:24> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x13e016468 <line:49:2, col:50>
|   | |-UnaryOperator 0x13e016420 <col:6, col:40> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-CallExpr 0x13e0163f0 <col:7, col:40> '<dependent type>' contains-errors
|   | |   |-DeclRefExpr 0x13e0162d0 <col:7> 'int ()' Function 0x13e016218 'BN_copy' 'int ()'
|   | |   |-UnaryOperator 0x13e016358 <col:15, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | |   | `-CXXDependentScopeMemberExpr 0x13e016310 <col:16, col:22> '<dependent type>' contains-errors lvalue ->order
|   | |   |   `-RecoveryExpr 0x13e0162f0 <col:16> '<dependent type>' contains-errors lvalue
|   | |   `-UnaryOperator 0x13e0163d8 <col:29, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | |     `-CXXDependentScopeMemberExpr 0x13e016390 <col:30, col:35> '<dependent type>' contains-errors lvalue ->order
|   | |       `-RecoveryExpr 0x13e016370 <col:30> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x13e016458 <col:43, col:50>
|   |   `-IntegerLiteral 0x13e016438 <col:50> 'int' 0
|   |-IfStmt 0x13e016620 <line:50:2, col:56>
|   | |-UnaryOperator 0x13e0165d8 <col:6, col:46> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-CallExpr 0x13e0165a8 <col:7, col:46> '<dependent type>' contains-errors
|   | |   |-DeclRefExpr 0x13e016488 <col:7> 'int ()' Function 0x13e016218 'BN_copy' 'int ()'
|   | |   |-UnaryOperator 0x13e016510 <col:15, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | |   | `-CXXDependentScopeMemberExpr 0x13e0164c8 <col:16, col:22> '<dependent type>' contains-errors lvalue ->cofactor
|   | |   |   `-RecoveryExpr 0x13e0164a8 <col:16> '<dependent type>' contains-errors lvalue
|   | |   `-UnaryOperator 0x13e016590 <col:32, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | |     `-CXXDependentScopeMemberExpr 0x13e016548 <col:33, col:38> '<dependent type>' contains-errors lvalue ->cofactor
|   | |       `-RecoveryExpr 0x13e016528 <col:33> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x13e016610 <col:49, col:56>
|   |   `-IntegerLiteral 0x13e0165f0 <col:56> 'int' 0
|   |-BinaryOperator 0x13e016738 <line:52:2, col:26> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x13e016688 <col:2, col:8> '<dependent type>' contains-errors lvalue ->curve_name
|   | | `-RecoveryExpr 0x13e016660 <col:2> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x13e016640 <col:2> 'int *' lvalue ParmVar 0x13d91bf28 'dest' 'int *'
|   | `-CXXDependentScopeMemberExpr 0x13e0166f0 <col:21, col:26> '<dependent type>' contains-errors lvalue ->curve_name
|   |   `-RecoveryExpr 0x13e0166d0 <col:21> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x13e016850 <line:53:2, col:26> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x13e0167a0 <col:2, col:8> '<dependent type>' contains-errors lvalue ->asn1_flag
|   | | `-RecoveryExpr 0x13e016778 <col:2> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x13e016758 <col:2> 'int *' lvalue ParmVar 0x13d91bf28 'dest' 'int *'
|   | `-CXXDependentScopeMemberExpr 0x13e016808 <col:21, col:26> '<dependent type>' contains-errors lvalue ->asn1_flag
|   |   `-RecoveryExpr 0x13e0167e8 <col:21> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x13e016968 <line:54:2, col:26> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x13e0168b8 <col:2, col:8> '<dependent type>' contains-errors lvalue ->asn1_form
|   | | `-RecoveryExpr 0x13e016890 <col:2> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x13e016870 <col:2> 'int *' lvalue ParmVar 0x13d91bf28 'dest' 'int *'
|   | `-CXXDependentScopeMemberExpr 0x13e016920 <col:21, col:26> '<dependent type>' contains-errors lvalue ->asn1_form
|   |   `-RecoveryExpr 0x13e016900 <col:21> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x13e017850 <line:56:2, line:73:3> has_else
|   | |-CXXDependentScopeMemberExpr 0x13e0169a8 <line:56:6, col:11> '<dependent type>' contains-errors lvalue ->seed
|   | | `-RecoveryExpr 0x13e016988 <col:6> '<dependent type>' contains-errors lvalue
|   | |-CompoundStmt 0x13e017560 <line:57:3, line:66:3>
|   | | |-IfStmt 0x13e016c00 <line:58:3, line:59:27>
|   | | | |-CXXDependentScopeMemberExpr 0x13e016a10 <line:58:7, col:13> '<dependent type>' contains-errors lvalue ->seed
|   | | | | `-RecoveryExpr 0x13e0169f0 <col:7> '<dependent type>' contains-errors lvalue
|   | | | `-CallExpr 0x13e016bc0 <line:59:4, col:27> '<dependent type>' contains-errors
|   | | |   |-DeclRefExpr 0x13e016b38 <col:4> 'int ()' Function 0x13e016a80 'OPENSSL_free' 'int ()'
|   | | |   `-CXXDependentScopeMemberExpr 0x13e016b78 <col:17, col:23> '<dependent type>' contains-errors lvalue ->seed
|   | | |     `-RecoveryExpr 0x13e016b58 <col:17> '<dependent type>' contains-errors lvalue
|   | | |-BinaryOperator 0x13e016e40 <line:60:3, col:44> '<dependent type>' contains-errors '='
|   | | | |-CXXDependentScopeMemberExpr 0x13e016c68 <col:3, col:9> '<dependent type>' contains-errors lvalue ->seed
|   | | | | `-RecoveryExpr 0x13e016c40 <col:3> '<dependent type>' contains-errors lvalue
|   | | | |   `-DeclRefExpr 0x13e016c20 <col:3> 'int *' lvalue ParmVar 0x13d91bf28 'dest' 'int *'
|   | | | `-CallExpr 0x13e016e18 <col:16, col:44> '<dependent type>' contains-errors
|   | | |   |-DeclRefExpr 0x13e016d90 <col:16> 'int ()' Function 0x13e016cd8 'OPENSSL_malloc' 'int ()'
|   | | |   `-CXXDependentScopeMemberExpr 0x13e016dd0 <col:31, col:36> '<dependent type>' contains-errors lvalue ->seed_len
|   | | |     `-RecoveryExpr 0x13e016db0 <col:31> '<dependent type>' contains-errors lvalue
|   | | |-IfStmt 0x13e016f18 <line:61:3, line:62:11>
|   | | | |-RecoveryExpr 0x13e016ec8 <line:61:7, col:21> '_Bool' contains-errors
|   | | | `-ReturnStmt 0x13e016f08 <line:62:4, col:11>
|   | | |   `-IntegerLiteral 0x13e016ee8 <col:11> 'int' 0
|   | | |-IfStmt 0x13e017428 <line:63:3, line:64:11>
|   | | | |-UnaryOperator 0x13e0173e0 <line:63:7, col:51> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | | | `-CallExpr 0x13e0173a8 <col:8, col:51> '<dependent type>' contains-errors
|   | | | |   |-DeclRefExpr 0x13e017208 <col:8> 'void *(void *, const void *, unsigned long)' Function 0x13e016fb8 'memcpy' 'void *(void *, const void *, unsigned long)'
|   | | | |   |-CXXDependentScopeMemberExpr 0x13e017248 <col:15, col:21> '<dependent type>' contains-errors lvalue ->seed
|   | | | |   | `-RecoveryExpr 0x13e017228 <col:15> '<dependent type>' contains-errors lvalue
|   | | | |   |-CXXDependentScopeMemberExpr 0x13e0172b0 <col:27, col:32> '<dependent type>' contains-errors lvalue ->seed
|   | | | |   | `-RecoveryExpr 0x13e017290 <col:27> '<dependent type>' contains-errors lvalue
|   | | | |   `-CXXDependentScopeMemberExpr 0x13e017318 <col:38, col:43> '<dependent type>' contains-errors lvalue ->seed_len
|   | | | |     `-RecoveryExpr 0x13e0172f8 <col:38> '<dependent type>' contains-errors lvalue
|   | | | `-ReturnStmt 0x13e017418 <line:64:4, col:11>
|   | | |   `-IntegerLiteral 0x13e0173f8 <col:11> 'int' 0
|   | | `-BinaryOperator 0x13e017540 <line:65:3, col:25> '<dependent type>' contains-errors '='
|   | |   |-CXXDependentScopeMemberExpr 0x13e017490 <col:3, col:9> '<dependent type>' contains-errors lvalue ->seed_len
|   | |   | `-RecoveryExpr 0x13e017468 <col:3> '<dependent type>' contains-errors lvalue
|   | |   |   `-DeclRefExpr 0x13e017448 <col:3> 'int *' lvalue ParmVar 0x13d91bf28 'dest' 'int *'
|   | |   `-CXXDependentScopeMemberExpr 0x13e0174f8 <col:20, col:25> '<dependent type>' contains-errors lvalue ->seed_len
|   | |     `-RecoveryExpr 0x13e0174d8 <col:20> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x13e017830 <line:68:3, line:73:3>
|   |   |-IfStmt 0x13e0176b0 <line:69:3, line:70:27>
|   |   | |-CXXDependentScopeMemberExpr 0x13e0175b8 <line:69:7, col:13> '<dependent type>' contains-errors lvalue ->seed
|   |   | | `-RecoveryExpr 0x13e017598 <col:7> '<dependent type>' contains-errors lvalue
|   |   | `-CallExpr 0x13e017688 <line:70:4, col:27> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x13e017600 <col:4> 'int ()' Function 0x13e016a80 'OPENSSL_free' 'int ()'
|   |   |   `-CXXDependentScopeMemberExpr 0x13e017640 <col:17, col:23> '<dependent type>' contains-errors lvalue ->seed
|   |   |     `-RecoveryExpr 0x13e017620 <col:17> '<dependent type>' contains-errors lvalue
|   |   `-BinaryOperator 0x13e017810 <line:72:3, col:20> '<dependent type>' contains-errors '='
|   |     |-CXXDependentScopeMemberExpr 0x13e0177a8 <col:3, col:9> '<dependent type>' contains-errors lvalue ->seed_len
|   |     | `-RecoveryExpr 0x13e017780 <col:3> '<dependent type>' contains-errors lvalue
|   |     |   `-DeclRefExpr 0x13e017760 <col:3> 'int *' lvalue ParmVar 0x13d91bf28 'dest' 'int *'
|   |     `-IntegerLiteral 0x13e0177f0 <col:20> 'int' 0
|   `-ReturnStmt 0x13e0179a0 <line:76:2, col:41>
|     `-CallExpr 0x13e017970 <col:9, col:41> '<dependent type>' contains-errors
|       |-CXXDependentScopeMemberExpr 0x13e0178e8 <col:9, col:21> '<dependent type>' contains-errors lvalue ->group_copy
|       | `-CXXDependentScopeMemberExpr 0x13e0178a0 <col:9, col:15> '<dependent type>' contains-errors lvalue ->meth
|       |   `-RecoveryExpr 0x13e017880 <col:9> '<dependent type>' contains-errors lvalue
|       |-RecoveryExpr 0x13e017930 <col:32> '<dependent type>' contains-errors lvalue
|       `-RecoveryExpr 0x13e017950 <col:38> '<dependent type>' contains-errors lvalue
`-FunctionDecl 0x13e016fb8 <line:63:8> col:8 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x13e0170b8 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x13e017120 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x13e017188 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x13e017060 <<invalid sloc>> Implicit 882
