TranslationUnitDecl 0x13e028008 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13e028eb8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13e0285d0 '__int128'
|-TypedefDecl 0x13e028f28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13e0285f0 'unsigned __int128'
|-TypedefDecl 0x13d83b630 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13d83b400 'struct __NSConstantString_tag'
|   `-Record 0x13e028f80 '__NSConstantString_tag'
|-TypedefDecl 0x13d83b698 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13e028790 '__SVInt8_t'
|-TypedefDecl 0x13d83b700 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13e0287b0 '__SVInt16_t'
|-TypedefDecl 0x13d83b768 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13e0287d0 '__SVInt32_t'
|-TypedefDecl 0x13d83b7d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13e0287f0 '__SVInt64_t'
|-TypedefDecl 0x13d83b838 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13e028810 '__SVUint8_t'
|-TypedefDecl 0x13d83b8a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13e028830 '__SVUint16_t'
|-TypedefDecl 0x13d83b908 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13e028850 '__SVUint32_t'
|-TypedefDecl 0x13d83b970 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13e028870 '__SVUint64_t'
|-TypedefDecl 0x13d83b9d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13e028890 '__SVFloat16_t'
|-TypedefDecl 0x13d83ba40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13e0288b0 '__SVFloat32_t'
|-TypedefDecl 0x13d83baa8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13e0288d0 '__SVFloat64_t'
|-TypedefDecl 0x13d83bb10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13e0288f0 '__SVBfloat16_t'
|-TypedefDecl 0x13d83bb78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13e028910 '__clang_svint8x2_t'
|-TypedefDecl 0x13d83bbe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13e028930 '__clang_svint16x2_t'
|-TypedefDecl 0x13d83bc48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13e028950 '__clang_svint32x2_t'
|-TypedefDecl 0x13d83bcb0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13e028970 '__clang_svint64x2_t'
|-TypedefDecl 0x13d83bd18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13e028990 '__clang_svuint8x2_t'
|-TypedefDecl 0x13d83bd80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13e0289b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13d83bde8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13e0289d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13d83be50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13e0289f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13d83beb8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13e028a10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13d83bf20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13e028a30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13d83bf88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13e028a50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13d83bff0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13e028a70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13d83c058 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13e028a90 '__clang_svint8x3_t'
|-TypedefDecl 0x13d83c0c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13e028ab0 '__clang_svint16x3_t'
|-TypedefDecl 0x13d83c128 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13e028ad0 '__clang_svint32x3_t'
|-TypedefDecl 0x13d83c190 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13e028af0 '__clang_svint64x3_t'
|-TypedefDecl 0x13d83c1f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13e028b10 '__clang_svuint8x3_t'
|-TypedefDecl 0x13d83c260 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13e028b30 '__clang_svuint16x3_t'
|-TypedefDecl 0x13d83c2c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13e028b50 '__clang_svuint32x3_t'
|-TypedefDecl 0x13d83c330 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13e028b70 '__clang_svuint64x3_t'
|-TypedefDecl 0x13d83c398 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13e028b90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13d83c400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13e028bb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13d83c468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13e028bd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13d83c4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13e028bf0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13d83c538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13e028c10 '__clang_svint8x4_t'
|-TypedefDecl 0x13d83c5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13e028c30 '__clang_svint16x4_t'
|-TypedefDecl 0x13d83c608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13e028c50 '__clang_svint32x4_t'
|-TypedefDecl 0x13d83c670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13e028c70 '__clang_svint64x4_t'
|-TypedefDecl 0x13d83c6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13e028c90 '__clang_svuint8x4_t'
|-TypedefDecl 0x13d83c740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13e028cb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13d83c7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13e028cd0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13d83c810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13e028cf0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13d83c878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13e028d10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13d83c8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13e028d30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13d83c948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13e028d50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13d83c9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13e028d70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13d83ca18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13e028d90 '__SVBool_t'
|-TypedefDecl 0x13d83ca80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13e028db0 '__clang_svboolx2_t'
|-TypedefDecl 0x13d83cae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13e028dd0 '__clang_svboolx4_t'
|-TypedefDecl 0x13d83cb50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13e028df0 '__SVCount_t'
|-TypedefDecl 0x13d83cbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13d83cbb0 'char *'
|   `-BuiltinType 0x13e0280b0 'char'
|-TypedefDecl 0x13d83cc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13d83cbb0 'char *'
|   `-BuiltinType 0x13e0280b0 'char'
`-FunctionDecl 0x13d83d358 <dataset_diviso_filec/func7366_vuln.c:1:1, line:41:1> line:1:12 map_freeze 'int (const union bpf_attr *)' static
  |-ParmVarDecl 0x13d83d248 <col:23, col:45> col:45 used attr 'const union bpf_attr *'
  `-CompoundStmt 0x13d857600 <line:2:1, line:41:1>
    |-DeclStmt 0x13d853fe8 <line:3:2, col:33>
    | |-VarDecl 0x13d853e68 <col:2, col:12> col:6 used err 'int' cinit
    | | `-IntegerLiteral 0x13d853ed0 <col:12> 'int' 0
    | `-VarDecl 0x13d853f08 <col:2, col:27> col:15 used ufd 'int' cinit
    |   `-RecoveryExpr 0x13d853fa8 <col:21, col:27> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x13d853f70 <col:21> 'const union bpf_attr *' lvalue ParmVar 0x13d83d248 'attr' 'const union bpf_attr *'
    |-DeclStmt 0x13d8541e8 <line:4:2, col:21>
    | |-RecordDecl 0x13d854000 <col:2, col:9> col:9 struct bpf_map
    | `-VarDecl 0x13d854168 <col:2, col:18> col:18 used map 'struct bpf_map *'
    |-DeclStmt 0x13d854378 <line:5:2, col:13>
    | |-RecordDecl 0x13d854200 <col:2, col:9> col:9 struct fd
    | `-VarDecl 0x13d8542f8 <col:2, col:12> col:12 referenced invalid f 'struct fd'
    |-IfStmt 0x13d854610 <line:7:2, line:8:11>
    | |-CallExpr 0x13d854540 <line:7:6, col:31> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x13d8544c0 <col:6> 'int ()' Function 0x13d854408 'CHECK_ATTR' 'int ()'
    | | `-RecoveryExpr 0x13d854520 <col:17> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x13d854600 <line:8:3, col:11>
    |   `-UnaryOperator 0x13d8545e8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x13d8545d0 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x13d8545b0 <col:11> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x13d854828 <line:10:2, col:15> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x13d854650 <col:2> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x13d854630 <col:2> 'struct fd' lvalue Var 0x13d8542f8 'f' 'struct fd'
    | `-CallExpr 0x13d8547e8 <col:6, col:15> 'int' contains-errors
    |   |-ImplicitCastExpr 0x13d8547d0 <col:6> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x13d854758 <col:6> 'int ()' Function 0x13d8546a0 'fdget' 'int ()'
    |   `-ImplicitCastExpr 0x13d854810 <col:12> 'int' contains-errors <LValueToRValue>
    |     `-DeclRefExpr 0x13d854778 <col:12> 'int' contains-errors lvalue Var 0x13d853f08 'ufd' 'int'
    |-BinaryOperator 0x13d8549b0 <line:11:2, col:23> 'struct bpf_map *' contains-errors '='
    | |-DeclRefExpr 0x13d854848 <col:2> 'struct bpf_map *' lvalue Var 0x13d854168 'map' 'struct bpf_map *'
    | `-CallExpr 0x13d854988 <col:8, col:23> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13d854948 <col:8> 'int ()' Function 0x13d854890 '__bpf_map_get' 'int ()'
    |   `-RecoveryExpr 0x13d854968 <col:22> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x13d854cd0 <line:12:2, line:13:21>
    | |-CallExpr 0x13d854b08 <line:12:6, col:16> 'int'
    | | |-ImplicitCastExpr 0x13d854af0 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x13d854ab0 <col:6> 'int ()' Function 0x13d8549f8 'IS_ERR' 'int ()'
    | | `-ImplicitCastExpr 0x13d854b30 <col:13> 'struct bpf_map *' <LValueToRValue>
    | |   `-DeclRefExpr 0x13d854ad0 <col:13> 'struct bpf_map *' lvalue Var 0x13d854168 'map' 'struct bpf_map *'
    | `-ReturnStmt 0x13d854cc0 <line:13:3, col:21>
    |   `-CallExpr 0x13d854c80 <col:10, col:21> 'int'
    |     |-ImplicitCastExpr 0x13d854c68 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x13d854c28 <col:10> 'int ()' Function 0x13d854b70 'PTR_ERR' 'int ()'
    |     `-ImplicitCastExpr 0x13d854ca8 <col:18> 'struct bpf_map *' <LValueToRValue>
    |       `-DeclRefExpr 0x13d854c48 <col:18> 'struct bpf_map *' lvalue Var 0x13d854168 'map' 'struct bpf_map *'
    |-IfStmt 0x13d856a38 <line:15:2, line:19:2>
    | |-BinaryOperator 0x13d856808 <line:15:6, line:16:29> 'int' contains-errors '||'
    | | |-BinaryOperator 0x13d856790 <line:15:6, col:23> 'int' contains-errors '=='
    | | | |-RecoveryExpr 0x13d854d28 <col:6, col:11> '<dependent type>' contains-errors lvalue
    | | | | `-DeclRefExpr 0x13d854cf0 <col:6> 'struct bpf_map *' lvalue Var 0x13d854168 'map' 'struct bpf_map *'
    | | | `-RecoveryExpr 0x13d856770 <col:23> '<dependent type>' contains-errors lvalue
    | | `-CallExpr 0x13d8567c8 <line:16:6, col:29> 'int'
    | |   |-ImplicitCastExpr 0x13d8567b0 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | |   | `-DeclRefExpr 0x13d8566b8 <col:6> 'int ()' Function 0x13d856600 'map_value_has_timer' 'int ()'
    | |   `-ImplicitCastExpr 0x13d8567f0 <col:26> 'struct bpf_map *' <LValueToRValue>
    | |     `-DeclRefExpr 0x13d8566d8 <col:26> 'struct bpf_map *' lvalue Var 0x13d854168 'map' 'struct bpf_map *'
    | `-CompoundStmt 0x13d856a18 <col:32, line:19:2>
    |   |-CallExpr 0x13d856948 <line:17:3, col:10> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x13d856908 <col:3> 'int ()' Function 0x13d856850 'fdput' 'int ()'
    |   | `-RecoveryExpr 0x13d856928 <col:9> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x13d856a08 <line:18:3, col:11>
    |     `-UnaryOperator 0x13d8569f0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       `-ImplicitCastExpr 0x13d8569d8 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |         `-RecoveryExpr 0x13d8569b8 <col:11> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x13d856bd0 <line:21:2, col:31> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13d856b38 <col:2> 'int ()' Function 0x13d856a80 'mutex_lock' 'int ()'
    | `-UnaryOperator 0x13d856bb8 <col:13, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x13d856b90 <col:14, col:19> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x13d856b58 <col:14> 'struct bpf_map *' lvalue Var 0x13d854168 'map' 'struct bpf_map *'
    |-IfStmt 0x13d856dd8 <line:23:2, line:26:2>
    | |-RecoveryExpr 0x13d856c30 <line:23:6, col:11> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x13d856bf8 <col:6> 'struct bpf_map *' lvalue Var 0x13d854168 'map' 'struct bpf_map *'
    | `-CompoundStmt 0x13d856db8 <col:21, line:26:2>
    |   |-BinaryOperator 0x13d856d30 <line:24:3, col:10> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x13d856c58 <col:3> 'int' lvalue Var 0x13d853e68 'err' 'int'
    |   | `-UnaryOperator 0x13d856d18 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |   `-ImplicitCastExpr 0x13d856d00 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    |   |     `-RecoveryExpr 0x13d856ce0 <col:10> '<dependent type>' contains-errors lvalue
    |   `-GotoStmt 0x13d856da0 <line:25:3, col:8> 'err_put' 0x13d856d50
    |-IfStmt 0x13d856fd0 <line:27:2, line:30:2>
    | |-CallExpr 0x13d856f58 <line:27:6, col:27> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x13d856ed8 <col:6> 'int ()' Function 0x13d856e20 'READ_ONCE' 'int ()'
    | | `-RecoveryExpr 0x13d856f30 <col:16, col:21> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x13d856ef8 <col:16> 'struct bpf_map *' lvalue Var 0x13d854168 'map' 'struct bpf_map *'
    | `-CompoundStmt 0x13d856fb8 <col:30, line:30:2>
    |   `-GotoStmt 0x13d856fa0 <line:29:3, col:8> 'err_put' 0x13d856d50
    |-IfStmt 0x13d857190 <line:31:2, line:34:2>
    | |-UnaryOperator 0x13d857128 <line:31:6, col:19> 'int' prefix '!' cannot overflow
    | | `-CallExpr 0x13d857108 <col:7, col:19> 'int'
    | |   `-ImplicitCastExpr 0x13d8570f0 <col:7> 'int (*)()' <FunctionToPointerDecay>
    | |     `-DeclRefExpr 0x13d8570d0 <col:7> 'int ()' Function 0x13d857018 'bpf_capable' 'int ()'
    | `-CompoundStmt 0x13d857178 <col:22, line:34:2>
    |   `-GotoStmt 0x13d857160 <line:33:3, col:8> 'err_put' 0x13d856d50
    |-LabelStmt 0x13d8574b0 <line:37:1, line:38:33> 'err_put'
    | `-CallExpr 0x13d857488 <col:2, col:33> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13d8573f0 <col:2> 'int ()' Function 0x13d857338 'mutex_unlock' 'int ()'
    |   `-UnaryOperator 0x13d857470 <col:15, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x13d857448 <col:16, col:21> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x13d857410 <col:16> 'struct bpf_map *' lvalue Var 0x13d854168 'map' 'struct bpf_map *'
    |-CallExpr 0x13d857510 <line:39:2, col:9> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13d8574d0 <col:2> 'int ()' Function 0x13d856850 'fdput' 'int ()'
    | `-RecoveryExpr 0x13d8574f0 <col:8> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x13d857570 <line:40:2, col:9>
      `-ImplicitCastExpr 0x13d857558 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x13d857538 <col:9> 'int' lvalue Var 0x13d853e68 'err' 'int'
