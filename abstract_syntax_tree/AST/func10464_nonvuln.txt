TranslationUnitDecl 0x12c855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12c8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12c855bd0 '__int128'
|-TypedefDecl 0x12c856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12c855bf0 'unsigned __int128'
|-TypedefDecl 0x12d00be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12d00bc00 'struct __NSConstantString_tag'
|   `-Record 0x12c856580 '__NSConstantString_tag'
|-TypedefDecl 0x12d00be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12c855d90 '__SVInt8_t'
|-TypedefDecl 0x12d00bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12c855db0 '__SVInt16_t'
|-TypedefDecl 0x12d00bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12c855dd0 '__SVInt32_t'
|-TypedefDecl 0x12d00bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12c855df0 '__SVInt64_t'
|-TypedefDecl 0x12d00c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12c855e10 '__SVUint8_t'
|-TypedefDecl 0x12d00c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12c855e30 '__SVUint16_t'
|-TypedefDecl 0x12d00c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12c855e50 '__SVUint32_t'
|-TypedefDecl 0x12d00c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12c855e70 '__SVUint64_t'
|-TypedefDecl 0x12d00c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12c855e90 '__SVFloat16_t'
|-TypedefDecl 0x12d00c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12c855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12d00c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12c855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12d00c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12c855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12d00c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12c855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12d00c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12c855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12d00c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12c855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12d00c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12c855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12d00c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12c855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12d00c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12c855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12d00c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12c855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12d00c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12c855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12d00c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12c856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12d00c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12c856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12d00c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12c856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12d00c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12c856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12d00c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12c856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12d00c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12c8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12d00c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12c8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12d00c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12c8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12d00c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12c856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12d00ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12c856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12d00cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12c856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12d00cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12c856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12d00cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12c856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12d00d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12c8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12d00d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12c8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12d00d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12c8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12d00d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12c856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12d00d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12c856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12d00d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12c856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12d00d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12c856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12d00d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12c856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12d00d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12c8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12d00d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12c8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12d00d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12c8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12d00d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12c856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12d00d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12c856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12d00d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12c856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12d00d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12c856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12d00da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12c856390 '__SVBool_t'
|-TypedefDecl 0x12d00da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12c8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12d00dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12c8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12d00db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12c8563f0 '__SVCount_t'
|-TypedefDecl 0x12d00dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12d00dbb0 'char *'
|   `-BuiltinType 0x12c8556b0 'char'
|-TypedefDecl 0x12d00dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12d00dbb0 'char *'
|   `-BuiltinType 0x12c8556b0 'char'
|-FunctionDecl 0x12d00dfa8 <dataset_diviso_filec/func10464_nonvuln.c:1:1, line:50:1> line:1:12 invalid piv_parse_discovery 'int (int *, int *, int, int)' static
| |-ParmVarDecl 0x12d00dd28 <col:32, col:43> col:43 invalid card 'int *'
| |-ParmVarDecl 0x12d00dda8 <col:49, col:54> col:54 invalid rbuf 'int *'
| |-ParmVarDecl 0x12d00de28 <col:60, col:67> col:67 invalid rbuflen 'int'
| |-ParmVarDecl 0x12d00dea8 <col:76, col:80> col:80 used aid_only 'int'
| `-CompoundStmt 0x12e009a28 <line:2:1, line:50:1>
|   |-DeclStmt 0x12d00e2e8 <line:4:2, col:11>
|   | `-VarDecl 0x12d00e260 <col:2, col:10> col:6 used r 'int' cinit
|   |   `-IntegerLiteral 0x12d00e2c8 <col:10> 'int' 0
|   |-DeclStmt 0x12d00e380 <line:5:2, col:17>
|   | `-VarDecl 0x12d00e318 <col:2, col:13> col:13 referenced invalid body 'const int *'
|   |-UnaryExprOrTypeTraitExpr 0x12c922c00 <line:6:2, col:9> 'unsigned long' contains-errors sizeof
|   | `-RecoveryExpr 0x12d00e3d0 <col:9> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x12c922ca0 <line:7:2, col:16>
|   | `-VarDecl 0x12c922c38 <col:2, col:13> col:13 referenced invalid aid 'const int *'
|   |-UnaryExprOrTypeTraitExpr 0x12c922d10 <line:8:2, col:9> 'unsigned long' contains-errors sizeof
|   | `-RecoveryExpr 0x12c922cf0 <col:9> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x12c922db0 <line:9:2, col:17>
|   | `-VarDecl 0x12c922d48 <col:2, col:13> col:13 referenced invalid pinp 'const int *'
|   |-UnaryExprOrTypeTraitExpr 0x12c922e20 <line:10:2, col:9> 'unsigned long' contains-errors sizeof
|   | `-RecoveryExpr 0x12c922e00 <col:9> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x12c922f58 <line:11:2, col:31>
|   | |-VarDecl 0x12c922e58 <col:2, col:15> col:15 used cla_out 'unsigned int'
|   | `-VarDecl 0x12c922ed8 <col:2, col:24> col:24 used tag_out 'unsigned int'
|   |-IfStmt 0x12e009830 <line:14:2, line:46:2>
|   | |-BinaryOperator 0x12c922fb0 <line:14:6, col:17> 'int' contains-errors '!='
|   | | |-RecoveryExpr 0x12c922f70 <col:6> '<dependent type>' contains-errors lvalue
|   | | `-IntegerLiteral 0x12c922f90 <col:17> 'int' 0
|   | `-CompoundStmt 0x12e009808 <col:20, line:46:2>
|   |   |-BinaryOperator 0x12c923038 <line:15:3, col:10> '<dependent type>' contains-errors '='
|   |   | |-RecoveryExpr 0x12c922ff0 <col:3> '<dependent type>' contains-errors lvalue
|   |   | | `-DeclRefExpr 0x12c922fd0 <col:3> 'const int *' lvalue Var 0x12d00e318 'body' 'const int *'
|   |   | `-RecoveryExpr 0x12c923018 <col:10> '<dependent type>' contains-errors lvalue
|   |   |-IfStmt 0x12c923690 <line:16:3, line:20:3>
|   |   | |-RecoveryExpr 0x12c923320 <line:16:7, col:80> '_Bool' contains-errors
|   |   | `-CompoundStmt 0x12c923668 <col:92, line:20:3>
|   |   |   |-CallExpr 0x12c923530 <line:17:4, col:29> '<dependent type>' contains-errors
|   |   |   | |-DeclRefExpr 0x12c923420 <col:4> 'int ()' Function 0x12c923368 'sc_log' 'int ()'
|   |   |   | |-CXXDependentScopeMemberExpr 0x12c923460 <col:11, col:17> '<dependent type>' contains-errors lvalue ->ctx
|   |   |   | | `-RecoveryExpr 0x12c923440 <col:11> '<dependent type>' contains-errors lvalue
|   |   |   | |-StringLiteral 0x12c9234f0 <col:22> 'char[4]' lvalue "STR"
|   |   |   | `-DeclRefExpr 0x12c923510 <col:28> 'int' lvalue Var 0x12d00e260 'r' 'int'
|   |   |   |-BinaryOperator 0x12c9235e0 <line:18:4, col:8> 'int' contains-errors '='
|   |   |   | |-DeclRefExpr 0x12c923568 <col:4> 'int' lvalue Var 0x12d00e260 'r' 'int'
|   |   |   | `-RecoveryExpr 0x12c9235c0 <col:8> '<dependent type>' contains-errors lvalue
|   |   |   `-GotoStmt 0x12c923650 <line:19:4, col:9> 'err' 0x12c923600
|   |   `-IfStmt 0x12e0097e8 <line:25:3, line:45:3>
|   |     |-RecoveryExpr 0x12c9238e0 <line:25:8, col:62> '_Bool' contains-errors
|   |     `-CompoundStmt 0x12e0097c8 <col:65, line:45:3>
|   |       |-IfStmt 0x12e009040 <line:28:4, line:33:4>
|   |       | |-RecoveryExpr 0x12e008ef0 <line:28:8, line:29:60> '_Bool' contains-errors
|   |       | `-CompoundStmt 0x12e009020 <col:63, line:33:4>
|   |       |   |-CallExpr 0x12e008fb8 <line:30:5, col:28> '<dependent type>' contains-errors
|   |       |   | |-DeclRefExpr 0x12e008f10 <col:5> 'int ()' Function 0x12c923368 'sc_log' 'int ()'
|   |       |   | |-CXXDependentScopeMemberExpr 0x12e008f50 <col:12, col:18> '<dependent type>' contains-errors lvalue ->ctx
|   |       |   | | `-RecoveryExpr 0x12e008f30 <col:12> '<dependent type>' contains-errors lvalue
|   |       |   | `-StringLiteral 0x12e008f98 <col:23> 'char[4]' lvalue "STR"
|   |       |   `-GotoStmt 0x12e009008 <line:32:5, col:10> 'err' 0x12c923600
|   |       `-IfStmt 0x12e0097a8 <line:34:4, line:44:4>
|   |         |-BinaryOperator 0x12e0090b8 <line:34:8, col:20> 'int' '=='
|   |         | |-ImplicitCastExpr 0x12e0090a0 <col:8> 'int' <LValueToRValue>
|   |         | | `-DeclRefExpr 0x12e009060 <col:8> 'int' lvalue ParmVar 0x12d00dea8 'aid_only' 'int'
|   |         | `-IntegerLiteral 0x12e009080 <col:20> 'int' 0
|   |         `-CompoundStmt 0x12e009790 <col:23, line:44:4>
|   |           `-IfStmt 0x12e009770 <line:36:5, line:43:5>
|   |             |-RecoveryExpr 0x12e009228 <line:36:9, col:28> '_Bool' contains-errors
|   |             `-CompoundStmt 0x12e009750 <col:31, line:43:5>
|   |               |-CallExpr 0x12e0093d8 <line:37:6, col:46> '<dependent type>' contains-errors
|   |               | |-DeclRefExpr 0x12e009248 <col:6> 'int ()' Function 0x12c923368 'sc_log' 'int ()'
|   |               | |-CXXDependentScopeMemberExpr 0x12e009288 <col:13, col:19> '<dependent type>' contains-errors lvalue ->ctx
|   |               | | `-RecoveryExpr 0x12e009268 <col:13> '<dependent type>' contains-errors lvalue
|   |               | |-StringLiteral 0x12e0092d0 <col:24> 'char[4]' lvalue "STR"
|   |               | |-UnaryOperator 0x12e009328 <col:30, col:31> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |               | | `-ImplicitCastExpr 0x12e009310 <col:31> '<dependent type>' contains-errors <LValueToRValue>
|   |               | |   `-RecoveryExpr 0x12e0092f0 <col:31> '<dependent type>' contains-errors lvalue
|   |               | `-UnaryOperator 0x12e0093c0 <col:37, col:45> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |               |   `-ParenExpr 0x12e0093a0 <col:38, col:45> '<dependent type>' contains-errors
|   |               |     `-BinaryOperator 0x12e009380 <col:39, col:44> '<dependent type>' contains-errors '+'
|   |               |       |-RecoveryExpr 0x12e009340 <col:39> '<dependent type>' contains-errors lvalue
|   |               |       `-IntegerLiteral 0x12e009360 <col:44> 'int' 1
|   |               `-IfStmt 0x12e009730 <line:39:6, line:42:6>
|   |                 |-BinaryOperator 0x12e009600 <line:39:10, col:49> 'int' contains-errors '&&'
|   |                 | |-BinaryOperator 0x12e009508 <col:10, col:28> 'int' contains-errors '=='
|   |                 | | |-ParenExpr 0x12e0094c8 <col:10, col:23> '<dependent type>' contains-errors
|   |                 | | | `-BinaryOperator 0x12e0094a8 <col:11, col:19> '<dependent type>' contains-errors '&'
|   |                 | | |   |-UnaryOperator 0x12e009470 <col:11, col:12> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |                 | | |   | `-ImplicitCastExpr 0x12e009458 <col:12> '<dependent type>' contains-errors <LValueToRValue>
|   |                 | | |   |   `-RecoveryExpr 0x12e009438 <col:12> '<dependent type>' contains-errors lvalue
|   |                 | | |   `-IntegerLiteral 0x12e009488 <col:19> 'int' 96
|   |                 | | `-IntegerLiteral 0x12e0094e8 <col:28> 'int' 96
|   |                 | `-BinaryOperator 0x12e0095e0 <col:36, col:49> 'int' contains-errors '=='
|   |                 |   |-UnaryOperator 0x12e0095a8 <col:36, col:44> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |                 |   | `-ParenExpr 0x12e009588 <col:37, col:44> '<dependent type>' contains-errors
|   |                 |   |   `-BinaryOperator 0x12e009568 <col:38, col:43> '<dependent type>' contains-errors '+'
|   |                 |   |     |-RecoveryExpr 0x12e009528 <col:38> '<dependent type>' contains-errors lvalue
|   |                 |   |     `-IntegerLiteral 0x12e009548 <col:43> 'int' 1
|   |                 |   `-IntegerLiteral 0x12e0095c0 <col:49> 'int' 32
|   |                 `-CompoundStmt 0x12e009718 <col:55, line:42:6>
|   |                   `-CallExpr 0x12e0096c8 <line:40:7, col:30> '<dependent type>' contains-errors
|   |                     |-DeclRefExpr 0x12e009620 <col:7> 'int ()' Function 0x12c923368 'sc_log' 'int ()'
|   |                     |-CXXDependentScopeMemberExpr 0x12e009660 <col:14, col:20> '<dependent type>' contains-errors lvalue ->ctx
|   |                     | `-RecoveryExpr 0x12e009640 <col:14> '<dependent type>' contains-errors lvalue
|   |                     `-StringLiteral 0x12e0096a8 <col:25> 'char[4]' lvalue "STR"
|   `-LabelStmt 0x12e009a08 <line:48:1, line:49:30> 'err'
|     `-CallExpr 0x12e0099d8 <col:2, col:30> '<dependent type>' contains-errors
|       |-DeclRefExpr 0x12e009930 <col:2> 'int ()' Function 0x12e009878 'LOG_FUNC_RETURN' 'int ()'
|       |-CXXDependentScopeMemberExpr 0x12e009970 <col:18, col:24> '<dependent type>' contains-errors lvalue ->ctx
|       | `-RecoveryExpr 0x12e009950 <col:18> '<dependent type>' contains-errors lvalue
|       `-DeclRefExpr 0x12e0099b8 <col:29> 'int' lvalue Var 0x12d00e260 'r' 'int'
`-FunctionDecl 0x12e008c00 <line:29:5> col:5 implicit used memcmp 'int (const void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x12e008d00 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x12e008d68 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x12e008dd0 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x12e008ca8 <<invalid sloc>> Implicit 883
