TranslationUnitDecl 0x152055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1520564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x152055bd0 '__int128'
|-TypedefDecl 0x152056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x152055bf0 'unsigned __int128'
|-TypedefDecl 0x15280be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15280bc00 'struct __NSConstantString_tag'
|   `-Record 0x152056580 '__NSConstantString_tag'
|-TypedefDecl 0x15280be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x152055d90 '__SVInt8_t'
|-TypedefDecl 0x15280bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x152055db0 '__SVInt16_t'
|-TypedefDecl 0x15280bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x152055dd0 '__SVInt32_t'
|-TypedefDecl 0x15280bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x152055df0 '__SVInt64_t'
|-TypedefDecl 0x15280c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x152055e10 '__SVUint8_t'
|-TypedefDecl 0x15280c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x152055e30 '__SVUint16_t'
|-TypedefDecl 0x15280c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x152055e50 '__SVUint32_t'
|-TypedefDecl 0x15280c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x152055e70 '__SVUint64_t'
|-TypedefDecl 0x15280c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x152055e90 '__SVFloat16_t'
|-TypedefDecl 0x15280c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x152055eb0 '__SVFloat32_t'
|-TypedefDecl 0x15280c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x152055ed0 '__SVFloat64_t'
|-TypedefDecl 0x15280c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x152055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15280c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x152055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15280c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x152055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15280c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x152055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15280c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x152055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15280c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x152055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15280c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x152055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15280c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x152055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15280c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x152055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15280c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x152056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15280c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x152056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15280c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x152056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15280c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x152056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15280c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x152056090 '__clang_svint8x3_t'
|-TypedefDecl 0x15280c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1520560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15280c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1520560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15280c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1520560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15280c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x152056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15280ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x152056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15280cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x152056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15280cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x152056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15280cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x152056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15280d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1520561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15280d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1520561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15280d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1520561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15280d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x152056210 '__clang_svint8x4_t'
|-TypedefDecl 0x15280d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x152056230 '__clang_svint16x4_t'
|-TypedefDecl 0x15280d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x152056250 '__clang_svint32x4_t'
|-TypedefDecl 0x15280d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x152056270 '__clang_svint64x4_t'
|-TypedefDecl 0x15280d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x152056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15280d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1520562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15280d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1520562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15280d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1520562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15280d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x152056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15280d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x152056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15280d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x152056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15280d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x152056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15280da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x152056390 '__SVBool_t'
|-TypedefDecl 0x15280da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1520563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15280dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1520563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15280db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1520563f0 '__SVCount_t'
|-TypedefDecl 0x15280dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15280dbb0 'char *'
|   `-BuiltinType 0x1520556b0 'char'
|-TypedefDecl 0x15280dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15280dbb0 'char *'
|   `-BuiltinType 0x1520556b0 'char'
|-FunctionDecl 0x15280e108 <dataset_diviso_filec/func13207_vuln.c:1:1, line:25:1> line:1:1 asn1_get_octet_der 'int (const unsigned char *, int, int *, unsigned char *, int, int *)'
| |-ParmVarDecl 0x15280dd08 <col:21, col:42> col:42 used der 'const unsigned char *'
| |-ParmVarDecl 0x15280dd88 <col:47, col:51> col:51 used der_len 'int'
| |-ParmVarDecl 0x15280de38 <line:2:7, col:12> col:12 used ret_len 'int *'
| |-ParmVarDecl 0x15280dee8 <col:21, col:36> col:36 used str 'unsigned char *'
| |-ParmVarDecl 0x15280df68 <col:41, col:45> col:45 used str_size 'int'
| |-ParmVarDecl 0x15280dfe8 <line:3:7, col:12> col:12 used str_len 'int *'
| `-CompoundStmt 0x1528275b0 <line:4:1, line:25:1>
|   |-DeclStmt 0x15280e2a8 <line:5:3, col:14>
|   | `-VarDecl 0x15280e240 <col:3, col:7> col:7 used len_len 'int'
|   |-IfStmt 0x15280e398 <line:7:3, line:8:12>
|   | |-BinaryOperator 0x15280e318 <line:7:7, col:18> 'int' '<='
|   | | |-ImplicitCastExpr 0x15280e300 <col:7> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x15280e2c0 <col:7> 'int' lvalue ParmVar 0x15280dd88 'der_len' 'int'
|   | | `-IntegerLiteral 0x15280e2e0 <col:18> 'int' 0
|   | `-ReturnStmt 0x15280e388 <line:8:5, col:12>
|   |   `-RecoveryExpr 0x15280e368 <col:12> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x152826880 <line:11:3, col:57> 'int' '='
|   | |-UnaryOperator 0x152826600 <col:3, col:4> 'int' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x15280e3d8 <col:4> 'int *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x15280e3b8 <col:4> 'int *' lvalue ParmVar 0x15280dfe8 'str_len' 'int *'
|   | `-CallExpr 0x152826818 <col:14, col:57> 'int'
|   |   |-ImplicitCastExpr 0x152826800 <col:14> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x152826730 <col:14> 'int ()' Function 0x152826678 'asn1_get_length_der' 'int ()'
|   |   |-ImplicitCastExpr 0x152826850 <col:35> 'const unsigned char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x152826750 <col:35> 'const unsigned char *' lvalue ParmVar 0x15280dd08 'der' 'const unsigned char *'
|   |   |-ImplicitCastExpr 0x152826868 <col:40> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x152826770 <col:40> 'int' lvalue ParmVar 0x15280dd88 'der_len' 'int'
|   |   `-UnaryOperator 0x1528267b0 <col:49, col:50> 'int *' prefix '&' cannot overflow
|   |     `-DeclRefExpr 0x152826790 <col:50> 'int' lvalue Var 0x15280e240 'len_len' 'int'
|   |-IfStmt 0x152826990 <line:13:3, line:14:12>
|   | |-BinaryOperator 0x152826928 <line:13:7, col:18> 'int' '<'
|   | | |-ImplicitCastExpr 0x152826910 <col:7, col:8> 'int' <LValueToRValue>
|   | | | `-UnaryOperator 0x1528268d8 <col:7, col:8> 'int' lvalue prefix '*' cannot overflow
|   | | |   `-ImplicitCastExpr 0x1528268c0 <col:8> 'int *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x1528268a0 <col:8> 'int *' lvalue ParmVar 0x15280dfe8 'str_len' 'int *'
|   | | `-IntegerLiteral 0x1528268f0 <col:18> 'int' 0
|   | `-ReturnStmt 0x152826980 <line:14:5, col:12>
|   |   `-RecoveryExpr 0x152826960 <col:12> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x152826ac0 <line:16:3, col:25> 'int' '='
|   | |-UnaryOperator 0x1528269e8 <col:3, col:4> 'int' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x1528269d0 <col:4> 'int *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1528269b0 <col:4> 'int *' lvalue ParmVar 0x15280de38 'ret_len' 'int *'
|   | `-BinaryOperator 0x152826aa0 <col:14, col:25> 'int' '+'
|   |   |-ImplicitCastExpr 0x152826a70 <col:14, col:15> 'int' <LValueToRValue>
|   |   | `-UnaryOperator 0x152826a38 <col:14, col:15> 'int' lvalue prefix '*' cannot overflow
|   |   |   `-ImplicitCastExpr 0x152826a20 <col:15> 'int *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x152826a00 <col:15> 'int *' lvalue ParmVar 0x15280dfe8 'str_len' 'int *'
|   |   `-ImplicitCastExpr 0x152826a88 <col:25> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x152826a50 <col:25> 'int' lvalue Var 0x15280e240 'len_len' 'int'
|   |-IfStmt 0x152827538 <line:17:3, line:22:5> has_else
|   | |-BinaryOperator 0x152826b80 <line:17:7, col:20> 'int' '>='
|   | | |-ImplicitCastExpr 0x152826b50 <col:7> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x152826ae0 <col:7> 'int' lvalue ParmVar 0x15280df68 'str_size' 'int'
|   | | `-ImplicitCastExpr 0x152826b68 <col:19, col:20> 'int' <LValueToRValue>
|   | |   `-UnaryOperator 0x152826b38 <col:19, col:20> 'int' lvalue prefix '*' cannot overflow
|   | |     `-ImplicitCastExpr 0x152826b20 <col:20> 'int *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x152826b00 <col:20> 'int *' lvalue ParmVar 0x15280dfe8 'str_len' 'int *'
|   | |-CallExpr 0x152827428 <line:18:5, col:41> 'void *'
|   | | |-ImplicitCastExpr 0x152827410 <col:5> 'void *(*)(void *, const void *, unsigned long)' <FunctionToPointerDecay>
|   | | | `-DeclRefExpr 0x152827290 <col:5> 'void *(void *, const void *, unsigned long)' Function 0x152827040 'memcpy' 'void *(void *, const void *, unsigned long)'
|   | | |-ImplicitCastExpr 0x152827478 <col:13> 'void *' <BitCast>
|   | | | `-ImplicitCastExpr 0x152827460 <col:13> 'unsigned char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1528272b0 <col:13> 'unsigned char *' lvalue ParmVar 0x15280dee8 'str' 'unsigned char *'
|   | | |-ImplicitCastExpr 0x152827490 <col:18, col:24> 'const void *' <BitCast>
|   | | | `-BinaryOperator 0x152827340 <col:18, col:24> 'const unsigned char *' '+'
|   | | |   |-ImplicitCastExpr 0x152827310 <col:18> 'const unsigned char *' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x1528272d0 <col:18> 'const unsigned char *' lvalue ParmVar 0x15280dd08 'der' 'const unsigned char *'
|   | | |   `-ImplicitCastExpr 0x152827328 <col:24> 'int' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x1528272f0 <col:24> 'int' lvalue Var 0x15280e240 'len_len' 'int'
|   | | `-ImplicitCastExpr 0x1528274c0 <col:33, col:34> 'unsigned long' <IntegralCast>
|   | |   `-ImplicitCastExpr 0x1528274a8 <col:33, col:34> 'int' <LValueToRValue>
|   | |     `-UnaryOperator 0x152827398 <col:33, col:34> 'int' lvalue prefix '*' cannot overflow
|   | |       `-ImplicitCastExpr 0x152827380 <col:34> 'int *' <LValueToRValue>
|   | |         `-DeclRefExpr 0x152827360 <col:34> 'int *' lvalue ParmVar 0x15280dfe8 'str_len' 'int *'
|   | `-CompoundStmt 0x152827520 <line:20:5, line:22:5>
|   |   `-ReturnStmt 0x152827510 <line:21:7, col:14>
|   |     `-RecoveryExpr 0x1528274f0 <col:14> '<dependent type>' contains-errors lvalue
|   `-ReturnStmt 0x1528275a0 <line:24:3, col:10>
|     `-RecoveryExpr 0x152827580 <col:10> '<dependent type>' contains-errors lvalue
`-FunctionDecl 0x152827040 <line:18:5> col:5 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x152827140 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x1528271a8 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x152827210 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x1528270e8 <<invalid sloc>> Implicit 882
