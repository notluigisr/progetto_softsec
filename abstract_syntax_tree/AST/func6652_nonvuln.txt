TranslationUnitDecl 0x132055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1320564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x132055bd0 '__int128'
|-TypedefDecl 0x132056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x132055bf0 'unsigned __int128'
|-TypedefDecl 0x13280be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13280bc00 'struct __NSConstantString_tag'
|   `-Record 0x132056580 '__NSConstantString_tag'
|-TypedefDecl 0x13280be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x132055d90 '__SVInt8_t'
|-TypedefDecl 0x13280bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x132055db0 '__SVInt16_t'
|-TypedefDecl 0x13280bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x132055dd0 '__SVInt32_t'
|-TypedefDecl 0x13280bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x132055df0 '__SVInt64_t'
|-TypedefDecl 0x13280c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x132055e10 '__SVUint8_t'
|-TypedefDecl 0x13280c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x132055e30 '__SVUint16_t'
|-TypedefDecl 0x13280c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x132055e50 '__SVUint32_t'
|-TypedefDecl 0x13280c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x132055e70 '__SVUint64_t'
|-TypedefDecl 0x13280c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x132055e90 '__SVFloat16_t'
|-TypedefDecl 0x13280c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x132055eb0 '__SVFloat32_t'
|-TypedefDecl 0x13280c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x132055ed0 '__SVFloat64_t'
|-TypedefDecl 0x13280c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x132055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13280c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x132055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13280c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x132055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13280c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x132055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13280c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x132055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13280c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x132055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13280c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x132055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13280c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x132055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13280c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x132055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13280c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x132056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13280c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x132056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13280c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x132056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13280c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x132056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13280c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x132056090 '__clang_svint8x3_t'
|-TypedefDecl 0x13280c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1320560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13280c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1320560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13280c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1320560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13280c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x132056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13280ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x132056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13280cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x132056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13280cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x132056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13280cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x132056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13280d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1320561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13280d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1320561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13280d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1320561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13280d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x132056210 '__clang_svint8x4_t'
|-TypedefDecl 0x13280d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x132056230 '__clang_svint16x4_t'
|-TypedefDecl 0x13280d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x132056250 '__clang_svint32x4_t'
|-TypedefDecl 0x13280d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x132056270 '__clang_svint64x4_t'
|-TypedefDecl 0x13280d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x132056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13280d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1320562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13280d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1320562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13280d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1320562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13280d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x132056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13280d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x132056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13280d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x132056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13280d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x132056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13280da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x132056390 '__SVBool_t'
|-TypedefDecl 0x13280da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1320563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13280dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1320563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13280db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1320563f0 '__SVCount_t'
|-TypedefDecl 0x13280dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13280dbb0 'char *'
|   `-BuiltinType 0x1320556b0 'char'
|-TypedefDecl 0x13280dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13280dbb0 'char *'
|   `-BuiltinType 0x1320556b0 'char'
`-FunctionDecl 0x13280de38 <dataset_diviso_filec/func6652_nonvuln.c:1:2, line:79:2> line:1:6 gzip_header 'int (const char *, int)'
  |-ParmVarDecl 0x13280dcd8 <col:18, col:30> col:30 used buf 'const char *'
  |-ParmVarDecl 0x13280dd58 <col:35, col:39> col:39 used size 'int'
  `-CompoundStmt 0x132829938 <line:2:2, line:79:2>
    |-CallExpr 0x13280e158 <line:3:3, col:26> 'int'
    | |-ImplicitCastExpr 0x13280e140 <col:3> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x13280e060 <col:3> 'int ()' Function 0x13280dfa8 'TORRENT_ASSERT' 'int ()'
    | `-BinaryOperator 0x13280e0f0 <col:18, col:25> 'int' '!='
    |   |-ImplicitCastExpr 0x13280e0c0 <col:18> 'const char *' <LValueToRValue>
    |   | `-DeclRefExpr 0x13280e080 <col:18> 'const char *' lvalue ParmVar 0x13280dcd8 'buf' 'const char *'
    |   `-ImplicitCastExpr 0x13280e0d8 <col:25> 'const char *' <NullToPointer>
    |     `-IntegerLiteral 0x13280e0a0 <col:25> 'int' 0
    |-DeclStmt 0x13280e248 <line:5:3, col:76>
    | `-VarDecl 0x13280e1c8 <col:3, col:24> col:24 used buffer 'const unsigned char *'
    |-DeclStmt 0x13280e318 <line:6:3, col:30>
    | `-VarDecl 0x13280e278 <col:3, col:26> col:13 used total_size 'const int' cinit
    |   `-ImplicitCastExpr 0x13280e300 <col:26> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x13280e2e0 <col:26> 'int' lvalue ParmVar 0x13280dd58 'size' 'int'
    |-IfStmt 0x1328278a0 <line:11:3, col:38>
    | |-BinaryOperator 0x132827838 <col:7, col:27> 'int' '||'
    | | |-BinaryOperator 0x13280e388 <col:7, col:14> 'int' '<'
    | | | |-ImplicitCastExpr 0x13280e370 <col:7> 'int' <LValueToRValue>
    | | | | `-DeclRefExpr 0x13280e330 <col:7> 'int' lvalue ParmVar 0x13280dd58 'size' 'int'
    | | | `-IntegerLiteral 0x13280e350 <col:14> 'int' 10
    | | `-BinaryOperator 0x132827818 <col:20, col:27> 'int' '=='
    | |   |-ImplicitCastExpr 0x13280e3e8 <col:20> 'const char *' <LValueToRValue>
    | |   | `-DeclRefExpr 0x13280e3a8 <col:20> 'const char *' lvalue ParmVar 0x13280dcd8 'buf' 'const char *'
    | |   `-ImplicitCastExpr 0x132827800 <col:27> 'const char *' <NullToPointer>
    | |     `-IntegerLiteral 0x13280e3c8 <col:27> 'int' 0
    | `-ReturnStmt 0x132827890 <col:30, col:38>
    |   `-UnaryOperator 0x132827878 <col:37, col:38> 'int' prefix '-'
    |     `-IntegerLiteral 0x132827858 <col:38> 'int' 1
    |-IfStmt 0x132827af8 <line:14:3, col:73>
    | |-RecoveryExpr 0x132827a90 <col:7, col:62> '_Bool' contains-errors
    | `-ReturnStmt 0x132827ae8 <col:65, col:73>
    |   `-UnaryOperator 0x132827ad0 <col:72, col:73> 'int' prefix '-'
    |     `-IntegerLiteral 0x132827ab0 <col:73> 'int' 1
    |-DeclStmt 0x132827c40 <line:16:3, col:25>
    | `-VarDecl 0x132827b30 <col:3, col:24> col:7 used method 'int' cinit
    |   `-ImplicitCastExpr 0x132827c28 <col:16, col:24> 'int' <IntegralCast>
    |     `-ImplicitCastExpr 0x132827c10 <col:16, col:24> 'unsigned char' <LValueToRValue>
    |       `-ArraySubscriptExpr 0x132827bf0 <col:16, col:24> 'const unsigned char' lvalue
    |         |-ImplicitCastExpr 0x132827bd8 <col:16> 'const unsigned char *' <LValueToRValue>
    |         | `-DeclRefExpr 0x132827b98 <col:16> 'const unsigned char *' lvalue Var 0x13280e1c8 'buffer' 'const unsigned char *'
    |         `-IntegerLiteral 0x132827bb8 <col:23> 'int' 2
    |-DeclStmt 0x132827d80 <line:17:3, col:24>
    | `-VarDecl 0x132827c70 <col:3, col:23> col:7 used flags 'int' cinit
    |   `-ImplicitCastExpr 0x132827d68 <col:15, col:23> 'int' <IntegralCast>
    |     `-ImplicitCastExpr 0x132827d50 <col:15, col:23> 'unsigned char' <LValueToRValue>
    |       `-ArraySubscriptExpr 0x132827d30 <col:15, col:23> 'const unsigned char' lvalue
    |         |-ImplicitCastExpr 0x132827d18 <col:15> 'const unsigned char *' <LValueToRValue>
    |         | `-DeclRefExpr 0x132827cd8 <col:15> 'const unsigned char *' lvalue Var 0x13280e1c8 'buffer' 'const unsigned char *'
    |         `-IntegerLiteral 0x132827cf8 <col:22> 'int' 3
    |-IfStmt 0x132827ef0 <line:21:3, col:56>
    | |-RecoveryExpr 0x132827e88 <col:7, col:45> '_Bool' contains-errors
    | `-ReturnStmt 0x132827ee0 <col:48, col:56>
    |   `-UnaryOperator 0x132827ec8 <col:55, col:56> 'int' prefix '-'
    |     `-IntegerLiteral 0x132827ea8 <col:56> 'int' 1
    |-CompoundAssignOperator 0x132827f50 <line:28:3, col:11> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
    | |-DeclRefExpr 0x132827f10 <col:3> 'int' lvalue ParmVar 0x13280dd58 'size' 'int'
    | `-IntegerLiteral 0x132827f30 <col:11> 'int' 10
    |-CompoundAssignOperator 0x132827fc0 <line:29:3, col:13> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
    | |-DeclRefExpr 0x132827f80 <col:3> 'const unsigned char *' lvalue Var 0x13280e1c8 'buffer' 'const unsigned char *'
    | `-IntegerLiteral 0x132827fa0 <col:13> 'int' 10
    |-IfStmt 0x132828778 <line:31:3, line:42:3>
    | |-BinaryOperator 0x132828068 <line:31:7, col:15> '<dependent type>' contains-errors '&'
    | | |-DeclRefExpr 0x132827ff0 <col:7> 'int' lvalue Var 0x132827c70 'flags' 'int'
    | | `-RecoveryExpr 0x132828048 <col:15> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x132828738 <line:32:3, line:42:3>
    |   |-DeclStmt 0x132828108 <line:33:4, col:17>
    |   | `-VarDecl 0x1328280a0 <col:4, col:8> col:8 used extra_len 'int'
    |   |-IfStmt 0x1328281e0 <line:35:4, col:26>
    |   | |-BinaryOperator 0x132828178 <col:8, col:15> 'int' '<'
    |   | | |-ImplicitCastExpr 0x132828160 <col:8> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x132828120 <col:8> 'int' lvalue ParmVar 0x13280dd58 'size' 'int'
    |   | | `-IntegerLiteral 0x132828140 <col:15> 'int' 2
    |   | `-ReturnStmt 0x1328281d0 <col:18, col:26>
    |   |   `-UnaryOperator 0x1328281b8 <col:25, col:26> 'int' prefix '-'
    |   |     `-IntegerLiteral 0x132828198 <col:26> 'int' 1
    |   |-BinaryOperator 0x1328283f0 <line:37:4, col:43> 'int' '='
    |   | |-DeclRefExpr 0x132828200 <col:4> 'int' lvalue Var 0x1328280a0 'extra_len' 'int'
    |   | `-BinaryOperator 0x1328283d0 <col:16, col:43> 'int' '|'
    |   |   |-ParenExpr 0x132828308 <col:16, col:31> 'int'
    |   |   | `-BinaryOperator 0x1328282e8 <col:17, col:30> 'int' '<<'
    |   |   |   |-ImplicitCastExpr 0x1328282d0 <col:17, col:25> 'int' <IntegralCast>
    |   |   |   | `-ImplicitCastExpr 0x1328282b8 <col:17, col:25> 'unsigned char' <LValueToRValue>
    |   |   |   |   `-ArraySubscriptExpr 0x132828278 <col:17, col:25> 'const unsigned char' lvalue
    |   |   |   |     |-ImplicitCastExpr 0x132828260 <col:17> 'const unsigned char *' <LValueToRValue>
    |   |   |   |     | `-DeclRefExpr 0x132828220 <col:17> 'const unsigned char *' lvalue Var 0x13280e1c8 'buffer' 'const unsigned char *'
    |   |   |   |     `-IntegerLiteral 0x132828240 <col:24> 'int' 1
    |   |   |   `-IntegerLiteral 0x132828298 <col:30> 'int' 8
    |   |   `-ImplicitCastExpr 0x1328283b8 <col:35, col:43> 'int' <IntegralCast>
    |   |     `-ImplicitCastExpr 0x1328283a0 <col:35, col:43> 'unsigned char' <LValueToRValue>
    |   |       `-ArraySubscriptExpr 0x132828380 <col:35, col:43> 'const unsigned char' lvalue
    |   |         |-ImplicitCastExpr 0x132828368 <col:35> 'const unsigned char *' <LValueToRValue>
    |   |         | `-DeclRefExpr 0x132828328 <col:35> 'const unsigned char *' lvalue Var 0x13280e1c8 'buffer' 'const unsigned char *'
    |   |         `-IntegerLiteral 0x132828348 <col:42> 'int' 0
    |   |-IfStmt 0x132828548 <line:39:4, col:38>
    |   | |-BinaryOperator 0x1328284e0 <col:8, col:27> 'int' '<'
    |   | | |-ImplicitCastExpr 0x1328284c8 <col:8> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x132828410 <col:8> 'int' lvalue ParmVar 0x13280dd58 'size' 'int'
    |   | | `-ParenExpr 0x1328284a8 <col:15, col:27> 'int'
    |   | |   `-BinaryOperator 0x132828488 <col:16, col:26> 'int' '+'
    |   | |     |-ImplicitCastExpr 0x132828470 <col:16> 'int' <LValueToRValue>
    |   | |     | `-DeclRefExpr 0x132828430 <col:16> 'int' lvalue Var 0x1328280a0 'extra_len' 'int'
    |   | |     `-IntegerLiteral 0x132828450 <col:26> 'int' 2
    |   | `-ReturnStmt 0x132828538 <col:30, col:38>
    |   |   `-UnaryOperator 0x132828520 <col:37, col:38> 'int' prefix '-'
    |   |     `-IntegerLiteral 0x132828500 <col:38> 'int' 1
    |   |-CompoundAssignOperator 0x132828620 <line:40:4, col:26> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
    |   | |-DeclRefExpr 0x132828568 <col:4> 'int' lvalue ParmVar 0x13280dd58 'size' 'int'
    |   | `-ParenExpr 0x132828600 <col:12, col:26> 'int'
    |   |   `-BinaryOperator 0x1328285e0 <col:13, col:25> 'int' '+'
    |   |     |-ImplicitCastExpr 0x1328285c8 <col:13> 'int' <LValueToRValue>
    |   |     | `-DeclRefExpr 0x132828588 <col:13> 'int' lvalue Var 0x1328280a0 'extra_len' 'int'
    |   |     `-IntegerLiteral 0x1328285a8 <col:25> 'int' 2
    |   `-CompoundAssignOperator 0x132828708 <line:41:4, col:28> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
    |     |-DeclRefExpr 0x132828650 <col:4> 'const unsigned char *' lvalue Var 0x13280e1c8 'buffer' 'const unsigned char *'
    |     `-ParenExpr 0x1328286e8 <col:14, col:28> 'int'
    |       `-BinaryOperator 0x1328286c8 <col:15, col:27> 'int' '+'
    |         |-ImplicitCastExpr 0x1328286b0 <col:15> 'int' <LValueToRValue>
    |         | `-DeclRefExpr 0x132828670 <col:15> 'int' lvalue Var 0x1328280a0 'extra_len' 'int'
    |         `-IntegerLiteral 0x132828690 <col:27> 'int' 2
    |-IfStmt 0x1328291c0 <line:44:3, line:55:3>
    | |-BinaryOperator 0x132828e20 <line:44:7, col:15> '<dependent type>' contains-errors '&'
    | | |-DeclRefExpr 0x132828798 <col:7> 'int' lvalue Var 0x132827c70 'flags' 'int'
    | | `-RecoveryExpr 0x132828e00 <col:15> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x132829190 <line:45:3, line:55:3>
    |   |-WhileStmt 0x132828fa8 <line:46:4, line:50:4>
    |   | |-BinaryOperator 0x132828ef8 <line:46:11, col:20> 'int' '&&'
    |   | | |-ImplicitCastExpr 0x132828eb0 <col:11> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x132828e40 <col:11> 'int' lvalue ParmVar 0x13280dd58 'size' 'int'
    |   | | `-ImplicitCastExpr 0x132828ee0 <col:19, col:20> 'int' <IntegralCast>
    |   | |   `-ImplicitCastExpr 0x132828ec8 <col:19, col:20> 'unsigned char' <LValueToRValue>
    |   | |     `-UnaryOperator 0x132828e98 <col:19, col:20> 'const unsigned char' lvalue prefix '*' cannot overflow
    |   | |       `-ImplicitCastExpr 0x132828e80 <col:20> 'const unsigned char *' <LValueToRValue>
    |   | |         `-DeclRefExpr 0x132828e60 <col:20> 'const unsigned char *' lvalue Var 0x13280e1c8 'buffer' 'const unsigned char *'
    |   | `-CompoundStmt 0x132828f88 <line:47:4, line:50:4>
    |   |   |-UnaryOperator 0x132828f38 <line:48:5, col:7> 'int' prefix '--'
    |   |   | `-DeclRefExpr 0x132828f18 <col:7> 'int' lvalue ParmVar 0x13280dd58 'size' 'int'
    |   |   `-UnaryOperator 0x132828f70 <line:49:5, col:7> 'const unsigned char *' prefix '++'
    |   |     `-DeclRefExpr 0x132828f50 <col:7> 'const unsigned char *' lvalue Var 0x13280e1c8 'buffer' 'const unsigned char *'
    |   |-IfStmt 0x132829100 <line:51:4, col:34>
    |   | |-BinaryOperator 0x132829098 <col:8, col:18> 'int' '||'
    |   | | |-UnaryOperator 0x132829000 <col:8, col:9> 'int' prefix '!' cannot overflow
    |   | | | `-ImplicitCastExpr 0x132828fe8 <col:9> 'int' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x132828fc8 <col:9> 'int' lvalue ParmVar 0x13280dd58 'size' 'int'
    |   | | `-ImplicitCastExpr 0x132829080 <col:17, col:18> 'int' <IntegralCast>
    |   | |   `-ImplicitCastExpr 0x132829068 <col:17, col:18> 'unsigned char' <LValueToRValue>
    |   | |     `-UnaryOperator 0x132829050 <col:17, col:18> 'const unsigned char' lvalue prefix '*' cannot overflow
    |   | |       `-ImplicitCastExpr 0x132829038 <col:18> 'const unsigned char *' <LValueToRValue>
    |   | |         `-DeclRefExpr 0x132829018 <col:18> 'const unsigned char *' lvalue Var 0x13280e1c8 'buffer' 'const unsigned char *'
    |   | `-ReturnStmt 0x1328290f0 <col:26, col:34>
    |   |   `-UnaryOperator 0x1328290d8 <col:33, col:34> 'int' prefix '-'
    |   |     `-IntegerLiteral 0x1328290b8 <col:34> 'int' 1
    |   |-UnaryOperator 0x132829140 <line:53:4, col:6> 'int' prefix '--'
    |   | `-DeclRefExpr 0x132829120 <col:6> 'int' lvalue ParmVar 0x13280dd58 'size' 'int'
    |   `-UnaryOperator 0x132829178 <line:54:4, col:6> 'const unsigned char *' prefix '++'
    |     `-DeclRefExpr 0x132829158 <col:6> 'const unsigned char *' lvalue Var 0x13280e1c8 'buffer' 'const unsigned char *'
    |-IfStmt 0x1328295f8 <line:57:3, line:68:3>
    | |-BinaryOperator 0x132829258 <line:57:7, col:15> '<dependent type>' contains-errors '&'
    | | |-DeclRefExpr 0x1328291e0 <col:7> 'int' lvalue Var 0x132827c70 'flags' 'int'
    | | `-RecoveryExpr 0x132829238 <col:15> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x1328295c8 <line:58:3, line:68:3>
    |   |-WhileStmt 0x1328293e0 <line:59:4, line:63:4>
    |   | |-BinaryOperator 0x132829330 <line:59:11, col:20> 'int' '&&'
    |   | | |-ImplicitCastExpr 0x1328292e8 <col:11> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x132829278 <col:11> 'int' lvalue ParmVar 0x13280dd58 'size' 'int'
    |   | | `-ImplicitCastExpr 0x132829318 <col:19, col:20> 'int' <IntegralCast>
    |   | |   `-ImplicitCastExpr 0x132829300 <col:19, col:20> 'unsigned char' <LValueToRValue>
    |   | |     `-UnaryOperator 0x1328292d0 <col:19, col:20> 'const unsigned char' lvalue prefix '*' cannot overflow
    |   | |       `-ImplicitCastExpr 0x1328292b8 <col:20> 'const unsigned char *' <LValueToRValue>
    |   | |         `-DeclRefExpr 0x132829298 <col:20> 'const unsigned char *' lvalue Var 0x13280e1c8 'buffer' 'const unsigned char *'
    |   | `-CompoundStmt 0x1328293c0 <line:60:4, line:63:4>
    |   |   |-UnaryOperator 0x132829370 <line:61:5, col:7> 'int' prefix '--'
    |   |   | `-DeclRefExpr 0x132829350 <col:7> 'int' lvalue ParmVar 0x13280dd58 'size' 'int'
    |   |   `-UnaryOperator 0x1328293a8 <line:62:5, col:7> 'const unsigned char *' prefix '++'
    |   |     `-DeclRefExpr 0x132829388 <col:7> 'const unsigned char *' lvalue Var 0x13280e1c8 'buffer' 'const unsigned char *'
    |   |-IfStmt 0x132829538 <line:64:4, col:34>
    |   | |-BinaryOperator 0x1328294d0 <col:8, col:18> 'int' '||'
    |   | | |-UnaryOperator 0x132829438 <col:8, col:9> 'int' prefix '!' cannot overflow
    |   | | | `-ImplicitCastExpr 0x132829420 <col:9> 'int' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x132829400 <col:9> 'int' lvalue ParmVar 0x13280dd58 'size' 'int'
    |   | | `-ImplicitCastExpr 0x1328294b8 <col:17, col:18> 'int' <IntegralCast>
    |   | |   `-ImplicitCastExpr 0x1328294a0 <col:17, col:18> 'unsigned char' <LValueToRValue>
    |   | |     `-UnaryOperator 0x132829488 <col:17, col:18> 'const unsigned char' lvalue prefix '*' cannot overflow
    |   | |       `-ImplicitCastExpr 0x132829470 <col:18> 'const unsigned char *' <LValueToRValue>
    |   | |         `-DeclRefExpr 0x132829450 <col:18> 'const unsigned char *' lvalue Var 0x13280e1c8 'buffer' 'const unsigned char *'
    |   | `-ReturnStmt 0x132829528 <col:26, col:34>
    |   |   `-UnaryOperator 0x132829510 <col:33, col:34> 'int' prefix '-'
    |   |     `-IntegerLiteral 0x1328294f0 <col:34> 'int' 1
    |   |-UnaryOperator 0x132829578 <line:66:4, col:6> 'int' prefix '--'
    |   | `-DeclRefExpr 0x132829558 <col:6> 'int' lvalue ParmVar 0x13280dd58 'size' 'int'
    |   `-UnaryOperator 0x1328295b0 <line:67:4, col:6> 'const unsigned char *' prefix '++'
    |     `-DeclRefExpr 0x132829590 <col:6> 'const unsigned char *' lvalue Var 0x13280e1c8 'buffer' 'const unsigned char *'
    |-IfStmt 0x132829820 <line:70:3, line:76:3>
    | |-BinaryOperator 0x132829690 <line:70:7, col:15> '<dependent type>' contains-errors '&'
    | | |-DeclRefExpr 0x132829618 <col:7> 'int' lvalue Var 0x132827c70 'flags' 'int'
    | | `-RecoveryExpr 0x132829670 <col:15> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x132829800 <line:71:3, line:76:3>
    |   |-IfStmt 0x132829770 <line:72:4, col:26>
    |   | |-BinaryOperator 0x132829708 <col:8, col:15> 'int' '<'
    |   | | |-ImplicitCastExpr 0x1328296f0 <col:8> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x1328296b0 <col:8> 'int' lvalue ParmVar 0x13280dd58 'size' 'int'
    |   | | `-IntegerLiteral 0x1328296d0 <col:15> 'int' 2
    |   | `-ReturnStmt 0x132829760 <col:18, col:26>
    |   |   `-UnaryOperator 0x132829748 <col:25, col:26> 'int' prefix '-'
    |   |     `-IntegerLiteral 0x132829728 <col:26> 'int' 1
    |   `-CompoundAssignOperator 0x1328297d0 <line:74:4, col:12> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
    |     |-DeclRefExpr 0x132829790 <col:4> 'int' lvalue ParmVar 0x13280dd58 'size' 'int'
    |     `-IntegerLiteral 0x1328297b0 <col:12> 'int' 2
    `-ReturnStmt 0x132829928 <line:78:3, col:23>
      `-BinaryOperator 0x1328298b0 <col:10, col:23> 'int' '-'
        |-ImplicitCastExpr 0x132829880 <col:10> 'int' <LValueToRValue>
        | `-DeclRefExpr 0x132829840 <col:10> 'const int' lvalue Var 0x13280e278 'total_size' 'const int'
        `-ImplicitCastExpr 0x132829898 <col:23> 'int' <LValueToRValue>
          `-DeclRefExpr 0x132829860 <col:23> 'int' lvalue ParmVar 0x13280dd58 'size' 'int'
