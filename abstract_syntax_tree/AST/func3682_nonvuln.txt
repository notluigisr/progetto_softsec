TranslationUnitDecl 0x10503c608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x10503d4b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x10503cbd0 '__int128'
|-TypedefDecl 0x10503d528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x10503cbf0 'unsigned __int128'
|-TypedefDecl 0x10510d230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x10510d000 'struct __NSConstantString_tag'
|   `-Record 0x10503d580 '__NSConstantString_tag'
|-TypedefDecl 0x10510d298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x10503cd90 '__SVInt8_t'
|-TypedefDecl 0x10510d300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x10503cdb0 '__SVInt16_t'
|-TypedefDecl 0x10510d368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x10503cdd0 '__SVInt32_t'
|-TypedefDecl 0x10510d3d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x10503cdf0 '__SVInt64_t'
|-TypedefDecl 0x10510d438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x10503ce10 '__SVUint8_t'
|-TypedefDecl 0x10510d4a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x10503ce30 '__SVUint16_t'
|-TypedefDecl 0x10510d508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x10503ce50 '__SVUint32_t'
|-TypedefDecl 0x10510d570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x10503ce70 '__SVUint64_t'
|-TypedefDecl 0x10510d5d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x10503ce90 '__SVFloat16_t'
|-TypedefDecl 0x10510d640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x10503ceb0 '__SVFloat32_t'
|-TypedefDecl 0x10510d6a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x10503ced0 '__SVFloat64_t'
|-TypedefDecl 0x10510d710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x10503cef0 '__SVBfloat16_t'
|-TypedefDecl 0x10510d778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x10503cf10 '__clang_svint8x2_t'
|-TypedefDecl 0x10510d7e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x10503cf30 '__clang_svint16x2_t'
|-TypedefDecl 0x10510d848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x10503cf50 '__clang_svint32x2_t'
|-TypedefDecl 0x10510d8b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x10503cf70 '__clang_svint64x2_t'
|-TypedefDecl 0x10510d918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x10503cf90 '__clang_svuint8x2_t'
|-TypedefDecl 0x10510d980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x10503cfb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x10510d9e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x10503cfd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x10510da50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x10503cff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x10510dab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x10503d010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x10510db20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x10503d030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x10510db88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x10503d050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x10510dbf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x10503d070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x10510dc58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x10503d090 '__clang_svint8x3_t'
|-TypedefDecl 0x10510dcc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x10503d0b0 '__clang_svint16x3_t'
|-TypedefDecl 0x10510dd28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x10503d0d0 '__clang_svint32x3_t'
|-TypedefDecl 0x10510dd90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x10503d0f0 '__clang_svint64x3_t'
|-TypedefDecl 0x10510ddf8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x10503d110 '__clang_svuint8x3_t'
|-TypedefDecl 0x10510de60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x10503d130 '__clang_svuint16x3_t'
|-TypedefDecl 0x10510dec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x10503d150 '__clang_svuint32x3_t'
|-TypedefDecl 0x10510df30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x10503d170 '__clang_svuint64x3_t'
|-TypedefDecl 0x10510df98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x10503d190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x10510e800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x10503d1b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x10510e868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x10503d1d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x10510e8d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x10503d1f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x10510e938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x10503d210 '__clang_svint8x4_t'
|-TypedefDecl 0x10510e9a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x10503d230 '__clang_svint16x4_t'
|-TypedefDecl 0x10510ea08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x10503d250 '__clang_svint32x4_t'
|-TypedefDecl 0x10510ea70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x10503d270 '__clang_svint64x4_t'
|-TypedefDecl 0x10510ead8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x10503d290 '__clang_svuint8x4_t'
|-TypedefDecl 0x10510eb40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x10503d2b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x10510eba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x10503d2d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x10510ec10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x10503d2f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x10510ec78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x10503d310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x10510ece0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x10503d330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x10510ed48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x10503d350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x10510edb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x10503d370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x10510ee18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x10503d390 '__SVBool_t'
|-TypedefDecl 0x10510ee80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x10503d3b0 '__clang_svboolx2_t'
|-TypedefDecl 0x10510eee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x10503d3d0 '__clang_svboolx4_t'
|-TypedefDecl 0x10510ef50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x10503d3f0 '__SVCount_t'
|-TypedefDecl 0x10510eff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x10510efb0 'char *'
|   `-BuiltinType 0x10503c6b0 'char'
|-TypedefDecl 0x10510f068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x10510efb0 'char *'
|   `-BuiltinType 0x10503c6b0 'char'
|-FunctionDecl 0x105127a88 <dataset_diviso_filec/func3682_nonvuln.c:1:1, line:57:1> line:1:12 parse_clock_source_unit 'int (struct mixer_build *, int, void *)' static
| |-ParmVarDecl 0x10510f648 <col:36, col:56> col:56 used state 'struct mixer_build *'
| |-ParmVarDecl 0x10510f6c8 <col:63, col:67> col:67 unitid 'int'
| |-ParmVarDecl 0x10510f748 <line:2:8, col:14> col:14 used _ftr 'void *'
| `-CompoundStmt 0x107009300 <line:3:1, line:57:1>
|   |-DeclStmt 0x105127dc8 <line:4:2, col:48>
|   | |-RecordDecl 0x105127b90 <col:2, col:9> col:9 struct uac_clock_source_descriptor
|   | `-VarDecl 0x105127cf8 <col:2, col:44> col:38 used hdr 'struct uac_clock_source_descriptor *' cinit
|   |   `-ImplicitCastExpr 0x105127d98 <col:44> 'struct uac_clock_source_descriptor *' <BitCast>
|   |     `-ImplicitCastExpr 0x105127d80 <col:44> 'void *' <LValueToRValue>
|   |       `-DeclRefExpr 0x105127d60 <col:44> 'void *' lvalue ParmVar 0x10510f748 '_ftr' 'void *'
|   |-DeclStmt 0x105127fc8 <line:5:2, col:34>
|   | |-RecordDecl 0x105127de0 <col:2, col:9> col:9 struct usb_mixer_elem_info
|   | `-VarDecl 0x105127f48 <col:2, col:30> col:30 used cval 'struct usb_mixer_elem_info *'
|   |-DeclStmt 0x1051281c8 <line:6:2, col:27>
|   | |-RecordDecl 0x105127fe0 <col:2, col:9> col:9 struct snd_kcontrol
|   | `-VarDecl 0x105128148 <col:2, col:23> col:23 used kctl 'struct snd_kcontrol *'
|   |-DeclStmt 0x105128288 <line:7:2, col:42>
|   | `-VarDecl 0x105128220 <col:2, col:7> col:7 invalid name 'char'
|   |-DeclStmt 0x105128320 <line:8:2, col:9>
|   | `-VarDecl 0x1051282b8 <col:2, col:6> col:6 used ret 'int'
|   |-IfStmt 0x105128500 <line:10:2, line:11:11>
|   | |-BinaryOperator 0x105128438 <line:10:6, col:32> 'int' contains-errors '!='
|   | | |-CXXDependentScopeMemberExpr 0x105128398 <col:6, col:20> '<dependent type>' contains-errors lvalue ->protocol
|   | | | `-RecoveryExpr 0x105128370 <col:6, col:13> '<dependent type>' contains-errors lvalue
|   | | |   `-DeclRefExpr 0x105128338 <col:6> 'struct mixer_build *' lvalue ParmVar 0x10510f648 'state' 'struct mixer_build *'
|   | | `-RecoveryExpr 0x105128418 <col:32> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x1051284f0 <line:11:3, col:11>
|   |   `-UnaryOperator 0x1051284d8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |     `-ImplicitCastExpr 0x1051284c0 <col:11> '<dependent type>' contains-errors <LValueToRValue>
|   |       `-RecoveryExpr 0x1051284a0 <col:11> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x1051288e8 <line:13:2, line:18:2>
|   | |-RecoveryExpr 0x1051285f0 <line:13:6, col:33> '_Bool' contains-errors
|   | `-CompoundStmt 0x1051288c8 <col:36, line:18:2>
|   |   |-CallExpr 0x105128860 <line:14:3, line:16:22> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x105128720 <line:14:3> 'int ()' Function 0x105128668 'usb_audio_dbg' 'int ()'
|   |   | |-RecoveryExpr 0x105128778 <col:17, col:24> '<dependent type>' contains-errors lvalue
|   |   | | `-DeclRefExpr 0x105128740 <col:17> 'struct mixer_build *' lvalue ParmVar 0x10510f648 'state' 'struct mixer_build *'
|   |   | |-StringLiteral 0x1051287e0 <line:15:10> 'char[4]' lvalue "STR"
|   |   | `-RecoveryExpr 0x105128838 <line:16:10, col:15> '<dependent type>' contains-errors lvalue
|   |   |   `-DeclRefExpr 0x105128800 <col:10> 'struct uac_clock_source_descriptor *' lvalue Var 0x105127cf8 'hdr' 'struct uac_clock_source_descriptor *'
|   |   `-ReturnStmt 0x1051288b8 <line:17:3, col:10>
|   |     `-IntegerLiteral 0x105128898 <col:10> 'int' 0
|   |-IfStmt 0x105129f78 <line:21:2, line:23:10>
|   | |-UnaryOperator 0x105129f30 <line:21:6, line:22:38> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-CallExpr 0x105129f00 <line:21:7, line:22:38> '<dependent type>' contains-errors
|   | |   |-DeclRefExpr 0x105129e00 <line:21:7> 'int ()' Function 0x105128930 'uac_v2v3_control_is_readable' 'int ()'
|   | |   |-RecoveryExpr 0x105129e58 <col:36, col:41> '<dependent type>' contains-errors lvalue
|   | |   | `-DeclRefExpr 0x105129e20 <col:36> 'struct uac_clock_source_descriptor *' lvalue Var 0x105127cf8 'hdr' 'struct uac_clock_source_descriptor *'
|   | |   `-RecoveryExpr 0x105129ee0 <line:22:11> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x105129f68 <line:23:3, col:10>
|   |   `-IntegerLiteral 0x105129f48 <col:10> 'int' 0
|   |-IfStmt 0x10512a238 <line:26:2, line:27:11>
|   | |-UnaryOperator 0x10512a178 <line:26:6, col:7> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x10512a160 <col:7> 'struct usb_mixer_elem_info *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x10512a140 <col:7> 'struct usb_mixer_elem_info *' lvalue Var 0x105127f48 'cval' 'struct usb_mixer_elem_info *'
|   | `-ReturnStmt 0x10512a228 <line:27:3, col:11>
|   |   `-UnaryOperator 0x10512a210 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |     `-ImplicitCastExpr 0x10512a1f8 <col:11> '<dependent type>' contains-errors <LValueToRValue>
|   |       `-RecoveryExpr 0x10512a1d8 <col:11> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x10512a490 <line:29:2, col:70> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x10512a338 <col:2> 'int ()' Function 0x10512a280 'snd_usb_mixer_elem_init_std' 'int ()'
|   | |-UnaryOperator 0x10512a3b8 <col:30, col:37> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | `-RecoveryExpr 0x10512a390 <col:31, col:37> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x10512a358 <col:31> 'struct usb_mixer_elem_info *' lvalue Var 0x105127f48 'cval' 'struct usb_mixer_elem_info *'
|   | |-RecoveryExpr 0x10512a408 <col:43, col:50> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x10512a3d0 <col:43> 'struct mixer_build *' lvalue ParmVar 0x10510f648 'state' 'struct mixer_build *'
|   | `-RecoveryExpr 0x10512a468 <col:57, col:62> '<dependent type>' contains-errors lvalue
|   |   `-DeclRefExpr 0x10512a430 <col:57> 'struct uac_clock_source_descriptor *' lvalue Var 0x105127cf8 'hdr' 'struct uac_clock_source_descriptor *'
|   |-BinaryOperator 0x10512a548 <line:31:2, col:14> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x10512a500 <col:2, col:8> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x10512a4c8 <col:2> 'struct usb_mixer_elem_info *' lvalue Var 0x105127f48 'cval' 'struct usb_mixer_elem_info *'
|   | `-IntegerLiteral 0x10512a528 <col:14> 'int' 0
|   |-BinaryOperator 0x10512a5e8 <line:32:2, col:14> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x10512a5a0 <col:2, col:8> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x10512a568 <col:2> 'struct usb_mixer_elem_info *' lvalue Var 0x105127f48 'cval' 'struct usb_mixer_elem_info *'
|   | `-IntegerLiteral 0x10512a5c8 <col:14> 'int' 1
|   |-BinaryOperator 0x10512a688 <line:33:2, col:19> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x10512a640 <col:2, col:8> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x10512a608 <col:2> 'struct usb_mixer_elem_info *' lvalue Var 0x105127f48 'cval' 'struct usb_mixer_elem_info *'
|   | `-IntegerLiteral 0x10512a668 <col:19> 'int' 1
|   |-BinaryOperator 0x10512a7e8 <line:37:2, col:26> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x10512a7a0 <col:2, col:8> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x10512a768 <col:2> 'struct usb_mixer_elem_info *' lvalue Var 0x105127f48 'cval' 'struct usb_mixer_elem_info *'
|   | `-IntegerLiteral 0x10512a7c8 <col:26> 'int' 1
|   |-IfStmt 0x10512ab60 <line:41:2, line:44:2>
|   | |-UnaryOperator 0x10512a980 <line:41:6, col:7> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x10512a968 <col:7> 'struct snd_kcontrol *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x10512a948 <col:7> 'struct snd_kcontrol *' lvalue Var 0x105128148 'kctl' 'struct snd_kcontrol *'
|   | `-CompoundStmt 0x10512ab48 <col:13, line:44:2>
|   |   `-CallExpr 0x10512ab08 <line:42:3, col:13> 'int'
|   |     |-ImplicitCastExpr 0x10512aaf0 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x10512aa78 <col:3> 'int ()' Function 0x10512a9c0 'kfree' 'int ()'
|   |     `-ImplicitCastExpr 0x10512ab30 <col:9> 'struct usb_mixer_elem_info *' <LValueToRValue>
|   |       `-DeclRefExpr 0x10512aa98 <col:9> 'struct usb_mixer_elem_info *' lvalue Var 0x105127f48 'cval' 'struct usb_mixer_elem_info *'
|   |-BinaryOperator 0x107008880 <line:47:2, line:48:30> 'int' contains-errors '='
|   | |-DeclRefExpr 0x10512abe0 <line:47:2> 'int' lvalue Var 0x1051282b8 'ret' 'int'
|   | `-CallExpr 0x107008840 <col:8, line:48:30> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x10512ace0 <line:47:8> 'int ()' Function 0x10512ac28 'snd_usb_copy_string_desc' 'int ()'
|   |   |-RecoveryExpr 0x10512ad38 <col:33, col:40> '<dependent type>' contains-errors lvalue
|   |   | `-DeclRefExpr 0x10512ad00 <col:33> 'struct mixer_build *' lvalue ParmVar 0x10510f648 'state' 'struct mixer_build *'
|   |   |-RecoveryExpr 0x10512ad98 <col:46, col:51> '<dependent type>' contains-errors lvalue
|   |   | `-DeclRefExpr 0x10512ad60 <col:46> 'struct uac_clock_source_descriptor *' lvalue Var 0x105127cf8 'hdr' 'struct uac_clock_source_descriptor *'
|   |   |-RecoveryExpr 0x10512adc0 <line:48:12> '<dependent type>' contains-errors lvalue
|   |   `-UnaryExprOrTypeTraitExpr 0x107008820 <col:18, col:29> 'unsigned long' contains-errors sizeof
|   |     `-ParenExpr 0x107008800 <col:24, col:29> '<dependent type>' contains-errors lvalue
|   |       `-RecoveryExpr 0x10512ade0 <col:25> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x1070090f8 <line:49:2, line:54:25> has_else
|   | |-BinaryOperator 0x1070088f8 <line:49:6, col:12> 'int' '>'
|   | | |-ImplicitCastExpr 0x1070088e0 <col:6> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1070088a0 <col:6> 'int' lvalue Var 0x1051282b8 'ret' 'int'
|   | | `-IntegerLiteral 0x1070088c0 <col:12> 'int' 0
|   | |-CallExpr 0x107008e18 <line:50:3, line:51:16> '<dependent type>' contains-errors
|   | | |-DeclRefExpr 0x107008bf8 <line:50:3> 'int (char *, unsigned long, const char *, ...)' Function 0x107008970 'snprintf' 'int (char *, unsigned long, const char *, ...)'
|   | | |-CXXDependentScopeMemberExpr 0x107008c78 <col:12, col:21> '<dependent type>' contains-errors lvalue .name
|   | | | `-RecoveryExpr 0x107008c50 <col:12, col:18> '<dependent type>' contains-errors lvalue
|   | | |   `-DeclRefExpr 0x107008c18 <col:12> 'struct snd_kcontrol *' lvalue Var 0x105128148 'kctl' 'struct snd_kcontrol *'
|   | | |-UnaryExprOrTypeTraitExpr 0x107008d88 <col:27, col:47> 'unsigned long' contains-errors sizeof
|   | | | `-ParenExpr 0x107008d68 <col:33, col:47> '<dependent type>' contains-errors lvalue
|   | | |   `-CXXDependentScopeMemberExpr 0x107008d20 <col:34, col:43> '<dependent type>' contains-errors lvalue .name
|   | | |     `-RecoveryExpr 0x107008cf8 <col:34, col:40> '<dependent type>' contains-errors lvalue
|   | | |       `-DeclRefExpr 0x107008cc0 <col:34> 'struct snd_kcontrol *' lvalue Var 0x105128148 'kctl' 'struct snd_kcontrol *' non_odr_use_unevaluated
|   | | |-StringLiteral 0x107008da8 <line:51:5> 'char[4]' lvalue "STR"
|   | | `-RecoveryExpr 0x107008dc8 <col:12> '<dependent type>' contains-errors lvalue
|   | `-CallExpr 0x1070090b8 <line:53:3, line:54:25> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x107008e58 <line:53:3> 'int (char *, unsigned long, const char *, ...)' Function 0x107008970 'snprintf' 'int (char *, unsigned long, const char *, ...)'
|   |   |-CXXDependentScopeMemberExpr 0x107008ed8 <col:12, col:21> '<dependent type>' contains-errors lvalue .name
|   |   | `-RecoveryExpr 0x107008eb0 <col:12, col:18> '<dependent type>' contains-errors lvalue
|   |   |   `-DeclRefExpr 0x107008e78 <col:12> 'struct snd_kcontrol *' lvalue Var 0x105128148 'kctl' 'struct snd_kcontrol *'
|   |   |-UnaryExprOrTypeTraitExpr 0x107008fe8 <col:27, col:47> 'unsigned long' contains-errors sizeof
|   |   | `-ParenExpr 0x107008fc8 <col:33, col:47> '<dependent type>' contains-errors lvalue
|   |   |   `-CXXDependentScopeMemberExpr 0x107008f80 <col:34, col:43> '<dependent type>' contains-errors lvalue .name
|   |   |     `-RecoveryExpr 0x107008f58 <col:34, col:40> '<dependent type>' contains-errors lvalue
|   |   |       `-DeclRefExpr 0x107008f20 <col:34> 'struct snd_kcontrol *' lvalue Var 0x105128148 'kctl' 'struct snd_kcontrol *' non_odr_use_unevaluated
|   |   |-StringLiteral 0x107009008 <line:54:5> 'char[4]' lvalue "STR"
|   |   `-RecoveryExpr 0x107009060 <col:12, col:17> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x107009028 <col:12> 'struct uac_clock_source_descriptor *' lvalue Var 0x105127cf8 'hdr' 'struct uac_clock_source_descriptor *'
|   `-ReturnStmt 0x1070092f0 <line:56:2, col:52>
|     `-CallExpr 0x1070092c0 <col:9, col:52> '<dependent type>' contains-errors
|       |-DeclRefExpr 0x107009208 <col:9> 'int ()' Function 0x107009150 'snd_usb_mixer_add_control' 'int ()'
|       |-UnaryOperator 0x107009288 <col:35, col:42> '<dependent type>' contains-errors prefix '&' cannot overflow
|       | `-RecoveryExpr 0x107009260 <col:36, col:42> '<dependent type>' contains-errors lvalue
|       |   `-DeclRefExpr 0x107009228 <col:36> 'struct usb_mixer_elem_info *' lvalue Var 0x105127f48 'cval' 'struct usb_mixer_elem_info *'
|       `-DeclRefExpr 0x1070092a0 <col:48> 'struct snd_kcontrol *' lvalue Var 0x105128148 'kctl' 'struct snd_kcontrol *'
`-FunctionDecl 0x107008970 <line:50:3> col:3 implicit used snprintf 'int (char *, unsigned long, const char *, ...)' extern
  |-ParmVarDecl 0x107008a70 <<invalid sloc>> <invalid sloc> 'char *'
  |-ParmVarDecl 0x107008ad8 <<invalid sloc>> <invalid sloc> 'unsigned long'
  |-ParmVarDecl 0x107008b40 <<invalid sloc>> <invalid sloc> 'const char *'
  |-BuiltinAttr 0x107008a18 <<invalid sloc>> Implicit 905
  `-FormatAttr 0x107008bc0 <col:3> Implicit printf 3 4
