TranslationUnitDecl 0x145855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1458564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x145855bd0 '__int128'
|-TypedefDecl 0x145856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x145855bf0 'unsigned __int128'
|-TypedefDecl 0x145926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x145926000 'struct __NSConstantString_tag'
|   `-Record 0x145856580 '__NSConstantString_tag'
|-TypedefDecl 0x145926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x145855d90 '__SVInt8_t'
|-TypedefDecl 0x145926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x145855db0 '__SVInt16_t'
|-TypedefDecl 0x145926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x145855dd0 '__SVInt32_t'
|-TypedefDecl 0x1459263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x145855df0 '__SVInt64_t'
|-TypedefDecl 0x145926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x145855e10 '__SVUint8_t'
|-TypedefDecl 0x1459264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x145855e30 '__SVUint16_t'
|-TypedefDecl 0x145926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x145855e50 '__SVUint32_t'
|-TypedefDecl 0x145926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x145855e70 '__SVUint64_t'
|-TypedefDecl 0x1459265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x145855e90 '__SVFloat16_t'
|-TypedefDecl 0x145926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x145855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1459266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x145855ed0 '__SVFloat64_t'
|-TypedefDecl 0x145926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x145855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x145926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x145855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1459267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x145855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x145926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x145855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1459268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x145855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x145926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x145855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x145926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x145855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1459269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x145855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x145926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x145855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x145926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x145856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x145926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x145856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x145926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x145856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x145926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x145856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x145926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x145856090 '__clang_svint8x3_t'
|-TypedefDecl 0x145926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1458560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x145926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1458560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x145926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1458560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x145926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x145856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x145926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x145856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x145926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x145856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x145926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x145856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x145926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x145856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x145927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1458561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x145927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1458561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1459278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1458561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x145927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x145856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1459279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x145856230 '__clang_svint16x4_t'
|-TypedefDecl 0x145927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x145856250 '__clang_svint32x4_t'
|-TypedefDecl 0x145927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x145856270 '__clang_svint64x4_t'
|-TypedefDecl 0x145927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x145856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x145927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1458562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x145927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1458562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x145927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1458562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x145927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x145856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x145927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x145856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x145927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x145856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x145927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x145856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x145927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x145856390 '__SVBool_t'
|-TypedefDecl 0x145927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1458563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x145927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1458563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x145927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1458563f0 '__SVCount_t'
|-TypedefDecl 0x145927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x145927fb0 'char *'
|   `-BuiltinType 0x1458556b0 'char'
|-TypedefDecl 0x145928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x145927fb0 'char *'
|   `-BuiltinType 0x1458556b0 'char'
`-FunctionDecl 0x145928438 <dataset_diviso_filec/func17626_nonvuln.c:1:1, line:31:1> line:1:1 invalid dissect_kafka_sync_group_response 'int (int *, int *, int *, int, int)'
  |-ParmVarDecl 0x145928128 <col:35, col:45> col:45 invalid tvb 'int *'
  |-ParmVarDecl 0x1459281a8 <col:50, col:63> col:63 invalid pinfo 'int *'
  |-ParmVarDecl 0x145928228 <col:70, col:82> col:82 invalid tree 'int *'
  |-ParmVarDecl 0x1459282a8 <col:88, col:92> col:92 used offset 'int'
  |-ParmVarDecl 0x145928328 <line:2:35, col:55> col:55 invalid api_version 'int'
  `-CompoundStmt 0x14600a190 <line:3:1, line:31:1>
    |-IfStmt 0x146009200 <line:4:5, line:6:5>
    | |-BinaryOperator 0x145928548 <line:4:9, col:24> 'int' contains-errors '>='
    | | |-RecoveryExpr 0x145928508 <col:9> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x145928528 <col:24> 'int' 1
    | `-CompoundStmt 0x1459287e0 <col:27, line:6:5>
    |   `-BinaryOperator 0x1459287c0 <line:5:9, col:70> 'int' contains-errors '='
    |     |-DeclRefExpr 0x145928568 <col:9> 'int' lvalue ParmVar 0x1459282a8 'offset' 'int'
    |     `-CallExpr 0x145928780 <col:18, col:70> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x1459286e0 <col:18> 'int ()' Function 0x145928628 'dissect_kafka_throttle_time' 'int ()'
    |       |-RecoveryExpr 0x145928700 <col:46> '<dependent type>' contains-errors lvalue
    |       |-RecoveryExpr 0x145928720 <col:51> '<dependent type>' contains-errors lvalue
    |       |-RecoveryExpr 0x145928740 <col:58> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x145928760 <col:64> 'int' lvalue ParmVar 0x1459282a8 'offset' 'int'
    |-BinaryOperator 0x146009400 <line:9:5, col:58> 'int' contains-errors '='
    | |-DeclRefExpr 0x146009220 <col:5> 'int' lvalue ParmVar 0x1459282a8 'offset' 'int'
    | `-CallExpr 0x1460093c0 <col:14, col:58> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x146009320 <col:14> 'int ()' Function 0x146009268 'dissect_kafka_error' 'int ()'
    |   |-RecoveryExpr 0x146009340 <col:34> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x146009360 <col:39> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x146009380 <col:46> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x1460093a0 <col:52> 'int' lvalue ParmVar 0x1459282a8 'offset' 'int'
    |-IfStmt 0x1460097d0 <line:12:5, line:15:5>
    | |-BinaryOperator 0x146009460 <line:12:9, col:24> 'int' contains-errors '>='
    | | |-RecoveryExpr 0x146009420 <col:9> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x146009440 <col:24> 'int' 5
    | `-CompoundStmt 0x1460097b8 <col:27, line:15:5>
    |   `-BinaryOperator 0x146009798 <line:13:9, line:14:57> 'int' contains-errors '='
    |     |-DeclRefExpr 0x146009480 <line:13:9> 'int' lvalue ParmVar 0x1459282a8 'offset' 'int'
    |     `-CallExpr 0x146009740 <col:18, line:14:57> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x146009580 <line:13:18> 'int ()' Function 0x1460094c8 'dissect_kafka_compact_string' 'int ()'
    |       |-RecoveryExpr 0x1460095a0 <col:47> '<dependent type>' contains-errors lvalue
    |       |-RecoveryExpr 0x1460096e0 <col:53> '<dependent type>' contains-errors lvalue
    |       |-RecoveryExpr 0x1460095d8 <col:77> '<dependent type>' contains-errors lvalue
    |       |-RecoveryExpr 0x1460095f8 <col:82> '<dependent type>' contains-errors lvalue
    |       |-DeclRefExpr 0x146009618 <col:89> 'int' lvalue ParmVar 0x1459282a8 'offset' 'int'
    |       |-RecoveryExpr 0x146009700 <line:14:47> '<dependent type>' contains-errors lvalue
    |       `-RecoveryExpr 0x146009720 <col:53> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x146009ac0 <line:18:5, line:21:5>
    | |-BinaryOperator 0x146009830 <line:18:9, col:24> 'int' contains-errors '>='
    | | |-RecoveryExpr 0x1460097f0 <col:9> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x146009810 <col:24> 'int' 5
    | `-CompoundStmt 0x146009aa8 <col:27, line:21:5>
    |   `-BinaryOperator 0x146009a88 <line:19:9, line:20:57> 'int' contains-errors '='
    |     |-DeclRefExpr 0x146009850 <line:19:9> 'int' lvalue ParmVar 0x1459282a8 'offset' 'int'
    |     `-CallExpr 0x146009a30 <col:18, line:20:57> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x146009870 <line:19:18> 'int ()' Function 0x1460094c8 'dissect_kafka_compact_string' 'int ()'
    |       |-RecoveryExpr 0x146009890 <col:47> '<dependent type>' contains-errors lvalue
    |       |-RecoveryExpr 0x1460099d0 <col:53> '<dependent type>' contains-errors lvalue
    |       |-RecoveryExpr 0x1460098c8 <col:77> '<dependent type>' contains-errors lvalue
    |       |-RecoveryExpr 0x1460098e8 <col:82> '<dependent type>' contains-errors lvalue
    |       |-DeclRefExpr 0x146009908 <col:89> 'int' lvalue ParmVar 0x1459282a8 'offset' 'int'
    |       |-RecoveryExpr 0x1460099f0 <line:20:47> '<dependent type>' contains-errors lvalue
    |       `-RecoveryExpr 0x146009a10 <col:53> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x146009e68 <line:24:5, col:116> 'int' contains-errors '='
    | |-DeclRefExpr 0x146009ae0 <col:5> 'int' lvalue ParmVar 0x1459282a8 'offset' 'int'
    | `-CallExpr 0x146009e08 <col:14, col:116> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x146009be0 <col:14> 'int ()' Function 0x146009b28 'dissect_kafka_bytes' 'int ()'
    |   |-RecoveryExpr 0x146009c00 <col:34> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x146009da8 <col:40> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x146009c38 <col:68> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x146009c58 <col:73> '<dependent type>' contains-errors lvalue
    |   |-DeclRefExpr 0x146009c78 <col:80> 'int' lvalue ParmVar 0x1459282a8 'offset' 'int'
    |   |-BinaryOperator 0x146009cd8 <col:88, col:103> 'int' contains-errors '>='
    |   | |-RecoveryExpr 0x146009c98 <col:88> '<dependent type>' contains-errors lvalue
    |   | `-IntegerLiteral 0x146009cb8 <col:103> 'int' 4
    |   |-RecoveryExpr 0x146009dc8 <col:106> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x146009de8 <col:112> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14600a128 <line:26:5, line:28:5>
    | |-BinaryOperator 0x146009ec8 <line:26:9, col:24> 'int' contains-errors '>='
    | | |-RecoveryExpr 0x146009e88 <col:9> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x146009ea8 <col:24> 'int' 4
    | `-CompoundStmt 0x14600a110 <col:27, line:28:5>
    |   `-BinaryOperator 0x14600a0f0 <line:27:9, col:73> 'int' contains-errors '='
    |     |-DeclRefExpr 0x146009ee8 <col:9> 'int' lvalue ParmVar 0x1459282a8 'offset' 'int'
    |     `-CallExpr 0x14600a0a8 <col:18, col:73> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x146009fe8 <col:18> 'int ()' Function 0x146009f30 'dissect_kafka_tagged_fields' 'int ()'
    |       |-RecoveryExpr 0x14600a008 <col:46> '<dependent type>' contains-errors lvalue
    |       |-RecoveryExpr 0x14600a028 <col:51> '<dependent type>' contains-errors lvalue
    |       |-RecoveryExpr 0x14600a048 <col:58> '<dependent type>' contains-errors lvalue
    |       |-DeclRefExpr 0x14600a068 <col:64> 'int' lvalue ParmVar 0x1459282a8 'offset' 'int'
    |       `-IntegerLiteral 0x14600a088 <col:72> 'int' 0
    `-ReturnStmt 0x14600a180 <line:30:5, col:12>
      `-ImplicitCastExpr 0x14600a168 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x14600a148 <col:12> 'int' lvalue ParmVar 0x1459282a8 'offset' 'int'
