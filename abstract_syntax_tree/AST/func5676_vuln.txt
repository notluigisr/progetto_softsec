TranslationUnitDecl 0x14e055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14e0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14e055bd0 '__int128'
|-TypedefDecl 0x14e056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14e055bf0 'unsigned __int128'
|-TypedefDecl 0x14e126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14e126000 'struct __NSConstantString_tag'
|   `-Record 0x14e056580 '__NSConstantString_tag'
|-TypedefDecl 0x14e126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14e055d90 '__SVInt8_t'
|-TypedefDecl 0x14e126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14e055db0 '__SVInt16_t'
|-TypedefDecl 0x14e126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14e055dd0 '__SVInt32_t'
|-TypedefDecl 0x14e1263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14e055df0 '__SVInt64_t'
|-TypedefDecl 0x14e126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14e055e10 '__SVUint8_t'
|-TypedefDecl 0x14e1264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14e055e30 '__SVUint16_t'
|-TypedefDecl 0x14e126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14e055e50 '__SVUint32_t'
|-TypedefDecl 0x14e126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14e055e70 '__SVUint64_t'
|-TypedefDecl 0x14e1265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14e055e90 '__SVFloat16_t'
|-TypedefDecl 0x14e126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14e055eb0 '__SVFloat32_t'
|-TypedefDecl 0x14e1266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14e055ed0 '__SVFloat64_t'
|-TypedefDecl 0x14e126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14e055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14e126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14e055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14e1267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14e055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14e126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14e055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14e1268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14e055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14e126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14e055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14e126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14e055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14e1269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14e055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14e126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14e055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14e126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14e056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14e126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14e056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14e126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14e056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14e126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14e056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14e126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14e056090 '__clang_svint8x3_t'
|-TypedefDecl 0x14e126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14e0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14e126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14e0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14e126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14e0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14e126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14e056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14e126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14e056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14e126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14e056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14e126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14e056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14e126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14e056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14e127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14e0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14e127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14e0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14e1278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14e0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14e127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14e056210 '__clang_svint8x4_t'
|-TypedefDecl 0x14e1279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14e056230 '__clang_svint16x4_t'
|-TypedefDecl 0x14e127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14e056250 '__clang_svint32x4_t'
|-TypedefDecl 0x14e127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14e056270 '__clang_svint64x4_t'
|-TypedefDecl 0x14e127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14e056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14e127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14e0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14e127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14e0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14e127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14e0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14e127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14e056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14e127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14e056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14e127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14e056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14e127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14e056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14e127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14e056390 '__SVBool_t'
|-TypedefDecl 0x14e127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14e0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14e127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14e0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14e127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14e0563f0 '__SVCount_t'
|-TypedefDecl 0x14e127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14e127fb0 'char *'
|   `-BuiltinType 0x14e0556b0 'char'
|-TypedefDecl 0x14e128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14e127fb0 'char *'
|   `-BuiltinType 0x14e0556b0 'char'
|-FunctionDecl 0x14e140b98 <dataset_diviso_filec/func5676_vuln.c:1:1, line:39:1> line:1:1 transit_state_singlebyte 'int (struct dfa *, int, const unsigned char *, int *)'
| |-ParmVarDecl 0x14e128648 <col:27, col:39> col:39 used d 'struct dfa *'
| |-ParmVarDecl 0x14e1286c8 <col:42, col:46> col:46 used s 'int'
| |-ParmVarDecl 0x14e128778 <col:49, col:70> col:70 used p 'const unsigned char *'
| |-ParmVarDecl 0x14e140a48 <line:2:35, col:40> col:40 used next_state 'int *'
| `-CompoundStmt 0x14e143c18 <line:3:1, line:39:1>
|   |-DeclStmt 0x14e140d28 <line:4:3, col:9>
|   | `-VarDecl 0x14e140cc0 <col:3, col:8> col:8 used t 'int *'
|   |-DeclStmt 0x14e140df8 <line:5:3, col:16>
|   | `-VarDecl 0x14e140d58 <col:3, col:15> col:7 used works 'int' cinit
|   |   `-ImplicitCastExpr 0x14e140de0 <col:15> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x14e140dc0 <col:15> 'int' lvalue ParmVar 0x14e1286c8 's' 'int'
|   |-WhileStmt 0x14e143b08 <line:9:3, line:36:5>
|   | |-BinaryOperator 0x14e140eb8 <line:9:10, col:18> 'int' contains-errors '=='
|   | | |-RecoveryExpr 0x14e140e78 <col:10> '<dependent type>' contains-errors lvalue
|   | | `-RecoveryExpr 0x14e140e98 <col:18> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x14e143af0 <line:10:5, line:36:5>
|   |   `-IfStmt 0x14e143ac0 <line:11:7, line:35:9> has_else
|   |     |-BinaryOperator 0x14e141180 <line:11:11, col:36> 'int' contains-errors '!='
|   |     | |-ParenExpr 0x14e141140 <col:11, col:31> 'int *' contains-errors
|   |     | | `-BinaryOperator 0x14e141120 <col:12, col:30> 'int *' contains-errors '='
|   |     | |   |-DeclRefExpr 0x14e140ed8 <col:12> 'int *' lvalue Var 0x14e140cc0 't' 'int *'
|   |     | |   `-ArraySubscriptExpr 0x14e141100 <col:16, col:30> '<dependent type>' contains-errors lvalue
|   |     | |     |-ImplicitCastExpr 0x14e1410d0 <col:16, col:19> '<dependent type>' contains-errors <LValueToRValue>
|   |     | |     | `-RecoveryExpr 0x14e140f30 <col:16, col:19> '<dependent type>' contains-errors lvalue
|   |     | |     |   `-DeclRefExpr 0x14e140ef8 <col:16> 'struct dfa *' lvalue ParmVar 0x14e128648 'd' 'struct dfa *'
|   |     | |     `-ImplicitCastExpr 0x14e1410e8 <col:25> 'int' <LValueToRValue>
|   |     | |       `-DeclRefExpr 0x14e140f58 <col:25> 'int' lvalue Var 0x14e140d58 'works' 'int'
|   |     | `-RecoveryExpr 0x14e141160 <col:36> '<dependent type>' contains-errors lvalue
|   |     |-CompoundStmt 0x14e1413c8 <line:12:9, line:17:9>
|   |     | |-BinaryOperator 0x14e141298 <line:13:11, col:23> 'int' '='
|   |     | | |-DeclRefExpr 0x14e1411a0 <col:11> 'int' lvalue Var 0x14e140d58 'works' 'int'
|   |     | | `-ImplicitCastExpr 0x14e141280 <col:19, col:23> 'int' <LValueToRValue>
|   |     | |   `-ArraySubscriptExpr 0x14e141260 <col:19, col:23> 'int' lvalue
|   |     | |     |-ImplicitCastExpr 0x14e141230 <col:19> 'int *' <LValueToRValue>
|   |     | |     | `-DeclRefExpr 0x14e1411c0 <col:19> 'int *' lvalue Var 0x14e140cc0 't' 'int *'
|   |     | |     `-ImplicitCastExpr 0x14e141248 <col:21, col:22> 'unsigned char' <LValueToRValue>
|   |     | |       `-UnaryOperator 0x14e141218 <col:21, col:22> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |     | |         `-ImplicitCastExpr 0x14e141200 <col:22> 'const unsigned char *' <LValueToRValue>
|   |     | |           `-DeclRefExpr 0x14e1411e0 <col:22> 'const unsigned char *' lvalue ParmVar 0x14e128778 'p' 'const unsigned char *'
|   |     | `-IfStmt 0x14e1413a8 <line:15:11, line:16:21>
|   |     |   |-BinaryOperator 0x14e141328 <line:15:15, col:23> 'int' '<'
|   |     |   | |-ImplicitCastExpr 0x14e141310 <col:15> 'int' <LValueToRValue>
|   |     |   | | `-DeclRefExpr 0x14e1412d0 <col:15> 'int' lvalue Var 0x14e140d58 'works' 'int'
|   |     |   | `-IntegerLiteral 0x14e1412f0 <col:23> 'int' 0
|   |     |   `-BinaryOperator 0x14e141388 <line:16:13, col:21> 'int' '='
|   |     |     |-DeclRefExpr 0x14e141348 <col:13> 'int' lvalue Var 0x14e140d58 'works' 'int'
|   |     |     `-IntegerLiteral 0x14e141368 <col:21> 'int' 0
|   |     `-IfStmt 0x14e143a90 <line:18:12, line:35:9> has_else
|   |       |-BinaryOperator 0x14e141440 <line:18:16, col:24> 'int' '<'
|   |       | |-ImplicitCastExpr 0x14e141428 <col:16> 'int' <LValueToRValue>
|   |       | | `-DeclRefExpr 0x14e1413e8 <col:16> 'int' lvalue Var 0x14e140d58 'works' 'int'
|   |       | `-IntegerLiteral 0x14e141408 <col:24> 'int' 0
|   |       |-CompoundStmt 0x14e141750 <line:19:9, line:26:9>
|   |       | |-IfStmt 0x14e1416d0 <line:20:11, line:24:13>
|   |       | | |-BinaryOperator 0x14e1414d8 <line:20:15, col:20> 'int' contains-errors '=='
|   |       | | | |-DeclRefExpr 0x14e141460 <col:15> 'const unsigned char *' lvalue ParmVar 0x14e128778 'p' 'const unsigned char *'
|   |       | | | `-RecoveryExpr 0x14e1414b8 <col:20> '<dependent type>' contains-errors lvalue
|   |       | | `-CompoundStmt 0x14e1416b8 <line:21:13, line:24:13>
|   |       | |   `-CallExpr 0x14e141698 <line:23:15, col:22> 'void'
|   |       | |     `-ImplicitCastExpr 0x14e141680 <col:15> 'void (*)(void) __attribute__((noreturn))' <FunctionToPointerDecay>
|   |       | |       `-DeclRefExpr 0x14e141630 <col:15> 'void (void) __attribute__((noreturn))' Function 0x14e141530 'abort' 'void (void) __attribute__((noreturn))'
|   |       | `-BinaryOperator 0x14e141730 <line:25:11, col:19> 'int' '='
|   |       |   |-DeclRefExpr 0x14e1416f0 <col:11> 'int' lvalue Var 0x14e140d58 'works' 'int'
|   |       |   `-IntegerLiteral 0x14e141710 <col:19> 'int' 0
|   |       `-IfStmt 0x14e143a60 <line:27:12, line:35:9> has_else
|   |         |-ArraySubscriptExpr 0x14e141820 <line:27:16, col:30> '<dependent type>' contains-errors lvalue
|   |         | |-ImplicitCastExpr 0x14e1417f0 <col:16, col:19> '<dependent type>' contains-errors <LValueToRValue>
|   |         | | `-RecoveryExpr 0x14e1417a8 <col:16, col:19> '<dependent type>' contains-errors lvalue
|   |         | |   `-DeclRefExpr 0x14e141770 <col:16> 'struct dfa *' lvalue ParmVar 0x14e128648 'd' 'struct dfa *'
|   |         | `-ImplicitCastExpr 0x14e141808 <col:25> 'int' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x14e1417d0 <col:25> 'int' lvalue Var 0x14e140d58 'works' 'int'
|   |         |-CompoundStmt 0x14e143818 <line:28:9, line:31:9>
|   |         | `-BinaryOperator 0x14e1419d0 <line:29:11, col:37> 'int' contains-errors '='
|   |         |   |-DeclRefExpr 0x14e141840 <col:11> 'int' lvalue Var 0x14e140d58 'works' 'int'
|   |         |   `-ArraySubscriptExpr 0x14e1419b0 <col:19, col:37> '<dependent type>' contains-errors lvalue
|   |         |     |-ImplicitCastExpr 0x14e141980 <col:19, col:33> '<dependent type>' contains-errors <LValueToRValue>
|   |         |     | `-ArraySubscriptExpr 0x14e141910 <col:19, col:33> '<dependent type>' contains-errors lvalue
|   |         |     |   |-ImplicitCastExpr 0x14e1418e0 <col:19, col:22> '<dependent type>' contains-errors <LValueToRValue>
|   |         |     |   | `-RecoveryExpr 0x14e141898 <col:19, col:22> '<dependent type>' contains-errors lvalue
|   |         |     |   |   `-DeclRefExpr 0x14e141860 <col:19> 'struct dfa *' lvalue ParmVar 0x14e128648 'd' 'struct dfa *'
|   |         |     |   `-ImplicitCastExpr 0x14e1418f8 <col:28> 'int' <LValueToRValue>
|   |         |     |     `-DeclRefExpr 0x14e1418c0 <col:28> 'int' lvalue Var 0x14e140d58 'works' 'int'
|   |         |     `-ImplicitCastExpr 0x14e141998 <col:35, col:36> 'unsigned char' <LValueToRValue>
|   |         |       `-UnaryOperator 0x14e141968 <col:35, col:36> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |         |         `-ImplicitCastExpr 0x14e141950 <col:36> 'const unsigned char *' <LValueToRValue>
|   |         |           `-DeclRefExpr 0x14e141930 <col:36> 'const unsigned char *' lvalue ParmVar 0x14e128778 'p' 'const unsigned char *'
|   |         `-CompoundStmt 0x14e143a48 <line:33:9, line:35:9>
|   |           `-CallExpr 0x14e1439e8 <line:34:11, col:31> 'int'
|   |             |-ImplicitCastExpr 0x14e1439d0 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |             | `-DeclRefExpr 0x14e143940 <col:11> 'int ()' Function 0x14e143888 'build_state' 'int ()'
|   |             |-ImplicitCastExpr 0x14e143a18 <col:23> 'int' <LValueToRValue>
|   |             | `-DeclRefExpr 0x14e143960 <col:23> 'int' lvalue Var 0x14e140d58 'works' 'int'
|   |             `-ImplicitCastExpr 0x14e143a30 <col:30> 'struct dfa *' <LValueToRValue>
|   |               `-DeclRefExpr 0x14e143980 <col:30> 'struct dfa *' lvalue ParmVar 0x14e128648 'd' 'struct dfa *'
|   |-BinaryOperator 0x14e143bb0 <line:37:3, col:17> 'int' '='
|   | |-UnaryOperator 0x14e143b60 <col:3, col:4> 'int' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x14e143b48 <col:4> 'int *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x14e143b28 <col:4> 'int *' lvalue ParmVar 0x14e140a48 'next_state' 'int *'
|   | `-ImplicitCastExpr 0x14e143b98 <col:17> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x14e143b78 <col:17> 'int' lvalue Var 0x14e140d58 'works' 'int'
|   `-ReturnStmt 0x14e143c08 <line:38:3, col:10>
|     `-RecoveryExpr 0x14e143be8 <col:10> '<dependent type>' contains-errors lvalue
`-FunctionDecl 0x14e141530 <line:23:15> col:15 implicit used abort 'void (void) __attribute__((noreturn))' extern
  `-BuiltinAttr 0x14e1415d8 <<invalid sloc>> Implicit 867
