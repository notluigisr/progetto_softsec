TranslationUnitDecl 0x144055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1440564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x144055bd0 '__int128'
|-TypedefDecl 0x144056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x144055bf0 'unsigned __int128'
|-TypedefDecl 0x14480be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14480bc00 'struct __NSConstantString_tag'
|   `-Record 0x144056580 '__NSConstantString_tag'
|-TypedefDecl 0x14480be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x144055d90 '__SVInt8_t'
|-TypedefDecl 0x14480bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x144055db0 '__SVInt16_t'
|-TypedefDecl 0x14480bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x144055dd0 '__SVInt32_t'
|-TypedefDecl 0x14480bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x144055df0 '__SVInt64_t'
|-TypedefDecl 0x14480c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x144055e10 '__SVUint8_t'
|-TypedefDecl 0x14480c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x144055e30 '__SVUint16_t'
|-TypedefDecl 0x14480c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x144055e50 '__SVUint32_t'
|-TypedefDecl 0x14480c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x144055e70 '__SVUint64_t'
|-TypedefDecl 0x14480c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x144055e90 '__SVFloat16_t'
|-TypedefDecl 0x14480c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x144055eb0 '__SVFloat32_t'
|-TypedefDecl 0x14480c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x144055ed0 '__SVFloat64_t'
|-TypedefDecl 0x14480c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x144055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14480c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x144055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14480c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x144055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14480c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x144055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14480c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x144055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14480c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x144055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14480c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x144055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14480c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x144055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14480c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x144055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14480c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x144056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14480c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x144056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14480c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x144056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14480c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x144056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14480c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x144056090 '__clang_svint8x3_t'
|-TypedefDecl 0x14480c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1440560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14480c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1440560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14480c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1440560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14480c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x144056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14480ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x144056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14480cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x144056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14480cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x144056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14480cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x144056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14480d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1440561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14480d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1440561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14480d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1440561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14480d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x144056210 '__clang_svint8x4_t'
|-TypedefDecl 0x14480d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x144056230 '__clang_svint16x4_t'
|-TypedefDecl 0x14480d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x144056250 '__clang_svint32x4_t'
|-TypedefDecl 0x14480d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x144056270 '__clang_svint64x4_t'
|-TypedefDecl 0x14480d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x144056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14480d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1440562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14480d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1440562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14480d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1440562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14480d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x144056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14480d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x144056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14480d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x144056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14480d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x144056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14480da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x144056390 '__SVBool_t'
|-TypedefDecl 0x14480da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1440563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14480dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1440563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14480db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1440563f0 '__SVCount_t'
|-TypedefDecl 0x14480dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14480dbb0 'char *'
|   `-BuiltinType 0x1440556b0 'char'
|-TypedefDecl 0x14480dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14480dbb0 'char *'
|   `-BuiltinType 0x1440556b0 'char'
|-FunctionDecl 0x14480dfe8 <dataset_diviso_filec/func8035_vuln.c:1:1, line:68:1> line:1:12 invalid bochs_open 'int (int *, int *, int, int **)' static
| |-ParmVarDecl 0x14480dd28 <col:23, col:41> col:41 referenced invalid bs 'int *'
| |-ParmVarDecl 0x14480dda8 <col:45, col:52> col:52 invalid options 'int *'
| |-ParmVarDecl 0x14480de28 <col:61, col:65> col:65 flags 'int'
| |-ParmVarDecl 0x14480dee0 <line:2:23, col:31> col:31 invalid errp 'int **'
| `-CompoundStmt 0x144827da8 <line:3:1, line:68:1>
|   |-DeclStmt 0x1441230e8 <line:6:5, col:30>
|   | |-RecordDecl 0x14480e130 <col:5, col:12> col:12 struct bochs_header
|   | `-VarDecl 0x14480e228 <col:5, col:25> col:25 invalid bochs 'struct bochs_header'
|   |-DeclStmt 0x144123180 <line:7:5, col:12>
|   | `-VarDecl 0x144123118 <col:5, col:9> col:9 used ret 'int'
|   |-BinaryOperator 0x144123248 <line:9:5, col:21> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x1441231e0 <col:5, col:9> '<dependent type>' contains-errors lvalue ->read_only
|   | | `-RecoveryExpr 0x1441231b8 <col:5> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x144123198 <col:5> 'int *' lvalue ParmVar 0x14480dd28 'bs' 'int *'
|   | `-IntegerLiteral 0x144123228 <col:21> 'int' 1
|   |-BinaryOperator 0x144123560 <line:11:5, col:56> 'int' contains-errors '='
|   | |-DeclRefExpr 0x144123268 <col:5> 'int' lvalue Var 0x144123118 'ret' 'int'
|   | `-CallExpr 0x144123520 <col:11, col:56> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x1441233e0 <col:11> 'int ()' Function 0x144123328 'bdrv_pread' 'int ()'
|   |   |-CXXDependentScopeMemberExpr 0x144123420 <col:22, col:26> '<dependent type>' contains-errors lvalue ->file
|   |   | `-RecoveryExpr 0x144123400 <col:22> '<dependent type>' contains-errors lvalue
|   |   |-IntegerLiteral 0x144123468 <col:32> 'int' 0
|   |   |-UnaryOperator 0x1441234a8 <col:35, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   | `-RecoveryExpr 0x144123488 <col:36> '<dependent type>' contains-errors lvalue
|   |   `-UnaryExprOrTypeTraitExpr 0x144123500 <col:43, col:55> 'unsigned long' contains-errors sizeof
|   |     `-ParenExpr 0x1441234e0 <col:49, col:55> '<dependent type>' contains-errors lvalue
|   |       `-RecoveryExpr 0x1441234c0 <col:50> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x144123658 <line:12:5, line:14:5>
|   | |-BinaryOperator 0x1441235d8 <line:12:9, col:15> 'int' '<'
|   | | |-ImplicitCastExpr 0x1441235c0 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x144123580 <col:9> 'int' lvalue Var 0x144123118 'ret' 'int'
|   | | `-IntegerLiteral 0x1441235a0 <col:15> 'int' 0
|   | `-CompoundStmt 0x144123640 <col:18, line:14:5>
|   |   `-ReturnStmt 0x144123630 <line:13:9, col:16>
|   |     `-ImplicitCastExpr 0x144123618 <col:16> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x1441235f8 <col:16> 'int' lvalue Var 0x144123118 'ret' 'int'
|   |-IfStmt 0x144126148 <line:16:5, line:23:5>
|   | |-RecoveryExpr 0x144125ea8 <line:16:9, line:20:43> '_Bool' contains-errors
|   | `-CompoundStmt 0x144126128 <col:46, line:23:5>
|   |   |-CallExpr 0x144126050 <line:21:9, col:31> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x144125fa8 <col:9> 'int ()' Function 0x144125ef0 'error_setg' 'int ()'
|   |   | |-RecoveryExpr 0x144125fc8 <col:20> '<dependent type>' contains-errors lvalue
|   |   | `-StringLiteral 0x144126030 <col:26> 'char[4]' lvalue "STR"
|   |   `-ReturnStmt 0x144126118 <line:22:9, col:17>
|   |     `-UnaryOperator 0x144126100 <col:16, col:17> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |       `-ImplicitCastExpr 0x1441260e8 <col:17> '<dependent type>' contains-errors <LValueToRValue>
|   |         `-RecoveryExpr 0x1441260c8 <col:17> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x144126800 <line:25:5, line:29:5> has_else
|   | |-BinaryOperator 0x144126270 <line:25:9, col:39> 'int' contains-errors '=='
|   | | |-CallExpr 0x1441261f0 <col:9, col:34> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x144126168 <col:9> 'int ()' Function 0x144123c08 'le32_to_cpu' 'int ()'
|   | | | `-CXXDependentScopeMemberExpr 0x1441261a8 <col:21, col:27> '<dependent type>' contains-errors lvalue .version
|   | | |   `-RecoveryExpr 0x144126188 <col:21> '<dependent type>' contains-errors lvalue
|   | | `-RecoveryExpr 0x144126250 <col:39> '<dependent type>' contains-errors lvalue
|   | |-CompoundStmt 0x1441265a0 <col:50, line:27:5>
|   | | `-BinaryOperator 0x144126580 <line:26:9, col:72> '<dependent type>' contains-errors '='
|   | |   |-CXXDependentScopeMemberExpr 0x1441262d8 <col:9, col:13> '<dependent type>' contains-errors lvalue ->total_sectors
|   | |   | `-RecoveryExpr 0x1441262b0 <col:9> '<dependent type>' contains-errors lvalue
|   | |   |   `-DeclRefExpr 0x144126290 <col:9> 'int *' lvalue ParmVar 0x14480dd28 'bs' 'int *'
|   | |   `-BinaryOperator 0x144126560 <col:29, col:72> '<dependent type>' contains-errors '/'
|   | |     |-CallExpr 0x144126518 <col:29, col:68> '<dependent type>' contains-errors
|   | |     | |-DeclRefExpr 0x144126400 <col:29> 'int ()' Function 0x144126348 'le64_to_cpu' 'int ()'
|   | |     | `-CXXDependentScopeMemberExpr 0x1441264d0 <col:41, col:64> '<dependent type>' contains-errors lvalue .disk
|   | |     |   `-CXXDependentScopeMemberExpr 0x144126488 <col:41, col:53> '<dependent type>' contains-errors lvalue .redolog_v1
|   | |     |     `-CXXDependentScopeMemberExpr 0x144126440 <col:41, col:47> '<dependent type>' contains-errors lvalue .extra
|   | |     |       `-RecoveryExpr 0x144126420 <col:41> '<dependent type>' contains-errors lvalue
|   | |     `-IntegerLiteral 0x144126540 <col:72> 'int' 512
|   | `-CompoundStmt 0x1441267e8 <line:27:12, line:29:5>
|   |   `-BinaryOperator 0x1441267c8 <line:28:9, col:69> '<dependent type>' contains-errors '='
|   |     |-CXXDependentScopeMemberExpr 0x144126600 <col:9, col:13> '<dependent type>' contains-errors lvalue ->total_sectors
|   |     | `-RecoveryExpr 0x1441265d8 <col:9> '<dependent type>' contains-errors lvalue
|   |     |   `-DeclRefExpr 0x1441265b8 <col:9> 'int *' lvalue ParmVar 0x14480dd28 'bs' 'int *'
|   |     `-BinaryOperator 0x1441267a8 <col:29, col:69> '<dependent type>' contains-errors '/'
|   |       |-CallExpr 0x144126760 <col:29, col:65> '<dependent type>' contains-errors
|   |       | |-DeclRefExpr 0x144126648 <col:29> 'int ()' Function 0x144126348 'le64_to_cpu' 'int ()'
|   |       | `-CXXDependentScopeMemberExpr 0x144126718 <col:41, col:61> '<dependent type>' contains-errors lvalue .disk
|   |       |   `-CXXDependentScopeMemberExpr 0x1441266d0 <col:41, col:53> '<dependent type>' contains-errors lvalue .redolog
|   |       |     `-CXXDependentScopeMemberExpr 0x144126688 <col:41, col:47> '<dependent type>' contains-errors lvalue .extra
|   |       |       `-RecoveryExpr 0x144126668 <col:41> '<dependent type>' contains-errors lvalue
|   |       `-IntegerLiteral 0x144126788 <col:69> 'int' 512
|   |-IfStmt 0x1441269c8 <line:33:5, line:36:5>
|   | |-RecoveryExpr 0x144126900 <line:33:9, col:27> '_Bool' contains-errors
|   | `-CompoundStmt 0x1441269b0 <col:37, line:36:5>
|   |   `-CallExpr 0x144126980 <line:34:9, col:31> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x144126920 <col:9> 'int ()' Function 0x144125ef0 'error_setg' 'int ()'
|   |     |-RecoveryExpr 0x144126940 <col:20> '<dependent type>' contains-errors lvalue
|   |     `-StringLiteral 0x144126960 <col:26> 'char[4]' lvalue "STR"
|   |-IfStmt 0x144126d78 <line:42:5, line:44:5>
|   | |-BinaryOperator 0x144126cd8 <line:42:9, col:15> 'int' '<'
|   | | |-ImplicitCastExpr 0x144126cc0 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x144126c80 <col:9> 'int' lvalue Var 0x144123118 'ret' 'int'
|   | | `-IntegerLiteral 0x144126ca0 <col:15> 'int' 0
|   | `-CompoundStmt 0x144126d60 <col:18, line:44:5>
|   |   `-GotoStmt 0x144126d48 <line:43:9, col:14> 'fail' 0x144126cf8
|   |-IfStmt 0x144827ae8 <line:56:5, line:60:5>
|   | |-RecoveryExpr 0x1448279e0 <line:56:9, col:50> '_Bool' contains-errors
|   | `-CompoundStmt 0x144827ac8 <col:63, line:60:5>
|   |   |-CallExpr 0x144827a60 <line:57:9, col:31> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x144827a00 <col:9> 'int ()' Function 0x144125ef0 'error_setg' 'int ()'
|   |   | |-RecoveryExpr 0x144827a20 <col:20> '<dependent type>' contains-errors lvalue
|   |   | `-StringLiteral 0x144827a40 <col:26> 'char[4]' lvalue "STR"
|   |   `-GotoStmt 0x144827ab0 <line:59:9, col:14> 'fail' 0x144126cf8
|   |-ReturnStmt 0x144827c28 <line:63:5, col:12>
|   | `-IntegerLiteral 0x144827c08 <col:12> 'int' 0
|   |-LabelStmt 0x144827d40 <line:65:1, col:5> 'fail'
|   | `-NullStmt 0x144827d38 <col:5>
|   `-ReturnStmt 0x144827d98 <line:67:5, col:12>
|     `-ImplicitCastExpr 0x144827d80 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x144827d60 <col:12> 'int' lvalue Var 0x144123118 'ret' 'int'
`-FunctionDecl 0x1441236c0 <line:16:9> col:9 implicit used strcmp 'int (const char *, const char *)' extern
  |-ParmVarDecl 0x1441237c0 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x144123828 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x144123768 <<invalid sloc>> Implicit 887
