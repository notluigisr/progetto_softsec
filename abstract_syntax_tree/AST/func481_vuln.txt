TranslationUnitDecl 0x126055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1260564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x126055bd0 '__int128'
|-TypedefDecl 0x126056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x126055bf0 'unsigned __int128'
|-TypedefDecl 0x12680be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12680bc00 'struct __NSConstantString_tag'
|   `-Record 0x126056580 '__NSConstantString_tag'
|-TypedefDecl 0x12680be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x126055d90 '__SVInt8_t'
|-TypedefDecl 0x12680bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x126055db0 '__SVInt16_t'
|-TypedefDecl 0x12680bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x126055dd0 '__SVInt32_t'
|-TypedefDecl 0x12680bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x126055df0 '__SVInt64_t'
|-TypedefDecl 0x12680c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x126055e10 '__SVUint8_t'
|-TypedefDecl 0x12680c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x126055e30 '__SVUint16_t'
|-TypedefDecl 0x12680c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x126055e50 '__SVUint32_t'
|-TypedefDecl 0x12680c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x126055e70 '__SVUint64_t'
|-TypedefDecl 0x12680c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x126055e90 '__SVFloat16_t'
|-TypedefDecl 0x12680c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x126055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12680c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x126055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12680c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x126055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12680c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x126055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12680c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x126055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12680c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x126055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12680c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x126055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12680c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x126055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12680c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x126055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12680c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x126055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12680c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x126055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12680c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x126056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12680c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x126056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12680c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x126056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12680c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x126056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12680c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x126056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12680c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1260560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12680c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1260560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12680c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1260560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12680c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x126056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12680ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x126056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12680cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x126056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12680cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x126056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12680cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x126056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12680d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1260561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12680d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1260561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12680d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1260561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12680d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x126056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12680d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x126056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12680d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x126056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12680d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x126056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12680d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x126056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12680d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1260562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12680d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1260562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12680d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1260562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12680d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x126056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12680d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x126056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12680d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x126056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12680d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x126056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12680da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x126056390 '__SVBool_t'
|-TypedefDecl 0x12680da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1260563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12680dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1260563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12680db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1260563f0 '__SVCount_t'
|-TypedefDecl 0x12680dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12680dbb0 'char *'
|   `-BuiltinType 0x1260556b0 'char'
|-TypedefDecl 0x12680dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12680dbb0 'char *'
|   `-BuiltinType 0x1260556b0 'char'
`-FunctionDecl 0x126826808 <dataset_diviso_filec/func481_vuln.c:1:1, line:55:1> line:1:22 asn1_oid_decode 'unsigned char (struct asn1_ctx *, unsigned char *, unsigned long **, unsigned int *)' static
  |-ParmVarDecl 0x12680e248 <col:38, col:55> col:55 used ctx 'struct asn1_ctx *'
  |-ParmVarDecl 0x12680e2f8 <line:2:10, col:25> col:25 used eoc 'unsigned char *'
  |-ParmVarDecl 0x126826600 <line:3:10, col:26> col:26 used oid 'unsigned long **'
  |-ParmVarDecl 0x1268266b8 <line:4:10, col:24> col:24 used len 'unsigned int *'
  `-CompoundStmt 0x1261232f8 <line:5:1, line:55:1>
    |-DeclStmt 0x126826998 <line:6:2, col:21>
    | `-VarDecl 0x126826930 <col:2, col:16> col:16 used subid 'unsigned long'
    |-DeclStmt 0x126826a30 <line:7:2, col:20>
    | `-VarDecl 0x1268269c8 <col:2, col:16> col:16 used size 'unsigned int'
    |-DeclStmt 0x126826ac8 <line:8:2, col:21>
    | `-VarDecl 0x126826a60 <col:2, col:17> col:17 used optr 'unsigned long *'
    |-BinaryOperator 0x126826be0 <line:10:2, col:30> 'unsigned int' contains-errors '='
    | |-DeclRefExpr 0x126826ae0 <col:2> 'unsigned int' lvalue Var 0x1268269c8 'size' 'unsigned int'
    | `-BinaryOperator 0x126826bc0 <col:9, col:30> '<dependent type>' contains-errors '+'
    |   |-BinaryOperator 0x126826b80 <col:9, col:20> '<dependent type>' contains-errors '-'
    |   | |-DeclRefExpr 0x126826b00 <col:9> 'unsigned char *' lvalue ParmVar 0x12680e2f8 'eoc' 'unsigned char *'
    |   | `-RecoveryExpr 0x126826b58 <col:15, col:20> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x126826b20 <col:15> 'struct asn1_ctx *' lvalue ParmVar 0x12680e248 'ctx' 'struct asn1_ctx *'
    |   `-IntegerLiteral 0x126826ba0 <col:30> 'int' 1
    |-BinaryOperator 0x126827070 <line:11:2, col:57> 'unsigned long *' contains-errors '='
    | |-UnaryOperator 0x126826f80 <col:2, col:3> 'unsigned long *' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x126826f68 <col:3> 'unsigned long **' <LValueToRValue>
    | |   `-DeclRefExpr 0x126826c00 <col:3> 'unsigned long **' lvalue ParmVar 0x126826600 'oid' 'unsigned long **'
    | `-CallExpr 0x126827040 <col:9, col:57> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x126826d80 <col:9> 'int ()' Function 0x126826cc8 'kmalloc' 'int ()'
    |   |-BinaryOperator 0x126827000 <col:17, col:44> 'unsigned long' '*'
    |   | |-ImplicitCastExpr 0x126826fe8 <col:17> 'unsigned long' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x126826fd0 <col:17> 'unsigned int' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x126826da0 <col:17> 'unsigned int' lvalue Var 0x1268269c8 'size' 'unsigned int'
    |   | `-UnaryExprOrTypeTraitExpr 0x126826fb0 <col:24, col:44> 'unsigned long' sizeof 'unsigned long'
    |   `-RecoveryExpr 0x126827020 <col:47> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x126827598 <line:12:2, line:16:2>
    | |-BinaryOperator 0x126827198 <line:12:6, col:14> 'int' contains-errors '=='
    | | |-UnaryOperator 0x126827160 <col:6, col:7> 'unsigned long *' lvalue prefix '*' cannot overflow
    | | | `-ImplicitCastExpr 0x126827148 <col:7> 'unsigned long **' <LValueToRValue>
    | | |   `-DeclRefExpr 0x126827090 <col:7> 'unsigned long **' lvalue ParmVar 0x126826600 'oid' 'unsigned long **'
    | | `-RecoveryExpr 0x126827178 <col:14> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x126827578 <col:20, line:16:2>
    |   |-IfStmt 0x126827510 <line:13:3, line:14:26>
    |   | |-CallExpr 0x126827308 <line:13:7, col:21> 'int'
    |   | | `-ImplicitCastExpr 0x1268272f0 <col:7> 'int (*)()' <FunctionToPointerDecay>
    |   | |   `-DeclRefExpr 0x126827298 <col:7> 'int ()' Function 0x1268271e0 'net_ratelimit' 'int ()'
    |   | `-CallExpr 0x1268274c8 <line:14:4, col:26> 'int'
    |   |   |-ImplicitCastExpr 0x1268274b0 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |   |   | `-DeclRefExpr 0x126827408 <col:4> 'int ()' Function 0x126827350 'printk' 'int ()'
    |   |   |-ImplicitCastExpr 0x1268274f8 <col:11> 'char *' <ArrayToPointerDecay>
    |   |   | `-StringLiteral 0x126827470 <col:11> 'char[4]' lvalue "STR"
    |   |   `-IntegerLiteral 0x126827490 <<scratch space>:2:1> 'int' 14
    |   `-ReturnStmt 0x126827568 <dataset_diviso_filec/func481_vuln.c:15:3, col:10>
    |     `-ImplicitCastExpr 0x126827550 <col:10> 'unsigned char' <IntegralCast>
    |       `-IntegerLiteral 0x126827530 <col:10> 'int' 0
    |-BinaryOperator 0x12682ba48 <line:18:2, col:10> 'unsigned long *' '='
    | |-DeclRefExpr 0x1268275b8 <col:2> 'unsigned long *' lvalue Var 0x126826a60 'optr' 'unsigned long *'
    | `-ImplicitCastExpr 0x12682ba30 <col:9, col:10> 'unsigned long *' <LValueToRValue>
    |   `-UnaryOperator 0x12682ba18 <col:9, col:10> 'unsigned long *' lvalue prefix '*' cannot overflow
    |     `-ImplicitCastExpr 0x12682ba00 <col:10> 'unsigned long **' <LValueToRValue>
    |       `-DeclRefExpr 0x1268275d8 <col:10> 'unsigned long **' lvalue ParmVar 0x126826600 'oid' 'unsigned long **'
    |-IfStmt 0x12682bf78 <line:20:2, line:24:2>
    | |-UnaryOperator 0x12682bc20 <line:20:6, col:36> 'int' prefix '!' cannot overflow
    | | `-CallExpr 0x12682bbd8 <col:7, col:36> 'int'
    | |   |-ImplicitCastExpr 0x12682bbc0 <col:7> 'int (*)()' <FunctionToPointerDecay>
    | |   | `-DeclRefExpr 0x12682bb48 <col:7> 'int ()' Function 0x12682ba90 'asn1_subid_decode' 'int ()'
    | |   |-ImplicitCastExpr 0x12682bc08 <col:25> 'struct asn1_ctx *' <LValueToRValue>
    | |   | `-DeclRefExpr 0x12682bb68 <col:25> 'struct asn1_ctx *' lvalue ParmVar 0x12680e248 'ctx' 'struct asn1_ctx *'
    | |   `-UnaryOperator 0x12682bba8 <col:30, col:31> 'unsigned long *' prefix '&' cannot overflow
    | |     `-DeclRefExpr 0x12682bb88 <col:31> 'unsigned long' lvalue Var 0x126826930 'subid' 'unsigned long'
    | `-CompoundStmt 0x12682bf50 <col:39, line:24:2>
    |   |-CallExpr 0x12682bda0 <line:21:3, col:13> 'int'
    |   | |-ImplicitCastExpr 0x12682bd88 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x12682bd18 <col:3> 'int ()' Function 0x12682bc60 'kfree' 'int ()'
    |   | `-ImplicitCastExpr 0x12682bdc8 <col:9, col:10> 'unsigned long *' <LValueToRValue>
    |   |   `-UnaryOperator 0x12682bd70 <col:9, col:10> 'unsigned long *' lvalue prefix '*' cannot overflow
    |   |     `-ImplicitCastExpr 0x12682bd58 <col:10> 'unsigned long **' <LValueToRValue>
    |   |       `-DeclRefExpr 0x12682bd38 <col:10> 'unsigned long **' lvalue ParmVar 0x126826600 'oid' 'unsigned long **'
    |   |-BinaryOperator 0x12682bee8 <line:22:3, col:10> 'unsigned long *' contains-errors '='
    |   | |-UnaryOperator 0x12682beb0 <col:3, col:4> 'unsigned long *' lvalue prefix '*' cannot overflow
    |   | | `-ImplicitCastExpr 0x12682be98 <col:4> 'unsigned long **' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x12682bde0 <col:4> 'unsigned long **' lvalue ParmVar 0x126826600 'oid' 'unsigned long **'
    |   | `-RecoveryExpr 0x12682bec8 <col:10> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x12682bf40 <line:23:3, col:10>
    |     `-ImplicitCastExpr 0x12682bf28 <col:10> 'unsigned char' <IntegralCast>
    |       `-IntegerLiteral 0x12682bf08 <col:10> 'int' 0
    |-IfStmt 0x12682c6d8 <line:26:2, line:35:2> has_else
    | |-BinaryOperator 0x12682c008 <line:26:6, col:14> 'int' '<'
    | | |-ImplicitCastExpr 0x12682bfd8 <col:6> 'unsigned long' <LValueToRValue>
    | | | `-DeclRefExpr 0x12682bf98 <col:6> 'unsigned long' lvalue Var 0x126826930 'subid' 'unsigned long'
    | | `-ImplicitCastExpr 0x12682bff0 <col:14> 'unsigned long' <IntegralCast>
    | |   `-IntegerLiteral 0x12682bfb8 <col:14> 'int' 40
    | |-CompoundStmt 0x12682c1c8 <col:18, line:29:2>
    | | |-BinaryOperator 0x12682c0d8 <line:27:3, col:14> 'unsigned long' '='
    | | | |-ArraySubscriptExpr 0x12682c080 <col:3, col:10> 'unsigned long' lvalue
    | | | | |-ImplicitCastExpr 0x12682c068 <col:3> 'unsigned long *' <LValueToRValue>
    | | | | | `-DeclRefExpr 0x12682c028 <col:3> 'unsigned long *' lvalue Var 0x126826a60 'optr' 'unsigned long *'
    | | | | `-IntegerLiteral 0x12682c048 <col:9> 'int' 0
    | | | `-ImplicitCastExpr 0x12682c0c0 <col:14> 'unsigned long' <IntegralCast>
    | | |   `-IntegerLiteral 0x12682c0a0 <col:14> 'int' 0
    | | `-BinaryOperator 0x12682c1a8 <line:28:3, col:14> 'unsigned long' '='
    | |   |-ArraySubscriptExpr 0x12682c150 <col:3, col:10> 'unsigned long' lvalue
    | |   | |-ImplicitCastExpr 0x12682c138 <col:3> 'unsigned long *' <LValueToRValue>
    | |   | | `-DeclRefExpr 0x12682c0f8 <col:3> 'unsigned long *' lvalue Var 0x126826a60 'optr' 'unsigned long *'
    | |   | `-IntegerLiteral 0x12682c118 <col:9> 'int' 1
    | |   `-ImplicitCastExpr 0x12682c190 <col:14> 'unsigned long' <LValueToRValue>
    | |     `-DeclRefExpr 0x12682c170 <col:14> 'unsigned long' lvalue Var 0x126826930 'subid' 'unsigned long'
    | `-IfStmt 0x12682c6a8 <line:29:9, line:35:2> has_else
    |   |-BinaryOperator 0x12682c258 <line:29:13, col:21> 'int' '<'
    |   | |-ImplicitCastExpr 0x12682c228 <col:13> 'unsigned long' <LValueToRValue>
    |   | | `-DeclRefExpr 0x12682c1e8 <col:13> 'unsigned long' lvalue Var 0x126826930 'subid' 'unsigned long'
    |   | `-ImplicitCastExpr 0x12682c240 <col:21> 'unsigned long' <IntegralCast>
    |   |   `-IntegerLiteral 0x12682c208 <col:21> 'int' 80
    |   |-CompoundStmt 0x12682c470 <col:25, line:32:2>
    |   | |-BinaryOperator 0x12682c328 <line:30:3, col:14> 'unsigned long' '='
    |   | | |-ArraySubscriptExpr 0x12682c2d0 <col:3, col:10> 'unsigned long' lvalue
    |   | | | |-ImplicitCastExpr 0x12682c2b8 <col:3> 'unsigned long *' <LValueToRValue>
    |   | | | | `-DeclRefExpr 0x12682c278 <col:3> 'unsigned long *' lvalue Var 0x126826a60 'optr' 'unsigned long *'
    |   | | | `-IntegerLiteral 0x12682c298 <col:9> 'int' 0
    |   | | `-ImplicitCastExpr 0x12682c310 <col:14> 'unsigned long' <IntegralCast>
    |   | |   `-IntegerLiteral 0x12682c2f0 <col:14> 'int' 1
    |   | `-BinaryOperator 0x12682c450 <line:31:3, col:22> 'unsigned long' '='
    |   |   |-ArraySubscriptExpr 0x12682c3a0 <col:3, col:10> 'unsigned long' lvalue
    |   |   | |-ImplicitCastExpr 0x12682c388 <col:3> 'unsigned long *' <LValueToRValue>
    |   |   | | `-DeclRefExpr 0x12682c348 <col:3> 'unsigned long *' lvalue Var 0x126826a60 'optr' 'unsigned long *'
    |   |   | `-IntegerLiteral 0x12682c368 <col:9> 'int' 1
    |   |   `-BinaryOperator 0x12682c430 <col:14, col:22> 'unsigned long' '-'
    |   |     |-ImplicitCastExpr 0x12682c400 <col:14> 'unsigned long' <LValueToRValue>
    |   |     | `-DeclRefExpr 0x12682c3c0 <col:14> 'unsigned long' lvalue Var 0x126826930 'subid' 'unsigned long'
    |   |     `-ImplicitCastExpr 0x12682c418 <col:22> 'unsigned long' <IntegralCast>
    |   |       `-IntegerLiteral 0x12682c3e0 <col:22> 'int' 40
    |   `-CompoundStmt 0x12682c688 <line:32:9, line:35:2>
    |     |-BinaryOperator 0x12682c540 <line:33:3, col:14> 'unsigned long' '='
    |     | |-ArraySubscriptExpr 0x12682c4e8 <col:3, col:10> 'unsigned long' lvalue
    |     | | |-ImplicitCastExpr 0x12682c4d0 <col:3> 'unsigned long *' <LValueToRValue>
    |     | | | `-DeclRefExpr 0x12682c490 <col:3> 'unsigned long *' lvalue Var 0x126826a60 'optr' 'unsigned long *'
    |     | | `-IntegerLiteral 0x12682c4b0 <col:9> 'int' 0
    |     | `-ImplicitCastExpr 0x12682c528 <col:14> 'unsigned long' <IntegralCast>
    |     |   `-IntegerLiteral 0x12682c508 <col:14> 'int' 2
    |     `-BinaryOperator 0x12682c668 <line:34:3, col:22> 'unsigned long' '='
    |       |-ArraySubscriptExpr 0x12682c5b8 <col:3, col:10> 'unsigned long' lvalue
    |       | |-ImplicitCastExpr 0x12682c5a0 <col:3> 'unsigned long *' <LValueToRValue>
    |       | | `-DeclRefExpr 0x12682c560 <col:3> 'unsigned long *' lvalue Var 0x126826a60 'optr' 'unsigned long *'
    |       | `-IntegerLiteral 0x12682c580 <col:9> 'int' 1
    |       `-BinaryOperator 0x12682c648 <col:14, col:22> 'unsigned long' '-'
    |         |-ImplicitCastExpr 0x12682c618 <col:14> 'unsigned long' <LValueToRValue>
    |         | `-DeclRefExpr 0x12682c5d8 <col:14> 'unsigned long' lvalue Var 0x126826930 'subid' 'unsigned long'
    |         `-ImplicitCastExpr 0x12682c630 <col:22> 'unsigned long' <IntegralCast>
    |           `-IntegerLiteral 0x12682c5f8 <col:22> 'int' 80
    |-BinaryOperator 0x12682c790 <line:37:2, col:9> 'unsigned int' '='
    | |-UnaryOperator 0x12682c740 <col:2, col:3> 'unsigned int' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x12682c728 <col:3> 'unsigned int *' <LValueToRValue>
    | |   `-DeclRefExpr 0x12682c708 <col:3> 'unsigned int *' lvalue ParmVar 0x1268266b8 'len' 'unsigned int *'
    | `-ImplicitCastExpr 0x12682c778 <col:9> 'unsigned int' <IntegralCast>
    |   `-IntegerLiteral 0x12682c758 <col:9> 'int' 2
    |-CompoundAssignOperator 0x12682c7f0 <line:38:2, col:10> 'unsigned long *' '+=' ComputeLHSTy='unsigned long *' ComputeResultTy='unsigned long *'
    | |-DeclRefExpr 0x12682c7b0 <col:2> 'unsigned long *' lvalue Var 0x126826a60 'optr' 'unsigned long *'
    | `-IntegerLiteral 0x12682c7d0 <col:10> 'int' 2
    |-WhileStmt 0x126123290 <line:40:2, line:53:2>
    | |-BinaryOperator 0x12682c8a0 <line:40:9, col:24> 'int' contains-errors '<'
    | | |-RecoveryExpr 0x12682c858 <col:9, col:14> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x12682c820 <col:9> 'struct asn1_ctx *' lvalue ParmVar 0x12680e248 'ctx' 'struct asn1_ctx *'
    | | `-DeclRefExpr 0x12682c880 <col:24> 'unsigned char *' lvalue ParmVar 0x12680e2f8 'eoc' 'unsigned char *'
    | `-CompoundStmt 0x126123270 <col:29, line:53:2>
    |   |-IfStmt 0x126122ee0 <line:41:3, line:46:3>
    |   | |-BinaryOperator 0x12682c980 <line:41:7, col:18> 'int' '>'
    |   | | |-UnaryOperator 0x12682c930 <col:7, col:14> 'unsigned int' prefix '++'
    |   | | | `-ParenExpr 0x12682c910 <col:9, col:14> 'unsigned int' lvalue
    |   | | |   `-UnaryOperator 0x12682c8f8 <col:10, col:11> 'unsigned int' lvalue prefix '*' cannot overflow
    |   | | |     `-ImplicitCastExpr 0x12682c8e0 <col:11> 'unsigned int *' <LValueToRValue>
    |   | | |       `-DeclRefExpr 0x12682c8c0 <col:11> 'unsigned int *' lvalue ParmVar 0x1268266b8 'len' 'unsigned int *'
    |   | | `-ImplicitCastExpr 0x12682c968 <col:18> 'unsigned int' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x12682c948 <col:18> 'unsigned int' lvalue Var 0x1268269c8 'size' 'unsigned int'
    |   | `-CompoundStmt 0x126122eb0 <col:24, line:46:3>
    |   |   |-BinaryOperator 0x126122c58 <line:42:4, col:17> '<dependent type>' contains-errors '='
    |   |   | |-RecoveryExpr 0x12682c9d8 <col:4, col:9> '<dependent type>' contains-errors lvalue
    |   |   | | `-DeclRefExpr 0x12682c9a0 <col:4> 'struct asn1_ctx *' lvalue ParmVar 0x12680e248 'ctx' 'struct asn1_ctx *'
    |   |   | `-RecoveryExpr 0x126122c38 <col:17> '<dependent type>' contains-errors lvalue
    |   |   |-CallExpr 0x126122d00 <line:43:4, col:14> 'int'
    |   |   | |-ImplicitCastExpr 0x126122ce8 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |   |   | | `-DeclRefExpr 0x126122c78 <col:4> 'int ()' Function 0x12682bc60 'kfree' 'int ()'
    |   |   | `-ImplicitCastExpr 0x126122d28 <col:10, col:11> 'unsigned long *' <LValueToRValue>
    |   |   |   `-UnaryOperator 0x126122cd0 <col:10, col:11> 'unsigned long *' lvalue prefix '*' cannot overflow
    |   |   |     `-ImplicitCastExpr 0x126122cb8 <col:11> 'unsigned long **' <LValueToRValue>
    |   |   |       `-DeclRefExpr 0x126122c98 <col:11> 'unsigned long **' lvalue ParmVar 0x126826600 'oid' 'unsigned long **'
    |   |   |-BinaryOperator 0x126122e48 <line:44:4, col:11> 'unsigned long *' contains-errors '='
    |   |   | |-UnaryOperator 0x126122e10 <col:4, col:5> 'unsigned long *' lvalue prefix '*' cannot overflow
    |   |   | | `-ImplicitCastExpr 0x126122df8 <col:5> 'unsigned long **' <LValueToRValue>
    |   |   | |   `-DeclRefExpr 0x126122d40 <col:5> 'unsigned long **' lvalue ParmVar 0x126826600 'oid' 'unsigned long **'
    |   |   | `-RecoveryExpr 0x126122e28 <col:11> '<dependent type>' contains-errors lvalue
    |   |   `-ReturnStmt 0x126122ea0 <line:45:4, col:11>
    |   |     `-ImplicitCastExpr 0x126122e88 <col:11> 'unsigned char' <IntegralCast>
    |   |       `-IntegerLiteral 0x126122e68 <col:11> 'int' 0
    |   `-IfStmt 0x126123250 <line:48:3, line:52:3>
    |     |-UnaryOperator 0x126122fd8 <line:48:7, col:37> 'int' prefix '!' cannot overflow
    |     | `-CallExpr 0x126122f90 <col:8, col:37> 'int'
    |     |   |-ImplicitCastExpr 0x126122f78 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |     |   | `-DeclRefExpr 0x126122f00 <col:8> 'int ()' Function 0x12682ba90 'asn1_subid_decode' 'int ()'
    |     |   |-ImplicitCastExpr 0x126122fc0 <col:26> 'struct asn1_ctx *' <LValueToRValue>
    |     |   | `-DeclRefExpr 0x126122f20 <col:26> 'struct asn1_ctx *' lvalue ParmVar 0x12680e248 'ctx' 'struct asn1_ctx *'
    |     |   `-UnaryOperator 0x126122f60 <col:31, col:35> 'unsigned long *' postfix '++'
    |     |     `-DeclRefExpr 0x126122f40 <col:31> 'unsigned long *' lvalue Var 0x126826a60 'optr' 'unsigned long *'
    |     `-CompoundStmt 0x126123228 <col:40, line:52:3>
    |       |-CallExpr 0x126123078 <line:49:4, col:14> 'int'
    |       | |-ImplicitCastExpr 0x126123060 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |       | | `-DeclRefExpr 0x126122ff0 <col:4> 'int ()' Function 0x12682bc60 'kfree' 'int ()'
    |       | `-ImplicitCastExpr 0x1261230a0 <col:10, col:11> 'unsigned long *' <LValueToRValue>
    |       |   `-UnaryOperator 0x126123048 <col:10, col:11> 'unsigned long *' lvalue prefix '*' cannot overflow
    |       |     `-ImplicitCastExpr 0x126123030 <col:11> 'unsigned long **' <LValueToRValue>
    |       |       `-DeclRefExpr 0x126123010 <col:11> 'unsigned long **' lvalue ParmVar 0x126826600 'oid' 'unsigned long **'
    |       |-BinaryOperator 0x1261231c0 <line:50:4, col:11> 'unsigned long *' contains-errors '='
    |       | |-UnaryOperator 0x126123188 <col:4, col:5> 'unsigned long *' lvalue prefix '*' cannot overflow
    |       | | `-ImplicitCastExpr 0x126123170 <col:5> 'unsigned long **' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x1261230b8 <col:5> 'unsigned long **' lvalue ParmVar 0x126826600 'oid' 'unsigned long **'
    |       | `-RecoveryExpr 0x1261231a0 <col:11> '<dependent type>' contains-errors lvalue
    |       `-ReturnStmt 0x126123218 <line:51:4, col:11>
    |         `-ImplicitCastExpr 0x126123200 <col:11> 'unsigned char' <IntegralCast>
    |           `-IntegerLiteral 0x1261231e0 <col:11> 'int' 0
    `-ReturnStmt 0x1261232e8 <line:54:2, col:9>
      `-ImplicitCastExpr 0x1261232d0 <col:9> 'unsigned char' <IntegralCast>
        `-IntegerLiteral 0x1261232b0 <col:9> 'int' 1
