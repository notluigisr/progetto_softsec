TranslationUnitDecl 0x14e855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14e8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14e855bd0 '__int128'
|-TypedefDecl 0x14e856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14e855bf0 'unsigned __int128'
|-TypedefDecl 0x14e926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14e926000 'struct __NSConstantString_tag'
|   `-Record 0x14e856580 '__NSConstantString_tag'
|-TypedefDecl 0x14e926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14e855d90 '__SVInt8_t'
|-TypedefDecl 0x14e926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14e855db0 '__SVInt16_t'
|-TypedefDecl 0x14e926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14e855dd0 '__SVInt32_t'
|-TypedefDecl 0x14e9263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14e855df0 '__SVInt64_t'
|-TypedefDecl 0x14e926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14e855e10 '__SVUint8_t'
|-TypedefDecl 0x14e9264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14e855e30 '__SVUint16_t'
|-TypedefDecl 0x14e926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14e855e50 '__SVUint32_t'
|-TypedefDecl 0x14e926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14e855e70 '__SVUint64_t'
|-TypedefDecl 0x14e9265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14e855e90 '__SVFloat16_t'
|-TypedefDecl 0x14e926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14e855eb0 '__SVFloat32_t'
|-TypedefDecl 0x14e9266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14e855ed0 '__SVFloat64_t'
|-TypedefDecl 0x14e926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14e855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14e926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14e855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14e9267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14e855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14e926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14e855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14e9268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14e855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14e926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14e855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14e926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14e855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14e9269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14e855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14e926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14e855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14e926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14e856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14e926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14e856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14e926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14e856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14e926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14e856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14e926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14e856090 '__clang_svint8x3_t'
|-TypedefDecl 0x14e926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14e8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14e926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14e8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14e926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14e8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14e926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14e856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14e926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14e856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14e926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14e856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14e926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14e856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14e926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14e856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14e927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14e8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14e927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14e8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14e9278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14e8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14e927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14e856210 '__clang_svint8x4_t'
|-TypedefDecl 0x14e9279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14e856230 '__clang_svint16x4_t'
|-TypedefDecl 0x14e927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14e856250 '__clang_svint32x4_t'
|-TypedefDecl 0x14e927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14e856270 '__clang_svint64x4_t'
|-TypedefDecl 0x14e927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14e856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14e927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14e8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14e927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14e8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14e927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14e8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14e927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14e856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14e927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14e856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14e927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14e856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14e927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14e856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14e927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14e856390 '__SVBool_t'
|-TypedefDecl 0x14e927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14e8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14e927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14e8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14e927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14e8563f0 '__SVCount_t'
|-TypedefDecl 0x14e927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14e927fb0 'char *'
|   `-BuiltinType 0x14e8556b0 'char'
|-TypedefDecl 0x14e928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14e927fb0 'char *'
|   `-BuiltinType 0x14e8556b0 'char'
`-FunctionDecl 0x14e928318 <dataset_diviso_filec/func16456_vuln.c:1:1, line:38:1> line:1:1 invalid BuildIndexValueDescription 'int (int, int *, int *)'
  |-ParmVarDecl 0x14e9280f0 <col:28, col:37> col:37 invalid indexRelation 'int'
  |-ParmVarDecl 0x14e9281a8 <line:2:10, col:17> col:17 invalid values 'int *'
  |-ParmVarDecl 0x14e928228 <col:25, col:31> col:31 invalid isnull 'int *'
  `-CompoundStmt 0x14e942ea8 <line:3:1, line:38:1>
    |-DeclStmt 0x14e928508 <line:5:2, col:47>
    | `-VarDecl 0x14e9283f0 <col:2, col:39> col:8 used natts 'int' cinit
    |   `-CXXDependentScopeMemberExpr 0x14e9284c0 <col:16, col:39> '<dependent type>' contains-errors lvalue ->relnatts
    |     `-CXXDependentScopeMemberExpr 0x14e928478 <col:16, col:31> '<dependent type>' contains-errors lvalue ->rd_rel
    |       `-RecoveryExpr 0x14e928458 <col:16> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x14e9285a0 <line:6:2, col:9>
    | `-VarDecl 0x14e928538 <col:2, col:8> col:8 used i 'int'
    |-CallExpr 0x14e9287c0 <line:8:2, col:21> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14e928710 <col:2> 'int ()' Function 0x14e928658 'initStringInfo' 'int ()'
    | `-UnaryOperator 0x14e9287a8 <col:17, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x14e928788 <col:18> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x14e941ce0 <line:9:2, line:11:18> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14e9418e0 <line:9:2> 'int ()' Function 0x14e941828 'appendStringInfo' 'int ()'
    | |-UnaryOperator 0x14e941c78 <col:19, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-RecoveryExpr 0x14e941c58 <col:20> '<dependent type>' contains-errors lvalue
    | |-StringLiteral 0x14e941970 <col:25> 'char[4]' lvalue "STR"
    | `-CallExpr 0x14e941cb0 <line:10:7, line:11:17> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14e941a70 <line:10:7> 'int ()' Function 0x14e9419b8 'pg_get_indexdef_columns' 'int ()'
    |   |-CallExpr 0x14e941bb0 <col:31, col:61> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x14e941b70 <col:31> 'int ()' Function 0x14e941ab8 'RelationGetRelid' 'int ()'
    |   | `-RecoveryExpr 0x14e941b90 <col:48> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x14e941c90 <line:11:13> '<dependent type>' contains-errors lvalue
    `-ForStmt 0x14e942d58 <line:13:2, line:33:2>
      |-BinaryOperator 0x14e941d58 <line:13:7, col:11> 'int' '='
      | |-DeclRefExpr 0x14e941d18 <col:7> 'int' lvalue Var 0x14e928538 'i' 'int'
      | `-IntegerLiteral 0x14e941d38 <col:11> 'int' 0
      |-<<<NULL>>>
      |-BinaryOperator 0x14e941de8 <col:14, col:18> 'int' contains-errors '<'
      | |-ImplicitCastExpr 0x14e941db8 <col:14> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x14e941d78 <col:14> 'int' lvalue Var 0x14e928538 'i' 'int'
      | `-ImplicitCastExpr 0x14e941dd0 <col:18> 'int' contains-errors <LValueToRValue>
      |   `-DeclRefExpr 0x14e941d98 <col:18> 'int' contains-errors lvalue Var 0x14e9283f0 'natts' 'int'
      |-UnaryOperator 0x14e941e28 <col:25, col:26> 'int' postfix '++'
      | `-DeclRefExpr 0x14e941e08 <col:25> 'int' lvalue Var 0x14e928538 'i' 'int'
      `-CompoundStmt 0x14e942d38 <line:14:2, line:33:2>
        |-DeclStmt 0x14e941ec0 <line:15:3, col:15>
        | `-VarDecl 0x14e941e58 <col:3, col:12> col:12 used val 'char *'
        `-IfStmt 0x14e942690 <line:17:3, line:28:3> has_else
          |-ArraySubscriptExpr 0x14e941f48 <line:17:7, col:15> '<dependent type>' contains-errors lvalue
          | |-ImplicitCastExpr 0x14e941f18 <col:7> '<dependent type>' contains-errors <LValueToRValue>
          | | `-RecoveryExpr 0x14e941ed8 <col:7> '<dependent type>' contains-errors lvalue
          | `-ImplicitCastExpr 0x14e941f30 <col:14> 'int' <LValueToRValue>
          |   `-DeclRefExpr 0x14e941ef8 <col:14> 'int' lvalue Var 0x14e928538 'i' 'int'
          |-BinaryOperator 0x14e941fc0 <line:18:4, col:10> 'char *' '='
          | |-DeclRefExpr 0x14e941f68 <col:4> 'char *' lvalue Var 0x14e941e58 'val' 'char *'
          | `-ImplicitCastExpr 0x14e941fa8 <col:10> 'char *' <ArrayToPointerDecay>
          |   `-StringLiteral 0x14e941f88 <col:10> 'char[4]' lvalue "STR"
          `-CompoundStmt 0x14e942670 <line:20:3, line:28:3>
            |-CallExpr 0x14e942360 <line:25:4, line:26:33> '<dependent type>' contains-errors
            | |-DeclRefExpr 0x14e9420c0 <line:25:4> 'int ()' Function 0x14e942008 'getTypeOutputInfo' 'int ()'
            | |-ArraySubscriptExpr 0x14e9422d0 <col:22, col:51> '<dependent type>' contains-errors lvalue
            | | |-ImplicitCastExpr 0x14e9422a0 <col:22, col:37> '<dependent type>' contains-errors <LValueToRValue>
            | | | `-CXXDependentScopeMemberExpr 0x14e942100 <col:22, col:37> '<dependent type>' contains-errors lvalue ->rd_opcintype
            | | |   `-RecoveryExpr 0x14e9420e0 <col:22> '<dependent type>' contains-errors lvalue
            | | `-ImplicitCastExpr 0x14e9422b8 <col:50> 'int' <LValueToRValue>
            | |   `-DeclRefExpr 0x14e942148 <col:50> 'int' lvalue Var 0x14e928538 'i' 'int'
            | |-UnaryOperator 0x14e942310 <line:26:10, col:11> '<dependent type>' contains-errors prefix '&' cannot overflow
            | | `-RecoveryExpr 0x14e9422f0 <col:11> '<dependent type>' contains-errors lvalue
            | `-UnaryOperator 0x14e942348 <col:20, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow
            |   `-RecoveryExpr 0x14e942328 <col:21> '<dependent type>' contains-errors lvalue
            `-BinaryOperator 0x14e942650 <line:27:4, col:50> 'char *' contains-errors '='
              |-DeclRefExpr 0x14e942398 <col:4> 'char *' lvalue Var 0x14e941e58 'val' 'char *'
              `-CallExpr 0x14e942620 <col:10, col:50> '<dependent type>' contains-errors
                |-DeclRefExpr 0x14e942498 <col:10> 'int ()' Function 0x14e9423e0 'OidOutputFunctionCall' 'int ()'
                |-RecoveryExpr 0x14e9425b0 <col:32> '<dependent type>' contains-errors lvalue
                `-ArraySubscriptExpr 0x14e942600 <col:41, col:49> '<dependent type>' contains-errors lvalue
                  |-ImplicitCastExpr 0x14e9425d0 <col:41> '<dependent type>' contains-errors <LValueToRValue>
                  | `-RecoveryExpr 0x14e9424d0 <col:41> '<dependent type>' contains-errors lvalue
                  `-ImplicitCastExpr 0x14e9425e8 <col:48> 'int' <LValueToRValue>
                    `-DeclRefExpr 0x14e9424f0 <col:48> 'int' lvalue Var 0x14e928538 'i' 'int'
