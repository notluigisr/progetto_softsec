TranslationUnitDecl 0x152855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1528564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x152855bd0 '__int128'
|-TypedefDecl 0x152856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x152855bf0 'unsigned __int128'
|-TypedefDecl 0x152926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x152926000 'struct __NSConstantString_tag'
|   `-Record 0x152856580 '__NSConstantString_tag'
|-TypedefDecl 0x152926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x152855d90 '__SVInt8_t'
|-TypedefDecl 0x152926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x152855db0 '__SVInt16_t'
|-TypedefDecl 0x152926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x152855dd0 '__SVInt32_t'
|-TypedefDecl 0x1529263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x152855df0 '__SVInt64_t'
|-TypedefDecl 0x152926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x152855e10 '__SVUint8_t'
|-TypedefDecl 0x1529264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x152855e30 '__SVUint16_t'
|-TypedefDecl 0x152926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x152855e50 '__SVUint32_t'
|-TypedefDecl 0x152926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x152855e70 '__SVUint64_t'
|-TypedefDecl 0x1529265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x152855e90 '__SVFloat16_t'
|-TypedefDecl 0x152926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x152855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1529266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x152855ed0 '__SVFloat64_t'
|-TypedefDecl 0x152926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x152855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x152926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x152855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1529267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x152855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x152926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x152855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1529268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x152855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x152926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x152855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x152926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x152855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1529269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x152855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x152926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x152855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x152926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x152856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x152926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x152856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x152926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x152856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x152926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x152856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x152926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x152856090 '__clang_svint8x3_t'
|-TypedefDecl 0x152926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1528560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x152926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1528560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x152926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1528560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x152926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x152856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x152926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x152856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x152926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x152856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x152926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x152856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x152926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x152856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x152927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1528561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x152927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1528561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1529278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1528561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x152927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x152856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1529279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x152856230 '__clang_svint16x4_t'
|-TypedefDecl 0x152927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x152856250 '__clang_svint32x4_t'
|-TypedefDecl 0x152927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x152856270 '__clang_svint64x4_t'
|-TypedefDecl 0x152927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x152856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x152927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1528562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x152927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1528562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x152927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1528562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x152927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x152856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x152927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x152856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x152927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x152856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x152927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x152856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x152927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x152856390 '__SVBool_t'
|-TypedefDecl 0x152927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1528563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x152927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1528563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x152927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1528563f0 '__SVCount_t'
|-TypedefDecl 0x152927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x152927fb0 'char *'
|   `-BuiltinType 0x1528556b0 'char'
|-TypedefDecl 0x152928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x152927fb0 'char *'
|   `-BuiltinType 0x1528556b0 'char'
|-RecordDecl 0x1529280c0 <dataset_diviso_filec/func10310_nonvuln.c:1:8, col:15> col:15 struct dentry
|-FunctionDecl 0x152928438 <col:1, line:33:1> line:1:23 start_creating 'struct dentry *(const char *, struct dentry *)' static
| |-ParmVarDecl 0x152928178 <col:38, col:50> col:50 used name 'const char *'
| |-ParmVarDecl 0x152928298 <col:56, col:71> col:71 used parent 'struct dentry *'
| `-CompoundStmt 0x153009b70 <line:2:1, line:33:1>
|   |-DeclStmt 0x1529285c8 <line:3:2, col:23>
|   | `-VarDecl 0x152928560 <col:2, col:17> col:17 used dentry 'struct dentry *'
|   |-DeclStmt 0x152928660 <line:4:2, col:11>
|   | `-VarDecl 0x1529285f8 <col:2, col:6> col:6 used error 'int'
|   |-CallExpr 0x152945a88 <line:6:2, col:21> 'int'
|   | |-ImplicitCastExpr 0x152945a70 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1529287a0 <col:2> 'int ()' Function 0x1529286e8 'pr_debug' 'int ()'
|   | |-ImplicitCastExpr 0x152945ab8 <col:11> 'char *' <ArrayToPointerDecay>
|   | | `-StringLiteral 0x152945a00 <col:11> 'char[4]' lvalue "STR"
|   | `-ImplicitCastExpr 0x152945ad0 <col:17> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x152945a20 <col:17> 'const char *' lvalue ParmVar 0x152928178 'name' 'const char *'
|   |-IfStmt 0x152945ca8 <line:8:2, line:9:10>
|   | |-CallExpr 0x152945c20 <line:8:6, col:19> 'int'
|   | | |-ImplicitCastExpr 0x152945c08 <col:6> 'int (*)()' <FunctionToPointerDecay>
|   | | | `-DeclRefExpr 0x152945bc8 <col:6> 'int ()' Function 0x152945b10 'IS_ERR' 'int ()'
|   | | `-ImplicitCastExpr 0x152945c48 <col:13> 'struct dentry *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x152945be8 <col:13> 'struct dentry *' lvalue ParmVar 0x152928298 'parent' 'struct dentry *'
|   | `-ReturnStmt 0x152945c98 <line:9:3, col:10>
|   |   `-ImplicitCastExpr 0x152945c80 <col:10> 'struct dentry *' <LValueToRValue>
|   |     `-DeclRefExpr 0x152945c60 <col:10> 'struct dentry *' lvalue ParmVar 0x152928298 'parent' 'struct dentry *'
|   |-BinaryOperator 0x152945fb0 <line:11:2, line:12:30> 'int' contains-errors '='
|   | |-DeclRefExpr 0x152945cc8 <line:11:2> 'int' lvalue Var 0x1529285f8 'error' 'int'
|   | `-CallExpr 0x152945f78 <col:10, line:12:30> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x152945dc8 <line:11:10> 'int ()' Function 0x152945d10 'simple_pin_fs' 'int ()'
|   |   |-UnaryOperator 0x152945ef0 <col:24, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   | `-RecoveryExpr 0x152945ed0 <col:25> '<dependent type>' contains-errors lvalue
|   |   |-UnaryOperator 0x152945f28 <col:40, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   | `-RecoveryExpr 0x152945f08 <col:41> '<dependent type>' contains-errors lvalue
|   |   `-UnaryOperator 0x152945f60 <line:12:10, col:11> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     `-RecoveryExpr 0x152945f40 <col:11> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x1529465d0 <line:13:2, line:14:23>
|   | |-ImplicitCastExpr 0x152945ff0 <line:13:6> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x152945fd0 <col:6> 'int' lvalue Var 0x1529285f8 'error' 'int'
|   | `-ReturnStmt 0x1529465c0 <line:14:3, col:23>
|   |   `-ImplicitCastExpr 0x152946180 <col:10, col:23> 'struct dentry *' <IntegralToPointer>
|   |     `-CallExpr 0x152946140 <col:10, col:23> 'int'
|   |       |-ImplicitCastExpr 0x152946128 <col:10> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x1529460e8 <col:10> 'int ()' Function 0x152946030 'ERR_PTR' 'int ()'
|   |       `-ImplicitCastExpr 0x152946168 <col:18> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x152946108 <col:18> 'int' lvalue Var 0x1529285f8 'error' 'int'
|   |-IfStmt 0x152946768 <line:17:2, line:18:27>
|   | |-UnaryOperator 0x152946628 <line:17:6, col:7> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x152946610 <col:7> 'struct dentry *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1529465f0 <col:7> 'struct dentry *' lvalue ParmVar 0x152928298 'parent' 'struct dentry *'
|   | `-BinaryOperator 0x152946748 <line:18:3, col:27> 'struct dentry *' contains-errors '='
|   |   |-DeclRefExpr 0x152946640 <col:3> 'struct dentry *' lvalue ParmVar 0x152928298 'parent' 'struct dentry *'
|   |   `-CXXDependentScopeMemberExpr 0x152946700 <col:12, col:27> '<dependent type>' contains-errors lvalue ->mnt_root
|   |     `-RecoveryExpr 0x1529466e0 <col:12> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x153008c18 <line:20:2, col:28> 'int'
|   | |-ImplicitCastExpr 0x153008c00 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x152946868 <col:2> 'int ()' Function 0x1529467b0 'inode_lock' 'int ()'
|   | `-CallExpr 0x1529469c0 <col:13, col:27> 'int'
|   |   |-ImplicitCastExpr 0x1529469a8 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x152946968 <col:13> 'int ()' Function 0x1529468b0 'd_inode' 'int ()'
|   |   `-ImplicitCastExpr 0x1529469e8 <col:21> 'struct dentry *' <LValueToRValue>
|   |     `-DeclRefExpr 0x152946988 <col:21> 'struct dentry *' lvalue ParmVar 0x152928298 'parent' 'struct dentry *'
|   |-BinaryOperator 0x1530090c0 <line:21:2, col:52> 'struct dentry *' '='
|   | |-DeclRefExpr 0x153008c40 <col:2> 'struct dentry *' lvalue Var 0x152928560 'dentry' 'struct dentry *'
|   | `-ImplicitCastExpr 0x1530090a8 <col:11, col:52> 'struct dentry *' <IntegralToPointer>
|   |   `-CallExpr 0x153009040 <col:11, col:52> 'int'
|   |     |-ImplicitCastExpr 0x153009028 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x153008d40 <col:11> 'int ()' Function 0x153008c88 'lookup_one_len' 'int ()'
|   |     |-ImplicitCastExpr 0x153009078 <col:26> 'const char *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x153008d60 <col:26> 'const char *' lvalue ParmVar 0x152928178 'name' 'const char *'
|   |     |-ImplicitCastExpr 0x153009090 <col:32> 'struct dentry *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x153008d80 <col:32> 'struct dentry *' lvalue ParmVar 0x152928298 'parent' 'struct dentry *'
|   |     `-CallExpr 0x153008fe8 <col:40, col:51> 'unsigned long'
|   |       |-ImplicitCastExpr 0x153008fd0 <col:40> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x153008f48 <col:40> 'unsigned long (const char *)' Function 0x153008dd8 'strlen' 'unsigned long (const char *)'
|   |       `-ImplicitCastExpr 0x153009010 <col:47> 'const char *' <LValueToRValue>
|   |         `-DeclRefExpr 0x153008f68 <col:47> 'const char *' lvalue ParmVar 0x152928178 'name' 'const char *'
|   |-IfStmt 0x153009628 <line:22:2, line:25:2>
|   | |-BinaryOperator 0x153009308 <line:22:6, col:52> 'int' '&&'
|   | | |-UnaryOperator 0x153009178 <col:6, col:20> 'int' prefix '!' cannot overflow
|   | | | `-CallExpr 0x153009138 <col:7, col:20> 'int'
|   | | |   |-ImplicitCastExpr 0x153009120 <col:7> 'int (*)()' <FunctionToPointerDecay>
|   | | |   | `-DeclRefExpr 0x1530090e0 <col:7> 'int ()' Function 0x152945b10 'IS_ERR' 'int ()'
|   | | |   `-ImplicitCastExpr 0x153009160 <col:14> 'struct dentry *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x153009100 <col:14> 'struct dentry *' lvalue Var 0x152928560 'dentry' 'struct dentry *'
|   | | `-CallExpr 0x1530092c8 <col:25, col:52> 'int'
|   | |   |-ImplicitCastExpr 0x1530092b0 <col:25> 'int (*)()' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x153009270 <col:25> 'int ()' Function 0x1530091b8 'd_really_is_positive' 'int ()'
|   | |   `-ImplicitCastExpr 0x1530092f0 <col:46> 'struct dentry *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x153009290 <col:46> 'struct dentry *' lvalue Var 0x152928560 'dentry' 'struct dentry *'
|   | `-CompoundStmt 0x153009608 <col:55, line:25:2>
|   |   |-CallExpr 0x153009460 <line:23:3, col:14> 'int'
|   |   | |-ImplicitCastExpr 0x153009448 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x153009408 <col:3> 'int ()' Function 0x153009350 'dput' 'int ()'
|   |   | `-ImplicitCastExpr 0x153009488 <col:8> 'struct dentry *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x153009428 <col:8> 'struct dentry *' lvalue Var 0x152928560 'dentry' 'struct dentry *'
|   |   `-BinaryOperator 0x1530095e8 <line:24:3, col:27> 'struct dentry *' contains-errors '='
|   |     |-DeclRefExpr 0x1530094a0 <col:3> 'struct dentry *' lvalue Var 0x152928560 'dentry' 'struct dentry *'
|   |     `-CallExpr 0x1530095c0 <col:12, col:27> '<dependent type>' contains-errors
|   |       |-DeclRefExpr 0x1530094c0 <col:12> 'int ()' Function 0x152946030 'ERR_PTR' 'int ()'
|   |       `-UnaryOperator 0x1530095a8 <col:20, col:21> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |         `-ImplicitCastExpr 0x153009590 <col:21> '<dependent type>' contains-errors <LValueToRValue>
|   |           `-RecoveryExpr 0x153009570 <col:21> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x153009b08 <line:27:2, line:30:2>
|   | |-CallExpr 0x1530096a0 <line:27:6, col:19> 'int'
|   | | |-ImplicitCastExpr 0x153009688 <col:6> 'int (*)()' <FunctionToPointerDecay>
|   | | | `-DeclRefExpr 0x153009648 <col:6> 'int ()' Function 0x152945b10 'IS_ERR' 'int ()'
|   | | `-ImplicitCastExpr 0x1530096c8 <col:13> 'struct dentry *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x153009668 <col:13> 'struct dentry *' lvalue Var 0x152928560 'dentry' 'struct dentry *'
|   | `-CompoundStmt 0x153009ae8 <col:22, line:30:2>
|   |   |-CallExpr 0x153009890 <line:28:3, col:31> 'int'
|   |   | |-ImplicitCastExpr 0x153009878 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1530097c0 <col:3> 'int ()' Function 0x153009708 'inode_unlock' 'int ()'
|   |   | `-CallExpr 0x153009838 <col:16, col:30> 'int'
|   |   |   |-ImplicitCastExpr 0x153009820 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x1530097e0 <col:16> 'int ()' Function 0x1529468b0 'd_inode' 'int ()'
|   |   |   `-ImplicitCastExpr 0x153009860 <col:24> 'struct dentry *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x153009800 <col:24> 'struct dentry *' lvalue ParmVar 0x152928298 'parent' 'struct dentry *'
|   |   `-CallExpr 0x153009ab8 <line:29:3, col:57> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x153009998 <col:3> 'int ()' Function 0x1530098e0 'simple_release_fs' 'int ()'
|   |     |-UnaryOperator 0x153009a68 <col:21, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     | `-RecoveryExpr 0x153009a48 <col:22> '<dependent type>' contains-errors lvalue
|   |     `-UnaryOperator 0x153009aa0 <col:37, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |       `-RecoveryExpr 0x153009a80 <col:38> '<dependent type>' contains-errors lvalue
|   `-ReturnStmt 0x153009b60 <line:32:2, col:9>
|     `-ImplicitCastExpr 0x153009b48 <col:9> 'struct dentry *' <LValueToRValue>
|       `-DeclRefExpr 0x153009b28 <col:9> 'struct dentry *' lvalue Var 0x152928560 'dentry' 'struct dentry *'
`-FunctionDecl 0x153008dd8 <line:21:40> col:40 implicit used strlen 'unsigned long (const char *)' extern
  |-ParmVarDecl 0x153008ed8 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x153008e80 <<invalid sloc>> Implicit 902
