TranslationUnitDecl 0x13d055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13d0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13d055bd0 '__int128'
|-TypedefDecl 0x13d056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13d055bf0 'unsigned __int128'
|-TypedefDecl 0x13d126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13d126000 'struct __NSConstantString_tag'
|   `-Record 0x13d056580 '__NSConstantString_tag'
|-TypedefDecl 0x13d126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13d055d90 '__SVInt8_t'
|-TypedefDecl 0x13d126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13d055db0 '__SVInt16_t'
|-TypedefDecl 0x13d126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13d055dd0 '__SVInt32_t'
|-TypedefDecl 0x13d1263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13d055df0 '__SVInt64_t'
|-TypedefDecl 0x13d126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13d055e10 '__SVUint8_t'
|-TypedefDecl 0x13d1264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13d055e30 '__SVUint16_t'
|-TypedefDecl 0x13d126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13d055e50 '__SVUint32_t'
|-TypedefDecl 0x13d126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13d055e70 '__SVUint64_t'
|-TypedefDecl 0x13d1265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13d055e90 '__SVFloat16_t'
|-TypedefDecl 0x13d126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13d055eb0 '__SVFloat32_t'
|-TypedefDecl 0x13d1266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13d055ed0 '__SVFloat64_t'
|-TypedefDecl 0x13d126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13d055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13d126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13d055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13d1267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13d055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13d126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13d055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13d1268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13d055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13d126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13d055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13d126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13d055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13d1269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13d055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13d126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13d055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13d126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13d056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13d126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13d056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13d126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13d056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13d126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13d056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13d126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13d056090 '__clang_svint8x3_t'
|-TypedefDecl 0x13d126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13d0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13d126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13d0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13d126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13d0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13d126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13d056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13d126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13d056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13d126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13d056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13d126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13d056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13d126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13d056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13d127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13d0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13d127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13d0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13d1278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13d0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13d127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13d056210 '__clang_svint8x4_t'
|-TypedefDecl 0x13d1279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13d056230 '__clang_svint16x4_t'
|-TypedefDecl 0x13d127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13d056250 '__clang_svint32x4_t'
|-TypedefDecl 0x13d127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13d056270 '__clang_svint64x4_t'
|-TypedefDecl 0x13d127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13d056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13d127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13d0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13d127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13d0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13d127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13d0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13d127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13d056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13d127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13d056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13d127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13d056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13d127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13d056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13d127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13d056390 '__SVBool_t'
|-TypedefDecl 0x13d127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13d0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13d127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13d0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13d127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13d0563f0 '__SVCount_t'
|-TypedefDecl 0x13d127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13d127fb0 'char *'
|   `-BuiltinType 0x13d0556b0 'char'
|-TypedefDecl 0x13d128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13d127fb0 'char *'
|   `-BuiltinType 0x13d0556b0 'char'
`-FunctionDecl 0x13d1284c8 <dataset_diviso_filec/func21370_vuln.c:1:1, line:43:1> line:1:1 invalid store_word 'int (int *, char *, int, int, char *, int)'
  |-ParmVarDecl 0x13d128128 <line:2:5, col:18> col:18 invalid spin 'int *'
  |-ParmVarDecl 0x13d1281a8 <line:3:5, col:13> col:13 used word 'char *'
  |-ParmVarDecl 0x13d128228 <line:4:5, col:10> col:10 used flags 'int'
  |-ParmVarDecl 0x13d1282a8 <line:5:5, col:10> col:10 used region 'int'
  |-ParmVarDecl 0x13d128328 <line:6:5, col:13> col:13 used pfxlist 'char *'
  |-ParmVarDecl 0x13d1283a8 <line:7:5, col:10> col:10 used need_affix 'int'
  `-CompoundStmt 0x13d809920 <line:8:1, line:43:1>
    |-DeclStmt 0x13d141898 <line:9:5, col:33>
    | `-VarDecl 0x13d1285b8 <col:5, col:32> col:10 used len 'int' cinit
    |   `-CStyleCastExpr 0x13d141870 <col:16, col:32> 'int' <NoOp>
    |     `-CallExpr 0x13d141818 <col:21, col:32> 'int'
    |       |-ImplicitCastExpr 0x13d141800 <col:21> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x13d128780 <col:21> 'int ()' Function 0x13d1286c8 'STRLEN' 'int ()'
    |       `-ImplicitCastExpr 0x13d141840 <col:28> 'char *' <LValueToRValue>
    |         `-DeclRefExpr 0x13d1287a0 <col:28> 'char *' lvalue ParmVar 0x13d1281a8 'word' 'char *'
    |-DeclStmt 0x13d141b40 <line:10:5, col:40>
    | `-VarDecl 0x13d1418c8 <col:5, col:39> col:10 used ct 'int' cinit
    |   `-CallExpr 0x13d141af8 <col:15, col:39> 'int'
    |     |-ImplicitCastExpr 0x13d141ae0 <col:15> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x13d141a10 <col:15> 'int ()' Function 0x13d141958 'captype' 'int ()'
    |     |-ImplicitCastExpr 0x13d141b28 <col:23> 'char *' <LValueToRValue>
    |     | `-DeclRefExpr 0x13d141a30 <col:23> 'char *' lvalue ParmVar 0x13d1281a8 'word' 'char *'
    |     `-BinaryOperator 0x13d141ac0 <col:29, col:36> 'char *' '+'
    |       |-ImplicitCastExpr 0x13d141a90 <col:29> 'char *' <LValueToRValue>
    |       | `-DeclRefExpr 0x13d141a50 <col:29> 'char *' lvalue ParmVar 0x13d1281a8 'word' 'char *'
    |       `-ImplicitCastExpr 0x13d141aa8 <col:36> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x13d141a70 <col:36> 'int' lvalue Var 0x13d1285b8 'len' 'int'
    |-DeclStmt 0x13d141be8 <line:11:5, col:29>
    | `-VarDecl 0x13d141b80 <col:5, col:12> col:12 invalid foldword 'char'
    |-DeclStmt 0x13d141cb8 <line:12:5, col:18>
    | `-VarDecl 0x13d141c18 <col:5, col:16> col:10 used res 'int' cinit
    |   `-RecoveryExpr 0x13d141c98 <col:16> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x13d141d50 <line:13:5, col:14>
    | `-VarDecl 0x13d141ce8 <col:5, col:13> col:13 used p 'char *'
    |-IfStmt 0x13d142010 <line:16:5, line:17:9>
    | |-BinaryOperator 0x13d141fa8 <line:16:9, col:49> 'int' contains-errors '&&'
    | | |-RecoveryExpr 0x13d141f20 <col:9> '<dependent type>' contains-errors lvalue
    | | `-UnaryOperator 0x13d141f90 <col:21, col:49> '<dependent type>' contains-errors prefix '!' cannot overflow
    | |   `-CallExpr 0x13d141f60 <col:22, col:49> '<dependent type>' contains-errors
    | |     |-DeclRefExpr 0x13d141e60 <col:22> 'int ()' Function 0x13d141da8 'utf_valid_string' 'int ()'
    | |     |-DeclRefExpr 0x13d141e80 <col:39> 'char *' lvalue ParmVar 0x13d1281a8 'word' 'char *'
    | |     `-RecoveryExpr 0x13d141f40 <col:45> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x13d142000 <line:17:2, col:9>
    |   `-RecoveryExpr 0x13d141fe0 <col:9> '<dependent type>' contains-errors lvalue
    |-ForStmt 0x13d8092b0 <line:20:5, line:27:5>
    | |-BinaryOperator 0x13d142270 <line:20:10, col:14> 'char *' '='
    | | |-DeclRefExpr 0x13d142218 <col:10> 'char *' lvalue Var 0x13d141ce8 'p' 'char *'
    | | `-ImplicitCastExpr 0x13d142258 <col:14> 'char *' <LValueToRValue>
    | |   `-DeclRefExpr 0x13d142238 <col:14> 'char *' lvalue ParmVar 0x13d128328 'pfxlist' 'char *'
    | |-<<<NULL>>>
    | |-BinaryOperator 0x13d142308 <col:23, col:30> 'int' contains-errors '=='
    | | |-DeclRefExpr 0x13d142290 <col:23> 'int' contains-errors lvalue Var 0x13d141c18 'res' 'int'
    | | `-RecoveryExpr 0x13d1422e8 <col:30> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x13d142348 <col:34, col:36> 'char *' prefix '++'
    | | `-DeclRefExpr 0x13d142328 <col:36> 'char *' lvalue Var 0x13d141ce8 'p' 'char *'
    | `-CompoundStmt 0x13d809298 <line:21:5, line:27:5>
    |   `-IfStmt 0x13d809278 <line:25:2, line:26:6>
    |     |-RecoveryExpr 0x13d809250 <line:25:6, col:25> '_Bool' contains-errors
    |     `-BreakStmt 0x13d809270 <line:26:6>
    |-UnaryOperator 0x13d809350 <line:28:5, col:13> '<dependent type>' contains-errors prefix '++' cannot overflow
    | `-CXXDependentScopeMemberExpr 0x13d809308 <col:7, col:13> '<dependent type>' contains-errors lvalue ->si_foldwcount
    |   `-RecoveryExpr 0x13d8092e8 <col:7> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x13d8098b8 <line:30:5, line:41:5>
    | |-RecoveryExpr 0x13d8093c8 <line:30:9, col:63> '_Bool' contains-errors
    | `-CompoundStmt 0x13d8098a0 <line:31:5, line:41:5>
    |   `-UnaryOperator 0x13d809888 <line:40:2, col:10> '<dependent type>' contains-errors prefix '++' cannot overflow
    |     `-CXXDependentScopeMemberExpr 0x13d809840 <col:4, col:10> '<dependent type>' contains-errors lvalue ->si_keepwcount
    |       `-RecoveryExpr 0x13d809820 <col:4> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x13d809910 <line:42:5, col:12>
      `-ImplicitCastExpr 0x13d8098f8 <col:12> 'int' contains-errors <LValueToRValue>
        `-DeclRefExpr 0x13d8098d8 <col:12> 'int' contains-errors lvalue Var 0x13d141c18 'res' 'int'
