TranslationUnitDecl 0x13b855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13b8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13b855bd0 '__int128'
|-TypedefDecl 0x13b856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13b855bf0 'unsigned __int128'
|-TypedefDecl 0x13c00be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13c00bc00 'struct __NSConstantString_tag'
|   `-Record 0x13b856580 '__NSConstantString_tag'
|-TypedefDecl 0x13c00be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13b855d90 '__SVInt8_t'
|-TypedefDecl 0x13c00bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13b855db0 '__SVInt16_t'
|-TypedefDecl 0x13c00bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13b855dd0 '__SVInt32_t'
|-TypedefDecl 0x13c00bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13b855df0 '__SVInt64_t'
|-TypedefDecl 0x13c00c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13b855e10 '__SVUint8_t'
|-TypedefDecl 0x13c00c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13b855e30 '__SVUint16_t'
|-TypedefDecl 0x13c00c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13b855e50 '__SVUint32_t'
|-TypedefDecl 0x13c00c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13b855e70 '__SVUint64_t'
|-TypedefDecl 0x13c00c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13b855e90 '__SVFloat16_t'
|-TypedefDecl 0x13c00c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13b855eb0 '__SVFloat32_t'
|-TypedefDecl 0x13c00c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13b855ed0 '__SVFloat64_t'
|-TypedefDecl 0x13c00c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13b855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13c00c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13b855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13c00c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13b855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13c00c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13b855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13c00c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13b855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13c00c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13b855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13c00c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13b855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13c00c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13b855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13c00c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13b855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13c00c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13b856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13c00c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13b856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13c00c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13b856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13c00c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13b856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13c00c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13b856090 '__clang_svint8x3_t'
|-TypedefDecl 0x13c00c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13b8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13c00c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13b8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13c00c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13b8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13c00c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13b856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13c00ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13b856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13c00cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13b856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13c00cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13b856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13c00cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13b856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13c00d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13b8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13c00d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13b8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13c00d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13b8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13c00d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13b856210 '__clang_svint8x4_t'
|-TypedefDecl 0x13c00d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13b856230 '__clang_svint16x4_t'
|-TypedefDecl 0x13c00d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13b856250 '__clang_svint32x4_t'
|-TypedefDecl 0x13c00d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13b856270 '__clang_svint64x4_t'
|-TypedefDecl 0x13c00d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13b856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13c00d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13b8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13c00d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13b8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13c00d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13b8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13c00d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13b856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13c00d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13b856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13c00d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13b856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13c00d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13b856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13c00da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13b856390 '__SVBool_t'
|-TypedefDecl 0x13c00da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13b8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13c00dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13b8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13c00db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13b8563f0 '__SVCount_t'
|-TypedefDecl 0x13c00dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13c00dbb0 'char *'
|   `-BuiltinType 0x13b8556b0 'char'
|-TypedefDecl 0x13c00dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13c00dbb0 'char *'
|   `-BuiltinType 0x13b8556b0 'char'
|-FunctionDecl 0x13c00de80 <dataset_diviso_filec/func6492_vuln.c:1:1, line:47:1> line:1:6 invalid pdf_load_pages_kids 'void (int *, int *)'
| |-ParmVarDecl 0x13c00dd28 <col:26, col:32> col:32 invalid fp 'int *'
| |-ParmVarDecl 0x13c00dda8 <col:36, col:43> col:43 invalid pdf 'int *'
| `-CompoundStmt 0x13c02c030 <line:2:1, line:47:1>
|   |-DeclStmt 0x13c00e0d8 <line:3:5, col:25>
|   | |-VarDecl 0x13c00df50 <col:5, col:13> col:13 used i 'int'
|   | |-VarDecl 0x13c00dfd0 <col:5, col:16> col:16 used id 'int'
|   | `-VarDecl 0x13c00e050 <col:5, col:20> col:20 used dummy 'int'
|   |-DeclStmt 0x13c00e208 <line:4:5, col:20>
|   | |-VarDecl 0x13c00e108 <col:5, col:13> col:13 used buf 'char *'
|   | `-VarDecl 0x13c00e188 <col:5, col:19> col:19 used c 'char *'
|   |-DeclStmt 0x13c00e338 <line:5:5, col:22>
|   | |-VarDecl 0x13c00e238 <col:5, col:13> col:13 used start 'long'
|   | `-VarDecl 0x13c00e2b8 <col:5, col:20> col:20 used sz 'long'
|   |-BinaryOperator 0x13c027548 <line:7:5, col:21> 'long' contains-errors '='
|   | |-DeclRefExpr 0x13c00e350 <col:5> 'long' lvalue Var 0x13c00e238 'start' 'long'
|   | `-CallExpr 0x13c027520 <col:13, col:21> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x13c0274e0 <col:13> 'int ()' Function 0x13c027428 'ftell' 'int ()'
|   |   `-RecoveryExpr 0x13c027500 <col:19> '<dependent type>' contains-errors lvalue
|   |-ForStmt 0x13c02bef0 <line:10:5, line:44:5>
|   | |-BinaryOperator 0x13c0275a8 <line:10:10, col:12> 'int' '='
|   | | |-DeclRefExpr 0x13c027568 <col:10> 'int' lvalue Var 0x13c00df50 'i' 'int'
|   | | `-IntegerLiteral 0x13c027588 <col:12> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x13c027650 <col:15, col:22> 'int' contains-errors '<'
|   | | |-DeclRefExpr 0x13c0275c8 <col:15> 'int' lvalue Var 0x13c00df50 'i' 'int'
|   | | `-CXXDependentScopeMemberExpr 0x13c027608 <col:17, col:22> '<dependent type>' contains-errors lvalue ->n_xrefs
|   | |   `-RecoveryExpr 0x13c0275e8 <col:17> '<dependent type>' contains-errors lvalue
|   | |-UnaryOperator 0x13c027690 <col:31, col:32> 'int' postfix '++'
|   | | `-DeclRefExpr 0x13c027670 <col:31> 'int' lvalue Var 0x13c00df50 'i' 'int'
|   | `-CompoundStmt 0x13c02bed8 <line:11:5, line:44:5>
|   |   `-IfStmt 0x13c02beb8 <line:12:9, line:43:9>
|   |     |-BinaryOperator 0x13c027948 <line:12:13, col:61> 'int' contains-errors '&&'
|   |     | |-CXXDependentScopeMemberExpr 0x13c027780 <col:13, col:27> '<dependent type>' contains-errors lvalue .version
|   |     | | `-ArraySubscriptExpr 0x13c027760 <col:13, col:25> '<dependent type>' contains-errors lvalue
|   |     | |   |-ImplicitCastExpr 0x13c027730 <col:13, col:18> '<dependent type>' contains-errors <LValueToRValue>
|   |     | |   | `-CXXDependentScopeMemberExpr 0x13c0276c8 <col:13, col:18> '<dependent type>' contains-errors lvalue ->xrefs
|   |     | |   |   `-RecoveryExpr 0x13c0276a8 <col:13> '<dependent type>' contains-errors lvalue
|   |     | |   `-ImplicitCastExpr 0x13c027748 <col:24> 'int' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x13c027710 <col:24> 'int' lvalue Var 0x13c00df50 'i' 'int'
|   |     | `-ParenExpr 0x13c027928 <col:38, col:61> 'int' contains-errors
|   |     |   `-BinaryOperator 0x13c027908 <col:39, col:60> 'int' contains-errors '!='
|   |     |     |-CXXDependentScopeMemberExpr 0x13c0278a0 <col:39, col:53> '<dependent type>' contains-errors lvalue .end
|   |     |     | `-ArraySubscriptExpr 0x13c027880 <col:39, col:51> '<dependent type>' contains-errors lvalue
|   |     |     |   |-ImplicitCastExpr 0x13c027850 <col:39, col:44> '<dependent type>' contains-errors <LValueToRValue>
|   |     |     |   | `-CXXDependentScopeMemberExpr 0x13c0277e8 <col:39, col:44> '<dependent type>' contains-errors lvalue ->xrefs
|   |     |     |   |   `-RecoveryExpr 0x13c0277c8 <col:39> '<dependent type>' contains-errors lvalue
|   |     |     |   `-ImplicitCastExpr 0x13c027868 <col:50> 'int' <LValueToRValue>
|   |     |     |     `-DeclRefExpr 0x13c027830 <col:50> 'int' lvalue Var 0x13c00df50 'i' 'int'
|   |     |     `-IntegerLiteral 0x13c0278e8 <col:60> 'int' 0
|   |     `-CompoundStmt 0x13c02be38 <line:13:9, line:43:9>
|   |       |-CallExpr 0x13c027d48 <line:14:13, col:52> '<dependent type>' contains-errors
|   |       | |-DeclRefExpr 0x13c027a48 <col:13> 'int ()' Function 0x13c027990 'fseek' 'int ()'
|   |       | |-RecoveryExpr 0x13c027a68 <col:19> '<dependent type>' contains-errors lvalue
|   |       | |-CXXDependentScopeMemberExpr 0x13c027ce0 <col:23, col:37> '<dependent type>' contains-errors lvalue .start
|   |       | | `-ArraySubscriptExpr 0x13c027cc0 <col:23, col:35> '<dependent type>' contains-errors lvalue
|   |       | |   |-ImplicitCastExpr 0x13c027c90 <col:23, col:28> '<dependent type>' contains-errors <LValueToRValue>
|   |       | |   | `-CXXDependentScopeMemberExpr 0x13c027aa8 <col:23, col:28> '<dependent type>' contains-errors lvalue ->xrefs
|   |       | |   |   `-RecoveryExpr 0x13c027a88 <col:23> '<dependent type>' contains-errors lvalue
|   |       | |   `-ImplicitCastExpr 0x13c027ca8 <col:34> 'int' <LValueToRValue>
|   |       | |     `-DeclRefExpr 0x13c027af0 <col:34> 'int' lvalue Var 0x13c00df50 'i' 'int'
|   |       | `-RecoveryExpr 0x13c027d28 <col:44> '<dependent type>' contains-errors lvalue
|   |       |-WhileStmt 0x13c028078 <line:15:13, line:16:17>
|   |       | |-CallExpr 0x13c028040 <line:15:20, col:49> '<dependent type>' contains-errors
|   |       | | |-DeclRefExpr 0x13c027e60 <col:20> 'int ()' Function 0x13c027da8 'SAFE_F' 'int ()'
|   |       | | |-RecoveryExpr 0x13c027e80 <col:27> '<dependent type>' contains-errors lvalue
|   |       | | `-ParenExpr 0x13c028020 <col:31, col:48> 'int' contains-errors
|   |       | |   `-BinaryOperator 0x13c028000 <col:32, col:45> 'int' contains-errors '!='
|   |       | |     |-CallExpr 0x13c027fc0 <col:32, col:40> '<dependent type>' contains-errors
|   |       | |     | |-DeclRefExpr 0x13c027f80 <col:32> 'int ()' Function 0x13c027ec8 'fgetc' 'int ()'
|   |       | |     | `-RecoveryExpr 0x13c027fa0 <col:38> '<dependent type>' contains-errors lvalue
|   |       | |     `-CharacterLiteral 0x13c027fe8 <col:45> 'int' 116
|   |       | `-NullStmt 0x13c028070 <line:16:17>
|   |       |-BinaryOperator 0x13c028260 <line:19:13, col:46> 'long' contains-errors '='
|   |       | |-DeclRefExpr 0x13c028098 <col:13> 'long' lvalue Var 0x13c00e2b8 'sz' 'long'
|   |       | `-BinaryOperator 0x13c028240 <col:18, col:46> '<dependent type>' contains-errors '-'
|   |       |   |-CXXDependentScopeMemberExpr 0x13c028190 <col:18, col:32> '<dependent type>' contains-errors lvalue .end
|   |       |   | `-ArraySubscriptExpr 0x13c028170 <col:18, col:30> '<dependent type>' contains-errors lvalue
|   |       |   |   |-ImplicitCastExpr 0x13c028140 <col:18, col:23> '<dependent type>' contains-errors <LValueToRValue>
|   |       |   |   | `-CXXDependentScopeMemberExpr 0x13c0280d8 <col:18, col:23> '<dependent type>' contains-errors lvalue ->xrefs
|   |       |   |   |   `-RecoveryExpr 0x13c0280b8 <col:18> '<dependent type>' contains-errors lvalue
|   |       |   |   `-ImplicitCastExpr 0x13c028158 <col:29> 'int' <LValueToRValue>
|   |       |   |     `-DeclRefExpr 0x13c028120 <col:29> 'int' lvalue Var 0x13c00df50 'i' 'int'
|   |       |   `-CallExpr 0x13c028218 <col:38, col:46> '<dependent type>' contains-errors
|   |       |     |-DeclRefExpr 0x13c0281d8 <col:38> 'int ()' Function 0x13c027428 'ftell' 'int ()'
|   |       |     `-RecoveryExpr 0x13c0281f8 <col:44> '<dependent type>' contains-errors lvalue
|   |       |-BinaryOperator 0x13c0291f0 <line:20:13, col:32> 'char *' '='
|   |       | |-DeclRefExpr 0x13c028280 <col:13> 'char *' lvalue Var 0x13c00e108 'buf' 'char *'
|   |       | `-ImplicitCastExpr 0x13c0291d8 <col:19, col:32> 'char *' <BitCast>
|   |       |   `-CallExpr 0x13c029198 <col:19, col:32> 'void *'
|   |       |     |-ImplicitCastExpr 0x13c029180 <col:19> 'void *(*)(unsigned long)' <FunctionToPointerDecay>
|   |       |     | `-DeclRefExpr 0x13c0290a0 <col:19> 'void *(unsigned long)' Function 0x13c028f00 'malloc' 'void *(unsigned long)'
|   |       |     `-ImplicitCastExpr 0x13c0291c0 <col:26, col:31> 'unsigned long' <IntegralCast>
|   |       |       `-BinaryOperator 0x13c029130 <col:26, col:31> 'long' '+'
|   |       |         |-ImplicitCastExpr 0x13c029100 <col:26> 'long' <LValueToRValue>
|   |       |         | `-DeclRefExpr 0x13c0290c0 <col:26> 'long' lvalue Var 0x13c00e2b8 'sz' 'long'
|   |       |         `-ImplicitCastExpr 0x13c029118 <col:31> 'long' <IntegralCast>
|   |       |           `-IntegerLiteral 0x13c0290e0 <col:31> 'int' 1
|   |       |-CallExpr 0x13c029550 <line:21:13, col:52> '<dependent type>' contains-errors
|   |       | |-DeclRefExpr 0x13c0292f0 <col:13> 'int ()' Function 0x13c029238 'SAFE_E' 'int ()'
|   |       | |-CallExpr 0x13c029490 <col:20, col:40> '<dependent type>' contains-errors
|   |       | | |-DeclRefExpr 0x13c0293f0 <col:20> 'int ()' Function 0x13c029338 'fread' 'int ()'
|   |       | | |-DeclRefExpr 0x13c029410 <col:26> 'char *' lvalue Var 0x13c00e108 'buf' 'char *'
|   |       | | |-IntegerLiteral 0x13c029430 <col:31> 'int' 1
|   |       | | |-DeclRefExpr 0x13c029450 <col:34> 'long' lvalue Var 0x13c00e2b8 'sz' 'long'
|   |       | | `-RecoveryExpr 0x13c029470 <col:38> '<dependent type>' contains-errors lvalue
|   |       | |-DeclRefExpr 0x13c0294d0 <col:43> 'long' lvalue Var 0x13c00e2b8 'sz' 'long'
|   |       | `-StringLiteral 0x13c029530 <col:47> 'char[4]' lvalue "STR"
|   |       |-BinaryOperator 0x13c029648 <line:22:13, col:23> 'char' '='
|   |       | |-ArraySubscriptExpr 0x13c0295f8 <col:13, col:19> 'char' lvalue
|   |       | | |-ImplicitCastExpr 0x13c0295c8 <col:13> 'char *' <LValueToRValue>
|   |       | | | `-DeclRefExpr 0x13c029588 <col:13> 'char *' lvalue Var 0x13c00e108 'buf' 'char *'
|   |       | | `-ImplicitCastExpr 0x13c0295e0 <col:17> 'long' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x13c0295a8 <col:17> 'long' lvalue Var 0x13c00e2b8 'sz' 'long'
|   |       | `-ImplicitCastExpr 0x13c029630 <col:23> 'char' <IntegralCast>
|   |       |   `-CharacterLiteral 0x13c029618 <col:23> 'int' 0
|   |       |-IfStmt 0x13c02ab98 <line:23:13, line:27:13>
|   |       | |-UnaryOperator 0x13c029a58 <line:23:17, col:41> 'int' prefix '!' cannot overflow
|   |       | | `-ParenExpr 0x13c029a38 <col:18, col:41> 'char *'
|   |       | |   `-BinaryOperator 0x13c029a18 <col:19, col:40> 'char *' '='
|   |       | |     |-DeclRefExpr 0x13c029668 <col:19> 'char *' lvalue Var 0x13c00e188 'c' 'char *'
|   |       | |     `-CallExpr 0x13c029988 <col:23, col:40> 'char *'
|   |       | |       |-ImplicitCastExpr 0x13c029970 <col:23> 'char *(*)(const char *, const char *)' <FunctionToPointerDecay>
|   |       | |       | `-DeclRefExpr 0x13c0298b0 <col:23> 'char *(const char *, const char *)' Function 0x13c0296d0 'strstr' 'char *(const char *, const char *)'
|   |       | |       |-ImplicitCastExpr 0x13c0299d0 <col:30> 'const char *' <NoOp>
|   |       | |       | `-ImplicitCastExpr 0x13c0299b8 <col:30> 'char *' <LValueToRValue>
|   |       | |       |   `-DeclRefExpr 0x13c0298d0 <col:30> 'char *' lvalue Var 0x13c00e108 'buf' 'char *'
|   |       | |       `-ImplicitCastExpr 0x13c029a00 <col:35> 'const char *' <NoOp>
|   |       | |         `-ImplicitCastExpr 0x13c0299e8 <col:35> 'char *' <ArrayToPointerDecay>
|   |       | |           `-StringLiteral 0x13c0298f0 <col:35> 'char[4]' lvalue "STR"
|   |       | `-CompoundStmt 0x13c02ab78 <line:24:13, line:27:13>
|   |       |   |-CallExpr 0x13c02ab18 <line:25:17, col:25> 'void'
|   |       |   | |-ImplicitCastExpr 0x13c02ab00 <col:17> 'void (*)(void *)' <FunctionToPointerDecay>
|   |       |   | | `-DeclRefExpr 0x13c02aa70 <col:17> 'void (void *)' Function 0x13c029aa8 'free' 'void (void *)'
|   |       |   | `-ImplicitCastExpr 0x13c02ab58 <col:22> 'void *' <BitCast>
|   |       |   |   `-ImplicitCastExpr 0x13c02ab40 <col:22> 'char *' <LValueToRValue>
|   |       |   |     `-DeclRefExpr 0x13c02aa90 <col:22> 'char *' lvalue Var 0x13c00e108 'buf' 'char *'
|   |       |   `-ContinueStmt 0x13c02ab70 <line:26:17>
|   |       |-BinaryOperator 0x13c02b090 <line:30:13, col:44> 'int' '='
|   |       | |-DeclRefExpr 0x13c02abb8 <col:13> 'int' lvalue Var 0x13c00dfd0 'id' 'int'
|   |       | `-CallExpr 0x13c02b068 <col:18, col:44> 'int'
|   |       |   |-ImplicitCastExpr 0x13c02b050 <col:18> 'int (*)()' <FunctionToPointerDecay>
|   |       |   | `-DeclRefExpr 0x13c02acb8 <col:18> 'int ()' Function 0x13c02ac00 'atoi' 'int ()'
|   |       |   `-BinaryOperator 0x13c02aff8 <col:23, col:43> 'char *' '+'
|   |       |     |-BinaryOperator 0x13c02afb8 <col:23, col:39> 'char *' '+'
|   |       |     | |-ImplicitCastExpr 0x13c02afa0 <col:23> 'char *' <LValueToRValue>
|   |       |     | | `-DeclRefExpr 0x13c02acd8 <col:23> 'char *' lvalue Var 0x13c00e188 'c' 'char *'
|   |       |     | `-CallExpr 0x13c02af48 <col:27, col:39> 'unsigned long'
|   |       |     |   |-ImplicitCastExpr 0x13c02af30 <col:27> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |       |     |   | `-DeclRefExpr 0x13c02aea8 <col:27> 'unsigned long (const char *)' Function 0x13c02ad38 'strlen' 'unsigned long (const char *)'
|   |       |     |   `-ImplicitCastExpr 0x13c02af88 <col:34> 'const char *' <NoOp>
|   |       |     |     `-ImplicitCastExpr 0x13c02af70 <col:34> 'char *' <ArrayToPointerDecay>
|   |       |     |       `-StringLiteral 0x13c02aec8 <col:34> 'char[4]' lvalue "STR"
|   |       |     `-IntegerLiteral 0x13c02afd8 <col:43> 'int' 1
|   |       |-CallExpr 0x13c02b120 <line:31:13, col:21> 'void'
|   |       | |-ImplicitCastExpr 0x13c02b108 <col:13> 'void (*)(void *)' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x13c02b0b0 <col:13> 'void (void *)' Function 0x13c029aa8 'free' 'void (void *)'
|   |       | `-ImplicitCastExpr 0x13c02b160 <col:18> 'void *' <BitCast>
|   |       |   `-ImplicitCastExpr 0x13c02b148 <col:18> 'char *' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x13c02b0d0 <col:18> 'char *' lvalue Var 0x13c00e108 'buf' 'char *'
|   |       |-BinaryOperator 0x13c02b5b8 <line:32:13, col:66> 'char *' contains-errors '='
|   |       | |-DeclRefExpr 0x13c02b178 <col:13> 'char *' lvalue Var 0x13c00e108 'buf' 'char *'
|   |       | `-CallExpr 0x13c02b570 <col:19, col:66> '<dependent type>' contains-errors
|   |       |   |-DeclRefExpr 0x13c02b278 <col:19> 'int ()' Function 0x13c02b1c0 'get_object' 'int ()'
|   |       |   |-RecoveryExpr 0x13c02b298 <col:30> '<dependent type>' contains-errors lvalue
|   |       |   |-DeclRefExpr 0x13c02b2b8 <col:34> 'int' lvalue Var 0x13c00dfd0 'id' 'int'
|   |       |   |-UnaryOperator 0x13c02b538 <col:38, col:51> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |       |   | `-ArraySubscriptExpr 0x13c02b518 <col:39, col:51> '<dependent type>' contains-errors lvalue
|   |       |   |   |-ImplicitCastExpr 0x13c02b4e8 <col:39, col:44> '<dependent type>' contains-errors <LValueToRValue>
|   |       |   |   | `-CXXDependentScopeMemberExpr 0x13c02b2f8 <col:39, col:44> '<dependent type>' contains-errors lvalue ->xrefs
|   |       |   |   |   `-RecoveryExpr 0x13c02b2d8 <col:39> '<dependent type>' contains-errors lvalue
|   |       |   |   `-ImplicitCastExpr 0x13c02b500 <col:50> 'int' <LValueToRValue>
|   |       |   |     `-DeclRefExpr 0x13c02b340 <col:50> 'int' lvalue Var 0x13c00df50 'i' 'int'
|   |       |   |-RecoveryExpr 0x13c02b550 <col:54> '<dependent type>' contains-errors lvalue
|   |       |   `-UnaryOperator 0x13c02b400 <col:60, col:61> 'int *' prefix '&' cannot overflow
|   |       |     `-DeclRefExpr 0x13c02b3e0 <col:61> 'int' lvalue Var 0x13c00e050 'dummy' 'int'
|   |       |-IfStmt 0x13c02b8e8 <line:33:13, line:37:13>
|   |       | |-BinaryOperator 0x13c02b7d8 <line:33:17, col:49> 'int' '||'
|   |       | | |-UnaryOperator 0x13c02b610 <col:17, col:18> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x13c02b5f8 <col:18> 'char *' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x13c02b5d8 <col:18> 'char *' lvalue Var 0x13c00e108 'buf' 'char *'
|   |       | | `-UnaryOperator 0x13c02b7c0 <col:25, col:49> 'int' prefix '!' cannot overflow
|   |       | |   `-ParenExpr 0x13c02b7a0 <col:26, col:49> 'char *'
|   |       | |     `-BinaryOperator 0x13c02b780 <col:27, col:48> 'char *' '='
|   |       | |       |-DeclRefExpr 0x13c02b628 <col:27> 'char *' lvalue Var 0x13c00e188 'c' 'char *'
|   |       | |       `-CallExpr 0x13c02b6f0 <col:31, col:48> 'char *'
|   |       | |         |-ImplicitCastExpr 0x13c02b6d8 <col:31> 'char *(*)(const char *, const char *)' <FunctionToPointerDecay>
|   |       | |         | `-DeclRefExpr 0x13c02b648 <col:31> 'char *(const char *, const char *)' Function 0x13c0296d0 'strstr' 'char *(const char *, const char *)'
|   |       | |         |-ImplicitCastExpr 0x13c02b738 <col:38> 'const char *' <NoOp>
|   |       | |         | `-ImplicitCastExpr 0x13c02b720 <col:38> 'char *' <LValueToRValue>
|   |       | |         |   `-DeclRefExpr 0x13c02b668 <col:38> 'char *' lvalue Var 0x13c00e108 'buf' 'char *'
|   |       | |         `-ImplicitCastExpr 0x13c02b768 <col:43> 'const char *' <NoOp>
|   |       | |           `-ImplicitCastExpr 0x13c02b750 <col:43> 'char *' <ArrayToPointerDecay>
|   |       | |             `-StringLiteral 0x13c02b688 <col:43> 'char[4]' lvalue "STR"
|   |       | `-CompoundStmt 0x13c02b8c8 <line:34:13, line:37:13>
|   |       |   |-CallExpr 0x13c02b868 <line:35:17, col:25> 'void'
|   |       |   | |-ImplicitCastExpr 0x13c02b850 <col:17> 'void (*)(void *)' <FunctionToPointerDecay>
|   |       |   | | `-DeclRefExpr 0x13c02b7f8 <col:17> 'void (void *)' Function 0x13c029aa8 'free' 'void (void *)'
|   |       |   | `-ImplicitCastExpr 0x13c02b8a8 <col:22> 'void *' <BitCast>
|   |       |   |   `-ImplicitCastExpr 0x13c02b890 <col:22> 'char *' <LValueToRValue>
|   |       |   |     `-DeclRefExpr 0x13c02b818 <col:22> 'char *' lvalue Var 0x13c00e108 'buf' 'char *'
|   |       |   `-ContinueStmt 0x13c02b8c0 <line:36:17>
|   |       |-BinaryOperator 0x13c02bae8 <line:40:13, col:44> 'int' '='
|   |       | |-DeclRefExpr 0x13c02b908 <col:13> 'int' lvalue Var 0x13c00dfd0 'id' 'int'
|   |       | `-CallExpr 0x13c02bac0 <col:18, col:44> 'int'
|   |       |   |-ImplicitCastExpr 0x13c02baa8 <col:18> 'int (*)()' <FunctionToPointerDecay>
|   |       |   | `-DeclRefExpr 0x13c02b928 <col:18> 'int ()' Function 0x13c02ac00 'atoi' 'int ()'
|   |       |   `-BinaryOperator 0x13c02ba88 <col:23, col:43> 'char *' '+'
|   |       |     |-BinaryOperator 0x13c02ba48 <col:23, col:39> 'char *' '+'
|   |       |     | |-ImplicitCastExpr 0x13c02ba30 <col:23> 'char *' <LValueToRValue>
|   |       |     | | `-DeclRefExpr 0x13c02b948 <col:23> 'char *' lvalue Var 0x13c00e188 'c' 'char *'
|   |       |     | `-CallExpr 0x13c02b9d8 <col:27, col:39> 'unsigned long'
|   |       |     |   |-ImplicitCastExpr 0x13c02b9c0 <col:27> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |       |     |   | `-DeclRefExpr 0x13c02b968 <col:27> 'unsigned long (const char *)' Function 0x13c02ad38 'strlen' 'unsigned long (const char *)'
|   |       |     |   `-ImplicitCastExpr 0x13c02ba18 <col:34> 'const char *' <NoOp>
|   |       |     |     `-ImplicitCastExpr 0x13c02ba00 <col:34> 'char *' <ArrayToPointerDecay>
|   |       |     |       `-StringLiteral 0x13c02b988 <col:34> 'char[4]' lvalue "STR"
|   |       |     `-IntegerLiteral 0x13c02ba68 <col:43> 'int' 1
|   |       |-CallExpr 0x13c02bd38 <line:41:13, col:45> '<dependent type>' contains-errors
|   |       | |-DeclRefExpr 0x13c02bbe8 <col:13> 'int ()' Function 0x13c02bb30 'load_kids' 'int ()'
|   |       | |-RecoveryExpr 0x13c02bc08 <col:23> '<dependent type>' contains-errors lvalue
|   |       | |-DeclRefExpr 0x13c02bc28 <col:27> 'int' lvalue Var 0x13c00dfd0 'id' 'int'
|   |       | `-UnaryOperator 0x13c02bd20 <col:31, col:44> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |       |   `-ArraySubscriptExpr 0x13c02bd00 <col:32, col:44> '<dependent type>' contains-errors lvalue
|   |       |     |-ImplicitCastExpr 0x13c02bcd0 <col:32, col:37> '<dependent type>' contains-errors <LValueToRValue>
|   |       |     | `-CXXDependentScopeMemberExpr 0x13c02bc68 <col:32, col:37> '<dependent type>' contains-errors lvalue ->xrefs
|   |       |     |   `-RecoveryExpr 0x13c02bc48 <col:32> '<dependent type>' contains-errors lvalue
|   |       |     `-ImplicitCastExpr 0x13c02bce8 <col:43> 'int' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x13c02bcb0 <col:43> 'int' lvalue Var 0x13c00df50 'i' 'int'
|   |       `-CallExpr 0x13c02bde0 <line:42:13, col:21> 'void'
|   |         |-ImplicitCastExpr 0x13c02bdc8 <col:13> 'void (*)(void *)' <FunctionToPointerDecay>
|   |         | `-DeclRefExpr 0x13c02bd70 <col:13> 'void (void *)' Function 0x13c029aa8 'free' 'void (void *)'
|   |         `-ImplicitCastExpr 0x13c02be20 <col:18> 'void *' <BitCast>
|   |           `-ImplicitCastExpr 0x13c02be08 <col:18> 'char *' <LValueToRValue>
|   |             `-DeclRefExpr 0x13c02bd90 <col:18> 'char *' lvalue Var 0x13c00e108 'buf' 'char *'
|   `-CallExpr 0x13c02bff8 <line:46:5, col:30> '<dependent type>' contains-errors
|     |-DeclRefExpr 0x13c02bf28 <col:5> 'int ()' Function 0x13c027990 'fseek' 'int ()'
|     |-RecoveryExpr 0x13c02bf48 <col:11> '<dependent type>' contains-errors lvalue
|     |-DeclRefExpr 0x13c02bf68 <col:15> 'long' lvalue Var 0x13c00e238 'start' 'long'
|     `-RecoveryExpr 0x13c02bfd8 <col:22> '<dependent type>' contains-errors lvalue
|-FunctionDecl 0x13c028f00 <line:20:19> col:19 implicit used malloc 'void *(unsigned long)' extern
| |-ParmVarDecl 0x13c029000 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-BuiltinAttr 0x13c028fa8 <<invalid sloc>> Implicit 871
| `-AllocSizeAttr 0x13c029070 <col:19> Implicit 1
|-FunctionDecl 0x13c0296d0 <line:23:23> col:23 implicit used strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x13c0297d0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x13c029838 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x13c029778 <<invalid sloc>> Implicit 898
|-FunctionDecl 0x13c029aa8 <line:25:17> col:17 implicit used free 'void (void *)' extern
| |-ParmVarDecl 0x13c02aa00 <<invalid sloc>> <invalid sloc> 'void *'
| `-BuiltinAttr 0x13c029b50 <<invalid sloc>> Implicit 873
`-FunctionDecl 0x13c02ad38 <line:30:27> col:27 implicit used strlen 'unsigned long (const char *)' extern
  |-ParmVarDecl 0x13c02ae38 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x13c02ade0 <<invalid sloc>> Implicit 902
