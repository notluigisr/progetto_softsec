TranslationUnitDecl 0x12d855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12d8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12d855bd0 '__int128'
|-TypedefDecl 0x12d856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12d855bf0 'unsigned __int128'
|-TypedefDecl 0x12d926c30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12d926a00 'struct __NSConstantString_tag'
|   `-Record 0x12d856580 '__NSConstantString_tag'
|-TypedefDecl 0x12d926c98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12d855d90 '__SVInt8_t'
|-TypedefDecl 0x12d926d00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12d855db0 '__SVInt16_t'
|-TypedefDecl 0x12d926d68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12d855dd0 '__SVInt32_t'
|-TypedefDecl 0x12d926dd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12d855df0 '__SVInt64_t'
|-TypedefDecl 0x12d926e38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12d855e10 '__SVUint8_t'
|-TypedefDecl 0x12d926ea0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12d855e30 '__SVUint16_t'
|-TypedefDecl 0x12d926f08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12d855e50 '__SVUint32_t'
|-TypedefDecl 0x12d926f70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12d855e70 '__SVUint64_t'
|-TypedefDecl 0x12d926fd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12d855e90 '__SVFloat16_t'
|-TypedefDecl 0x12d927040 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12d855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12d9270a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12d855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12d927110 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12d855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12d927178 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12d855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12d9271e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12d855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12d927248 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12d855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12d9272b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12d855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12d927318 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12d855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12d927380 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12d855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12d9273e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12d855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12d927450 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12d855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12d9274b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12d856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12d927520 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12d856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12d927588 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12d856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12d9275f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12d856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12d927658 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12d856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12d9276c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12d8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12d927728 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12d8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12d927790 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12d8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12d9277f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12d856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12d927860 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12d856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12d9278c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12d856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12d927930 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12d856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12d927998 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12d856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12d928200 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12d8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12d928268 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12d8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12d9282d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12d8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12d928338 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12d856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12d9283a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12d856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12d928408 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12d856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12d928470 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12d856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12d9284d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12d856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12d928540 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12d8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12d9285a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12d8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12d928610 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12d8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12d928678 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12d856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12d9286e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12d856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12d928748 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12d856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12d9287b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12d856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12d928818 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12d856390 '__SVBool_t'
|-TypedefDecl 0x12d928880 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12d8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12d9288e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12d8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12d928950 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12d8563f0 '__SVCount_t'
|-TypedefDecl 0x12d9289f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12d9289b0 'char *'
|   `-BuiltinType 0x12d8556b0 'char'
|-TypedefDecl 0x12d928a68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12d9289b0 'char *'
|   `-BuiltinType 0x12d8556b0 'char'
|-RecordDecl 0x12d928ac0 <dataset_diviso_filec/func9492_vuln.c:1:8, col:15> col:15 struct rtable
`-FunctionDecl 0x12d945ee8 <col:1, line:91:1> line:1:23 invalid icmp_route_lookup 'struct rtable *(struct net *, struct sk_buff *, const struct iphdr *, int, int, int, int, struct icmp_bxm *)' static
  |-ParmVarDecl 0x12d9290e8 <col:41, col:53> col:53 used net 'struct net *'
  |-ParmVarDecl 0x12d9456c8 <col:58, col:74> col:74 used skb_in 'struct sk_buff *'
  |-ParmVarDecl 0x12d945898 <line:2:6, col:26> col:26 used iph 'const struct iphdr *'
  |-ParmVarDecl 0x12d945930 <line:3:6, col:13> col:13 invalid saddr 'int'
  |-ParmVarDecl 0x12d9459b0 <col:20, col:23> col:23 invalid tos 'int'
  |-ParmVarDecl 0x12d945a30 <line:4:6, col:10> col:10 used type 'int'
  |-ParmVarDecl 0x12d945ab0 <col:16, col:20> col:20 used code 'int'
  |-ParmVarDecl 0x12d945c88 <line:5:6, col:23> col:23 used param 'struct icmp_bxm *'
  `-CompoundStmt 0x12d94af78 <line:6:1, line:91:1>
    |-DeclStmt 0x12d947518 <line:7:2, line:15:3>
    | |-RecordDecl 0x12d945fd0 <line:7:2, col:9> col:9 struct flowi4
    | `-VarDecl 0x12d9460c8 <col:2, col:16> col:16 referenced invalid fl4 'struct flowi4'
    |-DeclStmt 0x12d9476c8 <line:16:2, col:25>
    | |-VarDecl 0x12d9475b8 <col:2, col:17> col:17 used rt 'struct rtable *'
    | `-VarDecl 0x12d947648 <col:2, col:22> col:22 used rt2 'struct rtable *'
    |-DeclStmt 0x12d947760 <line:17:2, col:9>
    | `-VarDecl 0x12d9476f8 <col:2, col:6> col:6 used err 'int'
    |-CallExpr 0x12d9479f8 <line:19:2, col:58> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12d947858 <col:2> 'int ()' Function 0x12d9477a0 'security_skb_classify_flow' 'int ()'
    | |-DeclRefExpr 0x12d947878 <col:29> 'struct sk_buff *' lvalue ParmVar 0x12d9456c8 'skb_in' 'struct sk_buff *'
    | `-CallExpr 0x12d9479d0 <col:37, col:57> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12d947978 <col:37> 'int ()' Function 0x12d9478c0 'flowi4_to_flowi' 'int ()'
    |   `-UnaryOperator 0x12d9479b8 <col:53, col:54> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x12d947998 <col:54> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x12d947bd0 <line:20:2, col:38> 'struct rtable *' contains-errors '='
    | |-DeclRefExpr 0x12d947a28 <col:2> 'struct rtable *' lvalue Var 0x12d9475b8 'rt' 'struct rtable *'
    | `-CallExpr 0x12d947ba0 <col:7, col:38> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12d947b28 <col:7> 'int ()' Function 0x12d947a70 '__ip_route_output_key' 'int ()'
    |   |-DeclRefExpr 0x12d947b48 <col:29> 'struct net *' lvalue ParmVar 0x12d9290e8 'net' 'struct net *'
    |   `-UnaryOperator 0x12d947b88 <col:34, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x12d947b68 <col:35> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12d947de0 <line:21:2, line:22:10>
    | |-CallExpr 0x12d947d58 <line:21:6, col:15> 'int'
    | | |-ImplicitCastExpr 0x12d947d40 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x12d947cd0 <col:6> 'int ()' Function 0x12d947c18 'IS_ERR' 'int ()'
    | | `-ImplicitCastExpr 0x12d947d80 <col:13> 'struct rtable *' <LValueToRValue>
    | |   `-DeclRefExpr 0x12d947cf0 <col:13> 'struct rtable *' lvalue Var 0x12d9475b8 'rt' 'struct rtable *'
    | `-ReturnStmt 0x12d947dd0 <line:22:3, col:10>
    |   `-ImplicitCastExpr 0x12d947db8 <col:10> 'struct rtable *' <LValueToRValue>
    |     `-DeclRefExpr 0x12d947d98 <col:10> 'struct rtable *' lvalue Var 0x12d9475b8 'rt' 'struct rtable *'
    |-BinaryOperator 0x12d947e58 <line:25:2, col:8> 'struct rtable *' '='
    | |-DeclRefExpr 0x12d947e00 <col:2> 'struct rtable *' lvalue Var 0x12d947648 'rt2' 'struct rtable *'
    | `-ImplicitCastExpr 0x12d947e40 <col:8> 'struct rtable *' <LValueToRValue>
    |   `-DeclRefExpr 0x12d947e20 <col:8> 'struct rtable *' lvalue Var 0x12d9475b8 'rt' 'struct rtable *'
    |-IfStmt 0x12d948020 <line:27:2, line:28:19>
    | |-UnaryOperator 0x12d947ef8 <line:27:6, col:11> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x12d947ee0 <col:7, col:11> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-CXXDependentScopeMemberExpr 0x12d947e98 <col:7, col:11> '<dependent type>' contains-errors lvalue .saddr
    | |     `-RecoveryExpr 0x12d947e78 <col:7> '<dependent type>' contains-errors lvalue
    | `-BinaryOperator 0x12d948000 <line:28:3, col:19> '<dependent type>' contains-errors '='
    |   |-CXXDependentScopeMemberExpr 0x12d947f58 <col:3, col:7> '<dependent type>' contains-errors lvalue .saddr
    |   | `-RecoveryExpr 0x12d947f30 <col:3> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x12d947f10 <col:3> 'struct flowi4' lvalue Var 0x12d9460c8 'fl4' 'struct flowi4'
    |   `-RecoveryExpr 0x12d947fd8 <col:15, col:19> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x12d947fa0 <col:15> 'struct rtable *' lvalue Var 0x12d9475b8 'rt' 'struct rtable *'
    |-IfStmt 0x12d948f18 <line:32:2, line:38:10> has_else
    | |-UnaryOperator 0x12d9483b8 <line:32:6, col:16> 'int' prefix '!' cannot overflow
    | | `-CallExpr 0x12d948378 <col:7, col:16> 'int'
    | |   |-ImplicitCastExpr 0x12d948360 <col:7> 'int (*)()' <FunctionToPointerDecay>
    | |   | `-DeclRefExpr 0x12d948320 <col:7> 'int ()' Function 0x12d947c18 'IS_ERR' 'int ()'
    | |   `-ImplicitCastExpr 0x12d9483a0 <col:14> 'struct rtable *' <LValueToRValue>
    | |     `-DeclRefExpr 0x12d948340 <col:14> 'struct rtable *' lvalue Var 0x12d9475b8 'rt' 'struct rtable *'
    | |-CompoundStmt 0x12d948ad8 <col:19, line:35:2>
    | | `-IfStmt 0x12d948ab8 <line:33:3, line:34:11>
    | |   |-BinaryOperator 0x12d948a50 <line:33:7, col:13> 'int' '!='
    | |   | |-ImplicitCastExpr 0x12d948a20 <col:7> 'struct rtable *' <LValueToRValue>
    | |   | | `-DeclRefExpr 0x12d9483d0 <col:7> 'struct rtable *' lvalue Var 0x12d9475b8 'rt' 'struct rtable *'
    | |   | `-ImplicitCastExpr 0x12d948a38 <col:13> 'struct rtable *' <LValueToRValue>
    | |   |   `-DeclRefExpr 0x12d948a00 <col:13> 'struct rtable *' lvalue Var 0x12d947648 'rt2' 'struct rtable *'
    | |   `-ReturnStmt 0x12d948aa8 <line:34:4, col:11>
    | |     `-ImplicitCastExpr 0x12d948a90 <col:11> 'struct rtable *' <LValueToRValue>
    | |       `-DeclRefExpr 0x12d948a70 <col:11> 'struct rtable *' lvalue Var 0x12d9475b8 'rt' 'struct rtable *'
    | `-IfStmt 0x12d948ee8 <line:35:9, line:38:10> has_else
    |   |-BinaryOperator 0x12d948dd0 <line:35:13, col:29> 'int' contains-errors '=='
    |   | |-CallExpr 0x12d948d40 <col:13, col:23> 'int'
    |   | | |-ImplicitCastExpr 0x12d948d28 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |   | | | `-DeclRefExpr 0x12d948bd0 <col:13> 'int ()' Function 0x12d948b18 'PTR_ERR' 'int ()'
    |   | | `-ImplicitCastExpr 0x12d948d68 <col:21> 'struct rtable *' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x12d948bf0 <col:21> 'struct rtable *' lvalue Var 0x12d9475b8 'rt' 'struct rtable *'
    |   | `-UnaryOperator 0x12d948db8 <col:28, col:29> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |   `-ImplicitCastExpr 0x12d948da0 <col:29> '<dependent type>' contains-errors <LValueToRValue>
    |   |     `-RecoveryExpr 0x12d948d80 <col:29> '<dependent type>' contains-errors lvalue
    |   |-CompoundStmt 0x12d948e88 <col:36, line:37:2>
    |   | `-BinaryOperator 0x12d948e68 <line:36:3, col:8> 'struct rtable *' contains-errors '='
    |   |   |-DeclRefExpr 0x12d948df0 <col:3> 'struct rtable *' lvalue Var 0x12d9475b8 'rt' 'struct rtable *'
    |   |   `-RecoveryExpr 0x12d948e48 <col:8> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x12d948ed8 <line:38:3, col:10>
    |     `-ImplicitCastExpr 0x12d948ec0 <col:10> 'struct rtable *' <LValueToRValue>
    |       `-DeclRefExpr 0x12d948ea0 <col:10> 'struct rtable *' lvalue Var 0x12d9475b8 'rt' 'struct rtable *'
    |-IfStmt 0x12d9491a8 <line:41:2, line:42:8>
    | |-ImplicitCastExpr 0x12d949128 <line:41:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x12d949108 <col:6> 'int' lvalue Var 0x12d9476f8 'err' 'int'
    | `-GotoStmt 0x12d949190 <line:42:3, col:8> 'relookup_failed' 0x12d949140
    |-IfStmt 0x12d94a528 <line:44:2, line:66:2> has_else
    | |-RecoveryExpr 0x12d949380 <line:44:6, col:40> '_Bool' contains-errors
    | |-CompoundStmt 0x12d949618 <col:51, line:48:2>
    | | |-BinaryOperator 0x12d949468 <line:45:3, col:40> 'struct rtable *' contains-errors '='
    | | | |-DeclRefExpr 0x12d9493a0 <col:3> 'struct rtable *' lvalue Var 0x12d947648 'rt2' 'struct rtable *'
    | | | `-CallExpr 0x12d949438 <col:9, col:40> '<dependent type>' contains-errors
    | | |   |-DeclRefExpr 0x12d9493c0 <col:9> 'int ()' Function 0x12d947a70 '__ip_route_output_key' 'int ()'
    | | |   |-DeclRefExpr 0x12d9493e0 <col:31> 'struct net *' lvalue ParmVar 0x12d9290e8 'net' 'struct net *'
    | | |   `-UnaryOperator 0x12d949420 <col:36, col:37> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | |     `-RecoveryExpr 0x12d949400 <col:37> '<dependent type>' contains-errors lvalue
    | | `-IfStmt 0x12d9495f8 <line:46:3, line:47:21>
    | |   |-CallExpr 0x12d9494e0 <line:46:7, col:17> 'int'
    | |   | |-ImplicitCastExpr 0x12d9494c8 <col:7> 'int (*)()' <FunctionToPointerDecay>
    | |   | | `-DeclRefExpr 0x12d949488 <col:7> 'int ()' Function 0x12d947c18 'IS_ERR' 'int ()'
    | |   | `-ImplicitCastExpr 0x12d949508 <col:14> 'struct rtable *' <LValueToRValue>
    | |   |   `-DeclRefExpr 0x12d9494a8 <col:14> 'struct rtable *' lvalue Var 0x12d947648 'rt2' 'struct rtable *'
    | |   `-BinaryOperator 0x12d9495d8 <line:47:4, col:21> 'int' '='
    | |     |-DeclRefExpr 0x12d949520 <col:4> 'int' lvalue Var 0x12d9476f8 'err' 'int'
    | |     `-CallExpr 0x12d949598 <col:10, col:21> 'int'
    | |       |-ImplicitCastExpr 0x12d949580 <col:10> 'int (*)()' <FunctionToPointerDecay>
    | |       | `-DeclRefExpr 0x12d949540 <col:10> 'int ()' Function 0x12d948b18 'PTR_ERR' 'int ()'
    | |       `-ImplicitCastExpr 0x12d9495c0 <col:18> 'struct rtable *' <LValueToRValue>
    | |         `-DeclRefExpr 0x12d949560 <col:18> 'struct rtable *' lvalue Var 0x12d947648 'rt2' 'struct rtable *'
    | `-CompoundStmt 0x12d94a4c8 <line:48:9, line:66:2>
    |   |-DeclStmt 0x12d949738 <line:49:3, col:27>
    |   | `-VarDecl 0x12d949690 <col:3, col:17> col:17 referenced invalid fl4_2 'struct flowi4'
    |   |-DeclStmt 0x12d9497d0 <line:50:3, col:24>
    |   | `-VarDecl 0x12d949768 <col:3, col:17> col:17 used orefdst 'unsigned long'
    |   |-BinaryOperator 0x12d9498e0 <line:52:3, col:21> '<dependent type>' contains-errors '='
    |   | |-CXXDependentScopeMemberExpr 0x12d949830 <col:3, col:9> '<dependent type>' contains-errors lvalue .daddr
    |   | | `-RecoveryExpr 0x12d949808 <col:3> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x12d9497e8 <col:3> 'struct flowi4' lvalue Var 0x12d949690 'fl4_2' 'struct flowi4'
    |   | `-CXXDependentScopeMemberExpr 0x12d949898 <col:17, col:21> '<dependent type>' contains-errors lvalue .saddr
    |   |   `-RecoveryExpr 0x12d949878 <col:17> '<dependent type>' contains-errors lvalue
    |   |-BinaryOperator 0x12d949aa8 <line:53:3, col:40> 'struct rtable *' contains-errors '='
    |   | |-DeclRefExpr 0x12d949900 <col:3> 'struct rtable *' lvalue Var 0x12d947648 'rt2' 'struct rtable *'
    |   | `-CallExpr 0x12d949a78 <col:9, col:40> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x12d949a00 <col:9> 'int ()' Function 0x12d949948 'ip_route_output_key' 'int ()'
    |   |   |-DeclRefExpr 0x12d949a20 <col:29> 'struct net *' lvalue ParmVar 0x12d9290e8 'net' 'struct net *'
    |   |   `-UnaryOperator 0x12d949a60 <col:34, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |     `-RecoveryExpr 0x12d949a40 <col:35> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x12d949c70 <line:54:3, line:57:3>
    |   | |-CallExpr 0x12d949b20 <line:54:7, col:17> 'int'
    |   | | |-ImplicitCastExpr 0x12d949b08 <col:7> 'int (*)()' <FunctionToPointerDecay>
    |   | | | `-DeclRefExpr 0x12d949ac8 <col:7> 'int ()' Function 0x12d947c18 'IS_ERR' 'int ()'
    |   | | `-ImplicitCastExpr 0x12d949b48 <col:14> 'struct rtable *' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x12d949ae8 <col:14> 'struct rtable *' lvalue Var 0x12d947648 'rt2' 'struct rtable *'
    |   | `-CompoundStmt 0x12d949c50 <col:20, line:57:3>
    |   |   |-BinaryOperator 0x12d949c18 <line:55:4, col:21> 'int' '='
    |   |   | |-DeclRefExpr 0x12d949b60 <col:4> 'int' lvalue Var 0x12d9476f8 'err' 'int'
    |   |   | `-CallExpr 0x12d949bd8 <col:10, col:21> 'int'
    |   |   |   |-ImplicitCastExpr 0x12d949bc0 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |   |   |   | `-DeclRefExpr 0x12d949b80 <col:10> 'int ()' Function 0x12d948b18 'PTR_ERR' 'int ()'
    |   |   |   `-ImplicitCastExpr 0x12d949c00 <col:18> 'struct rtable *' <LValueToRValue>
    |   |   |     `-DeclRefExpr 0x12d949ba0 <col:18> 'struct rtable *' lvalue Var 0x12d947648 'rt2' 'struct rtable *'
    |   |   `-GotoStmt 0x12d949c38 <line:56:4, col:9> 'relookup_failed' 0x12d949140
    |   |-BinaryOperator 0x12d949d10 <line:59:3, col:21> 'unsigned long' contains-errors '='
    |   | |-DeclRefExpr 0x12d949c90 <col:3> 'unsigned long' lvalue Var 0x12d949768 'orefdst' 'unsigned long'
    |   | `-RecoveryExpr 0x12d949ce8 <col:13, col:21> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x12d949cb0 <col:13> 'struct sk_buff *' lvalue ParmVar 0x12d9456c8 'skb_in' 'struct sk_buff *'
    |   |-BinaryOperator 0x12d94a098 <line:60:3, line:61:35> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x12d949d30 <line:60:3> 'int' lvalue Var 0x12d9476f8 'err' 'int'
    |   | `-CallExpr 0x12d94a050 <col:9, line:61:35> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x12d949e30 <line:60:9> 'int ()' Function 0x12d949d78 'ip_route_input' 'int ()'
    |   |   |-DeclRefExpr 0x12d949e50 <col:24> 'struct sk_buff *' lvalue ParmVar 0x12d9456c8 'skb_in' 'struct sk_buff *'
    |   |   |-CXXDependentScopeMemberExpr 0x12d949e90 <col:32, col:36> '<dependent type>' contains-errors lvalue .daddr
    |   |   | `-RecoveryExpr 0x12d949e70 <col:32> '<dependent type>' contains-errors lvalue
    |   |   |-CXXDependentScopeMemberExpr 0x12d949ef8 <col:43, col:47> '<dependent type>' contains-errors lvalue .saddr
    |   |   | `-RecoveryExpr 0x12d949ed8 <col:43> '<dependent type>' contains-errors lvalue
    |   |   |-CallExpr 0x12d949f80 <line:61:10, col:20> '<dependent type>' contains-errors
    |   |   | |-DeclRefExpr 0x12d949f40 <col:10> 'int ()' Function 0x12d946478 'RT_TOS' 'int ()'
    |   |   | `-RecoveryExpr 0x12d949f60 <col:17> '<dependent type>' contains-errors lvalue
    |   |   `-CXXDependentScopeMemberExpr 0x12d94a008 <col:23, col:32> '<dependent type>' contains-errors lvalue .dev
    |   |     `-RecoveryExpr 0x12d949fe0 <col:23, col:28> '<dependent type>' contains-errors lvalue
    |   |       `-DeclRefExpr 0x12d949fa8 <col:23> 'struct rtable *' lvalue Var 0x12d947648 'rt2' 'struct rtable *'
    |   |-CallExpr 0x12d94a230 <line:63:3, col:24> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x12d94a198 <col:3> 'int ()' Function 0x12d94a0e0 'dst_release' 'int ()'
    |   | `-UnaryOperator 0x12d94a218 <col:15, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   `-RecoveryExpr 0x12d94a1f0 <col:16, col:21> '<dependent type>' contains-errors lvalue
    |   |     `-DeclRefExpr 0x12d94a1b8 <col:16> 'struct rtable *' lvalue Var 0x12d947648 'rt2' 'struct rtable *'
    |   |-BinaryOperator 0x12d94a408 <line:64:3, col:26> 'struct rtable *' '='
    |   | |-DeclRefExpr 0x12d94a258 <col:3> 'struct rtable *' lvalue Var 0x12d947648 'rt2' 'struct rtable *'
    |   | `-ImplicitCastExpr 0x12d94a3f0 <col:9, col:26> 'struct rtable *' <IntegralToPointer>
    |   |   `-CallExpr 0x12d94a3b0 <col:9, col:26> 'int'
    |   |     |-ImplicitCastExpr 0x12d94a398 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   |     | `-DeclRefExpr 0x12d94a358 <col:9> 'int ()' Function 0x12d94a2a0 'skb_rtable' 'int ()'
    |   |     `-ImplicitCastExpr 0x12d94a3d8 <col:20> 'struct sk_buff *' <LValueToRValue>
    |   |       `-DeclRefExpr 0x12d94a378 <col:20> 'struct sk_buff *' lvalue ParmVar 0x12d9456c8 'skb_in' 'struct sk_buff *'
    |   `-BinaryOperator 0x12d94a4a8 <line:65:3, col:25> '<dependent type>' contains-errors '='
    |     |-RecoveryExpr 0x12d94a460 <col:3, col:11> '<dependent type>' contains-errors lvalue
    |     | `-DeclRefExpr 0x12d94a428 <col:3> 'struct sk_buff *' lvalue ParmVar 0x12d9456c8 'skb_in' 'struct sk_buff *'
    |     `-DeclRefExpr 0x12d94a488 <col:25> 'unsigned long' lvalue Var 0x12d949768 'orefdst' 'unsigned long'
    |-IfStmt 0x12d94a5a8 <line:68:2, line:69:8>
    | |-ImplicitCastExpr 0x12d94a578 <line:68:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x12d94a558 <col:6> 'int' lvalue Var 0x12d9476f8 'err' 'int'
    | `-GotoStmt 0x12d94a590 <line:69:3, col:8> 'relookup_failed' 0x12d949140
    |-IfStmt 0x12d94aca0 <line:74:2, line:84:2> has_else
    | |-UnaryOperator 0x12d94a7b8 <line:74:6, col:17> 'int' prefix '!' cannot overflow
    | | `-CallExpr 0x12d94a778 <col:7, col:17> 'int'
    | |   |-ImplicitCastExpr 0x12d94a760 <col:7> 'int (*)()' <FunctionToPointerDecay>
    | |   | `-DeclRefExpr 0x12d94a720 <col:7> 'int ()' Function 0x12d947c18 'IS_ERR' 'int ()'
    | |   `-ImplicitCastExpr 0x12d94a7a0 <col:14> 'struct rtable *' <LValueToRValue>
    | |     `-DeclRefExpr 0x12d94a740 <col:14> 'struct rtable *' lvalue Var 0x12d947648 'rt2' 'struct rtable *'
    | |-CompoundStmt 0x12d94a908 <col:20, line:77:2>
    | | |-CallExpr 0x12d94a868 <line:75:3, col:23> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x12d94a7d0 <col:3> 'int ()' Function 0x12d94a0e0 'dst_release' 'int ()'
    | | | `-UnaryOperator 0x12d94a850 <col:15, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | |   `-RecoveryExpr 0x12d94a828 <col:16, col:20> '<dependent type>' contains-errors lvalue
    | | |     `-DeclRefExpr 0x12d94a7f0 <col:16> 'struct rtable *' lvalue Var 0x12d9475b8 'rt' 'struct rtable *'
    | | `-BinaryOperator 0x12d94a8e8 <line:76:3, col:8> 'struct rtable *' '='
    | |   |-DeclRefExpr 0x12d94a890 <col:3> 'struct rtable *' lvalue Var 0x12d9475b8 'rt' 'struct rtable *'
    | |   `-ImplicitCastExpr 0x12d94a8d0 <col:8> 'struct rtable *' <LValueToRValue>
    | |     `-DeclRefExpr 0x12d94a8b0 <col:8> 'struct rtable *' lvalue Var 0x12d947648 'rt2' 'struct rtable *'
    | `-IfStmt 0x12d94ac70 <line:77:9, line:84:2> has_else
    |   |-RecoveryExpr 0x12d94a9c0 <line:77:13, col:30> '_Bool' contains-errors
    |   |-CompoundStmt 0x12d94ab40 <col:37, line:81:2>
    |   | |-IfStmt 0x12d94aad8 <line:78:3, line:79:24>
    |   | | |-ImplicitCastExpr 0x12d94aa00 <line:78:7> 'struct rtable *' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x12d94a9e0 <col:7> 'struct rtable *' lvalue Var 0x12d9475b8 'rt' 'struct rtable *'
    |   | | `-CallExpr 0x12d94aab0 <line:79:4, col:24> '<dependent type>' contains-errors
    |   | |   |-DeclRefExpr 0x12d94aa18 <col:4> 'int ()' Function 0x12d94a0e0 'dst_release' 'int ()'
    |   | |   `-UnaryOperator 0x12d94aa98 <col:16, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | |     `-RecoveryExpr 0x12d94aa70 <col:17, col:21> '<dependent type>' contains-errors lvalue
    |   | |       `-DeclRefExpr 0x12d94aa38 <col:17> 'struct rtable *' lvalue Var 0x12d9475b8 'rt' 'struct rtable *'
    |   | `-ReturnStmt 0x12d94ab30 <line:80:3, col:10>
    |   |   `-ImplicitCastExpr 0x12d94ab18 <col:10> 'struct rtable *' <LValueToRValue>
    |   |     `-DeclRefExpr 0x12d94aaf8 <col:10> 'struct rtable *' lvalue Var 0x12d947648 'rt2' 'struct rtable *'
    |   `-CompoundStmt 0x12d94ac50 <line:81:9, line:84:2>
    |     |-BinaryOperator 0x12d94ac18 <line:82:3, col:20> 'int' '='
    |     | |-DeclRefExpr 0x12d94ab60 <col:3> 'int' lvalue Var 0x12d9476f8 'err' 'int'
    |     | `-CallExpr 0x12d94abd8 <col:9, col:20> 'int'
    |     |   |-ImplicitCastExpr 0x12d94abc0 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |     |   | `-DeclRefExpr 0x12d94ab80 <col:9> 'int ()' Function 0x12d948b18 'PTR_ERR' 'int ()'
    |     |   `-ImplicitCastExpr 0x12d94ac00 <col:17> 'struct rtable *' <LValueToRValue>
    |     |     `-DeclRefExpr 0x12d94aba0 <col:17> 'struct rtable *' lvalue Var 0x12d947648 'rt2' 'struct rtable *'
    |     `-GotoStmt 0x12d94ac38 <line:83:3, col:8> 'relookup_failed' 0x12d949140
    |-ReturnStmt 0x12d94ad08 <line:85:2, col:9>
    | `-ImplicitCastExpr 0x12d94acf0 <col:9> 'struct rtable *' <LValueToRValue>
    |   `-DeclRefExpr 0x12d94acd0 <col:9> 'struct rtable *' lvalue Var 0x12d9475b8 'rt' 'struct rtable *'
    |-LabelStmt 0x12d94adb8 <line:87:1, line:89:10> 'relookup_failed'
    | `-IfStmt 0x12d94ad98 <line:88:2, line:89:10>
    |   |-ImplicitCastExpr 0x12d94ad38 <line:88:6> 'struct rtable *' <LValueToRValue>
    |   | `-DeclRefExpr 0x12d94ad18 <col:6> 'struct rtable *' lvalue Var 0x12d9475b8 'rt' 'struct rtable *'
    |   `-ReturnStmt 0x12d94ad88 <line:89:3, col:10>
    |     `-ImplicitCastExpr 0x12d94ad70 <col:10> 'struct rtable *' <LValueToRValue>
    |       `-DeclRefExpr 0x12d94ad50 <col:10> 'struct rtable *' lvalue Var 0x12d9475b8 'rt' 'struct rtable *'
    `-ReturnStmt 0x12d94af68 <line:90:2, col:20>
      `-ImplicitCastExpr 0x12d94af50 <col:9, col:20> 'struct rtable *' <IntegralToPointer>
        `-CallExpr 0x12d94af10 <col:9, col:20> 'int'
          |-ImplicitCastExpr 0x12d94aef8 <col:9> 'int (*)()' <FunctionToPointerDecay>
          | `-DeclRefExpr 0x12d94aeb8 <col:9> 'int ()' Function 0x12d94ae00 'ERR_PTR' 'int ()'
          `-ImplicitCastExpr 0x12d94af38 <col:17> 'int' <LValueToRValue>
            `-DeclRefExpr 0x12d94aed8 <col:17> 'int' lvalue Var 0x12d9476f8 'err' 'int'
