TranslationUnitDecl 0x133855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1338564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x133855bd0 '__int128'
|-TypedefDecl 0x133856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x133855bf0 'unsigned __int128'
|-TypedefDecl 0x133926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x133926000 'struct __NSConstantString_tag'
|   `-Record 0x133856580 '__NSConstantString_tag'
|-TypedefDecl 0x133926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x133855d90 '__SVInt8_t'
|-TypedefDecl 0x133926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x133855db0 '__SVInt16_t'
|-TypedefDecl 0x133926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x133855dd0 '__SVInt32_t'
|-TypedefDecl 0x1339263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x133855df0 '__SVInt64_t'
|-TypedefDecl 0x133926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x133855e10 '__SVUint8_t'
|-TypedefDecl 0x1339264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x133855e30 '__SVUint16_t'
|-TypedefDecl 0x133926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x133855e50 '__SVUint32_t'
|-TypedefDecl 0x133926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x133855e70 '__SVUint64_t'
|-TypedefDecl 0x1339265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x133855e90 '__SVFloat16_t'
|-TypedefDecl 0x133926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x133855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1339266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x133855ed0 '__SVFloat64_t'
|-TypedefDecl 0x133926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x133855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x133926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x133855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1339267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x133855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x133926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x133855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1339268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x133855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x133926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x133855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x133926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x133855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1339269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x133855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x133926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x133855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x133926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x133856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x133926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x133856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x133926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x133856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x133926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x133856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x133926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x133856090 '__clang_svint8x3_t'
|-TypedefDecl 0x133926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1338560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x133926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1338560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x133926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1338560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x133926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x133856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x133926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x133856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x133926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x133856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x133926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x133856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x133926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x133856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x133927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1338561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x133927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1338561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1339278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1338561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x133927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x133856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1339279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x133856230 '__clang_svint16x4_t'
|-TypedefDecl 0x133927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x133856250 '__clang_svint32x4_t'
|-TypedefDecl 0x133927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x133856270 '__clang_svint64x4_t'
|-TypedefDecl 0x133927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x133856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x133927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1338562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x133927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1338562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x133927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1338562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x133927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x133856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x133927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x133856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x133927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x133856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x133927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x133856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x133927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x133856390 '__SVBool_t'
|-TypedefDecl 0x133927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1338563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x133927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1338563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x133927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1338563f0 '__SVCount_t'
|-TypedefDecl 0x133927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x133927fb0 'char *'
|   `-BuiltinType 0x1338556b0 'char'
|-TypedefDecl 0x133928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x133927fb0 'char *'
|   `-BuiltinType 0x1338556b0 'char'
|-FunctionDecl 0x133928688 <dataset_diviso_filec/func13126_vuln.c:1:1, line:36:1> line:1:12 invalid _server_handle_vCont 'int (int *, int (*)(void *, const char *, char *, int), void *)' static
| |-ParmVarDecl 0x133928128 <col:33, col:44> col:44 referenced invalid g 'int *'
| |-ParmVarDecl 0x1339284c8 <col:47, col:95> col:53 used cmd_cb 'int (*)(void *, const char *, char *, int)'
| |-ParmVarDecl 0x133928548 <col:98, col:104> col:104 used core_ptr 'void *'
| `-CompoundStmt 0x133943c80 <col:114, line:36:1>
|   |-DeclStmt 0x133941800 <line:2:2, col:21>
|   | `-VarDecl 0x133928760 <col:2, col:17> col:8 used action 'char *' cinit
|   |   `-RecoveryExpr 0x1339287e0 <col:17> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x133941a78 <line:3:2, line:5:2>
|   | |-BinaryOperator 0x1339419f8 <line:3:6, col:21> 'int' contains-errors '<'
|   | | |-CallExpr 0x1339419b0 <col:6, col:17> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x133941970 <col:6> 'int ()' Function 0x1339418b8 'send_ack' 'int ()'
|   | | | `-RecoveryExpr 0x133941990 <col:16> '<dependent type>' contains-errors lvalue
|   | | `-IntegerLiteral 0x1339419d8 <col:21> 'int' 0
|   | `-CompoundStmt 0x133941a60 <col:24, line:5:2>
|   |   `-ReturnStmt 0x133941a50 <line:4:3, col:11>
|   |     `-UnaryOperator 0x133941a38 <col:10, col:11> 'int' prefix '-'
|   |       `-IntegerLiteral 0x133941a18 <col:11> 'int' 1
|   |-BinaryOperator 0x133941bf8 <line:6:2, col:25> '<dependent type>' contains-errors '='
|   | |-ArraySubscriptExpr 0x133941bc0 <col:2, col:21> '<dependent type>' contains-errors lvalue
|   | | |-ImplicitCastExpr 0x133941b90 <col:2, col:5> '<dependent type>' contains-errors <LValueToRValue>
|   | | | `-CXXDependentScopeMemberExpr 0x133941ae0 <col:2, col:5> '<dependent type>' contains-errors lvalue ->data
|   | | |   `-RecoveryExpr 0x133941ab8 <col:2> '<dependent type>' contains-errors lvalue
|   | | |     `-DeclRefExpr 0x133941a98 <col:2> 'int *' lvalue ParmVar 0x133928128 'g' 'int *'
|   | | `-ImplicitCastExpr 0x133941ba8 <col:10, col:13> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-CXXDependentScopeMemberExpr 0x133941b48 <col:10, col:13> '<dependent type>' contains-errors lvalue ->data_len
|   | |     `-RecoveryExpr 0x133941b28 <col:10> '<dependent type>' contains-errors lvalue
|   | `-CharacterLiteral 0x133941be0 <col:25> 'int' 0
|   |-IfStmt 0x133941ee8 <line:7:2, line:10:2>
|   | |-BinaryOperator 0x133941cf0 <line:7:6, col:20> 'int' contains-errors '=='
|   | | |-ArraySubscriptExpr 0x133941cb8 <col:6, col:15> '<dependent type>' contains-errors lvalue
|   | | | |-ImplicitCastExpr 0x133941ca0 <col:6, col:9> '<dependent type>' contains-errors <LValueToRValue>
|   | | | | `-CXXDependentScopeMemberExpr 0x133941c38 <col:6, col:9> '<dependent type>' contains-errors lvalue ->data
|   | | | |   `-RecoveryExpr 0x133941c18 <col:6> '<dependent type>' contains-errors lvalue
|   | | | `-IntegerLiteral 0x133941c80 <col:14> 'int' 5
|   | | `-CharacterLiteral 0x133941cd8 <col:20> 'int' 63
|   | `-CompoundStmt 0x133941ed0 <col:25, line:10:2>
|   |   `-ReturnStmt 0x133941ec0 <line:9:3, col:28>
|   |     `-CallExpr 0x133941e90 <col:10, col:28> '<dependent type>' contains-errors
|   |       |-DeclRefExpr 0x133941df0 <col:10> 'int ()' Function 0x133941d38 'send_msg' 'int ()'
|   |       |-RecoveryExpr 0x133941e10 <col:20> '<dependent type>' contains-errors lvalue
|   |       `-StringLiteral 0x133941e70 <col:23> 'char[4]' lvalue "STR"
|   |-IfStmt 0x133942788 <line:11:2, line:13:2>
|   | |-UnaryOperator 0x1339426b8 <line:11:6, col:40> 'int' contains-errors prefix '!' cannot overflow
|   | | `-ParenExpr 0x133942698 <col:7, col:40> 'char *' contains-errors
|   | |   `-BinaryOperator 0x133942678 <col:8, col:39> 'char *' contains-errors '='
|   | |     |-DeclRefExpr 0x133941f08 <col:8> 'char *' contains-errors lvalue Var 0x133928760 'action' 'char *'
|   | |     `-CallExpr 0x133942648 <col:17, col:39> '<dependent type>' contains-errors
|   | |       |-DeclRefExpr 0x133942570 <col:17> 'char *(char *, const char *)' Function 0x133942390 'strtok' 'char *(char *, const char *)'
|   | |       |-CXXDependentScopeMemberExpr 0x1339425b0 <col:25, col:28> '<dependent type>' contains-errors lvalue ->data
|   | |       | `-RecoveryExpr 0x133942590 <col:25> '<dependent type>' contains-errors lvalue
|   | |       `-StringLiteral 0x1339425f8 <col:34> 'char[4]' lvalue "STR"
|   | `-CompoundStmt 0x133942770 <col:43, line:13:2>
|   |   `-ReturnStmt 0x133942760 <line:12:3, col:28>
|   |     `-CallExpr 0x133942730 <col:10, col:28> '<dependent type>' contains-errors
|   |       |-DeclRefExpr 0x1339426d0 <col:10> 'int ()' Function 0x133941d38 'send_msg' 'int ()'
|   |       |-RecoveryExpr 0x1339426f0 <col:20> '<dependent type>' contains-errors lvalue
|   |       `-StringLiteral 0x133942710 <col:23> 'char[4]' lvalue "STR"
|   `-WhileStmt 0x133943c60 <line:14:2, line:35:2>
|     |-BinaryOperator 0x133943120 <line:14:9, col:37> 'char *' contains-errors '='
|     | |-DeclRefExpr 0x1339427a8 <col:9> 'char *' contains-errors lvalue Var 0x133928760 'action' 'char *'
|     | `-CallExpr 0x1339430f0 <col:18, col:37> '<dependent type>' contains-errors
|     |   |-DeclRefExpr 0x1339427c8 <col:18> 'char *(char *, const char *)' Function 0x133942390 'strtok' 'char *(char *, const char *)'
|     |   |-RecoveryExpr 0x1339430a0 <col:26> '<dependent type>' contains-errors lvalue
|     |   `-StringLiteral 0x133943000 <col:32> 'char[4]' lvalue "STR"
|     `-CompoundStmt 0x133943c40 <col:40, line:35:2>
|       |-CallExpr 0x1339432c8 <line:15:3, col:25> 'int' contains-errors
|       | |-ImplicitCastExpr 0x1339432b0 <col:3> 'int (*)()' <FunctionToPointerDecay>
|       | | `-DeclRefExpr 0x133943220 <col:3> 'int ()' Function 0x133943168 'eprintf' 'int ()'
|       | |-ImplicitCastExpr 0x1339432f8 <col:12> 'char *' <ArrayToPointerDecay>
|       | | `-StringLiteral 0x133943240 <col:12> 'char[4]' lvalue "STR"
|       | `-ImplicitCastExpr 0x133943310 <col:19> 'char *' contains-errors <LValueToRValue>
|       |   `-DeclRefExpr 0x133943260 <col:19> 'char *' contains-errors lvalue Var 0x133928760 'action' 'char *'
|       `-SwitchStmt 0x1339433d0 <line:16:3, line:34:3>
|         |-ImplicitCastExpr 0x1339433b8 <line:16:11, col:19> 'int' contains-errors <IntegralCast>
|         | `-ImplicitCastExpr 0x1339433a0 <col:11, col:19> 'char' contains-errors <LValueToRValue>
|         |   `-ArraySubscriptExpr 0x133943380 <col:11, col:19> 'char' contains-errors lvalue
|         |     |-ImplicitCastExpr 0x133943368 <col:11> 'char *' contains-errors <LValueToRValue>
|         |     | `-DeclRefExpr 0x133943328 <col:11> 'char *' contains-errors lvalue Var 0x133928760 'action' 'char *'
|         |     `-IntegerLiteral 0x133943348 <col:18> 'int' 0
|         `-CompoundStmt 0x133943c08 <col:22, line:34:3>
|           |-CaseStmt 0x133943428 <line:17:3, line:22:4>
|           | |-ConstantExpr 0x133943410 <line:17:8> 'int'
|           | | `-CharacterLiteral 0x1339433f8 <col:8> 'int' 115
|           | `-IfStmt 0x1339436e0 <line:19:4, line:22:4>
|           |   |-BinaryOperator 0x1339435c8 <line:19:8, col:44> 'int' contains-errors '<'
|           |   | |-CallExpr 0x133943588 <col:8, col:40> '<dependent type>' contains-errors
|           |   | | |-DeclRefExpr 0x133943450 <col:8> 'int (*)(void *, const char *, char *, int)' lvalue ParmVar 0x1339284c8 'cmd_cb' 'int (*)(void *, const char *, char *, int)'
|           |   | | |-DeclRefExpr 0x133943470 <col:16> 'void *' lvalue ParmVar 0x133928548 'core_ptr' 'void *'
|           |   | | |-StringLiteral 0x133943490 <col:26> 'char[4]' lvalue "STR"
|           |   | | |-RecoveryExpr 0x133943568 <col:33> '<dependent type>' contains-errors lvalue
|           |   | | `-IntegerLiteral 0x1339434c8 <col:39> 'int' 0
|           |   | `-IntegerLiteral 0x133943528 <col:44> 'int' 0
|           |   `-CompoundStmt 0x1339436c0 <col:47, line:22:4>
|           |     |-CallExpr 0x133943648 <line:20:5, col:23> '<dependent type>' contains-errors
|           |     | |-DeclRefExpr 0x1339435e8 <col:5> 'int ()' Function 0x133941d38 'send_msg' 'int ()'
|           |     | |-RecoveryExpr 0x133943608 <col:15> '<dependent type>' contains-errors lvalue
|           |     | `-StringLiteral 0x133943628 <col:18> 'char[4]' lvalue "STR"
|           |     `-ReturnStmt 0x1339436b0 <line:21:5, col:13>
|           |       `-UnaryOperator 0x133943698 <col:12, col:13> 'int' prefix '-'
|           |         `-IntegerLiteral 0x133943678 <col:13> 'int' 1
|           |-ReturnStmt 0x133943790 <line:23:4, col:29>
|           | `-CallExpr 0x133943760 <col:11, col:29> '<dependent type>' contains-errors
|           |   |-DeclRefExpr 0x133943700 <col:11> 'int ()' Function 0x133941d38 'send_msg' 'int ()'
|           |   |-RecoveryExpr 0x133943720 <col:21> '<dependent type>' contains-errors lvalue
|           |   `-StringLiteral 0x133943740 <col:24> 'char[4]' lvalue "STR"
|           |-CaseStmt 0x1339437d0 <line:24:3, line:29:4>
|           | |-ConstantExpr 0x1339437b8 <line:24:8> 'int'
|           | | `-CharacterLiteral 0x1339437a0 <col:8> 'int' 99
|           | `-IfStmt 0x133943a88 <line:26:4, line:29:4>
|           |   |-BinaryOperator 0x133943970 <line:26:8, col:44> 'int' contains-errors '<'
|           |   | |-CallExpr 0x133943930 <col:8, col:40> '<dependent type>' contains-errors
|           |   | | |-DeclRefExpr 0x1339437f8 <col:8> 'int (*)(void *, const char *, char *, int)' lvalue ParmVar 0x1339284c8 'cmd_cb' 'int (*)(void *, const char *, char *, int)'
|           |   | | |-DeclRefExpr 0x133943818 <col:16> 'void *' lvalue ParmVar 0x133928548 'core_ptr' 'void *'
|           |   | | |-StringLiteral 0x133943838 <col:26> 'char[4]' lvalue "STR"
|           |   | | |-RecoveryExpr 0x133943910 <col:33> '<dependent type>' contains-errors lvalue
|           |   | | `-IntegerLiteral 0x133943870 <col:39> 'int' 0
|           |   | `-IntegerLiteral 0x1339438d0 <col:44> 'int' 0
|           |   `-CompoundStmt 0x133943a68 <col:47, line:29:4>
|           |     |-CallExpr 0x1339439f0 <line:27:5, col:23> '<dependent type>' contains-errors
|           |     | |-DeclRefExpr 0x133943990 <col:5> 'int ()' Function 0x133941d38 'send_msg' 'int ()'
|           |     | |-RecoveryExpr 0x1339439b0 <col:15> '<dependent type>' contains-errors lvalue
|           |     | `-StringLiteral 0x1339439d0 <col:18> 'char[4]' lvalue "STR"
|           |     `-ReturnStmt 0x133943a58 <line:28:5, col:13>
|           |       `-UnaryOperator 0x133943a40 <col:12, col:13> 'int' prefix '-'
|           |         `-IntegerLiteral 0x133943a20 <col:13> 'int' 1
|           |-ReturnStmt 0x133943b38 <line:30:4, col:29>
|           | `-CallExpr 0x133943b08 <col:11, col:29> '<dependent type>' contains-errors
|           |   |-DeclRefExpr 0x133943aa8 <col:11> 'int ()' Function 0x133941d38 'send_msg' 'int ()'
|           |   |-RecoveryExpr 0x133943ac8 <col:21> '<dependent type>' contains-errors lvalue
|           |   `-StringLiteral 0x133943ae8 <col:24> 'char[4]' lvalue "STR"
|           `-DefaultStmt 0x133943be8 <line:31:3, line:33:29>
|             `-ReturnStmt 0x133943bd8 <col:4, col:29>
|               `-CallExpr 0x133943ba8 <col:11, col:29> '<dependent type>' contains-errors
|                 |-DeclRefExpr 0x133943b48 <col:11> 'int ()' Function 0x133941d38 'send_msg' 'int ()'
|                 |-RecoveryExpr 0x133943b68 <col:21> '<dependent type>' contains-errors lvalue
|                 `-StringLiteral 0x133943b88 <col:24> 'char[4]' lvalue "STR"
`-FunctionDecl 0x133942390 <line:11:17> col:17 implicit used strtok 'char *(char *, const char *)' extern
  |-ParmVarDecl 0x133942490 <<invalid sloc>> <invalid sloc> 'char *'
  |-ParmVarDecl 0x1339424f8 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x133942438 <<invalid sloc>> Implicit 899
