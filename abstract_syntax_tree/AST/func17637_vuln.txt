TranslationUnitDecl 0x11f055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x11f0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x11f055bd0 '__int128'
|-TypedefDecl 0x11f056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x11f055bf0 'unsigned __int128'
|-TypedefDecl 0x11f126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x11f126000 'struct __NSConstantString_tag'
|   `-Record 0x11f056580 '__NSConstantString_tag'
|-TypedefDecl 0x11f126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x11f055d90 '__SVInt8_t'
|-TypedefDecl 0x11f126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x11f055db0 '__SVInt16_t'
|-TypedefDecl 0x11f126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x11f055dd0 '__SVInt32_t'
|-TypedefDecl 0x11f1263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x11f055df0 '__SVInt64_t'
|-TypedefDecl 0x11f126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x11f055e10 '__SVUint8_t'
|-TypedefDecl 0x11f1264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x11f055e30 '__SVUint16_t'
|-TypedefDecl 0x11f126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x11f055e50 '__SVUint32_t'
|-TypedefDecl 0x11f126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x11f055e70 '__SVUint64_t'
|-TypedefDecl 0x11f1265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x11f055e90 '__SVFloat16_t'
|-TypedefDecl 0x11f126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x11f055eb0 '__SVFloat32_t'
|-TypedefDecl 0x11f1266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x11f055ed0 '__SVFloat64_t'
|-TypedefDecl 0x11f126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x11f055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x11f126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x11f055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x11f1267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x11f055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x11f126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x11f055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x11f1268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x11f055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x11f126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x11f055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x11f126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x11f055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x11f1269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x11f055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x11f126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x11f055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x11f126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x11f056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x11f126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x11f056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x11f126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x11f056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x11f126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x11f056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x11f126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x11f056090 '__clang_svint8x3_t'
|-TypedefDecl 0x11f126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x11f0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x11f126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x11f0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x11f126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x11f0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x11f126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x11f056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x11f126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x11f056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x11f126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x11f056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x11f126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x11f056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x11f126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x11f056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x11f127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x11f0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x11f127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x11f0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x11f1278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x11f0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x11f127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x11f056210 '__clang_svint8x4_t'
|-TypedefDecl 0x11f1279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x11f056230 '__clang_svint16x4_t'
|-TypedefDecl 0x11f127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x11f056250 '__clang_svint32x4_t'
|-TypedefDecl 0x11f127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x11f056270 '__clang_svint64x4_t'
|-TypedefDecl 0x11f127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x11f056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x11f127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x11f0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x11f127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x11f0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x11f127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x11f0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x11f127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x11f056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x11f127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x11f056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x11f127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x11f056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x11f127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x11f056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x11f127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x11f056390 '__SVBool_t'
|-TypedefDecl 0x11f127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x11f0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x11f127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x11f0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x11f127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x11f0563f0 '__SVCount_t'
|-TypedefDecl 0x11f127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x11f127fb0 'char *'
|   `-BuiltinType 0x11f0556b0 'char'
|-TypedefDecl 0x11f128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x11f127fb0 'char *'
|   `-BuiltinType 0x11f0556b0 'char'
`-FunctionDecl 0x11f128288 <dataset_diviso_filec/func17637_vuln.c:1:1, line:36:1> line:1:12 invalid calculate_password 'int (int *, char *)' static
  |-ParmVarDecl 0x11f128128 <col:31, col:39> col:39 invalid str 'int *'
  |-ParmVarDecl 0x11f1281a8 <col:44, col:50> col:50 used buffer 'char *'
  `-CompoundStmt 0x11f1421a0 <line:2:1, line:36:1>
    |-CallExpr 0x11f1284e0 <line:3:3, col:18> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x11f1284a0 <col:3> 'int ()' Function 0x11f1283e8 'DBUG_ASSERT' 'int ()'
    | `-RecoveryExpr 0x11f1284c0 <col:15> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x11f128600 <line:4:3, line:5:12>
    | |-BinaryOperator 0x11f1285b0 <line:4:7, col:24> 'int' contains-errors '=='
    | | |-CallExpr 0x11f128570 <col:7, col:19> '<dependent type>' contains-errors
    | | | `-CXXDependentScopeMemberExpr 0x11f128528 <col:7, col:12> '<dependent type>' contains-errors lvalue ->length
    | | |   `-RecoveryExpr 0x11f128508 <col:7> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x11f128590 <col:24> 'int' 0
    | `-ReturnStmt 0x11f1285f0 <line:5:5, col:12>
    |   `-IntegerLiteral 0x11f1285d0 <col:12> 'int' 0
    |-DeclStmt 0x11f1286c0 <line:7:3, col:20>
    | `-VarDecl 0x11f128638 <col:3, col:19> col:7 used buffer_len 'int' cinit
    |   `-IntegerLiteral 0x11f1286a0 <col:19> 'int' 0
    |-DeclStmt 0x11f1287a8 <line:9:3, col:23>
    | `-VarDecl 0x11f128720 <col:3, col:22> col:7 used old_passwords 'int' cinit
    |   `-IntegerLiteral 0x11f128788 <col:22> 'int' 0
    |-IfStmt 0x11f1419b8 <line:10:3, line:11:35>
    | |-RecoveryExpr 0x11f1287d8 <line:10:7> '<dependent type>' contains-errors lvalue
    | `-BinaryOperator 0x11f141998 <line:11:5, col:35> 'int' contains-errors '='
    |   |-DeclRefExpr 0x11f141800 <col:5> 'int' lvalue Var 0x11f128720 'old_passwords' 'int'
    |   `-CXXDependentScopeMemberExpr 0x11f141950 <col:20, col:35> '<dependent type>' contains-errors lvalue .old_passwords
    |     `-CXXDependentScopeMemberExpr 0x11f141908 <col:20, col:25> '<dependent type>' contains-errors lvalue ->variables
    |       `-RecoveryExpr 0x11f1418e8 <col:20> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x11f142128 <line:22:3, line:34:3> has_else
    | |-BinaryOperator 0x11f141a30 <line:22:7, col:24> 'int' '=='
    | | |-ImplicitCastExpr 0x11f141a18 <col:7> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x11f1419d8 <col:7> 'int' lvalue Var 0x11f128720 'old_passwords' 'int'
    | | `-IntegerLiteral 0x11f1419f8 <col:24> 'int' 0
    | |-CompoundStmt 0x11f141d50 <line:23:3, line:27:3>
    | | |-CallExpr 0x11f141c80 <line:24:5, line:25:50> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x11f141b30 <line:24:5> 'int ()' Function 0x11f141a78 'my_make_scrambled_password_sha1' 'int ()'
    | | | |-DeclRefExpr 0x11f141b50 <col:37> 'char *' lvalue ParmVar 0x11f1281a8 'buffer' 'char *'
    | | | |-CallExpr 0x11f141bd8 <col:45, col:54> '<dependent type>' contains-errors
    | | | | `-CXXDependentScopeMemberExpr 0x11f141b90 <col:45, col:50> '<dependent type>' contains-errors lvalue ->ptr
    | | | |   `-RecoveryExpr 0x11f141b70 <col:45> '<dependent type>' contains-errors lvalue
    | | | `-CallExpr 0x11f141c60 <line:25:37, col:49> '<dependent type>' contains-errors
    | | |   `-CXXDependentScopeMemberExpr 0x11f141c18 <col:37, col:42> '<dependent type>' contains-errors lvalue ->length
    | | |     `-RecoveryExpr 0x11f141bf8 <col:37> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x11f141d30 <line:26:5, col:17> 'int' contains-errors '='
    | |   |-DeclRefExpr 0x11f141cb8 <col:5> 'int' lvalue Var 0x11f128638 'buffer_len' 'int'
    | |   `-RecoveryExpr 0x11f141d10 <col:17> '<dependent type>' contains-errors lvalue
    | `-IfStmt 0x11f142108 <line:29:3, line:34:3>
    |   |-BinaryOperator 0x11f141dc8 <line:29:7, col:24> 'int' '=='
    |   | |-ImplicitCastExpr 0x11f141db0 <col:7> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x11f141d70 <col:7> 'int' lvalue Var 0x11f128720 'old_passwords' 'int'
    |   | `-IntegerLiteral 0x11f141d90 <col:24> 'int' 1
    |   `-CompoundStmt 0x11f1420e8 <line:30:3, line:34:3>
    |     |-CallExpr 0x11f142018 <line:31:5, line:32:49> '<dependent type>' contains-errors
    |     | |-DeclRefExpr 0x11f141ec8 <line:31:5> 'int ()' Function 0x11f141e10 'my_make_scrambled_password_323' 'int ()'
    |     | |-DeclRefExpr 0x11f141ee8 <col:36> 'char *' lvalue ParmVar 0x11f1281a8 'buffer' 'char *'
    |     | |-CallExpr 0x11f141f70 <col:44, col:53> '<dependent type>' contains-errors
    |     | | `-CXXDependentScopeMemberExpr 0x11f141f28 <col:44, col:49> '<dependent type>' contains-errors lvalue ->ptr
    |     | |   `-RecoveryExpr 0x11f141f08 <col:44> '<dependent type>' contains-errors lvalue
    |     | `-CallExpr 0x11f141ff8 <line:32:36, col:48> '<dependent type>' contains-errors
    |     |   `-CXXDependentScopeMemberExpr 0x11f141fb0 <col:36, col:41> '<dependent type>' contains-errors lvalue ->length
    |     |     `-RecoveryExpr 0x11f141f90 <col:36> '<dependent type>' contains-errors lvalue
    |     `-BinaryOperator 0x11f1420c8 <line:33:5, col:17> 'int' contains-errors '='
    |       |-DeclRefExpr 0x11f142050 <col:5> 'int' lvalue Var 0x11f128638 'buffer_len' 'int'
    |       `-RecoveryExpr 0x11f1420a8 <col:17> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x11f142190 <line:35:3, col:10>
      `-ImplicitCastExpr 0x11f142178 <col:10> 'int' <LValueToRValue>
        `-DeclRefExpr 0x11f142158 <col:10> 'int' lvalue Var 0x11f128638 'buffer_len' 'int'
