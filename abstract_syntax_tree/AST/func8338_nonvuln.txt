TranslationUnitDecl 0x12d055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12d0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12d055bd0 '__int128'
|-TypedefDecl 0x12d056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12d055bf0 'unsigned __int128'
|-TypedefDecl 0x12d126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12d126000 'struct __NSConstantString_tag'
|   `-Record 0x12d056580 '__NSConstantString_tag'
|-TypedefDecl 0x12d126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12d055d90 '__SVInt8_t'
|-TypedefDecl 0x12d126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12d055db0 '__SVInt16_t'
|-TypedefDecl 0x12d126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12d055dd0 '__SVInt32_t'
|-TypedefDecl 0x12d1263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12d055df0 '__SVInt64_t'
|-TypedefDecl 0x12d126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12d055e10 '__SVUint8_t'
|-TypedefDecl 0x12d1264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12d055e30 '__SVUint16_t'
|-TypedefDecl 0x12d126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12d055e50 '__SVUint32_t'
|-TypedefDecl 0x12d126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12d055e70 '__SVUint64_t'
|-TypedefDecl 0x12d1265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12d055e90 '__SVFloat16_t'
|-TypedefDecl 0x12d126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12d055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12d1266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12d055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12d126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12d055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12d126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12d055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12d1267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12d055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12d126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12d055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12d1268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12d055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12d126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12d055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12d126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12d055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12d1269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12d055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12d126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12d055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12d126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12d056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12d126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12d056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12d126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12d056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12d126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12d056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12d126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12d056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12d126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12d0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12d126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12d0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12d126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12d0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12d126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12d056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12d126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12d056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12d126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12d056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12d126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12d056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12d126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12d056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12d127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12d0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12d127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12d0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12d1278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12d0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12d127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12d056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12d1279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12d056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12d127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12d056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12d127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12d056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12d127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12d056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12d127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12d0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12d127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12d0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12d127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12d0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12d127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12d056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12d127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12d056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12d127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12d056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12d127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12d056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12d127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12d056390 '__SVBool_t'
|-TypedefDecl 0x12d127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12d0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12d127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12d0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12d127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12d0563f0 '__SVCount_t'
|-TypedefDecl 0x12d127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12d127fb0 'char *'
|   `-BuiltinType 0x12d0556b0 'char'
|-TypedefDecl 0x12d128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12d127fb0 'char *'
|   `-BuiltinType 0x12d0556b0 'char'
`-FunctionDecl 0x12d1283a8 <dataset_diviso_filec/func8338_nonvuln.c:1:1, line:23:1> line:1:12 invalid set_sec_attr 'int (int *, unsigned int, unsigned int, unsigned int)' static
  |-ParmVarDecl 0x12d128128 <col:25, col:36> col:36 invalid file 'int *'
  |-ParmVarDecl 0x12d1281a8 <col:42, col:55> col:55 used am 'unsigned int'
  |-ParmVarDecl 0x12d128228 <col:59, col:72> col:72 used ac 'unsigned int'
  |-ParmVarDecl 0x12d1282a8 <line:2:2, col:15> col:15 used meth 'unsigned int'
  `-CompoundStmt 0x12d142200 <line:3:1, line:23:1>
    |-DeclStmt 0x12d1284f0 <line:4:2, col:28>
    | `-VarDecl 0x12d128488 <col:2, col:23> col:23 referenced invalid table 'const int *'
    |-IfStmt 0x12d128758 <line:7:2, line:8:10>
    | |-BinaryOperator 0x12d1286a0 <line:7:6, col:33> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x12d128630 <col:6, col:14> 'int' contains-errors '=='
    | | | |-DeclRefExpr 0x12d128508 <col:6> 'unsigned int' lvalue ParmVar 0x12d1282a8 'meth' 'unsigned int'
    | | | `-RecoveryExpr 0x12d128610 <col:14> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x12d128680 <col:27, col:33> 'int' '=='
    | |   |-ImplicitCastExpr 0x12d128650 <col:27> 'unsigned int' <LValueToRValue>
    | |   | `-DeclRefExpr 0x12d128560 <col:27> 'unsigned int' lvalue ParmVar 0x12d128228 'ac' 'unsigned int'
    | |   `-ImplicitCastExpr 0x12d128668 <col:33> 'unsigned int' <IntegralCast>
    | |     `-IntegerLiteral 0x12d128580 <col:33> 'int' 0
    | `-BinaryOperator 0x12d128738 <line:8:3, col:10> 'unsigned int' contains-errors '='
    |   |-DeclRefExpr 0x12d1286c0 <col:3> 'unsigned int' lvalue ParmVar 0x12d1282a8 'meth' 'unsigned int'
    |   `-RecoveryExpr 0x12d128718 <col:10> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12d141d08 <line:10:2, line:17:10> has_else
    | |-BinaryOperator 0x12d141840 <line:10:6, col:20> 'int' contains-errors '=='
    | | |-CXXDependentScopeMemberExpr 0x12d128798 <col:6, col:12> '<dependent type>' contains-errors lvalue ->type
    | | | `-RecoveryExpr 0x12d128778 <col:6> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x12d141820 <col:20> '<dependent type>' contains-errors lvalue
    | |-BinaryOperator 0x12d141900 <line:11:3, col:11> '<dependent type>' contains-errors '='
    | | |-RecoveryExpr 0x12d141880 <col:3> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x12d141860 <col:3> 'const int *' lvalue Var 0x12d128488 'table' 'const int *'
    | | `-RecoveryExpr 0x12d1418e0 <col:11> '<dependent type>' contains-errors lvalue
    | `-IfStmt 0x12d141cd8 <line:12:7, line:17:10> has_else
    |   |-BinaryOperator 0x12d1419e0 <line:12:11, col:25> 'int' contains-errors '=='
    |   | |-CXXDependentScopeMemberExpr 0x12d141940 <col:11, col:17> '<dependent type>' contains-errors lvalue ->type
    |   | | `-RecoveryExpr 0x12d141920 <col:11> '<dependent type>' contains-errors lvalue
    |   | `-RecoveryExpr 0x12d1419c0 <col:25> '<dependent type>' contains-errors lvalue
    |   |-BinaryOperator 0x12d141aa0 <line:13:3, col:11> '<dependent type>' contains-errors '='
    |   | |-RecoveryExpr 0x12d141a20 <col:3> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x12d141a00 <col:3> 'const int *' lvalue Var 0x12d128488 'table' 'const int *'
    |   | `-RecoveryExpr 0x12d141a80 <col:11> '<dependent type>' contains-errors lvalue
    |   `-IfStmt 0x12d141ca8 <line:14:7, line:17:10> has_else
    |     |-BinaryOperator 0x12d141b80 <line:14:11, col:25> 'int' contains-errors '=='
    |     | |-CXXDependentScopeMemberExpr 0x12d141ae0 <col:11, col:17> '<dependent type>' contains-errors lvalue ->type
    |     | | `-RecoveryExpr 0x12d141ac0 <col:11> '<dependent type>' contains-errors lvalue
    |     | `-RecoveryExpr 0x12d141b60 <col:25> '<dependent type>' contains-errors lvalue
    |     |-BinaryOperator 0x12d141c40 <line:15:3, col:11> '<dependent type>' contains-errors '='
    |     | |-RecoveryExpr 0x12d141bc0 <col:3> '<dependent type>' contains-errors lvalue
    |     | | `-DeclRefExpr 0x12d141ba0 <col:3> 'const int *' lvalue Var 0x12d128488 'table' 'const int *'
    |     | `-RecoveryExpr 0x12d141c20 <col:11> '<dependent type>' contains-errors lvalue
    |     `-ReturnStmt 0x12d141c98 <line:17:3, col:10>
    |       `-RecoveryExpr 0x12d141c78 <col:10> '<dependent type>' contains-errors lvalue
    |-ForStmt 0x12d142180 <line:18:2, line:21:2>
    | |-<<<NULL>>>
    | |-<<<NULL>>>
    | |-BinaryOperator 0x12d141dc0 <line:18:9, col:22> 'int' contains-errors '!='
    | | |-CXXDependentScopeMemberExpr 0x12d141d58 <col:9, col:16> '<dependent type>' contains-errors lvalue ->am
    | | | `-RecoveryExpr 0x12d141d38 <col:9> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x12d141da0 <col:22> 'int' 0
    | |-UnaryOperator 0x12d141e00 <col:25, col:30> '<dependent type>' contains-errors postfix '++' cannot overflow
    | | `-RecoveryExpr 0x12d141de0 <col:25> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x12d142168 <col:34, line:21:2>
    |   `-IfStmt 0x12d142148 <line:19:3, line:20:51>
    |     |-BinaryOperator 0x12d141ea0 <line:19:7, col:19> '<dependent type>' contains-errors '&'
    |     | |-CXXDependentScopeMemberExpr 0x12d141e38 <col:7, col:14> '<dependent type>' contains-errors lvalue ->am
    |     | | `-RecoveryExpr 0x12d141e18 <col:7> '<dependent type>' contains-errors lvalue
    |     | `-DeclRefExpr 0x12d141e80 <col:19> 'unsigned int' lvalue ParmVar 0x12d1281a8 'am' 'unsigned int'
    |     `-CallExpr 0x12d142108 <line:20:4, col:51> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x12d142020 <col:4> 'int ()' Function 0x12d141f68 'sc_file_add_acl_entry' 'int ()'
    |       |-RecoveryExpr 0x12d142040 <col:26> '<dependent type>' contains-errors lvalue
    |       |-CXXDependentScopeMemberExpr 0x12d142080 <col:32, col:39> '<dependent type>' contains-errors lvalue ->sc
    |       | `-RecoveryExpr 0x12d142060 <col:32> '<dependent type>' contains-errors lvalue
    |       |-DeclRefExpr 0x12d1420c8 <col:43> 'unsigned int' lvalue ParmVar 0x12d1282a8 'meth' 'unsigned int'
    |       `-DeclRefExpr 0x12d1420e8 <col:49> 'unsigned int' lvalue ParmVar 0x12d128228 'ac' 'unsigned int'
    `-ReturnStmt 0x12d1421f0 <line:22:2, col:9>
      `-RecoveryExpr 0x12d1421d0 <col:9> '<dependent type>' contains-errors lvalue
