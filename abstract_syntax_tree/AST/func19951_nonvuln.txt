TranslationUnitDecl 0x128055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1280564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x128055bd0 '__int128'
|-TypedefDecl 0x128056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x128055bf0 'unsigned __int128'
|-TypedefDecl 0x128126a30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x128126800 'struct __NSConstantString_tag'
|   `-Record 0x128056580 '__NSConstantString_tag'
|-TypedefDecl 0x128126a98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x128055d90 '__SVInt8_t'
|-TypedefDecl 0x128126b00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x128055db0 '__SVInt16_t'
|-TypedefDecl 0x128126b68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x128055dd0 '__SVInt32_t'
|-TypedefDecl 0x128126bd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x128055df0 '__SVInt64_t'
|-TypedefDecl 0x128126c38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x128055e10 '__SVUint8_t'
|-TypedefDecl 0x128126ca0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x128055e30 '__SVUint16_t'
|-TypedefDecl 0x128126d08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x128055e50 '__SVUint32_t'
|-TypedefDecl 0x128126d70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x128055e70 '__SVUint64_t'
|-TypedefDecl 0x128126dd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x128055e90 '__SVFloat16_t'
|-TypedefDecl 0x128126e40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x128055eb0 '__SVFloat32_t'
|-TypedefDecl 0x128126ea8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x128055ed0 '__SVFloat64_t'
|-TypedefDecl 0x128126f10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x128055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x128126f78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x128055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x128126fe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x128055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x128127048 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x128055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1281270b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x128055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x128127118 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x128055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x128127180 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x128055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1281271e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x128055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x128127250 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x128055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1281272b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x128056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x128127320 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x128056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x128127388 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x128056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1281273f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x128056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x128127458 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x128056090 '__clang_svint8x3_t'
|-TypedefDecl 0x1281274c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1280560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x128127528 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1280560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x128127590 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1280560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x1281275f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x128056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x128127660 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x128056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x1281276c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x128056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x128127730 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x128056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x128127798 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x128056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x128128000 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1280561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x128128068 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1280561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1281280d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1280561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x128128138 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x128056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1281281a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x128056230 '__clang_svint16x4_t'
|-TypedefDecl 0x128128208 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x128056250 '__clang_svint32x4_t'
|-TypedefDecl 0x128128270 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x128056270 '__clang_svint64x4_t'
|-TypedefDecl 0x1281282d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x128056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x128128340 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1280562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1281283a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1280562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x128128410 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1280562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x128128478 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x128056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1281284e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x128056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x128128548 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x128056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1281285b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x128056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x128128618 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x128056390 '__SVBool_t'
|-TypedefDecl 0x128128680 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1280563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1281286e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1280563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x128128750 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1280563f0 '__SVCount_t'
|-TypedefDecl 0x1281287f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1281287b0 'char *'
|   `-BuiltinType 0x1280556b0 'char'
|-TypedefDecl 0x128128868 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1281287b0 'char *'
|   `-BuiltinType 0x1280556b0 'char'
|-FunctionDecl 0x128128c68 <dataset_diviso_filec/func19951_nonvuln.c:1:1, line:78:1> line:1:1 invalid relpTcpConnect 'int (int *, int, unsigned char *, unsigned char *, unsigned char *)'
| |-ParmVarDecl 0x128128928 <col:16, col:27> col:27 referenced invalid pThis 'int *'
| |-ParmVarDecl 0x1281289a8 <col:34, col:38> col:38 used family 'int'
| |-ParmVarDecl 0x128128a58 <col:46, col:61> col:61 used port 'unsigned char *'
| |-ParmVarDecl 0x128128ad8 <col:67, col:82> col:82 used host 'unsigned char *'
| |-ParmVarDecl 0x128128b58 <col:88, col:103> col:103 used clientIP 'unsigned char *'
| `-CompoundStmt 0x128145960 <line:2:1, line:78:1>
|   |-DeclStmt 0x128128f60 <line:3:2, col:29>
|   | |-RecordDecl 0x128128d38 <col:2, col:9> col:9 struct addrinfo
|   | `-VarDecl 0x128128ea8 <col:2, col:25> col:19 used res 'struct addrinfo *' cinit
|   |   `-RecoveryExpr 0x128128f28 <col:25> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x128142490 <line:4:2, col:23>
|   | `-VarDecl 0x128142000 <col:2, col:18> col:18 referenced invalid hints 'struct addrinfo'
|   |-DeclStmt 0x1281425a8 <line:5:2, col:34>
|   | `-VarDecl 0x128142508 <col:2, col:30> col:19 used reslocal 'struct addrinfo *' cinit
|   |   `-RecoveryExpr 0x128142588 <col:30> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x128142738 <line:6:2, col:19>
|   | |-RecordDecl 0x1281425c0 <col:2, col:9> col:9 struct pollfd
|   | `-VarDecl 0x1281426b8 <col:2, col:16> col:16 referenced invalid pfd 'struct pollfd'
|   |-CallExpr 0x128142958 <line:9:2, col:27> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x1281428b0 <col:2> 'int ()' Function 0x1281427f8 'RELPOBJ_assert' 'int ()'
|   | |-RecoveryExpr 0x1281428d0 <col:17> '<dependent type>' contains-errors lvalue
|   | `-RecoveryExpr 0x128142938 <col:24> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x128142b48 <line:10:2, col:21> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x128142a68 <col:2> 'int ()' Function 0x1281429b0 'assert' 'int ()'
|   | `-BinaryOperator 0x128142b28 <col:9, col:17> 'int' contains-errors '!='
|   |   |-DeclRefExpr 0x128142a88 <col:9> 'unsigned char *' lvalue ParmVar 0x128128a58 'port' 'unsigned char *'
|   |   `-RecoveryExpr 0x128142b08 <col:17> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x128142c50 <line:11:2, col:21> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x128142b70 <col:2> 'int ()' Function 0x1281429b0 'assert' 'int ()'
|   | `-BinaryOperator 0x128142c30 <col:9, col:17> 'int' contains-errors '!='
|   |   |-DeclRefExpr 0x128142b90 <col:9> 'unsigned char *' lvalue ParmVar 0x128128ad8 'host' 'unsigned char *'
|   |   `-RecoveryExpr 0x128142c10 <col:17> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x128142d58 <line:12:2, col:26> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x128142c78 <col:2> 'int ()' Function 0x1281429b0 'assert' 'int ()'
|   | `-BinaryOperator 0x128142d38 <col:9, col:25> 'int' contains-errors '=='
|   |   |-CXXDependentScopeMemberExpr 0x128142cb8 <col:9, col:16> '<dependent type>' contains-errors lvalue ->sock
|   |   | `-RecoveryExpr 0x128142c98 <col:9> '<dependent type>' contains-errors lvalue
|   |   `-UnaryOperator 0x128142d20 <col:24, col:25> 'int' prefix '-'
|   |     `-IntegerLiteral 0x128142d00 <col:25> 'int' 1
|   |-CallExpr 0x1028082f0 <line:14:2, col:33> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x102808218 <col:2> 'void *(void *, int, unsigned long)' Function 0x128142dc8 'memset' 'void *(void *, int, unsigned long)'
|   | |-UnaryOperator 0x102808258 <col:9, col:10> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | `-RecoveryExpr 0x102808238 <col:10> '<dependent type>' contains-errors lvalue
|   | |-IntegerLiteral 0x102808270 <col:17> 'int' 0
|   | `-UnaryExprOrTypeTraitExpr 0x1028082d0 <col:20, col:32> 'unsigned long' contains-errors sizeof
|   |   `-ParenExpr 0x1028082b0 <col:26, col:32> '<dependent type>' contains-errors lvalue
|   |     `-RecoveryExpr 0x102808290 <col:27> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x1028083d8 <line:15:2, col:20> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x102808370 <col:2, col:8> '<dependent type>' contains-errors lvalue .ai_family
|   | | `-RecoveryExpr 0x102808348 <col:2> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x102808328 <col:2> 'struct addrinfo' lvalue Var 0x128142000 'hints' 'struct addrinfo'
|   | `-DeclRefExpr 0x1028083b8 <col:20> 'int' lvalue ParmVar 0x1281289a8 'family' 'int'
|   |-BinaryOperator 0x1028084e0 <line:16:2, col:22> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x102808440 <col:2, col:8> '<dependent type>' contains-errors lvalue .ai_socktype
|   | | `-RecoveryExpr 0x102808418 <col:2> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x1028083f8 <col:2> 'struct addrinfo' lvalue Var 0x128142000 'hints' 'struct addrinfo'
|   | `-RecoveryExpr 0x1028084c0 <col:22> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x102808bc0 <line:17:2, line:20:2>
|   | |-BinaryOperator 0x102808828 <line:17:5, col:60> 'int' contains-errors '!='
|   | | |-CallExpr 0x1028087c8 <col:5, col:55> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x1028085e0 <col:5> 'int ()' Function 0x102808528 'getaddrinfo' 'int ()'
|   | | | |-CStyleCastExpr 0x102808650 <col:17, col:24> 'char *' <BitCast>
|   | | | | `-ImplicitCastExpr 0x102808638 <col:24> 'unsigned char *' <LValueToRValue> part_of_explicit_cast
|   | | | |   `-DeclRefExpr 0x102808600 <col:24> 'unsigned char *' lvalue ParmVar 0x128128ad8 'host' 'unsigned char *'
|   | | | |-CStyleCastExpr 0x1028086c8 <col:30, col:37> 'char *' <BitCast>
|   | | | | `-ImplicitCastExpr 0x1028086b0 <col:37> 'unsigned char *' <LValueToRValue> part_of_explicit_cast
|   | | | |   `-DeclRefExpr 0x102808678 <col:37> 'unsigned char *' lvalue ParmVar 0x128128a58 'port' 'unsigned char *'
|   | | | |-UnaryOperator 0x102808710 <col:43, col:44> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | | | `-RecoveryExpr 0x1028086f0 <col:44> '<dependent type>' contains-errors lvalue
|   | | | `-UnaryOperator 0x1028087b0 <col:51, col:52> 'struct addrinfo **' contains-errors prefix '&' cannot overflow
|   | | |   `-DeclRefExpr 0x102808728 <col:52> 'struct addrinfo *' contains-errors lvalue Var 0x128128ea8 'res' 'struct addrinfo *'
|   | | `-IntegerLiteral 0x102808808 <col:60> 'int' 0
|   | `-CompoundStmt 0x102808ba0 <col:63, line:20:2>
|   |   |-CallExpr 0x1028089e8 <line:18:3, col:40> '<dependent type>' contains-errors
|   |   | |-CXXDependentScopeMemberExpr 0x1028088d8 <col:3, col:19> '<dependent type>' contains-errors lvalue ->dbgprint
|   |   | | `-CXXDependentScopeMemberExpr 0x102808890 <col:3, col:10> '<dependent type>' contains-errors lvalue ->pEngine
|   |   | |   `-RecoveryExpr 0x102808868 <col:3> '<dependent type>' contains-errors lvalue
|   |   | |     `-DeclRefExpr 0x102808848 <col:3> 'int *' lvalue ParmVar 0x128128928 'pThis' 'int *'
|   |   | |-StringLiteral 0x102808960 <col:28> 'char[4]' lvalue "STR"
|   |   | `-RecoveryExpr 0x1028089c8 <col:35> '<dependent type>' contains-errors lvalue
|   |   `-CallExpr 0x102808b78 <line:19:3, col:33> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x102808af8 <col:3> 'int ()' Function 0x102808a40 'ABORT_FINALIZE' 'int ()'
|   |     `-RecoveryExpr 0x102808b58 <col:18> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x102808f68 <line:22:2, line:24:2>
|   | |-BinaryOperator 0x102808f18 <line:22:5, col:84> 'int' contains-errors '=='
|   | | |-ParenExpr 0x102808ec0 <col:5, col:78> '<dependent type>' contains-errors
|   | | | `-BinaryOperator 0x102808ea0 <col:6, col:77> '<dependent type>' contains-errors '='
|   | | |   |-CXXDependentScopeMemberExpr 0x102808c00 <col:6, col:13> '<dependent type>' contains-errors lvalue ->sock
|   | | |   | `-RecoveryExpr 0x102808be0 <col:6> '<dependent type>' contains-errors lvalue
|   | | |   `-CallExpr 0x102808e68 <col:20, col:77> '<dependent type>' contains-errors
|   | | |     |-DeclRefExpr 0x102808d28 <col:20> 'int ()' Function 0x102808c70 'socket' 'int ()'
|   | | |     |-RecoveryExpr 0x102808d80 <col:27, col:32> '<dependent type>' contains-errors lvalue
|   | | |     | `-DeclRefExpr 0x102808d48 <col:27> 'struct addrinfo *' contains-errors lvalue Var 0x128128ea8 'res' 'struct addrinfo *'
|   | | |     |-RecoveryExpr 0x102808de0 <col:43, col:48> '<dependent type>' contains-errors lvalue
|   | | |     | `-DeclRefExpr 0x102808da8 <col:43> 'struct addrinfo *' contains-errors lvalue Var 0x128128ea8 'res' 'struct addrinfo *'
|   | | |     `-RecoveryExpr 0x102808e40 <col:61, col:66> '<dependent type>' contains-errors lvalue
|   | | |       `-DeclRefExpr 0x102808e08 <col:61> 'struct addrinfo *' contains-errors lvalue Var 0x128128ea8 'res' 'struct addrinfo *'
|   | | `-UnaryOperator 0x102808f00 <col:83, col:84> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x102808ee0 <col:84> 'int' 1
|   | `-CompoundStmt 0x102808f58 <col:87, line:24:2>
|   |-IfStmt 0x1281443c8 <line:26:2, line:34:2>
|   | |-RecoveryExpr 0x102808fa8 <line:26:5, col:17> '_Bool' contains-errors
|   | `-CompoundStmt 0x1281443a8 <col:23, line:34:2>
|   |   |-IfStmt 0x128144098 <line:27:3, line:30:3>
|   |   | |-RecoveryExpr 0x102809128 <line:27:6, col:70> '_Bool' contains-errors
|   |   | `-CompoundStmt 0x128144088 <col:73, line:30:3>
|   |   `-IfStmt 0x128144388 <line:31:3, line:33:3>
|   |     |-BinaryOperator 0x128144338 <line:31:6, col:68> 'int' contains-errors '!='
|   |     | |-CallExpr 0x1281442e0 <col:6, col:63> '<dependent type>' contains-errors
|   |     | | |-DeclRefExpr 0x128144198 <col:6> 'int ()' Function 0x1281440e0 'bind' 'int ()'
|   |     | | |-CXXDependentScopeMemberExpr 0x1281441d8 <col:11, col:18> '<dependent type>' contains-errors lvalue ->sock
|   |     | | | `-RecoveryExpr 0x1281441b8 <col:11> '<dependent type>' contains-errors lvalue
|   |     | | |-RecoveryExpr 0x128144258 <col:24, col:34> '<dependent type>' contains-errors lvalue
|   |     | | | `-DeclRefExpr 0x128144220 <col:24> 'struct addrinfo *' contains-errors lvalue Var 0x128142508 'reslocal' 'struct addrinfo *'
|   |     | | `-RecoveryExpr 0x1281442b8 <col:43, col:53> '<dependent type>' contains-errors lvalue
|   |     | |   `-DeclRefExpr 0x128144280 <col:43> 'struct addrinfo *' contains-errors lvalue Var 0x128142508 'reslocal' 'struct addrinfo *'
|   |     | `-IntegerLiteral 0x128144318 <col:68> 'int' 0
|   |     `-CompoundStmt 0x128144378 <col:71, line:33:3>
|   |-CallExpr 0x128144778 <line:37:2, col:52> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x128144630 <col:2> 'int ()' Function 0x128144578 'connect' 'int ()'
|   | |-CXXDependentScopeMemberExpr 0x128144670 <col:10, col:17> '<dependent type>' contains-errors lvalue ->sock
|   | | `-RecoveryExpr 0x128144650 <col:10> '<dependent type>' contains-errors lvalue
|   | |-RecoveryExpr 0x1281446f0 <col:23, col:28> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x1281446b8 <col:23> 'struct addrinfo *' contains-errors lvalue Var 0x128128ea8 'res' 'struct addrinfo *'
|   | `-RecoveryExpr 0x128144750 <col:37, col:42> '<dependent type>' contains-errors lvalue
|   |   `-DeclRefExpr 0x128144718 <col:37> 'struct addrinfo *' contains-errors lvalue Var 0x128128ea8 'res' 'struct addrinfo *'
|   |-BinaryOperator 0x1281448a8 <line:39:2, col:18> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x1281447f8 <col:2, col:6> '<dependent type>' contains-errors lvalue .fd
|   | | `-RecoveryExpr 0x1281447d0 <col:2> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x1281447b0 <col:2> 'struct pollfd' lvalue Var 0x1281426b8 'pfd' 'struct pollfd'
|   | `-CXXDependentScopeMemberExpr 0x128144860 <col:11, col:18> '<dependent type>' contains-errors lvalue ->sock
|   |   `-RecoveryExpr 0x128144840 <col:11> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x128144d98 <line:42:2, line:45:2>
|   | |-BinaryOperator 0x128144bb0 <line:42:6, col:50> 'int' contains-errors '!='
|   | | |-CallExpr 0x128144b58 <col:6, col:45> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x128144a38 <col:6> 'int ()' Function 0x128144980 'poll' 'int ()'
|   | | | |-UnaryOperator 0x128144a78 <col:11, col:12> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | | | `-RecoveryExpr 0x128144a58 <col:12> '<dependent type>' contains-errors lvalue
|   | | | |-IntegerLiteral 0x128144a90 <col:17> 'int' 1
|   | | | `-BinaryOperator 0x128144b38 <col:20, col:41> '<dependent type>' contains-errors '*'
|   | | |   |-CXXDependentScopeMemberExpr 0x128144ad0 <col:20, col:27> '<dependent type>' contains-errors lvalue ->connTimeout
|   | | |   | `-RecoveryExpr 0x128144ab0 <col:20> '<dependent type>' contains-errors lvalue
|   | | |   `-IntegerLiteral 0x128144b18 <col:41> 'int' 1000
|   | | `-IntegerLiteral 0x128144b90 <col:50> 'int' 1
|   | `-CompoundStmt 0x128144d80 <col:53, line:45:2>
|   |   `-CallExpr 0x128144d30 <line:43:3, col:53> '<dependent type>' contains-errors
|   |     |-CXXDependentScopeMemberExpr 0x128144c60 <col:3, col:19> '<dependent type>' contains-errors lvalue ->dbgprint
|   |     | `-CXXDependentScopeMemberExpr 0x128144c18 <col:3, col:10> '<dependent type>' contains-errors lvalue ->pEngine
|   |     |   `-RecoveryExpr 0x128144bf0 <col:3> '<dependent type>' contains-errors lvalue
|   |     |     `-DeclRefExpr 0x128144bd0 <col:3> 'int *' lvalue ParmVar 0x128128928 'pThis' 'int *'
|   |     |-StringLiteral 0x128144ca8 <col:28> 'char[4]' lvalue "STR"
|   |     `-CXXDependentScopeMemberExpr 0x128144ce8 <col:35, col:42> '<dependent type>' contains-errors lvalue ->connTimeout
|   |       `-RecoveryExpr 0x128144cc8 <col:35> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x128144e38 <line:47:2, col:14>
|   | `-VarDecl 0x128144dd0 <col:2, col:6> col:6 used so_error 'int'
|   |-IfStmt 0x1281451f8 <line:51:2, line:54:2>
|   | |-BinaryOperator 0x128145058 <line:51:6, col:18> 'int' '!='
|   | | |-ImplicitCastExpr 0x128145040 <col:6> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x128145000 <col:6> 'int' lvalue Var 0x128144dd0 'so_error' 'int'
|   | | `-IntegerLiteral 0x128145020 <col:18> 'int' 0
|   | `-CompoundStmt 0x1281451e0 <col:21, line:54:2>
|   |   `-CallExpr 0x128145190 <line:52:3, col:43> '<dependent type>' contains-errors
|   |     |-CXXDependentScopeMemberExpr 0x128145108 <col:3, col:19> '<dependent type>' contains-errors lvalue ->dbgprint
|   |     | `-CXXDependentScopeMemberExpr 0x1281450c0 <col:3, col:10> '<dependent type>' contains-errors lvalue ->pEngine
|   |     |   `-RecoveryExpr 0x128145098 <col:3> '<dependent type>' contains-errors lvalue
|   |     |     `-DeclRefExpr 0x128145078 <col:3> 'int *' lvalue ParmVar 0x128128928 'pThis' 'int *'
|   |     |-StringLiteral 0x128145150 <col:28> 'char[4]' lvalue "STR"
|   |     `-DeclRefExpr 0x128145170 <col:35> 'int' lvalue Var 0x128144dd0 'so_error' 'int'
|   |-LabelStmt 0x128145478 <line:64:1, line:66:19> 'finalize_it'
|   | `-IfStmt 0x128145408 <line:65:2, line:66:19>
|   |   |-RecoveryExpr 0x128145238 <line:65:5, col:12> '_Bool' contains-errors
|   |   `-CallExpr 0x1281453c8 <line:66:3, col:19> 'int' contains-errors
|   |     |-ImplicitCastExpr 0x1281453b0 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x128145338 <col:3> 'int ()' Function 0x128145280 'freeaddrinfo' 'int ()'
|   |     `-ImplicitCastExpr 0x1281453f0 <col:16> 'struct addrinfo *' contains-errors <LValueToRValue>
|   |       `-DeclRefExpr 0x128145358 <col:16> 'struct addrinfo *' contains-errors lvalue Var 0x128128ea8 'res' 'struct addrinfo *'
|   |-IfStmt 0x128145570 <line:67:2, line:68:24>
|   | |-RecoveryExpr 0x1281454b8 <line:67:5, col:17> '_Bool' contains-errors
|   | `-CallExpr 0x128145530 <line:68:3, col:24> 'int' contains-errors
|   |   |-ImplicitCastExpr 0x128145518 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1281454d8 <col:3> 'int ()' Function 0x128145280 'freeaddrinfo' 'int ()'
|   |   `-ImplicitCastExpr 0x128145558 <col:16> 'struct addrinfo *' contains-errors <LValueToRValue>
|   |     `-DeclRefExpr 0x1281454f8 <col:16> 'struct addrinfo *' contains-errors lvalue Var 0x128142508 'reslocal' 'struct addrinfo *'
|   `-IfStmt 0x128145940 <line:70:2, line:75:2>
|     |-RecoveryExpr 0x128145590 <line:70:5, col:13> '_Bool' contains-errors
|     `-CompoundStmt 0x128145928 <col:26, line:75:2>
|       `-IfStmt 0x128145908 <line:71:3, line:74:3>
|         |-BinaryOperator 0x128145650 <line:71:6, col:22> 'int' contains-errors '!='
|         | |-CXXDependentScopeMemberExpr 0x1281455d0 <col:6, col:13> '<dependent type>' contains-errors lvalue ->sock
|         | | `-RecoveryExpr 0x1281455b0 <col:6> '<dependent type>' contains-errors lvalue
|         | `-UnaryOperator 0x128145638 <col:21, col:22> 'int' prefix '-'
|         |   `-IntegerLiteral 0x128145618 <col:22> 'int' 1
|         `-CompoundStmt 0x1281458e8 <col:25, line:74:3>
|           |-CallExpr 0x1281457d8 <line:72:4, col:21> '<dependent type>' contains-errors
|           | |-DeclRefExpr 0x128145750 <col:4> 'int ()' Function 0x128145698 'close' 'int ()'
|           | `-CXXDependentScopeMemberExpr 0x128145790 <col:10, col:17> '<dependent type>' contains-errors lvalue ->sock
|           |   `-RecoveryExpr 0x128145770 <col:10> '<dependent type>' contains-errors lvalue
|           `-BinaryOperator 0x1281458c8 <line:73:4, col:19> '<dependent type>' contains-errors '='
|             |-CXXDependentScopeMemberExpr 0x128145848 <col:4, col:11> '<dependent type>' contains-errors lvalue ->sock
|             | `-RecoveryExpr 0x128145820 <col:4> '<dependent type>' contains-errors lvalue
|             |   `-DeclRefExpr 0x128145800 <col:4> 'int *' lvalue ParmVar 0x128128928 'pThis' 'int *'
|             `-UnaryOperator 0x1281458b0 <col:18, col:19> 'int' prefix '-'
|               `-IntegerLiteral 0x128145890 <col:19> 'int' 1
`-FunctionDecl 0x128142dc8 <line:14:2> col:2 implicit used memset 'void *(void *, int, unsigned long)' extern
  |-ParmVarDecl 0x128142ec8 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x128142f30 <<invalid sloc>> <invalid sloc> 'int'
  |-ParmVarDecl 0x128142f98 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x128142e70 <<invalid sloc>> Implicit 900
