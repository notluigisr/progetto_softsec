TranslationUnitDecl 0x134055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1340564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x134055bd0 '__int128'
|-TypedefDecl 0x134056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x134055bf0 'unsigned __int128'
|-TypedefDecl 0x134126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x134126000 'struct __NSConstantString_tag'
|   `-Record 0x134056580 '__NSConstantString_tag'
|-TypedefDecl 0x134126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x134055d90 '__SVInt8_t'
|-TypedefDecl 0x134126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x134055db0 '__SVInt16_t'
|-TypedefDecl 0x134126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x134055dd0 '__SVInt32_t'
|-TypedefDecl 0x1341263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x134055df0 '__SVInt64_t'
|-TypedefDecl 0x134126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x134055e10 '__SVUint8_t'
|-TypedefDecl 0x1341264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x134055e30 '__SVUint16_t'
|-TypedefDecl 0x134126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x134055e50 '__SVUint32_t'
|-TypedefDecl 0x134126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x134055e70 '__SVUint64_t'
|-TypedefDecl 0x1341265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x134055e90 '__SVFloat16_t'
|-TypedefDecl 0x134126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x134055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1341266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x134055ed0 '__SVFloat64_t'
|-TypedefDecl 0x134126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x134055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x134126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x134055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1341267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x134055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x134126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x134055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1341268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x134055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x134126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x134055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x134126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x134055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1341269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x134055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x134126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x134055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x134126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x134056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x134126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x134056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x134126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x134056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x134126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x134056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x134126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x134056090 '__clang_svint8x3_t'
|-TypedefDecl 0x134126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1340560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x134126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1340560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x134126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1340560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x134126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x134056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x134126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x134056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x134126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x134056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x134126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x134056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x134126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x134056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x134127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1340561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x134127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1340561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1341278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1340561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x134127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x134056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1341279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x134056230 '__clang_svint16x4_t'
|-TypedefDecl 0x134127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x134056250 '__clang_svint32x4_t'
|-TypedefDecl 0x134127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x134056270 '__clang_svint64x4_t'
|-TypedefDecl 0x134127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x134056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x134127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1340562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x134127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1340562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x134127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1340562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x134127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x134056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x134127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x134056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x134127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x134056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x134127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x134056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x134127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x134056390 '__SVBool_t'
|-TypedefDecl 0x134127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1340563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x134127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1340563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x134127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1340563f0 '__SVCount_t'
|-TypedefDecl 0x134127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x134127fb0 'char *'
|   `-BuiltinType 0x1340556b0 'char'
|-TypedefDecl 0x134128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x134127fb0 'char *'
|   `-BuiltinType 0x1340556b0 'char'
|-FunctionDecl 0x134128370 <dataset_diviso_filec/func4210_vuln.c:1:1, line:32:1> line:1:6 invalid imap_quote_string 'void (char *, int, const char *, int)'
| |-ParmVarDecl 0x1341280d8 <col:24, col:30> col:30 used dest 'char *'
| |-ParmVarDecl 0x134128170 <col:36, col:43> col:43 referenced invalid dlen 'int'
| |-ParmVarDecl 0x1341281f0 <col:49, col:61> col:61 used src 'const char *'
| |-ParmVarDecl 0x134128270 <col:66, col:71> col:71 invalid quote_backtick 'int'
| `-CompoundStmt 0x134142750 <line:2:1, line:32:1>
|   |-DeclStmt 0x134128550 <line:3:3, col:28>
|   | `-VarDecl 0x134128450 <col:3, col:23> col:15 used quote 'const char *' cinit
|   |   `-ImplicitCastExpr 0x134128538 <col:23> 'const char *' <NoOp>
|   |     `-ImplicitCastExpr 0x134128520 <col:23> 'char *' <ArrayToPointerDecay>
|   |       `-StringLiteral 0x134128500 <col:23> 'char[4]' lvalue "STR"
|   |-IfStmt 0x1341285f0 <line:4:3, line:5:10>
|   | |-UnaryOperator 0x1341285a0 <line:4:7, col:8> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x134128588 <col:8> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x134128568 <col:8> '<dependent type>' contains-errors lvalue
|   | `-UnaryOperator 0x1341285d8 <line:5:5, col:10> 'const char *' postfix '++'
|   |   `-DeclRefExpr 0x1341285b8 <col:5> 'const char *' lvalue Var 0x134128450 'quote' 'const char *'
|   |-DeclStmt 0x1341286c8 <line:7:3, col:18>
|   | `-VarDecl 0x134128628 <col:3, col:14> col:9 used pt 'char *' cinit
|   |   `-ImplicitCastExpr 0x1341286b0 <col:14> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x134128690 <col:14> 'char *' lvalue ParmVar 0x1341280d8 'dest' 'char *'
|   |-DeclStmt 0x134128798 <line:8:3, col:22>
|   | `-VarDecl 0x1341286f8 <col:3, col:19> col:15 used s 'const char *' cinit
|   |   `-ImplicitCastExpr 0x134128780 <col:19> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x134128760 <col:19> 'const char *' lvalue ParmVar 0x1341281f0 'src' 'const char *'
|   |-BinaryOperator 0x134141830 <line:10:3, col:11> 'char' '='
|   | |-UnaryOperator 0x1341287e8 <col:3, col:6> 'char' lvalue prefix '*' cannot overflow
|   | | `-UnaryOperator 0x1341287d0 <col:4, col:6> 'char *' postfix '++'
|   | |   `-DeclRefExpr 0x1341287b0 <col:4> 'char *' lvalue Var 0x134128628 'pt' 'char *'
|   | `-ImplicitCastExpr 0x134141818 <col:11> 'char' <IntegralCast>
|   |   `-CharacterLiteral 0x134141800 <col:11> 'int' 34
|   |-CompoundAssignOperator 0x1341418b8 <line:12:3, col:11> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   | |-RecoveryExpr 0x134141870 <col:3> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x134141850 <col:3> 'int' lvalue ParmVar 0x134128170 'dlen' 'int'
|   | `-IntegerLiteral 0x134141898 <col:11> 'int' 2
|   |-ForStmt 0x1341425d8 <line:14:3, line:29:3>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x134141958 <line:14:10, col:16> 'int' contains-errors '&&'
|   | | |-UnaryOperator 0x134141920 <col:10, col:11> 'const char' lvalue prefix '*' cannot overflow
|   | | | `-ImplicitCastExpr 0x134141908 <col:11> 'const char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1341418e8 <col:11> 'const char *' lvalue Var 0x1341286f8 's' 'const char *'
|   | | `-RecoveryExpr 0x134141938 <col:16> '<dependent type>' contains-errors lvalue
|   | |-UnaryOperator 0x134141998 <col:22, col:23> 'const char *' postfix '++'
|   | | `-DeclRefExpr 0x134141978 <col:22> 'const char *' lvalue Var 0x1341286f8 's' 'const char *'
|   | `-CompoundStmt 0x1341425c0 <line:15:3, line:29:3>
|   |   `-IfStmt 0x134142590 <line:16:5, line:28:5> has_else
|   |     |-CallExpr 0x1341420f8 <line:16:9, col:25> 'char *'
|   |     | |-ImplicitCastExpr 0x1341420e0 <col:9> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   |     | | `-DeclRefExpr 0x134141ff0 <col:9> 'char *(const char *, int)' Function 0x134141e10 'strchr' 'char *(const char *, int)'
|   |     | |-ImplicitCastExpr 0x134142128 <col:16> 'const char *' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x134142010 <col:16> 'const char *' lvalue Var 0x134128450 'quote' 'const char *'
|   |     | `-ImplicitCastExpr 0x134142158 <col:23, col:24> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x134142140 <col:23, col:24> 'char' <LValueToRValue>
|   |     |     `-UnaryOperator 0x134142068 <col:23, col:24> 'const char' lvalue prefix '*' cannot overflow
|   |     |       `-ImplicitCastExpr 0x134142050 <col:24> 'const char *' <LValueToRValue>
|   |     |         `-DeclRefExpr 0x134142030 <col:24> 'const char *' lvalue Var 0x1341286f8 's' 'const char *'
|   |     |-CompoundStmt 0x134142408 <line:17:5, line:23:5>
|   |     | |-CompoundAssignOperator 0x1341421d8 <line:18:7, col:15> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |     | | |-RecoveryExpr 0x134142190 <col:7> '<dependent type>' contains-errors lvalue
|   |     | | | `-DeclRefExpr 0x134142170 <col:7> 'int' lvalue ParmVar 0x134128170 'dlen' 'int'
|   |     | | `-IntegerLiteral 0x1341421b8 <col:15> 'int' 2
|   |     | |-IfStmt 0x134142270 <line:19:7, line:20:9>
|   |     | | |-BinaryOperator 0x134142248 <line:19:11, col:19> 'int' contains-errors '=='
|   |     | | | |-RecoveryExpr 0x134142208 <col:11> '<dependent type>' contains-errors lvalue
|   |     | | | `-IntegerLiteral 0x134142228 <col:19> 'int' 0
|   |     | | `-BreakStmt 0x134142268 <line:20:9>
|   |     | |-BinaryOperator 0x134142310 <line:21:7, col:15> 'char' '='
|   |     | | |-UnaryOperator 0x1341422c8 <col:7, col:10> 'char' lvalue prefix '*' cannot overflow
|   |     | | | `-UnaryOperator 0x1341422b0 <col:8, col:10> 'char *' postfix '++'
|   |     | | |   `-DeclRefExpr 0x134142290 <col:8> 'char *' lvalue Var 0x134128628 'pt' 'char *'
|   |     | | `-ImplicitCastExpr 0x1341422f8 <col:15> 'char' <IntegralCast>
|   |     | |   `-CharacterLiteral 0x1341422e0 <col:15> 'int' 92
|   |     | `-BinaryOperator 0x1341423e8 <line:22:7, col:16> 'char' '='
|   |     |   |-UnaryOperator 0x134142368 <col:7, col:10> 'char' lvalue prefix '*' cannot overflow
|   |     |   | `-UnaryOperator 0x134142350 <col:8, col:10> 'char *' postfix '++'
|   |     |   |   `-DeclRefExpr 0x134142330 <col:8> 'char *' lvalue Var 0x134128628 'pt' 'char *'
|   |     |   `-ImplicitCastExpr 0x1341423d0 <col:15, col:16> 'char' <LValueToRValue>
|   |     |     `-UnaryOperator 0x1341423b8 <col:15, col:16> 'const char' lvalue prefix '*' cannot overflow
|   |     |       `-ImplicitCastExpr 0x1341423a0 <col:16> 'const char *' <LValueToRValue>
|   |     |         `-DeclRefExpr 0x134142380 <col:16> 'const char *' lvalue Var 0x1341286f8 's' 'const char *'
|   |     `-CompoundStmt 0x134142570 <line:25:5, line:28:5>
|   |       |-BinaryOperator 0x1341424f0 <line:26:7, col:16> 'char' '='
|   |       | |-UnaryOperator 0x134142470 <col:7, col:10> 'char' lvalue prefix '*' cannot overflow
|   |       | | `-UnaryOperator 0x134142458 <col:8, col:10> 'char *' postfix '++'
|   |       | |   `-DeclRefExpr 0x134142438 <col:8> 'char *' lvalue Var 0x134128628 'pt' 'char *'
|   |       | `-ImplicitCastExpr 0x1341424d8 <col:15, col:16> 'char' <LValueToRValue>
|   |       |   `-UnaryOperator 0x1341424c0 <col:15, col:16> 'const char' lvalue prefix '*' cannot overflow
|   |       |     `-ImplicitCastExpr 0x1341424a8 <col:16> 'const char *' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x134142488 <col:16> 'const char *' lvalue Var 0x1341286f8 's' 'const char *'
|   |       `-UnaryOperator 0x134142558 <line:27:7, col:11> '<dependent type>' contains-errors postfix '--' cannot overflow
|   |         `-RecoveryExpr 0x134142530 <col:7> '<dependent type>' contains-errors lvalue
|   |           `-DeclRefExpr 0x134142510 <col:7> 'int' lvalue ParmVar 0x134128170 'dlen' 'int'
|   |-BinaryOperator 0x134142690 <line:30:3, col:11> 'char' '='
|   | |-UnaryOperator 0x134142648 <col:3, col:6> 'char' lvalue prefix '*' cannot overflow
|   | | `-UnaryOperator 0x134142630 <col:4, col:6> 'char *' postfix '++'
|   | |   `-DeclRefExpr 0x134142610 <col:4> 'char *' lvalue Var 0x134128628 'pt' 'char *'
|   | `-ImplicitCastExpr 0x134142678 <col:11> 'char' <IntegralCast>
|   |   `-CharacterLiteral 0x134142660 <col:11> 'int' 34
|   `-BinaryOperator 0x134142730 <line:31:3, col:9> 'char' '='
|     |-UnaryOperator 0x1341426e8 <col:3, col:4> 'char' lvalue prefix '*' cannot overflow
|     | `-ImplicitCastExpr 0x1341426d0 <col:4> 'char *' <LValueToRValue>
|     |   `-DeclRefExpr 0x1341426b0 <col:4> 'char *' lvalue Var 0x134128628 'pt' 'char *'
|     `-ImplicitCastExpr 0x134142718 <col:9> 'char' <IntegralCast>
|       `-CharacterLiteral 0x134142700 <col:9> 'int' 0
`-FunctionDecl 0x134141e10 <line:16:9> col:9 implicit used strchr 'char *(const char *, int)' extern
  |-ParmVarDecl 0x134141f10 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x134141f78 <<invalid sloc>> <invalid sloc> 'int'
  `-BuiltinAttr 0x134141eb8 <<invalid sloc>> Implicit 893
