TranslationUnitDecl 0x152055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1520564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x152055bd0 '__int128'
|-TypedefDecl 0x152056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x152055bf0 'unsigned __int128'
|-TypedefDecl 0x15280be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15280bc00 'struct __NSConstantString_tag'
|   `-Record 0x152056580 '__NSConstantString_tag'
|-TypedefDecl 0x15280be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x152055d90 '__SVInt8_t'
|-TypedefDecl 0x15280bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x152055db0 '__SVInt16_t'
|-TypedefDecl 0x15280bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x152055dd0 '__SVInt32_t'
|-TypedefDecl 0x15280bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x152055df0 '__SVInt64_t'
|-TypedefDecl 0x15280c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x152055e10 '__SVUint8_t'
|-TypedefDecl 0x15280c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x152055e30 '__SVUint16_t'
|-TypedefDecl 0x15280c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x152055e50 '__SVUint32_t'
|-TypedefDecl 0x15280c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x152055e70 '__SVUint64_t'
|-TypedefDecl 0x15280c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x152055e90 '__SVFloat16_t'
|-TypedefDecl 0x15280c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x152055eb0 '__SVFloat32_t'
|-TypedefDecl 0x15280c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x152055ed0 '__SVFloat64_t'
|-TypedefDecl 0x15280c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x152055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15280c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x152055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15280c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x152055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15280c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x152055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15280c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x152055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15280c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x152055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15280c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x152055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15280c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x152055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15280c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x152055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15280c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x152056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15280c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x152056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15280c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x152056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15280c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x152056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15280c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x152056090 '__clang_svint8x3_t'
|-TypedefDecl 0x15280c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1520560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15280c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1520560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15280c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1520560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15280c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x152056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15280ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x152056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15280cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x152056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15280cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x152056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15280cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x152056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15280d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1520561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15280d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1520561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15280d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1520561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15280d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x152056210 '__clang_svint8x4_t'
|-TypedefDecl 0x15280d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x152056230 '__clang_svint16x4_t'
|-TypedefDecl 0x15280d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x152056250 '__clang_svint32x4_t'
|-TypedefDecl 0x15280d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x152056270 '__clang_svint64x4_t'
|-TypedefDecl 0x15280d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x152056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15280d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1520562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15280d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1520562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15280d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1520562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15280d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x152056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15280d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x152056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15280d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x152056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15280d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x152056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15280da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x152056390 '__SVBool_t'
|-TypedefDecl 0x15280da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1520563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15280dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1520563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15280db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1520563f0 '__SVCount_t'
|-TypedefDecl 0x15280dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15280dbb0 'char *'
|   `-BuiltinType 0x1520556b0 'char'
|-TypedefDecl 0x15280dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15280dbb0 'char *'
|   `-BuiltinType 0x1520556b0 'char'
|-FunctionDecl 0x15280e150 <dataset_diviso_filec/func4617_vuln.c:1:1, line:34:1> line:1:13 invalid php_filter_encode_url 'void (int *, const unsigned char *, const int, int, int, int)' static
| |-ParmVarDecl 0x15280dd28 <col:35, col:41> col:41 invalid value 'int *'
| |-ParmVarDecl 0x15280ddd8 <col:48, col:69> col:69 used chars 'const unsigned char *'
| |-ParmVarDecl 0x15280de58 <col:76, col:86> col:86 used char_len 'const int'
| |-ParmVarDecl 0x15280ded8 <col:96, col:100> col:100 high 'int'
| |-ParmVarDecl 0x15280df58 <col:106, col:110> col:110 low 'int'
| |-ParmVarDecl 0x15280dfd8 <col:115, col:119> col:119 encode_nul 'int'
| `-CompoundStmt 0x152123cd8 <line:2:1, line:34:1>
|   |-DeclStmt 0x15280e2e0 <line:3:2, col:18>
|   | `-VarDecl 0x15280e278 <col:2, col:17> col:17 used p 'unsigned char *'
|   |-DeclStmt 0x152827468 <line:4:2, col:24>
|   | `-VarDecl 0x152827400 <col:2, col:23> col:16 used tmp 'unsigned char[256]'
|   |-DeclStmt 0x152827578 <line:5:2, col:43>
|   | `-VarDecl 0x152827498 <col:2, col:38> col:17 used s 'unsigned char *' cinit
|   |   `-CStyleCastExpr 0x152827550 <col:21, col:38> 'unsigned char *' <NoOp>
|   |     `-ImplicitCastExpr 0x152827538 <col:38> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0x152827500 <col:38> 'const unsigned char *' lvalue ParmVar 0x15280ddd8 'chars' 'const unsigned char *'
|   |-DeclStmt 0x1528276a0 <line:6:2, col:33>
|   | `-VarDecl 0x1528275a8 <col:2, col:25> col:17 used e 'unsigned char *' cinit
|   |   `-BinaryOperator 0x152827680 <col:21, col:25> 'unsigned char *' '+'
|   |     |-ImplicitCastExpr 0x152827650 <col:21> 'unsigned char *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x152827610 <col:21> 'unsigned char *' lvalue Var 0x152827498 's' 'unsigned char *'
|   |     `-ImplicitCastExpr 0x152827668 <col:25> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x152827630 <col:25> 'const int' lvalue ParmVar 0x15280de58 'char_len' 'const int'
|   |-CallExpr 0x152827f08 <line:9:2, col:30> 'void *'
|   | |-ImplicitCastExpr 0x152827ef0 <col:2> 'void *(*)(void *, int, unsigned long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x152827d90 <col:2> 'void *(void *, int, unsigned long)' Function 0x152827b40 'memset' 'void *(void *, int, unsigned long)'
|   | |-ImplicitCastExpr 0x152827f58 <col:9> 'void *' <BitCast>
|   | | `-ImplicitCastExpr 0x152827f40 <col:9> 'unsigned char *' <ArrayToPointerDecay>
|   | |   `-DeclRefExpr 0x152827db0 <col:9> 'unsigned char[256]' lvalue Var 0x152827400 'tmp' 'unsigned char[256]'
|   | |-IntegerLiteral 0x152827dd0 <col:14> 'int' 1
|   | `-BinaryOperator 0x152827e88 <col:17, col:29> 'unsigned long' '-'
|   |   |-UnaryExprOrTypeTraitExpr 0x152827e30 <col:17, col:27> 'unsigned long' sizeof
|   |   | `-ParenExpr 0x152827e10 <col:23, col:27> 'unsigned char[256]' lvalue
|   |   |   `-DeclRefExpr 0x152827df0 <col:24> 'unsigned char[256]' lvalue Var 0x152827400 'tmp' 'unsigned char[256]' non_odr_use_unevaluated
|   |   `-ImplicitCastExpr 0x152827e70 <col:29> 'unsigned long' <IntegralCast>
|   |     `-IntegerLiteral 0x152827e50 <col:29> 'int' 1
|   |-WhileStmt 0x152828128 <line:11:2, line:13:2>
|   | |-BinaryOperator 0x152827fe0 <line:11:9, col:13> 'int' '<'
|   | | |-ImplicitCastExpr 0x152827fb0 <col:9> 'unsigned char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x152827f70 <col:9> 'unsigned char *' lvalue Var 0x152827498 's' 'unsigned char *'
|   | | `-ImplicitCastExpr 0x152827fc8 <col:13> 'unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x152827f90 <col:13> 'unsigned char *' lvalue Var 0x1528275a8 'e' 'unsigned char *'
|   | `-CompoundStmt 0x152828110 <col:16, line:13:2>
|   |   `-BinaryOperator 0x1528280f0 <line:12:3, col:15> 'unsigned char' '='
|   |     |-ArraySubscriptExpr 0x1528280a0 <col:3, col:11> 'unsigned char' lvalue
|   |     | |-ImplicitCastExpr 0x152828070 <col:3> 'unsigned char *' <ArrayToPointerDecay>
|   |     | | `-DeclRefExpr 0x152828000 <col:3> 'unsigned char[256]' lvalue Var 0x152827400 'tmp' 'unsigned char[256]'
|   |     | `-ImplicitCastExpr 0x152828088 <col:7, col:9> 'unsigned char' <LValueToRValue>
|   |     |   `-UnaryOperator 0x152828058 <col:7, col:9> 'unsigned char' lvalue prefix '*' cannot overflow
|   |     |     `-UnaryOperator 0x152828040 <col:8, col:9> 'unsigned char *' postfix '++'
|   |     |       `-DeclRefExpr 0x152828020 <col:8> 'unsigned char *' lvalue Var 0x152827498 's' 'unsigned char *'
|   |     `-ImplicitCastExpr 0x1528280d8 <col:15> 'unsigned char' <IntegralCast>
|   |       `-CharacterLiteral 0x1528280c0 <col:15> 'int' 0
|   |-BinaryOperator 0x1521229b8 <line:17:2, col:40> 'unsigned char *' contains-errors '='
|   | |-DeclRefExpr 0x152122810 <col:2> 'unsigned char *' lvalue Var 0x152827498 's' 'unsigned char *'
|   | `-CStyleCastExpr 0x152122990 <col:6, col:40> 'unsigned char *' contains-errors <Dependent>
|   |   `-CallExpr 0x152122950 <col:24, col:40> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x152122910 <col:24> 'int ()' Function 0x152122858 'Z_STRVAL_P' 'int ()'
|   |     `-RecoveryExpr 0x152122930 <col:35> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x152122aa0 <line:18:2, col:26> 'unsigned char *' contains-errors '='
|   | |-DeclRefExpr 0x1521229d8 <col:2> 'unsigned char *' lvalue Var 0x1528275a8 'e' 'unsigned char *'
|   | `-BinaryOperator 0x152122a80 <col:6, col:26> '<dependent type>' contains-errors '+'
|   |   |-DeclRefExpr 0x1521229f8 <col:6> 'unsigned char *' lvalue Var 0x152827498 's' 'unsigned char *'
|   |   `-CallExpr 0x152122a58 <col:10, col:26> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x152122a18 <col:10> 'int ()' Function 0x152828308 'Z_STRLEN_P' 'int ()'
|   |     `-RecoveryExpr 0x152122a38 <col:21> '<dependent type>' contains-errors lvalue
|   |-WhileStmt 0x152123128 <line:20:2, line:29:2>
|   | |-BinaryOperator 0x152122b30 <line:20:9, col:13> 'int' '<'
|   | | |-ImplicitCastExpr 0x152122b00 <col:9> 'unsigned char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x152122ac0 <col:9> 'unsigned char *' lvalue Var 0x152827498 's' 'unsigned char *'
|   | | `-ImplicitCastExpr 0x152122b18 <col:13> 'unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x152122ae0 <col:13> 'unsigned char *' lvalue Var 0x1528275a8 'e' 'unsigned char *'
|   | `-CompoundStmt 0x152123108 <col:16, line:29:2>
|   |   |-IfStmt 0x1521230a0 <line:21:3, line:27:3> has_else
|   |   | |-ImplicitCastExpr 0x152122c10 <line:21:7, col:13> 'unsigned char' <LValueToRValue>
|   |   | | `-ArraySubscriptExpr 0x152122bf0 <col:7, col:13> 'unsigned char' lvalue
|   |   | |   |-ImplicitCastExpr 0x152122bc0 <col:7> 'unsigned char *' <ArrayToPointerDecay>
|   |   | |   | `-DeclRefExpr 0x152122b50 <col:7> 'unsigned char[256]' lvalue Var 0x152827400 'tmp' 'unsigned char[256]'
|   |   | |   `-ImplicitCastExpr 0x152122bd8 <col:11, col:12> 'unsigned char' <LValueToRValue>
|   |   | |     `-UnaryOperator 0x152122ba8 <col:11, col:12> 'unsigned char' lvalue prefix '*' cannot overflow
|   |   | |       `-ImplicitCastExpr 0x152122b90 <col:12> 'unsigned char *' <LValueToRValue>
|   |   | |         `-DeclRefExpr 0x152122b70 <col:12> 'unsigned char *' lvalue Var 0x152827498 's' 'unsigned char *'
|   |   | |-CompoundStmt 0x152122f98 <col:16, line:25:3>
|   |   | | `-BinaryOperator 0x152122ca8 <line:22:4, col:11> 'unsigned char' '='
|   |   | |   |-UnaryOperator 0x152122c60 <col:4, col:6> 'unsigned char' lvalue prefix '*' cannot overflow
|   |   | |   | `-UnaryOperator 0x152122c48 <col:5, col:6> 'unsigned char *' postfix '++'
|   |   | |   |   `-DeclRefExpr 0x152122c28 <col:5> 'unsigned char *' lvalue Var 0x15280e278 'p' 'unsigned char *'
|   |   | |   `-ImplicitCastExpr 0x152122c90 <col:11> 'unsigned char' <IntegralCast>
|   |   | |     `-CharacterLiteral 0x152122c78 <col:11> 'int' 37
|   |   | `-CompoundStmt 0x152123088 <line:25:10, line:27:3>
|   |   |   `-BinaryOperator 0x152123068 <line:26:4, col:12> 'unsigned char' '='
|   |   |     |-UnaryOperator 0x152122fe8 <col:4, col:6> 'unsigned char' lvalue prefix '*' cannot overflow
|   |   |     | `-UnaryOperator 0x152122fd0 <col:5, col:6> 'unsigned char *' postfix '++'
|   |   |     |   `-DeclRefExpr 0x152122fb0 <col:5> 'unsigned char *' lvalue Var 0x15280e278 'p' 'unsigned char *'
|   |   |     `-ImplicitCastExpr 0x152123050 <col:11, col:12> 'unsigned char' <LValueToRValue>
|   |   |       `-UnaryOperator 0x152123038 <col:11, col:12> 'unsigned char' lvalue prefix '*' cannot overflow
|   |   |         `-ImplicitCastExpr 0x152123020 <col:12> 'unsigned char *' <LValueToRValue>
|   |   |           `-DeclRefExpr 0x152123000 <col:12> 'unsigned char *' lvalue Var 0x152827498 's' 'unsigned char *'
|   |   `-UnaryOperator 0x1521230f0 <line:28:3, col:4> 'unsigned char *' postfix '++'
|   |     `-DeclRefExpr 0x1521230d0 <col:3> 'unsigned char *' lvalue Var 0x152827498 's' 'unsigned char *'
|   |-BinaryOperator 0x1521231c8 <line:30:2, col:7> 'unsigned char' '='
|   | |-UnaryOperator 0x152123180 <col:2, col:3> 'unsigned char' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x152123168 <col:3> 'unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x152123148 <col:3> 'unsigned char *' lvalue Var 0x15280e278 'p' 'unsigned char *'
|   | `-ImplicitCastExpr 0x1521231b0 <col:7> 'unsigned char' <IntegralCast>
|   |   `-CharacterLiteral 0x152123198 <col:7> 'int' 0
|   |-CallExpr 0x1521234e0 <line:32:2, col:21> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x1521234a0 <col:2> 'int ()' Function 0x1521233e8 'zval_ptr_dtor' 'int ()'
|   | `-RecoveryExpr 0x1521234c0 <col:16> '<dependent type>' contains-errors lvalue
|   `-CallExpr 0x152123ca8 <line:33:2, col:25> '<dependent type>' contains-errors
|     |-DeclRefExpr 0x152123c00 <col:2> 'int ()' Function 0x152123530 'ZVAL_NEW_STR' 'int ()'
|     |-RecoveryExpr 0x152123c20 <col:15> '<dependent type>' contains-errors lvalue
|     `-RecoveryExpr 0x152123c88 <col:22> '<dependent type>' contains-errors lvalue
`-FunctionDecl 0x152827b40 <line:9:2> col:2 implicit used memset 'void *(void *, int, unsigned long)' extern
  |-ParmVarDecl 0x152827c40 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x152827ca8 <<invalid sloc>> <invalid sloc> 'int'
  |-ParmVarDecl 0x152827d10 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x152827be8 <<invalid sloc>> Implicit 900
