TranslationUnitDecl 0x146855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1468564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x146855bd0 '__int128'
|-TypedefDecl 0x146856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x146855bf0 'unsigned __int128'
|-TypedefDecl 0x14700be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14700bc00 'struct __NSConstantString_tag'
|   `-Record 0x146856580 '__NSConstantString_tag'
|-TypedefDecl 0x14700be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x146855d90 '__SVInt8_t'
|-TypedefDecl 0x14700bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x146855db0 '__SVInt16_t'
|-TypedefDecl 0x14700bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x146855dd0 '__SVInt32_t'
|-TypedefDecl 0x14700bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x146855df0 '__SVInt64_t'
|-TypedefDecl 0x14700c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x146855e10 '__SVUint8_t'
|-TypedefDecl 0x14700c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x146855e30 '__SVUint16_t'
|-TypedefDecl 0x14700c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x146855e50 '__SVUint32_t'
|-TypedefDecl 0x14700c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x146855e70 '__SVUint64_t'
|-TypedefDecl 0x14700c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x146855e90 '__SVFloat16_t'
|-TypedefDecl 0x14700c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x146855eb0 '__SVFloat32_t'
|-TypedefDecl 0x14700c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x146855ed0 '__SVFloat64_t'
|-TypedefDecl 0x14700c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x146855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14700c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x146855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14700c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x146855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14700c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x146855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14700c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x146855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14700c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x146855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14700c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x146855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14700c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x146855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14700c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x146855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14700c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x146856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14700c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x146856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14700c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x146856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14700c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x146856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14700c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x146856090 '__clang_svint8x3_t'
|-TypedefDecl 0x14700c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1468560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14700c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1468560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14700c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1468560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14700c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x146856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14700ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x146856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14700cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x146856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14700cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x146856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14700cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x146856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14700d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1468561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14700d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1468561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14700d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1468561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14700d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x146856210 '__clang_svint8x4_t'
|-TypedefDecl 0x14700d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x146856230 '__clang_svint16x4_t'
|-TypedefDecl 0x14700d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x146856250 '__clang_svint32x4_t'
|-TypedefDecl 0x14700d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x146856270 '__clang_svint64x4_t'
|-TypedefDecl 0x14700d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x146856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14700d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1468562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14700d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1468562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14700d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1468562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14700d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x146856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14700d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x146856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14700d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x146856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14700d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x146856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14700da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x146856390 '__SVBool_t'
|-TypedefDecl 0x14700da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1468563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14700dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1468563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14700db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1468563f0 '__SVCount_t'
|-TypedefDecl 0x14700dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14700dbb0 'char *'
|   `-BuiltinType 0x1468556b0 'char'
|-TypedefDecl 0x14700dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14700dbb0 'char *'
|   `-BuiltinType 0x1468556b0 'char'
|-FunctionDecl 0x14702a948 <dataset_diviso_filec/func20897_vuln.c:1:1, line:31:1> line:1:1 dns_resolver_match 'int (const struct key *, const struct key_match_data *)'
| |-ParmVarDecl 0x14700e248 <col:20, col:38> col:38 used key 'const struct key *'
| |-ParmVarDecl 0x14702a828 <line:2:6, col:35> col:35 used match_data 'const struct key_match_data *'
| `-CompoundStmt 0x14702c698 <line:3:1, line:31:1>
|   |-DeclStmt 0x14702ac08 <line:4:2, col:25>
|   | |-VarDecl 0x14702aa60 <col:2, col:6> col:6 used slen 'int'
|   | |-VarDecl 0x14702aae0 <col:2, col:12> col:12 used dlen 'int'
|   | `-VarDecl 0x14702ab60 <col:2, col:24> col:18 used ret 'int' cinit
|   |   `-IntegerLiteral 0x14702abc8 <col:24> 'int' 0
|   |-DeclStmt 0x14702adf8 <line:5:2, col:65>
|   | |-VarDecl 0x14702ac38 <col:2, col:25> col:14 used src 'const char *' cinit
|   | | `-RecoveryExpr 0x14702acd8 <col:20, col:25> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x14702aca0 <col:20> 'const struct key *' lvalue ParmVar 0x14700e248 'key' 'const struct key *'
|   | `-VarDecl 0x14702ad18 <col:2, col:57> col:39 used dsp 'const char *' cinit
|   |   `-RecoveryExpr 0x14702adb8 <col:45, col:57> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x14702ad80 <col:45> 'const struct key_match_data *' lvalue ParmVar 0x14702a828 'match_data' 'const struct key_match_data *'
|   |-CallExpr 0x14702b048 <line:7:2, col:24> 'int' contains-errors
|   | |-ImplicitCastExpr 0x14702b030 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x14702af40 <col:2> 'int ()' Function 0x14702ae88 'kenter' 'int ()'
|   | |-ImplicitCastExpr 0x14702b080 <col:9> 'char *' <ArrayToPointerDecay>
|   | | `-StringLiteral 0x14702afa0 <col:9> 'char[4]' lvalue "STR"
|   | |-ImplicitCastExpr 0x14702b098 <col:16> 'const char *' contains-errors <LValueToRValue>
|   | | `-DeclRefExpr 0x14702afc0 <col:16> 'const char *' contains-errors lvalue Var 0x14702ac38 'src' 'const char *'
|   | `-ImplicitCastExpr 0x14702b0b0 <col:21> 'const char *' contains-errors <LValueToRValue>
|   |   `-DeclRefExpr 0x14702afe0 <col:21> 'const char *' contains-errors lvalue Var 0x14702ad18 'dsp' 'const char *'
|   |-IfStmt 0x14702b1f0 <line:9:2, line:10:8>
|   | |-BinaryOperator 0x14702b168 <line:9:6, col:15> 'int' contains-errors '||'
|   | | |-UnaryOperator 0x14702b100 <col:6, col:7> 'int' contains-errors prefix '!' cannot overflow
|   | | | `-ImplicitCastExpr 0x14702b0e8 <col:7> 'const char *' contains-errors <LValueToRValue>
|   | | |   `-DeclRefExpr 0x14702b0c8 <col:7> 'const char *' contains-errors lvalue Var 0x14702ac38 'src' 'const char *'
|   | | `-UnaryOperator 0x14702b150 <col:14, col:15> 'int' contains-errors prefix '!' cannot overflow
|   | |   `-ImplicitCastExpr 0x14702b138 <col:15> 'const char *' contains-errors <LValueToRValue>
|   | |     `-DeclRefExpr 0x14702b118 <col:15> 'const char *' contains-errors lvalue Var 0x14702ad18 'dsp' 'const char *'
|   | `-GotoStmt 0x14702b1d8 <line:10:3, col:8> 'no_match' 0x14702b188
|   |-IfStmt 0x14702b610 <line:12:2, line:13:8>
|   | |-BinaryOperator 0x14702b588 <line:12:6, col:30> 'int' contains-errors '=='
|   | | |-CallExpr 0x14702b508 <col:6, col:25> 'int' contains-errors
|   | | | |-ImplicitCastExpr 0x14702b4f0 <col:6> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x14702b430 <col:6> 'int (const char *, const char *)' Function 0x14702b250 'strcasecmp' 'int (const char *, const char *)'
|   | | | |-ImplicitCastExpr 0x14702b538 <col:17> 'const char *' contains-errors <LValueToRValue>
|   | | | | `-DeclRefExpr 0x14702b450 <col:17> 'const char *' contains-errors lvalue Var 0x14702ac38 'src' 'const char *'
|   | | | `-ImplicitCastExpr 0x14702b550 <col:22> 'const char *' contains-errors <LValueToRValue>
|   | | |   `-DeclRefExpr 0x14702b470 <col:22> 'const char *' contains-errors lvalue Var 0x14702ad18 'dsp' 'const char *'
|   | | `-IntegerLiteral 0x14702b568 <col:30> 'int' 0
|   | `-GotoStmt 0x14702b5f8 <line:13:3, col:8> 'matched' 0x14702b5a8
|   |-BinaryOperator 0x14702b900 <line:15:2, col:19> 'int' contains-errors '='
|   | |-DeclRefExpr 0x14702b630 <col:2> 'int' lvalue Var 0x14702aa60 'slen' 'int'
|   | `-ImplicitCastExpr 0x14702b8e8 <col:9, col:19> 'int' contains-errors <IntegralCast>
|   |   `-CallExpr 0x14702b8a8 <col:9, col:19> 'unsigned long' contains-errors
|   |     |-ImplicitCastExpr 0x14702b890 <col:9> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x14702b800 <col:9> 'unsigned long (const char *)' Function 0x14702b688 'strlen' 'unsigned long (const char *)'
|   |     `-ImplicitCastExpr 0x14702b8d0 <col:16> 'const char *' contains-errors <LValueToRValue>
|   |       `-DeclRefExpr 0x14702b820 <col:16> 'const char *' contains-errors lvalue Var 0x14702ac38 'src' 'const char *'
|   |-BinaryOperator 0x14702ba08 <line:16:2, col:19> 'int' contains-errors '='
|   | |-DeclRefExpr 0x14702b920 <col:2> 'int' lvalue Var 0x14702aae0 'dlen' 'int'
|   | `-ImplicitCastExpr 0x14702b9f0 <col:9, col:19> 'int' contains-errors <IntegralCast>
|   |   `-CallExpr 0x14702b9b0 <col:9, col:19> 'unsigned long' contains-errors
|   |     |-ImplicitCastExpr 0x14702b998 <col:9> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x14702b940 <col:9> 'unsigned long (const char *)' Function 0x14702b688 'strlen' 'unsigned long (const char *)'
|   |     `-ImplicitCastExpr 0x14702b9d8 <col:16> 'const char *' contains-errors <LValueToRValue>
|   |       `-DeclRefExpr 0x14702b960 <col:16> 'const char *' contains-errors lvalue Var 0x14702ad18 'dsp' 'const char *'
|   |-IfStmt 0x14702bb50 <line:17:2, line:18:8>
|   | |-BinaryOperator 0x14702bb18 <line:17:6, col:27> 'int' '||'
|   | | |-BinaryOperator 0x14702ba80 <col:6, col:14> 'int' '<='
|   | | | |-ImplicitCastExpr 0x14702ba68 <col:6> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x14702ba28 <col:6> 'int' lvalue Var 0x14702aa60 'slen' 'int'
|   | | | `-IntegerLiteral 0x14702ba48 <col:14> 'int' 0
|   | | `-BinaryOperator 0x14702baf8 <col:19, col:27> 'int' '<='
|   | |   |-ImplicitCastExpr 0x14702bae0 <col:19> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x14702baa0 <col:19> 'int' lvalue Var 0x14702aae0 'dlen' 'int'
|   | |   `-IntegerLiteral 0x14702bac0 <col:27> 'int' 0
|   | `-GotoStmt 0x14702bb38 <line:18:3, col:8> 'no_match' 0x14702b188
|   |-IfStmt 0x14702bce0 <line:19:2, line:20:7>
|   | |-BinaryOperator 0x14702bc88 <line:19:6, col:23> 'int' contains-errors '=='
|   | | |-ImplicitCastExpr 0x14702bc70 <col:6, col:18> 'int' contains-errors <IntegralCast>
|   | | | `-ImplicitCastExpr 0x14702bc58 <col:6, col:18> 'char' contains-errors <LValueToRValue>
|   | | |   `-ArraySubscriptExpr 0x14702bc20 <col:6, col:18> 'const char' contains-errors lvalue
|   | | |     |-ImplicitCastExpr 0x14702bc08 <col:6> 'const char *' contains-errors <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x14702bb70 <col:6> 'const char *' contains-errors lvalue Var 0x14702ac38 'src' 'const char *'
|   | | |     `-BinaryOperator 0x14702bbe8 <col:10, col:17> 'int' '-'
|   | | |       |-ImplicitCastExpr 0x14702bbd0 <col:10> 'int' <LValueToRValue>
|   | | |       | `-DeclRefExpr 0x14702bb90 <col:10> 'int' lvalue Var 0x14702aa60 'slen' 'int'
|   | | |       `-IntegerLiteral 0x14702bbb0 <col:17> 'int' 1
|   | | `-CharacterLiteral 0x14702bc40 <col:23> 'int' 46
|   | `-UnaryOperator 0x14702bcc8 <line:20:3, col:7> 'int' postfix '--'
|   |   `-DeclRefExpr 0x14702bca8 <col:3> 'int' lvalue Var 0x14702aa60 'slen' 'int'
|   |-IfStmt 0x14702be70 <line:21:2, line:22:7>
|   | |-BinaryOperator 0x14702be18 <line:21:6, col:23> 'int' contains-errors '=='
|   | | |-ImplicitCastExpr 0x14702be00 <col:6, col:18> 'int' contains-errors <IntegralCast>
|   | | | `-ImplicitCastExpr 0x14702bde8 <col:6, col:18> 'char' contains-errors <LValueToRValue>
|   | | |   `-ArraySubscriptExpr 0x14702bdb0 <col:6, col:18> 'const char' contains-errors lvalue
|   | | |     |-ImplicitCastExpr 0x14702bd98 <col:6> 'const char *' contains-errors <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x14702bd00 <col:6> 'const char *' contains-errors lvalue Var 0x14702ad18 'dsp' 'const char *'
|   | | |     `-BinaryOperator 0x14702bd78 <col:10, col:17> 'int' '-'
|   | | |       |-ImplicitCastExpr 0x14702bd60 <col:10> 'int' <LValueToRValue>
|   | | |       | `-DeclRefExpr 0x14702bd20 <col:10> 'int' lvalue Var 0x14702aae0 'dlen' 'int'
|   | | |       `-IntegerLiteral 0x14702bd40 <col:17> 'int' 1
|   | | `-CharacterLiteral 0x14702bdd0 <col:23> 'int' 46
|   | `-UnaryOperator 0x14702be58 <line:22:3, col:7> 'int' postfix '--'
|   |   `-DeclRefExpr 0x14702be38 <col:3> 'int' lvalue Var 0x14702aae0 'dlen' 'int'
|   |-IfStmt 0x14702c3d8 <line:23:2, line:24:8>
|   | |-BinaryOperator 0x14702c3a0 <line:23:6, col:53> 'int' contains-errors '||'
|   | | |-BinaryOperator 0x14702bf00 <col:6, col:14> 'int' '!='
|   | | | |-ImplicitCastExpr 0x14702bed0 <col:6> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x14702be90 <col:6> 'int' lvalue Var 0x14702aa60 'slen' 'int'
|   | | | `-ImplicitCastExpr 0x14702bee8 <col:14> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x14702beb0 <col:14> 'int' lvalue Var 0x14702aae0 'dlen' 'int'
|   | | `-BinaryOperator 0x14702c380 <col:22, col:53> 'int' contains-errors '!='
|   | |   |-CallExpr 0x14702c2c8 <col:22, col:48> 'int' contains-errors
|   | |   | |-ImplicitCastExpr 0x14702c2b0 <col:22> 'int (*)(const char *, const char *, unsigned long)' <FunctionToPointerDecay>
|   | |   | | `-DeclRefExpr 0x14702c1b8 <col:22> 'int (const char *, const char *, unsigned long)' Function 0x14702bf68 'strncasecmp' 'int (const char *, const char *, unsigned long)'
|   | |   | |-ImplicitCastExpr 0x14702c300 <col:34> 'const char *' contains-errors <LValueToRValue>
|   | |   | | `-DeclRefExpr 0x14702c1d8 <col:34> 'const char *' contains-errors lvalue Var 0x14702ac38 'src' 'const char *'
|   | |   | |-ImplicitCastExpr 0x14702c318 <col:39> 'const char *' contains-errors <LValueToRValue>
|   | |   | | `-DeclRefExpr 0x14702c1f8 <col:39> 'const char *' contains-errors lvalue Var 0x14702ad18 'dsp' 'const char *'
|   | |   | `-ImplicitCastExpr 0x14702c348 <col:44> 'unsigned long' <IntegralCast>
|   | |   |   `-ImplicitCastExpr 0x14702c330 <col:44> 'int' <LValueToRValue>
|   | |   |     `-DeclRefExpr 0x14702c218 <col:44> 'int' lvalue Var 0x14702aa60 'slen' 'int'
|   | |   `-IntegerLiteral 0x14702c360 <col:53> 'int' 0
|   | `-GotoStmt 0x14702c3c0 <line:24:3, col:8> 'no_match' 0x14702b188
|   |-LabelStmt 0x14702c458 <line:26:1, line:27:8> 'matched'
|   | `-BinaryOperator 0x14702c438 <col:2, col:8> 'int' '='
|   |   |-DeclRefExpr 0x14702c3f8 <col:2> 'int' lvalue Var 0x14702ab60 'ret' 'int'
|   |   `-IntegerLiteral 0x14702c418 <col:8> 'int' 1
|   |-LabelStmt 0x14702c630 <line:28:1, line:29:19> 'no_match'
|   | `-CallExpr 0x14702c5d0 <col:2, col:19> 'int'
|   |   |-ImplicitCastExpr 0x14702c5b8 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x14702c558 <col:2> 'int ()' Function 0x14702c4a0 'kleave' 'int ()'
|   |   |-ImplicitCastExpr 0x14702c600 <col:9> 'char *' <ArrayToPointerDecay>
|   |   | `-StringLiteral 0x14702c578 <col:9> 'char[4]' lvalue "STR"
|   |   `-ImplicitCastExpr 0x14702c618 <col:16> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x14702c598 <col:16> 'int' lvalue Var 0x14702ab60 'ret' 'int'
|   `-ReturnStmt 0x14702c688 <line:30:2, col:9>
|     `-ImplicitCastExpr 0x14702c670 <col:9> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x14702c650 <col:9> 'int' lvalue Var 0x14702ab60 'ret' 'int'
|-FunctionDecl 0x14702b250 <line:12:6> col:6 implicit used strcasecmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x14702b350 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x14702b3b8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x14702b2f8 <<invalid sloc>> Implicit 957
|-FunctionDecl 0x14702b688 <line:15:9> col:9 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x14702b788 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x14702b730 <<invalid sloc>> Implicit 902
`-FunctionDecl 0x14702bf68 <line:23:22> col:22 implicit used strncasecmp 'int (const char *, const char *, unsigned long)' extern
  |-ParmVarDecl 0x14702c068 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x14702c0d0 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x14702c138 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x14702c010 <<invalid sloc>> Implicit 958
