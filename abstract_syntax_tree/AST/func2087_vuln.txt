TranslationUnitDecl 0x139855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1398564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x139855bd0 '__int128'
|-TypedefDecl 0x139856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x139855bf0 'unsigned __int128'
|-TypedefDecl 0x13a00be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13a00bc00 'struct __NSConstantString_tag'
|   `-Record 0x139856580 '__NSConstantString_tag'
|-TypedefDecl 0x13a00be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x139855d90 '__SVInt8_t'
|-TypedefDecl 0x13a00bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x139855db0 '__SVInt16_t'
|-TypedefDecl 0x13a00bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x139855dd0 '__SVInt32_t'
|-TypedefDecl 0x13a00bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x139855df0 '__SVInt64_t'
|-TypedefDecl 0x13a00c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x139855e10 '__SVUint8_t'
|-TypedefDecl 0x13a00c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x139855e30 '__SVUint16_t'
|-TypedefDecl 0x13a00c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x139855e50 '__SVUint32_t'
|-TypedefDecl 0x13a00c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x139855e70 '__SVUint64_t'
|-TypedefDecl 0x13a00c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x139855e90 '__SVFloat16_t'
|-TypedefDecl 0x13a00c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x139855eb0 '__SVFloat32_t'
|-TypedefDecl 0x13a00c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x139855ed0 '__SVFloat64_t'
|-TypedefDecl 0x13a00c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x139855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13a00c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x139855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13a00c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x139855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13a00c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x139855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13a00c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x139855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13a00c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x139855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13a00c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x139855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13a00c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x139855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13a00c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x139855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13a00c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x139856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13a00c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x139856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13a00c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x139856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13a00c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x139856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13a00c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x139856090 '__clang_svint8x3_t'
|-TypedefDecl 0x13a00c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1398560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13a00c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1398560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13a00c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1398560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13a00c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x139856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13a00ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x139856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13a00cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x139856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13a00cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x139856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13a00cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x139856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13a00d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1398561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13a00d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1398561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13a00d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1398561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13a00d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x139856210 '__clang_svint8x4_t'
|-TypedefDecl 0x13a00d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x139856230 '__clang_svint16x4_t'
|-TypedefDecl 0x13a00d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x139856250 '__clang_svint32x4_t'
|-TypedefDecl 0x13a00d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x139856270 '__clang_svint64x4_t'
|-TypedefDecl 0x13a00d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x139856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13a00d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1398562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13a00d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1398562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13a00d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1398562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13a00d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x139856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13a00d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x139856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13a00d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x139856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13a00d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x139856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13a00da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x139856390 '__SVBool_t'
|-TypedefDecl 0x13a00da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1398563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13a00dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1398563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13a00db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1398563f0 '__SVCount_t'
|-TypedefDecl 0x13a00dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13a00dbb0 'char *'
|   `-BuiltinType 0x1398556b0 'char'
|-TypedefDecl 0x13a00dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13a00dbb0 'char *'
|   `-BuiltinType 0x1398556b0 'char'
`-FunctionDecl 0x13a027468 <dataset_diviso_filec/func2087_vuln.c:1:1, line:78:1> line:1:1 referenced invalid NCURSES_SP_NAME 'int (int)'
  |-ParmVarDecl 0x13a00def0 <col:17> col:17 _nc_do_color 'int'
  `-CompoundStmt 0x13a02c1d0 <line:6:1, line:78:1>
    |-DeclStmt 0x13a0275d0 <line:10:5, col:27>
    | `-VarDecl 0x13a027530 <col:5, col:14> col:9 used fg 'int' cinit
    |   `-RecoveryExpr 0x13a0275b0 <col:14> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x13a0276a0 <line:11:5, col:27>
    | `-VarDecl 0x13a027600 <col:5, col:14> col:9 used bg 'int' cinit
    |   `-RecoveryExpr 0x13a027680 <col:14> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x13a027770 <line:12:5, col:20>
    | `-VarDecl 0x13a0276d0 <col:5, col:19> col:9 used old_fg 'int' cinit
    |   `-UnaryOperator 0x13a027758 <col:18, col:19> 'int' prefix '-'
    |     `-IntegerLiteral 0x13a027738 <col:19> 'int' 1
    |-DeclStmt 0x13a027840 <line:13:5, col:20>
    | `-VarDecl 0x13a0277a0 <col:5, col:19> col:9 used old_bg 'int' cinit
    |   `-UnaryOperator 0x13a027828 <col:18, col:19> 'int' prefix '-'
    |     `-IntegerLiteral 0x13a027808 <col:19> 'int' 1
    |-IfStmt 0x13a028318 <line:15:5, line:28:5> has_else
    | |-UnaryOperator 0x13a027ab8 <line:15:9, col:33> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-CallExpr 0x13a027a88 <col:10, col:33> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x13a0279b0 <col:10> 'int ()' Function 0x13a0278f8 'ValidPair' 'int ()'
    | |   |-RecoveryExpr 0x13a027a48 <col:20> '<dependent type>' contains-errors lvalue
    | |   `-RecoveryExpr 0x13a027a68 <col:29> '<dependent type>' contains-errors lvalue
    | |-CompoundStmt 0x13a027ae0 <col:36, line:17:5>
    | | `-ReturnStmt 0x13a027ad0 <line:16:2>
    | `-IfStmt 0x13a0282f8 <line:17:12, line:28:5>
    |   |-BinaryOperator 0x13a027b70 <line:17:16, col:24> 'int' contains-errors '!='
    |   | |-RecoveryExpr 0x13a027b50 <col:16> '<dependent type>' contains-errors lvalue
    |   | `-IntegerLiteral 0x13a027b10 <col:24> 'int' 0
    |   `-CompoundStmt 0x13a0282e0 <col:27, line:28:5>
    |     `-IfStmt 0x13a0282b0 <line:18:2, line:27:2> has_else
    |       |-RecoveryExpr 0x13a027ba8 <line:18:6> '<dependent type>' contains-errors lvalue
    |       |-CompoundStmt 0x13a027e88 <col:22, line:24:2>
    |       | |-CallExpr 0x13a027d78 <line:19:6, col:23> 'int'
    |       | | |-ImplicitCastExpr 0x13a027d60 <col:6> 'int (*)()' <FunctionToPointerDecay>
    |       | | | `-DeclRefExpr 0x13a027ca8 <col:6> 'int ()' Function 0x13a027bf0 'TPUTS_TRACE' 'int ()'
    |       | | `-ImplicitCastExpr 0x13a027da0 <col:18> 'char *' <ArrayToPointerDecay>
    |       | |   `-StringLiteral 0x13a027d10 <col:18> 'char[4]' lvalue "STR"
    |       | `-ReturnStmt 0x13a027e78 <line:23:6>
    |       `-IfStmt 0x13a028290 <line:24:9, line:27:2>
    |         |-BinaryOperator 0x13a027f20 <line:24:13, col:24> 'int' contains-errors '!='
    |         | |-RecoveryExpr 0x13a027f00 <col:13> '<dependent type>' contains-errors lvalue
    |         | `-IntegerLiteral 0x13a027ec0 <col:24> 'int' 0
    |         `-CompoundStmt 0x13a028278 <col:27, line:27:2>
    |           `-IfStmt 0x13a028258 <line:25:6, line:26:3>
    |             |-BinaryOperator 0x13a028228 <line:25:10, col:55> 'int' contains-errors '=='
    |             | |-CallExpr 0x13a0281c8 <col:10, col:50> '<dependent type>' contains-errors
    |             | | |-DeclRefExpr 0x13a028020 <col:10> 'int ()' Function 0x13a027f68 '_nc_pair_content' 'int ()'
    |             | | |-RecoveryExpr 0x13a028188 <col:27> '<dependent type>' contains-errors lvalue
    |             | | |-RecoveryExpr 0x13a0281a8 <col:36> '<dependent type>' contains-errors lvalue
    |             | | |-UnaryOperator 0x13a0280c0 <col:42, col:43> 'int *' contains-errors prefix '&' cannot overflow
    |             | | | `-DeclRefExpr 0x13a028070 <col:43> 'int' contains-errors lvalue Var 0x13a027530 'fg' 'int'
    |             | | `-UnaryOperator 0x13a0280f8 <col:47, col:48> 'int *' contains-errors prefix '&' cannot overflow
    |             | |   `-DeclRefExpr 0x13a0280d8 <col:48> 'int' contains-errors lvalue Var 0x13a027600 'bg' 'int'
    |             | `-RecoveryExpr 0x13a028208 <col:55> '<dependent type>' contains-errors lvalue
    |             `-ReturnStmt 0x13a028248 <line:26:3>
    |-IfStmt 0x13a02ba58 <line:30:5, line:53:5> has_else
    | |-RecoveryExpr 0x13a02b418 <line:30:9, line:32:62> '_Bool' contains-errors
    | |-CompoundStmt 0x13a02b978 <col:67, line:49:5>
    | | `-IfStmt 0x13a02b958 <line:33:2, line:48:2>
    | |   |-BinaryOperator 0x13a02b828 <line:33:6, line:34:55> 'int' contains-errors '||'
    | |   | |-ParenExpr 0x13a02b680 <line:33:6, col:52> 'int' contains-errors
    | |   | | `-BinaryOperator 0x13a02b660 <col:7, col:51> 'int' contains-errors '&&'
    | |   | |   |-CallExpr 0x13a02b570 <col:7, col:24> 'int' contains-errors
    | |   | |   | |-ImplicitCastExpr 0x13a02b558 <col:7> 'int (*)()' <FunctionToPointerDecay>
    | |   | |   | | `-DeclRefExpr 0x13a02b518 <col:7> 'int ()' Function 0x13a02b460 'isDefaultColor' 'int ()'
    | |   | |   | `-ImplicitCastExpr 0x13a02b598 <col:22> 'int' contains-errors <LValueToRValue>
    | |   | |   |   `-DeclRefExpr 0x13a02b538 <col:22> 'int' contains-errors lvalue Var 0x13a027530 'fg' 'int'
    | |   | |   `-UnaryOperator 0x13a02b648 <col:29, col:51> 'int' prefix '!' cannot overflow
    | |   | |     `-CallExpr 0x13a02b608 <col:30, col:51> 'int'
    | |   | |       |-ImplicitCastExpr 0x13a02b5f0 <col:30> 'int (*)()' <FunctionToPointerDecay>
    | |   | |       | `-DeclRefExpr 0x13a02b5b0 <col:30> 'int ()' Function 0x13a02b460 'isDefaultColor' 'int ()'
    | |   | |       `-ImplicitCastExpr 0x13a02b630 <col:45> 'int' <LValueToRValue>
    | |   | |         `-DeclRefExpr 0x13a02b5d0 <col:45> 'int' lvalue Var 0x13a0276d0 'old_fg' 'int'
    | |   | `-ParenExpr 0x13a02b808 <line:34:9, col:55> 'int' contains-errors
    | |   |   `-BinaryOperator 0x13a02b7e8 <col:10, col:54> 'int' contains-errors '&&'
    | |   |     |-CallExpr 0x13a02b6f8 <col:10, col:27> 'int' contains-errors
    | |   |     | |-ImplicitCastExpr 0x13a02b6e0 <col:10> 'int (*)()' <FunctionToPointerDecay>
    | |   |     | | `-DeclRefExpr 0x13a02b6a0 <col:10> 'int ()' Function 0x13a02b460 'isDefaultColor' 'int ()'
    | |   |     | `-ImplicitCastExpr 0x13a02b720 <col:25> 'int' contains-errors <LValueToRValue>
    | |   |     |   `-DeclRefExpr 0x13a02b6c0 <col:25> 'int' contains-errors lvalue Var 0x13a027600 'bg' 'int'
    | |   |     `-UnaryOperator 0x13a02b7d0 <col:32, col:54> 'int' prefix '!' cannot overflow
    | |   |       `-CallExpr 0x13a02b790 <col:33, col:54> 'int'
    | |   |         |-ImplicitCastExpr 0x13a02b778 <col:33> 'int (*)()' <FunctionToPointerDecay>
    | |   |         | `-DeclRefExpr 0x13a02b738 <col:33> 'int ()' Function 0x13a02b460 'isDefaultColor' 'int ()'
    | |   |         `-ImplicitCastExpr 0x13a02b7b8 <col:48> 'int' <LValueToRValue>
    | |   |           `-DeclRefExpr 0x13a02b758 <col:48> 'int' lvalue Var 0x13a0277a0 'old_bg' 'int'
    | |   `-CompoundStmt 0x13a02b948 <col:58, line:48:2>
    | `-CompoundStmt 0x13a02ba40 <line:49:12, line:53:5>
    |   `-IfStmt 0x13a02ba20 <line:51:2, line:52:6>
    |     |-RecoveryExpr 0x13a02b9f0 <line:51:6, col:30> '_Bool' contains-errors
    |     `-ReturnStmt 0x13a02ba10 <line:52:6>
    |-IfStmt 0x13a02bc90 <line:62:5, line:66:5>
    | |-RecoveryExpr 0x13a02ba88 <line:62:9> '_Bool' contains-errors
    | `-CompoundStmt 0x13a02bc68 <col:18, line:66:5>
    |   |-DeclStmt 0x13a02bb60 <line:63:2, col:13>
    |   | `-VarDecl 0x13a02bac0 <col:2, col:11> col:6 used xx 'int' cinit
    |   |   `-ImplicitCastExpr 0x13a02bb48 <col:11> 'int' contains-errors <LValueToRValue>
    |   |     `-DeclRefExpr 0x13a02bb28 <col:11> 'int' contains-errors lvalue Var 0x13a027530 'fg' 'int'
    |   |-BinaryOperator 0x13a02bbd0 <line:64:2, col:7> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x13a02bb78 <col:2> 'int' contains-errors lvalue Var 0x13a027530 'fg' 'int'
    |   | `-ImplicitCastExpr 0x13a02bbb8 <col:7> 'int' contains-errors <LValueToRValue>
    |   |   `-DeclRefExpr 0x13a02bb98 <col:7> 'int' contains-errors lvalue Var 0x13a027600 'bg' 'int'
    |   `-BinaryOperator 0x13a02bc48 <line:65:2, col:7> 'int' contains-errors '='
    |     |-DeclRefExpr 0x13a02bbf0 <col:2> 'int' contains-errors lvalue Var 0x13a027600 'bg' 'int'
    |     `-ImplicitCastExpr 0x13a02bc30 <col:7> 'int' contains-errors <LValueToRValue>
    |       `-DeclRefExpr 0x13a02bc10 <col:7> 'int' contains-errors lvalue Var 0x13a02bac0 'xx' 'int'
    |-IfStmt 0x13a02bfd0 <line:71:5, line:73:5>
    | |-UnaryOperator 0x13a02bea8 <line:71:9, col:27> 'int' contains-errors prefix '!' cannot overflow
    | | `-CallExpr 0x13a02be68 <col:10, col:27> 'int' contains-errors
    | |   |-ImplicitCastExpr 0x13a02be50 <col:10> 'int (*)()' <FunctionToPointerDecay>
    | |   | `-DeclRefExpr 0x13a02be10 <col:10> 'int ()' Function 0x13a02b460 'isDefaultColor' 'int ()'
    | |   `-ImplicitCastExpr 0x13a02be90 <col:25> 'int' contains-errors <LValueToRValue>
    | |     `-DeclRefExpr 0x13a02be30 <col:25> 'int' contains-errors lvalue Var 0x13a027530 'fg' 'int'
    | `-CompoundStmt 0x13a02bfc0 <col:30, line:73:5>
    `-IfStmt 0x13a02c1b0 <line:74:5, line:76:5>
      |-UnaryOperator 0x13a02c088 <line:74:9, col:27> 'int' contains-errors prefix '!' cannot overflow
      | `-CallExpr 0x13a02c048 <col:10, col:27> 'int' contains-errors
      |   |-ImplicitCastExpr 0x13a02c030 <col:10> 'int (*)()' <FunctionToPointerDecay>
      |   | `-DeclRefExpr 0x13a02bff0 <col:10> 'int ()' Function 0x13a02b460 'isDefaultColor' 'int ()'
      |   `-ImplicitCastExpr 0x13a02c070 <col:25> 'int' contains-errors <LValueToRValue>
      |     `-DeclRefExpr 0x13a02c010 <col:25> 'int' contains-errors lvalue Var 0x13a027600 'bg' 'int'
      `-CompoundStmt 0x13a02c1a0 <col:30, line:76:5>
