TranslationUnitDecl 0x134855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1348564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x134855bd0 '__int128'
|-TypedefDecl 0x134856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x134855bf0 'unsigned __int128'
|-TypedefDecl 0x134926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x134926000 'struct __NSConstantString_tag'
|   `-Record 0x134856580 '__NSConstantString_tag'
|-TypedefDecl 0x134926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x134855d90 '__SVInt8_t'
|-TypedefDecl 0x134926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x134855db0 '__SVInt16_t'
|-TypedefDecl 0x134926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x134855dd0 '__SVInt32_t'
|-TypedefDecl 0x1349263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x134855df0 '__SVInt64_t'
|-TypedefDecl 0x134926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x134855e10 '__SVUint8_t'
|-TypedefDecl 0x1349264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x134855e30 '__SVUint16_t'
|-TypedefDecl 0x134926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x134855e50 '__SVUint32_t'
|-TypedefDecl 0x134926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x134855e70 '__SVUint64_t'
|-TypedefDecl 0x1349265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x134855e90 '__SVFloat16_t'
|-TypedefDecl 0x134926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x134855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1349266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x134855ed0 '__SVFloat64_t'
|-TypedefDecl 0x134926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x134855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x134926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x134855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1349267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x134855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x134926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x134855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1349268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x134855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x134926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x134855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x134926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x134855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1349269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x134855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x134926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x134855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x134926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x134856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x134926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x134856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x134926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x134856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x134926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x134856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x134926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x134856090 '__clang_svint8x3_t'
|-TypedefDecl 0x134926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1348560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x134926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1348560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x134926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1348560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x134926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x134856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x134926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x134856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x134926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x134856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x134926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x134856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x134926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x134856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x134927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1348561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x134927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1348561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1349278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1348561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x134927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x134856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1349279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x134856230 '__clang_svint16x4_t'
|-TypedefDecl 0x134927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x134856250 '__clang_svint32x4_t'
|-TypedefDecl 0x134927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x134856270 '__clang_svint64x4_t'
|-TypedefDecl 0x134927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x134856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x134927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1348562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x134927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1348562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x134927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1348562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x134927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x134856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x134927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x134856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x134927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x134856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x134927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x134856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x134927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x134856390 '__SVBool_t'
|-TypedefDecl 0x134927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1348563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x134927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1348563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x134927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1348563f0 '__SVCount_t'
|-TypedefDecl 0x134927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x134927fb0 'char *'
|   `-BuiltinType 0x1348556b0 'char'
|-TypedefDecl 0x134928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x134927fb0 'char *'
|   `-BuiltinType 0x1348556b0 'char'
|-FunctionDecl 0x1349281a8 <dataset_diviso_filec/func20177_nonvuln.c:1:1, line:43:1> line:1:1 dwarf_select_sections_by_names 'int (const char *)'
| |-ParmVarDecl 0x1349280d8 <col:33, col:45> col:45 used names 'const char *'
| `-CompoundStmt 0x134943110 <line:2:1, line:43:1>
|   |-DeclStmt 0x134928320 <line:3:3, col:16>
|   | `-VarDecl 0x1349282b8 <col:3, col:15> col:15 used p 'const char *'
|   |-DeclStmt 0x1349283d8 <line:4:3, col:17>
|   | `-VarDecl 0x134928350 <col:3, col:16> col:7 used result 'int' cinit
|   |   `-IntegerLiteral 0x1349283b8 <col:16> 'int' 0
|   |-BinaryOperator 0x134928448 <line:6:3, col:7> 'const char *' '='
|   | |-DeclRefExpr 0x1349283f0 <col:3> 'const char *' lvalue Var 0x1349282b8 'p' 'const char *'
|   | `-ImplicitCastExpr 0x134928430 <col:7> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x134928410 <col:7> 'const char *' lvalue ParmVar 0x1349280d8 'names' 'const char *'
|   |-WhileStmt 0x134943050 <line:7:3, line:36:5>
|   | |-ImplicitCastExpr 0x1349284b8 <line:7:10, col:11> 'char' <LValueToRValue>
|   | | `-UnaryOperator 0x1349284a0 <col:10, col:11> 'const char' lvalue prefix '*' cannot overflow
|   | |   `-ImplicitCastExpr 0x134928488 <col:11> 'const char *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x134928468 <col:11> 'const char *' lvalue Var 0x1349282b8 'p' 'const char *'
|   | `-CompoundStmt 0x134943020 <line:8:5, line:36:5>
|   |   |-DeclStmt 0x134928568 <line:9:7, col:40>
|   |   | `-VarDecl 0x134928500 <col:7, col:35> col:35 invalid entry 'const int *'
|   |   |-ForStmt 0x1349417d0 <line:11:7, line:24:2>
|   |   | |-<<<NULL>>>
|   |   | |-<<<NULL>>>
|   |   | |-CXXDependentScopeMemberExpr 0x1349285f8 <line:11:40, col:47> '<dependent type>' contains-errors lvalue ->option
|   |   | | `-RecoveryExpr 0x1349285d8 <col:40> '<dependent type>' contains-errors lvalue
|   |   | |-UnaryOperator 0x134928660 <col:55, col:60> '<dependent type>' contains-errors postfix '++' cannot overflow
|   |   | | `-RecoveryExpr 0x134928640 <col:55> '<dependent type>' contains-errors lvalue
|   |   | `-CompoundStmt 0x1349417b0 <line:12:2, line:24:2>
|   |   |   |-BinaryOperator 0x134940fc8 <line:13:4, col:38> 'unsigned long' contains-errors '='
|   |   |   | |-UnaryExprOrTypeTraitExpr 0x134940fa8 <col:4, col:11> 'unsigned long' contains-errors sizeof
|   |   |   | | `-RecoveryExpr 0x134940f88 <col:11> '<dependent type>' contains-errors lvalue
|   |   |   | `-CallExpr 0x134940f40 <col:17, col:38> '<dependent type>' contains-errors
|   |   |   |   |-DeclRefExpr 0x134940ea0 <col:17> 'unsigned long (const char *)' Function 0x134940d30 'strlen' 'unsigned long (const char *)'
|   |   |   |   `-CXXDependentScopeMemberExpr 0x134940ee0 <col:25, col:32> '<dependent type>' contains-errors lvalue ->option
|   |   |   |     `-RecoveryExpr 0x134940ec0 <col:25> '<dependent type>' contains-errors lvalue
|   |   |   `-IfStmt 0x134941790 <line:15:4, line:23:6>
|   |   |     |-RecoveryExpr 0x1349414a8 <line:15:8, line:16:43> '_Bool' contains-errors
|   |   |     `-CompoundStmt 0x134941760 <line:17:6, line:23:6>
|   |   |       |-BinaryOperator 0x1349415c8 <line:18:8, col:35> '<dependent type>' contains-errors '='
|   |   |       | |-UnaryOperator 0x134941548 <col:8, col:17> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |   |       | | `-ImplicitCastExpr 0x134941530 <col:10, col:17> '<dependent type>' contains-errors <LValueToRValue>
|   |   |       | |   `-CXXDependentScopeMemberExpr 0x1349414e8 <col:10, col:17> '<dependent type>' contains-errors lvalue ->variable
|   |   |       | |     `-RecoveryExpr 0x1349414c8 <col:10> '<dependent type>' contains-errors lvalue
|   |   |       | `-CXXDependentScopeMemberExpr 0x134941580 <col:28, col:35> '<dependent type>' contains-errors lvalue ->val
|   |   |       |   `-RecoveryExpr 0x134941560 <col:28> '<dependent type>' contains-errors lvalue
|   |   |       |-CompoundAssignOperator 0x134941670 <line:19:8, col:25> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |   |       | |-DeclRefExpr 0x1349415e8 <col:8> 'int' lvalue Var 0x134928350 'result' 'int'
|   |   |       | `-CXXDependentScopeMemberExpr 0x134941628 <col:18, col:25> '<dependent type>' contains-errors lvalue ->val
|   |   |       |   `-RecoveryExpr 0x134941608 <col:18> '<dependent type>' contains-errors lvalue
|   |   |       |-CompoundAssignOperator 0x134941728 <line:21:8, col:13> 'const char *' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |   |       | |-DeclRefExpr 0x1349416a0 <col:8> 'const char *' lvalue Var 0x1349282b8 'p' 'const char *'
|   |   |       | `-RecoveryExpr 0x134941708 <col:13> '<dependent type>' contains-errors lvalue
|   |   |       `-BreakStmt 0x134941758 <line:22:8>
|   |   |-IfStmt 0x134942ef0 <line:26:7, line:32:2>
|   |   | |-BinaryOperator 0x1349418c8 <line:26:11, col:28> 'int' contains-errors '=='
|   |   | | |-CXXDependentScopeMemberExpr 0x134941828 <col:11, col:18> '<dependent type>' contains-errors lvalue ->option
|   |   | | | `-RecoveryExpr 0x134941808 <col:11> '<dependent type>' contains-errors lvalue
|   |   | | `-RecoveryExpr 0x1349418a8 <col:28> '<dependent type>' contains-errors lvalue
|   |   | `-CompoundStmt 0x134942ec8 <line:27:2, line:32:2>
|   |   |   |-CallExpr 0x134942a40 <line:28:4, col:21> 'int'
|   |   |   | |-ImplicitCastExpr 0x134942a28 <col:4> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x134942800 <col:4> 'int ()' Function 0x134941948 'warn' 'int ()'
|   |   |   | |-CallExpr 0x1349429c8 <col:10, col:17> 'int'
|   |   |   | | |-ImplicitCastExpr 0x1349429b0 <col:10> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | | | `-DeclRefExpr 0x134942900 <col:10> 'int ()' Function 0x134942848 '_' 'int ()'
|   |   |   | | `-ImplicitCastExpr 0x1349429f0 <col:12> 'char *' <ArrayToPointerDecay>
|   |   |   | |   `-StringLiteral 0x134942960 <col:12> 'char[4]' lvalue "STR"
|   |   |   | `-ImplicitCastExpr 0x134942a70 <col:20> 'const char *' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x134942a08 <col:20> 'const char *' lvalue Var 0x1349282b8 'p' 'const char *'
|   |   |   |-BinaryOperator 0x134942de8 <line:29:4, col:22> 'const char *' '='
|   |   |   | |-DeclRefExpr 0x134942a88 <col:4> 'const char *' lvalue Var 0x1349282b8 'p' 'const char *'
|   |   |   | `-ImplicitCastExpr 0x134942dd0 <col:8, col:22> 'const char *' <NoOp>
|   |   |   |   `-CallExpr 0x134942d88 <col:8, col:22> 'char *'
|   |   |   |     |-ImplicitCastExpr 0x134942d70 <col:8> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   |   |   |     | `-DeclRefExpr 0x134942cd0 <col:8> 'char *(const char *, int)' Function 0x134942af0 'strchr' 'char *(const char *, int)'
|   |   |   |     |-ImplicitCastExpr 0x134942db8 <col:16> 'const char *' <LValueToRValue>
|   |   |   |     | `-DeclRefExpr 0x134942cf0 <col:16> 'const char *' lvalue Var 0x1349282b8 'p' 'const char *'
|   |   |   |     `-CharacterLiteral 0x134942d10 <col:19> 'int' 44
|   |   |   `-IfStmt 0x134942ea8 <line:30:4, line:31:6>
|   |   |     |-BinaryOperator 0x134942e80 <line:30:8, col:13> 'int' contains-errors '=='
|   |   |     | |-DeclRefExpr 0x134942e08 <col:8> 'const char *' lvalue Var 0x1349282b8 'p' 'const char *'
|   |   |     | `-RecoveryExpr 0x134942e60 <col:13> '<dependent type>' contains-errors lvalue
|   |   |     `-BreakStmt 0x134942ea0 <line:31:6>
|   |   `-IfStmt 0x134943000 <line:34:7, line:35:3>
|   |     |-BinaryOperator 0x134942fa8 <line:34:11, col:17> 'int' '=='
|   |     | |-ImplicitCastExpr 0x134942f90 <col:11, col:12> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x134942f78 <col:11, col:12> 'char' <LValueToRValue>
|   |     | |   `-UnaryOperator 0x134942f48 <col:11, col:12> 'const char' lvalue prefix '*' cannot overflow
|   |     | |     `-ImplicitCastExpr 0x134942f30 <col:12> 'const char *' <LValueToRValue>
|   |     | |       `-DeclRefExpr 0x134942f10 <col:12> 'const char *' lvalue Var 0x1349282b8 'p' 'const char *'
|   |     | `-CharacterLiteral 0x134942f60 <col:17> 'int' 44
|   |     `-UnaryOperator 0x134942fe8 <line:35:2, col:3> 'const char *' postfix '++'
|   |       `-DeclRefExpr 0x134942fc8 <col:2> 'const char *' lvalue Var 0x1349282b8 'p' 'const char *'
|   `-ReturnStmt 0x134943100 <line:42:3, col:10>
|     `-ImplicitCastExpr 0x1349430e8 <col:10> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1349430c8 <col:10> 'int' lvalue Var 0x134928350 'result' 'int'
|-FunctionDecl 0x134940d30 <line:13:17> col:17 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x134940e30 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x134940dd8 <<invalid sloc>> Implicit 902
|-FunctionDecl 0x134941038 <line:15:8> col:8 implicit used strncmp 'int (const char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0x134941138 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1349411a0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x134941208 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x1349410e0 <<invalid sloc>> Implicit 888
`-FunctionDecl 0x134942af0 <line:29:8> col:8 implicit used strchr 'char *(const char *, int)' extern
  |-ParmVarDecl 0x134942bf0 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x134942c58 <<invalid sloc>> <invalid sloc> 'int'
  `-BuiltinAttr 0x134942b98 <<invalid sloc>> Implicit 893
