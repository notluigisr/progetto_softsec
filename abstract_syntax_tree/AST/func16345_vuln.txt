TranslationUnitDecl 0x14c055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14c0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14c055bd0 '__int128'
|-TypedefDecl 0x14c056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14c055bf0 'unsigned __int128'
|-TypedefDecl 0x14c80be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14c80bc00 'struct __NSConstantString_tag'
|   `-Record 0x14c056580 '__NSConstantString_tag'
|-TypedefDecl 0x14c80be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14c055d90 '__SVInt8_t'
|-TypedefDecl 0x14c80bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14c055db0 '__SVInt16_t'
|-TypedefDecl 0x14c80bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14c055dd0 '__SVInt32_t'
|-TypedefDecl 0x14c80bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14c055df0 '__SVInt64_t'
|-TypedefDecl 0x14c80c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14c055e10 '__SVUint8_t'
|-TypedefDecl 0x14c80c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14c055e30 '__SVUint16_t'
|-TypedefDecl 0x14c80c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14c055e50 '__SVUint32_t'
|-TypedefDecl 0x14c80c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14c055e70 '__SVUint64_t'
|-TypedefDecl 0x14c80c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14c055e90 '__SVFloat16_t'
|-TypedefDecl 0x14c80c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14c055eb0 '__SVFloat32_t'
|-TypedefDecl 0x14c80c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14c055ed0 '__SVFloat64_t'
|-TypedefDecl 0x14c80c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14c055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14c80c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14c055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14c80c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14c055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14c80c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14c055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14c80c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14c055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14c80c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14c055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14c80c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14c055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14c80c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14c055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14c80c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14c055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14c80c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14c056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14c80c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14c056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14c80c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14c056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14c80c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14c056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14c80c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14c056090 '__clang_svint8x3_t'
|-TypedefDecl 0x14c80c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14c0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14c80c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14c0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14c80c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14c0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14c80c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14c056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14c80ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14c056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14c80cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14c056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14c80cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14c056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14c80cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14c056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14c80d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14c0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14c80d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14c0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14c80d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14c0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14c80d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14c056210 '__clang_svint8x4_t'
|-TypedefDecl 0x14c80d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14c056230 '__clang_svint16x4_t'
|-TypedefDecl 0x14c80d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14c056250 '__clang_svint32x4_t'
|-TypedefDecl 0x14c80d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14c056270 '__clang_svint64x4_t'
|-TypedefDecl 0x14c80d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14c056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14c80d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14c0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14c80d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14c0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14c80d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14c0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14c80d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14c056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14c80d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14c056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14c80d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14c056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14c80d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14c056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14c80da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14c056390 '__SVBool_t'
|-TypedefDecl 0x14c80da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14c0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14c80dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14c0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14c80db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14c0563f0 '__SVCount_t'
|-TypedefDecl 0x14c80dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14c80dbb0 'char *'
|   `-BuiltinType 0x14c0556b0 'char'
|-TypedefDecl 0x14c80dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14c80dbb0 'char *'
|   `-BuiltinType 0x14c0556b0 'char'
|-RecordDecl 0x14c80dcd8 <dataset_diviso_filec/func16345_vuln.c:1:15, col:22> col:22 struct MYSOFA_HRTF
|-FunctionDecl 0x14c80df28 <col:1, line:33:1> line:1:35 invalid mysofa_load 'int *(const char *, int *)'
| |-ParmVarDecl 0x14c80dd98 <col:47, col:59> col:59 used filename 'const char *'
| |-ParmVarDecl 0x14c80de48 <col:69, col:74> col:74 used err 'int *'
| `-CompoundStmt 0x14c122610 <col:79, line:33:1>
|   |-DeclStmt 0x14c8275b8 <line:2:2, col:22>
|   | |-RecordDecl 0x14c80dfe0 <col:2, col:9> col:9 struct READER
|   | `-VarDecl 0x14c80e0d8 <col:2, col:16> col:16 referenced invalid reader 'struct READER'
|   |-DeclStmt 0x14c827728 <line:3:2, col:33>
|   | `-VarDecl 0x14c827688 <col:2, col:29> col:22 used hrtf 'struct MYSOFA_HRTF *' cinit
|   |   `-RecoveryExpr 0x14c827708 <col:29> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x14c827870 <line:5:2, line:6:14>
|   | |-BinaryOperator 0x14c8277b8 <line:5:6, col:18> 'int' contains-errors '=='
|   | | |-DeclRefExpr 0x14c827740 <col:6> 'const char *' lvalue ParmVar 0x14c80dd98 'filename' 'const char *'
|   | | `-RecoveryExpr 0x14c827798 <col:18> '<dependent type>' contains-errors lvalue
|   | `-BinaryOperator 0x14c827850 <line:6:3, col:14> 'const char *' contains-errors '='
|   |   |-DeclRefExpr 0x14c8277d8 <col:3> 'const char *' lvalue ParmVar 0x14c80dd98 'filename' 'const char *'
|   |   `-RecoveryExpr 0x14c827830 <col:14> '<dependent type>' contains-errors lvalue
|   |-ImplicitCastExpr 0x14c8278f0 <col:35> 'char *' <ArrayToPointerDecay>
|   | `-StringLiteral 0x14c8278d0 <col:35> 'char[4]' lvalue "STR"
|   |-IfStmt 0x14c8280a0 <line:8:2, line:11:16> has_else
|   | |-CallExpr 0x14c827c08 <line:8:6, col:28> 'int'
|   | | |-ImplicitCastExpr 0x14c827bf0 <col:6> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | | | `-DeclRefExpr 0x14c827b30 <col:6> 'int (const char *, const char *)' Function 0x14c827950 'strcmp' 'int (const char *, const char *)'
|   | | |-ImplicitCastExpr 0x14c827c38 <col:13> 'const char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x14c827b50 <col:13> 'const char *' lvalue ParmVar 0x14c80dd98 'filename' 'const char *'
|   | | `-ImplicitCastExpr 0x14c827c68 <col:23> 'const char *' <NoOp>
|   | |   `-ImplicitCastExpr 0x14c827c50 <col:23> 'char *' <ArrayToPointerDecay>
|   | |     `-StringLiteral 0x14c827b70 <col:23> 'char[4]' lvalue "STR"
|   | |-BinaryOperator 0x14c827f78 <line:9:3, col:37> '<dependent type>' contains-errors '='
|   | | |-CXXDependentScopeMemberExpr 0x14c827cc8 <col:3, col:10> '<dependent type>' contains-errors lvalue .fhd
|   | | | `-RecoveryExpr 0x14c827ca0 <col:3> '<dependent type>' contains-errors lvalue
|   | | |   `-DeclRefExpr 0x14c827c80 <col:3> 'struct READER' lvalue Var 0x14c80e0d8 'reader' 'struct READER'
|   | | `-CallExpr 0x14c827f18 <col:16, col:37> 'int'
|   | |   |-ImplicitCastExpr 0x14c827f00 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x14c827e70 <col:16> 'int ()' Function 0x14c827db8 'fopen' 'int ()'
|   | |   |-ImplicitCastExpr 0x14c827f48 <col:22> 'const char *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x14c827e90 <col:22> 'const char *' lvalue ParmVar 0x14c80dd98 'filename' 'const char *'
|   | |   `-ImplicitCastExpr 0x14c827f60 <col:32> 'char *' <ArrayToPointerDecay>
|   | |     `-StringLiteral 0x14c827eb0 <col:32> 'char[4]' lvalue "STR"
|   | `-BinaryOperator 0x14c828080 <line:11:3, col:16> '<dependent type>' contains-errors '='
|   |   |-CXXDependentScopeMemberExpr 0x14c827fe0 <col:3, col:10> '<dependent type>' contains-errors lvalue .fhd
|   |   | `-RecoveryExpr 0x14c827fb8 <col:3> '<dependent type>' contains-errors lvalue
|   |   |   `-DeclRefExpr 0x14c827f98 <col:3> 'struct READER' lvalue Var 0x14c80e0d8 'reader' 'struct READER'
|   |   `-RecoveryExpr 0x14c828060 <col:16> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x14c829a30 <line:13:2, line:17:2>
|   | |-UnaryOperator 0x14c828150 <line:13:6, col:14> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x14c828138 <col:7, col:14> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-CXXDependentScopeMemberExpr 0x14c8280f0 <col:7, col:14> '<dependent type>' contains-errors lvalue .fhd
|   | |     `-RecoveryExpr 0x14c8280d0 <col:7> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x14c829a08 <col:19, line:17:2>
|   |   |-ImplicitCastExpr 0x14c829880 <line:14:3, col:22> '<dependent type>' contains-errors <LValueToRValue>
|   |   | `-RecoveryExpr 0x14c829848 <col:3, col:22> '<dependent type>' contains-errors lvalue
|   |   |   |-DeclRefExpr 0x14c828368 <col:3> 'double (double)' Function 0x14c8281a8 'log' 'double (double)'
|   |   |   |-StringLiteral 0x14c828388 <col:7> 'char[4]' lvalue "STR"
|   |   |   `-DeclRefExpr 0x14c8283a8 <col:14> 'const char *' lvalue ParmVar 0x14c80dd98 'filename' 'const char *'
|   |   |-BinaryOperator 0x14c8299a0 <line:15:3, col:10> 'int' contains-errors '='
|   |   | |-UnaryOperator 0x14c829968 <col:3, col:4> 'int' lvalue prefix '*' cannot overflow
|   |   | | `-ImplicitCastExpr 0x14c829950 <col:4> 'int *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x14c829898 <col:4> 'int *' lvalue ParmVar 0x14c80de48 'err' 'int *'
|   |   | `-RecoveryExpr 0x14c829980 <col:10> '<dependent type>' contains-errors lvalue
|   |   `-ReturnStmt 0x14c8299f8 <line:16:3, col:10>
|   |     `-RecoveryExpr 0x14c8299d8 <col:10> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x14c829b38 <line:18:2, col:16> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x14c829a98 <col:2, col:9> '<dependent type>' contains-errors lvalue .gcol
|   | | `-RecoveryExpr 0x14c829a70 <col:2> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x14c829a50 <col:2> 'struct READER' lvalue Var 0x14c80e0d8 'reader' 'struct READER'
|   | `-RecoveryExpr 0x14c829b18 <col:16> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x14c829c40 <line:19:2, col:15> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x14c829ba0 <col:2, col:9> '<dependent type>' contains-errors lvalue .all
|   | | `-RecoveryExpr 0x14c829b78 <col:2> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x14c829b58 <col:2> 'struct READER' lvalue Var 0x14c80e0d8 'reader' 'struct READER'
|   | `-RecoveryExpr 0x14c829c20 <col:15> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x14c829e98 <line:21:2, col:51> 'int' contains-errors '='
|   | |-UnaryOperator 0x14c829c98 <col:2, col:3> 'int' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x14c829c80 <col:3> 'int *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x14c829c60 <col:3> 'int *' lvalue ParmVar 0x14c80de48 'err' 'int *'
|   | `-CallExpr 0x14c829e68 <col:9, col:51> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x14c829d90 <col:9> 'int ()' Function 0x14c829cd8 'superblockRead' 'int ()'
|   |   |-UnaryOperator 0x14c829dd0 <col:24, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   | `-RecoveryExpr 0x14c829db0 <col:25> '<dependent type>' contains-errors lvalue
|   |   `-UnaryOperator 0x14c829e50 <col:33, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     `-CXXDependentScopeMemberExpr 0x14c829e08 <col:34, col:41> '<dependent type>' contains-errors lvalue .superblock
|   |       `-RecoveryExpr 0x14c829de8 <col:34> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x14c82a118 <line:23:2, line:25:2>
|   | |-UnaryOperator 0x14c829f20 <line:23:6, col:8> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x14c829f08 <col:7, col:8> 'int' <LValueToRValue>
|   | |   `-UnaryOperator 0x14c829ef0 <col:7, col:8> 'int' lvalue prefix '*' cannot overflow
|   | |     `-ImplicitCastExpr 0x14c829ed8 <col:8> 'int *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x14c829eb8 <col:8> 'int *' lvalue ParmVar 0x14c80de48 'err' 'int *'
|   | `-CompoundStmt 0x14c82a100 <col:13, line:25:2>
|   |   `-BinaryOperator 0x14c82a0e0 <line:24:3, col:30> 'struct MYSOFA_HRTF *' contains-errors '='
|   |     |-DeclRefExpr 0x14c829f38 <col:3> 'struct MYSOFA_HRTF *' contains-errors lvalue Var 0x14c827688 'hrtf' 'struct MYSOFA_HRTF *'
|   |     `-CallExpr 0x14c82a0b0 <col:10, col:30> '<dependent type>' contains-errors
|   |       |-DeclRefExpr 0x14c82a038 <col:10> 'int ()' Function 0x14c829f80 'getHrtf' 'int ()'
|   |       |-UnaryOperator 0x14c82a078 <col:18, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |       | `-RecoveryExpr 0x14c82a058 <col:19> '<dependent type>' contains-errors lvalue
|   |       `-DeclRefExpr 0x14c82a090 <col:27> 'int *' lvalue ParmVar 0x14c80de48 'err' 'int *'
|   |-CallExpr 0x14c82a2f0 <line:27:2, col:44> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x14c82a218 <col:2> 'int ()' Function 0x14c82a160 'superblockFree' 'int ()'
|   | |-UnaryOperator 0x14c82a258 <col:17, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | `-RecoveryExpr 0x14c82a238 <col:18> '<dependent type>' contains-errors lvalue
|   | `-UnaryOperator 0x14c82a2d8 <col:26, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   `-CXXDependentScopeMemberExpr 0x14c82a290 <col:27, col:34> '<dependent type>' contains-errors lvalue .superblock
|   |     `-RecoveryExpr 0x14c82a270 <col:27> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x14c82a488 <line:28:2, col:22> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x14c82a400 <col:2> 'int ()' Function 0x14c82a348 'gcolFree' 'int ()'
|   | `-CXXDependentScopeMemberExpr 0x14c82a440 <col:11, col:18> '<dependent type>' contains-errors lvalue .gcol
|   |   `-RecoveryExpr 0x14c82a420 <col:11> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x14c82a760 <line:29:2, line:30:20>
|   | |-CallExpr 0x14c82a558 <line:29:6, col:28> 'int'
|   | | |-ImplicitCastExpr 0x14c82a540 <col:6> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | | | `-DeclRefExpr 0x14c82a4b0 <col:6> 'int (const char *, const char *)' Function 0x14c827950 'strcmp' 'int (const char *, const char *)'
|   | | |-ImplicitCastExpr 0x14c82a588 <col:13> 'const char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x14c82a4d0 <col:13> 'const char *' lvalue ParmVar 0x14c80dd98 'filename' 'const char *'
|   | | `-ImplicitCastExpr 0x14c82a5b8 <col:23> 'const char *' <NoOp>
|   | |   `-ImplicitCastExpr 0x14c82a5a0 <col:23> 'char *' <ArrayToPointerDecay>
|   | |     `-StringLiteral 0x14c82a4f0 <col:23> 'char[4]' lvalue "STR"
|   | `-CallExpr 0x14c82a738 <line:30:3, col:20> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x14c82a6b0 <col:3> 'int ()' Function 0x14c82a5f8 'fclose' 'int ()'
|   |   `-CXXDependentScopeMemberExpr 0x14c82a6f0 <col:10, col:17> '<dependent type>' contains-errors lvalue .fhd
|   |     `-RecoveryExpr 0x14c82a6d0 <col:10> '<dependent type>' contains-errors lvalue
|   `-ReturnStmt 0x14c122600 <line:32:2, col:9>
|     `-ImplicitCastExpr 0x14c82a7b8 <col:9> 'int *' contains-errors <BitCast>
|       `-ImplicitCastExpr 0x14c82a7a0 <col:9> 'struct MYSOFA_HRTF *' contains-errors <LValueToRValue>
|         `-DeclRefExpr 0x14c82a780 <col:9> 'struct MYSOFA_HRTF *' contains-errors lvalue Var 0x14c827688 'hrtf' 'struct MYSOFA_HRTF *'
|-FunctionDecl 0x14c827950 <line:8:6> col:6 implicit used strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x14c827a50 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x14c827ab8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x14c8279f8 <<invalid sloc>> Implicit 887
`-FunctionDecl 0x14c8281a8 <line:14:3> col:3 implicit used log 'double (double)' extern
  |-ParmVarDecl 0x14c8282a8 <<invalid sloc>> <invalid sloc> 'double'
  |-BuiltinAttr 0x14c828250 <<invalid sloc>> Implicit 1106
  |-ConstAttr 0x14c828318 <col:3> Implicit
  `-NoThrowAttr 0x14c828340 <col:3> Implicit
