TranslationUnitDecl 0x11c855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x11c8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x11c855bd0 '__int128'
|-TypedefDecl 0x11c856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x11c855bf0 'unsigned __int128'
|-TypedefDecl 0x11d00be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x11d00bc00 'struct __NSConstantString_tag'
|   `-Record 0x11c856580 '__NSConstantString_tag'
|-TypedefDecl 0x11d00be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x11c855d90 '__SVInt8_t'
|-TypedefDecl 0x11d00bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x11c855db0 '__SVInt16_t'
|-TypedefDecl 0x11d00bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x11c855dd0 '__SVInt32_t'
|-TypedefDecl 0x11d00bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x11c855df0 '__SVInt64_t'
|-TypedefDecl 0x11d00c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x11c855e10 '__SVUint8_t'
|-TypedefDecl 0x11d00c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x11c855e30 '__SVUint16_t'
|-TypedefDecl 0x11d00c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x11c855e50 '__SVUint32_t'
|-TypedefDecl 0x11d00c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x11c855e70 '__SVUint64_t'
|-TypedefDecl 0x11d00c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x11c855e90 '__SVFloat16_t'
|-TypedefDecl 0x11d00c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x11c855eb0 '__SVFloat32_t'
|-TypedefDecl 0x11d00c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x11c855ed0 '__SVFloat64_t'
|-TypedefDecl 0x11d00c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x11c855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x11d00c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x11c855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x11d00c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x11c855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x11d00c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x11c855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x11d00c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x11c855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x11d00c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x11c855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x11d00c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x11c855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x11d00c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x11c855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x11d00c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x11c855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x11d00c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x11c856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x11d00c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x11c856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x11d00c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x11c856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x11d00c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x11c856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x11d00c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x11c856090 '__clang_svint8x3_t'
|-TypedefDecl 0x11d00c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x11c8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x11d00c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x11c8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x11d00c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x11c8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x11d00c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x11c856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x11d00ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x11c856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x11d00cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x11c856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x11d00cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x11c856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x11d00cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x11c856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x11d00d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x11c8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x11d00d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x11c8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x11d00d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x11c8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x11d00d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x11c856210 '__clang_svint8x4_t'
|-TypedefDecl 0x11d00d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x11c856230 '__clang_svint16x4_t'
|-TypedefDecl 0x11d00d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x11c856250 '__clang_svint32x4_t'
|-TypedefDecl 0x11d00d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x11c856270 '__clang_svint64x4_t'
|-TypedefDecl 0x11d00d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x11c856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x11d00d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x11c8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x11d00d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x11c8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x11d00d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x11c8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x11d00d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x11c856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x11d00d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x11c856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x11d00d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x11c856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x11d00d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x11c856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x11d00da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x11c856390 '__SVBool_t'
|-TypedefDecl 0x11d00da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x11c8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x11d00dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x11c8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x11d00db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x11c8563f0 '__SVCount_t'
|-TypedefDecl 0x11d00dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x11d00dbb0 'char *'
|   `-BuiltinType 0x11c8556b0 'char'
|-TypedefDecl 0x11d00dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x11d00dbb0 'char *'
|   `-BuiltinType 0x11c8556b0 'char'
|-FunctionDecl 0x11d00e188 <dataset_diviso_filec/func14329_vuln.c:1:1, line:63:1> line:1:1 invalid soup_ntlm_parse_challenge 'int (const char *, char **, char **, int *, int *, char **, int *)'
| |-ParmVarDecl 0x11d00dcd8 <col:28, col:40> col:40 used challenge 'const char *'
| |-ParmVarDecl 0x11d00dd88 <line:2:7, col:19> col:19 used nonce 'char **'
| |-ParmVarDecl 0x11d00de08 <line:3:7, col:19> col:19 used default_domain 'char **'
| |-ParmVarDecl 0x11d00ded8 <line:4:7, col:19> col:19 invalid ntlmv2_session 'int *'
| |-ParmVarDecl 0x11d00df58 <line:5:7, col:19> col:19 invalid negotiate_target 'int *'
| |-ParmVarDecl 0x11d00dfd8 <line:6:7, col:15> col:15 used target_info 'char **'
| |-ParmVarDecl 0x11d00e058 <line:7:7, col:15> col:15 invalid target_info_sz 'int *'
| `-CompoundStmt 0x11d028620 <line:8:1, line:63:1>
|   |-DeclStmt 0x11d00e2e8 <line:12:2, col:15>
|   | `-VarDecl 0x11d00e280 <col:2, col:10> col:10 used chall 'char *'
|   |-BinaryOperator 0x11c922fe0 <line:15:2, col:43> 'char *' contains-errors '='
|   | |-DeclRefExpr 0x11d00e300 <col:2> 'char *' lvalue Var 0x11d00e280 'chall' 'char *'
|   | `-CallExpr 0x11c922fb0 <col:10, col:43> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x11c922eb8 <col:10> 'int ()' Function 0x11c922e00 'g_base64_decode' 'int ()'
|   |   |-DeclRefExpr 0x11c922ed8 <col:27> 'const char *' lvalue ParmVar 0x11d00dcd8 'challenge' 'const char *'
|   |   `-UnaryOperator 0x11c922f98 <col:38, col:39> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     `-RecoveryExpr 0x11c922f78 <col:39> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x11c923430 <line:16:2, line:20:2>
|   | |-BinaryOperator 0x11c9231f8 <line:16:6, line:17:43> 'int' contains-errors '||'
|   | | |-BinaryOperator 0x11c923138 <line:16:6, col:13> 'int' contains-errors '<'
|   | | | |-RecoveryExpr 0x11c9230f8 <col:6> '<dependent type>' contains-errors lvalue
|   | | | `-RecoveryExpr 0x11c923118 <col:13> '<dependent type>' contains-errors lvalue
|   | | `-BinaryOperator 0x11c9231d8 <line:17:6, col:43> 'int' contains-errors '<'
|   | |   |-RecoveryExpr 0x11c923158 <col:6> '<dependent type>' contains-errors lvalue
|   | |   `-BinaryOperator 0x11c9231b8 <col:13, col:43> '<dependent type>' contains-errors '+'
|   | |     |-RecoveryExpr 0x11c923178 <col:13> '<dependent type>' contains-errors lvalue
|   | |     `-RecoveryExpr 0x11c923198 <col:43> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x11c923410 <col:72, line:20:2>
|   |   |-CallExpr 0x11c923388 <line:18:3, col:16> 'int'
|   |   | |-ImplicitCastExpr 0x11c923370 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x11c9232f8 <col:3> 'int ()' Function 0x11c923240 'g_free' 'int ()'
|   |   | `-ImplicitCastExpr 0x11c9233b0 <col:11> 'char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x11c923318 <col:11> 'char *' lvalue Var 0x11d00e280 'chall' 'char *'
|   |   `-ReturnStmt 0x11c923400 <line:19:3, col:10>
|   |     `-RecoveryExpr 0x11c9233e0 <col:10> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x11d028078 <line:28:2, line:41:2>
|   | |-ImplicitCastExpr 0x11c923dc0 <line:28:6> 'char **' <LValueToRValue>
|   | | `-DeclRefExpr 0x11c923da0 <col:6> 'char **' lvalue ParmVar 0x11d00de08 'default_domain' 'char **'
|   | `-CompoundStmt 0x11d028060 <col:22, line:41:2>
|   |   `-IfStmt 0x11d027e10 <line:33:3, line:36:3>
|   |     |-RecoveryExpr 0x11d027d40 <line:33:7, col:37> '_Bool' contains-errors
|   |     `-CompoundStmt 0x11d027df8 <col:45, line:36:3>
|   |       `-CallExpr 0x11d027db8 <line:34:4, col:17> 'int'
|   |         |-ImplicitCastExpr 0x11d027da0 <col:4> 'int (*)()' <FunctionToPointerDecay>
|   |         | `-DeclRefExpr 0x11d027d60 <col:4> 'int ()' Function 0x11c923240 'g_free' 'int ()'
|   |         `-ImplicitCastExpr 0x11d027de0 <col:12> 'char *' <LValueToRValue>
|   |           `-DeclRefExpr 0x11d027d80 <col:12> 'char *' lvalue Var 0x11d00e280 'chall' 'char *'
|   |-IfStmt 0x11d028250 <line:43:2, line:46:2>
|   | |-ImplicitCastExpr 0x11d0280b8 <line:43:6> 'char **' <LValueToRValue>
|   | | `-DeclRefExpr 0x11d028098 <col:6> 'char **' lvalue ParmVar 0x11d00dd88 'nonce' 'char **'
|   | `-CompoundStmt 0x11d028240 <col:13, line:46:2>
|   |-IfStmt 0x11d028568 <line:48:2, line:59:2>
|   | |-BinaryOperator 0x11d0282e0 <line:48:6, col:27> 'int' contains-errors '&&'
|   | | |-UnaryOperator 0x11d0282a8 <col:6, col:7> '<dependent type>' contains-errors prefix '*' cannot overflow
|   | | | `-ImplicitCastExpr 0x11d028290 <col:7> '<dependent type>' contains-errors <LValueToRValue>
|   | | |   `-RecoveryExpr 0x11d028270 <col:7> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x11d0282c0 <col:27> 'char **' lvalue ParmVar 0x11d00dfd8 'target_info' 'char **'
|   | `-CompoundStmt 0x11d028550 <col:40, line:59:2>
|   |   `-IfStmt 0x11d028450 <line:53:3, line:56:3>
|   |     |-RecoveryExpr 0x11d028380 <line:53:7, col:37> '_Bool' contains-errors
|   |     `-CompoundStmt 0x11d028438 <col:45, line:56:3>
|   |       `-CallExpr 0x11d0283f8 <line:54:4, col:17> 'int'
|   |         |-ImplicitCastExpr 0x11d0283e0 <col:4> 'int (*)()' <FunctionToPointerDecay>
|   |         | `-DeclRefExpr 0x11d0283a0 <col:4> 'int ()' Function 0x11c923240 'g_free' 'int ()'
|   |         `-ImplicitCastExpr 0x11d028420 <col:12> 'char *' <LValueToRValue>
|   |           `-DeclRefExpr 0x11d0283c0 <col:12> 'char *' lvalue Var 0x11d00e280 'chall' 'char *'
|   `-CallExpr 0x11d0285e0 <line:61:2, col:15> 'int'
|     |-ImplicitCastExpr 0x11d0285c8 <col:2> 'int (*)()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x11d028588 <col:2> 'int ()' Function 0x11c923240 'g_free' 'int ()'
|     `-ImplicitCastExpr 0x11d028608 <col:10> 'char *' <LValueToRValue>
|       `-DeclRefExpr 0x11d0285a8 <col:10> 'char *' lvalue Var 0x11d00e280 'chall' 'char *'
`-FunctionDecl 0x11c9238f0 <line:22:2> col:2 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x11c9239f0 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x11c923a58 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x11c923ac0 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x11c923998 <<invalid sloc>> Implicit 882
