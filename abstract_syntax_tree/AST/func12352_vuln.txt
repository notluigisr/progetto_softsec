TranslationUnitDecl 0x142855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1428564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x142855bd0 '__int128'
|-TypedefDecl 0x142856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x142855bf0 'unsigned __int128'
|-TypedefDecl 0x142926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x142926000 'struct __NSConstantString_tag'
|   `-Record 0x142856580 '__NSConstantString_tag'
|-TypedefDecl 0x142926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x142855d90 '__SVInt8_t'
|-TypedefDecl 0x142926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x142855db0 '__SVInt16_t'
|-TypedefDecl 0x142926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x142855dd0 '__SVInt32_t'
|-TypedefDecl 0x1429263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x142855df0 '__SVInt64_t'
|-TypedefDecl 0x142926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x142855e10 '__SVUint8_t'
|-TypedefDecl 0x1429264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x142855e30 '__SVUint16_t'
|-TypedefDecl 0x142926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x142855e50 '__SVUint32_t'
|-TypedefDecl 0x142926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x142855e70 '__SVUint64_t'
|-TypedefDecl 0x1429265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x142855e90 '__SVFloat16_t'
|-TypedefDecl 0x142926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x142855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1429266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x142855ed0 '__SVFloat64_t'
|-TypedefDecl 0x142926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x142855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x142926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x142855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1429267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x142855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x142926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x142855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1429268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x142855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x142926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x142855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x142926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x142855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1429269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x142855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x142926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x142855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x142926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x142856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x142926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x142856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x142926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x142856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x142926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x142856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x142926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x142856090 '__clang_svint8x3_t'
|-TypedefDecl 0x142926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1428560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x142926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1428560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x142926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1428560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x142926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x142856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x142926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x142856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x142926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x142856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x142926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x142856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x142926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x142856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x142927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1428561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x142927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1428561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1429278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1428561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x142927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x142856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1429279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x142856230 '__clang_svint16x4_t'
|-TypedefDecl 0x142927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x142856250 '__clang_svint32x4_t'
|-TypedefDecl 0x142927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x142856270 '__clang_svint64x4_t'
|-TypedefDecl 0x142927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x142856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x142927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1428562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x142927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1428562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x142927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1428562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x142927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x142856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x142927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x142856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x142927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x142856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x142927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x142856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x142927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x142856390 '__SVBool_t'
|-TypedefDecl 0x142927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1428563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x142927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1428563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x142927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1428563f0 '__SVCount_t'
|-TypedefDecl 0x142927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x142927fb0 'char *'
|   `-BuiltinType 0x1428556b0 'char'
|-TypedefDecl 0x142928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x142927fb0 'char *'
|   `-BuiltinType 0x1428556b0 'char'
`-FunctionDecl 0x142928310 <dataset_diviso_filec/func12352_vuln.c:1:1, line:11:2> line:1:6 invalid bn_mul_comba8 'void (int *, int *, int *)'
  |-ParmVarDecl 0x142928128 <col:20, col:30> col:30 referenced invalid r 'int *'
  |-ParmVarDecl 0x1429281a8 <col:33, col:43> col:43 invalid a 'int *'
  |-ParmVarDecl 0x142928228 <col:46, col:56> col:56 invalid b 'int *'
  `-CompoundStmt 0x142942a68 <line:2:2, line:11:2>
    |-BinaryOperator 0x142928798 <line:3:2, col:41> '<dependent type>' contains-errors '='
    | |-ArraySubscriptExpr 0x142928450 <col:2, col:6> '<dependent type>' contains-errors lvalue
    | | |-ImplicitCastExpr 0x142928438 <col:2> '<dependent type>' contains-errors <LValueToRValue>
    | | | `-RecoveryExpr 0x1429283f0 <col:2> '<dependent type>' contains-errors lvalue
    | | |   `-DeclRefExpr 0x1429283d0 <col:2> 'int *' lvalue ParmVar 0x142928128 'r' 'int *'
    | | `-IntegerLiteral 0x142928418 <col:5> 'int' 8
    | `-CallExpr 0x142928758 <col:8, col:41> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1429285d0 <col:8> 'int ()' Function 0x142928518 'bn_mul_words' 'int ()'
    |   |-UnaryOperator 0x142928688 <col:25, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-ParenExpr 0x142928668 <col:26, col:31> '<dependent type>' contains-errors lvalue
    |   |   `-ArraySubscriptExpr 0x142928648 <col:27, col:30> '<dependent type>' contains-errors lvalue
    |   |     |-ImplicitCastExpr 0x142928630 <col:27> '<dependent type>' contains-errors <LValueToRValue>
    |   |     | `-RecoveryExpr 0x1429285f0 <col:27> '<dependent type>' contains-errors lvalue
    |   |     `-IntegerLiteral 0x142928610 <col:29> 'int' 0
    |   |-RecoveryExpr 0x1429286a0 <col:33> '<dependent type>' contains-errors lvalue
    |   |-IntegerLiteral 0x1429286c0 <col:35> 'int' 8
    |   `-ArraySubscriptExpr 0x142928738 <col:37, col:40> '<dependent type>' contains-errors lvalue
    |     |-ImplicitCastExpr 0x142928720 <col:37> '<dependent type>' contains-errors <LValueToRValue>
    |     | `-RecoveryExpr 0x1429286e0 <col:37> '<dependent type>' contains-errors lvalue
    |     `-IntegerLiteral 0x142928700 <col:39> 'int' 0
    |-BinaryOperator 0x142941b00 <line:4:2, col:41> '<dependent type>' contains-errors '='
    | |-ArraySubscriptExpr 0x142941838 <col:2, col:6> '<dependent type>' contains-errors lvalue
    | | |-ImplicitCastExpr 0x142941820 <col:2> '<dependent type>' contains-errors <LValueToRValue>
    | | | `-RecoveryExpr 0x1429287d8 <col:2> '<dependent type>' contains-errors lvalue
    | | |   `-DeclRefExpr 0x1429287b8 <col:2> 'int *' lvalue ParmVar 0x142928128 'r' 'int *'
    | | `-IntegerLiteral 0x142941800 <col:5> 'int' 9
    | `-CallExpr 0x142941ac0 <col:8, col:41> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x142941938 <col:8> 'int ()' Function 0x142941880 'bn_mul_add_words' 'int ()'
    |   |-UnaryOperator 0x1429419f0 <col:25, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-ParenExpr 0x1429419d0 <col:26, col:31> '<dependent type>' contains-errors lvalue
    |   |   `-ArraySubscriptExpr 0x1429419b0 <col:27, col:30> '<dependent type>' contains-errors lvalue
    |   |     |-ImplicitCastExpr 0x142941998 <col:27> '<dependent type>' contains-errors <LValueToRValue>
    |   |     | `-RecoveryExpr 0x142941958 <col:27> '<dependent type>' contains-errors lvalue
    |   |     `-IntegerLiteral 0x142941978 <col:29> 'int' 1
    |   |-RecoveryExpr 0x142941a08 <col:33> '<dependent type>' contains-errors lvalue
    |   |-IntegerLiteral 0x142941a28 <col:35> 'int' 8
    |   `-ArraySubscriptExpr 0x142941aa0 <col:37, col:40> '<dependent type>' contains-errors lvalue
    |     |-ImplicitCastExpr 0x142941a88 <col:37> '<dependent type>' contains-errors <LValueToRValue>
    |     | `-RecoveryExpr 0x142941a48 <col:37> '<dependent type>' contains-errors lvalue
    |     `-IntegerLiteral 0x142941a68 <col:39> 'int' 1
    |-BinaryOperator 0x142941d88 <line:5:2, col:41> '<dependent type>' contains-errors '='
    | |-ArraySubscriptExpr 0x142941ba0 <col:2, col:6> '<dependent type>' contains-errors lvalue
    | | |-ImplicitCastExpr 0x142941b88 <col:2> '<dependent type>' contains-errors <LValueToRValue>
    | | | `-RecoveryExpr 0x142941b40 <col:2> '<dependent type>' contains-errors lvalue
    | | |   `-DeclRefExpr 0x142941b20 <col:2> 'int *' lvalue ParmVar 0x142928128 'r' 'int *'
    | | `-IntegerLiteral 0x142941b68 <col:4> 'int' 10
    | `-CallExpr 0x142941d48 <col:8, col:41> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x142941bc0 <col:8> 'int ()' Function 0x142941880 'bn_mul_add_words' 'int ()'
    |   |-UnaryOperator 0x142941c78 <col:25, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-ParenExpr 0x142941c58 <col:26, col:31> '<dependent type>' contains-errors lvalue
    |   |   `-ArraySubscriptExpr 0x142941c38 <col:27, col:30> '<dependent type>' contains-errors lvalue
    |   |     |-ImplicitCastExpr 0x142941c20 <col:27> '<dependent type>' contains-errors <LValueToRValue>
    |   |     | `-RecoveryExpr 0x142941be0 <col:27> '<dependent type>' contains-errors lvalue
    |   |     `-IntegerLiteral 0x142941c00 <col:29> 'int' 2
    |   |-RecoveryExpr 0x142941c90 <col:33> '<dependent type>' contains-errors lvalue
    |   |-IntegerLiteral 0x142941cb0 <col:35> 'int' 8
    |   `-ArraySubscriptExpr 0x142941d28 <col:37, col:40> '<dependent type>' contains-errors lvalue
    |     |-ImplicitCastExpr 0x142941d10 <col:37> '<dependent type>' contains-errors <LValueToRValue>
    |     | `-RecoveryExpr 0x142941cd0 <col:37> '<dependent type>' contains-errors lvalue
    |     `-IntegerLiteral 0x142941cf0 <col:39> 'int' 2
    |-BinaryOperator 0x142942010 <line:6:2, col:41> '<dependent type>' contains-errors '='
    | |-ArraySubscriptExpr 0x142941e28 <col:2, col:6> '<dependent type>' contains-errors lvalue
    | | |-ImplicitCastExpr 0x142941e10 <col:2> '<dependent type>' contains-errors <LValueToRValue>
    | | | `-RecoveryExpr 0x142941dc8 <col:2> '<dependent type>' contains-errors lvalue
    | | |   `-DeclRefExpr 0x142941da8 <col:2> 'int *' lvalue ParmVar 0x142928128 'r' 'int *'
    | | `-IntegerLiteral 0x142941df0 <col:4> 'int' 11
    | `-CallExpr 0x142941fd0 <col:8, col:41> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x142941e48 <col:8> 'int ()' Function 0x142941880 'bn_mul_add_words' 'int ()'
    |   |-UnaryOperator 0x142941f00 <col:25, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-ParenExpr 0x142941ee0 <col:26, col:31> '<dependent type>' contains-errors lvalue
    |   |   `-ArraySubscriptExpr 0x142941ec0 <col:27, col:30> '<dependent type>' contains-errors lvalue
    |   |     |-ImplicitCastExpr 0x142941ea8 <col:27> '<dependent type>' contains-errors <LValueToRValue>
    |   |     | `-RecoveryExpr 0x142941e68 <col:27> '<dependent type>' contains-errors lvalue
    |   |     `-IntegerLiteral 0x142941e88 <col:29> 'int' 3
    |   |-RecoveryExpr 0x142941f18 <col:33> '<dependent type>' contains-errors lvalue
    |   |-IntegerLiteral 0x142941f38 <col:35> 'int' 8
    |   `-ArraySubscriptExpr 0x142941fb0 <col:37, col:40> '<dependent type>' contains-errors lvalue
    |     |-ImplicitCastExpr 0x142941f98 <col:37> '<dependent type>' contains-errors <LValueToRValue>
    |     | `-RecoveryExpr 0x142941f58 <col:37> '<dependent type>' contains-errors lvalue
    |     `-IntegerLiteral 0x142941f78 <col:39> 'int' 3
    |-BinaryOperator 0x142942298 <line:7:2, col:41> '<dependent type>' contains-errors '='
    | |-ArraySubscriptExpr 0x1429420b0 <col:2, col:6> '<dependent type>' contains-errors lvalue
    | | |-ImplicitCastExpr 0x142942098 <col:2> '<dependent type>' contains-errors <LValueToRValue>
    | | | `-RecoveryExpr 0x142942050 <col:2> '<dependent type>' contains-errors lvalue
    | | |   `-DeclRefExpr 0x142942030 <col:2> 'int *' lvalue ParmVar 0x142928128 'r' 'int *'
    | | `-IntegerLiteral 0x142942078 <col:4> 'int' 12
    | `-CallExpr 0x142942258 <col:8, col:41> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1429420d0 <col:8> 'int ()' Function 0x142941880 'bn_mul_add_words' 'int ()'
    |   |-UnaryOperator 0x142942188 <col:25, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-ParenExpr 0x142942168 <col:26, col:31> '<dependent type>' contains-errors lvalue
    |   |   `-ArraySubscriptExpr 0x142942148 <col:27, col:30> '<dependent type>' contains-errors lvalue
    |   |     |-ImplicitCastExpr 0x142942130 <col:27> '<dependent type>' contains-errors <LValueToRValue>
    |   |     | `-RecoveryExpr 0x1429420f0 <col:27> '<dependent type>' contains-errors lvalue
    |   |     `-IntegerLiteral 0x142942110 <col:29> 'int' 4
    |   |-RecoveryExpr 0x1429421a0 <col:33> '<dependent type>' contains-errors lvalue
    |   |-IntegerLiteral 0x1429421c0 <col:35> 'int' 8
    |   `-ArraySubscriptExpr 0x142942238 <col:37, col:40> '<dependent type>' contains-errors lvalue
    |     |-ImplicitCastExpr 0x142942220 <col:37> '<dependent type>' contains-errors <LValueToRValue>
    |     | `-RecoveryExpr 0x1429421e0 <col:37> '<dependent type>' contains-errors lvalue
    |     `-IntegerLiteral 0x142942200 <col:39> 'int' 4
    |-BinaryOperator 0x142942520 <line:8:2, col:41> '<dependent type>' contains-errors '='
    | |-ArraySubscriptExpr 0x142942338 <col:2, col:6> '<dependent type>' contains-errors lvalue
    | | |-ImplicitCastExpr 0x142942320 <col:2> '<dependent type>' contains-errors <LValueToRValue>
    | | | `-RecoveryExpr 0x1429422d8 <col:2> '<dependent type>' contains-errors lvalue
    | | |   `-DeclRefExpr 0x1429422b8 <col:2> 'int *' lvalue ParmVar 0x142928128 'r' 'int *'
    | | `-IntegerLiteral 0x142942300 <col:4> 'int' 13
    | `-CallExpr 0x1429424e0 <col:8, col:41> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x142942358 <col:8> 'int ()' Function 0x142941880 'bn_mul_add_words' 'int ()'
    |   |-UnaryOperator 0x142942410 <col:25, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-ParenExpr 0x1429423f0 <col:26, col:31> '<dependent type>' contains-errors lvalue
    |   |   `-ArraySubscriptExpr 0x1429423d0 <col:27, col:30> '<dependent type>' contains-errors lvalue
    |   |     |-ImplicitCastExpr 0x1429423b8 <col:27> '<dependent type>' contains-errors <LValueToRValue>
    |   |     | `-RecoveryExpr 0x142942378 <col:27> '<dependent type>' contains-errors lvalue
    |   |     `-IntegerLiteral 0x142942398 <col:29> 'int' 5
    |   |-RecoveryExpr 0x142942428 <col:33> '<dependent type>' contains-errors lvalue
    |   |-IntegerLiteral 0x142942448 <col:35> 'int' 8
    |   `-ArraySubscriptExpr 0x1429424c0 <col:37, col:40> '<dependent type>' contains-errors lvalue
    |     |-ImplicitCastExpr 0x1429424a8 <col:37> '<dependent type>' contains-errors <LValueToRValue>
    |     | `-RecoveryExpr 0x142942468 <col:37> '<dependent type>' contains-errors lvalue
    |     `-IntegerLiteral 0x142942488 <col:39> 'int' 5
    |-BinaryOperator 0x1429427a8 <line:9:2, col:41> '<dependent type>' contains-errors '='
    | |-ArraySubscriptExpr 0x1429425c0 <col:2, col:6> '<dependent type>' contains-errors lvalue
    | | |-ImplicitCastExpr 0x1429425a8 <col:2> '<dependent type>' contains-errors <LValueToRValue>
    | | | `-RecoveryExpr 0x142942560 <col:2> '<dependent type>' contains-errors lvalue
    | | |   `-DeclRefExpr 0x142942540 <col:2> 'int *' lvalue ParmVar 0x142928128 'r' 'int *'
    | | `-IntegerLiteral 0x142942588 <col:4> 'int' 14
    | `-CallExpr 0x142942768 <col:8, col:41> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1429425e0 <col:8> 'int ()' Function 0x142941880 'bn_mul_add_words' 'int ()'
    |   |-UnaryOperator 0x142942698 <col:25, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-ParenExpr 0x142942678 <col:26, col:31> '<dependent type>' contains-errors lvalue
    |   |   `-ArraySubscriptExpr 0x142942658 <col:27, col:30> '<dependent type>' contains-errors lvalue
    |   |     |-ImplicitCastExpr 0x142942640 <col:27> '<dependent type>' contains-errors <LValueToRValue>
    |   |     | `-RecoveryExpr 0x142942600 <col:27> '<dependent type>' contains-errors lvalue
    |   |     `-IntegerLiteral 0x142942620 <col:29> 'int' 6
    |   |-RecoveryExpr 0x1429426b0 <col:33> '<dependent type>' contains-errors lvalue
    |   |-IntegerLiteral 0x1429426d0 <col:35> 'int' 8
    |   `-ArraySubscriptExpr 0x142942748 <col:37, col:40> '<dependent type>' contains-errors lvalue
    |     |-ImplicitCastExpr 0x142942730 <col:37> '<dependent type>' contains-errors <LValueToRValue>
    |     | `-RecoveryExpr 0x1429426f0 <col:37> '<dependent type>' contains-errors lvalue
    |     `-IntegerLiteral 0x142942710 <col:39> 'int' 6
    `-BinaryOperator 0x142942a48 <line:10:2, col:41> '<dependent type>' contains-errors '='
      |-ArraySubscriptExpr 0x142942860 <col:2, col:6> '<dependent type>' contains-errors lvalue
      | |-ImplicitCastExpr 0x142942848 <col:2> '<dependent type>' contains-errors <LValueToRValue>
      | | `-RecoveryExpr 0x142942800 <col:2> '<dependent type>' contains-errors lvalue
      | |   `-DeclRefExpr 0x1429427c8 <col:2> 'int *' lvalue ParmVar 0x142928128 'r' 'int *'
      | `-IntegerLiteral 0x142942828 <col:4> 'int' 15
      `-CallExpr 0x142942a08 <col:8, col:41> '<dependent type>' contains-errors
        |-DeclRefExpr 0x142942880 <col:8> 'int ()' Function 0x142941880 'bn_mul_add_words' 'int ()'
        |-UnaryOperator 0x142942938 <col:25, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow
        | `-ParenExpr 0x142942918 <col:26, col:31> '<dependent type>' contains-errors lvalue
        |   `-ArraySubscriptExpr 0x1429428f8 <col:27, col:30> '<dependent type>' contains-errors lvalue
        |     |-ImplicitCastExpr 0x1429428e0 <col:27> '<dependent type>' contains-errors <LValueToRValue>
        |     | `-RecoveryExpr 0x1429428a0 <col:27> '<dependent type>' contains-errors lvalue
        |     `-IntegerLiteral 0x1429428c0 <col:29> 'int' 7
        |-RecoveryExpr 0x142942950 <col:33> '<dependent type>' contains-errors lvalue
        |-IntegerLiteral 0x142942970 <col:35> 'int' 8
        `-ArraySubscriptExpr 0x1429429e8 <col:37, col:40> '<dependent type>' contains-errors lvalue
          |-ImplicitCastExpr 0x1429429d0 <col:37> '<dependent type>' contains-errors <LValueToRValue>
          | `-RecoveryExpr 0x142942990 <col:37> '<dependent type>' contains-errors lvalue
          `-IntegerLiteral 0x1429429b0 <col:39> 'int' 7
