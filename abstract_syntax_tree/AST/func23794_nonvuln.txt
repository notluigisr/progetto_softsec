TranslationUnitDecl 0x14a055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14a0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14a055bd0 '__int128'
|-TypedefDecl 0x14a056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14a055bf0 'unsigned __int128'
|-TypedefDecl 0x14a126a30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14a126800 'struct __NSConstantString_tag'
|   `-Record 0x14a056580 '__NSConstantString_tag'
|-TypedefDecl 0x14a126a98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14a055d90 '__SVInt8_t'
|-TypedefDecl 0x14a126b00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14a055db0 '__SVInt16_t'
|-TypedefDecl 0x14a126b68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14a055dd0 '__SVInt32_t'
|-TypedefDecl 0x14a126bd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14a055df0 '__SVInt64_t'
|-TypedefDecl 0x14a126c38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14a055e10 '__SVUint8_t'
|-TypedefDecl 0x14a126ca0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14a055e30 '__SVUint16_t'
|-TypedefDecl 0x14a126d08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14a055e50 '__SVUint32_t'
|-TypedefDecl 0x14a126d70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14a055e70 '__SVUint64_t'
|-TypedefDecl 0x14a126dd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14a055e90 '__SVFloat16_t'
|-TypedefDecl 0x14a126e40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14a055eb0 '__SVFloat32_t'
|-TypedefDecl 0x14a126ea8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14a055ed0 '__SVFloat64_t'
|-TypedefDecl 0x14a126f10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14a055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14a126f78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14a055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14a126fe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14a055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14a127048 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14a055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14a1270b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14a055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14a127118 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14a055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14a127180 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14a055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14a1271e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14a055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14a127250 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14a055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14a1272b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14a056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14a127320 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14a056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14a127388 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14a056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14a1273f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14a056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14a127458 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14a056090 '__clang_svint8x3_t'
|-TypedefDecl 0x14a1274c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14a0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14a127528 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14a0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14a127590 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14a0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14a1275f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14a056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14a127660 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14a056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14a1276c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14a056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14a127730 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14a056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14a127798 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14a056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14a128000 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14a0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14a128068 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14a0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14a1280d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14a0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14a128138 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14a056210 '__clang_svint8x4_t'
|-TypedefDecl 0x14a1281a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14a056230 '__clang_svint16x4_t'
|-TypedefDecl 0x14a128208 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14a056250 '__clang_svint32x4_t'
|-TypedefDecl 0x14a128270 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14a056270 '__clang_svint64x4_t'
|-TypedefDecl 0x14a1282d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14a056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14a128340 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14a0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14a1283a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14a0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14a128410 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14a0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14a128478 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14a056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14a1284e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14a056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14a128548 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14a056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14a1285b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14a056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14a128618 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14a056390 '__SVBool_t'
|-TypedefDecl 0x14a128680 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14a0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14a1286e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14a0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14a128750 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14a0563f0 '__SVCount_t'
|-TypedefDecl 0x14a1287f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14a1287b0 'char *'
|   `-BuiltinType 0x14a0556b0 'char'
|-TypedefDecl 0x14a128868 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14a1287b0 'char *'
|   `-BuiltinType 0x14a0556b0 'char'
|-FunctionDecl 0x14a128c08 <dataset_diviso_filec/func23794_nonvuln.c:1:1, line:63:1> line:1:12 invalid sieve_find_script 'int (const char *, const char *, const char *, char *, int)' static
| |-ParmVarDecl 0x14a1288d8 <col:30, col:42> col:42 used user 'const char *'
| |-ParmVarDecl 0x14a128958 <col:48, col:60> col:60 used domain 'const char *'
| |-ParmVarDecl 0x14a1289d8 <line:2:30, col:42> col:42 used script 'const char *'
| |-ParmVarDecl 0x14a128a58 <col:50, col:56> col:56 used fname 'char *'
| |-ParmVarDecl 0x14a128af0 <col:63, col:70> col:70 invalid size 'int'
| `-CompoundStmt 0x14a1459b8 <line:3:1, line:63:1>
|   |-DeclStmt 0x14a128d90 <line:4:5, col:21>
|   | `-VarDecl 0x14a128cf0 <col:5, col:17> col:11 used ext 'char *' cinit
|   |   `-RecoveryExpr 0x14a128d70 <col:17> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x14a128ec8 <line:6:5, line:8:5>
|   | |-BinaryOperator 0x14a128e48 <line:6:9, col:19> 'int' '&&'
|   | | |-UnaryOperator 0x14a128de0 <col:9, col:10> 'int' prefix '!' cannot overflow
|   | | | `-ImplicitCastExpr 0x14a128dc8 <col:10> 'const char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x14a128da8 <col:10> 'const char *' lvalue ParmVar 0x14a1288d8 'user' 'const char *'
|   | | `-UnaryOperator 0x14a128e30 <col:18, col:19> 'int' prefix '!' cannot overflow
|   | |   `-ImplicitCastExpr 0x14a128e18 <col:19> 'const char *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x14a128df8 <col:19> 'const char *' lvalue ParmVar 0x14a1289d8 'script' 'const char *'
|   | `-CompoundStmt 0x14a128eb0 <col:27, line:8:5>
|   |   `-ReturnStmt 0x14a128ea0 <line:7:9, col:17>
|   |     `-UnaryOperator 0x14a128e88 <col:16, col:17> 'int' prefix '-'
|   |       `-IntegerLiteral 0x14a128e68 <col:17> 'int' 1
|   |-IfStmt 0x14a1426d8 <line:10:5, line:12:5>
|   | |-BinaryOperator 0x14a142658 <line:10:9, col:32> 'int' '&&'
|   | | |-ImplicitCastExpr 0x14a142640 <col:9> 'const char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x14a128ee8 <col:9> 'const char *' lvalue ParmVar 0x14a1288d8 'user' 'const char *'
|   | | `-BinaryOperator 0x14a142620 <col:17, col:32> 'int' '>'
|   | |   |-CallExpr 0x14a1425a8 <col:17, col:28> 'unsigned long'
|   | |   | |-ImplicitCastExpr 0x14a142590 <col:17> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   | |   | | `-DeclRefExpr 0x14a142500 <col:17> 'unsigned long (const char *)' Function 0x14a142390 'strlen' 'unsigned long (const char *)'
|   | |   | `-ImplicitCastExpr 0x14a1425d0 <col:24> 'const char *' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x14a142520 <col:24> 'const char *' lvalue ParmVar 0x14a1288d8 'user' 'const char *'
|   | |   `-ImplicitCastExpr 0x14a142608 <col:32> 'unsigned long' <IntegralCast>
|   | |     `-IntegerLiteral 0x14a1425e8 <col:32> 'int' 900
|   | `-CompoundStmt 0x14a1426c0 <col:37, line:12:5>
|   |   `-ReturnStmt 0x14a1426b0 <line:11:9, col:17>
|   |     `-UnaryOperator 0x14a142698 <col:16, col:17> 'int' prefix '-'
|   |       `-IntegerLiteral 0x14a142678 <col:17> 'int' 1
|   |-IfStmt 0x14a145178 <line:14:5, line:55:5> has_else
|   | |-BinaryOperator 0x14a142770 <line:14:9, col:29> 'int' contains-errors '&&'
|   | | |-RecoveryExpr 0x14a142750 <col:9> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x14a142710 <col:29> 'const char *' lvalue ParmVar 0x14a1288d8 'user' 'const char *'
|   | |-CompoundStmt 0x14a143920 <col:35, line:23:5>
|   | | |-DeclStmt 0x14a142bb8 <line:15:9, col:45>
|   | | | |-RecordDecl 0x14a142790 <col:9, col:16> col:16 struct passwd
|   | | | `-VarDecl 0x14a1428f8 <col:9, col:44> col:24 used pent 'struct passwd *' cinit
|   | | |   `-ImplicitCastExpr 0x14a142b88 <col:31, col:44> 'struct passwd *' <IntegralToPointer>
|   | | |     `-CallExpr 0x14a142b48 <col:31, col:44> 'int'
|   | | |       |-ImplicitCastExpr 0x14a142b30 <col:31> 'int (*)()' <FunctionToPointerDecay>
|   | | |       | `-DeclRefExpr 0x14a142ac0 <col:31> 'int ()' Function 0x14a142a08 'getpwnam' 'int ()'
|   | | |       `-ImplicitCastExpr 0x14a142b70 <col:40> 'const char *' <LValueToRValue>
|   | | |         `-DeclRefExpr 0x14a142ae0 <col:40> 'const char *' lvalue ParmVar 0x14a1288d8 'user' 'const char *'
|   | | |-IfStmt 0x14a142cc8 <line:17:9, line:19:9>
|   | | | |-BinaryOperator 0x14a142c48 <line:17:13, col:21> 'int' contains-errors '=='
|   | | | | |-DeclRefExpr 0x14a142bd0 <col:13> 'struct passwd *' lvalue Var 0x14a1428f8 'pent' 'struct passwd *'
|   | | | | `-RecoveryExpr 0x14a142c28 <col:21> '<dependent type>' contains-errors lvalue
|   | | | `-CompoundStmt 0x14a142cb0 <col:27, line:19:9>
|   | | |   `-ReturnStmt 0x14a142ca0 <line:18:13, col:21>
|   | | |     `-UnaryOperator 0x14a142c88 <col:20, col:21> 'int' prefix '-'
|   | | |       `-IntegerLiteral 0x14a142c68 <col:21> 'int' 1
|   | | `-CallExpr 0x14a1438e8 <line:22:9, col:36> '<dependent type>' contains-errors
|   | |   |-DeclRefExpr 0x14a142fc8 <col:9> 'int (char *, unsigned long, const char *, ...)' Function 0x14a142d40 'snprintf' 'int (char *, unsigned long, const char *, ...)'
|   | |   |-DeclRefExpr 0x14a143800 <col:18> 'char *' lvalue ParmVar 0x14a128a58 'fname' 'char *'
|   | |   |-RecoveryExpr 0x14a143820 <col:25> '<dependent type>' contains-errors lvalue
|   | |   `-StringLiteral 0x14a143880 <col:31> 'char[4]' lvalue "STR"
|   | `-CompoundStmt 0x14a145150 <line:23:12, line:55:5>
|   |   |-BinaryOperator 0x14a143e30 <line:24:9, col:52> 'unsigned long' contains-errors '='
|   |   | |-UnaryExprOrTypeTraitExpr 0x14a143d70 <col:9, col:16> 'unsigned long' contains-errors sizeof
|   |   | | `-RecoveryExpr 0x14a143d50 <col:16> '<dependent type>' contains-errors lvalue
|   |   | `-CallExpr 0x14a143df8 <col:22, col:52> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x14a143c38 <col:22> 'unsigned long (char *, const char *, unsigned long)' Function 0x14a1439e8 'strlcpy' 'unsigned long (char *, const char *, unsigned long)'
|   |   |   |-DeclRefExpr 0x14a143c58 <col:30> 'char *' lvalue ParmVar 0x14a128a58 'fname' 'char *'
|   |   |   |-RecoveryExpr 0x14a143d90 <col:37> '<dependent type>' contains-errors lvalue
|   |   |   `-RecoveryExpr 0x14a143c90 <col:48> '<dependent type>' contains-errors lvalue
|   |   |-IfStmt 0x14a144258 <line:26:9, line:30:9>
|   |   | |-ImplicitCastExpr 0x14a143e70 <line:26:13> 'const char *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x14a143e50 <col:13> 'const char *' lvalue ParmVar 0x14a128958 'domain' 'const char *'
|   |   | `-CompoundStmt 0x14a144240 <col:21, line:30:9>
|   |   |   `-DeclStmt 0x14a144078 <line:27:13, col:71>
|   |   |     `-VarDecl 0x14a143e98 <col:13, col:18> col:18 used dhash 'char'
|   |   `-IfStmt 0x14a145080 <line:32:9, line:52:9> has_else
|   |     |-UnaryOperator 0x14a1442b0 <line:32:13, col:14> 'int' prefix '!' cannot overflow
|   |     | `-ImplicitCastExpr 0x14a144298 <col:14> 'const char *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x14a144278 <col:14> 'const char *' lvalue ParmVar 0x14a1288d8 'user' 'const char *'
|   |     |-CompoundStmt 0x14a144618 <col:20, line:34:9>
|   |     `-CompoundStmt 0x14a145060 <line:35:14, line:52:9>
|   |       |-DeclStmt 0x14a1446e0 <line:36:13, col:68>
|   |       | `-VarDecl 0x14a144638 <col:13, col:18> col:18 used hash 'char'
|   |       `-IfStmt 0x14a145040 <line:39:13, line:51:13>
|   |         |-UnaryOperator 0x14a144800 <line:39:17, col:18> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x14a1447d8 <col:18> 'const char *' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x14a1447b8 <col:18> 'const char *' lvalue ParmVar 0x14a1289d8 'script' 'const char *'
|   |         `-CompoundStmt 0x14a145008 <col:26, line:51:13>
|   |           |-DeclStmt 0x14a144898 <line:40:17, col:31>
|   |           | `-VarDecl 0x14a144830 <col:17, col:23> col:23 used bc_fname 'char *'
|   |           |-CallExpr 0x14a144978 <line:42:17, col:43> '<dependent type>' contains-errors
|   |           | |-DeclRefExpr 0x14a1448b0 <col:17> 'unsigned long (char *, const char *, unsigned long)' Function 0x14a1442c8 'strlcat' 'unsigned long (char *, const char *, unsigned long)'
|   |           | |-DeclRefExpr 0x14a1448d0 <col:25> 'char *' lvalue ParmVar 0x14a128a58 'fname' 'char *'
|   |           | |-StringLiteral 0x14a1448f0 <col:32> 'char[4]' lvalue "STR"
|   |           | `-RecoveryExpr 0x14a144910 <col:39> '<dependent type>' contains-errors lvalue
|   |           |-BinaryOperator 0x14a144b60 <line:44:17, col:57> 'char *' '='
|   |           | |-DeclRefExpr 0x14a1449b0 <col:17> 'char *' lvalue Var 0x14a144830 'bc_fname' 'char *'
|   |           | `-ImplicitCastExpr 0x14a144b48 <col:28, col:57> 'char *' <IntegralToPointer>
|   |           |   `-CallExpr 0x14a144b08 <col:28, col:57> 'int'
|   |           |     |-ImplicitCastExpr 0x14a144af0 <col:28> 'int (*)()' <FunctionToPointerDecay>
|   |           |     | `-DeclRefExpr 0x14a144ab0 <col:28> 'int ()' Function 0x14a1449f8 'sieve_getdefaultbcfname' 'int ()'
|   |           |     `-ImplicitCastExpr 0x14a144b30 <col:52> 'char *' <LValueToRValue>
|   |           |       `-DeclRefExpr 0x14a144ad0 <col:52> 'char *' lvalue ParmVar 0x14a128a58 'fname' 'char *'
|   |           |-IfStmt 0x14a144fb8 <line:45:17, line:48:17>
|   |           | |-ImplicitCastExpr 0x14a144ba0 <line:45:21> 'char *' <LValueToRValue>
|   |           | | `-DeclRefExpr 0x14a144b80 <col:21> 'char *' lvalue Var 0x14a144830 'bc_fname' 'char *'
|   |           | `-CompoundStmt 0x14a144fa0 <col:31, line:48:17>
|   |           |   `-CallExpr 0x14a144f48 <line:47:21, col:34> 'void'
|   |           |     |-ImplicitCastExpr 0x14a144f30 <col:21> 'void (*)(void *)' <FunctionToPointerDecay>
|   |           |     | `-DeclRefExpr 0x14a144ea8 <col:21> 'void (void *)' Function 0x14a144d38 'free' 'void (void *)'
|   |           |     `-ImplicitCastExpr 0x14a144f88 <col:26> 'void *' <BitCast>
|   |           |       `-ImplicitCastExpr 0x14a144f70 <col:26> 'char *' <LValueToRValue>
|   |           |         `-DeclRefExpr 0x14a144ec8 <col:26> 'char *' lvalue Var 0x14a144830 'bc_fname' 'char *'
|   |           `-ReturnStmt 0x14a144ff8 <line:50:17, col:24>
|   |             `-IntegerLiteral 0x14a144fd8 <col:24> 'int' 0
|   |-BinaryOperator 0x14a145508 <line:58:5, col:29> 'char *' contains-errors '='
|   | |-DeclRefExpr 0x14a1451a8 <col:5> 'char *' contains-errors lvalue Var 0x14a128cf0 'ext' 'char *'
|   | `-CallExpr 0x14a1454a8 <col:11, col:29> 'char *'
|   |   |-ImplicitCastExpr 0x14a145490 <col:11> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x14a1453f0 <col:11> 'char *(const char *, int)' Function 0x14a145210 'strrchr' 'char *(const char *, int)'
|   |   |-ImplicitCastExpr 0x14a1454f0 <col:19> 'const char *' <NoOp>
|   |   | `-ImplicitCastExpr 0x14a1454d8 <col:19> 'char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x14a145410 <col:19> 'char *' lvalue ParmVar 0x14a128a58 'fname' 'char *'
|   |   `-CharacterLiteral 0x14a145430 <col:26> 'int' 46
|   `-ReturnStmt 0x14a1459a8 <line:62:5, col:12>
|     `-IntegerLiteral 0x14a145988 <col:12> 'int' 0
|-FunctionDecl 0x14a142390 <line:10:17> col:17 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x14a142490 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x14a142438 <<invalid sloc>> Implicit 902
|-FunctionDecl 0x14a142d40 <line:22:9> col:9 implicit used snprintf 'int (char *, unsigned long, const char *, ...)' extern
| |-ParmVarDecl 0x14a142e40 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x14a142ea8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0x14a142f10 <<invalid sloc>> <invalid sloc> 'const char *'
| |-BuiltinAttr 0x14a142de8 <<invalid sloc>> Implicit 905
| `-FormatAttr 0x14a142f90 <col:9> Implicit printf 3 4
|-FunctionDecl 0x14a1439e8 <line:24:22> col:22 implicit used strlcpy 'unsigned long (char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0x14a143ae8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x14a143b50 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x14a143bb8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x14a143a90 <<invalid sloc>> Implicit 969
|-FunctionDecl 0x14a1442c8 <line:33:19> col:19 implicit used strlcat 'unsigned long (char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0x14a1443c8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x14a144430 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x14a144498 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x14a144370 <<invalid sloc>> Implicit 970
|-FunctionDecl 0x14a144d38 <line:47:21> col:21 implicit used free 'void (void *)' extern
| |-ParmVarDecl 0x14a144e38 <<invalid sloc>> <invalid sloc> 'void *'
| `-BuiltinAttr 0x14a144de0 <<invalid sloc>> Implicit 873
|-FunctionDecl 0x14a145210 <line:58:11> col:11 implicit used strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x14a145310 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x14a145378 <<invalid sloc>> <invalid sloc> 'int'
| `-BuiltinAttr 0x14a1452b8 <<invalid sloc>> Implicit 896
`-FunctionDecl 0x14a145590 <line:59:17> col:17 implicit used strcmp 'int (const char *, const char *)' extern
  |-ParmVarDecl 0x14a145690 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x14a1456f8 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x14a145638 <<invalid sloc>> Implicit 887
