TranslationUnitDecl 0x128055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1280564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x128055bd0 '__int128'
|-TypedefDecl 0x128056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x128055bf0 'unsigned __int128'
|-TypedefDecl 0x10680be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x10680bc00 'struct __NSConstantString_tag'
|   `-Record 0x128056580 '__NSConstantString_tag'
|-TypedefDecl 0x10680be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x128055d90 '__SVInt8_t'
|-TypedefDecl 0x10680bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x128055db0 '__SVInt16_t'
|-TypedefDecl 0x10680bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x128055dd0 '__SVInt32_t'
|-TypedefDecl 0x10680bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x128055df0 '__SVInt64_t'
|-TypedefDecl 0x10680c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x128055e10 '__SVUint8_t'
|-TypedefDecl 0x10680c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x128055e30 '__SVUint16_t'
|-TypedefDecl 0x10680c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x128055e50 '__SVUint32_t'
|-TypedefDecl 0x10680c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x128055e70 '__SVUint64_t'
|-TypedefDecl 0x10680c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x128055e90 '__SVFloat16_t'
|-TypedefDecl 0x10680c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x128055eb0 '__SVFloat32_t'
|-TypedefDecl 0x10680c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x128055ed0 '__SVFloat64_t'
|-TypedefDecl 0x10680c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x128055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x10680c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x128055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x10680c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x128055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x10680c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x128055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x10680c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x128055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x10680c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x128055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x10680c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x128055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x10680c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x128055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x10680c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x128055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x10680c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x128056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x10680c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x128056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x10680c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x128056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x10680c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x128056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x10680c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x128056090 '__clang_svint8x3_t'
|-TypedefDecl 0x10680c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1280560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x10680c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1280560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x10680c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1280560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x10680c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x128056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x10680ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x128056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x10680cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x128056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x10680cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x128056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x10680cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x128056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x10680d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1280561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x10680d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1280561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x10680d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1280561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x10680d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x128056210 '__clang_svint8x4_t'
|-TypedefDecl 0x10680d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x128056230 '__clang_svint16x4_t'
|-TypedefDecl 0x10680d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x128056250 '__clang_svint32x4_t'
|-TypedefDecl 0x10680d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x128056270 '__clang_svint64x4_t'
|-TypedefDecl 0x10680d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x128056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x10680d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1280562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x10680d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1280562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x10680d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1280562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x10680d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x128056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x10680d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x128056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x10680d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x128056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x10680d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x128056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x10680da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x128056390 '__SVBool_t'
|-TypedefDecl 0x10680da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1280563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x10680dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1280563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x10680db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1280563f0 '__SVCount_t'
|-TypedefDecl 0x10680dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x10680dbb0 'char *'
|   `-BuiltinType 0x1280556b0 'char'
|-TypedefDecl 0x10680dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x10680dbb0 'char *'
|   `-BuiltinType 0x1280556b0 'char'
`-FunctionDecl 0x106826b28 <dataset_diviso_filec/func4378_vuln.c:1:1, line:46:1> line:1:12 emulator_read_write_onepage 'int (unsigned long, void *, unsigned int, struct x86_exception *, struct kvm_vcpu *, struct read_write_emulator_ops *)' static
  |-ParmVarDecl 0x10680dcd8 <col:40, col:54> col:54 used addr 'unsigned long'
  |-ParmVarDecl 0x10680dd58 <col:60, col:66> col:66 used val 'void *'
  |-ParmVarDecl 0x10680ddd8 <line:2:12, col:25> col:25 used bytes 'unsigned int'
  |-ParmVarDecl 0x106826600 <line:3:12, col:34> col:34 used exception 'struct x86_exception *'
  |-ParmVarDecl 0x1068267d8 <line:4:12, col:29> col:29 used vcpu 'struct kvm_vcpu *'
  |-ParmVarDecl 0x1068269a8 <line:5:12, col:44> col:44 used ops 'struct read_write_emulator_ops *'
  `-CompoundStmt 0x10682a590 <line:6:1, line:46:1>
    |-DeclStmt 0x106826d78 <line:8:2, col:18>
    | |-VarDecl 0x106826c78 <col:2, col:6> col:6 used handled 'int'
    | `-VarDecl 0x106826cf8 <col:2, col:15> col:15 used ret 'int'
    |-IfStmt 0x106826f50 <line:11:2, line:13:10>
    | |-BinaryOperator 0x106826ee8 <line:11:6, line:12:45> 'int' contains-errors '&&'
    | | |-RecoveryExpr 0x106826dc8 <line:11:6, col:11> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x106826d90 <col:6> 'struct read_write_emulator_ops *' lvalue ParmVar 0x1068269a8 'ops' 'struct read_write_emulator_ops *'
    | | `-CallExpr 0x106826eb0 <line:12:5, col:45> '<dependent type>' contains-errors
    | |   |-RecoveryExpr 0x106826e28 <col:5, col:10> '<dependent type>' contains-errors lvalue
    | |   | `-DeclRefExpr 0x106826df0 <col:5> 'struct read_write_emulator_ops *' lvalue ParmVar 0x1068269a8 'ops' 'struct read_write_emulator_ops *'
    | |   |-DeclRefExpr 0x106826e50 <col:29> 'struct kvm_vcpu *' lvalue ParmVar 0x1068267d8 'vcpu' 'struct kvm_vcpu *'
    | |   |-DeclRefExpr 0x106826e70 <col:35> 'void *' lvalue ParmVar 0x10680dd58 'val' 'void *'
    | |   `-DeclRefExpr 0x106826e90 <col:40> 'unsigned int' lvalue ParmVar 0x10680ddd8 'bytes' 'unsigned int'
    | `-ReturnStmt 0x106826f40 <line:13:3, col:10>
    |   `-RecoveryExpr 0x106826f20 <col:10> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x106827270 <line:15:2, col:63> 'int' contains-errors '='
    | |-DeclRefExpr 0x106826f70 <col:2> 'int' lvalue Var 0x106826cf8 'ret' 'int'
    | `-CallExpr 0x106827228 <col:8, col:63> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1068270a0 <col:8> 'int ()' Function 0x106826fe8 'vcpu_mmio_gva_to_gpa' 'int ()'
    |   |-DeclRefExpr 0x1068270c0 <col:29> 'struct kvm_vcpu *' lvalue ParmVar 0x1068267d8 'vcpu' 'struct kvm_vcpu *'
    |   |-DeclRefExpr 0x1068270e0 <col:35> 'unsigned long' lvalue ParmVar 0x10680dcd8 'addr' 'unsigned long'
    |   |-UnaryOperator 0x1068271f0 <col:41, col:42> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-RecoveryExpr 0x1068271d0 <col:42> '<dependent type>' contains-errors lvalue
    |   |-DeclRefExpr 0x106827130 <col:47> 'struct x86_exception *' lvalue ParmVar 0x106826600 'exception' 'struct x86_exception *'
    |   `-RecoveryExpr 0x106827208 <col:58> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x106827350 <line:17:2, line:18:10>
    | |-BinaryOperator 0x1068272e8 <line:17:6, col:12> 'int' '<'
    | | |-ImplicitCastExpr 0x1068272d0 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x106827290 <col:6> 'int' lvalue Var 0x106826cf8 'ret' 'int'
    | | `-IntegerLiteral 0x1068272b0 <col:12> 'int' 0
    | `-ReturnStmt 0x106827340 <line:18:3, col:10>
    |   `-RecoveryExpr 0x106827320 <col:10> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x106827410 <line:21:2, line:22:8>
    | |-ImplicitCastExpr 0x106827390 <line:21:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x106827370 <col:6> 'int' lvalue Var 0x106826cf8 'ret' 'int'
    | `-GotoStmt 0x1068273f8 <line:22:3, col:8> 'mmio' 0x1068273a8
    |-IfStmt 0x106829800 <line:24:2, line:25:10>
    | |-CallExpr 0x106827568 <line:24:6, col:51> '<dependent type>' contains-errors
    | | |-RecoveryExpr 0x106827468 <col:6, col:11> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x106827430 <col:6> 'struct read_write_emulator_ops *' lvalue ParmVar 0x1068269a8 'ops' 'struct read_write_emulator_ops *'
    | | |-DeclRefExpr 0x106827490 <col:30> 'struct kvm_vcpu *' lvalue ParmVar 0x1068267d8 'vcpu' 'struct kvm_vcpu *'
    | | |-RecoveryExpr 0x106827548 <col:36> '<dependent type>' contains-errors lvalue
    | | |-DeclRefExpr 0x1068274c8 <col:41> 'void *' lvalue ParmVar 0x10680dd58 'val' 'void *'
    | | `-DeclRefExpr 0x1068274e8 <col:46> 'unsigned int' lvalue ParmVar 0x10680ddd8 'bytes' 'unsigned int'
    | `-ReturnStmt 0x1068275e0 <line:25:3, col:10>
    |   `-RecoveryExpr 0x1068275c0 <col:10> '<dependent type>' contains-errors lvalue
    |-LabelStmt 0x1068299f8 <line:27:1, line:29:54> 'mmio'
    | `-BinaryOperator 0x1068299d8 <col:2, col:54> 'int' contains-errors '='
    |   |-DeclRefExpr 0x106829820 <col:2> 'int' lvalue Var 0x106826c78 'handled' 'int'
    |   `-CallExpr 0x106829998 <col:12, col:54> '<dependent type>' contains-errors
    |     |-RecoveryExpr 0x106829878 <col:12, col:17> '<dependent type>' contains-errors lvalue
    |     | `-DeclRefExpr 0x106829840 <col:12> 'struct read_write_emulator_ops *' lvalue ParmVar 0x1068269a8 'ops' 'struct read_write_emulator_ops *'
    |     |-DeclRefExpr 0x1068298a0 <col:33> 'struct kvm_vcpu *' lvalue ParmVar 0x1068267d8 'vcpu' 'struct kvm_vcpu *'
    |     |-RecoveryExpr 0x106829978 <col:39> '<dependent type>' contains-errors lvalue
    |     |-DeclRefExpr 0x1068298d8 <col:44> 'unsigned int' lvalue ParmVar 0x10680ddd8 'bytes' 'unsigned int'
    |     `-DeclRefExpr 0x1068298f8 <col:51> 'void *' lvalue ParmVar 0x10680dd58 'val' 'void *'
    |-IfStmt 0x106829b08 <line:30:2, line:31:10>
    | |-BinaryOperator 0x106829aa0 <line:30:6, col:17> 'int' '=='
    | | |-ImplicitCastExpr 0x106829a88 <col:6> 'unsigned int' <IntegralCast>
    | | | `-ImplicitCastExpr 0x106829a58 <col:6> 'int' <LValueToRValue>
    | | |   `-DeclRefExpr 0x106829a18 <col:6> 'int' lvalue Var 0x106826c78 'handled' 'int'
    | | `-ImplicitCastExpr 0x106829a70 <col:17> 'unsigned int' <LValueToRValue>
    | |   `-DeclRefExpr 0x106829a38 <col:17> 'unsigned int' lvalue ParmVar 0x10680ddd8 'bytes' 'unsigned int'
    | `-ReturnStmt 0x106829af8 <line:31:3, col:10>
    |   `-RecoveryExpr 0x106829ad8 <col:10> '<dependent type>' contains-errors lvalue
    |-CompoundAssignOperator 0x106829bb8 <line:34:2, col:11> 'unsigned int' '-=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
    | |-DeclRefExpr 0x106829b48 <col:2> 'unsigned int' lvalue ParmVar 0x10680ddd8 'bytes' 'unsigned int'
    | `-ImplicitCastExpr 0x106829ba0 <col:11> 'unsigned int' <IntegralCast>
    |   `-ImplicitCastExpr 0x106829b88 <col:11> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x106829b68 <col:11> 'int' lvalue Var 0x106826c78 'handled' 'int'
    |-CompoundAssignOperator 0x106829c40 <line:35:2, col:9> 'void *' '+=' ComputeLHSTy='void *' ComputeResultTy='void *'
    | |-DeclRefExpr 0x106829be8 <col:2> 'void *' lvalue ParmVar 0x10680dd58 'val' 'void *'
    | `-ImplicitCastExpr 0x106829c28 <col:9> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x106829c08 <col:9> 'int' lvalue Var 0x106826c78 'handled' 'int'
    |-BinaryOperator 0x106829cf0 <line:37:2, col:22> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x106829ca8 <col:2, col:8> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x106829c70 <col:2> 'struct kvm_vcpu *' lvalue ParmVar 0x1068267d8 'vcpu' 'struct kvm_vcpu *'
    | `-IntegerLiteral 0x106829cd0 <col:22> 'int' 1
    |-BinaryOperator 0x106829e10 <line:38:2, col:27> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x106829d70 <col:2, col:13> '<dependent type>' contains-errors lvalue ->exit_reason
    | | `-RecoveryExpr 0x106829d48 <col:2, col:8> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x106829d10 <col:2> 'struct kvm_vcpu *' lvalue ParmVar 0x1068267d8 'vcpu' 'struct kvm_vcpu *'
    | `-RecoveryExpr 0x106829df0 <col:27> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x10682a000 <line:40:2, col:20> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x106829fb8 <col:2, col:8> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x106829f80 <col:2> 'struct kvm_vcpu *' lvalue ParmVar 0x1068267d8 'vcpu' 'struct kvm_vcpu *'
    | `-DeclRefExpr 0x106829fe0 <col:20> 'unsigned int' lvalue ParmVar 0x10680ddd8 'bytes' 'unsigned int'
    |-BinaryOperator 0x10682a2c0 <line:41:2, col:46> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x10682a0c8 <col:2, col:18> '<dependent type>' contains-errors lvalue .len
    | | `-CXXDependentScopeMemberExpr 0x10682a080 <col:2, col:13> '<dependent type>' contains-errors lvalue ->mmio
    | |   `-RecoveryExpr 0x10682a058 <col:2, col:8> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x10682a020 <col:2> 'struct kvm_vcpu *' lvalue ParmVar 0x1068267d8 'vcpu' 'struct kvm_vcpu *'
    | `-CallExpr 0x10682a290 <col:24, col:46> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x10682a1f0 <col:24> 'int ()' Function 0x10682a138 'min' 'int ()'
    |   |-RecoveryExpr 0x10682a248 <col:28, col:34> '<dependent type>' contains-errors lvalue
    |   | `-DeclRefExpr 0x10682a210 <col:28> 'struct kvm_vcpu *' lvalue ParmVar 0x1068267d8 'vcpu' 'struct kvm_vcpu *'
    |   `-IntegerLiteral 0x10682a270 <col:45> 'int' 8
    `-BinaryOperator 0x10682a4b0 <line:43:2, col:21> '<dependent type>' contains-errors '='
      |-RecoveryExpr 0x10682a468 <col:2, col:8> '<dependent type>' contains-errors lvalue
      | `-DeclRefExpr 0x10682a430 <col:2> 'struct kvm_vcpu *' lvalue ParmVar 0x1068267d8 'vcpu' 'struct kvm_vcpu *'
      `-IntegerLiteral 0x10682a490 <col:21> 'int' 0
