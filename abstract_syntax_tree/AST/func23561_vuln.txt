TranslationUnitDecl 0x122855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1228564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x122855bd0 '__int128'
|-TypedefDecl 0x122856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x122855bf0 'unsigned __int128'
|-TypedefDecl 0x123054a30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x123054800 'struct __NSConstantString_tag'
|   `-Record 0x122856580 '__NSConstantString_tag'
|-TypedefDecl 0x123054a98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x122855d90 '__SVInt8_t'
|-TypedefDecl 0x123054b00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x122855db0 '__SVInt16_t'
|-TypedefDecl 0x123054b68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x122855dd0 '__SVInt32_t'
|-TypedefDecl 0x123054bd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x122855df0 '__SVInt64_t'
|-TypedefDecl 0x123054c38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x122855e10 '__SVUint8_t'
|-TypedefDecl 0x123054ca0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x122855e30 '__SVUint16_t'
|-TypedefDecl 0x123054d08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x122855e50 '__SVUint32_t'
|-TypedefDecl 0x123054d70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x122855e70 '__SVUint64_t'
|-TypedefDecl 0x123054dd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x122855e90 '__SVFloat16_t'
|-TypedefDecl 0x123054e40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x122855eb0 '__SVFloat32_t'
|-TypedefDecl 0x123054ea8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x122855ed0 '__SVFloat64_t'
|-TypedefDecl 0x123054f10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x122855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x123054f78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x122855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x123054fe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x122855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x123055048 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x122855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1230550b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x122855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x123055118 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x122855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x123055180 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x122855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1230551e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x122855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x123055250 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x122855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1230552b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x122856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x123055320 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x122856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x123055388 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x122856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1230553f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x122856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x123055458 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x122856090 '__clang_svint8x3_t'
|-TypedefDecl 0x1230554c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1228560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x123055528 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1228560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x123055590 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1228560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x1230555f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x122856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x123055660 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x122856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x1230556c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x122856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x123055730 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x122856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x123055798 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x122856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x123056000 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1228561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x123056068 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1228561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1230560d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1228561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x123056138 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x122856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1230561a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x122856230 '__clang_svint16x4_t'
|-TypedefDecl 0x123056208 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x122856250 '__clang_svint32x4_t'
|-TypedefDecl 0x123056270 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x122856270 '__clang_svint64x4_t'
|-TypedefDecl 0x1230562d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x122856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x123056340 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1228562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1230563a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1228562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x123056410 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1228562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x123056478 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x122856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1230564e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x122856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x123056548 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x122856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1230565b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x122856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x123056618 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x122856390 '__SVBool_t'
|-TypedefDecl 0x123056680 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1228563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1230566e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1228563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x123056750 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1228563f0 '__SVCount_t'
|-TypedefDecl 0x1230567f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1230567b0 'char *'
|   `-BuiltinType 0x1228556b0 'char'
|-TypedefDecl 0x123056868 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1230567b0 'char *'
|   `-BuiltinType 0x1228556b0 'char'
|-FunctionDecl 0x123070000 <dataset_diviso_filec/func23561_vuln.c:1:1, line:51:1> line:1:13 invalid imap_client_input_next_cmd 'int (struct client *)' static
| |-ParmVarDecl 0x123056e68 <col:40, col:55> col:55 used _client 'struct client *'
| `-CompoundStmt 0x1228da940 <line:2:1, line:51:1>
|   |-DeclStmt 0x123070380 <line:3:2, col:60>
|   | |-RecordDecl 0x1230700b0 <col:2, col:9> col:9 struct imap_client
|   | `-VarDecl 0x123070218 <col:2, col:53> col:22 used client 'struct imap_client *' cinit
|   |   `-CStyleCastExpr 0x123070340 <col:31, col:53> 'struct imap_client *' <BitCast>
|   |     `-ImplicitCastExpr 0x123070328 <col:53> 'struct client *' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0x123070280 <col:53> 'struct client *' lvalue ParmVar 0x123056e68 '_client' 'struct client *'
|   |-DeclStmt 0x123070588 <line:4:2, col:29>
|   | |-RecordDecl 0x123070398 <col:8, col:15> col:15 struct imap_arg
|   | `-VarDecl 0x123070508 <col:2, col:25> col:25 used args 'const struct imap_arg *'
|   |-DeclStmt 0x123070620 <line:6:2, col:9>
|   | `-VarDecl 0x1230705b8 <col:2, col:6> col:6 used ret 'int'
|   |-IfStmt 0x1230777f0 <line:8:2, line:28:2> has_else
|   | |-BinaryOperator 0x1230709c0 <line:8:6, col:45> 'int' contains-errors '=='
|   | | |-CallExpr 0x123070970 <col:6, col:40> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x123070860 <col:6> 'int (const char *, const char *)' Function 0x123070680 'strcasecmp' 'int (const char *, const char *)'
|   | | | |-RecoveryExpr 0x1230708b8 <col:17, col:25> '<dependent type>' contains-errors lvalue
|   | | | | `-DeclRefExpr 0x123070880 <col:17> 'struct imap_client *' lvalue Var 0x123070218 'client' 'struct imap_client *'
|   | | | `-StringLiteral 0x123070920 <col:35> 'char[4]' lvalue "STR"
|   | | `-IntegerLiteral 0x1230709a0 <col:45> 'int' 0
|   | |-CompoundStmt 0x123070ed0 <col:48, line:13:2>
|   | | |-BinaryOperator 0x123070c88 <line:10:3, col:41> 'int' contains-errors '='
|   | | | |-DeclRefExpr 0x1230709e0 <col:3> 'int' lvalue Var 0x1230705b8 'ret' 'int'
|   | | | `-CallExpr 0x123070c58 <col:9, col:41> '<dependent type>' contains-errors
|   | | |   |-DeclRefExpr 0x123070b60 <col:9> 'int ()' Function 0x123070aa8 'cmd_authenticate' 'int ()'
|   | | |   |-DeclRefExpr 0x123070b80 <col:26> 'struct imap_client *' lvalue Var 0x123070218 'client' 'struct imap_client *'
|   | | |   `-UnaryOperator 0x123070c40 <col:34, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | |     `-RecoveryExpr 0x123070c20 <col:35> '<dependent type>' contains-errors lvalue
|   | | `-IfStmt 0x123070eb0 <line:11:3, line:12:11>
|   | |   |-BinaryOperator 0x123070e48 <line:11:7, col:20> 'int' contains-errors '&&'
|   | |   | |-BinaryOperator 0x123070dd8 <col:7, col:14> 'int' '=='
|   | |   | | |-ImplicitCastExpr 0x123070dc0 <col:7> 'int' <LValueToRValue>
|   | |   | | | `-DeclRefExpr 0x123070ca8 <col:7> 'int' lvalue Var 0x1230705b8 'ret' 'int'
|   | |   | | `-IntegerLiteral 0x123070cc8 <col:14> 'int' 0
|   | |   | `-UnaryOperator 0x123070e30 <col:19, col:20> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | |   |   `-ImplicitCastExpr 0x123070e18 <col:20> '<dependent type>' contains-errors <LValueToRValue>
|   | |   |     `-RecoveryExpr 0x123070df8 <col:20> '<dependent type>' contains-errors lvalue
|   | |   `-ReturnStmt 0x123070ea0 <line:12:4, col:11>
|   | |     `-RecoveryExpr 0x123070e80 <col:11> '<dependent type>' contains-errors lvalue
|   | `-IfStmt 0x1230777c0 <line:13:9, line:28:2> has_else
|   |   |-BinaryOperator 0x123076c20 <line:13:13, col:52> 'int' contains-errors '=='
|   |   | |-CallExpr 0x123070fc0 <col:13, col:47> '<dependent type>' contains-errors
|   |   | | |-DeclRefExpr 0x123070ef0 <col:13> 'int (const char *, const char *)' Function 0x123070680 'strcasecmp' 'int (const char *, const char *)'
|   |   | | |-RecoveryExpr 0x123070f48 <col:24, col:32> '<dependent type>' contains-errors lvalue
|   |   | | | `-DeclRefExpr 0x123070f10 <col:24> 'struct imap_client *' lvalue Var 0x123070218 'client' 'struct imap_client *'
|   |   | | `-StringLiteral 0x123070f70 <col:42> 'char[4]' lvalue "STR"
|   |   | `-IntegerLiteral 0x123076c00 <col:52> 'int' 0
|   |   |-CompoundStmt 0x123077000 <col:55, line:20:2>
|   |   | |-BinaryOperator 0x123076e08 <line:15:3, col:22> 'int' '='
|   |   | | |-DeclRefExpr 0x123076c40 <col:3> 'int' lvalue Var 0x1230705b8 'ret' 'int'
|   |   | | `-CallExpr 0x123076dc8 <col:9, col:22> 'int'
|   |   | |   |-ImplicitCastExpr 0x123076db0 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | |   | `-DeclRefExpr 0x123076d40 <col:9> 'int ()' Function 0x123076c88 'cmd_id' 'int ()'
|   |   | |   `-ImplicitCastExpr 0x123076df0 <col:16> 'struct imap_client *' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x123076d60 <col:16> 'struct imap_client *' lvalue Var 0x123070218 'client' 'struct imap_client *'
|   |   | |-IfStmt 0x123076ee8 <line:16:3, line:17:11>
|   |   | | |-BinaryOperator 0x123076e80 <line:16:7, col:14> 'int' '=='
|   |   | | | |-ImplicitCastExpr 0x123076e68 <col:7> 'int' <LValueToRValue>
|   |   | | | | `-DeclRefExpr 0x123076e28 <col:7> 'int' lvalue Var 0x1230705b8 'ret' 'int'
|   |   | | | `-IntegerLiteral 0x123076e48 <col:14> 'int' 0
|   |   | | `-ReturnStmt 0x123076ed8 <line:17:4, col:11>
|   |   | |   `-RecoveryExpr 0x123076eb8 <col:11> '<dependent type>' contains-errors lvalue
|   |   | `-IfStmt 0x123076fe0 <line:18:3, line:19:10>
|   |   |   |-BinaryOperator 0x123076f60 <line:18:7, col:13> 'int' '<'
|   |   |   | |-ImplicitCastExpr 0x123076f48 <col:7> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x123076f08 <col:7> 'int' lvalue Var 0x1230705b8 'ret' 'int'
|   |   |   | `-IntegerLiteral 0x123076f28 <col:13> 'int' 0
|   |   |   `-BinaryOperator 0x123076fc0 <line:19:4, col:10> 'int' '='
|   |   |     |-DeclRefExpr 0x123076f80 <col:4> 'int' lvalue Var 0x1230705b8 'ret' 'int'
|   |   |     `-IntegerLiteral 0x123076fa0 <col:10> 'int' 1
|   |   `-CompoundStmt 0x123077790 <line:20:9, line:28:2>
|   |     |-BinaryOperator 0x123077268 <line:21:3, col:43> 'int' '='
|   |     | |-DeclRefExpr 0x123077028 <col:3> 'int' lvalue Var 0x1230705b8 'ret' 'int'
|   |     | `-CallExpr 0x123077220 <col:9, col:43> 'int'
|   |     |   |-ImplicitCastExpr 0x123077208 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |     |   | `-DeclRefExpr 0x123077128 <col:9> 'int ()' Function 0x123077070 'client_parse_command' 'int ()'
|   |     |   |-ImplicitCastExpr 0x123077250 <col:30> 'struct imap_client *' <LValueToRValue>
|   |     |   | `-DeclRefExpr 0x123077148 <col:30> 'struct imap_client *' lvalue Var 0x123070218 'client' 'struct imap_client *'
|   |     |   `-UnaryOperator 0x1230771f0 <col:38, col:39> 'const struct imap_arg **' prefix '&' cannot overflow
|   |     |     `-DeclRefExpr 0x123077168 <col:39> 'const struct imap_arg *' lvalue Var 0x123070508 'args' 'const struct imap_arg *'
|   |     |-IfStmt 0x123077348 <line:22:3, line:23:11>
|   |     | |-BinaryOperator 0x1230772e0 <line:22:7, col:13> 'int' '<'
|   |     | | |-ImplicitCastExpr 0x1230772c8 <col:7> 'int' <LValueToRValue>
|   |     | | | `-DeclRefExpr 0x123077288 <col:7> 'int' lvalue Var 0x1230705b8 'ret' 'int'
|   |     | | `-IntegerLiteral 0x1230772a8 <col:13> 'int' 0
|   |     | `-ReturnStmt 0x123077338 <line:23:4, col:11>
|   |     |   `-RecoveryExpr 0x123077318 <col:11> '<dependent type>' contains-errors lvalue
|   |     |-IfStmt 0x123077428 <line:24:3, line:25:11>
|   |     | |-BinaryOperator 0x1230773c0 <line:24:7, col:14> 'int' '=='
|   |     | | |-ImplicitCastExpr 0x1230773a8 <col:7> 'int' <LValueToRValue>
|   |     | | | `-DeclRefExpr 0x123077368 <col:7> 'int' lvalue Var 0x1230705b8 'ret' 'int'
|   |     | | `-IntegerLiteral 0x123077388 <col:14> 'int' 0
|   |     | `-ReturnStmt 0x123077418 <line:25:4, col:11>
|   |     |   `-RecoveryExpr 0x1230773f8 <col:11> '<dependent type>' contains-errors lvalue
|   |     `-BinaryOperator 0x123077770 <line:26:3, line:27:57> 'int' contains-errors '='
|   |       |-DeclRefExpr 0x123077448 <line:26:3> 'int' lvalue Var 0x1230705b8 'ret' 'int'
|   |       `-ConditionalOperator 0x123077740 <col:9, line:27:57> '<dependent type>' contains-errors
|   |         |-BinaryOperator 0x123077510 <line:26:9, col:29> 'int' contains-errors '=='
|   |         | |-UnaryOperator 0x1230774e0 <col:9, col:18> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |         | | `-ImplicitCastExpr 0x1230774c8 <col:10, col:18> '<dependent type>' contains-errors <LValueToRValue>
|   |         | |   `-RecoveryExpr 0x1230774a0 <col:10, col:18> '<dependent type>' contains-errors lvalue
|   |         | |     `-DeclRefExpr 0x123077468 <col:10> 'struct imap_client *' lvalue Var 0x123070218 'client' 'struct imap_client *'
|   |         | `-CharacterLiteral 0x1230774f8 <col:29> 'int' 0
|   |         |-UnaryOperator 0x123077550 <col:36, col:37> 'int' prefix '-'
|   |         | `-IntegerLiteral 0x123077530 <col:37> 'int' 1
|   |         `-CallExpr 0x123077708 <line:27:4, col:57> '<dependent type>' contains-errors
|   |           |-DeclRefExpr 0x123077648 <col:4> 'int ()' Function 0x123077590 'client_command_execute' 'int ()'
|   |           |-DeclRefExpr 0x123077668 <col:27> 'struct imap_client *' lvalue Var 0x123070218 'client' 'struct imap_client *'
|   |           |-RecoveryExpr 0x1230776c0 <col:35, col:43> '<dependent type>' contains-errors lvalue
|   |           | `-DeclRefExpr 0x123077688 <col:35> 'struct imap_client *' lvalue Var 0x123070218 'client' 'struct imap_client *'
|   |           `-DeclRefExpr 0x1230776e8 <col:53> 'const struct imap_arg *' lvalue Var 0x123070508 'args' 'const struct imap_arg *'
|   |-BinaryOperator 0x1230778d8 <line:30:2, col:25> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x123077858 <col:2, col:10> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x123077820 <col:2> 'struct imap_client *' lvalue Var 0x123070218 'client' 'struct imap_client *'
|   | `-RecoveryExpr 0x1230778b8 <col:25> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x1228da790 <line:31:2, line:48:2> has_else
|   | |-BinaryOperator 0x123077ac8 <line:31:6, col:57> 'int' contains-errors '&&'
|   | | |-BinaryOperator 0x123077968 <col:6, col:14> 'int' '=='
|   | | | |-ImplicitCastExpr 0x123077950 <col:6> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1230778f8 <col:6> 'int' lvalue Var 0x1230705b8 'ret' 'int'
|   | | | `-UnaryOperator 0x123077938 <col:13, col:14> 'int' prefix '-'
|   | | |   `-IntegerLiteral 0x123077918 <col:14> 'int' 2
|   | | `-BinaryOperator 0x123077aa8 <col:19, col:57> 'int' contains-errors '=='
|   | |   |-CallExpr 0x123077a58 <col:19, col:52> '<dependent type>' contains-errors
|   | |   | |-DeclRefExpr 0x123077988 <col:19> 'int (const char *, const char *)' Function 0x123070680 'strcasecmp' 'int (const char *, const char *)'
|   | |   | |-RecoveryExpr 0x1230779e0 <col:30, col:38> '<dependent type>' contains-errors lvalue
|   | |   | | `-DeclRefExpr 0x1230779a8 <col:30> 'struct imap_client *' lvalue Var 0x123070218 'client' 'struct imap_client *'
|   | |   | `-StringLiteral 0x123077a08 <col:47> 'char[4]' lvalue "STR"
|   | |   `-IntegerLiteral 0x123077a88 <col:57> 'int' 0
|   | |-CompoundStmt 0x1228da0f0 <col:60, line:36:2>
|   | `-IfStmt 0x1228da770 <col:9, line:48:2>
|   |   |-BinaryOperator 0x1228da158 <line:36:13, col:19> 'int' '<'
|   |   | |-ImplicitCastExpr 0x1228da140 <col:13> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1228da100 <col:13> 'int' lvalue Var 0x1230705b8 'ret' 'int'
|   |   | `-IntegerLiteral 0x1228da120 <col:19> 'int' 0
|   |   `-CompoundStmt 0x1228da750 <col:22, line:48:2>
|   |     |-IfStmt 0x1228da2e0 <line:37:3, line:38:22>
|   |     | |-BinaryOperator 0x1228da220 <line:37:7, col:27> 'int' contains-errors '=='
|   |     | | |-UnaryOperator 0x1228da1f0 <col:7, col:16> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |     | | | `-ImplicitCastExpr 0x1228da1d8 <col:8, col:16> '<dependent type>' contains-errors <LValueToRValue>
|   |     | | |   `-RecoveryExpr 0x1228da1b0 <col:8, col:16> '<dependent type>' contains-errors lvalue
|   |     | | |     `-DeclRefExpr 0x1228da178 <col:8> 'struct imap_client *' lvalue Var 0x123070218 'client' 'struct imap_client *'
|   |     | | `-CharacterLiteral 0x1228da208 <col:27> 'int' 0
|   |     | `-BinaryOperator 0x1228da2c0 <line:38:4, col:22> '<dependent type>' contains-errors '='
|   |     |   |-RecoveryExpr 0x1228da278 <col:4, col:12> '<dependent type>' contains-errors lvalue
|   |     |   | `-DeclRefExpr 0x1228da240 <col:4> 'struct imap_client *' lvalue Var 0x123070218 'client' 'struct imap_client *'
|   |     |   `-StringLiteral 0x1228da2a0 <col:22> 'char[4]' lvalue "STR"
|   |     `-IfStmt 0x1228da678 <line:39:3, line:45:3>
|   |       |-RecoveryExpr 0x1228da3c0 <line:39:7, col:39> '_Bool' contains-errors
|   |       `-CompoundStmt 0x1228da660 <col:64, line:45:3>
|   |         `-CallExpr 0x1228da630 <line:42:4, line:43:10> '<dependent type>' contains-errors
|   |           |-DeclRefExpr 0x1228da578 <line:42:4> 'int ()' Function 0x1228da4c0 'client_destroy' 'int ()'
|   |           |-UnaryOperator 0x1228da5f8 <col:19, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |           | `-RecoveryExpr 0x1228da5d0 <col:20, col:28> '<dependent type>' contains-errors lvalue
|   |           |   `-DeclRefExpr 0x1228da598 <col:20> 'struct imap_client *' lvalue Var 0x123070218 'client' 'struct imap_client *'
|   |           `-StringLiteral 0x1228da610 <line:43:5> 'char[4]' lvalue "STR"
|   `-ReturnStmt 0x1228da930 <line:50:2, col:37>
|     `-BinaryOperator 0x1228da910 <col:9, col:37> 'int' contains-errors '&&'
|       |-BinaryOperator 0x1228da818 <col:9, col:16> 'int' '!='
|       | |-ImplicitCastExpr 0x1228da800 <col:9> 'int' <LValueToRValue>
|       | | `-DeclRefExpr 0x1228da7c0 <col:9> 'int' lvalue Var 0x1230705b8 'ret' 'int'
|       | `-IntegerLiteral 0x1228da7e0 <col:16> 'int' 0
|       `-UnaryOperator 0x1228da8f8 <col:21, col:37> '<dependent type>' contains-errors prefix '!' cannot overflow
|         `-ImplicitCastExpr 0x1228da8e0 <col:22, col:37> '<dependent type>' contains-errors <LValueToRValue>
|           `-CXXDependentScopeMemberExpr 0x1228da898 <col:22, col:37> '<dependent type>' contains-errors lvalue .destroyed
|             `-RecoveryExpr 0x1228da870 <col:22, col:30> '<dependent type>' contains-errors lvalue
|               `-DeclRefExpr 0x1228da838 <col:22> 'struct imap_client *' lvalue Var 0x123070218 'client' 'struct imap_client *'
`-FunctionDecl 0x123070680 <line:8:6> col:6 implicit used strcasecmp 'int (const char *, const char *)' extern
  |-ParmVarDecl 0x123070780 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x1230707e8 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x123070728 <<invalid sloc>> Implicit 957
