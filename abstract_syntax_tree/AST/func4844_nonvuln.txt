TranslationUnitDecl 0x13e055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13e0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13e055bd0 '__int128'
|-TypedefDecl 0x13e056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13e055bf0 'unsigned __int128'
|-TypedefDecl 0x13e80be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13e80bc00 'struct __NSConstantString_tag'
|   `-Record 0x13e056580 '__NSConstantString_tag'
|-TypedefDecl 0x13e80be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13e055d90 '__SVInt8_t'
|-TypedefDecl 0x13e80bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13e055db0 '__SVInt16_t'
|-TypedefDecl 0x13e80bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13e055dd0 '__SVInt32_t'
|-TypedefDecl 0x13e80bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13e055df0 '__SVInt64_t'
|-TypedefDecl 0x13e80c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13e055e10 '__SVUint8_t'
|-TypedefDecl 0x13e80c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13e055e30 '__SVUint16_t'
|-TypedefDecl 0x13e80c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13e055e50 '__SVUint32_t'
|-TypedefDecl 0x13e80c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13e055e70 '__SVUint64_t'
|-TypedefDecl 0x13e80c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13e055e90 '__SVFloat16_t'
|-TypedefDecl 0x13e80c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13e055eb0 '__SVFloat32_t'
|-TypedefDecl 0x13e80c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13e055ed0 '__SVFloat64_t'
|-TypedefDecl 0x13e80c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13e055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13e80c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13e055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13e80c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13e055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13e80c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13e055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13e80c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13e055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13e80c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13e055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13e80c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13e055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13e80c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13e055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13e80c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13e055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13e80c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13e056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13e80c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13e056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13e80c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13e056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13e80c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13e056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13e80c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13e056090 '__clang_svint8x3_t'
|-TypedefDecl 0x13e80c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13e0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13e80c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13e0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13e80c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13e0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13e80c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13e056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13e80ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13e056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13e80cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13e056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13e80cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13e056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13e80cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13e056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13e80d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13e0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13e80d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13e0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13e80d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13e0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13e80d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13e056210 '__clang_svint8x4_t'
|-TypedefDecl 0x13e80d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13e056230 '__clang_svint16x4_t'
|-TypedefDecl 0x13e80d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13e056250 '__clang_svint32x4_t'
|-TypedefDecl 0x13e80d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13e056270 '__clang_svint64x4_t'
|-TypedefDecl 0x13e80d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13e056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13e80d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13e0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13e80d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13e0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13e80d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13e0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13e80d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13e056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13e80d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13e056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13e80d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13e056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13e80d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13e056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13e80da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13e056390 '__SVBool_t'
|-TypedefDecl 0x13e80da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13e0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13e80dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13e0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13e80db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13e0563f0 '__SVCount_t'
|-TypedefDecl 0x13e80dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13e80dbb0 'char *'
|   `-BuiltinType 0x13e0556b0 'char'
|-TypedefDecl 0x13e80dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13e80dbb0 'char *'
|   `-BuiltinType 0x13e0556b0 'char'
`-FunctionDecl 0x13e80ddf8 <dataset_diviso_filec/func4844_nonvuln.c:1:1, line:33:1> line:1:1 invalid ex_resize 'int (int *)'
  |-ParmVarDecl 0x13e80dd28 <col:11, col:20> col:20 invalid eap 'int *'
  `-CompoundStmt 0x13e82a8c8 <line:2:1, line:33:1>
    |-DeclStmt 0x13e80df28 <line:3:5, col:11>
    | `-VarDecl 0x13e80dec0 <col:5, col:10> col:10 used n 'int'
    |-IfStmt 0x13e8282c8 <line:6:5, line:11:5>
    | |-BinaryOperator 0x13e80dff8 <line:6:9, col:27> 'int' contains-errors '>'
    | | |-CXXDependentScopeMemberExpr 0x13e80df90 <col:9, col:14> '<dependent type>' contains-errors lvalue ->addr_count
    | | | `-RecoveryExpr 0x13e80df70 <col:9> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x13e80dfd8 <col:27> 'int' 0
    | `-CompoundStmt 0x13e8282a8 <line:7:5, line:11:5>
    |   |-BinaryOperator 0x13e80e0a0 <line:8:2, col:11> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x13e80e018 <col:2> 'int' lvalue Var 0x13e80dec0 'n' 'int'
    |   | `-CXXDependentScopeMemberExpr 0x13e80e058 <col:6, col:11> '<dependent type>' contains-errors lvalue ->line2
    |   |   `-RecoveryExpr 0x13e80e038 <col:6> '<dependent type>' contains-errors lvalue
    |   `-ForStmt 0x13e828270 <line:9:2, line:10:6>
    |     |-<<<NULL>>>
    |     |-<<<NULL>>>
    |     |-BinaryOperator 0x13e80e2e8 <line:9:22, col:50> 'int' contains-errors '&&'
    |     | |-BinaryOperator 0x13e80e2c8 <col:22, col:36> 'int' contains-errors '!='
    |     | | |-CXXDependentScopeMemberExpr 0x13e80e260 <col:22, col:26> '<dependent type>' contains-errors lvalue ->w_next
    |     | | | `-RecoveryExpr 0x13e80e240 <col:22> '<dependent type>' contains-errors lvalue
    |     | | `-RecoveryExpr 0x13e80e2a8 <col:36> '<dependent type>' contains-errors lvalue
    |     | `-BinaryOperator 0x13e80e200 <col:44, col:50> 'int' '>'
    |     |   |-UnaryOperator 0x13e80e1c8 <col:44, col:46> 'int' prefix '--'
    |     |   | `-DeclRefExpr 0x13e80e1a8 <col:46> 'int' lvalue Var 0x13e80dec0 'n' 'int'
    |     |   `-IntegerLiteral 0x13e80e1e0 <col:50> 'int' 0
    |     |-BinaryOperator 0x13e828248 <col:53, col:62> '<dependent type>' contains-errors '='
    |     | |-RecoveryExpr 0x13e80e3a0 <col:53> '<dependent type>' contains-errors lvalue
    |     | `-CXXDependentScopeMemberExpr 0x13e828200 <col:58, col:62> '<dependent type>' contains-errors lvalue ->w_next
    |     |   `-RecoveryExpr 0x13e80e3c0 <col:58> '<dependent type>' contains-errors lvalue
    |     `-NullStmt 0x13e828268 <line:10:6>
    |-BinaryOperator 0x13e8285a0 <line:16:5, col:30> 'int' contains-errors '='
    | |-DeclRefExpr 0x13e8282e8 <col:5> 'int' lvalue Var 0x13e80dec0 'n' 'int'
    | `-CallExpr 0x13e828578 <col:9, col:30> 'int' contains-errors
    |   |-ImplicitCastExpr 0x13e828560 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x13e828460 <col:9> 'int ()' Function 0x13e8283a8 'atol' 'int ()'
    |   `-CStyleCastExpr 0x13e828500 <col:14, col:27> 'char *' contains-errors <Dependent>
    |     `-CXXDependentScopeMemberExpr 0x13e8284a0 <col:22, col:27> '<dependent type>' contains-errors lvalue ->arg
    |       `-RecoveryExpr 0x13e828480 <col:22> '<dependent type>' contains-errors lvalue
    `-IfStmt 0x13e82a898 <line:17:5, line:32:5> has_else
      |-BinaryOperator 0x13e8286e0 <line:17:9, col:29> '<dependent type>' contains-errors '&'
      | |-CXXDependentScopeMemberExpr 0x13e828678 <col:9, col:16> '<dependent type>' contains-errors lvalue .cmod_split
      | | `-RecoveryExpr 0x13e828658 <col:9> '<dependent type>' contains-errors lvalue
      | `-RecoveryExpr 0x13e8286c0 <col:29> '<dependent type>' contains-errors lvalue
      |-CompoundStmt 0x13e829048 <line:18:5, line:24:5>
      | |-IfStmt 0x13e828d58 <line:19:2, line:22:10> has_else
      | | |-BinaryOperator 0x13e8288a0 <line:19:6, col:39> 'int' contains-errors '||'
      | | | |-BinaryOperator 0x13e8287b0 <col:6, col:19> 'int' contains-errors '=='
      | | | | |-UnaryOperator 0x13e828780 <col:6, col:12> '<dependent type>' contains-errors prefix '*' cannot overflow
      | | | | | `-ImplicitCastExpr 0x13e828768 <col:7, col:12> '<dependent type>' contains-errors <LValueToRValue>
      | | | | |   `-CXXDependentScopeMemberExpr 0x13e828720 <col:7, col:12> '<dependent type>' contains-errors lvalue ->arg
      | | | | |     `-RecoveryExpr 0x13e828700 <col:7> '<dependent type>' contains-errors lvalue
      | | | | `-CharacterLiteral 0x13e828798 <col:19> 'int' 45
      | | | `-BinaryOperator 0x13e828880 <col:26, col:39> 'int' contains-errors '=='
      | | |   |-UnaryOperator 0x13e828850 <col:26, col:32> '<dependent type>' contains-errors prefix '*' cannot overflow
      | | |   | `-ImplicitCastExpr 0x13e828838 <col:27, col:32> '<dependent type>' contains-errors <LValueToRValue>
      | | |   |   `-CXXDependentScopeMemberExpr 0x13e8287f0 <col:27, col:32> '<dependent type>' contains-errors lvalue ->arg
      | | |   |     `-RecoveryExpr 0x13e8287d0 <col:27> '<dependent type>' contains-errors lvalue
      | | |   `-CharacterLiteral 0x13e828868 <col:39> 'int' 43
      | | |-CompoundAssignOperator 0x13e8289d8 <line:20:6, col:15> 'int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
      | | | |-DeclRefExpr 0x13e8288c0 <col:6> 'int' lvalue Var 0x13e80dec0 'n' 'int'
      | | | `-CXXDependentScopeMemberExpr 0x13e828990 <col:11, col:15> '<dependent type>' contains-errors lvalue ->w_width
      | | |   `-RecoveryExpr 0x13e828970 <col:11> '<dependent type>' contains-errors lvalue
      | | `-IfStmt 0x13e828d38 <line:21:7, line:22:10>
      | |   |-BinaryOperator 0x13e828cb8 <line:21:11, col:36> 'int' contains-errors '&&'
      | |   | |-BinaryOperator 0x13e828c20 <col:11, col:16> 'int' '=='
      | |   | | |-ImplicitCastExpr 0x13e828c08 <col:11> 'int' <LValueToRValue>
      | |   | | | `-DeclRefExpr 0x13e828a08 <col:11> 'int' lvalue Var 0x13e80dec0 'n' 'int'
      | |   | | `-IntegerLiteral 0x13e828a28 <col:16> 'int' 0
      | |   | `-BinaryOperator 0x13e828c98 <col:21, col:36> 'int' contains-errors '=='
      | |   |   |-ArraySubscriptExpr 0x13e828c58 <col:21, col:31> '<dependent type>' contains-errors lvalue
      | |   |   | |-ImplicitCastExpr 0x13e828c40 <col:21, col:26> '<dependent type>' contains-errors <LValueToRValue>
      | |   |   | | `-CXXDependentScopeMemberExpr 0x13e828aa0 <col:21, col:26> '<dependent type>' contains-errors lvalue ->arg
      | |   |   | |   `-RecoveryExpr 0x13e828a80 <col:21> '<dependent type>' contains-errors lvalue
      | |   |   | `-IntegerLiteral 0x13e828ae8 <col:30> 'int' 0
      | |   |   `-RecoveryExpr 0x13e828c78 <col:36> '<dependent type>' contains-errors lvalue
      | |   `-BinaryOperator 0x13e828d18 <line:22:6, col:10> 'int' '='
      | |     |-DeclRefExpr 0x13e828cd8 <col:6> 'int' lvalue Var 0x13e80dec0 'n' 'int'
      | |     `-IntegerLiteral 0x13e828cf8 <col:10> 'int' 9999
      | `-CallExpr 0x13e829018 <line:23:2, col:29> '<dependent type>' contains-errors
      |   |-DeclRefExpr 0x13e828e68 <col:2> 'int ()' Function 0x13e828db0 'win_setwidth_win' 'int ()'
      |   |-CStyleCastExpr 0x13e828fd0 <col:19, col:24> 'int' <NoOp>
      |   | `-ImplicitCastExpr 0x13e828fb8 <col:24> 'int' <LValueToRValue> part_of_explicit_cast
      |   |   `-DeclRefExpr 0x13e828e88 <col:24> 'int' lvalue Var 0x13e80dec0 'n' 'int'
      |   `-RecoveryExpr 0x13e828ff8 <col:27> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x13e82a880 <line:26:5, line:32:5>
        `-IfStmt 0x13e82a6d8 <line:27:2, line:30:10> has_else
          |-BinaryOperator 0x13e82a220 <line:27:6, col:39> 'int' contains-errors '||'
          | |-BinaryOperator 0x13e829118 <col:6, col:19> 'int' contains-errors '=='
          | | |-UnaryOperator 0x13e8290e8 <col:6, col:12> '<dependent type>' contains-errors prefix '*' cannot overflow
          | | | `-ImplicitCastExpr 0x13e8290d0 <col:7, col:12> '<dependent type>' contains-errors <LValueToRValue>
          | | |   `-CXXDependentScopeMemberExpr 0x13e829088 <col:7, col:12> '<dependent type>' contains-errors lvalue ->arg
          | | |     `-RecoveryExpr 0x13e829068 <col:7> '<dependent type>' contains-errors lvalue
          | | `-CharacterLiteral 0x13e829100 <col:19> 'int' 45
          | `-BinaryOperator 0x13e82a200 <col:26, col:39> 'int' contains-errors '=='
          |   |-UnaryOperator 0x13e8291b8 <col:26, col:32> '<dependent type>' contains-errors prefix '*' cannot overflow
          |   | `-ImplicitCastExpr 0x13e8291a0 <col:27, col:32> '<dependent type>' contains-errors <LValueToRValue>
          |   |   `-CXXDependentScopeMemberExpr 0x13e829158 <col:27, col:32> '<dependent type>' contains-errors lvalue ->arg
          |   |     `-RecoveryExpr 0x13e829138 <col:27> '<dependent type>' contains-errors lvalue
          |   `-CharacterLiteral 0x13e8291d0 <col:39> 'int' 43
          |-CompoundAssignOperator 0x13e82a358 <line:28:6, col:15> 'int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
          | |-DeclRefExpr 0x13e82a240 <col:6> 'int' lvalue Var 0x13e80dec0 'n' 'int'
          | `-CXXDependentScopeMemberExpr 0x13e82a310 <col:11, col:15> '<dependent type>' contains-errors lvalue ->w_height
          |   `-RecoveryExpr 0x13e82a2f0 <col:11> '<dependent type>' contains-errors lvalue
          `-IfStmt 0x13e82a6b8 <line:29:7, line:30:10>
            |-BinaryOperator 0x13e82a638 <line:29:11, col:36> 'int' contains-errors '&&'
            | |-BinaryOperator 0x13e82a5a0 <col:11, col:16> 'int' '=='
            | | |-ImplicitCastExpr 0x13e82a588 <col:11> 'int' <LValueToRValue>
            | | | `-DeclRefExpr 0x13e82a388 <col:11> 'int' lvalue Var 0x13e80dec0 'n' 'int'
            | | `-IntegerLiteral 0x13e82a3a8 <col:16> 'int' 0
            | `-BinaryOperator 0x13e82a618 <col:21, col:36> 'int' contains-errors '=='
            |   |-ArraySubscriptExpr 0x13e82a5d8 <col:21, col:31> '<dependent type>' contains-errors lvalue
            |   | |-ImplicitCastExpr 0x13e82a5c0 <col:21, col:26> '<dependent type>' contains-errors <LValueToRValue>
            |   | | `-CXXDependentScopeMemberExpr 0x13e82a420 <col:21, col:26> '<dependent type>' contains-errors lvalue ->arg
            |   | |   `-RecoveryExpr 0x13e82a400 <col:21> '<dependent type>' contains-errors lvalue
            |   | `-IntegerLiteral 0x13e82a468 <col:30> 'int' 0
            |   `-RecoveryExpr 0x13e82a5f8 <col:36> '<dependent type>' contains-errors lvalue
            `-BinaryOperator 0x13e82a698 <line:30:6, col:10> 'int' '='
              |-DeclRefExpr 0x13e82a658 <col:6> 'int' lvalue Var 0x13e80dec0 'n' 'int'
              `-IntegerLiteral 0x13e82a678 <col:10> 'int' 9999
