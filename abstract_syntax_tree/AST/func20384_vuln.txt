TranslationUnitDecl 0x14a855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14a8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14a855bd0 '__int128'
|-TypedefDecl 0x14a856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14a855bf0 'unsigned __int128'
|-TypedefDecl 0x14a926a30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14a926800 'struct __NSConstantString_tag'
|   `-Record 0x14a856580 '__NSConstantString_tag'
|-TypedefDecl 0x14a926a98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14a855d90 '__SVInt8_t'
|-TypedefDecl 0x14a926b00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14a855db0 '__SVInt16_t'
|-TypedefDecl 0x14a926b68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14a855dd0 '__SVInt32_t'
|-TypedefDecl 0x14a926bd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14a855df0 '__SVInt64_t'
|-TypedefDecl 0x14a926c38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14a855e10 '__SVUint8_t'
|-TypedefDecl 0x14a926ca0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14a855e30 '__SVUint16_t'
|-TypedefDecl 0x14a926d08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14a855e50 '__SVUint32_t'
|-TypedefDecl 0x14a926d70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14a855e70 '__SVUint64_t'
|-TypedefDecl 0x14a926dd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14a855e90 '__SVFloat16_t'
|-TypedefDecl 0x14a926e40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14a855eb0 '__SVFloat32_t'
|-TypedefDecl 0x14a926ea8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14a855ed0 '__SVFloat64_t'
|-TypedefDecl 0x14a926f10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14a855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14a926f78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14a855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14a926fe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14a855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14a927048 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14a855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14a9270b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14a855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14a927118 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14a855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14a927180 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14a855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14a9271e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14a855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14a927250 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14a855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14a9272b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14a856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14a927320 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14a856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14a927388 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14a856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14a9273f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14a856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14a927458 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14a856090 '__clang_svint8x3_t'
|-TypedefDecl 0x14a9274c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14a8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14a927528 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14a8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14a927590 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14a8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14a9275f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14a856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14a927660 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14a856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14a9276c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14a856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14a927730 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14a856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14a927798 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14a856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14a928000 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14a8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14a928068 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14a8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14a9280d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14a8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14a928138 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14a856210 '__clang_svint8x4_t'
|-TypedefDecl 0x14a9281a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14a856230 '__clang_svint16x4_t'
|-TypedefDecl 0x14a928208 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14a856250 '__clang_svint32x4_t'
|-TypedefDecl 0x14a928270 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14a856270 '__clang_svint64x4_t'
|-TypedefDecl 0x14a9282d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14a856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14a928340 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14a8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14a9283a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14a8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14a928410 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14a8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14a928478 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14a856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14a9284e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14a856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14a928548 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14a856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14a9285b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14a856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14a928618 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14a856390 '__SVBool_t'
|-TypedefDecl 0x14a928680 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14a8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14a9286e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14a8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14a928750 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14a8563f0 '__SVCount_t'
|-TypedefDecl 0x14a9287f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14a9287b0 'char *'
|   `-BuiltinType 0x14a8556b0 'char'
|-TypedefDecl 0x14a928868 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14a9287b0 'char *'
|   `-BuiltinType 0x14a8556b0 'char'
|-FunctionDecl 0x14a928ae8 <dataset_diviso_filec/func20384_vuln.c:1:1, line:90:1> line:1:5 invalid gnutls_x509_ext_import_crl_dist_points 'int (const int *, int, unsigned int)'
| |-ParmVarDecl 0x14a9288f0 <col:44, col:67> col:67 invalid ext 'const int *'
| |-ParmVarDecl 0x14a928970 <line:2:6, col:36> col:36 invalid cdp 'int'
| |-ParmVarDecl 0x14a9289f0 <line:3:6, col:19> col:19 flags 'unsigned int'
| `-CompoundStmt 0x14b80b6d0 <line:4:1, line:90:1>
|   |-DeclStmt 0x14a928c28 <line:5:2, col:12>
|   | `-VarDecl 0x14a928bc0 <col:2, col:6> col:6 used result 'int'
|   |-DeclStmt 0x14a928cd0 <line:7:2, col:31>
|   | `-VarDecl 0x14a928c68 <col:2, col:7> col:7 invalid name 'char'
|   |-DeclStmt 0x14a928e00 <line:8:2, col:14>
|   | |-VarDecl 0x14a928d00 <col:2, col:6> col:6 used len 'int'
|   | `-VarDecl 0x14a928d80 <col:2, col:11> col:11 used ret 'int'
|   |-DeclStmt 0x14a942090 <line:10:2, col:29>
|   | |-VarDecl 0x14a928e30 <col:2, col:11> col:11 used i 'unsigned int'
|   | |-VarDecl 0x14a928eb0 <col:2, col:14> col:14 used type 'unsigned int'
|   | |-VarDecl 0x14a928f30 <col:2, col:20> col:20 used rflags 'unsigned int'
|   | `-VarDecl 0x14a942000 <col:2, col:28> col:28 used j 'unsigned int'
|   |-BinaryOperator 0x14a942578 <line:13:2, line:14:37> 'int' contains-errors '='
|   | |-DeclRefExpr 0x14a9420a8 <line:13:2> 'int' lvalue Var 0x14a928bc0 'result' 'int'
|   | `-CallExpr 0x14a942540 <col:11, line:14:37> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x14a942220 <line:13:11> 'int ()' Function 0x14a942168 'asn1_create_element' 'int ()'
|   |   |-CallExpr 0x14a9424e8 <line:14:7, col:24> 'int'
|   |   | `-ImplicitCastExpr 0x14a9424d0 <col:7> 'int (*)()' <FunctionToPointerDecay>
|   |   |   `-DeclRefExpr 0x14a942320 <col:7> 'int ()' Function 0x14a942268 '_gnutls_get_pkix' 'int ()'
|   |   |-StringLiteral 0x14a9423f0 <col:27> 'char[4]' lvalue "STR"
|   |   `-UnaryOperator 0x14a942528 <col:34, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     `-RecoveryExpr 0x14a942508 <col:35> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x14a942910 <line:15:2, line:18:2>
|   | |-BinaryOperator 0x14a942610 <line:15:6, col:16> 'int' contains-errors '!='
|   | | |-DeclRefExpr 0x14a942598 <col:6> 'int' lvalue Var 0x14a928bc0 'result' 'int'
|   | | `-RecoveryExpr 0x14a9425f0 <col:16> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x14a9428f0 <col:30, line:18:2>
|   |   |-CallExpr 0x14a942748 <line:16:3, col:17> 'int'
|   |   | `-ImplicitCastExpr 0x14a942730 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   |   `-DeclRefExpr 0x14a942710 <col:3> 'int ()' Function 0x14a942658 'gnutls_assert' 'int ()'
|   |   `-ReturnStmt 0x14a9428e0 <line:17:3, col:32>
|   |     `-CallExpr 0x14a9428a0 <col:10, col:32> 'int'
|   |       |-ImplicitCastExpr 0x14a942888 <col:10> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x14a942848 <col:10> 'int ()' Function 0x14a942790 '_gnutls_asn2err' 'int ()'
|   |       `-ImplicitCastExpr 0x14a9428c8 <col:26> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x14a942868 <col:26> 'int' lvalue Var 0x14a928bc0 'result' 'int'
|   |-BinaryOperator 0x14a942c60 <line:20:2, col:60> 'int' contains-errors '='
|   | |-DeclRefExpr 0x14a942930 <col:2> 'int' lvalue Var 0x14a928bc0 'result' 'int'
|   | `-CallExpr 0x14a942c20 <col:11, col:60> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x14a942a30 <col:11> 'int ()' Function 0x14a942978 'asn1_der_decoding' 'int ()'
|   |   |-UnaryOperator 0x14a942be8 <col:29, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   | `-RecoveryExpr 0x14a942bc8 <col:30> '<dependent type>' contains-errors lvalue
|   |   |-CXXDependentScopeMemberExpr 0x14a942aa0 <col:34, col:39> '<dependent type>' contains-errors lvalue ->data
|   |   | `-RecoveryExpr 0x14a942a80 <col:34> '<dependent type>' contains-errors lvalue
|   |   |-CXXDependentScopeMemberExpr 0x14a942b08 <col:45, col:50> '<dependent type>' contains-errors lvalue ->size
|   |   | `-RecoveryExpr 0x14a942ae8 <col:45> '<dependent type>' contains-errors lvalue
|   |   `-RecoveryExpr 0x14a942c00 <col:56> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x14a942ed8 <line:22:2, line:26:2>
|   | |-BinaryOperator 0x14a942cf8 <line:22:6, col:16> 'int' contains-errors '!='
|   | | |-DeclRefExpr 0x14a942c80 <col:6> 'int' lvalue Var 0x14a928bc0 'result' 'int'
|   | | `-RecoveryExpr 0x14a942cd8 <col:16> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x14a942eb0 <col:30, line:26:2>
|   |   |-CallExpr 0x14a942d50 <line:23:3, col:17> 'int'
|   |   | `-ImplicitCastExpr 0x14a942d38 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   |   `-DeclRefExpr 0x14a942d18 <col:3> 'int ()' Function 0x14a942658 'gnutls_assert' 'int ()'
|   |   |-BinaryOperator 0x14a942e28 <line:24:3, col:31> 'int' '='
|   |   | |-DeclRefExpr 0x14a942d70 <col:3> 'int' lvalue Var 0x14a928d80 'ret' 'int'
|   |   | `-CallExpr 0x14a942de8 <col:9, col:31> 'int'
|   |   |   |-ImplicitCastExpr 0x14a942dd0 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x14a942d90 <col:9> 'int ()' Function 0x14a942790 '_gnutls_asn2err' 'int ()'
|   |   |   `-ImplicitCastExpr 0x14a942e10 <col:25> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x14a942db0 <col:25> 'int' lvalue Var 0x14a928bc0 'result' 'int'
|   |   `-GotoStmt 0x14a942e98 <line:25:3, col:8> 'cleanup' 0x14a942e48
|   |-BinaryOperator 0x14a942f50 <line:30:2, col:6> 'unsigned int' '='
|   | |-DeclRefExpr 0x14a942ef8 <col:2> 'unsigned int' lvalue Var 0x14a928e30 'i' 'unsigned int'
|   | `-ImplicitCastExpr 0x14a942f38 <col:6> 'unsigned int' <IntegralCast>
|   |   `-IntegerLiteral 0x14a942f18 <col:6> 'int' 0
|   |-DoStmt 0x14b80b278 <line:31:2, line:78:19>
|   | |-CompoundStmt 0x14b80b1b8 <line:31:5, line:78:2>
|   | | |-CallExpr 0x14b809248 <line:35:3, col:54> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x14b809088 <col:3> 'int (char *, unsigned long, const char *, ...)' Function 0x14b808e00 'snprintf' 'int (char *, unsigned long, const char *, ...)'
|   | | | |-RecoveryExpr 0x14b8090a8 <col:12> '<dependent type>' contains-errors lvalue
|   | | | |-UnaryExprOrTypeTraitExpr 0x14b809108 <col:18, col:29> 'unsigned long' contains-errors sizeof
|   | | | | `-ParenExpr 0x14b8090e8 <col:24, col:29> '<dependent type>' contains-errors lvalue
|   | | | |   `-RecoveryExpr 0x14b8090c8 <col:25> '<dependent type>' contains-errors lvalue
|   | | | |-StringLiteral 0x14b809128 <col:32> 'char[4]' lvalue "STR"
|   | | | `-BinaryOperator 0x14b8091f8 <col:39, col:53> 'unsigned int' '+'
|   | | |   |-CStyleCastExpr 0x14b809198 <col:39, col:49> 'unsigned int' <NoOp>
|   | | |   | `-ImplicitCastExpr 0x14b809180 <col:49> 'unsigned int' <LValueToRValue> part_of_explicit_cast
|   | | |   |   `-DeclRefExpr 0x14b809148 <col:49> 'unsigned int' lvalue Var 0x14a928e30 'i' 'unsigned int'
|   | | |   `-ImplicitCastExpr 0x14b8091e0 <col:53> 'unsigned int' <IntegralCast>
|   | | |     `-IntegerLiteral 0x14b8091c0 <col:53> 'int' 1
|   | | |-IfStmt 0x14b809638 <line:40:3, line:46:3>
|   | | | |-RecoveryExpr 0x14b8094b8 <line:40:7, line:42:17> '_Bool' contains-errors
|   | | | `-CompoundStmt 0x14b809610 <col:31, line:46:3>
|   | | |   |-CallExpr 0x14b809510 <line:43:4, col:18> 'int'
|   | | |   | `-ImplicitCastExpr 0x14b8094f8 <col:4> 'int (*)()' <FunctionToPointerDecay>
|   | | |   |   `-DeclRefExpr 0x14b8094d8 <col:4> 'int ()' Function 0x14a942658 'gnutls_assert' 'int ()'
|   | | |   |-BinaryOperator 0x14b8095e8 <line:44:4, col:32> 'int' '='
|   | | |   | |-DeclRefExpr 0x14b809530 <col:4> 'int' lvalue Var 0x14a928d80 'ret' 'int'
|   | | |   | `-CallExpr 0x14b8095a8 <col:10, col:32> 'int'
|   | | |   |   |-ImplicitCastExpr 0x14b809590 <col:10> 'int (*)()' <FunctionToPointerDecay>
|   | | |   |   | `-DeclRefExpr 0x14b809550 <col:10> 'int ()' Function 0x14a942790 '_gnutls_asn2err' 'int ()'
|   | | |   |   `-ImplicitCastExpr 0x14b8095d0 <col:26> 'int' <LValueToRValue>
|   | | |   |     `-DeclRefExpr 0x14b809570 <col:26> 'int' lvalue Var 0x14a928bc0 'result' 'int'
|   | | |   `-BreakStmt 0x14b809608 <line:45:4>
|   | | |-IfStmt 0x14b8097b8 <line:48:3, line:52:4> has_else
|   | | | |-RecoveryExpr 0x14b809698 <line:48:7, line:49:20> '_Bool' contains-errors
|   | | | |-BinaryOperator 0x14b809710 <line:50:4, col:13> 'unsigned int' '='
|   | | | | |-DeclRefExpr 0x14b8096b8 <col:4> 'unsigned int' lvalue Var 0x14a928f30 'rflags' 'unsigned int'
|   | | | | `-ImplicitCastExpr 0x14b8096f8 <col:13> 'unsigned int' <IntegralCast>
|   | | | |   `-IntegerLiteral 0x14b8096d8 <col:13> 'int' 0
|   | | | `-NullStmt 0x14b8097b0 <line:52:4>
|   | | |-CallExpr 0x14b8099a8 <line:54:3, line:55:27> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x14b8097e8 <line:54:3> 'int (char *, unsigned long, const char *, ...)' Function 0x14b808e00 'snprintf' 'int (char *, unsigned long, const char *, ...)'
|   | | | |-RecoveryExpr 0x14b809808 <col:12> '<dependent type>' contains-errors lvalue
|   | | | |-UnaryExprOrTypeTraitExpr 0x14b809868 <col:18, col:29> 'unsigned long' contains-errors sizeof
|   | | | | `-ParenExpr 0x14b809848 <col:24, col:29> '<dependent type>' contains-errors lvalue
|   | | | |   `-RecoveryExpr 0x14b809828 <col:25> '<dependent type>' contains-errors lvalue
|   | | | |-StringLiteral 0x14b809888 <line:55:5> 'char[4]' lvalue "STR"
|   | | | `-BinaryOperator 0x14b809958 <col:12, col:26> 'unsigned int' '+'
|   | | |   |-CStyleCastExpr 0x14b8098f8 <col:12, col:22> 'unsigned int' <NoOp>
|   | | |   | `-ImplicitCastExpr 0x14b8098e0 <col:22> 'unsigned int' <LValueToRValue> part_of_explicit_cast
|   | | |   |   `-DeclRefExpr 0x14b8098a8 <col:22> 'unsigned int' lvalue Var 0x14a928e30 'i' 'unsigned int'
|   | | |   `-ImplicitCastExpr 0x14b809940 <col:26> 'unsigned int' <IntegralCast>
|   | | |     `-IntegerLiteral 0x14b809920 <col:26> 'int' 1
|   | | |-BinaryOperator 0x14b809a40 <line:57:3, col:7> 'unsigned int' '='
|   | | | |-DeclRefExpr 0x14b8099e8 <col:3> 'unsigned int' lvalue Var 0x14a942000 'j' 'unsigned int'
|   | | | `-ImplicitCastExpr 0x14b809a28 <col:7> 'unsigned int' <IntegralCast>
|   | | |   `-IntegerLiteral 0x14b809a08 <col:7> 'int' 0
|   | | |-DoStmt 0x14b80b160 <line:58:3, line:75:20>
|   | | | |-CompoundStmt 0x14b80b0b8 <line:58:6, line:75:3>
|   | | | | |-IfStmt 0x14b809da0 <line:62:4, line:66:4>
|   | | | | | |-RecoveryExpr 0x14b809cf8 <line:62:8, line:63:18> '_Bool' contains-errors
|   | | | | | `-CompoundStmt 0x14b809d80 <col:57, line:66:4>
|   | | | | |   |-BinaryOperator 0x14b809d58 <line:64:5, col:11> 'int' '='
|   | | | | |   | |-DeclRefExpr 0x14b809d18 <col:5> 'int' lvalue Var 0x14a928d80 'ret' 'int'
|   | | | | |   | `-IntegerLiteral 0x14b809d38 <col:11> 'int' 0
|   | | | | |   `-BreakStmt 0x14b809d78 <line:65:5>
|   | | | | |-IfStmt 0x14b80ae40 <line:67:4, line:68:5>
|   | | | | | |-BinaryOperator 0x14b80ae18 <line:67:8, col:14> 'int' '<'
|   | | | | | | |-ImplicitCastExpr 0x14b80ae00 <col:8> 'int' <LValueToRValue>
|   | | | | | | | `-DeclRefExpr 0x14b809dc0 <col:8> 'int' lvalue Var 0x14a928d80 'ret' 'int'
|   | | | | | | `-IntegerLiteral 0x14b809de0 <col:14> 'int' 0
|   | | | | | `-BreakStmt 0x14b80ae38 <line:68:5>
|   | | | | |-IfStmt 0x14b80b060 <line:71:4, line:72:5>
|   | | | | | |-BinaryOperator 0x14b80b038 <line:71:8, col:14> 'int' '<'
|   | | | | | | |-ImplicitCastExpr 0x14b80b020 <col:8> 'int' <LValueToRValue>
|   | | | | | | | `-DeclRefExpr 0x14b80afe0 <col:8> 'int' lvalue Var 0x14a928d80 'ret' 'int'
|   | | | | | | `-IntegerLiteral 0x14b80b000 <col:14> 'int' 0
|   | | | | | `-BreakStmt 0x14b80b058 <line:72:5>
|   | | | | `-UnaryOperator 0x14b80b0a0 <line:74:4, col:5> 'unsigned int' postfix '++'
|   | | | |   `-DeclRefExpr 0x14b80b080 <col:4> 'unsigned int' lvalue Var 0x14a942000 'j' 'unsigned int'
|   | | | `-BinaryOperator 0x14b80b140 <line:75:12, col:19> 'int' '>='
|   | | |   |-ImplicitCastExpr 0x14b80b128 <col:12> 'int' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x14b80b0e8 <col:12> 'int' lvalue Var 0x14a928d80 'ret' 'int'
|   | | |   `-IntegerLiteral 0x14b80b108 <col:19> 'int' 0
|   | | `-UnaryOperator 0x14b80b1a0 <line:77:3, col:4> 'unsigned int' postfix '++'
|   | |   `-DeclRefExpr 0x14b80b180 <col:3> 'unsigned int' lvalue Var 0x14a928e30 'i' 'unsigned int'
|   | `-BinaryOperator 0x14b80b258 <line:78:11, col:18> 'int' '>='
|   |   |-ImplicitCastExpr 0x14b80b240 <col:11> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x14b80b200 <col:11> 'int' lvalue Var 0x14a928d80 'ret' 'int'
|   |   `-IntegerLiteral 0x14b80b220 <col:18> 'int' 0
|   |-IfStmt 0x14b80b4e0 <line:80:2, line:84:2>
|   | |-RecoveryExpr 0x14b80b330 <line:80:6, col:24> '_Bool' contains-errors
|   | `-CompoundStmt 0x14b80b4c0 <col:63, line:84:2>
|   |   |-CallExpr 0x14b80b388 <line:81:3, col:17> 'int'
|   |   | `-ImplicitCastExpr 0x14b80b370 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   |   `-DeclRefExpr 0x14b80b350 <col:3> 'int ()' Function 0x14a942658 'gnutls_assert' 'int ()'
|   |   `-GotoStmt 0x14b80b4a8 <line:83:3, col:8> 'cleanup' 0x14a942e48
|   |-BinaryOperator 0x14b80b540 <line:86:2, col:8> 'int' '='
|   | |-DeclRefExpr 0x14b80b500 <col:2> 'int' lvalue Var 0x14a928d80 'ret' 'int'
|   | `-IntegerLiteral 0x14b80b520 <col:8> 'int' 0
|   |-LabelStmt 0x14b80b668 <line:87:2, col:9> 'cleanup'
|   | `-NullStmt 0x14b80b660 <col:9>
|   `-ReturnStmt 0x14b80b6c0 <line:89:2, col:9>
|     `-ImplicitCastExpr 0x14b80b6a8 <col:9> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x14b80b688 <col:9> 'int' lvalue Var 0x14a928d80 'ret' 'int'
`-FunctionDecl 0x14b808e00 <line:35:3> col:3 implicit used snprintf 'int (char *, unsigned long, const char *, ...)' extern
  |-ParmVarDecl 0x14b808f00 <<invalid sloc>> <invalid sloc> 'char *'
  |-ParmVarDecl 0x14b808f68 <<invalid sloc>> <invalid sloc> 'unsigned long'
  |-ParmVarDecl 0x14b808fd0 <<invalid sloc>> <invalid sloc> 'const char *'
  |-BuiltinAttr 0x14b808ea8 <<invalid sloc>> Implicit 905
  `-FormatAttr 0x14b809050 <col:3> Implicit printf 3 4
