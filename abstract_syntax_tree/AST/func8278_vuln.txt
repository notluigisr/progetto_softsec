TranslationUnitDecl 0x12a855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12a8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12a855bd0 '__int128'
|-TypedefDecl 0x12a856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12a855bf0 'unsigned __int128'
|-TypedefDecl 0x12a926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12a926000 'struct __NSConstantString_tag'
|   `-Record 0x12a856580 '__NSConstantString_tag'
|-TypedefDecl 0x12a926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12a855d90 '__SVInt8_t'
|-TypedefDecl 0x12a926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12a855db0 '__SVInt16_t'
|-TypedefDecl 0x12a926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12a855dd0 '__SVInt32_t'
|-TypedefDecl 0x12a9263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12a855df0 '__SVInt64_t'
|-TypedefDecl 0x12a926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12a855e10 '__SVUint8_t'
|-TypedefDecl 0x12a9264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12a855e30 '__SVUint16_t'
|-TypedefDecl 0x12a926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12a855e50 '__SVUint32_t'
|-TypedefDecl 0x12a926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12a855e70 '__SVUint64_t'
|-TypedefDecl 0x12a9265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12a855e90 '__SVFloat16_t'
|-TypedefDecl 0x12a926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12a855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12a9266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12a855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12a926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12a855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12a926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12a855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12a9267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12a855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12a926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12a855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12a9268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12a855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12a926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12a855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12a926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12a855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12a9269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12a855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12a926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12a855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12a926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12a856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12a926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12a856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12a926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12a856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12a926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12a856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12a926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12a856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12a926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12a8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12a926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12a8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12a926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12a8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12a926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12a856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12a926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12a856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12a926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12a856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12a926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12a856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12a926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12a856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12a927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12a8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12a927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12a8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12a9278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12a8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12a927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12a856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12a9279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12a856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12a927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12a856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12a927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12a856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12a927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12a856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12a927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12a8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12a927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12a8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12a927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12a8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12a927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12a856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12a927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12a856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12a927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12a856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12a927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12a856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12a927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12a856390 '__SVBool_t'
|-TypedefDecl 0x12a927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12a8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12a927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12a8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12a927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12a8563f0 '__SVCount_t'
|-TypedefDecl 0x12a927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12a927fb0 'char *'
|   `-BuiltinType 0x12a8556b0 'char'
|-TypedefDecl 0x12a928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12a927fb0 'char *'
|   `-BuiltinType 0x12a8556b0 'char'
|-FunctionDecl 0x12a9281a0 <dataset_diviso_filec/func8278_vuln.c:1:1, line:62:1> line:1:13 ssdp_recv 'void (int)' static
| |-ParmVarDecl 0x12a9280d8 <col:23, col:27> col:27 used sd 'int'
| `-CompoundStmt 0x12a946770 <line:2:1, line:62:1>
|   |-DeclStmt 0x12a942048 <line:4:2, col:20>
|   | |-RecordDecl 0x12a9282b0 <col:2, col:9> col:9 struct sockaddr
|   | `-VarDecl 0x12a9283a8 <col:2, col:18> col:18 invalid sa 'struct sockaddr'
|   |-DeclStmt 0x12a9420f0 <line:6:2, col:24>
|   | `-VarDecl 0x12a942088 <col:2, col:7> col:7 referenced invalid buf 'char'
|   |-CallExpr 0x12a942480 <line:8:2, col:28> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x12a9423a8 <col:2> 'void *(void *, int, unsigned long)' Function 0x12a942158 'memset' 'void *(void *, int, unsigned long)'
|   | |-RecoveryExpr 0x12a9423c8 <col:9> '<dependent type>' contains-errors lvalue
|   | |-IntegerLiteral 0x12a9423e8 <col:14> 'int' 0
|   | `-UnaryExprOrTypeTraitExpr 0x12a942448 <col:17, col:27> 'unsigned long' contains-errors sizeof
|   |   `-ParenExpr 0x12a942428 <col:23, col:27> '<dependent type>' contains-errors lvalue
|   |     `-RecoveryExpr 0x12a942408 <col:24> '<dependent type>' contains-errors lvalue
|   `-IfStmt 0x12a946750 <line:10:2, line:61:2>
|     |-BinaryOperator 0x12a9427d8 <line:10:6, col:12> 'int' contains-errors '>'
|     | |-RecoveryExpr 0x12a9427b8 <col:6> '<dependent type>' contains-errors lvalue
|     | `-IntegerLiteral 0x12a942778 <col:12> 'int' 0
|     `-CompoundStmt 0x12a946730 <col:15, line:61:2>
|       |-IfStmt 0x12a942968 <line:13:3, line:14:4>
|       | |-BinaryOperator 0x12a942938 <line:13:7, col:23> 'int' contains-errors '!='
|       | | |-CXXDependentScopeMemberExpr 0x12a942898 <col:7, col:10> '<dependent type>' contains-errors lvalue .sa_family
|       | | | `-RecoveryExpr 0x12a942878 <col:7> '<dependent type>' contains-errors lvalue
|       | | `-RecoveryExpr 0x12a942918 <col:23> '<dependent type>' contains-errors lvalue
|       | `-ReturnStmt 0x12a942958 <line:14:4>
|       `-IfStmt 0x12a946710 <line:16:3, line:60:3>
|         |-CallExpr 0x12a942c80 <line:16:7, col:24> '<dependent type>' contains-errors
|         | |-DeclRefExpr 0x12a942bb0 <col:7> 'char *(const char *, const char *)' Function 0x12a9429d0 'strstr' 'char *(const char *, const char *)'
|         | |-RecoveryExpr 0x12a942bd0 <col:14> '<dependent type>' contains-errors lvalue
|         | `-StringLiteral 0x12a942c30 <col:19> 'char[4]' lvalue "STR"
|         `-CompoundStmt 0x12a946688 <col:27, line:60:3>
|           |-UnaryExprOrTypeTraitExpr 0x12a942d08 <line:17:4, col:11> 'unsigned long' contains-errors sizeof
|           | `-RecoveryExpr 0x12a942ce8 <col:11> '<dependent type>' contains-errors lvalue
|           |-DeclStmt 0x12a942e40 <line:18:4, col:20>
|           | |-VarDecl 0x12a942d40 <col:4, col:10> col:10 used ptr 'char *'
|           | `-VarDecl 0x12a942dc0 <col:4, col:16> col:16 used type 'char *'
|           |-DeclStmt 0x12a943680 <line:19:4, col:22>
|           | |-RecordDecl 0x12a942e58 <col:4, col:11> col:11 struct ifsock
|           | `-VarDecl 0x12a943600 <col:4, col:19> col:19 used ifs 'struct ifsock *'
|           |-DeclStmt 0x12a943978 <line:20:4, col:55>
|           | |-RecordDecl 0x12a943698 <col:4, col:11> col:11 struct sockaddr_in
|           | `-VarDecl 0x12a943808 <col:4, col:53> col:24 used sin 'struct sockaddr_in *' cinit
|           |   `-CStyleCastExpr 0x12a943938 <col:30, col:53> 'struct sockaddr_in *' contains-errors <Dependent>
|           |     `-UnaryOperator 0x12a943890 <col:52, col:53> '<dependent type>' contains-errors prefix '&' cannot overflow
|           |       `-RecoveryExpr 0x12a943870 <col:53> '<dependent type>' contains-errors lvalue
|           |-BinaryOperator 0x12a943b10 <line:22:4, col:27> 'struct ifsock *' contains-errors '='
|           | |-DeclRefExpr 0x12a943990 <col:4> 'struct ifsock *' lvalue Var 0x12a943600 'ifs' 'struct ifsock *'
|           | `-CallExpr 0x12a943ae8 <col:10, col:27> '<dependent type>' contains-errors
|           |   |-DeclRefExpr 0x12a943a90 <col:10> 'int ()' Function 0x12a9439d8 'find_outbound' 'int ()'
|           |   `-UnaryOperator 0x12a943ad0 <col:24, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow
|           |     `-RecoveryExpr 0x12a943ab0 <col:25> '<dependent type>' contains-errors lvalue
|           |-IfStmt 0x12a943f00 <line:23:4, line:26:4>
|           | |-UnaryOperator 0x12a943b68 <line:23:8, col:9> 'int' prefix '!' cannot overflow
|           | | `-ImplicitCastExpr 0x12a943b50 <col:9> 'struct ifsock *' <LValueToRValue>
|           | |   `-DeclRefExpr 0x12a943b30 <col:9> 'struct ifsock *' lvalue Var 0x12a943600 'ifs' 'struct ifsock *'
|           | `-CompoundStmt 0x12a943ee0 <col:14, line:26:4>
|           |   |-CallExpr 0x12a943e98 <line:24:5, col:53> '<dependent type>' contains-errors
|           |   | |-DeclRefExpr 0x12a943c60 <col:5> 'int ()' Function 0x12a943ba8 'logit' 'int ()'
|           |   | |-RecoveryExpr 0x12a943e78 <col:11> '<dependent type>' contains-errors lvalue
|           |   | |-StringLiteral 0x12a943c98 <col:22> 'char[4]' lvalue "STR"
|           |   | `-CallExpr 0x12a943e18 <col:29, col:52> '<dependent type>' contains-errors
|           |   |   |-DeclRefExpr 0x12a943d98 <col:29> 'int ()' Function 0x12a943ce0 'inet_ntoa' 'int ()'
|           |   |   `-RecoveryExpr 0x12a943df0 <col:39, col:44> '<dependent type>' contains-errors lvalue
|           |   |     `-DeclRefExpr 0x12a943db8 <col:39> 'struct sockaddr_in *' contains-errors lvalue Var 0x12a943808 'sin' 'struct sockaddr_in *'
|           |   `-ReturnStmt 0x12a943ed0 <line:25:5>
|           |-BinaryOperator 0x12a944198 <line:29:4, col:32> 'char *' contains-errors '='
|           | |-DeclRefExpr 0x12a944008 <col:4> 'char *' lvalue Var 0x12a942dc0 'type' 'char *'
|           | `-CallExpr 0x12a944168 <col:11, col:32> '<dependent type>' contains-errors
|           |   |-DeclRefExpr 0x12a944108 <col:11> 'int ()' Function 0x12a944050 'strcasestr' 'int ()'
|           |   |-RecoveryExpr 0x12a944128 <col:22> '<dependent type>' contains-errors lvalue
|           |   `-StringLiteral 0x12a944148 <col:27> 'char[4]' lvalue "STR"
|           |-IfStmt 0x12a944448 <line:30:4, line:35:4>
|           | |-UnaryOperator 0x12a9441f0 <line:30:8, col:9> 'int' prefix '!' cannot overflow
|           | | `-ImplicitCastExpr 0x12a9441d8 <col:9> 'char *' <LValueToRValue>
|           | |   `-DeclRefExpr 0x12a9441b8 <col:9> 'char *' lvalue Var 0x12a942dc0 'type' 'char *'
|           | `-CompoundStmt 0x12a944428 <col:15, line:35:4>
|           |   |-CallExpr 0x12a9443e0 <line:33:5, col:32> '<dependent type>' contains-errors
|           |   | |-DeclRefExpr 0x12a944348 <col:5> 'int ()' Function 0x12a944290 'send_message' 'int ()'
|           |   | |-DeclRefExpr 0x12a944368 <col:18> 'struct ifsock *' lvalue Var 0x12a943600 'ifs' 'struct ifsock *'
|           |   | |-DeclRefExpr 0x12a944388 <col:23> 'char *' lvalue Var 0x12a942dc0 'type' 'char *'
|           |   | `-UnaryOperator 0x12a9443c8 <col:29, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow
|           |   |   `-RecoveryExpr 0x12a9443a8 <col:30> '<dependent type>' contains-errors lvalue
|           |   `-ReturnStmt 0x12a944418 <line:34:5>
|           |-BinaryOperator 0x12a9457f8 <line:37:4, col:27> 'char *' '='
|           | |-DeclRefExpr 0x12a944468 <col:4> 'char *' lvalue Var 0x12a942dc0 'type' 'char *'
|           | `-CallExpr 0x12a945798 <col:11, col:27> 'char *'
|           |   |-ImplicitCastExpr 0x12a945780 <col:11> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|           |   | `-DeclRefExpr 0x12a9456e0 <col:11> 'char *(const char *, int)' Function 0x12a9444d0 'strchr' 'char *(const char *, int)'
|           |   |-ImplicitCastExpr 0x12a9457e0 <col:18> 'const char *' <NoOp>
|           |   | `-ImplicitCastExpr 0x12a9457c8 <col:18> 'char *' <LValueToRValue>
|           |   |   `-DeclRefExpr 0x12a945700 <col:18> 'char *' lvalue Var 0x12a942dc0 'type' 'char *'
|           |   `-CharacterLiteral 0x12a945720 <col:24> 'int' 58
|           |-IfStmt 0x12a945878 <line:38:4, line:39:5>
|           | |-UnaryOperator 0x12a945850 <line:38:8, col:9> 'int' prefix '!' cannot overflow
|           | | `-ImplicitCastExpr 0x12a945838 <col:9> 'char *' <LValueToRValue>
|           | |   `-DeclRefExpr 0x12a945818 <col:9> 'char *' lvalue Var 0x12a942dc0 'type' 'char *'
|           | `-ReturnStmt 0x12a945868 <line:39:5>
|           |-UnaryOperator 0x12a9458b8 <line:40:4, col:8> 'char *' postfix '++'
|           | `-DeclRefExpr 0x12a945898 <col:4> 'char *' lvalue Var 0x12a942dc0 'type' 'char *'
|           |-WhileStmt 0x12a945c18 <line:41:4, line:42:9>
|           | |-CallExpr 0x12a945b88 <line:41:11, col:24> 'int'
|           | | |-ImplicitCastExpr 0x12a945b70 <col:11> 'int (*)(int)' <FunctionToPointerDecay>
|           | | | `-DeclRefExpr 0x12a945ac8 <col:11> 'int (int)' Function 0x12a945908 'isspace' 'int (int)'
|           | | `-ImplicitCastExpr 0x12a945bc8 <col:19, col:20> 'int' <IntegralCast>
|           | |   `-ImplicitCastExpr 0x12a945bb0 <col:19, col:20> 'char' <LValueToRValue>
|           | |     `-UnaryOperator 0x12a945b20 <col:19, col:20> 'char' lvalue prefix '*' cannot overflow
|           | |       `-ImplicitCastExpr 0x12a945b08 <col:20> 'char *' <LValueToRValue>
|           | |         `-DeclRefExpr 0x12a945ae8 <col:20> 'char *' lvalue Var 0x12a942dc0 'type' 'char *'
|           | `-UnaryOperator 0x12a945c00 <line:42:5, col:9> 'char *' postfix '++'
|           |   `-DeclRefExpr 0x12a945be0 <col:5> 'char *' lvalue Var 0x12a942dc0 'type' 'char *'
|           |-BinaryOperator 0x12a945dc8 <line:44:4, col:28> 'char *' '='
|           | |-DeclRefExpr 0x12a945c38 <col:4> 'char *' lvalue Var 0x12a942d40 'ptr' 'char *'
|           | `-CallExpr 0x12a945d38 <col:10, col:28> 'char *'
|           |   |-ImplicitCastExpr 0x12a945d20 <col:10> 'char *(*)(const char *, const char *)' <FunctionToPointerDecay>
|           |   | `-DeclRefExpr 0x12a945c58 <col:10> 'char *(const char *, const char *)' Function 0x12a9429d0 'strstr' 'char *(const char *, const char *)'
|           |   |-ImplicitCastExpr 0x12a945d80 <col:17> 'const char *' <NoOp>
|           |   | `-ImplicitCastExpr 0x12a945d68 <col:17> 'char *' <LValueToRValue>
|           |   |   `-DeclRefExpr 0x12a945c78 <col:17> 'char *' lvalue Var 0x12a942dc0 'type' 'char *'
|           |   `-ImplicitCastExpr 0x12a945db0 <col:23> 'const char *' <NoOp>
|           |     `-ImplicitCastExpr 0x12a945d98 <col:23> 'char *' <ArrayToPointerDecay>
|           |       `-StringLiteral 0x12a945c98 <col:23> 'char[4]' lvalue "STR"
|           |-IfStmt 0x12a945e48 <line:45:4, line:46:5>
|           | |-UnaryOperator 0x12a945e20 <line:45:8, col:9> 'int' prefix '!' cannot overflow
|           | | `-ImplicitCastExpr 0x12a945e08 <col:9> 'char *' <LValueToRValue>
|           | |   `-DeclRefExpr 0x12a945de8 <col:9> 'char *' lvalue Var 0x12a942d40 'ptr' 'char *'
|           | `-ReturnStmt 0x12a945e38 <line:46:5>
|           `-BinaryOperator 0x12a945ef0 <line:47:4, col:11> 'char' '='
|             |-UnaryOperator 0x12a945ea0 <col:4, col:5> 'char' lvalue prefix '*' cannot overflow
|             | `-ImplicitCastExpr 0x12a945e88 <col:5> 'char *' <LValueToRValue>
|             |   `-DeclRefExpr 0x12a945e68 <col:5> 'char *' lvalue Var 0x12a942d40 'ptr' 'char *'
|             `-ImplicitCastExpr 0x12a945ed8 <col:11> 'char' <IntegralCast>
|               `-IntegerLiteral 0x12a945eb8 <col:11> 'int' 0
|-FunctionDecl 0x12a942158 <line:8:2> col:2 implicit used memset 'void *(void *, int, unsigned long)' extern
| |-ParmVarDecl 0x12a942258 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x12a9422c0 <<invalid sloc>> <invalid sloc> 'int'
| |-ParmVarDecl 0x12a942328 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x12a942200 <<invalid sloc>> Implicit 900
|-FunctionDecl 0x12a9429d0 <line:16:7> col:7 implicit used strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x12a942ad0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x12a942b38 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x12a942a78 <<invalid sloc>> Implicit 898
|-FunctionDecl 0x12a9444d0 <line:37:11> col:11 implicit used strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x12a945600 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x12a945668 <<invalid sloc>> <invalid sloc> 'int'
| `-BuiltinAttr 0x12a944578 <<invalid sloc>> Implicit 893
|-FunctionDecl 0x12a945908 <line:41:11> col:11 implicit used isspace 'int (int)' extern
| |-ParmVarDecl 0x12a945a08 <<invalid sloc>> <invalid sloc> 'int'
| |-BuiltinAttr 0x12a9459b0 <<invalid sloc>> Implicit 929
| |-NoThrowAttr 0x12a945a78 <col:11> Implicit
| `-PureAttr 0x12a945aa0 <col:11> Implicit
`-FunctionDecl 0x12a945f70 <line:50:10> col:10 implicit used strcmp 'int (const char *, const char *)' extern
  |-ParmVarDecl 0x12a946070 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x12a9460d8 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x12a946018 <<invalid sloc>> Implicit 887
