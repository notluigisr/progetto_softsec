TranslationUnitDecl 0x145836a08 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1458378b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x145836fd0 '__int128'
|-TypedefDecl 0x145837928 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x145836ff0 'unsigned __int128'
|-TypedefDecl 0x14501d830 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14501d600 'struct __NSConstantString_tag'
|   `-Record 0x145837980 '__NSConstantString_tag'
|-TypedefDecl 0x14501d898 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x145837190 '__SVInt8_t'
|-TypedefDecl 0x14501d900 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x1458371b0 '__SVInt16_t'
|-TypedefDecl 0x14501d968 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x1458371d0 '__SVInt32_t'
|-TypedefDecl 0x14501d9d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x1458371f0 '__SVInt64_t'
|-TypedefDecl 0x14501da38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x145837210 '__SVUint8_t'
|-TypedefDecl 0x14501daa0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x145837230 '__SVUint16_t'
|-TypedefDecl 0x14501db08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x145837250 '__SVUint32_t'
|-TypedefDecl 0x14501db70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x145837270 '__SVUint64_t'
|-TypedefDecl 0x14501dbd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x145837290 '__SVFloat16_t'
|-TypedefDecl 0x14501dc40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x1458372b0 '__SVFloat32_t'
|-TypedefDecl 0x14501dca8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x1458372d0 '__SVFloat64_t'
|-TypedefDecl 0x14501dd10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x1458372f0 '__SVBfloat16_t'
|-TypedefDecl 0x14501dd78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x145837310 '__clang_svint8x2_t'
|-TypedefDecl 0x14501dde0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x145837330 '__clang_svint16x2_t'
|-TypedefDecl 0x14501de48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x145837350 '__clang_svint32x2_t'
|-TypedefDecl 0x14501deb0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x145837370 '__clang_svint64x2_t'
|-TypedefDecl 0x14501df18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x145837390 '__clang_svuint8x2_t'
|-TypedefDecl 0x14501df80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x1458373b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14501dfe8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x1458373d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14501e050 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x1458373f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14501e0b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x145837410 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14501e120 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x145837430 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14501e188 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x145837450 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14501e1f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x145837470 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14501e258 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x145837490 '__clang_svint8x3_t'
|-TypedefDecl 0x14501e2c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1458374b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14501e328 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1458374d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14501e390 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1458374f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14501e3f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x145837510 '__clang_svuint8x3_t'
|-TypedefDecl 0x14501e460 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x145837530 '__clang_svuint16x3_t'
|-TypedefDecl 0x14501e4c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x145837550 '__clang_svuint32x3_t'
|-TypedefDecl 0x14501e530 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x145837570 '__clang_svuint64x3_t'
|-TypedefDecl 0x14501e598 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x145837590 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14501ea00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1458375b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14501ea68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1458375d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14501ead0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1458375f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14501eb38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x145837610 '__clang_svint8x4_t'
|-TypedefDecl 0x14501eba0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x145837630 '__clang_svint16x4_t'
|-TypedefDecl 0x14501ec08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x145837650 '__clang_svint32x4_t'
|-TypedefDecl 0x14501ec70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x145837670 '__clang_svint64x4_t'
|-TypedefDecl 0x14501ecd8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x145837690 '__clang_svuint8x4_t'
|-TypedefDecl 0x14501ed40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1458376b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14501eda8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1458376d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14501ee10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1458376f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14501ee78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x145837710 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14501eee0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x145837730 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14501ef48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x145837750 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14501efb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x145837770 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14501f018 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x145837790 '__SVBool_t'
|-TypedefDecl 0x14501f080 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1458377b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14501f0e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1458377d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14501f150 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1458377f0 '__SVCount_t'
|-TypedefDecl 0x14501f1f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14501f1b0 'char *'
|   `-BuiltinType 0x145836ab0 'char'
|-TypedefDecl 0x14501f268 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14501f1b0 'char *'
|   `-BuiltinType 0x145836ab0 'char'
|-FunctionDecl 0x145045888 <dataset_diviso_filec/func3415_vuln.c:1:1, line:25:1> line:1:1 search_make_new 'int (const struct search_state *const, int, const char *const)'
| |-ParmVarDecl 0x14501f848 <col:17, col:50> col:50 used state 'const struct search_state *const'
| |-ParmVarDecl 0x14501f8c8 <col:57, col:61> col:61 used n 'int'
| |-ParmVarDecl 0x14501f948 <col:64, col:82> col:82 used base_name 'const char *const'
| `-CompoundStmt 0x14504a2d8 <col:93, line:25:1>
|   |-DeclStmt 0x145045cb8 <line:2:2, col:43>
|   | `-VarDecl 0x1450459c0 <col:2, col:15> col:15 invalid base_len 'const int'
|   |-DeclStmt 0x145045ea8 <line:3:2, col:72>
|   | `-VarDecl 0x145045ce0 <col:2, col:71> col:13 used need_to_append_dot 'const char' cinit
|   |   `-ConditionalOperator 0x145045e78 <col:34, col:71> '<dependent type>' contains-errors
|   |     |-BinaryOperator 0x145045e18 <col:34, col:61> 'int' contains-errors '=='
|   |     | |-ArraySubscriptExpr 0x145045de0 <col:34, col:56> '<dependent type>' contains-errors lvalue
|   |     | | |-ImplicitCastExpr 0x145045dc8 <col:34> 'const char *' <LValueToRValue>
|   |     | | | `-DeclRefExpr 0x145045d48 <col:34> 'const char *const' lvalue ParmVar 0x14501f948 'base_name' 'const char *const'
|   |     | | `-BinaryOperator 0x145045da8 <col:44, col:55> '<dependent type>' contains-errors '-'
|   |     | |   |-RecoveryExpr 0x145045d68 <col:44> '<dependent type>' contains-errors lvalue
|   |     | |   `-IntegerLiteral 0x145045d88 <col:55> 'int' 1
|   |     | `-CharacterLiteral 0x145045e00 <col:61> 'int' 46
|   |     |-IntegerLiteral 0x145045e38 <col:67> 'int' 0
|   |     `-IntegerLiteral 0x145045e58 <col:71> 'int' 1
|   |-DeclStmt 0x1450460a8 <line:4:2, col:27>
|   | |-RecordDecl 0x145045ec0 <col:2, col:9> col:9 struct search_domain
|   | `-VarDecl 0x145046028 <col:2, col:24> col:24 used dom 'struct search_domain *'
|   |-ForStmt 0x14504a0c8 <line:6:2, line:20:2>
|   | |-BinaryOperator 0x145046140 <line:6:7, col:20> 'struct search_domain *' contains-errors '='
|   | | |-DeclRefExpr 0x1450460c0 <col:7> 'struct search_domain *' lvalue Var 0x145046028 'dom' 'struct search_domain *'
|   | | `-RecoveryExpr 0x145046118 <col:13, col:20> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x1450460e0 <col:13> 'const struct search_state *const' lvalue ParmVar 0x14501f848 'state' 'const struct search_state *const'
|   | |-<<<NULL>>>
|   | |-ImplicitCastExpr 0x145046180 <col:26> 'struct search_domain *' <LValueToRValue>
|   | | `-DeclRefExpr 0x145046160 <col:26> 'struct search_domain *' lvalue Var 0x145046028 'dom' 'struct search_domain *'
|   | |-BinaryOperator 0x145046218 <col:31, col:42> 'struct search_domain *' contains-errors '='
|   | | |-DeclRefExpr 0x145046198 <col:31> 'struct search_domain *' lvalue Var 0x145046028 'dom' 'struct search_domain *'
|   | | `-RecoveryExpr 0x1450461f0 <col:37, col:42> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x1450461b8 <col:37> 'struct search_domain *' lvalue Var 0x145046028 'dom' 'struct search_domain *'
|   | `-CompoundStmt 0x14504a0b0 <col:48, line:20:2>
|   |   `-IfStmt 0x14504a090 <line:7:3, line:19:3>
|   |     |-UnaryOperator 0x145046270 <line:7:7, col:9> 'int' prefix '!' cannot overflow
|   |     | `-UnaryOperator 0x145046258 <col:8, col:9> 'int' postfix '--'
|   |     |   `-DeclRefExpr 0x145046238 <col:8> 'int' lvalue ParmVar 0x14501f8c8 'n' 'int'
|   |     `-CompoundStmt 0x14504a038 <col:13, line:19:3>
|   |       |-DeclStmt 0x145046370 <line:10:4, col:73>
|   |       | `-VarDecl 0x1450462a0 <col:4, col:20> col:20 invalid postfix 'const int *const'
|   |       |-DeclStmt 0x145046468 <line:11:4, col:36>
|   |       | `-VarDecl 0x1450463a0 <col:4, col:33> col:14 used postfix_len 'const int' cinit
|   |       |   `-RecoveryExpr 0x145046440 <col:28, col:33> '<dependent type>' contains-errors lvalue
|   |       |     `-DeclRefExpr 0x145046408 <col:28> 'struct search_domain *' lvalue Var 0x145046028 'dom' 'struct search_domain *'
|   |       |-DeclStmt 0x145046778 <line:12:4, col:93>
|   |       | `-VarDecl 0x145046498 <col:4, col:92> col:16 used newname 'char *const' cinit
|   |       |   `-CStyleCastExpr 0x145046750 <col:26, col:92> 'char *' contains-errors <Dependent>
|   |       |     `-CallExpr 0x145046710 <col:35, col:92> '<dependent type>' contains-errors
|   |       |       |-DeclRefExpr 0x145046610 <col:35> 'int ()' Function 0x145046558 'mm_malloc' 'int ()'
|   |       |       `-BinaryOperator 0x1450466f0 <col:45, col:91> '<dependent type>' contains-errors '+'
|   |       |         |-BinaryOperator 0x1450466b0 <col:45, col:77> '<dependent type>' contains-errors '+'
|   |       |         | |-BinaryOperator 0x145046670 <col:45, col:56> '<dependent type>' contains-errors '+'
|   |       |         | | |-RecoveryExpr 0x145046630 <col:45> '<dependent type>' contains-errors lvalue
|   |       |         | | `-DeclRefExpr 0x145046650 <col:56> 'const char' contains-errors lvalue Var 0x145045ce0 'need_to_append_dot' 'const char'
|   |       |         | `-DeclRefExpr 0x145046690 <col:77> 'const int' contains-errors lvalue Var 0x1450463a0 'postfix_len' 'const int'
|   |       |         `-IntegerLiteral 0x1450466d0 <col:91> 'int' 1
|   |       |-IfStmt 0x145049830 <line:13:4, col:25>
|   |       | |-UnaryOperator 0x1450467c8 <col:8, col:9> 'int' contains-errors prefix '!' cannot overflow
|   |       | | `-ImplicitCastExpr 0x1450467b0 <col:9> 'char *' contains-errors <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x145046790 <col:9> 'char *const' contains-errors lvalue Var 0x145046498 'newname' 'char *const'
|   |       | `-ReturnStmt 0x145049820 <col:18, col:25>
|   |       |   `-RecoveryExpr 0x145049800 <col:25> '<dependent type>' contains-errors lvalue
|   |       |-CallExpr 0x145049be0 <line:14:4, col:39> '<dependent type>' contains-errors
|   |       | |-DeclRefExpr 0x145049b18 <col:4> 'void *(void *, const void *, unsigned long)' Function 0x1450498c8 'memcpy' 'void *(void *, const void *, unsigned long)'
|   |       | |-DeclRefExpr 0x145049b38 <col:11> 'char *const' contains-errors lvalue Var 0x145046498 'newname' 'char *const'
|   |       | |-DeclRefExpr 0x145049b58 <col:20> 'const char *const' lvalue ParmVar 0x14501f948 'base_name' 'const char *const'
|   |       | `-RecoveryExpr 0x145049b78 <col:31> '<dependent type>' contains-errors lvalue
|   |       |-IfStmt 0x145049d18 <line:15:4, col:48>
|   |       | |-ImplicitCastExpr 0x145049c38 <col:8> 'char' contains-errors <LValueToRValue>
|   |       | | `-DeclRefExpr 0x145049c18 <col:8> 'const char' contains-errors lvalue Var 0x145045ce0 'need_to_append_dot' 'const char'
|   |       | `-BinaryOperator 0x145049cf8 <col:28, col:48> '<dependent type>' contains-errors '='
|   |       |   |-ArraySubscriptExpr 0x145049cc0 <col:28, col:44> '<dependent type>' contains-errors lvalue
|   |       |   | |-ImplicitCastExpr 0x145049c90 <col:28> 'char *' contains-errors <LValueToRValue>
|   |       |   | | `-DeclRefExpr 0x145049c50 <col:28> 'char *const' contains-errors lvalue Var 0x145046498 'newname' 'char *const'
|   |       |   | `-ImplicitCastExpr 0x145049ca8 <col:36> '<dependent type>' contains-errors <LValueToRValue>
|   |       |   |   `-RecoveryExpr 0x145049c70 <col:36> '<dependent type>' contains-errors lvalue
|   |       |   `-CharacterLiteral 0x145049ce0 <col:48> 'int' 46
|   |       |-CallExpr 0x145049e68 <line:16:4, col:72> '<dependent type>' contains-errors
|   |       | |-DeclRefExpr 0x145049d38 <col:4> 'void *(void *, const void *, unsigned long)' Function 0x1450498c8 'memcpy' 'void *(void *, const void *, unsigned long)'
|   |       | |-BinaryOperator 0x145049dd8 <col:11, col:32> '<dependent type>' contains-errors '+'
|   |       | | |-BinaryOperator 0x145049d98 <col:11, col:21> '<dependent type>' contains-errors '+'
|   |       | | | |-DeclRefExpr 0x145049d58 <col:11> 'char *const' contains-errors lvalue Var 0x145046498 'newname' 'char *const'
|   |       | | | `-RecoveryExpr 0x145049d78 <col:21> '<dependent type>' contains-errors lvalue
|   |       | | `-DeclRefExpr 0x145049db8 <col:32> 'const char' contains-errors lvalue Var 0x145045ce0 'need_to_append_dot' 'const char'
|   |       | |-RecoveryExpr 0x145049df8 <col:52> '<dependent type>' contains-errors lvalue
|   |       | `-DeclRefExpr 0x145049e18 <col:61> 'const int' contains-errors lvalue Var 0x1450463a0 'postfix_len' 'const int'
|   |       |-BinaryOperator 0x145049fb8 <line:17:4, col:59> '<dependent type>' contains-errors '='
|   |       | |-ArraySubscriptExpr 0x145049f78 <col:4, col:55> '<dependent type>' contains-errors lvalue
|   |       | | |-ImplicitCastExpr 0x145049f60 <col:4> 'char *' contains-errors <LValueToRValue>
|   |       | | | `-DeclRefExpr 0x145049ea0 <col:4> 'char *const' contains-errors lvalue Var 0x145046498 'newname' 'char *const'
|   |       | | `-BinaryOperator 0x145049f40 <col:12, col:44> '<dependent type>' contains-errors '+'
|   |       | |   |-BinaryOperator 0x145049f00 <col:12, col:23> '<dependent type>' contains-errors '+'
|   |       | |   | |-RecoveryExpr 0x145049ec0 <col:12> '<dependent type>' contains-errors lvalue
|   |       | |   | `-DeclRefExpr 0x145049ee0 <col:23> 'const char' contains-errors lvalue Var 0x145045ce0 'need_to_append_dot' 'const char'
|   |       | |   `-DeclRefExpr 0x145049f20 <col:44> 'const int' contains-errors lvalue Var 0x1450463a0 'postfix_len' 'const int'
|   |       | `-IntegerLiteral 0x145049f98 <col:59> 'int' 0
|   |       `-ReturnStmt 0x14504a028 <line:18:4, col:11>
|   |         `-ImplicitCastExpr 0x14504a010 <col:11> 'int' contains-errors <PointerToIntegral>
|   |           `-ImplicitCastExpr 0x145049ff8 <col:11> 'char *' contains-errors <LValueToRValue>
|   |             `-DeclRefExpr 0x145049fd8 <col:11> 'char *const' contains-errors lvalue Var 0x145046498 'newname' 'char *const'
|   |-CallExpr 0x14504a268 <line:23:2, col:17> 'int'
|   | |-ImplicitCastExpr 0x14504a250 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x14504a1e0 <col:2> 'int ()' Function 0x14504a128 'EVUTIL_ASSERT' 'int ()'
|   | `-IntegerLiteral 0x14504a200 <col:16> 'int' 0
|   `-ReturnStmt 0x14504a2c8 <line:24:2, col:9>
|     `-RecoveryExpr 0x14504a2a8 <col:9> '<dependent type>' contains-errors lvalue
|-FunctionDecl 0x145045a68 <line:2:26> col:26 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x145045b68 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x145045b10 <<invalid sloc>> Implicit 902
`-FunctionDecl 0x1450498c8 <line:14:4> col:4 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x1450499c8 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x145049a30 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x145049a98 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x145049970 <<invalid sloc>> Implicit 882
