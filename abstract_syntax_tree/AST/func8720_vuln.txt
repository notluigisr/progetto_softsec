TranslationUnitDecl 0x122055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1220564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x122055bd0 '__int128'
|-TypedefDecl 0x122056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x122055bf0 'unsigned __int128'
|-TypedefDecl 0x12280be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12280bc00 'struct __NSConstantString_tag'
|   `-Record 0x122056580 '__NSConstantString_tag'
|-TypedefDecl 0x12280be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x122055d90 '__SVInt8_t'
|-TypedefDecl 0x12280bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x122055db0 '__SVInt16_t'
|-TypedefDecl 0x12280bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x122055dd0 '__SVInt32_t'
|-TypedefDecl 0x12280bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x122055df0 '__SVInt64_t'
|-TypedefDecl 0x12280c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x122055e10 '__SVUint8_t'
|-TypedefDecl 0x12280c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x122055e30 '__SVUint16_t'
|-TypedefDecl 0x12280c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x122055e50 '__SVUint32_t'
|-TypedefDecl 0x12280c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x122055e70 '__SVUint64_t'
|-TypedefDecl 0x12280c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x122055e90 '__SVFloat16_t'
|-TypedefDecl 0x12280c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x122055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12280c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x122055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12280c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x122055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12280c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x122055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12280c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x122055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12280c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x122055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12280c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x122055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12280c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x122055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12280c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x122055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12280c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x122055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12280c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x122055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12280c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x122056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12280c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x122056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12280c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x122056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12280c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x122056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12280c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x122056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12280c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1220560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12280c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1220560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12280c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1220560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12280c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x122056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12280ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x122056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12280cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x122056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12280cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x122056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12280cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x122056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12280d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1220561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12280d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1220561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12280d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1220561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12280d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x122056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12280d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x122056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12280d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x122056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12280d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x122056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12280d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x122056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12280d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1220562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12280d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1220562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12280d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1220562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12280d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x122056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12280d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x122056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12280d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x122056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12280d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x122056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12280da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x122056390 '__SVBool_t'
|-TypedefDecl 0x12280da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1220563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12280dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1220563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12280db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1220563f0 '__SVCount_t'
|-TypedefDecl 0x12280dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12280dbb0 'char *'
|   `-BuiltinType 0x1220556b0 'char'
|-TypedefDecl 0x12280dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12280dbb0 'char *'
|   `-BuiltinType 0x1220556b0 'char'
|-FunctionDecl 0x12280ddf8 <dataset_diviso_filec/func8720_vuln.c:1:1, line:69:1> line:1:1 invalid amgtar_selfcheck 'int (int *)'
| |-ParmVarDecl 0x12280dd28 <line:2:5, col:29> col:29 invalid argument 'int *'
| `-CompoundStmt 0x1221257e0 <line:3:1, line:69:1>
|   |-DeclStmt 0x12280df28 <line:4:5, col:17>
|   | `-VarDecl 0x12280dec0 <col:5, col:11> col:11 used option 'char *'
|   |-IfStmt 0x1228276e0 <line:6:5, line:10:5>
|   | |-CXXDependentScopeMemberExpr 0x12280dfa8 <line:6:9, col:23> '<dependent type>' contains-errors lvalue .disk
|   | | `-CXXDependentScopeMemberExpr 0x12280df60 <col:9, col:19> '<dependent type>' contains-errors lvalue ->dle
|   | |   `-RecoveryExpr 0x12280df40 <col:9> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x1228276b8 <col:29, line:10:5>
|   |   |-DeclStmt 0x12280e2c8 <line:7:2, col:48>
|   |   | `-VarDecl 0x12280e008 <col:2, col:47> col:8 used qdisk 'char *' cinit
|   |   |   `-CallExpr 0x12280e2a0 <col:16, col:47> '<dependent type>' contains-errors
|   |   |     |-DeclRefExpr 0x12280e1d0 <col:16> 'int ()' Function 0x12280e118 'quote_string' 'int ()'
|   |   |     `-CXXDependentScopeMemberExpr 0x12280e258 <col:29, col:43> '<dependent type>' contains-errors lvalue .disk
|   |   |       `-CXXDependentScopeMemberExpr 0x12280e210 <col:29, col:39> '<dependent type>' contains-errors lvalue ->dle
|   |   |         `-RecoveryExpr 0x12280e1f0 <col:29> '<dependent type>' contains-errors lvalue
|   |   |-CallExpr 0x1228274d8 <line:8:2, col:30> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x12280e3c0 <col:2> 'int ()' Function 0x12280e308 'fprintf' 'int ()'
|   |   | |-RecoveryExpr 0x1228274b8 <col:10> '<dependent type>' contains-errors lvalue
|   |   | |-StringLiteral 0x122827440 <col:18> 'char[4]' lvalue "STR"
|   |   | `-DeclRefExpr 0x122827460 <col:25> 'char *' contains-errors lvalue Var 0x12280e008 'qdisk' 'char *'
|   |   `-CallExpr 0x122827678 <line:9:2, col:14> 'int' contains-errors
|   |     |-ImplicitCastExpr 0x122827660 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1228275f0 <col:2> 'int ()' Function 0x122827538 'amfree' 'int ()'
|   |     `-ImplicitCastExpr 0x1228276a0 <col:9> 'char *' contains-errors <LValueToRValue>
|   |       `-DeclRefExpr 0x122827610 <col:9> 'char *' contains-errors lvalue Var 0x12280e008 'qdisk' 'char *'
|   |-CallExpr 0x122827de0 <line:12:5, col:26> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x122827d08 <col:5> 'int (const char *, ...)' Function 0x122827b60 'printf' 'int (const char *, ...)'
|   | |-StringLiteral 0x122827d28 <col:12> 'char[4]' lvalue "STR"
|   | `-RecoveryExpr 0x122827da8 <col:19> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x1228280e0 <line:13:5, col:69> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x122827ef0 <col:5> 'int ()' Function 0x122827e38 'amgtar_build_exinclude' 'int ()'
|   | |-UnaryOperator 0x122827f78 <col:28, col:39> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | `-CXXDependentScopeMemberExpr 0x122827f30 <col:29, col:39> '<dependent type>' contains-errors lvalue ->dle
|   | |   `-RecoveryExpr 0x122827f10 <col:29> '<dependent type>' contains-errors lvalue
|   | |-IntegerLiteral 0x122827f90 <col:44> 'int' 1
|   | |-RecoveryExpr 0x122828060 <col:47> '<dependent type>' contains-errors lvalue
|   | |-RecoveryExpr 0x122828080 <col:53> '<dependent type>' contains-errors lvalue
|   | |-RecoveryExpr 0x1228280a0 <col:59> '<dependent type>' contains-errors lvalue
|   | `-RecoveryExpr 0x1228280c0 <col:65> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x1228281d8 <line:15:5, col:17> 'int'
|   | |-ImplicitCastExpr 0x1228281c0 <col:5> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x122828130 <col:5> 'int (const char *, ...)' Function 0x122827b60 'printf' 'int (const char *, ...)'
|   | `-ImplicitCastExpr 0x122828218 <col:12> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x122828200 <col:12> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x122828150 <col:12> 'char[4]' lvalue "STR"
|   |-IfStmt 0x122123500 <line:18:5, line:20:5>
|   | |-ParenExpr 0x1228283b8 <line:18:9, col:53> 'char *' contains-errors
|   | | `-BinaryOperator 0x122828398 <col:10, col:52> 'char *' contains-errors '='
|   | |   |-DeclRefExpr 0x122828230 <col:10> 'char *' lvalue Var 0x12280dec0 'option' 'char *'
|   | |   `-CallExpr 0x122828370 <col:19, col:52> '<dependent type>' contains-errors
|   | |     |-DeclRefExpr 0x122828330 <col:19> 'int ()' Function 0x122828278 'validate_command_options' 'int ()'
|   | |     `-RecoveryExpr 0x122828350 <col:44> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x1221234e8 <col:56, line:20:5>
|   |   `-CallExpr 0x1221234b0 <line:19:2, col:31> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x1228283d8 <col:2> 'int ()' Function 0x12280e308 'fprintf' 'int ()'
|   |     |-RecoveryExpr 0x122123490 <col:10> '<dependent type>' contains-errors lvalue
|   |     |-StringLiteral 0x122123418 <col:18> 'char[4]' lvalue "STR"
|   |     `-DeclRefExpr 0x122123438 <col:25> 'char *' lvalue Var 0x12280dec0 'option' 'char *'
|   |-IfStmt 0x1221247f8 <line:22:5, line:46:5> has_else
|   | |-RecoveryExpr 0x122123538 <line:22:9> '<dependent type>' contains-errors lvalue
|   | |-CompoundStmt 0x1221246b8 <col:22, line:44:5>
|   | | `-IfStmt 0x122124698 <line:23:2, line:43:2>
|   | |   |-BinaryOperator 0x122123918 <line:23:6, line:24:43> 'int' contains-errors '&&'
|   | |   | |-CallExpr 0x122123878 <line:23:6, col:34> '<dependent type>' contains-errors
|   | |   | | |-DeclRefExpr 0x122123638 <col:6> 'int ()' Function 0x122123580 'check_file' 'int ()'
|   | |   | | |-RecoveryExpr 0x122123838 <col:17> '<dependent type>' contains-errors lvalue
|   | |   | | `-RecoveryExpr 0x122123858 <col:30> '<dependent type>' contains-errors lvalue
|   | |   | `-CallExpr 0x1221238e8 <line:24:6, col:43> '<dependent type>' contains-errors
|   | |   |   |-DeclRefExpr 0x122123798 <col:6> 'int ()' Function 0x1221236e0 'check_exec_for_suid' 'int ()'
|   | |   |   |-RecoveryExpr 0x1221238a8 <col:26> '<dependent type>' contains-errors lvalue
|   | |   |   `-RecoveryExpr 0x1221238c8 <col:39> '<dependent type>' contains-errors lvalue
|   | |   `-CompoundStmt 0x122124670 <col:46, line:43:2>
|   | |     |-DeclStmt 0x1221239b8 <line:25:6, col:24>
|   | |     | `-VarDecl 0x122123950 <col:6, col:12> col:12 used gtar_version 'char *'
|   | |     |-IfStmt 0x1221244a8 <line:33:6, line:39:6> has_else
|   | |     | |-ImplicitCastExpr 0x122123da8 <line:33:10> 'char *' <LValueToRValue>
|   | |     | | `-DeclRefExpr 0x122123d88 <col:10> 'char *' lvalue Var 0x122123950 'gtar_version' 'char *'
|   | |     | |-CompoundStmt 0x1221242c8 <col:24, line:37:6>
|   | |     | | |-DeclStmt 0x122123e40 <line:34:3, col:11>
|   | |     | | | `-VarDecl 0x122123dd8 <col:3, col:9> col:9 used gv 'char *'
|   | |     | | |-ForStmt 0x122124188 <line:35:3, col:62>
|   | |     | | | |-BinaryOperator 0x122123eb0 <col:8, col:13> 'char *' '='
|   | |     | | | | |-DeclRefExpr 0x122123e58 <col:8> 'char *' lvalue Var 0x122123dd8 'gv' 'char *'
|   | |     | | | | `-ImplicitCastExpr 0x122123e98 <col:13> 'char *' <LValueToRValue>
|   | |     | | | |   `-DeclRefExpr 0x122123e78 <col:13> 'char *' lvalue Var 0x122123950 'gtar_version' 'char *'
|   | |     | | | |-<<<NULL>>>
|   | |     | | | |-BinaryOperator 0x122124128 <col:27, col:54> 'int' '&&'
|   | |     | | | | |-ImplicitCastExpr 0x122124110 <col:27, col:28> 'int' <IntegralCast>
|   | |     | | | | | `-ImplicitCastExpr 0x1221240f8 <col:27, col:28> 'char' <LValueToRValue>
|   | |     | | | | |   `-UnaryOperator 0x122123f08 <col:27, col:28> 'char' lvalue prefix '*' cannot overflow
|   | |     | | | | |     `-ImplicitCastExpr 0x122123ef0 <col:28> 'char *' <LValueToRValue>
|   | |     | | | | |       `-DeclRefExpr 0x122123ed0 <col:28> 'char *' lvalue Var 0x122123dd8 'gv' 'char *'
|   | |     | | | | `-UnaryOperator 0x1221240e0 <col:34, col:54> 'int' prefix '!' cannot overflow
|   | |     | | | |   `-CallExpr 0x122124088 <col:35, col:54> 'int'
|   | |     | | | |     |-ImplicitCastExpr 0x122124070 <col:35> 'int (*)()' <FunctionToPointerDecay>
|   | |     | | | |     | `-DeclRefExpr 0x122124000 <col:35> 'int ()' Function 0x122123f48 'g_ascii_isdigit' 'int ()'
|   | |     | | | |     `-ImplicitCastExpr 0x1221240c8 <col:51, col:52> 'int' <IntegralCast>
|   | |     | | | |       `-ImplicitCastExpr 0x1221240b0 <col:51, col:52> 'char' <LValueToRValue>
|   | |     | | | |         `-UnaryOperator 0x122124058 <col:51, col:52> 'char' lvalue prefix '*' cannot overflow
|   | |     | | | |           `-ImplicitCastExpr 0x122124040 <col:52> 'char *' <LValueToRValue>
|   | |     | | | |             `-DeclRefExpr 0x122124020 <col:52> 'char *' lvalue Var 0x122123dd8 'gv' 'char *'
|   | |     | | | |-UnaryOperator 0x122124168 <col:57, col:59> 'char *' postfix '++'
|   | |     | | | | `-DeclRefExpr 0x122124148 <col:57> 'char *' lvalue Var 0x122123dd8 'gv' 'char *'
|   | |     | | | `-NullStmt 0x122124180 <col:62>
|   | |     | | `-CallExpr 0x122124250 <line:36:3, col:19> 'int'
|   | |     | |   |-ImplicitCastExpr 0x122124238 <col:3> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   | |     | |   | `-DeclRefExpr 0x1221241c0 <col:3> 'int (const char *, ...)' Function 0x122827b60 'printf' 'int (const char *, ...)'
|   | |     | |   |-ImplicitCastExpr 0x122124298 <col:10> 'const char *' <NoOp>
|   | |     | |   | `-ImplicitCastExpr 0x122124280 <col:10> 'char *' <ArrayToPointerDecay>
|   | |     | |   |   `-StringLiteral 0x1221241e0 <col:10> 'char[4]' lvalue "STR"
|   | |     | |   `-ImplicitCastExpr 0x1221242b0 <col:17> 'char *' <LValueToRValue>
|   | |     | |     `-DeclRefExpr 0x122124200 <col:17> 'char *' lvalue Var 0x122123dd8 'gv' 'char *'
|   | |     | `-CompoundStmt 0x122124498 <line:37:13, line:39:6>
|   | |     `-CallExpr 0x122124630 <line:42:6, col:25> 'int'
|   | |       |-ImplicitCastExpr 0x122124618 <col:6> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x1221245d8 <col:6> 'int ()' Function 0x122827538 'amfree' 'int ()'
|   | |       `-ImplicitCastExpr 0x122124658 <col:13> 'char *' <LValueToRValue>
|   | |         `-DeclRefExpr 0x1221245f8 <col:13> 'char *' lvalue Var 0x122123950 'gtar_version' 'char *'
|   | `-CompoundStmt 0x1221247e0 <line:44:12, line:46:5>
|   |   `-CallExpr 0x1221247a0 <line:45:2, col:17> 'int'
|   |     |-ImplicitCastExpr 0x122124788 <col:2> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1221246d0 <col:2> 'int (const char *, ...)' Function 0x122827b60 'printf' 'int (const char *, ...)'
|   |     `-ImplicitCastExpr 0x1221247c8 <col:9, col:16> 'const char *' <IntegralToPointer>
|   |       `-CallExpr 0x122124748 <col:9, col:16> 'int'
|   |         |-ImplicitCastExpr 0x122124730 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |         | `-DeclRefExpr 0x1221246f0 <col:9> 'int ()' Function 0x122124338 '_' 'int ()'
|   |         `-ImplicitCastExpr 0x122124770 <col:11> 'char *' <ArrayToPointerDecay>
|   |           `-StringLiteral 0x122124710 <col:11> 'char[4]' lvalue "STR"
|   |-IfStmt 0x122124c90 <line:49:5, line:53:5> has_else
|   | |-RecoveryExpr 0x122124a38 <line:49:9> '_Bool' contains-errors
|   | |-CompoundStmt 0x122124b58 <col:25, line:51:5>
|   | `-CompoundStmt 0x122124c78 <col:12, line:53:5>
|   |   `-CallExpr 0x122124c38 <line:52:2, col:17> 'int'
|   |     |-ImplicitCastExpr 0x122124c20 <col:2> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x122124b68 <col:2> 'int (const char *, ...)' Function 0x122827b60 'printf' 'int (const char *, ...)'
|   |     `-ImplicitCastExpr 0x122124c60 <col:9, col:16> 'const char *' <IntegralToPointer>
|   |       `-CallExpr 0x122124be0 <col:9, col:16> 'int'
|   |         |-ImplicitCastExpr 0x122124bc8 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |         | `-DeclRefExpr 0x122124b88 <col:9> 'int ()' Function 0x122124338 '_' 'int ()'
|   |         `-ImplicitCastExpr 0x122124c08 <col:11> 'char *' <ArrayToPointerDecay>
|   |           `-StringLiteral 0x122124ba8 <col:11> 'char[4]' lvalue "STR"
|   |-CallExpr 0x122124df8 <line:55:5, col:21> 'int'
|   | |-ImplicitCastExpr 0x122124de0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x122124da0 <col:5> 'int ()' Function 0x122124ce8 'set_root_privs' 'int ()'
|   | `-IntegerLiteral 0x122124dc0 <col:20> 'int' 1
|   |-IfStmt 0x122125020 <line:56:5, line:60:5> has_else
|   | |-RecoveryExpr 0x122124e20 <line:56:9> '_Bool' contains-errors
|   | |-CompoundStmt 0x122124e60 <col:27, line:58:5>
|   | `-IfStmt 0x122125000 <col:12, line:60:5>
|   |   |-CXXDependentScopeMemberExpr 0x122124ed8 <line:58:16, col:30> '<dependent type>' contains-errors lvalue .device
|   |   | `-CXXDependentScopeMemberExpr 0x122124e90 <col:16, col:26> '<dependent type>' contains-errors lvalue ->dle
|   |   |   `-RecoveryExpr 0x122124e70 <col:16> '<dependent type>' contains-errors lvalue
|   |   `-CompoundStmt 0x122124ff0 <col:38, line:60:5>
|   |-IfStmt 0x122125740 <line:61:5, line:67:5>
|   | |-CXXDependentScopeMemberExpr 0x122125070 <line:61:9, col:19> '<dependent type>' contains-errors lvalue ->calcsize
|   | | `-RecoveryExpr 0x122125050 <col:9> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x122125718 <col:29, line:67:5>
|   |   |-DeclStmt 0x122125258 <line:62:2, col:55>
|   |   | `-VarDecl 0x1221250d0 <col:2, col:8> col:8 used calcsize 'char *'
|   |   |-CallExpr 0x122125600 <line:64:2, col:21> 'int'
|   |   | |-ImplicitCastExpr 0x1221253d0 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x122125390 <col:2> 'int ()' Function 0x1221252d8 'check_suid' 'int ()'
|   |   | `-ImplicitCastExpr 0x122125628 <col:13> 'char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1221253b0 <col:13> 'char *' lvalue Var 0x1221250d0 'calcsize' 'char *'
|   |   `-CallExpr 0x1221256d8 <line:66:2, col:17> 'int'
|   |     |-ImplicitCastExpr 0x1221256c0 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x122125680 <col:2> 'int ()' Function 0x122827538 'amfree' 'int ()'
|   |     `-ImplicitCastExpr 0x122125700 <col:9> 'char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1221256a0 <col:9> 'char *' lvalue Var 0x1221250d0 'calcsize' 'char *'
|   `-CallExpr 0x1221257b8 <line:68:5, col:21> 'int'
|     |-ImplicitCastExpr 0x1221257a0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x122125760 <col:5> 'int ()' Function 0x122124ce8 'set_root_privs' 'int ()'
|     `-IntegerLiteral 0x122125780 <col:20> 'int' 0
|-FunctionDecl 0x122827b60 <line:12:5> col:5 implicit used printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x122827c60 <<invalid sloc>> <invalid sloc> 'const char *'
| |-BuiltinAttr 0x122827c08 <<invalid sloc>> Implicit 903
| `-FormatAttr 0x122827cd0 <col:5> Implicit printf 1 2
`-FunctionDecl 0x122124868 <line:47:27> col:27 implicit used strlen 'unsigned long (const char *)' extern
  |-ParmVarDecl 0x122124968 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x122124910 <<invalid sloc>> Implicit 902
