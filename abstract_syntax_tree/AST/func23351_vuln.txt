TranslationUnitDecl 0x12d855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12d8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12d855bd0 '__int128'
|-TypedefDecl 0x12d856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12d855bf0 'unsigned __int128'
|-TypedefDecl 0x12e0ad230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12e0ad000 'struct __NSConstantString_tag'
|   `-Record 0x12d856580 '__NSConstantString_tag'
|-TypedefDecl 0x12e0ad298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12d855d90 '__SVInt8_t'
|-TypedefDecl 0x12e0ad300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12d855db0 '__SVInt16_t'
|-TypedefDecl 0x12e0ad368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12d855dd0 '__SVInt32_t'
|-TypedefDecl 0x12e0ad3d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12d855df0 '__SVInt64_t'
|-TypedefDecl 0x12e0ad438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12d855e10 '__SVUint8_t'
|-TypedefDecl 0x12e0ad4a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12d855e30 '__SVUint16_t'
|-TypedefDecl 0x12e0ad508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12d855e50 '__SVUint32_t'
|-TypedefDecl 0x12e0ad570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12d855e70 '__SVUint64_t'
|-TypedefDecl 0x12e0ad5d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12d855e90 '__SVFloat16_t'
|-TypedefDecl 0x12e0ad640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12d855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12e0ad6a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12d855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12e0ad710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12d855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12e0ad778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12d855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12e0ad7e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12d855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12e0ad848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12d855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12e0ad8b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12d855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12e0ad918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12d855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12e0ad980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12d855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12e0ad9e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12d855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12e0ada50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12d855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12e0adab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12d856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12e0adb20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12d856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12e0adb88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12d856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12e0adbf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12d856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12e0adc58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12d856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12e0adcc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12d8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12e0add28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12d8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12e0add90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12d8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12e0addf8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12d856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12e0ade60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12d856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12e0adec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12d856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12e0adf30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12d856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12e0adf98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12d856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12e0ae800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12d8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12e0ae868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12d8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12e0ae8d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12d8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12e0ae938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12d856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12e0ae9a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12d856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12e0aea08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12d856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12e0aea70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12d856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12e0aead8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12d856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12e0aeb40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12d8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12e0aeba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12d8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12e0aec10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12d8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12e0aec78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12d856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12e0aece0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12d856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12e0aed48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12d856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12e0aedb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12d856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12e0aee18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12d856390 '__SVBool_t'
|-TypedefDecl 0x12e0aee80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12d8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12e0aeee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12d8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12e0aef50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12d8563f0 '__SVCount_t'
|-TypedefDecl 0x12e0aeff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12e0aefb0 'char *'
|   `-BuiltinType 0x12d8556b0 'char'
|-TypedefDecl 0x12e0af068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12e0aefb0 'char *'
|   `-BuiltinType 0x12d8556b0 'char'
`-FunctionDecl 0x12e0cbc00 <dataset_diviso_filec/func23351_vuln.c:1:1, line:87:1> line:1:12 do_add_counters 'int (struct net *, int)' static
  |-ParmVarDecl 0x12e0af648 <col:28, col:40> col:40 used net 'struct net *'
  |-ParmVarDecl 0x12e0af6c0 <col:45, col:56> col:56 __user 'int'
  `-CompoundStmt 0x12f0090b0 <line:3:1, line:87:1>
    |-DeclStmt 0x12e0cbd80 <line:4:2, col:16>
    | `-VarDecl 0x12e0cbd18 <col:2, col:15> col:15 used i 'unsigned int'
    |-DeclStmt 0x12e0cbf18 <line:5:2, col:29>
    | |-RecordDecl 0x12e0cbd98 <col:2, col:9> col:9 struct xt_counters_info
    | `-VarDecl 0x12e0cbe98 <col:2, col:26> col:26 invalid tmp 'struct xt_counters_info'
    |-DeclStmt 0x12e0cc118 <line:6:2, col:27>
    | |-RecordDecl 0x12e0cbf30 <col:2, col:9> col:9 struct xt_counters
    | `-VarDecl 0x12e0cc098 <col:2, col:22> col:22 used paddc 'struct xt_counters *'
    |-DeclStmt 0x12e0cc1b0 <line:7:2, col:27>
    | `-VarDecl 0x12e0cc148 <col:2, col:15> col:15 used num_counters 'unsigned int'
    |-DeclStmt 0x12e0cc248 <line:8:2, col:18>
    | `-VarDecl 0x12e0cc1e0 <col:2, col:14> col:14 used name 'const char *'
    |-DeclStmt 0x12e0cc2e0 <line:9:2, col:10>
    | `-VarDecl 0x12e0cc278 <col:2, col:6> col:6 used size 'int'
    |-DeclStmt 0x12e0cc378 <line:10:2, col:12>
    | `-VarDecl 0x12e0cc310 <col:2, col:8> col:8 used ptmp 'void *'
    |-DeclStmt 0x12e0cc578 <line:11:2, col:20>
    | |-RecordDecl 0x12e0cc390 <col:2, col:9> col:9 struct xt_table
    | `-VarDecl 0x12e0cc4f8 <col:2, col:19> col:19 used t 'struct xt_table *'
    |-DeclStmt 0x12e0cc778 <line:12:2, col:37>
    | |-RecordDecl 0x12e0cc590 <col:8, col:15> col:15 struct xt_table_info
    | `-VarDecl 0x12e0cc6f8 <col:2, col:30> col:30 used private 'const struct xt_table_info *'
    |-DeclStmt 0x12e0cc830 <line:13:2, col:13>
    | `-VarDecl 0x12e0cc7a8 <col:2, col:12> col:6 used ret 'int' cinit
    |   `-IntegerLiteral 0x12e0cc810 <col:12> 'int' 0
    |-DeclStmt 0x12e0cca38 <line:14:2, col:25>
    | |-RecordDecl 0x12e0cc848 <col:2, col:9> col:9 struct arpt_entry
    | `-VarDecl 0x12e0cc9b8 <col:2, col:21> col:21 used iter 'struct arpt_entry *'
    |-DeclStmt 0x12e0ccad0 <line:15:2, col:21>
    | `-VarDecl 0x12e0cca68 <col:2, col:15> col:15 used addend 'unsigned int'
    |-CompoundStmt 0x12e0ccbd0 <line:24:2, line:27:2>
    | `-BinaryOperator 0x12e0ccb40 <line:25:3, col:11> 'void *' contains-errors '='
    |   |-DeclRefExpr 0x12e0ccae8 <col:3> 'void *' lvalue Var 0x12e0cc310 'ptmp' 'void *'
    |   `-UnaryOperator 0x12e0ccb28 <col:10, col:11> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x12e0ccb08 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12e0cf7b0 <line:29:2, line:30:11>
    | |-BinaryOperator 0x12e0cf6e8 <line:29:6, col:42> 'int' '!='
    | | |-CallExpr 0x12e0cf668 <col:6, col:37> 'int'
    | | | |-ImplicitCastExpr 0x12e0cf650 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | | `-DeclRefExpr 0x12e0cf510 <col:6> 'int ()' Function 0x12e0cf458 'copy_from_user' 'int ()'
    | | | |-ImplicitCastExpr 0x12e0cf6a0 <col:21> 'void *' <LValueToRValue>
    | | | | `-DeclRefExpr 0x12e0cf530 <col:21> 'void *' lvalue Var 0x12e0cc310 'ptmp' 'void *'
    | | | |-ImplicitCastExpr 0x12e0cf6b8 <col:27> 'struct arpt_entry *' <LValueToRValue>
    | | | | `-DeclRefExpr 0x12e0cf600 <col:27> 'struct arpt_entry *' lvalue Var 0x12e0cc9b8 'iter' 'struct arpt_entry *'
    | | | `-ImplicitCastExpr 0x12e0cf6d0 <col:33> 'int' <LValueToRValue>
    | | |   `-DeclRefExpr 0x12e0cf568 <col:33> 'int' lvalue Var 0x12e0cc278 'size' 'int'
    | | `-IntegerLiteral 0x12e0cf5c0 <col:42> 'int' 0
    | `-ReturnStmt 0x12e0cf7a0 <line:30:3, col:11>
    |   `-UnaryOperator 0x12e0cf788 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x12e0cf770 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x12e0cf750 <col:11> '<dependent type>' contains-errors lvalue
    |-CompoundStmt 0x12e0cf920 <line:38:2, line:41:2>
    | |-BinaryOperator 0x12e0cf858 <line:39:3, col:22> 'unsigned int' contains-errors '='
    | | |-DeclRefExpr 0x12e0cf7d0 <col:3> 'unsigned int' lvalue Var 0x12e0cc148 'num_counters' 'unsigned int'
    | | `-CXXDependentScopeMemberExpr 0x12e0cf810 <col:18, col:22> '<dependent type>' contains-errors lvalue .num_counters
    | |   `-RecoveryExpr 0x12e0cf7f0 <col:18> '<dependent type>' contains-errors lvalue
    | `-BinaryOperator 0x12e0cf900 <line:40:3, col:14> 'const char *' contains-errors '='
    |   |-DeclRefExpr 0x12e0cf878 <col:3> 'const char *' lvalue Var 0x12e0cc1e0 'name' 'const char *'
    |   `-CXXDependentScopeMemberExpr 0x12e0cf8b8 <col:10, col:14> '<dependent type>' contains-errors lvalue .name
    |     `-RecoveryExpr 0x12e0cf898 <col:10> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12e0cfab8 <line:43:2, line:44:11>
    | |-RecoveryExpr 0x12e0cf9f0 <line:43:6, col:60> '_Bool' contains-errors
    | `-ReturnStmt 0x12e0cfaa8 <line:44:3, col:11>
    |   `-UnaryOperator 0x12e0cfa90 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x12e0cfa78 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x12e0cfa58 <col:11> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x12e0cfd00 <line:46:2, col:28> 'struct xt_counters *' contains-errors '='
    | |-DeclRefExpr 0x12e0cfad8 <col:2> 'struct xt_counters *' lvalue Var 0x12e0cc098 'paddc' 'struct xt_counters *'
    | `-CallExpr 0x12e0cfcd8 <col:10, col:28> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12e0cfbd8 <col:10> 'int ()' Function 0x12e0cfb20 'vmalloc' 'int ()'
    |   `-BinaryOperator 0x12e0cfcb8 <col:18, col:24> '<dependent type>' contains-errors '-'
    |     |-RecoveryExpr 0x12e0cfc98 <col:18> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x12e0cfc10 <col:24> 'int' lvalue Var 0x12e0cc278 'size' 'int'
    |-IfStmt 0x12e0cfe18 <line:47:2, line:48:11>
    | |-UnaryOperator 0x12e0cfd58 <line:47:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x12e0cfd40 <col:7> 'struct xt_counters *' <LValueToRValue>
    | |   `-DeclRefExpr 0x12e0cfd20 <col:7> 'struct xt_counters *' lvalue Var 0x12e0cc098 'paddc' 'struct xt_counters *'
    | `-ReturnStmt 0x12e0cfe08 <line:48:3, col:11>
    |   `-UnaryOperator 0x12e0cfdf0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x12e0cfdd8 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x12e0cfdb8 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12e0d0248 <line:50:2, line:53:2>
    | |-BinaryOperator 0x12e0d00a8 <line:50:6, col:56> 'int' contains-errors '!='
    | | |-CallExpr 0x12e0d0070 <col:6, col:51> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x12e0cfe38 <col:6> 'int ()' Function 0x12e0cf458 'copy_from_user' 'int ()'
    | | | |-DeclRefExpr 0x12e0cfe58 <col:21> 'struct xt_counters *' lvalue Var 0x12e0cc098 'paddc' 'struct xt_counters *'
    | | | |-BinaryOperator 0x12e0d0010 <col:28, col:35> '<dependent type>' contains-errors '+'
    | | | | |-RecoveryExpr 0x12e0cfff0 <col:28> '<dependent type>' contains-errors lvalue
    | | | | `-DeclRefExpr 0x12e0cfe90 <col:35> 'int' lvalue Var 0x12e0cc278 'size' 'int'
    | | | `-BinaryOperator 0x12e0d0050 <col:41, col:47> '<dependent type>' contains-errors '-'
    | | |   |-RecoveryExpr 0x12e0d0030 <col:41> '<dependent type>' contains-errors lvalue
    | | |   `-DeclRefExpr 0x12e0cfee8 <col:47> 'int' lvalue Var 0x12e0cc278 'size' 'int'
    | | `-IntegerLiteral 0x12e0cff60 <col:56> 'int' 0
    | `-CompoundStmt 0x12e0d0228 <col:59, line:53:2>
    |   |-BinaryOperator 0x12e0d01a0 <line:51:3, col:10> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x12e0d00c8 <col:3> 'int' lvalue Var 0x12e0cc7a8 'ret' 'int'
    |   | `-UnaryOperator 0x12e0d0188 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |   `-ImplicitCastExpr 0x12e0d0170 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    |   |     `-RecoveryExpr 0x12e0d0150 <col:10> '<dependent type>' contains-errors lvalue
    |   `-GotoStmt 0x12e0d0210 <line:52:3, col:8> 'free' 0x12e0d01c0
    |-BinaryOperator 0x12e0d0eb0 <line:55:2, col:47> 'struct xt_table *' contains-errors '='
    | |-DeclRefExpr 0x12e0d0268 <col:2> 'struct xt_table *' lvalue Var 0x12e0cc4f8 't' 'struct xt_table *'
    | `-CallExpr 0x12e0d0e78 <col:6, col:47> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12e0d0368 <col:6> 'int ()' Function 0x12e0d02b0 'xt_find_table_lock' 'int ()'
    |   |-DeclRefExpr 0x12e0d0388 <col:25> 'struct net *' lvalue ParmVar 0x12e0af648 'net' 'struct net *'
    |   |-RecoveryExpr 0x12e0d0e58 <col:30> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x12e0d03c0 <col:43> 'const char *' lvalue Var 0x12e0cc1e0 'name' 'const char *'
    |-IfStmt 0x12e0d1230 <line:56:2, line:59:2>
    | |-CallExpr 0x12e0d1008 <line:56:6, col:22> 'int'
    | | |-ImplicitCastExpr 0x12e0d0ff0 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x12e0d0fb0 <col:6> 'int ()' Function 0x12e0d0ef8 'IS_ERR_OR_NULL' 'int ()'
    | | `-ImplicitCastExpr 0x12e0d1030 <col:21> 'struct xt_table *' <LValueToRValue>
    | |   `-DeclRefExpr 0x12e0d0fd0 <col:21> 'struct xt_table *' lvalue Var 0x12e0cc4f8 't' 'struct xt_table *'
    | `-CompoundStmt 0x12e0d1218 <col:25, line:59:2>
    |   `-GotoStmt 0x12e0d1200 <line:58:3, col:8> 'free' 0x12e0d01c0
    |-CallExpr 0x12e0d1368 <line:61:2, col:19> 'int'
    | `-ImplicitCastExpr 0x12e0d1350 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x12e0d1330 <col:2> 'int ()' Function 0x12e0d1278 'local_bh_disable' 'int ()'
    |-BinaryOperator 0x12e0d1408 <line:62:2, col:15> 'const struct xt_table_info *' contains-errors '='
    | |-DeclRefExpr 0x12e0d1388 <col:2> 'const struct xt_table_info *' lvalue Var 0x12e0cc6f8 'private' 'const struct xt_table_info *'
    | `-RecoveryExpr 0x12e0d13e0 <col:12, col:15> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x12e0d13a8 <col:12> 'struct xt_table *' lvalue Var 0x12e0cc4f8 't' 'struct xt_table *'
    |-IfStmt 0x12e0d1568 <line:63:2, line:66:2>
    | |-BinaryOperator 0x12e0d14a8 <line:63:6, col:25> 'int' contains-errors '!='
    | | |-RecoveryExpr 0x12e0d1460 <col:6, col:15> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x12e0d1428 <col:6> 'const struct xt_table_info *' lvalue Var 0x12e0cc6f8 'private' 'const struct xt_table_info *'
    | | `-DeclRefExpr 0x12e0d1488 <col:25> 'unsigned int' lvalue Var 0x12e0cc148 'num_counters' 'unsigned int'
    | `-CompoundStmt 0x12e0d1550 <col:39, line:66:2>
    |   `-GotoStmt 0x12e0d1538 <line:65:3, col:8> 'unlock_up_free' 0x12e0d14e8
    |-BinaryOperator 0x12e0d15e0 <line:68:2, col:6> 'unsigned int' '='
    | |-DeclRefExpr 0x12e0d1588 <col:2> 'unsigned int' lvalue Var 0x12e0cbd18 'i' 'unsigned int'
    | `-ImplicitCastExpr 0x12e0d15c8 <col:6> 'unsigned int' <IntegralCast>
    |   `-IntegerLiteral 0x12e0d15a8 <col:6> 'int' 0
    |-BinaryOperator 0x12e0d1770 <line:70:2, col:33> 'unsigned int' '='
    | |-DeclRefExpr 0x12e0d1600 <col:2> 'unsigned int' lvalue Var 0x12e0cca68 'addend' 'unsigned int'
    | `-ImplicitCastExpr 0x12e0d1758 <col:11, col:33> 'unsigned int' <IntegralCast>
    |   `-CallExpr 0x12e0d1738 <col:11, col:33> 'int'
    |     `-ImplicitCastExpr 0x12e0d1720 <col:11> 'int (*)()' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x12e0d1700 <col:11> 'int ()' Function 0x12e0d1648 'xt_write_recseq_begin' 'int ()'
    |-CallExpr 0x12e0d1970 <line:71:2, col:57> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12e0d1870 <col:2> 'int ()' Function 0x12e0d17b8 'xt_entry_foreach' 'int ()'
    | |-DeclRefExpr 0x12e0d1890 <col:19> 'struct arpt_entry *' lvalue Var 0x12e0cc9b8 'iter' 'struct arpt_entry *'
    | |-RecoveryExpr 0x12e0d18e8 <col:26, col:35> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x12e0d18b0 <col:26> 'const struct xt_table_info *' lvalue Var 0x12e0cc6f8 'private' 'const struct xt_table_info *'
    | `-RecoveryExpr 0x12e0d1948 <col:44, col:53> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x12e0d1910 <col:44> 'const struct xt_table_info *' lvalue Var 0x12e0cc6f8 'private' 'const struct xt_table_info *'
    |-CompoundStmt 0x12f0088d8 <col:59, line:77:2>
    | |-DeclStmt 0x12e0d1a70 <line:72:3, col:26>
    | | `-VarDecl 0x12e0d1a08 <col:3, col:23> col:23 used tmp 'struct xt_counters *'
    | |-BinaryOperator 0x12e0d1c48 <line:74:3, col:48> 'struct xt_counters *' contains-errors '='
    | | |-DeclRefExpr 0x12e0d1a88 <col:3> 'struct xt_counters *' lvalue Var 0x12e0d1a08 'tmp' 'struct xt_counters *'
    | | `-CallExpr 0x12e0d1c20 <col:9, col:48> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x12e0d1b88 <col:9> 'int ()' Function 0x12e0d1ad0 'xt_get_this_cpu_counter' 'int ()'
    | |   `-UnaryOperator 0x12e0d1c08 <col:33, col:40> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |     `-RecoveryExpr 0x12e0d1be0 <col:34, col:40> '<dependent type>' contains-errors lvalue
    | |       `-DeclRefExpr 0x12e0d1ba8 <col:34> 'struct arpt_entry *' lvalue Var 0x12e0cc9b8 'iter' 'struct arpt_entry *'
    | `-UnaryOperator 0x12f0088c0 <line:76:3, col:5> 'unsigned int' prefix '++'
    |   `-DeclRefExpr 0x12f0088a0 <col:5> 'unsigned int' lvalue Var 0x12e0cbd18 'i' 'unsigned int'
    |-CallExpr 0x12f008a38 <line:78:2, col:28> 'int'
    | |-ImplicitCastExpr 0x12f008a20 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x12f0089e0 <col:2> 'int ()' Function 0x12f008928 'xt_write_recseq_end' 'int ()'
    | `-ImplicitCastExpr 0x12f008a60 <col:22> 'unsigned int' <LValueToRValue>
    |   `-DeclRefExpr 0x12f008a00 <col:22> 'unsigned int' lvalue Var 0x12e0cca68 'addend' 'unsigned int'
    |-LabelStmt 0x12f008bb0 <line:79:2, line:80:18> 'unlock_up_free'
    | `-CallExpr 0x12f008b90 <col:2, col:18> 'int'
    |   `-ImplicitCastExpr 0x12f008b78 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x12f008b58 <col:2> 'int ()' Function 0x12f008aa0 'local_bh_enable' 'int ()'
    |-CallExpr 0x12f008d08 <line:81:2, col:19> 'int'
    | |-ImplicitCastExpr 0x12f008cf0 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x12f008cb0 <col:2> 'int ()' Function 0x12f008bf8 'xt_table_unlock' 'int ()'
    | `-ImplicitCastExpr 0x12f008d30 <col:18> 'struct xt_table *' <LValueToRValue>
    |   `-DeclRefExpr 0x12f008cd0 <col:18> 'struct xt_table *' lvalue Var 0x12e0cc4f8 't' 'struct xt_table *'
    |-CallExpr 0x12f008ea8 <line:82:2, col:18> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12f008e28 <col:2> 'int ()' Function 0x12f008d70 'module_put' 'int ()'
    | `-RecoveryExpr 0x12f008e80 <col:13, col:16> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x12f008e48 <col:13> 'struct xt_table *' lvalue Var 0x12e0cc4f8 't' 'struct xt_table *'
    |-LabelStmt 0x12f009048 <line:83:2, line:84:13> 'free'
    | `-CallExpr 0x12f009008 <col:2, col:13> 'int'
    |   |-ImplicitCastExpr 0x12f008ff0 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x12f008fb0 <col:2> 'int ()' Function 0x12f008ef8 'vfree' 'int ()'
    |   `-ImplicitCastExpr 0x12f009030 <col:8> 'struct xt_counters *' <LValueToRValue>
    |     `-DeclRefExpr 0x12f008fd0 <col:8> 'struct xt_counters *' lvalue Var 0x12e0cc098 'paddc' 'struct xt_counters *'
    `-ReturnStmt 0x12f0090a0 <line:86:2, col:9>
      `-ImplicitCastExpr 0x12f009088 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x12f009068 <col:9> 'int' lvalue Var 0x12e0cc7a8 'ret' 'int'
