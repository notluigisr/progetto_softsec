TranslationUnitDecl 0x15c055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x15c0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x15c055bd0 '__int128'
|-TypedefDecl 0x15c056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x15c055bf0 'unsigned __int128'
|-TypedefDecl 0x15c126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15c126000 'struct __NSConstantString_tag'
|   `-Record 0x15c056580 '__NSConstantString_tag'
|-TypedefDecl 0x15c126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x15c055d90 '__SVInt8_t'
|-TypedefDecl 0x15c126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x15c055db0 '__SVInt16_t'
|-TypedefDecl 0x15c126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x15c055dd0 '__SVInt32_t'
|-TypedefDecl 0x15c1263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x15c055df0 '__SVInt64_t'
|-TypedefDecl 0x15c126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x15c055e10 '__SVUint8_t'
|-TypedefDecl 0x15c1264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x15c055e30 '__SVUint16_t'
|-TypedefDecl 0x15c126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x15c055e50 '__SVUint32_t'
|-TypedefDecl 0x15c126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x15c055e70 '__SVUint64_t'
|-TypedefDecl 0x15c1265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x15c055e90 '__SVFloat16_t'
|-TypedefDecl 0x15c126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x15c055eb0 '__SVFloat32_t'
|-TypedefDecl 0x15c1266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x15c055ed0 '__SVFloat64_t'
|-TypedefDecl 0x15c126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x15c055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15c126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x15c055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15c1267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x15c055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15c126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x15c055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15c1268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x15c055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15c126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x15c055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15c126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x15c055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15c1269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x15c055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15c126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x15c055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15c126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x15c056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15c126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x15c056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15c126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x15c056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15c126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x15c056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15c126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x15c056090 '__clang_svint8x3_t'
|-TypedefDecl 0x15c126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x15c0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15c126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x15c0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15c126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x15c0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15c126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x15c056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15c126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x15c056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15c126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x15c056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15c126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x15c056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15c126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x15c056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15c127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x15c0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15c127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x15c0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15c1278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x15c0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15c127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x15c056210 '__clang_svint8x4_t'
|-TypedefDecl 0x15c1279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x15c056230 '__clang_svint16x4_t'
|-TypedefDecl 0x15c127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x15c056250 '__clang_svint32x4_t'
|-TypedefDecl 0x15c127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x15c056270 '__clang_svint64x4_t'
|-TypedefDecl 0x15c127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x15c056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15c127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x15c0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15c127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x15c0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15c127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x15c0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15c127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x15c056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15c127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x15c056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15c127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x15c056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15c127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x15c056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15c127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x15c056390 '__SVBool_t'
|-TypedefDecl 0x15c127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x15c0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15c127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x15c0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15c127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x15c0563f0 '__SVCount_t'
|-TypedefDecl 0x15c127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15c127fb0 'char *'
|   `-BuiltinType 0x15c0556b0 'char'
|-TypedefDecl 0x15c128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15c127fb0 'char *'
|   `-BuiltinType 0x15c0556b0 'char'
|-FunctionDecl 0x15c128318 <dataset_diviso_filec/func13937_vuln.c:1:1, line:26:1> line:1:1 invalid set_ssl_ciphers 'int (int *, char *, int *)'
| |-ParmVarDecl 0x15c128128 <col:17, col:32> col:32 referenced invalid schannel_cred 'int *'
| |-ParmVarDecl 0x15c1281a8 <col:47, col:53> col:53 used ciphers 'char *'
| |-ParmVarDecl 0x15c128228 <line:2:17, col:22> col:22 used algIds 'int *'
| `-CompoundStmt 0x15c143bf8 <line:3:1, line:26:1>
|   |-DeclStmt 0x15c128490 <line:4:3, col:27>
|   | `-VarDecl 0x15c1283f0 <col:3, col:20> col:9 used startCur 'char *' cinit
|   |   `-ImplicitCastExpr 0x15c128478 <col:20> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x15c128458 <col:20> 'char *' lvalue ParmVar 0x15c1281a8 'ciphers' 'char *'
|   |-DeclStmt 0x15c128548 <line:5:3, col:19>
|   | `-VarDecl 0x15c1284c0 <col:3, col:18> col:7 used algCount 'int' cinit
|   |   `-IntegerLiteral 0x15c128528 <col:18> 'int' 0
|   |-WhileStmt 0x15c1439f0 <line:6:3, line:22:3>
|   | |-RecoveryExpr 0x15c1286f0 <line:6:9, col:66> '_Bool' contains-errors
|   | `-CompoundStmt 0x15c1439b8 <col:69, line:22:3>
|   |   |-DeclStmt 0x15c142028 <line:7:5, col:38>
|   |   | `-VarDecl 0x15c128728 <col:5, col:37> col:10 used alg 'long' cinit
|   |   |   `-CallExpr 0x15c141fa8 <col:16, col:37> 'long'
|   |   |     |-ImplicitCastExpr 0x15c141f90 <col:16> 'long (*)(const char *, char **, int)' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x15c141ec0 <col:16> 'long (const char *, char **, int)' Function 0x15c141c70 'strtol' 'long (const char *, char **, int)'
|   |   |     |-ImplicitCastExpr 0x15c141ff8 <col:23> 'const char *' <NoOp>
|   |   |     | `-ImplicitCastExpr 0x15c141fe0 <col:23> 'char *' <LValueToRValue>
|   |   |     |   `-DeclRefExpr 0x15c141ee0 <col:23> 'char *' lvalue Var 0x15c1283f0 'startCur' 'char *'
|   |   |     |-ImplicitCastExpr 0x15c142010 <col:33> 'char **' <NullToPointer>
|   |   |     | `-IntegerLiteral 0x15c141f00 <col:33> 'int' 0
|   |   |     `-IntegerLiteral 0x15c141f20 <col:36> 'int' 0
|   |   |-IfStmt 0x15c142310 <line:8:5, line:9:40>
|   |   | |-UnaryOperator 0x15c142078 <line:8:8, col:9> 'int' prefix '!' cannot overflow
|   |   | | `-ImplicitCastExpr 0x15c142060 <col:9> 'long' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x15c142040 <col:9> 'long' lvalue Var 0x15c128728 'alg' 'long'
|   |   | `-BinaryOperator 0x15c1422f0 <line:9:7, col:40> 'long' '='
|   |   |   |-DeclRefExpr 0x15c142090 <col:7> 'long' lvalue Var 0x15c128728 'alg' 'long'
|   |   |   `-ImplicitCastExpr 0x15c1422d8 <col:13, col:40> 'long' <IntegralCast>
|   |   |     `-CallExpr 0x15c142298 <col:13, col:40> 'int'
|   |   |       |-ImplicitCastExpr 0x15c142280 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |       | `-DeclRefExpr 0x15c142210 <col:13> 'int ()' Function 0x15c142158 'get_alg_id_by_name' 'int ()'
|   |   |       `-ImplicitCastExpr 0x15c1422c0 <col:32> 'char *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x15c142230 <col:32> 'char *' lvalue Var 0x15c1283f0 'startCur' 'char *'
|   |   |-IfStmt 0x15c143578 <line:10:5, line:18:14> has_else
|   |   | |-ImplicitCastExpr 0x15c142350 <line:10:8> 'long' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x15c142330 <col:8> 'long' lvalue Var 0x15c128728 'alg' 'long'
|   |   | |-BinaryOperator 0x15c142448 <line:11:7, col:28> 'int' '='
|   |   | | |-ArraySubscriptExpr 0x15c1423d8 <col:7, col:24> 'int' lvalue
|   |   | | | |-ImplicitCastExpr 0x15c1423c0 <col:7> 'int *' <LValueToRValue>
|   |   | | | | `-DeclRefExpr 0x15c142368 <col:7> 'int *' lvalue ParmVar 0x15c128228 'algIds' 'int *'
|   |   | | | `-UnaryOperator 0x15c1423a8 <col:14, col:22> 'int' postfix '++'
|   |   | | |   `-DeclRefExpr 0x15c142388 <col:14> 'int' lvalue Var 0x15c1284c0 'algCount' 'int'
|   |   | | `-ImplicitCastExpr 0x15c142430 <col:28> 'int' <IntegralCast>
|   |   | |   `-ImplicitCastExpr 0x15c142418 <col:28> 'long' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x15c1423f8 <col:28> 'long' lvalue Var 0x15c128728 'alg' 'long'
|   |   | `-IfStmt 0x15c143548 <line:12:10, line:18:14> has_else
|   |   |   |-BinaryOperator 0x15c1433b8 <line:12:13, line:15:39> 'int' '||'
|   |   |   | |-UnaryOperator 0x15c143190 <line:12:13, line:13:39> 'int' prefix '!' cannot overflow
|   |   |   | | `-CallExpr 0x15c1430f8 <line:12:14, line:13:39> 'int'
|   |   |   | |   |-ImplicitCastExpr 0x15c1430e0 <line:12:14> 'int (*)(const char *, const char *, unsigned long)' <FunctionToPointerDecay>
|   |   |   | |   | `-DeclRefExpr 0x15c142708 <col:14> 'int (const char *, const char *, unsigned long)' Function 0x15c1424b8 'strncmp' 'int (const char *, const char *, unsigned long)'
|   |   |   | |   |-ImplicitCastExpr 0x15c143148 <col:22> 'const char *' <NoOp>
|   |   |   | |   | `-ImplicitCastExpr 0x15c143130 <col:22> 'char *' <LValueToRValue>
|   |   |   | |   |   `-DeclRefExpr 0x15c142728 <col:22> 'char *' lvalue Var 0x15c1283f0 'startCur' 'char *'
|   |   |   | |   |-ImplicitCastExpr 0x15c143178 <col:32> 'const char *' <NoOp>
|   |   |   | |   | `-ImplicitCastExpr 0x15c143160 <col:32> 'char *' <ArrayToPointerDecay>
|   |   |   | |   |   `-StringLiteral 0x15c142790 <col:32> 'char[4]' lvalue "STR"
|   |   |   | |   `-BinaryOperator 0x15c143058 <line:13:22, col:38> 'unsigned long' '-'
|   |   |   | |     |-UnaryExprOrTypeTraitExpr 0x15c143000 <col:22, col:34> 'unsigned long' sizeof
|   |   |   | |     | `-ParenExpr 0x15c1427d0 <col:28, col:34> 'char[4]' lvalue
|   |   |   | |     |   `-StringLiteral 0x15c1427b0 <col:29> 'char[4]' lvalue "STR"
|   |   |   | |     `-ImplicitCastExpr 0x15c143040 <col:38> 'unsigned long' <IntegralCast>
|   |   |   | |       `-IntegerLiteral 0x15c143020 <col:38> 'int' 1
|   |   |   | `-UnaryOperator 0x15c1433a0 <line:14:13, line:15:39> 'int' prefix '!' cannot overflow
|   |   |   |   `-CallExpr 0x15c143308 <line:14:14, line:15:39> 'int'
|   |   |   |     |-ImplicitCastExpr 0x15c1432f0 <line:14:14> 'int (*)(const char *, const char *, unsigned long)' <FunctionToPointerDecay>
|   |   |   |     | `-DeclRefExpr 0x15c1431a8 <col:14> 'int (const char *, const char *, unsigned long)' Function 0x15c1424b8 'strncmp' 'int (const char *, const char *, unsigned long)'
|   |   |   |     |-ImplicitCastExpr 0x15c143358 <col:22> 'const char *' <NoOp>
|   |   |   |     | `-ImplicitCastExpr 0x15c143340 <col:22> 'char *' <LValueToRValue>
|   |   |   |     |   `-DeclRefExpr 0x15c1431c8 <col:22> 'char *' lvalue Var 0x15c1283f0 'startCur' 'char *'
|   |   |   |     |-ImplicitCastExpr 0x15c143388 <col:32> 'const char *' <NoOp>
|   |   |   |     | `-ImplicitCastExpr 0x15c143370 <col:32> 'char *' <ArrayToPointerDecay>
|   |   |   |     |   `-StringLiteral 0x15c1431e8 <col:32> 'char[4]' lvalue "STR"
|   |   |   |     `-BinaryOperator 0x15c1432a0 <line:15:22, col:38> 'unsigned long' '-'
|   |   |   |       |-UnaryExprOrTypeTraitExpr 0x15c143248 <col:22, col:34> 'unsigned long' sizeof
|   |   |   |       | `-ParenExpr 0x15c143228 <col:28, col:34> 'char[4]' lvalue
|   |   |   |       |   `-StringLiteral 0x15c143208 <col:29> 'char[4]' lvalue "STR"
|   |   |   |       `-ImplicitCastExpr 0x15c143288 <col:38> 'unsigned long' <IntegralCast>
|   |   |   |         `-IntegerLiteral 0x15c143268 <col:38> 'int' 1
|   |   |   |-CompoundAssignOperator 0x15c1434d0 <line:16:7, col:33> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |   |   | |-CXXDependentScopeMemberExpr 0x15c143420 <col:7, col:22> '<dependent type>' contains-errors lvalue ->dwFlags
|   |   |   | | `-RecoveryExpr 0x15c1433f8 <col:7> '<dependent type>' contains-errors lvalue
|   |   |   | |   `-DeclRefExpr 0x15c1433d8 <col:7> 'int *' lvalue ParmVar 0x15c128128 'schannel_cred' 'int *'
|   |   |   | `-RecoveryExpr 0x15c1434b0 <col:33> '<dependent type>' contains-errors lvalue
|   |   |   `-ReturnStmt 0x15c143538 <line:18:7, col:14>
|   |   |     `-RecoveryExpr 0x15c143518 <col:14> '<dependent type>' contains-errors lvalue
|   |   |-BinaryOperator 0x15c143908 <line:19:5, col:36> 'char *' '='
|   |   | |-DeclRefExpr 0x15c1435a8 <col:5> 'char *' lvalue Var 0x15c1283f0 'startCur' 'char *'
|   |   | `-CallExpr 0x15c1438a8 <col:16, col:36> 'char *'
|   |   |   |-ImplicitCastExpr 0x15c143890 <col:16> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x15c1437f0 <col:16> 'char *(const char *, int)' Function 0x15c143610 'strchr' 'char *(const char *, int)'
|   |   |   |-ImplicitCastExpr 0x15c1438f0 <col:23> 'const char *' <NoOp>
|   |   |   | `-ImplicitCastExpr 0x15c1438d8 <col:23> 'char *' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x15c143810 <col:23> 'char *' lvalue Var 0x15c1283f0 'startCur' 'char *'
|   |   |   `-CharacterLiteral 0x15c143830 <col:33> 'int' 58
|   |   `-IfStmt 0x15c143998 <line:20:5, line:21:15>
|   |     |-ImplicitCastExpr 0x15c143948 <line:20:8> 'char *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x15c143928 <col:8> 'char *' lvalue Var 0x15c1283f0 'startCur' 'char *'
|   |     `-UnaryOperator 0x15c143980 <line:21:7, col:15> 'char *' postfix '++'
|   |       `-DeclRefExpr 0x15c143960 <col:7> 'char *' lvalue Var 0x15c1283f0 'startCur' 'char *'
|   |-BinaryOperator 0x15c143ac0 <line:23:3, col:38> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x15c143a58 <col:3, col:18> '<dependent type>' contains-errors lvalue ->palgSupportedAlgs
|   | | `-RecoveryExpr 0x15c143a30 <col:3> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x15c143a10 <col:3> 'int *' lvalue ParmVar 0x15c128128 'schannel_cred' 'int *'
|   | `-DeclRefExpr 0x15c143aa0 <col:38> 'int *' lvalue ParmVar 0x15c128228 'algIds' 'int *'
|   |-BinaryOperator 0x15c143b90 <line:24:3, col:35> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x15c143b28 <col:3, col:18> '<dependent type>' contains-errors lvalue ->cSupportedAlgs
|   | | `-RecoveryExpr 0x15c143b00 <col:3> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x15c143ae0 <col:3> 'int *' lvalue ParmVar 0x15c128128 'schannel_cred' 'int *'
|   | `-DeclRefExpr 0x15c143b70 <col:35> 'int' lvalue Var 0x15c1284c0 'algCount' 'int'
|   `-ReturnStmt 0x15c143be8 <line:25:3, col:10>
|     `-RecoveryExpr 0x15c143bc8 <col:10> '<dependent type>' contains-errors lvalue
|-FunctionDecl 0x15c141c70 <line:7:16> col:16 implicit used strtol 'long (const char *, char **, int)' extern
| |-ParmVarDecl 0x15c141d70 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x15c141dd8 <<invalid sloc>> <invalid sloc> 'char **'
| |-ParmVarDecl 0x15c141e40 <<invalid sloc>> <invalid sloc> 'int'
| `-BuiltinAttr 0x15c141d18 <<invalid sloc>> Implicit 877
|-FunctionDecl 0x15c1424b8 <line:12:14> col:14 implicit used strncmp 'int (const char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0x15c1425b8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x15c142620 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x15c142688 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x15c142560 <<invalid sloc>> Implicit 888
`-FunctionDecl 0x15c143610 <line:19:16> col:16 implicit used strchr 'char *(const char *, int)' extern
  |-ParmVarDecl 0x15c143710 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x15c143778 <<invalid sloc>> <invalid sloc> 'int'
  `-BuiltinAttr 0x15c1436b8 <<invalid sloc>> Implicit 893
