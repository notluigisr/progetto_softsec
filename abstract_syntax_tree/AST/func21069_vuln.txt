TranslationUnitDecl 0x12204c008 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12204ceb8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12204c5d0 '__int128'
|-TypedefDecl 0x12204cf28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12204c5f0 'unsigned __int128'
|-TypedefDecl 0x12281b030 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12281ae00 'struct __NSConstantString_tag'
|   `-Record 0x12204cf80 '__NSConstantString_tag'
|-TypedefDecl 0x12281b098 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12204c790 '__SVInt8_t'
|-TypedefDecl 0x12281b100 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12204c7b0 '__SVInt16_t'
|-TypedefDecl 0x12281b168 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12204c7d0 '__SVInt32_t'
|-TypedefDecl 0x12281b1d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12204c7f0 '__SVInt64_t'
|-TypedefDecl 0x12281b238 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12204c810 '__SVUint8_t'
|-TypedefDecl 0x12281b2a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12204c830 '__SVUint16_t'
|-TypedefDecl 0x12281b308 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12204c850 '__SVUint32_t'
|-TypedefDecl 0x12281b370 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12204c870 '__SVUint64_t'
|-TypedefDecl 0x12281b3d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12204c890 '__SVFloat16_t'
|-TypedefDecl 0x12281b440 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12204c8b0 '__SVFloat32_t'
|-TypedefDecl 0x12281b4a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12204c8d0 '__SVFloat64_t'
|-TypedefDecl 0x12281b510 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12204c8f0 '__SVBfloat16_t'
|-TypedefDecl 0x12281b578 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12204c910 '__clang_svint8x2_t'
|-TypedefDecl 0x12281b5e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12204c930 '__clang_svint16x2_t'
|-TypedefDecl 0x12281b648 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12204c950 '__clang_svint32x2_t'
|-TypedefDecl 0x12281b6b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12204c970 '__clang_svint64x2_t'
|-TypedefDecl 0x12281b718 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12204c990 '__clang_svuint8x2_t'
|-TypedefDecl 0x12281b780 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12204c9b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12281b7e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12204c9d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12281b850 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12204c9f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12281b8b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12204ca10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12281b920 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12204ca30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12281b988 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12204ca50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12281b9f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12204ca70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12281ba58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12204ca90 '__clang_svint8x3_t'
|-TypedefDecl 0x12281bac0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12204cab0 '__clang_svint16x3_t'
|-TypedefDecl 0x12281bb28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12204cad0 '__clang_svint32x3_t'
|-TypedefDecl 0x12281bb90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12204caf0 '__clang_svint64x3_t'
|-TypedefDecl 0x12281bbf8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12204cb10 '__clang_svuint8x3_t'
|-TypedefDecl 0x12281bc60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12204cb30 '__clang_svuint16x3_t'
|-TypedefDecl 0x12281bcc8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12204cb50 '__clang_svuint32x3_t'
|-TypedefDecl 0x12281bd30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12204cb70 '__clang_svuint64x3_t'
|-TypedefDecl 0x12281bd98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12204cb90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12281c600 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12204cbb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12281c668 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12204cbd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12281c6d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12204cbf0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12281c738 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12204cc10 '__clang_svint8x4_t'
|-TypedefDecl 0x12281c7a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12204cc30 '__clang_svint16x4_t'
|-TypedefDecl 0x12281c808 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12204cc50 '__clang_svint32x4_t'
|-TypedefDecl 0x12281c870 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12204cc70 '__clang_svint64x4_t'
|-TypedefDecl 0x12281c8d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12204cc90 '__clang_svuint8x4_t'
|-TypedefDecl 0x12281c940 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12204ccb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12281c9a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12204ccd0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12281ca10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12204ccf0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12281ca78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12204cd10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12281cae0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12204cd30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12281cb48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12204cd50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12281cbb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12204cd70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12281cc18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12204cd90 '__SVBool_t'
|-TypedefDecl 0x12281cc80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12204cdb0 '__clang_svboolx2_t'
|-TypedefDecl 0x12281cce8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12204cdd0 '__clang_svboolx4_t'
|-TypedefDecl 0x12281cd50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12204cdf0 '__SVCount_t'
|-TypedefDecl 0x12281cdf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12281cdb0 'char *'
|   `-BuiltinType 0x12204c0b0 'char'
|-TypedefDecl 0x12281ce68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12281cdb0 'char *'
|   `-BuiltinType 0x12204c0b0 'char'
|-FunctionDecl 0x12281d080 <dataset_diviso_filec/func21069_vuln.c:1:1, line:16:1> line:1:6 invalid pdf_get_version 'void (int *, int *)'
| |-ParmVarDecl 0x12281cf28 <col:22, col:28> col:28 invalid fp 'int *'
| |-ParmVarDecl 0x12281cfa8 <col:32, col:39> col:39 referenced invalid pdf 'int *'
| `-CompoundStmt 0x1228326a0 <line:2:1, line:16:1>
|   |-DeclStmt 0x12281d250 <line:3:5, col:21>
|   | |-VarDecl 0x12281d150 <col:5, col:11> col:11 used header 'char *'
|   | `-VarDecl 0x12281d1d0 <col:5, col:20> col:20 used c 'char *'
|   |-BinaryOperator 0x12281d448 <line:5:5, col:27> 'char *' contains-errors '='
|   | |-DeclRefExpr 0x12281d268 <col:5> 'char *' lvalue Var 0x12281d150 'header' 'char *'
|   | `-CallExpr 0x12281d420 <col:14, col:27> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x12281d3e0 <col:14> 'int ()' Function 0x12281d328 'get_header' 'int ()'
|   |   `-RecoveryExpr 0x12281d400 <col:25> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x122831de0 <line:8:5, line:13:5>
|   | |-BinaryOperator 0x122831828 <line:8:9, line:9:31> 'int' '&&'
|   | | |-ParenExpr 0x1228314a8 <line:8:9, col:35> 'char *'
|   | | | `-BinaryOperator 0x122831488 <col:10, col:34> 'char *' '='
|   | | |   |-DeclRefExpr 0x12281d468 <col:10> 'char *' lvalue Var 0x12281d1d0 'c' 'char *'
|   | | |   `-CallExpr 0x1228313f8 <col:14, col:34> 'char *'
|   | | |     |-ImplicitCastExpr 0x1228313e0 <col:14> 'char *(*)(const char *, const char *)' <FunctionToPointerDecay>
|   | | |     | `-DeclRefExpr 0x1228312e0 <col:14> 'char *(const char *, const char *)' Function 0x122831100 'strstr' 'char *(const char *, const char *)'
|   | | |     |-ImplicitCastExpr 0x122831440 <col:21> 'const char *' <NoOp>
|   | | |     | `-ImplicitCastExpr 0x122831428 <col:21> 'char *' <LValueToRValue>
|   | | |     |   `-DeclRefExpr 0x122831300 <col:21> 'char *' lvalue Var 0x12281d150 'header' 'char *'
|   | | |     `-ImplicitCastExpr 0x122831470 <col:29> 'const char *' <NoOp>
|   | | |       `-ImplicitCastExpr 0x122831458 <col:29> 'char *' <ArrayToPointerDecay>
|   | | |         `-StringLiteral 0x122831360 <col:29> 'char[4]' lvalue "STR"
|   | | `-ParenExpr 0x122831808 <line:9:9, col:31> 'char *'
|   | |   `-BinaryOperator 0x1228317e8 <col:10, col:30> 'char *' '+'
|   | |     |-BinaryOperator 0x1228317a8 <col:10, col:26> 'char *' '+'
|   | |     | |-ImplicitCastExpr 0x122831790 <col:10> 'char *' <LValueToRValue>
|   | |     | | `-DeclRefExpr 0x1228314c8 <col:10> 'char *' lvalue Var 0x12281d1d0 'c' 'char *'
|   | |     | `-CallExpr 0x122831738 <col:14, col:26> 'unsigned long'
|   | |     |   |-ImplicitCastExpr 0x122831720 <col:14> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   | |     |   | `-DeclRefExpr 0x122831698 <col:14> 'unsigned long (const char *)' Function 0x122831528 'strlen' 'unsigned long (const char *)'
|   | |     |   `-ImplicitCastExpr 0x122831778 <col:21> 'const char *' <NoOp>
|   | |     |     `-ImplicitCastExpr 0x122831760 <col:21> 'char *' <ArrayToPointerDecay>
|   | |     |       `-StringLiteral 0x1228316b8 <col:21> 'char[4]' lvalue "STR"
|   | |     `-IntegerLiteral 0x1228317c8 <col:30> 'int' 2
|   | `-CompoundStmt 0x122831dc0 <line:10:5, line:13:5>
|   |   |-BinaryOperator 0x122831b70 <line:11:9, col:56> '<dependent type>' contains-errors '='
|   |   | |-CXXDependentScopeMemberExpr 0x122831890 <col:9, col:14> '<dependent type>' contains-errors lvalue ->pdf_major_version
|   |   | | `-RecoveryExpr 0x122831868 <col:9> '<dependent type>' contains-errors lvalue
|   |   | |   `-DeclRefExpr 0x122831848 <col:9> 'int *' lvalue ParmVar 0x12281cfa8 'pdf' 'int *'
|   |   | `-CallExpr 0x122831b48 <col:34, col:56> 'int'
|   |   |   |-ImplicitCastExpr 0x122831b30 <col:34> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x1228319b8 <col:34> 'int ()' Function 0x122831900 'atoi' 'int ()'
|   |   |   `-BinaryOperator 0x122831ad8 <col:39, col:55> 'char *' '+'
|   |   |     |-ImplicitCastExpr 0x122831ac0 <col:39> 'char *' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x1228319d8 <col:39> 'char *' lvalue Var 0x12281d1d0 'c' 'char *'
|   |   |     `-CallExpr 0x122831a68 <col:43, col:55> 'unsigned long'
|   |   |       |-ImplicitCastExpr 0x122831a50 <col:43> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |   |       | `-DeclRefExpr 0x1228319f8 <col:43> 'unsigned long (const char *)' Function 0x122831528 'strlen' 'unsigned long (const char *)'
|   |   |       `-ImplicitCastExpr 0x122831aa8 <col:50> 'const char *' <NoOp>
|   |   |         `-ImplicitCastExpr 0x122831a90 <col:50> 'char *' <ArrayToPointerDecay>
|   |   |           `-StringLiteral 0x122831a18 <col:50> 'char[4]' lvalue "STR"
|   |   `-BinaryOperator 0x122831da0 <line:12:9, col:56> '<dependent type>' contains-errors '='
|   |     |-CXXDependentScopeMemberExpr 0x122831bd8 <col:9, col:14> '<dependent type>' contains-errors lvalue ->pdf_minor_version
|   |     | `-RecoveryExpr 0x122831bb0 <col:9> '<dependent type>' contains-errors lvalue
|   |     |   `-DeclRefExpr 0x122831b90 <col:9> 'int *' lvalue ParmVar 0x12281cfa8 'pdf' 'int *'
|   |     `-CallExpr 0x122831d78 <col:34, col:56> 'int'
|   |       |-ImplicitCastExpr 0x122831d60 <col:34> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x122831c20 <col:34> 'int ()' Function 0x122831900 'atoi' 'int ()'
|   |       `-BinaryOperator 0x122831d40 <col:39, col:55> 'char *' '+'
|   |         |-ImplicitCastExpr 0x122831d28 <col:39> 'char *' <LValueToRValue>
|   |         | `-DeclRefExpr 0x122831c40 <col:39> 'char *' lvalue Var 0x12281d1d0 'c' 'char *'
|   |         `-CallExpr 0x122831cd0 <col:43, col:55> 'unsigned long'
|   |           |-ImplicitCastExpr 0x122831cb8 <col:43> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |           | `-DeclRefExpr 0x122831c60 <col:43> 'unsigned long (const char *)' Function 0x122831528 'strlen' 'unsigned long (const char *)'
|   |           `-ImplicitCastExpr 0x122831d10 <col:50> 'const char *' <NoOp>
|   |             `-ImplicitCastExpr 0x122831cf8 <col:50> 'char *' <ArrayToPointerDecay>
|   |               `-StringLiteral 0x122831c80 <col:50> 'char[4]' lvalue "STR"
|   `-CallExpr 0x122832648 <line:15:5, col:16> 'void'
|     |-ImplicitCastExpr 0x122832630 <col:5> 'void (*)(void *)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x1228325a8 <col:5> 'void (void *)' Function 0x122832438 'free' 'void (void *)'
|     `-ImplicitCastExpr 0x122832688 <col:10> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x122832670 <col:10> 'char *' <LValueToRValue>
|         `-DeclRefExpr 0x1228325c8 <col:10> 'char *' lvalue Var 0x12281d150 'header' 'char *'
|-FunctionDecl 0x122831100 <line:8:14> col:14 implicit used strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x122831200 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x122831268 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x1228311a8 <<invalid sloc>> Implicit 898
|-FunctionDecl 0x122831528 <line:9:14> col:14 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x122831628 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x1228315d0 <<invalid sloc>> Implicit 902
`-FunctionDecl 0x122832438 <line:15:5> col:5 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x122832538 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x1228324e0 <<invalid sloc>> Implicit 873
