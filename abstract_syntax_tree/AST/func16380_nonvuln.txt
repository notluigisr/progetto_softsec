TranslationUnitDecl 0x156038e08 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x156039cb8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1560393d0 '__int128'
|-TypedefDecl 0x156039d28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1560393f0 'unsigned __int128'
|-TypedefDecl 0x15700be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15700bc00 'struct __NSConstantString_tag'
|   `-Record 0x156039d80 '__NSConstantString_tag'
|-TypedefDecl 0x15700be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x156039590 '__SVInt8_t'
|-TypedefDecl 0x15700bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x1560395b0 '__SVInt16_t'
|-TypedefDecl 0x15700bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x1560395d0 '__SVInt32_t'
|-TypedefDecl 0x15700bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x1560395f0 '__SVInt64_t'
|-TypedefDecl 0x15700c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x156039610 '__SVUint8_t'
|-TypedefDecl 0x15700c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x156039630 '__SVUint16_t'
|-TypedefDecl 0x15700c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x156039650 '__SVUint32_t'
|-TypedefDecl 0x15700c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x156039670 '__SVUint64_t'
|-TypedefDecl 0x15700c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x156039690 '__SVFloat16_t'
|-TypedefDecl 0x15700c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x1560396b0 '__SVFloat32_t'
|-TypedefDecl 0x15700c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x1560396d0 '__SVFloat64_t'
|-TypedefDecl 0x15700c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x1560396f0 '__SVBfloat16_t'
|-TypedefDecl 0x15700c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x156039710 '__clang_svint8x2_t'
|-TypedefDecl 0x15700c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x156039730 '__clang_svint16x2_t'
|-TypedefDecl 0x15700c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x156039750 '__clang_svint32x2_t'
|-TypedefDecl 0x15700c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x156039770 '__clang_svint64x2_t'
|-TypedefDecl 0x15700c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x156039790 '__clang_svuint8x2_t'
|-TypedefDecl 0x15700c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x1560397b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15700c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x1560397d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15700c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x1560397f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15700c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x156039810 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15700c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x156039830 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15700c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x156039850 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15700c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x156039870 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15700c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x156039890 '__clang_svint8x3_t'
|-TypedefDecl 0x15700c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1560398b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15700c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1560398d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15700c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1560398f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15700c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x156039910 '__clang_svuint8x3_t'
|-TypedefDecl 0x15700ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x156039930 '__clang_svuint16x3_t'
|-TypedefDecl 0x15700cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x156039950 '__clang_svuint32x3_t'
|-TypedefDecl 0x15700cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x156039970 '__clang_svuint64x3_t'
|-TypedefDecl 0x15700cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x156039990 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15700d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1560399b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15700d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1560399d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15700d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1560399f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15700d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x156039a10 '__clang_svint8x4_t'
|-TypedefDecl 0x15700d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x156039a30 '__clang_svint16x4_t'
|-TypedefDecl 0x15700d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x156039a50 '__clang_svint32x4_t'
|-TypedefDecl 0x15700d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x156039a70 '__clang_svint64x4_t'
|-TypedefDecl 0x15700d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x156039a90 '__clang_svuint8x4_t'
|-TypedefDecl 0x15700d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x156039ab0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15700d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x156039ad0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15700d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x156039af0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15700d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x156039b10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15700d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x156039b30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15700d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x156039b50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15700d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x156039b70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15700da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x156039b90 '__SVBool_t'
|-TypedefDecl 0x15700da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x156039bb0 '__clang_svboolx2_t'
|-TypedefDecl 0x15700dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x156039bd0 '__clang_svboolx4_t'
|-TypedefDecl 0x15700db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x156039bf0 '__SVCount_t'
|-TypedefDecl 0x15700dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15700dbb0 'char *'
|   `-BuiltinType 0x156038eb0 'char'
|-TypedefDecl 0x15700dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15700dbb0 'char *'
|   `-BuiltinType 0x156038eb0 'char'
|-FunctionDecl 0x15700ddf0 <dataset_diviso_filec/func16380_nonvuln.c:1:1, line:7:1> line:1:20 invalid VectorTruncate 'void (int *)' static inline
| |-ParmVarDecl 0x15700dd28 <col:35, col:47> col:47 referenced invalid value 'int *'
| `-CompoundStmt 0x156110248 <line:2:1, line:7:1>
|   |-BinaryOperator 0x15610f970 <line:3:3, col:63> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x15700dee8 <col:3, col:10> '<dependent type>' contains-errors lvalue ->x
|   | | `-RecoveryExpr 0x15700dec0 <col:3> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x15700dea0 <col:3> 'int *' lvalue ParmVar 0x15700dd28 'value' 'int *'
|   | `-ConditionalOperator 0x15610f940 <col:14, col:63> '<dependent type>' contains-errors
|   |   |-BinaryOperator 0x15700dfb8 <col:14, col:25> 'int' contains-errors '>'
|   |   | |-CXXDependentScopeMemberExpr 0x15700df50 <col:14, col:21> '<dependent type>' contains-errors lvalue ->x
|   |   | | `-RecoveryExpr 0x15700df30 <col:14> '<dependent type>' contains-errors lvalue
|   |   | `-FloatingLiteral 0x15700df98 <col:25> 'float' 0.000000e+00
|   |   |-CallExpr 0x15610f6a8 <col:32, col:46> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x15610f620 <col:32> 'double (double)' Function 0x15610f460 'floor' 'double (double)'
|   |   | `-CXXDependentScopeMemberExpr 0x15610f660 <col:38, col:45> '<dependent type>' contains-errors lvalue ->x
|   |   |   `-RecoveryExpr 0x15610f640 <col:38> '<dependent type>' contains-errors lvalue
|   |   `-CallExpr 0x15610f918 <col:50, col:63> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x15610f890 <col:50> 'double (double)' Function 0x15610f6d0 'ceil' 'double (double)'
|   |     `-CXXDependentScopeMemberExpr 0x15610f8d0 <col:55, col:62> '<dependent type>' contains-errors lvalue ->x
|   |       `-RecoveryExpr 0x15610f8b0 <col:55> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x15610fc58 <line:4:3, col:63> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x15610f9d8 <col:3, col:10> '<dependent type>' contains-errors lvalue ->y
|   | | `-RecoveryExpr 0x15610f9b0 <col:3> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x15610f990 <col:3> 'int *' lvalue ParmVar 0x15700dd28 'value' 'int *'
|   | `-ConditionalOperator 0x15610fc28 <col:14, col:63> '<dependent type>' contains-errors
|   |   |-BinaryOperator 0x15610faa8 <col:14, col:25> 'int' contains-errors '>'
|   |   | |-CXXDependentScopeMemberExpr 0x15610fa40 <col:14, col:21> '<dependent type>' contains-errors lvalue ->y
|   |   | | `-RecoveryExpr 0x15610fa20 <col:14> '<dependent type>' contains-errors lvalue
|   |   | `-FloatingLiteral 0x15610fa88 <col:25> 'float' 0.000000e+00
|   |   |-CallExpr 0x15610fb50 <col:32, col:46> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x15610fac8 <col:32> 'double (double)' Function 0x15610f460 'floor' 'double (double)'
|   |   | `-CXXDependentScopeMemberExpr 0x15610fb08 <col:38, col:45> '<dependent type>' contains-errors lvalue ->y
|   |   |   `-RecoveryExpr 0x15610fae8 <col:38> '<dependent type>' contains-errors lvalue
|   |   `-CallExpr 0x15610fc00 <col:50, col:63> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x15610fb78 <col:50> 'double (double)' Function 0x15610f6d0 'ceil' 'double (double)'
|   |     `-CXXDependentScopeMemberExpr 0x15610fbb8 <col:55, col:62> '<dependent type>' contains-errors lvalue ->y
|   |       `-RecoveryExpr 0x15610fb98 <col:55> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x15610ff40 <line:5:3, col:63> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x15610fcc0 <col:3, col:10> '<dependent type>' contains-errors lvalue ->z
|   | | `-RecoveryExpr 0x15610fc98 <col:3> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x15610fc78 <col:3> 'int *' lvalue ParmVar 0x15700dd28 'value' 'int *'
|   | `-ConditionalOperator 0x15610ff10 <col:14, col:63> '<dependent type>' contains-errors
|   |   |-BinaryOperator 0x15610fd90 <col:14, col:25> 'int' contains-errors '>'
|   |   | |-CXXDependentScopeMemberExpr 0x15610fd28 <col:14, col:21> '<dependent type>' contains-errors lvalue ->z
|   |   | | `-RecoveryExpr 0x15610fd08 <col:14> '<dependent type>' contains-errors lvalue
|   |   | `-FloatingLiteral 0x15610fd70 <col:25> 'float' 0.000000e+00
|   |   |-CallExpr 0x15610fe38 <col:32, col:46> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x15610fdb0 <col:32> 'double (double)' Function 0x15610f460 'floor' 'double (double)'
|   |   | `-CXXDependentScopeMemberExpr 0x15610fdf0 <col:38, col:45> '<dependent type>' contains-errors lvalue ->z
|   |   |   `-RecoveryExpr 0x15610fdd0 <col:38> '<dependent type>' contains-errors lvalue
|   |   `-CallExpr 0x15610fee8 <col:50, col:63> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x15610fe60 <col:50> 'double (double)' Function 0x15610f6d0 'ceil' 'double (double)'
|   |     `-CXXDependentScopeMemberExpr 0x15610fea0 <col:55, col:62> '<dependent type>' contains-errors lvalue ->z
|   |       `-RecoveryExpr 0x15610fe80 <col:55> '<dependent type>' contains-errors lvalue
|   `-BinaryOperator 0x156110228 <line:6:3, col:63> '<dependent type>' contains-errors '='
|     |-CXXDependentScopeMemberExpr 0x15610ffa8 <col:3, col:10> '<dependent type>' contains-errors lvalue ->w
|     | `-RecoveryExpr 0x15610ff80 <col:3> '<dependent type>' contains-errors lvalue
|     |   `-DeclRefExpr 0x15610ff60 <col:3> 'int *' lvalue ParmVar 0x15700dd28 'value' 'int *'
|     `-ConditionalOperator 0x1561101f8 <col:14, col:63> '<dependent type>' contains-errors
|       |-BinaryOperator 0x156110078 <col:14, col:25> 'int' contains-errors '>'
|       | |-CXXDependentScopeMemberExpr 0x156110010 <col:14, col:21> '<dependent type>' contains-errors lvalue ->w
|       | | `-RecoveryExpr 0x15610fff0 <col:14> '<dependent type>' contains-errors lvalue
|       | `-FloatingLiteral 0x156110058 <col:25> 'float' 0.000000e+00
|       |-CallExpr 0x156110120 <col:32, col:46> '<dependent type>' contains-errors
|       | |-DeclRefExpr 0x156110098 <col:32> 'double (double)' Function 0x15610f460 'floor' 'double (double)'
|       | `-CXXDependentScopeMemberExpr 0x1561100d8 <col:38, col:45> '<dependent type>' contains-errors lvalue ->w
|       |   `-RecoveryExpr 0x1561100b8 <col:38> '<dependent type>' contains-errors lvalue
|       `-CallExpr 0x1561101d0 <col:50, col:63> '<dependent type>' contains-errors
|         |-DeclRefExpr 0x156110148 <col:50> 'double (double)' Function 0x15610f6d0 'ceil' 'double (double)'
|         `-CXXDependentScopeMemberExpr 0x156110188 <col:55, col:62> '<dependent type>' contains-errors lvalue ->w
|           `-RecoveryExpr 0x156110168 <col:55> '<dependent type>' contains-errors lvalue
|-FunctionDecl 0x15610f460 <line:3:32> col:32 implicit used floor 'double (double)' extern
| |-ParmVarDecl 0x15610f560 <<invalid sloc>> <invalid sloc> 'double'
| |-BuiltinAttr 0x15610f508 <<invalid sloc>> Implicit 1079
| |-NoThrowAttr 0x15610f5d0 <col:32> Implicit
| `-ConstAttr 0x15610f5f8 <col:32> Implicit
`-FunctionDecl 0x15610f6d0 <col:50> col:50 implicit used ceil 'double (double)' extern
  |-ParmVarDecl 0x15610f7d0 <<invalid sloc>> <invalid sloc> 'double'
  |-BuiltinAttr 0x15610f778 <<invalid sloc>> Implicit 1052
  |-NoThrowAttr 0x15610f840 <col:50> Implicit
  `-ConstAttr 0x15610f868 <col:50> Implicit
