TranslationUnitDecl 0x120055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1200564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x120055bd0 '__int128'
|-TypedefDecl 0x120056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x120055bf0 'unsigned __int128'
|-TypedefDecl 0x120126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x120126000 'struct __NSConstantString_tag'
|   `-Record 0x120056580 '__NSConstantString_tag'
|-TypedefDecl 0x120126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x120055d90 '__SVInt8_t'
|-TypedefDecl 0x120126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x120055db0 '__SVInt16_t'
|-TypedefDecl 0x120126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x120055dd0 '__SVInt32_t'
|-TypedefDecl 0x1201263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x120055df0 '__SVInt64_t'
|-TypedefDecl 0x120126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x120055e10 '__SVUint8_t'
|-TypedefDecl 0x1201264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x120055e30 '__SVUint16_t'
|-TypedefDecl 0x120126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x120055e50 '__SVUint32_t'
|-TypedefDecl 0x120126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x120055e70 '__SVUint64_t'
|-TypedefDecl 0x1201265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x120055e90 '__SVFloat16_t'
|-TypedefDecl 0x120126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x120055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1201266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x120055ed0 '__SVFloat64_t'
|-TypedefDecl 0x120126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x120055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x120126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x120055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1201267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x120055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x120126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x120055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1201268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x120055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x120126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x120055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x120126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x120055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1201269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x120055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x120126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x120055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x120126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x120056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x120126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x120056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x120126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x120056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x120126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x120056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x120126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x120056090 '__clang_svint8x3_t'
|-TypedefDecl 0x120126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1200560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x120126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1200560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x120126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1200560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x120126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x120056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x120126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x120056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x120126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x120056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x120126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x120056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x120126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x120056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x120127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1200561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x120127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1200561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1201278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1200561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x120127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x120056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1201279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x120056230 '__clang_svint16x4_t'
|-TypedefDecl 0x120127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x120056250 '__clang_svint32x4_t'
|-TypedefDecl 0x120127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x120056270 '__clang_svint64x4_t'
|-TypedefDecl 0x120127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x120056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x120127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1200562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x120127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1200562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x120127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1200562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x120127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x120056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x120127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x120056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x120127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x120056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x120127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x120056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x120127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x120056390 '__SVBool_t'
|-TypedefDecl 0x120127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1200563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x120127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1200563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x120127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1200563f0 '__SVCount_t'
|-TypedefDecl 0x120127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x120127fb0 'char *'
|   `-BuiltinType 0x1200556b0 'char'
|-TypedefDecl 0x120128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x120127fb0 'char *'
|   `-BuiltinType 0x1200556b0 'char'
|-FunctionDecl 0x120140a00 <dataset_diviso_filec/func20198_vuln.c:1:1, line:23:1> line:1:7 path_name 'char *(const struct name_path *, const char *)'
| |-ParmVarDecl 0x120128648 <col:17, col:41> col:41 used path 'const struct name_path *'
| |-ParmVarDecl 0x1201286c8 <col:47, col:59> col:59 used name 'const char *'
| `-CompoundStmt 0x1201438f0 <line:2:1, line:23:1>
|   |-DeclStmt 0x120140bf0 <line:3:2, col:27>
|   | `-VarDecl 0x120140b88 <col:2, col:26> col:26 used p 'const struct name_path *'
|   |-DeclStmt 0x120140d20 <line:4:2, col:13>
|   | |-VarDecl 0x120140c20 <col:2, col:8> col:8 used n 'char *'
|   | `-VarDecl 0x120140ca0 <col:2, col:12> col:12 used m 'char *'
|   |-DeclStmt 0x120141060 <line:5:2, col:25>
|   | `-VarDecl 0x120140d50 <col:2, col:24> col:6 used nlen 'int' cinit
|   |   `-ImplicitCastExpr 0x120141048 <col:13, col:24> 'int' <IntegralCast>
|   |     `-CallExpr 0x120141008 <col:13, col:24> 'unsigned long'
|   |       |-ImplicitCastExpr 0x120140ff0 <col:13> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x120140f68 <col:13> 'unsigned long (const char *)' Function 0x120140df8 'strlen' 'unsigned long (const char *)'
|   |       `-ImplicitCastExpr 0x120141030 <col:20> 'const char *' <LValueToRValue>
|   |         `-DeclRefExpr 0x120140f88 <col:20> 'const char *' lvalue ParmVar 0x1201286c8 'name' 'const char *'
|   |-DeclStmt 0x120141170 <line:6:2, col:20>
|   | `-VarDecl 0x120141090 <col:2, col:19> col:6 used len 'int' cinit
|   |   `-BinaryOperator 0x120141150 <col:12, col:19> 'int' '+'
|   |     |-ImplicitCastExpr 0x120141138 <col:12> 'int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1201410f8 <col:12> 'int' lvalue Var 0x120140d50 'nlen' 'int'
|   |     `-IntegerLiteral 0x120141118 <col:19> 'int' 1
|   |-ForStmt 0x120141460 <line:8:2, line:11:2>
|   | |-BinaryOperator 0x1201411e0 <line:8:7, col:11> 'const struct name_path *' '='
|   | | |-DeclRefExpr 0x120141188 <col:7> 'const struct name_path *' lvalue Var 0x120140b88 'p' 'const struct name_path *'
|   | | `-ImplicitCastExpr 0x1201411c8 <col:11> 'const struct name_path *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1201411a8 <col:11> 'const struct name_path *' lvalue ParmVar 0x120128648 'path' 'const struct name_path *'
|   | |-<<<NULL>>>
|   | |-ImplicitCastExpr 0x120141220 <col:17> 'const struct name_path *' <LValueToRValue>
|   | | `-DeclRefExpr 0x120141200 <col:17> 'const struct name_path *' lvalue Var 0x120140b88 'p' 'const struct name_path *'
|   | |-BinaryOperator 0x1201412b8 <col:20, col:27> 'const struct name_path *' contains-errors '='
|   | | |-DeclRefExpr 0x120141238 <col:20> 'const struct name_path *' lvalue Var 0x120140b88 'p' 'const struct name_path *'
|   | | `-RecoveryExpr 0x120141290 <col:24, col:27> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x120141258 <col:24> 'const struct name_path *' lvalue Var 0x120140b88 'p' 'const struct name_path *'
|   | `-CompoundStmt 0x120141448 <col:31, line:11:2>
|   |   `-IfStmt 0x120141428 <line:9:3, line:10:25>
|   |     |-RecoveryExpr 0x120141310 <line:9:7, col:10> '<dependent type>' contains-errors lvalue
|   |     | `-DeclRefExpr 0x1201412d8 <col:7> 'const struct name_path *' lvalue Var 0x120140b88 'p' 'const struct name_path *'
|   |     `-CompoundAssignOperator 0x1201413f8 <line:10:4, col:25> 'int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |       |-DeclRefExpr 0x120141338 <col:4> 'int' lvalue Var 0x120141090 'len' 'int'
|   |       `-BinaryOperator 0x1201413d8 <col:11, col:25> '<dependent type>' contains-errors '+'
|   |         |-RecoveryExpr 0x120141390 <col:11, col:14> '<dependent type>' contains-errors lvalue
|   |         | `-DeclRefExpr 0x120141358 <col:11> 'const struct name_path *' lvalue Var 0x120140b88 'p' 'const struct name_path *'
|   |         `-IntegerLiteral 0x1201413b8 <col:25> 'int' 1
|   |-BinaryOperator 0x1201416c0 <line:12:2, col:17> 'char *' '='
|   | |-DeclRefExpr 0x120141498 <col:2> 'char *' lvalue Var 0x120140c20 'n' 'char *'
|   | `-ImplicitCastExpr 0x1201416a8 <col:6, col:17> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x120141668 <col:6, col:17> 'int'
|   |     |-ImplicitCastExpr 0x120141650 <col:6> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1201415e0 <col:6> 'int ()' Function 0x120141528 'xmalloc' 'int ()'
|   |     `-ImplicitCastExpr 0x120141690 <col:14> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x120141600 <col:14> 'int' lvalue Var 0x120141090 'len' 'int'
|   |-BinaryOperator 0x120141848 <line:13:2, col:25> 'char *' '='
|   | |-DeclRefExpr 0x1201416e0 <col:2> 'char *' lvalue Var 0x120140ca0 'm' 'char *'
|   | `-BinaryOperator 0x120141828 <col:6, col:25> 'char *' '-'
|   |   |-BinaryOperator 0x120141770 <col:6, col:10> 'char *' '+'
|   |   | |-ImplicitCastExpr 0x120141740 <col:6> 'char *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x120141700 <col:6> 'char *' lvalue Var 0x120140c20 'n' 'char *'
|   |   | `-ImplicitCastExpr 0x120141758 <col:10> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x120141720 <col:10> 'int' lvalue Var 0x120141090 'len' 'int'
|   |   `-ParenExpr 0x120141808 <col:16, col:25> 'int'
|   |     `-BinaryOperator 0x1201417e8 <col:17, col:24> 'int' '+'
|   |       |-ImplicitCastExpr 0x1201417d0 <col:17> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x120141790 <col:17> 'int' lvalue Var 0x120140d50 'nlen' 'int'
|   |       `-IntegerLiteral 0x1201417b0 <col:24> 'int' 1
|   |-CallExpr 0x120142fb8 <line:14:2, col:16> 'char *'
|   | |-ImplicitCastExpr 0x120142fa0 <col:2> 'char *(*)(char *, const char *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x120142ee0 <col:2> 'char *(char *, const char *)' Function 0x1201418b0 'strcpy' 'char *(char *, const char *)'
|   | |-ImplicitCastExpr 0x120142fe8 <col:9> 'char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x120142f00 <col:9> 'char *' lvalue Var 0x120140ca0 'm' 'char *'
|   | `-ImplicitCastExpr 0x120143000 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x120142f20 <col:12> 'const char *' lvalue ParmVar 0x1201286c8 'name' 'const char *'
|   |-ForStmt 0x120143870 <line:15:2, line:21:2>
|   | |-BinaryOperator 0x120143070 <line:15:7, col:11> 'const struct name_path *' '='
|   | | |-DeclRefExpr 0x120143018 <col:7> 'const struct name_path *' lvalue Var 0x120140b88 'p' 'const struct name_path *'
|   | | `-ImplicitCastExpr 0x120143058 <col:11> 'const struct name_path *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x120143038 <col:11> 'const struct name_path *' lvalue ParmVar 0x120128648 'path' 'const struct name_path *'
|   | |-<<<NULL>>>
|   | |-ImplicitCastExpr 0x1201430b0 <col:17> 'const struct name_path *' <LValueToRValue>
|   | | `-DeclRefExpr 0x120143090 <col:17> 'const struct name_path *' lvalue Var 0x120140b88 'p' 'const struct name_path *'
|   | |-BinaryOperator 0x120143148 <col:20, col:27> 'const struct name_path *' contains-errors '='
|   | | |-DeclRefExpr 0x1201430c8 <col:20> 'const struct name_path *' lvalue Var 0x120140b88 'p' 'const struct name_path *'
|   | | `-RecoveryExpr 0x120143120 <col:24, col:27> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x1201430e8 <col:24> 'const struct name_path *' lvalue Var 0x120140b88 'p' 'const struct name_path *'
|   | `-CompoundStmt 0x120143858 <col:31, line:21:2>
|   |   `-IfStmt 0x120143838 <line:16:3, line:20:3>
|   |     |-RecoveryExpr 0x1201431a0 <line:16:7, col:10> '<dependent type>' contains-errors lvalue
|   |     | `-DeclRefExpr 0x120143168 <col:7> 'const struct name_path *' lvalue Var 0x120140b88 'p' 'const struct name_path *'
|   |     `-CompoundStmt 0x120143810 <col:20, line:20:3>
|   |       |-CompoundAssignOperator 0x120143288 <line:17:4, col:23> 'char *' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |       | |-DeclRefExpr 0x1201431c8 <col:4> 'char *' lvalue Var 0x120140ca0 'm' 'char *'
|   |       | `-BinaryOperator 0x120143268 <col:9, col:23> '<dependent type>' contains-errors '+'
|   |       |   |-RecoveryExpr 0x120143220 <col:9, col:12> '<dependent type>' contains-errors lvalue
|   |       |   | `-DeclRefExpr 0x1201431e8 <col:9> 'const struct name_path *' lvalue Var 0x120140b88 'p' 'const struct name_path *'
|   |       |   `-IntegerLiteral 0x120143248 <col:23> 'int' 1
|   |       |-CallExpr 0x1201436d0 <line:18:4, col:34> '<dependent type>' contains-errors
|   |       | |-DeclRefExpr 0x120143588 <col:4> 'void *(void *, const void *, unsigned long)' Function 0x120143338 'memcpy' 'void *(void *, const void *, unsigned long)'
|   |       | |-DeclRefExpr 0x1201435a8 <col:11> 'char *' lvalue Var 0x120140ca0 'm' 'char *'
|   |       | |-RecoveryExpr 0x120143600 <col:14, col:17> '<dependent type>' contains-errors lvalue
|   |       | | `-DeclRefExpr 0x1201435c8 <col:14> 'const struct name_path *' lvalue Var 0x120140b88 'p' 'const struct name_path *'
|   |       | `-RecoveryExpr 0x120143660 <col:23, col:26> '<dependent type>' contains-errors lvalue
|   |       |   `-DeclRefExpr 0x120143628 <col:23> 'const struct name_path *' lvalue Var 0x120140b88 'p' 'const struct name_path *'
|   |       `-BinaryOperator 0x1201437f0 <line:19:4, col:21> '<dependent type>' contains-errors '='
|   |         |-ArraySubscriptExpr 0x1201437b8 <col:4, col:17> '<dependent type>' contains-errors lvalue
|   |         | |-ImplicitCastExpr 0x120143788 <col:4> 'char *' <LValueToRValue>
|   |         | | `-DeclRefExpr 0x120143708 <col:4> 'char *' lvalue Var 0x120140ca0 'm' 'char *'
|   |         | `-ImplicitCastExpr 0x1201437a0 <col:6, col:9> '<dependent type>' contains-errors <LValueToRValue>
|   |         |   `-RecoveryExpr 0x120143760 <col:6, col:9> '<dependent type>' contains-errors lvalue
|   |         |     `-DeclRefExpr 0x120143728 <col:6> 'const struct name_path *' lvalue Var 0x120140b88 'p' 'const struct name_path *'
|   |         `-CharacterLiteral 0x1201437d8 <col:21> 'int' 47
|   `-ReturnStmt 0x1201438e0 <line:22:2, col:9>
|     `-ImplicitCastExpr 0x1201438c8 <col:9> 'char *' <LValueToRValue>
|       `-DeclRefExpr 0x1201438a8 <col:9> 'char *' lvalue Var 0x120140c20 'n' 'char *'
|-FunctionDecl 0x120140df8 <line:5:13> col:13 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x120140ef8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x120140ea0 <<invalid sloc>> Implicit 902
|-FunctionDecl 0x1201418b0 <line:14:2> col:2 implicit used strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x120142e00 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x120142e68 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x120141958 <<invalid sloc>> Implicit 885
`-FunctionDecl 0x120143338 <line:18:4> col:4 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x120143438 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x1201434a0 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x120143508 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x1201433e0 <<invalid sloc>> Implicit 882
