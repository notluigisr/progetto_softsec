TranslationUnitDecl 0x13d855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13d8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13d855bd0 '__int128'
|-TypedefDecl 0x13d856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13d855bf0 'unsigned __int128'
|-TypedefDecl 0x13d926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13d926000 'struct __NSConstantString_tag'
|   `-Record 0x13d856580 '__NSConstantString_tag'
|-TypedefDecl 0x13d926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13d855d90 '__SVInt8_t'
|-TypedefDecl 0x13d926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13d855db0 '__SVInt16_t'
|-TypedefDecl 0x13d926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13d855dd0 '__SVInt32_t'
|-TypedefDecl 0x13d9263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13d855df0 '__SVInt64_t'
|-TypedefDecl 0x13d926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13d855e10 '__SVUint8_t'
|-TypedefDecl 0x13d9264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13d855e30 '__SVUint16_t'
|-TypedefDecl 0x13d926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13d855e50 '__SVUint32_t'
|-TypedefDecl 0x13d926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13d855e70 '__SVUint64_t'
|-TypedefDecl 0x13d9265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13d855e90 '__SVFloat16_t'
|-TypedefDecl 0x13d926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13d855eb0 '__SVFloat32_t'
|-TypedefDecl 0x13d9266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13d855ed0 '__SVFloat64_t'
|-TypedefDecl 0x13d926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13d855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13d926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13d855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13d9267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13d855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13d926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13d855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13d9268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13d855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13d926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13d855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13d926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13d855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13d9269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13d855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13d926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13d855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13d926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13d856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13d926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13d856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13d926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13d856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13d926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13d856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13d926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13d856090 '__clang_svint8x3_t'
|-TypedefDecl 0x13d926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13d8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13d926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13d8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13d926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13d8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13d926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13d856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13d926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13d856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13d926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13d856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13d926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13d856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13d926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13d856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13d927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13d8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13d927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13d8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13d9278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13d8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13d927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13d856210 '__clang_svint8x4_t'
|-TypedefDecl 0x13d9279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13d856230 '__clang_svint16x4_t'
|-TypedefDecl 0x13d927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13d856250 '__clang_svint32x4_t'
|-TypedefDecl 0x13d927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13d856270 '__clang_svint64x4_t'
|-TypedefDecl 0x13d927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13d856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13d927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13d8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13d927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13d8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13d927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13d8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13d927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13d856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13d927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13d856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13d927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13d856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13d927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13d856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13d927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13d856390 '__SVBool_t'
|-TypedefDecl 0x13d927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13d8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13d927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13d8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13d927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13d8563f0 '__SVCount_t'
|-TypedefDecl 0x13d927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13d927fb0 'char *'
|   `-BuiltinType 0x13d8556b0 'char'
|-TypedefDecl 0x13d928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13d927fb0 'char *'
|   `-BuiltinType 0x13d8556b0 'char'
|-FunctionDecl 0x13d9284a8 <dataset_diviso_filec/func9043_vuln.c:1:1, line:57:1> line:1:1 invalid rsvg_acquire_data_data 'int (const char *, const char *, char **, int *, int **)'
| |-ParmVarDecl 0x13d9280d8 <col:25, col:37> col:37 used uri 'const char *'
| |-ParmVarDecl 0x13d928158 <line:2:25, col:37> col:37 base_uri 'const char *'
| |-ParmVarDecl 0x13d928208 <line:3:25, col:32> col:32 used out_mime_type 'char **'
| |-ParmVarDecl 0x13d9282d8 <line:4:25, col:32> col:32 invalid out_len 'int *'
| |-ParmVarDecl 0x13d928390 <line:5:25, col:34> col:34 invalid error 'int **'
| `-CompoundStmt 0x13d947010 <line:6:1, line:57:1>
|   |-DeclStmt 0x13d928718 <line:7:5, col:36>
|   | |-VarDecl 0x13d928590 <col:5, col:17> col:17 used comma 'const char *'
|   | |-VarDecl 0x13d928610 <col:5, col:25> col:25 used start 'const char *'
|   | `-VarDecl 0x13d928690 <col:5, col:33> col:33 used end 'const char *'
|   |-DeclStmt 0x13d9287b0 <line:8:5, col:20>
|   | `-VarDecl 0x13d928748 <col:5, col:11> col:11 used mime_type 'char *'
|   |-DeclStmt 0x13d941868 <line:9:5, col:15>
|   | `-VarDecl 0x13d941800 <col:5, col:11> col:11 used data 'char *'
|   |-CallExpr 0x13d941ac0 <line:13:5, col:30> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x13d9419e0 <col:5> 'int ()' Function 0x13d941928 'g_assert' 'int ()'
|   | `-BinaryOperator 0x13d941aa0 <col:15, col:26> 'int' contains-errors '!='
|   |   |-RecoveryExpr 0x13d941a00 <col:15> '<dependent type>' contains-errors lvalue
|   |   `-RecoveryExpr 0x13d941a80 <col:26> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x13d941d50 <line:14:5, col:44> 'int'
|   | |-ImplicitCastExpr 0x13d941d38 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13d941ae8 <col:5> 'int ()' Function 0x13d941928 'g_assert' 'int ()'
|   | `-CallExpr 0x13d941cd8 <col:15, col:43> 'int'
|   |   |-ImplicitCastExpr 0x13d941cc0 <col:15> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x13d941be8 <col:15> 'int ()' Function 0x13d941b30 'g_str_has_prefix' 'int ()'
|   |   |-ImplicitCastExpr 0x13d941d08 <col:33> 'const char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x13d941c08 <col:33> 'const char *' lvalue ParmVar 0x13d9280d8 'uri' 'const char *'
|   |   `-ImplicitCastExpr 0x13d941d20 <col:38> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x13d941c70 <col:38> 'char[4]' lvalue "STR"
|   |-BinaryOperator 0x13d941df0 <line:16:5, col:17> 'char *' contains-errors '='
|   | |-DeclRefExpr 0x13d941d78 <col:5> 'char *' lvalue Var 0x13d928748 'mime_type' 'char *'
|   | `-RecoveryExpr 0x13d941dd0 <col:17> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x13d941ea8 <line:17:5, col:19> 'const char *' '='
|   | |-DeclRefExpr 0x13d941e10 <col:5> 'const char *' lvalue Var 0x13d928610 'start' 'const char *'
|   | `-BinaryOperator 0x13d941e88 <col:13, col:19> 'const char *' '+'
|   |   |-ImplicitCastExpr 0x13d941e70 <col:13> 'const char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x13d941e30 <col:13> 'const char *' lvalue ParmVar 0x13d9280d8 'uri' 'const char *'
|   |   `-IntegerLiteral 0x13d941e50 <col:19> 'int' 5
|   |-BinaryOperator 0x13d942648 <line:18:5, col:31> 'const char *' '='
|   | |-DeclRefExpr 0x13d941ec8 <col:5> 'const char *' lvalue Var 0x13d928590 'comma' 'const char *'
|   | `-ImplicitCastExpr 0x13d942630 <col:13, col:31> 'const char *' <NoOp>
|   |   `-CallExpr 0x13d9425e8 <col:13, col:31> 'char *'
|   |     |-ImplicitCastExpr 0x13d9425d0 <col:13> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x13d942530 <col:13> 'char *(const char *, int)' Function 0x13d942350 'strchr' 'char *(const char *, int)'
|   |     |-ImplicitCastExpr 0x13d942618 <col:21> 'const char *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x13d942550 <col:21> 'const char *' lvalue Var 0x13d928610 'start' 'const char *'
|   |     `-CharacterLiteral 0x13d942570 <col:28> 'int' 44
|   |-IfStmt 0x13d944480 <line:20:5, line:33:5>
|   | |-BinaryOperator 0x13d942730 <line:20:9, col:27> 'int' '&&'
|   | | |-ImplicitCastExpr 0x13d942718 <col:9> 'const char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13d942668 <col:9> 'const char *' lvalue Var 0x13d928590 'comma' 'const char *'
|   | | `-BinaryOperator 0x13d9426f8 <col:18, col:27> 'int' '!='
|   | |   |-ImplicitCastExpr 0x13d9426c8 <col:18> 'const char *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x13d942688 <col:18> 'const char *' lvalue Var 0x13d928590 'comma' 'const char *'
|   | |   `-ImplicitCastExpr 0x13d9426e0 <col:27> 'const char *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x13d9426a8 <col:27> 'const char *' lvalue Var 0x13d928610 'start' 'const char *'
|   | `-CompoundStmt 0x13d944460 <col:34, line:33:5>
|   |   |-IfStmt 0x13d944100 <line:22:9, line:28:9> has_else
|   |   | |-BinaryOperator 0x13d943f28 <line:22:13, line:23:103> 'int' contains-errors '&&'
|   |   | | |-BinaryOperator 0x13d943e38 <line:22:13, col:29> 'int' contains-errors '>'
|   |   | | | |-DeclRefExpr 0x13d942750 <col:13> 'const char *' lvalue Var 0x13d928590 'comma' 'const char *'
|   |   | | | `-BinaryOperator 0x13d943e18 <col:21, col:29> '<dependent type>' contains-errors '+'
|   |   | | |   |-DeclRefExpr 0x13d942770 <col:21> 'const char *' lvalue Var 0x13d928610 'start' 'const char *'
|   |   | | |   `-RecoveryExpr 0x13d943df8 <col:29> '<dependent type>' contains-errors lvalue
|   |   | | `-UnaryOperator 0x13d943f10 <line:23:13, col:103> '<dependent type>' contains-errors prefix '!' cannot overflow
|   |   | |   `-CallExpr 0x13d943ed8 <col:14, col:103> '<dependent type>' contains-errors
|   |   | |     |-DeclRefExpr 0x13d943ce0 <col:14> 'int ()' Function 0x13d943c28 'g_ascii_strncasecmp' 'int ()'
|   |   | |     |-BinaryOperator 0x13d943e78 <col:35, col:43> '<dependent type>' contains-errors '-'
|   |   | |     | |-DeclRefExpr 0x13d943d00 <col:35> 'const char *' lvalue Var 0x13d928590 'comma' 'const char *'
|   |   | |     | `-RecoveryExpr 0x13d943e58 <col:43> '<dependent type>' contains-errors lvalue
|   |   | |     |-RecoveryExpr 0x13d943e98 <col:65> '<dependent type>' contains-errors lvalue
|   |   | |     `-RecoveryExpr 0x13d943eb8 <col:83> '<dependent type>' contains-errors lvalue
|   |   | |-CompoundStmt 0x13d944058 <col:106, line:26:9>
|   |   | | `-BinaryOperator 0x13d944020 <line:24:13, col:27> 'const char *' contains-errors '='
|   |   | |   |-DeclRefExpr 0x13d943f48 <col:13> 'const char *' lvalue Var 0x13d928690 'end' 'const char *'
|   |   | |   `-BinaryOperator 0x13d944000 <col:19, col:27> '<dependent type>' contains-errors '-'
|   |   | |     |-DeclRefExpr 0x13d943f68 <col:19> 'const char *' lvalue Var 0x13d928590 'comma' 'const char *'
|   |   | |     `-RecoveryExpr 0x13d943fe0 <col:27> '<dependent type>' contains-errors lvalue
|   |   | `-CompoundStmt 0x13d9440e8 <line:26:16, line:28:9>
|   |   |   `-BinaryOperator 0x13d9440c8 <line:27:13, col:19> 'const char *' '='
|   |   |     |-DeclRefExpr 0x13d944070 <col:13> 'const char *' lvalue Var 0x13d928690 'end' 'const char *'
|   |   |     `-ImplicitCastExpr 0x13d9440b0 <col:19> 'const char *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x13d944090 <col:19> 'const char *' lvalue Var 0x13d928590 'comma' 'const char *'
|   |   `-IfStmt 0x13d944440 <line:30:9, line:32:9>
|   |     |-BinaryOperator 0x13d9441a0 <line:30:13, col:20> 'int' '!='
|   |     | |-ImplicitCastExpr 0x13d944170 <col:13> 'const char *' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x13d944130 <col:13> 'const char *' lvalue Var 0x13d928690 'end' 'const char *'
|   |     | `-ImplicitCastExpr 0x13d944188 <col:20> 'const char *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x13d944150 <col:20> 'const char *' lvalue Var 0x13d928610 'start' 'const char *'
|   |     `-CompoundStmt 0x13d944428 <col:27, line:32:9>
|   |       `-BinaryOperator 0x13d944408 <line:31:13, col:61> 'char *' '='
|   |         |-DeclRefExpr 0x13d9441c0 <col:13> 'char *' lvalue Var 0x13d928748 'mime_type' 'char *'
|   |         `-ImplicitCastExpr 0x13d9443f0 <col:25, col:61> 'char *' <IntegralToPointer>
|   |           `-CallExpr 0x13d9443a8 <col:25, col:61> 'int'
|   |             |-ImplicitCastExpr 0x13d944390 <col:25> 'int (*)()' <FunctionToPointerDecay>
|   |             | `-DeclRefExpr 0x13d9442c0 <col:25> 'int ()' Function 0x13d944208 'uri_decoded_copy' 'int ()'
|   |             |-ImplicitCastExpr 0x13d9443d8 <col:43> 'const char *' <LValueToRValue>
|   |             | `-DeclRefExpr 0x13d9442e0 <col:43> 'const char *' lvalue Var 0x13d928610 'start' 'const char *'
|   |             `-BinaryOperator 0x13d944370 <col:50, col:56> 'long' '-'
|   |               |-ImplicitCastExpr 0x13d944340 <col:50> 'const char *' <LValueToRValue>
|   |               | `-DeclRefExpr 0x13d944300 <col:50> 'const char *' lvalue Var 0x13d928690 'end' 'const char *'
|   |               `-ImplicitCastExpr 0x13d944358 <col:56> 'const char *' <LValueToRValue>
|   |                 `-DeclRefExpr 0x13d944320 <col:56> 'const char *' lvalue Var 0x13d928610 'start' 'const char *'
|   |-IfStmt 0x13d944590 <line:35:5, line:36:25>
|   | |-ImplicitCastExpr 0x13d9444c0 <line:35:9> 'const char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x13d9444a0 <col:9> 'const char *' lvalue Var 0x13d928590 'comma' 'const char *'
|   | `-BinaryOperator 0x13d944570 <line:36:9, col:25> 'const char *' '='
|   |   |-DeclRefExpr 0x13d9444d8 <col:9> 'const char *' lvalue Var 0x13d928610 'start' 'const char *'
|   |   `-BinaryOperator 0x13d944550 <col:17, col:25> 'const char *' '+'
|   |     |-ImplicitCastExpr 0x13d944538 <col:17> 'const char *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x13d9444f8 <col:17> 'const char *' lvalue Var 0x13d928590 'comma' 'const char *'
|   |     `-IntegerLiteral 0x13d944518 <col:25> 'int' 1
|   |-IfStmt 0x13d946ca8 <line:38:5, line:48:5> has_else
|   | |-ImplicitCastExpr 0x13d944600 <line:38:9, col:10> 'char' <LValueToRValue>
|   | | `-UnaryOperator 0x13d9445e8 <col:9, col:10> 'const char' lvalue prefix '*' cannot overflow
|   | |   `-ImplicitCastExpr 0x13d9445d0 <col:10> 'const char *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x13d9445b0 <col:10> 'const char *' lvalue Var 0x13d928610 'start' 'const char *'
|   | |-CompoundStmt 0x13d946c40 <col:17, line:45:5>
|   | | `-BinaryOperator 0x13d944980 <line:39:9, col:55> 'char *' '='
|   | |   |-DeclRefExpr 0x13d944618 <col:9> 'char *' lvalue Var 0x13d941800 'data' 'char *'
|   | |   `-ImplicitCastExpr 0x13d944968 <col:16, col:55> 'char *' <IntegralToPointer>
|   | |     `-CallExpr 0x13d944920 <col:16, col:55> 'int'
|   | |       |-ImplicitCastExpr 0x13d944908 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x13d944638 <col:16> 'int ()' Function 0x13d944208 'uri_decoded_copy' 'int ()'
|   | |       |-ImplicitCastExpr 0x13d944950 <col:34> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x13d944658 <col:34> 'const char *' lvalue Var 0x13d928610 'start' 'const char *'
|   | |       `-CallExpr 0x13d9448c8 <col:41, col:54> 'unsigned long'
|   | |         |-ImplicitCastExpr 0x13d9448b0 <col:41> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   | |         | `-DeclRefExpr 0x13d944828 <col:41> 'unsigned long (const char *)' Function 0x13d9446b8 'strlen' 'unsigned long (const char *)'
|   | |         `-ImplicitCastExpr 0x13d9448f0 <col:49> 'const char *' <LValueToRValue>
|   | |           `-DeclRefExpr 0x13d944848 <col:49> 'const char *' lvalue Var 0x13d928610 'start' 'const char *'
|   | `-CompoundStmt 0x13d946c98 <line:45:12, line:48:5>
|   |-IfStmt 0x13d946f30 <line:50:5, line:53:26> has_else
|   | |-ImplicitCastExpr 0x13d946cf8 <line:50:9> 'char **' <LValueToRValue>
|   | | `-DeclRefExpr 0x13d946cd8 <col:9> 'char **' lvalue ParmVar 0x13d928208 'out_mime_type' 'char **'
|   | |-BinaryOperator 0x13d946d98 <line:51:9, col:26> 'char *' '='
|   | | |-UnaryOperator 0x13d946d48 <col:9, col:10> 'char *' lvalue prefix '*' cannot overflow
|   | | | `-ImplicitCastExpr 0x13d946d30 <col:10> 'char **' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x13d946d10 <col:10> 'char **' lvalue ParmVar 0x13d928208 'out_mime_type' 'char **'
|   | | `-ImplicitCastExpr 0x13d946d80 <col:26> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x13d946d60 <col:26> 'char *' lvalue Var 0x13d928748 'mime_type' 'char *'
|   | `-CallExpr 0x13d946ef0 <line:53:9, col:26> 'int'
|   |   |-ImplicitCastExpr 0x13d946ed8 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x13d946e98 <col:9> 'int ()' Function 0x13d946de0 'g_free' 'int ()'
|   |   `-ImplicitCastExpr 0x13d946f18 <col:17> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x13d946eb8 <col:17> 'char *' lvalue Var 0x13d928748 'mime_type' 'char *'
|   `-ReturnStmt 0x13d947000 <line:56:5, col:12>
|     `-ImplicitCastExpr 0x13d946fe8 <col:12> 'int' <PointerToIntegral>
|       `-ImplicitCastExpr 0x13d946fd0 <col:12> 'char *' <LValueToRValue>
|         `-DeclRefExpr 0x13d946fb0 <col:12> 'char *' lvalue Var 0x13d941800 'data' 'char *'
|-FunctionDecl 0x13d942350 <line:18:13> col:13 implicit used strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x13d942450 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x13d9424b8 <<invalid sloc>> <invalid sloc> 'int'
| `-BuiltinAttr 0x13d9423f8 <<invalid sloc>> Implicit 893
`-FunctionDecl 0x13d9446b8 <line:39:41> col:41 implicit used strlen 'unsigned long (const char *)' extern
  |-ParmVarDecl 0x13d9447b8 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x13d944760 <<invalid sloc>> Implicit 902
