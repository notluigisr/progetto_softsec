TranslationUnitDecl 0x135855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1358564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x135855bd0 '__int128'
|-TypedefDecl 0x135856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x135855bf0 'unsigned __int128'
|-TypedefDecl 0x13600be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13600bc00 'struct __NSConstantString_tag'
|   `-Record 0x135856580 '__NSConstantString_tag'
|-TypedefDecl 0x13600be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x135855d90 '__SVInt8_t'
|-TypedefDecl 0x13600bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x135855db0 '__SVInt16_t'
|-TypedefDecl 0x13600bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x135855dd0 '__SVInt32_t'
|-TypedefDecl 0x13600bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x135855df0 '__SVInt64_t'
|-TypedefDecl 0x13600c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x135855e10 '__SVUint8_t'
|-TypedefDecl 0x13600c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x135855e30 '__SVUint16_t'
|-TypedefDecl 0x13600c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x135855e50 '__SVUint32_t'
|-TypedefDecl 0x13600c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x135855e70 '__SVUint64_t'
|-TypedefDecl 0x13600c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x135855e90 '__SVFloat16_t'
|-TypedefDecl 0x13600c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x135855eb0 '__SVFloat32_t'
|-TypedefDecl 0x13600c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x135855ed0 '__SVFloat64_t'
|-TypedefDecl 0x13600c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x135855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13600c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x135855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13600c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x135855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13600c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x135855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13600c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x135855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13600c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x135855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13600c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x135855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13600c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x135855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13600c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x135855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13600c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x135856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13600c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x135856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13600c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x135856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13600c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x135856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13600c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x135856090 '__clang_svint8x3_t'
|-TypedefDecl 0x13600c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1358560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13600c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1358560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13600c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1358560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13600c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x135856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13600ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x135856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13600cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x135856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13600cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x135856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13600cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x135856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13600d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1358561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13600d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1358561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13600d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1358561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13600d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x135856210 '__clang_svint8x4_t'
|-TypedefDecl 0x13600d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x135856230 '__clang_svint16x4_t'
|-TypedefDecl 0x13600d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x135856250 '__clang_svint32x4_t'
|-TypedefDecl 0x13600d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x135856270 '__clang_svint64x4_t'
|-TypedefDecl 0x13600d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x135856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13600d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1358562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13600d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1358562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13600d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1358562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13600d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x135856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13600d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x135856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13600d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x135856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13600d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x135856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13600da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x135856390 '__SVBool_t'
|-TypedefDecl 0x13600da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1358563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13600dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1358563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13600db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1358563f0 '__SVCount_t'
|-TypedefDecl 0x13600dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13600dbb0 'char *'
|   `-BuiltinType 0x1358556b0 'char'
|-TypedefDecl 0x13600dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13600dbb0 'char *'
|   `-BuiltinType 0x1358556b0 'char'
|-RecordDecl 0x13600dcc0 <dataset_diviso_filec/func10006_vuln.c:1:8, col:15> col:15 struct entry
|-FunctionDecl 0x13600e038 <col:1, line:47:1> line:1:22 tstat_lookup 'struct entry *(struct entry *, char *)' static
| |-ParmVarDecl 0x13600de18 <col:35, col:49> col:49 used entry 'struct entry *'
| |-ParmVarDecl 0x13600de98 <col:56, col:62> col:62 used comm 'char *'
| `-CompoundStmt 0x13602e968 <line:2:1, line:47:1>
|   |-DeclStmt 0x13600e370 <line:3:2, col:35>
|   | |-VarDecl 0x13600e1c8 <col:2, col:17> col:17 used head 'struct entry **'
|   | |-VarDecl 0x13600e258 <col:2, col:24> col:24 used curr 'struct entry *'
|   | `-VarDecl 0x13600e2e8 <col:2, col:31> col:31 used prev 'struct entry *'
|   |-BinaryOperator 0x13602c3e0 <line:5:2, col:30> 'struct entry **' '='
|   | |-DeclRefExpr 0x13600e388 <col:2> 'struct entry **' lvalue Var 0x13600e1c8 'head' 'struct entry **'
|   | `-ImplicitCastExpr 0x13602bfa8 <col:9, col:30> 'struct entry **' <IntegralToPointer>
|   |   `-CallExpr 0x13602bf68 <col:9, col:30> 'int'
|   |     |-ImplicitCastExpr 0x13602bf50 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x13602bee0 <col:9> 'int ()' Function 0x13602be28 'tstat_hashentry' 'int ()'
|   |     `-ImplicitCastExpr 0x13602bf90 <col:25> 'struct entry *' <LValueToRValue>
|   |       `-DeclRefExpr 0x13602bf00 <col:25> 'struct entry *' lvalue ParmVar 0x13600de18 'entry' 'struct entry *'
|   |-BinaryOperator 0x13602c488 <line:6:2, col:10> 'struct entry *' '='
|   | |-DeclRefExpr 0x13602c400 <col:2> 'struct entry *' lvalue Var 0x13600e258 'curr' 'struct entry *'
|   | `-ImplicitCastExpr 0x13602c470 <col:9, col:10> 'struct entry *' <LValueToRValue>
|   |   `-UnaryOperator 0x13602c458 <col:9, col:10> 'struct entry *' lvalue prefix '*' cannot overflow
|   |     `-ImplicitCastExpr 0x13602c440 <col:10> 'struct entry **' <LValueToRValue>
|   |       `-DeclRefExpr 0x13602c420 <col:10> 'struct entry **' lvalue Var 0x13600e1c8 'head' 'struct entry **'
|   |-WhileStmt 0x13602c7c0 <line:9:2, line:14:2>
|   | |-ImplicitCastExpr 0x13602c4c8 <line:9:9> 'struct entry *' <LValueToRValue>
|   | | `-DeclRefExpr 0x13602c4a8 <col:9> 'struct entry *' lvalue Var 0x13600e258 'curr' 'struct entry *'
|   | `-CompoundStmt 0x13602c7a0 <col:15, line:14:2>
|   |   |-IfStmt 0x13602c6e0 <line:10:3, line:11:11>
|   |   | |-CallExpr 0x13602c638 <line:10:7, col:32> 'int'
|   |   | | |-ImplicitCastExpr 0x13602c620 <col:7> 'int (*)()' <FunctionToPointerDecay>
|   |   | | | `-DeclRefExpr 0x13602c5c0 <col:7> 'int ()' Function 0x13602c508 'match_entries' 'int ()'
|   |   | | |-ImplicitCastExpr 0x13602c668 <col:21> 'struct entry *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x13602c5e0 <col:21> 'struct entry *' lvalue Var 0x13600e258 'curr' 'struct entry *'
|   |   | | `-ImplicitCastExpr 0x13602c680 <col:27> 'struct entry *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x13602c600 <col:27> 'struct entry *' lvalue ParmVar 0x13600de18 'entry' 'struct entry *'
|   |   | `-ReturnStmt 0x13602c6d0 <line:11:4, col:11>
|   |   |   `-ImplicitCastExpr 0x13602c6b8 <col:11> 'struct entry *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x13602c698 <col:11> 'struct entry *' lvalue Var 0x13600e258 'curr' 'struct entry *'
|   |   `-BinaryOperator 0x13602c780 <line:13:3, col:16> 'struct entry *' contains-errors '='
|   |     |-DeclRefExpr 0x13602c700 <col:3> 'struct entry *' lvalue Var 0x13600e258 'curr' 'struct entry *'
|   |     `-RecoveryExpr 0x13602c758 <col:10, col:16> '<dependent type>' contains-errors lvalue
|   |       `-DeclRefExpr 0x13602c720 <col:10> 'struct entry *' lvalue Var 0x13600e258 'curr' 'struct entry *'
|   |-BinaryOperator 0x13602c858 <line:16:2, col:9> 'struct entry *' contains-errors '='
|   | |-DeclRefExpr 0x13602c7e0 <col:2> 'struct entry *' lvalue Var 0x13600e2e8 'prev' 'struct entry *'
|   | `-RecoveryExpr 0x13602c838 <col:9> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x13602c900 <line:17:2, col:10> 'struct entry *' '='
|   | |-DeclRefExpr 0x13602c878 <col:2> 'struct entry *' lvalue Var 0x13600e258 'curr' 'struct entry *'
|   | `-ImplicitCastExpr 0x13602c8e8 <col:9, col:10> 'struct entry *' <LValueToRValue>
|   |   `-UnaryOperator 0x13602c8d0 <col:9, col:10> 'struct entry *' lvalue prefix '*' cannot overflow
|   |     `-ImplicitCastExpr 0x13602c8b8 <col:10> 'struct entry **' <LValueToRValue>
|   |       `-DeclRefExpr 0x13602c898 <col:10> 'struct entry **' lvalue Var 0x13600e1c8 'head' 'struct entry **'
|   |-CallExpr 0x13602cab0 <line:19:2, col:27> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x13602ca00 <col:2> 'int ()' Function 0x13602c948 'raw_spin_lock' 'int ()'
|   | `-UnaryOperator 0x13602ca98 <col:16, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   `-RecoveryExpr 0x13602ca78 <col:17> '<dependent type>' contains-errors lvalue
|   |-WhileStmt 0x13602cdb0 <line:21:2, line:27:2>
|   | |-ImplicitCastExpr 0x13602caf8 <line:21:9> 'struct entry *' <LValueToRValue>
|   | | `-DeclRefExpr 0x13602cad8 <col:9> 'struct entry *' lvalue Var 0x13600e258 'curr' 'struct entry *'
|   | `-CompoundStmt 0x13602cd88 <col:15, line:27:2>
|   |   |-IfStmt 0x13602cc50 <line:22:3, line:23:9>
|   |   | |-CallExpr 0x13602cb88 <line:22:7, col:32> 'int'
|   |   | | |-ImplicitCastExpr 0x13602cb70 <col:7> 'int (*)()' <FunctionToPointerDecay>
|   |   | | | `-DeclRefExpr 0x13602cb10 <col:7> 'int ()' Function 0x13602c508 'match_entries' 'int ()'
|   |   | | |-ImplicitCastExpr 0x13602cbb8 <col:21> 'struct entry *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x13602cb30 <col:21> 'struct entry *' lvalue Var 0x13600e258 'curr' 'struct entry *'
|   |   | | `-ImplicitCastExpr 0x13602cbd0 <col:27> 'struct entry *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x13602cb50 <col:27> 'struct entry *' lvalue ParmVar 0x13600de18 'entry' 'struct entry *'
|   |   | `-GotoStmt 0x13602cc38 <line:23:4, col:9> 'out_unlock' 0x13602cbe8
|   |   |-BinaryOperator 0x13602ccc8 <line:25:3, col:10> 'struct entry *' '='
|   |   | |-DeclRefExpr 0x13602cc70 <col:3> 'struct entry *' lvalue Var 0x13600e2e8 'prev' 'struct entry *'
|   |   | `-ImplicitCastExpr 0x13602ccb0 <col:10> 'struct entry *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x13602cc90 <col:10> 'struct entry *' lvalue Var 0x13600e258 'curr' 'struct entry *'
|   |   `-BinaryOperator 0x13602cd68 <line:26:3, col:16> 'struct entry *' contains-errors '='
|   |     |-DeclRefExpr 0x13602cce8 <col:3> 'struct entry *' lvalue Var 0x13600e258 'curr' 'struct entry *'
|   |     `-RecoveryExpr 0x13602cd40 <col:10, col:16> '<dependent type>' contains-errors lvalue
|   |       `-DeclRefExpr 0x13602cd08 <col:10> 'struct entry *' lvalue Var 0x13600e258 'curr' 'struct entry *'
|   |-BinaryOperator 0x13602dd50 <line:29:2, col:21> 'struct entry *' '='
|   | |-DeclRefExpr 0x13602cdd0 <col:2> 'struct entry *' lvalue Var 0x13600e258 'curr' 'struct entry *'
|   | `-ImplicitCastExpr 0x13602dd38 <col:9, col:21> 'struct entry *' <IntegralToPointer>
|   |   `-CallExpr 0x13602dd18 <col:9, col:21> 'int'
|   |     `-ImplicitCastExpr 0x13602dd00 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x13602dce0 <col:9> 'int ()' Function 0x13602dc28 'alloc_entry' 'int ()'
|   |-IfStmt 0x13602e7d8 <line:30:2, line:42:2>
|   | |-ImplicitCastExpr 0x13602dd90 <line:30:6> 'struct entry *' <LValueToRValue>
|   | | `-DeclRefExpr 0x13602dd70 <col:6> 'struct entry *' lvalue Var 0x13600e258 'curr' 'struct entry *'
|   | `-CompoundStmt 0x13602e798 <col:12, line:42:2>
|   |   |-ImplicitCastExpr 0x13602de78 <line:31:3, col:12> '<dependent type>' contains-errors <LValueToRValue>
|   |   | `-RecoveryExpr 0x13602de48 <col:3, col:12> '<dependent type>' contains-errors lvalue
|   |   |   |-UnaryOperator 0x13602dde0 <col:3, col:4> 'struct entry' lvalue prefix '*' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x13602ddc8 <col:4> 'struct entry *' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x13602dda8 <col:4> 'struct entry *' lvalue Var 0x13600e258 'curr' 'struct entry *'
|   |   |   `-UnaryOperator 0x13602de30 <col:11, col:12> 'struct entry' lvalue prefix '*' cannot overflow
|   |   |     `-ImplicitCastExpr 0x13602de18 <col:12> 'struct entry *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x13602ddf8 <col:12> 'struct entry *' lvalue ParmVar 0x13600de18 'entry' 'struct entry *'
|   |   |-BinaryOperator 0x13602df10 <line:32:3, col:17> '<dependent type>' contains-errors '='
|   |   | |-RecoveryExpr 0x13602dec8 <col:3, col:9> '<dependent type>' contains-errors lvalue
|   |   | | `-DeclRefExpr 0x13602de90 <col:3> 'struct entry *' lvalue Var 0x13600e258 'curr' 'struct entry *'
|   |   | `-IntegerLiteral 0x13602def0 <col:17> 'int' 0
|   |   |-BinaryOperator 0x13602dfe8 <line:33:3, col:16> '<dependent type>' contains-errors '='
|   |   | |-RecoveryExpr 0x13602df68 <col:3, col:9> '<dependent type>' contains-errors lvalue
|   |   | | `-DeclRefExpr 0x13602df30 <col:3> 'struct entry *' lvalue Var 0x13600e258 'curr' 'struct entry *'
|   |   | `-RecoveryExpr 0x13602dfc8 <col:16> '<dependent type>' contains-errors lvalue
|   |   |-CallExpr 0x13602e478 <line:34:3, col:41> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x13602e2d8 <col:3> 'void *(void *, const void *, unsigned long)' Function 0x13602e088 'memcpy' 'void *(void *, const void *, unsigned long)'
|   |   | |-RecoveryExpr 0x13602e330 <col:10, col:16> '<dependent type>' contains-errors lvalue
|   |   | | `-DeclRefExpr 0x13602e2f8 <col:10> 'struct entry *' lvalue Var 0x13600e258 'curr' 'struct entry *'
|   |   | |-DeclRefExpr 0x13602e358 <col:22> 'char *' lvalue ParmVar 0x13600de98 'comm' 'char *'
|   |   | `-RecoveryExpr 0x13602e410 <col:28> '<dependent type>' contains-errors lvalue
|   |   |-CallExpr 0x13602e5c8 <line:36:3, col:10> 'int'
|   |   | `-ImplicitCastExpr 0x13602e5b0 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   |   `-DeclRefExpr 0x13602e590 <col:3> 'int ()' Function 0x13602e4d8 'smp_mb' 'int ()'
|   |   `-IfStmt 0x13602e768 <line:38:3, line:41:12> has_else
|   |     |-ImplicitCastExpr 0x13602e608 <line:38:7> 'struct entry *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x13602e5e8 <col:7> 'struct entry *' lvalue Var 0x13600e2e8 'prev' 'struct entry *'
|   |     |-BinaryOperator 0x13602e6a0 <line:39:4, col:17> '<dependent type>' contains-errors '='
|   |     | |-RecoveryExpr 0x13602e658 <col:4, col:10> '<dependent type>' contains-errors lvalue
|   |     | | `-DeclRefExpr 0x13602e620 <col:4> 'struct entry *' lvalue Var 0x13600e2e8 'prev' 'struct entry *'
|   |     | `-DeclRefExpr 0x13602e680 <col:17> 'struct entry *' lvalue Var 0x13600e258 'curr' 'struct entry *'
|   |     `-BinaryOperator 0x13602e748 <line:41:4, col:12> 'struct entry *' '='
|   |       |-UnaryOperator 0x13602e6f8 <col:4, col:5> 'struct entry *' lvalue prefix '*' cannot overflow
|   |       | `-ImplicitCastExpr 0x13602e6e0 <col:5> 'struct entry **' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x13602e6c0 <col:5> 'struct entry **' lvalue Var 0x13600e1c8 'head' 'struct entry **'
|   |       `-ImplicitCastExpr 0x13602e730 <col:12> 'struct entry *' <LValueToRValue>
|   |         `-DeclRefExpr 0x13602e710 <col:12> 'struct entry *' lvalue Var 0x13600e258 'curr' 'struct entry *'
|   |-LabelStmt 0x13602e900 <line:43:2, col:12> 'out_unlock'
|   | `-NullStmt 0x13602e8f8 <col:12>
|   `-ReturnStmt 0x13602e958 <line:46:2, col:9>
|     `-ImplicitCastExpr 0x13602e940 <col:9> 'struct entry *' <LValueToRValue>
|       `-DeclRefExpr 0x13602e920 <col:9> 'struct entry *' lvalue Var 0x13600e258 'curr' 'struct entry *'
`-FunctionDecl 0x13602e088 <line:34:3> col:3 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x13602e188 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x13602e1f0 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x13602e258 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x13602e130 <<invalid sloc>> Implicit 882
