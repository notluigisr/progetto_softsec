TranslationUnitDecl 0x12d055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12d0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12d055bd0 '__int128'
|-TypedefDecl 0x12d056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12d055bf0 'unsigned __int128'
|-TypedefDecl 0x12d126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12d126000 'struct __NSConstantString_tag'
|   `-Record 0x12d056580 '__NSConstantString_tag'
|-TypedefDecl 0x12d126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12d055d90 '__SVInt8_t'
|-TypedefDecl 0x12d126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12d055db0 '__SVInt16_t'
|-TypedefDecl 0x12d126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12d055dd0 '__SVInt32_t'
|-TypedefDecl 0x12d1263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12d055df0 '__SVInt64_t'
|-TypedefDecl 0x12d126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12d055e10 '__SVUint8_t'
|-TypedefDecl 0x12d1264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12d055e30 '__SVUint16_t'
|-TypedefDecl 0x12d126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12d055e50 '__SVUint32_t'
|-TypedefDecl 0x12d126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12d055e70 '__SVUint64_t'
|-TypedefDecl 0x12d1265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12d055e90 '__SVFloat16_t'
|-TypedefDecl 0x12d126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12d055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12d1266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12d055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12d126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12d055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12d126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12d055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12d1267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12d055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12d126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12d055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12d1268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12d055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12d126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12d055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12d126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12d055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12d1269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12d055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12d126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12d055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12d126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12d056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12d126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12d056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12d126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12d056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12d126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12d056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12d126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12d056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12d126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12d0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12d126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12d0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12d126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12d0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12d126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12d056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12d126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12d056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12d126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12d056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12d126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12d056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12d126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12d056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12d127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12d0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12d127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12d0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12d1278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12d0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12d127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12d056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12d1279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12d056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12d127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12d056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12d127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12d056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12d127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12d056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12d127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12d0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12d127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12d0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12d127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12d0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12d127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12d056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12d127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12d056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12d127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12d056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12d127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12d056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12d127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12d056390 '__SVBool_t'
|-TypedefDecl 0x12d127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12d0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12d127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12d0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12d127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12d0563f0 '__SVCount_t'
|-TypedefDecl 0x12d127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12d127fb0 'char *'
|   `-BuiltinType 0x12d0556b0 'char'
|-TypedefDecl 0x12d128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12d127fb0 'char *'
|   `-BuiltinType 0x12d0556b0 'char'
`-FunctionDecl 0x12d128258 <dataset_diviso_filec/func10924_vuln.c:1:1, line:33:1> line:1:1 invalid xmlXPathErrMemory 'int (int, const char *)'
  |-ParmVarDecl 0x12d1280f0 <col:19, col:38> col:38 referenced invalid ctxt 'int'
  |-ParmVarDecl 0x12d128170 <col:44, col:56> col:56 used extra 'const char *'
  `-CompoundStmt 0x12d142be0 <line:2:1, line:33:1>
    `-IfStmt 0x12d142bb0 <line:3:5, line:32:5> has_else
      |-BinaryOperator 0x12d128388 <line:3:9, col:17> 'int' contains-errors '!='
      | |-RecoveryExpr 0x12d128310 <col:9> '<dependent type>' contains-errors lvalue
      | `-RecoveryExpr 0x12d128368 <col:17> '<dependent type>' contains-errors lvalue
      |-CompoundStmt 0x12d142498 <col:23, line:19:5>
      | |-IfStmt 0x12d141f20 <line:4:9, line:14:9> has_else
      | | |-ImplicitCastExpr 0x12d1283c8 <line:4:13> 'const char *' <LValueToRValue>
      | | | `-DeclRefExpr 0x12d1283a8 <col:13> 'const char *' lvalue ParmVar 0x12d128170 'extra' 'const char *'
      | | |-CompoundStmt 0x12d1287e0 <col:20, line:11:9>
      | | `-CompoundStmt 0x12d141f10 <col:16, line:14:9>
      | |-BinaryOperator 0x12d142080 <line:15:9, col:34> '<dependent type>' contains-errors '='
      | | |-CXXDependentScopeMemberExpr 0x12d141fe0 <col:9, col:25> '<dependent type>' contains-errors lvalue .domain
      | | | `-CXXDependentScopeMemberExpr 0x12d141f98 <col:9, col:15> '<dependent type>' contains-errors lvalue ->lastError
      | | |   `-RecoveryExpr 0x12d141f70 <col:9> '<dependent type>' contains-errors lvalue
      | | |     `-DeclRefExpr 0x12d141f50 <col:9> 'int' lvalue ParmVar 0x12d1280f0 'ctxt' 'int'
      | | `-RecoveryExpr 0x12d142060 <col:34> '<dependent type>' contains-errors lvalue
      | |-BinaryOperator 0x12d1421d0 <line:16:9, col:32> '<dependent type>' contains-errors '='
      | | |-CXXDependentScopeMemberExpr 0x12d142130 <col:9, col:25> '<dependent type>' contains-errors lvalue .code
      | | | `-CXXDependentScopeMemberExpr 0x12d1420e8 <col:9, col:15> '<dependent type>' contains-errors lvalue ->lastError
      | | |   `-RecoveryExpr 0x12d1420c0 <col:9> '<dependent type>' contains-errors lvalue
      | | |     `-DeclRefExpr 0x12d1420a0 <col:9> 'int' lvalue ParmVar 0x12d1280f0 'ctxt' 'int'
      | | `-RecoveryExpr 0x12d1421b0 <col:32> '<dependent type>' contains-errors lvalue
      | `-IfStmt 0x12d142478 <line:17:2, line:18:50>
      |   |-BinaryOperator 0x12d1422b0 <line:17:6, col:21> 'int' contains-errors '!='
      |   | |-CXXDependentScopeMemberExpr 0x12d142210 <col:6, col:12> '<dependent type>' contains-errors lvalue ->error
      |   | | `-RecoveryExpr 0x12d1421f0 <col:6> '<dependent type>' contains-errors lvalue
      |   | `-RecoveryExpr 0x12d142290 <col:21> '<dependent type>' contains-errors lvalue
      |   `-CallExpr 0x12d142448 <line:18:6, col:50> '<dependent type>' contains-errors
      |     |-CXXDependentScopeMemberExpr 0x12d142318 <col:6, col:12> '<dependent type>' contains-errors lvalue ->error
      |     | `-RecoveryExpr 0x12d1422f0 <col:6> '<dependent type>' contains-errors lvalue
      |     |   `-DeclRefExpr 0x12d1422d0 <col:6> 'int' lvalue ParmVar 0x12d1280f0 'ctxt' 'int'
      |     |-CXXDependentScopeMemberExpr 0x12d142380 <col:18, col:24> '<dependent type>' contains-errors lvalue ->userData
      |     | `-RecoveryExpr 0x12d142360 <col:18> '<dependent type>' contains-errors lvalue
      |     `-UnaryOperator 0x12d142430 <col:34, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow
      |       `-CXXDependentScopeMemberExpr 0x12d1423e8 <col:35, col:41> '<dependent type>' contains-errors lvalue ->lastError
      |         `-RecoveryExpr 0x12d1423c8 <col:35> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x12d142b98 <line:19:12, line:32:5>
        `-IfStmt 0x12d142b68 <line:20:9, line:27:13> has_else
          |-ImplicitCastExpr 0x12d1424e8 <line:20:13> 'const char *' <LValueToRValue>
          | `-DeclRefExpr 0x12d1424c8 <col:13> 'const char *' lvalue ParmVar 0x12d128170 'extra' 'const char *'
          |-CallExpr 0x12d142a18 <line:21:13, line:25:41> '<dependent type>' contains-errors
          | |-DeclRefExpr 0x12d1425e0 <line:21:13> 'int ()' Function 0x12d142528 '__xmlRaiseError' 'int ()'
          | |-RecoveryExpr 0x12d1428b8 <col:29> '<dependent type>' contains-errors lvalue
          | |-RecoveryExpr 0x12d1428d8 <col:35> '<dependent type>' contains-errors lvalue
          | |-RecoveryExpr 0x12d1428f8 <col:41> '<dependent type>' contains-errors lvalue
          | |-RecoveryExpr 0x12d142918 <line:22:29> '<dependent type>' contains-errors lvalue
          | |-RecoveryExpr 0x12d142938 <col:35> '<dependent type>' contains-errors lvalue
          | |-RecoveryExpr 0x12d142958 <col:41> '<dependent type>' contains-errors lvalue
          | |-RecoveryExpr 0x12d142978 <line:23:29> '<dependent type>' contains-errors lvalue
          | |-RecoveryExpr 0x12d142998 <col:48> '<dependent type>' contains-errors lvalue
          | |-RecoveryExpr 0x12d1429b8 <col:63> '<dependent type>' contains-errors lvalue
          | |-IntegerLiteral 0x12d1426d8 <col:69> 'int' 0
          | |-DeclRefExpr 0x12d1426f8 <line:24:29> 'const char *' lvalue ParmVar 0x12d128170 'extra' 'const char *'
          | |-RecoveryExpr 0x12d1429d8 <col:36> '<dependent type>' contains-errors lvalue
          | |-RecoveryExpr 0x12d1429f8 <col:42> '<dependent type>' contains-errors lvalue
          | |-IntegerLiteral 0x12d142748 <col:48> 'int' 0
          | |-IntegerLiteral 0x12d142768 <col:51> 'int' 0
          | |-StringLiteral 0x12d1427d0 <line:25:29> 'char[4]' lvalue "STR"
          | `-DeclRefExpr 0x12d1427f0 <col:36> 'const char *' lvalue ParmVar 0x12d128170 'extra' 'const char *'
          `-NullStmt 0x12d142b60 <line:27:13>
