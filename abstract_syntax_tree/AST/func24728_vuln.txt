TranslationUnitDecl 0x120055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1200564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x120055bd0 '__int128'
|-TypedefDecl 0x120056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x120055bf0 'unsigned __int128'
|-TypedefDecl 0x10500be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x10500bc00 'struct __NSConstantString_tag'
|   `-Record 0x120056580 '__NSConstantString_tag'
|-TypedefDecl 0x10500be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x120055d90 '__SVInt8_t'
|-TypedefDecl 0x10500bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x120055db0 '__SVInt16_t'
|-TypedefDecl 0x10500bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x120055dd0 '__SVInt32_t'
|-TypedefDecl 0x10500bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x120055df0 '__SVInt64_t'
|-TypedefDecl 0x10500c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x120055e10 '__SVUint8_t'
|-TypedefDecl 0x10500c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x120055e30 '__SVUint16_t'
|-TypedefDecl 0x10500c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x120055e50 '__SVUint32_t'
|-TypedefDecl 0x10500c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x120055e70 '__SVUint64_t'
|-TypedefDecl 0x10500c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x120055e90 '__SVFloat16_t'
|-TypedefDecl 0x10500c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x120055eb0 '__SVFloat32_t'
|-TypedefDecl 0x10500c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x120055ed0 '__SVFloat64_t'
|-TypedefDecl 0x10500c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x120055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x10500c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x120055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x10500c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x120055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x10500c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x120055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x10500c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x120055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x10500c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x120055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x10500c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x120055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x10500c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x120055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x10500c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x120055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x10500c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x120056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x10500c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x120056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x10500c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x120056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x10500c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x120056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x10500c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x120056090 '__clang_svint8x3_t'
|-TypedefDecl 0x10500c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1200560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x10500c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1200560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x10500c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1200560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x10500c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x120056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x10500ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x120056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x10500cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x120056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x10500cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x120056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x10500cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x120056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x10500d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1200561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x10500d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1200561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x10500d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1200561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x10500d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x120056210 '__clang_svint8x4_t'
|-TypedefDecl 0x10500d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x120056230 '__clang_svint16x4_t'
|-TypedefDecl 0x10500d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x120056250 '__clang_svint32x4_t'
|-TypedefDecl 0x10500d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x120056270 '__clang_svint64x4_t'
|-TypedefDecl 0x10500d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x120056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x10500d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1200562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x10500d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1200562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x10500d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1200562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x10500d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x120056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x10500d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x120056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x10500d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x120056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x10500d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x120056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x10500da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x120056390 '__SVBool_t'
|-TypedefDecl 0x10500da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1200563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x10500dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1200563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x10500db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1200563f0 '__SVCount_t'
|-TypedefDecl 0x10500dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x10500dbb0 'char *'
|   `-BuiltinType 0x1200556b0 'char'
|-TypedefDecl 0x10500dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x10500dbb0 'char *'
|   `-BuiltinType 0x1200556b0 'char'
`-FunctionDecl 0x10500ddc8 <dataset_diviso_filec/func24728_vuln.c:1:1, line:41:1> line:1:1 invalid xmlParseMarkupDecl 'int (int)'
  |-ParmVarDecl 0x10500dcf0 <col:20, col:37> col:37 referenced invalid ctxt 'int'
  `-CompoundStmt 0x120122a90 <col:43, line:41:1>
    |-IfStmt 0x105027eb0 <line:3:5, line:28:5>
    | |-BinaryOperator 0x10500dee8 <line:3:9, col:16> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x10500dec8 <col:9> '<dependent type>' contains-errors lvalue
    | | `-CharacterLiteral 0x10500de90 <col:16> 'int' 60
    | `-CompoundStmt 0x105027e98 <col:21, line:28:5>
    |   `-IfStmt 0x105027e68 <line:4:9, line:27:2> has_else
    |     |-BinaryOperator 0x10500e128 <line:4:13, col:23> 'int' '=='
    |     | |-CallExpr 0x10500e0e8 <col:13, col:18> 'int'
    |     | | |-ImplicitCastExpr 0x10500e0d0 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |     | | | `-DeclRefExpr 0x10500e060 <col:13> 'int ()' Function 0x10500dfa8 'NXT' 'int ()'
    |     | | `-IntegerLiteral 0x10500e080 <col:17> 'int' 1
    |     | `-CharacterLiteral 0x10500e110 <col:23> 'int' 33
    |     |-CompoundStmt 0x105027c18 <col:28, line:25:2>
    |     | `-SwitchStmt 0x10500e1c8 <line:5:6, line:24:6>
    |     |   |-CallExpr 0x10500e1a0 <line:5:14, col:19> 'int'
    |     |   | |-ImplicitCastExpr 0x10500e188 <col:14> 'int (*)()' <FunctionToPointerDecay>
    |     |   | | `-DeclRefExpr 0x10500e148 <col:14> 'int ()' Function 0x10500dfa8 'NXT' 'int ()'
    |     |   | `-IntegerLiteral 0x10500e168 <col:18> 'int' 2
    |     |   `-CompoundStmt 0x105027bc0 <col:22, line:24:6>
    |     |     |-CaseStmt 0x10500e220 <line:6:10, line:10:27>
    |     |     | |-ConstantExpr 0x10500e208 <line:6:15> 'int'
    |     |     | | `-CharacterLiteral 0x10500e1f0 <col:15> 'int' 69
    |     |     | `-IfStmt 0x105027668 <line:7:7, line:10:27> has_else
    |     |     |   |-BinaryOperator 0x10500e2e0 <line:7:11, col:21> 'int' '=='
    |     |     |   | |-CallExpr 0x10500e2a0 <col:11, col:16> 'int'
    |     |     |   | | |-ImplicitCastExpr 0x10500e288 <col:11> 'int (*)()' <FunctionToPointerDecay>
    |     |     |   | | | `-DeclRefExpr 0x10500e248 <col:11> 'int ()' Function 0x10500dfa8 'NXT' 'int ()'
    |     |     |   | | `-IntegerLiteral 0x10500e268 <col:15> 'int' 3
    |     |     |   | `-CharacterLiteral 0x10500e2c8 <col:21> 'int' 76
    |     |     |   |-CallExpr 0x105027420 <line:8:4, col:28> '<dependent type>' contains-errors
    |     |     |   | |-DeclRefExpr 0x10500e3e0 <col:4> 'int ()' Function 0x10500e328 'xmlParseElementDecl' 'int ()'
    |     |     |   | `-RecoveryExpr 0x105027400 <col:24> '<dependent type>' contains-errors lvalue
    |     |     |   `-IfStmt 0x105027648 <line:9:12, line:10:27>
    |     |     |     |-BinaryOperator 0x1050274e0 <line:9:16, col:26> 'int' '=='
    |     |     |     | |-CallExpr 0x1050274a0 <col:16, col:21> 'int'
    |     |     |     | | |-ImplicitCastExpr 0x105027488 <col:16> 'int (*)()' <FunctionToPointerDecay>
    |     |     |     | | | `-DeclRefExpr 0x105027448 <col:16> 'int ()' Function 0x10500dfa8 'NXT' 'int ()'
    |     |     |     | | `-IntegerLiteral 0x105027468 <col:20> 'int' 3
    |     |     |     | `-CharacterLiteral 0x1050274c8 <col:26> 'int' 78
    |     |     |     `-CallExpr 0x105027620 <line:10:4, col:27> '<dependent type>' contains-errors
    |     |     |       |-DeclRefExpr 0x1050275e0 <col:4> 'int ()' Function 0x105027528 'xmlParseEntityDecl' 'int ()'
    |     |     |       `-RecoveryExpr 0x105027600 <col:23> '<dependent type>' contains-errors lvalue
    |     |     |-BreakStmt 0x105027698 <line:11:7>
    |     |     |-CaseStmt 0x1050276d0 <line:12:10, line:13:37>
    |     |     | |-ConstantExpr 0x1050276b8 <line:12:15> 'int'
    |     |     | | `-CharacterLiteral 0x1050276a0 <col:15> 'int' 65
    |     |     | `-CallExpr 0x105027818 <line:13:7, col:37> '<dependent type>' contains-errors
    |     |     |   |-DeclRefExpr 0x1050277d8 <col:7> 'int ()' Function 0x105027720 'xmlParseAttributeListDecl' 'int ()'
    |     |     |   `-RecoveryExpr 0x1050277f8 <col:33> '<dependent type>' contains-errors lvalue
    |     |     |-BreakStmt 0x105027840 <line:14:7>
    |     |     |-CaseStmt 0x105027878 <line:15:10, line:16:32>
    |     |     | |-ConstantExpr 0x105027860 <line:15:15> 'int'
    |     |     | | `-CharacterLiteral 0x105027848 <col:15> 'int' 78
    |     |     | `-CallExpr 0x1050279c0 <line:16:7, col:32> '<dependent type>' contains-errors
    |     |     |   |-DeclRefExpr 0x105027980 <col:7> 'int ()' Function 0x1050278c8 'xmlParseNotationDecl' 'int ()'
    |     |     |   `-RecoveryExpr 0x1050279a0 <col:28> '<dependent type>' contains-errors lvalue
    |     |     |-BreakStmt 0x1050279e8 <line:17:7>
    |     |     |-CaseStmt 0x105027a20 <line:18:10, line:19:27>
    |     |     | |-ConstantExpr 0x105027a08 <line:18:15> 'int'
    |     |     | | `-CharacterLiteral 0x1050279f0 <col:15> 'int' 45
    |     |     | `-CallExpr 0x105027b68 <line:19:7, col:27> '<dependent type>' contains-errors
    |     |     |   |-DeclRefExpr 0x105027b28 <col:7> 'int ()' Function 0x105027a70 'xmlParseComment' 'int ()'
    |     |     |   `-RecoveryExpr 0x105027b48 <col:23> '<dependent type>' contains-errors lvalue
    |     |     |-BreakStmt 0x105027b90 <line:20:7>
    |     |     `-DefaultStmt 0x105027ba0 <line:21:3, line:23:7>
    |     |       `-BreakStmt 0x105027b98 <col:7>
    |     `-IfStmt 0x105027e48 <line:25:9, line:27:2>
    |       |-BinaryOperator 0x105027cc8 <line:25:13, col:23> 'int' '=='
    |       | |-CallExpr 0x105027c88 <col:13, col:18> 'int'
    |       | | |-ImplicitCastExpr 0x105027c70 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |       | | | `-DeclRefExpr 0x105027c30 <col:13> 'int ()' Function 0x10500dfa8 'NXT' 'int ()'
    |       | | `-IntegerLiteral 0x105027c50 <col:17> 'int' 1
    |       | `-CharacterLiteral 0x105027cb0 <col:23> 'int' 63
    |       `-CompoundStmt 0x105027e30 <col:28, line:27:2>
    |         `-CallExpr 0x105027e08 <line:26:6, col:21> '<dependent type>' contains-errors
    |           |-DeclRefExpr 0x105027dc8 <col:6> 'int ()' Function 0x105027d10 'xmlParsePI' 'int ()'
    |           `-RecoveryExpr 0x105027de8 <col:17> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x1050281c8 <line:30:5, line:31:26>
    | |-BinaryOperator 0x105028060 <line:30:9, col:53> 'int' contains-errors '&&'
    | | |-ParenExpr 0x105027f78 <col:9, col:29> 'int' contains-errors
    | | | `-BinaryOperator 0x105027f58 <col:10, col:28> 'int' contains-errors '=='
    | | |   |-CXXDependentScopeMemberExpr 0x105027ef0 <col:10, col:16> '<dependent type>' contains-errors lvalue ->external
    | | |   | `-RecoveryExpr 0x105027ed0 <col:10> '<dependent type>' contains-errors lvalue
    | | |   `-IntegerLiteral 0x105027f38 <col:28> 'int' 0
    | | `-ParenExpr 0x105028040 <col:34, col:53> 'int' contains-errors
    | |   `-BinaryOperator 0x105028020 <col:35, col:52> 'int' contains-errors '=='
    | |     |-CXXDependentScopeMemberExpr 0x105027fb8 <col:35, col:41> '<dependent type>' contains-errors lvalue ->inputNr
    | |     | `-RecoveryExpr 0x105027f98 <col:35> '<dependent type>' contains-errors lvalue
    | |     `-IntegerLiteral 0x105028000 <col:52> 'int' 1
    | `-CallExpr 0x1050281a0 <line:31:2, col:26> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x105028160 <col:2> 'int ()' Function 0x1050280a8 'xmlParsePEReference' 'int ()'
    |   `-RecoveryExpr 0x105028180 <col:22> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x120122968 <line:34:5, line:38:5>
    | |-BinaryOperator 0x105028378 <line:34:9, col:52> 'int' contains-errors '&&'
    | | |-ParenExpr 0x105028290 <col:9, col:29> 'int' contains-errors
    | | | `-BinaryOperator 0x105028270 <col:10, col:28> 'int' contains-errors '=='
    | | |   |-CXXDependentScopeMemberExpr 0x105028208 <col:10, col:16> '<dependent type>' contains-errors lvalue ->external
    | | |   | `-RecoveryExpr 0x1050281e8 <col:10> '<dependent type>' contains-errors lvalue
    | | |   `-IntegerLiteral 0x105028250 <col:28> 'int' 0
    | | `-ParenExpr 0x105028358 <col:34, col:52> 'int' contains-errors
    | |   `-BinaryOperator 0x105028338 <col:35, col:51> 'int' contains-errors '>'
    | |     |-CXXDependentScopeMemberExpr 0x1050282d0 <col:35, col:41> '<dependent type>' contains-errors lvalue ->inputNr
    | |     | `-RecoveryExpr 0x1050282b0 <col:35> '<dependent type>' contains-errors lvalue
    | |     `-IntegerLiteral 0x105028318 <col:51> 'int' 1
    | `-CompoundStmt 0x120122950 <col:55, line:38:5>
    |   `-IfStmt 0x120122930 <line:35:9, line:37:2>
    |     |-RecoveryExpr 0x1201227b0 <line:35:13, col:62> '_Bool' contains-errors
    |     `-CompoundStmt 0x120122918 <col:65, line:37:2>
    |       `-CallExpr 0x1201228f0 <line:36:6, col:38> '<dependent type>' contains-errors
    |         |-DeclRefExpr 0x1201228b0 <col:6> 'int ()' Function 0x1201227f8 'xmlParseConditionalSections' 'int ()'
    |         `-RecoveryExpr 0x1201228d0 <col:34> '<dependent type>' contains-errors lvalue
    `-BinaryOperator 0x120122a70 <line:40:5, col:21> '<dependent type>' contains-errors '='
      |-CXXDependentScopeMemberExpr 0x1201229d0 <col:5, col:11> '<dependent type>' contains-errors lvalue ->instate
      | `-RecoveryExpr 0x1201229a8 <col:5> '<dependent type>' contains-errors lvalue
      |   `-DeclRefExpr 0x120122988 <col:5> 'int' lvalue ParmVar 0x10500dcf0 'ctxt' 'int'
      `-RecoveryExpr 0x120122a50 <col:21> '<dependent type>' contains-errors lvalue
