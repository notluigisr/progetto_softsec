TranslationUnitDecl 0x14204e608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14204f4b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14204ebd0 '__int128'
|-TypedefDecl 0x14204f528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14204ebf0 'unsigned __int128'
|-TypedefDecl 0x142121230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x142121000 'struct __NSConstantString_tag'
|   `-Record 0x14204f580 '__NSConstantString_tag'
|-TypedefDecl 0x142121298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14204ed90 '__SVInt8_t'
|-TypedefDecl 0x142121300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14204edb0 '__SVInt16_t'
|-TypedefDecl 0x142121368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14204edd0 '__SVInt32_t'
|-TypedefDecl 0x1421213d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14204edf0 '__SVInt64_t'
|-TypedefDecl 0x142121438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14204ee10 '__SVUint8_t'
|-TypedefDecl 0x1421214a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14204ee30 '__SVUint16_t'
|-TypedefDecl 0x142121508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14204ee50 '__SVUint32_t'
|-TypedefDecl 0x142121570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14204ee70 '__SVUint64_t'
|-TypedefDecl 0x1421215d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14204ee90 '__SVFloat16_t'
|-TypedefDecl 0x142121640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14204eeb0 '__SVFloat32_t'
|-TypedefDecl 0x1421216a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14204eed0 '__SVFloat64_t'
|-TypedefDecl 0x142121710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14204eef0 '__SVBfloat16_t'
|-TypedefDecl 0x142121778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14204ef10 '__clang_svint8x2_t'
|-TypedefDecl 0x1421217e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14204ef30 '__clang_svint16x2_t'
|-TypedefDecl 0x142121848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14204ef50 '__clang_svint32x2_t'
|-TypedefDecl 0x1421218b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14204ef70 '__clang_svint64x2_t'
|-TypedefDecl 0x142121918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14204ef90 '__clang_svuint8x2_t'
|-TypedefDecl 0x142121980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14204efb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1421219e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14204efd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x142121a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14204eff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x142121ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14204f010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x142121b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14204f030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x142121b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14204f050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x142121bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14204f070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x142121c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14204f090 '__clang_svint8x3_t'
|-TypedefDecl 0x142121cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14204f0b0 '__clang_svint16x3_t'
|-TypedefDecl 0x142121d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14204f0d0 '__clang_svint32x3_t'
|-TypedefDecl 0x142121d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14204f0f0 '__clang_svint64x3_t'
|-TypedefDecl 0x142121df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14204f110 '__clang_svuint8x3_t'
|-TypedefDecl 0x142121e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14204f130 '__clang_svuint16x3_t'
|-TypedefDecl 0x142121ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14204f150 '__clang_svuint32x3_t'
|-TypedefDecl 0x142121f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14204f170 '__clang_svuint64x3_t'
|-TypedefDecl 0x142121f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14204f190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x142122800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14204f1b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x142122868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14204f1d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1421228d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14204f1f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x142122938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14204f210 '__clang_svint8x4_t'
|-TypedefDecl 0x1421229a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14204f230 '__clang_svint16x4_t'
|-TypedefDecl 0x142122a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14204f250 '__clang_svint32x4_t'
|-TypedefDecl 0x142122a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14204f270 '__clang_svint64x4_t'
|-TypedefDecl 0x142122ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14204f290 '__clang_svuint8x4_t'
|-TypedefDecl 0x142122b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14204f2b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x142122ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14204f2d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x142122c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14204f2f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x142122c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14204f310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x142122ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14204f330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x142122d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14204f350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x142122db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14204f370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x142122e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14204f390 '__SVBool_t'
|-TypedefDecl 0x142122e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14204f3b0 '__clang_svboolx2_t'
|-TypedefDecl 0x142122ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14204f3d0 '__clang_svboolx4_t'
|-TypedefDecl 0x142122f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14204f3f0 '__SVCount_t'
|-TypedefDecl 0x142122ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x142122fb0 'char *'
|   `-BuiltinType 0x14204e6b0 'char'
|-TypedefDecl 0x142123068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x142122fb0 'char *'
|   `-BuiltinType 0x14204e6b0 'char'
`-FunctionDecl 0x14213bb48 <dataset_diviso_filec/func20093_nonvuln.c:1:1, line:57:1> line:1:12 kiocb_batch_refill 'int (struct kioctx *, struct kiocb_batch *)' static
  |-ParmVarDecl 0x142123648 <col:31, col:46> col:46 used ctx 'struct kioctx *'
  |-ParmVarDecl 0x14213ba28 <col:51, col:71> col:71 used batch 'struct kiocb_batch *'
  `-CompoundStmt 0x14213fcf0 <line:2:1, line:57:1>
    |-DeclStmt 0x14213bd60 <line:3:2, col:36>
    | |-VarDecl 0x14213bc60 <col:2, col:17> col:17 used allocated 'unsigned short'
    | `-VarDecl 0x14213bce0 <col:2, col:28> col:28 used to_alloc 'unsigned short'
    |-DeclStmt 0x14213bdf8 <line:4:2, col:12>
    | `-VarDecl 0x14213bd90 <col:2, col:7> col:7 used avail 'long'
    |-DeclStmt 0x14213c0b0 <line:6:2, col:23>
    | |-RecordDecl 0x14213be28 <col:2, col:9> col:9 struct kiocb
    | |-VarDecl 0x14213bf98 <col:2, col:16> col:16 used req 'struct kiocb *'
    | `-VarDecl 0x14213c028 <col:2, col:22> col:22 used n 'struct kiocb *'
    |-DeclStmt 0x14213c2b8 <line:7:2, col:23>
    | |-RecordDecl 0x14213c0c8 <col:2, col:9> col:9 struct aio_ring
    | `-VarDecl 0x14213c238 <col:2, col:19> col:19 used ring 'struct aio_ring *'
    |-BinaryOperator 0x14213c538 <line:9:2, col:47> 'unsigned short' contains-errors '='
    | |-DeclRefExpr 0x14213c2d0 <col:2> 'unsigned short' lvalue Var 0x14213bce0 'to_alloc' 'unsigned short'
    | `-CallExpr 0x14213c508 <col:13, col:47> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14213c400 <col:13> 'int ()' Function 0x14213c348 'min' 'int ()'
    |   |-RecoveryExpr 0x14213c458 <col:17, col:24> '<dependent type>' contains-errors lvalue
    |   | `-DeclRefExpr 0x14213c420 <col:17> 'struct kiocb_batch *' lvalue ParmVar 0x14213ba28 'batch' 'struct kiocb_batch *'
    |   `-RecoveryExpr 0x14213c4e8 <col:31> '<dependent type>' contains-errors lvalue
    |-ForStmt 0x14213e620 <line:10:2, line:16:2>
    | |-BinaryOperator 0x14213c5b0 <line:10:7, col:19> 'unsigned short' '='
    | | |-DeclRefExpr 0x14213c558 <col:7> 'unsigned short' lvalue Var 0x14213bc60 'allocated' 'unsigned short'
    | | `-ImplicitCastExpr 0x14213c598 <col:19> 'unsigned short' <IntegralCast>
    | |   `-IntegerLiteral 0x14213c578 <col:19> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x14213c670 <col:22, col:34> 'int' '<'
    | | |-ImplicitCastExpr 0x14213c640 <col:22> 'int' <IntegralCast>
    | | | `-ImplicitCastExpr 0x14213c610 <col:22> 'unsigned short' <LValueToRValue>
    | | |   `-DeclRefExpr 0x14213c5d0 <col:22> 'unsigned short' lvalue Var 0x14213bc60 'allocated' 'unsigned short'
    | | `-ImplicitCastExpr 0x14213c658 <col:34> 'int' <IntegralCast>
    | |   `-ImplicitCastExpr 0x14213c628 <col:34> 'unsigned short' <LValueToRValue>
    | |     `-DeclRefExpr 0x14213c5f0 <col:34> 'unsigned short' lvalue Var 0x14213bce0 'to_alloc' 'unsigned short'
    | |-UnaryOperator 0x14213c6b0 <col:44, col:53> 'unsigned short' postfix '++' cannot overflow
    | | `-DeclRefExpr 0x14213c690 <col:44> 'unsigned short' lvalue Var 0x14213bc60 'allocated' 'unsigned short'
    | `-CompoundStmt 0x14213e5f8 <col:57, line:16:2>
    |   |-BinaryOperator 0x14213c8b0 <line:11:3, col:26> 'struct kiocb *' '='
    |   | |-DeclRefExpr 0x14213c6c8 <col:3> 'struct kiocb *' lvalue Var 0x14213bf98 'req' 'struct kiocb *'
    |   | `-ImplicitCastExpr 0x14213c898 <col:9, col:26> 'struct kiocb *' <IntegralToPointer>
    |   |   `-CallExpr 0x14213c858 <col:9, col:26> 'int'
    |   |     |-ImplicitCastExpr 0x14213c840 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   |     | `-DeclRefExpr 0x14213c7c8 <col:9> 'int ()' Function 0x14213c710 '__aio_get_req' 'int ()'
    |   |     `-ImplicitCastExpr 0x14213c880 <col:23> 'struct kioctx *' <LValueToRValue>
    |   |       `-DeclRefExpr 0x14213c7e8 <col:23> 'struct kioctx *' lvalue ParmVar 0x142123648 'ctx' 'struct kioctx *'
    |   |-IfStmt 0x14213c928 <line:12:3, line:14:4>
    |   | |-UnaryOperator 0x14213c908 <line:12:7, col:8> 'int' prefix '!' cannot overflow
    |   | | `-ImplicitCastExpr 0x14213c8f0 <col:8> 'struct kiocb *' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x14213c8d0 <col:8> 'struct kiocb *' lvalue Var 0x14213bf98 'req' 'struct kiocb *'
    |   | `-BreakStmt 0x14213c920 <line:14:4>
    |   `-CallExpr 0x14213e5c8 <line:15:3, col:40> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x14213e4b8 <col:3> 'int ()' Function 0x14213e400 'list_add' 'int ()'
    |     |-UnaryOperator 0x14213e538 <col:12, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     | `-RecoveryExpr 0x14213e510 <col:13, col:18> '<dependent type>' contains-errors lvalue
    |     |   `-DeclRefExpr 0x14213e4d8 <col:13> 'struct kiocb *' lvalue Var 0x14213bf98 'req' 'struct kiocb *'
    |     `-UnaryOperator 0x14213e5b0 <col:28, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow
    |       `-RecoveryExpr 0x14213e588 <col:29, col:36> '<dependent type>' contains-errors lvalue
    |         `-DeclRefExpr 0x14213e550 <col:29> 'struct kiocb_batch *' lvalue ParmVar 0x14213ba28 'batch' 'struct kiocb_batch *'
    |-IfStmt 0x14213e750 <line:18:2, line:19:8>
    | |-BinaryOperator 0x14213e6c8 <line:18:6, col:19> 'int' '=='
    | | |-ImplicitCastExpr 0x14213e6b0 <col:6> 'int' <IntegralCast>
    | | | `-ImplicitCastExpr 0x14213e698 <col:6> 'unsigned short' <LValueToRValue>
    | | |   `-DeclRefExpr 0x14213e658 <col:6> 'unsigned short' lvalue Var 0x14213bc60 'allocated' 'unsigned short'
    | | `-IntegerLiteral 0x14213e678 <col:19> 'int' 0
    | `-GotoStmt 0x14213e738 <line:19:3, col:8> 'out' 0x14213e6e8
    |-LabelStmt 0x14213e960 <line:21:1, line:22:30> 'retry'
    | `-CallExpr 0x14213e8e8 <col:2, col:30> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14213e850 <col:2> 'int ()' Function 0x14213e798 'spin_lock_irq' 'int ()'
    |   `-UnaryOperator 0x14213e8d0 <col:16, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x14213e8a8 <col:17, col:22> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x14213e870 <col:17> 'struct kioctx *' lvalue ParmVar 0x142123648 'ctx' 'struct kioctx *'
    |-BinaryOperator 0x14213ebc8 <line:23:2, col:49> 'struct aio_ring *' contains-errors '='
    | |-DeclRefExpr 0x14213e980 <col:2> 'struct aio_ring *' lvalue Var 0x14213c238 'ring' 'struct aio_ring *'
    | `-CallExpr 0x14213eba0 <col:9, col:49> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14213ea80 <col:9> 'int ()' Function 0x14213e9c8 'kmap_atomic' 'int ()'
    |   `-ArraySubscriptExpr 0x14213eb80 <col:21, col:48> '<dependent type>' contains-errors lvalue
    |     |-ImplicitCastExpr 0x14213eb68 <col:21, col:36> '<dependent type>' contains-errors <LValueToRValue>
    |     | `-CXXDependentScopeMemberExpr 0x14213eb00 <col:21, col:36> '<dependent type>' contains-errors lvalue .ring_pages
    |     |   `-RecoveryExpr 0x14213ead8 <col:21, col:26> '<dependent type>' contains-errors lvalue
    |     |     `-DeclRefExpr 0x14213eaa0 <col:21> 'struct kioctx *' lvalue ParmVar 0x142123648 'ctx' 'struct kioctx *'
    |     `-IntegerLiteral 0x14213eb48 <col:47> 'int' 0
    |-BinaryOperator 0x14213ee50 <line:25:2, col:55> 'long' contains-errors '='
    | |-DeclRefExpr 0x14213ebe8 <col:2> 'long' lvalue Var 0x14213bd90 'avail' 'long'
    | `-BinaryOperator 0x14213ee30 <col:10, col:55> '<dependent type>' contains-errors '-'
    |   |-CallExpr 0x14213eda0 <col:10, col:46> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x14213ece8 <col:10> 'int ()' Function 0x14213ec30 'aio_ring_avail' 'int ()'
    |   | |-UnaryOperator 0x14213ed68 <col:25, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | | `-RecoveryExpr 0x14213ed40 <col:26, col:31> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x14213ed08 <col:26> 'struct kioctx *' lvalue ParmVar 0x142123648 'ctx' 'struct kioctx *'
    |   | `-DeclRefExpr 0x14213ed80 <col:42> 'struct aio_ring *' lvalue Var 0x14213c238 'ring' 'struct aio_ring *'
    |   `-RecoveryExpr 0x14213ee08 <col:50, col:55> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x14213edd0 <col:50> 'struct kioctx *' lvalue ParmVar 0x142123648 'ctx' 'struct kioctx *'
    |-CallExpr 0x14213f018 <line:26:2, col:18> 'int'
    | |-ImplicitCastExpr 0x14213f000 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x14213ef50 <col:2> 'int ()' Function 0x14213ee98 'BUG_ON' 'int ()'
    | `-BinaryOperator 0x14213efe0 <col:9, col:17> 'int' '<'
    |   |-ImplicitCastExpr 0x14213efb0 <col:9> 'long' <LValueToRValue>
    |   | `-DeclRefExpr 0x14213ef70 <col:9> 'long' lvalue Var 0x14213bd90 'avail' 'long'
    |   `-ImplicitCastExpr 0x14213efc8 <col:17> 'long' <IntegralCast>
    |     `-IntegerLiteral 0x14213ef90 <col:17> 'int' 0
    |-IfStmt 0x14213f6b8 <line:27:2, line:34:2>
    | |-BinaryOperator 0x14213f228 <line:27:6, col:21> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x14213f1b8 <col:6, col:15> 'int' '=='
    | | | |-ImplicitCastExpr 0x14213f188 <col:6> 'long' <LValueToRValue>
    | | | | `-DeclRefExpr 0x14213f040 <col:6> 'long' lvalue Var 0x14213bd90 'avail' 'long'
    | | | `-ImplicitCastExpr 0x14213f1a0 <col:15> 'long' <IntegralCast>
    | | |   `-IntegerLiteral 0x14213f060 <col:15> 'int' 0
    | | `-UnaryOperator 0x14213f210 <col:20, col:21> '<dependent type>' contains-errors prefix '!' cannot overflow
    | |   `-ImplicitCastExpr 0x14213f1f8 <col:21> '<dependent type>' contains-errors <LValueToRValue>
    | |     `-RecoveryExpr 0x14213f1d8 <col:21> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x14213f690 <col:34, line:34:2>
    |   |-CallExpr 0x14213f380 <line:29:3, col:21> 'int'
    |   | |-ImplicitCastExpr 0x14213f368 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x14213f328 <col:3> 'int ()' Function 0x14213f270 'kunmap_atomic' 'int ()'
    |   | `-ImplicitCastExpr 0x14213f3a8 <col:17> 'struct aio_ring *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x14213f348 <col:17> 'struct aio_ring *' lvalue Var 0x14213c238 'ring' 'struct aio_ring *'
    |   |-CallExpr 0x14213f550 <line:30:3, col:33> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x14213f4b8 <col:3> 'int ()' Function 0x14213f400 'spin_unlock_irq' 'int ()'
    |   | `-UnaryOperator 0x14213f538 <col:19, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   `-RecoveryExpr 0x14213f510 <col:20, col:25> '<dependent type>' contains-errors lvalue
    |   |     `-DeclRefExpr 0x14213f4d8 <col:20> 'struct kioctx *' lvalue ParmVar 0x142123648 'ctx' 'struct kioctx *'
    |   `-GotoStmt 0x14213f678 <line:33:3, col:8> 'retry' 0x14213e910
    |-IfStmt 0x14213f948 <line:36:2, line:44:2>
    | |-BinaryOperator 0x14213f760 <line:36:6, col:14> 'int' '<'
    | | |-ImplicitCastExpr 0x14213f718 <col:6> 'long' <LValueToRValue>
    | | | `-DeclRefExpr 0x14213f6d8 <col:6> 'long' lvalue Var 0x14213bd90 'avail' 'long'
    | | `-ImplicitCastExpr 0x14213f748 <col:14> 'long' <IntegralCast>
    | |   `-ImplicitCastExpr 0x14213f730 <col:14> 'unsigned short' <LValueToRValue>
    | |     `-DeclRefExpr 0x14213f6f8 <col:14> 'unsigned short' lvalue Var 0x14213bc60 'allocated' 'unsigned short'
    | `-CompoundStmt 0x14213f938 <col:25, line:44:2>
    |-CompoundAssignOperator 0x14213f9e8 <line:46:2, col:18> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | |-RecoveryExpr 0x14213f9a0 <col:2, col:9> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x14213f968 <col:2> 'struct kiocb_batch *' lvalue ParmVar 0x14213ba28 'batch' 'struct kiocb_batch *'
    | `-DeclRefExpr 0x14213f9c8 <col:18> 'unsigned short' lvalue Var 0x14213bc60 'allocated' 'unsigned short'
    |-CallExpr 0x14213fc48 <line:53:2, col:32> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14213fbb0 <col:2> 'int ()' Function 0x14213f400 'spin_unlock_irq' 'int ()'
    | `-UnaryOperator 0x14213fc30 <col:18, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x14213fc08 <col:19, col:24> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x14213fbd0 <col:19> 'struct kioctx *' lvalue ParmVar 0x142123648 'ctx' 'struct kioctx *'
    `-LabelStmt 0x14213fcd0 <line:55:1, line:56:9> 'out'
      `-ReturnStmt 0x14213fcc0 <col:2, col:9>
        `-ImplicitCastExpr 0x14213fca8 <col:9> 'int' <IntegralCast>
          `-ImplicitCastExpr 0x14213fc90 <col:9> 'unsigned short' <LValueToRValue>
            `-DeclRefExpr 0x14213fc70 <col:9> 'unsigned short' lvalue Var 0x14213bc60 'allocated' 'unsigned short'
