TranslationUnitDecl 0x128055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1280564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x128055bd0 '__int128'
|-TypedefDecl 0x128056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x128055bf0 'unsigned __int128'
|-TypedefDecl 0x128126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x128126000 'struct __NSConstantString_tag'
|   `-Record 0x128056580 '__NSConstantString_tag'
|-TypedefDecl 0x128126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x128055d90 '__SVInt8_t'
|-TypedefDecl 0x128126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x128055db0 '__SVInt16_t'
|-TypedefDecl 0x128126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x128055dd0 '__SVInt32_t'
|-TypedefDecl 0x1281263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x128055df0 '__SVInt64_t'
|-TypedefDecl 0x128126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x128055e10 '__SVUint8_t'
|-TypedefDecl 0x1281264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x128055e30 '__SVUint16_t'
|-TypedefDecl 0x128126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x128055e50 '__SVUint32_t'
|-TypedefDecl 0x128126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x128055e70 '__SVUint64_t'
|-TypedefDecl 0x1281265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x128055e90 '__SVFloat16_t'
|-TypedefDecl 0x128126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x128055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1281266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x128055ed0 '__SVFloat64_t'
|-TypedefDecl 0x128126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x128055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x128126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x128055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1281267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x128055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x128126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x128055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1281268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x128055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x128126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x128055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x128126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x128055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1281269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x128055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x128126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x128055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x128126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x128056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x128126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x128056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x128126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x128056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x128126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x128056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x128126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x128056090 '__clang_svint8x3_t'
|-TypedefDecl 0x128126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1280560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x128126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1280560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x128126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1280560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x128126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x128056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x128126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x128056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x128126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x128056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x128126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x128056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x128126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x128056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x128127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1280561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x128127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1280561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1281278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1280561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x128127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x128056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1281279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x128056230 '__clang_svint16x4_t'
|-TypedefDecl 0x128127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x128056250 '__clang_svint32x4_t'
|-TypedefDecl 0x128127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x128056270 '__clang_svint64x4_t'
|-TypedefDecl 0x128127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x128056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x128127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1280562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x128127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1280562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x128127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1280562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x128127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x128056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x128127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x128056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x128127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x128056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x128127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x128056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x128127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x128056390 '__SVBool_t'
|-TypedefDecl 0x128127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1280563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x128127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1280563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x128127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1280563f0 '__SVCount_t'
|-TypedefDecl 0x128127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x128127fb0 'char *'
|   `-BuiltinType 0x1280556b0 'char'
|-TypedefDecl 0x128128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x128127fb0 'char *'
|   `-BuiltinType 0x1280556b0 'char'
`-FunctionDecl 0x1281281a8 <dataset_diviso_filec/func10769_nonvuln.c:1:1, line:18:1> line:1:1 number_format 'int (int)'
  |-ParmVarDecl 0x1281280d8 <col:15, col:19> col:19 used value 'int'
  `-CompoundStmt 0x10280aca0 <line:2:1, line:18:1>
    |-DeclStmt 0x1281283b0 <line:3:5, col:31>
    | `-VarDecl 0x1281282b8 <col:5, col:26> col:17 used result 'const char *' cinit
    |   `-ImplicitCastExpr 0x128128398 <col:26> 'const char *' <NoOp>
    |     `-ImplicitCastExpr 0x128128380 <col:26> 'char *' <ArrayToPointerDecay>
    |       `-StringLiteral 0x128128360 <col:26> 'char[4]' lvalue "STR"
    |-IfStmt 0x10280a7f8 <line:4:5, line:16:5>
    | |-RecoveryExpr 0x1281284c8 <line:4:9, col:47> '_Bool' contains-errors
    | `-CompoundStmt 0x10280a7c0 <col:50, line:16:5>
    |   |-DeclStmt 0x1281285e0 <line:5:2, col:42>
    |   | `-VarDecl 0x128128500 <col:2, col:37> col:16 used lv 'unsigned long' cinit
    |   |   `-CStyleCastExpr 0x1281285b8 <col:21, col:37> 'unsigned long' <IntegralCast>
    |   |     `-ImplicitCastExpr 0x1281285a0 <col:37> 'int' <LValueToRValue> part_of_explicit_cast
    |   |       `-DeclRefExpr 0x128128568 <col:37> 'int' lvalue ParmVar 0x1281280d8 'value' 'int'
    |   |-DeclStmt 0x128128678 <line:6:2, col:18>
    |   | `-VarDecl 0x128128610 <col:2, col:16> col:16 used mm 'unsigned long'
    |   |-DeclStmt 0x1281287b8 <line:7:2, col:38>
    |   | `-VarDecl 0x1281286a8 <col:2, col:37> col:6 used bits 'int' cinit
    |   |   `-ImplicitCastExpr 0x1281287a0 <col:13, col:37> 'int' <IntegralCast>
    |   |     `-BinaryOperator 0x128128780 <col:13, col:37> 'unsigned long' '*'
    |   |       |-UnaryExprOrTypeTraitExpr 0x128128728 <col:13, col:33> 'unsigned long' sizeof 'unsigned long'
    |   |       `-ImplicitCastExpr 0x128128768 <col:37> 'unsigned long' <IntegralCast>
    |   |         `-IntegerLiteral 0x128128748 <col:37> 'int' 8
    |   |-DeclStmt 0x10280a268 <line:8:2, col:8>
    |   | `-VarDecl 0x10280a200 <col:2, col:6> col:6 used nn 'int'
    |   `-ForStmt 0x10280a788 <line:9:2, line:15:2>
    |     |-BinaryOperator 0x10280a2c0 <line:9:7, col:12> 'int' '='
    |     | |-DeclRefExpr 0x10280a280 <col:7> 'int' lvalue Var 0x10280a200 'nn' 'int'
    |     | `-IntegerLiteral 0x10280a2a0 <col:12> 'int' 8
    |     |-<<<NULL>>>
    |     |-BinaryOperator 0x10280a350 <col:15, col:20> 'int' '<'
    |     | |-ImplicitCastExpr 0x10280a320 <col:15> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x10280a2e0 <col:15> 'int' lvalue Var 0x10280a200 'nn' 'int'
    |     | `-ImplicitCastExpr 0x10280a338 <col:20> 'int' <LValueToRValue>
    |     |   `-DeclRefExpr 0x10280a300 <col:20> 'int' lvalue Var 0x1281286a8 'bits' 'int'
    |     |-UnaryOperator 0x10280a390 <col:26, col:28> 'int' prefix '++'
    |     | `-DeclRefExpr 0x10280a370 <col:28> 'int' lvalue Var 0x10280a200 'nn' 'int'
    |     `-CompoundStmt 0x10280a768 <col:32, line:15:2>
    |       |-BinaryOperator 0x10280a440 <line:10:6, col:18> 'unsigned long' '='
    |       | |-DeclRefExpr 0x10280a3a8 <col:6> 'unsigned long' lvalue Var 0x128128610 'mm' 'unsigned long'
    |       | `-BinaryOperator 0x10280a420 <col:11, col:18> 'unsigned long' '<<'
    |       |   |-IntegerLiteral 0x10280a3c8 <col:11> 'unsigned long' 1
    |       |   `-ImplicitCastExpr 0x10280a408 <col:18> 'int' <LValueToRValue>
    |       |     `-DeclRefExpr 0x10280a3e8 <col:18> 'int' lvalue Var 0x10280a200 'nn' 'int'
    |       `-IfStmt 0x10280a748 <line:11:6, line:14:6>
    |         |-BinaryOperator 0x10280a670 <line:11:10, col:41> 'int' '&&'
    |         | |-BinaryOperator 0x10280a548 <col:10, col:23> 'int' '<='
    |         | | |-ParenExpr 0x10280a4f0 <col:10, col:18> 'unsigned long'
    |         | | | `-BinaryOperator 0x10280a4d0 <col:11, col:16> 'unsigned long' '-'
    |         | | |   |-ImplicitCastExpr 0x10280a4a0 <col:11> 'unsigned long' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x10280a460 <col:11> 'unsigned long' lvalue Var 0x128128610 'mm' 'unsigned long'
    |         | | |   `-ImplicitCastExpr 0x10280a4b8 <col:16> 'unsigned long' <IntegralCast>
    |         | | |     `-IntegerLiteral 0x10280a480 <col:16> 'int' 16
    |         | | `-ImplicitCastExpr 0x10280a530 <col:23> 'unsigned long' <LValueToRValue>
    |         | |   `-DeclRefExpr 0x10280a510 <col:23> 'unsigned long' lvalue Var 0x128128500 'lv' 'unsigned long'
    |         | `-BinaryOperator 0x10280a650 <col:29, col:41> 'int' '>'
    |         |   |-ParenExpr 0x10280a5f8 <col:29, col:37> 'unsigned long'
    |         |   | `-BinaryOperator 0x10280a5d8 <col:30, col:35> 'unsigned long' '+'
    |         |   |   |-ImplicitCastExpr 0x10280a5a8 <col:30> 'unsigned long' <LValueToRValue>
    |         |   |   | `-DeclRefExpr 0x10280a568 <col:30> 'unsigned long' lvalue Var 0x128128610 'mm' 'unsigned long'
    |         |   |   `-ImplicitCastExpr 0x10280a5c0 <col:35> 'unsigned long' <IntegralCast>
    |         |   |     `-IntegerLiteral 0x10280a588 <col:35> 'int' 16
    |         |   `-ImplicitCastExpr 0x10280a638 <col:41> 'unsigned long' <LValueToRValue>
    |         |     `-DeclRefExpr 0x10280a618 <col:41> 'unsigned long' lvalue Var 0x128128500 'lv' 'unsigned long'
    |         `-CompoundStmt 0x10280a728 <col:45, line:14:6>
    |           |-BinaryOperator 0x10280a700 <line:12:3, col:12> 'const char *' '='
    |           | |-DeclRefExpr 0x10280a690 <col:3> 'const char *' lvalue Var 0x1281282b8 'result' 'const char *'
    |           | `-ImplicitCastExpr 0x10280a6e8 <col:12> 'const char *' <NoOp>
    |           |   `-ImplicitCastExpr 0x10280a6d0 <col:12> 'char *' <ArrayToPointerDecay>
    |           |     `-StringLiteral 0x10280a6b0 <col:12> 'char[4]' lvalue "STR"
    |           `-BreakStmt 0x10280a720 <line:13:3>
    `-ReturnStmt 0x10280ac90 <line:17:5, col:12>
      `-ImplicitCastExpr 0x10280a850 <col:12> 'int' <PointerToIntegral>
        `-ImplicitCastExpr 0x10280a838 <col:12> 'const char *' <LValueToRValue>
          `-DeclRefExpr 0x10280a818 <col:12> 'const char *' lvalue Var 0x1281282b8 'result' 'const char *'
