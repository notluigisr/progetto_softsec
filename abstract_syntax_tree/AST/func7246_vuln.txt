TranslationUnitDecl 0x152055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1520564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x152055bd0 '__int128'
|-TypedefDecl 0x152056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x152055bf0 'unsigned __int128'
|-TypedefDecl 0x15280be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15280bc00 'struct __NSConstantString_tag'
|   `-Record 0x152056580 '__NSConstantString_tag'
|-TypedefDecl 0x15280be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x152055d90 '__SVInt8_t'
|-TypedefDecl 0x15280bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x152055db0 '__SVInt16_t'
|-TypedefDecl 0x15280bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x152055dd0 '__SVInt32_t'
|-TypedefDecl 0x15280bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x152055df0 '__SVInt64_t'
|-TypedefDecl 0x15280c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x152055e10 '__SVUint8_t'
|-TypedefDecl 0x15280c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x152055e30 '__SVUint16_t'
|-TypedefDecl 0x15280c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x152055e50 '__SVUint32_t'
|-TypedefDecl 0x15280c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x152055e70 '__SVUint64_t'
|-TypedefDecl 0x15280c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x152055e90 '__SVFloat16_t'
|-TypedefDecl 0x15280c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x152055eb0 '__SVFloat32_t'
|-TypedefDecl 0x15280c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x152055ed0 '__SVFloat64_t'
|-TypedefDecl 0x15280c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x152055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15280c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x152055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15280c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x152055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15280c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x152055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15280c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x152055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15280c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x152055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15280c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x152055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15280c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x152055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15280c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x152055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15280c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x152056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15280c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x152056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15280c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x152056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15280c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x152056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15280c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x152056090 '__clang_svint8x3_t'
|-TypedefDecl 0x15280c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1520560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15280c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1520560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15280c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1520560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15280c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x152056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15280ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x152056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15280cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x152056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15280cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x152056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15280cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x152056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15280d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1520561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15280d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1520561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15280d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1520561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15280d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x152056210 '__clang_svint8x4_t'
|-TypedefDecl 0x15280d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x152056230 '__clang_svint16x4_t'
|-TypedefDecl 0x15280d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x152056250 '__clang_svint32x4_t'
|-TypedefDecl 0x15280d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x152056270 '__clang_svint64x4_t'
|-TypedefDecl 0x15280d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x152056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15280d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1520562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15280d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1520562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15280d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1520562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15280d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x152056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15280d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x152056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15280d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x152056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15280d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x152056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15280da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x152056390 '__SVBool_t'
|-TypedefDecl 0x15280da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1520563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15280dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1520563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15280db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1520563f0 '__SVCount_t'
|-TypedefDecl 0x15280dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15280dbb0 'char *'
|   `-BuiltinType 0x1520556b0 'char'
|-TypedefDecl 0x15280dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15280dbb0 'char *'
|   `-BuiltinType 0x1520556b0 'char'
|-FunctionDecl 0x15280df20 <dataset_diviso_filec/func7246_vuln.c:1:1, line:21:1> line:1:6 list_proxy 'void (char *, void *, void *)'
| |-ParmVarDecl 0x15280dcd8 <col:17, col:23> col:23 used server 'char *'
| |-ParmVarDecl 0x15280dd58 <col:31, col:37> col:37 data 'void *'
| | `-UnusedAttr 0x15280ddc0 <col:57> unused
| |-ParmVarDecl 0x15280de30 <col:67, col:73> col:73 used rock 'void *'
| `-CompoundStmt 0x153809630 <line:2:1, line:21:1>
|   |-DeclStmt 0x15280e300 <line:3:5, col:56>
|   | |-RecordDecl 0x15280e028 <col:5, col:12> col:12 struct enum_rock
|   | `-VarDecl 0x15280e198 <col:5, col:52> col:23 used erock 'struct enum_rock *' cinit
|   |   `-CStyleCastExpr 0x15280e2c0 <col:31, col:52> 'struct enum_rock *' <BitCast>
|   |     `-ImplicitCastExpr 0x15280e2a8 <col:52> 'void *' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0x15280e200 <col:52> 'void *' lvalue ParmVar 0x15280de30 'rock' 'void *'
|   |-DeclStmt 0x152828708 <line:4:5, col:23>
|   | |-RecordDecl 0x15280e318 <col:5, col:12> col:12 struct backend
|   | `-VarDecl 0x152828688 <col:5, col:21> col:21 used be 'struct backend *'
|   |-DeclStmt 0x1528287a0 <line:5:5, col:10>
|   | `-VarDecl 0x152828738 <col:5, col:9> col:9 used r 'int'
|   |-DeclStmt 0x152828838 <line:6:5, col:17>
|   | `-VarDecl 0x1528287d0 <col:5, col:11> col:11 used result 'char *'
|   |-BinaryOperator 0x152828d88 <line:8:5, line:10:54> 'struct backend *' contains-errors '='
|   | |-DeclRefExpr 0x152828850 <line:8:5> 'struct backend *' lvalue Var 0x152828688 'be' 'struct backend *'
|   | `-CallExpr 0x152828d30 <col:10, line:10:54> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x1528289a0 <line:8:10> 'int ()' Function 0x1528288e8 'proxy_findserver' 'int ()'
|   |   |-DeclRefExpr 0x1528289c0 <col:27> 'char *' lvalue ParmVar 0x15280dcd8 'server' 'char *'
|   |   |-UnaryOperator 0x152828bf8 <col:35, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   | `-RecoveryExpr 0x152828bd8 <col:36> '<dependent type>' contains-errors lvalue
|   |   |-ConditionalOperator 0x152828c50 <line:9:6, col:34> '<dependent type>' contains-errors
|   |   | |-RecoveryExpr 0x152828c10 <col:6> '<dependent type>' contains-errors lvalue
|   |   | |-RecoveryExpr 0x152828c30 <col:20> '<dependent type>' contains-errors lvalue
|   |   | `-StringLiteral 0x152828a80 <col:34> 'char[4]' lvalue "STR"
|   |   |-UnaryOperator 0x152828ca0 <line:10:6, col:7> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   | `-RecoveryExpr 0x152828c80 <col:7> '<dependent type>' contains-errors lvalue
|   |   |-UnaryOperator 0x152828cd8 <col:23, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   | `-RecoveryExpr 0x152828cb8 <col:24> '<dependent type>' contains-errors lvalue
|   |   |-RecoveryExpr 0x152828cf0 <col:41> '<dependent type>' contains-errors lvalue
|   |   `-RecoveryExpr 0x152828d10 <col:47> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x152828e08 <line:11:5, col:14>
|   | |-UnaryOperator 0x152828de0 <col:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x152828dc8 <col:10> 'struct backend *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x152828da8 <col:10> 'struct backend *' lvalue Var 0x152828688 'be' 'struct backend *'
|   | `-ReturnStmt 0x152828df8 <col:14>
|   |-CallExpr 0x152829488 <line:13:5, col:56> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x152828f08 <col:5> 'int ()' Function 0x152828e50 'prot_printf' 'int ()'
|   | |-RecoveryExpr 0x152829380 <col:17, col:21> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x152828f28 <col:17> 'struct backend *' lvalue Var 0x152828688 'be' 'struct backend *'
|   | |-StringLiteral 0x1528293a8 <col:26> 'char[4]' lvalue "STR"
|   | |-RecoveryExpr 0x152829400 <col:33, col:40> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x1528293c8 <col:33> 'struct enum_rock *' lvalue Var 0x15280e198 'erock' 'struct enum_rock *'
|   | `-RecoveryExpr 0x152829460 <col:45, col:52> '<dependent type>' contains-errors lvalue
|   |   `-DeclRefExpr 0x152829428 <col:45> 'struct enum_rock *' lvalue Var 0x15280e198 'erock' 'struct enum_rock *'
|   |-BinaryOperator 0x153808d48 <line:15:5, col:37> 'int' '='
|   | |-DeclRefExpr 0x1528294c8 <col:5> 'int' lvalue Var 0x152828738 'r' 'int'
|   | `-CallExpr 0x153808cf8 <col:9, col:37> 'int'
|   |   |-ImplicitCastExpr 0x153808ce0 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1528295c8 <col:9> 'int ()' Function 0x152829510 'read_response' 'int ()'
|   |   |-ImplicitCastExpr 0x153808d30 <col:23> 'struct backend *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x153808c00 <col:23> 'struct backend *' lvalue Var 0x152828688 'be' 'struct backend *'
|   |   |-IntegerLiteral 0x153808c20 <col:27> 'int' 0
|   |   `-UnaryOperator 0x153808c90 <col:30, col:31> 'char **' prefix '&' cannot overflow
|   |     `-DeclRefExpr 0x153808c40 <col:31> 'char *' lvalue Var 0x1528287d0 'result' 'char *'
|   `-IfStmt 0x153809610 <line:16:5, line:20:5>
|     |-BinaryOperator 0x153809220 <line:16:9, col:40> 'int' '&&'
|     | |-UnaryOperator 0x153808da0 <col:9, col:10> 'int' prefix '!' cannot overflow
|     | | `-ImplicitCastExpr 0x153808d88 <col:10> 'int' <LValueToRValue>
|     | |   `-DeclRefExpr 0x153808d68 <col:10> 'int' lvalue Var 0x152828738 'r' 'int'
|     | `-UnaryOperator 0x153809208 <col:15, col:40> 'int' prefix '!' cannot overflow
|     |   `-CallExpr 0x153809158 <col:16, col:40> 'int'
|     |     |-ImplicitCastExpr 0x153809140 <col:16> 'int (*)(const char *, const char *, unsigned long)' <FunctionToPointerDecay>
|     |     | `-DeclRefExpr 0x153809058 <col:16> 'int (const char *, const char *, unsigned long)' Function 0x153808e08 'strncmp' 'int (const char *, const char *, unsigned long)'
|     |     |-ImplicitCastExpr 0x1538091a8 <col:24> 'const char *' <NoOp>
|     |     | `-ImplicitCastExpr 0x153809190 <col:24> 'char *' <LValueToRValue>
|     |     |   `-DeclRefExpr 0x153809078 <col:24> 'char *' lvalue Var 0x1528287d0 'result' 'char *'
|     |     |-ImplicitCastExpr 0x1538091d8 <col:32> 'const char *' <NoOp>
|     |     | `-ImplicitCastExpr 0x1538091c0 <col:32> 'char *' <ArrayToPointerDecay>
|     |     |   `-StringLiteral 0x153809098 <col:32> 'char[4]' lvalue "STR"
|     |     `-ImplicitCastExpr 0x1538091f0 <col:39> 'unsigned long' <IntegralCast>
|     |       `-IntegerLiteral 0x1538090b8 <col:39> 'int' 4
|     `-CompoundStmt 0x1538095f8 <col:43, line:20:5>
|       `-WhileStmt 0x1538095d8 <line:17:2, line:19:2>
|         |-BinaryOperator 0x153809498 <line:17:9, col:62> 'int' '&&'
|         | |-UnaryOperator 0x1538093a0 <col:9, col:44> 'int' prefix '!' cannot overflow
|         | | `-ParenExpr 0x153809380 <col:10, col:44> 'int'
|         | |   `-BinaryOperator 0x153809360 <col:11, col:43> 'int' '='
|         | |     |-DeclRefExpr 0x153809240 <col:11> 'int' lvalue Var 0x152828738 'r' 'int'
|         | |     `-CallExpr 0x153809310 <col:15, col:43> 'int'
|         | |       |-ImplicitCastExpr 0x1538092f8 <col:15> 'int (*)()' <FunctionToPointerDecay>
|         | |       | `-DeclRefExpr 0x153809260 <col:15> 'int ()' Function 0x152829510 'read_response' 'int ()'
|         | |       |-ImplicitCastExpr 0x153809348 <col:29> 'struct backend *' <LValueToRValue>
|         | |       | `-DeclRefExpr 0x153809280 <col:29> 'struct backend *' lvalue Var 0x152828688 'be' 'struct backend *'
|         | |       |-IntegerLiteral 0x1538092a0 <col:33> 'int' 0
|         | |       `-UnaryOperator 0x1538092e0 <col:36, col:37> 'char **' prefix '&' cannot overflow
|         | |         `-DeclRefExpr 0x1538092c0 <col:37> 'char *' lvalue Var 0x1528287d0 'result' 'char *'
|         | `-BinaryOperator 0x153809478 <col:49, col:62> 'int' '!='
|         |   |-ImplicitCastExpr 0x153809460 <col:49, col:57> 'int' <IntegralCast>
|         |   | `-ImplicitCastExpr 0x153809448 <col:49, col:57> 'char' <LValueToRValue>
|         |   |   `-ArraySubscriptExpr 0x153809410 <col:49, col:57> 'char' lvalue
|         |   |     |-ImplicitCastExpr 0x1538093f8 <col:49> 'char *' <LValueToRValue>
|         |   |     | `-DeclRefExpr 0x1538093b8 <col:49> 'char *' lvalue Var 0x1528287d0 'result' 'char *'
|         |   |     `-IntegerLiteral 0x1538093d8 <col:56> 'int' 0
|         |   `-CharacterLiteral 0x153809430 <col:62> 'int' 46
|         `-CompoundStmt 0x1538095c0 <col:67, line:19:2>
|           `-CallExpr 0x153809588 <line:18:6, col:41> '<dependent type>' contains-errors
|             |-DeclRefExpr 0x1538094b8 <col:6> 'int ()' Function 0x152828e50 'prot_printf' 'int ()'
|             |-RecoveryExpr 0x153809568 <col:18> '<dependent type>' contains-errors lvalue
|             |-StringLiteral 0x1538094f0 <col:28> 'char[4]' lvalue "STR"
|             `-DeclRefExpr 0x153809510 <col:35> 'char *' lvalue Var 0x1528287d0 'result' 'char *'
`-FunctionDecl 0x153808e08 <line:16:16> col:16 implicit used strncmp 'int (const char *, const char *, unsigned long)' extern
  |-ParmVarDecl 0x153808f08 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x153808f70 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x153808fd8 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x153808eb0 <<invalid sloc>> Implicit 888
