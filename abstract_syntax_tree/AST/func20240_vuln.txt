TranslationUnitDecl 0x13d055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13d0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13d055bd0 '__int128'
|-TypedefDecl 0x13d056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13d055bf0 'unsigned __int128'
|-TypedefDecl 0x13d126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13d126000 'struct __NSConstantString_tag'
|   `-Record 0x13d056580 '__NSConstantString_tag'
|-TypedefDecl 0x13d126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13d055d90 '__SVInt8_t'
|-TypedefDecl 0x13d126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13d055db0 '__SVInt16_t'
|-TypedefDecl 0x13d126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13d055dd0 '__SVInt32_t'
|-TypedefDecl 0x13d1263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13d055df0 '__SVInt64_t'
|-TypedefDecl 0x13d126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13d055e10 '__SVUint8_t'
|-TypedefDecl 0x13d1264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13d055e30 '__SVUint16_t'
|-TypedefDecl 0x13d126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13d055e50 '__SVUint32_t'
|-TypedefDecl 0x13d126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13d055e70 '__SVUint64_t'
|-TypedefDecl 0x13d1265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13d055e90 '__SVFloat16_t'
|-TypedefDecl 0x13d126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13d055eb0 '__SVFloat32_t'
|-TypedefDecl 0x13d1266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13d055ed0 '__SVFloat64_t'
|-TypedefDecl 0x13d126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13d055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13d126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13d055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13d1267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13d055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13d126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13d055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13d1268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13d055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13d126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13d055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13d126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13d055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13d1269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13d055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13d126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13d055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13d126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13d056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13d126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13d056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13d126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13d056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13d126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13d056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13d126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13d056090 '__clang_svint8x3_t'
|-TypedefDecl 0x13d126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13d0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13d126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13d0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13d126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13d0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13d126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13d056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13d126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13d056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13d126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13d056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13d126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13d056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13d126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13d056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13d127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13d0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13d127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13d0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13d1278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13d0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13d127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13d056210 '__clang_svint8x4_t'
|-TypedefDecl 0x13d1279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13d056230 '__clang_svint16x4_t'
|-TypedefDecl 0x13d127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13d056250 '__clang_svint32x4_t'
|-TypedefDecl 0x13d127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13d056270 '__clang_svint64x4_t'
|-TypedefDecl 0x13d127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13d056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13d127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13d0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13d127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13d0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13d127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13d0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13d127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13d056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13d127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13d056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13d127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13d056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13d127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13d056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13d127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13d056390 '__SVBool_t'
|-TypedefDecl 0x13d127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13d0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13d127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13d0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13d127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13d0563f0 '__SVCount_t'
|-TypedefDecl 0x13d127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13d127fb0 'char *'
|   `-BuiltinType 0x13d0556b0 'char'
|-TypedefDecl 0x13d128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13d127fb0 'char *'
|   `-BuiltinType 0x13d0556b0 'char'
|-FunctionDecl 0x13d128288 <dataset_diviso_filec/func20240_vuln.c:1:1, line:26:1> line:1:1 invalid set_ssl_ciphers 'int (int *, char *)'
| |-ParmVarDecl 0x13d128128 <col:17, col:32> col:32 referenced invalid schannel_cred 'int *'
| |-ParmVarDecl 0x13d1281a8 <col:47, col:53> col:53 used ciphers 'char *'
| `-CompoundStmt 0x13d142498 <line:2:1, line:26:1>
|   |-DeclStmt 0x13d1283f8 <line:3:3, col:27>
|   | `-VarDecl 0x13d128358 <col:3, col:20> col:9 used startCur 'char *' cinit
|   |   `-ImplicitCastExpr 0x13d1283e0 <col:20> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x13d1283c0 <col:20> 'char *' lvalue ParmVar 0x13d1281a8 'ciphers' 'char *'
|   |-DeclStmt 0x13d1284b0 <line:4:3, col:19>
|   | `-VarDecl 0x13d128428 <col:3, col:18> col:7 used algCount 'int' cinit
|   |   `-IntegerLiteral 0x13d128490 <col:18> 'int' 0
|   |-DeclStmt 0x13d1285e0 <line:5:3, col:27>
|   | `-VarDecl 0x13d128578 <col:3, col:26> col:17 referenced invalid algIds 'int[45]' static
|   |-WhileStmt 0x13d142290 <line:6:3, line:22:3>
|   | |-BinaryOperator 0x13d1287c8 <line:6:9, col:55> 'int' '&&'
|   | | |-BinaryOperator 0x13d128710 <col:9, col:36> 'int' '&&'
|   | | | |-ImplicitCastExpr 0x13d1286f8 <col:9> 'char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x13d1285f8 <col:9> 'char *' lvalue Var 0x13d128358 'startCur' 'char *'
|   | | | `-ParenExpr 0x13d1286d8 <col:21, col:36> 'int'
|   | | |   `-BinaryOperator 0x13d1286b8 <col:22, col:28> 'int' '!='
|   | | |     |-IntegerLiteral 0x13d128618 <col:22> 'int' 0
|   | | |     `-ImplicitCastExpr 0x13d1286a0 <col:27, col:28> 'int' <IntegralCast>
|   | | |       `-ImplicitCastExpr 0x13d128688 <col:27, col:28> 'char' <LValueToRValue>
|   | | |         `-UnaryOperator 0x13d128670 <col:27, col:28> 'char' lvalue prefix '*' cannot overflow
|   | | |           `-ImplicitCastExpr 0x13d128658 <col:28> 'char *' <LValueToRValue>
|   | | |             `-DeclRefExpr 0x13d128638 <col:28> 'char *' lvalue Var 0x13d128358 'startCur' 'char *'
|   | | `-ParenExpr 0x13d1287a8 <col:41, col:55> 'int'
|   | |   `-BinaryOperator 0x13d128788 <col:42, col:53> 'int' '<'
|   | |     |-ImplicitCastExpr 0x13d128770 <col:42> 'int' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x13d128730 <col:42> 'int' lvalue Var 0x13d128428 'algCount' 'int'
|   | |     `-IntegerLiteral 0x13d128750 <col:53> 'int' 45
|   | `-CompoundStmt 0x13d142258 <col:58, line:22:3>
|   |   |-DeclStmt 0x13d808ac8 <line:7:5, col:38>
|   |   | `-VarDecl 0x13d808200 <col:5, col:37> col:10 used alg 'long' cinit
|   |   |   `-CallExpr 0x13d808a48 <col:16, col:37> 'long'
|   |   |     |-ImplicitCastExpr 0x13d808a30 <col:16> 'long (*)(const char *, char **, int)' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x13d808960 <col:16> 'long (const char *, char **, int)' Function 0x13d808710 'strtol' 'long (const char *, char **, int)'
|   |   |     |-ImplicitCastExpr 0x13d808a98 <col:23> 'const char *' <NoOp>
|   |   |     | `-ImplicitCastExpr 0x13d808a80 <col:23> 'char *' <LValueToRValue>
|   |   |     |   `-DeclRefExpr 0x13d808980 <col:23> 'char *' lvalue Var 0x13d128358 'startCur' 'char *'
|   |   |     |-ImplicitCastExpr 0x13d808ab0 <col:33> 'char **' <NullToPointer>
|   |   |     | `-IntegerLiteral 0x13d8089a0 <col:33> 'int' 0
|   |   |     `-IntegerLiteral 0x13d8089c0 <col:36> 'int' 0
|   |   |-IfStmt 0x13d808db0 <line:8:5, line:9:40>
|   |   | |-UnaryOperator 0x13d808b18 <line:8:8, col:9> 'int' prefix '!' cannot overflow
|   |   | | `-ImplicitCastExpr 0x13d808b00 <col:9> 'long' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x13d808ae0 <col:9> 'long' lvalue Var 0x13d808200 'alg' 'long'
|   |   | `-BinaryOperator 0x13d808d90 <line:9:7, col:40> 'long' '='
|   |   |   |-DeclRefExpr 0x13d808b30 <col:7> 'long' lvalue Var 0x13d808200 'alg' 'long'
|   |   |   `-ImplicitCastExpr 0x13d808d78 <col:13, col:40> 'long' <IntegralCast>
|   |   |     `-CallExpr 0x13d808d38 <col:13, col:40> 'int'
|   |   |       |-ImplicitCastExpr 0x13d808d20 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |       | `-DeclRefExpr 0x13d808cb0 <col:13> 'int ()' Function 0x13d808bf8 'get_alg_id_by_name' 'int ()'
|   |   |       `-ImplicitCastExpr 0x13d808d60 <col:32> 'char *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x13d808cd0 <col:32> 'char *' lvalue Var 0x13d128358 'startCur' 'char *'
|   |   |-IfStmt 0x13d141e18 <line:10:5, line:18:14> has_else
|   |   | |-ImplicitCastExpr 0x13d808df0 <line:10:8> 'long' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x13d808dd0 <col:8> 'long' lvalue Var 0x13d808200 'alg' 'long'
|   |   | |-BinaryOperator 0x13d808ee0 <line:11:7, col:28> '<dependent type>' contains-errors '='
|   |   | | |-ArraySubscriptExpr 0x13d808ea0 <col:7, col:24> '<dependent type>' contains-errors lvalue
|   |   | | | |-ImplicitCastExpr 0x13d808e88 <col:7> '<dependent type>' contains-errors <LValueToRValue>
|   |   | | | | `-RecoveryExpr 0x13d808e28 <col:7> '<dependent type>' contains-errors lvalue
|   |   | | | |   `-DeclRefExpr 0x13d808e08 <col:7> 'int[45]' lvalue Var 0x13d128578 'algIds' 'int[45]'
|   |   | | | `-UnaryOperator 0x13d808e70 <col:14, col:22> 'int' postfix '++'
|   |   | | |   `-DeclRefExpr 0x13d808e50 <col:14> 'int' lvalue Var 0x13d128428 'algCount' 'int'
|   |   | | `-DeclRefExpr 0x13d808ec0 <col:28> 'long' lvalue Var 0x13d808200 'alg' 'long'
|   |   | `-IfStmt 0x13d141de8 <line:12:10, line:18:14> has_else
|   |   |   |-BinaryOperator 0x13d141c58 <line:12:13, line:15:39> 'int' '||'
|   |   |   | |-UnaryOperator 0x13d141a30 <line:12:13, line:13:39> 'int' prefix '!' cannot overflow
|   |   |   | | `-CallExpr 0x13d141998 <line:12:14, line:13:39> 'int'
|   |   |   | |   |-ImplicitCastExpr 0x13d141980 <line:12:14> 'int (*)(const char *, const char *, unsigned long)' <FunctionToPointerDecay>
|   |   |   | |   | `-DeclRefExpr 0x13d809198 <col:14> 'int (const char *, const char *, unsigned long)' Function 0x13d808f48 'strncmp' 'int (const char *, const char *, unsigned long)'
|   |   |   | |   |-ImplicitCastExpr 0x13d1419e8 <col:22> 'const char *' <NoOp>
|   |   |   | |   | `-ImplicitCastExpr 0x13d1419d0 <col:22> 'char *' <LValueToRValue>
|   |   |   | |   |   `-DeclRefExpr 0x13d8091b8 <col:22> 'char *' lvalue Var 0x13d128358 'startCur' 'char *'
|   |   |   | |   |-ImplicitCastExpr 0x13d141a18 <col:32> 'const char *' <NoOp>
|   |   |   | |   | `-ImplicitCastExpr 0x13d141a00 <col:32> 'char *' <ArrayToPointerDecay>
|   |   |   | |   |   `-StringLiteral 0x13d141840 <col:32> 'char[4]' lvalue "STR"
|   |   |   | |   `-BinaryOperator 0x13d1418f8 <line:13:22, col:38> 'unsigned long' '-'
|   |   |   | |     |-UnaryExprOrTypeTraitExpr 0x13d1418a0 <col:22, col:34> 'unsigned long' sizeof
|   |   |   | |     | `-ParenExpr 0x13d141880 <col:28, col:34> 'char[4]' lvalue
|   |   |   | |     |   `-StringLiteral 0x13d141860 <col:29> 'char[4]' lvalue "STR"
|   |   |   | |     `-ImplicitCastExpr 0x13d1418e0 <col:38> 'unsigned long' <IntegralCast>
|   |   |   | |       `-IntegerLiteral 0x13d1418c0 <col:38> 'int' 1
|   |   |   | `-UnaryOperator 0x13d141c40 <line:14:13, line:15:39> 'int' prefix '!' cannot overflow
|   |   |   |   `-CallExpr 0x13d141ba8 <line:14:14, line:15:39> 'int'
|   |   |   |     |-ImplicitCastExpr 0x13d141b90 <line:14:14> 'int (*)(const char *, const char *, unsigned long)' <FunctionToPointerDecay>
|   |   |   |     | `-DeclRefExpr 0x13d141a48 <col:14> 'int (const char *, const char *, unsigned long)' Function 0x13d808f48 'strncmp' 'int (const char *, const char *, unsigned long)'
|   |   |   |     |-ImplicitCastExpr 0x13d141bf8 <col:22> 'const char *' <NoOp>
|   |   |   |     | `-ImplicitCastExpr 0x13d141be0 <col:22> 'char *' <LValueToRValue>
|   |   |   |     |   `-DeclRefExpr 0x13d141a68 <col:22> 'char *' lvalue Var 0x13d128358 'startCur' 'char *'
|   |   |   |     |-ImplicitCastExpr 0x13d141c28 <col:32> 'const char *' <NoOp>
|   |   |   |     | `-ImplicitCastExpr 0x13d141c10 <col:32> 'char *' <ArrayToPointerDecay>
|   |   |   |     |   `-StringLiteral 0x13d141a88 <col:32> 'char[4]' lvalue "STR"
|   |   |   |     `-BinaryOperator 0x13d141b40 <line:15:22, col:38> 'unsigned long' '-'
|   |   |   |       |-UnaryExprOrTypeTraitExpr 0x13d141ae8 <col:22, col:34> 'unsigned long' sizeof
|   |   |   |       | `-ParenExpr 0x13d141ac8 <col:28, col:34> 'char[4]' lvalue
|   |   |   |       |   `-StringLiteral 0x13d141aa8 <col:29> 'char[4]' lvalue "STR"
|   |   |   |       `-ImplicitCastExpr 0x13d141b28 <col:38> 'unsigned long' <IntegralCast>
|   |   |   |         `-IntegerLiteral 0x13d141b08 <col:38> 'int' 1
|   |   |   |-CompoundAssignOperator 0x13d141d70 <line:16:7, col:33> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |   |   | |-CXXDependentScopeMemberExpr 0x13d141cc0 <col:7, col:22> '<dependent type>' contains-errors lvalue ->dwFlags
|   |   |   | | `-RecoveryExpr 0x13d141c98 <col:7> '<dependent type>' contains-errors lvalue
|   |   |   | |   `-DeclRefExpr 0x13d141c78 <col:7> 'int *' lvalue ParmVar 0x13d128128 'schannel_cred' 'int *'
|   |   |   | `-RecoveryExpr 0x13d141d50 <col:33> '<dependent type>' contains-errors lvalue
|   |   |   `-ReturnStmt 0x13d141dd8 <line:18:7, col:14>
|   |   |     `-RecoveryExpr 0x13d141db8 <col:14> '<dependent type>' contains-errors lvalue
|   |   |-BinaryOperator 0x13d1421a8 <line:19:5, col:36> 'char *' '='
|   |   | |-DeclRefExpr 0x13d141e48 <col:5> 'char *' lvalue Var 0x13d128358 'startCur' 'char *'
|   |   | `-CallExpr 0x13d142148 <col:16, col:36> 'char *'
|   |   |   |-ImplicitCastExpr 0x13d142130 <col:16> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x13d142090 <col:16> 'char *(const char *, int)' Function 0x13d141eb0 'strchr' 'char *(const char *, int)'
|   |   |   |-ImplicitCastExpr 0x13d142190 <col:23> 'const char *' <NoOp>
|   |   |   | `-ImplicitCastExpr 0x13d142178 <col:23> 'char *' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x13d1420b0 <col:23> 'char *' lvalue Var 0x13d128358 'startCur' 'char *'
|   |   |   `-CharacterLiteral 0x13d1420d0 <col:33> 'int' 58
|   |   `-IfStmt 0x13d142238 <line:20:5, line:21:15>
|   |     |-ImplicitCastExpr 0x13d1421e8 <line:20:8> 'char *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x13d1421c8 <col:8> 'char *' lvalue Var 0x13d128358 'startCur' 'char *'
|   |     `-UnaryOperator 0x13d142220 <line:21:7, col:15> 'char *' postfix '++'
|   |       `-DeclRefExpr 0x13d142200 <col:7> 'char *' lvalue Var 0x13d128358 'startCur' 'char *'
|   |-BinaryOperator 0x13d142360 <line:23:3, col:38> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x13d1422f8 <col:3, col:18> '<dependent type>' contains-errors lvalue ->palgSupportedAlgs
|   | | `-RecoveryExpr 0x13d1422d0 <col:3> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x13d1422b0 <col:3> 'int *' lvalue ParmVar 0x13d128128 'schannel_cred' 'int *'
|   | `-RecoveryExpr 0x13d142340 <col:38> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x13d142430 <line:24:3, col:35> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x13d1423c8 <col:3, col:18> '<dependent type>' contains-errors lvalue ->cSupportedAlgs
|   | | `-RecoveryExpr 0x13d1423a0 <col:3> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x13d142380 <col:3> 'int *' lvalue ParmVar 0x13d128128 'schannel_cred' 'int *'
|   | `-DeclRefExpr 0x13d142410 <col:35> 'int' lvalue Var 0x13d128428 'algCount' 'int'
|   `-ReturnStmt 0x13d142488 <line:25:3, col:10>
|     `-RecoveryExpr 0x13d142468 <col:10> '<dependent type>' contains-errors lvalue
|-FunctionDecl 0x13d808710 <line:7:16> col:16 implicit used strtol 'long (const char *, char **, int)' extern
| |-ParmVarDecl 0x13d808810 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x13d808878 <<invalid sloc>> <invalid sloc> 'char **'
| |-ParmVarDecl 0x13d8088e0 <<invalid sloc>> <invalid sloc> 'int'
| `-BuiltinAttr 0x13d8087b8 <<invalid sloc>> Implicit 877
|-FunctionDecl 0x13d808f48 <line:12:14> col:14 implicit used strncmp 'int (const char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0x13d809048 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x13d8090b0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x13d809118 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x13d808ff0 <<invalid sloc>> Implicit 888
`-FunctionDecl 0x13d141eb0 <line:19:16> col:16 implicit used strchr 'char *(const char *, int)' extern
  |-ParmVarDecl 0x13d141fb0 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x13d142018 <<invalid sloc>> <invalid sloc> 'int'
  `-BuiltinAttr 0x13d141f58 <<invalid sloc>> Implicit 893
