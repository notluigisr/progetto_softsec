TranslationUnitDecl 0x137055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1370564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x137055bd0 '__int128'
|-TypedefDecl 0x137056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x137055bf0 'unsigned __int128'
|-TypedefDecl 0x137126a30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x137126800 'struct __NSConstantString_tag'
|   `-Record 0x137056580 '__NSConstantString_tag'
|-TypedefDecl 0x137126a98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x137055d90 '__SVInt8_t'
|-TypedefDecl 0x137126b00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x137055db0 '__SVInt16_t'
|-TypedefDecl 0x137126b68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x137055dd0 '__SVInt32_t'
|-TypedefDecl 0x137126bd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x137055df0 '__SVInt64_t'
|-TypedefDecl 0x137126c38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x137055e10 '__SVUint8_t'
|-TypedefDecl 0x137126ca0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x137055e30 '__SVUint16_t'
|-TypedefDecl 0x137126d08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x137055e50 '__SVUint32_t'
|-TypedefDecl 0x137126d70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x137055e70 '__SVUint64_t'
|-TypedefDecl 0x137126dd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x137055e90 '__SVFloat16_t'
|-TypedefDecl 0x137126e40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x137055eb0 '__SVFloat32_t'
|-TypedefDecl 0x137126ea8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x137055ed0 '__SVFloat64_t'
|-TypedefDecl 0x137126f10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x137055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x137126f78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x137055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x137126fe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x137055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x137127048 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x137055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1371270b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x137055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x137127118 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x137055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x137127180 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x137055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1371271e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x137055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x137127250 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x137055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1371272b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x137056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x137127320 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x137056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x137127388 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x137056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1371273f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x137056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x137127458 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x137056090 '__clang_svint8x3_t'
|-TypedefDecl 0x1371274c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1370560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x137127528 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1370560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x137127590 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1370560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x1371275f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x137056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x137127660 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x137056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x1371276c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x137056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x137127730 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x137056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x137127798 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x137056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x137128000 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1370561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x137128068 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1370561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1371280d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1370561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x137128138 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x137056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1371281a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x137056230 '__clang_svint16x4_t'
|-TypedefDecl 0x137128208 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x137056250 '__clang_svint32x4_t'
|-TypedefDecl 0x137128270 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x137056270 '__clang_svint64x4_t'
|-TypedefDecl 0x1371282d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x137056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x137128340 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1370562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1371283a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1370562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x137128410 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1370562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x137128478 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x137056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1371284e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x137056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x137128548 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x137056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1371285b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x137056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x137128618 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x137056390 '__SVBool_t'
|-TypedefDecl 0x137128680 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1370563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1371286e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1370563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x137128750 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1370563f0 '__SVCount_t'
|-TypedefDecl 0x1371287f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1371287b0 'char *'
|   `-BuiltinType 0x1370556b0 'char'
|-TypedefDecl 0x137128868 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1371287b0 'char *'
|   `-BuiltinType 0x1370556b0 'char'
|-FunctionDecl 0x1371289f0 <dataset_diviso_filec/func6464_nonvuln.c:1:1, line:66:1> line:1:6 invalid _FVMenuOpen 'void (int *)'
| |-ParmVarDecl 0x137128928 <col:18, col:28> col:28 invalid fv 'int *'
| `-CompoundStmt 0x137146130 <col:32, line:66:1>
|   |-DeclStmt 0x137128b20 <line:2:5, col:15>
|   | `-VarDecl 0x137128ab8 <col:5, col:11> col:11 used temp 'char *'
|   |-DeclStmt 0x137128d60 <line:3:5, col:34>
|   | |-VarDecl 0x137128b50 <col:5, col:11> col:11 used eod 'char *'
|   | |-VarDecl 0x137128bd0 <col:5, col:17> col:17 used fpt 'char *'
|   | |-VarDecl 0x137128c50 <col:5, col:23> col:23 used file 'char *'
|   | `-VarDecl 0x137128cd0 <col:5, col:30> col:30 used full 'char *'
|   |-DeclStmt 0x137128ec8 <line:4:21, col:38>
|   | |-VarDecl 0x137128dc8 <col:21, col:25> col:25 used fvcnt 'int'
|   | `-VarDecl 0x137128e48 <col:21, col:32> col:32 used fvtest 'int'
|   |-DeclStmt 0x137142178 <line:6:5, col:61>
|   | |-VarDecl 0x137128ef8 <col:5, col:21> col:11 used OpenDir 'char *' cinit
|   | | `-RecoveryExpr 0x137128f78 <col:21> '<dependent type>' contains-errors lvalue
|   | |-VarDecl 0x137142000 <col:5, col:41> col:28 used DefaultDir 'char *' cinit
|   | | `-RecoveryExpr 0x137142080 <col:41> '<dependent type>' contains-errors lvalue
|   | `-VarDecl 0x1371420b8 <col:5, col:57> col:48 used NewDir 'char *' cinit
|   |   `-RecoveryExpr 0x137142138 <col:57> '<dependent type>' contains-errors lvalue
|   |-ForStmt 0x137142550 <line:15:5, col:89>
|   | |-BinaryOperator 0x1371422f0 <col:11, col:25> 'char *' ','
|   | | |-BinaryOperator 0x1371421d0 <col:11, col:17> 'int' '='
|   | | | |-DeclRefExpr 0x137142190 <col:11> 'int' lvalue Var 0x137128dc8 'fvcnt' 'int'
|   | | | `-IntegerLiteral 0x1371421b0 <col:17> 'int' 0
|   | | `-BinaryOperator 0x1371422d0 <col:20, col:25> 'char *' '='
|   | |   |-DeclRefExpr 0x137142260 <col:20> 'char *' lvalue Var 0x137128ab8 'temp' 'char *'
|   | |   `-ImplicitCastExpr 0x1371422b8 <col:25> 'char *' <IntegralToPointer>
|   | |     `-ImplicitCastExpr 0x1371422a0 <col:25> 'int' <LValueToRValue>
|   | |       `-DeclRefExpr 0x137142280 <col:25> 'int' lvalue Var 0x137128e48 'fvtest' 'int'
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1371423c0 <col:34, col:40> 'int' contains-errors '!='
|   | | |-RecoveryExpr 0x137142380 <col:34> '<dependent type>' contains-errors lvalue
|   | | `-RecoveryExpr 0x1371423a0 <col:40> '<dependent type>' contains-errors lvalue
|   | |-<<<NULL>>>
|   | `-NullStmt 0x137142548 <col:89>
|   |-DoStmt 0x137145df0 <line:16:5, line:59:29>
|   | |-CompoundStmt 0x137145d10 <line:16:8, line:59:5>
|   | | |-IfStmt 0x137143510 <line:17:9, line:27:9> has_else
|   | | | |-BinaryOperator 0x137142600 <line:17:13, col:23> 'int' contains-errors '!='
|   | | | | |-DeclRefExpr 0x137142588 <col:13> 'char *' contains-errors lvalue Var 0x1371420b8 'NewDir' 'char *'
|   | | | | `-RecoveryExpr 0x1371425e0 <col:23> '<dependent type>' contains-errors lvalue
|   | | | |-CompoundStmt 0x137142ec8 <col:29, line:24:9>
|   | | | | |-IfStmt 0x137142d98 <line:18:13, line:20:13>
|   | | | | | |-BinaryOperator 0x137142690 <line:18:17, col:28> 'int' contains-errors '!='
|   | | | | | | |-ImplicitCastExpr 0x137142660 <col:17> 'char *' contains-errors <LValueToRValue>
|   | | | | | | | `-DeclRefExpr 0x137142620 <col:17> 'char *' contains-errors lvalue Var 0x137128ef8 'OpenDir' 'char *'
|   | | | | | | `-ImplicitCastExpr 0x137142678 <col:28> 'char *' contains-errors <LValueToRValue>
|   | | | | | |   `-DeclRefExpr 0x137142640 <col:28> 'char *' contains-errors lvalue Var 0x137142000 'DefaultDir' 'char *'
|   | | | | | `-CompoundStmt 0x137142d80 <col:40, line:20:13>
|   | | | | |   `-CallExpr 0x137142d28 <line:19:17, col:29> 'void' contains-errors
|   | | | | |     |-ImplicitCastExpr 0x137142d10 <col:17> 'void (*)(void *)' <FunctionToPointerDecay>
|   | | | | |     | `-DeclRefExpr 0x137142c80 <col:17> 'void (void *)' Function 0x137142b10 'free' 'void (void *)'
|   | | | | |     `-ImplicitCastExpr 0x137142d68 <col:22> 'void *' contains-errors <BitCast>
|   | | | | |       `-ImplicitCastExpr 0x137142d50 <col:22> 'char *' contains-errors <LValueToRValue>
|   | | | | |         `-DeclRefExpr 0x137142ca0 <col:22> 'char *' contains-errors lvalue Var 0x137128ef8 'OpenDir' 'char *'
|   | | | | |-BinaryOperator 0x137142e10 <line:22:13, col:23> 'char *' contains-errors '='
|   | | | | | |-DeclRefExpr 0x137142db8 <col:13> 'char *' contains-errors lvalue Var 0x137128ef8 'OpenDir' 'char *'
|   | | | | | `-ImplicitCastExpr 0x137142df8 <col:23> 'char *' contains-errors <LValueToRValue>
|   | | | | |   `-DeclRefExpr 0x137142dd8 <col:23> 'char *' contains-errors lvalue Var 0x1371420b8 'NewDir' 'char *'
|   | | | | `-BinaryOperator 0x137142ea8 <line:23:13, col:22> 'char *' contains-errors '='
|   | | | |   |-DeclRefExpr 0x137142e30 <col:13> 'char *' contains-errors lvalue Var 0x1371420b8 'NewDir' 'char *'
|   | | | |   `-RecoveryExpr 0x137142e88 <col:22> '<dependent type>' contains-errors lvalue
|   | | | `-IfStmt 0x1371434f0 <line:24:16, line:27:9>
|   | | |   |-BinaryOperator 0x137142f60 <line:24:20, col:31> 'int' contains-errors '!='
|   | | |   | |-ImplicitCastExpr 0x137142f30 <col:20> 'char *' contains-errors <LValueToRValue>
|   | | |   | | `-DeclRefExpr 0x137142ef0 <col:20> 'char *' contains-errors lvalue Var 0x137128ef8 'OpenDir' 'char *'
|   | | |   | `-ImplicitCastExpr 0x137142f48 <col:31> 'char *' contains-errors <LValueToRValue>
|   | | |   |   `-DeclRefExpr 0x137142f10 <col:31> 'char *' contains-errors lvalue Var 0x137142000 'DefaultDir' 'char *'
|   | | |   `-CompoundStmt 0x1371434d0 <col:43, line:27:9>
|   | | |     |-CallExpr 0x137143400 <line:25:13, col:25> 'void' contains-errors
|   | | |     | |-ImplicitCastExpr 0x137142fd8 <col:13> 'void (*)(void *)' <FunctionToPointerDecay>
|   | | |     | | `-DeclRefExpr 0x137142f80 <col:13> 'void (void *)' Function 0x137142b10 'free' 'void (void *)'
|   | | |     | `-ImplicitCastExpr 0x137143440 <col:18> 'void *' contains-errors <BitCast>
|   | | |     |   `-ImplicitCastExpr 0x137143428 <col:18> 'char *' contains-errors <LValueToRValue>
|   | | |     |     `-DeclRefExpr 0x137142fa0 <col:18> 'char *' contains-errors lvalue Var 0x137128ef8 'OpenDir' 'char *'
|   | | |     `-BinaryOperator 0x1371434b0 <line:26:13, col:23> 'char *' contains-errors '='
|   | | |       |-DeclRefExpr 0x137143458 <col:13> 'char *' contains-errors lvalue Var 0x137128ef8 'OpenDir' 'char *'
|   | | |       `-ImplicitCastExpr 0x137143498 <col:23> 'char *' contains-errors <LValueToRValue>
|   | | |         `-DeclRefExpr 0x137143478 <col:23> 'char *' contains-errors lvalue Var 0x137142000 'DefaultDir' 'char *'
|   | | |-BinaryOperator 0x137143850 <line:29:9, col:50> 'char *' contains-errors '='
|   | | | |-DeclRefExpr 0x137143540 <col:9> 'char *' lvalue Var 0x137128ab8 'temp' 'char *'
|   | | | `-ImplicitCastExpr 0x137143838 <col:16, col:50> 'char *' contains-errors <IntegralToPointer>
|   | | |   `-CallExpr 0x1371437d8 <col:16, col:50> 'int' contains-errors
|   | | |     |-ImplicitCastExpr 0x1371437c0 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   | | |     | `-DeclRefExpr 0x1371436c0 <col:16> 'int ()' Function 0x137143608 'GetPostScriptFontName' 'int ()'
|   | | |     |-ImplicitCastExpr 0x137143808 <col:38> 'char *' contains-errors <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x1371436e0 <col:38> 'char *' contains-errors lvalue Var 0x137128ef8 'OpenDir' 'char *'
|   | | |     `-ImplicitCastExpr 0x137143820 <col:46> 'void (*)(void *)' <FunctionToPointerDecay>
|   | | |       `-DeclRefExpr 0x137143768 <col:46> 'void (void *)' Function 0x137142b10 'free' 'void (void *)'
|   | | |-IfStmt 0x137143918 <line:30:9, line:31:13>
|   | | | |-BinaryOperator 0x1371438e8 <line:30:14, col:20> 'int' contains-errors '=='
|   | | | | |-DeclRefExpr 0x137143870 <col:14> 'char *' lvalue Var 0x137128ab8 'temp' 'char *'
|   | | | | `-RecoveryExpr 0x1371438c8 <col:20> '<dependent type>' contains-errors lvalue
|   | | | `-ReturnStmt 0x137143908 <line:31:13>
|   | | |-BinaryOperator 0x137143ae8 <line:34:9, col:35> 'char *' contains-errors '='
|   | | | |-DeclRefExpr 0x137143938 <col:9> 'char *' contains-errors lvalue Var 0x1371420b8 'NewDir' 'char *'
|   | | | `-ImplicitCastExpr 0x137143ad0 <col:18, col:35> 'char *' <IntegralToPointer>
|   | | |   `-CallExpr 0x137143a90 <col:18, col:35> 'int'
|   | | |     |-ImplicitCastExpr 0x137143a78 <col:18> 'int (*)()' <FunctionToPointerDecay>
|   | | |     | `-DeclRefExpr 0x137143a38 <col:18> 'int ()' Function 0x137143980 'GFileDirName' 'int ()'
|   | | |     `-ImplicitCastExpr 0x137143ab8 <col:31> 'char *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x137143a58 <col:31> 'char *' lvalue Var 0x137128ab8 'temp' 'char *'
|   | | |-IfStmt 0x137143d98 <line:35:9, line:38:9>
|   | | | |-UnaryOperator 0x137143c80 <line:35:13, col:32> 'int' contains-errors prefix '!' cannot overflow
|   | | | | `-CallExpr 0x137143c40 <col:14, col:32> 'int' contains-errors
|   | | | |   |-ImplicitCastExpr 0x137143c28 <col:14> 'int (*)()' <FunctionToPointerDecay>
|   | | | |   | `-DeclRefExpr 0x137143be8 <col:14> 'int ()' Function 0x137143b30 'GFileExists' 'int ()'
|   | | | |   `-ImplicitCastExpr 0x137143c68 <col:26> 'char *' contains-errors <LValueToRValue>
|   | | | |     `-DeclRefExpr 0x137143c08 <col:26> 'char *' contains-errors lvalue Var 0x1371420b8 'NewDir' 'char *'
|   | | | `-CompoundStmt 0x137143d80 <col:35, line:38:9>
|   | | |   `-CallExpr 0x137143d08 <line:36:13, col:24> 'void' contains-errors
|   | | |     |-ImplicitCastExpr 0x137143cf0 <col:13> 'void (*)(void *)' <FunctionToPointerDecay>
|   | | |     | `-DeclRefExpr 0x137143c98 <col:13> 'void (void *)' Function 0x137142b10 'free' 'void (void *)'
|   | | |     `-ImplicitCastExpr 0x137143d48 <col:18> 'void *' contains-errors <BitCast>
|   | | |       `-ImplicitCastExpr 0x137143d30 <col:18> 'char *' contains-errors <LValueToRValue>
|   | | |         `-DeclRefExpr 0x137143cb8 <col:18> 'char *' contains-errors lvalue Var 0x1371420b8 'NewDir' 'char *'
|   | | |-BinaryOperator 0x137144118 <line:40:9, col:31> 'char *' '='
|   | | | |-DeclRefExpr 0x137143db8 <col:9> 'char *' lvalue Var 0x137128b50 'eod' 'char *'
|   | | | `-CallExpr 0x1371440b8 <col:15, col:31> 'char *'
|   | | |   |-ImplicitCastExpr 0x1371440a0 <col:15> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   | | |   | `-DeclRefExpr 0x137144000 <col:15> 'char *(const char *, int)' Function 0x137143e20 'strrchr' 'char *(const char *, int)'
|   | | |   |-ImplicitCastExpr 0x137144100 <col:23> 'const char *' <NoOp>
|   | | |   | `-ImplicitCastExpr 0x1371440e8 <col:23> 'char *' <LValueToRValue>
|   | | |   |   `-DeclRefExpr 0x137144020 <col:23> 'char *' lvalue Var 0x137128ab8 'temp' 'char *'
|   | | |   `-CharacterLiteral 0x137144040 <col:28> 'int' 47
|   | | |-IfStmt 0x137145b88 <line:41:9, line:56:9>
|   | | | |-RecoveryExpr 0x137144158 <line:41:13, col:20> '_Bool' contains-errors
|   | | | `-CompoundStmt 0x137145b60 <col:26, line:56:9>
|   | | |   |-BinaryOperator 0x1371441f8 <line:42:13, col:20> 'char' '='
|   | | |   | |-UnaryOperator 0x1371441b0 <col:13, col:14> 'char' lvalue prefix '*' cannot overflow
|   | | |   | | `-ImplicitCastExpr 0x137144198 <col:14> 'char *' <LValueToRValue>
|   | | |   | |   `-DeclRefExpr 0x137144178 <col:14> 'char *' lvalue Var 0x137128b50 'eod' 'char *'
|   | | |   | `-ImplicitCastExpr 0x1371441e0 <col:20> 'char' <IntegralCast>
|   | | |   |   `-CharacterLiteral 0x1371441c8 <col:20> 'int' 0
|   | | |   |-BinaryOperator 0x1371442b0 <line:43:13, col:24> 'char *' '='
|   | | |   | |-DeclRefExpr 0x137144218 <col:13> 'char *' lvalue Var 0x137128c50 'file' 'char *'
|   | | |   | `-BinaryOperator 0x137144290 <col:20, col:24> 'char *' '+'
|   | | |   |   |-ImplicitCastExpr 0x137144278 <col:20> 'char *' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x137144238 <col:20> 'char *' lvalue Var 0x137128b50 'eod' 'char *'
|   | | |   |   `-IntegerLiteral 0x137144258 <col:24> 'int' 1
|   | | |   `-IfStmt 0x137145b40 <line:45:13, line:55:13>
|   | | |     |-ImplicitCastExpr 0x137144320 <line:45:17, col:18> 'char' <LValueToRValue>
|   | | |     | `-UnaryOperator 0x137144308 <col:17, col:18> 'char' lvalue prefix '*' cannot overflow
|   | | |     |   `-ImplicitCastExpr 0x1371442f0 <col:18> 'char *' <LValueToRValue>
|   | | |     |     `-DeclRefExpr 0x1371442d0 <col:18> 'char *' lvalue Var 0x137128c50 'file' 'char *'
|   | | |     `-CompoundStmt 0x137145b28 <col:24, line:55:13>
|   | | |       `-DoStmt 0x137145b08 <line:46:17, line:54:37>
|   | | |         |-CompoundStmt 0x137145a70 <line:46:20, line:54:17>
|   | | |         | |-BinaryOperator 0x137144788 <line:47:21, col:44> 'char *' '='
|   | | |         | | |-DeclRefExpr 0x137144338 <col:21> 'char *' lvalue Var 0x137128bd0 'fpt' 'char *'
|   | | |         | | `-CallExpr 0x1371446f8 <col:27, col:44> 'char *'
|   | | |         | |   |-ImplicitCastExpr 0x1371446e0 <col:27> 'char *(*)(const char *, const char *)' <FunctionToPointerDecay>
|   | | |         | |   | `-DeclRefExpr 0x1371445e0 <col:27> 'char *(const char *, const char *)' Function 0x137144400 'strstr' 'char *(const char *, const char *)'
|   | | |         | |   |-ImplicitCastExpr 0x137144740 <col:34> 'const char *' <NoOp>
|   | | |         | |   | `-ImplicitCastExpr 0x137144728 <col:34> 'char *' <LValueToRValue>
|   | | |         | |   |   `-DeclRefExpr 0x137144600 <col:34> 'char *' lvalue Var 0x137128c50 'file' 'char *'
|   | | |         | |   `-ImplicitCastExpr 0x137144770 <col:39> 'const char *' <NoOp>
|   | | |         | |     `-ImplicitCastExpr 0x137144758 <col:39> 'char *' <ArrayToPointerDecay>
|   | | |         | |       `-StringLiteral 0x137144660 <col:39> 'char[4]' lvalue "STR"
|   | | |         | |-IfStmt 0x137144888 <line:48:21, col:45>
|   | | |         | | |-RecoveryExpr 0x1371447c8 <col:26, col:31> '_Bool' contains-errors
|   | | |         | | `-BinaryOperator 0x137144868 <col:38, col:45> 'char' '='
|   | | |         | |   |-UnaryOperator 0x137144820 <col:38, col:39> 'char' lvalue prefix '*' cannot overflow
|   | | |         | |   | `-ImplicitCastExpr 0x137144808 <col:39> 'char *' <LValueToRValue>
|   | | |         | |   |   `-DeclRefExpr 0x1371447e8 <col:39> 'char *' lvalue Var 0x137128bd0 'fpt' 'char *'
|   | | |         | |   `-ImplicitCastExpr 0x137144850 <col:45> 'char' <IntegralCast>
|   | | |         | |     `-CharacterLiteral 0x137144838 <col:45> 'int' 0
|   | | |         | |-BinaryOperator 0x137144f98 <line:49:21, col:64> 'char *' '='
|   | | |         | | |-DeclRefExpr 0x1371448a8 <col:21> 'char *' lvalue Var 0x137128cd0 'full' 'char *'
|   | | |         | | `-ImplicitCastExpr 0x137144f80 <col:28, col:64> 'char *' <BitCast>
|   | | |         | |   `-CallExpr 0x137144f58 <col:28, col:64> 'void *'
|   | | |         | |     |-ImplicitCastExpr 0x137144f40 <col:28> 'void *(*)(unsigned long)' <FunctionToPointerDecay>
|   | | |         | |     | `-DeclRefExpr 0x137144aa8 <col:28> 'void *(unsigned long)' Function 0x137144908 'malloc' 'void *(unsigned long)'
|   | | |         | |     `-BinaryOperator 0x137144ee8 <col:35, col:63> 'unsigned long' '+'
|   | | |         | |       |-BinaryOperator 0x137144e90 <col:35, col:61> 'unsigned long' '+'
|   | | |         | |       | |-BinaryOperator 0x137144da8 <col:35, col:48> 'unsigned long' '+'
|   | | |         | |       | | |-CallExpr 0x137144d18 <col:35, col:46> 'unsigned long'
|   | | |         | |       | | | |-ImplicitCastExpr 0x137144d00 <col:35> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   | | |         | |       | | | | `-DeclRefExpr 0x137144c78 <col:35> 'unsigned long (const char *)' Function 0x137144b08 'strlen' 'unsigned long (const char *)'
|   | | |         | |       | | | `-ImplicitCastExpr 0x137144d58 <col:42> 'const char *' <NoOp>
|   | | |         | |       | | |   `-ImplicitCastExpr 0x137144d40 <col:42> 'char *' <LValueToRValue>
|   | | |         | |       | | |     `-DeclRefExpr 0x137144c98 <col:42> 'char *' lvalue Var 0x137128ab8 'temp' 'char *'
|   | | |         | |       | | `-ImplicitCastExpr 0x137144d90 <col:48> 'unsigned long' <IntegralCast>
|   | | |         | |       | |   `-IntegerLiteral 0x137144d70 <col:48> 'int' 1
|   | | |         | |       | `-CallExpr 0x137144e38 <col:50, col:61> 'unsigned long'
|   | | |         | |       |   |-ImplicitCastExpr 0x137144e20 <col:50> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   | | |         | |       |   | `-DeclRefExpr 0x137144dc8 <col:50> 'unsigned long (const char *)' Function 0x137144b08 'strlen' 'unsigned long (const char *)'
|   | | |         | |       |   `-ImplicitCastExpr 0x137144e78 <col:57> 'const char *' <NoOp>
|   | | |         | |       |     `-ImplicitCastExpr 0x137144e60 <col:57> 'char *' <LValueToRValue>
|   | | |         | |       |       `-DeclRefExpr 0x137144de8 <col:57> 'char *' lvalue Var 0x137128c50 'file' 'char *'
|   | | |         | |       `-ImplicitCastExpr 0x137144ed0 <col:63> 'unsigned long' <IntegralCast>
|   | | |         | |         `-IntegerLiteral 0x137144eb0 <col:63> 'int' 1
|   | | |         | |-CallExpr 0x1371452b8 <line:50:21, col:37> 'char *'
|   | | |         | | |-ImplicitCastExpr 0x1371452a0 <col:21> 'char *(*)(char *, const char *)' <FunctionToPointerDecay>
|   | | |         | | | `-DeclRefExpr 0x1371451e0 <col:21> 'char *(char *, const char *)' Function 0x137145000 'strcpy' 'char *(char *, const char *)'
|   | | |         | | |-ImplicitCastExpr 0x1371452e8 <col:28> 'char *' <LValueToRValue>
|   | | |         | | | `-DeclRefExpr 0x137145200 <col:28> 'char *' lvalue Var 0x137128cd0 'full' 'char *'
|   | | |         | | `-ImplicitCastExpr 0x137145318 <col:33> 'const char *' <NoOp>
|   | | |         | |   `-ImplicitCastExpr 0x137145300 <col:33> 'char *' <LValueToRValue>
|   | | |         | |     `-DeclRefExpr 0x137145220 <col:33> 'char *' lvalue Var 0x137128ab8 'temp' 'char *'
|   | | |         | |-CallExpr 0x1371455b8 <col:40, col:57> 'char *'
|   | | |         | | |-ImplicitCastExpr 0x1371455a0 <col:40> 'char *(*)(char *, const char *)' <FunctionToPointerDecay>
|   | | |         | | | `-DeclRefExpr 0x137145510 <col:40> 'char *(char *, const char *)' Function 0x137145330 'strcat' 'char *(char *, const char *)'
|   | | |         | | |-ImplicitCastExpr 0x1371455e8 <col:47> 'char *' <LValueToRValue>
|   | | |         | | | `-DeclRefExpr 0x137145530 <col:47> 'char *' lvalue Var 0x137128cd0 'full' 'char *'
|   | | |         | | `-ImplicitCastExpr 0x137145618 <col:52> 'const char *' <NoOp>
|   | | |         | |   `-ImplicitCastExpr 0x137145600 <col:52> 'char *' <ArrayToPointerDecay>
|   | | |         | |     `-StringLiteral 0x137145550 <col:52> 'char[4]' lvalue "STR"
|   | | |         | |-CallExpr 0x1371456d8 <col:60, col:76> 'char *'
|   | | |         | | |-ImplicitCastExpr 0x1371456c0 <col:60> 'char *(*)(char *, const char *)' <FunctionToPointerDecay>
|   | | |         | | | `-DeclRefExpr 0x137145630 <col:60> 'char *(char *, const char *)' Function 0x137145330 'strcat' 'char *(char *, const char *)'
|   | | |         | | |-ImplicitCastExpr 0x137145708 <col:67> 'char *' <LValueToRValue>
|   | | |         | | | `-DeclRefExpr 0x137145650 <col:67> 'char *' lvalue Var 0x137128cd0 'full' 'char *'
|   | | |         | | `-ImplicitCastExpr 0x137145738 <col:72> 'const char *' <NoOp>
|   | | |         | |   `-ImplicitCastExpr 0x137145720 <col:72> 'char *' <LValueToRValue>
|   | | |         | |     `-DeclRefExpr 0x137145670 <col:72> 'char *' lvalue Var 0x137128c50 'file' 'char *'
|   | | |         | |-CallExpr 0x1371458a8 <line:51:21, col:46> 'int'
|   | | |         | | |-ImplicitCastExpr 0x137145890 <col:21> 'int (*)()' <FunctionToPointerDecay>
|   | | |         | | | `-DeclRefExpr 0x137145830 <col:21> 'int ()' Function 0x137145778 'ViewPostScriptFont' 'int ()'
|   | | |         | | |-ImplicitCastExpr 0x1371458d8 <col:40> 'char *' <LValueToRValue>
|   | | |         | | | `-DeclRefExpr 0x137145850 <col:40> 'char *' lvalue Var 0x137128cd0 'full' 'char *'
|   | | |         | | `-IntegerLiteral 0x137145870 <col:45> 'int' 0
|   | | |         | |-BinaryOperator 0x137145988 <line:52:21, col:32> 'char *' '='
|   | | |         | | |-DeclRefExpr 0x1371458f0 <col:21> 'char *' lvalue Var 0x137128c50 'file' 'char *'
|   | | |         | | `-BinaryOperator 0x137145968 <col:28, col:32> 'char *' '+'
|   | | |         | |   |-ImplicitCastExpr 0x137145950 <col:28> 'char *' <LValueToRValue>
|   | | |         | |   | `-DeclRefExpr 0x137145910 <col:28> 'char *' lvalue Var 0x137128bd0 'fpt' 'char *'
|   | | |         | |   `-IntegerLiteral 0x137145930 <col:32> 'int' 2
|   | | |         | `-CallExpr 0x137145a18 <line:53:21, col:30> 'void'
|   | | |         |   |-ImplicitCastExpr 0x137145a00 <col:21> 'void (*)(void *)' <FunctionToPointerDecay>
|   | | |         |   | `-DeclRefExpr 0x1371459a8 <col:21> 'void (void *)' Function 0x137142b10 'free' 'void (void *)'
|   | | |         |   `-ImplicitCastExpr 0x137145a58 <col:26> 'void *' <BitCast>
|   | | |         |     `-ImplicitCastExpr 0x137145a40 <col:26> 'char *' <LValueToRValue>
|   | | |         |       `-DeclRefExpr 0x1371459c8 <col:26> 'char *' lvalue Var 0x137128cd0 'full' 'char *'
|   | | |         `-RecoveryExpr 0x137145ae8 <line:54:27, col:32> '_Bool' contains-errors
|   | | `-CallExpr 0x137145c18 <line:57:9, col:18> 'void'
|   | |   |-ImplicitCastExpr 0x137145c00 <col:9> 'void (*)(void *)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x137145ba8 <col:9> 'void (void *)' Function 0x137142b10 'free' 'void (void *)'
|   | |   `-ImplicitCastExpr 0x137145c58 <col:14> 'void *' <BitCast>
|   | |     `-ImplicitCastExpr 0x137145c40 <col:14> 'char *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x137145bc8 <col:14> 'char *' lvalue Var 0x137128ab8 'temp' 'char *'
|   | `-BinaryOperator 0x137145dd0 <line:59:15, col:23> 'int' '=='
|   |   |-ImplicitCastExpr 0x137145da0 <col:15> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x137145d60 <col:15> 'int' lvalue Var 0x137128e48 'fvtest' 'int'
|   |   `-ImplicitCastExpr 0x137145db8 <col:23> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x137145d80 <col:23> 'int' lvalue Var 0x137128dc8 'fvcnt' 'int'
|   |-CallExpr 0x137145e80 <line:61:5, col:18> 'void' contains-errors
|   | |-ImplicitCastExpr 0x137145e68 <col:5> 'void (*)(void *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x137145e10 <col:5> 'void (void *)' Function 0x137142b10 'free' 'void (void *)'
|   | `-ImplicitCastExpr 0x137145ec0 <col:11> 'void *' contains-errors <BitCast>
|   |   `-ImplicitCastExpr 0x137145ea8 <col:11> 'char *' contains-errors <LValueToRValue>
|   |     `-DeclRefExpr 0x137145e30 <col:11> 'char *' contains-errors lvalue Var 0x1371420b8 'NewDir' 'char *'
|   |-CallExpr 0x137145f48 <line:62:5, col:19> 'void' contains-errors
|   | |-ImplicitCastExpr 0x137145f30 <col:5> 'void (*)(void *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x137145ed8 <col:5> 'void (void *)' Function 0x137142b10 'free' 'void (void *)'
|   | `-ImplicitCastExpr 0x137145f88 <col:11> 'void *' contains-errors <BitCast>
|   |   `-ImplicitCastExpr 0x137145f70 <col:11> 'char *' contains-errors <LValueToRValue>
|   |     `-DeclRefExpr 0x137145ef8 <col:11> 'char *' contains-errors lvalue Var 0x137128ef8 'OpenDir' 'char *'
|   `-IfStmt 0x137146110 <line:63:5, line:65:5>
|     |-BinaryOperator 0x137146010 <line:63:9, col:20> 'int' contains-errors '!='
|     | |-ImplicitCastExpr 0x137145fe0 <col:9> 'char *' contains-errors <LValueToRValue>
|     | | `-DeclRefExpr 0x137145fa0 <col:9> 'char *' contains-errors lvalue Var 0x137128ef8 'OpenDir' 'char *'
|     | `-ImplicitCastExpr 0x137145ff8 <col:20> 'char *' contains-errors <LValueToRValue>
|     |   `-DeclRefExpr 0x137145fc0 <col:20> 'char *' contains-errors lvalue Var 0x137142000 'DefaultDir' 'char *'
|     `-CompoundStmt 0x1371460f8 <col:32, line:65:5>
|       `-CallExpr 0x1371460a0 <line:64:9, col:26> 'void' contains-errors
|         |-ImplicitCastExpr 0x137146088 <col:9> 'void (*)(void *)' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x137146030 <col:9> 'void (void *)' Function 0x137142b10 'free' 'void (void *)'
|         `-ImplicitCastExpr 0x1371460e0 <col:15> 'void *' contains-errors <BitCast>
|           `-ImplicitCastExpr 0x1371460c8 <col:15> 'char *' contains-errors <LValueToRValue>
|             `-DeclRefExpr 0x137146050 <col:15> 'char *' contains-errors lvalue Var 0x137142000 'DefaultDir' 'char *'
|-FunctionDecl 0x137142b10 <line:19:17> col:17 implicit used free 'void (void *)' extern
| |-ParmVarDecl 0x137142c10 <<invalid sloc>> <invalid sloc> 'void *'
| `-BuiltinAttr 0x137142bb8 <<invalid sloc>> Implicit 873
|-FunctionDecl 0x137143e20 <line:40:15> col:15 implicit used strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x137143f20 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x137143f88 <<invalid sloc>> <invalid sloc> 'int'
| `-BuiltinAttr 0x137143ec8 <<invalid sloc>> Implicit 896
|-FunctionDecl 0x137144400 <line:47:27> col:27 implicit used strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x137144500 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x137144568 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x1371444a8 <<invalid sloc>> Implicit 898
|-FunctionDecl 0x137144908 <line:49:28> col:28 implicit used malloc 'void *(unsigned long)' extern
| |-ParmVarDecl 0x137144a08 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-BuiltinAttr 0x1371449b0 <<invalid sloc>> Implicit 871
| `-AllocSizeAttr 0x137144a78 <col:28> Implicit 1
|-FunctionDecl 0x137144b08 <col:35> col:35 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x137144c08 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x137144bb0 <<invalid sloc>> Implicit 902
|-FunctionDecl 0x137145000 <line:50:21> col:21 implicit used strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x137145100 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x137145168 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x1371450a8 <<invalid sloc>> Implicit 885
`-FunctionDecl 0x137145330 <col:40> col:40 implicit used strcat 'char *(char *, const char *)' extern
  |-ParmVarDecl 0x137145430 <<invalid sloc>> <invalid sloc> 'char *'
  |-ParmVarDecl 0x137145498 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x1371453d8 <<invalid sloc>> Implicit 889
