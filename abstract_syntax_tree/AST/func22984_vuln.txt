TranslationUnitDecl 0x11f828208 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x11f8290b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x11f8287d0 '__int128'
|-TypedefDecl 0x11f829128 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x11f8287f0 'unsigned __int128'
|-TypedefDecl 0x12900be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12900bc00 'struct __NSConstantString_tag'
|   `-Record 0x11f829180 '__NSConstantString_tag'
|-TypedefDecl 0x12900be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x11f828990 '__SVInt8_t'
|-TypedefDecl 0x12900bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x11f8289b0 '__SVInt16_t'
|-TypedefDecl 0x12900bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x11f8289d0 '__SVInt32_t'
|-TypedefDecl 0x12900bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x11f8289f0 '__SVInt64_t'
|-TypedefDecl 0x12900c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x11f828a10 '__SVUint8_t'
|-TypedefDecl 0x12900c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x11f828a30 '__SVUint16_t'
|-TypedefDecl 0x12900c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x11f828a50 '__SVUint32_t'
|-TypedefDecl 0x12900c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x11f828a70 '__SVUint64_t'
|-TypedefDecl 0x12900c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x11f828a90 '__SVFloat16_t'
|-TypedefDecl 0x12900c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x11f828ab0 '__SVFloat32_t'
|-TypedefDecl 0x12900c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x11f828ad0 '__SVFloat64_t'
|-TypedefDecl 0x12900c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x11f828af0 '__SVBfloat16_t'
|-TypedefDecl 0x12900c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x11f828b10 '__clang_svint8x2_t'
|-TypedefDecl 0x12900c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x11f828b30 '__clang_svint16x2_t'
|-TypedefDecl 0x12900c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x11f828b50 '__clang_svint32x2_t'
|-TypedefDecl 0x12900c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x11f828b70 '__clang_svint64x2_t'
|-TypedefDecl 0x12900c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x11f828b90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12900c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x11f828bb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12900c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x11f828bd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12900c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x11f828bf0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12900c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x11f828c10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12900c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x11f828c30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12900c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x11f828c50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12900c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x11f828c70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12900c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x11f828c90 '__clang_svint8x3_t'
|-TypedefDecl 0x12900c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x11f828cb0 '__clang_svint16x3_t'
|-TypedefDecl 0x12900c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x11f828cd0 '__clang_svint32x3_t'
|-TypedefDecl 0x12900c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x11f828cf0 '__clang_svint64x3_t'
|-TypedefDecl 0x12900c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x11f828d10 '__clang_svuint8x3_t'
|-TypedefDecl 0x12900ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x11f828d30 '__clang_svuint16x3_t'
|-TypedefDecl 0x12900cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x11f828d50 '__clang_svuint32x3_t'
|-TypedefDecl 0x12900cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x11f828d70 '__clang_svuint64x3_t'
|-TypedefDecl 0x12900cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x11f828d90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12900d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x11f828db0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12900d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x11f828dd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12900d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x11f828df0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12900d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x11f828e10 '__clang_svint8x4_t'
|-TypedefDecl 0x12900d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x11f828e30 '__clang_svint16x4_t'
|-TypedefDecl 0x12900d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x11f828e50 '__clang_svint32x4_t'
|-TypedefDecl 0x12900d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x11f828e70 '__clang_svint64x4_t'
|-TypedefDecl 0x12900d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x11f828e90 '__clang_svuint8x4_t'
|-TypedefDecl 0x12900d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x11f828eb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12900d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x11f828ed0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12900d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x11f828ef0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12900d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x11f828f10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12900d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x11f828f30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12900d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x11f828f50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12900d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x11f828f70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12900da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x11f828f90 '__SVBool_t'
|-TypedefDecl 0x12900da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x11f828fb0 '__clang_svboolx2_t'
|-TypedefDecl 0x12900dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x11f828fd0 '__clang_svboolx4_t'
|-TypedefDecl 0x12900db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x11f828ff0 '__SVCount_t'
|-TypedefDecl 0x12900dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12900dbb0 'char *'
|   `-BuiltinType 0x11f8282b0 'char'
|-TypedefDecl 0x12900dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12900dbb0 'char *'
|   `-BuiltinType 0x11f8282b0 'char'
`-FunctionDecl 0x12900de38 <dataset_diviso_filec/func22984_vuln.c:1:1, line:40:1> line:1:1 SPL_METHOD 'int (int, int)'
  |-ParmVarDecl 0x12900dd58 <col:12> col:12 MultipleIterator 'int'
  |-ParmVarDecl 0x12900dcd8 <col:30> col:30 used valid 'int'
  `-CompoundStmt 0x129028848 <line:2:1, line:40:1>
    |-DeclStmt 0x11f01ef58 <line:6:2, col:44>
    | |-VarDecl 0x12900e030 <col:2, col:31> col:31 used expect 'long'
    | `-VarDecl 0x12900e0b0 <col:2, col:39> col:39 invalid valid 'long'
    |-IfStmt 0x11f01f238 <line:10:2, line:12:2>
    | |-BinaryOperator 0x11f01f1f0 <line:10:6, col:38> 'int' contains-errors '=='
    | | |-CallExpr 0x11f01f1b0 <col:6, col:33> 'int'
    | | | `-ImplicitCastExpr 0x11f01f198 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | |   `-DeclRefExpr 0x11f01f0a0 <col:6> 'int ()' Function 0x11f01efe8 'zend_parse_parameters_none' 'int ()'
    | | `-RecoveryExpr 0x11f01f1d0 <col:38> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x11f01f220 <col:47, line:12:2>
    |   `-ReturnStmt 0x11f01f210 <line:11:3>
    |-IfStmt 0x11f01f4e0 <line:14:2, line:16:2>
    | |-UnaryOperator 0x11f01f4b8 <line:14:6, col:46> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-CallExpr 0x11f01f490 <col:7, col:46> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x11f01f338 <col:7> 'int ()' Function 0x11f01f280 'zend_hash_num_elements' 'int ()'
    | |   `-UnaryOperator 0x11f01f478 <col:30, col:39> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |     `-CXXDependentScopeMemberExpr 0x11f01f430 <col:31, col:39> '<dependent type>' contains-errors lvalue ->storage
    | |       `-RecoveryExpr 0x11f01f410 <col:31> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x11f01f4d0 <col:49, line:16:2>
    |-WhileStmt 0x129028790 <line:21:2, line:37:2>
    | |-RecoveryExpr 0x11f01f860 <line:21:9, col:116> '_Bool' contains-errors
    | `-CompoundStmt 0x129028770 <col:119, line:37:2>
    |   |-IfStmt 0x11f01fdc8 <line:25:3, line:30:3> has_else
    |   | |-RecoveryExpr 0x11f01fb00 <line:25:7> '_Bool' contains-errors
    |   | |-CompoundStmt 0x11f01fd40 <col:15, line:28:3>
    |   | `-CompoundStmt 0x11f01fdb0 <col:10, line:30:3>
    |   |   `-BinaryOperator 0x11f01fd90 <line:29:4, col:12> 'int' '='
    |   |     |-DeclRefExpr 0x11f01fd50 <col:4> 'int' lvalue ParmVar 0x12900dcd8 'valid' 'int'
    |   |     `-IntegerLiteral 0x11f01fd70 <col:12> 'int' 0
    |   `-IfStmt 0x129028650 <line:32:3, line:34:3>
    |     |-BinaryOperator 0x129028488 <line:32:7, col:17> 'int' '!='
    |     | |-ImplicitCastExpr 0x129028440 <col:7> 'long' <LValueToRValue>
    |     | | `-DeclRefExpr 0x129028400 <col:7> 'long' lvalue Var 0x12900e030 'expect' 'long'
    |     | `-ImplicitCastExpr 0x129028470 <col:17> 'long' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x129028458 <col:17> 'int' <LValueToRValue>
    |     |     `-DeclRefExpr 0x129028420 <col:17> 'int' lvalue ParmVar 0x12900dcd8 'valid' 'int'
    |     `-CompoundStmt 0x129028638 <col:24, line:34:3>
    |       `-CallExpr 0x129028610 <line:33:4, col:23> 'int'
    |         |-ImplicitCastExpr 0x1290285f8 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |         | `-DeclRefExpr 0x129028588 <col:4> 'int ()' Function 0x1290284d0 'RETURN_BOOL' 'int ()'
    |         `-UnaryOperator 0x1290285e0 <col:16, col:17> 'int' prefix '!' cannot overflow
    |           `-ImplicitCastExpr 0x1290285c8 <col:17> 'long' <LValueToRValue>
    |             `-DeclRefExpr 0x1290285a8 <col:17> 'long' lvalue Var 0x12900e030 'expect' 'long'
    `-CallExpr 0x129028808 <line:39:2, col:20> 'int'
      |-ImplicitCastExpr 0x1290287f0 <col:2> 'int (*)()' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x1290287b0 <col:2> 'int ()' Function 0x1290284d0 'RETURN_BOOL' 'int ()'
      `-ImplicitCastExpr 0x129028830 <col:14> 'long' <LValueToRValue>
        `-DeclRefExpr 0x1290287d0 <col:14> 'long' lvalue Var 0x12900e030 'expect' 'long'
