TranslationUnitDecl 0x157855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1578564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x157855bd0 '__int128'
|-TypedefDecl 0x157856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x157855bf0 'unsigned __int128'
|-TypedefDecl 0x157926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x157926000 'struct __NSConstantString_tag'
|   `-Record 0x157856580 '__NSConstantString_tag'
|-TypedefDecl 0x157926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x157855d90 '__SVInt8_t'
|-TypedefDecl 0x157926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x157855db0 '__SVInt16_t'
|-TypedefDecl 0x157926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x157855dd0 '__SVInt32_t'
|-TypedefDecl 0x1579263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x157855df0 '__SVInt64_t'
|-TypedefDecl 0x157926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x157855e10 '__SVUint8_t'
|-TypedefDecl 0x1579264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x157855e30 '__SVUint16_t'
|-TypedefDecl 0x157926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x157855e50 '__SVUint32_t'
|-TypedefDecl 0x157926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x157855e70 '__SVUint64_t'
|-TypedefDecl 0x1579265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x157855e90 '__SVFloat16_t'
|-TypedefDecl 0x157926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x157855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1579266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x157855ed0 '__SVFloat64_t'
|-TypedefDecl 0x157926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x157855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x157926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x157855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1579267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x157855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x157926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x157855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1579268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x157855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x157926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x157855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x157926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x157855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1579269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x157855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x157926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x157855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x157926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x157856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x157926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x157856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x157926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x157856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x157926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x157856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x157926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x157856090 '__clang_svint8x3_t'
|-TypedefDecl 0x157926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1578560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x157926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1578560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x157926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1578560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x157926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x157856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x157926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x157856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x157926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x157856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x157926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x157856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x157926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x157856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x157927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1578561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x157927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1578561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1579278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1578561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x157927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x157856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1579279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x157856230 '__clang_svint16x4_t'
|-TypedefDecl 0x157927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x157856250 '__clang_svint32x4_t'
|-TypedefDecl 0x157927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x157856270 '__clang_svint64x4_t'
|-TypedefDecl 0x157927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x157856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x157927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1578562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x157927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1578562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x157927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1578562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x157927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x157856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x157927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x157856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x157927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x157856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x157927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x157856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x157927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x157856390 '__SVBool_t'
|-TypedefDecl 0x157927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1578563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x157927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1578563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x157927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1578563f0 '__SVCount_t'
|-TypedefDecl 0x157927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x157927fb0 'char *'
|   `-BuiltinType 0x1578556b0 'char'
|-TypedefDecl 0x157928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x157927fb0 'char *'
|   `-BuiltinType 0x1578556b0 'char'
|-FunctionDecl 0x157928318 <dataset_diviso_filec/func18498_vuln.c:1:1, line:37:1> line:1:7 invalid redisProtocolToLuaType_Aggregate 'char *(int *, char *, int)'
| |-ParmVarDecl 0x157928128 <col:40, col:51> col:51 invalid lua 'int *'
| |-ParmVarDecl 0x1579281a8 <col:56, col:62> col:62 used reply 'char *'
| |-ParmVarDecl 0x157928228 <col:69, col:73> col:73 used atype 'int'
| `-CompoundStmt 0x157944af8 <col:80, line:37:1>
|   |-DeclStmt 0x157941c30 <line:2:5, col:35>
|   | `-VarDecl 0x1579283f0 <col:5, col:34> col:11 used p 'char *' cinit
|   |   `-CallExpr 0x157941be8 <col:15, col:34> 'char *'
|   |     |-ImplicitCastExpr 0x157941bd0 <col:15> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x157941af0 <col:15> 'char *(const char *, int)' Function 0x157941910 'strchr' 'char *(const char *, int)'
|   |     |-ImplicitCastExpr 0x157941c18 <col:22, col:28> 'const char *' <NoOp>
|   |     | `-BinaryOperator 0x157941b68 <col:22, col:28> 'char *' '+'
|   |     |   |-ImplicitCastExpr 0x157941b50 <col:22> 'char *' <LValueToRValue>
|   |     |   | `-DeclRefExpr 0x157941b10 <col:22> 'char *' lvalue ParmVar 0x1579281a8 'reply' 'char *'
|   |     |   `-IntegerLiteral 0x157941b30 <col:28> 'int' 1
|   |     `-CharacterLiteral 0x157941b88 <col:30> 'int' 13
|   |-DeclStmt 0x157941cc8 <line:3:5, col:23>
|   | `-VarDecl 0x157941c60 <col:5, col:15> col:15 used mbulklen 'long long'
|   |-DeclStmt 0x157941d80 <line:4:5, col:14>
|   | `-VarDecl 0x157941cf8 <col:5, col:13> col:9 used j 'int' cinit
|   |   `-IntegerLiteral 0x157941d60 <col:13> 'int' 0
|   |-CallExpr 0x157942128 <line:6:5, col:42> 'int'
|   | |-ImplicitCastExpr 0x157942110 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x157941ef0 <col:5> 'int ()' Function 0x157941e38 'string2ll' 'int ()'
|   | |-BinaryOperator 0x157941f68 <col:15, col:21> 'char *' '+'
|   | | |-ImplicitCastExpr 0x157941f50 <col:15> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x157941f10 <col:15> 'char *' lvalue ParmVar 0x1579281a8 'reply' 'char *'
|   | | `-IntegerLiteral 0x157941f30 <col:21> 'int' 1
|   | |-BinaryOperator 0x157942050 <col:23, col:31> 'long' '-'
|   | | |-BinaryOperator 0x157941ff8 <col:23, col:25> 'long' '-'
|   | | | |-ImplicitCastExpr 0x157941fc8 <col:23> 'char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x157941f88 <col:23> 'char *' lvalue Var 0x1579283f0 'p' 'char *'
|   | | | `-ImplicitCastExpr 0x157941fe0 <col:25> 'char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x157941fa8 <col:25> 'char *' lvalue ParmVar 0x1579281a8 'reply' 'char *'
|   | | `-ImplicitCastExpr 0x157942038 <col:31> 'long' <IntegralCast>
|   | |   `-IntegerLiteral 0x157942018 <col:31> 'int' 1
|   | `-UnaryOperator 0x1579420c0 <col:33, col:34> 'long long *' prefix '&' cannot overflow
|   |   `-DeclRefExpr 0x157942070 <col:34> 'long long' lvalue Var 0x157941c60 'mbulklen' 'long long'
|   |-IfStmt 0x157944a80 <line:7:5, line:35:5> has_else
|   | |-BinaryOperator 0x1579423e0 <line:7:9, col:50> 'int' contains-errors '||'
|   | | |-BinaryOperator 0x157942388 <col:9, col:36> 'int' contains-errors '=='
|   | | | |-CXXDependentScopeMemberExpr 0x157942340 <col:9, col:28> '<dependent type>' contains-errors lvalue ->resp
|   | | | | `-CXXDependentScopeMemberExpr 0x1579422f8 <col:9, col:16> '<dependent type>' contains-errors lvalue .lua_client
|   | | | |   `-RecoveryExpr 0x1579422d8 <col:9> '<dependent type>' contains-errors lvalue
|   | | | `-IntegerLiteral 0x157942208 <col:36> 'int' 2
|   | | `-BinaryOperator 0x1579423c0 <col:41, col:50> 'int' '=='
|   | |   |-ImplicitCastExpr 0x1579423a8 <col:41> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x157942248 <col:41> 'int' lvalue ParmVar 0x157928228 'atype' 'int'
|   | |   `-CharacterLiteral 0x157942268 <col:50> 'int' 42
|   | |-CompoundStmt 0x157943f08 <col:55, line:19:5>
|   | | |-CompoundAssignOperator 0x157942440 <line:8:9, col:14> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
|   | | | |-DeclRefExpr 0x157942400 <col:9> 'char *' lvalue Var 0x1579283f0 'p' 'char *'
|   | | | `-IntegerLiteral 0x157942420 <col:14> 'int' 2
|   | | |-IfStmt 0x1579426f0 <line:9:9, line:12:9>
|   | | | |-BinaryOperator 0x1579424f8 <line:9:13, col:26> 'int' '=='
|   | | | | |-ImplicitCastExpr 0x1579424c8 <col:13> 'long long' <LValueToRValue>
|   | | | | | `-DeclRefExpr 0x157942470 <col:13> 'long long' lvalue Var 0x157941c60 'mbulklen' 'long long'
|   | | | | `-ImplicitCastExpr 0x1579424e0 <col:25, col:26> 'long long' <IntegralCast>
|   | | | |   `-UnaryOperator 0x1579424b0 <col:25, col:26> 'int' prefix '-'
|   | | | |     `-IntegerLiteral 0x157942490 <col:26> 'int' 1
|   | | | `-CompoundStmt 0x1579426d0 <col:29, line:12:9>
|   | | |   |-CallExpr 0x157942658 <line:10:13, col:34> '<dependent type>' contains-errors
|   | | |   | |-DeclRefExpr 0x1579425f8 <col:13> 'int ()' Function 0x157942540 'lua_pushboolean' 'int ()'
|   | | |   | |-RecoveryExpr 0x157942618 <col:29> '<dependent type>' contains-errors lvalue
|   | | |   | `-IntegerLiteral 0x157942638 <col:33> 'int' 0
|   | | |   `-ReturnStmt 0x1579426c0 <line:11:13, col:20>
|   | | |     `-ImplicitCastExpr 0x1579426a8 <col:20> 'char *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x157942688 <col:20> 'char *' lvalue Var 0x1579283f0 'p' 'char *'
|   | | |-CallExpr 0x157943840 <line:13:9, col:25> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x157943800 <col:9> 'int ()' Function 0x157942738 'lua_newtable' 'int ()'
|   | | | `-RecoveryExpr 0x157943820 <col:22> '<dependent type>' contains-errors lvalue
|   | | `-ForStmt 0x157943ed0 <line:14:9, line:18:9>
|   | |   |-BinaryOperator 0x1579438a8 <line:14:14, col:18> 'int' '='
|   | |   | |-DeclRefExpr 0x157943868 <col:14> 'int' lvalue Var 0x157941cf8 'j' 'int'
|   | |   | `-IntegerLiteral 0x157943888 <col:18> 'int' 0
|   | |   |-<<<NULL>>>
|   | |   |-BinaryOperator 0x157943950 <col:21, col:25> 'int' '<'
|   | |   | |-ImplicitCastExpr 0x157943938 <col:21> 'long long' <IntegralCast>
|   | |   | | `-ImplicitCastExpr 0x157943908 <col:21> 'int' <LValueToRValue>
|   | |   | |   `-DeclRefExpr 0x1579438c8 <col:21> 'int' lvalue Var 0x157941cf8 'j' 'int'
|   | |   | `-ImplicitCastExpr 0x157943920 <col:25> 'long long' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x1579438e8 <col:25> 'long long' lvalue Var 0x157941c60 'mbulklen' 'long long'
|   | |   |-UnaryOperator 0x157943990 <col:35, col:36> 'int' postfix '++'
|   | |   | `-DeclRefExpr 0x157943970 <col:35> 'int' lvalue Var 0x157941cf8 'j' 'int'
|   | |   `-CompoundStmt 0x157943ea8 <col:40, line:18:9>
|   | |     |-CallExpr 0x157943b40 <line:15:13, col:35> '<dependent type>' contains-errors
|   | |     | |-DeclRefExpr 0x157943a88 <col:13> 'int ()' Function 0x1579439d0 'lua_pushnumber' 'int ()'
|   | |     | |-RecoveryExpr 0x157943aa8 <col:28> '<dependent type>' contains-errors lvalue
|   | |     | `-BinaryOperator 0x157943b20 <col:32, col:34> 'int' '+'
|   | |     |   |-ImplicitCastExpr 0x157943b08 <col:32> 'int' <LValueToRValue>
|   | |     |   | `-DeclRefExpr 0x157943ac8 <col:32> 'int' lvalue Var 0x157941cf8 'j' 'int'
|   | |     |   `-IntegerLiteral 0x157943ae8 <col:34> 'int' 1
|   | |     |-BinaryOperator 0x157943d00 <line:16:13, col:45> 'char *' contains-errors '='
|   | |     | |-DeclRefExpr 0x157943b70 <col:13> 'char *' lvalue Var 0x1579283f0 'p' 'char *'
|   | |     | `-CallExpr 0x157943cd0 <col:17, col:45> '<dependent type>' contains-errors
|   | |     |   |-DeclRefExpr 0x157943c70 <col:17> 'int ()' Function 0x157943bb8 'redisProtocolToLuaType' 'int ()'
|   | |     |   |-RecoveryExpr 0x157943c90 <col:40> '<dependent type>' contains-errors lvalue
|   | |     |   `-DeclRefExpr 0x157943cb0 <col:44> 'char *' lvalue Var 0x1579283f0 'p' 'char *'
|   | |     `-CallExpr 0x157943e78 <line:17:13, col:32> '<dependent type>' contains-errors
|   | |       |-DeclRefExpr 0x157943e00 <col:13> 'int ()' Function 0x157943d48 'lua_settable' 'int ()'
|   | |       |-RecoveryExpr 0x157943e20 <col:26> '<dependent type>' contains-errors lvalue
|   | |       `-UnaryOperator 0x157943e60 <col:30, col:31> 'int' prefix '-'
|   | |         `-IntegerLiteral 0x157943e40 <col:31> 'int' 3
|   | `-IfStmt 0x157944a60 <line:19:12, line:35:5>
|   |   |-BinaryOperator 0x1579440d0 <line:19:16, col:43> 'int' contains-errors '=='
|   |   | |-CXXDependentScopeMemberExpr 0x157944088 <col:16, col:35> '<dependent type>' contains-errors lvalue ->resp
|   |   | | `-CXXDependentScopeMemberExpr 0x157944040 <col:16, col:23> '<dependent type>' contains-errors lvalue .lua_client
|   |   | |   `-RecoveryExpr 0x157944020 <col:16> '<dependent type>' contains-errors lvalue
|   |   | `-IntegerLiteral 0x157943fe0 <col:43> 'int' 3
|   |   `-CompoundStmt 0x157944a28 <col:46, line:35:5>
|   |     |-CompoundAssignOperator 0x157944130 <line:21:9, col:14> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
|   |     | |-DeclRefExpr 0x1579440f0 <col:9> 'char *' lvalue Var 0x1579283f0 'p' 'char *'
|   |     | `-IntegerLiteral 0x157944110 <col:14> 'int' 2
|   |     |-CallExpr 0x1579441a0 <line:22:9, col:25> '<dependent type>' contains-errors
|   |     | |-DeclRefExpr 0x157944160 <col:9> 'int ()' Function 0x157942738 'lua_newtable' 'int ()'
|   |     | `-RecoveryExpr 0x157944180 <col:22> '<dependent type>' contains-errors lvalue
|   |     |-CallExpr 0x157944400 <line:24:9, col:25> '<dependent type>' contains-errors
|   |     | |-DeclRefExpr 0x1579443c0 <col:9> 'int ()' Function 0x157942738 'lua_newtable' 'int ()'
|   |     | `-RecoveryExpr 0x1579443e0 <col:22> '<dependent type>' contains-errors lvalue
|   |     |-ForStmt 0x157944948 <line:25:9, line:33:9>
|   |     | |-BinaryOperator 0x157944468 <line:25:14, col:18> 'int' '='
|   |     | | |-DeclRefExpr 0x157944428 <col:14> 'int' lvalue Var 0x157941cf8 'j' 'int'
|   |     | | `-IntegerLiteral 0x157944448 <col:18> 'int' 0
|   |     | |-<<<NULL>>>
|   |     | |-BinaryOperator 0x157944510 <col:21, col:25> 'int' '<'
|   |     | | |-ImplicitCastExpr 0x1579444f8 <col:21> 'long long' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x1579444c8 <col:21> 'int' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x157944488 <col:21> 'int' lvalue Var 0x157941cf8 'j' 'int'
|   |     | | `-ImplicitCastExpr 0x1579444e0 <col:25> 'long long' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x1579444a8 <col:25> 'long long' lvalue Var 0x157941c60 'mbulklen' 'long long'
|   |     | |-UnaryOperator 0x157944550 <col:35, col:36> 'int' postfix '++'
|   |     | | `-DeclRefExpr 0x157944530 <col:35> 'int' lvalue Var 0x157941cf8 'j' 'int'
|   |     | `-CompoundStmt 0x157944920 <col:40, line:33:9>
|   |     |   |-BinaryOperator 0x157944618 <line:26:13, col:45> 'char *' contains-errors '='
|   |     |   | |-DeclRefExpr 0x157944568 <col:13> 'char *' lvalue Var 0x1579283f0 'p' 'char *'
|   |     |   | `-CallExpr 0x1579445e8 <col:17, col:45> '<dependent type>' contains-errors
|   |     |   |   |-DeclRefExpr 0x157944588 <col:17> 'int ()' Function 0x157943bb8 'redisProtocolToLuaType' 'int ()'
|   |     |   |   |-RecoveryExpr 0x1579445a8 <col:40> '<dependent type>' contains-errors lvalue
|   |     |   |   `-DeclRefExpr 0x1579445c8 <col:44> 'char *' lvalue Var 0x1579283f0 'p' 'char *'
|   |     |   |-IfStmt 0x157944848 <line:27:13, line:31:13> has_else
|   |     |   | |-BinaryOperator 0x157944688 <line:27:17, col:26> 'int' '=='
|   |     |   | | |-ImplicitCastExpr 0x157944670 <col:17> 'int' <LValueToRValue>
|   |     |   | | | `-DeclRefExpr 0x157944638 <col:17> 'int' lvalue ParmVar 0x157928228 'atype' 'int'
|   |     |   | | `-CharacterLiteral 0x157944658 <col:26> 'int' 37
|   |     |   | |-CompoundStmt 0x157944778 <col:31, line:29:13>
|   |     |   | | `-BinaryOperator 0x157944758 <line:28:17, col:49> 'char *' contains-errors '='
|   |     |   | |   |-DeclRefExpr 0x1579446a8 <col:17> 'char *' lvalue Var 0x1579283f0 'p' 'char *'
|   |     |   | |   `-CallExpr 0x157944728 <col:21, col:49> '<dependent type>' contains-errors
|   |     |   | |     |-DeclRefExpr 0x1579446c8 <col:21> 'int ()' Function 0x157943bb8 'redisProtocolToLuaType' 'int ()'
|   |     |   | |     |-RecoveryExpr 0x1579446e8 <col:44> '<dependent type>' contains-errors lvalue
|   |     |   | |     `-DeclRefExpr 0x157944708 <col:48> 'char *' lvalue Var 0x1579283f0 'p' 'char *'
|   |     |   | `-CompoundStmt 0x157944830 <line:29:20, line:31:13>
|   |     |   |   `-CallExpr 0x157944800 <line:30:17, col:38> '<dependent type>' contains-errors
|   |     |   |     |-DeclRefExpr 0x157944790 <col:17> 'int ()' Function 0x157942540 'lua_pushboolean' 'int ()'
|   |     |   |     |-RecoveryExpr 0x1579447b0 <col:33> '<dependent type>' contains-errors lvalue
|   |     |   |     `-IntegerLiteral 0x1579447d0 <col:37> 'int' 1
|   |     |   `-CallExpr 0x1579448f0 <line:32:13, col:32> '<dependent type>' contains-errors
|   |     |     |-DeclRefExpr 0x157944878 <col:13> 'int ()' Function 0x157943d48 'lua_settable' 'int ()'
|   |     |     |-RecoveryExpr 0x157944898 <col:26> '<dependent type>' contains-errors lvalue
|   |     |     `-UnaryOperator 0x1579448d8 <col:30, col:31> 'int' prefix '-'
|   |     |       `-IntegerLiteral 0x1579448b8 <col:31> 'int' 3
|   |     `-CallExpr 0x1579449f8 <line:34:9, col:28> '<dependent type>' contains-errors
|   |       |-DeclRefExpr 0x157944980 <col:9> 'int ()' Function 0x157943d48 'lua_settable' 'int ()'
|   |       |-RecoveryExpr 0x1579449a0 <col:22> '<dependent type>' contains-errors lvalue
|   |       `-UnaryOperator 0x1579449e0 <col:26, col:27> 'int' prefix '-'
|   |         `-IntegerLiteral 0x1579449c0 <col:27> 'int' 3
|   `-ReturnStmt 0x157944ae8 <line:36:5, col:12>
|     `-ImplicitCastExpr 0x157944ad0 <col:12> 'char *' <LValueToRValue>
|       `-DeclRefExpr 0x157944ab0 <col:12> 'char *' lvalue Var 0x1579283f0 'p' 'char *'
`-FunctionDecl 0x157941910 <line:2:15> col:15 implicit used strchr 'char *(const char *, int)' extern
  |-ParmVarDecl 0x157941a10 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x157941a78 <<invalid sloc>> <invalid sloc> 'int'
  `-BuiltinAttr 0x1579419b8 <<invalid sloc>> Implicit 893
