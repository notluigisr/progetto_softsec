TranslationUnitDecl 0x144029008 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x144029eb8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1440295d0 '__int128'
|-TypedefDecl 0x144029f28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1440295f0 'unsigned __int128'
|-TypedefDecl 0x14500be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14500bc00 'struct __NSConstantString_tag'
|   `-Record 0x144029f80 '__NSConstantString_tag'
|-TypedefDecl 0x14500be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x144029790 '__SVInt8_t'
|-TypedefDecl 0x14500bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x1440297b0 '__SVInt16_t'
|-TypedefDecl 0x14500bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x1440297d0 '__SVInt32_t'
|-TypedefDecl 0x14500bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x1440297f0 '__SVInt64_t'
|-TypedefDecl 0x14500c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x144029810 '__SVUint8_t'
|-TypedefDecl 0x14500c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x144029830 '__SVUint16_t'
|-TypedefDecl 0x14500c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x144029850 '__SVUint32_t'
|-TypedefDecl 0x14500c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x144029870 '__SVUint64_t'
|-TypedefDecl 0x14500c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x144029890 '__SVFloat16_t'
|-TypedefDecl 0x14500c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x1440298b0 '__SVFloat32_t'
|-TypedefDecl 0x14500c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x1440298d0 '__SVFloat64_t'
|-TypedefDecl 0x14500c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x1440298f0 '__SVBfloat16_t'
|-TypedefDecl 0x14500c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x144029910 '__clang_svint8x2_t'
|-TypedefDecl 0x14500c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x144029930 '__clang_svint16x2_t'
|-TypedefDecl 0x14500c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x144029950 '__clang_svint32x2_t'
|-TypedefDecl 0x14500c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x144029970 '__clang_svint64x2_t'
|-TypedefDecl 0x14500c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x144029990 '__clang_svuint8x2_t'
|-TypedefDecl 0x14500c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x1440299b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14500c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x1440299d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14500c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x1440299f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14500c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x144029a10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14500c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x144029a30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14500c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x144029a50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14500c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x144029a70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14500c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x144029a90 '__clang_svint8x3_t'
|-TypedefDecl 0x14500c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x144029ab0 '__clang_svint16x3_t'
|-TypedefDecl 0x14500c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x144029ad0 '__clang_svint32x3_t'
|-TypedefDecl 0x14500c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x144029af0 '__clang_svint64x3_t'
|-TypedefDecl 0x14500c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x144029b10 '__clang_svuint8x3_t'
|-TypedefDecl 0x14500ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x144029b30 '__clang_svuint16x3_t'
|-TypedefDecl 0x14500cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x144029b50 '__clang_svuint32x3_t'
|-TypedefDecl 0x14500cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x144029b70 '__clang_svuint64x3_t'
|-TypedefDecl 0x14500cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x144029b90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14500d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x144029bb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14500d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x144029bd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14500d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x144029bf0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14500d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x144029c10 '__clang_svint8x4_t'
|-TypedefDecl 0x14500d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x144029c30 '__clang_svint16x4_t'
|-TypedefDecl 0x14500d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x144029c50 '__clang_svint32x4_t'
|-TypedefDecl 0x14500d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x144029c70 '__clang_svint64x4_t'
|-TypedefDecl 0x14500d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x144029c90 '__clang_svuint8x4_t'
|-TypedefDecl 0x14500d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x144029cb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14500d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x144029cd0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14500d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x144029cf0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14500d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x144029d10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14500d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x144029d30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14500d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x144029d50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14500d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x144029d70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14500da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x144029d90 '__SVBool_t'
|-TypedefDecl 0x14500da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x144029db0 '__clang_svboolx2_t'
|-TypedefDecl 0x14500dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x144029dd0 '__clang_svboolx4_t'
|-TypedefDecl 0x14500db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x144029df0 '__SVCount_t'
|-TypedefDecl 0x14500dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14500dbb0 'char *'
|   `-BuiltinType 0x1440290b0 'char'
|-TypedefDecl 0x14500dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14500dbb0 'char *'
|   `-BuiltinType 0x1440290b0 'char'
`-FunctionDecl 0x14500e078 <dataset_diviso_filec/func3633_nonvuln.c:1:1, line:94:1> line:1:1 invalid ensure_credentials_sync 'int (int *, int *, int *, int *, int **)'
  |-ParmVarDecl 0x14500dd28 <col:26, col:41> col:41 invalid provider 'int *'
  |-ParmVarDecl 0x14500dda8 <line:2:26, col:41> col:41 invalid object 'int *'
  |-ParmVarDecl 0x14500de28 <line:3:26, col:41> col:41 used out_expires_in 'int *'
  |-ParmVarDecl 0x14500dea8 <line:4:26, col:41> col:41 invalid cancellable 'int *'
  |-ParmVarDecl 0x14500df60 <line:5:26, col:41> col:41 invalid error 'int **'
  `-CompoundStmt 0x1450295f0 <line:6:1, line:94:1>
    |-DeclStmt 0x14500e210 <line:11:3, col:24>
    | `-VarDecl 0x14500e1a8 <col:3, col:16> col:16 used username 'const char *'
    |-DeclStmt 0x14500e2a8 <line:12:3, col:18>
    | `-VarDecl 0x14500e240 <col:3, col:10> col:10 used password 'char *'
    |-DeclStmt 0x14500e340 <line:13:3, col:20>
    | `-VarDecl 0x14500e2d8 <col:3, col:10> col:10 used uri_caldav 'char *'
    |-IfStmt 0x1450276a8 <line:23:3, line:28:10>
    | |-RecoveryExpr 0x145027620 <line:23:7, line:27:93> '_Bool' contains-errors
    | `-GotoStmt 0x145027690 <line:28:5, col:10> 'out' 0x145027640
    |-IfStmt 0x1450280b0 <line:34:3, line:46:5>
    | |-RecoveryExpr 0x145027888 <line:34:7, col:22> '_Bool' contains-errors
    | `-CompoundStmt 0x145028090 <line:35:5, line:46:5>
    |   |-IfStmt 0x145028058 <line:36:7, line:44:9>
    |   | |-RecoveryExpr 0x1450278c8 <line:36:11, col:20> '_Bool' contains-errors
    |   | `-CompoundStmt 0x145028040 <line:37:9, line:44:9>
    |   |   `-CallExpr 0x145027e90 <line:38:11, line:41:41> '<dependent type>' contains-errors
    |   |     |-DeclRefExpr 0x1450279c8 <line:38:11> 'int ()' Function 0x145027910 'g_prefix_error' 'int ()'
    |   |     |-RecoveryExpr 0x1450279e8 <col:27> '<dependent type>' contains-errors lvalue
    |   |     |-CallExpr 0x145027bb8 <line:39:27, col:34> 'int'
    |   |     | |-ImplicitCastExpr 0x145027ba0 <col:27> 'int (*)()' <FunctionToPointerDecay>
    |   |     | | `-DeclRefExpr 0x145027ae8 <col:27> 'int ()' Function 0x145027a30 '_' 'int ()'
    |   |     | `-ImplicitCastExpr 0x145027be0 <col:29> 'char *' <ArrayToPointerDecay>
    |   |     |   `-StringLiteral 0x145027b50 <col:29> 'char[4]' lvalue "STR"
    |   |     |-CallExpr 0x145027db0 <line:40:27, col:62> '<dependent type>' contains-errors
    |   |     | |-DeclRefExpr 0x145027cd8 <col:27> 'int ()' Function 0x145027c20 'g_quark_to_string' 'int ()'
    |   |     | `-CXXDependentScopeMemberExpr 0x145027d68 <col:46, col:56> '<dependent type>' contains-errors lvalue ->domain
    |   |     |   `-ParenExpr 0x145027d48 <col:46, col:53> '<dependent type>' contains-errors
    |   |     |     `-UnaryOperator 0x145027d30 <col:47, col:48> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   |     |       `-ImplicitCastExpr 0x145027d18 <col:48> '<dependent type>' contains-errors <LValueToRValue>
    |   |     |         `-RecoveryExpr 0x145027cf8 <col:48> '<dependent type>' contains-errors lvalue
    |   |     `-CXXDependentScopeMemberExpr 0x145027e48 <line:41:27, col:37> '<dependent type>' contains-errors lvalue ->code
    |   |       `-ParenExpr 0x145027e28 <col:27, col:34> '<dependent type>' contains-errors
    |   |         `-UnaryOperator 0x145027e10 <col:28, col:29> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   |           `-ImplicitCastExpr 0x145027df8 <col:29> '<dependent type>' contains-errors <LValueToRValue>
    |   |             `-RecoveryExpr 0x145027dd8 <col:29> '<dependent type>' contains-errors lvalue
    |   `-GotoStmt 0x145028078 <line:45:7, col:12> 'out' 0x145027640
    |-IfStmt 0x145028958 <line:52:3, line:62:5>
    | |-RecoveryExpr 0x145028688 <line:52:7, col:55> '_Bool' contains-errors
    | `-CompoundStmt 0x145028938 <line:53:5, line:62:5>
    |   |-IfStmt 0x145028900 <line:54:7, line:60:9>
    |   | |-RecoveryExpr 0x1450286c8 <line:54:11, col:20> '_Bool' contains-errors
    |   | `-CompoundStmt 0x1450288f0 <line:55:9, line:60:9>
    |   `-GotoStmt 0x145028920 <line:61:7, col:12> 'out' 0x145027640
    |-IfStmt 0x145029188 <line:72:3, line:86:5>
    | |-RecoveryExpr 0x145028c50 <line:72:7, col:8> '_Bool' contains-errors
    | `-CompoundStmt 0x145029168 <line:73:5, line:86:5>
    |   |-IfStmt 0x145029130 <line:74:7, line:84:9>
    |   | |-RecoveryExpr 0x145028c90 <line:74:11, col:20> '_Bool' contains-errors
    |   | `-CompoundStmt 0x145029118 <line:75:9, line:84:9>
    |   |   `-CallExpr 0x145028f60 <line:76:11, line:81:41> '<dependent type>' contains-errors
    |   |     |-DeclRefExpr 0x145028cb0 <line:76:11> 'int ()' Function 0x145027910 'g_prefix_error' 'int ()'
    |   |     |-RecoveryExpr 0x145028cd0 <col:27> '<dependent type>' contains-errors lvalue
    |   |     |-CallExpr 0x145028d48 <line:78:27, col:34> 'int'
    |   |     | |-ImplicitCastExpr 0x145028d30 <col:27> 'int (*)()' <FunctionToPointerDecay>
    |   |     | | `-DeclRefExpr 0x145028cf0 <col:27> 'int ()' Function 0x145027a30 '_' 'int ()'
    |   |     | `-ImplicitCastExpr 0x145028d70 <col:29> 'char *' <ArrayToPointerDecay>
    |   |     |   `-StringLiteral 0x145028d10 <col:29> 'char[4]' lvalue "STR"
    |   |     |-DeclRefExpr 0x145028d88 <line:79:27> 'const char *' lvalue Var 0x14500e1a8 'username' 'const char *'
    |   |     |-CallExpr 0x145028e80 <line:80:27, col:62> '<dependent type>' contains-errors
    |   |     | |-DeclRefExpr 0x145028da8 <col:27> 'int ()' Function 0x145027c20 'g_quark_to_string' 'int ()'
    |   |     | `-CXXDependentScopeMemberExpr 0x145028e38 <col:46, col:56> '<dependent type>' contains-errors lvalue ->domain
    |   |     |   `-ParenExpr 0x145028e18 <col:46, col:53> '<dependent type>' contains-errors
    |   |     |     `-UnaryOperator 0x145028e00 <col:47, col:48> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   |     |       `-ImplicitCastExpr 0x145028de8 <col:48> '<dependent type>' contains-errors <LValueToRValue>
    |   |     |         `-RecoveryExpr 0x145028dc8 <col:48> '<dependent type>' contains-errors lvalue
    |   |     `-CXXDependentScopeMemberExpr 0x145028f18 <line:81:27, col:37> '<dependent type>' contains-errors lvalue ->code
    |   |       `-ParenExpr 0x145028ef8 <col:27, col:34> '<dependent type>' contains-errors
    |   |         `-UnaryOperator 0x145028ee0 <col:28, col:29> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   |           `-ImplicitCastExpr 0x145028ec8 <col:29> '<dependent type>' contains-errors <LValueToRValue>
    |   |             `-RecoveryExpr 0x145028ea8 <col:29> '<dependent type>' contains-errors lvalue
    |   `-GotoStmt 0x145029150 <line:85:7, col:12> 'out' 0x145027640
    |-LabelStmt 0x1450292b0 <line:88:2, col:5> 'out'
    | `-NullStmt 0x1450292a8 <col:5>
    |-CallExpr 0x145029418 <line:90:3, col:19> 'int'
    | |-ImplicitCastExpr 0x145029400 <col:3> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x1450293b0 <col:3> 'int ()' Function 0x1450292f8 'g_free' 'int ()'
    | `-ImplicitCastExpr 0x145029440 <col:11> 'char *' <LValueToRValue>
    |   `-DeclRefExpr 0x1450293d0 <col:11> 'char *' lvalue Var 0x14500e240 'password' 'char *'
    `-CallExpr 0x1450294b0 <line:91:3, col:21> 'int'
      |-ImplicitCastExpr 0x145029498 <col:3> 'int (*)()' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x145029458 <col:3> 'int ()' Function 0x1450292f8 'g_free' 'int ()'
      `-ImplicitCastExpr 0x1450294d8 <col:11> 'char *' <LValueToRValue>
        `-DeclRefExpr 0x145029478 <col:11> 'char *' lvalue Var 0x14500e2d8 'uri_caldav' 'char *'
