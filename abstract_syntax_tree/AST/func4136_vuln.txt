TranslationUnitDecl 0x120855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1208564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x120855bd0 '__int128'
|-TypedefDecl 0x120856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x120855bf0 'unsigned __int128'
|-TypedefDecl 0x120926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x120926000 'struct __NSConstantString_tag'
|   `-Record 0x120856580 '__NSConstantString_tag'
|-TypedefDecl 0x120926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x120855d90 '__SVInt8_t'
|-TypedefDecl 0x120926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x120855db0 '__SVInt16_t'
|-TypedefDecl 0x120926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x120855dd0 '__SVInt32_t'
|-TypedefDecl 0x1209263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x120855df0 '__SVInt64_t'
|-TypedefDecl 0x120926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x120855e10 '__SVUint8_t'
|-TypedefDecl 0x1209264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x120855e30 '__SVUint16_t'
|-TypedefDecl 0x120926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x120855e50 '__SVUint32_t'
|-TypedefDecl 0x120926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x120855e70 '__SVUint64_t'
|-TypedefDecl 0x1209265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x120855e90 '__SVFloat16_t'
|-TypedefDecl 0x120926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x120855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1209266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x120855ed0 '__SVFloat64_t'
|-TypedefDecl 0x120926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x120855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x120926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x120855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1209267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x120855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x120926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x120855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1209268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x120855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x120926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x120855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x120926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x120855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1209269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x120855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x120926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x120855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x120926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x120856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x120926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x120856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x120926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x120856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x120926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x120856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x120926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x120856090 '__clang_svint8x3_t'
|-TypedefDecl 0x120926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1208560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x120926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1208560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x120926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1208560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x120926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x120856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x120926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x120856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x120926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x120856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x120926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x120856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x120926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x120856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x120927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1208561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x120927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1208561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1209278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1208561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x120927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x120856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1209279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x120856230 '__clang_svint16x4_t'
|-TypedefDecl 0x120927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x120856250 '__clang_svint32x4_t'
|-TypedefDecl 0x120927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x120856270 '__clang_svint64x4_t'
|-TypedefDecl 0x120927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x120856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x120927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1208562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x120927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1208562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x120927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1208562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x120927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x120856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x120927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x120856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x120927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x120856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x120927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x120856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x120927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x120856390 '__SVBool_t'
|-TypedefDecl 0x120927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1208563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x120927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1208563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x120927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1208563f0 '__SVCount_t'
|-TypedefDecl 0x120927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x120927fb0 'char *'
|   `-BuiltinType 0x1208556b0 'char'
|-TypedefDecl 0x120928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x120927fb0 'char *'
|   `-BuiltinType 0x1208556b0 'char'
|-FunctionDecl 0x120928208 <dataset_diviso_filec/func4136_vuln.c:1:1, line:25:1> line:1:19 invalid parse_value_and_bound 'int (const int)' static inline
| |-ParmVarDecl 0x1209280f0 <col:41, <invalid sloc>> col:54 invalid 'const int'
| `-CompoundStmt 0x120943ca8 <line:2:1, line:25:1>
|   |-IfStmt 0x120943c48 <line:3:3, line:22:3> has_else
|   | |-UnaryOperator 0x1209283d8 <line:3:7, col:20> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-CallExpr 0x1209283b8 <col:8, col:20> '<dependent type>' contains-errors
|   | |   `-CXXDependentScopeMemberExpr 0x120928370 <col:8, col:14> '<dependent type>' contains-errors lvalue .empty
|   | |     `-RecoveryExpr 0x120928350 <col:8> '<dependent type>' contains-errors lvalue
|   | |-CompoundStmt 0x120943ae8 <col:23, line:20:3>
|   | | |-DeclStmt 0x120928470 <line:4:5, col:17>
|   | | | `-VarDecl 0x120928408 <col:5, col:11> col:11 used endptr 'char *'
|   | | |-BinaryOperator 0x120941e50 <line:5:5, col:48> '<dependent type>' contains-errors '='
|   | | | |-UnaryOperator 0x120941d78 <col:5, col:6> '<dependent type>' contains-errors prefix '*' cannot overflow
|   | | | | `-ImplicitCastExpr 0x120941d60 <col:6> '<dependent type>' contains-errors <LValueToRValue>
|   | | | |   `-RecoveryExpr 0x120941d40 <col:6> '<dependent type>' contains-errors lvalue
|   | | | `-CallExpr 0x120941e18 <col:15, col:48> '<dependent type>' contains-errors
|   | | |   |-DeclRefExpr 0x120941bf0 <col:15> 'long (const char *, char **, int)' Function 0x1209419a0 'strtol' 'long (const char *, char **, int)'
|   | | |   |-CallExpr 0x120941df8 <col:22, col:34> '<dependent type>' contains-errors
|   | | |   | `-CXXDependentScopeMemberExpr 0x120941db0 <col:22, col:28> '<dependent type>' contains-errors lvalue .c_str
|   | | |   |   `-RecoveryExpr 0x120941d90 <col:22> '<dependent type>' contains-errors lvalue
|   | | |   |-UnaryOperator 0x120941cb0 <col:37, col:38> 'char **' prefix '&' cannot overflow
|   | | |   | `-DeclRefExpr 0x120941c90 <col:38> 'char *' lvalue Var 0x120928408 'endptr' 'char *'
|   | | |   `-IntegerLiteral 0x120941cc8 <col:46> 'int' 10
|   | | |-IfStmt 0x120942618 <line:6:5, line:13:5>
|   | | | |-ImplicitCastExpr 0x120941e90 <line:6:9> 'char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x120941e70 <col:9> 'char *' lvalue Var 0x120928408 'endptr' 'char *'
|   | | | `-CompoundStmt 0x1209425f0 <col:17, line:13:5>
|   | | |   |-IfStmt 0x1209420b8 <line:7:7, col:44>
|   | | |   | |-BinaryOperator 0x120941ff0 <col:11, col:33> 'int' contains-errors '=='
|   | | |   | | |-DeclRefExpr 0x120941ea8 <col:11> 'char *' lvalue Var 0x120928408 'endptr' 'char *'
|   | | |   | | `-CallExpr 0x120941fd0 <col:21, col:33> '<dependent type>' contains-errors
|   | | |   | |   `-CXXDependentScopeMemberExpr 0x120941f88 <col:21, col:27> '<dependent type>' contains-errors lvalue .c_str
|   | | |   | |     `-RecoveryExpr 0x120941f68 <col:21> '<dependent type>' contains-errors lvalue
|   | | |   | `-ReturnStmt 0x1209420a8 <col:36, col:44>
|   | | |   |   `-UnaryOperator 0x120942090 <col:43, col:44> '<dependent type>' contains-errors prefix '-' cannot overflow
|   | | |   |     `-ImplicitCastExpr 0x120942078 <col:44> '<dependent type>' contains-errors <LValueToRValue>
|   | | |   |       `-RecoveryExpr 0x120942058 <col:44> '<dependent type>' contains-errors lvalue
|   | | |   |-WhileStmt 0x120942488 <line:8:7, line:9:15>
|   | | |   | |-BinaryOperator 0x120942430 <line:8:14, col:40> 'int' '&&'
|   | | |   | | |-ImplicitCastExpr 0x120942418 <col:14, col:15> 'int' <IntegralCast>
|   | | |   | | | `-ImplicitCastExpr 0x120942400 <col:14, col:15> 'char' <LValueToRValue>
|   | | |   | | |   `-UnaryOperator 0x120942110 <col:14, col:15> 'char' lvalue prefix '*' cannot overflow
|   | | |   | | |     `-ImplicitCastExpr 0x1209420f8 <col:15> 'char *' <LValueToRValue>
|   | | |   | | |       `-DeclRefExpr 0x1209420d8 <col:15> 'char *' lvalue Var 0x120928408 'endptr' 'char *'
|   | | |   | | `-CallExpr 0x1209423a8 <col:25, col:40> 'int'
|   | | |   | |   |-ImplicitCastExpr 0x120942390 <col:25> 'int (*)(int)' <FunctionToPointerDecay>
|   | | |   | |   | `-DeclRefExpr 0x1209422e8 <col:25> 'int (int)' Function 0x120942128 'isspace' 'int (int)'
|   | | |   | |   `-ImplicitCastExpr 0x1209423e8 <col:33, col:34> 'int' <IntegralCast>
|   | | |   | |     `-ImplicitCastExpr 0x1209423d0 <col:33, col:34> 'char' <LValueToRValue>
|   | | |   | |       `-UnaryOperator 0x120942340 <col:33, col:34> 'char' lvalue prefix '*' cannot overflow
|   | | |   | |         `-ImplicitCastExpr 0x120942328 <col:34> 'char *' <LValueToRValue>
|   | | |   | |           `-DeclRefExpr 0x120942308 <col:34> 'char *' lvalue Var 0x120928408 'endptr' 'char *'
|   | | |   | `-UnaryOperator 0x120942470 <line:9:9, col:15> 'char *' postfix '++'
|   | | |   |   `-DeclRefExpr 0x120942450 <col:9> 'char *' lvalue Var 0x120928408 'endptr' 'char *'
|   | | |   `-IfStmt 0x1209425d0 <line:10:7, line:12:7>
|   | | |     |-ImplicitCastExpr 0x1209424f8 <line:10:11, col:12> 'char' <LValueToRValue>
|   | | |     | `-UnaryOperator 0x1209424e0 <col:11, col:12> 'char' lvalue prefix '*' cannot overflow
|   | | |     |   `-ImplicitCastExpr 0x1209424c8 <col:12> 'char *' <LValueToRValue>
|   | | |     |     `-DeclRefExpr 0x1209424a8 <col:12> 'char *' lvalue Var 0x120928408 'endptr' 'char *'
|   | | |     `-CompoundStmt 0x1209425b8 <col:20, line:12:7>
|   | | |       `-ReturnStmt 0x1209425a8 <line:11:9, col:17>
|   | | |         `-UnaryOperator 0x120942590 <col:16, col:17> '<dependent type>' contains-errors prefix '-' cannot overflow
|   | | |           `-ImplicitCastExpr 0x120942578 <col:17> '<dependent type>' contains-errors <LValueToRValue>
|   | | |             `-RecoveryExpr 0x120942558 <col:17> '<dependent type>' contains-errors lvalue
|   | | |-IfStmt 0x120943870 <line:14:5, line:16:5>
|   | | | |-BinaryOperator 0x120942728 <line:14:8, col:18> 'int' contains-errors '>'
|   | | | | |-UnaryOperator 0x1209426f0 <col:8, col:9> '<dependent type>' contains-errors prefix '*' cannot overflow
|   | | | | | `-ImplicitCastExpr 0x1209426d8 <col:9> '<dependent type>' contains-errors <LValueToRValue>
|   | | | | |   `-RecoveryExpr 0x1209426b8 <col:9> '<dependent type>' contains-errors lvalue
|   | | | | `-RecoveryExpr 0x120942708 <col:18> '<dependent type>' contains-errors lvalue
|   | | | `-CompoundStmt 0x120943858 <col:31, line:16:5>
|   | | |   `-BinaryOperator 0x120943838 <line:15:7, col:17> '<dependent type>' contains-errors '='
|   | | |     |-UnaryOperator 0x120943800 <col:7, col:8> '<dependent type>' contains-errors prefix '*' cannot overflow
|   | | |     | `-ImplicitCastExpr 0x1209427e8 <col:8> '<dependent type>' contains-errors <LValueToRValue>
|   | | |     |   `-RecoveryExpr 0x1209427c8 <col:8> '<dependent type>' contains-errors lvalue
|   | | |     `-RecoveryExpr 0x120943818 <col:17> '<dependent type>' contains-errors lvalue
|   | | `-IfStmt 0x120943ac8 <line:17:5, line:19:5>
|   | |   |-BinaryOperator 0x120943980 <line:17:8, col:18> 'int' contains-errors '<'
|   | |   | |-UnaryOperator 0x120943948 <col:8, col:9> '<dependent type>' contains-errors prefix '*' cannot overflow
|   | |   | | `-ImplicitCastExpr 0x120943930 <col:9> '<dependent type>' contains-errors <LValueToRValue>
|   | |   | |   `-RecoveryExpr 0x120943910 <col:9> '<dependent type>' contains-errors lvalue
|   | |   | `-RecoveryExpr 0x120943960 <col:18> '<dependent type>' contains-errors lvalue
|   | |   `-CompoundStmt 0x120943ab0 <col:31, line:19:5>
|   | |     `-BinaryOperator 0x120943a90 <line:18:7, col:17> '<dependent type>' contains-errors '='
|   | |       |-UnaryOperator 0x120943a58 <col:7, col:8> '<dependent type>' contains-errors prefix '*' cannot overflow
|   | |       | `-ImplicitCastExpr 0x120943a40 <col:8> '<dependent type>' contains-errors <LValueToRValue>
|   | |       |   `-RecoveryExpr 0x120943a20 <col:8> '<dependent type>' contains-errors lvalue
|   | |       `-RecoveryExpr 0x120943a70 <col:17> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x120943c30 <line:20:10, line:22:3>
|   |   `-BinaryOperator 0x120943c10 <line:21:5, col:15> '<dependent type>' contains-errors '='
|   |     |-UnaryOperator 0x120943bd8 <col:5, col:6> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |     | `-ImplicitCastExpr 0x120943bc0 <col:6> '<dependent type>' contains-errors <LValueToRValue>
|   |     |   `-RecoveryExpr 0x120943ba0 <col:6> '<dependent type>' contains-errors lvalue
|   |     `-RecoveryExpr 0x120943bf0 <col:15> '<dependent type>' contains-errors lvalue
|   `-ReturnStmt 0x120943c98 <line:24:3, col:10>
|     `-IntegerLiteral 0x120943c78 <col:10> 'int' 0
|-FunctionDecl 0x1209419a0 <line:5:15> col:15 implicit used strtol 'long (const char *, char **, int)' extern
| |-ParmVarDecl 0x120941aa0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x120941b08 <<invalid sloc>> <invalid sloc> 'char **'
| |-ParmVarDecl 0x120941b70 <<invalid sloc>> <invalid sloc> 'int'
| `-BuiltinAttr 0x120941a48 <<invalid sloc>> Implicit 877
`-FunctionDecl 0x120942128 <line:8:25> col:25 implicit used isspace 'int (int)' extern
  |-ParmVarDecl 0x120942228 <<invalid sloc>> <invalid sloc> 'int'
  |-BuiltinAttr 0x1209421d0 <<invalid sloc>> Implicit 929
  |-NoThrowAttr 0x120942298 <col:25> Implicit
  `-PureAttr 0x1209422c0 <col:25> Implicit
