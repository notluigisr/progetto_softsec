TranslationUnitDecl 0x128855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1288564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x128855bd0 '__int128'
|-TypedefDecl 0x128856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x128855bf0 'unsigned __int128'
|-TypedefDecl 0x128926a30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x128926800 'struct __NSConstantString_tag'
|   `-Record 0x128856580 '__NSConstantString_tag'
|-TypedefDecl 0x128926a98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x128855d90 '__SVInt8_t'
|-TypedefDecl 0x128926b00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x128855db0 '__SVInt16_t'
|-TypedefDecl 0x128926b68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x128855dd0 '__SVInt32_t'
|-TypedefDecl 0x128926bd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x128855df0 '__SVInt64_t'
|-TypedefDecl 0x128926c38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x128855e10 '__SVUint8_t'
|-TypedefDecl 0x128926ca0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x128855e30 '__SVUint16_t'
|-TypedefDecl 0x128926d08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x128855e50 '__SVUint32_t'
|-TypedefDecl 0x128926d70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x128855e70 '__SVUint64_t'
|-TypedefDecl 0x128926dd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x128855e90 '__SVFloat16_t'
|-TypedefDecl 0x128926e40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x128855eb0 '__SVFloat32_t'
|-TypedefDecl 0x128926ea8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x128855ed0 '__SVFloat64_t'
|-TypedefDecl 0x128926f10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x128855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x128926f78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x128855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x128926fe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x128855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x128927048 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x128855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1289270b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x128855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x128927118 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x128855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x128927180 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x128855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1289271e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x128855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x128927250 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x128855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1289272b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x128856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x128927320 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x128856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x128927388 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x128856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1289273f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x128856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x128927458 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x128856090 '__clang_svint8x3_t'
|-TypedefDecl 0x1289274c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1288560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x128927528 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1288560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x128927590 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1288560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x1289275f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x128856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x128927660 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x128856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x1289276c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x128856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x128927730 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x128856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x128927798 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x128856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x128928000 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1288561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x128928068 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1288561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1289280d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1288561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x128928138 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x128856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1289281a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x128856230 '__clang_svint16x4_t'
|-TypedefDecl 0x128928208 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x128856250 '__clang_svint32x4_t'
|-TypedefDecl 0x128928270 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x128856270 '__clang_svint64x4_t'
|-TypedefDecl 0x1289282d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x128856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x128928340 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1288562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1289283a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1288562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x128928410 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1288562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x128928478 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x128856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1289284e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x128856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x128928548 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x128856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1289285b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x128856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x128928618 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x128856390 '__SVBool_t'
|-TypedefDecl 0x128928680 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1288563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1289286e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1288563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x128928750 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1288563f0 '__SVCount_t'
|-TypedefDecl 0x1289287f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1289287b0 'char *'
|   `-BuiltinType 0x1288556b0 'char'
|-TypedefDecl 0x128928868 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1289287b0 'char *'
|   `-BuiltinType 0x1288556b0 'char'
|-EnumDecl 0x1289288c0 <dataset_diviso_filec/func19274_vuln.c:1:8, col:13> col:13 try_read_result
|-FunctionDecl 0x128928b40 <col:1, line:53:1> line:1:29 invalid try_read_network 'enum try_read_result (int *)' static
| |-ParmVarDecl 0x1289289e8 <col:46, col:52> col:52 referenced invalid c 'int *'
| `-CompoundStmt 0x128945768 <col:55, line:53:1>
|   |-DeclStmt 0x128942110 <line:2:5, col:57>
|   | `-VarDecl 0x128928c40 <col:5, col:26> col:26 referenced invalid gotdata 'enum try_read_result'
|   |-DeclStmt 0x1289421a8 <line:3:5, col:12>
|   | `-VarDecl 0x128942140 <col:5, col:9> col:9 used res 'int'
|   |-CallExpr 0x128942400 <line:5:5, col:21> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x128942320 <col:5> 'int ()' Function 0x128942268 'assert' 'int ()'
|   | `-BinaryOperator 0x1289423e0 <col:12, col:17> 'int' contains-errors '!='
|   |   |-RecoveryExpr 0x128942340 <col:12> '<dependent type>' contains-errors lvalue
|   |   `-RecoveryExpr 0x1289423c0 <col:17> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x128942bb8 <line:7:5, line:11:5>
|   | |-BinaryOperator 0x1289424f8 <line:7:9, col:24> 'int' contains-errors '!='
|   | | |-CXXDependentScopeMemberExpr 0x128942448 <col:9, col:12> '<dependent type>' contains-errors lvalue ->rcurr
|   | | | `-RecoveryExpr 0x128942428 <col:9> '<dependent type>' contains-errors lvalue
|   | | `-CXXDependentScopeMemberExpr 0x1289424b0 <col:21, col:24> '<dependent type>' contains-errors lvalue ->rbuf
|   | |   `-RecoveryExpr 0x128942490 <col:21> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x128942b98 <col:30, line:11:5>
|   |   |-IfStmt 0x128942a60 <line:8:9, line:9:49>
|   |   | |-BinaryOperator 0x1289425a0 <line:8:13, col:26> 'int' contains-errors '!='
|   |   | | |-CXXDependentScopeMemberExpr 0x128942538 <col:13, col:16> '<dependent type>' contains-errors lvalue ->rbytes
|   |   | | | `-RecoveryExpr 0x128942518 <col:13> '<dependent type>' contains-errors lvalue
|   |   | | `-IntegerLiteral 0x128942580 <col:26> 'int' 0
|   |   | `-CallExpr 0x128942a28 <line:9:13, col:49> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x128942888 <col:13> 'void *(void *, const void *, unsigned long)' Function 0x128942638 'memmove' 'void *(void *, const void *, unsigned long)'
|   |   |   |-CXXDependentScopeMemberExpr 0x1289428c8 <col:21, col:24> '<dependent type>' contains-errors lvalue ->rbuf
|   |   |   | `-RecoveryExpr 0x1289428a8 <col:21> '<dependent type>' contains-errors lvalue
|   |   |   |-CXXDependentScopeMemberExpr 0x128942930 <col:30, col:33> '<dependent type>' contains-errors lvalue ->rcurr
|   |   |   | `-RecoveryExpr 0x128942910 <col:30> '<dependent type>' contains-errors lvalue
|   |   |   `-CXXDependentScopeMemberExpr 0x128942998 <col:40, col:43> '<dependent type>' contains-errors lvalue ->rbytes
|   |   |     `-RecoveryExpr 0x128942978 <col:40> '<dependent type>' contains-errors lvalue
|   |   `-BinaryOperator 0x128942b78 <line:10:9, col:23> '<dependent type>' contains-errors '='
|   |     |-CXXDependentScopeMemberExpr 0x128942ac8 <col:9, col:12> '<dependent type>' contains-errors lvalue ->rcurr
|   |     | `-RecoveryExpr 0x128942aa0 <col:9> '<dependent type>' contains-errors lvalue
|   |     |   `-DeclRefExpr 0x128942a80 <col:9> 'int *' lvalue ParmVar 0x1289289e8 'c' 'int *'
|   |     `-CXXDependentScopeMemberExpr 0x128942b30 <col:20, col:23> '<dependent type>' contains-errors lvalue ->rbuf
|   |       `-RecoveryExpr 0x128942b10 <col:20> '<dependent type>' contains-errors lvalue
|   |-WhileStmt 0x128945718 <line:13:5, line:51:5>
|   | |-IntegerLiteral 0x128942bd8 <line:13:12> 'int' 1
|   | `-CompoundStmt 0x1289456d8 <col:15, line:51:5>
|   |   |-IfStmt 0x128944130 <line:14:9, line:26:9>
|   |   | |-BinaryOperator 0x128942cc8 <line:14:13, col:29> 'int' contains-errors '>='
|   |   | | |-CXXDependentScopeMemberExpr 0x128942c18 <col:13, col:16> '<dependent type>' contains-errors lvalue ->rbytes
|   |   | | | `-RecoveryExpr 0x128942bf8 <col:13> '<dependent type>' contains-errors lvalue
|   |   | | `-CXXDependentScopeMemberExpr 0x128942c80 <col:26, col:29> '<dependent type>' contains-errors lvalue ->rsize
|   |   | |   `-RecoveryExpr 0x128942c60 <col:26> '<dependent type>' contains-errors lvalue
|   |   | `-CompoundStmt 0x128944100 <col:36, line:26:9>
|   |   |   |-DeclStmt 0x128943738 <line:15:13, col:60>
|   |   |   | `-VarDecl 0x128942d00 <col:13, col:59> col:19 used new_rbuf 'char *' cinit
|   |   |   |   `-CallExpr 0x128943708 <col:30, col:59> '<dependent type>' contains-errors
|   |   |   |     |-DeclRefExpr 0x128942fc0 <col:30> 'void *(void *, unsigned long)' Function 0x128942db0 'realloc' 'void *(void *, unsigned long)'
|   |   |   |     |-CXXDependentScopeMemberExpr 0x128943600 <col:38, col:41> '<dependent type>' contains-errors lvalue ->rbuf
|   |   |   |     | `-RecoveryExpr 0x128942fe0 <col:38> '<dependent type>' contains-errors lvalue
|   |   |   |     `-BinaryOperator 0x1289436d0 <col:47, col:58> '<dependent type>' contains-errors '*'
|   |   |   |       |-CXXDependentScopeMemberExpr 0x128943668 <col:47, col:50> '<dependent type>' contains-errors lvalue ->rsize
|   |   |   |       | `-RecoveryExpr 0x128943648 <col:47> '<dependent type>' contains-errors lvalue
|   |   |   |       `-IntegerLiteral 0x1289436b0 <col:58> 'int' 2
|   |   |   |-IfStmt 0x128943ea8 <line:16:13, line:23:13>
|   |   |   | |-UnaryOperator 0x128943788 <line:16:17, col:18> 'int' contains-errors prefix '!' cannot overflow
|   |   |   | | `-ImplicitCastExpr 0x128943770 <col:18> 'char *' contains-errors <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x128943750 <col:18> 'char *' contains-errors lvalue Var 0x128942d00 'new_rbuf' 'char *'
|   |   |   | `-CompoundStmt 0x128943e70 <col:28, line:23:13>
|   |   |   |   |-IfStmt 0x128943ac0 <line:17:17, line:18:42>
|   |   |   |   | |-BinaryOperator 0x1289438a8 <line:17:21, col:40> 'int' contains-errors '>'
|   |   |   |   | | |-CXXDependentScopeMemberExpr 0x128943860 <col:21, col:30> '<dependent type>' contains-errors lvalue .verbose
|   |   |   |   | | | `-RecoveryExpr 0x128943840 <col:21> '<dependent type>' contains-errors lvalue
|   |   |   |   | | `-IntegerLiteral 0x128943800 <col:40> 'int' 0
|   |   |   |   | `-CallExpr 0x128943a90 <line:18:21, col:42> '<dependent type>' contains-errors
|   |   |   |   |   |-DeclRefExpr 0x1289439a8 <col:21> 'int ()' Function 0x1289438f0 'fprintf' 'int ()'
|   |   |   |   |   |-RecoveryExpr 0x128943a70 <col:29> '<dependent type>' contains-errors lvalue
|   |   |   |   |   `-StringLiteral 0x128943a20 <col:37> 'char[4]' lvalue "STR"
|   |   |   |   |-BinaryOperator 0x128943b90 <line:19:17, col:29> '<dependent type>' contains-errors '='
|   |   |   |   | |-CXXDependentScopeMemberExpr 0x128943b28 <col:17, col:20> '<dependent type>' contains-errors lvalue ->rbytes
|   |   |   |   | | `-RecoveryExpr 0x128943b00 <col:17> '<dependent type>' contains-errors lvalue
|   |   |   |   | |   `-DeclRefExpr 0x128943ae0 <col:17> 'int *' lvalue ParmVar 0x1289289e8 'c' 'int *'
|   |   |   |   | `-IntegerLiteral 0x128943b70 <col:29> 'int' 0
|   |   |   |   |-CallExpr 0x128943cf0 <line:20:17, col:36> '<dependent type>' contains-errors
|   |   |   |   | |-DeclRefExpr 0x128943c90 <col:17> 'int ()' Function 0x128943bd8 'out_string' 'int ()'
|   |   |   |   | |-RecoveryExpr 0x128943cb0 <col:28> '<dependent type>' contains-errors lvalue
|   |   |   |   | `-StringLiteral 0x128943cd0 <col:31> 'char[4]' lvalue "STR"
|   |   |   |   |-BinaryOperator 0x128943e08 <line:21:17, col:35> '<dependent type>' contains-errors '='
|   |   |   |   | |-CXXDependentScopeMemberExpr 0x128943d68 <col:17, col:20> '<dependent type>' contains-errors lvalue ->write_and_go
|   |   |   |   | | `-RecoveryExpr 0x128943d40 <col:17> '<dependent type>' contains-errors lvalue
|   |   |   |   | |   `-DeclRefExpr 0x128943d20 <col:17> 'int *' lvalue ParmVar 0x1289289e8 'c' 'int *'
|   |   |   |   | `-RecoveryExpr 0x128943de8 <col:35> '<dependent type>' contains-errors lvalue
|   |   |   |   `-ReturnStmt 0x128943e60 <line:22:17, col:24>
|   |   |   |     `-RecoveryExpr 0x128943e40 <col:24> '<dependent type>' contains-errors lvalue
|   |   |   |-BinaryOperator 0x128944000 <line:24:13, col:34> '<dependent type>' contains-errors '='
|   |   |   | |-CXXDependentScopeMemberExpr 0x128943f10 <col:13, col:16> '<dependent type>' contains-errors lvalue ->rcurr
|   |   |   | | `-RecoveryExpr 0x128943ee8 <col:13> '<dependent type>' contains-errors lvalue
|   |   |   | |   `-DeclRefExpr 0x128943ec8 <col:13> 'int *' lvalue ParmVar 0x1289289e8 'c' 'int *'
|   |   |   | `-BinaryOperator 0x128943fe0 <col:24, col:34> '<dependent type>' contains-errors '='
|   |   |   |   |-CXXDependentScopeMemberExpr 0x128943f78 <col:24, col:27> '<dependent type>' contains-errors lvalue ->rbuf
|   |   |   |   | `-RecoveryExpr 0x128943f58 <col:24> '<dependent type>' contains-errors lvalue
|   |   |   |   `-DeclRefExpr 0x128943fc0 <col:34> 'char *' contains-errors lvalue Var 0x128942d00 'new_rbuf' 'char *'
|   |   |   `-CompoundAssignOperator 0x1289440d0 <line:25:13, col:25> '<dependent type>' contains-errors '*=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |   |     |-CXXDependentScopeMemberExpr 0x128944068 <col:13, col:16> '<dependent type>' contains-errors lvalue ->rsize
|   |   |     | `-RecoveryExpr 0x128944040 <col:13> '<dependent type>' contains-errors lvalue
|   |   |     |   `-DeclRefExpr 0x128944020 <col:13> 'int *' lvalue ParmVar 0x1289289e8 'c' 'int *'
|   |   |     `-IntegerLiteral 0x1289440b0 <col:25> 'int' 2
|   |   |-DeclStmt 0x1289442c0 <line:28:9, col:41>
|   |   | `-VarDecl 0x128944168 <col:9, col:35> col:13 used avail 'int' cinit
|   |   |   `-BinaryOperator 0x1289442a0 <col:21, col:35> '<dependent type>' contains-errors '-'
|   |   |     |-CXXDependentScopeMemberExpr 0x1289441f0 <col:21, col:24> '<dependent type>' contains-errors lvalue ->rsize
|   |   |     | `-RecoveryExpr 0x1289441d0 <col:21> '<dependent type>' contains-errors lvalue
|   |   |     `-CXXDependentScopeMemberExpr 0x128944258 <col:32, col:35> '<dependent type>' contains-errors lvalue ->rbytes
|   |   |       `-RecoveryExpr 0x128944238 <col:32> '<dependent type>' contains-errors lvalue
|   |   |-BinaryOperator 0x1289445a8 <line:29:9, col:54> 'int' contains-errors '='
|   |   | |-DeclRefExpr 0x1289442d8 <col:9> 'int' lvalue Var 0x128942140 'res' 'int'
|   |   | `-CallExpr 0x128944570 <col:15, col:54> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x1289443d8 <col:15> 'int ()' Function 0x128944320 'read' 'int ()'
|   |   |   |-CXXDependentScopeMemberExpr 0x128944418 <col:20, col:23> '<dependent type>' contains-errors lvalue ->sfd
|   |   |   | `-RecoveryExpr 0x1289443f8 <col:20> '<dependent type>' contains-errors lvalue
|   |   |   |-BinaryOperator 0x128944530 <col:28, col:41> '<dependent type>' contains-errors '+'
|   |   |   | |-CXXDependentScopeMemberExpr 0x128944480 <col:28, col:31> '<dependent type>' contains-errors lvalue ->rbuf
|   |   |   | | `-RecoveryExpr 0x128944460 <col:28> '<dependent type>' contains-errors lvalue
|   |   |   | `-CXXDependentScopeMemberExpr 0x1289444e8 <col:38, col:41> '<dependent type>' contains-errors lvalue ->rbytes
|   |   |   |   `-RecoveryExpr 0x1289444c8 <col:38> '<dependent type>' contains-errors lvalue
|   |   |   `-DeclRefExpr 0x128944550 <col:49> 'int' contains-errors lvalue Var 0x128944168 'avail' 'int'
|   |   |-IfStmt 0x128945318 <line:30:9, line:41:9>
|   |   | |-BinaryOperator 0x128944a38 <line:30:13, col:19> 'int' '>'
|   |   | | |-ImplicitCastExpr 0x128944a20 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1289445c8 <col:13> 'int' lvalue Var 0x128942140 'res' 'int'
|   |   | | `-IntegerLiteral 0x128944a00 <col:19> 'int' 0
|   |   | `-CompoundStmt 0x1289452d8 <col:22, line:41:9>
|   |   |   |-CallExpr 0x128944c68 <line:31:13, col:55> '<dependent type>' contains-errors
|   |   |   | |-DeclRefExpr 0x128944b38 <col:13> 'int ()' Function 0x128944a80 'pthread_mutex_lock' 'int ()'
|   |   |   | `-UnaryOperator 0x128944c50 <col:32, col:50> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   |   |   `-CXXDependentScopeMemberExpr 0x128944c08 <col:33, col:50> '<dependent type>' contains-errors lvalue .mutex
|   |   |   |     `-CXXDependentScopeMemberExpr 0x128944bc0 <col:33, col:44> '<dependent type>' contains-errors lvalue ->stats
|   |   |   |       `-CXXDependentScopeMemberExpr 0x128944b78 <col:33, col:36> '<dependent type>' contains-errors lvalue ->thread
|   |   |   |         `-RecoveryExpr 0x128944b58 <col:33> '<dependent type>' contains-errors lvalue
|   |   |   |-CompoundAssignOperator 0x128944dd0 <line:32:13, col:44> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |   |   | |-CXXDependentScopeMemberExpr 0x128944d68 <col:13, col:30> '<dependent type>' contains-errors lvalue .bytes_read
|   |   |   | | `-CXXDependentScopeMemberExpr 0x128944d20 <col:13, col:24> '<dependent type>' contains-errors lvalue ->stats
|   |   |   | |   `-CXXDependentScopeMemberExpr 0x128944cd8 <col:13, col:16> '<dependent type>' contains-errors lvalue ->thread
|   |   |   | |     `-RecoveryExpr 0x128944cb0 <col:13> '<dependent type>' contains-errors lvalue
|   |   |   | |       `-DeclRefExpr 0x128944c90 <col:13> 'int *' lvalue ParmVar 0x1289289e8 'c' 'int *'
|   |   |   | `-DeclRefExpr 0x128944db0 <col:44> 'int' lvalue Var 0x128942140 'res' 'int'
|   |   |   |-CallExpr 0x128945010 <line:33:13, col:57> '<dependent type>' contains-errors
|   |   |   | |-DeclRefExpr 0x128944ee0 <col:13> 'int ()' Function 0x128944e28 'pthread_mutex_unlock' 'int ()'
|   |   |   | `-UnaryOperator 0x128944ff8 <col:34, col:52> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   |   |   `-CXXDependentScopeMemberExpr 0x128944fb0 <col:35, col:52> '<dependent type>' contains-errors lvalue .mutex
|   |   |   |     `-CXXDependentScopeMemberExpr 0x128944f68 <col:35, col:46> '<dependent type>' contains-errors lvalue ->stats
|   |   |   |       `-CXXDependentScopeMemberExpr 0x128944f20 <col:35, col:38> '<dependent type>' contains-errors lvalue ->thread
|   |   |   |         `-RecoveryExpr 0x128944f00 <col:35> '<dependent type>' contains-errors lvalue
|   |   |   |-BinaryOperator 0x1289450d8 <line:34:13, col:23> '<dependent type>' contains-errors '='
|   |   |   | |-RecoveryExpr 0x128945058 <col:13> '<dependent type>' contains-errors lvalue
|   |   |   | | `-DeclRefExpr 0x128945038 <col:13> 'enum try_read_result' lvalue Var 0x128928c40 'gotdata' 'enum try_read_result'
|   |   |   | `-RecoveryExpr 0x1289450b8 <col:23> '<dependent type>' contains-errors lvalue
|   |   |   |-CompoundAssignOperator 0x1289451a8 <line:35:13, col:26> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |   |   | |-CXXDependentScopeMemberExpr 0x128945140 <col:13, col:16> '<dependent type>' contains-errors lvalue ->rbytes
|   |   |   | | `-RecoveryExpr 0x128945118 <col:13> '<dependent type>' contains-errors lvalue
|   |   |   | |   `-DeclRefExpr 0x1289450f8 <col:13> 'int *' lvalue ParmVar 0x1289289e8 'c' 'int *'
|   |   |   | `-DeclRefExpr 0x128945188 <col:26> 'int' lvalue Var 0x128942140 'res' 'int'
|   |   |   `-IfStmt 0x1289452a8 <line:36:13, line:40:13> has_else
|   |   |     |-BinaryOperator 0x128945248 <line:36:17, col:24> 'int' contains-errors '=='
|   |   |     | |-ImplicitCastExpr 0x128945218 <col:17> 'int' <LValueToRValue>
|   |   |     | | `-DeclRefExpr 0x1289451d8 <col:17> 'int' lvalue Var 0x128942140 'res' 'int'
|   |   |     | `-ImplicitCastExpr 0x128945230 <col:24> 'int' contains-errors <LValueToRValue>
|   |   |     |   `-DeclRefExpr 0x1289451f8 <col:24> 'int' contains-errors lvalue Var 0x128944168 'avail' 'int'
|   |   |     |-CompoundStmt 0x128945270 <col:31, line:38:13>
|   |   |     | `-ContinueStmt 0x128945268 <line:37:17>
|   |   |     `-CompoundStmt 0x128945290 <line:38:20, line:40:13>
|   |   |       `-BreakStmt 0x128945288 <line:39:17>
|   |   |-IfStmt 0x128945410 <line:42:9, line:44:9>
|   |   | |-BinaryOperator 0x128945390 <line:42:13, col:20> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x128945378 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x128945338 <col:13> 'int' lvalue Var 0x128942140 'res' 'int'
|   |   | | `-IntegerLiteral 0x128945358 <col:20> 'int' 0
|   |   | `-CompoundStmt 0x1289453f8 <col:23, line:44:9>
|   |   |   `-ReturnStmt 0x1289453e8 <line:43:13, col:20>
|   |   |     `-RecoveryExpr 0x1289453c8 <col:20> '<dependent type>' contains-errors lvalue
|   |   `-IfStmt 0x1289456b8 <line:45:9, line:50:9>
|   |     |-BinaryOperator 0x1289454a0 <line:45:13, col:21> 'int' '=='
|   |     | |-ImplicitCastExpr 0x128945488 <col:13> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x128945430 <col:13> 'int' lvalue Var 0x128942140 'res' 'int'
|   |     | `-UnaryOperator 0x128945470 <col:20, col:21> 'int' prefix '-'
|   |     |   `-IntegerLiteral 0x128945450 <col:21> 'int' 1
|   |     `-CompoundStmt 0x1289456a0 <col:24, line:50:9>
|   |       `-IfStmt 0x128945680 <line:46:13, line:48:13>
|   |         |-BinaryOperator 0x128945640 <line:46:17, col:45> 'int' contains-errors '||'
|   |         | |-BinaryOperator 0x1289455c0 <col:17, col:26> 'int' contains-errors '=='
|   |         | | |-RecoveryExpr 0x128945580 <col:17> '<dependent type>' contains-errors lvalue
|   |         | | `-RecoveryExpr 0x1289455a0 <col:26> '<dependent type>' contains-errors lvalue
|   |         | `-BinaryOperator 0x128945620 <col:36, col:45> 'int' contains-errors '=='
|   |         |   |-RecoveryExpr 0x1289455e0 <col:36> '<dependent type>' contains-errors lvalue
|   |         |   `-RecoveryExpr 0x128945600 <col:45> '<dependent type>' contains-errors lvalue
|   |         `-CompoundStmt 0x128945668 <col:58, line:48:13>
|   |           `-BreakStmt 0x128945660 <line:47:17>
|   `-ReturnStmt 0x128945758 <line:52:5, col:12>
|     `-RecoveryExpr 0x128945738 <col:12> '<dependent type>' contains-errors lvalue
|-FunctionDecl 0x128942638 <line:9:13> col:13 implicit used memmove 'void *(void *, const void *, unsigned long)' extern
| |-ParmVarDecl 0x128942738 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1289427a0 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x128942808 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x1289426e0 <<invalid sloc>> Implicit 884
`-FunctionDecl 0x128942db0 <line:15:30> col:30 implicit used realloc 'void *(void *, unsigned long)' extern
  |-ParmVarDecl 0x128942eb0 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x128942f18 <<invalid sloc>> <invalid sloc> 'unsigned long'
  |-BuiltinAttr 0x128942e58 <<invalid sloc>> Implicit 872
  `-AllocSizeAttr 0x128942f90 <col:30> Implicit 2
