TranslationUnitDecl 0x145013e08 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x145014cb8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1450143d0 '__int128'
|-TypedefDecl 0x145014d28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1450143f0 'unsigned __int128'
|-TypedefDecl 0x14600be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14600bc00 'struct __NSConstantString_tag'
|   `-Record 0x145014d80 '__NSConstantString_tag'
|-TypedefDecl 0x14600be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x145014590 '__SVInt8_t'
|-TypedefDecl 0x14600bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x1450145b0 '__SVInt16_t'
|-TypedefDecl 0x14600bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x1450145d0 '__SVInt32_t'
|-TypedefDecl 0x14600bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x1450145f0 '__SVInt64_t'
|-TypedefDecl 0x14600c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x145014610 '__SVUint8_t'
|-TypedefDecl 0x14600c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x145014630 '__SVUint16_t'
|-TypedefDecl 0x14600c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x145014650 '__SVUint32_t'
|-TypedefDecl 0x14600c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x145014670 '__SVUint64_t'
|-TypedefDecl 0x14600c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x145014690 '__SVFloat16_t'
|-TypedefDecl 0x14600c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x1450146b0 '__SVFloat32_t'
|-TypedefDecl 0x14600c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x1450146d0 '__SVFloat64_t'
|-TypedefDecl 0x14600c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x1450146f0 '__SVBfloat16_t'
|-TypedefDecl 0x14600c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x145014710 '__clang_svint8x2_t'
|-TypedefDecl 0x14600c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x145014730 '__clang_svint16x2_t'
|-TypedefDecl 0x14600c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x145014750 '__clang_svint32x2_t'
|-TypedefDecl 0x14600c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x145014770 '__clang_svint64x2_t'
|-TypedefDecl 0x14600c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x145014790 '__clang_svuint8x2_t'
|-TypedefDecl 0x14600c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x1450147b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14600c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x1450147d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14600c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x1450147f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14600c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x145014810 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14600c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x145014830 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14600c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x145014850 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14600c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x145014870 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14600c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x145014890 '__clang_svint8x3_t'
|-TypedefDecl 0x14600c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1450148b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14600c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1450148d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14600c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1450148f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14600c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x145014910 '__clang_svuint8x3_t'
|-TypedefDecl 0x14600ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x145014930 '__clang_svuint16x3_t'
|-TypedefDecl 0x14600cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x145014950 '__clang_svuint32x3_t'
|-TypedefDecl 0x14600cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x145014970 '__clang_svuint64x3_t'
|-TypedefDecl 0x14600cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x145014990 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14600d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1450149b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14600d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1450149d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14600d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1450149f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14600d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x145014a10 '__clang_svint8x4_t'
|-TypedefDecl 0x14600d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x145014a30 '__clang_svint16x4_t'
|-TypedefDecl 0x14600d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x145014a50 '__clang_svint32x4_t'
|-TypedefDecl 0x14600d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x145014a70 '__clang_svint64x4_t'
|-TypedefDecl 0x14600d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x145014a90 '__clang_svuint8x4_t'
|-TypedefDecl 0x14600d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x145014ab0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14600d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x145014ad0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14600d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x145014af0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14600d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x145014b10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14600d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x145014b30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14600d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x145014b50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14600d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x145014b70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14600da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x145014b90 '__SVBool_t'
|-TypedefDecl 0x14600da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x145014bb0 '__clang_svboolx2_t'
|-TypedefDecl 0x14600dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x145014bd0 '__clang_svboolx4_t'
|-TypedefDecl 0x14600db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x145014bf0 '__SVCount_t'
|-TypedefDecl 0x14600dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14600dbb0 'char *'
|   `-BuiltinType 0x145013eb0 'char'
|-TypedefDecl 0x14600dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14600dbb0 'char *'
|   `-BuiltinType 0x145013eb0 'char'
|-FunctionDecl 0x14600ddf0 <dataset_diviso_filec/func4911_vuln.c:1:1, line:50:1> line:1:6 invalid color_cmyk_to_rgb 'void (int *)'
| |-ParmVarDecl 0x14600dd28 <col:24, col:37> col:37 referenced invalid image 'int *'
| `-CompoundStmt 0x14602d980 <line:2:1, line:50:1>
|   |-DeclStmt 0x14600e0c8 <line:3:2, col:18>
|   | |-VarDecl 0x14600deb8 <col:2, col:8> col:8 used C 'float'
|   | |-VarDecl 0x14600df38 <col:2, col:11> col:11 used M 'float'
|   | |-VarDecl 0x14600dfb8 <col:2, col:14> col:14 used Y 'float'
|   | `-VarDecl 0x14600e038 <col:2, col:17> col:17 used K 'float'
|   |-DeclStmt 0x14600e308 <line:4:2, col:22>
|   | |-VarDecl 0x14600e0f8 <col:2, col:8> col:8 used sC 'float'
|   | |-VarDecl 0x14600e178 <col:2, col:12> col:12 used sM 'float'
|   | |-VarDecl 0x14600e1f8 <col:2, col:16> col:16 used sY 'float'
|   | `-VarDecl 0x14600e278 <col:2, col:20> col:20 used sK 'float'
|   |-DeclStmt 0x146027590 <line:5:2, col:27>
|   | |-VarDecl 0x14600e338 <col:2, col:15> col:15 used w 'unsigned int'
|   | |-VarDecl 0x146027400 <col:2, col:18> col:18 used h 'unsigned int'
|   | |-VarDecl 0x146027480 <col:2, col:21> col:21 used max 'unsigned int'
|   | `-VarDecl 0x146027500 <col:2, col:26> col:26 used i 'unsigned int'
|   |-BinaryOperator 0x1460276d0 <line:7:2, col:22> 'unsigned int' contains-errors '='
|   | |-DeclRefExpr 0x1460275a8 <col:2> 'unsigned int' lvalue Var 0x14600e338 'w' 'unsigned int'
|   | `-CXXDependentScopeMemberExpr 0x146027688 <col:6, col:22> '<dependent type>' contains-errors lvalue .w
|   |   `-ArraySubscriptExpr 0x146027668 <col:6, col:20> '<dependent type>' contains-errors lvalue
|   |     |-ImplicitCastExpr 0x146027650 <col:6, col:13> '<dependent type>' contains-errors <LValueToRValue>
|   |     | `-CXXDependentScopeMemberExpr 0x1460275e8 <col:6, col:13> '<dependent type>' contains-errors lvalue ->comps
|   |     |   `-RecoveryExpr 0x1460275c8 <col:6> '<dependent type>' contains-errors lvalue
|   |     `-IntegerLiteral 0x146027630 <col:19> 'int' 0
|   |-BinaryOperator 0x146027818 <line:8:2, col:22> 'unsigned int' contains-errors '='
|   | |-DeclRefExpr 0x1460276f0 <col:2> 'unsigned int' lvalue Var 0x146027400 'h' 'unsigned int'
|   | `-CXXDependentScopeMemberExpr 0x1460277d0 <col:6, col:22> '<dependent type>' contains-errors lvalue .h
|   |   `-ArraySubscriptExpr 0x1460277b0 <col:6, col:20> '<dependent type>' contains-errors lvalue
|   |     |-ImplicitCastExpr 0x146027798 <col:6, col:13> '<dependent type>' contains-errors <LValueToRValue>
|   |     | `-CXXDependentScopeMemberExpr 0x146027730 <col:6, col:13> '<dependent type>' contains-errors lvalue ->comps
|   |     |   `-RecoveryExpr 0x146027710 <col:6> '<dependent type>' contains-errors lvalue
|   |     `-IntegerLiteral 0x146027778 <col:19> 'int' 0
|   |-IfStmt 0x1460278f0 <line:10:2, col:26>
|   | |-BinaryOperator 0x1460278c0 <col:5, col:23> 'int' contains-errors '<'
|   | | |-CXXDependentScopeMemberExpr 0x146027858 <col:5, col:12> '<dependent type>' contains-errors lvalue ->numcomps
|   | | | `-RecoveryExpr 0x146027838 <col:5> '<dependent type>' contains-errors lvalue
|   | | `-IntegerLiteral 0x1460278a0 <col:23> 'int' 4
|   | `-ReturnStmt 0x1460278e0 <col:26>
|   |-BinaryOperator 0x1460279c0 <line:12:2, col:12> 'unsigned int' '='
|   | |-DeclRefExpr 0x146027910 <col:2> 'unsigned int' lvalue Var 0x146027480 'max' 'unsigned int'
|   | `-BinaryOperator 0x1460279a0 <col:8, col:12> 'unsigned int' '*'
|   |   |-ImplicitCastExpr 0x146027970 <col:8> 'unsigned int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x146027930 <col:8> 'unsigned int' lvalue Var 0x14600e338 'w' 'unsigned int'
|   |   `-ImplicitCastExpr 0x146027988 <col:12> 'unsigned int' <LValueToRValue>
|   |     `-DeclRefExpr 0x146027950 <col:12> 'unsigned int' lvalue Var 0x146027400 'h' 'unsigned int'
|   |-BinaryOperator 0x146027c68 <line:14:2, col:53> 'float' contains-errors '='
|   | |-DeclRefExpr 0x1460279e0 <col:2> 'float' lvalue Var 0x14600e0f8 'sC' 'float'
|   | `-BinaryOperator 0x146027c48 <col:7, col:53> 'float' contains-errors '/'
|   |   |-FloatingLiteral 0x146027a00 <col:7> 'float' 1.000000e+00
|   |   `-CStyleCastExpr 0x146027c20 <col:14, col:53> 'float' contains-errors <Dependent>
|   |     `-ParenExpr 0x146027c00 <col:21, col:53> '<dependent type>' contains-errors
|   |       `-BinaryOperator 0x146027ba8 <col:22, col:52> '<dependent type>' contains-errors '-'
|   |         |-ParenExpr 0x146027b68 <col:22, col:48> '<dependent type>' contains-errors
|   |         | `-BinaryOperator 0x146027b48 <col:23, col:44> '<dependent type>' contains-errors '<<'
|   |         |   |-IntegerLiteral 0x146027a20 <col:23> 'int' 1
|   |         |   `-CXXDependentScopeMemberExpr 0x146027b00 <col:28, col:44> '<dependent type>' contains-errors lvalue .prec
|   |         |     `-ArraySubscriptExpr 0x146027ae0 <col:28, col:42> '<dependent type>' contains-errors lvalue
|   |         |       |-ImplicitCastExpr 0x146027ac8 <col:28, col:35> '<dependent type>' contains-errors <LValueToRValue>
|   |         |       | `-CXXDependentScopeMemberExpr 0x146027a60 <col:28, col:35> '<dependent type>' contains-errors lvalue ->comps
|   |         |       |   `-RecoveryExpr 0x146027a40 <col:28> '<dependent type>' contains-errors lvalue
|   |         |       `-IntegerLiteral 0x146027aa8 <col:41> 'int' 0
|   |         `-IntegerLiteral 0x146027b88 <col:52> 'int' 1
|   |-BinaryOperator 0x146027f10 <line:15:2, col:53> 'float' contains-errors '='
|   | |-DeclRefExpr 0x146027c88 <col:2> 'float' lvalue Var 0x14600e178 'sM' 'float'
|   | `-BinaryOperator 0x146027ef0 <col:7, col:53> 'float' contains-errors '/'
|   |   |-FloatingLiteral 0x146027ca8 <col:7> 'float' 1.000000e+00
|   |   `-CStyleCastExpr 0x146027ec8 <col:14, col:53> 'float' contains-errors <Dependent>
|   |     `-ParenExpr 0x146027ea8 <col:21, col:53> '<dependent type>' contains-errors
|   |       `-BinaryOperator 0x146027e50 <col:22, col:52> '<dependent type>' contains-errors '-'
|   |         |-ParenExpr 0x146027e10 <col:22, col:48> '<dependent type>' contains-errors
|   |         | `-BinaryOperator 0x146027df0 <col:23, col:44> '<dependent type>' contains-errors '<<'
|   |         |   |-IntegerLiteral 0x146027cc8 <col:23> 'int' 1
|   |         |   `-CXXDependentScopeMemberExpr 0x146027da8 <col:28, col:44> '<dependent type>' contains-errors lvalue .prec
|   |         |     `-ArraySubscriptExpr 0x146027d88 <col:28, col:42> '<dependent type>' contains-errors lvalue
|   |         |       |-ImplicitCastExpr 0x146027d70 <col:28, col:35> '<dependent type>' contains-errors <LValueToRValue>
|   |         |       | `-CXXDependentScopeMemberExpr 0x146027d08 <col:28, col:35> '<dependent type>' contains-errors lvalue ->comps
|   |         |       |   `-RecoveryExpr 0x146027ce8 <col:28> '<dependent type>' contains-errors lvalue
|   |         |       `-IntegerLiteral 0x146027d50 <col:41> 'int' 1
|   |         `-IntegerLiteral 0x146027e30 <col:52> 'int' 1
|   |-BinaryOperator 0x1460281b8 <line:16:2, col:53> 'float' contains-errors '='
|   | |-DeclRefExpr 0x146027f30 <col:2> 'float' lvalue Var 0x14600e1f8 'sY' 'float'
|   | `-BinaryOperator 0x146028198 <col:7, col:53> 'float' contains-errors '/'
|   |   |-FloatingLiteral 0x146027f50 <col:7> 'float' 1.000000e+00
|   |   `-CStyleCastExpr 0x146028170 <col:14, col:53> 'float' contains-errors <Dependent>
|   |     `-ParenExpr 0x146028150 <col:21, col:53> '<dependent type>' contains-errors
|   |       `-BinaryOperator 0x1460280f8 <col:22, col:52> '<dependent type>' contains-errors '-'
|   |         |-ParenExpr 0x1460280b8 <col:22, col:48> '<dependent type>' contains-errors
|   |         | `-BinaryOperator 0x146028098 <col:23, col:44> '<dependent type>' contains-errors '<<'
|   |         |   |-IntegerLiteral 0x146027f70 <col:23> 'int' 1
|   |         |   `-CXXDependentScopeMemberExpr 0x146028050 <col:28, col:44> '<dependent type>' contains-errors lvalue .prec
|   |         |     `-ArraySubscriptExpr 0x146028030 <col:28, col:42> '<dependent type>' contains-errors lvalue
|   |         |       |-ImplicitCastExpr 0x146028018 <col:28, col:35> '<dependent type>' contains-errors <LValueToRValue>
|   |         |       | `-CXXDependentScopeMemberExpr 0x146027fb0 <col:28, col:35> '<dependent type>' contains-errors lvalue ->comps
|   |         |       |   `-RecoveryExpr 0x146027f90 <col:28> '<dependent type>' contains-errors lvalue
|   |         |       `-IntegerLiteral 0x146027ff8 <col:41> 'int' 2
|   |         `-IntegerLiteral 0x1460280d8 <col:52> 'int' 1
|   |-BinaryOperator 0x146029468 <line:17:2, col:53> 'float' contains-errors '='
|   | |-DeclRefExpr 0x1460281d8 <col:2> 'float' lvalue Var 0x14600e278 'sK' 'float'
|   | `-BinaryOperator 0x146029448 <col:7, col:53> 'float' contains-errors '/'
|   |   |-FloatingLiteral 0x1460281f8 <col:7> 'float' 1.000000e+00
|   |   `-CStyleCastExpr 0x146029420 <col:14, col:53> 'float' contains-errors <Dependent>
|   |     `-ParenExpr 0x146029400 <col:21, col:53> '<dependent type>' contains-errors
|   |       `-BinaryOperator 0x1460283a0 <col:22, col:52> '<dependent type>' contains-errors '-'
|   |         |-ParenExpr 0x146028360 <col:22, col:48> '<dependent type>' contains-errors
|   |         | `-BinaryOperator 0x146028340 <col:23, col:44> '<dependent type>' contains-errors '<<'
|   |         |   |-IntegerLiteral 0x146028218 <col:23> 'int' 1
|   |         |   `-CXXDependentScopeMemberExpr 0x1460282f8 <col:28, col:44> '<dependent type>' contains-errors lvalue .prec
|   |         |     `-ArraySubscriptExpr 0x1460282d8 <col:28, col:42> '<dependent type>' contains-errors lvalue
|   |         |       |-ImplicitCastExpr 0x1460282c0 <col:28, col:35> '<dependent type>' contains-errors <LValueToRValue>
|   |         |       | `-CXXDependentScopeMemberExpr 0x146028258 <col:28, col:35> '<dependent type>' contains-errors lvalue ->comps
|   |         |       |   `-RecoveryExpr 0x146028238 <col:28> '<dependent type>' contains-errors lvalue
|   |         |       `-IntegerLiteral 0x1460282a0 <col:41> 'int' 3
|   |         `-IntegerLiteral 0x146028380 <col:52> 'int' 1
|   |-ForStmt 0x14602b2b0 <line:19:2, line:37:2>
|   | |-BinaryOperator 0x1460294e0 <line:19:6, col:10> 'unsigned int' '='
|   | | |-DeclRefExpr 0x146029488 <col:6> 'unsigned int' lvalue Var 0x146027500 'i' 'unsigned int'
|   | | `-ImplicitCastExpr 0x1460294c8 <col:10> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x1460294a8 <col:10> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x146029570 <col:13, col:17> 'int' '<'
|   | | |-ImplicitCastExpr 0x146029540 <col:13> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x146029500 <col:13> 'unsigned int' lvalue Var 0x146027500 'i' 'unsigned int'
|   | | `-ImplicitCastExpr 0x146029558 <col:17> 'unsigned int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x146029520 <col:17> 'unsigned int' lvalue Var 0x146027480 'max' 'unsigned int'
|   | |-UnaryOperator 0x1460295b0 <col:22, col:24> 'unsigned int' prefix '++'
|   | | `-DeclRefExpr 0x146029590 <col:24> 'unsigned int' lvalue Var 0x146027500 'i' 'unsigned int'
|   | `-CompoundStmt 0x14602b248 <line:20:2, line:37:2>
|   |   |-BinaryOperator 0x146029838 <line:22:3, col:42> 'float' contains-errors '='
|   |   | |-DeclRefExpr 0x1460295c8 <col:3> 'float' lvalue Var 0x14600deb8 'C' 'float'
|   |   | `-BinaryOperator 0x146029818 <col:7, col:42> 'float' contains-errors '*'
|   |   |   |-CStyleCastExpr 0x1460297b8 <col:7, col:38> 'float' contains-errors <Dependent>
|   |   |   | `-ParenExpr 0x146029798 <col:14, col:38> '<dependent type>' contains-errors lvalue
|   |   |   |   `-ArraySubscriptExpr 0x146029740 <col:15, col:37> '<dependent type>' contains-errors lvalue
|   |   |   |     |-ImplicitCastExpr 0x146029710 <col:15, col:31> '<dependent type>' contains-errors <LValueToRValue>
|   |   |   |     | `-CXXDependentScopeMemberExpr 0x1460296a8 <col:15, col:31> '<dependent type>' contains-errors lvalue .data
|   |   |   |     |   `-ArraySubscriptExpr 0x146029688 <col:15, col:29> '<dependent type>' contains-errors lvalue
|   |   |   |     |     |-ImplicitCastExpr 0x146029670 <col:15, col:22> '<dependent type>' contains-errors <LValueToRValue>
|   |   |   |     |     | `-CXXDependentScopeMemberExpr 0x146029608 <col:15, col:22> '<dependent type>' contains-errors lvalue ->comps
|   |   |   |     |     |   `-RecoveryExpr 0x1460295e8 <col:15> '<dependent type>' contains-errors lvalue
|   |   |   |     |     `-IntegerLiteral 0x146029650 <col:28> 'int' 0
|   |   |   |     `-ImplicitCastExpr 0x146029728 <col:36> 'unsigned int' <LValueToRValue>
|   |   |   |       `-DeclRefExpr 0x1460296f0 <col:36> 'unsigned int' lvalue Var 0x146027500 'i' 'unsigned int'
|   |   |   `-ImplicitCastExpr 0x146029800 <col:42> 'float' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1460297e0 <col:42> 'float' lvalue Var 0x14600e0f8 'sC' 'float'
|   |   |-BinaryOperator 0x146029ac8 <line:23:3, col:42> 'float' contains-errors '='
|   |   | |-DeclRefExpr 0x146029858 <col:3> 'float' lvalue Var 0x14600df38 'M' 'float'
|   |   | `-BinaryOperator 0x146029aa8 <col:7, col:42> 'float' contains-errors '*'
|   |   |   |-CStyleCastExpr 0x146029a48 <col:7, col:38> 'float' contains-errors <Dependent>
|   |   |   | `-ParenExpr 0x146029a28 <col:14, col:38> '<dependent type>' contains-errors lvalue
|   |   |   |   `-ArraySubscriptExpr 0x1460299d0 <col:15, col:37> '<dependent type>' contains-errors lvalue
|   |   |   |     |-ImplicitCastExpr 0x1460299a0 <col:15, col:31> '<dependent type>' contains-errors <LValueToRValue>
|   |   |   |     | `-CXXDependentScopeMemberExpr 0x146029938 <col:15, col:31> '<dependent type>' contains-errors lvalue .data
|   |   |   |     |   `-ArraySubscriptExpr 0x146029918 <col:15, col:29> '<dependent type>' contains-errors lvalue
|   |   |   |     |     |-ImplicitCastExpr 0x146029900 <col:15, col:22> '<dependent type>' contains-errors <LValueToRValue>
|   |   |   |     |     | `-CXXDependentScopeMemberExpr 0x146029898 <col:15, col:22> '<dependent type>' contains-errors lvalue ->comps
|   |   |   |     |     |   `-RecoveryExpr 0x146029878 <col:15> '<dependent type>' contains-errors lvalue
|   |   |   |     |     `-IntegerLiteral 0x1460298e0 <col:28> 'int' 1
|   |   |   |     `-ImplicitCastExpr 0x1460299b8 <col:36> 'unsigned int' <LValueToRValue>
|   |   |   |       `-DeclRefExpr 0x146029980 <col:36> 'unsigned int' lvalue Var 0x146027500 'i' 'unsigned int'
|   |   |   `-ImplicitCastExpr 0x146029a90 <col:42> 'float' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x146029a70 <col:42> 'float' lvalue Var 0x14600e178 'sM' 'float'
|   |   |-BinaryOperator 0x146029d58 <line:24:3, col:42> 'float' contains-errors '='
|   |   | |-DeclRefExpr 0x146029ae8 <col:3> 'float' lvalue Var 0x14600dfb8 'Y' 'float'
|   |   | `-BinaryOperator 0x146029d38 <col:7, col:42> 'float' contains-errors '*'
|   |   |   |-CStyleCastExpr 0x146029cd8 <col:7, col:38> 'float' contains-errors <Dependent>
|   |   |   | `-ParenExpr 0x146029cb8 <col:14, col:38> '<dependent type>' contains-errors lvalue
|   |   |   |   `-ArraySubscriptExpr 0x146029c60 <col:15, col:37> '<dependent type>' contains-errors lvalue
|   |   |   |     |-ImplicitCastExpr 0x146029c30 <col:15, col:31> '<dependent type>' contains-errors <LValueToRValue>
|   |   |   |     | `-CXXDependentScopeMemberExpr 0x146029bc8 <col:15, col:31> '<dependent type>' contains-errors lvalue .data
|   |   |   |     |   `-ArraySubscriptExpr 0x146029ba8 <col:15, col:29> '<dependent type>' contains-errors lvalue
|   |   |   |     |     |-ImplicitCastExpr 0x146029b90 <col:15, col:22> '<dependent type>' contains-errors <LValueToRValue>
|   |   |   |     |     | `-CXXDependentScopeMemberExpr 0x146029b28 <col:15, col:22> '<dependent type>' contains-errors lvalue ->comps
|   |   |   |     |     |   `-RecoveryExpr 0x146029b08 <col:15> '<dependent type>' contains-errors lvalue
|   |   |   |     |     `-IntegerLiteral 0x146029b70 <col:28> 'int' 2
|   |   |   |     `-ImplicitCastExpr 0x146029c48 <col:36> 'unsigned int' <LValueToRValue>
|   |   |   |       `-DeclRefExpr 0x146029c10 <col:36> 'unsigned int' lvalue Var 0x146027500 'i' 'unsigned int'
|   |   |   `-ImplicitCastExpr 0x146029d20 <col:42> 'float' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x146029d00 <col:42> 'float' lvalue Var 0x14600e1f8 'sY' 'float'
|   |   |-BinaryOperator 0x146029fe8 <line:25:3, col:42> 'float' contains-errors '='
|   |   | |-DeclRefExpr 0x146029d78 <col:3> 'float' lvalue Var 0x14600e038 'K' 'float'
|   |   | `-BinaryOperator 0x146029fc8 <col:7, col:42> 'float' contains-errors '*'
|   |   |   |-CStyleCastExpr 0x146029f68 <col:7, col:38> 'float' contains-errors <Dependent>
|   |   |   | `-ParenExpr 0x146029f48 <col:14, col:38> '<dependent type>' contains-errors lvalue
|   |   |   |   `-ArraySubscriptExpr 0x146029ef0 <col:15, col:37> '<dependent type>' contains-errors lvalue
|   |   |   |     |-ImplicitCastExpr 0x146029ec0 <col:15, col:31> '<dependent type>' contains-errors <LValueToRValue>
|   |   |   |     | `-CXXDependentScopeMemberExpr 0x146029e58 <col:15, col:31> '<dependent type>' contains-errors lvalue .data
|   |   |   |     |   `-ArraySubscriptExpr 0x146029e38 <col:15, col:29> '<dependent type>' contains-errors lvalue
|   |   |   |     |     |-ImplicitCastExpr 0x146029e20 <col:15, col:22> '<dependent type>' contains-errors <LValueToRValue>
|   |   |   |     |     | `-CXXDependentScopeMemberExpr 0x146029db8 <col:15, col:22> '<dependent type>' contains-errors lvalue ->comps
|   |   |   |     |     |   `-RecoveryExpr 0x146029d98 <col:15> '<dependent type>' contains-errors lvalue
|   |   |   |     |     `-IntegerLiteral 0x146029e00 <col:28> 'int' 3
|   |   |   |     `-ImplicitCastExpr 0x146029ed8 <col:36> 'unsigned int' <LValueToRValue>
|   |   |   |       `-DeclRefExpr 0x146029ea0 <col:36> 'unsigned int' lvalue Var 0x146027500 'i' 'unsigned int'
|   |   |   `-ImplicitCastExpr 0x146029fb0 <col:42> 'float' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x146029f90 <col:42> 'float' lvalue Var 0x14600e278 'sK' 'float'
|   |   |-BinaryOperator 0x14602a0a0 <line:28:3, col:14> 'float' '='
|   |   | |-DeclRefExpr 0x14602a008 <col:3> 'float' lvalue Var 0x14600deb8 'C' 'float'
|   |   | `-BinaryOperator 0x14602a080 <col:7, col:14> 'float' '-'
|   |   |   |-FloatingLiteral 0x14602a028 <col:7> 'float' 1.000000e+00
|   |   |   `-ImplicitCastExpr 0x14602a068 <col:14> 'float' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x14602a048 <col:14> 'float' lvalue Var 0x14600deb8 'C' 'float'
|   |   |-BinaryOperator 0x14602a158 <line:29:3, col:14> 'float' '='
|   |   | |-DeclRefExpr 0x14602a0c0 <col:3> 'float' lvalue Var 0x14600df38 'M' 'float'
|   |   | `-BinaryOperator 0x14602a138 <col:7, col:14> 'float' '-'
|   |   |   |-FloatingLiteral 0x14602a0e0 <col:7> 'float' 1.000000e+00
|   |   |   `-ImplicitCastExpr 0x14602a120 <col:14> 'float' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x14602a100 <col:14> 'float' lvalue Var 0x14600df38 'M' 'float'
|   |   |-BinaryOperator 0x14602a210 <line:30:3, col:14> 'float' '='
|   |   | |-DeclRefExpr 0x14602a178 <col:3> 'float' lvalue Var 0x14600dfb8 'Y' 'float'
|   |   | `-BinaryOperator 0x14602a1f0 <col:7, col:14> 'float' '-'
|   |   |   |-FloatingLiteral 0x14602a198 <col:7> 'float' 1.000000e+00
|   |   |   `-ImplicitCastExpr 0x14602a1d8 <col:14> 'float' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x14602a1b8 <col:14> 'float' lvalue Var 0x14600dfb8 'Y' 'float'
|   |   |-BinaryOperator 0x14602a2c8 <line:31:3, col:14> 'float' '='
|   |   | |-DeclRefExpr 0x14602a230 <col:3> 'float' lvalue Var 0x14600e038 'K' 'float'
|   |   | `-BinaryOperator 0x14602a2a8 <col:7, col:14> 'float' '-'
|   |   |   |-FloatingLiteral 0x14602a250 <col:7> 'float' 1.000000e+00
|   |   |   `-ImplicitCastExpr 0x14602a290 <col:14> 'float' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x14602a270 <col:14> 'float' lvalue Var 0x14600e038 'K' 'float'
|   |   |-BinaryOperator 0x14602ac08 <line:34:3, col:49> '<dependent type>' contains-errors '='
|   |   | |-ArraySubscriptExpr 0x14602aa98 <col:3, col:25> '<dependent type>' contains-errors lvalue
|   |   | | |-ImplicitCastExpr 0x14602aa68 <col:3, col:19> '<dependent type>' contains-errors <LValueToRValue>
|   |   | | | `-CXXDependentScopeMemberExpr 0x14602aa00 <col:3, col:19> '<dependent type>' contains-errors lvalue .data
|   |   | | |   `-ArraySubscriptExpr 0x14602a3b0 <col:3, col:17> '<dependent type>' contains-errors lvalue
|   |   | | |     |-ImplicitCastExpr 0x14602a398 <col:3, col:10> '<dependent type>' contains-errors <LValueToRValue>
|   |   | | |     | `-CXXDependentScopeMemberExpr 0x14602a330 <col:3, col:10> '<dependent type>' contains-errors lvalue ->comps
|   |   | | |     |   `-RecoveryExpr 0x14602a308 <col:3> '<dependent type>' contains-errors lvalue
|   |   | | |     |     `-DeclRefExpr 0x14602a2e8 <col:3> 'int *' lvalue ParmVar 0x14600dd28 'image' 'int *'
|   |   | | |     `-IntegerLiteral 0x14602a378 <col:16> 'int' 0
|   |   | | `-ImplicitCastExpr 0x14602aa80 <col:24> 'unsigned int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x14602aa48 <col:24> 'unsigned int' lvalue Var 0x146027500 'i' 'unsigned int'
|   |   | `-CStyleCastExpr 0x14602abe0 <col:29, col:49> 'int' <FloatingToIntegral>
|   |   |   `-ParenExpr 0x14602abc0 <col:34, col:49> 'float'
|   |   |     `-BinaryOperator 0x14602ab68 <col:35, col:48> 'float' '*'
|   |   |       |-BinaryOperator 0x14602ab10 <col:35, col:44> 'float' '*'
|   |   |       | |-FloatingLiteral 0x14602aab8 <col:35> 'float' 2.550000e+02
|   |   |       | `-ImplicitCastExpr 0x14602aaf8 <col:44> 'float' <LValueToRValue>
|   |   |       |   `-DeclRefExpr 0x14602aad8 <col:44> 'float' lvalue Var 0x14600deb8 'C' 'float'
|   |   |       `-ImplicitCastExpr 0x14602ab50 <col:48> 'float' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x14602ab30 <col:48> 'float' lvalue Var 0x14600e038 'K' 'float'
|   |   |-BinaryOperator 0x14602af18 <line:35:3, col:49> '<dependent type>' contains-errors '='
|   |   | |-ArraySubscriptExpr 0x14602ada8 <col:3, col:25> '<dependent type>' contains-errors lvalue
|   |   | | |-ImplicitCastExpr 0x14602ad78 <col:3, col:19> '<dependent type>' contains-errors <LValueToRValue>
|   |   | | | `-CXXDependentScopeMemberExpr 0x14602ad10 <col:3, col:19> '<dependent type>' contains-errors lvalue .data
|   |   | | |   `-ArraySubscriptExpr 0x14602acf0 <col:3, col:17> '<dependent type>' contains-errors lvalue
|   |   | | |     |-ImplicitCastExpr 0x14602acd8 <col:3, col:10> '<dependent type>' contains-errors <LValueToRValue>
|   |   | | |     | `-CXXDependentScopeMemberExpr 0x14602ac70 <col:3, col:10> '<dependent type>' contains-errors lvalue ->comps
|   |   | | |     |   `-RecoveryExpr 0x14602ac48 <col:3> '<dependent type>' contains-errors lvalue
|   |   | | |     |     `-DeclRefExpr 0x14602ac28 <col:3> 'int *' lvalue ParmVar 0x14600dd28 'image' 'int *'
|   |   | | |     `-IntegerLiteral 0x14602acb8 <col:16> 'int' 1
|   |   | | `-ImplicitCastExpr 0x14602ad90 <col:24> 'unsigned int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x14602ad58 <col:24> 'unsigned int' lvalue Var 0x146027500 'i' 'unsigned int'
|   |   | `-CStyleCastExpr 0x14602aef0 <col:29, col:49> 'int' <FloatingToIntegral>
|   |   |   `-ParenExpr 0x14602aed0 <col:34, col:49> 'float'
|   |   |     `-BinaryOperator 0x14602ae78 <col:35, col:48> 'float' '*'
|   |   |       |-BinaryOperator 0x14602ae20 <col:35, col:44> 'float' '*'
|   |   |       | |-FloatingLiteral 0x14602adc8 <col:35> 'float' 2.550000e+02
|   |   |       | `-ImplicitCastExpr 0x14602ae08 <col:44> 'float' <LValueToRValue>
|   |   |       |   `-DeclRefExpr 0x14602ade8 <col:44> 'float' lvalue Var 0x14600df38 'M' 'float'
|   |   |       `-ImplicitCastExpr 0x14602ae60 <col:48> 'float' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x14602ae40 <col:48> 'float' lvalue Var 0x14600e038 'K' 'float'
|   |   `-BinaryOperator 0x14602b228 <line:36:3, col:49> '<dependent type>' contains-errors '='
|   |     |-ArraySubscriptExpr 0x14602b0b8 <col:3, col:25> '<dependent type>' contains-errors lvalue
|   |     | |-ImplicitCastExpr 0x14602b088 <col:3, col:19> '<dependent type>' contains-errors <LValueToRValue>
|   |     | | `-CXXDependentScopeMemberExpr 0x14602b020 <col:3, col:19> '<dependent type>' contains-errors lvalue .data
|   |     | |   `-ArraySubscriptExpr 0x14602b000 <col:3, col:17> '<dependent type>' contains-errors lvalue
|   |     | |     |-ImplicitCastExpr 0x14602afe8 <col:3, col:10> '<dependent type>' contains-errors <LValueToRValue>
|   |     | |     | `-CXXDependentScopeMemberExpr 0x14602af80 <col:3, col:10> '<dependent type>' contains-errors lvalue ->comps
|   |     | |     |   `-RecoveryExpr 0x14602af58 <col:3> '<dependent type>' contains-errors lvalue
|   |     | |     |     `-DeclRefExpr 0x14602af38 <col:3> 'int *' lvalue ParmVar 0x14600dd28 'image' 'int *'
|   |     | |     `-IntegerLiteral 0x14602afc8 <col:16> 'int' 2
|   |     | `-ImplicitCastExpr 0x14602b0a0 <col:24> 'unsigned int' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x14602b068 <col:24> 'unsigned int' lvalue Var 0x146027500 'i' 'unsigned int'
|   |     `-CStyleCastExpr 0x14602b200 <col:29, col:49> 'int' <FloatingToIntegral>
|   |       `-ParenExpr 0x14602b1e0 <col:34, col:49> 'float'
|   |         `-BinaryOperator 0x14602b188 <col:35, col:48> 'float' '*'
|   |           |-BinaryOperator 0x14602b130 <col:35, col:44> 'float' '*'
|   |           | |-FloatingLiteral 0x14602b0d8 <col:35> 'float' 2.550000e+02
|   |           | `-ImplicitCastExpr 0x14602b118 <col:44> 'float' <LValueToRValue>
|   |           |   `-DeclRefExpr 0x14602b0f8 <col:44> 'float' lvalue Var 0x14600dfb8 'Y' 'float'
|   |           `-ImplicitCastExpr 0x14602b170 <col:48> 'float' <LValueToRValue>
|   |             `-DeclRefExpr 0x14602b150 <col:48> 'float' lvalue Var 0x14600e038 'K' 'float'
|   |-CallExpr 0x14602c200 <line:39:2, col:27> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x14602b8c0 <col:2> 'void (void *)' Function 0x14602b750 'free' 'void (void *)'
|   | `-CXXDependentScopeMemberExpr 0x14602b9a0 <col:7, col:23> '<dependent type>' contains-errors lvalue .data
|   |   `-ArraySubscriptExpr 0x14602b980 <col:7, col:21> '<dependent type>' contains-errors lvalue
|   |     |-ImplicitCastExpr 0x14602b968 <col:7, col:14> '<dependent type>' contains-errors <LValueToRValue>
|   |     | `-CXXDependentScopeMemberExpr 0x14602b900 <col:7, col:14> '<dependent type>' contains-errors lvalue ->comps
|   |     |   `-RecoveryExpr 0x14602b8e0 <col:7> '<dependent type>' contains-errors lvalue
|   |     `-IntegerLiteral 0x14602b948 <col:20> 'int' 3
|   |-BinaryOperator 0x14602c4b0 <col:30, col:53> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x14602c448 <col:30, col:46> '<dependent type>' contains-errors lvalue .data
|   | | `-ArraySubscriptExpr 0x14602c428 <col:30, col:44> '<dependent type>' contains-errors lvalue
|   | |   |-ImplicitCastExpr 0x14602c410 <col:30, col:37> '<dependent type>' contains-errors <LValueToRValue>
|   | |   | `-CXXDependentScopeMemberExpr 0x14602c270 <col:30, col:37> '<dependent type>' contains-errors lvalue ->comps
|   | |   |   `-RecoveryExpr 0x14602c248 <col:30> '<dependent type>' contains-errors lvalue
|   | |   |     `-DeclRefExpr 0x14602c228 <col:30> 'int *' lvalue ParmVar 0x14600dd28 'image' 'int *'
|   | |   `-IntegerLiteral 0x14602c2b8 <col:43> 'int' 3
|   | `-RecoveryExpr 0x14602c490 <col:53> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x14602c620 <line:40:2, col:25> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x14602c5b8 <col:2, col:18> '<dependent type>' contains-errors lvalue .prec
|   | | `-ArraySubscriptExpr 0x14602c598 <col:2, col:16> '<dependent type>' contains-errors lvalue
|   | |   |-ImplicitCastExpr 0x14602c580 <col:2, col:9> '<dependent type>' contains-errors <LValueToRValue>
|   | |   | `-CXXDependentScopeMemberExpr 0x14602c518 <col:2, col:9> '<dependent type>' contains-errors lvalue ->comps
|   | |   |   `-RecoveryExpr 0x14602c4f0 <col:2> '<dependent type>' contains-errors lvalue
|   | |   |     `-DeclRefExpr 0x14602c4d0 <col:2> 'int *' lvalue ParmVar 0x14600dd28 'image' 'int *'
|   | |   `-IntegerLiteral 0x14602c560 <col:15> 'int' 0
|   | `-IntegerLiteral 0x14602c600 <col:25> 'int' 8
|   |-BinaryOperator 0x14602c790 <line:41:2, col:25> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x14602c728 <col:2, col:18> '<dependent type>' contains-errors lvalue .prec
|   | | `-ArraySubscriptExpr 0x14602c708 <col:2, col:16> '<dependent type>' contains-errors lvalue
|   | |   |-ImplicitCastExpr 0x14602c6f0 <col:2, col:9> '<dependent type>' contains-errors <LValueToRValue>
|   | |   | `-CXXDependentScopeMemberExpr 0x14602c688 <col:2, col:9> '<dependent type>' contains-errors lvalue ->comps
|   | |   |   `-RecoveryExpr 0x14602c660 <col:2> '<dependent type>' contains-errors lvalue
|   | |   |     `-DeclRefExpr 0x14602c640 <col:2> 'int *' lvalue ParmVar 0x14600dd28 'image' 'int *'
|   | |   `-IntegerLiteral 0x14602c6d0 <col:15> 'int' 1
|   | `-IntegerLiteral 0x14602c770 <col:25> 'int' 8
|   |-BinaryOperator 0x14602c900 <line:42:2, col:25> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x14602c898 <col:2, col:18> '<dependent type>' contains-errors lvalue .prec
|   | | `-ArraySubscriptExpr 0x14602c878 <col:2, col:16> '<dependent type>' contains-errors lvalue
|   | |   |-ImplicitCastExpr 0x14602c860 <col:2, col:9> '<dependent type>' contains-errors <LValueToRValue>
|   | |   | `-CXXDependentScopeMemberExpr 0x14602c7f8 <col:2, col:9> '<dependent type>' contains-errors lvalue ->comps
|   | |   |   `-RecoveryExpr 0x14602c7d0 <col:2> '<dependent type>' contains-errors lvalue
|   | |   |     `-DeclRefExpr 0x14602c7b0 <col:2> 'int *' lvalue ParmVar 0x14600dd28 'image' 'int *'
|   | |   `-IntegerLiteral 0x14602c840 <col:15> 'int' 2
|   | `-IntegerLiteral 0x14602c8e0 <col:25> 'int' 8
|   |-CompoundAssignOperator 0x14602c9d0 <line:43:2, col:21> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   | |-CXXDependentScopeMemberExpr 0x14602c968 <col:2, col:9> '<dependent type>' contains-errors lvalue ->numcomps
|   | | `-RecoveryExpr 0x14602c940 <col:2> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x14602c920 <col:2> 'int *' lvalue ParmVar 0x14600dd28 'image' 'int *'
|   | `-IntegerLiteral 0x14602c9b0 <col:21> 'int' 1
|   |-BinaryOperator 0x14602cae8 <line:44:2, col:23> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x14602ca48 <col:2, col:9> '<dependent type>' contains-errors lvalue ->color_space
|   | | `-RecoveryExpr 0x14602ca20 <col:2> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x14602ca00 <col:2> 'int *' lvalue ParmVar 0x14600dd28 'image' 'int *'
|   | `-RecoveryExpr 0x14602cac8 <col:23> '<dependent type>' contains-errors lvalue
|   `-ForStmt 0x14602d948 <line:46:2, line:48:2>
|     |-BinaryOperator 0x14602cb60 <line:46:7, col:11> 'unsigned int' '='
|     | |-DeclRefExpr 0x14602cb08 <col:7> 'unsigned int' lvalue Var 0x146027500 'i' 'unsigned int'
|     | `-ImplicitCastExpr 0x14602cb48 <col:11> 'unsigned int' <IntegralCast>
|     |   `-IntegerLiteral 0x14602cb28 <col:11> 'int' 3
|     |-<<<NULL>>>
|     |-BinaryOperator 0x14602cc08 <col:14, col:25> 'int' contains-errors '<'
|     | |-DeclRefExpr 0x14602cb80 <col:14> 'unsigned int' lvalue Var 0x146027500 'i' 'unsigned int'
|     | `-CXXDependentScopeMemberExpr 0x14602cbc0 <col:18, col:25> '<dependent type>' contains-errors lvalue ->numcomps
|     |   `-RecoveryExpr 0x14602cba0 <col:18> '<dependent type>' contains-errors lvalue
|     |-UnaryOperator 0x14602cc48 <col:35, col:37> 'unsigned int' prefix '++'
|     | `-DeclRefExpr 0x14602cc28 <col:37> 'unsigned int' lvalue Var 0x146027500 'i' 'unsigned int'
|     `-CompoundStmt 0x14602d930 <col:40, line:48:2>
|       `-CallExpr 0x14602d8f8 <line:47:3, col:75> '<dependent type>' contains-errors
|         |-DeclRefExpr 0x14602cf28 <col:3> 'void *(void *, const void *, unsigned long)' Function 0x14602ccd8 'memcpy' 'void *(void *, const void *, unsigned long)'
|         |-UnaryOperator 0x14602d040 <col:10, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow
|         | `-ParenExpr 0x14602d020 <col:11, col:27> '<dependent type>' contains-errors lvalue
|         |   `-ArraySubscriptExpr 0x14602d000 <col:12, col:26> '<dependent type>' contains-errors lvalue
|         |     |-ImplicitCastExpr 0x14602cfd0 <col:12, col:19> '<dependent type>' contains-errors <LValueToRValue>
|         |     | `-CXXDependentScopeMemberExpr 0x14602cf68 <col:12, col:19> '<dependent type>' contains-errors lvalue ->comps
|         |     |   `-RecoveryExpr 0x14602cf48 <col:12> '<dependent type>' contains-errors lvalue
|         |     `-ImplicitCastExpr 0x14602cfe8 <col:25> 'unsigned int' <LValueToRValue>
|         |       `-DeclRefExpr 0x14602cfb0 <col:25> 'unsigned int' lvalue Var 0x146027500 'i' 'unsigned int'
|         |-UnaryOperator 0x14602d1a8 <col:30, col:49> '<dependent type>' contains-errors prefix '&' cannot overflow
|         | `-ParenExpr 0x14602d188 <col:31, col:49> '<dependent type>' contains-errors lvalue
|         |   `-ArraySubscriptExpr 0x14602d168 <col:32, col:48> '<dependent type>' contains-errors lvalue
|         |     |-ImplicitCastExpr 0x14602d150 <col:32, col:39> '<dependent type>' contains-errors <LValueToRValue>
|         |     | `-CXXDependentScopeMemberExpr 0x14602d078 <col:32, col:39> '<dependent type>' contains-errors lvalue ->comps
|         |     |   `-RecoveryExpr 0x14602d058 <col:32> '<dependent type>' contains-errors lvalue
|         |     `-BinaryOperator 0x14602d130 <col:45, col:47> 'unsigned int' '+'
|         |       |-ImplicitCastExpr 0x14602d100 <col:45> 'unsigned int' <LValueToRValue>
|         |       | `-DeclRefExpr 0x14602d0c0 <col:45> 'unsigned int' lvalue Var 0x146027500 'i' 'unsigned int'
|         |       `-ImplicitCastExpr 0x14602d118 <col:47> 'unsigned int' <IntegralCast>
|         |         `-IntegerLiteral 0x14602d0e0 <col:47> 'int' 1
|         `-UnaryExprOrTypeTraitExpr 0x14602d8d8 <col:52, col:74> 'unsigned long' contains-errors sizeof
|           `-ParenExpr 0x14602d8b8 <col:58, col:74> '<dependent type>' contains-errors lvalue
|             `-ArraySubscriptExpr 0x14602d898 <col:59, col:73> '<dependent type>' contains-errors lvalue
|               |-ImplicitCastExpr 0x14602d868 <col:59, col:66> '<dependent type>' contains-errors <LValueToRValue>
|               | `-CXXDependentScopeMemberExpr 0x14602d800 <col:59, col:66> '<dependent type>' contains-errors lvalue ->comps
|               |   `-RecoveryExpr 0x14602d1c0 <col:59> '<dependent type>' contains-errors lvalue
|               `-ImplicitCastExpr 0x14602d880 <col:72> 'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x14602d848 <col:72> 'unsigned int' lvalue Var 0x146027500 'i' 'unsigned int' non_odr_use_unevaluated
|-FunctionDecl 0x14602b750 <line:39:2> col:2 implicit used free 'void (void *)' extern
| |-ParmVarDecl 0x14602b850 <<invalid sloc>> <invalid sloc> 'void *'
| `-BuiltinAttr 0x14602b7f8 <<invalid sloc>> Implicit 873
`-FunctionDecl 0x14602ccd8 <line:47:3> col:3 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x14602cdd8 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x14602ce40 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x14602cea8 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x14602cd80 <<invalid sloc>> Implicit 882
