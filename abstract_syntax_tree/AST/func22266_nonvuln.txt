TranslationUnitDecl 0x14d055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14d0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14d055bd0 '__int128'
|-TypedefDecl 0x14d056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14d055bf0 'unsigned __int128'
|-TypedefDecl 0x14d80be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14d80bc00 'struct __NSConstantString_tag'
|   `-Record 0x14d056580 '__NSConstantString_tag'
|-TypedefDecl 0x14d80be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14d055d90 '__SVInt8_t'
|-TypedefDecl 0x14d80bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14d055db0 '__SVInt16_t'
|-TypedefDecl 0x14d80bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14d055dd0 '__SVInt32_t'
|-TypedefDecl 0x14d80bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14d055df0 '__SVInt64_t'
|-TypedefDecl 0x14d80c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14d055e10 '__SVUint8_t'
|-TypedefDecl 0x14d80c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14d055e30 '__SVUint16_t'
|-TypedefDecl 0x14d80c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14d055e50 '__SVUint32_t'
|-TypedefDecl 0x14d80c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14d055e70 '__SVUint64_t'
|-TypedefDecl 0x14d80c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14d055e90 '__SVFloat16_t'
|-TypedefDecl 0x14d80c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14d055eb0 '__SVFloat32_t'
|-TypedefDecl 0x14d80c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14d055ed0 '__SVFloat64_t'
|-TypedefDecl 0x14d80c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14d055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14d80c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14d055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14d80c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14d055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14d80c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14d055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14d80c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14d055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14d80c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14d055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14d80c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14d055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14d80c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14d055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14d80c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14d055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14d80c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14d056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14d80c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14d056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14d80c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14d056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14d80c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14d056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14d80c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14d056090 '__clang_svint8x3_t'
|-TypedefDecl 0x14d80c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14d0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14d80c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14d0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14d80c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14d0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14d80c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14d056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14d80ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14d056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14d80cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14d056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14d80cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14d056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14d80cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14d056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14d80d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14d0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14d80d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14d0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14d80d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14d0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14d80d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14d056210 '__clang_svint8x4_t'
|-TypedefDecl 0x14d80d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14d056230 '__clang_svint16x4_t'
|-TypedefDecl 0x14d80d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14d056250 '__clang_svint32x4_t'
|-TypedefDecl 0x14d80d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14d056270 '__clang_svint64x4_t'
|-TypedefDecl 0x14d80d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14d056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14d80d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14d0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14d80d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14d0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14d80d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14d0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14d80d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14d056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14d80d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14d056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14d80d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14d056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14d80d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14d056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14d80da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14d056390 '__SVBool_t'
|-TypedefDecl 0x14d80da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14d0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14d80dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14d0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14d80db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14d0563f0 '__SVCount_t'
|-TypedefDecl 0x14d80dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14d80dbb0 'char *'
|   `-BuiltinType 0x14d0556b0 'char'
|-TypedefDecl 0x14d80dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14d80dbb0 'char *'
|   `-BuiltinType 0x14d0556b0 'char'
|-FunctionDecl 0x14d80e108 <dataset_diviso_filec/func22266_nonvuln.c:1:1, line:39:1> line:1:1 mount_one 'int (const char *, const char *, const char *, const char *, char *, int, int)'
| |-ParmVarDecl 0x14d80dcd8 <col:12, col:24> col:24 used spec 'const char *'
| |-ParmVarDecl 0x14d80dd58 <col:30, col:42> col:42 used node 'const char *'
| |-ParmVarDecl 0x14d80ddd8 <col:48, col:60> col:60 used types 'const char *'
| |-ParmVarDecl 0x14d80de58 <line:2:5, col:17> col:17 used fstabopts 'const char *'
| |-ParmVarDecl 0x14d80ded8 <col:28, col:34> col:34 used cmdlineopts 'char *'
| |-ParmVarDecl 0x14d80df58 <col:47, col:51> col:51 used freq 'int'
| |-ParmVarDecl 0x14d80dfd8 <col:57, col:61> col:61 used pass 'int'
| `-CompoundStmt 0x14d82c3f0 <col:67, line:39:1>
|   |-DeclStmt 0x14d80e2b0 <line:3:2, col:19>
|   | `-VarDecl 0x14d80e248 <col:2, col:14> col:14 used nspec 'const char *'
|   |-DeclStmt 0x14d80e348 <line:4:2, col:12>
|   | `-VarDecl 0x14d80e2e0 <col:2, col:8> col:8 used opts 'char *'
|   |-BinaryOperator 0x14d826bc0 <line:7:2, col:28> 'char *' '='
|   | |-DeclRefExpr 0x14d80e360 <col:2> 'char *' lvalue Var 0x14d80e2e0 'opts' 'char *'
|   | `-ImplicitCastExpr 0x14d826788 <col:9, col:28> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x14d826748 <col:9, col:28> 'int'
|   |     |-ImplicitCastExpr 0x14d826730 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x14d8266b8 <col:9> 'int ()' Function 0x14d826600 'usersubst' 'int ()'
|   |     `-ImplicitCastExpr 0x14d826770 <col:19> 'const char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x14d8266d8 <col:19> 'const char *' lvalue ParmVar 0x14d80de58 'fstabopts' 'const char *'
|   |-BinaryOperator 0x14d826e08 <line:10:2, col:43> 'char *' contains-errors '='
|   | |-DeclRefExpr 0x14d826be0 <col:2> 'char *' lvalue Var 0x14d80e2e0 'opts' 'char *'
|   | `-CallExpr 0x14d826dd0 <col:9, col:43> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x14d826ce0 <col:9> 'int ()' Function 0x14d826c28 'append_opt' 'int ()'
|   |   |-DeclRefExpr 0x14d826d00 <col:20> 'char *' lvalue Var 0x14d80e2e0 'opts' 'char *'
|   |   |-DeclRefExpr 0x14d826d20 <col:26> 'char *' lvalue ParmVar 0x14d80ded8 'cmdlineopts' 'char *'
|   |   `-RecoveryExpr 0x14d826db0 <col:39> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x14d82b328 <line:12:2, line:26:2>
|   | |-BinaryOperator 0x14d8271b8 <line:12:6, col:59> 'int' contains-errors '&&'
|   | | |-BinaryOperator 0x14d827128 <col:6, col:24> 'int' contains-errors '&&'
|   | | | |-BinaryOperator 0x14d8270b8 <col:6, col:15> 'int' contains-errors '=='
|   | | | | |-DeclRefExpr 0x14d826e28 <col:6> 'const char *' lvalue ParmVar 0x14d80ddd8 'types' 'const char *'
|   | | | | `-RecoveryExpr 0x14d827098 <col:15> '<dependent type>' contains-errors lvalue
|   | | | `-UnaryOperator 0x14d827110 <col:23, col:24> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | |   `-ImplicitCastExpr 0x14d8270f8 <col:24> '<dependent type>' contains-errors <LValueToRValue>
|   | | |     `-RecoveryExpr 0x14d8270d8 <col:24> '<dependent type>' contains-errors lvalue
|   | | `-UnaryOperator 0x14d8271a0 <col:37, col:59> 'int' prefix '!' cannot overflow
|   | |   `-CallExpr 0x14d827160 <col:38, col:59> 'int'
|   | |     |-ImplicitCastExpr 0x14d827148 <col:38> 'int (*)()' <FunctionToPointerDecay>
|   | |     | `-DeclRefExpr 0x14d826fc8 <col:38> 'int ()' Function 0x14d826f10 'is_existing_file' 'int ()'
|   | |     `-ImplicitCastExpr 0x14d827188 <col:55> 'const char *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x14d826fe8 <col:55> 'const char *' lvalue ParmVar 0x14d80dcd8 'spec' 'const char *'
|   | `-CompoundStmt 0x14d82b310 <col:62, line:26:2>
|   |   `-IfStmt 0x14d82b2e0 <line:13:3, line:25:3> has_else
|   |     |-BinaryOperator 0x14d82a668 <line:13:7, col:29> 'int' contains-errors '!='
|   |     | |-CallExpr 0x14d82a600 <col:7, col:24> 'char *'
|   |     | | |-ImplicitCastExpr 0x14d8275c8 <col:7> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   |     | | | `-DeclRefExpr 0x14d827400 <col:7> 'char *(const char *, int)' Function 0x14d827220 'strchr' 'char *(const char *, int)'
|   |     | | |-ImplicitCastExpr 0x14d82a630 <col:15> 'const char *' <LValueToRValue>
|   |     | | | `-DeclRefExpr 0x14d827420 <col:15> 'const char *' lvalue ParmVar 0x14d80dcd8 'spec' 'const char *'
|   |     | | `-CharacterLiteral 0x14d827440 <col:21> 'int' 58
|   |     | `-RecoveryExpr 0x14d82a648 <col:29> '<dependent type>' contains-errors lvalue
|   |     |-CompoundStmt 0x14d82ac28 <col:35, line:19:3>
|   |     | |-BinaryOperator 0x14d82a740 <line:14:4, col:12> 'const char *' '='
|   |     | | |-DeclRefExpr 0x14d82a688 <col:4> 'const char *' lvalue ParmVar 0x14d80ddd8 'types' 'const char *'
|   |     | | `-ImplicitCastExpr 0x14d82a728 <col:12> 'const char *' <NoOp>
|   |     | |   `-ImplicitCastExpr 0x14d82a710 <col:12> 'char *' <ArrayToPointerDecay>
|   |     | |     `-StringLiteral 0x14d82a6f0 <col:12> 'char[4]' lvalue "STR"
|   |     | `-IfStmt 0x14d82ac08 <line:15:4, line:18:13>
|   |     |   |-RecoveryExpr 0x14d82a778 <line:15:8> '<dependent type>' contains-errors lvalue
|   |     |   `-CallExpr 0x14d82abc8 <line:16:5, line:18:13> 'int'
|   |     |     |-ImplicitCastExpr 0x14d82abb0 <line:16:5> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |     |     | `-DeclRefExpr 0x14d82a988 <col:5> 'int (const char *, ...)' Function 0x14d82a7e0 'printf' 'int (const char *, ...)'
|   |     |     `-ImplicitCastExpr 0x14d82abf0 <col:12, line:18:12> 'const char *' <IntegralToPointer>
|   |     |       `-CallExpr 0x14d82ab38 <line:16:12, line:18:12> 'int'
|   |     |         |-ImplicitCastExpr 0x14d82ab20 <line:16:12> 'int (*)()' <FunctionToPointerDecay>
|   |     |         | `-DeclRefExpr 0x14d82aa88 <col:12> 'int ()' Function 0x14d82a9d0 '_' 'int ()'
|   |     |         `-ImplicitCastExpr 0x14d82ab60 <col:14, line:18:7> 'char *' <ArrayToPointerDecay>
|   |     |           `-StringLiteral 0x14d82aaf0 <line:16:14, line:18:7> 'char[10]' lvalue "STRSTRSTR"
|   |     `-IfStmt 0x14d82b2c0 <line:19:10, line:25:3>
|   |       |-UnaryOperator 0x14d82b080 <line:19:13, col:36> 'int' prefix '!' cannot overflow
|   |       | `-CallExpr 0x14d82afe8 <col:14, col:36> 'int'
|   |       |   |-ImplicitCastExpr 0x14d82afd0 <col:14> 'int (*)(const char *, const char *, unsigned long)' <FunctionToPointerDecay>
|   |       |   | `-DeclRefExpr 0x14d82aee8 <col:14> 'int (const char *, const char *, unsigned long)' Function 0x14d82ac98 'strncmp' 'int (const char *, const char *, unsigned long)'
|   |       |   |-ImplicitCastExpr 0x14d82b020 <col:22> 'const char *' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x14d82af08 <col:22> 'const char *' lvalue ParmVar 0x14d80dcd8 'spec' 'const char *'
|   |       |   |-ImplicitCastExpr 0x14d82b050 <col:28> 'const char *' <NoOp>
|   |       |   | `-ImplicitCastExpr 0x14d82b038 <col:28> 'char *' <ArrayToPointerDecay>
|   |       |   |   `-StringLiteral 0x14d82af28 <col:28> 'char[4]' lvalue "STR"
|   |       |   `-ImplicitCastExpr 0x14d82b068 <col:35> 'unsigned long' <IntegralCast>
|   |       |     `-IntegerLiteral 0x14d82af48 <col:35> 'int' 2
|   |       `-CompoundStmt 0x14d82b2a0 <col:39, line:25:3>
|   |         |-BinaryOperator 0x14d82b108 <line:20:4, col:12> 'const char *' '='
|   |         | |-DeclRefExpr 0x14d82b098 <col:4> 'const char *' lvalue ParmVar 0x14d80ddd8 'types' 'const char *'
|   |         | `-ImplicitCastExpr 0x14d82b0f0 <col:12> 'const char *' <NoOp>
|   |         |   `-ImplicitCastExpr 0x14d82b0d8 <col:12> 'char *' <ArrayToPointerDecay>
|   |         |     `-StringLiteral 0x14d82b0b8 <col:12> 'char[4]' lvalue "STR"
|   |         `-IfStmt 0x14d82b280 <line:21:4, line:24:13>
|   |           |-RecoveryExpr 0x14d82b140 <line:21:8> '<dependent type>' contains-errors lvalue
|   |           `-CallExpr 0x14d82b240 <line:22:5, line:24:13> 'int'
|   |             |-ImplicitCastExpr 0x14d82b228 <line:22:5> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |             | `-DeclRefExpr 0x14d82b160 <col:5> 'int (const char *, ...)' Function 0x14d82a7e0 'printf' 'int (const char *, ...)'
|   |             `-ImplicitCastExpr 0x14d82b268 <col:12, line:24:12> 'const char *' <IntegralToPointer>
|   |               `-CallExpr 0x14d82b1e8 <line:22:12, line:24:12> 'int'
|   |                 |-ImplicitCastExpr 0x14d82b1d0 <line:22:12> 'int (*)()' <FunctionToPointerDecay>
|   |                 | `-DeclRefExpr 0x14d82b180 <col:12> 'int ()' Function 0x14d82a9d0 '_' 'int ()'
|   |                 `-ImplicitCastExpr 0x14d82b210 <col:14, line:24:7> 'char *' <ArrayToPointerDecay>
|   |                   `-StringLiteral 0x14d82b1a0 <line:22:14, line:24:7> 'char[10]' lvalue "STRSTRSTR"
|   |-IfStmt 0x14d82c0e0 <line:29:2, line:36:2>
|   | |-BinaryOperator 0x14d82be00 <line:29:6, line:32:34> 'int' contains-errors '||'
|   | | |-BinaryOperator 0x14d82b9e0 <line:29:6, col:15> 'int' contains-errors '=='
|   | | | |-DeclRefExpr 0x14d82b348 <col:6> 'const char *' lvalue ParmVar 0x14d80ddd8 'types' 'const char *'
|   | | | `-RecoveryExpr 0x14d82b9c0 <col:15> '<dependent type>' contains-errors lvalue
|   | | `-ParenExpr 0x14d82bde0 <col:23, line:32:34> 'int'
|   | |   `-BinaryOperator 0x14d82bdc0 <line:29:24, line:32:33> 'int' '&&'
|   | |     |-BinaryOperator 0x14d82bcc0 <line:29:24, line:31:33> 'int' '&&'
|   | |     | |-BinaryOperator 0x14d82bbc0 <line:29:24, line:30:33> 'int' '&&'
|   | |     | | |-CallExpr 0x14d82ba48 <line:29:24, col:47> 'int'
|   | |     | | | |-ImplicitCastExpr 0x14d82ba30 <col:24> 'int (*)(const char *, const char *, unsigned long)' <FunctionToPointerDecay>
|   | |     | | | | `-DeclRefExpr 0x14d82b3a0 <col:24> 'int (const char *, const char *, unsigned long)' Function 0x14d82ac98 'strncmp' 'int (const char *, const char *, unsigned long)'
|   | |     | | | |-ImplicitCastExpr 0x14d82ba80 <col:32> 'const char *' <LValueToRValue>
|   | |     | | | | `-DeclRefExpr 0x14d82b3c0 <col:32> 'const char *' lvalue ParmVar 0x14d80ddd8 'types' 'const char *'
|   | |     | | | |-ImplicitCastExpr 0x14d82bab0 <col:39> 'const char *' <NoOp>
|   | |     | | | | `-ImplicitCastExpr 0x14d82ba98 <col:39> 'char *' <ArrayToPointerDecay>
|   | |     | | | |   `-StringLiteral 0x14d82b3e0 <col:39> 'char[4]' lvalue "STR"
|   | |     | | | `-ImplicitCastExpr 0x14d82bac8 <col:46> 'unsigned long' <IntegralCast>
|   | |     | | |   `-IntegerLiteral 0x14d82b400 <col:46> 'int' 2
|   | |     | | `-CallExpr 0x14d82bb28 <line:30:10, col:33> 'int'
|   | |     | |   |-ImplicitCastExpr 0x14d82bb10 <col:10> 'int (*)(const char *, const char *, unsigned long)' <FunctionToPointerDecay>
|   | |     | |   | `-DeclRefExpr 0x14d82b500 <col:10> 'int (const char *, const char *, unsigned long)' Function 0x14d82ac98 'strncmp' 'int (const char *, const char *, unsigned long)'
|   | |     | |   |-ImplicitCastExpr 0x14d82bb60 <col:18> 'const char *' <LValueToRValue>
|   | |     | |   | `-DeclRefExpr 0x14d82b520 <col:18> 'const char *' lvalue ParmVar 0x14d80ddd8 'types' 'const char *'
|   | |     | |   |-ImplicitCastExpr 0x14d82bb90 <col:25> 'const char *' <NoOp>
|   | |     | |   | `-ImplicitCastExpr 0x14d82bb78 <col:25> 'char *' <ArrayToPointerDecay>
|   | |     | |   |   `-StringLiteral 0x14d82b540 <col:25> 'char[4]' lvalue "STR"
|   | |     | |   `-ImplicitCastExpr 0x14d82bba8 <col:32> 'unsigned long' <IntegralCast>
|   | |     | |     `-IntegerLiteral 0x14d82b560 <col:32> 'int' 3
|   | |     | `-CallExpr 0x14d82bc28 <line:31:10, col:33> 'int'
|   | |     |   |-ImplicitCastExpr 0x14d82bc10 <col:10> 'int (*)(const char *, const char *, unsigned long)' <FunctionToPointerDecay>
|   | |     |   | `-DeclRefExpr 0x14d82b680 <col:10> 'int (const char *, const char *, unsigned long)' Function 0x14d82ac98 'strncmp' 'int (const char *, const char *, unsigned long)'
|   | |     |   |-ImplicitCastExpr 0x14d82bc60 <col:18> 'const char *' <LValueToRValue>
|   | |     |   | `-DeclRefExpr 0x14d82b6a0 <col:18> 'const char *' lvalue ParmVar 0x14d80ddd8 'types' 'const char *'
|   | |     |   |-ImplicitCastExpr 0x14d82bc90 <col:25> 'const char *' <NoOp>
|   | |     |   | `-ImplicitCastExpr 0x14d82bc78 <col:25> 'char *' <ArrayToPointerDecay>
|   | |     |   |   `-StringLiteral 0x14d82b6c0 <col:25> 'char[4]' lvalue "STR"
|   | |     |   `-ImplicitCastExpr 0x14d82bca8 <col:32> 'unsigned long' <IntegralCast>
|   | |     |     `-IntegerLiteral 0x14d82b6e0 <col:32> 'int' 4
|   | |     `-CallExpr 0x14d82bd28 <line:32:10, col:33> 'int'
|   | |       |-ImplicitCastExpr 0x14d82bd10 <col:10> 'int (*)(const char *, const char *, unsigned long)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x14d82b800 <col:10> 'int (const char *, const char *, unsigned long)' Function 0x14d82ac98 'strncmp' 'int (const char *, const char *, unsigned long)'
|   | |       |-ImplicitCastExpr 0x14d82bd60 <col:18> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x14d82b820 <col:18> 'const char *' lvalue ParmVar 0x14d80ddd8 'types' 'const char *'
|   | |       |-ImplicitCastExpr 0x14d82bd90 <col:25> 'const char *' <NoOp>
|   | |       | `-ImplicitCastExpr 0x14d82bd78 <col:25> 'char *' <ArrayToPointerDecay>
|   | |       |   `-StringLiteral 0x14d82b840 <col:25> 'char[4]' lvalue "STR"
|   | |       `-ImplicitCastExpr 0x14d82bda8 <col:32> 'unsigned long' <IntegralCast>
|   | |         `-IntegerLiteral 0x14d82b860 <col:32> 'int' 5
|   | `-CompoundStmt 0x14d82c0c0 <col:37, line:36:2>
|   |   |-BinaryOperator 0x14d82bfd0 <line:33:3, col:31> 'const char *' '='
|   |   | |-DeclRefExpr 0x14d82be20 <col:3> 'const char *' lvalue Var 0x14d80e248 'nspec' 'const char *'
|   |   | `-ImplicitCastExpr 0x14d82bfb8 <col:11, col:31> 'const char *' <IntegralToPointer>
|   |   |   `-CallExpr 0x14d82bf78 <col:11, col:31> 'int'
|   |   |     |-ImplicitCastExpr 0x14d82bf60 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x14d82bf20 <col:11> 'int ()' Function 0x14d82be68 'spec_to_devname' 'int ()'
|   |   |     `-ImplicitCastExpr 0x14d82bfa0 <col:27> 'const char *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x14d82bf40 <col:27> 'const char *' lvalue ParmVar 0x14d80dcd8 'spec' 'const char *'
|   |   `-IfStmt 0x14d82c0a0 <line:34:3, line:35:11>
|   |     |-ImplicitCastExpr 0x14d82c010 <line:34:7> 'const char *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x14d82bff0 <col:7> 'const char *' lvalue Var 0x14d80e248 'nspec' 'const char *'
|   |     `-BinaryOperator 0x14d82c080 <line:35:4, col:11> 'const char *' '='
|   |       |-DeclRefExpr 0x14d82c028 <col:4> 'const char *' lvalue ParmVar 0x14d80dcd8 'spec' 'const char *'
|   |       `-ImplicitCastExpr 0x14d82c068 <col:11> 'const char *' <LValueToRValue>
|   |         `-DeclRefExpr 0x14d82c048 <col:11> 'const char *' lvalue Var 0x14d80e248 'nspec' 'const char *'
|   `-ReturnStmt 0x14d82c3e0 <line:38:2, col:62>
|     `-CallExpr 0x14d82c2f8 <col:9, col:62> 'int'
|       |-ImplicitCastExpr 0x14d82c2e0 <col:9> 'int (*)()' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x14d82c1e0 <col:9> 'int ()' Function 0x14d82c128 'try_mount_one' 'int ()'
|       |-ImplicitCastExpr 0x14d82c350 <col:24> 'const char *' <LValueToRValue>
|       | `-DeclRefExpr 0x14d82c200 <col:24> 'const char *' lvalue ParmVar 0x14d80dcd8 'spec' 'const char *'
|       |-ImplicitCastExpr 0x14d82c368 <col:30> 'const char *' <LValueToRValue>
|       | `-DeclRefExpr 0x14d82c220 <col:30> 'const char *' lvalue ParmVar 0x14d80dd58 'node' 'const char *'
|       |-ImplicitCastExpr 0x14d82c380 <col:36> 'const char *' <LValueToRValue>
|       | `-DeclRefExpr 0x14d82c240 <col:36> 'const char *' lvalue ParmVar 0x14d80ddd8 'types' 'const char *'
|       |-ImplicitCastExpr 0x14d82c398 <col:43> 'char *' <LValueToRValue>
|       | `-DeclRefExpr 0x14d82c260 <col:43> 'char *' lvalue Var 0x14d80e2e0 'opts' 'char *'
|       |-ImplicitCastExpr 0x14d82c3b0 <col:49> 'int' <LValueToRValue>
|       | `-DeclRefExpr 0x14d82c280 <col:49> 'int' lvalue ParmVar 0x14d80df58 'freq' 'int'
|       |-ImplicitCastExpr 0x14d82c3c8 <col:55> 'int' <LValueToRValue>
|       | `-DeclRefExpr 0x14d82c2a0 <col:55> 'int' lvalue ParmVar 0x14d80dfd8 'pass' 'int'
|       `-IntegerLiteral 0x14d82c2c0 <col:61> 'int' 0
|-FunctionDecl 0x14d827220 <line:13:7> col:7 implicit used strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x14d827320 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x14d827388 <<invalid sloc>> <invalid sloc> 'int'
| `-BuiltinAttr 0x14d8272c8 <<invalid sloc>> Implicit 893
|-FunctionDecl 0x14d82a7e0 <line:16:5> col:5 implicit used printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x14d82a8e0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-BuiltinAttr 0x14d82a888 <<invalid sloc>> Implicit 903
| `-FormatAttr 0x14d82a950 <col:5> Implicit printf 1 2
`-FunctionDecl 0x14d82ac98 <line:19:14> col:14 implicit used strncmp 'int (const char *, const char *, unsigned long)' extern
  |-ParmVarDecl 0x14d82ad98 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x14d82ae00 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x14d82ae68 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x14d82ad40 <<invalid sloc>> Implicit 888
