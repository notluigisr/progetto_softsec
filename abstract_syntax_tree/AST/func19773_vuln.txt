TranslationUnitDecl 0x120055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1200564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x120055bd0 '__int128'
|-TypedefDecl 0x120056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x120055bf0 'unsigned __int128'
|-TypedefDecl 0x10700be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x10700bc00 'struct __NSConstantString_tag'
|   `-Record 0x120056580 '__NSConstantString_tag'
|-TypedefDecl 0x10700be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x120055d90 '__SVInt8_t'
|-TypedefDecl 0x10700bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x120055db0 '__SVInt16_t'
|-TypedefDecl 0x10700bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x120055dd0 '__SVInt32_t'
|-TypedefDecl 0x10700bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x120055df0 '__SVInt64_t'
|-TypedefDecl 0x10700c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x120055e10 '__SVUint8_t'
|-TypedefDecl 0x10700c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x120055e30 '__SVUint16_t'
|-TypedefDecl 0x10700c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x120055e50 '__SVUint32_t'
|-TypedefDecl 0x10700c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x120055e70 '__SVUint64_t'
|-TypedefDecl 0x10700c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x120055e90 '__SVFloat16_t'
|-TypedefDecl 0x10700c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x120055eb0 '__SVFloat32_t'
|-TypedefDecl 0x10700c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x120055ed0 '__SVFloat64_t'
|-TypedefDecl 0x10700c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x120055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x10700c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x120055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x10700c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x120055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x10700c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x120055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x10700c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x120055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x10700c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x120055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x10700c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x120055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x10700c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x120055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x10700c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x120055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x10700c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x120056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x10700c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x120056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x10700c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x120056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x10700c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x120056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x10700c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x120056090 '__clang_svint8x3_t'
|-TypedefDecl 0x10700c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1200560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x10700c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1200560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x10700c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1200560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x10700c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x120056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x10700ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x120056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x10700cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x120056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x10700cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x120056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x10700cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x120056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x10700d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1200561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x10700d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1200561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x10700d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1200561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x10700d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x120056210 '__clang_svint8x4_t'
|-TypedefDecl 0x10700d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x120056230 '__clang_svint16x4_t'
|-TypedefDecl 0x10700d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x120056250 '__clang_svint32x4_t'
|-TypedefDecl 0x10700d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x120056270 '__clang_svint64x4_t'
|-TypedefDecl 0x10700d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x120056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x10700d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1200562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x10700d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1200562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x10700d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1200562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x10700d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x120056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x10700d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x120056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x10700d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x120056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x10700d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x120056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x10700da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x120056390 '__SVBool_t'
|-TypedefDecl 0x10700da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1200563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x10700dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1200563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x10700db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1200563f0 '__SVCount_t'
|-TypedefDecl 0x10700dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x10700dbb0 'char *'
|   `-BuiltinType 0x1200556b0 'char'
|-TypedefDecl 0x10700dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x10700dbb0 'char *'
|   `-BuiltinType 0x1200556b0 'char'
|-FunctionDecl 0x10700dfd8 <dataset_diviso_filec/func19773_vuln.c:1:1, line:46:1> line:1:19 invalid oidc_validate_post_logout_url 'int (int *, const char *, char **, char **)' static
| |-ParmVarDecl 0x10700dd28 <col:49, col:62> col:62 invalid r 'int *'
| |-ParmVarDecl 0x10700dda8 <col:65, col:77> col:77 used url 'const char *'
| |-ParmVarDecl 0x10700de58 <line:2:3, col:10> col:10 used err_str 'char **'
| |-ParmVarDecl 0x10700ded8 <col:19, col:26> col:26 used err_desc 'char **'
| `-CompoundStmt 0x10702af50 <col:36, line:46:1>
|   |-DeclStmt 0x10700e158 <line:4:2, col:27>
|   | `-VarDecl 0x10700e0b8 <col:2, col:23> col:14 used c_host 'const char *' cinit
|   |   `-RecoveryExpr 0x10700e138 <col:23> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x1070286c8 <line:6:2, line:11:2>
|   | |-BinaryOperator 0x107027f50 <line:6:6, col:43> 'int' contains-errors '!='
|   | | |-CallExpr 0x107027ef8 <col:6, col:38> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x10700e2d0 <col:6> 'int ()' Function 0x10700e218 'apr_uri_parse' 'int ()'
|   | | | |-CXXDependentScopeMemberExpr 0x10700e310 <col:20, col:23> '<dependent type>' contains-errors lvalue ->pool
|   | | | | `-RecoveryExpr 0x10700e2f0 <col:20> '<dependent type>' contains-errors lvalue
|   | | | |-DeclRefExpr 0x10700e358 <col:29> 'const char *' lvalue ParmVar 0x10700dda8 'url' 'const char *'
|   | | | `-UnaryOperator 0x107027ee0 <col:34, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | |   `-RecoveryExpr 0x107027ec0 <col:35> '<dependent type>' contains-errors lvalue
|   | | `-RecoveryExpr 0x107027f30 <col:43> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x107028698 <col:56, line:11:2>
|   |   |-BinaryOperator 0x1070281c0 <line:7:3, col:40> 'char *' contains-errors '='
|   |   | |-UnaryOperator 0x107027fa8 <col:3, col:4> 'char *' lvalue prefix '*' cannot overflow
|   |   | | `-ImplicitCastExpr 0x107027f90 <col:4> 'char **' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x107027f70 <col:4> 'char **' lvalue ParmVar 0x10700de58 'err_str' 'char **'
|   |   | `-CallExpr 0x107028190 <col:14, col:40> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x1070280a0 <col:14> 'int ()' Function 0x107027fe8 'apr_pstrdup' 'int ()'
|   |   |   |-CXXDependentScopeMemberExpr 0x1070280e0 <col:26, col:29> '<dependent type>' contains-errors lvalue ->pool
|   |   |   | `-RecoveryExpr 0x1070280c0 <col:26> '<dependent type>' contains-errors lvalue
|   |   |   `-StringLiteral 0x107028170 <col:35> 'char[4]' lvalue "STR"
|   |   |-BinaryOperator 0x107028410 <line:8:3, col:47> 'char *' contains-errors '='
|   |   | |-UnaryOperator 0x107028218 <col:3, col:4> 'char *' lvalue prefix '*' cannot overflow
|   |   | | `-ImplicitCastExpr 0x107028200 <col:4> 'char **' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1070281e0 <col:4> 'char **' lvalue ParmVar 0x10700ded8 'err_desc' 'char **'
|   |   | `-CallExpr 0x1070283d8 <col:15, col:47> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x107028310 <col:15> 'int ()' Function 0x107028258 'apr_psprintf' 'int ()'
|   |   |   |-CXXDependentScopeMemberExpr 0x107028350 <col:28, col:31> '<dependent type>' contains-errors lvalue ->pool
|   |   |   | `-RecoveryExpr 0x107028330 <col:28> '<dependent type>' contains-errors lvalue
|   |   |   |-StringLiteral 0x107028398 <col:37> 'char[4]' lvalue "STR"
|   |   |   `-DeclRefExpr 0x1070283b8 <col:44> 'const char *' lvalue ParmVar 0x10700dda8 'url' 'const char *'
|   |   |-CallExpr 0x107028610 <line:9:3, col:43> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x107028510 <col:3> 'int ()' Function 0x107028458 'oidc_error' 'int ()'
|   |   | |-RecoveryExpr 0x107028530 <col:14> '<dependent type>' contains-errors lvalue
|   |   | |-StringLiteral 0x107028550 <col:17> 'char[4]' lvalue "STR"
|   |   | |-UnaryOperator 0x1070285a8 <col:24, col:25> 'char *' lvalue prefix '*' cannot overflow
|   |   | | `-ImplicitCastExpr 0x107028590 <col:25> 'char **' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x107028570 <col:25> 'char **' lvalue ParmVar 0x10700de58 'err_str' 'char **'
|   |   | `-UnaryOperator 0x1070285f8 <col:34, col:35> 'char *' lvalue prefix '*' cannot overflow
|   |   |   `-ImplicitCastExpr 0x1070285e0 <col:35> 'char **' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1070285c0 <col:35> 'char **' lvalue ParmVar 0x10700ded8 'err_desc' 'char **'
|   |   `-ReturnStmt 0x107028688 <line:10:3, col:10>
|   |     `-RecoveryExpr 0x107028668 <col:10> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x107028850 <line:13:2, col:38> 'const char *' contains-errors '='
|   | |-DeclRefExpr 0x1070286e8 <col:2> 'const char *' contains-errors lvalue Var 0x10700e0b8 'c_host' 'const char *'
|   | `-CallExpr 0x107028828 <col:11, col:38> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x1070287e8 <col:11> 'int ()' Function 0x107028730 'oidc_get_current_url_host' 'int ()'
|   |   `-RecoveryExpr 0x107028808 <col:37> '<dependent type>' contains-errors lvalue
|   `-IfStmt 0x10702ae00 <line:14:2, line:32:2> has_else
|     |-RecoveryExpr 0x10702a290 <line:14:6, line:16:47> '_Bool' contains-errors
|     |-CompoundStmt 0x10702a7d8 <col:50, line:24:2>
|     | |-BinaryOperator 0x10702a3d8 <line:17:3, col:40> 'char *' contains-errors '='
|     | | |-UnaryOperator 0x10702a2e8 <col:3, col:4> 'char *' lvalue prefix '*' cannot overflow
|     | | | `-ImplicitCastExpr 0x10702a2d0 <col:4> 'char **' <LValueToRValue>
|     | | |   `-DeclRefExpr 0x10702a2b0 <col:4> 'char **' lvalue ParmVar 0x10700de58 'err_str' 'char **'
|     | | `-CallExpr 0x10702a3a8 <col:14, col:40> '<dependent type>' contains-errors
|     | |   |-DeclRefExpr 0x10702a300 <col:14> 'int ()' Function 0x107027fe8 'apr_pstrdup' 'int ()'
|     | |   |-CXXDependentScopeMemberExpr 0x10702a340 <col:26, col:29> '<dependent type>' contains-errors lvalue ->pool
|     | |   | `-RecoveryExpr 0x10702a320 <col:26> '<dependent type>' contains-errors lvalue
|     | |   `-StringLiteral 0x10702a388 <col:35> 'char[4]' lvalue "STR"
|     | `-CallExpr 0x10702a798 <line:22:3, col:43> '<dependent type>' contains-errors
|     |   |-DeclRefExpr 0x10702a698 <col:3> 'int ()' Function 0x107028458 'oidc_error' 'int ()'
|     |   |-RecoveryExpr 0x10702a6b8 <col:14> '<dependent type>' contains-errors lvalue
|     |   |-StringLiteral 0x10702a6d8 <col:17> 'char[4]' lvalue "STR"
|     |   |-UnaryOperator 0x10702a730 <col:24, col:25> 'char *' lvalue prefix '*' cannot overflow
|     |   | `-ImplicitCastExpr 0x10702a718 <col:25> 'char **' <LValueToRValue>
|     |   |   `-DeclRefExpr 0x10702a6f8 <col:25> 'char **' lvalue ParmVar 0x10700de58 'err_str' 'char **'
|     |   `-UnaryOperator 0x10702a780 <col:34, col:35> 'char *' lvalue prefix '*' cannot overflow
|     |     `-ImplicitCastExpr 0x10702a768 <col:35> 'char **' <LValueToRValue>
|     |       `-DeclRefExpr 0x10702a748 <col:35> 'char **' lvalue ParmVar 0x10700ded8 'err_desc' 'char **'
|     `-IfStmt 0x10702ade0 <line:24:9, line:32:2>
|       |-BinaryOperator 0x10702a9a0 <line:24:13, col:35> 'int' '!='
|       | |-CallExpr 0x10702a8d8 <col:13, col:30> 'char *'
|       | | |-ImplicitCastExpr 0x10702a8c0 <col:13> 'char *(*)(const char *, const char *)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x10702a7f8 <col:13> 'char *(const char *, const char *)' Function 0x107029e00 'strstr' 'char *(const char *, const char *)'
|       | | |-ImplicitCastExpr 0x10702a908 <col:20> 'const char *' <LValueToRValue>
|       | | | `-DeclRefExpr 0x10702a818 <col:20> 'const char *' lvalue ParmVar 0x10700dda8 'url' 'const char *'
|       | | `-ImplicitCastExpr 0x10702a938 <col:25> 'const char *' <NoOp>
|       | |   `-ImplicitCastExpr 0x10702a920 <col:25> 'char *' <ArrayToPointerDecay>
|       | |     `-StringLiteral 0x10702a838 <col:25> 'char[4]' lvalue "STR"
|       | `-ImplicitCastExpr 0x10702a988 <col:35> 'char *' <BitCast>
|       |   `-ImplicitCastExpr 0x10702a970 <col:35> 'const char *' <LValueToRValue>
|       |     `-DeclRefExpr 0x10702a950 <col:35> 'const char *' lvalue ParmVar 0x10700dda8 'url' 'const char *'
|       `-CompoundStmt 0x10702adb8 <col:40, line:32:2>
|         |-BinaryOperator 0x10702aae8 <line:25:3, col:40> 'char *' contains-errors '='
|         | |-UnaryOperator 0x10702a9f8 <col:3, col:4> 'char *' lvalue prefix '*' cannot overflow
|         | | `-ImplicitCastExpr 0x10702a9e0 <col:4> 'char **' <LValueToRValue>
|         | |   `-DeclRefExpr 0x10702a9c0 <col:4> 'char **' lvalue ParmVar 0x10700de58 'err_str' 'char **'
|         | `-CallExpr 0x10702aab8 <col:14, col:40> '<dependent type>' contains-errors
|         |   |-DeclRefExpr 0x10702aa10 <col:14> 'int ()' Function 0x107027fe8 'apr_pstrdup' 'int ()'
|         |   |-CXXDependentScopeMemberExpr 0x10702aa50 <col:26, col:29> '<dependent type>' contains-errors lvalue ->pool
|         |   | `-RecoveryExpr 0x10702aa30 <col:26> '<dependent type>' contains-errors lvalue
|         |   `-StringLiteral 0x10702aa98 <col:35> 'char[4]' lvalue "STR"
|         |-BinaryOperator 0x10702ac58 <line:26:3, line:29:10> 'char *' contains-errors '='
|         | |-UnaryOperator 0x10702ab40 <line:26:3, col:4> 'char *' lvalue prefix '*' cannot overflow
|         | | `-ImplicitCastExpr 0x10702ab28 <col:4> 'char **' <LValueToRValue>
|         | |   `-DeclRefExpr 0x10702ab08 <col:4> 'char **' lvalue ParmVar 0x10700ded8 'err_desc' 'char **'
|         | `-CallExpr 0x10702ac20 <line:27:5, line:29:10> '<dependent type>' contains-errors
|         |   |-DeclRefExpr 0x10702ab58 <line:27:5> 'int ()' Function 0x107028258 'apr_psprintf' 'int ()'
|         |   |-CXXDependentScopeMemberExpr 0x10702ab98 <col:18, col:21> '<dependent type>' contains-errors lvalue ->pool
|         |   | `-RecoveryExpr 0x10702ab78 <col:18> '<dependent type>' contains-errors lvalue
|         |   |-StringLiteral 0x10702abe0 <line:28:7> 'char[4]' lvalue "STR"
|         |   `-DeclRefExpr 0x10702ac00 <line:29:7> 'const char *' lvalue ParmVar 0x10700dda8 'url' 'const char *'
|         `-CallExpr 0x10702ad78 <line:30:3, col:43> '<dependent type>' contains-errors
|           |-DeclRefExpr 0x10702ac78 <col:3> 'int ()' Function 0x107028458 'oidc_error' 'int ()'
|           |-RecoveryExpr 0x10702ac98 <col:14> '<dependent type>' contains-errors lvalue
|           |-StringLiteral 0x10702acb8 <col:17> 'char[4]' lvalue "STR"
|           |-UnaryOperator 0x10702ad10 <col:24, col:25> 'char *' lvalue prefix '*' cannot overflow
|           | `-ImplicitCastExpr 0x10702acf8 <col:25> 'char **' <LValueToRValue>
|           |   `-DeclRefExpr 0x10702acd8 <col:25> 'char **' lvalue ParmVar 0x10700de58 'err_str' 'char **'
|           `-UnaryOperator 0x10702ad60 <col:34, col:35> 'char *' lvalue prefix '*' cannot overflow
|             `-ImplicitCastExpr 0x10702ad48 <col:35> 'char **' <LValueToRValue>
|               `-DeclRefExpr 0x10702ad28 <col:35> 'char **' lvalue ParmVar 0x10700ded8 'err_desc' 'char **'
`-FunctionDecl 0x107029e00 <line:15:9> col:9 implicit used strstr 'char *(const char *, const char *)' extern
  |-ParmVarDecl 0x107029f00 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x107029f68 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x107029ea8 <<invalid sloc>> Implicit 898
