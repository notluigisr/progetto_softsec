TranslationUnitDecl 0x157855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1578564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x157855bd0 '__int128'
|-TypedefDecl 0x157856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x157855bf0 'unsigned __int128'
|-TypedefDecl 0x157926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x157926000 'struct __NSConstantString_tag'
|   `-Record 0x157856580 '__NSConstantString_tag'
|-TypedefDecl 0x157926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x157855d90 '__SVInt8_t'
|-TypedefDecl 0x157926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x157855db0 '__SVInt16_t'
|-TypedefDecl 0x157926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x157855dd0 '__SVInt32_t'
|-TypedefDecl 0x1579263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x157855df0 '__SVInt64_t'
|-TypedefDecl 0x157926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x157855e10 '__SVUint8_t'
|-TypedefDecl 0x1579264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x157855e30 '__SVUint16_t'
|-TypedefDecl 0x157926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x157855e50 '__SVUint32_t'
|-TypedefDecl 0x157926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x157855e70 '__SVUint64_t'
|-TypedefDecl 0x1579265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x157855e90 '__SVFloat16_t'
|-TypedefDecl 0x157926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x157855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1579266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x157855ed0 '__SVFloat64_t'
|-TypedefDecl 0x157926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x157855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x157926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x157855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1579267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x157855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x157926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x157855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1579268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x157855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x157926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x157855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x157926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x157855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1579269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x157855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x157926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x157855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x157926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x157856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x157926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x157856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x157926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x157856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x157926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x157856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x157926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x157856090 '__clang_svint8x3_t'
|-TypedefDecl 0x157926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1578560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x157926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1578560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x157926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1578560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x157926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x157856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x157926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x157856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x157926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x157856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x157926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x157856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x157926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x157856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x157927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1578561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x157927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1578561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1579278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1578561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x157927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x157856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1579279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x157856230 '__clang_svint16x4_t'
|-TypedefDecl 0x157927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x157856250 '__clang_svint32x4_t'
|-TypedefDecl 0x157927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x157856270 '__clang_svint64x4_t'
|-TypedefDecl 0x157927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x157856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x157927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1578562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x157927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1578562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x157927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1578562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x157927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x157856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x157927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x157856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x157927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x157856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x157927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x157856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x157927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x157856390 '__SVBool_t'
|-TypedefDecl 0x157927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1578563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x157927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1578563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x157927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1578563f0 '__SVCount_t'
|-TypedefDecl 0x157927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x157927fb0 'char *'
|   `-BuiltinType 0x1578556b0 'char'
|-TypedefDecl 0x157928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x157927fb0 'char *'
|   `-BuiltinType 0x1578556b0 'char'
`-FunctionDecl 0x157940dd8 <dataset_diviso_filec/func8674_nonvuln.c:1:1, line:54:1> line:1:1 ebt_check_entry_size_and_hooks 'int (const struct ebt_entry *, const struct ebt_table_info *, unsigned int *, unsigned int *, unsigned int *, unsigned int *)'
  |-ParmVarDecl 0x157928648 <col:32, col:56> col:56 used e 'const struct ebt_entry *'
  |-ParmVarDecl 0x157940a28 <line:2:11, col:40> col:40 used newinfo 'const struct ebt_table_info *'
  |-ParmVarDecl 0x157940ad8 <line:3:11, col:25> col:25 used n 'unsigned int *'
  |-ParmVarDecl 0x157940b58 <col:28, col:42> col:42 used cnt 'unsigned int *'
  |-ParmVarDecl 0x157940bd8 <line:4:11, col:25> col:25 used totalcnt 'unsigned int *'
  |-ParmVarDecl 0x157940c58 <col:35, col:49> col:49 used udc_cnt 'unsigned int *'
  `-CompoundStmt 0x160009238 <line:5:1, line:54:1>
    |-DeclStmt 0x157940f78 <line:6:2, col:7>
    | `-VarDecl 0x157940f10 <col:2, col:6> col:6 used i 'int'
    |-ForStmt 0x1579412c0 <line:8:2, line:11:2>
    | |-BinaryOperator 0x157940fd0 <line:8:7, col:11> 'int' '='
    | | |-DeclRefExpr 0x157940f90 <col:7> 'int' lvalue Var 0x157940f10 'i' 'int'
    | | `-IntegerLiteral 0x157940fb0 <col:11> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x157941080 <col:14, col:18> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x157940ff0 <col:14> 'int' lvalue Var 0x157940f10 'i' 'int'
    | | `-RecoveryExpr 0x157941060 <col:18> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x1579410c0 <col:34, col:35> 'int' postfix '++'
    | | `-DeclRefExpr 0x1579410a0 <col:34> 'int' lvalue Var 0x157940f10 'i' 'int'
    | `-CompoundStmt 0x1579412a8 <col:39, line:11:2>
    |   `-IfStmt 0x157941288 <line:9:3, line:10:4>
    |     |-BinaryOperator 0x157941260 <line:9:7, col:49> 'int' contains-errors '=='
    |     | |-CStyleCastExpr 0x157941128 <col:7, col:15> 'void *' <BitCast>
    |     | | `-ImplicitCastExpr 0x157941110 <col:15> 'const struct ebt_entry *' <LValueToRValue> part_of_explicit_cast
    |     | |   `-DeclRefExpr 0x1579410d8 <col:15> 'const struct ebt_entry *' lvalue ParmVar 0x157928648 'e' 'const struct ebt_entry *'
    |     | `-CStyleCastExpr 0x157941238 <col:20, col:49> 'void *' contains-errors <Dependent>
    |     |   `-ArraySubscriptExpr 0x157941200 <col:28, col:49> '<dependent type>' contains-errors lvalue
    |     |     |-ImplicitCastExpr 0x1579411d0 <col:28, col:37> '<dependent type>' contains-errors <LValueToRValue>
    |     |     | `-RecoveryExpr 0x157941188 <col:28, col:37> '<dependent type>' contains-errors lvalue
    |     |     |   `-DeclRefExpr 0x157941150 <col:28> 'const struct ebt_table_info *' lvalue ParmVar 0x157940a28 'newinfo' 'const struct ebt_table_info *'
    |     |     `-ImplicitCastExpr 0x1579411e8 <col:48> 'int' <LValueToRValue>
    |     |       `-DeclRefExpr 0x1579411b0 <col:48> 'int' lvalue Var 0x157940f10 'i' 'int'
    |     `-BreakStmt 0x157941280 <line:10:4>
    |-IfStmt 0x160008ab0 <line:13:2, line:38:2>
    | |-BinaryOperator 0x157941470 <line:13:6, col:33> 'int' contains-errors '||'
    | | |-BinaryOperator 0x157941420 <col:6, col:11> 'int' contains-errors '!='
    | | | |-DeclRefExpr 0x1579412f8 <col:6> 'int' lvalue Var 0x157940f10 'i' 'int'
    | | | `-RecoveryExpr 0x157941400 <col:11> '<dependent type>' contains-errors lvalue
    | | `-UnaryOperator 0x157941458 <col:29, col:33> '<dependent type>' contains-errors prefix '!' cannot overflow
    | |   `-ImplicitCastExpr 0x157941440 <col:30, col:33> '<dependent type>' contains-errors <LValueToRValue>
    | |     `-RecoveryExpr 0x157941388 <col:30, col:33> '<dependent type>' contains-errors lvalue
    | |       `-DeclRefExpr 0x157941350 <col:30> 'const struct ebt_entry *' lvalue ParmVar 0x157928648 'e' 'const struct ebt_entry *'
    | `-CompoundStmt 0x160008a68 <col:42, line:38:2>
    |   |-IfStmt 0x157941870 <line:15:3, line:19:3>
    |   | |-BinaryOperator 0x157941560 <line:15:7, col:14> 'int' '!='
    |   | | |-ImplicitCastExpr 0x157941530 <col:7, col:8> 'unsigned int' <LValueToRValue>
    |   | | | `-UnaryOperator 0x1579414c8 <col:7, col:8> 'unsigned int' lvalue prefix '*' cannot overflow
    |   | | |   `-ImplicitCastExpr 0x1579414b0 <col:8> 'unsigned int *' <LValueToRValue>
    |   | | |     `-DeclRefExpr 0x157941490 <col:8> 'unsigned int *' lvalue ParmVar 0x157940ad8 'n' 'unsigned int *'
    |   | | `-ImplicitCastExpr 0x157941548 <col:13, col:14> 'unsigned int' <LValueToRValue>
    |   | |   `-UnaryOperator 0x157941518 <col:13, col:14> 'unsigned int' lvalue prefix '*' cannot overflow
    |   | |     `-ImplicitCastExpr 0x157941500 <col:14> 'unsigned int *' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x1579414e0 <col:14> 'unsigned int *' lvalue ParmVar 0x157940b58 'cnt' 'unsigned int *'
    |   | `-CompoundStmt 0x157941850 <col:19, line:19:3>
    |   |   |-CallExpr 0x157941768 <line:16:4, line:17:11> 'int'
    |   |   | |-ImplicitCastExpr 0x157941750 <line:16:4> 'int (*)()' <FunctionToPointerDecay>
    |   |   | | `-DeclRefExpr 0x157941690 <col:4> 'int ()' Function 0x1579415d8 'BUGPRINT' 'int ()'
    |   |   | `-ImplicitCastExpr 0x157941790 <col:13, line:17:6> 'char *' <ArrayToPointerDecay>
    |   |   |   `-StringLiteral 0x1579416f0 <line:16:13, line:17:6> 'char[7]' lvalue "STRSTR"
    |   |   `-ReturnStmt 0x157941840 <line:18:4, col:12>
    |   |     `-UnaryOperator 0x157941828 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |       `-ImplicitCastExpr 0x157941810 <col:12> '<dependent type>' contains-errors <LValueToRValue>
    |   |         `-RecoveryExpr 0x1579417f0 <col:12> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x1579447a8 <line:20:3, line:28:3>
    |   | |-BinaryOperator 0x1579442e0 <line:20:7, line:21:43> 'int' contains-errors '&&'
    |   | | |-BinaryOperator 0x1579441d0 <line:20:7, col:44> 'int' contains-errors '!='
    |   | | | |-RecoveryExpr 0x157944188 <col:7, col:34> '<dependent type>' contains-errors lvalue
    |   | | | | `-ParenExpr 0x157944168 <col:7, col:31> 'struct ebt_entries *'
    |   | | | |   `-CStyleCastExpr 0x157944140 <col:8, col:30> 'struct ebt_entries *' <BitCast>
    |   | | | |     `-ImplicitCastExpr 0x157944128 <col:30> 'const struct ebt_entry *' <LValueToRValue> part_of_explicit_cast
    |   | | | |       `-DeclRefExpr 0x157941930 <col:30> 'const struct ebt_entry *' lvalue ParmVar 0x157928648 'e' 'const struct ebt_entry *'
    |   | | | `-RecoveryExpr 0x1579441b0 <col:44> '<dependent type>' contains-errors lvalue
    |   | | `-BinaryOperator 0x1579442c0 <line:21:6, col:43> 'int' contains-errors '!='
    |   | |   |-RecoveryExpr 0x157944278 <col:6, col:33> '<dependent type>' contains-errors lvalue
    |   | |   | `-ParenExpr 0x157944258 <col:6, col:30> 'struct ebt_entries *'
    |   | |   |   `-CStyleCastExpr 0x157944230 <col:7, col:29> 'struct ebt_entries *' <BitCast>
    |   | |   |     `-ImplicitCastExpr 0x157944218 <col:29> 'const struct ebt_entry *' <LValueToRValue> part_of_explicit_cast
    |   | |   |       `-DeclRefExpr 0x157943ee8 <col:29> 'const struct ebt_entry *' lvalue ParmVar 0x157928648 'e' 'const struct ebt_entry *'
    |   | |   `-RecoveryExpr 0x1579442a0 <col:43> '<dependent type>' contains-errors lvalue
    |   | `-CompoundStmt 0x157944790 <col:55, line:28:3>
    |   |   `-IfStmt 0x157944770 <line:23:4, line:27:4>
    |   |     |-BinaryOperator 0x1579445b0 <line:23:8, line:24:44> 'int' contains-errors '||'
    |   |     | |-BinaryOperator 0x1579444a0 <line:23:8, col:13> 'int' contains-errors '!='
    |   |     | | |-DeclRefExpr 0x157944300 <col:8> 'int' lvalue Var 0x157940f10 'i' 'int'
    |   |     | | `-RecoveryExpr 0x157944480 <col:13> '<dependent type>' contains-errors lvalue
    |   |     | `-BinaryOperator 0x157944590 <line:24:7, col:44> 'int' contains-errors '!='
    |   |     |   |-RecoveryExpr 0x157944548 <col:7, col:34> '<dependent type>' contains-errors lvalue
    |   |     |   | `-ParenExpr 0x157944528 <col:7, col:31> 'struct ebt_entries *'
    |   |     |   |   `-CStyleCastExpr 0x157944500 <col:8, col:30> 'struct ebt_entries *' <BitCast>
    |   |     |   |     `-ImplicitCastExpr 0x1579444e8 <col:30> 'const struct ebt_entry *' <LValueToRValue> part_of_explicit_cast
    |   |     |   |       `-DeclRefExpr 0x157944358 <col:30> 'const struct ebt_entry *' lvalue ParmVar 0x157928648 'e' 'const struct ebt_entry *'
    |   |     |   `-RecoveryExpr 0x157944570 <col:44> '<dependent type>' contains-errors lvalue
    |   |     `-CompoundStmt 0x157944750 <col:56, line:27:4>
    |   |       |-CallExpr 0x157944668 <line:25:5, col:19> 'int'
    |   |       | |-ImplicitCastExpr 0x157944650 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   |       | | `-DeclRefExpr 0x1579445d0 <col:5> 'int ()' Function 0x1579415d8 'BUGPRINT' 'int ()'
    |   |       | `-ImplicitCastExpr 0x157944690 <col:14> 'char *' <ArrayToPointerDecay>
    |   |       |   `-StringLiteral 0x157944630 <col:14> 'char[4]' lvalue "STR"
    |   |       `-ReturnStmt 0x157944740 <line:26:5, col:13>
    |   |         `-UnaryOperator 0x157944728 <col:12, col:13> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |           `-ImplicitCastExpr 0x157944710 <col:13> '<dependent type>' contains-errors <LValueToRValue>
    |   |             `-RecoveryExpr 0x1579446f0 <col:13> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x1579448e8 <line:29:3, line:30:14>
    |   | |-BinaryOperator 0x157944840 <line:29:7, col:12> 'int' contains-errors '=='
    |   | | |-DeclRefExpr 0x1579447c8 <col:7> 'int' lvalue Var 0x157940f10 'i' 'int'
    |   | | `-RecoveryExpr 0x157944820 <col:12> '<dependent type>' contains-errors lvalue
    |   | `-UnaryOperator 0x1579448d0 <line:30:4, col:14> 'unsigned int' postfix '++'
    |   |   `-ParenExpr 0x1579448b0 <col:4, col:13> 'unsigned int' lvalue
    |   |     `-UnaryOperator 0x157944898 <col:5, col:6> 'unsigned int' lvalue prefix '*' cannot overflow
    |   |       `-ImplicitCastExpr 0x157944880 <col:6> 'unsigned int *' <LValueToRValue>
    |   |         `-DeclRefExpr 0x157944860 <col:6> 'unsigned int *' lvalue ParmVar 0x157940c58 'udc_cnt' 'unsigned int *'
    |   |-IfStmt 0x157944cf0 <line:31:3, line:34:3>
    |   | |-BinaryOperator 0x157944b70 <line:31:7, col:53> 'int' contains-errors '!='
    |   | | |-RecoveryExpr 0x157944af8 <col:7, col:34> '<dependent type>' contains-errors lvalue
    |   | | | `-ParenExpr 0x157944ad8 <col:7, col:31> 'struct ebt_entries *'
    |   | | |   `-CStyleCastExpr 0x157944ab0 <col:8, col:30> 'struct ebt_entries *' <BitCast>
    |   | | |     `-ImplicitCastExpr 0x157944a98 <col:30> 'const struct ebt_entry *' <LValueToRValue> part_of_explicit_cast
    |   | | |       `-DeclRefExpr 0x1579449b0 <col:30> 'const struct ebt_entry *' lvalue ParmVar 0x157928648 'e' 'const struct ebt_entry *'
    |   | | `-UnaryOperator 0x157944b58 <col:52, col:53> 'unsigned int' lvalue prefix '*' cannot overflow
    |   | |   `-ImplicitCastExpr 0x157944b40 <col:53> 'unsigned int *' <LValueToRValue>
    |   | |     `-DeclRefExpr 0x157944b20 <col:53> 'unsigned int *' lvalue ParmVar 0x157940bd8 'totalcnt' 'unsigned int *'
    |   | `-CompoundStmt 0x157944cd0 <col:63, line:34:3>
    |   |   |-CallExpr 0x157944be8 <line:32:4, col:18> 'int'
    |   |   | |-ImplicitCastExpr 0x157944bd0 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |   |   | | `-DeclRefExpr 0x157944b90 <col:4> 'int ()' Function 0x1579415d8 'BUGPRINT' 'int ()'
    |   |   | `-ImplicitCastExpr 0x157944c10 <col:13> 'char *' <ArrayToPointerDecay>
    |   |   |   `-StringLiteral 0x157944bb0 <col:13> 'char[4]' lvalue "STR"
    |   |   `-ReturnStmt 0x157944cc0 <line:33:4, col:12>
    |   |     `-UnaryOperator 0x157944ca8 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |       `-ImplicitCastExpr 0x157944c90 <col:12> '<dependent type>' contains-errors <LValueToRValue>
    |   |         `-RecoveryExpr 0x157944c70 <col:12> '<dependent type>' contains-errors lvalue
    |   |-BinaryOperator 0x160008970 <line:35:3, col:35> 'unsigned int' contains-errors '='
    |   | |-UnaryOperator 0x157944d48 <col:3, col:4> 'unsigned int' lvalue prefix '*' cannot overflow
    |   | | `-ImplicitCastExpr 0x157944d30 <col:4> 'unsigned int *' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x157944d10 <col:4> 'unsigned int *' lvalue ParmVar 0x157940ad8 'n' 'unsigned int *'
    |   | `-RecoveryExpr 0x160008948 <col:8, col:35> '<dependent type>' contains-errors lvalue
    |   |   `-ParenExpr 0x160008928 <col:8, col:32> 'struct ebt_entries *'
    |   |     `-CStyleCastExpr 0x160008900 <col:9, col:31> 'struct ebt_entries *' <BitCast>
    |   |       `-ImplicitCastExpr 0x1600088e8 <col:31> 'const struct ebt_entry *' <LValueToRValue> part_of_explicit_cast
    |   |         `-DeclRefExpr 0x160008800 <col:31> 'const struct ebt_entry *' lvalue ParmVar 0x157928648 'e' 'const struct ebt_entry *'
    |   |-BinaryOperator 0x160008a18 <line:36:3, col:10> 'unsigned int' '='
    |   | |-UnaryOperator 0x1600089c8 <col:3, col:4> 'unsigned int' lvalue prefix '*' cannot overflow
    |   | | `-ImplicitCastExpr 0x1600089b0 <col:4> 'unsigned int *' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x160008990 <col:4> 'unsigned int *' lvalue ParmVar 0x157940b58 'cnt' 'unsigned int *'
    |   | `-ImplicitCastExpr 0x160008a00 <col:10> 'unsigned int' <IntegralCast>
    |   |   `-IntegerLiteral 0x1600089e0 <col:10> 'int' 0
    |   `-ReturnStmt 0x160008a58 <line:37:3, col:10>
    |     `-IntegerLiteral 0x160008a38 <col:10> 'int' 0
    |-IfStmt 0x160008e10 <line:40:2, line:45:2>
    | |-RecoveryExpr 0x160008d40 <line:40:6, line:42:28> '_Bool' contains-errors
    | `-CompoundStmt 0x160008df8 <col:41, line:45:2>
    |   `-CallExpr 0x160008db8 <line:43:3, col:17> 'int'
    |     |-ImplicitCastExpr 0x160008da0 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x160008d60 <col:3> 'int ()' Function 0x1579415d8 'BUGPRINT' 'int ()'
    |     `-ImplicitCastExpr 0x160008de0 <col:12> 'char *' <ArrayToPointerDecay>
    |       `-StringLiteral 0x160008d80 <col:12> 'char[4]' lvalue "STR"
    |-IfStmt 0x1600090d8 <line:47:2, line:50:2>
    | |-RecoveryExpr 0x160009008 <line:47:6, col:72> '_Bool' contains-errors
    | `-CompoundStmt 0x1600090c0 <col:75, line:50:2>
    |   `-CallExpr 0x160009080 <line:48:3, col:17> 'int'
    |     |-ImplicitCastExpr 0x160009068 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x160009028 <col:3> 'int ()' Function 0x1579415d8 'BUGPRINT' 'int ()'
    |     `-ImplicitCastExpr 0x1600090a8 <col:12> 'char *' <ArrayToPointerDecay>
    |       `-StringLiteral 0x160009048 <col:12> 'char[4]' lvalue "STR"
    |-UnaryOperator 0x160009168 <line:51:2, col:8> 'unsigned int' postfix '++'
    | `-ParenExpr 0x160009148 <col:2, col:7> 'unsigned int' lvalue
    |   `-UnaryOperator 0x160009130 <col:3, col:4> 'unsigned int' lvalue prefix '*' cannot overflow
    |     `-ImplicitCastExpr 0x160009118 <col:4> 'unsigned int *' <LValueToRValue>
    |       `-DeclRefExpr 0x1600090f8 <col:4> 'unsigned int *' lvalue ParmVar 0x157940b58 'cnt' 'unsigned int *'
    |-UnaryOperator 0x1600091f0 <line:52:2, col:13> 'unsigned int' postfix '++'
    | `-ParenExpr 0x1600091d0 <col:2, col:12> 'unsigned int' lvalue
    |   `-UnaryOperator 0x1600091b8 <col:3, col:4> 'unsigned int' lvalue prefix '*' cannot overflow
    |     `-ImplicitCastExpr 0x1600091a0 <col:4> 'unsigned int *' <LValueToRValue>
    |       `-DeclRefExpr 0x160009180 <col:4> 'unsigned int *' lvalue ParmVar 0x157940bd8 'totalcnt' 'unsigned int *'
    `-ReturnStmt 0x160009228 <line:53:2, col:9>
      `-IntegerLiteral 0x160009208 <col:9> 'int' 0
