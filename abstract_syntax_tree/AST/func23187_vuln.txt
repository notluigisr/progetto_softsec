TranslationUnitDecl 0x13603d008 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13603deb8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13603d5d0 '__int128'
|-TypedefDecl 0x13603df28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13603d5f0 'unsigned __int128'
|-TypedefDecl 0x13700be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13700bc00 'struct __NSConstantString_tag'
|   `-Record 0x13603df80 '__NSConstantString_tag'
|-TypedefDecl 0x13700be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13603d790 '__SVInt8_t'
|-TypedefDecl 0x13700bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13603d7b0 '__SVInt16_t'
|-TypedefDecl 0x13700bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13603d7d0 '__SVInt32_t'
|-TypedefDecl 0x13700bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13603d7f0 '__SVInt64_t'
|-TypedefDecl 0x13700c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13603d810 '__SVUint8_t'
|-TypedefDecl 0x13700c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13603d830 '__SVUint16_t'
|-TypedefDecl 0x13700c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13603d850 '__SVUint32_t'
|-TypedefDecl 0x13700c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13603d870 '__SVUint64_t'
|-TypedefDecl 0x13700c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13603d890 '__SVFloat16_t'
|-TypedefDecl 0x13700c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13603d8b0 '__SVFloat32_t'
|-TypedefDecl 0x13700c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13603d8d0 '__SVFloat64_t'
|-TypedefDecl 0x13700c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13603d8f0 '__SVBfloat16_t'
|-TypedefDecl 0x13700c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13603d910 '__clang_svint8x2_t'
|-TypedefDecl 0x13700c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13603d930 '__clang_svint16x2_t'
|-TypedefDecl 0x13700c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13603d950 '__clang_svint32x2_t'
|-TypedefDecl 0x13700c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13603d970 '__clang_svint64x2_t'
|-TypedefDecl 0x13700c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13603d990 '__clang_svuint8x2_t'
|-TypedefDecl 0x13700c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13603d9b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13700c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13603d9d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13700c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13603d9f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13700c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13603da10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13700c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13603da30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13700c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13603da50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13700c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13603da70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13700c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13603da90 '__clang_svint8x3_t'
|-TypedefDecl 0x13700c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13603dab0 '__clang_svint16x3_t'
|-TypedefDecl 0x13700c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13603dad0 '__clang_svint32x3_t'
|-TypedefDecl 0x13700c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13603daf0 '__clang_svint64x3_t'
|-TypedefDecl 0x13700c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13603db10 '__clang_svuint8x3_t'
|-TypedefDecl 0x13700ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13603db30 '__clang_svuint16x3_t'
|-TypedefDecl 0x13700cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13603db50 '__clang_svuint32x3_t'
|-TypedefDecl 0x13700cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13603db70 '__clang_svuint64x3_t'
|-TypedefDecl 0x13700cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13603db90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13700d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13603dbb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13700d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13603dbd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13700d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13603dbf0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13700d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13603dc10 '__clang_svint8x4_t'
|-TypedefDecl 0x13700d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13603dc30 '__clang_svint16x4_t'
|-TypedefDecl 0x13700d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13603dc50 '__clang_svint32x4_t'
|-TypedefDecl 0x13700d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13603dc70 '__clang_svint64x4_t'
|-TypedefDecl 0x13700d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13603dc90 '__clang_svuint8x4_t'
|-TypedefDecl 0x13700d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13603dcb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13700d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13603dcd0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13700d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13603dcf0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13700d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13603dd10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13700d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13603dd30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13700d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13603dd50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13700d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13603dd70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13700da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13603dd90 '__SVBool_t'
|-TypedefDecl 0x13700da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13603ddb0 '__clang_svboolx2_t'
|-TypedefDecl 0x13700dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13603ddd0 '__clang_svboolx4_t'
|-TypedefDecl 0x13700db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13603ddf0 '__SVCount_t'
|-TypedefDecl 0x13700dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13700dbb0 'char *'
|   `-BuiltinType 0x13603d0b0 'char'
|-TypedefDecl 0x13700dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13700dbb0 'char *'
|   `-BuiltinType 0x13603d0b0 'char'
`-FunctionDecl 0x137026938 <dataset_diviso_filec/func23187_vuln.c:1:1, line:85:1> line:1:5 esp6_output_head 'int (struct xfrm_state *, struct sk_buff *, struct esp_info *)'
  |-ParmVarDecl 0x13700e248 <col:22, col:41> col:41 used x 'struct xfrm_state *'
  |-ParmVarDecl 0x137026628 <col:44, col:60> col:60 used skb 'struct sk_buff *'
  |-ParmVarDecl 0x1370267f8 <col:65, col:82> col:82 used esp 'struct esp_info *'
  `-CompoundStmt 0x137030d78 <line:2:1, line:85:1>
    |-DeclStmt 0x137026af0 <line:4:2, col:12>
    | `-VarDecl 0x137026a88 <col:2, col:6> col:6 used nfrags 'int'
    |-DeclStmt 0x137026b88 <line:5:2, col:17>
    | `-VarDecl 0x137026b20 <col:2, col:6> col:6 used esph_offset 'int'
    |-DeclStmt 0x137026d88 <line:6:2, col:19>
    | |-RecordDecl 0x137026ba0 <col:2, col:9> col:9 struct page
    | `-VarDecl 0x137026d08 <col:2, col:15> col:15 used page 'struct page *'
    |-DeclStmt 0x137026e90 <line:7:2, col:25>
    | `-VarDecl 0x137026e28 <col:2, col:18> col:18 used trailer 'struct sk_buff *'
    |-DeclStmt 0x137026f88 <line:8:2, col:26>
    | `-VarDecl 0x137026ec0 <col:2, col:20> col:6 used tailen 'int' cinit
    |   `-RecoveryExpr 0x137026f60 <col:15, col:20> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x137026f28 <col:15> 'struct esp_info *' lvalue ParmVar 0x1370267f8 'esp' 'struct esp_info *'
    |-IfStmt 0x1370273f0 <line:10:2, line:15:2>
    | |-RecoveryExpr 0x137026fd8 <line:10:6, col:9> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x137026fa0 <col:6> 'struct xfrm_state *' lvalue ParmVar 0x13700e248 'x' 'struct xfrm_state *'
    | `-CompoundStmt 0x1370273d0 <col:16, line:15:2>
    |   |-DeclStmt 0x1370272d8 <line:11:3, col:43>
    |   | `-VarDecl 0x137027018 <col:3, col:42> col:7 used err 'int' cinit
    |   |   `-CallExpr 0x137027258 <col:13, col:42> 'int'
    |   |     |-ImplicitCastExpr 0x137027240 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |   |     | `-DeclRefExpr 0x137027190 <col:13> 'int ()' Function 0x1370270d8 'esp6_output_encap' 'int ()'
    |   |     |-ImplicitCastExpr 0x137027290 <col:31> 'struct xfrm_state *' <LValueToRValue>
    |   |     | `-DeclRefExpr 0x1370271b0 <col:31> 'struct xfrm_state *' lvalue ParmVar 0x13700e248 'x' 'struct xfrm_state *'
    |   |     |-ImplicitCastExpr 0x1370272a8 <col:34> 'struct sk_buff *' <LValueToRValue>
    |   |     | `-DeclRefExpr 0x1370271d0 <col:34> 'struct sk_buff *' lvalue ParmVar 0x137026628 'skb' 'struct sk_buff *'
    |   |     `-ImplicitCastExpr 0x1370272c0 <col:39> 'struct esp_info *' <LValueToRValue>
    |   |       `-DeclRefExpr 0x1370271f0 <col:39> 'struct esp_info *' lvalue ParmVar 0x1370267f8 'esp' 'struct esp_info *'
    |   `-IfStmt 0x1370273b0 <line:13:3, line:14:11>
    |     |-BinaryOperator 0x137027348 <line:13:7, col:13> 'int' '<'
    |     | |-ImplicitCastExpr 0x137027330 <col:7> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x1370272f0 <col:7> 'int' lvalue Var 0x137027018 'err' 'int'
    |     | `-IntegerLiteral 0x137027310 <col:13> 'int' 0
    |     `-ReturnStmt 0x1370273a0 <line:14:4, col:11>
    |       `-ImplicitCastExpr 0x137027388 <col:11> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x137027368 <col:11> 'int' lvalue Var 0x137027018 'err' 'int'
    |-IfStmt 0x13702ed68 <line:17:2, line:68:2>
    | |-UnaryOperator 0x137027588 <line:17:6, col:21> 'int' prefix '!' cannot overflow
    | | `-CallExpr 0x137027548 <col:7, col:21> 'int'
    | |   |-ImplicitCastExpr 0x137027530 <col:7> 'int (*)()' <FunctionToPointerDecay>
    | |   | `-DeclRefExpr 0x1370274f0 <col:7> 'int ()' Function 0x137027438 'skb_cloned' 'int ()'
    | |   `-ImplicitCastExpr 0x137027570 <col:18> 'struct sk_buff *' <LValueToRValue>
    | |     `-DeclRefExpr 0x137027510 <col:18> 'struct sk_buff *' lvalue ParmVar 0x137026628 'skb' 'struct sk_buff *'
    | `-CompoundStmt 0x13702ed50 <col:24, line:68:2>
    |   `-IfStmt 0x13702ed20 <line:18:3, line:67:3> has_else
    |     |-BinaryOperator 0x135813568 <line:18:7, col:33> 'int' contains-errors '<='
    |     | |-ImplicitCastExpr 0x135813550 <col:7> 'int' contains-errors <LValueToRValue>
    |     | | `-DeclRefExpr 0x1370275a0 <col:7> 'int' contains-errors lvalue Var 0x137026ec0 'tailen' 'int'
    |     | `-CallExpr 0x135813510 <col:17, col:33> 'int'
    |     |   |-ImplicitCastExpr 0x1358134f8 <col:17> 'int (*)()' <FunctionToPointerDecay>
    |     |   | `-DeclRefExpr 0x1358134b8 <col:17> 'int ()' Function 0x135813400 'skb_tailroom' 'int ()'
    |     |   `-ImplicitCastExpr 0x135813538 <col:30> 'struct sk_buff *' <LValueToRValue>
    |     |     `-DeclRefExpr 0x1358134d8 <col:30> 'struct sk_buff *' lvalue ParmVar 0x137026628 'skb' 'struct sk_buff *'
    |     |-CompoundStmt 0x135813840 <col:36, line:24:3>
    |     | |-BinaryOperator 0x1358135c8 <line:19:4, col:13> 'int' '='
    |     | | |-DeclRefExpr 0x135813588 <col:4> 'int' lvalue Var 0x137026a88 'nfrags' 'int'
    |     | | `-IntegerLiteral 0x1358135a8 <col:13> 'int' 1
    |     | |-BinaryOperator 0x135813640 <line:20:4, col:14> 'struct sk_buff *' '='
    |     | | |-DeclRefExpr 0x1358135e8 <col:4> 'struct sk_buff *' lvalue Var 0x137026e28 'trailer' 'struct sk_buff *'
    |     | | `-ImplicitCastExpr 0x135813628 <col:14> 'struct sk_buff *' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x135813608 <col:14> 'struct sk_buff *' lvalue ParmVar 0x137026628 'skb' 'struct sk_buff *'
    |     | `-GotoStmt 0x135813828 <line:23:4, col:9> 'skip_cow' 0x1358137d8
    |     `-IfStmt 0x13702ed00 <line:24:10, line:67:3>
    |       |-RecoveryExpr 0x135813c28 <line:24:14, line:25:32> '_Bool' contains-errors
    |       `-CompoundStmt 0x13702ec58 <col:35, line:67:3>
    |         |-DeclStmt 0x135813cc8 <line:26:4, col:17>
    |         | `-VarDecl 0x135813c60 <col:4, col:8> col:8 used allocsize 'int'
    |         |-DeclStmt 0x135813f28 <line:27:4, col:29>
    |         | |-RecordDecl 0x135813ce0 <col:4, col:11> col:11 struct sock
    |         | `-VarDecl 0x135813e48 <col:4, col:27> col:17 used sk 'struct sock *' cinit
    |         |   `-RecoveryExpr 0x135813ee8 <col:22, col:27> '<dependent type>' contains-errors lvalue
    |         |     `-DeclRefExpr 0x135813eb0 <col:22> 'struct sk_buff *' lvalue ParmVar 0x137026628 'skb' 'struct sk_buff *'
    |         |-DeclStmt 0x1358141a0 <line:28:4, col:39>
    |         | |-RecordDecl 0x135813f40 <col:4, col:11> col:11 struct page_frag
    |         | `-VarDecl 0x1358140a8 <col:4, col:34> col:22 used pfrag 'struct page_frag *' cinit
    |         |   `-UnaryOperator 0x135814170 <col:30, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow
    |         |     `-RecoveryExpr 0x135814148 <col:31, col:34> '<dependent type>' contains-errors lvalue
    |         |       `-DeclRefExpr 0x135814110 <col:31> 'struct xfrm_state *' lvalue ParmVar 0x13700e248 'x' 'struct xfrm_state *'
    |         |-BinaryOperator 0x13702d030 <line:32:4, col:44> 'int' contains-errors '='
    |         | |-DeclRefExpr 0x135814230 <col:4> 'int' lvalue Var 0x135813c60 'allocsize' 'int'
    |         | `-CallExpr 0x13702d000 <col:16, col:44> '<dependent type>' contains-errors
    |         |   |-DeclRefExpr 0x135814330 <col:16> 'int ()' Function 0x135814278 'ALIGN' 'int ()'
    |         |   |-DeclRefExpr 0x135814350 <col:22> 'int' contains-errors lvalue Var 0x137026ec0 'tailen' 'int'
    |         |   `-RecoveryExpr 0x1358143d8 <col:30> '<dependent type>' contains-errors lvalue
    |         |-CallExpr 0x13702d1c8 <line:34:4, col:25> '<dependent type>' contains-errors
    |         | |-DeclRefExpr 0x13702d130 <col:4> 'int ()' Function 0x13702d078 'spin_lock_bh' 'int ()'
    |         | `-UnaryOperator 0x13702d1b0 <col:17, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow
    |         |   `-RecoveryExpr 0x13702d188 <col:18, col:21> '<dependent type>' contains-errors lvalue
    |         |     `-DeclRefExpr 0x13702d150 <col:18> 'struct xfrm_state *' lvalue ParmVar 0x13700e248 'x' 'struct xfrm_state *'
    |         |-IfStmt 0x13702d678 <line:36:4, line:39:4>
    |         | |-RecoveryExpr 0x13702d430 <line:36:8, col:68> '_Bool' contains-errors
    |         | `-CompoundStmt 0x13702d658 <col:71, line:39:4>
    |         |   |-CallExpr 0x13702d5c8 <line:37:5, col:28> '<dependent type>' contains-errors
    |         |   | |-DeclRefExpr 0x13702d530 <col:5> 'int ()' Function 0x13702d478 'spin_unlock_bh' 'int ()'
    |         |   | `-UnaryOperator 0x13702d5b0 <col:20, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow
    |         |   |   `-RecoveryExpr 0x13702d588 <col:21, col:24> '<dependent type>' contains-errors lvalue
    |         |   |     `-DeclRefExpr 0x13702d550 <col:21> 'struct xfrm_state *' lvalue ParmVar 0x13700e248 'x' 'struct xfrm_state *'
    |         |   `-GotoStmt 0x13702d640 <line:38:5, col:10> 'cow' 0x13702d5f0
    |         |-BinaryOperator 0x13702d718 <line:41:4, col:18> 'struct page *' contains-errors '='
    |         | |-DeclRefExpr 0x13702d698 <col:4> 'struct page *' lvalue Var 0x137026d08 'page' 'struct page *'
    |         | `-RecoveryExpr 0x13702d6f0 <col:11, col:18> '<dependent type>' contains-errors lvalue
    |         |   `-DeclRefExpr 0x13702d6b8 <col:11> 'struct page_frag *' contains-errors lvalue Var 0x1358140a8 'pfrag' 'struct page_frag *'
    |         |-CallExpr 0x13702d870 <line:42:4, col:17> 'int'
    |         | |-ImplicitCastExpr 0x13702d858 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |         | | `-DeclRefExpr 0x13702d818 <col:4> 'int ()' Function 0x13702d760 'get_page' 'int ()'
    |         | `-ImplicitCastExpr 0x13702d898 <col:13> 'struct page *' <LValueToRValue>
    |         |   `-DeclRefExpr 0x13702d838 <col:13> 'struct page *' lvalue Var 0x137026d08 'page' 'struct page *'
    |         |-BinaryOperator 0x13702df18 <line:48:4, col:30> 'int' contains-errors '='
    |         | |-DeclRefExpr 0x13702dd40 <col:4> 'int' lvalue Var 0x137026a88 'nfrags' 'int'
    |         | `-RecoveryExpr 0x13702def0 <col:13, col:30> '<dependent type>' contains-errors lvalue
    |         |   `-CallExpr 0x13702deb0 <col:13, col:27> 'int'
    |         |     |-ImplicitCastExpr 0x13702de98 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |         |     | `-DeclRefExpr 0x13702dd60 <col:13> 'int ()' Function 0x135813890 'skb_shinfo' 'int ()'
    |         |     `-ImplicitCastExpr 0x13702ded8 <col:24> 'struct sk_buff *' <LValueToRValue>
    |         |       `-DeclRefExpr 0x13702dd80 <col:24> 'struct sk_buff *' lvalue ParmVar 0x137026628 'skb' 'struct sk_buff *'
    |         |-CallExpr 0x13702e1b8 <line:50:4, line:51:17> '<dependent type>' contains-errors
    |         | |-DeclRefExpr 0x13702e0b8 <line:50:4> 'int ()' Function 0x13702e000 '__skb_fill_page_desc' 'int ()'
    |         | |-DeclRefExpr 0x13702e0d8 <col:25> 'struct sk_buff *' lvalue ParmVar 0x137026628 'skb' 'struct sk_buff *'
    |         | |-DeclRefExpr 0x13702e0f8 <col:30> 'int' lvalue Var 0x137026a88 'nfrags' 'int'
    |         | |-DeclRefExpr 0x13702e118 <col:38> 'struct page *' lvalue Var 0x137026d08 'page' 'struct page *'
    |         | |-RecoveryExpr 0x13702e170 <col:44, col:51> '<dependent type>' contains-errors lvalue
    |         | | `-DeclRefExpr 0x13702e138 <col:44> 'struct page_frag *' contains-errors lvalue Var 0x1358140a8 'pfrag' 'struct page_frag *'
    |         | `-DeclRefExpr 0x13702e198 <line:51:11> 'int' contains-errors lvalue Var 0x137026ec0 'tailen' 'int'
    |         |-BinaryOperator 0x13702e3f0 <line:52:4, col:34> '<dependent type>' contains-errors '='
    |         | |-RecoveryExpr 0x13702e3c8 <col:4, col:21> '<dependent type>' contains-errors lvalue
    |         | | `-CallExpr 0x13702e388 <col:4, col:18> 'int'
    |         | |   |-ImplicitCastExpr 0x13702e370 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |         | |   | `-DeclRefExpr 0x13702e200 <col:4> 'int ()' Function 0x135813890 'skb_shinfo' 'int ()'
    |         | |   `-ImplicitCastExpr 0x13702e3b0 <col:15> 'struct sk_buff *' <LValueToRValue>
    |         | |     `-DeclRefExpr 0x13702e220 <col:15> 'struct sk_buff *' lvalue ParmVar 0x137026628 'skb' 'struct sk_buff *'
    |         | `-UnaryOperator 0x13702e2e0 <col:32, col:34> 'int' prefix '++'
    |         |   `-DeclRefExpr 0x13702e2c0 <col:34> 'int' lvalue Var 0x137026a88 'nfrags' 'int'
    |         |-BinaryOperator 0x13702e510 <line:54:4, col:36> '<dependent type>' contains-errors '='
    |         | |-RecoveryExpr 0x13702e448 <col:4, col:11> '<dependent type>' contains-errors lvalue
    |         | | `-DeclRefExpr 0x13702e410 <col:4> 'struct page_frag *' contains-errors lvalue Var 0x1358140a8 'pfrag' 'struct page_frag *'
    |         | `-BinaryOperator 0x13702e4f0 <col:20, col:36> '<dependent type>' contains-errors '+'
    |         |   |-RecoveryExpr 0x13702e4a8 <col:20, col:27> '<dependent type>' contains-errors lvalue
    |         |   | `-DeclRefExpr 0x13702e470 <col:20> 'struct page_frag *' contains-errors lvalue Var 0x1358140a8 'pfrag' 'struct page_frag *'
    |         |   `-DeclRefExpr 0x13702e4d0 <col:36> 'int' lvalue Var 0x135813c60 'allocsize' 'int'
    |         |-CallExpr 0x13702e5c8 <line:56:4, col:27> '<dependent type>' contains-errors
    |         | |-DeclRefExpr 0x13702e530 <col:4> 'int ()' Function 0x13702d478 'spin_unlock_bh' 'int ()'
    |         | `-UnaryOperator 0x13702e5b0 <col:19, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow
    |         |   `-RecoveryExpr 0x13702e588 <col:20, col:23> '<dependent type>' contains-errors lvalue
    |         |     `-DeclRefExpr 0x13702e550 <col:20> 'struct xfrm_state *' lvalue ParmVar 0x13700e248 'x' 'struct xfrm_state *'
    |         |-UnaryOperator 0x13702e610 <line:58:4, col:10> 'int' postfix '++'
    |         | `-DeclRefExpr 0x13702e5f0 <col:4> 'int' lvalue Var 0x137026a88 'nfrags' 'int'
    |         |-CompoundAssignOperator 0x13702e6a8 <line:60:4, col:16> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |         | |-RecoveryExpr 0x13702e660 <col:4, col:9> '<dependent type>' contains-errors lvalue
    |         | | `-DeclRefExpr 0x13702e628 <col:4> 'struct sk_buff *' lvalue ParmVar 0x137026628 'skb' 'struct sk_buff *'
    |         | `-DeclRefExpr 0x13702e688 <col:16> 'int' contains-errors lvalue Var 0x137026ec0 'tailen' 'int'
    |         |-CompoundAssignOperator 0x13702e758 <line:61:4, col:21> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |         | |-RecoveryExpr 0x13702e710 <col:4, col:9> '<dependent type>' contains-errors lvalue
    |         | | `-DeclRefExpr 0x13702e6d8 <col:4> 'struct sk_buff *' lvalue ParmVar 0x137026628 'skb' 'struct sk_buff *'
    |         | `-DeclRefExpr 0x13702e738 <col:21> 'int' contains-errors lvalue Var 0x137026ec0 'tailen' 'int'
    |         |-CompoundAssignOperator 0x13702e808 <line:62:4, col:21> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |         | |-RecoveryExpr 0x13702e7c0 <col:4, col:9> '<dependent type>' contains-errors lvalue
    |         | | `-DeclRefExpr 0x13702e788 <col:4> 'struct sk_buff *' lvalue ParmVar 0x137026628 'skb' 'struct sk_buff *'
    |         | `-DeclRefExpr 0x13702e7e8 <col:21> 'int' contains-errors lvalue Var 0x137026ec0 'tailen' 'int'
    |         |-IfStmt 0x13702ebd0 <line:63:4, line:64:44>
    |         | |-BinaryOperator 0x13702e9e8 <line:63:8, col:28> 'int' contains-errors '&&'
    |         | | |-ImplicitCastExpr 0x13702e9d0 <col:8> 'struct sock *' contains-errors <LValueToRValue>
    |         | | | `-DeclRefExpr 0x13702e838 <col:8> 'struct sock *' contains-errors lvalue Var 0x135813e48 'sk' 'struct sock *'
    |         | | `-CallExpr 0x13702e990 <col:14, col:28> 'int' contains-errors
    |         | |   |-ImplicitCastExpr 0x13702e978 <col:14> 'int (*)()' <FunctionToPointerDecay>
    |         | |   | `-DeclRefExpr 0x13702e938 <col:14> 'int ()' Function 0x13702e880 'sk_fullsock' 'int ()'
    |         | |   `-ImplicitCastExpr 0x13702e9b8 <col:26> 'struct sock *' contains-errors <LValueToRValue>
    |         | |     `-DeclRefExpr 0x13702e958 <col:26> 'struct sock *' contains-errors lvalue Var 0x135813e48 'sk' 'struct sock *'
    |         | `-CallExpr 0x13702eba0 <line:64:5, col:44> '<dependent type>' contains-errors
    |         |   |-DeclRefExpr 0x13702eae8 <col:5> 'int ()' Function 0x13702ea30 'refcount_add' 'int ()'
    |         |   |-DeclRefExpr 0x13702eb08 <col:18> 'int' contains-errors lvalue Var 0x137026ec0 'tailen' 'int'
    |         |   `-UnaryOperator 0x13702eb88 <col:26, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow
    |         |     `-RecoveryExpr 0x13702eb60 <col:27, col:31> '<dependent type>' contains-errors lvalue
    |         |       `-DeclRefExpr 0x13702eb28 <col:27> 'struct sock *' contains-errors lvalue Var 0x135813e48 'sk' 'struct sock *'
    |         `-GotoStmt 0x13702ec40 <line:66:4, col:9> 'out' 0x13702ebf0
    |-LabelStmt 0x137030148 <line:70:1, line:71:69> 'cow'
    | `-BinaryOperator 0x137030128 <col:2, col:69> 'int' contains-errors '='
    |   |-DeclRefExpr 0x13702ed88 <col:2> 'int' lvalue Var 0x137026b20 'esph_offset' 'int'
    |   `-ImplicitCastExpr 0x137030110 <col:16, col:69> 'int' contains-errors <PointerToIntegral>
    |     `-BinaryOperator 0x1370300f0 <col:16, col:69> 'unsigned char *' contains-errors '-'
    |       |-CStyleCastExpr 0x137030070 <col:16, col:38> 'unsigned char *' contains-errors <Dependent>
    |       | `-RecoveryExpr 0x13702ede0 <col:33, col:38> '<dependent type>' contains-errors lvalue
    |       |   `-DeclRefExpr 0x13702eda8 <col:33> 'struct esp_info *' lvalue ParmVar 0x1370267f8 'esp' 'struct esp_info *'
    |       `-CallExpr 0x1370300b0 <col:45, col:69> 'int'
    |         |-ImplicitCastExpr 0x137030098 <col:45> 'int (*)()' <FunctionToPointerDecay>
    |         | `-DeclRefExpr 0x13702ef60 <col:45> 'int ()' Function 0x13702eea8 'skb_transport_header' 'int ()'
    |         `-ImplicitCastExpr 0x1370300d8 <col:66> 'struct sk_buff *' <LValueToRValue>
    |           `-DeclRefExpr 0x13702ef80 <col:66> 'struct sk_buff *' lvalue ParmVar 0x137026628 'skb' 'struct sk_buff *'
    |-BinaryOperator 0x1370303e8 <line:73:2, col:45> 'int' contains-errors '='
    | |-DeclRefExpr 0x137030168 <col:2> 'int' lvalue Var 0x137026a88 'nfrags' 'int'
    | `-CallExpr 0x137030380 <col:11, col:45> 'int' contains-errors
    |   |-ImplicitCastExpr 0x137030368 <col:11> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x137030268 <col:11> 'int ()' Function 0x1370301b0 'skb_cow_data' 'int ()'
    |   |-ImplicitCastExpr 0x1370303b8 <col:24> 'struct sk_buff *' <LValueToRValue>
    |   | `-DeclRefExpr 0x137030288 <col:24> 'struct sk_buff *' lvalue ParmVar 0x137026628 'skb' 'struct sk_buff *'
    |   |-ImplicitCastExpr 0x1370303d0 <col:29> 'int' contains-errors <LValueToRValue>
    |   | `-DeclRefExpr 0x1370302a8 <col:29> 'int' contains-errors lvalue Var 0x137026ec0 'tailen' 'int'
    |   `-UnaryOperator 0x137030350 <col:37, col:38> 'struct sk_buff **' prefix '&' cannot overflow
    |     `-DeclRefExpr 0x1370302c8 <col:38> 'struct sk_buff *' lvalue Var 0x137026e28 'trailer' 'struct sk_buff *'
    |-IfStmt 0x137030498 <line:74:2, line:75:8>
    | |-BinaryOperator 0x137030460 <line:74:6, col:15> 'int' '<'
    | | |-ImplicitCastExpr 0x137030448 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x137030408 <col:6> 'int' lvalue Var 0x137026a88 'nfrags' 'int'
    | | `-IntegerLiteral 0x137030428 <col:15> 'int' 0
    | `-GotoStmt 0x137030480 <line:75:3, col:8> 'out' 0x13702ebf0
    |-BinaryOperator 0x137030990 <line:77:2, col:75> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x137030588 <col:2, col:7> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x137030550 <col:2> 'struct esp_info *' lvalue ParmVar 0x1370267f8 'esp' 'struct esp_info *'
    | `-CStyleCastExpr 0x137030968 <col:14, col:75> 'struct ip_esp_hdr *' <IntegralToPointer>
    |   `-ParenExpr 0x137030948 <col:35, col:75> 'int'
    |     `-BinaryOperator 0x137030928 <col:36, col:64> 'int' '+'
    |       |-CallExpr 0x1370308d0 <col:36, col:60> 'int'
    |       | |-ImplicitCastExpr 0x1370308b8 <col:36> 'int (*)()' <FunctionToPointerDecay>
    |       | | `-DeclRefExpr 0x137030650 <col:36> 'int ()' Function 0x13702eea8 'skb_transport_header' 'int ()'
    |       | `-ImplicitCastExpr 0x1370308f8 <col:57> 'struct sk_buff *' <LValueToRValue>
    |       |   `-DeclRefExpr 0x137030670 <col:57> 'struct sk_buff *' lvalue ParmVar 0x137026628 'skb' 'struct sk_buff *'
    |       `-ImplicitCastExpr 0x137030910 <col:64> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x1370306e8 <col:64> 'int' lvalue Var 0x137026b20 'esph_offset' 'int'
    |-LabelStmt 0x137030af8 <line:79:1, col:9> 'skip_cow'
    | `-NullStmt 0x137030af0 <col:9>
    |-CallExpr 0x137030c90 <line:81:2, col:31> 'int' contains-errors
    | |-ImplicitCastExpr 0x137030c78 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x137030bf8 <col:2> 'int ()' Function 0x137030b40 'pskb_put' 'int ()'
    | |-ImplicitCastExpr 0x137030cc8 <col:11> 'struct sk_buff *' <LValueToRValue>
    | | `-DeclRefExpr 0x137030c18 <col:11> 'struct sk_buff *' lvalue ParmVar 0x137026628 'skb' 'struct sk_buff *'
    | |-ImplicitCastExpr 0x137030ce0 <col:16> 'struct sk_buff *' <LValueToRValue>
    | | `-DeclRefExpr 0x137030c38 <col:16> 'struct sk_buff *' lvalue Var 0x137026e28 'trailer' 'struct sk_buff *'
    | `-ImplicitCastExpr 0x137030cf8 <col:25> 'int' contains-errors <LValueToRValue>
    |   `-DeclRefExpr 0x137030c58 <col:25> 'int' contains-errors lvalue Var 0x137026ec0 'tailen' 'int'
    `-LabelStmt 0x137030d58 <line:83:1, line:84:9> 'out'
      `-ReturnStmt 0x137030d48 <col:2, col:9>
        `-ImplicitCastExpr 0x137030d30 <col:9> 'int' <LValueToRValue>
          `-DeclRefExpr 0x137030d10 <col:9> 'int' lvalue Var 0x137026a88 'nfrags' 'int'
