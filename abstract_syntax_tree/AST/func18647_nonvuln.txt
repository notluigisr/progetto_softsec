TranslationUnitDecl 0x122055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1220564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x122055bd0 '__int128'
|-TypedefDecl 0x122056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x122055bf0 'unsigned __int128'
|-TypedefDecl 0x122126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x122126000 'struct __NSConstantString_tag'
|   `-Record 0x122056580 '__NSConstantString_tag'
|-TypedefDecl 0x122126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x122055d90 '__SVInt8_t'
|-TypedefDecl 0x122126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x122055db0 '__SVInt16_t'
|-TypedefDecl 0x122126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x122055dd0 '__SVInt32_t'
|-TypedefDecl 0x1221263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x122055df0 '__SVInt64_t'
|-TypedefDecl 0x122126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x122055e10 '__SVUint8_t'
|-TypedefDecl 0x1221264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x122055e30 '__SVUint16_t'
|-TypedefDecl 0x122126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x122055e50 '__SVUint32_t'
|-TypedefDecl 0x122126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x122055e70 '__SVUint64_t'
|-TypedefDecl 0x1221265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x122055e90 '__SVFloat16_t'
|-TypedefDecl 0x122126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x122055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1221266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x122055ed0 '__SVFloat64_t'
|-TypedefDecl 0x122126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x122055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x122126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x122055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1221267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x122055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x122126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x122055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1221268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x122055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x122126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x122055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x122126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x122055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1221269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x122055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x122126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x122055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x122126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x122056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x122126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x122056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x122126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x122056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x122126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x122056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x122126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x122056090 '__clang_svint8x3_t'
|-TypedefDecl 0x122126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1220560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x122126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1220560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x122126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1220560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x122126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x122056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x122126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x122056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x122126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x122056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x122126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x122056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x122126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x122056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x122127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1220561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x122127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1220561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1221278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1220561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x122127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x122056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1221279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x122056230 '__clang_svint16x4_t'
|-TypedefDecl 0x122127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x122056250 '__clang_svint32x4_t'
|-TypedefDecl 0x122127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x122056270 '__clang_svint64x4_t'
|-TypedefDecl 0x122127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x122056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x122127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1220562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x122127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1220562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x122127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1220562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x122127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x122056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x122127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x122056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x122127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x122056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x122127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x122056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x122127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x122056390 '__SVBool_t'
|-TypedefDecl 0x122127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1220563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x122127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1220563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x122127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1220563f0 '__SVCount_t'
|-TypedefDecl 0x122127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x122127fb0 'char *'
|   `-BuiltinType 0x1220556b0 'char'
|-TypedefDecl 0x122128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x122127fb0 'char *'
|   `-BuiltinType 0x1220556b0 'char'
`-FunctionDecl 0x1221286b8 <dataset_diviso_filec/func18647_nonvuln.c:2:1, line:46:18> line:2:5 config_parse_line_max 'int (const char *, const char *, unsigned int, const char *, unsigned int, const char *, int, const char *, void *, void *)'
  |-ParmVarDecl 0x1221280d8 <line:3:17, col:29> col:29 used unit 'const char *'
  |-ParmVarDecl 0x122128158 <line:4:17, col:29> col:29 used filename 'const char *'
  |-ParmVarDecl 0x1221281d8 <line:5:17, col:26> col:26 used line 'unsigned int'
  |-ParmVarDecl 0x122128258 <line:6:17, col:29> col:29 section 'const char *'
  |-ParmVarDecl 0x1221282d8 <line:7:17, col:26> col:26 section_line 'unsigned int'
  |-ParmVarDecl 0x122128358 <line:8:17, col:29> col:29 used lvalue 'const char *'
  |-ParmVarDecl 0x1221283d8 <line:9:17, col:21> col:21 ltype 'int'
  |-ParmVarDecl 0x122128458 <line:10:17, col:29> col:29 used rvalue 'const char *'
  |-ParmVarDecl 0x1221284d8 <line:11:17, col:23> col:23 used data 'void *'
  |-ParmVarDecl 0x122128558 <line:12:17, col:23> col:23 userdata 'void *'
  `-CompoundStmt 0x1221435e0 <col:33, line:46:18>
    |-DeclStmt 0x122140ad0 <line:15:9, col:14>
    | `-VarDecl 0x122140a68 <col:9, col:13> col:13 used r 'int'
    |-CallExpr 0x122140c88 <line:17:9, col:24> 'int'
    | |-ImplicitCastExpr 0x122140c70 <col:9> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x122140c00 <col:9> 'int ()' Function 0x122140b48 'assert' 'int ()'
    | `-ImplicitCastExpr 0x122140cb0 <col:16> 'const char *' <LValueToRValue>
    |   `-DeclRefExpr 0x122140c20 <col:16> 'const char *' lvalue ParmVar 0x122128158 'filename' 'const char *'
    |-CallExpr 0x122140d20 <line:18:9, col:22> 'int'
    | |-ImplicitCastExpr 0x122140d08 <col:9> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x122140cc8 <col:9> 'int ()' Function 0x122140b48 'assert' 'int ()'
    | `-ImplicitCastExpr 0x122140d48 <col:16> 'const char *' <LValueToRValue>
    |   `-DeclRefExpr 0x122140ce8 <col:16> 'const char *' lvalue ParmVar 0x122128358 'lvalue' 'const char *'
    |-CallExpr 0x122140db8 <line:19:9, col:22> 'int'
    | |-ImplicitCastExpr 0x122140da0 <col:9> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x122140d60 <col:9> 'int ()' Function 0x122140b48 'assert' 'int ()'
    | `-ImplicitCastExpr 0x122140de0 <col:16> 'const char *' <LValueToRValue>
    |   `-DeclRefExpr 0x122140d80 <col:16> 'const char *' lvalue ParmVar 0x122128458 'rvalue' 'const char *'
    |-CallExpr 0x122140e50 <line:20:9, col:20> 'int'
    | |-ImplicitCastExpr 0x122140e38 <col:9> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x122140df8 <col:9> 'int ()' Function 0x122140b48 'assert' 'int ()'
    | `-ImplicitCastExpr 0x122140e78 <col:16> 'void *' <LValueToRValue>
    |   `-DeclRefExpr 0x122140e18 <col:16> 'void *' lvalue ParmVar 0x1221284d8 'data' 'void *'
    |-IfStmt 0x122143580 <line:22:9, line:44:9> has_else
    | |-CallExpr 0x122140fc8 <line:22:13, col:27> 'int'
    | | |-ImplicitCastExpr 0x122140fb0 <col:13> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x122140f70 <col:13> 'int ()' Function 0x122140eb8 'isempty' 'int ()'
    | | `-ImplicitCastExpr 0x122140ff0 <col:21> 'const char *' <LValueToRValue>
    | |   `-DeclRefExpr 0x122140f90 <col:21> 'const char *' lvalue ParmVar 0x122128458 'rvalue' 'const char *'
    | |-BinaryOperator 0x1221410f8 <line:24:17, col:23> '<dependent type>' contains-errors '='
    | | |-UnaryOperator 0x1221410c0 <col:17, col:18> '<dependent type>' contains-errors prefix '*' cannot overflow
    | | | `-ImplicitCastExpr 0x1221410a8 <col:18> '<dependent type>' contains-errors <LValueToRValue>
    | | |   `-RecoveryExpr 0x122141088 <col:18> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x1221410d8 <col:23> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x122143558 <line:25:14, line:44:9>
    |   |-BinaryOperator 0x122141370 <line:28:17, col:48> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x122141118 <col:17> 'int' lvalue Var 0x122140a68 'r' 'int'
    |   | `-CallExpr 0x122141338 <col:21, col:48> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x122141218 <col:21> 'int ()' Function 0x122141160 'parse_size' 'int ()'
    |   |   |-DeclRefExpr 0x122141238 <col:32> 'const char *' lvalue ParmVar 0x122128458 'rvalue' 'const char *'
    |   |   |-IntegerLiteral 0x122141258 <col:40> 'int' 1024
    |   |   `-UnaryOperator 0x122141320 <col:46, col:47> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |     `-RecoveryExpr 0x122141300 <col:47> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x122141740 <line:29:17, line:32:17>
    |   | |-BinaryOperator 0x1221413e8 <line:29:21, col:25> 'int' '<'
    |   | | |-ImplicitCastExpr 0x1221413d0 <col:21> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x122141390 <col:21> 'int' lvalue Var 0x122140a68 'r' 'int'
    |   | | `-IntegerLiteral 0x1221413b0 <col:25> 'int' 0
    |   | `-CompoundStmt 0x122141720 <col:28, line:32:17>
    |   |   |-CallExpr 0x122141698 <line:30:25, col:83> '<dependent type>' contains-errors
    |   |   | |-DeclRefExpr 0x1221414e8 <col:25> 'int ()' Function 0x122141430 'log_syntax' 'int ()'
    |   |   | |-DeclRefExpr 0x122141508 <col:36> 'const char *' lvalue ParmVar 0x1221280d8 'unit' 'const char *'
    |   |   | |-RecoveryExpr 0x122141678 <col:42> '<dependent type>' contains-errors lvalue
    |   |   | |-DeclRefExpr 0x122141540 <col:51> 'const char *' lvalue ParmVar 0x122128158 'filename' 'const char *'
    |   |   | |-DeclRefExpr 0x122141560 <col:61> 'unsigned int' lvalue ParmVar 0x1221281d8 'line' 'unsigned int'
    |   |   | |-DeclRefExpr 0x122141580 <col:67> 'int' lvalue Var 0x122140a68 'r' 'int'
    |   |   | |-StringLiteral 0x1221415e0 <col:70> 'char[4]' lvalue "STR"
    |   |   | `-DeclRefExpr 0x122141600 <col:77> 'const char *' lvalue ParmVar 0x122128458 'rvalue' 'const char *'
    |   |   `-ReturnStmt 0x122141710 <line:31:25, col:32>
    |   |     `-IntegerLiteral 0x1221416f0 <col:32> 'int' 0
    |   `-IfStmt 0x122143528 <line:34:17, line:43:25> has_else
    |     |-BinaryOperator 0x1221417d8 <line:34:21, col:25> 'int' contains-errors '<'
    |     | |-RecoveryExpr 0x1221417b8 <col:21> '<dependent type>' contains-errors lvalue
    |     | `-IntegerLiteral 0x122141778 <col:25> 'int' 79
    |     |-CompoundStmt 0x1221432c8 <col:29, line:38:17>
    |     | |-CallExpr 0x122141968 <line:36:25, col:87> '<dependent type>' contains-errors
    |     | | |-DeclRefExpr 0x1221417f8 <col:25> 'int ()' Function 0x122141430 'log_syntax' 'int ()'
    |     | | |-DeclRefExpr 0x122141818 <col:36> 'const char *' lvalue ParmVar 0x1221280d8 'unit' 'const char *'
    |     | | |-RecoveryExpr 0x122141948 <col:42> '<dependent type>' contains-errors lvalue
    |     | | |-DeclRefExpr 0x122141850 <col:55> 'const char *' lvalue ParmVar 0x122128158 'filename' 'const char *'
    |     | | |-DeclRefExpr 0x122141870 <col:65> 'unsigned int' lvalue ParmVar 0x1221281d8 'line' 'unsigned int'
    |     | | |-IntegerLiteral 0x122141890 <col:71> 'int' 0
    |     | | |-StringLiteral 0x1221418b0 <col:74> 'char[4]' lvalue "STR"
    |     | | `-DeclRefExpr 0x1221418d0 <col:81> 'const char *' lvalue ParmVar 0x122128458 'rvalue' 'const char *'
    |     | `-BinaryOperator 0x1221432a8 <line:37:25, col:31> '<dependent type>' contains-errors '='
    |     |   |-UnaryOperator 0x122143290 <col:25, col:26> '<dependent type>' contains-errors prefix '*' cannot overflow
    |     |   | `-ImplicitCastExpr 0x122143278 <col:26> '<dependent type>' contains-errors <LValueToRValue>
    |     |   |   `-RecoveryExpr 0x122143258 <col:26> '<dependent type>' contains-errors lvalue
    |     |   `-IntegerLiteral 0x122143218 <col:31> 'int' 79
    |     `-IfStmt 0x1221434f8 <line:38:24, line:43:25> has_else
    |       |-RecoveryExpr 0x122143370 <line:38:28, col:55> '_Bool' contains-errors
    |       |-CompoundStmt 0x1221434e0 <col:58, line:42:17>
    |       `-NullStmt 0x1221434f0 <line:43:25>
    `-ReturnStmt 0x1221435d0 <line:46:9, col:16>
      `-IntegerLiteral 0x1221435b0 <col:16> 'int' 0
