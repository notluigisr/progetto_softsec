TranslationUnitDecl 0x123055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1230564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x123055bd0 '__int128'
|-TypedefDecl 0x123056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x123055bf0 'unsigned __int128'
|-TypedefDecl 0x123126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x123126000 'struct __NSConstantString_tag'
|   `-Record 0x123056580 '__NSConstantString_tag'
|-TypedefDecl 0x123126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x123055d90 '__SVInt8_t'
|-TypedefDecl 0x123126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x123055db0 '__SVInt16_t'
|-TypedefDecl 0x123126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x123055dd0 '__SVInt32_t'
|-TypedefDecl 0x1231263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x123055df0 '__SVInt64_t'
|-TypedefDecl 0x123126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x123055e10 '__SVUint8_t'
|-TypedefDecl 0x1231264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x123055e30 '__SVUint16_t'
|-TypedefDecl 0x123126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x123055e50 '__SVUint32_t'
|-TypedefDecl 0x123126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x123055e70 '__SVUint64_t'
|-TypedefDecl 0x1231265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x123055e90 '__SVFloat16_t'
|-TypedefDecl 0x123126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x123055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1231266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x123055ed0 '__SVFloat64_t'
|-TypedefDecl 0x123126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x123055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x123126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x123055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1231267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x123055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x123126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x123055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1231268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x123055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x123126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x123055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x123126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x123055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1231269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x123055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x123126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x123055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x123126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x123056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x123126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x123056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x123126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x123056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x123126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x123056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x123126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x123056090 '__clang_svint8x3_t'
|-TypedefDecl 0x123126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1230560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x123126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1230560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x123126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1230560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x123126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x123056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x123126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x123056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x123126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x123056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x123126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x123056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x123126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x123056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x123127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1230561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x123127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1230561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1231278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1230561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x123127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x123056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1231279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x123056230 '__clang_svint16x4_t'
|-TypedefDecl 0x123127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x123056250 '__clang_svint32x4_t'
|-TypedefDecl 0x123127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x123056270 '__clang_svint64x4_t'
|-TypedefDecl 0x123127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x123056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x123127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1230562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x123127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1230562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x123127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1230562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x123127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x123056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x123127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x123056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x123127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x123056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x123127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x123056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x123127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x123056390 '__SVBool_t'
|-TypedefDecl 0x123127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1230563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x123127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1230563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x123127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1230563f0 '__SVCount_t'
|-TypedefDecl 0x123127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x123127fb0 'char *'
|   `-BuiltinType 0x1230556b0 'char'
|-TypedefDecl 0x123128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x123127fb0 'char *'
|   `-BuiltinType 0x1230556b0 'char'
|-FunctionDecl 0x123140c08 <dataset_diviso_filec/func7216_nonvuln.c:1:1, line:44:1> line:1:1 invalid HTTP_GetHdrPack 'int (struct worker *, struct objcore *, int)'
| |-ParmVarDecl 0x123128648 <col:17, col:32> col:32 used wrk 'struct worker *'
| |-ParmVarDecl 0x123140a28 <col:37, col:53> col:53 used oc 'struct objcore *'
| |-ParmVarDecl 0x123140ac0 <col:57, col:63> col:63 referenced invalid hdr 'int'
| `-CompoundStmt 0x1238090d8 <line:2:1, line:44:1>
|   |-DeclStmt 0x123140d48 <line:3:2, col:17>
|   | `-VarDecl 0x123140ce0 <col:2, col:14> col:14 used ptr 'const char *'
|   |-DeclStmt 0x123140de0 <line:4:2, col:12>
|   | `-VarDecl 0x123140d78 <col:2, col:11> col:11 used l 'unsigned int'
|   |-CallExpr 0x123140ff8 <line:6:2, col:37> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x123140f50 <col:2> 'int ()' Function 0x123140e98 'CHECK_OBJ_NOTNULL' 'int ()'
|   | |-DeclRefExpr 0x123140f70 <col:20> 'struct worker *' lvalue ParmVar 0x123128648 'wrk' 'struct worker *'
|   | `-RecoveryExpr 0x123140fd8 <col:25> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x1231410d0 <line:7:2, col:37> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x123141028 <col:2> 'int ()' Function 0x123140e98 'CHECK_OBJ_NOTNULL' 'int ()'
|   | |-DeclRefExpr 0x123141048 <col:20> 'struct objcore *' lvalue ParmVar 0x123140a28 'oc' 'struct objcore *'
|   | `-RecoveryExpr 0x1231410b0 <col:24> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x123141220 <line:8:2, col:8> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x1231411e0 <col:2> 'int ()' Function 0x123141128 'AN' 'int ()'
|   | `-RecoveryExpr 0x123141200 <col:5> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x1231412e0 <line:10:2, col:11> 'unsigned int' contains-errors '='
|   | |-DeclRefExpr 0x123141248 <col:2> 'unsigned int' lvalue Var 0x123140d78 'l' 'unsigned int'
|   | `-ArraySubscriptExpr 0x1231412c0 <col:6, col:11> '<dependent type>' contains-errors lvalue
|   |   |-ImplicitCastExpr 0x1231412a8 <col:6> '<dependent type>' contains-errors <LValueToRValue>
|   |   | `-RecoveryExpr 0x123141268 <col:6> '<dependent type>' contains-errors lvalue
|   |   `-IntegerLiteral 0x123141288 <col:10> 'int' 0
|   |-CallExpr 0x1231414d8 <line:11:2, col:14> 'int'
|   | |-ImplicitCastExpr 0x1231414c0 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1231413e0 <col:2> 'int ()' Function 0x123141328 'assert' 'int ()'
|   | `-BinaryOperator 0x123141470 <col:9, col:13> 'int' '>'
|   |   |-ImplicitCastExpr 0x123141440 <col:9> 'unsigned int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x123141400 <col:9> 'unsigned int' lvalue Var 0x123140d78 'l' 'unsigned int'
|   |   `-ImplicitCastExpr 0x123141458 <col:13> 'unsigned int' <IntegralCast>
|   |     `-IntegerLiteral 0x123141420 <col:13> 'int' 0
|   |-CallExpr 0x1231417b0 <line:12:2, col:29> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x123141500 <col:2> 'int ()' Function 0x123141328 'assert' 'int ()'
|   | `-BinaryOperator 0x123141790 <col:9, col:28> 'int' contains-errors '=='
|   |   |-DeclRefExpr 0x123141520 <col:9> 'unsigned int' lvalue Var 0x123140d78 'l' 'unsigned int'
|   |   `-CallExpr 0x123141768 <col:14, col:28> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x1231416e8 <col:14> 'unsigned long (const char *)' Function 0x123141578 'strlen' 'unsigned long (const char *)'
|   |     `-BinaryOperator 0x123141748 <col:21, col:27> '<dependent type>' contains-errors '+'
|   |       |-RecoveryExpr 0x123141708 <col:21> '<dependent type>' contains-errors lvalue
|   |       `-IntegerLiteral 0x123141728 <col:27> 'int' 1
|   |-CallExpr 0x1231418c0 <line:13:2, col:22> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x1231417d8 <col:2> 'int ()' Function 0x123141328 'assert' 'int ()'
|   | `-BinaryOperator 0x1231418a0 <col:9, col:19> 'int' contains-errors '=='
|   |   |-ArraySubscriptExpr 0x123141868 <col:9, col:14> '<dependent type>' contains-errors lvalue
|   |   | |-ImplicitCastExpr 0x123141838 <col:9> '<dependent type>' contains-errors <LValueToRValue>
|   |   | | `-RecoveryExpr 0x1231417f8 <col:9> '<dependent type>' contains-errors lvalue
|   |   | `-ImplicitCastExpr 0x123141850 <col:13> 'unsigned int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x123141818 <col:13> 'unsigned int' lvalue Var 0x123140d78 'l' 'unsigned int'
|   |   `-CharacterLiteral 0x123141888 <col:19> 'int' 58
|   |-UnaryOperator 0x123141930 <line:14:2, col:5> '<dependent type>' contains-errors postfix '++' cannot overflow
|   | `-RecoveryExpr 0x123141908 <col:2> '<dependent type>' contains-errors lvalue
|   |   `-DeclRefExpr 0x1231418e8 <col:2> 'int' lvalue ParmVar 0x123140ac0 'hdr' 'int'
|   |-IfStmt 0x1238089a8 <line:16:2, line:32:2>
|   | |-BinaryOperator 0x1231419d8 <line:16:6, col:16> 'int' contains-errors '=='
|   | | |-ArraySubscriptExpr 0x1231419a0 <col:6, col:11> '<dependent type>' contains-errors lvalue
|   | | | |-ImplicitCastExpr 0x123141988 <col:6> '<dependent type>' contains-errors <LValueToRValue>
|   | | | | `-RecoveryExpr 0x123141948 <col:6> '<dependent type>' contains-errors lvalue
|   | | | `-IntegerLiteral 0x123141968 <col:10> 'int' 0
|   | | `-CharacterLiteral 0x1231419c0 <col:16> 'int' 58
|   | `-CompoundStmt 0x123808950 <col:21, line:32:2>
|   |   |-BinaryOperator 0x123142a70 <line:18:3, col:45> 'const char *' contains-errors '='
|   |   | |-DeclRefExpr 0x123142800 <col:3> 'const char *' lvalue Var 0x123140ce0 'ptr' 'const char *'
|   |   | `-CallExpr 0x123142a30 <col:9, col:45> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x123142900 <col:9> 'int ()' Function 0x123142848 'ObjGetAttr' 'int ()'
|   |   |   |-DeclRefExpr 0x123142920 <col:20> 'struct worker *' lvalue ParmVar 0x123128648 'wrk' 'struct worker *'
|   |   |   |-DeclRefExpr 0x123142940 <col:25> 'struct objcore *' lvalue ParmVar 0x123140a28 'oc' 'struct objcore *'
|   |   |   |-RecoveryExpr 0x1231429f0 <col:29> '<dependent type>' contains-errors lvalue
|   |   |   `-RecoveryExpr 0x123142a10 <col:41> '<dependent type>' contains-errors lvalue
|   |   |-CallExpr 0x123142ae8 <line:19:3, col:9> 'int'
|   |   | |-ImplicitCastExpr 0x123142ad0 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x123142a90 <col:3> 'int ()' Function 0x123141128 'AN' 'int ()'
|   |   | `-ImplicitCastExpr 0x123142b10 <col:6> 'const char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x123142ab0 <col:6> 'const char *' lvalue Var 0x123140ce0 'ptr' 'const char *'
|   |   |-CompoundAssignOperator 0x123142b68 <line:20:3, col:10> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'
|   |   | |-DeclRefExpr 0x123142b28 <col:3> 'const char *' lvalue Var 0x123140ce0 'ptr' 'const char *'
|   |   | `-IntegerLiteral 0x123142b48 <col:10> 'int' 4
|   |   |-IfStmt 0x123142f58 <line:23:3, line:24:15>
|   |   | |-UnaryOperator 0x123142ec0 <line:23:7, col:25> '<dependent type>' contains-errors prefix '!' cannot overflow
|   |   | | `-CallExpr 0x123142e90 <col:8, col:25> '<dependent type>' contains-errors
|   |   | |   |-DeclRefExpr 0x123142dc0 <col:8> 'int (const char *, const char *)' Function 0x123142be0 'strcmp' 'int (const char *, const char *)'
|   |   | |   |-RecoveryExpr 0x123142de0 <col:15> '<dependent type>' contains-errors lvalue
|   |   | |   `-StringLiteral 0x123142e40 <col:20> 'char[4]' lvalue "STR"
|   |   | `-ReturnStmt 0x123142f48 <line:24:4, col:15>
|   |   |   `-ImplicitCastExpr 0x123142f30 <col:11, col:15> 'int' <PointerToIntegral>
|   |   |     `-ImplicitCastExpr 0x123142f18 <col:11, col:15> 'const char *' <LValueToRValue>
|   |   |       `-ParenExpr 0x123142ef8 <col:11, col:15> 'const char *' lvalue
|   |   |         `-DeclRefExpr 0x123142ed8 <col:12> 'const char *' lvalue Var 0x123140ce0 'ptr' 'const char *'
|   |   |-BinaryOperator 0x123143318 <line:25:3, col:29> 'const char *' '='
|   |   | |-DeclRefExpr 0x123142f78 <col:3> 'const char *' lvalue Var 0x123140ce0 'ptr' 'const char *'
|   |   | `-ImplicitCastExpr 0x123143300 <col:9, col:29> 'const char *' <NoOp>
|   |   |   `-BinaryOperator 0x1231432e0 <col:9, col:29> 'char *' '+'
|   |   |     |-CallExpr 0x123143278 <col:9, col:25> 'char *'
|   |   |     | |-ImplicitCastExpr 0x123143260 <col:9> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   |   |     | | `-DeclRefExpr 0x1231431c0 <col:9> 'char *(const char *, int)' Function 0x123142fe0 'strchr' 'char *(const char *, int)'
|   |   |     | |-ImplicitCastExpr 0x1231432a8 <col:16> 'const char *' <LValueToRValue>
|   |   |     | | `-DeclRefExpr 0x1231431e0 <col:16> 'const char *' lvalue Var 0x123140ce0 'ptr' 'const char *'
|   |   |     | `-CharacterLiteral 0x123143200 <col:21> 'int' 0
|   |   |     `-IntegerLiteral 0x1231432c0 <col:29> 'int' 1
|   |   |-IfStmt 0x123143490 <line:26:3, line:27:15>
|   |   | |-UnaryOperator 0x1231433f8 <line:26:7, col:25> '<dependent type>' contains-errors prefix '!' cannot overflow
|   |   | | `-CallExpr 0x1231433c8 <col:8, col:25> '<dependent type>' contains-errors
|   |   | |   |-DeclRefExpr 0x123143338 <col:8> 'int (const char *, const char *)' Function 0x123142be0 'strcmp' 'int (const char *, const char *)'
|   |   | |   |-RecoveryExpr 0x123143358 <col:15> '<dependent type>' contains-errors lvalue
|   |   | |   `-StringLiteral 0x123143378 <col:20> 'char[4]' lvalue "STR"
|   |   | `-ReturnStmt 0x123143480 <line:27:4, col:15>
|   |   |   `-ImplicitCastExpr 0x123143468 <col:11, col:15> 'int' <PointerToIntegral>
|   |   |     `-ImplicitCastExpr 0x123143450 <col:11, col:15> 'const char *' <LValueToRValue>
|   |   |       `-ParenExpr 0x123143430 <col:11, col:15> 'const char *' lvalue
|   |   |         `-DeclRefExpr 0x123143410 <col:12> 'const char *' lvalue Var 0x123140ce0 'ptr' 'const char *'
|   |   |-BinaryOperator 0x1231435f8 <line:28:3, col:29> 'const char *' '='
|   |   | |-DeclRefExpr 0x1231434b0 <col:3> 'const char *' lvalue Var 0x123140ce0 'ptr' 'const char *'
|   |   | `-ImplicitCastExpr 0x1231435e0 <col:9, col:29> 'const char *' <NoOp>
|   |   |   `-BinaryOperator 0x1231435c0 <col:9, col:29> 'char *' '+'
|   |   |     |-CallExpr 0x123143558 <col:9, col:25> 'char *'
|   |   |     | |-ImplicitCastExpr 0x123143540 <col:9> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   |   |     | | `-DeclRefExpr 0x1231434d0 <col:9> 'char *(const char *, int)' Function 0x123142fe0 'strchr' 'char *(const char *, int)'
|   |   |     | |-ImplicitCastExpr 0x123143588 <col:16> 'const char *' <LValueToRValue>
|   |   |     | | `-DeclRefExpr 0x1231434f0 <col:16> 'const char *' lvalue Var 0x123140ce0 'ptr' 'const char *'
|   |   |     | `-CharacterLiteral 0x123143510 <col:21> 'int' 0
|   |   |     `-IntegerLiteral 0x1231435a0 <col:29> 'int' 1
|   |   |-IfStmt 0x123143770 <line:29:3, line:30:15>
|   |   | |-UnaryOperator 0x1231436d8 <line:29:7, col:25> '<dependent type>' contains-errors prefix '!' cannot overflow
|   |   | | `-CallExpr 0x1231436a8 <col:8, col:25> '<dependent type>' contains-errors
|   |   | |   |-DeclRefExpr 0x123143618 <col:8> 'int (const char *, const char *)' Function 0x123142be0 'strcmp' 'int (const char *, const char *)'
|   |   | |   |-RecoveryExpr 0x123143638 <col:15> '<dependent type>' contains-errors lvalue
|   |   | |   `-StringLiteral 0x123143658 <col:20> 'char[4]' lvalue "STR"
|   |   | `-ReturnStmt 0x123143760 <line:30:4, col:15>
|   |   |   `-ImplicitCastExpr 0x123143748 <col:11, col:15> 'int' <PointerToIntegral>
|   |   |     `-ImplicitCastExpr 0x123143730 <col:11, col:15> 'const char *' <LValueToRValue>
|   |   |       `-ParenExpr 0x123143710 <col:11, col:15> 'const char *' lvalue
|   |   |         `-DeclRefExpr 0x1231436f0 <col:12> 'const char *' lvalue Var 0x123140ce0 'ptr' 'const char *'
|   |   `-CallExpr 0x123808910 <line:31:3, col:14> 'int'
|   |     |-ImplicitCastExpr 0x1238088f8 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1238088b8 <col:3> 'int ()' Function 0x123808800 'WRONG' 'int ()'
|   |     `-ImplicitCastExpr 0x123808938 <col:9> 'char *' <ArrayToPointerDecay>
|   |       `-StringLiteral 0x1238088d8 <col:9> 'char[4]' lvalue "STR"
|   |-CallExpr 0x123808b40 <line:34:2, col:32> 'int'
|   | |-ImplicitCastExpr 0x123808b28 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x123808aa8 <col:2> 'int ()' Function 0x1238089f0 'HTTP_FOREACH_PACK' 'int ()'
|   | |-ImplicitCastExpr 0x123808b78 <col:20> 'struct worker *' <LValueToRValue>
|   | | `-DeclRefExpr 0x123808ac8 <col:20> 'struct worker *' lvalue ParmVar 0x123128648 'wrk' 'struct worker *'
|   | |-ImplicitCastExpr 0x123808b90 <col:25> 'struct objcore *' <LValueToRValue>
|   | | `-DeclRefExpr 0x123808ae8 <col:25> 'struct objcore *' lvalue ParmVar 0x123140a28 'oc' 'struct objcore *'
|   | `-ImplicitCastExpr 0x123808ba8 <col:29> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x123808b08 <col:29> 'const char *' lvalue Var 0x123140ce0 'ptr' 'const char *'
|   `-CompoundStmt 0x1238090c0 <col:34, line:41:2>
|     `-IfStmt 0x1238090a0 <line:35:3, line:40:3>
|       |-CallExpr 0x123808d20 <line:35:7, col:30> '<dependent type>' contains-errors
|       | |-DeclRefExpr 0x123808ca0 <col:7> 'int ()' Function 0x123808be8 'http_hdr_at' 'int ()'
|       | |-DeclRefExpr 0x123808cc0 <col:19> 'const char *' lvalue Var 0x123140ce0 'ptr' 'const char *'
|       | |-RecoveryExpr 0x123808ce0 <col:24> '<dependent type>' contains-errors lvalue
|       | `-DeclRefExpr 0x123808d00 <col:29> 'unsigned int' lvalue Var 0x123140d78 'l' 'unsigned int'
|       `-CompoundStmt 0x123809078 <col:33, line:40:3>
|         |-CompoundAssignOperator 0x123808db0 <line:36:4, col:11> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'
|         | |-DeclRefExpr 0x123808d58 <col:4> 'const char *' lvalue Var 0x123140ce0 'ptr' 'const char *'
|         | `-ImplicitCastExpr 0x123808d98 <col:11> 'unsigned int' <LValueToRValue>
|         |   `-DeclRefExpr 0x123808d78 <col:11> 'unsigned int' lvalue Var 0x123140d78 'l' 'unsigned int'
|         |-WhileStmt 0x123808fd8 <line:37:4, line:38:8>
|         | |-CallExpr 0x123808f48 <line:37:11, col:25> 'int'
|         | | |-ImplicitCastExpr 0x123808f30 <col:11> 'int (*)()' <FunctionToPointerDecay>
|         | | | `-DeclRefExpr 0x123808ec0 <col:11> 'int ()' Function 0x123808e08 'vct_islws' 'int ()'
|         | | `-ImplicitCastExpr 0x123808f88 <col:21, col:22> 'int' <IntegralCast>
|         | |   `-ImplicitCastExpr 0x123808f70 <col:21, col:22> 'char' <LValueToRValue>
|         | |     `-UnaryOperator 0x123808f18 <col:21, col:22> 'const char' lvalue prefix '*' cannot overflow
|         | |       `-ImplicitCastExpr 0x123808f00 <col:22> 'const char *' <LValueToRValue>
|         | |         `-DeclRefExpr 0x123808ee0 <col:22> 'const char *' lvalue Var 0x123140ce0 'ptr' 'const char *'
|         | `-UnaryOperator 0x123808fc0 <line:38:5, col:8> 'const char *' postfix '++'
|         |   `-DeclRefExpr 0x123808fa0 <col:5> 'const char *' lvalue Var 0x123140ce0 'ptr' 'const char *'
|         `-ReturnStmt 0x123809068 <line:39:4, col:15>
|           `-ImplicitCastExpr 0x123809050 <col:11, col:15> 'int' <PointerToIntegral>
|             `-ImplicitCastExpr 0x123809038 <col:11, col:15> 'const char *' <LValueToRValue>
|               `-ParenExpr 0x123809018 <col:11, col:15> 'const char *' lvalue
|                 `-DeclRefExpr 0x123808ff8 <col:12> 'const char *' lvalue Var 0x123140ce0 'ptr' 'const char *'
|-FunctionDecl 0x123141578 <line:12:14> col:14 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x123141678 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x123141620 <<invalid sloc>> Implicit 902
|-FunctionDecl 0x123142be0 <line:23:8> col:8 implicit used strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x123142ce0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x123142d48 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x123142c88 <<invalid sloc>> Implicit 887
`-FunctionDecl 0x123142fe0 <line:25:9> col:9 implicit used strchr 'char *(const char *, int)' extern
  |-ParmVarDecl 0x1231430e0 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x123143148 <<invalid sloc>> <invalid sloc> 'int'
  `-BuiltinAttr 0x123143088 <<invalid sloc>> Implicit 893
