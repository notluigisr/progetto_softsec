TranslationUnitDecl 0x130055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1300564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x130055bd0 '__int128'
|-TypedefDecl 0x130056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x130055bf0 'unsigned __int128'
|-TypedefDecl 0x12800be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12800bc00 'struct __NSConstantString_tag'
|   `-Record 0x130056580 '__NSConstantString_tag'
|-TypedefDecl 0x12800be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x130055d90 '__SVInt8_t'
|-TypedefDecl 0x12800bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x130055db0 '__SVInt16_t'
|-TypedefDecl 0x12800bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x130055dd0 '__SVInt32_t'
|-TypedefDecl 0x12800bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x130055df0 '__SVInt64_t'
|-TypedefDecl 0x12800c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x130055e10 '__SVUint8_t'
|-TypedefDecl 0x12800c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x130055e30 '__SVUint16_t'
|-TypedefDecl 0x12800c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x130055e50 '__SVUint32_t'
|-TypedefDecl 0x12800c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x130055e70 '__SVUint64_t'
|-TypedefDecl 0x12800c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x130055e90 '__SVFloat16_t'
|-TypedefDecl 0x12800c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x130055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12800c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x130055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12800c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x130055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12800c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x130055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12800c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x130055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12800c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x130055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12800c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x130055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12800c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x130055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12800c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x130055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12800c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x130055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12800c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x130055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12800c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x130056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12800c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x130056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12800c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x130056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12800c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x130056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12800c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x130056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12800c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1300560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12800c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1300560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12800c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1300560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12800c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x130056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12800ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x130056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12800cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x130056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12800cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x130056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12800cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x130056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12800d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1300561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12800d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1300561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12800d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1300561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12800d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x130056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12800d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x130056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12800d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x130056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12800d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x130056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12800d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x130056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12800d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1300562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12800d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1300562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12800d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1300562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12800d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x130056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12800d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x130056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12800d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x130056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12800d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x130056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12800da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x130056390 '__SVBool_t'
|-TypedefDecl 0x12800da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1300563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12800dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1300563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12800db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1300563f0 '__SVCount_t'
|-TypedefDecl 0x12800dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12800dbb0 'char *'
|   `-BuiltinType 0x1300556b0 'char'
|-TypedefDecl 0x12800dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12800dbb0 'char *'
|   `-BuiltinType 0x1300556b0 'char'
|-FunctionDecl 0x12800dee8 <dataset_diviso_filec/func13036_vuln.c:1:1, line:89:1> line:1:5 invalid gnutls_x509_ext_import_crl_dist_points 'int (const int *, int, unsigned int)'
| |-ParmVarDecl 0x12800dcf0 <col:44, col:67> col:67 invalid ext 'const int *'
| |-ParmVarDecl 0x12800dd70 <line:2:6, col:36> col:36 invalid cdp 'int'
| |-ParmVarDecl 0x12800ddf0 <line:3:6, col:19> col:19 flags 'unsigned int'
| `-CompoundStmt 0x12802b5d0 <line:4:1, line:89:1>
|   |-DeclStmt 0x12800e028 <line:5:2, col:12>
|   | `-VarDecl 0x12800dfc0 <col:2, col:6> col:6 used result 'int'
|   |-DeclStmt 0x12800e0d0 <line:7:2, col:31>
|   | `-VarDecl 0x12800e068 <col:2, col:7> col:7 invalid name 'char'
|   |-DeclStmt 0x12800e200 <line:8:2, col:14>
|   | |-VarDecl 0x12800e100 <col:2, col:6> col:6 used len 'int'
|   | `-VarDecl 0x12800e180 <col:2, col:11> col:11 used ret 'int'
|   |-DeclStmt 0x128027490 <line:10:2, col:29>
|   | |-VarDecl 0x12800e230 <col:2, col:11> col:11 used i 'unsigned int'
|   | |-VarDecl 0x12800e2b0 <col:2, col:14> col:14 used type 'unsigned int'
|   | |-VarDecl 0x12800e330 <col:2, col:20> col:20 used rflags 'unsigned int'
|   | `-VarDecl 0x128027400 <col:2, col:28> col:28 used j 'unsigned int'
|   |-BinaryOperator 0x128027978 <line:13:2, line:14:37> 'int' contains-errors '='
|   | |-DeclRefExpr 0x1280274a8 <line:13:2> 'int' lvalue Var 0x12800dfc0 'result' 'int'
|   | `-CallExpr 0x128027940 <col:11, line:14:37> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x128027620 <line:13:11> 'int ()' Function 0x128027568 'asn1_create_element' 'int ()'
|   |   |-CallExpr 0x1280278e8 <line:14:7, col:24> 'int'
|   |   | `-ImplicitCastExpr 0x1280278d0 <col:7> 'int (*)()' <FunctionToPointerDecay>
|   |   |   `-DeclRefExpr 0x128027720 <col:7> 'int ()' Function 0x128027668 '_gnutls_get_pkix' 'int ()'
|   |   |-StringLiteral 0x1280277f0 <col:27> 'char[4]' lvalue "STR"
|   |   `-UnaryOperator 0x128027928 <col:34, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     `-RecoveryExpr 0x128027908 <col:35> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x128027d10 <line:15:2, line:18:2>
|   | |-BinaryOperator 0x128027a10 <line:15:6, col:16> 'int' contains-errors '!='
|   | | |-DeclRefExpr 0x128027998 <col:6> 'int' lvalue Var 0x12800dfc0 'result' 'int'
|   | | `-RecoveryExpr 0x1280279f0 <col:16> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x128027cf0 <col:30, line:18:2>
|   |   |-CallExpr 0x128027b48 <line:16:3, col:17> 'int'
|   |   | `-ImplicitCastExpr 0x128027b30 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   |   `-DeclRefExpr 0x128027b10 <col:3> 'int ()' Function 0x128027a58 'gnutls_assert' 'int ()'
|   |   `-ReturnStmt 0x128027ce0 <line:17:3, col:32>
|   |     `-CallExpr 0x128027ca0 <col:10, col:32> 'int'
|   |       |-ImplicitCastExpr 0x128027c88 <col:10> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x128027c48 <col:10> 'int ()' Function 0x128027b90 '_gnutls_asn2err' 'int ()'
|   |       `-ImplicitCastExpr 0x128027cc8 <col:26> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x128027c68 <col:26> 'int' lvalue Var 0x12800dfc0 'result' 'int'
|   |-BinaryOperator 0x128028060 <line:20:2, col:60> 'int' contains-errors '='
|   | |-DeclRefExpr 0x128027d30 <col:2> 'int' lvalue Var 0x12800dfc0 'result' 'int'
|   | `-CallExpr 0x128028020 <col:11, col:60> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x128027e30 <col:11> 'int ()' Function 0x128027d78 'asn1_der_decoding' 'int ()'
|   |   |-UnaryOperator 0x128027fe8 <col:29, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   | `-RecoveryExpr 0x128027fc8 <col:30> '<dependent type>' contains-errors lvalue
|   |   |-CXXDependentScopeMemberExpr 0x128027ea0 <col:34, col:39> '<dependent type>' contains-errors lvalue ->data
|   |   | `-RecoveryExpr 0x128027e80 <col:34> '<dependent type>' contains-errors lvalue
|   |   |-CXXDependentScopeMemberExpr 0x128027f08 <col:45, col:50> '<dependent type>' contains-errors lvalue ->size
|   |   | `-RecoveryExpr 0x128027ee8 <col:45> '<dependent type>' contains-errors lvalue
|   |   `-RecoveryExpr 0x128028000 <col:56> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x1280282d8 <line:22:2, line:26:2>
|   | |-BinaryOperator 0x1280280f8 <line:22:6, col:16> 'int' contains-errors '!='
|   | | |-DeclRefExpr 0x128028080 <col:6> 'int' lvalue Var 0x12800dfc0 'result' 'int'
|   | | `-RecoveryExpr 0x1280280d8 <col:16> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x1280282b0 <col:30, line:26:2>
|   |   |-CallExpr 0x128028150 <line:23:3, col:17> 'int'
|   |   | `-ImplicitCastExpr 0x128028138 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   |   `-DeclRefExpr 0x128028118 <col:3> 'int ()' Function 0x128027a58 'gnutls_assert' 'int ()'
|   |   |-BinaryOperator 0x128028228 <line:24:3, col:31> 'int' '='
|   |   | |-DeclRefExpr 0x128028170 <col:3> 'int' lvalue Var 0x12800e180 'ret' 'int'
|   |   | `-CallExpr 0x1280281e8 <col:9, col:31> 'int'
|   |   |   |-ImplicitCastExpr 0x1280281d0 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x128028190 <col:9> 'int ()' Function 0x128027b90 '_gnutls_asn2err' 'int ()'
|   |   |   `-ImplicitCastExpr 0x128028210 <col:25> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1280281b0 <col:25> 'int' lvalue Var 0x12800dfc0 'result' 'int'
|   |   `-GotoStmt 0x128028298 <line:25:3, col:8> 'cleanup' 0x128028248
|   |-BinaryOperator 0x128028350 <line:30:2, col:6> 'unsigned int' '='
|   | |-DeclRefExpr 0x1280282f8 <col:2> 'unsigned int' lvalue Var 0x12800e230 'i' 'unsigned int'
|   | `-ImplicitCastExpr 0x128028338 <col:6> 'unsigned int' <IntegralCast>
|   |   `-IntegerLiteral 0x128028318 <col:6> 'int' 0
|   |-DoStmt 0x12802b278 <line:31:2, line:78:19>
|   | |-CompoundStmt 0x12802b1b8 <line:31:5, line:78:2>
|   | | |-CallExpr 0x128029248 <line:35:3, col:54> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x128029088 <col:3> 'int (char *, unsigned long, const char *, ...)' Function 0x128028e00 'snprintf' 'int (char *, unsigned long, const char *, ...)'
|   | | | |-RecoveryExpr 0x1280290a8 <col:12> '<dependent type>' contains-errors lvalue
|   | | | |-UnaryExprOrTypeTraitExpr 0x128029108 <col:18, col:29> 'unsigned long' contains-errors sizeof
|   | | | | `-ParenExpr 0x1280290e8 <col:24, col:29> '<dependent type>' contains-errors lvalue
|   | | | |   `-RecoveryExpr 0x1280290c8 <col:25> '<dependent type>' contains-errors lvalue
|   | | | |-StringLiteral 0x128029128 <col:32> 'char[4]' lvalue "STR"
|   | | | `-BinaryOperator 0x1280291f8 <col:39, col:53> 'unsigned int' '+'
|   | | |   |-CStyleCastExpr 0x128029198 <col:39, col:49> 'unsigned int' <NoOp>
|   | | |   | `-ImplicitCastExpr 0x128029180 <col:49> 'unsigned int' <LValueToRValue> part_of_explicit_cast
|   | | |   |   `-DeclRefExpr 0x128029148 <col:49> 'unsigned int' lvalue Var 0x12800e230 'i' 'unsigned int'
|   | | |   `-ImplicitCastExpr 0x1280291e0 <col:53> 'unsigned int' <IntegralCast>
|   | | |     `-IntegerLiteral 0x1280291c0 <col:53> 'int' 1
|   | | |-IfStmt 0x128029638 <line:40:3, line:46:3>
|   | | | |-RecoveryExpr 0x1280294b8 <line:40:7, line:42:17> '_Bool' contains-errors
|   | | | `-CompoundStmt 0x128029610 <col:31, line:46:3>
|   | | |   |-CallExpr 0x128029510 <line:43:4, col:18> 'int'
|   | | |   | `-ImplicitCastExpr 0x1280294f8 <col:4> 'int (*)()' <FunctionToPointerDecay>
|   | | |   |   `-DeclRefExpr 0x1280294d8 <col:4> 'int ()' Function 0x128027a58 'gnutls_assert' 'int ()'
|   | | |   |-BinaryOperator 0x1280295e8 <line:44:4, col:32> 'int' '='
|   | | |   | |-DeclRefExpr 0x128029530 <col:4> 'int' lvalue Var 0x12800e180 'ret' 'int'
|   | | |   | `-CallExpr 0x1280295a8 <col:10, col:32> 'int'
|   | | |   |   |-ImplicitCastExpr 0x128029590 <col:10> 'int (*)()' <FunctionToPointerDecay>
|   | | |   |   | `-DeclRefExpr 0x128029550 <col:10> 'int ()' Function 0x128027b90 '_gnutls_asn2err' 'int ()'
|   | | |   |   `-ImplicitCastExpr 0x1280295d0 <col:26> 'int' <LValueToRValue>
|   | | |   |     `-DeclRefExpr 0x128029570 <col:26> 'int' lvalue Var 0x12800dfc0 'result' 'int'
|   | | |   `-BreakStmt 0x128029608 <line:45:4>
|   | | |-IfStmt 0x1280297b8 <line:48:3, line:52:4> has_else
|   | | | |-RecoveryExpr 0x128029698 <line:48:7, line:49:20> '_Bool' contains-errors
|   | | | |-BinaryOperator 0x128029710 <line:50:4, col:13> 'unsigned int' '='
|   | | | | |-DeclRefExpr 0x1280296b8 <col:4> 'unsigned int' lvalue Var 0x12800e330 'rflags' 'unsigned int'
|   | | | | `-ImplicitCastExpr 0x1280296f8 <col:13> 'unsigned int' <IntegralCast>
|   | | | |   `-IntegerLiteral 0x1280296d8 <col:13> 'int' 0
|   | | | `-NullStmt 0x1280297b0 <line:52:4>
|   | | |-CallExpr 0x1280299a8 <line:54:3, line:55:27> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x1280297e8 <line:54:3> 'int (char *, unsigned long, const char *, ...)' Function 0x128028e00 'snprintf' 'int (char *, unsigned long, const char *, ...)'
|   | | | |-RecoveryExpr 0x128029808 <col:12> '<dependent type>' contains-errors lvalue
|   | | | |-UnaryExprOrTypeTraitExpr 0x128029868 <col:18, col:29> 'unsigned long' contains-errors sizeof
|   | | | | `-ParenExpr 0x128029848 <col:24, col:29> '<dependent type>' contains-errors lvalue
|   | | | |   `-RecoveryExpr 0x128029828 <col:25> '<dependent type>' contains-errors lvalue
|   | | | |-StringLiteral 0x128029888 <line:55:5> 'char[4]' lvalue "STR"
|   | | | `-BinaryOperator 0x128029958 <col:12, col:26> 'unsigned int' '+'
|   | | |   |-CStyleCastExpr 0x1280298f8 <col:12, col:22> 'unsigned int' <NoOp>
|   | | |   | `-ImplicitCastExpr 0x1280298e0 <col:22> 'unsigned int' <LValueToRValue> part_of_explicit_cast
|   | | |   |   `-DeclRefExpr 0x1280298a8 <col:22> 'unsigned int' lvalue Var 0x12800e230 'i' 'unsigned int'
|   | | |   `-ImplicitCastExpr 0x128029940 <col:26> 'unsigned int' <IntegralCast>
|   | | |     `-IntegerLiteral 0x128029920 <col:26> 'int' 1
|   | | |-BinaryOperator 0x128029a40 <line:57:3, col:7> 'unsigned int' '='
|   | | | |-DeclRefExpr 0x1280299e8 <col:3> 'unsigned int' lvalue Var 0x128027400 'j' 'unsigned int'
|   | | | `-ImplicitCastExpr 0x128029a28 <col:7> 'unsigned int' <IntegralCast>
|   | | |   `-IntegerLiteral 0x128029a08 <col:7> 'int' 0
|   | | |-DoStmt 0x12802b160 <line:58:3, line:75:20>
|   | | | |-CompoundStmt 0x12802b0b8 <line:58:6, line:75:3>
|   | | | | |-IfStmt 0x128029da0 <line:62:4, line:66:4>
|   | | | | | |-RecoveryExpr 0x128029cf8 <line:62:8, line:63:18> '_Bool' contains-errors
|   | | | | | `-CompoundStmt 0x128029d80 <col:57, line:66:4>
|   | | | | |   |-BinaryOperator 0x128029d58 <line:64:5, col:11> 'int' '='
|   | | | | |   | |-DeclRefExpr 0x128029d18 <col:5> 'int' lvalue Var 0x12800e180 'ret' 'int'
|   | | | | |   | `-IntegerLiteral 0x128029d38 <col:11> 'int' 0
|   | | | | |   `-BreakStmt 0x128029d78 <line:65:5>
|   | | | | |-IfStmt 0x12802ae40 <line:67:4, line:68:5>
|   | | | | | |-BinaryOperator 0x12802ae18 <line:67:8, col:14> 'int' '<'
|   | | | | | | |-ImplicitCastExpr 0x12802ae00 <col:8> 'int' <LValueToRValue>
|   | | | | | | | `-DeclRefExpr 0x128029dc0 <col:8> 'int' lvalue Var 0x12800e180 'ret' 'int'
|   | | | | | | `-IntegerLiteral 0x128029de0 <col:14> 'int' 0
|   | | | | | `-BreakStmt 0x12802ae38 <line:68:5>
|   | | | | |-IfStmt 0x12802b060 <line:71:4, line:72:5>
|   | | | | | |-BinaryOperator 0x12802b038 <line:71:8, col:14> 'int' '<'
|   | | | | | | |-ImplicitCastExpr 0x12802b020 <col:8> 'int' <LValueToRValue>
|   | | | | | | | `-DeclRefExpr 0x12802afe0 <col:8> 'int' lvalue Var 0x12800e180 'ret' 'int'
|   | | | | | | `-IntegerLiteral 0x12802b000 <col:14> 'int' 0
|   | | | | | `-BreakStmt 0x12802b058 <line:72:5>
|   | | | | `-UnaryOperator 0x12802b0a0 <line:74:4, col:5> 'unsigned int' postfix '++'
|   | | | |   `-DeclRefExpr 0x12802b080 <col:4> 'unsigned int' lvalue Var 0x128027400 'j' 'unsigned int'
|   | | | `-BinaryOperator 0x12802b140 <line:75:12, col:19> 'int' '>='
|   | | |   |-ImplicitCastExpr 0x12802b128 <col:12> 'int' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x12802b0e8 <col:12> 'int' lvalue Var 0x12800e180 'ret' 'int'
|   | | |   `-IntegerLiteral 0x12802b108 <col:19> 'int' 0
|   | | `-UnaryOperator 0x12802b1a0 <line:77:3, col:4> 'unsigned int' postfix '++'
|   | |   `-DeclRefExpr 0x12802b180 <col:3> 'unsigned int' lvalue Var 0x12800e230 'i' 'unsigned int'
|   | `-BinaryOperator 0x12802b258 <line:78:11, col:18> 'int' '>='
|   |   |-ImplicitCastExpr 0x12802b240 <col:11> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x12802b200 <col:11> 'int' lvalue Var 0x12800e180 'ret' 'int'
|   |   `-IntegerLiteral 0x12802b220 <col:18> 'int' 0
|   |-IfStmt 0x12802b3e0 <line:80:2, line:83:2>
|   | |-RecoveryExpr 0x12802b330 <line:80:6, col:24> '_Bool' contains-errors
|   | `-CompoundStmt 0x12802b3c0 <col:63, line:83:2>
|   |   |-CallExpr 0x12802b388 <line:81:3, col:17> 'int'
|   |   | `-ImplicitCastExpr 0x12802b370 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   |   `-DeclRefExpr 0x12802b350 <col:3> 'int ()' Function 0x128027a58 'gnutls_assert' 'int ()'
|   |   `-GotoStmt 0x12802b3a8 <line:82:3, col:8> 'cleanup' 0x128028248
|   |-BinaryOperator 0x12802b440 <line:85:2, col:8> 'int' '='
|   | |-DeclRefExpr 0x12802b400 <col:2> 'int' lvalue Var 0x12800e180 'ret' 'int'
|   | `-IntegerLiteral 0x12802b420 <col:8> 'int' 0
|   |-LabelStmt 0x12802b568 <line:86:2, col:9> 'cleanup'
|   | `-NullStmt 0x12802b560 <col:9>
|   `-ReturnStmt 0x12802b5c0 <line:88:2, col:9>
|     `-ImplicitCastExpr 0x12802b5a8 <col:9> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x12802b588 <col:9> 'int' lvalue Var 0x12800e180 'ret' 'int'
`-FunctionDecl 0x128028e00 <line:35:3> col:3 implicit used snprintf 'int (char *, unsigned long, const char *, ...)' extern
  |-ParmVarDecl 0x128028f00 <<invalid sloc>> <invalid sloc> 'char *'
  |-ParmVarDecl 0x128028f68 <<invalid sloc>> <invalid sloc> 'unsigned long'
  |-ParmVarDecl 0x128028fd0 <<invalid sloc>> <invalid sloc> 'const char *'
  |-BuiltinAttr 0x128028ea8 <<invalid sloc>> Implicit 905
  `-FormatAttr 0x128029050 <col:3> Implicit printf 3 4
