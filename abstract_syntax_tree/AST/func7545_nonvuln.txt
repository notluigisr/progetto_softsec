TranslationUnitDecl 0x149055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1490564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x149055bd0 '__int128'
|-TypedefDecl 0x149056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x149055bf0 'unsigned __int128'
|-TypedefDecl 0x14980be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14980bc00 'struct __NSConstantString_tag'
|   `-Record 0x149056580 '__NSConstantString_tag'
|-TypedefDecl 0x14980be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x149055d90 '__SVInt8_t'
|-TypedefDecl 0x14980bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x149055db0 '__SVInt16_t'
|-TypedefDecl 0x14980bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x149055dd0 '__SVInt32_t'
|-TypedefDecl 0x14980bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x149055df0 '__SVInt64_t'
|-TypedefDecl 0x14980c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x149055e10 '__SVUint8_t'
|-TypedefDecl 0x14980c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x149055e30 '__SVUint16_t'
|-TypedefDecl 0x14980c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x149055e50 '__SVUint32_t'
|-TypedefDecl 0x14980c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x149055e70 '__SVUint64_t'
|-TypedefDecl 0x14980c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x149055e90 '__SVFloat16_t'
|-TypedefDecl 0x14980c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x149055eb0 '__SVFloat32_t'
|-TypedefDecl 0x14980c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x149055ed0 '__SVFloat64_t'
|-TypedefDecl 0x14980c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x149055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14980c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x149055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14980c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x149055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14980c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x149055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14980c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x149055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14980c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x149055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14980c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x149055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14980c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x149055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14980c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x149055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14980c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x149056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14980c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x149056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14980c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x149056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14980c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x149056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14980c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x149056090 '__clang_svint8x3_t'
|-TypedefDecl 0x14980c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1490560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14980c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1490560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14980c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1490560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14980c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x149056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14980ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x149056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14980cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x149056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14980cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x149056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14980cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x149056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14980d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1490561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14980d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1490561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14980d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1490561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14980d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x149056210 '__clang_svint8x4_t'
|-TypedefDecl 0x14980d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x149056230 '__clang_svint16x4_t'
|-TypedefDecl 0x14980d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x149056250 '__clang_svint32x4_t'
|-TypedefDecl 0x14980d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x149056270 '__clang_svint64x4_t'
|-TypedefDecl 0x14980d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x149056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14980d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1490562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14980d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1490562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14980d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1490562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14980d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x149056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14980d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x149056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14980d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x149056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14980d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x149056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14980da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x149056390 '__SVBool_t'
|-TypedefDecl 0x14980da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1490563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14980dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1490563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14980db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1490563f0 '__SVCount_t'
|-TypedefDecl 0x14980dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14980dbb0 'char *'
|   `-BuiltinType 0x1490556b0 'char'
|-TypedefDecl 0x14980dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14980dbb0 'char *'
|   `-BuiltinType 0x1490556b0 'char'
`-FunctionDecl 0x14980df18 <dataset_diviso_filec/func7545_nonvuln.c:1:1, line:22:1> line:1:1 invalid parsev3rddirres 'int (int *, const int *, int)'
  |-ParmVarDecl 0x14980dd28 <col:17, col:37> col:37 invalid ndo 'int *'
  |-ParmVarDecl 0x14980dda8 <line:2:17, col:33> col:33 referenced invalid dp 'const int *'
  |-ParmVarDecl 0x14980de28 <col:37, col:41> col:41 used verbose 'int'
  `-CompoundStmt 0x149827eb0 <line:3:1, line:22:1>
    |-DeclStmt 0x14980e058 <line:4:2, col:8>
    | `-VarDecl 0x14980dff0 <col:2, col:6> col:6 used er 'int'
    |-IfStmt 0x14980e368 <line:6:2, line:7:12>
    | |-UnaryOperator 0x14980e300 <line:6:6, col:38> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ParenExpr 0x14980e2e0 <col:7, col:38> '<dependent type>' contains-errors
    | |   `-BinaryOperator 0x14980e2c0 <col:8, col:37> '<dependent type>' contains-errors '='
    | |     |-RecoveryExpr 0x14980e070 <col:8> '<dependent type>' contains-errors lvalue
    | |     `-CallExpr 0x14980e288 <col:13, col:37> '<dependent type>' contains-errors
    | |       |-DeclRefExpr 0x14980e1f0 <col:13> 'int ()' Function 0x14980e138 'parsestatus' 'int ()'
    | |       |-RecoveryExpr 0x14980e210 <col:25> '<dependent type>' contains-errors lvalue
    | |       |-RecoveryExpr 0x14980e230 <col:30> '<dependent type>' contains-errors lvalue
    | |       `-UnaryOperator 0x14980e270 <col:34, col:35> 'int *' prefix '&' cannot overflow
    | |         `-DeclRefExpr 0x14980e250 <col:35> 'int' lvalue Var 0x14980dff0 'er' 'int'
    | `-ReturnStmt 0x14980e358 <line:7:3, col:12>
    |   `-ParenExpr 0x14980e338 <col:10, col:12> 'int'
    |     `-IntegerLiteral 0x14980e318 <col:11> 'int' 0
    |-IfStmt 0x1498275e8 <line:8:2, line:9:24>
    | |-CXXDependentScopeMemberExpr 0x14980e3a8 <line:8:6, col:11> '<dependent type>' contains-errors lvalue ->ndo_vflag
    | | `-RecoveryExpr 0x14980e388 <col:6> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x1498275c0 <line:9:3, col:24> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1498274e0 <col:3> 'int ()' Function 0x149827428 'ND_PRINT' 'int ()'
    |   `-ParenExpr 0x1498275a0 <col:12, col:23> 'char[4]' contains-errors
    |     `-BinaryOperator 0x149827580 <col:13, col:18> 'char[4]' contains-errors ','
    |       |-RecoveryExpr 0x149827500 <col:13> '<dependent type>' contains-errors lvalue
    |       `-StringLiteral 0x149827560 <col:18> 'char[4]' lvalue "STR"
    |-IfStmt 0x149827868 <line:10:2, line:11:12>
    | |-UnaryOperator 0x149827800 <line:10:6, col:49> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ParenExpr 0x1498277e0 <col:7, col:49> '<dependent type>' contains-errors
    | |   `-BinaryOperator 0x1498277c0 <col:8, col:48> '<dependent type>' contains-errors '='
    | |     |-RecoveryExpr 0x149827608 <col:8> '<dependent type>' contains-errors lvalue
    | |     `-CallExpr 0x149827788 <col:13, col:48> '<dependent type>' contains-errors
    | |       |-DeclRefExpr 0x149827708 <col:13> 'int ()' Function 0x149827650 'parse_post_op_attr' 'int ()'
    | |       |-RecoveryExpr 0x149827728 <col:32> '<dependent type>' contains-errors lvalue
    | |       |-RecoveryExpr 0x149827748 <col:37> '<dependent type>' contains-errors lvalue
    | |       `-DeclRefExpr 0x149827768 <col:41> 'int' lvalue ParmVar 0x14980de28 'verbose' 'int'
    | `-ReturnStmt 0x149827858 <line:11:3, col:12>
    |   `-ParenExpr 0x149827838 <col:10, col:12> 'int'
    |     `-IntegerLiteral 0x149827818 <col:11> 'int' 0
    |-IfStmt 0x1498278f0 <line:12:2, line:13:10>
    | |-ImplicitCastExpr 0x1498278a8 <line:12:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x149827888 <col:6> 'int' lvalue Var 0x14980dff0 'er' 'int'
    | `-ReturnStmt 0x1498278e0 <line:13:3, col:10>
    |   `-RecoveryExpr 0x1498278c0 <col:10> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x149827dd0 <line:14:2, line:18:2>
    | |-CXXDependentScopeMemberExpr 0x149827930 <line:14:6, col:11> '<dependent type>' contains-errors lvalue ->ndo_vflag
    | | `-RecoveryExpr 0x149827910 <col:6> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x149827da8 <col:22, line:18:2>
    |   |-CallExpr 0x149827af0 <line:15:3, col:18> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x149827a58 <col:3> 'int ()' Function 0x1498279a0 'ND_TCHECK' 'int ()'
    |   | `-ArraySubscriptExpr 0x149827ad0 <col:13, col:17> '<dependent type>' contains-errors lvalue
    |   |   |-ImplicitCastExpr 0x149827ab8 <col:13> '<dependent type>' contains-errors <LValueToRValue>
    |   |   | `-RecoveryExpr 0x149827a78 <col:13> '<dependent type>' contains-errors lvalue
    |   |   `-IntegerLiteral 0x149827a98 <col:16> 'int' 1
    |   |-CallExpr 0x149827ce8 <line:16:3, col:38> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x149827b18 <col:3> 'int ()' Function 0x149827428 'ND_PRINT' 'int ()'
    |   | `-ParenExpr 0x149827cc8 <col:12, col:37> '<dependent type>' contains-errors
    |   |   `-BinaryOperator 0x149827ca8 <col:13, col:36> '<dependent type>' contains-errors ','
    |   |     |-BinaryOperator 0x149827c10 <col:13, col:29> '<dependent type>' contains-errors ','
    |   |     | |-BinaryOperator 0x149827b78 <col:13, col:18> 'char[4]' contains-errors ','
    |   |     | | |-RecoveryExpr 0x149827b38 <col:13> '<dependent type>' contains-errors lvalue
    |   |     | | `-StringLiteral 0x149827b58 <col:18> 'char[4]' lvalue "STR"
    |   |     | `-ArraySubscriptExpr 0x149827bf0 <col:25, col:29> '<dependent type>' contains-errors lvalue
    |   |     |   |-ImplicitCastExpr 0x149827bd8 <col:25> '<dependent type>' contains-errors <LValueToRValue>
    |   |     |   | `-RecoveryExpr 0x149827b98 <col:25> '<dependent type>' contains-errors lvalue
    |   |     |   `-IntegerLiteral 0x149827bb8 <col:28> 'int' 0
    |   |     `-ArraySubscriptExpr 0x149827c88 <col:32, col:36> '<dependent type>' contains-errors lvalue
    |   |       |-ImplicitCastExpr 0x149827c70 <col:32> '<dependent type>' contains-errors <LValueToRValue>
    |   |       | `-RecoveryExpr 0x149827c30 <col:32> '<dependent type>' contains-errors lvalue
    |   |       `-IntegerLiteral 0x149827c50 <col:35> 'int' 1
    |   `-CompoundAssignOperator 0x149827d78 <line:17:3, col:9> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |     |-RecoveryExpr 0x149827d30 <col:3> '<dependent type>' contains-errors lvalue
    |     | `-DeclRefExpr 0x149827d10 <col:3> 'const int *' lvalue ParmVar 0x14980dda8 'dp' 'const int *'
    |     `-IntegerLiteral 0x149827d58 <col:9> 'int' 2
    |-ReturnStmt 0x149827e10 <line:19:2, col:9>
    | `-RecoveryExpr 0x149827df0 <col:9> '<dependent type>' contains-errors lvalue
    `-LabelStmt 0x149827e90 <line:20:1, col:6> 'trunc'
      `-NullStmt 0x149827e38 <col:6>
