TranslationUnitDecl 0x13a03b008 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13a03beb8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13a03b5d0 '__int128'
|-TypedefDecl 0x13a03bf28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13a03b5f0 'unsigned __int128'
|-TypedefDecl 0x13a10dc30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13a10da00 'struct __NSConstantString_tag'
|   `-Record 0x13a03bf80 '__NSConstantString_tag'
|-TypedefDecl 0x13a10dc98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13a03b790 '__SVInt8_t'
|-TypedefDecl 0x13a10dd00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13a03b7b0 '__SVInt16_t'
|-TypedefDecl 0x13a10dd68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13a03b7d0 '__SVInt32_t'
|-TypedefDecl 0x13a10ddd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13a03b7f0 '__SVInt64_t'
|-TypedefDecl 0x13a10de38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13a03b810 '__SVUint8_t'
|-TypedefDecl 0x13a10dea0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13a03b830 '__SVUint16_t'
|-TypedefDecl 0x13a10df08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13a03b850 '__SVUint32_t'
|-TypedefDecl 0x13a10df70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13a03b870 '__SVUint64_t'
|-TypedefDecl 0x13a10dfd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13a03b890 '__SVFloat16_t'
|-TypedefDecl 0x13a10e040 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13a03b8b0 '__SVFloat32_t'
|-TypedefDecl 0x13a10e0a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13a03b8d0 '__SVFloat64_t'
|-TypedefDecl 0x13a10e110 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13a03b8f0 '__SVBfloat16_t'
|-TypedefDecl 0x13a10e178 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13a03b910 '__clang_svint8x2_t'
|-TypedefDecl 0x13a10e1e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13a03b930 '__clang_svint16x2_t'
|-TypedefDecl 0x13a10e248 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13a03b950 '__clang_svint32x2_t'
|-TypedefDecl 0x13a10e2b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13a03b970 '__clang_svint64x2_t'
|-TypedefDecl 0x13a10e318 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13a03b990 '__clang_svuint8x2_t'
|-TypedefDecl 0x13a10e380 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13a03b9b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13a10e3e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13a03b9d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13a10e450 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13a03b9f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13a10e4b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13a03ba10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13a10e520 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13a03ba30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13a10e588 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13a03ba50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13a10e5f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13a03ba70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13a10e658 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13a03ba90 '__clang_svint8x3_t'
|-TypedefDecl 0x13a10e6c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13a03bab0 '__clang_svint16x3_t'
|-TypedefDecl 0x13a10e728 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13a03bad0 '__clang_svint32x3_t'
|-TypedefDecl 0x13a10e790 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13a03baf0 '__clang_svint64x3_t'
|-TypedefDecl 0x13a10e7f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13a03bb10 '__clang_svuint8x3_t'
|-TypedefDecl 0x13a10e860 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13a03bb30 '__clang_svuint16x3_t'
|-TypedefDecl 0x13a10e8c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13a03bb50 '__clang_svuint32x3_t'
|-TypedefDecl 0x13a10e930 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13a03bb70 '__clang_svuint64x3_t'
|-TypedefDecl 0x13a10e998 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13a03bb90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13a10ea00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13a03bbb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13a10ea68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13a03bbd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13a10ead0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13a03bbf0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13a10eb38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13a03bc10 '__clang_svint8x4_t'
|-TypedefDecl 0x13a10eba0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13a03bc30 '__clang_svint16x4_t'
|-TypedefDecl 0x13a10ec08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13a03bc50 '__clang_svint32x4_t'
|-TypedefDecl 0x13a10ec70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13a03bc70 '__clang_svint64x4_t'
|-TypedefDecl 0x13a10ecd8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13a03bc90 '__clang_svuint8x4_t'
|-TypedefDecl 0x13a10ed40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13a03bcb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13a10eda8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13a03bcd0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13a10ee10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13a03bcf0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13a10ee78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13a03bd10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13a10eee0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13a03bd30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13a10ef48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13a03bd50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13a10efb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13a03bd70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13a10f018 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13a03bd90 '__SVBool_t'
|-TypedefDecl 0x13a10f080 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13a03bdb0 '__clang_svboolx2_t'
|-TypedefDecl 0x13a10f0e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13a03bdd0 '__clang_svboolx4_t'
|-TypedefDecl 0x13a10f150 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13a03bdf0 '__SVCount_t'
|-TypedefDecl 0x13a10f1f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13a10f1b0 'char *'
|   `-BuiltinType 0x13a03b0b0 'char'
|-TypedefDecl 0x13a10f268 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13a10f1b0 'char *'
|   `-BuiltinType 0x13a03b0b0 'char'
|-FunctionDecl 0x13b008538 <dataset_diviso_filec/func1738_vuln.c:1:1, line:48:1> line:1:5 ldb_handler_fold 'int (struct ldb_context *, void *, const struct ldb_val *, struct ldb_val *)'
| |-ParmVarDecl 0x13a10f848 <col:22, col:42> col:42 used ldb 'struct ldb_context *'
| |-ParmVarDecl 0x13a10f8c8 <col:47, col:53> col:53 mem_ctx 'void *'
| |-ParmVarDecl 0x13b0082c8 <line:2:8, col:30> col:30 used in 'const struct ldb_val *'
| |-ParmVarDecl 0x13b0083e8 <col:34, col:50> col:50 used out 'struct ldb_val *'
| `-CompoundStmt 0x13a81f830 <line:3:1, line:48:1>
|   |-DeclStmt 0x13b008760 <line:4:2, col:13>
|   | |-VarDecl 0x13b008660 <col:2, col:8> col:8 used s 'char *'
|   | `-VarDecl 0x13b0086e0 <col:2, col:12> col:12 used t 'char *'
|   |-UnaryExprOrTypeTraitExpr 0x13b0087e8 <line:5:2, col:9> 'unsigned long' contains-errors sizeof
|   | `-RecoveryExpr 0x13b0087c8 <col:9> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x13b0089f8 <line:7:2, line:9:2>
|   | |-BinaryOperator 0x13b008978 <line:7:6, col:31> 'int' contains-errors '||'
|   | | |-BinaryOperator 0x13b0088a8 <col:6, col:14> 'int' '||'
|   | | | |-UnaryOperator 0x13b008840 <col:6, col:7> 'int' prefix '!' cannot overflow
|   | | | | `-ImplicitCastExpr 0x13b008828 <col:7> 'const struct ldb_val *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x13b008808 <col:7> 'const struct ldb_val *' lvalue ParmVar 0x13b0082c8 'in' 'const struct ldb_val *'
|   | | | `-UnaryOperator 0x13b008890 <col:13, col:14> 'int' prefix '!' cannot overflow
|   | | |   `-ImplicitCastExpr 0x13b008878 <col:14> 'struct ldb_val *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x13b008858 <col:14> 'struct ldb_val *' lvalue ParmVar 0x13b0083e8 'out' 'struct ldb_val *'
|   | | `-UnaryOperator 0x13b008960 <col:21, col:31> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | |   `-ImplicitCastExpr 0x13b008948 <col:22, col:31> '<dependent type>' contains-errors <LValueToRValue>
|   | |     `-ParenExpr 0x13b008928 <col:22, col:31> '<dependent type>' contains-errors lvalue
|   | |       `-RecoveryExpr 0x13b008900 <col:23, col:27> '<dependent type>' contains-errors lvalue
|   | |         `-DeclRefExpr 0x13b0088c8 <col:23> 'const struct ldb_val *' lvalue ParmVar 0x13b0082c8 'in' 'const struct ldb_val *'
|   | `-CompoundStmt 0x13b0089e0 <col:34, line:9:2>
|   |   `-ReturnStmt 0x13b0089d0 <line:8:3, col:11>
|   |     `-UnaryOperator 0x13b0089b8 <col:10, col:11> 'int' prefix '-'
|   |       `-IntegerLiteral 0x13b008998 <col:11> 'int' 1
|   |-IfStmt 0x13b009018 <line:12:2, line:15:2>
|   | |-BinaryOperator 0x13b008b48 <line:12:6, col:19> 'int' contains-errors '=='
|   | | |-RecoveryExpr 0x13b008ac8 <col:6, col:11> '<dependent type>' contains-errors lvalue
|   | | | `-DeclRefExpr 0x13b008a90 <col:6> 'struct ldb_val *' lvalue ParmVar 0x13b0083e8 'out' 'struct ldb_val *'
|   | | `-RecoveryExpr 0x13b008b28 <col:19> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x13b008ff8 <col:25, line:15:2>
|   |   |-CallExpr 0x13b008f68 <line:13:3, col:81> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x13b008c80 <col:3> 'int ()' Function 0x13b008bc8 'ldb_debug' 'int ()'
|   |   | |-DeclRefExpr 0x13b008ca0 <col:13> 'struct ldb_context *' lvalue ParmVar 0x13a10f848 'ldb' 'struct ldb_context *'
|   |   | |-RecoveryExpr 0x13b008ec8 <col:18> '<dependent type>' contains-errors lvalue
|   |   | |-StringLiteral 0x13b008d20 <col:35> 'char[4]' lvalue "STR"
|   |   | |-CStyleCastExpr 0x13b008f00 <col:42, col:51> 'int' contains-errors <Dependent>
|   |   | | `-RecoveryExpr 0x13b008d78 <col:47, col:51> '<dependent type>' contains-errors lvalue
|   |   | |   `-DeclRefExpr 0x13b008d40 <col:47> 'const struct ldb_val *' lvalue ParmVar 0x13b0082c8 'in' 'const struct ldb_val *'
|   |   | `-CStyleCastExpr 0x13b008f40 <col:59, col:77> 'const char *' contains-errors <Dependent>
|   |   |   `-RecoveryExpr 0x13b008e18 <col:73, col:77> '<dependent type>' contains-errors lvalue
|   |   |     `-DeclRefExpr 0x13b008de0 <col:73> 'const struct ldb_val *' lvalue ParmVar 0x13b0082c8 'in' 'const struct ldb_val *'
|   |   `-ReturnStmt 0x13b008fe8 <line:14:3, col:11>
|   |     `-UnaryOperator 0x13b008fd0 <col:10, col:11> 'int' prefix '-'
|   |       `-IntegerLiteral 0x13b008fb0 <col:11> 'int' 1
|   |-BinaryOperator 0x13b009138 <line:17:2, col:24> 'char *' contains-errors '='
|   | |-DeclRefExpr 0x13b009038 <col:2> 'char *' lvalue Var 0x13b008660 's' 'char *'
|   | `-CStyleCastExpr 0x13b009110 <col:6, col:24> 'char *' contains-errors <Dependent>
|   |   `-ParenExpr 0x13b0090f0 <col:14, col:24> '<dependent type>' contains-errors lvalue
|   |     `-RecoveryExpr 0x13b009090 <col:15, col:20> '<dependent type>' contains-errors lvalue
|   |       `-DeclRefExpr 0x13b009058 <col:15> 'struct ldb_val *' lvalue ParmVar 0x13b0083e8 'out' 'struct ldb_val *'
|   |-IfStmt 0x13b00a7f0 <line:25:2, line:32:2>
|   | |-BinaryOperator 0x13b00a260 <line:25:6, col:12> 'int' '=='
|   | | |-ImplicitCastExpr 0x13b00a248 <col:6, col:7> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x13b00a230 <col:6, col:7> 'char' <LValueToRValue>
|   | | |   `-UnaryOperator 0x13b00a200 <col:6, col:7> 'char' lvalue prefix '*' cannot overflow
|   | | |     `-ImplicitCastExpr 0x13b00a1e8 <col:7> 'char *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x13b00a1c8 <col:7> 'char *' lvalue Var 0x13b008660 's' 'char *'
|   | | `-CharacterLiteral 0x13b00a218 <col:12> 'int' 32
|   | `-CompoundStmt 0x13b00a7d0 <col:17, line:32:2>
|   |   |-ForStmt 0x13b00a3f0 <line:26:3, col:31>
|   |   | |-BinaryOperator 0x13b00a2d8 <col:8, col:12> 'char *' '='
|   |   | | |-DeclRefExpr 0x13b00a280 <col:8> 'char *' lvalue Var 0x13b0086e0 't' 'char *'
|   |   | | `-ImplicitCastExpr 0x13b00a2c0 <col:12> 'char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x13b00a2a0 <col:12> 'char *' lvalue Var 0x13b008660 's' 'char *'
|   |   | |-<<<NULL>>>
|   |   | |-BinaryOperator 0x13b00a390 <col:15, col:21> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x13b00a378 <col:15, col:16> 'int' <IntegralCast>
|   |   | | | `-ImplicitCastExpr 0x13b00a360 <col:15, col:16> 'char' <LValueToRValue>
|   |   | | |   `-UnaryOperator 0x13b00a330 <col:15, col:16> 'char' lvalue prefix '*' cannot overflow
|   |   | | |     `-ImplicitCastExpr 0x13b00a318 <col:16> 'char *' <LValueToRValue>
|   |   | | |       `-DeclRefExpr 0x13b00a2f8 <col:16> 'char *' lvalue Var 0x13b008660 's' 'char *'
|   |   | | `-CharacterLiteral 0x13b00a348 <col:21> 'int' 32
|   |   | |-UnaryOperator 0x13b00a3d0 <col:26, col:27> 'char *' postfix '++'
|   |   | | `-DeclRefExpr 0x13b00a3b0 <col:26> 'char *' lvalue Var 0x13b008660 's' 'char *'
|   |   | `-NullStmt 0x13b00a3e8 <col:31>
|   |   `-BinaryOperator 0x13b00a7b0 <line:31:3, col:7> 'char *' '='
|   |     |-DeclRefExpr 0x13b00a758 <col:3> 'char *' lvalue Var 0x13b008660 's' 'char *'
|   |     `-ImplicitCastExpr 0x13b00a798 <col:7> 'char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x13b00a778 <col:7> 'char *' lvalue Var 0x13b0086e0 't' 'char *'
|   |-WhileStmt 0x13a81f648 <line:35:2, line:44:2>
|   | |-RecoveryExpr 0x13b00aba8 <line:35:9, col:33> '_Bool' contains-errors
|   | `-CompoundStmt 0x13a81f628 <col:39, line:44:2>
|   |   |-ForStmt 0x13b00ad38 <line:36:3, col:31>
|   |   | |-BinaryOperator 0x13b00ac20 <col:8, col:12> 'char *' '='
|   |   | | |-DeclRefExpr 0x13b00abc8 <col:8> 'char *' lvalue Var 0x13b008660 's' 'char *'
|   |   | | `-ImplicitCastExpr 0x13b00ac08 <col:12> 'char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x13b00abe8 <col:12> 'char *' lvalue Var 0x13b0086e0 't' 'char *'
|   |   | |-<<<NULL>>>
|   |   | |-BinaryOperator 0x13b00acd8 <col:15, col:21> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x13b00acc0 <col:15, col:16> 'int' <IntegralCast>
|   |   | | | `-ImplicitCastExpr 0x13b00aca8 <col:15, col:16> 'char' <LValueToRValue>
|   |   | | |   `-UnaryOperator 0x13b00ac78 <col:15, col:16> 'char' lvalue prefix '*' cannot overflow
|   |   | | |     `-ImplicitCastExpr 0x13b00ac60 <col:16> 'char *' <LValueToRValue>
|   |   | | |       `-DeclRefExpr 0x13b00ac40 <col:16> 'char *' lvalue Var 0x13b008660 's' 'char *'
|   |   | | `-CharacterLiteral 0x13b00ac90 <col:21> 'int' 32
|   |   | |-UnaryOperator 0x13b00ad18 <col:26, col:27> 'char *' postfix '++'
|   |   | | `-DeclRefExpr 0x13b00acf8 <col:26> 'char *' lvalue Var 0x13b008660 's' 'char *'
|   |   | `-NullStmt 0x13b00ad30 <col:31>
|   |   `-IfStmt 0x13a81f608 <line:38:3, line:43:3>
|   |     |-BinaryOperator 0x13a81f458 <line:38:7, col:17> 'int' '>'
|   |     | |-ParenExpr 0x13a81f400 <col:7, col:13> 'long'
|   |     | | `-BinaryOperator 0x13b00ade0 <col:8, col:12> 'long' '-'
|   |     | |   |-ImplicitCastExpr 0x13b00adb0 <col:8> 'char *' <LValueToRValue>
|   |     | |   | `-DeclRefExpr 0x13b00ad70 <col:8> 'char *' lvalue Var 0x13b008660 's' 'char *'
|   |     | |   `-ImplicitCastExpr 0x13b00adc8 <col:12> 'char *' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x13b00ad90 <col:12> 'char *' lvalue Var 0x13b0086e0 't' 'char *'
|   |     | `-ImplicitCastExpr 0x13a81f440 <col:17> 'long' <IntegralCast>
|   |     |   `-IntegerLiteral 0x13a81f420 <col:17> 'int' 1
|   |     `-CompoundStmt 0x13a81f5f8 <col:20, line:43:3>
|   |-BinaryOperator 0x13a81f7e0 <line:46:2, col:40> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x13a81f6a0 <col:2, col:7> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x13a81f668 <col:2> 'struct ldb_val *' lvalue ParmVar 0x13b0083e8 'out' 'struct ldb_val *'
|   | `-CallExpr 0x13a81f7a0 <col:16, col:40> 'unsigned long' contains-errors
|   |   |-ImplicitCastExpr 0x13a81f788 <col:16> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x13a81f6c8 <col:16> 'unsigned long (const char *)' Function 0x13b009e00 'strlen' 'unsigned long (const char *)'
|   |   `-ImplicitCastExpr 0x13a81f7c8 <col:23, col:36> 'const char *' contains-errors <NoOp>
|   |     `-CStyleCastExpr 0x13a81f760 <col:23, col:36> 'char *' contains-errors <Dependent>
|   |       `-RecoveryExpr 0x13a81f720 <col:31, col:36> '<dependent type>' contains-errors lvalue
|   |         `-DeclRefExpr 0x13a81f6e8 <col:31> 'struct ldb_val *' lvalue ParmVar 0x13b0083e8 'out' 'struct ldb_val *'
|   `-ReturnStmt 0x13a81f820 <line:47:2, col:9>
|     `-IntegerLiteral 0x13a81f800 <col:9> 'int' 0
|-FunctionDecl 0x13b009e00 <line:20:6> col:6 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x13b009f00 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x13b009ea8 <<invalid sloc>> Implicit 902
|-FunctionDecl 0x13b00a4a8 <line:29:3> col:3 implicit used memmove 'void *(void *, const void *, unsigned long)' extern
| |-ParmVarDecl 0x13b00a5a8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x13b00a610 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x13b00a678 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x13b00a550 <<invalid sloc>> Implicit 884
`-FunctionDecl 0x13b00a870 <line:35:14> col:14 implicit used strchr 'char *(const char *, int)' extern
  |-ParmVarDecl 0x13b00a970 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x13b00a9d8 <<invalid sloc>> <invalid sloc> 'int'
  `-BuiltinAttr 0x13b00a918 <<invalid sloc>> Implicit 893
