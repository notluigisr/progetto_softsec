TranslationUnitDecl 0x13383f208 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1338400b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13383f7d0 '__int128'
|-TypedefDecl 0x133840128 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13383f7f0 'unsigned __int128'
|-TypedefDecl 0x13480be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13480bc00 'struct __NSConstantString_tag'
|   `-Record 0x133840180 '__NSConstantString_tag'
|-TypedefDecl 0x13480be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13383f990 '__SVInt8_t'
|-TypedefDecl 0x13480bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13383f9b0 '__SVInt16_t'
|-TypedefDecl 0x13480bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13383f9d0 '__SVInt32_t'
|-TypedefDecl 0x13480bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13383f9f0 '__SVInt64_t'
|-TypedefDecl 0x13480c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13383fa10 '__SVUint8_t'
|-TypedefDecl 0x13480c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13383fa30 '__SVUint16_t'
|-TypedefDecl 0x13480c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13383fa50 '__SVUint32_t'
|-TypedefDecl 0x13480c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13383fa70 '__SVUint64_t'
|-TypedefDecl 0x13480c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13383fa90 '__SVFloat16_t'
|-TypedefDecl 0x13480c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13383fab0 '__SVFloat32_t'
|-TypedefDecl 0x13480c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13383fad0 '__SVFloat64_t'
|-TypedefDecl 0x13480c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13383faf0 '__SVBfloat16_t'
|-TypedefDecl 0x13480c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13383fb10 '__clang_svint8x2_t'
|-TypedefDecl 0x13480c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13383fb30 '__clang_svint16x2_t'
|-TypedefDecl 0x13480c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13383fb50 '__clang_svint32x2_t'
|-TypedefDecl 0x13480c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13383fb70 '__clang_svint64x2_t'
|-TypedefDecl 0x13480c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13383fb90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13480c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13383fbb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13480c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13383fbd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13480c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13383fbf0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13480c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13383fc10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13480c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13383fc30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13480c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13383fc50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13480c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13383fc70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13480c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13383fc90 '__clang_svint8x3_t'
|-TypedefDecl 0x13480c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13383fcb0 '__clang_svint16x3_t'
|-TypedefDecl 0x13480c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13383fcd0 '__clang_svint32x3_t'
|-TypedefDecl 0x13480c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13383fcf0 '__clang_svint64x3_t'
|-TypedefDecl 0x13480c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13383fd10 '__clang_svuint8x3_t'
|-TypedefDecl 0x13480ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13383fd30 '__clang_svuint16x3_t'
|-TypedefDecl 0x13480cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13383fd50 '__clang_svuint32x3_t'
|-TypedefDecl 0x13480cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13383fd70 '__clang_svuint64x3_t'
|-TypedefDecl 0x13480cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13383fd90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13480d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13383fdb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13480d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13383fdd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13480d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13383fdf0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13480d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13383fe10 '__clang_svint8x4_t'
|-TypedefDecl 0x13480d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13383fe30 '__clang_svint16x4_t'
|-TypedefDecl 0x13480d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13383fe50 '__clang_svint32x4_t'
|-TypedefDecl 0x13480d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13383fe70 '__clang_svint64x4_t'
|-TypedefDecl 0x13480d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13383fe90 '__clang_svuint8x4_t'
|-TypedefDecl 0x13480d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13383feb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13480d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13383fed0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13480d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13383fef0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13480d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13383ff10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13480d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13383ff30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13480d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13383ff50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13480d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13383ff70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13480da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13383ff90 '__SVBool_t'
|-TypedefDecl 0x13480da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13383ffb0 '__clang_svboolx2_t'
|-TypedefDecl 0x13480dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13383ffd0 '__clang_svboolx4_t'
|-TypedefDecl 0x13480db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13383fff0 '__SVCount_t'
|-TypedefDecl 0x13480dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13480dbb0 'char *'
|   `-BuiltinType 0x13383f2b0 'char'
|-TypedefDecl 0x13480dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13480dbb0 'char *'
|   `-BuiltinType 0x13383f2b0 'char'
|-FunctionDecl 0x13480ddf8 <dataset_diviso_filec/func11249_vuln.c:1:1, line:33:1> line:1:16 invalid classes_from_symbols 'int *(int *)' static
| |-ParmVarDecl 0x13480dd28 <col:37, col:48> col:48 invalid bf 'int *'
| `-CompoundStmt 0x134829798 <col:52, line:33:1>
|   |-CallExpr 0x13480e1a8 <line:4:2, col:44> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x13480e030 <col:2> 'int ()' Function 0x13480df78 'rz_list_foreach' 'int ()'
|   | |-CXXDependentScopeMemberExpr 0x13480e0b8 <col:19, col:26> '<dependent type>' contains-errors lvalue ->symbols
|   | | `-CXXDependentScopeMemberExpr 0x13480e070 <col:19, col:23> '<dependent type>' contains-errors lvalue ->o
|   | |   `-RecoveryExpr 0x13480e050 <col:19> '<dependent type>' contains-errors lvalue
|   | |-RecoveryExpr 0x13480e168 <col:35> '<dependent type>' contains-errors lvalue
|   | `-RecoveryExpr 0x13480e188 <col:41> '<dependent type>' contains-errors lvalue
|   |-CompoundStmt 0x1348296b0 <col:46, line:31:2>
|   | |-IfStmt 0x13480e2a8 <line:5:3, line:7:3>
|   | | |-RecoveryExpr 0x13480e278 <line:5:7, col:23> '_Bool' contains-errors
|   | | `-CompoundStmt 0x13480e298 <col:28, line:7:3>
|   | |-DeclStmt 0x134827a48 <line:8:3, col:34>
|   | | `-VarDecl 0x13480e2e0 <col:3, col:25> col:15 used cn 'const char *' cinit
|   | |   `-CXXDependentScopeMemberExpr 0x134827a00 <col:20, col:25> '<dependent type>' contains-errors lvalue ->classname
|   | |     `-RecoveryExpr 0x13480e3a8 <col:20> '<dependent type>' contains-errors lvalue
|   | `-IfStmt 0x134829690 <line:9:3, line:30:3>
|   |   |-ImplicitCastExpr 0x134827a80 <line:9:7> 'const char *' contains-errors <LValueToRValue>
|   |   | `-DeclRefExpr 0x134827a60 <col:7> 'const char *' contains-errors lvalue Var 0x13480e2e0 'cn' 'const char *'
|   |   `-CompoundStmt 0x134829660 <col:11, line:30:3>
|   |     |-IfStmt 0x134827d50 <line:11:4, line:13:4>
|   |     | |-UnaryOperator 0x134827d28 <line:11:8, col:9> '<dependent type>' contains-errors prefix '!' cannot overflow
|   |     | | `-ImplicitCastExpr 0x134827d10 <col:9> '<dependent type>' contains-errors <LValueToRValue>
|   |     | |   `-RecoveryExpr 0x134827cf0 <col:9> '<dependent type>' contains-errors lvalue
|   |     | `-CompoundStmt 0x134827d40 <col:12, line:13:4>
|   |     |-DeclStmt 0x134827df0 <line:15:4, col:25>
|   |     | `-VarDecl 0x134827d88 <col:4, col:10> col:10 used dn 'char *'
|   |     |-DeclStmt 0x134828090 <line:16:4, col:33>
|   |     | `-VarDecl 0x134827e20 <col:4, col:32> col:10 used fn 'char *' cinit
|   |     |   `-ImplicitCastExpr 0x134828078 <col:15, col:32> 'char *' contains-errors <IntegralToPointer>
|   |     |     `-CallExpr 0x134828018 <col:15, col:32> 'int' contains-errors
|   |     |       |-ImplicitCastExpr 0x134828000 <col:15> 'int (*)()' <FunctionToPointerDecay>
|   |     |       | `-DeclRefExpr 0x134827f68 <col:15> 'int ()' Function 0x134827eb0 'swiftField' 'int ()'
|   |     |       |-ImplicitCastExpr 0x134828048 <col:26> 'char *' <LValueToRValue>
|   |     |       | `-DeclRefExpr 0x134827f88 <col:26> 'char *' lvalue Var 0x134827d88 'dn' 'char *'
|   |     |       `-ImplicitCastExpr 0x134828060 <col:30> 'const char *' contains-errors <LValueToRValue>
|   |     |         `-DeclRefExpr 0x134827fa8 <col:30> 'const char *' contains-errors lvalue Var 0x13480e2e0 'cn' 'const char *'
|   |     `-IfStmt 0x134829630 <line:17:4, line:29:4> has_else
|   |       |-ImplicitCastExpr 0x1348280c8 <line:17:8> 'char *' contains-errors <LValueToRValue>
|   |       | `-DeclRefExpr 0x1348280a8 <col:8> 'char *' contains-errors lvalue Var 0x134827e20 'fn' 'char *'
|   |       |-CompoundStmt 0x1348285a0 <col:12, line:21:4>
|   |       | `-CallExpr 0x134828548 <line:20:5, col:12> 'void' contains-errors
|   |       |   |-ImplicitCastExpr 0x134828530 <col:5> 'void (*)(void *)' <FunctionToPointerDecay>
|   |       |   | `-DeclRefExpr 0x1348284a8 <col:5> 'void (void *)' Function 0x134828338 'free' 'void (void *)'
|   |       |   `-ImplicitCastExpr 0x134828588 <col:10> 'void *' contains-errors <BitCast>
|   |       |     `-ImplicitCastExpr 0x134828570 <col:10> 'char *' contains-errors <LValueToRValue>
|   |       |       `-DeclRefExpr 0x1348284c8 <col:10> 'char *' contains-errors lvalue Var 0x134827e20 'fn' 'char *'
|   |       `-CompoundStmt 0x134829610 <line:21:11, line:29:4>
|   |         |-DeclStmt 0x134829018 <line:22:5, col:33>
|   |         | `-VarDecl 0x1348285d0 <col:5, col:32> col:11 used mn 'char *' cinit
|   |         |   `-CallExpr 0x134828978 <col:16, col:32> 'char *'
|   |         |     |-ImplicitCastExpr 0x134828960 <col:16> 'char *(*)(const char *, const char *)' <FunctionToPointerDecay>
|   |         |     | `-DeclRefExpr 0x134828860 <col:16> 'char *(const char *, const char *)' Function 0x134828680 'strstr' 'char *(const char *, const char *)'
|   |         |     |-ImplicitCastExpr 0x1348289c0 <col:23> 'const char *' <NoOp>
|   |         |     | `-ImplicitCastExpr 0x1348289a8 <col:23> 'char *' <LValueToRValue>
|   |         |     |   `-DeclRefExpr 0x134828880 <col:23> 'char *' lvalue Var 0x134827d88 'dn' 'char *'
|   |         |     `-ImplicitCastExpr 0x134829000 <col:27> 'const char *' <NoOp>
|   |         |       `-ImplicitCastExpr 0x1348289d8 <col:27> 'char *' <ArrayToPointerDecay>
|   |         |         `-StringLiteral 0x1348288e0 <col:27> 'char[4]' lvalue "STR"
|   |         `-IfStmt 0x1348295f0 <line:23:5, line:28:5>
|   |           |-UnaryOperator 0x134829068 <line:23:9, col:10> 'int' prefix '!' cannot overflow
|   |           | `-ImplicitCastExpr 0x134829050 <col:10> 'char *' <LValueToRValue>
|   |           |   `-DeclRefExpr 0x134829030 <col:10> 'char *' lvalue Var 0x1348285d0 'mn' 'char *'
|   |           `-CompoundStmt 0x1348295d0 <col:14, line:28:5>
|   |             |-BinaryOperator 0x1348291c0 <line:24:6, col:24> 'char *' contains-errors '='
|   |             | |-DeclRefExpr 0x134829080 <col:6> 'char *' lvalue Var 0x1348285d0 'mn' 'char *'
|   |             | `-CallExpr 0x134829148 <col:11, col:24> 'char *' contains-errors
|   |             |   |-ImplicitCastExpr 0x134829130 <col:11> 'char *(*)(const char *, const char *)' <FunctionToPointerDecay>
|   |             |   | `-DeclRefExpr 0x1348290a0 <col:11> 'char *(const char *, const char *)' Function 0x134828680 'strstr' 'char *(const char *, const char *)'
|   |             |   |-ImplicitCastExpr 0x134829190 <col:18> 'const char *' <NoOp>
|   |             |   | `-ImplicitCastExpr 0x134829178 <col:18> 'char *' <LValueToRValue>
|   |             |   |   `-DeclRefExpr 0x1348290c0 <col:18> 'char *' lvalue Var 0x134827d88 'dn' 'char *'
|   |             |   `-ImplicitCastExpr 0x1348291a8 <col:22> 'const char *' contains-errors <LValueToRValue>
|   |             |     `-DeclRefExpr 0x1348290e0 <col:22> 'const char *' contains-errors lvalue Var 0x13480e2e0 'cn' 'const char *'
|   |             `-IfStmt 0x1348295b0 <line:25:6, line:27:6>
|   |               |-BinaryOperator 0x134829560 <line:25:10, col:34> 'int' contains-errors '&&'
|   |               | |-ImplicitCastExpr 0x134829548 <col:10> 'char *' <LValueToRValue>
|   |               | | `-DeclRefExpr 0x1348291e0 <col:10> 'char *' lvalue Var 0x1348285d0 'mn' 'char *'
|   |               | `-BinaryOperator 0x134829528 <col:16, col:34> 'int' contains-errors '=='
|   |               |   |-ImplicitCastExpr 0x134829510 <col:16, col:29> 'int' contains-errors <IntegralCast>
|   |               |   | `-ImplicitCastExpr 0x1348294f8 <col:16, col:29> 'char' contains-errors <LValueToRValue>
|   |               |   |   `-ArraySubscriptExpr 0x1348294c0 <col:16, col:29> 'char' contains-errors lvalue
|   |               |   |     |-ImplicitCastExpr 0x1348294a8 <col:16> 'char *' <LValueToRValue>
|   |               |   |     | `-DeclRefExpr 0x134829200 <col:16> 'char *' lvalue Var 0x1348285d0 'mn' 'char *'
|   |               |   |     `-CallExpr 0x134829468 <col:19, col:28> 'unsigned long' contains-errors
|   |               |   |       |-ImplicitCastExpr 0x134829450 <col:19> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |               |   |       | `-DeclRefExpr 0x1348293c8 <col:19> 'unsigned long (const char *)' Function 0x134829258 'strlen' 'unsigned long (const char *)'
|   |               |   |       `-ImplicitCastExpr 0x134829490 <col:26> 'const char *' contains-errors <LValueToRValue>
|   |               |   |         `-DeclRefExpr 0x1348293e8 <col:26> 'const char *' contains-errors lvalue Var 0x13480e2e0 'cn' 'const char *'
|   |               |   `-CharacterLiteral 0x1348294e0 <col:34> 'int' 46
|   |               `-CompoundStmt 0x1348295a0 <col:39, line:27:6>
|   `-ReturnStmt 0x134829788 <line:32:2, col:16>
|     `-CXXDependentScopeMemberExpr 0x134829740 <col:9, col:16> '<dependent type>' contains-errors lvalue ->classes
|       `-CXXDependentScopeMemberExpr 0x1348296f8 <col:9, col:13> '<dependent type>' contains-errors lvalue ->o
|         `-RecoveryExpr 0x1348296d8 <col:9> '<dependent type>' contains-errors lvalue
|-FunctionDecl 0x134828338 <line:20:5> col:5 implicit used free 'void (void *)' extern
| |-ParmVarDecl 0x134828438 <<invalid sloc>> <invalid sloc> 'void *'
| `-BuiltinAttr 0x1348283e0 <<invalid sloc>> Implicit 873
|-FunctionDecl 0x134828680 <line:22:16> col:16 implicit used strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x134828780 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1348287e8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x134828728 <<invalid sloc>> Implicit 898
`-FunctionDecl 0x134829258 <line:25:19> col:19 implicit used strlen 'unsigned long (const char *)' extern
  |-ParmVarDecl 0x134829358 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x134829300 <<invalid sloc>> Implicit 902
