TranslationUnitDecl 0x121055008 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x121055eb8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1210555d0 '__int128'
|-TypedefDecl 0x121055f28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1210555f0 'unsigned __int128'
|-TypedefDecl 0x12080c430 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12080c200 'struct __NSConstantString_tag'
|   `-Record 0x121055f80 '__NSConstantString_tag'
|-TypedefDecl 0x12080c498 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x121055790 '__SVInt8_t'
|-TypedefDecl 0x12080c500 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x1210557b0 '__SVInt16_t'
|-TypedefDecl 0x12080c568 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x1210557d0 '__SVInt32_t'
|-TypedefDecl 0x12080c5d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x1210557f0 '__SVInt64_t'
|-TypedefDecl 0x12080c638 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x121055810 '__SVUint8_t'
|-TypedefDecl 0x12080c6a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x121055830 '__SVUint16_t'
|-TypedefDecl 0x12080c708 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x121055850 '__SVUint32_t'
|-TypedefDecl 0x12080c770 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x121055870 '__SVUint64_t'
|-TypedefDecl 0x12080c7d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x121055890 '__SVFloat16_t'
|-TypedefDecl 0x12080c840 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x1210558b0 '__SVFloat32_t'
|-TypedefDecl 0x12080c8a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x1210558d0 '__SVFloat64_t'
|-TypedefDecl 0x12080c910 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x1210558f0 '__SVBfloat16_t'
|-TypedefDecl 0x12080c978 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x121055910 '__clang_svint8x2_t'
|-TypedefDecl 0x12080c9e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x121055930 '__clang_svint16x2_t'
|-TypedefDecl 0x12080ca48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x121055950 '__clang_svint32x2_t'
|-TypedefDecl 0x12080cab0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x121055970 '__clang_svint64x2_t'
|-TypedefDecl 0x12080cb18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x121055990 '__clang_svuint8x2_t'
|-TypedefDecl 0x12080cb80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x1210559b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12080cbe8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x1210559d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12080cc50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x1210559f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12080ccb8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x121055a10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12080cd20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x121055a30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12080cd88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x121055a50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12080cdf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x121055a70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12080ce58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x121055a90 '__clang_svint8x3_t'
|-TypedefDecl 0x12080cec0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x121055ab0 '__clang_svint16x3_t'
|-TypedefDecl 0x12080cf28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x121055ad0 '__clang_svint32x3_t'
|-TypedefDecl 0x12080cf90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x121055af0 '__clang_svint64x3_t'
|-TypedefDecl 0x12080cff8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x121055b10 '__clang_svuint8x3_t'
|-TypedefDecl 0x12080d060 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x121055b30 '__clang_svuint16x3_t'
|-TypedefDecl 0x12080d0c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x121055b50 '__clang_svuint32x3_t'
|-TypedefDecl 0x12080d130 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x121055b70 '__clang_svuint64x3_t'
|-TypedefDecl 0x12080d198 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x121055b90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12080da00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x121055bb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12080da68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x121055bd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12080dad0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x121055bf0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12080db38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x121055c10 '__clang_svint8x4_t'
|-TypedefDecl 0x12080dba0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x121055c30 '__clang_svint16x4_t'
|-TypedefDecl 0x12080dc08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x121055c50 '__clang_svint32x4_t'
|-TypedefDecl 0x12080dc70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x121055c70 '__clang_svint64x4_t'
|-TypedefDecl 0x12080dcd8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x121055c90 '__clang_svuint8x4_t'
|-TypedefDecl 0x12080dd40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x121055cb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12080dda8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x121055cd0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12080de10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x121055cf0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12080de78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x121055d10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12080dee0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x121055d30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12080df48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x121055d50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12080dfb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x121055d70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12080e018 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x121055d90 '__SVBool_t'
|-TypedefDecl 0x12080e080 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x121055db0 '__clang_svboolx2_t'
|-TypedefDecl 0x12080e0e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x121055dd0 '__clang_svboolx4_t'
|-TypedefDecl 0x12080e150 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x121055df0 '__SVCount_t'
|-TypedefDecl 0x12080e1f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12080e1b0 'char *'
|   `-BuiltinType 0x1210550b0 'char'
|-TypedefDecl 0x12080e268 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12080e1b0 'char *'
|   `-BuiltinType 0x1210550b0 'char'
|-RecordDecl 0x12080e2c0 <dataset_diviso_filec/func10546_vuln.c:1:1, col:8> col:8 struct razer_report
|-FunctionDecl 0x12080e780 <col:1, line:19:1> line:1:21 invalid razer_chroma_extended_matrix_set_custom_frame2 'struct razer_report (unsigned char, unsigned char, unsigned char, unsigned char *, int)'
| |-ParmVarDecl 0x12080e378 <col:68, col:82> col:82 used row_index 'unsigned char'
| |-ParmVarDecl 0x12080e3f8 <col:93, col:107> col:107 used start_col 'unsigned char'
| |-ParmVarDecl 0x12080e478 <col:118, col:132> col:132 used stop_col 'unsigned char'
| |-ParmVarDecl 0x12080e528 <col:142, col:157> col:157 used rgb_data 'unsigned char *'
| |-ParmVarDecl 0x12080e5c0 <col:167, col:174> col:174 invalid packetLength 'int'
| `-CompoundStmt 0x120829f20 <line:2:1, line:19:1>
|   |-DeclStmt 0x120827f00 <line:3:5, col:74>
|   | `-VarDecl 0x12080e868 <col:5, col:18> col:18 invalid row_length 'const int'
|   |-DeclStmt 0x1208280c8 <line:6:5, col:83>
|   | `-VarDecl 0x120827f30 <col:5, col:18> col:18 invalid data_length 'const int'
|   |-DeclStmt 0x1208287d0 <line:7:5, col:75>
|   | `-VarDecl 0x120828130 <col:5, col:25> col:25 referenced invalid report 'struct razer_report'
|   |-BinaryOperator 0x1208288e0 <line:9:5, col:32> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x120828878 <col:5, col:27> '<dependent type>' contains-errors lvalue .id
|   | | `-CXXDependentScopeMemberExpr 0x120828830 <col:5, col:12> '<dependent type>' contains-errors lvalue .transaction_id
|   | |   `-RecoveryExpr 0x120828808 <col:5> '<dependent type>' contains-errors lvalue
|   | |     `-DeclRefExpr 0x1208287e8 <col:5> 'struct razer_report' lvalue Var 0x120828130 'report' 'struct razer_report'
|   | `-IntegerLiteral 0x1208288c0 <col:32> 'int' 63
|   |-BinaryOperator 0x120828a08 <line:13:5, col:27> '<dependent type>' contains-errors '='
|   | |-ArraySubscriptExpr 0x1208289c8 <col:5, col:23> '<dependent type>' contains-errors lvalue
|   | | |-ImplicitCastExpr 0x1208289b0 <col:5, col:12> '<dependent type>' contains-errors <LValueToRValue>
|   | | | `-CXXDependentScopeMemberExpr 0x120828948 <col:5, col:12> '<dependent type>' contains-errors lvalue .arguments
|   | | |   `-RecoveryExpr 0x120828920 <col:5> '<dependent type>' contains-errors lvalue
|   | | |     `-DeclRefExpr 0x120828900 <col:5> 'struct razer_report' lvalue Var 0x120828130 'report' 'struct razer_report'
|   | | `-IntegerLiteral 0x120828990 <col:22> 'int' 2
|   | `-DeclRefExpr 0x1208289e8 <col:27> 'unsigned char' lvalue ParmVar 0x12080e378 'row_index' 'unsigned char'
|   |-BinaryOperator 0x120828b30 <line:14:5, col:27> '<dependent type>' contains-errors '='
|   | |-ArraySubscriptExpr 0x120828af0 <col:5, col:23> '<dependent type>' contains-errors lvalue
|   | | |-ImplicitCastExpr 0x120828ad8 <col:5, col:12> '<dependent type>' contains-errors <LValueToRValue>
|   | | | `-CXXDependentScopeMemberExpr 0x120828a70 <col:5, col:12> '<dependent type>' contains-errors lvalue .arguments
|   | | |   `-RecoveryExpr 0x120828a48 <col:5> '<dependent type>' contains-errors lvalue
|   | | |     `-DeclRefExpr 0x120828a28 <col:5> 'struct razer_report' lvalue Var 0x120828130 'report' 'struct razer_report'
|   | | `-IntegerLiteral 0x120828ab8 <col:22> 'int' 3
|   | `-DeclRefExpr 0x120828b10 <col:27> 'unsigned char' lvalue ParmVar 0x12080e3f8 'start_col' 'unsigned char'
|   |-BinaryOperator 0x120828c58 <line:15:5, col:27> '<dependent type>' contains-errors '='
|   | |-ArraySubscriptExpr 0x120828c18 <col:5, col:23> '<dependent type>' contains-errors lvalue
|   | | |-ImplicitCastExpr 0x120828c00 <col:5, col:12> '<dependent type>' contains-errors <LValueToRValue>
|   | | | `-CXXDependentScopeMemberExpr 0x120828b98 <col:5, col:12> '<dependent type>' contains-errors lvalue .arguments
|   | | |   `-RecoveryExpr 0x120828b70 <col:5> '<dependent type>' contains-errors lvalue
|   | | |     `-DeclRefExpr 0x120828b50 <col:5> 'struct razer_report' lvalue Var 0x120828130 'report' 'struct razer_report'
|   | | `-IntegerLiteral 0x120828be0 <col:22> 'int' 4
|   | `-DeclRefExpr 0x120828c38 <col:27> 'unsigned char' lvalue ParmVar 0x12080e478 'stop_col' 'unsigned char'
|   |-CallExpr 0x120829eb8 <line:16:5, col:54> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x120829d50 <col:5> 'void *(void *, const void *, unsigned long)' Function 0x120828cf8 'memcpy' 'void *(void *, const void *, unsigned long)'
|   | |-UnaryOperator 0x120829e30 <col:12, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | `-ArraySubscriptExpr 0x120829e10 <col:13, col:31> '<dependent type>' contains-errors lvalue
|   | |   |-ImplicitCastExpr 0x120829df8 <col:13, col:20> '<dependent type>' contains-errors <LValueToRValue>
|   | |   | `-CXXDependentScopeMemberExpr 0x120829d90 <col:13, col:20> '<dependent type>' contains-errors lvalue .arguments
|   | |   |   `-RecoveryExpr 0x120829d70 <col:13> '<dependent type>' contains-errors lvalue
|   | |   `-IntegerLiteral 0x120829dd8 <col:30> 'int' 5
|   | |-DeclRefExpr 0x120829e48 <col:34> 'unsigned char *' lvalue ParmVar 0x12080e528 'rgb_data' 'unsigned char *'
|   | `-RecoveryExpr 0x120829e68 <col:44> '<dependent type>' contains-errors lvalue
|   `-ReturnStmt 0x120829f10 <line:18:5, col:12>
|     `-RecoveryExpr 0x120829ef0 <col:12> '<dependent type>' contains-errors lvalue
`-FunctionDecl 0x120828cf8 <line:16:5> col:5 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x120829c00 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x120829c68 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x120829cd0 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x120828da0 <<invalid sloc>> Implicit 882
