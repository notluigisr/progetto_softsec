TranslationUnitDecl 0x13f055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13f0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13f055bd0 '__int128'
|-TypedefDecl 0x13f056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13f055bf0 'unsigned __int128'
|-TypedefDecl 0x13f80be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13f80bc00 'struct __NSConstantString_tag'
|   `-Record 0x13f056580 '__NSConstantString_tag'
|-TypedefDecl 0x13f80be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13f055d90 '__SVInt8_t'
|-TypedefDecl 0x13f80bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13f055db0 '__SVInt16_t'
|-TypedefDecl 0x13f80bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13f055dd0 '__SVInt32_t'
|-TypedefDecl 0x13f80bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13f055df0 '__SVInt64_t'
|-TypedefDecl 0x13f80c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13f055e10 '__SVUint8_t'
|-TypedefDecl 0x13f80c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13f055e30 '__SVUint16_t'
|-TypedefDecl 0x13f80c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13f055e50 '__SVUint32_t'
|-TypedefDecl 0x13f80c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13f055e70 '__SVUint64_t'
|-TypedefDecl 0x13f80c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13f055e90 '__SVFloat16_t'
|-TypedefDecl 0x13f80c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13f055eb0 '__SVFloat32_t'
|-TypedefDecl 0x13f80c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13f055ed0 '__SVFloat64_t'
|-TypedefDecl 0x13f80c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13f055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13f80c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13f055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13f80c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13f055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13f80c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13f055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13f80c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13f055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13f80c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13f055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13f80c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13f055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13f80c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13f055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13f80c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13f055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13f80c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13f056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13f80c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13f056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13f80c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13f056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13f80c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13f056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13f80c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13f056090 '__clang_svint8x3_t'
|-TypedefDecl 0x13f80c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13f0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13f80c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13f0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13f80c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13f0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13f80c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13f056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13f80ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13f056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13f80cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13f056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13f80cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13f056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13f80cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13f056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13f80d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13f0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13f80d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13f0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13f80d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13f0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13f80d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13f056210 '__clang_svint8x4_t'
|-TypedefDecl 0x13f80d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13f056230 '__clang_svint16x4_t'
|-TypedefDecl 0x13f80d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13f056250 '__clang_svint32x4_t'
|-TypedefDecl 0x13f80d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13f056270 '__clang_svint64x4_t'
|-TypedefDecl 0x13f80d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13f056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13f80d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13f0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13f80d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13f0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13f80d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13f0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13f80d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13f056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13f80d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13f056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13f80d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13f056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13f80d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13f056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13f80da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13f056390 '__SVBool_t'
|-TypedefDecl 0x13f80da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13f0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13f80dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13f0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13f80db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13f0563f0 '__SVCount_t'
|-TypedefDecl 0x13f80dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13f80dbb0 'char *'
|   `-BuiltinType 0x13f0556b0 'char'
|-TypedefDecl 0x13f80dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13f80dbb0 'char *'
|   `-BuiltinType 0x13f0556b0 'char'
|-EnumDecl 0x13f80dcc0 <dataset_diviso_filec/func10851_vuln.c:1:8, col:13> col:13 integrity_status
|-FunctionDecl 0x13f82ac40 <col:1, line:78:1> line:1:30 invalid evm_verify_hmac 'enum integrity_status (struct dentry *, const char *, char *, int, struct integrity_iint_cache *)' static
| |-ParmVarDecl 0x13f80e308 <col:46, col:61> col:61 used dentry 'struct dentry *'
| |-ParmVarDecl 0x13f80e388 <line:2:11, col:23> col:23 used xattr_name 'const char *'
| |-ParmVarDecl 0x13f82a818 <line:3:11, col:17> col:17 used xattr_value 'char *'
| |-ParmVarDecl 0x13f82a8b0 <line:4:11, col:18> col:18 invalid xattr_value_len 'int'
| |-ParmVarDecl 0x13f82aa88 <line:5:11, col:40> col:40 used iint 'struct integrity_iint_cache *'
| `-CompoundStmt 0x13f1242d0 <line:6:1, line:78:1>
|   |-DeclStmt 0x13f82af30 <line:7:2, col:46>
|   | |-RecordDecl 0x13f82ad10 <col:2, col:9> col:9 struct evm_ima_xattr_data
|   | `-VarDecl 0x13f82ae78 <col:2, col:42> col:29 used xattr_data 'struct evm_ima_xattr_data *' cinit
|   |   `-RecoveryExpr 0x13f82aef8 <col:42> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x13f82b008 <line:8:2, col:32>
|   | `-VarDecl 0x13f82afa0 <col:2, col:28> col:28 invalid calc 'struct evm_ima_xattr_data'
|   |-DeclStmt 0x13f82b0f0 <line:9:2, col:51>
|   | `-VarDecl 0x13f82b070 <col:2, col:24> col:24 referenced invalid evm_status 'enum integrity_status'
|   |-DeclStmt 0x13f82b220 <line:10:2, col:19>
|   | |-VarDecl 0x13f82b120 <col:2, col:6> col:6 used rc 'int'
|   | `-VarDecl 0x13f82b1a0 <col:2, col:10> col:10 used xattr_len 'int'
|   |-IfStmt 0x13f82b3e0 <line:12:2, line:13:16>
|   | |-BinaryOperator 0x13f82b350 <line:12:6, col:34> 'int' contains-errors '&&'
|   | | |-DeclRefExpr 0x13f82b238 <col:6> 'struct integrity_iint_cache *' lvalue ParmVar 0x13f82aa88 'iint' 'struct integrity_iint_cache *'
|   | | `-BinaryOperator 0x13f82b330 <col:14, col:34> 'int' contains-errors '=='
|   | |   |-RecoveryExpr 0x13f82b290 <col:14, col:20> '<dependent type>' contains-errors lvalue
|   | |   | `-DeclRefExpr 0x13f82b258 <col:14> 'struct integrity_iint_cache *' lvalue ParmVar 0x13f82aa88 'iint' 'struct integrity_iint_cache *'
|   | |   `-RecoveryExpr 0x13f82b310 <col:34> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x13f82b3d0 <line:13:3, col:16>
|   |   `-RecoveryExpr 0x13f82b3a8 <col:10, col:16> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x13f82b370 <col:10> 'struct integrity_iint_cache *' lvalue ParmVar 0x13f82aa88 'iint' 'struct integrity_iint_cache *'
|   |-BinaryOperator 0x13f82f068 <line:18:2, line:19:13> 'int' contains-errors '='
|   | |-DeclRefExpr 0x13f82b400 <line:18:2> 'int' lvalue Var 0x13f82b120 'rc' 'int'
|   | `-CallExpr 0x13f82f020 <col:7, line:19:13> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x13f82b580 <line:18:7> 'int ()' Function 0x13f82b4c8 'vfs_getxattr_alloc' 'int ()'
|   |   |-DeclRefExpr 0x13f82b5a0 <col:26> 'struct dentry *' lvalue ParmVar 0x13f80e308 'dentry' 'struct dentry *'
|   |   |-RecoveryExpr 0x13f82b790 <col:34> '<dependent type>' contains-errors lvalue
|   |   |-CStyleCastExpr 0x13f82b7c8 <col:50, col:60> 'char **' contains-errors <BitCast>
|   |   | `-UnaryOperator 0x13f82b660 <col:59, col:60> 'struct evm_ima_xattr_data **' contains-errors prefix '&' cannot overflow
|   |   |   `-DeclRefExpr 0x13f82b5d8 <col:60> 'struct evm_ima_xattr_data *' contains-errors lvalue Var 0x13f82ae78 'xattr_data' 'struct evm_ima_xattr_data *'
|   |   |-IntegerLiteral 0x13f82b6f0 <col:72> 'int' 0
|   |   `-RecoveryExpr 0x13f82f000 <line:19:5> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x13f82fa38 <line:20:2, line:32:2>
|   | |-BinaryOperator 0x13f82f0e0 <line:20:6, col:12> 'int' '<='
|   | | |-ImplicitCastExpr 0x13f82f0c8 <col:6> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13f82f088 <col:6> 'int' lvalue Var 0x13f82b120 'rc' 'int'
|   | | `-IntegerLiteral 0x13f82f0a8 <col:12> 'int' 0
|   | `-CompoundStmt 0x13f82fa10 <col:15, line:32:2>
|   |   |-BinaryOperator 0x13f82f1a0 <line:21:3, col:16> '<dependent type>' contains-errors '='
|   |   | |-RecoveryExpr 0x13f82f120 <col:3> '<dependent type>' contains-errors lvalue
|   |   | | `-DeclRefExpr 0x13f82f100 <col:3> 'enum integrity_status' lvalue Var 0x13f82b070 'evm_status' 'enum integrity_status'
|   |   | `-RecoveryExpr 0x13f82f180 <col:16> '<dependent type>' contains-errors lvalue
|   |   |-IfStmt 0x13f82f978 <line:22:3, line:30:3> has_else
|   |   | |-BinaryOperator 0x13f82f298 <line:22:7, col:14> 'int' contains-errors '=='
|   |   | | |-DeclRefExpr 0x13f82f1c0 <col:7> 'int' lvalue Var 0x13f82b120 'rc' 'int'
|   |   | | `-UnaryOperator 0x13f82f280 <col:13, col:14> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |   | |   `-ImplicitCastExpr 0x13f82f268 <col:14> '<dependent type>' contains-errors <LValueToRValue>
|   |   | |     `-RecoveryExpr 0x13f82f248 <col:14> '<dependent type>' contains-errors lvalue
|   |   | |-CompoundStmt 0x13f82f768 <col:23, line:28:3>
|   |   | | |-BinaryOperator 0x13f82f488 <line:23:4, col:41> 'int' '='
|   |   | | | |-DeclRefExpr 0x13f82f2b8 <col:4> 'int' lvalue Var 0x13f82b120 'rc' 'int'
|   |   | | | `-CallExpr 0x13f82f448 <col:9, col:41> 'int'
|   |   | | |   |-ImplicitCastExpr 0x13f82f430 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | |   | `-DeclRefExpr 0x13f82f3b8 <col:9> 'int ()' Function 0x13f82f300 'evm_find_protected_xattrs' 'int ()'
|   |   | | |   `-ImplicitCastExpr 0x13f82f470 <col:35> 'struct dentry *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x13f82f3d8 <col:35> 'struct dentry *' lvalue ParmVar 0x13f80e308 'dentry' 'struct dentry *'
|   |   | | `-IfStmt 0x13f82f738 <line:24:4, line:27:18> has_else
|   |   | |   |-BinaryOperator 0x13f82f500 <line:24:8, col:13> 'int' '>'
|   |   | |   | |-ImplicitCastExpr 0x13f82f4e8 <col:8> 'int' <LValueToRValue>
|   |   | |   | | `-DeclRefExpr 0x13f82f4a8 <col:8> 'int' lvalue Var 0x13f82b120 'rc' 'int'
|   |   | |   | `-IntegerLiteral 0x13f82f4c8 <col:13> 'int' 0
|   |   | |   |-BinaryOperator 0x13f82f5c0 <line:25:5, col:18> '<dependent type>' contains-errors '='
|   |   | |   | |-RecoveryExpr 0x13f82f540 <col:5> '<dependent type>' contains-errors lvalue
|   |   | |   | | `-DeclRefExpr 0x13f82f520 <col:5> 'enum integrity_status' lvalue Var 0x13f82b070 'evm_status' 'enum integrity_status'
|   |   | |   | `-RecoveryExpr 0x13f82f5a0 <col:18> '<dependent type>' contains-errors lvalue
|   |   | |   `-IfStmt 0x13f82f718 <line:26:9, line:27:18>
|   |   | |     |-BinaryOperator 0x13f82f638 <line:26:13, col:19> 'int' '=='
|   |   | |     | |-ImplicitCastExpr 0x13f82f620 <col:13> 'int' <LValueToRValue>
|   |   | |     | | `-DeclRefExpr 0x13f82f5e0 <col:13> 'int' lvalue Var 0x13f82b120 'rc' 'int'
|   |   | |     | `-IntegerLiteral 0x13f82f600 <col:19> 'int' 0
|   |   | |     `-BinaryOperator 0x13f82f6f8 <line:27:5, col:18> '<dependent type>' contains-errors '='
|   |   | |       |-RecoveryExpr 0x13f82f678 <col:5> '<dependent type>' contains-errors lvalue
|   |   | |       | `-DeclRefExpr 0x13f82f658 <col:5> 'enum integrity_status' lvalue Var 0x13f82b070 'evm_status' 'enum integrity_status'
|   |   | |       `-RecoveryExpr 0x13f82f6d8 <col:18> '<dependent type>' contains-errors lvalue
|   |   | `-IfStmt 0x13f82f958 <line:28:10, line:30:3>
|   |   |   |-BinaryOperator 0x13f82f860 <line:28:14, col:21> 'int' contains-errors '=='
|   |   |   | |-DeclRefExpr 0x13f82f788 <col:14> 'int' lvalue Var 0x13f82b120 'rc' 'int'
|   |   |   | `-UnaryOperator 0x13f82f848 <col:20, col:21> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |   |   |   `-ImplicitCastExpr 0x13f82f830 <col:21> '<dependent type>' contains-errors <LValueToRValue>
|   |   |   |     `-RecoveryExpr 0x13f82f810 <col:21> '<dependent type>' contains-errors lvalue
|   |   |   `-CompoundStmt 0x13f82f940 <col:33, line:30:3>
|   |   |     `-BinaryOperator 0x13f82f920 <line:29:4, col:17> '<dependent type>' contains-errors '='
|   |   |       |-RecoveryExpr 0x13f82f8a0 <col:4> '<dependent type>' contains-errors lvalue
|   |   |       | `-DeclRefExpr 0x13f82f880 <col:4> 'enum integrity_status' lvalue Var 0x13f82b070 'evm_status' 'enum integrity_status'
|   |   |       `-RecoveryExpr 0x13f82f900 <col:17> '<dependent type>' contains-errors lvalue
|   |   `-GotoStmt 0x13f82f9f8 <line:31:3, col:8> 'out' 0x13f82f9a8
|   |-BinaryOperator 0x13f82fab0 <line:34:2, col:14> 'int' '='
|   | |-DeclRefExpr 0x13f82fa58 <col:2> 'int' lvalue Var 0x13f82b1a0 'xattr_len' 'int'
|   | `-ImplicitCastExpr 0x13f82fa98 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x13f82fa78 <col:14> 'int' lvalue Var 0x13f82b120 'rc' 'int'
|   |-SwitchStmt 0x13f82fb48 <line:37:2, line:68:2>
|   | |-RecoveryExpr 0x13f82fb08 <line:37:10, col:22> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x13f82fad0 <col:10> 'struct evm_ima_xattr_data *' contains-errors lvalue Var 0x13f82ae78 'xattr_data' 'struct evm_ima_xattr_data *'
|   | `-CompoundStmt 0x13f123f10 <col:28, line:68:2>
|   |   |-BinaryOperator 0x13f82fdd8 <line:39:3, line:40:36> 'int' contains-errors '='
|   |   | |-DeclRefExpr 0x13f82fb88 <line:39:3> 'int' lvalue Var 0x13f82b120 'rc' 'int'
|   |   | `-CallExpr 0x13f82fd90 <col:8, line:40:36> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x13f82fc88 <line:39:8> 'int ()' Function 0x13f82fbd0 'evm_calc_hmac' 'int ()'
|   |   |   |-DeclRefExpr 0x13f82fca8 <col:22> 'struct dentry *' lvalue ParmVar 0x13f80e308 'dentry' 'struct dentry *'
|   |   |   |-DeclRefExpr 0x13f82fcc8 <col:30> 'const char *' lvalue ParmVar 0x13f80e388 'xattr_name' 'const char *'
|   |   |   |-DeclRefExpr 0x13f82fce8 <col:42> 'char *' lvalue ParmVar 0x13f82a818 'xattr_value' 'char *'
|   |   |   |-RecoveryExpr 0x13f82fd08 <line:40:8> '<dependent type>' contains-errors lvalue
|   |   |   `-CXXDependentScopeMemberExpr 0x13f82fd48 <col:25, col:30> '<dependent type>' contains-errors lvalue .digest
|   |   |     `-RecoveryExpr 0x13f82fd28 <col:25> '<dependent type>' contains-errors lvalue
|   |   |-IfStmt 0x13f82fe38 <line:41:3, line:42:4>
|   |   | |-ImplicitCastExpr 0x13f82fe18 <line:41:7> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x13f82fdf8 <col:7> 'int' lvalue Var 0x13f82b120 'rc' 'int'
|   |   | `-BreakStmt 0x13f82fe30 <line:42:4>
|   |   |-BinaryOperator 0x13f123148 <line:43:3, line:44:27> 'int' contains-errors '='
|   |   | |-DeclRefExpr 0x13f82fe58 <line:43:3> 'int' lvalue Var 0x13f82b120 'rc' 'int'
|   |   | `-CallExpr 0x13f123110 <col:8, line:44:27> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x13f122f50 <line:43:8> 'int (const void *, const void *, unsigned long)' Function 0x13f82fef8 'memcmp' 'int (const void *, const void *, unsigned long)'
|   |   |   |-RecoveryExpr 0x13f122fa8 <col:15, col:27> '<dependent type>' contains-errors lvalue
|   |   |   | `-DeclRefExpr 0x13f122f70 <col:15> 'struct evm_ima_xattr_data *' contains-errors lvalue Var 0x13f82ae78 'xattr_data' 'struct evm_ima_xattr_data *'
|   |   |   |-CXXDependentScopeMemberExpr 0x13f122ff0 <col:35, col:40> '<dependent type>' contains-errors lvalue .digest
|   |   |   | `-RecoveryExpr 0x13f122fd0 <col:35> '<dependent type>' contains-errors lvalue
|   |   |   `-UnaryExprOrTypeTraitExpr 0x13f1230c0 <line:44:8, col:26> 'unsigned long' contains-errors sizeof
|   |   |     `-ParenExpr 0x13f1230a0 <col:14, col:26> '<dependent type>' contains-errors lvalue
|   |   |       `-CXXDependentScopeMemberExpr 0x13f123058 <col:15, col:20> '<dependent type>' contains-errors lvalue .digest
|   |   |         `-RecoveryExpr 0x13f123038 <col:15> '<dependent type>' contains-errors lvalue
|   |   |-BreakStmt 0x13f1231c0 <line:47:3>
|   |   |-BinaryOperator 0x13f123418 <line:49:3, line:50:33> 'int' contains-errors '='
|   |   | |-DeclRefExpr 0x13f1231c8 <line:49:3> 'int' lvalue Var 0x13f82b120 'rc' 'int'
|   |   | `-CallExpr 0x13f1233d0 <col:8, line:50:33> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x13f1232c8 <line:49:8> 'int ()' Function 0x13f123210 'evm_calc_hash' 'int ()'
|   |   |   |-DeclRefExpr 0x13f1232e8 <col:22> 'struct dentry *' lvalue ParmVar 0x13f80e308 'dentry' 'struct dentry *'
|   |   |   |-DeclRefExpr 0x13f123308 <col:30> 'const char *' lvalue ParmVar 0x13f80e388 'xattr_name' 'const char *'
|   |   |   |-DeclRefExpr 0x13f123328 <col:42> 'char *' lvalue ParmVar 0x13f82a818 'xattr_value' 'char *'
|   |   |   |-RecoveryExpr 0x13f123348 <line:50:5> '<dependent type>' contains-errors lvalue
|   |   |   `-CXXDependentScopeMemberExpr 0x13f123388 <col:22, col:27> '<dependent type>' contains-errors lvalue .digest
|   |   |     `-RecoveryExpr 0x13f123368 <col:22> '<dependent type>' contains-errors lvalue
|   |   |-IfStmt 0x13f123478 <line:51:3, line:52:4>
|   |   | |-ImplicitCastExpr 0x13f123458 <line:51:7> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x13f123438 <col:7> 'int' lvalue Var 0x13f82b120 'rc' 'int'
|   |   | `-BreakStmt 0x13f123470 <line:52:4>
|   |   |-IfStmt 0x13f123e98 <line:56:3, line:63:3>
|   |   | |-UnaryOperator 0x13f123798 <line:56:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | `-ImplicitCastExpr 0x13f123780 <col:8> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x13f123760 <col:8> 'int' lvalue Var 0x13f82b120 'rc' 'int'
|   |   | `-CompoundStmt 0x13f123e80 <col:12, line:63:3>
|   |   |   `-IfStmt 0x13f123e60 <line:58:4, line:62:26>
|   |   |     |-BinaryOperator 0x13f123c70 <line:58:8, line:59:45> 'int' '&&'
|   |   |     | |-UnaryOperator 0x13f123a68 <line:58:8, col:42> 'int' prefix '!' cannot overflow
|   |   |     | | `-CallExpr 0x13f123a40 <col:9, col:42> 'int'
|   |   |     | |   |-ImplicitCastExpr 0x13f123a28 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   |     | |   | `-DeclRefExpr 0x13f123890 <col:9> 'int ()' Function 0x13f1237d8 'IS_RDONLY' 'int ()'
|   |   |     | |   `-CallExpr 0x13f1239e8 <col:19, col:41> 'int'
|   |   |     | |     |-ImplicitCastExpr 0x13f1239d0 <col:19> 'int (*)()' <FunctionToPointerDecay>
|   |   |     | |     | `-DeclRefExpr 0x13f123990 <col:19> 'int ()' Function 0x13f1238d8 'd_backing_inode' 'int ()'
|   |   |     | |     `-ImplicitCastExpr 0x13f123a10 <col:35> 'struct dentry *' <LValueToRValue>
|   |   |     | |       `-DeclRefExpr 0x13f1239b0 <col:35> 'struct dentry *' lvalue ParmVar 0x13f80e308 'dentry' 'struct dentry *'
|   |   |     | `-UnaryOperator 0x13f123c58 <line:59:8, col:45> 'int' prefix '!' cannot overflow
|   |   |     |   `-CallExpr 0x13f123c30 <col:9, col:45> 'int'
|   |   |     |     |-ImplicitCastExpr 0x13f123c18 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   |     |     | `-DeclRefExpr 0x13f123b60 <col:9> 'int ()' Function 0x13f123aa8 'IS_IMMUTABLE' 'int ()'
|   |   |     |     `-CallExpr 0x13f123bd8 <col:22, col:44> 'int'
|   |   |     |       |-ImplicitCastExpr 0x13f123bc0 <col:22> 'int (*)()' <FunctionToPointerDecay>
|   |   |     |       | `-DeclRefExpr 0x13f123b80 <col:22> 'int ()' Function 0x13f1238d8 'd_backing_inode' 'int ()'
|   |   |     |       `-ImplicitCastExpr 0x13f123c00 <col:38> 'struct dentry *' <LValueToRValue>
|   |   |     |         `-DeclRefExpr 0x13f123ba0 <col:38> 'struct dentry *' lvalue ParmVar 0x13f80e308 'dentry' 'struct dentry *'
|   |   |     `-CallExpr 0x13f123e20 <line:60:5, line:62:26> '<dependent type>' contains-errors
|   |   |       |-DeclRefExpr 0x13f123d70 <line:60:5> 'int ()' Function 0x13f123cb8 'evm_update_evmxattr' 'int ()'
|   |   |       |-DeclRefExpr 0x13f123d90 <col:25> 'struct dentry *' lvalue ParmVar 0x13f80e308 'dentry' 'struct dentry *'
|   |   |       |-DeclRefExpr 0x13f123db0 <col:33> 'const char *' lvalue ParmVar 0x13f80e388 'xattr_name' 'const char *'
|   |   |       |-DeclRefExpr 0x13f123dd0 <line:61:11> 'char *' lvalue ParmVar 0x13f82a818 'xattr_value' 'char *'
|   |   |       `-RecoveryExpr 0x13f123e00 <line:62:11> '<dependent type>' contains-errors lvalue
|   |   |-BreakStmt 0x13f123eb8 <line:64:3>
|   |   |-DefaultStmt 0x13f123ee8 <line:65:2, col:9>
|   |   | `-NullStmt 0x13f123ee0 <col:9>
|   |   `-BreakStmt 0x13f123f08 <line:67:3>
|   |-LabelStmt 0x13f124108 <line:73:1, line:75:22> 'out'
|   | `-IfStmt 0x13f1240e8 <line:74:2, line:75:22>
|   |   |-ImplicitCastExpr 0x13f124030 <line:74:6> 'struct integrity_iint_cache *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x13f124010 <col:6> 'struct integrity_iint_cache *' lvalue ParmVar 0x13f82aa88 'iint' 'struct integrity_iint_cache *'
|   |   `-BinaryOperator 0x13f1240c8 <line:75:3, col:22> '<dependent type>' contains-errors '='
|   |     |-RecoveryExpr 0x13f124080 <col:3, col:9> '<dependent type>' contains-errors lvalue
|   |     | `-DeclRefExpr 0x13f124048 <col:3> 'struct integrity_iint_cache *' lvalue ParmVar 0x13f82aa88 'iint' 'struct integrity_iint_cache *'
|   |     `-RecoveryExpr 0x13f1240a8 <col:22> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x13f124260 <line:76:2, col:18> 'int' contains-errors
|   | |-ImplicitCastExpr 0x13f124248 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13f124208 <col:2> 'int ()' Function 0x13f124150 'kfree' 'int ()'
|   | `-ImplicitCastExpr 0x13f124288 <col:8> 'struct evm_ima_xattr_data *' contains-errors <LValueToRValue>
|   |   `-DeclRefExpr 0x13f124228 <col:8> 'struct evm_ima_xattr_data *' contains-errors lvalue Var 0x13f82ae78 'xattr_data' 'struct evm_ima_xattr_data *'
|   `-ReturnStmt 0x13f1242c0 <line:77:2, col:9>
|     `-RecoveryExpr 0x13f1242a0 <col:9> '<dependent type>' contains-errors lvalue
`-FunctionDecl 0x13f82fef8 <line:43:8> col:8 implicit used memcmp 'int (const void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x13f122e00 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x13f122e68 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x13f122ed0 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x13f82ffa0 <<invalid sloc>> Implicit 883
