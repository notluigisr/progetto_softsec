TranslationUnitDecl 0x157055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1570564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x157055bd0 '__int128'
|-TypedefDecl 0x157056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x157055bf0 'unsigned __int128'
|-TypedefDecl 0x15780be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15780bc00 'struct __NSConstantString_tag'
|   `-Record 0x157056580 '__NSConstantString_tag'
|-TypedefDecl 0x15780be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x157055d90 '__SVInt8_t'
|-TypedefDecl 0x15780bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x157055db0 '__SVInt16_t'
|-TypedefDecl 0x15780bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x157055dd0 '__SVInt32_t'
|-TypedefDecl 0x15780bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x157055df0 '__SVInt64_t'
|-TypedefDecl 0x15780c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x157055e10 '__SVUint8_t'
|-TypedefDecl 0x15780c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x157055e30 '__SVUint16_t'
|-TypedefDecl 0x15780c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x157055e50 '__SVUint32_t'
|-TypedefDecl 0x15780c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x157055e70 '__SVUint64_t'
|-TypedefDecl 0x15780c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x157055e90 '__SVFloat16_t'
|-TypedefDecl 0x15780c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x157055eb0 '__SVFloat32_t'
|-TypedefDecl 0x15780c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x157055ed0 '__SVFloat64_t'
|-TypedefDecl 0x15780c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x157055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15780c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x157055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15780c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x157055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15780c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x157055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15780c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x157055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15780c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x157055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15780c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x157055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15780c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x157055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15780c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x157055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15780c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x157056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15780c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x157056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15780c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x157056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15780c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x157056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15780c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x157056090 '__clang_svint8x3_t'
|-TypedefDecl 0x15780c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1570560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15780c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1570560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15780c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1570560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15780c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x157056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15780ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x157056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15780cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x157056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15780cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x157056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15780cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x157056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15780d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1570561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15780d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1570561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15780d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1570561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15780d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x157056210 '__clang_svint8x4_t'
|-TypedefDecl 0x15780d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x157056230 '__clang_svint16x4_t'
|-TypedefDecl 0x15780d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x157056250 '__clang_svint32x4_t'
|-TypedefDecl 0x15780d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x157056270 '__clang_svint64x4_t'
|-TypedefDecl 0x15780d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x157056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15780d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1570562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15780d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1570562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15780d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1570562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15780d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x157056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15780d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x157056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15780d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x157056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15780d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x157056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15780da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x157056390 '__SVBool_t'
|-TypedefDecl 0x15780da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1570563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15780dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1570563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15780db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1570563f0 '__SVCount_t'
|-TypedefDecl 0x15780dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15780dbb0 'char *'
|   `-BuiltinType 0x1570556b0 'char'
|-TypedefDecl 0x15780dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15780dbb0 'char *'
|   `-BuiltinType 0x1570556b0 'char'
`-FunctionDecl 0x15780e218 <dataset_diviso_filec/func10611_nonvuln.c:1:1, line:25:2> line:1:14 invalid srp_create_user 'char *(char *, char **, char **, char *, char *, char *, int *, int)' static
  |-ParmVarDecl 0x15780dcd8 <col:30, col:37> col:37 used user 'char *'
  |-ParmVarDecl 0x15780dd88 <col:43, col:50> col:50 used srp_verifier 'char **'
  |-ParmVarDecl 0x15780de08 <line:2:9, col:16> col:16 used srp_usersalt 'char **'
  |-ParmVarDecl 0x15780de88 <col:29, col:35> col:35 used g 'char *'
  |-ParmVarDecl 0x15780df08 <col:38, col:44> col:44 used N 'char *'
  |-ParmVarDecl 0x15780df88 <line:3:9, col:15> col:15 used passout 'char *'
  |-ParmVarDecl 0x15780e058 <col:24, col:29> col:29 invalid bio 'int *'
  |-ParmVarDecl 0x15780e0d8 <col:34, col:38> col:38 verbose 'int'
  `-CompoundStmt 0x157122668 <line:4:2, line:25:2>
    |-DeclStmt 0x157827468 <line:5:3, col:22>
    | `-VarDecl 0x157827400 <col:3, col:21> col:8 used password 'char[1024]'
    |-DeclStmt 0x157827538 <line:7:2, col:19>
    | `-VarDecl 0x157827498 <col:2, col:15> col:8 used gNid 'char *' cinit
    |   `-RecoveryExpr 0x157827518 <col:15> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x157827608 <line:8:2, col:19>
    | `-VarDecl 0x157827568 <col:2, col:15> col:8 used salt 'char *' cinit
    |   `-RecoveryExpr 0x1578275e8 <col:15> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x157122600 <line:12:2, line:23:3>
    | |-BinaryOperator 0x157827968 <line:12:6, col:50> 'int' contains-errors '>'
    | | |-CallExpr 0x157827928 <col:6, col:47> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x1578277c0 <col:6> 'int ()' Function 0x157827708 'password_callback' 'int ()'
    | | | |-DeclRefExpr 0x1578277e0 <col:24> 'char[1024]' lvalue Var 0x157827400 'password' 'char[1024]'
    | | | |-IntegerLiteral 0x157827800 <col:33> 'int' 1024
    | | | |-IntegerLiteral 0x157827820 <col:38> 'int' 1
    | | | `-UnaryOperator 0x157827910 <col:40, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | |   `-RecoveryExpr 0x1578278f0 <col:41> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x1578278b0 <col:50> 'int' 0
    | `-CompoundStmt 0x1578283d0 <line:13:3, line:23:3>
    |   `-IfStmt 0x1578283a0 <line:15:3, line:20:20> has_else
    |     |-UnaryOperator 0x157828110 <line:15:7, col:77> 'int' contains-errors prefix '!' cannot overflow
    |     | `-ParenExpr 0x1578280f0 <col:8, col:77> 'char *' contains-errors
    |     |   `-BinaryOperator 0x1578280d0 <col:9, col:76> 'char *' contains-errors '='
    |     |     |-DeclRefExpr 0x157827988 <col:9> 'char *' contains-errors lvalue Var 0x157827498 'gNid' 'char *'
    |     |     `-ImplicitCastExpr 0x157827c90 <col:15, col:76> 'char *' contains-errors <IntegralToPointer>
    |     |       `-CallExpr 0x157827bc8 <col:15, col:76> 'int' contains-errors
    |     |         |-ImplicitCastExpr 0x157827bb0 <col:15> 'int (*)()' <FunctionToPointerDecay>
    |     |         | `-DeclRefExpr 0x157827a88 <col:15> 'int ()' Function 0x1578279d0 'SRP_create_verifier' 'int ()'
    |     |         |-ImplicitCastExpr 0x157827c18 <col:35> 'char *' <LValueToRValue>
    |     |         | `-DeclRefExpr 0x157827aa8 <col:35> 'char *' lvalue ParmVar 0x15780dcd8 'user' 'char *'
    |     |         |-ImplicitCastExpr 0x157827c30 <col:41> 'char *' <ArrayToPointerDecay>
    |     |         | `-DeclRefExpr 0x157827ac8 <col:41> 'char[1024]' lvalue Var 0x157827400 'password' 'char[1024]'
    |     |         |-UnaryOperator 0x157827b08 <col:51, col:52> 'char **' contains-errors prefix '&' cannot overflow
    |     |         | `-DeclRefExpr 0x157827ae8 <col:52> 'char *' contains-errors lvalue Var 0x157827568 'salt' 'char *'
    |     |         |-ImplicitCastExpr 0x157827c48 <col:58> 'char **' <LValueToRValue>
    |     |         | `-DeclRefExpr 0x157827b20 <col:58> 'char **' lvalue ParmVar 0x15780dd88 'srp_verifier' 'char **'
    |     |         |-ImplicitCastExpr 0x157827c60 <col:72> 'char *' <LValueToRValue>
    |     |         | `-DeclRefExpr 0x157827b40 <col:72> 'char *' lvalue ParmVar 0x15780df08 'N' 'char *'
    |     |         `-ImplicitCastExpr 0x157827c78 <col:75> 'char *' <LValueToRValue>
    |     |           `-DeclRefExpr 0x157827b60 <col:75> 'char *' lvalue ParmVar 0x15780de88 'g' 'char *'
    |     |-CompoundStmt 0x1578282e0 <line:16:4, line:18:4>
    |     | `-CallExpr 0x1578282b0 <line:17:4, col:24> '<dependent type>' contains-errors
    |     |   |-DeclRefExpr 0x157828208 <col:4> 'int ()' Function 0x157828150 'BIO_printf' 'int ()'
    |     |   |-RecoveryExpr 0x157828228 <col:15> '<dependent type>' contains-errors lvalue
    |     |   `-StringLiteral 0x157828290 <col:19> 'char[4]' lvalue "STR"
    |     `-BinaryOperator 0x157828380 <line:20:4, col:20> 'char *' contains-errors '='
    |       |-UnaryOperator 0x157828330 <col:4, col:5> 'char *' lvalue prefix '*' cannot overflow
    |       | `-ImplicitCastExpr 0x157828318 <col:5> 'char **' <LValueToRValue>
    |       |   `-DeclRefExpr 0x1578282f8 <col:5> 'char **' lvalue ParmVar 0x15780de08 'srp_usersalt' 'char **'
    |       `-ImplicitCastExpr 0x157828368 <col:20> 'char *' contains-errors <LValueToRValue>
    |         `-DeclRefExpr 0x157828348 <col:20> 'char *' contains-errors lvalue Var 0x157827568 'salt' 'char *'
    `-ReturnStmt 0x157122658 <line:24:2, col:9>
      `-ImplicitCastExpr 0x157122640 <col:9> 'char *' contains-errors <LValueToRValue>
        `-DeclRefExpr 0x157122620 <col:9> 'char *' contains-errors lvalue Var 0x157827498 'gNid' 'char *'
