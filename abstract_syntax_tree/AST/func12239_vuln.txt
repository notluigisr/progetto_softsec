TranslationUnitDecl 0x126855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1268564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x126855bd0 '__int128'
|-TypedefDecl 0x126856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x126855bf0 'unsigned __int128'
|-TypedefDecl 0x12700be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12700bc00 'struct __NSConstantString_tag'
|   `-Record 0x126856580 '__NSConstantString_tag'
|-TypedefDecl 0x12700be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x126855d90 '__SVInt8_t'
|-TypedefDecl 0x12700bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x126855db0 '__SVInt16_t'
|-TypedefDecl 0x12700bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x126855dd0 '__SVInt32_t'
|-TypedefDecl 0x12700bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x126855df0 '__SVInt64_t'
|-TypedefDecl 0x12700c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x126855e10 '__SVUint8_t'
|-TypedefDecl 0x12700c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x126855e30 '__SVUint16_t'
|-TypedefDecl 0x12700c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x126855e50 '__SVUint32_t'
|-TypedefDecl 0x12700c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x126855e70 '__SVUint64_t'
|-TypedefDecl 0x12700c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x126855e90 '__SVFloat16_t'
|-TypedefDecl 0x12700c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x126855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12700c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x126855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12700c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x126855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12700c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x126855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12700c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x126855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12700c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x126855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12700c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x126855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12700c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x126855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12700c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x126855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12700c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x126855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12700c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x126855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12700c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x126856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12700c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x126856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12700c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x126856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12700c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x126856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12700c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x126856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12700c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1268560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12700c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1268560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12700c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1268560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12700c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x126856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12700ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x126856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12700cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x126856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12700cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x126856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12700cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x126856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12700d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1268561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12700d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1268561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12700d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1268561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12700d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x126856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12700d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x126856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12700d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x126856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12700d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x126856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12700d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x126856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12700d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1268562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12700d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1268562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12700d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1268562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12700d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x126856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12700d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x126856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12700d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x126856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12700d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x126856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12700da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x126856390 '__SVBool_t'
|-TypedefDecl 0x12700da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1268563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12700dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1268563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12700db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1268563f0 '__SVCount_t'
|-TypedefDecl 0x12700dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12700dbb0 'char *'
|   `-BuiltinType 0x1268556b0 'char'
|-TypedefDecl 0x12700dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12700dbb0 'char *'
|   `-BuiltinType 0x1268556b0 'char'
`-FunctionDecl 0x12702a888 <dataset_diviso_filec/func12239_vuln.c:1:1, line:97:1> line:1:5 perf_pmu_register 'int (struct pmu *, const char *, int)'
  |-ParmVarDecl 0x12700e248 <col:23, col:35> col:35 used pmu 'struct pmu *'
  |-ParmVarDecl 0x12700e2c8 <col:40, col:52> col:52 used name 'const char *'
  |-ParmVarDecl 0x12700e348 <col:58, col:62> col:62 used type 'int'
  `-CompoundStmt 0x13000bee0 <line:2:1, line:97:1>
    |-DeclStmt 0x12702aaa8 <line:3:2, col:14>
    | |-VarDecl 0x12702a9a8 <col:2, col:6> col:6 used cpu 'int'
    | `-VarDecl 0x12702aa28 <col:2, col:11> col:11 used ret 'int'
    |-CallExpr 0x12702aca0 <line:5:2, col:23> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12702abf0 <col:2> 'int ()' Function 0x12702ab38 'mutex_lock' 'int ()'
    | `-UnaryOperator 0x12702ac88 <col:13, col:14> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x12702ac68 <col:14> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x12702ada0 <line:6:2, col:9> 'int' contains-errors '='
    | |-DeclRefExpr 0x12702acc8 <col:2> 'int' lvalue Var 0x12702aa28 'ret' 'int'
    | `-UnaryOperator 0x12702ad88 <col:8, col:9> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   `-ImplicitCastExpr 0x12702ad70 <col:9> '<dependent type>' contains-errors <LValueToRValue>
    |     `-RecoveryExpr 0x12702ad50 <col:9> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12702b018 <line:8:2, line:9:8>
    | |-UnaryOperator 0x12702af98 <line:8:6, col:12> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x12702af80 <col:7, col:12> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x12702af58 <col:7, col:12> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x12702af20 <col:7> 'struct pmu *' lvalue ParmVar 0x12700e248 'pmu' 'struct pmu *'
    | `-GotoStmt 0x12702b000 <line:9:3, col:8> 'unlock' 0x12702afb0
    |-BinaryOperator 0x12702b0d0 <line:11:2, col:15> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x12702b070 <col:2, col:7> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x12702b038 <col:2> 'struct pmu *' lvalue ParmVar 0x12700e248 'pmu' 'struct pmu *'
    | `-UnaryOperator 0x12702b0b8 <col:14, col:15> 'int' prefix '-'
    |   `-IntegerLiteral 0x12702b098 <col:15> 'int' 1
    |-IfStmt 0x12702b1a8 <line:12:2, line:13:8>
    | |-UnaryOperator 0x12702b128 <line:12:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x12702b110 <col:7> 'const char *' <LValueToRValue>
    | |   `-DeclRefExpr 0x12702b0f0 <col:7> 'const char *' lvalue ParmVar 0x12700e2c8 'name' 'const char *'
    | `-GotoStmt 0x12702b190 <line:13:3, col:8> 'skip_type' 0x12702b140
    |-BinaryOperator 0x12702b248 <line:14:2, col:14> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x12702b200 <col:2, col:7> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x12702b1c8 <col:2> 'struct pmu *' lvalue ParmVar 0x12700e248 'pmu' 'struct pmu *'
    | `-DeclRefExpr 0x12702b228 <col:14> 'const char *' lvalue ParmVar 0x12700e2c8 'name' 'const char *'
    |-IfStmt 0x12702b7a0 <line:16:2, line:22:2>
    | |-BinaryOperator 0x12702b2c0 <line:16:6, col:13> 'int' '<'
    | | |-ImplicitCastExpr 0x12702b2a8 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x12702b268 <col:6> 'int' lvalue ParmVar 0x12700e348 'type' 'int'
    | | `-IntegerLiteral 0x12702b288 <col:13> 'int' 0
    | `-CompoundStmt 0x12702b780 <col:16, line:22:2>
    |   |-BinaryOperator 0x12702b5c8 <line:17:3, col:63> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x12702b2e0 <col:3> 'int' lvalue ParmVar 0x12700e348 'type' 'int'
    |   | `-CallExpr 0x12702b580 <col:10, col:63> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x12702b3e0 <col:10> 'int ()' Function 0x12702b328 'idr_alloc' 'int ()'
    |   |   |-UnaryOperator 0x12702b528 <col:20, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   | `-RecoveryExpr 0x12702b508 <col:21> '<dependent type>' contains-errors lvalue
    |   |   |-DeclRefExpr 0x12702b430 <col:30> 'struct pmu *' lvalue ParmVar 0x12700e248 'pmu' 'struct pmu *'
    |   |   |-RecoveryExpr 0x12702b540 <col:35> '<dependent type>' contains-errors lvalue
    |   |   |-IntegerLiteral 0x12702b468 <col:50> 'int' 0
    |   |   `-RecoveryExpr 0x12702b560 <col:53> '<dependent type>' contains-errors lvalue
    |   `-IfStmt 0x12702b760 <line:18:3, line:21:3>
    |     |-BinaryOperator 0x12702b640 <line:18:7, col:14> 'int' '<'
    |     | |-ImplicitCastExpr 0x12702b628 <col:7> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x12702b5e8 <col:7> 'int' lvalue ParmVar 0x12700e348 'type' 'int'
    |     | `-IntegerLiteral 0x12702b608 <col:14> 'int' 0
    |     `-CompoundStmt 0x12702b740 <col:17, line:21:3>
    |       |-BinaryOperator 0x12702b6b8 <line:19:4, col:10> 'int' '='
    |       | |-DeclRefExpr 0x12702b660 <col:4> 'int' lvalue Var 0x12702aa28 'ret' 'int'
    |       | `-ImplicitCastExpr 0x12702b6a0 <col:10> 'int' <LValueToRValue>
    |       |   `-DeclRefExpr 0x12702b680 <col:10> 'int' lvalue ParmVar 0x12700e348 'type' 'int'
    |       `-GotoStmt 0x12702b728 <line:20:4, col:9> 'free_pdc' 0x12702b6d8
    |-BinaryOperator 0x130009648 <line:23:2, col:14> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x130009600 <col:2, col:7> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x12702b7c0 <col:2> 'struct pmu *' lvalue ParmVar 0x12700e248 'pmu' 'struct pmu *'
    | `-DeclRefExpr 0x130009628 <col:14> 'int' lvalue ParmVar 0x12700e348 'type' 'int'
    |-IfStmt 0x130009968 <line:25:2, line:29:2>
    | |-RecoveryExpr 0x130009680 <line:25:6> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x130009948 <col:23, line:29:2>
    |   |-BinaryOperator 0x130009868 <line:26:3, col:26> 'int' '='
    |   | |-DeclRefExpr 0x1300096a0 <col:3> 'int' lvalue Var 0x12702aa28 'ret' 'int'
    |   | `-CallExpr 0x130009828 <col:9, col:26> 'int'
    |   |   |-ImplicitCastExpr 0x130009810 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   |   | `-DeclRefExpr 0x1300097a0 <col:9> 'int ()' Function 0x1300096e8 'pmu_dev_alloc' 'int ()'
    |   |   `-ImplicitCastExpr 0x130009850 <col:23> 'struct pmu *' <LValueToRValue>
    |   |     `-DeclRefExpr 0x1300097c0 <col:23> 'struct pmu *' lvalue ParmVar 0x12700e248 'pmu' 'struct pmu *'
    |   `-IfStmt 0x130009928 <line:27:3, line:28:9>
    |     |-ImplicitCastExpr 0x1300098a8 <line:27:7> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x130009888 <col:7> 'int' lvalue Var 0x12702aa28 'ret' 'int'
    |     `-GotoStmt 0x130009910 <line:28:4, col:9> 'free_idr' 0x1300098c0
    |-LabelStmt 0x130009b90 <line:31:1, line:32:58> 'skip_type'
    | `-BinaryOperator 0x130009b70 <col:2, col:58> '<dependent type>' contains-errors '='
    |   |-RecoveryExpr 0x1300099c0 <col:2, col:7> '<dependent type>' contains-errors lvalue
    |   | `-DeclRefExpr 0x130009988 <col:2> 'struct pmu *' lvalue ParmVar 0x12700e248 'pmu' 'struct pmu *'
    |   `-CallExpr 0x130009b48 <col:25, col:58> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x130009ac8 <col:25> 'int ()' Function 0x130009a10 'find_pmu_context' 'int ()'
    |     `-RecoveryExpr 0x130009b20 <col:42, col:47> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x130009ae8 <col:42> 'struct pmu *' lvalue ParmVar 0x12700e248 'pmu' 'struct pmu *'
    |-IfStmt 0x130009c78 <line:33:2, line:34:8>
    | |-RecoveryExpr 0x130009be8 <line:33:6, col:11> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x130009bb0 <col:6> 'struct pmu *' lvalue ParmVar 0x12700e248 'pmu' 'struct pmu *'
    | `-GotoStmt 0x130009c60 <line:34:3, col:8> 'got_cpu_context' 0x130009c10
    |-IfStmt 0x130009e30 <line:38:2, line:39:8>
    | |-UnaryOperator 0x130009db0 <line:38:6, col:12> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x130009d98 <col:7, col:12> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x130009d70 <col:7, col:12> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x130009d38 <col:7> 'struct pmu *' lvalue ParmVar 0x12700e248 'pmu' 'struct pmu *'
    | `-GotoStmt 0x130009e18 <line:39:3, col:8> 'free_dev' 0x130009dc8
    |-CallExpr 0x130009f88 <line:41:2, col:27> 'int'
    | |-ImplicitCastExpr 0x130009f70 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x130009f30 <col:2> 'int ()' Function 0x130009e78 'for_each_possible_cpu' 'int ()'
    | `-ImplicitCastExpr 0x130009fb0 <col:24> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x130009f50 <col:24> 'int' lvalue Var 0x12702a9a8 'cpu' 'int'
    |-CompoundStmt 0x13000ae00 <col:29, line:55:2>
    | |-DeclStmt 0x13000a1b8 <line:42:3, col:34>
    | | |-RecordDecl 0x130009fc8 <col:3, col:10> col:10 struct perf_cpu_context
    | | `-VarDecl 0x13000a138 <col:3, col:28> col:28 used cpuctx 'struct perf_cpu_context *'
    | |-BinaryOperator 0x13000a3a0 <line:44:3, col:49> 'struct perf_cpu_context *' contains-errors '='
    | | |-DeclRefExpr 0x13000a1d0 <col:3> 'struct perf_cpu_context *' lvalue Var 0x13000a138 'cpuctx' 'struct perf_cpu_context *'
    | | `-CallExpr 0x13000a370 <col:12, col:49> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x13000a2d0 <col:12> 'int ()' Function 0x13000a218 'per_cpu_ptr' 'int ()'
    | |   |-RecoveryExpr 0x13000a328 <col:24, col:29> '<dependent type>' contains-errors lvalue
    | |   | `-DeclRefExpr 0x13000a2f0 <col:24> 'struct pmu *' lvalue ParmVar 0x12700e248 'pmu' 'struct pmu *'
    | |   `-DeclRefExpr 0x13000a350 <col:46> 'int' lvalue Var 0x12702a9a8 'cpu' 'int'
    | |-CallExpr 0x13000a538 <line:45:3, col:41> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x13000a4a0 <col:3> 'int ()' Function 0x13000a3e8 '__perf_event_init_context' 'int ()'
    | | `-UnaryOperator 0x13000a520 <col:29, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |   `-RecoveryExpr 0x13000a4f8 <col:30, col:38> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x13000a4c0 <col:30> 'struct perf_cpu_context *' lvalue Var 0x13000a138 'cpuctx' 'struct perf_cpu_context *'
    | |-BinaryOperator 0x13000a9e8 <line:49:3, col:21> '<dependent type>' contains-errors '='
    | | |-CXXDependentScopeMemberExpr 0x13000a980 <col:3, col:15> '<dependent type>' contains-errors lvalue .pmu
    | | | `-RecoveryExpr 0x13000a958 <col:3, col:11> '<dependent type>' contains-errors lvalue
    | | |   `-DeclRefExpr 0x13000a920 <col:3> 'struct perf_cpu_context *' lvalue Var 0x13000a138 'cpuctx' 'struct perf_cpu_context *'
    | | `-DeclRefExpr 0x13000a9c8 <col:21> 'struct pmu *' lvalue ParmVar 0x12700e248 'pmu' 'struct pmu *'
    | |-CallExpr 0x13000ab60 <line:51:3, col:38> 'int'
    | | |-ImplicitCastExpr 0x13000ab48 <col:3> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x13000aae8 <col:3> 'int ()' Function 0x13000aa30 '__perf_cpu_hrtimer_init' 'int ()'
    | | |-ImplicitCastExpr 0x13000ab90 <col:27> 'struct perf_cpu_context *' <LValueToRValue>
    | | | `-DeclRefExpr 0x13000ab08 <col:27> 'struct perf_cpu_context *' lvalue Var 0x13000a138 'cpuctx' 'struct perf_cpu_context *'
    | | `-ImplicitCastExpr 0x13000aba8 <col:35> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x13000ab28 <col:35> 'int' lvalue Var 0x12702a9a8 'cpu' 'int'
    | |-CallExpr 0x13000ad38 <line:53:3, col:40> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x13000aca0 <col:3> 'int ()' Function 0x13000abe8 'INIT_LIST_HEAD' 'int ()'
    | | `-UnaryOperator 0x13000ad20 <col:18, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |   `-RecoveryExpr 0x13000acf8 <col:19, col:27> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x13000acc0 <col:19> 'struct perf_cpu_context *' lvalue Var 0x13000a138 'cpuctx' 'struct perf_cpu_context *'
    | `-BinaryOperator 0x13000ade0 <line:54:3, col:24> '<dependent type>' contains-errors '='
    |   |-RecoveryExpr 0x13000ad98 <col:3, col:11> '<dependent type>' contains-errors lvalue
    |   | `-DeclRefExpr 0x13000ad60 <col:3> 'struct perf_cpu_context *' lvalue Var 0x13000a138 'cpuctx' 'struct perf_cpu_context *'
    |   `-DeclRefExpr 0x13000adc0 <col:24> 'struct pmu *' lvalue ParmVar 0x12700e248 'pmu' 'struct pmu *'
    |-LabelStmt 0x13000b200 <line:57:1, line:69:2> 'got_cpu_context'
    | `-IfStmt 0x13000b1e0 <line:58:2, line:69:2>
    |   |-UnaryOperator 0x13000aec0 <line:58:6, col:12> '<dependent type>' contains-errors prefix '!' cannot overflow
    |   | `-ImplicitCastExpr 0x13000aea8 <col:7, col:12> '<dependent type>' contains-errors <LValueToRValue>
    |   |   `-RecoveryExpr 0x13000ae80 <col:7, col:12> '<dependent type>' contains-errors lvalue
    |   |     `-DeclRefExpr 0x13000ae48 <col:7> 'struct pmu *' lvalue ParmVar 0x12700e248 'pmu' 'struct pmu *'
    |   `-CompoundStmt 0x13000b1c8 <col:23, line:69:2>
    |     `-IfStmt 0x13000b198 <line:59:3, line:68:3> has_else
    |       |-RecoveryExpr 0x13000af10 <line:59:7, col:12> '<dependent type>' contains-errors lvalue
    |       | `-DeclRefExpr 0x13000aed8 <col:7> 'struct pmu *' lvalue ParmVar 0x12700e248 'pmu' 'struct pmu *'
    |       |-CompoundStmt 0x13000b058 <col:24, line:64:3>
    |       `-CompoundStmt 0x13000b188 <col:10, line:68:3>
    |-IfStmt 0x13000b380 <line:71:2, line:74:2>
    | |-UnaryOperator 0x13000b298 <line:71:6, col:12> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x13000b280 <col:7, col:12> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x13000b258 <col:7, col:12> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x13000b220 <col:7> 'struct pmu *' lvalue ParmVar 0x12700e248 'pmu' 'struct pmu *'
    | `-CompoundStmt 0x13000b370 <col:24, line:74:2>
    |-BinaryOperator 0x13000b658 <line:80:2, col:8> 'int' '='
    | |-DeclRefExpr 0x13000b618 <col:2> 'int' lvalue Var 0x12702aa28 'ret' 'int'
    | `-IntegerLiteral 0x13000b638 <col:8> 'int' 0
    |-LabelStmt 0x13000b780 <line:81:1, col:7> 'unlock'
    | `-NullStmt 0x13000b778 <col:7>
    |-ReturnStmt 0x13000b7d8 <line:84:2, col:9>
    | `-ImplicitCastExpr 0x13000b7c0 <col:9> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x13000b7a0 <col:9> 'int' lvalue Var 0x12702aa28 'ret' 'int'
    |-LabelStmt 0x13000b970 <line:86:1, line:87:21> 'free_dev'
    | `-CallExpr 0x13000b948 <col:2, col:21> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13000b8c8 <col:2> 'int ()' Function 0x13000b810 'device_del' 'int ()'
    |   `-RecoveryExpr 0x13000b920 <col:13, col:18> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x13000b8e8 <col:13> 'struct pmu *' lvalue ParmVar 0x12700e248 'pmu' 'struct pmu *'
    |-CallExpr 0x13000baf0 <line:88:2, col:21> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13000ba70 <col:2> 'int ()' Function 0x13000b9b8 'put_device' 'int ()'
    | `-RecoveryExpr 0x13000bac8 <col:13, col:18> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x13000ba90 <col:13> 'struct pmu *' lvalue ParmVar 0x12700e248 'pmu' 'struct pmu *'
    |-LabelStmt 0x13000bd00 <line:90:1, col:9> 'free_idr'
    | `-NullStmt 0x13000bcf8 <col:9>
    |-LabelStmt 0x13000bea8 <line:94:1, line:95:36> 'free_pdc'
    | `-CallExpr 0x13000be80 <col:2, col:36> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13000be00 <col:2> 'int ()' Function 0x13000bd48 'free_percpu' 'int ()'
    |   `-RecoveryExpr 0x13000be58 <col:14, col:19> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x13000be20 <col:14> 'struct pmu *' lvalue ParmVar 0x12700e248 'pmu' 'struct pmu *'
    `-GotoStmt 0x13000bec8 <line:96:2, col:7> 'unlock' 0x12702afb0
