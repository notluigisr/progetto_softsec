TranslationUnitDecl 0x157055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1570564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x157055bd0 '__int128'
|-TypedefDecl 0x157056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x157055bf0 'unsigned __int128'
|-TypedefDecl 0x15780be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15780bc00 'struct __NSConstantString_tag'
|   `-Record 0x157056580 '__NSConstantString_tag'
|-TypedefDecl 0x15780be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x157055d90 '__SVInt8_t'
|-TypedefDecl 0x15780bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x157055db0 '__SVInt16_t'
|-TypedefDecl 0x15780bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x157055dd0 '__SVInt32_t'
|-TypedefDecl 0x15780bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x157055df0 '__SVInt64_t'
|-TypedefDecl 0x15780c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x157055e10 '__SVUint8_t'
|-TypedefDecl 0x15780c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x157055e30 '__SVUint16_t'
|-TypedefDecl 0x15780c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x157055e50 '__SVUint32_t'
|-TypedefDecl 0x15780c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x157055e70 '__SVUint64_t'
|-TypedefDecl 0x15780c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x157055e90 '__SVFloat16_t'
|-TypedefDecl 0x15780c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x157055eb0 '__SVFloat32_t'
|-TypedefDecl 0x15780c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x157055ed0 '__SVFloat64_t'
|-TypedefDecl 0x15780c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x157055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15780c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x157055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15780c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x157055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15780c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x157055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15780c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x157055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15780c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x157055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15780c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x157055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15780c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x157055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15780c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x157055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15780c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x157056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15780c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x157056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15780c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x157056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15780c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x157056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15780c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x157056090 '__clang_svint8x3_t'
|-TypedefDecl 0x15780c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1570560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15780c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1570560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15780c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1570560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15780c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x157056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15780ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x157056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15780cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x157056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15780cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x157056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15780cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x157056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15780d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1570561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15780d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1570561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15780d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1570561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15780d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x157056210 '__clang_svint8x4_t'
|-TypedefDecl 0x15780d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x157056230 '__clang_svint16x4_t'
|-TypedefDecl 0x15780d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x157056250 '__clang_svint32x4_t'
|-TypedefDecl 0x15780d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x157056270 '__clang_svint64x4_t'
|-TypedefDecl 0x15780d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x157056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15780d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1570562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15780d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1570562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15780d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1570562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15780d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x157056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15780d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x157056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15780d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x157056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15780d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x157056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15780da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x157056390 '__SVBool_t'
|-TypedefDecl 0x15780da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1570563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15780dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1570563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15780db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1570563f0 '__SVCount_t'
|-TypedefDecl 0x15780dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15780dbb0 'char *'
|   `-BuiltinType 0x1570556b0 'char'
|-TypedefDecl 0x15780dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15780dbb0 'char *'
|   `-BuiltinType 0x1570556b0 'char'
|-FunctionDecl 0x15780df18 <dataset_diviso_filec/func6091_vuln.c:1:1, line:33:1> line:1:1 invalid keyid_from_fingerprint 'int (const int *, int, int *)'
| |-ParmVarDecl 0x15780dcf0 <col:25, col:37> col:37 invalid fprint 'const int *'
| |-ParmVarDecl 0x15780dd70 <col:45, col:52> col:52 invalid fprint_len 'int'
| |-ParmVarDecl 0x15780de28 <col:64, col:69> col:69 referenced invalid keyid 'int *'
| `-CompoundStmt 0x160809500 <line:2:1, line:33:1>
|   |-IfStmt 0x15780e0e8 <line:5:3, line:6:13>
|   | |-UnaryOperator 0x15780e010 <line:5:7, col:8> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x15780dff8 <col:8> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x15780dfd8 <col:8> '<dependent type>' contains-errors lvalue
|   | `-BinaryOperator 0x15780e0c8 <line:6:5, col:13> '<dependent type>' contains-errors '='
|   |   |-RecoveryExpr 0x15780e048 <col:5> '<dependent type>' contains-errors lvalue
|   |   | `-DeclRefExpr 0x15780e028 <col:5> 'int *' lvalue ParmVar 0x15780de28 'keyid' 'int *'
|   |   `-RecoveryExpr 0x15780e0a8 <col:13> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x160809448 <line:8:3, line:30:5> has_else
|   | |-BinaryOperator 0x15780e148 <line:8:7, col:21> 'int' contains-errors '!='
|   | | |-RecoveryExpr 0x15780e108 <col:7> '<dependent type>' contains-errors lvalue
|   | | `-IntegerLiteral 0x15780e128 <col:21> 'int' 20
|   | |-CompoundStmt 0x157123568 <line:9:5, line:24:5>
|   | | |-DeclStmt 0x15780e1e8 <line:12:7, col:13>
|   | | | `-VarDecl 0x15780e180 <col:7, col:11> col:11 used rc 'int'
|   | | |-CallExpr 0x157122c18 <line:14:7, col:32> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x157122ac0 <col:7> 'void *(void *, int, unsigned long)' Function 0x157122870 'memset' 'void *(void *, int, unsigned long)'
|   | | | |-UnaryOperator 0x157122bc0 <col:15, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | | | `-RecoveryExpr 0x157122ba0 <col:16> '<dependent type>' contains-errors lvalue
|   | | | |-IntegerLiteral 0x157122b10 <col:20> 'int' 0
|   | | | `-UnaryExprOrTypeTraitExpr 0x157122bf8 <col:23, col:30> 'unsigned long' contains-errors sizeof
|   | | |   `-RecoveryExpr 0x157122bd8 <col:30> '<dependent type>' contains-errors lvalue
|   | | |-BinaryOperator 0x157122f28 <line:15:7, col:56> 'int' contains-errors '='
|   | | | |-DeclRefExpr 0x157122c50 <col:7> 'int' lvalue Var 0x15780e180 'rc' 'int'
|   | | | `-CallExpr 0x157122ef0 <col:12, col:56> '<dependent type>' contains-errors
|   | | |   |-DeclRefExpr 0x157122dd0 <col:12> 'int ()' Function 0x157122d18 'get_pubkey_byfprint' 'int ()'
|   | | |   |-UnaryOperator 0x157122ed8 <col:33, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | |   | `-RecoveryExpr 0x157122eb8 <col:34> '<dependent type>' contains-errors lvalue
|   | | |   |-RecoveryExpr 0x157122e20 <col:38> '<dependent type>' contains-errors lvalue
|   | | |   `-RecoveryExpr 0x157122e40 <col:46> '<dependent type>' contains-errors lvalue
|   | | `-IfStmt 0x157123538 <line:16:7, line:23:34> has_else
|   | |   |-ImplicitCastExpr 0x157122f68 <line:16:11> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x157122f48 <col:11> 'int' lvalue Var 0x15780e180 'rc' 'int'
|   | |   |-CompoundStmt 0x157123328 <line:17:9, line:21:9>
|   | |   | |-CallExpr 0x157123128 <line:18:11, col:26> 'int'
|   | |   | | |-ImplicitCastExpr 0x157123110 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   | |   | | | `-DeclRefExpr 0x157123060 <col:11> 'int ()' Function 0x157122fa8 'log_error' 'int ()'
|   | |   | | `-ImplicitCastExpr 0x157123150 <col:21> 'char *' <ArrayToPointerDecay>
|   | |   | |   `-StringLiteral 0x1571230c0 <col:21> 'char[4]' lvalue "STR"
|   | |   | |-BinaryOperator 0x157123228 <line:19:11, col:22> '<dependent type>' contains-errors '='
|   | |   | | |-ArraySubscriptExpr 0x1571231e8 <col:11, col:18> '<dependent type>' contains-errors lvalue
|   | |   | | | |-ImplicitCastExpr 0x1571231d0 <col:11> '<dependent type>' contains-errors <LValueToRValue>
|   | |   | | | | `-RecoveryExpr 0x157123188 <col:11> '<dependent type>' contains-errors lvalue
|   | |   | | | |   `-DeclRefExpr 0x157123168 <col:11> 'int *' lvalue ParmVar 0x15780de28 'keyid' 'int *'
|   | |   | | | `-IntegerLiteral 0x1571231b0 <col:17> 'int' 0
|   | |   | | `-IntegerLiteral 0x157123208 <col:22> 'int' 0
|   | |   | `-BinaryOperator 0x157123308 <line:20:11, col:22> '<dependent type>' contains-errors '='
|   | |   |   |-ArraySubscriptExpr 0x1571232c8 <col:11, col:18> '<dependent type>' contains-errors lvalue
|   | |   |   | |-ImplicitCastExpr 0x1571232b0 <col:11> '<dependent type>' contains-errors <LValueToRValue>
|   | |   |   | | `-RecoveryExpr 0x157123268 <col:11> '<dependent type>' contains-errors lvalue
|   | |   |   | |   `-DeclRefExpr 0x157123248 <col:11> 'int *' lvalue ParmVar 0x15780de28 'keyid' 'int *'
|   | |   |   | `-IntegerLiteral 0x157123290 <col:17> 'int' 1
|   | |   |   `-IntegerLiteral 0x1571232e8 <col:22> 'int' 0
|   | |   `-CallExpr 0x157123508 <line:23:9, col:34> '<dependent type>' contains-errors
|   | |     |-DeclRefExpr 0x157123430 <col:9> 'int ()' Function 0x157123378 'keyid_from_pk' 'int ()'
|   | |     |-UnaryOperator 0x1571234f0 <col:24, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | |     | `-RecoveryExpr 0x1571234d0 <col:25> '<dependent type>' contains-errors lvalue
|   | |     `-RecoveryExpr 0x157123480 <col:29> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x160809420 <line:26:5, line:30:5>
|   |   |-DeclStmt 0x160808c88 <line:27:7, col:30>
|   |   | `-VarDecl 0x160808c00 <col:7, col:19> col:19 invalid dp 'const int *'
|   |   |-BinaryOperator 0x160809040 <line:28:7, col:67> '<dependent type>' contains-errors '='
|   |   | |-ArraySubscriptExpr 0x160808d20 <col:7, col:14> '<dependent type>' contains-errors lvalue
|   |   | | |-ImplicitCastExpr 0x160808d08 <col:7> '<dependent type>' contains-errors <LValueToRValue>
|   |   | | | `-RecoveryExpr 0x160808cc0 <col:7> '<dependent type>' contains-errors lvalue
|   |   | | |   `-DeclRefExpr 0x160808ca0 <col:7> 'int *' lvalue ParmVar 0x15780de28 'keyid' 'int *'
|   |   | | `-IntegerLiteral 0x160808ce8 <col:13> 'int' 0
|   |   | `-BinaryOperator 0x160809020 <col:18, col:67> '<dependent type>' contains-errors '|'
|   |   |   |-BinaryOperator 0x160808f88 <col:18, col:58> '<dependent type>' contains-errors '|'
|   |   |   | |-BinaryOperator 0x160808eb0 <col:18, col:43> '<dependent type>' contains-errors '|'
|   |   |   | | |-BinaryOperator 0x160808dd8 <col:18, col:28> '<dependent type>' contains-errors '<<'
|   |   |   | | | |-ArraySubscriptExpr 0x160808d98 <col:18, col:23> '<dependent type>' contains-errors lvalue
|   |   |   | | | | |-ImplicitCastExpr 0x160808d80 <col:18> '<dependent type>' contains-errors <LValueToRValue>
|   |   |   | | | | | `-RecoveryExpr 0x160808d40 <col:18> '<dependent type>' contains-errors lvalue
|   |   |   | | | | `-IntegerLiteral 0x160808d60 <col:21> 'int' 12
|   |   |   | | | `-IntegerLiteral 0x160808db8 <col:28> 'int' 24
|   |   |   | | `-BinaryOperator 0x160808e90 <col:33, col:43> '<dependent type>' contains-errors '<<'
|   |   |   | |   |-ArraySubscriptExpr 0x160808e50 <col:33, col:38> '<dependent type>' contains-errors lvalue
|   |   |   | |   | |-ImplicitCastExpr 0x160808e38 <col:33> '<dependent type>' contains-errors <LValueToRValue>
|   |   |   | |   | | `-RecoveryExpr 0x160808df8 <col:33> '<dependent type>' contains-errors lvalue
|   |   |   | |   | `-IntegerLiteral 0x160808e18 <col:36> 'int' 13
|   |   |   | |   `-IntegerLiteral 0x160808e70 <col:43> 'int' 16
|   |   |   | `-BinaryOperator 0x160808f68 <col:48, col:58> '<dependent type>' contains-errors '<<'
|   |   |   |   |-ArraySubscriptExpr 0x160808f28 <col:48, col:53> '<dependent type>' contains-errors lvalue
|   |   |   |   | |-ImplicitCastExpr 0x160808f10 <col:48> '<dependent type>' contains-errors <LValueToRValue>
|   |   |   |   | | `-RecoveryExpr 0x160808ed0 <col:48> '<dependent type>' contains-errors lvalue
|   |   |   |   | `-IntegerLiteral 0x160808ef0 <col:51> 'int' 14
|   |   |   |   `-IntegerLiteral 0x160808f48 <col:58> 'int' 8
|   |   |   `-ArraySubscriptExpr 0x160809000 <col:62, col:67> '<dependent type>' contains-errors lvalue
|   |   |     |-ImplicitCastExpr 0x160808fe8 <col:62> '<dependent type>' contains-errors <LValueToRValue>
|   |   |     | `-RecoveryExpr 0x160808fa8 <col:62> '<dependent type>' contains-errors lvalue
|   |   |     `-IntegerLiteral 0x160808fc8 <col:65> 'int' 15
|   |   `-BinaryOperator 0x160809400 <line:29:7, col:67> '<dependent type>' contains-errors '='
|   |     |-ArraySubscriptExpr 0x1608090e0 <col:7, col:14> '<dependent type>' contains-errors lvalue
|   |     | |-ImplicitCastExpr 0x1608090c8 <col:7> '<dependent type>' contains-errors <LValueToRValue>
|   |     | | `-RecoveryExpr 0x160809080 <col:7> '<dependent type>' contains-errors lvalue
|   |     | |   `-DeclRefExpr 0x160809060 <col:7> 'int *' lvalue ParmVar 0x15780de28 'keyid' 'int *'
|   |     | `-IntegerLiteral 0x1608090a8 <col:13> 'int' 1
|   |     `-BinaryOperator 0x1608093e0 <col:18, col:67> '<dependent type>' contains-errors '|'
|   |       |-BinaryOperator 0x160809348 <col:18, col:58> '<dependent type>' contains-errors '|'
|   |       | |-BinaryOperator 0x160809270 <col:18, col:43> '<dependent type>' contains-errors '|'
|   |       | | |-BinaryOperator 0x160809198 <col:18, col:28> '<dependent type>' contains-errors '<<'
|   |       | | | |-ArraySubscriptExpr 0x160809158 <col:18, col:23> '<dependent type>' contains-errors lvalue
|   |       | | | | |-ImplicitCastExpr 0x160809140 <col:18> '<dependent type>' contains-errors <LValueToRValue>
|   |       | | | | | `-RecoveryExpr 0x160809100 <col:18> '<dependent type>' contains-errors lvalue
|   |       | | | | `-IntegerLiteral 0x160809120 <col:21> 'int' 16
|   |       | | | `-IntegerLiteral 0x160809178 <col:28> 'int' 24
|   |       | | `-BinaryOperator 0x160809250 <col:33, col:43> '<dependent type>' contains-errors '<<'
|   |       | |   |-ArraySubscriptExpr 0x160809210 <col:33, col:38> '<dependent type>' contains-errors lvalue
|   |       | |   | |-ImplicitCastExpr 0x1608091f8 <col:33> '<dependent type>' contains-errors <LValueToRValue>
|   |       | |   | | `-RecoveryExpr 0x1608091b8 <col:33> '<dependent type>' contains-errors lvalue
|   |       | |   | `-IntegerLiteral 0x1608091d8 <col:36> 'int' 17
|   |       | |   `-IntegerLiteral 0x160809230 <col:43> 'int' 16
|   |       | `-BinaryOperator 0x160809328 <col:48, col:58> '<dependent type>' contains-errors '<<'
|   |       |   |-ArraySubscriptExpr 0x1608092e8 <col:48, col:53> '<dependent type>' contains-errors lvalue
|   |       |   | |-ImplicitCastExpr 0x1608092d0 <col:48> '<dependent type>' contains-errors <LValueToRValue>
|   |       |   | | `-RecoveryExpr 0x160809290 <col:48> '<dependent type>' contains-errors lvalue
|   |       |   | `-IntegerLiteral 0x1608092b0 <col:51> 'int' 18
|   |       |   `-IntegerLiteral 0x160809308 <col:58> 'int' 8
|   |       `-ArraySubscriptExpr 0x1608093c0 <col:62, col:67> '<dependent type>' contains-errors lvalue
|   |         |-ImplicitCastExpr 0x1608093a8 <col:62> '<dependent type>' contains-errors <LValueToRValue>
|   |         | `-RecoveryExpr 0x160809368 <col:62> '<dependent type>' contains-errors lvalue
|   |         `-IntegerLiteral 0x160809388 <col:65> 'int' 19
|   `-ReturnStmt 0x1608094f0 <line:32:3, col:17>
|     `-ArraySubscriptExpr 0x1608094d0 <col:10, col:17> '<dependent type>' contains-errors lvalue
|       |-ImplicitCastExpr 0x1608094b8 <col:10> '<dependent type>' contains-errors <LValueToRValue>
|       | `-RecoveryExpr 0x160809478 <col:10> '<dependent type>' contains-errors lvalue
|       `-IntegerLiteral 0x160809498 <col:16> 'int' 1
`-FunctionDecl 0x157122870 <line:14:7> col:7 implicit used memset 'void *(void *, int, unsigned long)' extern
  |-ParmVarDecl 0x157122970 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x1571229d8 <<invalid sloc>> <invalid sloc> 'int'
  |-ParmVarDecl 0x157122a40 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x157122918 <<invalid sloc>> Implicit 900
