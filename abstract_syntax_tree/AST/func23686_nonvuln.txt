TranslationUnitDecl 0x12e038e08 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12e039cb8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12e0393d0 '__int128'
|-TypedefDecl 0x12e039d28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12e0393f0 'unsigned __int128'
|-TypedefDecl 0x12d01d830 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12d01d600 'struct __NSConstantString_tag'
|   `-Record 0x12e039d80 '__NSConstantString_tag'
|-TypedefDecl 0x12d01d898 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12e039590 '__SVInt8_t'
|-TypedefDecl 0x12d01d900 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12e0395b0 '__SVInt16_t'
|-TypedefDecl 0x12d01d968 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12e0395d0 '__SVInt32_t'
|-TypedefDecl 0x12d01d9d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12e0395f0 '__SVInt64_t'
|-TypedefDecl 0x12d01da38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12e039610 '__SVUint8_t'
|-TypedefDecl 0x12d01daa0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12e039630 '__SVUint16_t'
|-TypedefDecl 0x12d01db08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12e039650 '__SVUint32_t'
|-TypedefDecl 0x12d01db70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12e039670 '__SVUint64_t'
|-TypedefDecl 0x12d01dbd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12e039690 '__SVFloat16_t'
|-TypedefDecl 0x12d01dc40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12e0396b0 '__SVFloat32_t'
|-TypedefDecl 0x12d01dca8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12e0396d0 '__SVFloat64_t'
|-TypedefDecl 0x12d01dd10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12e0396f0 '__SVBfloat16_t'
|-TypedefDecl 0x12d01dd78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12e039710 '__clang_svint8x2_t'
|-TypedefDecl 0x12d01dde0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12e039730 '__clang_svint16x2_t'
|-TypedefDecl 0x12d01de48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12e039750 '__clang_svint32x2_t'
|-TypedefDecl 0x12d01deb0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12e039770 '__clang_svint64x2_t'
|-TypedefDecl 0x12d01df18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12e039790 '__clang_svuint8x2_t'
|-TypedefDecl 0x12d01df80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12e0397b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12d01dfe8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12e0397d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12d01e050 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12e0397f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12d01e0b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12e039810 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12d01e120 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12e039830 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12d01e188 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12e039850 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12d01e1f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12e039870 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12d01e258 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12e039890 '__clang_svint8x3_t'
|-TypedefDecl 0x12d01e2c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12e0398b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12d01e328 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12e0398d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12d01e390 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12e0398f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12d01e3f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12e039910 '__clang_svuint8x3_t'
|-TypedefDecl 0x12d01e460 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12e039930 '__clang_svuint16x3_t'
|-TypedefDecl 0x12d01e4c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12e039950 '__clang_svuint32x3_t'
|-TypedefDecl 0x12d01e530 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12e039970 '__clang_svuint64x3_t'
|-TypedefDecl 0x12d01e598 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12e039990 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12d01ea00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12e0399b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12d01ea68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12e0399d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12d01ead0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12e0399f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12d01eb38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12e039a10 '__clang_svint8x4_t'
|-TypedefDecl 0x12d01eba0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12e039a30 '__clang_svint16x4_t'
|-TypedefDecl 0x12d01ec08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12e039a50 '__clang_svint32x4_t'
|-TypedefDecl 0x12d01ec70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12e039a70 '__clang_svint64x4_t'
|-TypedefDecl 0x12d01ecd8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12e039a90 '__clang_svuint8x4_t'
|-TypedefDecl 0x12d01ed40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12e039ab0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12d01eda8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12e039ad0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12d01ee10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12e039af0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12d01ee78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12e039b10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12d01eee0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12e039b30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12d01ef48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12e039b50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12d01efb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12e039b70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12d01f018 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12e039b90 '__SVBool_t'
|-TypedefDecl 0x12d01f080 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12e039bb0 '__clang_svboolx2_t'
|-TypedefDecl 0x12d01f0e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12e039bd0 '__clang_svboolx4_t'
|-TypedefDecl 0x12d01f150 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12e039bf0 '__SVCount_t'
|-TypedefDecl 0x12d01f1f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12d01f1b0 'char *'
|   `-BuiltinType 0x12e038eb0 'char'
|-TypedefDecl 0x12d01f268 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12d01f1b0 'char *'
|   `-BuiltinType 0x12e038eb0 'char'
`-FunctionDecl 0x12d047878 <dataset_diviso_filec/func23686_nonvuln.c:1:1, line:22:1> line:1:12 llc_ui_create 'int (struct net *, struct socket *, int, int)' static
  |-ParmVarDecl 0x12d01f848 <col:26, col:38> col:38 used net 'struct net *'
  |-ParmVarDecl 0x12d047628 <col:43, col:58> col:58 used sock 'struct socket *'
  |-ParmVarDecl 0x12d0476a8 <col:64, col:68> col:68 protocol 'int'
  |-ParmVarDecl 0x12d047728 <line:2:5, col:9> col:9 kern 'int'
  `-CompoundStmt 0x12d04aed8 <line:3:1, line:22:1>
    |-DeclStmt 0x12d047b78 <line:4:2, col:17>
    | |-RecordDecl 0x12d047988 <col:2, col:9> col:9 struct sock
    | `-VarDecl 0x12d047af8 <col:2, col:15> col:15 used sk 'struct sock *'
    |-DeclStmt 0x12d047cc0 <line:5:2, col:27>
    | `-VarDecl 0x12d047ba8 <col:2, col:12> col:6 used rc 'int' cinit
    |   `-UnaryOperator 0x12d047ca8 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x12d047c90 <col:12> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x12d047c70 <col:12> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12d047f70 <line:7:2, line:8:11>
    | |-UnaryOperator 0x12d047eb0 <line:7:6, col:26> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-CallExpr 0x12d047e88 <col:7, col:26> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x12d047df0 <col:7> 'int ()' Function 0x12d047d38 'capable' 'int ()'
    | |   `-RecoveryExpr 0x12d047e68 <col:15> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x12d047f60 <line:8:3, col:11>
    |   `-UnaryOperator 0x12d047f48 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x12d047f30 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x12d047f10 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12d048250 <line:10:2, line:11:11>
    | |-UnaryOperator 0x12d048190 <line:10:6, col:28> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-CallExpr 0x12d048160 <col:7, col:28> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x12d048070 <col:7> 'int ()' Function 0x12d047fb8 'net_eq' 'int ()'
    | |   |-DeclRefExpr 0x12d048090 <col:14> 'struct net *' lvalue ParmVar 0x12d01f848 'net' 'struct net *'
    | |   `-UnaryOperator 0x12d048148 <col:19, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |     `-RecoveryExpr 0x12d048128 <col:20> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x12d048240 <line:11:3, col:11>
    |   `-UnaryOperator 0x12d048228 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x12d048210 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x12d0481f0 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12d04ae70 <line:13:2, line:20:2>
    | |-CallExpr 0x12d048588 <line:13:6, col:66> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x12d048350 <col:6> 'int ()' Function 0x12d048298 'likely' 'int ()'
    | | `-BinaryOperator 0x12d048568 <col:13, col:55> 'int' contains-errors '||'
    | |   |-BinaryOperator 0x12d048508 <col:13, col:27> 'int' contains-errors '=='
    | |   | |-RecoveryExpr 0x12d0483a8 <col:13, col:19> '<dependent type>' contains-errors lvalue
    | |   | | `-DeclRefExpr 0x12d048370 <col:13> 'struct socket *' lvalue ParmVar 0x12d047628 'sock' 'struct socket *'
    | |   | `-RecoveryExpr 0x12d0484e8 <col:27> '<dependent type>' contains-errors lvalue
    | |   `-BinaryOperator 0x12d048548 <col:41, col:55> 'int' contains-errors '=='
    | |     |-RecoveryExpr 0x12d048440 <col:41, col:47> '<dependent type>' contains-errors lvalue
    | |     | `-DeclRefExpr 0x12d048408 <col:41> 'struct socket *' lvalue ParmVar 0x12d047628 'sock' 'struct socket *'
    | |     `-RecoveryExpr 0x12d048528 <col:55> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x12d04ae48 <col:69, line:20:2>
    |   |-BinaryOperator 0x12d04a888 <line:14:3, col:9> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x12d0485b0 <col:3> 'int' contains-errors lvalue Var 0x12d047ba8 'rc' 'int'
    |   | `-UnaryOperator 0x12d04a870 <col:8, col:9> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |   `-ImplicitCastExpr 0x12d04a858 <col:9> '<dependent type>' contains-errors <LValueToRValue>
    |   |     `-RecoveryExpr 0x12d04a838 <col:9> '<dependent type>' contains-errors lvalue
    |   |-BinaryOperator 0x12d04ab60 <line:15:3, col:56> 'struct sock *' contains-errors '='
    |   | |-DeclRefExpr 0x12d04a8a8 <col:3> 'struct sock *' lvalue Var 0x12d047af8 'sk' 'struct sock *'
    |   | `-CallExpr 0x12d04ab20 <col:8, col:56> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x12d04a9a8 <col:8> 'int ()' Function 0x12d04a8f0 'llc_sk_alloc' 'int ()'
    |   |   |-DeclRefExpr 0x12d04a9c8 <col:21> 'struct net *' lvalue ParmVar 0x12d01f848 'net' 'struct net *'
    |   |   |-RecoveryExpr 0x12d04aaa8 <col:26> '<dependent type>' contains-errors lvalue
    |   |   |-RecoveryExpr 0x12d04aac8 <col:34> '<dependent type>' contains-errors lvalue
    |   |   `-UnaryOperator 0x12d04ab08 <col:46, col:47> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |     `-RecoveryExpr 0x12d04aae8 <col:47> '<dependent type>' contains-errors lvalue
    |   `-IfStmt 0x12d04ae28 <line:16:3, line:19:3>
    |     |-ImplicitCastExpr 0x12d04aba0 <line:16:7> 'struct sock *' <LValueToRValue>
    |     | `-DeclRefExpr 0x12d04ab80 <col:7> 'struct sock *' lvalue Var 0x12d047af8 'sk' 'struct sock *'
    |     `-CompoundStmt 0x12d04ae08 <col:11, line:19:3>
    |       |-BinaryOperator 0x12d04abf8 <line:17:4, col:9> 'int' contains-errors '='
    |       | |-DeclRefExpr 0x12d04abb8 <col:4> 'int' contains-errors lvalue Var 0x12d047ba8 'rc' 'int'
    |       | `-IntegerLiteral 0x12d04abd8 <col:9> 'int' 0
    |       `-CallExpr 0x12d04ada8 <line:18:4, col:27> 'int'
    |         |-ImplicitCastExpr 0x12d04ad90 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |         | `-DeclRefExpr 0x12d04acf8 <col:4> 'int ()' Function 0x12d04ac40 'llc_ui_sk_init' 'int ()'
    |         |-ImplicitCastExpr 0x12d04add8 <col:19> 'struct socket *' <LValueToRValue>
    |         | `-DeclRefExpr 0x12d04ad18 <col:19> 'struct socket *' lvalue ParmVar 0x12d047628 'sock' 'struct socket *'
    |         `-ImplicitCastExpr 0x12d04adf0 <col:25> 'struct sock *' <LValueToRValue>
    |           `-DeclRefExpr 0x12d04ad38 <col:25> 'struct sock *' lvalue Var 0x12d047af8 'sk' 'struct sock *'
    `-ReturnStmt 0x12d04aec8 <line:21:2, col:9>
      `-ImplicitCastExpr 0x12d04aeb0 <col:9> 'int' contains-errors <LValueToRValue>
        `-DeclRefExpr 0x12d04ae90 <col:9> 'int' contains-errors lvalue Var 0x12d047ba8 'rc' 'int'
