TranslationUnitDecl 0x12e055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12e0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12e055bd0 '__int128'
|-TypedefDecl 0x12e056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12e055bf0 'unsigned __int128'
|-TypedefDecl 0x12e80be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12e80bc00 'struct __NSConstantString_tag'
|   `-Record 0x12e056580 '__NSConstantString_tag'
|-TypedefDecl 0x12e80be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12e055d90 '__SVInt8_t'
|-TypedefDecl 0x12e80bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12e055db0 '__SVInt16_t'
|-TypedefDecl 0x12e80bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12e055dd0 '__SVInt32_t'
|-TypedefDecl 0x12e80bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12e055df0 '__SVInt64_t'
|-TypedefDecl 0x12e80c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12e055e10 '__SVUint8_t'
|-TypedefDecl 0x12e80c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12e055e30 '__SVUint16_t'
|-TypedefDecl 0x12e80c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12e055e50 '__SVUint32_t'
|-TypedefDecl 0x12e80c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12e055e70 '__SVUint64_t'
|-TypedefDecl 0x12e80c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12e055e90 '__SVFloat16_t'
|-TypedefDecl 0x12e80c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12e055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12e80c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12e055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12e80c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12e055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12e80c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12e055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12e80c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12e055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12e80c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12e055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12e80c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12e055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12e80c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12e055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12e80c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12e055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12e80c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12e055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12e80c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12e055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12e80c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12e056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12e80c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12e056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12e80c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12e056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12e80c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12e056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12e80c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12e056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12e80c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12e0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12e80c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12e0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12e80c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12e0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12e80c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12e056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12e80ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12e056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12e80cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12e056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12e80cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12e056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12e80cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12e056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12e80d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12e0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12e80d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12e0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12e80d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12e0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12e80d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12e056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12e80d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12e056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12e80d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12e056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12e80d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12e056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12e80d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12e056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12e80d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12e0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12e80d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12e0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12e80d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12e0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12e80d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12e056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12e80d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12e056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12e80d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12e056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12e80d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12e056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12e80da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12e056390 '__SVBool_t'
|-TypedefDecl 0x12e80da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12e0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12e80dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12e0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12e80db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12e0563f0 '__SVCount_t'
|-TypedefDecl 0x12e80dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12e80dbb0 'char *'
|   `-BuiltinType 0x12e0556b0 'char'
|-TypedefDecl 0x12e80dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12e80dbb0 'char *'
|   `-BuiltinType 0x12e0556b0 'char'
`-FunctionDecl 0x12e826758 <dataset_diviso_filec/func22629_vuln.c:1:1, line:64:1> line:1:12 hci_sock_getsockopt 'int (struct socket *, int, int, char)' static
  |-ParmVarDecl 0x12e80e248 <col:32, col:47> col:47 used sock 'struct socket *'
  |-ParmVarDecl 0x12e80e2c8 <col:53, col:57> col:57 level 'int'
  |-ParmVarDecl 0x12e80e348 <col:64, col:68> col:68 used optname 'int'
  |-ParmVarDecl 0x12e826600 <line:2:11, col:16> col:16 __user 'char'
  `-CompoundStmt 0x12e122ef0 <line:3:1, line:64:1>
    |-DeclStmt 0x12e8269e8 <line:4:2, col:23>
    | |-RecordDecl 0x12e826868 <col:2, col:9> col:9 struct hci_ufilter
    | `-VarDecl 0x12e826968 <col:2, col:21> col:21 referenced invalid uf 'struct hci_ufilter'
    |-DeclStmt 0x12e826c48 <line:5:2, col:28>
    | |-RecordDecl 0x12e826a00 <col:2, col:9> col:9 struct sock
    | `-VarDecl 0x12e826b68 <col:2, col:26> col:15 used sk 'struct sock *' cinit
    |   `-RecoveryExpr 0x12e826c08 <col:20, col:26> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x12e826bd0 <col:20> 'struct socket *' lvalue ParmVar 0x12e80e248 'sock' 'struct socket *'
    |-DeclStmt 0x12e826e20 <line:6:2, col:23>
    | |-VarDecl 0x12e826c78 <col:2, col:6> col:6 used len 'int'
    | |-VarDecl 0x12e826cf8 <col:2, col:11> col:11 used opt 'int'
    | `-VarDecl 0x12e826d78 <col:2, col:22> col:16 used err 'int' cinit
    |   `-IntegerLiteral 0x12e826de0 <col:22> 'int' 0
    |-CallExpr 0x12e827068 <line:8:2, col:27> 'int' contains-errors
    | |-ImplicitCastExpr 0x12e827050 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x12e826f60 <col:2> 'int ()' Function 0x12e826ea8 'BT_DBG' 'int ()'
    | |-ImplicitCastExpr 0x12e8270a0 <col:9> 'char *' <ArrayToPointerDecay>
    | | `-StringLiteral 0x12e826fc0 <col:9> 'char[4]' lvalue "STR"
    | |-ImplicitCastExpr 0x12e8270b8 <col:16> 'struct sock *' contains-errors <LValueToRValue>
    | | `-DeclRefExpr 0x12e826fe0 <col:16> 'struct sock *' contains-errors lvalue Var 0x12e826b68 'sk' 'struct sock *'
    | `-ImplicitCastExpr 0x12e8270d0 <col:20> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x12e827000 <col:20> 'int' lvalue ParmVar 0x12e80e348 'optname' 'int'
    |-IfStmt 0x12e827348 <line:10:2, line:11:11>
    | |-CallExpr 0x12e827270 <line:10:6, col:26> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x12e8271c8 <col:6> 'int ()' Function 0x12e827110 'get_user' 'int ()'
    | | |-DeclRefExpr 0x12e8271e8 <col:15> 'int' lvalue Var 0x12e826c78 'len' 'int'
    | | `-RecoveryExpr 0x12e827250 <col:20> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x12e827338 <line:11:3, col:11>
    |   `-UnaryOperator 0x12e827320 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x12e827308 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x12e8272e8 <col:11> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x12e8274a0 <line:13:2, col:14> 'int' contains-errors
    | |-ImplicitCastExpr 0x12e827488 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x12e827448 <col:2> 'int ()' Function 0x12e827390 'lock_sock' 'int ()'
    | `-ImplicitCastExpr 0x12e8274c8 <col:12> 'struct sock *' contains-errors <LValueToRValue>
    |   `-DeclRefExpr 0x12e827468 <col:12> 'struct sock *' contains-errors lvalue Var 0x12e826b68 'sk' 'struct sock *'
    |-IfStmt 0x12e82d750 <line:15:2, line:18:2>
    | |-BinaryOperator 0x12e82d5b0 <line:15:6, col:29> 'int' contains-errors '!='
    | | |-RecoveryExpr 0x12e82d568 <col:6, col:18> '<dependent type>' contains-errors lvalue
    | | | `-CallExpr 0x12e82d528 <col:6, col:15> 'int' contains-errors
    | | |   |-ImplicitCastExpr 0x12e82d510 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | |   | `-DeclRefExpr 0x12e8275c0 <col:6> 'int ()' Function 0x12e827508 'hci_pi' 'int ()'
    | | |   `-ImplicitCastExpr 0x12e82d550 <col:13> 'struct sock *' contains-errors <LValueToRValue>
    | | |     `-DeclRefExpr 0x12e8275e0 <col:13> 'struct sock *' contains-errors lvalue Var 0x12e826b68 'sk' 'struct sock *'
    | | `-RecoveryExpr 0x12e82d590 <col:29> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x12e82d730 <col:46, line:18:2>
    |   |-BinaryOperator 0x12e82d6a8 <line:16:3, col:10> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x12e82d5d0 <col:3> 'int' lvalue Var 0x12e826d78 'err' 'int'
    |   | `-UnaryOperator 0x12e82d690 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |   `-ImplicitCastExpr 0x12e82d678 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    |   |     `-RecoveryExpr 0x12e82d658 <col:10> '<dependent type>' contains-errors lvalue
    |   `-GotoStmt 0x12e82d718 <line:17:3, col:8> 'done' 0x12e82d6c8
    |-SwitchStmt 0x12e82d7a8 <line:20:2, line:59:2>
    | |-ImplicitCastExpr 0x12e82d790 <line:20:10> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x12e82d770 <col:10> 'int' lvalue ParmVar 0x12e80e348 'optname' 'int'
    | `-CompoundStmt 0x12e122cb8 <col:19, line:59:2>
    |   |-IfStmt 0x12e82dab8 <line:22:3, line:25:10> has_else
    |   | |-BinaryOperator 0x12e82d9d8 <line:22:7, col:31> '<dependent type>' contains-errors '&'
    |   | | |-RecoveryExpr 0x12e82d990 <col:7, col:19> '<dependent type>' contains-errors lvalue
    |   | | | `-CallExpr 0x12e82d950 <col:7, col:16> 'int' contains-errors
    |   | | |   |-ImplicitCastExpr 0x12e82d938 <col:7> 'int (*)()' <FunctionToPointerDecay>
    |   | | |   | `-DeclRefExpr 0x12e82d7e8 <col:7> 'int ()' Function 0x12e827508 'hci_pi' 'int ()'
    |   | | |   `-ImplicitCastExpr 0x12e82d978 <col:14> 'struct sock *' contains-errors <LValueToRValue>
    |   | | |     `-DeclRefExpr 0x12e82d808 <col:14> 'struct sock *' contains-errors lvalue Var 0x12e826b68 'sk' 'struct sock *'
    |   | | `-RecoveryExpr 0x12e82d9b8 <col:31> '<dependent type>' contains-errors lvalue
    |   | |-BinaryOperator 0x12e82da38 <line:23:4, col:10> 'int' '='
    |   | | |-DeclRefExpr 0x12e82d9f8 <col:4> 'int' lvalue Var 0x12e826cf8 'opt' 'int'
    |   | | `-IntegerLiteral 0x12e82da18 <col:10> 'int' 1
    |   | `-BinaryOperator 0x12e82da98 <line:25:4, col:10> 'int' '='
    |   |   |-DeclRefExpr 0x12e82da58 <col:4> 'int' lvalue Var 0x12e826cf8 'opt' 'int'
    |   |   `-IntegerLiteral 0x12e82da78 <col:10> 'int' 0
    |   |-IfStmt 0x12e82dd98 <line:27:3, line:28:11>
    |   | |-CallExpr 0x12e82dc70 <line:27:7, col:27> '<dependent type>' contains-errors
    |   | | |-DeclRefExpr 0x12e82dbc8 <col:7> 'int ()' Function 0x12e82db10 'put_user' 'int ()'
    |   | | |-DeclRefExpr 0x12e82dbe8 <col:16> 'int' lvalue Var 0x12e826cf8 'opt' 'int'
    |   | | `-RecoveryExpr 0x12e82dc50 <col:21> '<dependent type>' contains-errors lvalue
    |   | `-BinaryOperator 0x12e82dd78 <line:28:4, col:11> 'int' contains-errors '='
    |   |   |-DeclRefExpr 0x12e82dca0 <col:4> 'int' lvalue Var 0x12e826d78 'err' 'int'
    |   |   `-UnaryOperator 0x12e82dd60 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |     `-ImplicitCastExpr 0x12e82dd48 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |   |       `-RecoveryExpr 0x12e82dd28 <col:11> '<dependent type>' contains-errors lvalue
    |   |-BreakStmt 0x12e82ddb8 <line:29:3>
    |   |-IfStmt 0x12e82df78 <line:32:3, line:35:10> has_else
    |   | |-RecoveryExpr 0x12e82de98 <line:32:7, col:31> '_Bool' contains-errors
    |   | |-BinaryOperator 0x12e82def8 <line:33:4, col:10> 'int' '='
    |   | | |-DeclRefExpr 0x12e82deb8 <col:4> 'int' lvalue Var 0x12e826cf8 'opt' 'int'
    |   | | `-IntegerLiteral 0x12e82ded8 <col:10> 'int' 1
    |   | `-BinaryOperator 0x12e82df58 <line:35:4, col:10> 'int' '='
    |   |   |-DeclRefExpr 0x12e82df18 <col:4> 'int' lvalue Var 0x12e826cf8 'opt' 'int'
    |   |   `-IntegerLiteral 0x12e82df38 <col:10> 'int' 0
    |   |-BreakStmt 0x12e82e028 <line:39:3>
    |   |-CompoundStmt 0x12e122900 <line:42:3, line:49:3>
    |   | |-DeclStmt 0x12e82e2f0 <line:43:4, col:46>
    |   | | |-RecordDecl 0x12e82e030 <col:4, col:11> col:11 struct hci_filter
    |   | | `-VarDecl 0x12e82e198 <col:4, col:40> col:23 used f 'struct hci_filter *' cinit
    |   | |   `-UnaryOperator 0x12e82e2c0 <col:27, col:40> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | |     `-RecoveryExpr 0x12e82e298 <col:28, col:40> '<dependent type>' contains-errors lvalue
    |   | |       `-CallExpr 0x12e82e258 <col:28, col:37> 'int' contains-errors
    |   | |         |-ImplicitCastExpr 0x12e82e240 <col:28> 'int (*)()' <FunctionToPointerDecay>
    |   | |         | `-DeclRefExpr 0x12e82e200 <col:28> 'int ()' Function 0x12e827508 'hci_pi' 'int ()'
    |   | |         `-ImplicitCastExpr 0x12e82e280 <col:35> 'struct sock *' contains-errors <LValueToRValue>
    |   | |           `-DeclRefExpr 0x12e82e220 <col:35> 'struct sock *' contains-errors lvalue Var 0x12e826b68 'sk' 'struct sock *'
    |   | |-BinaryOperator 0x12e122600 <line:45:4, col:22> '<dependent type>' contains-errors '='
    |   | | |-CXXDependentScopeMemberExpr 0x12e82e350 <col:4, col:7> '<dependent type>' contains-errors lvalue .type_mask
    |   | | | `-RecoveryExpr 0x12e82e328 <col:4> '<dependent type>' contains-errors lvalue
    |   | | |   `-DeclRefExpr 0x12e82e308 <col:4> 'struct hci_ufilter' lvalue Var 0x12e826968 'uf' 'struct hci_ufilter'
    |   | | `-RecoveryExpr 0x12e82e3d0 <col:19, col:22> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x12e82e398 <col:19> 'struct hci_filter *' contains-errors lvalue Var 0x12e82e198 'f' 'struct hci_filter *'
    |   | `-BinaryOperator 0x12e122710 <line:46:4, col:22> '<dependent type>' contains-errors '='
    |   |   |-CXXDependentScopeMemberExpr 0x12e122668 <col:4, col:7> '<dependent type>' contains-errors lvalue .opcode
    |   |   | `-RecoveryExpr 0x12e122640 <col:4> '<dependent type>' contains-errors lvalue
    |   |   |   `-DeclRefExpr 0x12e122620 <col:4> 'struct hci_ufilter' lvalue Var 0x12e826968 'uf' 'struct hci_ufilter'
    |   |   `-RecoveryExpr 0x12e1226e8 <col:19, col:22> '<dependent type>' contains-errors lvalue
    |   |     `-DeclRefExpr 0x12e1226b0 <col:19> 'struct hci_filter *' contains-errors lvalue Var 0x12e82e198 'f' 'struct hci_filter *'
    |   |-BreakStmt 0x12e122c60 <line:54:3>
    |   |-DefaultStmt 0x12e122c90 <line:56:2, col:9>
    |   | `-NullStmt 0x12e122c88 <col:9>
    |   `-BreakStmt 0x12e122cb0 <line:58:3>
    |-LabelStmt 0x12e122e88 <line:61:1, line:62:17> 'done'
    | `-CallExpr 0x12e122e48 <col:2, col:17> 'int' contains-errors
    |   |-ImplicitCastExpr 0x12e122e30 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x12e122df0 <col:2> 'int ()' Function 0x12e122d38 'release_sock' 'int ()'
    |   `-ImplicitCastExpr 0x12e122e70 <col:15> 'struct sock *' contains-errors <LValueToRValue>
    |     `-DeclRefExpr 0x12e122e10 <col:15> 'struct sock *' contains-errors lvalue Var 0x12e826b68 'sk' 'struct sock *'
    `-ReturnStmt 0x12e122ee0 <line:63:2, col:9>
      `-ImplicitCastExpr 0x12e122ec8 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x12e122ea8 <col:9> 'int' lvalue Var 0x12e826d78 'err' 'int'
