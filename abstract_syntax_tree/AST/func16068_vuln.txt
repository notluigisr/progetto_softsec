TranslationUnitDecl 0x12c055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12c0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12c055bd0 '__int128'
|-TypedefDecl 0x12c056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12c055bf0 'unsigned __int128'
|-TypedefDecl 0x12c80be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12c80bc00 'struct __NSConstantString_tag'
|   `-Record 0x12c056580 '__NSConstantString_tag'
|-TypedefDecl 0x12c80be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12c055d90 '__SVInt8_t'
|-TypedefDecl 0x12c80bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12c055db0 '__SVInt16_t'
|-TypedefDecl 0x12c80bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12c055dd0 '__SVInt32_t'
|-TypedefDecl 0x12c80bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12c055df0 '__SVInt64_t'
|-TypedefDecl 0x12c80c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12c055e10 '__SVUint8_t'
|-TypedefDecl 0x12c80c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12c055e30 '__SVUint16_t'
|-TypedefDecl 0x12c80c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12c055e50 '__SVUint32_t'
|-TypedefDecl 0x12c80c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12c055e70 '__SVUint64_t'
|-TypedefDecl 0x12c80c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12c055e90 '__SVFloat16_t'
|-TypedefDecl 0x12c80c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12c055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12c80c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12c055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12c80c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12c055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12c80c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12c055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12c80c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12c055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12c80c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12c055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12c80c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12c055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12c80c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12c055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12c80c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12c055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12c80c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12c055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12c80c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12c055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12c80c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12c056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12c80c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12c056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12c80c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12c056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12c80c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12c056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12c80c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12c056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12c80c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12c0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12c80c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12c0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12c80c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12c0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12c80c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12c056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12c80ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12c056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12c80cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12c056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12c80cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12c056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12c80cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12c056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12c80d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12c0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12c80d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12c0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12c80d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12c0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12c80d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12c056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12c80d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12c056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12c80d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12c056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12c80d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12c056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12c80d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12c056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12c80d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12c0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12c80d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12c0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12c80d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12c0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12c80d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12c056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12c80d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12c056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12c80d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12c056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12c80d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12c056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12c80da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12c056390 '__SVBool_t'
|-TypedefDecl 0x12c80da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12c0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12c80dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12c0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12c80db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12c0563f0 '__SVCount_t'
|-TypedefDecl 0x12c80dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12c80dbb0 'char *'
|   `-BuiltinType 0x12c0556b0 'char'
|-TypedefDecl 0x12c80dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12c80dbb0 'char *'
|   `-BuiltinType 0x12c0556b0 'char'
`-FunctionDecl 0x12c8278a8 <dataset_diviso_filec/func16068_vuln.c:1:1, line:54:1> line:1:1 invalid get_matching_model_microcode 'int (int, unsigned long, void *, int, struct mc_saved_data *, unsigned long *, struct ucode_cpu_info *)'
  |-ParmVarDecl 0x12c80dcd8 <col:30, col:34> col:34 cpu 'int'
  |-ParmVarDecl 0x12c80dd58 <col:39, col:53> col:53 used start 'unsigned long'
  |-ParmVarDecl 0x12c80ddd8 <line:2:9, col:15> col:15 used data 'void *'
  |-ParmVarDecl 0x12c80de70 <col:21, col:28> col:28 invalid size 'int'
  |-ParmVarDecl 0x12c827488 <line:3:9, col:31> col:31 used mc_saved_data 'struct mc_saved_data *'
  |-ParmVarDecl 0x12c827538 <line:4:9, col:24> col:24 used mc_saved_in_initrd 'unsigned long *'
  |-ParmVarDecl 0x12c827708 <line:5:9, col:32> col:32 used uci 'struct ucode_cpu_info *'
  `-CompoundStmt 0x12c1231e8 <line:6:1, line:54:1>
    |-DeclStmt 0x12c827a60 <line:8:2, col:30>
    | `-VarDecl 0x12c8279d8 <col:2, col:26> col:15 used leftover 'unsigned int' cinit
    |   `-RecoveryExpr 0x12c827a40 <col:26> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x12c827c30 <line:9:2, col:35>
    | |-EnumDecl 0x12c827a78 <col:2, col:7> col:7 ucode_state
    | `-VarDecl 0x12c827b98 <col:2, col:19> col:19 referenced invalid state 'enum ucode_state'
    |-DeclStmt 0x12c827cc8 <line:10:2, col:22>
    | `-VarDecl 0x12c827c60 <col:2, col:15> col:15 used mc_size 'unsigned int'
    |-DeclStmt 0x12c827ec8 <line:11:2, col:42>
    | |-RecordDecl 0x12c827ce0 <col:2, col:9> col:9 struct microcode_header_intel
    | `-VarDecl 0x12c827e48 <col:2, col:33> col:33 used mc_header 'struct microcode_header_intel *'
    |-DeclStmt 0x12c8280e8 <line:12:2, col:55>
    | |-RecordDecl 0x12c827ee0 <col:2, col:9> col:9 struct microcode_intel
    | `-VarDecl 0x12c828068 <col:2, col:26> col:26 invalid mc_saved_tmp 'struct microcode_intel *'
    |-DeclStmt 0x12c8281e0 <line:13:2, col:61>
    | `-VarDecl 0x12c828118 <col:2, col:47> col:15 used mc_saved_count 'unsigned int' cinit
    |   `-RecoveryExpr 0x12c8281b8 <col:32, col:47> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x12c828180 <col:32> 'struct mc_saved_data *' lvalue ParmVar 0x12c827488 'mc_saved_data' 'struct mc_saved_data *'
    |-DeclStmt 0x12c828278 <line:14:2, col:7>
    | `-VarDecl 0x12c828210 <col:2, col:6> col:6 used i 'int'
    |-WhileStmt 0x12c82e8b0 <line:16:2, line:36:2>
    | |-ImplicitCastExpr 0x12c8282b0 <line:16:9> 'unsigned int' contains-errors <LValueToRValue>
    | | `-DeclRefExpr 0x12c828290 <col:9> 'unsigned int' contains-errors lvalue Var 0x12c8279d8 'leftover' 'unsigned int'
    | `-CompoundStmt 0x12c82e878 <col:19, line:36:2>
    |   |-BinaryOperator 0x12c82ddf0 <line:19:3, col:36> 'unsigned int' '='
    |   | |-DeclRefExpr 0x12c828388 <col:3> 'unsigned int' lvalue Var 0x12c827c60 'mc_size' 'unsigned int'
    |   | `-ImplicitCastExpr 0x12c82ddd8 <col:13, col:36> 'unsigned int' <IntegralCast>
    |   |   `-CallExpr 0x12c82dd98 <col:13, col:36> 'int'
    |   |     |-ImplicitCastExpr 0x12c82dd80 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |   |     | `-DeclRefExpr 0x12c82dd10 <col:13> 'int ()' Function 0x12c82dc58 'get_totalsize' 'int ()'
    |   |     `-ImplicitCastExpr 0x12c82ddc0 <col:27> 'struct microcode_header_intel *' <LValueToRValue>
    |   |       `-DeclRefExpr 0x12c82dd30 <col:27> 'struct microcode_header_intel *' lvalue Var 0x12c827e48 'mc_header' 'struct microcode_header_intel *'
    |   |-IfStmt 0x12c82e2b0 <line:20:3, line:22:4>
    |   | |-BinaryOperator 0x12c82e288 <line:20:7, line:21:43> 'int' contains-errors '||'
    |   | | |-BinaryOperator 0x12c82e1f8 <line:20:7, col:29> 'int' contains-errors '||'
    |   | | | |-UnaryOperator 0x12c82e190 <col:7, col:8> 'int' prefix '!' cannot overflow
    |   | | | | `-ImplicitCastExpr 0x12c82e178 <col:8> 'unsigned int' <LValueToRValue>
    |   | | | |   `-DeclRefExpr 0x12c82de10 <col:8> 'unsigned int' lvalue Var 0x12c827c60 'mc_size' 'unsigned int'
    |   | | | `-BinaryOperator 0x12c82e1d8 <col:19, col:29> 'int' contains-errors '>'
    |   | | |   |-ImplicitCastExpr 0x12c82e1a8 <col:19> 'unsigned int' <LValueToRValue>
    |   | | |   | `-DeclRefExpr 0x12c82de60 <col:19> 'unsigned int' lvalue Var 0x12c827c60 'mc_size' 'unsigned int'
    |   | | |   `-ImplicitCastExpr 0x12c82e1c0 <col:29> 'unsigned int' contains-errors <LValueToRValue>
    |   | | |     `-DeclRefExpr 0x12c82de80 <col:29> 'unsigned int' contains-errors lvalue Var 0x12c8279d8 'leftover' 'unsigned int'
    |   | | `-BinaryOperator 0x12c82e268 <line:21:4, col:43> 'int' contains-errors '<'
    |   | |   |-CallExpr 0x12c82e238 <col:4, col:39> '<dependent type>' contains-errors
    |   | |   | |-DeclRefExpr 0x12c82dff0 <col:4> 'int ()' Function 0x12c82df38 'microcode_sanity_check' 'int ()'
    |   | |   | |-RecoveryExpr 0x12c82e218 <col:27> '<dependent type>' contains-errors lvalue
    |   | |   | `-IntegerLiteral 0x12c82e028 <col:38> 'int' 0
    |   | |   `-IntegerLiteral 0x12c82e078 <col:43> 'int' 0
    |   | `-BreakStmt 0x12c82e2a8 <line:22:4>
    |   |-CompoundAssignOperator 0x12c82e328 <line:24:3, col:15> 'unsigned int' contains-errors '-=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
    |   | |-DeclRefExpr 0x12c82e2d0 <col:3> 'unsigned int' contains-errors lvalue Var 0x12c8279d8 'leftover' 'unsigned int'
    |   | `-ImplicitCastExpr 0x12c82e310 <col:15> 'unsigned int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x12c82e2f0 <col:15> 'unsigned int' lvalue Var 0x12c827c60 'mc_size' 'unsigned int'
    |   |-IfStmt 0x12c82e608 <line:27:3, line:31:3>
    |   | |-BinaryOperator 0x12c82e5a8 <line:27:7, line:28:5> 'int' contains-errors '!='
    |   | | |-CallExpr 0x12c82e520 <line:27:7, col:59> '<dependent type>' contains-errors
    |   | | | |-DeclRefExpr 0x12c82e438 <col:7> 'int ()' Function 0x12c82e380 'matching_model_microcode' 'int ()'
    |   | | | |-DeclRefExpr 0x12c82e458 <col:32> 'struct microcode_header_intel *' lvalue Var 0x12c827e48 'mc_header' 'struct microcode_header_intel *'
    |   | | | `-CXXDependentScopeMemberExpr 0x12c82e4d8 <col:43, col:56> '<dependent type>' contains-errors lvalue .sig
    |   | | |   `-RecoveryExpr 0x12c82e4b0 <col:43, col:48> '<dependent type>' contains-errors lvalue
    |   | | |     `-DeclRefExpr 0x12c82e478 <col:43> 'struct ucode_cpu_info *' lvalue ParmVar 0x12c827708 'uci' 'struct ucode_cpu_info *'
    |   | | `-RecoveryExpr 0x12c82e588 <line:28:5> '<dependent type>' contains-errors lvalue
    |   | `-CompoundStmt 0x12c82e5f0 <col:15, line:31:3>
    |   |   `-ContinueStmt 0x12c82e5e8 <line:30:4>
    |   `-CallExpr 0x12c82e820 <line:33:3, col:52> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x12c82e708 <col:3> 'int ()' Function 0x12c82e650 '_save_mc' 'int ()'
    |     |-RecoveryExpr 0x12c82e728 <col:12> '<dependent type>' contains-errors lvalue
    |     |-RecoveryExpr 0x12c82e800 <col:26> '<dependent type>' contains-errors lvalue
    |     `-UnaryOperator 0x12c82e7b0 <col:37, col:38> 'unsigned int *' contains-errors prefix '&' cannot overflow
    |       `-DeclRefExpr 0x12c82e760 <col:38> 'unsigned int' contains-errors lvalue Var 0x12c828118 'mc_saved_count' 'unsigned int'
    |-IfStmt 0x12c82ea50 <line:38:2, line:41:2>
    | |-ImplicitCastExpr 0x12c82e8f0 <line:38:6> 'unsigned int' contains-errors <LValueToRValue>
    | | `-DeclRefExpr 0x12c82e8d0 <col:6> 'unsigned int' contains-errors lvalue Var 0x12c8279d8 'leftover' 'unsigned int'
    | `-CompoundStmt 0x12c82ea30 <col:16, line:41:2>
    |   |-BinaryOperator 0x12c82e9a8 <line:39:3, col:11> '<dependent type>' contains-errors '='
    |   | |-RecoveryExpr 0x12c82e928 <col:3> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x12c82e908 <col:3> 'enum ucode_state' lvalue Var 0x12c827b98 'state' 'enum ucode_state'
    |   | `-RecoveryExpr 0x12c82e988 <col:11> '<dependent type>' contains-errors lvalue
    |   `-GotoStmt 0x12c82ea18 <line:40:3, col:8> 'out' 0x12c82e9c8
    |-IfStmt 0x12c122c00 <line:43:2, line:46:2>
    | |-BinaryOperator 0x12c82eae0 <line:43:6, col:24> 'int' contains-errors '=='
    | | |-ImplicitCastExpr 0x12c82eab0 <col:6> 'unsigned int' contains-errors <LValueToRValue>
    | | | `-DeclRefExpr 0x12c82ea70 <col:6> 'unsigned int' contains-errors lvalue Var 0x12c828118 'mc_saved_count' 'unsigned int'
    | | `-ImplicitCastExpr 0x12c82eac8 <col:24> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x12c82ea90 <col:24> 'int' 0
    | `-CompoundStmt 0x12c82ebd8 <col:27, line:46:2>
    |   |-BinaryOperator 0x12c82eba0 <line:44:3, col:11> '<dependent type>' contains-errors '='
    |   | |-RecoveryExpr 0x12c82eb20 <col:3> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x12c82eb00 <col:3> 'enum ucode_state' lvalue Var 0x12c827b98 'state' 'enum ucode_state'
    |   | `-RecoveryExpr 0x12c82eb80 <col:11> '<dependent type>' contains-errors lvalue
    |   `-GotoStmt 0x12c82ebc0 <line:45:3, col:8> 'out' 0x12c82e9c8
    |-ForStmt 0x12c1230c0 <line:48:2, line:49:60>
    | |-BinaryOperator 0x12c122c60 <line:48:7, col:11> 'int' '='
    | | |-DeclRefExpr 0x12c122c20 <col:7> 'int' lvalue Var 0x12c828210 'i' 'int'
    | | `-IntegerLiteral 0x12c122c40 <col:11> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x12c122d08 <col:14, col:18> 'int' contains-errors '<'
    | | |-ImplicitCastExpr 0x12c122cf0 <col:14> 'unsigned int' <IntegralCast>
    | | | `-ImplicitCastExpr 0x12c122cc0 <col:14> 'int' <LValueToRValue>
    | | |   `-DeclRefExpr 0x12c122c80 <col:14> 'int' lvalue Var 0x12c828210 'i' 'int'
    | | `-ImplicitCastExpr 0x12c122cd8 <col:18> 'unsigned int' contains-errors <LValueToRValue>
    | |   `-DeclRefExpr 0x12c122ca0 <col:18> 'unsigned int' contains-errors lvalue Var 0x12c828118 'mc_saved_count' 'unsigned int'
    | |-UnaryOperator 0x12c122d48 <col:34, col:35> 'int' postfix '++'
    | | `-DeclRefExpr 0x12c122d28 <col:34> 'int' lvalue Var 0x12c828210 'i' 'int'
    | `-BinaryOperator 0x12c1230a0 <line:49:3, col:60> 'unsigned long' contains-errors '='
    |   |-ArraySubscriptExpr 0x12c122fb8 <col:3, col:23> 'unsigned long' lvalue
    |   | |-ImplicitCastExpr 0x12c122f88 <col:3> 'unsigned long *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x12c122d60 <col:3> 'unsigned long *' lvalue ParmVar 0x12c827538 'mc_saved_in_initrd' 'unsigned long *'
    |   | `-ImplicitCastExpr 0x12c122fa0 <col:22> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x12c122d80 <col:22> 'int' lvalue Var 0x12c828210 'i' 'int'
    |   `-BinaryOperator 0x12c123080 <col:27, col:60> 'unsigned long' contains-errors '-'
    |     |-CStyleCastExpr 0x12c123040 <col:27, col:56> 'unsigned long' contains-errors <Dependent>
    |     | `-ArraySubscriptExpr 0x12c123020 <col:42, col:56> '<dependent type>' contains-errors lvalue
    |     |   |-ImplicitCastExpr 0x12c122ff0 <col:42> '<dependent type>' contains-errors <LValueToRValue>
    |     |   | `-RecoveryExpr 0x12c122df0 <col:42> '<dependent type>' contains-errors lvalue
    |     |   `-ImplicitCastExpr 0x12c123008 <col:55> 'int' <LValueToRValue>
    |     |     `-DeclRefExpr 0x12c122e10 <col:55> 'int' lvalue Var 0x12c828210 'i' 'int'
    |     `-ImplicitCastExpr 0x12c123068 <col:60> 'unsigned long' <LValueToRValue>
    |       `-DeclRefExpr 0x12c122f10 <col:60> 'unsigned long' lvalue ParmVar 0x12c80dd58 'start' 'unsigned long'
    |-BinaryOperator 0x12c123178 <line:51:2, col:34> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x12c123130 <col:2, col:17> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x12c1230f8 <col:2> 'struct mc_saved_data *' lvalue ParmVar 0x12c827488 'mc_saved_data' 'struct mc_saved_data *'
    | `-DeclRefExpr 0x12c123158 <col:34> 'unsigned int' contains-errors lvalue Var 0x12c828118 'mc_saved_count' 'unsigned int'
    `-LabelStmt 0x12c1231c8 <line:52:1, line:53:9> 'out'
      `-ReturnStmt 0x12c1231b8 <col:2, col:9>
        `-RecoveryExpr 0x12c123198 <col:9> '<dependent type>' contains-errors lvalue
