TranslationUnitDecl 0x14a027808 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14a0286b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14a027dd0 '__int128'
|-TypedefDecl 0x14a028728 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14a027df0 'unsigned __int128'
|-TypedefDecl 0x14a04d830 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14a04d600 'struct __NSConstantString_tag'
|   `-Record 0x14a028780 '__NSConstantString_tag'
|-TypedefDecl 0x14a04d898 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14a027f90 '__SVInt8_t'
|-TypedefDecl 0x14a04d900 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14a027fb0 '__SVInt16_t'
|-TypedefDecl 0x14a04d968 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14a027fd0 '__SVInt32_t'
|-TypedefDecl 0x14a04d9d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14a027ff0 '__SVInt64_t'
|-TypedefDecl 0x14a04da38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14a028010 '__SVUint8_t'
|-TypedefDecl 0x14a04daa0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14a028030 '__SVUint16_t'
|-TypedefDecl 0x14a04db08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14a028050 '__SVUint32_t'
|-TypedefDecl 0x14a04db70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14a028070 '__SVUint64_t'
|-TypedefDecl 0x14a04dbd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14a028090 '__SVFloat16_t'
|-TypedefDecl 0x14a04dc40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14a0280b0 '__SVFloat32_t'
|-TypedefDecl 0x14a04dca8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14a0280d0 '__SVFloat64_t'
|-TypedefDecl 0x14a04dd10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14a0280f0 '__SVBfloat16_t'
|-TypedefDecl 0x14a04dd78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14a028110 '__clang_svint8x2_t'
|-TypedefDecl 0x14a04dde0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14a028130 '__clang_svint16x2_t'
|-TypedefDecl 0x14a04de48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14a028150 '__clang_svint32x2_t'
|-TypedefDecl 0x14a04deb0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14a028170 '__clang_svint64x2_t'
|-TypedefDecl 0x14a04df18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14a028190 '__clang_svuint8x2_t'
|-TypedefDecl 0x14a04df80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14a0281b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14a04dfe8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14a0281d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14a04e050 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14a0281f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14a04e0b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14a028210 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14a04e120 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14a028230 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14a04e188 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14a028250 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14a04e1f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14a028270 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14a04e258 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14a028290 '__clang_svint8x3_t'
|-TypedefDecl 0x14a04e2c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14a0282b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14a04e328 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14a0282d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14a04e390 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14a0282f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14a04e3f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14a028310 '__clang_svuint8x3_t'
|-TypedefDecl 0x14a04e460 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14a028330 '__clang_svuint16x3_t'
|-TypedefDecl 0x14a04e4c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14a028350 '__clang_svuint32x3_t'
|-TypedefDecl 0x14a04e530 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14a028370 '__clang_svuint64x3_t'
|-TypedefDecl 0x14a04e598 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14a028390 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14a04ee00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14a0283b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14a04ee68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14a0283d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14a04eed0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14a0283f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14a04ef38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14a028410 '__clang_svint8x4_t'
|-TypedefDecl 0x14a04efa0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14a028430 '__clang_svint16x4_t'
|-TypedefDecl 0x14a04f008 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14a028450 '__clang_svint32x4_t'
|-TypedefDecl 0x14a04f070 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14a028470 '__clang_svint64x4_t'
|-TypedefDecl 0x14a04f0d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14a028490 '__clang_svuint8x4_t'
|-TypedefDecl 0x14a04f140 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14a0284b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14a04f1a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14a0284d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14a04f210 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14a0284f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14a04f278 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14a028510 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14a04f2e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14a028530 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14a04f348 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14a028550 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14a04f3b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14a028570 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14a04f418 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14a028590 '__SVBool_t'
|-TypedefDecl 0x14a04f480 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14a0285b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14a04f4e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14a0285d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14a04f550 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14a0285f0 '__SVCount_t'
|-TypedefDecl 0x14a04f5f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14a04f5b0 'char *'
|   `-BuiltinType 0x14a0278b0 'char'
|-TypedefDecl 0x14a04f668 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14a04f5b0 'char *'
|   `-BuiltinType 0x14a0278b0 'char'
`-FunctionDecl 0x14a065940 <dataset_diviso_filec/func11616_vuln.c:1:1, line:27:1> line:1:13 expire_timers 'void (struct timer_base *, struct hlist_head *)' static
  |-ParmVarDecl 0x14a04fc48 <col:27, col:46> col:46 used base 'struct timer_base *'
  |-ParmVarDecl 0x14a065828 <col:52, col:71> col:71 used head 'struct hlist_head *'
  `-CompoundStmt 0x14b809700 <line:2:1, line:27:1>
    `-WhileStmt 0x14b8096e0 <line:3:2, line:26:2>
      |-UnaryOperator 0x14a065c38 <line:3:9, col:26> 'int' prefix '!' cannot overflow
      | `-CallExpr 0x14a065bf8 <col:10, col:26> 'int'
      |   |-ImplicitCastExpr 0x14a065be0 <col:10> 'int (*)()' <FunctionToPointerDecay>
      |   | `-DeclRefExpr 0x14a065b70 <col:10> 'int ()' Function 0x14a065ab8 'hlist_empty' 'int ()'
      |   `-ImplicitCastExpr 0x14a065c20 <col:22> 'struct hlist_head *' <LValueToRValue>
      |     `-DeclRefExpr 0x14a065b90 <col:22> 'struct hlist_head *' lvalue ParmVar 0x14a065828 'head' 'struct hlist_head *'
      `-CompoundStmt 0x14b809688 <col:29, line:26:2>
        |-DeclStmt 0x14a065e38 <line:4:3, col:27>
        | |-RecordDecl 0x14a065c50 <col:3, col:10> col:10 struct timer_list
        | `-VarDecl 0x14a065db8 <col:3, col:22> col:22 used timer 'struct timer_list *'
        |-DeclStmt 0x14a066040 <line:5:3, col:28>
        | `-VarDecl 0x14a065fd8 <col:3, col:27> col:10 used fn 'void (*)(unsigned long)'
        |-DeclStmt 0x14a0660d8 <line:6:3, col:21>
        | `-VarDecl 0x14a066070 <col:3, col:17> col:17 used data 'unsigned long'
        |-CallExpr 0x14a0663c0 <line:9:3, col:34> 'int'
        | |-ImplicitCastExpr 0x14a0663a8 <col:3> 'int (*)()' <FunctionToPointerDecay>
        | | `-DeclRefExpr 0x14a066368 <col:3> 'int ()' Function 0x14a0662b0 'timer_stats_account_timer' 'int ()'
        | `-ImplicitCastExpr 0x14a0663e8 <col:29> 'struct timer_list *' <LValueToRValue>
        |   `-DeclRefExpr 0x14a066388 <col:29> 'struct timer_list *' lvalue Var 0x14a065db8 'timer' 'struct timer_list *'
        |-BinaryOperator 0x14a066480 <line:11:3, col:25> '<dependent type>' contains-errors '='
        | |-RecoveryExpr 0x14a066438 <col:3, col:9> '<dependent type>' contains-errors lvalue
        | | `-DeclRefExpr 0x14a066400 <col:3> 'struct timer_base *' lvalue ParmVar 0x14a04fc48 'base' 'struct timer_base *'
        | `-DeclRefExpr 0x14a066460 <col:25> 'struct timer_list *' lvalue Var 0x14a065db8 'timer' 'struct timer_list *'
        |-CallExpr 0x14a066628 <line:12:3, col:27> '<dependent type>' contains-errors
        | |-DeclRefExpr 0x14a066580 <col:3> 'int ()' Function 0x14a0664c8 'detach_timer' 'int ()'
        | |-DeclRefExpr 0x14a0665a0 <col:16> 'struct timer_list *' lvalue Var 0x14a065db8 'timer' 'struct timer_list *'
        | `-RecoveryExpr 0x14a066608 <col:23> '<dependent type>' contains-errors lvalue
        |-BinaryOperator 0x14a0666d8 <line:14:3, col:15> 'void (*)(unsigned long)' contains-errors '='
        | |-DeclRefExpr 0x14a066658 <col:3> 'void (*)(unsigned long)' lvalue Var 0x14a065fd8 'fn' 'void (*)(unsigned long)'
        | `-RecoveryExpr 0x14a0666b0 <col:8, col:15> '<dependent type>' contains-errors lvalue
        |   `-DeclRefExpr 0x14a066678 <col:8> 'struct timer_list *' lvalue Var 0x14a065db8 'timer' 'struct timer_list *'
        |-BinaryOperator 0x14a066778 <line:15:3, col:17> 'unsigned long' contains-errors '='
        | |-DeclRefExpr 0x14a0666f8 <col:3> 'unsigned long' lvalue Var 0x14a066070 'data' 'unsigned long'
        | `-RecoveryExpr 0x14a066750 <col:10, col:17> '<dependent type>' contains-errors lvalue
        |   `-DeclRefExpr 0x14a066718 <col:10> 'struct timer_list *' lvalue Var 0x14a065db8 'timer' 'struct timer_list *'
        `-IfStmt 0x14b809658 <line:17:3, line:25:3> has_else
          |-BinaryOperator 0x14b808c58 <line:17:7, col:22> '<dependent type>' contains-errors '&'
          | |-RecoveryExpr 0x14a0667d0 <col:7, col:14> '<dependent type>' contains-errors lvalue
          | | `-DeclRefExpr 0x14a066798 <col:7> 'struct timer_list *' lvalue Var 0x14a065db8 'timer' 'struct timer_list *'
          | `-RecoveryExpr 0x14b808c38 <col:22> '<dependent type>' contains-errors lvalue
          |-CompoundStmt 0x14b8091b0 <col:37, line:21:3>
          | |-CallExpr 0x14b808df0 <line:18:4, col:27> '<dependent type>' contains-errors
          | | |-DeclRefExpr 0x14b808d58 <col:4> 'int ()' Function 0x14b808ca0 'spin_unlock' 'int ()'
          | | `-UnaryOperator 0x14b808dd8 <col:16, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow
          | |   `-RecoveryExpr 0x14b808db0 <col:17, col:23> '<dependent type>' contains-errors lvalue
          | |     `-DeclRefExpr 0x14b808d78 <col:17> 'struct timer_base *' lvalue ParmVar 0x14a04fc48 'base' 'struct timer_base *'
          | |-CallExpr 0x14b808f90 <line:19:4, col:33> 'int'
          | | |-ImplicitCastExpr 0x14b808f78 <col:4> 'int (*)()' <FunctionToPointerDecay>
          | | | `-DeclRefExpr 0x14b808ef8 <col:4> 'int ()' Function 0x14b808e40 'call_timer_fn' 'int ()'
          | | |-ImplicitCastExpr 0x14b808fc8 <col:18> 'struct timer_list *' <LValueToRValue>
          | | | `-DeclRefExpr 0x14b808f18 <col:18> 'struct timer_list *' lvalue Var 0x14a065db8 'timer' 'struct timer_list *'
          | | |-ImplicitCastExpr 0x14b808fe0 <col:25> 'void (*)(unsigned long)' <LValueToRValue>
          | | | `-DeclRefExpr 0x14b808f38 <col:25> 'void (*)(unsigned long)' lvalue Var 0x14a065fd8 'fn' 'void (*)(unsigned long)'
          | | `-ImplicitCastExpr 0x14b808ff8 <col:29> 'unsigned long' <LValueToRValue>
          | |   `-DeclRefExpr 0x14b808f58 <col:29> 'unsigned long' lvalue Var 0x14a066070 'data' 'unsigned long'
          | `-CallExpr 0x14b809188 <line:20:4, col:25> '<dependent type>' contains-errors
          |   |-DeclRefExpr 0x14b8090f0 <col:4> 'int ()' Function 0x14b809038 'spin_lock' 'int ()'
          |   `-UnaryOperator 0x14b809170 <col:14, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow
          |     `-RecoveryExpr 0x14b809148 <col:15, col:21> '<dependent type>' contains-errors lvalue
          |       `-DeclRefExpr 0x14b809110 <col:15> 'struct timer_base *' lvalue ParmVar 0x14a04fc48 'base' 'struct timer_base *'
          `-CompoundStmt 0x14b809630 <line:21:10, line:25:3>
            |-CallExpr 0x14b809350 <line:22:4, col:31> '<dependent type>' contains-errors
            | |-DeclRefExpr 0x14b8092b8 <col:4> 'int ()' Function 0x14b809200 'spin_unlock_irq' 'int ()'
            | `-UnaryOperator 0x14b809338 <col:20, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow
            |   `-RecoveryExpr 0x14b809310 <col:21, col:27> '<dependent type>' contains-errors lvalue
            |     `-DeclRefExpr 0x14b8092d8 <col:21> 'struct timer_base *' lvalue ParmVar 0x14a04fc48 'base' 'struct timer_base *'
            |-CallExpr 0x14b809410 <line:23:4, col:33> 'int'
            | |-ImplicitCastExpr 0x14b8093f8 <col:4> 'int (*)()' <FunctionToPointerDecay>
            | | `-DeclRefExpr 0x14b809378 <col:4> 'int ()' Function 0x14b808e40 'call_timer_fn' 'int ()'
            | |-ImplicitCastExpr 0x14b809448 <col:18> 'struct timer_list *' <LValueToRValue>
            | | `-DeclRefExpr 0x14b809398 <col:18> 'struct timer_list *' lvalue Var 0x14a065db8 'timer' 'struct timer_list *'
            | |-ImplicitCastExpr 0x14b809460 <col:25> 'void (*)(unsigned long)' <LValueToRValue>
            | | `-DeclRefExpr 0x14b8093b8 <col:25> 'void (*)(unsigned long)' lvalue Var 0x14a065fd8 'fn' 'void (*)(unsigned long)'
            | `-ImplicitCastExpr 0x14b809478 <col:29> 'unsigned long' <LValueToRValue>
            |   `-DeclRefExpr 0x14b8093d8 <col:29> 'unsigned long' lvalue Var 0x14a066070 'data' 'unsigned long'
            `-CallExpr 0x14b809608 <line:24:4, col:29> '<dependent type>' contains-errors
              |-DeclRefExpr 0x14b809570 <col:4> 'int ()' Function 0x14b8094b8 'spin_lock_irq' 'int ()'
              `-UnaryOperator 0x14b8095f0 <col:18, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow
                `-RecoveryExpr 0x14b8095c8 <col:19, col:25> '<dependent type>' contains-errors lvalue
                  `-DeclRefExpr 0x14b809590 <col:19> 'struct timer_base *' lvalue ParmVar 0x14a04fc48 'base' 'struct timer_base *'
