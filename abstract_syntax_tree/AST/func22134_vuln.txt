TranslationUnitDecl 0x15c821c08 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x15c822ab8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x15c8221d0 '__int128'
|-TypedefDecl 0x15c822b28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x15c8221f0 'unsigned __int128'
|-TypedefDecl 0x15d00be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15d00bc00 'struct __NSConstantString_tag'
|   `-Record 0x15c822b80 '__NSConstantString_tag'
|-TypedefDecl 0x15d00be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x15c822390 '__SVInt8_t'
|-TypedefDecl 0x15d00bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x15c8223b0 '__SVInt16_t'
|-TypedefDecl 0x15d00bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x15c8223d0 '__SVInt32_t'
|-TypedefDecl 0x15d00bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x15c8223f0 '__SVInt64_t'
|-TypedefDecl 0x15d00c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x15c822410 '__SVUint8_t'
|-TypedefDecl 0x15d00c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x15c822430 '__SVUint16_t'
|-TypedefDecl 0x15d00c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x15c822450 '__SVUint32_t'
|-TypedefDecl 0x15d00c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x15c822470 '__SVUint64_t'
|-TypedefDecl 0x15d00c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x15c822490 '__SVFloat16_t'
|-TypedefDecl 0x15d00c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x15c8224b0 '__SVFloat32_t'
|-TypedefDecl 0x15d00c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x15c8224d0 '__SVFloat64_t'
|-TypedefDecl 0x15d00c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x15c8224f0 '__SVBfloat16_t'
|-TypedefDecl 0x15d00c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x15c822510 '__clang_svint8x2_t'
|-TypedefDecl 0x15d00c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x15c822530 '__clang_svint16x2_t'
|-TypedefDecl 0x15d00c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x15c822550 '__clang_svint32x2_t'
|-TypedefDecl 0x15d00c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x15c822570 '__clang_svint64x2_t'
|-TypedefDecl 0x15d00c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x15c822590 '__clang_svuint8x2_t'
|-TypedefDecl 0x15d00c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x15c8225b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15d00c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x15c8225d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15d00c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x15c8225f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15d00c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x15c822610 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15d00c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x15c822630 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15d00c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x15c822650 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15d00c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x15c822670 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15d00c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x15c822690 '__clang_svint8x3_t'
|-TypedefDecl 0x15d00c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x15c8226b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15d00c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x15c8226d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15d00c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x15c8226f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15d00c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x15c822710 '__clang_svuint8x3_t'
|-TypedefDecl 0x15d00ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x15c822730 '__clang_svuint16x3_t'
|-TypedefDecl 0x15d00cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x15c822750 '__clang_svuint32x3_t'
|-TypedefDecl 0x15d00cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x15c822770 '__clang_svuint64x3_t'
|-TypedefDecl 0x15d00cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x15c822790 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15d00d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x15c8227b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15d00d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x15c8227d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15d00d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x15c8227f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15d00d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x15c822810 '__clang_svint8x4_t'
|-TypedefDecl 0x15d00d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x15c822830 '__clang_svint16x4_t'
|-TypedefDecl 0x15d00d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x15c822850 '__clang_svint32x4_t'
|-TypedefDecl 0x15d00d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x15c822870 '__clang_svint64x4_t'
|-TypedefDecl 0x15d00d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x15c822890 '__clang_svuint8x4_t'
|-TypedefDecl 0x15d00d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x15c8228b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15d00d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x15c8228d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15d00d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x15c8228f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15d00d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x15c822910 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15d00d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x15c822930 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15d00d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x15c822950 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15d00d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x15c822970 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15d00da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x15c822990 '__SVBool_t'
|-TypedefDecl 0x15d00da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x15c8229b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15d00dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x15c8229d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15d00db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x15c8229f0 '__SVCount_t'
|-TypedefDecl 0x15d00dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15d00dbb0 'char *'
|   `-BuiltinType 0x15c821cb0 'char'
|-TypedefDecl 0x15d00dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15d00dbb0 'char *'
|   `-BuiltinType 0x15c821cb0 'char'
|-FunctionDecl 0x15d026600 <dataset_diviso_filec/func22134_vuln.c:1:1, line:26:1> line:1:1 mkstemp_helper 'int (struct obstack *, const char *)'
| |-ParmVarDecl 0x15d00e248 <col:17, col:33> col:33 used obs 'struct obstack *'
| |-ParmVarDecl 0x15d00e2c8 <col:38, col:50> col:50 used name 'const char *'
| `-CompoundStmt 0x15d029d38 <line:2:1, line:26:1>
|   |-DeclStmt 0x15d026780 <line:3:3, col:9>
|   | `-VarDecl 0x15d026718 <col:3, col:7> col:7 used fd 'int'
|   |-DeclStmt 0x15d026818 <line:4:3, col:10>
|   | `-VarDecl 0x15d0267b0 <col:3, col:7> col:7 used len 'int'
|   |-DeclStmt 0x15d0268b0 <line:5:3, col:8>
|   | `-VarDecl 0x15d026848 <col:3, col:7> col:7 used i 'int'
|   |-BinaryOperator 0x15d026b90 <line:8:3, col:21> 'int' '='
|   | |-DeclRefExpr 0x15d0268c8 <col:3> 'int' lvalue Var 0x15d0267b0 'len' 'int'
|   | `-ImplicitCastExpr 0x15d026b78 <col:9, col:21> 'int' <IntegralCast>
|   |   `-CallExpr 0x15d026b38 <col:9, col:21> 'unsigned long'
|   |     |-ImplicitCastExpr 0x15d026b20 <col:9> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x15d026a98 <col:9> 'unsigned long (const char *)' Function 0x15d026928 'strlen' 'unsigned long (const char *)'
|   |     `-ImplicitCastExpr 0x15d026b60 <col:17> 'const char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x15d026ab8 <col:17> 'const char *' lvalue ParmVar 0x15d00e2c8 'name' 'const char *'
|   |-CallExpr 0x15d026da8 <line:9:3, col:31> 'int'
|   | |-ImplicitCastExpr 0x15d026d90 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x15d026ce0 <col:3> 'int ()' Function 0x15d026c28 'obstack_grow' 'int ()'
|   | |-ImplicitCastExpr 0x15d026de0 <col:17> 'struct obstack *' <LValueToRValue>
|   | | `-DeclRefExpr 0x15d026d00 <col:17> 'struct obstack *' lvalue ParmVar 0x15d00e248 'obs' 'struct obstack *'
|   | |-ImplicitCastExpr 0x15d026df8 <col:22> 'const char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x15d026d20 <col:22> 'const char *' lvalue ParmVar 0x15d00e2c8 'name' 'const char *'
|   | `-ImplicitCastExpr 0x15d026e10 <col:28> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x15d026d40 <col:28> 'int' lvalue Var 0x15d0267b0 'len' 'int'
|   |-ForStmt 0x15d0270f0 <line:10:3, line:12:7>
|   | |-BinaryOperator 0x15d026e68 <line:10:8, col:12> 'int' '='
|   | | |-DeclRefExpr 0x15d026e28 <col:8> 'int' lvalue Var 0x15d026848 'i' 'int'
|   | | `-IntegerLiteral 0x15d026e48 <col:12> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x15d026f78 <col:15, col:30> 'int' '&&'
|   | | |-BinaryOperator 0x15d026ee0 <col:15, col:21> 'int' '>'
|   | | | |-ImplicitCastExpr 0x15d026ec8 <col:15> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x15d026e88 <col:15> 'int' lvalue Var 0x15d0267b0 'len' 'int'
|   | | | `-IntegerLiteral 0x15d026ea8 <col:21> 'int' 0
|   | | `-BinaryOperator 0x15d026f58 <col:26, col:30> 'int' '<'
|   | |   |-ImplicitCastExpr 0x15d026f40 <col:26> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x15d026f00 <col:26> 'int' lvalue Var 0x15d026848 'i' 'int'
|   | |   `-IntegerLiteral 0x15d026f20 <col:30> 'int' 6
|   | |-UnaryOperator 0x15d026fb8 <col:33, col:34> 'int' postfix '++'
|   | | `-DeclRefExpr 0x15d026f98 <col:33> 'int' lvalue Var 0x15d026848 'i' 'int'
|   | `-IfStmt 0x15d0270d0 <line:11:5, line:12:7>
|   |   |-BinaryOperator 0x15d0270a8 <line:11:9, col:24> 'int' '!='
|   |   | |-ImplicitCastExpr 0x15d027090 <col:9, col:19> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x15d027078 <col:9, col:19> 'char' <LValueToRValue>
|   |   | |   `-ArraySubscriptExpr 0x15d027040 <col:9, col:19> 'const char' lvalue
|   |   | |     |-ImplicitCastExpr 0x15d027028 <col:9> 'const char *' <LValueToRValue>
|   |   | |     | `-DeclRefExpr 0x15d026fd0 <col:9> 'const char *' lvalue ParmVar 0x15d00e2c8 'name' 'const char *'
|   |   | |     `-UnaryOperator 0x15d027010 <col:14, col:16> 'int' prefix '--'
|   |   | |       `-DeclRefExpr 0x15d026ff0 <col:16> 'int' lvalue Var 0x15d0267b0 'len' 'int'
|   |   | `-CharacterLiteral 0x15d027060 <col:24> 'int' 88
|   |   `-BreakStmt 0x15d0270c8 <line:12:7>
|   |-ForStmt 0x15d027370 <line:13:3, line:14:28>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x15d027180 <line:13:10, col:14> 'int' '<'
|   | | |-ImplicitCastExpr 0x15d027168 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x15d027128 <col:10> 'int' lvalue Var 0x15d026848 'i' 'int'
|   | | `-IntegerLiteral 0x15d027148 <col:14> 'int' 6
|   | |-UnaryOperator 0x15d0271c0 <col:17, col:18> 'int' postfix '++'
|   | | `-DeclRefExpr 0x15d0271a0 <col:17> 'int' lvalue Var 0x15d026848 'i' 'int'
|   | `-CallExpr 0x15d027328 <line:14:5, col:28> 'int'
|   |   |-ImplicitCastExpr 0x15d027310 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x15d0272b8 <col:5> 'int ()' Function 0x15d027200 'obstack_1grow' 'int ()'
|   |   |-ImplicitCastExpr 0x15d027358 <col:20> 'struct obstack *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x15d0272d8 <col:20> 'struct obstack *' lvalue ParmVar 0x15d00e248 'obs' 'struct obstack *'
|   |   `-CharacterLiteral 0x15d0272f8 <col:25> 'int' 88
|   |-CallExpr 0x15d027418 <line:15:3, col:27> 'int'
|   | |-ImplicitCastExpr 0x15d027400 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x15d0273a8 <col:3> 'int ()' Function 0x15d027200 'obstack_1grow' 'int ()'
|   | |-ImplicitCastExpr 0x15d027448 <col:18> 'struct obstack *' <LValueToRValue>
|   | | `-DeclRefExpr 0x15d0273c8 <col:18> 'struct obstack *' lvalue ParmVar 0x15d00e248 'obs' 'struct obstack *'
|   | `-CharacterLiteral 0x15d0273e8 <col:23> 'int' 0
|   |-BinaryOperator 0x15d0295d0 <line:18:3, col:44> 'int' '='
|   | |-DeclRefExpr 0x15d027480 <col:3> 'int' lvalue Var 0x15d026718 'fd' 'int'
|   | `-CallExpr 0x15d0295a8 <col:8, col:44> 'int'
|   |   |-ImplicitCastExpr 0x15d029590 <col:8> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x15d027580 <col:8> 'int ()' Function 0x15d0274c8 'mkstemp' 'int ()'
|   |   `-CStyleCastExpr 0x15d029568 <col:17, col:43> 'char *' <IntegralToPointer>
|   |     `-CallExpr 0x15d029510 <col:26, col:43> 'int'
|   |       |-ImplicitCastExpr 0x15d0294f8 <col:26> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x15d0294b8 <col:26> 'int ()' Function 0x15d029400 'obstack_base' 'int ()'
|   |       `-ImplicitCastExpr 0x15d029538 <col:40> 'struct obstack *' <LValueToRValue>
|   |         `-DeclRefExpr 0x15d0294d8 <col:40> 'struct obstack *' lvalue ParmVar 0x15d00e248 'obs' 'struct obstack *'
|   `-IfStmt 0x15d029d08 <line:19:3, line:25:14> has_else
|     |-BinaryOperator 0x15d029648 <line:19:7, col:12> 'int' '<'
|     | |-ImplicitCastExpr 0x15d029630 <col:7> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x15d0295f0 <col:7> 'int' lvalue Var 0x15d026718 'fd' 'int'
|     | `-IntegerLiteral 0x15d029610 <col:12> 'int' 0
|     |-CompoundStmt 0x15d029b78 <line:20:5, line:23:5>
|     | `-CallExpr 0x15d029b30 <line:22:7, col:46> 'int'
|     |   |-ImplicitCastExpr 0x15d029b18 <col:7> 'int (*)()' <FunctionToPointerDecay>
|     |   | `-DeclRefExpr 0x15d029960 <col:7> 'int ()' Function 0x15d0298a8 'obstack_free' 'int ()'
|     |   |-ImplicitCastExpr 0x15d029b60 <col:21> 'struct obstack *' <LValueToRValue>
|     |   | `-DeclRefExpr 0x15d029980 <col:21> 'struct obstack *' lvalue ParmVar 0x15d00e248 'obs' 'struct obstack *'
|     |   `-CallExpr 0x15d029ad8 <col:26, col:45> 'int'
|     |     |-ImplicitCastExpr 0x15d029ac0 <col:26> 'int (*)()' <FunctionToPointerDecay>
|     |     | `-DeclRefExpr 0x15d029a80 <col:26> 'int ()' Function 0x15d0299c8 'obstack_finish' 'int ()'
|     |     `-ImplicitCastExpr 0x15d029b00 <col:42> 'struct obstack *' <LValueToRValue>
|     |       `-DeclRefExpr 0x15d029aa0 <col:42> 'struct obstack *' lvalue ParmVar 0x15d00e248 'obs' 'struct obstack *'
|     `-CallExpr 0x15d029cc8 <line:25:5, col:14> 'int'
|       |-ImplicitCastExpr 0x15d029cb0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x15d029c70 <col:5> 'int ()' Function 0x15d029bb8 'close' 'int ()'
|       `-ImplicitCastExpr 0x15d029cf0 <col:12> 'int' <LValueToRValue>
|         `-DeclRefExpr 0x15d029c90 <col:12> 'int' lvalue Var 0x15d026718 'fd' 'int'
`-FunctionDecl 0x15d026928 <line:8:9> col:9 implicit used strlen 'unsigned long (const char *)' extern
  |-ParmVarDecl 0x15d026a28 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x15d0269d0 <<invalid sloc>> Implicit 902
