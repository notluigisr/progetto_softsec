TranslationUnitDecl 0x130055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1300564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x130055bd0 '__int128'
|-TypedefDecl 0x130056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x130055bf0 'unsigned __int128'
|-TypedefDecl 0x12800be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12800bc00 'struct __NSConstantString_tag'
|   `-Record 0x130056580 '__NSConstantString_tag'
|-TypedefDecl 0x12800be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x130055d90 '__SVInt8_t'
|-TypedefDecl 0x12800bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x130055db0 '__SVInt16_t'
|-TypedefDecl 0x12800bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x130055dd0 '__SVInt32_t'
|-TypedefDecl 0x12800bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x130055df0 '__SVInt64_t'
|-TypedefDecl 0x12800c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x130055e10 '__SVUint8_t'
|-TypedefDecl 0x12800c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x130055e30 '__SVUint16_t'
|-TypedefDecl 0x12800c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x130055e50 '__SVUint32_t'
|-TypedefDecl 0x12800c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x130055e70 '__SVUint64_t'
|-TypedefDecl 0x12800c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x130055e90 '__SVFloat16_t'
|-TypedefDecl 0x12800c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x130055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12800c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x130055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12800c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x130055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12800c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x130055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12800c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x130055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12800c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x130055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12800c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x130055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12800c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x130055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12800c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x130055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12800c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x130055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12800c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x130055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12800c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x130056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12800c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x130056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12800c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x130056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12800c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x130056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12800c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x130056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12800c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1300560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12800c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1300560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12800c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1300560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12800c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x130056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12800ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x130056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12800cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x130056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12800cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x130056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12800cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x130056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12800d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1300561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12800d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1300561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12800d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1300561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12800d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x130056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12800d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x130056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12800d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x130056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12800d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x130056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12800d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x130056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12800d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1300562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12800d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1300562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12800d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1300562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12800d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x130056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12800d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x130056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12800d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x130056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12800d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x130056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12800da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x130056390 '__SVBool_t'
|-TypedefDecl 0x12800da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1300563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12800dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1300563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12800db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1300563f0 '__SVCount_t'
|-TypedefDecl 0x12800dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12800dbb0 'char *'
|   `-BuiltinType 0x1300556b0 'char'
|-TypedefDecl 0x12800dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12800dbb0 'char *'
|   `-BuiltinType 0x1300556b0 'char'
`-FunctionDecl 0x12800dec8 <dataset_diviso_filec/func793_nonvuln.c:1:1, line:40:1> line:1:1 invalid dwg_encode_eed 'int (int *restrict, int *restrict)'
  |-ParmVarDecl 0x12800dd28 <col:17, col:37> col:37 invalid dat 'int *restrict'
  |-ParmVarDecl 0x12800dda8 <col:42, col:63> col:63 invalid obj 'int *restrict'
  `-CompoundStmt 0x130122cc8 <line:2:1, line:40:1>
    |-DeclStmt 0x12800e068 <line:3:3, col:35>
    | `-VarDecl 0x12800df98 <col:3, col:28> col:17 off 'unsigned long' cinit
    |   `-CXXDependentScopeMemberExpr 0x12800e020 <col:23, col:28> '<dependent type>' contains-errors lvalue ->address
    |     `-RecoveryExpr 0x12800e000 <col:23> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x12800e290 <line:8:3, col:44>
    | |-VarDecl 0x12800e098 <col:3, col:7> col:7 used i 'int'
    | `-VarDecl 0x12800e118 <col:3, col:37> col:10 used num_eed 'int' cinit
    |   `-CXXDependentScopeMemberExpr 0x12800e230 <col:20, col:37> '<dependent type>' contains-errors lvalue ->num_eed
    |     `-CXXDependentScopeMemberExpr 0x12800e1e8 <col:20, col:29> '<dependent type>' contains-errors lvalue .object
    |       `-CXXDependentScopeMemberExpr 0x12800e1a0 <col:20, col:25> '<dependent type>' contains-errors lvalue ->tio
    |         `-RecoveryExpr 0x12800e180 <col:20> '<dependent type>' contains-errors lvalue
    |-ForStmt 0x12880b090 <line:9:3, line:33:5>
    | |-BinaryOperator 0x12800e2e8 <line:9:8, col:12> 'int' '='
    | | |-DeclRefExpr 0x12800e2a8 <col:8> 'int' lvalue Var 0x12800e098 'i' 'int'
    | | `-IntegerLiteral 0x12800e2c8 <col:12> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x12800e378 <col:15, col:19> 'int' contains-errors '<'
    | | |-ImplicitCastExpr 0x12800e348 <col:15> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x12800e308 <col:15> 'int' lvalue Var 0x12800e098 'i' 'int'
    | | `-ImplicitCastExpr 0x12800e360 <col:19> 'int' contains-errors <LValueToRValue>
    | |   `-DeclRefExpr 0x12800e328 <col:19> 'int' contains-errors lvalue Var 0x12800e118 'num_eed' 'int'
    | |-UnaryOperator 0x12800e3b8 <col:28, col:29> 'int' postfix '++'
    | | `-DeclRefExpr 0x12800e398 <col:28> 'int' lvalue Var 0x12800e098 'i' 'int'
    | `-CompoundStmt 0x12880b070 <line:10:5, line:33:5>
    |   |-IfStmt 0x12880ab28 <line:13:7, line:27:9>
    |   | |-RecoveryExpr 0x12880a398 <line:13:11> '<dependent type>' contains-errors lvalue
    |   | `-CompoundStmt 0x12880ab00 <line:14:9, line:27:9>
    |   |   |-CallExpr 0x12880a5b8 <line:15:11, col:34> '<dependent type>' contains-errors
    |   |   | |-DeclRefExpr 0x12880a510 <col:11> 'int ()' Function 0x12880a458 'bit_write_BS' 'int ()'
    |   |   | |-RecoveryExpr 0x12880a530 <col:25> '<dependent type>' contains-errors lvalue
    |   |   | `-RecoveryExpr 0x12880a598 <col:30> '<dependent type>' contains-errors lvalue
    |   |   |-CallExpr 0x12880a7e0 <line:16:11, col:36> '<dependent type>' contains-errors
    |   |   | |-DeclRefExpr 0x12880a6c8 <col:11> 'int ()' Function 0x12880a610 'LOG_TRACE' 'int ()'
    |   |   | |-StringLiteral 0x12880a730 <col:22> 'char[4]' lvalue "STR"
    |   |   | |-DeclRefExpr 0x12880a750 <col:29> 'int' lvalue Var 0x12800e098 'i' 'int'
    |   |   | `-RecoveryExpr 0x12880a7c0 <col:32> '<dependent type>' contains-errors lvalue
    |   |   `-CallExpr 0x12880aac8 <line:19:11, line:20:42> '<dependent type>' contains-errors
    |   |     |-DeclRefExpr 0x12880a818 <line:19:11> 'int ()' Function 0x12880a610 'LOG_TRACE' 'int ()'
    |   |     |-StringLiteral 0x12880a838 <col:22> 'char[4]' lvalue "STR"
    |   |     |-DeclRefExpr 0x12880a858 <col:29> 'int' lvalue Var 0x12800e098 'i' 'int'
    |   |     `-CallExpr 0x12880aaa0 <line:20:22, col:41> '<dependent type>' contains-errors
    |   |       |-DeclRefExpr 0x12880a958 <col:22> 'int ()' Function 0x12880a8a0 'ARGS_H' 'int ()'
    |   |       `-CXXDependentScopeMemberExpr 0x12880aa58 <col:30, col:35> '<dependent type>' contains-errors lvalue ->handle
    |   |         `-RecoveryExpr 0x12880aa38 <col:30> '<dependent type>' contains-errors lvalue
    |   `-IfStmt 0x12880b050 <line:28:7, line:32:9>
    |     |-BinaryOperator 0x12880ad58 <line:28:11, col:29> 'int' contains-errors '&&'
    |     | |-UnaryOperator 0x12880acd8 <col:11, col:17> '<dependent type>' contains-errors prefix '!' cannot overflow
    |     | | `-ImplicitCastExpr 0x12880acc0 <col:12, col:17> '<dependent type>' contains-errors <LValueToRValue>
    |     | |   `-CXXDependentScopeMemberExpr 0x12880ac78 <col:12, col:17> '<dependent type>' contains-errors lvalue ->raw
    |     | |     `-RecoveryExpr 0x12880ac58 <col:12> '<dependent type>' contains-errors lvalue
    |     | `-CXXDependentScopeMemberExpr 0x12880ad10 <col:24, col:29> '<dependent type>' contains-errors lvalue ->data
    |     |   `-RecoveryExpr 0x12880acf0 <col:24> '<dependent type>' contains-errors lvalue
    |     `-CompoundStmt 0x12880b038 <line:29:9, line:32:9>
    |       `-CallExpr 0x12880aff8 <line:30:11, col:55> '<dependent type>' contains-errors
    |         |-DeclRefExpr 0x12880ae58 <col:11> 'int ()' Function 0x12880ada0 'dwg_encode_eed_data' 'int ()'
    |         |-RecoveryExpr 0x12880ae78 <col:32> '<dependent type>' contains-errors lvalue
    |         |-CXXDependentScopeMemberExpr 0x12880af90 <col:37, col:42> '<dependent type>' contains-errors lvalue ->data
    |         | `-RecoveryExpr 0x12880af70 <col:37> '<dependent type>' contains-errors lvalue
    |         |-RecoveryExpr 0x12880afd8 <col:48> '<dependent type>' contains-errors lvalue
    |         `-DeclRefExpr 0x12880af10 <col:54> 'int' lvalue Var 0x12800e098 'i' 'int'
    |-CallExpr 0x12880b128 <line:34:3, col:23> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12880b0c8 <col:3> 'int ()' Function 0x12880a458 'bit_write_BS' 'int ()'
    | |-RecoveryExpr 0x12880b0e8 <col:17> '<dependent type>' contains-errors lvalue
    | `-IntegerLiteral 0x12880b108 <col:22> 'int' 0
    `-IfStmt 0x130122ca8 <line:35:3, line:36:24>
      |-ImplicitCastExpr 0x12880b178 <line:35:7> 'int' <LValueToRValue>
      | `-DeclRefExpr 0x12880b158 <col:7> 'int' lvalue Var 0x12800e098 'i' 'int'
      `-CallExpr 0x130122c48 <line:36:5, col:24> 'int'
        |-ImplicitCastExpr 0x130122c30 <col:5> 'int (*)()' <FunctionToPointerDecay>
        | `-DeclRefExpr 0x12880b190 <col:5> 'int ()' Function 0x12880a610 'LOG_TRACE' 'int ()'
        |-ImplicitCastExpr 0x130122c78 <col:16> 'char *' <ArrayToPointerDecay>
        | `-StringLiteral 0x12880b1b0 <col:16> 'char[4]' lvalue "STR"
        `-ImplicitCastExpr 0x130122c90 <col:23> 'int' <LValueToRValue>
          `-DeclRefExpr 0x12880b1d0 <col:23> 'int' lvalue Var 0x12800e098 'i' 'int'
