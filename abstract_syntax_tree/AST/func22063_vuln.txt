TranslationUnitDecl 0x123055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1230564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x123055bd0 '__int128'
|-TypedefDecl 0x123056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x123055bf0 'unsigned __int128'
|-TypedefDecl 0x12380be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12380bc00 'struct __NSConstantString_tag'
|   `-Record 0x123056580 '__NSConstantString_tag'
|-TypedefDecl 0x12380be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x123055d90 '__SVInt8_t'
|-TypedefDecl 0x12380bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x123055db0 '__SVInt16_t'
|-TypedefDecl 0x12380bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x123055dd0 '__SVInt32_t'
|-TypedefDecl 0x12380bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x123055df0 '__SVInt64_t'
|-TypedefDecl 0x12380c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x123055e10 '__SVUint8_t'
|-TypedefDecl 0x12380c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x123055e30 '__SVUint16_t'
|-TypedefDecl 0x12380c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x123055e50 '__SVUint32_t'
|-TypedefDecl 0x12380c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x123055e70 '__SVUint64_t'
|-TypedefDecl 0x12380c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x123055e90 '__SVFloat16_t'
|-TypedefDecl 0x12380c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x123055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12380c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x123055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12380c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x123055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12380c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x123055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12380c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x123055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12380c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x123055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12380c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x123055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12380c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x123055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12380c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x123055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12380c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x123055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12380c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x123055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12380c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x123056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12380c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x123056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12380c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x123056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12380c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x123056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12380c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x123056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12380c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1230560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12380c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1230560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12380c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1230560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12380c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x123056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12380ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x123056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12380cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x123056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12380cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x123056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12380cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x123056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12380d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1230561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12380d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1230561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12380d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1230561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12380d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x123056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12380d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x123056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12380d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x123056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12380d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x123056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12380d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x123056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12380d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1230562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12380d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1230562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12380d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1230562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12380d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x123056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12380d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x123056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12380d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x123056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12380d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x123056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12380da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x123056390 '__SVBool_t'
|-TypedefDecl 0x12380da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1230563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12380dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1230563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12380db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1230563f0 '__SVCount_t'
|-TypedefDecl 0x12380dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12380dbb0 'char *'
|   `-BuiltinType 0x1230556b0 'char'
|-TypedefDecl 0x12380dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12380dbb0 'char *'
|   `-BuiltinType 0x1230556b0 'char'
|-FunctionDecl 0x123826808 <dataset_diviso_filec/func22063_vuln.c:1:1, line:59:1> line:1:12 open_group 'int (char *, int, struct backend **, int *)' static
| |-ParmVarDecl 0x12380dcd8 <col:23, col:29> col:29 used name 'char *'
| |-ParmVarDecl 0x12380dd58 <col:35, col:39> col:39 used has_prefix 'int'
| |-ParmVarDecl 0x123826600 <col:51, col:68> col:68 used ret 'struct backend **'
| |-ParmVarDecl 0x1238266b8 <line:2:9, col:14> col:14 used postable 'int *'
| `-CompoundStmt 0x1240092d0 <line:3:1, line:59:1>
|   |-DeclStmt 0x1238269c0 <line:4:5, col:41>
|   | `-VarDecl 0x123826958 <col:5, col:10> col:10 invalid mailboxname 'char'
|   |-DeclStmt 0x123826a78 <line:5:5, col:14>
|   | `-VarDecl 0x1238269f0 <col:5, col:13> col:9 used r 'int' cinit
|   |   `-IntegerLiteral 0x123826a58 <col:13> 'int' 0
|   |-DeclStmt 0x123826ba8 <line:6:5, col:26>
|   | |-VarDecl 0x123826aa8 <col:5, col:11> col:11 used acl 'char *'
|   | `-VarDecl 0x123826b28 <col:5, col:17> col:17 used newserver 'char *'
|   |-DeclStmt 0x123826ce8 <line:7:5, col:40>
|   | `-VarDecl 0x123826c48 <col:5, col:36> col:21 used backend_next 'struct backend *' cinit
|   |   `-RecoveryExpr 0x123826cc8 <col:36> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x123826f28 <line:10:5, line:11:26>
|   | |-RecoveryExpr 0x123826d18 <line:10:9> '<dependent type>' contains-errors lvalue
|   | `-CallExpr 0x123826f00 <line:11:2, col:26> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x123826e50 <col:2> 'int ()' Function 0x123826d98 'index_close' 'int ()'
|   |   `-UnaryOperator 0x123826ee8 <col:14, col:15> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     `-RecoveryExpr 0x123826ec8 <col:15> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x123827548 <line:13:5, line:16:5>
|   | |-UnaryOperator 0x123826f80 <line:13:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x123826f68 <col:10> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x123826f48 <col:10> 'int' lvalue ParmVar 0x12380dd58 'has_prefix' 'int'
|   | `-CompoundStmt 0x123827528 <col:22, line:16:5>
|   |   |-CallExpr 0x123827480 <line:14:2, col:68> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x123827278 <col:2> 'int (char *, unsigned long, const char *, ...)' Function 0x123826ff0 'snprintf' 'int (char *, unsigned long, const char *, ...)'
|   |   | |-RecoveryExpr 0x123827298 <col:11> '<dependent type>' contains-errors lvalue
|   |   | |-UnaryExprOrTypeTraitExpr 0x1238272f8 <col:24, col:42> 'unsigned long' contains-errors sizeof
|   |   | | `-ParenExpr 0x1238272d8 <col:30, col:42> '<dependent type>' contains-errors lvalue
|   |   | |   `-RecoveryExpr 0x1238272b8 <col:31> '<dependent type>' contains-errors lvalue
|   |   | |-StringLiteral 0x123827360 <col:45> 'char[4]' lvalue "STR"
|   |   | |-DeclRefExpr 0x123827430 <col:52> 'int' lvalue ParmVar 0x12380dd58 'has_prefix' 'int'
|   |   | `-DeclRefExpr 0x123827398 <col:64> 'char *' lvalue ParmVar 0x12380dcd8 'name' 'char *'
|   |   `-BinaryOperator 0x123827508 <line:15:2, col:9> 'char *' contains-errors '='
|   |     |-DeclRefExpr 0x1238274c8 <col:2> 'char *' lvalue ParmVar 0x12380dcd8 'name' 'char *'
|   |     `-RecoveryExpr 0x1238274e8 <col:9> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x123829098 <line:18:5, col:53>
|   | |-UnaryOperator 0x1238275a0 <col:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x123827588 <col:10> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x123827568 <col:10> 'int' lvalue Var 0x1238269f0 'r' 'int'
|   | `-BinaryOperator 0x123829078 <col:13, col:53> 'int' contains-errors '='
|   |   |-DeclRefExpr 0x1238275b8 <col:13> 'int' lvalue Var 0x1238269f0 'r' 'int'
|   |   `-CallExpr 0x123829038 <col:17, col:53> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x123828eb8 <col:17> 'int ()' Function 0x123828e00 'mlookup' 'int ()'
|   |     |-DeclRefExpr 0x123828ed8 <col:25> 'char *' lvalue ParmVar 0x12380dcd8 'name' 'char *'
|   |     |-UnaryOperator 0x123828f50 <col:31, col:32> 'char **' prefix '&' cannot overflow
|   |     | `-DeclRefExpr 0x123828ef8 <col:32> 'char *' lvalue Var 0x123826b28 'newserver' 'char *'
|   |     |-UnaryOperator 0x123828f88 <col:43, col:44> 'char **' prefix '&' cannot overflow
|   |     | `-DeclRefExpr 0x123828f68 <col:44> 'char *' lvalue Var 0x123826aa8 'acl' 'char *'
|   |     `-RecoveryExpr 0x123829018 <col:49> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x123829758 <line:20:5, line:29:5>
|   | |-BinaryOperator 0x123829140 <line:20:9, col:15> 'int' '&&'
|   | | |-UnaryOperator 0x1238290f0 <col:9, col:10> 'int' prefix '!' cannot overflow
|   | | | `-ImplicitCastExpr 0x1238290d8 <col:10> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1238290b8 <col:10> 'int' lvalue Var 0x1238269f0 'r' 'int'
|   | | `-ImplicitCastExpr 0x123829128 <col:15> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x123829108 <col:15> 'char *' lvalue Var 0x123826aa8 'acl' 'char *'
|   | `-CompoundStmt 0x123829730 <col:20, line:29:5>
|   |   |-DeclStmt 0x123829398 <line:21:2, col:56>
|   |   | `-VarDecl 0x123829178 <col:2, col:55> col:6 used myrights 'int' cinit
|   |   |   `-CallExpr 0x123829368 <col:17, col:55> '<dependent type>' contains-errors
|   |   |     |-DeclRefExpr 0x1238292c0 <col:17> 'int ()' Function 0x123829208 'cyrus_acl_myrights' 'int ()'
|   |   |     |-RecoveryExpr 0x123829348 <col:36> '<dependent type>' contains-errors lvalue
|   |   |     `-DeclRefExpr 0x1238292f8 <col:52> 'char *' lvalue Var 0x123826aa8 'acl' 'char *'
|   |   |-IfStmt 0x123829570 <line:23:2, col:39>
|   |   | |-ImplicitCastExpr 0x1238293d0 <col:6> 'int *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1238293b0 <col:6> 'int *' lvalue ParmVar 0x1238266b8 'postable' 'int *'
|   |   | `-BinaryOperator 0x123829550 <col:16, col:39> 'int' contains-errors '='
|   |   |   |-UnaryOperator 0x1238294f8 <col:16, col:17> 'int' lvalue prefix '*' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x1238294e0 <col:17> 'int *' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x1238293e8 <col:17> 'int *' lvalue ParmVar 0x1238266b8 'postable' 'int *'
|   |   |   `-BinaryOperator 0x123829530 <col:28, col:39> '<dependent type>' contains-errors '&'
|   |   |     |-DeclRefExpr 0x123829438 <col:28> 'int' contains-errors lvalue Var 0x123829178 'myrights' 'int'
|   |   |     `-RecoveryExpr 0x123829510 <col:39> '<dependent type>' contains-errors lvalue
|   |   `-IfStmt 0x123829710 <line:24:2, line:28:2>
|   |     |-RecoveryExpr 0x123829638 <line:24:6, line:25:27> '_Bool' contains-errors
|   |     `-CompoundStmt 0x123829700 <col:30, line:28:2>
|   |-IfStmt 0x1238297f8 <line:31:5, col:19>
|   | |-ImplicitCastExpr 0x123829798 <col:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x123829778 <col:9> 'int' lvalue Var 0x1238269f0 'r' 'int'
|   | `-ReturnStmt 0x1238297e8 <col:12, col:19>
|   |   `-ImplicitCastExpr 0x1238297d0 <col:19> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x1238297b0 <col:19> 'int' lvalue Var 0x1238269f0 'r' 'int'
|   |-IfStmt 0x124009110 <line:33:5, line:53:5> has_else
|   | |-ImplicitCastExpr 0x123829838 <line:33:9> 'char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x123829818 <col:9> 'char *' lvalue Var 0x123826b28 'newserver' 'char *'
|   | |-CompoundStmt 0x124008820 <col:20, line:42:5>
|   | | |-BinaryOperator 0x123829cf8 <line:35:2, line:38:19> 'struct backend *' contains-errors '='
|   | | | |-DeclRefExpr 0x123829850 <line:35:2> 'struct backend *' contains-errors lvalue Var 0x123826c48 'backend_next' 'struct backend *'
|   | | | `-CallExpr 0x123829ca0 <col:17, line:38:19> '<dependent type>' contains-errors
|   | | |   |-DeclRefExpr 0x123829950 <line:35:17> 'int ()' Function 0x123829898 'proxy_findserver' 'int ()'
|   | | |   |-DeclRefExpr 0x123829970 <col:34> 'char *' lvalue Var 0x123826b28 'newserver' 'char *'
|   | | |   |-UnaryOperator 0x123829b68 <col:45, col:46> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | |   | `-RecoveryExpr 0x123829b48 <col:46> '<dependent type>' contains-errors lvalue
|   | | |   |-ConditionalOperator 0x123829bc0 <line:36:6, col:34> '<dependent type>' contains-errors
|   | | |   | |-RecoveryExpr 0x123829b80 <col:6> '<dependent type>' contains-errors lvalue
|   | | |   | |-RecoveryExpr 0x123829ba0 <col:20> '<dependent type>' contains-errors lvalue
|   | | |   | `-StringLiteral 0x1238299f0 <col:34> 'char[4]' lvalue "STR"
|   | | |   |-UnaryOperator 0x123829c10 <line:37:6, col:7> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | |   | `-RecoveryExpr 0x123829bf0 <col:7> '<dependent type>' contains-errors lvalue
|   | | |   |-UnaryOperator 0x123829c48 <col:23, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | |   | `-RecoveryExpr 0x123829c28 <col:24> '<dependent type>' contains-errors lvalue
|   | | |   |-RecoveryExpr 0x123829c60 <line:38:6> '<dependent type>' contains-errors lvalue
|   | | |   `-RecoveryExpr 0x123829c80 <col:12> '<dependent type>' contains-errors lvalue
|   | | `-BinaryOperator 0x124008800 <line:41:2, col:9> 'struct backend *' contains-errors '='
|   | |   |-UnaryOperator 0x123829da0 <col:2, col:3> 'struct backend *' lvalue prefix '*' cannot overflow
|   | |   | `-ImplicitCastExpr 0x123829d88 <col:3> 'struct backend **' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x123829d68 <col:3> 'struct backend **' lvalue ParmVar 0x123826600 'ret' 'struct backend **'
|   | |   `-ImplicitCastExpr 0x123829dd8 <col:9> 'struct backend *' contains-errors <LValueToRValue>
|   | |     `-DeclRefExpr 0x123829db8 <col:9> 'struct backend *' contains-errors lvalue Var 0x123826c48 'backend_next' 'struct backend *'
|   | `-CompoundStmt 0x1240090f0 <line:43:10, line:53:5>
|   |   |-DeclStmt 0x1240089b8 <line:45:2, col:24>
|   |   | |-RecordDecl 0x124008840 <col:2, col:9> col:9 struct index_init
|   |   | `-VarDecl 0x124008938 <col:2, col:20> col:20 referenced invalid init 'struct index_init'
|   |   `-IfStmt 0x124009048 <line:50:2, col:16>
|   |     |-ImplicitCastExpr 0x124008fe8 <col:6> 'int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x124008fc8 <col:6> 'int' lvalue Var 0x1238269f0 'r' 'int'
|   |     `-ReturnStmt 0x124009038 <col:9, col:16>
|   |       `-ImplicitCastExpr 0x124009020 <col:16> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x124009000 <col:16> 'int' lvalue Var 0x1238269f0 'r' 'int'
|   `-ReturnStmt 0x1240092c0 <line:58:5, col:12>
|     `-IntegerLiteral 0x1240092a0 <col:12> 'int' 0
|-FunctionDecl 0x123826ff0 <line:14:2> col:2 implicit used snprintf 'int (char *, unsigned long, const char *, ...)' extern
| |-ParmVarDecl 0x1238270f0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x123827158 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0x1238271c0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-BuiltinAttr 0x123827098 <<invalid sloc>> Implicit 905
| `-FormatAttr 0x123827240 <col:2> Implicit printf 3 4
`-FunctionDecl 0x124008a18 <line:46:2> col:2 implicit used memset 'void *(void *, int, unsigned long)' extern
  |-ParmVarDecl 0x124008b18 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x124008b80 <<invalid sloc>> <invalid sloc> 'int'
  |-ParmVarDecl 0x124008be8 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x124008ac0 <<invalid sloc>> Implicit 900
