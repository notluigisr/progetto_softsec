TranslationUnitDecl 0x132855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1328564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x132855bd0 '__int128'
|-TypedefDecl 0x132856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x132855bf0 'unsigned __int128'
|-TypedefDecl 0x132926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x132926000 'struct __NSConstantString_tag'
|   `-Record 0x132856580 '__NSConstantString_tag'
|-TypedefDecl 0x132926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x132855d90 '__SVInt8_t'
|-TypedefDecl 0x132926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x132855db0 '__SVInt16_t'
|-TypedefDecl 0x132926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x132855dd0 '__SVInt32_t'
|-TypedefDecl 0x1329263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x132855df0 '__SVInt64_t'
|-TypedefDecl 0x132926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x132855e10 '__SVUint8_t'
|-TypedefDecl 0x1329264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x132855e30 '__SVUint16_t'
|-TypedefDecl 0x132926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x132855e50 '__SVUint32_t'
|-TypedefDecl 0x132926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x132855e70 '__SVUint64_t'
|-TypedefDecl 0x1329265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x132855e90 '__SVFloat16_t'
|-TypedefDecl 0x132926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x132855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1329266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x132855ed0 '__SVFloat64_t'
|-TypedefDecl 0x132926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x132855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x132926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x132855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1329267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x132855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x132926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x132855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1329268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x132855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x132926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x132855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x132926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x132855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1329269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x132855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x132926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x132855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x132926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x132856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x132926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x132856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x132926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x132856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x132926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x132856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x132926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x132856090 '__clang_svint8x3_t'
|-TypedefDecl 0x132926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1328560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x132926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1328560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x132926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1328560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x132926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x132856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x132926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x132856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x132926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x132856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x132926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x132856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x132926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x132856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x132927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1328561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x132927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1328561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1329278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1328561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x132927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x132856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1329279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x132856230 '__clang_svint16x4_t'
|-TypedefDecl 0x132927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x132856250 '__clang_svint32x4_t'
|-TypedefDecl 0x132927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x132856270 '__clang_svint64x4_t'
|-TypedefDecl 0x132927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x132856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x132927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1328562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x132927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1328562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x132927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1328562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x132927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x132856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x132927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x132856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x132927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x132856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x132927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x132856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x132927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x132856390 '__SVBool_t'
|-TypedefDecl 0x132927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1328563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x132927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1328563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x132927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1328563f0 '__SVCount_t'
|-TypedefDecl 0x132927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x132927fb0 'char *'
|   `-BuiltinType 0x1328556b0 'char'
|-TypedefDecl 0x132928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x132927fb0 'char *'
|   `-BuiltinType 0x1328556b0 'char'
|-FunctionDecl 0x1329282e8 <dataset_diviso_filec/func13264_vuln.c:1:1, line:44:1> line:1:19 invalid parse_mask 'int (int, const char *, int)' static inline
| |-ParmVarDecl 0x1329280f0 <col:30, col:33> col:33 referenced invalid self 'int'
| |-ParmVarDecl 0x132928170 <col:39, col:51> col:51 used str 'const char *'
| |-ParmVarDecl 0x1329281f0 <col:56, col:60> col:60 flags 'int'
| `-CompoundStmt 0x13300b9d0 <col:67, line:44:1>
|   |-DeclStmt 0x132928428 <line:2:5, col:12>
|   | `-VarDecl 0x1329283c0 <col:5, col:11> col:11 used p 'char *'
|   |-DeclStmt 0x1329419f8 <line:4:5, col:23>
|   | |-RecordDecl 0x132928440 <col:5, col:12> col:12 struct in6_addr
|   | `-VarDecl 0x132928538 <col:5, col:21> col:21 invalid s6 'struct in6_addr'
|   |-DeclStmt 0x132941b88 <line:5:5, col:21>
|   | |-RecordDecl 0x132941a10 <col:5, col:12> col:12 struct in_addr
|   | `-VarDecl 0x132941b08 <col:5, col:20> col:20 invalid s 'struct in_addr'
|   |-IfStmt 0x13300b5a8 <line:8:5, line:38:5> has_else
|   | |-BinaryOperator 0x132942050 <line:8:8, col:14> 'int' '=='
|   | | |-ImplicitCastExpr 0x132942038 <col:8, col:9> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x132942020 <col:8, col:9> 'char' <LValueToRValue>
|   | | |   `-UnaryOperator 0x132941ff0 <col:8, col:9> 'char' lvalue prefix '*' cannot overflow
|   | | |     `-ImplicitCastExpr 0x132941fd8 <col:9> 'char *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x132941fb8 <col:9> 'char *' lvalue Var 0x1329283c0 'p' 'char *'
|   | | `-CharacterLiteral 0x132942008 <col:14> 'int' 0
|   | |-CompoundStmt 0x13300a0b0 <col:20, line:17:5>
|   | | |-IfStmt 0x132942608 <line:10:9, line:15:9> has_else
|   | | | |-CallExpr 0x132942210 <line:10:12, col:22> '<dependent type>' contains-errors
|   | | | | |-DeclRefExpr 0x1329421d0 <col:12> 'int ()' Function 0x132942118 'is_v4' 'int ()'
|   | | | | `-RecoveryExpr 0x1329421f0 <col:18> '<dependent type>' contains-errors lvalue
|   | | | |-CompoundStmt 0x132942418 <col:25, line:13:9>
|   | | | | `-IfStmt 0x1329423d8 <line:11:13, col:40>
|   | | | |   |-BinaryOperator 0x132942388 <col:16, col:29> 'int' contains-errors '||'
|   | | | |   | |-BinaryOperator 0x132942328 <col:16, col:20> 'int' contains-errors '<'
|   | | | |   | | |-RecoveryExpr 0x132942308 <col:16> '<dependent type>' contains-errors lvalue
|   | | | |   | | `-IntegerLiteral 0x132942250 <col:20> 'int' 0
|   | | | |   | `-BinaryOperator 0x132942368 <col:25, col:29> 'int' contains-errors '>'
|   | | | |   |   |-RecoveryExpr 0x132942348 <col:25> '<dependent type>' contains-errors lvalue
|   | | | |   |   `-IntegerLiteral 0x1329422a8 <col:29> 'int' 32
|   | | | |   `-ReturnStmt 0x1329423c8 <col:33, col:40>
|   | | | |     `-IntegerLiteral 0x1329423a8 <col:40> 'int' 0
|   | | | `-CompoundStmt 0x1329425f0 <line:13:16, line:15:9>
|   | | |   `-IfStmt 0x1329425d0 <line:14:13, col:41>
|   | | |     |-BinaryOperator 0x132942580 <col:16, col:29> 'int' contains-errors '||'
|   | | |     | |-BinaryOperator 0x132942520 <col:16, col:20> 'int' contains-errors '<'
|   | | |     | | |-RecoveryExpr 0x132942500 <col:16> '<dependent type>' contains-errors lvalue
|   | | |     | | `-IntegerLiteral 0x132942448 <col:20> 'int' 0
|   | | |     | `-BinaryOperator 0x132942560 <col:25, col:29> 'int' contains-errors '>'
|   | | |     |   |-RecoveryExpr 0x132942540 <col:25> '<dependent type>' contains-errors lvalue
|   | | |     |   `-IntegerLiteral 0x1329424a0 <col:29> 'int' 128
|   | | |     `-ReturnStmt 0x1329425c0 <col:34, col:41>
|   | | |       `-IntegerLiteral 0x1329425a0 <col:41> 'int' 0
|   | | `-BinaryOperator 0x13300a090 <line:16:9, col:33> '<dependent type>' contains-errors '='
|   | |   |-CXXDependentScopeMemberExpr 0x132942680 <col:9, col:15> '<dependent type>' contains-errors lvalue ->mask
|   | |   | `-RecoveryExpr 0x132942658 <col:9> '<dependent type>' contains-errors lvalue
|   | |   |   `-DeclRefExpr 0x132942638 <col:9> 'int' lvalue ParmVar 0x1329280f0 'self' 'int'
|   | |   `-CallExpr 0x13300a068 <col:22, col:33> '<dependent type>' contains-errors
|   | |     |-DeclRefExpr 0x1329427a8 <col:22> 'int ()' Function 0x1329426f0 'u128_cidr' 'int ()'
|   | |     `-RecoveryExpr 0x13300a048 <col:32> '<dependent type>' contains-errors lvalue
|   | `-IfStmt 0x13300b578 <line:17:12, line:38:5> has_else
|   |   |-CallExpr 0x13300a298 <line:17:15, col:43> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x13300a1b0 <col:15> 'int ()' Function 0x13300a0f8 'inet_pton' 'int ()'
|   |   | |-RecoveryExpr 0x13300a278 <col:25> '<dependent type>' contains-errors lvalue
|   |   | |-DeclRefExpr 0x13300a1e8 <col:35> 'const char *' lvalue ParmVar 0x132928170 'str' 'const char *'
|   |   | `-UnaryOperator 0x13300a228 <col:40, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   |   `-RecoveryExpr 0x13300a208 <col:41> '<dependent type>' contains-errors lvalue
|   |   |-CompoundStmt 0x13300af68 <col:46, line:30:5>
|   |   | |-BinaryOperator 0x13300a4c0 <line:18:9, col:36> '<dependent type>' contains-errors '='
|   |   | | |-CXXDependentScopeMemberExpr 0x13300a318 <col:9, col:15> '<dependent type>' contains-errors lvalue ->mask
|   |   | | | `-RecoveryExpr 0x13300a2f0 <col:9> '<dependent type>' contains-errors lvalue
|   |   | | |   `-DeclRefExpr 0x13300a2d0 <col:9> 'int' lvalue ParmVar 0x1329280f0 'self' 'int'
|   |   | | `-CallExpr 0x13300a498 <col:22, col:36> '<dependent type>' contains-errors
|   |   | |   |-DeclRefExpr 0x13300a440 <col:22> 'int ()' Function 0x13300a388 'u128_of_s6' 'int ()'
|   |   | |   `-UnaryOperator 0x13300a480 <col:33, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   | |     `-RecoveryExpr 0x13300a460 <col:34> '<dependent type>' contains-errors lvalue
|   |   | `-IfStmt 0x13300aeb8 <line:20:9, line:28:9>
|   |   |   |-BinaryOperator 0x13300ac40 <line:20:12, line:26:14> 'int' contains-errors '=='
|   |   |   | |-CallExpr 0x13300abf0 <line:20:12, line:26:9> '<dependent type>' contains-errors
|   |   |   | | |-DeclRefExpr 0x13300a5c0 <line:20:12> 'int ()' Function 0x13300a508 'u128_cmp' 'int ()'
|   |   |   | | |-CallExpr 0x13300a768 <line:21:13, col:26> 'int'
|   |   |   | | | |-ImplicitCastExpr 0x13300a750 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | | | | `-DeclRefExpr 0x13300a6c0 <col:13> 'int ()' Function 0x13300a608 'u128_lit' 'int ()'
|   |   |   | | | |-IntegerLiteral 0x13300a6e0 <col:22> 'int' 0
|   |   |   | | | `-IntegerLiteral 0x13300a700 <col:25> 'int' 0
|   |   |   | | `-CallExpr 0x13300abc0 <line:22:13, line:25:13> '<dependent type>' contains-errors
|   |   |   | |   |-DeclRefExpr 0x13300a878 <line:22:13> 'int ()' Function 0x13300a7c0 'u128_and' 'int ()'
|   |   |   | |   |-CallExpr 0x13300a950 <line:23:17, col:39> 'int'
|   |   |   | |   | |-ImplicitCastExpr 0x13300a938 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | |   | | `-DeclRefExpr 0x13300a898 <col:17> 'int ()' Function 0x13300a608 'u128_lit' 'int ()'
|   |   |   | |   | |-BinaryOperator 0x13300a8f8 <col:26, col:34> 'unsigned long long' '<<'
|   |   |   | |   | | |-IntegerLiteral 0x13300a8b8 <col:26> 'unsigned long long' 1
|   |   |   | |   | | `-IntegerLiteral 0x13300a8d8 <col:34> 'int' 63
|   |   |   | |   | `-IntegerLiteral 0x13300a918 <col:38> 'int' 1
|   |   |   | |   `-CallExpr 0x13300ab90 <line:24:17, col:52> '<dependent type>' contains-errors
|   |   |   | |     |-DeclRefExpr 0x13300aa60 <col:17> 'int ()' Function 0x13300a9a8 'u128_xor' 'int ()'
|   |   |   | |     |-CallExpr 0x13300aaf8 <col:26, col:39> 'int'
|   |   |   | |     | |-ImplicitCastExpr 0x13300aae0 <col:26> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | |     | | `-DeclRefExpr 0x13300aa80 <col:26> 'int ()' Function 0x13300a608 'u128_lit' 'int ()'
|   |   |   | |     | |-IntegerLiteral 0x13300aaa0 <col:35> 'int' 0
|   |   |   | |     | `-IntegerLiteral 0x13300aac0 <col:38> 'int' 1
|   |   |   | |     `-CXXDependentScopeMemberExpr 0x13300ab48 <col:42, col:48> '<dependent type>' contains-errors lvalue ->mask
|   |   |   | |       `-RecoveryExpr 0x13300ab28 <col:42> '<dependent type>' contains-errors lvalue
|   |   |   | `-IntegerLiteral 0x13300ac20 <line:26:14> 'int' 0
|   |   |   `-CompoundStmt 0x13300aea0 <col:17, line:28:9>
|   |   |     `-BinaryOperator 0x13300ae80 <line:27:13, col:45> '<dependent type>' contains-errors '='
|   |   |       |-CXXDependentScopeMemberExpr 0x13300aca8 <col:13, col:19> '<dependent type>' contains-errors lvalue ->mask
|   |   |       | `-RecoveryExpr 0x13300ac80 <col:13> '<dependent type>' contains-errors lvalue
|   |   |       |   `-DeclRefExpr 0x13300ac60 <col:13> 'int' lvalue ParmVar 0x1329280f0 'self' 'int'
|   |   |       `-CallExpr 0x13300ae58 <col:26, col:45> '<dependent type>' contains-errors
|   |   |         |-DeclRefExpr 0x13300add0 <col:26> 'int ()' Function 0x13300ad18 'u128_neg' 'int ()'
|   |   |         `-CXXDependentScopeMemberExpr 0x13300ae10 <col:35, col:41> '<dependent type>' contains-errors lvalue ->mask
|   |   |           `-RecoveryExpr 0x13300adf0 <col:35> '<dependent type>' contains-errors lvalue
|   |   `-IfStmt 0x13300b548 <line:30:12, line:38:5> has_else
|   |     |-RecoveryExpr 0x13300b188 <line:30:15, col:59> '_Bool' contains-errors
|   |     |-CompoundStmt 0x13300b4f0 <col:62, line:36:5>
|   |     `-CompoundStmt 0x13300b530 <col:12, line:38:5>
|   |       `-ReturnStmt 0x13300b520 <line:37:9, col:16>
|   |         `-IntegerLiteral 0x13300b500 <col:16> 'int' 0
|   |-IfStmt 0x13300b7b0 <line:39:5, line:40:16>
|   | |-UnaryOperator 0x13300b768 <line:39:8, col:27> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-CallExpr 0x13300b740 <col:9, col:27> '<dependent type>' contains-errors
|   | |   |-DeclRefExpr 0x13300b6b8 <col:9> 'int ()' Function 0x13300b600 'chkmask' 'int ()'
|   | |   `-CXXDependentScopeMemberExpr 0x13300b6f8 <col:17, col:23> '<dependent type>' contains-errors lvalue ->mask
|   | |     `-RecoveryExpr 0x13300b6d8 <col:17> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x13300b7a0 <line:40:9, col:16>
|   |   `-IntegerLiteral 0x13300b780 <col:16> 'int' 0
|   |-BinaryOperator 0x13300b980 <line:42:5, col:49> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x13300b818 <col:5, col:11> '<dependent type>' contains-errors lvalue ->neta
|   | | `-RecoveryExpr 0x13300b7f0 <col:5> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x13300b7d0 <col:5> 'int' lvalue ParmVar 0x1329280f0 'self' 'int'
|   | `-CallExpr 0x13300b950 <col:18, col:49> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x13300b860 <col:18> 'int ()' Function 0x13300a7c0 'u128_and' 'int ()'
|   |   |-CXXDependentScopeMemberExpr 0x13300b8a0 <col:27, col:33> '<dependent type>' contains-errors lvalue ->neta
|   |   | `-RecoveryExpr 0x13300b880 <col:27> '<dependent type>' contains-errors lvalue
|   |   `-CXXDependentScopeMemberExpr 0x13300b908 <col:39, col:45> '<dependent type>' contains-errors lvalue ->mask
|   |     `-RecoveryExpr 0x13300b8e8 <col:39> '<dependent type>' contains-errors lvalue
|   `-ReturnStmt 0x13300b9c0 <line:43:5, col:12>
|     `-IntegerLiteral 0x13300b9a0 <col:12> 'int' 1
`-FunctionDecl 0x132941c18 <line:7:9> col:9 implicit used strtoul 'unsigned long (const char *, char **, int)' extern
  |-ParmVarDecl 0x132941d18 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x132941d80 <<invalid sloc>> <invalid sloc> 'char **'
  |-ParmVarDecl 0x132941de8 <<invalid sloc>> <invalid sloc> 'int'
  `-BuiltinAttr 0x132941cc0 <<invalid sloc>> Implicit 879
