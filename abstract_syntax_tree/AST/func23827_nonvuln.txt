TranslationUnitDecl 0x130855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1308564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x130855bd0 '__int128'
|-TypedefDecl 0x130856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x130855bf0 'unsigned __int128'
|-TypedefDecl 0x13100be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13100bc00 'struct __NSConstantString_tag'
|   `-Record 0x130856580 '__NSConstantString_tag'
|-TypedefDecl 0x13100be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x130855d90 '__SVInt8_t'
|-TypedefDecl 0x13100bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x130855db0 '__SVInt16_t'
|-TypedefDecl 0x13100bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x130855dd0 '__SVInt32_t'
|-TypedefDecl 0x13100bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x130855df0 '__SVInt64_t'
|-TypedefDecl 0x13100c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x130855e10 '__SVUint8_t'
|-TypedefDecl 0x13100c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x130855e30 '__SVUint16_t'
|-TypedefDecl 0x13100c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x130855e50 '__SVUint32_t'
|-TypedefDecl 0x13100c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x130855e70 '__SVUint64_t'
|-TypedefDecl 0x13100c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x130855e90 '__SVFloat16_t'
|-TypedefDecl 0x13100c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x130855eb0 '__SVFloat32_t'
|-TypedefDecl 0x13100c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x130855ed0 '__SVFloat64_t'
|-TypedefDecl 0x13100c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x130855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13100c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x130855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13100c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x130855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13100c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x130855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13100c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x130855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13100c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x130855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13100c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x130855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13100c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x130855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13100c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x130855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13100c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x130856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13100c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x130856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13100c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x130856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13100c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x130856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13100c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x130856090 '__clang_svint8x3_t'
|-TypedefDecl 0x13100c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1308560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13100c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1308560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13100c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1308560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13100c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x130856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13100ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x130856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13100cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x130856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13100cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x130856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13100cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x130856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13100d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1308561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13100d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1308561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13100d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1308561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13100d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x130856210 '__clang_svint8x4_t'
|-TypedefDecl 0x13100d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x130856230 '__clang_svint16x4_t'
|-TypedefDecl 0x13100d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x130856250 '__clang_svint32x4_t'
|-TypedefDecl 0x13100d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x130856270 '__clang_svint64x4_t'
|-TypedefDecl 0x13100d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x130856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13100d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1308562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13100d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1308562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13100d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1308562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13100d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x130856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13100d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x130856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13100d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x130856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13100d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x130856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13100da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x130856390 '__SVBool_t'
|-TypedefDecl 0x13100da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1308563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13100dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1308563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13100db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1308563f0 '__SVCount_t'
|-TypedefDecl 0x13100dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13100dbb0 'char *'
|   `-BuiltinType 0x1308556b0 'char'
|-TypedefDecl 0x13100dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13100dbb0 'char *'
|   `-BuiltinType 0x1308556b0 'char'
`-FunctionDecl 0x13100dfa8 <dataset_diviso_filec/func23827_nonvuln.c:1:1, line:79:1> line:1:5 invalid EncodePolicyOID 'int (int *, int *, const char *, void *)'
  |-ParmVarDecl 0x13100dd28 <col:21, col:27> col:27 referenced invalid out 'int *'
  |-ParmVarDecl 0x13100dda8 <col:32, col:40> col:40 invalid outSz 'int *'
  |-ParmVarDecl 0x13100de28 <col:47, col:59> col:59 used in 'const char *'
  |-ParmVarDecl 0x13100dea8 <col:63, col:69> col:69 used heap 'void *'
  `-CompoundStmt 0x131029908 <line:2:1, line:79:1>
    |-DeclStmt 0x13100e210 <line:4:5, col:28>
    | |-VarDecl 0x13100e088 <col:5, col:11> col:11 used token 'char *'
    | |-VarDecl 0x13100e108 <col:5, col:19> col:19 used str 'char *'
    | `-VarDecl 0x13100e188 <col:5, col:25> col:25 used ptr 'char *'
    |-CStyleCastExpr 0x13100e270 <line:7:5, col:11> 'void' <ToVoid>
    | `-ImplicitCastExpr 0x13100e258 <col:11> 'void *' <LValueToRValue> part_of_explicit_cast
    |   `-DeclRefExpr 0x13100e228 <col:11> 'void *' lvalue ParmVar 0x13100dea8 'heap' 'void *'
    |-IfStmt 0x132008450 <line:9:5, line:10:16>
    | |-BinaryOperator 0x1320083e8 <line:9:9, col:61> 'int' contains-errors '||'
    | | |-BinaryOperator 0x132008388 <col:9, col:50> 'int' contains-errors '||'
    | | | |-BinaryOperator 0x132008318 <col:9, col:33> 'int' contains-errors '||'
    | | | | |-BinaryOperator 0x1320082b8 <col:9, col:16> 'int' contains-errors '=='
    | | | | | |-RecoveryExpr 0x13100e298 <col:9> '<dependent type>' contains-errors lvalue
    | | | | | `-RecoveryExpr 0x132008298 <col:16> '<dependent type>' contains-errors lvalue
    | | | | `-BinaryOperator 0x1320082f8 <col:24, col:33> 'int' contains-errors '=='
    | | | |   |-RecoveryExpr 0x13100e2f0 <col:24> '<dependent type>' contains-errors lvalue
    | | | |   `-RecoveryExpr 0x1320082d8 <col:33> '<dependent type>' contains-errors lvalue
    | | | `-BinaryOperator 0x132008368 <col:41, col:50> 'int' contains-errors '<'
    | | |   |-UnaryOperator 0x132008350 <col:41, col:42> '<dependent type>' contains-errors prefix '*' cannot overflow
    | | |   | `-ImplicitCastExpr 0x132008338 <col:42> '<dependent type>' contains-errors <LValueToRValue>
    | | |   |   `-RecoveryExpr 0x13100e368 <col:42> '<dependent type>' contains-errors lvalue
    | | |   `-IntegerLiteral 0x13100e3b8 <col:50> 'int' 2
    | | `-BinaryOperator 0x1320083c8 <col:55, col:61> 'int' contains-errors '=='
    | |   |-DeclRefExpr 0x132008220 <col:55> 'const char *' lvalue ParmVar 0x13100de28 'in' 'const char *'
    | |   `-RecoveryExpr 0x1320083a8 <col:61> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x132008440 <line:10:9, col:16>
    |   `-RecoveryExpr 0x132008420 <col:16> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x1320087e0 <line:15:5, line:16:16>
    | |-BinaryOperator 0x132008778 <line:15:9, col:16> 'int' contains-errors '=='
    | | |-DeclRefExpr 0x132008700 <col:9> 'char *' lvalue Var 0x13100e108 'str' 'char *'
    | | `-RecoveryExpr 0x132008758 <col:16> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x1320087d0 <line:16:9, col:16>
    |   `-RecoveryExpr 0x1320087b0 <col:16> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x132008a10 <line:17:5, col:27> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1320088e0 <col:5> 'int ()' Function 0x132008828 'XMEMCPY' 'int ()'
    | |-DeclRefExpr 0x132008900 <col:13> 'char *' lvalue Var 0x13100e108 'str' 'char *'
    | |-DeclRefExpr 0x132008920 <col:18> 'const char *' lvalue ParmVar 0x13100de28 'in' 'const char *'
    | `-BinaryOperator 0x1320089f0 <col:22, col:26> '<dependent type>' contains-errors '+'
    |   |-RecoveryExpr 0x1320089d0 <col:22> '<dependent type>' contains-errors lvalue
    |   `-IntegerLiteral 0x132008958 <col:26> 'int' 1
    |-BinaryOperator 0x132008d48 <line:22:5, col:37> 'char *' '='
    | |-DeclRefExpr 0x132008a68 <col:5> 'char *' lvalue Var 0x13100e088 'token' 'char *'
    | `-ImplicitCastExpr 0x132008d30 <col:13, col:37> 'char *' <IntegralToPointer>
    |   `-CallExpr 0x132008cc8 <col:13, col:37> 'int'
    |     |-ImplicitCastExpr 0x132008cb0 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x132008b68 <col:13> 'int ()' Function 0x132008ab0 'XSTRTOK' 'int ()'
    |     |-ImplicitCastExpr 0x132008d00 <col:21> 'char *' <LValueToRValue>
    |     | `-DeclRefExpr 0x132008b88 <col:21> 'char *' lvalue Var 0x13100e108 'str' 'char *'
    |     |-ImplicitCastExpr 0x132008d18 <col:26> 'char *' <ArrayToPointerDecay>
    |     | `-StringLiteral 0x132008bf0 <col:26> 'char[4]' lvalue "STR"
    |     `-UnaryOperator 0x132008c60 <col:33, col:34> 'char **' prefix '&' cannot overflow
    |       `-DeclRefExpr 0x132008c10 <col:34> 'char *' lvalue Var 0x13100e188 'ptr' 'char *'
    |-WhileStmt 0x131029808 <line:23:5, line:73:5>
    | |-RecoveryExpr 0x132008d88 <line:23:12, col:21> '_Bool' contains-errors
    | `-CompoundStmt 0x1310297f0 <line:24:5, line:73:5>
    |   `-IfStmt 0x131029728 <line:27:9, line:69:9> has_else
    |     |-RecoveryExpr 0x132008dc8 <line:27:13, col:23> '_Bool' contains-errors
    |     |-CompoundStmt 0x132009000 <col:26, line:34:9>
    |     | `-IfStmt 0x132008f78 <line:28:13, line:31:13>
    |     |   |-RecoveryExpr 0x132008e08 <line:28:17, col:23> '_Bool' contains-errors
    |     |   `-CompoundStmt 0x132008f68 <col:26, line:31:13>
    |     `-IfStmt 0x1310296f8 <line:35:14, line:69:9> has_else
    |       |-RecoveryExpr 0x132009038 <line:35:18, col:28> '_Bool' contains-errors
    |       |-CompoundStmt 0x131029278 <col:31, line:47:9>
    |       | |-IfStmt 0x132009108 <line:36:13, line:39:13>
    |       | | |-RecoveryExpr 0x132009078 <line:36:17, col:23> '_Bool' contains-errors
    |       | | `-CompoundStmt 0x1320090f8 <col:28, line:39:13>
    |       | `-IfStmt 0x131029210 <line:41:13, line:44:13>
    |       |   |-RecoveryExpr 0x132009178 <line:41:17, col:24> '_Bool' contains-errors
    |       |   `-CompoundStmt 0x131029200 <col:31, line:44:13>
    |       `-CompoundStmt 0x1310296d0 <line:48:14, line:69:9>
    |         |-DeclStmt 0x131029338 <line:50:13, col:26>
    |         | `-VarDecl 0x1310292b0 <col:13, col:25> col:21 used i 'int' cinit
    |         |   `-IntegerLiteral 0x131029318 <col:25> 'int' 0
    |         |-WhileStmt 0x131029458 <line:53:13, line:57:13>
    |         | |-RecoveryExpr 0x131029370 <line:53:20, col:27> '_Bool' contains-errors
    |         | `-CompoundStmt 0x131029448 <col:32, line:57:13>
    |         `-IfStmt 0x131029558 <line:59:13, line:62:13>
    |           |-RecoveryExpr 0x1310294c8 <line:59:17, col:37> '_Bool' contains-errors
    |           `-CompoundStmt 0x131029548 <col:44, line:62:13>
    `-ReturnStmt 0x1310298f8 <line:78:5, col:12>
      `-IntegerLiteral 0x1310298d8 <col:12> 'int' 0
