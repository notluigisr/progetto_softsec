TranslationUnitDecl 0x124855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1248564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x124855bd0 '__int128'
|-TypedefDecl 0x124856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x124855bf0 'unsigned __int128'
|-TypedefDecl 0x124926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x124926000 'struct __NSConstantString_tag'
|   `-Record 0x124856580 '__NSConstantString_tag'
|-TypedefDecl 0x124926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x124855d90 '__SVInt8_t'
|-TypedefDecl 0x124926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x124855db0 '__SVInt16_t'
|-TypedefDecl 0x124926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x124855dd0 '__SVInt32_t'
|-TypedefDecl 0x1249263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x124855df0 '__SVInt64_t'
|-TypedefDecl 0x124926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x124855e10 '__SVUint8_t'
|-TypedefDecl 0x1249264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x124855e30 '__SVUint16_t'
|-TypedefDecl 0x124926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x124855e50 '__SVUint32_t'
|-TypedefDecl 0x124926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x124855e70 '__SVUint64_t'
|-TypedefDecl 0x1249265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x124855e90 '__SVFloat16_t'
|-TypedefDecl 0x124926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x124855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1249266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x124855ed0 '__SVFloat64_t'
|-TypedefDecl 0x124926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x124855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x124926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x124855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1249267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x124855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x124926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x124855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1249268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x124855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x124926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x124855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x124926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x124855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1249269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x124855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x124926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x124855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x124926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x124856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x124926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x124856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x124926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x124856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x124926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x124856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x124926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x124856090 '__clang_svint8x3_t'
|-TypedefDecl 0x124926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1248560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x124926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1248560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x124926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1248560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x124926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x124856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x124926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x124856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x124926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x124856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x124926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x124856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x124926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x124856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x124927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1248561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x124927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1248561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1249278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1248561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x124927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x124856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1249279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x124856230 '__clang_svint16x4_t'
|-TypedefDecl 0x124927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x124856250 '__clang_svint32x4_t'
|-TypedefDecl 0x124927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x124856270 '__clang_svint64x4_t'
|-TypedefDecl 0x124927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x124856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x124927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1248562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x124927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1248562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x124927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1248562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x124927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x124856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x124927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x124856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x124927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x124856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x124927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x124856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x124927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x124856390 '__SVBool_t'
|-TypedefDecl 0x124927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1248563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x124927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1248563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x124927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1248563f0 '__SVCount_t'
|-TypedefDecl 0x124927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x124927fb0 'char *'
|   `-BuiltinType 0x1248556b0 'char'
|-TypedefDecl 0x124928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x124927fb0 'char *'
|   `-BuiltinType 0x1248556b0 'char'
|-FunctionDecl 0x125008238 <dataset_diviso_filec/func8056_vuln.c:1:1, line:20:1> line:1:21 invalid get_sb_block 'int (void **, struct super_block *)' static
| |-ParmVarDecl 0x124928128 <col:34, col:41> col:41 used data 'void **'
| |-ParmVarDecl 0x124928718 <col:47, col:67> col:67 used sb 'struct super_block *'
| `-CompoundStmt 0x125808f68 <line:2:1, line:20:1>
|   |-DeclStmt 0x125008418 <line:4:2, col:33>
|   | `-VarDecl 0x125008308 <col:2, col:29> col:9 used options 'char *' cinit
|   |   `-CStyleCastExpr 0x1250083f0 <col:19, col:29> 'char *' <BitCast>
|   |     `-ImplicitCastExpr 0x1250083d8 <col:28, col:29> 'void *' <LValueToRValue> part_of_explicit_cast
|   |       `-UnaryOperator 0x1250083a8 <col:28, col:29> 'void *' lvalue prefix '*' cannot overflow
|   |         `-ImplicitCastExpr 0x125008390 <col:29> 'void **' <LValueToRValue>
|   |           `-DeclRefExpr 0x125008370 <col:29> 'void **' lvalue ParmVar 0x124928128 'data' 'void **'
|   |-IfStmt 0x125008998 <line:6:2, line:7:10>
|   | |-BinaryOperator 0x125008948 <line:6:6, col:48> 'int' '||'
|   | | |-UnaryOperator 0x125008468 <col:6, col:7> 'int' prefix '!' cannot overflow
|   | | | `-ImplicitCastExpr 0x125008450 <col:7> 'char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x125008430 <col:7> 'char *' lvalue Var 0x125008308 'options' 'char *'
|   | | `-BinaryOperator 0x125008928 <col:18, col:48> 'int' '!='
|   | |   |-CallExpr 0x125008858 <col:18, col:43> 'int'
|   | |   | |-ImplicitCastExpr 0x125008840 <col:18> 'int (*)(const char *, const char *, unsigned long)' <FunctionToPointerDecay>
|   | |   | | `-DeclRefExpr 0x125008718 <col:18> 'int (const char *, const char *, unsigned long)' Function 0x1250084c8 'strncmp' 'int (const char *, const char *, unsigned long)'
|   | |   | |-ImplicitCastExpr 0x1250088a8 <col:26> 'const char *' <NoOp>
|   | |   | | `-ImplicitCastExpr 0x125008890 <col:26> 'char *' <LValueToRValue>
|   | |   | |   `-DeclRefExpr 0x125008738 <col:26> 'char *' lvalue Var 0x125008308 'options' 'char *'
|   | |   | |-ImplicitCastExpr 0x1250088d8 <col:35> 'const char *' <NoOp>
|   | |   | | `-ImplicitCastExpr 0x1250088c0 <col:35> 'char *' <ArrayToPointerDecay>
|   | |   | |   `-StringLiteral 0x1250087a0 <col:35> 'char[4]' lvalue "STR"
|   | |   | `-ImplicitCastExpr 0x1250088f0 <col:42> 'unsigned long' <IntegralCast>
|   | |   |   `-IntegerLiteral 0x1250087c0 <col:42> 'int' 3
|   | |   `-IntegerLiteral 0x125008908 <col:48> 'int' 0
|   | `-ReturnStmt 0x125008988 <line:7:3, col:10>
|   |   `-IntegerLiteral 0x125008968 <col:10> 'int' 1
|   |-CompoundAssignOperator 0x1250089f8 <line:8:2, col:13> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
|   | |-DeclRefExpr 0x1250089b8 <col:2> 'char *' lvalue Var 0x125008308 'options' 'char *'
|   | `-IntegerLiteral 0x1250089d8 <col:13> 'int' 3
|   |-IfStmt 0x1250090f8 <line:11:2, line:15:2>
|   | |-BinaryOperator 0x125008e20 <line:11:6, col:30> 'int' '&&'
|   | | |-ImplicitCastExpr 0x125008e08 <col:6, col:7> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x125008df0 <col:6, col:7> 'char' <LValueToRValue>
|   | | |   `-UnaryOperator 0x125008d20 <col:6, col:7> 'char' lvalue prefix '*' cannot overflow
|   | | |     `-ImplicitCastExpr 0x125008d08 <col:7> 'char *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x125008ce8 <col:7> 'char *' lvalue Var 0x125008308 'options' 'char *'
|   | | `-BinaryOperator 0x125008dd0 <col:18, col:30> 'int' '!='
|   | |   |-ImplicitCastExpr 0x125008db8 <col:18, col:19> 'int' <IntegralCast>
|   | |   | `-ImplicitCastExpr 0x125008da0 <col:18, col:19> 'char' <LValueToRValue>
|   | |   |   `-UnaryOperator 0x125008d70 <col:18, col:19> 'char' lvalue prefix '*' cannot overflow
|   | |   |     `-ImplicitCastExpr 0x125008d58 <col:19> 'char *' <LValueToRValue>
|   | |   |       `-DeclRefExpr 0x125008d38 <col:19> 'char *' lvalue Var 0x125008308 'options' 'char *'
|   | |   `-CharacterLiteral 0x125008d88 <col:30> 'int' 44
|   | `-CompoundStmt 0x1250090d8 <col:35, line:15:2>
|   |   |-CallExpr 0x125009040 <line:12:3, line:13:24> 'int'
|   |   | |-ImplicitCastExpr 0x125009028 <line:12:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x125008f20 <col:3> 'int ()' Function 0x125008e68 'ext3_msg' 'int ()'
|   |   | |-ImplicitCastExpr 0x125009078 <col:12> 'struct super_block *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x125008f40 <col:12> 'struct super_block *' lvalue ParmVar 0x124928718 'sb' 'struct super_block *'
|   |   | |-ImplicitCastExpr 0x125009090 <col:16> 'char *' <ArrayToPointerDecay>
|   |   | | `-StringLiteral 0x125008f60 <col:16> 'char[4]' lvalue "STR"
|   |   | `-CStyleCastExpr 0x125009000 <line:13:10, col:20> 'char *' <BitCast>
|   |   |   `-ImplicitCastExpr 0x125008fe8 <col:19, col:20> 'void *' <LValueToRValue> part_of_explicit_cast
|   |   |     `-UnaryOperator 0x125008fb8 <col:19, col:20> 'void *' lvalue prefix '*' cannot overflow
|   |   |       `-ImplicitCastExpr 0x125008fa0 <col:20> 'void **' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x125008f80 <col:20> 'void **' lvalue ParmVar 0x124928128 'data' 'void **'
|   |   `-ReturnStmt 0x1250090c8 <line:14:3, col:10>
|   |     `-IntegerLiteral 0x1250090a8 <col:10> 'int' 1
|   |-IfStmt 0x125808e18 <line:16:2, line:17:10>
|   | |-BinaryOperator 0x1250091b0 <line:16:6, col:18> 'int' '=='
|   | | |-ImplicitCastExpr 0x125009198 <col:6, col:7> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x125009180 <col:6, col:7> 'char' <LValueToRValue>
|   | | |   `-UnaryOperator 0x125009150 <col:6, col:7> 'char' lvalue prefix '*' cannot overflow
|   | | |     `-ImplicitCastExpr 0x125009138 <col:7> 'char *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x125009118 <col:7> 'char *' lvalue Var 0x125008308 'options' 'char *'
|   | | `-CharacterLiteral 0x125009168 <col:18> 'int' 44
|   | `-UnaryOperator 0x125808e00 <line:17:3, col:10> 'char *' postfix '++'
|   |   `-DeclRefExpr 0x1250091d0 <col:3> 'char *' lvalue Var 0x125008308 'options' 'char *'
|   |-BinaryOperator 0x125808f00 <line:18:2, col:19> 'void *' '='
|   | |-UnaryOperator 0x125808e70 <col:2, col:3> 'void *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x125808e58 <col:3> 'void **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x125808e38 <col:3> 'void **' lvalue ParmVar 0x124928128 'data' 'void **'
|   | `-CStyleCastExpr 0x125808ed8 <col:10, col:19> 'void *' <BitCast>
|   |   `-ImplicitCastExpr 0x125808ec0 <col:19> 'char *' <LValueToRValue> part_of_explicit_cast
|   |     `-DeclRefExpr 0x125808e88 <col:19> 'char *' lvalue Var 0x125008308 'options' 'char *'
|   `-ReturnStmt 0x125808f58 <line:19:2, col:9>
|     `-RecoveryExpr 0x125808f38 <col:9> '<dependent type>' contains-errors lvalue
`-FunctionDecl 0x1250084c8 <line:6:18> col:18 implicit used strncmp 'int (const char *, const char *, unsigned long)' extern
  |-ParmVarDecl 0x1250085c8 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x125008630 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x125008698 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x125008570 <<invalid sloc>> Implicit 888
