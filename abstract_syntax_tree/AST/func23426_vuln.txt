TranslationUnitDecl 0x153055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1530564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x153055bd0 '__int128'
|-TypedefDecl 0x153056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x153055bf0 'unsigned __int128'
|-TypedefDecl 0x15380be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15380bc00 'struct __NSConstantString_tag'
|   `-Record 0x153056580 '__NSConstantString_tag'
|-TypedefDecl 0x15380be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x153055d90 '__SVInt8_t'
|-TypedefDecl 0x15380bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x153055db0 '__SVInt16_t'
|-TypedefDecl 0x15380bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x153055dd0 '__SVInt32_t'
|-TypedefDecl 0x15380bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x153055df0 '__SVInt64_t'
|-TypedefDecl 0x15380c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x153055e10 '__SVUint8_t'
|-TypedefDecl 0x15380c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x153055e30 '__SVUint16_t'
|-TypedefDecl 0x15380c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x153055e50 '__SVUint32_t'
|-TypedefDecl 0x15380c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x153055e70 '__SVUint64_t'
|-TypedefDecl 0x15380c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x153055e90 '__SVFloat16_t'
|-TypedefDecl 0x15380c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x153055eb0 '__SVFloat32_t'
|-TypedefDecl 0x15380c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x153055ed0 '__SVFloat64_t'
|-TypedefDecl 0x15380c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x153055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15380c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x153055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15380c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x153055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15380c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x153055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15380c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x153055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15380c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x153055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15380c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x153055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15380c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x153055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15380c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x153055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15380c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x153056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15380c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x153056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15380c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x153056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15380c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x153056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15380c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x153056090 '__clang_svint8x3_t'
|-TypedefDecl 0x15380c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1530560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15380c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1530560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15380c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1530560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15380c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x153056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15380ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x153056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15380cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x153056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15380cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x153056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15380cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x153056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15380d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1530561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15380d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1530561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15380d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1530561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15380d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x153056210 '__clang_svint8x4_t'
|-TypedefDecl 0x15380d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x153056230 '__clang_svint16x4_t'
|-TypedefDecl 0x15380d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x153056250 '__clang_svint32x4_t'
|-TypedefDecl 0x15380d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x153056270 '__clang_svint64x4_t'
|-TypedefDecl 0x15380d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x153056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15380d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1530562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15380d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1530562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15380d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1530562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15380d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x153056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15380d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x153056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15380d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x153056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15380d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x153056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15380da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x153056390 '__SVBool_t'
|-TypedefDecl 0x15380da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1530563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15380dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1530563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15380db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1530563f0 '__SVCount_t'
|-TypedefDecl 0x15380dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15380dbb0 'char *'
|   `-BuiltinType 0x1530556b0 'char'
|-TypedefDecl 0x15380dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15380dbb0 'char *'
|   `-BuiltinType 0x1530556b0 'char'
|-FunctionDecl 0x153826878 <dataset_diviso_filec/func23426_vuln.c:1:1, line:23:1> line:1:1 lyd_new_leaf 'int (struct lyd_node *, const struct lys_module *, const char *, const char *)'
| |-ParmVarDecl 0x15380e248 <col:14, col:31> col:31 used parent 'struct lyd_node *'
| |-ParmVarDecl 0x153826628 <col:39, col:64> col:64 used module 'const struct lys_module *'
| |-ParmVarDecl 0x1538266a8 <col:72, col:84> col:84 used name 'const char *'
| |-ParmVarDecl 0x153826728 <col:90, col:102> col:102 used val_str 'const char *'
| `-CompoundStmt 0x15382a800 <line:2:1, line:23:1>
|   |-DeclStmt 0x153826c60 <line:3:5, col:51>
|   | |-RecordDecl 0x153826988 <col:11, col:18> col:18 struct lys_node
|   | |-VarDecl 0x153826af8 <col:5, col:36> col:28 used snode 'const struct lys_node *' cinit
|   | | `-RecoveryExpr 0x153826b90 <col:36> '<dependent type>' contains-errors lvalue
|   | `-VarDecl 0x153826bd8 <col:5, col:43> col:43 used siblings 'const struct lys_node *'
|   |-IfStmt 0x153826e28 <line:5:5, line:8:5>
|   | |-BinaryOperator 0x153826da8 <line:5:9, col:34> 'int' '||'
|   | | |-ParenExpr 0x153826d38 <col:9, col:28> 'int'
|   | | | `-BinaryOperator 0x153826d18 <col:10, col:22> 'int' '&&'
|   | | |   |-UnaryOperator 0x153826cb0 <col:10, col:11> 'int' prefix '!' cannot overflow
|   | | |   | `-ImplicitCastExpr 0x153826c98 <col:11> 'struct lyd_node *' <LValueToRValue>
|   | | |   |   `-DeclRefExpr 0x153826c78 <col:11> 'struct lyd_node *' lvalue ParmVar 0x15380e248 'parent' 'struct lyd_node *'
|   | | |   `-UnaryOperator 0x153826d00 <col:21, col:22> 'int' prefix '!' cannot overflow
|   | | |     `-ImplicitCastExpr 0x153826ce8 <col:22> 'const struct lys_module *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x153826cc8 <col:22> 'const struct lys_module *' lvalue ParmVar 0x153826628 'module' 'const struct lys_module *'
|   | | `-UnaryOperator 0x153826d90 <col:33, col:34> 'int' prefix '!' cannot overflow
|   | |   `-ImplicitCastExpr 0x153826d78 <col:34> 'const char *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x153826d58 <col:34> 'const char *' lvalue ParmVar 0x1538266a8 'name' 'const char *'
|   | `-CompoundStmt 0x153826e10 <col:40, line:8:5>
|   |   `-ReturnStmt 0x153826e00 <line:7:9, col:16>
|   |     `-RecoveryExpr 0x153826de0 <col:16> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x1538270c8 <line:10:5, col:53> 'const struct lys_node *' '='
|   | |-DeclRefExpr 0x153826e48 <col:5> 'const struct lys_node *' lvalue Var 0x153826bd8 'siblings' 'const struct lys_node *'
|   | `-ImplicitCastExpr 0x1538270b0 <col:16, col:53> 'const struct lys_node *' <IntegralToPointer>
|   |   `-CallExpr 0x153827048 <col:16, col:53> 'int'
|   |     |-ImplicitCastExpr 0x153827030 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x153826f80 <col:16> 'int ()' Function 0x153826ec8 'lyd_new_find_schema' 'int ()'
|   |     |-ImplicitCastExpr 0x153827080 <col:36> 'struct lyd_node *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x153826fa0 <col:36> 'struct lyd_node *' lvalue ParmVar 0x15380e248 'parent' 'struct lyd_node *'
|   |     |-ImplicitCastExpr 0x153827098 <col:44> 'const struct lys_module *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x153826fc0 <col:44> 'const struct lys_module *' lvalue ParmVar 0x153826628 'module' 'const struct lys_module *'
|   |     `-IntegerLiteral 0x153826fe0 <col:52> 'int' 0
|   |-IfStmt 0x153827198 <line:11:5, line:14:5>
|   | |-UnaryOperator 0x153827120 <line:11:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x153827108 <col:10> 'const struct lys_node *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1538270e8 <col:10> 'const struct lys_node *' lvalue Var 0x153826bd8 'siblings' 'const struct lys_node *'
|   | `-CompoundStmt 0x153827180 <col:20, line:14:5>
|   |   `-ReturnStmt 0x153827170 <line:13:9, col:16>
|   |     `-RecoveryExpr 0x153827150 <col:16> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x15382a588 <line:16:5, line:20:5>
|   | |-BinaryOperator 0x153829f78 <line:16:9, col:113> 'int' contains-errors '||'
|   | | |-CallExpr 0x153829ef8 <col:9, col:107> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x153827298 <col:9> 'int ()' Function 0x1538271e0 'lys_getnext_data' 'int ()'
|   | | | |-DeclRefExpr 0x1538272b8 <col:26> 'const struct lys_module *' lvalue ParmVar 0x153826628 'module' 'const struct lys_module *'
|   | | | |-CallExpr 0x153829de8 <col:34, col:53> 'int'
|   | | | | |-ImplicitCastExpr 0x153829dd0 <col:34> 'int (*)()' <FunctionToPointerDecay>
|   | | | | | `-DeclRefExpr 0x1538273b8 <col:34> 'int ()' Function 0x153827300 'lys_parent' 'int ()'
|   | | | | `-ImplicitCastExpr 0x153829e10 <col:45> 'const struct lys_node *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x1538273d8 <col:45> 'const struct lys_node *' lvalue Var 0x153826bd8 'siblings' 'const struct lys_node *'
|   | | | |-DeclRefExpr 0x153827450 <col:56> 'const char *' lvalue ParmVar 0x1538266a8 'name' 'const char *'
|   | | | |-CallExpr 0x153829e58 <col:62, col:73> 'unsigned long'
|   | | | | |-ImplicitCastExpr 0x153829e40 <col:62> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   | | | | | `-DeclRefExpr 0x153829a70 <col:62> 'unsigned long (const char *)' Function 0x1538274a8 'strlen' 'unsigned long (const char *)'
|   | | | | `-ImplicitCastExpr 0x153829e80 <col:69> 'const char *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x153829a90 <col:69> 'const char *' lvalue ParmVar 0x1538266a8 'name' 'const char *'
|   | | | |-BinaryOperator 0x153829ed8 <col:76, col:91> '<dependent type>' contains-errors '|'
|   | | | | |-RecoveryExpr 0x153829e98 <col:76> '<dependent type>' contains-errors lvalue
|   | | | | `-RecoveryExpr 0x153829eb8 <col:91> '<dependent type>' contains-errors lvalue
|   | | | `-UnaryOperator 0x153829c30 <col:101, col:102> 'const struct lys_node **' contains-errors prefix '&' cannot overflow
|   | | |   `-DeclRefExpr 0x153829ba8 <col:102> 'const struct lys_node *' contains-errors lvalue Var 0x153826af8 'snode' 'const struct lys_node *'
|   | | `-UnaryOperator 0x153829f60 <col:112, col:113> 'int' contains-errors prefix '!' cannot overflow
|   | |   `-ImplicitCastExpr 0x153829f48 <col:113> 'const struct lys_node *' contains-errors <LValueToRValue>
|   | |     `-DeclRefExpr 0x153829c98 <col:113> 'const struct lys_node *' contains-errors lvalue Var 0x153826af8 'snode' 'const struct lys_node *'
|   | `-CompoundStmt 0x15382a568 <col:120, line:20:5>
|   |   |-CallExpr 0x15382a4d0 <line:17:9, line:18:69> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x15382a078 <line:17:9> 'int ()' Function 0x153829fc0 'LOGERR' 'int ()'
|   |   | |-CXXDependentScopeMemberExpr 0x15382a0f8 <col:16, col:34> '<dependent type>' contains-errors lvalue ->ctx
|   |   | | `-RecoveryExpr 0x15382a0d0 <col:16, col:26> '<dependent type>' contains-errors lvalue
|   |   | |   `-DeclRefExpr 0x15382a098 <col:16> 'const struct lys_node *' lvalue Var 0x153826bd8 'siblings' 'const struct lys_node *'
|   |   | |-RecoveryExpr 0x15382a430 <col:39> '<dependent type>' contains-errors lvalue
|   |   | |-StringLiteral 0x15382a1a0 <col:50> 'char[4]' lvalue "STR"
|   |   | |-DeclRefExpr 0x15382a1c0 <line:18:16> 'const char *' lvalue ParmVar 0x1538266a8 'name' 'const char *'
|   |   | |-RecoveryExpr 0x15382a4a8 <col:22, col:49> '<dependent type>' contains-errors lvalue
|   |   | | `-CallExpr 0x15382a468 <col:22, col:46> 'int'
|   |   | |   |-ImplicitCastExpr 0x15382a450 <col:22> 'int (*)()' <FunctionToPointerDecay>
|   |   | |   | `-DeclRefExpr 0x15382a2c0 <col:22> 'int ()' Function 0x15382a208 'lys_node_module' 'int ()'
|   |   | |   `-ImplicitCastExpr 0x15382a490 <col:38> 'const struct lys_node *' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x15382a2e0 <col:38> 'const struct lys_node *' lvalue Var 0x153826bd8 'siblings' 'const struct lys_node *'
|   |   | `-RecoveryExpr 0x15382a3b8 <col:55, col:65> '<dependent type>' contains-errors lvalue
|   |   |   `-DeclRefExpr 0x15382a380 <col:55> 'const struct lys_node *' lvalue Var 0x153826bd8 'siblings' 'const struct lys_node *'
|   |   `-ReturnStmt 0x15382a558 <line:19:9, col:16>
|   |     `-RecoveryExpr 0x15382a538 <col:16> '<dependent type>' contains-errors lvalue
|   `-ReturnStmt 0x15382a7f0 <line:22:5, col:54>
|     `-CallExpr 0x15382a760 <col:12, col:54> 'int' contains-errors
|       |-ImplicitCastExpr 0x15382a748 <col:12> 'int (*)()' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x15382a688 <col:12> 'int ()' Function 0x15382a5d0 '_lyd_new_leaf' 'int ()'
|       |-ImplicitCastExpr 0x15382a7a8 <col:26> 'struct lyd_node *' <LValueToRValue>
|       | `-DeclRefExpr 0x15382a6a8 <col:26> 'struct lyd_node *' lvalue ParmVar 0x15380e248 'parent' 'struct lyd_node *'
|       |-ImplicitCastExpr 0x15382a7c0 <col:34> 'const struct lys_node *' contains-errors <LValueToRValue>
|       | `-DeclRefExpr 0x15382a6c8 <col:34> 'const struct lys_node *' contains-errors lvalue Var 0x153826af8 'snode' 'const struct lys_node *'
|       |-ImplicitCastExpr 0x15382a7d8 <col:41> 'const char *' <LValueToRValue>
|       | `-DeclRefExpr 0x15382a6e8 <col:41> 'const char *' lvalue ParmVar 0x153826728 'val_str' 'const char *'
|       |-IntegerLiteral 0x15382a708 <col:50> 'int' 0
|       `-IntegerLiteral 0x15382a728 <col:53> 'int' 0
`-FunctionDecl 0x1538274a8 <line:16:62> col:62 implicit used strlen 'unsigned long (const char *)' extern
  |-ParmVarDecl 0x153829a00 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x153827550 <<invalid sloc>> Implicit 902
