TranslationUnitDecl 0x158055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1580564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x158055bd0 '__int128'
|-TypedefDecl 0x158056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x158055bf0 'unsigned __int128'
|-TypedefDecl 0x15000be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15000bc00 'struct __NSConstantString_tag'
|   `-Record 0x158056580 '__NSConstantString_tag'
|-TypedefDecl 0x15000be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x158055d90 '__SVInt8_t'
|-TypedefDecl 0x15000bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x158055db0 '__SVInt16_t'
|-TypedefDecl 0x15000bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x158055dd0 '__SVInt32_t'
|-TypedefDecl 0x15000bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x158055df0 '__SVInt64_t'
|-TypedefDecl 0x15000c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x158055e10 '__SVUint8_t'
|-TypedefDecl 0x15000c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x158055e30 '__SVUint16_t'
|-TypedefDecl 0x15000c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x158055e50 '__SVUint32_t'
|-TypedefDecl 0x15000c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x158055e70 '__SVUint64_t'
|-TypedefDecl 0x15000c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x158055e90 '__SVFloat16_t'
|-TypedefDecl 0x15000c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x158055eb0 '__SVFloat32_t'
|-TypedefDecl 0x15000c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x158055ed0 '__SVFloat64_t'
|-TypedefDecl 0x15000c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x158055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15000c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x158055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15000c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x158055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15000c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x158055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15000c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x158055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15000c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x158055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15000c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x158055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15000c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x158055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15000c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x158055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15000c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x158056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15000c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x158056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15000c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x158056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15000c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x158056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15000c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x158056090 '__clang_svint8x3_t'
|-TypedefDecl 0x15000c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1580560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15000c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1580560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15000c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1580560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15000c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x158056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15000ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x158056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15000cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x158056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15000cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x158056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15000cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x158056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15000d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1580561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15000d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1580561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15000d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1580561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15000d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x158056210 '__clang_svint8x4_t'
|-TypedefDecl 0x15000d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x158056230 '__clang_svint16x4_t'
|-TypedefDecl 0x15000d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x158056250 '__clang_svint32x4_t'
|-TypedefDecl 0x15000d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x158056270 '__clang_svint64x4_t'
|-TypedefDecl 0x15000d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x158056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15000d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1580562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15000d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1580562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15000d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1580562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15000d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x158056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15000d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x158056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15000d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x158056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15000d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x158056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15000da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x158056390 '__SVBool_t'
|-TypedefDecl 0x15000da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1580563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15000dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1580563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15000db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1580563f0 '__SVCount_t'
|-TypedefDecl 0x15000dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15000dbb0 'char *'
|   `-BuiltinType 0x1580556b0 'char'
|-TypedefDecl 0x15000dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15000dbb0 'char *'
|   `-BuiltinType 0x1580556b0 'char'
|-RecordDecl 0x1500268e0 <dataset_diviso_filec/func2589_vuln.c:5:23, col:30> col:30 struct usb_line6
|-FunctionDecl 0x150026f18 <line:1:1, line:84:1> line:1:5 invalid line6_probe 'int (struct usb_interface *, const struct usb_device_id *, const char *, const struct line6_properties *, int (*)(struct usb_line6 *, const struct usb_device_id *), int)'
| |-ParmVarDecl 0x15000e248 <col:17, col:39> col:39 used interface 'struct usb_interface *'
| |-ParmVarDecl 0x150026628 <line:2:3, col:31> col:31 used id 'const struct usb_device_id *'
| |-ParmVarDecl 0x1500266a8 <line:3:3, col:15> col:15 used driver_name 'const char *'
| |-ParmVarDecl 0x150026878 <line:4:3, col:34> col:34 used properties 'const struct line6_properties *'
| |-ParmVarDecl 0x150026cf8 <line:5:3, col:73> col:9 used private_init 'int (*)(struct usb_line6 *, const struct usb_device_id *)'
| |-ParmVarDecl 0x150026d90 <line:6:3, col:10> col:10 invalid data_size 'int'
| `-CompoundStmt 0x150031500 <line:7:1, line:84:1>
|   |-DeclStmt 0x150027418 <line:8:2, col:60>
|   | |-RecordDecl 0x150026ff0 <col:2, col:9> col:9 struct usb_device
|   | `-VarDecl 0x150027158 <col:2, col:59> col:21 used usbdev 'struct usb_device *' cinit
|   |   `-ImplicitCastExpr 0x1500273e8 <col:30, col:59> 'struct usb_device *' <IntegralToPointer>
|   |     `-CallExpr 0x1500273a8 <col:30, col:59> 'int'
|   |       |-ImplicitCastExpr 0x150027390 <col:30> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x150027320 <col:30> 'int ()' Function 0x150027268 'interface_to_usbdev' 'int ()'
|   |       `-ImplicitCastExpr 0x1500273d0 <col:50> 'struct usb_interface *' <LValueToRValue>
|   |         `-DeclRefExpr 0x150027340 <col:50> 'struct usb_interface *' lvalue ParmVar 0x15000e248 'interface' 'struct usb_interface *'
|   |-DeclStmt 0x15002cc18 <line:9:2, col:23>
|   | |-RecordDecl 0x150027430 <col:2, col:9> col:9 struct snd_card
|   | `-VarDecl 0x150027598 <col:2, col:19> col:19 used card 'struct snd_card *'
|   |-DeclStmt 0x15002ce18 <line:10:2, col:25>
|   | |-RecordDecl 0x15002cc30 <col:2, col:9> col:9 struct usb_line6
|   | `-VarDecl 0x15002cd98 <col:2, col:20> col:20 used line6 'struct usb_line6 *'
|   |-DeclStmt 0x15002ceb0 <line:11:2, col:22>
|   | `-VarDecl 0x15002ce48 <col:2, col:6> col:6 used interface_number 'int'
|   |-DeclStmt 0x15002cf48 <line:12:2, col:9>
|   | `-VarDecl 0x15002cee0 <col:2, col:6> col:6 used ret 'int'
|   |-IfStmt 0x15002d1b8 <line:14:2, line:15:11>
|   | |-RecoveryExpr 0x15002d0f0 <line:14:6, col:40> '_Bool' contains-errors
|   | `-ReturnStmt 0x15002d1a8 <line:15:3, col:11>
|   |   `-UnaryOperator 0x15002d190 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |     `-ImplicitCastExpr 0x15002d178 <col:11> '<dependent type>' contains-errors <LValueToRValue>
|   |       `-RecoveryExpr 0x15002d158 <col:11> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x15002d368 <line:18:2, line:19:11>
|   | |-BinaryOperator 0x15002d2a0 <line:18:6, col:47> 'int' contains-errors '!='
|   | | |-CXXDependentScopeMemberExpr 0x15002d238 <col:6, col:25> '<dependent type>' contains-errors lvalue .bNumConfigurations
|   | | | `-RecoveryExpr 0x15002d210 <col:6, col:14> '<dependent type>' contains-errors lvalue
|   | | |   `-DeclRefExpr 0x15002d1d8 <col:6> 'struct usb_device *' lvalue Var 0x150027158 'usbdev' 'struct usb_device *'
|   | | `-IntegerLiteral 0x15002d280 <col:47> 'int' 1
|   | `-ReturnStmt 0x15002d358 <line:19:3, col:11>
|   |   `-UnaryOperator 0x15002d340 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |     `-ImplicitCastExpr 0x15002d328 <col:11> '<dependent type>' contains-errors <LValueToRValue>
|   |       `-RecoveryExpr 0x15002d308 <col:11> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x15002d748 <line:21:2, line:23:36> 'int' contains-errors '='
|   | |-DeclRefExpr 0x15002d388 <line:21:2> 'int' lvalue Var 0x15002cee0 'ret' 'int'
|   | `-CallExpr 0x15002d6f8 <col:8, line:23:36> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x15002d488 <line:21:8> 'int ()' Function 0x15002d3d0 'snd_card_new' 'int ()'
|   |   |-UnaryOperator 0x15002d508 <col:21, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   | `-RecoveryExpr 0x15002d4e0 <col:22, col:33> '<dependent type>' contains-errors lvalue
|   |   |   `-DeclRefExpr 0x15002d4a8 <col:22> 'struct usb_interface *' lvalue ParmVar 0x15000e248 'interface' 'struct usb_interface *'
|   |   |-RecoveryExpr 0x15002d698 <line:22:7> '<dependent type>' contains-errors lvalue
|   |   |-RecoveryExpr 0x15002d6b8 <col:27> '<dependent type>' contains-errors lvalue
|   |   |-RecoveryExpr 0x15002d6d8 <line:23:7> '<dependent type>' contains-errors lvalue
|   |   |-RecoveryExpr 0x15002d568 <col:20> '<dependent type>' contains-errors lvalue
|   |   `-UnaryOperator 0x15002d610 <col:31, col:32> 'struct snd_card **' prefix '&' cannot overflow
|   |     `-DeclRefExpr 0x15002d588 <col:32> 'struct snd_card *' lvalue Var 0x150027598 'card' 'struct snd_card *'
|   |-IfStmt 0x15002d828 <line:24:2, line:25:10>
|   | |-BinaryOperator 0x15002d7c0 <line:24:6, col:12> 'int' '<'
|   | | |-ImplicitCastExpr 0x15002d7a8 <col:6> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x15002d768 <col:6> 'int' lvalue Var 0x15002cee0 'ret' 'int'
|   | | `-IntegerLiteral 0x15002d788 <col:12> 'int' 0
|   | `-ReturnStmt 0x15002d818 <line:25:3, col:10>
|   |   `-ImplicitCastExpr 0x15002d800 <col:10> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x15002d7e0 <col:10> 'int' lvalue Var 0x15002cee0 'ret' 'int'
|   |-BinaryOperator 0x15002d8c8 <line:28:2, col:16> 'struct usb_line6 *' contains-errors '='
|   | |-DeclRefExpr 0x15002d848 <col:2> 'struct usb_line6 *' lvalue Var 0x15002cd98 'line6' 'struct usb_line6 *'
|   | `-RecoveryExpr 0x15002d8a0 <col:10, col:16> '<dependent type>' contains-errors lvalue
|   |   `-DeclRefExpr 0x15002d868 <col:10> 'struct snd_card *' lvalue Var 0x150027598 'card' 'struct snd_card *'
|   |-BinaryOperator 0x15002d968 <line:29:2, col:16> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x15002d920 <col:2, col:9> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x15002d8e8 <col:2> 'struct usb_line6 *' lvalue Var 0x15002cd98 'line6' 'struct usb_line6 *'
|   | `-DeclRefExpr 0x15002d948 <col:16> 'struct snd_card *' lvalue Var 0x150027598 'card' 'struct snd_card *'
|   |-BinaryOperator 0x15002da08 <line:30:2, col:22> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x15002d9c0 <col:2, col:9> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x15002d988 <col:2> 'struct usb_line6 *' lvalue Var 0x15002cd98 'line6' 'struct usb_line6 *'
|   | `-DeclRefExpr 0x15002d9e8 <col:22> 'const struct line6_properties *' lvalue ParmVar 0x150026878 'properties' 'const struct line6_properties *'
|   |-BinaryOperator 0x15002daa8 <line:31:2, col:18> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x15002da60 <col:2, col:9> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x15002da28 <col:2> 'struct usb_line6 *' lvalue Var 0x15002cd98 'line6' 'struct usb_line6 *'
|   | `-DeclRefExpr 0x15002da88 <col:18> 'struct usb_device *' lvalue Var 0x150027158 'usbdev' 'struct usb_device *'
|   |-BinaryOperator 0x15002dba0 <line:32:2, col:30> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x15002db00 <col:2, col:9> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x15002dac8 <col:2> 'struct usb_line6 *' lvalue Var 0x15002cd98 'line6' 'struct usb_line6 *'
|   | `-UnaryOperator 0x15002db88 <col:18, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   `-RecoveryExpr 0x15002db60 <col:19, col:30> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x15002db28 <col:19> 'struct usb_interface *' lvalue ParmVar 0x15000e248 'interface' 'struct usb_interface *'
|   |-CallExpr 0x15002f6f0 <line:34:2, col:33> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x15002f5e0 <col:2> 'char *(char *, const char *)' Function 0x15002f400 'strcpy' 'char *(char *, const char *)'
|   | |-RecoveryExpr 0x15002f638 <col:9, col:15> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x15002f600 <col:9> 'struct snd_card *' lvalue Var 0x150027598 'card' 'struct snd_card *'
|   | `-RecoveryExpr 0x15002f698 <col:19, col:31> '<dependent type>' contains-errors lvalue
|   |   `-DeclRefExpr 0x15002f660 <col:19> 'const struct line6_properties *' lvalue ParmVar 0x150026878 'properties' 'const struct line6_properties *'
|   |-CallExpr 0x15002f7f0 <line:35:2, col:34> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x15002f720 <col:2> 'char *(char *, const char *)' Function 0x15002f400 'strcpy' 'char *(char *, const char *)'
|   | |-RecoveryExpr 0x15002f778 <col:9, col:15> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x15002f740 <col:9> 'struct snd_card *' lvalue Var 0x150027598 'card' 'struct snd_card *'
|   | `-DeclRefExpr 0x15002f7a0 <col:23> 'const char *' lvalue ParmVar 0x1500266a8 'driver_name' 'const char *'
|   |-CallExpr 0x15002f930 <line:36:2, col:42> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x15002f820 <col:2> 'char *(char *, const char *)' Function 0x15002f400 'strcpy' 'char *(char *, const char *)'
|   | |-RecoveryExpr 0x15002f878 <col:9, col:15> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x15002f840 <col:9> 'struct snd_card *' lvalue Var 0x150027598 'card' 'struct snd_card *'
|   | `-RecoveryExpr 0x15002f8d8 <col:26, col:38> '<dependent type>' contains-errors lvalue
|   |   `-DeclRefExpr 0x15002f8a0 <col:26> 'const struct line6_properties *' lvalue ParmVar 0x150026878 'properties' 'const struct line6_properties *'
|   |-CallExpr 0x15002feb8 <line:37:2, line:38:26> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x15002fbc0 <line:37:2> 'int (char *, const char *, ...)' Function 0x15002f9a8 'sprintf' 'int (char *, const char *, ...)'
|   | |-RecoveryExpr 0x15002fc18 <col:10, col:16> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x15002fbe0 <col:10> 'struct snd_card *' lvalue Var 0x150027598 'card' 'struct snd_card *'
|   | |-StringLiteral 0x15002fc80 <col:26> 'char[4]' lvalue "STR"
|   | |-RecoveryExpr 0x15002fcd8 <col:33, col:45> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x15002fca0 <col:33> 'const struct line6_properties *' lvalue ParmVar 0x150026878 'properties' 'const struct line6_properties *'
|   | `-CallExpr 0x15002fe60 <line:38:3, col:25> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x15002fde0 <col:3> 'int ()' Function 0x15002fd28 'dev_name' 'int ()'
|   |   `-RecoveryExpr 0x15002fe38 <col:12, col:19> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x15002fe00 <col:12> 'struct usb_line6 *' lvalue Var 0x15002cd98 'line6' 'struct usb_line6 *'
|   |-CallExpr 0x1500300b0 <line:41:2, col:35> 'int'
|   | |-ImplicitCastExpr 0x150030098 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x150030038 <col:2> 'int ()' Function 0x15002ff80 'usb_set_intfdata' 'int ()'
|   | |-ImplicitCastExpr 0x1500300e0 <col:19> 'struct usb_interface *' <LValueToRValue>
|   | | `-DeclRefExpr 0x150030058 <col:19> 'struct usb_interface *' lvalue ParmVar 0x15000e248 'interface' 'struct usb_interface *'
|   | `-ImplicitCastExpr 0x1500300f8 <col:30> 'struct usb_line6 *' <LValueToRValue>
|   |   `-DeclRefExpr 0x150030078 <col:30> 'struct usb_line6 *' lvalue Var 0x15002cd98 'line6' 'struct usb_line6 *'
|   |-CallExpr 0x150030248 <line:44:2, col:20> 'int'
|   | |-ImplicitCastExpr 0x150030230 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1500301f0 <col:2> 'int ()' Function 0x150030138 'usb_get_dev' 'int ()'
|   | `-ImplicitCastExpr 0x150030270 <col:14> 'struct usb_device *' <LValueToRValue>
|   |   `-DeclRefExpr 0x150030210 <col:14> 'struct usb_device *' lvalue Var 0x150027158 'usbdev' 'struct usb_device *'
|   |-CallExpr 0x150030480 <line:47:2, col:51> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x150030368 <col:2> 'int ()' Function 0x1500302b0 'dev_info' 'int ()'
|   | |-UnaryOperator 0x1500303e8 <col:11, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | `-RecoveryExpr 0x1500303c0 <col:12, col:23> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x150030388 <col:12> 'struct usb_interface *' lvalue ParmVar 0x15000e248 'interface' 'struct usb_interface *'
|   | |-StringLiteral 0x150030400 <col:28> 'char[4]' lvalue "STR"
|   | `-RecoveryExpr 0x150030458 <col:35, col:47> '<dependent type>' contains-errors lvalue
|   |   `-DeclRefExpr 0x150030420 <col:35> 'const struct line6_properties *' lvalue ParmVar 0x150026878 'properties' 'const struct line6_properties *'
|   |-BinaryOperator 0x1500305c8 <line:50:2, col:53> 'int' contains-errors '='
|   | |-DeclRefExpr 0x1500304b8 <col:2> 'int' lvalue Var 0x15002ce48 'interface_number' 'int'
|   | `-CXXDependentScopeMemberExpr 0x150030580 <col:21, col:53> '<dependent type>' contains-errors lvalue .bInterfaceNumber
|   |   `-CXXDependentScopeMemberExpr 0x150030538 <col:21, col:48> '<dependent type>' contains-errors lvalue ->desc
|   |     `-RecoveryExpr 0x150030510 <col:21, col:32> '<dependent type>' contains-errors lvalue
|   |       `-DeclRefExpr 0x1500304d8 <col:21> 'struct usb_interface *' lvalue ParmVar 0x15000e248 'interface' 'struct usb_interface *'
|   |-BinaryOperator 0x1500307e0 <line:53:2, line:54:27> 'int' contains-errors '='
|   | |-DeclRefExpr 0x1500305e8 <line:53:2> 'int' lvalue Var 0x15002cee0 'ret' 'int'
|   | `-CallExpr 0x1500307a8 <col:8, line:54:27> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x1500306e8 <line:53:8> 'int ()' Function 0x150030630 'usb_set_interface' 'int ()'
|   |   |-DeclRefExpr 0x150030708 <col:26> 'struct usb_device *' lvalue Var 0x150027158 'usbdev' 'struct usb_device *'
|   |   |-DeclRefExpr 0x150030728 <col:34> 'int' lvalue Var 0x15002ce48 'interface_number' 'int'
|   |   `-RecoveryExpr 0x150030780 <line:54:5, col:17> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x150030748 <col:5> 'const struct line6_properties *' lvalue ParmVar 0x150026878 'properties' 'const struct line6_properties *'
|   |-IfStmt 0x150030ac8 <line:55:2, line:58:2>
|   | |-BinaryOperator 0x150030858 <line:55:6, col:12> 'int' '<'
|   | | |-ImplicitCastExpr 0x150030840 <col:6> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x150030800 <col:6> 'int' lvalue Var 0x15002cee0 'ret' 'int'
|   | | `-IntegerLiteral 0x150030820 <col:12> 'int' 0
|   | `-CompoundStmt 0x150030aa8 <col:15, line:58:2>
|   |   |-CallExpr 0x150030a10 <line:56:3, col:33> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x150030958 <col:3> 'int ()' Function 0x1500308a0 'dev_err' 'int ()'
|   |   | |-UnaryOperator 0x1500309d8 <col:11, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   | | `-RecoveryExpr 0x1500309b0 <col:12, col:23> '<dependent type>' contains-errors lvalue
|   |   | |   `-DeclRefExpr 0x150030978 <col:12> 'struct usb_interface *' lvalue ParmVar 0x15000e248 'interface' 'struct usb_interface *'
|   |   | `-StringLiteral 0x1500309f0 <col:28> 'char[4]' lvalue "STR"
|   |   `-GotoStmt 0x150030a90 <line:57:3, col:8> 'error' 0x150030a40
|   |-CallExpr 0x150030c20 <line:60:2, col:32> 'int'
|   | |-ImplicitCastExpr 0x150030c08 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x150030bc8 <col:2> 'int ()' Function 0x150030b10 'line6_get_usb_properties' 'int ()'
|   | `-ImplicitCastExpr 0x150030c48 <col:27> 'struct usb_line6 *' <LValueToRValue>
|   |   `-DeclRefExpr 0x150030be8 <col:27> 'struct usb_line6 *' lvalue Var 0x15002cd98 'line6' 'struct usb_line6 *'
|   |-IfStmt 0x150030f68 <line:62:2, line:66:2>
|   | |-RecoveryExpr 0x150030cc0 <line:62:6, col:33> '_Bool' contains-errors
|   | `-CompoundStmt 0x150030f48 <col:52, line:66:2>
|   |   |-BinaryOperator 0x150030e78 <line:63:3, col:37> 'int' '='
|   |   | |-DeclRefExpr 0x150030ce0 <col:3> 'int' lvalue Var 0x15002cee0 'ret' 'int'
|   |   | `-CallExpr 0x150030e38 <col:9, col:37> 'int'
|   |   |   |-ImplicitCastExpr 0x150030e20 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x150030de0 <col:9> 'int ()' Function 0x150030d28 'line6_init_cap_control' 'int ()'
|   |   |   `-ImplicitCastExpr 0x150030e60 <col:32> 'struct usb_line6 *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x150030e00 <col:32> 'struct usb_line6 *' lvalue Var 0x15002cd98 'line6' 'struct usb_line6 *'
|   |   `-IfStmt 0x150030f28 <line:64:3, line:65:9>
|   |     |-BinaryOperator 0x150030ef0 <line:64:7, col:13> 'int' '<'
|   |     | |-ImplicitCastExpr 0x150030ed8 <col:7> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x150030e98 <col:7> 'int' lvalue Var 0x15002cee0 'ret' 'int'
|   |     | `-IntegerLiteral 0x150030eb8 <col:13> 'int' 0
|   |     `-GotoStmt 0x150030f10 <line:65:4, col:9> 'error' 0x150030a40
|   |-BinaryOperator 0x1500310c8 <line:69:2, col:30> 'int' '='
|   | |-DeclRefExpr 0x150030f88 <col:2> 'int' lvalue Var 0x15002cee0 'ret' 'int'
|   | `-CallExpr 0x150031020 <col:8, col:30> 'int'
|   |   |-ImplicitCastExpr 0x150031008 <col:8> 'int (*)(struct usb_line6 *, const struct usb_device_id *)' <LValueToRValue>
|   |   | `-DeclRefExpr 0x150030fa8 <col:8> 'int (*)(struct usb_line6 *, const struct usb_device_id *)' lvalue ParmVar 0x150026cf8 'private_init' 'int (*)(struct usb_line6 *, const struct usb_device_id *)'
|   |   |-ImplicitCastExpr 0x150031068 <col:21> 'struct usb_line6 *' <BitCast>
|   |   | `-ImplicitCastExpr 0x150031050 <col:21> 'struct usb_line6 *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x150030fc8 <col:21> 'struct usb_line6 *' lvalue Var 0x15002cd98 'line6' 'struct usb_line6 *'
|   |   `-ImplicitCastExpr 0x1500310b0 <col:28> 'const struct usb_device_id *' <LValueToRValue>
|   |     `-DeclRefExpr 0x150030fe8 <col:28> 'const struct usb_device_id *' lvalue ParmVar 0x150026628 'id' 'const struct usb_device_id *'
|   |-IfStmt 0x150031178 <line:70:2, line:71:8>
|   | |-BinaryOperator 0x150031140 <line:70:6, col:12> 'int' '<'
|   | | |-ImplicitCastExpr 0x150031128 <col:6> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1500310e8 <col:6> 'int' lvalue Var 0x15002cee0 'ret' 'int'
|   | | `-IntegerLiteral 0x150031108 <col:12> 'int' 0
|   | `-GotoStmt 0x150031160 <line:71:3, col:8> 'error' 0x150030a40
|   |-CallExpr 0x1500312b0 <line:75:2, line:76:20> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x150031198 <line:75:2> 'int ()' Function 0x1500302b0 'dev_info' 'int ()'
|   | |-UnaryOperator 0x150031218 <col:11, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | `-RecoveryExpr 0x1500311f0 <col:12, col:23> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x1500311b8 <col:12> 'struct usb_interface *' lvalue ParmVar 0x15000e248 'interface' 'struct usb_interface *'
|   | |-StringLiteral 0x150031230 <col:28> 'char[4]' lvalue "STR"
|   | `-RecoveryExpr 0x150031288 <line:76:4, col:16> '<dependent type>' contains-errors lvalue
|   |   `-DeclRefExpr 0x150031250 <col:4> 'const struct line6_properties *' lvalue ParmVar 0x150026878 'properties' 'const struct line6_properties *'
|   |-ReturnStmt 0x150031308 <line:78:2, col:9>
|   | `-IntegerLiteral 0x1500312e8 <col:9> 'int' 0
|   |-LabelStmt 0x150031498 <line:80:2, line:82:28> 'error'
|   | `-CallExpr 0x150031458 <col:2, col:28> 'int'
|   |   |-ImplicitCastExpr 0x150031440 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x150031400 <col:2> 'int ()' Function 0x150031340 'line6_disconnect' 'int ()'
|   |   `-ImplicitCastExpr 0x150031480 <col:19> 'struct usb_interface *' <LValueToRValue>
|   |     `-DeclRefExpr 0x150031420 <col:19> 'struct usb_interface *' lvalue ParmVar 0x15000e248 'interface' 'struct usb_interface *'
|   `-ReturnStmt 0x1500314f0 <line:83:2, col:9>
|     `-ImplicitCastExpr 0x1500314d8 <col:9> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1500314b8 <col:9> 'int' lvalue Var 0x15002cee0 'ret' 'int'
|-FunctionDecl 0x15002f400 <line:34:2> col:2 implicit used strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x15002f500 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x15002f568 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x15002f4a8 <<invalid sloc>> Implicit 885
`-FunctionDecl 0x15002f9a8 <line:37:2> col:2 implicit used sprintf 'int (char *, const char *, ...)' extern
  |-ParmVarDecl 0x15002faa8 <<invalid sloc>> <invalid sloc> 'char *'
  |-ParmVarDecl 0x15002fb10 <<invalid sloc>> <invalid sloc> 'const char *'
  |-BuiltinAttr 0x15002fa50 <<invalid sloc>> Implicit 906
  `-FormatAttr 0x15002fb88 <col:2> Implicit printf 2 3
