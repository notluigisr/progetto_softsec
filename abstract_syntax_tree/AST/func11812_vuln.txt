TranslationUnitDecl 0x146055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1460564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x146055bd0 '__int128'
|-TypedefDecl 0x146056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x146055bf0 'unsigned __int128'
|-TypedefDecl 0x14680be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14680bc00 'struct __NSConstantString_tag'
|   `-Record 0x146056580 '__NSConstantString_tag'
|-TypedefDecl 0x14680be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x146055d90 '__SVInt8_t'
|-TypedefDecl 0x14680bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x146055db0 '__SVInt16_t'
|-TypedefDecl 0x14680bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x146055dd0 '__SVInt32_t'
|-TypedefDecl 0x14680bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x146055df0 '__SVInt64_t'
|-TypedefDecl 0x14680c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x146055e10 '__SVUint8_t'
|-TypedefDecl 0x14680c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x146055e30 '__SVUint16_t'
|-TypedefDecl 0x14680c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x146055e50 '__SVUint32_t'
|-TypedefDecl 0x14680c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x146055e70 '__SVUint64_t'
|-TypedefDecl 0x14680c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x146055e90 '__SVFloat16_t'
|-TypedefDecl 0x14680c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x146055eb0 '__SVFloat32_t'
|-TypedefDecl 0x14680c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x146055ed0 '__SVFloat64_t'
|-TypedefDecl 0x14680c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x146055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14680c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x146055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14680c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x146055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14680c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x146055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14680c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x146055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14680c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x146055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14680c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x146055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14680c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x146055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14680c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x146055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14680c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x146056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14680c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x146056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14680c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x146056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14680c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x146056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14680c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x146056090 '__clang_svint8x3_t'
|-TypedefDecl 0x14680c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1460560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14680c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1460560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14680c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1460560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14680c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x146056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14680ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x146056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14680cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x146056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14680cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x146056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14680cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x146056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14680d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1460561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14680d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1460561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14680d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1460561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14680d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x146056210 '__clang_svint8x4_t'
|-TypedefDecl 0x14680d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x146056230 '__clang_svint16x4_t'
|-TypedefDecl 0x14680d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x146056250 '__clang_svint32x4_t'
|-TypedefDecl 0x14680d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x146056270 '__clang_svint64x4_t'
|-TypedefDecl 0x14680d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x146056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14680d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1460562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14680d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1460562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14680d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1460562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14680d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x146056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14680d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x146056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14680d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x146056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14680d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x146056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14680da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x146056390 '__SVBool_t'
|-TypedefDecl 0x14680da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1460563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14680dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1460563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14680db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1460563f0 '__SVCount_t'
|-TypedefDecl 0x14680dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14680dbb0 'char *'
|   `-BuiltinType 0x1460556b0 'char'
|-TypedefDecl 0x14680dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14680dbb0 'char *'
|   `-BuiltinType 0x1460556b0 'char'
|-FunctionDecl 0x14680dfa8 <dataset_diviso_filec/func11812_vuln.c:1:1, line:36:1> line:1:18 invalid mongo_run_command 'int (int *, const char *, const int *, int *)'
| |-ParmVarDecl 0x14680dd28 <col:37, col:44> col:44 referenced invalid conn 'int *'
| |-ParmVarDecl 0x14680dda8 <col:50, col:62> col:62 used db 'const char *'
| |-ParmVarDecl 0x14680de28 <col:66, col:78> col:78 invalid command 'const int *'
| |-ParmVarDecl 0x14680dea8 <line:2:37, col:43> col:43 invalid out 'int *'
| `-CompoundStmt 0x14682a188 <col:49, line:36:1>
|   |-DeclStmt 0x14680e128 <line:3:5, col:23>
|   | `-VarDecl 0x14680e088 <col:5, col:15> col:9 used ret 'int' cinit
|   |   `-RecoveryExpr 0x14680e108 <col:15> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x1468278e0 <line:6:5, col:26>
|   | `-VarDecl 0x14680e158 <col:5, col:25> col:9 used sl 'int' cinit
|   |   `-ImplicitCastExpr 0x1468278c8 <col:14, col:25> 'int' <IntegralCast>
|   |     `-CallExpr 0x146827888 <col:14, col:25> 'unsigned long'
|   |       |-ImplicitCastExpr 0x146827870 <col:14> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x1468277e0 <col:14> 'unsigned long (const char *)' Function 0x146827670 'strlen' 'unsigned long (const char *)'
|   |       `-ImplicitCastExpr 0x1468278b0 <col:22> 'const char *' <LValueToRValue>
|   |         `-DeclRefExpr 0x146827800 <col:22> 'const char *' lvalue ParmVar 0x14680dda8 'db' 'const char *'
|   |-DeclStmt 0x146827c38 <line:7:5, col:41>
|   | `-VarDecl 0x146827910 <col:5, col:40> col:11 used ns 'char *' cinit
|   |   `-ImplicitCastExpr 0x146827c20 <col:16, col:40> 'char *' <IntegralToPointer>
|   |     `-CallExpr 0x146827bf8 <col:16, col:40> 'int'
|   |       |-ImplicitCastExpr 0x146827be0 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x146827ad0 <col:16> 'int ()' Function 0x146827a18 'bson_malloc' 'int ()'
|   |       `-BinaryOperator 0x146827b88 <col:29, col:38> 'int' '+'
|   |         |-BinaryOperator 0x146827b48 <col:29, col:34> 'int' '+'
|   |         | |-ImplicitCastExpr 0x146827b30 <col:29> 'int' <LValueToRValue>
|   |         | | `-DeclRefExpr 0x146827af0 <col:29> 'int' lvalue Var 0x14680e158 'sl' 'int'
|   |         | `-IntegerLiteral 0x146827b10 <col:34> 'int' 5
|   |         `-IntegerLiteral 0x146827b68 <col:38> 'int' 1
|   |-DeclStmt 0x146827d88 <line:8:5, col:25>
|   | |-VarDecl 0x146827c68 <col:5, col:9> col:9 used res 'int'
|   | `-VarDecl 0x146827ce8 <col:5, col:24> col:14 used success 'int' cinit
|   |   `-IntegerLiteral 0x146827d50 <col:24> 'int' 0
|   |-CallExpr 0x146828098 <line:10:5, col:20> 'char *'
|   | |-ImplicitCastExpr 0x146828080 <col:5> 'char *(*)(char *, const char *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x146827fc0 <col:5> 'char *(char *, const char *)' Function 0x146827de0 'strcpy' 'char *(char *, const char *)'
|   | |-ImplicitCastExpr 0x1468280c8 <col:13> 'char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x146827fe0 <col:13> 'char *' lvalue Var 0x146827910 'ns' 'char *'
|   | `-ImplicitCastExpr 0x1468280e0 <col:17> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x146828000 <col:17> 'const char *' lvalue ParmVar 0x14680dda8 'db' 'const char *'
|   |-CallExpr 0x146828240 <line:11:5, col:26> 'char *'
|   | |-ImplicitCastExpr 0x146828228 <col:5> 'char *(*)(char *, const char *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1468280f8 <col:5> 'char *(char *, const char *)' Function 0x146827de0 'strcpy' 'char *(char *, const char *)'
|   | |-BinaryOperator 0x146828188 <col:13, col:16> 'char *' '+'
|   | | |-ImplicitCastExpr 0x146828158 <col:13> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x146828118 <col:13> 'char *' lvalue Var 0x146827910 'ns' 'char *'
|   | | `-ImplicitCastExpr 0x146828170 <col:16> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x146828138 <col:16> 'int' lvalue Var 0x14680e158 'sl' 'int'
|   | `-ImplicitCastExpr 0x146828288 <col:20> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x146828270 <col:20> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1468281f0 <col:20> 'char[4]' lvalue "STR"
|   |-BinaryOperator 0x1468298f0 <line:13:5, col:79> 'int' contains-errors '='
|   | |-DeclRefExpr 0x1468282a0 <col:5> 'int' lvalue Var 0x146827c68 'res' 'int'
|   | `-CallExpr 0x1468298a8 <col:11, col:79> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x1468283a0 <col:11> 'int ()' Function 0x1468282e8 'mongo_find_one' 'int ()'
|   |   |-RecoveryExpr 0x1468283c0 <col:27> '<dependent type>' contains-errors lvalue
|   |   |-DeclRefExpr 0x1468283e0 <col:33> 'char *' lvalue Var 0x146827910 'ns' 'char *'
|   |   |-RecoveryExpr 0x146829600 <col:37> '<dependent type>' contains-errors lvalue
|   |   |-CallExpr 0x146829848 <col:46, col:66> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x146829700 <col:46> 'int ()' Function 0x146829648 'bson_empty' 'int ()'
|   |   | `-UnaryOperator 0x146829830 <col:58, col:59> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   |   `-RecoveryExpr 0x146829810 <col:59> '<dependent type>' contains-errors lvalue
|   |   `-UnaryOperator 0x146829890 <col:69, col:70> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     `-RecoveryExpr 0x146829870 <col:70> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x146829a48 <line:14:5, col:19> 'int'
|   | |-ImplicitCastExpr 0x146829a30 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1468299f0 <col:5> 'int ()' Function 0x146829938 'bson_free' 'int ()'
|   | `-ImplicitCastExpr 0x146829a70 <col:16> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x146829a10 <col:16> 'char *' lvalue Var 0x146827910 'ns' 'char *'
|   |-IfStmt 0x14682a110 <line:16:5, line:34:5> has_else
|   | |-BinaryOperator 0x146829b00 <line:16:9, col:16> 'int' contains-errors '!='
|   | | |-DeclRefExpr 0x146829a88 <col:9> 'int' lvalue Var 0x146827c68 'res' 'int'
|   | | `-RecoveryExpr 0x146829ae0 <col:16> '<dependent type>' contains-errors lvalue
|   | |-BinaryOperator 0x146829b98 <line:17:9, col:15> 'int' contains-errors '='
|   | | |-DeclRefExpr 0x146829b20 <col:9> 'int' contains-errors lvalue Var 0x14680e088 'ret' 'int'
|   | | `-RecoveryExpr 0x146829b78 <col:15> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x14682a0f8 <line:18:10, line:34:5>
|   |   `-IfStmt 0x14682a0c8 <line:23:9, line:33:9> has_else
|   |     |-UnaryOperator 0x146829e50 <line:23:13, col:14> 'int' prefix '!' cannot overflow
|   |     | `-ImplicitCastExpr 0x146829e38 <col:14> 'int' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x146829e18 <col:14> 'int' lvalue Var 0x146827ce8 'success' 'int'
|   |     |-CompoundStmt 0x14682a018 <col:24, line:27:9>
|   |     `-CompoundStmt 0x14682a0b8 <line:28:14, line:33:9>
|   `-ReturnStmt 0x14682a178 <line:35:5, col:12>
|     `-ImplicitCastExpr 0x14682a160 <col:12> 'int' contains-errors <LValueToRValue>
|       `-DeclRefExpr 0x14682a140 <col:12> 'int' contains-errors lvalue Var 0x14680e088 'ret' 'int'
|-FunctionDecl 0x146827670 <line:6:14> col:14 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x146827770 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x146827718 <<invalid sloc>> Implicit 902
`-FunctionDecl 0x146827de0 <line:10:5> col:5 implicit used strcpy 'char *(char *, const char *)' extern
  |-ParmVarDecl 0x146827ee0 <<invalid sloc>> <invalid sloc> 'char *'
  |-ParmVarDecl 0x146827f48 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x146827e88 <<invalid sloc>> Implicit 885
