TranslationUnitDecl 0x161036a08 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1610378b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x161036fd0 '__int128'
|-TypedefDecl 0x161037928 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x161036ff0 'unsigned __int128'
|-TypedefDecl 0x161107e30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x161107c00 'struct __NSConstantString_tag'
|   `-Record 0x161037980 '__NSConstantString_tag'
|-TypedefDecl 0x161107e98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x161037190 '__SVInt8_t'
|-TypedefDecl 0x161107f00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x1610371b0 '__SVInt16_t'
|-TypedefDecl 0x161107f68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x1610371d0 '__SVInt32_t'
|-TypedefDecl 0x161107fd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x1610371f0 '__SVInt64_t'
|-TypedefDecl 0x161108038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x161037210 '__SVUint8_t'
|-TypedefDecl 0x1611080a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x161037230 '__SVUint16_t'
|-TypedefDecl 0x161108108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x161037250 '__SVUint32_t'
|-TypedefDecl 0x161108170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x161037270 '__SVUint64_t'
|-TypedefDecl 0x1611081d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x161037290 '__SVFloat16_t'
|-TypedefDecl 0x161108240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x1610372b0 '__SVFloat32_t'
|-TypedefDecl 0x1611082a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x1610372d0 '__SVFloat64_t'
|-TypedefDecl 0x161108310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x1610372f0 '__SVBfloat16_t'
|-TypedefDecl 0x161108378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x161037310 '__clang_svint8x2_t'
|-TypedefDecl 0x1611083e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x161037330 '__clang_svint16x2_t'
|-TypedefDecl 0x161108448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x161037350 '__clang_svint32x2_t'
|-TypedefDecl 0x1611084b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x161037370 '__clang_svint64x2_t'
|-TypedefDecl 0x161108518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x161037390 '__clang_svuint8x2_t'
|-TypedefDecl 0x161108580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x1610373b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1611085e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x1610373d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x161108650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x1610373f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1611086b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x161037410 '__clang_svfloat16x2_t'
|-TypedefDecl 0x161108720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x161037430 '__clang_svfloat32x2_t'
|-TypedefDecl 0x161108788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x161037450 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1611087f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x161037470 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x161108858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x161037490 '__clang_svint8x3_t'
|-TypedefDecl 0x1611088c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1610374b0 '__clang_svint16x3_t'
|-TypedefDecl 0x161108928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1610374d0 '__clang_svint32x3_t'
|-TypedefDecl 0x161108990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1610374f0 '__clang_svint64x3_t'
|-TypedefDecl 0x1611089f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x161037510 '__clang_svuint8x3_t'
|-TypedefDecl 0x161108a60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x161037530 '__clang_svuint16x3_t'
|-TypedefDecl 0x161108ac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x161037550 '__clang_svuint32x3_t'
|-TypedefDecl 0x161108b30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x161037570 '__clang_svuint64x3_t'
|-TypedefDecl 0x161108b98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x161037590 '__clang_svfloat16x3_t'
|-TypedefDecl 0x161109400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1610375b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x161109468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1610375d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1611094d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1610375f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x161109538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x161037610 '__clang_svint8x4_t'
|-TypedefDecl 0x1611095a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x161037630 '__clang_svint16x4_t'
|-TypedefDecl 0x161109608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x161037650 '__clang_svint32x4_t'
|-TypedefDecl 0x161109670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x161037670 '__clang_svint64x4_t'
|-TypedefDecl 0x1611096d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x161037690 '__clang_svuint8x4_t'
|-TypedefDecl 0x161109740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1610376b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1611097a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1610376d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x161109810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1610376f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x161109878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x161037710 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1611098e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x161037730 '__clang_svfloat32x4_t'
|-TypedefDecl 0x161109948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x161037750 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1611099b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x161037770 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x161109a18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x161037790 '__SVBool_t'
|-TypedefDecl 0x161109a80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1610377b0 '__clang_svboolx2_t'
|-TypedefDecl 0x161109ae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1610377d0 '__clang_svboolx4_t'
|-TypedefDecl 0x161109b50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1610377f0 '__SVCount_t'
|-TypedefDecl 0x161109bf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x161109bb0 'char *'
|   `-BuiltinType 0x161036ab0 'char'
|-TypedefDecl 0x161109c68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x161109bb0 'char *'
|   `-BuiltinType 0x161036ab0 'char'
|-FunctionDecl 0x1611227e8 <dataset_diviso_filec/func23028_vuln.c:1:1, line:76:1> line:1:5 ip_recv_error 'int (struct sock *, struct msghdr *, int)'
| |-ParmVarDecl 0x16110a248 <col:19, col:32> col:32 used sk 'struct sock *'
| |-ParmVarDecl 0x161122628 <col:36, col:51> col:51 used msg 'struct msghdr *'
| |-ParmVarDecl 0x1611226a8 <col:56, col:60> col:60 used len 'int'
| `-CompoundStmt 0x161124d40 <line:2:1, line:76:1>
|   |-DeclStmt 0x161122ad8 <line:3:2, col:30>
|   | |-RecordDecl 0x1611228f0 <col:2, col:9> col:9 struct sock_exterr_skb
|   | `-VarDecl 0x161122a58 <col:2, col:26> col:26 used serr 'struct sock_exterr_skb *'
|   |-DeclStmt 0x161122d70 <line:4:2, col:28>
|   | |-RecordDecl 0x161122af0 <col:2, col:9> col:9 struct sk_buff
|   | |-VarDecl 0x161122c58 <col:2, col:18> col:18 used skb 'struct sk_buff *'
|   | `-VarDecl 0x161122ce8 <col:2, col:24> col:24 used skb2 'struct sk_buff *'
|   |-DeclStmt 0x161122f78 <line:5:2, col:25>
|   | |-RecordDecl 0x161122d88 <col:2, col:9> col:9 struct sockaddr_in
|   | `-VarDecl 0x161122ef8 <col:2, col:22> col:22 used sin 'struct sockaddr_in *'
|   |-DeclStmt 0x161123308 <line:6:2, line:9:10>
|   | |-RecordDecl 0x161122f90 <line:6:2, line:9:2> line:6:2 invalid struct definition
|   | | |-RecordDecl 0x161123030 parent 0x1611227e8 <line:7:3, col:10> col:10 struct sock_extended_err
|   | | |-FieldDecl 0x161123138 <col:3, col:28> col:28 invalid ee 'struct sock_extended_err'
|   | | `-FieldDecl 0x1611231e0 <line:8:3, col:23> col:23 invalid offender 'struct sockaddr_in'
|   | `-VarDecl 0x161123288 <line:6:2, line:9:4> col:4 used errhdr 'struct (unnamed struct at dataset_diviso_filec/func23028_vuln.c:6:2)':'struct (unnamed at dataset_diviso_filec/func23028_vuln.c:6:2)'
|   |-DeclStmt 0x1611233a0 <line:10:2, col:9>
|   | `-VarDecl 0x161123338 <col:2, col:6> col:6 used err 'int'
|   |-DeclStmt 0x161123438 <line:11:2, col:12>
|   | `-VarDecl 0x1611233d0 <col:2, col:6> col:6 used copied 'int'
|   |-BinaryOperator 0x161123540 <line:13:2, col:9> 'int' contains-errors '='
|   | |-DeclRefExpr 0x161123450 <col:2> 'int' lvalue Var 0x161123338 'err' 'int'
|   | `-UnaryOperator 0x161123528 <col:8, col:9> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |   `-ImplicitCastExpr 0x161123510 <col:9> '<dependent type>' contains-errors <LValueToRValue>
|   |     `-RecoveryExpr 0x1611234f0 <col:9> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x157813d78 <line:14:2, col:39> 'struct sk_buff *' contains-errors '='
|   | |-DeclRefExpr 0x161123560 <col:2> 'struct sk_buff *' lvalue Var 0x161122c58 'skb' 'struct sk_buff *'
|   | `-CallExpr 0x157813d50 <col:8, col:39> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x157813cb8 <col:8> 'int ()' Function 0x157813c00 'skb_dequeue' 'int ()'
|   |   `-UnaryOperator 0x157813d38 <col:20, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     `-RecoveryExpr 0x157813d10 <col:21, col:25> '<dependent type>' contains-errors lvalue
|   |       `-DeclRefExpr 0x157813cd8 <col:21> 'struct sock *' lvalue ParmVar 0x16110a248 'sk' 'struct sock *'
|   |-IfStmt 0x157813e98 <line:15:2, line:16:8>
|   | |-BinaryOperator 0x157813e10 <line:15:6, col:13> 'int' contains-errors '=='
|   | | |-DeclRefExpr 0x157813d98 <col:6> 'struct sk_buff *' lvalue Var 0x161122c58 'skb' 'struct sk_buff *'
|   | | `-RecoveryExpr 0x157813df0 <col:13> '<dependent type>' contains-errors lvalue
|   | `-GotoStmt 0x157813e80 <line:16:3, col:8> 'out' 0x157813e30
|   |-BinaryOperator 0x157813f38 <line:18:2, col:16> 'int' contains-errors '='
|   | |-DeclRefExpr 0x157813eb8 <col:2> 'int' lvalue Var 0x1611233d0 'copied' 'int'
|   | `-RecoveryExpr 0x157813f10 <col:11, col:16> '<dependent type>' contains-errors lvalue
|   |   `-DeclRefExpr 0x157813ed8 <col:11> 'struct sk_buff *' lvalue Var 0x161122c58 'skb' 'struct sk_buff *'
|   |-IfStmt 0x157814178 <line:19:2, line:22:2>
|   | |-BinaryOperator 0x157813fc8 <line:19:6, col:15> 'int' '>'
|   | | |-ImplicitCastExpr 0x157813f98 <col:6> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x157813f58 <col:6> 'int' lvalue Var 0x1611233d0 'copied' 'int'
|   | | `-ImplicitCastExpr 0x157813fb0 <col:15> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x157813f78 <col:15> 'int' lvalue ParmVar 0x1611226a8 'len' 'int'
|   | `-CompoundStmt 0x157814158 <col:20, line:22:2>
|   |   |-CompoundAssignOperator 0x1578140b0 <line:20:3, col:21> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |   | |-RecoveryExpr 0x157814020 <col:3, col:8> '<dependent type>' contains-errors lvalue
|   |   | | `-DeclRefExpr 0x157813fe8 <col:3> 'struct msghdr *' lvalue ParmVar 0x161122628 'msg' 'struct msghdr *'
|   |   | `-RecoveryExpr 0x157814090 <col:21> '<dependent type>' contains-errors lvalue
|   |   `-BinaryOperator 0x157814138 <line:21:3, col:12> 'int' '='
|   |     |-DeclRefExpr 0x1578140e0 <col:3> 'int' lvalue Var 0x1611233d0 'copied' 'int'
|   |     `-ImplicitCastExpr 0x157814120 <col:12> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x157814100 <col:12> 'int' lvalue ParmVar 0x1611226a8 'len' 'int'
|   |-BinaryOperator 0x1578143b8 <line:23:2, col:60> 'int' contains-errors '='
|   | |-DeclRefExpr 0x157814198 <col:2> 'int' lvalue Var 0x161123338 'err' 'int'
|   | `-CallExpr 0x157814378 <col:8, col:60> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x157814298 <col:8> 'int ()' Function 0x1578141e0 'skb_copy_datagram_iovec' 'int ()'
|   |   |-DeclRefExpr 0x1578142b8 <col:32> 'struct sk_buff *' lvalue Var 0x161122c58 'skb' 'struct sk_buff *'
|   |   |-IntegerLiteral 0x1578142d8 <col:37> 'int' 0
|   |   |-RecoveryExpr 0x157814330 <col:40, col:45> '<dependent type>' contains-errors lvalue
|   |   | `-DeclRefExpr 0x1578142f8 <col:40> 'struct msghdr *' lvalue ParmVar 0x161122628 'msg' 'struct msghdr *'
|   |   `-DeclRefExpr 0x157814358 <col:54> 'int' lvalue Var 0x1611233d0 'copied' 'int'
|   |-IfStmt 0x157814478 <line:24:2, line:25:8>
|   | |-ImplicitCastExpr 0x1578143f8 <line:24:6> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1578143d8 <col:6> 'int' lvalue Var 0x161123338 'err' 'int'
|   | `-GotoStmt 0x157814460 <line:25:3, col:8> 'out_free_skb' 0x157814410
|   |-CallExpr 0x157814648 <line:27:2, col:34> 'int'
|   | |-ImplicitCastExpr 0x157814630 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x157814578 <col:2> 'int ()' Function 0x1578144c0 'sock_recv_timestamp' 'int ()'
|   | |-ImplicitCastExpr 0x157814680 <col:22> 'struct msghdr *' <LValueToRValue>
|   | | `-DeclRefExpr 0x157814598 <col:22> 'struct msghdr *' lvalue ParmVar 0x161122628 'msg' 'struct msghdr *'
|   | |-ImplicitCastExpr 0x157814698 <col:27> 'struct sock *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1578145b8 <col:27> 'struct sock *' lvalue ParmVar 0x16110a248 'sk' 'struct sock *'
|   | `-ImplicitCastExpr 0x1578146b0 <col:31> 'struct sk_buff *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1578145d8 <col:31> 'struct sk_buff *' lvalue Var 0x161122c58 'skb' 'struct sk_buff *'
|   |-BinaryOperator 0x157814878 <line:29:2, col:24> 'struct sock_exterr_skb *' '='
|   | |-DeclRefExpr 0x1578146c8 <col:2> 'struct sock_exterr_skb *' lvalue Var 0x161122a58 'serr' 'struct sock_exterr_skb *'
|   | `-ImplicitCastExpr 0x157814860 <col:9, col:24> 'struct sock_exterr_skb *' <IntegralToPointer>
|   |   `-CallExpr 0x157814820 <col:9, col:24> 'int'
|   |     |-ImplicitCastExpr 0x157814808 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1578147c8 <col:9> 'int ()' Function 0x157814710 'SKB_EXT_ERR' 'int ()'
|   |     `-ImplicitCastExpr 0x157814848 <col:21> 'struct sk_buff *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1578147e8 <col:21> 'struct sk_buff *' lvalue Var 0x161122c58 'skb' 'struct sk_buff *'
|   |-BinaryOperator 0x1578149a0 <line:31:2, col:35> 'struct sockaddr_in *' contains-errors '='
|   | |-DeclRefExpr 0x157814898 <col:2> 'struct sockaddr_in *' lvalue Var 0x161122ef8 'sin' 'struct sockaddr_in *'
|   | `-CStyleCastExpr 0x157814978 <col:8, col:35> 'struct sockaddr_in *' contains-errors <Dependent>
|   |   `-RecoveryExpr 0x1578148f0 <col:30, col:35> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x1578148b8 <col:30> 'struct msghdr *' lvalue ParmVar 0x161122628 'msg' 'struct msghdr *'
|   |-IfStmt 0x16000ef00 <line:32:2, line:38:2>
|   | |-ImplicitCastExpr 0x1578149e0 <line:32:6> 'struct sockaddr_in *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1578149c0 <col:6> 'struct sockaddr_in *' lvalue Var 0x161122ef8 'sin' 'struct sockaddr_in *'
|   | `-CompoundStmt 0x16000eed8 <col:11, line:38:2>
|   |   |-BinaryOperator 0x157814ab0 <line:33:3, col:21> '<dependent type>' contains-errors '='
|   |   | |-RecoveryExpr 0x157814a30 <col:3, col:8> '<dependent type>' contains-errors lvalue
|   |   | | `-DeclRefExpr 0x1578149f8 <col:3> 'struct sockaddr_in *' lvalue Var 0x161122ef8 'sin' 'struct sockaddr_in *'
|   |   | `-RecoveryExpr 0x157814a90 <col:21> '<dependent type>' contains-errors lvalue
|   |   |-BinaryOperator 0x16000ea90 <line:36:3, col:25> '<dependent type>' contains-errors '='
|   |   | |-RecoveryExpr 0x16000ea08 <col:3, col:8> '<dependent type>' contains-errors lvalue
|   |   | | `-DeclRefExpr 0x16000e9d0 <col:3> 'struct sockaddr_in *' lvalue Var 0x161122ef8 'sin' 'struct sockaddr_in *'
|   |   | `-RecoveryExpr 0x16000ea68 <col:19, col:25> '<dependent type>' contains-errors lvalue
|   |   |   `-DeclRefExpr 0x16000ea30 <col:19> 'struct sock_exterr_skb *' lvalue Var 0x161122a58 'serr' 'struct sock_exterr_skb *'
|   |   `-CallExpr 0x16000eea0 <line:37:3, col:50> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x16000ed48 <col:3> 'void *(void *, int, unsigned long)' Function 0x16000eaf8 'memset' 'void *(void *, int, unsigned long)'
|   |     |-UnaryOperator 0x16000edc8 <col:10, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     | `-RecoveryExpr 0x16000eda0 <col:11, col:16> '<dependent type>' contains-errors lvalue
|   |     |   `-DeclRefExpr 0x16000ed68 <col:11> 'struct sockaddr_in *' lvalue Var 0x161122ef8 'sin' 'struct sockaddr_in *'
|   |     |-IntegerLiteral 0x16000ede0 <col:26> 'int' 0
|   |     `-UnaryExprOrTypeTraitExpr 0x16000ee80 <col:29, col:49> 'unsigned long' contains-errors sizeof
|   |       `-ParenExpr 0x16000ee60 <col:35, col:49> '<dependent type>' contains-errors lvalue
|   |         `-RecoveryExpr 0x16000ee38 <col:36, col:41> '<dependent type>' contains-errors lvalue
|   |           `-DeclRefExpr 0x16000ee00 <col:36> 'struct sockaddr_in *' lvalue Var 0x161122ef8 'sin' 'struct sockaddr_in *' non_odr_use_unevaluated
|   |-BinaryOperator 0x16000f3b0 <line:41:2, col:16> 'struct sockaddr_in *' contains-errors '='
|   | |-DeclRefExpr 0x16000f330 <col:2> 'struct sockaddr_in *' lvalue Var 0x161122ef8 'sin' 'struct sockaddr_in *'
|   | `-UnaryOperator 0x16000f398 <col:8, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   `-RecoveryExpr 0x16000f370 <col:9, col:16> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x16000f350 <col:9> 'struct (unnamed struct at dataset_diviso_filec/func23028_vuln.c:6:2)':'struct (unnamed at dataset_diviso_filec/func23028_vuln.c:6:2)' lvalue Var 0x161123288 'errhdr' 'struct (unnamed struct at dataset_diviso_filec/func23028_vuln.c:6:2)':'struct (unnamed at dataset_diviso_filec/func23028_vuln.c:6:2)'
|   |-IfStmt 0x161123e08 <line:43:2, line:52:2>
|   | |-RecoveryExpr 0x16000f4d8 <line:43:6, col:28> '_Bool' contains-errors
|   | `-CompoundStmt 0x161123dd0 <col:47, line:52:2>
|   |   |-DeclStmt 0x161123688 <line:44:3, col:39>
|   |   | |-RecordDecl 0x16000f4f8 <col:3, col:10> col:10 struct inet_sock
|   |   | `-VarDecl 0x16000f668 <col:3, col:38> col:21 used inet 'struct inet_sock *' cinit
|   |   |   `-ImplicitCastExpr 0x161123658 <col:28, col:38> 'struct inet_sock *' <IntegralToPointer>
|   |   |     `-CallExpr 0x161123618 <col:28, col:38> 'int'
|   |   |       |-ImplicitCastExpr 0x161123600 <col:28> 'int (*)()' <FunctionToPointerDecay>
|   |   |       | `-DeclRefExpr 0x16000f7b0 <col:28> 'int ()' Function 0x16000f6f8 'inet_sk' 'int ()'
|   |   |       `-ImplicitCastExpr 0x161123640 <col:36> 'struct sock *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x16000f7d0 <col:36> 'struct sock *' lvalue ParmVar 0x16110a248 'sk' 'struct sock *'
|   |   |-BinaryOperator 0x161123948 <line:47:3, col:39> '<dependent type>' contains-errors '='
|   |   | |-CXXDependentScopeMemberExpr 0x161123760 <col:3, col:17> '<dependent type>' contains-errors lvalue .s_addr
|   |   | | `-RecoveryExpr 0x161123738 <col:3, col:8> '<dependent type>' contains-errors lvalue
|   |   | |   `-DeclRefExpr 0x161123700 <col:3> 'struct sockaddr_in *' lvalue Var 0x161122ef8 'sin' 'struct sockaddr_in *'
|   |   | `-RecoveryExpr 0x161123920 <col:26, col:39> '<dependent type>' contains-errors lvalue
|   |   |   `-CallExpr 0x1611238e0 <col:26, col:36> 'int'
|   |   |     |-ImplicitCastExpr 0x1611238c8 <col:26> 'int (*)()' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x161123888 <col:26> 'int ()' Function 0x1611237d0 'ip_hdr' 'int ()'
|   |   |     `-ImplicitCastExpr 0x161123908 <col:33> 'struct sk_buff *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x1611238a8 <col:33> 'struct sk_buff *' lvalue Var 0x161122c58 'skb' 'struct sk_buff *'
|   |   |-BinaryOperator 0x1611239e8 <line:48:3, col:19> '<dependent type>' contains-errors '='
|   |   | |-RecoveryExpr 0x1611239a0 <col:3, col:8> '<dependent type>' contains-errors lvalue
|   |   | | `-DeclRefExpr 0x161123968 <col:3> 'struct sockaddr_in *' lvalue Var 0x161122ef8 'sin' 'struct sockaddr_in *'
|   |   | `-IntegerLiteral 0x1611239c8 <col:19> 'int' 0
|   |   |-CallExpr 0x161123b60 <line:49:3, col:50> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x161123a08 <col:3> 'void *(void *, int, unsigned long)' Function 0x16000eaf8 'memset' 'void *(void *, int, unsigned long)'
|   |   | |-UnaryOperator 0x161123a88 <col:10, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   | | `-RecoveryExpr 0x161123a60 <col:11, col:16> '<dependent type>' contains-errors lvalue
|   |   | |   `-DeclRefExpr 0x161123a28 <col:11> 'struct sockaddr_in *' lvalue Var 0x161122ef8 'sin' 'struct sockaddr_in *'
|   |   | |-IntegerLiteral 0x161123aa0 <col:26> 'int' 0
|   |   | `-UnaryExprOrTypeTraitExpr 0x161123b40 <col:29, col:49> 'unsigned long' contains-errors sizeof
|   |   |   `-ParenExpr 0x161123b20 <col:35, col:49> '<dependent type>' contains-errors lvalue
|   |   |     `-RecoveryExpr 0x161123af8 <col:36, col:41> '<dependent type>' contains-errors lvalue
|   |   |       `-DeclRefExpr 0x161123ac0 <col:36> 'struct sockaddr_in *' lvalue Var 0x161122ef8 'sin' 'struct sockaddr_in *' non_odr_use_unevaluated
|   |   `-IfStmt 0x161123db0 <line:50:3, line:51:25>
|   |     |-RecoveryExpr 0x161123bd0 <line:50:7, col:13> '<dependent type>' contains-errors lvalue
|   |     | `-DeclRefExpr 0x161123b98 <col:7> 'struct inet_sock *' lvalue Var 0x16000f668 'inet' 'struct inet_sock *'
|   |     `-CallExpr 0x161123d50 <line:51:4, col:25> 'int'
|   |       |-ImplicitCastExpr 0x161123d38 <col:4> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x161123cd8 <col:4> 'int ()' Function 0x161123c20 'ip_cmsg_recv' 'int ()'
|   |       |-ImplicitCastExpr 0x161123d80 <col:17> 'struct msghdr *' <LValueToRValue>
|   |       | `-DeclRefExpr 0x161123cf8 <col:17> 'struct msghdr *' lvalue ParmVar 0x161122628 'msg' 'struct msghdr *'
|   |       `-ImplicitCastExpr 0x161123d98 <col:22> 'struct sk_buff *' <LValueToRValue>
|   |         `-DeclRefExpr 0x161123d18 <col:22> 'struct sk_buff *' lvalue Var 0x161122c58 'skb' 'struct sk_buff *'
|   |-BinaryOperator 0x161124100 <line:59:2, col:8> 'int' '='
|   | |-DeclRefExpr 0x1611240a8 <col:2> 'int' lvalue Var 0x161123338 'err' 'int'
|   | `-ImplicitCastExpr 0x1611240e8 <col:8> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x1611240c8 <col:8> 'int' lvalue Var 0x1611233d0 'copied' 'int'
|   |-CallExpr 0x1611242e0 <line:62:2, col:39> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x161124200 <col:2> 'int ()' Function 0x161124148 'spin_lock_bh' 'int ()'
|   | `-UnaryOperator 0x1611242c8 <col:15, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   `-CXXDependentScopeMemberExpr 0x161124280 <col:16, col:35> '<dependent type>' contains-errors lvalue .lock
|   |     `-RecoveryExpr 0x161124258 <col:16, col:20> '<dependent type>' contains-errors lvalue
|   |       `-DeclRefExpr 0x161124220 <col:16> 'struct sock *' lvalue ParmVar 0x16110a248 'sk' 'struct sock *'
|   |-BinaryOperator 0x161124388 <line:63:2, col:15> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x161124340 <col:2, col:6> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x161124308 <col:2> 'struct sock *' lvalue ParmVar 0x16110a248 'sk' 'struct sock *'
|   | `-IntegerLiteral 0x161124368 <col:15> 'int' 0
|   |-BinaryOperator 0x161124568 <line:64:2, col:37> 'struct sk_buff *' contains-errors '='
|   | |-DeclRefExpr 0x1611243a8 <col:2> 'struct sk_buff *' lvalue Var 0x161122ce8 'skb2' 'struct sk_buff *'
|   | `-CallExpr 0x161124540 <col:9, col:37> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x1611244a8 <col:9> 'int ()' Function 0x1611243f0 'skb_peek' 'int ()'
|   |   `-UnaryOperator 0x161124528 <col:18, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     `-RecoveryExpr 0x161124500 <col:19, col:23> '<dependent type>' contains-errors lvalue
|   |       `-DeclRefExpr 0x1611244c8 <col:19> 'struct sock *' lvalue ParmVar 0x16110a248 'sk' 'struct sock *'
|   |-IfStmt 0x161124b10 <line:65:2, line:70:42> has_else
|   | |-RecoveryExpr 0x1611245a8 <line:65:6, col:14> '_Bool' contains-errors
|   | |-CompoundStmt 0x1611249e0 <col:20, line:69:2>
|   | | |-BinaryOperator 0x161124730 <line:66:3, col:38> '<dependent type>' contains-errors '='
|   | | | |-RecoveryExpr 0x161124600 <col:3, col:7> '<dependent type>' contains-errors lvalue
|   | | | | `-DeclRefExpr 0x1611245c8 <col:3> 'struct sock *' lvalue ParmVar 0x16110a248 'sk' 'struct sock *'
|   | | | `-CXXDependentScopeMemberExpr 0x1611246e8 <col:16, col:38> '<dependent type>' contains-errors lvalue .ee_errno
|   | | |   `-RecoveryExpr 0x1611246c0 <col:16, col:35> '<dependent type>' contains-errors lvalue
|   | | |     `-CallExpr 0x161124680 <col:16, col:32> 'int'
|   | | |       |-ImplicitCastExpr 0x161124668 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   | | |       | `-DeclRefExpr 0x161124628 <col:16> 'int ()' Function 0x157814710 'SKB_EXT_ERR' 'int ()'
|   | | |       `-ImplicitCastExpr 0x1611246a8 <col:28> 'struct sk_buff *' <LValueToRValue>
|   | | |         `-DeclRefExpr 0x161124648 <col:28> 'struct sk_buff *' lvalue Var 0x161122ce8 'skb2' 'struct sk_buff *'
|   | | |-CallExpr 0x161124910 <line:67:3, col:42> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x161124830 <col:3> 'int ()' Function 0x161124778 'spin_unlock_bh' 'int ()'
|   | | | `-UnaryOperator 0x1611248f8 <col:18, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | |   `-CXXDependentScopeMemberExpr 0x1611248b0 <col:19, col:38> '<dependent type>' contains-errors lvalue .lock
|   | | |     `-RecoveryExpr 0x161124888 <col:19, col:23> '<dependent type>' contains-errors lvalue
|   | | |       `-DeclRefExpr 0x161124850 <col:19> 'struct sock *' lvalue ParmVar 0x16110a248 'sk' 'struct sock *'
|   | | `-CallExpr 0x1611249b8 <line:68:3, col:25> '<dependent type>' contains-errors
|   | |   |-RecoveryExpr 0x161124970 <col:3, col:7> '<dependent type>' contains-errors lvalue
|   | |   | `-DeclRefExpr 0x161124938 <col:3> 'struct sock *' lvalue ParmVar 0x16110a248 'sk' 'struct sock *'
|   | |   `-DeclRefExpr 0x161124998 <col:23> 'struct sock *' lvalue ParmVar 0x16110a248 'sk' 'struct sock *'
|   | `-CallExpr 0x161124ae8 <line:70:3, col:42> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x161124a08 <col:3> 'int ()' Function 0x161124778 'spin_unlock_bh' 'int ()'
|   |   `-UnaryOperator 0x161124ad0 <col:18, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     `-CXXDependentScopeMemberExpr 0x161124a88 <col:19, col:38> '<dependent type>' contains-errors lvalue .lock
|   |       `-RecoveryExpr 0x161124a60 <col:19, col:23> '<dependent type>' contains-errors lvalue
|   |         `-DeclRefExpr 0x161124a28 <col:19> 'struct sock *' lvalue ParmVar 0x16110a248 'sk' 'struct sock *'
|   |-LabelStmt 0x161124cb8 <line:72:1, line:73:15> 'out_free_skb'
|   | `-CallExpr 0x161124c78 <col:2, col:15> 'int'
|   |   |-ImplicitCastExpr 0x161124c60 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x161124c20 <col:2> 'int ()' Function 0x161124b68 'kfree_skb' 'int ()'
|   |   `-ImplicitCastExpr 0x161124ca0 <col:12> 'struct sk_buff *' <LValueToRValue>
|   |     `-DeclRefExpr 0x161124c40 <col:12> 'struct sk_buff *' lvalue Var 0x161122c58 'skb' 'struct sk_buff *'
|   `-LabelStmt 0x161124d20 <line:74:1, line:75:9> 'out'
|     `-ReturnStmt 0x161124d10 <col:2, col:9>
|       `-ImplicitCastExpr 0x161124cf8 <col:9> 'int' <LValueToRValue>
|         `-DeclRefExpr 0x161124cd8 <col:9> 'int' lvalue Var 0x161123338 'err' 'int'
|-FunctionDecl 0x16000eaf8 <line:37:3> col:3 implicit used memset 'void *(void *, int, unsigned long)' extern
| |-ParmVarDecl 0x16000ebf8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x16000ec60 <<invalid sloc>> <invalid sloc> 'int'
| |-ParmVarDecl 0x16000ecc8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x16000eba0 <<invalid sloc>> Implicit 900
`-FunctionDecl 0x16000ef98 <line:40:2> col:2 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x16000f098 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x16000f100 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x16000f168 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x16000f040 <<invalid sloc>> Implicit 882
