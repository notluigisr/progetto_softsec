TranslationUnitDecl 0x12c852008 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12c852eb8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12c8525d0 '__int128'
|-TypedefDecl 0x12c852f28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12c8525f0 'unsigned __int128'
|-TypedefDecl 0x12c010a30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12c010800 'struct __NSConstantString_tag'
|   `-Record 0x12c852f80 '__NSConstantString_tag'
|-TypedefDecl 0x12c010a98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12c852790 '__SVInt8_t'
|-TypedefDecl 0x12c010b00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12c8527b0 '__SVInt16_t'
|-TypedefDecl 0x12c010b68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12c8527d0 '__SVInt32_t'
|-TypedefDecl 0x12c010bd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12c8527f0 '__SVInt64_t'
|-TypedefDecl 0x12c010c38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12c852810 '__SVUint8_t'
|-TypedefDecl 0x12c010ca0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12c852830 '__SVUint16_t'
|-TypedefDecl 0x12c010d08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12c852850 '__SVUint32_t'
|-TypedefDecl 0x12c010d70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12c852870 '__SVUint64_t'
|-TypedefDecl 0x12c010dd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12c852890 '__SVFloat16_t'
|-TypedefDecl 0x12c010e40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12c8528b0 '__SVFloat32_t'
|-TypedefDecl 0x12c010ea8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12c8528d0 '__SVFloat64_t'
|-TypedefDecl 0x12c010f10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12c8528f0 '__SVBfloat16_t'
|-TypedefDecl 0x12c010f78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12c852910 '__clang_svint8x2_t'
|-TypedefDecl 0x12c010fe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12c852930 '__clang_svint16x2_t'
|-TypedefDecl 0x12c011048 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12c852950 '__clang_svint32x2_t'
|-TypedefDecl 0x12c0110b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12c852970 '__clang_svint64x2_t'
|-TypedefDecl 0x12c011118 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12c852990 '__clang_svuint8x2_t'
|-TypedefDecl 0x12c011180 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12c8529b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12c0111e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12c8529d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12c011250 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12c8529f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12c0112b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12c852a10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12c011320 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12c852a30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12c011388 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12c852a50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12c0113f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12c852a70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12c011458 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12c852a90 '__clang_svint8x3_t'
|-TypedefDecl 0x12c0114c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12c852ab0 '__clang_svint16x3_t'
|-TypedefDecl 0x12c011528 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12c852ad0 '__clang_svint32x3_t'
|-TypedefDecl 0x12c011590 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12c852af0 '__clang_svint64x3_t'
|-TypedefDecl 0x12c0115f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12c852b10 '__clang_svuint8x3_t'
|-TypedefDecl 0x12c011660 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12c852b30 '__clang_svuint16x3_t'
|-TypedefDecl 0x12c0116c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12c852b50 '__clang_svuint32x3_t'
|-TypedefDecl 0x12c011730 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12c852b70 '__clang_svuint64x3_t'
|-TypedefDecl 0x12c011798 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12c852b90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12c011800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12c852bb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12c011868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12c852bd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12c0118d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12c852bf0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12c011938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12c852c10 '__clang_svint8x4_t'
|-TypedefDecl 0x12c0119a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12c852c30 '__clang_svint16x4_t'
|-TypedefDecl 0x12c011a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12c852c50 '__clang_svint32x4_t'
|-TypedefDecl 0x12c011a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12c852c70 '__clang_svint64x4_t'
|-TypedefDecl 0x12c011ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12c852c90 '__clang_svuint8x4_t'
|-TypedefDecl 0x12c011b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12c852cb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12c011ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12c852cd0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12c011c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12c852cf0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12c011c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12c852d10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12c011ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12c852d30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12c011d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12c852d50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12c011db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12c852d70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12c011e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12c852d90 '__SVBool_t'
|-TypedefDecl 0x12c011e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12c852db0 '__clang_svboolx2_t'
|-TypedefDecl 0x12c011ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12c852dd0 '__clang_svboolx4_t'
|-TypedefDecl 0x12c011f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12c852df0 '__SVCount_t'
|-TypedefDecl 0x12c011ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12c011fb0 'char *'
|   `-BuiltinType 0x12c8520b0 'char'
|-TypedefDecl 0x12c012068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12c011fb0 'char *'
|   `-BuiltinType 0x12c8520b0 'char'
|-FunctionDecl 0x12c012468 <dataset_diviso_filec/func11053_vuln.c:1:1, line:32:1> line:1:1 invalid asn1_get_string 'int (unsigned char **, unsigned char *, unsigned int, char *, int)'
| |-ParmVarDecl 0x12c012140 <line:2:5, col:21> col:21 used buffer 'unsigned char **'
| |-ParmVarDecl 0x12c0121c0 <line:3:5, col:20> col:20 used bufend 'unsigned char *'
| |-ParmVarDecl 0x12c012240 <line:4:5, col:19> col:19 used length 'unsigned int'
| |-ParmVarDecl 0x12c0122c0 <line:5:5, col:20> col:20 used string 'char *'
| |-ParmVarDecl 0x12c012358 <line:6:5, col:19> col:19 invalid strsize 'int'
| `-CompoundStmt 0x12c02d040 <line:7:1, line:32:1>
|   |-IfStmt 0x12c02b868 <line:8:3, line:9:41>
|   | |-BinaryOperator 0x12c0126b0 <line:8:7, col:43> 'int' '>'
|   | | |-ImplicitCastExpr 0x12c012698 <col:7> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x12c012538 <col:7> 'unsigned int' lvalue ParmVar 0x12c012240 'length' 'unsigned int'
|   | | `-CStyleCastExpr 0x12c012670 <col:16, col:43> 'unsigned int' <IntegralCast>
|   | |   `-ParenExpr 0x12c012650 <col:26, col:43> 'long'
|   | |     `-BinaryOperator 0x12c0125f8 <col:27, col:37> 'long' '-'
|   | |       |-ImplicitCastExpr 0x12c0125c8 <col:27> 'unsigned char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x12c012558 <col:27> 'unsigned char *' lvalue ParmVar 0x12c0121c0 'bufend' 'unsigned char *'
|   | |       `-ImplicitCastExpr 0x12c0125e0 <col:36, col:37> 'unsigned char *' <LValueToRValue>
|   | |         `-UnaryOperator 0x12c0125b0 <col:36, col:37> 'unsigned char *' lvalue prefix '*' cannot overflow
|   | |           `-ImplicitCastExpr 0x12c012598 <col:37> 'unsigned char **' <LValueToRValue>
|   | |             `-DeclRefExpr 0x12c012578 <col:37> 'unsigned char **' lvalue ParmVar 0x12c012140 'buffer' 'unsigned char **'
|   | `-BinaryOperator 0x12c02b848 <line:9:5, col:41> 'unsigned int' '='
|   |   |-DeclRefExpr 0x12c0126d0 <col:5> 'unsigned int' lvalue ParmVar 0x12c012240 'length' 'unsigned int'
|   |   `-CStyleCastExpr 0x12c02b820 <col:14, col:41> 'unsigned int' <IntegralCast>
|   |     `-ParenExpr 0x12c02b800 <col:24, col:41> 'long'
|   |       `-BinaryOperator 0x12c012790 <col:25, col:35> 'long' '-'
|   |         |-ImplicitCastExpr 0x12c012760 <col:25> 'unsigned char *' <LValueToRValue>
|   |         | `-DeclRefExpr 0x12c0126f0 <col:25> 'unsigned char *' lvalue ParmVar 0x12c0121c0 'bufend' 'unsigned char *'
|   |         `-ImplicitCastExpr 0x12c012778 <col:34, col:35> 'unsigned char *' <LValueToRValue>
|   |           `-UnaryOperator 0x12c012748 <col:34, col:35> 'unsigned char *' lvalue prefix '*' cannot overflow
|   |             `-ImplicitCastExpr 0x12c012730 <col:35> 'unsigned char **' <LValueToRValue>
|   |               `-DeclRefExpr 0x12c012710 <col:35> 'unsigned char **' lvalue ParmVar 0x12c012140 'buffer' 'unsigned char **'
|   |-IfStmt 0x12c02c608 <line:11:3, line:26:3> has_else
|   | |-BinaryOperator 0x12c02b8c8 <line:11:7, col:16> 'int' contains-errors '<'
|   | | |-DeclRefExpr 0x12c02b888 <col:7> 'unsigned int' lvalue ParmVar 0x12c012240 'length' 'unsigned int'
|   | | `-RecoveryExpr 0x12c02b8a8 <col:16> '<dependent type>' contains-errors lvalue
|   | |-CompoundStmt 0x12c02c380 <line:12:3, line:19:3>
|   | | |-IfStmt 0x12c02c280 <line:15:5, line:16:37>
|   | | | |-BinaryOperator 0x12c02b958 <line:15:9, col:18> 'int' '>'
|   | | | | |-ImplicitCastExpr 0x12c02b928 <col:9> 'unsigned int' <LValueToRValue>
|   | | | | | `-DeclRefExpr 0x12c02b8e8 <col:9> 'unsigned int' lvalue ParmVar 0x12c012240 'length' 'unsigned int'
|   | | | | `-ImplicitCastExpr 0x12c02b940 <col:18> 'unsigned int' <IntegralCast>
|   | | | |   `-IntegerLiteral 0x12c02b908 <col:18> 'int' 0
|   | | | `-CallExpr 0x12c02c1b8 <line:16:7, col:37> 'void *'
|   | | |   |-ImplicitCastExpr 0x12c02c1a0 <col:7> 'void *(*)(void *, const void *, unsigned long)' <FunctionToPointerDecay>
|   | | |   | `-DeclRefExpr 0x12c02c070 <col:7> 'void *(void *, const void *, unsigned long)' Function 0x12c02be20 'memcpy' 'void *(void *, const void *, unsigned long)'
|   | | |   |-ImplicitCastExpr 0x12c02c208 <col:14> 'void *' <BitCast>
|   | | |   | `-ImplicitCastExpr 0x12c02c1f0 <col:14> 'char *' <LValueToRValue>
|   | | |   |   `-DeclRefExpr 0x12c02c090 <col:14> 'char *' lvalue ParmVar 0x12c0122c0 'string' 'char *'
|   | | |   |-ImplicitCastExpr 0x12c02c238 <col:22, col:23> 'const void *' <BitCast>
|   | | |   | `-ImplicitCastExpr 0x12c02c220 <col:22, col:23> 'unsigned char *' <LValueToRValue>
|   | | |   |   `-UnaryOperator 0x12c02c0e8 <col:22, col:23> 'unsigned char *' lvalue prefix '*' cannot overflow
|   | | |   |     `-ImplicitCastExpr 0x12c02c0d0 <col:23> 'unsigned char **' <LValueToRValue>
|   | | |   |       `-DeclRefExpr 0x12c02c0b0 <col:23> 'unsigned char **' lvalue ParmVar 0x12c012140 'buffer' 'unsigned char **'
|   | | |   `-ImplicitCastExpr 0x12c02c268 <col:31> 'unsigned long' <IntegralCast>
|   | | |     `-ImplicitCastExpr 0x12c02c250 <col:31> 'unsigned int' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x12c02c100 <col:31> 'unsigned int' lvalue ParmVar 0x12c012240 'length' 'unsigned int'
|   | | `-BinaryOperator 0x12c02c360 <line:18:5, col:22> 'char' '='
|   | |   |-ArraySubscriptExpr 0x12c02c310 <col:5, col:18> 'char' lvalue
|   | |   | |-ImplicitCastExpr 0x12c02c2e0 <col:5> 'char *' <LValueToRValue>
|   | |   | | `-DeclRefExpr 0x12c02c2a0 <col:5> 'char *' lvalue ParmVar 0x12c0122c0 'string' 'char *'
|   | |   | `-ImplicitCastExpr 0x12c02c2f8 <col:12> 'unsigned int' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x12c02c2c0 <col:12> 'unsigned int' lvalue ParmVar 0x12c012240 'length' 'unsigned int'
|   | |   `-ImplicitCastExpr 0x12c02c348 <col:22> 'char' <IntegralCast>
|   | |     `-CharacterLiteral 0x12c02c330 <col:22> 'int' 0
|   | `-CompoundStmt 0x12c02c5e8 <line:21:3, line:26:3>
|   |   |-CallExpr 0x12c02c4c0 <line:24:5, col:40> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x12c02c3a0 <col:5> 'void *(void *, const void *, unsigned long)' Function 0x12c02be20 'memcpy' 'void *(void *, const void *, unsigned long)'
|   |   | |-DeclRefExpr 0x12c02c3c0 <col:12> 'char *' lvalue ParmVar 0x12c0122c0 'string' 'char *'
|   |   | |-UnaryOperator 0x12c02c418 <col:20, col:21> 'unsigned char *' lvalue prefix '*' cannot overflow
|   |   | | `-ImplicitCastExpr 0x12c02c400 <col:21> 'unsigned char **' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x12c02c3e0 <col:21> 'unsigned char **' lvalue ParmVar 0x12c012140 'buffer' 'unsigned char **'
|   |   | `-BinaryOperator 0x12c02c470 <col:29, col:39> '<dependent type>' contains-errors '-'
|   |   |   |-RecoveryExpr 0x12c02c430 <col:29> '<dependent type>' contains-errors lvalue
|   |   |   `-IntegerLiteral 0x12c02c450 <col:39> 'int' 1
|   |   `-BinaryOperator 0x12c02c5c8 <line:25:5, col:27> '<dependent type>' contains-errors '='
|   |     |-ArraySubscriptExpr 0x12c02c590 <col:5, col:23> '<dependent type>' contains-errors lvalue
|   |     | |-ImplicitCastExpr 0x12c02c578 <col:5> 'char *' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x12c02c4f8 <col:5> 'char *' lvalue ParmVar 0x12c0122c0 'string' 'char *'
|   |     | `-BinaryOperator 0x12c02c558 <col:12, col:22> '<dependent type>' contains-errors '-'
|   |     |   |-RecoveryExpr 0x12c02c518 <col:12> '<dependent type>' contains-errors lvalue
|   |     |   `-IntegerLiteral 0x12c02c538 <col:22> 'int' 1
|   |     `-CharacterLiteral 0x12c02c5b0 <col:27> 'int' 0
|   |-IfStmt 0x12c02c7a0 <line:28:3, line:29:18>
|   | |-BinaryOperator 0x12c02c6a8 <line:28:7, col:16> 'int' '>'
|   | | |-ImplicitCastExpr 0x12c02c678 <col:7> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x12c02c638 <col:7> 'unsigned int' lvalue ParmVar 0x12c012240 'length' 'unsigned int'
|   | | `-ImplicitCastExpr 0x12c02c690 <col:16> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x12c02c658 <col:16> 'int' 0
|   | `-CompoundAssignOperator 0x12c02c770 <line:29:5, col:18> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   |   |-ParenExpr 0x12c02c718 <col:5, col:13> 'unsigned char *' lvalue
|   |   | `-UnaryOperator 0x12c02c700 <col:6, col:7> 'unsigned char *' lvalue prefix '*' cannot overflow
|   |   |   `-ImplicitCastExpr 0x12c02c6e8 <col:7> 'unsigned char **' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x12c02c6c8 <col:7> 'unsigned char **' lvalue ParmVar 0x12c012140 'buffer' 'unsigned char **'
|   |   `-ImplicitCastExpr 0x12c02c758 <col:18> 'unsigned int' <LValueToRValue>
|   |     `-DeclRefExpr 0x12c02c738 <col:18> 'unsigned int' lvalue ParmVar 0x12c012240 'length' 'unsigned int'
|   `-ReturnStmt 0x12c02d030 <line:31:3, col:17>
|     `-ImplicitCastExpr 0x12c02d018 <col:10, col:17> 'int' <PointerToIntegral>
|       `-ImplicitCastExpr 0x12c02d000 <col:10, col:17> 'char *' <LValueToRValue>
|         `-ParenExpr 0x12c02c7e0 <col:10, col:17> 'char *' lvalue
|           `-DeclRefExpr 0x12c02c7c0 <col:11> 'char *' lvalue ParmVar 0x12c0122c0 'string' 'char *'
`-FunctionDecl 0x12c02be20 <line:16:7> col:7 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x12c02bf20 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x12c02bf88 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x12c02bff0 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x12c02bec8 <<invalid sloc>> Implicit 882
