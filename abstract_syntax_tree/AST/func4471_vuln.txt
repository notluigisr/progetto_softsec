TranslationUnitDecl 0x140855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1408564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x140855bd0 '__int128'
|-TypedefDecl 0x140856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x140855bf0 'unsigned __int128'
|-TypedefDecl 0x140926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x140926000 'struct __NSConstantString_tag'
|   `-Record 0x140856580 '__NSConstantString_tag'
|-TypedefDecl 0x140926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x140855d90 '__SVInt8_t'
|-TypedefDecl 0x140926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x140855db0 '__SVInt16_t'
|-TypedefDecl 0x140926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x140855dd0 '__SVInt32_t'
|-TypedefDecl 0x1409263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x140855df0 '__SVInt64_t'
|-TypedefDecl 0x140926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x140855e10 '__SVUint8_t'
|-TypedefDecl 0x1409264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x140855e30 '__SVUint16_t'
|-TypedefDecl 0x140926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x140855e50 '__SVUint32_t'
|-TypedefDecl 0x140926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x140855e70 '__SVUint64_t'
|-TypedefDecl 0x1409265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x140855e90 '__SVFloat16_t'
|-TypedefDecl 0x140926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x140855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1409266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x140855ed0 '__SVFloat64_t'
|-TypedefDecl 0x140926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x140855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x140926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x140855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1409267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x140855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x140926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x140855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1409268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x140855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x140926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x140855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x140926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x140855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1409269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x140855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x140926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x140855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x140926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x140856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x140926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x140856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x140926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x140856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x140926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x140856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x140926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x140856090 '__clang_svint8x3_t'
|-TypedefDecl 0x140926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1408560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x140926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1408560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x140926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1408560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x140926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x140856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x140926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x140856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x140926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x140856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x140926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x140856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x140926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x140856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x140927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1408561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x140927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1408561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1409278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1408561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x140927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x140856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1409279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x140856230 '__clang_svint16x4_t'
|-TypedefDecl 0x140927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x140856250 '__clang_svint32x4_t'
|-TypedefDecl 0x140927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x140856270 '__clang_svint64x4_t'
|-TypedefDecl 0x140927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x140856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x140927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1408562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x140927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1408562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x140927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1408562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x140927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x140856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x140927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x140856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x140927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x140856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x140927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x140856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x140927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x140856390 '__SVBool_t'
|-TypedefDecl 0x140927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1408563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x140927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1408563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x140927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1408563f0 '__SVCount_t'
|-TypedefDecl 0x140927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x140927fb0 'char *'
|   `-BuiltinType 0x1408556b0 'char'
|-TypedefDecl 0x140928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x140927fb0 'char *'
|   `-BuiltinType 0x1408556b0 'char'
|-FunctionDecl 0x140928238 <dataset_diviso_filec/func4471_vuln.c:1:1, line:33:1> line:1:1 write_stacktrace 'int (const char *, const char *)'
| |-ParmVarDecl 0x1409280d8 <col:18, col:30> col:30 used file_name 'const char *'
| |-ParmVarDecl 0x140928158 <col:41, col:53> col:53 used str 'const char *'
| `-CompoundStmt 0x141009ac8 <line:2:1, line:33:1>
|   |-DeclStmt 0x1409283b8 <line:3:2, col:8>
|   | `-VarDecl 0x140928350 <col:2, col:6> col:6 used fd 'int'
|   |-DeclStmt 0x1409284e0 <line:4:2, col:19>
|   | `-VarDecl 0x140928478 <col:2, col:18> col:8 used buffer 'void *[100]'
|   |-DeclStmt 0x140928578 <line:5:2, col:11>
|   | `-VarDecl 0x140928510 <col:2, col:6> col:6 used nptrs 'int'
|   |-DeclStmt 0x140928610 <line:6:2, col:7>
|   | `-VarDecl 0x1409285a8 <col:2, col:6> col:6 used i 'int'
|   |-DeclStmt 0x1409286e0 <line:7:2, col:13>
|   | `-VarDecl 0x140928678 <col:2, col:9> col:9 used strs 'char **'
|   |-BinaryOperator 0x140940be8 <line:9:2, col:31> 'int' '='
|   | |-DeclRefExpr 0x1409286f8 <col:2> 'int' lvalue Var 0x140928510 'nptrs' 'int'
|   | `-CallExpr 0x140940b68 <col:10, col:31> 'int'
|   |   |-ImplicitCastExpr 0x140940b50 <col:10> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x140940ab8 <col:10> 'int ()' Function 0x140940a00 'backtrace' 'int ()'
|   |   |-ImplicitCastExpr 0x140940bd0 <col:20> 'void **' <ArrayToPointerDecay>
|   |   | `-DeclRefExpr 0x140940ad8 <col:20> 'void *[100]' lvalue Var 0x140928478 'buffer' 'void *[100]'
|   |   `-IntegerLiteral 0x140940af8 <col:28> 'int' 100
|   `-IfStmt 0x141009a98 <line:10:2, line:32:2> has_else
|     |-ImplicitCastExpr 0x140940c28 <line:10:6> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x140940c08 <col:6> 'const char *' lvalue ParmVar 0x1409280d8 'file_name' 'const char *'
|     |-CompoundStmt 0x1409417c8 <col:17, line:19:2>
|     | |-BinaryOperator 0x140940f58 <line:11:3, col:59> 'int' contains-errors '='
|     | | |-DeclRefExpr 0x140940c40 <col:3> 'int' lvalue Var 0x140928350 'fd' 'int'
|     | | `-CallExpr 0x140940f20 <col:8, col:59> '<dependent type>' contains-errors
|     | |   |-DeclRefExpr 0x140940d40 <col:8> 'int ()' Function 0x140940c88 'open' 'int ()'
|     | |   |-DeclRefExpr 0x140940d60 <col:13> 'const char *' lvalue ParmVar 0x1409280d8 'file_name' 'const char *'
|     | |   |-BinaryOperator 0x140940f00 <col:24, col:46> '<dependent type>' contains-errors '|'
|     | |   | |-BinaryOperator 0x140940ec0 <col:24, col:35> '<dependent type>' contains-errors '|'
|     | |   | | |-RecoveryExpr 0x140940e80 <col:24> '<dependent type>' contains-errors lvalue
|     | |   | | `-RecoveryExpr 0x140940ea0 <col:35> '<dependent type>' contains-errors lvalue
|     | |   | `-RecoveryExpr 0x140940ee0 <col:46> '<dependent type>' contains-errors lvalue
|     | |   `-IntegerLiteral 0x140940e08 <col:55> 'int' 420
|     | |-IfStmt 0x1409411e8 <line:12:3, line:13:26>
|     | | |-ImplicitCastExpr 0x140940f98 <line:12:7> 'const char *' <LValueToRValue>
|     | | | `-DeclRefExpr 0x140940f78 <col:7> 'const char *' lvalue ParmVar 0x140928158 'str' 'const char *'
|     | | `-CallExpr 0x140941168 <line:13:4, col:26> 'int'
|     | |   |-ImplicitCastExpr 0x140941150 <col:4> 'int (*)()' <FunctionToPointerDecay>
|     | |   | `-DeclRefExpr 0x140941090 <col:4> 'int ()' Function 0x140940fd8 'dprintf' 'int ()'
|     | |   |-ImplicitCastExpr 0x1409411a0 <col:12> 'int' <LValueToRValue>
|     | |   | `-DeclRefExpr 0x1409410b0 <col:12> 'int' lvalue Var 0x140928350 'fd' 'int'
|     | |   |-ImplicitCastExpr 0x1409411b8 <col:16> 'char *' <ArrayToPointerDecay>
|     | |   | `-StringLiteral 0x140941110 <col:16> 'char[4]' lvalue "STR"
|     | |   `-ImplicitCastExpr 0x1409411d0 <col:23> 'const char *' <LValueToRValue>
|     | |     `-DeclRefExpr 0x140941130 <col:23> 'const char *' lvalue ParmVar 0x140928158 'str' 'const char *'
|     | |-CallExpr 0x140941380 <line:14:3, col:41> 'int'
|     | | |-ImplicitCastExpr 0x140941368 <col:3> 'int (*)()' <FunctionToPointerDecay>
|     | | | `-DeclRefExpr 0x1409412e8 <col:3> 'int ()' Function 0x140941230 'backtrace_symbols_fd' 'int ()'
|     | | |-ImplicitCastExpr 0x1409413b8 <col:24> 'void **' <ArrayToPointerDecay>
|     | | | `-DeclRefExpr 0x140941308 <col:24> 'void *[100]' lvalue Var 0x140928478 'buffer' 'void *[100]'
|     | | |-ImplicitCastExpr 0x1409413d0 <col:32> 'int' <LValueToRValue>
|     | | | `-DeclRefExpr 0x140941328 <col:32> 'int' lvalue Var 0x140928510 'nptrs' 'int'
|     | | `-ImplicitCastExpr 0x1409413e8 <col:39> 'int' <LValueToRValue>
|     | |   `-DeclRefExpr 0x140941348 <col:39> 'int' lvalue Var 0x140928350 'fd' 'int'
|     | |-IfStmt 0x140941630 <line:15:3, line:17:3>
|     | | |-BinaryOperator 0x140941600 <line:15:7, col:30> 'int' '!='
|     | | | |-CallExpr 0x140941578 <col:7, col:25> 'int'
|     | | | | |-ImplicitCastExpr 0x140941560 <col:7> 'int (*)()' <FunctionToPointerDecay>
|     | | | | | `-DeclRefExpr 0x1409414e0 <col:7> 'int ()' Function 0x140941428 'write' 'int ()'
|     | | | | |-ImplicitCastExpr 0x1409415b0 <col:13> 'int' <LValueToRValue>
|     | | | | | `-DeclRefExpr 0x140941500 <col:13> 'int' lvalue Var 0x140928350 'fd' 'int'
|     | | | | |-ImplicitCastExpr 0x1409415c8 <col:17> 'char *' <ArrayToPointerDecay>
|     | | | | | `-StringLiteral 0x140941520 <col:17> 'char[4]' lvalue "STR"
|     | | | | `-IntegerLiteral 0x140941540 <col:24> 'int' 1
|     | | | `-IntegerLiteral 0x1409415e0 <col:30> 'int' 1
|     | | `-CompoundStmt 0x140941620 <col:33, line:17:3>
|     | `-CallExpr 0x140941788 <line:18:3, col:11> 'int'
|     |   |-ImplicitCastExpr 0x140941770 <col:3> 'int (*)()' <FunctionToPointerDecay>
|     |   | `-DeclRefExpr 0x140941730 <col:3> 'int ()' Function 0x140941678 'close' 'int ()'
|     |   `-ImplicitCastExpr 0x1409417b0 <col:9> 'int' <LValueToRValue>
|     |     `-DeclRefExpr 0x140941750 <col:9> 'int' lvalue Var 0x140928350 'fd' 'int'
|     `-CompoundStmt 0x141009a60 <line:19:9, line:32:2>
|       |-IfStmt 0x141008c38 <line:20:3, line:21:36>
|       | |-ImplicitCastExpr 0x140941820 <line:20:7> 'const char *' <LValueToRValue>
|       | | `-DeclRefExpr 0x140941800 <col:7> 'const char *' lvalue ParmVar 0x140928158 'str' 'const char *'
|       | `-CallExpr 0x141008c00 <line:21:4, col:36> '<dependent type>' contains-errors
|       |   |-DeclRefExpr 0x140941918 <col:4> 'int ()' Function 0x140941860 'log_message' 'int ()'
|       |   |-RecoveryExpr 0x1409419c8 <col:16> '<dependent type>' contains-errors lvalue
|       |   |-StringLiteral 0x140941950 <col:26> 'char[4]' lvalue "STR"
|       |   `-DeclRefExpr 0x140941970 <col:33> 'const char *' lvalue ParmVar 0x140928158 'str' 'const char *'
|       |-BinaryOperator 0x141009270 <line:22:3, col:41> 'char **' '='
|       | |-DeclRefExpr 0x141008c58 <col:3> 'char **' lvalue Var 0x140928678 'strs' 'char **'
|       | `-ImplicitCastExpr 0x141008e30 <col:10, col:41> 'char **' <IntegralToPointer>
|       |   `-CallExpr 0x141008dd0 <col:10, col:41> 'int'
|       |     |-ImplicitCastExpr 0x141008db8 <col:10> 'int (*)()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x141008d58 <col:10> 'int ()' Function 0x141008ca0 'backtrace_symbols' 'int ()'
|       |     |-ImplicitCastExpr 0x141008e00 <col:28> 'void **' <ArrayToPointerDecay>
|       |     | `-DeclRefExpr 0x141008d78 <col:28> 'void *[100]' lvalue Var 0x140928478 'buffer' 'void *[100]'
|       |     `-ImplicitCastExpr 0x141008e18 <col:36> 'int' <LValueToRValue>
|       |       `-DeclRefExpr 0x141008d98 <col:36> 'int' lvalue Var 0x140928510 'nptrs' 'int'
|       |-IfStmt 0x141009430 <line:23:3, line:26:3>
|       | |-BinaryOperator 0x141009308 <line:23:7, col:15> 'int' contains-errors '=='
|       | | |-DeclRefExpr 0x141009290 <col:7> 'char **' lvalue Var 0x140928678 'strs' 'char **'
|       | | `-RecoveryExpr 0x1410092e8 <col:15> '<dependent type>' contains-errors lvalue
|       | `-CompoundStmt 0x141009410 <col:21, line:26:3>
|       |   |-CallExpr 0x1410093d0 <line:24:4, col:31> '<dependent type>' contains-errors
|       |   | |-DeclRefExpr 0x141009328 <col:4> 'int ()' Function 0x140941860 'log_message' 'int ()'
|       |   | |-RecoveryExpr 0x1410093b0 <col:16> '<dependent type>' contains-errors lvalue
|       |   | `-StringLiteral 0x141009360 <col:26> 'char[4]' lvalue "STR"
|       |   `-ReturnStmt 0x141009400 <line:25:4>
|       |-ForStmt 0x141009780 <line:29:3, line:30:40>
|       | |-BinaryOperator 0x141009490 <line:29:8, col:12> 'int' '='
|       | | |-DeclRefExpr 0x141009450 <col:8> 'int' lvalue Var 0x1409285a8 'i' 'int'
|       | | `-IntegerLiteral 0x141009470 <col:12> 'int' 1
|       | |-<<<NULL>>>
|       | |-BinaryOperator 0x141009560 <col:15, col:27> 'int' '<'
|       | | |-ImplicitCastExpr 0x141009548 <col:15> 'int' <LValueToRValue>
|       | | | `-DeclRefExpr 0x1410094b0 <col:15> 'int' lvalue Var 0x1409285a8 'i' 'int'
|       | | `-BinaryOperator 0x141009528 <col:19, col:27> 'int' '-'
|       | |   |-ImplicitCastExpr 0x141009510 <col:19> 'int' <LValueToRValue>
|       | |   | `-DeclRefExpr 0x1410094d0 <col:19> 'int' lvalue Var 0x140928510 'nptrs' 'int'
|       | |   `-IntegerLiteral 0x1410094f0 <col:27> 'int' 2
|       | |-UnaryOperator 0x1410095a0 <col:30, col:31> 'int' postfix '++'
|       | | `-DeclRefExpr 0x141009580 <col:30> 'int' lvalue Var 0x1409285a8 'i' 'int'
|       | `-CallExpr 0x141009748 <line:30:4, col:40> '<dependent type>' contains-errors
|       |   |-DeclRefExpr 0x1410095b8 <col:4> 'int ()' Function 0x140941860 'log_message' 'int ()'
|       |   |-RecoveryExpr 0x1410096d8 <col:16> '<dependent type>' contains-errors lvalue
|       |   |-StringLiteral 0x1410095f0 <col:26> 'char[4]' lvalue "STR"
|       |   `-ArraySubscriptExpr 0x141009728 <col:33, col:39> 'char *' lvalue
|       |     |-ImplicitCastExpr 0x1410096f8 <col:33> 'char **' <LValueToRValue>
|       |     | `-DeclRefExpr 0x141009610 <col:33> 'char **' lvalue Var 0x140928678 'strs' 'char **'
|       |     `-ImplicitCastExpr 0x141009710 <col:38> 'int' <LValueToRValue>
|       |       `-DeclRefExpr 0x141009630 <col:38> 'int' lvalue Var 0x1409285a8 'i' 'int'
|       `-CallExpr 0x141009a08 <line:31:3, col:12> 'void'
|         |-ImplicitCastExpr 0x1410099f0 <col:3> 'void (*)(void *)' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x141009968 <col:3> 'void (void *)' Function 0x1410097f8 'free' 'void (void *)'
|         `-ImplicitCastExpr 0x141009a48 <col:8> 'void *' <BitCast>
|           `-ImplicitCastExpr 0x141009a30 <col:8> 'char **' <LValueToRValue>
|             `-DeclRefExpr 0x141009988 <col:8> 'char **' lvalue Var 0x140928678 'strs' 'char **'
`-FunctionDecl 0x1410097f8 <col:3> col:3 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x1410098f8 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x1410098a0 <<invalid sloc>> Implicit 873
