TranslationUnitDecl 0x13c051a08 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13c0528b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13c051fd0 '__int128'
|-TypedefDecl 0x13c052928 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13c051ff0 'unsigned __int128'
|-TypedefDecl 0x13c80be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13c80bc00 'struct __NSConstantString_tag'
|   `-Record 0x13c052980 '__NSConstantString_tag'
|-TypedefDecl 0x13c80be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13c052190 '__SVInt8_t'
|-TypedefDecl 0x13c80bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13c0521b0 '__SVInt16_t'
|-TypedefDecl 0x13c80bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13c0521d0 '__SVInt32_t'
|-TypedefDecl 0x13c80bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13c0521f0 '__SVInt64_t'
|-TypedefDecl 0x13c80c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13c052210 '__SVUint8_t'
|-TypedefDecl 0x13c80c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13c052230 '__SVUint16_t'
|-TypedefDecl 0x13c80c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13c052250 '__SVUint32_t'
|-TypedefDecl 0x13c80c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13c052270 '__SVUint64_t'
|-TypedefDecl 0x13c80c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13c052290 '__SVFloat16_t'
|-TypedefDecl 0x13c80c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13c0522b0 '__SVFloat32_t'
|-TypedefDecl 0x13c80c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13c0522d0 '__SVFloat64_t'
|-TypedefDecl 0x13c80c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13c0522f0 '__SVBfloat16_t'
|-TypedefDecl 0x13c80c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13c052310 '__clang_svint8x2_t'
|-TypedefDecl 0x13c80c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13c052330 '__clang_svint16x2_t'
|-TypedefDecl 0x13c80c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13c052350 '__clang_svint32x2_t'
|-TypedefDecl 0x13c80c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13c052370 '__clang_svint64x2_t'
|-TypedefDecl 0x13c80c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13c052390 '__clang_svuint8x2_t'
|-TypedefDecl 0x13c80c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13c0523b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13c80c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13c0523d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13c80c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13c0523f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13c80c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13c052410 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13c80c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13c052430 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13c80c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13c052450 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13c80c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13c052470 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13c80c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13c052490 '__clang_svint8x3_t'
|-TypedefDecl 0x13c80c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13c0524b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13c80c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13c0524d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13c80c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13c0524f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13c80c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13c052510 '__clang_svuint8x3_t'
|-TypedefDecl 0x13c80ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13c052530 '__clang_svuint16x3_t'
|-TypedefDecl 0x13c80cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13c052550 '__clang_svuint32x3_t'
|-TypedefDecl 0x13c80cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13c052570 '__clang_svuint64x3_t'
|-TypedefDecl 0x13c80cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13c052590 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13c80d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13c0525b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13c80d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13c0525d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13c80d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13c0525f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13c80d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13c052610 '__clang_svint8x4_t'
|-TypedefDecl 0x13c80d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13c052630 '__clang_svint16x4_t'
|-TypedefDecl 0x13c80d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13c052650 '__clang_svint32x4_t'
|-TypedefDecl 0x13c80d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13c052670 '__clang_svint64x4_t'
|-TypedefDecl 0x13c80d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13c052690 '__clang_svuint8x4_t'
|-TypedefDecl 0x13c80d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13c0526b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13c80d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13c0526d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13c80d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13c0526f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13c80d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13c052710 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13c80d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13c052730 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13c80d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13c052750 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13c80d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13c052770 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13c80da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13c052790 '__SVBool_t'
|-TypedefDecl 0x13c80da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13c0527b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13c80dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13c0527d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13c80db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13c0527f0 '__SVCount_t'
|-TypedefDecl 0x13c80dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13c80dbb0 'char *'
|   `-BuiltinType 0x13c051ab0 'char'
|-TypedefDecl 0x13c80dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13c80dbb0 'char *'
|   `-BuiltinType 0x13c051ab0 'char'
|-FunctionDecl 0x13c80ddf8 <dataset_diviso_filec/func12961_vuln.c:1:1, line:89:1> line:1:1 invalid amstar_selfcheck 'int (int *)'
| |-ParmVarDecl 0x13c80dd28 <line:2:5, col:29> col:29 invalid argument 'int *'
| `-CompoundStmt 0x13c829fa8 <line:3:1, line:89:1>
|   |-DeclStmt 0x13c80df28 <line:4:5, col:17>
|   | `-VarDecl 0x13c80dec0 <col:5, col:11> col:11 used option 'char *'
|   |-IfStmt 0x13c11f6e0 <line:6:5, line:10:5>
|   | |-CXXDependentScopeMemberExpr 0x13c80dfa8 <line:6:9, col:23> '<dependent type>' contains-errors lvalue .disk
|   | | `-CXXDependentScopeMemberExpr 0x13c80df60 <col:9, col:19> '<dependent type>' contains-errors lvalue ->dle
|   | |   `-RecoveryExpr 0x13c80df40 <col:9> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x13c11f6b8 <col:29, line:10:5>
|   |   |-DeclStmt 0x13c80e2c8 <line:7:2, col:48>
|   |   | `-VarDecl 0x13c80e008 <col:2, col:47> col:8 used qdisk 'char *' cinit
|   |   |   `-CallExpr 0x13c80e2a0 <col:16, col:47> '<dependent type>' contains-errors
|   |   |     |-DeclRefExpr 0x13c80e1d0 <col:16> 'int ()' Function 0x13c80e118 'quote_string' 'int ()'
|   |   |     `-CXXDependentScopeMemberExpr 0x13c80e258 <col:29, col:43> '<dependent type>' contains-errors lvalue .disk
|   |   |       `-CXXDependentScopeMemberExpr 0x13c80e210 <col:29, col:39> '<dependent type>' contains-errors lvalue ->dle
|   |   |         `-RecoveryExpr 0x13c80e1f0 <col:29> '<dependent type>' contains-errors lvalue
|   |   |-CallExpr 0x13c11f4d8 <line:8:2, col:30> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x13c80e3c0 <col:2> 'int ()' Function 0x13c80e308 'fprintf' 'int ()'
|   |   | |-RecoveryExpr 0x13c11f4b8 <col:10> '<dependent type>' contains-errors lvalue
|   |   | |-StringLiteral 0x13c11f440 <col:18> 'char[4]' lvalue "STR"
|   |   | `-DeclRefExpr 0x13c11f460 <col:25> 'char *' contains-errors lvalue Var 0x13c80e008 'qdisk' 'char *'
|   |   `-CallExpr 0x13c11f678 <line:9:2, col:14> 'int' contains-errors
|   |     |-ImplicitCastExpr 0x13c11f660 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x13c11f5f0 <col:2> 'int ()' Function 0x13c11f538 'amfree' 'int ()'
|   |     `-ImplicitCastExpr 0x13c11f6a0 <col:9> 'char *' contains-errors <LValueToRValue>
|   |       `-DeclRefExpr 0x13c11f610 <col:9> 'char *' contains-errors lvalue Var 0x13c80e008 'qdisk' 'char *'
|   |-CallExpr 0x13c11f7e8 <line:12:5, col:35> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x13c11f700 <col:5> 'int ()' Function 0x13c80e308 'fprintf' 'int ()'
|   | |-RecoveryExpr 0x13c11f7a8 <col:13> '<dependent type>' contains-errors lvalue
|   | |-StringLiteral 0x13c11f738 <col:21> 'char[4]' lvalue "STR"
|   | `-RecoveryExpr 0x13c11f7c8 <col:28> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x13c11f8c8 <line:13:5, col:26> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x13c11f820 <col:5> 'int ()' Function 0x13c80e308 'fprintf' 'int ()'
|   | |-RecoveryExpr 0x13c11f8a8 <col:13> '<dependent type>' contains-errors lvalue
|   | `-StringLiteral 0x13c11f858 <col:21> 'char[4]' lvalue "STR"
|   |-IfStmt 0x13c11fd00 <line:15:5, line:19:5>
|   | |-CXXDependentScopeMemberExpr 0x13c11f960 <line:15:9, col:23> '<dependent type>' contains-errors lvalue .device
|   | | `-CXXDependentScopeMemberExpr 0x13c11f918 <col:9, col:19> '<dependent type>' contains-errors lvalue ->dle
|   | |   `-RecoveryExpr 0x13c11f8f8 <col:9> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x13c11fcd8 <col:31, line:19:5>
|   |   |-DeclStmt 0x13c11fb20 <line:16:2, col:52>
|   |   | `-VarDecl 0x13c11f9c0 <col:2, col:51> col:8 used qdevice 'char *' cinit
|   |   |   `-CallExpr 0x13c11faf8 <col:18, col:51> '<dependent type>' contains-errors
|   |   |     |-DeclRefExpr 0x13c11fa28 <col:18> 'int ()' Function 0x13c80e118 'quote_string' 'int ()'
|   |   |     `-CXXDependentScopeMemberExpr 0x13c11fab0 <col:31, col:45> '<dependent type>' contains-errors lvalue .device
|   |   |       `-CXXDependentScopeMemberExpr 0x13c11fa68 <col:31, col:41> '<dependent type>' contains-errors lvalue ->dle
|   |   |         `-RecoveryExpr 0x13c11fa48 <col:31> '<dependent type>' contains-errors lvalue
|   |   |-CallExpr 0x13c11fc08 <line:17:2, col:32> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x13c11fb38 <col:2> 'int ()' Function 0x13c80e308 'fprintf' 'int ()'
|   |   | |-RecoveryExpr 0x13c11fbe8 <col:10> '<dependent type>' contains-errors lvalue
|   |   | |-StringLiteral 0x13c11fb70 <col:18> 'char[4]' lvalue "STR"
|   |   | `-DeclRefExpr 0x13c11fb90 <col:25> 'char *' contains-errors lvalue Var 0x13c11f9c0 'qdevice' 'char *'
|   |   `-CallExpr 0x13c11fc98 <line:18:2, col:16> 'int' contains-errors
|   |     |-ImplicitCastExpr 0x13c11fc80 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x13c11fc40 <col:2> 'int ()' Function 0x13c11f538 'amfree' 'int ()'
|   |     `-ImplicitCastExpr 0x13c11fcc0 <col:9> 'char *' contains-errors <LValueToRValue>
|   |       `-DeclRefExpr 0x13c11fc60 <col:9> 'char *' contains-errors lvalue Var 0x13c11f9c0 'qdevice' 'char *'
|   |-IfStmt 0x13c120060 <line:20:5, line:24:5>
|   | |-RecoveryExpr 0x13c11fd38 <line:20:9> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x13c120038 <col:25, line:24:5>
|   |   |-DeclStmt 0x13c11fe80 <line:21:2, col:49>
|   |   | `-VarDecl 0x13c11fd70 <col:2, col:48> col:8 used qdirectory 'char *' cinit
|   |   |   `-CallExpr 0x13c11fe58 <col:21, col:48> '<dependent type>' contains-errors
|   |   |     |-DeclRefExpr 0x13c11fdd8 <col:21> 'int ()' Function 0x13c80e118 'quote_string' 'int ()'
|   |   |     `-RecoveryExpr 0x13c11fe38 <col:34> '<dependent type>' contains-errors lvalue
|   |   |-CallExpr 0x13c11ff68 <line:22:2, col:35> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x13c11fe98 <col:2> 'int ()' Function 0x13c80e308 'fprintf' 'int ()'
|   |   | |-RecoveryExpr 0x13c11ff48 <col:10> '<dependent type>' contains-errors lvalue
|   |   | |-StringLiteral 0x13c11fed0 <col:18> 'char[4]' lvalue "STR"
|   |   | `-DeclRefExpr 0x13c11fef0 <col:25> 'char *' contains-errors lvalue Var 0x13c11fd70 'qdirectory' 'char *'
|   |   `-CallExpr 0x13c11fff8 <line:23:2, col:19> 'int' contains-errors
|   |     |-ImplicitCastExpr 0x13c11ffe0 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x13c11ffa0 <col:2> 'int ()' Function 0x13c11f538 'amfree' 'int ()'
|   |     `-ImplicitCastExpr 0x13c120020 <col:9> 'char *' contains-errors <LValueToRValue>
|   |       `-DeclRefExpr 0x13c11ffc0 <col:9> 'char *' contains-errors lvalue Var 0x13c11fd70 'qdirectory' 'char *'
|   |-IfStmt 0x13c827af0 <line:26:5, line:35:5>
|   | |-BinaryOperator 0x13c8279e0 <line:26:9, line:33:48> 'int' contains-errors '&&'
|   | | |-ParenExpr 0x13c827530 <line:26:9, line:29:48> 'int' contains-errors
|   | | | `-BinaryOperator 0x13c827510 <line:26:10, line:29:47> 'int' contains-errors '||'
|   | | |   |-ParenExpr 0x13c120288 <line:26:10, line:27:47> 'int' contains-errors
|   | | |   | `-BinaryOperator 0x13c120268 <line:26:11, line:27:46> 'int' contains-errors '&&'
|   | | |   |   |-CXXDependentScopeMemberExpr 0x13c1200e8 <line:26:11, col:25> '<dependent type>' contains-errors lvalue .include_list
|   | | |   |   | `-CXXDependentScopeMemberExpr 0x13c1200a0 <col:11, col:21> '<dependent type>' contains-errors lvalue ->dle
|   | | |   |   |   `-RecoveryExpr 0x13c120080 <col:11> '<dependent type>' contains-errors lvalue
|   | | |   |   `-BinaryOperator 0x13c120248 <line:27:4, col:46> 'int' contains-errors '>='
|   | | |   |     |-CXXDependentScopeMemberExpr 0x13c1201e0 <col:4, col:32> '<dependent type>' contains-errors lvalue ->nb_element
|   | | |   |     | `-CXXDependentScopeMemberExpr 0x13c120198 <col:4, col:18> '<dependent type>' contains-errors lvalue .include_list
|   | | |   |     |   `-CXXDependentScopeMemberExpr 0x13c120150 <col:4, col:14> '<dependent type>' contains-errors lvalue ->dle
|   | | |   |     |     `-RecoveryExpr 0x13c120130 <col:4> '<dependent type>' contains-errors lvalue
|   | | |   |     `-IntegerLiteral 0x13c120228 <col:46> 'int' 0
|   | | |   `-ParenExpr 0x13c8274f0 <line:28:10, line:29:47> 'int' contains-errors
|   | | |     `-BinaryOperator 0x13c8274d0 <line:28:11, line:29:46> 'int' contains-errors '&&'
|   | | |       |-CXXDependentScopeMemberExpr 0x13c120310 <line:28:11, col:25> '<dependent type>' contains-errors lvalue .include_file
|   | | |       | `-CXXDependentScopeMemberExpr 0x13c1202c8 <col:11, col:21> '<dependent type>' contains-errors lvalue ->dle
|   | | |       |   `-RecoveryExpr 0x13c1202a8 <col:11> '<dependent type>' contains-errors lvalue
|   | | |       `-BinaryOperator 0x13c8274b0 <line:29:4, col:46> 'int' contains-errors '>='
|   | | |         |-CXXDependentScopeMemberExpr 0x13c827448 <col:4, col:32> '<dependent type>' contains-errors lvalue ->nb_element
|   | | |         | `-CXXDependentScopeMemberExpr 0x13c827400 <col:4, col:18> '<dependent type>' contains-errors lvalue .include_file
|   | | |         |   `-CXXDependentScopeMemberExpr 0x13c120378 <col:4, col:14> '<dependent type>' contains-errors lvalue ->dle
|   | | |         |     `-RecoveryExpr 0x13c120358 <col:4> '<dependent type>' contains-errors lvalue
|   | | |         `-IntegerLiteral 0x13c827490 <col:46> 'int' 0
|   | | `-ParenExpr 0x13c8279c0 <line:30:2, line:33:48> 'int' contains-errors
|   | |   `-BinaryOperator 0x13c8279a0 <line:30:3, line:33:47> 'int' contains-errors '||'
|   | |     |-ParenExpr 0x13c827758 <line:30:3, line:31:47> 'int' contains-errors
|   | |     | `-BinaryOperator 0x13c827738 <line:30:4, line:31:46> 'int' contains-errors '&&'
|   | |     |   |-CXXDependentScopeMemberExpr 0x13c8275b8 <line:30:4, col:18> '<dependent type>' contains-errors lvalue .exclude_list
|   | |     |   | `-CXXDependentScopeMemberExpr 0x13c827570 <col:4, col:14> '<dependent type>' contains-errors lvalue ->dle
|   | |     |   |   `-RecoveryExpr 0x13c827550 <col:4> '<dependent type>' contains-errors lvalue
|   | |     |   `-BinaryOperator 0x13c827718 <line:31:4, col:46> 'int' contains-errors '>='
|   | |     |     |-CXXDependentScopeMemberExpr 0x13c8276b0 <col:4, col:32> '<dependent type>' contains-errors lvalue ->nb_element
|   | |     |     | `-CXXDependentScopeMemberExpr 0x13c827668 <col:4, col:18> '<dependent type>' contains-errors lvalue .exclude_list
|   | |     |     |   `-CXXDependentScopeMemberExpr 0x13c827620 <col:4, col:14> '<dependent type>' contains-errors lvalue ->dle
|   | |     |     |     `-RecoveryExpr 0x13c827600 <col:4> '<dependent type>' contains-errors lvalue
|   | |     |     `-IntegerLiteral 0x13c8276f8 <col:46> 'int' 0
|   | |     `-ParenExpr 0x13c827980 <line:32:10, line:33:47> 'int' contains-errors
|   | |       `-BinaryOperator 0x13c827960 <line:32:11, line:33:46> 'int' contains-errors '&&'
|   | |         |-CXXDependentScopeMemberExpr 0x13c8277e0 <line:32:11, col:25> '<dependent type>' contains-errors lvalue .exclude_file
|   | |         | `-CXXDependentScopeMemberExpr 0x13c827798 <col:11, col:21> '<dependent type>' contains-errors lvalue ->dle
|   | |         |   `-RecoveryExpr 0x13c827778 <col:11> '<dependent type>' contains-errors lvalue
|   | |         `-BinaryOperator 0x13c827940 <line:33:4, col:46> 'int' contains-errors '>='
|   | |           |-CXXDependentScopeMemberExpr 0x13c8278d8 <col:4, col:32> '<dependent type>' contains-errors lvalue ->nb_element
|   | |           | `-CXXDependentScopeMemberExpr 0x13c827890 <col:4, col:18> '<dependent type>' contains-errors lvalue .exclude_file
|   | |           |   `-CXXDependentScopeMemberExpr 0x13c827848 <col:4, col:14> '<dependent type>' contains-errors lvalue ->dle
|   | |           |     `-RecoveryExpr 0x13c827828 <col:4> '<dependent type>' contains-errors lvalue
|   | |           `-IntegerLiteral 0x13c827920 <col:46> 'int' 0
|   | `-CompoundStmt 0x13c827ad8 <col:51, line:35:5>
|   |   `-CallExpr 0x13c827aa8 <line:34:2, col:23> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x13c827a00 <col:2> 'int ()' Function 0x13c80e308 'fprintf' 'int ()'
|   |     |-RecoveryExpr 0x13c827a88 <col:10> '<dependent type>' contains-errors lvalue
|   |     `-StringLiteral 0x13c827a38 <col:18> 'char[4]' lvalue "STR"
|   |-IfStmt 0x13c827d28 <line:37:5, line:39:5>
|   | |-ParenExpr 0x13c827c98 <line:37:9, col:53> 'char *' contains-errors
|   | | `-BinaryOperator 0x13c827c78 <col:10, col:52> 'char *' contains-errors '='
|   | |   |-DeclRefExpr 0x13c827b10 <col:10> 'char *' lvalue Var 0x13c80dec0 'option' 'char *'
|   | |   `-CallExpr 0x13c827c50 <col:19, col:52> '<dependent type>' contains-errors
|   | |     |-DeclRefExpr 0x13c827c10 <col:19> 'int ()' Function 0x13c827b58 'validate_command_options' 'int ()'
|   | |     `-RecoveryExpr 0x13c827c30 <col:44> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x13c827d18 <col:56, line:39:5>
|   |-IfStmt 0x13c829400 <line:41:5, line:68:5> has_else
|   | |-RecoveryExpr 0x13c827d48 <line:41:9, col:10> '_Bool' contains-errors
|   | |-CompoundStmt 0x13c827da8 <col:21, line:43:5>
|   | `-CompoundStmt 0x13c8293d8 <col:12, line:68:5>
|   |   `-IfStmt 0x13c8293b8 <line:44:2, line:67:2>
|   |     |-RecoveryExpr 0x13c827eb8 <line:44:6, col:32> '_Bool' contains-errors
|   |     `-CompoundStmt 0x13c8293a0 <col:35, line:67:2>
|   |       `-IfStmt 0x13c829380 <line:45:6, line:66:6>
|   |         |-RecoveryExpr 0x13c827fd8 <line:45:10, col:45> '_Bool' contains-errors
|   |         `-CompoundStmt 0x13c829358 <col:48, line:66:6>
|   |           |-DeclStmt 0x13c828078 <line:46:3, col:21>
|   |           | `-VarDecl 0x13c828010 <col:3, col:9> col:9 used star_version 'char *'
|   |           |-IfStmt 0x13c829190 <line:55:3, line:63:3> has_else
|   |           | |-ImplicitCastExpr 0x13c8284f8 <line:55:7> 'char *' <LValueToRValue>
|   |           | | `-DeclRefExpr 0x13c8284d8 <col:7> 'char *' lvalue Var 0x13c828010 'star_version' 'char *'
|   |           | |-CompoundStmt 0x13c828fb0 <col:21, line:61:3>
|   |           | | |-DeclStmt 0x13c828628 <line:56:7, col:21>
|   |           | | | |-VarDecl 0x13c828528 <col:7, col:13> col:13 used sv 'char *'
|   |           | | | `-VarDecl 0x13c8285a8 <col:7, col:18> col:18 used sv1 'char *'
|   |           | | |-ForStmt 0x13c828970 <line:57:7, col:66>
|   |           | | | |-BinaryOperator 0x13c828698 <col:12, col:17> 'char *' '='
|   |           | | | | |-DeclRefExpr 0x13c828640 <col:12> 'char *' lvalue Var 0x13c828528 'sv' 'char *'
|   |           | | | | `-ImplicitCastExpr 0x13c828680 <col:17> 'char *' <LValueToRValue>
|   |           | | | |   `-DeclRefExpr 0x13c828660 <col:17> 'char *' lvalue Var 0x13c828010 'star_version' 'char *'
|   |           | | | |-<<<NULL>>>
|   |           | | | |-BinaryOperator 0x13c828910 <col:31, col:58> 'int' '&&'
|   |           | | | | |-ImplicitCastExpr 0x13c8288f8 <col:31, col:32> 'int' <IntegralCast>
|   |           | | | | | `-ImplicitCastExpr 0x13c8288e0 <col:31, col:32> 'char' <LValueToRValue>
|   |           | | | | |   `-UnaryOperator 0x13c8286f0 <col:31, col:32> 'char' lvalue prefix '*' cannot overflow
|   |           | | | | |     `-ImplicitCastExpr 0x13c8286d8 <col:32> 'char *' <LValueToRValue>
|   |           | | | | |       `-DeclRefExpr 0x13c8286b8 <col:32> 'char *' lvalue Var 0x13c828528 'sv' 'char *'
|   |           | | | | `-UnaryOperator 0x13c8288c8 <col:38, col:58> 'int' prefix '!' cannot overflow
|   |           | | | |   `-CallExpr 0x13c828870 <col:39, col:58> 'int'
|   |           | | | |     |-ImplicitCastExpr 0x13c828858 <col:39> 'int (*)()' <FunctionToPointerDecay>
|   |           | | | |     | `-DeclRefExpr 0x13c8287e8 <col:39> 'int ()' Function 0x13c828730 'g_ascii_isdigit' 'int ()'
|   |           | | | |     `-ImplicitCastExpr 0x13c8288b0 <col:55, col:56> 'int' <IntegralCast>
|   |           | | | |       `-ImplicitCastExpr 0x13c828898 <col:55, col:56> 'char' <LValueToRValue>
|   |           | | | |         `-UnaryOperator 0x13c828840 <col:55, col:56> 'char' lvalue prefix '*' cannot overflow
|   |           | | | |           `-ImplicitCastExpr 0x13c828828 <col:56> 'char *' <LValueToRValue>
|   |           | | | |             `-DeclRefExpr 0x13c828808 <col:56> 'char *' lvalue Var 0x13c828528 'sv' 'char *'
|   |           | | | |-UnaryOperator 0x13c828950 <col:61, col:63> 'char *' postfix '++'
|   |           | | | | `-DeclRefExpr 0x13c828930 <col:61> 'char *' lvalue Var 0x13c828528 'sv' 'char *'
|   |           | | | `-NullStmt 0x13c828968 <col:66>
|   |           | | |-ForStmt 0x13c828bb8 <line:58:7, col:49>
|   |           | | | |-BinaryOperator 0x13c828a00 <col:12, col:18> 'char *' '='
|   |           | | | | |-DeclRefExpr 0x13c8289a8 <col:12> 'char *' lvalue Var 0x13c8285a8 'sv1' 'char *'
|   |           | | | | `-ImplicitCastExpr 0x13c8289e8 <col:18> 'char *' <LValueToRValue>
|   |           | | | |   `-DeclRefExpr 0x13c8289c8 <col:18> 'char *' lvalue Var 0x13c828528 'sv' 'char *'
|   |           | | | |-<<<NULL>>>
|   |           | | | |-BinaryOperator 0x13c828b58 <col:22, col:38> 'int' '&&'
|   |           | | | | |-ImplicitCastExpr 0x13c828b40 <col:22, col:23> 'int' <IntegralCast>
|   |           | | | | | `-ImplicitCastExpr 0x13c828b28 <col:22, col:23> 'char' <LValueToRValue>
|   |           | | | | |   `-UnaryOperator 0x13c828a58 <col:22, col:23> 'char' lvalue prefix '*' cannot overflow
|   |           | | | | |     `-ImplicitCastExpr 0x13c828a40 <col:23> 'char *' <LValueToRValue>
|   |           | | | | |       `-DeclRefExpr 0x13c828a20 <col:23> 'char *' lvalue Var 0x13c8285a8 'sv1' 'char *'
|   |           | | | | `-BinaryOperator 0x13c828b08 <col:30, col:38> 'int' '!='
|   |           | | | |   |-ImplicitCastExpr 0x13c828af0 <col:30, col:31> 'int' <IntegralCast>
|   |           | | | |   | `-ImplicitCastExpr 0x13c828ad8 <col:30, col:31> 'char' <LValueToRValue>
|   |           | | | |   |   `-UnaryOperator 0x13c828aa8 <col:30, col:31> 'char' lvalue prefix '*' cannot overflow
|   |           | | | |   |     `-ImplicitCastExpr 0x13c828a90 <col:31> 'char *' <LValueToRValue>
|   |           | | | |   |       `-DeclRefExpr 0x13c828a70 <col:31> 'char *' lvalue Var 0x13c8285a8 'sv1' 'char *'
|   |           | | | |   `-CharacterLiteral 0x13c828ac0 <col:38> 'int' 32
|   |           | | | |-UnaryOperator 0x13c828b98 <col:43, col:46> 'char *' postfix '++'
|   |           | | | | `-DeclRefExpr 0x13c828b78 <col:43> 'char *' lvalue Var 0x13c8285a8 'sv1' 'char *'
|   |           | | | `-NullStmt 0x13c828bb0 <col:49>
|   |           | | |-BinaryOperator 0x13c828c70 <line:59:7, col:14> 'char' '='
|   |           | | | |-UnaryOperator 0x13c828c28 <col:7, col:8> 'char' lvalue prefix '*' cannot overflow
|   |           | | | | `-ImplicitCastExpr 0x13c828c10 <col:8> 'char *' <LValueToRValue>
|   |           | | | |   `-DeclRefExpr 0x13c828bf0 <col:8> 'char *' lvalue Var 0x13c8285a8 'sv1' 'char *'
|   |           | | | `-ImplicitCastExpr 0x13c828c58 <col:14> 'char' <IntegralCast>
|   |           | | |   `-CharacterLiteral 0x13c828c40 <col:14> 'int' 0
|   |           | | `-CallExpr 0x13c828f38 <line:60:7, col:23> 'int'
|   |           | |   |-ImplicitCastExpr 0x13c828f20 <col:7> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |           | |   | `-DeclRefExpr 0x13c828e78 <col:7> 'int (const char *, ...)' Function 0x13c828cd0 'printf' 'int (const char *, ...)'
|   |           | |   |-ImplicitCastExpr 0x13c828f80 <col:14> 'const char *' <NoOp>
|   |           | |   | `-ImplicitCastExpr 0x13c828f68 <col:14> 'char *' <ArrayToPointerDecay>
|   |           | |   |   `-StringLiteral 0x13c828e98 <col:14> 'char[4]' lvalue "STR"
|   |           | |   `-ImplicitCastExpr 0x13c828f98 <col:21> 'char *' <LValueToRValue>
|   |           | |     `-DeclRefExpr 0x13c828eb8 <col:21> 'char *' lvalue Var 0x13c828528 'sv' 'char *'
|   |           | `-CompoundStmt 0x13c829180 <line:61:10, line:63:3>
|   |           `-CallExpr 0x13c829318 <line:65:3, col:22> 'int'
|   |             |-ImplicitCastExpr 0x13c829300 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |             | `-DeclRefExpr 0x13c8292c0 <col:3> 'int ()' Function 0x13c11f538 'amfree' 'int ()'
|   |             `-ImplicitCastExpr 0x13c829340 <col:10> 'char *' <LValueToRValue>
|   |               `-DeclRefExpr 0x13c8292e0 <col:10> 'char *' lvalue Var 0x13c828010 'star_version' 'char *'
|   |-IfStmt 0x13c829908 <line:70:5, line:76:5>
|   | |-CXXDependentScopeMemberExpr 0x13c829450 <line:70:9, col:19> '<dependent type>' contains-errors lvalue ->calcsize
|   | | `-RecoveryExpr 0x13c829430 <col:9> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x13c8298e0 <col:29, line:76:5>
|   |   |-DeclStmt 0x13c829638 <line:71:2, col:55>
|   |   | `-VarDecl 0x13c8294b0 <col:2, col:8> col:8 used calcsize 'char *'
|   |   |-CallExpr 0x13c829808 <line:74:2, col:21> 'int'
|   |   | |-ImplicitCastExpr 0x13c8297f0 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x13c8297b0 <col:2> 'int ()' Function 0x13c8296f8 'check_suid' 'int ()'
|   |   | `-ImplicitCastExpr 0x13c829830 <col:13> 'char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x13c8297d0 <col:13> 'char *' lvalue Var 0x13c8294b0 'calcsize' 'char *'
|   |   `-CallExpr 0x13c8298a0 <line:75:2, col:17> 'int'
|   |     |-ImplicitCastExpr 0x13c829888 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x13c829848 <col:2> 'int ()' Function 0x13c11f538 'amfree' 'int ()'
|   |     `-ImplicitCastExpr 0x13c8298c8 <col:9> 'char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x13c829868 <col:9> 'char *' lvalue Var 0x13c8294b0 'calcsize' 'char *'
|   |-CompoundStmt 0x13c829b20 <line:78:5, line:82:5>
|   | `-DeclStmt 0x13c8299a8 <line:79:2, col:22>
|   |   `-VarDecl 0x13c829940 <col:2, col:8> col:8 used amandates_file 'char *'
|   |-CallExpr 0x13c829c70 <line:84:5, col:21> 'int'
|   | |-ImplicitCastExpr 0x13c829c58 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13c829c18 <col:5> 'int ()' Function 0x13c829b60 'set_root_privs' 'int ()'
|   | `-IntegerLiteral 0x13c829c38 <col:20> 'int' 1
|   |-IfStmt 0x13c829f08 <line:85:5, line:87:5>
|   | |-CXXDependentScopeMemberExpr 0x13c829d00 <line:85:9, col:23> '<dependent type>' contains-errors lvalue .device
|   | | `-CXXDependentScopeMemberExpr 0x13c829cb8 <col:9, col:19> '<dependent type>' contains-errors lvalue ->dle
|   | |   `-RecoveryExpr 0x13c829c98 <col:9> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x13c829ef8 <col:31, line:87:5>
|   `-CallExpr 0x13c829f80 <line:88:5, col:21> 'int'
|     |-ImplicitCastExpr 0x13c829f68 <col:5> 'int (*)()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x13c829f28 <col:5> 'int ()' Function 0x13c829b60 'set_root_privs' 'int ()'
|     `-IntegerLiteral 0x13c829f48 <col:20> 'int' 0
`-FunctionDecl 0x13c828cd0 <line:60:7> col:7 implicit used printf 'int (const char *, ...)' extern
  |-ParmVarDecl 0x13c828dd0 <<invalid sloc>> <invalid sloc> 'const char *'
  |-BuiltinAttr 0x13c828d78 <<invalid sloc>> Implicit 903
  `-FormatAttr 0x13c828e40 <col:7> Implicit printf 1 2
