TranslationUnitDecl 0x143055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1430564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x143055bd0 '__int128'
|-TypedefDecl 0x143056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x143055bf0 'unsigned __int128'
|-TypedefDecl 0x143126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x143126000 'struct __NSConstantString_tag'
|   `-Record 0x143056580 '__NSConstantString_tag'
|-TypedefDecl 0x143126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x143055d90 '__SVInt8_t'
|-TypedefDecl 0x143126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x143055db0 '__SVInt16_t'
|-TypedefDecl 0x143126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x143055dd0 '__SVInt32_t'
|-TypedefDecl 0x1431263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x143055df0 '__SVInt64_t'
|-TypedefDecl 0x143126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x143055e10 '__SVUint8_t'
|-TypedefDecl 0x1431264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x143055e30 '__SVUint16_t'
|-TypedefDecl 0x143126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x143055e50 '__SVUint32_t'
|-TypedefDecl 0x143126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x143055e70 '__SVUint64_t'
|-TypedefDecl 0x1431265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x143055e90 '__SVFloat16_t'
|-TypedefDecl 0x143126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x143055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1431266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x143055ed0 '__SVFloat64_t'
|-TypedefDecl 0x143126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x143055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x143126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x143055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1431267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x143055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x143126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x143055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1431268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x143055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x143126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x143055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x143126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x143055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1431269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x143055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x143126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x143055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x143126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x143056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x143126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x143056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x143126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x143056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x143126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x143056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x143126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x143056090 '__clang_svint8x3_t'
|-TypedefDecl 0x143126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1430560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x143126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1430560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x143126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1430560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x143126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x143056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x143126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x143056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x143126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x143056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x143126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x143056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x143126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x143056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x143127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1430561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x143127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1430561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1431278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1430561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x143127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x143056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1431279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x143056230 '__clang_svint16x4_t'
|-TypedefDecl 0x143127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x143056250 '__clang_svint32x4_t'
|-TypedefDecl 0x143127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x143056270 '__clang_svint64x4_t'
|-TypedefDecl 0x143127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x143056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x143127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1430562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x143127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1430562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x143127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1430562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x143127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x143056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x143127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x143056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x143127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x143056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x143127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x143056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x143127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x143056390 '__SVBool_t'
|-TypedefDecl 0x143127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1430563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x143127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1430563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x143127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1430563f0 '__SVCount_t'
|-TypedefDecl 0x143127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x143127fb0 'char *'
|   `-BuiltinType 0x1430556b0 'char'
|-TypedefDecl 0x143128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x143127fb0 'char *'
|   `-BuiltinType 0x1430556b0 'char'
|-FunctionDecl 0x143128318 <dataset_diviso_filec/func3777_vuln.c:1:1, line:41:1> line:1:1 invalid tar_directory_for_file 'int (int *, const char *, int)'
| |-ParmVarDecl 0x143128128 <col:25, col:39> col:39 referenced invalid dir 'int *'
| |-ParmVarDecl 0x1431281a8 <col:44, col:56> col:56 used name 'const char *'
| |-ParmVarDecl 0x143128228 <col:62, col:71> col:71 invalid last 'int'
| `-CompoundStmt 0x143143980 <line:2:1, line:41:1>
|   |-DeclStmt 0x143128490 <line:3:2, col:22>
|   | `-VarDecl 0x1431283f0 <col:2, col:18> col:14 used s 'const char *' cinit
|   |   `-ImplicitCastExpr 0x143128478 <col:18> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x143128458 <col:18> 'const char *' lvalue ParmVar 0x1431281a8 'name' 'const char *'
|   `-WhileStmt 0x143143960 <line:5:2, line:40:2>
|     |-IntegerLiteral 0x1431284a8 <line:5:9> 'int' 1
|     `-CompoundStmt 0x143143918 <col:12, line:40:2>
|       |-DeclStmt 0x143128580 <line:6:3, col:21>
|       | `-VarDecl 0x1431284e0 <col:3, col:20> col:15 used s0 'const char *' cinit
|       |   `-ImplicitCastExpr 0x143128568 <col:20> 'const char *' <LValueToRValue>
|       |     `-DeclRefExpr 0x143128548 <col:20> 'const char *' lvalue Var 0x1431283f0 's' 'const char *'
|       |-DeclStmt 0x143128618 <line:7:3, col:16>
|       | `-VarDecl 0x1431285b0 <col:3, col:9> col:9 used dirname 'char *'
|       |-WhileStmt 0x1431419d8 <line:10:3, line:21:3>
|       | |-IntegerLiteral 0x143128630 <line:10:10> 'int' 1
|       | `-CompoundStmt 0x1431419b0 <col:13, line:21:3>
|       |   |-IfStmt 0x143141878 <line:11:4, line:16:4>
|       |   | |-BinaryOperator 0x1431286f0 <line:11:8, col:14> 'int' '=='
|       |   | | |-ImplicitCastExpr 0x1431286d8 <col:8, col:9> 'int' <IntegralCast>
|       |   | | | `-ImplicitCastExpr 0x1431286c0 <col:8, col:9> 'char' <LValueToRValue>
|       |   | | |   `-UnaryOperator 0x143128688 <col:8, col:9> 'const char' lvalue prefix '*' cannot overflow
|       |   | | |     `-ImplicitCastExpr 0x143128670 <col:9> 'const char *' <LValueToRValue>
|       |   | | |       `-DeclRefExpr 0x143128650 <col:9> 'const char *' lvalue Var 0x1431283f0 's' 'const char *'
|       |   | | `-IntegerLiteral 0x1431286a0 <col:14> 'int' 0
|       |   | `-CompoundStmt 0x143141860 <col:17, line:16:4>
|       |   |   `-IfStmt 0x143141830 <line:12:5, line:15:13> has_else
|       |   |     |-BinaryOperator 0x1431287c0 <line:12:9, col:22> 'int' contains-errors '&&'
|       |   |     | |-RecoveryExpr 0x143128710 <col:9> '<dependent type>' contains-errors lvalue
|       |   |     | `-BinaryOperator 0x1431287a0 <col:17, col:22> 'int' '!='
|       |   |     |   |-ImplicitCastExpr 0x143128770 <col:17> 'const char *' <LValueToRValue>
|       |   |     |   | `-DeclRefExpr 0x143128730 <col:17> 'const char *' lvalue Var 0x1431283f0 's' 'const char *'
|       |   |     |   `-ImplicitCastExpr 0x143128788 <col:22> 'const char *' <LValueToRValue>
|       |   |     |     `-DeclRefExpr 0x143128750 <col:22> 'const char *' lvalue Var 0x1431284e0 's0' 'const char *'
|       |   |     |-BreakStmt 0x1431287e0 <line:13:6>
|       |   |     `-ReturnStmt 0x143141820 <line:15:6, col:13>
|       |   |       `-RecoveryExpr 0x143141800 <col:13> '<dependent type>' contains-errors lvalue
|       |   |-IfStmt 0x143141958 <line:18:4, line:19:5>
|       |   | |-BinaryOperator 0x143141930 <line:18:8, col:14> 'int' '=='
|       |   | | |-ImplicitCastExpr 0x143141918 <col:8, col:9> 'int' <IntegralCast>
|       |   | | | `-ImplicitCastExpr 0x143141900 <col:8, col:9> 'char' <LValueToRValue>
|       |   | | |   `-UnaryOperator 0x1431418d0 <col:8, col:9> 'const char' lvalue prefix '*' cannot overflow
|       |   | | |     `-ImplicitCastExpr 0x1431418b8 <col:9> 'const char *' <LValueToRValue>
|       |   | | |       `-DeclRefExpr 0x143141898 <col:9> 'const char *' lvalue Var 0x1431283f0 's' 'const char *'
|       |   | | `-CharacterLiteral 0x1431418e8 <col:14> 'int' 47
|       |   | `-BreakStmt 0x143141950 <line:19:5>
|       |   `-UnaryOperator 0x143141998 <line:20:4, col:5> 'const char *' postfix '++'
|       |     `-DeclRefExpr 0x143141978 <col:4> 'const char *' lvalue Var 0x1431283f0 's' 'const char *'
|       |-BinaryOperator 0x143142110 <line:23:3, col:34> 'char *' '='
|       | |-DeclRefExpr 0x1431419f8 <col:3> 'char *' lvalue Var 0x1431285b0 'dirname' 'char *'
|       | `-ImplicitCastExpr 0x143141cd0 <col:13, col:34> 'char *' <IntegralToPointer>
|       |   `-CallExpr 0x143141c88 <col:13, col:34> 'int'
|       |     |-ImplicitCastExpr 0x143141c70 <col:13> 'int (*)()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x143141b70 <col:13> 'int ()' Function 0x143141ab8 'g_strndup' 'int ()'
|       |     |-ImplicitCastExpr 0x143141cb8 <col:24> 'const char *' <LValueToRValue>
|       |     | `-DeclRefExpr 0x143141b90 <col:24> 'const char *' lvalue Var 0x1431284e0 's0' 'const char *'
|       |     `-BinaryOperator 0x143141c20 <col:28, col:32> 'long' '-'
|       |       |-ImplicitCastExpr 0x143141bf0 <col:28> 'const char *' <LValueToRValue>
|       |       | `-DeclRefExpr 0x143141bb0 <col:28> 'const char *' lvalue Var 0x1431283f0 's' 'const char *'
|       |       `-ImplicitCastExpr 0x143141c08 <col:32> 'const char *' <LValueToRValue>
|       |         `-DeclRefExpr 0x143141bd0 <col:32> 'const char *' lvalue Var 0x1431284e0 's0' 'const char *'
|       |-WhileStmt 0x143142220 <line:24:3, line:25:5>
|       | |-BinaryOperator 0x1431421c8 <line:24:10, col:16> 'int' '=='
|       | | |-ImplicitCastExpr 0x1431421b0 <col:10, col:11> 'int' <IntegralCast>
|       | | | `-ImplicitCastExpr 0x143142198 <col:10, col:11> 'char' <LValueToRValue>
|       | | |   `-UnaryOperator 0x143142168 <col:10, col:11> 'const char' lvalue prefix '*' cannot overflow
|       | | |     `-ImplicitCastExpr 0x143142150 <col:11> 'const char *' <LValueToRValue>
|       | | |       `-DeclRefExpr 0x143142130 <col:11> 'const char *' lvalue Var 0x1431283f0 's' 'const char *'
|       | | `-CharacterLiteral 0x143142180 <col:16> 'int' 47
|       | `-UnaryOperator 0x143142208 <line:25:4, col:5> 'const char *' postfix '++'
|       |   `-DeclRefExpr 0x1431421e8 <col:4> 'const char *' lvalue Var 0x1431283f0 's' 'const char *'
|       |-IfStmt 0x143143780 <line:27:3, line:37:3>
|       | |-BinaryOperator 0x143142628 <line:27:7, col:34> 'int' '!='
|       | | |-CallExpr 0x143142578 <col:7, col:29> 'int'
|       | | | |-ImplicitCastExpr 0x143142560 <col:7> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|       | | | | `-DeclRefExpr 0x143142460 <col:7> 'int (const char *, const char *)' Function 0x143142280 'strcmp' 'int (const char *, const char *)'
|       | | | |-ImplicitCastExpr 0x1431425c0 <col:15> 'const char *' <NoOp>
|       | | | | `-ImplicitCastExpr 0x1431425a8 <col:15> 'char *' <LValueToRValue>
|       | | | |   `-DeclRefExpr 0x143142480 <col:15> 'char *' lvalue Var 0x1431285b0 'dirname' 'char *'
|       | | | `-ImplicitCastExpr 0x1431425f0 <col:24> 'const char *' <NoOp>
|       | | |   `-ImplicitCastExpr 0x1431425d8 <col:24> 'char *' <ArrayToPointerDecay>
|       | | |     `-StringLiteral 0x1431424e0 <col:24> 'char[4]' lvalue "STR"
|       | | `-IntegerLiteral 0x143142608 <col:34> 'int' 0
|       | `-CompoundStmt 0x143143768 <col:37, line:37:3>
|       |   `-IfStmt 0x143143738 <line:31:4, line:36:39> has_else
|       |     |-RecoveryExpr 0x143143188 <line:31:8> '<dependent type>' contains-errors lvalue
|       |     |-CompoundStmt 0x143143540 <col:16, line:35:4>
|       |     | |-CallExpr 0x143143308 <line:33:5, col:27> '<dependent type>' contains-errors
|       |     | | |-DeclRefExpr 0x143143288 <col:5> 'int ()' Function 0x1431431d0 'g_object_unref' 'int ()'
|       |     | | `-RecoveryExpr 0x1431432e8 <col:21> '<dependent type>' contains-errors lvalue
|       |     | `-BinaryOperator 0x143143520 <line:34:5, col:33> '<dependent type>' contains-errors '='
|       |     |   |-RecoveryExpr 0x143143350 <col:5> '<dependent type>' contains-errors lvalue
|       |     |   | `-DeclRefExpr 0x143143330 <col:5> 'int *' lvalue ParmVar 0x143128128 'dir' 'int *'
|       |     |   `-CallExpr 0x1431434f8 <col:11, col:33> '<dependent type>' contains-errors
|       |     |     |-DeclRefExpr 0x143143458 <col:11> 'int ()' Function 0x1431433a0 'GSF_INFILE_TAR' 'int ()'
|       |     |     `-RecoveryExpr 0x1431434d8 <col:27> '<dependent type>' contains-errors lvalue
|       |     `-BinaryOperator 0x143143718 <line:36:5, col:39> '<dependent type>' contains-errors '='
|       |       |-RecoveryExpr 0x143143580 <col:5> '<dependent type>' contains-errors lvalue
|       |       | `-DeclRefExpr 0x143143560 <col:5> 'int *' lvalue ParmVar 0x143128128 'dir' 'int *'
|       |       `-CallExpr 0x1431436e8 <col:11, col:39> '<dependent type>' contains-errors
|       |         |-DeclRefExpr 0x143143688 <col:11> 'int ()' Function 0x1431435d0 'tar_create_dir' 'int ()'
|       |         |-RecoveryExpr 0x1431436a8 <col:27> '<dependent type>' contains-errors lvalue
|       |         `-DeclRefExpr 0x1431436c8 <col:32> 'char *' lvalue Var 0x1431285b0 'dirname' 'char *'
|       `-CallExpr 0x1431438d8 <line:39:3, col:18> 'int'
|         |-ImplicitCastExpr 0x1431438c0 <col:3> 'int (*)()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x143143880 <col:3> 'int ()' Function 0x1431437c8 'g_free' 'int ()'
|         `-ImplicitCastExpr 0x143143900 <col:11> 'char *' <LValueToRValue>
|           `-DeclRefExpr 0x1431438a0 <col:11> 'char *' lvalue Var 0x1431285b0 'dirname' 'char *'
`-FunctionDecl 0x143142280 <line:27:7> col:7 implicit used strcmp 'int (const char *, const char *)' extern
  |-ParmVarDecl 0x143142380 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x1431423e8 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x143142328 <<invalid sloc>> Implicit 887
