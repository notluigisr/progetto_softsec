TranslationUnitDecl 0x153055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1530564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x153055bd0 '__int128'
|-TypedefDecl 0x153056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x153055bf0 'unsigned __int128'
|-TypedefDecl 0x15480be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15480bc00 'struct __NSConstantString_tag'
|   `-Record 0x153056580 '__NSConstantString_tag'
|-TypedefDecl 0x15480be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x153055d90 '__SVInt8_t'
|-TypedefDecl 0x15480bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x153055db0 '__SVInt16_t'
|-TypedefDecl 0x15480bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x153055dd0 '__SVInt32_t'
|-TypedefDecl 0x15480bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x153055df0 '__SVInt64_t'
|-TypedefDecl 0x15480c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x153055e10 '__SVUint8_t'
|-TypedefDecl 0x15480c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x153055e30 '__SVUint16_t'
|-TypedefDecl 0x15480c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x153055e50 '__SVUint32_t'
|-TypedefDecl 0x15480c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x153055e70 '__SVUint64_t'
|-TypedefDecl 0x15480c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x153055e90 '__SVFloat16_t'
|-TypedefDecl 0x15480c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x153055eb0 '__SVFloat32_t'
|-TypedefDecl 0x15480c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x153055ed0 '__SVFloat64_t'
|-TypedefDecl 0x15480c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x153055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15480c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x153055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15480c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x153055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15480c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x153055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15480c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x153055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15480c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x153055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15480c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x153055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15480c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x153055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15480c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x153055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15480c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x153056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15480c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x153056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15480c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x153056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15480c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x153056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15480c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x153056090 '__clang_svint8x3_t'
|-TypedefDecl 0x15480c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1530560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15480c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1530560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15480c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1530560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15480c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x153056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15480ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x153056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15480cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x153056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15480cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x153056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15480cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x153056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15480d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1530561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15480d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1530561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15480d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1530561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15480d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x153056210 '__clang_svint8x4_t'
|-TypedefDecl 0x15480d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x153056230 '__clang_svint16x4_t'
|-TypedefDecl 0x15480d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x153056250 '__clang_svint32x4_t'
|-TypedefDecl 0x15480d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x153056270 '__clang_svint64x4_t'
|-TypedefDecl 0x15480d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x153056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15480d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1530562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15480d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1530562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15480d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1530562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15480d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x153056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15480d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x153056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15480d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x153056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15480d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x153056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15480da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x153056390 '__SVBool_t'
|-TypedefDecl 0x15480da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1530563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15480dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1530563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15480db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1530563f0 '__SVCount_t'
|-TypedefDecl 0x15480dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15480dbb0 'char *'
|   `-BuiltinType 0x1530556b0 'char'
|-TypedefDecl 0x15480dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15480dbb0 'char *'
|   `-BuiltinType 0x1530556b0 'char'
|-FunctionDecl 0x154827578 <dataset_diviso_filec/func22124_nonvuln.c:1:1, line:31:1> line:1:13 invalid dns_resolver_cmp 'int (const struct key *, const struct key_match_data *)' static
| |-ParmVarDecl 0x15480e268 <col:30, col:48> col:48 used key 'const struct key *'
| |-ParmVarDecl 0x154827458 <line:2:9, col:38> col:38 used match_data 'const struct key_match_data *'
| `-CompoundStmt 0x154829298 <line:3:1, line:31:1>
|   |-DeclStmt 0x1548277f0 <line:4:2, col:25>
|   | |-VarDecl 0x154827648 <col:2, col:6> col:6 used slen 'int'
|   | |-VarDecl 0x1548276c8 <col:2, col:12> col:12 used dlen 'int'
|   | `-VarDecl 0x154827748 <col:2, col:24> col:18 used ret 'int' cinit
|   |   `-IntegerLiteral 0x1548277b0 <col:24> 'int' 0
|   |-DeclStmt 0x1548279e0 <line:5:2, col:65>
|   | |-VarDecl 0x154827820 <col:2, col:25> col:14 used src 'const char *' cinit
|   | | `-RecoveryExpr 0x1548278c0 <col:20, col:25> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x154827888 <col:20> 'const struct key *' lvalue ParmVar 0x15480e268 'key' 'const struct key *'
|   | `-VarDecl 0x154827900 <col:2, col:57> col:39 used dsp 'const char *' cinit
|   |   `-RecoveryExpr 0x1548279a0 <col:45, col:57> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x154827968 <col:45> 'const struct key_match_data *' lvalue ParmVar 0x154827458 'match_data' 'const struct key_match_data *'
|   |-CallExpr 0x154827c58 <line:7:2, col:24> 'int' contains-errors
|   | |-ImplicitCastExpr 0x154827c40 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x154827b50 <col:2> 'int ()' Function 0x154827a98 'kenter' 'int ()'
|   | |-ImplicitCastExpr 0x154827c90 <col:9> 'char *' <ArrayToPointerDecay>
|   | | `-StringLiteral 0x154827bb0 <col:9> 'char[4]' lvalue "STR"
|   | |-ImplicitCastExpr 0x154827ca8 <col:16> 'const char *' contains-errors <LValueToRValue>
|   | | `-DeclRefExpr 0x154827bd0 <col:16> 'const char *' contains-errors lvalue Var 0x154827820 'src' 'const char *'
|   | `-ImplicitCastExpr 0x154827cc0 <col:21> 'const char *' contains-errors <LValueToRValue>
|   |   `-DeclRefExpr 0x154827bf0 <col:21> 'const char *' contains-errors lvalue Var 0x154827900 'dsp' 'const char *'
|   |-IfStmt 0x154827e00 <line:9:2, line:10:8>
|   | |-BinaryOperator 0x154827d78 <line:9:6, col:15> 'int' contains-errors '||'
|   | | |-UnaryOperator 0x154827d10 <col:6, col:7> 'int' contains-errors prefix '!' cannot overflow
|   | | | `-ImplicitCastExpr 0x154827cf8 <col:7> 'const char *' contains-errors <LValueToRValue>
|   | | |   `-DeclRefExpr 0x154827cd8 <col:7> 'const char *' contains-errors lvalue Var 0x154827820 'src' 'const char *'
|   | | `-UnaryOperator 0x154827d60 <col:14, col:15> 'int' contains-errors prefix '!' cannot overflow
|   | |   `-ImplicitCastExpr 0x154827d48 <col:15> 'const char *' contains-errors <LValueToRValue>
|   | |     `-DeclRefExpr 0x154827d28 <col:15> 'const char *' contains-errors lvalue Var 0x154827900 'dsp' 'const char *'
|   | `-GotoStmt 0x154827de8 <line:10:3, col:8> 'no_match' 0x154827d98
|   |-IfStmt 0x154828220 <line:12:2, line:13:8>
|   | |-BinaryOperator 0x154828198 <line:12:6, col:30> 'int' contains-errors '=='
|   | | |-CallExpr 0x154828118 <col:6, col:25> 'int' contains-errors
|   | | | |-ImplicitCastExpr 0x154828100 <col:6> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x154828040 <col:6> 'int (const char *, const char *)' Function 0x154827e60 'strcasecmp' 'int (const char *, const char *)'
|   | | | |-ImplicitCastExpr 0x154828148 <col:17> 'const char *' contains-errors <LValueToRValue>
|   | | | | `-DeclRefExpr 0x154828060 <col:17> 'const char *' contains-errors lvalue Var 0x154827820 'src' 'const char *'
|   | | | `-ImplicitCastExpr 0x154828160 <col:22> 'const char *' contains-errors <LValueToRValue>
|   | | |   `-DeclRefExpr 0x154828080 <col:22> 'const char *' contains-errors lvalue Var 0x154827900 'dsp' 'const char *'
|   | | `-IntegerLiteral 0x154828178 <col:30> 'int' 0
|   | `-GotoStmt 0x154828208 <line:13:3, col:8> 'matched' 0x1548281b8
|   |-BinaryOperator 0x154828500 <line:15:2, col:19> 'int' contains-errors '='
|   | |-DeclRefExpr 0x154828240 <col:2> 'int' lvalue Var 0x154827648 'slen' 'int'
|   | `-ImplicitCastExpr 0x1548284e8 <col:9, col:19> 'int' contains-errors <IntegralCast>
|   |   `-CallExpr 0x1548284a8 <col:9, col:19> 'unsigned long' contains-errors
|   |     |-ImplicitCastExpr 0x154828490 <col:9> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x154828408 <col:9> 'unsigned long (const char *)' Function 0x154828298 'strlen' 'unsigned long (const char *)'
|   |     `-ImplicitCastExpr 0x1548284d0 <col:16> 'const char *' contains-errors <LValueToRValue>
|   |       `-DeclRefExpr 0x154828428 <col:16> 'const char *' contains-errors lvalue Var 0x154827820 'src' 'const char *'
|   |-BinaryOperator 0x154828608 <line:16:2, col:19> 'int' contains-errors '='
|   | |-DeclRefExpr 0x154828520 <col:2> 'int' lvalue Var 0x1548276c8 'dlen' 'int'
|   | `-ImplicitCastExpr 0x1548285f0 <col:9, col:19> 'int' contains-errors <IntegralCast>
|   |   `-CallExpr 0x1548285b0 <col:9, col:19> 'unsigned long' contains-errors
|   |     |-ImplicitCastExpr 0x154828598 <col:9> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x154828540 <col:9> 'unsigned long (const char *)' Function 0x154828298 'strlen' 'unsigned long (const char *)'
|   |     `-ImplicitCastExpr 0x1548285d8 <col:16> 'const char *' contains-errors <LValueToRValue>
|   |       `-DeclRefExpr 0x154828560 <col:16> 'const char *' contains-errors lvalue Var 0x154827900 'dsp' 'const char *'
|   |-IfStmt 0x154828750 <line:17:2, line:18:8>
|   | |-BinaryOperator 0x154828718 <line:17:6, col:27> 'int' '||'
|   | | |-BinaryOperator 0x154828680 <col:6, col:14> 'int' '<='
|   | | | |-ImplicitCastExpr 0x154828668 <col:6> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x154828628 <col:6> 'int' lvalue Var 0x154827648 'slen' 'int'
|   | | | `-IntegerLiteral 0x154828648 <col:14> 'int' 0
|   | | `-BinaryOperator 0x1548286f8 <col:19, col:27> 'int' '<='
|   | |   |-ImplicitCastExpr 0x1548286e0 <col:19> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x1548286a0 <col:19> 'int' lvalue Var 0x1548276c8 'dlen' 'int'
|   | |   `-IntegerLiteral 0x1548286c0 <col:27> 'int' 0
|   | `-GotoStmt 0x154828738 <line:18:3, col:8> 'no_match' 0x154827d98
|   |-IfStmt 0x1548288e0 <line:19:2, line:20:7>
|   | |-BinaryOperator 0x154828888 <line:19:6, col:23> 'int' contains-errors '=='
|   | | |-ImplicitCastExpr 0x154828870 <col:6, col:18> 'int' contains-errors <IntegralCast>
|   | | | `-ImplicitCastExpr 0x154828858 <col:6, col:18> 'char' contains-errors <LValueToRValue>
|   | | |   `-ArraySubscriptExpr 0x154828820 <col:6, col:18> 'const char' contains-errors lvalue
|   | | |     |-ImplicitCastExpr 0x154828808 <col:6> 'const char *' contains-errors <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x154828770 <col:6> 'const char *' contains-errors lvalue Var 0x154827820 'src' 'const char *'
|   | | |     `-BinaryOperator 0x1548287e8 <col:10, col:17> 'int' '-'
|   | | |       |-ImplicitCastExpr 0x1548287d0 <col:10> 'int' <LValueToRValue>
|   | | |       | `-DeclRefExpr 0x154828790 <col:10> 'int' lvalue Var 0x154827648 'slen' 'int'
|   | | |       `-IntegerLiteral 0x1548287b0 <col:17> 'int' 1
|   | | `-CharacterLiteral 0x154828840 <col:23> 'int' 46
|   | `-UnaryOperator 0x1548288c8 <line:20:3, col:7> 'int' postfix '--'
|   |   `-DeclRefExpr 0x1548288a8 <col:3> 'int' lvalue Var 0x154827648 'slen' 'int'
|   |-IfStmt 0x154828a70 <line:21:2, line:22:7>
|   | |-BinaryOperator 0x154828a18 <line:21:6, col:23> 'int' contains-errors '=='
|   | | |-ImplicitCastExpr 0x154828a00 <col:6, col:18> 'int' contains-errors <IntegralCast>
|   | | | `-ImplicitCastExpr 0x1548289e8 <col:6, col:18> 'char' contains-errors <LValueToRValue>
|   | | |   `-ArraySubscriptExpr 0x1548289b0 <col:6, col:18> 'const char' contains-errors lvalue
|   | | |     |-ImplicitCastExpr 0x154828998 <col:6> 'const char *' contains-errors <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x154828900 <col:6> 'const char *' contains-errors lvalue Var 0x154827900 'dsp' 'const char *'
|   | | |     `-BinaryOperator 0x154828978 <col:10, col:17> 'int' '-'
|   | | |       |-ImplicitCastExpr 0x154828960 <col:10> 'int' <LValueToRValue>
|   | | |       | `-DeclRefExpr 0x154828920 <col:10> 'int' lvalue Var 0x1548276c8 'dlen' 'int'
|   | | |       `-IntegerLiteral 0x154828940 <col:17> 'int' 1
|   | | `-CharacterLiteral 0x1548289d0 <col:23> 'int' 46
|   | `-UnaryOperator 0x154828a58 <line:22:3, col:7> 'int' postfix '--'
|   |   `-DeclRefExpr 0x154828a38 <col:3> 'int' lvalue Var 0x1548276c8 'dlen' 'int'
|   |-IfStmt 0x154828fd8 <line:23:2, line:24:8>
|   | |-BinaryOperator 0x154828fa0 <line:23:6, col:53> 'int' contains-errors '||'
|   | | |-BinaryOperator 0x154828b00 <col:6, col:14> 'int' '!='
|   | | | |-ImplicitCastExpr 0x154828ad0 <col:6> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x154828a90 <col:6> 'int' lvalue Var 0x154827648 'slen' 'int'
|   | | | `-ImplicitCastExpr 0x154828ae8 <col:14> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x154828ab0 <col:14> 'int' lvalue Var 0x1548276c8 'dlen' 'int'
|   | | `-BinaryOperator 0x154828f80 <col:22, col:53> 'int' contains-errors '!='
|   | |   |-CallExpr 0x154828ec8 <col:22, col:48> 'int' contains-errors
|   | |   | |-ImplicitCastExpr 0x154828eb0 <col:22> 'int (*)(const char *, const char *, unsigned long)' <FunctionToPointerDecay>
|   | |   | | `-DeclRefExpr 0x154828db8 <col:22> 'int (const char *, const char *, unsigned long)' Function 0x154828b68 'strncasecmp' 'int (const char *, const char *, unsigned long)'
|   | |   | |-ImplicitCastExpr 0x154828f00 <col:34> 'const char *' contains-errors <LValueToRValue>
|   | |   | | `-DeclRefExpr 0x154828dd8 <col:34> 'const char *' contains-errors lvalue Var 0x154827820 'src' 'const char *'
|   | |   | |-ImplicitCastExpr 0x154828f18 <col:39> 'const char *' contains-errors <LValueToRValue>
|   | |   | | `-DeclRefExpr 0x154828df8 <col:39> 'const char *' contains-errors lvalue Var 0x154827900 'dsp' 'const char *'
|   | |   | `-ImplicitCastExpr 0x154828f48 <col:44> 'unsigned long' <IntegralCast>
|   | |   |   `-ImplicitCastExpr 0x154828f30 <col:44> 'int' <LValueToRValue>
|   | |   |     `-DeclRefExpr 0x154828e18 <col:44> 'int' lvalue Var 0x154827648 'slen' 'int'
|   | |   `-IntegerLiteral 0x154828f60 <col:53> 'int' 0
|   | `-GotoStmt 0x154828fc0 <line:24:3, col:8> 'no_match' 0x154827d98
|   |-LabelStmt 0x154829058 <line:26:1, line:27:8> 'matched'
|   | `-BinaryOperator 0x154829038 <col:2, col:8> 'int' '='
|   |   |-DeclRefExpr 0x154828ff8 <col:2> 'int' lvalue Var 0x154827748 'ret' 'int'
|   |   `-IntegerLiteral 0x154829018 <col:8> 'int' 1
|   |-LabelStmt 0x154829230 <line:28:1, line:29:19> 'no_match'
|   | `-CallExpr 0x1548291d0 <col:2, col:19> 'int'
|   |   |-ImplicitCastExpr 0x1548291b8 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x154829158 <col:2> 'int ()' Function 0x1548290a0 'kleave' 'int ()'
|   |   |-ImplicitCastExpr 0x154829200 <col:9> 'char *' <ArrayToPointerDecay>
|   |   | `-StringLiteral 0x154829178 <col:9> 'char[4]' lvalue "STR"
|   |   `-ImplicitCastExpr 0x154829218 <col:16> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x154829198 <col:16> 'int' lvalue Var 0x154827748 'ret' 'int'
|   `-ReturnStmt 0x154829288 <line:30:2, col:9>
|     `-ImplicitCastExpr 0x154829270 <col:9> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x154829250 <col:9> 'int' lvalue Var 0x154827748 'ret' 'int'
|-FunctionDecl 0x154827e60 <line:12:6> col:6 implicit used strcasecmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x154827f60 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x154827fc8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x154827f08 <<invalid sloc>> Implicit 957
|-FunctionDecl 0x154828298 <line:15:9> col:9 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x154828398 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x154828340 <<invalid sloc>> Implicit 902
`-FunctionDecl 0x154828b68 <line:23:22> col:22 implicit used strncasecmp 'int (const char *, const char *, unsigned long)' extern
  |-ParmVarDecl 0x154828c68 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x154828cd0 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x154828d38 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x154828c10 <<invalid sloc>> Implicit 958
