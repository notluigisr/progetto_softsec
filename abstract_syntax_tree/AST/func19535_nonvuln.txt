TranslationUnitDecl 0x13e828008 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13e828eb8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13e8285d0 '__int128'
|-TypedefDecl 0x13e828f28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13e8285f0 'unsigned __int128'
|-TypedefDecl 0x13e8f8c30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13e8f8a00 'struct __NSConstantString_tag'
|   `-Record 0x13e828f80 '__NSConstantString_tag'
|-TypedefDecl 0x13e8f8c98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13e828790 '__SVInt8_t'
|-TypedefDecl 0x13e8f8d00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13e8287b0 '__SVInt16_t'
|-TypedefDecl 0x13e8f8d68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13e8287d0 '__SVInt32_t'
|-TypedefDecl 0x13e8f8dd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13e8287f0 '__SVInt64_t'
|-TypedefDecl 0x13e8f8e38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13e828810 '__SVUint8_t'
|-TypedefDecl 0x13e8f8ea0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13e828830 '__SVUint16_t'
|-TypedefDecl 0x13e8f8f08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13e828850 '__SVUint32_t'
|-TypedefDecl 0x13e8f8f70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13e828870 '__SVUint64_t'
|-TypedefDecl 0x13e8f8fd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13e828890 '__SVFloat16_t'
|-TypedefDecl 0x13e8f9040 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13e8288b0 '__SVFloat32_t'
|-TypedefDecl 0x13e8f90a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13e8288d0 '__SVFloat64_t'
|-TypedefDecl 0x13e8f9110 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13e8288f0 '__SVBfloat16_t'
|-TypedefDecl 0x13e8f9178 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13e828910 '__clang_svint8x2_t'
|-TypedefDecl 0x13e8f91e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13e828930 '__clang_svint16x2_t'
|-TypedefDecl 0x13e8f9248 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13e828950 '__clang_svint32x2_t'
|-TypedefDecl 0x13e8f92b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13e828970 '__clang_svint64x2_t'
|-TypedefDecl 0x13e8f9318 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13e828990 '__clang_svuint8x2_t'
|-TypedefDecl 0x13e8f9380 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13e8289b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13e8f93e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13e8289d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13e8f9450 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13e8289f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13e8f94b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13e828a10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13e8f9520 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13e828a30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13e8f9588 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13e828a50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13e8f95f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13e828a70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13e8f9658 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13e828a90 '__clang_svint8x3_t'
|-TypedefDecl 0x13e8f96c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13e828ab0 '__clang_svint16x3_t'
|-TypedefDecl 0x13e8f9728 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13e828ad0 '__clang_svint32x3_t'
|-TypedefDecl 0x13e8f9790 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13e828af0 '__clang_svint64x3_t'
|-TypedefDecl 0x13e8f97f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13e828b10 '__clang_svuint8x3_t'
|-TypedefDecl 0x13e8f9860 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13e828b30 '__clang_svuint16x3_t'
|-TypedefDecl 0x13e8f98c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13e828b50 '__clang_svuint32x3_t'
|-TypedefDecl 0x13e8f9930 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13e828b70 '__clang_svuint64x3_t'
|-TypedefDecl 0x13e8f9998 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13e828b90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13e8fa200 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13e828bb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13e8fa268 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13e828bd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13e8fa2d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13e828bf0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13e8fa338 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13e828c10 '__clang_svint8x4_t'
|-TypedefDecl 0x13e8fa3a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13e828c30 '__clang_svint16x4_t'
|-TypedefDecl 0x13e8fa408 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13e828c50 '__clang_svint32x4_t'
|-TypedefDecl 0x13e8fa470 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13e828c70 '__clang_svint64x4_t'
|-TypedefDecl 0x13e8fa4d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13e828c90 '__clang_svuint8x4_t'
|-TypedefDecl 0x13e8fa540 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13e828cb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13e8fa5a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13e828cd0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13e8fa610 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13e828cf0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13e8fa678 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13e828d10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13e8fa6e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13e828d30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13e8fa748 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13e828d50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13e8fa7b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13e828d70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13e8fa818 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13e828d90 '__SVBool_t'
|-TypedefDecl 0x13e8fa880 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13e828db0 '__clang_svboolx2_t'
|-TypedefDecl 0x13e8fa8e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13e828dd0 '__clang_svboolx4_t'
|-TypedefDecl 0x13e8fa950 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13e828df0 '__SVCount_t'
|-TypedefDecl 0x13e8fa9f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13e8fa9b0 'char *'
|   `-BuiltinType 0x13e8280b0 'char'
|-TypedefDecl 0x13e8faa68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13e8fa9b0 'char *'
|   `-BuiltinType 0x13e8280b0 'char'
|-FunctionDecl 0x13e8fad58 <dataset_diviso_filec/func19535_nonvuln.c:1:1, line:12:1> line:1:12 pdf_readbool 'int (const char *, int, const char *, int)' static
| |-ParmVarDecl 0x13e8faad8 <col:25, col:37> col:37 used q0 'const char *'
| |-ParmVarDecl 0x13e8fab58 <col:41, col:45> col:45 used len 'int'
| |-ParmVarDecl 0x13e8fabd8 <col:50, col:62> col:62 used key 'const char *'
| |-ParmVarDecl 0x13e8fac58 <col:67, col:71> col:71 used Default 'int'
| `-CompoundStmt 0x13e915000 <line:2:1, line:12:1>
|   |-DeclStmt 0x13e9145f0 <line:3:5, col:48>
|   | `-VarDecl 0x13e8fae80 <col:5, col:47> col:17 used q 'const char *' cinit
|   |   `-ImplicitCastExpr 0x13e8fb190 <col:22, col:47> 'const char *' <IntegralToPointer>
|   |     `-CallExpr 0x13e8fb128 <col:22, col:47> 'int'
|   |       |-ImplicitCastExpr 0x13e8fb110 <col:22> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x13e8fb010 <col:22> 'int ()' Function 0x13e8faf58 'pdf_getdict' 'int ()'
|   |       |-ImplicitCastExpr 0x13e8fb160 <col:34> 'const char *' <LValueToRValue>
|   |       | `-DeclRefExpr 0x13e8fb030 <col:34> 'const char *' lvalue ParmVar 0x13e8faad8 'q0' 'const char *'
|   |       |-UnaryOperator 0x13e8fb0a0 <col:38, col:39> 'int *' prefix '&' cannot overflow
|   |       | `-DeclRefExpr 0x13e8fb050 <col:39> 'int' lvalue ParmVar 0x13e8fab58 'len' 'int'
|   |       `-ImplicitCastExpr 0x13e8fb178 <col:44> 'const char *' <LValueToRValue>
|   |         `-DeclRefExpr 0x13e8fb0b8 <col:44> 'const char *' lvalue ParmVar 0x13e8fabd8 'key' 'const char *'
|   |-IfStmt 0x13e914738 <line:4:5, line:5:9>
|   | |-BinaryOperator 0x13e9146d0 <line:4:9, col:21> 'int' '||'
|   | | |-UnaryOperator 0x13e914640 <col:9, col:10> 'int' prefix '!' cannot overflow
|   | | | `-ImplicitCastExpr 0x13e914628 <col:10> 'const char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x13e914608 <col:10> 'const char *' lvalue Var 0x13e8fae80 'q' 'const char *'
|   | | `-BinaryOperator 0x13e9146b0 <col:15, col:21> 'int' '<'
|   | |   |-ImplicitCastExpr 0x13e914698 <col:15> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x13e914658 <col:15> 'int' lvalue ParmVar 0x13e8fab58 'len' 'int'
|   | |   `-IntegerLiteral 0x13e914678 <col:21> 'int' 5
|   | `-ReturnStmt 0x13e914728 <line:5:2, col:9>
|   |   `-ImplicitCastExpr 0x13e914710 <col:9> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x13e9146f0 <col:9> 'int' lvalue ParmVar 0x13e8fac58 'Default' 'int'
|   |-IfStmt 0x13e914c18 <line:6:5, line:7:9>
|   | |-UnaryOperator 0x13e914bd0 <line:6:9, col:29> 'int' prefix '!' cannot overflow
|   | | `-CallExpr 0x13e914b38 <col:10, col:29> 'int'
|   | |   |-ImplicitCastExpr 0x13e914b20 <col:10> 'int (*)(const char *, const char *, unsigned long)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x13e9149f8 <col:10> 'int (const char *, const char *, unsigned long)' Function 0x13e9147a8 'strncmp' 'int (const char *, const char *, unsigned long)'
|   | |   |-ImplicitCastExpr 0x13e914b70 <col:18> 'const char *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x13e914a18 <col:18> 'const char *' lvalue Var 0x13e8fae80 'q' 'const char *'
|   | |   |-ImplicitCastExpr 0x13e914ba0 <col:21> 'const char *' <NoOp>
|   | |   | `-ImplicitCastExpr 0x13e914b88 <col:21> 'char *' <ArrayToPointerDecay>
|   | |   |   `-StringLiteral 0x13e914a80 <col:21> 'char[4]' lvalue "STR"
|   | |   `-ImplicitCastExpr 0x13e914bb8 <col:28> 'unsigned long' <IntegralCast>
|   | |     `-IntegerLiteral 0x13e914aa0 <col:28> 'int' 4
|   | `-ReturnStmt 0x13e914c08 <line:7:2, col:9>
|   |   `-IntegerLiteral 0x13e914be8 <col:9> 'int' 1
|   |-IfStmt 0x13e914de0 <line:8:5, line:9:9>
|   | |-UnaryOperator 0x13e914d98 <line:8:9, col:29> 'int' prefix '!' cannot overflow
|   | | `-CallExpr 0x13e914d00 <col:10, col:29> 'int'
|   | |   |-ImplicitCastExpr 0x13e914ce8 <col:10> 'int (*)(const char *, const char *, unsigned long)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x13e914c38 <col:10> 'int (const char *, const char *, unsigned long)' Function 0x13e9147a8 'strncmp' 'int (const char *, const char *, unsigned long)'
|   | |   |-ImplicitCastExpr 0x13e914d38 <col:18> 'const char *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x13e914c58 <col:18> 'const char *' lvalue Var 0x13e8fae80 'q' 'const char *'
|   | |   |-ImplicitCastExpr 0x13e914d68 <col:21> 'const char *' <NoOp>
|   | |   | `-ImplicitCastExpr 0x13e914d50 <col:21> 'char *' <ArrayToPointerDecay>
|   | |   |   `-StringLiteral 0x13e914c78 <col:21> 'char[4]' lvalue "STR"
|   | |   `-ImplicitCastExpr 0x13e914d80 <col:28> 'unsigned long' <IntegralCast>
|   | |     `-IntegerLiteral 0x13e914c98 <col:28> 'int' 5
|   | `-ReturnStmt 0x13e914dd0 <line:9:2, col:9>
|   |   `-IntegerLiteral 0x13e914db0 <col:9> 'int' 0
|   |-CallExpr 0x13e914f58 <line:10:5, col:26> 'int'
|   | |-ImplicitCastExpr 0x13e914f40 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13e914ee0 <col:5> 'int ()' Function 0x13e914e28 'cli_dbgmsg' 'int ()'
|   | |-ImplicitCastExpr 0x13e914f88 <col:16> 'char *' <ArrayToPointerDecay>
|   | | `-StringLiteral 0x13e914f00 <col:16> 'char[4]' lvalue "STR"
|   | `-ImplicitCastExpr 0x13e914fa0 <col:23> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x13e914f20 <col:23> 'const char *' lvalue ParmVar 0x13e8fabd8 'key' 'const char *'
|   `-ReturnStmt 0x13e914ff0 <line:11:5, col:12>
|     `-ImplicitCastExpr 0x13e914fd8 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x13e914fb8 <col:12> 'int' lvalue ParmVar 0x13e8fac58 'Default' 'int'
`-FunctionDecl 0x13e9147a8 <line:6:10> col:10 implicit used strncmp 'int (const char *, const char *, unsigned long)' extern
  |-ParmVarDecl 0x13e9148a8 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x13e914910 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x13e914978 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x13e914850 <<invalid sloc>> Implicit 888
