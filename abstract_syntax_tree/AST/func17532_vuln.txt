TranslationUnitDecl 0x13d055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13d0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13d055bd0 '__int128'
|-TypedefDecl 0x13d056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13d055bf0 'unsigned __int128'
|-TypedefDecl 0x13d126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13d126000 'struct __NSConstantString_tag'
|   `-Record 0x13d056580 '__NSConstantString_tag'
|-TypedefDecl 0x13d126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13d055d90 '__SVInt8_t'
|-TypedefDecl 0x13d126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13d055db0 '__SVInt16_t'
|-TypedefDecl 0x13d126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13d055dd0 '__SVInt32_t'
|-TypedefDecl 0x13d1263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13d055df0 '__SVInt64_t'
|-TypedefDecl 0x13d126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13d055e10 '__SVUint8_t'
|-TypedefDecl 0x13d1264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13d055e30 '__SVUint16_t'
|-TypedefDecl 0x13d126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13d055e50 '__SVUint32_t'
|-TypedefDecl 0x13d126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13d055e70 '__SVUint64_t'
|-TypedefDecl 0x13d1265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13d055e90 '__SVFloat16_t'
|-TypedefDecl 0x13d126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13d055eb0 '__SVFloat32_t'
|-TypedefDecl 0x13d1266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13d055ed0 '__SVFloat64_t'
|-TypedefDecl 0x13d126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13d055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13d126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13d055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13d1267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13d055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13d126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13d055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13d1268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13d055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13d126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13d055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13d126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13d055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13d1269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13d055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13d126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13d055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13d126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13d056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13d126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13d056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13d126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13d056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13d126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13d056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13d126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13d056090 '__clang_svint8x3_t'
|-TypedefDecl 0x13d126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13d0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13d126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13d0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13d126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13d0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13d126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13d056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13d126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13d056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13d126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13d056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13d126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13d056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13d126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13d056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13d127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13d0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13d127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13d0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13d1278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13d0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13d127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13d056210 '__clang_svint8x4_t'
|-TypedefDecl 0x13d1279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13d056230 '__clang_svint16x4_t'
|-TypedefDecl 0x13d127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13d056250 '__clang_svint32x4_t'
|-TypedefDecl 0x13d127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13d056270 '__clang_svint64x4_t'
|-TypedefDecl 0x13d127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13d056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13d127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13d0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13d127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13d0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13d127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13d0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13d127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13d056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13d127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13d056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13d127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13d056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13d127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13d056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13d127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13d056390 '__SVBool_t'
|-TypedefDecl 0x13d127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13d0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13d127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13d0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13d127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13d0563f0 '__SVCount_t'
|-TypedefDecl 0x13d127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13d127fb0 'char *'
|   `-BuiltinType 0x13d0556b0 'char'
|-TypedefDecl 0x13d128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13d127fb0 'char *'
|   `-BuiltinType 0x13d0556b0 'char'
|-FunctionDecl 0x13d128438 <dataset_diviso_filec/func17532_vuln.c:1:1, line:33:1> line:1:12 invalid sdp_parse_fmtp_config_h264 'int (int *, int *, int *, const char *, const char *)' static
| |-ParmVarDecl 0x13d128128 <col:39, col:56> col:56 invalid s 'int *'
| |-ParmVarDecl 0x13d1281a8 <line:2:39, col:49> col:49 invalid stream 'int *'
| |-ParmVarDecl 0x13d128228 <line:3:39, col:55> col:55 referenced invalid h264_data 'int *'
| |-ParmVarDecl 0x13d1282a8 <line:4:39, col:51> col:51 used attr 'const char *'
| |-ParmVarDecl 0x13d128328 <col:57, col:69> col:69 used value 'const char *'
| `-CompoundStmt 0x13d1450b0 <line:5:1, line:33:1>
|   |-IfStmt 0x13d145050 <line:8:5, line:31:5> has_else
|   | |-UnaryOperator 0x13d141d80 <line:8:9, col:28> 'int' prefix '!' cannot overflow
|   | | `-CallExpr 0x13d141d08 <col:10, col:28> 'int'
|   | |   |-ImplicitCastExpr 0x13d141cf0 <col:10> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x13d141bf0 <col:10> 'int (const char *, const char *)' Function 0x13d141a10 'strcmp' 'int (const char *, const char *)'
|   | |   |-ImplicitCastExpr 0x13d141d38 <col:17> 'const char *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x13d141c10 <col:17> 'const char *' lvalue ParmVar 0x13d1282a8 'attr' 'const char *'
|   | |   `-ImplicitCastExpr 0x13d141d68 <col:23> 'const char *' <NoOp>
|   | |     `-ImplicitCastExpr 0x13d141d50 <col:23> 'char *' <ArrayToPointerDecay>
|   | |       `-StringLiteral 0x13d141c70 <col:23> 'char[4]' lvalue "STR"
|   | |-CompoundStmt 0x13d142528 <col:31, line:15:5>
|   | | |-CallExpr 0x13d1421d0 <line:9:9, col:51> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x13d141ef0 <col:9> 'int ()' Function 0x13d141e38 'av_log' 'int ()'
|   | | | |-RecoveryExpr 0x13d141f10 <col:16> '<dependent type>' contains-errors lvalue
|   | | | |-RecoveryExpr 0x13d142158 <col:19> '<dependent type>' contains-errors lvalue
|   | | | |-StringLiteral 0x13d141f48 <col:33> 'char[4]' lvalue "STR"
|   | | | `-CallExpr 0x13d142190 <col:40, col:50> 'int'
|   | | |   |-ImplicitCastExpr 0x13d142178 <col:40> 'int (*)()' <FunctionToPointerDecay>
|   | | |   | `-DeclRefExpr 0x13d142048 <col:40> 'int ()' Function 0x13d141f90 'atoi' 'int ()'
|   | | |   `-ImplicitCastExpr 0x13d1421b8 <col:45> 'const char *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x13d142068 <col:45> 'const char *' lvalue ParmVar 0x13d128328 'value' 'const char *'
|   | | |-BinaryOperator 0x13d142338 <line:10:9, col:51> '<dependent type>' contains-errors '='
|   | | | |-CXXDependentScopeMemberExpr 0x13d142258 <col:9, col:20> '<dependent type>' contains-errors lvalue ->packetization_mode
|   | | | | `-RecoveryExpr 0x13d142230 <col:9> '<dependent type>' contains-errors lvalue
|   | | | |   `-DeclRefExpr 0x13d142210 <col:9> 'int *' lvalue ParmVar 0x13d128228 'h264_data' 'int *'
|   | | | `-CallExpr 0x13d1422f8 <col:41, col:51> 'int'
|   | | |   |-ImplicitCastExpr 0x13d1422e0 <col:41> 'int (*)()' <FunctionToPointerDecay>
|   | | |   | `-DeclRefExpr 0x13d1422a0 <col:41> 'int ()' Function 0x13d141f90 'atoi' 'int ()'
|   | | |   `-ImplicitCastExpr 0x13d142320 <col:46> 'const char *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x13d1422c0 <col:46> 'const char *' lvalue ParmVar 0x13d128328 'value' 'const char *'
|   | | `-IfStmt 0x13d142508 <line:12:9, line:14:25>
|   | |   |-BinaryOperator 0x13d1423e0 <line:12:13, col:45> 'int' contains-errors '>'
|   | |   | |-CXXDependentScopeMemberExpr 0x13d142378 <col:13, col:24> '<dependent type>' contains-errors lvalue ->packetization_mode
|   | |   | | `-RecoveryExpr 0x13d142358 <col:13> '<dependent type>' contains-errors lvalue
|   | |   | `-IntegerLiteral 0x13d1423c0 <col:45> 'int' 1
|   | |   `-CallExpr 0x13d1424d0 <line:13:13, line:14:25> '<dependent type>' contains-errors
|   | |     |-DeclRefExpr 0x13d142400 <line:13:13> 'int ()' Function 0x13d141e38 'av_log' 'int ()'
|   | |     |-RecoveryExpr 0x13d142420 <col:20> '<dependent type>' contains-errors lvalue
|   | |     |-RecoveryExpr 0x13d1424b0 <col:23> '<dependent type>' contains-errors lvalue
|   | |     `-StringLiteral 0x13d142458 <line:14:20> 'char[4]' lvalue "STR"
|   | `-IfStmt 0x13d145020 <line:15:12, line:31:5> has_else
|   |   |-UnaryOperator 0x13d142670 <line:15:16, col:35> 'int' prefix '!' cannot overflow
|   |   | `-CallExpr 0x13d1425f8 <col:17, col:35> 'int'
|   |   |   |-ImplicitCastExpr 0x13d1425e0 <col:17> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x13d142550 <col:17> 'int (const char *, const char *)' Function 0x13d141a10 'strcmp' 'int (const char *, const char *)'
|   |   |   |-ImplicitCastExpr 0x13d142628 <col:24> 'const char *' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x13d142570 <col:24> 'const char *' lvalue ParmVar 0x13d1282a8 'attr' 'const char *'
|   |   |   `-ImplicitCastExpr 0x13d142658 <col:30> 'const char *' <NoOp>
|   |   |     `-ImplicitCastExpr 0x13d142640 <col:30> 'char *' <ArrayToPointerDecay>
|   |   |       `-StringLiteral 0x13d142590 <col:30> 'char[4]' lvalue "STR"
|   |   |-CompoundStmt 0x13d143f68 <col:38, line:18:5>
|   |   | `-IfStmt 0x13d143f48 <line:16:9, line:17:55>
|   |   |   |-BinaryOperator 0x13d143d90 <line:16:13, col:30> 'int' '=='
|   |   |   | |-CallExpr 0x13d143d18 <col:13, col:25> 'unsigned long'
|   |   |   | | |-ImplicitCastExpr 0x13d143d00 <col:13> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |   |   | | | `-DeclRefExpr 0x13d143c70 <col:13> 'unsigned long (const char *)' Function 0x13d1426c8 'strlen' 'unsigned long (const char *)'
|   |   |   | | `-ImplicitCastExpr 0x13d143d40 <col:20> 'const char *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x13d143c90 <col:20> 'const char *' lvalue ParmVar 0x13d128328 'value' 'const char *'
|   |   |   | `-ImplicitCastExpr 0x13d143d78 <col:30> 'unsigned long' <IntegralCast>
|   |   |   |   `-IntegerLiteral 0x13d143d58 <col:30> 'int' 6
|   |   |   `-CallExpr 0x13d143f10 <line:17:13, col:55> '<dependent type>' contains-errors
|   |   |     |-DeclRefExpr 0x13d143e90 <col:13> 'int ()' Function 0x13d143dd8 'parse_profile_level_id' 'int ()'
|   |   |     |-RecoveryExpr 0x13d143eb0 <col:36> '<dependent type>' contains-errors lvalue
|   |   |     |-RecoveryExpr 0x13d143ed0 <col:39> '<dependent type>' contains-errors lvalue
|   |   |     `-DeclRefExpr 0x13d143ef0 <col:50> 'const char *' lvalue ParmVar 0x13d128328 'value' 'const char *'
|   |   `-IfStmt 0x13d145000 <line:18:12, line:31:5>
|   |     |-UnaryOperator 0x13d1440a0 <line:18:16, col:35> 'int' prefix '!' cannot overflow
|   |     | `-CallExpr 0x13d144028 <col:17, col:35> 'int'
|   |     |   |-ImplicitCastExpr 0x13d144010 <col:17> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |     |   | `-DeclRefExpr 0x13d143f80 <col:17> 'int (const char *, const char *)' Function 0x13d141a10 'strcmp' 'int (const char *, const char *)'
|   |     |   |-ImplicitCastExpr 0x13d144058 <col:24> 'const char *' <LValueToRValue>
|   |     |   | `-DeclRefExpr 0x13d143fa0 <col:24> 'const char *' lvalue ParmVar 0x13d1282a8 'attr' 'const char *'
|   |     |   `-ImplicitCastExpr 0x13d144088 <col:30> 'const char *' <NoOp>
|   |     |     `-ImplicitCastExpr 0x13d144070 <col:30> 'char *' <ArrayToPointerDecay>
|   |     |       `-StringLiteral 0x13d143fc0 <col:30> 'char[4]' lvalue "STR"
|   |     `-CompoundStmt 0x13d144bb0 <col:38, line:31:5>
|   |       |-DeclStmt 0x13d144138 <line:19:9, col:16>
|   |       | `-VarDecl 0x13d1440d0 <col:9, col:13> col:13 used ret 'int'
|   |       |-IfStmt 0x13d144470 <line:20:9, line:23:9>
|   |       | |-BinaryOperator 0x13d1442f8 <line:20:13, col:41> 'int' '=='
|   |       | | |-ImplicitCastExpr 0x13d1442e0 <col:13, col:36> 'int' <IntegralCast>
|   |       | | | `-ImplicitCastExpr 0x13d1442c8 <col:13, col:36> 'char' <LValueToRValue>
|   |       | | |   `-ArraySubscriptExpr 0x13d144290 <col:13, col:36> 'const char' lvalue
|   |       | | |     |-ImplicitCastExpr 0x13d144278 <col:13> 'const char *' <LValueToRValue>
|   |       | | |     | `-DeclRefExpr 0x13d144150 <col:13> 'const char *' lvalue ParmVar 0x13d128328 'value' 'const char *'
|   |       | | |     `-BinaryOperator 0x13d144258 <col:19, col:35> 'unsigned long' '-'
|   |       | | |       |-CallExpr 0x13d1441e0 <col:19, col:31> 'unsigned long'
|   |       | | |       | |-ImplicitCastExpr 0x13d1441c8 <col:19> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |       | | |       | | `-DeclRefExpr 0x13d144170 <col:19> 'unsigned long (const char *)' Function 0x13d1426c8 'strlen' 'unsigned long (const char *)'
|   |       | | |       | `-ImplicitCastExpr 0x13d144208 <col:26> 'const char *' <LValueToRValue>
|   |       | | |       |   `-DeclRefExpr 0x13d144190 <col:26> 'const char *' lvalue ParmVar 0x13d128328 'value' 'const char *'
|   |       | | |       `-ImplicitCastExpr 0x13d144240 <col:35> 'unsigned long' <IntegralCast>
|   |       | | |         `-IntegerLiteral 0x13d144220 <col:35> 'int' 1
|   |       | | `-CharacterLiteral 0x13d1442b0 <col:41> 'int' 44
|   |       | `-CompoundStmt 0x13d144450 <col:46, line:23:9>
|   |       |   |-CallExpr 0x13d1443e8 <line:21:13, col:44> '<dependent type>' contains-errors
|   |       |   | |-DeclRefExpr 0x13d144318 <col:13> 'int ()' Function 0x13d141e38 'av_log' 'int ()'
|   |       |   | |-RecoveryExpr 0x13d144338 <col:20> '<dependent type>' contains-errors lvalue
|   |       |   | |-RecoveryExpr 0x13d1443c8 <col:23> '<dependent type>' contains-errors lvalue
|   |       |   | `-StringLiteral 0x13d144370 <col:39> 'char[4]' lvalue "STR"
|   |       |   `-ReturnStmt 0x13d144440 <line:22:13, col:20>
|   |       |     `-IntegerLiteral 0x13d144420 <col:20> 'int' 0
|   |       |-CallExpr 0x13d1446d0 <line:25:9, col:33> '<dependent type>' contains-errors
|   |       | |-DeclRefExpr 0x13d144590 <col:9> 'int ()' Function 0x13d1444d8 'av_freep' 'int ()'
|   |       | `-UnaryOperator 0x13d1446b8 <col:18, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |       |   `-CXXDependentScopeMemberExpr 0x13d144670 <col:19, col:24> '<dependent type>' contains-errors lvalue ->extradata
|   |       |     `-RecoveryExpr 0x13d144650 <col:19> '<dependent type>' contains-errors lvalue
|   |       |-BinaryOperator 0x13d144ae8 <line:26:9, line:27:77> 'int' contains-errors '='
|   |       | |-DeclRefExpr 0x13d1446f8 <line:26:9> 'int' lvalue Var 0x13d1440d0 'ret' 'int'
|   |       | `-CallExpr 0x13d144aa8 <col:15, line:27:77> '<dependent type>' contains-errors
|   |       |   |-DeclRefExpr 0x13d1447f8 <line:26:15> 'int ()' Function 0x13d144740 'ff_h264_parse_sprop_parameter_sets' 'int ()'
|   |       |   |-RecoveryExpr 0x13d144818 <col:50> '<dependent type>' contains-errors lvalue
|   |       |   |-UnaryOperator 0x13d144a10 <col:53, col:59> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |       |   | `-CXXDependentScopeMemberExpr 0x13d1449c8 <col:54, col:59> '<dependent type>' contains-errors lvalue ->extradata
|   |       |   |   `-RecoveryExpr 0x13d1449a8 <col:54> '<dependent type>' contains-errors lvalue
|   |       |   |-UnaryOperator 0x13d144a90 <line:27:50, col:56> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |       |   | `-CXXDependentScopeMemberExpr 0x13d144a48 <col:51, col:56> '<dependent type>' contains-errors lvalue ->extradata_size
|   |       |   |   `-RecoveryExpr 0x13d144a28 <col:51> '<dependent type>' contains-errors lvalue
|   |       |   `-DeclRefExpr 0x13d144928 <col:72> 'const char *' lvalue ParmVar 0x13d128328 'value' 'const char *'
|   |       `-ReturnStmt 0x13d144ba0 <line:30:9, col:16>
|   |         `-ImplicitCastExpr 0x13d144b88 <col:16> 'int' <LValueToRValue>
|   |           `-DeclRefExpr 0x13d144b68 <col:16> 'int' lvalue Var 0x13d1440d0 'ret' 'int'
|   `-ReturnStmt 0x13d1450a0 <line:32:5, col:12>
|     `-IntegerLiteral 0x13d145080 <col:12> 'int' 0
|-FunctionDecl 0x13d141a10 <line:8:10> col:10 implicit used strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x13d141b10 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x13d141b78 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x13d141ab8 <<invalid sloc>> Implicit 887
`-FunctionDecl 0x13d1426c8 <line:16:13> col:13 implicit used strlen 'unsigned long (const char *)' extern
  |-ParmVarDecl 0x13d143c00 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x13d142770 <<invalid sloc>> Implicit 902
