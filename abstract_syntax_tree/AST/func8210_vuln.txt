TranslationUnitDecl 0x14c855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14c8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14c855bd0 '__int128'
|-TypedefDecl 0x14c856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14c855bf0 'unsigned __int128'
|-TypedefDecl 0x14d00be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14d00bc00 'struct __NSConstantString_tag'
|   `-Record 0x14c856580 '__NSConstantString_tag'
|-TypedefDecl 0x14d00be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14c855d90 '__SVInt8_t'
|-TypedefDecl 0x14d00bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14c855db0 '__SVInt16_t'
|-TypedefDecl 0x14d00bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14c855dd0 '__SVInt32_t'
|-TypedefDecl 0x14d00bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14c855df0 '__SVInt64_t'
|-TypedefDecl 0x14d00c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14c855e10 '__SVUint8_t'
|-TypedefDecl 0x14d00c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14c855e30 '__SVUint16_t'
|-TypedefDecl 0x14d00c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14c855e50 '__SVUint32_t'
|-TypedefDecl 0x14d00c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14c855e70 '__SVUint64_t'
|-TypedefDecl 0x14d00c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14c855e90 '__SVFloat16_t'
|-TypedefDecl 0x14d00c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14c855eb0 '__SVFloat32_t'
|-TypedefDecl 0x14d00c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14c855ed0 '__SVFloat64_t'
|-TypedefDecl 0x14d00c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14c855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14d00c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14c855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14d00c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14c855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14d00c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14c855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14d00c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14c855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14d00c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14c855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14d00c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14c855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14d00c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14c855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14d00c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14c855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14d00c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14c856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14d00c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14c856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14d00c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14c856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14d00c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14c856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14d00c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14c856090 '__clang_svint8x3_t'
|-TypedefDecl 0x14d00c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14c8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14d00c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14c8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14d00c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14c8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14d00c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14c856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14d00ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14c856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14d00cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14c856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14d00cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14c856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14d00cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14c856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14d00d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14c8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14d00d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14c8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14d00d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14c8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14d00d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14c856210 '__clang_svint8x4_t'
|-TypedefDecl 0x14d00d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14c856230 '__clang_svint16x4_t'
|-TypedefDecl 0x14d00d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14c856250 '__clang_svint32x4_t'
|-TypedefDecl 0x14d00d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14c856270 '__clang_svint64x4_t'
|-TypedefDecl 0x14d00d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14c856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14d00d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14c8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14d00d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14c8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14d00d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14c8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14d00d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14c856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14d00d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14c856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14d00d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14c856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14d00d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14c856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14d00da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14c856390 '__SVBool_t'
|-TypedefDecl 0x14d00da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14c8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14d00dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14c8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14d00db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14c8563f0 '__SVCount_t'
|-TypedefDecl 0x14d00dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14d00dbb0 'char *'
|   `-BuiltinType 0x14c8556b0 'char'
|-TypedefDecl 0x14d00dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14d00dbb0 'char *'
|   `-BuiltinType 0x14c8556b0 'char'
|-FunctionDecl 0x14e008238 <dataset_diviso_filec/func8210_vuln.c:1:1, line:51:1> line:1:16 invalid lbs_debugfs_write 'int (struct file *, const char)' static
| |-ParmVarDecl 0x14d00e268 <col:34, col:47> col:47 used f 'struct file *'
| |-ParmVarDecl 0x14d00e2e0 <col:50, col:61> col:61 __user 'const char'
| `-CompoundStmt 0x14d029598 <line:3:1, line:51:1>
|   |-DeclStmt 0x14e008408 <line:4:2, col:10>
|   | |-VarDecl 0x14e008308 <col:2, col:6> col:6 used r 'int'
|   | `-VarDecl 0x14e008388 <col:2, col:9> col:9 used i 'int'
|   |-DeclStmt 0x14e0084a0 <line:5:2, col:13>
|   | `-VarDecl 0x14e008438 <col:2, col:8> col:8 used pdata 'char *'
|   |-DeclStmt 0x14e008538 <line:6:2, col:9>
|   | `-VarDecl 0x14e0084d0 <col:2, col:8> col:8 used p 'char *'
|   |-DeclStmt 0x14e0085d0 <line:7:2, col:10>
|   | `-VarDecl 0x14e008568 <col:2, col:8> col:8 used p0 'char *'
|   |-DeclStmt 0x14e008668 <line:8:2, col:10>
|   | `-VarDecl 0x14e008600 <col:2, col:8> col:8 used p1 'char *'
|   |-DeclStmt 0x14e008700 <line:9:2, col:10>
|   | `-VarDecl 0x14e008698 <col:2, col:8> col:8 used p2 'char *'
|   |-DeclStmt 0x14e008968 <line:10:2, col:40>
|   | |-RecordDecl 0x14e008718 <col:2, col:9> col:9 struct debug_data
|   | `-VarDecl 0x14e008888 <col:2, col:28> col:21 used d 'struct debug_data *' cinit
|   |   `-RecoveryExpr 0x14e008928 <col:25, col:28> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x14e0088f0 <col:25> 'struct file *' lvalue ParmVar 0x14d00e268 'f' 'struct file *'
|   |-BinaryOperator 0x14e008c10 <line:12:2, col:33> 'char *' contains-errors '='
|   | |-DeclRefExpr 0x14e008980 <col:2> 'char *' lvalue Var 0x14e008438 'pdata' 'char *'
|   | `-CallExpr 0x14e008be0 <col:10, col:33> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x14e008b00 <col:10> 'int ()' Function 0x14e008a48 'kmalloc' 'int ()'
|   |   |-RecoveryExpr 0x14e008ba0 <col:18> '<dependent type>' contains-errors lvalue
|   |   `-RecoveryExpr 0x14e008bc0 <col:23> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x14e008cf8 <line:13:2, line:14:10>
|   | |-BinaryOperator 0x14e008ca8 <line:13:6, col:15> 'int' contains-errors '=='
|   | | |-DeclRefExpr 0x14e008c30 <col:6> 'char *' lvalue Var 0x14e008438 'pdata' 'char *'
|   | | `-RecoveryExpr 0x14e008c88 <col:15> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x14e008ce8 <line:14:3, col:10>
|   |   `-IntegerLiteral 0x14e008cc8 <col:10> 'int' 0
|   |-IfStmt 0x14d0282f0 <line:16:2, line:20:2>
|   | |-CallExpr 0x14e008ee0 <line:16:6, col:36> '<dependent type>' contains-errors
|   | | |-DeclRefExpr 0x14e008df8 <col:6> 'int ()' Function 0x14e008d40 'copy_from_user' 'int ()'
|   | | |-DeclRefExpr 0x14e008e18 <col:21> 'char *' lvalue Var 0x14e008438 'pdata' 'char *'
|   | | |-RecoveryExpr 0x14e008ea0 <col:28> '<dependent type>' contains-errors lvalue
|   | | `-RecoveryExpr 0x14e008ec0 <col:33> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x14d0282c8 <col:39, line:20:2>
|   |   |-CallExpr 0x14e0090c8 <line:17:3, col:24> 'int'
|   |   | |-ImplicitCastExpr 0x14e0090b0 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x14e008ff8 <col:3> 'int ()' Function 0x14e008f40 'lbs_deb_debugfs' 'int ()'
|   |   | `-ImplicitCastExpr 0x14e0090f0 <col:19> 'char *' <ArrayToPointerDecay>
|   |   |   `-StringLiteral 0x14e009060 <col:19> 'char[4]' lvalue "STR"
|   |   |-CallExpr 0x14d028258 <line:18:3, col:14> 'int'
|   |   | |-ImplicitCastExpr 0x14d028240 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x14d028200 <col:3> 'int ()' Function 0x14e009130 'kfree' 'int ()'
|   |   | `-ImplicitCastExpr 0x14d028280 <col:9> 'char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x14d028220 <col:9> 'char *' lvalue Var 0x14e008438 'pdata' 'char *'
|   |   `-ReturnStmt 0x14d0282b8 <line:19:3, col:10>
|   |     `-IntegerLiteral 0x14d028298 <col:10> 'int' 0
|   |-BinaryOperator 0x14d028368 <line:22:2, col:7> 'char *' '='
|   | |-DeclRefExpr 0x14d028310 <col:2> 'char *' lvalue Var 0x14e008568 'p0' 'char *'
|   | `-ImplicitCastExpr 0x14d028350 <col:7> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x14d028330 <col:7> 'char *' lvalue Var 0x14e008438 'pdata' 'char *'
|   |-ForStmt 0x14d0294c8 <line:23:2, line:47:2>
|   | |-BinaryOperator 0x14d0283c8 <line:23:7, col:11> 'int' '='
|   | | |-DeclRefExpr 0x14d028388 <col:7> 'int' lvalue Var 0x14e008388 'i' 'int'
|   | | `-IntegerLiteral 0x14d0283a8 <col:11> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x14d028460 <col:14, col:18> 'int' contains-errors '<'
|   | | |-DeclRefExpr 0x14d0283e8 <col:14> 'int' lvalue Var 0x14e008388 'i' 'int'
|   | | `-RecoveryExpr 0x14d028440 <col:18> '<dependent type>' contains-errors lvalue
|   | |-UnaryOperator 0x14d0284a0 <col:32, col:33> 'int' postfix '++'
|   | | `-DeclRefExpr 0x14d028480 <col:32> 'int' lvalue Var 0x14e008388 'i' 'int'
|   | `-CompoundStmt 0x14d0294b0 <col:37, line:47:2>
|   |   `-DoStmt 0x14d029490 <line:24:3, line:46:13>
|   |     |-CompoundStmt 0x14d029418 <line:24:6, line:46:3>
|   |     | |-IfStmt 0x14d028850 <line:26:4, line:27:5>
|   |     | | |-BinaryOperator 0x14d028828 <line:26:8, col:13> 'int' contains-errors '=='
|   |     | | | |-DeclRefExpr 0x14d0287b0 <col:8> 'char *' lvalue Var 0x14e0084d0 'p' 'char *'
|   |     | | | `-RecoveryExpr 0x14d028808 <col:13> '<dependent type>' contains-errors lvalue
|   |     | | `-BreakStmt 0x14d028848 <line:27:5>
|   |     | |-BinaryOperator 0x14d028bc8 <line:28:4, col:23> 'char *' '='
|   |     | | |-DeclRefExpr 0x14d028870 <col:4> 'char *' lvalue Var 0x14e008600 'p1' 'char *'
|   |     | | `-CallExpr 0x14d028b68 <col:9, col:23> 'char *'
|   |     | |   |-ImplicitCastExpr 0x14d028b50 <col:9> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   |     | |   | `-DeclRefExpr 0x14d028ab0 <col:9> 'char *(const char *, int)' Function 0x14d0288d0 'strchr' 'char *(const char *, int)'
|   |     | |   |-ImplicitCastExpr 0x14d028bb0 <col:16> 'const char *' <NoOp>
|   |     | |   | `-ImplicitCastExpr 0x14d028b98 <col:16> 'char *' <LValueToRValue>
|   |     | |   |   `-DeclRefExpr 0x14d028ad0 <col:16> 'char *' lvalue Var 0x14e0084d0 'p' 'char *'
|   |     | |   `-CharacterLiteral 0x14d028af0 <col:19> 'int' 10
|   |     | |-IfStmt 0x14d028c88 <line:29:4, line:30:5>
|   |     | | |-BinaryOperator 0x14d028c60 <line:29:8, col:14> 'int' contains-errors '=='
|   |     | | | |-DeclRefExpr 0x14d028be8 <col:8> 'char *' lvalue Var 0x14e008600 'p1' 'char *'
|   |     | | | `-RecoveryExpr 0x14d028c40 <col:14> '<dependent type>' contains-errors lvalue
|   |     | | `-BreakStmt 0x14d028c80 <line:30:5>
|   |     | |-BinaryOperator 0x14d028d00 <line:31:4, col:11> 'char *' '='
|   |     | | |-DeclRefExpr 0x14d028ca8 <col:4> 'char *' lvalue Var 0x14e008568 'p0' 'char *'
|   |     | | `-UnaryOperator 0x14d028ce8 <col:9, col:11> 'char *' postfix '++'
|   |     | |   `-DeclRefExpr 0x14d028cc8 <col:9> 'char *' lvalue Var 0x14e008600 'p1' 'char *'
|   |     | |-BinaryOperator 0x14d028e28 <line:32:4, col:22> 'char *' '='
|   |     | | |-DeclRefExpr 0x14d028d20 <col:4> 'char *' lvalue Var 0x14e008698 'p2' 'char *'
|   |     | | `-CallExpr 0x14d028dc8 <col:9, col:22> 'char *'
|   |     | |   |-ImplicitCastExpr 0x14d028db0 <col:9> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   |     | |   | `-DeclRefExpr 0x14d028d40 <col:9> 'char *(const char *, int)' Function 0x14d0288d0 'strchr' 'char *(const char *, int)'
|   |     | |   |-ImplicitCastExpr 0x14d028e10 <col:16> 'const char *' <NoOp>
|   |     | |   | `-ImplicitCastExpr 0x14d028df8 <col:16> 'char *' <LValueToRValue>
|   |     | |   |   `-DeclRefExpr 0x14d028d60 <col:16> 'char *' lvalue Var 0x14e0084d0 'p' 'char *'
|   |     | |   `-CharacterLiteral 0x14d028d80 <col:19> 'int' 61
|   |     | |-IfStmt 0x14d028ea0 <line:33:4, line:34:5>
|   |     | | |-UnaryOperator 0x14d028e80 <line:33:8, col:9> 'int' prefix '!' cannot overflow
|   |     | | | `-ImplicitCastExpr 0x14d028e68 <col:9> 'char *' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x14d028e48 <col:9> 'char *' lvalue Var 0x14e008698 'p2' 'char *'
|   |     | | `-BreakStmt 0x14d028e98 <line:34:5>
|   |     | |-UnaryOperator 0x14d028ee0 <line:35:4, col:6> 'char *' postfix '++'
|   |     | | `-DeclRefExpr 0x14d028ec0 <col:4> 'char *' lvalue Var 0x14e008698 'p2' 'char *'
|   |     | |-BinaryOperator 0x14d029120 <line:36:4, col:34> 'int' contains-errors '='
|   |     | | |-DeclRefExpr 0x14d028ef8 <col:4> 'int' lvalue Var 0x14e008308 'r' 'int'
|   |     | | `-CallExpr 0x14d0290e8 <col:8, col:34> '<dependent type>' contains-errors
|   |     | |   |-DeclRefExpr 0x14d028ff8 <col:8> 'int ()' Function 0x14d028f40 'simple_strtoul' 'int ()'
|   |     | |   |-DeclRefExpr 0x14d029018 <col:23> 'char *' lvalue Var 0x14e008698 'p2' 'char *'
|   |     | |   |-RecoveryExpr 0x14d0290c8 <col:27> '<dependent type>' contains-errors lvalue
|   |     | |   `-IntegerLiteral 0x14d029050 <col:33> 'int' 0
|   |     | `-BreakStmt 0x14d029410 <line:45:4>
|   |     `-IntegerLiteral 0x14d029470 <line:46:12> 'int' 1
|   `-CallExpr 0x14d029558 <line:48:2, col:13> 'int'
|     |-ImplicitCastExpr 0x14d029540 <col:2> 'int (*)()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x14d029500 <col:2> 'int ()' Function 0x14e009130 'kfree' 'int ()'
|     `-ImplicitCastExpr 0x14d029580 <col:8> 'char *' <LValueToRValue>
|       `-DeclRefExpr 0x14d029520 <col:8> 'char *' lvalue Var 0x14e008438 'pdata' 'char *'
|-FunctionDecl 0x14d028520 <line:25:8> col:8 implicit used strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x14d028620 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x14d028688 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x14d0285c8 <<invalid sloc>> Implicit 898
`-FunctionDecl 0x14d0288d0 <line:28:9> col:9 implicit used strchr 'char *(const char *, int)' extern
  |-ParmVarDecl 0x14d0289d0 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x14d028a38 <<invalid sloc>> <invalid sloc> 'int'
  `-BuiltinAttr 0x14d028978 <<invalid sloc>> Implicit 893
