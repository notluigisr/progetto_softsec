TranslationUnitDecl 0x12f855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12f8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12f855bd0 '__int128'
|-TypedefDecl 0x12f856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12f855bf0 'unsigned __int128'
|-TypedefDecl 0x13800be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13800bc00 'struct __NSConstantString_tag'
|   `-Record 0x12f856580 '__NSConstantString_tag'
|-TypedefDecl 0x13800be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12f855d90 '__SVInt8_t'
|-TypedefDecl 0x13800bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12f855db0 '__SVInt16_t'
|-TypedefDecl 0x13800bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12f855dd0 '__SVInt32_t'
|-TypedefDecl 0x13800bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12f855df0 '__SVInt64_t'
|-TypedefDecl 0x13800c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12f855e10 '__SVUint8_t'
|-TypedefDecl 0x13800c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12f855e30 '__SVUint16_t'
|-TypedefDecl 0x13800c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12f855e50 '__SVUint32_t'
|-TypedefDecl 0x13800c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12f855e70 '__SVUint64_t'
|-TypedefDecl 0x13800c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12f855e90 '__SVFloat16_t'
|-TypedefDecl 0x13800c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12f855eb0 '__SVFloat32_t'
|-TypedefDecl 0x13800c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12f855ed0 '__SVFloat64_t'
|-TypedefDecl 0x13800c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12f855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13800c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12f855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13800c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12f855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13800c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12f855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13800c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12f855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13800c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12f855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13800c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12f855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13800c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12f855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13800c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12f855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13800c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12f856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13800c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12f856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13800c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12f856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13800c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12f856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13800c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12f856090 '__clang_svint8x3_t'
|-TypedefDecl 0x13800c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12f8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13800c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12f8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13800c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12f8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13800c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12f856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13800ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12f856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13800cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12f856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13800cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12f856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13800cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12f856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13800d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12f8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13800d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12f8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13800d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12f8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13800d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12f856210 '__clang_svint8x4_t'
|-TypedefDecl 0x13800d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12f856230 '__clang_svint16x4_t'
|-TypedefDecl 0x13800d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12f856250 '__clang_svint32x4_t'
|-TypedefDecl 0x13800d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12f856270 '__clang_svint64x4_t'
|-TypedefDecl 0x13800d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12f856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13800d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12f8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13800d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12f8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13800d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12f8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13800d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12f856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13800d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12f856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13800d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12f856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13800d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12f856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13800da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12f856390 '__SVBool_t'
|-TypedefDecl 0x13800da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12f8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13800dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12f8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13800db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12f8563f0 '__SVCount_t'
|-TypedefDecl 0x13800dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13800dbb0 'char *'
|   `-BuiltinType 0x12f8556b0 'char'
|-TypedefDecl 0x13800dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13800dbb0 'char *'
|   `-BuiltinType 0x12f8556b0 'char'
|-FunctionDecl 0x13800dd98 <dataset_diviso_filec/func11949_nonvuln.c:1:1, line:36:1> line:1:12 read_yes_no_answer 'int (void)' static
| `-CompoundStmt 0x13802a600 <line:2:1, line:36:1>
|   |-DeclStmt 0x13800df98 <line:3:2, col:19>
|   | `-VarDecl 0x13800df30 <col:2, col:18> col:7 used answer 'char[1024]'
|   |-IfStmt 0x138029760 <line:5:2, line:23:10> has_else
|   | |-CallExpr 0x13800e1f0 <line:5:6, col:41> '<dependent type>' contains-errors
|   | | |-DeclRefExpr 0x13800e0e0 <col:6> 'int ()' Function 0x13800e028 'fgets' 'int ()'
|   | | |-DeclRefExpr 0x13800e100 <col:12> 'char[1024]' lvalue Var 0x13800df30 'answer' 'char[1024]'
|   | | |-UnaryExprOrTypeTraitExpr 0x13800e160 <col:20, col:33> 'unsigned long' sizeof
|   | | | `-ParenExpr 0x13800e140 <col:26, col:33> 'char[1024]' lvalue
|   | | |   `-DeclRefExpr 0x13800e120 <col:27> 'char[1024]' lvalue Var 0x13800df30 'answer' 'char[1024]' non_odr_use_unevaluated
|   | | `-RecoveryExpr 0x13800e1d0 <col:36> '<dependent type>' contains-errors lvalue
|   | |-CompoundStmt 0x138029700 <col:44, line:21:2>
|   | | |-RecoveryExpr 0x138028450 <line:6:3, col:36> '<dependent type>' contains-errors lvalue
|   | | | |-UnaryExprOrTypeTraitExpr 0x1380283a8 <col:3, col:10> 'unsigned long' contains-errors sizeof
|   | | | | `-RecoveryExpr 0x138028388 <col:10> '<dependent type>' contains-errors lvalue
|   | | | `-CallExpr 0x1380283f8 <col:23, col:36> 'unsigned long'
|   | | |   |-ImplicitCastExpr 0x1380283e0 <col:23> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   | | |   | `-DeclRefExpr 0x138028240 <col:23> 'unsigned long (const char *)' Function 0x1380280d0 'strlen' 'unsigned long (const char *)'
|   | | |   `-ImplicitCastExpr 0x138028438 <col:30> 'const char *' <NoOp>
|   | | |     `-ImplicitCastExpr 0x138028420 <col:30> 'char *' <ArrayToPointerDecay>
|   | | |       `-DeclRefExpr 0x138028260 <col:30> 'char[1024]' lvalue Var 0x13800df30 'answer' 'char[1024]'
|   | | |-DeclStmt 0x1380285b8 <line:7:3, col:27>
|   | | | |-VarDecl 0x138028498 <col:3, col:23> col:7 used got_full_line 'int' cinit
|   | | | | `-IntegerLiteral 0x138028500 <col:23> 'int' 0
|   | | | `-VarDecl 0x138028538 <col:3, col:26> col:26 used c 'int'
|   | | |-IfStmt 0x138028a10 <line:10:3, line:16:3> has_else
|   | | | |-RecoveryExpr 0x1380286b8 <line:10:7, col:50> '_Bool' contains-errors
|   | | | |-CompoundStmt 0x1380287c8 <col:56, line:13:3>
|   | | | | `-BinaryOperator 0x1380287a8 <line:12:4, col:20> 'int' '='
|   | | | |   |-DeclRefExpr 0x138028768 <col:4> 'int' lvalue Var 0x138028498 'got_full_line' 'int'
|   | | | |   `-IntegerLiteral 0x138028788 <col:20> 'int' 1
|   | | | `-IfStmt 0x1380289f0 <line:13:10, line:16:3>
|   | | |   |-RecoveryExpr 0x1380288c8 <line:13:14, col:57> '_Bool' contains-errors
|   | | |   `-CompoundStmt 0x1380289d8 <col:63, line:16:3>
|   | | |     `-BinaryOperator 0x1380289b8 <line:15:4, col:20> 'int' '='
|   | | |       |-DeclRefExpr 0x138028978 <col:4> 'int' lvalue Var 0x138028498 'got_full_line' 'int'
|   | | |       `-IntegerLiteral 0x138028998 <col:20> 'int' 1
|   | | `-IfStmt 0x1380296e0 <line:18:3, line:20:5>
|   | |   |-UnaryOperator 0x138028a78 <line:18:7, col:8> 'int' prefix '!' cannot overflow
|   | |   | `-ImplicitCastExpr 0x138028a60 <col:8> 'int' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x138028a40 <col:8> 'int' lvalue Var 0x138028498 'got_full_line' 'int'
|   | |   `-WhileStmt 0x1380296c0 <line:19:4, line:20:5>
|   | |     |-BinaryOperator 0x138029698 <line:19:11, col:42> 'int' contains-errors '&&'
|   | |     | |-BinaryOperator 0x138029640 <col:11, col:30> 'int' contains-errors '!='
|   | |     | | |-ParenExpr 0x138029600 <col:11, col:25> 'int'
|   | |     | | | `-BinaryOperator 0x138028dd0 <col:12, col:24> 'int' '='
|   | |     | | |   |-DeclRefExpr 0x138028a90 <col:12> 'int' lvalue Var 0x138028538 'c' 'int'
|   | |     | | |   `-CallExpr 0x138028db0 <col:16, col:24> 'int'
|   | |     | | |     `-ImplicitCastExpr 0x138028d98 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   | |     | | |       `-DeclRefExpr 0x138028b90 <col:16> 'int ()' Function 0x138028ad8 'getchar' 'int ()'
|   | |     | | `-RecoveryExpr 0x138029620 <col:30> '<dependent type>' contains-errors lvalue
|   | |     | `-BinaryOperator 0x138029678 <col:37, col:42> 'int' '!='
|   | |     |   |-ImplicitCastExpr 0x138029660 <col:37> 'int' <LValueToRValue>
|   | |     |   | `-DeclRefExpr 0x138028c90 <col:37> 'int' lvalue Var 0x138028538 'c' 'int'
|   | |     |   `-CharacterLiteral 0x138028cb0 <col:42> 'int' 10
|   | |     `-NullStmt 0x1380296b8 <line:20:5>
|   | `-ReturnStmt 0x138029750 <line:23:3, col:10>
|   |   `-IntegerLiteral 0x138029730 <col:10> 'int' 0
|   |-IfStmt 0x138029bf0 <line:25:2, line:26:10>
|   | |-BinaryOperator 0x138029ba0 <line:25:6, col:44> 'int' '&&'
|   | | |-BinaryOperator 0x138029ad8 <col:6, col:28> 'int' '=='
|   | | | |-CallExpr 0x138029a68 <col:6, col:23> 'int'
|   | | | | |-ImplicitCastExpr 0x138029a50 <col:6> 'int (*)(int)' <FunctionToPointerDecay>
|   | | | | | `-DeclRefExpr 0x138029988 <col:6> 'int (int)' Function 0x1380297c8 'tolower' 'int (int)'
|   | | | | `-ImplicitCastExpr 0x138029aa8 <col:14, col:22> 'int' <IntegralCast>
|   | | | |   `-ImplicitCastExpr 0x138029a90 <col:14, col:22> 'char' <LValueToRValue>
|   | | | |     `-ArraySubscriptExpr 0x138029a00 <col:14, col:22> 'char' lvalue
|   | | | |       |-ImplicitCastExpr 0x1380299e8 <col:14> 'char *' <ArrayToPointerDecay>
|   | | | |       | `-DeclRefExpr 0x1380299a8 <col:14> 'char[1024]' lvalue Var 0x13800df30 'answer' 'char[1024]'
|   | | | |       `-IntegerLiteral 0x1380299c8 <col:21> 'int' 0
|   | | | `-CharacterLiteral 0x138029ac0 <col:28> 'int' 121
|   | | `-UnaryOperator 0x138029b88 <col:35, col:44> 'int' prefix '!' cannot overflow
|   | |   `-ImplicitCastExpr 0x138029b70 <col:36, col:44> 'char' <LValueToRValue>
|   | |     `-ArraySubscriptExpr 0x138029b50 <col:36, col:44> 'char' lvalue
|   | |       |-ImplicitCastExpr 0x138029b38 <col:36> 'char *' <ArrayToPointerDecay>
|   | |       | `-DeclRefExpr 0x138029af8 <col:36> 'char[1024]' lvalue Var 0x13800df30 'answer' 'char[1024]'
|   | |       `-IntegerLiteral 0x138029b18 <col:43> 'int' 1
|   | `-ReturnStmt 0x138029be0 <line:26:3, col:10>
|   |   `-IntegerLiteral 0x138029bc0 <col:10> 'int' 1
|   |-IfStmt 0x13802a108 <line:27:2, line:28:10>
|   | |-UnaryOperator 0x13802a0c0 <line:27:6, col:48> 'int' prefix '!' cannot overflow
|   | | `-CallExpr 0x13802a028 <col:7, col:48> 'int'
|   | |   |-ImplicitCastExpr 0x13802a010 <col:7> 'int (*)(const char *, const char *, unsigned long)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x138029ea8 <col:7> 'int (const char *, const char *, unsigned long)' Function 0x138029c58 'strncasecmp' 'int (const char *, const char *, unsigned long)'
|   | |   |-ImplicitCastExpr 0x13802a078 <col:19> 'const char *' <NoOp>
|   | |   | `-ImplicitCastExpr 0x13802a060 <col:19> 'char *' <ArrayToPointerDecay>
|   | |   |   `-DeclRefExpr 0x138029ec8 <col:19> 'char[1024]' lvalue Var 0x13800df30 'answer' 'char[1024]'
|   | |   |-ImplicitCastExpr 0x13802a0a8 <col:27> 'const char *' <NoOp>
|   | |   | `-ImplicitCastExpr 0x13802a090 <col:27> 'char *' <ArrayToPointerDecay>
|   | |   |   `-StringLiteral 0x138029f30 <col:27> 'char[4]' lvalue "STR"
|   | |   `-UnaryExprOrTypeTraitExpr 0x138029f90 <col:34, col:47> 'unsigned long' sizeof
|   | |     `-ParenExpr 0x138029f70 <col:40, col:47> 'char[1024]' lvalue
|   | |       `-DeclRefExpr 0x138029f50 <col:41> 'char[1024]' lvalue Var 0x13800df30 'answer' 'char[1024]' non_odr_use_unevaluated
|   | `-ReturnStmt 0x13802a0f8 <line:28:3, col:10>
|   |   `-IntegerLiteral 0x13802a0d8 <col:10> 'int' 1
|   |-IfStmt 0x13802a360 <line:29:2, line:30:10>
|   | |-BinaryOperator 0x13802a310 <line:29:6, col:44> 'int' '&&'
|   | | |-BinaryOperator 0x13802a248 <col:6, col:28> 'int' '=='
|   | | | |-CallExpr 0x13802a1d8 <col:6, col:23> 'int'
|   | | | | |-ImplicitCastExpr 0x13802a1c0 <col:6> 'int (*)(int)' <FunctionToPointerDecay>
|   | | | | | `-DeclRefExpr 0x13802a128 <col:6> 'int (int)' Function 0x1380297c8 'tolower' 'int (int)'
|   | | | | `-ImplicitCastExpr 0x13802a218 <col:14, col:22> 'int' <IntegralCast>
|   | | | |   `-ImplicitCastExpr 0x13802a200 <col:14, col:22> 'char' <LValueToRValue>
|   | | | |     `-ArraySubscriptExpr 0x13802a1a0 <col:14, col:22> 'char' lvalue
|   | | | |       |-ImplicitCastExpr 0x13802a188 <col:14> 'char *' <ArrayToPointerDecay>
|   | | | |       | `-DeclRefExpr 0x13802a148 <col:14> 'char[1024]' lvalue Var 0x13800df30 'answer' 'char[1024]'
|   | | | |       `-IntegerLiteral 0x13802a168 <col:21> 'int' 0
|   | | | `-CharacterLiteral 0x13802a230 <col:28> 'int' 110
|   | | `-UnaryOperator 0x13802a2f8 <col:35, col:44> 'int' prefix '!' cannot overflow
|   | |   `-ImplicitCastExpr 0x13802a2e0 <col:36, col:44> 'char' <LValueToRValue>
|   | |     `-ArraySubscriptExpr 0x13802a2c0 <col:36, col:44> 'char' lvalue
|   | |       |-ImplicitCastExpr 0x13802a2a8 <col:36> 'char *' <ArrayToPointerDecay>
|   | |       | `-DeclRefExpr 0x13802a268 <col:36> 'char[1024]' lvalue Var 0x13800df30 'answer' 'char[1024]'
|   | |       `-IntegerLiteral 0x13802a288 <col:43> 'int' 1
|   | `-ReturnStmt 0x13802a350 <line:30:3, col:10>
|   |   `-IntegerLiteral 0x13802a330 <col:10> 'int' 0
|   |-IfStmt 0x13802a568 <line:31:2, line:32:10>
|   | |-UnaryOperator 0x13802a520 <line:31:6, col:48> 'int' prefix '!' cannot overflow
|   | | `-CallExpr 0x13802a488 <col:7, col:48> 'int'
|   | |   |-ImplicitCastExpr 0x13802a470 <col:7> 'int (*)(const char *, const char *, unsigned long)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x13802a380 <col:7> 'int (const char *, const char *, unsigned long)' Function 0x138029c58 'strncasecmp' 'int (const char *, const char *, unsigned long)'
|   | |   |-ImplicitCastExpr 0x13802a4d8 <col:19> 'const char *' <NoOp>
|   | |   | `-ImplicitCastExpr 0x13802a4c0 <col:19> 'char *' <ArrayToPointerDecay>
|   | |   |   `-DeclRefExpr 0x13802a3a0 <col:19> 'char[1024]' lvalue Var 0x13800df30 'answer' 'char[1024]'
|   | |   |-ImplicitCastExpr 0x13802a508 <col:27> 'const char *' <NoOp>
|   | |   | `-ImplicitCastExpr 0x13802a4f0 <col:27> 'char *' <ArrayToPointerDecay>
|   | |   |   `-StringLiteral 0x13802a3c0 <col:27> 'char[4]' lvalue "STR"
|   | |   `-UnaryExprOrTypeTraitExpr 0x13802a420 <col:34, col:47> 'unsigned long' sizeof
|   | |     `-ParenExpr 0x13802a400 <col:40, col:47> 'char[1024]' lvalue
|   | |       `-DeclRefExpr 0x13802a3e0 <col:41> 'char[1024]' lvalue Var 0x13800df30 'answer' 'char[1024]' non_odr_use_unevaluated
|   | `-ReturnStmt 0x13802a558 <line:32:3, col:10>
|   |   `-IntegerLiteral 0x13802a538 <col:10> 'int' 0
|   `-ReturnStmt 0x13802a5c0 <line:35:2, col:10>
|     `-UnaryOperator 0x13802a5a8 <col:9, col:10> 'int' prefix '-'
|       `-IntegerLiteral 0x13802a588 <col:10> 'int' 1
|-FunctionDecl 0x1380280d0 <line:6:23> col:23 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x1380281d0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x138028178 <<invalid sloc>> Implicit 902
|-FunctionDecl 0x1380297c8 <line:25:6> col:6 implicit used tolower 'int (int)' extern
| |-ParmVarDecl 0x1380298c8 <<invalid sloc>> <invalid sloc> 'int'
| |-BuiltinAttr 0x138029870 <<invalid sloc>> Implicit 932
| |-NoThrowAttr 0x138029938 <col:6> Implicit
| `-PureAttr 0x138029960 <col:6> Implicit
`-FunctionDecl 0x138029c58 <line:27:7> col:7 implicit used strncasecmp 'int (const char *, const char *, unsigned long)' extern
  |-ParmVarDecl 0x138029d58 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x138029dc0 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x138029e28 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x138029d00 <<invalid sloc>> Implicit 958
