TranslationUnitDecl 0x12c055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12c0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12c055bd0 '__int128'
|-TypedefDecl 0x12c056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12c055bf0 'unsigned __int128'
|-TypedefDecl 0x12c80be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12c80bc00 'struct __NSConstantString_tag'
|   `-Record 0x12c056580 '__NSConstantString_tag'
|-TypedefDecl 0x12c80be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12c055d90 '__SVInt8_t'
|-TypedefDecl 0x12c80bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12c055db0 '__SVInt16_t'
|-TypedefDecl 0x12c80bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12c055dd0 '__SVInt32_t'
|-TypedefDecl 0x12c80bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12c055df0 '__SVInt64_t'
|-TypedefDecl 0x12c80c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12c055e10 '__SVUint8_t'
|-TypedefDecl 0x12c80c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12c055e30 '__SVUint16_t'
|-TypedefDecl 0x12c80c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12c055e50 '__SVUint32_t'
|-TypedefDecl 0x12c80c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12c055e70 '__SVUint64_t'
|-TypedefDecl 0x12c80c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12c055e90 '__SVFloat16_t'
|-TypedefDecl 0x12c80c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12c055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12c80c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12c055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12c80c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12c055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12c80c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12c055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12c80c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12c055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12c80c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12c055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12c80c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12c055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12c80c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12c055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12c80c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12c055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12c80c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12c055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12c80c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12c055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12c80c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12c056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12c80c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12c056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12c80c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12c056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12c80c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12c056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12c80c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12c056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12c80c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12c0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12c80c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12c0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12c80c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12c0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12c80c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12c056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12c80ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12c056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12c80cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12c056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12c80cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12c056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12c80cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12c056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12c80d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12c0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12c80d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12c0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12c80d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12c0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12c80d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12c056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12c80d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12c056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12c80d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12c056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12c80d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12c056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12c80d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12c056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12c80d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12c0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12c80d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12c0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12c80d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12c0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12c80d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12c056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12c80d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12c056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12c80d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12c056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12c80d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12c056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12c80da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12c056390 '__SVBool_t'
|-TypedefDecl 0x12c80da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12c0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12c80dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12c0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12c80db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12c0563f0 '__SVCount_t'
|-TypedefDecl 0x12c80dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12c80dbb0 'char *'
|   `-BuiltinType 0x12c0556b0 'char'
|-TypedefDecl 0x12c80dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12c80dbb0 'char *'
|   `-BuiltinType 0x12c0556b0 'char'
`-FunctionDecl 0x12c80e350 <dataset_diviso_filec/func17216_nonvuln.c:1:1, line:58:1> line:1:13 ax_bump 'void (struct mkiss *)' static
  |-ParmVarDecl 0x12c80e248 <col:21, col:35> col:35 used ax 'struct mkiss *'
  `-CompoundStmt 0x12c1245b8 <line:2:1, line:58:1>
    |-DeclStmt 0x12d808438 <line:3:2, col:21>
    | |-RecordDecl 0x12d808248 <col:2, col:9> col:9 struct sk_buff
    | `-VarDecl 0x12d8083b8 <col:2, col:18> col:18 used skb 'struct sk_buff *'
    |-DeclStmt 0x12d8084d0 <line:4:2, col:11>
    | `-VarDecl 0x12d808468 <col:2, col:6> col:6 used count 'int'
    |-CallExpr 0x12d8086a8 <line:6:2, col:27> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12d808610 <col:2> 'int ()' Function 0x12d808558 'spin_lock_bh' 'int ()'
    | `-UnaryOperator 0x12d808690 <col:15, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x12d808668 <col:16, col:20> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x12d808630 <col:16> 'struct mkiss *' lvalue ParmVar 0x12c80e248 'ax' 'struct mkiss *'
    |-IfStmt 0x12c123738 <line:7:2, line:40:2>
    | |-BinaryOperator 0x12d8087a8 <line:7:6, col:21> 'int' contains-errors '>'
    | | |-ArraySubscriptExpr 0x12d808768 <col:6, col:17> '<dependent type>' contains-errors lvalue
    | | | |-ImplicitCastExpr 0x12d808750 <col:6, col:10> '<dependent type>' contains-errors <LValueToRValue>
    | | | | `-RecoveryExpr 0x12d808708 <col:6, col:10> '<dependent type>' contains-errors lvalue
    | | | |   `-DeclRefExpr 0x12d8086d0 <col:6> 'struct mkiss *' lvalue ParmVar 0x12c80e248 'ax' 'struct mkiss *'
    | | | `-IntegerLiteral 0x12d808730 <col:16> 'int' 0
    | | `-IntegerLiteral 0x12d808788 <col:21> 'int' 15
    | `-CompoundStmt 0x12c123720 <col:27, line:40:2>
    |   `-IfStmt 0x12c1236f0 <line:8:3, line:39:3> has_else
    |     |-BinaryOperator 0x12d8088a0 <line:8:7, col:22> '<dependent type>' contains-errors '&'
    |     | |-ArraySubscriptExpr 0x12d808860 <col:7, col:18> '<dependent type>' contains-errors lvalue
    |     | | |-ImplicitCastExpr 0x12d808848 <col:7, col:11> '<dependent type>' contains-errors <LValueToRValue>
    |     | | | `-RecoveryExpr 0x12d808800 <col:7, col:11> '<dependent type>' contains-errors lvalue
    |     | | |   `-DeclRefExpr 0x12d8087c8 <col:7> 'struct mkiss *' lvalue ParmVar 0x12c80e248 'ax' 'struct mkiss *'
    |     | | `-IntegerLiteral 0x12d808828 <col:17> 'int' 0
    |     | `-IntegerLiteral 0x12d808880 <col:22> 'int' 128
    |     |-CompoundStmt 0x12c122d48 <col:28, line:23:3>
    |     | |-IfStmt 0x12d808dd0 <line:9:4, line:14:4>
    |     | | |-BinaryOperator 0x12d808ad0 <line:9:8, col:46> 'int' contains-errors '<'
    |     | | | |-CallExpr 0x12d808a80 <col:8, col:42> '<dependent type>' contains-errors
    |     | | | | |-DeclRefExpr 0x12d8089a0 <col:8> 'int ()' Function 0x12d8088e8 'check_crc_16' 'int ()'
    |     | | | | |-RecoveryExpr 0x12d8089f8 <col:21, col:25> '<dependent type>' contains-errors lvalue
    |     | | | | | `-DeclRefExpr 0x12d8089c0 <col:21> 'struct mkiss *' lvalue ParmVar 0x12c80e248 'ax' 'struct mkiss *'
    |     | | | | `-RecoveryExpr 0x12d808a58 <col:32, col:36> '<dependent type>' contains-errors lvalue
    |     | | | |   `-DeclRefExpr 0x12d808a20 <col:32> 'struct mkiss *' lvalue ParmVar 0x12c80e248 'ax' 'struct mkiss *'
    |     | | | `-IntegerLiteral 0x12d808ab0 <col:46> 'int' 0
    |     | | `-CompoundStmt 0x12d808da8 <col:49, line:14:4>
    |     | |   |-UnaryOperator 0x12d808be0 <line:10:5, col:29> '<dependent type>' contains-errors postfix '++' cannot overflow
    |     | |   | `-CXXDependentScopeMemberExpr 0x12d808b98 <col:5, col:20> '<dependent type>' contains-errors lvalue .rx_errors
    |     | |   |   `-CXXDependentScopeMemberExpr 0x12d808b50 <col:5, col:14> '<dependent type>' contains-errors lvalue ->stats
    |     | |   |     `-RecoveryExpr 0x12d808b28 <col:5, col:9> '<dependent type>' contains-errors lvalue
    |     | |   |       `-DeclRefExpr 0x12d808af0 <col:5> 'struct mkiss *' lvalue ParmVar 0x12c80e248 'ax' 'struct mkiss *'
    |     | |   |-CallExpr 0x12d808d70 <line:11:5, col:32> '<dependent type>' contains-errors
    |     | |   | |-DeclRefExpr 0x12d808cd8 <col:5> 'int ()' Function 0x12d808c20 'spin_unlock_bh' 'int ()'
    |     | |   | `-UnaryOperator 0x12d808d58 <col:20, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     | |   |   `-RecoveryExpr 0x12d808d30 <col:21, col:25> '<dependent type>' contains-errors lvalue
    |     | |   |     `-DeclRefExpr 0x12d808cf8 <col:21> 'struct mkiss *' lvalue ParmVar 0x12c80e248 'ax' 'struct mkiss *'
    |     | |   `-ReturnStmt 0x12d808d98 <line:13:5>
    |     | |-IfStmt 0x12d809170 <line:15:4, line:20:4>
    |     | | |-BinaryOperator 0x12d808f48 <line:15:8, col:45> 'int' contains-errors '&&'
    |     | | | |-BinaryOperator 0x12d808f28 <col:8, col:23> 'int' contains-errors '!='
    |     | | | | |-RecoveryExpr 0x12d808e28 <col:8, col:12> '<dependent type>' contains-errors lvalue
    |     | | | | | `-DeclRefExpr 0x12d808df0 <col:8> 'struct mkiss *' lvalue ParmVar 0x12c80e248 'ax' 'struct mkiss *'
    |     | | | | `-RecoveryExpr 0x12d808f08 <col:23> '<dependent type>' contains-errors lvalue
    |     | | | `-RecoveryExpr 0x12d808ec0 <col:41, col:45> '<dependent type>' contains-errors lvalue
    |     | | |   `-DeclRefExpr 0x12d808e88 <col:41> 'struct mkiss *' lvalue ParmVar 0x12c80e248 'ax' 'struct mkiss *'
    |     | | `-CompoundStmt 0x12d809158 <col:54, line:20:4>
    |     | |   `-BinaryOperator 0x12d809138 <line:19:5, col:19> '<dependent type>' contains-errors '='
    |     | |     |-RecoveryExpr 0x12d8090b8 <col:5, col:9> '<dependent type>' contains-errors lvalue
    |     | |     | `-DeclRefExpr 0x12d809080 <col:5> 'struct mkiss *' lvalue ParmVar 0x12c80e248 'ax' 'struct mkiss *'
    |     | |     `-RecoveryExpr 0x12d809118 <col:19> '<dependent type>' contains-errors lvalue
    |     | |-CompoundAssignOperator 0x12c122c20 <line:21:4, col:18> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |     | | |-RecoveryExpr 0x12d8091c8 <col:4, col:8> '<dependent type>' contains-errors lvalue
    |     | | | `-DeclRefExpr 0x12d809190 <col:4> 'struct mkiss *' lvalue ParmVar 0x12c80e248 'ax' 'struct mkiss *'
    |     | | `-IntegerLiteral 0x12c122c00 <col:18> 'int' 2
    |     | `-CompoundAssignOperator 0x12c122d18 <line:22:4, col:19> '<dependent type>' contains-errors '&=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |     |   |-UnaryOperator 0x12c122cc8 <col:4, col:9> '<dependent type>' contains-errors prefix '*' cannot overflow
    |     |   | `-ImplicitCastExpr 0x12c122cb0 <col:5, col:9> '<dependent type>' contains-errors <LValueToRValue>
    |     |   |   `-RecoveryExpr 0x12c122c88 <col:5, col:9> '<dependent type>' contains-errors lvalue
    |     |   |     `-DeclRefExpr 0x12c122c50 <col:5> 'struct mkiss *' lvalue ParmVar 0x12c80e248 'ax' 'struct mkiss *'
    |     |   `-UnaryOperator 0x12c122d00 <col:18, col:19> 'int' prefix '~' cannot overflow
    |     |     `-IntegerLiteral 0x12c122ce0 <col:19> 'int' 128
    |     `-IfStmt 0x12c1236d0 <line:23:10, line:39:3>
    |       |-BinaryOperator 0x12c122e50 <line:23:14, col:29> '<dependent type>' contains-errors '&'
    |       | |-ArraySubscriptExpr 0x12c122e10 <col:14, col:25> '<dependent type>' contains-errors lvalue
    |       | | |-ImplicitCastExpr 0x12c122df8 <col:14, col:18> '<dependent type>' contains-errors <LValueToRValue>
    |       | | | `-RecoveryExpr 0x12c122db0 <col:14, col:18> '<dependent type>' contains-errors lvalue
    |       | | |   `-DeclRefExpr 0x12c122d78 <col:14> 'struct mkiss *' lvalue ParmVar 0x12c80e248 'ax' 'struct mkiss *'
    |       | | `-IntegerLiteral 0x12c122dd8 <col:24> 'int' 0
    |       | `-IntegerLiteral 0x12c122e30 <col:29> 'int' 32
    |       `-CompoundStmt 0x12c1236a0 <col:36, line:39:3>
    |         |-IfStmt 0x12c1232a0 <line:24:4, line:28:4>
    |         | |-BinaryOperator 0x12c123080 <line:24:8, col:48> 'int' contains-errors '<'
    |         | | |-CallExpr 0x12c123030 <col:8, col:44> '<dependent type>' contains-errors
    |         | | | |-DeclRefExpr 0x12c122f50 <col:8> 'int ()' Function 0x12c122e98 'check_crc_flex' 'int ()'
    |         | | | |-RecoveryExpr 0x12c122fa8 <col:23, col:27> '<dependent type>' contains-errors lvalue
    |         | | | | `-DeclRefExpr 0x12c122f70 <col:23> 'struct mkiss *' lvalue ParmVar 0x12c80e248 'ax' 'struct mkiss *'
    |         | | | `-RecoveryExpr 0x12c123008 <col:34, col:38> '<dependent type>' contains-errors lvalue
    |         | | |   `-DeclRefExpr 0x12c122fd0 <col:34> 'struct mkiss *' lvalue ParmVar 0x12c80e248 'ax' 'struct mkiss *'
    |         | | `-IntegerLiteral 0x12c123060 <col:48> 'int' 0
    |         | `-CompoundStmt 0x12c123278 <col:51, line:28:4>
    |         |   |-UnaryOperator 0x12c123190 <line:25:5, col:29> '<dependent type>' contains-errors postfix '++' cannot overflow
    |         |   | `-CXXDependentScopeMemberExpr 0x12c123148 <col:5, col:20> '<dependent type>' contains-errors lvalue .rx_errors
    |         |   |   `-CXXDependentScopeMemberExpr 0x12c123100 <col:5, col:14> '<dependent type>' contains-errors lvalue ->stats
    |         |   |     `-RecoveryExpr 0x12c1230d8 <col:5, col:9> '<dependent type>' contains-errors lvalue
    |         |   |       `-DeclRefExpr 0x12c1230a0 <col:5> 'struct mkiss *' lvalue ParmVar 0x12c80e248 'ax' 'struct mkiss *'
    |         |   |-CallExpr 0x12c123240 <line:26:5, col:32> '<dependent type>' contains-errors
    |         |   | |-DeclRefExpr 0x12c1231a8 <col:5> 'int ()' Function 0x12d808c20 'spin_unlock_bh' 'int ()'
    |         |   | `-UnaryOperator 0x12c123228 <col:20, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow
    |         |   |   `-RecoveryExpr 0x12c123200 <col:21, col:25> '<dependent type>' contains-errors lvalue
    |         |   |     `-DeclRefExpr 0x12c1231c8 <col:21> 'struct mkiss *' lvalue ParmVar 0x12c80e248 'ax' 'struct mkiss *'
    |         |   `-ReturnStmt 0x12c123268 <line:27:5>
    |         |-IfStmt 0x12c1234d8 <line:29:4, line:34:4>
    |         | |-RecoveryExpr 0x12c123380 <line:29:8, col:44> '_Bool' contains-errors
    |         | `-CompoundStmt 0x12c1234c8 <col:53, line:34:4>
    |         |-CompoundAssignOperator 0x12c123578 <line:35:4, col:18> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |         | |-RecoveryExpr 0x12c123530 <col:4, col:8> '<dependent type>' contains-errors lvalue
    |         | | `-DeclRefExpr 0x12c1234f8 <col:4> 'struct mkiss *' lvalue ParmVar 0x12c80e248 'ax' 'struct mkiss *'
    |         | `-IntegerLiteral 0x12c123558 <col:18> 'int' 2
    |         `-CompoundAssignOperator 0x12c123670 <line:38:4, col:19> '<dependent type>' contains-errors '&=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |           |-UnaryOperator 0x12c123620 <col:4, col:9> '<dependent type>' contains-errors prefix '*' cannot overflow
    |           | `-ImplicitCastExpr 0x12c123608 <col:5, col:9> '<dependent type>' contains-errors <LValueToRValue>
    |           |   `-RecoveryExpr 0x12c1235e0 <col:5, col:9> '<dependent type>' contains-errors lvalue
    |           |     `-DeclRefExpr 0x12c1235a8 <col:5> 'struct mkiss *' lvalue ParmVar 0x12c80e248 'ax' 'struct mkiss *'
    |           `-UnaryOperator 0x12c123658 <col:18, col:19> 'int' prefix '~' cannot overflow
    |             `-IntegerLiteral 0x12c123638 <col:19> 'int' 32
    |-BinaryOperator 0x12c1237d8 <line:42:2, col:14> 'int' contains-errors '='
    | |-DeclRefExpr 0x12c123758 <col:2> 'int' lvalue Var 0x12d808468 'count' 'int'
    | `-RecoveryExpr 0x12c1237b0 <col:10, col:14> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x12c123778 <col:10> 'struct mkiss *' lvalue ParmVar 0x12c80e248 'ax' 'struct mkiss *'
    |-IfStmt 0x12c123d10 <line:44:2, line:50:2>
    | |-RecoveryExpr 0x12c123a20 <line:44:6, col:38> '_Bool' contains-errors
    | `-CompoundStmt 0x12c123ce8 <col:44, line:50:2>
    |   |-UnaryOperator 0x12c123c00 <line:47:3, col:28> '<dependent type>' contains-errors postfix '++' cannot overflow
    |   | `-CXXDependentScopeMemberExpr 0x12c123bb0 <col:3, col:18> '<dependent type>' contains-errors lvalue .rx_dropped
    |   |   `-CXXDependentScopeMemberExpr 0x12c123b68 <col:3, col:12> '<dependent type>' contains-errors lvalue ->stats
    |   |     `-RecoveryExpr 0x12c123b40 <col:3, col:7> '<dependent type>' contains-errors lvalue
    |   |       `-DeclRefExpr 0x12c123b08 <col:3> 'struct mkiss *' lvalue ParmVar 0x12c80e248 'ax' 'struct mkiss *'
    |   |-CallExpr 0x12c123cb0 <line:48:3, col:30> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x12c123c18 <col:3> 'int ()' Function 0x12d808c20 'spin_unlock_bh' 'int ()'
    |   | `-UnaryOperator 0x12c123c98 <col:18, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   `-RecoveryExpr 0x12c123c70 <col:19, col:23> '<dependent type>' contains-errors lvalue
    |   |     `-DeclRefExpr 0x12c123c38 <col:19> 'struct mkiss *' lvalue ParmVar 0x12c80e248 'ax' 'struct mkiss *'
    |   `-ReturnStmt 0x12c123cd8 <line:49:3>
    |-CallExpr 0x12c123ed0 <line:52:2, col:36> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12c123e10 <col:2> 'int ()' Function 0x12c123d58 'skb_put_data' 'int ()'
    | |-DeclRefExpr 0x12c123e30 <col:15> 'struct sk_buff *' lvalue Var 0x12d8083b8 'skb' 'struct sk_buff *'
    | |-RecoveryExpr 0x12c123e88 <col:20, col:24> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x12c123e50 <col:20> 'struct mkiss *' lvalue ParmVar 0x12c80e248 'ax' 'struct mkiss *'
    | `-DeclRefExpr 0x12c123eb0 <col:31> 'int' lvalue Var 0x12d808468 'count' 'int'
    |-BinaryOperator 0x12c124118 <line:53:2, col:46> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x12c123f40 <col:2, col:7> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x12c123f08 <col:2> 'struct sk_buff *' lvalue Var 0x12d8083b8 'skb' 'struct sk_buff *'
    | `-CallExpr 0x12c1240e8 <col:18, col:46> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12c124048 <col:18> 'int ()' Function 0x12c123f90 'ax25_type_trans' 'int ()'
    |   |-DeclRefExpr 0x12c124068 <col:34> 'struct sk_buff *' lvalue Var 0x12d8083b8 'skb' 'struct sk_buff *'
    |   `-RecoveryExpr 0x12c1240c0 <col:39, col:43> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x12c124088 <col:39> 'struct mkiss *' lvalue ParmVar 0x12c80e248 'ax' 'struct mkiss *'
    |-CallExpr 0x12c124270 <line:54:2, col:14> 'int'
    | |-ImplicitCastExpr 0x12c124258 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x12c124218 <col:2> 'int ()' Function 0x12c124160 'netif_rx' 'int ()'
    | `-ImplicitCastExpr 0x12c124298 <col:11> 'struct sk_buff *' <LValueToRValue>
    |   `-DeclRefExpr 0x12c124238 <col:11> 'struct sk_buff *' lvalue Var 0x12d8083b8 'skb' 'struct sk_buff *'
    |-UnaryOperator 0x12c1243a0 <line:55:2, col:27> '<dependent type>' contains-errors postfix '++' cannot overflow
    | `-CXXDependentScopeMemberExpr 0x12c124358 <col:2, col:17> '<dependent type>' contains-errors lvalue .rx_packets
    |   `-CXXDependentScopeMemberExpr 0x12c124310 <col:2, col:11> '<dependent type>' contains-errors lvalue ->stats
    |     `-RecoveryExpr 0x12c1242e8 <col:2, col:6> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x12c1242b0 <col:2> 'struct mkiss *' lvalue ParmVar 0x12c80e248 'ax' 'struct mkiss *'
    |-CompoundAssignOperator 0x12c1244c8 <line:56:2, col:29> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | |-CXXDependentScopeMemberExpr 0x12c124460 <col:2, col:17> '<dependent type>' contains-errors lvalue .rx_bytes
    | | `-CXXDependentScopeMemberExpr 0x12c124418 <col:2, col:11> '<dependent type>' contains-errors lvalue ->stats
    | |   `-RecoveryExpr 0x12c1243f0 <col:2, col:6> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x12c1243b8 <col:2> 'struct mkiss *' lvalue ParmVar 0x12c80e248 'ax' 'struct mkiss *'
    | `-DeclRefExpr 0x12c1244a8 <col:29> 'int' lvalue Var 0x12d808468 'count' 'int'
    `-CallExpr 0x12c124590 <line:57:2, col:29> '<dependent type>' contains-errors
      |-DeclRefExpr 0x12c1244f8 <col:2> 'int ()' Function 0x12d808c20 'spin_unlock_bh' 'int ()'
      `-UnaryOperator 0x12c124578 <col:17, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow
        `-RecoveryExpr 0x12c124550 <col:18, col:22> '<dependent type>' contains-errors lvalue
          `-DeclRefExpr 0x12c124518 <col:18> 'struct mkiss *' lvalue ParmVar 0x12c80e248 'ax' 'struct mkiss *'
