TranslationUnitDecl 0x12c81da08 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12c81e8b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12c81dfd0 '__int128'
|-TypedefDecl 0x12c81e928 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12c81dff0 'unsigned __int128'
|-TypedefDecl 0x12c8eee30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12c8eec00 'struct __NSConstantString_tag'
|   `-Record 0x12c81e980 '__NSConstantString_tag'
|-TypedefDecl 0x12c8eee98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12c81e190 '__SVInt8_t'
|-TypedefDecl 0x12c8eef00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12c81e1b0 '__SVInt16_t'
|-TypedefDecl 0x12c8eef68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12c81e1d0 '__SVInt32_t'
|-TypedefDecl 0x12c8eefd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12c81e1f0 '__SVInt64_t'
|-TypedefDecl 0x12c8ef038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12c81e210 '__SVUint8_t'
|-TypedefDecl 0x12c8ef0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12c81e230 '__SVUint16_t'
|-TypedefDecl 0x12c8ef108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12c81e250 '__SVUint32_t'
|-TypedefDecl 0x12c8ef170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12c81e270 '__SVUint64_t'
|-TypedefDecl 0x12c8ef1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12c81e290 '__SVFloat16_t'
|-TypedefDecl 0x12c8ef240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12c81e2b0 '__SVFloat32_t'
|-TypedefDecl 0x12c8ef2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12c81e2d0 '__SVFloat64_t'
|-TypedefDecl 0x12c8ef310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12c81e2f0 '__SVBfloat16_t'
|-TypedefDecl 0x12c8ef378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12c81e310 '__clang_svint8x2_t'
|-TypedefDecl 0x12c8ef3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12c81e330 '__clang_svint16x2_t'
|-TypedefDecl 0x12c8ef448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12c81e350 '__clang_svint32x2_t'
|-TypedefDecl 0x12c8ef4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12c81e370 '__clang_svint64x2_t'
|-TypedefDecl 0x12c8ef518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12c81e390 '__clang_svuint8x2_t'
|-TypedefDecl 0x12c8ef580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12c81e3b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12c8ef5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12c81e3d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12c8ef650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12c81e3f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12c8ef6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12c81e410 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12c8ef720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12c81e430 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12c8ef788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12c81e450 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12c8ef7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12c81e470 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12c8ef858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12c81e490 '__clang_svint8x3_t'
|-TypedefDecl 0x12c8ef8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12c81e4b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12c8ef928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12c81e4d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12c8ef990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12c81e4f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12c8ef9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12c81e510 '__clang_svuint8x3_t'
|-TypedefDecl 0x12c8efa60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12c81e530 '__clang_svuint16x3_t'
|-TypedefDecl 0x12c8efac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12c81e550 '__clang_svuint32x3_t'
|-TypedefDecl 0x12c8efb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12c81e570 '__clang_svuint64x3_t'
|-TypedefDecl 0x12c8efb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12c81e590 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12c8f0400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12c81e5b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12c8f0468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12c81e5d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12c8f04d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12c81e5f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12c8f0538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12c81e610 '__clang_svint8x4_t'
|-TypedefDecl 0x12c8f05a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12c81e630 '__clang_svint16x4_t'
|-TypedefDecl 0x12c8f0608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12c81e650 '__clang_svint32x4_t'
|-TypedefDecl 0x12c8f0670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12c81e670 '__clang_svint64x4_t'
|-TypedefDecl 0x12c8f06d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12c81e690 '__clang_svuint8x4_t'
|-TypedefDecl 0x12c8f0740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12c81e6b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12c8f07a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12c81e6d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12c8f0810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12c81e6f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12c8f0878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12c81e710 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12c8f08e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12c81e730 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12c8f0948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12c81e750 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12c8f09b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12c81e770 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12c8f0a18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12c81e790 '__SVBool_t'
|-TypedefDecl 0x12c8f0a80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12c81e7b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12c8f0ae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12c81e7d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12c8f0b50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12c81e7f0 '__SVCount_t'
|-TypedefDecl 0x12c8f0bf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12c8f0bb0 'char *'
|   `-BuiltinType 0x12c81dab0 'char'
|-TypedefDecl 0x12c8f0c68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12c8f0bb0 'char *'
|   `-BuiltinType 0x12c81dab0 'char'
|-FunctionDecl 0x12c8f0f28 <dataset_diviso_filec/func20272_vuln.c:1:1, line:58:1> line:1:5 main 'int (int, char **)'
| |-ParmVarDecl 0x12c8f0cd8 <col:10, col:14> col:14 used argc 'int'
| |-ParmVarDecl 0x12c8f0e00 <col:20, col:31> col:26 used argv 'char **'
| `-CompoundStmt 0x12c90c228 <line:2:1, line:58:1>
|   |-DeclStmt 0x12c8f10a8 <line:3:5, col:20>
|   | `-VarDecl 0x12c8f1040 <col:5, col:9> col:9 used exit_status 'int'
|   |-DeclStmt 0x12c8f11f8 <line:4:5, col:24>
|   | |-VarDecl 0x12c8f10d8 <col:5, col:16> col:9 used code 'int' cinit
|   | | `-IntegerLiteral 0x12c8f1140 <col:16> 'int' 1
|   | `-VarDecl 0x12c8f1178 <col:5, col:19> col:19 used code1 'int'
|   |-DeclStmt 0x12c8f1290 <line:5:5, col:19>
|   | `-VarDecl 0x12c8f1228 <col:5, col:11> col:11 used instance 'void *'
|   |-DeclStmt 0x12c8f1328 <line:6:5, col:14>
|   | `-VarDecl 0x12c8f12c0 <col:5, col:9> col:9 used nargc 'int'
|   |-DeclStmt 0x12c8f13c0 <line:7:5, col:17>
|   | `-VarDecl 0x12c8f1358 <col:5, col:12> col:12 used nargv 'char **'
|   |-DeclStmt 0x12c9096e8 <line:8:5, col:21>
|   | `-VarDecl 0x12c909680 <col:5, col:20> col:10 used dformat 'char[64]'
|   |-DeclStmt 0x12c909780 <line:9:5, col:18>
|   | `-VarDecl 0x12c909718 <col:5, col:9> col:9 used exit_code 'int'
|   |-CallExpr 0x12c909928 <line:13:5, col:20> 'int'
|   | `-ImplicitCastExpr 0x12c909910 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x12c9098c0 <col:5> 'int ()' Function 0x12c909808 'gtk_set_locale' 'int ()'
|   |-CallExpr 0x12c90a580 <line:17:5, line:19:49> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x12c90a228 <line:17:5> 'int (char *, const char *, ...)' Function 0x12c90a010 'sprintf' 'int (char *, const char *, ...)'
|   | |-DeclRefExpr 0x12c90a248 <col:13> 'char[64]' lvalue Var 0x12c909680 'dformat' 'char[64]'
|   | |-StringLiteral 0x12c90a2b0 <col:22> 'char[4]' lvalue "STR"
|   | `-BinaryOperator 0x12c90a530 <line:18:13, line:19:33> '<dependent type>' contains-errors '|'
|   |   |-BinaryOperator 0x12c90a4f0 <line:18:13, line:19:13> '<dependent type>' contains-errors '|'
|   |   | |-BinaryOperator 0x12c90a4b0 <line:18:13, col:55> '<dependent type>' contains-errors '|'
|   |   | | |-BinaryOperator 0x12c90a470 <col:13, col:34> '<dependent type>' contains-errors '|'
|   |   | | | |-RecoveryExpr 0x12c90a430 <col:13> '<dependent type>' contains-errors lvalue
|   |   | | | `-RecoveryExpr 0x12c90a450 <col:34> '<dependent type>' contains-errors lvalue
|   |   | | `-RecoveryExpr 0x12c90a490 <col:55> '<dependent type>' contains-errors lvalue
|   |   | `-RecoveryExpr 0x12c90a4d0 <line:19:13> '<dependent type>' contains-errors lvalue
|   |   `-RecoveryExpr 0x12c90a510 <col:33> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x12d040e58 <line:20:5, col:20> 'int' '='
|   | |-DeclRefExpr 0x12c90a5b8 <col:5> 'int' lvalue Var 0x12c8f12c0 'nargc' 'int'
|   | `-BinaryOperator 0x12d040e38 <col:13, col:20> 'int' '+'
|   |   |-ImplicitCastExpr 0x12d040e20 <col:13> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x12c90a5d8 <col:13> 'int' lvalue ParmVar 0x12c8f0cd8 'argc' 'int'
|   |   `-IntegerLiteral 0x12d040e00 <col:20> 'int' 1
|   |-BinaryOperator 0x12d041250 <line:21:5, col:57> 'char **' '='
|   | |-DeclRefExpr 0x12d040e78 <col:5> 'char **' lvalue Var 0x12c8f1358 'nargv' 'char **'
|   | `-CStyleCastExpr 0x12d041228 <col:13, col:57> 'char **' <BitCast>
|   |   `-CallExpr 0x12d0411e8 <col:22, col:57> 'void *'
|   |     |-ImplicitCastExpr 0x12d0411d0 <col:22> 'void *(*)(unsigned long)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x12d041078 <col:22> 'void *(unsigned long)' Function 0x12d040ed8 'malloc' 'void *(unsigned long)'
|   |     `-BinaryOperator 0x12d041180 <col:29, col:56> 'unsigned long' '*'
|   |       |-ImplicitCastExpr 0x12d041168 <col:29, col:39> 'unsigned long' <IntegralCast>
|   |       | `-ParenExpr 0x12d041110 <col:29, col:39> 'int'
|   |       |   `-BinaryOperator 0x12d0410f0 <col:30, col:38> 'int' '+'
|   |       |     |-ImplicitCastExpr 0x12d0410d8 <col:30> 'int' <LValueToRValue>
|   |       |     | `-DeclRefExpr 0x12d041098 <col:30> 'int' lvalue Var 0x12c8f12c0 'nargc' 'int'
|   |       |     `-IntegerLiteral 0x12d0410b8 <col:38> 'int' 1
|   |       `-UnaryExprOrTypeTraitExpr 0x12d041148 <col:43, col:56> 'unsigned long' sizeof 'char *'
|   |-BinaryOperator 0x12d041378 <line:22:5, col:22> 'char *' '='
|   | |-ArraySubscriptExpr 0x12d0412c8 <col:5, col:12> 'char *' lvalue
|   | | |-ImplicitCastExpr 0x12d0412b0 <col:5> 'char **' <LValueToRValue>
|   | | | `-DeclRefExpr 0x12d041270 <col:5> 'char **' lvalue Var 0x12c8f1358 'nargv' 'char **'
|   | | `-IntegerLiteral 0x12d041290 <col:11> 'int' 0
|   | `-ImplicitCastExpr 0x12d041360 <col:16, col:22> 'char *' <LValueToRValue>
|   |   `-ArraySubscriptExpr 0x12d041340 <col:16, col:22> 'char *' lvalue
|   |     |-ImplicitCastExpr 0x12d041328 <col:16> 'char **' <LValueToRValue>
|   |     | `-DeclRefExpr 0x12d0412e8 <col:16> 'char **' lvalue ParmVar 0x12c8f0e00 'argv' 'char **'
|   |     `-IntegerLiteral 0x12d041308 <col:21> 'int' 0
|   |-BinaryOperator 0x12d041448 <line:23:5, col:16> 'char *' '='
|   | |-ArraySubscriptExpr 0x12d0413f0 <col:5, col:12> 'char *' lvalue
|   | | |-ImplicitCastExpr 0x12d0413d8 <col:5> 'char **' <LValueToRValue>
|   | | | `-DeclRefExpr 0x12d041398 <col:5> 'char **' lvalue Var 0x12c8f1358 'nargv' 'char **'
|   | | `-IntegerLiteral 0x12d0413b8 <col:11> 'int' 1
|   | `-ImplicitCastExpr 0x12d041430 <col:16> 'char *' <ArrayToPointerDecay>
|   |   `-DeclRefExpr 0x12d041410 <col:16> 'char[64]' lvalue Var 0x12c909680 'dformat' 'char[64]'
|   |-CallExpr 0x12d041968 <line:24:5, col:54> 'void *'
|   | |-ImplicitCastExpr 0x12d041950 <col:5> 'void *(*)(void *, const void *, unsigned long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x12d041738 <col:5> 'void *(void *, const void *, unsigned long)' Function 0x12d0414e8 'memcpy' 'void *(void *, const void *, unsigned long)'
|   | |-ImplicitCastExpr 0x12d0419a0 <col:12, col:20> 'void *' <BitCast>
|   | | `-UnaryOperator 0x12d0417d0 <col:12, col:20> 'char **' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x12d0417b0 <col:13, col:20> 'char *' lvalue
|   | |     |-ImplicitCastExpr 0x12d041798 <col:13> 'char **' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x12d041758 <col:13> 'char **' lvalue Var 0x12c8f1358 'nargv' 'char **'
|   | |     `-IntegerLiteral 0x12d041778 <col:19> 'int' 2
|   | |-ImplicitCastExpr 0x12d0419b8 <col:23, col:30> 'const void *' <BitCast>
|   | | `-UnaryOperator 0x12d041860 <col:23, col:30> 'char **' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x12d041840 <col:24, col:30> 'char *' lvalue
|   | |     |-ImplicitCastExpr 0x12d041828 <col:24> 'char **' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x12d0417e8 <col:24> 'char **' lvalue ParmVar 0x12c8f0e00 'argv' 'char **'
|   | |     `-IntegerLiteral 0x12d041808 <col:29> 'int' 1
|   | `-BinaryOperator 0x12d041900 <col:33, col:53> 'unsigned long' '*'
|   |   |-ImplicitCastExpr 0x12d0418e8 <col:33> 'unsigned long' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x12d0418d0 <col:33> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x12d041878 <col:33> 'int' lvalue ParmVar 0x12c8f0cd8 'argc' 'int'
|   |   `-UnaryExprOrTypeTraitExpr 0x12d0418b0 <col:40, col:53> 'unsigned long' sizeof 'char *'
|   |-IfStmt 0x12c90bf80 <line:27:5, line:42:5>
|   | |-RecoveryExpr 0x12d041be0 <line:27:9, col:57> '_Bool' contains-errors
|   | `-CompoundStmt 0x12c90bf40 <col:60, line:42:5>
|   |   |-CallExpr 0x12c90b420 <line:28:9, col:74> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x12d041ce0 <col:9> 'int ()' Function 0x12d041c28 'gsapi_set_stdio' 'int ()'
|   |   | |-DeclRefExpr 0x12d041d00 <col:25> 'void *' lvalue Var 0x12c8f1228 'instance' 'void *'
|   |   | |-RecoveryExpr 0x12d041da8 <col:35> '<dependent type>' contains-errors lvalue
|   |   | |-RecoveryExpr 0x12d041dc8 <col:48> '<dependent type>' contains-errors lvalue
|   |   | `-RecoveryExpr 0x12c90b400 <col:62> '<dependent type>' contains-errors lvalue
|   |   |-BinaryOperator 0x12c90b7d0 <line:31:9, col:59> 'int' '='
|   |   | |-DeclRefExpr 0x12c90b5b8 <col:9> 'int' lvalue Var 0x12c8f10d8 'code' 'int'
|   |   | `-CallExpr 0x12c90b750 <col:16, col:59> 'int'
|   |   |   |-ImplicitCastExpr 0x12c90b738 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x12c90b6b8 <col:16> 'int ()' Function 0x12c90b600 'gsapi_init_with_args' 'int ()'
|   |   |   |-ImplicitCastExpr 0x12c90b788 <col:37> 'void *' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x12c90b6d8 <col:37> 'void *' lvalue Var 0x12c8f1228 'instance' 'void *'
|   |   |   |-ImplicitCastExpr 0x12c90b7a0 <col:47> 'int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x12c90b6f8 <col:47> 'int' lvalue Var 0x12c8f12c0 'nargc' 'int'
|   |   |   `-ImplicitCastExpr 0x12c90b7b8 <col:54> 'char **' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x12c90b718 <col:54> 'char **' lvalue Var 0x12c8f1358 'nargv' 'char **'
|   |   |-BinaryOperator 0x12c90bb98 <line:35:9, col:36> 'int' '='
|   |   | |-DeclRefExpr 0x12c90ba00 <col:9> 'int' lvalue Var 0x12c8f1178 'code1' 'int'
|   |   | `-CallExpr 0x12c90bb58 <col:17, col:36> 'int'
|   |   |   |-ImplicitCastExpr 0x12c90bb40 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x12c90bb00 <col:17> 'int ()' Function 0x12c90ba48 'gsapi_exit' 'int ()'
|   |   |   `-ImplicitCastExpr 0x12c90bb80 <col:28> 'void *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x12c90bb20 <col:28> 'void *' lvalue Var 0x12c8f1228 'instance' 'void *'
|   |   |-IfStmt 0x12c90bce8 <line:36:9, line:37:20>
|   |   | |-RecoveryExpr 0x12c90bc50 <line:36:13, col:34> '_Bool' contains-errors
|   |   | `-BinaryOperator 0x12c90bcc8 <line:37:13, col:20> 'int' '='
|   |   |   |-DeclRefExpr 0x12c90bc70 <col:13> 'int' lvalue Var 0x12c8f10d8 'code' 'int'
|   |   |   `-ImplicitCastExpr 0x12c90bcb0 <col:20> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x12c90bc90 <col:20> 'int' lvalue Var 0x12c8f1178 'code1' 'int'
|   |   |-IfStmt 0x12c90bda8 <line:38:9, line:39:20>
|   |   | |-RecoveryExpr 0x12c90bd28 <line:38:13, col:21> '_Bool' contains-errors
|   |   | `-BinaryOperator 0x12c90bd88 <line:39:13, col:20> 'int' '='
|   |   |   |-DeclRefExpr 0x12c90bd48 <col:13> 'int' lvalue Var 0x12c8f10d8 'code' 'int'
|   |   |   `-IntegerLiteral 0x12c90bd68 <col:20> 'int' 0
|   |   `-CallExpr 0x12c90bf00 <line:41:9, col:39> 'int'
|   |     |-ImplicitCastExpr 0x12c90bee8 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x12c90bea8 <col:9> 'int ()' Function 0x12c90bdf0 'gsapi_delete_instance' 'int ()'
|   |     `-ImplicitCastExpr 0x12c90bf28 <col:31> 'void *' <LValueToRValue>
|   |       `-DeclRefExpr 0x12c90bec8 <col:31> 'void *' lvalue Var 0x12c8f1228 'instance' 'void *'
|   |-BinaryOperator 0x12c90bfe0 <line:44:5, col:19> 'int' '='
|   | |-DeclRefExpr 0x12c90bfa0 <col:5> 'int' lvalue Var 0x12c8f1040 'exit_status' 'int'
|   | `-IntegerLiteral 0x12c90bfc0 <col:19> 'int' 0
|   |-SwitchStmt 0x12c90c038 <line:45:5, line:55:5>
|   | |-ImplicitCastExpr 0x12c90c020 <line:45:13> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x12c90c000 <col:13> 'int' lvalue Var 0x12c8f10d8 'code' 'int'
|   | `-CompoundStmt 0x12c90c1b0 <col:19, line:55:5>
|   |   |-CaseStmt 0x12c90c098 <line:46:9, line:49:13>
|   |   | |-ConstantExpr 0x12c90c080 <line:46:14> 'int'
|   |   | | `-IntegerLiteral 0x12c90c060 <col:14> 'int' 0
|   |   | `-BreakStmt 0x12c90c0c0 <line:49:13>
|   |   |-BinaryOperator 0x12c90c108 <line:51:13, col:27> 'int' '='
|   |   | |-DeclRefExpr 0x12c90c0c8 <col:13> 'int' lvalue Var 0x12c8f1040 'exit_status' 'int'
|   |   | `-IntegerLiteral 0x12c90c0e8 <col:27> 'int' 1
|   |   |-BreakStmt 0x12c90c128 <line:52:13>
|   |   `-DefaultStmt 0x12c90c190 <line:53:9, line:54:27>
|   |     `-BinaryOperator 0x12c90c170 <col:13, col:27> 'int' '='
|   |       |-DeclRefExpr 0x12c90c130 <col:13> 'int' lvalue Var 0x12c8f1040 'exit_status' 'int'
|   |       `-IntegerLiteral 0x12c90c150 <col:27> 'int' 255
|   `-ReturnStmt 0x12c90c218 <line:57:5, col:12>
|     `-ImplicitCastExpr 0x12c90c200 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x12c90c1e0 <col:12> 'int' lvalue Var 0x12c8f1040 'exit_status' 'int'
|-FunctionDecl 0x12c90a010 <line:17:5> col:5 implicit used sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x12c90a110 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x12c90a178 <<invalid sloc>> <invalid sloc> 'const char *'
| |-BuiltinAttr 0x12c90a0b8 <<invalid sloc>> Implicit 906
| `-FormatAttr 0x12c90a1f0 <col:5> Implicit printf 2 3
|-FunctionDecl 0x12d040ed8 <line:21:22> col:22 implicit used malloc 'void *(unsigned long)' extern
| |-ParmVarDecl 0x12d040fd8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-BuiltinAttr 0x12d040f80 <<invalid sloc>> Implicit 871
| `-AllocSizeAttr 0x12d041048 <col:22> Implicit 1
`-FunctionDecl 0x12d0414e8 <line:24:5> col:5 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x12d0415e8 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x12d041650 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x12d0416b8 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x12d041590 <<invalid sloc>> Implicit 882
