TranslationUnitDecl 0x137855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1378564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x137855bd0 '__int128'
|-TypedefDecl 0x137856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x137855bf0 'unsigned __int128'
|-TypedefDecl 0x14000be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14000bc00 'struct __NSConstantString_tag'
|   `-Record 0x137856580 '__NSConstantString_tag'
|-TypedefDecl 0x14000be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x137855d90 '__SVInt8_t'
|-TypedefDecl 0x14000bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x137855db0 '__SVInt16_t'
|-TypedefDecl 0x14000bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x137855dd0 '__SVInt32_t'
|-TypedefDecl 0x14000bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x137855df0 '__SVInt64_t'
|-TypedefDecl 0x14000c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x137855e10 '__SVUint8_t'
|-TypedefDecl 0x14000c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x137855e30 '__SVUint16_t'
|-TypedefDecl 0x14000c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x137855e50 '__SVUint32_t'
|-TypedefDecl 0x14000c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x137855e70 '__SVUint64_t'
|-TypedefDecl 0x14000c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x137855e90 '__SVFloat16_t'
|-TypedefDecl 0x14000c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x137855eb0 '__SVFloat32_t'
|-TypedefDecl 0x14000c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x137855ed0 '__SVFloat64_t'
|-TypedefDecl 0x14000c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x137855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14000c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x137855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14000c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x137855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14000c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x137855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14000c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x137855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14000c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x137855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14000c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x137855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14000c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x137855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14000c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x137855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14000c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x137856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14000c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x137856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14000c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x137856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14000c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x137856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14000c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x137856090 '__clang_svint8x3_t'
|-TypedefDecl 0x14000c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1378560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14000c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1378560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14000c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1378560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14000c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x137856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14000ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x137856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14000cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x137856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14000cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x137856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14000cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x137856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14000d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1378561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14000d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1378561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14000d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1378561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14000d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x137856210 '__clang_svint8x4_t'
|-TypedefDecl 0x14000d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x137856230 '__clang_svint16x4_t'
|-TypedefDecl 0x14000d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x137856250 '__clang_svint32x4_t'
|-TypedefDecl 0x14000d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x137856270 '__clang_svint64x4_t'
|-TypedefDecl 0x14000d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x137856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14000d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1378562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14000d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1378562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14000d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1378562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14000d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x137856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14000d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x137856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14000d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x137856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14000d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x137856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14000da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x137856390 '__SVBool_t'
|-TypedefDecl 0x14000da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1378563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14000dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1378563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14000db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1378563f0 '__SVCount_t'
|-TypedefDecl 0x14000dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14000dbb0 'char *'
|   `-BuiltinType 0x1378556b0 'char'
|-TypedefDecl 0x14000dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14000dbb0 'char *'
|   `-BuiltinType 0x1378556b0 'char'
|-FunctionDecl 0x140027438 <dataset_diviso_filec/func3587_vuln.c:1:1, line:46:1> line:1:5 invalid dd_chown 'int (struct dump_dir *, int)'
| |-ParmVarDecl 0x14000e248 <col:14, col:31> col:31 used dd 'struct dump_dir *'
| |-ParmVarDecl 0x14000e2e0 <col:35, col:41> col:41 referenced invalid new_uid 'int'
| `-CompoundStmt 0x140030340 <line:2:1, line:46:1>
|   |-IfStmt 0x1400277e8 <line:3:5, line:4:32>
|   | |-UnaryOperator 0x140027568 <line:3:9, col:14> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x140027550 <col:10, col:14> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x140027528 <col:10, col:14> '<dependent type>' contains-errors lvalue
|   | |     `-DeclRefExpr 0x1400274f0 <col:10> 'struct dump_dir *' lvalue ParmVar 0x14000e248 'dd' 'struct dump_dir *'
|   | `-CallExpr 0x1400277a8 <line:4:9, col:32> 'int'
|   |   |-ImplicitCastExpr 0x140027790 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1400276e0 <col:9> 'int ()' Function 0x140027628 'error_msg_and_die' 'int ()'
|   |   `-ImplicitCastExpr 0x1400277d0 <col:27> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x140027740 <col:27> 'char[4]' lvalue "STR"
|   |-DeclStmt 0x140027988 <line:6:5, col:24>
|   | |-RecordDecl 0x140027808 <col:5, col:12> col:12 struct stat
|   | `-VarDecl 0x140027908 <col:5, col:17> col:17 invalid statbuf 'struct stat'
|   |-IfStmt 0x140027f90 <line:7:5, line:11:5>
|   | |-UnaryOperator 0x140027d78 <line:7:9, col:74> 'int' contains-errors prefix '!' cannot overflow
|   | | `-ParenExpr 0x140027d58 <col:10, col:74> 'int' contains-errors
|   | |   `-BinaryOperator 0x140027d38 <col:11, col:73> 'int' contains-errors '&&'
|   | |     |-BinaryOperator 0x140027b88 <col:11, col:45> 'int' contains-errors '=='
|   | |     | |-CallExpr 0x140027b38 <col:11, col:40> '<dependent type>' contains-errors
|   | |     | | |-DeclRefExpr 0x140027a80 <col:11> 'int ()' Function 0x1400279c8 'stat' 'int ()'
|   | |     | | |-RecoveryExpr 0x140027ad8 <col:16, col:20> '<dependent type>' contains-errors lvalue
|   | |     | | | `-DeclRefExpr 0x140027aa0 <col:16> 'struct dump_dir *' lvalue ParmVar 0x14000e248 'dd' 'struct dump_dir *'
|   | |     | | `-UnaryOperator 0x140027b20 <col:32, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | |     | |   `-RecoveryExpr 0x140027b00 <col:33> '<dependent type>' contains-errors lvalue
|   | |     | `-IntegerLiteral 0x140027b68 <col:45> 'int' 0
|   | |     `-CallExpr 0x140027d10 <col:50, col:73> '<dependent type>' contains-errors
|   | |       |-DeclRefExpr 0x140027c88 <col:50> 'int ()' Function 0x140027bd0 'S_ISDIR' 'int ()'
|   | |       `-CXXDependentScopeMemberExpr 0x140027cc8 <col:58, col:66> '<dependent type>' contains-errors lvalue .st_mode
|   | |         `-RecoveryExpr 0x140027ca8 <col:58> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x140027f70 <line:8:5, line:11:5>
|   |   |-CallExpr 0x140027f10 <line:9:9, col:41> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x140027e70 <col:9> 'int ()' Function 0x140027db8 'perror_msg' 'int ()'
|   |   | |-StringLiteral 0x140027e90 <col:20> 'char[4]' lvalue "STR"
|   |   | `-RecoveryExpr 0x140027ee8 <col:27, col:31> '<dependent type>' contains-errors lvalue
|   |   |   `-DeclRefExpr 0x140027eb0 <col:27> 'struct dump_dir *' lvalue ParmVar 0x14000e248 'dd' 'struct dump_dir *'
|   |   `-ReturnStmt 0x140027f60 <line:10:9, col:16>
|   |     `-IntegerLiteral 0x140027f40 <col:16> 'int' 1
|   |-DeclStmt 0x1400282e0 <line:13:5, col:42>
|   | |-RecordDecl 0x140027fb0 <col:5, col:12> col:12 struct passwd
|   | `-VarDecl 0x140028118 <col:5, col:41> col:20 used pw 'struct passwd *' cinit
|   |   `-CallExpr 0x1400282a0 <col:25, col:41> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x140028260 <col:25> 'int ()' Function 0x1400281a8 'getpwuid' 'int ()'
|   |     `-RecoveryExpr 0x140028280 <col:34> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x14002d208 <line:14:5, line:18:5>
|   | |-UnaryOperator 0x140028330 <line:14:9, col:10> 'int' contains-errors prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x140028318 <col:10> 'struct passwd *' contains-errors <LValueToRValue>
|   | |   `-DeclRefExpr 0x1400282f8 <col:10> 'struct passwd *' contains-errors lvalue Var 0x140028118 'pw' 'struct passwd *'
|   | `-CompoundStmt 0x14002d1e8 <line:15:5, line:18:5>
|   |   |-CallExpr 0x14002d170 <line:16:9, col:39> 'int' contains-errors
|   |   | |-ImplicitCastExpr 0x14002d158 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x14002d0b8 <col:9> 'int ()' Function 0x14002d000 'error_msg' 'int ()'
|   |   | |-ImplicitCastExpr 0x14002d1a0 <col:19> 'char *' <ArrayToPointerDecay>
|   |   | | `-StringLiteral 0x14002d0d8 <col:19> 'char[4]' lvalue "STR"
|   |   | `-CStyleCastExpr 0x14002d130 <col:26, col:32> 'long' contains-errors <Dependent>
|   |   |   `-RecoveryExpr 0x14002d0f8 <col:32> '<dependent type>' contains-errors lvalue
|   |   `-ReturnStmt 0x14002d1d8 <line:17:9, col:16>
|   |     `-IntegerLiteral 0x14002d1b8 <col:16> 'int' 1
|   |-DeclStmt 0x14002d508 <line:28:5, col:67>
|   | `-VarDecl 0x14002d240 <col:5, col:66> col:9 used chown_res 'int' cinit
|   |   `-CallExpr 0x14002d4d0 <col:21, col:66> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x14002d388 <col:21> 'int ()' Function 0x14002d2d0 'lchown' 'int ()'
|   |     |-RecoveryExpr 0x14002d3e0 <col:28, col:32> '<dependent type>' contains-errors lvalue
|   |     | `-DeclRefExpr 0x14002d3a8 <col:28> 'struct dump_dir *' lvalue ParmVar 0x14000e248 'dd' 'struct dump_dir *'
|   |     |-RecoveryExpr 0x14002d490 <col:44> '<dependent type>' contains-errors lvalue
|   |     `-RecoveryExpr 0x14002d4b0 <col:56> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x1400302c8 <line:29:5, line:43:5> has_else
|   | |-ImplicitCastExpr 0x14002d540 <line:29:9> 'int' contains-errors <LValueToRValue>
|   | | `-DeclRefExpr 0x14002d520 <col:9> 'int' contains-errors lvalue Var 0x14002d240 'chown_res' 'int'
|   | |-CallExpr 0x14002d5f8 <line:30:9, col:41> '<dependent type>' contains-errors
|   | | |-DeclRefExpr 0x14002d558 <col:9> 'int ()' Function 0x140027db8 'perror_msg' 'int ()'
|   | | |-StringLiteral 0x14002d578 <col:20> 'char[4]' lvalue "STR"
|   | | `-RecoveryExpr 0x14002d5d0 <col:27, col:31> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x14002d598 <col:27> 'struct dump_dir *' lvalue ParmVar 0x14000e248 'dd' 'struct dump_dir *'
|   | `-CompoundStmt 0x1400302a0 <line:32:5, line:43:5>
|   |   |-CallExpr 0x14002d760 <line:33:9, col:29> 'int'
|   |   | |-ImplicitCastExpr 0x14002d748 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x14002d708 <col:9> 'int ()' Function 0x14002d650 'dd_init_next_file' 'int ()'
|   |   | `-ImplicitCastExpr 0x14002d788 <col:27> 'struct dump_dir *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x14002d728 <col:27> 'struct dump_dir *' lvalue ParmVar 0x14000e248 'dd' 'struct dump_dir *'
|   |   |-DeclStmt 0x14002d820 <line:34:9, col:24>
|   |   | `-VarDecl 0x14002d7b8 <col:9, col:15> col:15 used full_name 'char *'
|   |   `-WhileStmt 0x140030280 <line:35:9, line:42:9>
|   |     |-RecoveryExpr 0x14002da38 <line:35:16, col:72> '_Bool' contains-errors
|   |     `-CompoundStmt 0x140030258 <line:36:9, line:42:9>
|   |       |-CallExpr 0x14002dbb0 <line:37:13, col:39> 'int'
|   |       | |-ImplicitCastExpr 0x14002db98 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x14002db38 <col:13> 'int ()' Function 0x14002da80 'log_debug' 'int ()'
|   |       | |-ImplicitCastExpr 0x14002dbe0 <col:23> 'char *' <ArrayToPointerDecay>
|   |       | | `-StringLiteral 0x14002db58 <col:23> 'char[4]' lvalue "STR"
|   |       | `-ImplicitCastExpr 0x14002dbf8 <col:30> 'char *' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x14002db78 <col:30> 'char *' lvalue Var 0x14002d7b8 'full_name' 'char *'
|   |       |-IfStmt 0x14002dd80 <line:39:13, line:40:44>
|   |       | |-ImplicitCastExpr 0x14002dc90 <line:39:17> 'int' contains-errors <LValueToRValue>
|   |       | | `-DeclRefExpr 0x14002dc70 <col:17> 'int' contains-errors lvalue Var 0x14002d240 'chown_res' 'int'
|   |       | `-CallExpr 0x14002dd20 <line:40:17, col:44> 'int'
|   |       |   |-ImplicitCastExpr 0x14002dd08 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |       |   | `-DeclRefExpr 0x14002dca8 <col:17> 'int ()' Function 0x140027db8 'perror_msg' 'int ()'
|   |       |   |-ImplicitCastExpr 0x14002dd50 <col:28> 'char *' <ArrayToPointerDecay>
|   |       |   | `-StringLiteral 0x14002dcc8 <col:28> 'char[4]' lvalue "STR"
|   |       |   `-ImplicitCastExpr 0x14002dd68 <col:35> 'char *' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x14002dce8 <col:35> 'char *' lvalue Var 0x14002d7b8 'full_name' 'char *'
|   |       `-CallExpr 0x140030200 <line:41:13, col:27> 'void'
|   |         |-ImplicitCastExpr 0x14002dfd0 <col:13> 'void (*)(void *)' <FunctionToPointerDecay>
|   |         | `-DeclRefExpr 0x14002df48 <col:13> 'void (void *)' Function 0x14002ddd8 'free' 'void (void *)'
|   |         `-ImplicitCastExpr 0x140030240 <col:18> 'void *' <BitCast>
|   |           `-ImplicitCastExpr 0x140030228 <col:18> 'char *' <LValueToRValue>
|   |             `-DeclRefExpr 0x14002df68 <col:18> 'char *' lvalue Var 0x14002d7b8 'full_name' 'char *'
|   `-ReturnStmt 0x140030330 <line:45:5, col:12>
|     `-ImplicitCastExpr 0x140030318 <col:12> 'int' contains-errors <LValueToRValue>
|       `-DeclRefExpr 0x1400302f8 <col:12> 'int' contains-errors lvalue Var 0x14002d240 'chown_res' 'int'
`-FunctionDecl 0x14002ddd8 <line:41:13> col:13 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x14002ded8 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x14002de80 <<invalid sloc>> Implicit 873
