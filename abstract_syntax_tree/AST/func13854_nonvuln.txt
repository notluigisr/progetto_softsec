TranslationUnitDecl 0x12d044208 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12d0450b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12d0447d0 '__int128'
|-TypedefDecl 0x12d045128 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12d0447f0 'unsigned __int128'
|-TypedefDecl 0x12e00be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12e00bc00 'struct __NSConstantString_tag'
|   `-Record 0x12d045180 '__NSConstantString_tag'
|-TypedefDecl 0x12e00be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12d044990 '__SVInt8_t'
|-TypedefDecl 0x12e00bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12d0449b0 '__SVInt16_t'
|-TypedefDecl 0x12e00bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12d0449d0 '__SVInt32_t'
|-TypedefDecl 0x12e00bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12d0449f0 '__SVInt64_t'
|-TypedefDecl 0x12e00c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12d044a10 '__SVUint8_t'
|-TypedefDecl 0x12e00c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12d044a30 '__SVUint16_t'
|-TypedefDecl 0x12e00c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12d044a50 '__SVUint32_t'
|-TypedefDecl 0x12e00c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12d044a70 '__SVUint64_t'
|-TypedefDecl 0x12e00c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12d044a90 '__SVFloat16_t'
|-TypedefDecl 0x12e00c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12d044ab0 '__SVFloat32_t'
|-TypedefDecl 0x12e00c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12d044ad0 '__SVFloat64_t'
|-TypedefDecl 0x12e00c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12d044af0 '__SVBfloat16_t'
|-TypedefDecl 0x12e00c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12d044b10 '__clang_svint8x2_t'
|-TypedefDecl 0x12e00c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12d044b30 '__clang_svint16x2_t'
|-TypedefDecl 0x12e00c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12d044b50 '__clang_svint32x2_t'
|-TypedefDecl 0x12e00c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12d044b70 '__clang_svint64x2_t'
|-TypedefDecl 0x12e00c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12d044b90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12e00c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12d044bb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12e00c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12d044bd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12e00c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12d044bf0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12e00c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12d044c10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12e00c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12d044c30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12e00c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12d044c50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12e00c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12d044c70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12e00c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12d044c90 '__clang_svint8x3_t'
|-TypedefDecl 0x12e00c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12d044cb0 '__clang_svint16x3_t'
|-TypedefDecl 0x12e00c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12d044cd0 '__clang_svint32x3_t'
|-TypedefDecl 0x12e00c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12d044cf0 '__clang_svint64x3_t'
|-TypedefDecl 0x12e00c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12d044d10 '__clang_svuint8x3_t'
|-TypedefDecl 0x12e00ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12d044d30 '__clang_svuint16x3_t'
|-TypedefDecl 0x12e00cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12d044d50 '__clang_svuint32x3_t'
|-TypedefDecl 0x12e00cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12d044d70 '__clang_svuint64x3_t'
|-TypedefDecl 0x12e00cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12d044d90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12e00d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12d044db0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12e00d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12d044dd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12e00d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12d044df0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12e00d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12d044e10 '__clang_svint8x4_t'
|-TypedefDecl 0x12e00d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12d044e30 '__clang_svint16x4_t'
|-TypedefDecl 0x12e00d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12d044e50 '__clang_svint32x4_t'
|-TypedefDecl 0x12e00d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12d044e70 '__clang_svint64x4_t'
|-TypedefDecl 0x12e00d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12d044e90 '__clang_svuint8x4_t'
|-TypedefDecl 0x12e00d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12d044eb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12e00d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12d044ed0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12e00d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12d044ef0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12e00d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12d044f10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12e00d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12d044f30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12e00d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12d044f50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12e00d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12d044f70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12e00da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12d044f90 '__SVBool_t'
|-TypedefDecl 0x12e00da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12d044fb0 '__clang_svboolx2_t'
|-TypedefDecl 0x12e00dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12d044fd0 '__clang_svboolx4_t'
|-TypedefDecl 0x12e00db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12d044ff0 '__SVCount_t'
|-TypedefDecl 0x12e00dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12e00dbb0 'char *'
|   `-BuiltinType 0x12d0442b0 'char'
|-TypedefDecl 0x12e00dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12e00dbb0 'char *'
|   `-BuiltinType 0x12d0442b0 'char'
`-FunctionDecl 0x12e00ddf8 <dataset_diviso_filec/func13854_nonvuln.c:1:1, line:51:1> line:1:12 invalid file_modmul 'int (int *)' static
  |-ParmVarDecl 0x12e00dd28 <col:24, col:32> col:32 invalid s 'int *'
  `-CompoundStmt 0x12d1155b0 <line:2:1, line:51:1>
    |-DeclStmt 0x12e00e178 <line:4:5, col:15>
    | `-VarDecl 0x12e00e0f0 <col:5, col:14> col:9 used st 'int' cinit
    |   `-IntegerLiteral 0x12e00e158 <col:14> 'int' 0
    |-IfStmt 0x12d112ad8 <line:6:5, line:11:14>
    | |-BinaryOperator 0x12d112a50 <line:6:9, line:10:40> 'int' contains-errors '||'
    | | |-BinaryOperator 0x12d112978 <line:6:9, line:9:51> 'int' contains-errors '||'
    | | | |-BinaryOperator 0x12d1128d8 <line:6:9, line:8:45> 'int' contains-errors '||'
    | | | | |-BinaryOperator 0x12d112838 <line:6:9, line:7:45> 'int' contains-errors '||'
    | | | | | |-UnaryOperator 0x12d1127a0 <line:6:9, col:38> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | | | | | `-CallExpr 0x12d112778 <col:10, col:38> '<dependent type>' contains-errors
    | | | | | |   |-DeclRefExpr 0x12e00e2f0 <col:10> 'int ()' Function 0x12e00e238 'TEST_ptr' 'int ()'
    | | | | | |   `-BinaryOperator 0x12d112758 <col:19, col:37> '<dependent type>' contains-errors '='
    | | | | | |     |-RecoveryExpr 0x12d112738 <col:19> '<dependent type>' contains-errors lvalue
    | | | | | |     `-CallExpr 0x12d1120b0 <col:23, col:37> '<dependent type>' contains-errors
    | | | | | |       |-DeclRefExpr 0x12d112010 <col:23> 'int ()' Function 0x12e00e350 'getBN' 'int ()'
    | | | | | |       |-RecoveryExpr 0x12d112030 <col:29> '<dependent type>' contains-errors lvalue
    | | | | | |       `-StringLiteral 0x12d112090 <col:32> 'char[4]' lvalue "STR"
    | | | | | `-UnaryOperator 0x12d112820 <line:7:16, col:45> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | | | |   `-CallExpr 0x12d1127f8 <col:17, col:45> '<dependent type>' contains-errors
    | | | | |     |-DeclRefExpr 0x12d112140 <col:17> 'int ()' Function 0x12e00e238 'TEST_ptr' 'int ()'
    | | | | |     `-BinaryOperator 0x12d1127d8 <col:26, col:44> '<dependent type>' contains-errors '='
    | | | | |       |-RecoveryExpr 0x12d1127b8 <col:26> '<dependent type>' contains-errors lvalue
    | | | | |       `-CallExpr 0x12d1121d8 <col:30, col:44> '<dependent type>' contains-errors
    | | | | |         |-DeclRefExpr 0x12d112178 <col:30> 'int ()' Function 0x12e00e350 'getBN' 'int ()'
    | | | | |         |-RecoveryExpr 0x12d112198 <col:36> '<dependent type>' contains-errors lvalue
    | | | | |         `-StringLiteral 0x12d1121b8 <col:39> 'char[4]' lvalue "STR"
    | | | | `-UnaryOperator 0x12d1128c0 <line:8:16, col:45> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | | |   `-CallExpr 0x12d112898 <col:17, col:45> '<dependent type>' contains-errors
    | | | |     |-DeclRefExpr 0x12d112288 <col:17> 'int ()' Function 0x12e00e238 'TEST_ptr' 'int ()'
    | | | |     `-BinaryOperator 0x12d112878 <col:26, col:44> '<dependent type>' contains-errors '='
    | | | |       |-RecoveryExpr 0x12d112858 <col:26> '<dependent type>' contains-errors lvalue
    | | | |       `-CallExpr 0x12d112320 <col:30, col:44> '<dependent type>' contains-errors
    | | | |         |-DeclRefExpr 0x12d1122c0 <col:30> 'int ()' Function 0x12e00e350 'getBN' 'int ()'
    | | | |         |-RecoveryExpr 0x12d1122e0 <col:36> '<dependent type>' contains-errors lvalue
    | | | |         `-StringLiteral 0x12d112300 <col:39> 'char[4]' lvalue "STR"
    | | | `-UnaryOperator 0x12d112960 <line:9:16, col:51> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | |   `-CallExpr 0x12d112938 <col:17, col:51> '<dependent type>' contains-errors
    | | |     |-DeclRefExpr 0x12d1123d0 <col:17> 'int ()' Function 0x12e00e238 'TEST_ptr' 'int ()'
    | | |     `-BinaryOperator 0x12d112918 <col:26, col:50> '<dependent type>' contains-errors '='
    | | |       |-RecoveryExpr 0x12d1128f8 <col:26> '<dependent type>' contains-errors lvalue
    | | |       `-CallExpr 0x12d112468 <col:36, col:50> '<dependent type>' contains-errors
    | | |         |-DeclRefExpr 0x12d112408 <col:36> 'int ()' Function 0x12e00e350 'getBN' 'int ()'
    | | |         |-RecoveryExpr 0x12d112428 <col:42> '<dependent type>' contains-errors lvalue
    | | |         `-StringLiteral 0x12d112448 <col:45> 'char[4]' lvalue "STR"
    | | `-UnaryOperator 0x12d112a38 <line:10:16, col:40> '<dependent type>' contains-errors prefix '!' cannot overflow
    | |   `-CallExpr 0x12d112a10 <col:17, col:40> '<dependent type>' contains-errors
    | |     |-DeclRefExpr 0x12d112518 <col:17> 'int ()' Function 0x12e00e238 'TEST_ptr' 'int ()'
    | |     `-BinaryOperator 0x12d1129f0 <col:26, col:39> '<dependent type>' contains-errors '='
    | |       |-RecoveryExpr 0x12d112998 <col:26> '<dependent type>' contains-errors lvalue
    | |       `-CallExpr 0x12d1129d0 <col:32, col:39> 'int'
    | |         `-ImplicitCastExpr 0x12d1129b8 <col:32> 'int (*)()' <FunctionToPointerDecay>
    | |           `-DeclRefExpr 0x12d112630 <col:32> 'int ()' Function 0x12d112578 'BN_new' 'int ()'
    | `-GotoStmt 0x12d112ac0 <line:11:9, col:14> 'err' 0x12d112a70
    |-IfStmt 0x12d112e50 <line:13:5, line:15:14>
    | |-RecoveryExpr 0x12d112e18 <line:13:9, line:14:44> '_Bool' contains-errors
    | `-GotoStmt 0x12d112e38 <line:15:9, col:14> 'err' 0x12d112a70
    |-IfStmt 0x12d115420 <line:17:5, line:41:5>
    | |-RecoveryExpr 0x12d112f70 <line:17:9, col:20> '_Bool' contains-errors
    | `-CompoundStmt 0x12d115400 <col:23, line:41:5>
    |   |-IfStmt 0x12d115100 <line:23:9, line:35:18> has_else
    |   | |-RecoveryExpr 0x12d115020 <line:23:13, line:32:48> '_Bool' contains-errors
    |   | |-BinaryOperator 0x12d115080 <line:33:13, col:18> 'int' '='
    |   | | |-DeclRefExpr 0x12d115040 <col:13> 'int' lvalue Var 0x12e00e0f0 'st' 'int'
    |   | | `-IntegerLiteral 0x12d115060 <col:18> 'int' 0
    |   | `-BinaryOperator 0x12d1150e0 <line:35:13, col:18> 'int' '='
    |   |   |-DeclRefExpr 0x12d1150a0 <col:13> 'int' lvalue Var 0x12e00e0f0 'st' 'int'
    |   |   `-IntegerLiteral 0x12d1150c0 <col:18> 'int' 1
    |   `-IfStmt 0x12d1153e0 <line:39:9, line:40:18>
    |     |-BinaryOperator 0x12d1153a8 <line:39:13, col:19> 'int' '=='
    |     | |-ImplicitCastExpr 0x12d115390 <col:13> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x12d115350 <col:13> 'int' lvalue Var 0x12e00e0f0 'st' 'int'
    |     | `-IntegerLiteral 0x12d115370 <col:19> 'int' 0
    |     `-GotoStmt 0x12d1153c8 <line:40:13, col:18> 'err' 0x12d112a70
    |-BinaryOperator 0x12d115480 <line:43:5, col:10> 'int' '='
    | |-DeclRefExpr 0x12d115440 <col:5> 'int' lvalue Var 0x12e00e0f0 'st' 'int'
    | `-IntegerLiteral 0x12d115460 <col:10> 'int' 1
    |-LabelStmt 0x12d1154c8 <line:44:2, col:5> 'err'
    | `-NullStmt 0x12d1154c0 <col:5>
    `-ReturnStmt 0x12d1155a0 <line:50:5, col:12>
      `-ImplicitCastExpr 0x12d115588 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x12d115568 <col:12> 'int' lvalue Var 0x12e00e0f0 'st' 'int'
