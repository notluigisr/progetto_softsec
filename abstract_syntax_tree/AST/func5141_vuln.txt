TranslationUnitDecl 0x12c855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12c8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12c855bd0 '__int128'
|-TypedefDecl 0x12c856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12c855bf0 'unsigned __int128'
|-TypedefDecl 0x12c926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12c926000 'struct __NSConstantString_tag'
|   `-Record 0x12c856580 '__NSConstantString_tag'
|-TypedefDecl 0x12c926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12c855d90 '__SVInt8_t'
|-TypedefDecl 0x12c926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12c855db0 '__SVInt16_t'
|-TypedefDecl 0x12c926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12c855dd0 '__SVInt32_t'
|-TypedefDecl 0x12c9263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12c855df0 '__SVInt64_t'
|-TypedefDecl 0x12c926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12c855e10 '__SVUint8_t'
|-TypedefDecl 0x12c9264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12c855e30 '__SVUint16_t'
|-TypedefDecl 0x12c926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12c855e50 '__SVUint32_t'
|-TypedefDecl 0x12c926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12c855e70 '__SVUint64_t'
|-TypedefDecl 0x12c9265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12c855e90 '__SVFloat16_t'
|-TypedefDecl 0x12c926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12c855eb0 '__SVFloat32_t'
|-TypedefDecl 0x12c9266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12c855ed0 '__SVFloat64_t'
|-TypedefDecl 0x12c926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12c855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12c926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12c855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12c9267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12c855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12c926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12c855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12c9268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12c855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12c926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12c855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12c926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12c855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12c9269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12c855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12c926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12c855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12c926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12c856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12c926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12c856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12c926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12c856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12c926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12c856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12c926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12c856090 '__clang_svint8x3_t'
|-TypedefDecl 0x12c926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12c8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12c926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12c8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12c926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12c8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12c926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12c856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12c926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12c856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12c926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12c856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12c926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12c856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12c926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12c856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12c927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12c8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12c927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12c8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12c9278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12c8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12c927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12c856210 '__clang_svint8x4_t'
|-TypedefDecl 0x12c9279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12c856230 '__clang_svint16x4_t'
|-TypedefDecl 0x12c927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12c856250 '__clang_svint32x4_t'
|-TypedefDecl 0x12c927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12c856270 '__clang_svint64x4_t'
|-TypedefDecl 0x12c927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12c856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12c927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12c8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12c927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12c8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12c927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12c8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12c927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12c856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12c927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12c856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12c927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12c856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12c927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12c856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12c927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12c856390 '__SVBool_t'
|-TypedefDecl 0x12c927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12c8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12c927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12c8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12c927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12c8563f0 '__SVCount_t'
|-TypedefDecl 0x12c927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12c927fb0 'char *'
|   `-BuiltinType 0x12c8556b0 'char'
|-TypedefDecl 0x12c928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12c927fb0 'char *'
|   `-BuiltinType 0x12c8556b0 'char'
|-FunctionDecl 0x12c941b28 <dataset_diviso_filec/func5141_vuln.c:1:1, line:48:1> line:1:12 invalid php_zip_add_file 'int (struct zip *, const char *, int, char *, int, long, long)' static
| |-ParmVarDecl 0x12c928648 <col:29, col:41> col:41 used za 'struct zip *'
| |-ParmVarDecl 0x12c9286c8 <col:45, col:57> col:57 used filename 'const char *'
| |-ParmVarDecl 0x12c928760 <col:67, col:74> col:74 invalid filename_len 'int'
| |-ParmVarDecl 0x12c941800 <line:2:2, col:8> col:8 used entry_name 'char *'
| |-ParmVarDecl 0x12c941880 <col:20, col:27> col:27 invalid entry_name_len 'int'
| |-ParmVarDecl 0x12c941900 <col:43, col:48> col:48 used offset_start 'long'
| |-ParmVarDecl 0x12c941980 <col:62, col:67> col:67 used offset_len 'long'
| `-CompoundStmt 0x12e008b90 <line:3:1, line:48:1>
|   |-DeclStmt 0x12c941df8 <line:4:2, col:23>
|   | |-RecordDecl 0x12c941c08 <col:2, col:9> col:9 struct zip_source
|   | `-VarDecl 0x12c941d78 <col:2, col:21> col:21 used zs 'struct zip_source *'
|   |-DeclStmt 0x12c941e90 <line:5:2, col:13>
|   | `-VarDecl 0x12c941e28 <col:2, col:6> col:6 used cur_idx 'int'
|   |-DeclStmt 0x12c941f38 <line:6:2, col:32>
|   | `-VarDecl 0x12c941ed0 <col:2, col:7> col:7 invalid resolved_path 'char'
|   |-IfStmt 0x12c9421d8 <line:10:2, line:12:2>
|   | |-CallExpr 0x12c942138 <line:10:6, col:40> 'int'
|   | | |-ImplicitCastExpr 0x12c942120 <col:6> 'int (*)()' <FunctionToPointerDecay>
|   | | | `-DeclRefExpr 0x12c9420b0 <col:6> 'int ()' Function 0x12c941ff8 'ZIP_OPENBASEDIR_CHECKPATH' 'int ()'
|   | | `-ImplicitCastExpr 0x12c942160 <col:32> 'const char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x12c9420d0 <col:32> 'const char *' lvalue ParmVar 0x12c9286c8 'filename' 'const char *'
|   | `-CompoundStmt 0x12c9421c0 <col:43, line:12:2>
|   |   `-ReturnStmt 0x12c9421b0 <line:11:3, col:11>
|   |     `-UnaryOperator 0x12c942198 <col:10, col:11> 'int' prefix '-'
|   |       `-IntegerLiteral 0x12c942178 <col:11> 'int' 1
|   |-IfStmt 0x12c9423b8 <line:14:2, line:16:2>
|   | |-RecoveryExpr 0x12c942338 <line:14:6, col:56> '_Bool' contains-errors
|   | `-CompoundStmt 0x12c9423a0 <col:59, line:16:2>
|   |   `-ReturnStmt 0x12c942390 <line:15:3, col:11>
|   |     `-UnaryOperator 0x12c942378 <col:10, col:11> 'int' prefix '-'
|   |       `-IntegerLiteral 0x12c942358 <col:11> 'int' 1
|   |-IfStmt 0x12c9435f0 <line:19:2, line:21:2>
|   | |-UnaryOperator 0x12c943578 <line:19:6, col:25> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-CallExpr 0x12c943550 <col:7, col:25> '<dependent type>' contains-errors
|   | |   |-DeclRefExpr 0x12c9434b8 <col:7> 'int ()' Function 0x12c943400 'Z_BVAL' 'int ()'
|   | |   `-RecoveryExpr 0x12c943530 <col:14> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x12c9435d8 <col:28, line:21:2>
|   |   `-ReturnStmt 0x12c9435c8 <line:20:3, col:11>
|   |     `-UnaryOperator 0x12c9435b0 <col:10, col:11> 'int' prefix '-'
|   |       `-IntegerLiteral 0x12c943590 <col:11> 'int' 1
|   |-BinaryOperator 0x12c9437f0 <line:23:2, col:66> 'struct zip_source *' contains-errors '='
|   | |-DeclRefExpr 0x12c943610 <col:2> 'struct zip_source *' lvalue Var 0x12c941d78 'zs' 'struct zip_source *'
|   | `-CallExpr 0x12c9437b0 <col:7, col:66> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x12c943710 <col:7> 'int ()' Function 0x12c943658 'zip_source_file' 'int ()'
|   |   |-DeclRefExpr 0x12c943730 <col:23> 'struct zip *' lvalue ParmVar 0x12c928648 'za' 'struct zip *'
|   |   |-RecoveryExpr 0x12c943750 <col:27> '<dependent type>' contains-errors lvalue
|   |   |-DeclRefExpr 0x12c943770 <col:42> 'long' lvalue ParmVar 0x12c941900 'offset_start' 'long'
|   |   `-DeclRefExpr 0x12c943790 <col:56> 'long' lvalue ParmVar 0x12c941980 'offset_len' 'long'
|   |-IfStmt 0x12c9438c0 <line:24:2, line:26:2>
|   | |-UnaryOperator 0x12c943848 <line:24:6, col:7> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x12c943830 <col:7> 'struct zip_source *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x12c943810 <col:7> 'struct zip_source *' lvalue Var 0x12c941d78 'zs' 'struct zip_source *'
|   | `-CompoundStmt 0x12c9438a8 <col:11, line:26:2>
|   |   `-ReturnStmt 0x12c943898 <line:25:3, col:11>
|   |     `-UnaryOperator 0x12c943880 <col:10, col:11> 'int' prefix '-'
|   |       `-IntegerLiteral 0x12c943860 <col:11> 'int' 1
|   |-BinaryOperator 0x12c943b20 <line:28:2, col:59> 'int' '='
|   | |-DeclRefExpr 0x12c9438e0 <col:2> 'int' lvalue Var 0x12c941e28 'cur_idx' 'int'
|   | `-CallExpr 0x12c943ad0 <col:12, col:59> 'int'
|   |   |-ImplicitCastExpr 0x12c943ab8 <col:12> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x12c9439e0 <col:12> 'int ()' Function 0x12c943928 'zip_name_locate' 'int ()'
|   |   |-ImplicitCastExpr 0x12c943b08 <col:28> 'struct zip *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x12c943a00 <col:28> 'struct zip *' lvalue ParmVar 0x12c928648 'za' 'struct zip *'
|   |   |-CStyleCastExpr 0x12c943a70 <col:32, col:46> 'const char *' <NoOp>
|   |   | `-ImplicitCastExpr 0x12c943a58 <col:46> 'char *' <LValueToRValue> part_of_explicit_cast
|   |   |   `-DeclRefExpr 0x12c943a20 <col:46> 'char *' lvalue ParmVar 0x12c941800 'entry_name' 'char *'
|   |   `-IntegerLiteral 0x12c943a98 <col:58> 'int' 0
|   |-IfStmt 0x12e008838 <line:30:2, line:41:2> has_else
|   | |-BinaryOperator 0x12c943b98 <line:30:6, col:14> 'int' '<'
|   | | |-ImplicitCastExpr 0x12c943b80 <col:6> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x12c943b40 <col:6> 'int' lvalue Var 0x12c941e28 'cur_idx' 'int'
|   | | `-IntegerLiteral 0x12c943b60 <col:14> 'int' 0
|   | |-CompoundStmt 0x12c943fd8 <col:17, line:36:2>
|   | | |-IfStmt 0x12c943e18 <line:32:3, line:34:3>
|   | | | |-CXXDependentScopeMemberExpr 0x12c943c18 <line:32:7, col:17> '<dependent type>' contains-errors lvalue .str
|   | | | | `-RecoveryExpr 0x12c943bf0 <col:7, col:11> '<dependent type>' contains-errors lvalue
|   | | | |   `-DeclRefExpr 0x12c943bb8 <col:7> 'struct zip *' lvalue ParmVar 0x12c928648 'za' 'struct zip *'
|   | | | `-CompoundStmt 0x12c943e00 <col:22, line:34:3>
|   | | |   `-CallExpr 0x12c943dd8 <line:33:4, col:30> '<dependent type>' contains-errors
|   | | |     |-DeclRefExpr 0x12c943d40 <col:4> 'int ()' Function 0x12c943c88 '_zip_error_fini' 'int ()'
|   | | |     `-UnaryOperator 0x12c943dc0 <col:20, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | |       `-RecoveryExpr 0x12c943d98 <col:21, col:25> '<dependent type>' contains-errors lvalue
|   | | |         `-DeclRefExpr 0x12c943d60 <col:21> 'struct zip *' lvalue ParmVar 0x12c928648 'za' 'struct zip *'
|   | | `-CallExpr 0x12c943fb0 <line:35:3, col:29> '<dependent type>' contains-errors
|   | |   |-DeclRefExpr 0x12c943f18 <col:3> 'int ()' Function 0x12c943e60 '_zip_error_init' 'int ()'
|   | |   `-UnaryOperator 0x12c943f98 <col:19, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | |     `-RecoveryExpr 0x12c943f70 <col:20, col:24> '<dependent type>' contains-errors lvalue
|   | |       `-DeclRefExpr 0x12c943f38 <col:20> 'struct zip *' lvalue ParmVar 0x12c928648 'za' 'struct zip *'
|   | `-CompoundStmt 0x12e008820 <line:36:9, line:41:2>
|   |   `-IfStmt 0x12e008800 <line:37:3, line:40:3>
|   |     |-BinaryOperator 0x12c9441e8 <line:37:7, col:35> 'int' '=='
|   |     | |-CallExpr 0x12c944150 <col:7, col:29> 'int'
|   |     | | |-ImplicitCastExpr 0x12c944138 <col:7> 'int (*)()' <FunctionToPointerDecay>
|   |     | | | `-DeclRefExpr 0x12c9440d8 <col:7> 'int ()' Function 0x12c944020 'zip_delete' 'int ()'
|   |     | | |-ImplicitCastExpr 0x12c944180 <col:18> 'struct zip *' <LValueToRValue>
|   |     | | | `-DeclRefExpr 0x12c9440f8 <col:18> 'struct zip *' lvalue ParmVar 0x12c928648 'za' 'struct zip *'
|   |     | | `-ImplicitCastExpr 0x12c944198 <col:22> 'int' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x12c944118 <col:22> 'int' lvalue Var 0x12c941e28 'cur_idx' 'int'
|   |     | `-UnaryOperator 0x12c9441d0 <col:34, col:35> 'int' prefix '-'
|   |     |   `-IntegerLiteral 0x12c9441b0 <col:35> 'int' 1
|   |     `-CompoundStmt 0x12c9443c8 <col:38, line:40:3>
|   |       |-CallExpr 0x12c944340 <line:38:4, col:22> 'int'
|   |       | |-ImplicitCastExpr 0x12c944328 <col:4> 'int (*)()' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x12c9442e8 <col:4> 'int ()' Function 0x12c944230 'zip_source_free' 'int ()'
|   |       | `-ImplicitCastExpr 0x12c944368 <col:20> 'struct zip_source *' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x12c944308 <col:20> 'struct zip_source *' lvalue Var 0x12c941d78 'zs' 'struct zip_source *'
|   |       `-ReturnStmt 0x12c9443b8 <line:39:4, col:12>
|   |         `-UnaryOperator 0x12c9443a0 <col:11, col:12> 'int' prefix '-'
|   |           `-IntegerLiteral 0x12c944380 <col:12> 'int' 1
|   `-IfStmt 0x12e008b60 <line:43:2, line:47:2> has_else
|     |-BinaryOperator 0x12e008a98 <line:43:6, col:38> 'int' '=='
|     | |-CallExpr 0x12e0089e0 <col:6, col:32> 'int'
|     | | |-ImplicitCastExpr 0x12e0089c8 <col:6> 'int (*)()' <FunctionToPointerDecay>
|     | | | `-DeclRefExpr 0x12e008948 <col:6> 'int ()' Function 0x12e008890 'zip_add' 'int ()'
|     | | |-ImplicitCastExpr 0x12e008a18 <col:14> 'struct zip *' <LValueToRValue>
|     | | | `-DeclRefExpr 0x12e008968 <col:14> 'struct zip *' lvalue ParmVar 0x12c928648 'za' 'struct zip *'
|     | | |-ImplicitCastExpr 0x12e008a30 <col:18> 'char *' <LValueToRValue>
|     | | | `-DeclRefExpr 0x12e008988 <col:18> 'char *' lvalue ParmVar 0x12c941800 'entry_name' 'char *'
|     | | `-ImplicitCastExpr 0x12e008a48 <col:30> 'struct zip_source *' <LValueToRValue>
|     | |   `-DeclRefExpr 0x12e0089a8 <col:30> 'struct zip_source *' lvalue Var 0x12c941d78 'zs' 'struct zip_source *'
|     | `-UnaryOperator 0x12e008a80 <col:37, col:38> 'int' prefix '-'
|     |   `-IntegerLiteral 0x12e008a60 <col:38> 'int' 1
|     |-CompoundStmt 0x12e008b00 <col:41, line:45:2>
|     | `-ReturnStmt 0x12e008af0 <line:44:3, col:11>
|     |   `-UnaryOperator 0x12e008ad8 <col:10, col:11> 'int' prefix '-'
|     |     `-IntegerLiteral 0x12e008ab8 <col:11> 'int' 1
|     `-CompoundStmt 0x12e008b48 <line:45:9, line:47:2>
|       `-ReturnStmt 0x12e008b38 <line:46:3, col:10>
|         `-IntegerLiteral 0x12e008b18 <col:10> 'int' 1
`-FunctionDecl 0x12c942538 <line:18:26> col:26 implicit used strlen 'unsigned long (const char *)' extern
  |-ParmVarDecl 0x12c942638 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x12c9425e0 <<invalid sloc>> Implicit 902
