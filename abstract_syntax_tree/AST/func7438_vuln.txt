TranslationUnitDecl 0x149055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1490564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x149055bd0 '__int128'
|-TypedefDecl 0x149056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x149055bf0 'unsigned __int128'
|-TypedefDecl 0x14980be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14980bc00 'struct __NSConstantString_tag'
|   `-Record 0x149056580 '__NSConstantString_tag'
|-TypedefDecl 0x14980be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x149055d90 '__SVInt8_t'
|-TypedefDecl 0x14980bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x149055db0 '__SVInt16_t'
|-TypedefDecl 0x14980bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x149055dd0 '__SVInt32_t'
|-TypedefDecl 0x14980bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x149055df0 '__SVInt64_t'
|-TypedefDecl 0x14980c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x149055e10 '__SVUint8_t'
|-TypedefDecl 0x14980c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x149055e30 '__SVUint16_t'
|-TypedefDecl 0x14980c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x149055e50 '__SVUint32_t'
|-TypedefDecl 0x14980c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x149055e70 '__SVUint64_t'
|-TypedefDecl 0x14980c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x149055e90 '__SVFloat16_t'
|-TypedefDecl 0x14980c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x149055eb0 '__SVFloat32_t'
|-TypedefDecl 0x14980c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x149055ed0 '__SVFloat64_t'
|-TypedefDecl 0x14980c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x149055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14980c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x149055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14980c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x149055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14980c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x149055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14980c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x149055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14980c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x149055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14980c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x149055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14980c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x149055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14980c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x149055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14980c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x149056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14980c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x149056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14980c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x149056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14980c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x149056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14980c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x149056090 '__clang_svint8x3_t'
|-TypedefDecl 0x14980c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1490560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14980c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1490560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14980c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1490560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14980c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x149056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14980ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x149056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14980cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x149056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14980cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x149056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14980cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x149056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14980d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1490561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14980d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1490561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14980d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1490561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14980d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x149056210 '__clang_svint8x4_t'
|-TypedefDecl 0x14980d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x149056230 '__clang_svint16x4_t'
|-TypedefDecl 0x14980d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x149056250 '__clang_svint32x4_t'
|-TypedefDecl 0x14980d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x149056270 '__clang_svint64x4_t'
|-TypedefDecl 0x14980d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x149056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14980d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1490562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14980d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1490562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14980d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1490562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14980d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x149056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14980d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x149056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14980d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x149056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14980d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x149056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14980da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x149056390 '__SVBool_t'
|-TypedefDecl 0x14980da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1490563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14980dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1490563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14980db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1490563f0 '__SVCount_t'
|-TypedefDecl 0x14980dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14980dbb0 'char *'
|   `-BuiltinType 0x1490556b0 'char'
|-TypedefDecl 0x14980dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14980dbb0 'char *'
|   `-BuiltinType 0x1490556b0 'char'
|-FunctionDecl 0x14980e350 <dataset_diviso_filec/func7438_vuln.c:1:1, line:64:1> line:1:13 totem_get_crypto 'void (struct totem_config *)' static
| |-ParmVarDecl 0x14980e248 <col:30, col:51> col:51 used totem_config 'struct totem_config *'
| `-CompoundStmt 0x14982fa68 <line:2:1, line:64:1>
|   |-DeclStmt 0x14982a8c8 <line:3:2, col:11>
|   | `-VarDecl 0x14982a860 <col:2, col:8> col:8 used str 'char *'
|   |-DeclStmt 0x14982a960 <line:4:2, col:24>
|   | `-VarDecl 0x14982a8f8 <col:2, col:14> col:14 used tmp_cipher 'const char *'
|   |-DeclStmt 0x14982a9f8 <line:5:2, col:22>
|   | `-VarDecl 0x14982a990 <col:2, col:14> col:14 used tmp_hash 'const char *'
|   |-BinaryOperator 0x14982aac0 <line:7:2, col:13> 'const char *' '='
|   | |-DeclRefExpr 0x14982aa10 <col:2> 'const char *' lvalue Var 0x14982a990 'tmp_hash' 'const char *'
|   | `-ImplicitCastExpr 0x14982aaa8 <col:13> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x14982aa90 <col:13> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x14982aa70 <col:13> 'char[4]' lvalue "STR"
|   |-BinaryOperator 0x14982ab50 <line:8:2, col:15> 'const char *' '='
|   | |-DeclRefExpr 0x14982aae0 <col:2> 'const char *' lvalue Var 0x14982a8f8 'tmp_cipher' 'const char *'
|   | `-ImplicitCastExpr 0x14982ab38 <col:15> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x14982ab20 <col:15> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x14982ab00 <col:15> 'char[4]' lvalue "STR"
|   |-IfStmt 0x14982b710 <line:10:2, line:16:2>
|   | |-BinaryOperator 0x14982aef8 <line:10:6, col:39> 'int' contains-errors '=='
|   | | |-CallExpr 0x14982ae90 <col:6, col:34> 'int'
|   | | | |-ImplicitCastExpr 0x14982ae78 <col:6> 'int (*)()' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x14982aca0 <col:6> 'int ()' Function 0x14982abe8 'icmap_get_string' 'int ()'
|   | | | |-ImplicitCastExpr 0x14982aec0 <col:23> 'char *' <ArrayToPointerDecay>
|   | | | | `-StringLiteral 0x14982acc0 <col:23> 'char[4]' lvalue "STR"
|   | | | `-UnaryOperator 0x14982ad30 <col:30, col:31> 'char **' prefix '&' cannot overflow
|   | | |   `-DeclRefExpr 0x14982ace0 <col:31> 'char *' lvalue Var 0x14982a860 'str' 'char *'
|   | | `-RecoveryExpr 0x14982aed8 <col:39> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x14982b6f0 <col:46, line:16:2>
|   |   |-IfStmt 0x14982b428 <line:11:3, line:14:3>
|   |   | |-BinaryOperator 0x14982b2c8 <line:11:7, col:30> 'int' '=='
|   |   | | |-CallExpr 0x14982b218 <col:7, col:25> 'int'
|   |   | | | |-ImplicitCastExpr 0x14982b200 <col:7> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   | | | | `-DeclRefExpr 0x14982b140 <col:7> 'int (const char *, const char *)' Function 0x14982af60 'strcmp' 'int (const char *, const char *)'
|   |   | | | |-ImplicitCastExpr 0x14982b260 <col:15> 'const char *' <NoOp>
|   |   | | | | `-ImplicitCastExpr 0x14982b248 <col:15> 'char *' <LValueToRValue>
|   |   | | | |   `-DeclRefExpr 0x14982b160 <col:15> 'char *' lvalue Var 0x14982a860 'str' 'char *'
|   |   | | | `-ImplicitCastExpr 0x14982b290 <col:20> 'const char *' <NoOp>
|   |   | | |   `-ImplicitCastExpr 0x14982b278 <col:20> 'char *' <ArrayToPointerDecay>
|   |   | | |     `-StringLiteral 0x14982b180 <col:20> 'char[4]' lvalue "STR"
|   |   | | `-IntegerLiteral 0x14982b2a8 <col:30> 'int' 0
|   |   | `-CompoundStmt 0x14982b408 <col:33, line:14:3>
|   |   |   |-BinaryOperator 0x14982b358 <line:12:4, col:15> 'const char *' '='
|   |   |   | |-DeclRefExpr 0x14982b2e8 <col:4> 'const char *' lvalue Var 0x14982a990 'tmp_hash' 'const char *'
|   |   |   | `-ImplicitCastExpr 0x14982b340 <col:15> 'const char *' <NoOp>
|   |   |   |   `-ImplicitCastExpr 0x14982b328 <col:15> 'char *' <ArrayToPointerDecay>
|   |   |   |     `-StringLiteral 0x14982b308 <col:15> 'char[4]' lvalue "STR"
|   |   |   `-BinaryOperator 0x14982b3e8 <line:13:4, col:17> 'const char *' '='
|   |   |     |-DeclRefExpr 0x14982b378 <col:4> 'const char *' lvalue Var 0x14982a8f8 'tmp_cipher' 'const char *'
|   |   |     `-ImplicitCastExpr 0x14982b3d0 <col:17> 'const char *' <NoOp>
|   |   |       `-ImplicitCastExpr 0x14982b3b8 <col:17> 'char *' <ArrayToPointerDecay>
|   |   |         `-StringLiteral 0x14982b398 <col:17> 'char[4]' lvalue "STR"
|   |   `-CallExpr 0x14982b698 <line:15:3, col:11> 'void'
|   |     |-ImplicitCastExpr 0x14982b680 <col:3> 'void (*)(void *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x14982b5f8 <col:3> 'void (void *)' Function 0x14982b488 'free' 'void (void *)'
|   |     `-ImplicitCastExpr 0x14982b6d8 <col:8> 'void *' <BitCast>
|   |       `-ImplicitCastExpr 0x14982b6c0 <col:8> 'char *' <LValueToRValue>
|   |         `-DeclRefExpr 0x14982b618 <col:8> 'char *' lvalue Var 0x14982a860 'str' 'char *'
|   |-IfStmt 0x14982dd98 <line:18:2, line:35:2>
|   | |-BinaryOperator 0x14982d130 <line:18:6, col:39> 'int' contains-errors '=='
|   | | |-CallExpr 0x14982d0c8 <col:6, col:34> 'int'
|   | | | |-ImplicitCastExpr 0x14982d0b0 <col:6> 'int (*)()' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x14982b730 <col:6> 'int ()' Function 0x14982abe8 'icmap_get_string' 'int ()'
|   | | | |-ImplicitCastExpr 0x14982d0f8 <col:23> 'char *' <ArrayToPointerDecay>
|   | | | | `-StringLiteral 0x14982b750 <col:23> 'char[4]' lvalue "STR"
|   | | | `-UnaryOperator 0x14982b790 <col:30, col:31> 'char **' prefix '&' cannot overflow
|   | | |   `-DeclRefExpr 0x14982b770 <col:31> 'char *' lvalue Var 0x14982a860 'str' 'char *'
|   | | `-RecoveryExpr 0x14982d110 <col:39> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x14982dd58 <col:46, line:35:2>
|   |   |-IfStmt 0x14982d370 <line:19:3, line:21:3>
|   |   | |-BinaryOperator 0x14982d2a8 <line:19:7, col:29> 'int' '=='
|   |   | | |-CallExpr 0x14982d1f8 <col:7, col:24> 'int'
|   |   | | | |-ImplicitCastExpr 0x14982d1e0 <col:7> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   | | | | `-DeclRefExpr 0x14982d150 <col:7> 'int (const char *, const char *)' Function 0x14982af60 'strcmp' 'int (const char *, const char *)'
|   |   | | | |-ImplicitCastExpr 0x14982d240 <col:14> 'const char *' <NoOp>
|   |   | | | | `-ImplicitCastExpr 0x14982d228 <col:14> 'char *' <LValueToRValue>
|   |   | | | |   `-DeclRefExpr 0x14982d170 <col:14> 'char *' lvalue Var 0x14982a860 'str' 'char *'
|   |   | | | `-ImplicitCastExpr 0x14982d270 <col:19> 'const char *' <NoOp>
|   |   | | |   `-ImplicitCastExpr 0x14982d258 <col:19> 'char *' <ArrayToPointerDecay>
|   |   | | |     `-StringLiteral 0x14982d190 <col:19> 'char[4]' lvalue "STR"
|   |   | | `-IntegerLiteral 0x14982d288 <col:29> 'int' 0
|   |   | `-CompoundStmt 0x14982d358 <col:32, line:21:3>
|   |   |   `-BinaryOperator 0x14982d338 <line:20:4, col:17> 'const char *' '='
|   |   |     |-DeclRefExpr 0x14982d2c8 <col:4> 'const char *' lvalue Var 0x14982a8f8 'tmp_cipher' 'const char *'
|   |   |     `-ImplicitCastExpr 0x14982d320 <col:17> 'const char *' <NoOp>
|   |   |       `-ImplicitCastExpr 0x14982d308 <col:17> 'char *' <ArrayToPointerDecay>
|   |   |         `-StringLiteral 0x14982d2e8 <col:17> 'char[4]' lvalue "STR"
|   |   |-IfStmt 0x14982d5b0 <line:22:3, line:24:3>
|   |   | |-BinaryOperator 0x14982d4e8 <line:22:7, col:29> 'int' '=='
|   |   | | |-CallExpr 0x14982d438 <col:7, col:24> 'int'
|   |   | | | |-ImplicitCastExpr 0x14982d420 <col:7> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   | | | | `-DeclRefExpr 0x14982d390 <col:7> 'int (const char *, const char *)' Function 0x14982af60 'strcmp' 'int (const char *, const char *)'
|   |   | | | |-ImplicitCastExpr 0x14982d480 <col:14> 'const char *' <NoOp>
|   |   | | | | `-ImplicitCastExpr 0x14982d468 <col:14> 'char *' <LValueToRValue>
|   |   | | | |   `-DeclRefExpr 0x14982d3b0 <col:14> 'char *' lvalue Var 0x14982a860 'str' 'char *'
|   |   | | | `-ImplicitCastExpr 0x14982d4b0 <col:19> 'const char *' <NoOp>
|   |   | | |   `-ImplicitCastExpr 0x14982d498 <col:19> 'char *' <ArrayToPointerDecay>
|   |   | | |     `-StringLiteral 0x14982d3d0 <col:19> 'char[4]' lvalue "STR"
|   |   | | `-IntegerLiteral 0x14982d4c8 <col:29> 'int' 0
|   |   | `-CompoundStmt 0x14982d598 <col:32, line:24:3>
|   |   |   `-BinaryOperator 0x14982d578 <line:23:4, col:17> 'const char *' '='
|   |   |     |-DeclRefExpr 0x14982d508 <col:4> 'const char *' lvalue Var 0x14982a8f8 'tmp_cipher' 'const char *'
|   |   |     `-ImplicitCastExpr 0x14982d560 <col:17> 'const char *' <NoOp>
|   |   |       `-ImplicitCastExpr 0x14982d548 <col:17> 'char *' <ArrayToPointerDecay>
|   |   |         `-StringLiteral 0x14982d528 <col:17> 'char[4]' lvalue "STR"
|   |   |-IfStmt 0x14982d7f0 <line:25:3, line:27:3>
|   |   | |-BinaryOperator 0x14982d728 <line:25:7, col:29> 'int' '=='
|   |   | | |-CallExpr 0x14982d678 <col:7, col:24> 'int'
|   |   | | | |-ImplicitCastExpr 0x14982d660 <col:7> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   | | | | `-DeclRefExpr 0x14982d5d0 <col:7> 'int (const char *, const char *)' Function 0x14982af60 'strcmp' 'int (const char *, const char *)'
|   |   | | | |-ImplicitCastExpr 0x14982d6c0 <col:14> 'const char *' <NoOp>
|   |   | | | | `-ImplicitCastExpr 0x14982d6a8 <col:14> 'char *' <LValueToRValue>
|   |   | | | |   `-DeclRefExpr 0x14982d5f0 <col:14> 'char *' lvalue Var 0x14982a860 'str' 'char *'
|   |   | | | `-ImplicitCastExpr 0x14982d6f0 <col:19> 'const char *' <NoOp>
|   |   | | |   `-ImplicitCastExpr 0x14982d6d8 <col:19> 'char *' <ArrayToPointerDecay>
|   |   | | |     `-StringLiteral 0x14982d610 <col:19> 'char[4]' lvalue "STR"
|   |   | | `-IntegerLiteral 0x14982d708 <col:29> 'int' 0
|   |   | `-CompoundStmt 0x14982d7d8 <col:32, line:27:3>
|   |   |   `-BinaryOperator 0x14982d7b8 <line:26:4, col:17> 'const char *' '='
|   |   |     |-DeclRefExpr 0x14982d748 <col:4> 'const char *' lvalue Var 0x14982a8f8 'tmp_cipher' 'const char *'
|   |   |     `-ImplicitCastExpr 0x14982d7a0 <col:17> 'const char *' <NoOp>
|   |   |       `-ImplicitCastExpr 0x14982d788 <col:17> 'char *' <ArrayToPointerDecay>
|   |   |         `-StringLiteral 0x14982d768 <col:17> 'char[4]' lvalue "STR"
|   |   |-IfStmt 0x14982da30 <line:28:3, line:30:3>
|   |   | |-BinaryOperator 0x14982d968 <line:28:7, col:29> 'int' '=='
|   |   | | |-CallExpr 0x14982d8b8 <col:7, col:24> 'int'
|   |   | | | |-ImplicitCastExpr 0x14982d8a0 <col:7> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   | | | | `-DeclRefExpr 0x14982d810 <col:7> 'int (const char *, const char *)' Function 0x14982af60 'strcmp' 'int (const char *, const char *)'
|   |   | | | |-ImplicitCastExpr 0x14982d900 <col:14> 'const char *' <NoOp>
|   |   | | | | `-ImplicitCastExpr 0x14982d8e8 <col:14> 'char *' <LValueToRValue>
|   |   | | | |   `-DeclRefExpr 0x14982d830 <col:14> 'char *' lvalue Var 0x14982a860 'str' 'char *'
|   |   | | | `-ImplicitCastExpr 0x14982d930 <col:19> 'const char *' <NoOp>
|   |   | | |   `-ImplicitCastExpr 0x14982d918 <col:19> 'char *' <ArrayToPointerDecay>
|   |   | | |     `-StringLiteral 0x14982d850 <col:19> 'char[4]' lvalue "STR"
|   |   | | `-IntegerLiteral 0x14982d948 <col:29> 'int' 0
|   |   | `-CompoundStmt 0x14982da18 <col:32, line:30:3>
|   |   |   `-BinaryOperator 0x14982d9f8 <line:29:4, col:17> 'const char *' '='
|   |   |     |-DeclRefExpr 0x14982d988 <col:4> 'const char *' lvalue Var 0x14982a8f8 'tmp_cipher' 'const char *'
|   |   |     `-ImplicitCastExpr 0x14982d9e0 <col:17> 'const char *' <NoOp>
|   |   |       `-ImplicitCastExpr 0x14982d9c8 <col:17> 'char *' <ArrayToPointerDecay>
|   |   |         `-StringLiteral 0x14982d9a8 <col:17> 'char[4]' lvalue "STR"
|   |   |-IfStmt 0x14982dc70 <line:31:3, line:33:3>
|   |   | |-BinaryOperator 0x14982dba8 <line:31:7, col:29> 'int' '=='
|   |   | | |-CallExpr 0x14982daf8 <col:7, col:24> 'int'
|   |   | | | |-ImplicitCastExpr 0x14982dae0 <col:7> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   | | | | `-DeclRefExpr 0x14982da50 <col:7> 'int (const char *, const char *)' Function 0x14982af60 'strcmp' 'int (const char *, const char *)'
|   |   | | | |-ImplicitCastExpr 0x14982db40 <col:14> 'const char *' <NoOp>
|   |   | | | | `-ImplicitCastExpr 0x14982db28 <col:14> 'char *' <LValueToRValue>
|   |   | | | |   `-DeclRefExpr 0x14982da70 <col:14> 'char *' lvalue Var 0x14982a860 'str' 'char *'
|   |   | | | `-ImplicitCastExpr 0x14982db70 <col:19> 'const char *' <NoOp>
|   |   | | |   `-ImplicitCastExpr 0x14982db58 <col:19> 'char *' <ArrayToPointerDecay>
|   |   | | |     `-StringLiteral 0x14982da90 <col:19> 'char[4]' lvalue "STR"
|   |   | | `-IntegerLiteral 0x14982db88 <col:29> 'int' 0
|   |   | `-CompoundStmt 0x14982dc58 <col:32, line:33:3>
|   |   |   `-BinaryOperator 0x14982dc38 <line:32:4, col:17> 'const char *' '='
|   |   |     |-DeclRefExpr 0x14982dbc8 <col:4> 'const char *' lvalue Var 0x14982a8f8 'tmp_cipher' 'const char *'
|   |   |     `-ImplicitCastExpr 0x14982dc20 <col:17> 'const char *' <NoOp>
|   |   |       `-ImplicitCastExpr 0x14982dc08 <col:17> 'char *' <ArrayToPointerDecay>
|   |   |         `-StringLiteral 0x14982dbe8 <col:17> 'char[4]' lvalue "STR"
|   |   `-CallExpr 0x14982dd00 <line:34:3, col:11> 'void'
|   |     |-ImplicitCastExpr 0x14982dce8 <col:3> 'void (*)(void *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x14982dc90 <col:3> 'void (void *)' Function 0x14982b488 'free' 'void (void *)'
|   |     `-ImplicitCastExpr 0x14982dd40 <col:8> 'void *' <BitCast>
|   |       `-ImplicitCastExpr 0x14982dd28 <col:8> 'char *' <LValueToRValue>
|   |         `-DeclRefExpr 0x14982dcb0 <col:8> 'char *' lvalue Var 0x14982a860 'str' 'char *'
|   |-IfStmt 0x14982f470 <line:37:2, line:57:2>
|   | |-BinaryOperator 0x14982dfa8 <line:37:6, col:39> 'int' contains-errors '=='
|   | | |-CallExpr 0x14982df40 <col:6, col:34> 'int'
|   | | | |-ImplicitCastExpr 0x14982df28 <col:6> 'int (*)()' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x14982ddb8 <col:6> 'int ()' Function 0x14982abe8 'icmap_get_string' 'int ()'
|   | | | |-ImplicitCastExpr 0x14982df70 <col:23> 'char *' <ArrayToPointerDecay>
|   | | | | `-StringLiteral 0x14982ddd8 <col:23> 'char[4]' lvalue "STR"
|   | | | `-UnaryOperator 0x14982de18 <col:30, col:31> 'char **' prefix '&' cannot overflow
|   | | |   `-DeclRefExpr 0x14982ddf8 <col:31> 'char *' lvalue Var 0x14982a860 'str' 'char *'
|   | | `-RecoveryExpr 0x14982df88 <col:39> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x14982f428 <col:46, line:57:2>
|   |   |-IfStmt 0x14982e800 <line:38:3, line:40:3>
|   |   | |-BinaryOperator 0x14982e738 <line:38:7, col:29> 'int' '=='
|   |   | | |-CallExpr 0x14982e688 <col:7, col:24> 'int'
|   |   | | | |-ImplicitCastExpr 0x14982e670 <col:7> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   | | | | `-DeclRefExpr 0x14982dfc8 <col:7> 'int (const char *, const char *)' Function 0x14982af60 'strcmp' 'int (const char *, const char *)'
|   |   | | | |-ImplicitCastExpr 0x14982e6d0 <col:14> 'const char *' <NoOp>
|   |   | | | | `-ImplicitCastExpr 0x14982e6b8 <col:14> 'char *' <LValueToRValue>
|   |   | | | |   `-DeclRefExpr 0x14982e600 <col:14> 'char *' lvalue Var 0x14982a860 'str' 'char *'
|   |   | | | `-ImplicitCastExpr 0x14982e700 <col:19> 'const char *' <NoOp>
|   |   | | |   `-ImplicitCastExpr 0x14982e6e8 <col:19> 'char *' <ArrayToPointerDecay>
|   |   | | |     `-StringLiteral 0x14982e620 <col:19> 'char[4]' lvalue "STR"
|   |   | | `-IntegerLiteral 0x14982e718 <col:29> 'int' 0
|   |   | `-CompoundStmt 0x14982e7e8 <col:32, line:40:3>
|   |   |   `-BinaryOperator 0x14982e7c8 <line:39:4, col:15> 'const char *' '='
|   |   |     |-DeclRefExpr 0x14982e758 <col:4> 'const char *' lvalue Var 0x14982a990 'tmp_hash' 'const char *'
|   |   |     `-ImplicitCastExpr 0x14982e7b0 <col:15> 'const char *' <NoOp>
|   |   |       `-ImplicitCastExpr 0x14982e798 <col:15> 'char *' <ArrayToPointerDecay>
|   |   |         `-StringLiteral 0x14982e778 <col:15> 'char[4]' lvalue "STR"
|   |   |-IfStmt 0x14982ea40 <line:41:3, line:43:3>
|   |   | |-BinaryOperator 0x14982e978 <line:41:7, col:29> 'int' '=='
|   |   | | |-CallExpr 0x14982e8c8 <col:7, col:24> 'int'
|   |   | | | |-ImplicitCastExpr 0x14982e8b0 <col:7> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   | | | | `-DeclRefExpr 0x14982e820 <col:7> 'int (const char *, const char *)' Function 0x14982af60 'strcmp' 'int (const char *, const char *)'
|   |   | | | |-ImplicitCastExpr 0x14982e910 <col:14> 'const char *' <NoOp>
|   |   | | | | `-ImplicitCastExpr 0x14982e8f8 <col:14> 'char *' <LValueToRValue>
|   |   | | | |   `-DeclRefExpr 0x14982e840 <col:14> 'char *' lvalue Var 0x14982a860 'str' 'char *'
|   |   | | | `-ImplicitCastExpr 0x14982e940 <col:19> 'const char *' <NoOp>
|   |   | | |   `-ImplicitCastExpr 0x14982e928 <col:19> 'char *' <ArrayToPointerDecay>
|   |   | | |     `-StringLiteral 0x14982e860 <col:19> 'char[4]' lvalue "STR"
|   |   | | `-IntegerLiteral 0x14982e958 <col:29> 'int' 0
|   |   | `-CompoundStmt 0x14982ea28 <col:32, line:43:3>
|   |   |   `-BinaryOperator 0x14982ea08 <line:42:4, col:15> 'const char *' '='
|   |   |     |-DeclRefExpr 0x14982e998 <col:4> 'const char *' lvalue Var 0x14982a990 'tmp_hash' 'const char *'
|   |   |     `-ImplicitCastExpr 0x14982e9f0 <col:15> 'const char *' <NoOp>
|   |   |       `-ImplicitCastExpr 0x14982e9d8 <col:15> 'char *' <ArrayToPointerDecay>
|   |   |         `-StringLiteral 0x14982e9b8 <col:15> 'char[4]' lvalue "STR"
|   |   |-IfStmt 0x14982ec80 <line:44:3, line:46:3>
|   |   | |-BinaryOperator 0x14982ebb8 <line:44:7, col:29> 'int' '=='
|   |   | | |-CallExpr 0x14982eb08 <col:7, col:24> 'int'
|   |   | | | |-ImplicitCastExpr 0x14982eaf0 <col:7> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   | | | | `-DeclRefExpr 0x14982ea60 <col:7> 'int (const char *, const char *)' Function 0x14982af60 'strcmp' 'int (const char *, const char *)'
|   |   | | | |-ImplicitCastExpr 0x14982eb50 <col:14> 'const char *' <NoOp>
|   |   | | | | `-ImplicitCastExpr 0x14982eb38 <col:14> 'char *' <LValueToRValue>
|   |   | | | |   `-DeclRefExpr 0x14982ea80 <col:14> 'char *' lvalue Var 0x14982a860 'str' 'char *'
|   |   | | | `-ImplicitCastExpr 0x14982eb80 <col:19> 'const char *' <NoOp>
|   |   | | |   `-ImplicitCastExpr 0x14982eb68 <col:19> 'char *' <ArrayToPointerDecay>
|   |   | | |     `-StringLiteral 0x14982eaa0 <col:19> 'char[4]' lvalue "STR"
|   |   | | `-IntegerLiteral 0x14982eb98 <col:29> 'int' 0
|   |   | `-CompoundStmt 0x14982ec68 <col:32, line:46:3>
|   |   |   `-BinaryOperator 0x14982ec48 <line:45:4, col:15> 'const char *' '='
|   |   |     |-DeclRefExpr 0x14982ebd8 <col:4> 'const char *' lvalue Var 0x14982a990 'tmp_hash' 'const char *'
|   |   |     `-ImplicitCastExpr 0x14982ec30 <col:15> 'const char *' <NoOp>
|   |   |       `-ImplicitCastExpr 0x14982ec18 <col:15> 'char *' <ArrayToPointerDecay>
|   |   |         `-StringLiteral 0x14982ebf8 <col:15> 'char[4]' lvalue "STR"
|   |   |-IfStmt 0x14982eec0 <line:47:3, line:49:3>
|   |   | |-BinaryOperator 0x14982edf8 <line:47:7, col:29> 'int' '=='
|   |   | | |-CallExpr 0x14982ed48 <col:7, col:24> 'int'
|   |   | | | |-ImplicitCastExpr 0x14982ed30 <col:7> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   | | | | `-DeclRefExpr 0x14982eca0 <col:7> 'int (const char *, const char *)' Function 0x14982af60 'strcmp' 'int (const char *, const char *)'
|   |   | | | |-ImplicitCastExpr 0x14982ed90 <col:14> 'const char *' <NoOp>
|   |   | | | | `-ImplicitCastExpr 0x14982ed78 <col:14> 'char *' <LValueToRValue>
|   |   | | | |   `-DeclRefExpr 0x14982ecc0 <col:14> 'char *' lvalue Var 0x14982a860 'str' 'char *'
|   |   | | | `-ImplicitCastExpr 0x14982edc0 <col:19> 'const char *' <NoOp>
|   |   | | |   `-ImplicitCastExpr 0x14982eda8 <col:19> 'char *' <ArrayToPointerDecay>
|   |   | | |     `-StringLiteral 0x14982ece0 <col:19> 'char[4]' lvalue "STR"
|   |   | | `-IntegerLiteral 0x14982edd8 <col:29> 'int' 0
|   |   | `-CompoundStmt 0x14982eea8 <col:32, line:49:3>
|   |   |   `-BinaryOperator 0x14982ee88 <line:48:4, col:15> 'const char *' '='
|   |   |     |-DeclRefExpr 0x14982ee18 <col:4> 'const char *' lvalue Var 0x14982a990 'tmp_hash' 'const char *'
|   |   |     `-ImplicitCastExpr 0x14982ee70 <col:15> 'const char *' <NoOp>
|   |   |       `-ImplicitCastExpr 0x14982ee58 <col:15> 'char *' <ArrayToPointerDecay>
|   |   |         `-StringLiteral 0x14982ee38 <col:15> 'char[4]' lvalue "STR"
|   |   |-IfStmt 0x14982f100 <line:50:3, line:52:3>
|   |   | |-BinaryOperator 0x14982f038 <line:50:7, col:29> 'int' '=='
|   |   | | |-CallExpr 0x14982ef88 <col:7, col:24> 'int'
|   |   | | | |-ImplicitCastExpr 0x14982ef70 <col:7> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   | | | | `-DeclRefExpr 0x14982eee0 <col:7> 'int (const char *, const char *)' Function 0x14982af60 'strcmp' 'int (const char *, const char *)'
|   |   | | | |-ImplicitCastExpr 0x14982efd0 <col:14> 'const char *' <NoOp>
|   |   | | | | `-ImplicitCastExpr 0x14982efb8 <col:14> 'char *' <LValueToRValue>
|   |   | | | |   `-DeclRefExpr 0x14982ef00 <col:14> 'char *' lvalue Var 0x14982a860 'str' 'char *'
|   |   | | | `-ImplicitCastExpr 0x14982f000 <col:19> 'const char *' <NoOp>
|   |   | | |   `-ImplicitCastExpr 0x14982efe8 <col:19> 'char *' <ArrayToPointerDecay>
|   |   | | |     `-StringLiteral 0x14982ef20 <col:19> 'char[4]' lvalue "STR"
|   |   | | `-IntegerLiteral 0x14982f018 <col:29> 'int' 0
|   |   | `-CompoundStmt 0x14982f0e8 <col:32, line:52:3>
|   |   |   `-BinaryOperator 0x14982f0c8 <line:51:4, col:15> 'const char *' '='
|   |   |     |-DeclRefExpr 0x14982f058 <col:4> 'const char *' lvalue Var 0x14982a990 'tmp_hash' 'const char *'
|   |   |     `-ImplicitCastExpr 0x14982f0b0 <col:15> 'const char *' <NoOp>
|   |   |       `-ImplicitCastExpr 0x14982f098 <col:15> 'char *' <ArrayToPointerDecay>
|   |   |         `-StringLiteral 0x14982f078 <col:15> 'char[4]' lvalue "STR"
|   |   |-IfStmt 0x14982f340 <line:53:3, line:55:3>
|   |   | |-BinaryOperator 0x14982f278 <line:53:7, col:29> 'int' '=='
|   |   | | |-CallExpr 0x14982f1c8 <col:7, col:24> 'int'
|   |   | | | |-ImplicitCastExpr 0x14982f1b0 <col:7> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   | | | | `-DeclRefExpr 0x14982f120 <col:7> 'int (const char *, const char *)' Function 0x14982af60 'strcmp' 'int (const char *, const char *)'
|   |   | | | |-ImplicitCastExpr 0x14982f210 <col:14> 'const char *' <NoOp>
|   |   | | | | `-ImplicitCastExpr 0x14982f1f8 <col:14> 'char *' <LValueToRValue>
|   |   | | | |   `-DeclRefExpr 0x14982f140 <col:14> 'char *' lvalue Var 0x14982a860 'str' 'char *'
|   |   | | | `-ImplicitCastExpr 0x14982f240 <col:19> 'const char *' <NoOp>
|   |   | | |   `-ImplicitCastExpr 0x14982f228 <col:19> 'char *' <ArrayToPointerDecay>
|   |   | | |     `-StringLiteral 0x14982f160 <col:19> 'char[4]' lvalue "STR"
|   |   | | `-IntegerLiteral 0x14982f258 <col:29> 'int' 0
|   |   | `-CompoundStmt 0x14982f328 <col:32, line:55:3>
|   |   |   `-BinaryOperator 0x14982f308 <line:54:4, col:15> 'const char *' '='
|   |   |     |-DeclRefExpr 0x14982f298 <col:4> 'const char *' lvalue Var 0x14982a990 'tmp_hash' 'const char *'
|   |   |     `-ImplicitCastExpr 0x14982f2f0 <col:15> 'const char *' <NoOp>
|   |   |       `-ImplicitCastExpr 0x14982f2d8 <col:15> 'char *' <ArrayToPointerDecay>
|   |   |         `-StringLiteral 0x14982f2b8 <col:15> 'char[4]' lvalue "STR"
|   |   `-CallExpr 0x14982f3d0 <line:56:3, col:11> 'void'
|   |     |-ImplicitCastExpr 0x14982f3b8 <col:3> 'void (*)(void *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x14982f360 <col:3> 'void (void *)' Function 0x14982b488 'free' 'void (void *)'
|   |     `-ImplicitCastExpr 0x14982f410 <col:8> 'void *' <BitCast>
|   |       `-ImplicitCastExpr 0x14982f3f8 <col:8> 'char *' <LValueToRValue>
|   |         `-DeclRefExpr 0x14982f380 <col:8> 'char *' lvalue Var 0x14982a860 'str' 'char *'
|   |-CallExpr 0x14982f528 <line:59:2, col:39> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x14982f490 <col:2> 'void (void *)' Function 0x14982b488 'free' 'void (void *)'
|   | `-RecoveryExpr 0x14982f4e8 <col:7, col:21> '<dependent type>' contains-errors lvalue
|   |   `-DeclRefExpr 0x14982f4b0 <col:7> 'struct totem_config *' lvalue ParmVar 0x14980e248 'totem_config' 'struct totem_config *'
|   |-CallExpr 0x14982f600 <line:60:2, col:37> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x14982f550 <col:2> 'void (void *)' Function 0x14982b488 'free' 'void (void *)'
|   | `-RecoveryExpr 0x14982f5a8 <col:7, col:21> '<dependent type>' contains-errors lvalue
|   |   `-DeclRefExpr 0x14982f570 <col:7> 'struct totem_config *' lvalue ParmVar 0x14980e248 'totem_config' 'struct totem_config *'
|   |-BinaryOperator 0x14982f918 <line:62:2, col:54> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x14982f660 <col:2, col:16> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x14982f628 <col:2> 'struct totem_config *' lvalue ParmVar 0x14980e248 'totem_config' 'struct totem_config *'
|   | `-CallExpr 0x14982f8d8 <col:37, col:54> 'char *'
|   |   |-ImplicitCastExpr 0x14982f8c0 <col:37> 'char *(*)(const char *)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x14982f838 <col:37> 'char *(const char *)' Function 0x14982f6c8 'strdup' 'char *(const char *)'
|   |   `-ImplicitCastExpr 0x14982f900 <col:44> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x14982f858 <col:44> 'const char *' lvalue Var 0x14982a8f8 'tmp_cipher' 'const char *'
|   `-BinaryOperator 0x14982fa48 <line:63:2, col:50> '<dependent type>' contains-errors '='
|     |-RecoveryExpr 0x14982f970 <col:2, col:16> '<dependent type>' contains-errors lvalue
|     | `-DeclRefExpr 0x14982f938 <col:2> 'struct totem_config *' lvalue ParmVar 0x14980e248 'totem_config' 'struct totem_config *'
|     `-CallExpr 0x14982fa08 <col:35, col:50> 'char *'
|       |-ImplicitCastExpr 0x14982f9f0 <col:35> 'char *(*)(const char *)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x14982f998 <col:35> 'char *(const char *)' Function 0x14982f6c8 'strdup' 'char *(const char *)'
|       `-ImplicitCastExpr 0x14982fa30 <col:42> 'const char *' <LValueToRValue>
|         `-DeclRefExpr 0x14982f9b8 <col:42> 'const char *' lvalue Var 0x14982a990 'tmp_hash' 'const char *'
|-FunctionDecl 0x14982af60 <line:11:7> col:7 implicit used strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x14982b060 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x14982b0c8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x14982b008 <<invalid sloc>> Implicit 887
|-FunctionDecl 0x14982b488 <line:15:3> col:3 implicit used free 'void (void *)' extern
| |-ParmVarDecl 0x14982b588 <<invalid sloc>> <invalid sloc> 'void *'
| `-BuiltinAttr 0x14982b530 <<invalid sloc>> Implicit 873
`-FunctionDecl 0x14982f6c8 <line:62:37> col:37 implicit used strdup 'char *(const char *)' extern
  |-ParmVarDecl 0x14982f7c8 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x14982f770 <<invalid sloc>> Implicit 950
