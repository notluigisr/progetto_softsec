TranslationUnitDecl 0x14c855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14c8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14c855bd0 '__int128'
|-TypedefDecl 0x14c856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14c855bf0 'unsigned __int128'
|-TypedefDecl 0x14c926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14c926000 'struct __NSConstantString_tag'
|   `-Record 0x14c856580 '__NSConstantString_tag'
|-TypedefDecl 0x14c926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14c855d90 '__SVInt8_t'
|-TypedefDecl 0x14c926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14c855db0 '__SVInt16_t'
|-TypedefDecl 0x14c926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14c855dd0 '__SVInt32_t'
|-TypedefDecl 0x14c9263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14c855df0 '__SVInt64_t'
|-TypedefDecl 0x14c926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14c855e10 '__SVUint8_t'
|-TypedefDecl 0x14c9264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14c855e30 '__SVUint16_t'
|-TypedefDecl 0x14c926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14c855e50 '__SVUint32_t'
|-TypedefDecl 0x14c926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14c855e70 '__SVUint64_t'
|-TypedefDecl 0x14c9265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14c855e90 '__SVFloat16_t'
|-TypedefDecl 0x14c926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14c855eb0 '__SVFloat32_t'
|-TypedefDecl 0x14c9266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14c855ed0 '__SVFloat64_t'
|-TypedefDecl 0x14c926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14c855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14c926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14c855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14c9267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14c855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14c926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14c855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14c9268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14c855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14c926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14c855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14c926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14c855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14c9269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14c855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14c926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14c855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14c926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14c856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14c926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14c856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14c926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14c856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14c926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14c856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14c926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14c856090 '__clang_svint8x3_t'
|-TypedefDecl 0x14c926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14c8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14c926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14c8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14c926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14c8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14c926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14c856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14c926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14c856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14c926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14c856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14c926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14c856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14c926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14c856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14c927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14c8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14c927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14c8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14c9278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14c8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14c927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14c856210 '__clang_svint8x4_t'
|-TypedefDecl 0x14c9279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14c856230 '__clang_svint16x4_t'
|-TypedefDecl 0x14c927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14c856250 '__clang_svint32x4_t'
|-TypedefDecl 0x14c927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14c856270 '__clang_svint64x4_t'
|-TypedefDecl 0x14c927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14c856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14c927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14c8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14c927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14c8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14c927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14c8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14c927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14c856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14c927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14c856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14c927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14c856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14c927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14c856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14c927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14c856390 '__SVBool_t'
|-TypedefDecl 0x14c927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14c8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14c927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14c8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14c927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14c8563f0 '__SVCount_t'
|-TypedefDecl 0x14c927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14c927fb0 'char *'
|   `-BuiltinType 0x14c8556b0 'char'
|-TypedefDecl 0x14c928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14c927fb0 'char *'
|   `-BuiltinType 0x14c8556b0 'char'
`-FunctionDecl 0x14c928288 <dataset_diviso_filec/func8515_nonvuln.c:1:1, line:27:1> line:1:12 invalid ok_inflater_decode_distance 'int (int *, const int *)' static
  |-ParmVarDecl 0x14c928128 <col:40, col:53> col:53 invalid inflater 'int *'
  |-ParmVarDecl 0x14c9281a8 <line:2:40, col:72> col:72 invalid tree 'const int *'
  `-CompoundStmt 0x14d00a3d8 <col:78, line:27:1>
    |-IfStmt 0x14c9285f0 <line:3:5, line:5:5>
    | |-UnaryOperator 0x14c928578 <line:3:9, col:52> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-CallExpr 0x14c928548 <col:10, col:52> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x14c9284a0 <col:10> 'int ()' Function 0x14c9283e8 'ok_inflater_load_bits' 'int ()'
    | |   |-RecoveryExpr 0x14c9284c0 <col:32> '<dependent type>' contains-errors lvalue
    | |   `-CXXDependentScopeMemberExpr 0x14c928500 <col:42, col:48> '<dependent type>' contains-errors lvalue ->bits
    | |     `-RecoveryExpr 0x14c9284e0 <col:42> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x14c9285d8 <col:55, line:5:5>
    |   `-ReturnStmt 0x14c9285c8 <line:4:9, col:17>
    |     `-UnaryOperator 0x14c9285b0 <col:16, col:17> 'int' prefix '-'
    |       `-IntegerLiteral 0x14c928590 <col:17> 'int' 1
    |-DeclStmt 0x14c928740 <line:8:5, col:44>
    | `-VarDecl 0x14c928628 <col:5, col:30> col:9 used value 'int' cinit
    |   `-BinaryOperator 0x14c928720 <col:17, col:30> '<dependent type>' contains-errors '&'
    |     |-RecoveryExpr 0x14c9286e0 <col:17> '<dependent type>' contains-errors lvalue
    |     `-RecoveryExpr 0x14c928700 <col:30> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x14d009698 <line:9:5, col:55>
    | `-VarDecl 0x14c928770 <col:5, col:45> col:18 used value_bits 'unsigned int' cinit
    |   `-BinaryOperator 0x14d009678 <col:31, col:45> '<dependent type>' contains-errors '>>'
    |     |-RecoveryExpr 0x14d009638 <col:31> '<dependent type>' contains-errors lvalue
    |     `-RecoveryExpr 0x14d009658 <col:45> '<dependent type>' contains-errors lvalue
    `-IfStmt 0x14d00a3a8 <line:10:5, line:26:5> has_else
      |-BinaryOperator 0x14d009708 <line:10:9, col:17> 'int' contains-errors '<'
      | |-ImplicitCastExpr 0x14d0096f0 <col:9> 'int' contains-errors <LValueToRValue>
      | | `-DeclRefExpr 0x14d0096b0 <col:9> 'int' contains-errors lvalue Var 0x14c928628 'value' 'int'
      | `-IntegerLiteral 0x14d0096d0 <col:17> 'int' 4
      |-CompoundStmt 0x14d009920 <col:20, line:13:5>
      | |-CallExpr 0x14d009868 <line:11:9, col:51> '<dependent type>' contains-errors
      | | |-DeclRefExpr 0x14d009808 <col:9> 'int ()' Function 0x14d009750 'ok_inflater_read_bits' 'int ()'
      | | |-RecoveryExpr 0x14d009828 <col:31> '<dependent type>' contains-errors lvalue
      | | `-DeclRefExpr 0x14d009848 <col:41> 'unsigned int' contains-errors lvalue Var 0x14c928770 'value_bits' 'unsigned int'
      | `-ReturnStmt 0x14d009910 <line:12:9, col:24>
      |   `-BinaryOperator 0x14d0098f0 <col:16, col:24> 'int' contains-errors '+'
      |     |-ImplicitCastExpr 0x14d0098d8 <col:16> 'int' contains-errors <LValueToRValue>
      |     | `-DeclRefExpr 0x14d009898 <col:16> 'int' contains-errors lvalue Var 0x14c928628 'value' 'int'
      |     `-IntegerLiteral 0x14d0098b8 <col:24> 'int' 1
      `-IfStmt 0x14d00a378 <line:13:12, line:26:5> has_else
        |-BinaryOperator 0x14d0099b8 <line:13:16, col:25> 'int' contains-errors '>='
        | |-DeclRefExpr 0x14d009940 <col:16> 'int' contains-errors lvalue Var 0x14c928628 'value' 'int'
        | `-RecoveryExpr 0x14d009998 <col:25> '<dependent type>' contains-errors lvalue
        |-CompoundStmt 0x14d009bd8 <col:60, line:16:5>
        | |-CallExpr 0x14d009b60 <line:14:9, col:42> '<dependent type>' contains-errors
        | | |-DeclRefExpr 0x14d009ab8 <col:9> 'int ()' Function 0x14d009a00 'ok_inflater_error' 'int ()'
        | | |-RecoveryExpr 0x14d009ad8 <col:27> '<dependent type>' contains-errors lvalue
        | | `-StringLiteral 0x14d009b40 <col:37> 'char[4]' lvalue "STR"
        | `-ReturnStmt 0x14d009bc8 <line:15:9, col:17>
        |   `-UnaryOperator 0x14d009bb0 <col:16, col:17> 'int' prefix '-'
        |     `-IntegerLiteral 0x14d009b90 <col:17> 'int' 1
        `-CompoundStmt 0x14d00a340 <line:16:12, line:26:5>
          |-DeclStmt 0x14d009dd0 <line:17:9, col:67>
          | `-VarDecl 0x14d009c10 <col:9, col:66> col:22 used extra_bits 'unsigned int' cinit
          |   `-CStyleCastExpr 0x14d009da8 <col:35, col:66> 'unsigned int' contains-errors <IntegralCast>
          |     `-ParenExpr 0x14d009d88 <col:49, col:66> 'int' contains-errors
          |       `-BinaryOperator 0x14d009d30 <col:50, col:65> 'int' contains-errors '-'
          |         |-ParenExpr 0x14d009cf0 <col:50, col:61> 'int' contains-errors
          |         | `-BinaryOperator 0x14d009cd0 <col:51, col:60> 'int' contains-errors '>>'
          |         |   |-ImplicitCastExpr 0x14d009cb8 <col:51> 'int' contains-errors <LValueToRValue>
          |         |   | `-DeclRefExpr 0x14d009c78 <col:51> 'int' contains-errors lvalue Var 0x14c928628 'value' 'int'
          |         |   `-IntegerLiteral 0x14d009c98 <col:60> 'int' 1
          |         `-IntegerLiteral 0x14d009d10 <col:65> 'int' 1
          |-IfStmt 0x14d00a040 <line:18:9, line:20:9>
          | |-UnaryOperator 0x14d009fc8 <line:18:13, col:73> '<dependent type>' contains-errors prefix '!' cannot overflow
          | | `-CallExpr 0x14d009f98 <col:14, col:73> '<dependent type>' contains-errors
          | |   |-DeclRefExpr 0x14d009ec8 <col:14> 'int ()' Function 0x14d009e10 'ok_inflater_can_read_bits' 'int ()'
          | |   |-RecoveryExpr 0x14d009ee8 <col:40> '<dependent type>' contains-errors lvalue
          | |   `-BinaryOperator 0x14d009f78 <col:50, col:63> 'unsigned int' contains-errors '+'
          | |     |-ImplicitCastExpr 0x14d009f48 <col:50> 'unsigned int' contains-errors <LValueToRValue>
          | |     | `-DeclRefExpr 0x14d009f08 <col:50> 'unsigned int' contains-errors lvalue Var 0x14c928770 'value_bits' 'unsigned int'
          | |     `-ImplicitCastExpr 0x14d009f60 <col:63> 'unsigned int' contains-errors <LValueToRValue>
          | |       `-DeclRefExpr 0x14d009f28 <col:63> 'unsigned int' contains-errors lvalue Var 0x14d009c10 'extra_bits' 'unsigned int'
          | `-CompoundStmt 0x14d00a028 <col:76, line:20:9>
          |   `-ReturnStmt 0x14d00a018 <line:19:13, col:21>
          |     `-UnaryOperator 0x14d00a000 <col:20, col:21> 'int' prefix '-'
          |       `-IntegerLiteral 0x14d009fe0 <col:21> 'int' 1
          |-CallExpr 0x14d00a0c0 <line:22:9, col:51> '<dependent type>' contains-errors
          | |-DeclRefExpr 0x14d00a060 <col:9> 'int ()' Function 0x14d009750 'ok_inflater_read_bits' 'int ()'
          | |-RecoveryExpr 0x14d00a080 <col:31> '<dependent type>' contains-errors lvalue
          | `-DeclRefExpr 0x14d00a0a0 <col:41> 'unsigned int' contains-errors lvalue Var 0x14c928770 'value_bits' 'unsigned int'
          |-CallExpr 0x14d00a150 <line:23:9, col:51> '<dependent type>' contains-errors
          | |-DeclRefExpr 0x14d00a0f0 <col:9> 'int ()' Function 0x14c9283e8 'ok_inflater_load_bits' 'int ()'
          | |-RecoveryExpr 0x14d00a110 <col:31> '<dependent type>' contains-errors lvalue
          | `-DeclRefExpr 0x14d00a130 <col:41> 'unsigned int' contains-errors lvalue Var 0x14d009c10 'extra_bits' 'unsigned int'
          `-DeclStmt 0x14d00a2d0 <line:24:9, col:65>
            `-VarDecl 0x14d00a198 <col:9, col:64> col:13 used d 'int' cinit
              `-CStyleCastExpr 0x14d00a2a8 <col:17, col:64> 'int' contains-errors <Dependent>
                `-CallExpr 0x14d00a260 <col:22, col:64> '<dependent type>' contains-errors
                  |-DeclRefExpr 0x14d00a200 <col:22> 'int ()' Function 0x14d009750 'ok_inflater_read_bits' 'int ()'
                  |-RecoveryExpr 0x14d00a220 <col:44> '<dependent type>' contains-errors lvalue
                  `-DeclRefExpr 0x14d00a240 <col:54> 'unsigned int' contains-errors lvalue Var 0x14d009c10 'extra_bits' 'unsigned int'
