TranslationUnitDecl 0x14e013e08 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14e014cb8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14e0143d0 '__int128'
|-TypedefDecl 0x14e014d28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14e0143f0 'unsigned __int128'
|-TypedefDecl 0x14f00be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14f00bc00 'struct __NSConstantString_tag'
|   `-Record 0x14e014d80 '__NSConstantString_tag'
|-TypedefDecl 0x14f00be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14e014590 '__SVInt8_t'
|-TypedefDecl 0x14f00bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14e0145b0 '__SVInt16_t'
|-TypedefDecl 0x14f00bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14e0145d0 '__SVInt32_t'
|-TypedefDecl 0x14f00bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14e0145f0 '__SVInt64_t'
|-TypedefDecl 0x14f00c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14e014610 '__SVUint8_t'
|-TypedefDecl 0x14f00c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14e014630 '__SVUint16_t'
|-TypedefDecl 0x14f00c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14e014650 '__SVUint32_t'
|-TypedefDecl 0x14f00c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14e014670 '__SVUint64_t'
|-TypedefDecl 0x14f00c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14e014690 '__SVFloat16_t'
|-TypedefDecl 0x14f00c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14e0146b0 '__SVFloat32_t'
|-TypedefDecl 0x14f00c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14e0146d0 '__SVFloat64_t'
|-TypedefDecl 0x14f00c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14e0146f0 '__SVBfloat16_t'
|-TypedefDecl 0x14f00c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14e014710 '__clang_svint8x2_t'
|-TypedefDecl 0x14f00c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14e014730 '__clang_svint16x2_t'
|-TypedefDecl 0x14f00c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14e014750 '__clang_svint32x2_t'
|-TypedefDecl 0x14f00c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14e014770 '__clang_svint64x2_t'
|-TypedefDecl 0x14f00c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14e014790 '__clang_svuint8x2_t'
|-TypedefDecl 0x14f00c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14e0147b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14f00c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14e0147d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14f00c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14e0147f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14f00c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14e014810 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14f00c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14e014830 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14f00c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14e014850 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14f00c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14e014870 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14f00c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14e014890 '__clang_svint8x3_t'
|-TypedefDecl 0x14f00c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14e0148b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14f00c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14e0148d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14f00c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14e0148f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14f00c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14e014910 '__clang_svuint8x3_t'
|-TypedefDecl 0x14f00ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14e014930 '__clang_svuint16x3_t'
|-TypedefDecl 0x14f00cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14e014950 '__clang_svuint32x3_t'
|-TypedefDecl 0x14f00cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14e014970 '__clang_svuint64x3_t'
|-TypedefDecl 0x14f00cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14e014990 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14f00d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14e0149b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14f00d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14e0149d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14f00d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14e0149f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14f00d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14e014a10 '__clang_svint8x4_t'
|-TypedefDecl 0x14f00d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14e014a30 '__clang_svint16x4_t'
|-TypedefDecl 0x14f00d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14e014a50 '__clang_svint32x4_t'
|-TypedefDecl 0x14f00d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14e014a70 '__clang_svint64x4_t'
|-TypedefDecl 0x14f00d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14e014a90 '__clang_svuint8x4_t'
|-TypedefDecl 0x14f00d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14e014ab0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14f00d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14e014ad0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14f00d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14e014af0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14f00d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14e014b10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14f00d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14e014b30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14f00d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14e014b50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14f00d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14e014b70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14f00da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14e014b90 '__SVBool_t'
|-TypedefDecl 0x14f00da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14e014bb0 '__clang_svboolx2_t'
|-TypedefDecl 0x14f00dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14e014bd0 '__clang_svboolx4_t'
|-TypedefDecl 0x14f00db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14e014bf0 '__SVCount_t'
|-TypedefDecl 0x14f00dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14f00dbb0 'char *'
|   `-BuiltinType 0x14e013eb0 'char'
|-TypedefDecl 0x14f00dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14f00dbb0 'char *'
|   `-BuiltinType 0x14e013eb0 'char'
`-FunctionDecl 0x14f00df18 <dataset_diviso_filec/func16025_nonvuln.c:1:1, line:27:1> line:1:5 invalid sigprocmask 'int (int, int *, int *)'
  |-ParmVarDecl 0x14f00dcd8 <col:17, col:21> col:21 used how 'int'
  |-ParmVarDecl 0x14f00dda8 <col:26, col:36> col:36 invalid set 'int *'
  |-ParmVarDecl 0x14f00de28 <col:41, col:51> col:51 invalid oldset 'int *'
  `-CompoundStmt 0x14f809628 <line:2:1, line:27:1>
    |-DeclStmt 0x14f00e058 <line:3:2, col:11>
    | `-VarDecl 0x14f00dff0 <col:2, col:6> col:6 used error 'int'
    |-CallExpr 0x14f00e3a0 <line:5:2, col:42> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14f00e1d0 <col:2> 'int ()' Function 0x14f00e118 'spin_lock_irq' 'int ()'
    | `-UnaryOperator 0x14f00e388 <col:16, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-CXXDependentScopeMemberExpr 0x14f00e340 <col:17, col:35> '<dependent type>' contains-errors lvalue ->siglock
    |     `-CXXDependentScopeMemberExpr 0x14f00e2f8 <col:17, col:26> '<dependent type>' contains-errors lvalue ->sighand
    |       `-RecoveryExpr 0x14f00e2d8 <col:17> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14f0275b8 <line:6:2, line:7:22>
    | |-RecoveryExpr 0x14f00e3c8 <line:6:6> '<dependent type>' contains-errors lvalue
    | `-BinaryOperator 0x14f027598 <line:7:3, col:22> '<dependent type>' contains-errors '='
    |   |-UnaryOperator 0x14f027518 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   | `-ImplicitCastExpr 0x14f027500 <col:4> '<dependent type>' contains-errors <LValueToRValue>
    |   |   `-RecoveryExpr 0x14f027400 <col:4> '<dependent type>' contains-errors lvalue
    |   `-CXXDependentScopeMemberExpr 0x14f027550 <col:13, col:22> '<dependent type>' contains-errors lvalue ->blocked
    |     `-RecoveryExpr 0x14f027530 <col:13> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x14f027618 <line:9:2, col:10> 'int' '='
    | |-DeclRefExpr 0x14f0275d8 <col:2> 'int' lvalue Var 0x14f00dff0 'error' 'int'
    | `-IntegerLiteral 0x14f0275f8 <col:10> 'int' 0
    |-SwitchStmt 0x14f027670 <line:10:2, line:22:2>
    | |-ImplicitCastExpr 0x14f027658 <line:10:10> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x14f027638 <col:10> 'int' lvalue ParmVar 0x14f00dcd8 'how' 'int'
    | `-CompoundStmt 0x14f027f60 <col:15, line:22:2>
    |   |-CallExpr 0x14f0279f8 <line:12:3, col:54> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x14f027790 <col:3> 'int ()' Function 0x14f0276d8 'sigorsets' 'int ()'
    |   | |-UnaryOperator 0x14f027960 <col:13, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | | `-CXXDependentScopeMemberExpr 0x14f027918 <col:14, col:23> '<dependent type>' contains-errors lvalue ->blocked
    |   | |   `-RecoveryExpr 0x14f0278f8 <col:14> '<dependent type>' contains-errors lvalue
    |   | |-UnaryOperator 0x14f0279e0 <col:32, col:42> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | | `-CXXDependentScopeMemberExpr 0x14f027998 <col:33, col:42> '<dependent type>' contains-errors lvalue ->blocked
    |   | |   `-RecoveryExpr 0x14f027978 <col:33> '<dependent type>' contains-errors lvalue
    |   | `-RecoveryExpr 0x14f0278a0 <col:51> '<dependent type>' contains-errors lvalue
    |   |-BreakStmt 0x14f027a30 <line:13:3>
    |   |-CallExpr 0x14f027d98 <line:15:3, col:56> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x14f027b30 <col:3> 'int ()' Function 0x14f027a78 'signandsets' 'int ()'
    |   | |-UnaryOperator 0x14f027d00 <col:15, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | | `-CXXDependentScopeMemberExpr 0x14f027cb8 <col:16, col:25> '<dependent type>' contains-errors lvalue ->blocked
    |   | |   `-RecoveryExpr 0x14f027c98 <col:16> '<dependent type>' contains-errors lvalue
    |   | |-UnaryOperator 0x14f027d80 <col:34, col:44> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | | `-CXXDependentScopeMemberExpr 0x14f027d38 <col:35, col:44> '<dependent type>' contains-errors lvalue ->blocked
    |   | |   `-RecoveryExpr 0x14f027d18 <col:35> '<dependent type>' contains-errors lvalue
    |   | `-RecoveryExpr 0x14f027c40 <col:53> '<dependent type>' contains-errors lvalue
    |   |-BreakStmt 0x14f027dd0 <line:16:3>
    |   |-BreakStmt 0x14f027e40 <line:19:3>
    |   `-DefaultStmt 0x14f027f40 <line:20:2, line:21:12>
    |     `-BinaryOperator 0x14f027f20 <col:3, col:12> 'int' contains-errors '='
    |       |-DeclRefExpr 0x14f027e48 <col:3> 'int' lvalue Var 0x14f00dff0 'error' 'int'
    |       `-UnaryOperator 0x14f027f08 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow
    |         `-ImplicitCastExpr 0x14f027ef0 <col:12> '<dependent type>' contains-errors <LValueToRValue>
    |           `-RecoveryExpr 0x14f027ed0 <col:12> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x14f0280e8 <line:23:2, col:20> 'int'
    | `-ImplicitCastExpr 0x14f0280d0 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x14f028080 <col:2> 'int ()' Function 0x14f027fc8 'recalc_sigpending' 'int ()'
    |-CallExpr 0x14f0283b8 <line:24:2, col:44> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14f0281e8 <col:2> 'int ()' Function 0x14f028130 'spin_unlock_irq' 'int ()'
    | `-UnaryOperator 0x14f0283a0 <col:18, col:37> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-CXXDependentScopeMemberExpr 0x14f028358 <col:19, col:37> '<dependent type>' contains-errors lvalue ->siglock
    |     `-CXXDependentScopeMemberExpr 0x14f028310 <col:19, col:28> '<dependent type>' contains-errors lvalue ->sighand
    |       `-RecoveryExpr 0x14f0282f0 <col:19> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x14f809618 <line:26:2, col:9>
      `-ImplicitCastExpr 0x14f809600 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x14f0283e0 <col:9> 'int' lvalue Var 0x14f00dff0 'error' 'int'
