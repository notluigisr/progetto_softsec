TranslationUnitDecl 0x134055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1340564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x134055bd0 '__int128'
|-TypedefDecl 0x134056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x134055bf0 'unsigned __int128'
|-TypedefDecl 0x13480be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13480bc00 'struct __NSConstantString_tag'
|   `-Record 0x134056580 '__NSConstantString_tag'
|-TypedefDecl 0x13480be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x134055d90 '__SVInt8_t'
|-TypedefDecl 0x13480bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x134055db0 '__SVInt16_t'
|-TypedefDecl 0x13480bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x134055dd0 '__SVInt32_t'
|-TypedefDecl 0x13480bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x134055df0 '__SVInt64_t'
|-TypedefDecl 0x13480c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x134055e10 '__SVUint8_t'
|-TypedefDecl 0x13480c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x134055e30 '__SVUint16_t'
|-TypedefDecl 0x13480c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x134055e50 '__SVUint32_t'
|-TypedefDecl 0x13480c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x134055e70 '__SVUint64_t'
|-TypedefDecl 0x13480c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x134055e90 '__SVFloat16_t'
|-TypedefDecl 0x13480c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x134055eb0 '__SVFloat32_t'
|-TypedefDecl 0x13480c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x134055ed0 '__SVFloat64_t'
|-TypedefDecl 0x13480c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x134055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13480c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x134055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13480c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x134055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13480c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x134055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13480c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x134055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13480c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x134055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13480c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x134055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13480c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x134055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13480c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x134055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13480c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x134056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13480c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x134056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13480c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x134056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13480c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x134056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13480c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x134056090 '__clang_svint8x3_t'
|-TypedefDecl 0x13480c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1340560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13480c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1340560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13480c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1340560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13480c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x134056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13480ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x134056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13480cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x134056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13480cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x134056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13480cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x134056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13480d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1340561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13480d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1340561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13480d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1340561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13480d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x134056210 '__clang_svint8x4_t'
|-TypedefDecl 0x13480d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x134056230 '__clang_svint16x4_t'
|-TypedefDecl 0x13480d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x134056250 '__clang_svint32x4_t'
|-TypedefDecl 0x13480d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x134056270 '__clang_svint64x4_t'
|-TypedefDecl 0x13480d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x134056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13480d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1340562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13480d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1340562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13480d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1340562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13480d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x134056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13480d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x134056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13480d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x134056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13480d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x134056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13480da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x134056390 '__SVBool_t'
|-TypedefDecl 0x13480da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1340563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13480dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1340563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13480db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1340563f0 '__SVCount_t'
|-TypedefDecl 0x13480dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13480dbb0 'char *'
|   `-BuiltinType 0x1340556b0 'char'
|-TypedefDecl 0x13480dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13480dbb0 'char *'
|   `-BuiltinType 0x1340556b0 'char'
|-FunctionDecl 0x134827b08 <dataset_diviso_filec/func20581_nonvuln.c:1:1, line:55:1> line:1:1 invalid load_rr 'int (int *, int *, struct regional *, struct ub_packed_rrset_key *, struct packed_rrset_data *, unsigned int, int, int *, int)'
| |-ParmVarDecl 0x13480dd28 <col:9, col:14> col:14 invalid ssl 'int *'
| |-ParmVarDecl 0x13480dda8 <col:19, col:33> col:33 invalid buf 'int *'
| |-ParmVarDecl 0x13480e398 <col:38, col:55> col:55 used region 'struct regional *'
| |-ParmVarDecl 0x134827568 <line:2:2, col:30> col:30 used rk 'struct ub_packed_rrset_key *'
| |-ParmVarDecl 0x134827738 <col:34, col:60> col:60 used d 'struct packed_rrset_data *'
| |-ParmVarDecl 0x1348277b8 <line:3:2, col:15> col:15 used i 'unsigned int'
| |-ParmVarDecl 0x134827838 <col:18, col:22> col:22 used is_rrsig 'int'
| |-ParmVarDecl 0x1348278b8 <col:32, col:37> col:37 used go_on 'int *'
| |-ParmVarDecl 0x134827938 <col:44, col:51> col:51 invalid now 'int'
| `-CompoundStmt 0x13482cb80 <line:4:1, line:55:1>
|   |-DeclStmt 0x134827d20 <line:7:2, col:12>
|   | `-VarDecl 0x134827cb8 <col:2, col:6> col:6 used status 'int'
|   |-IfStmt 0x134827f68 <line:10:2, line:11:10>
|   | |-UnaryOperator 0x134827f20 <line:10:5, col:27> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-CallExpr 0x134827ef0 <col:6, col:27> '<dependent type>' contains-errors
|   | |   |-DeclRefExpr 0x134827e90 <col:6> 'int ()' Function 0x134827dd8 'ssl_read_buf' 'int ()'
|   | |   |-RecoveryExpr 0x134827eb0 <col:19> '<dependent type>' contains-errors lvalue
|   | |   `-RecoveryExpr 0x134827ed0 <col:24> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x134827f58 <line:11:3, col:10>
|   |   `-IntegerLiteral 0x134827f38 <col:10> 'int' 0
|   |-IfStmt 0x13482a0a0 <line:12:2, line:15:2>
|   | |-BinaryOperator 0x134829fa0 <line:12:5, col:58> 'int' contains-errors '=='
|   | | |-CallExpr 0x134829ee8 <col:5, col:53> 'int' contains-errors
|   | | | |-ImplicitCastExpr 0x134829ed0 <col:5> 'int (*)(const char *, const char *, unsigned long)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x134828228 <col:5> 'int (const char *, const char *, unsigned long)' Function 0x134827fd8 'strncmp' 'int (const char *, const char *, unsigned long)'
|   | | | |-ImplicitCastExpr 0x134829f20 <col:13, col:42> 'const char *' contains-errors <NoOp>
|   | | | | `-CStyleCastExpr 0x1348283a8 <col:13, col:42> 'char *' contains-errors <Dependent>
|   | | | |   `-CallExpr 0x134828368 <col:20, col:42> '<dependent type>' contains-errors
|   | | | |     |-DeclRefExpr 0x134828328 <col:20> 'int ()' Function 0x134828270 'sldns_buffer_begin' 'int ()'
|   | | | |     `-RecoveryExpr 0x134828348 <col:39> '<dependent type>' contains-errors lvalue
|   | | | |-ImplicitCastExpr 0x134829f50 <col:45> 'const char *' <NoOp>
|   | | | | `-ImplicitCastExpr 0x134829f38 <col:45> 'char *' <ArrayToPointerDecay>
|   | | | |   `-StringLiteral 0x134829e40 <col:45> 'char[4]' lvalue "STR"
|   | | | `-ImplicitCastExpr 0x134829f68 <col:52> 'unsigned long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x134829e60 <col:52> 'int' 6
|   | | `-IntegerLiteral 0x134829f80 <col:58> 'int' 0
|   | `-CompoundStmt 0x13482a080 <col:61, line:15:2>
|   |   |-BinaryOperator 0x13482a030 <line:13:3, col:12> 'int' '='
|   |   | |-UnaryOperator 0x134829ff8 <col:3, col:4> 'int' lvalue prefix '*' cannot overflow
|   |   | | `-ImplicitCastExpr 0x134829fe0 <col:4> 'int *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x134829fc0 <col:4> 'int *' lvalue ParmVar 0x1348278b8 'go_on' 'int *'
|   |   | `-IntegerLiteral 0x13482a010 <col:12> 'int' 0
|   |   `-ReturnStmt 0x13482a070 <line:14:3, col:10>
|   |     `-IntegerLiteral 0x13482a050 <col:10> 'int' 1
|   |-BinaryOperator 0x13482a5d0 <line:16:2, line:17:46> 'int' contains-errors '='
|   | |-DeclRefExpr 0x13482a0c0 <line:16:2> 'int' lvalue Var 0x134827cb8 'status' 'int'
|   | `-CallExpr 0x13482a568 <col:11, line:17:46> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x13482a1c0 <line:16:11> 'int ()' Function 0x13482a108 'sldns_str2wire_rr_buf' 'int ()'
|   |   |-CStyleCastExpr 0x13482a470 <col:33, col:62> 'char *' contains-errors <Dependent>
|   |   | `-CallExpr 0x13482a220 <col:40, col:62> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x13482a1e0 <col:40> 'int ()' Function 0x134828270 'sldns_buffer_begin' 'int ()'
|   |   |   `-RecoveryExpr 0x13482a200 <col:59> '<dependent type>' contains-errors lvalue
|   |   |-RecoveryExpr 0x13482a498 <col:65> '<dependent type>' contains-errors lvalue
|   |   |-UnaryOperator 0x13482a4d8 <line:17:3, col:4> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   | `-RecoveryExpr 0x13482a4b8 <col:4> '<dependent type>' contains-errors lvalue
|   |   |-UnaryOperator 0x13482a510 <col:12, col:13> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   | `-RecoveryExpr 0x13482a4f0 <col:13> '<dependent type>' contains-errors lvalue
|   |   |-IntegerLiteral 0x13482a300 <col:24> 'int' 3600
|   |   |-RecoveryExpr 0x13482a528 <col:30> '<dependent type>' contains-errors lvalue
|   |   |-IntegerLiteral 0x13482a338 <col:36> 'int' 0
|   |   |-RecoveryExpr 0x13482a548 <col:39> '<dependent type>' contains-errors lvalue
|   |   `-IntegerLiteral 0x13482a370 <col:45> 'int' 0
|   |-IfStmt 0x13482aa98 <line:18:2, line:23:2>
|   | |-BinaryOperator 0x13482a648 <line:18:5, col:15> 'int' '!='
|   | | |-ImplicitCastExpr 0x13482a630 <col:5> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13482a5f0 <col:5> 'int' lvalue Var 0x134827cb8 'status' 'int'
|   | | `-IntegerLiteral 0x13482a610 <col:15> 'int' 0
|   | `-CompoundStmt 0x13482aa78 <col:18, line:23:2>
|   |   |-CallExpr 0x13482a9f8 <line:19:3, line:21:34> 'int' contains-errors
|   |   | |-ImplicitCastExpr 0x13482a9e0 <line:19:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x13482a748 <col:3> 'int ()' Function 0x13482a690 'log_warn' 'int ()'
|   |   | |-ImplicitCastExpr 0x13482aa30 <col:12> 'char *' <ArrayToPointerDecay>
|   |   | | `-StringLiteral 0x13482a768 <col:12> 'char[4]' lvalue "STR"
|   |   | |-CallExpr 0x13482a8f8 <line:20:4, col:35> 'int'
|   |   | | |-ImplicitCastExpr 0x13482a8e0 <col:4> 'int (*)()' <FunctionToPointerDecay>
|   |   | | | `-DeclRefExpr 0x13482a868 <col:4> 'int ()' Function 0x13482a7b0 'sldns_get_errorstr_parse' 'int ()'
|   |   | | `-ImplicitCastExpr 0x13482a920 <col:29> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x13482a888 <col:29> 'int' lvalue Var 0x134827cb8 'status' 'int'
|   |   | `-CStyleCastExpr 0x13482a9b8 <line:21:4, col:33> 'char *' contains-errors <Dependent>
|   |   |   `-CallExpr 0x13482a978 <col:11, col:33> '<dependent type>' contains-errors
|   |   |     |-DeclRefExpr 0x13482a938 <col:11> 'int ()' Function 0x134828270 'sldns_buffer_begin' 'int ()'
|   |   |     `-RecoveryExpr 0x13482a958 <col:30> '<dependent type>' contains-errors lvalue
|   |   `-ReturnStmt 0x13482aa68 <line:22:3, col:10>
|   |     `-IntegerLiteral 0x13482aa48 <col:10> 'int' 0
|   |-IfStmt 0x13482ad90 <line:24:2, line:29:2>
|   | |-RecoveryExpr 0x13482abd8 <line:24:5, line:25:6> '_Bool' contains-errors
|   | `-CompoundStmt 0x13482ad70 <col:26, line:29:2>
|   |   |-CallExpr 0x13482acf8 <line:26:3, line:27:34> 'int' contains-errors
|   |   | |-ImplicitCastExpr 0x13482ace0 <line:26:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x13482abf8 <col:3> 'int ()' Function 0x13482a690 'log_warn' 'int ()'
|   |   | |-ImplicitCastExpr 0x13482ad28 <col:12> 'char *' <ArrayToPointerDecay>
|   |   | | `-StringLiteral 0x13482ac18 <col:12> 'char[4]' lvalue "STR"
|   |   | `-CStyleCastExpr 0x13482acb8 <line:27:4, col:33> 'char *' contains-errors <Dependent>
|   |   |   `-CallExpr 0x13482ac78 <col:11, col:33> '<dependent type>' contains-errors
|   |   |     |-DeclRefExpr 0x13482ac38 <col:11> 'int ()' Function 0x134828270 'sldns_buffer_begin' 'int ()'
|   |   |     `-RecoveryExpr 0x13482ac58 <col:30> '<dependent type>' contains-errors lvalue
|   |   `-ReturnStmt 0x13482ad60 <line:28:3, col:10>
|   |     `-IntegerLiteral 0x13482ad40 <col:10> 'int' 0
|   |-CallExpr 0x13482bdb8 <line:33:2, col:24> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x13482bd78 <col:2> 'int ()' Function 0x13482bcc0 'sldns_buffer_clear' 'int ()'
|   | `-RecoveryExpr 0x13482bd98 <col:21> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x13482c288 <line:37:2, line:40:2>
|   | |-UnaryOperator 0x13482c188 <line:37:5, col:18> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x13482c170 <col:6, col:18> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-ArraySubscriptExpr 0x13482c150 <col:6, col:18> '<dependent type>' contains-errors lvalue
|   | |     |-ImplicitCastExpr 0x13482c120 <col:6, col:9> '<dependent type>' contains-errors <LValueToRValue>
|   | |     | `-RecoveryExpr 0x13482c0d8 <col:6, col:9> '<dependent type>' contains-errors lvalue
|   | |     |   `-DeclRefExpr 0x13482c0a0 <col:6> 'struct packed_rrset_data *' lvalue ParmVar 0x134827738 'd' 'struct packed_rrset_data *'
|   | |     `-ImplicitCastExpr 0x13482c138 <col:17> 'unsigned int' <LValueToRValue>
|   | |       `-DeclRefExpr 0x13482c100 <col:17> 'unsigned int' lvalue ParmVar 0x1348277b8 'i' 'unsigned int'
|   | `-CompoundStmt 0x13482c268 <col:21, line:40:2>
|   |   |-CallExpr 0x13482c1f8 <line:38:3, col:17> 'int'
|   |   | |-ImplicitCastExpr 0x13482c1e0 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x13482c1a0 <col:3> 'int ()' Function 0x13482a690 'log_warn' 'int ()'
|   |   | `-ImplicitCastExpr 0x13482c220 <col:12> 'char *' <ArrayToPointerDecay>
|   |   |   `-StringLiteral 0x13482c1c0 <col:12> 'char[4]' lvalue "STR"
|   |   `-ReturnStmt 0x13482c258 <line:39:3, col:10>
|   |     `-IntegerLiteral 0x13482c238 <col:10> 'int' 0
|   |-IfStmt 0x13482cb30 <line:43:2, line:52:2>
|   | |-BinaryOperator 0x13482c318 <line:43:5, col:8> 'int' '=='
|   | | |-ImplicitCastExpr 0x13482c2e8 <col:5> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13482c2a8 <col:5> 'unsigned int' lvalue ParmVar 0x1348277b8 'i' 'unsigned int'
|   | | `-ImplicitCastExpr 0x13482c300 <col:8> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x13482c2c8 <col:8> 'int' 0
|   | `-CompoundStmt 0x13482cb18 <col:11, line:52:2>
|   |   `-IfStmt 0x13482caf8 <line:48:3, line:51:3>
|   |     |-UnaryOperator 0x13482c9f8 <line:48:6, col:14> '<dependent type>' contains-errors prefix '!' cannot overflow
|   |     | `-ImplicitCastExpr 0x13482c9e0 <col:7, col:14> '<dependent type>' contains-errors <LValueToRValue>
|   |     |   `-CXXDependentScopeMemberExpr 0x13482c998 <col:7, col:14> '<dependent type>' contains-errors lvalue .dname
|   |     |     `-RecoveryExpr 0x13482c970 <col:7, col:11> '<dependent type>' contains-errors lvalue
|   |     |       `-DeclRefExpr 0x13482c938 <col:7> 'struct ub_packed_rrset_key *' lvalue ParmVar 0x134827568 'rk' 'struct ub_packed_rrset_key *'
|   |     `-CompoundStmt 0x13482cad8 <col:21, line:51:3>
|   |       |-CallExpr 0x13482ca68 <line:49:4, col:18> 'int'
|   |       | |-ImplicitCastExpr 0x13482ca50 <col:4> 'int (*)()' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x13482ca10 <col:4> 'int ()' Function 0x13482a690 'log_warn' 'int ()'
|   |       | `-ImplicitCastExpr 0x13482ca90 <col:13> 'char *' <ArrayToPointerDecay>
|   |       |   `-StringLiteral 0x13482ca30 <col:13> 'char[4]' lvalue "STR"
|   |       `-ReturnStmt 0x13482cac8 <line:50:4, col:11>
|   |         `-IntegerLiteral 0x13482caa8 <col:11> 'int' 0
|   `-ReturnStmt 0x13482cb70 <line:54:2, col:9>
|     `-IntegerLiteral 0x13482cb50 <col:9> 'int' 1
`-FunctionDecl 0x134827fd8 <line:12:5> col:5 implicit used strncmp 'int (const char *, const char *, unsigned long)' extern
  |-ParmVarDecl 0x1348280d8 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x134828140 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x1348281a8 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x134828080 <<invalid sloc>> Implicit 888
