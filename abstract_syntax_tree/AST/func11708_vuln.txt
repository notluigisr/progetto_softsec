TranslationUnitDecl 0x137055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1370564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x137055bd0 '__int128'
|-TypedefDecl 0x137056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x137055bf0 'unsigned __int128'
|-TypedefDecl 0x137126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x137126000 'struct __NSConstantString_tag'
|   `-Record 0x137056580 '__NSConstantString_tag'
|-TypedefDecl 0x137126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x137055d90 '__SVInt8_t'
|-TypedefDecl 0x137126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x137055db0 '__SVInt16_t'
|-TypedefDecl 0x137126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x137055dd0 '__SVInt32_t'
|-TypedefDecl 0x1371263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x137055df0 '__SVInt64_t'
|-TypedefDecl 0x137126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x137055e10 '__SVUint8_t'
|-TypedefDecl 0x1371264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x137055e30 '__SVUint16_t'
|-TypedefDecl 0x137126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x137055e50 '__SVUint32_t'
|-TypedefDecl 0x137126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x137055e70 '__SVUint64_t'
|-TypedefDecl 0x1371265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x137055e90 '__SVFloat16_t'
|-TypedefDecl 0x137126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x137055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1371266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x137055ed0 '__SVFloat64_t'
|-TypedefDecl 0x137126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x137055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x137126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x137055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1371267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x137055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x137126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x137055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1371268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x137055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x137126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x137055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x137126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x137055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1371269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x137055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x137126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x137055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x137126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x137056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x137126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x137056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x137126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x137056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x137126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x137056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x137126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x137056090 '__clang_svint8x3_t'
|-TypedefDecl 0x137126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1370560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x137126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1370560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x137126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1370560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x137126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x137056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x137126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x137056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x137126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x137056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x137126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x137056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x137126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x137056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x137127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1370561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x137127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1370561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1371278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1370561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x137127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x137056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1371279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x137056230 '__clang_svint16x4_t'
|-TypedefDecl 0x137127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x137056250 '__clang_svint32x4_t'
|-TypedefDecl 0x137127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x137056270 '__clang_svint64x4_t'
|-TypedefDecl 0x137127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x137056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x137127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1370562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x137127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1370562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x137127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1370562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x137127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x137056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x137127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x137056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x137127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x137056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x137127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x137056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x137127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x137056390 '__SVBool_t'
|-TypedefDecl 0x137127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1370563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x137127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1370563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x137127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1370563f0 '__SVCount_t'
|-TypedefDecl 0x137127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x137127fb0 'char *'
|   `-BuiltinType 0x1370556b0 'char'
|-TypedefDecl 0x137128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x137127fb0 'char *'
|   `-BuiltinType 0x1370556b0 'char'
|-FunctionDecl 0x137128318 <dataset_diviso_filec/func11708_vuln.c:1:1, line:33:1> line:1:1 invalid print_prefix 'int (int *, const char *, int)'
| |-ParmVarDecl 0x137128128 <col:14, col:34> col:34 invalid ndo 'int *'
| |-ParmVarDecl 0x1371281a8 <col:39, col:53> col:53 used prefix 'const char *'
| |-ParmVarDecl 0x137128228 <col:61, col:67> col:67 referenced invalid max_length 'int'
| `-CompoundStmt 0x137144808 <line:2:1, line:33:1>
|   |-DeclStmt 0x137128458 <line:3:5, col:18>
|   | `-VarDecl 0x1371283f0 <col:5, col:9> col:9 used plenbytes 'int'
|   |-DeclStmt 0x1371285b8 <line:4:5, col:28>
|   | `-VarDecl 0x137128550 <col:5, col:27> col:10 used buf 'char[4]'
|   |-IfStmt 0x137144580 <line:6:5, line:29:5> has_else
|   | |-BinaryOperator 0x137141c40 <line:6:9, line:7:42> 'int' contains-errors '&&'
|   | | |-BinaryOperator 0x137141b90 <line:6:9, col:68> 'int' contains-errors '&&'
|   | | | |-BinaryOperator 0x137141b10 <col:9, col:22> 'int' '>='
|   | | | | |-ImplicitCastExpr 0x137141af8 <col:9, col:17> 'int' <IntegralCast>
|   | | | | | `-ImplicitCastExpr 0x137141ae0 <col:9, col:17> 'char' <LValueToRValue>
|   | | | | |   `-ArraySubscriptExpr 0x137141ac0 <col:9, col:17> 'const char' lvalue
|   | | | | |     |-ImplicitCastExpr 0x137141aa8 <col:9> 'const char *' <LValueToRValue>
|   | | | | |     | `-DeclRefExpr 0x1371285d0 <col:9> 'const char *' lvalue ParmVar 0x1371281a8 'prefix' 'const char *'
|   | | | | |     `-IntegerLiteral 0x1371285f0 <col:16> 'int' 0
|   | | | | `-IntegerLiteral 0x137128648 <col:22> 'int' 96
|   | | | `-BinaryOperator 0x137141b70 <col:28, col:68> 'int' contains-errors '>='
|   | | |   |-RecoveryExpr 0x1371286b8 <col:28> '<dependent type>' contains-errors lvalue
|   | | |   `-BinaryOperator 0x137141b50 <col:42, col:68> '<dependent type>' contains-errors '+'
|   | | |     |-RecoveryExpr 0x137141b30 <col:42> '<dependent type>' contains-errors lvalue
|   | | |     `-IntegerLiteral 0x1371286f0 <col:68> 'int' 1
|   | | `-CallExpr 0x137141c18 <line:7:9, col:42> 'int'
|   | |   |-ImplicitCastExpr 0x137141c00 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x1371418e0 <col:9> 'int ()' Function 0x137141828 'is_ipv4_mapped_address' 'int ()'
|   | |   `-UnaryOperator 0x137141be8 <col:32, col:41> 'const char *' prefix '&' cannot overflow
|   | |     `-ArraySubscriptExpr 0x137141bc8 <col:33, col:41> 'const char' lvalue
|   | |       |-ImplicitCastExpr 0x137141bb0 <col:33> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x137141900 <col:33> 'const char *' lvalue ParmVar 0x1371281a8 'prefix' 'const char *'
|   | |       `-IntegerLiteral 0x137141920 <col:40> 'int' 1
|   | |-CompoundStmt 0x1371442c0 <col:45, line:27:5>
|   | | |-DeclStmt 0x1371421f8 <line:8:9, col:28>
|   | | | |-RecordDecl 0x137141c60 <col:9, col:16> col:16 struct in_addr
|   | | | `-VarDecl 0x137141d58 <col:9, col:24> col:24 invalid addr 'struct in_addr'
|   | | |-IfStmt 0x1371423d8 <line:12:9, line:13:21>
|   | | | |-BinaryOperator 0x137142370 <line:12:13, col:18> 'int' contains-errors '<'
|   | | | | |-IntegerLiteral 0x1371422f8 <col:13> 'int' 32
|   | | | | `-RecoveryExpr 0x137142350 <col:18> '<dependent type>' contains-errors lvalue
|   | | | `-ReturnStmt 0x1371423c8 <line:13:13, col:21>
|   | | |   `-UnaryOperator 0x1371423b0 <col:20, col:21> 'int' prefix '-'
|   | | |     `-IntegerLiteral 0x137142390 <col:21> 'int' 1
|   | | |-CompoundAssignOperator 0x137142460 <line:14:9, col:23> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   | | | |-RecoveryExpr 0x137142418 <col:9> '<dependent type>' contains-errors lvalue
|   | | | | `-DeclRefExpr 0x1371423f8 <col:9> 'int' lvalue ParmVar 0x137128228 'max_length' 'int'
|   | | | `-IntegerLiteral 0x137142440 <col:23> 'int' 1
|   | | |-CallExpr 0x137143600 <line:16:9, col:38> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x137142728 <col:9> 'void *(void *, int, unsigned long)' Function 0x1371424d8 'memset' 'void *(void *, int, unsigned long)'
|   | | | |-UnaryOperator 0x137142768 <col:16, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | | | `-RecoveryExpr 0x137142748 <col:17> '<dependent type>' contains-errors lvalue
|   | | | |-IntegerLiteral 0x137142780 <col:23> 'int' 0
|   | | | `-UnaryExprOrTypeTraitExpr 0x1371427e0 <col:26, col:37> 'unsigned long' contains-errors sizeof
|   | | |   `-ParenExpr 0x1371427c0 <col:32, col:37> '<dependent type>' contains-errors lvalue
|   | | |     `-RecoveryExpr 0x1371427a0 <col:33> '<dependent type>' contains-errors lvalue
|   | | |-IfStmt 0x137143770 <line:18:9, line:19:21>
|   | | | |-RecoveryExpr 0x137143708 <line:18:13, col:45> '_Bool' contains-errors
|   | | | `-ReturnStmt 0x137143760 <line:19:13, col:21>
|   | | |   `-UnaryOperator 0x137143748 <col:20, col:21> 'int' prefix '-'
|   | | |     `-IntegerLiteral 0x137143728 <col:21> 'int' 3
|   | | `-IfStmt 0x137143d38 <line:21:9, line:24:2>
|   | |   |-BinaryOperator 0x137143bc0 <line:21:13, col:20> '<dependent type>' contains-errors '%'
|   | |   | |-RecoveryExpr 0x137143ba0 <col:13> '<dependent type>' contains-errors lvalue
|   | |   | `-IntegerLiteral 0x137143b60 <col:20> 'int' 8
|   | |   `-CompoundStmt 0x137143d28 <col:23, line:24:2>
|   | `-CompoundStmt 0x137144568 <line:27:12, line:29:5>
|   |   `-BinaryOperator 0x137144548 <line:28:9, col:77> 'int' contains-errors '='
|   |     |-DeclRefExpr 0x137144300 <col:9> 'int' lvalue Var 0x1371283f0 'plenbytes' 'int'
|   |     `-CallExpr 0x137144500 <col:21, col:77> '<dependent type>' contains-errors
|   |       |-DeclRefExpr 0x137144400 <col:21> 'int ()' Function 0x137144348 'decode_prefix6' 'int ()'
|   |       |-RecoveryExpr 0x137144420 <col:36> '<dependent type>' contains-errors lvalue
|   |       |-DeclRefExpr 0x137144440 <col:41> 'const char *' lvalue ParmVar 0x1371281a8 'prefix' 'const char *'
|   |       |-RecoveryExpr 0x137144460 <col:49> '<dependent type>' contains-errors lvalue
|   |       |-DeclRefExpr 0x137144480 <col:61> 'char[4]' lvalue Var 0x137128550 'buf' 'char[4]'
|   |       `-UnaryExprOrTypeTraitExpr 0x1371444e0 <col:66, col:76> 'unsigned long' sizeof
|   |         `-ParenExpr 0x1371444c0 <col:72, col:76> 'char[4]' lvalue
|   |           `-DeclRefExpr 0x1371444a0 <col:73> 'char[4]' lvalue Var 0x137128550 'buf' 'char[4]' non_odr_use_unevaluated
|   |-CallExpr 0x137144798 <line:31:5, col:31> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x1371446b8 <col:5> 'int ()' Function 0x137144600 'ND_PRINT' 'int ()'
|   | `-ParenExpr 0x137144778 <col:14, col:30> 'char[4]' contains-errors
|   |   `-BinaryOperator 0x137144758 <col:15, col:27> 'char[4]' contains-errors ','
|   |     |-BinaryOperator 0x137144718 <col:15, col:20> 'char[4]' contains-errors ','
|   |     | |-RecoveryExpr 0x1371446d8 <col:15> '<dependent type>' contains-errors lvalue
|   |     | `-StringLiteral 0x1371446f8 <col:20> 'char[4]' lvalue "STR"
|   |     `-DeclRefExpr 0x137144738 <col:27> 'char[4]' lvalue Var 0x137128550 'buf' 'char[4]'
|   `-ReturnStmt 0x1371447f8 <line:32:5, col:12>
|     `-ImplicitCastExpr 0x1371447e0 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1371447c0 <col:12> 'int' lvalue Var 0x1371283f0 'plenbytes' 'int'
|-FunctionDecl 0x1371424d8 <line:16:9> col:9 implicit used memset 'void *(void *, int, unsigned long)' extern
| |-ParmVarDecl 0x1371425d8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x137142640 <<invalid sloc>> <invalid sloc> 'int'
| |-ParmVarDecl 0x1371426a8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x137142580 <<invalid sloc>> Implicit 900
|-FunctionDecl 0x137143808 <line:20:9> col:9 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
| |-ParmVarDecl 0x137143908 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x137143970 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1371439d8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x1371438b0 <<invalid sloc>> Implicit 882
`-FunctionDecl 0x137143db0 <line:25:2> col:2 implicit used snprintf 'int (char *, unsigned long, const char *, ...)' extern
  |-ParmVarDecl 0x137143eb0 <<invalid sloc>> <invalid sloc> 'char *'
  |-ParmVarDecl 0x137143f18 <<invalid sloc>> <invalid sloc> 'unsigned long'
  |-ParmVarDecl 0x137143f80 <<invalid sloc>> <invalid sloc> 'const char *'
  |-BuiltinAttr 0x137143e58 <<invalid sloc>> Implicit 905
  `-FormatAttr 0x137144000 <col:2> Implicit printf 3 4
