TranslationUnitDecl 0x11f855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x11f8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x11f855bd0 '__int128'
|-TypedefDecl 0x11f856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x11f855bf0 'unsigned __int128'
|-TypedefDecl 0x11f926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x11f926000 'struct __NSConstantString_tag'
|   `-Record 0x11f856580 '__NSConstantString_tag'
|-TypedefDecl 0x11f926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x11f855d90 '__SVInt8_t'
|-TypedefDecl 0x11f926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x11f855db0 '__SVInt16_t'
|-TypedefDecl 0x11f926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x11f855dd0 '__SVInt32_t'
|-TypedefDecl 0x11f9263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x11f855df0 '__SVInt64_t'
|-TypedefDecl 0x11f926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x11f855e10 '__SVUint8_t'
|-TypedefDecl 0x11f9264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x11f855e30 '__SVUint16_t'
|-TypedefDecl 0x11f926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x11f855e50 '__SVUint32_t'
|-TypedefDecl 0x11f926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x11f855e70 '__SVUint64_t'
|-TypedefDecl 0x11f9265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x11f855e90 '__SVFloat16_t'
|-TypedefDecl 0x11f926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x11f855eb0 '__SVFloat32_t'
|-TypedefDecl 0x11f9266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x11f855ed0 '__SVFloat64_t'
|-TypedefDecl 0x11f926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x11f855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x11f926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x11f855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x11f9267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x11f855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x11f926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x11f855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x11f9268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x11f855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x11f926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x11f855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x11f926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x11f855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x11f9269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x11f855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x11f926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x11f855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x11f926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x11f856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x11f926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x11f856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x11f926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x11f856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x11f926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x11f856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x11f926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x11f856090 '__clang_svint8x3_t'
|-TypedefDecl 0x11f926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x11f8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x11f926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x11f8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x11f926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x11f8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x11f926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x11f856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x11f926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x11f856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x11f926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x11f856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x11f926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x11f856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x11f926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x11f856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x11f927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x11f8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x11f927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x11f8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x11f9278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x11f8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x11f927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x11f856210 '__clang_svint8x4_t'
|-TypedefDecl 0x11f9279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x11f856230 '__clang_svint16x4_t'
|-TypedefDecl 0x11f927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x11f856250 '__clang_svint32x4_t'
|-TypedefDecl 0x11f927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x11f856270 '__clang_svint64x4_t'
|-TypedefDecl 0x11f927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x11f856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x11f927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x11f8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x11f927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x11f8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x11f927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x11f8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x11f927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x11f856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x11f927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x11f856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x11f927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x11f856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x11f927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x11f856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x11f927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x11f856390 '__SVBool_t'
|-TypedefDecl 0x11f927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x11f8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x11f927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x11f8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x11f927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x11f8563f0 '__SVCount_t'
|-TypedefDecl 0x11f927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x11f927fb0 'char *'
|   `-BuiltinType 0x11f8556b0 'char'
|-TypedefDecl 0x11f928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x11f927fb0 'char *'
|   `-BuiltinType 0x11f8556b0 'char'
|-FunctionDecl 0x11f928268 <dataset_diviso_filec/func137_vuln.c:1:1, line:33:1> line:1:5 xmkstemp 'int (char **, char *)'
| |-ParmVarDecl 0x11f928108 <col:14, col:21> col:21 used tmpname 'char **'
| |-ParmVarDecl 0x11f928188 <col:30, col:36> col:36 used dir 'char *'
| `-CompoundStmt 0x1288098f8 <line:2:1, line:33:1>
|   |-DeclStmt 0x11f9283e8 <line:3:2, col:16>
|   | `-VarDecl 0x11f928380 <col:2, col:8> col:8 used localtmp 'char *'
|   |-DeclStmt 0x11f928480 <line:4:2, col:14>
|   | `-VarDecl 0x11f928418 <col:2, col:8> col:8 used tmpenv 'char *'
|   |-DeclStmt 0x11f9285c8 <line:6:2, col:12>
|   | |-VarDecl 0x11f9284c8 <col:2, col:6> col:6 used fd 'int'
|   | `-VarDecl 0x11f928548 <col:2, col:10> col:10 used rc 'int'
|   |-IfStmt 0x11f941e20 <line:9:2, line:12:24> has_else
|   | |-BinaryOperator 0x11f928658 <line:9:6, col:13> 'int' contains-errors '!='
|   | | |-DeclRefExpr 0x11f9285e0 <col:6> 'char *' lvalue ParmVar 0x11f928188 'dir' 'char *'
|   | | `-RecoveryExpr 0x11f928638 <col:13> '<dependent type>' contains-errors lvalue
|   | |-BinaryOperator 0x11f9286d0 <line:10:3, col:12> 'char *' '='
|   | | |-DeclRefExpr 0x11f928678 <col:3> 'char *' lvalue Var 0x11f928418 'tmpenv' 'char *'
|   | | `-ImplicitCastExpr 0x11f9286b8 <col:12> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x11f928698 <col:12> 'char *' lvalue ParmVar 0x11f928188 'dir' 'char *'
|   | `-BinaryOperator 0x11f941e00 <line:12:3, col:24> 'char *' '='
|   |   |-DeclRefExpr 0x11f9286f0 <col:3> 'char *' lvalue Var 0x11f928418 'tmpenv' 'char *'
|   |   `-ImplicitCastExpr 0x11f9419c8 <col:12, col:24> 'char *' <IntegralToPointer>
|   |     `-CallExpr 0x11f941988 <col:12, col:24> 'int'
|   |       |-ImplicitCastExpr 0x11f941970 <col:12> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x11f9418b8 <col:12> 'int ()' Function 0x11f941800 'getenv' 'int ()'
|   |       `-ImplicitCastExpr 0x11f9419b0 <col:19> 'char *' <ArrayToPointerDecay>
|   |         `-StringLiteral 0x11f941920 <col:19> 'char[4]' lvalue "STR"
|   |-IfStmt 0x11f942348 <line:14:2, line:19:35> has_else
|   | |-ImplicitCastExpr 0x11f941e70 <line:14:6> 'char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x11f941e50 <col:6> 'char *' lvalue Var 0x11f928418 'tmpenv' 'char *'
|   | |-BinaryOperator 0x11f942160 <line:15:3, line:16:35> 'int' contains-errors '='
|   | | |-DeclRefExpr 0x11f941e88 <line:15:3> 'int' lvalue Var 0x11f928548 'rc' 'int'
|   | | `-CallExpr 0x11f942120 <col:8, line:16:35> '<dependent type>' contains-errors
|   | |   |-DeclRefExpr 0x11f941ff0 <line:15:8> 'int ()' Function 0x11f941ed0 'asprintf' 'int ()'
|   | |   |-UnaryOperator 0x11f942030 <col:17, col:18> 'char **' prefix '&' cannot overflow
|   | |   | `-DeclRefExpr 0x11f942010 <col:18> 'char *' lvalue Var 0x11f928380 'localtmp' 'char *'
|   | |   |-StringLiteral 0x11f942048 <col:28> 'char[4]' lvalue "STR"
|   | |   |-DeclRefExpr 0x11f942068 <col:35> 'char *' lvalue Var 0x11f928418 'tmpenv' 'char *'
|   | |   `-RecoveryExpr 0x11f942100 <line:16:6> '<dependent type>' contains-errors lvalue
|   | `-BinaryOperator 0x11f942328 <line:18:3, line:19:35> 'int' contains-errors '='
|   |   |-DeclRefExpr 0x11f942180 <line:18:3> 'int' lvalue Var 0x11f928548 'rc' 'int'
|   |   `-CallExpr 0x11f9422e8 <col:8, line:19:35> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x11f9421a0 <line:18:8> 'int ()' Function 0x11f941ed0 'asprintf' 'int ()'
|   |     |-UnaryOperator 0x11f9421e0 <col:17, col:18> 'char **' prefix '&' cannot overflow
|   |     | `-DeclRefExpr 0x11f9421c0 <col:18> 'char *' lvalue Var 0x11f928380 'localtmp' 'char *'
|   |     |-StringLiteral 0x11f9421f8 <col:28> 'char[4]' lvalue "STR"
|   |     |-RecoveryExpr 0x11f9422a8 <col:35> '<dependent type>' contains-errors lvalue
|   |     `-RecoveryExpr 0x11f9422c8 <line:19:6> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x11f942438 <line:21:2, line:22:11>
|   | |-BinaryOperator 0x11f9423d0 <line:21:6, col:11> 'int' '<'
|   | | |-ImplicitCastExpr 0x11f9423b8 <col:6> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x11f942378 <col:6> 'int' lvalue Var 0x11f928548 'rc' 'int'
|   | | `-IntegerLiteral 0x11f942398 <col:11> 'int' 0
|   | `-ReturnStmt 0x11f942428 <line:22:3, col:11>
|   |   `-UnaryOperator 0x11f942410 <col:10, col:11> 'int' prefix '-'
|   |     `-IntegerLiteral 0x11f9423f0 <col:11> 'int' 1
|   |-BinaryOperator 0x128809330 <line:25:2, col:57> 'int' contains-errors '='
|   | |-DeclRefExpr 0x11f9425b8 <col:2> 'int' lvalue Var 0x11f9284c8 'fd' 'int'
|   | `-CallExpr 0x128809300 <col:7, col:57> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x11f9426b8 <col:7> 'int ()' Function 0x11f942600 'mkostemp' 'int ()'
|   |   |-DeclRefExpr 0x11f9426d8 <col:16> 'char *' lvalue Var 0x11f928380 'localtmp' 'char *'
|   |   `-BinaryOperator 0x1288092e0 <col:26, col:48> '<dependent type>' contains-errors '|'
|   |     |-BinaryOperator 0x1288092a0 <col:26, col:41> '<dependent type>' contains-errors '|'
|   |     | |-BinaryOperator 0x128809260 <col:26, col:33> '<dependent type>' contains-errors '|'
|   |     | | |-RecoveryExpr 0x128809220 <col:26> '<dependent type>' contains-errors lvalue
|   |     | | `-RecoveryExpr 0x128809240 <col:33> '<dependent type>' contains-errors lvalue
|   |     | `-RecoveryExpr 0x128809280 <col:41> '<dependent type>' contains-errors lvalue
|   |     `-RecoveryExpr 0x1288092c0 <col:48> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x1288093d0 <line:26:2, col:16> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x128809350 <col:2> 'int ()' Function 0x11f942480 'umask' 'int ()'
|   | `-RecoveryExpr 0x1288093b0 <col:8> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x1288097e8 <line:27:2, line:30:2>
|   | |-BinaryOperator 0x128809468 <line:27:6, col:13> 'int' '=='
|   | | |-ImplicitCastExpr 0x128809450 <col:6> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1288093f8 <col:6> 'int' lvalue Var 0x11f9284c8 'fd' 'int'
|   | | `-UnaryOperator 0x128809438 <col:12, col:13> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x128809418 <col:13> 'int' 1
|   | `-CompoundStmt 0x1288097c8 <col:16, line:30:2>
|   |   |-CallExpr 0x1288096d8 <line:28:3, col:16> 'void'
|   |   | |-ImplicitCastExpr 0x1288096c0 <col:3> 'void (*)(void *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x128809638 <col:3> 'void (void *)' Function 0x1288094c8 'free' 'void (void *)'
|   |   | `-ImplicitCastExpr 0x128809718 <col:8> 'void *' <BitCast>
|   |   |   `-ImplicitCastExpr 0x128809700 <col:8> 'char *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x128809658 <col:8> 'char *' lvalue Var 0x11f928380 'localtmp' 'char *'
|   |   `-BinaryOperator 0x1288097a8 <line:29:3, col:14> 'char *' contains-errors '='
|   |     |-DeclRefExpr 0x128809730 <col:3> 'char *' lvalue Var 0x11f928380 'localtmp' 'char *'
|   |     `-RecoveryExpr 0x128809788 <col:14> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x128809890 <line:31:2, col:13> 'char *' '='
|   | |-UnaryOperator 0x128809840 <col:2, col:3> 'char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x128809828 <col:3> 'char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x128809808 <col:3> 'char **' lvalue ParmVar 0x11f928108 'tmpname' 'char **'
|   | `-ImplicitCastExpr 0x128809878 <col:13> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x128809858 <col:13> 'char *' lvalue Var 0x11f928380 'localtmp' 'char *'
|   `-ReturnStmt 0x1288098e8 <line:32:2, col:9>
|     `-ImplicitCastExpr 0x1288098d0 <col:9> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1288098b0 <col:9> 'int' lvalue Var 0x11f9284c8 'fd' 'int'
`-FunctionDecl 0x1288094c8 <line:28:3> col:3 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x1288095c8 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x128809570 <<invalid sloc>> Implicit 873
