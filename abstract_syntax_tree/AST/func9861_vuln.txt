TranslationUnitDecl 0x14a855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14a8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14a855bd0 '__int128'
|-TypedefDecl 0x14a856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14a855bf0 'unsigned __int128'
|-TypedefDecl 0x14b00be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14b00bc00 'struct __NSConstantString_tag'
|   `-Record 0x14a856580 '__NSConstantString_tag'
|-TypedefDecl 0x14b00be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14a855d90 '__SVInt8_t'
|-TypedefDecl 0x14b00bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14a855db0 '__SVInt16_t'
|-TypedefDecl 0x14b00bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14a855dd0 '__SVInt32_t'
|-TypedefDecl 0x14b00bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14a855df0 '__SVInt64_t'
|-TypedefDecl 0x14b00c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14a855e10 '__SVUint8_t'
|-TypedefDecl 0x14b00c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14a855e30 '__SVUint16_t'
|-TypedefDecl 0x14b00c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14a855e50 '__SVUint32_t'
|-TypedefDecl 0x14b00c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14a855e70 '__SVUint64_t'
|-TypedefDecl 0x14b00c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14a855e90 '__SVFloat16_t'
|-TypedefDecl 0x14b00c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14a855eb0 '__SVFloat32_t'
|-TypedefDecl 0x14b00c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14a855ed0 '__SVFloat64_t'
|-TypedefDecl 0x14b00c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14a855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14b00c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14a855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14b00c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14a855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14b00c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14a855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14b00c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14a855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14b00c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14a855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14b00c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14a855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14b00c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14a855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14b00c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14a855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14b00c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14a856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14b00c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14a856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14b00c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14a856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14b00c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14a856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14b00c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14a856090 '__clang_svint8x3_t'
|-TypedefDecl 0x14b00c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14a8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14b00c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14a8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14b00c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14a8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14b00c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14a856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14b00ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14a856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14b00cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14a856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14b00cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14a856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14b00cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14a856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14b00d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14a8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14b00d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14a8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14b00d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14a8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14b00d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14a856210 '__clang_svint8x4_t'
|-TypedefDecl 0x14b00d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14a856230 '__clang_svint16x4_t'
|-TypedefDecl 0x14b00d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14a856250 '__clang_svint32x4_t'
|-TypedefDecl 0x14b00d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14a856270 '__clang_svint64x4_t'
|-TypedefDecl 0x14b00d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14a856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14b00d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14a8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14b00d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14a8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14b00d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14a8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14b00d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14a856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14b00d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14a856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14b00d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14a856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14b00d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14a856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14b00da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14a856390 '__SVBool_t'
|-TypedefDecl 0x14b00da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14a8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14b00dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14a8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14b00db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14a8563f0 '__SVCount_t'
|-TypedefDecl 0x14b00dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14b00dbb0 'char *'
|   `-BuiltinType 0x14a8556b0 'char'
|-TypedefDecl 0x14b00dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14b00dbb0 'char *'
|   `-BuiltinType 0x14a8556b0 'char'
`-FunctionDecl 0x14b00de88 <dataset_diviso_filec/func9861_vuln.c:1:1, line:68:1> line:1:14 invalid Eval 'int (int *, int *)'
  |-ParmVarDecl 0x14b00dd28 <col:19, col:34> col:34 referenced invalid context 'int *'
  |-ParmVarDecl 0x14b00dda8 <col:43, col:55> col:55 invalid node 'int *'
  `-CompoundStmt 0x14a925720 <col:61, line:68:1>
    |-ImplicitCastExpr 0x14b00e058 <line:3:3> '<dependent type>' contains-errors <LValueToRValue>
    | `-RecoveryExpr 0x14b00e030 <col:3> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x14b00e010 <col:3> 'int *' lvalue ParmVar 0x14b00dd28 'context' 'int *'
    |-CallExpr 0x14b00e230 <col:13, col:37> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14b00e1d0 <col:13> 'int ()' Function 0x14b00e118 'op_context' 'int ()'
    | |-RecoveryExpr 0x14b00e1f0 <col:24> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x14b00e210 <col:33> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14a923578 <line:4:3, line:6:3>
    | |-BinaryOperator 0x14a9234f8 <line:4:7, col:54> 'int' contains-errors '&&'
    | | |-CallExpr 0x14a9233e8 <col:7, col:40> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x14b00e340 <col:7> 'int ()' Function 0x14b00e288 'IsConstantTensor' 'int ()'
    | | | `-RecoveryExpr 0x14a9233c0 <col:24, col:35> '<dependent type>' contains-errors lvalue
    | | |   `-DeclRefExpr 0x14b00e360 <col:24> 'int ()' Function 0x14b00e118 'op_context' 'int ()'
    | | `-CXXDependentScopeMemberExpr 0x14a9234b0 <col:45, col:54> '<dependent type>' contains-errors lvalue ->float_input_initialized
    | |   `-RecoveryExpr 0x14a923490 <col:45> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x14a923560 <col:79, line:6:3>
    |   `-ReturnStmt 0x14a923550 <line:5:5, col:12>
    |     `-RecoveryExpr 0x14a923530 <col:12> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x14a923800 <line:10:3, col:24>
    | `-VarDecl 0x14a923760 <col:3, col:17> col:8 used status 'int' auto cinit
    |   `-RecoveryExpr 0x14a9237e0 <col:17> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14a9238b8 <line:12:3, line:14:3>
    | |-RecoveryExpr 0x14a923838 <line:12:7, col:17> '_Bool' contains-errors
    | `-CompoundStmt 0x14a9238a0 <col:28, line:14:3>
    |   `-ReturnStmt 0x14a923890 <line:13:5, col:12>
    |     `-ImplicitCastExpr 0x14a923878 <col:12> 'int' contains-errors <LValueToRValue>
    |       `-DeclRefExpr 0x14a923858 <col:12> 'int' contains-errors lvalue Var 0x14a923760 'status' 'int'
    |-IfStmt 0x14a923978 <line:16:3, line:18:3>
    | |-CallExpr 0x14a923940 <line:16:7, col:40> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x14a9238d8 <col:7> 'int ()' Function 0x14b00e288 'IsConstantTensor' 'int ()'
    | | `-RecoveryExpr 0x14a923918 <col:24, col:35> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x14a9238f8 <col:24> 'int ()' Function 0x14b00e118 'op_context' 'int ()'
    | `-CompoundStmt 0x14a923968 <col:43, line:18:3>
    |-IfStmt 0x14a924dc8 <line:21:3, line:47:3>
    | |-RecoveryExpr 0x14a9239b8 <line:21:7, col:28> '_Bool' contains-errors
    | `-CompoundStmt 0x14a924d88 <col:33, line:47:3>
    |   |-ForStmt 0x14a923e98 <line:25:5, line:29:5>
    |   | |-DeclStmt 0x14a923b98 <line:25:10, col:19>
    |   | | `-VarDecl 0x14a923b10 <col:10, col:18> col:14 used i 'int' cinit
    |   | |   `-IntegerLiteral 0x14a923b78 <col:18> 'int' 0
    |   | |-<<<NULL>>>
    |   | |-BinaryOperator 0x14a923c60 <col:21, col:51> 'int' contains-errors '<'
    |   | | |-DeclRefExpr 0x14a923bb0 <col:21> 'int' lvalue Var 0x14a923b10 'i' 'int'
    |   | | `-CallExpr 0x14a923c38 <col:25, col:51> '<dependent type>' contains-errors
    |   | |   |-DeclRefExpr 0x14a923bd0 <col:25> 'int ()' Function 0x14a923a00 'NumElements' 'int ()'
    |   | |   `-RecoveryExpr 0x14a923c10 <col:37, col:48> '<dependent type>' contains-errors lvalue
    |   | |     `-DeclRefExpr 0x14a923bf0 <col:37> 'int ()' Function 0x14b00e118 'op_context' 'int ()'
    |   | |-UnaryOperator 0x14a923ca0 <col:54, col:56> 'int' prefix '++'
    |   | | `-DeclRefExpr 0x14a923c80 <col:56> 'int' lvalue Var 0x14a923b10 'i' 'int'
    |   | `-CompoundStmt 0x14a923e78 <col:59, line:29:5>
    |   |   |-DeclStmt 0x14a923d38 <line:26:7, col:59>
    |   |   | `-VarDecl 0x14a923cd0 <col:7, col:13> col:13 used dequant 'float'
    |   |   `-DeclStmt 0x14a923dd0 <line:27:7, col:64>
    |   |     `-VarDecl 0x14a923d68 <col:7, col:13> col:13 used reference 'float'
    |   |-DeclStmt 0x14a923f50 <line:30:5, line:31:72>
    |   | `-VarDecl 0x14a923ee8 <line:30:5, col:12> col:12 used mean 'double'
    |   |-DeclStmt 0x14a924820 <line:32:5, col:26>
    |   | `-VarDecl 0x14a923f80 <col:5, col:23> col:12 used max_diff 'double' cinit
    |   |   `-FloatingLiteral 0x14a924800 <col:23> 'double' 0.000000e+00
    |   |-DeclStmt 0x14a9248b8 <line:38:5, line:39:72>
    |   | `-VarDecl 0x14a924850 <line:38:5, col:12> col:12 sq_sum 'double'
    |   |-DeclStmt 0x14a924988 <line:40:5, col:21>
    |   | `-VarDecl 0x14a9248e8 <col:5, col:18> col:12 used std 'double' cinit
    |   |   `-ImplicitCastExpr 0x14a924970 <col:18> 'double' <LValueToRValue>
    |   |     `-DeclRefExpr 0x14a924950 <col:18> 'double' lvalue Var 0x14a9248e8 'std' 'double'
    |   `-CallExpr 0x14a924d30 <line:41:5, line:45:44> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x14a924a80 <line:41:5> 'int ()' Function 0x14a9249c8 'TF_LITE_KERNEL_LOG' 'int ()'
    |     |-RecoveryExpr 0x14a924aa0 <line:42:9> '<dependent type>' contains-errors lvalue
    |     |-StringLiteral 0x14a924b00 <line:43:9> 'char[4]' lvalue "STR"
    |     |-DeclRefExpr 0x14a924b20 <col:16> 'double' lvalue Var 0x14a9248e8 'std' 'double'
    |     |-DeclRefExpr 0x14a924b40 <line:44:9> 'double' lvalue Var 0x14a923ee8 'mean' 'double'
    |     |-DeclRefExpr 0x14a924b60 <col:15> 'double' lvalue Var 0x14a923f80 'max_diff' 'double'
    |     |-CXXDependentScopeMemberExpr 0x14a924c10 <col:25, col:50> '<dependent type>' contains-errors lvalue .scale
    |     | `-CXXDependentScopeMemberExpr 0x14a924bc8 <col:25, col:43> '<dependent type>' contains-errors lvalue ->params
    |     |   `-RecoveryExpr 0x14a924ba0 <col:25, col:36> '<dependent type>' contains-errors lvalue
    |     |     `-DeclRefExpr 0x14a924b80 <col:25> 'int ()' Function 0x14b00e118 'op_context' 'int ()'
    |     `-CXXDependentScopeMemberExpr 0x14a924ce8 <line:45:9, col:34> '<dependent type>' contains-errors lvalue .zero_point
    |       `-CXXDependentScopeMemberExpr 0x14a924ca0 <col:9, col:27> '<dependent type>' contains-errors lvalue ->params
    |         `-RecoveryExpr 0x14a924c78 <col:9, col:20> '<dependent type>' contains-errors lvalue
    |           `-DeclRefExpr 0x14a924c58 <col:9> 'int ()' Function 0x14b00e118 'op_context' 'int ()'
    |-DeclStmt 0x14a924f40 <line:50:3, col:70>
    | `-VarDecl 0x14a924e00 <col:3, col:8> col:8 used max_diff 'int' auto
    `-ForStmt 0x14a9256e8 <line:51:3, line:66:3>
      |-DeclStmt 0x14a924ff8 <line:51:8, col:17>
      | `-VarDecl 0x14a924f70 <col:8, col:16> col:12 used i 'int' cinit
      |   `-IntegerLiteral 0x14a924fd8 <col:16> 'int' 0
      |-<<<NULL>>>
      |-BinaryOperator 0x14a9250c0 <col:19, col:49> 'int' contains-errors '<'
      | |-DeclRefExpr 0x14a925010 <col:19> 'int' lvalue Var 0x14a924f70 'i' 'int'
      | `-CallExpr 0x14a925098 <col:23, col:49> '<dependent type>' contains-errors
      |   |-DeclRefExpr 0x14a925030 <col:23> 'int ()' Function 0x14a923a00 'NumElements' 'int ()'
      |   `-RecoveryExpr 0x14a925070 <col:35, col:46> '<dependent type>' contains-errors lvalue
      |     `-DeclRefExpr 0x14a925050 <col:35> 'int ()' Function 0x14b00e118 'op_context' 'int ()'
      |-UnaryOperator 0x14a925100 <col:52, col:54> 'int' prefix '++'
      | `-DeclRefExpr 0x14a9250e0 <col:54> 'int' lvalue Var 0x14a924f70 'i' 'int'
      `-CompoundStmt 0x14a9256b8 <col:57, line:66:3>
        |-DeclStmt 0x14a925198 <line:53:5, col:57>
        | `-VarDecl 0x14a925130 <col:5, col:11> col:11 used dequant 'float'
        |-DeclStmt 0x14a925230 <line:54:5, col:62>
        | `-VarDecl 0x14a9251c8 <col:5, col:11> col:11 used reference 'float'
        |-DeclStmt 0x14a9252c8 <line:55:5, col:47>
        | `-VarDecl 0x14a925260 <col:5, col:11> col:11 used diff 'float'
        `-IfStmt 0x14a925698 <line:56:5, line:65:5>
          |-BinaryOperator 0x14a925368 <line:56:9, col:16> 'int' '>'
          | |-ImplicitCastExpr 0x14a925320 <col:9> 'float' <LValueToRValue>
          | | `-DeclRefExpr 0x14a9252e0 <col:9> 'float' lvalue Var 0x14a925260 'diff' 'float'
          | `-ImplicitCastExpr 0x14a925350 <col:16> 'float' <IntegralToFloating>
          |   `-ImplicitCastExpr 0x14a925338 <col:16> 'int' <LValueToRValue>
          |     `-DeclRefExpr 0x14a925300 <col:16> 'int' lvalue Var 0x14a924e00 'max_diff' 'int'
          `-CompoundStmt 0x14a925688 <col:26, line:65:5>
