TranslationUnitDecl 0x13f055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13f0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13f055bd0 '__int128'
|-TypedefDecl 0x13f056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13f055bf0 'unsigned __int128'
|-TypedefDecl 0x13f80be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13f80bc00 'struct __NSConstantString_tag'
|   `-Record 0x13f056580 '__NSConstantString_tag'
|-TypedefDecl 0x13f80be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13f055d90 '__SVInt8_t'
|-TypedefDecl 0x13f80bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13f055db0 '__SVInt16_t'
|-TypedefDecl 0x13f80bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13f055dd0 '__SVInt32_t'
|-TypedefDecl 0x13f80bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13f055df0 '__SVInt64_t'
|-TypedefDecl 0x13f80c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13f055e10 '__SVUint8_t'
|-TypedefDecl 0x13f80c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13f055e30 '__SVUint16_t'
|-TypedefDecl 0x13f80c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13f055e50 '__SVUint32_t'
|-TypedefDecl 0x13f80c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13f055e70 '__SVUint64_t'
|-TypedefDecl 0x13f80c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13f055e90 '__SVFloat16_t'
|-TypedefDecl 0x13f80c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13f055eb0 '__SVFloat32_t'
|-TypedefDecl 0x13f80c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13f055ed0 '__SVFloat64_t'
|-TypedefDecl 0x13f80c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13f055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13f80c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13f055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13f80c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13f055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13f80c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13f055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13f80c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13f055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13f80c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13f055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13f80c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13f055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13f80c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13f055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13f80c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13f055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13f80c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13f056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13f80c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13f056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13f80c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13f056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13f80c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13f056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13f80c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13f056090 '__clang_svint8x3_t'
|-TypedefDecl 0x13f80c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13f0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13f80c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13f0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13f80c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13f0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13f80c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13f056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13f80ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13f056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13f80cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13f056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13f80cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13f056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13f80cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13f056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13f80d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13f0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13f80d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13f0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13f80d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13f0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13f80d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13f056210 '__clang_svint8x4_t'
|-TypedefDecl 0x13f80d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13f056230 '__clang_svint16x4_t'
|-TypedefDecl 0x13f80d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13f056250 '__clang_svint32x4_t'
|-TypedefDecl 0x13f80d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13f056270 '__clang_svint64x4_t'
|-TypedefDecl 0x13f80d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13f056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13f80d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13f0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13f80d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13f0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13f80d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13f0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13f80d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13f056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13f80d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13f056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13f80d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13f056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13f80d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13f056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13f80da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13f056390 '__SVBool_t'
|-TypedefDecl 0x13f80da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13f0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13f80dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13f0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13f80db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13f0563f0 '__SVCount_t'
|-TypedefDecl 0x13f80dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13f80dbb0 'char *'
|   `-BuiltinType 0x13f0556b0 'char'
|-TypedefDecl 0x13f80dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13f80dbb0 'char *'
|   `-BuiltinType 0x13f0556b0 'char'
`-FunctionDecl 0x13f13b7b8 <dataset_diviso_filec/func4361_nonvuln.c:1:1, line:34:1> line:1:12 invalid check_reg_arg 'int (struct bpf_verifier_env *, int, enum reg_arg_type)' static
  |-ParmVarDecl 0x13f80e248 <col:26, col:51> col:51 used env 'struct bpf_verifier_env *'
  |-ParmVarDecl 0x13f80e2e0 <col:56, col:60> col:60 invalid regno 'int'
  |-ParmVarDecl 0x13f13b678 <line:2:5, col:23> col:23 invalid t 'enum reg_arg_type'
  `-CompoundStmt 0x13f13d4a8 <line:3:1, line:34:1>
    |-DeclStmt 0x13f13bac8 <line:4:2, col:52>
    | |-RecordDecl 0x13f13b878 <col:2, col:9> col:9 struct bpf_verifier_state
    | `-VarDecl 0x13f13b9e8 <col:2, col:43> col:29 used vstate 'struct bpf_verifier_state *' cinit
    |   `-RecoveryExpr 0x13f13ba88 <col:38, col:43> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x13f13ba50 <col:38> 'struct bpf_verifier_env *' lvalue ParmVar 0x13f80e248 'env' 'struct bpf_verifier_env *'
    |-DeclStmt 0x13f13bdd8 <line:5:2, col:64>
    | |-RecordDecl 0x13f13bae0 <col:2, col:9> col:9 struct bpf_func_state
    | `-VarDecl 0x13f13bc48 <col:2, col:63> col:25 used state 'struct bpf_func_state *' cinit
    |   `-ArraySubscriptExpr 0x13f13bda0 <col:33, col:63> '<dependent type>' contains-errors lvalue
    |     |-ImplicitCastExpr 0x13f13bd70 <col:33, col:41> '<dependent type>' contains-errors <LValueToRValue>
    |     | `-RecoveryExpr 0x13f13bce8 <col:33, col:41> '<dependent type>' contains-errors lvalue
    |     |   `-DeclRefExpr 0x13f13bcb0 <col:33> 'struct bpf_verifier_state *' contains-errors lvalue Var 0x13f13b9e8 'vstate' 'struct bpf_verifier_state *'
    |     `-ImplicitCastExpr 0x13f13bd88 <col:47, col:55> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x13f13bd48 <col:47, col:55> '<dependent type>' contains-errors lvalue
    |         `-DeclRefExpr 0x13f13bd10 <col:47> 'struct bpf_verifier_state *' contains-errors lvalue Var 0x13f13b9e8 'vstate' 'struct bpf_verifier_state *'
    |-DeclStmt 0x13f13c038 <line:6:2, col:42>
    | |-RecordDecl 0x13f13bdf0 <col:2, col:9> col:9 struct bpf_reg_state
    | `-VarDecl 0x13f13bf58 <col:2, col:38> col:24 used regs 'struct bpf_reg_state *' cinit
    |   `-RecoveryExpr 0x13f13bff8 <col:31, col:38> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x13f13bfc0 <col:31> 'struct bpf_func_state *' contains-errors lvalue Var 0x13f13bc48 'state' 'struct bpf_func_state *'
    |-IfStmt 0x13f13c400 <line:8:2, line:11:2>
    | |-BinaryOperator 0x13f13c0c8 <line:8:6, col:15> 'int' contains-errors '>='
    | | |-RecoveryExpr 0x13f13c050 <col:6> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x13f13c0a8 <col:15> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x13f13c3e0 <col:28, line:11:2>
    |   |-CallExpr 0x13f13c300 <line:9:3, col:28> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x13f13c240 <col:3> 'int ()' Function 0x13f13c188 'verbose' 'int ()'
    |   | |-DeclRefExpr 0x13f13c260 <col:11> 'struct bpf_verifier_env *' lvalue ParmVar 0x13f80e248 'env' 'struct bpf_verifier_env *'
    |   | |-StringLiteral 0x13f13c2c0 <col:16> 'char[4]' lvalue "STR"
    |   | `-RecoveryExpr 0x13f13c2e0 <col:23> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x13f13c3d0 <line:10:3, col:11>
    |     `-UnaryOperator 0x13f13c3b8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       `-ImplicitCastExpr 0x13f13c3a0 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |         `-RecoveryExpr 0x13f13c380 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x13f13d448 <line:13:2, line:32:2> has_else
    | |-BinaryOperator 0x13f13c498 <line:13:6, col:11> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x13f13c420 <col:6> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x13f13c478 <col:11> '<dependent type>' contains-errors lvalue
    | |-CompoundStmt 0x13f13cc80 <col:19, line:23:2>
    | | |-IfStmt 0x13f13c8c0 <line:15:3, line:18:3>
    | | | |-BinaryOperator 0x13f13c720 <line:15:7, col:27> 'int' contains-errors '=='
    | | | | |-CXXDependentScopeMemberExpr 0x13f13c6b8 <col:7, col:19> '<dependent type>' contains-errors lvalue .type
    | | | | | `-ArraySubscriptExpr 0x13f13c698 <col:7, col:17> '<dependent type>' contains-errors lvalue
    | | | | |   |-ImplicitCastExpr 0x13f13c668 <col:7> 'struct bpf_reg_state *' contains-errors <LValueToRValue>
    | | | | |   | `-DeclRefExpr 0x13f13c4b8 <col:7> 'struct bpf_reg_state *' contains-errors lvalue Var 0x13f13bf58 'regs' 'struct bpf_reg_state *'
    | | | | |   `-ImplicitCastExpr 0x13f13c680 <col:12> '<dependent type>' contains-errors <LValueToRValue>
    | | | | |     `-RecoveryExpr 0x13f13c4d8 <col:12> '<dependent type>' contains-errors lvalue
    | | | | `-RecoveryExpr 0x13f13c700 <col:27> '<dependent type>' contains-errors lvalue
    | | | `-CompoundStmt 0x13f13c8a0 <col:37, line:18:3>
    | | |   |-CallExpr 0x13f13c7c0 <line:16:4, col:29> '<dependent type>' contains-errors
    | | |   | |-DeclRefExpr 0x13f13c740 <col:4> 'int ()' Function 0x13f13c188 'verbose' 'int ()'
    | | |   | |-DeclRefExpr 0x13f13c760 <col:12> 'struct bpf_verifier_env *' lvalue ParmVar 0x13f80e248 'env' 'struct bpf_verifier_env *'
    | | |   | |-StringLiteral 0x13f13c780 <col:17> 'char[4]' lvalue "STR"
    | | |   | `-RecoveryExpr 0x13f13c7a0 <col:24> '<dependent type>' contains-errors lvalue
    | | |   `-ReturnStmt 0x13f13c890 <line:17:4, col:12>
    | | |     `-UnaryOperator 0x13f13c878 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow
    | | |       `-ImplicitCastExpr 0x13f13c860 <col:12> '<dependent type>' contains-errors <LValueToRValue>
    | | |         `-RecoveryExpr 0x13f13c840 <col:12> '<dependent type>' contains-errors lvalue
    | | `-IfStmt 0x13f13cc60 <line:20:3, line:22:29>
    | |   |-BinaryOperator 0x13f13c958 <line:20:7, col:16> 'int' contains-errors '!='
    | |   | |-RecoveryExpr 0x13f13c8e0 <col:7> '<dependent type>' contains-errors lvalue
    | |   | `-RecoveryExpr 0x13f13c938 <col:16> '<dependent type>' contains-errors lvalue
    | |   `-ReturnStmt 0x13f13cc50 <line:21:4, line:22:29>
    | |     `-CallExpr 0x13f13cc18 <line:21:11, line:22:29> '<dependent type>' contains-errors
    | |       |-DeclRefExpr 0x13f13ca58 <line:21:11> 'int ()' Function 0x13f13c9a0 'mark_reg_read' 'int ()'
    | |       |-DeclRefExpr 0x13f13ca78 <col:25> 'struct bpf_verifier_env *' lvalue ParmVar 0x13f80e248 'env' 'struct bpf_verifier_env *'
    | |       |-UnaryOperator 0x13f13cb28 <col:30, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |       | `-ArraySubscriptExpr 0x13f13cb08 <col:31, col:41> '<dependent type>' contains-errors lvalue
    | |       |   |-ImplicitCastExpr 0x13f13cad8 <col:31> 'struct bpf_reg_state *' contains-errors <LValueToRValue>
    | |       |   | `-DeclRefExpr 0x13f13ca98 <col:31> 'struct bpf_reg_state *' contains-errors lvalue Var 0x13f13bf58 'regs' 'struct bpf_reg_state *'
    | |       |   `-ImplicitCastExpr 0x13f13caf0 <col:36> '<dependent type>' contains-errors <LValueToRValue>
    | |       |     `-RecoveryExpr 0x13f13cab8 <col:36> '<dependent type>' contains-errors lvalue
    | |       `-CXXDependentScopeMemberExpr 0x13f13cbd0 <line:22:11, col:23> '<dependent type>' contains-errors lvalue .parent
    | |         `-ArraySubscriptExpr 0x13f13cbb0 <col:11, col:21> '<dependent type>' contains-errors lvalue
    | |           |-ImplicitCastExpr 0x13f13cb80 <col:11> 'struct bpf_reg_state *' contains-errors <LValueToRValue>
    | |           | `-DeclRefExpr 0x13f13cb40 <col:11> 'struct bpf_reg_state *' contains-errors lvalue Var 0x13f13bf58 'regs' 'struct bpf_reg_state *'
    | |           `-ImplicitCastExpr 0x13f13cb98 <col:16> '<dependent type>' contains-errors <LValueToRValue>
    | |             `-RecoveryExpr 0x13f13cb60 <col:16> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x13f13d420 <line:23:9, line:32:2>
    |   |-IfStmt 0x13f13cf10 <line:25:3, line:28:3>
    |   | |-BinaryOperator 0x13f13cd18 <line:25:7, col:16> 'int' contains-errors '=='
    |   | | |-RecoveryExpr 0x13f13cca0 <col:7> '<dependent type>' contains-errors lvalue
    |   | | `-RecoveryExpr 0x13f13ccf8 <col:16> '<dependent type>' contains-errors lvalue
    |   | `-CompoundStmt 0x13f13cef0 <col:28, line:28:3>
    |   |   |-CallExpr 0x13f13cde8 <line:26:4, col:22> 'int'
    |   |   | |-ImplicitCastExpr 0x13f13cdd0 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |   |   | | `-DeclRefExpr 0x13f13cd38 <col:4> 'int ()' Function 0x13f13c188 'verbose' 'int ()'
    |   |   | |-ImplicitCastExpr 0x13f13ce18 <col:12> 'struct bpf_verifier_env *' <LValueToRValue>
    |   |   | | `-DeclRefExpr 0x13f13cd58 <col:12> 'struct bpf_verifier_env *' lvalue ParmVar 0x13f80e248 'env' 'struct bpf_verifier_env *'
    |   |   | `-ImplicitCastExpr 0x13f13ce30 <col:17> 'char *' <ArrayToPointerDecay>
    |   |   |   `-StringLiteral 0x13f13cd78 <col:17> 'char[4]' lvalue "STR"
    |   |   `-ReturnStmt 0x13f13cee0 <line:27:4, col:12>
    |   |     `-UnaryOperator 0x13f13cec8 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |       `-ImplicitCastExpr 0x13f13ceb0 <col:12> '<dependent type>' contains-errors <LValueToRValue>
    |   |         `-RecoveryExpr 0x13f13ce90 <col:12> '<dependent type>' contains-errors lvalue
    |   |-CompoundAssignOperator 0x13f13d1a0 <line:29:3, col:23> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   | |-CXXDependentScopeMemberExpr 0x13f13d138 <col:3, col:15> '<dependent type>' contains-errors lvalue .live
    |   | | `-ArraySubscriptExpr 0x13f13d118 <col:3, col:13> '<dependent type>' contains-errors lvalue
    |   | |   |-ImplicitCastExpr 0x13f13d0e8 <col:3> 'struct bpf_reg_state *' contains-errors <LValueToRValue>
    |   | |   | `-DeclRefExpr 0x13f13cf30 <col:3> 'struct bpf_reg_state *' contains-errors lvalue Var 0x13f13bf58 'regs' 'struct bpf_reg_state *'
    |   | |   `-ImplicitCastExpr 0x13f13d100 <col:8> '<dependent type>' contains-errors <LValueToRValue>
    |   | |     `-RecoveryExpr 0x13f13cf50 <col:8> '<dependent type>' contains-errors lvalue
    |   | `-RecoveryExpr 0x13f13d180 <col:23> '<dependent type>' contains-errors lvalue
    |   `-IfStmt 0x13f13d400 <line:30:3, line:31:37>
    |     |-BinaryOperator 0x13f13d248 <line:30:7, col:12> 'int' contains-errors '=='
    |     | |-RecoveryExpr 0x13f13d1d0 <col:7> '<dependent type>' contains-errors lvalue
    |     | `-RecoveryExpr 0x13f13d228 <col:12> '<dependent type>' contains-errors lvalue
    |     `-CallExpr 0x13f13d3c8 <line:31:4, col:37> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x13f13d348 <col:4> 'int ()' Function 0x13f13d290 'mark_reg_unknown' 'int ()'
    |       |-DeclRefExpr 0x13f13d368 <col:21> 'struct bpf_verifier_env *' lvalue ParmVar 0x13f80e248 'env' 'struct bpf_verifier_env *'
    |       |-DeclRefExpr 0x13f13d388 <col:26> 'struct bpf_reg_state *' contains-errors lvalue Var 0x13f13bf58 'regs' 'struct bpf_reg_state *'
    |       `-RecoveryExpr 0x13f13d3a8 <col:32> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x13f13d498 <line:33:2, col:9>
      `-IntegerLiteral 0x13f13d478 <col:9> 'int' 0
