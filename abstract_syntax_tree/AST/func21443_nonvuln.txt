TranslationUnitDecl 0x12d055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12d0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12d055bd0 '__int128'
|-TypedefDecl 0x12d056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12d055bf0 'unsigned __int128'
|-TypedefDecl 0x12d80be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12d80bc00 'struct __NSConstantString_tag'
|   `-Record 0x12d056580 '__NSConstantString_tag'
|-TypedefDecl 0x12d80be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12d055d90 '__SVInt8_t'
|-TypedefDecl 0x12d80bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12d055db0 '__SVInt16_t'
|-TypedefDecl 0x12d80bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12d055dd0 '__SVInt32_t'
|-TypedefDecl 0x12d80bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12d055df0 '__SVInt64_t'
|-TypedefDecl 0x12d80c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12d055e10 '__SVUint8_t'
|-TypedefDecl 0x12d80c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12d055e30 '__SVUint16_t'
|-TypedefDecl 0x12d80c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12d055e50 '__SVUint32_t'
|-TypedefDecl 0x12d80c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12d055e70 '__SVUint64_t'
|-TypedefDecl 0x12d80c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12d055e90 '__SVFloat16_t'
|-TypedefDecl 0x12d80c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12d055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12d80c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12d055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12d80c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12d055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12d80c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12d055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12d80c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12d055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12d80c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12d055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12d80c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12d055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12d80c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12d055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12d80c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12d055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12d80c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12d055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12d80c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12d055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12d80c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12d056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12d80c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12d056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12d80c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12d056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12d80c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12d056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12d80c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12d056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12d80c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12d0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12d80c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12d0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12d80c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12d0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12d80c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12d056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12d80ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12d056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12d80cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12d056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12d80cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12d056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12d80cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12d056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12d80d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12d0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12d80d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12d0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12d80d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12d0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12d80d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12d056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12d80d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12d056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12d80d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12d056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12d80d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12d056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12d80d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12d056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12d80d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12d0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12d80d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12d0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12d80d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12d0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12d80d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12d056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12d80d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12d056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12d80d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12d056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12d80d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12d056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12d80da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12d056390 '__SVBool_t'
|-TypedefDecl 0x12d80da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12d0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12d80dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12d0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12d80db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12d0563f0 '__SVCount_t'
|-TypedefDecl 0x12d80dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12d80dbb0 'char *'
|   `-BuiltinType 0x12d0556b0 'char'
|-TypedefDecl 0x12d80dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12d80dbb0 'char *'
|   `-BuiltinType 0x12d0556b0 'char'
|-FunctionDecl 0x12d80e0c8 <dataset_diviso_filec/func21443_nonvuln.c:1:1, line:26:1> line:1:12 invalid dxtory_decode_v1_rgb 'int (int *, int *, const int *, int, int, int)' static
| |-ParmVarDecl 0x12d80dd28 <col:33, col:49> col:49 referenced invalid avctx 'int *'
| |-ParmVarDecl 0x12d80dda8 <col:56, col:65> col:65 invalid pic 'int *'
| |-ParmVarDecl 0x12d80de28 <line:2:33, col:48> col:48 referenced invalid src 'const int *'
| |-ParmVarDecl 0x12d80dea8 <col:53, col:57> col:57 used src_size 'int'
| |-ParmVarDecl 0x12d80df28 <line:3:33, col:37> col:37 used id 'int'
| |-ParmVarDecl 0x12d80dfa8 <col:41, col:45> col:45 used bpp 'int'
| `-CompoundStmt 0x12d829a38 <line:4:1, line:26:1>
|   |-DeclStmt 0x12d80e220 <line:5:5, col:10>
|   | `-VarDecl 0x12d80e1b8 <col:5, col:9> col:9 used h 'int'
|   |-DeclStmt 0x12d80e2d0 <line:7:5, col:12>
|   | `-VarDecl 0x12d80e268 <col:5, col:9> col:9 used ret 'int'
|   |-IfStmt 0x12d827b48 <line:9:5, line:12:5>
|   | |-RecoveryExpr 0x12d827818 <line:9:9, col:60> '_Bool' contains-errors
|   | `-CompoundStmt 0x12d827b28 <col:65, line:12:5>
|   |   |-CallExpr 0x12d827aa8 <line:10:9, col:42> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x12d827990 <col:9> 'int ()' Function 0x12d8278d8 'av_log' 'int ()'
|   |   | |-RecoveryExpr 0x12d8279b0 <col:16> '<dependent type>' contains-errors lvalue
|   |   | |-RecoveryExpr 0x12d827a88 <col:23> '<dependent type>' contains-errors lvalue
|   |   | `-StringLiteral 0x12d827a30 <col:37> 'char[4]' lvalue "STR"
|   |   `-ReturnStmt 0x12d827b18 <line:11:9, col:16>
|   |     `-RecoveryExpr 0x12d827af8 <col:16> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x12d827c18 <line:14:5, col:22> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x12d827bb0 <col:5, col:12> '<dependent type>' contains-errors lvalue ->pix_fmt
|   | | `-RecoveryExpr 0x12d827b88 <col:5> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x12d827b68 <col:5> 'int *' lvalue ParmVar 0x12d80dd28 'avctx' 'int *'
|   | `-DeclRefExpr 0x12d827bf8 <col:22> 'int' lvalue ParmVar 0x12d80df28 'id' 'int'
|   |-IfStmt 0x12d827eb8 <line:15:5, line:16:16>
|   | |-BinaryOperator 0x12d827e50 <line:15:9, col:48> 'int' contains-errors '<'
|   | | |-ParenExpr 0x12d827e10 <col:9, col:44> 'int' contains-errors
|   | | | `-BinaryOperator 0x12d827df0 <col:10, col:43> 'int' contains-errors '='
|   | | |   |-DeclRefExpr 0x12d827c38 <col:10> 'int' lvalue Var 0x12d80e268 'ret' 'int'
|   | | |   `-CallExpr 0x12d827db8 <col:16, col:43> '<dependent type>' contains-errors
|   | | |     |-DeclRefExpr 0x12d827d38 <col:16> 'int ()' Function 0x12d827c80 'ff_get_buffer' 'int ()'
|   | | |     |-RecoveryExpr 0x12d827d58 <col:30> '<dependent type>' contains-errors lvalue
|   | | |     |-RecoveryExpr 0x12d827d78 <col:37> '<dependent type>' contains-errors lvalue
|   | | |     `-IntegerLiteral 0x12d827d98 <col:42> 'int' 0
|   | | `-IntegerLiteral 0x12d827e30 <col:48> 'int' 0
|   | `-ReturnStmt 0x12d827ea8 <line:16:9, col:16>
|   |   `-ImplicitCastExpr 0x12d827e90 <col:16> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x12d827e70 <col:16> 'int' lvalue Var 0x12d80e268 'ret' 'int'
|   |-ForStmt 0x12d8299d0 <line:19:5, line:23:5>
|   | |-BinaryOperator 0x12d827fd8 <line:19:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x12d827f98 <col:10> 'int' lvalue Var 0x12d80e1b8 'h' 'int'
|   | | `-IntegerLiteral 0x12d827fb8 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x12d828080 <col:17, col:28> 'int' contains-errors '<'
|   | | |-DeclRefExpr 0x12d827ff8 <col:17> 'int' lvalue Var 0x12d80e1b8 'h' 'int'
|   | | `-CXXDependentScopeMemberExpr 0x12d828038 <col:21, col:28> '<dependent type>' contains-errors lvalue ->height
|   | |   `-RecoveryExpr 0x12d828018 <col:21> '<dependent type>' contains-errors lvalue
|   | |-UnaryOperator 0x12d8280c0 <col:36, col:37> 'int' postfix '++'
|   | | `-DeclRefExpr 0x12d8280a0 <col:36> 'int' lvalue Var 0x12d80e1b8 'h' 'int'
|   | `-CompoundStmt 0x12d8299b0 <col:41, line:23:5>
|   |   |-CallExpr 0x12d829798 <line:20:9, col:44> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x12d8287d0 <col:9> 'void *(void *, const void *, unsigned long)' Function 0x12d828580 'memcpy' 'void *(void *, const void *, unsigned long)'
|   |   | |-RecoveryExpr 0x12d829748 <col:16> '<dependent type>' contains-errors lvalue
|   |   | |-RecoveryExpr 0x12d829618 <col:21> '<dependent type>' contains-errors lvalue
|   |   | `-BinaryOperator 0x12d8296c0 <col:26, col:41> '<dependent type>' contains-errors '*'
|   |   |   |-CXXDependentScopeMemberExpr 0x12d829658 <col:26, col:33> '<dependent type>' contains-errors lvalue ->width
|   |   |   | `-RecoveryExpr 0x12d829638 <col:26> '<dependent type>' contains-errors lvalue
|   |   |   `-DeclRefExpr 0x12d8296a0 <col:41> 'int' lvalue ParmVar 0x12d80dfa8 'bpp' 'int'
|   |   `-CompoundAssignOperator 0x12d8298c0 <line:21:9, col:31> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |     |-RecoveryExpr 0x12d8297f0 <col:9> '<dependent type>' contains-errors lvalue
|   |     | `-DeclRefExpr 0x12d8297d0 <col:9> 'const int *' lvalue ParmVar 0x12d80de28 'src' 'const int *'
|   |     `-BinaryOperator 0x12d8298a0 <col:16, col:31> '<dependent type>' contains-errors '*'
|   |       |-CXXDependentScopeMemberExpr 0x12d829838 <col:16, col:23> '<dependent type>' contains-errors lvalue ->width
|   |       | `-RecoveryExpr 0x12d829818 <col:16> '<dependent type>' contains-errors lvalue
|   |       `-DeclRefExpr 0x12d829880 <col:31> 'int' lvalue ParmVar 0x12d80dfa8 'bpp' 'int'
|   `-ReturnStmt 0x12d829a28 <line:25:5, col:12>
|     `-IntegerLiteral 0x12d829a08 <col:12> 'int' 0
`-FunctionDecl 0x12d828580 <line:20:9> col:9 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x12d828680 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x12d8286e8 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x12d828750 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x12d828628 <<invalid sloc>> Implicit 882
