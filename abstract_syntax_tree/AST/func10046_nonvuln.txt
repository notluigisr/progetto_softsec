TranslationUnitDecl 0x137055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1370564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x137055bd0 '__int128'
|-TypedefDecl 0x137056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x137055bf0 'unsigned __int128'
|-TypedefDecl 0x137126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x137126000 'struct __NSConstantString_tag'
|   `-Record 0x137056580 '__NSConstantString_tag'
|-TypedefDecl 0x137126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x137055d90 '__SVInt8_t'
|-TypedefDecl 0x137126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x137055db0 '__SVInt16_t'
|-TypedefDecl 0x137126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x137055dd0 '__SVInt32_t'
|-TypedefDecl 0x1371263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x137055df0 '__SVInt64_t'
|-TypedefDecl 0x137126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x137055e10 '__SVUint8_t'
|-TypedefDecl 0x1371264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x137055e30 '__SVUint16_t'
|-TypedefDecl 0x137126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x137055e50 '__SVUint32_t'
|-TypedefDecl 0x137126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x137055e70 '__SVUint64_t'
|-TypedefDecl 0x1371265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x137055e90 '__SVFloat16_t'
|-TypedefDecl 0x137126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x137055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1371266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x137055ed0 '__SVFloat64_t'
|-TypedefDecl 0x137126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x137055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x137126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x137055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1371267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x137055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x137126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x137055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1371268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x137055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x137126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x137055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x137126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x137055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1371269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x137055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x137126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x137055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x137126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x137056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x137126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x137056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x137126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x137056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x137126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x137056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x137126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x137056090 '__clang_svint8x3_t'
|-TypedefDecl 0x137126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1370560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x137126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1370560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x137126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1370560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x137126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x137056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x137126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x137056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x137126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x137056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x137126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x137056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x137126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x137056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x137127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1370561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x137127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1370561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1371278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1370561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x137127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x137056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1371279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x137056230 '__clang_svint16x4_t'
|-TypedefDecl 0x137127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x137056250 '__clang_svint32x4_t'
|-TypedefDecl 0x137127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x137056270 '__clang_svint64x4_t'
|-TypedefDecl 0x137127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x137056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x137127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1370562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x137127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1370562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x137127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1370562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x137127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x137056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x137127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x137056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x137127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x137056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x137127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x137056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x137127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x137056390 '__SVBool_t'
|-TypedefDecl 0x137127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1370563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x137127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1370563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x137127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1370563f0 '__SVCount_t'
|-TypedefDecl 0x137127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x137127fb0 'char *'
|   `-BuiltinType 0x1370556b0 'char'
|-TypedefDecl 0x137128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x137127fb0 'char *'
|   `-BuiltinType 0x1370556b0 'char'
`-FunctionDecl 0x1371281f8 <dataset_diviso_filec/func10046_nonvuln.c:1:1, line:24:1> line:1:1 invalid ex_smile 'int (int *)'
  |-ParmVarDecl 0x137128128 <col:10, col:19> col:19 invalid eap 'int *'
  `-CompoundStmt 0x137142d10 <line:2:1, line:24:1>
    |-DeclStmt 0x137128520 <line:3:5, line:6:6>
    | `-VarDecl 0x137128308 <line:3:5, line:6:5> line:3:18 used code 'char *[2]' static cinit
    |   `-InitListExpr 0x137128450 <col:27, line:6:5> 'char *[2]'
    |     |-ImplicitCastExpr 0x137128490 <line:4:2> 'char *' <ArrayToPointerDecay>
    |     | `-StringLiteral 0x1371283b0 <col:2> 'char[4]' lvalue "STR"
    |     `-ImplicitCastExpr 0x1371284b0 <line:5:2> 'char *' <ArrayToPointerDecay>
    |       `-StringLiteral 0x1371283d0 <col:2> 'char[4]' lvalue "STR"
    |-DeclStmt 0x1371285b8 <line:7:5, col:12>
    | `-VarDecl 0x137128550 <col:5, col:11> col:11 used p 'char *'
    |-DeclStmt 0x137128650 <line:8:5, col:10>
    | `-VarDecl 0x1371285e8 <col:5, col:9> col:9 used n 'int'
    |-DeclStmt 0x1371286e8 <line:9:5, col:10>
    | `-VarDecl 0x137128680 <col:5, col:9> col:9 used i 'int'
    |-CallExpr 0x137141928 <line:11:5, col:15> 'int'
    | `-ImplicitCastExpr 0x137141910 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x1371418b8 <col:5> 'int ()' Function 0x137141800 'msg_start' 'int ()'
    |-CallExpr 0x137141a78 <line:12:5, col:21> 'int'
    | |-ImplicitCastExpr 0x137141a60 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x137141a28 <col:5> 'int ()' Function 0x137141970 'msg_putchar' 'int ()'
    | `-CharacterLiteral 0x137141a48 <col:17> 'int' 10
    |-ForStmt 0x1371427a0 <line:13:5, line:22:18>
    | |-BinaryOperator 0x137141ae0 <line:13:10, col:14> 'int' '='
    | | |-DeclRefExpr 0x137141aa0 <col:10> 'int' lvalue Var 0x137128680 'i' 'int'
    | | `-IntegerLiteral 0x137141ac0 <col:14> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x137141b58 <col:17, col:21> 'int' '<'
    | | |-ImplicitCastExpr 0x137141b40 <col:17> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x137141b00 <col:17> 'int' lvalue Var 0x137128680 'i' 'int'
    | | `-IntegerLiteral 0x137141b20 <col:21> 'int' 2
    | |-UnaryOperator 0x137141b98 <col:24, col:26> 'int' prefix '++'
    | | `-DeclRefExpr 0x137141b78 <col:26> 'int' lvalue Var 0x137128680 'i' 'int'
    | `-ForStmt 0x137142768 <line:14:2, line:22:18>
    |   |-BinaryOperator 0x137141ca8 <line:14:7, col:17> 'char *' '='
    |   | |-DeclRefExpr 0x137141bb0 <col:7> 'char *' lvalue Var 0x137128550 'p' 'char *'
    |   | `-ImplicitCastExpr 0x137141c90 <col:11, col:17> 'char *' <LValueToRValue>
    |   |   `-ArraySubscriptExpr 0x137141c70 <col:11, col:17> 'char *' lvalue
    |   |     |-ImplicitCastExpr 0x137141c40 <col:11> 'char **' <ArrayToPointerDecay>
    |   |     | `-DeclRefExpr 0x137141bd0 <col:11> 'char *[2]' lvalue Var 0x137128308 'code' 'char *[2]'
    |   |     `-ImplicitCastExpr 0x137141c58 <col:16> 'int' <LValueToRValue>
    |   |       `-DeclRefExpr 0x137141bf0 <col:16> 'int' lvalue Var 0x137128680 'i' 'int'
    |   |-<<<NULL>>>
    |   |-BinaryOperator 0x137141dd0 <col:20, col:26> 'int' contains-errors '!='
    |   | |-UnaryOperator 0x137141d98 <col:20, col:21> 'char' lvalue prefix '*' cannot overflow
    |   | | `-ImplicitCastExpr 0x137141d80 <col:21> 'char *' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x137141cc8 <col:21> 'char *' lvalue Var 0x137128550 'p' 'char *'
    |   | `-RecoveryExpr 0x137141db0 <col:26> '<dependent type>' contains-errors lvalue
    |   |-UnaryOperator 0x137141e10 <col:31, col:33> 'char *' prefix '++'
    |   | `-DeclRefExpr 0x137141df0 <col:33> 'char *' lvalue Var 0x137128550 'p' 'char *'
    |   `-IfStmt 0x137142738 <line:15:6, line:22:18> has_else
    |     |-BinaryOperator 0x137141ec0 <line:15:10, col:16> 'int' '=='
    |     | |-ImplicitCastExpr 0x137141ea8 <col:10, col:11> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x137141e90 <col:10, col:11> 'char' <LValueToRValue>
    |     | |   `-UnaryOperator 0x137141e60 <col:10, col:11> 'char' lvalue prefix '*' cannot overflow
    |     | |     `-ImplicitCastExpr 0x137141e48 <col:11> 'char *' <LValueToRValue>
    |     | |       `-DeclRefExpr 0x137141e28 <col:11> 'char *' lvalue Var 0x137128550 'p' 'char *'
    |     | `-CharacterLiteral 0x137141e78 <col:16> 'int' 120
    |     |-CallExpr 0x137141f30 <line:16:3, col:19> 'int'
    |     | |-ImplicitCastExpr 0x137141f18 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |     | | `-DeclRefExpr 0x137141ee0 <col:3> 'int ()' Function 0x137141970 'msg_putchar' 'int ()'
    |     | `-CharacterLiteral 0x137141f00 <col:15> 'int' 10
    |     `-ForStmt 0x137142700 <line:18:3, line:22:18>
    |       |-BinaryOperator 0x137141ff8 <line:18:8, col:14> 'int' '='
    |       | |-DeclRefExpr 0x137141f58 <col:8> 'int' lvalue Var 0x1371285e8 'n' 'int'
    |       | `-ImplicitCastExpr 0x137141fe0 <col:12, col:14> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x137141fc8 <col:12, col:14> 'char' <LValueToRValue>
    |       |     `-UnaryOperator 0x137141fb0 <col:12, col:14> 'char' lvalue prefix '*' cannot overflow
    |       |       `-UnaryOperator 0x137141f98 <col:13, col:14> 'char *' postfix '++'
    |       |         `-DeclRefExpr 0x137141f78 <col:13> 'char *' lvalue Var 0x137128550 'p' 'char *'
    |       |-<<<NULL>>>
    |       |-BinaryOperator 0x137142070 <col:18, col:22> 'int' '>'
    |       | |-ImplicitCastExpr 0x137142058 <col:18> 'int' <LValueToRValue>
    |       | | `-DeclRefExpr 0x137142018 <col:18> 'int' lvalue Var 0x1371285e8 'n' 'int'
    |       | `-IntegerLiteral 0x137142038 <col:22> 'int' 0
    |       |-UnaryOperator 0x1371420b0 <col:25, col:27> 'int' prefix '--'
    |       | `-DeclRefExpr 0x137142090 <col:27> 'int' lvalue Var 0x1371285e8 'n' 'int'
    |       `-IfStmt 0x1371426d0 <line:19:7, line:22:18> has_else
    |         |-BinaryOperator 0x137142238 <line:19:11, col:30> 'int' '||'
    |         | |-BinaryOperator 0x137142160 <col:11, col:17> 'int' '=='
    |         | | |-ImplicitCastExpr 0x137142148 <col:11, col:12> 'int' <IntegralCast>
    |         | | | `-ImplicitCastExpr 0x137142130 <col:11, col:12> 'char' <LValueToRValue>
    |         | | |   `-UnaryOperator 0x137142100 <col:11, col:12> 'char' lvalue prefix '*' cannot overflow
    |         | | |     `-ImplicitCastExpr 0x1371420e8 <col:12> 'char *' <LValueToRValue>
    |         | | |       `-DeclRefExpr 0x1371420c8 <col:12> 'char *' lvalue Var 0x137128550 'p' 'char *'
    |         | | `-CharacterLiteral 0x137142118 <col:17> 'int' 111
    |         | `-BinaryOperator 0x137142218 <col:24, col:30> 'int' '=='
    |         |   |-ImplicitCastExpr 0x137142200 <col:24, col:25> 'int' <IntegralCast>
    |         |   | `-ImplicitCastExpr 0x1371421e8 <col:24, col:25> 'char' <LValueToRValue>
    |         |   |   `-UnaryOperator 0x1371421b8 <col:24, col:25> 'char' lvalue prefix '*' cannot overflow
    |         |   |     `-ImplicitCastExpr 0x1371421a0 <col:25> 'char *' <LValueToRValue>
    |         |   |       `-DeclRefExpr 0x137142180 <col:25> 'char *' lvalue Var 0x137128550 'p' 'char *'
    |         |   `-CharacterLiteral 0x1371421d0 <col:30> 'int' 36
    |         |-CallExpr 0x1371425c0 <line:20:4, col:39> '<dependent type>' contains-errors
    |         | |-DeclRefExpr 0x137142338 <col:4> 'int ()' Function 0x137142280 'msg_putchar_attr' 'int ()'
    |         | |-UnaryOperator 0x137142560 <col:21, col:22> 'char' lvalue prefix '*' cannot overflow
    |         | | `-ImplicitCastExpr 0x137142548 <col:22> 'char *' <LValueToRValue>
    |         | |   `-DeclRefExpr 0x137142358 <col:22> 'char *' lvalue Var 0x137128550 'p' 'char *'
    |         | `-CallExpr 0x137142598 <col:25, col:38> '<dependent type>' contains-errors
    |         |   |-DeclRefExpr 0x137142488 <col:25> 'int ()' Function 0x1371423d0 'HL_ATTR' 'int ()'
    |         |   `-RecoveryExpr 0x137142578 <col:33> '<dependent type>' contains-errors lvalue
    |         `-CallExpr 0x137142678 <line:22:4, col:18> 'int'
    |           |-ImplicitCastExpr 0x137142660 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |           | `-DeclRefExpr 0x1371425f0 <col:4> 'int ()' Function 0x137141970 'msg_putchar' 'int ()'
    |           `-ImplicitCastExpr 0x1371426b8 <col:16, col:17> 'int' <IntegralCast>
    |             `-ImplicitCastExpr 0x1371426a0 <col:16, col:17> 'char' <LValueToRValue>
    |               `-UnaryOperator 0x137142648 <col:16, col:17> 'char' lvalue prefix '*' cannot overflow
    |                 `-ImplicitCastExpr 0x137142630 <col:17> 'char *' <LValueToRValue>
    |                   `-DeclRefExpr 0x137142610 <col:17> 'char *' lvalue Var 0x137128550 'p' 'char *'
    `-CallExpr 0x137142cf0 <line:23:5, col:17> 'int'
      `-ImplicitCastExpr 0x137142cd8 <col:5> 'int (*)()' <FunctionToPointerDecay>
        `-DeclRefExpr 0x137142cb8 <col:5> 'int ()' Function 0x137142c00 'msg_clr_eos' 'int ()'
