TranslationUnitDecl 0x130855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1308564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x130855bd0 '__int128'
|-TypedefDecl 0x130856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x130855bf0 'unsigned __int128'
|-TypedefDecl 0x130926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x130926000 'struct __NSConstantString_tag'
|   `-Record 0x130856580 '__NSConstantString_tag'
|-TypedefDecl 0x130926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x130855d90 '__SVInt8_t'
|-TypedefDecl 0x130926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x130855db0 '__SVInt16_t'
|-TypedefDecl 0x130926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x130855dd0 '__SVInt32_t'
|-TypedefDecl 0x1309263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x130855df0 '__SVInt64_t'
|-TypedefDecl 0x130926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x130855e10 '__SVUint8_t'
|-TypedefDecl 0x1309264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x130855e30 '__SVUint16_t'
|-TypedefDecl 0x130926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x130855e50 '__SVUint32_t'
|-TypedefDecl 0x130926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x130855e70 '__SVUint64_t'
|-TypedefDecl 0x1309265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x130855e90 '__SVFloat16_t'
|-TypedefDecl 0x130926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x130855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1309266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x130855ed0 '__SVFloat64_t'
|-TypedefDecl 0x130926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x130855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x130926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x130855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1309267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x130855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x130926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x130855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1309268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x130855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x130926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x130855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x130926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x130855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1309269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x130855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x130926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x130855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x130926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x130856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x130926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x130856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x130926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x130856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x130926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x130856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x130926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x130856090 '__clang_svint8x3_t'
|-TypedefDecl 0x130926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1308560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x130926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1308560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x130926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1308560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x130926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x130856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x130926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x130856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x130926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x130856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x130926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x130856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x130926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x130856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x130927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1308561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x130927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1308561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1309278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1308561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x130927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x130856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1309279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x130856230 '__clang_svint16x4_t'
|-TypedefDecl 0x130927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x130856250 '__clang_svint32x4_t'
|-TypedefDecl 0x130927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x130856270 '__clang_svint64x4_t'
|-TypedefDecl 0x130927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x130856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x130927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1308562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x130927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1308562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x130927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1308562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x130927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x130856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x130927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x130856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x130927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x130856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x130927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x130856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x130927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x130856390 '__SVBool_t'
|-TypedefDecl 0x130927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1308563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x130927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1308563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x130927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1308563f0 '__SVCount_t'
|-TypedefDecl 0x130927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x130927fb0 'char *'
|   `-BuiltinType 0x1308556b0 'char'
|-TypedefDecl 0x130928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x130927fb0 'char *'
|   `-BuiltinType 0x1308556b0 'char'
`-FunctionDecl 0x130928348 <dataset_diviso_filec/func21010_vuln.c:1:1, line:20:1> line:1:1 invalid parse_field 'int (int *, const char **, int *)'
  |-ParmVarDecl 0x130928128 <col:13, col:33> col:33 invalid ndo 'int *'
  |-ParmVarDecl 0x1309281d8 <col:38, col:51> col:51 used pptr 'const char **'
  |-ParmVarDecl 0x130928258 <col:57, col:62> col:62 used len 'int *'
  `-CompoundStmt 0x130943520 <line:2:1, line:20:1>
    |-DeclStmt 0x130928488 <line:3:5, col:18>
    | `-VarDecl 0x130928420 <col:5, col:17> col:17 used s 'const char *'
    |-IfStmt 0x1309286a0 <line:5:5, line:6:9>
    | |-BinaryOperator 0x130928638 <line:5:9, col:33> 'int' '||'
    | | |-BinaryOperator 0x130928598 <col:9, col:23> 'int' '||'
    | | | |-BinaryOperator 0x130928528 <col:9, col:17> 'int' '<='
    | | | | |-ImplicitCastExpr 0x130928510 <col:9, col:10> 'int' <LValueToRValue>
    | | | | | `-UnaryOperator 0x1309284d8 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
    | | | | |   `-ImplicitCastExpr 0x1309284c0 <col:10> 'int *' <LValueToRValue>
    | | | | |     `-DeclRefExpr 0x1309284a0 <col:10> 'int *' lvalue ParmVar 0x130928258 'len' 'int *'
    | | | | `-IntegerLiteral 0x1309284f0 <col:17> 'int' 0
    | | | `-UnaryOperator 0x130928580 <col:22, col:23> 'int' prefix '!' cannot overflow
    | | |   `-ImplicitCastExpr 0x130928568 <col:23> 'const char **' <LValueToRValue>
    | | |     `-DeclRefExpr 0x130928548 <col:23> 'const char **' lvalue ParmVar 0x1309281d8 'pptr' 'const char **'
    | | `-UnaryOperator 0x130928620 <col:31, col:33> 'int' prefix '!' cannot overflow
    | |   `-ImplicitCastExpr 0x130928608 <col:32, col:33> 'const char *' <LValueToRValue>
    | |     `-UnaryOperator 0x1309285f0 <col:32, col:33> 'const char *' lvalue prefix '*' cannot overflow
    | |       `-ImplicitCastExpr 0x1309285d8 <col:33> 'const char **' <LValueToRValue>
    | |         `-DeclRefExpr 0x1309285b8 <col:33> 'const char **' lvalue ParmVar 0x1309281d8 'pptr' 'const char **'
    | `-ReturnStmt 0x130928690 <line:6:2, col:9>
    |   `-RecoveryExpr 0x130928670 <col:9> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x130942848 <line:7:5, line:8:9>
    | |-BinaryOperator 0x1309287d0 <line:7:9, col:37> 'int' contains-errors '>'
    | | |-ImplicitCastExpr 0x1309287b8 <col:9, col:10> 'const char *' <LValueToRValue>
    | | | `-UnaryOperator 0x1309286f8 <col:9, col:10> 'const char *' lvalue prefix '*' cannot overflow
    | | |   `-ImplicitCastExpr 0x1309286e0 <col:10> 'const char **' <LValueToRValue>
    | | |     `-DeclRefExpr 0x1309286c0 <col:10> 'const char **' lvalue ParmVar 0x1309281d8 'pptr' 'const char **'
    | | `-CStyleCastExpr 0x130928790 <col:17, col:37> 'const char *' contains-errors <Dependent>
    | |   `-CXXDependentScopeMemberExpr 0x130928730 <col:32, col:37> '<dependent type>' contains-errors lvalue ->ndo_snapend
    | |     `-RecoveryExpr 0x130928710 <col:32> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x130942838 <line:8:2, col:9>
    |   `-RecoveryExpr 0x130942818 <col:9> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x1309428f0 <line:10:5, col:10> 'const char *' '='
    | |-DeclRefExpr 0x130942868 <col:5> 'const char *' lvalue Var 0x130928420 's' 'const char *'
    | `-ImplicitCastExpr 0x1309428d8 <col:9, col:10> 'const char *' <LValueToRValue>
    |   `-UnaryOperator 0x1309428c0 <col:9, col:10> 'const char *' lvalue prefix '*' cannot overflow
    |     `-ImplicitCastExpr 0x1309428a8 <col:10> 'const char **' <LValueToRValue>
    |       `-DeclRefExpr 0x130942888 <col:10> 'const char **' lvalue ParmVar 0x1309281d8 'pptr' 'const char **'
    |-WhileStmt 0x130942d08 <line:11:5, line:14:5>
    | |-BinaryOperator 0x130942bb8 <line:11:12, col:71> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x130942ae8 <col:12, col:64> 'int' contains-errors '&&'
    | | | |-BinaryOperator 0x130942a20 <col:12, col:41> 'int' contains-errors '<='
    | | | | |-ImplicitCastExpr 0x130942a08 <col:12, col:13> 'const char *' <LValueToRValue>
    | | | | | `-UnaryOperator 0x130942948 <col:12, col:13> 'const char *' lvalue prefix '*' cannot overflow
    | | | | |   `-ImplicitCastExpr 0x130942930 <col:13> 'const char **' <LValueToRValue>
    | | | | |     `-DeclRefExpr 0x130942910 <col:13> 'const char **' lvalue ParmVar 0x1309281d8 'pptr' 'const char **'
    | | | | `-CStyleCastExpr 0x1309429e0 <col:21, col:41> 'const char *' contains-errors <Dependent>
    | | | |   `-CXXDependentScopeMemberExpr 0x130942980 <col:36, col:41> '<dependent type>' contains-errors lvalue ->ndo_snapend
    | | | |     `-RecoveryExpr 0x130942960 <col:36> '<dependent type>' contains-errors lvalue
    | | | `-BinaryOperator 0x130942ac8 <col:56, col:64> 'int' '>='
    | | |   |-ImplicitCastExpr 0x130942ab0 <col:56, col:57> 'int' <LValueToRValue>
    | | |   | `-UnaryOperator 0x130942a78 <col:56, col:57> 'int' lvalue prefix '*' cannot overflow
    | | |   |   `-ImplicitCastExpr 0x130942a60 <col:57> 'int *' <LValueToRValue>
    | | |   |     `-DeclRefExpr 0x130942a40 <col:57> 'int *' lvalue ParmVar 0x130928258 'len' 'int *'
    | | |   `-IntegerLiteral 0x130942a90 <col:64> 'int' 0
    | | `-ImplicitCastExpr 0x130942ba0 <col:69, col:71> 'int' <IntegralCast>
    | |   `-ImplicitCastExpr 0x130942b88 <col:69, col:71> 'char' <LValueToRValue>
    | |     `-UnaryOperator 0x130942b70 <col:69, col:71> 'const char' lvalue prefix '*' cannot overflow
    | |       `-ImplicitCastExpr 0x130942b58 <col:70, col:71> 'const char *' <LValueToRValue>
    | |         `-UnaryOperator 0x130942b40 <col:70, col:71> 'const char *' lvalue prefix '*' cannot overflow
    | |           `-ImplicitCastExpr 0x130942b28 <col:71> 'const char **' <LValueToRValue>
    | |             `-DeclRefExpr 0x130942b08 <col:71> 'const char **' lvalue ParmVar 0x1309281d8 'pptr' 'const char **'
    | `-CompoundStmt 0x130942ce8 <col:77, line:14:5>
    |   |-UnaryOperator 0x130942c48 <line:12:2, col:9> 'const char *' postfix '++'
    |   | `-ParenExpr 0x130942c28 <col:2, col:8> 'const char *' lvalue
    |   |   `-UnaryOperator 0x130942c10 <col:3, col:4> 'const char *' lvalue prefix '*' cannot overflow
    |   |     `-ImplicitCastExpr 0x130942bf8 <col:4> 'const char **' <LValueToRValue>
    |   |       `-DeclRefExpr 0x130942bd8 <col:4> 'const char **' lvalue ParmVar 0x1309281d8 'pptr' 'const char **'
    |   `-UnaryOperator 0x130942cd0 <line:13:2, col:8> 'int' postfix '--'
    |     `-ParenExpr 0x130942cb0 <col:2, col:7> 'int' lvalue
    |       `-UnaryOperator 0x130942c98 <col:3, col:4> 'int' lvalue prefix '*' cannot overflow
    |         `-ImplicitCastExpr 0x130942c80 <col:4> 'int *' <LValueToRValue>
    |           `-DeclRefExpr 0x130942c60 <col:4> 'int *' lvalue ParmVar 0x130928258 'len' 'int *'
    |-UnaryOperator 0x130942d98 <line:15:5, col:12> 'const char *' postfix '++'
    | `-ParenExpr 0x130942d78 <col:5, col:11> 'const char *' lvalue
    |   `-UnaryOperator 0x130942d60 <col:6, col:7> 'const char *' lvalue prefix '*' cannot overflow
    |     `-ImplicitCastExpr 0x130942d48 <col:7> 'const char **' <LValueToRValue>
    |       `-DeclRefExpr 0x130942d28 <col:7> 'const char **' lvalue ParmVar 0x1309281d8 'pptr' 'const char **'
    |-UnaryOperator 0x130942e20 <line:16:5, col:11> 'int' postfix '--'
    | `-ParenExpr 0x130942e00 <col:5, col:10> 'int' lvalue
    |   `-UnaryOperator 0x130942de8 <col:6, col:7> 'int' lvalue prefix '*' cannot overflow
    |     `-ImplicitCastExpr 0x130942dd0 <col:7> 'int *' <LValueToRValue>
    |       `-DeclRefExpr 0x130942db0 <col:7> 'int *' lvalue ParmVar 0x130928258 'len' 'int *'
    |-IfStmt 0x130943078 <line:17:5, line:18:9>
    | |-BinaryOperator 0x130943010 <line:17:9, col:49> 'int' contains-errors '||'
    | | |-BinaryOperator 0x130942ec0 <col:9, col:16> 'int' '<'
    | | | |-ImplicitCastExpr 0x130942ea8 <col:9, col:10> 'int' <LValueToRValue>
    | | | | `-UnaryOperator 0x130942e70 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
    | | | |   `-ImplicitCastExpr 0x130942e58 <col:10> 'int *' <LValueToRValue>
    | | | |     `-DeclRefExpr 0x130942e38 <col:10> 'int *' lvalue ParmVar 0x130928258 'len' 'int *'
    | | | `-IntegerLiteral 0x130942e88 <col:16> 'int' 0
    | | `-BinaryOperator 0x130942ff0 <col:21, col:49> 'int' contains-errors '>'
    | |   |-ImplicitCastExpr 0x130942fd8 <col:21, col:22> 'const char *' <LValueToRValue>
    | |   | `-UnaryOperator 0x130942f18 <col:21, col:22> 'const char *' lvalue prefix '*' cannot overflow
    | |   |   `-ImplicitCastExpr 0x130942f00 <col:22> 'const char **' <LValueToRValue>
    | |   |     `-DeclRefExpr 0x130942ee0 <col:22> 'const char **' lvalue ParmVar 0x1309281d8 'pptr' 'const char **'
    | |   `-CStyleCastExpr 0x130942fb0 <col:29, col:49> 'const char *' contains-errors <Dependent>
    | |     `-CXXDependentScopeMemberExpr 0x130942f50 <col:44, col:49> '<dependent type>' contains-errors lvalue ->ndo_snapend
    | |       `-RecoveryExpr 0x130942f30 <col:44> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x130943068 <line:18:2, col:9>
    |   `-RecoveryExpr 0x130943048 <col:9> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x130943510 <line:19:5, col:12>
      `-ImplicitCastExpr 0x1309430d0 <col:12> 'int' <PointerToIntegral>
        `-ImplicitCastExpr 0x1309430b8 <col:12> 'const char *' <LValueToRValue>
          `-DeclRefExpr 0x130943098 <col:12> 'const char *' lvalue Var 0x130928420 's' 'const char *'
