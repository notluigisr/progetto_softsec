TranslationUnitDecl 0x12a055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12a0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12a055bd0 '__int128'
|-TypedefDecl 0x12a056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12a055bf0 'unsigned __int128'
|-TypedefDecl 0x12a126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12a126000 'struct __NSConstantString_tag'
|   `-Record 0x12a056580 '__NSConstantString_tag'
|-TypedefDecl 0x12a126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12a055d90 '__SVInt8_t'
|-TypedefDecl 0x12a126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12a055db0 '__SVInt16_t'
|-TypedefDecl 0x12a126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12a055dd0 '__SVInt32_t'
|-TypedefDecl 0x12a1263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12a055df0 '__SVInt64_t'
|-TypedefDecl 0x12a126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12a055e10 '__SVUint8_t'
|-TypedefDecl 0x12a1264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12a055e30 '__SVUint16_t'
|-TypedefDecl 0x12a126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12a055e50 '__SVUint32_t'
|-TypedefDecl 0x12a126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12a055e70 '__SVUint64_t'
|-TypedefDecl 0x12a1265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12a055e90 '__SVFloat16_t'
|-TypedefDecl 0x12a126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12a055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12a1266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12a055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12a126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12a055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12a126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12a055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12a1267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12a055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12a126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12a055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12a1268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12a055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12a126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12a055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12a126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12a055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12a1269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12a055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12a126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12a055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12a126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12a056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12a126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12a056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12a126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12a056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12a126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12a056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12a126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12a056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12a126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12a0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12a126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12a0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12a126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12a0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12a126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12a056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12a126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12a056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12a126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12a056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12a126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12a056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12a126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12a056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12a127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12a0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12a127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12a0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12a1278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12a0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12a127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12a056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12a1279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12a056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12a127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12a056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12a127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12a056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12a127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12a056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12a127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12a0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12a127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12a0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12a127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12a0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12a127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12a056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12a127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12a056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12a127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12a056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12a127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12a056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12a127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12a056390 '__SVBool_t'
|-TypedefDecl 0x12a127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12a0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12a127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12a0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12a127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12a0563f0 '__SVCount_t'
|-TypedefDecl 0x12a127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12a127fb0 'char *'
|   `-BuiltinType 0x12a0556b0 'char'
|-TypedefDecl 0x12a128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12a127fb0 'char *'
|   `-BuiltinType 0x12a0556b0 'char'
|-FunctionDecl 0x12a1281a0 <dataset_diviso_filec/func10867_nonvuln.c:1:1, line:63:1> line:1:13 starttls 'void (int)' static
| |-ParmVarDecl 0x12a1280d8 <col:22, col:26> col:26 used https 'int'
| `-CompoundStmt 0x12a144928 <line:2:1, line:63:1>
|   |-DeclStmt 0x12a128318 <line:3:5, col:15>
|   | `-VarDecl 0x12a1282b0 <col:5, col:9> col:9 used result 'int'
|   |-DeclStmt 0x12a1283e0 <line:4:5, col:16>
|   | `-VarDecl 0x12a128378 <col:5, col:10> col:10 used layerp 'int *'
|   |-DeclStmt 0x12a128490 <line:6:5, col:18>
|   | `-VarDecl 0x12a128428 <col:5, col:11> col:11 used auth_id 'char *'
|   |-BinaryOperator 0x12a1287c8 <line:11:5, line:13:12> 'int' '='
|   | |-DeclRefExpr 0x12a128510 <line:11:5> 'int' lvalue Var 0x12a1282b0 'result' 'int'
|   | `-CallExpr 0x12a128778 <col:12, line:13:12> 'int'
|   |   |-ImplicitCastExpr 0x12a128760 <line:11:12> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x12a128640 <col:12> 'int ()' Function 0x12a128588 'tls_init_serverengine' 'int ()'
|   |   |-ImplicitCastExpr 0x12a1287b0 <col:34> 'char *' <ArrayToPointerDecay>
|   |   | `-StringLiteral 0x12a1286a0 <col:34> 'char[4]' lvalue "STR"
|   |   |-IntegerLiteral 0x12a1286c0 <line:12:6> 'int' 5
|   |   `-UnaryOperator 0x12a128718 <line:13:6, col:7> 'int' prefix '!' cannot overflow
|   |     `-ImplicitCastExpr 0x12a128700 <col:7> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x12a1286e0 <col:7> 'int' lvalue ParmVar 0x12a1280d8 'https' 'int'
|   |-IfStmt 0x12a141c20 <line:15:5, line:18:5>
|   | |-BinaryOperator 0x12a141870 <line:15:9, col:20> 'int' '=='
|   | | |-ImplicitCastExpr 0x12a141858 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x12a141800 <col:9> 'int' lvalue Var 0x12a1282b0 'result' 'int'
|   | | `-UnaryOperator 0x12a141840 <col:19, col:20> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x12a141820 <col:20> 'int' 1
|   | `-CompoundStmt 0x12a141c00 <col:23, line:18:5>
|   |   |-CallExpr 0x12a141a18 <line:16:2, col:23> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x12a141970 <col:2> 'int ()' Function 0x12a1418b8 'syslog' 'int ()'
|   |   | |-RecoveryExpr 0x12a1419f8 <col:9> '<dependent type>' contains-errors lvalue
|   |   | `-StringLiteral 0x12a1419a8 <col:18> 'char[4]' lvalue "STR"
|   |   `-CallExpr 0x12a141bd0 <line:17:2, col:25> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x12a141b28 <col:2> 'int ()' Function 0x12a141a70 'fatal' 'int ()'
|   |     |-StringLiteral 0x12a141b48 <col:8> 'char[4]' lvalue "STR"
|   |     `-RecoveryExpr 0x12a141bb0 <col:14> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x12a141e78 <line:20:5, line:23:5>
|   | |-UnaryOperator 0x12a141c78 <line:20:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x12a141c60 <col:10> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x12a141c40 <col:10> 'int' lvalue ParmVar 0x12a1280d8 'https' 'int'
|   | `-CompoundStmt 0x12a141e60 <col:17, line:23:5>
|   |   `-CallExpr 0x12a141e30 <line:22:2, col:40> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x12a141d70 <col:2> 'int ()' Function 0x12a141cb8 'response_header' 'int ()'
|   |     |-RecoveryExpr 0x12a141df0 <col:18> '<dependent type>' contains-errors lvalue
|   |     `-RecoveryExpr 0x12a141e10 <col:36> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x12a142280 <line:25:5, line:30:20> 'int' contains-errors '='
|   | |-DeclRefExpr 0x12a141e98 <line:25:5> 'int' lvalue Var 0x12a1282b0 'result' 'int'
|   | `-CallExpr 0x12a142230 <col:12, line:30:20> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x12a141f98 <line:25:12> 'int ()' Function 0x12a141ee0 'tls_start_servertls' 'int ()'
|   |   |-IntegerLiteral 0x12a141fb8 <col:32> 'int' 0
|   |   |-IntegerLiteral 0x12a141fd8 <line:26:11> 'int' 1
|   |   |-ConditionalOperator 0x12a1421c8 <line:27:11, col:25> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x12a141ff8 <col:11> 'int' lvalue ParmVar 0x12a1280d8 'https' 'int'
|   |   | |-IntegerLiteral 0x12a142018 <col:19> 'int' 180
|   |   | `-RecoveryExpr 0x12a1421a8 <col:25> '<dependent type>' contains-errors lvalue
|   |   |-DeclRefExpr 0x12a142080 <line:28:11> 'int *' lvalue Var 0x12a128378 'layerp' 'int *'
|   |   |-UnaryOperator 0x12a1420f0 <line:29:11, col:12> 'char **' prefix '&' cannot overflow
|   |   | `-DeclRefExpr 0x12a1420a0 <col:12> 'char *' lvalue Var 0x12a128428 'auth_id' 'char *'
|   |   `-UnaryOperator 0x12a142218 <line:30:11, col:12> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     `-RecoveryExpr 0x12a1421f8 <col:12> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x12a142548 <line:33:5, line:36:5>
|   | |-BinaryOperator 0x12a142310 <line:33:9, col:20> 'int' '=='
|   | | |-ImplicitCastExpr 0x12a1422f8 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x12a1422a0 <col:9> 'int' lvalue Var 0x12a1282b0 'result' 'int'
|   | | `-UnaryOperator 0x12a1422e0 <col:19, col:20> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x12a1422c0 <col:20> 'int' 1
|   | `-CompoundStmt 0x12a142528 <col:23, line:36:5>
|   |   |-CallExpr 0x12a142418 <line:34:2, col:44> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x12a142330 <col:2> 'int ()' Function 0x12a1418b8 'syslog' 'int ()'
|   |   | |-RecoveryExpr 0x12a1423d8 <col:9> '<dependent type>' contains-errors lvalue
|   |   | |-StringLiteral 0x12a142368 <col:21> 'char[4]' lvalue "STR"
|   |   | `-RecoveryExpr 0x12a1423f8 <col:28> '<dependent type>' contains-errors lvalue
|   |   `-CallExpr 0x12a1424f8 <line:35:2, col:26> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x12a142450 <col:2> 'int ()' Function 0x12a141a70 'fatal' 'int ()'
|   |     |-StringLiteral 0x12a142470 <col:8> 'char[4]' lvalue "STR"
|   |     `-RecoveryExpr 0x12a1424d8 <col:15> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x12a144200 <line:39:5, col:66> 'int' contains-errors '='
|   | |-DeclRefExpr 0x12a142568 <col:5> 'int' lvalue Var 0x12a1282b0 'result' 'int'
|   | `-CallExpr 0x12a1427b8 <col:14, col:66> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x12a142668 <col:14> 'int ()' Function 0x12a1425b0 'sasl_setprop' 'int ()'
|   |   |-RecoveryExpr 0x12a142740 <col:27> '<dependent type>' contains-errors lvalue
|   |   |-RecoveryExpr 0x12a142760 <col:43> '<dependent type>' contains-errors lvalue
|   |   `-UnaryOperator 0x12a1427a0 <col:62, col:63> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     `-RecoveryExpr 0x12a142780 <col:63> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x12a1442b0 <line:40:5, line:42:5>
|   | |-RecoveryExpr 0x12a144240 <line:40:9, col:19> '_Bool' contains-errors
|   | `-CompoundStmt 0x12a1442a0 <col:28, line:42:5>
|   |-IfStmt 0x12a1443c0 <line:46:5, line:48:5>
|   | |-RecoveryExpr 0x12a144350 <line:46:9, col:19> '_Bool' contains-errors
|   | `-CompoundStmt 0x12a1443b0 <col:28, line:48:5>
|   `-IfStmt 0x12a1445d8 <line:49:5, line:52:5>
|     |-RecoveryExpr 0x12a1443e0 <line:49:9, col:19> '_Bool' contains-errors
|     `-CompoundStmt 0x12a1445c8 <col:27, line:52:5>
`-FunctionDecl 0x12a144438 <line:50:2> col:2 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x12a144538 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x12a1444e0 <<invalid sloc>> Implicit 873
