TranslationUnitDecl 0x157855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1578564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x157855bd0 '__int128'
|-TypedefDecl 0x157856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x157855bf0 'unsigned __int128'
|-TypedefDecl 0x160034430 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x160034200 'struct __NSConstantString_tag'
|   `-Record 0x157856580 '__NSConstantString_tag'
|-TypedefDecl 0x160034498 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x157855d90 '__SVInt8_t'
|-TypedefDecl 0x160034500 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x157855db0 '__SVInt16_t'
|-TypedefDecl 0x160034568 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x157855dd0 '__SVInt32_t'
|-TypedefDecl 0x1600345d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x157855df0 '__SVInt64_t'
|-TypedefDecl 0x160034638 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x157855e10 '__SVUint8_t'
|-TypedefDecl 0x1600346a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x157855e30 '__SVUint16_t'
|-TypedefDecl 0x160034708 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x157855e50 '__SVUint32_t'
|-TypedefDecl 0x160034770 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x157855e70 '__SVUint64_t'
|-TypedefDecl 0x1600347d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x157855e90 '__SVFloat16_t'
|-TypedefDecl 0x160034840 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x157855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1600348a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x157855ed0 '__SVFloat64_t'
|-TypedefDecl 0x160034910 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x157855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x160034978 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x157855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1600349e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x157855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x160034a48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x157855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x160034ab0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x157855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x160034b18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x157855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x160034b80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x157855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x160034be8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x157855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x160034c50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x157855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x160034cb8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x157856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x160034d20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x157856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x160034d88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x157856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x160034df0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x157856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x160034e58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x157856090 '__clang_svint8x3_t'
|-TypedefDecl 0x160034ec0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1578560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x160034f28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1578560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x160034f90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1578560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x160034ff8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x157856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x160035060 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x157856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x1600350c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x157856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x160035130 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x157856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x160035198 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x157856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x160035a00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1578561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x160035a68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1578561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x160035ad0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1578561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x160035b38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x157856210 '__clang_svint8x4_t'
|-TypedefDecl 0x160035ba0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x157856230 '__clang_svint16x4_t'
|-TypedefDecl 0x160035c08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x157856250 '__clang_svint32x4_t'
|-TypedefDecl 0x160035c70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x157856270 '__clang_svint64x4_t'
|-TypedefDecl 0x160035cd8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x157856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x160035d40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1578562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x160035da8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1578562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x160035e10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1578562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x160035e78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x157856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x160035ee0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x157856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x160035f48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x157856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x160035fb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x157856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x160036018 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x157856390 '__SVBool_t'
|-TypedefDecl 0x160036080 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1578563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1600360e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1578563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x160036150 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1578563f0 '__SVCount_t'
|-TypedefDecl 0x1600361f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1600361b0 'char *'
|   `-BuiltinType 0x1578556b0 'char'
|-TypedefDecl 0x160036268 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1600361b0 'char *'
|   `-BuiltinType 0x1578556b0 'char'
|-FunctionDecl 0x160808348 <dataset_diviso_filec/func15942_vuln.c:1:1, line:31:1> line:1:1 invalid m4_maketemp 'int (struct obstack *, int, int **)'
| |-ParmVarDecl 0x160036848 <col:14, col:30> col:30 used obs 'struct obstack *'
| |-ParmVarDecl 0x1600368c8 <col:35, col:39> col:39 used argc 'int'
| |-ParmVarDecl 0x160808200 <col:45, col:58> col:58 invalid argv 'int **'
| `-CompoundStmt 0x1578fb998 <line:2:1, line:31:1>
|   |-IfStmt 0x1608086a8 <line:3:3, line:4:5>
|   | |-CallExpr 0x160808658 <line:3:7, col:36> '<dependent type>' contains-errors
|   | | |-DeclRefExpr 0x160808560 <col:7> 'int ()' Function 0x1608084a8 'bad_argc' 'int ()'
|   | | |-ArraySubscriptExpr 0x1608085d8 <col:17, col:23> '<dependent type>' contains-errors lvalue
|   | | | |-ImplicitCastExpr 0x1608085c0 <col:17> '<dependent type>' contains-errors <LValueToRValue>
|   | | | | `-RecoveryExpr 0x160808580 <col:17> '<dependent type>' contains-errors lvalue
|   | | | `-IntegerLiteral 0x1608085a0 <col:22> 'int' 0
|   | | |-DeclRefExpr 0x1608085f8 <col:26> 'int' lvalue ParmVar 0x1600368c8 'argc' 'int'
|   | | |-IntegerLiteral 0x160808618 <col:32> 'int' 2
|   | | `-IntegerLiteral 0x160808638 <col:35> 'int' 2
|   | `-ReturnStmt 0x160808698 <line:4:5>
|   `-IfStmt 0x1578fb968 <line:5:3, line:30:33> has_else
|     |-RecoveryExpr 0x1608086e0 <line:5:7> '<dependent type>' contains-errors lvalue
|     |-CompoundStmt 0x1578fb718 <line:6:5, line:28:5>
|     | |-DeclStmt 0x160808928 <line:8:7, col:32>
|     | | `-VarDecl 0x160808718 <col:7, col:31> col:19 used str 'const char *' cinit
|     | |   `-ImplicitCastExpr 0x160808910 <col:25, col:31> 'const char *' <IntegralToPointer>
|     | |     `-CallExpr 0x1608088e8 <col:25, col:31> 'int'
|     | |       |-ImplicitCastExpr 0x1608088d0 <col:25> 'int (*)()' <FunctionToPointerDecay>
|     | |       | `-DeclRefExpr 0x160808860 <col:25> 'int ()' Function 0x1608087a8 'ARG' 'int ()'
|     | |       `-IntegerLiteral 0x160808880 <col:30> 'int' 1
|     | |-DeclStmt 0x160808c60 <line:9:7, col:29>
|     | | `-VarDecl 0x160808958 <col:7, col:28> col:11 used len 'int' cinit
|     | |   `-ImplicitCastExpr 0x160808c48 <col:17, col:28> 'int' <IntegralCast>
|     | |     `-CallExpr 0x160808c08 <col:17, col:28> 'unsigned long'
|     | |       |-ImplicitCastExpr 0x160808bf0 <col:17> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|     | |       | `-DeclRefExpr 0x160808b68 <col:17> 'unsigned long (const char *)' Function 0x1608089f8 'strlen' 'unsigned long (const char *)'
|     | |       `-ImplicitCastExpr 0x160808c30 <col:25> 'const char *' <LValueToRValue>
|     | |         `-DeclRefExpr 0x160808b88 <col:25> 'const char *' lvalue Var 0x160808718 'str' 'const char *'
|     | |-DeclStmt 0x160808cf8 <line:10:7, col:12>
|     | | `-VarDecl 0x160808c90 <col:7, col:11> col:11 used i 'int'
|     | |-DeclStmt 0x160808d90 <line:11:7, col:15>
|     | | `-VarDecl 0x160808d28 <col:7, col:11> col:11 used len2 'int'
|     | |-ForStmt 0x1578faa20 <line:14:7, line:16:4>
|     | | |-BinaryOperator 0x160808fd8 <line:14:12, col:16> 'int' '='
|     | | | |-DeclRefExpr 0x160808f80 <col:12> 'int' lvalue Var 0x160808c90 'i' 'int'
|     | | | `-ImplicitCastExpr 0x160808fc0 <col:16> 'int' <LValueToRValue>
|     | | |   `-DeclRefExpr 0x160808fa0 <col:16> 'int' lvalue Var 0x160808958 'len' 'int'
|     | | |-<<<NULL>>>
|     | | |-BinaryOperator 0x160809050 <col:21, col:25> 'int' '>'
|     | | | |-ImplicitCastExpr 0x160809038 <col:21> 'int' <LValueToRValue>
|     | | | | `-DeclRefExpr 0x160808ff8 <col:21> 'int' lvalue Var 0x160808c90 'i' 'int'
|     | | | `-IntegerLiteral 0x160809018 <col:25> 'int' 1
|     | | |-UnaryOperator 0x160809090 <col:28, col:29> 'int' postfix '--'
|     | | | `-DeclRefExpr 0x160809070 <col:28> 'int' lvalue Var 0x160808c90 'i' 'int'
|     | | `-IfStmt 0x1578faa00 <line:15:2, line:16:4>
|     | |   |-BinaryOperator 0x1608091c0 <line:15:6, col:20> 'int' '!='
|     | |   | |-ImplicitCastExpr 0x1608091a8 <col:6, col:15> 'int' <IntegralCast>
|     | |   | | `-ImplicitCastExpr 0x160809190 <col:6, col:15> 'char' <LValueToRValue>
|     | |   | |   `-ArraySubscriptExpr 0x160809158 <col:6, col:15> 'const char' lvalue
|     | |   | |     |-ImplicitCastExpr 0x160809140 <col:6> 'const char *' <LValueToRValue>
|     | |   | |     | `-DeclRefExpr 0x1608090a8 <col:6> 'const char *' lvalue Var 0x160808718 'str' 'const char *'
|     | |   | |     `-BinaryOperator 0x160809120 <col:10, col:14> 'int' '-'
|     | |   | |       |-ImplicitCastExpr 0x160809108 <col:10> 'int' <LValueToRValue>
|     | |   | |       | `-DeclRefExpr 0x1608090c8 <col:10> 'int' lvalue Var 0x160808c90 'i' 'int'
|     | |   | |       `-IntegerLiteral 0x1608090e8 <col:14> 'int' 1
|     | |   | `-CharacterLiteral 0x160809178 <col:20> 'int' 88
|     | |   `-BreakStmt 0x1608091e0 <line:16:4>
|     | |-CallExpr 0x1578fabd0 <line:17:7, col:32> 'int'
|     | | |-ImplicitCastExpr 0x1578fabb8 <col:7> 'int (*)()' <FunctionToPointerDecay>
|     | | | `-DeclRefExpr 0x1578fab38 <col:7> 'int ()' Function 0x1578faa80 'obstack_grow' 'int ()'
|     | | |-ImplicitCastExpr 0x1578fac08 <col:21> 'struct obstack *' <LValueToRValue>
|     | | | `-DeclRefExpr 0x1578fab58 <col:21> 'struct obstack *' lvalue ParmVar 0x160036848 'obs' 'struct obstack *'
|     | | |-ImplicitCastExpr 0x1578fac20 <col:26> 'const char *' <LValueToRValue>
|     | | | `-DeclRefExpr 0x1578fab78 <col:26> 'const char *' lvalue Var 0x160808718 'str' 'const char *'
|     | | `-ImplicitCastExpr 0x1578fac38 <col:31> 'int' <LValueToRValue>
|     | |   `-DeclRefExpr 0x1578fab98 <col:31> 'int' lvalue Var 0x160808c90 'i' 'int'
|     | |-BinaryOperator 0x1578fae90 <line:19:7, col:25> 'int' '='
|     | | |-DeclRefExpr 0x1578fada8 <col:7> 'int' lvalue Var 0x160808d28 'len2' 'int'
|     | | `-ImplicitCastExpr 0x1578fae78 <col:14, col:25> 'int' <IntegralCast>
|     | |   `-CallExpr 0x1578fae38 <col:14, col:25> 'unsigned long'
|     | |     |-ImplicitCastExpr 0x1578fae20 <col:14> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|     | |     | `-DeclRefExpr 0x1578fadc8 <col:14> 'unsigned long (const char *)' Function 0x1608089f8 'strlen' 'unsigned long (const char *)'
|     | |     `-ImplicitCastExpr 0x1578fae60 <col:22> 'const char *' <LValueToRValue>
|     | |       `-DeclRefExpr 0x1578fade8 <col:22> 'const char *' lvalue Var 0x160808718 'str' 'const char *'
|     | `-IfStmt 0x1578fb6e8 <line:20:7, line:27:2> has_else
|     |   |-BinaryOperator 0x1578faf78 <line:20:11, col:24> 'int' '>'
|     |   | |-ImplicitCastExpr 0x1578faf60 <col:11> 'int' <LValueToRValue>
|     |   | | `-DeclRefExpr 0x1578faeb0 <col:11> 'int' lvalue Var 0x160808d28 'len2' 'int'
|     |   | `-BinaryOperator 0x1578faf40 <col:18, col:24> 'int' '-'
|     |   |   |-ImplicitCastExpr 0x1578faf10 <col:18> 'int' <LValueToRValue>
|     |   |   | `-DeclRefExpr 0x1578faed0 <col:18> 'int' lvalue Var 0x160808958 'len' 'int'
|     |   |   `-ImplicitCastExpr 0x1578faf28 <col:24> 'int' <LValueToRValue>
|     |   |     `-DeclRefExpr 0x1578faef0 <col:24> 'int' lvalue Var 0x160808c90 'i' 'int'
|     |   |-CallExpr 0x1578fb2c0 <line:21:2, col:53> 'int'
|     |   | |-ImplicitCastExpr 0x1578fb2a8 <col:2> 'int (*)()' <FunctionToPointerDecay>
|     |   | | `-DeclRefExpr 0x1578fb078 <col:2> 'int ()' Function 0x1578fafc0 'obstack_grow0' 'int ()'
|     |   | |-ImplicitCastExpr 0x1578fb2f8 <col:17> 'struct obstack *' <LValueToRValue>
|     |   | | `-DeclRefExpr 0x1578fb098 <col:17> 'struct obstack *' lvalue ParmVar 0x160036848 'obs' 'struct obstack *'
|     |   | |-BinaryOperator 0x1578fb1f8 <col:22, col:43> 'const char *' '-'
|     |   | | |-BinaryOperator 0x1578fb128 <col:22, col:28> 'const char *' '+'
|     |   | | | |-ImplicitCastExpr 0x1578fb0f8 <col:22> 'const char *' <LValueToRValue>
|     |   | | | | `-DeclRefExpr 0x1578fb0b8 <col:22> 'const char *' lvalue Var 0x160808718 'str' 'const char *'
|     |   | | | `-ImplicitCastExpr 0x1578fb110 <col:28> 'int' <LValueToRValue>
|     |   | | |   `-DeclRefExpr 0x1578fb0d8 <col:28> 'int' lvalue Var 0x160808d28 'len2' 'int'
|     |   | | `-ParenExpr 0x1578fb1d8 <col:35, col:43> 'int'
|     |   | |   `-BinaryOperator 0x1578fb1b8 <col:36, col:42> 'int' '-'
|     |   | |     |-ImplicitCastExpr 0x1578fb188 <col:36> 'int' <LValueToRValue>
|     |   | |     | `-DeclRefExpr 0x1578fb148 <col:36> 'int' lvalue Var 0x160808958 'len' 'int'
|     |   | |     `-ImplicitCastExpr 0x1578fb1a0 <col:42> 'int' <LValueToRValue>
|     |   | |       `-DeclRefExpr 0x1578fb168 <col:42> 'int' lvalue Var 0x160808c90 'i' 'int'
|     |   | `-BinaryOperator 0x1578fb288 <col:46, col:52> 'int' '-'
|     |   |   |-ImplicitCastExpr 0x1578fb258 <col:46> 'int' <LValueToRValue>
|     |   |   | `-DeclRefExpr 0x1578fb218 <col:46> 'int' lvalue Var 0x160808958 'len' 'int'
|     |   |   `-ImplicitCastExpr 0x1578fb270 <col:52> 'int' <LValueToRValue>
|     |   |     `-DeclRefExpr 0x1578fb238 <col:52> 'int' lvalue Var 0x160808c90 'i' 'int'
|     |   `-CompoundStmt 0x1578fb6c8 <line:23:2, line:27:2>
|     |     |-WhileStmt 0x1578fb590 <line:24:4, line:25:29>
|     |     | |-BinaryOperator 0x1578fb3d8 <line:24:11, col:23> 'int' '<'
|     |     | | |-UnaryOperator 0x1578fb330 <col:11, col:12> 'int' postfix '++'
|     |     | | | `-DeclRefExpr 0x1578fb310 <col:11> 'int' lvalue Var 0x160808c90 'i' 'int'
|     |     | | `-BinaryOperator 0x1578fb3b8 <col:17, col:23> 'int' '-'
|     |     | |   |-ImplicitCastExpr 0x1578fb388 <col:17> 'int' <LValueToRValue>
|     |     | |   | `-DeclRefExpr 0x1578fb348 <col:17> 'int' lvalue Var 0x160808958 'len' 'int'
|     |     | |   `-ImplicitCastExpr 0x1578fb3a0 <col:23> 'int' <LValueToRValue>
|     |     | |     `-DeclRefExpr 0x1578fb368 <col:23> 'int' lvalue Var 0x160808d28 'len2' 'int'
|     |     | `-CallExpr 0x1578fb548 <line:25:6, col:29> 'int'
|     |     |   |-ImplicitCastExpr 0x1578fb530 <col:6> 'int (*)()' <FunctionToPointerDecay>
|     |     |   | `-DeclRefExpr 0x1578fb4d8 <col:6> 'int ()' Function 0x1578fb420 'obstack_1grow' 'int ()'
|     |     |   |-ImplicitCastExpr 0x1578fb578 <col:21> 'struct obstack *' <LValueToRValue>
|     |     |   | `-DeclRefExpr 0x1578fb4f8 <col:21> 'struct obstack *' lvalue ParmVar 0x160036848 'obs' 'struct obstack *'
|     |     |   `-CharacterLiteral 0x1578fb518 <col:26> 'int' 48
|     |     `-CallExpr 0x1578fb648 <line:26:4, col:33> 'int'
|     |       |-ImplicitCastExpr 0x1578fb630 <col:4> 'int (*)()' <FunctionToPointerDecay>
|     |       | `-DeclRefExpr 0x1578fb5b0 <col:4> 'int ()' Function 0x1578fafc0 'obstack_grow0' 'int ()'
|     |       |-ImplicitCastExpr 0x1578fb680 <col:19> 'struct obstack *' <LValueToRValue>
|     |       | `-DeclRefExpr 0x1578fb5d0 <col:19> 'struct obstack *' lvalue ParmVar 0x160036848 'obs' 'struct obstack *'
|     |       |-ImplicitCastExpr 0x1578fb698 <col:24> 'const char *' <LValueToRValue>
|     |       | `-DeclRefExpr 0x1578fb5f0 <col:24> 'const char *' lvalue Var 0x160808718 'str' 'const char *'
|     |       `-ImplicitCastExpr 0x1578fb6b0 <col:29> 'int' <LValueToRValue>
|     |         `-DeclRefExpr 0x1578fb610 <col:29> 'int' lvalue Var 0x160808d28 'len2' 'int'
|     `-CallExpr 0x1578fb920 <line:30:5, col:33> 'int'
|       |-ImplicitCastExpr 0x1578fb908 <col:5> 'int (*)()' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1578fb848 <col:5> 'int ()' Function 0x1578fb790 'mkstemp_helper' 'int ()'
|       |-ImplicitCastExpr 0x1578fb950 <col:21> 'struct obstack *' <LValueToRValue>
|       | `-DeclRefExpr 0x1578fb868 <col:21> 'struct obstack *' lvalue ParmVar 0x160036848 'obs' 'struct obstack *'
|       `-CallExpr 0x1578fb8e0 <col:26, col:32> 'int'
|         |-ImplicitCastExpr 0x1578fb8c8 <col:26> 'int (*)()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x1578fb888 <col:26> 'int ()' Function 0x1608087a8 'ARG' 'int ()'
|         `-IntegerLiteral 0x1578fb8a8 <col:31> 'int' 1
`-FunctionDecl 0x1608089f8 <line:9:17> col:17 implicit used strlen 'unsigned long (const char *)' extern
  |-ParmVarDecl 0x160808af8 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x160808aa0 <<invalid sloc>> Implicit 902
