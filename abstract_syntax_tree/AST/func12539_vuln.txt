TranslationUnitDecl 0x142052408 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1420532b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1420529d0 '__int128'
|-TypedefDecl 0x142053328 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1420529f0 'unsigned __int128'
|-TypedefDecl 0x142123830 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x142123600 'struct __NSConstantString_tag'
|   `-Record 0x142053380 '__NSConstantString_tag'
|-TypedefDecl 0x142123898 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x142052b90 '__SVInt8_t'
|-TypedefDecl 0x142123900 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x142052bb0 '__SVInt16_t'
|-TypedefDecl 0x142123968 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x142052bd0 '__SVInt32_t'
|-TypedefDecl 0x1421239d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x142052bf0 '__SVInt64_t'
|-TypedefDecl 0x142123a38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x142052c10 '__SVUint8_t'
|-TypedefDecl 0x142123aa0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x142052c30 '__SVUint16_t'
|-TypedefDecl 0x142123b08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x142052c50 '__SVUint32_t'
|-TypedefDecl 0x142123b70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x142052c70 '__SVUint64_t'
|-TypedefDecl 0x142123bd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x142052c90 '__SVFloat16_t'
|-TypedefDecl 0x142123c40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x142052cb0 '__SVFloat32_t'
|-TypedefDecl 0x142123ca8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x142052cd0 '__SVFloat64_t'
|-TypedefDecl 0x142123d10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x142052cf0 '__SVBfloat16_t'
|-TypedefDecl 0x142123d78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x142052d10 '__clang_svint8x2_t'
|-TypedefDecl 0x142123de0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x142052d30 '__clang_svint16x2_t'
|-TypedefDecl 0x142123e48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x142052d50 '__clang_svint32x2_t'
|-TypedefDecl 0x142123eb0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x142052d70 '__clang_svint64x2_t'
|-TypedefDecl 0x142123f18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x142052d90 '__clang_svuint8x2_t'
|-TypedefDecl 0x142123f80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x142052db0 '__clang_svuint16x2_t'
|-TypedefDecl 0x142123fe8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x142052dd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x142124050 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x142052df0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1421240b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x142052e10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x142124120 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x142052e30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x142124188 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x142052e50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1421241f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x142052e70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x142124258 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x142052e90 '__clang_svint8x3_t'
|-TypedefDecl 0x1421242c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x142052eb0 '__clang_svint16x3_t'
|-TypedefDecl 0x142124328 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x142052ed0 '__clang_svint32x3_t'
|-TypedefDecl 0x142124390 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x142052ef0 '__clang_svint64x3_t'
|-TypedefDecl 0x1421243f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x142052f10 '__clang_svuint8x3_t'
|-TypedefDecl 0x142124460 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x142052f30 '__clang_svuint16x3_t'
|-TypedefDecl 0x1421244c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x142052f50 '__clang_svuint32x3_t'
|-TypedefDecl 0x142124530 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x142052f70 '__clang_svuint64x3_t'
|-TypedefDecl 0x142124598 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x142052f90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x142124e00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x142052fb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x142124e68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x142052fd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x142124ed0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x142052ff0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x142124f38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x142053010 '__clang_svint8x4_t'
|-TypedefDecl 0x142124fa0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x142053030 '__clang_svint16x4_t'
|-TypedefDecl 0x142125008 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x142053050 '__clang_svint32x4_t'
|-TypedefDecl 0x142125070 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x142053070 '__clang_svint64x4_t'
|-TypedefDecl 0x1421250d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x142053090 '__clang_svuint8x4_t'
|-TypedefDecl 0x142125140 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1420530b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1421251a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1420530d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x142125210 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1420530f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x142125278 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x142053110 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1421252e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x142053130 '__clang_svfloat32x4_t'
|-TypedefDecl 0x142125348 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x142053150 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1421253b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x142053170 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x142125418 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x142053190 '__SVBool_t'
|-TypedefDecl 0x142125480 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1420531b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1421254e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1420531d0 '__clang_svboolx4_t'
|-TypedefDecl 0x142125550 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1420531f0 '__SVCount_t'
|-TypedefDecl 0x1421255f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1421255b0 'char *'
|   `-BuiltinType 0x1420524b0 'char'
|-TypedefDecl 0x142125668 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1421255b0 'char *'
|   `-BuiltinType 0x1420524b0 'char'
`-FunctionDecl 0x1421257f8 <dataset_diviso_filec/func12539_vuln.c:1:1, line:64:1> line:1:11 invalid BS_ReadByte 'int (int *)' static
  |-ParmVarDecl 0x142125728 <col:23, col:37> col:37 referenced invalid bs 'int *'
  `-CompoundStmt 0x142141458 <line:2:1, line:64:1>
    |-DeclStmt 0x142125920 <line:3:2, col:13>
    | `-VarDecl 0x1421258b8 <col:2, col:7> col:7 used is_eos '_Bool'
    |-IfStmt 0x14213f928 <line:4:2, line:22:2>
    | |-BinaryOperator 0x1421259f8 <line:4:6, col:20> 'int' contains-errors '=='
    | | |-CXXDependentScopeMemberExpr 0x142125958 <col:6, col:10> '<dependent type>' contains-errors lvalue ->bsmode
    | | | `-RecoveryExpr 0x142125938 <col:6> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x1421259d8 <col:20> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x14213f900 <col:39, line:22:2>
    |   |-IfStmt 0x14213ee98 <line:6:3, line:10:3>
    |   | |-BinaryOperator 0x142125ae8 <line:6:7, col:27> 'int' contains-errors '>='
    |   | | |-CXXDependentScopeMemberExpr 0x142125a38 <col:7, col:11> '<dependent type>' contains-errors lvalue ->position
    |   | | | `-RecoveryExpr 0x142125a18 <col:7> '<dependent type>' contains-errors lvalue
    |   | | `-CXXDependentScopeMemberExpr 0x142125aa0 <col:23, col:27> '<dependent type>' contains-errors lvalue ->size
    |   | |   `-RecoveryExpr 0x142125a80 <col:23> '<dependent type>' contains-errors lvalue
    |   | `-CompoundStmt 0x14213ee70 <col:33, line:10:3>
    |   |   |-IfStmt 0x142125c90 <line:7:4, col:48>
    |   |   | |-CXXDependentScopeMemberExpr 0x142125b28 <col:8, col:12> '<dependent type>' contains-errors lvalue ->EndOfStream
    |   |   | | `-RecoveryExpr 0x142125b08 <col:8> '<dependent type>' contains-errors lvalue
    |   |   | `-CallExpr 0x142125c68 <col:25, col:48> '<dependent type>' contains-errors
    |   |   |   |-CXXDependentScopeMemberExpr 0x142125bb8 <col:25, col:29> '<dependent type>' contains-errors lvalue ->EndOfStream
    |   |   |   | `-RecoveryExpr 0x142125b90 <col:25> '<dependent type>' contains-errors lvalue
    |   |   |   |   `-DeclRefExpr 0x142125b70 <col:25> 'int *' lvalue ParmVar 0x142125728 'bs' 'int *'
    |   |   |   `-CXXDependentScopeMemberExpr 0x142125c20 <col:41, col:45> '<dependent type>' contains-errors lvalue ->par
    |   |   |     `-RecoveryExpr 0x142125c00 <col:41> '<dependent type>' contains-errors lvalue
    |   |   |-IfStmt 0x14213ee20 <line:8:4, col:50>
    |   |   | |-UnaryOperator 0x142125d30 <col:8, col:13> '<dependent type>' contains-errors prefix '!' cannot overflow
    |   |   | | `-ImplicitCastExpr 0x142125d18 <col:9, col:13> '<dependent type>' contains-errors <LValueToRValue>
    |   |   | |   `-CXXDependentScopeMemberExpr 0x142125cd0 <col:9, col:13> '<dependent type>' contains-errors lvalue ->overflow_state
    |   |   | |     `-RecoveryExpr 0x142125cb0 <col:9> '<dependent type>' contains-errors lvalue
    |   |   | `-BinaryOperator 0x14213ee00 <col:29, col:50> '<dependent type>' contains-errors '='
    |   |   |   |-CXXDependentScopeMemberExpr 0x142125d90 <col:29, col:33> '<dependent type>' contains-errors lvalue ->overflow_state
    |   |   |   | `-RecoveryExpr 0x142125d68 <col:29> '<dependent type>' contains-errors lvalue
    |   |   |   |   `-DeclRefExpr 0x142125d48 <col:29> 'int *' lvalue ParmVar 0x142125728 'bs' 'int *'
    |   |   |   `-IntegerLiteral 0x142125dd8 <col:50> 'int' 1
    |   |   `-ReturnStmt 0x14213ee60 <line:9:4, col:11>
    |   |     `-IntegerLiteral 0x14213ee40 <col:11> 'int' 0
    |   |-IfStmt 0x14213f898 <line:13:3, line:20:3>
    |   | |-CXXDependentScopeMemberExpr 0x14213eff8 <line:13:7, col:11> '<dependent type>' contains-errors lvalue ->remove_emul_prevention_byte
    |   | | `-RecoveryExpr 0x14213efd8 <col:7> '<dependent type>' contains-errors lvalue
    |   | `-CompoundStmt 0x14213f878 <col:40, line:20:3>
    |   |   |-IfStmt 0x14213f618 <line:14:4, line:17:4>
    |   |   | |-RecoveryExpr 0x14213f3f0 <line:14:8, col:103> '_Bool' contains-errors
    |   |   | `-CompoundStmt 0x14213f600 <col:106, line:17:4>
    |   |   |   `-BinaryOperator 0x14213f4c0 <line:15:5, col:20> '<dependent type>' contains-errors '='
    |   |   |     |-CXXDependentScopeMemberExpr 0x14213f458 <col:5, col:9> '<dependent type>' contains-errors lvalue ->nb_zeros
    |   |   |     | `-RecoveryExpr 0x14213f430 <col:5> '<dependent type>' contains-errors lvalue
    |   |   |     |   `-DeclRefExpr 0x14213f410 <col:5> 'int *' lvalue ParmVar 0x142125728 'bs' 'int *'
    |   |   |     `-IntegerLiteral 0x14213f4a0 <col:20> 'int' 0
    |   |   `-IfStmt 0x14213f848 <line:18:4, line:19:24> has_else
    |   |     |-UnaryOperator 0x14213f6b8 <line:18:8, col:9> '<dependent type>' contains-errors prefix '!' cannot overflow
    |   |     | `-ImplicitCastExpr 0x14213f6a0 <col:9> '<dependent type>' contains-errors <LValueToRValue>
    |   |     |   `-RecoveryExpr 0x14213f680 <col:9> '<dependent type>' contains-errors lvalue
    |   |     |-UnaryOperator 0x14213f760 <col:14, col:26> '<dependent type>' contains-errors postfix '++' cannot overflow
    |   |     | `-CXXDependentScopeMemberExpr 0x14213f718 <col:14, col:18> '<dependent type>' contains-errors lvalue ->nb_zeros
    |   |     |   `-RecoveryExpr 0x14213f6f0 <col:14> '<dependent type>' contains-errors lvalue
    |   |     |     `-DeclRefExpr 0x14213f6d0 <col:14> 'int *' lvalue ParmVar 0x142125728 'bs' 'int *'
    |   |     `-BinaryOperator 0x14213f828 <line:19:9, col:24> '<dependent type>' contains-errors '='
    |   |       |-CXXDependentScopeMemberExpr 0x14213f7c0 <col:9, col:13> '<dependent type>' contains-errors lvalue ->nb_zeros
    |   |       | `-RecoveryExpr 0x14213f798 <col:9> '<dependent type>' contains-errors lvalue
    |   |       |   `-DeclRefExpr 0x14213f778 <col:9> 'int *' lvalue ParmVar 0x142125728 'bs' 'int *'
    |   |       `-IntegerLiteral 0x14213f808 <col:24> 'int' 0
    |   `-ReturnStmt 0x14213f8f0 <line:21:3, col:10>
    |     `-RecoveryExpr 0x14213f8d0 <col:10> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14213fb78 <line:23:2, line:24:26>
    | |-CXXDependentScopeMemberExpr 0x14213f968 <line:23:6, col:10> '<dependent type>' contains-errors lvalue ->cache_write
    | | `-RecoveryExpr 0x14213f948 <col:6> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x14213fb50 <line:24:3, col:26> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14213fb10 <col:3> 'int ()' Function 0x14213fa58 'bs_flush_write_cache' 'int ()'
    |   `-RecoveryExpr 0x14213fb30 <col:24> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x14213fd48 <line:26:2, col:29> '_Bool' contains-errors '='
    | |-DeclRefExpr 0x14213fb98 <col:2> '_Bool' lvalue Var 0x1421258b8 'is_eos' '_Bool'
    | `-CallExpr 0x14213fd20 <col:11, col:29> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14213fc98 <col:11> 'int ()' Function 0x14213fbe0 'gf_feof' 'int ()'
    |   `-CXXDependentScopeMemberExpr 0x14213fcd8 <col:19, col:23> '<dependent type>' contains-errors lvalue ->stream
    |     `-RecoveryExpr 0x14213fcb8 <col:19> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x142140d70 <line:29:2, line:53:2>
    | |-BinaryOperator 0x14213fe48 <line:29:6, col:21> 'int' contains-errors '||'
    | | |-UnaryOperator 0x14213fda0 <col:6, col:7> 'int' prefix '!' cannot overflow
    | | | `-ImplicitCastExpr 0x14213fd88 <col:7> '_Bool' <LValueToRValue>
    | | |   `-DeclRefExpr 0x14213fd68 <col:7> '_Bool' lvalue Var 0x1421258b8 'is_eos' '_Bool'
    | | `-CXXDependentScopeMemberExpr 0x14213fe00 <col:17, col:21> '<dependent type>' contains-errors lvalue ->cache_read
    | |   `-RecoveryExpr 0x14213fdb8 <col:17> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x142140d38 <col:33, line:53:2>
    |   |-DeclStmt 0x14213ff18 <line:31:3, col:24>
    |   | `-VarDecl 0x14213fe78 <col:3, col:16> col:8 used loc_eos '_Bool' cinit
    |   |   `-RecoveryExpr 0x14213fef8 <col:16> '<dependent type>' contains-errors lvalue
    |   |-CallExpr 0x142140120 <line:32:3, col:32> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x142140010 <col:3> 'int ()' Function 0x14213ff58 'assert' 'int ()'
    |   | `-BinaryOperator 0x142140100 <col:10, col:28> 'int' contains-errors '<='
    |   |   |-CXXDependentScopeMemberExpr 0x142140050 <col:10, col:14> '<dependent type>' contains-errors lvalue ->position
    |   |   | `-RecoveryExpr 0x142140030 <col:10> '<dependent type>' contains-errors lvalue
    |   |   `-CXXDependentScopeMemberExpr 0x1421400b8 <col:24, col:28> '<dependent type>' contains-errors lvalue ->size
    |   |     `-RecoveryExpr 0x142140098 <col:24> '<dependent type>' contains-errors lvalue
    |   |-UnaryOperator 0x1421401d8 <line:33:3, col:15> '<dependent type>' contains-errors postfix '++' cannot overflow
    |   | `-CXXDependentScopeMemberExpr 0x142140190 <col:3, col:7> '<dependent type>' contains-errors lvalue ->position
    |   |   `-RecoveryExpr 0x142140168 <col:3> '<dependent type>' contains-errors lvalue
    |   |     `-DeclRefExpr 0x142140148 <col:3> 'int *' lvalue ParmVar 0x142125728 'bs' 'int *'
    |   |-IfStmt 0x142140448 <line:36:3, col:21>
    |   | |-ImplicitCastExpr 0x1421403c8 <col:7> '_Bool' contains-errors <LValueToRValue>
    |   | | `-DeclRefExpr 0x1421403a8 <col:7> '_Bool' contains-errors lvalue Var 0x14213fe78 'loc_eos' '_Bool'
    |   | `-GotoStmt 0x142140430 <col:16, col:21> 'bs_eof' 0x1421403e0
    |   `-IfStmt 0x142140d18 <line:38:3, line:51:3>
    |     |-CXXDependentScopeMemberExpr 0x142140488 <line:38:7, col:11> '<dependent type>' contains-errors lvalue ->remove_emul_prevention_byte
    |     | `-RecoveryExpr 0x142140468 <col:7> '<dependent type>' contains-errors lvalue
    |     `-CompoundStmt 0x142140cf8 <col:40, line:51:3>
    |       |-IfStmt 0x142140b10 <line:39:4, line:48:4>
    |       | |-RecoveryExpr 0x142140700 <line:39:8, col:66> '_Bool' contains-errors
    |       | `-CompoundStmt 0x142140af8 <col:69, line:48:4>
    |       |   `-IfStmt 0x142140ac8 <line:41:5, line:47:5> has_else
    |       |     |-RecoveryExpr 0x142140740 <line:41:9, col:16> '_Bool' contains-errors
    |       |     |-CompoundStmt 0x1421408d8 <col:22, line:45:5>
    |       |     | |-BinaryOperator 0x142140810 <line:42:6, col:21> '<dependent type>' contains-errors '='
    |       |     | | |-CXXDependentScopeMemberExpr 0x1421407a8 <col:6, col:10> '<dependent type>' contains-errors lvalue ->nb_zeros
    |       |     | | | `-RecoveryExpr 0x142140780 <col:6> '<dependent type>' contains-errors lvalue
    |       |     | | |   `-DeclRefExpr 0x142140760 <col:6> 'int *' lvalue ParmVar 0x142125728 'bs' 'int *'
    |       |     | | `-IntegerLiteral 0x1421407f0 <col:21> 'int' 0
    |       |     | `-UnaryOperator 0x1421408c0 <line:44:6, col:18> '<dependent type>' contains-errors postfix '++' cannot overflow
    |       |     |   `-CXXDependentScopeMemberExpr 0x142140878 <col:6, col:10> '<dependent type>' contains-errors lvalue ->position
    |       |     |     `-RecoveryExpr 0x142140850 <col:6> '<dependent type>' contains-errors lvalue
    |       |     |       `-DeclRefExpr 0x142140830 <col:6> 'int *' lvalue ParmVar 0x142125728 'bs' 'int *'
    |       |     `-CompoundStmt 0x142140ab0 <line:45:12, line:47:5>
    |       |       `-CallExpr 0x142140a80 <line:46:6, col:33> '<dependent type>' contains-errors
    |       |         |-DeclRefExpr 0x1421409d8 <col:6> 'int ()' Function 0x142140920 'gf_bs_seek' 'int ()'
    |       |         |-RecoveryExpr 0x1421409f8 <col:17> '<dependent type>' contains-errors lvalue
    |       |         `-CXXDependentScopeMemberExpr 0x142140a38 <col:21, col:25> '<dependent type>' contains-errors lvalue ->position
    |       |           `-RecoveryExpr 0x142140a18 <col:21> '<dependent type>' contains-errors lvalue
    |       `-IfStmt 0x142140cc8 <line:49:4, line:50:24> has_else
    |         |-RecoveryExpr 0x142140b30 <line:49:8, col:9> '_Bool' contains-errors
    |         |-UnaryOperator 0x142140be0 <col:14, col:26> '<dependent type>' contains-errors postfix '++' cannot overflow
    |         | `-CXXDependentScopeMemberExpr 0x142140b98 <col:14, col:18> '<dependent type>' contains-errors lvalue ->nb_zeros
    |         |   `-RecoveryExpr 0x142140b70 <col:14> '<dependent type>' contains-errors lvalue
    |         |     `-DeclRefExpr 0x142140b50 <col:14> 'int *' lvalue ParmVar 0x142125728 'bs' 'int *'
    |         `-BinaryOperator 0x142140ca8 <line:50:9, col:24> '<dependent type>' contains-errors '='
    |           |-CXXDependentScopeMemberExpr 0x142140c40 <col:9, col:13> '<dependent type>' contains-errors lvalue ->nb_zeros
    |           | `-RecoveryExpr 0x142140c18 <col:9> '<dependent type>' contains-errors lvalue
    |           |   `-DeclRefExpr 0x142140bf8 <col:9> 'int *' lvalue ParmVar 0x142125728 'bs' 'int *'
    |           `-IntegerLiteral 0x142140c88 <col:24> 'int' 0
    |-LabelStmt 0x142141290 <line:55:1, line:61:2> 'bs_eof'
    | `-IfStmt 0x142141260 <line:56:2, line:61:2> has_else
    |   |-CXXDependentScopeMemberExpr 0x142140db0 <line:56:6, col:10> '<dependent type>' contains-errors lvalue ->EndOfStream
    |   | `-RecoveryExpr 0x142140d90 <col:6> '<dependent type>' contains-errors lvalue
    |   |-CompoundStmt 0x1421410a8 <col:23, line:59:2>
    |   | |-CallExpr 0x142140ef8 <line:57:3, col:26> '<dependent type>' contains-errors
    |   | | |-CXXDependentScopeMemberExpr 0x142140e48 <col:3, col:7> '<dependent type>' contains-errors lvalue ->EndOfStream
    |   | | | `-RecoveryExpr 0x142140e20 <col:3> '<dependent type>' contains-errors lvalue
    |   | | |   `-DeclRefExpr 0x142140e00 <col:3> 'int *' lvalue ParmVar 0x142125728 'bs' 'int *'
    |   | | `-CXXDependentScopeMemberExpr 0x142140eb0 <col:19, col:23> '<dependent type>' contains-errors lvalue ->par
    |   | |   `-RecoveryExpr 0x142140e90 <col:19> '<dependent type>' contains-errors lvalue
    |   | `-IfStmt 0x142141088 <line:58:3, col:49>
    |   |   |-UnaryOperator 0x142140fa0 <col:7, col:12> '<dependent type>' contains-errors prefix '!' cannot overflow
    |   |   | `-ImplicitCastExpr 0x142140f88 <col:8, col:12> '<dependent type>' contains-errors <LValueToRValue>
    |   |   |   `-CXXDependentScopeMemberExpr 0x142140f40 <col:8, col:12> '<dependent type>' contains-errors lvalue ->overflow_state
    |   |   |     `-RecoveryExpr 0x142140f20 <col:8> '<dependent type>' contains-errors lvalue
    |   |   `-BinaryOperator 0x142141068 <col:28, col:49> '<dependent type>' contains-errors '='
    |   |     |-CXXDependentScopeMemberExpr 0x142141000 <col:28, col:32> '<dependent type>' contains-errors lvalue ->overflow_state
    |   |     | `-RecoveryExpr 0x142140fd8 <col:28> '<dependent type>' contains-errors lvalue
    |   |     |   `-DeclRefExpr 0x142140fb8 <col:28> 'int *' lvalue ParmVar 0x142125728 'bs' 'int *'
    |   |     `-IntegerLiteral 0x142141048 <col:49> 'int' 1
    |   `-CompoundStmt 0x142141250 <line:59:9, line:61:2>
    |-CallExpr 0x142141400 <line:62:2, col:35> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1421412b0 <col:2> 'int ()' Function 0x14213ff58 'assert' 'int ()'
    | `-BinaryOperator 0x1421413e0 <col:9, col:31> 'int' contains-errors '<='
    |   |-CXXDependentScopeMemberExpr 0x1421412f0 <col:9, col:13> '<dependent type>' contains-errors lvalue ->position
    |   | `-RecoveryExpr 0x1421412d0 <col:9> '<dependent type>' contains-errors lvalue
    |   `-BinaryOperator 0x1421413c0 <col:25, col:31> '<dependent type>' contains-errors '+'
    |     |-IntegerLiteral 0x142141338 <col:25> 'int' 1
    |     `-CXXDependentScopeMemberExpr 0x142141378 <col:27, col:31> '<dependent type>' contains-errors lvalue ->size
    |       `-RecoveryExpr 0x142141358 <col:27> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x142141448 <line:63:2, col:9>
      `-IntegerLiteral 0x142141428 <col:9> 'int' 0
