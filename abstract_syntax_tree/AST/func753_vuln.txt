TranslationUnitDecl 0x150855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1508564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x150855bd0 '__int128'
|-TypedefDecl 0x150856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x150855bf0 'unsigned __int128'
|-TypedefDecl 0x15100be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15100bc00 'struct __NSConstantString_tag'
|   `-Record 0x150856580 '__NSConstantString_tag'
|-TypedefDecl 0x15100be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x150855d90 '__SVInt8_t'
|-TypedefDecl 0x15100bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x150855db0 '__SVInt16_t'
|-TypedefDecl 0x15100bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x150855dd0 '__SVInt32_t'
|-TypedefDecl 0x15100bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x150855df0 '__SVInt64_t'
|-TypedefDecl 0x15100c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x150855e10 '__SVUint8_t'
|-TypedefDecl 0x15100c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x150855e30 '__SVUint16_t'
|-TypedefDecl 0x15100c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x150855e50 '__SVUint32_t'
|-TypedefDecl 0x15100c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x150855e70 '__SVUint64_t'
|-TypedefDecl 0x15100c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x150855e90 '__SVFloat16_t'
|-TypedefDecl 0x15100c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x150855eb0 '__SVFloat32_t'
|-TypedefDecl 0x15100c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x150855ed0 '__SVFloat64_t'
|-TypedefDecl 0x15100c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x150855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15100c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x150855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15100c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x150855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15100c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x150855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15100c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x150855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15100c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x150855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15100c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x150855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15100c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x150855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15100c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x150855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15100c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x150856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15100c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x150856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15100c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x150856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15100c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x150856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15100c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x150856090 '__clang_svint8x3_t'
|-TypedefDecl 0x15100c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1508560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15100c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1508560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15100c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1508560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15100c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x150856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15100ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x150856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15100cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x150856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15100cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x150856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15100cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x150856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15100d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1508561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15100d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1508561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15100d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1508561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15100d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x150856210 '__clang_svint8x4_t'
|-TypedefDecl 0x15100d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x150856230 '__clang_svint16x4_t'
|-TypedefDecl 0x15100d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x150856250 '__clang_svint32x4_t'
|-TypedefDecl 0x15100d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x150856270 '__clang_svint64x4_t'
|-TypedefDecl 0x15100d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x150856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15100d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1508562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15100d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1508562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15100d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1508562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15100d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x150856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15100d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x150856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15100d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x150856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15100d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x150856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15100da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x150856390 '__SVBool_t'
|-TypedefDecl 0x15100da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1508563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15100dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1508563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15100db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1508563f0 '__SVCount_t'
|-TypedefDecl 0x15100dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15100dbb0 'char *'
|   `-BuiltinType 0x1508556b0 'char'
|-TypedefDecl 0x15100dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15100dbb0 'char *'
|   `-BuiltinType 0x1508556b0 'char'
`-FunctionDecl 0x151808348 <dataset_diviso_filec/func753_vuln.c:1:1, line:74:1> line:1:19 audit_del_rule 'int (struct audit_entry *, struct list_head *)' static inline
  |-ParmVarDecl 0x15100e248 <col:34, col:54> col:54 used entry 'struct audit_entry *'
  |-ParmVarDecl 0x151808228 <line:2:6, col:24> col:24 used list 'struct list_head *'
  `-CompoundStmt 0x151028be0 <line:3:1, line:74:1>
    |-DeclStmt 0x151808540 <line:4:2, col:24>
    | `-VarDecl 0x1518084d8 <col:2, col:23> col:23 used e 'struct audit_entry *'
    |-DeclStmt 0x1518087f0 <line:5:2, col:51>
    | |-RecordDecl 0x151808558 <col:2, col:9> col:9 struct audit_field
    | `-VarDecl 0x1518086c8 <col:2, col:44> col:22 used inode_f 'struct audit_field *' cinit
    |   `-CXXDependentScopeMemberExpr 0x151808790 <col:32, col:44> '<dependent type>' contains-errors lvalue .inode_f
    |     `-RecoveryExpr 0x151808768 <col:32, col:39> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x151808730 <col:32> 'struct audit_entry *' lvalue ParmVar 0x15100e248 'entry' 'struct audit_entry *'
    |-DeclStmt 0x151808b38 <line:6:2, col:59>
    | |-RecordDecl 0x151808808 <col:2, col:9> col:9 struct audit_watch
    | |-VarDecl 0x151808978 <col:2, col:22> col:22 used watch 'struct audit_watch *'
    | `-VarDecl 0x151808a08 <col:2, col:54> col:30 used tmp_watch 'struct audit_watch *' cinit
    |   `-CXXDependentScopeMemberExpr 0x151808ad0 <col:42, col:54> '<dependent type>' contains-errors lvalue .watch
    |     `-RecoveryExpr 0x151808aa8 <col:42, col:49> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x151808a70 <col:42> 'struct audit_entry *' lvalue ParmVar 0x15100e248 'entry' 'struct audit_entry *'
    |-DeclStmt 0x151808de0 <line:7:2, col:44>
    | |-RecordDecl 0x151808b50 <col:2, col:9> col:9 struct audit_tree
    | `-VarDecl 0x151808cb8 <col:2, col:40> col:21 used tree 'struct audit_tree *' cinit
    |   `-CXXDependentScopeMemberExpr 0x151808d80 <col:28, col:40> '<dependent type>' contains-errors lvalue .tree
    |     `-RecoveryExpr 0x151808d58 <col:28, col:35> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x151808d20 <col:28> 'struct audit_entry *' lvalue ParmVar 0x15100e248 'entry' 'struct audit_entry *'
    |-CallExpr 0x151808fa0 <line:8:2, col:24> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x151808f20 <col:2> 'int ()' Function 0x151808e68 'LIST_HEAD' 'int ()'
    | `-RecoveryExpr 0x151808f80 <col:12> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x151809100 <line:9:2, col:16>
    | |-VarDecl 0x151808fe0 <col:2, col:6> col:6 used h 'int'
    | `-VarDecl 0x151809060 <col:2, col:15> col:9 used ret 'int' cinit
    |   `-IntegerLiteral 0x1518090c8 <col:15> 'int' 0
    |-IfStmt 0x151026bf0 <line:19:2, line:22:2>
    | |-ImplicitCastExpr 0x151809138 <line:19:6> 'struct audit_field *' contains-errors <LValueToRValue>
    | | `-DeclRefExpr 0x151809118 <col:6> 'struct audit_field *' contains-errors lvalue Var 0x1518086c8 'inode_f' 'struct audit_field *'
    | `-CompoundStmt 0x151026bd8 <col:15, line:22:2>
    |   `-BinaryOperator 0x151026b60 <line:20:3, col:34> 'int' contains-errors '='
    |     |-DeclRefExpr 0x151809150 <col:3> 'int' lvalue Var 0x151808fe0 'h' 'int'
    |     `-CallExpr 0x151026b38 <col:7, col:34> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x151026ab8 <col:7> 'int ()' Function 0x151026a00 'audit_hash_ino' 'int ()'
    |       `-RecoveryExpr 0x151026b10 <col:22, col:31> '<dependent type>' contains-errors lvalue
    |         `-DeclRefExpr 0x151026ad8 <col:22> 'struct audit_field *' contains-errors lvalue Var 0x1518086c8 'inode_f' 'struct audit_field *'
    |-CallExpr 0x151026da0 <line:24:2, col:32> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x151026cf0 <col:2> 'int ()' Function 0x151026c38 'mutex_lock' 'int ()'
    | `-UnaryOperator 0x151026d88 <col:13, col:14> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x151026d68 <col:14> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x151026ff0 <line:25:2, col:33> 'struct audit_entry *' '='
    | |-DeclRefExpr 0x151026dc8 <col:2> 'struct audit_entry *' lvalue Var 0x1518084d8 'e' 'struct audit_entry *'
    | `-ImplicitCastExpr 0x151026fd8 <col:6, col:33> 'struct audit_entry *' <IntegralToPointer>
    |   `-CallExpr 0x151026f78 <col:6, col:33> 'int'
    |     |-ImplicitCastExpr 0x151026f60 <col:6> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x151026ec8 <col:6> 'int ()' Function 0x151026e10 'audit_find_rule' 'int ()'
    |     |-ImplicitCastExpr 0x151026fa8 <col:22> 'struct audit_entry *' <LValueToRValue>
    |     | `-DeclRefExpr 0x151026ee8 <col:22> 'struct audit_entry *' lvalue ParmVar 0x15100e248 'entry' 'struct audit_entry *'
    |     `-ImplicitCastExpr 0x151026fc0 <col:29> 'struct list_head *' <LValueToRValue>
    |       `-DeclRefExpr 0x151026f08 <col:29> 'struct list_head *' lvalue ParmVar 0x151808228 'list' 'struct list_head *'
    |-IfStmt 0x1510273a0 <line:26:2, line:30:2>
    | |-UnaryOperator 0x151027048 <line:26:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x151027030 <col:7> 'struct audit_entry *' <LValueToRValue>
    | |   `-DeclRefExpr 0x151027010 <col:7> 'struct audit_entry *' lvalue Var 0x1518084d8 'e' 'struct audit_entry *'
    | `-CompoundStmt 0x151027378 <col:10, line:30:2>
    |   |-CallExpr 0x1510271f0 <line:27:3, col:35> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x151027140 <col:3> 'int ()' Function 0x151027088 'mutex_unlock' 'int ()'
    |   | `-UnaryOperator 0x1510271d8 <col:16, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   `-RecoveryExpr 0x1510271b8 <col:17> '<dependent type>' contains-errors lvalue
    |   |-BinaryOperator 0x1510272f0 <line:28:3, col:10> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x151027218 <col:3> 'int' lvalue Var 0x151809060 'ret' 'int'
    |   | `-UnaryOperator 0x1510272d8 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |   `-ImplicitCastExpr 0x1510272c0 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    |   |     `-RecoveryExpr 0x1510272a0 <col:10> '<dependent type>' contains-errors lvalue
    |   `-GotoStmt 0x151027360 <line:29:3, col:8> 'out' 0x151027310
    |-BinaryOperator 0x151027488 <line:32:2, col:18> 'struct audit_watch *' contains-errors '='
    | |-DeclRefExpr 0x1510273c0 <col:2> 'struct audit_watch *' lvalue Var 0x151808978 'watch' 'struct audit_watch *'
    | `-CXXDependentScopeMemberExpr 0x151027440 <col:10, col:18> '<dependent type>' contains-errors lvalue .watch
    |   `-RecoveryExpr 0x151027418 <col:10, col:13> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x1510273e0 <col:10> 'struct audit_entry *' lvalue Var 0x1518084d8 'e' 'struct audit_entry *'
    |-IfStmt 0x1510280c0 <line:33:2, line:47:2>
    | |-ImplicitCastExpr 0x1510274c8 <line:33:6> 'struct audit_watch *' <LValueToRValue>
    | | `-DeclRefExpr 0x1510274a8 <col:6> 'struct audit_watch *' lvalue Var 0x151808978 'watch' 'struct audit_watch *'
    | `-CompoundStmt 0x151028098 <col:13, line:47:2>
    |   |-DeclStmt 0x151027728 <line:34:3, col:46>
    |   | |-RecordDecl 0x1510274e0 <col:3, col:10> col:10 struct audit_parent
    |   | `-VarDecl 0x151027648 <col:3, col:40> col:24 used parent 'struct audit_parent *' cinit
    |   |   `-RecoveryExpr 0x1510276e8 <col:33, col:40> '<dependent type>' contains-errors lvalue
    |   |     `-DeclRefExpr 0x1510276b0 <col:33> 'struct audit_watch *' lvalue Var 0x151808978 'watch' 'struct audit_watch *'
    |   |-CallExpr 0x151027900 <line:36:3, col:26> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x151027820 <col:3> 'int ()' Function 0x151027768 'list_del' 'int ()'
    |   | `-UnaryOperator 0x1510278e8 <col:12, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   `-CXXDependentScopeMemberExpr 0x1510278a0 <col:13, col:21> '<dependent type>' contains-errors lvalue .rlist
    |   |     `-RecoveryExpr 0x151027878 <col:13, col:16> '<dependent type>' contains-errors lvalue
    |   |       `-DeclRefExpr 0x151027840 <col:13> 'struct audit_entry *' lvalue Var 0x1518084d8 'e' 'struct audit_entry *'
    |   `-IfStmt 0x151028078 <line:38:3, line:46:3>
    |     |-CallExpr 0x151027aa8 <line:38:7, col:31> '<dependent type>' contains-errors
    |     | |-DeclRefExpr 0x151027a10 <col:7> 'int ()' Function 0x151027950 'list_empty' 'int ()'
    |     | `-UnaryOperator 0x151027a90 <col:18, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     |   `-RecoveryExpr 0x151027a68 <col:19, col:26> '<dependent type>' contains-errors lvalue
    |     |     `-DeclRefExpr 0x151027a30 <col:19> 'struct audit_watch *' lvalue Var 0x151808978 'watch' 'struct audit_watch *'
    |     `-CompoundStmt 0x151028058 <col:34, line:46:3>
    |       |-CallExpr 0x151027c08 <line:39:4, col:28> 'int'
    |       | |-ImplicitCastExpr 0x151027bf0 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |       | | `-DeclRefExpr 0x151027bb0 <col:4> 'int ()' Function 0x151027af8 'audit_remove_watch' 'int ()'
    |       | `-ImplicitCastExpr 0x151027c30 <col:23> 'struct audit_watch *' <LValueToRValue>
    |       |   `-DeclRefExpr 0x151027bd0 <col:23> 'struct audit_watch *' lvalue Var 0x151808978 'watch' 'struct audit_watch *'
    |       `-IfStmt 0x151028038 <line:41:4, line:45:4>
    |         |-CallExpr 0x151027ce0 <line:41:8, col:35> '<dependent type>' contains-errors
    |         | |-DeclRefExpr 0x151027c48 <col:8> 'int ()' Function 0x151027950 'list_empty' 'int ()'
    |         | `-UnaryOperator 0x151027cc8 <col:19, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow
    |         |   `-RecoveryExpr 0x151027ca0 <col:20, col:28> '<dependent type>' contains-errors lvalue
    |         |     `-DeclRefExpr 0x151027c68 <col:20> 'struct audit_parent *' contains-errors lvalue Var 0x151027648 'parent' 'struct audit_parent *'
    |         `-CompoundStmt 0x151028020 <col:38, line:45:4>
    |           `-CallExpr 0x151027ff8 <line:44:5, col:37> '<dependent type>' contains-errors
    |             |-DeclRefExpr 0x151027f60 <col:5> 'int ()' Function 0x151027ea8 'get_inotify_watch' 'int ()'
    |             `-UnaryOperator 0x151027fe0 <col:23, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow
    |               `-RecoveryExpr 0x151027fb8 <col:24, col:32> '<dependent type>' contains-errors lvalue
    |                 `-DeclRefExpr 0x151027f80 <col:24> 'struct audit_parent *' contains-errors lvalue Var 0x151027648 'parent' 'struct audit_parent *'
    |-IfStmt 0x151028328 <line:49:2, line:50:34>
    | |-CXXDependentScopeMemberExpr 0x151028140 <line:49:6, col:14> '<dependent type>' contains-errors lvalue .tree
    | | `-RecoveryExpr 0x151028118 <col:6, col:9> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x1510280e0 <col:6> 'struct audit_entry *' lvalue Var 0x1518084d8 'e' 'struct audit_entry *'
    | `-CallExpr 0x151028300 <line:50:3, col:34> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x151028268 <col:3> 'int ()' Function 0x1510281b0 'audit_remove_tree_rule' 'int ()'
    |   `-UnaryOperator 0x1510282e8 <col:26, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x1510282c0 <col:27, col:30> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x151028288 <col:27> 'struct audit_entry *' lvalue Var 0x1518084d8 'e' 'struct audit_entry *'
    |-CallExpr 0x1510284c0 <line:52:2, col:23> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x151028428 <col:2> 'int ()' Function 0x151028370 'list_del_rcu' 'int ()'
    | `-UnaryOperator 0x1510284a8 <col:15, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x151028480 <col:16, col:19> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x151028448 <col:16> 'struct audit_entry *' lvalue Var 0x1518084d8 'e' 'struct audit_entry *'
    |-LabelStmt 0x151028990 <line:67:1, line:69:28> 'out'
    | `-IfStmt 0x151028970 <line:68:2, line:69:28>
    |   |-ImplicitCastExpr 0x1510287e0 <line:68:6> 'struct audit_watch *' contains-errors <LValueToRValue>
    |   | `-DeclRefExpr 0x1510287c0 <col:6> 'struct audit_watch *' contains-errors lvalue Var 0x151808a08 'tmp_watch' 'struct audit_watch *'
    |   `-CallExpr 0x151028930 <line:69:3, col:28> 'int' contains-errors
    |     |-ImplicitCastExpr 0x151028918 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x1510288d8 <col:3> 'int ()' Function 0x151028820 'audit_put_watch' 'int ()'
    |     `-ImplicitCastExpr 0x151028958 <col:19> 'struct audit_watch *' contains-errors <LValueToRValue>
    |       `-DeclRefExpr 0x1510288f8 <col:19> 'struct audit_watch *' contains-errors lvalue Var 0x151808a08 'tmp_watch' 'struct audit_watch *'
    |-IfStmt 0x151028b78 <line:70:2, line:71:22>
    | |-ImplicitCastExpr 0x1510289d0 <line:70:6> 'struct audit_tree *' contains-errors <LValueToRValue>
    | | `-DeclRefExpr 0x1510289b0 <col:6> 'struct audit_tree *' contains-errors lvalue Var 0x151808cb8 'tree' 'struct audit_tree *'
    | `-CallExpr 0x151028b38 <line:71:3, col:22> 'int' contains-errors
    |   |-ImplicitCastExpr 0x151028b20 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x151028ae0 <col:3> 'int ()' Function 0x151028a28 'audit_put_tree' 'int ()'
    |   `-ImplicitCastExpr 0x151028b60 <col:18> 'struct audit_tree *' contains-errors <LValueToRValue>
    |     `-DeclRefExpr 0x151028b00 <col:18> 'struct audit_tree *' contains-errors lvalue Var 0x151808cb8 'tree' 'struct audit_tree *'
    `-ReturnStmt 0x151028bd0 <line:73:2, col:9>
      `-ImplicitCastExpr 0x151028bb8 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x151028b98 <col:9> 'int' lvalue Var 0x151809060 'ret' 'int'
