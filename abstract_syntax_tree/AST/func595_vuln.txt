TranslationUnitDecl 0x14e055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14e0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14e055bd0 '__int128'
|-TypedefDecl 0x14e056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14e055bf0 'unsigned __int128'
|-TypedefDecl 0x14e126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14e126000 'struct __NSConstantString_tag'
|   `-Record 0x14e056580 '__NSConstantString_tag'
|-TypedefDecl 0x14e126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14e055d90 '__SVInt8_t'
|-TypedefDecl 0x14e126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14e055db0 '__SVInt16_t'
|-TypedefDecl 0x14e126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14e055dd0 '__SVInt32_t'
|-TypedefDecl 0x14e1263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14e055df0 '__SVInt64_t'
|-TypedefDecl 0x14e126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14e055e10 '__SVUint8_t'
|-TypedefDecl 0x14e1264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14e055e30 '__SVUint16_t'
|-TypedefDecl 0x14e126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14e055e50 '__SVUint32_t'
|-TypedefDecl 0x14e126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14e055e70 '__SVUint64_t'
|-TypedefDecl 0x14e1265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14e055e90 '__SVFloat16_t'
|-TypedefDecl 0x14e126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14e055eb0 '__SVFloat32_t'
|-TypedefDecl 0x14e1266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14e055ed0 '__SVFloat64_t'
|-TypedefDecl 0x14e126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14e055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14e126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14e055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14e1267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14e055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14e126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14e055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14e1268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14e055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14e126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14e055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14e126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14e055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14e1269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14e055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14e126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14e055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14e126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14e056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14e126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14e056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14e126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14e056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14e126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14e056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14e126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14e056090 '__clang_svint8x3_t'
|-TypedefDecl 0x14e126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14e0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14e126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14e0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14e126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14e0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14e126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14e056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14e126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14e056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14e126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14e056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14e126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14e056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14e126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14e056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14e127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14e0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14e127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14e0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14e1278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14e0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14e127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14e056210 '__clang_svint8x4_t'
|-TypedefDecl 0x14e1279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14e056230 '__clang_svint16x4_t'
|-TypedefDecl 0x14e127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14e056250 '__clang_svint32x4_t'
|-TypedefDecl 0x14e127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14e056270 '__clang_svint64x4_t'
|-TypedefDecl 0x14e127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14e056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14e127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14e0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14e127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14e0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14e127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14e0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14e127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14e056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14e127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14e056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14e127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14e056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14e127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14e056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14e127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14e056390 '__SVBool_t'
|-TypedefDecl 0x14e127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14e0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14e127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14e0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14e127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14e0563f0 '__SVCount_t'
|-TypedefDecl 0x14e127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14e127fb0 'char *'
|   `-BuiltinType 0x14e0556b0 'char'
|-TypedefDecl 0x14e128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14e127fb0 'char *'
|   `-BuiltinType 0x14e0556b0 'char'
|-FunctionDecl 0x14e128238 <dataset_diviso_filec/func595_vuln.c:1:1, line:17:1> line:1:1 translate_hex_string 'int (char *, char *)'
| |-ParmVarDecl 0x14e1280d8 <col:22, col:28> col:28 used s 'char *'
| |-ParmVarDecl 0x14e128158 <col:31, col:37> col:37 used saved_orphan 'char *'
| `-CompoundStmt 0x14e141750 <line:2:1, line:17:1>
|   |-DeclStmt 0x14e128438 <line:3:3, col:25>
|   | `-VarDecl 0x14e128350 <col:3, col:13> col:7 used c1 'int' cinit
|   |   `-ImplicitCastExpr 0x14e128420 <col:12, col:13> 'int' <IntegralCast>
|   |     `-ImplicitCastExpr 0x14e128408 <col:12, col:13> 'char' <LValueToRValue>
|   |       `-UnaryOperator 0x14e1283f0 <col:12, col:13> 'char' lvalue prefix '*' cannot overflow
|   |         `-ImplicitCastExpr 0x14e1283d8 <col:13> 'char *' <LValueToRValue>
|   |           `-DeclRefExpr 0x14e1283b8 <col:13> 'char *' lvalue ParmVar 0x14e128158 'saved_orphan' 'char *'
|   |-DeclStmt 0x14e128508 <line:4:3, col:18>
|   | `-VarDecl 0x14e128468 <col:3, col:17> col:9 used start 'char *' cinit
|   |   `-ImplicitCastExpr 0x14e1284f0 <col:17> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x14e1284d0 <col:17> 'char *' lvalue ParmVar 0x14e1280d8 's' 'char *'
|   |-DeclStmt 0x14e1285d8 <line:5:3, col:14>
|   | `-VarDecl 0x14e128538 <col:3, col:13> col:9 used t 'char *' cinit
|   |   `-ImplicitCastExpr 0x14e1285c0 <col:13> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x14e1285a0 <col:13> 'char *' lvalue ParmVar 0x14e1280d8 's' 'char *'
|   |-ForStmt 0x14e1415a0 <line:6:3, line:14:3>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-ImplicitCastExpr 0x14e128640 <line:6:10, col:11> 'char' <LValueToRValue>
|   | | `-UnaryOperator 0x14e128628 <col:10, col:11> 'char' lvalue prefix '*' cannot overflow
|   | |   `-ImplicitCastExpr 0x14e128610 <col:11> 'char *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x14e1285f0 <col:11> 'char *' lvalue ParmVar 0x14e1280d8 's' 'char *'
|   | |-UnaryOperator 0x14e128678 <col:14, col:15> 'char *' postfix '++'
|   | | `-DeclRefExpr 0x14e128658 <col:14> 'char *' lvalue ParmVar 0x14e1280d8 's' 'char *'
|   | `-CompoundStmt 0x14e141580 <col:19, line:14:3>
|   |   |-IfStmt 0x14e140fd8 <line:7:5, line:8:7>
|   |   | |-CallExpr 0x14e140f78 <line:7:9, col:19> 'int'
|   |   | | |-ImplicitCastExpr 0x14e140f60 <col:9> 'int (*)(int)' <FunctionToPointerDecay>
|   |   | | | `-DeclRefExpr 0x14e140ec0 <col:9> 'int (int)' Function 0x14e140d00 'isspace' 'int (int)'
|   |   | | `-ImplicitCastExpr 0x14e140fb8 <col:17, col:18> 'int' <IntegralCast>
|   |   | |   `-ImplicitCastExpr 0x14e140fa0 <col:17, col:18> 'char' <LValueToRValue>
|   |   | |     `-UnaryOperator 0x14e140f18 <col:17, col:18> 'char' lvalue prefix '*' cannot overflow
|   |   | |       `-ImplicitCastExpr 0x14e140f00 <col:18> 'char *' <LValueToRValue>
|   |   | |         `-DeclRefExpr 0x14e140ee0 <col:18> 'char *' lvalue ParmVar 0x14e1280d8 's' 'char *'
|   |   | `-ContinueStmt 0x14e140fd0 <line:8:7>
|   |   `-IfStmt 0x14e141550 <line:9:5, line:13:13> has_else
|   |     |-ImplicitCastExpr 0x14e141018 <line:9:9> 'int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x14e140ff8 <col:9> 'int' lvalue Var 0x14e128350 'c1' 'int'
|   |     |-CompoundStmt 0x14e141470 <col:13, line:12:5>
|   |     | |-BinaryOperator 0x14e1413f0 <line:10:7, col:43> 'char' '='
|   |     | | |-UnaryOperator 0x14e141068 <col:7, col:9> 'char' lvalue prefix '*' cannot overflow
|   |     | | | `-UnaryOperator 0x14e141050 <col:8, col:9> 'char *' postfix '++'
|   |     | | |   `-DeclRefExpr 0x14e141030 <col:8> 'char *' lvalue Var 0x14e128538 't' 'char *'
|   |     | | `-ImplicitCastExpr 0x14e1413d8 <col:14, col:43> 'char' <IntegralCast>
|   |     | |   `-BinaryOperator 0x14e1413b8 <col:14, col:43> 'int' '+'
|   |     | |     |-ParenExpr 0x14e1412b8 <col:14, col:30> 'int'
|   |     | |     | `-BinaryOperator 0x14e141298 <col:15, col:29> 'int' '<<'
|   |     | |     |   |-CallExpr 0x14e141238 <col:15, col:24> 'int'
|   |     | |     |   | |-ImplicitCastExpr 0x14e141220 <col:15> 'int (*)()' <FunctionToPointerDecay>
|   |     | |     |   | | `-DeclRefExpr 0x14e1411b0 <col:15> 'int ()' Function 0x14e1410f8 'hexval' 'int ()'
|   |     | |     |   | `-ImplicitCastExpr 0x14e141260 <col:22> 'int' <LValueToRValue>
|   |     | |     |   |   `-DeclRefExpr 0x14e1411d0 <col:22> 'int' lvalue Var 0x14e128350 'c1' 'int'
|   |     | |     |   `-IntegerLiteral 0x14e141278 <col:29> 'int' 4
|   |     | |     `-CallExpr 0x14e141360 <col:34, col:43> 'int'
|   |     | |       |-ImplicitCastExpr 0x14e141348 <col:34> 'int (*)()' <FunctionToPointerDecay>
|   |     | |       | `-DeclRefExpr 0x14e1412d8 <col:34> 'int ()' Function 0x14e1410f8 'hexval' 'int ()'
|   |     | |       `-ImplicitCastExpr 0x14e1413a0 <col:41, col:42> 'int' <IntegralCast>
|   |     | |         `-ImplicitCastExpr 0x14e141388 <col:41, col:42> 'char' <LValueToRValue>
|   |     | |           `-UnaryOperator 0x14e141330 <col:41, col:42> 'char' lvalue prefix '*' cannot overflow
|   |     | |             `-ImplicitCastExpr 0x14e141318 <col:42> 'char *' <LValueToRValue>
|   |     | |               `-DeclRefExpr 0x14e1412f8 <col:42> 'char *' lvalue ParmVar 0x14e1280d8 's' 'char *'
|   |     | `-BinaryOperator 0x14e141450 <line:11:7, col:12> 'int' '='
|   |     |   |-DeclRefExpr 0x14e141410 <col:7> 'int' lvalue Var 0x14e128350 'c1' 'int'
|   |     |   `-IntegerLiteral 0x14e141430 <col:12> 'int' 0
|   |     `-BinaryOperator 0x14e141530 <line:13:7, col:13> 'int' '='
|   |       |-DeclRefExpr 0x14e141490 <col:7> 'int' lvalue Var 0x14e128350 'c1' 'int'
|   |       `-ImplicitCastExpr 0x14e141518 <col:12, col:13> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x14e141500 <col:12, col:13> 'char' <LValueToRValue>
|   |           `-UnaryOperator 0x14e1414e8 <col:12, col:13> 'char' lvalue prefix '*' cannot overflow
|   |             `-ImplicitCastExpr 0x14e1414d0 <col:13> 'char *' <LValueToRValue>
|   |               `-DeclRefExpr 0x14e1414b0 <col:13> 'char *' lvalue ParmVar 0x14e1280d8 's' 'char *'
|   |-BinaryOperator 0x14e141678 <line:15:3, col:19> 'char' '='
|   | |-UnaryOperator 0x14e141610 <col:3, col:4> 'char' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x14e1415f8 <col:4> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x14e1415d8 <col:4> 'char *' lvalue ParmVar 0x14e128158 'saved_orphan' 'char *'
|   | `-ImplicitCastExpr 0x14e141660 <col:19> 'char' <IntegralCast>
|   |   `-ImplicitCastExpr 0x14e141648 <col:19> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x14e141628 <col:19> 'int' lvalue Var 0x14e128350 'c1' 'int'
|   `-ReturnStmt 0x14e141740 <line:16:3, col:14>
|     `-ImplicitCastExpr 0x14e141728 <col:10, col:14> 'int' <IntegralCast>
|       `-BinaryOperator 0x14e141708 <col:10, col:14> 'long' '-'
|         |-ImplicitCastExpr 0x14e1416d8 <col:10> 'char *' <LValueToRValue>
|         | `-DeclRefExpr 0x14e141698 <col:10> 'char *' lvalue Var 0x14e128538 't' 'char *'
|         `-ImplicitCastExpr 0x14e1416f0 <col:14> 'char *' <LValueToRValue>
|           `-DeclRefExpr 0x14e1416b8 <col:14> 'char *' lvalue Var 0x14e128468 'start' 'char *'
`-FunctionDecl 0x14e140d00 <line:7:9> col:9 implicit used isspace 'int (int)' extern
  |-ParmVarDecl 0x14e140e00 <<invalid sloc>> <invalid sloc> 'int'
  |-BuiltinAttr 0x14e140da8 <<invalid sloc>> Implicit 929
  |-NoThrowAttr 0x14e140e70 <col:9> Implicit
  `-PureAttr 0x14e140e98 <col:9> Implicit
