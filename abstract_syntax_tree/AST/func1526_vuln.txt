TranslationUnitDecl 0x128055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1280564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x128055bd0 '__int128'
|-TypedefDecl 0x128056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x128055bf0 'unsigned __int128'
|-TypedefDecl 0x10500be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x10500bc00 'struct __NSConstantString_tag'
|   `-Record 0x128056580 '__NSConstantString_tag'
|-TypedefDecl 0x10500be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x128055d90 '__SVInt8_t'
|-TypedefDecl 0x10500bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x128055db0 '__SVInt16_t'
|-TypedefDecl 0x10500bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x128055dd0 '__SVInt32_t'
|-TypedefDecl 0x10500bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x128055df0 '__SVInt64_t'
|-TypedefDecl 0x10500c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x128055e10 '__SVUint8_t'
|-TypedefDecl 0x10500c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x128055e30 '__SVUint16_t'
|-TypedefDecl 0x10500c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x128055e50 '__SVUint32_t'
|-TypedefDecl 0x10500c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x128055e70 '__SVUint64_t'
|-TypedefDecl 0x10500c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x128055e90 '__SVFloat16_t'
|-TypedefDecl 0x10500c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x128055eb0 '__SVFloat32_t'
|-TypedefDecl 0x10500c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x128055ed0 '__SVFloat64_t'
|-TypedefDecl 0x10500c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x128055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x10500c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x128055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x10500c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x128055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x10500c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x128055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x10500c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x128055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x10500c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x128055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x10500c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x128055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x10500c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x128055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x10500c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x128055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x10500c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x128056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x10500c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x128056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x10500c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x128056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x10500c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x128056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x10500c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x128056090 '__clang_svint8x3_t'
|-TypedefDecl 0x10500c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1280560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x10500c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1280560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x10500c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1280560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x10500c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x128056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x10500ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x128056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x10500cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x128056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x10500cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x128056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x10500cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x128056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x10500d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1280561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x10500d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1280561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x10500d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1280561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x10500d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x128056210 '__clang_svint8x4_t'
|-TypedefDecl 0x10500d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x128056230 '__clang_svint16x4_t'
|-TypedefDecl 0x10500d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x128056250 '__clang_svint32x4_t'
|-TypedefDecl 0x10500d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x128056270 '__clang_svint64x4_t'
|-TypedefDecl 0x10500d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x128056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x10500d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1280562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x10500d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1280562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x10500d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1280562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x10500d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x128056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x10500d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x128056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x10500d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x128056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x10500d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x128056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x10500da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x128056390 '__SVBool_t'
|-TypedefDecl 0x10500da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1280563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x10500dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1280563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x10500db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1280563f0 '__SVCount_t'
|-TypedefDecl 0x10500dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x10500dbb0 'char *'
|   `-BuiltinType 0x1280556b0 'char'
|-TypedefDecl 0x10500dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x10500dbb0 'char *'
|   `-BuiltinType 0x1280556b0 'char'
`-FunctionDecl 0x10500e038 <dataset_diviso_filec/func1526_vuln.c:1:1, line:30:1> line:1:13 invalid napi_get_value_string_latin1 'int (int, int, char *, int, int *)'
  |-ParmVarDecl 0x10500dcf0 <col:42, col:51> col:51 invalid env 'int'
  |-ParmVarDecl 0x10500dd70 <line:2:42, col:53> col:53 invalid value 'int'
  |-ParmVarDecl 0x10500ddf0 <line:3:42, col:48> col:48 used buf 'char *'
  |-ParmVarDecl 0x10500de70 <line:4:42, col:49> col:49 invalid bufsize 'int'
  |-ParmVarDecl 0x10500df28 <line:5:42, col:50> col:50 invalid result 'int *'
  `-CompoundStmt 0x105028010 <col:58, line:30:1>
    |-CallExpr 0x10500e2a0 <line:6:3, col:16> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x10500e260 <col:3> 'int ()' Function 0x10500e1a8 'CHECK_ENV' 'int ()'
    | `-RecoveryExpr 0x10500e280 <col:13> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x105027420 <line:7:3, col:23> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x10500e3a8 <col:3> 'int ()' Function 0x10500e2f0 'CHECK_ARG' 'int ()'
    | |-RecoveryExpr 0x10500e3c8 <col:13> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x105027400 <col:18> '<dependent type>' contains-errors lvalue
    |-RecoveryExpr 0x105027480 <line:9:3> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x105027738 <line:10:3, col:68> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x105027580 <col:3> 'int ()' Function 0x1050274c8 'RETURN_STATUS_IF_FALSE' 'int ()'
    | |-RecoveryExpr 0x1050275a0 <col:26> '<dependent type>' contains-errors lvalue
    | |-CallExpr 0x1050276f8 <col:31, col:45> '<dependent type>' contains-errors
    | | `-CXXDependentScopeMemberExpr 0x1050276b0 <col:31, col:36> '<dependent type>' contains-errors lvalue ->IsString
    | |   `-RecoveryExpr 0x105027690 <col:31> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x105027718 <col:48> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x105027e88 <line:12:3, line:27:3> has_else
    | |-UnaryOperator 0x1050277a8 <line:12:7, col:8> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x105027790 <col:8> 'char *' <LValueToRValue>
    | |   `-DeclRefExpr 0x105027770 <col:8> 'char *' lvalue ParmVar 0x10500ddf0 'buf' 'char *'
    | |-CompoundStmt 0x105027a80 <col:13, line:15:3>
    | | |-CallExpr 0x105027820 <line:13:5, col:26> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x1050277c0 <col:5> 'int ()' Function 0x10500e2f0 'CHECK_ARG' 'int ()'
    | | | |-RecoveryExpr 0x1050277e0 <col:15> '<dependent type>' contains-errors lvalue
    | | | `-RecoveryExpr 0x105027800 <col:20> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x105027a60 <line:14:5, col:22> '<dependent type>' contains-errors '='
    | |   |-UnaryOperator 0x1050279a0 <col:5, col:6> '<dependent type>' contains-errors prefix '*' cannot overflow
    | |   | `-ImplicitCastExpr 0x105027988 <col:6> '<dependent type>' contains-errors <LValueToRValue>
    | |   |   `-RecoveryExpr 0x105027850 <col:6> '<dependent type>' contains-errors lvalue
    | |   `-BinaryOperator 0x105027a40 <col:15, col:22> 'int' contains-errors '<'
    | |     |-CXXDependentScopeMemberExpr 0x1050279d8 <col:15, col:19> '<dependent type>' contains-errors lvalue .As
    | |     | `-RecoveryExpr 0x1050279b8 <col:15> '<dependent type>' contains-errors lvalue
    | |     `-RecoveryExpr 0x105027a20 <col:22> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x105027e60 <line:15:10, line:27:3>
    |   |-DeclStmt 0x105027c60 <line:16:5, line:17:18>
    |   | `-VarDecl 0x105027ab8 <line:16:5, line:17:16> line:16:9 used copied 'int' cinit
    |   |   `-BinaryOperator 0x105027c40 <line:17:9, col:16> 'int' contains-errors '<'
    |   |     |-CXXDependentScopeMemberExpr 0x105027bd8 <col:9, col:13> '<dependent type>' contains-errors lvalue .As
    |   |     | `-RecoveryExpr 0x105027bb8 <col:9> '<dependent type>' contains-errors lvalue
    |   |     `-RecoveryExpr 0x105027c20 <col:16> '<dependent type>' contains-errors lvalue
    |   |-BinaryOperator 0x105027d38 <line:23:5, col:19> 'char' contains-errors '='
    |   | |-ArraySubscriptExpr 0x105027ce8 <col:5, col:15> 'char' contains-errors lvalue
    |   | | |-ImplicitCastExpr 0x105027cb8 <col:5> 'char *' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x105027c78 <col:5> 'char *' lvalue ParmVar 0x10500ddf0 'buf' 'char *'
    |   | | `-ImplicitCastExpr 0x105027cd0 <col:9> 'int' contains-errors <LValueToRValue>
    |   | |   `-DeclRefExpr 0x105027c98 <col:9> 'int' contains-errors lvalue Var 0x105027ab8 'copied' 'int'
    |   | `-ImplicitCastExpr 0x105027d20 <col:19> 'char' <IntegralCast>
    |   |   `-CharacterLiteral 0x105027d08 <col:19> 'int' 0
    |   `-IfStmt 0x105027e40 <line:24:5, line:26:5>
    |     |-RecoveryExpr 0x105027d78 <line:24:9, col:19> '_Bool' contains-errors
    |     `-CompoundStmt 0x105027e28 <col:28, line:26:5>
    |       `-BinaryOperator 0x105027e08 <line:25:7, col:17> '<dependent type>' contains-errors '='
    |         |-UnaryOperator 0x105027dd0 <col:7, col:8> '<dependent type>' contains-errors prefix '*' cannot overflow
    |         | `-ImplicitCastExpr 0x105027db8 <col:8> '<dependent type>' contains-errors <LValueToRValue>
    |         |   `-RecoveryExpr 0x105027d98 <col:8> '<dependent type>' contains-errors lvalue
    |         `-DeclRefExpr 0x105027de8 <col:17> 'int' contains-errors lvalue Var 0x105027ab8 'copied' 'int'
    `-ReturnStmt 0x105028000 <line:29:3, col:35>
      `-CallExpr 0x105027fd8 <col:10, col:35> '<dependent type>' contains-errors
        |-DeclRefExpr 0x105027f98 <col:10> 'int ()' Function 0x105027ee0 'napi_clear_last_error' 'int ()'
        `-RecoveryExpr 0x105027fb8 <col:32> '<dependent type>' contains-errors lvalue
