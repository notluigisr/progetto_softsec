TranslationUnitDecl 0x15a055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x15a0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x15a055bd0 '__int128'
|-TypedefDecl 0x15a056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x15a055bf0 'unsigned __int128'
|-TypedefDecl 0x15a126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15a126000 'struct __NSConstantString_tag'
|   `-Record 0x15a056580 '__NSConstantString_tag'
|-TypedefDecl 0x15a126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x15a055d90 '__SVInt8_t'
|-TypedefDecl 0x15a126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x15a055db0 '__SVInt16_t'
|-TypedefDecl 0x15a126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x15a055dd0 '__SVInt32_t'
|-TypedefDecl 0x15a1263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x15a055df0 '__SVInt64_t'
|-TypedefDecl 0x15a126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x15a055e10 '__SVUint8_t'
|-TypedefDecl 0x15a1264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x15a055e30 '__SVUint16_t'
|-TypedefDecl 0x15a126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x15a055e50 '__SVUint32_t'
|-TypedefDecl 0x15a126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x15a055e70 '__SVUint64_t'
|-TypedefDecl 0x15a1265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x15a055e90 '__SVFloat16_t'
|-TypedefDecl 0x15a126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x15a055eb0 '__SVFloat32_t'
|-TypedefDecl 0x15a1266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x15a055ed0 '__SVFloat64_t'
|-TypedefDecl 0x15a126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x15a055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15a126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x15a055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15a1267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x15a055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15a126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x15a055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15a1268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x15a055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15a126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x15a055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15a126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x15a055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15a1269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x15a055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15a126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x15a055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15a126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x15a056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15a126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x15a056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15a126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x15a056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15a126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x15a056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15a126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x15a056090 '__clang_svint8x3_t'
|-TypedefDecl 0x15a126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x15a0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15a126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x15a0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15a126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x15a0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15a126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x15a056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15a126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x15a056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15a126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x15a056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15a126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x15a056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15a126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x15a056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15a127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x15a0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15a127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x15a0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15a1278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x15a0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15a127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x15a056210 '__clang_svint8x4_t'
|-TypedefDecl 0x15a1279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x15a056230 '__clang_svint16x4_t'
|-TypedefDecl 0x15a127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x15a056250 '__clang_svint32x4_t'
|-TypedefDecl 0x15a127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x15a056270 '__clang_svint64x4_t'
|-TypedefDecl 0x15a127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x15a056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15a127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x15a0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15a127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x15a0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15a127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x15a0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15a127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x15a056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15a127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x15a056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15a127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x15a056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15a127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x15a056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15a127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x15a056390 '__SVBool_t'
|-TypedefDecl 0x15a127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x15a0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15a127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x15a0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15a127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x15a0563f0 '__SVCount_t'
|-TypedefDecl 0x15a127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15a127fb0 'char *'
|   `-BuiltinType 0x15a0556b0 'char'
|-TypedefDecl 0x15a128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15a127fb0 'char *'
|   `-BuiltinType 0x15a0556b0 'char'
|-FunctionDecl 0x15a1282e8 <dataset_diviso_filec/func21518_vuln.c:1:1, line:49:1> line:1:5 invalid _sdsMakeRoomFor 'int (int, int, int)'
| |-ParmVarDecl 0x15a1280f0 <col:21, col:25> col:25 referenced invalid s 'int'
| |-ParmVarDecl 0x15a128170 <col:28, col:35> col:35 invalid addlen 'int'
| |-ParmVarDecl 0x15a1281f0 <col:43, col:47> col:47 used greedy 'int'
| `-CompoundStmt 0x15a145780 <col:55, line:49:1>
|   |-DeclStmt 0x15a1284c0 <line:2:5, col:21>
|   | |-VarDecl 0x15a1283c0 <col:5, col:11> col:11 used sh 'void *'
|   | `-VarDecl 0x15a128440 <col:5, col:16> col:16 used newsh 'void *'
|   |-BinaryOperator 0x15a128738 <line:3:5, col:30> 'unsigned long' contains-errors '='
|   | |-UnaryExprOrTypeTraitExpr 0x15a128718 <col:5, col:12> 'unsigned long' contains-errors sizeof
|   | | `-RecoveryExpr 0x15a1286f8 <col:12> '<dependent type>' contains-errors lvalue
|   | `-CallExpr 0x15a1286b0 <col:20, col:30> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x15a128670 <col:20> 'int ()' Function 0x15a1285b8 'sdsavail' 'int ()'
|   |   `-RecoveryExpr 0x15a128690 <col:29> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x15a141840 <line:4:5, col:17> '<dependent type>' contains-errors ','
|   | |-UnaryExprOrTypeTraitExpr 0x15a141800 <col:5, col:12> 'unsigned long' contains-errors sizeof
|   | | `-RecoveryExpr 0x15a1287c8 <col:12> '<dependent type>' contains-errors lvalue
|   | `-RecoveryExpr 0x15a141820 <col:17> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x15a141ae0 <line:5:5, col:47>
|   | |-VarDecl 0x15a141870 <col:5, col:10> col:10 used type 'char'
|   | `-VarDecl 0x15a1418e8 <col:5, col:34> col:16 used oldtype 'char' cinit
|   |   `-BinaryOperator 0x15a141aa8 <col:26, col:34> '<dependent type>' contains-errors '&'
|   |     |-ArraySubscriptExpr 0x15a141a68 <col:26, col:30> '<dependent type>' contains-errors lvalue
|   |     | |-ImplicitCastExpr 0x15a141a50 <col:26> '<dependent type>' contains-errors <LValueToRValue>
|   |     | | `-RecoveryExpr 0x15a141950 <col:26> '<dependent type>' contains-errors lvalue
|   |     | `-UnaryOperator 0x15a141990 <col:28, col:29> 'int' prefix '-'
|   |     |   `-IntegerLiteral 0x15a141970 <col:29> 'int' 1
|   |     `-RecoveryExpr 0x15a141a88 <col:34> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x15a141b78 <line:6:5, col:15>
|   | `-VarDecl 0x15a141b10 <col:5, col:9> col:9 used hdrlen 'int'
|   |-UnaryExprOrTypeTraitExpr 0x15a141be8 <line:7:5, col:12> 'unsigned long' contains-errors sizeof
|   | `-RecoveryExpr 0x15a141bc8 <col:12> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x15a141cd0 <line:10:5, col:33>
|   | |-BinaryOperator 0x15a141c80 <col:9, col:18> 'int' contains-errors '>='
|   | | |-RecoveryExpr 0x15a141c60 <col:9> '<dependent type>' contains-errors lvalue
|   | | `-RecoveryExpr 0x15a141c20 <col:18> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x15a141cc0 <col:26, col:33>
|   |   `-RecoveryExpr 0x15a141ca0 <col:33> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x15a1420b8 <line:13:5, col:37> 'void *' contains-errors '='
|   | |-DeclRefExpr 0x15a141e38 <col:5> 'void *' lvalue Var 0x15a1283c0 'sh' 'void *'
|   | `-ImplicitCastExpr 0x15a1420a0 <col:10, col:37> 'void *' contains-errors <BitCast>
|   |   `-BinaryOperator 0x15a142080 <col:10, col:37> 'char *' contains-errors '-'
|   |     |-CStyleCastExpr 0x15a141e90 <col:10, col:17> 'char *' contains-errors <Dependent>
|   |     | `-RecoveryExpr 0x15a141e58 <col:17> '<dependent type>' contains-errors lvalue
|   |     `-CallExpr 0x15a142028 <col:19, col:37> 'int' contains-errors
|   |       |-ImplicitCastExpr 0x15a142010 <col:19> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x15a141f98 <col:19> 'int ()' Function 0x15a141ee0 'sdsHdrSize' 'int ()'
|   |       `-ImplicitCastExpr 0x15a142068 <col:30> 'int' contains-errors <IntegralCast>
|   |         `-ImplicitCastExpr 0x15a142050 <col:30> 'char' contains-errors <LValueToRValue>
|   |           `-DeclRefExpr 0x15a141fb8 <col:30> 'char' contains-errors lvalue Var 0x15a1418e8 'oldtype' 'char'
|   |-CallExpr 0x15a142308 <line:15:5, col:24> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x15a142210 <col:5> 'int ()' Function 0x15a142158 'assert' 'int ()'
|   | `-BinaryOperator 0x15a1422e8 <col:12, col:21> 'int' contains-errors '>'
|   |   |-RecoveryExpr 0x15a1422a8 <col:12> '<dependent type>' contains-errors lvalue
|   |   `-RecoveryExpr 0x15a1422c8 <col:21> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x15a1423f8 <line:16:5, line:21:5>
|   | |-BinaryOperator 0x15a142388 <line:16:9, col:19> 'int' '=='
|   | | |-ImplicitCastExpr 0x15a142370 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x15a142330 <col:9> 'int' lvalue ParmVar 0x15a1281f0 'greedy' 'int'
|   | | `-IntegerLiteral 0x15a142350 <col:19> 'int' 1
|   | `-CompoundStmt 0x15a1423e8 <col:22, line:21:5>
|   |-BinaryOperator 0x15a142668 <line:28:5, col:29> 'int' '='
|   | |-DeclRefExpr 0x15a142598 <col:5> 'int' lvalue Var 0x15a141b10 'hdrlen' 'int'
|   | `-CallExpr 0x15a142610 <col:14, col:29> 'int'
|   |   |-ImplicitCastExpr 0x15a1425f8 <col:14> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x15a1425b8 <col:14> 'int ()' Function 0x15a141ee0 'sdsHdrSize' 'int ()'
|   |   `-ImplicitCastExpr 0x15a142650 <col:25> 'int' <IntegralCast>
|   |     `-ImplicitCastExpr 0x15a142638 <col:25> 'char' <LValueToRValue>
|   |       `-DeclRefExpr 0x15a1425d8 <col:25> 'char' lvalue Var 0x15a141870 'type' 'char'
|   |-IfStmt 0x15a145358 <line:30:5, line:43:5> has_else
|   | |-BinaryOperator 0x15a142788 <line:30:9, col:18> 'int' contains-errors '=='
|   | | |-ImplicitCastExpr 0x15a142758 <col:9> 'int' contains-errors <IntegralCast>
|   | | | `-ImplicitCastExpr 0x15a142728 <col:9> 'char' contains-errors <LValueToRValue>
|   | | |   `-DeclRefExpr 0x15a1426e8 <col:9> 'char' contains-errors lvalue Var 0x15a1418e8 'oldtype' 'char'
|   | | `-ImplicitCastExpr 0x15a142770 <col:18> 'int' <IntegralCast>
|   | |   `-ImplicitCastExpr 0x15a142740 <col:18> 'char' <LValueToRValue>
|   | |     `-DeclRefExpr 0x15a142708 <col:18> 'char' lvalue Var 0x15a141870 'type' 'char'
|   | |-CompoundStmt 0x15a1448b0 <col:24, line:34:5>
|   | | `-BinaryOperator 0x15a144890 <line:33:9, col:26> '<dependent type>' contains-errors '='
|   | |   |-RecoveryExpr 0x15a144798 <col:9> '<dependent type>' contains-errors lvalue
|   | |   | `-DeclRefExpr 0x15a144778 <col:9> 'int' lvalue ParmVar 0x15a1280f0 's' 'int'
|   | |   `-BinaryOperator 0x15a144870 <col:13, col:26> 'char *' '+'
|   | |     |-CStyleCastExpr 0x15a144810 <col:13, col:20> 'char *' <BitCast>
|   | |     | `-ImplicitCastExpr 0x15a1447f8 <col:20> 'void *' <LValueToRValue> part_of_explicit_cast
|   | |     |   `-DeclRefExpr 0x15a1447c0 <col:20> 'void *' lvalue Var 0x15a128440 'newsh' 'void *'
|   | |     `-ImplicitCastExpr 0x15a144858 <col:26> 'int' <LValueToRValue>
|   | |       `-DeclRefExpr 0x15a144838 <col:26> 'int' lvalue Var 0x15a141b10 'hdrlen' 'int'
|   | `-CompoundStmt 0x15a145330 <line:34:12, line:43:5>
|   |   |-CallExpr 0x15a144fa0 <line:39:9, col:18> 'int'
|   |   | |-ImplicitCastExpr 0x15a144f88 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x15a144f48 <col:9> 'int ()' Function 0x15a144e90 's_free' 'int ()'
|   |   | `-ImplicitCastExpr 0x15a144fc8 <col:16> 'void *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x15a144f68 <col:16> 'void *' lvalue Var 0x15a1283c0 'sh' 'void *'
|   |   |-BinaryOperator 0x15a1450f8 <line:40:9, col:26> '<dependent type>' contains-errors '='
|   |   | |-RecoveryExpr 0x15a145000 <col:9> '<dependent type>' contains-errors lvalue
|   |   | | `-DeclRefExpr 0x15a144fe0 <col:9> 'int' lvalue ParmVar 0x15a1280f0 's' 'int'
|   |   | `-BinaryOperator 0x15a1450d8 <col:13, col:26> 'char *' '+'
|   |   |   |-CStyleCastExpr 0x15a145078 <col:13, col:20> 'char *' <BitCast>
|   |   |   | `-ImplicitCastExpr 0x15a145060 <col:20> 'void *' <LValueToRValue> part_of_explicit_cast
|   |   |   |   `-DeclRefExpr 0x15a145028 <col:20> 'void *' lvalue Var 0x15a128440 'newsh' 'void *'
|   |   |   `-ImplicitCastExpr 0x15a1450c0 <col:26> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x15a1450a0 <col:26> 'int' lvalue Var 0x15a141b10 'hdrlen' 'int'
|   |   `-BinaryOperator 0x15a1451f0 <line:41:9, col:17> '<dependent type>' contains-errors '='
|   |     |-ArraySubscriptExpr 0x15a1451b0 <col:9, col:13> '<dependent type>' contains-errors lvalue
|   |     | |-ImplicitCastExpr 0x15a145198 <col:9> '<dependent type>' contains-errors <LValueToRValue>
|   |     | | `-RecoveryExpr 0x15a145138 <col:9> '<dependent type>' contains-errors lvalue
|   |     | |   `-DeclRefExpr 0x15a145118 <col:9> 'int' lvalue ParmVar 0x15a1280f0 's' 'int'
|   |     | `-UnaryOperator 0x15a145180 <col:11, col:12> 'int' prefix '-'
|   |     |   `-IntegerLiteral 0x15a145160 <col:12> 'int' 1
|   |     `-DeclRefExpr 0x15a1451d0 <col:17> 'char' lvalue Var 0x15a141870 'type' 'char'
|   `-ReturnStmt 0x15a145770 <line:48:5, col:12>
|     `-RecoveryExpr 0x15a145750 <col:12> '<dependent type>' contains-errors lvalue
`-FunctionDecl 0x15a144ae8 <line:38:9> col:9 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x15a144be8 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x15a144c50 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x15a144cb8 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x15a144b90 <<invalid sloc>> Implicit 882
