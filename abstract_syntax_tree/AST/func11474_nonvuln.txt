TranslationUnitDecl 0x147034608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1470354b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x147034bd0 '__int128'
|-TypedefDecl 0x147035528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x147034bf0 'unsigned __int128'
|-TypedefDecl 0x147106830 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x147106600 'struct __NSConstantString_tag'
|   `-Record 0x147035580 '__NSConstantString_tag'
|-TypedefDecl 0x147106898 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x147034d90 '__SVInt8_t'
|-TypedefDecl 0x147106900 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x147034db0 '__SVInt16_t'
|-TypedefDecl 0x147106968 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x147034dd0 '__SVInt32_t'
|-TypedefDecl 0x1471069d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x147034df0 '__SVInt64_t'
|-TypedefDecl 0x147106a38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x147034e10 '__SVUint8_t'
|-TypedefDecl 0x147106aa0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x147034e30 '__SVUint16_t'
|-TypedefDecl 0x147106b08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x147034e50 '__SVUint32_t'
|-TypedefDecl 0x147106b70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x147034e70 '__SVUint64_t'
|-TypedefDecl 0x147106bd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x147034e90 '__SVFloat16_t'
|-TypedefDecl 0x147106c40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x147034eb0 '__SVFloat32_t'
|-TypedefDecl 0x147106ca8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x147034ed0 '__SVFloat64_t'
|-TypedefDecl 0x147106d10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x147034ef0 '__SVBfloat16_t'
|-TypedefDecl 0x147106d78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x147034f10 '__clang_svint8x2_t'
|-TypedefDecl 0x147106de0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x147034f30 '__clang_svint16x2_t'
|-TypedefDecl 0x147106e48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x147034f50 '__clang_svint32x2_t'
|-TypedefDecl 0x147106eb0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x147034f70 '__clang_svint64x2_t'
|-TypedefDecl 0x147106f18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x147034f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x147106f80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x147034fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x147106fe8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x147034fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x147107050 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x147034ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1471070b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x147035010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x147107120 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x147035030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x147107188 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x147035050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1471071f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x147035070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x147107258 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x147035090 '__clang_svint8x3_t'
|-TypedefDecl 0x1471072c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1470350b0 '__clang_svint16x3_t'
|-TypedefDecl 0x147107328 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1470350d0 '__clang_svint32x3_t'
|-TypedefDecl 0x147107390 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1470350f0 '__clang_svint64x3_t'
|-TypedefDecl 0x1471073f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x147035110 '__clang_svuint8x3_t'
|-TypedefDecl 0x147107460 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x147035130 '__clang_svuint16x3_t'
|-TypedefDecl 0x1471074c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x147035150 '__clang_svuint32x3_t'
|-TypedefDecl 0x147107530 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x147035170 '__clang_svuint64x3_t'
|-TypedefDecl 0x147107598 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x147035190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x147107e00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1470351b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x147107e68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1470351d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x147107ed0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1470351f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x147107f38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x147035210 '__clang_svint8x4_t'
|-TypedefDecl 0x147107fa0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x147035230 '__clang_svint16x4_t'
|-TypedefDecl 0x147108008 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x147035250 '__clang_svint32x4_t'
|-TypedefDecl 0x147108070 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x147035270 '__clang_svint64x4_t'
|-TypedefDecl 0x1471080d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x147035290 '__clang_svuint8x4_t'
|-TypedefDecl 0x147108140 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1470352b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1471081a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1470352d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x147108210 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1470352f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x147108278 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x147035310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1471082e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x147035330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x147108348 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x147035350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1471083b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x147035370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x147108418 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x147035390 '__SVBool_t'
|-TypedefDecl 0x147108480 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1470353b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1471084e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1470353d0 '__clang_svboolx4_t'
|-TypedefDecl 0x147108550 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1470353f0 '__SVCount_t'
|-TypedefDecl 0x1471085f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1471085b0 'char *'
|   `-BuiltinType 0x1470346b0 'char'
|-TypedefDecl 0x147108668 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1471085b0 'char *'
|   `-BuiltinType 0x1470346b0 'char'
`-FunctionDecl 0x147108a98 <dataset_diviso_filec/func11474_nonvuln.c:1:1, line:38:1> line:1:1 invalid dlmmap 'int (void *, int, int, int, int, int)'
  |-ParmVarDecl 0x1471086d8 <col:9, col:15> col:15 used start 'void *'
  |-ParmVarDecl 0x147108770 <col:22, col:29> col:29 invalid length 'int'
  |-ParmVarDecl 0x1471087f0 <col:37, col:41> col:41 used prot 'int'
  |-ParmVarDecl 0x147108870 <line:2:2, col:6> col:6 used flags 'int'
  |-ParmVarDecl 0x1471088f0 <col:13, col:17> col:17 used fd 'int'
  |-ParmVarDecl 0x147108970 <col:21, col:27> col:27 invalid offset 'int'
  `-CompoundStmt 0x1471242a8 <line:3:1, line:38:1>
    |-DeclStmt 0x147108bf0 <line:4:3, col:12>
    | `-VarDecl 0x147108b88 <col:3, col:9> col:9 used ptr 'void *'
    |-IfStmt 0x147123540 <line:11:3, line:15:5>
    | |-BinaryOperator 0x147122ce0 <line:11:7, col:44> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x147122c88 <col:7, col:18> 'int' contains-errors '=='
    | | | |-RecoveryExpr 0x147122c68 <col:7> '<dependent type>' contains-errors lvalue
    | | | `-UnaryOperator 0x147122aa0 <col:17, col:18> 'int' prefix '-'
    | | |   `-IntegerLiteral 0x147122a80 <col:18> 'int' 1
    | | `-CallExpr 0x147122cc0 <col:23, col:44> 'int'
    | |   `-ImplicitCastExpr 0x147122ca8 <col:23> 'int (*)()' <FunctionToPointerDecay>
    | |     `-DeclRefExpr 0x147122bb8 <col:23> 'int ()' Function 0x147122b00 'is_emutramp_enabled' 'int ()'
    | `-CompoundStmt 0x147123520 <line:12:5, line:15:5>
    |   |-BinaryOperator 0x147123078 <line:13:7, col:70> 'void *' contains-errors '='
    |   | |-DeclRefExpr 0x147122d00 <col:7> 'void *' lvalue Var 0x147108b88 'ptr' 'void *'
    |   | `-CallExpr 0x147123028 <col:13, col:70> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x147122e00 <col:13> 'int ()' Function 0x147122d48 'mmap' 'int ()'
    |   |   |-DeclRefExpr 0x147122e20 <col:19> 'void *' lvalue ParmVar 0x1471086d8 'start' 'void *'
    |   |   |-RecoveryExpr 0x147122e40 <col:26> '<dependent type>' contains-errors lvalue
    |   |   |-BinaryOperator 0x147123008 <col:34, col:42> '<dependent type>' contains-errors '&'
    |   |   | |-DeclRefExpr 0x147122e60 <col:34> 'int' lvalue ParmVar 0x1471087f0 'prot' 'int'
    |   |   | `-UnaryOperator 0x147122ff0 <col:41, col:42> '<dependent type>' contains-errors prefix '~' cannot overflow
    |   |   |   `-ImplicitCastExpr 0x147122fd8 <col:42> '<dependent type>' contains-errors <LValueToRValue>
    |   |   |     `-RecoveryExpr 0x147122fb8 <col:42> '<dependent type>' contains-errors lvalue
    |   |   |-DeclRefExpr 0x147122ee8 <col:53> 'int' lvalue ParmVar 0x147108870 'flags' 'int'
    |   |   |-DeclRefExpr 0x147122f08 <col:60> 'int' lvalue ParmVar 0x1471088f0 'fd' 'int'
    |   |   `-RecoveryExpr 0x147122f28 <col:64> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x147123510 <line:14:7, col:14>
    |     `-ImplicitCastExpr 0x1471230d0 <col:14> 'int' <PointerToIntegral>
    |       `-ImplicitCastExpr 0x1471230b8 <col:14> 'void *' <LValueToRValue>
    |         `-DeclRefExpr 0x147123098 <col:14> 'void *' lvalue Var 0x147108b88 'ptr' 'void *'
    |-IfStmt 0x147123c30 <line:17:3, line:26:5>
    | |-BinaryOperator 0x1471237d0 <line:17:7, col:44> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x147123760 <col:7, col:18> 'int' contains-errors '=='
    | | | |-RecoveryExpr 0x147123740 <col:7> '<dependent type>' contains-errors lvalue
    | | | `-UnaryOperator 0x147123598 <col:17, col:18> 'int' prefix '-'
    | | |   `-IntegerLiteral 0x147123578 <col:18> 'int' 1
    | | `-UnaryOperator 0x1471237b8 <col:23, col:44> 'int' prefix '!' cannot overflow
    | |   `-CallExpr 0x147123798 <col:24, col:44> 'int'
    | |     `-ImplicitCastExpr 0x147123780 <col:24> 'int (*)()' <FunctionToPointerDecay>
    | |       `-DeclRefExpr 0x1471236b0 <col:24> 'int ()' Function 0x1471235f8 'is_selinux_enabled' 'int ()'
    | `-CompoundStmt 0x147123c10 <line:18:5, line:26:5>
    |   |-BinaryOperator 0x147123a38 <line:19:7, col:69> 'void *' contains-errors '='
    |   | |-DeclRefExpr 0x147123800 <col:7> 'void *' lvalue Var 0x147108b88 'ptr' 'void *'
    |   | `-CallExpr 0x1471239e8 <col:13, col:69> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x147123820 <col:13> 'int ()' Function 0x147122d48 'mmap' 'int ()'
    |   |   |-DeclRefExpr 0x147123840 <col:19> 'void *' lvalue ParmVar 0x1471086d8 'start' 'void *'
    |   |   |-RecoveryExpr 0x147123860 <col:26> '<dependent type>' contains-errors lvalue
    |   |   |-BinaryOperator 0x1471239c8 <col:34, col:41> '<dependent type>' contains-errors '|'
    |   |   | |-DeclRefExpr 0x147123880 <col:34> 'int' lvalue ParmVar 0x1471087f0 'prot' 'int'
    |   |   | `-RecoveryExpr 0x1471239a8 <col:41> '<dependent type>' contains-errors lvalue
    |   |   |-DeclRefExpr 0x1471238d8 <col:52> 'int' lvalue ParmVar 0x147108870 'flags' 'int'
    |   |   |-DeclRefExpr 0x1471238f8 <col:59> 'int' lvalue ParmVar 0x1471088f0 'fd' 'int'
    |   |   `-RecoveryExpr 0x147123918 <col:63> '<dependent type>' contains-errors lvalue
    |   `-IfStmt 0x147123bf0 <line:21:7, line:23:9>
    |     |-RecoveryExpr 0x147123b70 <line:21:11, col:61> '_Bool' contains-errors
    |     `-ReturnStmt 0x147123be0 <line:23:2, col:9>
    |       `-ImplicitCastExpr 0x147123bc8 <col:9> 'int' <PointerToIntegral>
    |         `-ImplicitCastExpr 0x147123bb0 <col:9> 'void *' <LValueToRValue>
    |           `-DeclRefExpr 0x147123b90 <col:9> 'void *' lvalue Var 0x147108b88 'ptr' 'void *'
    |-IfStmt 0x147124170 <line:28:3, line:35:5>
    | |-RecoveryExpr 0x147123ca8 <line:28:7, col:35> '_Bool' contains-errors
    | `-CompoundStmt 0x147124150 <line:29:5, line:35:5>
    |   |-BinaryOperator 0x147123fd0 <line:31:7, col:62> 'void *' contains-errors '='
    |   | |-DeclRefExpr 0x147123dc8 <col:7> 'void *' lvalue Var 0x147108b88 'ptr' 'void *'
    |   | `-CallExpr 0x147123f88 <col:13, col:62> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x147123ec8 <col:13> 'int ()' Function 0x147123e10 'dlmmap_locked' 'int ()'
    |   |   |-DeclRefExpr 0x147123ee8 <col:28> 'void *' lvalue ParmVar 0x1471086d8 'start' 'void *'
    |   |   |-RecoveryExpr 0x147123f08 <col:35> '<dependent type>' contains-errors lvalue
    |   |   |-DeclRefExpr 0x147123f28 <col:43> 'int' lvalue ParmVar 0x1471087f0 'prot' 'int'
    |   |   |-DeclRefExpr 0x147123f48 <col:49> 'int' lvalue ParmVar 0x147108870 'flags' 'int'
    |   |   `-RecoveryExpr 0x147123f68 <col:56> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x147124140 <line:34:7, col:14>
    |     `-ImplicitCastExpr 0x147124128 <col:14> 'int' <PointerToIntegral>
    |       `-ImplicitCastExpr 0x147124110 <col:14> 'void *' <LValueToRValue>
    |         `-DeclRefExpr 0x1471240f0 <col:14> 'void *' lvalue Var 0x147108b88 'ptr' 'void *'
    `-ReturnStmt 0x147124298 <line:37:3, col:59>
      `-CallExpr 0x147124250 <col:10, col:59> '<dependent type>' contains-errors
        |-DeclRefExpr 0x147124190 <col:10> 'int ()' Function 0x147123e10 'dlmmap_locked' 'int ()'
        |-DeclRefExpr 0x1471241b0 <col:25> 'void *' lvalue ParmVar 0x1471086d8 'start' 'void *'
        |-RecoveryExpr 0x1471241d0 <col:32> '<dependent type>' contains-errors lvalue
        |-DeclRefExpr 0x1471241f0 <col:40> 'int' lvalue ParmVar 0x1471087f0 'prot' 'int'
        |-DeclRefExpr 0x147124210 <col:46> 'int' lvalue ParmVar 0x147108870 'flags' 'int'
        `-RecoveryExpr 0x147124230 <col:53> '<dependent type>' contains-errors lvalue
