TranslationUnitDecl 0x151836408 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1518372b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1518369d0 '__int128'
|-TypedefDecl 0x151837328 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1518369f0 'unsigned __int128'
|-TypedefDecl 0x15280be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15280bc00 'struct __NSConstantString_tag'
|   `-Record 0x151837380 '__NSConstantString_tag'
|-TypedefDecl 0x15280be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x151836b90 '__SVInt8_t'
|-TypedefDecl 0x15280bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x151836bb0 '__SVInt16_t'
|-TypedefDecl 0x15280bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x151836bd0 '__SVInt32_t'
|-TypedefDecl 0x15280bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x151836bf0 '__SVInt64_t'
|-TypedefDecl 0x15280c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x151836c10 '__SVUint8_t'
|-TypedefDecl 0x15280c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x151836c30 '__SVUint16_t'
|-TypedefDecl 0x15280c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x151836c50 '__SVUint32_t'
|-TypedefDecl 0x15280c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x151836c70 '__SVUint64_t'
|-TypedefDecl 0x15280c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x151836c90 '__SVFloat16_t'
|-TypedefDecl 0x15280c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x151836cb0 '__SVFloat32_t'
|-TypedefDecl 0x15280c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x151836cd0 '__SVFloat64_t'
|-TypedefDecl 0x15280c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x151836cf0 '__SVBfloat16_t'
|-TypedefDecl 0x15280c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x151836d10 '__clang_svint8x2_t'
|-TypedefDecl 0x15280c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x151836d30 '__clang_svint16x2_t'
|-TypedefDecl 0x15280c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x151836d50 '__clang_svint32x2_t'
|-TypedefDecl 0x15280c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x151836d70 '__clang_svint64x2_t'
|-TypedefDecl 0x15280c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x151836d90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15280c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x151836db0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15280c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x151836dd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15280c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x151836df0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15280c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x151836e10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15280c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x151836e30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15280c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x151836e50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15280c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x151836e70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15280c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x151836e90 '__clang_svint8x3_t'
|-TypedefDecl 0x15280c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x151836eb0 '__clang_svint16x3_t'
|-TypedefDecl 0x15280c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x151836ed0 '__clang_svint32x3_t'
|-TypedefDecl 0x15280c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x151836ef0 '__clang_svint64x3_t'
|-TypedefDecl 0x15280c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x151836f10 '__clang_svuint8x3_t'
|-TypedefDecl 0x15280ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x151836f30 '__clang_svuint16x3_t'
|-TypedefDecl 0x15280cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x151836f50 '__clang_svuint32x3_t'
|-TypedefDecl 0x15280cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x151836f70 '__clang_svuint64x3_t'
|-TypedefDecl 0x15280cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x151836f90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15280d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x151836fb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15280d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x151836fd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15280d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x151836ff0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15280d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x151837010 '__clang_svint8x4_t'
|-TypedefDecl 0x15280d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x151837030 '__clang_svint16x4_t'
|-TypedefDecl 0x15280d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x151837050 '__clang_svint32x4_t'
|-TypedefDecl 0x15280d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x151837070 '__clang_svint64x4_t'
|-TypedefDecl 0x15280d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x151837090 '__clang_svuint8x4_t'
|-TypedefDecl 0x15280d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1518370b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15280d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1518370d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15280d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1518370f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15280d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x151837110 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15280d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x151837130 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15280d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x151837150 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15280d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x151837170 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15280da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x151837190 '__SVBool_t'
|-TypedefDecl 0x15280da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1518371b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15280dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1518371d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15280db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1518371f0 '__SVCount_t'
|-TypedefDecl 0x15280dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15280dbb0 'char *'
|   `-BuiltinType 0x1518364b0 'char'
|-TypedefDecl 0x15280dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15280dbb0 'char *'
|   `-BuiltinType 0x1518364b0 'char'
`-FunctionDecl 0x15280ddf8 <dataset_diviso_filec/func14931_nonvuln.c:1:1, line:29:1> line:1:12 invalid l_read_publickey 'int (int *)' static
  |-ParmVarDecl 0x15280dd28 <col:30, col:41> col:41 invalid L 'int *'
  `-CompoundStmt 0x1528296d0 <col:44, line:29:1>
    |-DeclStmt 0x15280df38 <line:3:5, col:11>
    | `-VarDecl 0x15280ded0 <col:5, col:10> col:10 used c 'char'
    |-DeclStmt 0x15280e1c0 <line:4:5, col:55>
    | `-VarDecl 0x15280df68 <col:5, col:54> col:17 used publickeyfile 'const char *' cinit
    |   `-CallExpr 0x15280e190 <col:33, col:54> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x15280e130 <col:33> 'int ()' Function 0x15280e078 'luaL_checkstring' 'int ()'
    |     |-RecoveryExpr 0x15280e150 <col:50> '<dependent type>' contains-errors lvalue
    |     `-IntegerLiteral 0x15280e170 <col:53> 'int' 1
    |-IfStmt 0x152827a30 <line:8:5, line:9:35>
    | |-UnaryOperator 0x152827898 <line:8:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x152827880 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x152827860 <col:10> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x152827a20 <line:9:9, col:35>
    |   `-CallExpr 0x1528279f0 <col:16, col:35> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x152827990 <col:16> 'int ()' Function 0x1528278d8 'luaL_error' 'int ()'
    |     |-RecoveryExpr 0x1528279b0 <col:27> '<dependent type>' contains-errors lvalue
    |     `-StringLiteral 0x1528279d0 <col:30> 'char[4]' lvalue "STR"
    |-CallExpr 0x152827c38 <line:11:5, col:37> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x152827b30 <col:5> 'int ()' Function 0x152827a78 'luaL_buffinit' 'int ()'
    | |-RecoveryExpr 0x152827b50 <col:19> '<dependent type>' contains-errors lvalue
    | `-UnaryOperator 0x152827c20 <col:22, col:23> 'const char **' contains-errors prefix '&' cannot overflow
    |   `-DeclRefExpr 0x152827bd0 <col:23> 'const char *' contains-errors lvalue Var 0x15280df68 'publickeyfile' 'const char *'
    |-WhileStmt 0x152828200 <line:12:5, line:14:5>
    | |-BinaryOperator 0x1528281c0 <line:12:12, col:65> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x152828150 <col:12, col:52> 'int' contains-errors '&&'
    | | | |-BinaryOperator 0x1528280e0 <col:12, col:39> 'int' contains-errors '&&'
    | | | | |-CallExpr 0x152828050 <col:12, col:30> '<dependent type>' contains-errors
    | | | | | |-DeclRefExpr 0x152827d48 <col:12> 'int ()' Function 0x152827c90 'fread' 'int ()'
    | | | | | |-UnaryOperator 0x152827d88 <col:18, col:19> 'char *' prefix '&' cannot overflow
    | | | | | | `-DeclRefExpr 0x152827d68 <col:19> 'char' lvalue Var 0x15280ded0 'c' 'char'
    | | | | | |-IntegerLiteral 0x152827da0 <col:22> 'int' 1
    | | | | | |-IntegerLiteral 0x152827dc0 <col:25> 'int' 1
    | | | | | `-RecoveryExpr 0x152828030 <col:28> '<dependent type>' contains-errors lvalue
    | | | | `-BinaryOperator 0x1528280c0 <col:35, col:39> 'int' '!='
    | | | |   |-ImplicitCastExpr 0x1528280a8 <col:35> 'int' <IntegralCast>
    | | | |   | `-ImplicitCastExpr 0x152828090 <col:35> 'char' <LValueToRValue>
    | | | |   |   `-DeclRefExpr 0x152827e38 <col:35> 'char' lvalue Var 0x15280ded0 'c' 'char'
    | | | |   `-CharacterLiteral 0x152827e58 <col:39> 'int' 13
    | | | `-BinaryOperator 0x152828130 <col:47, col:52> 'int' '!='
    | | |   |-ImplicitCastExpr 0x152828118 <col:47> 'int' <IntegralCast>
    | | |   | `-ImplicitCastExpr 0x152828100 <col:47> 'char' <LValueToRValue>
    | | |   |   `-DeclRefExpr 0x152827ee0 <col:47> 'char' lvalue Var 0x15280ded0 'c' 'char'
    | | |   `-CharacterLiteral 0x152827f00 <col:52> 'int' 10
    | | `-BinaryOperator 0x1528281a0 <col:60, col:65> 'int' '!='
    | |   |-ImplicitCastExpr 0x152828188 <col:60> 'int' <IntegralCast>
    | |   | `-ImplicitCastExpr 0x152828170 <col:60> 'char' <LValueToRValue>
    | |   |   `-DeclRefExpr 0x152827f88 <col:60> 'char' lvalue Var 0x15280ded0 'c' 'char'
    | |   `-CharacterLiteral 0x152827fa8 <col:65> 'int' 32
    | `-CompoundStmt 0x1528281e8 <col:70, line:14:5>
    |   `-ContinueStmt 0x1528281e0 <line:13:9>
    |-WhileStmt 0x152828d18 <line:15:5, line:17:5>
    | |-BinaryOperator 0x152828698 <line:15:12, col:65> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x152828628 <col:12, col:52> 'int' contains-errors '&&'
    | | | |-BinaryOperator 0x1528285b8 <col:12, col:39> 'int' contains-errors '&&'
    | | | | |-CallExpr 0x152828528 <col:12, col:30> '<dependent type>' contains-errors
    | | | | | |-DeclRefExpr 0x152828220 <col:12> 'int ()' Function 0x152827c90 'fread' 'int ()'
    | | | | | |-UnaryOperator 0x152828260 <col:18, col:19> 'char *' prefix '&' cannot overflow
    | | | | | | `-DeclRefExpr 0x152828240 <col:19> 'char' lvalue Var 0x15280ded0 'c' 'char'
    | | | | | |-IntegerLiteral 0x152828278 <col:22> 'int' 1
    | | | | | |-IntegerLiteral 0x152828298 <col:25> 'int' 1
    | | | | | `-RecoveryExpr 0x152828508 <col:28> '<dependent type>' contains-errors lvalue
    | | | | `-BinaryOperator 0x152828598 <col:35, col:39> 'int' '!='
    | | | |   |-ImplicitCastExpr 0x152828580 <col:35> 'int' <IntegralCast>
    | | | |   | `-ImplicitCastExpr 0x152828568 <col:35> 'char' <LValueToRValue>
    | | | |   |   `-DeclRefExpr 0x152828310 <col:35> 'char' lvalue Var 0x15280ded0 'c' 'char'
    | | | |   `-CharacterLiteral 0x152828330 <col:39> 'int' 13
    | | | `-BinaryOperator 0x152828608 <col:47, col:52> 'int' '!='
    | | |   |-ImplicitCastExpr 0x1528285f0 <col:47> 'int' <IntegralCast>
    | | |   | `-ImplicitCastExpr 0x1528285d8 <col:47> 'char' <LValueToRValue>
    | | |   |   `-DeclRefExpr 0x1528283b8 <col:47> 'char' lvalue Var 0x15280ded0 'c' 'char'
    | | |   `-CharacterLiteral 0x1528283d8 <col:52> 'int' 10
    | | `-BinaryOperator 0x152828678 <col:60, col:65> 'int' '!='
    | |   |-ImplicitCastExpr 0x152828660 <col:60> 'int' <IntegralCast>
    | |   | `-ImplicitCastExpr 0x152828648 <col:60> 'char' <LValueToRValue>
    | |   |   `-DeclRefExpr 0x152828460 <col:60> 'char' lvalue Var 0x15280ded0 'c' 'char'
    | |   `-CharacterLiteral 0x152828480 <col:65> 'int' 32
    | `-CompoundStmt 0x152828d00 <col:70, line:17:5>
    |   `-CallExpr 0x152828ca0 <line:16:9, col:40> 'int' contains-errors
    |     |-ImplicitCastExpr 0x152828c88 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x152828798 <col:9> 'int ()' Function 0x1528286e0 'luaL_addchar' 'int ()'
    |     |-UnaryOperator 0x152828c70 <col:22, col:23> 'const char **' contains-errors prefix '&' cannot overflow
    |     | `-DeclRefExpr 0x152828c50 <col:23> 'const char *' contains-errors lvalue Var 0x15280df68 'publickeyfile' 'const char *'
    |     `-ImplicitCastExpr 0x152828ce8 <col:39> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x152828cd0 <col:39> 'char' <LValueToRValue>
    |         `-DeclRefExpr 0x152828c00 <col:39> 'char' lvalue Var 0x15280ded0 'c' 'char'
    |-CallExpr 0x152828e98 <line:18:5, col:14> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x152828e18 <col:5> 'int ()' Function 0x152828d60 'fclose' 'int ()'
    | `-RecoveryExpr 0x152828e78 <col:12> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x152829000 <line:20:5, col:27> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x152828fa0 <col:5> 'int ()' Function 0x152828ee8 'lua_getglobal' 'int ()'
    | |-RecoveryExpr 0x152828fc0 <col:19> '<dependent type>' contains-errors lvalue
    | `-StringLiteral 0x152828fe0 <col:22> 'char[4]' lvalue "STR"
    |-CallExpr 0x152829170 <line:21:5, col:28> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x152829110 <col:5> 'int ()' Function 0x152829058 'lua_pushstring' 'int ()'
    | |-RecoveryExpr 0x152829130 <col:20> '<dependent type>' contains-errors lvalue
    | `-StringLiteral 0x152829150 <col:23> 'char[4]' lvalue "STR"
    |-CallExpr 0x152829300 <line:22:5, col:21> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x152829280 <col:5> 'int ()' Function 0x1528291c8 'lua_call' 'int ()'
    | |-RecoveryExpr 0x1528292a0 <col:14> '<dependent type>' contains-errors lvalue
    | |-IntegerLiteral 0x1528292c0 <col:17> 'int' 1
    | `-IntegerLiteral 0x1528292e0 <col:20> 'int' 1
    |-CallExpr 0x1528294b0 <line:23:5, col:30> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x152829418 <col:5> 'int ()' Function 0x152829360 'lua_getfield' 'int ()'
    | |-RecoveryExpr 0x152829438 <col:18> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x152829478 <col:21, col:22> 'int' prefix '-'
    | | `-IntegerLiteral 0x152829458 <col:22> 'int' 1
    | `-StringLiteral 0x152829490 <col:25> 'char[4]' lvalue "STR"
    |-CallExpr 0x152829668 <line:26:5, col:21> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1528295e8 <col:5> 'int ()' Function 0x1528291c8 'lua_call' 'int ()'
    | |-RecoveryExpr 0x152829608 <col:14> '<dependent type>' contains-errors lvalue
    | |-IntegerLiteral 0x152829628 <col:17> 'int' 1
    | `-IntegerLiteral 0x152829648 <col:20> 'int' 1
    `-ReturnStmt 0x1528296c0 <line:28:5, col:12>
      `-IntegerLiteral 0x1528296a0 <col:12> 'int' 1
