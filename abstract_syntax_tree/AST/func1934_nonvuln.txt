TranslationUnitDecl 0x120055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1200564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x120055bd0 '__int128'
|-TypedefDecl 0x120056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x120055bf0 'unsigned __int128'
|-TypedefDecl 0x10080be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x10080bc00 'struct __NSConstantString_tag'
|   `-Record 0x120056580 '__NSConstantString_tag'
|-TypedefDecl 0x10080be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x120055d90 '__SVInt8_t'
|-TypedefDecl 0x10080bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x120055db0 '__SVInt16_t'
|-TypedefDecl 0x10080bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x120055dd0 '__SVInt32_t'
|-TypedefDecl 0x10080bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x120055df0 '__SVInt64_t'
|-TypedefDecl 0x10080c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x120055e10 '__SVUint8_t'
|-TypedefDecl 0x10080c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x120055e30 '__SVUint16_t'
|-TypedefDecl 0x10080c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x120055e50 '__SVUint32_t'
|-TypedefDecl 0x10080c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x120055e70 '__SVUint64_t'
|-TypedefDecl 0x10080c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x120055e90 '__SVFloat16_t'
|-TypedefDecl 0x10080c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x120055eb0 '__SVFloat32_t'
|-TypedefDecl 0x10080c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x120055ed0 '__SVFloat64_t'
|-TypedefDecl 0x10080c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x120055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x10080c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x120055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x10080c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x120055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x10080c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x120055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x10080c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x120055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x10080c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x120055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x10080c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x120055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x10080c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x120055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x10080c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x120055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x10080c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x120056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x10080c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x120056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x10080c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x120056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x10080c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x120056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x10080c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x120056090 '__clang_svint8x3_t'
|-TypedefDecl 0x10080c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1200560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x10080c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1200560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x10080c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1200560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x10080c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x120056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x10080ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x120056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x10080cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x120056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x10080cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x120056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x10080cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x120056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x10080d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1200561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x10080d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1200561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x10080d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1200561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x10080d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x120056210 '__clang_svint8x4_t'
|-TypedefDecl 0x10080d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x120056230 '__clang_svint16x4_t'
|-TypedefDecl 0x10080d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x120056250 '__clang_svint32x4_t'
|-TypedefDecl 0x10080d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x120056270 '__clang_svint64x4_t'
|-TypedefDecl 0x10080d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x120056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x10080d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1200562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x10080d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1200562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x10080d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1200562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x10080d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x120056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x10080d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x120056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x10080d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x120056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x10080d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x120056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x10080da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x120056390 '__SVBool_t'
|-TypedefDecl 0x10080da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1200563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x10080dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1200563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x10080db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1200563f0 '__SVCount_t'
|-TypedefDecl 0x10080dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x10080dbb0 'char *'
|   `-BuiltinType 0x1200556b0 'char'
|-TypedefDecl 0x10080dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x10080dbb0 'char *'
|   `-BuiltinType 0x1200556b0 'char'
`-FunctionDecl 0x10080e0c0 <dataset_diviso_filec/func1934_nonvuln.c:1:1, line:93:1> line:1:13 invalid writeobject 'void (int *, int *, int *, int, int, int)' static
  |-ParmVarDecl 0x10080dd28 <col:25, col:37> col:37 invalid ctx 'int *'
  |-ParmVarDecl 0x10080dda8 <col:42, col:56> col:56 invalid doc 'int *'
  |-ParmVarDecl 0x10080de28 <col:61, col:78> col:78 referenced invalid opts 'int *'
  |-ParmVarDecl 0x10080dea8 <col:84, col:88> col:88 used num 'int'
  |-ParmVarDecl 0x10080df28 <col:93, col:97> col:97 used gen 'int'
  |-ParmVarDecl 0x10080dfa8 <col:102, col:106> col:106 used skip_xrefs 'int'
  `-CompoundStmt 0x10082b370 <line:2:1, line:93:1>
    |-CallExpr 0x10080e380 <line:7:2, col:12> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x10080e340 <col:2> 'int ()' Function 0x10080e288 'fz_try' 'int ()'
    | `-RecoveryExpr 0x10080e360 <col:9> '<dependent type>' contains-errors lvalue
    |-CompoundStmt 0x100827570 <line:8:2, line:10:2>
    |-CallExpr 0x1008276a0 <line:11:2, col:14> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x100827660 <col:2> 'int ()' Function 0x1008275a8 'fz_catch' 'int ()'
    | `-RecoveryExpr 0x100827680 <col:11> '<dependent type>' contains-errors lvalue
    |-CompoundStmt 0x100828128 <line:12:2, line:24:2>
    | |-CallExpr 0x100827850 <line:13:3, col:39> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x1008277a8 <col:3> 'int ()' Function 0x1008276f0 'fz_rethrow_if' 'int ()'
    | | |-RecoveryExpr 0x1008277c8 <col:17> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x100827830 <col:22> '<dependent type>' contains-errors lvalue
    | `-IfStmt 0x1008280f8 <line:14:3, line:23:18> has_else
    |   |-CXXDependentScopeMemberExpr 0x1008278a0 <line:14:7, col:13> '<dependent type>' contains-errors lvalue ->continue_on_error
    |   | `-RecoveryExpr 0x100827880 <col:7> '<dependent type>' contains-errors lvalue
    |   |-CompoundStmt 0x100827f80 <line:15:3, line:21:3>
    |   | |-CallExpr 0x100827b10 <line:16:4, col:51> '<dependent type>' contains-errors
    |   | | |-DeclRefExpr 0x1008279c8 <col:4> 'int ()' Function 0x100827910 'fz_write_printf' 'int ()'
    |   | | |-RecoveryExpr 0x1008279e8 <col:20> '<dependent type>' contains-errors lvalue
    |   | | |-CXXDependentScopeMemberExpr 0x100827a28 <col:25, col:31> '<dependent type>' contains-errors lvalue ->out
    |   | | | `-RecoveryExpr 0x100827a08 <col:25> '<dependent type>' contains-errors lvalue
    |   | | |-StringLiteral 0x100827ab0 <col:36> 'char[4]' lvalue "STR"
    |   | | |-DeclRefExpr 0x100827ad0 <col:43> 'int' lvalue ParmVar 0x10080dea8 'num' 'int'
    |   | | `-DeclRefExpr 0x100827af0 <col:48> 'int' lvalue ParmVar 0x10080df28 'gen' 'int'
    |   | |-IfStmt 0x100827c90 <line:17:4, line:18:20>
    |   | | |-CXXDependentScopeMemberExpr 0x100827b78 <line:17:8, col:14> '<dependent type>' contains-errors lvalue ->errors
    |   | | | `-RecoveryExpr 0x100827b58 <col:8> '<dependent type>' contains-errors lvalue
    |   | | `-UnaryOperator 0x100827c78 <line:18:5, col:20> '<dependent type>' contains-errors postfix '++' cannot overflow
    |   | |   `-ParenExpr 0x100827c58 <col:5, col:19> '<dependent type>' contains-errors
    |   | |     `-UnaryOperator 0x100827c40 <col:6, col:13> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   | |       `-ImplicitCastExpr 0x100827c28 <col:7, col:13> '<dependent type>' contains-errors <LValueToRValue>
    |   | |         `-CXXDependentScopeMemberExpr 0x100827be0 <col:7, col:13> '<dependent type>' contains-errors lvalue ->errors
    |   | |           `-RecoveryExpr 0x100827bc0 <col:7> '<dependent type>' contains-errors lvalue
    |   | |-CallExpr 0x100827f38 <line:19:4, col:46> '<dependent type>' contains-errors
    |   | | |-DeclRefExpr 0x100827d90 <col:4> 'int ()' Function 0x100827cd8 'fz_warn' 'int ()'
    |   | | |-RecoveryExpr 0x100827db0 <col:12> '<dependent type>' contains-errors lvalue
    |   | | |-StringLiteral 0x100827dd0 <col:17> 'char[4]' lvalue "STR"
    |   | | `-CallExpr 0x100827f10 <col:24, col:45> '<dependent type>' contains-errors
    |   | |   |-DeclRefExpr 0x100827ed0 <col:24> 'int ()' Function 0x100827e18 'fz_caught_message' 'int ()'
    |   | |   `-RecoveryExpr 0x100827ef0 <col:42> '<dependent type>' contains-errors lvalue
    |   | `-ReturnStmt 0x100827f70 <line:20:4>
    |   `-CallExpr 0x1008280d0 <line:23:4, col:18> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x100828090 <col:4> 'int ()' Function 0x100827fd8 'fz_rethrow' 'int ()'
    |     `-RecoveryExpr 0x1008280b0 <col:15> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x100829238 <line:27:2, line:42:2>
    | |-RecoveryExpr 0x100828268 <line:27:6, col:26> '_Bool' contains-errors
    | `-CompoundStmt 0x100829218 <line:28:2, line:42:2>
    |   |-IfStmt 0x100828fa8 <line:30:3, line:35:3>
    |   | |-RecoveryExpr 0x100828cf8 <line:30:7, col:45> '_Bool' contains-errors
    |   | `-CompoundStmt 0x100828f88 <line:31:3, line:35:3>
    |   |   |-BinaryOperator 0x100828e38 <line:32:4, col:26> '<dependent type>' contains-errors '='
    |   |   | |-ArraySubscriptExpr 0x100828df8 <col:4, col:22> '<dependent type>' contains-errors lvalue
    |   |   | | |-ImplicitCastExpr 0x100828dc8 <col:4, col:10> '<dependent type>' contains-errors <LValueToRValue>
    |   |   | | | `-CXXDependentScopeMemberExpr 0x100828d60 <col:4, col:10> '<dependent type>' contains-errors lvalue ->use_list
    |   |   | | |   `-RecoveryExpr 0x100828d38 <col:4> '<dependent type>' contains-errors lvalue
    |   |   | | |     `-DeclRefExpr 0x100828d18 <col:4> 'int *' lvalue ParmVar 0x10080de28 'opts' 'int *'
    |   |   | | `-ImplicitCastExpr 0x100828de0 <col:19> 'int' <LValueToRValue>
    |   |   | |   `-DeclRefExpr 0x100828da8 <col:19> 'int' lvalue ParmVar 0x10080dea8 'num' 'int'
    |   |   | `-IntegerLiteral 0x100828e18 <col:26> 'int' 0
    |   |   `-ReturnStmt 0x100828f78 <line:34:4>
    |   `-IfStmt 0x1008291f8 <line:36:3, line:41:3>
    |     |-RecoveryExpr 0x100829028 <line:36:7, col:57> '_Bool' contains-errors
    |     `-CompoundStmt 0x1008291d8 <line:37:3, line:41:3>
    |       |-BinaryOperator 0x100829168 <line:38:4, col:26> '<dependent type>' contains-errors '='
    |       | |-ArraySubscriptExpr 0x100829128 <col:4, col:22> '<dependent type>' contains-errors lvalue
    |       | | |-ImplicitCastExpr 0x1008290f8 <col:4, col:10> '<dependent type>' contains-errors <LValueToRValue>
    |       | | | `-CXXDependentScopeMemberExpr 0x100829090 <col:4, col:10> '<dependent type>' contains-errors lvalue ->use_list
    |       | | |   `-RecoveryExpr 0x100829068 <col:4> '<dependent type>' contains-errors lvalue
    |       | | |     `-DeclRefExpr 0x100829048 <col:4> 'int *' lvalue ParmVar 0x10080de28 'opts' 'int *'
    |       | | `-ImplicitCastExpr 0x100829110 <col:19> 'int' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x1008290d8 <col:19> 'int' lvalue ParmVar 0x10080dea8 'num' 'int'
    |       | `-IntegerLiteral 0x100829148 <col:26> 'int' 0
    |       `-ReturnStmt 0x1008291c8 <line:40:4>
    `-IfStmt 0x10082b300 <line:45:2, line:90:2> has_else
      |-UnaryOperator 0x100829588 <line:45:6, col:42> '<dependent type>' contains-errors prefix '!' cannot overflow
      | `-CallExpr 0x100829550 <col:7, col:42> '<dependent type>' contains-errors
      |   |-DeclRefExpr 0x1008294d0 <col:7> 'int ()' Function 0x100829418 'pdf_obj_num_is_stream' 'int ()'
      |   |-RecoveryExpr 0x1008294f0 <col:29> '<dependent type>' contains-errors lvalue
      |   |-RecoveryExpr 0x100829510 <col:34> '<dependent type>' contains-errors lvalue
      |   `-DeclRefExpr 0x100829530 <col:39> 'int' lvalue ParmVar 0x10080dea8 'num' 'int'
      |-CompoundStmt 0x100829ac0 <line:46:2, line:50:2>
      | |-CallExpr 0x1008296a8 <line:47:3, col:50> '<dependent type>' contains-errors
      | | |-DeclRefExpr 0x1008295a0 <col:3> 'int ()' Function 0x100827910 'fz_write_printf' 'int ()'
      | | |-RecoveryExpr 0x1008295c0 <col:19> '<dependent type>' contains-errors lvalue
      | | |-CXXDependentScopeMemberExpr 0x100829600 <col:24, col:30> '<dependent type>' contains-errors lvalue ->out
      | | | `-RecoveryExpr 0x1008295e0 <col:24> '<dependent type>' contains-errors lvalue
      | | |-StringLiteral 0x100829648 <col:35> 'char[4]' lvalue "STR"
      | | |-DeclRefExpr 0x100829668 <col:42> 'int' lvalue ParmVar 0x10080dea8 'num' 'int'
      | | `-DeclRefExpr 0x100829688 <col:47> 'int' lvalue ParmVar 0x10080df28 'gen' 'int'
      | `-CallExpr 0x100829a88 <line:49:3, col:40> '<dependent type>' contains-errors
      |   |-DeclRefExpr 0x1008299c0 <col:3> 'int ()' Function 0x100829908 'fz_write_string' 'int ()'
      |   |-RecoveryExpr 0x1008299e0 <col:19> '<dependent type>' contains-errors lvalue
      |   |-CXXDependentScopeMemberExpr 0x100829a20 <col:24, col:30> '<dependent type>' contains-errors lvalue ->out
      |   | `-RecoveryExpr 0x100829a00 <col:24> '<dependent type>' contains-errors lvalue
      |   `-StringLiteral 0x100829a68 <col:35> 'char[4]' lvalue "STR"
      `-IfStmt 0x10082b2d0 <line:51:7, line:90:2> has_else
        |-RecoveryExpr 0x100829b00 <line:51:11, col:51> '_Bool' contains-errors
        |-CompoundStmt 0x100829e98 <line:52:2, line:56:2>
        | |-CallExpr 0x100829c40 <line:53:3, col:50> '<dependent type>' contains-errors
        | | |-DeclRefExpr 0x100829b20 <col:3> 'int ()' Function 0x100827910 'fz_write_printf' 'int ()'
        | | |-RecoveryExpr 0x100829b40 <col:19> '<dependent type>' contains-errors lvalue
        | | |-CXXDependentScopeMemberExpr 0x100829b80 <col:24, col:30> '<dependent type>' contains-errors lvalue ->out
        | | | `-RecoveryExpr 0x100829b60 <col:24> '<dependent type>' contains-errors lvalue
        | | |-StringLiteral 0x100829bc8 <col:35> 'char[4]' lvalue "STR"
        | | |-DeclRefExpr 0x100829c00 <col:42> 'int' lvalue ParmVar 0x10080dea8 'num' 'int'
        | | `-DeclRefExpr 0x100829c20 <col:47> 'int' lvalue ParmVar 0x10080df28 'gen' 'int'
        | `-CallExpr 0x100829e60 <line:55:3, col:40> '<dependent type>' contains-errors
        |   |-DeclRefExpr 0x100829d98 <col:3> 'int ()' Function 0x100829908 'fz_write_string' 'int ()'
        |   |-RecoveryExpr 0x100829db8 <col:19> '<dependent type>' contains-errors lvalue
        |   |-CXXDependentScopeMemberExpr 0x100829df8 <col:24, col:30> '<dependent type>' contains-errors lvalue ->out
        |   | `-RecoveryExpr 0x100829dd8 <col:24> '<dependent type>' contains-errors lvalue
        |   `-StringLiteral 0x100829e40 <col:35> 'char[4]' lvalue "STR"
        `-CompoundStmt 0x10082b2a0 <line:58:2, line:90:2>
          |-CallExpr 0x100829ef8 <line:59:3, col:13> '<dependent type>' contains-errors
          | |-DeclRefExpr 0x100829eb8 <col:3> 'int ()' Function 0x10080e288 'fz_try' 'int ()'
          | `-RecoveryExpr 0x100829ed8 <col:10> '<dependent type>' contains-errors lvalue
          |-CompoundStmt 0x10082ac80 <line:60:3, line:73:3>
          | |-DeclStmt 0x10082a008 <line:61:4, col:38>
          | | `-VarDecl 0x100829f38 <col:4, col:27> col:8 used do_deflate 'int' cinit
          | |   `-CXXDependentScopeMemberExpr 0x100829fc0 <col:21, col:27> '<dependent type>' contains-errors lvalue ->do_compress
          | |     `-RecoveryExpr 0x100829fa0 <col:21> '<dependent type>' contains-errors lvalue
          | |-DeclStmt 0x10082a108 <line:62:4, col:35>
          | | `-VarDecl 0x10082a038 <col:4, col:26> col:8 used do_expand 'int' cinit
          | |   `-CXXDependentScopeMemberExpr 0x10082a0c0 <col:20, col:26> '<dependent type>' contains-errors lvalue ->do_expand
          | |     `-RecoveryExpr 0x10082a0a0 <col:20> '<dependent type>' contains-errors lvalue
          | |-IfStmt 0x10082a3a8 <line:63:4, line:64:33>
          | | |-RecoveryExpr 0x10082a2a8 <line:63:8, col:60> '_Bool' contains-errors
          | | `-BinaryOperator 0x10082a388 <line:64:5, col:33> 'int' contains-errors ','
          | |   |-BinaryOperator 0x10082a308 <col:5, col:18> 'int' contains-errors '='
          | |   | |-DeclRefExpr 0x10082a2c8 <col:5> 'int' contains-errors lvalue Var 0x100829f38 'do_deflate' 'int'
          | |   | `-IntegerLiteral 0x10082a2e8 <col:18> 'int' 1
          | |   `-BinaryOperator 0x10082a368 <col:21, col:33> 'int' contains-errors '='
          | |     |-DeclRefExpr 0x10082a328 <col:21> 'int' contains-errors lvalue Var 0x10082a038 'do_expand' 'int'
          | |     `-IntegerLiteral 0x10082a348 <col:33> 'int' 0
          | |-IfStmt 0x10082a650 <line:65:4, line:66:33>
          | | |-RecoveryExpr 0x10082a550 <line:65:8, col:58> '_Bool' contains-errors
          | | `-BinaryOperator 0x10082a630 <line:66:5, col:33> 'int' contains-errors ','
          | |   |-BinaryOperator 0x10082a5b0 <col:5, col:18> 'int' contains-errors '='
          | |   | |-DeclRefExpr 0x10082a570 <col:5> 'int' contains-errors lvalue Var 0x100829f38 'do_deflate' 'int'
          | |   | `-IntegerLiteral 0x10082a590 <col:18> 'int' 1
          | |   `-BinaryOperator 0x10082a610 <col:21, col:33> 'int' contains-errors '='
          | |     |-DeclRefExpr 0x10082a5d0 <col:21> 'int' contains-errors lvalue Var 0x10082a038 'do_expand' 'int'
          | |     `-IntegerLiteral 0x10082a5f0 <col:33> 'int' 0
          | `-IfStmt 0x10082a890 <line:67:4, line:68:33>
          |   |-RecoveryExpr 0x10082a790 <line:67:8, col:32> '_Bool' contains-errors
          |   `-BinaryOperator 0x10082a870 <line:68:5, col:33> 'int' contains-errors ','
          |     |-BinaryOperator 0x10082a7f0 <col:5, col:18> 'int' contains-errors '='
          |     | |-DeclRefExpr 0x10082a7b0 <col:5> 'int' contains-errors lvalue Var 0x100829f38 'do_deflate' 'int'
          |     | `-IntegerLiteral 0x10082a7d0 <col:18> 'int' 0
          |     `-BinaryOperator 0x10082a850 <col:21, col:33> 'int' contains-errors '='
          |       |-DeclRefExpr 0x10082a810 <col:21> 'int' contains-errors lvalue Var 0x10082a038 'do_expand' 'int'
          |       `-IntegerLiteral 0x10082a830 <col:33> 'int' 0
          |-CallExpr 0x10082acf8 <line:74:3, col:15> '<dependent type>' contains-errors
          | |-DeclRefExpr 0x10082acb8 <col:3> 'int ()' Function 0x1008275a8 'fz_catch' 'int ()'
          | `-RecoveryExpr 0x10082acd8 <col:12> '<dependent type>' contains-errors lvalue
          `-CompoundStmt 0x10082b288 <line:75:3, line:89:3>
            `-IfStmt 0x10082b258 <line:77:4, line:88:4> has_else
              |-CXXDependentScopeMemberExpr 0x10082ad80 <line:77:8, col:14> '<dependent type>' contains-errors lvalue ->continue_on_error
              | `-RecoveryExpr 0x10082ad60 <col:8> '<dependent type>' contains-errors lvalue
              |-CompoundStmt 0x10082b170 <line:78:4, line:83:4>
              | |-CallExpr 0x10082aed0 <line:79:5, col:52> '<dependent type>' contains-errors
              | | |-DeclRefExpr 0x10082adc8 <col:5> 'int ()' Function 0x100827910 'fz_write_printf' 'int ()'
              | | |-RecoveryExpr 0x10082ade8 <col:21> '<dependent type>' contains-errors lvalue
              | | |-CXXDependentScopeMemberExpr 0x10082ae28 <col:26, col:32> '<dependent type>' contains-errors lvalue ->out
              | | | `-RecoveryExpr 0x10082ae08 <col:26> '<dependent type>' contains-errors lvalue
              | | |-StringLiteral 0x10082ae70 <col:37> 'char[4]' lvalue "STR"
              | | |-DeclRefExpr 0x10082ae90 <col:44> 'int' lvalue ParmVar 0x10080dea8 'num' 'int'
              | | `-DeclRefExpr 0x10082aeb0 <col:49> 'int' lvalue ParmVar 0x10080df28 'gen' 'int'
              | |-IfStmt 0x10082b050 <line:80:5, line:81:21>
              | | |-CXXDependentScopeMemberExpr 0x10082af38 <line:80:9, col:15> '<dependent type>' contains-errors lvalue ->errors
              | | | `-RecoveryExpr 0x10082af18 <col:9> '<dependent type>' contains-errors lvalue
              | | `-UnaryOperator 0x10082b038 <line:81:6, col:21> '<dependent type>' contains-errors postfix '++' cannot overflow
              | |   `-ParenExpr 0x10082b018 <col:6, col:20> '<dependent type>' contains-errors
              | |     `-UnaryOperator 0x10082b000 <col:7, col:14> '<dependent type>' contains-errors prefix '*' cannot overflow
              | |       `-ImplicitCastExpr 0x10082afe8 <col:8, col:14> '<dependent type>' contains-errors <LValueToRValue>
              | |         `-CXXDependentScopeMemberExpr 0x10082afa0 <col:8, col:14> '<dependent type>' contains-errors lvalue ->errors
              | |           `-RecoveryExpr 0x10082af80 <col:8> '<dependent type>' contains-errors lvalue
              | `-CallExpr 0x10082b138 <line:82:5, col:47> '<dependent type>' contains-errors
              |   |-DeclRefExpr 0x10082b070 <col:5> 'int ()' Function 0x100827cd8 'fz_warn' 'int ()'
              |   |-RecoveryExpr 0x10082b090 <col:13> '<dependent type>' contains-errors lvalue
              |   |-StringLiteral 0x10082b0b0 <col:18> 'char[4]' lvalue "STR"
              |   `-CallExpr 0x10082b110 <col:25, col:46> '<dependent type>' contains-errors
              |     |-DeclRefExpr 0x10082b0d0 <col:25> 'int ()' Function 0x100827e18 'fz_caught_message' 'int ()'
              |     `-RecoveryExpr 0x10082b0f0 <col:43> '<dependent type>' contains-errors lvalue
              `-CompoundStmt 0x10082b240 <line:85:4, line:88:4>
                `-CallExpr 0x10082b218 <line:87:5, col:19> '<dependent type>' contains-errors
                  |-DeclRefExpr 0x10082b1d8 <col:5> 'int ()' Function 0x100827fd8 'fz_rethrow' 'int ()'
                  `-RecoveryExpr 0x10082b1f8 <col:16> '<dependent type>' contains-errors lvalue
