TranslationUnitDecl 0x129055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1290564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x129055bd0 '__int128'
|-TypedefDecl 0x129056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x129055bf0 'unsigned __int128'
|-TypedefDecl 0x129126a30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x129126800 'struct __NSConstantString_tag'
|   `-Record 0x129056580 '__NSConstantString_tag'
|-TypedefDecl 0x129126a98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x129055d90 '__SVInt8_t'
|-TypedefDecl 0x129126b00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x129055db0 '__SVInt16_t'
|-TypedefDecl 0x129126b68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x129055dd0 '__SVInt32_t'
|-TypedefDecl 0x129126bd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x129055df0 '__SVInt64_t'
|-TypedefDecl 0x129126c38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x129055e10 '__SVUint8_t'
|-TypedefDecl 0x129126ca0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x129055e30 '__SVUint16_t'
|-TypedefDecl 0x129126d08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x129055e50 '__SVUint32_t'
|-TypedefDecl 0x129126d70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x129055e70 '__SVUint64_t'
|-TypedefDecl 0x129126dd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x129055e90 '__SVFloat16_t'
|-TypedefDecl 0x129126e40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x129055eb0 '__SVFloat32_t'
|-TypedefDecl 0x129126ea8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x129055ed0 '__SVFloat64_t'
|-TypedefDecl 0x129126f10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x129055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x129126f78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x129055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x129126fe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x129055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x129127048 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x129055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1291270b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x129055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x129127118 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x129055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x129127180 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x129055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1291271e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x129055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x129127250 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x129055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1291272b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x129056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x129127320 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x129056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x129127388 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x129056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1291273f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x129056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x129127458 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x129056090 '__clang_svint8x3_t'
|-TypedefDecl 0x1291274c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1290560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x129127528 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1290560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x129127590 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1290560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x1291275f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x129056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x129127660 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x129056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x1291276c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x129056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x129127730 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x129056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x129127798 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x129056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x129128000 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1290561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x129128068 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1290561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1291280d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1290561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x129128138 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x129056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1291281a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x129056230 '__clang_svint16x4_t'
|-TypedefDecl 0x129128208 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x129056250 '__clang_svint32x4_t'
|-TypedefDecl 0x129128270 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x129056270 '__clang_svint64x4_t'
|-TypedefDecl 0x1291282d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x129056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x129128340 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1290562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1291283a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1290562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x129128410 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1290562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x129128478 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x129056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1291284e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x129056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x129128548 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x129056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1291285b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x129056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x129128618 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x129056390 '__SVBool_t'
|-TypedefDecl 0x129128680 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1290563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1291286e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1290563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x129128750 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1290563f0 '__SVCount_t'
|-TypedefDecl 0x1291287f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1291287b0 'char *'
|   `-BuiltinType 0x1290556b0 'char'
|-TypedefDecl 0x129128868 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1291287b0 'char *'
|   `-BuiltinType 0x1290556b0 'char'
|-FunctionDecl 0x129128d08 <dataset_diviso_filec/func10391_vuln.c:1:1, line:55:1> line:1:12 invalid open_url 'int (int *, int **, const char *, int *, int *, int *)' static
| |-ParmVarDecl 0x129128928 <col:21, col:38> col:38 invalid s 'int *'
| |-ParmVarDecl 0x1291289e0 <col:41, col:55> col:55 invalid pb 'int **'
| |-ParmVarDecl 0x129128a60 <col:59, col:71> col:71 used url 'const char *'
| |-ParmVarDecl 0x129128ae0 <line:2:21, col:35> col:35 invalid opts 'int *'
| |-ParmVarDecl 0x129128b60 <col:41, col:55> col:55 invalid opts2 'int *'
| |-ParmVarDecl 0x129128be0 <col:62, col:67> col:67 used is_http 'int *'
| `-CompoundStmt 0x12980d338 <line:3:1, line:55:1>
|   |-DeclStmt 0x129128f48 <line:6:5, col:34>
|   | `-VarDecl 0x129128ea8 <col:5, col:30> col:17 used proto_name 'const char *' cinit
|   |   `-RecoveryExpr 0x129128f28 <col:30> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x129128fe0 <line:7:5, col:12>
|   | `-VarDecl 0x129128f78 <col:5, col:9> col:9 used ret 'int'
|   |-CallExpr 0x129809460 <line:9:5, col:31> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x129809360 <col:5> 'int ()' Function 0x1298092a8 'av_dict_copy' 'int ()'
|   | |-UnaryOperator 0x129809448 <col:18, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | `-RecoveryExpr 0x129809428 <col:19> '<dependent type>' contains-errors lvalue
|   | |-RecoveryExpr 0x1298093b0 <col:24> '<dependent type>' contains-errors lvalue
|   | `-IntegerLiteral 0x1298093d0 <col:30> 'int' 0
|   |-CallExpr 0x129809598 <line:10:5, col:32> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x129809498 <col:5> 'int ()' Function 0x1298092a8 'av_dict_copy' 'int ()'
|   | |-UnaryOperator 0x129809580 <col:18, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | `-RecoveryExpr 0x129809560 <col:19> '<dependent type>' contains-errors lvalue
|   | |-RecoveryExpr 0x1298094e8 <col:24> '<dependent type>' contains-errors lvalue
|   | `-IntegerLiteral 0x129809508 <col:31> 'int' 0
|   |-IfStmt 0x12980a078 <line:12:5, line:15:5>
|   | |-CallExpr 0x1298097c0 <line:12:9, col:37> '<dependent type>' contains-errors
|   | | |-DeclRefExpr 0x1298096b0 <col:9> 'int ()' Function 0x1298095f8 'av_strstart' 'int ()'
|   | | |-DeclRefExpr 0x1298096d0 <col:21> 'const char *' lvalue ParmVar 0x129128a60 'url' 'const char *'
|   | | |-StringLiteral 0x129809730 <col:26> 'char[4]' lvalue "STR"
|   | | `-RecoveryExpr 0x1298097a0 <col:33> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x12980a060 <col:40, line:15:5>
|   |   `-IfStmt 0x12980a040 <line:13:9, line:14:57>
|   |     |-BinaryOperator 0x1298099b8 <line:13:13, col:40> 'int' '||'
|   |     | |-BinaryOperator 0x1298098b8 <col:13, col:23> 'int' '=='
|   |     | | |-ImplicitCastExpr 0x1298098a0 <col:13, col:18> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x129809888 <col:13, col:18> 'char' <LValueToRValue>
|   |     | | |   `-ArraySubscriptExpr 0x129809850 <col:13, col:18> 'const char' lvalue
|   |     | | |     |-ImplicitCastExpr 0x129809838 <col:13> 'const char *' <LValueToRValue>
|   |     | | |     | `-DeclRefExpr 0x1298097f8 <col:13> 'const char *' lvalue ParmVar 0x129128a60 'url' 'const char *'
|   |     | | |     `-IntegerLiteral 0x129809818 <col:17> 'int' 6
|   |     | | `-CharacterLiteral 0x129809870 <col:23> 'int' 43
|   |     | `-BinaryOperator 0x129809998 <col:30, col:40> 'int' '=='
|   |     |   |-ImplicitCastExpr 0x129809980 <col:30, col:35> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x129809968 <col:30, col:35> 'char' <LValueToRValue>
|   |     |   |   `-ArraySubscriptExpr 0x129809930 <col:30, col:35> 'const char' lvalue
|   |     |   |     |-ImplicitCastExpr 0x129809918 <col:30> 'const char *' <LValueToRValue>
|   |     |   |     | `-DeclRefExpr 0x1298098d8 <col:30> 'const char *' lvalue ParmVar 0x129128a60 'url' 'const char *'
|   |     |   |     `-IntegerLiteral 0x1298098f8 <col:34> 'int' 6
|   |     |   `-CharacterLiteral 0x129809950 <col:40> 'int' 58
|   |     `-BinaryOperator 0x12980a020 <line:14:13, col:57> 'const char *' contains-errors '='
|   |       |-DeclRefExpr 0x1298099d8 <col:13> 'const char *' contains-errors lvalue Var 0x129128ea8 'proto_name' 'const char *'
|   |       `-ImplicitCastExpr 0x129809be0 <col:26, col:57> 'const char *' <IntegralToPointer>
|   |         `-CallExpr 0x129809bb8 <col:26, col:57> 'int'
|   |           |-ImplicitCastExpr 0x129809ba0 <col:26> 'int (*)()' <FunctionToPointerDecay>
|   |           | `-DeclRefExpr 0x129809ad8 <col:26> 'int ()' Function 0x129809a20 'avio_find_protocol_name' 'int ()'
|   |           `-BinaryOperator 0x129809b50 <col:50, col:56> 'const char *' '+'
|   |             |-ImplicitCastExpr 0x129809b38 <col:50> 'const char *' <LValueToRValue>
|   |             | `-DeclRefExpr 0x129809af8 <col:50> 'const char *' lvalue ParmVar 0x129128a60 'url' 'const char *'
|   |             `-IntegerLiteral 0x129809b18 <col:56> 'int' 7
|   |-IfStmt 0x12980a1d8 <line:17:5, line:18:49>
|   | |-UnaryOperator 0x12980a0d0 <line:17:9, col:10> 'int' contains-errors prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x12980a0b8 <col:10> 'const char *' contains-errors <LValueToRValue>
|   | |   `-DeclRefExpr 0x12980a098 <col:10> 'const char *' contains-errors lvalue Var 0x129128ea8 'proto_name' 'const char *'
|   | `-BinaryOperator 0x12980a1b8 <line:18:9, col:49> 'const char *' contains-errors '='
|   |   |-DeclRefExpr 0x12980a0e8 <col:9> 'const char *' contains-errors lvalue Var 0x129128ea8 'proto_name' 'const char *'
|   |   `-ImplicitCastExpr 0x12980a1a0 <col:22, col:49> 'const char *' <IntegralToPointer>
|   |     `-CallExpr 0x12980a160 <col:22, col:49> 'int'
|   |       |-ImplicitCastExpr 0x12980a148 <col:22> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x12980a108 <col:22> 'int ()' Function 0x129809a20 'avio_find_protocol_name' 'int ()'
|   |       `-ImplicitCastExpr 0x12980a188 <col:46> 'const char *' <LValueToRValue>
|   |         `-DeclRefExpr 0x12980a128 <col:46> 'const char *' lvalue ParmVar 0x129128a60 'url' 'const char *'
|   |-IfStmt 0x12980b898 <line:20:5, line:21:16>
|   | |-UnaryOperator 0x12980b838 <line:20:9, col:10> 'int' contains-errors prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x12980b820 <col:10> 'const char *' contains-errors <LValueToRValue>
|   | |   `-DeclRefExpr 0x12980b800 <col:10> 'const char *' contains-errors lvalue Var 0x129128ea8 'proto_name' 'const char *'
|   | `-ReturnStmt 0x12980b888 <line:21:9, col:16>
|   |   `-RecoveryExpr 0x12980b868 <col:16> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x12980c988 <line:26:5, line:30:10> has_else
|   | |-BinaryOperator 0x12980c138 <line:26:9, col:85> 'int' contains-errors '&&'
|   | | |-UnaryOperator 0x12980bfb0 <col:9, col:53> 'int' contains-errors prefix '!' cannot overflow
|   | | | `-CallExpr 0x12980bf48 <col:10, col:53> 'int' contains-errors
|   | | |   |-ImplicitCastExpr 0x12980bf30 <col:10> 'int (*)(const char *, const char *, unsigned long)' <FunctionToPointerDecay>
|   | | |   | `-DeclRefExpr 0x12980bbd8 <col:10> 'int (const char *, const char *, unsigned long)' Function 0x12980b988 'strncmp' 'int (const char *, const char *, unsigned long)'
|   | | |   |-ImplicitCastExpr 0x12980bf80 <col:18> 'const char *' contains-errors <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x12980bbf8 <col:18> 'const char *' contains-errors lvalue Var 0x129128ea8 'proto_name' 'const char *'
|   | | |   |-ImplicitCastExpr 0x12980bf98 <col:30> 'const char *' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x12980bc18 <col:30> 'const char *' lvalue ParmVar 0x129128a60 'url' 'const char *'
|   | | |   `-CallExpr 0x12980be88 <col:35, col:52> 'unsigned long' contains-errors
|   | | |     |-ImplicitCastExpr 0x12980be70 <col:35> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   | | |     | `-DeclRefExpr 0x12980bde8 <col:35> 'unsigned long (const char *)' Function 0x12980bc78 'strlen' 'unsigned long (const char *)'
|   | | |     `-ImplicitCastExpr 0x12980beb0 <col:42> 'const char *' contains-errors <LValueToRValue>
|   | | |       `-DeclRefExpr 0x12980be08 <col:42> 'const char *' contains-errors lvalue Var 0x129128ea8 'proto_name' 'const char *'
|   | | `-BinaryOperator 0x12980c118 <col:58, col:85> 'int' contains-errors '=='
|   | |   |-ImplicitCastExpr 0x12980c100 <col:58, col:80> 'int' contains-errors <IntegralCast>
|   | |   | `-ImplicitCastExpr 0x12980c0e8 <col:58, col:80> 'char' contains-errors <LValueToRValue>
|   | |   |   `-ArraySubscriptExpr 0x12980c0b0 <col:58, col:80> 'const char' contains-errors lvalue
|   | |   |     |-ImplicitCastExpr 0x12980c098 <col:58> 'const char *' <LValueToRValue>
|   | |   |     | `-DeclRefExpr 0x12980bfc8 <col:58> 'const char *' lvalue ParmVar 0x129128a60 'url' 'const char *'
|   | |   |     `-CallExpr 0x12980c058 <col:62, col:79> 'unsigned long' contains-errors
|   | |   |       |-ImplicitCastExpr 0x12980c040 <col:62> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   | |   |       | `-DeclRefExpr 0x12980bfe8 <col:62> 'unsigned long (const char *)' Function 0x12980bc78 'strlen' 'unsigned long (const char *)'
|   | |   |       `-ImplicitCastExpr 0x12980c080 <col:69> 'const char *' contains-errors <LValueToRValue>
|   | |   |         `-DeclRefExpr 0x12980c008 <col:69> 'const char *' contains-errors lvalue Var 0x129128ea8 'proto_name' 'const char *'
|   | |   `-CharacterLiteral 0x12980c0d0 <col:85> 'int' 58
|   | |-NullStmt 0x12980c158 <line:27:9>
|   | `-IfStmt 0x12980c958 <line:28:10, line:30:10> has_else
|   |   |-RecoveryExpr 0x12980c588 <line:28:14, col:131> '_Bool' contains-errors
|   |   |-NullStmt 0x12980c5a8 <line:29:9>
|   |   `-NullStmt 0x12980c950 <line:30:10>
|   |-IfStmt 0x12980d0e8 <line:34:5, line:47:5>
|   | |-BinaryOperator 0x12980caf8 <line:34:9, col:16> 'int' '>='
|   | | |-ImplicitCastExpr 0x12980cae0 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x12980caa0 <col:9> 'int' lvalue Var 0x129128f78 'ret' 'int'
|   | | `-IntegerLiteral 0x12980cac0 <col:16> 'int' 0
|   | `-CompoundStmt 0x12980d0c8 <col:19, line:47:5>
|   |   |-DeclStmt 0x12980cb98 <line:36:9, col:33>
|   |   | `-VarDecl 0x12980cb30 <col:9, col:15> col:15 used new_cookies 'char *'
|   |   `-IfStmt 0x12980cf30 <line:41:9, line:44:9>
|   |     |-ImplicitCastExpr 0x12980cde8 <line:41:13> 'char *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x12980cdc8 <col:13> 'char *' lvalue Var 0x12980cb30 'new_cookies' 'char *'
|   |     `-CompoundStmt 0x12980cf20 <col:26, line:44:9>
|   `-ReturnStmt 0x12980d328 <line:54:5, col:12>
|     `-ImplicitCastExpr 0x12980d310 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x12980d2f0 <col:12> 'int' lvalue Var 0x129128f78 'ret' 'int'
|-FunctionDecl 0x12980b988 <line:26:10> col:10 implicit used strncmp 'int (const char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0x12980ba88 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x12980baf0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x12980bb58 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x12980ba30 <<invalid sloc>> Implicit 888
|-FunctionDecl 0x12980bc78 <col:35> col:35 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x12980bd78 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x12980bd20 <<invalid sloc>> Implicit 902
`-FunctionDecl 0x12980c5f0 <line:30:14> col:14 implicit used strcmp 'int (const char *, const char *)' extern
  |-ParmVarDecl 0x12980c6f0 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x12980c758 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x12980c698 <<invalid sloc>> Implicit 887
