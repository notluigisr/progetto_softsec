TranslationUnitDecl 0x13f055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13f0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13f055bd0 '__int128'
|-TypedefDecl 0x13f056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13f055bf0 'unsigned __int128'
|-TypedefDecl 0x13f126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13f126000 'struct __NSConstantString_tag'
|   `-Record 0x13f056580 '__NSConstantString_tag'
|-TypedefDecl 0x13f126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13f055d90 '__SVInt8_t'
|-TypedefDecl 0x13f126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13f055db0 '__SVInt16_t'
|-TypedefDecl 0x13f126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13f055dd0 '__SVInt32_t'
|-TypedefDecl 0x13f1263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13f055df0 '__SVInt64_t'
|-TypedefDecl 0x13f126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13f055e10 '__SVUint8_t'
|-TypedefDecl 0x13f1264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13f055e30 '__SVUint16_t'
|-TypedefDecl 0x13f126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13f055e50 '__SVUint32_t'
|-TypedefDecl 0x13f126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13f055e70 '__SVUint64_t'
|-TypedefDecl 0x13f1265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13f055e90 '__SVFloat16_t'
|-TypedefDecl 0x13f126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13f055eb0 '__SVFloat32_t'
|-TypedefDecl 0x13f1266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13f055ed0 '__SVFloat64_t'
|-TypedefDecl 0x13f126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13f055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13f126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13f055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13f1267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13f055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13f126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13f055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13f1268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13f055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13f126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13f055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13f126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13f055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13f1269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13f055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13f126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13f055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13f126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13f056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13f126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13f056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13f126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13f056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13f126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13f056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13f126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13f056090 '__clang_svint8x3_t'
|-TypedefDecl 0x13f126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13f0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13f126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13f0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13f126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13f0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13f126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13f056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13f126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13f056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13f126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13f056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13f126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13f056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13f126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13f056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13f127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13f0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13f127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13f0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13f1278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13f0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13f127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13f056210 '__clang_svint8x4_t'
|-TypedefDecl 0x13f1279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13f056230 '__clang_svint16x4_t'
|-TypedefDecl 0x13f127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13f056250 '__clang_svint32x4_t'
|-TypedefDecl 0x13f127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13f056270 '__clang_svint64x4_t'
|-TypedefDecl 0x13f127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13f056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13f127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13f0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13f127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13f0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13f127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13f0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13f127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13f056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13f127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13f056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13f127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13f056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13f127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13f056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13f127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13f056390 '__SVBool_t'
|-TypedefDecl 0x13f127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13f0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13f127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13f0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13f127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13f0563f0 '__SVCount_t'
|-TypedefDecl 0x13f127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13f127fb0 'char *'
|   `-BuiltinType 0x13f0556b0 'char'
|-TypedefDecl 0x13f128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13f127fb0 'char *'
|   `-BuiltinType 0x13f0556b0 'char'
|-FunctionDecl 0x13f1283a8 <dataset_diviso_filec/func21764_nonvuln.c:1:1, line:48:1> line:1:1 invalid dlz_closeversion 'int (const char *, int, void *, void **)'
| |-ParmVarDecl 0x13f1280d8 <col:18, col:30> col:30 used zone 'const char *'
| |-ParmVarDecl 0x13f128170 <col:36, col:41> col:41 invalid commit 'int'
| |-ParmVarDecl 0x13f1281f0 <line:2:4, col:10> col:10 used dbdata 'void *'
| |-ParmVarDecl 0x13f1282a8 <col:18, col:25> col:25 used versionp 'void **'
| `-CompoundStmt 0x13f146698 <line:3:1, line:48:1>
|   |-DeclStmt 0x13f128740 <line:4:2, col:68>
|   | |-RecordDecl 0x13f128470 <col:2, col:9> col:9 struct dlz_example_data
|   | `-VarDecl 0x13f1285d8 <col:2, col:62> col:27 used state 'struct dlz_example_data *' cinit
|   |   `-CStyleCastExpr 0x13f128700 <col:35, col:62> 'struct dlz_example_data *' <BitCast>
|   |     `-ImplicitCastExpr 0x13f1286e8 <col:62> 'void *' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0x13f128640 <col:62> 'void *' lvalue ParmVar 0x13f1281f0 'dbdata' 'void *'
|   |-IfStmt 0x13f143008 <line:6:2, line:12:2>
|   | |-UnaryOperator 0x13f142c00 <line:6:6, col:14> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x13f142be8 <col:7, col:14> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x13f142bc0 <col:7, col:14> '<dependent type>' contains-errors lvalue
|   | |     `-DeclRefExpr 0x13f128758 <col:7> 'struct dlz_example_data *' lvalue Var 0x13f1285d8 'state' 'struct dlz_example_data *'
|   | `-CompoundStmt 0x13f142fe0 <col:35, line:12:2>
|   |   |-IfStmt 0x13f142e88 <line:7:3, line:9:19>
|   |   | |-BinaryOperator 0x13f142cd0 <line:7:7, col:21> 'int' contains-errors '!='
|   |   | | |-RecoveryExpr 0x13f142c50 <col:7, col:14> '<dependent type>' contains-errors lvalue
|   |   | | | `-DeclRefExpr 0x13f142c18 <col:7> 'struct dlz_example_data *' lvalue Var 0x13f1285d8 'state' 'struct dlz_example_data *'
|   |   | | `-RecoveryExpr 0x13f142cb0 <col:21> '<dependent type>' contains-errors lvalue
|   |   | `-CallExpr 0x13f142e50 <line:8:4, line:9:19> '<dependent type>' contains-errors
|   |   |   |-RecoveryExpr 0x13f142d28 <line:8:4, col:11> '<dependent type>' contains-errors lvalue
|   |   |   | `-DeclRefExpr 0x13f142cf0 <col:4> 'struct dlz_example_data *' lvalue Var 0x13f1285d8 'state' 'struct dlz_example_data *'
|   |   |   |-RecoveryExpr 0x13f142e30 <col:15> '<dependent type>' contains-errors lvalue
|   |   |   |-StringLiteral 0x13f142db0 <col:29, line:9:8> 'char[7]' lvalue "STRSTR"
|   |   |   `-DeclRefExpr 0x13f142dd8 <col:15> 'const char *' lvalue ParmVar 0x13f1280d8 'zone' 'const char *'
|   |   |-BinaryOperator 0x13f142fb0 <line:10:3, col:15> 'void *' contains-errors '='
|   |   | |-UnaryOperator 0x13f142f78 <col:3, col:4> 'void *' lvalue prefix '*' cannot overflow
|   |   | | `-ImplicitCastExpr 0x13f142f60 <col:4> 'void **' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x13f142ea8 <col:4> 'void **' lvalue ParmVar 0x13f1282a8 'versionp' 'void **'
|   |   | `-RecoveryExpr 0x13f142f90 <col:15> '<dependent type>' contains-errors lvalue
|   |   `-ReturnStmt 0x13f142fd0 <line:11:3>
|   |-BinaryOperator 0x13f1431a8 <line:16:2, col:14> 'void *' contains-errors '='
|   | |-UnaryOperator 0x13f143170 <col:2, col:3> 'void *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x13f143158 <col:3> 'void **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x13f1430a0 <col:3> 'void **' lvalue ParmVar 0x13f1282a8 'versionp' 'void **'
|   | `-RecoveryExpr 0x13f143188 <col:14> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x13f1460a8 <line:18:2, line:45:2> has_else
|   | |-RecoveryExpr 0x13f1431c8 <line:18:6> '<dependent type>' contains-errors lvalue
|   | |-CompoundStmt 0x13f145f48 <col:14, line:41:2>
|   | | |-DeclStmt 0x13f143268 <line:19:3, col:8>
|   | | | `-VarDecl 0x13f143200 <col:3, col:7> col:7 used i 'int'
|   | | |-IfStmt 0x13f1434a8 <line:20:3, line:22:19>
|   | | | |-BinaryOperator 0x13f143338 <line:20:7, col:21> 'int' contains-errors '!='
|   | | | | |-RecoveryExpr 0x13f1432b8 <col:7, col:14> '<dependent type>' contains-errors lvalue
|   | | | | | `-DeclRefExpr 0x13f143280 <col:7> 'struct dlz_example_data *' lvalue Var 0x13f1285d8 'state' 'struct dlz_example_data *'
|   | | | | `-RecoveryExpr 0x13f143318 <col:21> '<dependent type>' contains-errors lvalue
|   | | | `-CallExpr 0x13f143470 <line:21:4, line:22:19> '<dependent type>' contains-errors
|   | | |   |-RecoveryExpr 0x13f143390 <line:21:4, col:11> '<dependent type>' contains-errors lvalue
|   | | |   | `-DeclRefExpr 0x13f143358 <col:4> 'struct dlz_example_data *' lvalue Var 0x13f1285d8 'state' 'struct dlz_example_data *'
|   | | |   |-RecoveryExpr 0x13f143450 <col:15> '<dependent type>' contains-errors lvalue
|   | | |   |-StringLiteral 0x13f1433d0 <col:29, line:22:8> 'char[7]' lvalue "STRSTR"
|   | | |   `-DeclRefExpr 0x13f1433f8 <col:15> 'const char *' lvalue ParmVar 0x13f1280d8 'zone' 'const char *'
|   | | `-ForStmt 0x13f144e38 <line:23:3, line:31:3>
|   | |   |-BinaryOperator 0x13f143508 <line:23:8, col:12> 'int' '='
|   | |   | |-DeclRefExpr 0x13f1434c8 <col:8> 'int' lvalue Var 0x13f143200 'i' 'int'
|   | |   | `-IntegerLiteral 0x13f1434e8 <col:12> 'int' 0
|   | |   |-<<<NULL>>>
|   | |   |-BinaryOperator 0x13f1435a0 <col:15, col:19> 'int' contains-errors '<'
|   | |   | |-DeclRefExpr 0x13f143528 <col:15> 'int' lvalue Var 0x13f143200 'i' 'int'
|   | |   | `-RecoveryExpr 0x13f143580 <col:19> '<dependent type>' contains-errors lvalue
|   | |   |-UnaryOperator 0x13f1435e0 <col:32, col:33> 'int' postfix '++'
|   | |   | `-DeclRefExpr 0x13f1435c0 <col:32> 'int' lvalue Var 0x13f143200 'i' 'int'
|   | |   `-CompoundStmt 0x13f144e20 <col:37, line:31:3>
|   | |     `-IfStmt 0x13f144e00 <line:24:4, line:30:4>
|   | |       |-BinaryOperator 0x13f144038 <line:24:8, col:41> 'int' contains-errors '>'
|   | |       | |-CallExpr 0x13f144010 <col:8, col:37> '<dependent type>' contains-errors
|   | |       | | |-DeclRefExpr 0x13f1437a8 <col:8> 'unsigned long (const char *)' Function 0x13f143638 'strlen' 'unsigned long (const char *)'
|   | |       | | `-CXXDependentScopeMemberExpr 0x13f143fb0 <col:15, col:33> '<dependent type>' contains-errors lvalue .name
|   | |       | |   `-ArraySubscriptExpr 0x13f143f90 <col:15, col:31> '<dependent type>' contains-errors lvalue
|   | |       | |     |-ImplicitCastExpr 0x13f143f60 <col:15, col:22> '<dependent type>' contains-errors <LValueToRValue>
|   | |       | |     | `-RecoveryExpr 0x13f143e00 <col:15, col:22> '<dependent type>' contains-errors lvalue
|   | |       | |     |   `-DeclRefExpr 0x13f1437c8 <col:15> 'struct dlz_example_data *' lvalue Var 0x13f1285d8 'state' 'struct dlz_example_data *'
|   | |       | |     `-ImplicitCastExpr 0x13f143f78 <col:30> 'int' <LValueToRValue>
|   | |       | |       `-DeclRefExpr 0x13f143e28 <col:30> 'int' lvalue Var 0x13f143200 'i' 'int'
|   | |       | `-IntegerLiteral 0x13f143f20 <col:41> 'unsigned int' 0
|   | |       `-CompoundStmt 0x13f144de0 <col:45, line:30:4>
|   | |         `-CStyleCastExpr 0x13f144db8 <line:25:5, line:29:35> 'void' contains-errors <ToVoid>
|   | |           `-CallExpr 0x13f144d68 <line:25:11, line:29:35> '<dependent type>' contains-errors
|   | |             |-DeclRefExpr 0x13f1441b0 <line:25:11> 'int ()' Function 0x13f1440f8 'del_name' 'int ()'
|   | |             |-DeclRefExpr 0x13f1441d0 <col:20> 'struct dlz_example_data *' lvalue Var 0x13f1285d8 'state' 'struct dlz_example_data *'
|   | |             |-UnaryOperator 0x13f144af0 <col:27, col:44> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | |             | `-ArraySubscriptExpr 0x13f144ad0 <col:28, col:44> '<dependent type>' contains-errors lvalue
|   | |             |   |-ImplicitCastExpr 0x13f144ab8 <col:28, col:35> '<dependent type>' contains-errors <LValueToRValue>
|   | |             |   | `-RecoveryExpr 0x13f144228 <col:28, col:35> '<dependent type>' contains-errors lvalue
|   | |             |   |   `-DeclRefExpr 0x13f1441f0 <col:28> 'struct dlz_example_data *' lvalue Var 0x13f1285d8 'state' 'struct dlz_example_data *'
|   | |             |   `-IntegerLiteral 0x13f144250 <col:43> 'int' 0
|   | |             |-CXXDependentScopeMemberExpr 0x13f144b58 <line:26:13, col:31> '<dependent type>' contains-errors lvalue .name
|   | |             | `-ArraySubscriptExpr 0x13f144b38 <col:13, col:29> '<dependent type>' contains-errors lvalue
|   | |             |   |-ImplicitCastExpr 0x13f144b08 <col:13, col:20> '<dependent type>' contains-errors <LValueToRValue>
|   | |             |   | `-RecoveryExpr 0x13f1442f8 <col:13, col:20> '<dependent type>' contains-errors lvalue
|   | |             |   |   `-DeclRefExpr 0x13f1442c0 <col:13> 'struct dlz_example_data *' lvalue Var 0x13f1285d8 'state' 'struct dlz_example_data *'
|   | |             |   `-ImplicitCastExpr 0x13f144b20 <col:28> 'int' <LValueToRValue>
|   | |             |     `-DeclRefExpr 0x13f144320 <col:28> 'int' lvalue Var 0x13f143200 'i' 'int'
|   | |             |-CXXDependentScopeMemberExpr 0x13f144bf0 <line:27:13, col:31> '<dependent type>' contains-errors lvalue .type
|   | |             | `-ArraySubscriptExpr 0x13f144bd0 <col:13, col:29> '<dependent type>' contains-errors lvalue
|   | |             |   |-ImplicitCastExpr 0x13f144ba0 <col:13, col:20> '<dependent type>' contains-errors <LValueToRValue>
|   | |             |   | `-RecoveryExpr 0x13f144410 <col:13, col:20> '<dependent type>' contains-errors lvalue
|   | |             |   |   `-DeclRefExpr 0x13f1443d8 <col:13> 'struct dlz_example_data *' lvalue Var 0x13f1285d8 'state' 'struct dlz_example_data *'
|   | |             |   `-ImplicitCastExpr 0x13f144bb8 <col:28> 'int' <LValueToRValue>
|   | |             |     `-DeclRefExpr 0x13f144438 <col:28> 'int' lvalue Var 0x13f143200 'i' 'int'
|   | |             |-CXXDependentScopeMemberExpr 0x13f144c88 <line:28:13, col:31> '<dependent type>' contains-errors lvalue .ttl
|   | |             | `-ArraySubscriptExpr 0x13f144c68 <col:13, col:29> '<dependent type>' contains-errors lvalue
|   | |             |   |-ImplicitCastExpr 0x13f144c38 <col:13, col:20> '<dependent type>' contains-errors <LValueToRValue>
|   | |             |   | `-RecoveryExpr 0x13f144528 <col:13, col:20> '<dependent type>' contains-errors lvalue
|   | |             |   |   `-DeclRefExpr 0x13f1444f0 <col:13> 'struct dlz_example_data *' lvalue Var 0x13f1285d8 'state' 'struct dlz_example_data *'
|   | |             |   `-ImplicitCastExpr 0x13f144c50 <col:28> 'int' <LValueToRValue>
|   | |             |     `-DeclRefExpr 0x13f144550 <col:28> 'int' lvalue Var 0x13f143200 'i' 'int'
|   | |             `-CXXDependentScopeMemberExpr 0x13f144d20 <line:29:13, col:31> '<dependent type>' contains-errors lvalue .data
|   | |               `-ArraySubscriptExpr 0x13f144d00 <col:13, col:29> '<dependent type>' contains-errors lvalue
|   | |                 |-ImplicitCastExpr 0x13f144cd0 <col:13, col:20> '<dependent type>' contains-errors <LValueToRValue>
|   | |                 | `-RecoveryExpr 0x13f144640 <col:13, col:20> '<dependent type>' contains-errors lvalue
|   | |                 |   `-DeclRefExpr 0x13f144608 <col:13> 'struct dlz_example_data *' lvalue Var 0x13f1285d8 'state' 'struct dlz_example_data *'
|   | |                 `-ImplicitCastExpr 0x13f144ce8 <col:28> 'int' <LValueToRValue>
|   | |                   `-DeclRefExpr 0x13f144668 <col:28> 'int' lvalue Var 0x13f143200 'i' 'int'
|   | `-CompoundStmt 0x13f146098 <line:41:9, line:45:2>
|   |-CallExpr 0x13f1464d0 <line:46:2, col:44> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x13f146378 <col:2> 'void *(void *, int, unsigned long)' Function 0x13f146128 'memset' 'void *(void *, int, unsigned long)'
|   | |-RecoveryExpr 0x13f1463d0 <col:9, col:16> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x13f146398 <col:9> 'struct dlz_example_data *' lvalue Var 0x13f1285d8 'state' 'struct dlz_example_data *'
|   | |-IntegerLiteral 0x13f1463f8 <col:22> 'int' 0
|   | `-UnaryExprOrTypeTraitExpr 0x13f146498 <col:25, col:43> 'unsigned long' contains-errors sizeof
|   |   `-ParenExpr 0x13f146478 <col:31, col:43> '<dependent type>' contains-errors lvalue
|   |     `-RecoveryExpr 0x13f146450 <col:32, col:39> '<dependent type>' contains-errors lvalue
|   |       `-DeclRefExpr 0x13f146418 <col:32> 'struct dlz_example_data *' lvalue Var 0x13f1285d8 'state' 'struct dlz_example_data *' non_odr_use_unevaluated
|   `-CallExpr 0x13f146660 <line:47:2, col:50> '<dependent type>' contains-errors
|     |-DeclRefExpr 0x13f146508 <col:2> 'void *(void *, int, unsigned long)' Function 0x13f146128 'memset' 'void *(void *, int, unsigned long)'
|     |-RecoveryExpr 0x13f146560 <col:9, col:16> '<dependent type>' contains-errors lvalue
|     | `-DeclRefExpr 0x13f146528 <col:9> 'struct dlz_example_data *' lvalue Var 0x13f1285d8 'state' 'struct dlz_example_data *'
|     |-IntegerLiteral 0x13f146588 <col:25> 'int' 0
|     `-UnaryExprOrTypeTraitExpr 0x13f146628 <col:28, col:49> 'unsigned long' contains-errors sizeof
|       `-ParenExpr 0x13f146608 <col:34, col:49> '<dependent type>' contains-errors lvalue
|         `-RecoveryExpr 0x13f1465e0 <col:35, col:42> '<dependent type>' contains-errors lvalue
|           `-DeclRefExpr 0x13f1465a8 <col:35> 'struct dlz_example_data *' lvalue Var 0x13f1285d8 'state' 'struct dlz_example_data *' non_odr_use_unevaluated
|-FunctionDecl 0x13f143638 <line:24:8> col:8 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x13f143738 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x13f1436e0 <<invalid sloc>> Implicit 902
`-FunctionDecl 0x13f146128 <line:46:2> col:2 implicit used memset 'void *(void *, int, unsigned long)' extern
  |-ParmVarDecl 0x13f146228 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x13f146290 <<invalid sloc>> <invalid sloc> 'int'
  |-ParmVarDecl 0x13f1462f8 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x13f1461d0 <<invalid sloc>> Implicit 900
