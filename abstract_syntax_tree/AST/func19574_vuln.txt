TranslationUnitDecl 0x14a82fa08 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14a8308b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14a82ffd0 '__int128'
|-TypedefDecl 0x14a830928 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14a82fff0 'unsigned __int128'
|-TypedefDecl 0x14a900630 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14a900400 'struct __NSConstantString_tag'
|   `-Record 0x14a830980 '__NSConstantString_tag'
|-TypedefDecl 0x14a900698 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14a830190 '__SVInt8_t'
|-TypedefDecl 0x14a900700 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14a8301b0 '__SVInt16_t'
|-TypedefDecl 0x14a900768 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14a8301d0 '__SVInt32_t'
|-TypedefDecl 0x14a9007d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14a8301f0 '__SVInt64_t'
|-TypedefDecl 0x14a900838 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14a830210 '__SVUint8_t'
|-TypedefDecl 0x14a9008a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14a830230 '__SVUint16_t'
|-TypedefDecl 0x14a900908 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14a830250 '__SVUint32_t'
|-TypedefDecl 0x14a900970 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14a830270 '__SVUint64_t'
|-TypedefDecl 0x14a9009d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14a830290 '__SVFloat16_t'
|-TypedefDecl 0x14a900a40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14a8302b0 '__SVFloat32_t'
|-TypedefDecl 0x14a900aa8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14a8302d0 '__SVFloat64_t'
|-TypedefDecl 0x14a900b10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14a8302f0 '__SVBfloat16_t'
|-TypedefDecl 0x14a900b78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14a830310 '__clang_svint8x2_t'
|-TypedefDecl 0x14a900be0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14a830330 '__clang_svint16x2_t'
|-TypedefDecl 0x14a900c48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14a830350 '__clang_svint32x2_t'
|-TypedefDecl 0x14a900cb0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14a830370 '__clang_svint64x2_t'
|-TypedefDecl 0x14a900d18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14a830390 '__clang_svuint8x2_t'
|-TypedefDecl 0x14a900d80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14a8303b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14a900de8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14a8303d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14a900e50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14a8303f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14a900eb8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14a830410 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14a900f20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14a830430 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14a900f88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14a830450 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14a900ff0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14a830470 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14a901058 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14a830490 '__clang_svint8x3_t'
|-TypedefDecl 0x14a9010c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14a8304b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14a901128 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14a8304d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14a901190 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14a8304f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14a9011f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14a830510 '__clang_svuint8x3_t'
|-TypedefDecl 0x14a901260 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14a830530 '__clang_svuint16x3_t'
|-TypedefDecl 0x14a9012c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14a830550 '__clang_svuint32x3_t'
|-TypedefDecl 0x14a901330 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14a830570 '__clang_svuint64x3_t'
|-TypedefDecl 0x14a901398 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14a830590 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14a901c00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14a8305b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14a901c68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14a8305d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14a901cd0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14a8305f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14a901d38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14a830610 '__clang_svint8x4_t'
|-TypedefDecl 0x14a901da0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14a830630 '__clang_svint16x4_t'
|-TypedefDecl 0x14a901e08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14a830650 '__clang_svint32x4_t'
|-TypedefDecl 0x14a901e70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14a830670 '__clang_svint64x4_t'
|-TypedefDecl 0x14a901ed8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14a830690 '__clang_svuint8x4_t'
|-TypedefDecl 0x14a901f40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14a8306b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14a901fa8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14a8306d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14a902010 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14a8306f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14a902078 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14a830710 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14a9020e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14a830730 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14a902148 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14a830750 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14a9021b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14a830770 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14a902218 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14a830790 '__SVBool_t'
|-TypedefDecl 0x14a902280 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14a8307b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14a9022e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14a8307d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14a902350 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14a8307f0 '__SVCount_t'
|-TypedefDecl 0x14a9023f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14a9023b0 'char *'
|   `-BuiltinType 0x14a82fab0 'char'
|-TypedefDecl 0x14a902468 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14a9023b0 'char *'
|   `-BuiltinType 0x14a82fab0 'char'
|-FunctionDecl 0x14a902668 <dataset_diviso_filec/func19574_vuln.c:1:1, line:31:1> line:1:1 inboth 'int (char **, char **)'
| |-ParmVarDecl 0x14a902508 <col:9, col:16> col:16 used left 'char **'
| |-ParmVarDecl 0x14a902588 <col:22, col:29> col:29 used right 'char **'
| `-CompoundStmt 0x14981ad08 <line:2:1, line:31:1>
|   |-DeclStmt 0x14a9027e8 <line:3:3, col:14>
|   | `-VarDecl 0x14a902780 <col:3, col:10> col:10 used both 'char **'
|   |-DeclStmt 0x14a902880 <line:4:3, col:14>
|   | `-VarDecl 0x14a902818 <col:3, col:10> col:10 used temp 'char **'
|   |-DeclStmt 0x14a9029b0 <line:5:3, col:17>
|   | |-VarDecl 0x14a9028b0 <col:3, col:7> col:7 used lnum 'int'
|   | `-VarDecl 0x14a902930 <col:3, col:13> col:13 used rnum 'int'
|   |-IfStmt 0x14a902b98 <line:7:3, line:8:12>
|   | |-BinaryOperator 0x14a902b30 <line:7:7, col:32> 'int' contains-errors '||'
|   | | |-BinaryOperator 0x14a902ad0 <col:7, col:15> 'int' contains-errors '=='
|   | | | |-DeclRefExpr 0x14a9029c8 <col:7> 'char **' lvalue ParmVar 0x14a902508 'left' 'char **'
|   | | | `-RecoveryExpr 0x14a902ab0 <col:15> '<dependent type>' contains-errors lvalue
|   | | `-BinaryOperator 0x14a902b10 <col:23, col:32> 'int' contains-errors '=='
|   | |   |-DeclRefExpr 0x14a902a38 <col:23> 'char **' lvalue ParmVar 0x14a902588 'right' 'char **'
|   | |   `-RecoveryExpr 0x14a902af0 <col:32> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x14a902b88 <line:8:5, col:12>
|   |   `-RecoveryExpr 0x14a902b68 <col:12> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x149818318 <line:9:3, col:29> 'char **' '='
|   | |-DeclRefExpr 0x14a902bb8 <col:3> 'char **' lvalue Var 0x14a902780 'both' 'char **'
|   | `-ImplicitCastExpr 0x149818300 <col:10, col:29> 'char **' <BitCast>
|   |   `-CallExpr 0x1498182d8 <col:10, col:29> 'void *'
|   |     |-ImplicitCastExpr 0x1498182c0 <col:10> 'void *(*)(unsigned long)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x149818200 <col:10> 'void *(unsigned long)' Function 0x149818060 'malloc' 'void *(unsigned long)'
|   |     `-UnaryExprOrTypeTraitExpr 0x149818270 <col:17, col:25> 'unsigned long' sizeof
|   |       `-UnaryOperator 0x149818258 <col:24, col:25> 'char *' lvalue prefix '*' cannot overflow
|   |         `-ImplicitCastExpr 0x149818240 <col:25> 'char **' <LValueToRValue>
|   |           `-DeclRefExpr 0x149818220 <col:25> 'char **' lvalue Var 0x14a902780 'both' 'char **' non_odr_use_unevaluated
|   |-IfStmt 0x149818418 <line:10:3, line:11:12>
|   | |-BinaryOperator 0x1498183b0 <line:10:7, col:15> 'int' contains-errors '=='
|   | | |-DeclRefExpr 0x149818338 <col:7> 'char **' lvalue Var 0x14a902780 'both' 'char **'
|   | | `-RecoveryExpr 0x149818390 <col:15> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x149818408 <line:11:5, col:12>
|   |   `-RecoveryExpr 0x1498183e8 <col:12> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x149818578 <line:12:3, col:13> 'char *' contains-errors '='
|   | |-ArraySubscriptExpr 0x149818538 <col:3, col:9> 'char *' lvalue
|   | | |-ImplicitCastExpr 0x149818520 <col:3> 'char **' <LValueToRValue>
|   | | | `-DeclRefExpr 0x149818438 <col:3> 'char **' lvalue Var 0x14a902780 'both' 'char **'
|   | | `-IntegerLiteral 0x149818458 <col:8> 'int' 0
|   | `-RecoveryExpr 0x149818558 <col:13> '<dependent type>' contains-errors lvalue
|   |-ForStmt 0x14981ac70 <line:13:3, line:29:5>
|   | |-BinaryOperator 0x1498185d8 <line:13:8, col:15> 'int' '='
|   | | |-DeclRefExpr 0x149818598 <col:8> 'int' lvalue Var 0x14a9028b0 'lnum' 'int'
|   | | `-IntegerLiteral 0x1498185b8 <col:15> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x149818780 <col:18, col:32> 'int' contains-errors '!='
|   | | |-ArraySubscriptExpr 0x149818740 <col:18, col:27> 'char *' lvalue
|   | | | |-ImplicitCastExpr 0x149818710 <col:18> 'char **' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1498185f8 <col:18> 'char **' lvalue ParmVar 0x14a902508 'left' 'char **'
|   | | | `-ImplicitCastExpr 0x149818728 <col:23> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x149818618 <col:23> 'int' lvalue Var 0x14a9028b0 'lnum' 'int'
|   | | `-RecoveryExpr 0x149818760 <col:32> '<dependent type>' contains-errors lvalue
|   | |-UnaryOperator 0x1498187c0 <col:38, col:40> 'int' prefix '++'
|   | | `-DeclRefExpr 0x1498187a0 <col:40> 'int' lvalue Var 0x14a9028b0 'lnum' 'int'
|   | `-CompoundStmt 0x14981ac58 <line:14:5, line:29:5>
|   |   `-ForStmt 0x14981ac20 <line:15:7, line:28:9>
|   |     |-BinaryOperator 0x149818818 <line:15:12, col:19> 'int' '='
|   |     | |-DeclRefExpr 0x1498187d8 <col:12> 'int' lvalue Var 0x14a902930 'rnum' 'int'
|   |     | `-IntegerLiteral 0x1498187f8 <col:19> 'int' 0
|   |     |-<<<NULL>>>
|   |     |-BinaryOperator 0x1498189c0 <col:22, col:37> 'int' contains-errors '!='
|   |     | |-ArraySubscriptExpr 0x149818980 <col:22, col:32> 'char *' lvalue
|   |     | | |-ImplicitCastExpr 0x149818950 <col:22> 'char **' <LValueToRValue>
|   |     | | | `-DeclRefExpr 0x149818838 <col:22> 'char **' lvalue ParmVar 0x14a902588 'right' 'char **'
|   |     | | `-ImplicitCastExpr 0x149818968 <col:28> 'int' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x149818858 <col:28> 'int' lvalue Var 0x14a902930 'rnum' 'int'
|   |     | `-RecoveryExpr 0x1498189a0 <col:37> '<dependent type>' contains-errors lvalue
|   |     |-UnaryOperator 0x149818a00 <col:43, col:45> 'int' prefix '++'
|   |     | `-DeclRefExpr 0x1498189e0 <col:45> 'int' lvalue Var 0x14a902930 'rnum' 'int'
|   |     `-CompoundStmt 0x14981abe8 <line:16:9, line:28:9>
|   |       |-BinaryOperator 0x14981a350 <line:17:11, col:49> 'char **' '='
|   |       | |-DeclRefExpr 0x149818a18 <col:11> 'char **' lvalue Var 0x14a902818 'temp' 'char **'
|   |       | `-ImplicitCastExpr 0x14981a338 <col:18, col:49> 'char **' <IntegralToPointer>
|   |       |   `-CallExpr 0x14981a2d8 <col:18, col:49> 'int'
|   |       |     |-ImplicitCastExpr 0x14981a2c0 <col:18> 'int (*)()' <FunctionToPointerDecay>
|   |       |     | `-DeclRefExpr 0x149818b50 <col:18> 'int ()' Function 0x149818a98 'comsubs' 'int ()'
|   |       |     |-ImplicitCastExpr 0x14981a308 <col:26, col:35> 'char *' <LValueToRValue>
|   |       |     | `-ArraySubscriptExpr 0x149818be0 <col:26, col:35> 'char *' lvalue
|   |       |     |   |-ImplicitCastExpr 0x149818bb0 <col:26> 'char **' <LValueToRValue>
|   |       |     |   | `-DeclRefExpr 0x149818b70 <col:26> 'char **' lvalue ParmVar 0x14a902508 'left' 'char **'
|   |       |     |   `-ImplicitCastExpr 0x149818bc8 <col:31> 'int' <LValueToRValue>
|   |       |     |     `-DeclRefExpr 0x149818b90 <col:31> 'int' lvalue Var 0x14a9028b0 'lnum' 'int'
|   |       |     `-ImplicitCastExpr 0x14981a320 <col:38, col:48> 'char *' <LValueToRValue>
|   |       |       `-ArraySubscriptExpr 0x14981a270 <col:38, col:48> 'char *' lvalue
|   |       |         |-ImplicitCastExpr 0x14981a240 <col:38> 'char **' <LValueToRValue>
|   |       |         | `-DeclRefExpr 0x14981a200 <col:38> 'char **' lvalue ParmVar 0x14a902588 'right' 'char **'
|   |       |         `-ImplicitCastExpr 0x14981a258 <col:44> 'int' <LValueToRValue>
|   |       |           `-DeclRefExpr 0x14981a220 <col:44> 'int' lvalue Var 0x14a902930 'rnum' 'int'
|   |       |-IfStmt 0x14981a5e8 <line:18:11, line:22:13>
|   |       | |-BinaryOperator 0x14981a3e8 <line:18:15, col:23> 'int' contains-errors '=='
|   |       | | |-DeclRefExpr 0x14981a370 <col:15> 'char **' lvalue Var 0x14a902818 'temp' 'char **'
|   |       | | `-RecoveryExpr 0x14981a3c8 <col:23> '<dependent type>' contains-errors lvalue
|   |       | `-CompoundStmt 0x14981a5c8 <line:19:13, line:22:13>
|   |       |   |-CallExpr 0x14981a540 <line:20:15, col:28> 'int'
|   |       |   | |-ImplicitCastExpr 0x14981a528 <col:15> 'int (*)()' <FunctionToPointerDecay>
|   |       |   | | `-DeclRefExpr 0x14981a4e8 <col:15> 'int ()' Function 0x14981a430 'freelist' 'int ()'
|   |       |   | `-ImplicitCastExpr 0x14981a568 <col:24> 'char **' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x14981a508 <col:24> 'char **' lvalue Var 0x14a902780 'both' 'char **'
|   |       |   `-ReturnStmt 0x14981a5b8 <line:21:15, col:22>
|   |       |     `-RecoveryExpr 0x14981a598 <col:22> '<dependent type>' contains-errors lvalue
|   |       |-BinaryOperator 0x14981a7f8 <line:23:11, col:37> 'char **' '='
|   |       | |-DeclRefExpr 0x14981a608 <col:11> 'char **' lvalue Var 0x14a902780 'both' 'char **'
|   |       | `-ImplicitCastExpr 0x14981a7e0 <col:18, col:37> 'char **' <IntegralToPointer>
|   |       |   `-CallExpr 0x14981a780 <col:18, col:37> 'int'
|   |       |     |-ImplicitCastExpr 0x14981a768 <col:18> 'int (*)()' <FunctionToPointerDecay>
|   |       |     | `-DeclRefExpr 0x14981a708 <col:18> 'int ()' Function 0x14981a650 'addlists' 'int ()'
|   |       |     |-ImplicitCastExpr 0x14981a7b0 <col:27> 'char **' <LValueToRValue>
|   |       |     | `-DeclRefExpr 0x14981a728 <col:27> 'char **' lvalue Var 0x14a902780 'both' 'char **'
|   |       |     `-ImplicitCastExpr 0x14981a7c8 <col:33> 'char **' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x14981a748 <col:33> 'char **' lvalue Var 0x14a902818 'temp' 'char **'
|   |       |-CallExpr 0x14981a870 <line:24:11, col:24> 'int'
|   |       | |-ImplicitCastExpr 0x14981a858 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x14981a818 <col:11> 'int ()' Function 0x14981a430 'freelist' 'int ()'
|   |       | `-ImplicitCastExpr 0x14981a898 <col:20> 'char **' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x14981a838 <col:20> 'char **' lvalue Var 0x14a902818 'temp' 'char **'
|   |       `-CallExpr 0x14981aaf8 <line:25:11, col:20> 'void'
|   |         |-ImplicitCastExpr 0x14981aae0 <col:11> 'void (*)(void *)' <FunctionToPointerDecay>
|   |         | `-DeclRefExpr 0x14981aa58 <col:11> 'void (void *)' Function 0x14981a8e8 'free' 'void (void *)'
|   |         `-ImplicitCastExpr 0x14981ab38 <col:16> 'void *' <BitCast>
|   |           `-ImplicitCastExpr 0x14981ab20 <col:16> 'char **' <LValueToRValue>
|   |             `-DeclRefExpr 0x14981aa78 <col:16> 'char **' lvalue Var 0x14a902818 'temp' 'char **'
|   `-ReturnStmt 0x14981acf8 <line:30:3, col:10>
|     `-ImplicitCastExpr 0x14981ace0 <col:10> 'int' <PointerToIntegral>
|       `-ImplicitCastExpr 0x14981acc8 <col:10> 'char **' <LValueToRValue>
|         `-DeclRefExpr 0x14981aca8 <col:10> 'char **' lvalue Var 0x14a902780 'both' 'char **'
|-FunctionDecl 0x149818060 <line:9:10> col:10 implicit used malloc 'void *(unsigned long)' extern
| |-ParmVarDecl 0x149818160 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-BuiltinAttr 0x149818108 <<invalid sloc>> Implicit 871
| `-AllocSizeAttr 0x1498181d0 <col:10> Implicit 1
`-FunctionDecl 0x14981a8e8 <line:25:11> col:11 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x14981a9e8 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x14981a990 <<invalid sloc>> Implicit 873
