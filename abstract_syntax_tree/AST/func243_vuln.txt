TranslationUnitDecl 0x146055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1460564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x146055bd0 '__int128'
|-TypedefDecl 0x146056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x146055bf0 'unsigned __int128'
|-TypedefDecl 0x146126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x146126000 'struct __NSConstantString_tag'
|   `-Record 0x146056580 '__NSConstantString_tag'
|-TypedefDecl 0x146126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x146055d90 '__SVInt8_t'
|-TypedefDecl 0x146126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x146055db0 '__SVInt16_t'
|-TypedefDecl 0x146126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x146055dd0 '__SVInt32_t'
|-TypedefDecl 0x1461263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x146055df0 '__SVInt64_t'
|-TypedefDecl 0x146126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x146055e10 '__SVUint8_t'
|-TypedefDecl 0x1461264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x146055e30 '__SVUint16_t'
|-TypedefDecl 0x146126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x146055e50 '__SVUint32_t'
|-TypedefDecl 0x146126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x146055e70 '__SVUint64_t'
|-TypedefDecl 0x1461265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x146055e90 '__SVFloat16_t'
|-TypedefDecl 0x146126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x146055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1461266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x146055ed0 '__SVFloat64_t'
|-TypedefDecl 0x146126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x146055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x146126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x146055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1461267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x146055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x146126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x146055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1461268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x146055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x146126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x146055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x146126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x146055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1461269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x146055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x146126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x146055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x146126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x146056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x146126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x146056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x146126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x146056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x146126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x146056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x146126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x146056090 '__clang_svint8x3_t'
|-TypedefDecl 0x146126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1460560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x146126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1460560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x146126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1460560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x146126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x146056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x146126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x146056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x146126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x146056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x146126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x146056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x146126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x146056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x146127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1460561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x146127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1460561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1461278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1460561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x146127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x146056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1461279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x146056230 '__clang_svint16x4_t'
|-TypedefDecl 0x146127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x146056250 '__clang_svint32x4_t'
|-TypedefDecl 0x146127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x146056270 '__clang_svint64x4_t'
|-TypedefDecl 0x146127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x146056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x146127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1460562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x146127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1460562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x146127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1460562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x146127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x146056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x146127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x146056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x146127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x146056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x146127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x146056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x146127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x146056390 '__SVBool_t'
|-TypedefDecl 0x146127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1460563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x146127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1460563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x146127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1460563f0 '__SVCount_t'
|-TypedefDecl 0x146127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x146127fb0 'char *'
|   `-BuiltinType 0x1460556b0 'char'
|-TypedefDecl 0x146128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x146127fb0 'char *'
|   `-BuiltinType 0x1460556b0 'char'
|-FunctionDecl 0x1461283d8 <dataset_diviso_filec/func243_vuln.c:1:1, line:52:1> line:1:12 invalid oidc_cache_get 'int (int *, const char *, const char *, char **)'
| |-ParmVarDecl 0x146128128 <col:27, col:40> col:40 invalid r 'int *'
| |-ParmVarDecl 0x1461281a8 <col:43, col:55> col:55 used section 'const char *'
| |-ParmVarDecl 0x146128228 <col:64, col:76> col:76 used key 'const char *'
| |-ParmVarDecl 0x1461282d8 <line:2:3, col:10> col:10 used value 'char **'
| `-CompoundStmt 0x146145c00 <col:17, line:52:1>
|   |-DeclStmt 0x146141920 <line:6:2, col:43>
|   | `-VarDecl 0x146128758 <col:2, col:42> col:6 used encrypted 'int' cinit
|   |   `-CallExpr 0x1461418f8 <col:18, col:42> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x1461418b8 <col:18> 'int ()' Function 0x146141800 'oidc_cfg_cache_encrypt' 'int ()'
|   |     `-RecoveryExpr 0x1461418d8 <col:41> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x1461419f0 <line:8:2, col:18>
|   | `-VarDecl 0x146141950 <col:2, col:14> col:8 used msg 'char *' cinit
|   |   `-RecoveryExpr 0x1461419d0 <col:14> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x146141d98 <line:10:2, line:11:31> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x146141ae8 <line:10:2> 'int ()' Function 0x146141a30 'oidc_debug' 'int ()'
|   | |-RecoveryExpr 0x146141b08 <col:13> '<dependent type>' contains-errors lvalue
|   | |-StringLiteral 0x146141b70 <col:16> 'char[4]' lvalue "STR"
|   | |-DeclRefExpr 0x146141b90 <col:23> 'const char *' lvalue ParmVar 0x146128228 'key' 'const char *'
|   | |-DeclRefExpr 0x146141bb0 <col:28> 'const char *' lvalue ParmVar 0x1461281a8 'section' 'const char *'
|   | |-DeclRefExpr 0x146141bd0 <line:11:4> 'int' contains-errors lvalue Var 0x146128758 'encrypted' 'int'
|   | `-CXXDependentScopeMemberExpr 0x146141d50 <col:15, col:27> '<dependent type>' contains-errors lvalue ->name
|   |   `-CXXDependentScopeMemberExpr 0x146141d08 <col:15, col:20> '<dependent type>' contains-errors lvalue ->cache
|   |     `-RecoveryExpr 0x146141ce8 <col:15> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x146142138 <line:14:2, line:15:65>
|   | |-BinaryOperator 0x146141e40 <line:14:6, col:19> 'int' contains-errors '=='
|   | | |-ImplicitCastExpr 0x146141e28 <col:6> 'int' contains-errors <LValueToRValue>
|   | | | `-DeclRefExpr 0x146141de8 <col:6> 'int' contains-errors lvalue Var 0x146128758 'encrypted' 'int'
|   | | `-IntegerLiteral 0x146141e08 <col:19> 'int' 1
|   | `-BinaryOperator 0x146142118 <line:15:3, col:65> 'const char *' contains-errors '='
|   |   |-DeclRefExpr 0x146141e60 <col:3> 'const char *' lvalue ParmVar 0x146128228 'key' 'const char *'
|   |   `-CallExpr 0x1461420e0 <col:9, col:65> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x146141f60 <col:9> 'int ()' Function 0x146141ea8 'oidc_cache_get_hashed_key' 'int ()'
|   |     |-RecoveryExpr 0x146141f80 <col:35> '<dependent type>' contains-errors lvalue
|   |     |-CXXDependentScopeMemberExpr 0x146142098 <col:38, col:43> '<dependent type>' contains-errors lvalue ->crypto_passphrase
|   |     | `-RecoveryExpr 0x146142078 <col:38> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x146142000 <col:62> 'const char *' lvalue ParmVar 0x146128228 'key' 'const char *'
|   |-DeclStmt 0x146142210 <line:18:2, col:32>
|   | `-VarDecl 0x146142170 <col:2, col:28> col:14 used cache_value 'const char *' cinit
|   |   `-RecoveryExpr 0x1461421f0 <col:28> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x1461425d8 <line:19:2, line:22:2>
|   | |-BinaryOperator 0x146142520 <line:19:6, col:56> 'int' contains-errors '=='
|   | | |-CallExpr 0x1461424c0 <col:6, col:51> '<dependent type>' contains-errors
|   | | | |-CXXDependentScopeMemberExpr 0x146142478 <col:6, col:18> '<dependent type>' contains-errors lvalue ->get
|   | | | | `-CXXDependentScopeMemberExpr 0x146142430 <col:6, col:11> '<dependent type>' contains-errors lvalue ->cache
|   | | | |   `-RecoveryExpr 0x146142410 <col:6> '<dependent type>' contains-errors lvalue
|   | | | |-RecoveryExpr 0x1461422d0 <col:22> '<dependent type>' contains-errors lvalue
|   | | | |-DeclRefExpr 0x1461422f0 <col:25> 'const char *' lvalue ParmVar 0x1461281a8 'section' 'const char *'
|   | | | |-DeclRefExpr 0x146142310 <col:34> 'const char *' lvalue ParmVar 0x146128228 'key' 'const char *'
|   | | | `-UnaryOperator 0x146142380 <col:39, col:40> 'const char **' contains-errors prefix '&' cannot overflow
|   | | |   `-DeclRefExpr 0x146142330 <col:40> 'const char *' contains-errors lvalue Var 0x146142170 'cache_value' 'const char *'
|   | | `-RecoveryExpr 0x146142500 <col:56> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x1461425c0 <col:63, line:22:2>
|   |   `-GotoStmt 0x1461425a8 <line:21:3, col:8> 'out' 0x146142558
|   |-IfStmt 0x1461426a8 <line:25:2, line:26:8>
|   | |-BinaryOperator 0x146142670 <line:25:6, col:21> 'int' contains-errors '=='
|   | | |-DeclRefExpr 0x1461425f8 <col:6> 'const char *' contains-errors lvalue Var 0x146142170 'cache_value' 'const char *'
|   | | `-RecoveryExpr 0x146142650 <col:21> '<dependent type>' contains-errors lvalue
|   | `-GotoStmt 0x146142690 <line:26:3, col:8> 'out' 0x146142558
|   |-IfStmt 0x146143de8 <line:29:2, line:32:2>
|   | |-BinaryOperator 0x146142720 <line:29:6, col:19> 'int' contains-errors '=='
|   | | |-ImplicitCastExpr 0x146142708 <col:6> 'int' contains-errors <LValueToRValue>
|   | | | `-DeclRefExpr 0x1461426c8 <col:6> 'int' contains-errors lvalue Var 0x146128758 'encrypted' 'int'
|   | | `-IntegerLiteral 0x1461426e8 <col:19> 'int' 0
|   | `-CompoundStmt 0x146143dc8 <col:22, line:32:2>
|   |   |-BinaryOperator 0x146143d90 <line:30:3, col:44> 'char *' contains-errors '='
|   |   | |-UnaryOperator 0x146142778 <col:3, col:4> 'char *' lvalue prefix '*' cannot overflow
|   |   | | `-ImplicitCastExpr 0x146142760 <col:4> 'char **' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x146142740 <col:4> 'char **' lvalue ParmVar 0x1461282d8 'value' 'char **'
|   |   | `-CallExpr 0x146143d60 <col:12, col:44> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x146143cb8 <col:12> 'int ()' Function 0x146143c00 'apr_pstrdup' 'int ()'
|   |   |   |-CXXDependentScopeMemberExpr 0x146143cf8 <col:24, col:27> '<dependent type>' contains-errors lvalue ->pool
|   |   |   | `-RecoveryExpr 0x146143cd8 <col:24> '<dependent type>' contains-errors lvalue
|   |   |   `-DeclRefExpr 0x146143d40 <col:33> 'const char *' contains-errors lvalue Var 0x146142170 'cache_value' 'const char *'
|   |   `-GotoStmt 0x146143db0 <line:31:3, col:8> 'out' 0x146142558
|   |-LabelStmt 0x1461443d0 <line:38:1, col:4> 'out'
|   | `-NullStmt 0x1461443c8 <col:4>
|   `-IfStmt 0x146144b88 <line:42:2, line:49:26> has_else
|     |-RecoveryExpr 0x1461443f0 <line:42:6, col:12> '_Bool' contains-errors
|     |-IfStmt 0x1461449c0 <line:43:3, line:47:28> has_else
|     | |-RecoveryExpr 0x146144460 <line:43:7, col:17> '_Bool' contains-errors
|     | |-CallExpr 0x1461448c8 <line:44:4, line:45:44> '<dependent type>' contains-errors
|     | | |-DeclRefExpr 0x146144480 <line:44:4> 'int ()' Function 0x146141a30 'oidc_debug' 'int ()'
|     | | |-RecoveryExpr 0x1461444a0 <col:15> '<dependent type>' contains-errors lvalue
|     | | |-StringLiteral 0x1461444c0 <col:18> 'char[4]' lvalue "STR"
|     | | |-ConditionalOperator 0x146144878 <line:45:6, col:38> 'int'
|     | | | |-ImplicitCastExpr 0x146144860 <col:6, col:7> 'char *' <LValueToRValue>
|     | | | | `-UnaryOperator 0x146144518 <col:6, col:7> 'char *' lvalue prefix '*' cannot overflow
|     | | | |   `-ImplicitCastExpr 0x146144500 <col:7> 'char **' <LValueToRValue>
|     | | | |     `-DeclRefExpr 0x1461444e0 <col:7> 'char **' lvalue ParmVar 0x1461282d8 'value' 'char **'
|     | | | |-CStyleCastExpr 0x146144818 <col:15, col:34> 'int' <IntegralCast>
|     | | | | `-CallExpr 0x1461447a8 <col:21, col:34> 'unsigned long'
|     | | | |   |-ImplicitCastExpr 0x146144790 <col:21> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|     | | | |   | `-DeclRefExpr 0x1461446d8 <col:21> 'unsigned long (const char *)' Function 0x146144568 'strlen' 'unsigned long (const char *)'
|     | | | |   `-ImplicitCastExpr 0x1461447e8 <col:28, col:29> 'const char *' <NoOp>
|     | | | |     `-ImplicitCastExpr 0x1461447d0 <col:28, col:29> 'char *' <LValueToRValue>
|     | | | |       `-UnaryOperator 0x146144730 <col:28, col:29> 'char *' lvalue prefix '*' cannot overflow
|     | | | |         `-ImplicitCastExpr 0x146144718 <col:29> 'char **' <LValueToRValue>
|     | | | |           `-DeclRefExpr 0x1461446f8 <col:29> 'char **' lvalue ParmVar 0x1461282d8 'value' 'char **'
|     | | | `-IntegerLiteral 0x146144840 <col:38> 'int' 0
|     | | `-DeclRefExpr 0x1461448a8 <col:41> 'char *' contains-errors lvalue Var 0x146141950 'msg' 'char *'
|     | `-CallExpr 0x146144988 <line:47:4, col:28> '<dependent type>' contains-errors
|     |   |-DeclRefExpr 0x146144908 <col:4> 'int ()' Function 0x146141a30 'oidc_debug' 'int ()'
|     |   |-RecoveryExpr 0x146144928 <col:15> '<dependent type>' contains-errors lvalue
|     |   |-StringLiteral 0x146144948 <col:18> 'char[4]' lvalue "STR"
|     |   `-DeclRefExpr 0x146144968 <col:25> 'char *' contains-errors lvalue Var 0x146141950 'msg' 'char *'
|     `-CallExpr 0x146144b50 <line:49:3, col:26> '<dependent type>' contains-errors
|       |-DeclRefExpr 0x146144ad0 <col:3> 'int ()' Function 0x146144a18 'oidc_warn' 'int ()'
|       |-RecoveryExpr 0x146144af0 <col:13> '<dependent type>' contains-errors lvalue
|       |-StringLiteral 0x146144b10 <col:16> 'char[4]' lvalue "STR"
|       `-DeclRefExpr 0x146144b30 <col:23> 'char *' contains-errors lvalue Var 0x146141950 'msg' 'char *'
`-FunctionDecl 0x146144568 <line:45:21> col:21 implicit used strlen 'unsigned long (const char *)' extern
  |-ParmVarDecl 0x146144668 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x146144610 <<invalid sloc>> Implicit 902
