TranslationUnitDecl 0x120055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1200564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x120055bd0 '__int128'
|-TypedefDecl 0x120056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x120055bf0 'unsigned __int128'
|-TypedefDecl 0x120126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x120126000 'struct __NSConstantString_tag'
|   `-Record 0x120056580 '__NSConstantString_tag'
|-TypedefDecl 0x120126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x120055d90 '__SVInt8_t'
|-TypedefDecl 0x120126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x120055db0 '__SVInt16_t'
|-TypedefDecl 0x120126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x120055dd0 '__SVInt32_t'
|-TypedefDecl 0x1201263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x120055df0 '__SVInt64_t'
|-TypedefDecl 0x120126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x120055e10 '__SVUint8_t'
|-TypedefDecl 0x1201264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x120055e30 '__SVUint16_t'
|-TypedefDecl 0x120126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x120055e50 '__SVUint32_t'
|-TypedefDecl 0x120126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x120055e70 '__SVUint64_t'
|-TypedefDecl 0x1201265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x120055e90 '__SVFloat16_t'
|-TypedefDecl 0x120126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x120055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1201266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x120055ed0 '__SVFloat64_t'
|-TypedefDecl 0x120126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x120055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x120126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x120055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1201267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x120055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x120126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x120055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1201268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x120055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x120126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x120055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x120126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x120055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1201269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x120055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x120126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x120055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x120126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x120056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x120126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x120056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x120126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x120056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x120126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x120056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x120126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x120056090 '__clang_svint8x3_t'
|-TypedefDecl 0x120126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1200560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x120126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1200560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x120126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1200560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x120126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x120056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x120126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x120056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x120126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x120056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x120126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x120056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x120126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x120056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x120127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1200561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x120127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1200561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1201278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1200561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x120127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x120056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1201279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x120056230 '__clang_svint16x4_t'
|-TypedefDecl 0x120127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x120056250 '__clang_svint32x4_t'
|-TypedefDecl 0x120127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x120056270 '__clang_svint64x4_t'
|-TypedefDecl 0x120127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x120056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x120127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1200562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x120127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1200562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x120127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1200562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x120127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x120056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x120127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x120056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x120127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x120056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x120127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x120056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x120127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x120056390 '__SVBool_t'
|-TypedefDecl 0x120127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1200563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x120127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1200563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x120127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1200563f0 '__SVCount_t'
|-TypedefDecl 0x120127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x120127fb0 'char *'
|   `-BuiltinType 0x1200556b0 'char'
|-TypedefDecl 0x120128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x120127fb0 'char *'
|   `-BuiltinType 0x1200556b0 'char'
`-FunctionDecl 0x1201419d8 <dataset_diviso_filec/func8651_vuln.c:1:1, line:35:1> line:1:1 invalid _warc_read 'int (struct archive_read *, const void **, int *, int *)'
  |-ParmVarDecl 0x120128648 <col:12, col:33> col:33 used a 'struct archive_read *'
  |-ParmVarDecl 0x120128728 <col:36, col:49> col:49 used buf 'const void **'
  |-ParmVarDecl 0x120141800 <col:54, col:62> col:62 invalid bsz 'int *'
  |-ParmVarDecl 0x120141880 <col:67, col:76> col:76 invalid off 'int *'
  `-CompoundStmt 0x120142ce0 <line:2:1, line:35:1>
    |-DeclStmt 0x120141d30 <line:3:2, col:36>
    | |-RecordDecl 0x120141aa0 <col:2, col:9> col:9 struct warc_s
    | `-VarDecl 0x120141c08 <col:2, col:32> col:17 used w 'struct warc_s *' cinit
    |   `-CXXDependentScopeMemberExpr 0x120141cd0 <col:21, col:32> '<dependent type>' contains-errors lvalue ->data
    |     `-RecoveryExpr 0x120141ca8 <col:21, col:24> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x120141c70 <col:21> 'struct archive_read *' lvalue ParmVar 0x120128648 'a' 'struct archive_read *'
    |-DeclStmt 0x120141dc8 <line:4:2, col:17>
    | `-VarDecl 0x120141d60 <col:2, col:14> col:14 used rab 'const char *'
    |-IfStmt 0x1201422e0 <line:7:2, line:15:2>
    | |-BinaryOperator 0x120141ea0 <line:7:6, col:22> 'int' contains-errors '>='
    | | |-RecoveryExpr 0x120141e18 <col:6, col:9> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x120141de0 <col:6> 'struct warc_s *' contains-errors lvalue Var 0x120141c08 'w' 'struct warc_s *'
    | | `-RecoveryExpr 0x120141e78 <col:19, col:22> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x120141e40 <col:19> 'struct warc_s *' contains-errors lvalue Var 0x120141c08 'w' 'struct warc_s *'
    | `-CompoundStmt 0x1201422b0 <col:30, line:15:2>
    |   |-LabelStmt 0x120142038 <line:8:2, line:10:10> 'eof'
    |   | `-BinaryOperator 0x120141fc8 <col:3, col:10> 'const void *' contains-errors '='
    |   |   |-UnaryOperator 0x120141f90 <col:3, col:4> 'const void *' lvalue prefix '*' cannot overflow
    |   |   | `-ImplicitCastExpr 0x120141f78 <col:4> 'const void **' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x120141ec0 <col:4> 'const void **' lvalue ParmVar 0x120128728 'buf' 'const void **'
    |   |   `-RecoveryExpr 0x120141fa8 <col:10> '<dependent type>' contains-errors lvalue
    |   |-BinaryOperator 0x1201420c8 <line:11:3, col:10> '<dependent type>' contains-errors '='
    |   | |-UnaryOperator 0x120142090 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   | | `-ImplicitCastExpr 0x120142078 <col:4> '<dependent type>' contains-errors <LValueToRValue>
    |   | |   `-RecoveryExpr 0x120142058 <col:4> '<dependent type>' contains-errors lvalue
    |   | `-IntegerLiteral 0x1201420a8 <col:10> 'unsigned int' 0
    |   |-BinaryOperator 0x1201421d8 <line:12:3, col:22> '<dependent type>' contains-errors '='
    |   | |-UnaryOperator 0x120142120 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   | | `-ImplicitCastExpr 0x120142108 <col:4> '<dependent type>' contains-errors <LValueToRValue>
    |   | |   `-RecoveryExpr 0x1201420e8 <col:4> '<dependent type>' contains-errors lvalue
    |   | `-BinaryOperator 0x1201421b8 <col:10, col:22> '<dependent type>' contains-errors '+'
    |   |   |-RecoveryExpr 0x120142170 <col:10, col:13> '<dependent type>' contains-errors lvalue
    |   |   | `-DeclRefExpr 0x120142138 <col:10> 'struct warc_s *' contains-errors lvalue Var 0x120141c08 'w' 'struct warc_s *'
    |   |   `-IntegerLiteral 0x120142198 <col:22> 'unsigned int' 4
    |   `-BinaryOperator 0x120142278 <line:13:3, col:19> '<dependent type>' contains-errors '='
    |     |-RecoveryExpr 0x120142230 <col:3, col:6> '<dependent type>' contains-errors lvalue
    |     | `-DeclRefExpr 0x1201421f8 <col:3> 'struct warc_s *' contains-errors lvalue Var 0x120141c08 'w' 'struct warc_s *'
    |     `-IntegerLiteral 0x120142258 <col:19> 'unsigned int' 0
    |-BinaryOperator 0x1201425d8 <line:17:2, col:40> 'const char *' contains-errors '='
    | |-DeclRefExpr 0x120142300 <col:2> 'const char *' lvalue Var 0x120141d60 'rab' 'const char *'
    | `-CallExpr 0x1201425a0 <col:8, col:40> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x120142480 <col:8> 'int ()' Function 0x1201423c8 '__archive_read_ahead' 'int ()'
    |   |-DeclRefExpr 0x1201424a0 <col:29> 'struct archive_read *' lvalue ParmVar 0x120128648 'a' 'struct archive_read *'
    |   |-IntegerLiteral 0x1201424c0 <col:32> 'unsigned int' 1
    |   `-UnaryOperator 0x120142588 <col:36, col:37> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x120142568 <col:37> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x120142a10 <line:18:2, line:27:2> has_else
    | |-BinaryOperator 0x120142670 <line:18:6, col:12> 'int' contains-errors '<'
    | | |-RecoveryExpr 0x120142650 <col:6> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x120142610 <col:12> 'int' 0
    | |-CompoundStmt 0x120142750 <col:15, line:22:2>
    | | `-BinaryOperator 0x120142700 <line:19:3, col:10> '<dependent type>' contains-errors '='
    | |   |-UnaryOperator 0x1201426c8 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow
    | |   | `-ImplicitCastExpr 0x1201426b0 <col:4> '<dependent type>' contains-errors <LValueToRValue>
    | |   |   `-RecoveryExpr 0x120142690 <col:4> '<dependent type>' contains-errors lvalue
    | |   `-IntegerLiteral 0x1201426e0 <col:10> 'unsigned int' 0
    | `-IfStmt 0x1201429e0 <line:22:9, line:27:2> has_else
    |   |-BinaryOperator 0x1201427e0 <line:22:13, col:20> 'int' contains-errors '=='
    |   | |-RecoveryExpr 0x1201427c0 <col:13> '<dependent type>' contains-errors lvalue
    |   | `-IntegerLiteral 0x120142780 <col:20> 'int' 0
    |   |-CompoundStmt 0x120142818 <col:23, line:24:2>
    |   | `-GotoStmt 0x120142800 <line:23:3, col:8> 'eof' 0x120141fe8
    |   `-IfStmt 0x1201429c0 <line:24:9, line:27:2>
    |     |-RecoveryExpr 0x1201428a8 <line:24:13, col:20> '_Bool' contains-errors
    |     | `-ParenExpr 0x120142888 <col:13, col:20> '<overloaded function type>' lvalue
    |     |   `-UnresolvedLookupExpr 0x120142848 <col:14> '<overloaded function type>' lvalue (no ADL) = 'ssize_t' empty
    |     `-CompoundStmt 0x1201429b0 <col:50, line:27:2>
    |-BinaryOperator 0x120142af0 <line:28:2, col:12> '<dependent type>' contains-errors '='
    | |-UnaryOperator 0x120142a78 <col:2, col:3> '<dependent type>' contains-errors prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x120142a60 <col:3> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x120142a40 <col:3> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x120142ac8 <col:9, col:12> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x120142a90 <col:9> 'struct warc_s *' contains-errors lvalue Var 0x120141c08 'w' 'struct warc_s *'
    `-BinaryOperator 0x120142c00 <line:30:2, col:9> 'const void *' '='
      |-UnaryOperator 0x120142b98 <col:2, col:3> 'const void *' lvalue prefix '*' cannot overflow
      | `-ImplicitCastExpr 0x120142b80 <col:3> 'const void **' <LValueToRValue>
      |   `-DeclRefExpr 0x120142b60 <col:3> 'const void **' lvalue ParmVar 0x120128728 'buf' 'const void **'
      `-ImplicitCastExpr 0x120142be8 <col:9> 'const void *' <BitCast>
        `-ImplicitCastExpr 0x120142bd0 <col:9> 'const char *' <LValueToRValue>
          `-DeclRefExpr 0x120142bb0 <col:9> 'const char *' lvalue Var 0x120141d60 'rab' 'const char *'
