TranslationUnitDecl 0x148055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1480564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x148055bd0 '__int128'
|-TypedefDecl 0x148056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x148055bf0 'unsigned __int128'
|-TypedefDecl 0x148126a30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x148126800 'struct __NSConstantString_tag'
|   `-Record 0x148056580 '__NSConstantString_tag'
|-TypedefDecl 0x148126a98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x148055d90 '__SVInt8_t'
|-TypedefDecl 0x148126b00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x148055db0 '__SVInt16_t'
|-TypedefDecl 0x148126b68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x148055dd0 '__SVInt32_t'
|-TypedefDecl 0x148126bd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x148055df0 '__SVInt64_t'
|-TypedefDecl 0x148126c38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x148055e10 '__SVUint8_t'
|-TypedefDecl 0x148126ca0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x148055e30 '__SVUint16_t'
|-TypedefDecl 0x148126d08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x148055e50 '__SVUint32_t'
|-TypedefDecl 0x148126d70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x148055e70 '__SVUint64_t'
|-TypedefDecl 0x148126dd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x148055e90 '__SVFloat16_t'
|-TypedefDecl 0x148126e40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x148055eb0 '__SVFloat32_t'
|-TypedefDecl 0x148126ea8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x148055ed0 '__SVFloat64_t'
|-TypedefDecl 0x148126f10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x148055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x148126f78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x148055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x148126fe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x148055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x148127048 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x148055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1481270b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x148055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x148127118 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x148055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x148127180 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x148055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1481271e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x148055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x148127250 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x148055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1481272b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x148056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x148127320 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x148056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x148127388 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x148056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1481273f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x148056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x148127458 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x148056090 '__clang_svint8x3_t'
|-TypedefDecl 0x1481274c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1480560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x148127528 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1480560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x148127590 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1480560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x1481275f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x148056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x148127660 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x148056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x1481276c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x148056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x148127730 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x148056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x148127798 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x148056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x148128000 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1480561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x148128068 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1480561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1481280d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1480561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x148128138 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x148056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1481281a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x148056230 '__clang_svint16x4_t'
|-TypedefDecl 0x148128208 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x148056250 '__clang_svint32x4_t'
|-TypedefDecl 0x148128270 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x148056270 '__clang_svint64x4_t'
|-TypedefDecl 0x1481282d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x148056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x148128340 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1480562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1481283a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1480562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x148128410 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1480562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x148128478 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x148056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1481284e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x148056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x148128548 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x148056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1481285b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x148056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x148128618 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x148056390 '__SVBool_t'
|-TypedefDecl 0x148128680 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1480563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1481286e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1480563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x148128750 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1480563f0 '__SVCount_t'
|-TypedefDecl 0x1481287f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1481287b0 'char *'
|   `-BuiltinType 0x1480556b0 'char'
|-TypedefDecl 0x148128868 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1481287b0 'char *'
|   `-BuiltinType 0x1480556b0 'char'
|-FunctionDecl 0x148128b50 <dataset_diviso_filec/func23538_vuln.c:1:1, line:70:1> line:1:6 cgit_print_blob 'void (const char *, char *, const char *, int)'
| |-ParmVarDecl 0x1481288d8 <col:22, col:34> col:34 used hex 'const char *'
| |-ParmVarDecl 0x148128958 <col:39, col:45> col:45 used path 'char *'
| |-ParmVarDecl 0x1481289d8 <col:51, col:63> col:63 used head 'const char *'
| |-ParmVarDecl 0x148128a58 <col:69, col:73> col:73 used file_only 'int'
| `-CompoundStmt 0x140008dd0 <line:2:1, line:70:1>
|   |-DeclStmt 0x148128d70 <line:3:2, col:24>
|   | `-VarDecl 0x148128d08 <col:2, col:23> col:16 used sha1 'unsigned char[20]'
|   |-DeclStmt 0x148141548 <line:4:2, col:23>
|   | |-EnumDecl 0x148128d88 <col:2, col:7> col:7 object_type
|   | `-VarDecl 0x148128ea8 <col:2, col:19> col:19 referenced invalid type 'enum object_type'
|   |-DeclStmt 0x1481415e0 <line:5:2, col:11>
|   | `-VarDecl 0x148141578 <col:2, col:8> col:8 used buf 'char *'
|   |-DeclStmt 0x148141678 <line:6:2, col:20>
|   | `-VarDecl 0x148141610 <col:2, col:16> col:16 used size 'unsigned long'
|   |-DeclStmt 0x148141878 <line:7:2, col:23>
|   | |-RecordDecl 0x148141690 <col:2, col:9> col:9 struct commit
|   | `-VarDecl 0x1481417f8 <col:2, col:17> col:17 used commit 'struct commit *'
|   |-DeclStmt 0x148141e38 <line:8:2, line:11:3>
|   | |-RecordDecl 0x148141890 <line:8:2, col:9> col:9 struct pathspec_item
|   | `-VarDecl 0x148141988 <col:2, col:23> col:23 invalid path_items 'struct pathspec_item'
|   |-DeclStmt 0x1481420f0 <line:12:2, line:15:3>
|   | |-RecordDecl 0x148141e50 <line:12:2, col:9> col:9 struct pathspec
|   | `-VarDecl 0x148141f48 <col:2, col:18> col:18 invalid paths 'struct pathspec'
|   |-DeclStmt 0x148146680 <line:16:2, line:21:3>
|   | |-RecordDecl 0x148142108 <line:16:2, col:9> col:9 struct walk_tree_context
|   | `-VarDecl 0x148146420 <col:2, col:27> col:27 invalid walk_tree_ctx 'struct walk_tree_context'
|   |-IfStmt 0x148146f68 <line:23:2, line:35:2> has_else
|   | |-ImplicitCastExpr 0x1481466b8 <line:23:6> 'const char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x148146698 <col:6> 'const char *' lvalue ParmVar 0x1481288d8 'hex' 'const char *'
|   | |-CompoundStmt 0x148146bf0 <col:11, line:29:2>
|   | | `-IfStmt 0x148146bd0 <line:24:3, line:28:3>
|   | |   |-CallExpr 0x1481468a8 <line:24:7, col:29> 'int'
|   | |   | |-ImplicitCastExpr 0x148146890 <col:7> 'int (*)()' <FunctionToPointerDecay>
|   | |   | | `-DeclRefExpr 0x148146800 <col:7> 'int ()' Function 0x148146748 'get_sha1_hex' 'int ()'
|   | |   | |-ImplicitCastExpr 0x1481468d8 <col:20> 'const char *' <LValueToRValue>
|   | |   | | `-DeclRefExpr 0x148146820 <col:20> 'const char *' lvalue ParmVar 0x1481288d8 'hex' 'const char *'
|   | |   | `-ImplicitCastExpr 0x148146920 <col:25> 'unsigned char *' <ArrayToPointerDecay>
|   | |   |   `-DeclRefExpr 0x148146840 <col:25> 'unsigned char[20]' lvalue Var 0x148128d08 'sha1' 'unsigned char[20]'
|   | |   `-CompoundStmt 0x148146bb0 <col:32, line:28:3>
|   | |     |-CallExpr 0x148146b18 <line:25:4, line:26:16> 'int'
|   | |     | |-ImplicitCastExpr 0x148146b00 <line:25:4> 'int (*)()' <FunctionToPointerDecay>
|   | |     | | `-DeclRefExpr 0x148146a18 <col:4> 'int ()' Function 0x148146960 'cgit_print_error_page' 'int ()'
|   | |     | |-IntegerLiteral 0x148146a38 <col:26> 'int' 400
|   | |     | |-ImplicitCastExpr 0x148146b58 <col:31> 'char *' <ArrayToPointerDecay>
|   | |     | | `-StringLiteral 0x148146aa0 <col:31> 'char[4]' lvalue "STR"
|   | |     | |-ImplicitCastExpr 0x148146b70 <line:26:6> 'char *' <ArrayToPointerDecay>
|   | |     | | `-StringLiteral 0x148146ac0 <col:6> 'char[4]' lvalue "STR"
|   | |     | `-ImplicitCastExpr 0x148146b88 <col:13> 'const char *' <LValueToRValue>
|   | |     |   `-DeclRefExpr 0x148146ae0 <col:13> 'const char *' lvalue ParmVar 0x1481288d8 'hex' 'const char *'
|   | |     `-ReturnStmt 0x148146ba0 <line:27:4>
|   | `-CompoundStmt 0x148146f50 <line:29:9, line:35:2>
|   |   `-IfStmt 0x148146f30 <line:30:3, line:34:3>
|   |     |-CallExpr 0x148146d60 <line:30:7, col:26> 'int'
|   |     | |-ImplicitCastExpr 0x148146d48 <col:7> 'int (*)()' <FunctionToPointerDecay>
|   |     | | `-DeclRefExpr 0x148146ce8 <col:7> 'int ()' Function 0x148146c30 'get_sha1' 'int ()'
|   |     | |-ImplicitCastExpr 0x148146d90 <col:16> 'const char *' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x148146d08 <col:16> 'const char *' lvalue ParmVar 0x1481289d8 'head' 'const char *'
|   |     | `-ImplicitCastExpr 0x148146da8 <col:22> 'unsigned char *' <ArrayToPointerDecay>
|   |     |   `-DeclRefExpr 0x148146d28 <col:22> 'unsigned char[20]' lvalue Var 0x148128d08 'sha1' 'unsigned char[20]'
|   |     `-CompoundStmt 0x148146f10 <col:29, line:34:3>
|   |       |-CallExpr 0x148146e78 <line:31:4, line:32:17> 'int'
|   |       | |-ImplicitCastExpr 0x148146e60 <line:31:4> 'int (*)()' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x148146dc0 <col:4> 'int ()' Function 0x148146960 'cgit_print_error_page' 'int ()'
|   |       | |-IntegerLiteral 0x148146de0 <col:26> 'int' 404
|   |       | |-ImplicitCastExpr 0x148146eb8 <col:31> 'char *' <ArrayToPointerDecay>
|   |       | | `-StringLiteral 0x148146e00 <col:31> 'char[4]' lvalue "STR"
|   |       | |-ImplicitCastExpr 0x148146ed0 <line:32:6> 'char *' <ArrayToPointerDecay>
|   |       | | `-StringLiteral 0x148146e20 <col:6> 'char[4]' lvalue "STR"
|   |       | `-ImplicitCastExpr 0x148146ee8 <col:13> 'const char *' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x148146e40 <col:13> 'const char *' lvalue ParmVar 0x1481289d8 'head' 'const char *'
|   |       `-ReturnStmt 0x148146f00 <line:33:4>
|   |-BinaryOperator 0x1481471c8 <line:37:2, col:37> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x148146fb8 <col:2> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x148146f98 <col:2> 'enum object_type' lvalue Var 0x148128ea8 'type' 'enum object_type'
|   | `-CallExpr 0x148147180 <col:9, col:37> 'int'
|   |   |-ImplicitCastExpr 0x148147168 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1481470c0 <col:9> 'int ()' Function 0x148147008 'sha1_object_info' 'int ()'
|   |   |-ImplicitCastExpr 0x1481471b0 <col:26> 'unsigned char *' <ArrayToPointerDecay>
|   |   | `-DeclRefExpr 0x1481470e0 <col:26> 'unsigned char[20]' lvalue Var 0x148128d08 'sha1' 'unsigned char[20]'
|   |   `-UnaryOperator 0x148147150 <col:32, col:33> 'unsigned long *' prefix '&' cannot overflow
|   |     `-DeclRefExpr 0x148147100 <col:33> 'unsigned long' lvalue Var 0x148141610 'size' 'unsigned long'
|   |-IfStmt 0x1481492c8 <line:39:2, line:43:2>
|   | |-BinaryOperator 0x148148c20 <line:39:6, col:38> 'int' contains-errors '&&'
|   | | |-BinaryOperator 0x148148c00 <col:6, col:24> 'int' contains-errors '&&'
|   | | | |-ParenExpr 0x148147390 <col:6, col:11> 'int'
|   | | | | `-UnaryOperator 0x148147378 <col:7, col:8> 'int' prefix '!' cannot overflow
|   | | | |   `-ImplicitCastExpr 0x148147360 <col:8> 'const char *' <LValueToRValue>
|   | | | |     `-DeclRefExpr 0x1481471e8 <col:8> 'const char *' lvalue ParmVar 0x1481288d8 'hex' 'const char *'
|   | | | `-BinaryOperator 0x1481473d0 <col:16, col:24> 'int' contains-errors '=='
|   | | |   |-RecoveryExpr 0x148147258 <col:16> '<dependent type>' contains-errors lvalue
|   | | |   `-RecoveryExpr 0x1481473b0 <col:24> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x1481472d0 <col:38> 'char *' lvalue ParmVar 0x148128958 'path' 'char *'
|   | `-CompoundStmt 0x1481492a0 <col:44, line:43:2>
|   |   |-BinaryOperator 0x148148df0 <line:40:3, col:40> 'struct commit *' '='
|   |   | |-DeclRefExpr 0x148148c40 <col:3> 'struct commit *' lvalue Var 0x1481417f8 'commit' 'struct commit *'
|   |   | `-ImplicitCastExpr 0x148148dd8 <col:12, col:40> 'struct commit *' <IntegralToPointer>
|   |   |   `-CallExpr 0x148148d98 <col:12, col:40> 'int'
|   |   |     |-ImplicitCastExpr 0x148148d80 <col:12> 'int (*)()' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x148148d40 <col:12> 'int ()' Function 0x148148c88 'lookup_commit_reference' 'int ()'
|   |   |     `-ImplicitCastExpr 0x148148dc0 <col:36> 'unsigned char *' <ArrayToPointerDecay>
|   |   |       `-DeclRefExpr 0x148148d60 <col:36> 'unsigned char[20]' lvalue Var 0x148128d08 'sha1' 'unsigned char[20]'
|   |   |-CallExpr 0x148149108 <line:41:3, col:80> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x148148ef0 <col:3> 'int ()' Function 0x148148e38 'read_tree_recursive' 'int ()'
|   |   | |-RecoveryExpr 0x148148f48 <col:23, col:31> '<dependent type>' contains-errors lvalue
|   |   | | `-DeclRefExpr 0x148148f10 <col:23> 'struct commit *' lvalue Var 0x1481417f8 'commit' 'struct commit *'
|   |   | |-StringLiteral 0x148148fb0 <col:37> 'char[1]' lvalue ""
|   |   | |-IntegerLiteral 0x148148fc8 <col:41> 'int' 0
|   |   | |-IntegerLiteral 0x148148fe8 <col:44> 'int' 0
|   |   | |-UnaryOperator 0x148149028 <col:47, col:48> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   | | `-RecoveryExpr 0x148149008 <col:48> '<dependent type>' contains-errors lvalue
|   |   | |-RecoveryExpr 0x1481490e8 <col:55> '<dependent type>' contains-errors lvalue
|   |   | `-UnaryOperator 0x148149078 <col:66, col:67> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   |   `-RecoveryExpr 0x148149058 <col:67> '<dependent type>' contains-errors lvalue
|   |   `-BinaryOperator 0x148149280 <line:42:3, col:37> '<dependent type>' contains-errors '='
|   |     |-RecoveryExpr 0x148149180 <col:3> '<dependent type>' contains-errors lvalue
|   |     | `-DeclRefExpr 0x148149160 <col:3> 'enum object_type' lvalue Var 0x148128ea8 'type' 'enum object_type'
|   |     `-CallExpr 0x148149238 <col:10, col:37> 'int'
|   |       |-ImplicitCastExpr 0x148149220 <col:10> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x1481491a8 <col:10> 'int ()' Function 0x148147008 'sha1_object_info' 'int ()'
|   |       |-ImplicitCastExpr 0x148149268 <col:27> 'unsigned char *' <ArrayToPointerDecay>
|   |       | `-DeclRefExpr 0x1481491c8 <col:27> 'unsigned char[20]' lvalue Var 0x148128d08 'sha1' 'unsigned char[20]'
|   |       `-UnaryOperator 0x148149208 <col:32, col:33> 'unsigned long *' prefix '&' cannot overflow
|   |         `-DeclRefExpr 0x1481491e8 <col:33> 'unsigned long' lvalue Var 0x148141610 'size' 'unsigned long'
|   |-IfStmt 0x1481494f0 <line:45:2, line:49:2>
|   | |-BinaryOperator 0x148149360 <line:45:6, col:14> 'int' contains-errors '=='
|   | | |-RecoveryExpr 0x1481492e8 <col:6> '<dependent type>' contains-errors lvalue
|   | | `-RecoveryExpr 0x148149340 <col:14> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x1481494d0 <col:23, line:49:2>
|   |   |-CallExpr 0x148149438 <line:46:3, line:47:15> 'int'
|   |   | |-ImplicitCastExpr 0x148149420 <line:46:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x148149380 <col:3> 'int ()' Function 0x148146960 'cgit_print_error_page' 'int ()'
|   |   | |-IntegerLiteral 0x1481493a0 <col:25> 'int' 404
|   |   | |-ImplicitCastExpr 0x148149478 <col:30> 'char *' <ArrayToPointerDecay>
|   |   | | `-StringLiteral 0x1481493c0 <col:30> 'char[4]' lvalue "STR"
|   |   | |-ImplicitCastExpr 0x148149490 <line:47:5> 'char *' <ArrayToPointerDecay>
|   |   | | `-StringLiteral 0x1481493e0 <col:5> 'char[4]' lvalue "STR"
|   |   | `-ImplicitCastExpr 0x1481494a8 <col:12> 'const char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x148149400 <col:12> 'const char *' lvalue ParmVar 0x1481288d8 'hex' 'const char *'
|   |   `-ReturnStmt 0x1481494c0 <line:48:3>
|   |-BinaryOperator 0x1481496f8 <line:51:2, col:41> 'char *' contains-errors '='
|   | |-DeclRefExpr 0x148149510 <col:2> 'char *' lvalue Var 0x148141578 'buf' 'char *'
|   | `-CallExpr 0x1481496c0 <col:8, col:41> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x148149610 <col:8> 'int ()' Function 0x148149558 'read_sha1_file' 'int ()'
|   |   |-DeclRefExpr 0x148149630 <col:23> 'unsigned char[20]' lvalue Var 0x148128d08 'sha1' 'unsigned char[20]'
|   |   |-UnaryOperator 0x148149670 <col:29, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   | `-RecoveryExpr 0x148149650 <col:30> '<dependent type>' contains-errors lvalue
|   |   `-UnaryOperator 0x1481496a8 <col:36, col:37> 'unsigned long *' prefix '&' cannot overflow
|   |     `-DeclRefExpr 0x148149688 <col:37> 'unsigned long' lvalue Var 0x148141610 'size' 'unsigned long'
|   |-IfStmt 0x1481498d8 <line:52:2, line:56:2>
|   | |-UnaryOperator 0x148149750 <line:52:6, col:7> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x148149738 <col:7> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x148149718 <col:7> 'char *' lvalue Var 0x148141578 'buf' 'char *'
|   | `-CompoundStmt 0x1481498b8 <col:12, line:56:2>
|   |   |-CallExpr 0x148149820 <line:53:3, line:54:15> 'int'
|   |   | |-ImplicitCastExpr 0x148149808 <line:53:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x148149768 <col:3> 'int ()' Function 0x148146960 'cgit_print_error_page' 'int ()'
|   |   | |-IntegerLiteral 0x148149788 <col:25> 'int' 500
|   |   | |-ImplicitCastExpr 0x148149860 <col:30> 'char *' <ArrayToPointerDecay>
|   |   | | `-StringLiteral 0x1481497a8 <col:30> 'char[4]' lvalue "STR"
|   |   | |-ImplicitCastExpr 0x148149878 <line:54:5> 'char *' <ArrayToPointerDecay>
|   |   | | `-StringLiteral 0x1481497c8 <col:5> 'char[4]' lvalue "STR"
|   |   | `-ImplicitCastExpr 0x148149890 <col:12> 'const char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1481497e8 <col:12> 'const char *' lvalue ParmVar 0x1481288d8 'hex' 'const char *'
|   |   `-ReturnStmt 0x1481498a8 <line:55:3>
|   |-BinaryOperator 0x1481499b8 <line:58:2, col:14> 'char' '='
|   | |-ArraySubscriptExpr 0x148149968 <col:2, col:10> 'char' lvalue
|   | | |-ImplicitCastExpr 0x148149938 <col:2> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1481498f8 <col:2> 'char *' lvalue Var 0x148141578 'buf' 'char *'
|   | | `-ImplicitCastExpr 0x148149950 <col:6> 'unsigned long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x148149918 <col:6> 'unsigned long' lvalue Var 0x148141610 'size' 'unsigned long'
|   | `-ImplicitCastExpr 0x1481499a0 <col:14> 'char' <IntegralCast>
|   |   `-CharacterLiteral 0x148149988 <col:14> 'int' 0
|   |-IfStmt 0x140008800 <line:60:2, line:65:2>
|   | |-RecoveryExpr 0x1481499d8 <line:60:6, col:16> '_Bool' contains-errors
|   | `-CompoundStmt 0x148149bf0 <col:26, line:65:2>
|   |-CallExpr 0x140008958 <line:67:2, col:26> 'int'
|   | `-ImplicitCastExpr 0x140008940 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x140008920 <col:2> 'int ()' Function 0x140008868 'cgit_print_http_headers' 'int ()'
|   |-CallExpr 0x140008ad0 <line:68:2, col:20> 'int'
|   | |-ImplicitCastExpr 0x140008ab8 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x140008a58 <col:2> 'int ()' Function 0x1400089a0 'html_raw' 'int ()'
|   | |-ImplicitCastExpr 0x140008b00 <col:11> 'char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x140008a78 <col:11> 'char *' lvalue Var 0x148141578 'buf' 'char *'
|   | `-ImplicitCastExpr 0x140008b18 <col:16> 'unsigned long' <LValueToRValue>
|   |   `-DeclRefExpr 0x140008a98 <col:16> 'unsigned long' lvalue Var 0x148141610 'size' 'unsigned long'
|   `-CallExpr 0x140008d78 <line:69:2, col:10> 'void'
|     |-ImplicitCastExpr 0x140008d60 <col:2> 'void (*)(void *)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x140008cd8 <col:2> 'void (void *)' Function 0x140008b68 'free' 'void (void *)'
|     `-ImplicitCastExpr 0x140008db8 <col:7> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x140008da0 <col:7> 'char *' <LValueToRValue>
|         `-DeclRefExpr 0x140008cf8 <col:7> 'char *' lvalue Var 0x148141578 'buf' 'char *'
|-FunctionDecl 0x148141aa8 <line:10:17> col:17 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x148141ba8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x148141b50 <<invalid sloc>> Implicit 902
`-FunctionDecl 0x140008b68 <line:69:2> col:2 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x140008c68 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x140008c10 <<invalid sloc>> Implicit 873
