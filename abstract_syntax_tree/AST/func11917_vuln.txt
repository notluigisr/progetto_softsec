TranslationUnitDecl 0x12d055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12d0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12d055bd0 '__int128'
|-TypedefDecl 0x12d056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12d055bf0 'unsigned __int128'
|-TypedefDecl 0x12d80be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12d80bc00 'struct __NSConstantString_tag'
|   `-Record 0x12d056580 '__NSConstantString_tag'
|-TypedefDecl 0x12d80be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12d055d90 '__SVInt8_t'
|-TypedefDecl 0x12d80bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12d055db0 '__SVInt16_t'
|-TypedefDecl 0x12d80bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12d055dd0 '__SVInt32_t'
|-TypedefDecl 0x12d80bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12d055df0 '__SVInt64_t'
|-TypedefDecl 0x12d80c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12d055e10 '__SVUint8_t'
|-TypedefDecl 0x12d80c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12d055e30 '__SVUint16_t'
|-TypedefDecl 0x12d80c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12d055e50 '__SVUint32_t'
|-TypedefDecl 0x12d80c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12d055e70 '__SVUint64_t'
|-TypedefDecl 0x12d80c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12d055e90 '__SVFloat16_t'
|-TypedefDecl 0x12d80c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12d055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12d80c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12d055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12d80c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12d055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12d80c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12d055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12d80c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12d055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12d80c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12d055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12d80c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12d055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12d80c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12d055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12d80c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12d055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12d80c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12d055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12d80c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12d055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12d80c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12d056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12d80c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12d056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12d80c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12d056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12d80c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12d056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12d80c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12d056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12d80c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12d0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12d80c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12d0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12d80c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12d0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12d80c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12d056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12d80ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12d056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12d80cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12d056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12d80cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12d056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12d80cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12d056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12d80d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12d0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12d80d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12d0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12d80d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12d0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12d80d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12d056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12d80d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12d056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12d80d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12d056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12d80d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12d056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12d80d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12d056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12d80d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12d0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12d80d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12d0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12d80d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12d0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12d80d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12d056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12d80d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12d056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12d80d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12d056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12d80d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12d056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12d80da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12d056390 '__SVBool_t'
|-TypedefDecl 0x12d80da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12d0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12d80dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12d0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12d80db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12d0563f0 '__SVCount_t'
|-TypedefDecl 0x12d80dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12d80dbb0 'char *'
|   `-BuiltinType 0x12d0556b0 'char'
|-TypedefDecl 0x12d80dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12d80dbb0 'char *'
|   `-BuiltinType 0x12d0556b0 'char'
`-FunctionDecl 0x12e0083e8 <dataset_diviso_filec/func11917_vuln.c:1:1, line:46:1> line:1:5 usb_cypress_load_firmware 'int (struct usb_device *, const struct firmware *, int)'
  |-ParmVarDecl 0x12d80e248 <col:31, col:50> col:50 used udev 'struct usb_device *'
  |-ParmVarDecl 0x12e008228 <col:56, col:79> col:79 used fw 'const struct firmware *'
  |-ParmVarDecl 0x12e0082a8 <col:83, col:87> col:87 used type 'int'
  `-CompoundStmt 0x12e00c658 <line:2:1, line:46:1>
    |-DeclStmt 0x12e0086d8 <line:3:2, col:20>
    | |-RecordDecl 0x12e0084f0 <col:2, col:9> col:9 struct hexline
    | `-VarDecl 0x12e008658 <col:2, col:18> col:18 used hx 'struct hexline *'
    |-DeclStmt 0x12e008840 <line:5:2, col:15>
    | |-VarDecl 0x12e008720 <col:2, col:6> col:6 used ret 'int'
    | `-VarDecl 0x12e0087a0 <col:2, col:14> col:10 used pos 'int' cinit
    |   `-IntegerLiteral 0x12e008808 <col:14> 'int' 0
    |-IfStmt 0x12e008b30 <line:8:2, line:9:11>
    | |-UnaryOperator 0x12e008a70 <line:8:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x12e008a58 <col:7> 'struct hexline *' <LValueToRValue>
    | |   `-DeclRefExpr 0x12e008a38 <col:7> 'struct hexline *' lvalue Var 0x12e008658 'hx' 'struct hexline *'
    | `-ReturnStmt 0x12e008b20 <line:9:3, col:11>
    |   `-UnaryOperator 0x12e008b08 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x12e008af0 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x12e008ad0 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12e008f68 <line:13:2, line:14:12>
    | |-RecoveryExpr 0x12e008d58 <line:13:6, col:83> '_Bool' contains-errors
    | `-CallExpr 0x12e008f28 <line:14:3, col:12> 'int'
    |   |-ImplicitCastExpr 0x12e008f10 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x12e008e58 <col:3> 'int ()' Function 0x12e008da0 'err' 'int ()'
    |   `-ImplicitCastExpr 0x12e008f50 <col:7> 'char *' <ArrayToPointerDecay>
    |     `-StringLiteral 0x12e008ec0 <col:7> 'char[4]' lvalue "STR"
    |-WhileStmt 0x12e00bee8 <line:16:2, line:26:2>
    | |-BinaryOperator 0x12e00b840 <line:16:9, col:53> 'int' '>'
    | | |-ParenExpr 0x12e00b800 <col:9, col:49> 'int'
    | | | `-BinaryOperator 0x12e0091d8 <col:10, col:48> 'int' '='
    | | |   |-DeclRefExpr 0x12e008f88 <col:10> 'int' lvalue Var 0x12e008720 'ret' 'int'
    | | |   `-CallExpr 0x12e009170 <col:16, col:48> 'int'
    | | |     |-ImplicitCastExpr 0x12e009158 <col:16> 'int (*)()' <FunctionToPointerDecay>
    | | |     | `-DeclRefExpr 0x12e009088 <col:16> 'int ()' Function 0x12e008fd0 'dvb_usb_get_hexline' 'int ()'
    | | |     |-ImplicitCastExpr 0x12e0091a8 <col:36> 'const struct firmware *' <LValueToRValue>
    | | |     | `-DeclRefExpr 0x12e0090a8 <col:36> 'const struct firmware *' lvalue ParmVar 0x12e008228 'fw' 'const struct firmware *'
    | | |     |-ImplicitCastExpr 0x12e0091c0 <col:40> 'struct hexline *' <LValueToRValue>
    | | |     | `-DeclRefExpr 0x12e0090c8 <col:40> 'struct hexline *' lvalue Var 0x12e008658 'hx' 'struct hexline *'
    | | |     `-UnaryOperator 0x12e009140 <col:44, col:45> 'int *' prefix '&' cannot overflow
    | | |       `-DeclRefExpr 0x12e0090e8 <col:45> 'int' lvalue Var 0x12e0087a0 'pos' 'int'
    | | `-IntegerLiteral 0x12e00b820 <col:53> 'int' 0
    | `-CompoundStmt 0x12e00bec0 <col:56, line:26:2>
    |   |-CallExpr 0x12e00baa0 <line:17:3, col:43> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x12e00b940 <col:3> 'int ()' Function 0x12e00b888 'deb_fw' 'int ()'
    |   | |-StringLiteral 0x12e00b960 <col:10> 'char[4]' lvalue "STR"
    |   | |-RecoveryExpr 0x12e00b9b8 <col:17, col:21> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x12e00b980 <col:17> 'struct hexline *' lvalue Var 0x12e008658 'hx' 'struct hexline *'
    |   | |-RecoveryExpr 0x12e00ba18 <col:27, col:31> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x12e00b9e0 <col:27> 'struct hexline *' lvalue Var 0x12e008658 'hx' 'struct hexline *'
    |   | `-RecoveryExpr 0x12e00ba78 <col:36, col:40> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x12e00ba40 <col:36> 'struct hexline *' lvalue Var 0x12e008658 'hx' 'struct hexline *'
    |   |-BinaryOperator 0x12e00bca0 <line:18:3, col:63> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x12e00bae0 <col:3> 'int' lvalue Var 0x12e008720 'ret' 'int'
    |   | `-CallExpr 0x12e00bc60 <col:9, col:63> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x12e00bb00 <col:9> 'int ()' Function 0x12e008bb8 'usb_cypress_writemem' 'int ()'
    |   |   |-DeclRefExpr 0x12e00bb20 <col:30> 'struct usb_device *' lvalue ParmVar 0x12d80e248 'udev' 'struct usb_device *'
    |   |   |-RecoveryExpr 0x12e00bb78 <col:36, col:40> '<dependent type>' contains-errors lvalue
    |   |   | `-DeclRefExpr 0x12e00bb40 <col:36> 'struct hexline *' lvalue Var 0x12e008658 'hx' 'struct hexline *'
    |   |   |-RecoveryExpr 0x12e00bbd8 <col:46, col:50> '<dependent type>' contains-errors lvalue
    |   |   | `-DeclRefExpr 0x12e00bba0 <col:46> 'struct hexline *' lvalue Var 0x12e008658 'hx' 'struct hexline *'
    |   |   `-RecoveryExpr 0x12e00bc38 <col:56, col:60> '<dependent type>' contains-errors lvalue
    |   |     `-DeclRefExpr 0x12e00bc00 <col:56> 'struct hexline *' lvalue Var 0x12e008658 'hx' 'struct hexline *'
    |   `-IfStmt 0x12e00bea0 <line:20:3, line:25:3>
    |     |-BinaryOperator 0x12e00bd40 <line:20:7, col:18> 'int' contains-errors '!='
    |     | |-DeclRefExpr 0x12e00bcc0 <col:7> 'int' lvalue Var 0x12e008720 'ret' 'int'
    |     | `-RecoveryExpr 0x12e00bd18 <col:14, col:18> '<dependent type>' contains-errors lvalue
    |     |   `-DeclRefExpr 0x12e00bce0 <col:14> 'struct hexline *' lvalue Var 0x12e008658 'hx' 'struct hexline *'
    |     `-CompoundStmt 0x12e00be80 <col:23, line:25:3>
    |       |-CallExpr 0x12e00be20 <line:21:4, line:22:17> '<dependent type>' contains-errors
    |       | |-DeclRefExpr 0x12e00bd60 <line:21:4> 'int ()' Function 0x12e008da0 'err' 'int ()'
    |       | |-StringLiteral 0x12e00bd80 <col:8> 'char[4]' lvalue "STR"
    |       | |-DeclRefExpr 0x12e00bda0 <line:22:5> 'int' lvalue Var 0x12e008720 'ret' 'int'
    |       | `-RecoveryExpr 0x12e00bdf8 <col:10, col:14> '<dependent type>' contains-errors lvalue
    |       |   `-DeclRefExpr 0x12e00bdc0 <col:10> 'struct hexline *' lvalue Var 0x12e008658 'hx' 'struct hexline *'
    |       `-BreakStmt 0x12e00be78 <line:24:4>
    |-IfStmt 0x12e00c280 <line:27:2, line:31:2>
    | |-BinaryOperator 0x12e00bf60 <line:27:6, col:12> 'int' '<'
    | | |-ImplicitCastExpr 0x12e00bf48 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x12e00bf08 <col:6> 'int' lvalue Var 0x12e008720 'ret' 'int'
    | | `-IntegerLiteral 0x12e00bf28 <col:12> 'int' 0
    | `-CompoundStmt 0x12e00c258 <col:15, line:31:2>
    |   |-CallExpr 0x12e00c018 <line:28:3, col:20> 'int'
    |   | |-ImplicitCastExpr 0x12e00c000 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x12e00bf80 <col:3> 'int ()' Function 0x12e008da0 'err' 'int ()'
    |   | |-ImplicitCastExpr 0x12e00c050 <col:7> 'char *' <ArrayToPointerDecay>
    |   | | `-StringLiteral 0x12e00bfa0 <col:7> 'char[4]' lvalue "STR"
    |   | |-ImplicitCastExpr 0x12e00c068 <col:13> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x12e00bfc0 <col:13> 'int' lvalue Var 0x12e0087a0 'pos' 'int'
    |   | `-ImplicitCastExpr 0x12e00c080 <col:17> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x12e00bfe0 <col:17> 'int' lvalue Var 0x12e008720 'ret' 'int'
    |   |-CallExpr 0x12e00c1d0 <line:29:3, col:11> 'int'
    |   | |-ImplicitCastExpr 0x12e00c1b8 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x12e00c178 <col:3> 'int ()' Function 0x12e00c0c0 'kfree' 'int ()'
    |   | `-ImplicitCastExpr 0x12e00c1f8 <col:9> 'struct hexline *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x12e00c198 <col:9> 'struct hexline *' lvalue Var 0x12e008658 'hx' 'struct hexline *'
    |   `-ReturnStmt 0x12e00c248 <line:30:3, col:10>
    |     `-ImplicitCastExpr 0x12e00c230 <col:10> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x12e00c210 <col:10> 'int' lvalue Var 0x12e008720 'ret' 'int'
    |-IfStmt 0x12e00c548 <line:33:2, line:41:3> has_else
    | |-BinaryOperator 0x12e00c2f8 <line:33:6, col:13> 'int' '=='
    | | |-ImplicitCastExpr 0x12e00c2e0 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x12e00c2a0 <col:6> 'int' lvalue Var 0x12e008720 'ret' 'int'
    | | `-IntegerLiteral 0x12e00c2c0 <col:13> 'int' 0
    | |-CompoundStmt 0x12e00c508 <col:16, line:40:2>
    | | `-IfStmt 0x12e00c4e8 <line:36:3, line:39:3>
    | |   |-RecoveryExpr 0x12e00c3f8 <line:36:7, col:83> '_Bool' contains-errors
    | |   `-CompoundStmt 0x12e00c4d0 <col:86, line:39:3>
    | |     `-CallExpr 0x12e00c470 <line:37:4, col:13> 'int'
    | |       |-ImplicitCastExpr 0x12e00c458 <col:4> 'int (*)()' <FunctionToPointerDecay>
    | |       | `-DeclRefExpr 0x12e00c418 <col:4> 'int ()' Function 0x12e008da0 'err' 'int ()'
    | |       `-ImplicitCastExpr 0x12e00c498 <col:8> 'char *' <ArrayToPointerDecay>
    | |         `-StringLiteral 0x12e00c438 <col:8> 'char[4]' lvalue "STR"
    | `-NullStmt 0x12e00c540 <line:41:3>
    |-CallExpr 0x12e00c5d0 <line:43:2, col:10> 'int'
    | |-ImplicitCastExpr 0x12e00c5b8 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x12e00c578 <col:2> 'int ()' Function 0x12e00c0c0 'kfree' 'int ()'
    | `-ImplicitCastExpr 0x12e00c5f8 <col:8> 'struct hexline *' <LValueToRValue>
    |   `-DeclRefExpr 0x12e00c598 <col:8> 'struct hexline *' lvalue Var 0x12e008658 'hx' 'struct hexline *'
    `-ReturnStmt 0x12e00c648 <line:45:2, col:9>
      `-ImplicitCastExpr 0x12e00c630 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x12e00c610 <col:9> 'int' lvalue Var 0x12e008720 'ret' 'int'
