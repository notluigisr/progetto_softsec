TranslationUnitDecl 0x120055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1200564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x120055bd0 '__int128'
|-TypedefDecl 0x120056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x120055bf0 'unsigned __int128'
|-TypedefDecl 0x120126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x120126000 'struct __NSConstantString_tag'
|   `-Record 0x120056580 '__NSConstantString_tag'
|-TypedefDecl 0x120126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x120055d90 '__SVInt8_t'
|-TypedefDecl 0x120126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x120055db0 '__SVInt16_t'
|-TypedefDecl 0x120126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x120055dd0 '__SVInt32_t'
|-TypedefDecl 0x1201263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x120055df0 '__SVInt64_t'
|-TypedefDecl 0x120126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x120055e10 '__SVUint8_t'
|-TypedefDecl 0x1201264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x120055e30 '__SVUint16_t'
|-TypedefDecl 0x120126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x120055e50 '__SVUint32_t'
|-TypedefDecl 0x120126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x120055e70 '__SVUint64_t'
|-TypedefDecl 0x1201265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x120055e90 '__SVFloat16_t'
|-TypedefDecl 0x120126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x120055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1201266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x120055ed0 '__SVFloat64_t'
|-TypedefDecl 0x120126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x120055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x120126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x120055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1201267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x120055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x120126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x120055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1201268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x120055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x120126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x120055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x120126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x120055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1201269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x120055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x120126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x120055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x120126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x120056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x120126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x120056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x120126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x120056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x120126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x120056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x120126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x120056090 '__clang_svint8x3_t'
|-TypedefDecl 0x120126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1200560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x120126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1200560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x120126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1200560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x120126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x120056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x120126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x120056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x120126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x120056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x120126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x120056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x120126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x120056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x120127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1200561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x120127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1200561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1201278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1200561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x120127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x120056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1201279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x120056230 '__clang_svint16x4_t'
|-TypedefDecl 0x120127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x120056250 '__clang_svint32x4_t'
|-TypedefDecl 0x120127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x120056270 '__clang_svint64x4_t'
|-TypedefDecl 0x120127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x120056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x120127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1200562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x120127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1200562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x120127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1200562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x120127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x120056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x120127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x120056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x120127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x120056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x120127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x120056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x120127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x120056390 '__SVBool_t'
|-TypedefDecl 0x120127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1200563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x120127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1200563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x120127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1200563f0 '__SVCount_t'
|-TypedefDecl 0x120127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x120127fb0 'char *'
|   `-BuiltinType 0x1200556b0 'char'
|-TypedefDecl 0x120128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x120127fb0 'char *'
|   `-BuiltinType 0x1200556b0 'char'
`-FunctionDecl 0x107008b68 <dataset_diviso_filec/func19497_nonvuln.c:1:1, line:63:1> line:1:1 invalid do_setclr_trap 'int (int *, int *, struct req_pkt *, int)'
  |-ParmVarDecl 0x120128128 <line:2:2, col:14> col:14 invalid srcadr 'int *'
  |-ParmVarDecl 0x1201281a8 <line:3:2, col:9> col:9 invalid inter 'int *'
  |-ParmVarDecl 0x120128798 <line:4:2, col:18> col:18 used inpkt 'struct req_pkt *'
  |-ParmVarDecl 0x107008a18 <line:5:2, col:6> col:6 used set 'int'
  `-CompoundStmt 0x10800a0c0 <line:7:1, line:63:1>
    |-DeclStmt 0x107008e18 <line:8:2, col:31>
    | |-RecordDecl 0x107008c30 <col:11, col:18> col:18 struct conf_trap
    | `-VarDecl 0x107008d98 <col:2, col:29> col:29 used ct 'struct conf_trap *' register
    |-DeclStmt 0x107008eb0 <line:9:2, col:24>
    | `-VarDecl 0x107008e48 <col:2, col:18> col:18 referenced invalid linter 'int *' register
    |-DeclStmt 0x107008f48 <line:10:2, col:9>
    | `-VarDecl 0x107008ee0 <col:2, col:6> col:6 used res 'int'
    |-CallExpr 0x107009170 <line:14:2, col:18> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1070090c0 <col:2> 'int ()' Function 0x107009008 'ZERO_SOCK' 'int ()'
    | `-UnaryOperator 0x107009158 <col:12, col:13> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x107009138 <col:13> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x1070093d8 <line:15:2, col:24> '<dependent type>' contains-errors '='
    | |-CallExpr 0x1070093b0 <col:2, col:11> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x107009278 <col:2> 'int ()' Function 0x1070091c0 'AF' 'int ()'
    | | `-UnaryOperator 0x107009398 <col:5, col:6> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |   `-RecoveryExpr 0x107009378 <col:6> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x107009330 <col:15, col:24> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1070092f0 <col:15> 'int ()' Function 0x1070091c0 'AF' 'int ()'
    |   `-RecoveryExpr 0x107009310 <col:18> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x1070095c8 <line:16:2, col:27> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1070094d8 <col:2> 'int ()' Function 0x107009420 'SET_PORT' 'int ()'
    | |-UnaryOperator 0x107009590 <col:11, col:12> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-RecoveryExpr 0x107009570 <col:12> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x1070095a8 <col:19> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x108008e28 <line:19:2, line:23:2>
    | |-BinaryOperator 0x1070097a0 <line:19:6, col:39> 'int' contains-errors '>'
    | | |-CallExpr 0x107009758 <col:6, col:35> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x1070096d8 <col:6> 'int ()' Function 0x107009620 'INFO_NITEMS' 'int ()'
    | | | `-RecoveryExpr 0x107009730 <col:18, col:25> '<dependent type>' contains-errors lvalue
    | | |   `-DeclRefExpr 0x1070096f8 <col:18> 'struct req_pkt *' lvalue ParmVar 0x120128798 'inpkt' 'struct req_pkt *'
    | | `-IntegerLiteral 0x107009780 <col:39> 'int' 1
    | `-CompoundStmt 0x108008e00 <col:42, line:23:2>
    |   |-CallExpr 0x107009990 <line:20:3, col:25> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x1070098a0 <col:3> 'int ()' Function 0x1070097e8 'msyslog' 'int ()'
    |   | |-RecoveryExpr 0x107009970 <col:11> '<dependent type>' contains-errors lvalue
    |   | `-StringLiteral 0x107009920 <col:20> 'char[4]' lvalue "STR"
    |   |-CallExpr 0x108008db0 <line:21:3, col:45> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x108008cb8 <col:3> 'int ()' Function 0x108008c00 'req_ack' 'int ()'
    |   | |-RecoveryExpr 0x108008cd8 <col:11> '<dependent type>' contains-errors lvalue
    |   | |-RecoveryExpr 0x108008cf8 <col:19> '<dependent type>' contains-errors lvalue
    |   | |-DeclRefExpr 0x108008d18 <col:26> 'struct req_pkt *' lvalue ParmVar 0x120128798 'inpkt' 'struct req_pkt *'
    |   | `-RecoveryExpr 0x108008d90 <col:33> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x108008df0 <line:22:3>
    |-BinaryOperator 0x108008f90 <line:24:2, col:35> 'struct conf_trap *' contains-errors '='
    | |-DeclRefExpr 0x108008e48 <col:2> 'struct conf_trap *' lvalue Var 0x107008d98 'ct' 'struct conf_trap *'
    | `-CStyleCastExpr 0x108008f68 <col:7, col:35> 'struct conf_trap *' contains-errors <Dependent>
    |   `-UnaryOperator 0x108008ec8 <col:27, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x108008ea0 <col:28, col:35> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x108008e68 <col:28> 'struct req_pkt *' lvalue ParmVar 0x120128798 'inpkt' 'struct req_pkt *'
    |-IfStmt 0x1080096f0 <line:27:2, line:39:2> has_else
    | |-BinaryOperator 0x108009030 <line:27:6, col:27> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x108008fe8 <col:6, col:10> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x108008fb0 <col:6> 'struct conf_trap *' lvalue Var 0x107008d98 'ct' 'struct conf_trap *'
    | | `-IntegerLiteral 0x108009010 <col:27> 'int' 0
    | |-CompoundStmt 0x108009098 <col:30, line:29:2>
    | `-CompoundStmt 0x1080096d8 <col:9, line:39:2>
    |   `-IfStmt 0x1080096b8 <line:35:3, line:38:3>
    |     |-RecoveryExpr 0x1080095f0 <line:35:7, col:15> '_Bool' contains-errors
    |     `-CompoundStmt 0x1080096a0 <col:23, line:38:3>
    |       `-ReturnStmt 0x108009690 <line:37:4>
    |-IfStmt 0x108009ee0 <line:50:2, line:55:2> has_else
    | |-ImplicitCastExpr 0x108009a60 <line:50:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x108009a40 <col:6> 'int' lvalue ParmVar 0x107008a18 'set' 'int'
    | |-CompoundStmt 0x108009d60 <col:11, line:53:2>
    | `-CompoundStmt 0x108009ed0 <col:9, line:55:2>
    |-IfStmt 0x10800a080 <line:57:2, line:61:2> has_else
    | |-UnaryOperator 0x108009f48 <line:57:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x108009f30 <col:7> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x108009f10 <col:7> 'int' lvalue Var 0x107008ee0 'res' 'int'
    | |-CompoundStmt 0x108009fe0 <col:12, line:59:2>
    | `-CompoundStmt 0x10800a070 <col:9, line:61:2>
    `-ReturnStmt 0x10800a0b0 <line:62:2>
