TranslationUnitDecl 0x13b055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13b0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13b055bd0 '__int128'
|-TypedefDecl 0x13b056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13b055bf0 'unsigned __int128'
|-TypedefDecl 0x13b126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13b126000 'struct __NSConstantString_tag'
|   `-Record 0x13b056580 '__NSConstantString_tag'
|-TypedefDecl 0x13b126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13b055d90 '__SVInt8_t'
|-TypedefDecl 0x13b126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13b055db0 '__SVInt16_t'
|-TypedefDecl 0x13b126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13b055dd0 '__SVInt32_t'
|-TypedefDecl 0x13b1263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13b055df0 '__SVInt64_t'
|-TypedefDecl 0x13b126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13b055e10 '__SVUint8_t'
|-TypedefDecl 0x13b1264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13b055e30 '__SVUint16_t'
|-TypedefDecl 0x13b126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13b055e50 '__SVUint32_t'
|-TypedefDecl 0x13b126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13b055e70 '__SVUint64_t'
|-TypedefDecl 0x13b1265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13b055e90 '__SVFloat16_t'
|-TypedefDecl 0x13b126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13b055eb0 '__SVFloat32_t'
|-TypedefDecl 0x13b1266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13b055ed0 '__SVFloat64_t'
|-TypedefDecl 0x13b126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13b055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13b126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13b055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13b1267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13b055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13b126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13b055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13b1268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13b055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13b126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13b055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13b126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13b055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13b1269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13b055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13b126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13b055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13b126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13b056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13b126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13b056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13b126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13b056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13b126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13b056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13b126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13b056090 '__clang_svint8x3_t'
|-TypedefDecl 0x13b126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13b0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13b126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13b0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13b126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13b0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13b126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13b056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13b126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13b056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13b126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13b056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13b126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13b056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13b126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13b056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13b127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13b0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13b127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13b0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13b1278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13b0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13b127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13b056210 '__clang_svint8x4_t'
|-TypedefDecl 0x13b1279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13b056230 '__clang_svint16x4_t'
|-TypedefDecl 0x13b127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13b056250 '__clang_svint32x4_t'
|-TypedefDecl 0x13b127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13b056270 '__clang_svint64x4_t'
|-TypedefDecl 0x13b127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13b056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13b127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13b0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13b127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13b0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13b127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13b0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13b127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13b056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13b127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13b056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13b127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13b056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13b127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13b056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13b127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13b056390 '__SVBool_t'
|-TypedefDecl 0x13b127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13b0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13b127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13b0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13b127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13b0563f0 '__SVCount_t'
|-TypedefDecl 0x13b127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13b127fb0 'char *'
|   `-BuiltinType 0x13b0556b0 'char'
|-TypedefDecl 0x13b128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13b127fb0 'char *'
|   `-BuiltinType 0x13b0556b0 'char'
`-FunctionDecl 0x13b140dc8 <dataset_diviso_filec/func13505_vuln.c:1:1, line:50:1> line:1:12 __btrfs_set_acl 'int (struct btrfs_trans_handle *, struct inode *, struct posix_acl *, int)' static
  |-ParmVarDecl 0x13b128648 <col:28, col:55> col:55 used trans 'struct btrfs_trans_handle *'
  |-ParmVarDecl 0x13b140a28 <line:2:5, col:19> col:19 used inode 'struct inode *'
  |-ParmVarDecl 0x13b140bf8 <col:26, col:44> col:44 used acl 'struct posix_acl *'
  |-ParmVarDecl 0x13b140c78 <col:49, col:53> col:53 used type 'int'
  `-CompoundStmt 0x13b147a20 <line:3:1, line:50:1>
    |-DeclStmt 0x13b141010 <line:4:2, col:19>
    | |-VarDecl 0x13b140ef0 <col:2, col:6> col:6 used ret 'int'
    | `-VarDecl 0x13b140f70 <col:2, col:18> col:11 used size 'int' cinit
    |   `-IntegerLiteral 0x13b140fd8 <col:18> 'int' 0
    |-DeclStmt 0x13b1410a8 <line:5:2, col:18>
    | `-VarDecl 0x13b141040 <col:2, col:14> col:14 used name 'const char *'
    |-DeclStmt 0x13b141190 <line:6:2, col:20>
    | `-VarDecl 0x13b1410d8 <col:2, col:16> col:8 used value 'char *' cinit
    |   `-RecoveryExpr 0x13b141170 <col:16> '<dependent type>' contains-errors lvalue
    |-SwitchStmt 0x13b1411e0 <line:8:2, line:27:2>
    | |-ImplicitCastExpr 0x13b1411c8 <line:8:10> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x13b1411a8 <col:10> 'int' lvalue ParmVar 0x13b140c78 'type' 'int'
    | `-CompoundStmt 0x13b808a80 <col:16, line:27:2>
    |   |-BinaryOperator 0x13b141298 <line:10:3, col:10> 'const char *' contains-errors '='
    |   | |-DeclRefExpr 0x13b141220 <col:3> 'const char *' lvalue Var 0x13b141040 'name' 'const char *'
    |   | `-RecoveryExpr 0x13b141278 <col:10> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x13b141760 <line:11:3, line:17:3>
    |   | |-ImplicitCastExpr 0x13b1412d8 <line:11:7> 'struct posix_acl *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x13b1412b8 <col:7> 'struct posix_acl *' lvalue ParmVar 0x13b140bf8 'acl' 'struct posix_acl *'
    |   | `-CompoundStmt 0x13b141738 <col:12, line:17:3>
    |   |   |-BinaryOperator 0x13b141508 <line:12:4, col:50> 'int' contains-errors '='
    |   |   | |-DeclRefExpr 0x13b1412f0 <col:4> 'int' lvalue Var 0x13b140ef0 'ret' 'int'
    |   |   | `-CallExpr 0x13b1414d8 <col:10, col:50> '<dependent type>' contains-errors
    |   |   |   |-DeclRefExpr 0x13b141420 <col:10> 'int ()' Function 0x13b141368 'posix_acl_equiv_mode' 'int ()'
    |   |   |   |-DeclRefExpr 0x13b141440 <col:31> 'struct posix_acl *' lvalue ParmVar 0x13b140bf8 'acl' 'struct posix_acl *'
    |   |   |   `-UnaryOperator 0x13b1414c0 <col:36, col:44> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   |     `-RecoveryExpr 0x13b141498 <col:37, col:44> '<dependent type>' contains-errors lvalue
    |   |   |       `-DeclRefExpr 0x13b141460 <col:37> 'struct inode *' lvalue ParmVar 0x13b140a28 'inode' 'struct inode *'
    |   |   |-IfStmt 0x13b1415e8 <line:13:4, line:14:12>
    |   |   | |-BinaryOperator 0x13b141580 <line:13:8, col:14> 'int' '<'
    |   |   | | |-ImplicitCastExpr 0x13b141568 <col:8> 'int' <LValueToRValue>
    |   |   | | | `-DeclRefExpr 0x13b141528 <col:8> 'int' lvalue Var 0x13b140ef0 'ret' 'int'
    |   |   | | `-IntegerLiteral 0x13b141548 <col:14> 'int' 0
    |   |   | `-ReturnStmt 0x13b1415d8 <line:14:5, col:12>
    |   |   |   `-ImplicitCastExpr 0x13b1415c0 <col:12> 'int' <LValueToRValue>
    |   |   |     `-DeclRefExpr 0x13b1415a0 <col:12> 'int' lvalue Var 0x13b140ef0 'ret' 'int'
    |   |   `-IfStmt 0x13b141718 <line:15:4, line:16:11>
    |   |     |-BinaryOperator 0x13b141660 <line:15:8, col:15> 'int' '=='
    |   |     | |-ImplicitCastExpr 0x13b141648 <col:8> 'int' <LValueToRValue>
    |   |     | | `-DeclRefExpr 0x13b141608 <col:8> 'int' lvalue Var 0x13b140ef0 'ret' 'int'
    |   |     | `-IntegerLiteral 0x13b141628 <col:15> 'int' 0
    |   |     `-BinaryOperator 0x13b1416f8 <line:16:5, col:11> 'struct posix_acl *' contains-errors '='
    |   |       |-DeclRefExpr 0x13b141680 <col:5> 'struct posix_acl *' lvalue ParmVar 0x13b140bf8 'acl' 'struct posix_acl *'
    |   |       `-RecoveryExpr 0x13b1416d8 <col:11> '<dependent type>' contains-errors lvalue
    |   |-BinaryOperator 0x13b1417c0 <line:18:3, col:9> 'int' '='
    |   | |-DeclRefExpr 0x13b141780 <col:3> 'int' lvalue Var 0x13b140ef0 'ret' 'int'
    |   | `-IntegerLiteral 0x13b1417a0 <col:9> 'int' 0
    |   |-BreakStmt 0x13b1417e0 <line:19:3>
    |   |-IfStmt 0x13b8088f8 <line:21:3, line:22:27>
    |   | |-UnaryOperator 0x13b141988 <line:21:7, col:29> '<dependent type>' contains-errors prefix '!' cannot overflow
    |   | | `-CallExpr 0x13b141960 <col:8, col:29> '<dependent type>' contains-errors
    |   | |   |-DeclRefExpr 0x13b1418e0 <col:8> 'int ()' Function 0x13b141828 'S_ISDIR' 'int ()'
    |   | |   `-RecoveryExpr 0x13b141938 <col:16, col:23> '<dependent type>' contains-errors lvalue
    |   | |     `-DeclRefExpr 0x13b141900 <col:16> 'struct inode *' lvalue ParmVar 0x13b140a28 'inode' 'struct inode *'
    |   | `-ReturnStmt 0x13b8088e8 <line:22:4, col:27>
    |   |   `-ConditionalOperator 0x13b8088b8 <col:11, col:27> '<dependent type>' contains-errors
    |   |     |-DeclRefExpr 0x13b1419a0 <col:11> 'struct posix_acl *' lvalue ParmVar 0x13b140bf8 'acl' 'struct posix_acl *'
    |   |     |-UnaryOperator 0x13b8088a0 <col:17, col:18> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |     | `-ImplicitCastExpr 0x13b808888 <col:18> '<dependent type>' contains-errors <LValueToRValue>
    |   |     |   `-RecoveryExpr 0x13b808868 <col:18> '<dependent type>' contains-errors lvalue
    |   |     `-IntegerLiteral 0x13b808818 <col:27> 'int' 0
    |   |-BinaryOperator 0x13b808990 <line:23:3, col:10> 'const char *' contains-errors '='
    |   | |-DeclRefExpr 0x13b808918 <col:3> 'const char *' lvalue Var 0x13b141040 'name' 'const char *'
    |   | `-RecoveryExpr 0x13b808970 <col:10> '<dependent type>' contains-errors lvalue
    |   |-BreakStmt 0x13b8089b0 <line:24:3>
    |   `-DefaultStmt 0x13b808a60 <line:25:2, line:26:11>
    |     `-ReturnStmt 0x13b808a50 <col:3, col:11>
    |       `-UnaryOperator 0x13b808a38 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |         `-ImplicitCastExpr 0x13b808a20 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |           `-RecoveryExpr 0x13b808a00 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x13b809468 <line:29:2, line:40:2>
    | |-ImplicitCastExpr 0x13b808af0 <line:29:6> 'struct posix_acl *' <LValueToRValue>
    | | `-DeclRefExpr 0x13b808ad0 <col:6> 'struct posix_acl *' lvalue ParmVar 0x13b140bf8 'acl' 'struct posix_acl *'
    | `-CompoundStmt 0x13b809430 <col:11, line:40:2>
    |   |-BinaryOperator 0x13b808cb0 <line:30:3, col:43> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x13b808b08 <col:3> 'int' lvalue Var 0x13b140f70 'size' 'int'
    |   | `-CallExpr 0x13b808c88 <col:10, col:43> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x13b808c08 <col:10> 'int ()' Function 0x13b808b50 'posix_acl_xattr_size' 'int ()'
    |   |   `-RecoveryExpr 0x13b808c60 <col:31, col:36> '<dependent type>' contains-errors lvalue
    |   |     `-DeclRefExpr 0x13b808c28 <col:31> 'struct posix_acl *' lvalue ParmVar 0x13b140bf8 'acl' 'struct posix_acl *'
    |   |-BinaryOperator 0x13b808ec8 <line:31:3, col:35> 'char *' contains-errors '='
    |   | |-DeclRefExpr 0x13b808cd0 <col:3> 'char *' contains-errors lvalue Var 0x13b1410d8 'value' 'char *'
    |   | `-CallExpr 0x13b808e98 <col:11, col:35> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x13b808dd0 <col:11> 'int ()' Function 0x13b808d18 'kmalloc' 'int ()'
    |   |   |-DeclRefExpr 0x13b808df0 <col:19> 'int' lvalue Var 0x13b140f70 'size' 'int'
    |   |   `-RecoveryExpr 0x13b808e78 <col:25> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x13b8090b8 <line:32:3, line:35:3>
    |   | |-UnaryOperator 0x13b808f20 <line:32:7, col:8> 'int' contains-errors prefix '!' cannot overflow
    |   | | `-ImplicitCastExpr 0x13b808f08 <col:8> 'char *' contains-errors <LValueToRValue>
    |   | |   `-DeclRefExpr 0x13b808ee8 <col:8> 'char *' contains-errors lvalue Var 0x13b1410d8 'value' 'char *'
    |   | `-CompoundStmt 0x13b809098 <col:15, line:35:3>
    |   |   |-BinaryOperator 0x13b809010 <line:33:4, col:11> 'int' contains-errors '='
    |   |   | |-DeclRefExpr 0x13b808f38 <col:4> 'int' lvalue Var 0x13b140ef0 'ret' 'int'
    |   |   | `-UnaryOperator 0x13b808ff8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |   |   `-ImplicitCastExpr 0x13b808fe0 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |   |   |     `-RecoveryExpr 0x13b808fc0 <col:11> '<dependent type>' contains-errors lvalue
    |   |   `-GotoStmt 0x13b809080 <line:34:4, col:9> 'out' 0x13b809030
    |   |-BinaryOperator 0x13b809360 <line:37:3, col:59> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x13b8090d8 <col:3> 'int' lvalue Var 0x13b140ef0 'ret' 'int'
    |   | `-CallExpr 0x13b809320 <col:9, col:59> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x13b8091d8 <col:9> 'int ()' Function 0x13b809120 'posix_acl_to_xattr' 'int ()'
    |   |   |-UnaryOperator 0x13b809308 <col:28, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   | `-RecoveryExpr 0x13b8092e8 <col:29> '<dependent type>' contains-errors lvalue
    |   |   |-DeclRefExpr 0x13b809228 <col:43> 'struct posix_acl *' lvalue ParmVar 0x13b140bf8 'acl' 'struct posix_acl *'
    |   |   |-DeclRefExpr 0x13b809248 <col:48> 'char *' contains-errors lvalue Var 0x13b1410d8 'value' 'char *'
    |   |   `-DeclRefExpr 0x13b809268 <col:55> 'int' lvalue Var 0x13b140f70 'size' 'int'
    |   `-IfStmt 0x13b809410 <line:38:3, line:39:9>
    |     |-BinaryOperator 0x13b8093d8 <line:38:7, col:13> 'int' '<'
    |     | |-ImplicitCastExpr 0x13b8093c0 <col:7> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x13b809380 <col:7> 'int' lvalue Var 0x13b140ef0 'ret' 'int'
    |     | `-IntegerLiteral 0x13b8093a0 <col:13> 'int' 0
    |     `-GotoStmt 0x13b8093f8 <line:39:4, col:9> 'out' 0x13b809030
    |-BinaryOperator 0x13b809780 <line:42:2, col:59> 'int' contains-errors '='
    | |-DeclRefExpr 0x13b809488 <col:2> 'int' lvalue Var 0x13b140ef0 'ret' 'int'
    | `-CallExpr 0x13b8096b8 <col:8, col:59> 'int' contains-errors
    |   |-ImplicitCastExpr 0x13b8096a0 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x13b809588 <col:8> 'int ()' Function 0x13b8094d0 '__btrfs_setxattr' 'int ()'
    |   |-ImplicitCastExpr 0x13b809708 <col:25> 'struct btrfs_trans_handle *' <LValueToRValue>
    |   | `-DeclRefExpr 0x13b8095a8 <col:25> 'struct btrfs_trans_handle *' lvalue ParmVar 0x13b128648 'trans' 'struct btrfs_trans_handle *'
    |   |-ImplicitCastExpr 0x13b809720 <col:32> 'struct inode *' <LValueToRValue>
    |   | `-DeclRefExpr 0x13b8095c8 <col:32> 'struct inode *' lvalue ParmVar 0x13b140a28 'inode' 'struct inode *'
    |   |-ImplicitCastExpr 0x13b809738 <col:39> 'const char *' <LValueToRValue>
    |   | `-DeclRefExpr 0x13b8095e8 <col:39> 'const char *' lvalue Var 0x13b141040 'name' 'const char *'
    |   |-ImplicitCastExpr 0x13b809750 <col:45> 'char *' contains-errors <LValueToRValue>
    |   | `-DeclRefExpr 0x13b809608 <col:45> 'char *' contains-errors lvalue Var 0x13b1410d8 'value' 'char *'
    |   |-ImplicitCastExpr 0x13b809768 <col:52> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x13b809628 <col:52> 'int' lvalue Var 0x13b140f70 'size' 'int'
    |   `-IntegerLiteral 0x13b809648 <col:58> 'int' 0
    |-LabelStmt 0x13b147750 <line:43:1, line:44:13> 'out'
    | `-CallExpr 0x13b147710 <col:2, col:13> 'int' contains-errors
    |   |-ImplicitCastExpr 0x13b1476f8 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x13b1476b8 <col:2> 'int ()' Function 0x13b147600 'kfree' 'int ()'
    |   `-ImplicitCastExpr 0x13b147738 <col:8> 'char *' contains-errors <LValueToRValue>
    |     `-DeclRefExpr 0x13b1476d8 <col:8> 'char *' contains-errors lvalue Var 0x13b1410d8 'value' 'char *'
    |-IfStmt 0x13b1479b8 <line:46:2, line:47:34>
    | |-UnaryOperator 0x13b1477a8 <line:46:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x13b147790 <col:7> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x13b147770 <col:7> 'int' lvalue Var 0x13b140ef0 'ret' 'int'
    | `-CallExpr 0x13b147938 <line:47:3, col:34> 'int'
    |   |-ImplicitCastExpr 0x13b147920 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x13b1478a0 <col:3> 'int ()' Function 0x13b1477e8 'set_cached_acl' 'int ()'
    |   |-ImplicitCastExpr 0x13b147970 <col:18> 'struct inode *' <LValueToRValue>
    |   | `-DeclRefExpr 0x13b1478c0 <col:18> 'struct inode *' lvalue ParmVar 0x13b140a28 'inode' 'struct inode *'
    |   |-ImplicitCastExpr 0x13b147988 <col:25> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x13b1478e0 <col:25> 'int' lvalue ParmVar 0x13b140c78 'type' 'int'
    |   `-ImplicitCastExpr 0x13b1479a0 <col:31> 'struct posix_acl *' <LValueToRValue>
    |     `-DeclRefExpr 0x13b147900 <col:31> 'struct posix_acl *' lvalue ParmVar 0x13b140bf8 'acl' 'struct posix_acl *'
    `-ReturnStmt 0x13b147a10 <line:49:2, col:9>
      `-ImplicitCastExpr 0x13b1479f8 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x13b1479d8 <col:9> 'int' lvalue Var 0x13b140ef0 'ret' 'int'
