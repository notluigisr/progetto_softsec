TranslationUnitDecl 0x10703d008 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x10703deb8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x10703d5d0 '__int128'
|-TypedefDecl 0x10703df28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x10703d5f0 'unsigned __int128'
|-TypedefDecl 0x12001d830 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12001d600 'struct __NSConstantString_tag'
|   `-Record 0x10703df80 '__NSConstantString_tag'
|-TypedefDecl 0x12001d898 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x10703d790 '__SVInt8_t'
|-TypedefDecl 0x12001d900 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x10703d7b0 '__SVInt16_t'
|-TypedefDecl 0x12001d968 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x10703d7d0 '__SVInt32_t'
|-TypedefDecl 0x12001d9d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x10703d7f0 '__SVInt64_t'
|-TypedefDecl 0x12001da38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x10703d810 '__SVUint8_t'
|-TypedefDecl 0x12001daa0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x10703d830 '__SVUint16_t'
|-TypedefDecl 0x12001db08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x10703d850 '__SVUint32_t'
|-TypedefDecl 0x12001db70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x10703d870 '__SVUint64_t'
|-TypedefDecl 0x12001dbd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x10703d890 '__SVFloat16_t'
|-TypedefDecl 0x12001dc40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x10703d8b0 '__SVFloat32_t'
|-TypedefDecl 0x12001dca8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x10703d8d0 '__SVFloat64_t'
|-TypedefDecl 0x12001dd10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x10703d8f0 '__SVBfloat16_t'
|-TypedefDecl 0x12001dd78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x10703d910 '__clang_svint8x2_t'
|-TypedefDecl 0x12001dde0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x10703d930 '__clang_svint16x2_t'
|-TypedefDecl 0x12001de48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x10703d950 '__clang_svint32x2_t'
|-TypedefDecl 0x12001deb0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x10703d970 '__clang_svint64x2_t'
|-TypedefDecl 0x12001df18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x10703d990 '__clang_svuint8x2_t'
|-TypedefDecl 0x12001df80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x10703d9b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12001dfe8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x10703d9d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12001e050 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x10703d9f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12001e0b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x10703da10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12001e120 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x10703da30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12001e188 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x10703da50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12001e1f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x10703da70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12001e258 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x10703da90 '__clang_svint8x3_t'
|-TypedefDecl 0x12001e2c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x10703dab0 '__clang_svint16x3_t'
|-TypedefDecl 0x12001e328 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x10703dad0 '__clang_svint32x3_t'
|-TypedefDecl 0x12001e390 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x10703daf0 '__clang_svint64x3_t'
|-TypedefDecl 0x12001e3f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x10703db10 '__clang_svuint8x3_t'
|-TypedefDecl 0x12001e460 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x10703db30 '__clang_svuint16x3_t'
|-TypedefDecl 0x12001e4c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x10703db50 '__clang_svuint32x3_t'
|-TypedefDecl 0x12001e530 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x10703db70 '__clang_svuint64x3_t'
|-TypedefDecl 0x12001e598 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x10703db90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12001ea00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x10703dbb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12001ea68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x10703dbd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12001ead0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x10703dbf0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12001eb38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x10703dc10 '__clang_svint8x4_t'
|-TypedefDecl 0x12001eba0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x10703dc30 '__clang_svint16x4_t'
|-TypedefDecl 0x12001ec08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x10703dc50 '__clang_svint32x4_t'
|-TypedefDecl 0x12001ec70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x10703dc70 '__clang_svint64x4_t'
|-TypedefDecl 0x12001ecd8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x10703dc90 '__clang_svuint8x4_t'
|-TypedefDecl 0x12001ed40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x10703dcb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12001eda8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x10703dcd0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12001ee10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x10703dcf0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12001ee78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x10703dd10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12001eee0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x10703dd30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12001ef48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x10703dd50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12001efb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x10703dd70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12001f018 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x10703dd90 '__SVBool_t'
|-TypedefDecl 0x12001f080 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x10703ddb0 '__clang_svboolx2_t'
|-TypedefDecl 0x12001f0e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x10703ddd0 '__clang_svboolx4_t'
|-TypedefDecl 0x12001f150 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x10703ddf0 '__SVCount_t'
|-TypedefDecl 0x12001f1f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12001f1b0 'char *'
|   `-BuiltinType 0x10703d0b0 'char'
|-TypedefDecl 0x12001f268 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12001f1b0 'char *'
|   `-BuiltinType 0x10703d0b0 'char'
|-FunctionDecl 0x12001f3f8 <dataset_diviso_filec/func22340_vuln.c:1:1, line:66:1> line:1:13 invalid region16_simplify_bands 'int (int *)' static
| |-ParmVarDecl 0x12001f328 <col:37, col:47> col:47 referenced invalid region 'int *'
| `-CompoundStmt 0x108009928 <line:2:1, line:66:1>
|   |-DeclStmt 0x12001f6f8 <line:5:2, col:27>
|   | |-VarDecl 0x12001f5f8 <col:2, col:6> col:6 used nbRects 'int'
|   | `-VarDecl 0x12001f678 <col:2, col:15> col:15 used finalNbRects 'int'
|   |-DeclStmt 0x12001f828 <line:6:2, col:23>
|   | |-VarDecl 0x12001f728 <col:2, col:6> col:6 used bandItems 'int'
|   | `-VarDecl 0x12001f7a8 <col:2, col:17> col:17 used toMove 'int'
|   |-BinaryOperator 0x10710a668 <line:7:2, col:50> 'int' contains-errors '='
|   | |-DeclRefExpr 0x12001f840 <col:2> 'int' lvalue Var 0x12001f678 'finalNbRects' 'int'
|   | `-BinaryOperator 0x10710a648 <col:17, col:50> 'int' contains-errors '='
|   |   |-DeclRefExpr 0x12001f860 <col:17> 'int' lvalue Var 0x12001f5f8 'nbRects' 'int'
|   |   `-CallExpr 0x10710a620 <col:27, col:50> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x12001f9e0 <col:27> 'int ()' Function 0x12001f928 'region16_n_rects' 'int ()'
|   |     `-RecoveryExpr 0x10710a600 <col:44> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x10710a748 <line:9:2, line:10:10>
|   | |-BinaryOperator 0x10710a6e0 <line:9:6, col:16> 'int' '<'
|   | | |-ImplicitCastExpr 0x10710a6c8 <col:6> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x10710a688 <col:6> 'int' lvalue Var 0x12001f5f8 'nbRects' 'int'
|   | | `-IntegerLiteral 0x10710a6a8 <col:16> 'int' 2
|   | `-ReturnStmt 0x10710a738 <line:10:3, col:10>
|   |   `-RecoveryExpr 0x10710a718 <col:10> '<dependent type>' contains-errors lvalue
|   |-DoStmt 0x10710afd0 <line:15:2, line:48:13>
|   | |-CompoundStmt 0x10710af90 <line:16:2, line:47:2>
|   | | |-IfStmt 0x10710ab60 <line:19:3, line:20:4>
|   | | | |-BinaryOperator 0x10710ab38 <line:19:7, col:16> 'int' contains-errors '=='
|   | | | | |-RecoveryExpr 0x10710aaf8 <col:7> '<dependent type>' contains-errors lvalue
|   | | | | `-RecoveryExpr 0x10710ab18 <col:16> '<dependent type>' contains-errors lvalue
|   | | | `-BreakStmt 0x10710ab58 <line:20:4>
|   | | `-IfStmt 0x10710af60 <line:22:3, line:46:3> has_else
|   | |   |-RecoveryExpr 0x10710ac80 <line:22:7, col:71> '_Bool' contains-errors
|   | |   |-CompoundStmt 0x10710af30 <line:23:3, line:42:3>
|   | |   | |-WhileStmt 0x10710acd0 <line:27:4, line:31:4>
|   | |   | | |-RecoveryExpr 0x10710aca0 <line:27:11, col:17> '_Bool' contains-errors
|   | |   | | `-CompoundStmt 0x10710acc0 <line:28:4, line:31:4>
|   | |   | `-CompoundAssignOperator 0x10710aee0 <line:40:4, col:20> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |   |   |-DeclRefExpr 0x10710ae88 <col:4> 'int' lvalue Var 0x12001f678 'finalNbRects' 'int'
|   | |   |   `-ImplicitCastExpr 0x10710aec8 <col:20> 'int' <LValueToRValue>
|   | |   |     `-DeclRefExpr 0x10710aea8 <col:20> 'int' lvalue Var 0x12001f728 'bandItems' 'int'
|   | |   `-CompoundStmt 0x10710af50 <line:44:3, line:46:3>
|   | `-RecoveryExpr 0x10710afb0 <line:48:9> '_Bool' contains-errors
|   `-IfStmt 0x108009908 <line:50:2, line:63:2>
|     |-BinaryOperator 0x10710b060 <line:50:6, col:22> 'int' '!='
|     | |-ImplicitCastExpr 0x10710b030 <col:6> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x10710aff0 <col:6> 'int' lvalue Var 0x12001f678 'finalNbRects' 'int'
|     | `-ImplicitCastExpr 0x10710b048 <col:22> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x10710b010 <col:22> 'int' lvalue Var 0x12001f5f8 'nbRects' 'int'
|     `-CompoundStmt 0x1080098d0 <line:51:2, line:63:2>
|       |-DeclStmt 0x10710b120 <line:52:3, col:80>
|       | `-VarDecl 0x10710b098 <col:3, col:7> col:7 used allocSize 'int'
|       |-BinaryOperator 0x10710b528 <line:53:3, col:49> '<dependent type>' contains-errors '='
|       | |-CXXDependentScopeMemberExpr 0x10710b180 <col:3, col:11> '<dependent type>' contains-errors lvalue ->data
|       | | `-RecoveryExpr 0x10710b158 <col:3> '<dependent type>' contains-errors lvalue
|       | |   `-DeclRefExpr 0x10710b138 <col:3> 'int *' lvalue ParmVar 0x12001f328 'region' 'int *'
|       | `-CallExpr 0x10710b4f8 <col:18, col:49> '<dependent type>' contains-errors
|       |   |-DeclRefExpr 0x10710b420 <col:18> 'void *(void *, unsigned long)' Function 0x10710b210 'realloc' 'void *(void *, unsigned long)'
|       |   |-CXXDependentScopeMemberExpr 0x10710b460 <col:26, col:34> '<dependent type>' contains-errors lvalue ->data
|       |   | `-RecoveryExpr 0x10710b440 <col:26> '<dependent type>' contains-errors lvalue
|       |   `-DeclRefExpr 0x10710b4a8 <col:40> 'int' lvalue Var 0x10710b098 'allocSize' 'int'
|       |-IfStmt 0x108009680 <line:55:3, line:59:3>
|       | |-UnaryOperator 0x10710b5c8 <line:55:7, col:16> '<dependent type>' contains-errors prefix '!' cannot overflow
|       | | `-ImplicitCastExpr 0x10710b5b0 <col:8, col:16> '<dependent type>' contains-errors <LValueToRValue>
|       | |   `-CXXDependentScopeMemberExpr 0x10710b568 <col:8, col:16> '<dependent type>' contains-errors lvalue ->data
|       | |     `-RecoveryExpr 0x10710b548 <col:8> '<dependent type>' contains-errors lvalue
|       | `-CompoundStmt 0x108009670 <line:56:3, line:59:3>
|       |-BinaryOperator 0x108009798 <line:61:3, col:27> '<dependent type>' contains-errors '='
|       | |-CXXDependentScopeMemberExpr 0x108009730 <col:3, col:17> '<dependent type>' contains-errors lvalue ->nbRects
|       | | `-CXXDependentScopeMemberExpr 0x1080096e8 <col:3, col:11> '<dependent type>' contains-errors lvalue ->data
|       | |   `-RecoveryExpr 0x1080096c0 <col:3> '<dependent type>' contains-errors lvalue
|       | |     `-DeclRefExpr 0x1080096a0 <col:3> 'int *' lvalue ParmVar 0x12001f328 'region' 'int *'
|       | `-DeclRefExpr 0x108009778 <col:27> 'int' lvalue Var 0x12001f678 'finalNbRects' 'int'
|       `-BinaryOperator 0x1080098b0 <line:62:3, col:24> '<dependent type>' contains-errors '='
|         |-CXXDependentScopeMemberExpr 0x108009848 <col:3, col:17> '<dependent type>' contains-errors lvalue ->size
|         | `-CXXDependentScopeMemberExpr 0x108009800 <col:3, col:11> '<dependent type>' contains-errors lvalue ->data
|         |   `-RecoveryExpr 0x1080097d8 <col:3> '<dependent type>' contains-errors lvalue
|         |     `-DeclRefExpr 0x1080097b8 <col:3> 'int *' lvalue ParmVar 0x12001f328 'region' 'int *'
|         `-DeclRefExpr 0x108009890 <col:24> 'int' lvalue Var 0x10710b098 'allocSize' 'int'
`-FunctionDecl 0x10710b210 <line:53:18> col:18 implicit used realloc 'void *(void *, unsigned long)' extern
  |-ParmVarDecl 0x10710b310 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x10710b378 <<invalid sloc>> <invalid sloc> 'unsigned long'
  |-BuiltinAttr 0x10710b2b8 <<invalid sloc>> Implicit 872
  `-AllocSizeAttr 0x10710b3f0 <col:18> Implicit 2
