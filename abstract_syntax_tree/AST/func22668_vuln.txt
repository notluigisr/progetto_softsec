TranslationUnitDecl 0x13f855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13f8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13f855bd0 '__int128'
|-TypedefDecl 0x13f856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13f855bf0 'unsigned __int128'
|-TypedefDecl 0x14800be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14800bc00 'struct __NSConstantString_tag'
|   `-Record 0x13f856580 '__NSConstantString_tag'
|-TypedefDecl 0x14800be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13f855d90 '__SVInt8_t'
|-TypedefDecl 0x14800bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13f855db0 '__SVInt16_t'
|-TypedefDecl 0x14800bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13f855dd0 '__SVInt32_t'
|-TypedefDecl 0x14800bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13f855df0 '__SVInt64_t'
|-TypedefDecl 0x14800c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13f855e10 '__SVUint8_t'
|-TypedefDecl 0x14800c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13f855e30 '__SVUint16_t'
|-TypedefDecl 0x14800c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13f855e50 '__SVUint32_t'
|-TypedefDecl 0x14800c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13f855e70 '__SVUint64_t'
|-TypedefDecl 0x14800c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13f855e90 '__SVFloat16_t'
|-TypedefDecl 0x14800c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13f855eb0 '__SVFloat32_t'
|-TypedefDecl 0x14800c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13f855ed0 '__SVFloat64_t'
|-TypedefDecl 0x14800c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13f855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14800c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13f855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14800c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13f855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14800c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13f855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14800c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13f855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14800c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13f855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14800c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13f855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14800c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13f855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14800c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13f855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14800c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13f856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14800c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13f856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14800c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13f856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14800c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13f856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14800c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13f856090 '__clang_svint8x3_t'
|-TypedefDecl 0x14800c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13f8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14800c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13f8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14800c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13f8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14800c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13f856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14800ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13f856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14800cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13f856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14800cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13f856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14800cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13f856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14800d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13f8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14800d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13f8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14800d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13f8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14800d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13f856210 '__clang_svint8x4_t'
|-TypedefDecl 0x14800d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13f856230 '__clang_svint16x4_t'
|-TypedefDecl 0x14800d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13f856250 '__clang_svint32x4_t'
|-TypedefDecl 0x14800d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13f856270 '__clang_svint64x4_t'
|-TypedefDecl 0x14800d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13f856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14800d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13f8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14800d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13f8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14800d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13f8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14800d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13f856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14800d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13f856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14800d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13f856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14800d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13f856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14800da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13f856390 '__SVBool_t'
|-TypedefDecl 0x14800da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13f8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14800dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13f8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14800db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13f8563f0 '__SVCount_t'
|-TypedefDecl 0x14800dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14800dbb0 'char *'
|   `-BuiltinType 0x13f8556b0 'char'
|-TypedefDecl 0x14800dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14800dbb0 'char *'
|   `-BuiltinType 0x13f8556b0 'char'
|-FunctionDecl 0x14800dee8 <dataset_diviso_filec/func22668_vuln.c:1:1, line:44:1> line:1:1 invalid xmlBufAdd 'int (int, const int *, int)'
| |-ParmVarDecl 0x14800dcf0 <col:11, col:21> col:21 referenced invalid buf 'int'
| |-ParmVarDecl 0x14800dd70 <col:26, col:41> col:41 invalid str 'const int *'
| |-ParmVarDecl 0x14800ddf0 <col:46, col:50> col:50 used len 'int'
| `-CompoundStmt 0x13f924600 <col:55, line:44:1>
|   |-DeclStmt 0x14800e028 <line:2:5, col:26>
|   | `-VarDecl 0x14800dfc0 <col:5, col:18> col:18 used needSize 'unsigned int'
|   |-IfStmt 0x14800e1e0 <line:4:5, line:5:10>
|   | |-RecoveryExpr 0x14800e178 <line:4:9, col:54> '_Bool' contains-errors
|   | `-ReturnStmt 0x14800e1d0 <line:5:2, col:10>
|   |   `-UnaryOperator 0x14800e1b8 <col:9, col:10> 'int' prefix '-'
|   |     `-IntegerLiteral 0x14800e198 <col:10> 'int' 1
|   |-CallExpr 0x14800e3a0 <line:6:5, col:21> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x14800e360 <col:5> 'int ()' Function 0x14800e2a8 'CHECK_COMPAT' 'int ()'
|   | `-RecoveryExpr 0x14800e380 <col:18> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x148027508 <line:8:5, col:59>
|   | |-BinaryOperator 0x1480274a0 <col:9, col:23> 'int' contains-errors '=='
|   | | |-CXXDependentScopeMemberExpr 0x148027400 <col:9, col:14> '<dependent type>' contains-errors lvalue ->alloc
|   | | | `-RecoveryExpr 0x14800e3c8 <col:9> '<dependent type>' contains-errors lvalue
|   | | `-RecoveryExpr 0x148027480 <col:23> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x1480274f8 <col:51, col:59>
|   |   `-UnaryOperator 0x1480274e0 <col:58, col:59> 'int' prefix '-'
|   |     `-IntegerLiteral 0x1480274c0 <col:59> 'int' 1
|   |-IfStmt 0x148027618 <line:9:5, line:15:5>
|   | |-BinaryOperator 0x148027598 <line:9:9, col:16> 'int' '<'
|   | | |-ImplicitCastExpr 0x148027580 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x148027528 <col:9> 'int' lvalue ParmVar 0x14800ddf0 'len' 'int'
|   | | `-UnaryOperator 0x148027568 <col:15, col:16> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x148027548 <col:16> 'int' 1
|   | `-CompoundStmt 0x148027600 <col:19, line:15:5>
|   |   `-ReturnStmt 0x1480275f0 <line:14:2, col:10>
|   |     `-UnaryOperator 0x1480275d8 <col:9, col:10> 'int' prefix '-'
|   |       `-IntegerLiteral 0x1480275b8 <col:10> 'int' 1
|   |-IfStmt 0x1480276e0 <line:16:5, col:26>
|   | |-BinaryOperator 0x148027690 <col:9, col:16> 'int' '=='
|   | | |-ImplicitCastExpr 0x148027678 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x148027638 <col:9> 'int' lvalue ParmVar 0x14800ddf0 'len' 'int'
|   | | `-IntegerLiteral 0x148027658 <col:16> 'int' 0
|   | `-ReturnStmt 0x1480276d0 <col:19, col:26>
|   |   `-IntegerLiteral 0x1480276b0 <col:26> 'int' 0
|   |-IfStmt 0x148027900 <line:18:5, line:19:28>
|   | |-BinaryOperator 0x148027758 <line:18:9, col:15> 'int' '<'
|   | | |-ImplicitCastExpr 0x148027740 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x148027700 <col:9> 'int' lvalue ParmVar 0x14800ddf0 'len' 'int'
|   | | `-IntegerLiteral 0x148027720 <col:15> 'int' 0
|   | `-BinaryOperator 0x1480278e0 <line:19:9, col:28> 'int' contains-errors '='
|   |   |-DeclRefExpr 0x148027778 <col:9> 'int' lvalue ParmVar 0x14800ddf0 'len' 'int'
|   |   `-CallExpr 0x1480278b8 <col:15, col:28> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x148027878 <col:15> 'int ()' Function 0x1480277c0 'xmlStrlen' 'int ()'
|   |     `-RecoveryExpr 0x148027898 <col:25> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x1480279e0 <line:21:5, col:26>
|   | |-BinaryOperator 0x148027978 <col:9, col:15> 'int' '<'
|   | | |-ImplicitCastExpr 0x148027960 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x148027920 <col:9> 'int' lvalue ParmVar 0x14800ddf0 'len' 'int'
|   | | `-IntegerLiteral 0x148027940 <col:15> 'int' 0
|   | `-ReturnStmt 0x1480279d0 <col:18, col:26>
|   |   `-UnaryOperator 0x1480279b8 <col:25, col:26> 'int' prefix '-'
|   |     `-IntegerLiteral 0x148027998 <col:26> 'int' 1
|   |-IfStmt 0x148027aa8 <line:22:5, col:26>
|   | |-BinaryOperator 0x148027a58 <col:9, col:16> 'int' '=='
|   | | |-ImplicitCastExpr 0x148027a40 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x148027a00 <col:9> 'int' lvalue ParmVar 0x14800ddf0 'len' 'int'
|   | | `-IntegerLiteral 0x148027a20 <col:16> 'int' 0
|   | `-ReturnStmt 0x148027a98 <col:19, col:26>
|   |   `-IntegerLiteral 0x148027a78 <col:26> 'int' 0
|   |-BinaryOperator 0x148027bd0 <line:24:5, col:33> 'unsigned int' contains-errors '='
|   | |-DeclRefExpr 0x148027ac8 <col:5> 'unsigned int' lvalue Var 0x14800dfc0 'needSize' 'unsigned int'
|   | `-BinaryOperator 0x148027bb0 <col:16, col:33> '<dependent type>' contains-errors '+'
|   |   |-BinaryOperator 0x148027b70 <col:16, col:27> '<dependent type>' contains-errors '+'
|   |   | |-CXXDependentScopeMemberExpr 0x148027b08 <col:16, col:21> '<dependent type>' contains-errors lvalue ->use
|   |   | | `-RecoveryExpr 0x148027ae8 <col:16> '<dependent type>' contains-errors lvalue
|   |   | `-DeclRefExpr 0x148027b50 <col:27> 'int' lvalue ParmVar 0x14800ddf0 'len' 'int'
|   |   `-IntegerLiteral 0x148027b90 <col:33> 'int' 2
|   |-IfStmt 0x148028360 <line:25:5, line:37:5>
|   | |-BinaryOperator 0x148027c78 <line:25:9, col:25> 'int' contains-errors '>'
|   | | |-DeclRefExpr 0x148027bf0 <col:9> 'unsigned int' lvalue Var 0x14800dfc0 'needSize' 'unsigned int'
|   | | `-CXXDependentScopeMemberExpr 0x148027c30 <col:20, col:25> '<dependent type>' contains-errors lvalue ->size
|   | |   `-RecoveryExpr 0x148027c10 <col:20> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x148028340 <col:30, line:37:5>
|   |   |-IfStmt 0x148028080 <line:26:2, line:32:2>
|   |   | |-BinaryOperator 0x148027d58 <line:26:6, col:20> 'int' contains-errors '=='
|   |   | | |-CXXDependentScopeMemberExpr 0x148027cb8 <col:6, col:11> '<dependent type>' contains-errors lvalue ->alloc
|   |   | | | `-RecoveryExpr 0x148027c98 <col:6> '<dependent type>' contains-errors lvalue
|   |   | | `-RecoveryExpr 0x148027d38 <col:20> '<dependent type>' contains-errors lvalue
|   |   | `-CompoundStmt 0x148028068 <col:46, line:32:2>
|   |   |   `-IfStmt 0x148028048 <line:28:6, line:31:6>
|   |   |     |-BinaryOperator 0x148027df0 <line:28:10, col:22> 'int' contains-errors '>='
|   |   |     | |-DeclRefExpr 0x148027d78 <col:10> 'unsigned int' lvalue Var 0x14800dfc0 'needSize' 'unsigned int'
|   |   |     | `-RecoveryExpr 0x148027dd0 <col:22> '<dependent type>' contains-errors lvalue
|   |   |     `-CompoundStmt 0x148028028 <col:43, line:31:6>
|   |   |       |-CallExpr 0x148027f90 <line:29:3, col:31> '<dependent type>' contains-errors
|   |   |       | |-DeclRefExpr 0x148027ef0 <col:3> 'int ()' Function 0x148027e38 'xmlBufMemoryError' 'int ()'
|   |   |       | |-RecoveryExpr 0x148027f10 <col:21> '<dependent type>' contains-errors lvalue
|   |   |       | `-StringLiteral 0x148027f70 <col:26> 'char[4]' lvalue "STR"
|   |   |       `-ReturnStmt 0x148028018 <line:30:3, col:12>
|   |   |         `-ParenExpr 0x148027ff8 <col:9, col:12> 'int'
|   |   |           `-UnaryOperator 0x148027fe0 <col:10, col:11> 'int' prefix '-'
|   |   |             `-IntegerLiteral 0x148027fc0 <col:11> 'int' 1
|   |   `-IfStmt 0x148028320 <line:33:9, line:36:9>
|   |     |-UnaryOperator 0x148028210 <line:33:13, col:40> '<dependent type>' contains-errors prefix '!' cannot overflow
|   |     | `-CallExpr 0x1480281e0 <col:14, col:40> '<dependent type>' contains-errors
|   |     |   |-DeclRefExpr 0x148028180 <col:14> 'int ()' Function 0x1480280c8 'xmlBufResize' 'int ()'
|   |     |   |-RecoveryExpr 0x1480281a0 <col:27> '<dependent type>' contains-errors lvalue
|   |     |   `-DeclRefExpr 0x1480281c0 <col:32> 'unsigned int' lvalue Var 0x14800dfc0 'needSize' 'unsigned int'
|   |     `-CompoundStmt 0x148028300 <col:42, line:36:9>
|   |       |-CallExpr 0x148028288 <line:34:6, col:34> '<dependent type>' contains-errors
|   |       | |-DeclRefExpr 0x148028228 <col:6> 'int ()' Function 0x148027e38 'xmlBufMemoryError' 'int ()'
|   |       | |-RecoveryExpr 0x148028248 <col:24> '<dependent type>' contains-errors lvalue
|   |       | `-StringLiteral 0x148028268 <col:29> 'char[4]' lvalue "STR"
|   |       `-ReturnStmt 0x1480282f0 <line:35:13, col:20>
|   |         `-RecoveryExpr 0x1480282d0 <col:20> '<dependent type>' contains-errors lvalue
|   |-CompoundAssignOperator 0x13f9242d0 <line:40:5, col:17> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   | |-CXXDependentScopeMemberExpr 0x13f924268 <col:5, col:10> '<dependent type>' contains-errors lvalue ->use
|   | | `-RecoveryExpr 0x13f924240 <col:5> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x13f924220 <col:5> 'int' lvalue ParmVar 0x14800dcf0 'buf' 'int'
|   | `-DeclRefExpr 0x13f9242b0 <col:17> 'int' lvalue ParmVar 0x14800ddf0 'len' 'int'
|   |-BinaryOperator 0x13f924468 <line:41:5, col:30> '<dependent type>' contains-errors '='
|   | |-ArraySubscriptExpr 0x13f924428 <col:5, col:26> '<dependent type>' contains-errors lvalue
|   | | |-ImplicitCastExpr 0x13f9243f8 <col:5, col:10> '<dependent type>' contains-errors <LValueToRValue>
|   | | | `-CXXDependentScopeMemberExpr 0x13f924348 <col:5, col:10> '<dependent type>' contains-errors lvalue ->content
|   | | |   `-RecoveryExpr 0x13f924320 <col:5> '<dependent type>' contains-errors lvalue
|   | | |     `-DeclRefExpr 0x13f924300 <col:5> 'int' lvalue ParmVar 0x14800dcf0 'buf' 'int'
|   | | `-ImplicitCastExpr 0x13f924410 <col:18, col:23> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-CXXDependentScopeMemberExpr 0x13f9243b0 <col:18, col:23> '<dependent type>' contains-errors lvalue ->use
|   | |     `-RecoveryExpr 0x13f924390 <col:18> '<dependent type>' contains-errors lvalue
|   | `-IntegerLiteral 0x13f924448 <col:30> 'int' 0
|   |-CallExpr 0x13f9245a8 <line:42:5, col:22> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x13f924568 <col:5> 'int ()' Function 0x13f9244b0 'UPDATE_COMPAT' 'int ()'
|   | `-RecoveryExpr 0x13f924588 <col:19> '<dependent type>' contains-errors lvalue
|   `-ReturnStmt 0x13f9245f0 <line:43:5, col:12>
|     `-IntegerLiteral 0x13f9245d0 <col:12> 'int' 0
`-FunctionDecl 0x13f923e20 <line:39:5> col:5 implicit used memmove 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x13f923f20 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x13f923f88 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x13f923ff0 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x13f923ec8 <<invalid sloc>> Implicit 884
