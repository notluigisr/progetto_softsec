TranslationUnitDecl 0x159055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1590564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x159055bd0 '__int128'
|-TypedefDecl 0x159056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x159055bf0 'unsigned __int128'
|-TypedefDecl 0x14900be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14900bc00 'struct __NSConstantString_tag'
|   `-Record 0x159056580 '__NSConstantString_tag'
|-TypedefDecl 0x14900be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x159055d90 '__SVInt8_t'
|-TypedefDecl 0x14900bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x159055db0 '__SVInt16_t'
|-TypedefDecl 0x14900bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x159055dd0 '__SVInt32_t'
|-TypedefDecl 0x14900bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x159055df0 '__SVInt64_t'
|-TypedefDecl 0x14900c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x159055e10 '__SVUint8_t'
|-TypedefDecl 0x14900c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x159055e30 '__SVUint16_t'
|-TypedefDecl 0x14900c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x159055e50 '__SVUint32_t'
|-TypedefDecl 0x14900c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x159055e70 '__SVUint64_t'
|-TypedefDecl 0x14900c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x159055e90 '__SVFloat16_t'
|-TypedefDecl 0x14900c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x159055eb0 '__SVFloat32_t'
|-TypedefDecl 0x14900c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x159055ed0 '__SVFloat64_t'
|-TypedefDecl 0x14900c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x159055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14900c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x159055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14900c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x159055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14900c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x159055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14900c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x159055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14900c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x159055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14900c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x159055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14900c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x159055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14900c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x159055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14900c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x159056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14900c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x159056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14900c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x159056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14900c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x159056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14900c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x159056090 '__clang_svint8x3_t'
|-TypedefDecl 0x14900c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1590560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14900c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1590560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14900c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1590560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14900c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x159056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14900ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x159056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14900cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x159056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14900cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x159056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14900cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x159056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14900d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1590561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14900d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1590561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14900d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1590561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14900d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x159056210 '__clang_svint8x4_t'
|-TypedefDecl 0x14900d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x159056230 '__clang_svint16x4_t'
|-TypedefDecl 0x14900d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x159056250 '__clang_svint32x4_t'
|-TypedefDecl 0x14900d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x159056270 '__clang_svint64x4_t'
|-TypedefDecl 0x14900d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x159056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14900d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1590562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14900d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1590562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14900d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1590562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14900d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x159056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14900d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x159056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14900d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x159056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14900d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x159056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14900da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x159056390 '__SVBool_t'
|-TypedefDecl 0x14900da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1590563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14900dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1590563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14900db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1590563f0 '__SVCount_t'
|-TypedefDecl 0x14900dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14900dbb0 'char *'
|   `-BuiltinType 0x1590556b0 'char'
|-TypedefDecl 0x14900dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14900dbb0 'char *'
|   `-BuiltinType 0x1590556b0 'char'
|-FunctionDecl 0x14900dfd8 <dataset_diviso_filec/func1728_nonvuln.c:1:1, line:37:1> line:1:5 invalid redisFormatCommandArgv 'int (char **, int, const char **, const int *)'
| |-ParmVarDecl 0x14900dd08 <col:28, col:35> col:35 used target 'char **'
| |-ParmVarDecl 0x14900dd88 <col:43, col:47> col:47 used argc 'int'
| |-ParmVarDecl 0x14900de38 <col:53, col:66> col:66 used argv 'const char **'
| |-ParmVarDecl 0x14900ded0 <col:72, col:86> col:86 invalid argvlen 'const int *'
| `-CompoundStmt 0x14902be10 <col:95, line:37:1>
|   |-DeclStmt 0x14900e158 <line:2:5, col:21>
|   | `-VarDecl 0x14900e0b8 <col:5, col:17> col:11 used cmd 'char *' cinit
|   |   `-RecoveryExpr 0x14900e138 <col:17> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x14900e1f0 <line:3:5, col:12>
|   | `-VarDecl 0x14900e188 <col:5, col:9> col:9 used pos 'int'
|   |-UnaryExprOrTypeTraitExpr 0x14900e260 <line:4:5, col:12> 'unsigned long' contains-errors sizeof
|   | `-RecoveryExpr 0x14900e240 <col:12> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x14900e398 <line:5:5, col:18>
|   | |-VarDecl 0x14900e298 <col:5, col:9> col:9 used totlen 'int'
|   | `-VarDecl 0x14900e318 <col:5, col:17> col:17 used j 'int'
|   |-IfStmt 0x1490278a8 <line:8:5, line:9:17>
|   | |-BinaryOperator 0x149027840 <line:8:9, col:19> 'int' contains-errors '=='
|   | | |-DeclRefExpr 0x14900e3b0 <col:9> 'char **' lvalue ParmVar 0x14900dd08 'target' 'char **'
|   | | `-RecoveryExpr 0x149027820 <col:19> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x149027898 <line:9:9, col:17>
|   |   `-UnaryOperator 0x149027880 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x149027860 <col:17> 'int' 1
|   |-BinaryOperator 0x149027b88 <line:12:5, col:34> 'int' '='
|   | |-DeclRefExpr 0x1490278c8 <col:5> 'int' lvalue Var 0x14900e298 'totlen' 'int'
|   | `-BinaryOperator 0x149027b68 <col:14, col:34> 'int' '+'
|   |   |-BinaryOperator 0x149027b28 <col:14, col:32> 'int' '+'
|   |   | |-IntegerLiteral 0x1490278e8 <col:14> 'int' 1
|   |   | `-CallExpr 0x149027ae8 <col:16, col:32> 'int'
|   |   |   |-ImplicitCastExpr 0x149027ad0 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x149027a60 <col:16> 'int ()' Function 0x1490279a8 'countDigits' 'int ()'
|   |   |   `-ImplicitCastExpr 0x149027b10 <col:28> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x149027a80 <col:28> 'int' lvalue ParmVar 0x14900dd88 'argc' 'int'
|   |   `-IntegerLiteral 0x149027b48 <col:34> 'int' 2
|   |-ForStmt 0x1490286f8 <line:13:5, line:16:5>
|   | |-BinaryOperator 0x149027be8 <line:13:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x149027ba8 <col:10> 'int' lvalue Var 0x14900e318 'j' 'int'
|   | | `-IntegerLiteral 0x149027bc8 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x149027c78 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x149027c48 <col:17> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x149027c08 <col:17> 'int' lvalue Var 0x14900e318 'j' 'int'
|   | | `-ImplicitCastExpr 0x149027c60 <col:21> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x149027c28 <col:21> 'int' lvalue ParmVar 0x14900dd88 'argc' 'int'
|   | |-UnaryOperator 0x149027cb8 <col:27, col:28> 'int' postfix '++'
|   | | `-DeclRefExpr 0x149027c98 <col:27> 'int' lvalue Var 0x14900e318 'j' 'int'
|   | `-CompoundStmt 0x1490286e0 <col:32, line:16:5>
|   |   `-CompoundAssignOperator 0x1490286b0 <line:15:9, col:30> 'int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |     |-DeclRefExpr 0x1490284d8 <col:9> 'int' lvalue Var 0x14900e298 'totlen' 'int'
|   |     `-CallExpr 0x149028688 <col:19, col:30> '<dependent type>' contains-errors
|   |       |-DeclRefExpr 0x1490285d8 <col:19> 'int ()' Function 0x149028520 'bulklen' 'int ()'
|   |       `-RecoveryExpr 0x149028668 <col:27> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x1490297a8 <line:19:5, col:29> 'char *' contains-errors '='
|   | |-DeclRefExpr 0x149028730 <col:5> 'char *' contains-errors lvalue Var 0x14900e0b8 'cmd' 'char *'
|   | `-ImplicitCastExpr 0x149029790 <col:11, col:29> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x149029768 <col:11, col:29> 'int'
|   |     |-ImplicitCastExpr 0x149029750 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1490296b8 <col:11> 'int ()' Function 0x149029600 'hi_malloc' 'int ()'
|   |     `-BinaryOperator 0x149029730 <col:21, col:28> 'int' '+'
|   |       |-ImplicitCastExpr 0x149029718 <col:21> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x1490296d8 <col:21> 'int' lvalue Var 0x14900e298 'totlen' 'int'
|   |       `-IntegerLiteral 0x1490296f8 <col:28> 'int' 1
|   |-IfStmt 0x1490298a8 <line:20:5, line:21:17>
|   | |-BinaryOperator 0x149029840 <line:20:9, col:16> 'int' contains-errors '=='
|   | | |-DeclRefExpr 0x1490297c8 <col:9> 'char *' contains-errors lvalue Var 0x14900e0b8 'cmd' 'char *'
|   | | `-RecoveryExpr 0x149029820 <col:16> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x149029898 <line:21:9, col:17>
|   |   `-UnaryOperator 0x149029880 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x149029860 <col:17> 'int' 1
|   |-BinaryOperator 0x149029d20 <line:23:5, col:33> 'int' contains-errors '='
|   | |-DeclRefExpr 0x1490298c8 <col:5> 'int' lvalue Var 0x14900e188 'pos' 'int'
|   | `-CallExpr 0x149029c88 <col:11, col:33> 'int' contains-errors
|   |   |-ImplicitCastExpr 0x149029c70 <col:11> 'int (*)(char *, const char *, ...)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x149029b50 <col:11> 'int (char *, const char *, ...)' Function 0x149029938 'sprintf' 'int (char *, const char *, ...)'
|   |   |-ImplicitCastExpr 0x149029cc0 <col:19> 'char *' contains-errors <LValueToRValue>
|   |   | `-DeclRefExpr 0x149029b70 <col:19> 'char *' contains-errors lvalue Var 0x14900e0b8 'cmd' 'char *'
|   |   |-ImplicitCastExpr 0x149029cf0 <col:23> 'const char *' <NoOp>
|   |   | `-ImplicitCastExpr 0x149029cd8 <col:23> 'char *' <ArrayToPointerDecay>
|   |   |   `-StringLiteral 0x149029bd0 <col:23> 'char[4]' lvalue "STR"
|   |   `-ImplicitCastExpr 0x149029d08 <col:29> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x149029bf0 <col:29> 'int' lvalue ParmVar 0x14900dd88 'argc' 'int'
|   |-ForStmt 0x14902ba38 <line:24:5, line:31:5>
|   | |-BinaryOperator 0x149029d80 <line:24:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x149029d40 <col:10> 'int' lvalue Var 0x14900e318 'j' 'int'
|   | | `-IntegerLiteral 0x149029d60 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x149029e10 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x149029de0 <col:17> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x149029da0 <col:17> 'int' lvalue Var 0x14900e318 'j' 'int'
|   | | `-ImplicitCastExpr 0x149029df8 <col:21> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x149029dc0 <col:21> 'int' lvalue ParmVar 0x14900dd88 'argc' 'int'
|   | |-UnaryOperator 0x149029e50 <col:27, col:28> 'int' postfix '++'
|   | | `-DeclRefExpr 0x149029e30 <col:27> 'int' lvalue Var 0x14900e318 'j' 'int'
|   | `-CompoundStmt 0x14902ba00 <col:32, line:31:5>
|   |   |-CompoundAssignOperator 0x14902a300 <line:26:9, col:41> 'int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |   | |-DeclRefExpr 0x14902a068 <col:9> 'int' lvalue Var 0x14900e188 'pos' 'int'
|   |   | `-CallExpr 0x14902a2c8 <col:16, col:41> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x14902a088 <col:16> 'int (char *, const char *, ...)' Function 0x149029938 'sprintf' 'int (char *, const char *, ...)'
|   |   |   |-BinaryOperator 0x14902a270 <col:24, col:28> 'char *' contains-errors '+'
|   |   |   | |-ImplicitCastExpr 0x14902a240 <col:24> 'char *' contains-errors <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x14902a0a8 <col:24> 'char *' contains-errors lvalue Var 0x14900e0b8 'cmd' 'char *'
|   |   |   | `-ImplicitCastExpr 0x14902a258 <col:28> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x14902a0c8 <col:28> 'int' lvalue Var 0x14900e188 'pos' 'int'
|   |   |   |-StringLiteral 0x14902a138 <col:32> 'char[4]' lvalue "STR"
|   |   |   `-RecoveryExpr 0x14902a290 <col:38> '<dependent type>' contains-errors lvalue
|   |   |-CallExpr 0x14902b750 <line:27:9, col:35> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x14902b400 <col:9> 'void *(void *, const void *, unsigned long)' Function 0x14902a3a8 'memcpy' 'void *(void *, const void *, unsigned long)'
|   |   | |-BinaryOperator 0x14902b690 <col:16, col:20> 'char *' contains-errors '+'
|   |   | | |-ImplicitCastExpr 0x14902b660 <col:16> 'char *' contains-errors <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x14902b420 <col:16> 'char *' contains-errors lvalue Var 0x14900e0b8 'cmd' 'char *'
|   |   | | `-ImplicitCastExpr 0x14902b678 <col:20> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x14902b440 <col:20> 'int' lvalue Var 0x14900e188 'pos' 'int'
|   |   | |-ArraySubscriptExpr 0x14902b6e0 <col:24, col:30> 'const char *' lvalue
|   |   | | |-ImplicitCastExpr 0x14902b6b0 <col:24> 'const char **' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x14902b4b0 <col:24> 'const char **' lvalue ParmVar 0x14900de38 'argv' 'const char **'
|   |   | | `-ImplicitCastExpr 0x14902b6c8 <col:29> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x14902b4d0 <col:29> 'int' lvalue Var 0x14900e318 'j' 'int'
|   |   | `-RecoveryExpr 0x14902b700 <col:32> '<dependent type>' contains-errors lvalue
|   |   |-CompoundAssignOperator 0x14902b810 <line:28:9, col:16> 'int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |   | |-DeclRefExpr 0x14902b788 <col:9> 'int' lvalue Var 0x14900e188 'pos' 'int'
|   |   | `-RecoveryExpr 0x14902b7f0 <col:16> '<dependent type>' contains-errors lvalue
|   |   |-BinaryOperator 0x14902b900 <line:29:9, col:22> 'char' contains-errors '='
|   |   | |-ArraySubscriptExpr 0x14902b8b0 <col:9, col:18> 'char' contains-errors lvalue
|   |   | | |-ImplicitCastExpr 0x14902b898 <col:9> 'char *' contains-errors <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x14902b840 <col:9> 'char *' contains-errors lvalue Var 0x14900e0b8 'cmd' 'char *'
|   |   | | `-UnaryOperator 0x14902b880 <col:13, col:16> 'int' postfix '++'
|   |   | |   `-DeclRefExpr 0x14902b860 <col:13> 'int' lvalue Var 0x14900e188 'pos' 'int'
|   |   | `-ImplicitCastExpr 0x14902b8e8 <col:22> 'char' <IntegralCast>
|   |   |   `-CharacterLiteral 0x14902b8d0 <col:22> 'int' 13
|   |   `-BinaryOperator 0x14902b9e0 <line:30:9, col:22> 'char' contains-errors '='
|   |     |-ArraySubscriptExpr 0x14902b990 <col:9, col:18> 'char' contains-errors lvalue
|   |     | |-ImplicitCastExpr 0x14902b978 <col:9> 'char *' contains-errors <LValueToRValue>
|   |     | | `-DeclRefExpr 0x14902b920 <col:9> 'char *' contains-errors lvalue Var 0x14900e0b8 'cmd' 'char *'
|   |     | `-UnaryOperator 0x14902b960 <col:13, col:16> 'int' postfix '++'
|   |     |   `-DeclRefExpr 0x14902b940 <col:13> 'int' lvalue Var 0x14900e188 'pos' 'int'
|   |     `-ImplicitCastExpr 0x14902b9c8 <col:22> 'char' <IntegralCast>
|   |       `-CharacterLiteral 0x14902b9b0 <col:22> 'int' 10
|   |-CallExpr 0x14902bc18 <line:32:5, col:25> 'int'
|   | |-ImplicitCastExpr 0x14902bc00 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x14902bb50 <col:5> 'int ()' Function 0x14902ba98 'assert' 'int ()'
|   | `-BinaryOperator 0x14902bbe0 <col:12, col:19> 'int' '=='
|   |   |-ImplicitCastExpr 0x14902bbb0 <col:12> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x14902bb70 <col:12> 'int' lvalue Var 0x14900e188 'pos' 'int'
|   |   `-ImplicitCastExpr 0x14902bbc8 <col:19> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x14902bb90 <col:19> 'int' lvalue Var 0x14900e298 'totlen' 'int'
|   |-BinaryOperator 0x14902bd00 <line:33:5, col:16> 'char' contains-errors '='
|   | |-ArraySubscriptExpr 0x14902bcb0 <col:5, col:12> 'char' contains-errors lvalue
|   | | |-ImplicitCastExpr 0x14902bc80 <col:5> 'char *' contains-errors <LValueToRValue>
|   | | | `-DeclRefExpr 0x14902bc40 <col:5> 'char *' contains-errors lvalue Var 0x14900e0b8 'cmd' 'char *'
|   | | `-ImplicitCastExpr 0x14902bc98 <col:9> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x14902bc60 <col:9> 'int' lvalue Var 0x14900e188 'pos' 'int'
|   | `-ImplicitCastExpr 0x14902bce8 <col:16> 'char' <IntegralCast>
|   |   `-CharacterLiteral 0x14902bcd0 <col:16> 'int' 0
|   |-BinaryOperator 0x14902bda8 <line:35:5, col:15> 'char *' contains-errors '='
|   | |-UnaryOperator 0x14902bd58 <col:5, col:6> 'char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x14902bd40 <col:6> 'char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x14902bd20 <col:6> 'char **' lvalue ParmVar 0x14900dd08 'target' 'char **'
|   | `-ImplicitCastExpr 0x14902bd90 <col:15> 'char *' contains-errors <LValueToRValue>
|   |   `-DeclRefExpr 0x14902bd70 <col:15> 'char *' contains-errors lvalue Var 0x14900e0b8 'cmd' 'char *'
|   `-ReturnStmt 0x14902be00 <line:36:5, col:12>
|     `-ImplicitCastExpr 0x14902bde8 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x14902bdc8 <col:12> 'int' lvalue Var 0x14900e298 'totlen' 'int'
|-FunctionDecl 0x1490281e0 <line:14:38> col:38 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x1490282e0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x149028288 <<invalid sloc>> Implicit 902
|-FunctionDecl 0x149029938 <line:23:11> col:11 implicit used sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x149029a38 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x149029aa0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-BuiltinAttr 0x1490299e0 <<invalid sloc>> Implicit 906
| `-FormatAttr 0x149029b18 <col:11> Implicit printf 2 3
`-FunctionDecl 0x14902a3a8 <line:27:9> col:9 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x14902a4a8 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x14902a510 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x14902a578 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x14902a450 <<invalid sloc>> Implicit 882
