TranslationUnitDecl 0x12d840808 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12d8416b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12d840dd0 '__int128'
|-TypedefDecl 0x12d841728 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12d840df0 'unsigned __int128'
|-TypedefDecl 0x12d911430 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12d911200 'struct __NSConstantString_tag'
|   `-Record 0x12d841780 '__NSConstantString_tag'
|-TypedefDecl 0x12d911498 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12d840f90 '__SVInt8_t'
|-TypedefDecl 0x12d911500 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12d840fb0 '__SVInt16_t'
|-TypedefDecl 0x12d911568 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12d840fd0 '__SVInt32_t'
|-TypedefDecl 0x12d9115d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12d840ff0 '__SVInt64_t'
|-TypedefDecl 0x12d911638 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12d841010 '__SVUint8_t'
|-TypedefDecl 0x12d9116a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12d841030 '__SVUint16_t'
|-TypedefDecl 0x12d911708 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12d841050 '__SVUint32_t'
|-TypedefDecl 0x12d911770 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12d841070 '__SVUint64_t'
|-TypedefDecl 0x12d9117d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12d841090 '__SVFloat16_t'
|-TypedefDecl 0x12d911840 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12d8410b0 '__SVFloat32_t'
|-TypedefDecl 0x12d9118a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12d8410d0 '__SVFloat64_t'
|-TypedefDecl 0x12d911910 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12d8410f0 '__SVBfloat16_t'
|-TypedefDecl 0x12d911978 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12d841110 '__clang_svint8x2_t'
|-TypedefDecl 0x12d9119e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12d841130 '__clang_svint16x2_t'
|-TypedefDecl 0x12d911a48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12d841150 '__clang_svint32x2_t'
|-TypedefDecl 0x12d911ab0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12d841170 '__clang_svint64x2_t'
|-TypedefDecl 0x12d911b18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12d841190 '__clang_svuint8x2_t'
|-TypedefDecl 0x12d911b80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12d8411b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12d911be8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12d8411d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12d911c50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12d8411f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12d911cb8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12d841210 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12d911d20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12d841230 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12d911d88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12d841250 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12d911df0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12d841270 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12d911e58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12d841290 '__clang_svint8x3_t'
|-TypedefDecl 0x12d911ec0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12d8412b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12d911f28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12d8412d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12d911f90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12d8412f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12d911ff8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12d841310 '__clang_svuint8x3_t'
|-TypedefDecl 0x12d912060 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12d841330 '__clang_svuint16x3_t'
|-TypedefDecl 0x12d9120c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12d841350 '__clang_svuint32x3_t'
|-TypedefDecl 0x12d912130 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12d841370 '__clang_svuint64x3_t'
|-TypedefDecl 0x12d912198 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12d841390 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12d912a00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12d8413b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12d912a68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12d8413d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12d912ad0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12d8413f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12d912b38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12d841410 '__clang_svint8x4_t'
|-TypedefDecl 0x12d912ba0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12d841430 '__clang_svint16x4_t'
|-TypedefDecl 0x12d912c08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12d841450 '__clang_svint32x4_t'
|-TypedefDecl 0x12d912c70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12d841470 '__clang_svint64x4_t'
|-TypedefDecl 0x12d912cd8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12d841490 '__clang_svuint8x4_t'
|-TypedefDecl 0x12d912d40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12d8414b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12d912da8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12d8414d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12d912e10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12d8414f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12d912e78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12d841510 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12d912ee0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12d841530 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12d912f48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12d841550 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12d912fb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12d841570 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12d913018 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12d841590 '__SVBool_t'
|-TypedefDecl 0x12d913080 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12d8415b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12d9130e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12d8415d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12d913150 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12d8415f0 '__SVCount_t'
|-TypedefDecl 0x12d9131f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12d9131b0 'char *'
|   `-BuiltinType 0x12d8408b0 'char'
|-TypedefDecl 0x12d913268 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12d9131b0 'char *'
|   `-BuiltinType 0x12d8408b0 'char'
`-FunctionDecl 0x12d9133a8 <dataset_diviso_filec/func23066_nonvuln.c:1:1, line:26:1> line:1:6 invalid test_r_str_ansi_len 'int (void)'
  `-CompoundStmt 0x12d92d498 <col:32, line:26:1>
    |-DeclStmt 0x12d9134d0 <line:2:2, col:9>
    | `-VarDecl 0x12d913468 <col:2, col:6> col:6 used len 'int'
    |-BinaryOperator 0x12d913768 <line:4:2, col:29> 'int' '='
    | |-DeclRefExpr 0x12d9134e8 <col:2> 'int' lvalue Var 0x12d913468 'len' 'int'
    | `-CallExpr 0x12d913728 <col:8, col:29> 'int'
    |   |-ImplicitCastExpr 0x12d913710 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x12d913660 <col:8> 'int ()' Function 0x12d9135a8 'r_str_ansi_len' 'int ()'
    |   `-ImplicitCastExpr 0x12d913750 <col:24> 'char *' <ArrayToPointerDecay>
    |     `-StringLiteral 0x12d9136c0 <col:24> 'char[4]' lvalue "STR"
    |-CallExpr 0x12d913900 <line:5:2, col:29> 'int'
    | |-ImplicitCastExpr 0x12d9138e8 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x12d913868 <col:2> 'int ()' Function 0x12d9137b0 'mu_assert_eq' 'int ()'
    | |-ImplicitCastExpr 0x12d913938 <col:16> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x12d913888 <col:16> 'int' lvalue Var 0x12d913468 'len' 'int'
    | |-IntegerLiteral 0x12d9138a8 <col:21> 'int' 7
    | `-ImplicitCastExpr 0x12d913950 <col:24> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x12d9138c8 <col:24> 'char[4]' lvalue "STR"
    |-BinaryOperator 0x12d92ca40 <line:7:2, col:29> 'int' '='
    | |-DeclRefExpr 0x12d913968 <col:2> 'int' lvalue Var 0x12d913468 'len' 'int'
    | `-CallExpr 0x12d92ca00 <col:8, col:29> 'int'
    |   |-ImplicitCastExpr 0x12d9139c8 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x12d913988 <col:8> 'int ()' Function 0x12d9135a8 'r_str_ansi_len' 'int ()'
    |   `-ImplicitCastExpr 0x12d92ca28 <col:24> 'char *' <ArrayToPointerDecay>
    |     `-StringLiteral 0x12d9139a8 <col:24> 'char[4]' lvalue "STR"
    |-CallExpr 0x12d92caf8 <line:8:2, col:29> 'int'
    | |-ImplicitCastExpr 0x12d92cae0 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x12d92ca60 <col:2> 'int ()' Function 0x12d9137b0 'mu_assert_eq' 'int ()'
    | |-ImplicitCastExpr 0x12d92cb30 <col:16> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x12d92ca80 <col:16> 'int' lvalue Var 0x12d913468 'len' 'int'
    | |-IntegerLiteral 0x12d92caa0 <col:21> 'int' 7
    | `-ImplicitCastExpr 0x12d92cb48 <col:24> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x12d92cac0 <col:24> 'char[4]' lvalue "STR"
    |-BinaryOperator 0x12d92cc18 <line:10:2, col:29> 'int' '='
    | |-DeclRefExpr 0x12d92cb60 <col:2> 'int' lvalue Var 0x12d913468 'len' 'int'
    | `-CallExpr 0x12d92cbd8 <col:8, col:29> 'int'
    |   |-ImplicitCastExpr 0x12d92cbc0 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x12d92cb80 <col:8> 'int ()' Function 0x12d9135a8 'r_str_ansi_len' 'int ()'
    |   `-ImplicitCastExpr 0x12d92cc00 <col:24> 'char *' <ArrayToPointerDecay>
    |     `-StringLiteral 0x12d92cba0 <col:24> 'char[4]' lvalue "STR"
    |-CallExpr 0x12d92ccd0 <line:11:2, col:29> 'int'
    | |-ImplicitCastExpr 0x12d92ccb8 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x12d92cc38 <col:2> 'int ()' Function 0x12d9137b0 'mu_assert_eq' 'int ()'
    | |-ImplicitCastExpr 0x12d92cd08 <col:16> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x12d92cc58 <col:16> 'int' lvalue Var 0x12d913468 'len' 'int'
    | |-IntegerLiteral 0x12d92cc78 <col:21> 'int' 7
    | `-ImplicitCastExpr 0x12d92cd20 <col:24> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x12d92cc98 <col:24> 'char[4]' lvalue "STR"
    |-BinaryOperator 0x12d92cdf0 <line:13:2, col:29> 'int' '='
    | |-DeclRefExpr 0x12d92cd38 <col:2> 'int' lvalue Var 0x12d913468 'len' 'int'
    | `-CallExpr 0x12d92cdb0 <col:8, col:29> 'int'
    |   |-ImplicitCastExpr 0x12d92cd98 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x12d92cd58 <col:8> 'int ()' Function 0x12d9135a8 'r_str_ansi_len' 'int ()'
    |   `-ImplicitCastExpr 0x12d92cdd8 <col:24> 'char *' <ArrayToPointerDecay>
    |     `-StringLiteral 0x12d92cd78 <col:24> 'char[4]' lvalue "STR"
    |-CallExpr 0x12d92cea8 <line:14:2, col:29> 'int'
    | |-ImplicitCastExpr 0x12d92ce90 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x12d92ce10 <col:2> 'int ()' Function 0x12d9137b0 'mu_assert_eq' 'int ()'
    | |-ImplicitCastExpr 0x12d92cee0 <col:16> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x12d92ce30 <col:16> 'int' lvalue Var 0x12d913468 'len' 'int'
    | |-IntegerLiteral 0x12d92ce50 <col:21> 'int' 7
    | `-ImplicitCastExpr 0x12d92cef8 <col:24> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x12d92ce70 <col:24> 'char[4]' lvalue "STR"
    |-BinaryOperator 0x12d92cfc8 <line:16:2, col:29> 'int' '='
    | |-DeclRefExpr 0x12d92cf10 <col:2> 'int' lvalue Var 0x12d913468 'len' 'int'
    | `-CallExpr 0x12d92cf88 <col:8, col:29> 'int'
    |   |-ImplicitCastExpr 0x12d92cf70 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x12d92cf30 <col:8> 'int ()' Function 0x12d9135a8 'r_str_ansi_len' 'int ()'
    |   `-ImplicitCastExpr 0x12d92cfb0 <col:24> 'char *' <ArrayToPointerDecay>
    |     `-StringLiteral 0x12d92cf50 <col:24> 'char[4]' lvalue "STR"
    |-CallExpr 0x12d92d080 <line:17:2, col:29> 'int'
    | |-ImplicitCastExpr 0x12d92d068 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x12d92cfe8 <col:2> 'int ()' Function 0x12d9137b0 'mu_assert_eq' 'int ()'
    | |-ImplicitCastExpr 0x12d92d0b8 <col:16> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x12d92d008 <col:16> 'int' lvalue Var 0x12d913468 'len' 'int'
    | |-IntegerLiteral 0x12d92d028 <col:21> 'int' 8
    | `-ImplicitCastExpr 0x12d92d0d0 <col:24> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x12d92d048 <col:24> 'char[4]' lvalue "STR"
    |-BinaryOperator 0x12d92d1a0 <line:19:2, col:29> 'int' '='
    | |-DeclRefExpr 0x12d92d0e8 <col:2> 'int' lvalue Var 0x12d913468 'len' 'int'
    | `-CallExpr 0x12d92d160 <col:8, col:29> 'int'
    |   |-ImplicitCastExpr 0x12d92d148 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x12d92d108 <col:8> 'int ()' Function 0x12d9135a8 'r_str_ansi_len' 'int ()'
    |   `-ImplicitCastExpr 0x12d92d188 <col:24> 'char *' <ArrayToPointerDecay>
    |     `-StringLiteral 0x12d92d128 <col:24> 'char[4]' lvalue "STR"
    |-CallExpr 0x12d92d258 <line:20:2, col:29> 'int'
    | |-ImplicitCastExpr 0x12d92d240 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x12d92d1c0 <col:2> 'int ()' Function 0x12d9137b0 'mu_assert_eq' 'int ()'
    | |-ImplicitCastExpr 0x12d92d290 <col:16> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x12d92d1e0 <col:16> 'int' lvalue Var 0x12d913468 'len' 'int'
    | |-IntegerLiteral 0x12d92d200 <col:21> 'int' 9
    | `-ImplicitCastExpr 0x12d92d2a8 <col:24> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x12d92d220 <col:24> 'char[4]' lvalue "STR"
    |-BinaryOperator 0x12d92d378 <line:22:2, col:29> 'int' '='
    | |-DeclRefExpr 0x12d92d2c0 <col:2> 'int' lvalue Var 0x12d913468 'len' 'int'
    | `-CallExpr 0x12d92d338 <col:8, col:29> 'int'
    |   |-ImplicitCastExpr 0x12d92d320 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x12d92d2e0 <col:8> 'int ()' Function 0x12d9135a8 'r_str_ansi_len' 'int ()'
    |   `-ImplicitCastExpr 0x12d92d360 <col:24> 'char *' <ArrayToPointerDecay>
    |     `-StringLiteral 0x12d92d300 <col:24> 'char[4]' lvalue "STR"
    `-CallExpr 0x12d92d430 <line:23:2, col:30> 'int'
      |-ImplicitCastExpr 0x12d92d418 <col:2> 'int (*)()' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x12d92d398 <col:2> 'int ()' Function 0x12d9137b0 'mu_assert_eq' 'int ()'
      |-ImplicitCastExpr 0x12d92d468 <col:16> 'int' <LValueToRValue>
      | `-DeclRefExpr 0x12d92d3b8 <col:16> 'int' lvalue Var 0x12d913468 'len' 'int'
      |-IntegerLiteral 0x12d92d3d8 <col:21> 'int' 10
      `-ImplicitCastExpr 0x12d92d480 <col:25> 'char *' <ArrayToPointerDecay>
        `-StringLiteral 0x12d92d3f8 <col:25> 'char[4]' lvalue "STR"
