TranslationUnitDecl 0x141031408 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1410322b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1410319d0 '__int128'
|-TypedefDecl 0x141032328 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1410319f0 'unsigned __int128'
|-TypedefDecl 0x14081d230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14081d000 'struct __NSConstantString_tag'
|   `-Record 0x141032380 '__NSConstantString_tag'
|-TypedefDecl 0x14081d298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x141031b90 '__SVInt8_t'
|-TypedefDecl 0x14081d300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x141031bb0 '__SVInt16_t'
|-TypedefDecl 0x14081d368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x141031bd0 '__SVInt32_t'
|-TypedefDecl 0x14081d3d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x141031bf0 '__SVInt64_t'
|-TypedefDecl 0x14081d438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x141031c10 '__SVUint8_t'
|-TypedefDecl 0x14081d4a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x141031c30 '__SVUint16_t'
|-TypedefDecl 0x14081d508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x141031c50 '__SVUint32_t'
|-TypedefDecl 0x14081d570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x141031c70 '__SVUint64_t'
|-TypedefDecl 0x14081d5d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x141031c90 '__SVFloat16_t'
|-TypedefDecl 0x14081d640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x141031cb0 '__SVFloat32_t'
|-TypedefDecl 0x14081d6a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x141031cd0 '__SVFloat64_t'
|-TypedefDecl 0x14081d710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x141031cf0 '__SVBfloat16_t'
|-TypedefDecl 0x14081d778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x141031d10 '__clang_svint8x2_t'
|-TypedefDecl 0x14081d7e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x141031d30 '__clang_svint16x2_t'
|-TypedefDecl 0x14081d848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x141031d50 '__clang_svint32x2_t'
|-TypedefDecl 0x14081d8b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x141031d70 '__clang_svint64x2_t'
|-TypedefDecl 0x14081d918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x141031d90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14081d980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x141031db0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14081d9e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x141031dd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14081da50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x141031df0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14081dab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x141031e10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14081db20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x141031e30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14081db88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x141031e50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14081dbf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x141031e70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14081dc58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x141031e90 '__clang_svint8x3_t'
|-TypedefDecl 0x14081dcc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x141031eb0 '__clang_svint16x3_t'
|-TypedefDecl 0x14081dd28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x141031ed0 '__clang_svint32x3_t'
|-TypedefDecl 0x14081dd90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x141031ef0 '__clang_svint64x3_t'
|-TypedefDecl 0x14081ddf8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x141031f10 '__clang_svuint8x3_t'
|-TypedefDecl 0x14081de60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x141031f30 '__clang_svuint16x3_t'
|-TypedefDecl 0x14081dec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x141031f50 '__clang_svuint32x3_t'
|-TypedefDecl 0x14081df30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x141031f70 '__clang_svuint64x3_t'
|-TypedefDecl 0x14081df98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x141031f90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14081e000 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x141031fb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14081e068 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x141031fd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14081e0d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x141031ff0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14081e138 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x141032010 '__clang_svint8x4_t'
|-TypedefDecl 0x14081e1a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x141032030 '__clang_svint16x4_t'
|-TypedefDecl 0x14081e208 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x141032050 '__clang_svint32x4_t'
|-TypedefDecl 0x14081e270 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x141032070 '__clang_svint64x4_t'
|-TypedefDecl 0x14081e2d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x141032090 '__clang_svuint8x4_t'
|-TypedefDecl 0x14081e340 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1410320b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14081e3a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1410320d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14081e410 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1410320f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14081e478 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x141032110 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14081e4e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x141032130 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14081e548 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x141032150 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14081e5b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x141032170 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14081e618 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x141032190 '__SVBool_t'
|-TypedefDecl 0x14081e680 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1410321b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14081e6e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1410321d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14081e750 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1410321f0 '__SVCount_t'
|-TypedefDecl 0x14081e7f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14081e7b0 'char *'
|   `-BuiltinType 0x1410314b0 'char'
|-TypedefDecl 0x14081e868 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14081e7b0 'char *'
|   `-BuiltinType 0x1410314b0 'char'
|-FunctionDecl 0x14081ea88 <dataset_diviso_filec/func4414_vuln.c:1:1, line:40:1> line:1:19 invalid SWTPM_NVRAM_Lock_Lockfile 'int (const char *, int *)' static
| |-ParmVarDecl 0x14081e8f0 <col:45, col:57> col:57 used directory 'const char *'
| |-ParmVarDecl 0x14081e9a8 <line:2:45, col:50> col:50 used fd 'int *'
| `-CompoundStmt 0x140853970 <line:3:1, line:40:1>
|   |-DeclStmt 0x14081ebf8 <line:5:5, col:26>
|   | `-VarDecl 0x14081eb58 <col:5, col:22> col:11 used lockfile 'char *' cinit
|   |   `-RecoveryExpr 0x14081ebd8 <col:22> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x14084fd18 <line:6:5, line:11:6>
|   | |-RecordDecl 0x14081ec10 <line:6:5, col:12> col:12 struct flock
|   | `-VarDecl 0x14081ed08 <col:5, col:18> col:18 invalid flock 'struct flock'
|   |-IfStmt 0x140850320 <line:13:5, line:17:5>
|   | |-BinaryOperator 0x1408500e0 <line:13:9, col:49> 'int' contains-errors '<'
|   | | |-CallExpr 0x140850058 <col:9, col:45> 'int' contains-errors
|   | | | |-ImplicitCastExpr 0x140850040 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x14084fef8 <col:9> 'int ()' Function 0x14084fdd8 'asprintf' 'int ()'
|   | | | |-UnaryOperator 0x14084ff70 <col:18, col:19> 'char **' contains-errors prefix '&' cannot overflow
|   | | | | `-DeclRefExpr 0x14084ff18 <col:19> 'char *' contains-errors lvalue Var 0x14081eb58 'lockfile' 'char *'
|   | | | |-ImplicitCastExpr 0x140850090 <col:29> 'char *' <ArrayToPointerDecay>
|   | | | | `-StringLiteral 0x14084ffd0 <col:29> 'char[4]' lvalue "STR"
|   | | | `-ImplicitCastExpr 0x1408500a8 <col:36> 'const char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x14084fff0 <col:36> 'const char *' lvalue ParmVar 0x14081e8f0 'directory' 'const char *'
|   | | `-IntegerLiteral 0x1408500c0 <col:49> 'int' 0
|   | `-CompoundStmt 0x140850300 <col:52, line:17:5>
|   |   |-CallExpr 0x140850288 <line:14:9, line:15:24> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x1408501e0 <line:14:9> 'int ()' Function 0x140850128 'logprintf' 'int ()'
|   |   | |-RecoveryExpr 0x140850268 <col:19> '<dependent type>' contains-errors lvalue
|   |   | `-StringLiteral 0x140850218 <line:15:19> 'char[4]' lvalue "STR"
|   |   `-ReturnStmt 0x1408502f0 <line:16:9, col:16>
|   |     `-RecoveryExpr 0x1408502d0 <col:16> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x1408506e8 <line:19:5, col:56> 'int' contains-errors '='
|   | |-UnaryOperator 0x1408505f8 <col:5, col:6> 'int' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x1408505e0 <col:6> 'int *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x140850340 <col:6> 'int *' lvalue ParmVar 0x14081e9a8 'fd' 'int *'
|   | `-CallExpr 0x1408506b0 <col:11, col:56> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x140850470 <col:11> 'int ()' Function 0x1408503b8 'open' 'int ()'
|   |   |-DeclRefExpr 0x140850490 <col:16> 'char *' contains-errors lvalue Var 0x14081eb58 'lockfile' 'char *'
|   |   |-BinaryOperator 0x140850690 <col:26, col:43> '<dependent type>' contains-errors '|'
|   |   | |-BinaryOperator 0x140850650 <col:26, col:35> '<dependent type>' contains-errors '|'
|   |   | | |-RecoveryExpr 0x140850610 <col:26> '<dependent type>' contains-errors lvalue
|   |   | | `-RecoveryExpr 0x140850630 <col:35> '<dependent type>' contains-errors lvalue
|   |   | `-RecoveryExpr 0x140850670 <col:43> '<dependent type>' contains-errors lvalue
|   |   `-IntegerLiteral 0x140850538 <col:52> 'int' 432
|   |-IfStmt 0x1408531d0 <line:20:5, line:26:5>
|   | |-BinaryOperator 0x140850790 <line:20:9, col:15> 'int' '<'
|   | | |-ImplicitCastExpr 0x140850778 <col:9, col:10> 'int' <LValueToRValue>
|   | | | `-UnaryOperator 0x140850740 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
|   | | |   `-ImplicitCastExpr 0x140850728 <col:10> 'int *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x140850708 <col:10> 'int *' lvalue ParmVar 0x14081e9a8 'fd' 'int *'
|   | | `-IntegerLiteral 0x140850758 <col:15> 'int' 0
|   | `-CompoundStmt 0x1408531b0 <col:18, line:26:5>
|   |   |-CallExpr 0x1408530f8 <line:21:9, line:23:34> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x1408507b0 <line:21:9> 'int ()' Function 0x140850128 'logprintf' 'int ()'
|   |   | |-RecoveryExpr 0x140853078 <col:19> '<dependent type>' contains-errors lvalue
|   |   | |-StringLiteral 0x1408507e8 <line:22:19> 'char[4]' lvalue "STR"
|   |   | `-CallExpr 0x1408530d0 <line:23:19, col:33> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x1408509b8 <col:19> 'char *(int)' Function 0x140850848 'strerror' 'char *(int)'
|   |   |   `-RecoveryExpr 0x140853098 <col:28> '<dependent type>' contains-errors lvalue
|   |   `-GotoStmt 0x140853198 <line:25:9, col:14> 'exit' 0x140853148
|   |-IfStmt 0x140853688 <line:28:5, line:35:5>
|   | |-RecoveryExpr 0x140853398 <line:28:9, col:39> '_Bool' contains-errors
|   | `-CompoundStmt 0x140853668 <col:42, line:35:5>
|   |   |-CallExpr 0x140853580 <line:33:9, col:18> 'int'
|   |   | |-ImplicitCastExpr 0x140853568 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1408534f8 <col:9> 'int ()' Function 0x140853440 'close' 'int ()'
|   |   | `-ImplicitCastExpr 0x1408535a8 <col:15, col:16> 'int' <LValueToRValue>
|   |   |   `-UnaryOperator 0x140853550 <col:15, col:16> 'int' lvalue prefix '*' cannot overflow
|   |   |     `-ImplicitCastExpr 0x140853538 <col:16> 'int *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x140853518 <col:16> 'int *' lvalue ParmVar 0x14081e9a8 'fd' 'int *'
|   |   `-BinaryOperator 0x140853648 <line:34:9, col:16> 'int' '='
|   |     |-UnaryOperator 0x1408535f8 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
|   |     | `-ImplicitCastExpr 0x1408535e0 <col:10> 'int *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x1408535c0 <col:10> 'int *' lvalue ParmVar 0x14081e9a8 'fd' 'int *'
|   |     `-UnaryOperator 0x140853630 <col:15, col:16> 'int' prefix '-'
|   |       `-IntegerLiteral 0x140853610 <col:16> 'int' 1
|   `-LabelStmt 0x140853950 <line:36:1, line:37:18> 'exit'
|     `-CallExpr 0x1408538f8 <col:5, col:18> 'void' contains-errors
|       |-ImplicitCastExpr 0x1408538e0 <col:5> 'void (*)(void *)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x140853858 <col:5> 'void (void *)' Function 0x1408536e8 'free' 'void (void *)'
|       `-ImplicitCastExpr 0x140853938 <col:10> 'void *' contains-errors <BitCast>
|         `-ImplicitCastExpr 0x140853920 <col:10> 'char *' contains-errors <LValueToRValue>
|           `-DeclRefExpr 0x140853878 <col:10> 'char *' contains-errors lvalue Var 0x14081eb58 'lockfile' 'char *'
|-FunctionDecl 0x140850848 <line:23:19> col:19 implicit used strerror 'char *(int)' extern
| |-ParmVarDecl 0x140850948 <<invalid sloc>> <invalid sloc> 'int'
| `-BuiltinAttr 0x1408508f0 <<invalid sloc>> Implicit 901
`-FunctionDecl 0x1408536e8 <line:37:5> col:5 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x1408537e8 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x140853790 <<invalid sloc>> Implicit 873
