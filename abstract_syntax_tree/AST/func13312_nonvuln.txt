TranslationUnitDecl 0x123031008 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x123031eb8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1230315d0 '__int128'
|-TypedefDecl 0x123031f28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1230315f0 'unsigned __int128'
|-TypedefDecl 0x123102030 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x123101e00 'struct __NSConstantString_tag'
|   `-Record 0x123031f80 '__NSConstantString_tag'
|-TypedefDecl 0x123102098 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x123031790 '__SVInt8_t'
|-TypedefDecl 0x123102100 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x1230317b0 '__SVInt16_t'
|-TypedefDecl 0x123102168 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x1230317d0 '__SVInt32_t'
|-TypedefDecl 0x1231021d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x1230317f0 '__SVInt64_t'
|-TypedefDecl 0x123102238 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x123031810 '__SVUint8_t'
|-TypedefDecl 0x1231022a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x123031830 '__SVUint16_t'
|-TypedefDecl 0x123102308 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x123031850 '__SVUint32_t'
|-TypedefDecl 0x123102370 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x123031870 '__SVUint64_t'
|-TypedefDecl 0x1231023d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x123031890 '__SVFloat16_t'
|-TypedefDecl 0x123102440 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x1230318b0 '__SVFloat32_t'
|-TypedefDecl 0x1231024a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x1230318d0 '__SVFloat64_t'
|-TypedefDecl 0x123102510 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x1230318f0 '__SVBfloat16_t'
|-TypedefDecl 0x123102578 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x123031910 '__clang_svint8x2_t'
|-TypedefDecl 0x1231025e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x123031930 '__clang_svint16x2_t'
|-TypedefDecl 0x123102648 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x123031950 '__clang_svint32x2_t'
|-TypedefDecl 0x1231026b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x123031970 '__clang_svint64x2_t'
|-TypedefDecl 0x123102718 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x123031990 '__clang_svuint8x2_t'
|-TypedefDecl 0x123102780 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x1230319b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1231027e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x1230319d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x123102850 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x1230319f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1231028b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x123031a10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x123102920 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x123031a30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x123102988 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x123031a50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1231029f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x123031a70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x123102a58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x123031a90 '__clang_svint8x3_t'
|-TypedefDecl 0x123102ac0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x123031ab0 '__clang_svint16x3_t'
|-TypedefDecl 0x123102b28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x123031ad0 '__clang_svint32x3_t'
|-TypedefDecl 0x123102b90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x123031af0 '__clang_svint64x3_t'
|-TypedefDecl 0x123102bf8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x123031b10 '__clang_svuint8x3_t'
|-TypedefDecl 0x123102c60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x123031b30 '__clang_svuint16x3_t'
|-TypedefDecl 0x123102cc8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x123031b50 '__clang_svuint32x3_t'
|-TypedefDecl 0x123102d30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x123031b70 '__clang_svuint64x3_t'
|-TypedefDecl 0x123102d98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x123031b90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x123103600 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x123031bb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x123103668 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x123031bd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1231036d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x123031bf0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x123103738 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x123031c10 '__clang_svint8x4_t'
|-TypedefDecl 0x1231037a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x123031c30 '__clang_svint16x4_t'
|-TypedefDecl 0x123103808 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x123031c50 '__clang_svint32x4_t'
|-TypedefDecl 0x123103870 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x123031c70 '__clang_svint64x4_t'
|-TypedefDecl 0x1231038d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x123031c90 '__clang_svuint8x4_t'
|-TypedefDecl 0x123103940 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x123031cb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1231039a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x123031cd0 '__clang_svuint32x4_t'
|-TypedefDecl 0x123103a10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x123031cf0 '__clang_svuint64x4_t'
|-TypedefDecl 0x123103a78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x123031d10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x123103ae0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x123031d30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x123103b48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x123031d50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x123103bb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x123031d70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x123103c18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x123031d90 '__SVBool_t'
|-TypedefDecl 0x123103c80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x123031db0 '__clang_svboolx2_t'
|-TypedefDecl 0x123103ce8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x123031dd0 '__clang_svboolx4_t'
|-TypedefDecl 0x123103d50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x123031df0 '__SVCount_t'
|-TypedefDecl 0x123103df8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x123103db0 'char *'
|   `-BuiltinType 0x1230310b0 'char'
|-TypedefDecl 0x123103e68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x123103db0 'char *'
|   `-BuiltinType 0x1230310b0 'char'
`-FunctionDecl 0x123103ff8 <dataset_diviso_filec/func13312_nonvuln.c:1:1, line:38:1> line:1:1 invalid scan_env_add_mem_entry 'int (int *)'
  |-ParmVarDecl 0x123103f28 <col:24, col:33> col:33 referenced invalid env 'int *'
  `-CompoundStmt 0x122841008 <line:2:1, line:38:1>
    |-DeclStmt 0x123104248 <line:3:3, col:21>
    | |-VarDecl 0x1231040c0 <col:3, col:7> col:7 used i 'int'
    | |-VarDecl 0x123104140 <col:3, col:10> col:10 used need 'int'
    | `-VarDecl 0x1231041c0 <col:3, col:16> col:16 used alloc 'int'
    |-BinaryOperator 0x123104340 <line:6:3, col:25> 'int' contains-errors '='
    | |-DeclRefExpr 0x123104278 <col:3> 'int' lvalue Var 0x123104140 'need' 'int'
    | `-BinaryOperator 0x123104320 <col:10, col:25> '<dependent type>' contains-errors '+'
    |   |-CXXDependentScopeMemberExpr 0x1231042b8 <col:10, col:15> '<dependent type>' contains-errors lvalue ->num_mem
    |   | `-RecoveryExpr 0x123104298 <col:10> '<dependent type>' contains-errors lvalue
    |   `-IntegerLiteral 0x123104300 <col:25> 'int' 1
    |-IfStmt 0x123104518 <line:7:3, line:8:12>
    | |-BinaryOperator 0x1231044b0 <line:7:7, col:48> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x123104450 <col:7, col:14> 'int' contains-errors '>'
    | | | |-DeclRefExpr 0x123104360 <col:7> 'int' lvalue Var 0x123104140 'need' 'int'
    | | | `-RecoveryExpr 0x123104430 <col:14> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x123104490 <col:31, col:48> 'int' contains-errors '!='
    | |   |-RecoveryExpr 0x123104470 <col:31> '<dependent type>' contains-errors lvalue
    | |   `-IntegerLiteral 0x1231043d0 <col:48> 'int' 0
    | `-ReturnStmt 0x123104508 <line:8:5, col:12>
    |   `-RecoveryExpr 0x1231044e8 <col:12> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x122840ec8 <line:10:3, line:34:3>
    | |-BinaryOperator 0x1231045b0 <line:10:7, col:15> 'int' contains-errors '>='
    | | |-DeclRefExpr 0x123104538 <col:7> 'int' lvalue Var 0x123104140 'need' 'int'
    | | `-RecoveryExpr 0x123104590 <col:15> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x122840eb0 <col:36, line:34:3>
    |   `-IfStmt 0x122840e90 <line:11:5, line:33:5>
    |     |-BinaryOperator 0x122840268 <line:11:9, col:27> 'int' contains-errors '<='
    |     | |-CXXDependentScopeMemberExpr 0x122840200 <col:9, col:14> '<dependent type>' contains-errors lvalue ->mem_alloc
    |     | | `-RecoveryExpr 0x1231045d0 <col:9> '<dependent type>' contains-errors lvalue
    |     | `-DeclRefExpr 0x122840248 <col:27> 'int' lvalue Var 0x123104140 'need' 'int'
    |     `-CompoundStmt 0x122840e60 <col:33, line:33:5>
    |       |-IfStmt 0x122840930 <line:12:7, line:20:7> has_else
    |       | |-CallExpr 0x122840468 <line:12:11, col:39> '<dependent type>' contains-errors
    |       | | |-DeclRefExpr 0x1228403e0 <col:11> 'int ()' Function 0x122840328 'IS_NULL' 'int ()'
    |       | | `-CXXDependentScopeMemberExpr 0x122840420 <col:19, col:24> '<dependent type>' contains-errors lvalue ->mem_env_dynamic
    |       | |   `-RecoveryExpr 0x122840400 <col:19> '<dependent type>' contains-errors lvalue
    |       | |-CompoundStmt 0x1228407f8 <col:42, line:16:7>
    |       | | |-BinaryOperator 0x122840508 <line:13:9, col:17> 'int' contains-errors '='
    |       | | | |-DeclRefExpr 0x122840490 <col:9> 'int' lvalue Var 0x1231041c0 'alloc' 'int'
    |       | | | `-RecoveryExpr 0x1228404e8 <col:17> '<dependent type>' contains-errors lvalue
    |       | | `-CallExpr 0x1228407c0 <line:15:9, col:68> '<dependent type>' contains-errors
    |       | |   |-DeclRefExpr 0x122840620 <col:9> 'int ()' Function 0x122840568 'xmemcpy' 'int ()'
    |       | |   |-RecoveryExpr 0x1228407a0 <col:17> '<dependent type>' contains-errors lvalue
    |       | |   |-CXXDependentScopeMemberExpr 0x122840678 <col:20, col:25> '<dependent type>' contains-errors lvalue ->mem_env_static
    |       | |   | `-RecoveryExpr 0x122840658 <col:20> '<dependent type>' contains-errors lvalue
    |       | |   `-UnaryExprOrTypeTraitExpr 0x122840748 <col:41, col:67> 'unsigned long' contains-errors sizeof
    |       | |     `-ParenExpr 0x122840728 <col:47, col:67> '<dependent type>' contains-errors lvalue
    |       | |       `-CXXDependentScopeMemberExpr 0x1228406e0 <col:48, col:53> '<dependent type>' contains-errors lvalue ->mem_env_static
    |       | |         `-RecoveryExpr 0x1228406c0 <col:48> '<dependent type>' contains-errors lvalue
    |       | `-CompoundStmt 0x122840918 <line:17:12, line:20:7>
    |       |   `-BinaryOperator 0x1228408e0 <line:18:9, col:34> 'int' contains-errors '='
    |       |     |-DeclRefExpr 0x122840818 <col:9> 'int' lvalue Var 0x1231041c0 'alloc' 'int'
    |       |     `-BinaryOperator 0x1228408c0 <col:17, col:34> '<dependent type>' contains-errors '*'
    |       |       |-CXXDependentScopeMemberExpr 0x122840858 <col:17, col:22> '<dependent type>' contains-errors lvalue ->mem_alloc
    |       |       | `-RecoveryExpr 0x122840838 <col:17> '<dependent type>' contains-errors lvalue
    |       |       `-IntegerLiteral 0x1228408a0 <col:34> 'int' 2
    |       |-CallExpr 0x122840ac0 <line:21:7, col:33> '<dependent type>' contains-errors
    |       | |-DeclRefExpr 0x122840a40 <col:7> 'int ()' Function 0x122840988 'CHECK_NULL_RETURN_MEMERR' 'int ()'
    |       | `-RecoveryExpr 0x122840aa0 <col:32> '<dependent type>' contains-errors lvalue
    |       |-ForStmt 0x122840cc8 <line:23:7, line:29:7>
    |       | |-BinaryOperator 0x122840bb0 <line:23:12, col:31> 'int' contains-errors '='
    |       | | |-DeclRefExpr 0x122840ae8 <col:12> 'int' lvalue Var 0x1231040c0 'i' 'int'
    |       | | `-BinaryOperator 0x122840b90 <col:16, col:31> '<dependent type>' contains-errors '+'
    |       | |   |-CXXDependentScopeMemberExpr 0x122840b28 <col:16, col:21> '<dependent type>' contains-errors lvalue ->num_mem
    |       | |   | `-RecoveryExpr 0x122840b08 <col:16> '<dependent type>' contains-errors lvalue
    |       | |   `-IntegerLiteral 0x122840b70 <col:31> 'int' 1
    |       | |-<<<NULL>>>
    |       | |-BinaryOperator 0x122840c40 <col:34, col:38> 'int' '<'
    |       | | |-ImplicitCastExpr 0x122840c10 <col:34> 'int' <LValueToRValue>
    |       | | | `-DeclRefExpr 0x122840bd0 <col:34> 'int' lvalue Var 0x1231040c0 'i' 'int'
    |       | | `-ImplicitCastExpr 0x122840c28 <col:38> 'int' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x122840bf0 <col:38> 'int' lvalue Var 0x1231041c0 'alloc' 'int'
    |       | |-UnaryOperator 0x122840c80 <col:45, col:46> 'int' postfix '++'
    |       | | `-DeclRefExpr 0x122840c60 <col:45> 'int' lvalue Var 0x1231040c0 'i' 'int'
    |       | `-CompoundStmt 0x122840cb8 <col:50, line:29:7>
    |       `-BinaryOperator 0x122840e40 <line:32:7, col:24> '<dependent type>' contains-errors '='
    |         |-CXXDependentScopeMemberExpr 0x122840dd8 <col:7, col:12> '<dependent type>' contains-errors lvalue ->mem_alloc
    |         | `-RecoveryExpr 0x122840db0 <col:7> '<dependent type>' contains-errors lvalue
    |         |   `-DeclRefExpr 0x122840d90 <col:7> 'int *' lvalue ParmVar 0x123103f28 'env' 'int *'
    |         `-DeclRefExpr 0x122840e20 <col:24> 'int' lvalue Var 0x1231041c0 'alloc' 'int'
    |-UnaryOperator 0x122840f78 <line:36:3, col:15> '<dependent type>' contains-errors postfix '++' cannot overflow
    | `-CXXDependentScopeMemberExpr 0x122840f30 <col:3, col:8> '<dependent type>' contains-errors lvalue ->num_mem
    |   `-RecoveryExpr 0x122840f08 <col:3> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x122840ee8 <col:3> 'int *' lvalue ParmVar 0x123103f28 'env' 'int *'
    `-ReturnStmt 0x122840ff8 <line:37:3, col:15>
      `-CXXDependentScopeMemberExpr 0x122840fb0 <col:10, col:15> '<dependent type>' contains-errors lvalue ->num_mem
        `-RecoveryExpr 0x122840f90 <col:10> '<dependent type>' contains-errors lvalue
