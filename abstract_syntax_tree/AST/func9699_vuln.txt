TranslationUnitDecl 0x156855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1568564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x156855bd0 '__int128'
|-TypedefDecl 0x156856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x156855bf0 'unsigned __int128'
|-TypedefDecl 0x15700be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15700bc00 'struct __NSConstantString_tag'
|   `-Record 0x156856580 '__NSConstantString_tag'
|-TypedefDecl 0x15700be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x156855d90 '__SVInt8_t'
|-TypedefDecl 0x15700bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x156855db0 '__SVInt16_t'
|-TypedefDecl 0x15700bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x156855dd0 '__SVInt32_t'
|-TypedefDecl 0x15700bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x156855df0 '__SVInt64_t'
|-TypedefDecl 0x15700c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x156855e10 '__SVUint8_t'
|-TypedefDecl 0x15700c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x156855e30 '__SVUint16_t'
|-TypedefDecl 0x15700c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x156855e50 '__SVUint32_t'
|-TypedefDecl 0x15700c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x156855e70 '__SVUint64_t'
|-TypedefDecl 0x15700c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x156855e90 '__SVFloat16_t'
|-TypedefDecl 0x15700c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x156855eb0 '__SVFloat32_t'
|-TypedefDecl 0x15700c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x156855ed0 '__SVFloat64_t'
|-TypedefDecl 0x15700c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x156855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15700c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x156855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15700c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x156855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15700c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x156855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15700c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x156855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15700c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x156855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15700c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x156855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15700c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x156855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15700c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x156855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15700c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x156856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15700c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x156856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15700c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x156856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15700c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x156856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15700c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x156856090 '__clang_svint8x3_t'
|-TypedefDecl 0x15700c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1568560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15700c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1568560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15700c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1568560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15700c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x156856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15700ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x156856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15700cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x156856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15700cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x156856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15700cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x156856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15700d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1568561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15700d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1568561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15700d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1568561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15700d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x156856210 '__clang_svint8x4_t'
|-TypedefDecl 0x15700d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x156856230 '__clang_svint16x4_t'
|-TypedefDecl 0x15700d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x156856250 '__clang_svint32x4_t'
|-TypedefDecl 0x15700d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x156856270 '__clang_svint64x4_t'
|-TypedefDecl 0x15700d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x156856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15700d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1568562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15700d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1568562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15700d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1568562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15700d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x156856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15700d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x156856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15700d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x156856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15700d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x156856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15700da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x156856390 '__SVBool_t'
|-TypedefDecl 0x15700da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1568563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15700dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1568563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15700db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1568563f0 '__SVCount_t'
|-TypedefDecl 0x15700dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15700dbb0 'char *'
|   `-BuiltinType 0x1568556b0 'char'
|-TypedefDecl 0x15700dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15700dbb0 'char *'
|   `-BuiltinType 0x1568556b0 'char'
`-FunctionDecl 0x15700e098 <dataset_diviso_filec/func9699_vuln.c:1:1, line:58:1> line:1:1 invalid xmlParseEndTag2 'int (int, const int *, const int *, int, int, int)'
  |-ParmVarDecl 0x15700dcf0 <col:17, col:34> col:34 referenced invalid ctxt 'int'
  |-ParmVarDecl 0x15700dd70 <col:40, col:55> col:55 invalid prefix 'const int *'
  |-ParmVarDecl 0x15700ddf0 <line:2:17, col:32> col:32 invalid URI 'const int *'
  |-ParmVarDecl 0x15700de70 <col:37, col:41> col:41 used line 'int'
  |-ParmVarDecl 0x15700def0 <col:47, col:51> col:51 used nsNr 'int'
  |-ParmVarDecl 0x15700df70 <col:57, col:61> col:61 used tlen 'int'
  `-CompoundStmt 0x16080a580 <col:67, line:58:1>
    |-DeclStmt 0x15700e1f0 <line:3:5, col:24>
    | `-VarDecl 0x15700e188 <col:5, col:20> col:20 referenced invalid name 'const int *'
    |-IfStmt 0x157027718 <line:6:5, line:9:5>
    | |-RecoveryExpr 0x1570274c8 <line:6:9, col:39> '_Bool' contains-errors
    | `-CompoundStmt 0x1570276f8 <col:42, line:9:5>
    |   |-CallExpr 0x1570276b0 <line:7:2, col:50> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x1570275c8 <col:2> 'int ()' Function 0x157027510 'xmlFatalErr' 'int ()'
    |   | |-RecoveryExpr 0x1570275e8 <col:14> '<dependent type>' contains-errors lvalue
    |   | |-RecoveryExpr 0x157027670 <col:20> '<dependent type>' contains-errors lvalue
    |   | `-RecoveryExpr 0x157027690 <col:46> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x1570276e8 <line:8:2>
    |-CallExpr 0x157027870 <line:10:5, col:11> 'int'
    | |-ImplicitCastExpr 0x157027858 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x157027818 <col:5> 'int ()' Function 0x157027760 'SKIP' 'int ()'
    | `-IntegerLiteral 0x157027838 <col:10> 'int' 2
    |-IfStmt 0x160809548 <line:12:5, line:26:5> has_else
    | |-BinaryOperator 0x157027c00 <line:12:9, col:75> 'int' contains-errors '&&'
    | | |-ParenExpr 0x157027910 <col:9, col:18> 'int'
    | | | `-BinaryOperator 0x1570278f0 <col:10, col:17> 'int' '>'
    | | |   |-ImplicitCastExpr 0x1570278d8 <col:10> 'int' <LValueToRValue>
    | | |   | `-DeclRefExpr 0x157027898 <col:10> 'int' lvalue ParmVar 0x15700df70 'tlen' 'int'
    | | |   `-IntegerLiteral 0x1570278b8 <col:17> 'int' 0
    | | `-ParenExpr 0x157027be0 <col:23, col:75> 'int' contains-errors
    | |   `-BinaryOperator 0x157027bc0 <col:24, col:74> 'int' contains-errors '=='
    | |     |-CallExpr 0x157027b68 <col:24, col:69> '<dependent type>' contains-errors
    | |     | |-DeclRefExpr 0x157027a10 <col:24> 'int ()' Function 0x157027958 'xmlStrncmp' 'int ()'
    | |     | |-CXXDependentScopeMemberExpr 0x157027a98 <col:35, col:48> '<dependent type>' contains-errors lvalue ->cur
    | |     | | `-CXXDependentScopeMemberExpr 0x157027a50 <col:35, col:41> '<dependent type>' contains-errors lvalue ->input
    | |     | |   `-RecoveryExpr 0x157027a30 <col:35> '<dependent type>' contains-errors lvalue
    | |     | |-CXXDependentScopeMemberExpr 0x157027b00 <col:53, col:59> '<dependent type>' contains-errors lvalue ->name
    | |     | | `-RecoveryExpr 0x157027ae0 <col:53> '<dependent type>' contains-errors lvalue
    | |     | `-DeclRefExpr 0x157027b48 <col:65> 'int' lvalue ParmVar 0x15700df70 'tlen' 'int'
    | |     `-IntegerLiteral 0x157027ba0 <col:74> 'int' 0
    | |-CompoundStmt 0x1570283d8 <col:78, line:21:5>
    | | |-IfStmt 0x157028108 <line:13:9, line:17:2>
    | | | |-BinaryOperator 0x157027d58 <line:13:13, col:39> 'int' contains-errors '=='
    | | | | |-ArraySubscriptExpr 0x157027d20 <col:13, col:34> '<dependent type>' contains-errors lvalue
    | | | | | |-ImplicitCastExpr 0x157027cf0 <col:13, col:26> '<dependent type>' contains-errors <LValueToRValue>
    | | | | | | `-CXXDependentScopeMemberExpr 0x157027c88 <col:13, col:26> '<dependent type>' contains-errors lvalue ->cur
    | | | | | |   `-CXXDependentScopeMemberExpr 0x157027c40 <col:13, col:19> '<dependent type>' contains-errors lvalue ->input
    | | | | | |     `-RecoveryExpr 0x157027c20 <col:13> '<dependent type>' contains-errors lvalue
    | | | | | `-ImplicitCastExpr 0x157027d08 <col:30> 'int' <LValueToRValue>
    | | | | |   `-DeclRefExpr 0x157027cd0 <col:30> 'int' lvalue ParmVar 0x15700df70 'tlen' 'int'
    | | | | `-CharacterLiteral 0x157027d40 <col:39> 'int' 62
    | | | `-CompoundStmt 0x1570280e0 <col:44, line:17:2>
    | | |   |-CompoundAssignOperator 0x157027ec8 <line:14:6, col:33> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | | |   | |-CXXDependentScopeMemberExpr 0x157027e08 <col:6, col:19> '<dependent type>' contains-errors lvalue ->cur
    | | |   | | `-CXXDependentScopeMemberExpr 0x157027dc0 <col:6, col:12> '<dependent type>' contains-errors lvalue ->input
    | | |   | |   `-RecoveryExpr 0x157027d98 <col:6> '<dependent type>' contains-errors lvalue
    | | |   | |     `-DeclRefExpr 0x157027d78 <col:6> 'int' lvalue ParmVar 0x15700dcf0 'ctxt' 'int'
    | | |   | `-BinaryOperator 0x157027ea8 <col:26, col:33> 'int' '+'
    | | |   |   |-ImplicitCastExpr 0x157027e90 <col:26> 'int' <LValueToRValue>
    | | |   |   | `-DeclRefExpr 0x157027e50 <col:26> 'int' lvalue ParmVar 0x15700df70 'tlen' 'int'
    | | |   |   `-IntegerLiteral 0x157027e70 <col:33> 'int' 1
    | | |   |-CompoundAssignOperator 0x157028048 <line:15:6, col:33> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | | |   | |-CXXDependentScopeMemberExpr 0x157027f88 <col:6, col:19> '<dependent type>' contains-errors lvalue ->col
    | | |   | | `-CXXDependentScopeMemberExpr 0x157027f40 <col:6, col:12> '<dependent type>' contains-errors lvalue ->input
    | | |   | |   `-RecoveryExpr 0x157027f18 <col:6> '<dependent type>' contains-errors lvalue
    | | |   | |     `-DeclRefExpr 0x157027ef8 <col:6> 'int' lvalue ParmVar 0x15700dcf0 'ctxt' 'int'
    | | |   | `-BinaryOperator 0x157028028 <col:26, col:33> 'int' '+'
    | | |   |   |-ImplicitCastExpr 0x157028010 <col:26> 'int' <LValueToRValue>
    | | |   |   | `-DeclRefExpr 0x157027fd0 <col:26> 'int' lvalue ParmVar 0x15700df70 'tlen' 'int'
    | | |   |   `-IntegerLiteral 0x157027ff0 <col:33> 'int' 1
    | | |   `-GotoStmt 0x1570280c8 <line:16:6, col:11> 'done' 0x157028078
    | | |-CompoundAssignOperator 0x157028220 <line:18:2, col:22> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | | | |-CXXDependentScopeMemberExpr 0x1570281b8 <col:2, col:15> '<dependent type>' contains-errors lvalue ->cur
    | | | | `-CXXDependentScopeMemberExpr 0x157028170 <col:2, col:8> '<dependent type>' contains-errors lvalue ->input
    | | | |   `-RecoveryExpr 0x157028148 <col:2> '<dependent type>' contains-errors lvalue
    | | | |     `-DeclRefExpr 0x157028128 <col:2> 'int' lvalue ParmVar 0x15700dcf0 'ctxt' 'int'
    | | | `-DeclRefExpr 0x157028200 <col:22> 'int' lvalue ParmVar 0x15700df70 'tlen' 'int'
    | | `-CompoundAssignOperator 0x157028348 <line:19:2, col:22> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | |   |-CXXDependentScopeMemberExpr 0x1570282e0 <col:2, col:15> '<dependent type>' contains-errors lvalue ->col
    | |   | `-CXXDependentScopeMemberExpr 0x157028298 <col:2, col:8> '<dependent type>' contains-errors lvalue ->input
    | |   |   `-RecoveryExpr 0x157028270 <col:2> '<dependent type>' contains-errors lvalue
    | |   |     `-DeclRefExpr 0x157028250 <col:2> 'int' lvalue ParmVar 0x15700dcf0 'ctxt' 'int'
    | |   `-DeclRefExpr 0x157028328 <col:22> 'int' lvalue ParmVar 0x15700df70 'tlen' 'int'
    | `-CompoundStmt 0x160809530 <line:21:12, line:26:5>
    |   `-IfStmt 0x160809500 <line:22:2, line:25:61> has_else
    |     |-BinaryOperator 0x160809078 <line:22:6, col:16> 'int' contains-errors '=='
    |     | |-RecoveryExpr 0x160809000 <col:6> '<dependent type>' contains-errors lvalue
    |     | `-RecoveryExpr 0x160809058 <col:16> '<dependent type>' contains-errors lvalue
    |     |-BinaryOperator 0x160809298 <line:23:6, col:52> '<dependent type>' contains-errors '='
    |     | |-RecoveryExpr 0x1608090b8 <col:6> '<dependent type>' contains-errors lvalue
    |     | | `-DeclRefExpr 0x160809098 <col:6> 'const int *' lvalue Var 0x15700e188 'name' 'const int *'
    |     | `-CallExpr 0x160809268 <col:13, col:52> '<dependent type>' contains-errors
    |     |   |-DeclRefExpr 0x1608091c0 <col:13> 'int ()' Function 0x160809108 'xmlParseNameAndCompare' 'int ()'
    |     |   |-RecoveryExpr 0x1608091e0 <col:36> '<dependent type>' contains-errors lvalue
    |     |   `-CXXDependentScopeMemberExpr 0x160809220 <col:42, col:48> '<dependent type>' contains-errors lvalue ->name
    |     |     `-RecoveryExpr 0x160809200 <col:42> '<dependent type>' contains-errors lvalue
    |     `-BinaryOperator 0x1608094e0 <line:25:6, col:61> '<dependent type>' contains-errors '='
    |       |-RecoveryExpr 0x1608092d8 <col:6> '<dependent type>' contains-errors lvalue
    |       | `-DeclRefExpr 0x1608092b8 <col:6> 'const int *' lvalue Var 0x15700e188 'name' 'const int *'
    |       `-CallExpr 0x1608094a8 <col:13, col:61> '<dependent type>' contains-errors
    |         |-DeclRefExpr 0x1608093e0 <col:13> 'int ()' Function 0x160809328 'xmlParseQNameAndCompare' 'int ()'
    |         |-RecoveryExpr 0x160809400 <col:37> '<dependent type>' contains-errors lvalue
    |         |-CXXDependentScopeMemberExpr 0x160809440 <col:43, col:49> '<dependent type>' contains-errors lvalue ->name
    |         | `-RecoveryExpr 0x160809420 <col:43> '<dependent type>' contains-errors lvalue
    |         `-RecoveryExpr 0x160809488 <col:55> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x160809668 <line:30:5, line:31:9>
    | |-BinaryOperator 0x160809638 <line:30:9, col:26> 'int' contains-errors '=='
    | | |-CXXDependentScopeMemberExpr 0x160809598 <col:9, col:15> '<dependent type>' contains-errors lvalue ->instate
    | | | `-RecoveryExpr 0x160809578 <col:9> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x160809618 <col:26> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x160809658 <line:31:9>
    |-IfStmt 0x160809818 <line:33:5, line:36:2> has_else
    | |-RecoveryExpr 0x1608097a0 <line:33:9, col:44> '_Bool' contains-errors
    | |-CompoundStmt 0x160809800 <col:47, line:35:5>
    | `-NullStmt 0x160809810 <line:36:2>
    |-IfStmt 0x160809d80 <line:39:5, line:46:5>
    | |-RecoveryExpr 0x160809868 <line:39:9, col:27> '_Bool' contains-errors
    | `-CompoundStmt 0x160809d68 <col:30, line:46:5>
    |   `-IfStmt 0x160809b20 <line:41:9, line:42:32>
    |     |-RecoveryExpr 0x160809a10 <line:41:13, col:47> '_Bool' contains-errors
    |     `-BinaryOperator 0x160809b00 <line:42:13, col:32> 'int' contains-errors '='
    |       |-DeclRefExpr 0x160809a30 <col:13> 'int' lvalue ParmVar 0x15700de70 'line' 'int'
    |       `-CXXDependentScopeMemberExpr 0x160809ab8 <col:20, col:32> '<dependent type>' contains-errors lvalue ->line
    |         `-CXXDependentScopeMemberExpr 0x160809a70 <col:20, col:26> '<dependent type>' contains-errors lvalue ->node
    |           `-RecoveryExpr 0x160809a50 <col:20> '<dependent type>' contains-errors lvalue
    |-LabelStmt 0x16080a200 <line:49:1, line:52:65> 'done'
    | `-IfStmt 0x16080a1e0 <line:50:5, line:52:65>
    |   |-RecoveryExpr 0x160809f70 <line:50:9, line:51:20> '_Bool' contains-errors
    |   `-CallExpr 0x16080a1a0 <line:52:2, col:65> '<dependent type>' contains-errors
    |     |-CXXDependentScopeMemberExpr 0x16080a048 <col:2, col:13> '<dependent type>' contains-errors lvalue ->endElementNs
    |     | `-CXXDependentScopeMemberExpr 0x16080a000 <col:2, col:8> '<dependent type>' contains-errors lvalue ->sax
    |     |   `-RecoveryExpr 0x160809fb0 <col:2> '<dependent type>' contains-errors lvalue
    |     |     `-DeclRefExpr 0x160809f90 <col:2> 'int' lvalue ParmVar 0x15700dcf0 'ctxt' 'int'
    |     |-CXXDependentScopeMemberExpr 0x16080a0b0 <col:26, col:32> '<dependent type>' contains-errors lvalue ->userData
    |     | `-RecoveryExpr 0x16080a090 <col:26> '<dependent type>' contains-errors lvalue
    |     |-CXXDependentScopeMemberExpr 0x16080a118 <col:42, col:48> '<dependent type>' contains-errors lvalue ->name
    |     | `-RecoveryExpr 0x16080a0f8 <col:42> '<dependent type>' contains-errors lvalue
    |     |-RecoveryExpr 0x16080a160 <col:54> '<dependent type>' contains-errors lvalue
    |     `-RecoveryExpr 0x16080a180 <col:62> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x16080a340 <line:54:5, col:18> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x16080a300 <col:5> 'int ()' Function 0x16080a248 'spacePop' 'int ()'
    | `-RecoveryExpr 0x16080a320 <col:14> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x16080a550 <line:55:5, line:56:18>
    | |-BinaryOperator 0x16080a3c0 <line:55:9, col:17> 'int' '!='
    | | |-ImplicitCastExpr 0x16080a3a8 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x16080a368 <col:9> 'int' lvalue ParmVar 0x15700def0 'nsNr' 'int'
    | | `-IntegerLiteral 0x16080a388 <col:17> 'int' 0
    | `-CallExpr 0x16080a520 <line:56:2, col:18> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x16080a4c0 <col:2> 'int ()' Function 0x16080a408 'nsPop' 'int ()'
    |   |-RecoveryExpr 0x16080a4e0 <col:8> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x16080a500 <col:14> 'int' lvalue ParmVar 0x15700def0 'nsNr' 'int'
    `-ReturnStmt 0x16080a570 <line:57:5>
