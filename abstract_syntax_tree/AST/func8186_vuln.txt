TranslationUnitDecl 0x124055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1240564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x124055bd0 '__int128'
|-TypedefDecl 0x124056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x124055bf0 'unsigned __int128'
|-TypedefDecl 0x12480be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12480bc00 'struct __NSConstantString_tag'
|   `-Record 0x124056580 '__NSConstantString_tag'
|-TypedefDecl 0x12480be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x124055d90 '__SVInt8_t'
|-TypedefDecl 0x12480bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x124055db0 '__SVInt16_t'
|-TypedefDecl 0x12480bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x124055dd0 '__SVInt32_t'
|-TypedefDecl 0x12480bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x124055df0 '__SVInt64_t'
|-TypedefDecl 0x12480c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x124055e10 '__SVUint8_t'
|-TypedefDecl 0x12480c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x124055e30 '__SVUint16_t'
|-TypedefDecl 0x12480c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x124055e50 '__SVUint32_t'
|-TypedefDecl 0x12480c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x124055e70 '__SVUint64_t'
|-TypedefDecl 0x12480c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x124055e90 '__SVFloat16_t'
|-TypedefDecl 0x12480c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x124055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12480c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x124055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12480c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x124055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12480c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x124055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12480c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x124055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12480c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x124055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12480c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x124055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12480c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x124055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12480c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x124055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12480c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x124055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12480c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x124055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12480c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x124056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12480c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x124056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12480c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x124056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12480c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x124056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12480c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x124056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12480c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1240560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12480c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1240560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12480c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1240560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12480c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x124056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12480ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x124056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12480cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x124056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12480cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x124056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12480cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x124056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12480d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1240561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12480d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1240561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12480d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1240561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12480d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x124056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12480d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x124056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12480d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x124056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12480d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x124056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12480d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x124056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12480d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1240562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12480d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1240562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12480d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1240562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12480d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x124056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12480d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x124056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12480d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x124056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12480d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x124056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12480da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x124056390 '__SVBool_t'
|-TypedefDecl 0x12480da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1240563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12480dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1240563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12480db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1240563f0 '__SVCount_t'
|-TypedefDecl 0x12480dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12480dbb0 'char *'
|   `-BuiltinType 0x1240556b0 'char'
|-TypedefDecl 0x12480dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12480dbb0 'char *'
|   `-BuiltinType 0x1240556b0 'char'
`-FunctionDecl 0x12480e038 <dataset_diviso_filec/func8186_vuln.c:1:1, line:38:1> line:1:1 invalid GetCode_ 'int (int *, int *, int, int, int *)'
  |-ParmVarDecl 0x12480dd28 <col:10, col:19> col:19 invalid fd 'int *'
  |-ParmVarDecl 0x12480dda8 <col:23, col:41> col:41 referenced invalid scd 'int *'
  |-ParmVarDecl 0x12480de28 <col:46, col:50> col:50 used code_size 'int'
  |-ParmVarDecl 0x12480dea8 <col:61, col:65> col:65 used flag 'int'
  |-ParmVarDecl 0x12480df28 <col:71, col:76> col:76 used ZeroDataBlockP 'int *'
  `-CompoundStmt 0x1248294f0 <line:2:1, line:38:1>
    |-DeclStmt 0x12480e2a8 <line:3:2, col:25>
    | |-VarDecl 0x12480e120 <col:2, col:16> col:16 used i 'int'
    | |-VarDecl 0x12480e1a0 <col:2, col:19> col:19 used j 'int'
    | `-VarDecl 0x12480e220 <col:2, col:22> col:22 used ret 'int'
    |-DeclStmt 0x12480e340 <line:4:2, col:21>
    | `-VarDecl 0x12480e2d8 <col:2, col:16> col:16 used count 'unsigned char'
    |-IfStmt 0x124827798 <line:6:2, line:12:2>
    | |-ImplicitCastExpr 0x12480e378 <line:6:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x12480e358 <col:6> 'int' lvalue ParmVar 0x12480dea8 'flag' 'int'
    | `-CompoundStmt 0x124827760 <col:12, line:12:2>
    |   |-BinaryOperator 0x124827468 <line:7:3, col:17> '<dependent type>' contains-errors '='
    |   | |-CXXDependentScopeMemberExpr 0x124827400 <col:3, col:8> '<dependent type>' contains-errors lvalue ->curbit
    |   | | `-RecoveryExpr 0x12480e3b0 <col:3> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x12480e390 <col:3> 'int *' lvalue ParmVar 0x12480dda8 'scd' 'int *'
    |   | `-IntegerLiteral 0x124827448 <col:17> 'int' 0
    |   |-BinaryOperator 0x124827538 <line:8:3, col:18> '<dependent type>' contains-errors '='
    |   | |-CXXDependentScopeMemberExpr 0x1248274d0 <col:3, col:8> '<dependent type>' contains-errors lvalue ->lastbit
    |   | | `-RecoveryExpr 0x1248274a8 <col:3> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x124827488 <col:3> 'int *' lvalue ParmVar 0x12480dda8 'scd' 'int *'
    |   | `-IntegerLiteral 0x124827518 <col:18> 'int' 0
    |   |-BinaryOperator 0x124827608 <line:9:3, col:20> '<dependent type>' contains-errors '='
    |   | |-CXXDependentScopeMemberExpr 0x1248275a0 <col:3, col:8> '<dependent type>' contains-errors lvalue ->last_byte
    |   | | `-RecoveryExpr 0x124827578 <col:3> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x124827558 <col:3> 'int *' lvalue ParmVar 0x12480dda8 'scd' 'int *'
    |   | `-IntegerLiteral 0x1248275e8 <col:20> 'int' 0
    |   |-BinaryOperator 0x124827710 <line:10:3, col:15> '<dependent type>' contains-errors '='
    |   | |-CXXDependentScopeMemberExpr 0x124827670 <col:3, col:8> '<dependent type>' contains-errors lvalue ->done
    |   | | `-RecoveryExpr 0x124827648 <col:3> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x124827628 <col:3> 'int *' lvalue ParmVar 0x12480dda8 'scd' 'int *'
    |   | `-RecoveryExpr 0x1248276f0 <col:15> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x124827750 <line:11:3, col:10>
    |     `-IntegerLiteral 0x124827730 <col:10> 'int' 0
    |-IfStmt 0x124828d88 <line:14:2, line:30:2>
    | |-BinaryOperator 0x1248278e8 <line:14:7, col:41> 'int' contains-errors '>='
    | | |-ParenExpr 0x124827860 <col:7, col:31> '<dependent type>' contains-errors
    | | | `-BinaryOperator 0x124827840 <col:8, col:22> '<dependent type>' contains-errors '+'
    | | |   |-CXXDependentScopeMemberExpr 0x1248277d8 <col:8, col:13> '<dependent type>' contains-errors lvalue ->curbit
    | | |   | `-RecoveryExpr 0x1248277b8 <col:8> '<dependent type>' contains-errors lvalue
    | | |   `-DeclRefExpr 0x124827820 <col:22> 'int' lvalue ParmVar 0x12480de28 'code_size' 'int'
    | | `-CXXDependentScopeMemberExpr 0x1248278a0 <col:36, col:41> '<dependent type>' contains-errors lvalue ->lastbit
    | |   `-RecoveryExpr 0x124827880 <col:36> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x124828d40 <col:50, line:30:2>
    |   |-IfStmt 0x124827af8 <line:15:3, line:20:3>
    |   | |-CXXDependentScopeMemberExpr 0x124827928 <line:15:7, col:12> '<dependent type>' contains-errors lvalue ->done
    |   | | `-RecoveryExpr 0x124827908 <col:7> '<dependent type>' contains-errors lvalue
    |   | `-CompoundStmt 0x124827ad8 <col:18, line:20:3>
    |   |   |-IfStmt 0x124827a70 <line:16:4, line:18:4>
    |   |   | |-BinaryOperator 0x124827a40 <line:16:8, col:28> 'int' contains-errors '>='
    |   |   | | |-CXXDependentScopeMemberExpr 0x124827990 <col:8, col:13> '<dependent type>' contains-errors lvalue ->curbit
    |   |   | | | `-RecoveryExpr 0x124827970 <col:8> '<dependent type>' contains-errors lvalue
    |   |   | | `-CXXDependentScopeMemberExpr 0x1248279f8 <col:23, col:28> '<dependent type>' contains-errors lvalue ->lastbit
    |   |   | |   `-RecoveryExpr 0x1248279d8 <col:23> '<dependent type>' contains-errors lvalue
    |   |   | `-CompoundStmt 0x124827a60 <col:37, line:18:4>
    |   |   `-ReturnStmt 0x124827ac8 <line:19:4, col:12>
    |   |     `-UnaryOperator 0x124827ab0 <col:11, col:12> 'int' prefix '-'
    |   |       `-IntegerLiteral 0x124827a90 <col:12> 'int' 1
    |   |-BinaryOperator 0x124827d48 <line:21:3, col:42> '<dependent type>' contains-errors '='
    |   | |-ArraySubscriptExpr 0x124827be0 <col:3, col:13> '<dependent type>' contains-errors lvalue
    |   | | |-ImplicitCastExpr 0x124827bc8 <col:3, col:8> '<dependent type>' contains-errors <LValueToRValue>
    |   | | | `-CXXDependentScopeMemberExpr 0x124827b60 <col:3, col:8> '<dependent type>' contains-errors lvalue ->buf
    |   | | |   `-RecoveryExpr 0x124827b38 <col:3> '<dependent type>' contains-errors lvalue
    |   | | |     `-DeclRefExpr 0x124827b18 <col:3> 'int *' lvalue ParmVar 0x12480dda8 'scd' 'int *'
    |   | | `-IntegerLiteral 0x124827ba8 <col:12> 'int' 0
    |   | `-ArraySubscriptExpr 0x124827d28 <col:17, col:42> '<dependent type>' contains-errors lvalue
    |   |   |-ImplicitCastExpr 0x124827d10 <col:17, col:22> '<dependent type>' contains-errors <LValueToRValue>
    |   |   | `-CXXDependentScopeMemberExpr 0x124827c20 <col:17, col:22> '<dependent type>' contains-errors lvalue ->buf
    |   |   |   `-RecoveryExpr 0x124827c00 <col:17> '<dependent type>' contains-errors lvalue
    |   |   `-BinaryOperator 0x124827cf0 <col:26, col:41> '<dependent type>' contains-errors '-'
    |   |     |-CXXDependentScopeMemberExpr 0x124827c88 <col:26, col:31> '<dependent type>' contains-errors lvalue ->last_byte
    |   |     | `-RecoveryExpr 0x124827c68 <col:26> '<dependent type>' contains-errors lvalue
    |   |     `-IntegerLiteral 0x124827cd0 <col:41> 'int' 2
    |   |-BinaryOperator 0x124827f98 <line:22:3, col:42> '<dependent type>' contains-errors '='
    |   | |-ArraySubscriptExpr 0x124827e30 <col:3, col:13> '<dependent type>' contains-errors lvalue
    |   | | |-ImplicitCastExpr 0x124827e18 <col:3, col:8> '<dependent type>' contains-errors <LValueToRValue>
    |   | | | `-CXXDependentScopeMemberExpr 0x124827db0 <col:3, col:8> '<dependent type>' contains-errors lvalue ->buf
    |   | | |   `-RecoveryExpr 0x124827d88 <col:3> '<dependent type>' contains-errors lvalue
    |   | | |     `-DeclRefExpr 0x124827d68 <col:3> 'int *' lvalue ParmVar 0x12480dda8 'scd' 'int *'
    |   | | `-IntegerLiteral 0x124827df8 <col:12> 'int' 1
    |   | `-ArraySubscriptExpr 0x124827f78 <col:17, col:42> '<dependent type>' contains-errors lvalue
    |   |   |-ImplicitCastExpr 0x124827f60 <col:17, col:22> '<dependent type>' contains-errors <LValueToRValue>
    |   |   | `-CXXDependentScopeMemberExpr 0x124827e70 <col:17, col:22> '<dependent type>' contains-errors lvalue ->buf
    |   |   |   `-RecoveryExpr 0x124827e50 <col:17> '<dependent type>' contains-errors lvalue
    |   |   `-BinaryOperator 0x124827f40 <col:26, col:41> '<dependent type>' contains-errors '-'
    |   |     |-CXXDependentScopeMemberExpr 0x124827ed8 <col:26, col:31> '<dependent type>' contains-errors lvalue ->last_byte
    |   |     | `-RecoveryExpr 0x124827eb8 <col:26> '<dependent type>' contains-errors lvalue
    |   |     `-IntegerLiteral 0x124827f20 <col:41> 'int' 1
    |   |-IfStmt 0x124828840 <line:24:16, line:25:16>
    |   | |-BinaryOperator 0x124828300 <line:24:20, col:80> 'int' contains-errors '<='
    |   | | |-ParenExpr 0x1248282c0 <col:20, col:75> 'unsigned char' contains-errors
    |   | | | `-BinaryOperator 0x1248282a0 <col:21, col:74> 'unsigned char' contains-errors '='
    |   | | |   |-DeclRefExpr 0x124827fb8 <col:21> 'unsigned char' lvalue Var 0x12480e2d8 'count' 'unsigned char'
    |   | | |   `-CallExpr 0x124828268 <col:29, col:74> '<dependent type>' contains-errors
    |   | | |     |-DeclRefExpr 0x124828130 <col:29> 'int ()' Function 0x124828078 'GetDataBlock' 'int ()'
    |   | | |     |-RecoveryExpr 0x124828150 <col:42> '<dependent type>' contains-errors lvalue
    |   | | |     |-UnaryOperator 0x124828230 <col:46, col:57> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | | |     | `-ArraySubscriptExpr 0x124828210 <col:47, col:57> '<dependent type>' contains-errors lvalue
    |   | | |     |   |-ImplicitCastExpr 0x1248281f8 <col:47, col:52> '<dependent type>' contains-errors <LValueToRValue>
    |   | | |     |   | `-CXXDependentScopeMemberExpr 0x124828190 <col:47, col:52> '<dependent type>' contains-errors lvalue ->buf
    |   | | |     |   |   `-RecoveryExpr 0x124828170 <col:47> '<dependent type>' contains-errors lvalue
    |   | | |     |   `-IntegerLiteral 0x1248281d8 <col:56> 'int' 2
    |   | | |     `-DeclRefExpr 0x124828248 <col:60> 'int *' lvalue ParmVar 0x12480df28 'ZeroDataBlockP' 'int *'
    |   | | `-IntegerLiteral 0x1248282e0 <col:80> 'int' 0
    |   | `-BinaryOperator 0x124828820 <line:25:4, col:16> '<dependent type>' contains-errors '='
    |   |   |-CXXDependentScopeMemberExpr 0x124828368 <col:4, col:9> '<dependent type>' contains-errors lvalue ->done
    |   |   | `-RecoveryExpr 0x124828340 <col:4> '<dependent type>' contains-errors lvalue
    |   |   |   `-DeclRefExpr 0x124828320 <col:4> 'int *' lvalue ParmVar 0x12480dda8 'scd' 'int *'
    |   |   `-RecoveryExpr 0x124828800 <col:16> '<dependent type>' contains-errors lvalue
    |   |-BinaryOperator 0x124828980 <line:27:3, col:24> '<dependent type>' contains-errors '='
    |   | |-CXXDependentScopeMemberExpr 0x1248288a8 <col:3, col:8> '<dependent type>' contains-errors lvalue ->last_byte
    |   | | `-RecoveryExpr 0x124828880 <col:3> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x124828860 <col:3> 'int *' lvalue ParmVar 0x12480dda8 'scd' 'int *'
    |   | `-BinaryOperator 0x124828960 <col:20, col:24> 'int' '+'
    |   |   |-IntegerLiteral 0x1248288f0 <col:20> 'int' 2
    |   |   `-ImplicitCastExpr 0x124828948 <col:24> 'int' <IntegralCast>
    |   |     `-ImplicitCastExpr 0x124828930 <col:24> 'unsigned char' <LValueToRValue>
    |   |       `-DeclRefExpr 0x124828910 <col:24> 'unsigned char' lvalue Var 0x12480e2d8 'count' 'unsigned char'
    |   |-BinaryOperator 0x124828b80 <line:28:3, col:48> '<dependent type>' contains-errors '='
    |   | |-CXXDependentScopeMemberExpr 0x1248289e8 <col:3, col:8> '<dependent type>' contains-errors lvalue ->curbit
    |   | | `-RecoveryExpr 0x1248289c0 <col:3> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x1248289a0 <col:3> 'int *' lvalue ParmVar 0x12480dda8 'scd' 'int *'
    |   | `-BinaryOperator 0x124828b60 <col:17, col:48> '<dependent type>' contains-errors '+'
    |   |   |-ParenExpr 0x124828b20 <col:17, col:44> '<dependent type>' contains-errors
    |   |   | `-BinaryOperator 0x124828b00 <col:18, col:37> '<dependent type>' contains-errors '-'
    |   |   |   |-CXXDependentScopeMemberExpr 0x124828a50 <col:18, col:23> '<dependent type>' contains-errors lvalue ->curbit
    |   |   |   | `-RecoveryExpr 0x124828a30 <col:18> '<dependent type>' contains-errors lvalue
    |   |   |   `-CXXDependentScopeMemberExpr 0x124828ab8 <col:32, col:37> '<dependent type>' contains-errors lvalue ->lastbit
    |   |   |     `-RecoveryExpr 0x124828a98 <col:32> '<dependent type>' contains-errors lvalue
    |   |   `-IntegerLiteral 0x124828b40 <col:48> 'int' 16
    |   `-BinaryOperator 0x124828d20 <line:29:3, col:28> '<dependent type>' contains-errors '='
    |     |-CXXDependentScopeMemberExpr 0x124828be8 <col:3, col:8> '<dependent type>' contains-errors lvalue ->lastbit
    |     | `-RecoveryExpr 0x124828bc0 <col:3> '<dependent type>' contains-errors lvalue
    |     |   `-DeclRefExpr 0x124828ba0 <col:3> 'int *' lvalue ParmVar 0x12480dda8 'scd' 'int *'
    |     `-BinaryOperator 0x124828d00 <col:18, col:28> 'int' '*'
    |       |-ParenExpr 0x124828cc0 <col:18, col:26> 'int'
    |       | `-BinaryOperator 0x124828ca0 <col:19, col:21> 'int' '+'
    |       |   |-IntegerLiteral 0x124828c30 <col:19> 'int' 2
    |       |   `-ImplicitCastExpr 0x124828c88 <col:21> 'int' <IntegralCast>
    |       |     `-ImplicitCastExpr 0x124828c70 <col:21> 'unsigned char' <LValueToRValue>
    |       |       `-DeclRefExpr 0x124828c50 <col:21> 'unsigned char' lvalue Var 0x12480e2d8 'count' 'unsigned char'
    |       `-IntegerLiteral 0x124828ce0 <col:28> 'int' 8
    |-BinaryOperator 0x124828de8 <line:32:2, col:8> 'int' '='
    | |-DeclRefExpr 0x124828da8 <col:2> 'int' lvalue Var 0x12480e220 'ret' 'int'
    | `-IntegerLiteral 0x124828dc8 <col:8> 'int' 0
    |-ForStmt 0x124829390 <line:33:2, line:34:57>
    | |-BinaryOperator 0x124828f10 <line:33:7, col:28> 'int' contains-errors ','
    | | |-BinaryOperator 0x124828e90 <col:7, col:16> 'int' contains-errors '='
    | | | |-DeclRefExpr 0x124828e08 <col:7> 'int' lvalue Var 0x12480e120 'i' 'int'
    | | | `-CXXDependentScopeMemberExpr 0x124828e48 <col:11, col:16> '<dependent type>' contains-errors lvalue ->curbit
    | | |   `-RecoveryExpr 0x124828e28 <col:11> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x124828ef0 <col:24, col:28> 'int' '='
    | |   |-DeclRefExpr 0x124828eb0 <col:24> 'int' lvalue Var 0x12480e1a0 'j' 'int'
    | |   `-IntegerLiteral 0x124828ed0 <col:28> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x124828fa0 <col:31, col:35> 'int' '<'
    | | |-ImplicitCastExpr 0x124828f70 <col:31> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x124828f30 <col:31> 'int' lvalue Var 0x12480e1a0 'j' 'int'
    | | `-ImplicitCastExpr 0x124828f88 <col:35> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x124828f50 <col:35> 'int' lvalue ParmVar 0x12480de28 'code_size' 'int'
    | |-BinaryOperator 0x124829030 <col:46, col:53> 'int' ','
    | | |-UnaryOperator 0x124828fe0 <col:46, col:48> 'int' prefix '++'
    | | | `-DeclRefExpr 0x124828fc0 <col:48> 'int' lvalue Var 0x12480e120 'i' 'int'
    | | `-UnaryOperator 0x124829018 <col:51, col:53> 'int' prefix '++'
    | |   `-DeclRefExpr 0x124828ff8 <col:53> 'int' lvalue Var 0x12480e1a0 'j' 'int'
    | `-CompoundAssignOperator 0x124829360 <line:34:3, col:57> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   |-DeclRefExpr 0x124829050 <col:3> 'int' lvalue Var 0x12480e220 'ret' 'int'
    |   `-BinaryOperator 0x124829340 <col:10, col:57> '<dependent type>' contains-errors '<<'
    |     |-ParenExpr 0x124829300 <col:10, col:52> 'int' contains-errors
    |     | `-BinaryOperator 0x1248292e0 <col:11, col:51> 'int' contains-errors '!='
    |     |   |-ParenExpr 0x1248292a0 <col:11, col:46> '<dependent type>' contains-errors
    |     |   | `-BinaryOperator 0x124829280 <col:12, col:45> '<dependent type>' contains-errors '&'
    |     |   |   |-ArraySubscriptExpr 0x124829168 <col:12, col:28> '<dependent type>' contains-errors lvalue
    |     |   |   | |-ImplicitCastExpr 0x124829150 <col:12, col:17> '<dependent type>' contains-errors <LValueToRValue>
    |     |   |   | | `-CXXDependentScopeMemberExpr 0x124829090 <col:12, col:17> '<dependent type>' contains-errors lvalue ->buf
    |     |   |   | |   `-RecoveryExpr 0x124829070 <col:12> '<dependent type>' contains-errors lvalue
    |     |   |   | `-BinaryOperator 0x124829130 <col:22, col:26> 'int' '/'
    |     |   |   |   |-ImplicitCastExpr 0x124829118 <col:22> 'int' <LValueToRValue>
    |     |   |   |   | `-DeclRefExpr 0x1248290d8 <col:22> 'int' lvalue Var 0x12480e120 'i' 'int'
    |     |   |   |   `-IntegerLiteral 0x1248290f8 <col:26> 'int' 8
    |     |   |   `-ParenExpr 0x124829260 <col:32, col:45> 'int'
    |     |   |     `-BinaryOperator 0x124829240 <col:33, col:44> 'int' '<<'
    |     |   |       |-IntegerLiteral 0x124829188 <col:33> 'int' 1
    |     |   |       `-ParenExpr 0x124829220 <col:38, col:44> 'int'
    |     |   |         `-BinaryOperator 0x124829200 <col:39, col:43> 'int' '%'
    |     |   |           |-ImplicitCastExpr 0x1248291e8 <col:39> 'int' <LValueToRValue>
    |     |   |           | `-DeclRefExpr 0x1248291a8 <col:39> 'int' lvalue Var 0x12480e120 'i' 'int'
    |     |   |           `-IntegerLiteral 0x1248291c8 <col:43> 'int' 8
    |     |   `-IntegerLiteral 0x1248292c0 <col:51> 'int' 0
    |     `-DeclRefExpr 0x124829320 <col:57> 'int' lvalue Var 0x12480e1a0 'j' 'int'
    |-CompoundAssignOperator 0x124829478 <line:36:2, col:17> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | |-CXXDependentScopeMemberExpr 0x124829410 <col:2, col:7> '<dependent type>' contains-errors lvalue ->curbit
    | | `-RecoveryExpr 0x1248293e8 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x1248293c8 <col:2> 'int *' lvalue ParmVar 0x12480dda8 'scd' 'int *'
    | `-DeclRefExpr 0x124829458 <col:17> 'int' lvalue ParmVar 0x12480de28 'code_size' 'int'
    `-ReturnStmt 0x1248294e0 <line:37:2, col:9>
      `-ImplicitCastExpr 0x1248294c8 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x1248294a8 <col:9> 'int' lvalue Var 0x12480e220 'ret' 'int'
