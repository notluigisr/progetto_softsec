TranslationUnitDecl 0x15b055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x15b0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x15b055bd0 '__int128'
|-TypedefDecl 0x15b056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x15b055bf0 'unsigned __int128'
|-TypedefDecl 0x15b126c30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15b126a00 'struct __NSConstantString_tag'
|   `-Record 0x15b056580 '__NSConstantString_tag'
|-TypedefDecl 0x15b126c98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x15b055d90 '__SVInt8_t'
|-TypedefDecl 0x15b126d00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x15b055db0 '__SVInt16_t'
|-TypedefDecl 0x15b126d68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x15b055dd0 '__SVInt32_t'
|-TypedefDecl 0x15b126dd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x15b055df0 '__SVInt64_t'
|-TypedefDecl 0x15b126e38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x15b055e10 '__SVUint8_t'
|-TypedefDecl 0x15b126ea0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x15b055e30 '__SVUint16_t'
|-TypedefDecl 0x15b126f08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x15b055e50 '__SVUint32_t'
|-TypedefDecl 0x15b126f70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x15b055e70 '__SVUint64_t'
|-TypedefDecl 0x15b126fd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x15b055e90 '__SVFloat16_t'
|-TypedefDecl 0x15b127040 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x15b055eb0 '__SVFloat32_t'
|-TypedefDecl 0x15b1270a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x15b055ed0 '__SVFloat64_t'
|-TypedefDecl 0x15b127110 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x15b055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15b127178 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x15b055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15b1271e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x15b055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15b127248 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x15b055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15b1272b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x15b055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15b127318 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x15b055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15b127380 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x15b055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15b1273e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x15b055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15b127450 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x15b055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15b1274b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x15b056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15b127520 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x15b056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15b127588 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x15b056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15b1275f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x15b056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15b127658 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x15b056090 '__clang_svint8x3_t'
|-TypedefDecl 0x15b1276c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x15b0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15b127728 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x15b0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15b127790 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x15b0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15b1277f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x15b056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15b127860 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x15b056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15b1278c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x15b056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15b127930 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x15b056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15b127998 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x15b056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15b128200 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x15b0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15b128268 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x15b0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15b1282d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x15b0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15b128338 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x15b056210 '__clang_svint8x4_t'
|-TypedefDecl 0x15b1283a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x15b056230 '__clang_svint16x4_t'
|-TypedefDecl 0x15b128408 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x15b056250 '__clang_svint32x4_t'
|-TypedefDecl 0x15b128470 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x15b056270 '__clang_svint64x4_t'
|-TypedefDecl 0x15b1284d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x15b056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15b128540 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x15b0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15b1285a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x15b0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15b128610 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x15b0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15b128678 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x15b056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15b1286e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x15b056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15b128748 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x15b056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15b1287b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x15b056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15b128818 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x15b056390 '__SVBool_t'
|-TypedefDecl 0x15b128880 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x15b0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15b1288e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x15b0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15b128950 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x15b0563f0 '__SVCount_t'
|-TypedefDecl 0x15b1289f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15b1289b0 'char *'
|   `-BuiltinType 0x15b0556b0 'char'
|-TypedefDecl 0x15b128a68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15b1289b0 'char *'
|   `-BuiltinType 0x15b0556b0 'char'
`-FunctionDecl 0x15b128de0 <dataset_diviso_filec/func22359_vuln.c:1:1, line:79:1> line:1:15 invalid spl_array_get_dimension_ptr_ptr 'int **(int, int *, int *, int)' static
  |-ParmVarDecl 0x15b128af0 <col:47, col:51> col:51 check_inherited 'int'
  |-ParmVarDecl 0x15b128ba8 <col:68, col:74> col:74 invalid object 'int *'
  |-ParmVarDecl 0x15b128c28 <col:82, col:88> col:88 invalid offset 'int *'
  |-ParmVarDecl 0x15b128ca8 <col:96, col:100> col:100 used type 'int'
  `-CompoundStmt 0x15b143f88 <line:2:1, line:79:1>
    |-DeclStmt 0x15b128fa0 <line:5:2, col:11>
    | `-VarDecl 0x15b128f38 <col:2, col:8> col:8 used key 'char *'
    |-DeclStmt 0x15b129038 <line:6:2, col:10>
    | `-VarDecl 0x15b128fd0 <col:2, col:7> col:7 used len 'int'
    |-DeclStmt 0x15b1290d0 <line:7:2, col:12>
    | `-VarDecl 0x15b129068 <col:2, col:7> col:7 used index 'long'
    |-IfStmt 0x15b142540 <line:10:2, line:12:2>
    | |-UnaryOperator 0x15b142348 <line:10:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x15b142330 <col:7> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x15b142310 <col:7> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x15b142528 <col:15, line:12:2>
    |   `-ReturnStmt 0x15b142518 <line:11:3, col:36>
    |     `-UnaryOperator 0x15b142500 <col:10, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow
    |       `-CallExpr 0x15b1424d8 <col:11, col:36> '<dependent type>' contains-errors
    |         |-DeclRefExpr 0x15b142440 <col:11> 'int ()' Function 0x15b142388 'EG' 'int ()'
    |         `-RecoveryExpr 0x15b1424b8 <col:14> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x15b142890 <line:14:2, line:17:2>
    | |-RecoveryExpr 0x15b1426d0 <line:14:6, col:69> '_Bool' contains-errors
    | `-CompoundStmt 0x15b142878 <col:72, line:17:2>
    |   `-NullStmt 0x15b142870 <line:16:30>
    `-SwitchStmt 0x15b1429f8 <line:19:2, line:78:2>
      |-CallExpr 0x15b1429d0 <line:19:10, col:25> '<dependent type>' contains-errors
      | |-DeclRefExpr 0x15b142990 <col:10> 'int ()' Function 0x15b1428d8 'Z_TYPE_P' 'int ()'
      | `-RecoveryExpr 0x15b1429b0 <col:19> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x15b143f30 <col:28, line:78:2>
        |-BinaryOperator 0x15b142b88 <line:21:3, col:26> 'char *' contains-errors '='
        | |-DeclRefExpr 0x15b142a20 <col:3> 'char *' lvalue Var 0x15b128f38 'key' 'char *'
        | `-CallExpr 0x15b142b60 <col:9, col:26> '<dependent type>' contains-errors
        |   |-DeclRefExpr 0x15b142b20 <col:9> 'int ()' Function 0x15b142a68 'Z_STRVAL_P' 'int ()'
        |   `-RecoveryExpr 0x15b142b40 <col:20> '<dependent type>' contains-errors lvalue
        |-BinaryOperator 0x15b142d50 <line:22:3, col:30> 'int' contains-errors '='
        | |-DeclRefExpr 0x15b142ba8 <col:3> 'int' lvalue Var 0x15b128fd0 'len' 'int'
        | `-BinaryOperator 0x15b142d30 <col:9, col:30> '<dependent type>' contains-errors '+'
        |   |-CallExpr 0x15b142ce8 <col:9, col:26> '<dependent type>' contains-errors
        |   | |-DeclRefExpr 0x15b142ca8 <col:9> 'int ()' Function 0x15b142bf0 'Z_STRLEN_P' 'int ()'
        |   | `-RecoveryExpr 0x15b142cc8 <col:20> '<dependent type>' contains-errors lvalue
        |   `-IntegerLiteral 0x15b142d10 <col:30> 'int' 1
        |-LabelStmt 0x15b143350 <line:23:1, line:40:3> 'string_offest'
        | `-IfStmt 0x15b1432e0 <line:24:3, line:40:3>
        |   |-RecoveryExpr 0x15b142eb0 <line:24:7, col:62> '_Bool' contains-errors
        |   `-CompoundStmt 0x15b1432c8 <col:71, line:40:3>
        |     `-SwitchStmt 0x15b142f08 <line:25:4, line:39:4>
        |       |-ImplicitCastExpr 0x15b142ef0 <line:25:12> 'int' <LValueToRValue>
        |       | `-DeclRefExpr 0x15b142ed0 <col:12> 'int' lvalue ParmVar 0x15b128ca8 'type' 'int'
        |       `-CompoundStmt 0x15b1432a8 <col:18, line:39:4>
        |         |-BreakStmt 0x15b142fb0 <line:31:6>
        |         `-CompoundStmt 0x15b143298 <line:34:20, line:38:5>
        |-BinaryOperator 0x15b143400 <line:43:3, col:9> 'char *' '='
        | |-DeclRefExpr 0x15b143370 <col:3> 'char *' lvalue Var 0x15b128f38 'key' 'char *'
        | `-ImplicitCastExpr 0x15b1433e8 <col:9> 'char *' <ArrayToPointerDecay>
        |   `-StringLiteral 0x15b1433d0 <col:9> 'char[1]' lvalue ""
        |-BinaryOperator 0x15b143460 <line:44:3, col:9> 'int' '='
        | |-DeclRefExpr 0x15b143420 <col:3> 'int' lvalue Var 0x15b128fd0 'len' 'int'
        | `-IntegerLiteral 0x15b143440 <col:9> 'int' 1
        |-GotoStmt 0x15b143480 <line:45:3, col:8> 'string_offest' 0x15b143300
        |-IfStmt 0x15b1439b0 <line:51:3, line:55:3> has_else
        | |-RecoveryExpr 0x15b1436f0 <line:51:7, col:23> '_Bool' contains-errors
        | |-CompoundStmt 0x15b1438d8 <col:34, line:53:3>
        | | `-BinaryOperator 0x15b1438b8 <line:52:4, col:33> 'long' contains-errors '='
        | |   |-DeclRefExpr 0x15b143710 <col:4> 'long' lvalue Var 0x15b129068 'index' 'long'
        | |   `-CStyleCastExpr 0x15b143890 <col:12, col:33> 'long' contains-errors <Dependent>
        | |     `-CallExpr 0x15b143850 <col:18, col:33> '<dependent type>' contains-errors
        | |       |-DeclRefExpr 0x15b143810 <col:18> 'int ()' Function 0x15b143758 'Z_DVAL_P' 'int ()'
        | |       `-RecoveryExpr 0x15b143830 <col:27> '<dependent type>' contains-errors lvalue
        | `-CompoundStmt 0x15b143998 <line:53:10, line:55:3>
        |   `-BinaryOperator 0x15b143978 <line:54:4, col:27> 'long' contains-errors '='
        |     |-DeclRefExpr 0x15b1438f0 <col:4> 'long' lvalue Var 0x15b129068 'index' 'long'
        |     `-CallExpr 0x15b143950 <col:12, col:27> '<dependent type>' contains-errors
        |       |-DeclRefExpr 0x15b143910 <col:12> 'int ()' Function 0x15b143500 'Z_LVAL_P' 'int ()'
        |       `-RecoveryExpr 0x15b143930 <col:21> '<dependent type>' contains-errors lvalue
        |-IfStmt 0x15b143e28 <line:56:3, line:72:3>
        | |-RecoveryExpr 0x15b143b00 <line:56:7, col:61> '_Bool' contains-errors
        | `-CompoundStmt 0x15b143e10 <col:70, line:72:3>
        |   `-SwitchStmt 0x15b143b58 <line:57:4, line:71:4>
        |     |-ImplicitCastExpr 0x15b143b40 <line:57:12> 'int' <LValueToRValue>
        |     | `-DeclRefExpr 0x15b143b20 <col:12> 'int' lvalue ParmVar 0x15b128ca8 'type' 'int'
        |     `-CompoundStmt 0x15b143df0 <col:18, line:71:4>
        |       |-BreakStmt 0x15b143c00 <line:63:6>
        |       `-CompoundStmt 0x15b143de0 <line:66:20, line:70:7>
        `-DefaultStmt 0x15b143e90 <line:74:2, col:9>
          `-NullStmt 0x15b143e88 <col:9>
