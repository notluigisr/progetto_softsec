TranslationUnitDecl 0x127029008 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x127029eb8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1270295d0 '__int128'
|-TypedefDecl 0x127029f28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1270295f0 'unsigned __int128'
|-TypedefDecl 0x1270fa430 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1270fa200 'struct __NSConstantString_tag'
|   `-Record 0x127029f80 '__NSConstantString_tag'
|-TypedefDecl 0x1270fa498 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x127029790 '__SVInt8_t'
|-TypedefDecl 0x1270fa500 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x1270297b0 '__SVInt16_t'
|-TypedefDecl 0x1270fa568 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x1270297d0 '__SVInt32_t'
|-TypedefDecl 0x1270fa5d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x1270297f0 '__SVInt64_t'
|-TypedefDecl 0x1270fa638 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x127029810 '__SVUint8_t'
|-TypedefDecl 0x1270fa6a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x127029830 '__SVUint16_t'
|-TypedefDecl 0x1270fa708 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x127029850 '__SVUint32_t'
|-TypedefDecl 0x1270fa770 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x127029870 '__SVUint64_t'
|-TypedefDecl 0x1270fa7d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x127029890 '__SVFloat16_t'
|-TypedefDecl 0x1270fa840 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x1270298b0 '__SVFloat32_t'
|-TypedefDecl 0x1270fa8a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x1270298d0 '__SVFloat64_t'
|-TypedefDecl 0x1270fa910 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x1270298f0 '__SVBfloat16_t'
|-TypedefDecl 0x1270fa978 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x127029910 '__clang_svint8x2_t'
|-TypedefDecl 0x1270fa9e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x127029930 '__clang_svint16x2_t'
|-TypedefDecl 0x1270faa48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x127029950 '__clang_svint32x2_t'
|-TypedefDecl 0x1270faab0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x127029970 '__clang_svint64x2_t'
|-TypedefDecl 0x1270fab18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x127029990 '__clang_svuint8x2_t'
|-TypedefDecl 0x1270fab80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x1270299b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1270fabe8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x1270299d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x1270fac50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x1270299f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1270facb8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x127029a10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x1270fad20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x127029a30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x1270fad88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x127029a50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1270fadf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x127029a70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x1270fae58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x127029a90 '__clang_svint8x3_t'
|-TypedefDecl 0x1270faec0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x127029ab0 '__clang_svint16x3_t'
|-TypedefDecl 0x1270faf28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x127029ad0 '__clang_svint32x3_t'
|-TypedefDecl 0x1270faf90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x127029af0 '__clang_svint64x3_t'
|-TypedefDecl 0x1270faff8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x127029b10 '__clang_svuint8x3_t'
|-TypedefDecl 0x1270fb060 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x127029b30 '__clang_svuint16x3_t'
|-TypedefDecl 0x1270fb0c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x127029b50 '__clang_svuint32x3_t'
|-TypedefDecl 0x1270fb130 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x127029b70 '__clang_svuint64x3_t'
|-TypedefDecl 0x1270fb198 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x127029b90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x1270fba00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x127029bb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x1270fba68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x127029bd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1270fbad0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x127029bf0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x1270fbb38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x127029c10 '__clang_svint8x4_t'
|-TypedefDecl 0x1270fbba0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x127029c30 '__clang_svint16x4_t'
|-TypedefDecl 0x1270fbc08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x127029c50 '__clang_svint32x4_t'
|-TypedefDecl 0x1270fbc70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x127029c70 '__clang_svint64x4_t'
|-TypedefDecl 0x1270fbcd8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x127029c90 '__clang_svuint8x4_t'
|-TypedefDecl 0x1270fbd40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x127029cb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1270fbda8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x127029cd0 '__clang_svuint32x4_t'
|-TypedefDecl 0x1270fbe10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x127029cf0 '__clang_svuint64x4_t'
|-TypedefDecl 0x1270fbe78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x127029d10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1270fbee0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x127029d30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x1270fbf48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x127029d50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1270fbfb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x127029d70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x1270fc018 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x127029d90 '__SVBool_t'
|-TypedefDecl 0x1270fc080 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x127029db0 '__clang_svboolx2_t'
|-TypedefDecl 0x1270fc0e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x127029dd0 '__clang_svboolx4_t'
|-TypedefDecl 0x1270fc150 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x127029df0 '__SVCount_t'
|-TypedefDecl 0x1270fc1f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1270fc1b0 'char *'
|   `-BuiltinType 0x1270290b0 'char'
|-TypedefDecl 0x1270fc268 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1270fc1b0 'char *'
|   `-BuiltinType 0x1270290b0 'char'
|-FunctionDecl 0x127114c00 <dataset_diviso_filec/func19478_vuln.c:1:1, line:85:1> line:1:12 open_cred_file 'int (char *, struct parsed_mount_info *)' static
| |-ParmVarDecl 0x1270fc2d8 <col:27, col:33> col:33 used file_name 'char *'
| |-ParmVarDecl 0x1270fc8c8 <line:2:4, col:30> col:30 used parsed_info 'struct parsed_mount_info *'
| `-CompoundStmt 0x12711abc8 <line:3:1, line:85:1>
|   |-DeclStmt 0x127114dd0 <line:4:2, col:23>
|   | `-VarDecl 0x127114d18 <col:2, col:19> col:8 used line_buf 'char *' cinit
|   |   `-RecoveryExpr 0x127114db0 <col:19> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x127114ea0 <line:5:2, col:23>
|   | `-VarDecl 0x127114e00 <col:2, col:19> col:8 used temp_val 'char *' cinit
|   |   `-RecoveryExpr 0x127114e80 <col:19> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x127114f68 <line:7:2, col:7>
|   | `-VarDecl 0x127114f00 <col:2, col:6> col:6 used i 'int'
|   |-DeclStmt 0x127115020 <line:8:2, col:32>
|   | `-VarDecl 0x127114f98 <col:2, col:28> col:12 used line_buf_size 'const int' cinit
|   |   `-IntegerLiteral 0x127115000 <col:28> 'int' 4096
|   |-DeclStmt 0x1271150d8 <line:9:2, col:30>
|   | `-VarDecl 0x127115050 <col:2, col:28> col:12 used min_non_white 'const int' cinit
|   |   `-IntegerLiteral 0x1271150b8 <col:28> 'int' 10
|   |-BinaryOperator 0x1271152f8 <line:11:2, col:32> 'int' '='
|   | |-DeclRefExpr 0x1271150f0 <col:2> 'int' lvalue Var 0x127114f00 'i' 'int'
|   | `-CallExpr 0x1271152c8 <col:6, col:32> 'int'
|   |   |-ImplicitCastExpr 0x1271152b0 <col:6> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x127115220 <col:6> 'int ()' Function 0x127115168 'toggle_dac_capability' 'int ()'
|   |   |-IntegerLiteral 0x127115240 <col:28> 'int' 0
|   |   `-IntegerLiteral 0x127115260 <col:31> 'int' 1
|   |-IfStmt 0x1271153b8 <line:12:2, line:13:8>
|   | |-ImplicitCastExpr 0x127115338 <line:12:6> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x127115318 <col:6> 'int' lvalue Var 0x127114f00 'i' 'int'
|   | `-GotoStmt 0x1271153a0 <line:13:3, col:8> 'return_i' 0x127115350
|   |-BinaryOperator 0x1271155d0 <line:15:2, col:28> 'int' contains-errors '='
|   | |-DeclRefExpr 0x1271153d8 <col:2> 'int' lvalue Var 0x127114f00 'i' 'int'
|   | `-CallExpr 0x1271155a0 <col:6, col:28> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x1271154d8 <col:6> 'int ()' Function 0x127115420 'access' 'int ()'
|   |   |-DeclRefExpr 0x1271154f8 <col:13> 'char *' lvalue ParmVar 0x1270fc2d8 'file_name' 'char *'
|   |   `-RecoveryExpr 0x127115580 <col:24> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x1271157a8 <line:16:2, line:20:2>
|   | |-ImplicitCastExpr 0x127115610 <line:16:6> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1271155f0 <col:6> 'int' lvalue Var 0x127114f00 'i' 'int'
|   | `-CompoundStmt 0x127115780 <col:9, line:20:2>
|   |   |-CallExpr 0x1271156a0 <line:17:3, col:29> 'int'
|   |   | |-ImplicitCastExpr 0x127115688 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x127115628 <col:3> 'int ()' Function 0x127115168 'toggle_dac_capability' 'int ()'
|   |   | |-IntegerLiteral 0x127115648 <col:25> 'int' 0
|   |   | `-IntegerLiteral 0x127115668 <col:28> 'int' 0
|   |   |-BinaryOperator 0x127115748 <line:18:3, col:7> 'int' contains-errors '='
|   |   | |-DeclRefExpr 0x1271156d0 <col:3> 'int' lvalue Var 0x127114f00 'i' 'int'
|   |   | `-RecoveryExpr 0x127115728 <col:7> '<dependent type>' contains-errors lvalue
|   |   `-GotoStmt 0x127115768 <line:19:3, col:8> 'return_i' 0x127115350
|   |-IfStmt 0x127117400 <line:23:2, line:27:2>
|   | |-BinaryOperator 0x127115a58 <line:23:6, col:12> 'int' contains-errors '=='
|   | | |-RecoveryExpr 0x127115a18 <col:6> '<dependent type>' contains-errors lvalue
|   | | `-RecoveryExpr 0x127115a38 <col:12> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x127115bd0 <col:18, line:27:2>
|   |   |-CallExpr 0x127115af0 <line:24:3, col:29> 'int'
|   |   | |-ImplicitCastExpr 0x127115ad8 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x127115a78 <col:3> 'int ()' Function 0x127115168 'toggle_dac_capability' 'int ()'
|   |   | |-IntegerLiteral 0x127115a98 <col:25> 'int' 0
|   |   | `-IntegerLiteral 0x127115ab8 <col:28> 'int' 0
|   |   |-BinaryOperator 0x127115b98 <line:25:3, col:7> 'int' contains-errors '='
|   |   | |-DeclRefExpr 0x127115b20 <col:3> 'int' lvalue Var 0x127114f00 'i' 'int'
|   |   | `-RecoveryExpr 0x127115b78 <col:7> '<dependent type>' contains-errors lvalue
|   |   `-GotoStmt 0x127115bb8 <line:26:3, col:8> 'return_i' 0x127115350
|   |-BinaryOperator 0x1271174e8 <line:29:2, col:32> 'int' '='
|   | |-DeclRefExpr 0x127117420 <col:2> 'int' lvalue Var 0x127114f00 'i' 'int'
|   | `-CallExpr 0x1271174b8 <col:6, col:32> 'int'
|   |   |-ImplicitCastExpr 0x1271174a0 <col:6> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x127117440 <col:6> 'int ()' Function 0x127115168 'toggle_dac_capability' 'int ()'
|   |   |-IntegerLiteral 0x127117460 <col:28> 'int' 0
|   |   `-IntegerLiteral 0x127117480 <col:31> 'int' 0
|   |-IfStmt 0x127117558 <line:30:2, line:31:8>
|   | |-ImplicitCastExpr 0x127117528 <line:30:6> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x127117508 <col:6> 'int' lvalue Var 0x127114f00 'i' 'int'
|   | `-GotoStmt 0x127117540 <line:31:3, col:8> 'return_i' 0x127115350
|   |-BinaryOperator 0x1271178b0 <line:33:2, col:41> 'char *' contains-errors '='
|   | |-DeclRefExpr 0x127117578 <col:2> 'char *' contains-errors lvalue Var 0x127114d18 'line_buf' 'char *'
|   | `-CStyleCastExpr 0x127117888 <col:13, col:41> 'char *' <BitCast>
|   |   `-CallExpr 0x127117818 <col:21, col:41> 'void *'
|   |     |-ImplicitCastExpr 0x127117800 <col:21> 'void *(*)(unsigned long)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x127117778 <col:21> 'void *(unsigned long)' Function 0x1271175d8 'malloc' 'void *(unsigned long)'
|   |     `-ImplicitCastExpr 0x127117858 <col:28> 'unsigned long' <IntegralCast>
|   |       `-ImplicitCastExpr 0x127117840 <col:28> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x127117798 <col:28> 'const int' lvalue Var 0x127114f98 'line_buf_size' 'const int'
|   |-IfStmt 0x127117a90 <line:34:2, line:37:2>
|   | |-BinaryOperator 0x1271179a0 <line:34:6, col:18> 'int' contains-errors '=='
|   | | |-DeclRefExpr 0x127117928 <col:6> 'char *' contains-errors lvalue Var 0x127114d18 'line_buf' 'char *'
|   | | `-RecoveryExpr 0x127117980 <col:18> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x127117a70 <col:24, line:37:2>
|   |   |-BinaryOperator 0x127117a38 <line:35:3, col:7> 'int' contains-errors '='
|   |   | |-DeclRefExpr 0x1271179c0 <col:3> 'int' lvalue Var 0x127114f00 'i' 'int'
|   |   | `-RecoveryExpr 0x127117a18 <col:7> '<dependent type>' contains-errors lvalue
|   |   `-GotoStmt 0x127117a58 <line:36:3, col:8> 'return_i' 0x127115350
|   |-WhileStmt 0x12711a268 <line:40:2, line:74:2>
|   | |-CallExpr 0x127117c60 <line:40:9, col:42> '<dependent type>' contains-errors
|   | | |-DeclRefExpr 0x127117b90 <col:9> 'int ()' Function 0x127117ad8 'fgets' 'int ()'
|   | | |-DeclRefExpr 0x127117bb0 <col:15> 'char *' contains-errors lvalue Var 0x127114d18 'line_buf' 'char *'
|   | | |-DeclRefExpr 0x127117bd0 <col:25> 'const int' lvalue Var 0x127114f98 'line_buf_size' 'const int'
|   | | `-RecoveryExpr 0x127117c40 <col:40> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x12711a240 <col:45, line:74:2>
|   |   |-ForStmt 0x127118140 <line:42:3, line:45:3>
|   |   | |-BinaryOperator 0x127117cd8 <line:42:8, col:12> 'int' '='
|   |   | | |-DeclRefExpr 0x127117c98 <col:8> 'int' lvalue Var 0x127114f00 'i' 'int'
|   |   | | `-IntegerLiteral 0x127117cb8 <col:12> 'int' 0
|   |   | |-<<<NULL>>>
|   |   | |-BinaryOperator 0x127117e00 <col:15, col:51> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x127117de8 <col:15> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x127117cf8 <col:15> 'int' lvalue Var 0x127114f00 'i' 'int'
|   |   | | `-BinaryOperator 0x127117dc8 <col:19, col:51> 'int' '+'
|   |   | |   |-BinaryOperator 0x127117d88 <col:19, col:35> 'int' '-'
|   |   | |   | |-ImplicitCastExpr 0x127117d58 <col:19> 'int' <LValueToRValue>
|   |   | |   | | `-DeclRefExpr 0x127117d18 <col:19> 'const int' lvalue Var 0x127114f98 'line_buf_size' 'const int'
|   |   | |   | `-ImplicitCastExpr 0x127117d70 <col:35> 'int' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x127117d38 <col:35> 'const int' lvalue Var 0x127115050 'min_non_white' 'const int'
|   |   | |   `-IntegerLiteral 0x127117da8 <col:51> 'int' 1
|   |   | |-UnaryOperator 0x127117e98 <col:54, col:55> 'int' postfix '++'
|   |   | | `-DeclRefExpr 0x127117e78 <col:54> 'int' lvalue Var 0x127114f00 'i' 'int'
|   |   | `-CompoundStmt 0x127118128 <col:59, line:45:3>
|   |   |   `-IfStmt 0x127118108 <line:43:4, line:44:5>
|   |   |     |-BinaryOperator 0x1271180e0 <line:43:8, col:52> 'int' contains-errors '&&'
|   |   |     | |-ParenExpr 0x127117fa8 <col:8, col:27> 'int' contains-errors
|   |   |     | | `-BinaryOperator 0x127117f88 <col:9, col:24> 'int' contains-errors '!='
|   |   |     | |   |-ImplicitCastExpr 0x127117f70 <col:9, col:19> 'int' contains-errors <IntegralCast>
|   |   |     | |   | `-ImplicitCastExpr 0x127117f58 <col:9, col:19> 'char' contains-errors <LValueToRValue>
|   |   |     | |   |   `-ArraySubscriptExpr 0x127117f20 <col:9, col:19> 'char' contains-errors lvalue
|   |   |     | |   |     |-ImplicitCastExpr 0x127117ef0 <col:9> 'char *' contains-errors <LValueToRValue>
|   |   |     | |   |     | `-DeclRefExpr 0x127117eb0 <col:9> 'char *' contains-errors lvalue Var 0x127114d18 'line_buf' 'char *'
|   |   |     | |   |     `-ImplicitCastExpr 0x127117f08 <col:18> 'int' <LValueToRValue>
|   |   |     | |   |       `-DeclRefExpr 0x127117ed0 <col:18> 'int' lvalue Var 0x127114f00 'i' 'int'
|   |   |     | |   `-CharacterLiteral 0x127117f40 <col:24> 'int' 32
|   |   |     | `-ParenExpr 0x1271180c0 <col:32, col:52> 'int' contains-errors
|   |   |     |   `-BinaryOperator 0x1271180a0 <col:33, col:48> 'int' contains-errors '!='
|   |   |     |     |-ImplicitCastExpr 0x127118088 <col:33, col:43> 'int' contains-errors <IntegralCast>
|   |   |     |     | `-ImplicitCastExpr 0x127118070 <col:33, col:43> 'char' contains-errors <LValueToRValue>
|   |   |     |     |   `-ArraySubscriptExpr 0x127118038 <col:33, col:43> 'char' contains-errors lvalue
|   |   |     |     |     |-ImplicitCastExpr 0x127118008 <col:33> 'char *' contains-errors <LValueToRValue>
|   |   |     |     |     | `-DeclRefExpr 0x127117fc8 <col:33> 'char *' contains-errors lvalue Var 0x127114d18 'line_buf' 'char *'
|   |   |     |     |     `-ImplicitCastExpr 0x127118020 <col:42> 'int' <LValueToRValue>
|   |   |     |     |       `-DeclRefExpr 0x127117fe8 <col:42> 'int' lvalue Var 0x127114f00 'i' 'int'
|   |   |     |     `-CharacterLiteral 0x127118058 <col:48> 'int' 9
|   |   |     `-BreakStmt 0x127118100 <line:44:5>
|   |   |-CallExpr 0x1271182b0 <line:46:3, col:31> 'int' contains-errors
|   |   | |-ImplicitCastExpr 0x127118298 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x127118258 <col:3> 'int ()' Function 0x1271181a0 'null_terminate_endl' 'int ()'
|   |   | `-ImplicitCastExpr 0x1271182d8 <col:23> 'char *' contains-errors <LValueToRValue>
|   |   |   `-DeclRefExpr 0x127118278 <col:23> 'char *' contains-errors lvalue Var 0x127114d18 'line_buf' 'char *'
|   |   `-SwitchStmt 0x127119540 <line:49:3, line:73:3>
|   |     |-CallExpr 0x127119510 <line:49:11, col:50> 'int' contains-errors
|   |     | |-ImplicitCastExpr 0x1271194f8 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |     | | `-DeclRefExpr 0x1271183d0 <col:11> 'int ()' Function 0x127118318 'parse_cred_line' 'int ()'
|   |     | |-BinaryOperator 0x127119470 <col:27, col:38> 'char *' contains-errors '+'
|   |     | | |-ImplicitCastExpr 0x127119440 <col:27> 'char *' contains-errors <LValueToRValue>
|   |     | | | `-DeclRefExpr 0x127119400 <col:27> 'char *' contains-errors lvalue Var 0x127114d18 'line_buf' 'char *'
|   |     | | `-ImplicitCastExpr 0x127119458 <col:38> 'int' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x127119420 <col:38> 'int' lvalue Var 0x127114f00 'i' 'int'
|   |     | `-UnaryOperator 0x1271194e0 <col:41, col:42> 'char **' contains-errors prefix '&' cannot overflow
|   |     |   `-DeclRefExpr 0x127119490 <col:42> 'char *' contains-errors lvalue Var 0x127114e00 'temp_val' 'char *'
|   |     `-CompoundStmt 0x12711a1e8 <col:53, line:73:3>
|   |       |-CallExpr 0x127119978 <line:51:4, line:52:34> '<dependent type>' contains-errors
|   |       | |-DeclRefExpr 0x127119808 <line:51:4> 'unsigned long (char *, const char *, unsigned long)' Function 0x1271195b8 'strlcpy' 'unsigned long (char *, const char *, unsigned long)'
|   |       | |-RecoveryExpr 0x127119860 <col:12, col:25> '<dependent type>' contains-errors lvalue
|   |       | | `-DeclRefExpr 0x127119828 <col:12> 'struct parsed_mount_info *' lvalue ParmVar 0x1270fc8c8 'parsed_info' 'struct parsed_mount_info *'
|   |       | |-DeclRefExpr 0x127119888 <col:35> 'char *' contains-errors lvalue Var 0x127114e00 'temp_val' 'char *'
|   |       | `-UnaryExprOrTypeTraitExpr 0x127119928 <line:52:5, col:33> 'unsigned long' contains-errors sizeof
|   |       |   `-ParenExpr 0x127119908 <col:11, col:33> '<dependent type>' contains-errors lvalue
|   |       |     `-RecoveryExpr 0x1271198e0 <col:12, col:25> '<dependent type>' contains-errors lvalue
|   |       |       `-DeclRefExpr 0x1271198a8 <col:12> 'struct parsed_mount_info *' lvalue ParmVar 0x1270fc8c8 'parsed_info' 'struct parsed_mount_info *' non_odr_use_unevaluated
|   |       |-BinaryOperator 0x127119a30 <line:53:4, col:28> '<dependent type>' contains-errors '='
|   |       | |-RecoveryExpr 0x1271199e8 <col:4, col:17> '<dependent type>' contains-errors lvalue
|   |       | | `-DeclRefExpr 0x1271199b0 <col:4> 'struct parsed_mount_info *' lvalue ParmVar 0x1270fc8c8 'parsed_info' 'struct parsed_mount_info *'
|   |       | `-IntegerLiteral 0x127119a10 <col:28> 'int' 1
|   |       |-BreakStmt 0x127119a50 <line:54:4>
|   |       |-BinaryOperator 0x127119c30 <line:56:4, col:42> 'int' contains-errors '='
|   |       | |-DeclRefExpr 0x127119a58 <col:4> 'int' lvalue Var 0x127114f00 'i' 'int'
|   |       | `-CallExpr 0x127119bd0 <col:8, col:42> 'int' contains-errors
|   |       |   |-ImplicitCastExpr 0x127119bb8 <col:8> 'int (*)()' <FunctionToPointerDecay>
|   |       |   | `-DeclRefExpr 0x127119b58 <col:8> 'int ()' Function 0x127119aa0 'set_password' 'int ()'
|   |       |   |-ImplicitCastExpr 0x127119c00 <col:21> 'struct parsed_mount_info *' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x127119b78 <col:21> 'struct parsed_mount_info *' lvalue ParmVar 0x1270fc8c8 'parsed_info' 'struct parsed_mount_info *'
|   |       |   `-ImplicitCastExpr 0x127119c18 <col:34> 'char *' contains-errors <LValueToRValue>
|   |       |     `-DeclRefExpr 0x127119b98 <col:34> 'char *' contains-errors lvalue Var 0x127114e00 'temp_val' 'char *'
|   |       |-IfStmt 0x127119ca0 <line:57:4, line:58:10>
|   |       | |-ImplicitCastExpr 0x127119c70 <line:57:8> 'int' <LValueToRValue>
|   |       | | `-DeclRefExpr 0x127119c50 <col:8> 'int' lvalue Var 0x127114f00 'i' 'int'
|   |       | `-GotoStmt 0x127119c88 <line:58:5, col:10> 'return_i' 0x127115350
|   |       |-BreakStmt 0x127119cc0 <line:59:4>
|   |       |-CallExpr 0x127119fd8 <line:64:4, line:65:32> '<dependent type>' contains-errors
|   |       | |-DeclRefExpr 0x127119e68 <line:64:4> 'unsigned long (char *, const char *, unsigned long)' Function 0x1271195b8 'strlcpy' 'unsigned long (char *, const char *, unsigned long)'
|   |       | |-RecoveryExpr 0x127119ec0 <col:12, col:25> '<dependent type>' contains-errors lvalue
|   |       | | `-DeclRefExpr 0x127119e88 <col:12> 'struct parsed_mount_info *' lvalue ParmVar 0x1270fc8c8 'parsed_info' 'struct parsed_mount_info *'
|   |       | |-DeclRefExpr 0x127119ee8 <col:33> 'char *' contains-errors lvalue Var 0x127114e00 'temp_val' 'char *'
|   |       | `-UnaryExprOrTypeTraitExpr 0x127119f88 <line:65:5, col:31> 'unsigned long' contains-errors sizeof
|   |       |   `-ParenExpr 0x127119f68 <col:11, col:31> '<dependent type>' contains-errors lvalue
|   |       |     `-RecoveryExpr 0x127119f40 <col:12, col:25> '<dependent type>' contains-errors lvalue
|   |       |       `-DeclRefExpr 0x127119f08 <col:12> 'struct parsed_mount_info *' lvalue ParmVar 0x1270fc8c8 'parsed_info' 'struct parsed_mount_info *' non_odr_use_unevaluated
|   |       |-BreakStmt 0x12711a010 <line:66:4>
|   |       `-BreakStmt 0x12711a1e0 <line:72:4>
|   |-BinaryOperator 0x12711a2c8 <line:75:2, col:6> 'int' '='
|   | |-DeclRefExpr 0x12711a288 <col:2> 'int' lvalue Var 0x127114f00 'i' 'int'
|   | `-IntegerLiteral 0x12711a2a8 <col:6> 'int' 0
|   |-LabelStmt 0x12711a428 <line:76:1, col:9> 'return_i'
|   | `-NullStmt 0x12711a420 <col:9>
|   |-IfStmt 0x12711a8c0 <line:81:2, line:82:36>
|   | |-RecoveryExpr 0x12711a468 <line:81:6, col:18> '_Bool' contains-errors
|   | `-CallExpr 0x12711a828 <line:82:3, col:36> 'void *' contains-errors
|   |   |-ImplicitCastExpr 0x12711a810 <col:3> 'void *(*)(void *, int, unsigned long)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x12711a728 <col:3> 'void *(void *, int, unsigned long)' Function 0x12711a4d8 'memset' 'void *(void *, int, unsigned long)'
|   |   |-ImplicitCastExpr 0x12711a878 <col:10> 'void *' contains-errors <BitCast>
|   |   | `-ImplicitCastExpr 0x12711a860 <col:10> 'char *' contains-errors <LValueToRValue>
|   |   |   `-DeclRefExpr 0x12711a748 <col:10> 'char *' contains-errors lvalue Var 0x127114d18 'line_buf' 'char *'
|   |   |-IntegerLiteral 0x12711a768 <col:20> 'int' 0
|   |   `-ImplicitCastExpr 0x12711a8a8 <col:23> 'unsigned long' <IntegralCast>
|   |     `-ImplicitCastExpr 0x12711a890 <col:23> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x12711a788 <col:23> 'const int' lvalue Var 0x127114f98 'line_buf_size' 'const int'
|   |-CallExpr 0x12711ab28 <line:83:2, col:15> 'void' contains-errors
|   | |-ImplicitCastExpr 0x12711ab10 <col:2> 'void (*)(void *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x12711aa88 <col:2> 'void (void *)' Function 0x12711a918 'free' 'void (void *)'
|   | `-ImplicitCastExpr 0x12711ab68 <col:7> 'void *' contains-errors <BitCast>
|   |   `-ImplicitCastExpr 0x12711ab50 <col:7> 'char *' contains-errors <LValueToRValue>
|   |     `-DeclRefExpr 0x12711aaa8 <col:7> 'char *' contains-errors lvalue Var 0x127114d18 'line_buf' 'char *'
|   `-ReturnStmt 0x12711abb8 <line:84:2, col:9>
|     `-ImplicitCastExpr 0x12711aba0 <col:9> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x12711ab80 <col:9> 'int' lvalue Var 0x127114f00 'i' 'int'
|-FunctionDecl 0x1271175d8 <line:33:21> col:21 implicit used malloc 'void *(unsigned long)' extern
| |-ParmVarDecl 0x1271176d8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-BuiltinAttr 0x127117680 <<invalid sloc>> Implicit 871
| `-AllocSizeAttr 0x127117748 <col:21> Implicit 1
|-FunctionDecl 0x1271195b8 <line:51:4> col:4 implicit used strlcpy 'unsigned long (char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0x1271196b8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x127119720 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x127119788 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x127119660 <<invalid sloc>> Implicit 969
|-FunctionDecl 0x12711a4d8 <line:82:3> col:3 implicit used memset 'void *(void *, int, unsigned long)' extern
| |-ParmVarDecl 0x12711a5d8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x12711a640 <<invalid sloc>> <invalid sloc> 'int'
| |-ParmVarDecl 0x12711a6a8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x12711a580 <<invalid sloc>> Implicit 900
`-FunctionDecl 0x12711a918 <line:83:2> col:2 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x12711aa18 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x12711a9c0 <<invalid sloc>> Implicit 873
