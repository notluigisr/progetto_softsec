TranslationUnitDecl 0x157051408 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1570522b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1570519d0 '__int128'
|-TypedefDecl 0x157052328 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1570519f0 'unsigned __int128'
|-TypedefDecl 0x156811630 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x156811400 'struct __NSConstantString_tag'
|   `-Record 0x157052380 '__NSConstantString_tag'
|-TypedefDecl 0x156811698 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x157051b90 '__SVInt8_t'
|-TypedefDecl 0x156811700 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x157051bb0 '__SVInt16_t'
|-TypedefDecl 0x156811768 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x157051bd0 '__SVInt32_t'
|-TypedefDecl 0x1568117d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x157051bf0 '__SVInt64_t'
|-TypedefDecl 0x156811838 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x157051c10 '__SVUint8_t'
|-TypedefDecl 0x1568118a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x157051c30 '__SVUint16_t'
|-TypedefDecl 0x156811908 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x157051c50 '__SVUint32_t'
|-TypedefDecl 0x156811970 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x157051c70 '__SVUint64_t'
|-TypedefDecl 0x1568119d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x157051c90 '__SVFloat16_t'
|-TypedefDecl 0x156811a40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x157051cb0 '__SVFloat32_t'
|-TypedefDecl 0x156811aa8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x157051cd0 '__SVFloat64_t'
|-TypedefDecl 0x156811b10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x157051cf0 '__SVBfloat16_t'
|-TypedefDecl 0x156811b78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x157051d10 '__clang_svint8x2_t'
|-TypedefDecl 0x156811be0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x157051d30 '__clang_svint16x2_t'
|-TypedefDecl 0x156811c48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x157051d50 '__clang_svint32x2_t'
|-TypedefDecl 0x156811cb0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x157051d70 '__clang_svint64x2_t'
|-TypedefDecl 0x156811d18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x157051d90 '__clang_svuint8x2_t'
|-TypedefDecl 0x156811d80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x157051db0 '__clang_svuint16x2_t'
|-TypedefDecl 0x156811de8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x157051dd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x156811e50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x157051df0 '__clang_svuint64x2_t'
|-TypedefDecl 0x156811eb8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x157051e10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x156811f20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x157051e30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x156811f88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x157051e50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x156811ff0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x157051e70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x156812058 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x157051e90 '__clang_svint8x3_t'
|-TypedefDecl 0x1568120c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x157051eb0 '__clang_svint16x3_t'
|-TypedefDecl 0x156812128 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x157051ed0 '__clang_svint32x3_t'
|-TypedefDecl 0x156812190 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x157051ef0 '__clang_svint64x3_t'
|-TypedefDecl 0x1568121f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x157051f10 '__clang_svuint8x3_t'
|-TypedefDecl 0x156812260 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x157051f30 '__clang_svuint16x3_t'
|-TypedefDecl 0x1568122c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x157051f50 '__clang_svuint32x3_t'
|-TypedefDecl 0x156812330 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x157051f70 '__clang_svuint64x3_t'
|-TypedefDecl 0x156812398 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x157051f90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x156812400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x157051fb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x156812468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x157051fd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1568124d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x157051ff0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x156812538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x157052010 '__clang_svint8x4_t'
|-TypedefDecl 0x1568125a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x157052030 '__clang_svint16x4_t'
|-TypedefDecl 0x156812608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x157052050 '__clang_svint32x4_t'
|-TypedefDecl 0x156812670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x157052070 '__clang_svint64x4_t'
|-TypedefDecl 0x1568126d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x157052090 '__clang_svuint8x4_t'
|-TypedefDecl 0x156812740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1570520b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1568127a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1570520d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x156812810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1570520f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x156812878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x157052110 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1568128e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x157052130 '__clang_svfloat32x4_t'
|-TypedefDecl 0x156812948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x157052150 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1568129b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x157052170 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x156812a18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x157052190 '__SVBool_t'
|-TypedefDecl 0x156812a80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1570521b0 '__clang_svboolx2_t'
|-TypedefDecl 0x156812ae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1570521d0 '__clang_svboolx4_t'
|-TypedefDecl 0x156812b50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1570521f0 '__SVCount_t'
|-TypedefDecl 0x156812bf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x156812bb0 'char *'
|   `-BuiltinType 0x1570514b0 'char'
|-TypedefDecl 0x156812c68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x156812bb0 'char *'
|   `-BuiltinType 0x1570514b0 'char'
|-FunctionDecl 0x156812f18 <dataset_diviso_filec/func10636_vuln.c:1:1, line:29:1> line:1:21 invalid host_from_stream_offset 'void *(int *, int, int)' static inline
| |-ParmVarDecl 0x156812d28 <col:45, col:55> col:55 invalid f 'int *'
| |-ParmVarDecl 0x156812da8 <line:2:45, col:56> col:56 invalid offset 'int'
| |-ParmVarDecl 0x156812e28 <line:3:45, col:49> col:49 used flags 'int'
| `-CompoundStmt 0x15711f390 <line:4:1, line:29:1>
|   |-DeclStmt 0x156813070 <line:5:5, col:34>
|   | `-VarDecl 0x156812ff0 <col:5, col:22> col:22 invalid block 'int *' static
|   |-DeclStmt 0x156813198 <line:6:5, col:17>
|   | `-VarDecl 0x156813130 <col:5, col:16> col:10 used id 'char[256]'
|   |-IfStmt 0x15711e790 <line:9:5, line:16:5>
|   | |-BinaryOperator 0x156813228 <line:9:9, col:17> '<dependent type>' contains-errors '&'
|   | | |-DeclRefExpr 0x1568131b0 <col:9> 'int' lvalue ParmVar 0x156812e28 'flags' 'int'
|   | | `-RecoveryExpr 0x156813208 <col:17> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x15711e770 <col:41, line:16:5>
|   |   |-IfStmt 0x15711e570 <line:10:9, line:13:9>
|   |   | |-UnaryOperator 0x156813280 <line:10:13, col:14> '<dependent type>' contains-errors prefix '!' cannot overflow
|   |   | | `-ImplicitCastExpr 0x156813268 <col:14> '<dependent type>' contains-errors <LValueToRValue>
|   |   | |   `-RecoveryExpr 0x156813248 <col:14> '<dependent type>' contains-errors lvalue
|   |   | `-CompoundStmt 0x15711e550 <col:21, line:13:9>
|   |   |   |-CallExpr 0x15711e4c8 <line:11:13, col:31> 'int'
|   |   |   | |-ImplicitCastExpr 0x15711e4b0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x15711e400 <col:13> 'int ()' Function 0x156813338 'error_report' 'int ()'
|   |   |   | `-ImplicitCastExpr 0x15711e4f0 <col:26> 'char *' <ArrayToPointerDecay>
|   |   |   |   `-StringLiteral 0x15711e460 <col:26> 'char[4]' lvalue "STR"
|   |   |   `-ReturnStmt 0x15711e540 <line:12:13, col:20>
|   |   |     `-RecoveryExpr 0x15711e520 <col:20> '<dependent type>' contains-errors lvalue
|   |   `-ReturnStmt 0x15711e760 <line:15:9, col:55>
|   |     `-BinaryOperator 0x15711e740 <col:16, col:55> '<dependent type>' contains-errors '+'
|   |       |-CallExpr 0x15711e6f8 <col:16, col:51> '<dependent type>' contains-errors
|   |       | |-DeclRefExpr 0x15711e670 <col:16> 'int ()' Function 0x15711e5b8 'memory_region_get_ram_ptr' 'int ()'
|   |       | `-CXXDependentScopeMemberExpr 0x15711e6b0 <col:42, col:49> '<dependent type>' contains-errors lvalue ->mr
|   |       |   `-RecoveryExpr 0x15711e690 <col:42> '<dependent type>' contains-errors lvalue
|   |       `-RecoveryExpr 0x15711e720 <col:55> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x15711ed28 <line:22:5, col:49> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x15711eb80 <col:5> 'int ()' Function 0x15711eac8 'QTAILQ_FOREACH' 'int ()'
|   | |-RecoveryExpr 0x15711eba0 <col:20> '<dependent type>' contains-errors lvalue
|   | |-UnaryOperator 0x15711ecf0 <col:27, col:37> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | `-CXXDependentScopeMemberExpr 0x15711eca8 <col:28, col:37> '<dependent type>' contains-errors lvalue .blocks
|   | |   `-RecoveryExpr 0x15711ec88 <col:28> '<dependent type>' contains-errors lvalue
|   | `-RecoveryExpr 0x15711ed08 <col:45> '<dependent type>' contains-errors lvalue
|   |-CompoundStmt 0x15711f2a0 <col:51, line:25:5>
|   | `-IfStmt 0x15711f280 <line:23:9, line:24:59>
|   |   |-UnaryOperator 0x15711f168 <line:23:13, col:50> '<dependent type>' contains-errors prefix '!' cannot overflow
|   |   | `-CallExpr 0x15711f130 <col:14, col:50> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x15711eff8 <col:14> 'int (const char *, const char *, unsigned long)' Function 0x15711eda8 'strncmp' 'int (const char *, const char *, unsigned long)'
|   |   |   |-DeclRefExpr 0x15711f018 <col:22> 'char[256]' lvalue Var 0x156813130 'id' 'char[256]'
|   |   |   |-CXXDependentScopeMemberExpr 0x15711f058 <col:26, col:33> '<dependent type>' contains-errors lvalue ->idstr
|   |   |   | `-RecoveryExpr 0x15711f038 <col:26> '<dependent type>' contains-errors lvalue
|   |   |   `-UnaryExprOrTypeTraitExpr 0x15711f0e0 <col:40, col:49> 'unsigned long' sizeof
|   |   |     `-ParenExpr 0x15711f0c0 <col:46, col:49> 'char[256]' lvalue
|   |   |       `-DeclRefExpr 0x15711f0a0 <col:47> 'char[256]' lvalue Var 0x156813130 'id' 'char[256]' non_odr_use_unevaluated
|   |   `-ReturnStmt 0x15711f270 <line:24:13, col:59>
|   |     `-BinaryOperator 0x15711f250 <col:20, col:59> '<dependent type>' contains-errors '+'
|   |       |-CallExpr 0x15711f208 <col:20, col:55> '<dependent type>' contains-errors
|   |       | |-DeclRefExpr 0x15711f180 <col:20> 'int ()' Function 0x15711e5b8 'memory_region_get_ram_ptr' 'int ()'
|   |       | `-CXXDependentScopeMemberExpr 0x15711f1c0 <col:46, col:53> '<dependent type>' contains-errors lvalue ->mr
|   |       |   `-RecoveryExpr 0x15711f1a0 <col:46> '<dependent type>' contains-errors lvalue
|   |       `-RecoveryExpr 0x15711f230 <col:59> '<dependent type>' contains-errors lvalue
|   `-CallExpr 0x15711f330 <line:27:5, col:27> 'int'
|     |-ImplicitCastExpr 0x15711f318 <col:5> 'int (*)()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x15711f2b8 <col:5> 'int ()' Function 0x156813338 'error_report' 'int ()'
|     |-ImplicitCastExpr 0x15711f360 <col:18> 'char *' <ArrayToPointerDecay>
|     | `-StringLiteral 0x15711f2d8 <col:18> 'char[4]' lvalue "STR"
|     `-ImplicitCastExpr 0x15711f378 <col:25> 'char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x15711f2f8 <col:25> 'char[256]' lvalue Var 0x156813130 'id' 'char[256]'
`-FunctionDecl 0x15711eda8 <line:23:14> col:14 implicit used strncmp 'int (const char *, const char *, unsigned long)' extern
  |-ParmVarDecl 0x15711eea8 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x15711ef10 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x15711ef78 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x15711ee50 <<invalid sloc>> Implicit 888
