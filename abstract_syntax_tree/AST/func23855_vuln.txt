TranslationUnitDecl 0x125844208 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1258450b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1258447d0 '__int128'
|-TypedefDecl 0x125845128 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1258447f0 'unsigned __int128'
|-TypedefDecl 0x12501d830 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12501d600 'struct __NSConstantString_tag'
|   `-Record 0x125845180 '__NSConstantString_tag'
|-TypedefDecl 0x12501d898 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x125844990 '__SVInt8_t'
|-TypedefDecl 0x12501d900 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x1258449b0 '__SVInt16_t'
|-TypedefDecl 0x12501d968 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x1258449d0 '__SVInt32_t'
|-TypedefDecl 0x12501d9d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x1258449f0 '__SVInt64_t'
|-TypedefDecl 0x12501da38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x125844a10 '__SVUint8_t'
|-TypedefDecl 0x12501daa0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x125844a30 '__SVUint16_t'
|-TypedefDecl 0x12501db08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x125844a50 '__SVUint32_t'
|-TypedefDecl 0x12501db70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x125844a70 '__SVUint64_t'
|-TypedefDecl 0x12501dbd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x125844a90 '__SVFloat16_t'
|-TypedefDecl 0x12501dc40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x125844ab0 '__SVFloat32_t'
|-TypedefDecl 0x12501dca8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x125844ad0 '__SVFloat64_t'
|-TypedefDecl 0x12501dd10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x125844af0 '__SVBfloat16_t'
|-TypedefDecl 0x12501dd78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x125844b10 '__clang_svint8x2_t'
|-TypedefDecl 0x12501dde0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x125844b30 '__clang_svint16x2_t'
|-TypedefDecl 0x12501de48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x125844b50 '__clang_svint32x2_t'
|-TypedefDecl 0x12501deb0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x125844b70 '__clang_svint64x2_t'
|-TypedefDecl 0x12501df18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x125844b90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12501df80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x125844bb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12501dfe8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x125844bd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12501e050 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x125844bf0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12501e0b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x125844c10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12501e120 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x125844c30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12501e188 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x125844c50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12501e1f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x125844c70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12501e258 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x125844c90 '__clang_svint8x3_t'
|-TypedefDecl 0x12501e2c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x125844cb0 '__clang_svint16x3_t'
|-TypedefDecl 0x12501e328 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x125844cd0 '__clang_svint32x3_t'
|-TypedefDecl 0x12501e390 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x125844cf0 '__clang_svint64x3_t'
|-TypedefDecl 0x12501e3f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x125844d10 '__clang_svuint8x3_t'
|-TypedefDecl 0x12501e460 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x125844d30 '__clang_svuint16x3_t'
|-TypedefDecl 0x12501e4c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x125844d50 '__clang_svuint32x3_t'
|-TypedefDecl 0x12501e530 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x125844d70 '__clang_svuint64x3_t'
|-TypedefDecl 0x12501e598 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x125844d90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12501ea00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x125844db0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12501ea68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x125844dd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12501ead0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x125844df0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12501eb38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x125844e10 '__clang_svint8x4_t'
|-TypedefDecl 0x12501eba0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x125844e30 '__clang_svint16x4_t'
|-TypedefDecl 0x12501ec08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x125844e50 '__clang_svint32x4_t'
|-TypedefDecl 0x12501ec70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x125844e70 '__clang_svint64x4_t'
|-TypedefDecl 0x12501ecd8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x125844e90 '__clang_svuint8x4_t'
|-TypedefDecl 0x12501ed40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x125844eb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12501eda8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x125844ed0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12501ee10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x125844ef0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12501ee78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x125844f10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12501eee0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x125844f30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12501ef48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x125844f50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12501efb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x125844f70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12501f018 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x125844f90 '__SVBool_t'
|-TypedefDecl 0x12501f080 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x125844fb0 '__clang_svboolx2_t'
|-TypedefDecl 0x12501f0e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x125844fd0 '__clang_svboolx4_t'
|-TypedefDecl 0x12501f150 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x125844ff0 '__SVCount_t'
|-TypedefDecl 0x12501f1f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12501f1b0 'char *'
|   `-BuiltinType 0x1258442b0 'char'
|-TypedefDecl 0x12501f268 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12501f1b0 'char *'
|   `-BuiltinType 0x1258442b0 'char'
|-FunctionDecl 0x125035f68 <dataset_diviso_filec/func23855_vuln.c:1:1, line:71:1> line:1:1 check_compat_entry_size_and_hooks 'int (struct compat_arpt_entry *, struct xt_table_info *, unsigned int *, const unsigned char *, const unsigned char *, const unsigned int *, const unsigned int *, const char *)'
| |-ParmVarDecl 0x12501f848 <col:35, col:61> col:61 used e 'struct compat_arpt_entry *'
| |-ParmVarDecl 0x125035a28 <line:2:7, col:29> col:29 used newinfo 'struct xt_table_info *'
| |-ParmVarDecl 0x125035ad8 <line:3:7, col:21> col:21 used size 'unsigned int *'
| |-ParmVarDecl 0x125035b88 <line:4:7, col:28> col:28 used base 'const unsigned char *'
| |-ParmVarDecl 0x125035c08 <line:5:7, col:28> col:28 used limit 'const unsigned char *'
| |-ParmVarDecl 0x125035cb8 <line:6:7, col:27> col:27 used hook_entries 'const unsigned int *'
| |-ParmVarDecl 0x125035d38 <line:7:7, col:27> col:27 used underflows 'const unsigned int *'
| |-ParmVarDecl 0x125035db8 <line:8:7, col:19> col:19 used name 'const char *'
| `-CompoundStmt 0x12700a580 <line:9:1, line:71:1>
|   |-DeclStmt 0x125036288 <line:10:2, col:27>
|   | |-RecordDecl 0x125036098 <col:2, col:9> col:9 struct xt_entry_target
|   | `-VarDecl 0x125036208 <col:2, col:26> col:26 used t 'struct xt_entry_target *'
|   |-DeclStmt 0x125036488 <line:11:2, col:26>
|   | |-RecordDecl 0x1250362a0 <col:2, col:9> col:9 struct xt_target
|   | `-VarDecl 0x125036408 <col:2, col:20> col:20 used target 'struct xt_target *'
|   |-DeclStmt 0x125036520 <line:12:2, col:27>
|   | `-VarDecl 0x1250364b8 <col:2, col:15> col:15 used entry_offset 'unsigned int'
|   |-DeclStmt 0x1250366d8 <line:13:2, col:17>
|   | |-VarDecl 0x125036550 <col:2, col:6> col:6 used ret 'int'
|   | |-VarDecl 0x1250365d0 <col:2, col:11> col:11 used off 'int'
|   | `-VarDecl 0x125036650 <col:2, col:16> col:16 used h 'int'
|   |-CallExpr 0x125036908 <line:15:2, col:19> 'int'
|   | |-ImplicitCastExpr 0x1250368f0 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x125036820 <col:2> 'int ()' Function 0x125036768 'duprintf' 'int ()'
|   | |-ImplicitCastExpr 0x125036938 <col:11> 'char *' <ArrayToPointerDecay>
|   | | `-StringLiteral 0x125036880 <col:11> 'char[4]' lvalue "STR"
|   | `-ImplicitCastExpr 0x125036950 <col:18> 'struct compat_arpt_entry *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1250368a0 <col:18> 'struct compat_arpt_entry *' lvalue ParmVar 0x12501f848 'e' 'struct compat_arpt_entry *'
|   |-IfStmt 0x125039158 <line:16:2, line:20:2>
|   | |-RecoveryExpr 0x125038f58 <line:16:6, line:17:63> '_Bool' contains-errors
|   | `-CompoundStmt 0x125039138 <col:70, line:20:2>
|   |   |-CallExpr 0x125039010 <line:18:3, col:27> 'int'
|   |   | |-ImplicitCastExpr 0x125038ff8 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x125038f78 <col:3> 'int ()' Function 0x125036768 'duprintf' 'int ()'
|   |   | |-ImplicitCastExpr 0x125039048 <col:12> 'char *' <ArrayToPointerDecay>
|   |   | | `-StringLiteral 0x125038f98 <col:12> 'char[4]' lvalue "STR"
|   |   | |-ImplicitCastExpr 0x125039060 <col:19> 'struct compat_arpt_entry *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x125038fb8 <col:19> 'struct compat_arpt_entry *' lvalue ParmVar 0x12501f848 'e' 'struct compat_arpt_entry *'
|   |   | `-ImplicitCastExpr 0x125039078 <col:22> 'const unsigned char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x125038fd8 <col:22> 'const unsigned char *' lvalue ParmVar 0x125035c08 'limit' 'const unsigned char *'
|   |   `-ReturnStmt 0x125039128 <line:19:3, col:11>
|   |     `-UnaryOperator 0x125039110 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |       `-ImplicitCastExpr 0x1250390f8 <col:11> '<dependent type>' contains-errors <LValueToRValue>
|   |         `-RecoveryExpr 0x1250390d8 <col:11> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x1250394d8 <line:22:2, line:27:2>
|   | |-RecoveryExpr 0x1250392f8 <line:22:6, line:23:45> '_Bool' contains-errors
|   | `-CompoundStmt 0x1250394b8 <col:48, line:27:2>
|   |   |-CallExpr 0x1250393d8 <line:24:3, line:25:22> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x125039318 <line:24:3> 'int ()' Function 0x125036768 'duprintf' 'int ()'
|   |   | |-StringLiteral 0x125039338 <col:12> 'char[4]' lvalue "STR"
|   |   | |-DeclRefExpr 0x125039358 <line:25:5> 'struct compat_arpt_entry *' lvalue ParmVar 0x12501f848 'e' 'struct compat_arpt_entry *'
|   |   | `-RecoveryExpr 0x1250393b0 <col:8, col:11> '<dependent type>' contains-errors lvalue
|   |   |   `-DeclRefExpr 0x125039378 <col:8> 'struct compat_arpt_entry *' lvalue ParmVar 0x12501f848 'e' 'struct compat_arpt_entry *'
|   |   `-ReturnStmt 0x1250394a8 <line:26:3, col:11>
|   |     `-UnaryOperator 0x125039490 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |       `-ImplicitCastExpr 0x125039478 <col:11> '<dependent type>' contains-errors <LValueToRValue>
|   |         `-RecoveryExpr 0x125039458 <col:11> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x125039868 <line:30:2, col:48> 'int' '='
|   | |-DeclRefExpr 0x1250394f8 <col:2> 'int' lvalue Var 0x125036550 'ret' 'int'
|   | `-CallExpr 0x125039820 <col:8, col:48> 'int'
|   |   |-ImplicitCastExpr 0x125039808 <col:8> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1250395f8 <col:8> 'int ()' Function 0x125039540 'check_entry' 'int ()'
|   |   |-CStyleCastExpr 0x1250397c0 <col:20, col:41> 'struct arpt_entry *' <BitCast>
|   |   | `-ImplicitCastExpr 0x1250397a8 <col:41> 'struct compat_arpt_entry *' <LValueToRValue> part_of_explicit_cast
|   |   |   `-DeclRefExpr 0x1250396c0 <col:41> 'struct compat_arpt_entry *' lvalue ParmVar 0x12501f848 'e' 'struct compat_arpt_entry *'
|   |   `-ImplicitCastExpr 0x125039850 <col:44> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1250397e8 <col:44> 'const char *' lvalue ParmVar 0x125035db8 'name' 'const char *'
|   |-IfStmt 0x125039908 <line:31:2, line:32:10>
|   | |-ImplicitCastExpr 0x1250398a8 <line:31:6> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x125039888 <col:6> 'int' lvalue Var 0x125036550 'ret' 'int'
|   | `-ReturnStmt 0x1250398f8 <line:32:3, col:10>
|   |   `-ImplicitCastExpr 0x1250398e0 <col:10> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x1250398c0 <col:10> 'int' lvalue Var 0x125036550 'ret' 'int'
|   |-BinaryOperator 0x125039b08 <line:35:2, col:37> 'unsigned int' '='
|   | |-DeclRefExpr 0x1250399c0 <col:2> 'unsigned int' lvalue Var 0x1250364b8 'entry_offset' 'unsigned int'
|   | `-ImplicitCastExpr 0x125039af0 <col:17, col:37> 'unsigned int' <IntegralCast>
|   |   `-BinaryOperator 0x125039ad0 <col:17, col:37> 'long' '-'
|   |     |-CStyleCastExpr 0x125039a30 <col:17, col:25> 'void *' <BitCast>
|   |     | `-ImplicitCastExpr 0x125039a18 <col:25> 'struct compat_arpt_entry *' <LValueToRValue> part_of_explicit_cast
|   |     |   `-DeclRefExpr 0x1250399e0 <col:25> 'struct compat_arpt_entry *' lvalue ParmVar 0x12501f848 'e' 'struct compat_arpt_entry *'
|   |     `-CStyleCastExpr 0x125039aa8 <col:29, col:37> 'void *' <BitCast>
|   |       `-ImplicitCastExpr 0x125039a90 <col:37> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
|   |         `-DeclRefExpr 0x125039a58 <col:37> 'const unsigned char *' lvalue ParmVar 0x125035b88 'base' 'const unsigned char *'
|   |-BinaryOperator 0x125039cd8 <line:37:2, col:30> 'struct xt_entry_target *' '='
|   | |-DeclRefExpr 0x125039b28 <col:2> 'struct xt_entry_target *' lvalue Var 0x125036208 't' 'struct xt_entry_target *'
|   | `-ImplicitCastExpr 0x125039cc0 <col:6, col:30> 'struct xt_entry_target *' <IntegralToPointer>
|   |   `-CallExpr 0x125039c80 <col:6, col:30> 'int'
|   |     |-ImplicitCastExpr 0x125039c68 <col:6> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x125039c28 <col:6> 'int ()' Function 0x125039b70 'compat_arpt_get_target' 'int ()'
|   |     `-ImplicitCastExpr 0x125039ca8 <col:29> 'struct compat_arpt_entry *' <LValueToRValue>
|   |       `-DeclRefExpr 0x125039c48 <col:29> 'struct compat_arpt_entry *' lvalue ParmVar 0x12501f848 'e' 'struct compat_arpt_entry *'
|   |-BinaryOperator 0x1270084c8 <line:38:2, line:39:24> 'struct xt_target *' contains-errors '='
|   | |-DeclRefExpr 0x125039cf8 <line:38:2> 'struct xt_target *' lvalue Var 0x125036408 'target' 'struct xt_target *'
|   | `-CallExpr 0x127008490 <col:11, line:39:24> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x127008200 <line:38:11> 'int ()' Function 0x125039d40 'xt_request_find_target' 'int ()'
|   |   |-RecoveryExpr 0x127008470 <col:34> '<dependent type>' contains-errors lvalue
|   |   |-CXXDependentScopeMemberExpr 0x1270082e0 <col:47, col:57> '<dependent type>' contains-errors lvalue .name
|   |   | `-CXXDependentScopeMemberExpr 0x127008298 <col:47, col:52> '<dependent type>' contains-errors lvalue .user
|   |   |   `-RecoveryExpr 0x127008270 <col:47, col:50> '<dependent type>' contains-errors lvalue
|   |   |     `-DeclRefExpr 0x127008238 <col:47> 'struct xt_entry_target *' lvalue Var 0x125036208 't' 'struct xt_entry_target *'
|   |   `-CXXDependentScopeMemberExpr 0x1270083d0 <line:39:6, col:16> '<dependent type>' contains-errors lvalue .revision
|   |     `-CXXDependentScopeMemberExpr 0x127008388 <col:6, col:11> '<dependent type>' contains-errors lvalue .user
|   |       `-RecoveryExpr 0x127008360 <col:6, col:9> '<dependent type>' contains-errors lvalue
|   |         `-DeclRefExpr 0x127008328 <col:6> 'struct xt_entry_target *' lvalue Var 0x125036208 't' 'struct xt_entry_target *'
|   |-IfStmt 0x127008a08 <line:40:2, line:45:2>
|   | |-CallExpr 0x127008620 <line:40:6, col:19> 'int'
|   | | |-ImplicitCastExpr 0x127008608 <col:6> 'int (*)()' <FunctionToPointerDecay>
|   | | | `-DeclRefExpr 0x1270085c8 <col:6> 'int ()' Function 0x127008510 'IS_ERR' 'int ()'
|   | | `-ImplicitCastExpr 0x127008648 <col:13> 'struct xt_target *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1270085e8 <col:13> 'struct xt_target *' lvalue Var 0x125036408 'target' 'struct xt_target *'
|   | `-CompoundStmt 0x1270089e0 <col:22, line:45:2>
|   |   |-CallExpr 0x127008790 <line:41:3, line:42:19> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x127008660 <line:41:3> 'int ()' Function 0x125036768 'duprintf' 'int ()'
|   |   | |-StringLiteral 0x127008680 <col:12> 'char[4]' lvalue "STR"
|   |   | `-CXXDependentScopeMemberExpr 0x127008748 <line:42:5, col:15> '<dependent type>' contains-errors lvalue .name
|   |   |   `-CXXDependentScopeMemberExpr 0x127008700 <col:5, col:10> '<dependent type>' contains-errors lvalue .user
|   |   |     `-RecoveryExpr 0x1270086d8 <col:5, col:8> '<dependent type>' contains-errors lvalue
|   |   |       `-DeclRefExpr 0x1270086a0 <col:5> 'struct xt_entry_target *' lvalue Var 0x125036208 't' 'struct xt_entry_target *'
|   |   |-BinaryOperator 0x127008958 <line:43:3, col:23> 'int' '='
|   |   | |-DeclRefExpr 0x1270087c0 <col:3> 'int' lvalue Var 0x125036550 'ret' 'int'
|   |   | `-CallExpr 0x127008918 <col:9, col:23> 'int'
|   |   |   |-ImplicitCastExpr 0x127008900 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x1270088c0 <col:9> 'int ()' Function 0x127008808 'PTR_ERR' 'int ()'
|   |   |   `-ImplicitCastExpr 0x127008940 <col:17> 'struct xt_target *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1270088e0 <col:17> 'struct xt_target *' lvalue Var 0x125036408 'target' 'struct xt_target *'
|   |   `-GotoStmt 0x1270089c8 <line:44:3, col:8> 'out' 0x127008978
|   |-BinaryOperator 0x127008b38 <line:46:2, col:23> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x127008ad0 <col:2, col:14> '<dependent type>' contains-errors lvalue .target
|   | | `-CXXDependentScopeMemberExpr 0x127008a88 <col:2, col:7> '<dependent type>' contains-errors lvalue .kernel
|   | |   `-RecoveryExpr 0x127008a60 <col:2, col:5> '<dependent type>' contains-errors lvalue
|   | |     `-DeclRefExpr 0x127008a28 <col:2> 'struct xt_entry_target *' lvalue Var 0x125036208 't' 'struct xt_entry_target *'
|   | `-DeclRefExpr 0x127008b18 <col:23> 'struct xt_target *' lvalue Var 0x125036408 'target' 'struct xt_target *'
|   |-CompoundAssignOperator 0x127008cf0 <line:48:2, col:39> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-DeclRefExpr 0x127008b58 <col:2> 'int' lvalue Var 0x1250365d0 'off' 'int'
|   | `-CallExpr 0x127008cb0 <col:9, col:39> 'int'
|   |   |-ImplicitCastExpr 0x127008c98 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x127008c58 <col:9> 'int ()' Function 0x127008ba0 'xt_compat_target_offset' 'int ()'
|   |   `-ImplicitCastExpr 0x127008cd8 <col:33> 'struct xt_target *' <LValueToRValue>
|   |     `-DeclRefExpr 0x127008c78 <col:33> 'struct xt_target *' lvalue Var 0x125036408 'target' 'struct xt_target *'
|   |-CompoundAssignOperator 0x127008dc0 <line:49:2, col:11> 'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   | |-UnaryOperator 0x127008d58 <col:2, col:3> 'unsigned int' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x127008d40 <col:3> 'unsigned int *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x127008d20 <col:3> 'unsigned int *' lvalue ParmVar 0x125035ad8 'size' 'unsigned int *'
|   | `-ImplicitCastExpr 0x127008da8 <col:11> 'unsigned int' <IntegralCast>
|   |   `-ImplicitCastExpr 0x127008d90 <col:11> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x127008d70 <col:11> 'int' lvalue Var 0x1250365d0 'off' 'int'
|   |-IfStmt 0x127008ff0 <line:51:2, line:52:8>
|   | |-ImplicitCastExpr 0x127008f70 <line:51:6> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x127008f50 <col:6> 'int' lvalue Var 0x125036550 'ret' 'int'
|   | `-GotoStmt 0x127008fd8 <line:52:3, col:8> 'release_target' 0x127008f88
|   |-CallExpr 0x12700a190 <line:63:2, col:45> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x12700a038 <col:2> 'void *(void *, int, unsigned long)' Function 0x127009de8 'memset' 'void *(void *, int, unsigned long)'
|   | |-UnaryOperator 0x12700a0b8 <col:9, col:13> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | `-RecoveryExpr 0x12700a090 <col:10, col:13> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x12700a058 <col:10> 'struct compat_arpt_entry *' lvalue ParmVar 0x12501f848 'e' 'struct compat_arpt_entry *'
|   | |-IntegerLiteral 0x12700a0d0 <col:23> 'int' 0
|   | `-UnaryExprOrTypeTraitExpr 0x12700a170 <col:26, col:44> 'unsigned long' contains-errors sizeof
|   |   `-ParenExpr 0x12700a150 <col:32, col:44> '<dependent type>' contains-errors lvalue
|   |     `-RecoveryExpr 0x12700a128 <col:33, col:36> '<dependent type>' contains-errors lvalue
|   |       `-DeclRefExpr 0x12700a0f0 <col:33> 'struct compat_arpt_entry *' lvalue ParmVar 0x12501f848 'e' 'struct compat_arpt_entry *' non_odr_use_unevaluated
|   |-BinaryOperator 0x12700a248 <line:64:2, col:16> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x12700a200 <col:2, col:5> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x12700a1c8 <col:2> 'struct compat_arpt_entry *' lvalue ParmVar 0x12501f848 'e' 'struct compat_arpt_entry *'
|   | `-IntegerLiteral 0x12700a228 <col:16> 'int' 0
|   |-ReturnStmt 0x12700a288 <line:65:2, col:9>
|   | `-IntegerLiteral 0x12700a268 <col:9> 'int' 0
|   |-LabelStmt 0x12700a4f8 <line:67:1, line:68:35> 'release_target'
|   | `-CallExpr 0x12700a4d0 <col:2, col:35> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x12700a378 <col:2> 'int ()' Function 0x12700a2c0 'module_put' 'int ()'
|   |   `-CXXDependentScopeMemberExpr 0x12700a488 <col:13, col:33> '<dependent type>' contains-errors lvalue ->me
|   |     `-CXXDependentScopeMemberExpr 0x12700a440 <col:13, col:25> '<dependent type>' contains-errors lvalue .target
|   |       `-CXXDependentScopeMemberExpr 0x12700a3f8 <col:13, col:18> '<dependent type>' contains-errors lvalue .kernel
|   |         `-RecoveryExpr 0x12700a3d0 <col:13, col:16> '<dependent type>' contains-errors lvalue
|   |           `-DeclRefExpr 0x12700a398 <col:13> 'struct xt_entry_target *' lvalue Var 0x125036208 't' 'struct xt_entry_target *'
|   `-LabelStmt 0x12700a560 <line:69:1, line:70:9> 'out'
|     `-ReturnStmt 0x12700a550 <col:2, col:9>
|       `-ImplicitCastExpr 0x12700a538 <col:9> 'int' <LValueToRValue>
|         `-DeclRefExpr 0x12700a518 <col:9> 'int' lvalue Var 0x125036550 'ret' 'int'
`-FunctionDecl 0x127009de8 <line:63:2> col:2 implicit used memset 'void *(void *, int, unsigned long)' extern
  |-ParmVarDecl 0x127009ee8 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x127009f50 <<invalid sloc>> <invalid sloc> 'int'
  |-ParmVarDecl 0x127009fb8 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x127009e90 <<invalid sloc>> Implicit 900
