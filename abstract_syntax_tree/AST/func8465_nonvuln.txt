TranslationUnitDecl 0x126055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1260564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x126055bd0 '__int128'
|-TypedefDecl 0x126056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x126055bf0 'unsigned __int128'
|-TypedefDecl 0x12680be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12680bc00 'struct __NSConstantString_tag'
|   `-Record 0x126056580 '__NSConstantString_tag'
|-TypedefDecl 0x12680be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x126055d90 '__SVInt8_t'
|-TypedefDecl 0x12680bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x126055db0 '__SVInt16_t'
|-TypedefDecl 0x12680bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x126055dd0 '__SVInt32_t'
|-TypedefDecl 0x12680bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x126055df0 '__SVInt64_t'
|-TypedefDecl 0x12680c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x126055e10 '__SVUint8_t'
|-TypedefDecl 0x12680c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x126055e30 '__SVUint16_t'
|-TypedefDecl 0x12680c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x126055e50 '__SVUint32_t'
|-TypedefDecl 0x12680c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x126055e70 '__SVUint64_t'
|-TypedefDecl 0x12680c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x126055e90 '__SVFloat16_t'
|-TypedefDecl 0x12680c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x126055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12680c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x126055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12680c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x126055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12680c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x126055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12680c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x126055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12680c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x126055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12680c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x126055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12680c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x126055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12680c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x126055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12680c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x126055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12680c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x126055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12680c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x126056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12680c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x126056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12680c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x126056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12680c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x126056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12680c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x126056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12680c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1260560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12680c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1260560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12680c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1260560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12680c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x126056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12680ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x126056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12680cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x126056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12680cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x126056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12680cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x126056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12680d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1260561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12680d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1260561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12680d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1260561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12680d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x126056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12680d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x126056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12680d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x126056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12680d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x126056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12680d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x126056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12680d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1260562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12680d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1260562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12680d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1260562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12680d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x126056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12680d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x126056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12680d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x126056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12680d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x126056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12680da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x126056390 '__SVBool_t'
|-TypedefDecl 0x12680da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1260563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12680dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1260563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12680db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1260563f0 '__SVCount_t'
|-TypedefDecl 0x12680dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12680dbb0 'char *'
|   `-BuiltinType 0x1260556b0 'char'
|-TypedefDecl 0x12680dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12680dbb0 'char *'
|   `-BuiltinType 0x1260556b0 'char'
`-FunctionDecl 0x12680df18 <dataset_diviso_filec/func8465_nonvuln.c:1:1, line:39:2> line:1:12 invalid crl_extension_match 'int (int *, int *, int)' static
  |-ParmVarDecl 0x12680dd28 <col:32, col:42> col:42 invalid a 'int *'
  |-ParmVarDecl 0x12680dda8 <col:45, col:55> col:55 invalid b 'int *'
  |-ParmVarDecl 0x12680de28 <col:58, col:62> col:62 used nid 'int'
  `-CompoundStmt 0x126828568 <line:2:2, line:39:2>
    |-DeclStmt 0x12680e0b8 <line:4:2, col:7>
    | `-VarDecl 0x12680e050 <col:2, col:6> col:6 used i 'int'
    |-BinaryOperator 0x12680e320 <line:5:2, col:40> 'int' contains-errors '='
    | |-DeclRefExpr 0x12680e0d0 <col:2> 'int' lvalue Var 0x12680e050 'i' 'int'
    | `-CallExpr 0x12680e2e8 <col:6, col:40> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12680e250 <col:6> 'int ()' Function 0x12680e198 'X509_CRL_get_ext_by_NID' 'int ()'
    |   |-RecoveryExpr 0x12680e270 <col:30> '<dependent type>' contains-errors lvalue
    |   |-DeclRefExpr 0x12680e290 <col:33> 'int' lvalue ParmVar 0x12680de28 'nid' 'int'
    |   `-UnaryOperator 0x12680e2d0 <col:38, col:39> 'int' prefix '-'
    |     `-IntegerLiteral 0x12680e2b0 <col:39> 'int' 1
    |-IfStmt 0x126827bf0 <line:6:2, line:14:3> has_else
    | |-BinaryOperator 0x12680e398 <line:6:6, col:11> 'int' '>='
    | | |-ImplicitCastExpr 0x12680e380 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x12680e340 <col:6> 'int' lvalue Var 0x12680e050 'i' 'int'
    | | `-IntegerLiteral 0x12680e360 <col:11> 'int' 0
    | |-CompoundStmt 0x126827bb8 <line:7:3, line:12:3>
    | | `-IfStmt 0x126827900 <line:9:3, line:10:11>
    | |   |-BinaryOperator 0x1268278b0 <line:9:7, col:46> 'int' contains-errors '!='
    | |   | |-CallExpr 0x126827840 <col:7, col:40> '<dependent type>' contains-errors
    | |   | | |-DeclRefExpr 0x12680e3b8 <col:7> 'int ()' Function 0x12680e198 'X509_CRL_get_ext_by_NID' 'int ()'
    | |   | | |-RecoveryExpr 0x12680e3d8 <col:31> '<dependent type>' contains-errors lvalue
    | |   | | |-DeclRefExpr 0x126827800 <col:34> 'int' lvalue ParmVar 0x12680de28 'nid' 'int'
    | |   | | `-DeclRefExpr 0x126827820 <col:39> 'int' lvalue Var 0x12680e050 'i' 'int'
    | |   | `-UnaryOperator 0x126827898 <col:45, col:46> 'int' prefix '-'
    | |   |   `-IntegerLiteral 0x126827878 <col:46> 'int' 1
    | |   `-ReturnStmt 0x1268278f0 <line:10:4, col:11>
    | |     `-IntegerLiteral 0x1268278d0 <col:11> 'int' 0
    | `-NullStmt 0x126827be8 <line:14:3>
    |-BinaryOperator 0x126827d10 <line:16:2, col:40> 'int' contains-errors '='
    | |-DeclRefExpr 0x126827c20 <col:2> 'int' lvalue Var 0x12680e050 'i' 'int'
    | `-CallExpr 0x126827cd8 <col:6, col:40> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x126827c40 <col:6> 'int ()' Function 0x12680e198 'X509_CRL_get_ext_by_NID' 'int ()'
    |   |-RecoveryExpr 0x126827c60 <col:30> '<dependent type>' contains-errors lvalue
    |   |-DeclRefExpr 0x126827c80 <col:33> 'int' lvalue ParmVar 0x12680de28 'nid' 'int'
    |   `-UnaryOperator 0x126827cc0 <col:38, col:39> 'int' prefix '-'
    |     `-IntegerLiteral 0x126827ca0 <col:39> 'int' 1
    |-IfStmt 0x126828018 <line:18:2, line:26:3> has_else
    | |-BinaryOperator 0x126827d88 <line:18:6, col:11> 'int' '>='
    | | |-ImplicitCastExpr 0x126827d70 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x126827d30 <col:6> 'int' lvalue Var 0x12680e050 'i' 'int'
    | | `-IntegerLiteral 0x126827d50 <col:11> 'int' 0
    | |-CompoundStmt 0x126827fe0 <line:19:3, line:24:3>
    | | `-IfStmt 0x126827ee8 <line:21:3, line:22:11>
    | |   |-BinaryOperator 0x126827e98 <line:21:7, col:46> 'int' contains-errors '!='
    | |   | |-CallExpr 0x126827e28 <col:7, col:40> '<dependent type>' contains-errors
    | |   | | |-DeclRefExpr 0x126827da8 <col:7> 'int ()' Function 0x12680e198 'X509_CRL_get_ext_by_NID' 'int ()'
    | |   | | |-RecoveryExpr 0x126827dc8 <col:31> '<dependent type>' contains-errors lvalue
    | |   | | |-DeclRefExpr 0x126827de8 <col:34> 'int' lvalue ParmVar 0x12680de28 'nid' 'int'
    | |   | | `-DeclRefExpr 0x126827e08 <col:39> 'int' lvalue Var 0x12680e050 'i' 'int'
    | |   | `-UnaryOperator 0x126827e80 <col:45, col:46> 'int' prefix '-'
    | |   |   `-IntegerLiteral 0x126827e60 <col:46> 'int' 1
    | |   `-ReturnStmt 0x126827ed8 <line:22:4, col:11>
    | |     `-IntegerLiteral 0x126827eb8 <col:11> 'int' 0
    | `-NullStmt 0x126828010 <line:26:3>
    |-IfStmt 0x1268281e8 <line:28:2, line:29:10>
    | |-BinaryOperator 0x126828198 <line:28:6, col:16> 'int' contains-errors '&&'
    | | |-UnaryOperator 0x126828130 <col:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | | `-ImplicitCastExpr 0x126828118 <col:7> '<dependent type>' contains-errors <LValueToRValue>
    | | |   `-RecoveryExpr 0x1268280f8 <col:7> '<dependent type>' contains-errors lvalue
    | | `-UnaryOperator 0x126828180 <col:15, col:16> '<dependent type>' contains-errors prefix '!' cannot overflow
    | |   `-ImplicitCastExpr 0x126828168 <col:16> '<dependent type>' contains-errors <LValueToRValue>
    | |     `-RecoveryExpr 0x126828148 <col:16> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x1268281d8 <line:29:3, col:10>
    |   `-IntegerLiteral 0x1268281b8 <col:10> 'int' 1
    |-IfStmt 0x1268283a8 <line:31:2, line:32:10>
    | |-BinaryOperator 0x126828358 <line:31:6, col:16> 'int' contains-errors '||'
    | | |-UnaryOperator 0x1268282f0 <col:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | | `-ImplicitCastExpr 0x1268282d8 <col:7> '<dependent type>' contains-errors <LValueToRValue>
    | | |   `-RecoveryExpr 0x1268282b8 <col:7> '<dependent type>' contains-errors lvalue
    | | `-UnaryOperator 0x126828340 <col:15, col:16> '<dependent type>' contains-errors prefix '!' cannot overflow
    | |   `-ImplicitCastExpr 0x126828328 <col:16> '<dependent type>' contains-errors <LValueToRValue>
    | |     `-RecoveryExpr 0x126828308 <col:16> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x126828398 <line:32:3, col:10>
    |   `-IntegerLiteral 0x126828378 <col:10> 'int' 0
    |-IfStmt 0x126828518 <line:35:2, line:36:10>
    | |-RecoveryExpr 0x1268284c8 <line:35:6, col:38> '_Bool' contains-errors
    | `-ReturnStmt 0x126828508 <line:36:3, col:10>
    |   `-IntegerLiteral 0x1268284e8 <col:10> 'int' 0
    `-ReturnStmt 0x126828558 <line:38:2, col:9>
      `-IntegerLiteral 0x126828538 <col:9> 'int' 1
