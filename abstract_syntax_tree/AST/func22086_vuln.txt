TranslationUnitDecl 0x136855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1368564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x136855bd0 '__int128'
|-TypedefDecl 0x136856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x136855bf0 'unsigned __int128'
|-TypedefDecl 0x13700be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13700bc00 'struct __NSConstantString_tag'
|   `-Record 0x136856580 '__NSConstantString_tag'
|-TypedefDecl 0x13700be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x136855d90 '__SVInt8_t'
|-TypedefDecl 0x13700bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x136855db0 '__SVInt16_t'
|-TypedefDecl 0x13700bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x136855dd0 '__SVInt32_t'
|-TypedefDecl 0x13700bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x136855df0 '__SVInt64_t'
|-TypedefDecl 0x13700c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x136855e10 '__SVUint8_t'
|-TypedefDecl 0x13700c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x136855e30 '__SVUint16_t'
|-TypedefDecl 0x13700c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x136855e50 '__SVUint32_t'
|-TypedefDecl 0x13700c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x136855e70 '__SVUint64_t'
|-TypedefDecl 0x13700c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x136855e90 '__SVFloat16_t'
|-TypedefDecl 0x13700c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x136855eb0 '__SVFloat32_t'
|-TypedefDecl 0x13700c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x136855ed0 '__SVFloat64_t'
|-TypedefDecl 0x13700c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x136855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13700c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x136855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13700c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x136855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13700c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x136855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13700c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x136855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13700c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x136855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13700c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x136855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13700c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x136855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13700c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x136855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13700c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x136856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13700c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x136856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13700c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x136856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13700c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x136856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13700c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x136856090 '__clang_svint8x3_t'
|-TypedefDecl 0x13700c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1368560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13700c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1368560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13700c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1368560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13700c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x136856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13700ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x136856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13700cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x136856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13700cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x136856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13700cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x136856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13700d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1368561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13700d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1368561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13700d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1368561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13700d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x136856210 '__clang_svint8x4_t'
|-TypedefDecl 0x13700d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x136856230 '__clang_svint16x4_t'
|-TypedefDecl 0x13700d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x136856250 '__clang_svint32x4_t'
|-TypedefDecl 0x13700d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x136856270 '__clang_svint64x4_t'
|-TypedefDecl 0x13700d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x136856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13700d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1368562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13700d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1368562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13700d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1368562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13700d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x136856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13700d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x136856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13700d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x136856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13700d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x136856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13700da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x136856390 '__SVBool_t'
|-TypedefDecl 0x13700da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1368563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13700dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1368563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13700db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1368563f0 '__SVCount_t'
|-TypedefDecl 0x13700dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13700dbb0 'char *'
|   `-BuiltinType 0x1368556b0 'char'
|-TypedefDecl 0x13700dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13700dbb0 'char *'
|   `-BuiltinType 0x1368556b0 'char'
`-FunctionDecl 0x137026688 <dataset_diviso_filec/func22086_vuln.c:1:1, line:28:1> line:1:12 chip_write 'int (struct CHIPSTATE *, int, int)' static
  |-ParmVarDecl 0x13700e248 <col:23, col:41> col:41 used chip 'struct CHIPSTATE *'
  |-ParmVarDecl 0x13700e2c8 <col:47, col:51> col:51 used subaddr 'int'
  |-ParmVarDecl 0x13700e348 <col:60, col:64> col:64 used val 'int'
  `-CompoundStmt 0x140009510 <line:2:1, line:28:1>
    |-DeclStmt 0x1370268a0 <line:3:2, col:25>
    | `-VarDecl 0x137026838 <col:2, col:24> col:16 used buffer 'unsigned char[2]'
    |-IfStmt 0x1400094b0 <line:5:2, line:26:2> has_else
    | |-BinaryOperator 0x137026928 <line:5:6, col:12> 'int' '=='
    | | |-UnaryOperator 0x1370268d8 <col:6, col:7> 'int' prefix '-'
    | | | `-IntegerLiteral 0x1370268b8 <col:7> 'int' 1
    | | `-ImplicitCastExpr 0x137026910 <col:12> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x1370268f0 <col:12> 'int' lvalue ParmVar 0x13700e2c8 'subaddr' 'int'
    | |-CompoundStmt 0x1370274a0 <col:21, line:15:2>
    | | |-CallExpr 0x137026cc8 <line:6:3, line:7:22> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x137026a70 <line:6:3> 'int ()' Function 0x1370269b8 'v4l_dbg' 'int ()'
    | | | |-IntegerLiteral 0x137026a90 <col:11> 'int' 1
    | | | |-RecoveryExpr 0x137026ca8 <col:14> '<dependent type>' contains-errors lvalue
    | | | |-RecoveryExpr 0x137026b00 <col:21, col:27> '<dependent type>' contains-errors lvalue
    | | | | `-DeclRefExpr 0x137026ac8 <col:21> 'struct CHIPSTATE *' lvalue ParmVar 0x13700e248 'chip' 'struct CHIPSTATE *'
    | | | |-StringLiteral 0x137026b70 <col:30> 'char[4]' lvalue "STR"
    | | | |-CXXDependentScopeMemberExpr 0x137026bf0 <line:7:4, col:13> '<dependent type>' contains-errors lvalue ->name
    | | | | `-RecoveryExpr 0x137026bc8 <col:4, col:10> '<dependent type>' contains-errors lvalue
    | | | |   `-DeclRefExpr 0x137026b90 <col:4> 'struct CHIPSTATE *' lvalue ParmVar 0x13700e248 'chip' 'struct CHIPSTATE *'
    | | | `-DeclRefExpr 0x137026c38 <col:19> 'int' lvalue ParmVar 0x13700e348 'val' 'int'
    | | |-BinaryOperator 0x137026e38 <line:8:3, col:27> '<dependent type>' contains-errors '='
    | | | |-ArraySubscriptExpr 0x137026df8 <col:3, col:23> '<dependent type>' contains-errors lvalue
    | | | | |-ImplicitCastExpr 0x137026de0 <col:3, col:16> '<dependent type>' contains-errors <LValueToRValue>
    | | | | | `-CXXDependentScopeMemberExpr 0x137026d78 <col:3, col:16> '<dependent type>' contains-errors lvalue .bytes
    | | | | |   `-RecoveryExpr 0x137026d50 <col:3, col:9> '<dependent type>' contains-errors lvalue
    | | | | |     `-DeclRefExpr 0x137026d18 <col:3> 'struct CHIPSTATE *' lvalue ParmVar 0x13700e248 'chip' 'struct CHIPSTATE *'
    | | | | `-IntegerLiteral 0x137026dc0 <col:22> 'int' 1
    | | | `-DeclRefExpr 0x137026e18 <col:27> 'int' lvalue ParmVar 0x13700e348 'val' 'int'
    | | |-BinaryOperator 0x137026f58 <line:9:3, col:15> 'unsigned char' '='
    | | | |-ArraySubscriptExpr 0x137026ee8 <col:3, col:11> 'unsigned char' lvalue
    | | | | |-ImplicitCastExpr 0x137026ed0 <col:3> 'unsigned char *' <ArrayToPointerDecay>
    | | | | | `-DeclRefExpr 0x137026e58 <col:3> 'unsigned char[2]' lvalue Var 0x137026838 'buffer' 'unsigned char[2]'
    | | | | `-IntegerLiteral 0x137026e78 <col:10> 'int' 0
    | | | `-ImplicitCastExpr 0x137026f40 <col:15> 'unsigned char' <IntegralCast>
    | | |   `-ImplicitCastExpr 0x137026f28 <col:15> 'int' <LValueToRValue>
    | | |     `-DeclRefExpr 0x137026f08 <col:15> 'int' lvalue ParmVar 0x13700e348 'val' 'int'
    | | `-IfStmt 0x137027480 <line:10:3, line:14:3>
    | |   |-BinaryOperator 0x137027170 <line:10:7, col:44> 'int' contains-errors '!='
    | |   | |-IntegerLiteral 0x137026f78 <col:7> 'int' 1
    | |   | `-CallExpr 0x137027138 <col:12, col:44> '<dependent type>' contains-errors
    | |   |   |-DeclRefExpr 0x137027078 <col:12> 'int ()' Function 0x137026fc0 'i2c_master_send' 'int ()'
    | |   |   |-RecoveryExpr 0x1370270d0 <col:28, col:34> '<dependent type>' contains-errors lvalue
    | |   |   | `-DeclRefExpr 0x137027098 <col:28> 'struct CHIPSTATE *' lvalue ParmVar 0x13700e248 'chip' 'struct CHIPSTATE *'
    | |   |   |-DeclRefExpr 0x1370270f8 <col:36> 'unsigned char[2]' lvalue Var 0x137026838 'buffer' 'unsigned char[2]'
    | |   |   `-IntegerLiteral 0x137027118 <col:43> 'int' 1
    | |   `-CompoundStmt 0x137027460 <col:47, line:14:3>
    | |     |-CallExpr 0x1370273d8 <line:11:4, line:12:23> '<dependent type>' contains-errors
    | |     | |-DeclRefExpr 0x137027270 <line:11:4> 'int ()' Function 0x1370271b8 'v4l_warn' 'int ()'
    | |     | |-RecoveryExpr 0x1370272c8 <col:13, col:19> '<dependent type>' contains-errors lvalue
    | |     | | `-DeclRefExpr 0x137027290 <col:13> 'struct CHIPSTATE *' lvalue ParmVar 0x13700e248 'chip' 'struct CHIPSTATE *'
    | |     | |-StringLiteral 0x1370272f0 <col:22> 'char[4]' lvalue "STR"
    | |     | |-CXXDependentScopeMemberExpr 0x137027370 <line:12:5, col:14> '<dependent type>' contains-errors lvalue ->name
    | |     | | `-RecoveryExpr 0x137027348 <col:5, col:11> '<dependent type>' contains-errors lvalue
    | |     | |   `-DeclRefExpr 0x137027310 <col:5> 'struct CHIPSTATE *' lvalue ParmVar 0x13700e248 'chip' 'struct CHIPSTATE *'
    | |     | `-DeclRefExpr 0x1370273b8 <col:20> 'int' lvalue ParmVar 0x13700e348 'val' 'int'
    | |     `-ReturnStmt 0x137027450 <line:13:4, col:12>
    | |       `-UnaryOperator 0x137027438 <col:11, col:12> 'int' prefix '-'
    | |         `-IntegerLiteral 0x137027418 <col:12> 'int' 1
    | `-CompoundStmt 0x140009478 <line:15:9, line:26:2>
    |   |-CallExpr 0x140008d28 <line:16:3, line:17:31> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x1370274d0 <line:16:3> 'int ()' Function 0x1370269b8 'v4l_dbg' 'int ()'
    |   | |-IntegerLiteral 0x1370274f0 <col:11> 'int' 1
    |   | |-RecoveryExpr 0x140008d08 <col:14> '<dependent type>' contains-errors lvalue
    |   | |-RecoveryExpr 0x137027560 <col:21, col:27> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x137027528 <col:21> 'struct CHIPSTATE *' lvalue ParmVar 0x13700e248 'chip' 'struct CHIPSTATE *'
    |   | |-StringLiteral 0x137027588 <col:30> 'char[4]' lvalue "STR"
    |   | |-CXXDependentScopeMemberExpr 0x140008c28 <line:17:4, col:13> '<dependent type>' contains-errors lvalue ->name
    |   | | `-RecoveryExpr 0x140008c00 <col:4, col:10> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x1370275a8 <col:4> 'struct CHIPSTATE *' lvalue ParmVar 0x13700e248 'chip' 'struct CHIPSTATE *'
    |   | |-DeclRefExpr 0x140008c70 <col:19> 'int' lvalue ParmVar 0x13700e2c8 'subaddr' 'int'
    |   | `-DeclRefExpr 0x140008c90 <col:28> 'int' lvalue ParmVar 0x13700e348 'val' 'int'
    |   |-BinaryOperator 0x140008ef8 <line:18:3, col:35> '<dependent type>' contains-errors '='
    |   | |-ArraySubscriptExpr 0x140008eb8 <col:3, col:31> '<dependent type>' contains-errors lvalue
    |   | | |-ImplicitCastExpr 0x140008ea0 <col:3, col:16> '<dependent type>' contains-errors <LValueToRValue>
    |   | | | `-CXXDependentScopeMemberExpr 0x140008de0 <col:3, col:16> '<dependent type>' contains-errors lvalue .bytes
    |   | | |   `-RecoveryExpr 0x140008db8 <col:3, col:9> '<dependent type>' contains-errors lvalue
    |   | | |     `-DeclRefExpr 0x140008d80 <col:3> 'struct CHIPSTATE *' lvalue ParmVar 0x13700e248 'chip' 'struct CHIPSTATE *'
    |   | | `-BinaryOperator 0x140008e80 <col:22, col:30> 'int' '+'
    |   | |   |-ImplicitCastExpr 0x140008e68 <col:22> 'int' <LValueToRValue>
    |   | |   | `-DeclRefExpr 0x140008e28 <col:22> 'int' lvalue ParmVar 0x13700e2c8 'subaddr' 'int'
    |   | |   `-IntegerLiteral 0x140008e48 <col:30> 'int' 1
    |   | `-DeclRefExpr 0x140008ed8 <col:35> 'int' lvalue ParmVar 0x13700e348 'val' 'int'
    |   |-BinaryOperator 0x140008fe0 <line:19:3, col:15> 'unsigned char' '='
    |   | |-ArraySubscriptExpr 0x140008f70 <col:3, col:11> 'unsigned char' lvalue
    |   | | |-ImplicitCastExpr 0x140008f58 <col:3> 'unsigned char *' <ArrayToPointerDecay>
    |   | | | `-DeclRefExpr 0x140008f18 <col:3> 'unsigned char[2]' lvalue Var 0x137026838 'buffer' 'unsigned char[2]'
    |   | | `-IntegerLiteral 0x140008f38 <col:10> 'int' 0
    |   | `-ImplicitCastExpr 0x140008fc8 <col:15> 'unsigned char' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x140008fb0 <col:15> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x140008f90 <col:15> 'int' lvalue ParmVar 0x13700e2c8 'subaddr' 'int'
    |   |-BinaryOperator 0x1400090c8 <line:20:3, col:15> 'unsigned char' '='
    |   | |-ArraySubscriptExpr 0x140009058 <col:3, col:11> 'unsigned char' lvalue
    |   | | |-ImplicitCastExpr 0x140009040 <col:3> 'unsigned char *' <ArrayToPointerDecay>
    |   | | | `-DeclRefExpr 0x140009000 <col:3> 'unsigned char[2]' lvalue Var 0x137026838 'buffer' 'unsigned char[2]'
    |   | | `-IntegerLiteral 0x140009020 <col:10> 'int' 1
    |   | `-ImplicitCastExpr 0x1400090b0 <col:15> 'unsigned char' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x140009098 <col:15> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x140009078 <col:15> 'int' lvalue ParmVar 0x13700e348 'val' 'int'
    |   `-IfStmt 0x140009458 <line:21:3, line:25:3>
    |     |-BinaryOperator 0x140009200 <line:21:7, col:44> 'int' contains-errors '!='
    |     | |-IntegerLiteral 0x1400090e8 <col:7> 'int' 2
    |     | `-CallExpr 0x1400091c8 <col:12, col:44> '<dependent type>' contains-errors
    |     |   |-DeclRefExpr 0x140009108 <col:12> 'int ()' Function 0x137026fc0 'i2c_master_send' 'int ()'
    |     |   |-RecoveryExpr 0x140009160 <col:28, col:34> '<dependent type>' contains-errors lvalue
    |     |   | `-DeclRefExpr 0x140009128 <col:28> 'struct CHIPSTATE *' lvalue ParmVar 0x13700e248 'chip' 'struct CHIPSTATE *'
    |     |   |-DeclRefExpr 0x140009188 <col:36> 'unsigned char[2]' lvalue Var 0x137026838 'buffer' 'unsigned char[2]'
    |     |   `-IntegerLiteral 0x1400091a8 <col:43> 'int' 2
    |     `-CompoundStmt 0x140009438 <col:47, line:25:3>
    |       |-CallExpr 0x1400093a8 <line:22:4, line:23:31> '<dependent type>' contains-errors
    |       | |-DeclRefExpr 0x140009220 <line:22:4> 'int ()' Function 0x1370271b8 'v4l_warn' 'int ()'
    |       | |-RecoveryExpr 0x140009278 <col:13, col:19> '<dependent type>' contains-errors lvalue
    |       | | `-DeclRefExpr 0x140009240 <col:13> 'struct CHIPSTATE *' lvalue ParmVar 0x13700e248 'chip' 'struct CHIPSTATE *'
    |       | |-StringLiteral 0x1400092a0 <col:22> 'char[4]' lvalue "STR"
    |       | |-CXXDependentScopeMemberExpr 0x140009320 <line:23:4, col:13> '<dependent type>' contains-errors lvalue ->name
    |       | | `-RecoveryExpr 0x1400092f8 <col:4, col:10> '<dependent type>' contains-errors lvalue
    |       | |   `-DeclRefExpr 0x1400092c0 <col:4> 'struct CHIPSTATE *' lvalue ParmVar 0x13700e248 'chip' 'struct CHIPSTATE *'
    |       | |-DeclRefExpr 0x140009368 <col:19> 'int' lvalue ParmVar 0x13700e2c8 'subaddr' 'int'
    |       | `-DeclRefExpr 0x140009388 <col:28> 'int' lvalue ParmVar 0x13700e348 'val' 'int'
    |       `-ReturnStmt 0x140009428 <line:24:4, col:12>
    |         `-UnaryOperator 0x140009410 <col:11, col:12> 'int' prefix '-'
    |           `-IntegerLiteral 0x1400093f0 <col:12> 'int' 1
    `-ReturnStmt 0x140009500 <line:27:2, col:9>
      `-IntegerLiteral 0x1400094e0 <col:9> 'int' 0
