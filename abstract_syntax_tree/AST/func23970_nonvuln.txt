TranslationUnitDecl 0x14a855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14a8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14a855bd0 '__int128'
|-TypedefDecl 0x14a856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14a855bf0 'unsigned __int128'
|-TypedefDecl 0x14a926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14a926000 'struct __NSConstantString_tag'
|   `-Record 0x14a856580 '__NSConstantString_tag'
|-TypedefDecl 0x14a926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14a855d90 '__SVInt8_t'
|-TypedefDecl 0x14a926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14a855db0 '__SVInt16_t'
|-TypedefDecl 0x14a926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14a855dd0 '__SVInt32_t'
|-TypedefDecl 0x14a9263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14a855df0 '__SVInt64_t'
|-TypedefDecl 0x14a926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14a855e10 '__SVUint8_t'
|-TypedefDecl 0x14a9264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14a855e30 '__SVUint16_t'
|-TypedefDecl 0x14a926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14a855e50 '__SVUint32_t'
|-TypedefDecl 0x14a926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14a855e70 '__SVUint64_t'
|-TypedefDecl 0x14a9265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14a855e90 '__SVFloat16_t'
|-TypedefDecl 0x14a926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14a855eb0 '__SVFloat32_t'
|-TypedefDecl 0x14a9266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14a855ed0 '__SVFloat64_t'
|-TypedefDecl 0x14a926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14a855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14a926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14a855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14a9267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14a855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14a926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14a855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14a9268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14a855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14a926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14a855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14a926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14a855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14a9269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14a855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14a926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14a855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14a926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14a856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14a926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14a856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14a926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14a856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14a926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14a856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14a926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14a856090 '__clang_svint8x3_t'
|-TypedefDecl 0x14a926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14a8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14a926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14a8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14a926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14a8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14a926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14a856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14a926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14a856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14a926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14a856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14a926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14a856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14a926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14a856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14a927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14a8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14a927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14a8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14a9278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14a8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14a927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14a856210 '__clang_svint8x4_t'
|-TypedefDecl 0x14a9279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14a856230 '__clang_svint16x4_t'
|-TypedefDecl 0x14a927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14a856250 '__clang_svint32x4_t'
|-TypedefDecl 0x14a927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14a856270 '__clang_svint64x4_t'
|-TypedefDecl 0x14a927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14a856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14a927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14a8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14a927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14a8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14a927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14a8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14a927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14a856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14a927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14a856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14a927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14a856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14a927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14a856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14a927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14a856390 '__SVBool_t'
|-TypedefDecl 0x14a927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14a8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14a927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14a8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14a927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14a8563f0 '__SVCount_t'
|-TypedefDecl 0x14a927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14a927fb0 'char *'
|   `-BuiltinType 0x14a8556b0 'char'
|-TypedefDecl 0x14a928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14a927fb0 'char *'
|   `-BuiltinType 0x14a8556b0 'char'
|-FunctionDecl 0x14a928288 <dataset_diviso_filec/func23970_nonvuln.c:1:1, line:44:1> line:1:15 invalid virtual_realpath 'int *(const char *, char *)'
| |-ParmVarDecl 0x14a9280f0 <col:32, col:44> col:44 used path 'const char *'
| |-ParmVarDecl 0x14a928170 <col:50, col:56> col:56 used real_path 'char *'
| `-CompoundStmt 0x14a945a40 <line:2:1, line:44:1>
|   |-DeclStmt 0x14a9283c0 <line:4:2, col:14>
|   | `-VarDecl 0x14a928358 <col:2, col:8> col:8 used retval 'char *'
|   |-DeclStmt 0x14a928468 <line:5:2, col:22>
|   | `-VarDecl 0x14a928400 <col:2, col:7> col:7 invalid cwd 'char'
|   |-IfStmt 0x14a945110 <line:8:2, line:29:2> has_else
|   | |-UnaryOperator 0x14a9284e8 <line:8:6, col:8> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x14a9284d0 <col:7, col:8> 'char' <LValueToRValue>
|   | |   `-UnaryOperator 0x14a9284b8 <col:7, col:8> 'const char' lvalue prefix '*' cannot overflow
|   | |     `-ImplicitCastExpr 0x14a9284a0 <col:8> 'const char *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x14a928480 <col:8> 'const char *' lvalue ParmVar 0x14a9280f0 'path' 'const char *'
|   | |-CompoundStmt 0x14a9421f0 <col:14, line:19:2>
|   | | |-IfStmt 0x14a941ea8 <line:10:3, line:13:3>
|   | | | |-BinaryOperator 0x14a941d68 <line:10:7, col:24> 'int' contains-errors '=='
|   | | | | |-CXXDependentScopeMemberExpr 0x14a941d00 <col:7, col:17> '<dependent type>' contains-errors lvalue .cwd
|   | | | | | `-RecoveryExpr 0x14a941ce0 <col:7> '<dependent type>' contains-errors lvalue
|   | | | | `-RecoveryExpr 0x14a941d48 <col:24> '<dependent type>' contains-errors lvalue
|   | | | `-CompoundStmt 0x14a941e88 <col:30, line:13:3>
|   | | |   |-BinaryOperator 0x14a941e00 <line:11:4, col:13> 'char *' contains-errors '='
|   | | |   | |-DeclRefExpr 0x14a941d88 <col:4> 'char *' lvalue Var 0x14a928358 'retval' 'char *'
|   | | |   | `-RecoveryExpr 0x14a941de0 <col:13> '<dependent type>' contains-errors lvalue
|   | | |   `-GotoStmt 0x14a941e70 <line:12:4, col:9> 'end' 0x14a941e20
|   | | `-IfStmt 0x14a9421d0 <line:16:3, line:18:3>
|   | |   |-CallExpr 0x14a942128 <line:16:7, col:34> '<dependent type>' contains-errors
|   | |   | |-DeclRefExpr 0x14a942080 <col:7> 'int ()' Function 0x14a941fc8 'VCWD_GETCWD' 'int ()'
|   | |   | |-RecoveryExpr 0x14a9420a0 <col:19> '<dependent type>' contains-errors lvalue
|   | |   | `-RecoveryExpr 0x14a942108 <col:24> '<dependent type>' contains-errors lvalue
|   | |   `-CompoundStmt 0x14a9421b8 <col:37, line:18:3>
|   | |     `-BinaryOperator 0x14a942198 <line:17:4, col:11> 'const char *' contains-errors '='
|   | |       |-DeclRefExpr 0x14a942158 <col:4> 'const char *' lvalue ParmVar 0x14a9280f0 'path' 'const char *'
|   | |       `-RecoveryExpr 0x14a942178 <col:11> '<dependent type>' contains-errors lvalue
|   | `-IfStmt 0x14a9450e0 <line:19:9, line:29:2> has_else
|   |   |-UnaryOperator 0x14a942650 <line:19:13, col:49> 'int' prefix '!' cannot overflow
|   |   | `-CallExpr 0x14a942608 <col:14, col:49> 'int'
|   |   |   |-ImplicitCastExpr 0x14a9425f0 <col:14> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x14a9422f0 <col:14> 'int ()' Function 0x14a942238 'IS_ABSOLUTE_PATH' 'int ()'
|   |   |   |-ImplicitCastExpr 0x14a942638 <col:31> 'const char *' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x14a942310 <col:31> 'const char *' lvalue ParmVar 0x14a9280f0 'path' 'const char *'
|   |   |   `-CallExpr 0x14a942578 <col:37, col:48> 'unsigned long'
|   |   |     |-ImplicitCastExpr 0x14a942560 <col:37> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x14a9424d8 <col:37> 'unsigned long (const char *)' Function 0x14a942368 'strlen' 'unsigned long (const char *)'
|   |   |     `-ImplicitCastExpr 0x14a9425a0 <col:44> 'const char *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x14a9424f8 <col:44> 'const char *' lvalue ParmVar 0x14a9280f0 'path' 'const char *'
|   |   |-CompoundStmt 0x14a944dd0 <col:52, line:21:2>
|   |   | `-CallExpr 0x14a944da0 <line:20:3, col:40> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x14a942748 <col:3> 'int ()' Function 0x14a942690 'CWD_STATE_COPY' 'int ()'
|   |   |   |-UnaryOperator 0x14a944d88 <col:18, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   |   | `-RecoveryExpr 0x14a944d68 <col:19> '<dependent type>' contains-errors lvalue
|   |   |   `-UnaryOperator 0x14a944d20 <col:30, col:39> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   |     `-CallExpr 0x14a944cf8 <col:31, col:39> '<dependent type>' contains-errors
|   |   |       |-DeclRefExpr 0x14a944cb8 <col:31> 'int ()' Function 0x14a944c00 'CWDG' 'int ()'
|   |   |       `-RecoveryExpr 0x14a944cd8 <col:36> '<dependent type>' contains-errors lvalue
|   |   `-CompoundStmt 0x14a9450c8 <line:21:9, line:29:2>
|   |     `-IfStmt 0x14a945050 <line:23:3, line:26:3>
|   |       |-BinaryOperator 0x14a944fe0 <line:23:7, col:24> 'int' contains-errors '=='
|   |       | |-CXXDependentScopeMemberExpr 0x14a944f78 <col:7, col:17> '<dependent type>' contains-errors lvalue .cwd
|   |       | | `-RecoveryExpr 0x14a944f58 <col:7> '<dependent type>' contains-errors lvalue
|   |       | `-RecoveryExpr 0x14a944fc0 <col:24> '<dependent type>' contains-errors lvalue
|   |       `-CompoundStmt 0x14a945038 <col:30, line:26:3>
|   |         `-GotoStmt 0x14a945020 <line:25:4, col:9> 'end' 0x14a941e20
|   |-IfStmt 0x14a945858 <line:31:2, line:39:2> has_else
|   | |-RecoveryExpr 0x14a945280 <line:31:6, col:71> '_Bool' contains-errors
|   | |-CompoundStmt 0x14a945800 <col:74, line:37:2>
|   | | |-DeclStmt 0x14a945360 <line:32:3, col:80>
|   | | | `-VarDecl 0x14a9452b8 <col:3, col:7> col:7 used len 'int'
|   | | |-BinaryOperator 0x14a945768 <line:35:3, col:20> 'char' '='
|   | | | |-ArraySubscriptExpr 0x14a945718 <col:3, col:16> 'char' lvalue
|   | | | | |-ImplicitCastExpr 0x14a9456e8 <col:3> 'char *' <LValueToRValue>
|   | | | | | `-DeclRefExpr 0x14a9456a8 <col:3> 'char *' lvalue ParmVar 0x14a928170 'real_path' 'char *'
|   | | | | `-ImplicitCastExpr 0x14a945700 <col:13> 'int' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x14a9456c8 <col:13> 'int' lvalue Var 0x14a9452b8 'len' 'int'
|   | | | `-ImplicitCastExpr 0x14a945750 <col:20> 'char' <IntegralCast>
|   | | |   `-CharacterLiteral 0x14a945738 <col:20> 'int' 0
|   | | `-BinaryOperator 0x14a9457e0 <line:36:3, col:12> 'char *' '='
|   | |   |-DeclRefExpr 0x14a945788 <col:3> 'char *' lvalue Var 0x14a928358 'retval' 'char *'
|   | |   `-ImplicitCastExpr 0x14a9457c8 <col:12> 'char *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x14a9457a8 <col:12> 'char *' lvalue ParmVar 0x14a928170 'real_path' 'char *'
|   | `-CompoundStmt 0x14a945848 <line:37:9, line:39:2>
|   `-LabelStmt 0x14a945a20 <line:42:1, line:43:9> 'end'
|     `-ReturnStmt 0x14a945a10 <col:2, col:9>
|       `-ImplicitCastExpr 0x14a9459c0 <col:9> 'int *' <BitCast>
|         `-ImplicitCastExpr 0x14a9459a8 <col:9> 'char *' <LValueToRValue>
|           `-DeclRefExpr 0x14a945988 <col:9> 'char *' lvalue Var 0x14a928358 'retval' 'char *'
|-FunctionDecl 0x14a9419a0 <line:9:26> col:26 implicit used malloc 'void *(unsigned long)' extern
| |-ParmVarDecl 0x14a941aa0 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-BuiltinAttr 0x14a941a48 <<invalid sloc>> Implicit 871
| `-AllocSizeAttr 0x14a941b10 <col:26> Implicit 1
|-FunctionDecl 0x14a942368 <line:19:37> col:37 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x14a942468 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x14a942410 <<invalid sloc>> Implicit 902
`-FunctionDecl 0x14a9453f8 <line:34:3> col:3 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x14a9454f8 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x14a945560 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x14a9455c8 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x14a9454a0 <<invalid sloc>> Implicit 882
