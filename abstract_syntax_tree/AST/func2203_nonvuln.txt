TranslationUnitDecl 0x130855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1308564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x130855bd0 '__int128'
|-TypedefDecl 0x130856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x130855bf0 'unsigned __int128'
|-TypedefDecl 0x13100be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13100bc00 'struct __NSConstantString_tag'
|   `-Record 0x130856580 '__NSConstantString_tag'
|-TypedefDecl 0x13100be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x130855d90 '__SVInt8_t'
|-TypedefDecl 0x13100bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x130855db0 '__SVInt16_t'
|-TypedefDecl 0x13100bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x130855dd0 '__SVInt32_t'
|-TypedefDecl 0x13100bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x130855df0 '__SVInt64_t'
|-TypedefDecl 0x13100c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x130855e10 '__SVUint8_t'
|-TypedefDecl 0x13100c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x130855e30 '__SVUint16_t'
|-TypedefDecl 0x13100c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x130855e50 '__SVUint32_t'
|-TypedefDecl 0x13100c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x130855e70 '__SVUint64_t'
|-TypedefDecl 0x13100c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x130855e90 '__SVFloat16_t'
|-TypedefDecl 0x13100c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x130855eb0 '__SVFloat32_t'
|-TypedefDecl 0x13100c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x130855ed0 '__SVFloat64_t'
|-TypedefDecl 0x13100c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x130855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13100c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x130855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13100c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x130855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13100c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x130855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13100c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x130855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13100c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x130855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13100c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x130855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13100c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x130855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13100c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x130855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13100c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x130856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13100c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x130856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13100c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x130856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13100c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x130856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13100c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x130856090 '__clang_svint8x3_t'
|-TypedefDecl 0x13100c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1308560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13100c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1308560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13100c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1308560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13100c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x130856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13100ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x130856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13100cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x130856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13100cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x130856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13100cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x130856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13100d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1308561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13100d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1308561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13100d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1308561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13100d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x130856210 '__clang_svint8x4_t'
|-TypedefDecl 0x13100d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x130856230 '__clang_svint16x4_t'
|-TypedefDecl 0x13100d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x130856250 '__clang_svint32x4_t'
|-TypedefDecl 0x13100d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x130856270 '__clang_svint64x4_t'
|-TypedefDecl 0x13100d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x130856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13100d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1308562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13100d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1308562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13100d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1308562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13100d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x130856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13100d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x130856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13100d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x130856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13100d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x130856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13100da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x130856390 '__SVBool_t'
|-TypedefDecl 0x13100da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1308563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13100dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1308563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13100db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1308563f0 '__SVCount_t'
|-TypedefDecl 0x13100dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13100dbb0 'char *'
|   `-BuiltinType 0x1308556b0 'char'
|-TypedefDecl 0x13100dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13100dbb0 'char *'
|   `-BuiltinType 0x1308556b0 'char'
|-FunctionDecl 0x13100de88 <dataset_diviso_filec/func2203_nonvuln.c:1:1, line:47:1> line:1:19 referenced invalid GetQuantumInfo 'int (const int *, int *)'
| |-ParmVarDecl 0x13100dcf0 <col:34, col:51> col:51 invalid image_info 'const int *'
| |-ParmVarDecl 0x13100dda8 <line:2:3, col:16> col:16 referenced invalid quantum_info 'int *'
| `-CompoundStmt 0x13102a548 <line:3:1, line:47:1>
|   |-DeclStmt 0x13100dfc0 <line:4:3, line:5:12>
|   | `-VarDecl 0x13100df58 <line:4:3, line:5:6> col:6 used option 'const char *'
|   |-CStyleCastExpr 0x131027a10 <line:8:3, col:53> 'void' contains-errors <ToVoid>
|   | `-CallExpr 0x1310279c8 <col:10, col:53> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x1310278c0 <col:10> 'void *(void *, int, unsigned long)' Function 0x131027670 'memset' 'void *(void *, int, unsigned long)'
|   |   |-RecoveryExpr 0x1310278e0 <col:17> '<dependent type>' contains-errors lvalue
|   |   |-IntegerLiteral 0x131027900 <col:30> 'int' 0
|   |   `-UnaryExprOrTypeTraitExpr 0x131027990 <col:32, col:52> 'unsigned long' contains-errors sizeof
|   |     `-ParenExpr 0x131027970 <col:38, col:52> '<dependent type>' contains-errors
|   |       `-UnaryOperator 0x131027958 <col:39, col:40> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |         `-ImplicitCastExpr 0x131027940 <col:40> '<dependent type>' contains-errors <LValueToRValue>
|   |           `-RecoveryExpr 0x131027920 <col:40> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x131027ae8 <line:9:3, col:25> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x131027a80 <col:3, col:17> '<dependent type>' contains-errors lvalue ->quantum
|   | | `-RecoveryExpr 0x131027a58 <col:3> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x131027a38 <col:3> 'int *' lvalue ParmVar 0x13100dda8 'quantum_info' 'int *'
|   | `-IntegerLiteral 0x131027ac8 <col:25> 'int' 8
|   |-BinaryOperator 0x131027bb8 <line:10:3, col:25> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x131027b50 <col:3, col:17> '<dependent type>' contains-errors lvalue ->maximum
|   | | `-RecoveryExpr 0x131027b28 <col:3> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x131027b08 <col:3> 'int *' lvalue ParmVar 0x13100dda8 'quantum_info' 'int *'
|   | `-FloatingLiteral 0x131027b98 <col:25> 'double' 1.000000e+00
|   |-BinaryOperator 0x131027cc0 <line:11:3, col:23> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x131027c20 <col:3, col:17> '<dependent type>' contains-errors lvalue ->scale
|   | | `-RecoveryExpr 0x131027bf8 <col:3> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x131027bd8 <col:3> 'int *' lvalue ParmVar 0x13100dda8 'quantum_info' 'int *'
|   | `-RecoveryExpr 0x131027ca0 <col:23> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x131027dc8 <line:12:3, col:22> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x131027d28 <col:3, col:17> '<dependent type>' contains-errors lvalue ->pack
|   | | `-RecoveryExpr 0x131027d00 <col:3> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x131027ce0 <col:3> 'int *' lvalue ParmVar 0x13100dda8 'quantum_info' 'int *'
|   | `-RecoveryExpr 0x131027da8 <col:22> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x131027fe8 <line:13:3, col:48> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x131027e30 <col:3, col:17> '<dependent type>' contains-errors lvalue ->semaphore
|   | | `-RecoveryExpr 0x131027e08 <col:3> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x131027de8 <col:3> 'int *' lvalue ParmVar 0x13100dda8 'quantum_info' 'int *'
|   | `-CallExpr 0x131027fc8 <col:27, col:48> 'int'
|   |   `-ImplicitCastExpr 0x131027fb0 <col:27> 'int (*)()' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x131027f58 <col:27> 'int ()' Function 0x131027ea0 'AcquireSemaphoreInfo' 'int ()'
|   |-BinaryOperator 0x1310280f0 <line:14:3, col:27> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x131028050 <col:3, col:17> '<dependent type>' contains-errors lvalue ->signature
|   | | `-RecoveryExpr 0x131028028 <col:3> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x131028008 <col:3> 'int *' lvalue ParmVar 0x13100dda8 'quantum_info' 'int *'
|   | `-RecoveryExpr 0x1310280d0 <col:27> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x131028160 <line:15:3, line:16:5>
|   | |-RecoveryExpr 0x131028130 <line:15:7, col:41> '_Bool' contains-errors
|   | `-ReturnStmt 0x131028150 <line:16:5>
|   |-BinaryOperator 0x131028350 <line:17:3, col:41> 'const char *' contains-errors '='
|   | |-DeclRefExpr 0x131028180 <col:3> 'const char *' lvalue Var 0x13100df58 'option' 'const char *'
|   | `-CallExpr 0x131028320 <col:10, col:41> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x131028280 <col:10> 'int ()' Function 0x1310281c8 'GetImageOption' 'int ()'
|   |   |-RecoveryExpr 0x1310282a0 <col:25> '<dependent type>' contains-errors lvalue
|   |   `-StringLiteral 0x131028300 <col:36> 'char[4]' lvalue "STR"
|   |-BinaryOperator 0x130922f38 <line:21:3, col:41> 'const char *' contains-errors '='
|   | |-DeclRefExpr 0x130922e88 <col:3> 'const char *' lvalue Var 0x13100df58 'option' 'const char *'
|   | `-CallExpr 0x130922f08 <col:10, col:41> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x130922ea8 <col:10> 'int ()' Function 0x1310281c8 'GetImageOption' 'int ()'
|   |   |-RecoveryExpr 0x130922ec8 <col:25> '<dependent type>' contains-errors lvalue
|   |   `-StringLiteral 0x130922ee8 <col:36> 'char[4]' lvalue "STR"
|   |-BinaryOperator 0x130923288 <line:24:3, col:41> 'const char *' contains-errors '='
|   | |-DeclRefExpr 0x1309231d8 <col:3> 'const char *' lvalue Var 0x13100df58 'option' 'const char *'
|   | `-CallExpr 0x130923258 <col:10, col:41> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x1309231f8 <col:10> 'int ()' Function 0x1310281c8 'GetImageOption' 'int ()'
|   |   |-RecoveryExpr 0x130923218 <col:25> '<dependent type>' contains-errors lvalue
|   |   `-StringLiteral 0x130923238 <col:36> 'char[4]' lvalue "STR"
|   |-IfStmt 0x130923b40 <line:27:3, line:36:7> has_else
|   | |-BinaryOperator 0x1309235a8 <line:27:7, col:70> 'int' contains-errors '&&'
|   | | |-ParenExpr 0x1309234c0 <col:7, col:36> 'int' contains-errors
|   | | | `-BinaryOperator 0x1309234a0 <col:8, col:33> 'int' contains-errors '=='
|   | | |   |-CXXDependentScopeMemberExpr 0x130923438 <col:8, col:22> '<dependent type>' contains-errors lvalue ->minimum
|   | | |   | `-RecoveryExpr 0x130923418 <col:8> '<dependent type>' contains-errors lvalue
|   | | |   `-FloatingLiteral 0x130923480 <col:33> 'double' 0.000000e+00
|   | | `-ParenExpr 0x130923588 <col:41, col:70> 'int' contains-errors
|   | |   `-BinaryOperator 0x130923568 <col:42, col:67> 'int' contains-errors '=='
|   | |     |-CXXDependentScopeMemberExpr 0x130923500 <col:42, col:56> '<dependent type>' contains-errors lvalue ->maximum
|   | |     | `-RecoveryExpr 0x1309234e0 <col:42> '<dependent type>' contains-errors lvalue
|   | |     `-FloatingLiteral 0x130923548 <col:67> 'double' 0.000000e+00
|   | |-BinaryOperator 0x130923678 <line:28:5, col:25> '<dependent type>' contains-errors '='
|   | | |-CXXDependentScopeMemberExpr 0x130923610 <col:5, col:19> '<dependent type>' contains-errors lvalue ->scale
|   | | | `-RecoveryExpr 0x1309235e8 <col:5> '<dependent type>' contains-errors lvalue
|   | | |   `-DeclRefExpr 0x1309235c8 <col:5> 'int *' lvalue ParmVar 0x13100dda8 'quantum_info' 'int *'
|   | | `-FloatingLiteral 0x130923658 <col:25> 'double' 0.000000e+00
|   | `-IfStmt 0x130923b10 <line:30:5, line:36:7> has_else
|   |   |-BinaryOperator 0x130923768 <line:30:9, col:48> 'int' contains-errors '=='
|   |   | |-CXXDependentScopeMemberExpr 0x1309236b8 <col:9, col:23> '<dependent type>' contains-errors lvalue ->minimum
|   |   | | `-RecoveryExpr 0x130923698 <col:9> '<dependent type>' contains-errors lvalue
|   |   | `-CXXDependentScopeMemberExpr 0x130923720 <col:34, col:48> '<dependent type>' contains-errors lvalue ->maximum
|   |   |   `-RecoveryExpr 0x130923700 <col:34> '<dependent type>' contains-errors lvalue
|   |   |-CompoundStmt 0x130923950 <line:31:7, line:34:7>
|   |   | `-BinaryOperator 0x130923930 <line:33:9, col:31> '<dependent type>' contains-errors '='
|   |   |   |-CXXDependentScopeMemberExpr 0x1309238c8 <col:9, col:23> '<dependent type>' contains-errors lvalue ->minimum
|   |   |   | `-RecoveryExpr 0x1309238a0 <col:9> '<dependent type>' contains-errors lvalue
|   |   |   |   `-DeclRefExpr 0x130923880 <col:9> 'int *' lvalue ParmVar 0x13100dda8 'quantum_info' 'int *'
|   |   |   `-FloatingLiteral 0x130923910 <col:31> 'double' 0.000000e+00
|   |   `-NullStmt 0x130923b08 <line:36:7>
|   |-BinaryOperator 0x130923c20 <line:38:3, col:41> 'const char *' contains-errors '='
|   | |-DeclRefExpr 0x130923b70 <col:3> 'const char *' lvalue Var 0x13100df58 'option' 'const char *'
|   | `-CallExpr 0x130923bf0 <col:10, col:41> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x130923b90 <col:10> 'int ()' Function 0x1310281c8 'GetImageOption' 'int ()'
|   |   |-RecoveryExpr 0x130923bb0 <col:25> '<dependent type>' contains-errors lvalue
|   |   `-StringLiteral 0x130923bd0 <col:36> 'char[4]' lvalue "STR"
|   |-BinaryOperator 0x13102a000 <line:41:3, col:41> 'const char *' contains-errors '='
|   | |-DeclRefExpr 0x130923d50 <col:3> 'const char *' lvalue Var 0x13100df58 'option' 'const char *'
|   | `-CallExpr 0x130923dd0 <col:10, col:41> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x130923d70 <col:10> 'int ()' Function 0x1310281c8 'GetImageOption' 'int ()'
|   |   |-RecoveryExpr 0x130923d90 <col:25> '<dependent type>' contains-errors lvalue
|   |   `-StringLiteral 0x130923db0 <col:36> 'char[4]' lvalue "STR"
|   |-BinaryOperator 0x13102a3e0 <line:45:3, col:36> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x13102a330 <col:3, col:17> '<dependent type>' contains-errors lvalue ->endian
|   | | `-RecoveryExpr 0x13102a308 <col:3> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x13102a2e8 <col:3> 'int *' lvalue ParmVar 0x13100dda8 'quantum_info' 'int *'
|   | `-CXXDependentScopeMemberExpr 0x13102a398 <col:24, col:36> '<dependent type>' contains-errors lvalue ->endian
|   |   `-RecoveryExpr 0x13102a378 <col:24> '<dependent type>' contains-errors lvalue
|   `-CallExpr 0x13102a520 <line:46:3, col:33> '<dependent type>' contains-errors
|     |-DeclRefExpr 0x13102a4e0 <col:3> 'int ()' Function 0x13102a428 'ResetQuantumState' 'int ()'
|     `-RecoveryExpr 0x13102a500 <col:21> '<dependent type>' contains-errors lvalue
`-FunctionDecl 0x131027670 <line:8:10> col:10 implicit used memset 'void *(void *, int, unsigned long)' extern
  |-ParmVarDecl 0x131027770 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x1310277d8 <<invalid sloc>> <invalid sloc> 'int'
  |-ParmVarDecl 0x131027840 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x131027718 <<invalid sloc>> Implicit 900
