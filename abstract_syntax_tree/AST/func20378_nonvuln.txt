TranslationUnitDecl 0x136054808 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1360556b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x136054dd0 '__int128'
|-TypedefDecl 0x136055728 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x136054df0 'unsigned __int128'
|-TypedefDecl 0x13686ec30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13686ea00 'struct __NSConstantString_tag'
|   `-Record 0x136055780 '__NSConstantString_tag'
|-TypedefDecl 0x13686ec98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x136054f90 '__SVInt8_t'
|-TypedefDecl 0x13686ed00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x136054fb0 '__SVInt16_t'
|-TypedefDecl 0x13686ed68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x136054fd0 '__SVInt32_t'
|-TypedefDecl 0x13686edd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x136054ff0 '__SVInt64_t'
|-TypedefDecl 0x13686ee38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x136055010 '__SVUint8_t'
|-TypedefDecl 0x13686eea0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x136055030 '__SVUint16_t'
|-TypedefDecl 0x13686ef08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x136055050 '__SVUint32_t'
|-TypedefDecl 0x13686ef70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x136055070 '__SVUint64_t'
|-TypedefDecl 0x13686efd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x136055090 '__SVFloat16_t'
|-TypedefDecl 0x13686f040 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x1360550b0 '__SVFloat32_t'
|-TypedefDecl 0x13686f0a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x1360550d0 '__SVFloat64_t'
|-TypedefDecl 0x13686f110 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x1360550f0 '__SVBfloat16_t'
|-TypedefDecl 0x13686f178 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x136055110 '__clang_svint8x2_t'
|-TypedefDecl 0x13686f1e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x136055130 '__clang_svint16x2_t'
|-TypedefDecl 0x13686f248 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x136055150 '__clang_svint32x2_t'
|-TypedefDecl 0x13686f2b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x136055170 '__clang_svint64x2_t'
|-TypedefDecl 0x13686f318 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x136055190 '__clang_svuint8x2_t'
|-TypedefDecl 0x13686f380 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x1360551b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13686f3e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x1360551d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13686f450 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x1360551f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13686f4b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x136055210 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13686f520 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x136055230 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13686f588 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x136055250 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13686f5f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x136055270 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13686f658 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x136055290 '__clang_svint8x3_t'
|-TypedefDecl 0x13686f6c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1360552b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13686f728 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1360552d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13686f790 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1360552f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13686f7f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x136055310 '__clang_svuint8x3_t'
|-TypedefDecl 0x13686f860 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x136055330 '__clang_svuint16x3_t'
|-TypedefDecl 0x13686f8c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x136055350 '__clang_svuint32x3_t'
|-TypedefDecl 0x13686f930 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x136055370 '__clang_svuint64x3_t'
|-TypedefDecl 0x13686f998 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x136055390 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13686fe00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1360553b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13686fe68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1360553d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13686fed0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1360553f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13686ff38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x136055410 '__clang_svint8x4_t'
|-TypedefDecl 0x13686ffa0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x136055430 '__clang_svint16x4_t'
|-TypedefDecl 0x136870008 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x136055450 '__clang_svint32x4_t'
|-TypedefDecl 0x136870070 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x136055470 '__clang_svint64x4_t'
|-TypedefDecl 0x1368700d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x136055490 '__clang_svuint8x4_t'
|-TypedefDecl 0x136870140 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1360554b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1368701a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1360554d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x136870210 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1360554f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x136870278 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x136055510 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1368702e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x136055530 '__clang_svfloat32x4_t'
|-TypedefDecl 0x136870348 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x136055550 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1368703b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x136055570 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x136870418 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x136055590 '__SVBool_t'
|-TypedefDecl 0x136870480 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1360555b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1368704e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1360555d0 '__clang_svboolx4_t'
|-TypedefDecl 0x136870550 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1360555f0 '__SVCount_t'
|-TypedefDecl 0x1368705f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1368705b0 'char *'
|   `-BuiltinType 0x1360548b0 'char'
|-TypedefDecl 0x136870668 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1368705b0 'char *'
|   `-BuiltinType 0x1360548b0 'char'
|-FunctionDecl 0x136870918 <dataset_diviso_filec/func20378_nonvuln.c:1:1, line:51:1> line:1:1 invalid qemuProcessReadLog 'int (int, char **, int)'
| |-ParmVarDecl 0x1368706f0 <col:20, col:44> col:44 invalid logCtxt 'int'
| |-ParmVarDecl 0x1368707a8 <line:2:20, col:27> col:27 used msg 'char **'
| |-ParmVarDecl 0x136870828 <line:3:20, col:27> col:27 invalid max 'int'
| `-CompoundStmt 0x136041f38 <line:4:1, line:51:1>
|   |-DeclStmt 0x136870a58 <line:5:5, col:14>
|   | `-VarDecl 0x1368709f0 <col:5, col:11> col:11 used buf 'char *'
|   |-DeclStmt 0x136870af0 <line:7:5, col:14>
|   | `-VarDecl 0x136870a88 <col:5, col:11> col:11 used eol 'char *'
|   |-DeclStmt 0x136870b88 <line:8:5, col:22>
|   | `-VarDecl 0x136870b20 <col:5, col:11> col:11 used filter_next 'char *'
|   |-UnaryExprOrTypeTraitExpr 0x136870bf8 <line:9:5, col:12> 'unsigned long' contains-errors sizeof
|   | `-RecoveryExpr 0x136870bd8 <col:12> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x136870cb8 <line:11:5, line:12:17>
|   | |-RecoveryExpr 0x136870c50 <line:11:9, col:59> '_Bool' contains-errors
|   | `-ReturnStmt 0x136870ca8 <line:12:9, col:17>
|   |   `-UnaryOperator 0x136870c90 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x136870c70 <col:17> 'int' 1
|   |-BinaryOperator 0x136870d30 <line:15:5, col:19> 'char *' '='
|   | |-DeclRefExpr 0x136870cd8 <col:5> 'char *' lvalue Var 0x136870b20 'filter_next' 'char *'
|   | `-ImplicitCastExpr 0x136870d18 <col:19> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x136870cf8 <col:19> 'char *' lvalue Var 0x1368709f0 'buf' 'char *'
|   |-WhileStmt 0x136041688 <line:16:5, line:27:5>
|   | |-ParenExpr 0x140009708 <line:16:12, col:44> 'char *'
|   | | `-BinaryOperator 0x1400096e8 <col:13, col:43> 'char *' '='
|   | |   |-DeclRefExpr 0x136870d50 <col:13> 'char *' lvalue Var 0x136870a88 'eol' 'char *'
|   | |   `-CallExpr 0x140009688 <col:19, col:43> 'char *'
|   | |     |-ImplicitCastExpr 0x140009670 <col:19> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   | |     | `-DeclRefExpr 0x1400095d0 <col:19> 'char *(const char *, int)' Function 0x1400093f0 'strchr' 'char *(const char *, int)'
|   | |     |-ImplicitCastExpr 0x1400096d0 <col:26> 'const char *' <NoOp>
|   | |     | `-ImplicitCastExpr 0x1400096b8 <col:26> 'char *' <LValueToRValue>
|   | |     |   `-DeclRefExpr 0x1400095f0 <col:26> 'char *' lvalue Var 0x136870b20 'filter_next' 'char *'
|   | |     `-CharacterLiteral 0x140009610 <col:39> 'int' 10
|   | `-CompoundStmt 0x136041668 <col:47, line:27:5>
|   |   |-BinaryOperator 0x1400097a8 <line:17:9, col:16> 'char' '='
|   |   | |-UnaryOperator 0x140009760 <col:9, col:10> 'char' lvalue prefix '*' cannot overflow
|   |   | | `-ImplicitCastExpr 0x140009748 <col:10> 'char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x140009728 <col:10> 'char *' lvalue Var 0x136870a88 'eol' 'char *'
|   |   | `-ImplicitCastExpr 0x140009790 <col:16> 'char' <IntegralCast>
|   |   |   `-CharacterLiteral 0x140009778 <col:16> 'int' 0
|   |   `-IfStmt 0x136041638 <line:18:9, line:26:9> has_else
|   |     |-BinaryOperator 0x140009db8 <line:18:13, line:19:38> 'int' '||'
|   |     | |-CallExpr 0x1400099a8 <line:18:13, col:49> 'int'
|   |     | | |-ImplicitCastExpr 0x140009990 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |     | | | `-DeclRefExpr 0x140009920 <col:13> 'int ()' Function 0x140009868 'virLogProbablyLogMessage' 'int ()'
|   |     | | `-ImplicitCastExpr 0x1400099d0 <col:38> 'char *' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x140009940 <col:38> 'char *' lvalue Var 0x136870b20 'filter_next' 'char *'
|   |     | `-CallExpr 0x140009d28 <line:19:13, col:38> 'char *'
|   |     |   |-ImplicitCastExpr 0x140009d10 <col:13> 'char *(*)(const char *, const char *)' <FunctionToPointerDecay>
|   |     |   | `-DeclRefExpr 0x140009c10 <col:13> 'char *(const char *, const char *)' Function 0x140009a30 'strstr' 'char *(const char *, const char *)'
|   |     |   |-ImplicitCastExpr 0x140009d70 <col:20> 'const char *' <NoOp>
|   |     |   | `-ImplicitCastExpr 0x140009d58 <col:20> 'char *' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x140009c30 <col:20> 'char *' lvalue Var 0x136870b20 'filter_next' 'char *'
|   |     |   `-ImplicitCastExpr 0x140009da0 <col:33> 'const char *' <NoOp>
|   |     |     `-ImplicitCastExpr 0x140009d88 <col:33> 'char *' <ArrayToPointerDecay>
|   |     |       `-StringLiteral 0x140009c90 <col:33> 'char[4]' lvalue "STR"
|   |     |-CompoundStmt 0x1360414b0 <col:41, line:23:9>
|   |     `-CompoundStmt 0x136041618 <col:16, line:26:9>
|   |       |-BinaryOperator 0x136041558 <line:24:13, col:33> 'char *' '='
|   |       | |-DeclRefExpr 0x1360414c0 <col:13> 'char *' lvalue Var 0x136870b20 'filter_next' 'char *'
|   |       | `-BinaryOperator 0x136041538 <col:27, col:33> 'char *' '+'
|   |       |   |-ImplicitCastExpr 0x136041520 <col:27> 'char *' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x1360414e0 <col:27> 'char *' lvalue Var 0x136870a88 'eol' 'char *'
|   |       |   `-IntegerLiteral 0x136041500 <col:33> 'int' 1
|   |       `-BinaryOperator 0x1360415f8 <line:25:13, col:20> 'char' '='
|   |         |-UnaryOperator 0x1360415b0 <col:13, col:14> 'char' lvalue prefix '*' cannot overflow
|   |         | `-ImplicitCastExpr 0x136041598 <col:14> 'char *' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x136041578 <col:14> 'char *' lvalue Var 0x136870a88 'eol' 'char *'
|   |         `-ImplicitCastExpr 0x1360415e0 <col:20> 'char' <IntegralCast>
|   |           `-CharacterLiteral 0x1360415c8 <col:20> 'int' 10
|   |-BinaryOperator 0x136041720 <line:28:5, col:19> 'char *' contains-errors '='
|   | |-DeclRefExpr 0x1360416a8 <col:5> 'char *' lvalue Var 0x136870b20 'filter_next' 'char *'
|   | `-RecoveryExpr 0x136041700 <col:19> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x1360417e0 <line:30:5, line:34:5>
|   | |-RecoveryExpr 0x136041758 <line:30:9, line:31:25> '_Bool' contains-errors
|   | `-CompoundStmt 0x1360417d0 <col:31, line:34:5>
|   |-IfStmt 0x136041ce0 <line:36:5, line:46:5>
|   | |-RecoveryExpr 0x136041880 <line:36:9, col:26> '_Bool' contains-errors
|   | `-CompoundStmt 0x136041cd0 <col:31, line:46:5>
|   |-BinaryOperator 0x136041ee8 <line:49:5, col:12> 'char *' '='
|   | |-UnaryOperator 0x136041e98 <col:5, col:6> 'char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x136041e80 <col:6> 'char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x136041e60 <col:6> 'char **' lvalue ParmVar 0x1368707a8 'msg' 'char **'
|   | `-ImplicitCastExpr 0x136041ed0 <col:12> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x136041eb0 <col:12> 'char *' lvalue Var 0x1368709f0 'buf' 'char *'
|   `-ReturnStmt 0x136041f28 <line:50:5, col:12>
|     `-IntegerLiteral 0x136041f08 <col:12> 'int' 0
|-FunctionDecl 0x1400093f0 <line:16:19> col:19 implicit used strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x1400094f0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x140009558 <<invalid sloc>> <invalid sloc> 'int'
| `-BuiltinAttr 0x140009498 <<invalid sloc>> Implicit 893
|-FunctionDecl 0x140009a30 <line:19:13> col:13 implicit used strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x140009b30 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x140009b98 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x140009ad8 <<invalid sloc>> Implicit 898
`-FunctionDecl 0x140009f48 <line:21:13> col:13 implicit used memmove 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x136041258 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x1360412c0 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x136041328 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x136041200 <<invalid sloc>> Implicit 884
