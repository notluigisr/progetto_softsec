TranslationUnitDecl 0x146055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1460564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x146055bd0 '__int128'
|-TypedefDecl 0x146056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x146055bf0 'unsigned __int128'
|-TypedefDecl 0x146126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x146126000 'struct __NSConstantString_tag'
|   `-Record 0x146056580 '__NSConstantString_tag'
|-TypedefDecl 0x146126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x146055d90 '__SVInt8_t'
|-TypedefDecl 0x146126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x146055db0 '__SVInt16_t'
|-TypedefDecl 0x146126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x146055dd0 '__SVInt32_t'
|-TypedefDecl 0x1461263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x146055df0 '__SVInt64_t'
|-TypedefDecl 0x146126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x146055e10 '__SVUint8_t'
|-TypedefDecl 0x1461264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x146055e30 '__SVUint16_t'
|-TypedefDecl 0x146126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x146055e50 '__SVUint32_t'
|-TypedefDecl 0x146126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x146055e70 '__SVUint64_t'
|-TypedefDecl 0x1461265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x146055e90 '__SVFloat16_t'
|-TypedefDecl 0x146126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x146055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1461266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x146055ed0 '__SVFloat64_t'
|-TypedefDecl 0x146126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x146055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x146126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x146055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1461267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x146055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x146126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x146055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1461268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x146055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x146126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x146055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x146126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x146055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1461269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x146055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x146126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x146055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x146126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x146056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x146126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x146056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x146126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x146056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x146126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x146056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x146126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x146056090 '__clang_svint8x3_t'
|-TypedefDecl 0x146126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1460560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x146126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1460560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x146126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1460560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x146126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x146056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x146126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x146056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x146126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x146056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x146126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x146056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x146126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x146056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x146127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1460561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x146127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1460561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1461278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1460561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x146127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x146056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1461279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x146056230 '__clang_svint16x4_t'
|-TypedefDecl 0x146127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x146056250 '__clang_svint32x4_t'
|-TypedefDecl 0x146127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x146056270 '__clang_svint64x4_t'
|-TypedefDecl 0x146127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x146056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x146127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1460562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x146127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1460562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x146127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1460562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x146127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x146056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x146127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x146056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x146127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x146056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x146127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x146056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x146127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x146056390 '__SVBool_t'
|-TypedefDecl 0x146127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1460563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x146127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1460563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x146127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1460563f0 '__SVCount_t'
|-TypedefDecl 0x146127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x146127fb0 'char *'
|   `-BuiltinType 0x1460556b0 'char'
|-TypedefDecl 0x146128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x146127fb0 'char *'
|   `-BuiltinType 0x1460556b0 'char'
|-FunctionDecl 0x146140be8 <dataset_diviso_filec/func3311_vuln.c:1:1, line:24:1> line:1:1 lyd_new_output 'int (struct lyd_node *, const struct lys_module *, const char *)'
| |-ParmVarDecl 0x146128648 <col:16, col:33> col:33 used parent 'struct lyd_node *'
| |-ParmVarDecl 0x146140a28 <col:41, col:66> col:66 used module 'const struct lys_module *'
| |-ParmVarDecl 0x146140aa8 <col:74, col:86> col:86 used name 'const char *'
| `-CompoundStmt 0x1461435a8 <line:2:1, line:24:1>
|   |-DeclStmt 0x146140fc0 <line:3:5, col:51>
|   | |-RecordDecl 0x146140cf0 <col:11, col:18> col:18 struct lys_node
|   | |-VarDecl 0x146140e58 <col:5, col:36> col:28 used snode 'const struct lys_node *' cinit
|   | | `-RecoveryExpr 0x146140ef0 <col:36> '<dependent type>' contains-errors lvalue
|   | `-VarDecl 0x146140f38 <col:5, col:43> col:43 used siblings 'const struct lys_node *'
|   |-IfStmt 0x146141188 <line:5:5, line:8:5>
|   | |-BinaryOperator 0x146141108 <line:5:9, col:34> 'int' '||'
|   | | |-ParenExpr 0x146141098 <col:9, col:28> 'int'
|   | | | `-BinaryOperator 0x146141078 <col:10, col:22> 'int' '&&'
|   | | |   |-UnaryOperator 0x146141010 <col:10, col:11> 'int' prefix '!' cannot overflow
|   | | |   | `-ImplicitCastExpr 0x146140ff8 <col:11> 'struct lyd_node *' <LValueToRValue>
|   | | |   |   `-DeclRefExpr 0x146140fd8 <col:11> 'struct lyd_node *' lvalue ParmVar 0x146128648 'parent' 'struct lyd_node *'
|   | | |   `-UnaryOperator 0x146141060 <col:21, col:22> 'int' prefix '!' cannot overflow
|   | | |     `-ImplicitCastExpr 0x146141048 <col:22> 'const struct lys_module *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x146141028 <col:22> 'const struct lys_module *' lvalue ParmVar 0x146140a28 'module' 'const struct lys_module *'
|   | | `-UnaryOperator 0x1461410f0 <col:33, col:34> 'int' prefix '!' cannot overflow
|   | |   `-ImplicitCastExpr 0x1461410d8 <col:34> 'const char *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x1461410b8 <col:34> 'const char *' lvalue ParmVar 0x146140aa8 'name' 'const char *'
|   | `-CompoundStmt 0x146141170 <col:40, line:8:5>
|   |   `-ReturnStmt 0x146141160 <line:7:9, col:16>
|   |     `-RecoveryExpr 0x146141140 <col:16> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x146141428 <line:10:5, col:53> 'const struct lys_node *' '='
|   | |-DeclRefExpr 0x1461411a8 <col:5> 'const struct lys_node *' lvalue Var 0x146140f38 'siblings' 'const struct lys_node *'
|   | `-ImplicitCastExpr 0x146141410 <col:16, col:53> 'const struct lys_node *' <IntegralToPointer>
|   |   `-CallExpr 0x1461413a8 <col:16, col:53> 'int'
|   |     |-ImplicitCastExpr 0x146141390 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1461412e0 <col:16> 'int ()' Function 0x146141228 'lyd_new_find_schema' 'int ()'
|   |     |-ImplicitCastExpr 0x1461413e0 <col:36> 'struct lyd_node *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x146141300 <col:36> 'struct lyd_node *' lvalue ParmVar 0x146128648 'parent' 'struct lyd_node *'
|   |     |-ImplicitCastExpr 0x1461413f8 <col:44> 'const struct lys_module *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x146141320 <col:44> 'const struct lys_module *' lvalue ParmVar 0x146140a28 'module' 'const struct lys_module *'
|   |     `-IntegerLiteral 0x146141340 <col:52> 'int' 1
|   |-IfStmt 0x1461414f8 <line:11:5, line:14:5>
|   | |-UnaryOperator 0x146141480 <line:11:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x146141468 <col:10> 'const struct lys_node *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x146141448 <col:10> 'const struct lys_node *' lvalue Var 0x146140f38 'siblings' 'const struct lys_node *'
|   | `-CompoundStmt 0x1461414e0 <col:20, line:14:5>
|   |   `-ReturnStmt 0x1461414d0 <line:13:9, col:16>
|   |     `-RecoveryExpr 0x1461414b0 <col:16> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x146143398 <line:16:5, line:21:5>
|   | |-BinaryOperator 0x146142dd8 <line:16:9, line:17:62> 'int' contains-errors '||'
|   | | |-CallExpr 0x146142d58 <line:16:9, line:17:56> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x1461415f8 <line:16:9> 'int ()' Function 0x146141540 'lys_getnext_data' 'int ()'
|   | | | |-DeclRefExpr 0x146141618 <col:26> 'const struct lys_module *' lvalue ParmVar 0x146140a28 'module' 'const struct lys_module *'
|   | | | |-CallExpr 0x146142b88 <col:34, col:53> 'int'
|   | | | | |-ImplicitCastExpr 0x146142b70 <col:34> 'int (*)()' <FunctionToPointerDecay>
|   | | | | | `-DeclRefExpr 0x146141718 <col:34> 'int ()' Function 0x146141660 'lys_parent' 'int ()'
|   | | | | `-ImplicitCastExpr 0x146142bb0 <col:45> 'const struct lys_node *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x146141738 <col:45> 'const struct lys_node *' lvalue Var 0x146140f38 'siblings' 'const struct lys_node *'
|   | | | |-DeclRefExpr 0x1461417b0 <col:56> 'const char *' lvalue ParmVar 0x146140aa8 'name' 'const char *'
|   | | | |-CallExpr 0x146142bf8 <col:62, col:73> 'unsigned long'
|   | | | | |-ImplicitCastExpr 0x146142be0 <col:62> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   | | | | | `-DeclRefExpr 0x146141978 <col:62> 'unsigned long (const char *)' Function 0x146141808 'strlen' 'unsigned long (const char *)'
|   | | | | `-ImplicitCastExpr 0x146142c20 <col:69> 'const char *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x146141998 <col:69> 'const char *' lvalue ParmVar 0x146140aa8 'name' 'const char *'
|   | | | |-BinaryOperator 0x146142d38 <col:76, line:17:38> '<dependent type>' contains-errors '|'
|   | | | | |-BinaryOperator 0x146142cf8 <line:16:76, line:17:28> '<dependent type>' contains-errors '|'
|   | | | | | |-BinaryOperator 0x146142cb8 <line:16:76, col:103> '<dependent type>' contains-errors '|'
|   | | | | | | |-BinaryOperator 0x146142c78 <col:76, col:92> '<dependent type>' contains-errors '|'
|   | | | | | | | |-RecoveryExpr 0x146142c38 <col:76> '<dependent type>' contains-errors lvalue
|   | | | | | | | `-RecoveryExpr 0x146142c58 <col:92> '<dependent type>' contains-errors lvalue
|   | | | | | | `-RecoveryExpr 0x146142c98 <col:103> '<dependent type>' contains-errors lvalue
|   | | | | | `-RecoveryExpr 0x146142cd8 <line:17:28> '<dependent type>' contains-errors lvalue
|   | | | | `-RecoveryExpr 0x146142d18 <col:38> '<dependent type>' contains-errors lvalue
|   | | | `-UnaryOperator 0x1461429d0 <col:50, col:51> 'const struct lys_node **' contains-errors prefix '&' cannot overflow
|   | | |   `-DeclRefExpr 0x146142950 <col:51> 'const struct lys_node *' contains-errors lvalue Var 0x146140e58 'snode' 'const struct lys_node *'
|   | | `-UnaryOperator 0x146142dc0 <col:61, col:62> 'int' contains-errors prefix '!' cannot overflow
|   | |   `-ImplicitCastExpr 0x146142da8 <col:62> 'const struct lys_node *' contains-errors <LValueToRValue>
|   | |     `-DeclRefExpr 0x146142a38 <col:62> 'const struct lys_node *' contains-errors lvalue Var 0x146140e58 'snode' 'const struct lys_node *'
|   | `-CompoundStmt 0x146143380 <col:69, line:21:5>
|   |   `-CallExpr 0x146143330 <line:18:9, line:19:69> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x146142ed8 <line:18:9> 'int ()' Function 0x146142e20 'LOGERR' 'int ()'
|   |     |-CXXDependentScopeMemberExpr 0x146142f58 <col:16, col:34> '<dependent type>' contains-errors lvalue ->ctx
|   |     | `-RecoveryExpr 0x146142f30 <col:16, col:26> '<dependent type>' contains-errors lvalue
|   |     |   `-DeclRefExpr 0x146142ef8 <col:16> 'const struct lys_node *' lvalue Var 0x146140f38 'siblings' 'const struct lys_node *'
|   |     |-RecoveryExpr 0x146143290 <col:39> '<dependent type>' contains-errors lvalue
|   |     |-StringLiteral 0x146143000 <col:50> 'char[4]' lvalue "STR"
|   |     |-DeclRefExpr 0x146143020 <line:19:16> 'const char *' lvalue ParmVar 0x146140aa8 'name' 'const char *'
|   |     |-RecoveryExpr 0x146143308 <col:22, col:49> '<dependent type>' contains-errors lvalue
|   |     | `-CallExpr 0x1461432c8 <col:22, col:46> 'int'
|   |     |   |-ImplicitCastExpr 0x1461432b0 <col:22> 'int (*)()' <FunctionToPointerDecay>
|   |     |   | `-DeclRefExpr 0x146143120 <col:22> 'int ()' Function 0x146143068 'lys_node_module' 'int ()'
|   |     |   `-ImplicitCastExpr 0x1461432f0 <col:38> 'const struct lys_node *' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x146143140 <col:38> 'const struct lys_node *' lvalue Var 0x146140f38 'siblings' 'const struct lys_node *'
|   |     `-RecoveryExpr 0x146143218 <col:55, col:65> '<dependent type>' contains-errors lvalue
|   |       `-DeclRefExpr 0x1461431e0 <col:55> 'const struct lys_node *' lvalue Var 0x146140f38 'siblings' 'const struct lys_node *'
|   `-ReturnStmt 0x146143598 <line:23:5, col:37>
|     `-CallExpr 0x146143530 <col:12, col:37> 'int' contains-errors
|       |-ImplicitCastExpr 0x146143518 <col:12> 'int (*)()' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x146143498 <col:12> 'int ()' Function 0x1461433e0 '_lyd_new' 'int ()'
|       |-ImplicitCastExpr 0x146143568 <col:21> 'struct lyd_node *' <LValueToRValue>
|       | `-DeclRefExpr 0x1461434b8 <col:21> 'struct lyd_node *' lvalue ParmVar 0x146128648 'parent' 'struct lyd_node *'
|       |-ImplicitCastExpr 0x146143580 <col:29> 'const struct lys_node *' contains-errors <LValueToRValue>
|       | `-DeclRefExpr 0x1461434d8 <col:29> 'const struct lys_node *' contains-errors lvalue Var 0x146140e58 'snode' 'const struct lys_node *'
|       `-IntegerLiteral 0x1461434f8 <col:36> 'int' 0
`-FunctionDecl 0x146141808 <line:16:62> col:62 implicit used strlen 'unsigned long (const char *)' extern
  |-ParmVarDecl 0x146141908 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x1461418b0 <<invalid sloc>> Implicit 902
