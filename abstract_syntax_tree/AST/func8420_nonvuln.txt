TranslationUnitDecl 0x135855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1358564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x135855bd0 '__int128'
|-TypedefDecl 0x135856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x135855bf0 'unsigned __int128'
|-TypedefDecl 0x135926a30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x135926800 'struct __NSConstantString_tag'
|   `-Record 0x135856580 '__NSConstantString_tag'
|-TypedefDecl 0x135926a98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x135855d90 '__SVInt8_t'
|-TypedefDecl 0x135926b00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x135855db0 '__SVInt16_t'
|-TypedefDecl 0x135926b68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x135855dd0 '__SVInt32_t'
|-TypedefDecl 0x135926bd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x135855df0 '__SVInt64_t'
|-TypedefDecl 0x135926c38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x135855e10 '__SVUint8_t'
|-TypedefDecl 0x135926ca0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x135855e30 '__SVUint16_t'
|-TypedefDecl 0x135926d08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x135855e50 '__SVUint32_t'
|-TypedefDecl 0x135926d70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x135855e70 '__SVUint64_t'
|-TypedefDecl 0x135926dd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x135855e90 '__SVFloat16_t'
|-TypedefDecl 0x135926e40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x135855eb0 '__SVFloat32_t'
|-TypedefDecl 0x135926ea8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x135855ed0 '__SVFloat64_t'
|-TypedefDecl 0x135926f10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x135855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x135926f78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x135855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x135926fe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x135855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x135927048 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x135855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1359270b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x135855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x135927118 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x135855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x135927180 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x135855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1359271e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x135855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x135927250 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x135855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1359272b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x135856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x135927320 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x135856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x135927388 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x135856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1359273f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x135856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x135927458 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x135856090 '__clang_svint8x3_t'
|-TypedefDecl 0x1359274c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1358560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x135927528 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1358560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x135927590 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1358560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x1359275f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x135856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x135927660 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x135856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x1359276c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x135856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x135927730 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x135856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x135927798 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x135856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x135928000 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1358561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x135928068 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1358561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1359280d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1358561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x135928138 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x135856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1359281a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x135856230 '__clang_svint16x4_t'
|-TypedefDecl 0x135928208 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x135856250 '__clang_svint32x4_t'
|-TypedefDecl 0x135928270 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x135856270 '__clang_svint64x4_t'
|-TypedefDecl 0x1359282d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x135856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x135928340 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1358562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1359283a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1358562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x135928410 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1358562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x135928478 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x135856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1359284e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x135856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x135928548 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x135856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1359285b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x135856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x135928618 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x135856390 '__SVBool_t'
|-TypedefDecl 0x135928680 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1358563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1359286e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1358563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x135928750 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1358563f0 '__SVCount_t'
|-TypedefDecl 0x1359287f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1359287b0 'char *'
|   `-BuiltinType 0x1358556b0 'char'
|-TypedefDecl 0x135928868 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1359287b0 'char *'
|   `-BuiltinType 0x1358556b0 'char'
`-FunctionDecl 0x135945b08 <dataset_diviso_filec/func8420_nonvuln.c:1:1, line:59:1> line:1:12 invalid __udp4_lib_mcast_deliver 'int (struct net *, struct sk_buff *, struct udphdr *, int, int, struct udp_table *, int)' static
  |-ParmVarDecl 0x135928e48 <col:37, col:49> col:49 used net 'struct net *'
  |-ParmVarDecl 0x135945428 <col:54, col:70> col:70 used skb 'struct sk_buff *'
  |-ParmVarDecl 0x1359455f8 <line:2:9, col:25> col:25 used uh 'struct udphdr *'
  |-ParmVarDecl 0x135945690 <line:3:9, col:16> col:16 invalid saddr 'int'
  |-ParmVarDecl 0x135945710 <col:23, col:30> col:30 invalid daddr 'int'
  |-ParmVarDecl 0x1359458e8 <line:4:9, col:27> col:27 used udptable 'struct udp_table *'
  |-ParmVarDecl 0x135945968 <line:5:9, col:13> col:13 used proto 'int'
  `-CompoundStmt 0x13594c458 <line:6:1, line:59:1>
    |-DeclStmt 0x135946020 <line:7:2, col:54>
    | |-RecordDecl 0x135945be8 <col:2, col:9> col:9 struct sock
    | |-VarDecl 0x135945d58 <col:2, col:15> col:15 used sk 'struct sock *'
    | `-VarDecl 0x135945f98 <col:2, col:53> col:20 used stack 'struct sock *[32]'
    |-DeclStmt 0x135946228 <line:8:2, col:31>
    | |-RecordDecl 0x135946038 <col:2, col:9> col:9 struct hlist_nulls_node
    | `-VarDecl 0x1359461a8 <col:2, col:27> col:27 used node 'struct hlist_nulls_node *'
    |-DeclStmt 0x135948960 <line:9:2, col:39>
    | `-VarDecl 0x135946258 <col:2, col:38> col:17 used hnum 'unsigned short' cinit
    |   `-CallExpr 0x135948938 <col:24, col:38> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x1359488b8 <col:24> 'int ()' Function 0x135948800 'ntohs' 'int ()'
    |     `-RecoveryExpr 0x135948910 <col:30, col:34> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x1359488d8 <col:30> 'struct udphdr *' lvalue ParmVar 0x1359455f8 'uh' 'struct udphdr *'
    |-DeclStmt 0x135948dc0 <line:10:2, col:61>
    | |-RecordDecl 0x135948978 <col:2, col:9> col:9 struct udp_hslot
    | `-VarDecl 0x135948ae8 <col:2, col:60> col:20 used hslot 'struct udp_hslot *' cinit
    |   `-ImplicitCastExpr 0x135948d90 <col:28, col:60> 'struct udp_hslot *' contains-errors <IntegralToPointer>
    |     `-CallExpr 0x135948cf8 <col:28, col:60> 'int' contains-errors
    |       |-ImplicitCastExpr 0x135948ce0 <col:28> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x135948c30 <col:28> 'int ()' Function 0x135948b78 'udp_hashslot' 'int ()'
    |       |-ImplicitCastExpr 0x135948d30 <col:41> 'struct udp_table *' <LValueToRValue>
    |       | `-DeclRefExpr 0x135948c50 <col:41> 'struct udp_table *' lvalue ParmVar 0x1359458e8 'udptable' 'struct udp_table *'
    |       |-ImplicitCastExpr 0x135948d48 <col:51> 'struct net *' <LValueToRValue>
    |       | `-DeclRefExpr 0x135948c70 <col:51> 'struct net *' lvalue ParmVar 0x135928e48 'net' 'struct net *'
    |       `-ImplicitCastExpr 0x135948d78 <col:56> 'int' contains-errors <IntegralCast>
    |         `-ImplicitCastExpr 0x135948d60 <col:56> 'unsigned short' contains-errors <LValueToRValue>
    |           `-DeclRefExpr 0x135948c90 <col:56> 'unsigned short' contains-errors lvalue Var 0x135946258 'hnum' 'unsigned short'
    |-DeclStmt 0x135948f00 <line:11:2, col:29>
    | `-VarDecl 0x135948df0 <col:2, col:22> col:6 used dif 'int' cinit
    |   `-CXXDependentScopeMemberExpr 0x135948eb8 <col:12, col:22> '<dependent type>' contains-errors lvalue ->ifindex
    |     `-RecoveryExpr 0x135948e90 <col:12, col:17> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x135948e58 <col:12> 'struct sk_buff *' lvalue ParmVar 0x135945428 'skb' 'struct sk_buff *'
    |-DeclStmt 0x135949180 <line:12:2, col:71>
    | |-VarDecl 0x135948f30 <col:2, col:23> col:15 used count 'unsigned int' cinit
    | | `-ImplicitCastExpr 0x135948fb8 <col:23> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x135948f98 <col:23> 'int' 0
    | `-VarDecl 0x135948fe8 <col:2, col:26> col:26 used offset 'unsigned int'
    |-DeclStmt 0x135949468 <line:13:2, col:72>
    | |-VarDecl 0x1359491b0 <col:2, col:23> col:15 used hash2 'unsigned int' cinit
    | | `-ImplicitCastExpr 0x135949238 <col:23> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x135949218 <col:23> 'int' 0
    | |-VarDecl 0x135949268 <col:2, col:38> col:26 used hash2_any 'unsigned int' cinit
    | | `-ImplicitCastExpr 0x1359492f0 <col:38> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x1359492d0 <col:38> 'int' 0
    | `-VarDecl 0x135949320 <col:2, col:71> col:41 used use_hash2 'unsigned int' cinit
    |   `-ParenExpr 0x135949428 <col:53, col:71> 'int' contains-errors
    |     `-BinaryOperator 0x135949408 <col:54, col:69> 'int' contains-errors '>'
    |       |-RecoveryExpr 0x1359493c0 <col:54, col:61> '<dependent type>' contains-errors lvalue
    |       | `-DeclRefExpr 0x135949388 <col:54> 'struct udp_hslot *' contains-errors lvalue Var 0x135948ae8 'hslot' 'struct udp_hslot *'
    |       `-IntegerLiteral 0x1359493e8 <col:69> 'int' 10
    |-IfStmt 0x13594a7a8 <line:16:2, line:23:2>
    | |-ImplicitCastExpr 0x1359494a0 <line:16:6> 'unsigned int' contains-errors <LValueToRValue>
    | | `-DeclRefExpr 0x135949480 <col:6> 'unsigned int' contains-errors lvalue Var 0x135949320 'use_hash2' 'unsigned int'
    | `-CompoundStmt 0x13594a780 <col:17, line:23:2>
    |   |-BinaryOperator 0x13594a348 <line:17:3, line:18:18> 'unsigned int' contains-errors '='
    |   | |-DeclRefExpr 0x1359494b8 <line:17:3> 'unsigned int' lvalue Var 0x135949268 'hash2_any' 'unsigned int'
    |   | `-BinaryOperator 0x13594a328 <col:15, line:18:18> '<dependent type>' contains-errors '&'
    |   |   |-CallExpr 0x13594a288 <line:17:15, col:62> '<dependent type>' contains-errors
    |   |   | |-DeclRefExpr 0x1359495b8 <col:15> 'int ()' Function 0x135949500 'udp4_portaddr_hash' 'int ()'
    |   |   | |-DeclRefExpr 0x1359495d8 <col:34> 'struct net *' lvalue ParmVar 0x135928e48 'net' 'struct net *'
    |   |   | |-CallExpr 0x13594a260 <col:39, col:55> '<dependent type>' contains-errors
    |   |   | | |-DeclRefExpr 0x1359496d8 <col:39> 'int ()' Function 0x135949620 'htonl' 'int ()'
    |   |   | | `-RecoveryExpr 0x13594a240 <col:45> '<dependent type>' contains-errors lvalue
    |   |   | `-DeclRefExpr 0x135949738 <col:58> 'unsigned short' contains-errors lvalue Var 0x135946258 'hnum' 'unsigned short'
    |   |   `-CXXDependentScopeMemberExpr 0x13594a2e0 <line:18:8, col:18> '<dependent type>' contains-errors lvalue .mask
    |   |     `-RecoveryExpr 0x13594a2c0 <col:8> '<dependent type>' contains-errors lvalue
    |   |-BinaryOperator 0x13594a588 <line:19:3, col:60> 'unsigned int' contains-errors '='
    |   | |-DeclRefExpr 0x13594a368 <col:3> 'unsigned int' lvalue Var 0x1359491b0 'hash2' 'unsigned int'
    |   | `-BinaryOperator 0x13594a568 <col:11, col:60> '<dependent type>' contains-errors '&'
    |   |   |-CallExpr 0x13594a408 <col:11, col:46> '<dependent type>' contains-errors
    |   |   | |-DeclRefExpr 0x13594a388 <col:11> 'int ()' Function 0x135949500 'udp4_portaddr_hash' 'int ()'
    |   |   | |-DeclRefExpr 0x13594a3a8 <col:30> 'struct net *' lvalue ParmVar 0x135928e48 'net' 'struct net *'
    |   |   | |-RecoveryExpr 0x13594a3c8 <col:35> '<dependent type>' contains-errors lvalue
    |   |   | `-DeclRefExpr 0x13594a3e8 <col:42> 'unsigned short' contains-errors lvalue Var 0x135946258 'hnum' 'unsigned short'
    |   |   `-CXXDependentScopeMemberExpr 0x13594a520 <col:50, col:60> '<dependent type>' contains-errors lvalue .mask
    |   |     `-RecoveryExpr 0x13594a500 <col:50> '<dependent type>' contains-errors lvalue
    |   `-LabelStmt 0x13594a6c0 <line:20:1, col:13> 'start_lookup'
    |     `-NullStmt 0x13594a668 <col:13>
    |-CallExpr 0x13594a940 <line:25:2, col:24> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13594a8a8 <col:2> 'int ()' Function 0x13594a7f0 'spin_lock' 'int ()'
    | `-UnaryOperator 0x13594a928 <col:12, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x13594a900 <col:13, col:20> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x13594a8c8 <col:13> 'struct udp_hslot *' contains-errors lvalue Var 0x135948ae8 'hslot' 'struct udp_hslot *'
    |-CallExpr 0x13594ab40 <line:26:2, col:63> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13594aa48 <col:2> 'int ()' Function 0x13594a990 'sk_nulls_for_each_entry_offset' 'int ()'
    | |-DeclRefExpr 0x13594aa68 <col:33> 'struct sock *' lvalue Var 0x135945d58 'sk' 'struct sock *'
    | |-DeclRefExpr 0x13594aa88 <col:37> 'struct hlist_nulls_node *' lvalue Var 0x1359461a8 'node' 'struct hlist_nulls_node *'
    | |-UnaryOperator 0x13594ab08 <col:43, col:51> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-RecoveryExpr 0x13594aae0 <col:44, col:51> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x13594aaa8 <col:44> 'struct udp_hslot *' contains-errors lvalue Var 0x135948ae8 'hslot' 'struct udp_hslot *'
    | `-DeclRefExpr 0x13594ab20 <col:57> 'unsigned int' lvalue Var 0x135948fe8 'offset' 'unsigned int'
    |-CompoundStmt 0x13594bb98 <col:65, line:39:2>
    | `-IfStmt 0x13594bb78 <line:27:3, line:38:3>
    |   |-CallExpr 0x13594ae00 <line:27:7, line:30:15> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x13594ac60 <line:27:7> 'int ()' Function 0x13594aba8 '__udp_is_mcast_sock' 'int ()'
    |   | |-DeclRefExpr 0x13594ac80 <col:27> 'struct net *' lvalue ParmVar 0x135928e48 'net' 'struct net *'
    |   | |-DeclRefExpr 0x13594aca0 <col:32> 'struct sock *' lvalue Var 0x135945d58 'sk' 'struct sock *'
    |   | |-RecoveryExpr 0x13594acf8 <line:28:6, col:10> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x13594acc0 <col:6> 'struct udphdr *' lvalue ParmVar 0x1359455f8 'uh' 'struct udphdr *'
    |   | |-RecoveryExpr 0x13594ad20 <col:16> '<dependent type>' contains-errors lvalue
    |   | |-RecoveryExpr 0x13594ad78 <line:29:6, col:10> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x13594ad40 <col:6> 'struct udphdr *' lvalue ParmVar 0x1359455f8 'uh' 'struct udphdr *'
    |   | |-RecoveryExpr 0x13594ada0 <col:18> '<dependent type>' contains-errors lvalue
    |   | |-DeclRefExpr 0x13594adc0 <line:30:6> 'int' contains-errors lvalue Var 0x135948df0 'dif' 'int'
    |   | `-DeclRefExpr 0x13594ade0 <col:11> 'unsigned short' contains-errors lvalue Var 0x135946258 'hnum' 'unsigned short'
    |   `-CompoundStmt 0x13594bb50 <col:18, line:38:3>
    |     |-IfStmt 0x13594b8d0 <line:31:4, line:35:4>
    |     | |-CallExpr 0x13594b1c0 <line:31:8, col:43> 'int'
    |     | | |-ImplicitCastExpr 0x13594b1a8 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |     | | | `-DeclRefExpr 0x13594af40 <col:8> 'int ()' Function 0x13594ae88 'unlikely' 'int ()'
    |     | | `-BinaryOperator 0x13594b188 <col:17, col:42> 'int' '=='
    |     | |   |-ImplicitCastExpr 0x13594b158 <col:17> 'unsigned int' <LValueToRValue>
    |     | |   | `-DeclRefExpr 0x13594af60 <col:17> 'unsigned int' lvalue Var 0x135948f30 'count' 'unsigned int'
    |     | |   `-ImplicitCastExpr 0x13594b170 <col:26, col:42> 'unsigned int' <IntegralCast>
    |     | |     `-CallExpr 0x13594b0b8 <col:26, col:42> 'int'
    |     | |       |-ImplicitCastExpr 0x13594b0a0 <col:26> 'int (*)()' <FunctionToPointerDecay>
    |     | |       | `-DeclRefExpr 0x13594b060 <col:26> 'int ()' Function 0x13594afa8 'ARRAY_SIZE' 'int ()'
    |     | |       `-ImplicitCastExpr 0x13594b140 <col:37> 'struct sock **' <ArrayToPointerDecay>
    |     | |         `-DeclRefExpr 0x13594b080 <col:37> 'struct sock *[32]' lvalue Var 0x135945f98 'stack' 'struct sock *[32]'
    |     | `-CompoundStmt 0x13594b8b0 <col:46, line:35:4>
    |     |   |-CallExpr 0x13594b7b0 <line:32:5, col:38> 'int'
    |     |   | |-ImplicitCastExpr 0x13594b798 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |     |   | | `-DeclRefExpr 0x13594b6e0 <col:5> 'int ()' Function 0x13594b628 'flush_stack' 'int ()'
    |     |   | |-ImplicitCastExpr 0x13594b7f0 <col:17> 'struct sock **' <ArrayToPointerDecay>
    |     |   | | `-DeclRefExpr 0x13594b700 <col:17> 'struct sock *[32]' lvalue Var 0x135945f98 'stack' 'struct sock *[32]'
    |     |   | |-ImplicitCastExpr 0x13594b808 <col:24> 'unsigned int' <LValueToRValue>
    |     |   | | `-DeclRefExpr 0x13594b720 <col:24> 'unsigned int' lvalue Var 0x135948f30 'count' 'unsigned int'
    |     |   | |-ImplicitCastExpr 0x13594b820 <col:31> 'struct sk_buff *' <LValueToRValue>
    |     |   | | `-DeclRefExpr 0x13594b740 <col:31> 'struct sk_buff *' lvalue ParmVar 0x135945428 'skb' 'struct sk_buff *'
    |     |   | `-UnaryOperator 0x13594b780 <col:36, col:37> 'int' prefix '~' cannot overflow
    |     |   |   `-IntegerLiteral 0x13594b760 <col:37> 'int' 0
    |     |   `-BinaryOperator 0x13594b890 <line:34:5, col:13> 'unsigned int' '='
    |     |     |-DeclRefExpr 0x13594b838 <col:5> 'unsigned int' lvalue Var 0x135948f30 'count' 'unsigned int'
    |     |     `-ImplicitCastExpr 0x13594b878 <col:13> 'unsigned int' <IntegralCast>
    |     |       `-IntegerLiteral 0x13594b858 <col:13> 'int' 0
    |     |-BinaryOperator 0x13594b9b8 <line:36:4, col:21> 'struct sock *' '='
    |     | |-ArraySubscriptExpr 0x13594b960 <col:4, col:17> 'struct sock *' lvalue
    |     | | |-ImplicitCastExpr 0x13594b948 <col:4> 'struct sock **' <ArrayToPointerDecay>
    |     | | | `-DeclRefExpr 0x13594b8f0 <col:4> 'struct sock *[32]' lvalue Var 0x135945f98 'stack' 'struct sock *[32]'
    |     | | `-UnaryOperator 0x13594b930 <col:10, col:15> 'unsigned int' postfix '++'
    |     | |   `-DeclRefExpr 0x13594b910 <col:10> 'unsigned int' lvalue Var 0x135948f30 'count' 'unsigned int'
    |     | `-ImplicitCastExpr 0x13594b9a0 <col:21> 'struct sock *' <LValueToRValue>
    |     |   `-DeclRefExpr 0x13594b980 <col:21> 'struct sock *' lvalue Var 0x135945d58 'sk' 'struct sock *'
    |     `-CallExpr 0x13594bb10 <line:37:4, col:16> 'int'
    |       |-ImplicitCastExpr 0x13594baf8 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x13594bab8 <col:4> 'int ()' Function 0x13594ba00 'sock_hold' 'int ()'
    |       `-ImplicitCastExpr 0x13594bb38 <col:14> 'struct sock *' <LValueToRValue>
    |         `-DeclRefExpr 0x13594bad8 <col:14> 'struct sock *' lvalue Var 0x135945d58 'sk' 'struct sock *'
    |-CallExpr 0x13594bd28 <line:41:2, col:26> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13594bc90 <col:2> 'int ()' Function 0x13594bbd8 'spin_unlock' 'int ()'
    | `-UnaryOperator 0x13594bd10 <col:14, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x13594bce8 <col:15, col:22> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x13594bcb0 <col:15> 'struct udp_hslot *' contains-errors lvalue Var 0x135948ae8 'hslot' 'struct udp_hslot *'
    |-IfStmt 0x13594bee8 <line:44:2, line:47:2>
    | |-BinaryOperator 0x13594be18 <line:44:6, col:28> 'int' contains-errors '&&'
    | | |-ImplicitCastExpr 0x13594be00 <col:6> 'unsigned int' contains-errors <LValueToRValue>
    | | | `-DeclRefExpr 0x13594bd50 <col:6> 'unsigned int' contains-errors lvalue Var 0x135949320 'use_hash2' 'unsigned int'
    | | `-BinaryOperator 0x13594bde0 <col:19, col:28> 'int' '!='
    | |   |-ImplicitCastExpr 0x13594bdb0 <col:19> 'unsigned int' <LValueToRValue>
    | |   | `-DeclRefExpr 0x13594bd70 <col:19> 'unsigned int' lvalue Var 0x1359491b0 'hash2' 'unsigned int'
    | |   `-ImplicitCastExpr 0x13594bdc8 <col:28> 'unsigned int' <LValueToRValue>
    | |     `-DeclRefExpr 0x13594bd90 <col:28> 'unsigned int' lvalue Var 0x135949268 'hash2_any' 'unsigned int'
    | `-CompoundStmt 0x13594bec8 <col:39, line:47:2>
    |   |-BinaryOperator 0x13594be90 <line:45:3, col:11> 'unsigned int' '='
    |   | |-DeclRefExpr 0x13594be38 <col:3> 'unsigned int' lvalue Var 0x1359491b0 'hash2' 'unsigned int'
    |   | `-ImplicitCastExpr 0x13594be78 <col:11> 'unsigned int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x13594be58 <col:11> 'unsigned int' lvalue Var 0x135949268 'hash2_any' 'unsigned int'
    |   `-GotoStmt 0x13594beb0 <line:46:3, col:8> 'start_lookup' 0x13594a670
    |-IfStmt 0x13594c3f8 <line:50:2, line:57:2> has_else
    | |-ImplicitCastExpr 0x13594bf28 <line:50:6> 'unsigned int' <LValueToRValue>
    | | `-DeclRefExpr 0x13594bf08 <col:6> 'unsigned int' lvalue Var 0x135948f30 'count' 'unsigned int'
    | |-CompoundStmt 0x13594c0f0 <col:13, line:52:2>
    | | `-CallExpr 0x13594c068 <line:51:3, col:43> 'int'
    | |   |-ImplicitCastExpr 0x13594c050 <col:3> 'int (*)()' <FunctionToPointerDecay>
    | |   | `-DeclRefExpr 0x13594bf40 <col:3> 'int ()' Function 0x13594b628 'flush_stack' 'int ()'
    | |   |-ImplicitCastExpr 0x13594c0a8 <col:15> 'struct sock **' <ArrayToPointerDecay>
    | |   | `-DeclRefExpr 0x13594bf60 <col:15> 'struct sock *[32]' lvalue Var 0x135945f98 'stack' 'struct sock *[32]'
    | |   |-ImplicitCastExpr 0x13594c0c0 <col:22> 'unsigned int' <LValueToRValue>
    | |   | `-DeclRefExpr 0x13594bf80 <col:22> 'unsigned int' lvalue Var 0x135948f30 'count' 'unsigned int'
    | |   |-ImplicitCastExpr 0x13594c0d8 <col:29> 'struct sk_buff *' <LValueToRValue>
    | |   | `-DeclRefExpr 0x13594bfa0 <col:29> 'struct sk_buff *' lvalue ParmVar 0x135945428 'skb' 'struct sk_buff *'
    | |   `-BinaryOperator 0x13594c030 <col:34, col:42> 'unsigned int' '-'
    | |     |-ImplicitCastExpr 0x13594c000 <col:34> 'unsigned int' <LValueToRValue>
    | |     | `-DeclRefExpr 0x13594bfc0 <col:34> 'unsigned int' lvalue Var 0x135948f30 'count' 'unsigned int'
    | |     `-ImplicitCastExpr 0x13594c018 <col:42> 'unsigned int' <IntegralCast>
    | |       `-IntegerLiteral 0x13594bfe0 <col:42> 'int' 1
    | `-CompoundStmt 0x13594c3e0 <line:52:9, line:57:2>
    |   `-CallExpr 0x13594c3a0 <line:56:3, col:18> 'int'
    |     |-ImplicitCastExpr 0x13594c388 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x13594c348 <col:3> 'int ()' Function 0x13594c290 'consume_skb' 'int ()'
    |     `-ImplicitCastExpr 0x13594c3c8 <col:15> 'struct sk_buff *' <LValueToRValue>
    |       `-DeclRefExpr 0x13594c368 <col:15> 'struct sk_buff *' lvalue ParmVar 0x135945428 'skb' 'struct sk_buff *'
    `-ReturnStmt 0x13594c448 <line:58:2, col:9>
      `-IntegerLiteral 0x13594c428 <col:9> 'int' 0
