TranslationUnitDecl 0x146855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1468564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x146855bd0 '__int128'
|-TypedefDecl 0x146856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x146855bf0 'unsigned __int128'
|-TypedefDecl 0x14700be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14700bc00 'struct __NSConstantString_tag'
|   `-Record 0x146856580 '__NSConstantString_tag'
|-TypedefDecl 0x14700be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x146855d90 '__SVInt8_t'
|-TypedefDecl 0x14700bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x146855db0 '__SVInt16_t'
|-TypedefDecl 0x14700bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x146855dd0 '__SVInt32_t'
|-TypedefDecl 0x14700bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x146855df0 '__SVInt64_t'
|-TypedefDecl 0x14700c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x146855e10 '__SVUint8_t'
|-TypedefDecl 0x14700c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x146855e30 '__SVUint16_t'
|-TypedefDecl 0x14700c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x146855e50 '__SVUint32_t'
|-TypedefDecl 0x14700c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x146855e70 '__SVUint64_t'
|-TypedefDecl 0x14700c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x146855e90 '__SVFloat16_t'
|-TypedefDecl 0x14700c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x146855eb0 '__SVFloat32_t'
|-TypedefDecl 0x14700c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x146855ed0 '__SVFloat64_t'
|-TypedefDecl 0x14700c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x146855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14700c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x146855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14700c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x146855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14700c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x146855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14700c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x146855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14700c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x146855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14700c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x146855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14700c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x146855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14700c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x146855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14700c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x146856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14700c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x146856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14700c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x146856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14700c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x146856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14700c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x146856090 '__clang_svint8x3_t'
|-TypedefDecl 0x14700c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1468560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14700c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1468560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14700c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1468560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14700c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x146856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14700ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x146856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14700cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x146856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14700cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x146856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14700cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x146856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14700d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1468561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14700d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1468561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14700d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1468561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14700d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x146856210 '__clang_svint8x4_t'
|-TypedefDecl 0x14700d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x146856230 '__clang_svint16x4_t'
|-TypedefDecl 0x14700d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x146856250 '__clang_svint32x4_t'
|-TypedefDecl 0x14700d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x146856270 '__clang_svint64x4_t'
|-TypedefDecl 0x14700d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x146856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14700d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1468562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14700d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1468562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14700d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1468562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14700d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x146856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14700d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x146856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14700d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x146856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14700d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x146856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14700da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x146856390 '__SVBool_t'
|-TypedefDecl 0x14700da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1468563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14700dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1468563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14700db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1468563f0 '__SVCount_t'
|-TypedefDecl 0x14700dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14700dbb0 'char *'
|   `-BuiltinType 0x1468556b0 'char'
|-TypedefDecl 0x14700dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14700dbb0 'char *'
|   `-BuiltinType 0x1468556b0 'char'
`-FunctionDecl 0x14700ddf8 <dataset_diviso_filec/func10164_vuln.c:1:1, line:40:1> line:1:1 invalid processBatchMultiRuleset 'int (int *)'
  |-ParmVarDecl 0x14700dd28 <col:26, col:35> col:35 referenced invalid pBatch 'int *'
  `-CompoundStmt 0x1470290a8 <line:2:1, line:40:1>
    |-DeclStmt 0x14700df40 <line:5:2, col:7>
    | `-VarDecl 0x14700ded8 <col:2, col:6> col:6 used i 'int'
    |-DeclStmt 0x14700dfd8 <line:6:2, col:12>
    | `-VarDecl 0x14700df70 <col:2, col:6> col:6 used iStart 'int'
    |-DeclStmt 0x14700e070 <line:7:2, col:10>
    | `-VarDecl 0x14700e008 <col:2, col:6> col:6 used iNew 'int'
    |-CallExpr 0x147027468 <line:10:2, col:50> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14700e1e0 <col:2> 'int ()' Function 0x14700e128 'CHKiRet' 'int ()'
    | `-CallExpr 0x147027438 <col:10, col:49> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14700e2e0 <col:10> 'int ()' Function 0x14700e228 'batchInit' 'int ()'
    |   |-UnaryOperator 0x147027420 <col:20, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-RecoveryExpr 0x147027400 <col:21> '<dependent type>' contains-errors lvalue
    |   `-CXXDependentScopeMemberExpr 0x14700e350 <col:36, col:44> '<dependent type>' contains-errors lvalue ->nElem
    |     `-RecoveryExpr 0x14700e330 <col:36> '<dependent type>' contains-errors lvalue
    |-WhileStmt 0x147028f10 <line:13:2, line:35:2>
    | |-IntegerLiteral 0x1470274f8 <line:13:8> 'int' 1
    | `-CompoundStmt 0x147028ee8 <col:11, line:35:2>
    |   |-ForStmt 0x147027968 <line:15:3, line:16:4>
    |   | |-BinaryOperator 0x147027558 <line:15:7, col:16> 'int' '='
    |   | | |-DeclRefExpr 0x147027518 <col:7> 'int' lvalue Var 0x14700df70 'iStart' 'int'
    |   | | `-IntegerLiteral 0x147027538 <col:16> 'int' 0
    |   | |-<<<NULL>>>
    |   | |-BinaryOperator 0x147027908 <col:20, col:77> 'int' contains-errors '&&'
    |   | | |-BinaryOperator 0x147027600 <col:20, col:37> 'int' contains-errors '<'
    |   | | | |-DeclRefExpr 0x147027578 <col:20> 'int' lvalue Var 0x14700df70 'iStart' 'int'
    |   | | | `-CXXDependentScopeMemberExpr 0x1470275b8 <col:29, col:37> '<dependent type>' contains-errors lvalue ->nElem
    |   | | |   `-RecoveryExpr 0x147027598 <col:29> '<dependent type>' contains-errors lvalue
    |   | | `-BinaryOperator 0x1470278e8 <col:46, col:77> 'int' contains-errors '=='
    |   | |   |-CXXDependentScopeMemberExpr 0x147027880 <col:46, col:68> '<dependent type>' contains-errors lvalue .state
    |   | |   | `-ArraySubscriptExpr 0x147027860 <col:46, col:66> '<dependent type>' contains-errors lvalue
    |   | |   |   |-ImplicitCastExpr 0x147027830 <col:46, col:54> '<dependent type>' contains-errors <LValueToRValue>
    |   | |   |   | `-CXXDependentScopeMemberExpr 0x147027640 <col:46, col:54> '<dependent type>' contains-errors lvalue ->pElem
    |   | |   |   |   `-RecoveryExpr 0x147027620 <col:46> '<dependent type>' contains-errors lvalue
    |   | |   |   `-ImplicitCastExpr 0x147027848 <col:60> 'int' <LValueToRValue>
    |   | |   |     `-DeclRefExpr 0x147027688 <col:60> 'int' lvalue Var 0x14700df70 'iStart' 'int'
    |   | |   `-RecoveryExpr 0x1470278c8 <col:77> '<dependent type>' contains-errors lvalue
    |   | |-UnaryOperator 0x147027948 <col:96, col:98> 'int' prefix '++'
    |   | | `-DeclRefExpr 0x147027928 <col:98> 'int' lvalue Var 0x14700df70 'iStart' 'int'
    |   | `-NullStmt 0x147027960 <line:16:4>
    |   |-BinaryOperator 0x147027bf8 <line:23:3, col:10> 'int' '='
    |   | |-DeclRefExpr 0x147027bb8 <col:3> 'int' lvalue Var 0x14700e008 'iNew' 'int'
    |   | `-IntegerLiteral 0x147027bd8 <col:10> 'int' 0
    |   `-ForStmt 0x147028c70 <line:24:3, line:30:3>
    |     |-BinaryOperator 0x147027c70 <line:24:7, col:11> 'int' '='
    |     | |-DeclRefExpr 0x147027c18 <col:7> 'int' lvalue Var 0x14700ded8 'i' 'int'
    |     | `-ImplicitCastExpr 0x147027c58 <col:11> 'int' <LValueToRValue>
    |     |   `-DeclRefExpr 0x147027c38 <col:11> 'int' lvalue Var 0x14700df70 'iStart' 'int'
    |     |-<<<NULL>>>
    |     |-BinaryOperator 0x147027d18 <col:20, col:32> 'int' contains-errors '<'
    |     | |-DeclRefExpr 0x147027c90 <col:20> 'int' lvalue Var 0x14700ded8 'i' 'int'
    |     | `-CXXDependentScopeMemberExpr 0x147027cd0 <col:24, col:32> '<dependent type>' contains-errors lvalue ->nElem
    |     |   `-RecoveryExpr 0x147027cb0 <col:24> '<dependent type>' contains-errors lvalue
    |     |-UnaryOperator 0x147027d58 <col:40, col:42> 'int' prefix '++'
    |     | `-DeclRefExpr 0x147027d38 <col:42> 'int' lvalue Var 0x14700ded8 'i' 'int'
    |     `-CompoundStmt 0x147028c58 <col:45, line:30:3>
    |       `-IfStmt 0x147028c38 <line:25:4, line:29:4>
    |         |-BinaryOperator 0x147027e58 <line:25:7, col:41> 'int' contains-errors '=='
    |         | |-CallExpr 0x147027dd0 <col:7, col:36> '<dependent type>' contains-errors
    |         | | |-DeclRefExpr 0x147027d70 <col:7> 'int ()' Function 0x147027a70 'batchElemGetRuleset' 'int ()'
    |         | | |-RecoveryExpr 0x147027d90 <col:27> '<dependent type>' contains-errors lvalue
    |         | | `-DeclRefExpr 0x147027db0 <col:35> 'int' lvalue Var 0x14700ded8 'i' 'int'
    |         | `-RecoveryExpr 0x147027e38 <col:41> '<dependent type>' contains-errors lvalue
    |         `-CompoundStmt 0x147028c20 <col:54, line:29:4>
    |           `-BinaryOperator 0x147028c00 <line:28:5, col:30> '<dependent type>' contains-errors '='
    |             |-CXXDependentScopeMemberExpr 0x147028388 <col:5, col:22> '<dependent type>' contains-errors lvalue .state
    |             | `-ArraySubscriptExpr 0x147028368 <col:5, col:20> '<dependent type>' contains-errors lvalue
    |             |   |-ImplicitCastExpr 0x147028338 <col:5, col:13> '<dependent type>' contains-errors <LValueToRValue>
    |             |   | `-CXXDependentScopeMemberExpr 0x147028168 <col:5, col:13> '<dependent type>' contains-errors lvalue ->pElem
    |             |   |   `-RecoveryExpr 0x147028140 <col:5> '<dependent type>' contains-errors lvalue
    |             |   |     `-DeclRefExpr 0x147028120 <col:5> 'int *' lvalue ParmVar 0x14700dd28 'pBatch' 'int *'
    |             |   `-ImplicitCastExpr 0x147028350 <col:19> 'int' <LValueToRValue>
    |             |     `-DeclRefExpr 0x1470281b0 <col:19> 'int' lvalue Var 0x14700ded8 'i' 'int'
    |             `-RecoveryExpr 0x1470283d0 <col:30> '<dependent type>' contains-errors lvalue
    `-LabelStmt 0x147029088 <line:38:1, col:12> 'finalize_it'
      `-NullStmt 0x147029030 <col:12>
