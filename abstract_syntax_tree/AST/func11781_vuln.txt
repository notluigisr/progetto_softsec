TranslationUnitDecl 0x151055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1510564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x151055bd0 '__int128'
|-TypedefDecl 0x151056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x151055bf0 'unsigned __int128'
|-TypedefDecl 0x151126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x151126000 'struct __NSConstantString_tag'
|   `-Record 0x151056580 '__NSConstantString_tag'
|-TypedefDecl 0x151126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x151055d90 '__SVInt8_t'
|-TypedefDecl 0x151126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x151055db0 '__SVInt16_t'
|-TypedefDecl 0x151126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x151055dd0 '__SVInt32_t'
|-TypedefDecl 0x1511263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x151055df0 '__SVInt64_t'
|-TypedefDecl 0x151126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x151055e10 '__SVUint8_t'
|-TypedefDecl 0x1511264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x151055e30 '__SVUint16_t'
|-TypedefDecl 0x151126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x151055e50 '__SVUint32_t'
|-TypedefDecl 0x151126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x151055e70 '__SVUint64_t'
|-TypedefDecl 0x1511265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x151055e90 '__SVFloat16_t'
|-TypedefDecl 0x151126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x151055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1511266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x151055ed0 '__SVFloat64_t'
|-TypedefDecl 0x151126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x151055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x151126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x151055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1511267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x151055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x151126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x151055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1511268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x151055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x151126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x151055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x151126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x151055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1511269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x151055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x151126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x151055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x151126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x151056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x151126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x151056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x151126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x151056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x151126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x151056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x151126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x151056090 '__clang_svint8x3_t'
|-TypedefDecl 0x151126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1510560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x151126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1510560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x151126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1510560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x151126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x151056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x151126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x151056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x151126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x151056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x151126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x151056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x151126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x151056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x151127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1510561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x151127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1510561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1511278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1510561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x151127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x151056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1511279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x151056230 '__clang_svint16x4_t'
|-TypedefDecl 0x151127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x151056250 '__clang_svint32x4_t'
|-TypedefDecl 0x151127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x151056270 '__clang_svint64x4_t'
|-TypedefDecl 0x151127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x151056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x151127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1510562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x151127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1510562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x151127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1510562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x151127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x151056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x151127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x151056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x151127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x151056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x151127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x151056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x151127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x151056390 '__SVBool_t'
|-TypedefDecl 0x151127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1510563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x151127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1510563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x151127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1510563f0 '__SVCount_t'
|-TypedefDecl 0x151127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x151127fb0 'char *'
|   `-BuiltinType 0x1510556b0 'char'
|-TypedefDecl 0x151128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x151127fb0 'char *'
|   `-BuiltinType 0x1510556b0 'char'
|-FunctionDecl 0x151128318 <dataset_diviso_filec/func11781_vuln.c:1:1, line:56:1> line:1:5 invalid gnutls_pcert_import_openpgp 'int (int *, int, unsigned int)'
| |-ParmVarDecl 0x151128128 <col:34, col:51> col:51 referenced invalid pcert 'int *'
| |-ParmVarDecl 0x1511281a8 <line:2:2, col:23> col:23 invalid crt 'int'
| |-ParmVarDecl 0x151128228 <col:28, col:41> col:41 flags 'unsigned int'
| `-CompoundStmt 0x151145d10 <line:3:1, line:56:1>
|   |-DeclStmt 0x151128458 <line:4:1, col:8>
|   | `-VarDecl 0x1511283f0 <col:1, col:5> col:5 used ret 'int'
|   |-UnaryExprOrTypeTraitExpr 0x1511284c8 <line:5:1, col:8> 'unsigned long' contains-errors sizeof
|   | `-RecoveryExpr 0x1511284a8 <col:8> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x151141cf8 <line:7:3, col:34> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x151141bf0 <col:3> 'void *(void *, int, unsigned long)' Function 0x1511419a0 'memset' 'void *(void *, int, unsigned long)'
|   | |-RecoveryExpr 0x151141c10 <col:10> '<dependent type>' contains-errors lvalue
|   | |-IntegerLiteral 0x151141c30 <col:17> 'int' 0
|   | `-UnaryExprOrTypeTraitExpr 0x151141cc0 <col:20, col:33> 'unsigned long' contains-errors sizeof
|   |   `-ParenExpr 0x151141ca0 <col:26, col:33> '<dependent type>' contains-errors
|   |     `-UnaryOperator 0x151141c88 <col:27, col:28> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |       `-ImplicitCastExpr 0x151141c70 <col:28> '<dependent type>' contains-errors <LValueToRValue>
|   |         `-RecoveryExpr 0x151141c50 <col:28> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x151141e18 <line:9:3, col:17> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x151141d78 <col:3, col:10> '<dependent type>' contains-errors lvalue ->type
|   | | `-RecoveryExpr 0x151141d50 <col:3> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x151141d30 <col:3> 'int *' lvalue ParmVar 0x151128128 'pcert' 'int *'
|   | `-RecoveryExpr 0x151141df8 <col:17> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x151141f68 <line:10:3, col:22> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x151141ec8 <col:3, col:15> '<dependent type>' contains-errors lvalue .data
|   | | `-CXXDependentScopeMemberExpr 0x151141e80 <col:3, col:10> '<dependent type>' contains-errors lvalue ->cert
|   | |   `-RecoveryExpr 0x151141e58 <col:3> '<dependent type>' contains-errors lvalue
|   | |     `-DeclRefExpr 0x151141e38 <col:3> 'int *' lvalue ParmVar 0x151128128 'pcert' 'int *'
|   | `-RecoveryExpr 0x151141f48 <col:22> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x1511422d8 <line:13:3, col:73> 'int' contains-errors '='
|   | |-DeclRefExpr 0x151141fa8 <col:3> 'int' lvalue Var 0x1511283f0 'ret' 'int'
|   | `-CallExpr 0x151142298 <col:9, col:73> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x151142120 <col:9> 'int ()' Function 0x151142068 'gnutls_openpgp_crt_export' 'int ()'
|   |   |-RecoveryExpr 0x151142140 <col:35> '<dependent type>' contains-errors lvalue
|   |   |-RecoveryExpr 0x151142220 <col:40> '<dependent type>' contains-errors lvalue
|   |   |-RecoveryExpr 0x151142240 <col:64> '<dependent type>' contains-errors lvalue
|   |   `-UnaryOperator 0x151142280 <col:70, col:71> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     `-RecoveryExpr 0x151142260 <col:71> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x151142730 <line:14:3, line:18:5>
|   | |-BinaryOperator 0x151142498 <line:14:7, col:25> 'int' contains-errors '&&'
|   | | |-BinaryOperator 0x151142438 <col:7, col:13> 'int' '<'
|   | | | |-ImplicitCastExpr 0x151142420 <col:7> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1511422f8 <col:7> 'int' lvalue Var 0x1511283f0 'ret' 'int'
|   | | | `-IntegerLiteral 0x151142318 <col:13> 'int' 0
|   | | `-BinaryOperator 0x151142478 <col:18, col:25> 'int' contains-errors '!='
|   | |   |-DeclRefExpr 0x151142370 <col:18> 'int' lvalue Var 0x1511283f0 'ret' 'int'
|   | |   `-RecoveryExpr 0x151142458 <col:25> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x151142710 <line:15:5, line:18:5>
|   |   |-BinaryOperator 0x151142688 <line:16:7, col:34> 'int' '='
|   |   | |-DeclRefExpr 0x1511424b8 <col:7> 'int' lvalue Var 0x1511283f0 'ret' 'int'
|   |   | `-CallExpr 0x151142648 <col:13, col:34> 'int'
|   |   |   |-ImplicitCastExpr 0x151142630 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x1511425b8 <col:13> 'int ()' Function 0x151142500 'gnutls_assert_val' 'int ()'
|   |   |   `-ImplicitCastExpr 0x151142670 <col:31> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1511425d8 <col:31> 'int' lvalue Var 0x1511283f0 'ret' 'int'
|   |   `-GotoStmt 0x1511426f8 <line:17:7, col:12> 'cleanup' 0x1511426a8
|   |-BinaryOperator 0x1511431f0 <line:20:3, col:38> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x151143000 <col:3, col:15> '<dependent type>' contains-errors lvalue .data
|   | | `-CXXDependentScopeMemberExpr 0x151142798 <col:3, col:10> '<dependent type>' contains-errors lvalue ->cert
|   | |   `-RecoveryExpr 0x151142770 <col:3> '<dependent type>' contains-errors lvalue
|   | |     `-DeclRefExpr 0x151142750 <col:3> 'int *' lvalue ParmVar 0x151128128 'pcert' 'int *'
|   | `-CallExpr 0x1511431c8 <col:22, col:38> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x151143128 <col:22> 'int ()' Function 0x151143070 'gnutls_malloc' 'int ()'
|   |   `-RecoveryExpr 0x1511431a8 <col:36> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x151143478 <line:21:3, line:25:5>
|   | |-BinaryOperator 0x151143318 <line:21:7, col:27> 'int' contains-errors '=='
|   | | |-CXXDependentScopeMemberExpr 0x151143278 <col:7, col:19> '<dependent type>' contains-errors lvalue .data
|   | | | `-CXXDependentScopeMemberExpr 0x151143230 <col:7, col:14> '<dependent type>' contains-errors lvalue ->cert
|   | | |   `-RecoveryExpr 0x151143210 <col:7> '<dependent type>' contains-errors lvalue
|   | | `-RecoveryExpr 0x1511432f8 <col:27> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x151143458 <line:22:5, line:25:5>
|   |   |-BinaryOperator 0x151143420 <line:23:7, col:52> 'int' contains-errors '='
|   |   | |-DeclRefExpr 0x151143338 <col:7> 'int' lvalue Var 0x1511283f0 'ret' 'int'
|   |   | `-CallExpr 0x1511433f8 <col:13, col:52> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x151143358 <col:13> 'int ()' Function 0x151142500 'gnutls_assert_val' 'int ()'
|   |   |   `-RecoveryExpr 0x1511433d8 <col:31> '<dependent type>' contains-errors lvalue
|   |   `-GotoStmt 0x151143440 <line:24:7, col:12> 'cleanup' 0x1511426a8
|   |-BinaryOperator 0x1511436e8 <line:27:3, col:82> 'int' contains-errors '='
|   | |-DeclRefExpr 0x151143498 <col:3> 'int' lvalue Var 0x1511283f0 'ret' 'int'
|   | `-CallExpr 0x1511436a8 <col:9, col:82> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x1511434b8 <col:9> 'int ()' Function 0x151142068 'gnutls_openpgp_crt_export' 'int ()'
|   |   |-RecoveryExpr 0x1511434d8 <col:35> '<dependent type>' contains-errors lvalue
|   |   |-RecoveryExpr 0x151143650 <col:40> '<dependent type>' contains-errors lvalue
|   |   |-CXXDependentScopeMemberExpr 0x151143578 <col:61, col:73> '<dependent type>' contains-errors lvalue .data
|   |   | `-CXXDependentScopeMemberExpr 0x151143530 <col:61, col:68> '<dependent type>' contains-errors lvalue ->cert
|   |   |   `-RecoveryExpr 0x151143510 <col:61> '<dependent type>' contains-errors lvalue
|   |   `-UnaryOperator 0x151143690 <col:79, col:80> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     `-RecoveryExpr 0x151143670 <col:80> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x151143890 <line:28:3, line:32:5>
|   | |-BinaryOperator 0x151143760 <line:28:7, col:13> 'int' '<'
|   | | |-ImplicitCastExpr 0x151143748 <col:7> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x151143708 <col:7> 'int' lvalue Var 0x1511283f0 'ret' 'int'
|   | | `-IntegerLiteral 0x151143728 <col:13> 'int' 0
|   | `-CompoundStmt 0x151143870 <line:29:5, line:32:5>
|   |   |-BinaryOperator 0x151143838 <line:30:7, col:34> 'int' '='
|   |   | |-DeclRefExpr 0x151143780 <col:7> 'int' lvalue Var 0x1511283f0 'ret' 'int'
|   |   | `-CallExpr 0x1511437f8 <col:13, col:34> 'int'
|   |   |   |-ImplicitCastExpr 0x1511437e0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x1511437a0 <col:13> 'int ()' Function 0x151142500 'gnutls_assert_val' 'int ()'
|   |   |   `-ImplicitCastExpr 0x151143820 <col:31> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1511437c0 <col:31> 'int' lvalue Var 0x1511283f0 'ret' 'int'
|   |   `-GotoStmt 0x151143858 <line:31:7, col:12> 'cleanup' 0x1511426a8
|   |-BinaryOperator 0x151143b50 <line:35:3, col:42> 'int' contains-errors '='
|   | |-DeclRefExpr 0x151143988 <col:3> 'int' lvalue Var 0x1511283f0 'ret' 'int'
|   | `-CallExpr 0x151143b28 <col:9, col:42> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x151143a88 <col:9> 'int ()' Function 0x1511439d0 'gnutls_pubkey_init' 'int ()'
|   |   `-UnaryOperator 0x151143b10 <col:28, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     `-CXXDependentScopeMemberExpr 0x151143ac8 <col:29, col:36> '<dependent type>' contains-errors lvalue ->pubkey
|   |       `-RecoveryExpr 0x151143aa8 <col:29> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x151143cf8 <line:36:3, line:40:5>
|   | |-BinaryOperator 0x151143bc8 <line:36:7, col:13> 'int' '<'
|   | | |-ImplicitCastExpr 0x151143bb0 <col:7> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x151143b70 <col:7> 'int' lvalue Var 0x1511283f0 'ret' 'int'
|   | | `-IntegerLiteral 0x151143b90 <col:13> 'int' 0
|   | `-CompoundStmt 0x151143cd8 <line:37:5, line:40:5>
|   |   |-BinaryOperator 0x151143ca0 <line:38:7, col:34> 'int' '='
|   |   | |-DeclRefExpr 0x151143be8 <col:7> 'int' lvalue Var 0x1511283f0 'ret' 'int'
|   |   | `-CallExpr 0x151143c60 <col:13, col:34> 'int'
|   |   |   |-ImplicitCastExpr 0x151143c48 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x151143c08 <col:13> 'int ()' Function 0x151142500 'gnutls_assert_val' 'int ()'
|   |   |   `-ImplicitCastExpr 0x151143c88 <col:31> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x151143c28 <col:31> 'int' lvalue Var 0x1511283f0 'ret' 'int'
|   |   `-GotoStmt 0x151143cc0 <line:39:7, col:12> 'cleanup' 0x1511426a8
|   |-BinaryOperator 0x151143f18 <line:42:3, col:59> 'int' contains-errors '='
|   | |-DeclRefExpr 0x151143d18 <col:3> 'int' lvalue Var 0x1511283f0 'ret' 'int'
|   | `-CallExpr 0x151143ee0 <col:9, col:59> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x151143e18 <col:9> 'int ()' Function 0x151143d60 'gnutls_pubkey_import_openpgp' 'int ()'
|   |   |-CXXDependentScopeMemberExpr 0x151143e58 <col:38, col:45> '<dependent type>' contains-errors lvalue ->pubkey
|   |   | `-RecoveryExpr 0x151143e38 <col:38> '<dependent type>' contains-errors lvalue
|   |   |-RecoveryExpr 0x151143ea0 <col:53> '<dependent type>' contains-errors lvalue
|   |   `-IntegerLiteral 0x151143ec0 <col:58> 'int' 0
|   |-IfStmt 0x151145a80 <line:43:3, line:48:5>
|   | |-BinaryOperator 0x151143f90 <line:43:7, col:13> 'int' '<'
|   | | |-ImplicitCastExpr 0x151143f78 <col:7> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x151143f38 <col:7> 'int' lvalue Var 0x1511283f0 'ret' 'int'
|   | | `-IntegerLiteral 0x151143f58 <col:13> 'int' 0
|   | `-CompoundStmt 0x151145a58 <line:44:5, line:48:5>
|   |   |-CallExpr 0x151145940 <line:45:7, col:41> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x1511458b8 <col:7> 'int ()' Function 0x151145800 'gnutls_pubkey_deinit' 'int ()'
|   |   | `-CXXDependentScopeMemberExpr 0x1511458f8 <col:28, col:35> '<dependent type>' contains-errors lvalue ->pubkey
|   |   |   `-RecoveryExpr 0x1511458d8 <col:28> '<dependent type>' contains-errors lvalue
|   |   |-BinaryOperator 0x151145a20 <line:46:7, col:34> 'int' '='
|   |   | |-DeclRefExpr 0x151145968 <col:7> 'int' lvalue Var 0x1511283f0 'ret' 'int'
|   |   | `-CallExpr 0x1511459e0 <col:13, col:34> 'int'
|   |   |   |-ImplicitCastExpr 0x1511459c8 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x151145988 <col:13> 'int ()' Function 0x151142500 'gnutls_assert_val' 'int ()'
|   |   |   `-ImplicitCastExpr 0x151145a08 <col:31> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1511459a8 <col:31> 'int' lvalue Var 0x1511283f0 'ret' 'int'
|   |   `-GotoStmt 0x151145a40 <line:47:7, col:12> 'cleanup' 0x1511426a8
|   |-ReturnStmt 0x151145ac0 <line:50:3, col:10>
|   | `-IntegerLiteral 0x151145aa0 <col:10> 'int' 0
|   |-LabelStmt 0x151145ca8 <line:52:1, line:53:31> 'cleanup'
|   | `-CallExpr 0x151145c80 <col:3, col:31> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x151145bb0 <col:3> 'int ()' Function 0x151145af8 'gnutls_free' 'int ()'
|   |   `-CXXDependentScopeMemberExpr 0x151145c38 <col:15, col:27> '<dependent type>' contains-errors lvalue .data
|   |     `-CXXDependentScopeMemberExpr 0x151145bf0 <col:15, col:22> '<dependent type>' contains-errors lvalue ->cert
|   |       `-RecoveryExpr 0x151145bd0 <col:15> '<dependent type>' contains-errors lvalue
|   `-ReturnStmt 0x151145d00 <line:55:3, col:10>
|     `-ImplicitCastExpr 0x151145ce8 <col:10> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x151145cc8 <col:10> 'int' lvalue Var 0x1511283f0 'ret' 'int'
`-FunctionDecl 0x1511419a0 <line:7:3> col:3 implicit used memset 'void *(void *, int, unsigned long)' extern
  |-ParmVarDecl 0x151141aa0 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x151141b08 <<invalid sloc>> <invalid sloc> 'int'
  |-ParmVarDecl 0x151141b70 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x151141a48 <<invalid sloc>> Implicit 900
