TranslationUnitDecl 0x156055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1560564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x156055bd0 '__int128'
|-TypedefDecl 0x156056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x156055bf0 'unsigned __int128'
|-TypedefDecl 0x15680be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15680bc00 'struct __NSConstantString_tag'
|   `-Record 0x156056580 '__NSConstantString_tag'
|-TypedefDecl 0x15680be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x156055d90 '__SVInt8_t'
|-TypedefDecl 0x15680bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x156055db0 '__SVInt16_t'
|-TypedefDecl 0x15680bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x156055dd0 '__SVInt32_t'
|-TypedefDecl 0x15680bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x156055df0 '__SVInt64_t'
|-TypedefDecl 0x15680c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x156055e10 '__SVUint8_t'
|-TypedefDecl 0x15680c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x156055e30 '__SVUint16_t'
|-TypedefDecl 0x15680c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x156055e50 '__SVUint32_t'
|-TypedefDecl 0x15680c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x156055e70 '__SVUint64_t'
|-TypedefDecl 0x15680c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x156055e90 '__SVFloat16_t'
|-TypedefDecl 0x15680c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x156055eb0 '__SVFloat32_t'
|-TypedefDecl 0x15680c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x156055ed0 '__SVFloat64_t'
|-TypedefDecl 0x15680c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x156055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15680c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x156055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15680c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x156055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15680c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x156055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15680c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x156055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15680c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x156055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15680c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x156055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15680c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x156055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15680c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x156055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15680c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x156056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15680c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x156056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15680c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x156056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15680c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x156056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15680c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x156056090 '__clang_svint8x3_t'
|-TypedefDecl 0x15680c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1560560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15680c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1560560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15680c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1560560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15680c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x156056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15680ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x156056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15680cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x156056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15680cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x156056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15680cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x156056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15680d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1560561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15680d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1560561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15680d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1560561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15680d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x156056210 '__clang_svint8x4_t'
|-TypedefDecl 0x15680d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x156056230 '__clang_svint16x4_t'
|-TypedefDecl 0x15680d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x156056250 '__clang_svint32x4_t'
|-TypedefDecl 0x15680d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x156056270 '__clang_svint64x4_t'
|-TypedefDecl 0x15680d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x156056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15680d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1560562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15680d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1560562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15680d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1560562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15680d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x156056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15680d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x156056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15680d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x156056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15680d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x156056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15680da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x156056390 '__SVBool_t'
|-TypedefDecl 0x15680da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1560563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15680dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1560563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15680db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1560563f0 '__SVCount_t'
|-TypedefDecl 0x15680dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15680dbb0 'char *'
|   `-BuiltinType 0x1560556b0 'char'
|-TypedefDecl 0x15680dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15680dbb0 'char *'
|   `-BuiltinType 0x1560556b0 'char'
|-FunctionDecl 0x156826600 <dataset_diviso_filec/func24288_vuln.c:1:1, line:42:1> line:1:21 referenced _db_tree_put 'unsigned int (struct db_arg_chain_tree **)' static
| |-ParmVarDecl 0x15680e2a8 <col:34, col:61> col:61 used tree 'struct db_arg_chain_tree **'
| `-CompoundStmt 0x156828fc8 <line:2:1, line:42:1>
|   |-DeclStmt 0x156826798 <line:3:2, col:13>
|   | `-VarDecl 0x156826710 <col:2, col:12> col:6 used cnt 'int' cinit
|   |   `-IntegerLiteral 0x156826778 <col:12> 'int' 0
|   |-DeclStmt 0x1568269e0 <line:4:2, col:46>
|   | |-VarDecl 0x156826838 <col:2, col:28> col:28 used node 'struct db_arg_chain_tree *'
|   | |-VarDecl 0x1568268c8 <col:2, col:35> col:35 used prev 'struct db_arg_chain_tree *'
|   | `-VarDecl 0x156826958 <col:2, col:42> col:42 used next 'struct db_arg_chain_tree *'
|   |-IfStmt 0x156826c28 <line:6:2, line:7:10>
|   | |-BinaryOperator 0x156826bc0 <line:6:6, col:31> 'int' contains-errors '||'
|   | | |-BinaryOperator 0x156826b30 <col:6, col:14> 'int' contains-errors '=='
|   | | | |-DeclRefExpr 0x1568269f8 <col:6> 'struct db_arg_chain_tree **' lvalue ParmVar 0x15680e2a8 'tree' 'struct db_arg_chain_tree **'
|   | | | `-RecoveryExpr 0x156826b10 <col:14> '<dependent type>' contains-errors lvalue
|   | | `-BinaryOperator 0x156826ba0 <col:22, col:31> 'int' contains-errors '=='
|   | |   |-UnaryOperator 0x156826b68 <col:22, col:23> 'struct db_arg_chain_tree *' lvalue prefix '*' cannot overflow
|   | |   | `-ImplicitCastExpr 0x156826b50 <col:23> 'struct db_arg_chain_tree **' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x156826a68 <col:23> 'struct db_arg_chain_tree **' lvalue ParmVar 0x15680e2a8 'tree' 'struct db_arg_chain_tree **'
|   | |   `-RecoveryExpr 0x156826b80 <col:31> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x156826c18 <line:7:3, col:10>
|   |   `-ImplicitCastExpr 0x156826c00 <col:10> 'unsigned int' <IntegralCast>
|   |     `-IntegerLiteral 0x156826be0 <col:10> 'int' 0
|   |-BinaryOperator 0x156826cd0 <line:8:2, col:10> 'struct db_arg_chain_tree *' '='
|   | |-DeclRefExpr 0x156826c48 <col:2> 'struct db_arg_chain_tree *' lvalue Var 0x156826838 'node' 'struct db_arg_chain_tree *'
|   | `-ImplicitCastExpr 0x156826cb8 <col:9, col:10> 'struct db_arg_chain_tree *' <LValueToRValue>
|   |   `-UnaryOperator 0x156826ca0 <col:9, col:10> 'struct db_arg_chain_tree *' lvalue prefix '*' cannot overflow
|   |     `-ImplicitCastExpr 0x156826c88 <col:10> 'struct db_arg_chain_tree **' <LValueToRValue>
|   |       `-DeclRefExpr 0x156826c68 <col:10> 'struct db_arg_chain_tree **' lvalue ParmVar 0x15680e2a8 'tree' 'struct db_arg_chain_tree **'
|   |-WhileStmt 0x156826e68 <line:10:2, line:11:16>
|   | |-BinaryOperator 0x156826da8 <line:10:9, col:26> 'int' contains-errors '!='
|   | | |-RecoveryExpr 0x156826d28 <col:9, col:15> '<dependent type>' contains-errors lvalue
|   | | | `-DeclRefExpr 0x156826cf0 <col:9> 'struct db_arg_chain_tree *' lvalue Var 0x156826838 'node' 'struct db_arg_chain_tree *'
|   | | `-RecoveryExpr 0x156826d88 <col:26> '<dependent type>' contains-errors lvalue
|   | `-BinaryOperator 0x156826e48 <line:11:3, col:16> 'struct db_arg_chain_tree *' contains-errors '='
|   |   |-DeclRefExpr 0x156826dc8 <col:3> 'struct db_arg_chain_tree *' lvalue Var 0x156826838 'node' 'struct db_arg_chain_tree *'
|   |   `-RecoveryExpr 0x156826e20 <col:10, col:16> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x156826de8 <col:10> 'struct db_arg_chain_tree *' lvalue Var 0x156826838 'node' 'struct db_arg_chain_tree *'
|   |-WhileStmt 0x156828f48 <line:13:2, line:39:2>
|   | |-BinaryOperator 0x156826f00 <line:13:9, col:17> 'int' contains-errors '!='
|   | | |-DeclRefExpr 0x156826e88 <col:9> 'struct db_arg_chain_tree *' lvalue Var 0x156826838 'node' 'struct db_arg_chain_tree *'
|   | | `-RecoveryExpr 0x156826ee0 <col:17> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x156828f08 <col:23, line:39:2>
|   |   |-BinaryOperator 0x156826fa0 <line:14:3, col:16> 'struct db_arg_chain_tree *' contains-errors '='
|   |   | |-DeclRefExpr 0x156826f20 <col:3> 'struct db_arg_chain_tree *' lvalue Var 0x1568268c8 'prev' 'struct db_arg_chain_tree *'
|   |   | `-RecoveryExpr 0x156826f78 <col:10, col:16> '<dependent type>' contains-errors lvalue
|   |   |   `-DeclRefExpr 0x156826f40 <col:10> 'struct db_arg_chain_tree *' lvalue Var 0x156826838 'node' 'struct db_arg_chain_tree *'
|   |   |-BinaryOperator 0x156827040 <line:15:3, col:16> 'struct db_arg_chain_tree *' contains-errors '='
|   |   | |-DeclRefExpr 0x156826fc0 <col:3> 'struct db_arg_chain_tree *' lvalue Var 0x156826958 'next' 'struct db_arg_chain_tree *'
|   |   | `-RecoveryExpr 0x156827018 <col:10, col:16> '<dependent type>' contains-errors lvalue
|   |   |   `-DeclRefExpr 0x156826fe0 <col:10> 'struct db_arg_chain_tree *' lvalue Var 0x156826838 'node' 'struct db_arg_chain_tree *'
|   |   |-CompoundAssignOperator 0x156827140 <line:17:3, col:35> 'int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |   | |-DeclRefExpr 0x156827060 <col:3> 'int' lvalue Var 0x156826710 'cnt' 'int'
|   |   | `-CallExpr 0x156827118 <col:10, col:35> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x156827080 <col:10> 'unsigned int (struct db_arg_chain_tree **)' Function 0x156826600 '_db_tree_put' 'unsigned int (struct db_arg_chain_tree **)'
|   |   |   `-UnaryOperator 0x156827100 <col:23, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   |     `-RecoveryExpr 0x1568270d8 <col:24, col:30> '<dependent type>' contains-errors lvalue
|   |   |       `-DeclRefExpr 0x1568270a0 <col:24> 'struct db_arg_chain_tree *' lvalue Var 0x156826838 'node' 'struct db_arg_chain_tree *'
|   |   |-CompoundAssignOperator 0x156827250 <line:18:3, col:35> 'int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
|   |   | |-DeclRefExpr 0x156827170 <col:3> 'int' lvalue Var 0x156826710 'cnt' 'int'
|   |   | `-CallExpr 0x156827228 <col:10, col:35> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x156827190 <col:10> 'unsigned int (struct db_arg_chain_tree **)' Function 0x156826600 '_db_tree_put' 'unsigned int (struct db_arg_chain_tree **)'
|   |   |   `-UnaryOperator 0x156827210 <col:23, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   |     `-RecoveryExpr 0x1568271e8 <col:24, col:30> '<dependent type>' contains-errors lvalue
|   |   |       `-DeclRefExpr 0x1568271b0 <col:24> 'struct db_arg_chain_tree *' lvalue Var 0x156826838 'node' 'struct db_arg_chain_tree *'
|   |   |-IfStmt 0x156828e70 <line:19:3, line:35:3>
|   |   | |-BinaryOperator 0x156827338 <line:19:7, col:27> 'int' contains-errors '=='
|   |   | | |-UnaryOperator 0x156827300 <col:7, col:22> '<dependent type>' contains-errors prefix '--' cannot overflow
|   |   | | | `-ParenExpr 0x1568272e0 <col:9, col:22> '<dependent type>' contains-errors lvalue
|   |   | | |   `-RecoveryExpr 0x1568272b8 <col:10, col:16> '<dependent type>' contains-errors lvalue
|   |   | | |     `-DeclRefExpr 0x156827280 <col:10> 'struct db_arg_chain_tree *' lvalue Var 0x156826838 'node' 'struct db_arg_chain_tree *'
|   |   | | `-IntegerLiteral 0x156827318 <col:27> 'int' 0
|   |   | `-CompoundStmt 0x156828e38 <col:30, line:35:3>
|   |   |   |-IfStmt 0x156827430 <line:21:4, line:22:21>
|   |   |   | |-ImplicitCastExpr 0x156827378 <line:21:8> 'struct db_arg_chain_tree *' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x156827358 <col:8> 'struct db_arg_chain_tree *' lvalue Var 0x1568268c8 'prev' 'struct db_arg_chain_tree *'
|   |   |   | `-BinaryOperator 0x156827410 <line:22:5, col:21> '<dependent type>' contains-errors '='
|   |   |   |   |-RecoveryExpr 0x1568273c8 <col:5, col:11> '<dependent type>' contains-errors lvalue
|   |   |   |   | `-DeclRefExpr 0x156827390 <col:5> 'struct db_arg_chain_tree *' lvalue Var 0x1568268c8 'prev' 'struct db_arg_chain_tree *'
|   |   |   |   `-DeclRefExpr 0x1568273f0 <col:21> 'struct db_arg_chain_tree *' lvalue Var 0x156826958 'next' 'struct db_arg_chain_tree *'
|   |   |   |-IfStmt 0x156827528 <line:23:4, line:24:21>
|   |   |   | |-ImplicitCastExpr 0x156827470 <line:23:8> 'struct db_arg_chain_tree *' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x156827450 <col:8> 'struct db_arg_chain_tree *' lvalue Var 0x156826958 'next' 'struct db_arg_chain_tree *'
|   |   |   | `-BinaryOperator 0x156827508 <line:24:5, col:21> '<dependent type>' contains-errors '='
|   |   |   |   |-RecoveryExpr 0x1568274c0 <col:5, col:11> '<dependent type>' contains-errors lvalue
|   |   |   |   | `-DeclRefExpr 0x156827488 <col:5> 'struct db_arg_chain_tree *' lvalue Var 0x156826958 'next' 'struct db_arg_chain_tree *'
|   |   |   |   `-DeclRefExpr 0x1568274e8 <col:21> 'struct db_arg_chain_tree *' lvalue Var 0x1568268c8 'prev' 'struct db_arg_chain_tree *'
|   |   |   |-IfStmt 0x156828b30 <line:27:4, line:30:13> has_else
|   |   |   | |-BinaryOperator 0x1568275c0 <line:27:8, col:16> 'int' contains-errors '!='
|   |   |   | | |-DeclRefExpr 0x156827548 <col:8> 'struct db_arg_chain_tree *' lvalue Var 0x1568268c8 'prev' 'struct db_arg_chain_tree *'
|   |   |   | | `-RecoveryExpr 0x1568275a0 <col:16> '<dependent type>' contains-errors lvalue
|   |   |   | |-BinaryOperator 0x156828a68 <line:28:5, col:13> 'struct db_arg_chain_tree *' '='
|   |   |   | | |-UnaryOperator 0x156828a18 <col:5, col:6> 'struct db_arg_chain_tree *' lvalue prefix '*' cannot overflow
|   |   |   | | | `-ImplicitCastExpr 0x156828a00 <col:6> 'struct db_arg_chain_tree **' <LValueToRValue>
|   |   |   | | |   `-DeclRefExpr 0x1568275e0 <col:6> 'struct db_arg_chain_tree **' lvalue ParmVar 0x15680e2a8 'tree' 'struct db_arg_chain_tree **'
|   |   |   | | `-ImplicitCastExpr 0x156828a50 <col:13> 'struct db_arg_chain_tree *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x156828a30 <col:13> 'struct db_arg_chain_tree *' lvalue Var 0x1568268c8 'prev' 'struct db_arg_chain_tree *'
|   |   |   | `-BinaryOperator 0x156828b10 <line:30:5, col:13> 'struct db_arg_chain_tree *' '='
|   |   |   |   |-UnaryOperator 0x156828ac0 <col:5, col:6> 'struct db_arg_chain_tree *' lvalue prefix '*' cannot overflow
|   |   |   |   | `-ImplicitCastExpr 0x156828aa8 <col:6> 'struct db_arg_chain_tree **' <LValueToRValue>
|   |   |   |   |   `-DeclRefExpr 0x156828a88 <col:6> 'struct db_arg_chain_tree **' lvalue ParmVar 0x15680e2a8 'tree' 'struct db_arg_chain_tree **'
|   |   |   |   `-ImplicitCastExpr 0x156828af8 <col:13> 'struct db_arg_chain_tree *' <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x156828ad8 <col:13> 'struct db_arg_chain_tree *' lvalue Var 0x156826958 'next' 'struct db_arg_chain_tree *'
|   |   |   |-CallExpr 0x156828da8 <line:33:4, col:13> 'void'
|   |   |   | |-ImplicitCastExpr 0x156828d90 <col:4> 'void (*)(void *)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x156828d08 <col:4> 'void (void *)' Function 0x156828b98 'free' 'void (void *)'
|   |   |   | `-ImplicitCastExpr 0x156828de8 <col:9> 'void *' <BitCast>
|   |   |   |   `-ImplicitCastExpr 0x156828dd0 <col:9> 'struct db_arg_chain_tree *' <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x156828d28 <col:9> 'struct db_arg_chain_tree *' lvalue Var 0x156826838 'node' 'struct db_arg_chain_tree *'
|   |   |   `-UnaryOperator 0x156828e20 <line:34:4, col:7> 'int' postfix '++'
|   |   |     `-DeclRefExpr 0x156828e00 <col:4> 'int' lvalue Var 0x156826710 'cnt' 'int'
|   |   `-BinaryOperator 0x156828ee8 <line:38:3, col:10> 'struct db_arg_chain_tree *' '='
|   |     |-DeclRefExpr 0x156828e90 <col:3> 'struct db_arg_chain_tree *' lvalue Var 0x156826838 'node' 'struct db_arg_chain_tree *'
|   |     `-ImplicitCastExpr 0x156828ed0 <col:10> 'struct db_arg_chain_tree *' <LValueToRValue>
|   |       `-DeclRefExpr 0x156828eb0 <col:10> 'struct db_arg_chain_tree *' lvalue Var 0x1568268c8 'prev' 'struct db_arg_chain_tree *'
|   `-ReturnStmt 0x156828fb8 <line:41:2, col:9>
|     `-ImplicitCastExpr 0x156828fa0 <col:9> 'unsigned int' <IntegralCast>
|       `-ImplicitCastExpr 0x156828f88 <col:9> 'int' <LValueToRValue>
|         `-DeclRefExpr 0x156828f68 <col:9> 'int' lvalue Var 0x156826710 'cnt' 'int'
`-FunctionDecl 0x156828b98 <line:33:4> col:4 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x156828c98 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x156828c40 <<invalid sloc>> Implicit 873
