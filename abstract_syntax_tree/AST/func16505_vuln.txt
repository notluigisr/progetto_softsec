TranslationUnitDecl 0x14e055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14e0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14e055bd0 '__int128'
|-TypedefDecl 0x14e056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14e055bf0 'unsigned __int128'
|-TypedefDecl 0x14e126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14e126000 'struct __NSConstantString_tag'
|   `-Record 0x14e056580 '__NSConstantString_tag'
|-TypedefDecl 0x14e126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14e055d90 '__SVInt8_t'
|-TypedefDecl 0x14e126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14e055db0 '__SVInt16_t'
|-TypedefDecl 0x14e126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14e055dd0 '__SVInt32_t'
|-TypedefDecl 0x14e1263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14e055df0 '__SVInt64_t'
|-TypedefDecl 0x14e126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14e055e10 '__SVUint8_t'
|-TypedefDecl 0x14e1264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14e055e30 '__SVUint16_t'
|-TypedefDecl 0x14e126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14e055e50 '__SVUint32_t'
|-TypedefDecl 0x14e126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14e055e70 '__SVUint64_t'
|-TypedefDecl 0x14e1265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14e055e90 '__SVFloat16_t'
|-TypedefDecl 0x14e126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14e055eb0 '__SVFloat32_t'
|-TypedefDecl 0x14e1266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14e055ed0 '__SVFloat64_t'
|-TypedefDecl 0x14e126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14e055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14e126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14e055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14e1267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14e055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14e126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14e055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14e1268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14e055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14e126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14e055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14e126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14e055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14e1269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14e055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14e126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14e055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14e126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14e056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14e126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14e056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14e126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14e056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14e126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14e056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14e126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14e056090 '__clang_svint8x3_t'
|-TypedefDecl 0x14e126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14e0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14e126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14e0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14e126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14e0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14e126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14e056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14e126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14e056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14e126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14e056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14e126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14e056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14e126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14e056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14e127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14e0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14e127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14e0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14e1278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14e0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14e127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14e056210 '__clang_svint8x4_t'
|-TypedefDecl 0x14e1279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14e056230 '__clang_svint16x4_t'
|-TypedefDecl 0x14e127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14e056250 '__clang_svint32x4_t'
|-TypedefDecl 0x14e127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14e056270 '__clang_svint64x4_t'
|-TypedefDecl 0x14e127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14e056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14e127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14e0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14e127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14e0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14e127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14e0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14e127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14e056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14e127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14e056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14e127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14e056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14e127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14e056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14e127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14e056390 '__SVBool_t'
|-TypedefDecl 0x14e127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14e0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14e127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14e0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14e127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14e0563f0 '__SVCount_t'
|-TypedefDecl 0x14e127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14e127fb0 'char *'
|   `-BuiltinType 0x14e0556b0 'char'
|-TypedefDecl 0x14e128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14e127fb0 'char *'
|   `-BuiltinType 0x14e0556b0 'char'
|-FunctionDecl 0x14e1282c8 <dataset_diviso_filec/func16505_vuln.c:1:1, line:36:1> line:1:1 LogFilePrep 'int (const char *, const char *, const char *)'
| |-ParmVarDecl 0x14e1280d8 <col:13, col:25> col:25 used fname 'const char *'
| |-ParmVarDecl 0x14e128158 <col:32, col:44> col:44 used backup 'const char *'
| |-ParmVarDecl 0x14e1281d8 <col:52, col:64> col:64 used idstring 'const char *'
| `-CompoundStmt 0x14e148c90 <line:2:1, line:36:1>
|   |-DeclStmt 0x14e1284a0 <line:3:5, col:29>
|   | `-VarDecl 0x14e1283e8 <col:5, col:25> col:11 used logFileName 'char *' cinit
|   |   `-RecoveryExpr 0x14e128480 <col:25> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x14e1419d8 <line:5:5, line:6:25>
|   | |-BinaryOperator 0x14e141800 <line:5:9, col:53> 'int' contains-errors '=='
|   | | |-CallExpr 0x14e128758 <col:9, col:47> 'int' contains-errors
|   | | | |-ImplicitCastExpr 0x14e128740 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x14e128638 <col:9> 'int ()' Function 0x14e128518 'asprintf' 'int ()'
|   | | | |-UnaryOperator 0x14e1286b0 <col:18, col:19> 'char **' contains-errors prefix '&' cannot overflow
|   | | | | `-DeclRefExpr 0x14e128658 <col:19> 'char *' contains-errors lvalue Var 0x14e1283e8 'logFileName' 'char *'
|   | | | |-ImplicitCastExpr 0x14e128790 <col:32> 'const char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x14e1286c8 <col:32> 'const char *' lvalue ParmVar 0x14e1280d8 'fname' 'const char *'
|   | | | `-ImplicitCastExpr 0x14e1287a8 <col:39> 'const char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x14e1286e8 <col:39> 'const char *' lvalue ParmVar 0x14e1281d8 'idstring' 'const char *'
|   | | `-UnaryOperator 0x14e1287e0 <col:52, col:53> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x14e1287c0 <col:53> 'int' 1
|   | `-CallExpr 0x14e141998 <line:6:9, col:25> 'int'
|   |   |-ImplicitCastExpr 0x14e141980 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x14e141900 <col:9> 'int ()' Function 0x14e141848 'FatalError' 'int ()'
|   |   `-ImplicitCastExpr 0x14e1419c0 <col:20> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x14e141960 <col:20> 'char[4]' lvalue "STR"
|   |-IfStmt 0x14e148c00 <line:8:5, line:33:5> has_else
|   | |-BinaryOperator 0x14e141ab0 <line:8:9, col:20> 'int' '&&'
|   | | |-ImplicitCastExpr 0x14e141a68 <col:9> 'const char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x14e1419f8 <col:9> 'const char *' lvalue ParmVar 0x14e128158 'backup' 'const char *'
|   | | `-ImplicitCastExpr 0x14e141a98 <col:19, col:20> 'int' <IntegralCast>
|   | |   `-ImplicitCastExpr 0x14e141a80 <col:19, col:20> 'char' <LValueToRValue>
|   | |     `-UnaryOperator 0x14e141a50 <col:19, col:20> 'const char' lvalue prefix '*' cannot overflow
|   | |       `-ImplicitCastExpr 0x14e141a38 <col:20> 'const char *' <LValueToRValue>
|   | |         `-DeclRefExpr 0x14e141a18 <col:20> 'const char *' lvalue ParmVar 0x14e128158 'backup' 'const char *'
|   | |-CompoundStmt 0x14e808a98 <col:28, line:27:5>
|   | | |-DeclStmt 0x14e142068 <line:9:9, col:24>
|   | | | |-RecordDecl 0x14e141ad0 <col:9, col:16> col:16 struct stat
|   | | | `-VarDecl 0x14e141bc8 <col:9, col:21> col:21 invalid buf 'struct stat'
|   | | `-IfStmt 0x14e808a78 <line:11:9, line:26:9>
|   | |   |-BinaryOperator 0x14e1423b0 <line:11:13, col:60> 'int' contains-errors '&&'
|   | |   | |-UnaryOperator 0x14e142208 <col:13, col:36> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | |   | | `-CallExpr 0x14e1421d8 <col:14, col:36> '<dependent type>' contains-errors
|   | |   | |   |-DeclRefExpr 0x14e142160 <col:14> 'int ()' Function 0x14e1420a8 'stat' 'int ()'
|   | |   | |   |-DeclRefExpr 0x14e142180 <col:19> 'char *' contains-errors lvalue Var 0x14e1283e8 'logFileName' 'char *'
|   | |   | |   `-UnaryOperator 0x14e1421c0 <col:32, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | |   | |     `-RecoveryExpr 0x14e1421a0 <col:33> '<dependent type>' contains-errors lvalue
|   | |   | `-CallExpr 0x14e142388 <col:41, col:60> '<dependent type>' contains-errors
|   | |   |   |-DeclRefExpr 0x14e142300 <col:41> 'int ()' Function 0x14e142248 'S_ISREG' 'int ()'
|   | |   |   `-CXXDependentScopeMemberExpr 0x14e142340 <col:49, col:53> '<dependent type>' contains-errors lvalue .st_mode
|   | |   |     `-RecoveryExpr 0x14e142320 <col:49> '<dependent type>' contains-errors lvalue
|   | |   `-CompoundStmt 0x14e808a38 <col:63, line:26:9>
|   | |     |-DeclStmt 0x14e142450 <line:12:13, col:25>
|   | |     | `-VarDecl 0x14e1423e8 <col:13, col:19> col:19 used suffix 'char *'
|   | |     |-DeclStmt 0x14e1424e8 <line:13:13, col:25>
|   | |     | `-VarDecl 0x14e142480 <col:13, col:19> col:19 used oldLog 'char *'
|   | |     |-IfStmt 0x14e808348 <line:15:13, line:18:13>
|   | |     | |-BinaryOperator 0x14e808278 <line:15:17, line:16:69> 'int' contains-errors '||'
|   | |     | | |-ParenExpr 0x14e142670 <line:15:17, col:59> 'int'
|   | |     | | | `-BinaryOperator 0x14e142650 <col:18, col:58> 'int' '=='
|   | |     | | |   |-CallExpr 0x14e1425b0 <col:18, col:52> 'int'
|   | |     | | |   | |-ImplicitCastExpr 0x14e142598 <col:18> 'int (*)()' <FunctionToPointerDecay>
|   | |     | | |   | | `-DeclRefExpr 0x14e142500 <col:18> 'int ()' Function 0x14e128518 'asprintf' 'int ()'
|   | |     | | |   | |-UnaryOperator 0x14e142540 <col:27, col:28> 'char **' prefix '&' cannot overflow
|   | |     | | |   | | `-DeclRefExpr 0x14e142520 <col:28> 'char *' lvalue Var 0x14e1423e8 'suffix' 'char *'
|   | |     | | |   | |-ImplicitCastExpr 0x14e1425e8 <col:36> 'const char *' <LValueToRValue>
|   | |     | | |   | | `-DeclRefExpr 0x14e142558 <col:36> 'const char *' lvalue ParmVar 0x14e128158 'backup' 'const char *'
|   | |     | | |   | `-ImplicitCastExpr 0x14e142600 <col:44> 'const char *' <LValueToRValue>
|   | |     | | |   |   `-DeclRefExpr 0x14e142578 <col:44> 'const char *' lvalue ParmVar 0x14e1281d8 'idstring' 'const char *'
|   | |     | | |   `-UnaryOperator 0x14e142638 <col:57, col:58> 'int' prefix '-'
|   | |     | | |     `-IntegerLiteral 0x14e142618 <col:58> 'int' 1
|   | |     | | `-ParenExpr 0x14e808258 <line:16:17, col:69> 'int' contains-errors
|   | |     | |   `-BinaryOperator 0x14e808238 <col:18, col:68> 'int' contains-errors '=='
|   | |     | |     |-CallExpr 0x14e142760 <col:18, col:62> 'int' contains-errors
|   | |     | |     | |-ImplicitCastExpr 0x14e142748 <col:18> 'int (*)()' <FunctionToPointerDecay>
|   | |     | |     | | `-DeclRefExpr 0x14e142690 <col:18> 'int ()' Function 0x14e128518 'asprintf' 'int ()'
|   | |     | |     | |-UnaryOperator 0x14e1426d0 <col:27, col:28> 'char **' prefix '&' cannot overflow
|   | |     | |     | | `-DeclRefExpr 0x14e1426b0 <col:28> 'char *' lvalue Var 0x14e142480 'oldLog' 'char *'
|   | |     | |     | |-ImplicitCastExpr 0x14e1427a0 <col:36> 'char *' <ArrayToPointerDecay>
|   | |     | |     | | `-StringLiteral 0x14e1426e8 <col:36> 'char[4]' lvalue "STR"
|   | |     | |     | |-ImplicitCastExpr 0x14e1427b8 <col:43> 'char *' contains-errors <LValueToRValue>
|   | |     | |     | | `-DeclRefExpr 0x14e142708 <col:43> 'char *' contains-errors lvalue Var 0x14e1283e8 'logFileName' 'char *'
|   | |     | |     | `-ImplicitCastExpr 0x14e1427d0 <col:56> 'char *' <LValueToRValue>
|   | |     | |     |   `-DeclRefExpr 0x14e142728 <col:56> 'char *' lvalue Var 0x14e1423e8 'suffix' 'char *'
|   | |     | |     `-UnaryOperator 0x14e808220 <col:67, col:68> 'int' prefix '-'
|   | |     | |       `-IntegerLiteral 0x14e808200 <col:68> 'int' 1
|   | |     | `-CompoundStmt 0x14e808330 <col:72, line:18:13>
|   | |     |   `-CallExpr 0x14e8082f0 <line:17:17, col:33> 'int'
|   | |     |     |-ImplicitCastExpr 0x14e8082d8 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   | |     |     | `-DeclRefExpr 0x14e808298 <col:17> 'int ()' Function 0x14e141848 'FatalError' 'int ()'
|   | |     |     `-ImplicitCastExpr 0x14e808318 <col:28> 'char *' <ArrayToPointerDecay>
|   | |     |       `-StringLiteral 0x14e8082b8 <col:28> 'char[4]' lvalue "STR"
|   | |     |-CallExpr 0x14e8085b8 <line:19:13, col:24> 'void'
|   | |     | |-ImplicitCastExpr 0x14e8085a0 <col:13> 'void (*)(void *)' <FunctionToPointerDecay>
|   | |     | | `-DeclRefExpr 0x14e808518 <col:13> 'void (void *)' Function 0x14e8083a8 'free' 'void (void *)'
|   | |     | `-ImplicitCastExpr 0x14e8085f8 <col:18> 'void *' <BitCast>
|   | |     |   `-ImplicitCastExpr 0x14e8085e0 <col:18> 'char *' <LValueToRValue>
|   | |     |     `-DeclRefExpr 0x14e808538 <col:18> 'char *' lvalue Var 0x14e1423e8 'suffix' 'char *'
|   | |     |-IfStmt 0x14e808950 <line:21:13, line:24:13>
|   | |     | |-BinaryOperator 0x14e808800 <line:21:17, col:49> 'int' contains-errors '=='
|   | |     | | |-CallExpr 0x14e808768 <col:17, col:43> 'int' contains-errors
|   | |     | | | |-ImplicitCastExpr 0x14e808750 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   | |     | | | | `-DeclRefExpr 0x14e8086f0 <col:17> 'int ()' Function 0x14e808638 'rename' 'int ()'
|   | |     | | | |-ImplicitCastExpr 0x14e808798 <col:24> 'char *' contains-errors <LValueToRValue>
|   | |     | | | | `-DeclRefExpr 0x14e808710 <col:24> 'char *' contains-errors lvalue Var 0x14e1283e8 'logFileName' 'char *'
|   | |     | | | `-ImplicitCastExpr 0x14e8087b0 <col:37> 'char *' <LValueToRValue>
|   | |     | | |   `-DeclRefExpr 0x14e808730 <col:37> 'char *' lvalue Var 0x14e142480 'oldLog' 'char *'
|   | |     | | `-UnaryOperator 0x14e8087e8 <col:48, col:49> 'int' prefix '-'
|   | |     | |   `-IntegerLiteral 0x14e8087c8 <col:49> 'int' 1
|   | |     | `-CompoundStmt 0x14e808938 <col:52, line:24:13>
|   | |     |   `-CallExpr 0x14e8088b8 <line:22:17, line:23:47> 'int' contains-errors
|   | |     |     |-ImplicitCastExpr 0x14e8088a0 <line:22:17> 'int (*)()' <FunctionToPointerDecay>
|   | |     |     | `-DeclRefExpr 0x14e808820 <col:17> 'int ()' Function 0x14e141848 'FatalError' 'int ()'
|   | |     |     |-ImplicitCastExpr 0x14e8088f0 <col:28> 'char *' <ArrayToPointerDecay>
|   | |     |     | `-StringLiteral 0x14e808840 <col:28> 'char[4]' lvalue "STR"
|   | |     |     |-ImplicitCastExpr 0x14e808908 <line:23:28> 'char *' contains-errors <LValueToRValue>
|   | |     |     | `-DeclRefExpr 0x14e808860 <col:28> 'char *' contains-errors lvalue Var 0x14e1283e8 'logFileName' 'char *'
|   | |     |     `-ImplicitCastExpr 0x14e808920 <col:41> 'char *' <LValueToRValue>
|   | |     |       `-DeclRefExpr 0x14e808880 <col:41> 'char *' lvalue Var 0x14e142480 'oldLog' 'char *'
|   | |     `-CallExpr 0x14e8089e0 <line:25:13, col:24> 'void'
|   | |       |-ImplicitCastExpr 0x14e8089c8 <col:13> 'void (*)(void *)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x14e808970 <col:13> 'void (void *)' Function 0x14e8083a8 'free' 'void (void *)'
|   | |       `-ImplicitCastExpr 0x14e808a20 <col:18> 'void *' <BitCast>
|   | |         `-ImplicitCastExpr 0x14e808a08 <col:18> 'char *' <LValueToRValue>
|   | |           `-DeclRefExpr 0x14e808990 <col:18> 'char *' lvalue Var 0x14e142480 'oldLog' 'char *'
|   | `-CompoundStmt 0x14e8091d8 <line:28:10, line:33:5>
|   |   `-IfStmt 0x14e8091b8 <line:29:9, line:32:9>
|   |     |-BinaryOperator 0x14e808e30 <line:29:13, col:50> 'int' contains-errors '&&'
|   |     | |-BinaryOperator 0x14e808db0 <col:13, col:36> 'int' contains-errors '!='
|   |     | | |-CallExpr 0x14e808d70 <col:13, col:31> 'int' contains-errors
|   |     | | | |-ImplicitCastExpr 0x14e808d58 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |     | | | | `-DeclRefExpr 0x14e808b98 <col:13> 'int ()' Function 0x14e808ae0 'remove' 'int ()'
|   |     | | | `-ImplicitCastExpr 0x14e808d98 <col:20> 'char *' contains-errors <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x14e808bb8 <col:20> 'char *' contains-errors lvalue Var 0x14e1283e8 'logFileName' 'char *'
|   |     | | `-IntegerLiteral 0x14e808c30 <col:36> 'int' 0
|   |     | `-BinaryOperator 0x14e808e10 <col:41, col:50> 'int' contains-errors '!='
|   |     |   |-RecoveryExpr 0x14e808dd0 <col:41> '<dependent type>' contains-errors lvalue
|   |     |   `-RecoveryExpr 0x14e808df0 <col:50> '<dependent type>' contains-errors lvalue
|   |     `-CompoundStmt 0x14e8091a0 <col:58, line:32:9>
|   |       `-CallExpr 0x14e809168 <line:30:13, line:31:52> '<dependent type>' contains-errors
|   |         |-DeclRefExpr 0x14e808e50 <line:30:13> 'int ()' Function 0x14e141848 'FatalError' 'int ()'
|   |         |-StringLiteral 0x14e808e70 <col:24> 'char[4]' lvalue "STR"
|   |         |-DeclRefExpr 0x14e808e90 <line:31:24> 'char *' contains-errors lvalue Var 0x14e1283e8 'logFileName' 'char *'
|   |         `-CallExpr 0x14e809140 <col:37, col:51> '<dependent type>' contains-errors
|   |           |-DeclRefExpr 0x14e809058 <col:37> 'char *(int)' Function 0x14e808ee8 'strerror' 'char *(int)'
|   |           `-RecoveryExpr 0x14e809108 <col:46> '<dependent type>' contains-errors lvalue
|   `-ReturnStmt 0x14e148c80 <line:35:5, col:12>
|     `-ImplicitCastExpr 0x14e148c68 <col:12> 'int' contains-errors <PointerToIntegral>
|       `-ImplicitCastExpr 0x14e148c50 <col:12> 'char *' contains-errors <LValueToRValue>
|         `-DeclRefExpr 0x14e148c30 <col:12> 'char *' contains-errors lvalue Var 0x14e1283e8 'logFileName' 'char *'
|-FunctionDecl 0x14e8083a8 <line:19:13> col:13 implicit used free 'void (void *)' extern
| |-ParmVarDecl 0x14e8084a8 <<invalid sloc>> <invalid sloc> 'void *'
| `-BuiltinAttr 0x14e808450 <<invalid sloc>> Implicit 873
`-FunctionDecl 0x14e808ee8 <line:31:37> col:37 implicit used strerror 'char *(int)' extern
  |-ParmVarDecl 0x14e808fe8 <<invalid sloc>> <invalid sloc> 'int'
  `-BuiltinAttr 0x14e808f90 <<invalid sloc>> Implicit 901
