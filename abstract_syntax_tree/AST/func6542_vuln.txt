TranslationUnitDecl 0x13e855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13e8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13e855bd0 '__int128'
|-TypedefDecl 0x13e856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13e855bf0 'unsigned __int128'
|-TypedefDecl 0x13f00be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13f00bc00 'struct __NSConstantString_tag'
|   `-Record 0x13e856580 '__NSConstantString_tag'
|-TypedefDecl 0x13f00be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13e855d90 '__SVInt8_t'
|-TypedefDecl 0x13f00bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13e855db0 '__SVInt16_t'
|-TypedefDecl 0x13f00bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13e855dd0 '__SVInt32_t'
|-TypedefDecl 0x13f00bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13e855df0 '__SVInt64_t'
|-TypedefDecl 0x13f00c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13e855e10 '__SVUint8_t'
|-TypedefDecl 0x13f00c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13e855e30 '__SVUint16_t'
|-TypedefDecl 0x13f00c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13e855e50 '__SVUint32_t'
|-TypedefDecl 0x13f00c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13e855e70 '__SVUint64_t'
|-TypedefDecl 0x13f00c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13e855e90 '__SVFloat16_t'
|-TypedefDecl 0x13f00c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13e855eb0 '__SVFloat32_t'
|-TypedefDecl 0x13f00c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13e855ed0 '__SVFloat64_t'
|-TypedefDecl 0x13f00c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13e855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13f00c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13e855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13f00c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13e855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13f00c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13e855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13f00c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13e855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13f00c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13e855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13f00c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13e855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13f00c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13e855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13f00c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13e855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13f00c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13e856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13f00c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13e856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13f00c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13e856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13f00c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13e856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13f00c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13e856090 '__clang_svint8x3_t'
|-TypedefDecl 0x13f00c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13e8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13f00c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13e8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13f00c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13e8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13f00c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13e856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13f00ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13e856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13f00cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13e856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13f00cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13e856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13f00cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13e856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13f00d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13e8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13f00d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13e8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13f00d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13e8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13f00d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13e856210 '__clang_svint8x4_t'
|-TypedefDecl 0x13f00d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13e856230 '__clang_svint16x4_t'
|-TypedefDecl 0x13f00d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13e856250 '__clang_svint32x4_t'
|-TypedefDecl 0x13f00d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13e856270 '__clang_svint64x4_t'
|-TypedefDecl 0x13f00d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13e856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13f00d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13e8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13f00d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13e8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13f00d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13e8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13f00d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13e856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13f00d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13e856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13f00d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13e856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13f00d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13e856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13f00da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13e856390 '__SVBool_t'
|-TypedefDecl 0x13f00da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13e8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13f00dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13e8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13f00db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13e8563f0 '__SVCount_t'
|-TypedefDecl 0x13f00dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13f00dbb0 'char *'
|   `-BuiltinType 0x13e8556b0 'char'
|-TypedefDecl 0x13f00dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13f00dbb0 'char *'
|   `-BuiltinType 0x13e8556b0 'char'
|-FunctionDecl 0x13f02a9e8 <dataset_diviso_filec/func6542_vuln.c:1:1, line:45:1> line:1:12 mount_entry_on_absolute_rootfs 'int (struct mntent *, const struct lxc_rootfs *, const char *)' static
| |-ParmVarDecl 0x13f00e248 <col:43, col:58> col:58 used mntent 'struct mntent *'
| |-ParmVarDecl 0x13f02a828 <line:2:8, col:33> col:33 used rootfs 'const struct lxc_rootfs *'
| |-ParmVarDecl 0x13f02a8a8 <line:3:8, col:20> col:20 used lxc_name 'const char *'
| `-CompoundStmt 0x13f02f0f8 <line:4:1, line:45:1>
|   |-DeclStmt 0x13f02ab70 <line:5:2, col:11>
|   | `-VarDecl 0x13f02ab08 <col:2, col:8> col:8 used aux 'char *'
|   |-DeclStmt 0x13f02ac30 <line:6:2, col:23>
|   | `-VarDecl 0x13f02abc8 <col:2, col:7> col:7 invalid path 'char'
|   |-DeclStmt 0x13f02ae08 <line:7:2, col:24>
|   | |-VarDecl 0x13f02ac60 <col:2, col:6> col:6 used r 'int'
|   | |-VarDecl 0x13f02ace0 <col:2, col:15> col:9 used ret 'int' cinit
|   | | `-IntegerLiteral 0x13f02ad48 <col:15> 'int' 0
|   | `-VarDecl 0x13f02ad80 <col:2, col:18> col:18 used offset 'int'
|   |-DeclStmt 0x13f02aea0 <line:8:2, col:21>
|   | `-VarDecl 0x13f02ae38 <col:2, col:14> col:14 used lxcpath 'const char *'
|   |-BinaryOperator 0x13f02b110 <line:10:2, col:41> 'const char *' '='
|   | |-DeclRefExpr 0x13f02aeb8 <col:2> 'const char *' lvalue Var 0x13f02ae38 'lxcpath' 'const char *'
|   | `-ImplicitCastExpr 0x13f02b0f8 <col:12, col:41> 'const char *' <IntegralToPointer>
|   |   `-CallExpr 0x13f02b0b8 <col:12, col:41> 'int'
|   |     |-ImplicitCastExpr 0x13f02b0a0 <col:12> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x13f02aff0 <col:12> 'int ()' Function 0x13f02af38 'lxc_global_config_value' 'int ()'
|   |     `-ImplicitCastExpr 0x13f02b0e0 <col:36> 'char *' <ArrayToPointerDecay>
|   |       `-StringLiteral 0x13f02b050 <col:36> 'char[4]' lvalue "STR"
|   |-IfStmt 0x13f02b360 <line:11:2, line:14:2>
|   | |-UnaryOperator 0x13f02b168 <line:11:6, col:7> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x13f02b150 <col:7> 'const char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x13f02b130 <col:7> 'const char *' lvalue Var 0x13f02ae38 'lxcpath' 'const char *'
|   | `-CompoundStmt 0x13f02b340 <col:16, line:14:2>
|   |   |-CallExpr 0x13f02b2b8 <line:12:3, col:14> 'int'
|   |   | |-ImplicitCastExpr 0x13f02b2a0 <col:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x13f02b260 <col:3> 'int ()' Function 0x13f02b1a8 'ERROR' 'int ()'
|   |   | `-ImplicitCastExpr 0x13f02b2e0 <col:9> 'char *' <ArrayToPointerDecay>
|   |   |   `-StringLiteral 0x13f02b280 <col:9> 'char[4]' lvalue "STR"
|   |   `-ReturnStmt 0x13f02b330 <line:13:3, col:11>
|   |     `-UnaryOperator 0x13f02b318 <col:10, col:11> 'int' prefix '-'
|   |       `-IntegerLiteral 0x13f02b2f8 <col:11> 'int' 1
|   |-BinaryOperator 0x13f02d090 <line:17:2, col:57> 'int' contains-errors '='
|   | |-DeclRefExpr 0x13f02b380 <col:2> 'int' lvalue Var 0x13f02ac60 'r' 'int'
|   | `-CallExpr 0x13f02d048 <col:6, col:57> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x13f02b678 <col:6> 'int (char *, unsigned long, const char *, ...)' Function 0x13f02b3f0 'snprintf' 'int (char *, unsigned long, const char *, ...)'
|   |   |-RecoveryExpr 0x13f02b698 <col:15> '<dependent type>' contains-errors lvalue
|   |   |-RecoveryExpr 0x13f02b7e0 <col:21> '<dependent type>' contains-errors lvalue
|   |   |-StringLiteral 0x13f02b6d0 <col:33> 'char[4]' lvalue "STR"
|   |   |-DeclRefExpr 0x13f02b6f0 <col:40> 'const char *' lvalue Var 0x13f02ae38 'lxcpath' 'const char *'
|   |   `-DeclRefExpr 0x13f02b710 <col:49> 'const char *' lvalue ParmVar 0x13f02a8a8 'lxc_name' 'const char *'
|   |-IfStmt 0x13f02d2d8 <line:18:2, line:19:8>
|   | |-BinaryOperator 0x13f02d250 <line:18:6, col:20> 'int' contains-errors '||'
|   | | |-BinaryOperator 0x13f02d1f0 <col:6, col:10> 'int' '<'
|   | | | |-ImplicitCastExpr 0x13f02d1d8 <col:6> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x13f02d0b0 <col:6> 'int' lvalue Var 0x13f02ac60 'r' 'int'
|   | | | `-IntegerLiteral 0x13f02d0d0 <col:10> 'int' 0
|   | | `-BinaryOperator 0x13f02d230 <col:15, col:20> 'int' contains-errors '>='
|   | |   |-DeclRefExpr 0x13f02d128 <col:15> 'int' lvalue Var 0x13f02ac60 'r' 'int'
|   | |   `-RecoveryExpr 0x13f02d210 <col:20> '<dependent type>' contains-errors lvalue
|   | `-GotoStmt 0x13f02d2c0 <line:19:3, col:8> 'skipvarlib' 0x13f02d270
|   |-BinaryOperator 0x13f02d640 <line:21:2, col:36> 'char *' contains-errors '='
|   | |-DeclRefExpr 0x13f02d2f8 <col:2> 'char *' lvalue Var 0x13f02ab08 'aux' 'char *'
|   | `-CallExpr 0x13f02d610 <col:8, col:36> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x13f02d540 <col:8> 'char *(const char *, const char *)' Function 0x13f02d360 'strstr' 'char *(const char *, const char *)'
|   |   |-RecoveryExpr 0x13f02d598 <col:15, col:23> '<dependent type>' contains-errors lvalue
|   |   | `-DeclRefExpr 0x13f02d560 <col:15> 'struct mntent *' lvalue ParmVar 0x13f00e248 'mntent' 'struct mntent *'
|   |   `-RecoveryExpr 0x13f02d5c0 <col:32> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x13f02d990 <line:22:2, line:25:2>
|   | |-ImplicitCastExpr 0x13f02d680 <line:22:6> 'char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x13f02d660 <col:6> 'char *' lvalue Var 0x13f02ab08 'aux' 'char *'
|   | `-CompoundStmt 0x13f02d970 <col:11, line:25:2>
|   |   |-BinaryOperator 0x13f02d8e8 <line:23:3, col:23> 'int' contains-errors '='
|   |   | |-DeclRefExpr 0x13f02d698 <col:3> 'int' lvalue Var 0x13f02ad80 'offset' 'int'
|   |   | `-CallExpr 0x13f02d8c0 <col:12, col:23> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x13f02d868 <col:12> 'unsigned long (const char *)' Function 0x13f02d6f8 'strlen' 'unsigned long (const char *)'
|   |   |   `-RecoveryExpr 0x13f02d888 <col:19> '<dependent type>' contains-errors lvalue
|   |   `-GotoStmt 0x13f02d958 <line:24:3, col:8> 'skipabs' 0x13f02d908
|   |-LabelStmt 0x13f02db30 <line:27:1, line:28:44> 'skipvarlib'
|   | `-BinaryOperator 0x13f02db10 <col:2, col:44> 'char *' contains-errors '='
|   |   |-DeclRefExpr 0x13f02d9b0 <col:2> 'char *' lvalue Var 0x13f02ab08 'aux' 'char *'
|   |   `-CallExpr 0x13f02dae0 <col:8, col:44> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x13f02d9d0 <col:8> 'char *(const char *, const char *)' Function 0x13f02d360 'strstr' 'char *(const char *, const char *)'
|   |     |-RecoveryExpr 0x13f02da28 <col:15, col:23> '<dependent type>' contains-errors lvalue
|   |     | `-DeclRefExpr 0x13f02d9f0 <col:15> 'struct mntent *' lvalue ParmVar 0x13f00e248 'mntent' 'struct mntent *'
|   |     `-RecoveryExpr 0x13f02da88 <col:32, col:40> '<dependent type>' contains-errors lvalue
|   |       `-DeclRefExpr 0x13f02da50 <col:32> 'const struct lxc_rootfs *' lvalue ParmVar 0x13f02a828 'rootfs' 'const struct lxc_rootfs *'
|   |-IfStmt 0x13f02ddb8 <line:29:2, line:32:2>
|   | |-UnaryOperator 0x13f02db88 <line:29:6, col:7> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x13f02db70 <col:7> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x13f02db50 <col:7> 'char *' lvalue Var 0x13f02ab08 'aux' 'char *'
|   | `-CompoundStmt 0x13f02dd98 <col:12, line:32:2>
|   |   |-CallExpr 0x13f02dd20 <line:30:3, col:30> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x13f02dc80 <col:3> 'int ()' Function 0x13f02dbc8 'WARN' 'int ()'
|   |   | |-StringLiteral 0x13f02dca0 <col:8> 'char[4]' lvalue "STR"
|   |   | `-RecoveryExpr 0x13f02dcf8 <col:15, col:23> '<dependent type>' contains-errors lvalue
|   |   |   `-DeclRefExpr 0x13f02dcc0 <col:15> 'struct mntent *' lvalue ParmVar 0x13f00e248 'mntent' 'struct mntent *'
|   |   `-ReturnStmt 0x13f02dd88 <line:31:3, col:10>
|   |     `-ImplicitCastExpr 0x13f02dd70 <col:10> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x13f02dd50 <col:10> 'int' lvalue Var 0x13f02ace0 'ret' 'int'
|   |-BinaryOperator 0x13f02deb8 <line:33:2, col:30> 'int' contains-errors '='
|   | |-DeclRefExpr 0x13f02ddd8 <col:2> 'int' lvalue Var 0x13f02ad80 'offset' 'int'
|   | `-CallExpr 0x13f02de90 <col:11, col:30> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x13f02ddf8 <col:11> 'unsigned long (const char *)' Function 0x13f02d6f8 'strlen' 'unsigned long (const char *)'
|   |   `-RecoveryExpr 0x13f02de50 <col:18, col:26> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x13f02de18 <col:18> 'const struct lxc_rootfs *' lvalue ParmVar 0x13f02a828 'rootfs' 'const struct lxc_rootfs *'
|   |-LabelStmt 0x13f02ec40 <line:35:1, line:38:16> 'skipabs'
|   | `-BinaryOperator 0x13f02ec20 <line:37:2, line:38:16> 'int' contains-errors '='
|   |   |-DeclRefExpr 0x13f02ded8 <line:37:2> 'int' lvalue Var 0x13f02ac60 'r' 'int'
|   |   `-CallExpr 0x13f02ebd8 <col:6, line:38:16> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x13f02def8 <line:37:6> 'int (char *, unsigned long, const char *, ...)' Function 0x13f02b3f0 'snprintf' 'int (char *, unsigned long, const char *, ...)'
|   |     |-RecoveryExpr 0x13f02df18 <col:15> '<dependent type>' contains-errors lvalue
|   |     |-RecoveryExpr 0x13f02eb20 <col:21> '<dependent type>' contains-errors lvalue
|   |     |-StringLiteral 0x13f02df50 <col:33> 'char[4]' lvalue "STR"
|   |     |-RecoveryExpr 0x13f02dfa8 <col:40, col:48> '<dependent type>' contains-errors lvalue
|   |     | `-DeclRefExpr 0x13f02df70 <col:40> 'const struct lxc_rootfs *' lvalue ParmVar 0x13f02a828 'rootfs' 'const struct lxc_rootfs *'
|   |     `-BinaryOperator 0x13f02eb70 <line:38:4, col:10> 'char *' '+'
|   |       |-ImplicitCastExpr 0x13f02eb40 <col:4> 'char *' <LValueToRValue>
|   |       | `-DeclRefExpr 0x13f02dfd0 <col:4> 'char *' lvalue Var 0x13f02ab08 'aux' 'char *'
|   |       `-ImplicitCastExpr 0x13f02eb58 <col:10> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x13f02ea00 <col:10> 'int' lvalue Var 0x13f02ad80 'offset' 'int'
|   |-IfStmt 0x13f02ef58 <line:39:2, line:42:2>
|   | |-BinaryOperator 0x13f02ee00 <line:39:6, col:20> 'int' contains-errors '||'
|   | | |-BinaryOperator 0x13f02eda0 <col:6, col:10> 'int' '<'
|   | | | |-ImplicitCastExpr 0x13f02ed88 <col:6> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x13f02ec60 <col:6> 'int' lvalue Var 0x13f02ac60 'r' 'int'
|   | | | `-IntegerLiteral 0x13f02ec80 <col:10> 'int' 0
|   | | `-BinaryOperator 0x13f02ede0 <col:15, col:20> 'int' contains-errors '>='
|   | |   |-DeclRefExpr 0x13f02ecd8 <col:15> 'int' lvalue Var 0x13f02ac60 'r' 'int'
|   | |   `-RecoveryExpr 0x13f02edc0 <col:20> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x13f02ef38 <col:32, line:42:2>
|   |   |-CallExpr 0x13f02eec0 <line:40:3, col:30> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x13f02ee20 <col:3> 'int ()' Function 0x13f02dbc8 'WARN' 'int ()'
|   |   | |-StringLiteral 0x13f02ee40 <col:8> 'char[4]' lvalue "STR"
|   |   | `-RecoveryExpr 0x13f02ee98 <col:15, col:23> '<dependent type>' contains-errors lvalue
|   |   |   `-DeclRefExpr 0x13f02ee60 <col:15> 'struct mntent *' lvalue ParmVar 0x13f00e248 'mntent' 'struct mntent *'
|   |   `-ReturnStmt 0x13f02ef28 <line:41:3, col:11>
|   |     `-UnaryOperator 0x13f02ef10 <col:10, col:11> 'int' prefix '-'
|   |       `-IntegerLiteral 0x13f02eef0 <col:11> 'int' 1
|   `-ReturnStmt 0x13f02f0e8 <line:44:2, col:44>
|     `-CallExpr 0x13f02f0b8 <col:9, col:44> '<dependent type>' contains-errors
|       |-DeclRefExpr 0x13f02f058 <col:9> 'int ()' Function 0x13f02efa0 'mount_entry_on_generic' 'int ()'
|       |-DeclRefExpr 0x13f02f078 <col:32> 'struct mntent *' lvalue ParmVar 0x13f00e248 'mntent' 'struct mntent *'
|       `-RecoveryExpr 0x13f02f098 <col:40> '<dependent type>' contains-errors lvalue
|-FunctionDecl 0x13f02b3f0 <line:17:6> col:6 implicit used snprintf 'int (char *, unsigned long, const char *, ...)' extern
| |-ParmVarDecl 0x13f02b4f0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x13f02b558 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0x13f02b5c0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-BuiltinAttr 0x13f02b498 <<invalid sloc>> Implicit 905
| `-FormatAttr 0x13f02b640 <col:6> Implicit printf 3 4
|-FunctionDecl 0x13f02d360 <line:21:8> col:8 implicit used strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x13f02d460 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x13f02d4c8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x13f02d408 <<invalid sloc>> Implicit 898
`-FunctionDecl 0x13f02d6f8 <line:23:12> col:12 implicit used strlen 'unsigned long (const char *)' extern
  |-ParmVarDecl 0x13f02d7f8 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x13f02d7a0 <<invalid sloc>> Implicit 902
