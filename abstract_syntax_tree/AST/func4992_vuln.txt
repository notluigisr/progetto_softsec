TranslationUnitDecl 0x151855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1518564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x151855bd0 '__int128'
|-TypedefDecl 0x151856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x151855bf0 'unsigned __int128'
|-TypedefDecl 0x15200be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15200bc00 'struct __NSConstantString_tag'
|   `-Record 0x151856580 '__NSConstantString_tag'
|-TypedefDecl 0x15200be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x151855d90 '__SVInt8_t'
|-TypedefDecl 0x15200bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x151855db0 '__SVInt16_t'
|-TypedefDecl 0x15200bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x151855dd0 '__SVInt32_t'
|-TypedefDecl 0x15200bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x151855df0 '__SVInt64_t'
|-TypedefDecl 0x15200c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x151855e10 '__SVUint8_t'
|-TypedefDecl 0x15200c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x151855e30 '__SVUint16_t'
|-TypedefDecl 0x15200c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x151855e50 '__SVUint32_t'
|-TypedefDecl 0x15200c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x151855e70 '__SVUint64_t'
|-TypedefDecl 0x15200c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x151855e90 '__SVFloat16_t'
|-TypedefDecl 0x15200c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x151855eb0 '__SVFloat32_t'
|-TypedefDecl 0x15200c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x151855ed0 '__SVFloat64_t'
|-TypedefDecl 0x15200c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x151855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15200c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x151855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15200c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x151855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15200c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x151855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15200c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x151855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15200c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x151855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15200c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x151855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15200c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x151855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15200c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x151855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15200c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x151856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15200c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x151856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15200c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x151856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15200c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x151856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15200c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x151856090 '__clang_svint8x3_t'
|-TypedefDecl 0x15200c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1518560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15200c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1518560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15200c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1518560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15200c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x151856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15200ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x151856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15200cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x151856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15200cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x151856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15200cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x151856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15200d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1518561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15200d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1518561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15200d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1518561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15200d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x151856210 '__clang_svint8x4_t'
|-TypedefDecl 0x15200d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x151856230 '__clang_svint16x4_t'
|-TypedefDecl 0x15200d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x151856250 '__clang_svint32x4_t'
|-TypedefDecl 0x15200d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x151856270 '__clang_svint64x4_t'
|-TypedefDecl 0x15200d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x151856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15200d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1518562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15200d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1518562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15200d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1518562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15200d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x151856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15200d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x151856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15200d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x151856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15200d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x151856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15200da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x151856390 '__SVBool_t'
|-TypedefDecl 0x15200da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1518563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15200dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1518563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15200db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1518563f0 '__SVCount_t'
|-TypedefDecl 0x15200dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15200dbb0 'char *'
|   `-BuiltinType 0x1518556b0 'char'
|-TypedefDecl 0x15200dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15200dbb0 'char *'
|   `-BuiltinType 0x1518556b0 'char'
|-FunctionDecl 0x15200dda8 <dataset_diviso_filec/func4992_vuln.c:1:1, line:31:1> line:1:14 sanitize_cookie_path 'char *(const char *)' static
| |-ParmVarDecl 0x15200dcd8 <col:35, col:47> col:47 used cookie_path 'const char *'
| `-CompoundStmt 0x15202adf8 <line:2:1, line:31:1>
|   |-UnaryExprOrTypeTraitExpr 0x15200df10 <line:3:3, col:10> 'unsigned long' contains-errors sizeof
|   | `-RecoveryExpr 0x15200def0 <col:10> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x152027058 <line:4:3, col:39>
|   | `-VarDecl 0x15200df48 <col:3, col:38> col:9 used new_path 'char *' cinit
|   |   `-CallExpr 0x152027018 <col:20, col:38> 'char *'
|   |     |-ImplicitCastExpr 0x152027000 <col:20> 'char *(*)(const char *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x152026f70 <col:20> 'char *(const char *)' Function 0x152026e00 'strdup' 'char *(const char *)'
|   |     `-ImplicitCastExpr 0x152027040 <col:27> 'const char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x152026f90 <col:27> 'const char *' lvalue ParmVar 0x15200dcd8 'cookie_path' 'const char *'
|   |-IfStmt 0x152027108 <line:5:3, line:6:12>
|   | |-UnaryOperator 0x1520270a8 <line:5:6, col:7> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x152027090 <col:7> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x152027070 <col:7> 'char *' lvalue Var 0x15200df48 'new_path' 'char *'
|   | `-ReturnStmt 0x1520270f8 <line:6:5, col:12>
|   |   `-RecoveryExpr 0x1520270d8 <col:12> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x1520279a8 <line:9:3, line:11:3>
|   | |-BinaryOperator 0x1520271e8 <line:9:6, col:21> 'int' '=='
|   | | |-ImplicitCastExpr 0x1520271d0 <col:6, col:16> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x1520271b8 <col:6, col:16> 'char' <LValueToRValue>
|   | | |   `-ArraySubscriptExpr 0x152027180 <col:6, col:16> 'char' lvalue
|   | | |     |-ImplicitCastExpr 0x152027168 <col:6> 'char *' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x152027128 <col:6> 'char *' lvalue Var 0x15200df48 'new_path' 'char *'
|   | | |     `-IntegerLiteral 0x152027148 <col:15> 'int' 0
|   | | `-CharacterLiteral 0x1520271a0 <col:21> 'int' 34
|   | `-CompoundStmt 0x152027990 <col:27, line:11:3>
|   |   `-CallExpr 0x152027958 <line:10:5, col:77> 'void *'
|   |     |-ImplicitCastExpr 0x152027940 <col:5> 'void *(*)(void *, const void *, unsigned long)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1520274d8 <col:5> 'void *(void *, const void *, unsigned long)' Function 0x152027288 'memmove' 'void *(void *, const void *, unsigned long)'
|   |     |-CStyleCastExpr 0x152027548 <col:13, col:21> 'void *' <BitCast>
|   |     | `-ImplicitCastExpr 0x152027530 <col:21> 'char *' <LValueToRValue> part_of_explicit_cast
|   |     |   `-DeclRefExpr 0x1520274f8 <col:21> 'char *' lvalue Var 0x15200df48 'new_path' 'char *'
|   |     |-CStyleCastExpr 0x152027640 <col:31, col:58> 'const void *' <BitCast>
|   |     | `-ParenExpr 0x152027620 <col:45, col:58> 'char *'
|   |     |   `-BinaryOperator 0x1520275c8 <col:46, col:57> 'char *' '+'
|   |     |     |-ImplicitCastExpr 0x1520275b0 <col:46> 'char *' <LValueToRValue>
|   |     |     | `-DeclRefExpr 0x152027570 <col:46> 'char *' lvalue Var 0x15200df48 'new_path' 'char *'
|   |     |     `-IntegerLiteral 0x152027590 <col:57> 'int' 1
|   |     `-CallExpr 0x1520278b8 <col:61, col:76> 'unsigned long'
|   |       |-ImplicitCastExpr 0x1520278a0 <col:61> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x152027818 <col:61> 'unsigned long (const char *)' Function 0x1520276a8 'strlen' 'unsigned long (const char *)'
|   |       `-ImplicitCastExpr 0x1520278f8 <col:68> 'const char *' <NoOp>
|   |         `-ImplicitCastExpr 0x1520278e0 <col:68> 'char *' <LValueToRValue>
|   |           `-DeclRefExpr 0x152027838 <col:68> 'char *' lvalue Var 0x15200df48 'new_path' 'char *'
|   |-IfStmt 0x152027d90 <line:12:3, line:14:3>
|   | |-BinaryOperator 0x152027b88 <line:12:6, col:40> 'int' '=='
|   | | |-ImplicitCastExpr 0x152027b70 <col:6, col:35> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x152027b58 <col:6, col:35> 'char' <LValueToRValue>
|   | | |   `-ArraySubscriptExpr 0x152027b20 <col:6, col:35> 'char' lvalue
|   | | |     |-ImplicitCastExpr 0x152027b08 <col:6> 'char *' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x1520279c8 <col:6> 'char *' lvalue Var 0x15200df48 'new_path' 'char *'
|   | | |     `-BinaryOperator 0x152027ae8 <col:15, col:34> 'unsigned long' '-'
|   | | |       |-CallExpr 0x152027a58 <col:15, col:30> 'unsigned long'
|   | | |       | |-ImplicitCastExpr 0x152027a40 <col:15> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   | | |       | | `-DeclRefExpr 0x1520279e8 <col:15> 'unsigned long (const char *)' Function 0x1520276a8 'strlen' 'unsigned long (const char *)'
|   | | |       | `-ImplicitCastExpr 0x152027a98 <col:22> 'const char *' <NoOp>
|   | | |       |   `-ImplicitCastExpr 0x152027a80 <col:22> 'char *' <LValueToRValue>
|   | | |       |     `-DeclRefExpr 0x152027a08 <col:22> 'char *' lvalue Var 0x15200df48 'new_path' 'char *'
|   | | |       `-ImplicitCastExpr 0x152027ad0 <col:34> 'unsigned long' <IntegralCast>
|   | | |         `-IntegerLiteral 0x152027ab0 <col:34> 'int' 1
|   | | `-CharacterLiteral 0x152027b40 <col:40> 'int' 34
|   | `-CompoundStmt 0x152027d78 <col:46, line:14:3>
|   |   `-BinaryOperator 0x152027d58 <line:13:5, col:38> 'char' '='
|   |     |-ArraySubscriptExpr 0x152027d00 <col:5, col:34> 'char' lvalue
|   |     | |-ImplicitCastExpr 0x152027ce8 <col:5> 'char *' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x152027ba8 <col:5> 'char *' lvalue Var 0x15200df48 'new_path' 'char *'
|   |     | `-BinaryOperator 0x152027cc8 <col:14, col:33> 'unsigned long' '-'
|   |     |   |-CallExpr 0x152027c38 <col:14, col:29> 'unsigned long'
|   |     |   | |-ImplicitCastExpr 0x152027c20 <col:14> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |     |   | | `-DeclRefExpr 0x152027bc8 <col:14> 'unsigned long (const char *)' Function 0x1520276a8 'strlen' 'unsigned long (const char *)'
|   |     |   | `-ImplicitCastExpr 0x152027c78 <col:21> 'const char *' <NoOp>
|   |     |   |   `-ImplicitCastExpr 0x152027c60 <col:21> 'char *' <LValueToRValue>
|   |     |   |     `-DeclRefExpr 0x152027be8 <col:21> 'char *' lvalue Var 0x15200df48 'new_path' 'char *'
|   |     |   `-ImplicitCastExpr 0x152027cb0 <col:33> 'unsigned long' <IntegralCast>
|   |     |     `-IntegerLiteral 0x152027c90 <col:33> 'int' 1
|   |     `-ImplicitCastExpr 0x152027d40 <col:38> 'char' <IntegralCast>
|   |       `-IntegerLiteral 0x152027d20 <col:38> 'int' 0
|   |-IfStmt 0x15202aaf8 <line:17:3, line:22:3>
|   | |-BinaryOperator 0x15202a680 <line:17:6, col:21> 'int' '!='
|   | | |-ImplicitCastExpr 0x15202a668 <col:6, col:16> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x15202a650 <col:6, col:16> 'char' <LValueToRValue>
|   | | |   `-ArraySubscriptExpr 0x15202a618 <col:6, col:16> 'char' lvalue
|   | | |     |-ImplicitCastExpr 0x15202a600 <col:6> 'char *' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x152027db0 <col:6> 'char *' lvalue Var 0x15200df48 'new_path' 'char *'
|   | | |     `-IntegerLiteral 0x152027dd0 <col:15> 'int' 0
|   | | `-CharacterLiteral 0x15202a638 <col:21> 'int' 47
|   | `-CompoundStmt 0x15202aad0 <col:26, line:22:3>
|   |   |-CallExpr 0x15202a8e8 <line:19:5, col:18> 'void'
|   |   | |-ImplicitCastExpr 0x15202a8d0 <col:5> 'void (*)(void *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x15202a848 <col:5> 'void (void *)' Function 0x15202a6d8 'free' 'void (void *)'
|   |   | `-ImplicitCastExpr 0x15202a928 <col:10> 'void *' <BitCast>
|   |   |   `-ImplicitCastExpr 0x15202a910 <col:10> 'char *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x15202a868 <col:10> 'char *' lvalue Var 0x15200df48 'new_path' 'char *'
|   |   |-BinaryOperator 0x15202aa68 <line:20:5, col:28> 'char *' '='
|   |   | |-DeclRefExpr 0x15202a940 <col:5> 'char *' lvalue Var 0x15200df48 'new_path' 'char *'
|   |   | `-CallExpr 0x15202aa10 <col:16, col:28> 'char *'
|   |   |   |-ImplicitCastExpr 0x15202a9f8 <col:16> 'char *(*)(const char *)' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x15202a960 <col:16> 'char *(const char *)' Function 0x152026e00 'strdup' 'char *(const char *)'
|   |   |   `-ImplicitCastExpr 0x15202aa50 <col:23> 'const char *' <NoOp>
|   |   |     `-ImplicitCastExpr 0x15202aa38 <col:23> 'char *' <ArrayToPointerDecay>
|   |   |       `-StringLiteral 0x15202a9c0 <col:23> 'char[4]' lvalue "STR"
|   |   `-ReturnStmt 0x15202aac0 <line:21:5, col:12>
|   |     `-ImplicitCastExpr 0x15202aaa8 <col:12> 'char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x15202aa88 <col:12> 'char *' lvalue Var 0x15200df48 'new_path' 'char *'
|   |-IfStmt 0x15202ad90 <line:26:3, line:28:3>
|   | |-RecoveryExpr 0x15202acc8 <line:26:6, col:38> '_Bool' contains-errors
|   | `-CompoundStmt 0x15202ad80 <col:43, line:28:3>
|   `-ReturnStmt 0x15202ade8 <line:30:3, col:10>
|     `-ImplicitCastExpr 0x15202add0 <col:10> 'char *' <LValueToRValue>
|       `-DeclRefExpr 0x15202adb0 <col:10> 'char *' lvalue Var 0x15200df48 'new_path' 'char *'
|-FunctionDecl 0x152026e00 <line:4:20> col:20 implicit used strdup 'char *(const char *)' extern
| |-ParmVarDecl 0x152026f00 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x152026ea8 <<invalid sloc>> Implicit 950
|-FunctionDecl 0x152027288 <line:10:5> col:5 implicit used memmove 'void *(void *, const void *, unsigned long)' extern
| |-ParmVarDecl 0x152027388 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1520273f0 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x152027458 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x152027330 <<invalid sloc>> Implicit 884
|-FunctionDecl 0x1520276a8 <col:61> col:61 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x1520277a8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x152027750 <<invalid sloc>> Implicit 902
`-FunctionDecl 0x15202a6d8 <line:19:5> col:5 implicit used free 'void (void *)' extern
  |-ParmVarDecl 0x15202a7d8 <<invalid sloc>> <invalid sloc> 'void *'
  `-BuiltinAttr 0x15202a780 <<invalid sloc>> Implicit 873
