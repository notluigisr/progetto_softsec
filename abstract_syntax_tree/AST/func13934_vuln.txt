TranslationUnitDecl 0x156055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1560564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x156055bd0 '__int128'
|-TypedefDecl 0x156056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x156055bf0 'unsigned __int128'
|-TypedefDecl 0x15680be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15680bc00 'struct __NSConstantString_tag'
|   `-Record 0x156056580 '__NSConstantString_tag'
|-TypedefDecl 0x15680be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x156055d90 '__SVInt8_t'
|-TypedefDecl 0x15680bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x156055db0 '__SVInt16_t'
|-TypedefDecl 0x15680bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x156055dd0 '__SVInt32_t'
|-TypedefDecl 0x15680bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x156055df0 '__SVInt64_t'
|-TypedefDecl 0x15680c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x156055e10 '__SVUint8_t'
|-TypedefDecl 0x15680c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x156055e30 '__SVUint16_t'
|-TypedefDecl 0x15680c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x156055e50 '__SVUint32_t'
|-TypedefDecl 0x15680c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x156055e70 '__SVUint64_t'
|-TypedefDecl 0x15680c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x156055e90 '__SVFloat16_t'
|-TypedefDecl 0x15680c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x156055eb0 '__SVFloat32_t'
|-TypedefDecl 0x15680c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x156055ed0 '__SVFloat64_t'
|-TypedefDecl 0x15680c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x156055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15680c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x156055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15680c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x156055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15680c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x156055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15680c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x156055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15680c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x156055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15680c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x156055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15680c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x156055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15680c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x156055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15680c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x156056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15680c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x156056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15680c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x156056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15680c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x156056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15680c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x156056090 '__clang_svint8x3_t'
|-TypedefDecl 0x15680c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1560560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15680c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1560560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15680c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1560560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15680c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x156056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15680ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x156056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15680cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x156056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15680cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x156056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15680cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x156056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15680d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1560561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15680d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1560561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15680d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1560561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15680d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x156056210 '__clang_svint8x4_t'
|-TypedefDecl 0x15680d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x156056230 '__clang_svint16x4_t'
|-TypedefDecl 0x15680d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x156056250 '__clang_svint32x4_t'
|-TypedefDecl 0x15680d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x156056270 '__clang_svint64x4_t'
|-TypedefDecl 0x15680d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x156056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15680d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1560562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15680d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1560562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15680d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1560562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15680d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x156056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15680d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x156056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15680d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x156056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15680d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x156056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15680da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x156056390 '__SVBool_t'
|-TypedefDecl 0x15680da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1560563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15680dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1560563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15680db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1560563f0 '__SVCount_t'
|-TypedefDecl 0x15680dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15680dbb0 'char *'
|   `-BuiltinType 0x1560556b0 'char'
|-TypedefDecl 0x15680dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15680dbb0 'char *'
|   `-BuiltinType 0x1560556b0 'char'
`-FunctionDecl 0x15680dda8 <dataset_diviso_filec/func13934_vuln.c:1:1, line:52:1> line:1:1 PS_SERIALIZER_DECODE_FUNC 'int (int)'
  |-ParmVarDecl 0x15680dcd8 <col:27> col:27 php_binary 'int'
  `-CompoundStmt 0x156124c00 <line:2:1, line:52:1>
    |-DeclStmt 0x15680df20 <line:3:2, col:15>
    | `-VarDecl 0x15680deb8 <col:2, col:14> col:14 used p 'const char *'
    |-DeclStmt 0x15680dfb8 <line:4:2, col:12>
    | `-VarDecl 0x15680df50 <col:2, col:8> col:8 used name 'char *'
    |-DeclStmt 0x15680e118 <line:5:2, col:35>
    | `-VarDecl 0x15680dfe8 <col:2, col:29> col:14 used endptr 'const char *' cinit
    |   `-BinaryOperator 0x15680e0f8 <col:23, col:29> '<dependent type>' contains-errors '+'
    |     |-RecoveryExpr 0x15680e0b8 <col:23> '<dependent type>' contains-errors lvalue
    |     `-RecoveryExpr 0x15680e0d8 <col:29> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x15680e1c8 <line:7:2, col:13>
    | `-VarDecl 0x15680e160 <col:2, col:6> col:6 used namelen 'int'
    |-DeclStmt 0x15680e260 <line:8:2, col:15>
    | `-VarDecl 0x15680e1f8 <col:2, col:6> col:6 used has_value 'int'
    |-CallExpr 0x156827820 <line:11:2, col:35> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x15680e390 <col:2> 'int ()' Function 0x15680e2d8 'PHP_VAR_UNSERIALIZE_INIT' 'int ()'
    | `-RecoveryExpr 0x156827800 <col:27> '<dependent type>' contains-errors lvalue
    `-ForStmt 0x156124b88 <line:13:2, line:47:2>
      |-<<<NULL>>>
      |-<<<NULL>>>
      |-BinaryOperator 0x156827910 <line:13:16, col:20> 'int' contains-errors '<'
      | |-ImplicitCastExpr 0x1568278e0 <col:16> 'const char *' <LValueToRValue>
      | | `-DeclRefExpr 0x1568278a0 <col:16> 'const char *' lvalue Var 0x15680deb8 'p' 'const char *'
      | `-ImplicitCastExpr 0x1568278f8 <col:20> 'const char *' contains-errors <LValueToRValue>
      |   `-DeclRefExpr 0x1568278c0 <col:20> 'const char *' contains-errors lvalue Var 0x15680dfe8 'endptr' 'const char *'
      |-<<<NULL>>>
      `-CompoundStmt 0x156124b38 <col:30, line:47:2>
        |-IfStmt 0x156828088 <line:17:3, line:20:3>
        | |-BinaryOperator 0x156827e78 <line:17:7, col:63> 'int' contains-errors '||'
        | | |-BinaryOperator 0x156827db0 <col:7, col:32> 'int' contains-errors '||'
        | | | |-BinaryOperator 0x156827d50 <col:7, col:17> 'int' '<'
        | | | | |-ImplicitCastExpr 0x156827d38 <col:7> 'int' <LValueToRValue>
        | | | | | `-DeclRefExpr 0x156827ae8 <col:7> 'int' lvalue Var 0x15680e160 'namelen' 'int'
        | | | | `-IntegerLiteral 0x156827b08 <col:17> 'int' 0
        | | | `-BinaryOperator 0x156827d90 <col:22, col:32> 'int' contains-errors '>'
        | | |   |-DeclRefExpr 0x156827b60 <col:22> 'int' lvalue Var 0x15680e160 'namelen' 'int'
        | | |   `-RecoveryExpr 0x156827d70 <col:32> '<dependent type>' contains-errors lvalue
        | | `-BinaryOperator 0x156827e58 <col:46, col:63> 'int' contains-errors '>='
        | |   |-ParenExpr 0x156827e20 <col:46, col:58> 'const char *'
        | |   | `-BinaryOperator 0x156827e00 <col:47, col:51> 'const char *' '+'
        | |   |   |-ImplicitCastExpr 0x156827dd0 <col:47> 'const char *' <LValueToRValue>
        | |   |   | `-DeclRefExpr 0x156827bd8 <col:47> 'const char *' lvalue Var 0x15680deb8 'p' 'const char *'
        | |   |   `-ImplicitCastExpr 0x156827de8 <col:51> 'int' <LValueToRValue>
        | |   |     `-DeclRefExpr 0x156827bf8 <col:51> 'int' lvalue Var 0x15680e160 'namelen' 'int'
        | |   `-ImplicitCastExpr 0x156827e40 <col:63> 'const char *' contains-errors <LValueToRValue>
        | |     `-DeclRefExpr 0x156827c88 <col:63> 'const char *' contains-errors lvalue Var 0x15680dfe8 'endptr' 'const char *'
        | `-CompoundStmt 0x156828068 <col:71, line:20:3>
        |   |-CallExpr 0x156827ff8 <line:18:4, col:40> '<dependent type>' contains-errors
        |   | |-DeclRefExpr 0x156827f78 <col:4> 'int ()' Function 0x156827ec0 'PHP_VAR_UNSERIALIZE_DESTROY' 'int ()'
        |   | `-RecoveryExpr 0x156827fd8 <col:32> '<dependent type>' contains-errors lvalue
        |   `-ReturnStmt 0x156828058 <line:19:4, col:11>
        |     `-RecoveryExpr 0x156828038 <col:11> '<dependent type>' contains-errors lvalue
        |-BinaryOperator 0x1568282b0 <line:22:3, col:39> 'int' contains-errors '='
        | |-DeclRefExpr 0x1568280a8 <col:3> 'int' lvalue Var 0x15680e1f8 'has_value' 'int'
        | `-ConditionalOperator 0x156828280 <col:15, col:39> '<dependent type>' contains-errors
        |   |-BinaryOperator 0x156828260 <col:15, col:20> '<dependent type>' contains-errors '&'
        |   | |-UnaryOperator 0x156828228 <col:15, col:16> 'const char' lvalue prefix '*' cannot overflow
        |   | | `-ImplicitCastExpr 0x156828210 <col:16> 'const char *' <LValueToRValue>
        |   | |   `-DeclRefExpr 0x1568280c8 <col:16> 'const char *' lvalue Var 0x15680deb8 'p' 'const char *'
        |   | `-RecoveryExpr 0x156828240 <col:20> '<dependent type>' contains-errors lvalue
        |   |-IntegerLiteral 0x156828150 <col:35> 'int' 0
        |   `-IntegerLiteral 0x156828170 <col:39> 'int' 1
        |-BinaryOperator 0x156828538 <line:24:3, col:33> 'char *' '='
        | |-DeclRefExpr 0x1568282d0 <col:3> 'char *' lvalue Var 0x15680df50 'name' 'char *'
        | `-ImplicitCastExpr 0x156828520 <col:10, col:33> 'char *' <IntegralToPointer>
        |   `-CallExpr 0x1568284d8 <col:10, col:33> 'int'
        |     |-ImplicitCastExpr 0x1568284c0 <col:10> 'int (*)()' <FunctionToPointerDecay>
        |     | `-DeclRefExpr 0x1568283d0 <col:10> 'int ()' Function 0x156828318 'estrndup' 'int ()'
        |     |-BinaryOperator 0x156828448 <col:19, col:23> 'const char *' '+'
        |     | |-ImplicitCastExpr 0x156828430 <col:19> 'const char *' <LValueToRValue>
        |     | | `-DeclRefExpr 0x1568283f0 <col:19> 'const char *' lvalue Var 0x15680deb8 'p' 'const char *'
        |     | `-IntegerLiteral 0x156828410 <col:23> 'int' 1
        |     `-ImplicitCastExpr 0x156828508 <col:26> 'int' <LValueToRValue>
        |       `-DeclRefExpr 0x156828468 <col:26> 'int' lvalue Var 0x15680e160 'namelen' 'int'
        |-CompoundAssignOperator 0x1568285f0 <line:26:3, col:18> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'
        | |-DeclRefExpr 0x156828558 <col:3> 'const char *' lvalue Var 0x15680deb8 'p' 'const char *'
        | `-BinaryOperator 0x1568285d0 <col:8, col:18> 'int' '+'
        |   |-ImplicitCastExpr 0x1568285b8 <col:8> 'int' <LValueToRValue>
        |   | `-DeclRefExpr 0x156828578 <col:8> 'int' lvalue Var 0x15680e160 'namelen' 'int'
        |   `-IntegerLiteral 0x156828598 <col:18> 'int' 1
        |-IfStmt 0x1561241f0 <line:28:3, line:33:3>
        | |-RecoveryExpr 0x156123cb8 <line:28:7, col:79> '_Bool' contains-errors
        | `-CompoundStmt 0x1561241d8 <col:88, line:33:3>
        |   `-IfStmt 0x1561241b8 <line:29:4, line:32:4>
        |     |-RecoveryExpr 0x156123ff8 <line:29:8, col:109> '_Bool' contains-errors
        |     `-CompoundStmt 0x156124198 <col:112, line:32:4>
        |       |-CallExpr 0x156124150 <line:30:5, col:15> 'int'
        |       | |-ImplicitCastExpr 0x156124138 <col:5> 'int (*)()' <FunctionToPointerDecay>
        |       | | `-DeclRefExpr 0x1561240f8 <col:5> 'int ()' Function 0x156124040 'efree' 'int ()'
        |       | `-ImplicitCastExpr 0x156124178 <col:11> 'char *' <LValueToRValue>
        |       |   `-DeclRefExpr 0x156124118 <col:11> 'char *' lvalue Var 0x15680df50 'name' 'char *'
        |       `-ContinueStmt 0x156124190 <line:31:5>
        |-IfStmt 0x1561248c8 <line:35:3, line:44:3>
        | |-ImplicitCastExpr 0x156124230 <line:35:7> 'int' <LValueToRValue>
        | | `-DeclRefExpr 0x156124210 <col:7> 'int' lvalue Var 0x15680e1f8 'has_value' 'int'
        | `-CompoundStmt 0x1561248b0 <col:18, line:44:3>
        |   `-IfStmt 0x156124780 <line:37:4, line:42:4> has_else
        |     |-RecoveryExpr 0x1561245e0 <line:37:8, col:118> '_Bool' contains-errors
        |     |-CompoundStmt 0x156124740 <col:121, line:39:4>
        |     `-CompoundStmt 0x156124770 <col:11, line:42:4>
        |-CallExpr 0x156124a40 <line:45:3, col:28> 'int'
        | |-ImplicitCastExpr 0x156124a28 <col:3> 'int (*)()' <FunctionToPointerDecay>
        | | `-DeclRefExpr 0x1561249c8 <col:3> 'int ()' Function 0x156124910 'PS_ADD_VARL' 'int ()'
        | |-ImplicitCastExpr 0x156124a70 <col:15> 'char *' <LValueToRValue>
        | | `-DeclRefExpr 0x1561249e8 <col:15> 'char *' lvalue Var 0x15680df50 'name' 'char *'
        | `-ImplicitCastExpr 0x156124a88 <col:21> 'int' <LValueToRValue>
        |   `-DeclRefExpr 0x156124a08 <col:21> 'int' lvalue Var 0x15680e160 'namelen' 'int'
        `-CallExpr 0x156124af8 <line:46:3, col:13> 'int'
          |-ImplicitCastExpr 0x156124ae0 <col:3> 'int (*)()' <FunctionToPointerDecay>
          | `-DeclRefExpr 0x156124aa0 <col:3> 'int ()' Function 0x156124040 'efree' 'int ()'
          `-ImplicitCastExpr 0x156124b20 <col:9> 'char *' <LValueToRValue>
            `-DeclRefExpr 0x156124ac0 <col:9> 'char *' lvalue Var 0x15680df50 'name' 'char *'
