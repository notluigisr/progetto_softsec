TranslationUnitDecl 0x12a04e208 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12a04f0b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12a04e7d0 '__int128'
|-TypedefDecl 0x12a04f128 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12a04e7f0 'unsigned __int128'
|-TypedefDecl 0x12c00e230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12c00e000 'struct __NSConstantString_tag'
|   `-Record 0x12a04f180 '__NSConstantString_tag'
|-TypedefDecl 0x12c00e298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12a04e990 '__SVInt8_t'
|-TypedefDecl 0x12c00e300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12a04e9b0 '__SVInt16_t'
|-TypedefDecl 0x12c00e368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12a04e9d0 '__SVInt32_t'
|-TypedefDecl 0x12c00e3d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12a04e9f0 '__SVInt64_t'
|-TypedefDecl 0x12c00e438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12a04ea10 '__SVUint8_t'
|-TypedefDecl 0x12c00e4a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12a04ea30 '__SVUint16_t'
|-TypedefDecl 0x12c00e508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12a04ea50 '__SVUint32_t'
|-TypedefDecl 0x12c00e570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12a04ea70 '__SVUint64_t'
|-TypedefDecl 0x12c00e5d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12a04ea90 '__SVFloat16_t'
|-TypedefDecl 0x12c00e640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12a04eab0 '__SVFloat32_t'
|-TypedefDecl 0x12c00e6a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12a04ead0 '__SVFloat64_t'
|-TypedefDecl 0x12c00e710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12a04eaf0 '__SVBfloat16_t'
|-TypedefDecl 0x12c00e778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12a04eb10 '__clang_svint8x2_t'
|-TypedefDecl 0x12c00e7e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12a04eb30 '__clang_svint16x2_t'
|-TypedefDecl 0x12c00e848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12a04eb50 '__clang_svint32x2_t'
|-TypedefDecl 0x12c00e8b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12a04eb70 '__clang_svint64x2_t'
|-TypedefDecl 0x12c00e918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12a04eb90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12c00e980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12a04ebb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12c00e9e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12a04ebd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12c00ea50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12a04ebf0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12c00eab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12a04ec10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12c00eb20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12a04ec30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12c00eb88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12a04ec50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12c00ebf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12a04ec70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12c00ec58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12a04ec90 '__clang_svint8x3_t'
|-TypedefDecl 0x12c00ecc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12a04ecb0 '__clang_svint16x3_t'
|-TypedefDecl 0x12c00ed28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12a04ecd0 '__clang_svint32x3_t'
|-TypedefDecl 0x12c00ed90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12a04ecf0 '__clang_svint64x3_t'
|-TypedefDecl 0x12c00edf8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12a04ed10 '__clang_svuint8x3_t'
|-TypedefDecl 0x12c00ee60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12a04ed30 '__clang_svuint16x3_t'
|-TypedefDecl 0x12c00eec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12a04ed50 '__clang_svuint32x3_t'
|-TypedefDecl 0x12c00ef30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12a04ed70 '__clang_svuint64x3_t'
|-TypedefDecl 0x12c00ef98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12a04ed90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12c00f800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12a04edb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12c00f868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12a04edd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12c00f8d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12a04edf0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12c00f938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12a04ee10 '__clang_svint8x4_t'
|-TypedefDecl 0x12c00f9a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12a04ee30 '__clang_svint16x4_t'
|-TypedefDecl 0x12c00fa08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12a04ee50 '__clang_svint32x4_t'
|-TypedefDecl 0x12c00fa70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12a04ee70 '__clang_svint64x4_t'
|-TypedefDecl 0x12c00fad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12a04ee90 '__clang_svuint8x4_t'
|-TypedefDecl 0x12c00fb40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12a04eeb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12c00fba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12a04eed0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12c00fc10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12a04eef0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12c00fc78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12a04ef10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12c00fce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12a04ef30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12c00fd48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12a04ef50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12c00fdb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12a04ef70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12c00fe18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12a04ef90 '__SVBool_t'
|-TypedefDecl 0x12c00fe80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12a04efb0 '__clang_svboolx2_t'
|-TypedefDecl 0x12c00fee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12a04efd0 '__clang_svboolx4_t'
|-TypedefDecl 0x12c00ff50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12a04eff0 '__SVCount_t'
|-TypedefDecl 0x12c00fff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12c00ffb0 'char *'
|   `-BuiltinType 0x12a04e2b0 'char'
|-TypedefDecl 0x12c010068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12c00ffb0 'char *'
|   `-BuiltinType 0x12a04e2b0 'char'
`-FunctionDecl 0x12c029948 <dataset_diviso_filec/func10180_vuln.c:1:1, line:51:1> line:1:12 invalid php_get_wbmp 'int (int *, struct gfxinfo **, int)' static
  |-ParmVarDecl 0x12c010128 <col:25, col:37> col:37 invalid stream 'int *'
  |-ParmVarDecl 0x12c010778 <col:45, col:62> col:62 used result 'struct gfxinfo **'
  |-ParmVarDecl 0x12c029800 <col:70, col:74> col:74 used check 'int'
  `-CompoundStmt 0x12c02b920 <line:2:1, line:51:1>
    |-DeclStmt 0x12c029be8 <line:3:2, col:30>
    | |-VarDecl 0x12c029a20 <col:2, col:6> col:6 used i 'int'
    | |-VarDecl 0x12c029aa0 <col:2, col:17> col:9 used width 'int' cinit
    | | `-IntegerLiteral 0x12c029b08 <col:17> 'int' 0
    | `-VarDecl 0x12c029b40 <col:2, col:29> col:20 used height 'int' cinit
    |   `-IntegerLiteral 0x12c029ba8 <col:29> 'int' 0
    |-IfStmt 0x12c029e10 <line:5:2, line:7:2>
    | |-CallExpr 0x12c029da0 <line:5:6, col:30> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x12c029d60 <col:6> 'int ()' Function 0x12c029ca8 'php_stream_rewind' 'int ()'
    | | `-RecoveryExpr 0x12c029d80 <col:24> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x12c029df8 <col:33, line:7:2>
    |   `-ReturnStmt 0x12c029de8 <line:6:3, col:10>
    |     `-IntegerLiteral 0x12c029dc8 <col:10> 'int' 0
    |-IfStmt 0x12c02a000 <line:10:2, line:12:2>
    | |-BinaryOperator 0x12c029f98 <line:10:6, col:33> 'int' contains-errors '!='
    | | |-CallExpr 0x12c029f50 <col:6, col:28> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x12c029f10 <col:6> 'int ()' Function 0x12c029e58 'php_stream_getc' 'int ()'
    | | | `-RecoveryExpr 0x12c029f30 <col:22> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x12c029f78 <col:33> 'int' 0
    | `-CompoundStmt 0x12c029fe8 <col:36, line:12:2>
    |   `-ReturnStmt 0x12c029fd8 <line:11:3, col:10>
    |     `-IntegerLiteral 0x12c029fb8 <col:10> 'int' 0
    |-DoStmt 0x12c02a240 <line:15:2, line:20:19>
    | |-CompoundStmt 0x12c02a1a8 <line:15:5, line:20:2>
    | | |-BinaryOperator 0x12c02a0a8 <line:16:3, col:29> 'int' contains-errors '='
    | | | |-DeclRefExpr 0x12c02a020 <col:3> 'int' lvalue Var 0x12c029a20 'i' 'int'
    | | | `-CallExpr 0x12c02a080 <col:7, col:29> '<dependent type>' contains-errors
    | | |   |-DeclRefExpr 0x12c02a040 <col:7> 'int ()' Function 0x12c029e58 'php_stream_getc' 'int ()'
    | | |   `-RecoveryExpr 0x12c02a060 <col:23> '<dependent type>' contains-errors lvalue
    | | `-IfStmt 0x12c02a188 <line:17:3, line:19:3>
    | |   |-BinaryOperator 0x12c02a120 <line:17:7, col:11> 'int' '<'
    | |   | |-ImplicitCastExpr 0x12c02a108 <col:7> 'int' <LValueToRValue>
    | |   | | `-DeclRefExpr 0x12c02a0c8 <col:7> 'int' lvalue Var 0x12c029a20 'i' 'int'
    | |   | `-IntegerLiteral 0x12c02a0e8 <col:11> 'int' 0
    | |   `-CompoundStmt 0x12c02a170 <col:14, line:19:3>
    | |     `-ReturnStmt 0x12c02a160 <line:18:4, col:11>
    | |       `-IntegerLiteral 0x12c02a140 <col:11> 'int' 0
    | `-BinaryOperator 0x12c02a220 <line:20:11, col:15> 'int' '&'
    |   |-ImplicitCastExpr 0x12c02a208 <col:11> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x12c02a1c8 <col:11> 'int' lvalue Var 0x12c029a20 'i' 'int'
    |   `-IntegerLiteral 0x12c02a1e8 <col:15> 'int' 128
    |-DoStmt 0x12c02a618 <line:23:2, line:29:19>
    | |-CompoundStmt 0x12c02a578 <line:23:5, line:29:2>
    | | |-BinaryOperator 0x12c02a2e8 <line:24:3, col:29> 'int' contains-errors '='
    | | | |-DeclRefExpr 0x12c02a260 <col:3> 'int' lvalue Var 0x12c029a20 'i' 'int'
    | | | `-CallExpr 0x12c02a2c0 <col:7, col:29> '<dependent type>' contains-errors
    | | |   |-DeclRefExpr 0x12c02a280 <col:7> 'int ()' Function 0x12c029e58 'php_stream_getc' 'int ()'
    | | |   `-RecoveryExpr 0x12c02a2a0 <col:23> '<dependent type>' contains-errors lvalue
    | | |-IfStmt 0x12c02a3c8 <line:25:3, line:27:3>
    | | | |-BinaryOperator 0x12c02a360 <line:25:7, col:11> 'int' '<'
    | | | | |-ImplicitCastExpr 0x12c02a348 <col:7> 'int' <LValueToRValue>
    | | | | | `-DeclRefExpr 0x12c02a308 <col:7> 'int' lvalue Var 0x12c029a20 'i' 'int'
    | | | | `-IntegerLiteral 0x12c02a328 <col:11> 'int' 0
    | | | `-CompoundStmt 0x12c02a3b0 <col:14, line:27:3>
    | | |   `-ReturnStmt 0x12c02a3a0 <line:26:4, col:11>
    | | |     `-IntegerLiteral 0x12c02a380 <col:11> 'int' 0
    | | `-BinaryOperator 0x12c02a558 <line:28:3, col:35> 'int' '='
    | |   |-DeclRefExpr 0x12c02a3e8 <col:3> 'int' lvalue Var 0x12c029aa0 'width' 'int'
    | |   `-BinaryOperator 0x12c02a538 <col:11, col:35> 'int' '|'
    | |     |-ParenExpr 0x12c02a480 <col:11, col:22> 'int'
    | |     | `-BinaryOperator 0x12c02a460 <col:12, col:21> 'int' '<<'
    | |     |   |-ImplicitCastExpr 0x12c02a448 <col:12> 'int' <LValueToRValue>
    | |     |   | `-DeclRefExpr 0x12c02a408 <col:12> 'int' lvalue Var 0x12c029aa0 'width' 'int'
    | |     |   `-IntegerLiteral 0x12c02a428 <col:21> 'int' 7
    | |     `-ParenExpr 0x12c02a518 <col:26, col:35> 'int'
    | |       `-BinaryOperator 0x12c02a4f8 <col:27, col:31> 'int' '&'
    | |         |-ImplicitCastExpr 0x12c02a4e0 <col:27> 'int' <LValueToRValue>
    | |         | `-DeclRefExpr 0x12c02a4a0 <col:27> 'int' lvalue Var 0x12c029a20 'i' 'int'
    | |         `-IntegerLiteral 0x12c02a4c0 <col:31> 'int' 127
    | `-BinaryOperator 0x12c02a5f8 <line:29:11, col:15> 'int' '&'
    |   |-ImplicitCastExpr 0x12c02a5e0 <col:11> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x12c02a5a0 <col:11> 'int' lvalue Var 0x12c029a20 'i' 'int'
    |   `-IntegerLiteral 0x12c02a5c0 <col:15> 'int' 128
    |-DoStmt 0x12c02b3f0 <line:32:2, line:38:19>
    | |-CompoundStmt 0x12c02b350 <line:32:5, line:38:2>
    | | |-BinaryOperator 0x12c02a6c0 <line:33:3, col:29> 'int' contains-errors '='
    | | | |-DeclRefExpr 0x12c02a638 <col:3> 'int' lvalue Var 0x12c029a20 'i' 'int'
    | | | `-CallExpr 0x12c02a698 <col:7, col:29> '<dependent type>' contains-errors
    | | |   |-DeclRefExpr 0x12c02a658 <col:7> 'int ()' Function 0x12c029e58 'php_stream_getc' 'int ()'
    | | |   `-RecoveryExpr 0x12c02a678 <col:23> '<dependent type>' contains-errors lvalue
    | | |-IfStmt 0x12c02a7a0 <line:34:3, line:36:3>
    | | | |-BinaryOperator 0x12c02a738 <line:34:7, col:11> 'int' '<'
    | | | | |-ImplicitCastExpr 0x12c02a720 <col:7> 'int' <LValueToRValue>
    | | | | | `-DeclRefExpr 0x12c02a6e0 <col:7> 'int' lvalue Var 0x12c029a20 'i' 'int'
    | | | | `-IntegerLiteral 0x12c02a700 <col:11> 'int' 0
    | | | `-CompoundStmt 0x12c02a788 <col:14, line:36:3>
    | | |   `-ReturnStmt 0x12c02a778 <line:35:4, col:11>
    | | |     `-IntegerLiteral 0x12c02a758 <col:11> 'int' 0
    | | `-BinaryOperator 0x12c02b330 <line:37:3, col:37> 'int' '='
    | |   |-DeclRefExpr 0x12c02a7c0 <col:3> 'int' lvalue Var 0x12c029b40 'height' 'int'
    | |   `-BinaryOperator 0x12c02b310 <col:12, col:37> 'int' '|'
    | |     |-ParenExpr 0x12c02b258 <col:12, col:24> 'int'
    | |     | `-BinaryOperator 0x12c02b238 <col:13, col:23> 'int' '<<'
    | |     |   |-ImplicitCastExpr 0x12c02b220 <col:13> 'int' <LValueToRValue>
    | |     |   | `-DeclRefExpr 0x12c02a7e0 <col:13> 'int' lvalue Var 0x12c029b40 'height' 'int'
    | |     |   `-IntegerLiteral 0x12c02b200 <col:23> 'int' 7
    | |     `-ParenExpr 0x12c02b2f0 <col:28, col:37> 'int'
    | |       `-BinaryOperator 0x12c02b2d0 <col:29, col:33> 'int' '&'
    | |         |-ImplicitCastExpr 0x12c02b2b8 <col:29> 'int' <LValueToRValue>
    | |         | `-DeclRefExpr 0x12c02b278 <col:29> 'int' lvalue Var 0x12c029a20 'i' 'int'
    | |         `-IntegerLiteral 0x12c02b298 <col:33> 'int' 127
    | `-BinaryOperator 0x12c02b3d0 <line:38:11, col:15> 'int' '&'
    |   |-ImplicitCastExpr 0x12c02b3b8 <col:11> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x12c02b378 <col:11> 'int' lvalue Var 0x12c029a20 'i' 'int'
    |   `-IntegerLiteral 0x12c02b398 <col:15> 'int' 128
    |-IfStmt 0x12c02b648 <line:41:2, line:43:2>
    | |-BinaryOperator 0x12c02b5e0 <line:41:6, col:52> 'int' '||'
    | | |-BinaryOperator 0x12c02b548 <col:6, col:36> 'int' '||'
    | | | |-BinaryOperator 0x12c02b4b0 <col:6, col:18> 'int' '||'
    | | | | |-UnaryOperator 0x12c02b448 <col:6, col:7> 'int' prefix '!' cannot overflow
    | | | | | `-ImplicitCastExpr 0x12c02b430 <col:7> 'int' <LValueToRValue>
    | | | | |   `-DeclRefExpr 0x12c02b410 <col:7> 'int' lvalue Var 0x12c029b40 'height' 'int'
    | | | | `-UnaryOperator 0x12c02b498 <col:17, col:18> 'int' prefix '!' cannot overflow
    | | | |   `-ImplicitCastExpr 0x12c02b480 <col:18> 'int' <LValueToRValue>
    | | | |     `-DeclRefExpr 0x12c02b460 <col:18> 'int' lvalue Var 0x12c029aa0 'width' 'int'
    | | | `-BinaryOperator 0x12c02b528 <col:27, col:36> 'int' '>'
    | | |   |-ImplicitCastExpr 0x12c02b510 <col:27> 'int' <LValueToRValue>
    | | |   | `-DeclRefExpr 0x12c02b4d0 <col:27> 'int' lvalue Var 0x12c029b40 'height' 'int'
    | | |   `-IntegerLiteral 0x12c02b4f0 <col:36> 'int' 2048
    | | `-BinaryOperator 0x12c02b5c0 <col:44, col:52> 'int' '>'
    | |   |-ImplicitCastExpr 0x12c02b5a8 <col:44> 'int' <LValueToRValue>
    | |   | `-DeclRefExpr 0x12c02b568 <col:44> 'int' lvalue Var 0x12c029aa0 'width' 'int'
    | |   `-IntegerLiteral 0x12c02b588 <col:52> 'int' 2048
    | `-CompoundStmt 0x12c02b630 <col:58, line:43:2>
    |   `-ReturnStmt 0x12c02b620 <line:42:3, col:10>
    |     `-IntegerLiteral 0x12c02b600 <col:10> 'int' 0
    |-IfStmt 0x12c02b8b8 <line:45:2, line:48:2>
    | |-UnaryOperator 0x12c02b6a0 <line:45:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x12c02b688 <col:7> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x12c02b668 <col:7> 'int' lvalue ParmVar 0x12c029800 'check' 'int'
    | `-CompoundStmt 0x12c02b898 <col:14, line:48:2>
    |   |-BinaryOperator 0x12c02b788 <line:46:3, col:22> '<dependent type>' contains-errors '='
    |   | |-RecoveryExpr 0x12c02b740 <col:3, col:14> '<dependent type>' contains-errors lvalue
    |   | | `-ParenExpr 0x12c02b708 <col:3, col:11> 'struct gfxinfo *' lvalue
    |   | |   `-UnaryOperator 0x12c02b6f0 <col:4, col:5> 'struct gfxinfo *' lvalue prefix '*' cannot overflow
    |   | |     `-ImplicitCastExpr 0x12c02b6d8 <col:5> 'struct gfxinfo **' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x12c02b6b8 <col:5> 'struct gfxinfo **' lvalue ParmVar 0x12c010778 'result' 'struct gfxinfo **'
    |   | `-DeclRefExpr 0x12c02b768 <col:22> 'int' lvalue Var 0x12c029aa0 'width' 'int'
    |   `-BinaryOperator 0x12c02b878 <line:47:3, col:23> '<dependent type>' contains-errors '='
    |     |-RecoveryExpr 0x12c02b830 <col:3, col:14> '<dependent type>' contains-errors lvalue
    |     | `-ParenExpr 0x12c02b7f8 <col:3, col:11> 'struct gfxinfo *' lvalue
    |     |   `-UnaryOperator 0x12c02b7e0 <col:4, col:5> 'struct gfxinfo *' lvalue prefix '*' cannot overflow
    |     |     `-ImplicitCastExpr 0x12c02b7c8 <col:5> 'struct gfxinfo **' <LValueToRValue>
    |     |       `-DeclRefExpr 0x12c02b7a8 <col:5> 'struct gfxinfo **' lvalue ParmVar 0x12c010778 'result' 'struct gfxinfo **'
    |     `-DeclRefExpr 0x12c02b858 <col:23> 'int' lvalue Var 0x12c029b40 'height' 'int'
    `-ReturnStmt 0x12c02b910 <line:50:2, col:9>
      `-RecoveryExpr 0x12c02b8f0 <col:9> '<dependent type>' contains-errors lvalue
