TranslationUnitDecl 0x15b040008 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x15b040eb8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x15b0405d0 '__int128'
|-TypedefDecl 0x15b040f28 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x15b0405f0 'unsigned __int128'
|-TypedefDecl 0x15b0f1c30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15b0f1a00 'struct __NSConstantString_tag'
|   `-Record 0x15b040f80 '__NSConstantString_tag'
|-TypedefDecl 0x15b0f1c98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x15b040790 '__SVInt8_t'
|-TypedefDecl 0x15b0f1d00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x15b0407b0 '__SVInt16_t'
|-TypedefDecl 0x15b0f1d68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x15b0407d0 '__SVInt32_t'
|-TypedefDecl 0x15b0f1dd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x15b0407f0 '__SVInt64_t'
|-TypedefDecl 0x15b0f1e38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x15b040810 '__SVUint8_t'
|-TypedefDecl 0x15b0f1ea0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x15b040830 '__SVUint16_t'
|-TypedefDecl 0x15b0f1f08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x15b040850 '__SVUint32_t'
|-TypedefDecl 0x15b0f1f70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x15b040870 '__SVUint64_t'
|-TypedefDecl 0x15b0f1fd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x15b040890 '__SVFloat16_t'
|-TypedefDecl 0x15b0f2040 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x15b0408b0 '__SVFloat32_t'
|-TypedefDecl 0x15b0f20a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x15b0408d0 '__SVFloat64_t'
|-TypedefDecl 0x15b0f2110 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x15b0408f0 '__SVBfloat16_t'
|-TypedefDecl 0x15b0f2178 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x15b040910 '__clang_svint8x2_t'
|-TypedefDecl 0x15b0f21e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x15b040930 '__clang_svint16x2_t'
|-TypedefDecl 0x15b0f2248 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x15b040950 '__clang_svint32x2_t'
|-TypedefDecl 0x15b0f22b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x15b040970 '__clang_svint64x2_t'
|-TypedefDecl 0x15b0f2318 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x15b040990 '__clang_svuint8x2_t'
|-TypedefDecl 0x15b0f2380 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x15b0409b0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15b0f23e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x15b0409d0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15b0f2450 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x15b0409f0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15b0f24b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x15b040a10 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15b0f2520 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x15b040a30 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15b0f2588 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x15b040a50 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15b0f25f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x15b040a70 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15b0f2658 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x15b040a90 '__clang_svint8x3_t'
|-TypedefDecl 0x15b0f26c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x15b040ab0 '__clang_svint16x3_t'
|-TypedefDecl 0x15b0f2728 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x15b040ad0 '__clang_svint32x3_t'
|-TypedefDecl 0x15b0f2790 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x15b040af0 '__clang_svint64x3_t'
|-TypedefDecl 0x15b0f27f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x15b040b10 '__clang_svuint8x3_t'
|-TypedefDecl 0x15b0f2860 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x15b040b30 '__clang_svuint16x3_t'
|-TypedefDecl 0x15b0f28c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x15b040b50 '__clang_svuint32x3_t'
|-TypedefDecl 0x15b0f2930 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x15b040b70 '__clang_svuint64x3_t'
|-TypedefDecl 0x15b0f2998 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x15b040b90 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15b0f3200 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x15b040bb0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15b0f3268 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x15b040bd0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15b0f32d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x15b040bf0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15b0f3338 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x15b040c10 '__clang_svint8x4_t'
|-TypedefDecl 0x15b0f33a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x15b040c30 '__clang_svint16x4_t'
|-TypedefDecl 0x15b0f3408 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x15b040c50 '__clang_svint32x4_t'
|-TypedefDecl 0x15b0f3470 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x15b040c70 '__clang_svint64x4_t'
|-TypedefDecl 0x15b0f34d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x15b040c90 '__clang_svuint8x4_t'
|-TypedefDecl 0x15b0f3540 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x15b040cb0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15b0f35a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x15b040cd0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15b0f3610 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x15b040cf0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15b0f3678 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x15b040d10 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15b0f36e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x15b040d30 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15b0f3748 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x15b040d50 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15b0f37b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x15b040d70 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15b0f3818 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x15b040d90 '__SVBool_t'
|-TypedefDecl 0x15b0f3880 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x15b040db0 '__clang_svboolx2_t'
|-TypedefDecl 0x15b0f38e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x15b040dd0 '__clang_svboolx4_t'
|-TypedefDecl 0x15b0f3950 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x15b040df0 '__SVCount_t'
|-TypedefDecl 0x15b0f39f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15b0f39b0 'char *'
|   `-BuiltinType 0x15b0400b0 'char'
|-TypedefDecl 0x15b0f3a68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15b0f39b0 'char *'
|   `-BuiltinType 0x15b0400b0 'char'
|-FunctionDecl 0x15b10c400 <dataset_diviso_filec/func2500_vuln.c:1:1, line:31:1> line:1:12 target_xcopy_locate_se_dev_e4_iter 'int (struct se_device *, void *)' static
| |-ParmVarDecl 0x15b0f4048 <col:47, col:65> col:65 used se_dev 'struct se_device *'
| |-ParmVarDecl 0x15b0f40c8 <line:2:12, col:18> col:18 used data 'void *'
| `-CompoundStmt 0x15b10eea8 <line:3:1, line:31:1>
|   |-DeclStmt 0x15b10c738 <line:4:2, col:43>
|   | |-RecordDecl 0x15b10c500 <col:2, col:9> col:9 struct xcopy_dev_search_info
|   | `-VarDecl 0x15b10c668 <col:2, col:39> col:32 used info 'struct xcopy_dev_search_info *' cinit
|   |   `-ImplicitCastExpr 0x15b10c708 <col:39> 'struct xcopy_dev_search_info *' <BitCast>
|   |     `-ImplicitCastExpr 0x15b10c6f0 <col:39> 'void *' <LValueToRValue>
|   |       `-DeclRefExpr 0x15b10c6d0 <col:39> 'void *' lvalue ParmVar 0x15b0f40c8 'data' 'void *'
|   |-DeclStmt 0x15b10c800 <line:5:2, col:53>
|   | `-VarDecl 0x15b10c798 <col:2, col:16> col:16 invalid tmp_dev_wwn 'unsigned char'
|   |-DeclStmt 0x15b10c898 <line:6:2, col:8>
|   | `-VarDecl 0x15b10c830 <col:2, col:6> col:6 used rc 'int'
|   |-IfStmt 0x15b10c9b8 <line:8:2, line:9:10>
|   | |-UnaryOperator 0x15b10c970 <line:8:6, col:26> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x15b10c958 <col:7, col:26> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-CXXDependentScopeMemberExpr 0x15b10c910 <col:7, col:26> '<dependent type>' contains-errors lvalue .emulate_3pc
|   | |     `-RecoveryExpr 0x15b10c8e8 <col:7, col:15> '<dependent type>' contains-errors lvalue
|   | |       `-DeclRefExpr 0x15b10c8b0 <col:7> 'struct se_device *' lvalue ParmVar 0x15b0f4048 'se_dev' 'struct se_device *'
|   | `-ReturnStmt 0x15b10c9a8 <line:9:3, col:10>
|   |   `-IntegerLiteral 0x15b10c988 <col:10> 'int' 0
|   |-CallExpr 0x15b10ce88 <line:11:2, col:53> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x15b10cc78 <col:2> 'void *(void *, int, unsigned long)' Function 0x15b10ca28 'memset' 'void *(void *, int, unsigned long)'
|   | |-UnaryOperator 0x15b10ce38 <col:9, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | | `-ArraySubscriptExpr 0x15b10ce18 <col:10, col:23> '<dependent type>' contains-errors lvalue
|   | |   |-ImplicitCastExpr 0x15b10ce00 <col:10> '<dependent type>' contains-errors <LValueToRValue>
|   | |   | `-RecoveryExpr 0x15b10cc98 <col:10> '<dependent type>' contains-errors lvalue
|   | |   `-IntegerLiteral 0x15b10ccb8 <col:22> 'int' 0
|   | |-IntegerLiteral 0x15b10cd28 <col:26> 'int' 0
|   | `-RecoveryExpr 0x15b10ce50 <col:29> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x15b10d0a0 <line:12:2, col:51> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x15b10cfd0 <col:2> 'int ()' Function 0x15b10cf18 'target_xcopy_gen_naa_ieee' 'int ()'
|   | |-DeclRefExpr 0x15b10cff0 <col:28> 'struct se_device *' lvalue ParmVar 0x15b0f4048 'se_dev' 'struct se_device *'
|   | `-UnaryOperator 0x15b10d088 <col:36, col:50> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   `-ArraySubscriptExpr 0x15b10d068 <col:37, col:50> '<dependent type>' contains-errors lvalue
|   |     |-ImplicitCastExpr 0x15b10d050 <col:37> '<dependent type>' contains-errors <LValueToRValue>
|   |     | `-RecoveryExpr 0x15b10d010 <col:37> '<dependent type>' contains-errors lvalue
|   |     `-IntegerLiteral 0x15b10d030 <col:49> 'int' 0
|   |-BinaryOperator 0x15b10e498 <line:14:2, col:70> 'int' contains-errors '='
|   | |-DeclRefExpr 0x15b10d0d0 <col:2> 'int' lvalue Var 0x15b10c830 'rc' 'int'
|   | `-CallExpr 0x15b10e460 <col:7, col:70> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x15b10d3b8 <col:7> 'int (const void *, const void *, unsigned long)' Function 0x15b10d168 'memcmp' 'int (const void *, const void *, unsigned long)'
|   |   |-UnaryOperator 0x15b10e3f8 <col:14, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   | `-ArraySubscriptExpr 0x15b10e3d8 <col:15, col:28> '<dependent type>' contains-errors lvalue
|   |   |   |-ImplicitCastExpr 0x15b10e3c0 <col:15> '<dependent type>' contains-errors <LValueToRValue>
|   |   |   | `-RecoveryExpr 0x15b10d3d8 <col:15> '<dependent type>' contains-errors lvalue
|   |   |   `-IntegerLiteral 0x15b10e200 <col:27> 'int' 0
|   |   |-RecoveryExpr 0x15b10e2a8 <col:31, col:37> '<dependent type>' contains-errors lvalue
|   |   | `-DeclRefExpr 0x15b10e270 <col:31> 'struct xcopy_dev_search_info *' lvalue Var 0x15b10c668 'info' 'struct xcopy_dev_search_info *'
|   |   `-RecoveryExpr 0x15b10e410 <col:46> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x15b10e560 <line:15:2, line:16:10>
|   | |-BinaryOperator 0x15b10e510 <line:15:6, col:12> 'int' '!='
|   | | |-ImplicitCastExpr 0x15b10e4f8 <col:6> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x15b10e4b8 <col:6> 'int' lvalue Var 0x15b10c830 'rc' 'int'
|   | | `-IntegerLiteral 0x15b10e4d8 <col:12> 'int' 0
|   | `-ReturnStmt 0x15b10e550 <line:16:3, col:10>
|   |   `-IntegerLiteral 0x15b10e530 <col:10> 'int' 0
|   |-BinaryOperator 0x15b10e600 <line:18:2, col:20> '<dependent type>' contains-errors '='
|   | |-RecoveryExpr 0x15b10e5b8 <col:2, col:8> '<dependent type>' contains-errors lvalue
|   | | `-DeclRefExpr 0x15b10e580 <col:2> 'struct xcopy_dev_search_info *' lvalue Var 0x15b10c668 'info' 'struct xcopy_dev_search_info *'
|   | `-DeclRefExpr 0x15b10e5e0 <col:20> 'struct se_device *' lvalue ParmVar 0x15b0f4048 'se_dev' 'struct se_device *'
|   |-CallExpr 0x15b10e7e8 <line:19:2, col:24> 'int'
|   | |-ImplicitCastExpr 0x15b10e7d0 <col:2> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x15b10e700 <col:2> 'int ()' Function 0x15b10e648 'pr_debug' 'int ()'
|   | |-ImplicitCastExpr 0x15b10e818 <col:11> 'char *' <ArrayToPointerDecay>
|   | | `-StringLiteral 0x15b10e760 <col:11> 'char[4]' lvalue "STR"
|   | `-ImplicitCastExpr 0x15b10e830 <col:18> 'struct se_device *' <LValueToRValue>
|   |   `-DeclRefExpr 0x15b10e780 <col:18> 'struct se_device *' lvalue ParmVar 0x15b0f4048 'se_dev' 'struct se_device *'
|   |-BinaryOperator 0x15b10ea50 <line:21:2, col:52> 'int' contains-errors '='
|   | |-DeclRefExpr 0x15b10e848 <col:2> 'int' lvalue Var 0x15b10c830 'rc' 'int'
|   | `-CallExpr 0x15b10ea28 <col:7, col:52> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x15b10e948 <col:7> 'int ()' Function 0x15b10e890 'target_depend_item' 'int ()'
|   |   `-UnaryOperator 0x15b10ea10 <col:26, col:45> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |     `-CXXDependentScopeMemberExpr 0x15b10e9c8 <col:27, col:45> '<dependent type>' contains-errors lvalue .cg_item
|   |       `-RecoveryExpr 0x15b10e9a0 <col:27, col:35> '<dependent type>' contains-errors lvalue
|   |         `-DeclRefExpr 0x15b10e968 <col:27> 'struct se_device *' lvalue ParmVar 0x15b0f4048 'se_dev' 'struct se_device *'
|   |-IfStmt 0x15b10ed48 <line:22:2, line:26:2>
|   | |-BinaryOperator 0x15b10eac8 <line:22:6, col:12> 'int' '!='
|   | | |-ImplicitCastExpr 0x15b10eab0 <col:6> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x15b10ea70 <col:6> 'int' lvalue Var 0x15b10c830 'rc' 'int'
|   | | `-IntegerLiteral 0x15b10ea90 <col:12> 'int' 0
|   | `-CompoundStmt 0x15b10ed28 <col:15, line:26:2>
|   |   |-CallExpr 0x15b10ec60 <line:23:3, line:24:20> 'int'
|   |   | |-ImplicitCastExpr 0x15b10ec48 <line:23:3> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x15b10ebc8 <col:3> 'int ()' Function 0x15b10eb10 'pr_err' 'int ()'
|   |   | |-ImplicitCastExpr 0x15b10ec98 <col:10> 'char *' <ArrayToPointerDecay>
|   |   | | `-StringLiteral 0x15b10ebe8 <col:10> 'char[4]' lvalue "STR"
|   |   | |-ImplicitCastExpr 0x15b10ecb0 <line:24:10> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x15b10ec08 <col:10> 'int' lvalue Var 0x15b10c830 'rc' 'int'
|   |   | `-ImplicitCastExpr 0x15b10ecc8 <col:14> 'struct se_device *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x15b10ec28 <col:14> 'struct se_device *' lvalue ParmVar 0x15b0f4048 'se_dev' 'struct se_device *'
|   |   `-ReturnStmt 0x15b10ed18 <line:25:3, col:10>
|   |     `-ImplicitCastExpr 0x15b10ed00 <col:10> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x15b10ece0 <col:10> 'int' lvalue Var 0x15b10c830 'rc' 'int'
|   |-CallExpr 0x15b10ee40 <line:28:2, line:29:30> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x15b10ed68 <line:28:2> 'int ()' Function 0x15b10e648 'pr_debug' 'int ()'
|   | |-StringLiteral 0x15b10ed88 <col:11> 'char[4]' lvalue "STR"
|   | |-DeclRefExpr 0x15b10eda8 <line:29:4> 'struct se_device *' lvalue ParmVar 0x15b0f4048 'se_dev' 'struct se_device *'
|   | `-UnaryOperator 0x15b10ee28 <col:12, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   `-RecoveryExpr 0x15b10ee00 <col:13, col:21> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x15b10edc8 <col:13> 'struct se_device *' lvalue ParmVar 0x15b0f4048 'se_dev' 'struct se_device *'
|   `-ReturnStmt 0x15b10ee98 <line:30:2, col:9>
|     `-IntegerLiteral 0x15b10ee78 <col:9> 'int' 1
|-FunctionDecl 0x15b10ca28 <line:11:2> col:2 implicit used memset 'void *(void *, int, unsigned long)' extern
| |-ParmVarDecl 0x15b10cb28 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x15b10cb90 <<invalid sloc>> <invalid sloc> 'int'
| |-ParmVarDecl 0x15b10cbf8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-BuiltinAttr 0x15b10cad0 <<invalid sloc>> Implicit 900
`-FunctionDecl 0x15b10d168 <line:14:7> col:7 implicit used memcmp 'int (const void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x15b10d268 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x15b10d2d0 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x15b10d338 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x15b10d210 <<invalid sloc>> Implicit 883
