TranslationUnitDecl 0x124855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1248564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x124855bd0 '__int128'
|-TypedefDecl 0x124856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x124855bf0 'unsigned __int128'
|-TypedefDecl 0x124926a30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x124926800 'struct __NSConstantString_tag'
|   `-Record 0x124856580 '__NSConstantString_tag'
|-TypedefDecl 0x124926a98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x124855d90 '__SVInt8_t'
|-TypedefDecl 0x124926b00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x124855db0 '__SVInt16_t'
|-TypedefDecl 0x124926b68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x124855dd0 '__SVInt32_t'
|-TypedefDecl 0x124926bd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x124855df0 '__SVInt64_t'
|-TypedefDecl 0x124926c38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x124855e10 '__SVUint8_t'
|-TypedefDecl 0x124926ca0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x124855e30 '__SVUint16_t'
|-TypedefDecl 0x124926d08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x124855e50 '__SVUint32_t'
|-TypedefDecl 0x124926d70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x124855e70 '__SVUint64_t'
|-TypedefDecl 0x124926dd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x124855e90 '__SVFloat16_t'
|-TypedefDecl 0x124926e40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x124855eb0 '__SVFloat32_t'
|-TypedefDecl 0x124926ea8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x124855ed0 '__SVFloat64_t'
|-TypedefDecl 0x124926f10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x124855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x124926f78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x124855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x124926fe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x124855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x124927048 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x124855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1249270b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x124855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x124927118 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x124855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x124927180 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x124855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1249271e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x124855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x124927250 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x124855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1249272b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x124856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x124927320 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x124856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x124927388 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x124856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1249273f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x124856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x124927458 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x124856090 '__clang_svint8x3_t'
|-TypedefDecl 0x1249274c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1248560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x124927528 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1248560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x124927590 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1248560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x1249275f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x124856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x124927660 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x124856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x1249276c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x124856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x124927730 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x124856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x124927798 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x124856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x124928000 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1248561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x124928068 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1248561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1249280d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1248561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x124928138 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x124856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1249281a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x124856230 '__clang_svint16x4_t'
|-TypedefDecl 0x124928208 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x124856250 '__clang_svint32x4_t'
|-TypedefDecl 0x124928270 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x124856270 '__clang_svint64x4_t'
|-TypedefDecl 0x1249282d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x124856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x124928340 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1248562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1249283a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1248562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x124928410 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1248562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x124928478 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x124856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1249284e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x124856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x124928548 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x124856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1249285b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x124856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x124928618 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x124856390 '__SVBool_t'
|-TypedefDecl 0x124928680 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1248563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1249286e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1248563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x124928750 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1248563f0 '__SVCount_t'
|-TypedefDecl 0x1249287f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1249287b0 'char *'
|   `-BuiltinType 0x1248556b0 'char'
|-TypedefDecl 0x124928868 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1249287b0 'char *'
|   `-BuiltinType 0x1248556b0 'char'
`-FunctionDecl 0x124942000 <dataset_diviso_filec/func19242_vuln.c:1:1, line:65:1> line:1:1 invalid int_ossl_asn1_decode0_cons 'int (unsigned char **, long, long, long *, int, int, int, int, int, long *)'
  |-ParmVarDecl 0x124928940 <col:28, col:44> col:44 used pp 'unsigned char **'
  |-ParmVarDecl 0x1249289c0 <col:48, col:53> col:53 used max_len 'long'
  |-ParmVarDecl 0x124928a40 <col:62, col:67> col:67 used length 'long'
  |-ParmVarDecl 0x124928af8 <line:2:7, col:13> col:13 used offset 'long *'
  |-ParmVarDecl 0x124928b78 <col:21, col:25> col:25 used depth 'int'
  |-ParmVarDecl 0x124928bf8 <col:32, col:36> col:36 used yield 'int'
  |-ParmVarDecl 0x124928c78 <col:43, col:47> col:47 used j 'int'
  |-ParmVarDecl 0x124928cf8 <line:3:7, col:11> col:11 used tag 'int'
  |-ParmVarDecl 0x124928d90 <col:16, col:22> col:22 invalid tc 'int'
  |-ParmVarDecl 0x124928e10 <col:26, col:32> col:32 used num_read 'long *'
  `-CompoundStmt 0x1249451d0 <line:4:1, line:65:1>
    |-DeclStmt 0x124942178 <line:6:5, col:17>
    | `-VarDecl 0x124942110 <col:5, col:9> col:9 used infinite 'int'
    |-DeclStmt 0x124942278 <line:7:5, col:23>
    | `-VarDecl 0x1249421a8 <col:5, col:17> col:10 used off 'long' cinit
    |   `-ImplicitCastExpr 0x124942260 <col:16, col:17> 'long' <LValueToRValue>
    |     `-UnaryOperator 0x124942248 <col:16, col:17> 'long' lvalue prefix '*' cannot overflow
    |       `-ImplicitCastExpr 0x124942230 <col:17> 'long *' <LValueToRValue>
    |         `-DeclRefExpr 0x124942210 <col:17> 'long *' lvalue ParmVar 0x124928af8 'offset' 'long *'
    |-BinaryOperator 0x124942348 <line:9:5, col:26> 'int' '='
    | |-DeclRefExpr 0x124942290 <col:5> 'int' lvalue Var 0x124942110 'infinite' 'int'
    | `-ParenExpr 0x124942328 <col:16, col:26> 'int'
    |   `-BinaryOperator 0x124942308 <col:17, col:22> 'int' '=='
    |     |-ImplicitCastExpr 0x1249422f0 <col:17> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x1249422b0 <col:17> 'int' lvalue ParmVar 0x124928c78 'j' 'int'
    |     `-IntegerLiteral 0x1249422d0 <col:22> 'int' 33
    |-WhileStmt 0x124943f28 <line:12:5, line:26:5>
    | |-BinaryOperator 0x124942610 <line:12:12, col:26> 'int' '||'
    | | |-BinaryOperator 0x1249425b8 <col:12, col:21> 'int' '>'
    | | | |-ImplicitCastExpr 0x124942588 <col:12> 'long' <LValueToRValue>
    | | | | `-DeclRefExpr 0x124942548 <col:12> 'long' lvalue ParmVar 0x124928a40 'length' 'long'
    | | | `-ImplicitCastExpr 0x1249425a0 <col:21> 'long' <IntegralCast>
    | | |   `-IntegerLiteral 0x124942568 <col:21> 'int' 0
    | | `-ImplicitCastExpr 0x1249425f8 <col:26> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x1249425d8 <col:26> 'int' lvalue Var 0x124942110 'infinite' 'int'
    | `-CompoundStmt 0x124943ee8 <col:36, line:26:5>
    |   |-DeclStmt 0x1249426e8 <line:13:2, col:21>
    |   | `-VarDecl 0x124942648 <col:2, col:20> col:7 used inner_read 'long' cinit
    |   |   `-ImplicitCastExpr 0x1249426d0 <col:20> 'long' <IntegralCast>
    |   |     `-IntegerLiteral 0x1249426b0 <col:20> 'int' 0
    |   |-CompoundAssignOperator 0x124942a80 <line:15:2, col:15> 'long' '+=' ComputeLHSTy='long' ComputeResultTy='long'
    |   | |-UnaryOperator 0x124942a30 <col:2, col:3> 'long' lvalue prefix '*' cannot overflow
    |   | | `-ImplicitCastExpr 0x124942a18 <col:3> 'long *' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x1249429f8 <col:3> 'long *' lvalue ParmVar 0x124928e10 'num_read' 'long *'
    |   | `-ImplicitCastExpr 0x124942a68 <col:15> 'long' <LValueToRValue>
    |   |   `-DeclRefExpr 0x124942a48 <col:15> 'long' lvalue Var 0x124942648 'inner_read' 'long'
    |   |-CompoundAssignOperator 0x124942b08 <line:16:2, col:13> 'long' '-=' ComputeLHSTy='long' ComputeResultTy='long'
    |   | |-DeclRefExpr 0x124942ab0 <col:2> 'long' lvalue ParmVar 0x1249289c0 'max_len' 'long'
    |   | `-ImplicitCastExpr 0x124942af0 <col:13> 'long' <LValueToRValue>
    |   |   `-DeclRefExpr 0x124942ad0 <col:13> 'long' lvalue Var 0x124942648 'inner_read' 'long'
    |   |-CallExpr 0x124942cd8 <line:17:2, col:24> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x124942c18 <col:2> 'int ()' Function 0x124942b60 'rb_ary_push' 'int ()'
    |   | |-RecoveryExpr 0x124942c98 <col:14> '<dependent type>' contains-errors lvalue
    |   | `-RecoveryExpr 0x124942cb8 <col:19> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x124942e20 <line:18:2, line:19:16>
    |   | |-BinaryOperator 0x124942d78 <line:18:6, col:15> 'int' '>'
    |   | | |-ImplicitCastExpr 0x124942d48 <col:6> 'long' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x124942d08 <col:6> 'long' lvalue ParmVar 0x124928a40 'length' 'long'
    |   | | `-ImplicitCastExpr 0x124942d60 <col:15> 'long' <IntegralCast>
    |   | |   `-IntegerLiteral 0x124942d28 <col:15> 'int' 0
    |   | `-CompoundAssignOperator 0x124942df0 <line:19:6, col:16> 'long' '-=' ComputeLHSTy='long' ComputeResultTy='long'
    |   |   |-DeclRefExpr 0x124942d98 <col:6> 'long' lvalue ParmVar 0x124928a40 'length' 'long'
    |   |   `-ImplicitCastExpr 0x124942dd8 <col:16> 'long' <LValueToRValue>
    |   |     `-DeclRefExpr 0x124942db8 <col:16> 'long' lvalue Var 0x124942648 'inner_read' 'long'
    |   `-IfStmt 0x124943ec8 <line:21:2, line:25:2>
    |     |-BinaryOperator 0x124943e88 <line:21:6, line:23:40> 'int' contains-errors '&&'
    |     | |-BinaryOperator 0x124943de0 <line:21:6, line:22:43> 'int' contains-errors '&&'
    |     | | |-DeclRefExpr 0x124942e40 <line:21:6> 'int' lvalue Var 0x124942110 'infinite' 'int'
    |     | | `-BinaryOperator 0x124943dc0 <line:22:6, col:43> 'int' contains-errors '=='
    |     | |   |-CallExpr 0x124943d78 <col:6, col:38> '<dependent type>' contains-errors
    |     | |   | |-DeclRefExpr 0x124942f40 <col:6> 'int ()' Function 0x124942e88 'NUM2INT' 'int ()'
    |     | |   | `-CallExpr 0x124943d50 <col:14, col:37> '<dependent type>' contains-errors
    |     | |   |   |-DeclRefExpr 0x124943ab8 <col:14> 'int ()' Function 0x124943a00 'ossl_asn1_get_tag' 'int ()'
    |     | |   |   `-RecoveryExpr 0x124943d30 <col:32> '<dependent type>' contains-errors lvalue
    |     | |   `-RecoveryExpr 0x124943da0 <col:43> '<dependent type>' contains-errors lvalue
    |     | `-BinaryOperator 0x124943e68 <line:23:6, col:40> 'int' contains-errors '=='
    |     |   |-CallExpr 0x124943e20 <col:6, col:35> '<dependent type>' contains-errors
    |     |   | |-DeclRefExpr 0x124943c78 <col:6> 'int ()' Function 0x124943bc0 'ossl_asn1_get_tag_class' 'int ()'
    |     |   | `-RecoveryExpr 0x124943e00 <col:30> '<dependent type>' contains-errors lvalue
    |     |   `-RecoveryExpr 0x124943e48 <col:40> '<dependent type>' contains-errors lvalue
    |     `-CompoundStmt 0x124943eb0 <col:55, line:25:2>
    |       `-BreakStmt 0x124943ea8 <line:24:6>
    |-IfStmt 0x124944fa0 <line:28:5, line:56:5> has_else
    | |-BinaryOperator 0x124943fc0 <line:28:9, col:15> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x124943f48 <col:9> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x124943fa0 <col:15> '<dependent type>' contains-errors lvalue
    | |-CompoundStmt 0x124944920 <col:30, line:52:5>
    | | |-DeclStmt 0x124944060 <line:30:2, col:25>
    | | | `-VarDecl 0x124943ff8 <col:2, col:6> col:6 used not_sequence_or_set 'int'
    | | |-BinaryOperator 0x124944228 <line:32:2, col:57> 'int' contains-errors '='
    | | | |-DeclRefExpr 0x124944078 <col:2> 'int' lvalue Var 0x124943ff8 'not_sequence_or_set' 'int'
    | | | `-BinaryOperator 0x124944208 <col:24, col:57> 'int' contains-errors '&&'
    | | |   |-BinaryOperator 0x1249441a8 <col:24, col:31> 'int' contains-errors '!='
    | | |   | |-DeclRefExpr 0x124944098 <col:24> 'int' lvalue ParmVar 0x124928cf8 'tag' 'int'
    | | |   | `-RecoveryExpr 0x124944188 <col:31> '<dependent type>' contains-errors lvalue
    | | |   `-BinaryOperator 0x1249441e8 <col:50, col:57> 'int' contains-errors '!='
    | | |     |-DeclRefExpr 0x1249440f0 <col:50> 'int' lvalue ParmVar 0x124928cf8 'tag' 'int'
    | | |     `-RecoveryExpr 0x1249441c8 <col:57> '<dependent type>' contains-errors lvalue
    | | `-IfStmt 0x1249445b8 <line:34:2, line:46:2> has_else
    | |   |-ImplicitCastExpr 0x124944268 <line:34:6> 'int' <LValueToRValue>
    | |   | `-DeclRefExpr 0x124944248 <col:6> 'int' lvalue Var 0x124943ff8 'not_sequence_or_set' 'int'
    | |   |-CompoundStmt 0x124944570 <col:27, line:42:2>
    | |   | `-IfStmt 0x124944540 <line:35:6, line:41:6> has_else
    | |   |   |-ImplicitCastExpr 0x1249442a0 <line:35:10> 'int' <LValueToRValue>
    | |   |   | `-DeclRefExpr 0x124944280 <col:10> 'int' lvalue Var 0x124942110 'infinite' 'int'
    | |   |   |-CompoundStmt 0x1249443b8 <col:20, line:37:6>
    | |   |   `-CompoundStmt 0x124944530 <line:38:11, line:41:6>
    | |   `-CompoundStmt 0x1249445a8 <line:43:7, line:46:2>
    | `-CompoundStmt 0x124944f90 <line:53:10, line:56:5>
    `-BinaryOperator 0x1249451b0 <line:63:5, col:15> 'long' '='
      |-UnaryOperator 0x124945160 <col:5, col:6> 'long' lvalue prefix '*' cannot overflow
      | `-ImplicitCastExpr 0x124945148 <col:6> 'long *' <LValueToRValue>
      |   `-DeclRefExpr 0x124945128 <col:6> 'long *' lvalue ParmVar 0x124928af8 'offset' 'long *'
      `-ImplicitCastExpr 0x124945198 <col:15> 'long' <LValueToRValue>
        `-DeclRefExpr 0x124945178 <col:15> 'long' lvalue Var 0x1249421a8 'off' 'long'
