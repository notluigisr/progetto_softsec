TranslationUnitDecl 0x14c055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14c0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14c055bd0 '__int128'
|-TypedefDecl 0x14c056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14c055bf0 'unsigned __int128'
|-TypedefDecl 0x14c80be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14c80bc00 'struct __NSConstantString_tag'
|   `-Record 0x14c056580 '__NSConstantString_tag'
|-TypedefDecl 0x14c80be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14c055d90 '__SVInt8_t'
|-TypedefDecl 0x14c80bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14c055db0 '__SVInt16_t'
|-TypedefDecl 0x14c80bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14c055dd0 '__SVInt32_t'
|-TypedefDecl 0x14c80bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14c055df0 '__SVInt64_t'
|-TypedefDecl 0x14c80c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14c055e10 '__SVUint8_t'
|-TypedefDecl 0x14c80c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14c055e30 '__SVUint16_t'
|-TypedefDecl 0x14c80c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14c055e50 '__SVUint32_t'
|-TypedefDecl 0x14c80c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14c055e70 '__SVUint64_t'
|-TypedefDecl 0x14c80c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14c055e90 '__SVFloat16_t'
|-TypedefDecl 0x14c80c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14c055eb0 '__SVFloat32_t'
|-TypedefDecl 0x14c80c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14c055ed0 '__SVFloat64_t'
|-TypedefDecl 0x14c80c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14c055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14c80c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14c055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14c80c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14c055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14c80c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14c055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14c80c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14c055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14c80c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14c055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14c80c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14c055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14c80c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14c055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14c80c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14c055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14c80c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14c056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14c80c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14c056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14c80c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14c056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14c80c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14c056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14c80c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14c056090 '__clang_svint8x3_t'
|-TypedefDecl 0x14c80c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14c0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14c80c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14c0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14c80c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14c0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14c80c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14c056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14c80ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14c056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14c80cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14c056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14c80cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14c056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14c80cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14c056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14c80d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14c0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14c80d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14c0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14c80d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14c0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14c80d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14c056210 '__clang_svint8x4_t'
|-TypedefDecl 0x14c80d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14c056230 '__clang_svint16x4_t'
|-TypedefDecl 0x14c80d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14c056250 '__clang_svint32x4_t'
|-TypedefDecl 0x14c80d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14c056270 '__clang_svint64x4_t'
|-TypedefDecl 0x14c80d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14c056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14c80d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14c0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14c80d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14c0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14c80d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14c0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14c80d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14c056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14c80d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14c056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14c80d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14c056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14c80d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14c056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14c80da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14c056390 '__SVBool_t'
|-TypedefDecl 0x14c80da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14c0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14c80dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14c0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14c80db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14c0563f0 '__SVCount_t'
|-TypedefDecl 0x14c80dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14c80dbb0 'char *'
|   `-BuiltinType 0x14c0556b0 'char'
|-TypedefDecl 0x14c80dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14c80dbb0 'char *'
|   `-BuiltinType 0x14c0556b0 'char'
|-FunctionDecl 0x14c80df98 <dataset_diviso_filec/func6042_nonvuln.c:1:1, line:38:1> line:1:1 _g_str_escape_full 'int (const char *, const char *, const char, const char)'
| |-ParmVarDecl 0x14c80dcd8 <col:21, col:33> col:33 used str 'const char *'
| |-ParmVarDecl 0x14c80dd58 <line:2:7, col:19> col:19 used meta_chars 'const char *'
| |-ParmVarDecl 0x14c80ddd0 <line:3:7, col:19> col:19 used prefix 'const char'
| |-ParmVarDecl 0x14c80de48 <line:4:7, col:19> col:19 used postfix 'const char'
| `-CompoundStmt 0x14c82b0a0 <line:5:1, line:38:1>
|   |-DeclStmt 0x14c826a10 <line:6:2, col:48>
|   | `-VarDecl 0x14c80e0c0 <col:2, col:47> col:14 used meta_chars_n 'int' cinit
|   |   `-ImplicitCastExpr 0x14c8269f8 <col:29, col:47> 'int' <IntegralCast>
|   |     `-CallExpr 0x14c8269b8 <col:29, col:47> 'unsigned long'
|   |       |-ImplicitCastExpr 0x14c8269a0 <col:29> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x14c826910 <col:29> 'unsigned long (const char *)' Function 0x14c8267a0 'strlen' 'unsigned long (const char *)'
|   |       `-ImplicitCastExpr 0x14c8269e0 <col:37> 'const char *' <LValueToRValue>
|   |         `-DeclRefExpr 0x14c826930 <col:37> 'const char *' lvalue ParmVar 0x14c80dd58 'meta_chars' 'const char *'
|   |-DeclStmt 0x14c826aa8 <line:7:2, col:21>
|   | `-VarDecl 0x14c826a40 <col:2, col:14> col:14 used escaped 'char *'
|   |-DeclStmt 0x14c826c80 <line:8:2, col:39>
|   | |-VarDecl 0x14c826ad8 <col:2, col:14> col:14 used i 'int'
|   | |-VarDecl 0x14c826b58 <col:2, col:17> col:17 used new_l 'int'
|   | `-VarDecl 0x14c826bd8 <col:2, col:38> col:24 used extra_chars 'int' cinit
|   |   `-IntegerLiteral 0x14c826c40 <col:38> 'int' 0
|   |-DeclStmt 0x14c826d18 <line:9:2, col:15>
|   | `-VarDecl 0x14c826cb0 <col:2, col:14> col:14 used s 'const char *'
|   |-DeclStmt 0x14c826db0 <line:10:2, col:15>
|   | `-VarDecl 0x14c826d48 <col:2, col:14> col:14 used t 'char *'
|   |-IfStmt 0x14c826ec0 <line:12:2, line:13:10>
|   | |-BinaryOperator 0x14c826e58 <line:12:6, col:13> 'int' contains-errors '=='
|   | | |-DeclRefExpr 0x14c826dc8 <col:6> 'const char *' lvalue ParmVar 0x14c80dcd8 'str' 'const char *'
|   | | `-RecoveryExpr 0x14c826e38 <col:13> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x14c826eb0 <line:13:3, col:10>
|   |   `-RecoveryExpr 0x14c826e90 <col:10> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x14c826f50 <line:15:2, line:16:14>
|   | |-ImplicitCastExpr 0x14c826f00 <line:15:6> 'char' <LValueToRValue>
|   | | `-DeclRefExpr 0x14c826ee0 <col:6> 'const char' lvalue ParmVar 0x14c80ddd0 'prefix' 'const char'
|   | `-UnaryOperator 0x14c826f38 <line:16:3, col:14> 'int' postfix '++'
|   |   `-DeclRefExpr 0x14c826f18 <col:3> 'int' lvalue Var 0x14c826bd8 'extra_chars' 'int'
|   |-IfStmt 0x14c826fe0 <line:17:2, line:18:14>
|   | |-ImplicitCastExpr 0x14c826f90 <line:17:6> 'char' <LValueToRValue>
|   | | `-DeclRefExpr 0x14c826f70 <col:6> 'const char' lvalue ParmVar 0x14c80de48 'postfix' 'const char'
|   | `-UnaryOperator 0x14c826fc8 <line:18:3, col:14> 'int' postfix '++'
|   |   `-DeclRefExpr 0x14c826fa8 <col:3> 'int' lvalue Var 0x14c826bd8 'extra_chars' 'int'
|   |-BinaryOperator 0x14c8273b0 <line:20:2, col:79> 'int' '='
|   | |-DeclRefExpr 0x14c827000 <col:2> 'int' lvalue Var 0x14c826b58 'new_l' 'int'
|   | `-ImplicitCastExpr 0x14c827398 <col:10, col:79> 'int' <IntegralCast>
|   |   `-BinaryOperator 0x14c827378 <col:10, col:79> 'unsigned long' '+'
|   |     |-CallExpr 0x14c827090 <col:10, col:21> 'unsigned long'
|   |     | |-ImplicitCastExpr 0x14c827078 <col:10> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |     | | `-DeclRefExpr 0x14c827020 <col:10> 'unsigned long (const char *)' Function 0x14c8267a0 'strlen' 'unsigned long (const char *)'
|   |     | `-ImplicitCastExpr 0x14c8270b8 <col:18> 'const char *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x14c827040 <col:18> 'const char *' lvalue ParmVar 0x14c80dcd8 'str' 'const char *'
|   |     `-ImplicitCastExpr 0x14c827360 <col:25, col:79> 'unsigned long' <IntegralCast>
|   |       `-ParenExpr 0x14c827340 <col:25, col:79> 'int'
|   |         `-BinaryOperator 0x14c827320 <col:26, col:68> 'int' '*'
|   |           |-CallExpr 0x14c827288 <col:26, col:64> 'int'
|   |           | |-ImplicitCastExpr 0x14c827270 <col:26> 'int (*)()' <FunctionToPointerDecay>
|   |           | | `-DeclRefExpr 0x14c8271e0 <col:26> 'int ()' Function 0x14c827128 'count_chars_to_escape' 'int ()'
|   |           | |-ImplicitCastExpr 0x14c8272b8 <col:49> 'const char *' <LValueToRValue>
|   |           | | `-DeclRefExpr 0x14c827200 <col:49> 'const char *' lvalue ParmVar 0x14c80dcd8 'str' 'const char *'
|   |           | `-ImplicitCastExpr 0x14c8272d0 <col:54> 'const char *' <LValueToRValue>
|   |           |   `-DeclRefExpr 0x14c827220 <col:54> 'const char *' lvalue ParmVar 0x14c80dd58 'meta_chars' 'const char *'
|   |           `-ImplicitCastExpr 0x14c827308 <col:68> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x14c8272e8 <col:68> 'int' lvalue Var 0x14c826bd8 'extra_chars' 'int'
|   |-BinaryOperator 0x14c8275c0 <line:21:2, col:31> 'char *' '='
|   | |-DeclRefExpr 0x14c8273d0 <col:2> 'char *' lvalue Var 0x14c826a40 'escaped' 'char *'
|   | `-ImplicitCastExpr 0x14c8275a8 <col:12, col:31> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x14c827580 <col:12, col:31> 'int'
|   |     |-ImplicitCastExpr 0x14c827568 <col:12> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x14c8274d0 <col:12> 'int ()' Function 0x14c827418 'g_malloc' 'int ()'
|   |     `-BinaryOperator 0x14c827548 <col:22, col:30> 'int' '+'
|   |       |-ImplicitCastExpr 0x14c827530 <col:22> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x14c8274f0 <col:22> 'int' lvalue Var 0x14c826b58 'new_l' 'int'
|   |       `-IntegerLiteral 0x14c827510 <col:30> 'int' 1
|   |-BinaryOperator 0x14c82a638 <line:23:2, col:6> 'const char *' '='
|   | |-DeclRefExpr 0x14c8275e0 <col:2> 'const char *' lvalue Var 0x14c826cb0 's' 'const char *'
|   | `-ImplicitCastExpr 0x14c82a620 <col:6> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x14c82a600 <col:6> 'const char *' lvalue ParmVar 0x14c80dcd8 'str' 'const char *'
|   |-BinaryOperator 0x14c82a6b0 <line:24:2, col:6> 'char *' '='
|   | |-DeclRefExpr 0x14c82a658 <col:2> 'char *' lvalue Var 0x14c826d48 't' 'char *'
|   | `-ImplicitCastExpr 0x14c82a698 <col:6> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x14c82a678 <col:6> 'char *' lvalue Var 0x14c826a40 'escaped' 'char *'
|   |-WhileStmt 0x14c82af78 <line:25:2, line:34:2>
|   | |-ImplicitCastExpr 0x14c82a720 <line:25:9, col:10> 'char' <LValueToRValue>
|   | | `-UnaryOperator 0x14c82a708 <col:9, col:10> 'const char' lvalue prefix '*' cannot overflow
|   | |   `-ImplicitCastExpr 0x14c82a6f0 <col:10> 'const char *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x14c82a6d0 <col:10> 'const char *' lvalue Var 0x14c826cb0 's' 'const char *'
|   | `-CompoundStmt 0x14c82af50 <col:13, line:34:2>
|   |   |-IfStmt 0x14c82acf8 <line:29:3, line:30:11>
|   |   | |-BinaryOperator 0x14c82ac30 <line:29:7, col:17> 'int' contains-errors '&&'
|   |   | | |-RecoveryExpr 0x14c82ac10 <col:7> '<dependent type>' contains-errors lvalue
|   |   | | `-DeclRefExpr 0x14c82abd0 <col:17> 'const char' lvalue ParmVar 0x14c80ddd0 'prefix' 'const char'
|   |   | `-BinaryOperator 0x14c82acd8 <line:30:4, col:11> 'char' '='
|   |   |   |-UnaryOperator 0x14c82ac88 <col:4, col:6> 'char' lvalue prefix '*' cannot overflow
|   |   |   | `-UnaryOperator 0x14c82ac70 <col:5, col:6> 'char *' postfix '++'
|   |   |   |   `-DeclRefExpr 0x14c82ac50 <col:5> 'char *' lvalue Var 0x14c826d48 't' 'char *'
|   |   |   `-ImplicitCastExpr 0x14c82acc0 <col:11> 'char' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x14c82aca0 <col:11> 'const char' lvalue ParmVar 0x14c80ddd0 'prefix' 'const char'
|   |   |-BinaryOperator 0x14c82add0 <line:31:3, col:12> 'char' '='
|   |   | |-UnaryOperator 0x14c82ad50 <col:3, col:5> 'char' lvalue prefix '*' cannot overflow
|   |   | | `-UnaryOperator 0x14c82ad38 <col:4, col:5> 'char *' postfix '++'
|   |   | |   `-DeclRefExpr 0x14c82ad18 <col:4> 'char *' lvalue Var 0x14c826d48 't' 'char *'
|   |   | `-ImplicitCastExpr 0x14c82adb8 <col:10, col:12> 'char' <LValueToRValue>
|   |   |   `-UnaryOperator 0x14c82ada0 <col:10, col:12> 'const char' lvalue prefix '*' cannot overflow
|   |   |     `-UnaryOperator 0x14c82ad88 <col:11, col:12> 'const char *' postfix '++'
|   |   |       `-DeclRefExpr 0x14c82ad68 <col:11> 'const char *' lvalue Var 0x14c826cb0 's' 'const char *'
|   |   `-IfStmt 0x14c82af30 <line:32:3, line:33:11>
|   |     |-BinaryOperator 0x14c82ae68 <line:32:7, col:17> 'int' contains-errors '&&'
|   |     | |-RecoveryExpr 0x14c82ae48 <col:7> '<dependent type>' contains-errors lvalue
|   |     | `-DeclRefExpr 0x14c82ae08 <col:17> 'const char' lvalue ParmVar 0x14c80de48 'postfix' 'const char'
|   |     `-BinaryOperator 0x14c82af10 <line:33:4, col:11> 'char' '='
|   |       |-UnaryOperator 0x14c82aec0 <col:4, col:6> 'char' lvalue prefix '*' cannot overflow
|   |       | `-UnaryOperator 0x14c82aea8 <col:5, col:6> 'char *' postfix '++'
|   |       |   `-DeclRefExpr 0x14c82ae88 <col:5> 'char *' lvalue Var 0x14c826d48 't' 'char *'
|   |       `-ImplicitCastExpr 0x14c82aef8 <col:11> 'char' <LValueToRValue>
|   |         `-DeclRefExpr 0x14c82aed8 <col:11> 'const char' lvalue ParmVar 0x14c80de48 'postfix' 'const char'
|   |-BinaryOperator 0x14c82b020 <line:35:2, col:7> 'char' '='
|   | |-UnaryOperator 0x14c82afd0 <col:2, col:3> 'char' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x14c82afb8 <col:3> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x14c82af98 <col:3> 'char *' lvalue Var 0x14c826d48 't' 'char *'
|   | `-ImplicitCastExpr 0x14c82b008 <col:7> 'char' <IntegralCast>
|   |   `-IntegerLiteral 0x14c82afe8 <col:7> 'int' 0
|   `-ReturnStmt 0x14c82b090 <line:37:2, col:9>
|     `-ImplicitCastExpr 0x14c82b078 <col:9> 'int' <PointerToIntegral>
|       `-ImplicitCastExpr 0x14c82b060 <col:9> 'char *' <LValueToRValue>
|         `-DeclRefExpr 0x14c82b040 <col:9> 'char *' lvalue Var 0x14c826a40 'escaped' 'char *'
`-FunctionDecl 0x14c8267a0 <line:6:29> col:29 implicit used strlen 'unsigned long (const char *)' extern
  |-ParmVarDecl 0x14c8268a0 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x14c826848 <<invalid sloc>> Implicit 902
