TranslationUnitDecl 0x135855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1358564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x135855bd0 '__int128'
|-TypedefDecl 0x135856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x135855bf0 'unsigned __int128'
|-TypedefDecl 0x13600be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13600bc00 'struct __NSConstantString_tag'
|   `-Record 0x135856580 '__NSConstantString_tag'
|-TypedefDecl 0x13600be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x135855d90 '__SVInt8_t'
|-TypedefDecl 0x13600bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x135855db0 '__SVInt16_t'
|-TypedefDecl 0x13600bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x135855dd0 '__SVInt32_t'
|-TypedefDecl 0x13600bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x135855df0 '__SVInt64_t'
|-TypedefDecl 0x13600c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x135855e10 '__SVUint8_t'
|-TypedefDecl 0x13600c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x135855e30 '__SVUint16_t'
|-TypedefDecl 0x13600c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x135855e50 '__SVUint32_t'
|-TypedefDecl 0x13600c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x135855e70 '__SVUint64_t'
|-TypedefDecl 0x13600c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x135855e90 '__SVFloat16_t'
|-TypedefDecl 0x13600c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x135855eb0 '__SVFloat32_t'
|-TypedefDecl 0x13600c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x135855ed0 '__SVFloat64_t'
|-TypedefDecl 0x13600c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x135855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13600c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x135855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13600c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x135855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13600c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x135855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13600c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x135855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13600c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x135855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13600c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x135855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13600c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x135855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13600c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x135855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13600c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x135856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13600c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x135856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13600c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x135856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13600c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x135856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13600c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x135856090 '__clang_svint8x3_t'
|-TypedefDecl 0x13600c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1358560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13600c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1358560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13600c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1358560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13600c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x135856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13600ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x135856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13600cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x135856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13600cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x135856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13600cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x135856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13600d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1358561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13600d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1358561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13600d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1358561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13600d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x135856210 '__clang_svint8x4_t'
|-TypedefDecl 0x13600d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x135856230 '__clang_svint16x4_t'
|-TypedefDecl 0x13600d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x135856250 '__clang_svint32x4_t'
|-TypedefDecl 0x13600d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x135856270 '__clang_svint64x4_t'
|-TypedefDecl 0x13600d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x135856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13600d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1358562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13600d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1358562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13600d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1358562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13600d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x135856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13600d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x135856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13600d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x135856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13600d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x135856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13600da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x135856390 '__SVBool_t'
|-TypedefDecl 0x13600da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1358563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13600dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1358563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13600db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1358563f0 '__SVCount_t'
|-TypedefDecl 0x13600dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13600dbb0 'char *'
|   `-BuiltinType 0x1358556b0 'char'
|-TypedefDecl 0x13600dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13600dbb0 'char *'
|   `-BuiltinType 0x1358556b0 'char'
`-FunctionDecl 0x136026748 <dataset_diviso_filec/func2508_nonvuln.c:1:1, line:37:1> line:1:5 message_parser_parse_next_block 'int (struct message_parser_ctx *, struct message_block *)'
  |-ParmVarDecl 0x13600e248 <col:37, col:64> col:64 used ctx 'struct message_parser_ctx *'
  |-ParmVarDecl 0x136026628 <line:2:9, col:31> col:31 used block_r 'struct message_block *'
  `-CompoundStmt 0x136029fc0 <line:3:1, line:37:1>
    |-DeclStmt 0x1360268c8 <line:4:2, col:9>
    | `-VarDecl 0x136026860 <col:2, col:6> col:6 used ret 'int'
    |-CallExpr 0x136026a98 <line:7:2, col:16> 'int'
    | |-ImplicitCastExpr 0x136026a80 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x136026a10 <col:2> 'int ()' Function 0x136026958 'i_zero' 'int ()'
    | `-ImplicitCastExpr 0x136026ac0 <col:9> 'struct message_block *' <LValueToRValue>
    |   `-DeclRefExpr 0x136026a30 <col:9> 'struct message_block *' lvalue ParmVar 0x136026628 'block_r' 'struct message_block *'
    |-WhileStmt 0x1360273b8 <line:9:2, line:19:2>
    | |-BinaryOperator 0x136026c28 <line:9:9, col:56> 'int' contains-errors '=='
    | | |-ParenExpr 0x136026be8 <col:9, col:51> 'int' contains-errors
    | | | `-BinaryOperator 0x136026bc8 <col:10, col:50> 'int' contains-errors '='
    | | |   |-DeclRefExpr 0x136026ad8 <col:10> 'int' lvalue Var 0x136026860 'ret' 'int'
    | | |   `-CallExpr 0x136026b98 <col:16, col:50> '<dependent type>' contains-errors
    | | |     |-RecoveryExpr 0x136026b30 <col:16, col:21> '<dependent type>' contains-errors lvalue
    | | |     | `-DeclRefExpr 0x136026af8 <col:16> 'struct message_parser_ctx *' lvalue ParmVar 0x13600e248 'ctx' 'struct message_parser_ctx *'
    | | |     |-DeclRefExpr 0x136026b58 <col:38> 'struct message_parser_ctx *' lvalue ParmVar 0x13600e248 'ctx' 'struct message_parser_ctx *'
    | | |     `-DeclRefExpr 0x136026b78 <col:43> 'struct message_block *' lvalue ParmVar 0x136026628 'block_r' 'struct message_block *'
    | | `-IntegerLiteral 0x136026c08 <col:56> 'int' 0
    | `-CompoundStmt 0x136027390 <col:59, line:19:2>
    |   |-BinaryOperator 0x136026ea0 <line:10:3, col:53> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x136026c48 <col:3> 'int' lvalue Var 0x136026860 'ret' 'int'
    |   | `-CallExpr 0x136026e68 <col:9, col:53> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x136026d48 <col:9> 'int ()' Function 0x136026c90 'message_parser_read_more' 'int ()'
    |   |   |-DeclRefExpr 0x136026d68 <col:34> 'struct message_parser_ctx *' lvalue ParmVar 0x13600e248 'ctx' 'struct message_parser_ctx *'
    |   |   |-DeclRefExpr 0x136026d88 <col:39> 'struct message_block *' lvalue ParmVar 0x136026628 'block_r' 'struct message_block *'
    |   |   `-UnaryOperator 0x136026e50 <col:48, col:49> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |     `-RecoveryExpr 0x136026e30 <col:49> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x136027188 <line:11:3, line:14:3>
    |   | |-BinaryOperator 0x136026f18 <line:11:7, col:14> 'int' '=='
    |   | | |-ImplicitCastExpr 0x136026f00 <col:7> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x136026ec0 <col:7> 'int' lvalue Var 0x136026860 'ret' 'int'
    |   | | `-IntegerLiteral 0x136026ee0 <col:14> 'int' 0
    |   | `-CompoundStmt 0x136027168 <col:17, line:14:3>
    |   |   |-CallExpr 0x136027110 <line:12:4, col:34> '<dependent type>' contains-errors
    |   |   | |-DeclRefExpr 0x136027018 <col:4> 'int ()' Function 0x136026f60 'i_assert' 'int ()'
    |   |   | `-UnaryOperator 0x1360270f8 <col:13, col:26> '<dependent type>' contains-errors prefix '!' cannot overflow
    |   |   |   `-ImplicitCastExpr 0x1360270e0 <col:14, col:26> '<dependent type>' contains-errors <LValueToRValue>
    |   |   |     `-CXXDependentScopeMemberExpr 0x136027098 <col:14, col:26> '<dependent type>' contains-errors lvalue ->blocking
    |   |   |       `-RecoveryExpr 0x136027070 <col:14, col:19> '<dependent type>' contains-errors lvalue
    |   |   |         `-DeclRefExpr 0x136027038 <col:14> 'struct message_parser_ctx *' lvalue ParmVar 0x13600e248 'ctx' 'struct message_parser_ctx *'
    |   |   `-ReturnStmt 0x136027158 <line:13:4, col:11>
    |   |     `-IntegerLiteral 0x136027138 <col:11> 'int' 0
    |   `-IfStmt 0x136027370 <line:15:3, line:18:3>
    |     |-BinaryOperator 0x136027218 <line:15:7, col:15> 'int' '=='
    |     | |-ImplicitCastExpr 0x136027200 <col:7> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x1360271a8 <col:7> 'int' lvalue Var 0x136026860 'ret' 'int'
    |     | `-UnaryOperator 0x1360271e8 <col:14, col:15> 'int' prefix '-'
    |     |   `-IntegerLiteral 0x1360271c8 <col:15> 'int' 1
    |     `-CompoundStmt 0x136027358 <col:18, line:18:3>
    |       `-CallExpr 0x136027318 <line:16:4, col:17> '<dependent type>' contains-errors
    |         |-DeclRefExpr 0x136027238 <col:4> 'int ()' Function 0x136026f60 'i_assert' 'int ()'
    |         `-UnaryOperator 0x136027300 <col:13, col:14> '<dependent type>' contains-errors prefix '!' cannot overflow
    |           `-ImplicitCastExpr 0x1360272e8 <col:14> '<dependent type>' contains-errors <LValueToRValue>
    |             `-RecoveryExpr 0x1360272c8 <col:14> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x136027498 <line:21:2, col:23> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x136027410 <col:2, col:11> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x1360273d8 <col:2> 'struct message_block *' lvalue ParmVar 0x136026628 'block_r' 'struct message_block *'
    | `-RecoveryExpr 0x136027470 <col:18, col:23> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x136027438 <col:18> 'struct message_parser_ctx *' lvalue ParmVar 0x13600e248 'ctx' 'struct message_parser_ctx *'
    |-IfStmt 0x136029e28 <line:23:2, line:30:2>
    | |-BinaryOperator 0x136029898 <line:23:6, col:30> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x136029838 <col:6, col:12> 'int' '<'
    | | | |-ImplicitCastExpr 0x136029820 <col:6> 'int' <LValueToRValue>
    | | | | `-DeclRefExpr 0x1360274b8 <col:6> 'int' lvalue Var 0x136026860 'ret' 'int'
    | | | `-IntegerLiteral 0x1360274d8 <col:12> 'int' 0
    | | `-BinaryOperator 0x136029878 <col:17, col:30> 'int' contains-errors '!='
    | |   |-RecoveryExpr 0x136027568 <col:17, col:22> '<dependent type>' contains-errors lvalue
    | |   | `-DeclRefExpr 0x136027530 <col:17> 'struct message_parser_ctx *' lvalue ParmVar 0x13600e248 'ctx' 'struct message_parser_ctx *'
    | |   `-RecoveryExpr 0x136029858 <col:30> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x136029e10 <col:36, line:30:2>
    |   `-WhileStmt 0x136029df0 <line:28:3, line:29:27>
    |     |-RecoveryExpr 0x136029c58 <line:28:10, col:31> '_Bool' contains-errors
    |     `-CallExpr 0x136029db0 <line:29:4, col:27> 'int'
    |       |-ImplicitCastExpr 0x136029d98 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x136029d58 <col:4> 'int ()' Function 0x136029ca0 'message_part_finish' 'int ()'
    |       `-ImplicitCastExpr 0x136029dd8 <col:24> 'struct message_parser_ctx *' <LValueToRValue>
    |         `-DeclRefExpr 0x136029d78 <col:24> 'struct message_parser_ctx *' lvalue ParmVar 0x13600e248 'ctx' 'struct message_parser_ctx *'
    |-IfStmt 0x136029f58 <line:32:2, line:35:2>
    | |-BinaryOperator 0x136029ec8 <line:32:6, col:23> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x136029e80 <col:6, col:15> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x136029e48 <col:6> 'struct message_block *' lvalue ParmVar 0x136026628 'block_r' 'struct message_block *'
    | | `-IntegerLiteral 0x136029ea8 <col:23> 'int' 0
    | `-CompoundStmt 0x136029f48 <col:26, line:35:2>
    `-ReturnStmt 0x136029fb0 <line:36:2, col:9>
      `-ImplicitCastExpr 0x136029f98 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x136029f78 <col:9> 'int' lvalue Var 0x136026860 'ret' 'int'
