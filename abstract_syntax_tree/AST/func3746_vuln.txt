TranslationUnitDecl 0x121055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1210564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x121055bd0 '__int128'
|-TypedefDecl 0x121056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x121055bf0 'unsigned __int128'
|-TypedefDecl 0x121126a30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x121126800 'struct __NSConstantString_tag'
|   `-Record 0x121056580 '__NSConstantString_tag'
|-TypedefDecl 0x121126a98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x121055d90 '__SVInt8_t'
|-TypedefDecl 0x121126b00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x121055db0 '__SVInt16_t'
|-TypedefDecl 0x121126b68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x121055dd0 '__SVInt32_t'
|-TypedefDecl 0x121126bd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x121055df0 '__SVInt64_t'
|-TypedefDecl 0x121126c38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x121055e10 '__SVUint8_t'
|-TypedefDecl 0x121126ca0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x121055e30 '__SVUint16_t'
|-TypedefDecl 0x121126d08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x121055e50 '__SVUint32_t'
|-TypedefDecl 0x121126d70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x121055e70 '__SVUint64_t'
|-TypedefDecl 0x121126dd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x121055e90 '__SVFloat16_t'
|-TypedefDecl 0x121126e40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x121055eb0 '__SVFloat32_t'
|-TypedefDecl 0x121126ea8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x121055ed0 '__SVFloat64_t'
|-TypedefDecl 0x121126f10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x121055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x121126f78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x121055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x121126fe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x121055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x121127048 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x121055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1211270b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x121055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x121127118 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x121055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x121127180 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x121055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1211271e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x121055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x121127250 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x121055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1211272b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x121056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x121127320 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x121056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x121127388 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x121056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1211273f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x121056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x121127458 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x121056090 '__clang_svint8x3_t'
|-TypedefDecl 0x1211274c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1210560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x121127528 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1210560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x121127590 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1210560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x1211275f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x121056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x121127660 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x121056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x1211276c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x121056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x121127730 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x121056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x121127798 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x121056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x121128000 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1210561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x121128068 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1210561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1211280d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1210561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x121128138 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x121056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1211281a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x121056230 '__clang_svint16x4_t'
|-TypedefDecl 0x121128208 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x121056250 '__clang_svint32x4_t'
|-TypedefDecl 0x121128270 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x121056270 '__clang_svint64x4_t'
|-TypedefDecl 0x1211282d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x121056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x121128340 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1210562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1211283a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1210562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x121128410 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1210562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x121128478 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x121056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1211284e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x121056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x121128548 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x121056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1211285b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x121056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x121128618 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x121056390 '__SVBool_t'
|-TypedefDecl 0x121128680 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1210563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1211286e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1210563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x121128750 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1210563f0 '__SVCount_t'
|-TypedefDecl 0x1211287f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1211287b0 'char *'
|   `-BuiltinType 0x1210556b0 'char'
|-TypedefDecl 0x121128868 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1211287b0 'char *'
|   `-BuiltinType 0x1210556b0 'char'
|-FunctionDecl 0x121128a58 <dataset_diviso_filec/func3746_vuln.c:1:1, line:52:1> line:1:17 invalid color_string_to_rgba 'int (const char *, int)' static
| |-ParmVarDecl 0x1211288f0 <col:38, col:50> col:50 used p 'const char *'
| |-ParmVarDecl 0x121128970 <col:53, col:57> col:57 used len 'int'
| `-CompoundStmt 0x121146400 <line:2:1, line:52:1>
|   |-DeclStmt 0x121128b90 <line:4:5, col:28>
|   | `-VarDecl 0x121128b28 <col:5, col:23> col:23 referenced invalid entry 'const int *'
|   |-DeclStmt 0x121128cb8 <line:5:5, col:25>
|   | `-VarDecl 0x121128c50 <col:5, col:24> col:10 used color_name 'char[100]'
|   `-IfStmt 0x121144fc0 <line:7:5, line:50:5> has_else
|     |-BinaryOperator 0x121128d68 <line:7:9, col:15> 'int' '=='
|     | |-ImplicitCastExpr 0x121128d50 <col:9, col:10> 'int' <IntegralCast>
|     | | `-ImplicitCastExpr 0x121128d38 <col:9, col:10> 'char' <LValueToRValue>
|     | |   `-UnaryOperator 0x121128d08 <col:9, col:10> 'const char' lvalue prefix '*' cannot overflow
|     | |     `-ImplicitCastExpr 0x121128cf0 <col:10> 'const char *' <LValueToRValue>
|     | |       `-DeclRefExpr 0x121128cd0 <col:10> 'const char *' lvalue ParmVar 0x1211288f0 'p' 'const char *'
|     | `-CharacterLiteral 0x121128d20 <col:15> 'int' 35
|     |-CompoundStmt 0x121144170 <col:20, line:36:5>
|     | |-UnaryOperator 0x121128da8 <line:8:9, col:10> 'const char *' postfix '++'
|     | | `-DeclRefExpr 0x121128d88 <col:9> 'const char *' lvalue ParmVar 0x1211288f0 'p' 'const char *'
|     | |-UnaryOperator 0x121128de0 <line:9:9, col:12> 'int' postfix '--'
|     | | `-DeclRefExpr 0x121128dc0 <col:9> 'int' lvalue ParmVar 0x121128970 'len' 'int'
|     | `-IfStmt 0x121144140 <line:10:9, line:35:9> has_else
|     |   |-BinaryOperator 0x121128e50 <line:10:13, col:20> 'int' '=='
|     |   | |-ImplicitCastExpr 0x121128e38 <col:13> 'int' <LValueToRValue>
|     |   | | `-DeclRefExpr 0x121128df8 <col:13> 'int' lvalue ParmVar 0x121128970 'len' 'int'
|     |   | `-IntegerLiteral 0x121128e18 <col:20> 'int' 3
|     |   |-CompoundStmt 0x121142490 <col:23, line:14:9>
|     |   `-IfStmt 0x121144110 <col:16, line:35:9> has_else
|     |     |-BinaryOperator 0x1211424f8 <line:14:20, col:27> 'int' '=='
|     |     | |-ImplicitCastExpr 0x1211424e0 <col:20> 'int' <LValueToRValue>
|     |     | | `-DeclRefExpr 0x1211424a0 <col:20> 'int' lvalue ParmVar 0x121128970 'len' 'int'
|     |     | `-IntegerLiteral 0x1211424c0 <col:27> 'int' 4
|     |     |-CompoundStmt 0x121142b18 <col:30, line:19:9>
|     |     `-IfStmt 0x1211440e0 <col:16, line:35:9> has_else
|     |       |-BinaryOperator 0x121142b80 <line:19:20, col:27> 'int' '=='
|     |       | |-ImplicitCastExpr 0x121142b68 <col:20> 'int' <LValueToRValue>
|     |       | | `-DeclRefExpr 0x121142b28 <col:20> 'int' lvalue ParmVar 0x121128970 'len' 'int'
|     |       | `-IntegerLiteral 0x121142b48 <col:27> 'int' 6
|     |       |-CompoundStmt 0x121143458 <col:30, line:26:9>
|     |       `-IfStmt 0x1211440c0 <col:16, line:35:9>
|     |         |-BinaryOperator 0x1211434c0 <line:26:20, col:27> 'int' '=='
|     |         | |-ImplicitCastExpr 0x1211434a8 <col:20> 'int' <LValueToRValue>
|     |         | | `-DeclRefExpr 0x121143468 <col:20> 'int' lvalue ParmVar 0x121128970 'len' 'int'
|     |         | `-IntegerLiteral 0x121143488 <col:27> 'int' 8
|     |         `-CompoundStmt 0x1211440b0 <col:30, line:35:9>
|     `-CompoundStmt 0x121144f98 <line:36:12, line:50:5>
|       |-CallExpr 0x121144978 <line:37:9, col:35> 'char *'
|       | |-ImplicitCastExpr 0x121144960 <col:9> 'char *(*)(char *, const char *, unsigned long)' <FunctionToPointerDecay>
|       | | `-DeclRefExpr 0x121144860 <col:9> 'char *(char *, const char *, unsigned long)' Function 0x121144610 'strncpy' 'char *(char *, const char *, unsigned long)'
|       | |-ImplicitCastExpr 0x1211449b0 <col:17> 'char *' <ArrayToPointerDecay>
|       | | `-DeclRefExpr 0x121144880 <col:17> 'char[100]' lvalue Var 0x121128c50 'color_name' 'char[100]'
|       | |-ImplicitCastExpr 0x1211449c8 <col:29> 'const char *' <LValueToRValue>
|       | | `-DeclRefExpr 0x1211448a0 <col:29> 'const char *' lvalue ParmVar 0x1211288f0 'p' 'const char *'
|       | `-ImplicitCastExpr 0x1211449f8 <col:32> 'unsigned long' <IntegralCast>
|       |   `-ImplicitCastExpr 0x1211449e0 <col:32> 'int' <LValueToRValue>
|       |     `-DeclRefExpr 0x1211448c0 <col:32> 'int' lvalue ParmVar 0x121128970 'len' 'int'
|       |-BinaryOperator 0x121144ad0 <line:38:9, col:27> 'char' '='
|       | |-ArraySubscriptExpr 0x121144a80 <col:9, col:23> 'char' lvalue
|       | | |-ImplicitCastExpr 0x121144a50 <col:9> 'char *' <ArrayToPointerDecay>
|       | | | `-DeclRefExpr 0x121144a10 <col:9> 'char[100]' lvalue Var 0x121128c50 'color_name' 'char[100]'
|       | | `-ImplicitCastExpr 0x121144a68 <col:20> 'int' <LValueToRValue>
|       | |   `-DeclRefExpr 0x121144a30 <col:20> 'int' lvalue ParmVar 0x121128970 'len' 'int'
|       | `-ImplicitCastExpr 0x121144ab8 <col:27> 'char' <IntegralCast>
|       |   `-CharacterLiteral 0x121144aa0 <col:27> 'int' 0
|       `-IfStmt 0x121144f10 <line:46:9, line:47:20>
|         |-UnaryOperator 0x121144eb0 <line:46:13, col:14> '<dependent type>' contains-errors prefix '!' cannot overflow
|         | `-ImplicitCastExpr 0x121144e98 <col:14> '<dependent type>' contains-errors <LValueToRValue>
|         |   `-RecoveryExpr 0x121144e78 <col:14> '<dependent type>' contains-errors lvalue
|         `-ReturnStmt 0x121144f00 <line:47:13, col:20>
|           `-RecoveryExpr 0x121144ee0 <col:20> '<dependent type>' contains-errors lvalue
`-FunctionDecl 0x121144610 <line:37:9> col:9 implicit used strncpy 'char *(char *, const char *, unsigned long)' extern
  |-ParmVarDecl 0x121144710 <<invalid sloc>> <invalid sloc> 'char *'
  |-ParmVarDecl 0x121144778 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x1211447e0 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x1211446b8 <<invalid sloc>> Implicit 886
