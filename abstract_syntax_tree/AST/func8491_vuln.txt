TranslationUnitDecl 0x124055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1240564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x124055bd0 '__int128'
|-TypedefDecl 0x124056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x124055bf0 'unsigned __int128'
|-TypedefDecl 0x124126630 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x124126400 'struct __NSConstantString_tag'
|   `-Record 0x124056580 '__NSConstantString_tag'
|-TypedefDecl 0x124126698 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x124055d90 '__SVInt8_t'
|-TypedefDecl 0x124126700 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x124055db0 '__SVInt16_t'
|-TypedefDecl 0x124126768 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x124055dd0 '__SVInt32_t'
|-TypedefDecl 0x1241267d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x124055df0 '__SVInt64_t'
|-TypedefDecl 0x124126838 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x124055e10 '__SVUint8_t'
|-TypedefDecl 0x1241268a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x124055e30 '__SVUint16_t'
|-TypedefDecl 0x124126908 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x124055e50 '__SVUint32_t'
|-TypedefDecl 0x124126970 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x124055e70 '__SVUint64_t'
|-TypedefDecl 0x1241269d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x124055e90 '__SVFloat16_t'
|-TypedefDecl 0x124126a40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x124055eb0 '__SVFloat32_t'
|-TypedefDecl 0x124126aa8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x124055ed0 '__SVFloat64_t'
|-TypedefDecl 0x124126b10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x124055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x124126b78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x124055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x124126be0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x124055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x124126c48 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x124055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x124126cb0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x124055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x124126d18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x124055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x124126d80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x124055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x124126de8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x124055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x124126e50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x124055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x124126eb8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x124056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x124126f20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x124056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x124126f88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x124056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x124126ff0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x124056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x124127058 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x124056090 '__clang_svint8x3_t'
|-TypedefDecl 0x1241270c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1240560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x124127128 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1240560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x124127190 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1240560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x1241271f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x124056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x124127260 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x124056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x1241272c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x124056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x124127330 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x124056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x124127398 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x124056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x124127c00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1240561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x124127c68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1240561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x124127cd0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1240561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x124127d38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x124056210 '__clang_svint8x4_t'
|-TypedefDecl 0x124127da0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x124056230 '__clang_svint16x4_t'
|-TypedefDecl 0x124127e08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x124056250 '__clang_svint32x4_t'
|-TypedefDecl 0x124127e70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x124056270 '__clang_svint64x4_t'
|-TypedefDecl 0x124127ed8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x124056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x124127f40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1240562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x124127fa8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1240562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x124128010 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1240562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x124128078 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x124056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1241280e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x124056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x124128148 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x124056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1241281b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x124056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x124128218 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x124056390 '__SVBool_t'
|-TypedefDecl 0x124128280 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1240563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1241282e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1240563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x124128350 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1240563f0 '__SVCount_t'
|-TypedefDecl 0x1241283f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1241283b0 'char *'
|   `-BuiltinType 0x1240556b0 'char'
|-TypedefDecl 0x124128468 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1241283b0 'char *'
|   `-BuiltinType 0x1240556b0 'char'
|-FunctionDecl 0x124141298 <dataset_diviso_filec/func8491_vuln.c:1:1, line:33:1> line:1:1 invalid lys_getnext_data 'int (const struct lys_module *, const struct lys_node *, const char *, int, int, const struct lys_node **)'
| |-ParmVarDecl 0x124128a48 <col:18, col:43> col:43 used mod 'const struct lys_module *'
| |-ParmVarDecl 0x124140e28 <col:48, col:71> col:71 used parent 'const struct lys_node *'
| |-ParmVarDecl 0x124140ea8 <col:79, col:91> col:91 used name 'const char *'
| |-ParmVarDecl 0x124140f28 <col:97, col:101> col:101 used nam_len 'int'
| |-ParmVarDecl 0x124140fc0 <line:2:18, col:27> col:27 invalid type 'int'
| |-ParmVarDecl 0x124141118 <col:33, col:57> col:57 used ret 'const struct lys_node **'
| `-CompoundStmt 0x1248090b8 <line:3:1, line:33:1>
|   |-DeclStmt 0x124141400 <line:4:5, col:32>
|   | `-VarDecl 0x124141398 <col:5, col:28> col:28 used node 'const struct lys_node *'
|   |-CallExpr 0x1241416e8 <line:6:5, col:35> 'int'
|   | |-ImplicitCastExpr 0x1241416d0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x124141570 <col:5> 'int ()' Function 0x1241414b8 'assert' 'int ()'
|   | `-BinaryOperator 0x124141678 <col:12, col:31> 'int' '&&'
|   |   |-ParenExpr 0x124141620 <col:12, col:26> 'int'
|   |   | `-BinaryOperator 0x124141600 <col:13, col:20> 'int' '||'
|   |   |   |-ImplicitCastExpr 0x1241415d0 <col:13> 'const struct lys_module *' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x124141590 <col:13> 'const struct lys_module *' lvalue ParmVar 0x124128a48 'mod' 'const struct lys_module *'
|   |   |   `-ImplicitCastExpr 0x1241415e8 <col:20> 'const struct lys_node *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1241415b0 <col:20> 'const struct lys_node *' lvalue ParmVar 0x124140e28 'parent' 'const struct lys_node *'
|   |   `-ImplicitCastExpr 0x124141660 <col:31> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x124141640 <col:31> 'const char *' lvalue ParmVar 0x124140ea8 'name' 'const char *'
|   |-IfStmt 0x124141af0 <line:9:5, line:11:5>
|   | |-UnaryOperator 0x1241418f0 <line:9:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x1241418d8 <col:10> 'const struct lys_module *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1241418b8 <col:10> 'const struct lys_module *' lvalue ParmVar 0x124128a48 'mod' 'const struct lys_module *'
|   | `-CompoundStmt 0x124141ad8 <col:15, line:11:5>
|   |   `-BinaryOperator 0x124141ab8 <line:10:9, col:37> 'const struct lys_module *' '='
|   |     |-DeclRefExpr 0x124141908 <col:9> 'const struct lys_module *' lvalue ParmVar 0x124128a48 'mod' 'const struct lys_module *'
|   |     `-ImplicitCastExpr 0x124141aa0 <col:15, col:37> 'const struct lys_module *' <IntegralToPointer>
|   |       `-CallExpr 0x124141a60 <col:15, col:37> 'int'
|   |         |-ImplicitCastExpr 0x124141a48 <col:15> 'int (*)()' <FunctionToPointerDecay>
|   |         | `-DeclRefExpr 0x124141a08 <col:15> 'int ()' Function 0x124141950 'lys_node_module' 'int ()'
|   |         `-ImplicitCastExpr 0x124141a88 <col:31> 'const struct lys_node *' <LValueToRValue>
|   |           `-DeclRefExpr 0x124141a28 <col:31> 'const struct lys_node *' lvalue ParmVar 0x124140e28 'parent' 'const struct lys_node *'
|   |-BinaryOperator 0x124141b88 <line:14:5, col:12> 'const struct lys_node *' contains-errors '='
|   | |-DeclRefExpr 0x124141b10 <col:5> 'const struct lys_node *' lvalue Var 0x124141398 'node' 'const struct lys_node *'
|   | `-RecoveryExpr 0x124141b68 <col:12> '<dependent type>' contains-errors lvalue
|   `-WhileStmt 0x124809098 <line:15:5, line:30:5>
|     |-ParenExpr 0x124808620 <line:15:12, col:53> 'const struct lys_node *'
|     | `-BinaryOperator 0x124808600 <col:13, col:52> 'const struct lys_node *' '='
|     |   |-DeclRefExpr 0x124141ba8 <col:13> 'const struct lys_node *' lvalue Var 0x124141398 'node' 'const struct lys_node *'
|     |   `-ImplicitCastExpr 0x124141de8 <col:20, col:52> 'const struct lys_node *' <IntegralToPointer>
|     |     `-CallExpr 0x124141d60 <col:20, col:52> 'int'
|     |       |-ImplicitCastExpr 0x124141d48 <col:20> 'int (*)()' <FunctionToPointerDecay>
|     |       | `-DeclRefExpr 0x124141ca8 <col:20> 'int ()' Function 0x124141bf0 'lys_getnext' 'int ()'
|     |       |-ImplicitCastExpr 0x124141da0 <col:32> 'const struct lys_node *' <LValueToRValue>
|     |       | `-DeclRefExpr 0x124141cc8 <col:32> 'const struct lys_node *' lvalue Var 0x124141398 'node' 'const struct lys_node *'
|     |       |-ImplicitCastExpr 0x124141db8 <col:38> 'const struct lys_node *' <LValueToRValue>
|     |       | `-DeclRefExpr 0x124141ce8 <col:38> 'const struct lys_node *' lvalue ParmVar 0x124140e28 'parent' 'const struct lys_node *'
|     |       |-ImplicitCastExpr 0x124141dd0 <col:46> 'const struct lys_module *' <LValueToRValue>
|     |       | `-DeclRefExpr 0x124141d08 <col:46> 'const struct lys_module *' lvalue ParmVar 0x124128a48 'mod' 'const struct lys_module *'
|     |       `-IntegerLiteral 0x124141d28 <col:51> 'int' 0
|     `-CompoundStmt 0x124809080 <col:56, line:30:5>
|       `-IfStmt 0x124809060 <line:16:9, line:29:9>
|         |-BinaryOperator 0x124808750 <line:16:13, col:44> 'int' contains-errors '||'
|         | |-UnaryOperator 0x124808678 <col:13, col:14> '<dependent type>' contains-errors prefix '!' cannot overflow
|         | | `-ImplicitCastExpr 0x124808660 <col:14> '<dependent type>' contains-errors <LValueToRValue>
|         | |   `-RecoveryExpr 0x124808640 <col:14> '<dependent type>' contains-errors lvalue
|         | `-ParenExpr 0x124808730 <col:22, col:44> '<dependent type>' contains-errors
|         |   `-BinaryOperator 0x124808710 <col:23, col:40> '<dependent type>' contains-errors '&'
|         |     |-RecoveryExpr 0x1248086c8 <col:23, col:29> '<dependent type>' contains-errors lvalue
|         |     | `-DeclRefExpr 0x124808690 <col:23> 'const struct lys_node *' lvalue Var 0x124141398 'node' 'const struct lys_node *'
|         |     `-RecoveryExpr 0x1248086f0 <col:40> '<dependent type>' contains-errors lvalue
|         `-CompoundStmt 0x124809040 <col:47, line:29:9>
|           |-IfStmt 0x1248089c0 <line:18:13, line:20:13>
|           | |-BinaryOperator 0x124808980 <line:18:17, col:61> 'int' '!='
|           | | |-CallExpr 0x1248087c8 <col:17, col:37> 'int'
|           | | | |-ImplicitCastExpr 0x1248087b0 <col:17> 'int (*)()' <FunctionToPointerDecay>
|           | | | | `-DeclRefExpr 0x124808770 <col:17> 'int ()' Function 0x124141950 'lys_node_module' 'int ()'
|           | | | `-ImplicitCastExpr 0x1248087f0 <col:33> 'const struct lys_node *' <LValueToRValue>
|           | | |   `-DeclRefExpr 0x124808790 <col:33> 'const struct lys_node *' lvalue Var 0x124141398 'node' 'const struct lys_node *'
|           | | `-CallExpr 0x124808940 <col:42, col:61> 'int'
|           | |   |-ImplicitCastExpr 0x124808928 <col:42> 'int (*)()' <FunctionToPointerDecay>
|           | |   | `-DeclRefExpr 0x1248088e8 <col:42> 'int ()' Function 0x124808830 'lys_main_module' 'int ()'
|           | |   `-ImplicitCastExpr 0x124808968 <col:58> 'const struct lys_module *' <LValueToRValue>
|           | |     `-DeclRefExpr 0x124808908 <col:58> 'const struct lys_module *' lvalue ParmVar 0x124128a48 'mod' 'const struct lys_module *'
|           | `-CompoundStmt 0x1248089a8 <col:64, line:20:13>
|           |   `-ContinueStmt 0x1248089a0 <line:19:17>
|           `-IfStmt 0x124809020 <line:23:13, line:28:13>
|             |-BinaryOperator 0x124808ed0 <line:23:17, col:75> 'int' contains-errors '&&'
|             | |-UnaryOperator 0x124808db8 <col:17, col:51> '<dependent type>' contains-errors prefix '!' cannot overflow
|             | | `-CallExpr 0x124808d80 <col:18, col:51> '<dependent type>' contains-errors
|             | |   |-DeclRefExpr 0x124808c78 <col:18> 'int (const char *, const char *, unsigned long)' Function 0x124808a28 'strncmp' 'int (const char *, const char *, unsigned long)'
|             | |   |-RecoveryExpr 0x124808cd0 <col:26, col:32> '<dependent type>' contains-errors lvalue
|             | |   | `-DeclRefExpr 0x124808c98 <col:26> 'const struct lys_node *' lvalue Var 0x124141398 'node' 'const struct lys_node *'
|             | |   |-DeclRefExpr 0x124808cf8 <col:38> 'const char *' lvalue ParmVar 0x124140ea8 'name' 'const char *'
|             | |   `-DeclRefExpr 0x124808d18 <col:44> 'int' lvalue ParmVar 0x124140f28 'nam_len' 'int'
|             | `-UnaryOperator 0x124808eb8 <col:56, col:75> '<dependent type>' contains-errors prefix '!' cannot overflow
|             |   `-ImplicitCastExpr 0x124808ea0 <col:57, col:75> '<dependent type>' contains-errors <LValueToRValue>
|             |     `-ArraySubscriptExpr 0x124808e80 <col:57, col:75> '<dependent type>' contains-errors lvalue
|             |       |-ImplicitCastExpr 0x124808e50 <col:57, col:63> '<dependent type>' contains-errors <LValueToRValue>
|             |       | `-RecoveryExpr 0x124808e08 <col:57, col:63> '<dependent type>' contains-errors lvalue
|             |       |   `-DeclRefExpr 0x124808dd0 <col:57> 'const struct lys_node *' lvalue Var 0x124141398 'node' 'const struct lys_node *'
|             |       `-ImplicitCastExpr 0x124808e68 <col:68> 'int' <LValueToRValue>
|             |         `-DeclRefExpr 0x124808e30 <col:68> 'int' lvalue ParmVar 0x124140f28 'nam_len' 'int'
|             `-CompoundStmt 0x124809008 <col:78, line:28:13>
|               `-IfStmt 0x124808fe8 <line:24:17, line:26:17>
|                 |-ImplicitCastExpr 0x124808f10 <line:24:21> 'const struct lys_node **' <LValueToRValue>
|                 | `-DeclRefExpr 0x124808ef0 <col:21> 'const struct lys_node **' lvalue ParmVar 0x124141118 'ret' 'const struct lys_node **'
|                 `-CompoundStmt 0x124808fd0 <col:26, line:26:17>
|                   `-BinaryOperator 0x124808fb0 <line:25:21, col:28> 'const struct lys_node *' '='
|                     |-UnaryOperator 0x124808f60 <col:21, col:22> 'const struct lys_node *' lvalue prefix '*' cannot overflow
|                     | `-ImplicitCastExpr 0x124808f48 <col:22> 'const struct lys_node **' <LValueToRValue>
|                     |   `-DeclRefExpr 0x124808f28 <col:22> 'const struct lys_node **' lvalue ParmVar 0x124141118 'ret' 'const struct lys_node **'
|                     `-ImplicitCastExpr 0x124808f98 <col:28> 'const struct lys_node *' <LValueToRValue>
|                       `-DeclRefExpr 0x124808f78 <col:28> 'const struct lys_node *' lvalue Var 0x124141398 'node' 'const struct lys_node *'
`-FunctionDecl 0x124808a28 <line:23:18> col:18 implicit used strncmp 'int (const char *, const char *, unsigned long)' extern
  |-ParmVarDecl 0x124808b28 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x124808b90 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x124808bf8 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x124808ad0 <<invalid sloc>> Implicit 888
