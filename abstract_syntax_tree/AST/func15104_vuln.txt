TranslationUnitDecl 0x14c855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14c8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14c855bd0 '__int128'
|-TypedefDecl 0x14c856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14c855bf0 'unsigned __int128'
|-TypedefDecl 0x14d00be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14d00bc00 'struct __NSConstantString_tag'
|   `-Record 0x14c856580 '__NSConstantString_tag'
|-TypedefDecl 0x14d00be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14c855d90 '__SVInt8_t'
|-TypedefDecl 0x14d00bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14c855db0 '__SVInt16_t'
|-TypedefDecl 0x14d00bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14c855dd0 '__SVInt32_t'
|-TypedefDecl 0x14d00bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14c855df0 '__SVInt64_t'
|-TypedefDecl 0x14d00c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14c855e10 '__SVUint8_t'
|-TypedefDecl 0x14d00c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14c855e30 '__SVUint16_t'
|-TypedefDecl 0x14d00c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14c855e50 '__SVUint32_t'
|-TypedefDecl 0x14d00c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14c855e70 '__SVUint64_t'
|-TypedefDecl 0x14d00c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14c855e90 '__SVFloat16_t'
|-TypedefDecl 0x14d00c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14c855eb0 '__SVFloat32_t'
|-TypedefDecl 0x14d00c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14c855ed0 '__SVFloat64_t'
|-TypedefDecl 0x14d00c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14c855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14d00c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14c855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14d00c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14c855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14d00c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14c855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14d00c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14c855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14d00c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14c855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14d00c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14c855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14d00c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14c855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14d00c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14c855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14d00c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14c856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14d00c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14c856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14d00c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14c856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14d00c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14c856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14d00c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14c856090 '__clang_svint8x3_t'
|-TypedefDecl 0x14d00c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14c8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14d00c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14c8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14d00c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14c8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14d00c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14c856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14d00ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14c856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14d00cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14c856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14d00cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14c856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14d00cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14c856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14d00d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14c8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14d00d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14c8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14d00d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14c8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14d00d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14c856210 '__clang_svint8x4_t'
|-TypedefDecl 0x14d00d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14c856230 '__clang_svint16x4_t'
|-TypedefDecl 0x14d00d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14c856250 '__clang_svint32x4_t'
|-TypedefDecl 0x14d00d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14c856270 '__clang_svint64x4_t'
|-TypedefDecl 0x14d00d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14c856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14d00d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14c8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14d00d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14c8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14d00d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14c8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14d00d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14c856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14d00d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14c856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14d00d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14c856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14d00d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14c856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14d00da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14c856390 '__SVBool_t'
|-TypedefDecl 0x14d00da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14c8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14d00dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14c8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14d00db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14c8563f0 '__SVCount_t'
|-TypedefDecl 0x14d00dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14d00dbb0 'char *'
|   `-BuiltinType 0x14c8556b0 'char'
|-TypedefDecl 0x14d00dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14d00dbb0 'char *'
|   `-BuiltinType 0x14c8556b0 'char'
|-FunctionDecl 0x14d00de80 <dataset_diviso_filec/func15104_vuln.c:1:1, line:71:1> line:1:13 invalid load_xref_from_plaintext 'void (int *, int *)' static
| |-ParmVarDecl 0x14d00dd28 <col:38, col:44> col:44 invalid fp 'int *'
| |-ParmVarDecl 0x14d00dda8 <col:48, col:56> col:56 referenced invalid xref 'int *'
| `-CompoundStmt 0x14c9244c0 <line:2:1, line:71:1>
|   |-DeclStmt 0x14d00e160 <line:3:5, col:43>
|   | |-VarDecl 0x14d00df50 <col:5, col:10> col:10 used i 'int'
|   | |-VarDecl 0x14d00dfd0 <col:5, col:13> col:13 used buf_idx 'int'
|   | |-VarDecl 0x14d00e050 <col:5, col:22> col:22 used obj_id 'int'
|   | `-VarDecl 0x14d00e0d0 <col:5, col:30> col:30 used added_entries 'int'
|   |-DeclStmt 0x14d027400 <line:4:5, col:26>
|   | |-VarDecl 0x14d00e188 <col:5, col:10> col:10 used c 'char'
|   | `-VarDecl 0x14d00e290 <col:5, col:25> col:13 used buf 'char[32]' cinit
|   |   `-InitListExpr 0x14d00e370 <col:23, col:25> 'char[32]'
|   |     |-array_filler: ImplicitValueInitExpr 0x14d00e3d0 <<invalid sloc>> 'char'
|   |     `-ImplicitCastExpr 0x14d00e3b0 <col:24> 'char' <IntegralCast>
|   |       `-IntegerLiteral 0x14d00e2f8 <col:24> 'int' 0
|   |-DeclStmt 0x14d027530 <line:5:5, col:20>
|   | |-VarDecl 0x14d027430 <col:5, col:10> col:10 used start 'long'
|   | `-VarDecl 0x14d0274b0 <col:5, col:17> col:17 used pos 'long'
|   |-BinaryOperator 0x14d027728 <line:7:5, col:21> 'long' contains-errors '='
|   | |-DeclRefExpr 0x14d027548 <col:5> 'long' lvalue Var 0x14d027430 'start' 'long'
|   | `-CallExpr 0x14d027700 <col:13, col:21> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x14d0276c0 <col:13> 'int ()' Function 0x14d027608 'ftell' 'int ()'
|   |   `-RecoveryExpr 0x14d0276e0 <col:19> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x14d0277d0 <line:10:5, col:17> 'long' contains-errors '='
|   | |-DeclRefExpr 0x14d027748 <col:5> 'long' lvalue Var 0x14d0274b0 'pos' 'long'
|   | `-CXXDependentScopeMemberExpr 0x14d027788 <col:11, col:17> '<dependent type>' contains-errors lvalue ->end
|   |   `-RecoveryExpr 0x14d027768 <col:11> '<dependent type>' contains-errors lvalue
|   |-CallExpr 0x14d0279a0 <line:11:5, col:28> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x14d0278d0 <col:5> 'int ()' Function 0x14d027818 'fseek' 'int ()'
|   | |-RecoveryExpr 0x14d0278f0 <col:11> '<dependent type>' contains-errors lvalue
|   | |-DeclRefExpr 0x14d027910 <col:15> 'long' lvalue Var 0x14d0274b0 'pos' 'long'
|   | `-RecoveryExpr 0x14d027980 <col:20> '<dependent type>' contains-errors lvalue
|   |-WhileStmt 0x14d028178 <line:12:5, line:16:52>
|   | |-BinaryOperator 0x14d027a60 <line:12:12, col:25> 'int' contains-errors '!='
|   | | |-CallExpr 0x14d027a18 <col:12, col:20> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x14d0279d8 <col:12> 'int ()' Function 0x14d027608 'ftell' 'int ()'
|   | | | `-RecoveryExpr 0x14d0279f8 <col:18> '<dependent type>' contains-errors lvalue
|   | | `-IntegerLiteral 0x14d027a40 <col:25> 'int' 0
|   | `-IfStmt 0x14d028148 <line:13:7, line:16:52> has_else
|   |   |-CallExpr 0x14d027e00 <line:13:11, col:60> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x14d027b60 <col:11> 'int ()' Function 0x14d027aa8 'SAFE_F' 'int ()'
|   |   | |-RecoveryExpr 0x14d027b80 <col:18> '<dependent type>' contains-errors lvalue
|   |   | `-ParenExpr 0x14d027de0 <col:22, col:59> 'int' contains-errors
|   |   |   `-BinaryOperator 0x14d027dc0 <col:23, col:56> 'int' contains-errors '&&'
|   |   |     |-BinaryOperator 0x14d027d00 <col:23, col:36> 'int' contains-errors '=='
|   |   |     | |-CallExpr 0x14d027cc0 <col:23, col:31> '<dependent type>' contains-errors
|   |   |     | | |-DeclRefExpr 0x14d027c80 <col:23> 'int ()' Function 0x14d027bc8 'fgetc' 'int ()'
|   |   |     | | `-RecoveryExpr 0x14d027ca0 <col:29> '<dependent type>' contains-errors lvalue
|   |   |     | `-CharacterLiteral 0x14d027ce8 <col:36> 'int' 47
|   |   |     `-BinaryOperator 0x14d027da0 <col:43, col:56> 'int' contains-errors '=='
|   |   |       |-CallExpr 0x14d027d60 <col:43, col:51> '<dependent type>' contains-errors
|   |   |       | |-DeclRefExpr 0x14d027d20 <col:43> 'int ()' Function 0x14d027bc8 'fgetc' 'int ()'
|   |   |       | `-RecoveryExpr 0x14d027d40 <col:49> '<dependent type>' contains-errors lvalue
|   |   |       `-CharacterLiteral 0x14d027d88 <col:56> 'int' 83
|   |   |-BreakStmt 0x14d027e30 <line:14:9>
|   |   `-CallExpr 0x14d028110 <line:16:9, col:52> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x14d027f18 <col:9> 'int ()' Function 0x14d027e60 'SAFE_E' 'int ()'
|   |     |-CallExpr 0x14d0280d8 <col:16, col:41> '<dependent type>' contains-errors
|   |     | |-DeclRefExpr 0x14d027f38 <col:16> 'int ()' Function 0x14d027818 'fseek' 'int ()'
|   |     | |-RecoveryExpr 0x14d027f58 <col:22> '<dependent type>' contains-errors lvalue
|   |     | |-UnaryOperator 0x14d027f98 <col:26, col:28> 'long' prefix '--'
|   |     | | `-DeclRefExpr 0x14d027f78 <col:28> 'long' lvalue Var 0x14d0274b0 'pos' 'long'
|   |     | `-RecoveryExpr 0x14d0280b8 <col:33> '<dependent type>' contains-errors lvalue
|   |     |-IntegerLiteral 0x14d028000 <col:44> 'int' 0
|   |     `-StringLiteral 0x14d028060 <col:47> 'char[4]' lvalue "STR"
|   |-CallExpr 0x14d0283b8 <line:18:5, col:44> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x14d028198 <col:5> 'int ()' Function 0x14d027e60 'SAFE_E' 'int ()'
|   | |-CallExpr 0x14d028338 <col:12, col:32> '<dependent type>' contains-errors
|   | | |-DeclRefExpr 0x14d028298 <col:12> 'int ()' Function 0x14d0281e0 'fread' 'int ()'
|   | | |-DeclRefExpr 0x14d0282b8 <col:18> 'char[32]' lvalue Var 0x14d00e290 'buf' 'char[32]'
|   | | |-IntegerLiteral 0x14d0282d8 <col:23> 'int' 1
|   | | |-IntegerLiteral 0x14d0282f8 <col:26> 'int' 21
|   | | `-RecoveryExpr 0x14d028318 <col:30> '<dependent type>' contains-errors lvalue
|   | |-IntegerLiteral 0x14d028378 <col:35> 'int' 21
|   | `-StringLiteral 0x14d028398 <col:39> 'char[4]' lvalue "STR"
|   |-BinaryOperator 0x14d029b30 <line:19:5, col:47> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x14d029248 <col:5, col:11> '<dependent type>' contains-errors lvalue ->n_entries
|   | | `-RecoveryExpr 0x14d029220 <col:5> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x14d029200 <col:5> 'int *' lvalue ParmVar 0x14d00dda8 'xref' 'int *'
|   | `-CallExpr 0x14d029b08 <col:23, col:47> 'int'
|   |   |-ImplicitCastExpr 0x14d029af0 <col:23> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x14d029370 <col:23> 'int ()' Function 0x14d0292b8 'atoi' 'int ()'
|   |   `-BinaryOperator 0x14d029a98 <col:28, col:46> 'char *' '+'
|   |     |-ImplicitCastExpr 0x14d029a80 <col:28> 'char *' <ArrayToPointerDecay>
|   |     | `-DeclRefExpr 0x14d029390 <col:28> 'char[32]' lvalue Var 0x14d00e290 'buf' 'char[32]'
|   |     `-CallExpr 0x14d029a28 <col:34, col:46> 'unsigned long'
|   |       |-ImplicitCastExpr 0x14d029a10 <col:34> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x14d029980 <col:34> 'unsigned long (const char *)' Function 0x14d029810 'strlen' 'unsigned long (const char *)'
|   |       `-ImplicitCastExpr 0x14d029a68 <col:41> 'const char *' <NoOp>
|   |         `-ImplicitCastExpr 0x14d029a50 <col:41> 'char *' <ArrayToPointerDecay>
|   |           `-StringLiteral 0x14d0299a0 <col:41> 'char[4]' lvalue "STR"
|   |-BinaryOperator 0x14d02a018 <line:23:5, col:14> 'int' '='
|   | |-DeclRefExpr 0x14d029fd8 <col:5> 'int' lvalue Var 0x14d00e050 'obj_id' 'int'
|   | `-IntegerLiteral 0x14d029ff8 <col:14> 'int' 0
|   |-CallExpr 0x14d02bba8 <line:24:5, col:52> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x14d02a038 <col:5> 'int ()' Function 0x14d027818 'fseek' 'int ()'
|   | |-RecoveryExpr 0x14d02a058 <col:11> '<dependent type>' contains-errors lvalue
|   | |-BinaryOperator 0x14d02bb68 <col:15, col:41> '<dependent type>' contains-errors '+'
|   | | |-CXXDependentScopeMemberExpr 0x14d02a098 <col:15, col:21> '<dependent type>' contains-errors lvalue ->start
|   | | | `-RecoveryExpr 0x14d02a078 <col:15> '<dependent type>' contains-errors lvalue
|   | | `-CallExpr 0x14d02bb10 <col:29, col:41> 'unsigned long'
|   | |   |-ImplicitCastExpr 0x14d02baf8 <col:29> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x14d02a0e0 <col:29> 'unsigned long (const char *)' Function 0x14d029810 'strlen' 'unsigned long (const char *)'
|   | |   `-ImplicitCastExpr 0x14d02bb50 <col:36> 'const char *' <NoOp>
|   | |     `-ImplicitCastExpr 0x14d02bb38 <col:36> 'char *' <ArrayToPointerDecay>
|   | |       `-StringLiteral 0x14d02a100 <col:36> 'char[4]' lvalue "STR"
|   | `-RecoveryExpr 0x14d02bb88 <col:44> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x14d02bc20 <line:25:5, col:21> 'int' '='
|   | |-DeclRefExpr 0x14d02bbe0 <col:5> 'int' lvalue Var 0x14d00e0d0 'added_entries' 'int'
|   | `-IntegerLiteral 0x14d02bc00 <col:21> 'int' 0
|   |-ForStmt 0x14c924358 <line:26:5, line:67:5>
|   | |-BinaryOperator 0x14d02bc80 <line:26:10, col:12> 'int' '='
|   | | |-DeclRefExpr 0x14d02bc40 <col:10> 'int' lvalue Var 0x14d00df50 'i' 'int'
|   | | `-IntegerLiteral 0x14d02bc60 <col:12> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x14d02bd28 <col:15, col:23> 'int' contains-errors '<'
|   | | |-DeclRefExpr 0x14d02bca0 <col:15> 'int' lvalue Var 0x14d00df50 'i' 'int'
|   | | `-CXXDependentScopeMemberExpr 0x14d02bce0 <col:17, col:23> '<dependent type>' contains-errors lvalue ->n_entries
|   | |   `-RecoveryExpr 0x14d02bcc0 <col:17> '<dependent type>' contains-errors lvalue
|   | |-UnaryOperator 0x14d02bd68 <col:34, col:35> 'int' postfix '++'
|   | | `-DeclRefExpr 0x14d02bd48 <col:34> 'int' lvalue Var 0x14d00df50 'i' 'int'
|   | `-CompoundStmt 0x14c924308 <line:27:5, line:67:5>
|   |   |-BinaryOperator 0x14d02be08 <line:29:9, col:21> 'char' contains-errors '='
|   |   | |-DeclRefExpr 0x14d02bd80 <col:9> 'char' lvalue Var 0x14d00e188 'c' 'char'
|   |   | `-CallExpr 0x14d02bde0 <col:13, col:21> '<dependent type>' contains-errors
|   |   |   |-DeclRefExpr 0x14d02bda0 <col:13> 'int ()' Function 0x14d027bc8 'fgetc' 'int ()'
|   |   |   `-RecoveryExpr 0x14d02bdc0 <col:19> '<dependent type>' contains-errors lvalue
|   |   |-WhileStmt 0x14d02c000 <line:30:9, line:31:23>
|   |   | |-BinaryOperator 0x14d02bf38 <line:30:16, col:34> 'int' '||'
|   |   | | |-BinaryOperator 0x14d02be90 <col:16, col:21> 'int' '=='
|   |   | | | |-ImplicitCastExpr 0x14d02be78 <col:16> 'int' <IntegralCast>
|   |   | | | | `-ImplicitCastExpr 0x14d02be60 <col:16> 'char' <LValueToRValue>
|   |   | | | |   `-DeclRefExpr 0x14d02be28 <col:16> 'char' lvalue Var 0x14d00e188 'c' 'char'
|   |   | | | `-CharacterLiteral 0x14d02be48 <col:21> 'int' 10
|   |   | | `-BinaryOperator 0x14d02bf18 <col:29, col:34> 'int' '=='
|   |   | |   |-ImplicitCastExpr 0x14d02bf00 <col:29> 'int' <IntegralCast>
|   |   | |   | `-ImplicitCastExpr 0x14d02bee8 <col:29> 'char' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x14d02beb0 <col:29> 'char' lvalue Var 0x14d00e188 'c' 'char'
|   |   | |   `-CharacterLiteral 0x14d02bed0 <col:34> 'int' 13
|   |   | `-BinaryOperator 0x14d02bfe0 <line:31:11, col:23> 'char' contains-errors '='
|   |   |   |-DeclRefExpr 0x14d02bf58 <col:11> 'char' lvalue Var 0x14d00e188 'c' 'char'
|   |   |   `-CallExpr 0x14d02bfb8 <col:15, col:23> '<dependent type>' contains-errors
|   |   |     |-DeclRefExpr 0x14d02bf78 <col:15> 'int ()' Function 0x14d027bc8 'fgetc' 'int ()'
|   |   |     `-RecoveryExpr 0x14d02bf98 <col:21> '<dependent type>' contains-errors lvalue
|   |   |-BinaryOperator 0x14d02c060 <line:34:9, col:19> 'int' '='
|   |   | |-DeclRefExpr 0x14d02c020 <col:9> 'int' lvalue Var 0x14d00dfd0 'buf_idx' 'int'
|   |   | `-IntegerLiteral 0x14d02c040 <col:19> 'int' 0
|   |   |-WhileStmt 0x14d02c750 <line:35:9, line:40:9>
|   |   | |-BinaryOperator 0x14d02c580 <line:35:16, line:36:51> 'int' contains-errors '&&'
|   |   | | |-BinaryOperator 0x14d02c490 <line:35:16, line:36:26> 'int' contains-errors '&&'
|   |   | | | |-BinaryOperator 0x14d02c310 <line:35:16, col:50> 'int' contains-errors '&&'
|   |   | | | | |-BinaryOperator 0x14d02c190 <col:16, col:34> 'int' '&&'
|   |   | | | | | |-BinaryOperator 0x14d02c0e8 <col:16, col:21> 'int' '!='
|   |   | | | | | | |-ImplicitCastExpr 0x14d02c0d0 <col:16> 'int' <IntegralCast>
|   |   | | | | | | | `-ImplicitCastExpr 0x14d02c0b8 <col:16> 'char' <LValueToRValue>
|   |   | | | | | | |   `-DeclRefExpr 0x14d02c080 <col:16> 'char' lvalue Var 0x14d00e188 'c' 'char'
|   |   | | | | | | `-CharacterLiteral 0x14d02c0a0 <col:21> 'int' 10
|   |   | | | | | `-BinaryOperator 0x14d02c170 <col:29, col:34> 'int' '!='
|   |   | | | | |   |-ImplicitCastExpr 0x14d02c158 <col:29> 'int' <IntegralCast>
|   |   | | | | |   | `-ImplicitCastExpr 0x14d02c140 <col:29> 'char' <LValueToRValue>
|   |   | | | | |   |   `-DeclRefExpr 0x14d02c108 <col:29> 'char' lvalue Var 0x14d00e188 'c' 'char'
|   |   | | | | |   `-CharacterLiteral 0x14d02c128 <col:34> 'int' 13
|   |   | | | | `-UnaryOperator 0x14d02c2f8 <col:42, col:50> '<dependent type>' contains-errors prefix '!' cannot overflow
|   |   | | | |   `-CallExpr 0x14d02c2d0 <col:43, col:50> '<dependent type>' contains-errors
|   |   | | | |     |-DeclRefExpr 0x14d02c290 <col:43> 'int ()' Function 0x14d02c1d8 'feof' 'int ()'
|   |   | | | |     `-RecoveryExpr 0x14d02c2b0 <col:48> '<dependent type>' contains-errors lvalue
|   |   | | | `-UnaryOperator 0x14d02c478 <line:36:16, col:26> '<dependent type>' contains-errors prefix '!' cannot overflow
|   |   | | |   `-CallExpr 0x14d02c450 <col:17, col:26> '<dependent type>' contains-errors
|   |   | | |     |-DeclRefExpr 0x14d02c410 <col:17> 'int ()' Function 0x14d02c358 'ferror' 'int ()'
|   |   | | |     `-RecoveryExpr 0x14d02c430 <col:24> '<dependent type>' contains-errors lvalue
|   |   | | `-BinaryOperator 0x14d02c560 <col:31, col:51> 'int' '<'
|   |   | |   |-ImplicitCastExpr 0x14d02c548 <col:31> 'unsigned long' <IntegralCast>
|   |   | |   | `-ImplicitCastExpr 0x14d02c530 <col:31> 'int' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x14d02c4b0 <col:31> 'int' lvalue Var 0x14d00dfd0 'buf_idx' 'int'
|   |   | |   `-UnaryExprOrTypeTraitExpr 0x14d02c510 <col:41, col:51> 'unsigned long' sizeof
|   |   | |     `-ParenExpr 0x14d02c4f0 <col:47, col:51> 'char[32]' lvalue
|   |   | |       `-DeclRefExpr 0x14d02c4d0 <col:48> 'char[32]' lvalue Var 0x14d00e290 'buf' 'char[32]' non_odr_use_unevaluated
|   |   | `-CompoundStmt 0x14d02c730 <line:37:9, line:40:9>
|   |   |   |-BinaryOperator 0x14d02c668 <line:38:13, col:30> 'char' '='
|   |   |   | |-ArraySubscriptExpr 0x14d02c610 <col:13, col:26> 'char' lvalue
|   |   |   | | |-ImplicitCastExpr 0x14d02c5f8 <col:13> 'char *' <ArrayToPointerDecay>
|   |   |   | | | `-DeclRefExpr 0x14d02c5a0 <col:13> 'char[32]' lvalue Var 0x14d00e290 'buf' 'char[32]'
|   |   |   | | `-UnaryOperator 0x14d02c5e0 <col:17, col:24> 'int' postfix '++'
|   |   |   | |   `-DeclRefExpr 0x14d02c5c0 <col:17> 'int' lvalue Var 0x14d00dfd0 'buf_idx' 'int'
|   |   |   | `-ImplicitCastExpr 0x14d02c650 <col:30> 'char' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x14d02c630 <col:30> 'char' lvalue Var 0x14d00e188 'c' 'char'
|   |   |   `-BinaryOperator 0x14d02c710 <line:39:13, col:25> 'char' contains-errors '='
|   |   |     |-DeclRefExpr 0x14d02c688 <col:13> 'char' lvalue Var 0x14d00e188 'c' 'char'
|   |   |     `-CallExpr 0x14d02c6e8 <col:17, col:25> '<dependent type>' contains-errors
|   |   |       |-DeclRefExpr 0x14d02c6a8 <col:17> 'int ()' Function 0x14d027bc8 'fgetc' 'int ()'
|   |   |       `-RecoveryExpr 0x14d02c6c8 <col:23> '<dependent type>' contains-errors lvalue
|   |   |-IfStmt 0x14c923070 <line:41:9, line:46:9>
|   |   | |-BinaryOperator 0x14d02c820 <line:41:13, col:34> 'int' '>='
|   |   | | |-ImplicitCastExpr 0x14d02c808 <col:13> 'unsigned long' <IntegralCast>
|   |   | | | `-ImplicitCastExpr 0x14d02c7f0 <col:13> 'int' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x14d02c770 <col:13> 'int' lvalue Var 0x14d00dfd0 'buf_idx' 'int'
|   |   | | `-UnaryExprOrTypeTraitExpr 0x14d02c7d0 <col:24, col:34> 'unsigned long' sizeof
|   |   | |   `-ParenExpr 0x14d02c7b0 <col:30, col:34> 'char[32]' lvalue
|   |   | |     `-DeclRefExpr 0x14d02c790 <col:31> 'char[32]' lvalue Var 0x14d00e290 'buf' 'char[32]' non_odr_use_unevaluated
|   |   | `-CompoundStmt 0x14c923050 <line:42:9, line:46:9>
|   |   |   |-CallExpr 0x14d02c9c0 <line:43:13, line:44:22> 'int'
|   |   |   | |-ImplicitCastExpr 0x14d02c9a8 <line:43:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x14d02c920 <col:13> 'int ()' Function 0x14d02c868 'ERR' 'int ()'
|   |   |   | `-ImplicitCastExpr 0x14d02c9e8 <col:17, line:44:17> 'char *' <ArrayToPointerDecay>
|   |   |   |   `-StringLiteral 0x14d02c980 <line:43:17, line:44:17> 'char[7]' lvalue "STRSTR"
|   |   |   `-CallExpr 0x14c923028 <line:45:13, col:30> '<dependent type>' contains-errors
|   |   |     |-DeclRefExpr 0x14c922fa8 <col:13> 'void (int) __attribute__((noreturn))' Function 0x14c922e38 'exit' 'void (int) __attribute__((noreturn))'
|   |   |     `-RecoveryExpr 0x14c923008 <col:18> '<dependent type>' contains-errors lvalue
|   |   |-BinaryOperator 0x14c923150 <line:47:9, col:24> 'char' '='
|   |   | |-ArraySubscriptExpr 0x14c923100 <col:9, col:20> 'char' lvalue
|   |   | | |-ImplicitCastExpr 0x14c9230d0 <col:9> 'char *' <ArrayToPointerDecay>
|   |   | | | `-DeclRefExpr 0x14c923090 <col:9> 'char[32]' lvalue Var 0x14d00e290 'buf' 'char[32]'
|   |   | | `-ImplicitCastExpr 0x14c9230e8 <col:13> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x14c9230b0 <col:13> 'int' lvalue Var 0x14d00dfd0 'buf_idx' 'int'
|   |   | `-ImplicitCastExpr 0x14c923138 <col:24> 'char' <IntegralCast>
|   |   |   `-CharacterLiteral 0x14c923120 <col:24> 'int' 0
|   |   |-IfStmt 0x14c9234b0 <line:50:9, line:51:11>
|   |   | |-CallExpr 0x14c923448 <line:50:13, col:28> 'char *'
|   |   | | |-ImplicitCastExpr 0x14c923430 <col:13> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   |   | | | `-DeclRefExpr 0x14c923390 <col:13> 'char *(const char *, int)' Function 0x14c9231b0 'strchr' 'char *(const char *, int)'
|   |   | | |-ImplicitCastExpr 0x14c923490 <col:20> 'const char *' <NoOp>
|   |   | | | `-ImplicitCastExpr 0x14c923478 <col:20> 'char *' <ArrayToPointerDecay>
|   |   | | |   `-DeclRefExpr 0x14c9233b0 <col:20> 'char[32]' lvalue Var 0x14d00e290 'buf' 'char[32]'
|   |   | | `-CharacterLiteral 0x14c9233d0 <col:25> 'int' 116
|   |   | `-BreakStmt 0x14c9234a8 <line:51:11>
|   |   `-IfStmt 0x14c9242d8 <line:54:9, line:66:9> has_else
|   |     |-BinaryOperator 0x14c9235d0 <line:54:13, col:27> 'int' '>'
|   |     | |-CallExpr 0x14c923540 <col:13, col:23> 'unsigned long'
|   |     | | |-ImplicitCastExpr 0x14c923528 <col:13> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |     | | | `-DeclRefExpr 0x14c9234d0 <col:13> 'unsigned long (const char *)' Function 0x14d029810 'strlen' 'unsigned long (const char *)'
|   |     | | `-ImplicitCastExpr 0x14c923580 <col:20> 'const char *' <NoOp>
|   |     | |   `-ImplicitCastExpr 0x14c923568 <col:20> 'char *' <ArrayToPointerDecay>
|   |     | |     `-DeclRefExpr 0x14c9234f0 <col:20> 'char[32]' lvalue Var 0x14d00e290 'buf' 'char[32]'
|   |     | `-ImplicitCastExpr 0x14c9235b8 <col:27> 'unsigned long' <IntegralCast>
|   |     |   `-IntegerLiteral 0x14c923598 <col:27> 'int' 17
|   |     |-CompoundStmt 0x14c924178 <line:55:9, line:61:9>
|   |     | |-BinaryOperator 0x14c923770 <line:56:13, col:45> '<dependent type>' contains-errors '='
|   |     | | |-CXXDependentScopeMemberExpr 0x14c9236f0 <col:13, col:30> '<dependent type>' contains-errors lvalue .obj_id
|   |     | | | `-ArraySubscriptExpr 0x14c9236d0 <col:13, col:28> '<dependent type>' contains-errors lvalue
|   |     | | |   |-ImplicitCastExpr 0x14c9236a0 <col:13, col:19> '<dependent type>' contains-errors <LValueToRValue>
|   |     | | |   | `-CXXDependentScopeMemberExpr 0x14c923638 <col:13, col:19> '<dependent type>' contains-errors lvalue ->entries
|   |     | | |   |   `-RecoveryExpr 0x14c923610 <col:13> '<dependent type>' contains-errors lvalue
|   |     | | |   |     `-DeclRefExpr 0x14c9235f0 <col:13> 'int *' lvalue ParmVar 0x14d00dda8 'xref' 'int *'
|   |     | | |   `-ImplicitCastExpr 0x14c9236b8 <col:27> 'int' <LValueToRValue>
|   |     | | |     `-DeclRefExpr 0x14c923680 <col:27> 'int' lvalue Var 0x14d00df50 'i' 'int'
|   |     | | `-UnaryOperator 0x14c923758 <col:39, col:45> 'int' postfix '++'
|   |     | |   `-DeclRefExpr 0x14c923738 <col:39> 'int' lvalue Var 0x14d00e050 'obj_id' 'int'
|   |     | |-BinaryOperator 0x14c923d90 <line:57:13, col:62> '<dependent type>' contains-errors '='
|   |     | | |-CXXDependentScopeMemberExpr 0x14c923890 <col:13, col:30> '<dependent type>' contains-errors lvalue .offset
|   |     | | | `-ArraySubscriptExpr 0x14c923870 <col:13, col:28> '<dependent type>' contains-errors lvalue
|   |     | | |   |-ImplicitCastExpr 0x14c923840 <col:13, col:19> '<dependent type>' contains-errors <LValueToRValue>
|   |     | | |   | `-CXXDependentScopeMemberExpr 0x14c9237d8 <col:13, col:19> '<dependent type>' contains-errors lvalue ->entries
|   |     | | |   |   `-RecoveryExpr 0x14c9237b0 <col:13> '<dependent type>' contains-errors lvalue
|   |     | | |   |     `-DeclRefExpr 0x14c923790 <col:13> 'int *' lvalue ParmVar 0x14d00dda8 'xref' 'int *'
|   |     | | |   `-ImplicitCastExpr 0x14c923858 <col:27> 'int' <LValueToRValue>
|   |     | | |     `-DeclRefExpr 0x14c923820 <col:27> 'int' lvalue Var 0x14d00df50 'i' 'int'
|   |     | | `-CallExpr 0x14c923d68 <col:39, col:62> 'int'
|   |     | |   |-ImplicitCastExpr 0x14c923d50 <col:39> 'int (*)()' <FunctionToPointerDecay>
|   |     | |   | `-DeclRefExpr 0x14c9239b8 <col:39> 'int ()' Function 0x14c923900 'atol' 'int ()'
|   |     | |   `-CallExpr 0x14c923cd8 <col:44, col:61> 'char *'
|   |     | |     |-ImplicitCastExpr 0x14c923cc0 <col:44> 'char *(*)(char *, const char *)' <FunctionToPointerDecay>
|   |     | |     | `-DeclRefExpr 0x14c923c00 <col:44> 'char *(char *, const char *)' Function 0x14c923a20 'strtok' 'char *(char *, const char *)'
|   |     | |     |-ImplicitCastExpr 0x14c923d08 <col:51> 'char *' <ArrayToPointerDecay>
|   |     | |     | `-DeclRefExpr 0x14c923c20 <col:51> 'char[32]' lvalue Var 0x14d00e290 'buf' 'char[32]'
|   |     | |     `-ImplicitCastExpr 0x14c923d38 <col:56> 'const char *' <NoOp>
|   |     | |       `-ImplicitCastExpr 0x14c923d20 <col:56> 'char *' <ArrayToPointerDecay>
|   |     | |         `-StringLiteral 0x14c923c40 <col:56> 'char[4]' lvalue "STR"
|   |     | |-BinaryOperator 0x14c924120 <line:59:13, col:45> '<dependent type>' contains-errors '='
|   |     | | |-CXXDependentScopeMemberExpr 0x14c924060 <col:13, col:30> '<dependent type>' contains-errors lvalue .f_or_n
|   |     | | | `-ArraySubscriptExpr 0x14c924040 <col:13, col:28> '<dependent type>' contains-errors lvalue
|   |     | | |   |-ImplicitCastExpr 0x14c924010 <col:13, col:19> '<dependent type>' contains-errors <LValueToRValue>
|   |     | | |   | `-CXXDependentScopeMemberExpr 0x14c923fa8 <col:13, col:19> '<dependent type>' contains-errors lvalue ->entries
|   |     | | |   |   `-RecoveryExpr 0x14c923f80 <col:13> '<dependent type>' contains-errors lvalue
|   |     | | |   |     `-DeclRefExpr 0x14c923f60 <col:13> 'int *' lvalue ParmVar 0x14d00dda8 'xref' 'int *'
|   |     | | |   `-ImplicitCastExpr 0x14c924028 <col:27> 'int' <LValueToRValue>
|   |     | | |     `-DeclRefExpr 0x14c923ff0 <col:27> 'int' lvalue Var 0x14d00df50 'i' 'int'
|   |     | | `-ArraySubscriptExpr 0x14c924100 <col:39, col:45> 'char' lvalue
|   |     | |   |-ImplicitCastExpr 0x14c9240e8 <col:39> 'char *' <ArrayToPointerDecay>
|   |     | |   | `-DeclRefExpr 0x14c9240a8 <col:39> 'char[32]' lvalue Var 0x14d00e290 'buf' 'char[32]'
|   |     | |   `-IntegerLiteral 0x14c9240c8 <col:43> 'int' 17
|   |     | `-UnaryOperator 0x14c924160 <line:60:13, col:15> 'int' prefix '++'
|   |     |   `-DeclRefExpr 0x14c924140 <col:15> 'int' lvalue Var 0x14d00e0d0 'added_entries' 'int'
|   |     `-CompoundStmt 0x14c9242b8 <line:63:9, line:66:9>
|   |       |-BinaryOperator 0x14c924260 <line:64:13, col:30> 'int' '='
|   |       | |-DeclRefExpr 0x14c9241a8 <col:13> 'int' lvalue Var 0x14d00e050 'obj_id' 'int'
|   |       | `-CallExpr 0x14c924220 <col:22, col:30> 'int'
|   |       |   |-ImplicitCastExpr 0x14c924208 <col:22> 'int (*)()' <FunctionToPointerDecay>
|   |       |   | `-DeclRefExpr 0x14c9241c8 <col:22> 'int ()' Function 0x14d0292b8 'atoi' 'int ()'
|   |       |   `-ImplicitCastExpr 0x14c924248 <col:27> 'char *' <ArrayToPointerDecay>
|   |       |     `-DeclRefExpr 0x14c9241e8 <col:27> 'char[32]' lvalue Var 0x14d00e290 'buf' 'char[32]'
|   |       `-UnaryOperator 0x14c9242a0 <line:65:13, col:15> 'int' prefix '--'
|   |         `-DeclRefExpr 0x14c924280 <col:15> 'int' lvalue Var 0x14d00df50 'i' 'int'
|   `-BinaryOperator 0x14c924440 <line:69:5, col:23> '<dependent type>' contains-errors '='
|     |-CXXDependentScopeMemberExpr 0x14c9243d8 <col:5, col:11> '<dependent type>' contains-errors lvalue ->n_entries
|     | `-RecoveryExpr 0x14c9243b0 <col:5> '<dependent type>' contains-errors lvalue
|     |   `-DeclRefExpr 0x14c924390 <col:5> 'int *' lvalue ParmVar 0x14d00dda8 'xref' 'int *'
|     `-DeclRefExpr 0x14c924420 <col:23> 'int' lvalue Var 0x14d00e0d0 'added_entries' 'int'
|-FunctionDecl 0x14d029810 <line:19:34> col:34 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x14d029910 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x14d0298b8 <<invalid sloc>> Implicit 902
|-FunctionDecl 0x14d029c20 <line:20:21> col:21 implicit used calloc 'void *(unsigned long, unsigned long)' extern
| |-ParmVarDecl 0x14d029d20 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0x14d029d88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-BuiltinAttr 0x14d029cc8 <<invalid sloc>> Implicit 868
| `-AllocSizeAttr 0x14d029e00 <col:21> Implicit 1 2
|-FunctionDecl 0x14c922e38 <line:45:13> col:13 implicit used exit 'void (int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x14c922f38 <<invalid sloc>> <invalid sloc> 'int'
| `-BuiltinAttr 0x14c922ee0 <<invalid sloc>> Implicit 869
|-FunctionDecl 0x14c9231b0 <line:50:13> col:13 implicit used strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x14c9232b0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x14c923318 <<invalid sloc>> <invalid sloc> 'int'
| `-BuiltinAttr 0x14c923258 <<invalid sloc>> Implicit 893
`-FunctionDecl 0x14c923a20 <line:57:44> col:44 implicit used strtok 'char *(char *, const char *)' extern
  |-ParmVarDecl 0x14c923b20 <<invalid sloc>> <invalid sloc> 'char *'
  |-ParmVarDecl 0x14c923b88 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x14c923ac8 <<invalid sloc>> Implicit 899
