TranslationUnitDecl 0x156855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1568564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x156855bd0 '__int128'
|-TypedefDecl 0x156856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x156855bf0 'unsigned __int128'
|-TypedefDecl 0x156926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x156926000 'struct __NSConstantString_tag'
|   `-Record 0x156856580 '__NSConstantString_tag'
|-TypedefDecl 0x156926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x156855d90 '__SVInt8_t'
|-TypedefDecl 0x156926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x156855db0 '__SVInt16_t'
|-TypedefDecl 0x156926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x156855dd0 '__SVInt32_t'
|-TypedefDecl 0x1569263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x156855df0 '__SVInt64_t'
|-TypedefDecl 0x156926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x156855e10 '__SVUint8_t'
|-TypedefDecl 0x1569264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x156855e30 '__SVUint16_t'
|-TypedefDecl 0x156926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x156855e50 '__SVUint32_t'
|-TypedefDecl 0x156926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x156855e70 '__SVUint64_t'
|-TypedefDecl 0x1569265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x156855e90 '__SVFloat16_t'
|-TypedefDecl 0x156926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x156855eb0 '__SVFloat32_t'
|-TypedefDecl 0x1569266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x156855ed0 '__SVFloat64_t'
|-TypedefDecl 0x156926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x156855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x156926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x156855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1569267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x156855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x156926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x156855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1569268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x156855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x156926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x156855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x156926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x156855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1569269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x156855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x156926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x156855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x156926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x156856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x156926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x156856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x156926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x156856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x156926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x156856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x156926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x156856090 '__clang_svint8x3_t'
|-TypedefDecl 0x156926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1568560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x156926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1568560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x156926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1568560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x156926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x156856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x156926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x156856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x156926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x156856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x156926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x156856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x156926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x156856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x156927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1568561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x156927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1568561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1569278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1568561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x156927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x156856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1569279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x156856230 '__clang_svint16x4_t'
|-TypedefDecl 0x156927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x156856250 '__clang_svint32x4_t'
|-TypedefDecl 0x156927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x156856270 '__clang_svint64x4_t'
|-TypedefDecl 0x156927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x156856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x156927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1568562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x156927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1568562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x156927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1568562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x156927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x156856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x156927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x156856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x156927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x156856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x156927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x156856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x156927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x156856390 '__SVBool_t'
|-TypedefDecl 0x156927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1568563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x156927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1568563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x156927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1568563f0 '__SVCount_t'
|-TypedefDecl 0x156927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x156927fb0 'char *'
|   `-BuiltinType 0x1568556b0 'char'
|-TypedefDecl 0x156928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x156927fb0 'char *'
|   `-BuiltinType 0x1568556b0 'char'
`-FunctionDecl 0x156928318 <dataset_diviso_filec/func11375_vuln.c:1:1, line:34:1> line:1:1 invalid append_header 'int (int *, const char *, const char *)'
  |-ParmVarDecl 0x156928128 <col:16, col:25> col:25 invalid string 'int *'
  |-ParmVarDecl 0x1569281a8 <line:2:16, col:29> col:29 used name 'const char *'
  |-ParmVarDecl 0x156928228 <line:3:16, col:29> col:29 used value 'const char *'
  `-CompoundStmt 0x160008eb0 <line:4:1, line:34:1>
    |-IfStmt 0x156941be8 <line:5:3, line:10:5>
    | |-ImplicitCastExpr 0x1569283f8 <line:5:7> 'const char *' <LValueToRValue>
    | | `-DeclRefExpr 0x1569283d8 <col:7> 'const char *' lvalue ParmVar 0x156928228 'value' 'const char *'
    | `-CompoundStmt 0x156941bc0 <line:6:5, line:10:5>
    |   |-CallExpr 0x156928770 <line:7:7, col:75> 'int'
    |   | |-ImplicitCastExpr 0x156928758 <col:7> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x156928570 <col:7> 'int ()' Function 0x1569284b8 'g_return_val_if_fail' 'int ()'
    |   | |-CallExpr 0x1569286f8 <col:29, col:71> 'int'
    |   | | |-ImplicitCastExpr 0x1569286e0 <col:29> 'int (*)()' <FunctionToPointerDecay>
    |   | | | `-DeclRefExpr 0x156928670 <col:29> 'int ()' Function 0x1569285b8 'cockpit_web_response_is_simple_token' 'int ()'
    |   | | `-ImplicitCastExpr 0x156928720 <col:67> 'const char *' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x156928690 <col:67> 'const char *' lvalue ParmVar 0x1569281a8 'name' 'const char *'
    |   | `-IntegerLiteral 0x156928738 <col:74> 'int' 0
    |   |-CallExpr 0x156941988 <line:8:7, col:76> 'int'
    |   | |-ImplicitCastExpr 0x156941970 <col:7> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x1569287a0 <col:7> 'int ()' Function 0x1569284b8 'g_return_val_if_fail' 'int ()'
    |   | |-CallExpr 0x156941910 <col:29, col:72> 'int'
    |   | | |-ImplicitCastExpr 0x1569418f8 <col:29> 'int (*)()' <FunctionToPointerDecay>
    |   | | | `-DeclRefExpr 0x1569418b8 <col:29> 'int ()' Function 0x156941800 'cockpit_web_response_is_header_value' 'int ()'
    |   | | `-ImplicitCastExpr 0x156941938 <col:67> 'const char *' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x1569418d8 <col:67> 'const char *' lvalue ParmVar 0x156928228 'value' 'const char *'
    |   | `-IntegerLiteral 0x156941950 <col:75> 'int' 0
    |   `-CallExpr 0x156941b80 <line:9:7, col:57> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x156941a98 <col:7> 'int ()' Function 0x1569419e0 'g_string_append_printf' 'int ()'
    |     |-RecoveryExpr 0x156941ab8 <col:31> '<dependent type>' contains-errors lvalue
    |     |-StringLiteral 0x156941b20 <col:39> 'char[4]' lvalue "STR"
    |     |-DeclRefExpr 0x156941b40 <col:46> 'const char *' lvalue ParmVar 0x1569281a8 'name' 'const char *'
    |     `-DeclRefExpr 0x156941b60 <col:52> 'const char *' lvalue ParmVar 0x156928228 'value' 'const char *'
    |-IfStmt 0x156941e48 <line:11:3, line:12:12>
    | |-BinaryOperator 0x156941de0 <line:11:7, col:43> 'int' '=='
    | | |-CallExpr 0x156941d60 <col:7, col:38> 'int'
    | | | |-ImplicitCastExpr 0x156941d48 <col:7> 'int (*)()' <FunctionToPointerDecay>
    | | | | `-DeclRefExpr 0x156941ce8 <col:7> 'int ()' Function 0x156941c30 'g_ascii_strcasecmp' 'int ()'
    | | | |-ImplicitCastExpr 0x156941d90 <col:27> 'char *' <ArrayToPointerDecay>
    | | | | `-StringLiteral 0x156941d08 <col:27> 'char[4]' lvalue "STR"
    | | | `-ImplicitCastExpr 0x156941da8 <col:34> 'const char *' <LValueToRValue>
    | | |   `-DeclRefExpr 0x156941d28 <col:34> 'const char *' lvalue ParmVar 0x1569281a8 'name' 'const char *'
    | | `-IntegerLiteral 0x156941dc0 <col:43> 'int' 0
    | `-ReturnStmt 0x156941e38 <line:12:5, col:12>
    |   `-RecoveryExpr 0x156941e18 <col:12> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x156941fc8 <line:13:3, line:14:12>
    | |-BinaryOperator 0x156941f60 <line:13:7, col:43> 'int' '=='
    | | |-CallExpr 0x156941ee0 <col:7, col:38> 'int'
    | | | |-ImplicitCastExpr 0x156941ec8 <col:7> 'int (*)()' <FunctionToPointerDecay>
    | | | | `-DeclRefExpr 0x156941e68 <col:7> 'int ()' Function 0x156941c30 'g_ascii_strcasecmp' 'int ()'
    | | | |-ImplicitCastExpr 0x156941f10 <col:27> 'char *' <ArrayToPointerDecay>
    | | | | `-StringLiteral 0x156941e88 <col:27> 'char[4]' lvalue "STR"
    | | | `-ImplicitCastExpr 0x156941f28 <col:34> 'const char *' <LValueToRValue>
    | | |   `-DeclRefExpr 0x156941ea8 <col:34> 'const char *' lvalue ParmVar 0x1569281a8 'name' 'const char *'
    | | `-IntegerLiteral 0x156941f40 <col:43> 'int' 0
    | `-ReturnStmt 0x156941fb8 <line:14:5, col:12>
    |   `-RecoveryExpr 0x156941f98 <col:12> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x156942148 <line:15:3, line:16:12>
    | |-BinaryOperator 0x1569420e0 <line:15:7, col:43> 'int' '=='
    | | |-CallExpr 0x156942060 <col:7, col:38> 'int'
    | | | |-ImplicitCastExpr 0x156942048 <col:7> 'int (*)()' <FunctionToPointerDecay>
    | | | | `-DeclRefExpr 0x156941fe8 <col:7> 'int ()' Function 0x156941c30 'g_ascii_strcasecmp' 'int ()'
    | | | |-ImplicitCastExpr 0x156942090 <col:27> 'char *' <ArrayToPointerDecay>
    | | | | `-StringLiteral 0x156942008 <col:27> 'char[4]' lvalue "STR"
    | | | `-ImplicitCastExpr 0x1569420a8 <col:34> 'const char *' <LValueToRValue>
    | | |   `-DeclRefExpr 0x156942028 <col:34> 'const char *' lvalue ParmVar 0x1569281a8 'name' 'const char *'
    | | `-IntegerLiteral 0x1569420c0 <col:43> 'int' 0
    | `-ReturnStmt 0x156942138 <line:16:5, col:12>
    |   `-RecoveryExpr 0x156942118 <col:12> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x1569422c8 <line:17:3, line:18:12>
    | |-BinaryOperator 0x156942260 <line:17:7, col:43> 'int' '=='
    | | |-CallExpr 0x1569421e0 <col:7, col:38> 'int'
    | | | |-ImplicitCastExpr 0x1569421c8 <col:7> 'int (*)()' <FunctionToPointerDecay>
    | | | | `-DeclRefExpr 0x156942168 <col:7> 'int ()' Function 0x156941c30 'g_ascii_strcasecmp' 'int ()'
    | | | |-ImplicitCastExpr 0x156942210 <col:27> 'char *' <ArrayToPointerDecay>
    | | | | `-StringLiteral 0x156942188 <col:27> 'char[4]' lvalue "STR"
    | | | `-ImplicitCastExpr 0x156942228 <col:34> 'const char *' <LValueToRValue>
    | | |   `-DeclRefExpr 0x1569421a8 <col:34> 'const char *' lvalue ParmVar 0x1569281a8 'name' 'const char *'
    | | `-IntegerLiteral 0x156942240 <col:43> 'int' 0
    | `-ReturnStmt 0x1569422b8 <line:18:5, col:12>
    |   `-RecoveryExpr 0x156942298 <col:12> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x156942448 <line:19:3, line:20:12>
    | |-BinaryOperator 0x1569423e0 <line:19:7, col:43> 'int' '=='
    | | |-CallExpr 0x156942360 <col:7, col:38> 'int'
    | | | |-ImplicitCastExpr 0x156942348 <col:7> 'int (*)()' <FunctionToPointerDecay>
    | | | | `-DeclRefExpr 0x1569422e8 <col:7> 'int ()' Function 0x156941c30 'g_ascii_strcasecmp' 'int ()'
    | | | |-ImplicitCastExpr 0x156942390 <col:27> 'char *' <ArrayToPointerDecay>
    | | | | `-StringLiteral 0x156942308 <col:27> 'char[4]' lvalue "STR"
    | | | `-ImplicitCastExpr 0x1569423a8 <col:34> 'const char *' <LValueToRValue>
    | | |   `-DeclRefExpr 0x156942328 <col:34> 'const char *' lvalue ParmVar 0x1569281a8 'name' 'const char *'
    | | `-IntegerLiteral 0x1569423c0 <col:43> 'int' 0
    | `-ReturnStmt 0x156942438 <line:20:5, col:12>
    |   `-RecoveryExpr 0x156942418 <col:12> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x1569425c8 <line:21:3, line:22:12>
    | |-BinaryOperator 0x156942560 <line:21:7, col:43> 'int' '=='
    | | |-CallExpr 0x1569424e0 <col:7, col:38> 'int'
    | | | |-ImplicitCastExpr 0x1569424c8 <col:7> 'int (*)()' <FunctionToPointerDecay>
    | | | | `-DeclRefExpr 0x156942468 <col:7> 'int ()' Function 0x156941c30 'g_ascii_strcasecmp' 'int ()'
    | | | |-ImplicitCastExpr 0x156942510 <col:27> 'char *' <ArrayToPointerDecay>
    | | | | `-StringLiteral 0x156942488 <col:27> 'char[4]' lvalue "STR"
    | | | `-ImplicitCastExpr 0x156942528 <col:34> 'const char *' <LValueToRValue>
    | | |   `-DeclRefExpr 0x1569424a8 <col:34> 'const char *' lvalue ParmVar 0x1569281a8 'name' 'const char *'
    | | `-IntegerLiteral 0x156942540 <col:43> 'int' 0
    | `-ReturnStmt 0x1569425b8 <line:22:5, col:12>
    |   `-RecoveryExpr 0x156942598 <col:12> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x156942748 <line:23:3, line:24:12>
    | |-BinaryOperator 0x1569426e0 <line:23:7, col:43> 'int' '=='
    | | |-CallExpr 0x156942660 <col:7, col:38> 'int'
    | | | |-ImplicitCastExpr 0x156942648 <col:7> 'int (*)()' <FunctionToPointerDecay>
    | | | | `-DeclRefExpr 0x1569425e8 <col:7> 'int ()' Function 0x156941c30 'g_ascii_strcasecmp' 'int ()'
    | | | |-ImplicitCastExpr 0x156942690 <col:27> 'char *' <ArrayToPointerDecay>
    | | | | `-StringLiteral 0x156942608 <col:27> 'char[4]' lvalue "STR"
    | | | `-ImplicitCastExpr 0x1569426a8 <col:34> 'const char *' <LValueToRValue>
    | | |   `-DeclRefExpr 0x156942628 <col:34> 'const char *' lvalue ParmVar 0x1569281a8 'name' 'const char *'
    | | `-IntegerLiteral 0x1569426c0 <col:43> 'int' 0
    | `-ReturnStmt 0x156942738 <line:24:5, col:12>
    |   `-RecoveryExpr 0x156942718 <col:12> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x1600088e8 <line:25:3, line:26:12>
    | |-BinaryOperator 0x160008880 <line:25:7, col:43> 'int' '=='
    | | |-CallExpr 0x160008800 <col:7, col:38> 'int'
    | | | |-ImplicitCastExpr 0x1569427c8 <col:7> 'int (*)()' <FunctionToPointerDecay>
    | | | | `-DeclRefExpr 0x156942768 <col:7> 'int ()' Function 0x156941c30 'g_ascii_strcasecmp' 'int ()'
    | | | |-ImplicitCastExpr 0x160008830 <col:27> 'char *' <ArrayToPointerDecay>
    | | | | `-StringLiteral 0x156942788 <col:27> 'char[4]' lvalue "STR"
    | | | `-ImplicitCastExpr 0x160008848 <col:34> 'const char *' <LValueToRValue>
    | | |   `-DeclRefExpr 0x1569427a8 <col:34> 'const char *' lvalue ParmVar 0x1569281a8 'name' 'const char *'
    | | `-IntegerLiteral 0x160008860 <col:43> 'int' 0
    | `-ReturnStmt 0x1600088d8 <line:26:5, col:12>
    |   `-RecoveryExpr 0x1600088b8 <col:12> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x160008e60 <line:27:3, line:32:5>
    | |-BinaryOperator 0x160008c70 <line:27:7, line:29:43> 'int' '||'
    | | |-BinaryOperator 0x160008b38 <line:27:7, line:28:43> 'int' '||'
    | | | |-BinaryOperator 0x160008a00 <line:27:7, col:43> 'int' '=='
    | | | | |-CallExpr 0x160008980 <col:7, col:38> 'int'
    | | | | | |-ImplicitCastExpr 0x160008968 <col:7> 'int (*)()' <FunctionToPointerDecay>
    | | | | | | `-DeclRefExpr 0x160008908 <col:7> 'int ()' Function 0x156941c30 'g_ascii_strcasecmp' 'int ()'
    | | | | | |-ImplicitCastExpr 0x1600089b0 <col:27> 'char *' <ArrayToPointerDecay>
    | | | | | | `-StringLiteral 0x160008928 <col:27> 'char[4]' lvalue "STR"
    | | | | | `-ImplicitCastExpr 0x1600089c8 <col:34> 'const char *' <LValueToRValue>
    | | | | |   `-DeclRefExpr 0x160008948 <col:34> 'const char *' lvalue ParmVar 0x1569281a8 'name' 'const char *'
    | | | | `-IntegerLiteral 0x1600089e0 <col:43> 'int' 0
    | | | `-BinaryOperator 0x160008b18 <line:28:7, col:43> 'int' '=='
    | | |   |-CallExpr 0x160008a98 <col:7, col:38> 'int'
    | | |   | |-ImplicitCastExpr 0x160008a80 <col:7> 'int (*)()' <FunctionToPointerDecay>
    | | |   | | `-DeclRefExpr 0x160008a20 <col:7> 'int ()' Function 0x156941c30 'g_ascii_strcasecmp' 'int ()'
    | | |   | |-ImplicitCastExpr 0x160008ac8 <col:27> 'char *' <ArrayToPointerDecay>
    | | |   | | `-StringLiteral 0x160008a40 <col:27> 'char[4]' lvalue "STR"
    | | |   | `-ImplicitCastExpr 0x160008ae0 <col:34> 'const char *' <LValueToRValue>
    | | |   |   `-DeclRefExpr 0x160008a60 <col:34> 'const char *' lvalue ParmVar 0x1569281a8 'name' 'const char *'
    | | |   `-IntegerLiteral 0x160008af8 <col:43> 'int' 0
    | | `-BinaryOperator 0x160008c50 <line:29:7, col:43> 'int' '=='
    | |   |-CallExpr 0x160008bd0 <col:7, col:38> 'int'
    | |   | |-ImplicitCastExpr 0x160008bb8 <col:7> 'int (*)()' <FunctionToPointerDecay>
    | |   | | `-DeclRefExpr 0x160008b58 <col:7> 'int ()' Function 0x156941c30 'g_ascii_strcasecmp' 'int ()'
    | |   | |-ImplicitCastExpr 0x160008c00 <col:27> 'char *' <ArrayToPointerDecay>
    | |   | | `-StringLiteral 0x160008b78 <col:27> 'char[4]' lvalue "STR"
    | |   | `-ImplicitCastExpr 0x160008c18 <col:34> 'const char *' <LValueToRValue>
    | |   |   `-DeclRefExpr 0x160008b98 <col:34> 'const char *' lvalue ParmVar 0x1569281a8 'name' 'const char *'
    | |   `-IntegerLiteral 0x160008c30 <col:43> 'int' 0
    | `-CompoundStmt 0x160008e48 <line:30:5, line:32:5>
    |   `-CallExpr 0x160008de8 <line:31:7, col:30> 'int'
    |     |-ImplicitCastExpr 0x160008dd0 <col:7> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x160008d70 <col:7> 'int ()' Function 0x160008cb8 'g_critical' 'int ()'
    |     |-ImplicitCastExpr 0x160008e18 <col:19> 'char *' <ArrayToPointerDecay>
    |     | `-StringLiteral 0x160008d90 <col:19> 'char[4]' lvalue "STR"
    |     `-ImplicitCastExpr 0x160008e30 <col:26> 'const char *' <LValueToRValue>
    |       `-DeclRefExpr 0x160008db0 <col:26> 'const char *' lvalue ParmVar 0x1569281a8 'name' 'const char *'
    `-ReturnStmt 0x160008ea0 <line:33:3, col:10>
      `-IntegerLiteral 0x160008e80 <col:10> 'int' 0
