TranslationUnitDecl 0x13b855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13b8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13b855bd0 '__int128'
|-TypedefDecl 0x13b856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13b855bf0 'unsigned __int128'
|-TypedefDecl 0x13b926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13b926000 'struct __NSConstantString_tag'
|   `-Record 0x13b856580 '__NSConstantString_tag'
|-TypedefDecl 0x13b926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13b855d90 '__SVInt8_t'
|-TypedefDecl 0x13b926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13b855db0 '__SVInt16_t'
|-TypedefDecl 0x13b926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13b855dd0 '__SVInt32_t'
|-TypedefDecl 0x13b9263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13b855df0 '__SVInt64_t'
|-TypedefDecl 0x13b926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13b855e10 '__SVUint8_t'
|-TypedefDecl 0x13b9264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13b855e30 '__SVUint16_t'
|-TypedefDecl 0x13b926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13b855e50 '__SVUint32_t'
|-TypedefDecl 0x13b926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13b855e70 '__SVUint64_t'
|-TypedefDecl 0x13b9265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13b855e90 '__SVFloat16_t'
|-TypedefDecl 0x13b926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13b855eb0 '__SVFloat32_t'
|-TypedefDecl 0x13b9266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13b855ed0 '__SVFloat64_t'
|-TypedefDecl 0x13b926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13b855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13b926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13b855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13b9267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13b855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13b926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13b855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13b9268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13b855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13b926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13b855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13b926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13b855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13b9269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13b855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13b926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13b855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13b926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13b856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13b926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13b856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13b926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13b856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13b926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13b856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13b926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13b856090 '__clang_svint8x3_t'
|-TypedefDecl 0x13b926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13b8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13b926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13b8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13b926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13b8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13b926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13b856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13b926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13b856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13b926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13b856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13b926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13b856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13b926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13b856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13b927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13b8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13b927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13b8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13b9278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13b8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13b927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13b856210 '__clang_svint8x4_t'
|-TypedefDecl 0x13b9279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13b856230 '__clang_svint16x4_t'
|-TypedefDecl 0x13b927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13b856250 '__clang_svint32x4_t'
|-TypedefDecl 0x13b927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13b856270 '__clang_svint64x4_t'
|-TypedefDecl 0x13b927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13b856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13b927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13b8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13b927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13b8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13b927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13b8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13b927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13b856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13b927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13b856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13b927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13b856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13b927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13b856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13b927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13b856390 '__SVBool_t'
|-TypedefDecl 0x13b927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13b8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13b927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13b8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13b927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13b8563f0 '__SVCount_t'
|-TypedefDecl 0x13b927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13b927fb0 'char *'
|   `-BuiltinType 0x13b8556b0 'char'
|-TypedefDecl 0x13b928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13b927fb0 'char *'
|   `-BuiltinType 0x13b8556b0 'char'
|-FunctionDecl 0x13b9283d8 <dataset_diviso_filec/func7796_vuln.c:1:1, line:28:1> line:1:1 invalid XSetCommand 'int (int *, int, char **, int)'
| |-ParmVarDecl 0x13b928128 <line:2:2, col:11> col:11 invalid dpy 'int *'
| |-ParmVarDecl 0x13b9281a8 <line:3:2, col:9> col:9 invalid w 'int'
| |-ParmVarDecl 0x13b928258 <line:4:2, col:9> col:9 used argv 'char **'
| |-ParmVarDecl 0x13b9282d8 <line:5:2, col:6> col:6 used argc 'int'
| `-CompoundStmt 0x13b944a98 <line:6:1, line:28:1>
|   |-DeclStmt 0x13b928520 <line:7:2, col:16>
|   | `-VarDecl 0x13b9284b8 <col:2, col:15> col:15 used i 'int' register
|   |-UnaryExprOrTypeTraitExpr 0x13b928590 <line:8:2, col:9> 'unsigned long' contains-errors sizeof
|   | `-RecoveryExpr 0x13b928570 <col:9> '<dependent type>' contains-errors lvalue
|   |-DeclStmt 0x13b9286c8 <line:9:2, col:25>
|   | |-VarDecl 0x13b9285c8 <col:2, col:17> col:17 used buf 'char *' register
|   | `-VarDecl 0x13b928648 <col:2, col:23> col:23 used bp 'char *' register
|   |-ForStmt 0x13b941b68 <line:10:2, line:12:2>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x13b941830 <line:10:26, col:30> 'int' '<'
|   | | |-ImplicitCastExpr 0x13b941800 <col:26> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13b9287b8 <col:26> 'int' lvalue Var 0x13b9284b8 'i' 'int'
|   | | `-ImplicitCastExpr 0x13b941818 <col:30> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x13b9287d8 <col:30> 'int' lvalue ParmVar 0x13b9282d8 'argc' 'int'
|   | |-UnaryOperator 0x13b941870 <col:36, col:37> 'int' postfix '++'
|   | | `-DeclRefExpr 0x13b941850 <col:36> 'int' lvalue Var 0x13b9284b8 'i' 'int'
|   | `-CompoundStmt 0x13b941b58 <col:41, line:12:2>
|   |-IfStmt 0x13b944a48 <line:13:2, line:26:2>
|   | |-RecoveryExpr 0x13b941d60 <line:13:6, col:33> '_Bool' contains-errors
|   | `-CompoundStmt 0x13b944a20 <col:36, line:26:2>
|   |   |-ForStmt 0x13b944470 <line:15:6, line:22:6>
|   |   | |-BinaryOperator 0x13b941dc0 <line:15:11, col:15> 'int' '='
|   |   | | |-DeclRefExpr 0x13b941d80 <col:11> 'int' lvalue Var 0x13b9284b8 'i' 'int'
|   |   | | `-IntegerLiteral 0x13b941da0 <col:15> 'int' 0
|   |   | |-<<<NULL>>>
|   |   | |-BinaryOperator 0x13b941e50 <col:18, col:22> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x13b941e20 <col:18> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x13b941de0 <col:18> 'int' lvalue Var 0x13b9284b8 'i' 'int'
|   |   | | `-ImplicitCastExpr 0x13b941e38 <col:22> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x13b941e00 <col:22> 'int' lvalue ParmVar 0x13b9282d8 'argc' 'int'
|   |   | |-UnaryOperator 0x13b941e90 <col:28, col:29> 'int' postfix '++'
|   |   | | `-DeclRefExpr 0x13b941e70 <col:28> 'int' lvalue Var 0x13b9284b8 'i' 'int'
|   |   | `-CompoundStmt 0x13b944458 <col:33, line:22:6>
|   |   |   `-IfStmt 0x13b944428 <line:16:3, line:21:15> has_else
|   |   |     |-ImplicitCastExpr 0x13b941f38 <line:16:7, col:13> 'char *' <LValueToRValue>
|   |   |     | `-ArraySubscriptExpr 0x13b941f18 <col:7, col:13> 'char *' lvalue
|   |   |     |   |-ImplicitCastExpr 0x13b941ee8 <col:7> 'char **' <LValueToRValue>
|   |   |     |   | `-DeclRefExpr 0x13b941ea8 <col:7> 'char **' lvalue ParmVar 0x13b928258 'argv' 'char **'
|   |   |     |   `-ImplicitCastExpr 0x13b941f00 <col:12> 'int' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x13b941ec8 <col:12> 'int' lvalue Var 0x13b9284b8 'i' 'int'
|   |   |     |-CompoundStmt 0x13b944368 <col:16, line:19:3>
|   |   |     | |-CStyleCastExpr 0x13b942760 <line:17:7, col:32> 'void' <ToVoid>
|   |   |     | | `-CallExpr 0x13b9426d8 <col:14, col:32> 'char *'
|   |   |     | |   |-ImplicitCastExpr 0x13b9426c0 <col:14> 'char *(*)(char *, const char *)' <FunctionToPointerDecay>
|   |   |     | |   | `-DeclRefExpr 0x13b942590 <col:14> 'char *(char *, const char *)' Function 0x13b9423b0 'strcpy' 'char *(char *, const char *)'
|   |   |     | |   |-ImplicitCastExpr 0x13b942708 <col:21> 'char *' <LValueToRValue>
|   |   |     | |   | `-DeclRefExpr 0x13b9425b0 <col:21> 'char *' lvalue Var 0x13b928648 'bp' 'char *'
|   |   |     | |   `-ImplicitCastExpr 0x13b942738 <col:25, col:31> 'const char *' <NoOp>
|   |   |     | |     `-ImplicitCastExpr 0x13b942720 <col:25, col:31> 'char *' <LValueToRValue>
|   |   |     | |       `-ArraySubscriptExpr 0x13b942640 <col:25, col:31> 'char *' lvalue
|   |   |     | |         |-ImplicitCastExpr 0x13b942610 <col:25> 'char **' <LValueToRValue>
|   |   |     | |         | `-DeclRefExpr 0x13b9425d0 <col:25> 'char **' lvalue ParmVar 0x13b928258 'argv' 'char **'
|   |   |     | |         `-ImplicitCastExpr 0x13b942628 <col:30> 'int' <LValueToRValue>
|   |   |     | |           `-DeclRefExpr 0x13b9425f0 <col:30> 'int' lvalue Var 0x13b9284b8 'i' 'int'
|   |   |     | `-CompoundAssignOperator 0x13b944338 <line:18:7, col:31> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
|   |   |     |   |-DeclRefExpr 0x13b942788 <col:7> 'char *' lvalue Var 0x13b928648 'bp' 'char *'
|   |   |     |   `-BinaryOperator 0x13b944318 <col:13, col:31> 'unsigned long' '+'
|   |   |     |     |-CallExpr 0x13b944288 <col:13, col:27> 'unsigned long'
|   |   |     |     | |-ImplicitCastExpr 0x13b944270 <col:13> 'unsigned long (*)(const char *)' <FunctionToPointerDecay>
|   |   |     |     | | `-DeclRefExpr 0x13b944170 <col:13> 'unsigned long (const char *)' Function 0x13b944000 'strlen' 'unsigned long (const char *)'
|   |   |     |     | `-ImplicitCastExpr 0x13b9442c8 <col:20, col:26> 'const char *' <NoOp>
|   |   |     |     |   `-ImplicitCastExpr 0x13b9442b0 <col:20, col:26> 'char *' <LValueToRValue>
|   |   |     |     |     `-ArraySubscriptExpr 0x13b944200 <col:20, col:26> 'char *' lvalue
|   |   |     |     |       |-ImplicitCastExpr 0x13b9441d0 <col:20> 'char **' <LValueToRValue>
|   |   |     |     |       | `-DeclRefExpr 0x13b944190 <col:20> 'char **' lvalue ParmVar 0x13b928258 'argv' 'char **'
|   |   |     |     |       `-ImplicitCastExpr 0x13b9441e8 <col:25> 'int' <LValueToRValue>
|   |   |     |     |         `-DeclRefExpr 0x13b9441b0 <col:25> 'int' lvalue Var 0x13b9284b8 'i' 'int'
|   |   |     |     `-ImplicitCastExpr 0x13b944300 <col:31> 'unsigned long' <IntegralCast>
|   |   |     |       `-IntegerLiteral 0x13b9442e0 <col:31> 'int' 1
|   |   |     `-BinaryOperator 0x13b944408 <line:21:7, col:15> 'char' '='
|   |   |       |-UnaryOperator 0x13b9443c0 <col:7, col:10> 'char' lvalue prefix '*' cannot overflow
|   |   |       | `-UnaryOperator 0x13b9443a8 <col:8, col:10> 'char *' postfix '++'
|   |   |       |   `-DeclRefExpr 0x13b944388 <col:8> 'char *' lvalue Var 0x13b928648 'bp' 'char *'
|   |   |       `-ImplicitCastExpr 0x13b9443f0 <col:15> 'char' <IntegralCast>
|   |   |         `-CharacterLiteral 0x13b9443d8 <col:15> 'int' 0
|   |   |-CallExpr 0x13b944848 <line:23:6, line:24:54> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x13b944588 <line:23:6> 'int ()' Function 0x13b9444d0 'XChangeProperty' 'int ()'
|   |   | |-RecoveryExpr 0x13b9445a8 <col:23> '<dependent type>' contains-errors lvalue
|   |   | |-RecoveryExpr 0x13b9445c8 <col:28> '<dependent type>' contains-errors lvalue
|   |   | |-RecoveryExpr 0x13b944770 <col:31> '<dependent type>' contains-errors lvalue
|   |   | |-RecoveryExpr 0x13b944790 <col:46> '<dependent type>' contains-errors lvalue
|   |   | |-IntegerLiteral 0x13b944618 <col:57> 'int' 8
|   |   | |-RecoveryExpr 0x13b9447b0 <line:24:9> '<dependent type>' contains-errors lvalue
|   |   | |-CStyleCastExpr 0x13b944800 <col:26, col:43> 'unsigned char *' <BitCast>
|   |   | | `-ImplicitCastExpr 0x13b9447e8 <col:43> 'char *' <LValueToRValue> part_of_explicit_cast
|   |   | |   `-DeclRefExpr 0x13b944650 <col:43> 'char *' lvalue Var 0x13b9285c8 'buf' 'char *'
|   |   | `-RecoveryExpr 0x13b944828 <col:48> '<dependent type>' contains-errors lvalue
|   |   `-CallExpr 0x13b9449e0 <line:25:6, col:15> 'int'
|   |     |-ImplicitCastExpr 0x13b9449c8 <col:6> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x13b944988 <col:6> 'int ()' Function 0x13b9448d0 'Xfree' 'int ()'
|   |     `-ImplicitCastExpr 0x13b944a08 <col:12> 'char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x13b9449a8 <col:12> 'char *' lvalue Var 0x13b9285c8 'buf' 'char *'
|   `-ReturnStmt 0x13b944a88 <line:27:2, col:9>
|     `-IntegerLiteral 0x13b944a68 <col:9> 'int' 1
|-FunctionDecl 0x13b9423b0 <line:17:14> col:14 implicit used strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x13b9424b0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x13b942518 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x13b942458 <<invalid sloc>> Implicit 885
`-FunctionDecl 0x13b944000 <line:18:13> col:13 implicit used strlen 'unsigned long (const char *)' extern
  |-ParmVarDecl 0x13b944100 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x13b9440a8 <<invalid sloc>> Implicit 902
