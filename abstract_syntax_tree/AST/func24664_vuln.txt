TranslationUnitDecl 0x11e055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x11e0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x11e055bd0 '__int128'
|-TypedefDecl 0x11e056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x11e055bf0 'unsigned __int128'
|-TypedefDecl 0x11e80be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x11e80bc00 'struct __NSConstantString_tag'
|   `-Record 0x11e056580 '__NSConstantString_tag'
|-TypedefDecl 0x11e80be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x11e055d90 '__SVInt8_t'
|-TypedefDecl 0x11e80bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x11e055db0 '__SVInt16_t'
|-TypedefDecl 0x11e80bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x11e055dd0 '__SVInt32_t'
|-TypedefDecl 0x11e80bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x11e055df0 '__SVInt64_t'
|-TypedefDecl 0x11e80c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x11e055e10 '__SVUint8_t'
|-TypedefDecl 0x11e80c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x11e055e30 '__SVUint16_t'
|-TypedefDecl 0x11e80c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x11e055e50 '__SVUint32_t'
|-TypedefDecl 0x11e80c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x11e055e70 '__SVUint64_t'
|-TypedefDecl 0x11e80c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x11e055e90 '__SVFloat16_t'
|-TypedefDecl 0x11e80c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x11e055eb0 '__SVFloat32_t'
|-TypedefDecl 0x11e80c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x11e055ed0 '__SVFloat64_t'
|-TypedefDecl 0x11e80c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x11e055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x11e80c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x11e055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x11e80c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x11e055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x11e80c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x11e055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x11e80c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x11e055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x11e80c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x11e055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x11e80c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x11e055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x11e80c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x11e055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x11e80c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x11e055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x11e80c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x11e056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x11e80c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x11e056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x11e80c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x11e056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x11e80c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x11e056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x11e80c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x11e056090 '__clang_svint8x3_t'
|-TypedefDecl 0x11e80c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x11e0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x11e80c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x11e0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x11e80c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x11e0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x11e80c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x11e056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x11e80ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x11e056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x11e80cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x11e056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x11e80cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x11e056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x11e80cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x11e056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x11e80d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x11e0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x11e80d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x11e0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x11e80d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x11e0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x11e80d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x11e056210 '__clang_svint8x4_t'
|-TypedefDecl 0x11e80d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x11e056230 '__clang_svint16x4_t'
|-TypedefDecl 0x11e80d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x11e056250 '__clang_svint32x4_t'
|-TypedefDecl 0x11e80d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x11e056270 '__clang_svint64x4_t'
|-TypedefDecl 0x11e80d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x11e056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x11e80d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x11e0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x11e80d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x11e0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x11e80d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x11e0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x11e80d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x11e056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x11e80d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x11e056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x11e80d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x11e056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x11e80d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x11e056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x11e80da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x11e056390 '__SVBool_t'
|-TypedefDecl 0x11e80da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x11e0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x11e80dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x11e0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x11e80db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x11e0563f0 '__SVCount_t'
|-TypedefDecl 0x11e80dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x11e80dbb0 'char *'
|   `-BuiltinType 0x11e0556b0 'char'
|-TypedefDecl 0x11e80dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x11e80dbb0 'char *'
|   `-BuiltinType 0x11e0556b0 'char'
|-FunctionDecl 0x11e80dfe8 <dataset_diviso_filec/func24664_vuln.c:1:1, line:56:1> line:1:12 invalid bochs_open 'int (int *, int *, int, int **)' static
| |-ParmVarDecl 0x11e80dd28 <col:23, col:41> col:41 referenced invalid bs 'int *'
| |-ParmVarDecl 0x11e80dda8 <col:45, col:52> col:52 invalid options 'int *'
| |-ParmVarDecl 0x11e80de28 <col:61, col:65> col:65 flags 'int'
| |-ParmVarDecl 0x11e80dee0 <line:2:23, col:31> col:31 invalid errp 'int **'
| `-CompoundStmt 0x11e123698 <line:3:1, line:56:1>
|   |-DeclStmt 0x11e80e1b0 <line:5:5, col:10>
|   | `-VarDecl 0x11e80e148 <col:5, col:9> col:9 used i 'int'
|   |-DeclStmt 0x11e8277a8 <line:6:5, col:30>
|   | |-RecordDecl 0x11e80e1c8 <col:5, col:12> col:12 struct bochs_header
|   | `-VarDecl 0x11e80e2c8 <col:5, col:25> col:25 invalid bochs 'struct bochs_header'
|   |-DeclStmt 0x11e827840 <line:7:5, col:12>
|   | `-VarDecl 0x11e8277d8 <col:5, col:9> col:9 used ret 'int'
|   |-BinaryOperator 0x11e827908 <line:9:5, col:21> '<dependent type>' contains-errors '='
|   | |-CXXDependentScopeMemberExpr 0x11e8278a0 <col:5, col:9> '<dependent type>' contains-errors lvalue ->read_only
|   | | `-RecoveryExpr 0x11e827878 <col:5> '<dependent type>' contains-errors lvalue
|   | |   `-DeclRefExpr 0x11e827858 <col:5> 'int *' lvalue ParmVar 0x11e80dd28 'bs' 'int *'
|   | `-IntegerLiteral 0x11e8278e8 <col:21> 'int' 1
|   |-BinaryOperator 0x11e827c20 <line:11:5, col:56> 'int' contains-errors '='
|   | |-DeclRefExpr 0x11e827928 <col:5> 'int' lvalue Var 0x11e8277d8 'ret' 'int'
|   | `-CallExpr 0x11e827be0 <col:11, col:56> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x11e827aa0 <col:11> 'int ()' Function 0x11e8279e8 'bdrv_pread' 'int ()'
|   |   |-CXXDependentScopeMemberExpr 0x11e827ae0 <col:22, col:26> '<dependent type>' contains-errors lvalue ->file
|   |   | `-RecoveryExpr 0x11e827ac0 <col:22> '<dependent type>' contains-errors lvalue
|   |   |-IntegerLiteral 0x11e827b28 <col:32> 'int' 0
|   |   |-UnaryOperator 0x11e827b68 <col:35, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow
|   |   | `-RecoveryExpr 0x11e827b48 <col:36> '<dependent type>' contains-errors lvalue
|   |   `-UnaryExprOrTypeTraitExpr 0x11e827bc0 <col:43, col:55> 'unsigned long' contains-errors sizeof
|   |     `-ParenExpr 0x11e827ba0 <col:49, col:55> '<dependent type>' contains-errors lvalue
|   |       `-RecoveryExpr 0x11e827b80 <col:50> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x11e827d18 <line:12:5, line:14:5>
|   | |-BinaryOperator 0x11e827c98 <line:12:9, col:15> 'int' '<'
|   | | |-ImplicitCastExpr 0x11e827c80 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x11e827c40 <col:9> 'int' lvalue Var 0x11e8277d8 'ret' 'int'
|   | | `-IntegerLiteral 0x11e827c60 <col:15> 'int' 0
|   | `-CompoundStmt 0x11e827d00 <col:18, line:14:5>
|   |   `-ReturnStmt 0x11e827cf0 <line:13:9, col:16>
|   |     `-ImplicitCastExpr 0x11e827cd8 <col:16> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x11e827cb8 <col:16> 'int' lvalue Var 0x11e8277d8 'ret' 'int'
|   |-IfStmt 0x11e82ac28 <line:16:5, line:23:5>
|   | |-RecoveryExpr 0x11e82a990 <line:16:9, line:20:43> '_Bool' contains-errors
|   | `-CompoundStmt 0x11e82ac08 <col:46, line:23:5>
|   |   |-CallExpr 0x11e82ab30 <line:21:9, col:31> '<dependent type>' contains-errors
|   |   | |-DeclRefExpr 0x11e82aa90 <col:9> 'int ()' Function 0x11e82a9d8 'error_setg' 'int ()'
|   |   | |-RecoveryExpr 0x11e82aab0 <col:20> '<dependent type>' contains-errors lvalue
|   |   | `-StringLiteral 0x11e82ab10 <col:26> 'char[4]' lvalue "STR"
|   |   `-ReturnStmt 0x11e82abf8 <line:22:9, col:17>
|   |     `-UnaryOperator 0x11e82abe0 <col:16, col:17> '<dependent type>' contains-errors prefix '-' cannot overflow
|   |       `-ImplicitCastExpr 0x11e82abc8 <col:17> '<dependent type>' contains-errors <LValueToRValue>
|   |         `-RecoveryExpr 0x11e82aba8 <col:17> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x11e82b2e0 <line:25:5, line:29:5> has_else
|   | |-BinaryOperator 0x11e82ad50 <line:25:9, col:39> 'int' contains-errors '=='
|   | | |-CallExpr 0x11e82acd0 <col:9, col:34> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x11e82ac48 <col:9> 'int ()' Function 0x11e8282c8 'le32_to_cpu' 'int ()'
|   | | | `-CXXDependentScopeMemberExpr 0x11e82ac88 <col:21, col:27> '<dependent type>' contains-errors lvalue .version
|   | | |   `-RecoveryExpr 0x11e82ac68 <col:21> '<dependent type>' contains-errors lvalue
|   | | `-RecoveryExpr 0x11e82ad30 <col:39> '<dependent type>' contains-errors lvalue
|   | |-CompoundStmt 0x11e82b080 <col:50, line:27:5>
|   | | `-BinaryOperator 0x11e82b060 <line:26:9, col:72> '<dependent type>' contains-errors '='
|   | |   |-CXXDependentScopeMemberExpr 0x11e82adb8 <col:9, col:13> '<dependent type>' contains-errors lvalue ->total_sectors
|   | |   | `-RecoveryExpr 0x11e82ad90 <col:9> '<dependent type>' contains-errors lvalue
|   | |   |   `-DeclRefExpr 0x11e82ad70 <col:9> 'int *' lvalue ParmVar 0x11e80dd28 'bs' 'int *'
|   | |   `-BinaryOperator 0x11e82b040 <col:29, col:72> '<dependent type>' contains-errors '/'
|   | |     |-CallExpr 0x11e82aff8 <col:29, col:68> '<dependent type>' contains-errors
|   | |     | |-DeclRefExpr 0x11e82aee0 <col:29> 'int ()' Function 0x11e82ae28 'le64_to_cpu' 'int ()'
|   | |     | `-CXXDependentScopeMemberExpr 0x11e82afb0 <col:41, col:64> '<dependent type>' contains-errors lvalue .disk
|   | |     |   `-CXXDependentScopeMemberExpr 0x11e82af68 <col:41, col:53> '<dependent type>' contains-errors lvalue .redolog_v1
|   | |     |     `-CXXDependentScopeMemberExpr 0x11e82af20 <col:41, col:47> '<dependent type>' contains-errors lvalue .extra
|   | |     |       `-RecoveryExpr 0x11e82af00 <col:41> '<dependent type>' contains-errors lvalue
|   | |     `-IntegerLiteral 0x11e82b020 <col:72> 'int' 512
|   | `-CompoundStmt 0x11e82b2c8 <line:27:12, line:29:5>
|   |   `-BinaryOperator 0x11e82b2a8 <line:28:9, col:69> '<dependent type>' contains-errors '='
|   |     |-CXXDependentScopeMemberExpr 0x11e82b0e0 <col:9, col:13> '<dependent type>' contains-errors lvalue ->total_sectors
|   |     | `-RecoveryExpr 0x11e82b0b8 <col:9> '<dependent type>' contains-errors lvalue
|   |     |   `-DeclRefExpr 0x11e82b098 <col:9> 'int *' lvalue ParmVar 0x11e80dd28 'bs' 'int *'
|   |     `-BinaryOperator 0x11e82b288 <col:29, col:69> '<dependent type>' contains-errors '/'
|   |       |-CallExpr 0x11e82b240 <col:29, col:65> '<dependent type>' contains-errors
|   |       | |-DeclRefExpr 0x11e82b128 <col:29> 'int ()' Function 0x11e82ae28 'le64_to_cpu' 'int ()'
|   |       | `-CXXDependentScopeMemberExpr 0x11e82b1f8 <col:41, col:61> '<dependent type>' contains-errors lvalue .disk
|   |       |   `-CXXDependentScopeMemberExpr 0x11e82b1b0 <col:41, col:53> '<dependent type>' contains-errors lvalue .redolog
|   |       |     `-CXXDependentScopeMemberExpr 0x11e82b168 <col:41, col:47> '<dependent type>' contains-errors lvalue .extra
|   |       |       `-RecoveryExpr 0x11e82b148 <col:41> '<dependent type>' contains-errors lvalue
|   |       `-IntegerLiteral 0x11e82b268 <col:69> 'int' 512
|   |-IfStmt 0x11e82b750 <line:36:5, line:38:5>
|   | |-BinaryOperator 0x11e82b6b0 <line:36:9, col:15> 'int' '<'
|   | | |-ImplicitCastExpr 0x11e82b698 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x11e82b658 <col:9> 'int' lvalue Var 0x11e8277d8 'ret' 'int'
|   | | `-IntegerLiteral 0x11e82b678 <col:15> 'int' 0
|   | `-CompoundStmt 0x11e82b738 <col:18, line:38:5>
|   |   `-GotoStmt 0x11e82b720 <line:37:9, col:14> 'fail' 0x11e82b6d0
|   |-ReturnStmt 0x11e123518 <line:51:5, col:12>
|   | `-IntegerLiteral 0x11e1234f8 <col:12> 'int' 0
|   |-LabelStmt 0x11e123630 <line:53:1, col:5> 'fail'
|   | `-NullStmt 0x11e123628 <col:5>
|   `-ReturnStmt 0x11e123688 <line:55:5, col:12>
|     `-ImplicitCastExpr 0x11e123670 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x11e123650 <col:12> 'int' lvalue Var 0x11e8277d8 'ret' 'int'
`-FunctionDecl 0x11e827d80 <line:16:9> col:9 implicit used strcmp 'int (const char *, const char *)' extern
  |-ParmVarDecl 0x11e827e80 <<invalid sloc>> <invalid sloc> 'const char *'
  |-ParmVarDecl 0x11e827ee8 <<invalid sloc>> <invalid sloc> 'const char *'
  `-BuiltinAttr 0x11e827e28 <<invalid sloc>> Implicit 887
