TranslationUnitDecl 0x128055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1280564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x128055bd0 '__int128'
|-TypedefDecl 0x128056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x128055bf0 'unsigned __int128'
|-TypedefDecl 0x128126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x128126000 'struct __NSConstantString_tag'
|   `-Record 0x128056580 '__NSConstantString_tag'
|-TypedefDecl 0x128126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x128055d90 '__SVInt8_t'
|-TypedefDecl 0x128126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x128055db0 '__SVInt16_t'
|-TypedefDecl 0x128126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x128055dd0 '__SVInt32_t'
|-TypedefDecl 0x1281263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x128055df0 '__SVInt64_t'
|-TypedefDecl 0x128126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x128055e10 '__SVUint8_t'
|-TypedefDecl 0x1281264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x128055e30 '__SVUint16_t'
|-TypedefDecl 0x128126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x128055e50 '__SVUint32_t'
|-TypedefDecl 0x128126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x128055e70 '__SVUint64_t'
|-TypedefDecl 0x1281265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x128055e90 '__SVFloat16_t'
|-TypedefDecl 0x128126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x128055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1281266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x128055ed0 '__SVFloat64_t'
|-TypedefDecl 0x128126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x128055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x128126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x128055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1281267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x128055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x128126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x128055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1281268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x128055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x128126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x128055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x128126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x128055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1281269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x128055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x128126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x128055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x128126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x128056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x128126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x128056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x128126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x128056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x128126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x128056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x128126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x128056090 '__clang_svint8x3_t'
|-TypedefDecl 0x128126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1280560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x128126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1280560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x128126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1280560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x128126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x128056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x128126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x128056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x128126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x128056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x128126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x128056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x128126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x128056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x128127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1280561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x128127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1280561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1281278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1280561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x128127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x128056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1281279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x128056230 '__clang_svint16x4_t'
|-TypedefDecl 0x128127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x128056250 '__clang_svint32x4_t'
|-TypedefDecl 0x128127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x128056270 '__clang_svint64x4_t'
|-TypedefDecl 0x128127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x128056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x128127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1280562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x128127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1280562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x128127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1280562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x128127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x128056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x128127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x128056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x128127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x128056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x128127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x128056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x128127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x128056390 '__SVBool_t'
|-TypedefDecl 0x128127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1280563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x128127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1280563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x128127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1280563f0 '__SVCount_t'
|-TypedefDecl 0x128127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x128127fb0 'char *'
|   `-BuiltinType 0x1280556b0 'char'
|-TypedefDecl 0x128128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x128127fb0 'char *'
|   `-BuiltinType 0x1280556b0 'char'
`-FunctionDecl 0x128128258 <dataset_diviso_filec/func19993_nonvuln.c:1:1, line:40:1> line:1:1 invalid unparse_filesystem_flags 'int (const char *, int)'
  |-ParmVarDecl 0x1281280d8 <col:27, col:49> col:49 used path 'const char *'
  |-ParmVarDecl 0x128128170 <line:2:27, col:49> col:49 invalid mode 'int'
  `-CompoundStmt 0x103808800 <line:3:1, line:40:1>
    |-CallExpr 0x1281284f0 <line:4:3, col:20> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x128128470 <col:3> 'int ()' Function 0x1281283b8 'g_autoptr' 'int ()'
    | `-RecoveryExpr 0x1281284d0 <col:13> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x128128788 <line:5:3, col:16>
    | `-VarDecl 0x128128720 <col:3, col:15> col:15 used p 'const char *'
    |-ForStmt 0x128141ff0 <line:7:3, line:15:5>
    | |-BinaryOperator 0x128141800 <line:7:8, col:12> 'const char *' '='
    | | |-DeclRefExpr 0x1281287a0 <col:8> 'const char *' lvalue Var 0x128128720 'p' 'const char *'
    | | `-ImplicitCastExpr 0x1281287e0 <col:12> 'const char *' <LValueToRValue>
    | |   `-DeclRefExpr 0x1281287c0 <col:12> 'const char *' lvalue ParmVar 0x1281280d8 'path' 'const char *'
    | |-<<<NULL>>>
    | |-BinaryOperator 0x1281418c0 <col:18, col:24> 'int' '!='
    | | |-ImplicitCastExpr 0x1281418a8 <col:18, col:19> 'int' <IntegralCast>
    | | | `-ImplicitCastExpr 0x128141890 <col:18, col:19> 'char' <LValueToRValue>
    | | |   `-UnaryOperator 0x128141858 <col:18, col:19> 'const char' lvalue prefix '*' cannot overflow
    | | |     `-ImplicitCastExpr 0x128141840 <col:19> 'const char *' <LValueToRValue>
    | | |       `-DeclRefExpr 0x128141820 <col:19> 'const char *' lvalue Var 0x128128720 'p' 'const char *'
    | | `-IntegerLiteral 0x128141870 <col:24> 'int' 0
    | |-UnaryOperator 0x128141900 <col:27, col:28> 'const char *' postfix '++'
    | | `-DeclRefExpr 0x1281418e0 <col:27> 'const char *' lvalue Var 0x128128720 'p' 'const char *'
    | `-CompoundStmt 0x128141fd8 <line:8:5, line:15:5>
    |   `-IfStmt 0x128141fa8 <line:9:7, line:14:33> has_else
    |     |-BinaryOperator 0x1281419b0 <line:9:11, col:17> 'int' '=='
    |     | |-ImplicitCastExpr 0x128141998 <col:11, col:12> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x128141980 <col:11, col:12> 'char' <LValueToRValue>
    |     | |   `-UnaryOperator 0x128141950 <col:11, col:12> 'const char' lvalue prefix '*' cannot overflow
    |     | |     `-ImplicitCastExpr 0x128141938 <col:12> 'const char *' <LValueToRValue>
    |     | |       `-DeclRefExpr 0x128141918 <col:12> 'const char *' lvalue Var 0x128128720 'p' 'const char *'
    |     | `-CharacterLiteral 0x128141968 <col:17> 'int' 58
    |     |-CallExpr 0x128141ba0 <line:10:9, col:34> '<dependent type>' contains-errors
    |     | |-DeclRefExpr 0x128141ab0 <col:9> 'int ()' Function 0x1281419f8 'g_string_append' 'int ()'
    |     | |-RecoveryExpr 0x128141b80 <col:26> '<dependent type>' contains-errors lvalue
    |     | `-StringLiteral 0x128141b30 <col:29> 'char[4]' lvalue "STR"
    |     `-IfStmt 0x128141f78 <line:11:12, line:14:33> has_else
    |       |-BinaryOperator 0x128141c68 <line:11:16, col:22> 'int' '=='
    |       | |-ImplicitCastExpr 0x128141c50 <col:16, col:17> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x128141c38 <col:16, col:17> 'char' <LValueToRValue>
    |       | |   `-UnaryOperator 0x128141c08 <col:16, col:17> 'const char' lvalue prefix '*' cannot overflow
    |       | |     `-ImplicitCastExpr 0x128141bf0 <col:17> 'const char *' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x128141bd0 <col:17> 'const char *' lvalue Var 0x128128720 'p' 'const char *'
    |       | `-CharacterLiteral 0x128141c20 <col:22> 'int' 92
    |       |-CallExpr 0x128141d30 <line:12:9, col:34> '<dependent type>' contains-errors
    |       | |-DeclRefExpr 0x128141c88 <col:9> 'int ()' Function 0x1281419f8 'g_string_append' 'int ()'
    |       | |-RecoveryExpr 0x128141d10 <col:26> '<dependent type>' contains-errors lvalue
    |       | `-StringLiteral 0x128141cc0 <col:29> 'char[4]' lvalue "STR"
    |       `-CallExpr 0x128141f48 <line:14:9, col:33> '<dependent type>' contains-errors
    |         |-DeclRefExpr 0x128141e40 <col:9> 'int ()' Function 0x128141d88 'g_string_append_c' 'int ()'
    |         |-RecoveryExpr 0x128141ef8 <col:28> '<dependent type>' contains-errors lvalue
    |         `-UnaryOperator 0x128141f30 <col:31, col:32> 'const char' lvalue prefix '*' cannot overflow
    |           `-ImplicitCastExpr 0x128141f18 <col:32> 'const char *' <LValueToRValue>
    |             `-DeclRefExpr 0x128141e78 <col:32> 'const char *' lvalue Var 0x128128720 'p' 'const char *'
    `-SwitchStmt 0x128142060 <line:17:3, line:37:5>
      |-ImplicitCastExpr 0x128142048 <line:17:11> '<dependent type>' contains-errors <LValueToRValue>
      | `-RecoveryExpr 0x128142028 <col:11> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x128142588 <line:18:5, line:37:5>
        |-CallExpr 0x128142148 <line:20:7, col:32> '<dependent type>' contains-errors
        | |-DeclRefExpr 0x1281420a0 <col:7> 'int ()' Function 0x1281419f8 'g_string_append' 'int ()'
        | |-RecoveryExpr 0x128142128 <col:24> '<dependent type>' contains-errors lvalue
        | `-StringLiteral 0x1281420d8 <col:27> 'char[4]' lvalue "STR"
        |-BreakStmt 0x128142178 <line:21:7>
        |-CallExpr 0x128142240 <line:24:7, col:32> '<dependent type>' contains-errors
        | |-DeclRefExpr 0x128142198 <col:7> 'int ()' Function 0x1281419f8 'g_string_append' 'int ()'
        | |-RecoveryExpr 0x128142220 <col:24> '<dependent type>' contains-errors lvalue
        | `-StringLiteral 0x1281421d0 <col:27> 'char[4]' lvalue "STR"
        |-BreakStmt 0x128142270 <line:25:7>
        |-BreakStmt 0x128142290 <line:28:7>
        |-BreakStmt 0x1281423e8 <line:32:7>
        |-DefaultStmt 0x128142560 <line:34:5, line:35:29>
        | `-CallExpr 0x128142530 <col:7, col:29> '<dependent type>' contains-errors
        |   |-DeclRefExpr 0x1281424d0 <col:7> 'int ()' Function 0x128142418 'g_warning' 'int ()'
        |   |-StringLiteral 0x1281424f0 <col:18> 'char[4]' lvalue "STR"
        |   `-RecoveryExpr 0x128142510 <col:25> '<dependent type>' contains-errors lvalue
        `-BreakStmt 0x128142580 <line:36:7>
