TranslationUnitDecl 0x14a855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14a8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14a855bd0 '__int128'
|-TypedefDecl 0x14a856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14a855bf0 'unsigned __int128'
|-TypedefDecl 0x14b00be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x14b00bc00 'struct __NSConstantString_tag'
|   `-Record 0x14a856580 '__NSConstantString_tag'
|-TypedefDecl 0x14b00be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14a855d90 '__SVInt8_t'
|-TypedefDecl 0x14b00bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14a855db0 '__SVInt16_t'
|-TypedefDecl 0x14b00bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14a855dd0 '__SVInt32_t'
|-TypedefDecl 0x14b00bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14a855df0 '__SVInt64_t'
|-TypedefDecl 0x14b00c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14a855e10 '__SVUint8_t'
|-TypedefDecl 0x14b00c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14a855e30 '__SVUint16_t'
|-TypedefDecl 0x14b00c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14a855e50 '__SVUint32_t'
|-TypedefDecl 0x14b00c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14a855e70 '__SVUint64_t'
|-TypedefDecl 0x14b00c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14a855e90 '__SVFloat16_t'
|-TypedefDecl 0x14b00c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14a855eb0 '__SVFloat32_t'
|-TypedefDecl 0x14b00c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14a855ed0 '__SVFloat64_t'
|-TypedefDecl 0x14b00c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x14a855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x14b00c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14a855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x14b00c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14a855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x14b00c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14a855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x14b00c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14a855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x14b00c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14a855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x14b00c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14a855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14b00c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14a855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x14b00c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14a855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x14b00c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14a856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14b00c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14a856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14b00c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14a856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14b00c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14a856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14b00c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14a856090 '__clang_svint8x3_t'
|-TypedefDecl 0x14b00c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14a8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x14b00c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14a8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x14b00c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14a8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x14b00c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14a856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x14b00ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14a856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x14b00cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14a856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x14b00cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14a856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x14b00cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14a856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14b00d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14a8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14b00d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14a8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14b00d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14a8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14b00d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14a856210 '__clang_svint8x4_t'
|-TypedefDecl 0x14b00d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14a856230 '__clang_svint16x4_t'
|-TypedefDecl 0x14b00d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14a856250 '__clang_svint32x4_t'
|-TypedefDecl 0x14b00d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14a856270 '__clang_svint64x4_t'
|-TypedefDecl 0x14b00d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14a856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x14b00d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14a8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14b00d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14a8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x14b00d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14a8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x14b00d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14a856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14b00d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14a856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14b00d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14a856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14b00d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14a856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14b00da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14a856390 '__SVBool_t'
|-TypedefDecl 0x14b00da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14a8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x14b00dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14a8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x14b00db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14a8563f0 '__SVCount_t'
|-TypedefDecl 0x14b00dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14b00dbb0 'char *'
|   `-BuiltinType 0x14a8556b0 'char'
|-TypedefDecl 0x14b00dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14b00dbb0 'char *'
|   `-BuiltinType 0x14a8556b0 'char'
|-FunctionDecl 0x14b00ddf8 <dataset_diviso_filec/func19797_nonvuln.c:1:1, line:77:1> line:1:27 invalid qemu_spice_create_update 'int *(int *)' static
| |-ParmVarDecl 0x14b00dd28 <col:52, col:72> col:72 referenced invalid ssd 'int *'
| `-CompoundStmt 0x14b02b078 <line:2:1, line:77:1>
|   |-DeclStmt 0x14b00e108 <line:8:5, col:19>
|   | |-VarDecl 0x14b00df80 <col:5, col:9> col:9 used by 'int'
|   | |-VarDecl 0x14b00e000 <col:5, col:13> col:13 used bw 'int'
|   | `-VarDecl 0x14b00e080 <col:5, col:17> col:17 used bh 'int'
|   |-DeclStmt 0x14b0276b8 <line:9:5, col:31>
|   | |-RecordDecl 0x14b00e120 <col:5, col:12> col:12 struct timespec
|   | `-VarDecl 0x14b00e218 <col:5, col:21> col:21 invalid time_space 'struct timespec'
|   |-IfStmt 0x14b027958 <line:11:5, line:13:5>
|   | |-CallExpr 0x14b0278d0 <line:11:9, col:45> '<dependent type>' contains-errors
|   | | |-DeclRefExpr 0x14b027830 <col:9> 'int ()' Function 0x14b027778 'qemu_spice_rect_is_empty' 'int ()'
|   | | `-UnaryOperator 0x14b0278b8 <col:34, col:40> '<dependent type>' contains-errors prefix '&' cannot overflow
|   | |   `-CXXDependentScopeMemberExpr 0x14b027870 <col:35, col:40> '<dependent type>' contains-errors lvalue ->dirty
|   | |     `-RecoveryExpr 0x14b027850 <col:35> '<dependent type>' contains-errors lvalue
|   | `-CompoundStmt 0x14b027940 <col:48, line:13:5>
|   |   `-ReturnStmt 0x14b027930 <line:12:9, col:16>
|   |     `-RecoveryExpr 0x14b027910 <col:16> '<dependent type>' contains-errors lvalue
|   |-NullStmt 0x14b027978 <line:13:6>
|   |-CallExpr 0x14b027e88 <line:15:5, line:17:45> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x14b027a60 <line:15:5> 'int ()' Function 0x14b0279a8 'dprint' 'int ()'
|   | |-IntegerLiteral 0x14b027a80 <col:12> 'int' 2
|   | |-StringLiteral 0x14b027ae0 <col:15> 'char[4]' lvalue "STR"
|   | |-PredefinedExpr 0x14b027bb0 <col:22> 'const char[25]' lvalue __FUNCTION__
|   | | `-StringLiteral 0x14b027b80 <col:22> 'const char[25]' lvalue "qemu_spice_create_update"
|   | |-CXXDependentScopeMemberExpr 0x14b027c30 <line:16:12, col:23> '<dependent type>' contains-errors lvalue .left
|   | | `-CXXDependentScopeMemberExpr 0x14b027be8 <col:12, col:17> '<dependent type>' contains-errors lvalue ->dirty
|   | |   `-RecoveryExpr 0x14b027bc8 <col:12> '<dependent type>' contains-errors lvalue
|   | |-CXXDependentScopeMemberExpr 0x14b027ce0 <col:29, col:40> '<dependent type>' contains-errors lvalue .right
|   | | `-CXXDependentScopeMemberExpr 0x14b027c98 <col:29, col:34> '<dependent type>' contains-errors lvalue ->dirty
|   | |   `-RecoveryExpr 0x14b027c78 <col:29> '<dependent type>' contains-errors lvalue
|   | |-CXXDependentScopeMemberExpr 0x14b027d90 <line:17:12, col:23> '<dependent type>' contains-errors lvalue .top
|   | | `-CXXDependentScopeMemberExpr 0x14b027d48 <col:12, col:17> '<dependent type>' contains-errors lvalue ->dirty
|   | |   `-RecoveryExpr 0x14b027d28 <col:12> '<dependent type>' contains-errors lvalue
|   | `-CXXDependentScopeMemberExpr 0x14b027e40 <col:28, col:39> '<dependent type>' contains-errors lvalue .bottom
|   |   `-CXXDependentScopeMemberExpr 0x14b027df8 <col:28, col:33> '<dependent type>' contains-errors lvalue ->dirty
|   |     `-RecoveryExpr 0x14b027dd8 <col:28> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x14b0281c8 <line:24:5, col:46> 'int' contains-errors '='
|   | |-DeclRefExpr 0x14b028028 <col:5> 'int' lvalue Var 0x14b00e000 'bw' 'int'
|   | `-BinaryOperator 0x14b0281a8 <col:16, col:46> '<dependent type>' contains-errors '-'
|   |   |-CXXDependentScopeMemberExpr 0x14b0280b0 <col:16, col:27> '<dependent type>' contains-errors lvalue .right
|   |   | `-CXXDependentScopeMemberExpr 0x14b028068 <col:16, col:21> '<dependent type>' contains-errors lvalue ->dirty
|   |   |   `-RecoveryExpr 0x14b028048 <col:16> '<dependent type>' contains-errors lvalue
|   |   `-CXXDependentScopeMemberExpr 0x14b028160 <col:35, col:46> '<dependent type>' contains-errors lvalue .left
|   |     `-CXXDependentScopeMemberExpr 0x14b028118 <col:35, col:40> '<dependent type>' contains-errors lvalue ->dirty
|   |       `-RecoveryExpr 0x14b0280f8 <col:35> '<dependent type>' contains-errors lvalue
|   |-BinaryOperator 0x14b028388 <line:25:5, col:47> 'int' contains-errors '='
|   | |-DeclRefExpr 0x14b0281e8 <col:5> 'int' lvalue Var 0x14b00e080 'bh' 'int'
|   | `-BinaryOperator 0x14b028368 <col:16, col:47> '<dependent type>' contains-errors '-'
|   |   |-CXXDependentScopeMemberExpr 0x14b028270 <col:16, col:27> '<dependent type>' contains-errors lvalue .bottom
|   |   | `-CXXDependentScopeMemberExpr 0x14b028228 <col:16, col:21> '<dependent type>' contains-errors lvalue ->dirty
|   |   |   `-RecoveryExpr 0x14b028208 <col:16> '<dependent type>' contains-errors lvalue
|   |   `-CXXDependentScopeMemberExpr 0x14b028320 <col:36, col:47> '<dependent type>' contains-errors lvalue .top
|   |     `-CXXDependentScopeMemberExpr 0x14b0282d8 <col:36, col:41> '<dependent type>' contains-errors lvalue ->dirty
|   |       `-RecoveryExpr 0x14b0282b8 <col:36> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x14b02a1e0 <line:56:5, line:60:5>
|   | |-RecoveryExpr 0x14b029d78 <line:56:9, col:22> '_Bool' contains-errors
|   | `-CompoundStmt 0x14b02a1c8 <col:28, line:60:5>
|   |   `-CallExpr 0x14b02a1a0 <line:59:9, col:25> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x14b02a118 <col:9> 'int ()' Function 0x14b02a060 'assert' 'int ()'
|   |     `-CXXDependentScopeMemberExpr 0x14b02a158 <col:16, col:21> '<dependent type>' contains-errors lvalue ->conv
|   |       `-RecoveryExpr 0x14b02a138 <col:16> '<dependent type>' contains-errors lvalue
|   |-ForStmt 0x14b02ac08 <line:66:5, line:70:5>
|   | |-BinaryOperator 0x14b02a8d8 <line:66:10, col:15> 'int' '='
|   | | |-DeclRefExpr 0x14b02a898 <col:10> 'int' lvalue Var 0x14b00df80 'by' 'int'
|   | | `-IntegerLiteral 0x14b02a8b8 <col:15> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x14b02a968 <col:18, col:23> 'int' '<'
|   | | |-ImplicitCastExpr 0x14b02a938 <col:18> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x14b02a8f8 <col:18> 'int' lvalue Var 0x14b00df80 'by' 'int'
|   | | `-ImplicitCastExpr 0x14b02a950 <col:23> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x14b02a918 <col:23> 'int' lvalue Var 0x14b00e080 'bh' 'int'
|   | |-UnaryOperator 0x14b02a9a8 <col:27, col:29> 'int' postfix '++'
|   | | `-DeclRefExpr 0x14b02a988 <col:27> 'int' lvalue Var 0x14b00df80 'by' 'int'
|   | `-CompoundStmt 0x14b02abf8 <col:33, line:70:5>
|   `-CallExpr 0x14b02b040 <line:75:5, col:46> '<dependent type>' contains-errors
|     |-DeclRefExpr 0x14b02aed8 <col:5> 'void *(void *, int, unsigned long)' Function 0x14b02ac88 'memset' 'void *(void *, int, unsigned long)'
|     |-UnaryOperator 0x14b02af60 <col:12, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow
|     | `-CXXDependentScopeMemberExpr 0x14b02af18 <col:13, col:18> '<dependent type>' contains-errors lvalue ->dirty
|     |   `-RecoveryExpr 0x14b02aef8 <col:13> '<dependent type>' contains-errors lvalue
|     |-IntegerLiteral 0x14b02af78 <col:25> 'int' 0
|     `-UnaryExprOrTypeTraitExpr 0x14b02b020 <col:28, col:45> 'unsigned long' contains-errors sizeof
|       `-ParenExpr 0x14b02b000 <col:34, col:45> '<dependent type>' contains-errors lvalue
|         `-CXXDependentScopeMemberExpr 0x14b02afb8 <col:35, col:40> '<dependent type>' contains-errors lvalue ->dirty
|           `-RecoveryExpr 0x14b02af98 <col:35> '<dependent type>' contains-errors lvalue
`-FunctionDecl 0x14b02ac88 <col:5> col:5 implicit used memset 'void *(void *, int, unsigned long)' extern
  |-ParmVarDecl 0x14b02ad88 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x14b02adf0 <<invalid sloc>> <invalid sloc> 'int'
  |-ParmVarDecl 0x14b02ae58 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x14b02ad30 <<invalid sloc>> Implicit 900
