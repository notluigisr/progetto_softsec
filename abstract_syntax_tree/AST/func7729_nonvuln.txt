TranslationUnitDecl 0x131855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1318564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x131855bd0 '__int128'
|-TypedefDecl 0x131856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x131855bf0 'unsigned __int128'
|-TypedefDecl 0x131926a30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x131926800 'struct __NSConstantString_tag'
|   `-Record 0x131856580 '__NSConstantString_tag'
|-TypedefDecl 0x131926a98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x131855d90 '__SVInt8_t'
|-TypedefDecl 0x131926b00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x131855db0 '__SVInt16_t'
|-TypedefDecl 0x131926b68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x131855dd0 '__SVInt32_t'
|-TypedefDecl 0x131926bd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x131855df0 '__SVInt64_t'
|-TypedefDecl 0x131926c38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x131855e10 '__SVUint8_t'
|-TypedefDecl 0x131926ca0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x131855e30 '__SVUint16_t'
|-TypedefDecl 0x131926d08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x131855e50 '__SVUint32_t'
|-TypedefDecl 0x131926d70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x131855e70 '__SVUint64_t'
|-TypedefDecl 0x131926dd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x131855e90 '__SVFloat16_t'
|-TypedefDecl 0x131926e40 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x131855eb0 '__SVFloat32_t'
|-TypedefDecl 0x131926ea8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x131855ed0 '__SVFloat64_t'
|-TypedefDecl 0x131926f10 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x131855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x131926f78 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x131855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x131926fe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x131855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x131927048 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x131855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1319270b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x131855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x131927118 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x131855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x131927180 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x131855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1319271e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x131855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x131927250 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x131855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x1319272b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x131856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x131927320 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x131856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x131927388 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x131856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1319273f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x131856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x131927458 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x131856090 '__clang_svint8x3_t'
|-TypedefDecl 0x1319274c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1318560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x131927528 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1318560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x131927590 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1318560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x1319275f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x131856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x131927660 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x131856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x1319276c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x131856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x131927730 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x131856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x131927798 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x131856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x131928000 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1318561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x131928068 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1318561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1319280d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1318561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x131928138 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x131856210 '__clang_svint8x4_t'
|-TypedefDecl 0x1319281a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x131856230 '__clang_svint16x4_t'
|-TypedefDecl 0x131928208 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x131856250 '__clang_svint32x4_t'
|-TypedefDecl 0x131928270 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x131856270 '__clang_svint64x4_t'
|-TypedefDecl 0x1319282d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x131856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x131928340 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1318562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1319283a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1318562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x131928410 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1318562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x131928478 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x131856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1319284e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x131856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x131928548 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x131856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1319285b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x131856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x131928618 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x131856390 '__SVBool_t'
|-TypedefDecl 0x131928680 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1318563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x1319286e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1318563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x131928750 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1318563f0 '__SVCount_t'
|-TypedefDecl 0x1319287f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1319287b0 'char *'
|   `-BuiltinType 0x1318556b0 'char'
|-TypedefDecl 0x131928868 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1319287b0 'char *'
|   `-BuiltinType 0x1318556b0 'char'
`-FunctionDecl 0x131928ca8 <dataset_diviso_filec/func7729_nonvuln.c:1:1, line:80:2> line:1:7 SRP_create_verifier 'char *(const char *, const char *, char **, char **, const char *, const char *)'
  |-ParmVarDecl 0x1319288d8 <col:27, col:39> col:39 used user 'const char *'
  |-ParmVarDecl 0x131928958 <col:45, col:57> col:57 used pass 'const char *'
  |-ParmVarDecl 0x131928a08 <col:63, col:70> col:70 used salt 'char **'
  |-ParmVarDecl 0x131928a88 <line:2:9, col:16> col:16 used verifier 'char **'
  |-ParmVarDecl 0x131928b08 <col:26, col:38> col:38 used N 'const char *'
  |-ParmVarDecl 0x131928b88 <col:41, col:53> col:53 used g 'const char *'
  `-CompoundStmt 0x131944098 <line:3:2, line:80:2>
    |-DeclStmt 0x131928e48 <line:4:2, col:9>
    | `-VarDecl 0x131928de0 <col:2, col:6> col:6 used len 'int'
    |-DeclStmt 0x131928f30 <line:5:2, col:20>
    | `-VarDecl 0x131928e78 <col:2, col:16> col:9 used result 'char *' cinit
    |   `-RecoveryExpr 0x131928f10 <col:16> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x131928fc8 <line:6:2, col:10>
    | `-VarDecl 0x131928f60 <col:2, col:8> col:8 used vf 'char *'
    |-DeclStmt 0x131942230 <line:8:2, col:28>
    | `-VarDecl 0x1319421c8 <col:2, col:16> col:16 invalid tmp 'unsigned char'
    |-DeclStmt 0x1319422e0 <line:9:2, col:29>
    | `-VarDecl 0x131942278 <col:2, col:16> col:16 invalid tmp2 'unsigned char'
    |-DeclStmt 0x1319423b0 <line:10:2, col:23>
    | `-VarDecl 0x131942310 <col:2, col:19> col:9 used defgNid 'char *' cinit
    |   `-RecoveryExpr 0x131942390 <col:19> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x1319425b0 <line:12:2, line:16:8>
    | |-RecoveryExpr 0x131942528 <line:12:6, line:15:20> '_Bool' contains-errors
    | `-GotoStmt 0x131942598 <line:16:3, col:8> 'err' 0x131942548
    |-IfStmt 0x131942dd0 <line:18:2, line:34:3> has_else
    | |-ImplicitCastExpr 0x1319425f0 <line:18:6> 'const char *' <LValueToRValue>
    | | `-DeclRefExpr 0x1319425d0 <col:6> 'const char *' lvalue ParmVar 0x131928b08 'N' 'const char *'
    | |-CompoundStmt 0x131942bf8 <line:19:3, line:25:3>
    | | |-IfStmt 0x131942840 <line:20:3, col:40>
    | | | |-UnaryOperator 0x131942810 <col:7, col:32> 'int' contains-errors prefix '!' cannot overflow
    | | | | `-ParenExpr 0x1319427f0 <col:8, col:32> 'int' contains-errors
    | | | |   `-BinaryOperator 0x1319427d0 <col:9, col:31> 'int' contains-errors '='
    | | | |     |-DeclRefExpr 0x131942608 <col:9> 'int' lvalue Var 0x131928de0 'len' 'int'
    | | | |     `-CallExpr 0x1319427a0 <col:15, col:31> '<dependent type>' contains-errors
    | | | |       |-DeclRefExpr 0x131942740 <col:15> 'int ()' Function 0x131942688 't_fromb64' 'int ()'
    | | | |       |-RecoveryExpr 0x131942760 <col:25> '<dependent type>' contains-errors lvalue
    | | | |       `-DeclRefExpr 0x131942780 <col:30> 'const char *' lvalue ParmVar 0x131928b08 'N' 'const char *'
    | | | `-GotoStmt 0x131942828 <col:35, col:40> 'err' 0x131942548
    | | |-IfStmt 0x131942ac0 <line:22:3, col:40>
    | | | |-UnaryOperator 0x131942a90 <col:7, col:32> 'int' contains-errors prefix '!' cannot overflow
    | | | | `-ParenExpr 0x131942a70 <col:8, col:32> 'int' contains-errors
    | | | |   `-BinaryOperator 0x131942a50 <col:9, col:31> 'int' contains-errors '='
    | | | |     |-DeclRefExpr 0x1319429a0 <col:9> 'int' lvalue Var 0x131928de0 'len' 'int'
    | | | |     `-CallExpr 0x131942a20 <col:15, col:31> '<dependent type>' contains-errors
    | | | |       |-DeclRefExpr 0x1319429c0 <col:15> 'int ()' Function 0x131942688 't_fromb64' 'int ()'
    | | | |       |-RecoveryExpr 0x1319429e0 <col:25> '<dependent type>' contains-errors lvalue
    | | | |       `-DeclRefExpr 0x131942a00 <col:30> 'const char *' lvalue ParmVar 0x131928b88 'g' 'const char *'
    | | | `-GotoStmt 0x131942aa8 <col:35, col:40> 'err' 0x131942548
    | | `-BinaryOperator 0x131942bd8 <line:24:3, col:13> 'char *' contains-errors '='
    | |   |-DeclRefExpr 0x131942b40 <col:3> 'char *' contains-errors lvalue Var 0x131942310 'defgNid' 'char *'
    | |   `-ImplicitCastExpr 0x131942bc0 <col:13> 'char *' <ArrayToPointerDecay>
    | |     `-StringLiteral 0x131942ba0 <col:13> 'char[4]' lvalue "STR"
    | `-CompoundStmt 0x131942db8 <line:27:3, line:34:3>
    |   `-IfStmt 0x131942d78 <line:29:3, line:30:9>
    |     |-RecoveryExpr 0x131942d40 <line:29:7, col:13> '_Bool' contains-errors
    |     `-GotoStmt 0x131942d60 <line:30:4, col:9> 'err' 0x131942548
    |-IfStmt 0x1319431c8 <line:36:2, line:47:3> has_else
    | |-RecoveryExpr 0x131942e50 <line:36:6, col:15> '_Bool' contains-errors
    | |-CompoundStmt 0x131942fd0 <line:37:3, line:41:3>
    | `-CompoundStmt 0x1319431b0 <line:43:3, line:47:3>
    |   `-IfStmt 0x131943130 <line:44:3, line:45:9>
    |     |-UnaryOperator 0x131943100 <line:44:7, col:37> 'int' contains-errors prefix '!' cannot overflow
    |     | `-ParenExpr 0x1319430e0 <col:8, col:37> 'int' contains-errors
    |     |   `-BinaryOperator 0x1319430c0 <col:9, col:36> 'int' contains-errors '='
    |     |     |-DeclRefExpr 0x131942fe0 <col:9> 'int' lvalue Var 0x131928de0 'len' 'int'
    |     |     `-CallExpr 0x131943090 <col:15, col:36> '<dependent type>' contains-errors
    |     |       |-DeclRefExpr 0x131943000 <col:15> 'int ()' Function 0x131942688 't_fromb64' 'int ()'
    |     |       |-RecoveryExpr 0x131943020 <col:25> '<dependent type>' contains-errors lvalue
    |     |       `-UnaryOperator 0x131943078 <col:31, col:32> 'char *' lvalue prefix '*' cannot overflow
    |     |         `-ImplicitCastExpr 0x131943060 <col:32> 'char **' <LValueToRValue>
    |     |           `-DeclRefExpr 0x131943040 <col:32> 'char **' lvalue ParmVar 0x131928a08 'salt' 'char **'
    |     `-GotoStmt 0x131943118 <line:45:4, col:9> 'err' 0x131942548
    |-IfStmt 0x131943370 <line:50:2, col:67>
    | |-RecoveryExpr 0x131943338 <col:5, col:59> '_Bool' contains-errors
    | `-GotoStmt 0x131943358 <col:62, col:67> 'err' 0x131942548
    |-IfStmt 0x131943728 <line:53:2, line:54:8>
    | |-RecoveryExpr 0x1319436f0 <line:53:6, col:55> '_Bool' contains-errors
    | `-GotoStmt 0x131943710 <line:54:3, col:8> 'err' 0x131942548
    |-BinaryOperator 0x131943930 <line:57:2, col:14> 'char *' '='
    | |-UnaryOperator 0x1319438e0 <col:2, col:3> 'char *' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x1319438c8 <col:3> 'char **' <LValueToRValue>
    | |   `-DeclRefExpr 0x1319438a8 <col:3> 'char **' lvalue ParmVar 0x131928a88 'verifier' 'char **'
    | `-ImplicitCastExpr 0x131943918 <col:14> 'char *' <LValueToRValue>
    |   `-DeclRefExpr 0x1319438f8 <col:14> 'char *' lvalue Var 0x131928f60 'vf' 'char *'
    |-IfStmt 0x131943e10 <line:58:2, line:69:3>
    | |-RecoveryExpr 0x1319439a0 <line:58:6, col:15> '_Bool' contains-errors
    | `-CompoundStmt 0x131943de8 <line:59:3, line:69:3>
    |   |-DeclStmt 0x131943a40 <line:60:3, col:17>
    |   | `-VarDecl 0x1319439d8 <col:3, col:9> col:9 used tmp_salt 'char *'
    |   |-IfStmt 0x131943cc0 <line:62:3, line:66:4>
    |   | |-RecoveryExpr 0x131943ab8 <line:62:7, col:61> '_Bool' contains-errors
    |   | `-CompoundStmt 0x131943ca0 <line:63:4, line:66:4>
    |   |   |-CallExpr 0x131943c48 <line:64:4, col:19> 'int'
    |   |   | |-ImplicitCastExpr 0x131943c30 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |   |   | | `-DeclRefExpr 0x131943bb8 <col:4> 'int ()' Function 0x131943b00 'OPENSSL_free' 'int ()'
    |   |   | `-ImplicitCastExpr 0x131943c70 <col:17> 'char *' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x131943bd8 <col:17> 'char *' lvalue Var 0x131928f60 'vf' 'char *'
    |   |   `-GotoStmt 0x131943c88 <line:65:4, col:9> 'err' 0x131942548
    |   `-BinaryOperator 0x131943dc8 <line:68:3, col:11> 'char *' '='
    |     |-UnaryOperator 0x131943d78 <col:3, col:4> 'char *' lvalue prefix '*' cannot overflow
    |     | `-ImplicitCastExpr 0x131943d60 <col:4> 'char **' <LValueToRValue>
    |     |   `-DeclRefExpr 0x131943d40 <col:4> 'char **' lvalue ParmVar 0x131928a08 'salt' 'char **'
    |     `-ImplicitCastExpr 0x131943db0 <col:11> 'char *' <LValueToRValue>
    |       `-DeclRefExpr 0x131943d90 <col:11> 'char *' lvalue Var 0x1319439d8 'tmp_salt' 'char *'
    |-BinaryOperator 0x131943e88 <line:71:2, col:9> 'char *' contains-errors '='
    | |-DeclRefExpr 0x131943e30 <col:2> 'char *' contains-errors lvalue Var 0x131928e78 'result' 'char *'
    | `-ImplicitCastExpr 0x131943e70 <col:9> 'char *' contains-errors <LValueToRValue>
    |   `-DeclRefExpr 0x131943e50 <col:9> 'char *' contains-errors lvalue Var 0x131942310 'defgNid' 'char *'
    |-LabelStmt 0x131944030 <line:73:1, line:78:3> 'err'
    | `-IfStmt 0x131944010 <line:74:2, line:78:3>
    |   |-ImplicitCastExpr 0x131943ec8 <line:74:5> 'const char *' <LValueToRValue>
    |   | `-DeclRefExpr 0x131943ea8 <col:5> 'const char *' lvalue ParmVar 0x131928b08 'N' 'const char *'
    |   `-CompoundStmt 0x131944000 <line:75:3, line:78:3>
    `-ReturnStmt 0x131944088 <line:79:2, col:9>
      `-ImplicitCastExpr 0x131944070 <col:9> 'char *' contains-errors <LValueToRValue>
        `-DeclRefExpr 0x131944050 <col:9> 'char *' contains-errors lvalue Var 0x131928e78 'result' 'char *'
