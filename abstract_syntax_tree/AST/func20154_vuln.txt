TranslationUnitDecl 0x13a855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13a8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13a855bd0 '__int128'
|-TypedefDecl 0x13a856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13a855bf0 'unsigned __int128'
|-TypedefDecl 0x13a841c30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13a841a00 'struct __NSConstantString_tag'
|   `-Record 0x13a856580 '__NSConstantString_tag'
|-TypedefDecl 0x13a841c98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x13a855d90 '__SVInt8_t'
|-TypedefDecl 0x13a841d00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x13a855db0 '__SVInt16_t'
|-TypedefDecl 0x13a841d68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x13a855dd0 '__SVInt32_t'
|-TypedefDecl 0x13a841dd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x13a855df0 '__SVInt64_t'
|-TypedefDecl 0x13a841e38 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x13a855e10 '__SVUint8_t'
|-TypedefDecl 0x13a841ea0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x13a855e30 '__SVUint16_t'
|-TypedefDecl 0x13a841f08 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x13a855e50 '__SVUint32_t'
|-TypedefDecl 0x13a841f70 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x13a855e70 '__SVUint64_t'
|-TypedefDecl 0x13a841fd8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x13a855e90 '__SVFloat16_t'
|-TypedefDecl 0x13a842040 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x13a855eb0 '__SVFloat32_t'
|-TypedefDecl 0x13a8420a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x13a855ed0 '__SVFloat64_t'
|-TypedefDecl 0x13a842110 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x13a855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x13a842178 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x13a855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x13a8421e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x13a855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x13a842248 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x13a855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x13a8422b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x13a855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x13a842318 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x13a855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x13a842380 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x13a855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x13a8423e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x13a855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x13a842450 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x13a855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x13a8424b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x13a856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x13a842520 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x13a856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x13a842588 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x13a856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x13a8425f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x13a856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x13a842658 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x13a856090 '__clang_svint8x3_t'
|-TypedefDecl 0x13a8426c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x13a8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x13a842728 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x13a8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x13a842790 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x13a8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x13a8427f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x13a856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x13a842860 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x13a856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x13a8428c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x13a856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x13a842930 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x13a856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x13a842998 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x13a856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x13a8baa00 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x13a8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x13a8baa68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x13a8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x13a8baad0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x13a8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x13a8bab38 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x13a856210 '__clang_svint8x4_t'
|-TypedefDecl 0x13a8baba0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x13a856230 '__clang_svint16x4_t'
|-TypedefDecl 0x13a8bac08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x13a856250 '__clang_svint32x4_t'
|-TypedefDecl 0x13a8bac70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x13a856270 '__clang_svint64x4_t'
|-TypedefDecl 0x13a8bacd8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x13a856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x13a8bad40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x13a8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x13a8bada8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x13a8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x13a8bae10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x13a8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x13a8bae78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x13a856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x13a8baee0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x13a856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x13a8baf48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x13a856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x13a8bafb0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x13a856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x13a8bb018 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x13a856390 '__SVBool_t'
|-TypedefDecl 0x13a8bb080 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x13a8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x13a8bb0e8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x13a8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x13a8bb150 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x13a8563f0 '__SVCount_t'
|-TypedefDecl 0x13a8bb1f8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13a8bb1b0 'char *'
|   `-BuiltinType 0x13a8556b0 'char'
|-TypedefDecl 0x13a8bb268 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13a8bb1b0 'char *'
|   `-BuiltinType 0x13a8556b0 'char'
`-FunctionDecl 0x13a8bb900 <dataset_diviso_filec/func20154_vuln.c:1:1, line:60:1> line:1:6 invalid EvalHybrid 'void (int *, int *, int *, int *, const int *, const int *, const int *, int *, int *, int *)'
  |-ParmVarDecl 0x13a8bb328 <col:17, col:32> col:32 invalid context 'int *'
  |-ParmVarDecl 0x13a8bb3a8 <col:41, col:53> col:53 invalid node 'int *'
  |-ParmVarDecl 0x13a8bb428 <line:2:17, col:35> col:35 invalid params 'int *'
  |-ParmVarDecl 0x13a8bb4a8 <col:43, col:51> col:51 invalid data 'int *'
  |-ParmVarDecl 0x13a8bb528 <line:3:17, col:37> col:37 invalid input 'const int *'
  |-ParmVarDecl 0x13a8bb5a8 <col:44, col:64> col:64 invalid filter 'const int *'
  |-ParmVarDecl 0x13a8bb628 <line:4:17, col:37> col:37 invalid bias 'const int *'
  |-ParmVarDecl 0x13a8bb6a8 <col:43, col:57> col:57 invalid im2col 'int *'
  |-ParmVarDecl 0x13a8bb728 <line:5:17, col:31> col:31 invalid accum_scratch 'int *'
  |-ParmVarDecl 0x13a8bb7a8 <col:46, col:60> col:60 invalid output 'int *'
  `-CompoundStmt 0x13b077b80 <col:68, line:60:1>
    |-DeclStmt 0x13a8d4318 <line:6:3, col:53>
    | |-VarDecl 0x13a8d4218 <col:3, col:9> col:9 used output_activation_min 'float'
    | `-VarDecl 0x13a8d4298 <col:3, col:32> col:32 used output_activation_max 'float'
    |-CallExpr 0x13a8d45c0 <line:7:3, line:8:50> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13a8d4490 <line:7:3> 'int ()' Function 0x13a8d43d8 'CalculateActivationRange' 'int ()'
    | |-CXXDependentScopeMemberExpr 0x13a8d44d0 <col:28, col:36> '<dependent type>' contains-errors lvalue ->activation
    | | `-RecoveryExpr 0x13a8d44b0 <col:28> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x13a8d4570 <col:48, col:49> 'float *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x13a8d4518 <col:49> 'float' lvalue Var 0x13a8d4218 'output_activation_min' 'float'
    | `-UnaryOperator 0x13a8d45a8 <line:8:28, col:29> 'float *' prefix '&' cannot overflow
    |   `-DeclRefExpr 0x13a8d4588 <col:29> 'float' lvalue Var 0x13a8d4298 'output_activation_max' 'float'
    |-DeclStmt 0x13a8d4950 <line:10:3, col:72>
    | `-VarDecl 0x13a8d4610 <col:3, col:71> col:13 used input_size 'const int' cinit
    |   `-BinaryOperator 0x13a8d4930 <col:26, col:71> '<dependent type>' contains-errors '/'
    |     |-CallExpr 0x13a8d4798 <col:26, col:43> '<dependent type>' contains-errors
    |     | |-DeclRefExpr 0x13a8d4758 <col:26> 'int ()' Function 0x13a8d46a0 'NumElements' 'int ()'
    |     | `-RecoveryExpr 0x13a8d4778 <col:38> '<dependent type>' contains-errors lvalue
    |     `-CallExpr 0x13a8d4900 <col:47, col:71> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x13a8d48a0 <col:47> 'int ()' Function 0x13a8d47e8 'SizeOfDimension' 'int ()'
    |       |-RecoveryExpr 0x13a8d48c0 <col:63> '<dependent type>' contains-errors lvalue
    |       `-IntegerLiteral 0x13a8d48e0 <col:70> 'int' 0
    |-DeclStmt 0x13a8d4a78 <line:11:3, col:51>
    | `-VarDecl 0x13a8d4980 <col:3, col:50> col:13 used batch_size 'const int' cinit
    |   `-CallExpr 0x13a8d4a48 <col:26, col:50> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x13a8d49e8 <col:26> 'int ()' Function 0x13a8d47e8 'SizeOfDimension' 'int ()'
    |     |-RecoveryExpr 0x13a8d4a08 <col:42> '<dependent type>' contains-errors lvalue
    |     `-IntegerLiteral 0x13a8d4a28 <col:49> 'int' 0
    |-DeclStmt 0x13a8d4b58 <line:13:3, col:55>
    | `-VarDecl 0x13a8d4ad8 <col:3, col:16> col:16 input_ptr 'const float *'
    |-DeclStmt 0x13a8d4e78 <line:16:3, line:17:64>
    | `-VarDecl 0x13a8d4e10 <line:16:3, col:10> col:10 used scaling_factors_ptr 'float *'
    |-CompoundStmt 0x13b077838 <line:20:3, line:30:3>
    | `-ForStmt 0x13b077800 <line:22:5, line:29:5>
    |   |-DeclStmt 0x13a8d4f30 <line:22:10, col:19>
    |   | `-VarDecl 0x13a8d4ea8 <col:10, col:18> col:14 used b 'int' cinit
    |   |   `-IntegerLiteral 0x13a8d4f10 <col:18> 'int' 0
    |   |-<<<NULL>>>
    |   |-BinaryOperator 0x13a8d4fb8 <col:21, col:25> 'int' contains-errors '<'
    |   | |-ImplicitCastExpr 0x13a8d4f88 <col:21> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x13a8d4f48 <col:21> 'int' lvalue Var 0x13a8d4ea8 'b' 'int'
    |   | `-ImplicitCastExpr 0x13a8d4fa0 <col:25> 'int' contains-errors <LValueToRValue>
    |   |   `-DeclRefExpr 0x13a8d4f68 <col:25> 'const int' contains-errors lvalue Var 0x13a8d4980 'batch_size' 'const int'
    |   |-UnaryOperator 0x13a8d4ff8 <col:37, col:39> 'int' prefix '++'
    |   | `-DeclRefExpr 0x13a8d4fd8 <col:39> 'int' lvalue Var 0x13a8d4ea8 'b' 'int'
    |   `-CompoundStmt 0x13b0777d8 <col:42, line:29:5>
    |     |-DeclStmt 0x13a8d5128 <line:23:7, col:35>
    |     | |-VarDecl 0x13a8d5028 <col:7, col:13> col:13 unused_min 'float'
    |     | `-VarDecl 0x13a8d50a8 <col:7, col:25> col:25 unused_max 'float'
    |     |-DeclStmt 0x13b077650 <line:24:7, col:40>
    |     | `-VarDecl 0x13a8d5158 <col:7, col:30> col:17 offset 'const int' cinit
    |     |   `-BinaryOperator 0x13b077630 <col:26, col:30> 'int' contains-errors '*'
    |     |     |-ImplicitCastExpr 0x13b077600 <col:26> 'int' <LValueToRValue>
    |     |     | `-DeclRefExpr 0x13a8d51c0 <col:26> 'int' lvalue Var 0x13a8d4ea8 'b' 'int'
    |     |     `-ImplicitCastExpr 0x13b077618 <col:30> 'int' contains-errors <LValueToRValue>
    |     |       `-DeclRefExpr 0x13a8d51e0 <col:30> 'const int' contains-errors lvalue Var 0x13a8d4610 'input_size' 'const int'
    |     `-CompoundAssignOperator 0x13b0777a8 <line:28:7, col:48> 'float' contains-errors '*=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |       |-ArraySubscriptExpr 0x13b0776d8 <col:7, col:28> 'float' lvalue
    |       | |-ImplicitCastExpr 0x13b0776a8 <col:7> 'float *' <LValueToRValue>
    |       | | `-DeclRefExpr 0x13b077668 <col:7> 'float *' lvalue Var 0x13a8d4e10 'scaling_factors_ptr' 'float *'
    |       | `-ImplicitCastExpr 0x13b0776c0 <col:27> 'int' <LValueToRValue>
    |       |   `-DeclRefExpr 0x13b077688 <col:27> 'int' lvalue Var 0x13a8d4ea8 'b' 'int'
    |       `-CXXDependentScopeMemberExpr 0x13b077760 <col:33, col:48> '<dependent type>' contains-errors lvalue .scale
    |         `-CXXDependentScopeMemberExpr 0x13b077718 <col:33, col:41> '<dependent type>' contains-errors lvalue ->params
    |           `-RecoveryExpr 0x13b0776f8 <col:33> '<dependent type>' contains-errors lvalue
    `-SwitchStmt 0x13b077870 <line:32:3, line:59:3>
      |-RecoveryExpr 0x13b077850 <line:32:11> 'int' contains-errors
      `-CompoundStmt 0x13b077b68 <col:24, line:59:3>
        `-CompoundStmt 0x13b077b50 <line:36:27, line:58:5>
          `-BreakStmt 0x13b077b48 <line:57:7>
