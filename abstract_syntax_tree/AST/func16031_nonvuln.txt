TranslationUnitDecl 0x12e055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12e0564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12e055bd0 '__int128'
|-TypedefDecl 0x12e056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12e055bf0 'unsigned __int128'
|-TypedefDecl 0x12e80be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12e80bc00 'struct __NSConstantString_tag'
|   `-Record 0x12e056580 '__NSConstantString_tag'
|-TypedefDecl 0x12e80be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x12e055d90 '__SVInt8_t'
|-TypedefDecl 0x12e80bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x12e055db0 '__SVInt16_t'
|-TypedefDecl 0x12e80bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x12e055dd0 '__SVInt32_t'
|-TypedefDecl 0x12e80bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x12e055df0 '__SVInt64_t'
|-TypedefDecl 0x12e80c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x12e055e10 '__SVUint8_t'
|-TypedefDecl 0x12e80c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x12e055e30 '__SVUint16_t'
|-TypedefDecl 0x12e80c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x12e055e50 '__SVUint32_t'
|-TypedefDecl 0x12e80c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x12e055e70 '__SVUint64_t'
|-TypedefDecl 0x12e80c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x12e055e90 '__SVFloat16_t'
|-TypedefDecl 0x12e80c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x12e055eb0 '__SVFloat32_t'
|-TypedefDecl 0x12e80c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x12e055ed0 '__SVFloat64_t'
|-TypedefDecl 0x12e80c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x12e055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x12e80c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x12e055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x12e80c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x12e055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x12e80c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x12e055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x12e80c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x12e055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x12e80c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x12e055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x12e80c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x12e055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x12e80c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x12e055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x12e80c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x12e055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x12e80c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x12e056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x12e80c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x12e056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x12e80c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x12e056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x12e80c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x12e056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x12e80c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x12e056090 '__clang_svint8x3_t'
|-TypedefDecl 0x12e80c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x12e0560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x12e80c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x12e0560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x12e80c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x12e0560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x12e80c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x12e056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x12e80ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x12e056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x12e80cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x12e056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x12e80cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x12e056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x12e80cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x12e056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x12e80d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x12e0561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x12e80d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x12e0561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x12e80d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x12e0561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x12e80d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x12e056210 '__clang_svint8x4_t'
|-TypedefDecl 0x12e80d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x12e056230 '__clang_svint16x4_t'
|-TypedefDecl 0x12e80d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x12e056250 '__clang_svint32x4_t'
|-TypedefDecl 0x12e80d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x12e056270 '__clang_svint64x4_t'
|-TypedefDecl 0x12e80d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x12e056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x12e80d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x12e0562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x12e80d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x12e0562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x12e80d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x12e0562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x12e80d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x12e056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x12e80d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x12e056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x12e80d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x12e056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x12e80d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x12e056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x12e80da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x12e056390 '__SVBool_t'
|-TypedefDecl 0x12e80da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x12e0563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x12e80dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x12e0563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x12e80db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x12e0563f0 '__SVCount_t'
|-TypedefDecl 0x12e80dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12e80dbb0 'char *'
|   `-BuiltinType 0x12e0556b0 'char'
|-TypedefDecl 0x12e80dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12e80dbb0 'char *'
|   `-BuiltinType 0x12e0556b0 'char'
|-FunctionDecl 0x12e80e278 <dataset_diviso_filec/func16031_nonvuln.c:1:1, line:52:1> line:1:1 invalid sldns_parse_rdf_token 'int (int *, char *, int, int *, int *, int *, const char *, int, int *)'
| |-ParmVarDecl 0x12e80dd28 <col:23, col:37> col:37 invalid strbuf 'int *'
| |-ParmVarDecl 0x12e80dda8 <col:45, col:51> col:51 used token 'char *'
| |-ParmVarDecl 0x12e80de28 <col:58, col:65> col:65 invalid token_len 'int'
| |-ParmVarDecl 0x12e80dea8 <line:2:2, col:7> col:7 used quoted 'int *'
| |-ParmVarDecl 0x12e80df28 <col:15, col:20> col:20 used parens 'int *'
| |-ParmVarDecl 0x12e80dfa8 <col:28, col:36> col:36 invalid pre_data_pos 'int *'
| |-ParmVarDecl 0x12e80e028 <line:3:2, col:14> col:14 used delimiters 'const char *'
| |-ParmVarDecl 0x12e80e0a8 <col:26, col:41> col:41 invalid rdftype 'int'
| |-ParmVarDecl 0x12e80e128 <col:50, col:58> col:58 invalid token_strlen 'int *'
| `-CompoundStmt 0x12e128448 <line:4:1, line:52:1>
|   |-UnaryExprOrTypeTraitExpr 0x12e80e3c0 <line:5:2, col:9> 'unsigned long' contains-errors sizeof
|   | `-RecoveryExpr 0x12e80e3a0 <col:9> '<dependent type>' contains-errors lvalue
|   |-WhileStmt 0x12e122c08 <line:8:2, line:11:2>
|   | |-BinaryOperator 0x12e122a60 <line:8:8, line:9:38> 'int' contains-errors '&&'
|   | | |-BinaryOperator 0x12e122888 <line:8:8, col:48> 'int' contains-errors '&&'
|   | | | |-BinaryOperator 0x12e1227e8 <col:8, col:41> 'int' contains-errors '>'
|   | | | | |-CallExpr 0x12e1227a0 <col:8, col:37> '<dependent type>' contains-errors
|   | | | | | |-DeclRefExpr 0x12e122760 <col:8> 'int ()' Function 0x12e1226a8 'sldns_buffer_remaining' 'int ()'
|   | | | | | `-RecoveryExpr 0x12e122780 <col:31> '<dependent type>' contains-errors lvalue
|   | | | | `-IntegerLiteral 0x12e1227c8 <col:41> 'int' 0
|   | | | `-UnaryOperator 0x12e122870 <col:46, col:48> 'int' prefix '!' cannot overflow
|   | | |   `-ImplicitCastExpr 0x12e122858 <col:47, col:48> 'int' <LValueToRValue>
|   | | |     `-UnaryOperator 0x12e122840 <col:47, col:48> 'int' lvalue prefix '*' cannot overflow
|   | | |       `-ImplicitCastExpr 0x12e122828 <col:48> 'int *' <LValueToRValue>
|   | | |         `-DeclRefExpr 0x12e122808 <col:48> 'int *' lvalue ParmVar 0x12e80dea8 'quoted' 'int *'
|   | | `-BinaryOperator 0x12e122a40 <line:9:3, col:38> 'int' contains-errors '=='
|   | |   |-UnaryOperator 0x12e122a10 <col:3, col:33> '<dependent type>' contains-errors prefix '*' cannot overflow
|   | |   | `-ParenExpr 0x12e1229f0 <col:4, col:33> '<dependent type>' contains-errors
|   | |   |   `-CallExpr 0x12e1229c8 <col:5, col:32> '<dependent type>' contains-errors
|   | |   |     |-DeclRefExpr 0x12e122988 <col:5> 'int ()' Function 0x12e1228d0 'sldns_buffer_current' 'int ()'
|   | |   |     `-RecoveryExpr 0x12e1229a8 <col:26> '<dependent type>' contains-errors lvalue
|   | |   `-CharacterLiteral 0x12e122a28 <col:38> 'int' 32
|   | `-CompoundStmt 0x12e122bf0 <col:43, line:11:2>
|   |   `-CallExpr 0x12e122bc0 <line:10:3, col:30> '<dependent type>' contains-errors
|   |     |-DeclRefExpr 0x12e122b60 <col:3> 'int ()' Function 0x12e122aa8 'sldns_buffer_skip' 'int ()'
|   |     |-RecoveryExpr 0x12e122b80 <col:21> '<dependent type>' contains-errors lvalue
|   |     `-IntegerLiteral 0x12e122ba0 <col:29> 'int' 1
|   |-BinaryOperator 0x12e122dc0 <line:13:2, col:46> '<dependent type>' contains-errors '='
|   | |-UnaryOperator 0x12e122c60 <col:2, col:3> '<dependent type>' contains-errors prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x12e122c48 <col:3> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x12e122c28 <col:3> '<dependent type>' contains-errors lvalue
|   | `-CallExpr 0x12e122d98 <col:18, col:46> '<dependent type>' contains-errors
|   |   |-DeclRefExpr 0x12e122d58 <col:18> 'int ()' Function 0x12e122ca0 'sldns_buffer_position' 'int ()'
|   |   `-RecoveryExpr 0x12e122d78 <col:40> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x12e124ab8 <line:14:2, line:17:2>
|   | |-BinaryOperator 0x12e124a50 <line:14:5, line:15:48> 'int' contains-errors '=='
|   | | |-CallExpr 0x12e124a00 <line:14:5, line:15:42> '<dependent type>' contains-errors
|   | | | |-DeclRefExpr 0x12e122ec0 <line:14:5> 'int ()' Function 0x12e122e08 'sldns_bget_token_par' 'int ()'
|   | | | |-RecoveryExpr 0x12e122ee0 <col:26> '<dependent type>' contains-errors lvalue
|   | | | |-DeclRefExpr 0x12e122f00 <col:34> 'char *' lvalue ParmVar 0x12e80dda8 'token' 'char *'
|   | | | |-ConditionalOperator 0x12e123518 <col:41, col:57> 'const char *'
|   | | | | |-ImplicitCastExpr 0x12e1234b8 <col:41, col:49> 'int' <LValueToRValue>
|   | | | | | `-ParenExpr 0x12e123498 <col:41, col:49> 'int' lvalue
|   | | | | |   `-UnaryOperator 0x12e123480 <col:42, col:43> 'int' lvalue prefix '*' cannot overflow
|   | | | | |     `-ImplicitCastExpr 0x12e123468 <col:43> 'int *' <LValueToRValue>
|   | | | | |       `-DeclRefExpr 0x12e122f20 <col:43> 'int *' lvalue ParmVar 0x12e80dea8 'quoted' 'int *'
|   | | | | |-ImplicitCastExpr 0x12e123500 <col:51> 'const char *' <BitCast>
|   | | | | | `-ImplicitCastExpr 0x12e1234d0 <col:51> 'char *' <ArrayToPointerDecay>
|   | | | | |   `-StringLiteral 0x12e122fd0 <col:51> 'char[4]' lvalue "STR"
|   | | | | `-ImplicitCastExpr 0x12e1234e8 <col:57> 'const char *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x12e122ff0 <col:57> 'const char *' lvalue ParmVar 0x12e80e028 'delimiters' 'const char *'
|   | | | |-RecoveryExpr 0x12e123178 <line:15:3> '<dependent type>' contains-errors lvalue
|   | | | |-DeclRefExpr 0x12e123198 <col:14> 'int *' lvalue ParmVar 0x12e80df28 'parens' 'int *'
|   | | | `-ConditionalOperator 0x12e1235b8 <col:22, col:37> '<dependent type>' contains-errors
|   | | |   |-ParenExpr 0x12e123578 <col:22, col:30> 'int' lvalue
|   | | |   | `-UnaryOperator 0x12e123560 <col:23, col:24> 'int' lvalue prefix '*' cannot overflow
|   | | |   |   `-ImplicitCastExpr 0x12e123548 <col:24> 'int *' <LValueToRValue>
|   | | |   |     `-DeclRefExpr 0x12e1231b8 <col:24> 'int *' lvalue ParmVar 0x12e80dea8 'quoted' 'int *'
|   | | |   |-RecoveryExpr 0x12e123598 <col:32> '<dependent type>' contains-errors lvalue
|   | | |   `-StringLiteral 0x12e123240 <col:37> 'char[4]' lvalue "STR"
|   | | `-UnaryOperator 0x12e123300 <col:47, col:48> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x12e1232e0 <col:48> 'int' 1
|   | `-CompoundStmt 0x12e124aa0 <col:51, line:17:2>
|   |   `-ReturnStmt 0x12e124a90 <line:16:3, col:10>
|   |     `-IntegerLiteral 0x12e124a70 <col:10> 'int' 0
|   |-IfStmt 0x12e128398 <line:20:2, line:49:2> has_else
|   | |-RecoveryExpr 0x12e125700 <line:20:5, line:23:49> '_Bool' contains-errors
|   | |-CompoundStmt 0x12e1277e8 <col:52, line:29:2>
|   | | `-BinaryOperator 0x12e1277c8 <line:28:3, col:13> 'int' '='
|   | |   |-UnaryOperator 0x12e127790 <col:3, col:4> 'int' lvalue prefix '*' cannot overflow
|   | |   | `-ImplicitCastExpr 0x12e127778 <col:4> 'int *' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x12e127758 <col:4> 'int *' lvalue ParmVar 0x12e80dea8 'quoted' 'int *'
|   | |   `-IntegerLiteral 0x12e1277a8 <col:13> 'int' 1
|   | `-IfStmt 0x12e128378 <line:29:9, line:49:2>
|   |   |-RecoveryExpr 0x12e127b28 <line:29:12, line:31:39> '_Bool' contains-errors
|   |   `-CompoundStmt 0x12e128350 <col:42, line:49:2>
|   |     |-BinaryOperator 0x12e127d10 <line:36:3, col:13> 'int' '='
|   |     | |-UnaryOperator 0x12e127cd8 <col:3, col:4> 'int' lvalue prefix '*' cannot overflow
|   |     | | `-ImplicitCastExpr 0x12e127cc0 <col:4> 'int *' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x12e127ca0 <col:4> 'int *' lvalue ParmVar 0x12e80dea8 'quoted' 'int *'
|   |     | `-IntegerLiteral 0x12e127cf0 <col:13> 'int' 1
|   |     |-WhileStmt 0x12e1280e8 <line:38:3, line:42:3>
|   |     | |-BinaryOperator 0x12e128008 <line:38:9, line:40:44> 'int' contains-errors '&&'
|   |     | | |-BinaryOperator 0x12e127db8 <line:38:9, col:41> 'int' contains-errors '>'
|   |     | | | |-CallExpr 0x12e127d70 <col:9, col:37> '<dependent type>' contains-errors
|   |     | | | | |-DeclRefExpr 0x12e127d30 <col:9> 'int ()' Function 0x12e122ca0 'sldns_buffer_position' 'int ()'
|   |     | | | | `-RecoveryExpr 0x12e127d50 <col:31> '<dependent type>' contains-errors lvalue
|   |     | | | `-IntegerLiteral 0x12e127d98 <col:41> 'int' 0
|   |     | | `-ParenExpr 0x12e127fe8 <line:39:4, line:40:44> 'int' contains-errors
|   |     | |   `-BinaryOperator 0x12e127fc8 <line:39:5, line:40:40> 'int' contains-errors '||'
|   |     | |     |-BinaryOperator 0x12e127eb0 <line:39:5, col:41> 'int' contains-errors '=='
|   |     | |     | |-ArraySubscriptExpr 0x12e127e78 <col:5, col:36> '<dependent type>' contains-errors lvalue
|   |     | |     | | |-CallExpr 0x12e127e18 <col:5, col:32> '<dependent type>' contains-errors
|   |     | |     | | | |-DeclRefExpr 0x12e127dd8 <col:5> 'int ()' Function 0x12e1228d0 'sldns_buffer_current' 'int ()'
|   |     | |     | | | `-RecoveryExpr 0x12e127df8 <col:26> '<dependent type>' contains-errors lvalue
|   |     | |     | | `-UnaryOperator 0x12e127e60 <col:34, col:35> 'int' prefix '-'
|   |     | |     | |   `-IntegerLiteral 0x12e127e40 <col:35> 'int' 1
|   |     | |     | `-CharacterLiteral 0x12e127e98 <col:41> 'int' 32
|   |     | |     `-BinaryOperator 0x12e127fa8 <line:40:4, col:40> 'int' contains-errors '=='
|   |     | |       |-ArraySubscriptExpr 0x12e127f70 <col:4, col:35> '<dependent type>' contains-errors lvalue
|   |     | |       | |-CallExpr 0x12e127f10 <col:4, col:31> '<dependent type>' contains-errors
|   |     | |       | | |-DeclRefExpr 0x12e127ed0 <col:4> 'int ()' Function 0x12e1228d0 'sldns_buffer_current' 'int ()'
|   |     | |       | | `-RecoveryExpr 0x12e127ef0 <col:25> '<dependent type>' contains-errors lvalue
|   |     | |       | `-UnaryOperator 0x12e127f58 <col:33, col:34> 'int' prefix '-'
|   |     | |       |   `-IntegerLiteral 0x12e127f38 <col:34> 'int' 1
|   |     | |       `-CharacterLiteral 0x12e127f90 <col:40> 'int' 9
|   |     | `-CompoundStmt 0x12e1280d0 <col:47, line:42:3>
|   |     |   `-CallExpr 0x12e1280a0 <line:41:4, col:32> '<dependent type>' contains-errors
|   |     |     |-DeclRefExpr 0x12e128028 <col:4> 'int ()' Function 0x12e122aa8 'sldns_buffer_skip' 'int ()'
|   |     |     |-RecoveryExpr 0x12e128048 <col:22> '<dependent type>' contains-errors lvalue
|   |     |     `-UnaryOperator 0x12e128088 <col:30, col:31> 'int' prefix '-'
|   |     |       `-IntegerLiteral 0x12e128068 <col:31> 'int' 1
|   |     `-IfStmt 0x12e128268 <line:43:3, line:47:3>
|   |       |-RecoveryExpr 0x12e128200 <line:43:6, line:45:22> '_Bool' contains-errors
|   |       `-CompoundStmt 0x12e128250 <col:25, line:47:3>
|   |         `-ReturnStmt 0x12e128240 <line:46:4, col:11>
|   |           `-IntegerLiteral 0x12e128220 <col:11> 'int' 0
|   `-ReturnStmt 0x12e128438 <line:51:2, col:9>
|     `-IntegerLiteral 0x12e128418 <col:9> 'int' 1
|-FunctionDecl 0x12e124e70 <line:18:9> col:9 implicit used strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x12e124f70 <<invalid sloc>> <invalid sloc> 'const char *'
| `-BuiltinAttr 0x12e124f18 <<invalid sloc>> Implicit 902
`-FunctionDecl 0x12e125798 <line:25:3> col:3 implicit used memmove 'void *(void *, const void *, unsigned long)' extern
  |-ParmVarDecl 0x12e125898 <<invalid sloc>> <invalid sloc> 'void *'
  |-ParmVarDecl 0x12e125900 <<invalid sloc>> <invalid sloc> 'const void *'
  |-ParmVarDecl 0x12e125968 <<invalid sloc>> <invalid sloc> 'unsigned long'
  `-BuiltinAttr 0x12e125840 <<invalid sloc>> Implicit 884
