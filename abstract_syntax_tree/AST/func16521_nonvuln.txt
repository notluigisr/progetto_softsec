TranslationUnitDecl 0x15a855608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x15a8564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x15a855bd0 '__int128'
|-TypedefDecl 0x15a856528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x15a855bf0 'unsigned __int128'
|-TypedefDecl 0x15a926230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15a926000 'struct __NSConstantString_tag'
|   `-Record 0x15a856580 '__NSConstantString_tag'
|-TypedefDecl 0x15a926298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x15a855d90 '__SVInt8_t'
|-TypedefDecl 0x15a926300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x15a855db0 '__SVInt16_t'
|-TypedefDecl 0x15a926368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x15a855dd0 '__SVInt32_t'
|-TypedefDecl 0x15a9263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x15a855df0 '__SVInt64_t'
|-TypedefDecl 0x15a926438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x15a855e10 '__SVUint8_t'
|-TypedefDecl 0x15a9264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x15a855e30 '__SVUint16_t'
|-TypedefDecl 0x15a926508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x15a855e50 '__SVUint32_t'
|-TypedefDecl 0x15a926570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x15a855e70 '__SVUint64_t'
|-TypedefDecl 0x15a9265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x15a855e90 '__SVFloat16_t'
|-TypedefDecl 0x15a926640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x15a855eb0 '__SVFloat32_t'
|-TypedefDecl 0x15a9266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x15a855ed0 '__SVFloat64_t'
|-TypedefDecl 0x15a926710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x15a855ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15a926778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x15a855f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15a9267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x15a855f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15a926848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x15a855f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15a9268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x15a855f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15a926918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x15a855f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15a926980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x15a855fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15a9269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x15a855fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15a926a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x15a855ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15a926ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x15a856010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15a926b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x15a856030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15a926b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x15a856050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15a926bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x15a856070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15a926c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x15a856090 '__clang_svint8x3_t'
|-TypedefDecl 0x15a926cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x15a8560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15a926d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x15a8560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15a926d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x15a8560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15a926df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x15a856110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15a926e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x15a856130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15a926ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x15a856150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15a926f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x15a856170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15a926f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x15a856190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15a927800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x15a8561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15a927868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x15a8561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15a9278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x15a8561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15a927938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x15a856210 '__clang_svint8x4_t'
|-TypedefDecl 0x15a9279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x15a856230 '__clang_svint16x4_t'
|-TypedefDecl 0x15a927a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x15a856250 '__clang_svint32x4_t'
|-TypedefDecl 0x15a927a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x15a856270 '__clang_svint64x4_t'
|-TypedefDecl 0x15a927ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x15a856290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15a927b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x15a8562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15a927ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x15a8562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15a927c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x15a8562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15a927c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x15a856310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15a927ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x15a856330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15a927d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x15a856350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15a927db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x15a856370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15a927e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x15a856390 '__SVBool_t'
|-TypedefDecl 0x15a927e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x15a8563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15a927ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x15a8563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15a927f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x15a8563f0 '__SVCount_t'
|-TypedefDecl 0x15a927ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15a927fb0 'char *'
|   `-BuiltinType 0x15a8556b0 'char'
|-TypedefDecl 0x15a928068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15a927fb0 'char *'
|   `-BuiltinType 0x15a8556b0 'char'
`-FunctionDecl 0x15a940a00 <dataset_diviso_filec/func16521_nonvuln.c:1:1, line:60:1> line:1:12 ext4_feature_set_ok 'int (struct super_block *, int)' static
  |-ParmVarDecl 0x15a928648 <col:32, col:52> col:52 used sb 'struct super_block *'
  |-ParmVarDecl 0x15a9286c8 <col:56, col:60> col:60 used readonly 'int'
  `-CompoundStmt 0x15b009688 <line:2:1, line:60:1>
    |-IfStmt 0x15a9412b0 <line:3:2, line:10:2>
    | |-CallExpr 0x15a940cb8 <line:3:6, col:48> 'int'
    | | |-ImplicitCastExpr 0x15a940ca0 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x15a940c30 <col:6> 'int ()' Function 0x15a940b78 'ext4_has_unknown_ext4_incompat_features' 'int ()'
    | | `-ImplicitCastExpr 0x15a940ce0 <col:46> 'struct super_block *' <LValueToRValue>
    | |   `-DeclRefExpr 0x15a940c50 <col:46> 'struct super_block *' lvalue ParmVar 0x15a928648 'sb' 'struct super_block *'
    | `-CompoundStmt 0x15a941298 <col:51, line:10:2>
    |   `-ReturnStmt 0x15a941288 <line:9:3, col:10>
    |     `-IntegerLiteral 0x15a941268 <col:10> 'int' 0
    |-IfStmt 0x15a941338 <line:12:2, line:13:10>
    | |-ImplicitCastExpr 0x15a9412f0 <line:12:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x15a9412d0 <col:6> 'int' lvalue ParmVar 0x15a9286c8 'readonly' 'int'
    | `-ReturnStmt 0x15a941328 <line:13:3, col:10>
    |   `-IntegerLiteral 0x15a941308 <col:10> 'int' 1
    |-IfStmt 0x15a941770 <line:15:2, line:19:2>
    | |-CallExpr 0x15a941490 <line:15:6, col:34> 'int'
    | | |-ImplicitCastExpr 0x15a941478 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x15a941438 <col:6> 'int ()' Function 0x15a941380 'ext4_has_feature_readonly' 'int ()'
    | | `-ImplicitCastExpr 0x15a9414b8 <col:32> 'struct super_block *' <LValueToRValue>
    | |   `-DeclRefExpr 0x15a941458 <col:32> 'struct super_block *' lvalue ParmVar 0x15a928648 'sb' 'struct super_block *'
    | `-CompoundStmt 0x15a941748 <col:37, line:19:2>
    |   |-CallExpr 0x15a9415e8 <line:16:3, col:32> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x15a9414d0 <col:3> 'int ()' Function 0x15a940d20 'ext4_msg' 'int ()'
    |   | |-DeclRefExpr 0x15a9414f0 <col:12> 'struct super_block *' lvalue ParmVar 0x15a928648 'sb' 'struct super_block *'
    |   | |-RecoveryExpr 0x15a9415c8 <col:16> '<dependent type>' contains-errors lvalue
    |   | `-StringLiteral 0x15a941570 <col:27> 'char[4]' lvalue "STR"
    |   |-CompoundAssignOperator 0x15a9416e8 <line:17:3, col:18> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   | |-RecoveryExpr 0x15a941658 <col:3, col:7> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x15a941620 <col:3> 'struct super_block *' lvalue ParmVar 0x15a928648 'sb' 'struct super_block *'
    |   | `-RecoveryExpr 0x15a9416c8 <col:18> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x15a941738 <line:18:3, col:10>
    |     `-IntegerLiteral 0x15a941718 <col:10> 'int' 1
    |-IfStmt 0x15b0089e0 <line:22:2, line:28:2>
    | |-CallExpr 0x15a9418c8 <line:22:6, col:49> 'int'
    | | |-ImplicitCastExpr 0x15a9418b0 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x15a941870 <col:6> 'int ()' Function 0x15a9417b8 'ext4_has_unknown_ext4_ro_compat_features' 'int ()'
    | | `-ImplicitCastExpr 0x15a9418f0 <col:47> 'struct super_block *' <LValueToRValue>
    | |   `-DeclRefExpr 0x15a941890 <col:47> 'struct super_block *' lvalue ParmVar 0x15a928648 'sb' 'struct super_block *'
    | `-CompoundStmt 0x15b0089c8 <col:52, line:28:2>
    |   `-ReturnStmt 0x15b0089b8 <line:27:3, col:10>
    |     `-IntegerLiteral 0x15b008998 <col:10> 'int' 0
    |-IfStmt 0x15b008cd0 <line:30:2, line:37:2>
    | |-CallExpr 0x15b008b38 <line:30:6, col:35> 'int'
    | | |-ImplicitCastExpr 0x15b008b20 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x15b008ae0 <col:6> 'int ()' Function 0x15b008a28 'ext4_has_feature_huge_file' 'int ()'
    | | `-ImplicitCastExpr 0x15b008b60 <col:33> 'struct super_block *' <LValueToRValue>
    | |   `-DeclRefExpr 0x15b008b00 <col:33> 'struct super_block *' lvalue ParmVar 0x15a928648 'sb' 'struct super_block *'
    | `-CompoundStmt 0x15b008cb8 <col:38, line:37:2>
    |   `-IfStmt 0x15b008c98 <line:31:3, line:36:3>
    |     |-RecoveryExpr 0x15b008b78 <line:31:7, col:36> '_Bool' contains-errors
    |     `-CompoundStmt 0x15b008c80 <col:39, line:36:3>
    |       `-ReturnStmt 0x15b008c70 <line:35:4, col:11>
    |         `-IntegerLiteral 0x15b008c50 <col:11> 'int' 0
    |-IfStmt 0x15b0090c8 <line:38:2, line:43:2>
    | |-BinaryOperator 0x15b008ff8 <line:38:6, col:67> 'int' '&&'
    | | |-CallExpr 0x15b008e28 <col:6, col:34> 'int'
    | | | |-ImplicitCastExpr 0x15b008e10 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | | `-DeclRefExpr 0x15b008dd0 <col:6> 'int ()' Function 0x15b008d18 'ext4_has_feature_bigalloc' 'int ()'
    | | | `-ImplicitCastExpr 0x15b008e50 <col:32> 'struct super_block *' <LValueToRValue>
    | | |   `-DeclRefExpr 0x15b008df0 <col:32> 'struct super_block *' lvalue ParmVar 0x15a928648 'sb' 'struct super_block *'
    | | `-UnaryOperator 0x15b008fe0 <col:39, col:67> 'int' prefix '!' cannot overflow
    | |   `-CallExpr 0x15b008fa0 <col:40, col:67> 'int'
    | |     |-ImplicitCastExpr 0x15b008f88 <col:40> 'int (*)()' <FunctionToPointerDecay>
    | |     | `-DeclRefExpr 0x15b008f48 <col:40> 'int ()' Function 0x15b008e90 'ext4_has_feature_extents' 'int ()'
    | |     `-ImplicitCastExpr 0x15b008fc8 <col:65> 'struct super_block *' <LValueToRValue>
    | |       `-DeclRefExpr 0x15b008f68 <col:65> 'struct super_block *' lvalue ParmVar 0x15a928648 'sb' 'struct super_block *'
    | `-CompoundStmt 0x15b0090b0 <col:70, line:43:2>
    |   `-ReturnStmt 0x15b0090a0 <line:42:3, col:10>
    |     `-IntegerLiteral 0x15b009080 <col:10> 'int' 0
    |-IfStmt 0x15b009380 <line:46:2, line:51:2>
    | |-BinaryOperator 0x15b0092b0 <line:46:6, col:37> 'int' '&&'
    | | |-CallExpr 0x15b009220 <col:6, col:31> 'int'
    | | | |-ImplicitCastExpr 0x15b009208 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | | `-DeclRefExpr 0x15b0091c8 <col:6> 'int ()' Function 0x15b009110 'ext4_has_feature_quota' 'int ()'
    | | | `-ImplicitCastExpr 0x15b009248 <col:29> 'struct super_block *' <LValueToRValue>
    | | |   `-DeclRefExpr 0x15b0091e8 <col:29> 'struct super_block *' lvalue ParmVar 0x15a928648 'sb' 'struct super_block *'
    | | `-UnaryOperator 0x15b009298 <col:36, col:37> 'int' prefix '!' cannot overflow
    | |   `-ImplicitCastExpr 0x15b009280 <col:37> 'int' <LValueToRValue>
    | |     `-DeclRefExpr 0x15b009260 <col:37> 'int' lvalue ParmVar 0x15a9286c8 'readonly' 'int'
    | `-CompoundStmt 0x15b009368 <col:47, line:51:2>
    |   `-ReturnStmt 0x15b009358 <line:50:3, col:10>
    |     `-IntegerLiteral 0x15b009338 <col:10> 'int' 0
    |-IfStmt 0x15b009638 <line:52:2, line:57:2>
    | |-BinaryOperator 0x15b009568 <line:52:6, col:39> 'int' '&&'
    | | |-CallExpr 0x15b0094d8 <col:6, col:33> 'int'
    | | | |-ImplicitCastExpr 0x15b0094c0 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | | `-DeclRefExpr 0x15b009480 <col:6> 'int ()' Function 0x15b0093c8 'ext4_has_feature_project' 'int ()'
    | | | `-ImplicitCastExpr 0x15b009500 <col:31> 'struct super_block *' <LValueToRValue>
    | | |   `-DeclRefExpr 0x15b0094a0 <col:31> 'struct super_block *' lvalue ParmVar 0x15a928648 'sb' 'struct super_block *'
    | | `-UnaryOperator 0x15b009550 <col:38, col:39> 'int' prefix '!' cannot overflow
    | |   `-ImplicitCastExpr 0x15b009538 <col:39> 'int' <LValueToRValue>
    | |     `-DeclRefExpr 0x15b009518 <col:39> 'int' lvalue ParmVar 0x15a9286c8 'readonly' 'int'
    | `-CompoundStmt 0x15b009620 <col:49, line:57:2>
    |   `-ReturnStmt 0x15b009610 <line:56:3, col:10>
    |     `-IntegerLiteral 0x15b0095f0 <col:10> 'int' 0
    `-ReturnStmt 0x15b009678 <line:59:2, col:9>
      `-IntegerLiteral 0x15b009658 <col:9> 'int' 1
