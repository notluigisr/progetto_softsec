TranslationUnitDecl 0x152055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1520564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x152055bd0 '__int128'
|-TypedefDecl 0x152056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x152055bf0 'unsigned __int128'
|-TypedefDecl 0x15280be30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15280bc00 'struct __NSConstantString_tag'
|   `-Record 0x152056580 '__NSConstantString_tag'
|-TypedefDecl 0x15280be98 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x152055d90 '__SVInt8_t'
|-TypedefDecl 0x15280bf00 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x152055db0 '__SVInt16_t'
|-TypedefDecl 0x15280bf68 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x152055dd0 '__SVInt32_t'
|-TypedefDecl 0x15280bfd0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x152055df0 '__SVInt64_t'
|-TypedefDecl 0x15280c038 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x152055e10 '__SVUint8_t'
|-TypedefDecl 0x15280c0a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x152055e30 '__SVUint16_t'
|-TypedefDecl 0x15280c108 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x152055e50 '__SVUint32_t'
|-TypedefDecl 0x15280c170 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x152055e70 '__SVUint64_t'
|-TypedefDecl 0x15280c1d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x152055e90 '__SVFloat16_t'
|-TypedefDecl 0x15280c240 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x152055eb0 '__SVFloat32_t'
|-TypedefDecl 0x15280c2a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x152055ed0 '__SVFloat64_t'
|-TypedefDecl 0x15280c310 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x152055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x15280c378 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x152055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x15280c3e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x152055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x15280c448 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x152055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x15280c4b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x152055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x15280c518 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x152055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x15280c580 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x152055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x15280c5e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x152055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x15280c650 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x152055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x15280c6b8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x152056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x15280c720 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x152056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x15280c788 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x152056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x15280c7f0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x152056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x15280c858 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x152056090 '__clang_svint8x3_t'
|-TypedefDecl 0x15280c8c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1520560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x15280c928 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1520560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x15280c990 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1520560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x15280c9f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x152056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x15280ca60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x152056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x15280cac8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x152056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x15280cb30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x152056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x15280cb98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x152056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x15280d400 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1520561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x15280d468 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1520561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x15280d4d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1520561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x15280d538 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x152056210 '__clang_svint8x4_t'
|-TypedefDecl 0x15280d5a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x152056230 '__clang_svint16x4_t'
|-TypedefDecl 0x15280d608 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x152056250 '__clang_svint32x4_t'
|-TypedefDecl 0x15280d670 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x152056270 '__clang_svint64x4_t'
|-TypedefDecl 0x15280d6d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x152056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x15280d740 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1520562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x15280d7a8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1520562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x15280d810 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1520562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x15280d878 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x152056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x15280d8e0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x152056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x15280d948 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x152056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x15280d9b0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x152056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x15280da18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x152056390 '__SVBool_t'
|-TypedefDecl 0x15280da80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1520563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x15280dae8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1520563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x15280db50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1520563f0 '__SVCount_t'
|-TypedefDecl 0x15280dbf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15280dbb0 'char *'
|   `-BuiltinType 0x1520556b0 'char'
|-TypedefDecl 0x15280dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15280dbb0 'char *'
|   `-BuiltinType 0x1520556b0 'char'
|-FunctionDecl 0x153808418 <dataset_diviso_filec/func17763_vuln.c:1:1, line:15:1> line:1:16 invalid allocation_policy_show 'int (struct device *, struct device_attribute *, char *)' static
| |-ParmVarDecl 0x15280e268 <col:39, col:54> col:54 used dev 'struct device *'
| |-ParmVarDecl 0x153808258 <line:2:11, col:36> col:36 attr 'struct device_attribute *'
| |-ParmVarDecl 0x1538082d8 <col:42, col:48> col:48 used buf 'char *'
| `-CompoundStmt 0x15380a688 <line:3:1, line:15:1>
|   |-DeclStmt 0x153808908 <line:4:2, col:52>
|   | |-RecordDecl 0x1538084d8 <col:2, col:9> col:9 struct cacheinfo
|   | `-VarDecl 0x153808648 <col:2, col:51> col:20 used this_leaf 'struct cacheinfo *' cinit
|   |   `-ImplicitCastExpr 0x1538088d8 <col:32, col:51> 'struct cacheinfo *' <IntegralToPointer>
|   |     `-CallExpr 0x153808898 <col:32, col:51> 'int'
|   |       |-ImplicitCastExpr 0x153808880 <col:32> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x153808810 <col:32> 'int ()' Function 0x153808758 'dev_get_drvdata' 'int ()'
|   |       `-ImplicitCastExpr 0x1538088c0 <col:48> 'struct device *' <LValueToRValue>
|   |         `-DeclRefExpr 0x153808830 <col:48> 'struct device *' lvalue ParmVar 0x15280e268 'dev' 'struct device *'
|   |-DeclStmt 0x153808a00 <line:5:2, col:46>
|   | `-VarDecl 0x153808938 <col:2, col:36> col:15 used ci_attr 'unsigned int' cinit
|   |   `-RecoveryExpr 0x1538089d8 <col:25, col:36> '<dependent type>' contains-errors lvalue
|   |     `-DeclRefExpr 0x1538089a0 <col:25> 'struct cacheinfo *' lvalue Var 0x153808648 'this_leaf' 'struct cacheinfo *'
|   |-DeclStmt 0x153808ab8 <line:6:2, col:11>
|   | `-VarDecl 0x153808a30 <col:2, col:10> col:6 used n 'int' cinit
|   |   `-IntegerLiteral 0x153808a98 <col:10> 'int' 0
|   |-IfStmt 0x15380a610 <line:8:2, line:13:25> has_else
|   | |-RecoveryExpr 0x153808b80 <line:8:6, col:72> '_Bool' contains-errors
|   | |-BinaryOperator 0x153808fb0 <line:9:3, col:25> 'int' '='
|   | | |-DeclRefExpr 0x153808ba0 <col:3> 'int' lvalue Var 0x153808a30 'n' 'int'
|   | | `-CallExpr 0x153808f38 <col:7, col:25> 'int'
|   | |   |-ImplicitCastExpr 0x153808f20 <col:7> 'int (*)(char *, const char *, ...)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x153808e20 <col:7> 'int (char *, const char *, ...)' Function 0x153808c08 'sprintf' 'int (char *, const char *, ...)'
|   | |   |-ImplicitCastExpr 0x153808f68 <col:15> 'char *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x153808e40 <col:15> 'char *' lvalue ParmVar 0x1538082d8 'buf' 'char *'
|   | |   `-ImplicitCastExpr 0x153808f98 <col:20> 'const char *' <NoOp>
|   | |     `-ImplicitCastExpr 0x153808f80 <col:20> 'char *' <ArrayToPointerDecay>
|   | |       `-StringLiteral 0x153808ea0 <col:20> 'char[4]' lvalue "STR"
|   | `-IfStmt 0x15380a5e0 <line:10:7, line:13:25> has_else
|   |   |-BinaryOperator 0x153809048 <line:10:11, col:21> '<dependent type>' contains-errors '&'
|   |   | |-DeclRefExpr 0x153808fd0 <col:11> 'unsigned int' contains-errors lvalue Var 0x153808938 'ci_attr' 'unsigned int'
|   |   | `-RecoveryExpr 0x153809028 <col:21> '<dependent type>' contains-errors lvalue
|   |   |-BinaryOperator 0x1538091a8 <line:11:3, col:25> 'int' '='
|   |   | |-DeclRefExpr 0x153809068 <col:3> 'int' lvalue Var 0x153808a30 'n' 'int'
|   |   | `-CallExpr 0x153809130 <col:7, col:25> 'int'
|   |   |   |-ImplicitCastExpr 0x153809118 <col:7> 'int (*)(char *, const char *, ...)' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x153809088 <col:7> 'int (char *, const char *, ...)' Function 0x153808c08 'sprintf' 'int (char *, const char *, ...)'
|   |   |   |-ImplicitCastExpr 0x153809160 <col:15> 'char *' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x1538090a8 <col:15> 'char *' lvalue ParmVar 0x1538082d8 'buf' 'char *'
|   |   |   `-ImplicitCastExpr 0x153809190 <col:20> 'const char *' <NoOp>
|   |   |     `-ImplicitCastExpr 0x153809178 <col:20> 'char *' <ArrayToPointerDecay>
|   |   |       `-StringLiteral 0x1538090c8 <col:20> 'char[4]' lvalue "STR"
|   |   `-IfStmt 0x15380a5c0 <line:12:7, line:13:25>
|   |     |-BinaryOperator 0x15380a440 <line:12:11, col:21> '<dependent type>' contains-errors '&'
|   |     | |-DeclRefExpr 0x1538091c8 <col:11> 'unsigned int' contains-errors lvalue Var 0x153808938 'ci_attr' 'unsigned int'
|   |     | `-RecoveryExpr 0x15380a420 <col:21> '<dependent type>' contains-errors lvalue
|   |     `-BinaryOperator 0x15380a5a0 <line:13:3, col:25> 'int' '='
|   |       |-DeclRefExpr 0x15380a460 <col:3> 'int' lvalue Var 0x153808a30 'n' 'int'
|   |       `-CallExpr 0x15380a528 <col:7, col:25> 'int'
|   |         |-ImplicitCastExpr 0x15380a510 <col:7> 'int (*)(char *, const char *, ...)' <FunctionToPointerDecay>
|   |         | `-DeclRefExpr 0x15380a480 <col:7> 'int (char *, const char *, ...)' Function 0x153808c08 'sprintf' 'int (char *, const char *, ...)'
|   |         |-ImplicitCastExpr 0x15380a558 <col:15> 'char *' <LValueToRValue>
|   |         | `-DeclRefExpr 0x15380a4a0 <col:15> 'char *' lvalue ParmVar 0x1538082d8 'buf' 'char *'
|   |         `-ImplicitCastExpr 0x15380a588 <col:20> 'const char *' <NoOp>
|   |           `-ImplicitCastExpr 0x15380a570 <col:20> 'char *' <ArrayToPointerDecay>
|   |             `-StringLiteral 0x15380a4c0 <col:20> 'char[4]' lvalue "STR"
|   `-ReturnStmt 0x15380a678 <line:14:2, col:9>
|     `-ImplicitCastExpr 0x15380a660 <col:9> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x15380a640 <col:9> 'int' lvalue Var 0x153808a30 'n' 'int'
`-FunctionDecl 0x153808c08 <line:9:7> col:7 implicit used sprintf 'int (char *, const char *, ...)' extern
  |-ParmVarDecl 0x153808d08 <<invalid sloc>> <invalid sloc> 'char *'
  |-ParmVarDecl 0x153808d70 <<invalid sloc>> <invalid sloc> 'const char *'
  |-BuiltinAttr 0x153808cb0 <<invalid sloc>> Implicit 906
  `-FormatAttr 0x153808de8 <col:7> Implicit printf 2 3
