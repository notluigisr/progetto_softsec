TranslationUnitDecl 0x151055608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1510564b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x151055bd0 '__int128'
|-TypedefDecl 0x151056528 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x151055bf0 'unsigned __int128'
|-TypedefDecl 0x151126230 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x151126000 'struct __NSConstantString_tag'
|   `-Record 0x151056580 '__NSConstantString_tag'
|-TypedefDecl 0x151126298 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x151055d90 '__SVInt8_t'
|-TypedefDecl 0x151126300 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x151055db0 '__SVInt16_t'
|-TypedefDecl 0x151126368 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x151055dd0 '__SVInt32_t'
|-TypedefDecl 0x1511263d0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x151055df0 '__SVInt64_t'
|-TypedefDecl 0x151126438 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x151055e10 '__SVUint8_t'
|-TypedefDecl 0x1511264a0 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x151055e30 '__SVUint16_t'
|-TypedefDecl 0x151126508 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x151055e50 '__SVUint32_t'
|-TypedefDecl 0x151126570 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x151055e70 '__SVUint64_t'
|-TypedefDecl 0x1511265d8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x151055e90 '__SVFloat16_t'
|-TypedefDecl 0x151126640 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x151055eb0 '__SVFloat32_t'
|-TypedefDecl 0x1511266a8 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x151055ed0 '__SVFloat64_t'
|-TypedefDecl 0x151126710 <<invalid sloc>> <invalid sloc> implicit __SVBfloat16_t '__SVBfloat16_t'
| `-BuiltinType 0x151055ef0 '__SVBfloat16_t'
|-TypedefDecl 0x151126778 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x151055f10 '__clang_svint8x2_t'
|-TypedefDecl 0x1511267e0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x151055f30 '__clang_svint16x2_t'
|-TypedefDecl 0x151126848 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x151055f50 '__clang_svint32x2_t'
|-TypedefDecl 0x1511268b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x151055f70 '__clang_svint64x2_t'
|-TypedefDecl 0x151126918 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x151055f90 '__clang_svuint8x2_t'
|-TypedefDecl 0x151126980 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x151055fb0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1511269e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x151055fd0 '__clang_svuint32x2_t'
|-TypedefDecl 0x151126a50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x151055ff0 '__clang_svuint64x2_t'
|-TypedefDecl 0x151126ab8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x151056010 '__clang_svfloat16x2_t'
|-TypedefDecl 0x151126b20 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x151056030 '__clang_svfloat32x2_t'
|-TypedefDecl 0x151126b88 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x151056050 '__clang_svfloat64x2_t'
|-TypedefDecl 0x151126bf0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x151056070 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x151126c58 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x151056090 '__clang_svint8x3_t'
|-TypedefDecl 0x151126cc0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1510560b0 '__clang_svint16x3_t'
|-TypedefDecl 0x151126d28 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x1510560d0 '__clang_svint32x3_t'
|-TypedefDecl 0x151126d90 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x1510560f0 '__clang_svint64x3_t'
|-TypedefDecl 0x151126df8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x151056110 '__clang_svuint8x3_t'
|-TypedefDecl 0x151126e60 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x151056130 '__clang_svuint16x3_t'
|-TypedefDecl 0x151126ec8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x151056150 '__clang_svuint32x3_t'
|-TypedefDecl 0x151126f30 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x151056170 '__clang_svuint64x3_t'
|-TypedefDecl 0x151126f98 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x151056190 '__clang_svfloat16x3_t'
|-TypedefDecl 0x151127800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1510561b0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x151127868 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x1510561d0 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1511278d0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x1510561f0 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x151127938 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x151056210 '__clang_svint8x4_t'
|-TypedefDecl 0x1511279a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x151056230 '__clang_svint16x4_t'
|-TypedefDecl 0x151127a08 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x151056250 '__clang_svint32x4_t'
|-TypedefDecl 0x151127a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x151056270 '__clang_svint64x4_t'
|-TypedefDecl 0x151127ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x151056290 '__clang_svuint8x4_t'
|-TypedefDecl 0x151127b40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1510562b0 '__clang_svuint16x4_t'
|-TypedefDecl 0x151127ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x1510562d0 '__clang_svuint32x4_t'
|-TypedefDecl 0x151127c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x1510562f0 '__clang_svuint64x4_t'
|-TypedefDecl 0x151127c78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x151056310 '__clang_svfloat16x4_t'
|-TypedefDecl 0x151127ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x151056330 '__clang_svfloat32x4_t'
|-TypedefDecl 0x151127d48 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x151056350 '__clang_svfloat64x4_t'
|-TypedefDecl 0x151127db0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x151056370 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x151127e18 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x151056390 '__SVBool_t'
|-TypedefDecl 0x151127e80 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1510563b0 '__clang_svboolx2_t'
|-TypedefDecl 0x151127ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x1510563d0 '__clang_svboolx4_t'
|-TypedefDecl 0x151127f50 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x1510563f0 '__SVCount_t'
|-TypedefDecl 0x151127ff8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x151127fb0 'char *'
|   `-BuiltinType 0x1510556b0 'char'
|-TypedefDecl 0x151128068 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x151127fb0 'char *'
|   `-BuiltinType 0x1510556b0 'char'
|-FunctionDecl 0x151128418 <dataset_diviso_filec/func9534_vuln.c:1:1, line:45:1> line:1:1 invalid ptp_unpack_OPL 'int (int *, unsigned char *, int **, unsigned int)'
| |-ParmVarDecl 0x151128128 <col:17, col:28> col:28 invalid params 'int *'
| |-ParmVarDecl 0x1511281d8 <col:36, col:51> col:51 used data 'unsigned char *'
| |-ParmVarDecl 0x151128290 <col:57, col:73> col:73 referenced invalid pprops 'int **'
| |-ParmVarDecl 0x151128310 <col:81, col:94> col:94 used len 'unsigned int'
| `-CompoundStmt 0x1511433a0 <line:2:1, line:45:1>
|   |-DeclStmt 0x151128680 <line:5:2, col:28>
|   | |-VarDecl 0x151128548 <col:2, col:24> col:15 used offset 'unsigned int' cinit
|   | | `-ImplicitCastExpr 0x1511285d0 <col:24> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x1511285b0 <col:24> 'int' 0
|   | `-VarDecl 0x151128600 <col:2, col:27> col:27 used i 'unsigned int'
|   |-IfStmt 0x1511418a8 <line:7:2, line:10:2>
|   | |-BinaryOperator 0x151128710 <line:7:6, col:20> 'int' contains-errors '=='
|   | | |-RecoveryExpr 0x1511286f0 <col:6> '<dependent type>' contains-errors lvalue
|   | | `-IntegerLiteral 0x1511286b0 <col:20> 'int' 0
|   | `-CompoundStmt 0x151141888 <col:23, line:10:2>
|   |   |-BinaryOperator 0x151141838 <line:8:3, col:13> '<dependent type>' contains-errors '='
|   |   | |-UnaryOperator 0x151141800 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow
|   |   | | `-ImplicitCastExpr 0x1511287e8 <col:4> '<dependent type>' contains-errors <LValueToRValue>
|   |   | |   `-RecoveryExpr 0x151128730 <col:4> '<dependent type>' contains-errors lvalue
|   |   | `-RecoveryExpr 0x151141818 <col:13> '<dependent type>' contains-errors lvalue
|   |   `-ReturnStmt 0x151141878 <line:9:3, col:10>
|   |     `-IntegerLiteral 0x151141858 <col:10> 'int' 0
|   |-CallExpr 0x151141b58 <line:11:2, col:43> '<dependent type>' contains-errors
|   | |-DeclRefExpr 0x151141a20 <col:2> 'int ()' Function 0x151141968 'ptp_debug' 'int ()'
|   | |-RecoveryExpr 0x151141a40 <col:13> '<dependent type>' contains-errors lvalue
|   | |-StringLiteral 0x151141aa0 <col:21> 'char[4]' lvalue "STR"
|   | |-DeclRefExpr 0x151141ac0 <col:28> 'unsigned int' lvalue ParmVar 0x151128310 'len' 'unsigned int'
|   | `-RecoveryExpr 0x151141b38 <col:33> '<dependent type>' contains-errors lvalue
|   |-IfStmt 0x151142388 <line:15:2, col:21>
|   | |-UnaryOperator 0x151142340 <col:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x151142328 <col:7> '<dependent type>' contains-errors <LValueToRValue>
|   | |   `-RecoveryExpr 0x151142308 <col:7> '<dependent type>' contains-errors lvalue
|   | `-ReturnStmt 0x151142378 <col:14, col:21>
|   |   `-IntegerLiteral 0x151142358 <col:21> 'int' 0
|   `-ForStmt 0x1511432f8 <line:16:2, line:41:2>
|     |-BinaryOperator 0x151142400 <line:16:7, col:11> 'unsigned int' '='
|     | |-DeclRefExpr 0x1511423a8 <col:7> 'unsigned int' lvalue Var 0x151128600 'i' 'unsigned int'
|     | `-ImplicitCastExpr 0x1511423e8 <col:11> 'unsigned int' <IntegralCast>
|     |   `-IntegerLiteral 0x1511423c8 <col:11> 'int' 0
|     |-<<<NULL>>>
|     |-BinaryOperator 0x151142498 <col:14, col:18> 'int' contains-errors '<'
|     | |-DeclRefExpr 0x151142420 <col:14> 'unsigned int' lvalue Var 0x151128600 'i' 'unsigned int'
|     | `-RecoveryExpr 0x151142478 <col:18> '<dependent type>' contains-errors lvalue
|     |-UnaryOperator 0x1511424d8 <col:30, col:31> 'unsigned int' postfix '++'
|     | `-DeclRefExpr 0x1511424b8 <col:30> 'unsigned int' lvalue Var 0x151128600 'i' 'unsigned int'
|     `-CompoundStmt 0x1511432c8 <col:35, line:41:2>
|       |-IfStmt 0x151142a38 <line:17:3, line:24:3>
|       | |-BinaryOperator 0x151142560 <line:17:7, col:14> 'int' '<='
|       | | |-ImplicitCastExpr 0x151142530 <col:7> 'unsigned int' <LValueToRValue>
|       | | | `-DeclRefExpr 0x1511424f0 <col:7> 'unsigned int' lvalue ParmVar 0x151128310 'len' 'unsigned int'
|       | | `-ImplicitCastExpr 0x151142548 <col:14> 'unsigned int' <IntegralCast>
|       | |   `-IntegerLiteral 0x151142510 <col:14> 'int' 0
|       | `-CompoundStmt 0x151142a08 <col:17, line:24:3>
|       |   |-CallExpr 0x151142678 <line:18:4, col:43> '<dependent type>' contains-errors
|       |   | |-DeclRefExpr 0x151142580 <col:4> 'int ()' Function 0x151141968 'ptp_debug' 'int ()'
|       |   | |-RecoveryExpr 0x1511425a0 <col:15> '<dependent type>' contains-errors lvalue
|       |   | |-StringLiteral 0x1511425c0 <col:23> 'char[4]' lvalue "STR"
|       |   | |-DeclRefExpr 0x1511425e0 <col:30> 'unsigned int' lvalue Var 0x151128600 'i' 'unsigned int'
|       |   | `-RecoveryExpr 0x151142658 <col:33> '<dependent type>' contains-errors lvalue
|       |   |-CallExpr 0x151142738 <line:19:4, col:31> '<dependent type>' contains-errors
|       |   | |-DeclRefExpr 0x1511426b8 <col:4> 'int ()' Function 0x151141968 'ptp_debug' 'int ()'
|       |   | |-RecoveryExpr 0x1511426d8 <col:15> '<dependent type>' contains-errors lvalue
|       |   | |-StringLiteral 0x1511426f8 <col:23> 'char[4]' lvalue "STR"
|       |   | `-DeclRefExpr 0x151142718 <col:30> 'unsigned int' lvalue Var 0x151128600 'i' 'unsigned int'
|       |   |-CallExpr 0x151142800 <line:20:4, col:31> '<dependent type>' contains-errors
|       |   | |-DeclRefExpr 0x151142770 <col:4> 'int ()' Function 0x151141968 'ptp_debug' 'int ()'
|       |   | |-RecoveryExpr 0x151142790 <col:15> '<dependent type>' contains-errors lvalue
|       |   | |-StringLiteral 0x1511427b0 <col:23> 'char[4]' lvalue "STR"
|       |   | `-DeclRefExpr 0x1511427d0 <col:30> 'unsigned int' lvalue Var 0x151128600 'i' 'unsigned int'
|       |   `-ReturnStmt 0x1511429f8 <line:23:4, col:11>
|       |     `-ImplicitCastExpr 0x1511429e0 <col:11> 'int' <IntegralCast>
|       |       `-ImplicitCastExpr 0x1511429c8 <col:11> 'unsigned int' <LValueToRValue>
|       |         `-DeclRefExpr 0x1511429a8 <col:11> 'unsigned int' lvalue Var 0x151128600 'i' 'unsigned int'
|       |-BinaryOperator 0x151142f90 <line:37:3, col:12> 'unsigned int' '='
|       | |-DeclRefExpr 0x151142f38 <col:3> 'unsigned int' lvalue Var 0x151128548 'offset' 'unsigned int'
|       | `-ImplicitCastExpr 0x151142f78 <col:12> 'unsigned int' <IntegralCast>
|       |   `-IntegerLiteral 0x151142f58 <col:12> 'int' 0
|       |-CompoundAssignOperator 0x151143210 <line:39:3, col:11> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|       | |-DeclRefExpr 0x1511431b8 <col:3> 'unsigned char *' lvalue ParmVar 0x1511281d8 'data' 'unsigned char *'
|       | `-ImplicitCastExpr 0x1511431f8 <col:11> 'unsigned int' <LValueToRValue>
|       |   `-DeclRefExpr 0x1511431d8 <col:11> 'unsigned int' lvalue Var 0x151128548 'offset' 'unsigned int'
|       `-CompoundAssignOperator 0x151143298 <line:40:3, col:10> 'unsigned int' '-=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|         |-DeclRefExpr 0x151143240 <col:3> 'unsigned int' lvalue ParmVar 0x151128310 'len' 'unsigned int'
|         `-ImplicitCastExpr 0x151143280 <col:10> 'unsigned int' <LValueToRValue>
|           `-DeclRefExpr 0x151143260 <col:10> 'unsigned int' lvalue Var 0x151128548 'offset' 'unsigned int'
`-FunctionDecl 0x1511420b0 <line:14:10> col:10 implicit used malloc 'void *(unsigned long)' extern
  |-ParmVarDecl 0x1511421b0 <<invalid sloc>> <invalid sloc> 'unsigned long'
  |-BuiltinAttr 0x151142158 <<invalid sloc>> Implicit 871
  `-AllocSizeAttr 0x151142220 <col:10> Implicit 1
