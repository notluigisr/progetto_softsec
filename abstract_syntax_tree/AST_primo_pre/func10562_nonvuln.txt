`-FunctionDecl 0x15781eba0  line:1:6 invalid set_position 'void (int *, int, int *, int *)'
  |-ParmVarDecl 0x15781e928 <col:19, col:25> col:25 referenced invalid join 'int *'
  |-ParmVarDecl 0x15781e9a8 <col:30, col:35> col:35 used idx 'int'
  |-ParmVarDecl 0x15781ea28 <col:39, col:49> col:49 invalid table 'int *'
  |-ParmVarDecl 0x15781eaa8 <col:55, col:63> col:63 invalid key 'int *'
  `-CompoundStmt 0x161008940 <line:2:1, line:24:1>
    |-BinaryOperator 0x15781edd0 <line:3:3, col:31> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x15781ed68 <col:3, col:24> '<dependent type>' contains-errors lvalue .table
    | | `-ArraySubscriptExpr 0x15781ed48 <col:3, col:22> '<dependent type>' contains-errors lvalue
    | |   |-ImplicitCastExpr 0x15781ed18 <col:3, col:9> '<dependent type>' contains-errors <LValueToRValue>
    | |   | `-CXXDependentScopeMemberExpr 0x15781ecb0 <col:3, col:9> '<dependent type>' contains-errors lvalue ->positions
    | |   |   `-RecoveryExpr 0x15781ec88 <col:3> '<dependent type>' contains-errors lvalue
    | |   |     `-DeclRefExpr 0x15781ec68 <col:3> 'int *' lvalue ParmVar 0x15781e928 'join' 'int *'
    | |   `-ImplicitCastExpr 0x15781ed30 <col:19> 'int' <LValueToRValue>
    | |     `-DeclRefExpr 0x15781ecf8 <col:19> 'int' lvalue ParmVar 0x15781e9a8 'idx' 'int'
    | `-RecoveryExpr 0x15781edb0 <col:31> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x15781ef58 <line:4:3, col:28> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x15781eef0 <col:3, col:24> '<dependent type>' contains-errors lvalue .key
    | | `-ArraySubscriptExpr 0x15781eed0 <col:3, col:22> '<dependent type>' contains-errors lvalue
    | |   |-ImplicitCastExpr 0x15781eea0 <col:3, col:9> '<dependent type>' contains-errors <LValueToRValue>
    | |   | `-CXXDependentScopeMemberExpr 0x15781ee38 <col:3, col:9> '<dependent type>' contains-errors lvalue ->positions
    | |   |   `-RecoveryExpr 0x15781ee10 <col:3> '<dependent type>' contains-errors lvalue
    | |   |     `-DeclRefExpr 0x15781edf0 <col:3> 'int *' lvalue ParmVar 0x15781e928 'join' 'int *'
    | |   `-ImplicitCastExpr 0x15781eeb8 <col:19> 'int' <LValueToRValue>
    | |     `-DeclRefExpr 0x15781ee80 <col:19> 'int' lvalue ParmVar 0x15781e9a8 'idx' 'int'
    | `-RecoveryExpr 0x15781ef38 <col:28> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x1600fe520 <line:5:3, col:37> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x1600fe4b8 <col:3, col:24> '<dependent type>' contains-errors lvalue .records_read
    | | `-ArraySubscriptExpr 0x1600fe498 <col:3, col:22> '<dependent type>' contains-errors lvalue
    | |   |-ImplicitCastExpr 0x1600fe468 <col:3, col:9> '<dependent type>' contains-errors <LValueToRValue>
    | |   | `-CXXDependentScopeMemberExpr 0x1600fe400 <col:3, col:9> '<dependent type>' contains-errors lvalue ->positions
    | |   |   `-RecoveryExpr 0x15781ef98 <col:3> '<dependent type>' contains-errors lvalue
    | |   |     `-DeclRefExpr 0x15781ef78 <col:3> 'int *' lvalue ParmVar 0x15781e928 'join' 'int *'
    | |   `-ImplicitCastExpr 0x1600fe480 <col:19> 'int' <LValueToRValue>
    | |     `-DeclRefExpr 0x1600fe448 <col:19> 'int' lvalue ParmVar 0x15781e9a8 'idx' 'int'
    | `-FloatingLiteral 0x1600fe500 <col:37> 'double' 1.000000e+00
    |-BinaryOperator 0x1600fe6a8 <line:6:3, col:42> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x1600fe640 <col:3, col:24> '<dependent type>' contains-errors lvalue .cond_selectivity
    | | `-ArraySubscriptExpr 0x1600fe620 <col:3, col:22> '<dependent type>' contains-errors lvalue
    | |   |-ImplicitCastExpr 0x1600fe5f0 <col:3, col:9> '<dependent type>' contains-errors <LValueToRValue>
    | |   | `-CXXDependentScopeMemberExpr 0x1600fe588 <col:3, col:9> '<dependent type>' contains-errors lvalue ->positions
    | |   |   `-RecoveryExpr 0x1600fe560 <col:3> '<dependent type>' contains-errors lvalue
    | |   |     `-DeclRefExpr 0x1600fe540 <col:3> 'int *' lvalue ParmVar 0x15781e928 'join' 'int *'
    | |   `-ImplicitCastExpr 0x1600fe608 <col:19> 'int' <LValueToRValue>
    | |     `-DeclRefExpr 0x1600fe5d0 <col:19> 'int' lvalue ParmVar 0x15781e9a8 'idx' 'int'
    | `-FloatingLiteral 0x1600fe688 <col:42> 'double' 1.000000e+00
    |-BinaryOperator 0x1600fe830 <line:7:3, col:40> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x1600fe7c8 <col:3, col:24> '<dependent type>' contains-errors lvalue .ref_depend_map
    | | `-ArraySubscriptExpr 0x1600fe7a8 <col:3, col:22> '<dependent type>' contains-errors lvalue
    | |   |-ImplicitCastExpr 0x1600fe778 <col:3, col:9> '<dependent type>' contains-errors <LValueToRValue>
    | |   | `-CXXDependentScopeMemberExpr 0x1600fe710 <col:3, col:9> '<dependent type>' contains-errors lvalue ->positions
    | |   |   `-RecoveryExpr 0x1600fe6e8 <col:3> '<dependent type>' contains-errors lvalue
    | |   |     `-DeclRefExpr 0x1600fe6c8 <col:3> 'int *' lvalue ParmVar 0x15781e928 'join' 'int *'
    | |   `-ImplicitCastExpr 0x1600fe790 <col:19> 'int' <LValueToRValue>
    | |     `-DeclRefExpr 0x1600fe758 <col:19> 'int' lvalue ParmVar 0x15781e9a8 'idx' 'int'
    | `-IntegerLiteral 0x1600fe810 <col:40> 'int' 0
    |-BinaryOperator 0x1600feb20 <line:10:3, col:37> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x1600feab8 <col:3, col:24> '<dependent type>' contains-errors lvalue .sj_strategy
    | | `-ArraySubscriptExpr 0x1600fea98 <col:3, col:22> '<dependent type>' contains-errors lvalue
    | |   |-ImplicitCastExpr 0x1600fea68 <col:3, col:9> '<dependent type>' contains-errors <LValueToRValue>
    | |   | `-CXXDependentScopeMemberExpr 0x1600fe898 <col:3, col:9> '<dependent type>' contains-errors lvalue ->positions
    | |   |   `-RecoveryExpr 0x1600fe870 <col:3> '<dependent type>' contains-errors lvalue
    | |   |     `-DeclRefExpr 0x1600fe850 <col:3> 'int *' lvalue ParmVar 0x15781e928 'join' 'int *'
    | |   `-ImplicitCastExpr 0x1600fea80 <col:19> 'int' <LValueToRValue>
    | |     `-DeclRefExpr 0x1600fe8e0 <col:19> 'int' lvalue ParmVar 0x15781e9a8 'idx' 'int'
    | `-RecoveryExpr 0x1600feb00 <col:37> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x1600fee10 <line:11:3, col:41> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x1600feda8 <col:3, col:24> '<dependent type>' contains-errors lvalue .use_join_buffer
    | | `-ArraySubscriptExpr 0x1600fed88 <col:3, col:22> '<dependent type>' contains-errors lvalue
    | |   |-ImplicitCastExpr 0x1600fed58 <col:3, col:9> '<dependent type>' contains-errors <LValueToRValue>
    | |   | `-CXXDependentScopeMemberExpr 0x1600feb88 <col:3, col:9> '<dependent type>' contains-errors lvalue ->positions
    | |   |   `-RecoveryExpr 0x1600feb60 <col:3> '<dependent type>' contains-errors lvalue
    | |   |     `-DeclRefExpr 0x1600feb40 <col:3> 'int *' lvalue ParmVar 0x15781e928 'join' 'int *'
    | |   `-ImplicitCastExpr 0x1600fed70 <col:19> 'int' <LValueToRValue>
    | |     `-DeclRefExpr 0x1600febd0 <col:19> 'int' lvalue ParmVar 0x15781e9a8 'idx' 'int'
    | `-RecoveryExpr 0x1600fedf0 <col:41> '<dependent type>' contains-errors lvalue
    |-ForStmt 0x1600ff200 <line:16:3, line:21:3>
    | |-<<<NULL>>>
    | |-<<<NULL>>>
    | |-BinaryOperator 0x1600ff0c8 <line:16:9, col:17> 'int' contains-errors '!='
    | | |-RecoveryExpr 0x1600ff0a8 <col:9> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x1600ff068 <col:17> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x1600ff138 <col:25, col:28> '<dependent type>' contains-errors postfix '++' cannot overflow
    | | `-RecoveryExpr 0x1600ff118 <col:25> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x1600ff1f0 <line:17:3, line:21:3>
    |-BinaryOperator 0x1600ff358 <line:22:3, col:23> '<dependent type>' contains-errors '='
    | |-ArraySubscriptExpr 0x1600ff318 <col:3, col:21> '<dependent type>' contains-errors lvalue
    | | |-ImplicitCastExpr 0x1600ff2e8 <col:3, col:9> '<dependent type>' contains-errors <LValueToRValue>
    | | | `-CXXDependentScopeMemberExpr 0x1600ff280 <col:3, col:9> '<dependent type>' contains-errors lvalue ->best_ref
    | | |   `-RecoveryExpr 0x1600ff258 <col:3> '<dependent type>' contains-errors lvalue
    | | |     `-DeclRefExpr 0x1600ff238 <col:3> 'int *' lvalue ParmVar 0x15781e928 'join' 'int *'
    | | `-ImplicitCastExpr 0x1600ff300 <col:18> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x1600ff2c8 <col:18> 'int' lvalue ParmVar 0x15781e9a8 'idx' 'int'
    | `-RecoveryExpr 0x1600ff338 <col:23> '<dependent type>' contains-errors lvalue
    `-BinaryOperator 0x161008920 <line:23:3, col:34> '<dependent type>' contains-errors '='
      |-CXXDependentScopeMemberExpr 0x1610088b8 <col:3, col:24> '<dependent type>' contains-errors lvalue .spl_plan
      | `-ArraySubscriptExpr 0x161008898 <col:3, col:22> '<dependent type>' contains-errors lvalue
      |   |-ImplicitCastExpr 0x161008868 <col:3, col:9> '<dependent type>' contains-errors <LValueToRValue>
      |   | `-CXXDependentScopeMemberExpr 0x161008800 <col:3, col:9> '<dependent type>' contains-errors lvalue ->positions
      |   |   `-RecoveryExpr 0x1600ff398 <col:3> '<dependent type>' contains-errors lvalue
      |   |     `-DeclRefExpr 0x1600ff378 <col:3> 'int *' lvalue ParmVar 0x15781e928 'join' 'int *'
      |   `-ImplicitCastExpr 0x161008880 <col:19> 'int' <LValueToRValue>
      |     `-DeclRefExpr 0x161008848 <col:19> 'int' lvalue ParmVar 0x15781e9a8 'idx' 'int'
      `-IntegerLiteral 0x161008900 <col:34> 'int' 0
