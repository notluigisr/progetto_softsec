`-FunctionDecl 0x159128400  line:1:6 invalid create_partition_name 'void (char *, const char *, const char *, int, int)'
  |-ParmVarDecl 0x1591280d8 <col:28, col:34> col:34 used out 'char *'
  |-ParmVarDecl 0x159128158 <col:39, col:51> col:51 used in1 'const char *'
  |-ParmVarDecl 0x1591281d8 <line:2:28, col:40> col:40 used in2 'const char *'
  |-ParmVarDecl 0x159128270 <col:45, col:50> col:50 used name_variant 'int'
  |-ParmVarDecl 0x1591282f0 <line:3:28, col:33> col:33 invalid translate 'int'
  `-CompoundStmt 0x159817918 <line:4:1, line:21:1>
    |-DeclStmt 0x159128560 <line:5:3, col:35>
    | `-VarDecl 0x1591284f8 <col:3, col:8> col:8 invalid transl_part_name 'char'
    |-DeclStmt 0x1591285f8 <line:6:3, col:26>
    | `-VarDecl 0x159128590 <col:3, col:15> col:15 used transl_part 'const char *'
    |-IfStmt 0x1598171a0 <line:8:3, line:14:18> has_else
    | |-RecoveryExpr 0x159128610 <line:8:7> '<dependent type>' contains-errors lvalue
    | |-CompoundStmt 0x159817108 <line:9:3, line:12:3>
    | | |-CallExpr 0x159817070 <line:10:5, col:59> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x159128790 <col:5> 'int ()' Function 0x1591286d8 'tablename_to_filename' 'int ()'
    | | | |-DeclRefExpr 0x1591287b0 <col:27> 'const char *' lvalue ParmVar 0x1591281d8 'in2' 'const char *'
    | | | |-RecoveryExpr 0x1591287d0 <col:32> '<dependent type>' contains-errors lvalue
    | | | `-RecoveryExpr 0x159817050 <col:50> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x1598170e8 <line:11:5, col:18> 'const char *' contains-errors '='
    | |   |-DeclRefExpr 0x1598170a8 <col:5> 'const char *' lvalue Var 0x159128590 'transl_part' 'const char *'
    | |   `-RecoveryExpr 0x1598170c8 <col:18> '<dependent type>' contains-errors lvalue
    | `-BinaryOperator 0x159817180 <line:14:5, col:18> 'const char *' '='
    |   |-DeclRefExpr 0x159817128 <col:5> 'const char *' lvalue Var 0x159128590 'transl_part' 'const char *'
    |   `-ImplicitCastExpr 0x159817168 <col:18> 'const char *' <LValueToRValue>
    |     `-DeclRefExpr 0x159817148 <col:18> 'const char *' lvalue ParmVar 0x1591281d8 'in2' 'const char *'
    `-IfStmt 0x1598178e8 <line:15:3, line:20:35> has_else
      |-BinaryOperator 0x159817248 <line:15:7, col:23> 'int' contains-errors '=='
      | |-DeclRefExpr 0x1598171d0 <col:7> 'int' lvalue ParmVar 0x159128270 'name_variant' 'int'
      | `-RecoveryExpr 0x159817228 <col:23> '<dependent type>' contains-errors lvalue
      |-CallExpr 0x1598174b0 <line:16:5, col:48> '<dependent type>' contains-errors
      | |-DeclRefExpr 0x159817348 <col:5> 'int ()' Function 0x159817290 'strxmov' 'int ()'
      | |-DeclRefExpr 0x159817368 <col:13> 'char *' lvalue ParmVar 0x1591280d8 'out' 'char *'
      | |-DeclRefExpr 0x159817388 <col:18> 'const char *' lvalue ParmVar 0x159128158 'in1' 'const char *'
      | |-StringLiteral 0x1598173f0 <col:23> 'char[4]' lvalue "STR"
      | |-DeclRefExpr 0x159817410 <col:30> 'const char *' lvalue Var 0x159128590 'transl_part' 'const char *'
      | `-RecoveryExpr 0x159817490 <col:43> '<dependent type>' contains-errors lvalue
      `-IfStmt 0x1598178b8 <line:17:8, line:20:35> has_else
        |-BinaryOperator 0x159817570 <line:17:12, col:28> 'int' contains-errors '=='
        | |-DeclRefExpr 0x1598174f8 <col:12> 'int' lvalue ParmVar 0x159128270 'name_variant' 'int'
        | `-RecoveryExpr 0x159817550 <col:28> '<dependent type>' contains-errors lvalue
        |-CallExpr 0x159817688 <line:18:5, col:35> '<dependent type>' contains-errors
        | |-DeclRefExpr 0x159817590 <col:5> 'int ()' Function 0x159817290 'strxmov' 'int ()'
        | |-DeclRefExpr 0x1598175b0 <col:13> 'char *' lvalue ParmVar 0x1591280d8 'out' 'char *'
        | |-DeclRefExpr 0x1598175d0 <col:18> 'const char *' lvalue ParmVar 0x159128158 'in1' 'const char *'
        | |-StringLiteral 0x1598175f0 <col:23> 'char[4]' lvalue "STR"
        | `-RecoveryExpr 0x159817668 <col:30> '<dependent type>' contains-errors lvalue
        `-IfStmt 0x159817898 <line:19:8, line:20:35>
          |-BinaryOperator 0x159817740 <line:19:12, col:28> 'int' contains-errors '=='
          | |-DeclRefExpr 0x1598176c8 <col:12> 'int' lvalue ParmVar 0x159128270 'name_variant' 'int'
          | `-RecoveryExpr 0x159817720 <col:28> '<dependent type>' contains-errors lvalue
          `-CallExpr 0x159817858 <line:20:5, col:35> '<dependent type>' contains-errors
            |-DeclRefExpr 0x159817760 <col:5> 'int ()' Function 0x159817290 'strxmov' 'int ()'
            |-DeclRefExpr 0x159817780 <col:13> 'char *' lvalue ParmVar 0x1591280d8 'out' 'char *'
            |-DeclRefExpr 0x1598177a0 <col:18> 'const char *' lvalue ParmVar 0x159128158 'in1' 'const char *'
            |-StringLiteral 0x1598177c0 <col:23> 'char[4]' lvalue "STR"
            `-RecoveryExpr 0x159817838 <col:30> '<dependent type>' contains-errors lvalue
