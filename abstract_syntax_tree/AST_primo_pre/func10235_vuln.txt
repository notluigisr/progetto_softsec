`-FunctionDecl 0x1401283d8  line:1:17 invalid cosine_read 'int (int *, int *, char **, int *)' static
  |-ParmVarDecl 0x140128128 <col:29, col:35> col:35 invalid wth 'int *'
  |-ParmVarDecl 0x1401281a8 <col:40, col:45> col:45 used err 'int *'
  |-ParmVarDecl 0x140128258 <col:50, col:58> col:58 used err_info 'char **'
  |-ParmVarDecl 0x1401282d8 <line:2:5, col:13> col:13 invalid data_offset 'int *'
  `-CompoundStmt 0x138009ed0 <line:3:1, line:22:1>
    |-DeclStmt 0x140128520 <line:5:2, col:13>
    | `-VarDecl 0x1401284b8 <col:2, col:6> col:6 used pkt_len 'int'
    |-DeclStmt 0x1401285c8 <line:6:2, col:31>
    | `-VarDecl 0x140128560 <col:2, col:7> col:7 invalid line 'char'
    |-IfStmt 0x138009720 <line:10:2, line:11:10>
    | |-BinaryOperator 0x1380096b8 <line:10:6, col:15> 'int' contains-errors '<'
    | | |-RecoveryExpr 0x138009698 <col:6> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x138009658 <col:15> 'int' 0
    | `-ReturnStmt 0x138009710 <line:11:3, col:10>
    |   `-RecoveryExpr 0x1380096f0 <col:10> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x138009848 <line:12:2, col:17> '<dependent type>' contains-errors '='
    | |-UnaryOperator 0x138009810 <col:2, col:3> '<dependent type>' contains-errors prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x1380097f8 <col:3> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x138009740 <col:3> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x138009828 <col:17> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x138009aa8 <line:15:2, col:64> 'int' contains-errors '='
    | |-DeclRefExpr 0x138009868 <col:2> 'int' lvalue Var 0x1401284b8 'pkt_len' 'int'
    | `-CallExpr 0x138009a68 <col:12, col:64> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x138009968 <col:12> 'int ()' Function 0x1380098b0 'parse_cosine_rec_hdr' 'int ()'
    |   |-UnaryOperator 0x1380099f0 <col:33, col:39> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-CXXDependentScopeMemberExpr 0x1380099a8 <col:34, col:39> '<dependent type>' contains-errors lvalue ->phdr
    |   |   `-RecoveryExpr 0x138009988 <col:34> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x138009a08 <col:45> '<dependent type>' contains-errors lvalue
    |   |-DeclRefExpr 0x138009a28 <col:51> 'int *' lvalue ParmVar 0x1401281a8 'err' 'int *'
    |   `-DeclRefExpr 0x138009a48 <col:56> 'char **' lvalue ParmVar 0x140128258 'err_info' 'char **'
    |-IfStmt 0x138009ba0 <line:16:2, line:17:10>
    | |-BinaryOperator 0x138009b38 <line:16:6, col:18> 'int' '=='
    | | |-ImplicitCastExpr 0x138009b20 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x138009ac8 <col:6> 'int' lvalue Var 0x1401284b8 'pkt_len' 'int'
    | | `-UnaryOperator 0x138009b08 <col:17, col:18> 'int' prefix '-'
    | |   `-IntegerLiteral 0x138009ae8 <col:18> 'int' 1
    | `-ReturnStmt 0x138009b90 <line:17:3, col:10>
    |   `-RecoveryExpr 0x138009b70 <col:10> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x138009ec0 <line:20:2, line:21:38>
      `-CallExpr 0x138009e70 <line:20:9, line:21:38> '<dependent type>' contains-errors
        |-DeclRefExpr 0x138009ca0 <line:20:9> 'int ()' Function 0x138009be8 'parse_cosine_hex_dump' 'int ()'
        |-CXXDependentScopeMemberExpr 0x138009ce0 <col:31, col:36> '<dependent type>' contains-errors lvalue ->fh
        | `-RecoveryExpr 0x138009cc0 <col:31> '<dependent type>' contains-errors lvalue
        |-UnaryOperator 0x138009d90 <col:40, col:46> '<dependent type>' contains-errors prefix '&' cannot overflow
        | `-CXXDependentScopeMemberExpr 0x138009d48 <col:41, col:46> '<dependent type>' contains-errors lvalue ->phdr
        |   `-RecoveryExpr 0x138009d28 <col:41> '<dependent type>' contains-errors lvalue
        |-DeclRefExpr 0x138009da8 <col:52> 'int' lvalue Var 0x1401284b8 'pkt_len' 'int'
        |-CXXDependentScopeMemberExpr 0x138009de8 <line:21:6, col:11> '<dependent type>' contains-errors lvalue ->frame_buffer
        | `-RecoveryExpr 0x138009dc8 <col:6> '<dependent type>' contains-errors lvalue
        |-DeclRefExpr 0x138009e30 <col:25> 'int *' lvalue ParmVar 0x1401281a8 'err' 'int *'
        `-DeclRefExpr 0x138009e50 <col:30> 'char **' lvalue ParmVar 0x140128258 'err_info' 'char **'
