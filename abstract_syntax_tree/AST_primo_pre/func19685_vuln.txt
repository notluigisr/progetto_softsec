`-FunctionDecl 0x12100e008  line:1:12 invalid __skb_get_nlattr_nest 'int (int, int, int, int, int)' static
  |-ParmVarDecl 0x12100dcf0 <col:34, col:38> col:38 invalid ctx 'int'
  |-ParmVarDecl 0x12100dd70 <col:43, col:47> col:47 invalid A 'int'
  |-ParmVarDecl 0x12100ddf0 <col:50, col:54> col:54 invalid X 'int'
  |-ParmVarDecl 0x12100de70 <col:57, col:61> col:61 invalid r4 'int'
  |-ParmVarDecl 0x12100def0 <col:65, col:69> col:69 invalid r5 'int'
  `-CompoundStmt 0x121027498 <line:2:1, line:21:1>
    |-DeclStmt 0x12100e3d8 <line:3:2, col:52>
    | |-RecordDecl 0x12100e0d8 <col:2, col:9> col:9 struct sk_buff
    | `-VarDecl 0x12100e248 <col:2, col:49> col:18 used skb 'struct sk_buff *' cinit
    |   `-CStyleCastExpr 0x12100e398 <col:24, col:49> 'struct sk_buff *' contains-errors <Dependent>
    |     `-CStyleCastExpr 0x12100e2e8 <col:42, col:49> 'long' contains-errors <Dependent>
    |       `-RecoveryExpr 0x12100e2b0 <col:49> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x1209237e8 <line:4:2, col:20>
    | |-RecordDecl 0x120923600 <col:2, col:9> col:9 struct nlattr
    | `-VarDecl 0x120923768 <col:2, col:17> col:17 used nla 'struct nlattr *'
    |-IfStmt 0x120923a58 <line:6:2, line:7:10>
    | |-CallExpr 0x1209239e8 <line:6:6, col:26> 'int' contains-errors
    | | |-ImplicitCastExpr 0x1209239d0 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x120923960 <col:6> 'int ()' Function 0x1209238a8 'skb_is_nonlinear' 'int ()'
    | | `-ImplicitCastExpr 0x120923a10 <col:23> 'struct sk_buff *' contains-errors <LValueToRValue>
    | |   `-DeclRefExpr 0x120923980 <col:23> 'struct sk_buff *' contains-errors lvalue Var 0x12100e248 'skb' 'struct sk_buff *'
    | `-ReturnStmt 0x120923a48 <line:7:3, col:10>
    |   `-IntegerLiteral 0x120923a28 <col:10> 'int' 0
    |-IfStmt 0x120923fc0 <line:9:2, line:10:10>
    | |-RecoveryExpr 0x120923f70 <line:9:6, col:41> '_Bool' contains-errors
    | `-ReturnStmt 0x120923fb0 <line:10:3, col:10>
    |   `-IntegerLiteral 0x120923f90 <col:10> 'int' 0
    |-BinaryOperator 0x120924170 <line:12:2, col:38> 'struct nlattr *' contains-errors '='
    | |-DeclRefExpr 0x120923fe0 <col:2> 'struct nlattr *' lvalue Var 0x120923768 'nla' 'struct nlattr *'
    | `-CStyleCastExpr 0x120924148 <col:8, col:38> 'struct nlattr *' contains-errors <Dependent>
    |   `-UnaryOperator 0x1209240d0 <col:26, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-ArraySubscriptExpr 0x1209240b0 <col:27, col:38> '<dependent type>' contains-errors lvalue
    |       |-ImplicitCastExpr 0x120924080 <col:27, col:32> '<dependent type>' contains-errors <LValueToRValue>
    |       | `-RecoveryExpr 0x120924038 <col:27, col:32> '<dependent type>' contains-errors lvalue
    |       |   `-DeclRefExpr 0x120924000 <col:27> 'struct sk_buff *' contains-errors lvalue Var 0x12100e248 'skb' 'struct sk_buff *'
    |       `-ImplicitCastExpr 0x120924098 <col:37> '<dependent type>' contains-errors <LValueToRValue>
    |         `-RecoveryExpr 0x120924060 <col:37> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x1209242e0 <line:13:2, line:14:10>
    | |-BinaryOperator 0x120924290 <line:13:6, col:30> 'int' contains-errors '>'
    | | |-RecoveryExpr 0x1209241c8 <col:6, col:11> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x120924190 <col:6> 'struct nlattr *' lvalue Var 0x120923768 'nla' 'struct nlattr *'
    | | `-BinaryOperator 0x120924270 <col:21, col:30> '<dependent type>' contains-errors '-'
    | |   |-RecoveryExpr 0x1209241f0 <col:21> '<dependent type>' contains-errors lvalue
    | |   `-RecoveryExpr 0x120924248 <col:25, col:30> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x120924210 <col:25> 'struct sk_buff *' contains-errors lvalue Var 0x12100e248 'skb' 'struct sk_buff *'
    | `-ReturnStmt 0x1209242d0 <line:14:3, col:10>
    |   `-IntegerLiteral 0x1209242b0 <col:10> 'int' 0
    |-BinaryOperator 0x120924490 <line:16:2, col:30> 'struct nlattr *' contains-errors '='
    | |-DeclRefExpr 0x120924300 <col:2> 'struct nlattr *' lvalue Var 0x120923768 'nla' 'struct nlattr *'
    | `-CallExpr 0x120924460 <col:8, col:30> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x120924400 <col:8> 'int ()' Function 0x120924348 'nla_find_nested' 'int ()'
    |   |-DeclRefExpr 0x120924420 <col:24> 'struct nlattr *' lvalue Var 0x120923768 'nla' 'struct nlattr *'
    |   `-RecoveryExpr 0x120924440 <col:29> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x121027448 <line:17:2, line:18:39>
    | |-ImplicitCastExpr 0x1209244d0 <line:17:6> 'struct nlattr *' <LValueToRValue>
    | | `-DeclRefExpr 0x1209244b0 <col:6> 'struct nlattr *' lvalue Var 0x120923768 'nla' 'struct nlattr *'
    | `-ReturnStmt 0x121027438 <line:18:3, col:39>
    |   `-ImplicitCastExpr 0x121027420 <col:10, col:39> 'int' contains-errors <IntegralCast>
    |     `-BinaryOperator 0x121027400 <col:10, col:39> 'long' contains-errors '-'
    |       |-CStyleCastExpr 0x120924538 <col:10, col:19> 'void *' <BitCast>
    |       | `-ImplicitCastExpr 0x120924520 <col:19> 'struct nlattr *' <LValueToRValue> part_of_explicit_cast
    |       |   `-DeclRefExpr 0x1209244e8 <col:19> 'struct nlattr *' lvalue Var 0x120923768 'nla' 'struct nlattr *'
    |       `-CStyleCastExpr 0x1209245d8 <col:25, col:39> 'void *' contains-errors <Dependent>
    |         `-RecoveryExpr 0x120924598 <col:34, col:39> '<dependent type>' contains-errors lvalue
    |           `-DeclRefExpr 0x120924560 <col:34> 'struct sk_buff *' contains-errors lvalue Var 0x12100e248 'skb' 'struct sk_buff *'
    `-ReturnStmt 0x121027488 <line:20:2, col:9>
      `-IntegerLiteral 0x121027468 <col:9> 'int' 0
