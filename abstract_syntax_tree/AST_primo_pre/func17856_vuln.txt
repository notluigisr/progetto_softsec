`-FunctionDecl 0x14f808200  line:1:1 do_replace 'int (struct net *, int)'
  |-ParmVarDecl 0x14f128648 <col:12, col:24> col:24 used net 'struct net *'
  |-ParmVarDecl 0x14f1286c0 <col:29, col:40> col:40 __user 'int'
  `-CompoundStmt 0x158808dc0 <line:2:1, line:46:1>
    |-DeclStmt 0x14f808380 <line:3:2, col:9>
    | `-VarDecl 0x14f808318 <col:2, col:6> col:6 used ret 'int'
    |-DeclStmt 0x14f808518 <line:4:2, col:24>
    | |-RecordDecl 0x14f808398 <col:2, col:9> col:9 struct ipt_replace
    | `-VarDecl 0x14f808498 <col:2, col:21> col:21 invalid tmp 'struct ipt_replace'
    |-DeclStmt 0x14f808718 <line:5:2, col:31>
    | |-RecordDecl 0x14f808530 <col:2, col:9> col:9 struct xt_table_info
    | `-VarDecl 0x14f808698 <col:2, col:24> col:24 used newinfo 'struct xt_table_info *'
    |-DeclStmt 0x14f8087b0 <line:6:2, col:21>
    | `-VarDecl 0x14f808748 <col:2, col:8> col:8 used loc_cpu_entry 'void *'
    |-DeclStmt 0x14f8089b8 <line:7:2, col:24>
    | |-RecordDecl 0x14f8087c8 <col:2, col:9> col:9 struct ipt_entry
    | `-VarDecl 0x14f808938 <col:2, col:20> col:20 used iter 'struct ipt_entry *'
    |-IfStmt 0x14f808d68 <line:9:2, line:10:11>
    | |-BinaryOperator 0x14f808ca0 <line:9:6, col:49> 'int' contains-errors '!='
    | | |-CallExpr 0x14f808c68 <col:6, col:44> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x14f808b00 <col:6> 'int ()' Function 0x14f808a48 'copy_from_user' 'int ()'
    | | | |-UnaryOperator 0x14f808b40 <col:21, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | | | `-RecoveryExpr 0x14f808b20 <col:22> '<dependent type>' contains-errors lvalue
    | | | |-DeclRefExpr 0x14f808c48 <col:27> 'struct ipt_entry *' lvalue Var 0x14f808938 'iter' 'struct ipt_entry *'
    | | | `-UnaryExprOrTypeTraitExpr 0x14f808bb0 <col:33, col:43> 'unsigned long' contains-errors sizeof
    | | |   `-ParenExpr 0x14f808b90 <col:39, col:43> '<dependent type>' contains-errors lvalue
    | | |     `-RecoveryExpr 0x14f808b70 <col:40> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x14f808c08 <col:49> 'int' 0
    | `-ReturnStmt 0x14f808d58 <line:10:3, col:11>
    |   `-UnaryOperator 0x14f808d40 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x14f808d28 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x14f808d08 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14f808fd0 <line:13:2, line:14:11>
    | |-RecoveryExpr 0x14f808f08 <line:13:6, col:61> '_Bool' contains-errors
    | `-ReturnStmt 0x14f808fc0 <line:14:3, col:11>
    |   `-UnaryOperator 0x14f808fa8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x14f808f90 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x14f808f70 <col:11> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x14f8091a0 <line:16:2, col:40> 'struct xt_table_info *' contains-errors '='
    | |-DeclRefExpr 0x14f808ff0 <col:2> 'struct xt_table_info *' lvalue Var 0x14f808698 'newinfo' 'struct xt_table_info *'
    | `-CallExpr 0x14f809178 <col:12, col:40> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14f8090f0 <col:12> 'int ()' Function 0x14f809038 'xt_alloc_table_info' 'int ()'
    |   `-CXXDependentScopeMemberExpr 0x14f809130 <col:32, col:36> '<dependent type>' contains-errors lvalue .size
    |     `-RecoveryExpr 0x14f809110 <col:32> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14f144cc0 <line:17:2, line:18:11>
    | |-UnaryOperator 0x14f144c00 <line:17:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x14f8091e0 <col:7> 'struct xt_table_info *' <LValueToRValue>
    | |   `-DeclRefExpr 0x14f8091c0 <col:7> 'struct xt_table_info *' lvalue Var 0x14f808698 'newinfo' 'struct xt_table_info *'
    | `-ReturnStmt 0x14f144cb0 <line:18:3, col:11>
    |   `-UnaryOperator 0x14f144c98 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x14f144c80 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x14f144c60 <col:11> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x14f144f00 <line:21:2, col:57> 'void *' contains-errors '='
    | |-DeclRefExpr 0x14f144ce0 <col:2> 'void *' lvalue Var 0x14f808748 'loc_cpu_entry' 'void *'
    | `-ArraySubscriptExpr 0x14f144ee0 <col:18, col:57> '<dependent type>' contains-errors lvalue
    |   |-ImplicitCastExpr 0x14f144ec8 <col:18, col:27> '<dependent type>' contains-errors <LValueToRValue>
    |   | `-RecoveryExpr 0x14f144d38 <col:18, col:27> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x14f144d00 <col:18> 'struct xt_table_info *' lvalue Var 0x14f808698 'newinfo' 'struct xt_table_info *'
    |   `-CallExpr 0x14f144ea8 <col:35, col:56> 'int'
    |     `-ImplicitCastExpr 0x14f144e90 <col:35> 'int (*)()' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x14f144e40 <col:35> 'int ()' Function 0x14f144d88 'raw_smp_processor_id' 'int ()'
    |-IfStmt 0x14f145328 <line:22:2, line:26:2>
    | |-BinaryOperator 0x14f145188 <line:22:6, line:23:20> 'int' contains-errors '!='
    | | |-CallExpr 0x14f145150 <line:22:6, line:23:15> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x14f144f20 <line:22:6> 'int ()' Function 0x14f808a48 'copy_from_user' 'int ()'
    | | | |-DeclRefExpr 0x14f144f40 <col:21> 'void *' lvalue Var 0x14f808748 'loc_cpu_entry' 'void *'
    | | | |-BinaryOperator 0x14f145130 <col:36, col:53> '<dependent type>' contains-errors '+'
    | | | | |-RecoveryExpr 0x14f145110 <col:36> '<dependent type>' contains-errors lvalue
    | | | | `-UnaryExprOrTypeTraitExpr 0x14f144fb8 <col:43, col:53> 'unsigned long' contains-errors sizeof
    | | | |   `-ParenExpr 0x14f144f98 <col:49, col:53> '<dependent type>' contains-errors lvalue
    | | | |     `-RecoveryExpr 0x14f144f78 <col:50> '<dependent type>' contains-errors lvalue
    | | | `-CXXDependentScopeMemberExpr 0x14f145018 <line:23:7, col:11> '<dependent type>' contains-errors lvalue .size
    | | |   `-RecoveryExpr 0x14f144ff8 <col:7> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x14f145098 <col:20> 'int' 0
    | `-CompoundStmt 0x14f145308 <col:23, line:26:2>
    |   |-BinaryOperator 0x14f145280 <line:24:3, col:10> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x14f1451a8 <col:3> 'int' lvalue Var 0x14f808318 'ret' 'int'
    |   | `-UnaryOperator 0x14f145268 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |   `-ImplicitCastExpr 0x14f145250 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    |   |     `-RecoveryExpr 0x14f145230 <col:10> '<dependent type>' contains-errors lvalue
    |   `-GotoStmt 0x14f1452f0 <line:25:3, col:8> 'free_newinfo' 0x14f1452a0
    |-BinaryOperator 0x14f145540 <line:28:2, col:57> 'int' contains-errors '='
    | |-DeclRefExpr 0x14f145348 <col:2> 'int' lvalue Var 0x14f808318 'ret' 'int'
    | `-CallExpr 0x14f145500 <col:8, col:57> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14f145448 <col:8> 'int ()' Function 0x14f145390 'translate_table' 'int ()'
    |   |-DeclRefExpr 0x14f145468 <col:24> 'struct net *' lvalue ParmVar 0x14f128648 'net' 'struct net *'
    |   |-DeclRefExpr 0x14f145488 <col:29> 'struct xt_table_info *' lvalue Var 0x14f808698 'newinfo' 'struct xt_table_info *'
    |   |-DeclRefExpr 0x14f1454a8 <col:38> 'void *' lvalue Var 0x14f808748 'loc_cpu_entry' 'void *'
    |   `-UnaryOperator 0x14f1454e8 <col:53, col:54> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x14f1454c8 <col:54> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14f1455f0 <line:29:2, line:30:8>
    | |-BinaryOperator 0x14f1455b8 <line:29:6, col:13> 'int' '!='
    | | |-ImplicitCastExpr 0x14f1455a0 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x14f145560 <col:6> 'int' lvalue Var 0x14f808318 'ret' 'int'
    | | `-IntegerLiteral 0x14f145580 <col:13> 'int' 0
    | `-GotoStmt 0x14f1455d8 <line:30:3, col:8> 'free_newinfo' 0x14f1452a0
    |-CallExpr 0x14f145788 <line:32:2, col:16> 'int'
    | |-ImplicitCastExpr 0x14f145770 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x14f1456f0 <col:2> 'int ()' Function 0x14f145638 'duprintf' 'int ()'
    | `-ImplicitCastExpr 0x14f1457b0 <col:11> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x14f145750 <col:11> 'char[4]' lvalue "STR"
    |-BinaryOperator 0x14f145b18 <line:34:2, line:35:37> 'int' contains-errors '='
    | |-DeclRefExpr 0x14f1457c8 <line:34:2> 'int' lvalue Var 0x14f808318 'ret' 'int'
    | `-CallExpr 0x14f145ac8 <col:8, line:35:37> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14f1458c8 <line:34:8> 'int ()' Function 0x14f145810 '__do_replace' 'int ()'
    |   |-DeclRefExpr 0x14f1458e8 <col:21> 'struct net *' lvalue ParmVar 0x14f128648 'net' 'struct net *'
    |   |-CXXDependentScopeMemberExpr 0x14f145928 <col:26, col:30> '<dependent type>' contains-errors lvalue .name
    |   | `-RecoveryExpr 0x14f145908 <col:26> '<dependent type>' contains-errors lvalue
    |   |-CXXDependentScopeMemberExpr 0x14f145990 <col:36, col:40> '<dependent type>' contains-errors lvalue .valid_hooks
    |   | `-RecoveryExpr 0x14f145970 <col:36> '<dependent type>' contains-errors lvalue
    |   |-DeclRefExpr 0x14f1459d8 <col:53> 'struct xt_table_info *' lvalue Var 0x14f808698 'newinfo' 'struct xt_table_info *'
    |   |-CXXDependentScopeMemberExpr 0x14f145a18 <line:35:7, col:11> '<dependent type>' contains-errors lvalue .num_counters
    |   | `-RecoveryExpr 0x14f1459f8 <col:7> '<dependent type>' contains-errors lvalue
    |   `-CXXDependentScopeMemberExpr 0x14f145a80 <col:25, col:29> '<dependent type>' contains-errors lvalue .counters
    |     `-RecoveryExpr 0x14f145a60 <col:25> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14f145bd8 <line:36:2, line:37:8>
    | |-ImplicitCastExpr 0x14f145b58 <line:36:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x14f145b38 <col:6> 'int' lvalue Var 0x14f808318 'ret' 'int'
    | `-GotoStmt 0x14f145bc0 <line:37:3, col:8> 'free_newinfo_untrans' 0x14f145b70
    |-ReturnStmt 0x158808820 <line:38:2, col:9>
    | `-IntegerLiteral 0x158808800 <col:9> 'int' 0
    |-LabelStmt 0x158808a08 <line:40:2, line:41:53> 'free_newinfo_untrans'
    | `-CallExpr 0x1588089d0 <col:2, col:53> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x158808910 <col:2> 'int ()' Function 0x158808858 'xt_entry_foreach' 'int ()'
    |   |-DeclRefExpr 0x158808930 <col:19> 'struct ipt_entry *' lvalue Var 0x14f808938 'iter' 'struct ipt_entry *'
    |   |-DeclRefExpr 0x158808950 <col:25> 'void *' lvalue Var 0x14f808748 'loc_cpu_entry' 'void *'
    |   `-RecoveryExpr 0x1588089a8 <col:40, col:49> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x158808970 <col:40> 'struct xt_table_info *' lvalue Var 0x14f808698 'newinfo' 'struct xt_table_info *'
    |-CallExpr 0x158808b80 <line:42:3, col:26> 'int'
    | |-ImplicitCastExpr 0x158808b68 <col:3> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x158808b08 <col:3> 'int ()' Function 0x158808a50 'cleanup_entry' 'int ()'
    | |-ImplicitCastExpr 0x158808bb0 <col:17> 'struct ipt_entry *' <LValueToRValue>
    | | `-DeclRefExpr 0x158808b28 <col:17> 'struct ipt_entry *' lvalue Var 0x14f808938 'iter' 'struct ipt_entry *'
    | `-ImplicitCastExpr 0x158808bc8 <col:23> 'struct net *' <LValueToRValue>
    |   `-DeclRefExpr 0x158808b48 <col:23> 'struct net *' lvalue ParmVar 0x14f128648 'net' 'struct net *'
    |-LabelStmt 0x158808d58 <line:43:2, line:44:28> 'free_newinfo'
    | `-CallExpr 0x158808d18 <col:2, col:28> 'int'
    |   |-ImplicitCastExpr 0x158808d00 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x158808cc0 <col:2> 'int ()' Function 0x158808c08 'xt_free_table_info' 'int ()'
    |   `-ImplicitCastExpr 0x158808d40 <col:21> 'struct xt_table_info *' <LValueToRValue>
    |     `-DeclRefExpr 0x158808ce0 <col:21> 'struct xt_table_info *' lvalue Var 0x14f808698 'newinfo' 'struct xt_table_info *'
    `-ReturnStmt 0x158808db0 <line:45:2, col:9>
      `-ImplicitCastExpr 0x158808d98 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x158808d78 <col:9> 'int' lvalue Var 0x14f808318 'ret' 'int'
