`-FunctionDecl 0x15780df18  line:1:12 invalid opclflush 'int (int *, int *, const int *)' static
  |-ParmVarDecl 0x15780dd28 <col:22, col:28> col:28 invalid a 'int *'
  |-ParmVarDecl 0x15780dda8 <col:31, col:36> col:36 referenced invalid data 'int *'
  |-ParmVarDecl 0x15780de28 <col:42, col:56> col:56 invalid op 'const int *'
  `-CompoundStmt 0x157829060 <col:60, line:28:1>
    |-DeclStmt 0x15780e078 <line:2:2, col:11>
    | `-VarDecl 0x15780dff0 <col:2, col:10> col:6 used l 'int' cinit
    |   `-IntegerLiteral 0x15780e058 <col:10> 'int' 0
    |-DeclStmt 0x15780e130 <line:3:2, col:16>
    | `-VarDecl 0x15780e0a8 <col:2, col:15> col:6 used offset 'int' cinit
    |   `-IntegerLiteral 0x15780e110 <col:15> 'int' 0
    |-DeclStmt 0x15780e1e8 <line:4:2, col:18>
    | `-VarDecl 0x15780e160 <col:2, col:17> col:6 used mod_byte 'int' cinit
    |   `-IntegerLiteral 0x15780e1c8 <col:17> 'int' 0
    |-IfStmt 0x157828ff8 <line:6:2, line:26:2>
    | |-BinaryOperator 0x157827468 <line:6:6, col:29> '<dependent type>' contains-errors '&'
    | | |-CXXDependentScopeMemberExpr 0x157827400 <col:6, col:22> '<dependent type>' contains-errors lvalue .type
    | | | `-ArraySubscriptExpr 0x15780e3d8 <col:6, col:20> '<dependent type>' contains-errors lvalue
    | | |   |-ImplicitCastExpr 0x15780e3c0 <col:6, col:10> '<dependent type>' contains-errors <LValueToRValue>
    | | |   | `-CXXDependentScopeMemberExpr 0x15780e220 <col:6, col:10> '<dependent type>' contains-errors lvalue ->operands
    | | |   |   `-RecoveryExpr 0x15780e200 <col:6> '<dependent type>' contains-errors lvalue
    | | |   `-IntegerLiteral 0x15780e268 <col:19> 'int' 0
    | | `-RecoveryExpr 0x157827448 <col:29> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x157828fb8 <col:40, line:26:2>
    |   |-BinaryOperator 0x157827560 <line:7:3, col:15> '<dependent type>' contains-errors '='
    |   | |-ArraySubscriptExpr 0x157827520 <col:3, col:11> '<dependent type>' contains-errors lvalue
    |   | | |-ImplicitCastExpr 0x157827508 <col:3> '<dependent type>' contains-errors <LValueToRValue>
    |   | | | `-RecoveryExpr 0x1578274a8 <col:3> '<dependent type>' contains-errors lvalue
    |   | | |   `-DeclRefExpr 0x157827488 <col:3> 'int *' lvalue ParmVar 0x15780dda8 'data' 'int *'
    |   | | `-UnaryOperator 0x1578274f0 <col:8, col:9> 'int' postfix '++'
    |   | |   `-DeclRefExpr 0x1578274d0 <col:8> 'int' lvalue Var 0x15780dff0 'l' 'int'
    |   | `-IntegerLiteral 0x157827540 <col:15> 'int' 15
    |   |-BinaryOperator 0x157827658 <line:8:3, col:15> '<dependent type>' contains-errors '='
    |   | |-ArraySubscriptExpr 0x157827618 <col:3, col:11> '<dependent type>' contains-errors lvalue
    |   | | |-ImplicitCastExpr 0x157827600 <col:3> '<dependent type>' contains-errors <LValueToRValue>
    |   | | | `-RecoveryExpr 0x1578275a0 <col:3> '<dependent type>' contains-errors lvalue
    |   | | |   `-DeclRefExpr 0x157827580 <col:3> 'int *' lvalue ParmVar 0x15780dda8 'data' 'int *'
    |   | | `-UnaryOperator 0x1578275e8 <col:8, col:9> 'int' postfix '++'
    |   | |   `-DeclRefExpr 0x1578275c8 <col:8> 'int' lvalue Var 0x15780dff0 'l' 'int'
    |   | `-IntegerLiteral 0x157827638 <col:15> 'int' 174
    |   |-BinaryOperator 0x1578278c8 <line:9:3, col:53> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x157827678 <col:3> 'int' lvalue Var 0x15780e0a8 'offset' 'int'
    |   | `-BinaryOperator 0x1578278a8 <col:12, col:53> '<dependent type>' contains-errors '*'
    |   |   |-CXXDependentScopeMemberExpr 0x157827758 <col:12, col:28> '<dependent type>' contains-errors lvalue .offset
    |   |   | `-ArraySubscriptExpr 0x157827738 <col:12, col:26> '<dependent type>' contains-errors lvalue
    |   |   |   |-ImplicitCastExpr 0x157827720 <col:12, col:16> '<dependent type>' contains-errors <LValueToRValue>
    |   |   |   | `-CXXDependentScopeMemberExpr 0x1578276b8 <col:12, col:16> '<dependent type>' contains-errors lvalue ->operands
    |   |   |   |   `-RecoveryExpr 0x157827698 <col:12> '<dependent type>' contains-errors lvalue
    |   |   |   `-IntegerLiteral 0x157827700 <col:25> 'int' 0
    |   |   `-CXXDependentScopeMemberExpr 0x157827860 <col:37, col:53> '<dependent type>' contains-errors lvalue .offset_sign
    |   |     `-ArraySubscriptExpr 0x157827840 <col:37, col:51> '<dependent type>' contains-errors lvalue
    |   |       |-ImplicitCastExpr 0x157827828 <col:37, col:41> '<dependent type>' contains-errors <LValueToRValue>
    |   |       | `-CXXDependentScopeMemberExpr 0x1578277c0 <col:37, col:41> '<dependent type>' contains-errors lvalue ->operands
    |   |       |   `-RecoveryExpr 0x1578277a0 <col:37> '<dependent type>' contains-errors lvalue
    |   |       `-IntegerLiteral 0x157827808 <col:50> 'int' 0
    |   |-IfStmt 0x157827bc8 <line:10:3, line:16:3>
    |   | |-ImplicitCastExpr 0x157827908 <line:10:7> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x1578278e8 <col:7> 'int' lvalue Var 0x15780e0a8 'offset' 'int'
    |   | `-CompoundStmt 0x157827bb0 <col:15, line:16:3>
    |   |   `-IfStmt 0x157827b80 <line:11:4, line:15:4> has_else
    |   |     |-BinaryOperator 0x157827a70 <line:11:8, col:37> 'int' contains-errors '||'
    |   |     | |-BinaryOperator 0x157827a10 <col:8, col:17> 'int' contains-errors '<'
    |   |     | | |-DeclRefExpr 0x157827920 <col:8> 'int' lvalue Var 0x15780e0a8 'offset' 'int'
    |   |     | | `-RecoveryExpr 0x1578279f0 <col:17> '<dependent type>' contains-errors lvalue
    |   |     | `-BinaryOperator 0x157827a50 <col:28, col:37> 'int' contains-errors '>'
    |   |     |   |-DeclRefExpr 0x157827978 <col:28> 'int' lvalue Var 0x15780e0a8 'offset' 'int'
    |   |     |   `-RecoveryExpr 0x157827a30 <col:37> '<dependent type>' contains-errors lvalue
    |   |     |-CompoundStmt 0x157827af0 <col:46, line:13:4>
    |   |     | `-BinaryOperator 0x157827ad0 <line:12:5, col:16> 'int' '='
    |   |     |   |-DeclRefExpr 0x157827a90 <col:5> 'int' lvalue Var 0x15780e160 'mod_byte' 'int'
    |   |     |   `-IntegerLiteral 0x157827ab0 <col:16> 'int' 2
    |   |     `-CompoundStmt 0x157827b68 <line:13:11, line:15:4>
    |   |       `-BinaryOperator 0x157827b48 <line:14:5, col:16> 'int' '='
    |   |         |-DeclRefExpr 0x157827b08 <col:5> 'int' lvalue Var 0x15780e160 'mod_byte' 'int'
    |   |         `-IntegerLiteral 0x157827b28 <col:16> 'int' 1
    |   |-BinaryOperator 0x157827f58 <line:17:3, col:66> '<dependent type>' contains-errors '='
    |   | |-ArraySubscriptExpr 0x157827c80 <col:3, col:11> '<dependent type>' contains-errors lvalue
    |   | | |-ImplicitCastExpr 0x157827c68 <col:3> '<dependent type>' contains-errors <LValueToRValue>
    |   | | | `-RecoveryExpr 0x157827c08 <col:3> '<dependent type>' contains-errors lvalue
    |   | | |   `-DeclRefExpr 0x157827be8 <col:3> 'int *' lvalue ParmVar 0x15780dda8 'data' 'int *'
    |   | | `-UnaryOperator 0x157827c50 <col:8, col:9> 'int' postfix '++'
    |   | |   `-DeclRefExpr 0x157827c30 <col:8> 'int' lvalue Var 0x15780dff0 'l' 'int'
    |   | `-BinaryOperator 0x157827f38 <col:15, col:66> '<dependent type>' contains-errors '|'
    |   |   |-BinaryOperator 0x157827db8 <col:15, col:40> 'int' '|'
    |   |   | |-ParenExpr 0x157827d18 <col:15, col:29> 'int'
    |   |   | | `-BinaryOperator 0x157827cf8 <col:16, col:28> 'int' '<<'
    |   |   | |   |-ImplicitCastExpr 0x157827ce0 <col:16> 'int' <LValueToRValue>
    |   |   | |   | `-DeclRefExpr 0x157827ca0 <col:16> 'int' lvalue Var 0x15780e160 'mod_byte' 'int'
    |   |   | |   `-IntegerLiteral 0x157827cc0 <col:28> 'int' 6
    |   |   | `-ParenExpr 0x157827d98 <col:33, col:40> 'int'
    |   |   |   `-BinaryOperator 0x157827d78 <col:34, col:39> 'int' '<<'
    |   |   |     |-IntegerLiteral 0x157827d38 <col:34> 'int' 7
    |   |   |     `-IntegerLiteral 0x157827d58 <col:39> 'int' 3
    |   |   `-ArraySubscriptExpr 0x157827f18 <col:44, col:66> '<dependent type>' contains-errors lvalue
    |   |     |-ImplicitCastExpr 0x157827f00 <col:44, col:60> '<dependent type>' contains-errors <LValueToRValue>
    |   |     | `-CXXDependentScopeMemberExpr 0x157827e98 <col:44, col:60> '<dependent type>' contains-errors lvalue .regs
    |   |     |   `-ArraySubscriptExpr 0x157827e78 <col:44, col:58> '<dependent type>' contains-errors lvalue
    |   |     |     |-ImplicitCastExpr 0x157827e60 <col:44, col:48> '<dependent type>' contains-errors <LValueToRValue>
    |   |     |     | `-CXXDependentScopeMemberExpr 0x157827df8 <col:44, col:48> '<dependent type>' contains-errors lvalue ->operands
    |   |     |     |   `-RecoveryExpr 0x157827dd8 <col:44> '<dependent type>' contains-errors lvalue
    |   |     |     `-IntegerLiteral 0x157827e40 <col:57> 'int' 0
    |   |     `-IntegerLiteral 0x157827ee0 <col:65> 'int' 0
    |   `-IfStmt 0x157828f98 <line:18:3, line:25:3>
    |     |-ImplicitCastExpr 0x157827f98 <line:18:7> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x157827f78 <col:7> 'int' lvalue Var 0x15780e160 'mod_byte' 'int'
    |     `-CompoundStmt 0x157828f78 <col:17, line:25:3>
    |       |-BinaryOperator 0x157828088 <line:19:4, col:16> '<dependent type>' contains-errors '='
    |       | |-ArraySubscriptExpr 0x157828048 <col:4, col:12> '<dependent type>' contains-errors lvalue
    |       | | |-ImplicitCastExpr 0x157828030 <col:4> '<dependent type>' contains-errors <LValueToRValue>
    |       | | | `-RecoveryExpr 0x157827fd0 <col:4> '<dependent type>' contains-errors lvalue
    |       | | |   `-DeclRefExpr 0x157827fb0 <col:4> 'int *' lvalue ParmVar 0x15780dda8 'data' 'int *'
    |       | | `-UnaryOperator 0x157828018 <col:9, col:10> 'int' postfix '++'
    |       | |   `-DeclRefExpr 0x157827ff8 <col:9> 'int' lvalue Var 0x15780dff0 'l' 'int'
    |       | `-DeclRefExpr 0x157828068 <col:16> 'int' lvalue Var 0x15780e0a8 'offset' 'int'
    |       `-IfStmt 0x157828f58 <line:20:4, line:24:4>
    |         |-BinaryOperator 0x157828100 <line:20:8, col:20> 'int' '=='
    |         | |-ImplicitCastExpr 0x1578280e8 <col:8> 'int' <LValueToRValue>
    |         | | `-DeclRefExpr 0x1578280a8 <col:8> 'int' lvalue Var 0x15780e160 'mod_byte' 'int'
    |         | `-IntegerLiteral 0x1578280c8 <col:20> 'int' 2
    |         `-CompoundStmt 0x157828f30 <col:23, line:24:4>
    |           |-BinaryOperator 0x157828250 <line:21:5, col:27> '<dependent type>' contains-errors '='
    |           | |-ArraySubscriptExpr 0x1578281b8 <col:5, col:13> '<dependent type>' contains-errors lvalue
    |           | | |-ImplicitCastExpr 0x1578281a0 <col:5> '<dependent type>' contains-errors <LValueToRValue>
    |           | | | `-RecoveryExpr 0x157828140 <col:5> '<dependent type>' contains-errors lvalue
    |           | | |   `-DeclRefExpr 0x157828120 <col:5> 'int *' lvalue ParmVar 0x15780dda8 'data' 'int *'
    |           | | `-UnaryOperator 0x157828188 <col:10, col:11> 'int' postfix '++'
    |           | |   `-DeclRefExpr 0x157828168 <col:10> 'int' lvalue Var 0x15780dff0 'l' 'int'
    |           | `-BinaryOperator 0x157828230 <col:17, col:27> 'int' '>>'
    |           |   |-ImplicitCastExpr 0x157828218 <col:17> 'int' <LValueToRValue>
    |           |   | `-DeclRefExpr 0x1578281d8 <col:17> 'int' lvalue Var 0x15780e0a8 'offset' 'int'
    |           |   `-IntegerLiteral 0x1578281f8 <col:27> 'int' 8
    |           |-BinaryOperator 0x1578283a0 <line:22:5, col:27> '<dependent type>' contains-errors '='
    |           | |-ArraySubscriptExpr 0x157828308 <col:5, col:13> '<dependent type>' contains-errors lvalue
    |           | | |-ImplicitCastExpr 0x1578282f0 <col:5> '<dependent type>' contains-errors <LValueToRValue>
    |           | | | `-RecoveryExpr 0x157828290 <col:5> '<dependent type>' contains-errors lvalue
    |           | | |   `-DeclRefExpr 0x157828270 <col:5> 'int *' lvalue ParmVar 0x15780dda8 'data' 'int *'
    |           | | `-UnaryOperator 0x1578282d8 <col:10, col:11> 'int' postfix '++'
    |           | |   `-DeclRefExpr 0x1578282b8 <col:10> 'int' lvalue Var 0x15780dff0 'l' 'int'
    |           | `-BinaryOperator 0x157828380 <col:17, col:27> 'int' '>>'
    |           |   |-ImplicitCastExpr 0x157828368 <col:17> 'int' <LValueToRValue>
    |           |   | `-DeclRefExpr 0x157828328 <col:17> 'int' lvalue Var 0x15780e0a8 'offset' 'int'
    |           |   `-IntegerLiteral 0x157828348 <col:27> 'int' 16
    |           `-BinaryOperator 0x157828f10 <line:23:5, col:27> '<dependent type>' contains-errors '='
    |             |-ArraySubscriptExpr 0x157828e78 <col:5, col:13> '<dependent type>' contains-errors lvalue
    |             | |-ImplicitCastExpr 0x157828e60 <col:5> '<dependent type>' contains-errors <LValueToRValue>
    |             | | `-RecoveryExpr 0x157828e00 <col:5> '<dependent type>' contains-errors lvalue
    |             | |   `-DeclRefExpr 0x1578283c0 <col:5> 'int *' lvalue ParmVar 0x15780dda8 'data' 'int *'
    |             | `-UnaryOperator 0x157828e48 <col:10, col:11> 'int' postfix '++'
    |             |   `-DeclRefExpr 0x157828e28 <col:10> 'int' lvalue Var 0x15780dff0 'l' 'int'
    |             `-BinaryOperator 0x157828ef0 <col:17, col:27> 'int' '>>'
    |               |-ImplicitCastExpr 0x157828ed8 <col:17> 'int' <LValueToRValue>
    |               | `-DeclRefExpr 0x157828e98 <col:17> 'int' lvalue Var 0x15780e0a8 'offset' 'int'
    |               `-IntegerLiteral 0x157828eb8 <col:27> 'int' 24
    `-ReturnStmt 0x157829050 <line:27:2, col:9>
      `-ImplicitCastExpr 0x157829038 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x157829018 <col:9> 'int' lvalue Var 0x15780dff0 'l' 'int'
