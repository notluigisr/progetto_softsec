`-FunctionDecl 0x13800e038  line:1:14 invalid ResizeOutputTensors 'int (int *, int *, const int *, const int *, const int *)'
  |-ParmVarDecl 0x13800dd28 <col:34, col:49> col:49 referenced invalid context 'int *'
  |-ParmVarDecl 0x13800dda8 <col:58, col:70> col:70 invalid node 'int *'
  |-ParmVarDecl 0x13800de28 <line:2:34, col:54> col:54 invalid input 'const int *'
  |-ParmVarDecl 0x13800dea8 <line:3:34, col:54> col:54 invalid size_splits 'const int *'
  |-ParmVarDecl 0x13800df28 <line:4:34, col:54> col:54 invalid axis 'const int *'
  `-CompoundStmt 0x1401237b8 <col:60, line:61:1>
    |-DeclStmt 0x13800e1a0 <line:5:3, col:47>
    | `-VarDecl 0x13800e120 <col:3, col:7> col:7 used axis_value 'int'
    |-IfStmt 0x138027e70 <line:6:3, line:8:3>
    | |-BinaryOperator 0x13800e210 <line:6:7, col:20> 'int' '<'
    | | |-ImplicitCastExpr 0x13800e1f8 <col:7> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x13800e1b8 <col:7> 'int' lvalue Var 0x13800e120 'axis_value' 'int'
    | | `-IntegerLiteral 0x13800e1d8 <col:20> 'int' 0
    | `-CompoundStmt 0x138027e58 <col:23, line:8:3>
    |   `-CompoundAssignOperator 0x138027e28 <line:7:5, col:38> 'int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |     |-DeclRefExpr 0x13800e230 <col:5> 'int' lvalue Var 0x13800e120 'axis_value' 'int'
    |     `-CallExpr 0x138027e00 <col:19, col:38> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x13800e3b0 <col:19> 'int ()' Function 0x13800e2f8 'NumDimensions' 'int ()'
    |       `-RecoveryExpr 0x13800e3d0 <col:33> '<dependent type>' contains-errors lvalue
    |-RecoveryExpr 0x138027ec0 <line:10:3> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x138028358 <line:11:3, line:18:3> has_else
    | |-BinaryOperator 0x138027fa0 <line:11:7, col:28> 'int' contains-errors '=='
    | | |-CXXDependentScopeMemberExpr 0x138027f00 <col:7, col:20> '<dependent type>' contains-errors lvalue ->type
    | | | `-RecoveryExpr 0x138027ee0 <col:7> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x138027f80 <col:28> '<dependent type>' contains-errors lvalue
    | |-CompoundStmt 0x138028048 <col:42, line:13:3>
    | `-IfStmt 0x138028328 <col:10, line:18:3> has_else
    |   |-BinaryOperator 0x138028118 <line:13:14, col:35> 'int' contains-errors '=='
    |   | |-CXXDependentScopeMemberExpr 0x138028078 <col:14, col:27> '<dependent type>' contains-errors lvalue ->type
    |   | | `-RecoveryExpr 0x138028058 <col:14> '<dependent type>' contains-errors lvalue
    |   | `-RecoveryExpr 0x1380280f8 <col:35> '<dependent type>' contains-errors lvalue
    |   |-CompoundStmt 0x1380281c0 <col:49, line:15:3>
    |   `-CompoundStmt 0x138028310 <col:10, line:18:3>
    |     `-CallExpr 0x1380282e0 <line:16:5, col:40> '<dependent type>' contains-errors
    |       |-CXXDependentScopeMemberExpr 0x138028218 <col:5, col:14> '<dependent type>' contains-errors lvalue ->ReportError
    |       | `-RecoveryExpr 0x1380281f0 <col:5> '<dependent type>' contains-errors lvalue
    |       |   `-DeclRefExpr 0x1380281d0 <col:5> 'int *' lvalue ParmVar 0x13800dd28 'context' 'int *'
    |       |-RecoveryExpr 0x138028260 <col:26> '<dependent type>' contains-errors lvalue
    |       `-StringLiteral 0x1380282c0 <col:35> 'char[4]' lvalue "STR"
    |-DeclStmt 0x138028440 <line:20:3, col:27>
    | `-VarDecl 0x1380283a0 <col:3, col:26> col:7 used minus_one_index 'int' cinit
    |   `-UnaryOperator 0x138028428 <col:25, col:26> 'int' prefix '-'
    |     `-IntegerLiteral 0x138028408 <col:26> 'int' 1
    |-DeclStmt 0x138028ac8 <line:36:3, col:60>
    | `-VarDecl 0x1380288f0 <col:3, col:59> col:13 used input_size 'const int' cinit
    |   `-CallExpr 0x138028a98 <col:26, col:59> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x138028a38 <col:26> 'int ()' Function 0x138028980 'SizeOfDimension' 'int ()'
    |     |-RecoveryExpr 0x138028a58 <col:42> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x138028a78 <col:49> 'int' lvalue Var 0x13800e120 'axis_value' 'int'
    |-IfStmt 0x140122ef0 <line:38:3, line:50:3> has_else
    | |-BinaryOperator 0x138028b50 <line:38:7, col:27> 'int' '!='
    | | |-ImplicitCastExpr 0x138028b38 <col:7> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x138028ae0 <col:7> 'int' lvalue Var 0x1380283a0 'minus_one_index' 'int'
    | | `-UnaryOperator 0x138028b20 <col:26, col:27> 'int' prefix '-'
    | |   `-IntegerLiteral 0x138028b00 <col:27> 'int' 1
    | |-CompoundStmt 0x138028d48 <col:30, line:46:3>
    | | `-IfStmt 0x138028d18 <line:39:5, line:45:5> has_else
    | |   |-RecoveryExpr 0x138028b90 <line:39:9, col:27> '_Bool' contains-errors
    | |   |-CompoundStmt 0x138028cb0 <col:39, line:43:5>
    | |   | `-CallExpr 0x138028c80 <line:40:7, line:42:16> '<dependent type>' contains-errors
    | |   |   |-CXXDependentScopeMemberExpr 0x138028bf8 <line:40:7, col:16> '<dependent type>' contains-errors lvalue ->ReportError
    | |   |   | `-RecoveryExpr 0x138028bd0 <col:7> '<dependent type>' contains-errors lvalue
    | |   |   |   `-DeclRefExpr 0x138028bb0 <col:7> 'int *' lvalue ParmVar 0x13800dd28 'context' 'int *'
    | |   |   |-RecoveryExpr 0x138028c40 <line:41:11> '<dependent type>' contains-errors lvalue
    | |   |   `-StringLiteral 0x138028c60 <line:42:11> 'char[4]' lvalue "STR"
    | |   `-CompoundStmt 0x138028d08 <line:43:12, line:45:5>
    | `-IfStmt 0x140122ed0 <line:46:10, line:50:3>
    |   |-RecoveryExpr 0x138028d80 <line:46:14, col:33> '_Bool' contains-errors
    |   `-CompoundStmt 0x140122eb8 <col:45, line:50:3>
    |     `-CallExpr 0x140122e88 <line:47:5, line:49:14> '<dependent type>' contains-errors
    |       |-CXXDependentScopeMemberExpr 0x140122e00 <line:47:5, col:14> '<dependent type>' contains-errors lvalue ->ReportError
    |       | `-RecoveryExpr 0x138028dc0 <col:5> '<dependent type>' contains-errors lvalue
    |       |   `-DeclRefExpr 0x138028da0 <col:5> 'int *' lvalue ParmVar 0x13800dd28 'context' 'int *'
    |       |-RecoveryExpr 0x140122e48 <line:48:9> '<dependent type>' contains-errors lvalue
    |       `-StringLiteral 0x140122e68 <line:49:9> 'char[4]' lvalue "STR"
    `-ForStmt 0x140123780 <line:52:3, line:58:3>
      |-DeclStmt 0x140122fc0 <line:52:8, col:17>
      | `-VarDecl 0x140122f38 <col:8, col:16> col:12 used i 'int' cinit
      |   `-IntegerLiteral 0x140122fa0 <col:16> 'int' 0
      |-<<<NULL>>>
      |-BinaryOperator 0x140123140 <col:19, col:38> 'int' contains-errors '<'
      | |-DeclRefExpr 0x140122fd8 <col:19> 'int' lvalue Var 0x140122f38 'i' 'int'
      | `-CallExpr 0x140123118 <col:23, col:38> '<dependent type>' contains-errors
      |   |-DeclRefExpr 0x1401230d8 <col:23> 'int ()' Function 0x140123020 'NumOutputs' 'int ()'
      |   `-RecoveryExpr 0x1401230f8 <col:34> '<dependent type>' contains-errors lvalue
      |-UnaryOperator 0x140123180 <col:41, col:43> 'int' prefix '++'
      | `-DeclRefExpr 0x140123160 <col:43> 'int' lvalue Var 0x140122f38 'i' 'int'
      `-CompoundStmt 0x140123770 <col:46, line:58:3>
