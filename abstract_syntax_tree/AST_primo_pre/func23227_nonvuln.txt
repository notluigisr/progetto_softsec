`-FunctionDecl 0x12e928288  line:1:7 invalid problem_data_get_content_or_NULL 'char *(int *, const char *)'
  |-ParmVarDecl 0x12e928128 <col:40, col:56> col:56 invalid problem_data 'int *'
  |-ParmVarDecl 0x12e9281a8 <col:70, col:82> col:82 used key 'const char *'
  `-CompoundStmt 0x12e941c98 <line:2:1, line:7:1>
    |-DeclStmt 0x12e928718 <line:3:5, col:81>
    | |-RecordDecl 0x12e928340 <col:5, col:12> col:12 struct problem_item
    | `-VarDecl 0x12e9284a8 <col:5, col:80> col:26 used item 'struct problem_item *' cinit
    |   `-CallExpr 0x12e9286d0 <col:33, col:80> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x12e928670 <col:33> 'int ()' Function 0x12e9285b8 'problem_data_get_item_or_NULL' 'int ()'
    |     |-RecoveryExpr 0x12e928690 <col:63> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x12e9286b0 <col:77> 'const char *' lvalue ParmVar 0x12e9281a8 'key' 'const char *'
    |-IfStmt 0x12e9287c8 <line:4:5, line:5:16>
    | |-UnaryOperator 0x12e928768 <line:4:9, col:10> 'int' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x12e928750 <col:10> 'struct problem_item *' contains-errors <LValueToRValue>
    | |   `-DeclRefExpr 0x12e928730 <col:10> 'struct problem_item *' contains-errors lvalue Var 0x12e9284a8 'item' 'struct problem_item *'
    | `-ReturnStmt 0x12e9287b8 <line:5:9, col:16>
    |   `-RecoveryExpr 0x12e928798 <col:16> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x12e941c88 <line:6:5, col:18>
      `-RecoveryExpr 0x12e941c60 <col:12, col:18> '<dependent type>' contains-errors lvalue
        `-DeclRefExpr 0x12e941800 <col:12> 'struct problem_item *' contains-errors lvalue Var 0x12e9284a8 'item' 'struct problem_item *'
