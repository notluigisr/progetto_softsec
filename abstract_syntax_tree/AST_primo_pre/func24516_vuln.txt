`-FunctionDecl 0x14980df58  line:1:1 open_log_file 'int (const char *, const char *, const char *, const char *)'
  |-ParmVarDecl 0x14980dcd8 <col:15, col:27> col:27 used name 'const char *'
  |-ParmVarDecl 0x14980dd58 <col:33, col:45> col:45 used prog 'const char *'
  |-ParmVarDecl 0x14980ddd8 <col:51, col:63> col:63 used namespace 'const char *'
  |-ParmVarDecl 0x14980de58 <col:74, col:86> col:86 used instance 'const char *'
  `-CompoundStmt 0x14a808448 <line:2:1, line:23:1>
    |-DeclStmt 0x14980e0e8 <line:3:2, col:17>
    | `-VarDecl 0x14980e080 <col:2, col:8> col:8 used file_name 'char *'
    |-IfStmt 0x14980e338 <line:5:2, line:8:2>
    | |-RecoveryExpr 0x14980e130 <line:5:6> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x14980e320 <col:16, line:8:2>
    |   `-CallExpr 0x14980e2e0 <line:6:3, col:18> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x14980e260 <col:3> 'int ()' Function 0x14980e1a8 'fclose' 'int ()'
    |     `-RecoveryExpr 0x14980e2c0 <col:10> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14980e3b8 <line:10:2, line:11:3>
    | |-UnaryOperator 0x14980e390 <line:10:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x14980e378 <col:7> 'const char *' <LValueToRValue>
    | |   `-DeclRefExpr 0x14980e358 <col:7> 'const char *' lvalue ParmVar 0x14980dcd8 'name' 'const char *'
    | `-ReturnStmt 0x14980e3a8 <line:11:3>
    |-BinaryOperator 0x149827ea0 <line:13:2, col:60> 'char *' '='
    | |-DeclRefExpr 0x14980e3d8 <col:2> 'char *' lvalue Var 0x14980e080 'file_name' 'char *'
    | `-ImplicitCastExpr 0x149827a68 <col:14, col:60> 'char *' <IntegralToPointer>
    |   `-CallExpr 0x1498279c8 <col:14, col:60> 'int'
    |     |-ImplicitCastExpr 0x1498279b0 <col:14> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x1498278e0 <col:14> 'int ()' Function 0x149827828 'make_file_name' 'int ()'
    |     |-ImplicitCastExpr 0x149827a08 <col:29> 'const char *' <LValueToRValue>
    |     | `-DeclRefExpr 0x149827900 <col:29> 'const char *' lvalue ParmVar 0x14980dcd8 'name' 'const char *'
    |     |-ImplicitCastExpr 0x149827a20 <col:35> 'const char *' <LValueToRValue>
    |     | `-DeclRefExpr 0x149827920 <col:35> 'const char *' lvalue ParmVar 0x14980dd58 'prog' 'const char *'
    |     |-ImplicitCastExpr 0x149827a38 <col:41> 'const char *' <LValueToRValue>
    |     | `-DeclRefExpr 0x149827940 <col:41> 'const char *' lvalue ParmVar 0x14980ddd8 'namespace' 'const char *'
    |     `-ImplicitCastExpr 0x149827a50 <col:52> 'const char *' <LValueToRValue>
    |       `-DeclRefExpr 0x149827960 <col:52> 'const char *' lvalue ParmVar 0x14980de58 'instance' 'const char *'
    |-IfStmt 0x14a8082b0 <line:16:2, line:20:2>
    | |-RecoveryExpr 0x1498280d0 <line:16:6> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x14a808288 <col:16, line:20:2>
    |   |-DeclStmt 0x1498282f8 <line:17:3, col:27>
    |   | `-VarDecl 0x149828108 <col:3, col:26> col:7 used n 'int' cinit
    |   |   `-CallExpr 0x1498282d0 <col:11, col:26> '<dependent type>' contains-errors
    |   |     |-DeclRefExpr 0x149828250 <col:11> 'int ()' Function 0x149828198 'fileno' 'int ()'
    |   |     `-RecoveryExpr 0x1498282b0 <col:18> '<dependent type>' contains-errors lvalue
    |   |-CallExpr 0x1498285f0 <line:18:3, col:51> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x1498283f0 <col:3> 'int ()' Function 0x149828338 'fcntl' 'int ()'
    |   | |-DeclRefExpr 0x149828410 <col:9> 'int' contains-errors lvalue Var 0x149828108 'n' 'int'
    |   | |-RecoveryExpr 0x149828540 <col:12> '<dependent type>' contains-errors lvalue
    |   | `-BinaryOperator 0x1498285d0 <col:21, col:50> '<dependent type>' contains-errors '|'
    |   |   |-RecoveryExpr 0x149828560 <col:21> '<dependent type>' contains-errors lvalue
    |   |   `-CallExpr 0x1498285a0 <col:34, col:50> '<dependent type>' contains-errors
    |   |     |-DeclRefExpr 0x149828460 <col:34> 'int ()' Function 0x149828338 'fcntl' 'int ()'
    |   |     |-DeclRefExpr 0x149828480 <col:40> 'int' contains-errors lvalue Var 0x149828108 'n' 'int'
    |   |     `-RecoveryExpr 0x149828580 <col:43> '<dependent type>' contains-errors lvalue
    |   `-CallExpr 0x14a808250 <line:19:3, col:51> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x149828628 <col:3> 'int ()' Function 0x149828338 'fcntl' 'int ()'
    |     |-DeclRefExpr 0x149828648 <col:9> 'int' contains-errors lvalue Var 0x149828108 'n' 'int'
    |     |-RecoveryExpr 0x149828778 <col:12> '<dependent type>' contains-errors lvalue
    |     `-BinaryOperator 0x14a808230 <col:21, col:50> '<dependent type>' contains-errors '|'
    |       |-RecoveryExpr 0x149828798 <col:21> '<dependent type>' contains-errors lvalue
    |       `-CallExpr 0x14a808200 <col:34, col:50> '<dependent type>' contains-errors
    |         |-DeclRefExpr 0x149828698 <col:34> 'int ()' Function 0x149828338 'fcntl' 'int ()'
    |         |-DeclRefExpr 0x1498286b8 <col:40> 'int' contains-errors lvalue Var 0x149828108 'n' 'int'
    |         `-RecoveryExpr 0x1498287b8 <col:43> '<dependent type>' contains-errors lvalue
    `-CallExpr 0x14a808408 <line:22:2, col:16> 'int'
      |-ImplicitCastExpr 0x14a8083f0 <col:2> 'int (*)()' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x14a8083b0 <col:2> 'int ()' Function 0x14a8082f8 'FREE' 'int ()'
      `-ImplicitCastExpr 0x14a808430 <col:7> 'char *' <LValueToRValue>
        `-DeclRefExpr 0x14a8083d0 <col:7> 'char *' lvalue Var 0x14980e080 'file_name' 'char *'
