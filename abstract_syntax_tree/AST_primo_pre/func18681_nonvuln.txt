`-FunctionDecl 0x1201282e8  line:1:5 invalid gdImageGetTrueColorPixel 'int (int, int, int)'
  |-ParmVarDecl 0x1201280f0 <col:31, col:42> col:42 invalid im 'int'
  |-ParmVarDecl 0x120128170 <col:46, col:50> col:50 used x 'int'
  |-ParmVarDecl 0x1201281f0 <col:53, col:57> col:57 used y 'int'
  `-CompoundStmt 0x120142028 <line:2:1, line:10:1>
    |-DeclStmt 0x120128638 <line:3:2, col:35>
    | `-VarDecl 0x1201283c0 <col:2, col:34> col:6 used p 'int' cinit
    |   `-CallExpr 0x120128600 <col:10, col:34> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x120128580 <col:10> 'int ()' Function 0x1201284c8 'gdImageGetPixel' 'int ()'
    |     |-RecoveryExpr 0x1201285a0 <col:26> '<dependent type>' contains-errors lvalue
    |     |-DeclRefExpr 0x1201285c0 <col:30> 'int' lvalue ParmVar 0x120128170 'x' 'int'
    |     `-DeclRefExpr 0x1201285e0 <col:33> 'int' lvalue ParmVar 0x1201281f0 'y' 'int'
    `-IfStmt 0x120141ff8 <line:5:2, line:9:2> has_else
      |-UnaryOperator 0x1201286d0 <line:5:6, col:11> '<dependent type>' contains-errors prefix '!' cannot overflow
      | `-ImplicitCastExpr 0x1201286b8 <col:7, col:11> '<dependent type>' contains-errors <LValueToRValue>
      |   `-CXXDependentScopeMemberExpr 0x120128670 <col:7, col:11> '<dependent type>' contains-errors lvalue ->trueColor
      |     `-RecoveryExpr 0x120128650 <col:7> '<dependent type>' contains-errors lvalue
      |-CompoundStmt 0x120141f80 <col:23, line:7:2>
      | `-ReturnStmt 0x120141f70 <line:6:3, col:124>
      |   `-CallExpr 0x120141f30 <col:10, col:124> '<dependent type>' contains-errors
      |     |-DeclRefExpr 0x1201287c8 <col:10> 'int ()' Function 0x120128710 'gdTrueColorAlpha' 'int ()'
      |     |-ArraySubscriptExpr 0x120141dd0 <col:27, col:36> '<dependent type>' contains-errors lvalue
      |     | |-ImplicitCastExpr 0x120141da0 <col:27, col:31> '<dependent type>' contains-errors <LValueToRValue>
      |     | | `-CXXDependentScopeMemberExpr 0x120141820 <col:27, col:31> '<dependent type>' contains-errors lvalue ->red
      |     | |   `-RecoveryExpr 0x120141800 <col:27> '<dependent type>' contains-errors lvalue
      |     | `-ImplicitCastExpr 0x120141db8 <col:35> 'int' contains-errors <LValueToRValue>
      |     |   `-DeclRefExpr 0x120141868 <col:35> 'int' contains-errors lvalue Var 0x1201283c0 'p' 'int'
      |     |-ArraySubscriptExpr 0x120141e20 <col:39, col:50> '<dependent type>' contains-errors lvalue
      |     | |-ImplicitCastExpr 0x120141df0 <col:39, col:43> '<dependent type>' contains-errors <LValueToRValue>
      |     | | `-CXXDependentScopeMemberExpr 0x1201418f8 <col:39, col:43> '<dependent type>' contains-errors lvalue ->green
      |     | |   `-RecoveryExpr 0x1201418d8 <col:39> '<dependent type>' contains-errors lvalue
      |     | `-ImplicitCastExpr 0x120141e08 <col:49> 'int' contains-errors <LValueToRValue>
      |     |   `-DeclRefExpr 0x120141940 <col:49> 'int' contains-errors lvalue Var 0x1201283c0 'p' 'int'
      |     |-ArraySubscriptExpr 0x120141e70 <col:53, col:63> '<dependent type>' contains-errors lvalue
      |     | |-ImplicitCastExpr 0x120141e40 <col:53, col:57> '<dependent type>' contains-errors <LValueToRValue>
      |     | | `-CXXDependentScopeMemberExpr 0x1201419d0 <col:53, col:57> '<dependent type>' contains-errors lvalue ->blue
      |     | |   `-RecoveryExpr 0x1201419b0 <col:53> '<dependent type>' contains-errors lvalue
      |     | `-ImplicitCastExpr 0x120141e58 <col:62> 'int' contains-errors <LValueToRValue>
      |     |   `-DeclRefExpr 0x120141a18 <col:62> 'int' contains-errors lvalue Var 0x1201283c0 'p' 'int'
      |     `-ConditionalOperator 0x120141f00 <col:66, col:123> '<dependent type>' contains-errors
      |       |-ParenExpr 0x120141b30 <col:66, col:87> 'int' contains-errors
      |       | `-BinaryOperator 0x120141b10 <col:67, col:86> 'int' contains-errors '=='
      |       |   |-CXXDependentScopeMemberExpr 0x120141aa8 <col:67, col:71> '<dependent type>' contains-errors lvalue ->transparent
      |       |   | `-RecoveryExpr 0x120141a88 <col:67> '<dependent type>' contains-errors lvalue
      |       |   `-DeclRefExpr 0x120141af0 <col:86> 'int' contains-errors lvalue Var 0x1201283c0 'p' 'int'
      |       |-RecoveryExpr 0x120141e90 <col:91> '<dependent type>' contains-errors lvalue
      |       `-ArraySubscriptExpr 0x120141ee0 <col:112, col:123> '<dependent type>' contains-errors lvalue
      |         |-ImplicitCastExpr 0x120141eb0 <col:112, col:116> '<dependent type>' contains-errors <LValueToRValue>
      |         | `-CXXDependentScopeMemberExpr 0x120141b88 <col:112, col:116> '<dependent type>' contains-errors lvalue ->alpha
      |         |   `-RecoveryExpr 0x120141b68 <col:112> '<dependent type>' contains-errors lvalue
      |         `-ImplicitCastExpr 0x120141ec8 <col:122> 'int' contains-errors <LValueToRValue>
      |           `-DeclRefExpr 0x120141bd0 <col:122> 'int' contains-errors lvalue Var 0x1201283c0 'p' 'int'
      `-CompoundStmt 0x120141fe0 <line:7:9, line:9:2>
        `-ReturnStmt 0x120141fd0 <line:8:3, col:10>
          `-ImplicitCastExpr 0x120141fb8 <col:10> 'int' contains-errors <LValueToRValue>
            `-DeclRefExpr 0x120141f98 <col:10> 'int' contains-errors lvalue Var 0x1201283c0 'p' 'int'
