`-FunctionDecl 0x15200df18  line:1:12 invalid opsgdt 'int (int *, int *, const int *)' static
  |-ParmVarDecl 0x15200dd28 <col:19, col:25> col:25 invalid a 'int *'
  |-ParmVarDecl 0x15200dda8 <col:28, col:33> col:33 referenced invalid data 'int *'
  |-ParmVarDecl 0x15200de28 <col:39, col:53> col:53 invalid op 'const int *'
  `-CompoundStmt 0x152027a00 <col:57, line:17:1>
    |-DeclStmt 0x15200e078 <line:2:2, col:11>
    | `-VarDecl 0x15200dff0 <col:2, col:10> col:6 used l 'int' cinit
    |   `-IntegerLiteral 0x15200e058 <col:10> 'int' 0
    |-SwitchStmt 0x15200e110 <line:3:2, line:15:2>
    | |-ImplicitCastExpr 0x15200e0f8 <line:3:10, col:14> '<dependent type>' contains-errors <LValueToRValue>
    | | `-CXXDependentScopeMemberExpr 0x15200e0b0 <col:10, col:14> '<dependent type>' contains-errors lvalue ->operands_count
    | |   `-RecoveryExpr 0x15200e090 <col:10> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x152027990 <col:30, line:15:2>
    |   |-CaseStmt 0x15200e158 <line:4:2, line:11:3>
    |   | |-IntegerLiteral 0x15200e138 <line:4:7> 'int' 1
    |   | `-IfStmt 0x1520278f0 <line:5:3, line:11:3> has_else
    |   |   |-BinaryOperator 0x15200e3e0 <line:5:8, col:31> '<dependent type>' contains-errors '&'
    |   |   | |-CXXDependentScopeMemberExpr 0x15200e378 <col:8, col:24> '<dependent type>' contains-errors lvalue .type
    |   |   | | `-ArraySubscriptExpr 0x15200e358 <col:8, col:22> '<dependent type>' contains-errors lvalue
    |   |   | |   |-ImplicitCastExpr 0x15200e340 <col:8, col:12> '<dependent type>' contains-errors <LValueToRValue>
    |   |   | |   | `-CXXDependentScopeMemberExpr 0x15200e1a0 <col:8, col:12> '<dependent type>' contains-errors lvalue ->operands
    |   |   | |   |   `-RecoveryExpr 0x15200e180 <col:8> '<dependent type>' contains-errors lvalue
    |   |   | |   `-IntegerLiteral 0x15200e1e8 <col:21> 'int' 0
    |   |   | `-RecoveryExpr 0x15200e3c0 <col:31> '<dependent type>' contains-errors lvalue
    |   |   |-CompoundStmt 0x152027868 <col:43, line:9:3>
    |   |   | |-BinaryOperator 0x1520274d8 <line:6:4, col:16> '<dependent type>' contains-errors '='
    |   |   | | |-ArraySubscriptExpr 0x152027498 <col:4, col:12> '<dependent type>' contains-errors lvalue
    |   |   | | | |-ImplicitCastExpr 0x152027480 <col:4> '<dependent type>' contains-errors <LValueToRValue>
    |   |   | | | | `-RecoveryExpr 0x152027420 <col:4> '<dependent type>' contains-errors lvalue
    |   |   | | | |   `-DeclRefExpr 0x152027400 <col:4> 'int *' lvalue ParmVar 0x15200dda8 'data' 'int *'
    |   |   | | | `-UnaryOperator 0x152027468 <col:9, col:10> 'int' postfix '++'
    |   |   | | |   `-DeclRefExpr 0x152027448 <col:9> 'int' lvalue Var 0x15200dff0 'l' 'int'
    |   |   | | `-IntegerLiteral 0x1520274b8 <col:16> 'int' 15
    |   |   | |-BinaryOperator 0x1520275d0 <line:7:4, col:16> '<dependent type>' contains-errors '='
    |   |   | | |-ArraySubscriptExpr 0x152027590 <col:4, col:12> '<dependent type>' contains-errors lvalue
    |   |   | | | |-ImplicitCastExpr 0x152027578 <col:4> '<dependent type>' contains-errors <LValueToRValue>
    |   |   | | | | `-RecoveryExpr 0x152027518 <col:4> '<dependent type>' contains-errors lvalue
    |   |   | | | |   `-DeclRefExpr 0x1520274f8 <col:4> 'int *' lvalue ParmVar 0x15200dda8 'data' 'int *'
    |   |   | | | `-UnaryOperator 0x152027560 <col:9, col:10> 'int' postfix '++'
    |   |   | | |   `-DeclRefExpr 0x152027540 <col:9> 'int' lvalue Var 0x15200dff0 'l' 'int'
    |   |   | | `-IntegerLiteral 0x1520275b0 <col:16> 'int' 1
    |   |   | `-BinaryOperator 0x152027848 <line:8:4, col:45> '<dependent type>' contains-errors '='
    |   |   |   |-ArraySubscriptExpr 0x152027688 <col:4, col:12> '<dependent type>' contains-errors lvalue
    |   |   |   | |-ImplicitCastExpr 0x152027670 <col:4> '<dependent type>' contains-errors <LValueToRValue>
    |   |   |   | | `-RecoveryExpr 0x152027610 <col:4> '<dependent type>' contains-errors lvalue
    |   |   |   | |   `-DeclRefExpr 0x1520275f0 <col:4> 'int *' lvalue ParmVar 0x15200dda8 'data' 'int *'
    |   |   |   | `-UnaryOperator 0x152027658 <col:9, col:10> 'int' postfix '++'
    |   |   |   |   `-DeclRefExpr 0x152027638 <col:9> 'int' lvalue Var 0x15200dff0 'l' 'int'
    |   |   |   `-BinaryOperator 0x152027828 <col:16, col:45> '<dependent type>' contains-errors '|'
    |   |   |     |-IntegerLiteral 0x1520276a8 <col:16> 'int' 0
    |   |   |     `-ArraySubscriptExpr 0x152027808 <col:23, col:45> '<dependent type>' contains-errors lvalue
    |   |   |       |-ImplicitCastExpr 0x1520277f0 <col:23, col:39> '<dependent type>' contains-errors <LValueToRValue>
    |   |   |       | `-CXXDependentScopeMemberExpr 0x152027788 <col:23, col:39> '<dependent type>' contains-errors lvalue .regs
    |   |   |       |   `-ArraySubscriptExpr 0x152027768 <col:23, col:37> '<dependent type>' contains-errors lvalue
    |   |   |       |     |-ImplicitCastExpr 0x152027750 <col:23, col:27> '<dependent type>' contains-errors <LValueToRValue>
    |   |   |       |     | `-CXXDependentScopeMemberExpr 0x1520276e8 <col:23, col:27> '<dependent type>' contains-errors lvalue ->operands
    |   |   |       |     |   `-RecoveryExpr 0x1520276c8 <col:23> '<dependent type>' contains-errors lvalue
    |   |   |       |     `-IntegerLiteral 0x152027730 <col:36> 'int' 0
    |   |   |       `-IntegerLiteral 0x1520277d0 <col:44> 'int' 0
    |   |   `-CompoundStmt 0x1520278d8 <line:9:10, line:11:3>
    |   |     `-ReturnStmt 0x1520278c8 <line:10:4, col:12>
    |   |       `-UnaryOperator 0x1520278b0 <col:11, col:12> 'int' prefix '-'
    |   |         `-IntegerLiteral 0x152027890 <col:12> 'int' 1
    |   |-BreakStmt 0x152027920 <line:12:3>
    |   `-DefaultStmt 0x152027970 <line:13:2, line:14:11>
    |     `-ReturnStmt 0x152027960 <col:3, col:11>
    |       `-UnaryOperator 0x152027948 <col:10, col:11> 'int' prefix '-'
    |         `-IntegerLiteral 0x152027928 <col:11> 'int' 1
    `-ReturnStmt 0x1520279f0 <line:16:2, col:9>
      `-ImplicitCastExpr 0x1520279d8 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x1520279b8 <col:9> 'int' lvalue Var 0x15200dff0 'l' 'int'
