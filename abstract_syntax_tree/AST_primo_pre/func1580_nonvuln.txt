`-FunctionDecl 0x127928198  line:1:5 CL_GetPingQueueCount 'int (void)'
  `-CompoundStmt 0x1279418b8 <line:2:1, line:17:1>
    |-DeclStmt 0x127928308 <line:3:2, col:8>
    | `-VarDecl 0x1279282a0 <col:2, col:7> col:7 used i 'int'
    |-DeclStmt 0x1279283a0 <line:4:2, col:12>
    | `-VarDecl 0x127928338 <col:2, col:7> col:7 used count 'int'
    |-BinaryOperator 0x127928428 <line:7:2, col:12> 'int' '='
    | |-DeclRefExpr 0x1279283e8 <col:2> 'int' lvalue Var 0x127928338 'count' 'int'
    | `-IntegerLiteral 0x127928408 <col:12> 'int' 0
    |-ForStmt 0x127941818 <line:10:2, line:14:2>
    | |-BinaryOperator 0x1279284a0 <line:10:7, col:9> 'int' '='
    | | |-DeclRefExpr 0x127928460 <col:7> 'int' lvalue Var 0x1279282a0 'i' 'int'
    | | `-IntegerLiteral 0x127928480 <col:9> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x127928538 <col:12, col:14> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x1279284c0 <col:12> 'int' lvalue Var 0x1279282a0 'i' 'int'
    | | `-RecoveryExpr 0x127928518 <col:14> '<dependent type>' contains-errors lvalue
    | |-BinaryOperator 0x127928618 <col:32, col:44> '<dependent type>' contains-errors ','
    | | |-UnaryOperator 0x127928578 <col:32, col:33> 'int' postfix '++'
    | | | `-DeclRefExpr 0x127928558 <col:32> 'int' lvalue Var 0x1279282a0 'i' 'int'
    | | `-UnaryOperator 0x127928600 <col:37, col:44> '<dependent type>' contains-errors postfix '++' cannot overflow
    | |   `-RecoveryExpr 0x1279285e0 <col:37> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x127941800 <col:49, line:14:2>
    |   `-IfStmt 0x1279287e0 <line:11:3, line:13:3>
    |     |-CXXDependentScopeMemberExpr 0x127928748 <line:11:7, col:20> '<dependent type>' contains-errors lvalue .port
    |     | `-CXXDependentScopeMemberExpr 0x127928700 <col:7, col:16> '<dependent type>' contains-errors lvalue ->adr
    |     |   `-RecoveryExpr 0x1279286e0 <col:7> '<dependent type>' contains-errors lvalue
    |     `-CompoundStmt 0x1279287c8 <col:26, line:13:3>
    |       `-UnaryOperator 0x1279287b0 <line:12:4, col:9> 'int' postfix '++'
    |         `-DeclRefExpr 0x127928790 <col:4> 'int' lvalue Var 0x127928338 'count' 'int'
    `-ReturnStmt 0x1279418a8 <line:16:2, col:15>
      `-ImplicitCastExpr 0x127941890 <col:9, col:15> 'int' <LValueToRValue>
        `-ParenExpr 0x127941870 <col:9, col:15> 'int' lvalue
          `-DeclRefExpr 0x127941850 <col:10> 'int' lvalue Var 0x127928338 'count' 'int'
