`-FunctionDecl 0x1201281a8  line:1:1 PHP_FUNCTION 'int (int)'
  |-ParmVarDecl 0x1201280d8 <col:14> col:14 readlink 'int'
  `-CompoundStmt 0x105009098 <line:2:1, line:26:1>
    |-DeclStmt 0x120128320 <line:3:2, col:12>
    | `-VarDecl 0x1201282b8 <col:2, col:8> col:8 used link 'char *'
    |-DeclStmt 0x1201283b8 <line:4:2, col:14>
    | `-VarDecl 0x120128350 <col:2, col:6> col:6 link_len 'int'
    |-DeclStmt 0x120128478 <line:5:2, col:23>
    | `-VarDecl 0x120128410 <col:2, col:7> col:7 referenced invalid buff 'char'
    |-DeclStmt 0x120128510 <line:6:2, col:9>
    | `-VarDecl 0x1201284a8 <col:2, col:6> col:6 used ret 'int'
    |-IfStmt 0x105008828 <line:8:2, line:10:2>
    | |-RecoveryExpr 0x1201287e0 <line:8:6, col:83> '_Bool' contains-errors
    | `-CompoundStmt 0x105008810 <col:92, line:10:2>
    |   `-ReturnStmt 0x105008800 <line:9:3>
    |-IfStmt 0x105008998 <line:12:2, line:14:2>
    | |-RecoveryExpr 0x105008968 <line:12:6, col:43> '_Bool' contains-errors
    | `-CompoundStmt 0x105008988 <col:46, line:14:2>
    |-BinaryOperator 0x105008c40 <line:16:2, col:49> 'int' contains-errors '='
    | |-DeclRefExpr 0x1050089b8 <col:2> 'int' lvalue Var 0x1201284a8 'ret' 'int'
    | `-CallExpr 0x105008c08 <col:8, col:49> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x105008ab8 <col:8> 'int ()' Function 0x105008a00 'php_sys_readlink' 'int ()'
    |   |-DeclRefExpr 0x105008ad8 <col:25> 'char *' lvalue Var 0x1201282b8 'link' 'char *'
    |   |-RecoveryExpr 0x105008af8 <col:31> '<dependent type>' contains-errors lvalue
    |   `-BinaryOperator 0x105008be8 <col:37, col:48> '<dependent type>' contains-errors '-'
    |     |-RecoveryExpr 0x105008bc8 <col:37> '<dependent type>' contains-errors lvalue
    |     `-IntegerLiteral 0x105008b30 <col:48> 'int' 1
    |-IfStmt 0x105008e18 <line:18:2, line:21:2>
    | |-BinaryOperator 0x105008cd0 <line:18:6, col:14> 'int' '=='
    | | |-ImplicitCastExpr 0x105008cb8 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x105008c60 <col:6> 'int' lvalue Var 0x1201284a8 'ret' 'int'
    | | `-UnaryOperator 0x105008ca0 <col:13, col:14> 'int' prefix '-'
    | |   `-IntegerLiteral 0x105008c80 <col:14> 'int' 1
    | `-CompoundStmt 0x105008e08 <col:17, line:21:2>
    |-BinaryOperator 0x105008f08 <line:23:2, col:14> '<dependent type>' contains-errors '='
    | |-ArraySubscriptExpr 0x105008ed0 <col:2, col:10> '<dependent type>' contains-errors lvalue
    | | |-ImplicitCastExpr 0x105008ea0 <col:2> '<dependent type>' contains-errors <LValueToRValue>
    | | | `-RecoveryExpr 0x105008e58 <col:2> '<dependent type>' contains-errors lvalue
    | | |   `-DeclRefExpr 0x105008e38 <col:2> 'char' lvalue Var 0x120128410 'buff' 'char'
    | | `-ImplicitCastExpr 0x105008eb8 <col:7> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x105008e80 <col:7> 'int' lvalue Var 0x1201284a8 'ret' 'int'
    | `-CharacterLiteral 0x105008ef0 <col:14> 'int' 0
    `-CallExpr 0x105009068 <line:25:2, col:23> '<dependent type>' contains-errors
      |-DeclRefExpr 0x105009008 <col:2> 'int ()' Function 0x105008f50 'RETURN_STRING' 'int ()'
      |-RecoveryExpr 0x105009028 <col:16> '<dependent type>' contains-errors lvalue
      `-IntegerLiteral 0x105009048 <col:22> 'int' 1
