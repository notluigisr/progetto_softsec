`-FunctionDecl 0x12e928350  line:1:13 invalid first_valueStepFunc 'void (int *, int, int **)' static
  |-ParmVarDecl 0x12e928128 <line:2:3, col:20> col:20 invalid pCtx 'int *'
  |-ParmVarDecl 0x12e9281a8 <line:3:3, col:7> col:7 used nArg 'int'
  |-ParmVarDecl 0x12e928260 <line:4:3, col:19> col:19 invalid apArg 'int **'
  `-CompoundStmt 0x12e9423d0 <line:5:2, line:16:1>
    |-DeclStmt 0x12e9285f8 <line:6:3, col:24>
    | |-RecordDecl 0x12e928410 <col:3, col:10> col:10 struct NthValueCtx
    | `-VarDecl 0x12e928578 <col:3, col:23> col:23 used p 'struct NthValueCtx *'
    |-IfStmt 0x12e9421a0 <line:8:3, line:13:3>
    | |-BinaryOperator 0x12e941d30 <line:8:7, col:23> 'int' contains-errors '&&'
    | | |-DeclRefExpr 0x12e941c70 <col:7> 'struct NthValueCtx *' lvalue Var 0x12e928578 'p' 'struct NthValueCtx *'
    | | `-BinaryOperator 0x12e941d10 <col:12, col:23> 'int' contains-errors '=='
    | |   |-RecoveryExpr 0x12e941cc8 <col:12, col:15> '<dependent type>' contains-errors lvalue
    | |   | `-DeclRefExpr 0x12e941c90 <col:12> 'struct NthValueCtx *' lvalue Var 0x12e928578 'p' 'struct NthValueCtx *'
    | |   `-IntegerLiteral 0x12e941cf0 <col:23> 'int' 0
    | `-CompoundStmt 0x12e942180 <col:26, line:13:3>
    |   |-BinaryOperator 0x12e941f50 <line:9:5, col:43> '<dependent type>' contains-errors '='
    |   | |-RecoveryExpr 0x12e941d88 <col:5, col:8> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x12e941d50 <col:5> 'struct NthValueCtx *' lvalue Var 0x12e928578 'p' 'struct NthValueCtx *'
    |   | `-CallExpr 0x12e941f28 <col:17, col:43> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x12e941e90 <col:17> 'int ()' Function 0x12e941dd8 'sqlite3_value_dup' 'int ()'
    |   |   `-ArraySubscriptExpr 0x12e941f08 <col:35, col:42> '<dependent type>' contains-errors lvalue
    |   |     |-ImplicitCastExpr 0x12e941ef0 <col:35> '<dependent type>' contains-errors <LValueToRValue>
    |   |     | `-RecoveryExpr 0x12e941eb0 <col:35> '<dependent type>' contains-errors lvalue
    |   |     `-IntegerLiteral 0x12e941ed0 <col:41> 'int' 0
    |   `-IfStmt 0x12e942160 <line:10:5, line:12:5>
    |     |-UnaryOperator 0x12e941fe8 <line:10:9, col:13> '<dependent type>' contains-errors prefix '!' cannot overflow
    |     | `-ImplicitCastExpr 0x12e941fd0 <col:10, col:13> '<dependent type>' contains-errors <LValueToRValue>
    |     |   `-RecoveryExpr 0x12e941fa8 <col:10, col:13> '<dependent type>' contains-errors lvalue
    |     |     `-DeclRefExpr 0x12e941f70 <col:10> 'struct NthValueCtx *' lvalue Var 0x12e928578 'p' 'struct NthValueCtx *'
    |     `-CompoundStmt 0x12e942148 <col:21, line:12:5>
    |       `-CallExpr 0x12e942120 <line:11:7, col:38> '<dependent type>' contains-errors
    |         |-DeclRefExpr 0x12e9420e0 <col:7> 'int ()' Function 0x12e942028 'sqlite3_result_error_nomem' 'int ()'
    |         `-RecoveryExpr 0x12e942100 <col:34> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x12e942328 <line:14:3, col:24> 'int'
    | |-ImplicitCastExpr 0x12e942310 <col:3> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x12e9422a0 <col:3> 'int ()' Function 0x12e9421e8 'UNUSED_PARAMETER' 'int ()'
    | `-ImplicitCastExpr 0x12e942350 <col:20> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x12e9422c0 <col:20> 'int' lvalue ParmVar 0x12e9281a8 'nArg' 'int'
    `-CallExpr 0x12e9423a8 <line:15:3, col:25> '<dependent type>' contains-errors
      |-DeclRefExpr 0x12e942368 <col:3> 'int ()' Function 0x12e9421e8 'UNUSED_PARAMETER' 'int ()'
      `-RecoveryExpr 0x12e942388 <col:20> '<dependent type>' contains-errors lvalue
