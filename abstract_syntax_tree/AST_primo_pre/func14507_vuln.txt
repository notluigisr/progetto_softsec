`-FunctionDecl 0x12800de80  line:1:6 invalid sqlite3Fts5UnicodeAscii 'void (int *, int *)'
  |-ParmVarDecl 0x12800dd28 <col:30, col:34> col:34 invalid aArray 'int *'
  |-ParmVarDecl 0x12800dda8 <col:42, col:46> col:46 referenced invalid aAscii 'int *'
  `-CompoundStmt 0x128028048 <col:53, line:12:1>
    |-DeclStmt 0x12800dfd8 <line:2:3, col:12>
    | `-VarDecl 0x12800df50 <col:3, col:11> col:7 used i 'int' cinit
    |   `-IntegerLiteral 0x12800dfb8 <col:11> 'int' 0
    |-DeclStmt 0x12800e090 <line:3:3, col:15>
    | `-VarDecl 0x12800e008 <col:3, col:14> col:7 used iTbl 'int' cinit
    |   `-IntegerLiteral 0x12800e070 <col:14> 'int' 0
    `-WhileStmt 0x128028028 <line:4:3, line:11:3>
      |-BinaryOperator 0x12800e100 <line:4:10, col:12> 'int' '<'
      | |-ImplicitCastExpr 0x12800e0e8 <col:10> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x12800e0a8 <col:10> 'int' lvalue Var 0x12800df50 'i' 'int'
      | `-IntegerLiteral 0x12800e0c8 <col:12> 'int' 128
      `-CompoundStmt 0x128027ff8 <col:17, line:11:3>
        |-DeclStmt 0x12800e218 <line:5:5, col:57>
        | `-VarDecl 0x12800e138 <col:5, col:9> col:9 bToken 'int'
        |-DeclStmt 0x12800e328 <line:6:5, col:46>
        | `-VarDecl 0x12800e248 <col:5, col:9> col:9 used n 'int'
        |-ForStmt 0x128027f88 <line:7:5, line:9:5>
        | |-<<<NULL>>>
        | |-<<<NULL>>>
        | |-BinaryOperator 0x128027e50 <line:7:11, col:22> 'int' '&&'
        | | |-BinaryOperator 0x12800e398 <col:11, col:13> 'int' '<'
        | | | |-ImplicitCastExpr 0x12800e380 <col:11> 'int' <LValueToRValue>
        | | | | `-DeclRefExpr 0x12800e340 <col:11> 'int' lvalue Var 0x12800df50 'i' 'int'
        | | | `-IntegerLiteral 0x12800e360 <col:13> 'int' 128
        | | `-BinaryOperator 0x128027e30 <col:20, col:22> 'int' '<'
        | |   |-ImplicitCastExpr 0x128027e00 <col:20> 'int' <LValueToRValue>
        | |   | `-DeclRefExpr 0x12800e3b8 <col:20> 'int' lvalue Var 0x12800df50 'i' 'int'
        | |   `-ImplicitCastExpr 0x128027e18 <col:22> 'int' <LValueToRValue>
        | |     `-DeclRefExpr 0x12800e3d8 <col:22> 'int' lvalue Var 0x12800e248 'n' 'int'
        | |-UnaryOperator 0x128027e90 <col:25, col:26> 'int' postfix '++'
        | | `-DeclRefExpr 0x128027e70 <col:25> 'int' lvalue Var 0x12800df50 'i' 'int'
        | `-CompoundStmt 0x128027f78 <col:29, line:9:5>
        `-UnaryOperator 0x128027fe0 <line:10:5, col:9> 'int' postfix '++'
          `-DeclRefExpr 0x128027fc0 <col:5> 'int' lvalue Var 0x12800e008 'iTbl' 'int'
