`-FunctionDecl 0x141941a68  line:1:5 invalid sctp_do_peeloff 'int (struct sock *, int, struct socket **)'
  |-ParmVarDecl 0x141928648 <col:21, col:34> col:34 used sk 'struct sock *'
  |-ParmVarDecl 0x1419286e0 <col:38, col:51> col:51 invalid id 'int'
  |-ParmVarDecl 0x141941928 <col:55, col:71> col:71 used sockp 'struct socket **'
  `-CompoundStmt 0x14200dd50 <line:2:1, line:31:1>
    |-DeclStmt 0x141941f08 <line:3:2, col:55>
    | |-RecordDecl 0x141941b28 <col:2, col:9> col:9 struct sctp_association
    | `-VarDecl 0x141941c98 <col:2, col:54> col:27 used asoc 'struct sctp_association *' cinit
    |   `-CallExpr 0x141941ec0 <col:34, col:54> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x141941e60 <col:34> 'int ()' Function 0x141941da8 'sctp_id2assoc' 'int ()'
    |     |-DeclRefExpr 0x141941e80 <col:48> 'struct sock *' lvalue ParmVar 0x141928648 'sk' 'struct sock *'
    |     `-RecoveryExpr 0x141941ea0 <col:52> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x1419422c8 <line:4:2, col:36>
    | |-RecordDecl 0x141941f20 <col:2, col:9> col:9 struct sctp_sock
    | `-VarDecl 0x141942088 <col:2, col:35> col:20 used sp 'struct sctp_sock *' cinit
    |   `-ImplicitCastExpr 0x141942298 <col:25, col:35> 'struct sctp_sock *' <IntegralToPointer>
    |     `-CallExpr 0x141942258 <col:25, col:35> 'int'
    |       |-ImplicitCastExpr 0x141942240 <col:25> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x1419421d0 <col:25> 'int ()' Function 0x141942118 'sctp_sk' 'int ()'
    |       `-ImplicitCastExpr 0x141942280 <col:33> 'struct sock *' <LValueToRValue>
    |         `-DeclRefExpr 0x1419421f0 <col:33> 'struct sock *' lvalue ParmVar 0x141928648 'sk' 'struct sock *'
    |-DeclStmt 0x1419423d0 <line:5:2, col:21>
    | `-VarDecl 0x141942368 <col:2, col:17> col:17 used sock 'struct socket *'
    |-DeclStmt 0x141942488 <line:6:2, col:13>
    | `-VarDecl 0x141942400 <col:2, col:12> col:6 used err 'int' cinit
    |   `-IntegerLiteral 0x141942468 <col:12> 'int' 0
    |-IfStmt 0x141942598 <line:8:2, line:9:11>
    | |-UnaryOperator 0x1419424d8 <line:8:6, col:7> 'int' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x1419424c0 <col:7> 'struct sctp_association *' contains-errors <LValueToRValue>
    | |   `-DeclRefExpr 0x1419424a0 <col:7> 'struct sctp_association *' contains-errors lvalue Var 0x141941c98 'asoc' 'struct sctp_association *'
    | `-ReturnStmt 0x141942588 <line:9:3, col:11>
    |   `-UnaryOperator 0x141942570 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x141942558 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x141942538 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14200d260 <line:12:2, line:13:11>
    | |-UnaryOperator 0x141942788 <line:12:6, col:25> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-CallExpr 0x141942758 <col:7, col:25> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x141942698 <col:7> 'int ()' Function 0x1419425e0 'sctp_style' 'int ()'
    | |   |-DeclRefExpr 0x1419426b8 <col:18> 'struct sock *' lvalue ParmVar 0x141928648 'sk' 'struct sock *'
    | |   `-RecoveryExpr 0x141942738 <col:22> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x14200d250 <line:13:3, col:11>
    |   `-UnaryOperator 0x14200d238 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x14200d220 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x14200d200 <col:11> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x14200d578 <line:16:2, col:70> 'int' contains-errors '='
    | |-DeclRefExpr 0x14200d280 <col:2> 'int' lvalue Var 0x141942400 'err' 'int'
    | `-CallExpr 0x14200d538 <col:8, col:70> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14200d380 <col:8> 'int ()' Function 0x14200d2c8 'sock_create' 'int ()'
    |   |-RecoveryExpr 0x14200d3d8 <col:20, col:24> '<dependent type>' contains-errors lvalue
    |   | `-DeclRefExpr 0x14200d3a0 <col:20> 'struct sock *' lvalue ParmVar 0x141928648 'sk' 'struct sock *'
    |   |-RecoveryExpr 0x14200d4f8 <col:35> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x14200d518 <col:51> '<dependent type>' contains-errors lvalue
    |   `-UnaryOperator 0x14200d480 <col:65, col:66> 'struct socket **' prefix '&' cannot overflow
    |     `-DeclRefExpr 0x14200d430 <col:66> 'struct socket *' lvalue Var 0x141942368 'sock' 'struct socket *'
    |-IfStmt 0x14200d658 <line:17:2, line:18:10>
    | |-BinaryOperator 0x14200d5f0 <line:17:6, col:12> 'int' '<'
    | | |-ImplicitCastExpr 0x14200d5d8 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x14200d598 <col:6> 'int' lvalue Var 0x141942400 'err' 'int'
    | | `-IntegerLiteral 0x14200d5b8 <col:12> 'int' 0
    | `-ReturnStmt 0x14200d648 <line:18:3, col:10>
    |   `-ImplicitCastExpr 0x14200d630 <col:10> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x14200d610 <col:10> 'int' lvalue Var 0x141942400 'err' 'int'
    |-CallExpr 0x14200d818 <line:20:2, col:35> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14200d758 <col:2> 'int ()' Function 0x14200d6a0 'sctp_copy_sock' 'int ()'
    | |-RecoveryExpr 0x14200d7b0 <col:17, col:23> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x14200d778 <col:17> 'struct socket *' lvalue Var 0x141942368 'sock' 'struct socket *'
    | |-DeclRefExpr 0x14200d7d8 <col:27> 'struct sock *' lvalue ParmVar 0x141928648 'sk' 'struct sock *'
    | `-DeclRefExpr 0x14200d7f8 <col:31> 'struct sctp_association *' contains-errors lvalue Var 0x141941c98 'asoc' 'struct sctp_association *'
    |-CallExpr 0x14200d9d8 <line:23:2, col:50> '<dependent type>' contains-errors
    | |-CXXDependentScopeMemberExpr 0x14200d8b0 <col:2, col:10> '<dependent type>' contains-errors lvalue ->to_sk_daddr
    | | `-RecoveryExpr 0x14200d888 <col:2, col:6> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x14200d850 <col:2> 'struct sctp_sock *' lvalue Var 0x141942088 'sp' 'struct sctp_sock *'
    | |-UnaryOperator 0x14200d9a0 <col:22, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-CXXDependentScopeMemberExpr 0x14200d958 <col:23, col:34> '<dependent type>' contains-errors lvalue .primary_addr
    | |   `-RecoveryExpr 0x14200d930 <col:23, col:29> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x14200d8f8 <col:23> 'struct sctp_association *' contains-errors lvalue Var 0x141941c98 'asoc' 'struct sctp_association *'
    | `-DeclRefExpr 0x14200d9b8 <col:48> 'struct sock *' lvalue ParmVar 0x141928648 'sk' 'struct sock *'
    |-CallExpr 0x14200dc20 <line:26:2, col:70> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14200dae8 <col:2> 'int ()' Function 0x14200da30 'sctp_sock_migrate' 'int ()'
    | |-DeclRefExpr 0x14200db08 <col:20> 'struct sock *' lvalue ParmVar 0x141928648 'sk' 'struct sock *'
    | |-RecoveryExpr 0x14200db60 <col:24, col:30> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x14200db28 <col:24> 'struct socket *' lvalue Var 0x141942368 'sock' 'struct socket *'
    | |-DeclRefExpr 0x14200db88 <col:34> 'struct sctp_association *' contains-errors lvalue Var 0x141941c98 'asoc' 'struct sctp_association *'
    | `-RecoveryExpr 0x14200dc00 <col:40> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x14200dce8 <line:28:2, col:11> 'struct socket *' '='
    | |-UnaryOperator 0x14200dc98 <col:2, col:3> 'struct socket *' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x14200dc80 <col:3> 'struct socket **' <LValueToRValue>
    | |   `-DeclRefExpr 0x14200dc60 <col:3> 'struct socket **' lvalue ParmVar 0x141941928 'sockp' 'struct socket **'
    | `-ImplicitCastExpr 0x14200dcd0 <col:11> 'struct socket *' <LValueToRValue>
    |   `-DeclRefExpr 0x14200dcb0 <col:11> 'struct socket *' lvalue Var 0x141942368 'sock' 'struct socket *'
    `-ReturnStmt 0x14200dd40 <line:30:2, col:9>
      `-ImplicitCastExpr 0x14200dd28 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x14200dd08 <col:9> 'int' lvalue Var 0x141942400 'err' 'int'
