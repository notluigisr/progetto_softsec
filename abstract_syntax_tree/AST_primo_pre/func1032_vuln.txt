`-FunctionDecl 0x14e80dda8  line:1:1 PHP_FUNCTION 'int (int)'
  |-ParmVarDecl 0x14e80dcd8 <col:14> col:14 imagesetstyle 'int'
  `-CompoundStmt 0x14f808258 <line:2:1, line:37:1>
    |-DeclStmt 0x14e80dfd0 <line:5:2, col:16>
    | `-VarDecl 0x14e80df68 <col:2, col:8> col:8 used stylearr 'int *'
    |-DeclStmt 0x14e80e068 <line:6:2, col:11>
    | `-VarDecl 0x14e80e000 <col:2, col:6> col:6 used index 'int'
    |-IfStmt 0x14e80e378 <line:9:2, line:11:2>
    | |-RecoveryExpr 0x14e80e330 <line:9:6, col:79> '_Bool' contains-errors
    | `-CompoundStmt 0x14e80e360 <col:89, line:11:2>
    |   `-ReturnStmt 0x14e80e350 <line:10:3>
    |-CallExpr 0x14e1228d0 <line:13:2, col:59> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14e1226b8 <col:2> 'int ()' Function 0x14e122600 'ZEND_FETCH_RESOURCE' 'int ()'
    | |-RecoveryExpr 0x14e122838 <col:22> '<dependent type>' contains-errors lvalue
    | |-RecoveryExpr 0x14e122858 <col:26> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x14e122898 <col:38, col:39> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-RecoveryExpr 0x14e122878 <col:39> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x14e122758 <col:43, col:44> 'int' prefix '-'
    | | `-IntegerLiteral 0x14e122738 <col:44> 'int' 1
    | |-StringLiteral 0x14e1227b0 <col:47> 'char[4]' lvalue "STR"
    | `-RecoveryExpr 0x14e1228b0 <col:54> '<dependent type>' contains-errors lvalue
    |-ForStmt 0x14e123360 <line:20:2, line:30:2>
    | |-BinaryOperator 0x14e122df8 <line:20:7, col:15> 'int' '='
    | | |-DeclRefExpr 0x14e122db8 <col:7> 'int' lvalue Var 0x14e80e000 'index' 'int'
    | | `-IntegerLiteral 0x14e122dd8 <col:15> 'int' 0
    | |-<<<NULL>>>
    | |-<<<NULL>>>
    | |-<<<NULL>>>
    | `-CompoundStmt 0x14e123348 <col:69, line:30:2>
    |   `-IfStmt 0x14e123098 <line:23:3, line:25:3>
    |     |-RecoveryExpr 0x14e123058 <line:23:7, col:80> '_Bool' contains-errors
    |     `-CompoundStmt 0x14e123080 <col:89, line:25:3>
    |       `-BreakStmt 0x14e123078 <line:24:4>
    `-CallExpr 0x14f808218 <line:34:2, col:16> 'int'
      |-ImplicitCastExpr 0x14f808200 <col:2> 'int (*)()' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x14e1235b8 <col:2> 'int ()' Function 0x14e123500 'efree' 'int ()'
      `-ImplicitCastExpr 0x14f808240 <col:8> 'int *' <LValueToRValue>
        `-DeclRefExpr 0x14e1235d8 <col:8> 'int *' lvalue Var 0x14e80df68 'stylearr' 'int *'
