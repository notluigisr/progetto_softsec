`-FunctionDecl 0x12a00e030  line:1:13 invalid dummy_wait 'void (int *, int *, unsigned int, unsigned int, unsigned int)' static
  |-ParmVarDecl 0x12a00dd28 <col:24, col:47> col:47 invalid params 'int *'
  |-ParmVarDecl 0x12a00dda8 <col:55, col:71> col:71 invalid plaintext 'int *'
  |-ParmVarDecl 0x12a00de28 <line:2:24, col:33> col:33 used pad_failed 'unsigned int'
  |-ParmVarDecl 0x12a00dea8 <col:45, col:58> col:58 used pad 'unsigned int'
  |-ParmVarDecl 0x12a00df28 <col:63, col:72> col:72 used total 'unsigned int'
  `-CompoundStmt 0x129923978 <line:3:1, line:26:1>
    `-IfStmt 0x129923958 <line:5:3, line:25:5>
      |-BinaryOperator 0x12a00e368 <line:5:7, col:61> 'int' contains-errors '=='
      | |-CallExpr 0x12a00e2e8 <col:7, col:56> '<dependent type>' contains-errors
      | | |-DeclRefExpr 0x12a00e260 <col:7> 'int ()' Function 0x12a00e1a8 '_gnutls_cipher_is_block' 'int ()'
      | | `-CXXDependentScopeMemberExpr 0x12a00e2a0 <col:32, col:40> '<dependent type>' contains-errors lvalue ->cipher_algorithm
      | |   `-RecoveryExpr 0x12a00e280 <col:32> '<dependent type>' contains-errors lvalue
      | `-RecoveryExpr 0x12a00e348 <col:61> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x129923938 <line:6:5, line:25:5>
        |-DeclStmt 0x129922c68 <line:7:7, col:19>
        | `-VarDecl 0x129922c00 <col:7, col:16> col:16 used len 'unsigned int'
        `-IfStmt 0x129923918 <line:10:7, line:24:9>
          |-BinaryOperator 0x129922da0 <line:10:11, col:36> 'int' '&&'
          | |-BinaryOperator 0x129922cf0 <col:11, col:25> 'int' '=='
          | | |-ImplicitCastExpr 0x129922cc0 <col:11> 'unsigned int' <LValueToRValue>
          | | | `-DeclRefExpr 0x129922c80 <col:11> 'unsigned int' lvalue ParmVar 0x12a00de28 'pad_failed' 'unsigned int'
          | | `-ImplicitCastExpr 0x129922cd8 <col:25> 'unsigned int' <IntegralCast>
          | |   `-IntegerLiteral 0x129922ca0 <col:25> 'int' 0
          | `-BinaryOperator 0x129922d80 <col:30, col:36> 'int' '>'
          |   |-ImplicitCastExpr 0x129922d50 <col:30> 'unsigned int' <LValueToRValue>
          |   | `-DeclRefExpr 0x129922d10 <col:30> 'unsigned int' lvalue ParmVar 0x12a00dea8 'pad' 'unsigned int'
          |   `-ImplicitCastExpr 0x129922d68 <col:36> 'unsigned int' <IntegralCast>
          |     `-IntegerLiteral 0x129922d30 <col:36> 'int' 0
          `-CompoundStmt 0x1299238f8 <line:11:9, line:24:9>
            |-BinaryOperator 0x129922f70 <line:12:11, col:65> 'unsigned int' contains-errors '='
            | |-DeclRefExpr 0x129922dc0 <col:11> 'unsigned int' lvalue Var 0x129922c00 'len' 'unsigned int'
            | `-CallExpr 0x129922f48 <col:17, col:65> '<dependent type>' contains-errors
            |   |-DeclRefExpr 0x129922ec0 <col:17> 'int ()' Function 0x129922e08 '_gnutls_get_hash_block_len' 'int ()'
            |   `-CXXDependentScopeMemberExpr 0x129922f00 <col:44, col:52> '<dependent type>' contains-errors lvalue ->mac_algorithm
            |     `-RecoveryExpr 0x129922ee0 <col:44> '<dependent type>' contains-errors lvalue
            `-IfStmt 0x1299238d8 <line:13:11, line:23:13>
              |-BinaryOperator 0x129923000 <line:13:15, col:21> 'int' '>'
              | |-ImplicitCastExpr 0x129922fd0 <col:15> 'unsigned int' <LValueToRValue>
              | | `-DeclRefExpr 0x129922f90 <col:15> 'unsigned int' lvalue Var 0x129922c00 'len' 'unsigned int'
              | `-ImplicitCastExpr 0x129922fe8 <col:21> 'unsigned int' <IntegralCast>
              |   `-IntegerLiteral 0x129922fb0 <col:21> 'int' 0
              `-CompoundStmt 0x1299238c0 <line:14:13, line:23:13>
                `-IfStmt 0x1299238a0 <line:16:8, line:22:17>
                  |-BinaryOperator 0x129923318 <line:16:12, col:60> 'int' '&&'
                  | |-BinaryOperator 0x1299231b8 <col:12, col:36> 'int' '>'
                  | | |-BinaryOperator 0x129923108 <col:12, col:26> 'unsigned int' '%'
                  | | | |-ParenExpr 0x1299230b0 <col:12, col:22> 'unsigned int'
                  | | | | `-BinaryOperator 0x129923090 <col:13, col:17> 'unsigned int' '+'
                  | | | |   |-ImplicitCastExpr 0x129923060 <col:13> 'unsigned int' <LValueToRValue>
                  | | | |   | `-DeclRefExpr 0x129923020 <col:13> 'unsigned int' lvalue ParmVar 0x12a00dea8 'pad' 'unsigned int'
                  | | | |   `-ImplicitCastExpr 0x129923078 <col:17> 'unsigned int' <LValueToRValue>
                  | | | |     `-DeclRefExpr 0x129923040 <col:17> 'unsigned int' lvalue ParmVar 0x12a00df28 'total' 'unsigned int'
                  | | | `-ImplicitCastExpr 0x1299230f0 <col:26> 'unsigned int' <LValueToRValue>
                  | | |   `-DeclRefExpr 0x1299230d0 <col:26> 'unsigned int' lvalue Var 0x129922c00 'len' 'unsigned int'
                  | | `-BinaryOperator 0x129923198 <col:32, col:36> 'unsigned int' '-'
                  | |   |-ImplicitCastExpr 0x129923168 <col:32> 'unsigned int' <LValueToRValue>
                  | |   | `-DeclRefExpr 0x129923128 <col:32> 'unsigned int' lvalue Var 0x129922c00 'len' 'unsigned int'
                  | |   `-ImplicitCastExpr 0x129923180 <col:36> 'unsigned int' <IntegralCast>
                  | |     `-IntegerLiteral 0x129923148 <col:36> 'int' 9
                  | `-BinaryOperator 0x1299232f8 <col:41, col:60> 'int' '<='
                  |   |-BinaryOperator 0x129923248 <col:41, col:49> 'unsigned int' '%'
                  |   | |-ImplicitCastExpr 0x129923218 <col:41> 'unsigned int' <LValueToRValue>
                  |   | | `-DeclRefExpr 0x1299231d8 <col:41> 'unsigned int' lvalue ParmVar 0x12a00df28 'total' 'unsigned int'
                  |   | `-ImplicitCastExpr 0x129923230 <col:49> 'unsigned int' <LValueToRValue>
                  |   |   `-DeclRefExpr 0x1299231f8 <col:49> 'unsigned int' lvalue Var 0x129922c00 'len' 'unsigned int'
                  |   `-BinaryOperator 0x1299232d8 <col:56, col:60> 'unsigned int' '-'
                  |     |-ImplicitCastExpr 0x1299232a8 <col:56> 'unsigned int' <LValueToRValue>
                  |     | `-DeclRefExpr 0x129923268 <col:56> 'unsigned int' lvalue Var 0x129922c00 'len' 'unsigned int'
                  |     `-ImplicitCastExpr 0x1299232c0 <col:60> 'unsigned int' <IntegralCast>
                  |       `-IntegerLiteral 0x129923288 <col:60> 'int' 9
                  `-CompoundStmt 0x129923888 <line:17:10, line:22:17>
                    `-IfStmt 0x129923858 <line:18:12, line:21:111> has_else
                      |-BinaryOperator 0x1299233c0 <line:18:16, col:33> 'int' contains-errors '<'
                      | |-DeclRefExpr 0x129923338 <col:16> 'unsigned int' lvalue Var 0x129922c00 'len' 'unsigned int'
                      | `-CXXDependentScopeMemberExpr 0x129923378 <col:22, col:33> '<dependent type>' contains-errors lvalue ->size
                      |   `-RecoveryExpr 0x129923358 <col:22> '<dependent type>' contains-errors lvalue
                      |-CallExpr 0x129923630 <line:19:21, col:99> '<dependent type>' contains-errors
                      | |-DeclRefExpr 0x1299234c0 <col:21> 'int ()' Function 0x129923408 '_gnutls_auth_cipher_add_auth' 'int ()'
                      | |-UnaryOperator 0x129923590 <col:51, col:65> '<dependent type>' contains-errors prefix '&' cannot overflow
                      | | `-CXXDependentScopeMemberExpr 0x129923548 <col:52, col:65> '<dependent type>' contains-errors lvalue .cipher_state
                      | |   `-CXXDependentScopeMemberExpr 0x129923500 <col:52, col:60> '<dependent type>' contains-errors lvalue ->read
                      | |     `-RecoveryExpr 0x1299234e0 <col:52> '<dependent type>' contains-errors lvalue
                      | |-CXXDependentScopeMemberExpr 0x1299235c8 <col:79, col:90> '<dependent type>' contains-errors lvalue ->data
                      | | `-RecoveryExpr 0x1299235a8 <col:79> '<dependent type>' contains-errors lvalue
                      | `-DeclRefExpr 0x129923610 <col:96> 'unsigned int' lvalue Var 0x129922c00 'len' 'unsigned int'
                      `-CallExpr 0x129923820 <line:21:21, col:111> '<dependent type>' contains-errors
                        |-DeclRefExpr 0x129923668 <col:21> 'int ()' Function 0x129923408 '_gnutls_auth_cipher_add_auth' 'int ()'
                        |-UnaryOperator 0x129923738 <col:51, col:65> '<dependent type>' contains-errors prefix '&' cannot overflow
                        | `-CXXDependentScopeMemberExpr 0x1299236f0 <col:52, col:65> '<dependent type>' contains-errors lvalue .cipher_state
                        |   `-CXXDependentScopeMemberExpr 0x1299236a8 <col:52, col:60> '<dependent type>' contains-errors lvalue ->read
                        |     `-RecoveryExpr 0x129923688 <col:52> '<dependent type>' contains-errors lvalue
                        |-CXXDependentScopeMemberExpr 0x129923770 <col:79, col:90> '<dependent type>' contains-errors lvalue ->data
                        | `-RecoveryExpr 0x129923750 <col:79> '<dependent type>' contains-errors lvalue
                        `-CXXDependentScopeMemberExpr 0x1299237d8 <col:96, col:107> '<dependent type>' contains-errors lvalue ->size
                          `-RecoveryExpr 0x1299237b8 <col:96> '<dependent type>' contains-errors lvalue
