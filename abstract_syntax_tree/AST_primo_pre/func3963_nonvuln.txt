`-FunctionDecl 0x14d00dee0  line:1:6 invalid ResolveAxis 'void (const int *, int, int)'
  |-ParmVarDecl 0x14d00dcd8 <col:18, col:29> col:29 used axis_data 'const int *'
  |-ParmVarDecl 0x14d00dd58 <col:40, col:44> col:44 used axis_count 'int'
  |-ParmVarDecl 0x14d00ddf0 <line:2:18, <invalid sloc>> col:24 invalid 'int'
  `-CompoundStmt 0x14c923a00 <col:49, line:10:1>
    |-DeclStmt 0x14d00e040 <line:3:3, col:12>
    | `-VarDecl 0x14d00dfb8 <col:3, col:11> col:7 used i 'int' cinit
    |   `-IntegerLiteral 0x14d00e020 <col:11> 'int' 0
    |-ForStmt 0x14d00e270 <line:4:3, line:6:3>
    | |-<<<NULL>>>
    | |-<<<NULL>>>
    | |-BinaryOperator 0x14d00e0c8 <line:4:10, col:14> 'int' '<'
    | | |-ImplicitCastExpr 0x14d00e098 <col:10> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x14d00e058 <col:10> 'int' lvalue Var 0x14d00dfb8 'i' 'int'
    | | `-ImplicitCastExpr 0x14d00e0b0 <col:14> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x14d00e078 <col:14> 'int' lvalue ParmVar 0x14d00dd58 'axis_count' 'int'
    | |-UnaryOperator 0x14d00e108 <col:26, col:28> 'int' prefix '++'
    | | `-DeclRefExpr 0x14d00e0e8 <col:28> 'int' lvalue Var 0x14d00dfb8 'i' 'int'
    | `-CompoundStmt 0x14d00e260 <col:31, line:6:3>
    `-ForStmt 0x14d00e3a8 <line:7:3, line:9:3>
      |-<<<NULL>>>
      |-<<<NULL>>>
      |-BinaryOperator 0x14d00e300 <line:7:10, col:14> 'int' '<'
      | |-ImplicitCastExpr 0x14d00e2e8 <col:10> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x14d00e2a8 <col:10> 'int' lvalue Var 0x14d00dfb8 'i' 'int'
      | `-IntegerLiteral 0x14d00e2c8 <col:14> 'int' 4
      |-UnaryOperator 0x14d00e340 <col:17, col:19> 'int' prefix '++'
      | `-DeclRefExpr 0x14d00e320 <col:19> 'int' lvalue Var 0x14d00dfb8 'i' 'int'
      `-CompoundStmt 0x14d00e398 <col:22, line:9:3>
