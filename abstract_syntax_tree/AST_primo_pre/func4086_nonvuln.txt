`-FunctionDecl 0x15680f1a8  line:1:12 selinux_tun_dev_open 'int (void *)' static
  |-ParmVarDecl 0x15680f0d8 <col:33, col:39> col:39 used security 'void *'
  `-CompoundStmt 0x156829c80 <line:2:1, line:20:1>
    |-DeclStmt 0x15680f4d8 <line:3:2, col:47>
    | |-RecordDecl 0x15680f2a0 <col:2, col:9> col:9 struct tun_security_struct
    | `-VarDecl 0x15680f408 <col:2, col:39> col:30 used tunsec 'struct tun_security_struct *' cinit
    |   `-ImplicitCastExpr 0x15680f4a8 <col:39> 'struct tun_security_struct *' <BitCast>
    |     `-ImplicitCastExpr 0x15680f490 <col:39> 'void *' <LValueToRValue>
    |       `-DeclRefExpr 0x15680f470 <col:39> 'void *' lvalue ParmVar 0x15680f0d8 'security' 'void *'
    |-DeclStmt 0x15680f588 <line:5:2, col:9>
    | `-VarDecl 0x15680f520 <col:2, col:6> col:6 used err 'int'
    |-BinaryOperator 0x156829778 <line:7:2, line:9:36> 'int' contains-errors '='
    | |-DeclRefExpr 0x15680f5a0 <line:7:2> 'int' lvalue Var 0x15680f520 'err' 'int'
    | `-CallExpr 0x156829728 <col:8, line:9:36> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x15680f6d0 <line:7:8> 'int ()' Function 0x15680f618 'avc_has_perm' 'int ()'
    |   |-UnaryOperator 0x156829690 <col:21, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-RecoveryExpr 0x156829670 <col:22> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x1568296a8 <line:8:7> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x156829590 <col:12, col:20> '<dependent type>' contains-errors lvalue
    |   | `-DeclRefExpr 0x15680f738 <col:12> 'struct tun_security_struct *' lvalue Var 0x15680f408 'tunsec' 'struct tun_security_struct *'
    |   |-RecoveryExpr 0x1568296c8 <col:25> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x1568296e8 <line:9:7> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x156829708 <col:32> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x156829818 <line:10:2, line:11:10>
    | |-ImplicitCastExpr 0x1568297b8 <line:10:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x156829798 <col:6> 'int' lvalue Var 0x15680f520 'err' 'int'
    | `-ReturnStmt 0x156829808 <line:11:3, col:10>
    |   `-ImplicitCastExpr 0x1568297f0 <col:10> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x1568297d0 <col:10> 'int' lvalue Var 0x15680f520 'err' 'int'
    |-BinaryOperator 0x156829ab8 <line:12:2, line:14:34> 'int' contains-errors '='
    | |-DeclRefExpr 0x156829838 <line:12:2> 'int' lvalue Var 0x15680f520 'err' 'int'
    | `-CallExpr 0x156829a68 <col:8, line:14:34> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x156829858 <line:12:8> 'int ()' Function 0x15680f618 'avc_has_perm' 'int ()'
    |   |-UnaryOperator 0x1568299b0 <col:21, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-RecoveryExpr 0x156829990 <col:22> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x1568299c8 <line:13:7> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x1568299e8 <col:12> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x156829a08 <col:17> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x156829a28 <line:14:7> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x156829a48 <col:30> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x156829b58 <line:15:2, line:16:10>
    | |-ImplicitCastExpr 0x156829af8 <line:15:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x156829ad8 <col:6> 'int' lvalue Var 0x15680f520 'err' 'int'
    | `-ReturnStmt 0x156829b48 <line:16:3, col:10>
    |   `-ImplicitCastExpr 0x156829b30 <col:10> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x156829b10 <col:10> 'int' lvalue Var 0x15680f520 'err' 'int'
    |-BinaryOperator 0x156829c30 <line:17:2, col:16> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x156829bb0 <col:2, col:10> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x156829b78 <col:2> 'struct tun_security_struct *' lvalue Var 0x15680f408 'tunsec' 'struct tun_security_struct *'
    | `-RecoveryExpr 0x156829c10 <col:16> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x156829c70 <line:19:2, col:9>
      `-IntegerLiteral 0x156829c50 <col:9> 'int' 0
