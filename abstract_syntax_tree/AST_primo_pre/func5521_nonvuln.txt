`-FunctionDecl 0x156928758  line:1:1 process_select 'int (struct parsed_tag *)'
  |-ParmVarDecl 0x156928648 <col:16, col:35> col:35 used tag 'struct parsed_tag *'
  `-CompoundStmt 0x156941738 <line:2:1, line:41:1>
    |-DeclStmt 0x156940ae8 <line:4:5, col:12>
    | `-VarDecl 0x156940a80 <col:5, col:11> col:11 used p 'char *'
    |-IfStmt 0x156940fd0 <line:6:5, line:9:5>
    | |-BinaryOperator 0x156940b78 <line:6:9, col:23> 'int' contains-errors '<'
    | | |-RecoveryExpr 0x156940b58 <col:9> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x156940b18 <col:23> 'int' 0
    | `-CompoundStmt 0x156940fb8 <col:26, line:9:5>
    |   `-DeclStmt 0x156940c98 <line:7:2, col:17>
    |     `-VarDecl 0x156940bb0 <col:2, col:12> col:8 used s 'char *' cinit
    |       `-ImplicitCastExpr 0x156940c80 <col:12> 'char *' <ArrayToPointerDecay>
    |         `-StringLiteral 0x156940c60 <col:12> 'char[4]' lvalue "STR"
    |-BinaryOperator 0x156941080 <line:11:5, col:9> 'char *' '='
    | |-DeclRefExpr 0x156940ff0 <col:5> 'char *' lvalue Var 0x156940a80 'p' 'char *'
    | `-ImplicitCastExpr 0x156941068 <col:9> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x156941050 <col:9> 'char[1]' lvalue ""
    `-CallExpr 0x156941268 <line:12:5, col:43> '<dependent type>' contains-errors
      |-DeclRefExpr 0x156941180 <col:5> 'int ()' Function 0x1569410c8 'parsedtag_get_value' 'int ()'
      |-DeclRefExpr 0x1569411a0 <col:25> 'struct parsed_tag *' lvalue ParmVar 0x156928648 'tag' 'struct parsed_tag *'
      |-RecoveryExpr 0x156941248 <col:30> '<dependent type>' contains-errors lvalue
      `-UnaryOperator 0x1569411f8 <col:41, col:42> 'char **' prefix '&' cannot overflow
        `-DeclRefExpr 0x1569411d8 <col:42> 'char *' lvalue Var 0x156940a80 'p' 'char *'
