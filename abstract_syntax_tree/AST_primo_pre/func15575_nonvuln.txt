`-FunctionDecl 0x12e80de80  line:1:13 invalid scsi_do_read 'void (int *, int)' static
  |-ParmVarDecl 0x12e80dd28 <col:26, col:39> col:39 referenced invalid r 'int *'
  |-ParmVarDecl 0x12e80dda8 <col:42, col:46> col:46 used ret 'int'
  `-CompoundStmt 0x12e82a100 <line:2:1, line:32:1>
    |-CallExpr 0x12e827e68 <line:6:5, col:33> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12e80e2f8 <col:5> 'int ()' Function 0x12e80e240 'assert' 'int ()'
    | `-BinaryOperator 0x12e827e48 <col:13, col:29> 'int' contains-errors '=='
    |   |-CXXDependentScopeMemberExpr 0x12e80e380 <col:13, col:20> '<dependent type>' contains-errors lvalue .aiocb
    |   | `-CXXDependentScopeMemberExpr 0x12e80e338 <col:13, col:16> '<dependent type>' contains-errors lvalue ->req
    |   |   `-RecoveryExpr 0x12e80e318 <col:13> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x12e827e28 <col:29> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12e8280f8 <line:7:5, line:9:5>
    | |-CallExpr 0x12e828040 <line:7:9, col:48> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x12e827f70 <col:9> 'int ()' Function 0x12e827eb8 'scsi_disk_req_check_error' 'int ()'
    | | |-RecoveryExpr 0x12e827f90 <col:35> '<dependent type>' contains-errors lvalue
    | | |-DeclRefExpr 0x12e827fb0 <col:38> 'int' lvalue ParmVar 0x12e80dda8 'ret' 'int'
    | | `-RecoveryExpr 0x12e828020 <col:43> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x12e8280e0 <col:51, line:9:5>
    |   `-GotoStmt 0x12e8280c8 <line:8:9, col:14> 'done' 0x12e828078
    |-CallExpr 0x12e828298 <line:12:5, col:25> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12e8281f8 <col:5> 'int ()' Function 0x12e828140 'scsi_req_ref' 'int ()'
    | `-UnaryOperator 0x12e828280 <col:18, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-CXXDependentScopeMemberExpr 0x12e828238 <col:19, col:22> '<dependent type>' contains-errors lvalue ->req
    |     `-RecoveryExpr 0x12e828218 <col:19> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12e829f08 <line:14:5, line:28:5> has_else
    | |-CXXDependentScopeMemberExpr 0x12e828328 <line:14:9, col:16> '<dependent type>' contains-errors lvalue .sg
    | | `-CXXDependentScopeMemberExpr 0x12e8282e0 <col:9, col:12> '<dependent type>' contains-errors lvalue ->req
    | |   `-RecoveryExpr 0x12e8282c0 <col:9> '<dependent type>' contains-errors lvalue
    | |-CompoundStmt 0x12e829888 <col:20, line:22:5>
    | | |-CallExpr 0x12e828800 <line:15:9, col:78> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x12e828450 <col:9> 'int ()' Function 0x12e828398 'dma_acct_start' 'int ()'
    | | | |-CXXDependentScopeMemberExpr 0x12e828798 <col:24, col:37> '<dependent type>' contains-errors lvalue .blk
    | | | | `-CXXDependentScopeMemberExpr 0x12e828750 <col:24, col:32> '<dependent type>' contains-errors lvalue .conf
    | | | |   `-CXXDependentScopeMemberExpr 0x12e828708 <col:24, col:27> '<dependent type>' contains-errors lvalue ->qdev
    | | | |     `-RecoveryExpr 0x12e8286e8 <col:24> '<dependent type>' contains-errors lvalue
    | | | |-UnaryOperator 0x12e8285c8 <col:42, col:46> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | | | `-CXXDependentScopeMemberExpr 0x12e828580 <col:43, col:46> '<dependent type>' contains-errors lvalue ->acct
    | | | |   `-RecoveryExpr 0x12e828560 <col:43> '<dependent type>' contains-errors lvalue
    | | | |-CXXDependentScopeMemberExpr 0x12e828648 <col:52, col:59> '<dependent type>' contains-errors lvalue .sg
    | | | | `-CXXDependentScopeMemberExpr 0x12e828600 <col:52, col:55> '<dependent type>' contains-errors lvalue ->req
    | | | |   `-RecoveryExpr 0x12e8285e0 <col:52> '<dependent type>' contains-errors lvalue
    | | | `-RecoveryExpr 0x12e8287e0 <col:63> '<dependent type>' contains-errors lvalue
    | | `-CompoundAssignOperator 0x12e828a10 <line:16:9, col:36> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | |   |-CXXDependentScopeMemberExpr 0x12e8288d0 <col:9, col:16> '<dependent type>' contains-errors lvalue .resid
    | |   | `-CXXDependentScopeMemberExpr 0x12e828888 <col:9, col:12> '<dependent type>' contains-errors lvalue ->req
    | |   |   `-RecoveryExpr 0x12e828860 <col:9> '<dependent type>' contains-errors lvalue
    | |   |     `-DeclRefExpr 0x12e828840 <col:9> 'int *' lvalue ParmVar 0x12e80dd28 'r' 'int *'
    | |   `-CXXDependentScopeMemberExpr 0x12e8289c8 <col:25, col:36> '<dependent type>' contains-errors lvalue ->size
    | |     `-CXXDependentScopeMemberExpr 0x12e828980 <col:25, col:32> '<dependent type>' contains-errors lvalue .sg
    | |       `-CXXDependentScopeMemberExpr 0x12e828938 <col:25, col:28> '<dependent type>' contains-errors lvalue ->req
    | |         `-RecoveryExpr 0x12e828918 <col:25> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x12e829ef8 <line:22:12, line:28:5>
    `-LabelStmt 0x12e82a0e0 <line:30:1, line:31:27> 'done'
      `-CallExpr 0x12e82a0b8 <col:5, col:27> '<dependent type>' contains-errors
        |-DeclRefExpr 0x12e82a018 <col:5> 'int ()' Function 0x12e829f60 'scsi_req_unref' 'int ()'
        `-UnaryOperator 0x12e82a0a0 <col:20, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow
          `-CXXDependentScopeMemberExpr 0x12e82a058 <col:21, col:24> '<dependent type>' contains-errors lvalue ->req
            `-RecoveryExpr 0x12e82a038 <col:21> '<dependent type>' contains-errors lvalue
