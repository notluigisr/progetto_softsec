`-FunctionDecl 0x138826e08  line:1:12 invalid inotify_update_existing_watch 'int (struct fsnotify_group *, struct inode *, int)' static
  |-ParmVarDecl 0x13880e848 <col:42, col:65> col:65 used group 'struct fsnotify_group *'
  |-ParmVarDecl 0x138826c28 <line:2:7, col:21> col:21 used inode 'struct inode *'
  |-ParmVarDecl 0x138826cc0 <line:3:7, col:11> col:11 invalid arg 'int'
  `-CompoundStmt 0x13882e3d0 <line:4:1, line:51:1>
    |-DeclStmt 0x1388270b8 <line:5:2, col:32>
    | |-RecordDecl 0x138826ec8 <col:2, col:9> col:9 struct fsnotify_mark
    | `-VarDecl 0x138827038 <col:2, col:24> col:24 used fsn_mark 'struct fsnotify_mark *'
    |-DeclStmt 0x1388272b8 <line:6:2, col:35>
    | |-RecordDecl 0x1388270d0 <col:2, col:9> col:9 struct inotify_inode_mark
    | `-VarDecl 0x138827238 <col:2, col:29> col:29 used i_mark 'struct inotify_inode_mark *'
    |-DeclStmt 0x1388273a8 <line:9:2, col:31>
    | `-VarDecl 0x1388272e8 <col:2, col:6> col:6 used add 'int'
    |-DeclStmt 0x138827498 <line:10:2, col:37>
    | `-VarDecl 0x1388273d8 <col:2, col:6> col:6 used create 'int'
    |-DeclStmt 0x138827530 <line:11:2, col:9>
    | `-VarDecl 0x1388274c8 <col:2, col:6> col:6 used ret 'int'
    |-BinaryOperator 0x1388278f0 <line:15:2, col:63> 'struct fsnotify_mark *' contains-errors '='
    | |-DeclRefExpr 0x138827708 <col:2> 'struct fsnotify_mark *' lvalue Var 0x138827038 'fsn_mark' 'struct fsnotify_mark *'
    | `-CallExpr 0x1388278c0 <col:13, col:63> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x138827808 <col:13> 'int ()' Function 0x138827750 'fsnotify_find_mark' 'int ()'
    |   |-UnaryOperator 0x138827888 <col:32, col:40> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-RecoveryExpr 0x138827860 <col:33, col:40> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x138827828 <col:33> 'struct inode *' lvalue ParmVar 0x138826c28 'inode' 'struct inode *'
    |   `-DeclRefExpr 0x1388278a0 <col:58> 'struct fsnotify_group *' lvalue ParmVar 0x13880e848 'group' 'struct fsnotify_group *'
    |-IfStmt 0x138827b08 <line:16:2, line:19:11> has_else
    | |-UnaryOperator 0x138827948 <line:16:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x138827930 <col:7> 'struct fsnotify_mark *' <LValueToRValue>
    | |   `-DeclRefExpr 0x138827910 <col:7> 'struct fsnotify_mark *' lvalue Var 0x138827038 'fsn_mark' 'struct fsnotify_mark *'
    | |-ReturnStmt 0x1388279f8 <line:17:3, col:11>
    | | `-UnaryOperator 0x1388279e0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    | |   `-ImplicitCastExpr 0x1388279c8 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    | |     `-RecoveryExpr 0x1388279a8 <col:11> '<dependent type>' contains-errors lvalue
    | `-IfStmt 0x138827ae8 <line:18:7, line:19:11>
    |   |-ImplicitCastExpr 0x138827a28 <line:18:11> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x138827a08 <col:11> 'int' lvalue Var 0x1388273d8 'create' 'int'
    |   `-ReturnStmt 0x138827ad8 <line:19:3, col:11>
    |     `-UnaryOperator 0x138827ac0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       `-ImplicitCastExpr 0x138827aa8 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |         `-RecoveryExpr 0x138827a88 <col:11> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x13882d890 <line:23:2, col:27> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13882d7f8 <col:2> 'int ()' Function 0x13882d740 'spin_lock' 'int ()'
    | `-UnaryOperator 0x13882d878 <col:12, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x13882d850 <col:13, col:23> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x13882d818 <col:13> 'struct fsnotify_mark *' lvalue Var 0x138827038 'fsn_mark' 'struct fsnotify_mark *'
    |-IfStmt 0x13882dab0 <line:25:2, line:28:3> has_else
    | |-ImplicitCastExpr 0x13882d938 <line:25:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x13882d918 <col:6> 'int' lvalue Var 0x1388272e8 'add' 'int'
    | |-CompoundAssignOperator 0x13882da18 <line:26:3, col:21> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | | |-RecoveryExpr 0x13882d988 <col:3, col:13> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x13882d950 <col:3> 'struct fsnotify_mark *' lvalue Var 0x138827038 'fsn_mark' 'struct fsnotify_mark *'
    | | `-RecoveryExpr 0x13882d9f8 <col:21> '<dependent type>' contains-errors lvalue
    | `-NullStmt 0x13882daa8 <line:28:3>
    |-CallExpr 0x13882dcb8 <line:30:2, col:29> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13882dc20 <col:2> 'int ()' Function 0x13882db68 'spin_unlock' 'int ()'
    | `-UnaryOperator 0x13882dca0 <col:14, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x13882dc78 <col:15, col:25> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x13882dc40 <col:15> 'struct fsnotify_mark *' lvalue Var 0x138827038 'fsn_mark' 'struct fsnotify_mark *'
    |-IfStmt 0x13882e120 <line:32:2, line:42:2>
    | |-RecoveryExpr 0x13882dce0 <line:32:6, col:18> '_Bool' contains-errors
    | `-CompoundStmt 0x13882e0f8 <col:28, line:42:2>
    |   |-DeclStmt 0x13882dd80 <line:34:3, col:39>
    |   | `-VarDecl 0x13882dd18 <col:3, col:7> col:7 used dropped 'int'
    |   |-DeclStmt 0x13882dea8 <line:36:3, col:54>
    |   | `-VarDecl 0x13882ddb0 <col:3, col:7> col:7 used do_inode 'int'
    |   `-IfStmt 0x13882e0d8 <line:39:3, line:40:48>
    |     |-BinaryOperator 0x13882df30 <line:39:7, col:18> 'int' '||'
    |     | |-ImplicitCastExpr 0x13882df00 <col:7> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x13882dec0 <col:7> 'int' lvalue Var 0x13882dd18 'dropped' 'int'
    |     | `-ImplicitCastExpr 0x13882df18 <col:18> 'int' <LValueToRValue>
    |     |   `-DeclRefExpr 0x13882dee0 <col:18> 'int' lvalue Var 0x13882ddb0 'do_inode' 'int'
    |     `-CallExpr 0x13882e0b0 <line:40:4, col:48> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x13882e030 <col:4> 'int ()' Function 0x13882df78 'fsnotify_recalc_mask' 'int ()'
    |       `-RecoveryExpr 0x13882e088 <col:25, col:32> '<dependent type>' contains-errors lvalue
    |         `-DeclRefExpr 0x13882e050 <col:25> 'struct inode *' lvalue ParmVar 0x138826c28 'inode' 'struct inode *'
    |-BinaryOperator 0x13882e1c0 <line:45:2, col:16> 'int' contains-errors '='
    | |-DeclRefExpr 0x13882e140 <col:2> 'int' lvalue Var 0x1388274c8 'ret' 'int'
    | `-RecoveryExpr 0x13882e198 <col:8, col:16> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x13882e160 <col:8> 'struct inotify_inode_mark *' lvalue Var 0x138827238 'i_mark' 'struct inotify_inode_mark *'
    |-CallExpr 0x13882e348 <line:48:2, col:28> 'int'
    | |-ImplicitCastExpr 0x13882e330 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x13882e2c0 <col:2> 'int ()' Function 0x13882e208 'fsnotify_put_mark' 'int ()'
    | `-ImplicitCastExpr 0x13882e370 <col:20> 'struct fsnotify_mark *' <LValueToRValue>
    |   `-DeclRefExpr 0x13882e2e0 <col:20> 'struct fsnotify_mark *' lvalue Var 0x138827038 'fsn_mark' 'struct fsnotify_mark *'
    `-ReturnStmt 0x13882e3c0 <line:50:2, col:9>
      `-ImplicitCastExpr 0x13882e3a8 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x13882e388 <col:9> 'int' lvalue Var 0x1388274c8 'ret' 'int'
