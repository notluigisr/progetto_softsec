`-FunctionDecl 0x155128198  line:1:13 referenced calc_load_fold_idle 'long (void)' static
  `-CompoundStmt 0x155808cd0 <line:2:1, line:10:1>
    |-DeclStmt 0x155128340 <line:3:2, col:16>
    | `-VarDecl 0x1551282a0 <col:2, col:15> col:7 used delta 'long' cinit
    |   `-ImplicitCastExpr 0x155128328 <col:15> 'long' <IntegralCast>
    |     `-IntegerLiteral 0x155128308 <col:15> 'int' 0
    |-IfStmt 0x155808c68 <line:6:2, line:7:52>
    | |-CallExpr 0x1551285b8 <line:6:6, col:44> 'int'
    | | |-ImplicitCastExpr 0x1551285a0 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x155128480 <col:6> 'int ()' Function 0x1551283c8 'atomic_long_read' 'int ()'
    | | `-UnaryOperator 0x155128550 <col:23, col:24> 'long (*)(void)' prefix '&' cannot overflow
    | |   `-DeclRefExpr 0x1551284f8 <col:24> 'long (void)' Function 0x155128198 'calc_load_fold_idle' 'long (void)'
    | `-BinaryOperator 0x155808c48 <line:7:3, col:52> 'long' '='
    |   |-DeclRefExpr 0x1551285e0 <col:3> 'long' lvalue Var 0x1551282a0 'delta' 'long'
    |   `-ImplicitCastExpr 0x155808c30 <col:11, col:52> 'long' <IntegralCast>
    |     `-CallExpr 0x155808c00 <col:11, col:52> 'int'
    |       |-ImplicitCastExpr 0x1551287d8 <col:11> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x1551286e0 <col:11> 'int ()' Function 0x155128628 'atomic_long_xchg' 'int ()'
    |       |-UnaryOperator 0x1551287c0 <col:28, col:29> 'long (*)(void)' prefix '&' cannot overflow
    |       | `-DeclRefExpr 0x1551287a0 <col:29> 'long (void)' Function 0x155128198 'calc_load_fold_idle' 'long (void)'
    |       `-IntegerLiteral 0x155128730 <col:51> 'int' 0
    `-ReturnStmt 0x155808cc0 <line:9:2, col:9>
      `-ImplicitCastExpr 0x155808ca8 <col:9> 'long' <LValueToRValue>
        `-DeclRefExpr 0x155808c88 <col:9> 'long' lvalue Var 0x1551282a0 'delta' 'long'
