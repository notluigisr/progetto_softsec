`-FunctionDecl 0x1201281f8  line:1:13 invalid var_destroy 'int (int *)'
  |-ParmVarDecl 0x120128128 <col:25, col:49> col:49 referenced invalid var_hashx 'int *'
  `-CompoundStmt 0x1201421a0 <line:2:1, line:26:1>
    |-DeclStmt 0x120128328 <line:3:2, col:12>
    | `-VarDecl 0x1201282c0 <col:2, col:8> col:8 used next 'void *'
    |-DeclStmt 0x1201283c0 <line:4:2, col:8>
    | `-VarDecl 0x120128358 <col:2, col:7> col:7 used i 'long'
    |-WhileStmt 0x120141940 <line:10:2, line:14:2>
    | |-RecoveryExpr 0x120128500 <line:10:9> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x120141918 <col:19, line:14:2>
    |   |-BinaryOperator 0x120128648 <line:11:3, col:20> 'void *' contains-errors '='
    |   | |-DeclRefExpr 0x120128520 <col:3> 'void *' lvalue Var 0x1201282c0 'next' 'void *'
    |   | `-CXXDependentScopeMemberExpr 0x120128600 <col:10, col:20> '<dependent type>' contains-errors lvalue ->next
    |   |   `-RecoveryExpr 0x1201285e0 <col:10> '<dependent type>' contains-errors lvalue
    |   |-CallExpr 0x120141868 <line:12:3, col:17> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x1201287c0 <col:3> 'int ()' Function 0x120128708 'efree' 'int ()'
    |   | `-RecoveryExpr 0x120141848 <col:9> '<dependent type>' contains-errors lvalue
    |   `-BinaryOperator 0x1201418f8 <line:13:3, col:14> '<dependent type>' contains-errors '='
    |     |-RecoveryExpr 0x1201418b0 <col:3> '<dependent type>' contains-errors lvalue
    |     | `-DeclRefExpr 0x120141890 <col:3> 'int *' lvalue ParmVar 0x120128128 'var_hashx' 'int *'
    |     `-DeclRefExpr 0x1201418d8 <col:14> 'void *' lvalue Var 0x1201282c0 'next' 'void *'
    |-BinaryOperator 0x120141a60 <line:16:2, col:27> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x120141980 <col:2> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x120141960 <col:2> 'int *' lvalue ParmVar 0x120128128 'var_hashx' 'int *'
    | `-CXXDependentScopeMemberExpr 0x120141a18 <col:13, col:27> '<dependent type>' contains-errors lvalue ->first_dtor
    |   `-ParenExpr 0x1201419f8 <col:13, col:24> '<dependent type>' contains-errors
    |     `-UnaryOperator 0x1201419e0 <col:14, col:15> '<dependent type>' contains-errors prefix '*' cannot overflow
    |       `-ImplicitCastExpr 0x1201419c8 <col:15> '<dependent type>' contains-errors <LValueToRValue>
    |         `-RecoveryExpr 0x1201419a8 <col:15> '<dependent type>' contains-errors lvalue
    `-WhileStmt 0x120142180 <line:18:2, line:25:2>
      |-RecoveryExpr 0x120141ab8 <line:18:9> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x120142150 <col:19, line:25:2>
        |-ForStmt 0x120141e80 <line:19:3, line:21:3>
        | |-BinaryOperator 0x120141b30 <line:19:8, col:12> 'long' '='
        | | |-DeclRefExpr 0x120141ad8 <col:8> 'long' lvalue Var 0x120128358 'i' 'long'
        | | `-ImplicitCastExpr 0x120141b18 <col:12> 'long' <IntegralCast>
        | |   `-IntegerLiteral 0x120141af8 <col:12> 'int' 0
        | |-<<<NULL>>>
        | |-BinaryOperator 0x120141c78 <col:15, col:29> 'int' contains-errors '<'
        | | |-DeclRefExpr 0x120141b50 <col:15> 'long' lvalue Var 0x120128358 'i' 'long'
        | | `-CXXDependentScopeMemberExpr 0x120141c30 <col:19, col:29> '<dependent type>' contains-errors lvalue ->used_slots
        | |   `-RecoveryExpr 0x120141c10 <col:19> '<dependent type>' contains-errors lvalue
        | |-UnaryOperator 0x120141cb8 <col:41, col:42> 'long' postfix '++'
        | | `-DeclRefExpr 0x120141c98 <col:41> 'long' lvalue Var 0x120128358 'i' 'long'
        | `-CompoundStmt 0x120141e70 <col:46, line:21:3>
        |-BinaryOperator 0x120141fe0 <line:22:3, col:20> 'void *' contains-errors '='
        | |-DeclRefExpr 0x120141eb8 <col:3> 'void *' lvalue Var 0x1201282c0 'next' 'void *'
        | `-CXXDependentScopeMemberExpr 0x120141f98 <col:10, col:20> '<dependent type>' contains-errors lvalue ->next
        |   `-RecoveryExpr 0x120141f78 <col:10> '<dependent type>' contains-errors lvalue
        |-CallExpr 0x1201420a0 <line:23:3, col:17> '<dependent type>' contains-errors
        | |-DeclRefExpr 0x120142000 <col:3> 'int ()' Function 0x120128708 'efree' 'int ()'
        | `-RecoveryExpr 0x120142080 <col:9> '<dependent type>' contains-errors lvalue
        `-BinaryOperator 0x120142130 <line:24:3, col:14> '<dependent type>' contains-errors '='
          |-RecoveryExpr 0x1201420e8 <col:3> '<dependent type>' contains-errors lvalue
          | `-DeclRefExpr 0x1201420c8 <col:3> 'int *' lvalue ParmVar 0x120128128 'var_hashx' 'int *'
          `-DeclRefExpr 0x120142110 <col:14> 'void *' lvalue Var 0x1201282c0 'next' 'void *'
