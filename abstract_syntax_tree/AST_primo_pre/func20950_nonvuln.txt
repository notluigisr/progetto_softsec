`-FunctionDecl 0x12680de38  line:1:1 TEST 'int (int, int)'
  |-ParmVarDecl 0x12680dd58 <col:6> col:6 used RegexMatchExpression 'int'
  |-ParmVarDecl 0x12680dcd8 <col:28> col:28 MatchesElementExtendedOff 'int'
  `-CompoundStmt 0x126826d10 <col:55, line:9:1>
    |-ImplicitCastExpr 0x12680df70 <line:6:5> 'int' <LValueToRValue>
    | `-DeclRefExpr 0x12680df50 <col:5> 'int' lvalue ParmVar 0x12680dd58 'RegexMatchExpression' 'int'
    |-CallExpr 0x12680e168 <col:26, col:37> 'int'
    | |-ImplicitCastExpr 0x12680e150 <col:26> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x12680e0a0 <col:26> 'int ()' Function 0x12680dfe8 'regex' 'int ()'
    | `-ImplicitCastExpr 0x12680e190 <col:32> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x12680e100 <col:32> 'char[4]' lvalue "STR"
    |-CallExpr 0x126826aa8 <line:7:5, col:60> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12680e288 <col:5> 'int ()' Function 0x12680e1d0 'ASSERT' 'int ()'
    | `-CallExpr 0x126826a80 <col:12, col:59> '<dependent type>' contains-errors
    |   |-RecoveryExpr 0x126826900 <col:12, col:18> '<dependent type>' contains-errors lvalue
    |   | `-DeclRefExpr 0x12680e2a8 <col:12> 'int ()' Function 0x12680dfe8 'regex' 'int ()'
    |   `-CallExpr 0x126826a60 <col:39, col:58> '<dependent type>' contains-errors
    |     `-CXXDependentScopeMemberExpr 0x126826a18 <col:39, col:45> '<dependent type>' contains-errors lvalue .firstElement
    |       `-RecoveryExpr 0x1268269f8 <col:39> '<dependent type>' contains-errors lvalue
    `-CallExpr 0x126826ce8 <line:8:5, col:64> '<dependent type>' contains-errors
      |-DeclRefExpr 0x126826ad0 <col:5> 'int ()' Function 0x12680e1d0 'ASSERT' 'int ()'
      `-UnaryOperator 0x126826cd0 <col:12, col:63> '<dependent type>' contains-errors prefix '!' cannot overflow
        `-CallExpr 0x126826ca8 <col:13, col:63> '<dependent type>' contains-errors
          |-RecoveryExpr 0x126826b10 <col:13, col:19> '<dependent type>' contains-errors lvalue
          | `-DeclRefExpr 0x126826af0 <col:13> 'int ()' Function 0x12680dfe8 'regex' 'int ()'
          `-CallExpr 0x126826c88 <col:40, col:62> '<dependent type>' contains-errors
            `-CXXDependentScopeMemberExpr 0x126826c40 <col:40, col:49> '<dependent type>' contains-errors lvalue .firstElement
              `-RecoveryExpr 0x126826c20 <col:40> '<dependent type>' contains-errors lvalue
