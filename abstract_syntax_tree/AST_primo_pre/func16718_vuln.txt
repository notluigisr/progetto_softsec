`-FunctionDecl 0x122927b58  line:1:12 cp2112_gpio_get_all 'int (struct gpio_chip *)' static
  |-ParmVarDecl 0x122927a48 <col:32, col:50> col:50 used chip 'struct gpio_chip *'
  `-CompoundStmt 0x1229417e0 <line:2:1, line:26:1>
    |-DeclStmt 0x123008648 <line:3:2, col:53>
    | |-RecordDecl 0x123008250 <col:2, col:9> col:9 struct cp2112_device
    | `-VarDecl 0x1230083b8 <col:2, col:52> col:24 used dev 'struct cp2112_device *' cinit
    |   `-ImplicitCastExpr 0x123008618 <col:30, col:52> 'struct cp2112_device *' <IntegralToPointer>
    |     `-CallExpr 0x1230085d8 <col:30, col:52> 'int'
    |       |-ImplicitCastExpr 0x1230085c0 <col:30> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x123008550 <col:30> 'int ()' Function 0x123008498 'gpiochip_get_data' 'int ()'
    |       `-ImplicitCastExpr 0x123008600 <col:48> 'struct gpio_chip *' <LValueToRValue>
    |         `-DeclRefExpr 0x123008570 <col:48> 'struct gpio_chip *' lvalue ParmVar 0x122927a48 'chip' 'struct gpio_chip *'
    |-DeclStmt 0x1230088a8 <line:4:2, col:37>
    | |-RecordDecl 0x123008660 <col:2, col:9> col:9 struct hid_device
    | `-VarDecl 0x1230087c8 <col:2, col:33> col:21 used hdev 'struct hid_device *' cinit
    |   `-RecoveryExpr 0x123008868 <col:28, col:33> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x123008830 <col:28> 'struct cp2112_device *' lvalue Var 0x1230083b8 'dev' 'struct cp2112_device *'
    |-DeclStmt 0x1230089b8 <line:6:2, col:21>
    | `-VarDecl 0x123008950 <col:2, col:16> col:16 used flags 'unsigned long'
    |-DeclStmt 0x123008a50 <line:7:2, col:9>
    | `-VarDecl 0x1230089e8 <col:2, col:6> col:6 used ret 'int'
    |-CallExpr 0x123008c00 <line:9:2, col:37> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x123008b48 <col:2> 'int ()' Function 0x123008a90 'spin_lock_irqsave' 'int ()'
    | |-UnaryOperator 0x123008bc8 <col:20, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-RecoveryExpr 0x123008ba0 <col:21, col:26> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x123008b68 <col:21> 'struct cp2112_device *' lvalue Var 0x1230083b8 'dev' 'struct cp2112_device *'
    | `-DeclRefExpr 0x123008be0 <col:32> 'unsigned long' lvalue Var 0x123008950 'flags' 'unsigned long'
    |-BinaryOperator 0x123008f48 <line:11:2, line:13:24> 'int' contains-errors '='
    | |-DeclRefExpr 0x123008c30 <line:11:2> 'int' lvalue Var 0x1230089e8 'ret' 'int'
    | `-CallExpr 0x123008ef8 <col:8, line:13:24> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x123008d30 <line:11:8> 'int ()' Function 0x123008c78 'hid_hw_raw_request' 'int ()'
    |   |-DeclRefExpr 0x123008d50 <col:27> 'struct hid_device *' contains-errors lvalue Var 0x1230087c8 'hdev' 'struct hid_device *'
    |   |-RecoveryExpr 0x123008e58 <col:33> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x123008e78 <col:50> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x123008e98 <line:12:6> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x123008eb8 <col:30> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x123008ed8 <line:13:6> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x122941538 <line:14:2, line:18:2>
    | |-BinaryOperator 0x123008fe0 <line:14:6, col:13> 'int' contains-errors '!='
    | | |-DeclRefExpr 0x123008f68 <col:6> 'int' lvalue Var 0x1230089e8 'ret' 'int'
    | | `-RecoveryExpr 0x123008fc0 <col:13> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x122941510 <col:37, line:18:2>
    |   |-CallExpr 0x1230091b8 <line:15:3, col:27> 'int' contains-errors
    |   | |-ImplicitCastExpr 0x1230091a0 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x1230090e0 <col:3> 'int ()' Function 0x123009028 'hid_err' 'int ()'
    |   | |-ImplicitCastExpr 0x122941200 <col:11> 'struct hid_device *' contains-errors <LValueToRValue>
    |   | | `-DeclRefExpr 0x123009100 <col:11> 'struct hid_device *' contains-errors lvalue Var 0x1230087c8 'hdev' 'struct hid_device *'
    |   | |-ImplicitCastExpr 0x122941218 <col:17> 'char *' <ArrayToPointerDecay>
    |   | | `-StringLiteral 0x123009160 <col:17> 'char[4]' lvalue "STR"
    |   | `-ImplicitCastExpr 0x122941230 <col:24> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x123009180 <col:24> 'int' lvalue Var 0x1230089e8 'ret' 'int'
    |   |-BinaryOperator 0x122941488 <line:16:3, col:26> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x122941248 <col:3> 'int' lvalue Var 0x1230089e8 'ret' 'int'
    |   | `-ConditionalOperator 0x122941458 <col:9, col:26> '<dependent type>' contains-errors
    |   |   |-BinaryOperator 0x1229413e8 <col:9, col:15> 'int' '<'
    |   |   | |-ImplicitCastExpr 0x1229413d0 <col:9> 'int' <LValueToRValue>
    |   |   | | `-DeclRefExpr 0x122941268 <col:9> 'int' lvalue Var 0x1230089e8 'ret' 'int'
    |   |   | `-IntegerLiteral 0x122941288 <col:15> 'int' 0
    |   |   |-DeclRefExpr 0x1229412e0 <col:19> 'int' lvalue Var 0x1230089e8 'ret' 'int'
    |   |   `-UnaryOperator 0x122941440 <col:25, col:26> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |     `-ImplicitCastExpr 0x122941428 <col:26> '<dependent type>' contains-errors <LValueToRValue>
    |   |       `-RecoveryExpr 0x122941408 <col:26> '<dependent type>' contains-errors lvalue
    |   `-GotoStmt 0x1229414f8 <line:17:3, col:8> 'exit' 0x1229414a8
    |-LabelStmt 0x122941778 <line:22:1, line:23:42> 'exit'
    | `-CallExpr 0x122941748 <col:2, col:42> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x122941690 <col:2> 'int ()' Function 0x1229415d8 'spin_unlock_irqrestore' 'int ()'
    |   |-UnaryOperator 0x122941710 <col:25, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-RecoveryExpr 0x1229416e8 <col:26, col:31> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x1229416b0 <col:26> 'struct cp2112_device *' lvalue Var 0x1230083b8 'dev' 'struct cp2112_device *'
    |   `-DeclRefExpr 0x122941728 <col:37> 'unsigned long' lvalue Var 0x123008950 'flags' 'unsigned long'
    `-ReturnStmt 0x1229417d0 <line:25:2, col:9>
      `-ImplicitCastExpr 0x1229417b8 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x122941798 <col:9> 'int' lvalue Var 0x1230089e8 'ret' 'int'
