`-FunctionDecl 0x12780de38  line:1:1 TEST_F 'int (int, int)'
  |-ParmVarDecl 0x12780dd58 <col:8> col:8 ExprMatchTest 'int'
  |-ParmVarDecl 0x12780dcd8 <col:23> col:23 EqWithLHSFieldPathMatchesCorrectly 'int'
  `-CompoundStmt 0x127827098 <col:59, line:8:1>
    |-CallExpr 0x12780e280 <line:2:5, col:34> 'int'
    | |-ImplicitCastExpr 0x12780e268 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x12780e060 <col:5> 'int ()' Function 0x12780dfa8 'createMatcher' 'int ()'
    | `-CallExpr 0x12780e228 <col:19, col:33> 'int'
    |   |-ImplicitCastExpr 0x12780e210 <col:19> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x12780e160 <col:19> 'int ()' Function 0x12780e0a8 'fromjson' 'int ()'
    |   `-ImplicitCastExpr 0x12780e250 <col:28> 'char *' <ArrayToPointerDecay>
    |     `-StringLiteral 0x12780e1c0 <col:28> 'char[4]' lvalue "STR"
    |-CallExpr 0x127826cd0 <line:4:5, col:42> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12780e388 <col:5> 'int ()' Function 0x12780e2d0 'ASSERT_TRUE' 'int ()'
    | `-CallExpr 0x127826ca8 <col:17, col:41> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1278266b8 <col:17> 'int ()' Function 0x127826600 'matches' 'int ()'
    |   `-CallExpr 0x127826c80 <col:25, col:40> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x1278267b8 <col:25> 'int ()' Function 0x127826700 'BSON' 'int ()'
    |     `-RecoveryExpr 0x127826c50 <col:30, col:39> '<dependent type>' contains-errors lvalue
    |       |-StringLiteral 0x1278267d8 <col:30> 'char[4]' lvalue "STR"
    |       `-IntegerLiteral 0x1278267f8 <col:39> 'int' 3
    |-CallExpr 0x127826f10 <line:6:5, col:43> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x127826dd8 <col:5> 'int ()' Function 0x127826d20 'ASSERT_FALSE' 'int ()'
    | `-CallExpr 0x127826ee8 <col:18, col:42> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x127826df8 <col:18> 'int ()' Function 0x127826600 'matches' 'int ()'
    |   `-CallExpr 0x127826ec0 <col:26, col:41> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x127826e18 <col:26> 'int ()' Function 0x127826700 'BSON' 'int ()'
    |     `-RecoveryExpr 0x127826e90 <col:31, col:40> '<dependent type>' contains-errors lvalue
    |       |-StringLiteral 0x127826e38 <col:31> 'char[4]' lvalue "STR"
    |       `-IntegerLiteral 0x127826e58 <col:40> 'int' 1
    `-CallExpr 0x127827070 <line:7:5, col:44> '<dependent type>' contains-errors
      |-DeclRefExpr 0x127826f38 <col:5> 'int ()' Function 0x127826d20 'ASSERT_FALSE' 'int ()'
      `-CallExpr 0x127827048 <col:18, col:43> '<dependent type>' contains-errors
        |-DeclRefExpr 0x127826f58 <col:18> 'int ()' Function 0x127826600 'matches' 'int ()'
        `-CallExpr 0x127827020 <col:26, col:42> '<dependent type>' contains-errors
          |-DeclRefExpr 0x127826f78 <col:26> 'int ()' Function 0x127826700 'BSON' 'int ()'
          `-RecoveryExpr 0x127826ff0 <col:31, col:40> '<dependent type>' contains-errors lvalue
            |-StringLiteral 0x127826f98 <col:31> 'char[4]' lvalue "STR"
            `-IntegerLiteral 0x127826fb8 <col:40> 'int' 10
