`-FunctionDecl 0x12700de80  line:1:6 invalid jsP_dumplist 'void (int *, int *)'
  |-ParmVarDecl 0x12700dd28 <col:19, col:29> col:29 invalid J 'int *'
  |-ParmVarDecl 0x12700dda8 <col:32, col:40> col:40 invalid prog 'int *'
  `-CompoundStmt 0x127027548 <line:2:1, line:9:1>
    |-IfStmt 0x12700e390 <line:4:2, line:7:16> has_else
    | |-BinaryOperator 0x12700e018 <line:4:6, col:20> 'int' contains-errors '=='
    | | |-CXXDependentScopeMemberExpr 0x12700df78 <col:6, col:12> '<dependent type>' contains-errors lvalue ->type
    | | | `-RecoveryExpr 0x12700df58 <col:6> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x12700dff8 <col:20> '<dependent type>' contains-errors lvalue
    | |-CallExpr 0x12700e1f0 <line:5:3, col:17> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x12700e190 <col:3> 'int ()' Function 0x12700e0d8 'sblock' 'int ()'
    | | |-IntegerLiteral 0x12700e1b0 <col:10> 'int' 0
    | | `-RecoveryExpr 0x12700e1d0 <col:13> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x12700e360 <line:7:3, col:16> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12700e300 <col:3> 'int ()' Function 0x12700e248 'snode' 'int ()'
    |   |-IntegerLiteral 0x12700e320 <col:9> 'int' 0
    |   `-RecoveryExpr 0x12700e340 <col:12> '<dependent type>' contains-errors lvalue
    `-CallExpr 0x127027528 <line:8:2, col:5> 'int'
      `-ImplicitCastExpr 0x127027510 <col:2> 'int (*)()' <FunctionToPointerDecay>
        `-DeclRefExpr 0x1270274b8 <col:2> 'int ()' Function 0x127027400 'nl' 'int ()'
