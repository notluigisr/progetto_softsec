`-FunctionDecl 0x13888a2c8  line:1:21 invalid reencrypt_make_hot_segments_forward 'int *(struct crypt_device *, struct luks2_hdr *, struct luks2_reencrypt *, int, int)' static
  |-ParmVarDecl 0x138077e68 <col:57, col:78> col:78 used cd 'struct crypt_device *'
  |-ParmVarDecl 0x138889e58 <line:2:3, col:21> col:21 used hdr 'struct luks2_hdr *'
  |-ParmVarDecl 0x13888a028 <line:3:3, col:27> col:27 used rh 'struct luks2_reencrypt *'
  |-ParmVarDecl 0x13888a0a8 <line:4:3, col:12> col:12 invalid device_size 'int'
  |-ParmVarDecl 0x13888a128 <line:5:3, col:12> col:12 invalid data_offset 'int'
  `-CompoundStmt 0x13888c210 <line:6:1, line:40:1>
    |-DeclStmt 0x13888a540 <line:9:2, col:21>
    | `-VarDecl 0x13888a4a0 <col:2, col:20> col:15 used sg 'unsigned int' cinit
    |   `-ImplicitCastExpr 0x13888a528 <col:20> 'unsigned int' <IntegralCast>
    |     `-IntegerLiteral 0x13888a508 <col:20> 'int' 0
    |-IfStmt 0x13888a818 <line:12:2, line:13:10>
    | |-UnaryOperator 0x13888a7b8 <line:12:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x13888a7a0 <col:7> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x13888a780 <col:7> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x13888a808 <line:13:3, col:10>
    |   `-RecoveryExpr 0x13888a7e8 <col:10> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x13888b898 <line:15:2, line:20:2>
    | |-RecoveryExpr 0x13888a870 <line:15:6, col:10> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x13888a838 <col:6> 'struct luks2_reencrypt *' lvalue ParmVar 0x13888a028 'rh' 'struct luks2_reencrypt *'
    | `-CompoundStmt 0x13888b878 <col:18, line:20:2>
    |   |-IfStmt 0x13888ac28 <line:17:3, line:18:9>
    |   | |-UnaryOperator 0x13888aba8 <line:17:7, col:8> '<dependent type>' contains-errors prefix '!' cannot overflow
    |   | | `-ImplicitCastExpr 0x13888ab90 <col:8> '<dependent type>' contains-errors <LValueToRValue>
    |   | |   `-RecoveryExpr 0x13888ab70 <col:8> '<dependent type>' contains-errors lvalue
    |   | `-GotoStmt 0x13888ac10 <line:18:4, col:9> 'err' 0x13888abc0
    |   `-CallExpr 0x13888b840 <line:19:3, col:67> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x13888ad28 <col:3> 'int ()' Function 0x13888ac70 'json_object_object_add_by_uint' 'int ()'
    |     |-RecoveryExpr 0x13888b800 <col:34> '<dependent type>' contains-errors lvalue
    |     |-UnaryOperator 0x13888ad80 <col:49, col:51> 'unsigned int' postfix '++'
    |     | `-DeclRefExpr 0x13888ad60 <col:49> 'unsigned int' lvalue Var 0x13888a4a0 'sg' 'unsigned int'
    |     `-RecoveryExpr 0x13888b820 <col:55> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x13888bc00 <line:23:2, line:24:8>
    | |-RecoveryExpr 0x13888bbc8 <line:23:6, col:7> '_Bool' contains-errors
    | `-GotoStmt 0x13888bbe8 <line:24:3, col:8> 'err' 0x13888abc0
    |-IfStmt 0x13888c0c8 <line:28:2, line:34:2>
    | |-RecoveryExpr 0x13888bc98 <line:28:6, col:12> '_Bool' contains-errors
    | `-CompoundStmt 0x13888c0b0 <col:25, line:34:2>
    |   `-IfStmt 0x13888c050 <line:31:3, line:32:9>
    |     |-RecoveryExpr 0x13888c018 <line:31:7, col:8> '_Bool' contains-errors
    |     `-GotoStmt 0x13888c038 <line:32:4, col:9> 'err' 0x13888abc0
    `-LabelStmt 0x13888c1f0 <line:37:1, col:4> 'err'
      `-NullStmt 0x13888c1e8 <col:4>
