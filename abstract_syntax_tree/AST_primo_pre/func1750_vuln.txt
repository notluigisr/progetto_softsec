`-FunctionDecl 0x155140ea8  line:1:1 check_entry_size_and_hooks 'int (struct ip6t_entry *, struct xt_table_info *, const unsigned char *, const unsigned char *, const unsigned int *, const unsigned int *, unsigned int)'
  |-ParmVarDecl 0x155128648 <col:28, col:47> col:47 used e 'struct ip6t_entry *'
  |-ParmVarDecl 0x155140a28 <line:2:7, col:29> col:29 used newinfo 'struct xt_table_info *'
  |-ParmVarDecl 0x155140ad8 <line:3:7, col:28> col:28 used base 'const unsigned char *'
  |-ParmVarDecl 0x155140b58 <line:4:7, col:28> col:28 used limit 'const unsigned char *'
  |-ParmVarDecl 0x155140c08 <line:5:7, col:27> col:27 used hook_entries 'const unsigned int *'
  |-ParmVarDecl 0x155140c88 <line:6:7, col:27> col:27 used underflows 'const unsigned int *'
  |-ParmVarDecl 0x155140d08 <line:7:7, col:20> col:20 used valid_hooks 'unsigned int'
  `-CompoundStmt 0x155145d18 <line:8:1, line:50:1>
    |-DeclStmt 0x155141050 <line:9:2, col:16>
    | `-VarDecl 0x155140fe8 <col:2, col:15> col:15 used h 'unsigned int'
    |-DeclStmt 0x1551410e8 <line:10:2, col:9>
    | `-VarDecl 0x155141080 <col:2, col:6> col:6 used err 'int'
    |-IfStmt 0x155141630 <line:12:2, line:16:2>
    | |-RecoveryExpr 0x1551412d8 <line:12:6, line:13:56> '_Bool' contains-errors
    | `-CompoundStmt 0x155141610 <col:63, line:16:2>
    |   |-CallExpr 0x155141508 <line:14:3, col:20> 'int'
    |   | |-ImplicitCastExpr 0x1551414f0 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x155141420 <col:3> 'int ()' Function 0x155141368 'duprintf' 'int ()'
    |   | |-ImplicitCastExpr 0x155141538 <col:12> 'char *' <ArrayToPointerDecay>
    |   | | `-StringLiteral 0x155141480 <col:12> 'char[4]' lvalue "STR"
    |   | `-ImplicitCastExpr 0x155141550 <col:19> 'struct ip6t_entry *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x1551414a0 <col:19> 'struct ip6t_entry *' lvalue ParmVar 0x155128648 'e' 'struct ip6t_entry *'
    |   `-ReturnStmt 0x155141600 <line:15:3, col:11>
    |     `-UnaryOperator 0x1551415e8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       `-ImplicitCastExpr 0x1551415d0 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |         `-RecoveryExpr 0x1551415b0 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x1551419a8 <line:18:2, line:23:2>
    | |-RecoveryExpr 0x1551417c8 <line:18:6, line:19:65> '_Bool' contains-errors
    | `-CompoundStmt 0x155141988 <col:68, line:23:2>
    |   |-CallExpr 0x1551418a8 <line:20:3, line:21:22> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x1551417e8 <line:20:3> 'int ()' Function 0x155141368 'duprintf' 'int ()'
    |   | |-StringLiteral 0x155141808 <col:12> 'char[4]' lvalue "STR"
    |   | |-DeclRefExpr 0x155141828 <line:21:5> 'struct ip6t_entry *' lvalue ParmVar 0x155128648 'e' 'struct ip6t_entry *'
    |   | `-RecoveryExpr 0x155141880 <col:8, col:11> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x155141848 <col:8> 'struct ip6t_entry *' lvalue ParmVar 0x155128648 'e' 'struct ip6t_entry *'
    |   `-ReturnStmt 0x155141978 <line:22:3, col:11>
    |     `-UnaryOperator 0x155141960 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       `-ImplicitCastExpr 0x155141948 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |         `-RecoveryExpr 0x155141928 <col:11> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x155144578 <line:25:2, col:21> 'int' '='
    | |-DeclRefExpr 0x1551419c8 <col:2> 'int' lvalue Var 0x155141080 'err' 'int'
    | `-CallExpr 0x155144538 <col:8, col:21> 'int'
    |   |-ImplicitCastExpr 0x155144520 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x1551444e0 <col:8> 'int ()' Function 0x155144428 'check_entry' 'int ()'
    |   `-ImplicitCastExpr 0x155144560 <col:20> 'struct ip6t_entry *' <LValueToRValue>
    |     `-DeclRefExpr 0x155144500 <col:20> 'struct ip6t_entry *' lvalue ParmVar 0x155128648 'e' 'struct ip6t_entry *'
    |-IfStmt 0x155144618 <line:26:2, line:27:10>
    | |-ImplicitCastExpr 0x1551445b8 <line:26:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x155144598 <col:6> 'int' lvalue Var 0x155141080 'err' 'int'
    | `-ReturnStmt 0x155144608 <line:27:3, col:10>
    |   `-ImplicitCastExpr 0x1551445f0 <col:10> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x1551445d0 <col:10> 'int' lvalue Var 0x155141080 'err' 'int'
    |-ForStmt 0x155145a28 <line:30:2, line:44:2>
    | |-BinaryOperator 0x155144690 <line:30:7, col:11> 'unsigned int' '='
    | | |-DeclRefExpr 0x155144638 <col:7> 'unsigned int' lvalue Var 0x155140fe8 'h' 'unsigned int'
    | | `-ImplicitCastExpr 0x155144678 <col:11> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x155144658 <col:11> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x155144728 <col:14, col:18> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x1551446b0 <col:14> 'unsigned int' lvalue Var 0x155140fe8 'h' 'unsigned int'
    | | `-RecoveryExpr 0x155144708 <col:18> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x155144768 <col:36, col:37> 'unsigned int' postfix '++'
    | | `-DeclRefExpr 0x155144748 <col:36> 'unsigned int' lvalue Var 0x155140fe8 'h' 'unsigned int'
    | `-CompoundStmt 0x155145a00 <col:41, line:44:2>
    |   |-IfStmt 0x1551448c8 <line:31:3, line:32:4>
    |   | |-UnaryOperator 0x1551448a8 <line:31:7, col:31> 'int' prefix '!' cannot overflow
    |   | | `-ParenExpr 0x155144888 <col:8, col:31> 'unsigned int'
    |   | |   `-BinaryOperator 0x155144868 <col:9, col:30> 'unsigned int' '&'
    |   | |     |-ImplicitCastExpr 0x155144838 <col:9> 'unsigned int' <LValueToRValue>
    |   | |     | `-DeclRefExpr 0x155144780 <col:9> 'unsigned int' lvalue ParmVar 0x155140d08 'valid_hooks' 'unsigned int'
    |   | |     `-ImplicitCastExpr 0x155144850 <col:23, col:30> 'unsigned int' <IntegralCast>
    |   | |       `-ParenExpr 0x155144818 <col:23, col:30> 'int'
    |   | |         `-BinaryOperator 0x1551447f8 <col:24, col:29> 'int' '<<'
    |   | |           |-IntegerLiteral 0x1551447a0 <col:24> 'int' 1
    |   | |           `-ImplicitCastExpr 0x1551447e0 <col:29> 'unsigned int' <LValueToRValue>
    |   | |             `-DeclRefExpr 0x1551447c0 <col:29> 'unsigned int' lvalue Var 0x155140fe8 'h' 'unsigned int'
    |   | `-ContinueStmt 0x1551448c0 <line:32:4>
    |   |-IfStmt 0x155144c18 <line:33:3, line:34:43>
    |   | |-BinaryOperator 0x155144a78 <line:33:7, col:50> 'int' '=='
    |   | | |-BinaryOperator 0x155144998 <col:7, col:28> 'long' '-'
    |   | | | |-CStyleCastExpr 0x155144938 <col:7, col:24> 'unsigned char *' <BitCast>
    |   | | | | `-ImplicitCastExpr 0x155144920 <col:24> 'struct ip6t_entry *' <LValueToRValue> part_of_explicit_cast
    |   | | | |   `-DeclRefExpr 0x1551448e8 <col:24> 'struct ip6t_entry *' lvalue ParmVar 0x155128648 'e' 'struct ip6t_entry *'
    |   | | | `-ImplicitCastExpr 0x155144980 <col:28> 'const unsigned char *' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x155144960 <col:28> 'const unsigned char *' lvalue ParmVar 0x155140ad8 'base' 'const unsigned char *'
    |   | | `-ImplicitCastExpr 0x155144a60 <col:36, col:50> 'long' <IntegralCast>
    |   | |   `-ImplicitCastExpr 0x155144a48 <col:36, col:50> 'unsigned int' <LValueToRValue>
    |   | |     `-ArraySubscriptExpr 0x155144a28 <col:36, col:50> 'const unsigned int' lvalue
    |   | |       |-ImplicitCastExpr 0x1551449f8 <col:36> 'const unsigned int *' <LValueToRValue>
    |   | |       | `-DeclRefExpr 0x1551449b8 <col:36> 'const unsigned int *' lvalue ParmVar 0x155140c08 'hook_entries' 'const unsigned int *'
    |   | |       `-ImplicitCastExpr 0x155144a10 <col:49> 'unsigned int' <LValueToRValue>
    |   | |         `-DeclRefExpr 0x1551449d8 <col:49> 'unsigned int' lvalue Var 0x155140fe8 'h' 'unsigned int'
    |   | `-BinaryOperator 0x155144bf8 <line:34:4, col:43> '<dependent type>' contains-errors '='
    |   |   |-ArraySubscriptExpr 0x155144b48 <col:4, col:25> '<dependent type>' contains-errors lvalue
    |   |   | |-ImplicitCastExpr 0x155144b18 <col:4, col:13> '<dependent type>' contains-errors <LValueToRValue>
    |   |   | | `-RecoveryExpr 0x155144ad0 <col:4, col:13> '<dependent type>' contains-errors lvalue
    |   |   | |   `-DeclRefExpr 0x155144a98 <col:4> 'struct xt_table_info *' lvalue ParmVar 0x155140a28 'newinfo' 'struct xt_table_info *'
    |   |   | `-ImplicitCastExpr 0x155144b30 <col:24> 'unsigned int' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x155144af8 <col:24> 'unsigned int' lvalue Var 0x155140fe8 'h' 'unsigned int'
    |   |   `-ArraySubscriptExpr 0x155144bd8 <col:29, col:43> 'const unsigned int' lvalue
    |   |     |-ImplicitCastExpr 0x155144ba8 <col:29> 'const unsigned int *' <LValueToRValue>
    |   |     | `-DeclRefExpr 0x155144b68 <col:29> 'const unsigned int *' lvalue ParmVar 0x155140c08 'hook_entries' 'const unsigned int *'
    |   |     `-ImplicitCastExpr 0x155144bc0 <col:42> 'unsigned int' <LValueToRValue>
    |   |       `-DeclRefExpr 0x155144b88 <col:42> 'unsigned int' lvalue Var 0x155140fe8 'h' 'unsigned int'
    |   `-IfStmt 0x1551453d0 <line:35:3, line:43:3>
    |     |-BinaryOperator 0x155144dc8 <line:35:7, col:48> 'int' '=='
    |     | |-BinaryOperator 0x155144ce8 <col:7, col:28> 'long' '-'
    |     | | |-CStyleCastExpr 0x155144c88 <col:7, col:24> 'unsigned char *' <BitCast>
    |     | | | `-ImplicitCastExpr 0x155144c70 <col:24> 'struct ip6t_entry *' <LValueToRValue> part_of_explicit_cast
    |     | | |   `-DeclRefExpr 0x155144c38 <col:24> 'struct ip6t_entry *' lvalue ParmVar 0x155128648 'e' 'struct ip6t_entry *'
    |     | | `-ImplicitCastExpr 0x155144cd0 <col:28> 'const unsigned char *' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x155144cb0 <col:28> 'const unsigned char *' lvalue ParmVar 0x155140ad8 'base' 'const unsigned char *'
    |     | `-ImplicitCastExpr 0x155144db0 <col:36, col:48> 'long' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x155144d98 <col:36, col:48> 'unsigned int' <LValueToRValue>
    |     |     `-ArraySubscriptExpr 0x155144d78 <col:36, col:48> 'const unsigned int' lvalue
    |     |       |-ImplicitCastExpr 0x155144d48 <col:36> 'const unsigned int *' <LValueToRValue>
    |     |       | `-DeclRefExpr 0x155144d08 <col:36> 'const unsigned int *' lvalue ParmVar 0x155140c88 'underflows' 'const unsigned int *'
    |     |       `-ImplicitCastExpr 0x155144d60 <col:47> 'unsigned int' <LValueToRValue>
    |     |         `-DeclRefExpr 0x155144d28 <col:47> 'unsigned int' lvalue Var 0x155140fe8 'h' 'unsigned int'
    |     `-CompoundStmt 0x1551453b0 <col:51, line:43:3>
    |       |-IfStmt 0x155145210 <line:36:4, line:41:4>
    |       | |-UnaryOperator 0x155144f60 <line:36:8, col:26> 'int' prefix '!' cannot overflow
    |       | | `-CallExpr 0x155144f20 <col:9, col:26> 'int'
    |       | |   |-ImplicitCastExpr 0x155144f08 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |       | |   | `-DeclRefExpr 0x155144ec8 <col:9> 'int ()' Function 0x155144e10 'check_underflow' 'int ()'
    |       | |   `-ImplicitCastExpr 0x155144f48 <col:25> 'struct ip6t_entry *' <LValueToRValue>
    |       | |     `-DeclRefExpr 0x155144ee8 <col:25> 'struct ip6t_entry *' lvalue ParmVar 0x155128648 'e' 'struct ip6t_entry *'
    |       | `-CompoundStmt 0x1551451f0 <col:29, line:41:4>
    |       |   |-CallExpr 0x155145108 <line:37:5, line:39:17> 'int'
    |       |   | |-ImplicitCastExpr 0x1551450f0 <line:37:5> 'int (*)()' <FunctionToPointerDecay>
    |       |   | | `-DeclRefExpr 0x155145058 <col:5> 'int ()' Function 0x155144fa0 'pr_err' 'int ()'
    |       |   | `-ImplicitCastExpr 0x155145130 <col:12, line:39:12> 'char *' <ArrayToPointerDecay>
    |       |   |   `-StringLiteral 0x1551450c0 <line:37:12, line:39:12> 'char[10]' lvalue "STRSTRSTR"
    |       |   `-ReturnStmt 0x1551451e0 <line:40:5, col:13>
    |       |     `-UnaryOperator 0x1551451c8 <col:12, col:13> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       |       `-ImplicitCastExpr 0x1551451b0 <col:13> '<dependent type>' contains-errors <LValueToRValue>
    |       |         `-RecoveryExpr 0x155145190 <col:13> '<dependent type>' contains-errors lvalue
    |       `-BinaryOperator 0x155145390 <line:42:4, col:40> '<dependent type>' contains-errors '='
    |         |-ArraySubscriptExpr 0x1551452e0 <col:4, col:24> '<dependent type>' contains-errors lvalue
    |         | |-ImplicitCastExpr 0x1551452b0 <col:4, col:13> '<dependent type>' contains-errors <LValueToRValue>
    |         | | `-RecoveryExpr 0x155145268 <col:4, col:13> '<dependent type>' contains-errors lvalue
    |         | |   `-DeclRefExpr 0x155145230 <col:4> 'struct xt_table_info *' lvalue ParmVar 0x155140a28 'newinfo' 'struct xt_table_info *'
    |         | `-ImplicitCastExpr 0x1551452c8 <col:23> 'unsigned int' <LValueToRValue>
    |         |   `-DeclRefExpr 0x155145290 <col:23> 'unsigned int' lvalue Var 0x155140fe8 'h' 'unsigned int'
    |         `-ArraySubscriptExpr 0x155145370 <col:28, col:40> 'const unsigned int' lvalue
    |           |-ImplicitCastExpr 0x155145340 <col:28> 'const unsigned int *' <LValueToRValue>
    |           | `-DeclRefExpr 0x155145300 <col:28> 'const unsigned int *' lvalue ParmVar 0x155140c88 'underflows' 'const unsigned int *'
    |           `-ImplicitCastExpr 0x155145358 <col:39> 'unsigned int' <LValueToRValue>
    |             `-DeclRefExpr 0x155145320 <col:39> 'unsigned int' lvalue Var 0x155140fe8 'h' 'unsigned int'
    |-BinaryOperator 0x155145cc8 <line:48:2, col:16> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x155145c80 <col:2, col:5> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x155145c48 <col:2> 'struct ip6t_entry *' lvalue ParmVar 0x155128648 'e' 'struct ip6t_entry *'
    | `-IntegerLiteral 0x155145ca8 <col:16> 'int' 0
    `-ReturnStmt 0x155145d08 <line:49:2, col:9>
      `-IntegerLiteral 0x155145ce8 <col:9> 'int' 0
