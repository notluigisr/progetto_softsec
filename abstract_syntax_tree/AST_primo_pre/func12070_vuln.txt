`-FunctionDecl 0x14c8c6c88  line:2:5 invalid read_escaped_char 'int (int, int *)'
  |-ParmVarDecl 0x14c8c6af0 <line:3:5, col:14> col:14 invalid yyscanner 'int'
  |-ParmVarDecl 0x14c8c6ba8 <line:4:5, col:14> col:14 invalid escaped_char 'int *'
  `-CompoundStmt 0x14c8dfbc8 <line:5:1, line:29:12>
    |-DeclStmt 0x14c8c6ff8 <line:6:3, col:30>
    | `-VarDecl 0x14c8c6de0 <col:3, col:29> col:8 used text 'char[4]' cinit
    |   `-InitListExpr 0x14c8c6f38 <col:18, col:29> 'char[4]'
    |     |-ImplicitCastExpr 0x14c8c6f98 <col:19> 'char' <IntegralCast>
    |     | `-IntegerLiteral 0x14c8c6e48 <col:19> 'int' 0
    |     |-ImplicitCastExpr 0x14c8c6fb0 <col:22> 'char' <IntegralCast>
    |     | `-IntegerLiteral 0x14c8c6e68 <col:22> 'int' 0
    |     |-ImplicitCastExpr 0x14c8c6fc8 <col:25> 'char' <IntegralCast>
    |     | `-IntegerLiteral 0x14c8c6e88 <col:25> 'int' 0
    |     `-ImplicitCastExpr 0x14c8c6fe0 <col:28> 'char' <IntegralCast>
    |       `-IntegerLiteral 0x14c8c6ea8 <col:28> 'int' 0
    |-BinaryOperator 0x14c8c70b8 <line:8:3, col:13> 'char' '='
    | |-ArraySubscriptExpr 0x14c8c7068 <col:3, col:9> 'char' lvalue
    | | |-ImplicitCastExpr 0x14c8c7050 <col:3> 'char *' <ArrayToPointerDecay>
    | | | `-DeclRefExpr 0x14c8c7010 <col:3> 'char[4]' lvalue Var 0x14c8c6de0 'text' 'char[4]'
    | | `-IntegerLiteral 0x14c8c7030 <col:8> 'int' 0
    | `-ImplicitCastExpr 0x14c8c70a0 <col:13> 'char' <IntegralCast>
    |   `-CharacterLiteral 0x14c8c7088 <col:13> 'int' 92
    |-BinaryOperator 0x14c8df120 <line:9:3, col:34> 'char' contains-errors '='
    | |-ArraySubscriptExpr 0x14c8c7130 <col:3, col:9> 'char' lvalue
    | | |-ImplicitCastExpr 0x14c8c7118 <col:3> 'char *' <ArrayToPointerDecay>
    | | | `-DeclRefExpr 0x14c8c70d8 <col:3> 'char[4]' lvalue Var 0x14c8c6de0 'text' 'char[4]'
    | | `-IntegerLiteral 0x14c8c70f8 <col:8> 'int' 1
    | `-CallExpr 0x14c8df0f8 <col:13, col:34> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14c8df0b8 <col:13> 'int ()' Function 0x14c8df000 'RE_YY_INPUT' 'int ()'
    |   `-RecoveryExpr 0x14c8df0d8 <col:25> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14c8df2d0 <line:11:3, line:12:12>
    | |-BinaryOperator 0x14c8df280 <line:11:7, col:18> 'int' contains-errors '=='
    | | |-ArraySubscriptExpr 0x14c8df240 <col:7, col:13> 'char' lvalue
    | | | |-ImplicitCastExpr 0x14c8df228 <col:7> 'char *' <ArrayToPointerDecay>
    | | | | `-DeclRefExpr 0x14c8df140 <col:7> 'char[4]' lvalue Var 0x14c8c6de0 'text' 'char[4]'
    | | | `-IntegerLiteral 0x14c8df160 <col:12> 'int' 1
    | | `-RecoveryExpr 0x14c8df260 <col:18> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x14c8df2c0 <line:12:5, col:12>
    |   `-IntegerLiteral 0x14c8df2a0 <col:12> 'int' 0
    |-IfStmt 0x14c8df960 <line:14:3, line:25:3>
    | |-BinaryOperator 0x14c8df3b0 <line:14:7, col:18> 'int' '=='
    | | |-ImplicitCastExpr 0x14c8df398 <col:7, col:13> 'int' <IntegralCast>
    | | | `-ImplicitCastExpr 0x14c8df380 <col:7, col:13> 'char' <LValueToRValue>
    | | |   `-ArraySubscriptExpr 0x14c8df348 <col:7, col:13> 'char' lvalue
    | | |     |-ImplicitCastExpr 0x14c8df330 <col:7> 'char *' <ArrayToPointerDecay>
    | | |     | `-DeclRefExpr 0x14c8df2f0 <col:7> 'char[4]' lvalue Var 0x14c8c6de0 'text' 'char[4]'
    | | |     `-IntegerLiteral 0x14c8df310 <col:12> 'int' 1
    | | `-CharacterLiteral 0x14c8df368 <col:18> 'int' 120
    | `-CompoundStmt 0x14c8df930 <line:15:3, line:25:3>
    |   |-BinaryOperator 0x14c8df4b0 <line:16:5, col:36> 'char' contains-errors '='
    |   | |-ArraySubscriptExpr 0x14c8df428 <col:5, col:11> 'char' lvalue
    |   | | |-ImplicitCastExpr 0x14c8df410 <col:5> 'char *' <ArrayToPointerDecay>
    |   | | | `-DeclRefExpr 0x14c8df3d0 <col:5> 'char[4]' lvalue Var 0x14c8c6de0 'text' 'char[4]'
    |   | | `-IntegerLiteral 0x14c8df3f0 <col:10> 'int' 2
    |   | `-CallExpr 0x14c8df488 <col:15, col:36> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x14c8df448 <col:15> 'int ()' Function 0x14c8df000 'RE_YY_INPUT' 'int ()'
    |   |   `-RecoveryExpr 0x14c8df468 <col:27> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x14c8df660 <line:18:5, line:19:14>
    |   | |-BinaryOperator 0x14c8df610 <line:18:9, col:20> 'int' contains-errors '=='
    |   | | |-ArraySubscriptExpr 0x14c8df5d0 <col:9, col:15> 'char' lvalue
    |   | | | |-ImplicitCastExpr 0x14c8df5b8 <col:9> 'char *' <ArrayToPointerDecay>
    |   | | | | `-DeclRefExpr 0x14c8df4d0 <col:9> 'char[4]' lvalue Var 0x14c8c6de0 'text' 'char[4]'
    |   | | | `-IntegerLiteral 0x14c8df4f0 <col:14> 'int' 2
    |   | | `-RecoveryExpr 0x14c8df5f0 <col:20> '<dependent type>' contains-errors lvalue
    |   | `-ReturnStmt 0x14c8df650 <line:19:7, col:14>
    |   |   `-IntegerLiteral 0x14c8df630 <col:14> 'int' 0
    |   |-BinaryOperator 0x14c8df760 <line:21:5, col:36> 'char' contains-errors '='
    |   | |-ArraySubscriptExpr 0x14c8df6d8 <col:5, col:11> 'char' lvalue
    |   | | |-ImplicitCastExpr 0x14c8df6c0 <col:5> 'char *' <ArrayToPointerDecay>
    |   | | | `-DeclRefExpr 0x14c8df680 <col:5> 'char[4]' lvalue Var 0x14c8c6de0 'text' 'char[4]'
    |   | | `-IntegerLiteral 0x14c8df6a0 <col:10> 'int' 3
    |   | `-CallExpr 0x14c8df738 <col:15, col:36> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x14c8df6f8 <col:15> 'int ()' Function 0x14c8df000 'RE_YY_INPUT' 'int ()'
    |   |   `-RecoveryExpr 0x14c8df718 <col:27> '<dependent type>' contains-errors lvalue
    |   `-IfStmt 0x14c8df910 <line:23:5, line:24:14>
    |     |-BinaryOperator 0x14c8df8c0 <line:23:9, col:20> 'int' contains-errors '=='
    |     | |-ArraySubscriptExpr 0x14c8df880 <col:9, col:15> 'char' lvalue
    |     | | |-ImplicitCastExpr 0x14c8df868 <col:9> 'char *' <ArrayToPointerDecay>
    |     | | | `-DeclRefExpr 0x14c8df780 <col:9> 'char[4]' lvalue Var 0x14c8c6de0 'text' 'char[4]'
    |     | | `-IntegerLiteral 0x14c8df7a0 <col:14> 'int' 3
    |     | `-RecoveryExpr 0x14c8df8a0 <col:20> '<dependent type>' contains-errors lvalue
    |     `-ReturnStmt 0x14c8df900 <line:24:7, col:14>
    |       `-IntegerLiteral 0x14c8df8e0 <col:14> 'int' 0
    |-BinaryOperator 0x14c8dfb78 <line:27:3, col:42> '<dependent type>' contains-errors '='
    | |-UnaryOperator 0x14c8df9b8 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x14c8df9a0 <col:4> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x14c8df980 <col:4> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x14c8dfb38 <col:19, col:42> 'int'
    |   |-ImplicitCastExpr 0x14c8dfb20 <col:19> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x14c8dfab0 <col:19> 'int ()' Function 0x14c8df9f8 'escaped_char_value' 'int ()'
    |   `-ImplicitCastExpr 0x14c8dfb60 <col:38> 'char *' <ArrayToPointerDecay>
    |     `-DeclRefExpr 0x14c8dfad0 <col:38> 'char[4]' lvalue Var 0x14c8c6de0 'text' 'char[4]'
    `-ReturnStmt 0x14c8dfbb8 <line:29:3, col:10>
      `-IntegerLiteral 0x14c8dfb98 <col:10> 'int' 1
