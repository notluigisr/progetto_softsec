`-FunctionDecl 0x154928268  line:1:5 main 'int (int, char **)'
  |-ParmVarDecl 0x1549280d8 <col:10, col:14> col:14 argc 'int'
  |-ParmVarDecl 0x154928188 <col:20, col:27> col:27 argv 'char **'
  `-CompoundStmt 0x154941e00 <line:2:1, line:11:1>
    |-DeclStmt 0x1549284f0 <line:3:5, col:33>
    | |-VarDecl 0x154928380 <col:5, col:16> col:9 used ret 'int' cinit
    | | `-UnaryOperator 0x154928408 <col:15, col:16> 'int' prefix '-'
    | |   `-IntegerLiteral 0x1549283e8 <col:16> 'int' 1
    | `-VarDecl 0x154928438 <col:5, col:32> col:19 used argc_utf8 'int' cinit
    |   `-UnaryOperator 0x1549284c0 <col:31, col:32> 'int' prefix '-'
    |     `-IntegerLiteral 0x1549284a0 <col:32> 'int' 1
    |-DeclStmt 0x1549285d8 <line:4:5, col:28>
    | `-VarDecl 0x154928520 <col:5, col:24> col:12 used argv_utf8 'char **' cinit
    |   `-RecoveryExpr 0x1549285b8 <col:24> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x154941848 <line:6:5, col:59> 'int' contains-errors
    | |-ImplicitCastExpr 0x154941830 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x154928700 <col:5> 'int ()' Function 0x154928648 'init_commandline_arguments_utf8' 'int ()'
    | |-UnaryOperator 0x154928770 <col:37, col:38> 'int *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x154928720 <col:38> 'int' lvalue Var 0x154928438 'argc_utf8' 'int'
    | `-UnaryOperator 0x1549287e0 <col:49, col:50> 'char ***' contains-errors prefix '&' cannot overflow
    |   `-DeclRefExpr 0x154928788 <col:50> 'char **' contains-errors lvalue Var 0x154928520 'argv_utf8' 'char **'
    |-BinaryOperator 0x154941a50 <line:7:5, col:45> 'int' contains-errors '='
    | |-DeclRefExpr 0x154941878 <col:5> 'int' lvalue Var 0x154928380 'ret' 'int'
    | `-CallExpr 0x1549419f0 <col:11, col:45> 'int' contains-errors
    |   |-ImplicitCastExpr 0x1549419d8 <col:11> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x154941978 <col:11> 'int ()' Function 0x1549418c0 'wvunpack_main' 'int ()'
    |   |-ImplicitCastExpr 0x154941a20 <col:25> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x154941998 <col:25> 'int' lvalue Var 0x154928438 'argc_utf8' 'int'
    |   `-ImplicitCastExpr 0x154941a38 <col:36> 'char **' contains-errors <LValueToRValue>
    |     `-DeclRefExpr 0x1549419b8 <col:36> 'char **' contains-errors lvalue Var 0x154928520 'argv_utf8' 'char **'
    |-CallExpr 0x154941bf8 <line:8:5, col:59> 'int' contains-errors
    | |-ImplicitCastExpr 0x154941be0 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x154941b50 <col:5> 'int ()' Function 0x154941a98 'free_commandline_arguments_utf8' 'int ()'
    | |-UnaryOperator 0x154941b90 <col:37, col:38> 'int *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x154941b70 <col:38> 'int' lvalue Var 0x154928438 'argc_utf8' 'int'
    | `-UnaryOperator 0x154941bc8 <col:49, col:50> 'char ***' contains-errors prefix '&' cannot overflow
    |   `-DeclRefExpr 0x154941ba8 <col:50> 'char **' contains-errors lvalue Var 0x154928520 'argv_utf8' 'char **'
    |-IfStmt 0x154941d98 <line:9:5, col:36>
    | |-RecoveryExpr 0x154941c40 <col:9> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x154941d78 <col:21, col:36> 'int'
    |   `-ImplicitCastExpr 0x154941d60 <col:21> 'int (*)()' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x154941d40 <col:21> 'int ()' Function 0x154941c88 'do_pause_mode' 'int ()'
    `-ReturnStmt 0x154941df0 <line:10:5, col:12>
      `-ImplicitCastExpr 0x154941dd8 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x154941db8 <col:12> 'int' lvalue Var 0x154928380 'ret' 'int'
