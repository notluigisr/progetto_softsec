`-FunctionDecl 0x123027400  line:1:17 invalid sys_setrlimit 'int (unsigned int, struct rlimit)'
  |-ParmVarDecl 0x12300dcf0 <col:31, col:44> col:44 used resource 'unsigned int'
  |-ParmVarDecl 0x12300e278 <col:54, col:68> col:68 invalid __user 'struct rlimit'
  `-CompoundStmt 0x12302b0c0 <line:2:1, line:53:1>
    |-DeclStmt 0x123027688 <line:3:2, col:35>
    | |-VarDecl 0x123027510 <col:2, col:16> col:16 invalid new_rlim 'struct rlimit'
    | `-VarDecl 0x123027608 <col:2, col:27> col:27 used old_rlim 'struct rlimit *'
    |-DeclStmt 0x123027720 <line:4:2, col:28>
    | `-VarDecl 0x1230276b8 <col:2, col:16> col:16 used it_prof_secs 'unsigned long'
    |-DeclStmt 0x1230277b8 <line:5:2, col:12>
    | `-VarDecl 0x123027750 <col:2, col:6> col:6 used retval 'int'
    |-IfStmt 0x123027910 <line:7:2, line:8:11>
    | |-BinaryOperator 0x123027848 <line:7:6, col:18> 'int' contains-errors '>='
    | | |-DeclRefExpr 0x1230277d0 <col:6> 'unsigned int' lvalue ParmVar 0x12300dcf0 'resource' 'unsigned int'
    | | `-RecoveryExpr 0x123027828 <col:18> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x123027900 <line:8:3, col:11>
    |   `-UnaryOperator 0x1230278e8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x1230278d0 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x1230278b0 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x123027c10 <line:9:2, line:10:11>
    | |-RecoveryExpr 0x123027b48 <line:9:6, col:51> '_Bool' contains-errors
    | `-ReturnStmt 0x123027c00 <line:10:3, col:11>
    |   `-UnaryOperator 0x123027be8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x123027bd0 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x123027bb0 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x123027dc8 <line:11:2, line:12:11>
    | |-BinaryOperator 0x123027d00 <line:11:6, col:35> 'int' contains-errors '>'
    | | |-CXXDependentScopeMemberExpr 0x123027c50 <col:6, col:15> '<dependent type>' contains-errors lvalue .rlim_cur
    | | | `-RecoveryExpr 0x123027c30 <col:6> '<dependent type>' contains-errors lvalue
    | | `-CXXDependentScopeMemberExpr 0x123027cb8 <col:26, col:35> '<dependent type>' contains-errors lvalue .rlim_max
    | |   `-RecoveryExpr 0x123027c98 <col:26> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x123027db8 <line:12:3, col:11>
    |   `-UnaryOperator 0x123027da0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x123027d88 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x123027d68 <col:11> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x123027fe0 <line:13:2, col:37> 'struct rlimit *' contains-errors '='
    | |-DeclRefExpr 0x123027de8 <col:2> 'struct rlimit *' lvalue Var 0x123027608 'old_rlim' 'struct rlimit *'
    | `-BinaryOperator 0x123027fc0 <col:13, col:37> '<dependent type>' contains-errors '+'
    |   |-CXXDependentScopeMemberExpr 0x123027f78 <col:13, col:30> '<dependent type>' contains-errors lvalue ->rlim
    |   | `-CXXDependentScopeMemberExpr 0x123027f30 <col:13, col:22> '<dependent type>' contains-errors lvalue ->signal
    |   |   `-RecoveryExpr 0x123027f10 <col:13> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x123027eb0 <col:37> 'unsigned int' lvalue ParmVar 0x12300dcf0 'resource' 'unsigned int'
    |-IfStmt 0x1230283a8 <line:14:2, line:16:11>
    | |-BinaryOperator 0x1230282e0 <line:14:6, line:15:31> 'int' contains-errors '&&'
    | | |-ParenExpr 0x1230280e8 <line:14:6, col:45> 'int' contains-errors
    | | | `-BinaryOperator 0x1230280c8 <col:7, col:37> 'int' contains-errors '>'
    | | |   |-CXXDependentScopeMemberExpr 0x123028020 <col:7, col:16> '<dependent type>' contains-errors lvalue .rlim_max
    | | |   | `-RecoveryExpr 0x123028000 <col:7> '<dependent type>' contains-errors lvalue
    | | |   `-RecoveryExpr 0x1230280a0 <col:27, col:37> '<dependent type>' contains-errors lvalue
    | | |     `-DeclRefExpr 0x123028068 <col:27> 'struct rlimit *' lvalue Var 0x123027608 'old_rlim' 'struct rlimit *'
    | | `-UnaryOperator 0x1230282c8 <line:15:6, col:31> '<dependent type>' contains-errors prefix '!' cannot overflow
    | |   `-CallExpr 0x1230282a0 <col:7, col:31> '<dependent type>' contains-errors
    | |     |-DeclRefExpr 0x1230281e8 <col:7> 'int ()' Function 0x123028130 'capable' 'int ()'
    | |     `-RecoveryExpr 0x123028280 <col:15> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x123028398 <line:16:3, col:11>
    |   `-UnaryOperator 0x123028380 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x123028368 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x123028348 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x123029a28 <line:17:2, line:18:11>
    | |-BinaryOperator 0x123029960 <line:17:6, col:55> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x123029900 <col:6, col:18> 'int' contains-errors '=='
    | | | |-DeclRefExpr 0x1230283c8 <col:6> 'unsigned int' lvalue ParmVar 0x12300dcf0 'resource' 'unsigned int'
    | | | `-RecoveryExpr 0x1230298e0 <col:18> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x123029940 <col:35, col:55> 'int' contains-errors '>'
    | |   |-CXXDependentScopeMemberExpr 0x123029840 <col:35, col:44> '<dependent type>' contains-errors lvalue .rlim_max
    | |   | `-RecoveryExpr 0x123029820 <col:35> '<dependent type>' contains-errors lvalue
    | |   `-RecoveryExpr 0x123029920 <col:55> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x123029a18 <line:18:3, col:11>
    |   `-UnaryOperator 0x123029a00 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x1230299e8 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x1230299c8 <col:11> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x123029bf0 <line:20:2, col:54> 'int' contains-errors '='
    | |-DeclRefExpr 0x123029a48 <col:2> 'int' lvalue Var 0x123027750 'retval' 'int'
    | `-CallExpr 0x123029bc0 <col:11, col:54> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x123029b48 <col:11> 'int ()' Function 0x123029a90 'security_task_setrlimit' 'int ()'
    |   |-DeclRefExpr 0x123029b68 <col:35> 'unsigned int' lvalue ParmVar 0x12300dcf0 'resource' 'unsigned int'
    |   `-UnaryOperator 0x123029ba8 <col:45, col:46> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x123029b88 <col:46> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x123029c90 <line:21:2, line:22:10>
    | |-ImplicitCastExpr 0x123029c30 <line:21:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x123029c10 <col:6> 'int' lvalue Var 0x123027750 'retval' 'int'
    | `-ReturnStmt 0x123029c80 <line:22:3, col:10>
    |   `-ImplicitCastExpr 0x123029c68 <col:10> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x123029c48 <col:10> 'int' lvalue Var 0x123027750 'retval' 'int'
    |-BinaryOperator 0x123029e20 <line:25:2, col:14> 'struct rlimit' contains-errors '='
    | |-UnaryOperator 0x123029de8 <col:2, col:3> 'struct rlimit' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x123029dd0 <col:3> 'struct rlimit *' <LValueToRValue>
    | |   `-DeclRefExpr 0x123029db0 <col:3> 'struct rlimit *' lvalue Var 0x123027608 'old_rlim' 'struct rlimit *'
    | `-RecoveryExpr 0x123029e00 <col:14> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x123029fe8 <line:28:2, line:29:8>
    | |-RecoveryExpr 0x123029f60 <line:28:6, col:18> '_Bool' contains-errors
    | `-GotoStmt 0x123029fd0 <line:29:3, col:8> 'out' 0x123029f80
    |-IfStmt 0x12302a0a8 <line:32:2, line:33:8>
    | |-RecoveryExpr 0x12302a070 <line:32:6, col:27> '_Bool' contains-errors
    | `-GotoStmt 0x12302a090 <line:33:3, col:8> 'out' 0x123029f80
    |-IfStmt 0x12302b050 <line:36:2, line:50:2>
    | |-BinaryOperator 0x12302a320 <line:36:6, col:48> 'int' contains-errors '||'
    | | |-BinaryOperator 0x12302a258 <col:6, col:22> 'int' '=='
    | | | |-ImplicitCastExpr 0x12302a228 <col:6> 'unsigned long' <LValueToRValue>
    | | | | `-DeclRefExpr 0x12302a1e8 <col:6> 'unsigned long' lvalue Var 0x1230276b8 'it_prof_secs' 'unsigned long'
    | | | `-ImplicitCastExpr 0x12302a240 <col:22> 'unsigned long' <IntegralCast>
    | | |   `-IntegerLiteral 0x12302a208 <col:22> 'int' 0
    | | `-BinaryOperator 0x12302a300 <col:27, col:48> 'int' contains-errors '<='
    | |   |-CXXDependentScopeMemberExpr 0x12302a298 <col:27, col:36> '<dependent type>' contains-errors lvalue .rlim_cur
    | |   | `-RecoveryExpr 0x12302a278 <col:27> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x12302a2e0 <col:48> 'unsigned long' lvalue Var 0x1230276b8 'it_prof_secs' 'unsigned long'
    | `-CompoundStmt 0x12302b030 <col:62, line:50:2>
    |   |-DeclStmt 0x12302a428 <line:37:3, col:45>
    |   | `-VarDecl 0x12302a358 <col:3, col:37> col:17 used rlim_cur 'unsigned long' cinit
    |   |   `-CXXDependentScopeMemberExpr 0x12302a3e0 <col:28, col:37> '<dependent type>' contains-errors lvalue .rlim_cur
    |   |     `-RecoveryExpr 0x12302a3c0 <col:28> '<dependent type>' contains-errors lvalue
    |   `-IfStmt 0x12302a560 <line:40:3, line:43:3>
    |     |-BinaryOperator 0x12302a4b0 <line:40:7, col:19> 'int' contains-errors '=='
    |     | |-ImplicitCastExpr 0x12302a480 <col:7> 'unsigned long' contains-errors <LValueToRValue>
    |     | | `-DeclRefExpr 0x12302a440 <col:7> 'unsigned long' contains-errors lvalue Var 0x12302a358 'rlim_cur' 'unsigned long'
    |     | `-ImplicitCastExpr 0x12302a498 <col:19> 'unsigned long' <IntegralCast>
    |     |   `-IntegerLiteral 0x12302a460 <col:19> 'int' 0
    |     `-CompoundStmt 0x12302a548 <col:22, line:43:3>
    |       `-BinaryOperator 0x12302a528 <line:42:4, col:15> 'unsigned long' contains-errors '='
    |         |-DeclRefExpr 0x12302a4d0 <col:4> 'unsigned long' contains-errors lvalue Var 0x12302a358 'rlim_cur' 'unsigned long'
    |         `-ImplicitCastExpr 0x12302a510 <col:15> 'unsigned long' <IntegralCast>
    |           `-IntegerLiteral 0x12302a4f0 <col:15> 'int' 1
    `-LabelStmt 0x12302b0a0 <line:51:1, line:52:9> 'out'
      `-ReturnStmt 0x12302b090 <col:2, col:9>
        `-IntegerLiteral 0x12302b070 <col:9> 'int' 0
