`-FunctionDecl 0x15000dda8  line:1:1 parity_next 'int (int)'
  |-ParmVarDecl 0x15000dcd8 <col:14, col:18> col:18 used parity 'int'
  `-CompoundStmt 0x15000e298 <line:2:1, line:19:1>
    |-SwitchStmt 0x15000ded8 <line:3:2, line:16:2>
    | |-ImplicitCastExpr 0x15000dec0 <line:3:9> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x15000dea0 <col:9> 'int' lvalue ParmVar 0x15000dcd8 'parity' 'int'
    | `-CompoundStmt 0x15000e200 <col:17, line:16:2>
    |   |-BinaryOperator 0x15000dfa8 <line:5:3, col:12> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x15000df30 <col:3> 'int' lvalue ParmVar 0x15000dcd8 'parity' 'int'
    |   | `-RecoveryExpr 0x15000df88 <col:12> '<dependent type>' contains-errors lvalue
    |   |-BreakStmt 0x15000dfc8 <line:6:3>
    |   |-BinaryOperator 0x15000e060 <line:8:3, col:12> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x15000dfe8 <col:3> 'int' lvalue ParmVar 0x15000dcd8 'parity' 'int'
    |   | `-RecoveryExpr 0x15000e040 <col:12> '<dependent type>' contains-errors lvalue
    |   |-BreakStmt 0x15000e080 <line:9:3>
    |   |-BinaryOperator 0x15000e118 <line:11:3, col:12> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x15000e0a0 <col:3> 'int' lvalue ParmVar 0x15000dcd8 'parity' 'int'
    |   | `-RecoveryExpr 0x15000e0f8 <col:12> '<dependent type>' contains-errors lvalue
    |   |-BreakStmt 0x15000e138 <line:12:3>
    |   |-DefaultStmt 0x15000e1d8 <line:13:2, line:14:12>
    |   | `-BinaryOperator 0x15000e1b8 <col:3, col:12> 'int' contains-errors '='
    |   |   |-DeclRefExpr 0x15000e140 <col:3> 'int' lvalue ParmVar 0x15000dcd8 'parity' 'int'
    |   |   `-RecoveryExpr 0x15000e198 <col:12> '<dependent type>' contains-errors lvalue
    |   `-BreakStmt 0x15000e1f8 <line:15:3>
    `-ReturnStmt 0x15000e288 <line:18:2, col:9>
      `-ImplicitCastExpr 0x15000e270 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x15000e250 <col:9> 'int' lvalue ParmVar 0x15000dcd8 'parity' 'int'
