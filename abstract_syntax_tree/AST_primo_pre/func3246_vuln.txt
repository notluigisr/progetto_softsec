`-FunctionDecl 0x16000ddf8  line:1:5 invalid mp_pack 'int (int *)'
  |-ParmVarDecl 0x16000dd28 <col:13, col:24> col:24 invalid L 'int *'
  `-CompoundStmt 0x160028cc8 <col:27, line:30:1>
    |-DeclStmt 0x16000e0e8 <line:2:5, col:30>
    | `-VarDecl 0x16000dec0 <col:5, col:29> col:9 used nargs 'int' cinit
    |   `-CallExpr 0x16000e0c0 <col:17, col:29> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x16000e080 <col:17> 'int ()' Function 0x16000dfc8 'lua_gettop' 'int ()'
    |     `-RecoveryExpr 0x16000e0a0 <col:28> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x16000e180 <line:3:5, col:10>
    | `-VarDecl 0x16000e118 <col:5, col:9> col:9 used i 'int'
    |-IfStmt 0x160027e48 <line:6:5, line:7:41>
    | |-BinaryOperator 0x16000e208 <line:6:9, col:18> 'int' contains-errors '=='
    | | |-ImplicitCastExpr 0x16000e1f0 <col:9> 'int' contains-errors <LValueToRValue>
    | | | `-DeclRefExpr 0x16000e1b0 <col:9> 'int' contains-errors lvalue Var 0x16000dec0 'nargs' 'int'
    | | `-IntegerLiteral 0x16000e1d0 <col:18> 'int' 0
    | `-ReturnStmt 0x160027e38 <line:7:9, col:41>
    |   `-CallExpr 0x160027e00 <col:16, col:41> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x16000e308 <col:16> 'int ()' Function 0x16000e250 'luaL_argerror' 'int ()'
    |     |-RecoveryExpr 0x16000e328 <col:30> '<dependent type>' contains-errors lvalue
    |     |-IntegerLiteral 0x16000e348 <col:33> 'int' 0
    |     `-StringLiteral 0x16000e3b0 <col:36> 'char[4]' lvalue "STR"
    |-IfStmt 0x1600280b8 <line:9:5, line:10:41>
    | |-UnaryOperator 0x160027fd8 <line:9:9, col:33> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-CallExpr 0x160027fa8 <col:10, col:33> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x160027f48 <col:10> 'int ()' Function 0x160027e90 'lua_checkstack' 'int ()'
    | |   |-RecoveryExpr 0x160027f68 <col:25> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x160027f88 <col:28> 'int' contains-errors lvalue Var 0x16000dec0 'nargs' 'int'
    | `-ReturnStmt 0x1600280a8 <line:10:9, col:41>
    |   `-CallExpr 0x160028070 <col:16, col:41> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x160027ff0 <col:16> 'int ()' Function 0x16000e250 'luaL_argerror' 'int ()'
    |     |-RecoveryExpr 0x160028010 <col:30> '<dependent type>' contains-errors lvalue
    |     |-IntegerLiteral 0x160028030 <col:33> 'int' 0
    |     `-StringLiteral 0x160028050 <col:36> 'char[4]' lvalue "STR"
    |-ForStmt 0x160028938 <line:13:5, line:24:5>
    | |-BinaryOperator 0x160028260 <line:13:9, col:13> 'int' '='
    | | |-DeclRefExpr 0x160028220 <col:9> 'int' lvalue Var 0x16000e118 'i' 'int'
    | | `-IntegerLiteral 0x160028240 <col:13> 'int' 1
    | |-<<<NULL>>>
    | |-BinaryOperator 0x1600282f0 <col:16, col:21> 'int' contains-errors '<='
    | | |-ImplicitCastExpr 0x1600282c0 <col:16> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x160028280 <col:16> 'int' lvalue Var 0x16000e118 'i' 'int'
    | | `-ImplicitCastExpr 0x1600282d8 <col:21> 'int' contains-errors <LValueToRValue>
    | |   `-DeclRefExpr 0x1600282a0 <col:21> 'int' contains-errors lvalue Var 0x16000dec0 'nargs' 'int'
    | |-UnaryOperator 0x160028330 <col:28, col:29> 'int' postfix '++'
    | | `-DeclRefExpr 0x160028310 <col:28> 'int' lvalue Var 0x16000e118 'i' 'int'
    | `-CompoundStmt 0x160028918 <col:33, line:24:5>
    |   |-CallExpr 0x160028488 <line:15:9, col:27> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x160028428 <col:9> 'int ()' Function 0x160028370 'lua_pushvalue' 'int ()'
    |   | |-RecoveryExpr 0x160028448 <col:23> '<dependent type>' contains-errors lvalue
    |   | `-DeclRefExpr 0x160028468 <col:26> 'int' lvalue Var 0x16000e118 'i' 'int'
    |   `-CallExpr 0x160028668 <line:17:9, col:35> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x160028598 <col:9> 'int ()' Function 0x1600284e0 'mp_encode_lua_type' 'int ()'
    |     |-RecoveryExpr 0x1600285b8 <col:28> '<dependent type>' contains-errors lvalue
    |     |-RecoveryExpr 0x160028648 <col:30> '<dependent type>' contains-errors lvalue
    |     `-IntegerLiteral 0x1600285f0 <col:34> 'int' 0
    |-CallExpr 0x160028af8 <line:25:5, col:23> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x160028a50 <col:5> 'int ()' Function 0x160028998 'mp_buf_free' 'int ()'
    | |-RecoveryExpr 0x160028a70 <col:17> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x160028ad8 <col:20> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x160028c68 <line:28:5, col:24> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x160028c08 <col:5> 'int ()' Function 0x160028b50 'lua_concat' 'int ()'
    | |-RecoveryExpr 0x160028c28 <col:16> '<dependent type>' contains-errors lvalue
    | `-DeclRefExpr 0x160028c48 <col:19> 'int' contains-errors lvalue Var 0x16000dec0 'nargs' 'int'
    `-ReturnStmt 0x160028cb8 <line:29:5, col:12>
      `-IntegerLiteral 0x160028c98 <col:12> 'int' 1
