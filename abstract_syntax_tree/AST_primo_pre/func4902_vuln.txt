`-FunctionDecl 0x15301c518  line:1:1 invalid read_pbm_integer 'int (int, int *, unsigned int)'
  |-ParmVarDecl 0x15301c2f0 <col:18, col:33> col:33 invalid cinfo 'int'
  |-ParmVarDecl 0x15301c3a8 <col:40, col:46> col:46 invalid infile 'int *'
  |-ParmVarDecl 0x15301c428 <col:54, col:67> col:67 used maxval 'unsigned int'
  `-CompoundStmt 0x15382dfe8 <line:6:1, line:30:1>
    |-DeclStmt 0x15301c658 <line:7:3, col:18>
    | `-VarDecl 0x15301c5f0 <col:3, col:16> col:16 used ch 'int' register
    |-DeclStmt 0x15301c6f0 <line:8:3, col:28>
    | `-VarDecl 0x15301c688 <col:3, col:25> col:25 used val 'unsigned int' register
    |-DoStmt 0x15382d7f0 <line:11:3, line:15:63>
    | |-CompoundStmt 0x15382d5b0 <line:11:6, line:15:3>
    | | |-BinaryOperator 0x15301c8e8 <line:12:5, col:25> 'int' contains-errors '='
    | | | |-DeclRefExpr 0x15301c708 <col:5> 'int' lvalue Var 0x15301c5f0 'ch' 'int'
    | | | `-CallExpr 0x15301c8c0 <col:10, col:25> '<dependent type>' contains-errors
    | | |   |-DeclRefExpr 0x15301c880 <col:10> 'int ()' Function 0x15301c7c8 'pbm_getc' 'int ()'
    | | |   `-RecoveryExpr 0x15301c8a0 <col:19> '<dependent type>' contains-errors lvalue
    | | `-IfStmt 0x15382d590 <line:13:5, line:14:36>
    | |   |-BinaryOperator 0x15301c980 <line:13:9, col:15> 'int' contains-errors '=='
    | |   | |-DeclRefExpr 0x15301c908 <col:9> 'int' lvalue Var 0x15301c5f0 'ch' 'int'
    | |   | `-RecoveryExpr 0x15301c960 <col:15> '<dependent type>' contains-errors lvalue
    | |   `-CallExpr 0x15382d560 <line:14:7, col:36> '<dependent type>' contains-errors
    | |     |-DeclRefExpr 0x15382d4b8 <col:7> 'int ()' Function 0x15382d400 'ERREXIT' 'int ()'
    | |     |-RecoveryExpr 0x15382d4d8 <col:15> '<dependent type>' contains-errors lvalue
    | |     `-RecoveryExpr 0x15382d540 <col:22> '<dependent type>' contains-errors lvalue
    | `-BinaryOperator 0x15382d7d0 <line:15:12, col:59> 'int' '||'
    |   |-BinaryOperator 0x15382d740 <col:12, col:45> 'int' '||'
    |   | |-BinaryOperator 0x15382d6b0 <col:12, col:31> 'int' '||'
    |   | | |-BinaryOperator 0x15382d620 <col:12, col:18> 'int' '=='
    |   | | | |-ImplicitCastExpr 0x15382d608 <col:12> 'int' <LValueToRValue>
    |   | | | | `-DeclRefExpr 0x15382d5d0 <col:12> 'int' lvalue Var 0x15301c5f0 'ch' 'int'
    |   | | | `-CharacterLiteral 0x15382d5f0 <col:18> 'int' 32
    |   | | `-BinaryOperator 0x15382d690 <col:25, col:31> 'int' '=='
    |   | |   |-ImplicitCastExpr 0x15382d678 <col:25> 'int' <LValueToRValue>
    |   | |   | `-DeclRefExpr 0x15382d640 <col:25> 'int' lvalue Var 0x15301c5f0 'ch' 'int'
    |   | |   `-CharacterLiteral 0x15382d660 <col:31> 'int' 9
    |   | `-BinaryOperator 0x15382d720 <col:39, col:45> 'int' '=='
    |   |   |-ImplicitCastExpr 0x15382d708 <col:39> 'int' <LValueToRValue>
    |   |   | `-DeclRefExpr 0x15382d6d0 <col:39> 'int' lvalue Var 0x15301c5f0 'ch' 'int'
    |   |   `-CharacterLiteral 0x15382d6f0 <col:45> 'int' 10
    |   `-BinaryOperator 0x15382d7b0 <col:53, col:59> 'int' '=='
    |     |-ImplicitCastExpr 0x15382d798 <col:53> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x15382d760 <col:53> 'int' lvalue Var 0x15301c5f0 'ch' 'int'
    |     `-CharacterLiteral 0x15382d780 <col:59> 'int' 13
    |-IfStmt 0x15382d9e8 <line:17:3, line:18:39>
    | |-BinaryOperator 0x15382d8f0 <line:17:7, col:24> 'int' '||'
    | | |-BinaryOperator 0x15382d860 <col:7, col:12> 'int' '<'
    | | | |-ImplicitCastExpr 0x15382d848 <col:7> 'int' <LValueToRValue>
    | | | | `-DeclRefExpr 0x15382d810 <col:7> 'int' lvalue Var 0x15301c5f0 'ch' 'int'
    | | | `-CharacterLiteral 0x15382d830 <col:12> 'int' 48
    | | `-BinaryOperator 0x15382d8d0 <col:19, col:24> 'int' '>'
    | |   |-ImplicitCastExpr 0x15382d8b8 <col:19> 'int' <LValueToRValue>
    | |   | `-DeclRefExpr 0x15382d880 <col:19> 'int' lvalue Var 0x15301c5f0 'ch' 'int'
    | |   `-CharacterLiteral 0x15382d8a0 <col:24> 'int' 57
    | `-CallExpr 0x15382d9b8 <line:18:5, col:39> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x15382d910 <col:5> 'int ()' Function 0x15382d400 'ERREXIT' 'int ()'
    |   |-RecoveryExpr 0x15382d930 <col:13> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x15382d998 <col:20> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x15382dab0 <line:20:3, col:14> 'unsigned int' '='
    | |-DeclRefExpr 0x15382da08 <col:3> 'unsigned int' lvalue Var 0x15301c688 'val' 'unsigned int'
    | `-ImplicitCastExpr 0x15382da98 <col:9, col:14> 'unsigned int' <IntegralCast>
    |   `-BinaryOperator 0x15382da78 <col:9, col:14> 'int' '-'
    |     |-ImplicitCastExpr 0x15382da60 <col:9> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x15382da28 <col:9> 'int' lvalue Var 0x15301c5f0 'ch' 'int'
    |     `-CharacterLiteral 0x15382da48 <col:14> 'int' 48
    |-WhileStmt 0x15382dde0 <line:21:3, line:24:3>
    | |-BinaryOperator 0x15382dc40 <line:21:10, col:50> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x15382dbb0 <col:10, col:37> 'int' contains-errors '>='
    | | | |-ParenExpr 0x15382db78 <col:10, col:32> 'int' contains-errors
    | | | | `-BinaryOperator 0x15382db58 <col:11, col:31> 'int' contains-errors '='
    | | | |   |-DeclRefExpr 0x15382dad0 <col:11> 'int' lvalue Var 0x15301c5f0 'ch' 'int'
    | | | |   `-CallExpr 0x15382db30 <col:16, col:31> '<dependent type>' contains-errors
    | | | |     |-DeclRefExpr 0x15382daf0 <col:16> 'int ()' Function 0x15301c7c8 'pbm_getc' 'int ()'
    | | | |     `-RecoveryExpr 0x15382db10 <col:25> '<dependent type>' contains-errors lvalue
    | | | `-CharacterLiteral 0x15382db98 <col:37> 'int' 48
    | | `-BinaryOperator 0x15382dc20 <col:44, col:50> 'int' '<='
    | |   |-ImplicitCastExpr 0x15382dc08 <col:44> 'int' <LValueToRValue>
    | |   | `-DeclRefExpr 0x15382dbd0 <col:44> 'int' lvalue Var 0x15301c5f0 'ch' 'int'
    | |   `-CharacterLiteral 0x15382dbf0 <col:50> 'int' 57
    | `-CompoundStmt 0x15382ddc0 <col:55, line:24:3>
    |   |-CompoundAssignOperator 0x15382dcb8 <line:22:5, col:12> 'unsigned int' '*=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
    |   | |-DeclRefExpr 0x15382dc60 <col:5> 'unsigned int' lvalue Var 0x15301c688 'val' 'unsigned int'
    |   | `-ImplicitCastExpr 0x15382dca0 <col:12> 'unsigned int' <IntegralCast>
    |   |   `-IntegerLiteral 0x15382dc80 <col:12> 'int' 10
    |   `-CompoundAssignOperator 0x15382dd90 <line:23:5, col:17> 'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
    |     |-DeclRefExpr 0x15382dce8 <col:5> 'unsigned int' lvalue Var 0x15301c688 'val' 'unsigned int'
    |     `-ImplicitCastExpr 0x15382dd78 <col:12, col:17> 'unsigned int' <IntegralCast>
    |       `-BinaryOperator 0x15382dd58 <col:12, col:17> 'int' '-'
    |         |-ImplicitCastExpr 0x15382dd40 <col:12> 'int' <LValueToRValue>
    |         | `-DeclRefExpr 0x15382dd08 <col:12> 'int' lvalue Var 0x15301c5f0 'ch' 'int'
    |         `-CharacterLiteral 0x15382dd28 <col:17> 'int' 48
    |-IfStmt 0x15382df68 <line:26:3, line:27:37>
    | |-BinaryOperator 0x15382de70 <line:26:7, col:13> 'int' '>'
    | | |-ImplicitCastExpr 0x15382de40 <col:7> 'unsigned int' <LValueToRValue>
    | | | `-DeclRefExpr 0x15382de00 <col:7> 'unsigned int' lvalue Var 0x15301c688 'val' 'unsigned int'
    | | `-ImplicitCastExpr 0x15382de58 <col:13> 'unsigned int' <LValueToRValue>
    | |   `-DeclRefExpr 0x15382de20 <col:13> 'unsigned int' lvalue ParmVar 0x15301c428 'maxval' 'unsigned int'
    | `-CallExpr 0x15382df38 <line:27:5, col:37> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x15382de90 <col:5> 'int ()' Function 0x15382d400 'ERREXIT' 'int ()'
    |   |-RecoveryExpr 0x15382deb0 <col:13> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x15382df18 <col:20> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x15382dfd8 <line:29:3, col:10>
      `-ImplicitCastExpr 0x15382dfc0 <col:10> 'int' <IntegralCast>
        `-ImplicitCastExpr 0x15382dfa8 <col:10> 'unsigned int' <LValueToRValue>
          `-DeclRefExpr 0x15382df88 <col:10> 'unsigned int' lvalue Var 0x15301c688 'val' 'unsigned int'
