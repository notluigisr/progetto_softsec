`-FunctionDecl 0x12691fc38  line:1:1 PHP_METHOD 'int (int, int)'
  |-ParmVarDecl 0x12691fb58 <col:12> col:12 Phar 'int'
  |-ParmVarDecl 0x12691fad8 <col:18> col:18 createDefaultStub 'int'
  `-CompoundStmt 0x126011648 <line:2:1, line:19:1>
    |-DeclStmt 0x12691ff60 <line:3:2, col:46>
    | |-VarDecl 0x12691fd50 <col:2, col:16> col:8 used index 'char *' cinit
    | | `-RecoveryExpr 0x12691fde8 <col:16> '<dependent type>' contains-errors lvalue
    | |-VarDecl 0x12691fe20 <col:2, col:34> col:23 used webindex 'char *' cinit
    | | `-RecoveryExpr 0x12691fea0 <col:34> '<dependent type>' contains-errors lvalue
    | `-VarDecl 0x12691fed8 <col:2, col:41> col:41 used error 'char *'
    |-BinaryOperator 0x126920140 <line:5:2, col:39> '<dependent type>' contains-errors ','
    | |-RecoveryExpr 0x1269200d0 <col:2, col:21> '<dependent type>' contains-errors lvalue
    | | |-UnaryExprOrTypeTraitExpr 0x1269200b0 <col:2, col:9> 'unsigned long' contains-errors sizeof
    | | | `-RecoveryExpr 0x126920090 <col:9> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x12691ffc8 <col:21> 'int' 0
    | `-BinaryOperator 0x126920120 <col:24, col:39> '<dependent type>' contains-errors '='
    |   |-RecoveryExpr 0x126920100 <col:24> '<dependent type>' contains-errors lvalue
    |   `-IntegerLiteral 0x126920030 <col:39> 'int' 0
    |-IfStmt 0x126010fd0 <line:7:2, line:9:2>
    | |-BinaryOperator 0x126010f88 <line:7:6, col:101> 'int' contains-errors '=='
    | | |-CallExpr 0x126010f18 <col:6, col:96> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x126010ab8 <col:6> 'int ()' Function 0x126010a00 'zend_parse_parameters' 'int ()'
    | | | |-CallExpr 0x126010e88 <col:28, col:42> 'int'
    | | | | `-ImplicitCastExpr 0x126010e70 <col:28> 'int (*)()' <FunctionToPointerDecay>
    | | | |   `-DeclRefExpr 0x126010bb8 <col:28> 'int ()' Function 0x126010b00 'ZEND_NUM_ARGS' 'int ()'
    | | | |-StringLiteral 0x126010c90 <col:45> 'char[4]' lvalue "STR"
    | | | |-UnaryOperator 0x126010d00 <col:52, col:53> 'char **' contains-errors prefix '&' cannot overflow
    | | | | `-DeclRefExpr 0x126010cb0 <col:53> 'char *' contains-errors lvalue Var 0x12691fd50 'index' 'char *'
    | | | |-UnaryOperator 0x126010ec8 <col:60, col:61> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | | | `-RecoveryExpr 0x126010ea8 <col:61> '<dependent type>' contains-errors lvalue
    | | | |-UnaryOperator 0x126010d68 <col:72, col:73> 'char **' contains-errors prefix '&' cannot overflow
    | | | | `-DeclRefExpr 0x126010d48 <col:73> 'char *' contains-errors lvalue Var 0x12691fe20 'webindex' 'char *'
    | | | `-UnaryOperator 0x126010f00 <col:83, col:84> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | |   `-RecoveryExpr 0x126010ee0 <col:84> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x126010f68 <col:101> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x126010fb8 <col:110, line:9:2>
    |   `-ReturnStmt 0x126010fa8 <line:8:3>
    `-IfStmt 0x126011528 <line:13:2, line:17:2>
      |-ImplicitCastExpr 0x126011208 <line:13:6> 'char *' <LValueToRValue>
      | `-DeclRefExpr 0x1260111e8 <col:6> 'char *' lvalue Var 0x12691fed8 'error' 'char *'
      `-CompoundStmt 0x126011508 <col:13, line:17:2>
        |-CallExpr 0x1260114b8 <line:15:3, col:14> 'int'
        | |-ImplicitCastExpr 0x1260114a0 <col:3> 'int (*)()' <FunctionToPointerDecay>
        | | `-DeclRefExpr 0x126011460 <col:3> 'int ()' Function 0x1260113a8 'efree' 'int ()'
        | `-ImplicitCastExpr 0x1260114e0 <col:9> 'char *' <LValueToRValue>
        |   `-DeclRefExpr 0x126011480 <col:9> 'char *' lvalue Var 0x12691fed8 'error' 'char *'
        `-ReturnStmt 0x1260114f8 <line:16:3>
