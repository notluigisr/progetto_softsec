`-FunctionDecl 0x13d0274d8  line:1:1 invalid wb_prep 'int (int *, const struct pkt_prep *, int)'
  |-ParmVarDecl 0x13d00dd28 <col:9, col:29> col:29 invalid ndo 'int *'
  |-ParmVarDecl 0x13d00e318 <line:2:9, col:32> col:32 used prep 'const struct pkt_prep *'
  |-ParmVarDecl 0x13d00e398 <col:38, col:44> col:44 invalid len 'int'
  `-CompoundStmt 0x13e008508 <line:3:1, line:32:1>
    |-DeclStmt 0x13d027618 <line:4:2, col:7>
    | `-VarDecl 0x13d0275b0 <col:2, col:6> col:6 used n 'int'
    |-DeclStmt 0x13d027818 <line:5:2, col:26>
    | |-RecordDecl 0x13d027630 <col:8, col:15> col:15 struct pgstate
    | `-VarDecl 0x13d027798 <col:2, col:24> col:24 used ps 'const struct pgstate *'
    |-DeclStmt 0x13d027918 <line:6:2, col:37>
    | `-VarDecl 0x13d027848 <col:2, col:26> col:16 ep 'const char *' cinit
    |   `-CXXDependentScopeMemberExpr 0x13d0278d0 <col:21, col:26> '<dependent type>' contains-errors lvalue ->ndo_snapend
    |     `-RecoveryExpr 0x13d0278b0 <col:21> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x13d027b70 <line:8:2, col:23> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13d027a90 <col:2> 'int ()' Function 0x13d0279d8 'ND_PRINT' 'int ()'
    | `-ParenExpr 0x13d027b50 <col:11, col:22> 'char[4]' contains-errors
    |   `-BinaryOperator 0x13d027b30 <col:12, col:17> 'char[4]' contains-errors ','
    |     |-RecoveryExpr 0x13d027ab0 <col:12> '<dependent type>' contains-errors lvalue
    |     `-StringLiteral 0x13d027b10 <col:17> 'char[4]' lvalue "STR"
    |-IfStmt 0x13d027cc8 <line:9:2, line:11:2>
    | |-RecoveryExpr 0x13d027c28 <line:9:6, col:24> '_Bool' contains-errors
    | `-CompoundStmt 0x13d027cb0 <col:27, line:11:2>
    |   `-ReturnStmt 0x13d027ca0 <line:10:3, col:13>
    |     `-ParenExpr 0x13d027c80 <col:10, col:13> 'int'
    |       `-UnaryOperator 0x13d027c68 <col:11, col:12> 'int' prefix '-'
    |         `-IntegerLiteral 0x13d027c48 <col:12> 'int' 1
    |-BinaryOperator 0x13d027ea8 <line:12:2, col:32> 'int' contains-errors '='
    | |-DeclRefExpr 0x13d027ce8 <col:2> 'int' lvalue Var 0x13d0275b0 'n' 'int'
    | `-CallExpr 0x13d027e80 <col:6, col:32> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13d027de8 <col:6> 'int ()' Function 0x13d027d30 'EXTRACT_32BITS' 'int ()'
    |   `-UnaryOperator 0x13d027e68 <col:21, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x13d027e40 <col:22, col:28> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x13d027e08 <col:22> 'const struct pkt_prep *' lvalue ParmVar 0x13d00e318 'prep' 'const struct pkt_prep *'
    |-BinaryOperator 0x13d028060 <line:13:2, col:40> 'const struct pgstate *' contains-errors '='
    | |-DeclRefExpr 0x13d027ec8 <col:2> 'const struct pgstate *' lvalue Var 0x13d027798 'ps' 'const struct pgstate *'
    | `-CStyleCastExpr 0x13d028038 <col:7, col:40> 'const struct pgstate *' contains-errors <Dependent>
    |   `-ParenExpr 0x13d028018 <col:31, col:40> '<dependent type>' contains-errors lvalue
    |     `-RecoveryExpr 0x13d027f40 <col:32, col:39> '<dependent type>' contains-errors lvalue
    |       |-DeclRefExpr 0x13d027ee8 <col:32> 'const struct pkt_prep *' lvalue ParmVar 0x13d00e318 'prep' 'const struct pkt_prep *'
    |       `-IntegerLiteral 0x13d027f08 <col:39> 'int' 1
    `-WhileStmt 0x13e0084e8 <line:14:2, line:30:2>
      |-BinaryOperator 0x13d028338 <line:14:9, col:34> 'int' contains-errors '&&'
      | |-BinaryOperator 0x13d0280d8 <col:9, col:16> 'int' '>='
      | | |-UnaryOperator 0x13d0280a0 <col:9, col:11> 'int' prefix '--'
      | | | `-DeclRefExpr 0x13d028080 <col:11> 'int' lvalue Var 0x13d0275b0 'n' 'int'
      | | `-IntegerLiteral 0x13d0280b8 <col:16> 'int' 0
      | `-UnaryOperator 0x13d028320 <col:21, col:34> '<dependent type>' contains-errors prefix '!' cannot overflow
      |   `-ImplicitCastExpr 0x13d028308 <col:22, col:34> '<dependent type>' contains-errors <LValueToRValue>
      |     `-RecoveryExpr 0x13d0282d8 <col:22, col:34> '<dependent type>' contains-errors lvalue
      |       |-DeclRefExpr 0x13d0281d8 <col:22> 'int ()' Function 0x13d028120 'ND_TTEST' 'int ()'
      |       `-UnaryOperator 0x13d028230 <col:31, col:32> 'const struct pgstate' lvalue prefix '*' cannot overflow
      |         `-ImplicitCastExpr 0x13d028218 <col:32> 'const struct pgstate *' <LValueToRValue>
      |           `-DeclRefExpr 0x13d0281f8 <col:32> 'const struct pgstate *' lvalue Var 0x13d027798 'ps' 'const struct pgstate *'
      `-CompoundStmt 0x13e0084a0 <col:37, line:30:2>
        |-DeclStmt 0x13d02a3e0 <line:15:3, col:31>
        | |-RecordDecl 0x13d028358 <col:9, col:16> col:16 struct id_off
        | |-VarDecl 0x13d02a2c8 <col:3, col:24> col:24 used io 'const struct id_off *'
        | `-VarDecl 0x13d02a358 <col:3, col:29> col:29 used ie 'const struct id_off *'
        |-DeclStmt 0x13d02a4a0 <line:16:3, col:15>
        | `-VarDecl 0x13d02a408 <col:3, col:12> col:8 used c 'char' cinit
        |   `-ImplicitCastExpr 0x13d02a488 <col:12> 'char' <IntegralCast>
        |     `-CharacterLiteral 0x13d02a470 <col:12> 'int' 60
        |-CallExpr 0x13d02a990 <line:18:3, line:21:39> '<dependent type>' contains-errors
        | |-DeclRefExpr 0x13d02a4b8 <line:18:3> 'int ()' Function 0x13d0279d8 'ND_PRINT' 'int ()'
        | `-ParenExpr 0x13d02a970 <col:12, line:21:38> '<dependent type>' contains-errors
        |   `-BinaryOperator 0x13d02a950 <line:18:13, line:21:37> '<dependent type>' contains-errors ','
        |     |-BinaryOperator 0x13d02a828 <line:18:13, line:20:41> '<dependent type>' contains-errors ','
        |     | |-BinaryOperator 0x13d02a5f8 <line:18:13, line:19:31> '<dependent type>' contains-errors ','
        |     | | |-BinaryOperator 0x13d02a518 <line:18:13, col:18> 'char[4]' contains-errors ','
        |     | | | |-RecoveryExpr 0x13d02a4d8 <col:13> '<dependent type>' contains-errors lvalue
        |     | | | `-StringLiteral 0x13d02a4f8 <col:18> 'char[4]' lvalue "STR"
        |     | | `-CallExpr 0x13d02a5d0 <line:19:7, col:31> '<dependent type>' contains-errors
        |     | |   |-DeclRefExpr 0x13d02a538 <col:7> 'int ()' Function 0x13d027d30 'EXTRACT_32BITS' 'int ()'
        |     | |   `-UnaryOperator 0x13d02a5b8 <col:22, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow
        |     | |     `-RecoveryExpr 0x13d02a590 <col:23, col:27> '<dependent type>' contains-errors lvalue
        |     | |       `-DeclRefExpr 0x13d02a558 <col:23> 'const struct pgstate *' lvalue Var 0x13d027798 'ps' 'const struct pgstate *'
        |     | `-CallExpr 0x13d02a7f8 <line:20:7, col:41> '<dependent type>' contains-errors
        |     |   |-DeclRefExpr 0x13d02a6f8 <col:7> 'int ()' Function 0x13d02a640 'ipaddr_string' 'int ()'
        |     |   |-RecoveryExpr 0x13d02a718 <col:21> '<dependent type>' contains-errors lvalue
        |     |   `-UnaryOperator 0x13d02a7e0 <col:26, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow
        |     |     `-CXXDependentScopeMemberExpr 0x13d02a798 <col:27, col:36> '<dependent type>' contains-errors lvalue .p_sid
        |     |       `-RecoveryExpr 0x13d02a770 <col:27, col:31> '<dependent type>' contains-errors lvalue
        |     |         `-DeclRefExpr 0x13d02a738 <col:27> 'const struct pgstate *' lvalue Var 0x13d027798 'ps' 'const struct pgstate *'
        |     `-CallExpr 0x13d02a928 <line:21:7, col:37> '<dependent type>' contains-errors
        |       |-DeclRefExpr 0x13d02a848 <col:7> 'int ()' Function 0x13d027d30 'EXTRACT_32BITS' 'int ()'
        |       `-UnaryOperator 0x13d02a910 <col:22, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow
        |         `-CXXDependentScopeMemberExpr 0x13d02a8c8 <col:23, col:32> '<dependent type>' contains-errors lvalue .p_uid
        |           `-RecoveryExpr 0x13d02a8a0 <col:23, col:27> '<dependent type>' contains-errors lvalue
        |             `-DeclRefExpr 0x13d02a868 <col:23> 'const struct pgstate *' lvalue Var 0x13d027798 'ps' 'const struct pgstate *'
        |-BinaryOperator 0x13d02ab98 <line:22:3, col:32> 'const struct id_off *' contains-errors '='
        | |-DeclRefExpr 0x13d02a9b8 <col:3> 'const struct id_off *' lvalue Var 0x13d02a2c8 'io' 'const struct id_off *'
        | `-ImplicitCastExpr 0x13d02ab80 <col:8, col:32> 'const struct id_off *' contains-errors <NoOp>
        |   `-CStyleCastExpr 0x13d02ab58 <col:8, col:32> 'struct id_off *' contains-errors <Dependent>
        |     `-ParenExpr 0x13d02ab38 <col:25, col:32> '<dependent type>' contains-errors lvalue
        |       `-RecoveryExpr 0x13d02aa30 <col:26, col:31> '<dependent type>' contains-errors lvalue
        |         |-DeclRefExpr 0x13d02a9d8 <col:26> 'const struct pgstate *' lvalue Var 0x13d027798 'ps' 'const struct pgstate *'
        |         `-IntegerLiteral 0x13d02a9f8 <col:31> 'int' 1
        |-ForStmt 0x13e008258 <line:23:3, line:27:3>
        | |-BinaryOperator 0x13d02ac78 <line:23:8, col:22> 'const struct id_off *' contains-errors '='
        | | |-DeclRefExpr 0x13d02abb8 <col:8> 'const struct id_off *' lvalue Var 0x13d02a358 'ie' 'const struct id_off *'
        | | `-BinaryOperator 0x13d02ac58 <col:13, col:22> '<dependent type>' contains-errors '+'
        | |   |-DeclRefExpr 0x13d02abd8 <col:13> 'const struct id_off *' lvalue Var 0x13d02a2c8 'io' 'const struct id_off *'
        | |   `-RecoveryExpr 0x13d02ac30 <col:18, col:22> '<dependent type>' contains-errors lvalue
        | |     `-DeclRefExpr 0x13d02abf8 <col:18> 'const struct pgstate *' lvalue Var 0x13d027798 'ps' 'const struct pgstate *'
        | |-<<<NULL>>>
        | |-BinaryOperator 0x13d02ae50 <col:27, col:51> 'int' contains-errors '&&'
        | | |-BinaryOperator 0x13d02ad08 <col:27, col:32> 'int' '<'
        | | | |-ImplicitCastExpr 0x13d02acd8 <col:27> 'const struct id_off *' <LValueToRValue>
        | | | | `-DeclRefExpr 0x13d02ac98 <col:27> 'const struct id_off *' lvalue Var 0x13d02a2c8 'io' 'const struct id_off *'
        | | | `-ImplicitCastExpr 0x13d02acf0 <col:32> 'const struct id_off *' <LValueToRValue>
        | | |   `-DeclRefExpr 0x13d02acb8 <col:32> 'const struct id_off *' lvalue Var 0x13d02a358 'ie' 'const struct id_off *'
        | | `-UnaryOperator 0x13d02ae38 <col:38, col:51> '<dependent type>' contains-errors prefix '!' cannot overflow
        | |   `-ImplicitCastExpr 0x13d02ae20 <col:39, col:51> '<dependent type>' contains-errors <LValueToRValue>
        | |     `-RecoveryExpr 0x13d02adf0 <col:39, col:51> '<dependent type>' contains-errors lvalue
        | |       |-DeclRefExpr 0x13d02ad28 <col:39> 'int ()' Function 0x13d028120 'ND_TTEST' 'int ()'
        | |       `-UnaryOperator 0x13d02ad80 <col:48, col:49> 'const struct id_off' lvalue prefix '*' cannot overflow
        | |         `-ImplicitCastExpr 0x13d02ad68 <col:49> 'const struct id_off *' <LValueToRValue>
        | |           `-DeclRefExpr 0x13d02ad48 <col:49> 'const struct id_off *' lvalue Var 0x13d02a2c8 'io' 'const struct id_off *'
        | |-ImplicitCastExpr 0x13d02aeb8 <col:54, col:56> '<dependent type>' contains-errors <LValueToRValue>
        | | `-RecoveryExpr 0x13d02ae90 <col:54, col:56> '<dependent type>' contains-errors lvalue
        | |   `-DeclRefExpr 0x13d02ae70 <col:56> 'const struct id_off *' lvalue Var 0x13d02a2c8 'io' 'const struct id_off *'
        | `-CompoundStmt 0x13e008238 <col:60, line:27:3>
        |   |-CallExpr 0x13d02b198 <line:24:4, line:25:33> '<dependent type>' contains-errors
        |   | |-DeclRefExpr 0x13d02aed0 <line:24:4> 'int ()' Function 0x13d0279d8 'ND_PRINT' 'int ()'
        |   | `-ParenExpr 0x13d02b178 <col:13, line:25:32> '<dependent type>' contains-errors
        |   |   `-BinaryOperator 0x13d02b158 <line:24:14, line:25:31> '<dependent type>' contains-errors ','
        |   |     |-BinaryOperator 0x13d02b078 <line:24:14, col:55> '<dependent type>' contains-errors ','
        |   |     | |-BinaryOperator 0x13d02af70 <col:14, col:26> 'char' contains-errors ','
        |   |     | | |-BinaryOperator 0x13d02af30 <col:14, col:19> 'char[4]' contains-errors ','
        |   |     | | | |-RecoveryExpr 0x13d02aef0 <col:14> '<dependent type>' contains-errors lvalue
        |   |     | | | `-StringLiteral 0x13d02af10 <col:19> 'char[4]' lvalue "STR"
        |   |     | | `-DeclRefExpr 0x13d02af50 <col:26> 'char' lvalue Var 0x13d02a408 'c' 'char'
        |   |     | `-CallExpr 0x13d02b048 <col:29, col:55> '<dependent type>' contains-errors
        |   |     |   |-DeclRefExpr 0x13d02af90 <col:29> 'int ()' Function 0x13d02a640 'ipaddr_string' 'int ()'
        |   |     |   |-RecoveryExpr 0x13d02afb0 <col:43> '<dependent type>' contains-errors lvalue
        |   |     |   `-UnaryOperator 0x13d02b030 <col:48, col:53> '<dependent type>' contains-errors prefix '&' cannot overflow
        |   |     |     `-RecoveryExpr 0x13d02b008 <col:49, col:53> '<dependent type>' contains-errors lvalue
        |   |     |       `-DeclRefExpr 0x13d02afd0 <col:49> 'const struct id_off *' lvalue Var 0x13d02a2c8 'io' 'const struct id_off *'
        |   |     `-CallExpr 0x13d02b130 <line:25:8, col:31> '<dependent type>' contains-errors
        |   |       |-DeclRefExpr 0x13d02b098 <col:8> 'int ()' Function 0x13d027d30 'EXTRACT_32BITS' 'int ()'
        |   |       `-UnaryOperator 0x13d02b118 <col:23, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow
        |   |         `-RecoveryExpr 0x13d02b0f0 <col:24, col:28> '<dependent type>' contains-errors lvalue
        |   |           `-DeclRefExpr 0x13d02b0b8 <col:24> 'const struct id_off *' lvalue Var 0x13d02a2c8 'io' 'const struct id_off *'
        |   `-BinaryOperator 0x13e008218 <line:26:4, col:8> 'char' '='
        |     |-DeclRefExpr 0x13d02b1c0 <col:4> 'char' lvalue Var 0x13d02a408 'c' 'char'
        |     `-ImplicitCastExpr 0x13e008200 <col:8> 'char' <IntegralCast>
        |       `-CharacterLiteral 0x13d02b1e0 <col:8> 'int' 44
        |-CallExpr 0x13e008330 <line:28:3, col:24> '<dependent type>' contains-errors
        | |-DeclRefExpr 0x13e008290 <col:3> 'int ()' Function 0x13d0279d8 'ND_PRINT' 'int ()'
        | `-ParenExpr 0x13e008310 <col:12, col:23> 'char[4]' contains-errors
        |   `-BinaryOperator 0x13e0082f0 <col:13, col:18> 'char[4]' contains-errors ','
        |     |-RecoveryExpr 0x13e0082b0 <col:13> '<dependent type>' contains-errors lvalue
        |     `-StringLiteral 0x13e0082d0 <col:18> 'char[4]' lvalue "STR"
        `-BinaryOperator 0x13e008480 <line:29:3, col:26> 'const struct pgstate *' '='
          |-DeclRefExpr 0x13e008358 <col:3> 'const struct pgstate *' lvalue Var 0x13d027798 'ps' 'const struct pgstate *'
          `-ImplicitCastExpr 0x13e008468 <col:8, col:26> 'const struct pgstate *' <NoOp>
            `-CStyleCastExpr 0x13e008440 <col:8, col:26> 'struct pgstate *' <BitCast>
              `-ImplicitCastExpr 0x13e008428 <col:26> 'const struct id_off *' <LValueToRValue> part_of_explicit_cast
                `-DeclRefExpr 0x13e008378 <col:26> 'const struct id_off *' lvalue Var 0x13d02a2c8 'io' 'const struct id_off *'
