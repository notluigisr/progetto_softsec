`-FunctionDecl 0x124928258  line:1:11 invalid parseKey 'char *(char *, int)'
  |-ParmVarDecl 0x1249280d8 <col:21, col:27> col:27 used ptr 'char *'
  |-ParmVarDecl 0x124928170 <col:32, <invalid sloc>> col:40 invalid 'int'
  `-CompoundStmt 0x124943170 <line:2:5, line:31:5>
    |-IfStmt 0x124928628 <line:3:9, line:4:39>
    | |-BinaryOperator 0x1249283a8 <line:3:13, col:21> 'int' '!='
    | | |-ImplicitCastExpr 0x124928390 <col:13, col:14> 'int' <IntegralCast>
    | | | `-ImplicitCastExpr 0x124928378 <col:13, col:14> 'char' <LValueToRValue>
    | | |   `-UnaryOperator 0x124928348 <col:13, col:14> 'char' lvalue prefix '*' cannot overflow
    | | |     `-ImplicitCastExpr 0x124928330 <col:14> 'char *' <LValueToRValue>
    | | |       `-DeclRefExpr 0x124928310 <col:14> 'char *' lvalue ParmVar 0x1249280d8 'ptr' 'char *'
    | | `-CharacterLiteral 0x124928360 <col:21> 'int' 34
    | `-CallExpr 0x1249285e8 <line:4:13, col:39> 'int'
    |   |-ImplicitCastExpr 0x1249285d0 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x124928520 <col:13> 'int ()' Function 0x124928468 'CV_PARSE_ERROR_CPP' 'int ()'
    |   `-ImplicitCastExpr 0x124928610 <col:33> 'char *' <ArrayToPointerDecay>
    |     `-StringLiteral 0x124928580 <col:33> 'char[4]' lvalue "STR"
    |-DeclStmt 0x124928740 <line:6:9, col:29>
    | `-VarDecl 0x124928660 <col:9, col:28> col:16 used beg 'char *' cinit
    |   `-BinaryOperator 0x124928720 <col:22, col:28> 'char *' '+'
    |     |-ImplicitCastExpr 0x124928708 <col:22> 'char *' <LValueToRValue>
    |     | `-DeclRefExpr 0x1249286c8 <col:22> 'char *' lvalue ParmVar 0x1249280d8 'ptr' 'char *'
    |     `-IntegerLiteral 0x1249286e8 <col:28> 'int' 1
    |-DoStmt 0x124941bc8 <line:8:9, line:11:50>
    | |-CompoundStmt 0x124941910 <line:8:12, line:11:9>
    | | |-UnaryOperator 0x124928778 <line:9:13, col:15> 'char *' prefix '++'
    | | | `-DeclRefExpr 0x124928758 <col:15> 'char *' lvalue ParmVar 0x1249280d8 'ptr' 'char *'
    | | `-CallExpr 0x1249418f0 <line:10:13, col:56> 'int'
    | |   `-ImplicitCastExpr 0x1249418d8 <col:13> 'int (*)()' <FunctionToPointerDecay>
    | |     `-DeclRefExpr 0x1249418b8 <col:13> 'int ()' Function 0x124941800 'CV_PERSISTENCE_CHECK_END_OF_BUFFER_BUG_CPP' 'int ()'
    | `-BinaryOperator 0x124941ba8 <line:11:18, col:46> 'int' '&&'
    |   |-CallExpr 0x124941a98 <col:18, col:33> 'int'
    |   | |-ImplicitCastExpr 0x124941a80 <col:18> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x124941a10 <col:18> 'int ()' Function 0x124941958 'cv_isprint' 'int ()'
    |   | `-ImplicitCastExpr 0x124941ad8 <col:29, col:30> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x124941ac0 <col:29, col:30> 'char' <LValueToRValue>
    |   |     `-UnaryOperator 0x124941a68 <col:29, col:30> 'char' lvalue prefix '*' cannot overflow
    |   |       `-ImplicitCastExpr 0x124941a50 <col:30> 'char *' <LValueToRValue>
    |   |         `-DeclRefExpr 0x124941a30 <col:30> 'char *' lvalue ParmVar 0x1249280d8 'ptr' 'char *'
    |   `-BinaryOperator 0x124941b88 <col:38, col:46> 'int' '!='
    |     |-ImplicitCastExpr 0x124941b70 <col:38, col:39> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x124941b58 <col:38, col:39> 'char' <LValueToRValue>
    |     |   `-UnaryOperator 0x124941b28 <col:38, col:39> 'char' lvalue prefix '*' cannot overflow
    |     |     `-ImplicitCastExpr 0x124941b10 <col:39> 'char *' <LValueToRValue>
    |     |       `-DeclRefExpr 0x124941af0 <col:39> 'char *' lvalue ParmVar 0x1249280d8 'ptr' 'char *'
    |     `-CharacterLiteral 0x124941b40 <col:46> 'int' 34
    |-IfStmt 0x124941d38 <line:13:9, line:14:39>
    | |-BinaryOperator 0x124941c80 <line:13:13, col:21> 'int' '!='
    | | |-ImplicitCastExpr 0x124941c68 <col:13, col:14> 'int' <IntegralCast>
    | | | `-ImplicitCastExpr 0x124941c50 <col:13, col:14> 'char' <LValueToRValue>
    | | |   `-UnaryOperator 0x124941c20 <col:13, col:14> 'char' lvalue prefix '*' cannot overflow
    | | |     `-ImplicitCastExpr 0x124941c08 <col:14> 'char *' <LValueToRValue>
    | | |       `-DeclRefExpr 0x124941be8 <col:14> 'char *' lvalue ParmVar 0x1249280d8 'ptr' 'char *'
    | | `-CharacterLiteral 0x124941c38 <col:21> 'int' 34
    | `-CallExpr 0x124941cf8 <line:14:13, col:39> 'int'
    |   |-ImplicitCastExpr 0x124941ce0 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x124941ca0 <col:13> 'int ()' Function 0x124928468 'CV_PARSE_ERROR_CPP' 'int ()'
    |   `-ImplicitCastExpr 0x124941d20 <col:33> 'char *' <ArrayToPointerDecay>
    |     `-StringLiteral 0x124941cc0 <col:33> 'char[4]' lvalue "STR"
    |-DeclStmt 0x124941e28 <line:16:9, col:31>
    | `-VarDecl 0x124941d70 <col:9, col:28> col:22 used end 'const char *' cinit
    |   `-ImplicitCastExpr 0x124941e10 <col:28> 'const char *' <NoOp>
    |     `-ImplicitCastExpr 0x124941df8 <col:28> 'char *' <LValueToRValue>
    |       `-DeclRefExpr 0x124941dd8 <col:28> 'char *' lvalue ParmVar 0x1249280d8 'ptr' 'char *'
    |-UnaryOperator 0x124941e60 <line:17:9, col:12> 'char *' postfix '++'
    | `-DeclRefExpr 0x124941e40 <col:9> 'char *' lvalue ParmVar 0x1249280d8 'ptr' 'char *'
    |-BinaryOperator 0x124942450 <line:18:9, col:31> 'char *' '='
    | |-DeclRefExpr 0x124941e78 <col:9> 'char *' lvalue ParmVar 0x1249280d8 'ptr' 'char *'
    | `-ImplicitCastExpr 0x124942010 <col:15, col:31> 'char *' <IntegralToPointer>
    |   `-CallExpr 0x124941fd0 <col:15, col:31> 'int'
    |     |-ImplicitCastExpr 0x124941fb8 <col:15> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x124941f78 <col:15> 'int ()' Function 0x124941ec0 'skipSpaces' 'int ()'
    |     `-ImplicitCastExpr 0x124941ff8 <col:27> 'char *' <LValueToRValue>
    |       `-DeclRefExpr 0x124941f98 <col:27> 'char *' lvalue ParmVar 0x1249280d8 'ptr' 'char *'
    |-IfStmt 0x1249425a8 <line:19:9, line:20:20>
    | |-BinaryOperator 0x124942540 <line:19:13, col:23> 'int' '||'
    | | |-UnaryOperator 0x1249424a8 <col:13, col:14> 'int' prefix '!' cannot overflow
    | | | `-ImplicitCastExpr 0x124942490 <col:14> 'char *' <LValueToRValue>
    | | |   `-DeclRefExpr 0x124942470 <col:14> 'char *' lvalue ParmVar 0x1249280d8 'ptr' 'char *'
    | | `-UnaryOperator 0x124942528 <col:21, col:23> 'int' prefix '!' cannot overflow
    | |   `-ImplicitCastExpr 0x124942510 <col:22, col:23> 'char' <LValueToRValue>
    | |     `-UnaryOperator 0x1249424f8 <col:22, col:23> 'char' lvalue prefix '*' cannot overflow
    | |       `-ImplicitCastExpr 0x1249424e0 <col:23> 'char *' <LValueToRValue>
    | |         `-DeclRefExpr 0x1249424c0 <col:23> 'char *' lvalue ParmVar 0x1249280d8 'ptr' 'char *'
    | `-ReturnStmt 0x124942598 <line:20:13, col:20>
    |   `-ImplicitCastExpr 0x124942580 <col:20> 'char *' <NullToPointer>
    |     `-IntegerLiteral 0x124942560 <col:20> 'int' 0
    |-IfStmt 0x124942718 <line:22:9, line:23:39>
    | |-BinaryOperator 0x124942660 <line:22:13, col:21> 'int' '!='
    | | |-ImplicitCastExpr 0x124942648 <col:13, col:14> 'int' <IntegralCast>
    | | | `-ImplicitCastExpr 0x124942630 <col:13, col:14> 'char' <LValueToRValue>
    | | |   `-UnaryOperator 0x124942600 <col:13, col:14> 'char' lvalue prefix '*' cannot overflow
    | | |     `-ImplicitCastExpr 0x1249425e8 <col:14> 'char *' <LValueToRValue>
    | | |       `-DeclRefExpr 0x1249425c8 <col:14> 'char *' lvalue ParmVar 0x1249280d8 'ptr' 'char *'
    | | `-CharacterLiteral 0x124942618 <col:21> 'int' 58
    | `-CallExpr 0x1249426d8 <line:23:13, col:39> 'int'
    |   |-ImplicitCastExpr 0x1249426c0 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x124942680 <col:13> 'int ()' Function 0x124928468 'CV_PARSE_ERROR_CPP' 'int ()'
    |   `-ImplicitCastExpr 0x124942700 <col:33> 'char *' <ArrayToPointerDecay>
    |     `-StringLiteral 0x1249426a0 <col:33> 'char[4]' lvalue "STR"
    |-IfStmt 0x124943078 <line:26:9, line:27:39>
    | |-BinaryOperator 0x1249427c0 <line:26:13, col:20> 'int' '<='
    | | |-ImplicitCastExpr 0x124942778 <col:13> 'const char *' <LValueToRValue>
    | | | `-DeclRefExpr 0x124942738 <col:13> 'const char *' lvalue Var 0x124941d70 'end' 'const char *'
    | | `-ImplicitCastExpr 0x1249427a8 <col:20> 'const char *' <BitCast>
    | |   `-ImplicitCastExpr 0x124942790 <col:20> 'char *' <LValueToRValue>
    | |     `-DeclRefExpr 0x124942758 <col:20> 'char *' lvalue Var 0x124928660 'beg' 'char *'
    | `-CallExpr 0x124943038 <line:27:13, col:39> 'int'
    |   |-ImplicitCastExpr 0x124943020 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x1249427e0 <col:13> 'int ()' Function 0x124928468 'CV_PARSE_ERROR_CPP' 'int ()'
    |   `-ImplicitCastExpr 0x124943060 <col:33> 'char *' <ArrayToPointerDecay>
    |     `-StringLiteral 0x124943000 <col:33> 'char[4]' lvalue "STR"
    `-ReturnStmt 0x124943160 <line:30:9, col:18>
      `-UnaryOperator 0x124943148 <col:16, col:18> 'char *' prefix '++'
        `-DeclRefExpr 0x124943128 <col:18> 'char *' lvalue ParmVar 0x1249280d8 'ptr' 'char *'
