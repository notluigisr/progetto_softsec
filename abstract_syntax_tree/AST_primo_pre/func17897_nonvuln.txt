`-FunctionDecl 0x146128438  line:1:1 invalid gx_default_1_add_decode_color 'int (int *, int, int *)'
  |-ParmVarDecl 0x146128128 <line:2:5, col:21> col:21 invalid dev 'int *'
  |-ParmVarDecl 0x1461281a8 <line:3:5, col:21> col:21 invalid color 'int'
  |-ParmVarDecl 0x1461282f0 <line:4:5, col:25> col:21 referenced invalid cv 'int *'
  `-CompoundStmt 0x1461419e0 <line:5:1, line:11:1>
    |-DeclStmt 0x1461418a8 <line:7:5, col:73>
    | `-VarDecl 0x146128510 <col:5, col:72> col:21 used code 'int' cinit
    |   `-CallExpr 0x146141870 <col:28, col:72> '<dependent type>' contains-errors
    |     |-CallExpr 0x146141820 <col:28, col:55> '<dependent type>' contains-errors
    |     | |-DeclRefExpr 0x1461286d0 <col:28> 'int ()' Function 0x146128618 'dev_proc' 'int ()'
    |     | |-RecoveryExpr 0x1461286f0 <col:37> '<dependent type>' contains-errors lvalue
    |     | `-RecoveryExpr 0x146141800 <col:42> '<dependent type>' contains-errors lvalue
    |     |-RecoveryExpr 0x146128758 <col:57> '<dependent type>' contains-errors lvalue
    |     |-RecoveryExpr 0x146128778 <col:62> '<dependent type>' contains-errors lvalue
    |     `-RecoveryExpr 0x146141850 <col:69> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x1461419d0 <line:10:5, col:12>
      `-ImplicitCastExpr 0x1461419b8 <col:12> 'int' contains-errors <LValueToRValue>
        `-DeclRefExpr 0x146141998 <col:12> 'int' contains-errors lvalue Var 0x146128510 'code' 'int'
