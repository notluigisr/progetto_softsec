`-FunctionDecl 0x146128418  line:1:1 invalid get_filter_list 'int (int *, int *, int **, const char **)'
  |-ParmVarDecl 0x146128128 <col:18, col:29> col:29 invalid op 'int *'
  |-ParmVarDecl 0x1461281a8 <col:33, col:45> col:45 invalid ber 'int *'
  |-ParmVarDecl 0x146128260 <line:2:2, col:11> col:11 invalid f 'int **'
  |-ParmVarDecl 0x146128318 <line:3:2, col:15> col:15 used text 'const char **'
  `-CompoundStmt 0x146142238 <line:4:1, line:26:1>
    |-DeclStmt 0x1461285a8 <line:6:2, col:10>
    | `-VarDecl 0x146128540 <col:2, col:7> col:7 used err 'int'
    |-DeclStmt 0x146128640 <line:9:2, col:13>
    | `-VarDecl 0x1461285d8 <col:2, col:9> col:9 used last 'char *'
    |-CallExpr 0x146141928 <line:11:2, col:43> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1461287b0 <col:2> 'int ()' Function 0x1461286f8 'Debug' 'int ()'
    | |-RecoveryExpr 0x146141908 <col:9> '<dependent type>' contains-errors lvalue
    | |-StringLiteral 0x146141840 <col:28> 'char[4]' lvalue "STR"
    | |-IntegerLiteral 0x146141860 <col:35> 'int' 0
    | |-IntegerLiteral 0x146141880 <col:38> 'int' 0
    | `-IntegerLiteral 0x1461418a0 <col:41> 'int' 0
    `-ForStmt 0x146142160 <line:13:2, line:21:2>
      |-<<<NULL>>>
      |-<<<NULL>>>
      |-BinaryOperator 0x146141c50 <line:14:3, col:10> 'int' contains-errors '!='
      | |-RecoveryExpr 0x146141c10 <col:3> '<dependent type>' contains-errors lvalue
      | `-RecoveryExpr 0x146141c30 <col:10> '<dependent type>' contains-errors lvalue
      |-BinaryOperator 0x146141ee0 <line:15:3, col:43> '<dependent type>' contains-errors '='
      | |-RecoveryExpr 0x146141e50 <col:3> '<dependent type>' contains-errors lvalue
      | `-CallExpr 0x146141ea8 <col:9, col:43> '<dependent type>' contains-errors
      |   |-DeclRefExpr 0x146141d68 <col:9> 'int ()' Function 0x146141cb0 'ber_next_element' 'int ()'
      |   |-RecoveryExpr 0x146141d88 <col:27> '<dependent type>' contains-errors lvalue
      |   |-UnaryOperator 0x146141e90 <col:32, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow
      |   | `-RecoveryExpr 0x146141e70 <col:33> '<dependent type>' contains-errors lvalue
      |   `-DeclRefExpr 0x146141dd8 <col:38> 'char *' lvalue Var 0x1461285d8 'last' 'char *'
      `-CompoundStmt 0x146142148 <line:16:2, line:21:2>
        `-IfStmt 0x146142128 <line:18:3, line:19:16>
          |-RecoveryExpr 0x1461420a0 <line:18:8, col:15> '_Bool' contains-errors
          `-ReturnStmt 0x146142118 <line:19:4, col:16>
            `-ImplicitCastExpr 0x146142100 <col:10, col:16> 'int' <LValueToRValue>
              `-ParenExpr 0x1461420e0 <col:10, col:16> 'int' lvalue
                `-DeclRefExpr 0x1461420c0 <col:12> 'int' lvalue Var 0x146128540 'err' 'int'
