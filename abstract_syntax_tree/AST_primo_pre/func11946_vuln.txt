`-FunctionDecl 0x14380dda8  line:1:1 PHP_FUNCTION 'int (int)'
  |-ParmVarDecl 0x14380dcd8 <col:14> col:14 tempnam 'int'
  `-CompoundStmt 0x143122778 <line:2:1, line:34:1>
    |-DeclStmt 0x14380dfb8 <line:3:2, col:20>
    | |-VarDecl 0x14380deb8 <col:2, col:8> col:8 used dir 'char *'
    | `-VarDecl 0x14380df38 <col:2, col:14> col:14 used prefix 'char *'
    |-DeclStmt 0x14380e0e8 <line:4:2, col:25>
    | |-VarDecl 0x14380dfe8 <col:2, col:6> col:6 dir_len 'int'
    | `-VarDecl 0x14380e068 <col:2, col:15> col:15 used prefix_len 'int'
    |-UnaryExprOrTypeTraitExpr 0x14380e170 <line:5:2, col:9> 'unsigned long' contains-errors sizeof
    | `-RecoveryExpr 0x14380e150 <col:9> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x14380e210 <line:6:2, col:19>
    | `-VarDecl 0x14380e1a8 <col:2, col:8> col:8 used opened_path 'char *'
    |-DeclStmt 0x14380e2a8 <line:7:2, col:9>
    | `-VarDecl 0x14380e240 <col:2, col:8> col:8 used p 'char *'
    |-DeclStmt 0x14380e340 <line:8:2, col:8>
    | `-VarDecl 0x14380e2d8 <col:2, col:6> col:6 used fd 'int'
    |-IfStmt 0x1438276a8 <line:10:2, line:12:2>
    | |-RecoveryExpr 0x143827660 <line:10:6, col:103> '_Bool' contains-errors
    | `-CompoundStmt 0x143827690 <col:112, line:12:2>
    |   `-ReturnStmt 0x143827680 <line:11:3>
    |-IfStmt 0x1438279d8 <line:14:2, line:16:2>
    | |-RecoveryExpr 0x1438279a8 <line:14:6, col:76> '_Bool' contains-errors
    | `-CompoundStmt 0x1438279c8 <col:79, line:16:2>
    |-IfStmt 0x143827b48 <line:18:2, line:20:2>
    | |-RecoveryExpr 0x143827b18 <line:18:6, col:42> '_Bool' contains-errors
    | `-CompoundStmt 0x143827b38 <col:45, line:20:2>
    |-IfStmt 0x143827e98 <line:23:2, line:25:2>
    | |-RecoveryExpr 0x143827d98 <line:23:6, col:14> '_Bool' contains-errors
    | `-CompoundStmt 0x143827e80 <col:18, line:25:2>
    |   `-BinaryOperator 0x143827e60 <line:24:3, col:11> 'char' '='
    |     |-ArraySubscriptExpr 0x143827e10 <col:3, col:7> 'char' lvalue
    |     | |-ImplicitCastExpr 0x143827df8 <col:3> 'char *' <LValueToRValue>
    |     | | `-DeclRefExpr 0x143827db8 <col:3> 'char *' lvalue Var 0x14380e240 'p' 'char *'
    |     | `-IntegerLiteral 0x143827dd8 <col:5> 'int' 63
    |     `-ImplicitCastExpr 0x143827e48 <col:11> 'char' <IntegralCast>
    |       `-CharacterLiteral 0x143827e30 <col:11> 'int' 0
    |-IfStmt 0x1438283c8 <line:29:2, line:32:2>
    | |-RecoveryExpr 0x143828070 <line:29:6, col:70> '_Bool' contains-errors
    | `-CompoundStmt 0x1438283a8 <col:73, line:32:2>
    |   |-CallExpr 0x1438281c8 <line:30:3, col:11> 'int'
    |   | |-ImplicitCastExpr 0x1438281b0 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x143828170 <col:3> 'int ()' Function 0x1438280b8 'close' 'int ()'
    |   | `-ImplicitCastExpr 0x1438281f0 <col:9> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x143828190 <col:9> 'int' lvalue Var 0x14380e2d8 'fd' 'int'
    |   `-CallExpr 0x143828360 <line:31:3, col:31> 'int'
    |     |-ImplicitCastExpr 0x143828348 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x1438282e8 <col:3> 'int ()' Function 0x143828230 'RETVAL_STRING' 'int ()'
    |     |-ImplicitCastExpr 0x143828390 <col:17> 'char *' <LValueToRValue>
    |     | `-DeclRefExpr 0x143828308 <col:17> 'char *' lvalue Var 0x14380e1a8 'opened_path' 'char *'
    |     `-IntegerLiteral 0x143828328 <col:30> 'int' 0
    `-CallExpr 0x143122738 <line:33:2, col:9> 'int'
      |-ImplicitCastExpr 0x143122720 <col:2> 'int (*)()' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x1431226e0 <col:2> 'int ()' Function 0x143122628 'efree' 'int ()'
      `-ImplicitCastExpr 0x143122760 <col:8> 'char *' <LValueToRValue>
        `-DeclRefExpr 0x143122700 <col:8> 'char *' lvalue Var 0x14380e240 'p' 'char *'
