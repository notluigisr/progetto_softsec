`-FunctionDecl 0x13a80dda8  line:1:12 is_item_value_atext 'int (char)' static
  |-ParmVarDecl 0x13a80dcd0 <col:32, col:37> col:37 used ch 'char'
  `-CompoundStmt 0x13a80e1b8 <line:2:1, line:13:1>
    `-SwitchStmt 0x13a80def0 <line:3:3, line:12:3>
      |-ImplicitCastExpr 0x13a80ded8 <line:3:11> 'int' <IntegralCast>
      | `-ImplicitCastExpr 0x13a80dec0 <col:11> 'char' <LValueToRValue>
      |   `-DeclRefExpr 0x13a80dea0 <col:11> 'char' lvalue ParmVar 0x13a80dcd0 'ch' 'char'
      `-CompoundStmt 0x13a80e198 <col:15, line:12:3>
        |-CaseStmt 0x13a80df48 <line:4:3, line:9:12>
        | |-ConstantExpr 0x13a80df30 <line:4:8> 'int'
        | | `-CharacterLiteral 0x13a80df18 <col:8> 'int' 9
        | `-CaseStmt 0x13a80dfa0 <line:5:3, line:9:12>
        |   |-ConstantExpr 0x13a80df88 <line:5:8> 'int'
        |   | `-CharacterLiteral 0x13a80df70 <col:8> 'int' 32
        |   `-CaseStmt 0x13a80dff8 <line:6:3, line:9:12>
        |     |-ConstantExpr 0x13a80dfe0 <line:6:8> 'int'
        |     | `-CharacterLiteral 0x13a80dfc8 <col:8> 'int' 13
        |     `-CaseStmt 0x13a80e050 <line:7:3, line:9:12>
        |       |-ConstantExpr 0x13a80e038 <line:7:8> 'int'
        |       | `-CharacterLiteral 0x13a80e020 <col:8> 'int' 10
        |       `-CaseStmt 0x13a80e0a8 <line:8:3, line:9:12>
        |         |-ConstantExpr 0x13a80e090 <line:8:8> 'int'
        |         | `-CharacterLiteral 0x13a80e078 <col:8> 'int' 59
        |         `-ReturnStmt 0x13a80e120 <line:9:5, col:12>
        |           `-RecoveryExpr 0x13a80e100 <col:12> '<dependent type>' contains-errors lvalue
        `-DefaultStmt 0x13a80e178 <line:10:3, line:11:12>
          `-ReturnStmt 0x13a80e168 <col:5, col:12>
            `-RecoveryExpr 0x13a80e148 <col:12> '<dependent type>' contains-errors lvalue
