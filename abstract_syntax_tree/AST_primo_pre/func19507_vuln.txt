`-FunctionDecl 0x12300de88  line:1:14 invalid GenericPrepare 'int (int *, int *)'
  |-ParmVarDecl 0x12300dd28 <col:29, col:44> col:44 invalid context 'int *'
  |-ParmVarDecl 0x12300dda8 <col:53, col:65> col:65 invalid node 'int *'
  `-CompoundStmt 0x12302a1c8 <col:71, line:46:1>
    |-DeclStmt 0x12300e078 <line:2:3, col:73>
    | `-VarDecl 0x12300df58 <col:3, col:9> col:9 used params 'int *' auto
    |-CallExpr 0x123027468 <line:5:3, col:48> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12300e2c0 <col:3> 'int ()' Function 0x12300e208 'TF_LITE_ENSURE_EQ' 'int ()'
    | |-RecoveryExpr 0x12300e2e0 <col:21> '<dependent type>' contains-errors lvalue
    | |-CallExpr 0x123027420 <col:30, col:44> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x12300e3e0 <col:30> 'int ()' Function 0x12300e328 'NumInputs' 'int ()'
    | | `-RecoveryExpr 0x123027400 <col:40> '<dependent type>' contains-errors lvalue
    | `-IntegerLiteral 0x123027448 <col:47> 'int' 1
    |-CallExpr 0x123027648 <line:6:3, col:49> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1230274a0 <col:3> 'int ()' Function 0x12300e208 'TF_LITE_ENSURE_EQ' 'int ()'
    | |-RecoveryExpr 0x1230274c0 <col:21> '<dependent type>' contains-errors lvalue
    | |-CallExpr 0x123027600 <col:30, col:45> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x1230275c0 <col:30> 'int ()' Function 0x123027508 'NumOutputs' 'int ()'
    | | `-RecoveryExpr 0x1230275e0 <col:41> '<dependent type>' contains-errors lvalue
    | `-IntegerLiteral 0x123027628 <col:48> 'int' 1
    |-CallExpr 0x123027a30 <line:8:3, col:70> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x123027778 <col:3> 'int ()' Function 0x1230276c0 'TF_LITE_ENSURE_OK' 'int ()'
    | |-RecoveryExpr 0x123027798 <col:21> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x1230279f0 <col:30, col:69> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x123027898 <col:30> 'int ()' Function 0x1230277e0 'GetOutputSafe' 'int ()'
    |   |-RecoveryExpr 0x1230278b8 <col:44> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x1230278d8 <col:53> '<dependent type>' contains-errors lvalue
    |   |-IntegerLiteral 0x1230278f8 <col:59> 'int' 0
    |   `-UnaryOperator 0x1230279d8 <col:62, col:63> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x1230279b8 <col:63> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x123027ae0 <line:9:3, col:28>
    | `-VarDecl 0x123027a78 <col:3, col:23> col:23 invalid input 'const int *'
    |-CallExpr 0x123027d10 <line:10:3, col:68> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x123027af8 <col:3> 'int ()' Function 0x1230276c0 'TF_LITE_ENSURE_OK' 'int ()'
    | |-RecoveryExpr 0x123027b18 <col:21> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x123027cd0 <col:30, col:67> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x123027c18 <col:30> 'int ()' Function 0x123027b60 'GetInputSafe' 'int ()'
    |   |-RecoveryExpr 0x123027c38 <col:43> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x123027c58 <col:52> '<dependent type>' contains-errors lvalue
    |   |-IntegerLiteral 0x123027c78 <col:58> 'int' 0
    |   `-UnaryOperator 0x123027cb8 <col:61, col:62> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x123027c98 <col:62> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x123027ee8 <line:11:3, col:53> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x123027d40 <col:3> 'int ()' Function 0x12300e208 'TF_LITE_ENSURE_EQ' 'int ()'
    | |-RecoveryExpr 0x123027d60 <col:21> '<dependent type>' contains-errors lvalue
    | |-CallExpr 0x123027ea0 <col:30, col:49> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x123027e60 <col:30> 'int ()' Function 0x123027da8 'NumDimensions' 'int ()'
    | | `-RecoveryExpr 0x123027e80 <col:44> '<dependent type>' contains-errors lvalue
    | `-IntegerLiteral 0x123027ec8 <col:52> 'int' 4
    |-DeclStmt 0x123028230 <line:14:3, col:37>
    | `-VarDecl 0x1230280c0 <col:3, col:36> col:7 used batches 'int' cinit
    |   `-ArraySubscriptExpr 0x123028210 <col:17, col:36> '<dependent type>' contains-errors lvalue
    |     |-ImplicitCastExpr 0x1230281f8 <col:17, col:30> '<dependent type>' contains-errors <LValueToRValue>
    |     | `-CXXDependentScopeMemberExpr 0x123028190 <col:17, col:30> '<dependent type>' contains-errors lvalue ->data
    |     |   `-CXXDependentScopeMemberExpr 0x123028148 <col:17, col:24> '<dependent type>' contains-errors lvalue ->dims
    |     |     `-RecoveryExpr 0x123028128 <col:17> '<dependent type>' contains-errors lvalue
    |     `-IntegerLiteral 0x1230281d8 <col:35> 'int' 0
    |-DeclStmt 0x1230283d0 <line:15:3, col:36>
    | `-VarDecl 0x123028260 <col:3, col:35> col:7 used height 'int' cinit
    |   `-ArraySubscriptExpr 0x1230283b0 <col:16, col:35> '<dependent type>' contains-errors lvalue
    |     |-ImplicitCastExpr 0x123028398 <col:16, col:29> '<dependent type>' contains-errors <LValueToRValue>
    |     | `-CXXDependentScopeMemberExpr 0x123028330 <col:16, col:29> '<dependent type>' contains-errors lvalue ->data
    |     |   `-CXXDependentScopeMemberExpr 0x1230282e8 <col:16, col:23> '<dependent type>' contains-errors lvalue ->dims
    |     |     `-RecoveryExpr 0x1230282c8 <col:16> '<dependent type>' contains-errors lvalue
    |     `-IntegerLiteral 0x123028378 <col:34> 'int' 1
    |-DeclStmt 0x123028970 <line:16:3, col:35>
    | `-VarDecl 0x123028800 <col:3, col:34> col:7 used width 'int' cinit
    |   `-ArraySubscriptExpr 0x123028950 <col:15, col:34> '<dependent type>' contains-errors lvalue
    |     |-ImplicitCastExpr 0x123028938 <col:15, col:28> '<dependent type>' contains-errors <LValueToRValue>
    |     | `-CXXDependentScopeMemberExpr 0x1230288d0 <col:15, col:28> '<dependent type>' contains-errors lvalue ->data
    |     |   `-CXXDependentScopeMemberExpr 0x123028888 <col:15, col:22> '<dependent type>' contains-errors lvalue ->dims
    |     |     `-RecoveryExpr 0x123028868 <col:15> '<dependent type>' contains-errors lvalue
    |     `-IntegerLiteral 0x123028918 <col:33> 'int' 2
    |-DeclStmt 0x123028b10 <line:17:3, col:42>
    | `-VarDecl 0x1230289a0 <col:3, col:41> col:7 used channels_out 'int' cinit
    |   `-ArraySubscriptExpr 0x123028af0 <col:22, col:41> '<dependent type>' contains-errors lvalue
    |     |-ImplicitCastExpr 0x123028ad8 <col:22, col:35> '<dependent type>' contains-errors <LValueToRValue>
    |     | `-CXXDependentScopeMemberExpr 0x123028a70 <col:22, col:35> '<dependent type>' contains-errors lvalue ->data
    |     |   `-CXXDependentScopeMemberExpr 0x123028a28 <col:22, col:29> '<dependent type>' contains-errors lvalue ->dims
    |     |     `-RecoveryExpr 0x123028a08 <col:22> '<dependent type>' contains-errors lvalue
    |     `-IntegerLiteral 0x123028ab8 <col:40> 'int' 3
    |-DeclStmt 0x123028c08 <line:20:3, col:33>
    | `-VarDecl 0x123028b40 <col:3, col:26> col:8 used padding 'int' auto cinit
    |   `-RecoveryExpr 0x123028be0 <col:18, col:26> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x123028ba8 <col:18> 'int *' lvalue Var 0x12300df58 'params' 'int *'
    |-DeclStmt 0x123028d38 <line:21:3, col:28>
    | |-VarDecl 0x123028c38 <col:3, col:7> col:7 used out_width 'int'
    | `-VarDecl 0x123028cb8 <col:3, col:18> col:18 used out_height 'int'
    `-IfStmt 0x123029680 <line:28:3, line:38:3>
      |-RecoveryExpr 0x123029228 <line:28:7, col:53> '_Bool' contains-errors
      `-CompoundStmt 0x123029660 <col:66, line:38:3>
        |-IfStmt 0x123029548 <line:29:5, line:33:5>
        | |-RecoveryExpr 0x123029248 <line:29:9, col:47> '_Bool' contains-errors
        | `-CompoundStmt 0x123029538 <col:53, line:33:5>
        `-IfStmt 0x123029640 <line:34:5, line:37:5>
          |-RecoveryExpr 0x123029568 <line:34:9, col:22> '_Bool' contains-errors
          `-CompoundStmt 0x123029630 <col:27, line:37:5>
