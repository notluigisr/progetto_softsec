`-FunctionDecl 0x131928318  line:1:12 invalid DecodePolicyConstraints 'int (const int *, int, int *)' static
  |-ParmVarDecl 0x1319280f0 <col:36, col:48> col:48 invalid input 'const int *'
  |-ParmVarDecl 0x131928170 <col:55, col:59> col:59 used sz 'int'
  |-ParmVarDecl 0x131928228 <col:63, col:76> col:76 referenced invalid cert 'int *'
  `-CompoundStmt 0x131941b68 <line:2:1, line:49:1>
    |-DeclStmt 0x131928478 <line:4:5, col:19>
    | `-VarDecl 0x1319283f0 <col:5, col:18> col:9 used length 'int' cinit
    |   `-IntegerLiteral 0x131928458 <col:18> 'int' 0
    |-DeclStmt 0x131928530 <line:5:5, col:23>
    | `-VarDecl 0x1319284a8 <col:5, col:22> col:9 used skipLength 'int' cinit
    |   `-IntegerLiteral 0x131928510 <col:22> 'int' 0
    |-DeclStmt 0x1319285c8 <line:6:5, col:12>
    | `-VarDecl 0x131928560 <col:5, col:9> col:9 used ret 'int'
    |-CallExpr 0x132008e18 <line:9:5, col:24> 'int'
    | |-ImplicitCastExpr 0x132008e00 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x131928740 <col:5> 'int ()' Function 0x131928688 'WOLFSSL_ENTER' 'int ()'
    | `-ImplicitCastExpr 0x132008e40 <col:19> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x1319287a0 <col:19> 'char[4]' lvalue "STR"
    |-IfStmt 0x1320092f8 <line:11:5, line:14:5>
    | |-BinaryOperator 0x1320090f8 <line:11:9, col:49> 'int' contains-errors '<'
    | | |-CallExpr 0x1320090b8 <col:9, col:45> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x132008f38 <col:9> 'int ()' Function 0x132008e80 'GetSequence' 'int ()'
    | | | |-RecoveryExpr 0x132008f58 <col:21> '<dependent type>' contains-errors lvalue
    | | | |-UnaryOperator 0x1320090a0 <col:28, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | | | `-RecoveryExpr 0x132009080 <col:29> '<dependent type>' contains-errors lvalue
    | | | |-UnaryOperator 0x132008fc8 <col:34, col:35> 'int *' prefix '&' cannot overflow
    | | | | `-DeclRefExpr 0x132008fa8 <col:35> 'int' lvalue Var 0x1319283f0 'length' 'int'
    | | | `-DeclRefExpr 0x132008fe0 <col:43> 'int' lvalue ParmVar 0x131928170 'sz' 'int'
    | | `-IntegerLiteral 0x132009040 <col:49> 'int' 0
    | `-CompoundStmt 0x1320092d8 <col:52, line:14:5>
    |   |-CallExpr 0x132009250 <line:12:9, col:26> 'int'
    |   | |-ImplicitCastExpr 0x132009238 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x1320091f8 <col:9> 'int ()' Function 0x132009140 'WOLFSSL_MSG' 'int ()'
    |   | `-ImplicitCastExpr 0x132009278 <col:21> 'char *' <ArrayToPointerDecay>
    |   |   `-StringLiteral 0x132009218 <col:21> 'char[4]' lvalue "STR"
    |   `-ReturnStmt 0x1320092c8 <line:13:9, col:16>
    |     `-RecoveryExpr 0x1320092a8 <col:16> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x1320093d8 <line:16:5, line:17:16>
    | |-BinaryOperator 0x132009370 <line:16:9, col:19> 'int' '=='
    | | |-ImplicitCastExpr 0x132009358 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x132009318 <col:9> 'int' lvalue Var 0x1319283f0 'length' 'int'
    | | `-IntegerLiteral 0x132009338 <col:19> 'int' 0
    | `-ReturnStmt 0x1320093c8 <line:17:9, col:16>
    |   `-RecoveryExpr 0x1320093a8 <col:16> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x1320097e8 <line:19:5, line:22:5>
    | |-BinaryOperator 0x1320096c8 <line:19:9, col:44> 'int' contains-errors '<'
    | | |-CallExpr 0x132009688 <col:9, col:40> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x1320094d8 <col:9> 'int ()' Function 0x132009420 'GetASNTag' 'int ()'
    | | | |-RecoveryExpr 0x1320094f8 <col:19> '<dependent type>' contains-errors lvalue
    | | | |-UnaryOperator 0x132009638 <col:26, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | | | `-RecoveryExpr 0x132009618 <col:27> '<dependent type>' contains-errors lvalue
    | | | |-UnaryOperator 0x132009670 <col:32, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | | | `-RecoveryExpr 0x132009650 <col:33> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x132009578 <col:38> 'int' lvalue ParmVar 0x131928170 'sz' 'int'
    | | `-IntegerLiteral 0x1320095d8 <col:44> 'int' 0
    | `-CompoundStmt 0x1320097c8 <col:47, line:22:5>
    |   |-CallExpr 0x132009740 <line:20:9, col:26> 'int'
    |   | |-ImplicitCastExpr 0x132009728 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x1320096e8 <col:9> 'int ()' Function 0x132009140 'WOLFSSL_MSG' 'int ()'
    |   | `-ImplicitCastExpr 0x132009768 <col:21> 'char *' <ArrayToPointerDecay>
    |   |   `-StringLiteral 0x132009708 <col:21> 'char[4]' lvalue "STR"
    |   `-ReturnStmt 0x1320097b8 <line:21:9, col:16>
    |     `-RecoveryExpr 0x132009798 <col:16> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x132009bd8 <line:24:5, line:35:5> has_else
    | |-RecoveryExpr 0x132009878 <line:24:9, col:41> '_Bool' contains-errors
    | |-CompoundStmt 0x132009968 <col:44, line:27:5>
    | | `-BinaryOperator 0x132009948 <line:26:9, col:38> '<dependent type>' contains-errors '='
    | |   |-CXXDependentScopeMemberExpr 0x1320098e0 <col:9, col:15> '<dependent type>' contains-errors lvalue ->extPolicyConstRxpSet
    | |   | `-RecoveryExpr 0x1320098b8 <col:9> '<dependent type>' contains-errors lvalue
    | |   |   `-DeclRefExpr 0x132009898 <col:9> 'int *' lvalue ParmVar 0x131928228 'cert' 'int *'
    | |   `-IntegerLiteral 0x132009928 <col:38> 'int' 1
    | `-IfStmt 0x132009ba8 <line:28:10, line:35:5> has_else
    |   |-RecoveryExpr 0x1320099f0 <line:28:14, col:46> '_Bool' contains-errors
    |   |-CompoundStmt 0x132009ae0 <col:49, line:31:5>
    |   | `-BinaryOperator 0x132009ac0 <line:30:9, col:38> '<dependent type>' contains-errors '='
    |   |   |-CXXDependentScopeMemberExpr 0x132009a58 <col:9, col:15> '<dependent type>' contains-errors lvalue ->extPolicyConstIpmSet
    |   |   | `-RecoveryExpr 0x132009a30 <col:9> '<dependent type>' contains-errors lvalue
    |   |   |   `-DeclRefExpr 0x132009a10 <col:9> 'int *' lvalue ParmVar 0x131928228 'cert' 'int *'
    |   |   `-IntegerLiteral 0x132009aa0 <col:38> 'int' 1
    |   `-CompoundStmt 0x132009b90 <line:32:10, line:35:5>
    |     `-CallExpr 0x132009b50 <line:33:9, col:26> 'int'
    |       |-ImplicitCastExpr 0x132009b38 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x132009af8 <col:9> 'int ()' Function 0x132009140 'WOLFSSL_MSG' 'int ()'
    |       `-ImplicitCastExpr 0x132009b78 <col:21> 'char *' <ArrayToPointerDecay>
    |         `-StringLiteral 0x132009b18 <col:21> 'char[4]' lvalue "STR"
    |-IfStmt 0x131941920 <line:38:5, line:41:5>
    | |-BinaryOperator 0x131941800 <line:38:9, col:15> 'int' '<'
    | | |-ImplicitCastExpr 0x132009de0 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x132009da0 <col:9> 'int' lvalue Var 0x131928560 'ret' 'int'
    | | `-IntegerLiteral 0x132009dc0 <col:15> 'int' 0
    | `-CompoundStmt 0x131941900 <col:18, line:41:5>
    |   |-CallExpr 0x131941878 <line:39:9, col:26> 'int'
    |   | |-ImplicitCastExpr 0x131941860 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x131941820 <col:9> 'int ()' Function 0x132009140 'WOLFSSL_MSG' 'int ()'
    |   | `-ImplicitCastExpr 0x1319418a0 <col:21> 'char *' <ArrayToPointerDecay>
    |   |   `-StringLiteral 0x131941840 <col:21> 'char[4]' lvalue "STR"
    |   `-ReturnStmt 0x1319418f0 <line:40:9, col:16>
    |     `-ImplicitCastExpr 0x1319418d8 <col:16> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x1319418b8 <col:16> 'int' lvalue Var 0x131928560 'ret' 'int'
    |-IfStmt 0x131941a68 <line:42:5, line:45:5>
    | |-BinaryOperator 0x131941998 <line:42:9, col:22> 'int' '>'
    | | |-ImplicitCastExpr 0x131941980 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x131941940 <col:9> 'int' lvalue Var 0x1319284a8 'skipLength' 'int'
    | | `-IntegerLiteral 0x131941960 <col:22> 'int' 1
    | `-CompoundStmt 0x131941a50 <col:25, line:45:5>
    |   `-CallExpr 0x131941a10 <line:43:9, col:26> 'int'
    |     |-ImplicitCastExpr 0x1319419f8 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x1319419b8 <col:9> 'int ()' Function 0x132009140 'WOLFSSL_MSG' 'int ()'
    |     `-ImplicitCastExpr 0x131941a38 <col:21> 'char *' <ArrayToPointerDecay>
    |       `-StringLiteral 0x1319419d8 <col:21> 'char[4]' lvalue "STR"
    `-ReturnStmt 0x131941b58 <line:48:5, col:12>
      `-IntegerLiteral 0x131941b38 <col:12> 'int' 0
