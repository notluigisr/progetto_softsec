`-FunctionDecl 0x13480e108  line:1:1 invalid decompress_gzip 'int (int *, int *, int, int, int **, int *)'
  |-ParmVarDecl 0x13480dd28 <col:17, col:27> col:27 invalid tvb 'int *'
  |-ParmVarDecl 0x13480dda8 <col:32, col:45> col:45 invalid pinfo 'int *'
  |-ParmVarDecl 0x13480de28 <col:52, col:56> col:56 used offset 'int'
  |-ParmVarDecl 0x13480dea8 <col:64, col:72> col:72 invalid length 'int'
  |-ParmVarDecl 0x13480df60 <col:80, col:91> col:91 invalid decompressed_tvb 'int **'
  |-ParmVarDecl 0x13480dfe0 <col:109, col:114> col:114 used decompressed_offset 'int *'
  `-CompoundStmt 0x1341230c0 <line:2:1, line:11:1>
    |-BinaryOperator 0x134122c80 <line:3:5, col:70> '<dependent type>' contains-errors '='
    | |-UnaryOperator 0x13480e218 <col:5, col:6> '<dependent type>' contains-errors prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x13480e200 <col:6> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x13480e1e0 <col:6> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x134122c40 <col:25, col:70> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13480e390 <col:25> 'int ()' Function 0x13480e2d8 'tvb_child_uncompress' 'int ()'
    |   |-RecoveryExpr 0x13480e3b0 <col:46> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x13480e3d0 <col:51> '<dependent type>' contains-errors lvalue
    |   |-DeclRefExpr 0x134122c00 <col:56> 'int' lvalue ParmVar 0x13480de28 'offset' 'int'
    |   `-RecoveryExpr 0x134122c20 <col:64> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x134122d10 <line:4:5, col:28> 'int' '='
    | |-UnaryOperator 0x134122cd8 <col:5, col:6> 'int' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x134122cc0 <col:6> 'int *' <LValueToRValue>
    | |   `-DeclRefExpr 0x134122ca0 <col:6> 'int *' lvalue ParmVar 0x13480dfe0 'decompressed_offset' 'int *'
    | `-IntegerLiteral 0x134122cf0 <col:28> 'int' 0
    `-IfStmt 0x134123090 <line:5:5, line:10:5> has_else
      |-UnaryOperator 0x134122d68 <line:5:9, col:10> '<dependent type>' contains-errors prefix '*' cannot overflow
      | `-ImplicitCastExpr 0x134122d50 <col:10> '<dependent type>' contains-errors <LValueToRValue>
      |   `-RecoveryExpr 0x134122d30 <col:10> '<dependent type>' contains-errors lvalue
      |-CompoundStmt 0x134122db0 <col:28, line:7:5>
      | `-ReturnStmt 0x134122da0 <line:6:9, col:16>
      |   `-IntegerLiteral 0x134122d80 <col:16> 'int' 1
      `-CompoundStmt 0x134123070 <line:7:12, line:10:5>
        |-CallExpr 0x134123008 <line:8:9, col:53> '<dependent type>' contains-errors
        | |-DeclRefExpr 0x134122ea8 <col:9> 'int ()' Function 0x134122df0 'col_append_str' 'int ()'
        | |-CXXDependentScopeMemberExpr 0x134122ee8 <col:24, col:31> '<dependent type>' contains-errors lvalue ->cinfo
        | | `-RecoveryExpr 0x134122ec8 <col:24> '<dependent type>' contains-errors lvalue
        | |-RecoveryExpr 0x134122fe8 <col:38> '<dependent type>' contains-errors lvalue
        | `-StringLiteral 0x134122f90 <col:48> 'char[4]' lvalue "STR"
        `-ReturnStmt 0x134123060 <line:9:9, col:16>
          `-IntegerLiteral 0x134123040 <col:16> 'int' 0
