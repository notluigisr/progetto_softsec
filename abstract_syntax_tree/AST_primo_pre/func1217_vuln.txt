`-FunctionDecl 0x144141b58  line:1:9 invalid tcp_splice_read 'int (struct socket *, int *, struct pipe_inode_info *, int, unsigned int)'
  |-ParmVarDecl 0x144128668 <col:25, col:40> col:40 used sock 'struct socket *'
  |-ParmVarDecl 0x144128718 <col:46, col:54> col:54 invalid ppos 'int *'
  |-ParmVarDecl 0x1441418e8 <line:2:4, col:28> col:28 used pipe 'struct pipe_inode_info *'
  |-ParmVarDecl 0x144141968 <col:34, col:41> col:41 invalid len 'int'
  |-ParmVarDecl 0x1441419e8 <line:3:4, col:17> col:17 used flags 'unsigned int'
  `-CompoundStmt 0x144148ea8 <line:4:1, line:77:1>
    |-DeclStmt 0x144141e78 <line:5:2, col:28>
    | |-RecordDecl 0x144141c28 <col:2, col:9> col:9 struct sock
    | `-VarDecl 0x144141d98 <col:2, col:26> col:15 used sk 'struct sock *' cinit
    |   `-RecoveryExpr 0x144141e38 <col:20, col:26> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x144141e00 <col:20> 'struct socket *' lvalue ParmVar 0x144128668 'sock' 'struct socket *'
    |-DeclStmt 0x144142180 <line:6:2, line:10:3>
    | |-RecordDecl 0x144141e90 <line:6:2, col:9> col:9 struct tcp_splice_state
    | `-VarDecl 0x144141f88 <col:2, col:26> col:26 referenced invalid tss 'struct tcp_splice_state'
    |-DeclStmt 0x144142218 <line:11:2, col:12>
    | `-VarDecl 0x1441421b0 <col:2, col:7> col:7 used timeo 'long'
    |-DeclStmt 0x1441422b0 <line:13:2, col:9>
    | `-VarDecl 0x144142248 <col:2, col:6> col:6 used ret 'int'
    |-CallExpr 0x1441424a8 <line:15:2, col:25> 'int' contains-errors
    | |-ImplicitCastExpr 0x144142490 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x144142420 <col:2> 'int ()' Function 0x144142368 'sock_rps_record_flow' 'int ()'
    | `-ImplicitCastExpr 0x1441424d0 <col:23> 'struct sock *' contains-errors <LValueToRValue>
    |   `-DeclRefExpr 0x144142440 <col:23> 'struct sock *' contains-errors lvalue Var 0x144141d98 'sk' 'struct sock *'
    |-IfStmt 0x144142708 <line:17:2, line:18:11>
    | |-CallExpr 0x144142638 <line:17:6, col:20> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x1441425c8 <col:6> 'int ()' Function 0x144142510 'unlikely' 'int ()'
    | | `-UnaryOperator 0x144142620 <col:15, col:16> '<dependent type>' contains-errors prefix '*' cannot overflow
    | |   `-ImplicitCastExpr 0x144142608 <col:16> '<dependent type>' contains-errors <LValueToRValue>
    | |     `-RecoveryExpr 0x1441425e8 <col:16> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x1441426f8 <line:18:3, col:11>
    |   `-UnaryOperator 0x1441426e0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x1441426c8 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x1441426a8 <col:11> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x144147000 <line:20:2, col:18> 'int' contains-errors '='
    | |-DeclRefExpr 0x144142728 <col:2> 'int' lvalue Var 0x144142248 'ret' 'int'
    | `-BinaryOperator 0x1441427e0 <col:8, col:18> '<dependent type>' contains-errors '='
    |   |-RecoveryExpr 0x1441427c0 <col:8> '<dependent type>' contains-errors lvalue
    |   `-IntegerLiteral 0x144142760 <col:18> 'int' 0
    |-CallExpr 0x144147158 <line:22:2, col:14> 'int' contains-errors
    | |-ImplicitCastExpr 0x144147140 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x144147100 <col:2> 'int ()' Function 0x144147048 'lock_sock' 'int ()'
    | `-ImplicitCastExpr 0x144147180 <col:12> 'struct sock *' contains-errors <LValueToRValue>
    |   `-DeclRefExpr 0x144147120 <col:12> 'struct sock *' contains-errors lvalue Var 0x144141d98 'sk' 'struct sock *'
    |-BinaryOperator 0x144147478 <line:24:2, col:60> 'long' contains-errors '='
    | |-DeclRefExpr 0x144147198 <col:2> 'long' lvalue Var 0x1441421b0 'timeo' 'long'
    | `-CallExpr 0x144147448 <col:10, col:60> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x144147298 <col:10> 'int ()' Function 0x1441471e0 'sock_rcvtimeo' 'int ()'
    |   |-DeclRefExpr 0x1441472b8 <col:24> 'struct sock *' contains-errors lvalue Var 0x144141d98 'sk' 'struct sock *'
    |   `-BinaryOperator 0x144147428 <col:28, col:50> '<dependent type>' contains-errors '&'
    |     |-CXXDependentScopeMemberExpr 0x144147338 <col:28, col:40> '<dependent type>' contains-errors lvalue ->f_flags
    |     | `-RecoveryExpr 0x144147310 <col:28, col:34> '<dependent type>' contains-errors lvalue
    |     |   `-DeclRefExpr 0x1441472d8 <col:28> 'struct socket *' lvalue ParmVar 0x144128668 'sock' 'struct socket *'
    |     `-RecoveryExpr 0x144147408 <col:50> '<dependent type>' contains-errors lvalue
    |-WhileStmt 0x144148d88 <line:25:2, line:69:2>
    | |-CXXDependentScopeMemberExpr 0x1441474b8 <line:25:9, col:13> '<dependent type>' contains-errors lvalue .len
    | | `-RecoveryExpr 0x144147498 <col:9> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x144148d40 <col:18, line:69:2>
    |   |-BinaryOperator 0x1441476a8 <line:26:3, col:35> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x144147500 <col:3> 'int' lvalue Var 0x144142248 'ret' 'int'
    |   | `-CallExpr 0x144147678 <col:9, col:35> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x144147600 <col:9> 'int ()' Function 0x144147548 '__tcp_splice_read' 'int ()'
    |   |   |-DeclRefExpr 0x144147620 <col:27> 'struct sock *' contains-errors lvalue Var 0x144141d98 'sk' 'struct sock *'
    |   |   `-UnaryOperator 0x144147660 <col:31, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |     `-RecoveryExpr 0x144147640 <col:32> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x144148800 <line:27:3, line:56:3> has_else
    |   | |-BinaryOperator 0x144147720 <line:27:7, col:13> 'int' '<'
    |   | | |-ImplicitCastExpr 0x144147708 <col:7> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x1441476c8 <col:7> 'int' lvalue Var 0x144142248 'ret' 'int'
    |   | | `-IntegerLiteral 0x1441476e8 <col:13> 'int' 0
    |   | |-BreakStmt 0x144147740 <line:28:4>
    |   | `-IfStmt 0x1441487e0 <line:29:8, line:56:3>
    |   |   |-UnaryOperator 0x144147780 <line:29:12, col:13> 'int' prefix '!' cannot overflow
    |   |   | `-ImplicitCastExpr 0x144147768 <col:13> 'int' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x144147748 <col:13> 'int' lvalue Var 0x144142248 'ret' 'int'
    |   |   `-CompoundStmt 0x144148790 <col:18, line:56:3>
    |   |     |-IfStmt 0x1441477d8 <line:30:4, line:31:5>
    |   |     | |-RecoveryExpr 0x1441477b0 <line:30:8> '<dependent type>' contains-errors lvalue
    |   |     | `-BreakStmt 0x1441477d0 <line:31:5>
    |   |     |-IfStmt 0x1441479b8 <line:32:4, line:33:5>
    |   |     | |-CallExpr 0x144147980 <line:32:8, col:31> '<dependent type>' contains-errors
    |   |     | | |-DeclRefExpr 0x1441478d8 <col:8> 'int ()' Function 0x144147820 'sock_flag' 'int ()'
    |   |     | | |-DeclRefExpr 0x1441478f8 <col:18> 'struct sock *' contains-errors lvalue Var 0x144141d98 'sk' 'struct sock *'
    |   |     | | `-RecoveryExpr 0x144147960 <col:22> '<dependent type>' contains-errors lvalue
    |   |     | `-BreakStmt 0x1441479b0 <line:33:5>
    |   |     |-IfStmt 0x144147c18 <line:34:4, line:37:4>
    |   |     | |-RecoveryExpr 0x144147a10 <line:34:8, col:12> '<dependent type>' contains-errors lvalue
    |   |     | | `-DeclRefExpr 0x1441479d8 <col:8> 'struct sock *' contains-errors lvalue Var 0x144141d98 'sk' 'struct sock *'
    |   |     | `-CompoundStmt 0x144147bf8 <col:20, line:37:4>
    |   |     |   |-BinaryOperator 0x144147bd0 <line:35:5, col:24> 'int' contains-errors '='
    |   |     |   | |-DeclRefExpr 0x144147a38 <col:5> 'int' lvalue Var 0x144142248 'ret' 'int'
    |   |     |   | `-CallExpr 0x144147b90 <col:11, col:24> 'int' contains-errors
    |   |     |   |   |-ImplicitCastExpr 0x144147b78 <col:11> 'int (*)()' <FunctionToPointerDecay>
    |   |     |   |   | `-DeclRefExpr 0x144147b38 <col:11> 'int ()' Function 0x144147a80 'sock_error' 'int ()'
    |   |     |   |   `-ImplicitCastExpr 0x144147bb8 <col:22> 'struct sock *' contains-errors <LValueToRValue>
    |   |     |   |     `-DeclRefExpr 0x144147b58 <col:22> 'struct sock *' contains-errors lvalue Var 0x144141d98 'sk' 'struct sock *'
    |   |     |   `-BreakStmt 0x144147bf0 <line:36:5>
    |   |     |-IfStmt 0x144147cc0 <line:38:4, line:39:5>
    |   |     | |-RecoveryExpr 0x144147c98 <line:38:8, col:26> '_Bool' contains-errors
    |   |     | `-BreakStmt 0x144147cb8 <line:39:5>
    |   |     |-IfStmt 0x144147e00 <line:40:4, line:45:4>
    |   |     | |-RecoveryExpr 0x144147d40 <line:40:8, col:24> '_Bool' contains-errors
    |   |     | `-CompoundStmt 0x144147de8 <col:35, line:45:4>
    |   |     |   `-BreakStmt 0x144147de0 <line:44:5>
    |   |     |-IfStmt 0x144147eb0 <line:46:4, line:49:4>
    |   |     | |-UnaryOperator 0x144147e58 <line:46:8, col:9> 'int' prefix '!' cannot overflow
    |   |     | | `-ImplicitCastExpr 0x144147e40 <col:9> 'long' <LValueToRValue>
    |   |     | |   `-DeclRefExpr 0x144147e20 <col:9> 'long' lvalue Var 0x1441421b0 'timeo' 'long'
    |   |     | `-CompoundStmt 0x144147e98 <col:16, line:49:4>
    |   |     |   `-BreakStmt 0x144147e90 <line:48:5>
    |   |     |-IfStmt 0x144148768 <line:51:4, line:54:4>
    |   |     | |-RecoveryExpr 0x144148568 <line:51:8, col:30> '_Bool' contains-errors
    |   |     | `-CompoundStmt 0x144148748 <col:33, line:54:4>
    |   |     |   |-BinaryOperator 0x144148720 <line:52:5, col:32> 'int' '='
    |   |     |   | |-DeclRefExpr 0x144148588 <col:5> 'int' lvalue Var 0x144142248 'ret' 'int'
    |   |     |   | `-CallExpr 0x1441486e0 <col:11, col:32> 'int'
    |   |     |   |   |-ImplicitCastExpr 0x1441486c8 <col:11> 'int (*)()' <FunctionToPointerDecay>
    |   |     |   |   | `-DeclRefExpr 0x144148688 <col:11> 'int ()' Function 0x1441485d0 'sock_intr_errno' 'int ()'
    |   |     |   |   `-ImplicitCastExpr 0x144148708 <col:27> 'long' <LValueToRValue>
    |   |     |   |     `-DeclRefExpr 0x1441486a8 <col:27> 'long' lvalue Var 0x1441421b0 'timeo' 'long'
    |   |     |   `-BreakStmt 0x144148740 <line:53:5>
    |   |     `-ContinueStmt 0x144148788 <line:55:4>
    |   |-CompoundAssignOperator 0x1441488e0 <line:57:3, col:14> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   | |-CXXDependentScopeMemberExpr 0x144148878 <col:3, col:7> '<dependent type>' contains-errors lvalue .len
    |   | | `-RecoveryExpr 0x144148850 <col:3> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x144148830 <col:3> 'struct tcp_splice_state' lvalue Var 0x144141f88 'tss' 'struct tcp_splice_state'
    |   | `-DeclRefExpr 0x1441488c0 <col:14> 'int' lvalue Var 0x144142248 'ret' 'int'
    |   |-IfStmt 0x144148988 <line:60:3, line:61:4>
    |   | |-UnaryOperator 0x144148968 <line:60:7, col:8> 'int' prefix '!' cannot overflow
    |   | | `-ImplicitCastExpr 0x144148950 <col:8> 'long' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x144148930 <col:8> 'long' lvalue Var 0x1441421b0 'timeo' 'long'
    |   | `-BreakStmt 0x144148980 <line:61:4>
    |   |-CallExpr 0x144148ae0 <line:62:3, col:18> 'int' contains-errors
    |   | |-ImplicitCastExpr 0x144148ac8 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x144148a88 <col:3> 'int ()' Function 0x1441489d0 'release_sock' 'int ()'
    |   | `-ImplicitCastExpr 0x144148b08 <col:16> 'struct sock *' contains-errors <LValueToRValue>
    |   |   `-DeclRefExpr 0x144148aa8 <col:16> 'struct sock *' contains-errors lvalue Var 0x144141d98 'sk' 'struct sock *'
    |   |-CallExpr 0x144148b78 <line:63:3, col:15> 'int' contains-errors
    |   | |-ImplicitCastExpr 0x144148b60 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x144148b20 <col:3> 'int ()' Function 0x144147048 'lock_sock' 'int ()'
    |   | `-ImplicitCastExpr 0x144148ba0 <col:13> 'struct sock *' contains-errors <LValueToRValue>
    |   |   `-DeclRefExpr 0x144148b40 <col:13> 'struct sock *' contains-errors lvalue Var 0x144141d98 'sk' 'struct sock *'
    |   `-IfStmt 0x144148d20 <line:65:3, line:68:4>
    |     |-RecoveryExpr 0x144148cf8 <line:65:7, line:67:29> '_Bool' contains-errors
    |     `-BreakStmt 0x144148d18 <line:68:4>
    |-CallExpr 0x144148e00 <line:71:2, col:17> 'int' contains-errors
    | |-ImplicitCastExpr 0x144148de8 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x144148da8 <col:2> 'int ()' Function 0x1441489d0 'release_sock' 'int ()'
    | `-ImplicitCastExpr 0x144148e28 <col:15> 'struct sock *' contains-errors <LValueToRValue>
    |   `-DeclRefExpr 0x144148dc8 <col:15> 'struct sock *' contains-errors lvalue Var 0x144141d98 'sk' 'struct sock *'
    `-ReturnStmt 0x144148e98 <line:76:2, col:9>
      `-ImplicitCastExpr 0x144148e80 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x144148e60 <col:9> 'int' lvalue Var 0x144142248 'ret' 'int'
