`-FunctionDecl 0x123830ba8  line:1:1 invalid mp_capable_print 'int (int *, const char *, int, char)'
  |-ParmVarDecl 0x123830928 <col:18, col:38> col:38 invalid ndo 'int *'
  |-ParmVarDecl 0x1238309a8 <line:2:18, col:32> col:32 used opt 'const char *'
  |-ParmVarDecl 0x123830a28 <col:37, col:43> col:43 invalid opt_len 'int'
  |-ParmVarDecl 0x123830aa0 <col:52, col:59> col:59 used flags 'char'
  `-CompoundStmt 0x123854da8 <line:3:1, line:22:1>
    |-DeclStmt 0x123830f40 <line:4:9, col:71>
    | |-RecordDecl 0x123830c70 <col:15, col:22> col:22 struct mp_capable
    | `-VarDecl 0x123830dd8 <col:9, col:68> col:34 used mpc 'const struct mp_capable *' cinit
    |   `-CStyleCastExpr 0x123830f00 <col:40, col:68> 'const struct mp_capable *' <BitCast>
    |     `-ImplicitCastExpr 0x123830ee8 <col:68> 'const char *' <LValueToRValue> part_of_explicit_cast
    |       `-DeclRefExpr 0x123830e40 <col:68> 'const char *' lvalue ParmVar 0x1238309a8 'opt' 'const char *'
    |-IfStmt 0x123853f78 <line:6:9, line:8:24>
    | |-RecoveryExpr 0x123853f28 <line:6:13, line:7:69> '_Bool' contains-errors
    | `-ReturnStmt 0x123853f68 <line:8:17, col:24>
    |   `-IntegerLiteral 0x123853f48 <col:24> 'int' 0
    |-IfStmt 0x123854900 <line:10:9, line:13:9>
    | |-BinaryOperator 0x1238545e0 <line:10:13, col:53> 'int' contains-errors '!='
    | | |-CallExpr 0x123854598 <col:13, col:48> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x1238540f0 <col:13> 'int ()' Function 0x123854038 'MP_CAPABLE_OPT_VERSION' 'int ()'
    | | | `-RecoveryExpr 0x123854570 <col:36, col:41> '<dependent type>' contains-errors lvalue
    | | |   `-DeclRefExpr 0x123854110 <col:36> 'const struct mp_capable *' lvalue Var 0x123830dd8 'mpc' 'const struct mp_capable *'
    | | `-IntegerLiteral 0x1238545c0 <col:53> 'int' 0
    | `-CompoundStmt 0x1238548e0 <col:56, line:13:9>
    |   |-CallExpr 0x123854888 <line:11:17, col:76> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x1238546e0 <col:17> 'int ()' Function 0x123854628 'ND_PRINT' 'int ()'
    |   | `-ParenExpr 0x123854868 <col:26, col:75> '<dependent type>' contains-errors
    |   |   `-BinaryOperator 0x123854848 <col:27, col:74> '<dependent type>' contains-errors ','
    |   |     |-BinaryOperator 0x123854780 <col:27, col:32> 'char[4]' contains-errors ','
    |   |     | |-RecoveryExpr 0x123854700 <col:27> '<dependent type>' contains-errors lvalue
    |   |     | `-StringLiteral 0x123854760 <col:32> 'char[4]' lvalue "STR"
    |   |     `-CallExpr 0x123854820 <col:39, col:74> '<dependent type>' contains-errors
    |   |       |-DeclRefExpr 0x1238547a0 <col:39> 'int ()' Function 0x123854038 'MP_CAPABLE_OPT_VERSION' 'int ()'
    |   |       `-RecoveryExpr 0x1238547f8 <col:62, col:67> '<dependent type>' contains-errors lvalue
    |   |         `-DeclRefExpr 0x1238547c0 <col:62> 'const struct mp_capable *' lvalue Var 0x123830dd8 'mpc' 'const struct mp_capable *'
    |   `-ReturnStmt 0x1238548d0 <line:12:17, col:24>
    |     `-IntegerLiteral 0x1238548b0 <col:24> 'int' 1
    |-IfStmt 0x123854ac0 <line:15:9, line:16:38>
    | |-BinaryOperator 0x1238549d8 <line:15:13, col:26> '<dependent type>' contains-errors '&'
    | | |-RecoveryExpr 0x123854958 <col:13, col:18> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x123854920 <col:13> 'const struct mp_capable *' lvalue Var 0x123830dd8 'mpc' 'const struct mp_capable *'
    | | `-RecoveryExpr 0x1238549b8 <col:26> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x123854a98 <line:16:17, col:38> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1238549f8 <col:17> 'int ()' Function 0x123854628 'ND_PRINT' 'int ()'
    |   `-ParenExpr 0x123854a78 <col:26, col:37> 'char[4]' contains-errors
    |     `-BinaryOperator 0x123854a58 <col:27, col:32> 'char[4]' contains-errors ','
    |       |-RecoveryExpr 0x123854a18 <col:27> '<dependent type>' contains-errors lvalue
    |       `-StringLiteral 0x123854a38 <col:32> 'char[4]' lvalue "STR"
    |-CallExpr 0x123854b60 <line:17:9, col:70> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x123854ae0 <col:9> 'int ()' Function 0x123854628 'ND_PRINT' 'int ()'
    | `-BinaryOperator 0x123854b40 <col:19, col:24> 'char[4]' contains-errors ','
    |   |-RecoveryExpr 0x123854b00 <col:19> '<dependent type>' contains-errors lvalue
    |   `-StringLiteral 0x123854b20 <col:24> 'char[4]' lvalue "STR"
    |-IfStmt 0x123854c90 <line:18:9, line:19:80>
    | |-BinaryOperator 0x123854bc8 <line:18:13, col:24> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x123854b88 <col:13> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x123854ba8 <col:24> 'int' 20
    | `-CallExpr 0x123854c68 <line:19:17, col:80> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x123854be8 <col:17> 'int ()' Function 0x123854628 'ND_PRINT' 'int ()'
    |   `-BinaryOperator 0x123854c48 <col:27, col:32> 'char[4]' contains-errors ','
    |     |-RecoveryExpr 0x123854c08 <col:27> '<dependent type>' contains-errors lvalue
    |     `-StringLiteral 0x123854c28 <col:32> 'char[4]' lvalue "STR"
    |-CallExpr 0x123854d50 <line:20:9, col:30> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x123854cb0 <col:9> 'int ()' Function 0x123854628 'ND_PRINT' 'int ()'
    | `-ParenExpr 0x123854d30 <col:18, col:29> 'char[4]' contains-errors
    |   `-BinaryOperator 0x123854d10 <col:19, col:24> 'char[4]' contains-errors ','
    |     |-RecoveryExpr 0x123854cd0 <col:19> '<dependent type>' contains-errors lvalue
    |     `-StringLiteral 0x123854cf0 <col:24> 'char[4]' lvalue "STR"
    `-ReturnStmt 0x123854d98 <line:21:9, col:16>
      `-IntegerLiteral 0x123854d78 <col:16> 'int' 1
