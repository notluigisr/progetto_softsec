`-FunctionDecl 0x12c00e038  line:1:1 invalid GetCode_ 'int (int *, int *, int, int, int *)'
  |-ParmVarDecl 0x12c00dd28 <col:10, col:19> col:19 invalid fd 'int *'
  |-ParmVarDecl 0x12c00dda8 <col:23, col:41> col:41 referenced invalid scd 'int *'
  |-ParmVarDecl 0x12c00de28 <col:46, col:50> col:50 used code_size 'int'
  |-ParmVarDecl 0x12c00dea8 <col:61, col:65> col:65 used flag 'int'
  |-ParmVarDecl 0x12c00df28 <col:71, col:76> col:76 used ZeroDataBlockP 'int *'
  `-CompoundStmt 0x12c0296d0 <line:2:1, line:43:1>
    |-DeclStmt 0x12c00e2a8 <line:3:2, col:25>
    | |-VarDecl 0x12c00e120 <col:2, col:16> col:16 used i 'int'
    | |-VarDecl 0x12c00e1a0 <col:2, col:19> col:19 used j 'int'
    | `-VarDecl 0x12c00e220 <col:2, col:22> col:22 used ret 'int'
    |-DeclStmt 0x12c00e340 <line:4:2, col:21>
    | `-VarDecl 0x12c00e2d8 <col:2, col:16> col:16 used count 'unsigned char'
    |-IfStmt 0x12c027798 <line:6:2, line:12:2>
    | |-ImplicitCastExpr 0x12c00e378 <line:6:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x12c00e358 <col:6> 'int' lvalue ParmVar 0x12c00dea8 'flag' 'int'
    | `-CompoundStmt 0x12c027760 <col:12, line:12:2>
    |   |-BinaryOperator 0x12c027468 <line:7:3, col:17> '<dependent type>' contains-errors '='
    |   | |-CXXDependentScopeMemberExpr 0x12c027400 <col:3, col:8> '<dependent type>' contains-errors lvalue ->curbit
    |   | | `-RecoveryExpr 0x12c00e3b0 <col:3> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x12c00e390 <col:3> 'int *' lvalue ParmVar 0x12c00dda8 'scd' 'int *'
    |   | `-IntegerLiteral 0x12c027448 <col:17> 'int' 0
    |   |-BinaryOperator 0x12c027538 <line:8:3, col:18> '<dependent type>' contains-errors '='
    |   | |-CXXDependentScopeMemberExpr 0x12c0274d0 <col:3, col:8> '<dependent type>' contains-errors lvalue ->lastbit
    |   | | `-RecoveryExpr 0x12c0274a8 <col:3> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x12c027488 <col:3> 'int *' lvalue ParmVar 0x12c00dda8 'scd' 'int *'
    |   | `-IntegerLiteral 0x12c027518 <col:18> 'int' 0
    |   |-BinaryOperator 0x12c027608 <line:9:3, col:20> '<dependent type>' contains-errors '='
    |   | |-CXXDependentScopeMemberExpr 0x12c0275a0 <col:3, col:8> '<dependent type>' contains-errors lvalue ->last_byte
    |   | | `-RecoveryExpr 0x12c027578 <col:3> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x12c027558 <col:3> 'int *' lvalue ParmVar 0x12c00dda8 'scd' 'int *'
    |   | `-IntegerLiteral 0x12c0275e8 <col:20> 'int' 0
    |   |-BinaryOperator 0x12c027710 <line:10:3, col:15> '<dependent type>' contains-errors '='
    |   | |-CXXDependentScopeMemberExpr 0x12c027670 <col:3, col:8> '<dependent type>' contains-errors lvalue ->done
    |   | | `-RecoveryExpr 0x12c027648 <col:3> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x12c027628 <col:3> 'int *' lvalue ParmVar 0x12c00dda8 'scd' 'int *'
    |   | `-RecoveryExpr 0x12c0276f0 <col:15> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x12c027750 <line:11:3, col:10>
    |     `-IntegerLiteral 0x12c027730 <col:10> 'int' 0
    |-IfStmt 0x12c028d88 <line:14:2, line:30:2>
    | |-BinaryOperator 0x12c0278e8 <line:14:7, col:41> 'int' contains-errors '>='
    | | |-ParenExpr 0x12c027860 <col:7, col:31> '<dependent type>' contains-errors
    | | | `-BinaryOperator 0x12c027840 <col:8, col:22> '<dependent type>' contains-errors '+'
    | | |   |-CXXDependentScopeMemberExpr 0x12c0277d8 <col:8, col:13> '<dependent type>' contains-errors lvalue ->curbit
    | | |   | `-RecoveryExpr 0x12c0277b8 <col:8> '<dependent type>' contains-errors lvalue
    | | |   `-DeclRefExpr 0x12c027820 <col:22> 'int' lvalue ParmVar 0x12c00de28 'code_size' 'int'
    | | `-CXXDependentScopeMemberExpr 0x12c0278a0 <col:36, col:41> '<dependent type>' contains-errors lvalue ->lastbit
    | |   `-RecoveryExpr 0x12c027880 <col:36> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x12c028d40 <col:50, line:30:2>
    |   |-IfStmt 0x12c027af8 <line:15:3, line:20:3>
    |   | |-CXXDependentScopeMemberExpr 0x12c027928 <line:15:7, col:12> '<dependent type>' contains-errors lvalue ->done
    |   | | `-RecoveryExpr 0x12c027908 <col:7> '<dependent type>' contains-errors lvalue
    |   | `-CompoundStmt 0x12c027ad8 <col:18, line:20:3>
    |   |   |-IfStmt 0x12c027a70 <line:16:4, line:18:4>
    |   |   | |-BinaryOperator 0x12c027a40 <line:16:8, col:28> 'int' contains-errors '>='
    |   |   | | |-CXXDependentScopeMemberExpr 0x12c027990 <col:8, col:13> '<dependent type>' contains-errors lvalue ->curbit
    |   |   | | | `-RecoveryExpr 0x12c027970 <col:8> '<dependent type>' contains-errors lvalue
    |   |   | | `-CXXDependentScopeMemberExpr 0x12c0279f8 <col:23, col:28> '<dependent type>' contains-errors lvalue ->lastbit
    |   |   | |   `-RecoveryExpr 0x12c0279d8 <col:23> '<dependent type>' contains-errors lvalue
    |   |   | `-CompoundStmt 0x12c027a60 <col:37, line:18:4>
    |   |   `-ReturnStmt 0x12c027ac8 <line:19:4, col:12>
    |   |     `-UnaryOperator 0x12c027ab0 <col:11, col:12> 'int' prefix '-'
    |   |       `-IntegerLiteral 0x12c027a90 <col:12> 'int' 1
    |   |-BinaryOperator 0x12c027d48 <line:21:3, col:42> '<dependent type>' contains-errors '='
    |   | |-ArraySubscriptExpr 0x12c027be0 <col:3, col:13> '<dependent type>' contains-errors lvalue
    |   | | |-ImplicitCastExpr 0x12c027bc8 <col:3, col:8> '<dependent type>' contains-errors <LValueToRValue>
    |   | | | `-CXXDependentScopeMemberExpr 0x12c027b60 <col:3, col:8> '<dependent type>' contains-errors lvalue ->buf
    |   | | |   `-RecoveryExpr 0x12c027b38 <col:3> '<dependent type>' contains-errors lvalue
    |   | | |     `-DeclRefExpr 0x12c027b18 <col:3> 'int *' lvalue ParmVar 0x12c00dda8 'scd' 'int *'
    |   | | `-IntegerLiteral 0x12c027ba8 <col:12> 'int' 0
    |   | `-ArraySubscriptExpr 0x12c027d28 <col:17, col:42> '<dependent type>' contains-errors lvalue
    |   |   |-ImplicitCastExpr 0x12c027d10 <col:17, col:22> '<dependent type>' contains-errors <LValueToRValue>
    |   |   | `-CXXDependentScopeMemberExpr 0x12c027c20 <col:17, col:22> '<dependent type>' contains-errors lvalue ->buf
    |   |   |   `-RecoveryExpr 0x12c027c00 <col:17> '<dependent type>' contains-errors lvalue
    |   |   `-BinaryOperator 0x12c027cf0 <col:26, col:41> '<dependent type>' contains-errors '-'
    |   |     |-CXXDependentScopeMemberExpr 0x12c027c88 <col:26, col:31> '<dependent type>' contains-errors lvalue ->last_byte
    |   |     | `-RecoveryExpr 0x12c027c68 <col:26> '<dependent type>' contains-errors lvalue
    |   |     `-IntegerLiteral 0x12c027cd0 <col:41> 'int' 2
    |   |-BinaryOperator 0x12c027f98 <line:22:3, col:42> '<dependent type>' contains-errors '='
    |   | |-ArraySubscriptExpr 0x12c027e30 <col:3, col:13> '<dependent type>' contains-errors lvalue
    |   | | |-ImplicitCastExpr 0x12c027e18 <col:3, col:8> '<dependent type>' contains-errors <LValueToRValue>
    |   | | | `-CXXDependentScopeMemberExpr 0x12c027db0 <col:3, col:8> '<dependent type>' contains-errors lvalue ->buf
    |   | | |   `-RecoveryExpr 0x12c027d88 <col:3> '<dependent type>' contains-errors lvalue
    |   | | |     `-DeclRefExpr 0x12c027d68 <col:3> 'int *' lvalue ParmVar 0x12c00dda8 'scd' 'int *'
    |   | | `-IntegerLiteral 0x12c027df8 <col:12> 'int' 1
    |   | `-ArraySubscriptExpr 0x12c027f78 <col:17, col:42> '<dependent type>' contains-errors lvalue
    |   |   |-ImplicitCastExpr 0x12c027f60 <col:17, col:22> '<dependent type>' contains-errors <LValueToRValue>
    |   |   | `-CXXDependentScopeMemberExpr 0x12c027e70 <col:17, col:22> '<dependent type>' contains-errors lvalue ->buf
    |   |   |   `-RecoveryExpr 0x12c027e50 <col:17> '<dependent type>' contains-errors lvalue
    |   |   `-BinaryOperator 0x12c027f40 <col:26, col:41> '<dependent type>' contains-errors '-'
    |   |     |-CXXDependentScopeMemberExpr 0x12c027ed8 <col:26, col:31> '<dependent type>' contains-errors lvalue ->last_byte
    |   |     | `-RecoveryExpr 0x12c027eb8 <col:26> '<dependent type>' contains-errors lvalue
    |   |     `-IntegerLiteral 0x12c027f20 <col:41> 'int' 1
    |   |-IfStmt 0x12c028840 <line:24:16, line:25:16>
    |   | |-BinaryOperator 0x12c028300 <line:24:20, col:80> 'int' contains-errors '<='
    |   | | |-ParenExpr 0x12c0282c0 <col:20, col:75> 'unsigned char' contains-errors
    |   | | | `-BinaryOperator 0x12c0282a0 <col:21, col:74> 'unsigned char' contains-errors '='
    |   | | |   |-DeclRefExpr 0x12c027fb8 <col:21> 'unsigned char' lvalue Var 0x12c00e2d8 'count' 'unsigned char'
    |   | | |   `-CallExpr 0x12c028268 <col:29, col:74> '<dependent type>' contains-errors
    |   | | |     |-DeclRefExpr 0x12c028130 <col:29> 'int ()' Function 0x12c028078 'GetDataBlock' 'int ()'
    |   | | |     |-RecoveryExpr 0x12c028150 <col:42> '<dependent type>' contains-errors lvalue
    |   | | |     |-UnaryOperator 0x12c028230 <col:46, col:57> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | | |     | `-ArraySubscriptExpr 0x12c028210 <col:47, col:57> '<dependent type>' contains-errors lvalue
    |   | | |     |   |-ImplicitCastExpr 0x12c0281f8 <col:47, col:52> '<dependent type>' contains-errors <LValueToRValue>
    |   | | |     |   | `-CXXDependentScopeMemberExpr 0x12c028190 <col:47, col:52> '<dependent type>' contains-errors lvalue ->buf
    |   | | |     |   |   `-RecoveryExpr 0x12c028170 <col:47> '<dependent type>' contains-errors lvalue
    |   | | |     |   `-IntegerLiteral 0x12c0281d8 <col:56> 'int' 2
    |   | | |     `-DeclRefExpr 0x12c028248 <col:60> 'int *' lvalue ParmVar 0x12c00df28 'ZeroDataBlockP' 'int *'
    |   | | `-IntegerLiteral 0x12c0282e0 <col:80> 'int' 0
    |   | `-BinaryOperator 0x12c028820 <line:25:4, col:16> '<dependent type>' contains-errors '='
    |   |   |-CXXDependentScopeMemberExpr 0x12c028368 <col:4, col:9> '<dependent type>' contains-errors lvalue ->done
    |   |   | `-RecoveryExpr 0x12c028340 <col:4> '<dependent type>' contains-errors lvalue
    |   |   |   `-DeclRefExpr 0x12c028320 <col:4> 'int *' lvalue ParmVar 0x12c00dda8 'scd' 'int *'
    |   |   `-RecoveryExpr 0x12c028800 <col:16> '<dependent type>' contains-errors lvalue
    |   |-BinaryOperator 0x12c028980 <line:27:3, col:24> '<dependent type>' contains-errors '='
    |   | |-CXXDependentScopeMemberExpr 0x12c0288a8 <col:3, col:8> '<dependent type>' contains-errors lvalue ->last_byte
    |   | | `-RecoveryExpr 0x12c028880 <col:3> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x12c028860 <col:3> 'int *' lvalue ParmVar 0x12c00dda8 'scd' 'int *'
    |   | `-BinaryOperator 0x12c028960 <col:20, col:24> 'int' '+'
    |   |   |-IntegerLiteral 0x12c0288f0 <col:20> 'int' 2
    |   |   `-ImplicitCastExpr 0x12c028948 <col:24> 'int' <IntegralCast>
    |   |     `-ImplicitCastExpr 0x12c028930 <col:24> 'unsigned char' <LValueToRValue>
    |   |       `-DeclRefExpr 0x12c028910 <col:24> 'unsigned char' lvalue Var 0x12c00e2d8 'count' 'unsigned char'
    |   |-BinaryOperator 0x12c028b80 <line:28:3, col:48> '<dependent type>' contains-errors '='
    |   | |-CXXDependentScopeMemberExpr 0x12c0289e8 <col:3, col:8> '<dependent type>' contains-errors lvalue ->curbit
    |   | | `-RecoveryExpr 0x12c0289c0 <col:3> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x12c0289a0 <col:3> 'int *' lvalue ParmVar 0x12c00dda8 'scd' 'int *'
    |   | `-BinaryOperator 0x12c028b60 <col:17, col:48> '<dependent type>' contains-errors '+'
    |   |   |-ParenExpr 0x12c028b20 <col:17, col:44> '<dependent type>' contains-errors
    |   |   | `-BinaryOperator 0x12c028b00 <col:18, col:37> '<dependent type>' contains-errors '-'
    |   |   |   |-CXXDependentScopeMemberExpr 0x12c028a50 <col:18, col:23> '<dependent type>' contains-errors lvalue ->curbit
    |   |   |   | `-RecoveryExpr 0x12c028a30 <col:18> '<dependent type>' contains-errors lvalue
    |   |   |   `-CXXDependentScopeMemberExpr 0x12c028ab8 <col:32, col:37> '<dependent type>' contains-errors lvalue ->lastbit
    |   |   |     `-RecoveryExpr 0x12c028a98 <col:32> '<dependent type>' contains-errors lvalue
    |   |   `-IntegerLiteral 0x12c028b40 <col:48> 'int' 16
    |   `-BinaryOperator 0x12c028d20 <line:29:3, col:28> '<dependent type>' contains-errors '='
    |     |-CXXDependentScopeMemberExpr 0x12c028be8 <col:3, col:8> '<dependent type>' contains-errors lvalue ->lastbit
    |     | `-RecoveryExpr 0x12c028bc0 <col:3> '<dependent type>' contains-errors lvalue
    |     |   `-DeclRefExpr 0x12c028ba0 <col:3> 'int *' lvalue ParmVar 0x12c00dda8 'scd' 'int *'
    |     `-BinaryOperator 0x12c028d00 <col:18, col:28> 'int' '*'
    |       |-ParenExpr 0x12c028cc0 <col:18, col:26> 'int'
    |       | `-BinaryOperator 0x12c028ca0 <col:19, col:21> 'int' '+'
    |       |   |-IntegerLiteral 0x12c028c30 <col:19> 'int' 2
    |       |   `-ImplicitCastExpr 0x12c028c88 <col:21> 'int' <IntegralCast>
    |       |     `-ImplicitCastExpr 0x12c028c70 <col:21> 'unsigned char' <LValueToRValue>
    |       |       `-DeclRefExpr 0x12c028c50 <col:21> 'unsigned char' lvalue Var 0x12c00e2d8 'count' 'unsigned char'
    |       `-IntegerLiteral 0x12c028ce0 <col:28> 'int' 8
    |-BinaryOperator 0x12c028de8 <line:32:2, col:8> 'int' '='
    | |-DeclRefExpr 0x12c028da8 <col:2> 'int' lvalue Var 0x12c00e220 'ret' 'int'
    | `-IntegerLiteral 0x12c028dc8 <col:8> 'int' 0
    |-ForStmt 0x12c029570 <line:33:2, line:39:3>
    | |-BinaryOperator 0x12c028f10 <line:33:7, col:28> 'int' contains-errors ','
    | | |-BinaryOperator 0x12c028e90 <col:7, col:16> 'int' contains-errors '='
    | | | |-DeclRefExpr 0x12c028e08 <col:7> 'int' lvalue Var 0x12c00e120 'i' 'int'
    | | | `-CXXDependentScopeMemberExpr 0x12c028e48 <col:11, col:16> '<dependent type>' contains-errors lvalue ->curbit
    | | |   `-RecoveryExpr 0x12c028e28 <col:11> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x12c028ef0 <col:24, col:28> 'int' '='
    | |   |-DeclRefExpr 0x12c028eb0 <col:24> 'int' lvalue Var 0x12c00e1a0 'j' 'int'
    | |   `-IntegerLiteral 0x12c028ed0 <col:28> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x12c028fa0 <col:31, col:35> 'int' '<'
    | | |-ImplicitCastExpr 0x12c028f70 <col:31> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x12c028f30 <col:31> 'int' lvalue Var 0x12c00e1a0 'j' 'int'
    | | `-ImplicitCastExpr 0x12c028f88 <col:35> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x12c028f50 <col:35> 'int' lvalue ParmVar 0x12c00de28 'code_size' 'int'
    | |-BinaryOperator 0x12c029030 <col:46, col:53> 'int' ','
    | | |-UnaryOperator 0x12c028fe0 <col:46, col:48> 'int' prefix '++'
    | | | `-DeclRefExpr 0x12c028fc0 <col:48> 'int' lvalue Var 0x12c00e120 'i' 'int'
    | | `-UnaryOperator 0x12c029018 <col:51, col:53> 'int' prefix '++'
    | |   `-DeclRefExpr 0x12c028ff8 <col:53> 'int' lvalue Var 0x12c00e1a0 'j' 'int'
    | `-IfStmt 0x12c029540 <line:34:3, line:39:3> has_else
    |   |-BinaryOperator 0x12c029128 <line:34:7, col:26> 'int' contains-errors '<'
    |   | |-DeclRefExpr 0x12c029050 <col:7> 'int' lvalue Var 0x12c00e120 'i' 'int'
    |   | `-BinaryOperator 0x12c029108 <col:11, col:26> '<dependent type>' contains-errors '*'
    |   |   |-RecoveryExpr 0x12c0290e8 <col:11> '<dependent type>' contains-errors lvalue
    |   |   `-IntegerLiteral 0x12c029088 <col:26> 'int' 8
    |   |-CompoundStmt 0x12c029488 <col:29, line:36:3>
    |   | `-CompoundAssignOperator 0x12c029458 <line:35:4, col:56> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   |   |-DeclRefExpr 0x12c029148 <col:4> 'int' lvalue Var 0x12c00e220 'ret' 'int'
    |   |   `-BinaryOperator 0x12c029438 <col:11, col:56> '<dependent type>' contains-errors '<<'
    |   |     |-ParenExpr 0x12c0293f8 <col:11, col:51> 'int' contains-errors
    |   |     | `-BinaryOperator 0x12c0293d8 <col:12, col:50> 'int' contains-errors '!='
    |   |     |   |-ParenExpr 0x12c029398 <col:12, col:45> '<dependent type>' contains-errors
    |   |     |   | `-BinaryOperator 0x12c029378 <col:13, col:44> '<dependent type>' contains-errors '&'
    |   |     |   |   |-ArraySubscriptExpr 0x12c029260 <col:13, col:27> '<dependent type>' contains-errors lvalue
    |   |     |   |   | |-ImplicitCastExpr 0x12c029248 <col:13, col:18> '<dependent type>' contains-errors <LValueToRValue>
    |   |     |   |   | | `-CXXDependentScopeMemberExpr 0x12c029188 <col:13, col:18> '<dependent type>' contains-errors lvalue ->buf
    |   |     |   |   | |   `-RecoveryExpr 0x12c029168 <col:13> '<dependent type>' contains-errors lvalue
    |   |     |   |   | `-BinaryOperator 0x12c029228 <col:22, col:26> 'int' '/'
    |   |     |   |   |   |-ImplicitCastExpr 0x12c029210 <col:22> 'int' <LValueToRValue>
    |   |     |   |   |   | `-DeclRefExpr 0x12c0291d0 <col:22> 'int' lvalue Var 0x12c00e120 'i' 'int'
    |   |     |   |   |   `-IntegerLiteral 0x12c0291f0 <col:26> 'int' 8
    |   |     |   |   `-ParenExpr 0x12c029358 <col:31, col:44> 'int'
    |   |     |   |     `-BinaryOperator 0x12c029338 <col:32, col:43> 'int' '<<'
    |   |     |   |       |-IntegerLiteral 0x12c029280 <col:32> 'int' 1
    |   |     |   |       `-ParenExpr 0x12c029318 <col:37, col:43> 'int'
    |   |     |   |         `-BinaryOperator 0x12c0292f8 <col:38, col:42> 'int' '%'
    |   |     |   |           |-ImplicitCastExpr 0x12c0292e0 <col:38> 'int' <LValueToRValue>
    |   |     |   |           | `-DeclRefExpr 0x12c0292a0 <col:38> 'int' lvalue Var 0x12c00e120 'i' 'int'
    |   |     |   |           `-IntegerLiteral 0x12c0292c0 <col:42> 'int' 8
    |   |     |   `-IntegerLiteral 0x12c0293b8 <col:50> 'int' 0
    |   |     `-DeclRefExpr 0x12c029418 <col:56> 'int' lvalue Var 0x12c00e1a0 'j' 'int'
    |   `-CompoundStmt 0x12c029520 <line:36:10, line:39:3>
    |     |-BinaryOperator 0x12c0294f8 <line:37:4, col:11> 'int' '='
    |     | |-DeclRefExpr 0x12c0294a0 <col:4> 'int' lvalue Var 0x12c00e220 'ret' 'int'
    |     | `-UnaryOperator 0x12c0294e0 <col:10, col:11> 'int' prefix '-'
    |     |   `-IntegerLiteral 0x12c0294c0 <col:11> 'int' 1
    |     `-BreakStmt 0x12c029518 <line:38:4>
    |-CompoundAssignOperator 0x12c029658 <line:41:2, col:17> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | |-CXXDependentScopeMemberExpr 0x12c0295f0 <col:2, col:7> '<dependent type>' contains-errors lvalue ->curbit
    | | `-RecoveryExpr 0x12c0295c8 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x12c0295a8 <col:2> 'int *' lvalue ParmVar 0x12c00dda8 'scd' 'int *'
    | `-DeclRefExpr 0x12c029638 <col:17> 'int' lvalue ParmVar 0x12c00de28 'code_size' 'int'
    `-ReturnStmt 0x12c0296c0 <line:42:2, col:9>
      `-ImplicitCastExpr 0x12c0296a8 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x12c029688 <col:9> 'int' lvalue Var 0x12c00e220 'ret' 'int'
