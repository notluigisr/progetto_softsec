`-FunctionDecl 0x14780ddc8  line:1:1 invalid transcode_utf8 'int (int)'
  |-ParmVarDecl 0x14780dcf0 <col:16, <invalid sloc>> col:19 invalid 'int'
  `-CompoundStmt 0x147828b40 <line:3:1, line:72:1>
    |-IfStmt 0x14780dfa0 <line:6:5, line:9:5>
    | |-BinaryOperator 0x14780df08 <line:6:9, col:21> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x14780dec8 <col:9> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x14780dee8 <col:21> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x14780df90 <line:7:5, line:9:5>
    |-BinaryOperator 0x14780e160 <line:10:5, col:34> 'unsigned long' contains-errors '='
    | |-UnaryExprOrTypeTraitExpr 0x14780e0b8 <col:5, col:12> 'unsigned long' contains-errors sizeof
    | | `-RecoveryExpr 0x14780e098 <col:12> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x14780e140 <col:18, col:34> '<dependent type>' contains-errors
    |   `-CXXDependentScopeMemberExpr 0x14780e0f8 <col:18, col:27> '<dependent type>' contains-errors lvalue .length
    |     `-RecoveryExpr 0x14780e0d8 <col:18> '<dependent type>' contains-errors lvalue
    `-ForStmt 0x147828b08 <line:11:5, line:70:5>
      |-<<<NULL>>>
      |-<<<NULL>>>
      |-BinaryOperator 0x14780e2b0 <line:11:24, col:28> 'int' contains-errors '<'
      | |-RecoveryExpr 0x14780e270 <col:24> '<dependent type>' contains-errors lvalue
      | `-RecoveryExpr 0x14780e290 <col:28> '<dependent type>' contains-errors lvalue
      |-UnaryOperator 0x14780e320 <col:33, col:35> '<dependent type>' contains-errors prefix '++' cannot overflow
      | `-RecoveryExpr 0x14780e300 <col:35> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x147828ae8 <line:12:5, line:70:5>
        |-DeclStmt 0x147827648 <line:14:9, col:78>
        | `-VarDecl 0x14780e350 <col:9, col:77> col:23 used codepoint 'unsigned long' cinit
        |   `-CallExpr 0x147827610 <col:35, col:77> '<dependent type>' contains-errors
        |     |-DeclRefExpr 0x147827510 <col:35> 'int ()' Function 0x147827458 'get_next_utf8_codepoint' 'int ()'
        |     |-RecoveryExpr 0x1478275b0 <col:59> '<dependent type>' contains-errors lvalue
        |     |-RecoveryExpr 0x1478275d0 <col:69> '<dependent type>' contains-errors lvalue
        |     `-RecoveryExpr 0x1478275f0 <col:72> '<dependent type>' contains-errors lvalue
        `-IfStmt 0x147828ab8 <line:15:9, line:69:9> has_else
          |-RecoveryExpr 0x147827660 <line:15:13> '_Bool' contains-errors
          |-CompoundStmt 0x147827730 <line:16:9, line:26:9>
          | `-IfStmt 0x147827700 <line:18:13, line:25:13> has_else
          |   |-RecoveryExpr 0x147827680 <line:18:17, col:29> '_Bool' contains-errors
          |   |-CompoundStmt 0x1478276c0 <line:19:13, line:21:13>
          |   `-CompoundStmt 0x1478276f0 <line:23:13, line:25:13>
          `-IfStmt 0x147828a88 <line:27:14, line:69:9> has_else
            |-BinaryOperator 0x1478277b8 <line:27:18, col:30> 'int' contains-errors '<'
            | |-ImplicitCastExpr 0x147827788 <col:18> 'unsigned long' contains-errors <LValueToRValue>
            | | `-DeclRefExpr 0x147827748 <col:18> 'unsigned long' contains-errors lvalue Var 0x14780e350 'codepoint' 'unsigned long'
            | `-ImplicitCastExpr 0x1478277a0 <col:30> 'unsigned long' <IntegralCast>
            |   `-IntegerLiteral 0x147827768 <col:30> 'int' 128
            |-CompoundStmt 0x147827918 <line:28:9, line:38:9>
            | |-DeclStmt 0x147827850 <line:29:13, col:51>
            | | `-VarDecl 0x1478277e8 <col:13, col:18> col:18 used ch 'char'
            | `-IfStmt 0x1478278e8 <line:30:13, line:37:13> has_else
            |   |-RecoveryExpr 0x147827868 <line:30:17, col:29> '_Bool' contains-errors
            |   |-CompoundStmt 0x147827888 <line:31:13, line:33:13>
            |   `-CompoundStmt 0x1478278d8 <line:35:13, line:37:13>
            `-IfStmt 0x147828a58 <line:39:14, line:69:9> has_else
              |-RecoveryExpr 0x147827938 <line:39:18, col:30> '_Bool' contains-errors
              |-CompoundStmt 0x147827958 <line:40:9, line:42:9>
              `-IfStmt 0x147828a28 <line:43:14, line:69:9> has_else
                |-RecoveryExpr 0x147827ae8 <line:43:18, line:44:68> '_Bool' contains-errors
                |-CompoundStmt 0x147827b28 <line:45:9, line:47:9>
                `-CompoundStmt 0x147828a00 <line:49:9, line:69:9>
                  |-DeclStmt 0x147827be8 <line:50:13, col:36>
                  | `-VarDecl 0x147827b50 <col:13, col:32> col:27 used ch 'unsigned char' cinit
                  |   `-ImplicitCastExpr 0x147827bd0 <col:32> 'unsigned char' <IntegralCast>
                  |     `-CharacterLiteral 0x147827bb8 <col:32> 'int' 0
                  |-IfStmt 0x147828298 <line:51:13, line:62:13> has_else
                  | |-RecoveryExpr 0x147827c00 <line:51:17, col:29> '_Bool' contains-errors
                  | |-CompoundStmt 0x147827e20 <line:52:13, line:54:13>
                  | | `-BinaryOperator 0x147827e00 <line:53:17, col:46> 'unsigned char' contains-errors '='
                  | |   |-DeclRefExpr 0x147827c20 <col:17> 'unsigned char' lvalue Var 0x147827b50 'ch' 'unsigned char'
                  | |   `-ImplicitCastExpr 0x147827de8 <col:22, col:46> 'unsigned char' contains-errors <IntegralCast>
                  | |     `-CallExpr 0x147827da8 <col:22, col:46> 'int' contains-errors
                  | |       |-ImplicitCastExpr 0x147827d90 <col:22> 'int (*)()' <FunctionToPointerDecay>
                  | |       | `-DeclRefExpr 0x147827d20 <col:22> 'int ()' Function 0x147827c68 'encode_winansi' 'int ()'
                  | |       `-ImplicitCastExpr 0x147827dd0 <col:37> 'unsigned long' contains-errors <LValueToRValue>
                  | |         `-DeclRefExpr 0x147827d40 <col:37> 'unsigned long' contains-errors lvalue Var 0x14780e350 'codepoint' 'unsigned long'
                  | `-IfStmt 0x147828268 <line:55:18, line:62:13> has_else
                  |   |-RecoveryExpr 0x147827e38 <line:55:22, col:34> '_Bool' contains-errors
                  |   |-CompoundStmt 0x147828028 <line:56:13, line:58:13>
                  |   | `-BinaryOperator 0x147828008 <line:57:17, col:47> 'unsigned char' contains-errors '='
                  |   |   |-DeclRefExpr 0x147827e58 <col:17> 'unsigned char' lvalue Var 0x147827b50 'ch' 'unsigned char'
                  |   |   `-ImplicitCastExpr 0x147827ff0 <col:22, col:47> 'unsigned char' contains-errors <IntegralCast>
                  |   |     `-CallExpr 0x147827fb0 <col:22, col:47> 'int' contains-errors
                  |   |       |-ImplicitCastExpr 0x147827f98 <col:22> 'int (*)()' <FunctionToPointerDecay>
                  |   |       | `-DeclRefExpr 0x147827f58 <col:22> 'int ()' Function 0x147827ea0 'encode_macroman' 'int ()'
                  |   |       `-ImplicitCastExpr 0x147827fd8 <col:38> 'unsigned long' contains-errors <LValueToRValue>
                  |   |         `-DeclRefExpr 0x147827f78 <col:38> 'unsigned long' contains-errors lvalue Var 0x14780e350 'codepoint' 'unsigned long'
                  |   `-IfStmt 0x147828248 <line:59:18, line:62:13>
                  |     |-RecoveryExpr 0x147828040 <line:59:22, col:34> '_Bool' contains-errors
                  |     `-CompoundStmt 0x147828230 <line:60:13, line:62:13>
                  |       `-BinaryOperator 0x147828210 <line:61:17, col:45> 'unsigned char' contains-errors '='
                  |         |-DeclRefExpr 0x147828060 <col:17> 'unsigned char' lvalue Var 0x147827b50 'ch' 'unsigned char'
                  |         `-ImplicitCastExpr 0x1478281f8 <col:22, col:45> 'unsigned char' contains-errors <IntegralCast>
                  |           `-CallExpr 0x1478281b8 <col:22, col:45> 'int' contains-errors
                  |             |-ImplicitCastExpr 0x1478281a0 <col:22> 'int (*)()' <FunctionToPointerDecay>
                  |             | `-DeclRefExpr 0x147828160 <col:22> 'int ()' Function 0x1478280a8 'encode_pdfdoc' 'int ()'
                  |             `-ImplicitCastExpr 0x1478281e0 <col:36> 'unsigned long' contains-errors <LValueToRValue>
                  |               `-DeclRefExpr 0x147828180 <col:36> 'unsigned long' contains-errors lvalue Var 0x14780e350 'codepoint' 'unsigned long'
                  `-IfStmt 0x147828380 <line:63:13, line:67:13>
                    |-BinaryOperator 0x147828330 <line:63:17, col:23> 'int' '=='
                    | |-ImplicitCastExpr 0x147828318 <col:17> 'int' <IntegralCast>
                    | | `-ImplicitCastExpr 0x147828300 <col:17> 'unsigned char' <LValueToRValue>
                    | |   `-DeclRefExpr 0x1478282c8 <col:17> 'unsigned char' lvalue Var 0x147827b50 'ch' 'unsigned char'
                    | `-CharacterLiteral 0x1478282e8 <col:23> 'int' 0
                    `-CompoundStmt 0x147828370 <line:64:13, line:67:13>
