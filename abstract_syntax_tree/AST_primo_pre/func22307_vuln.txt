`-FunctionDecl 0x15480df10  line:1:6 invalid cJSON_ReplaceItemInObject 'void (int *, const char *, int *)'
  |-ParmVarDecl 0x15480dd28 <col:33, col:40> col:40 invalid object 'int *'
  |-ParmVarDecl 0x15480dda8 <col:48, col:60> col:60 used string 'const char *'
  |-ParmVarDecl 0x15480de28 <col:68, col:75> col:75 referenced invalid newitem 'int *'
  `-CompoundStmt 0x154828790 <line:2:1, line:13:1>
    |-DeclStmt 0x15480e070 <line:3:2, col:11>
    | `-VarDecl 0x15480dfe8 <col:2, col:10> col:6 used i 'int' cinit
    |   `-IntegerLiteral 0x15480e050 <col:10> 'int' 0
    |-WhileStmt 0x154828300 <line:5:2, line:8:2>
    | |-BinaryOperator 0x154828230 <line:5:10, col:51> 'int' contains-errors '&&'
    | | |-RecoveryExpr 0x15480e370 <col:10> '<dependent type>' contains-errors lvalue
    | | `-CallExpr 0x154828200 <col:15, col:51> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x15480e280 <col:15> 'int ()' Function 0x15480e1c8 'cJSON_strcasecmp' 'int ()'
    | |   |-CXXDependentScopeMemberExpr 0x15480e3b0 <col:33, col:36> '<dependent type>' contains-errors lvalue ->string
    | |   | `-RecoveryExpr 0x15480e390 <col:33> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x15480e300 <col:44> 'const char *' lvalue ParmVar 0x15480dda8 'string' 'const char *'
    | `-CompoundStmt 0x1548282e8 <col:55, line:8:2>
    |   `-UnaryOperator 0x154828270 <line:6:3, col:5> 'int' prefix '++'
    |     `-DeclRefExpr 0x154828250 <col:5> 'int' lvalue Var 0x15480dfe8 'i' 'int'
    `-IfStmt 0x154828770 <line:9:2, line:12:2>
      |-RecoveryExpr 0x154828338 <line:9:7> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x154828750 <col:11, line:12:2>
        |-BinaryOperator 0x154828598 <line:10:3, col:42> '<dependent type>' contains-errors '='
        | |-CXXDependentScopeMemberExpr 0x1548283a0 <col:3, col:12> '<dependent type>' contains-errors lvalue ->string
        | | `-RecoveryExpr 0x154828378 <col:3> '<dependent type>' contains-errors lvalue
        | |   `-DeclRefExpr 0x154828358 <col:3> 'int *' lvalue ParmVar 0x15480de28 'newitem' 'int *'
        | `-CallExpr 0x154828558 <col:21, col:42> 'int'
        |   |-ImplicitCastExpr 0x154828540 <col:21> 'int (*)()' <FunctionToPointerDecay>
        |   | `-DeclRefExpr 0x1548284c8 <col:21> 'int ()' Function 0x154828410 'cJSON_strdup' 'int ()'
        |   `-ImplicitCastExpr 0x154828580 <col:35> 'const char *' <LValueToRValue>
        |     `-DeclRefExpr 0x1548284e8 <col:35> 'const char *' lvalue ParmVar 0x15480dda8 'string' 'const char *'
        `-CallExpr 0x154828718 <line:11:3, col:48> '<dependent type>' contains-errors
          |-DeclRefExpr 0x154828698 <col:3> 'int ()' Function 0x1548285e0 'cJSON_ReplaceItemInArray' 'int ()'
          |-RecoveryExpr 0x1548286b8 <col:29> '<dependent type>' contains-errors lvalue
          |-DeclRefExpr 0x1548286d8 <col:37> 'int' lvalue Var 0x15480dfe8 'i' 'int'
          `-RecoveryExpr 0x1548286f8 <col:40> '<dependent type>' contains-errors lvalue
