`-FunctionDecl 0x13d128d88  line:1:12 invalid jpc_encrawsigpass 'int (int *, int, int, int *, int *, int, long *)' static
  |-ParmVarDecl 0x13d128928 <col:30, col:47> col:47 invalid out 'int *'
  |-ParmVarDecl 0x13d1289a8 <col:52, col:56> col:56 used bitpos 'int'
  |-ParmVarDecl 0x13d128a28 <col:64, col:68> col:68 used vcausalflag 'int'
  |-ParmVarDecl 0x13d128aa8 <col:81, col:95> col:95 invalid flags 'int *'
  |-ParmVarDecl 0x13d128b28 <line:2:3, col:17> col:17 invalid data 'int *'
  |-ParmVarDecl 0x13d128ba8 <col:23, col:27> col:27 used term 'int'
  |-ParmVarDecl 0x13d128c58 <col:33, col:39> col:39 used nmsedec 'long *'
  `-CompoundStmt 0x13d144bb0 <line:3:1, line:84:1>
    |-DeclStmt 0x13d128ee8 <line:4:2, col:7>
    | `-VarDecl 0x13d128e80 <col:2, col:6> col:6 used i 'int'
    |-DeclStmt 0x13d128f80 <line:5:2, col:7>
    | `-VarDecl 0x13d128f18 <col:2, col:6> col:6 used j 'int'
    |-DeclStmt 0x13d142068 <line:6:2, col:7>
    | `-VarDecl 0x13d142000 <col:2, col:6> col:6 used k 'int'
    |-DeclStmt 0x13d142100 <line:7:2, col:9>
    | `-VarDecl 0x13d142098 <col:2, col:6> col:6 used one 'int'
    |-DeclStmt 0x13d142198 <line:8:2, col:14>
    | `-VarDecl 0x13d142130 <col:2, col:6> col:6 used vscanlen 'int'
    |-DeclStmt 0x13d142230 <line:9:2, col:11>
    | `-VarDecl 0x13d1421c8 <col:2, col:6> col:6 used width 'int'
    |-DeclStmt 0x13d1422c8 <line:10:2, col:12>
    | `-VarDecl 0x13d142260 <col:2, col:6> col:6 used height 'int'
    |-DeclStmt 0x13d142360 <line:11:2, col:14>
    | `-VarDecl 0x13d1422f8 <col:2, col:6> col:6 used frowstep 'int'
    |-DeclStmt 0x13d1423f8 <line:12:2, col:14>
    | `-VarDecl 0x13d142390 <col:2, col:6> col:6 used drowstep 'int'
    |-DeclStmt 0x13d142490 <line:13:2, col:17>
    | `-VarDecl 0x13d142428 <col:2, col:6> col:6 used fstripestep 'int'
    |-DeclStmt 0x13d142528 <line:14:2, col:17>
    | `-VarDecl 0x13d1424c0 <col:2, col:6> col:6 used dstripestep 'int'
    |-BinaryOperator 0x13d142698 <line:22:2, col:13> 'long' '='
    | |-UnaryOperator 0x13d142648 <col:2, col:3> 'long' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x13d142630 <col:3> 'long *' <LValueToRValue>
    | |   `-DeclRefExpr 0x13d142610 <col:3> 'long *' lvalue ParmVar 0x13d128c58 'nmsedec' 'long *'
    | `-ImplicitCastExpr 0x13d142680 <col:13> 'long' <IntegralCast>
    |   `-IntegerLiteral 0x13d142660 <col:13> 'int' 0
    |-BinaryOperator 0x13d142898 <line:23:2, col:33> 'int' contains-errors '='
    | |-DeclRefExpr 0x13d1426b8 <col:2> 'int' lvalue Var 0x13d1421c8 'width' 'int'
    | `-CallExpr 0x13d142870 <col:10, col:33> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13d142830 <col:10> 'int ()' Function 0x13d142778 'jas_matrix_numcols' 'int ()'
    |   `-RecoveryExpr 0x13d142850 <col:29> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x13d142a20 <line:24:2, col:34> 'int' contains-errors '='
    | |-DeclRefExpr 0x13d1428b8 <col:2> 'int' lvalue Var 0x13d142260 'height' 'int'
    | `-CallExpr 0x13d1429f8 <col:11, col:34> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13d1429b8 <col:11> 'int ()' Function 0x13d142900 'jas_matrix_numrows' 'int ()'
    |   `-RecoveryExpr 0x13d1429d8 <col:30> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x13d142ba8 <line:25:2, col:37> 'int' contains-errors '='
    | |-DeclRefExpr 0x13d142a40 <col:2> 'int' lvalue Var 0x13d1422f8 'frowstep' 'int'
    | `-CallExpr 0x13d142b80 <col:13, col:37> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13d142b40 <col:13> 'int ()' Function 0x13d142a88 'jas_matrix_rowstep' 'int ()'
    |   `-RecoveryExpr 0x13d142b60 <col:32> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x13d142c50 <line:26:2, col:36> 'int' contains-errors '='
    | |-DeclRefExpr 0x13d142bc8 <col:2> 'int' lvalue Var 0x13d142390 'drowstep' 'int'
    | `-CallExpr 0x13d142c28 <col:13, col:36> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13d142be8 <col:13> 'int ()' Function 0x13d142a88 'jas_matrix_rowstep' 'int ()'
    |   `-RecoveryExpr 0x13d142c08 <col:32> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x13d142d08 <line:27:2, col:28> 'int' '='
    | |-DeclRefExpr 0x13d142c70 <col:2> 'int' lvalue Var 0x13d142428 'fstripestep' 'int'
    | `-BinaryOperator 0x13d142ce8 <col:16, col:28> 'int' '<<'
    |   |-ImplicitCastExpr 0x13d142cd0 <col:16> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x13d142c90 <col:16> 'int' lvalue Var 0x13d1422f8 'frowstep' 'int'
    |   `-IntegerLiteral 0x13d142cb0 <col:28> 'int' 2
    |-BinaryOperator 0x13d142dc0 <line:28:2, col:28> 'int' '='
    | |-DeclRefExpr 0x13d142d28 <col:2> 'int' lvalue Var 0x13d1424c0 'dstripestep' 'int'
    | `-BinaryOperator 0x13d142da0 <col:16, col:28> 'int' '<<'
    |   |-ImplicitCastExpr 0x13d142d88 <col:16> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x13d142d48 <col:16> 'int' lvalue Var 0x13d142390 'drowstep' 'int'
    |   `-IntegerLiteral 0x13d142d68 <col:28> 'int' 2
    |-BinaryOperator 0x13d143a38 <line:32:2, col:46> 'int' contains-errors '='
    | |-DeclRefExpr 0x13d142e78 <col:2> 'int' lvalue Var 0x13d142428 'fstripestep' 'int'
    | `-CallExpr 0x13d143a00 <col:17, col:46> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13d142f78 <col:17> 'int ()' Function 0x13d142ec0 'jas_matrix_getref' 'int ()'
    |   |-RecoveryExpr 0x13d142f98 <col:35> '<dependent type>' contains-errors lvalue
    |   |-IntegerLiteral 0x13d142fb8 <col:42> 'int' 1
    |   `-IntegerLiteral 0x13d142fd8 <col:45> 'int' 1
    |-ForStmt 0x13d144930 <line:34:2, line:77:2>
    | |-BinaryOperator 0x13d143b68 <line:34:7, col:11> 'int' '='
    | | |-DeclRefExpr 0x13d143b10 <col:7> 'int' lvalue Var 0x13d128e80 'i' 'int'
    | | `-ImplicitCastExpr 0x13d143b50 <col:11> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x13d143b30 <col:11> 'int' lvalue Var 0x13d142260 'height' 'int'
    | |-<<<NULL>>>
    | |-BinaryOperator 0x13d143be0 <col:19, col:23> 'int' '>'
    | | |-ImplicitCastExpr 0x13d143bc8 <col:19> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x13d143b88 <col:19> 'int' lvalue Var 0x13d128e80 'i' 'int'
    | | `-IntegerLiteral 0x13d143ba8 <col:23> 'int' 0
    | |-<<<NULL>>>
    | `-CompoundStmt 0x13d144910 <line:35:33, line:77:2>
    |   |-BinaryOperator 0x13d143ea0 <line:38:3, col:26> 'int' '='
    |   | |-DeclRefExpr 0x13d143cb0 <col:3> 'int' lvalue Var 0x13d142130 'vscanlen' 'int'
    |   | `-CallExpr 0x13d143e58 <col:14, col:26> 'int'
    |   |   |-ImplicitCastExpr 0x13d143e40 <col:14> 'int (*)()' <FunctionToPointerDecay>
    |   |   | `-DeclRefExpr 0x13d143db0 <col:14> 'int ()' Function 0x13d143cf8 'JAS_MIN' 'int ()'
    |   |   |-ImplicitCastExpr 0x13d143e88 <col:22> 'int' <LValueToRValue>
    |   |   | `-DeclRefExpr 0x13d143dd0 <col:22> 'int' lvalue Var 0x13d128e80 'i' 'int'
    |   |   `-IntegerLiteral 0x13d143df0 <col:25> 'int' 4
    |   `-ForStmt 0x13d1448d8 <line:39:3, line:76:3>
    |     |-BinaryOperator 0x13d143f18 <line:39:8, col:12> 'int' '='
    |     | |-DeclRefExpr 0x13d143ec0 <col:8> 'int' lvalue Var 0x13d128f18 'j' 'int'
    |     | `-ImplicitCastExpr 0x13d143f00 <col:12> 'int' <LValueToRValue>
    |     |   `-DeclRefExpr 0x13d143ee0 <col:12> 'int' lvalue Var 0x13d1421c8 'width' 'int'
    |     |-<<<NULL>>>
    |     |-BinaryOperator 0x13d143f90 <col:19, col:23> 'int' '>'
    |     | |-ImplicitCastExpr 0x13d143f78 <col:19> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x13d143f38 <col:19> 'int' lvalue Var 0x13d128f18 'j' 'int'
    |     | `-IntegerLiteral 0x13d143f58 <col:23> 'int' 0
    |     |-<<<NULL>>>
    |     `-CompoundStmt 0x13d1448a0 <col:61, line:76:3>
    |       |-BinaryOperator 0x13d144040 <line:42:4, col:8> 'int' '='
    |       | |-DeclRefExpr 0x13d143fe8 <col:4> 'int' lvalue Var 0x13d142000 'k' 'int'
    |       | `-ImplicitCastExpr 0x13d144028 <col:8> 'int' <LValueToRValue>
    |       |   `-DeclRefExpr 0x13d144008 <col:8> 'int' lvalue Var 0x13d142130 'vscanlen' 'int'
    |       |-IfStmt 0x13d1442b8 <line:46:4, line:48:4>
    |       | |-BinaryOperator 0x13d144278 <line:46:8, col:15> 'int' '<='
    |       | | |-UnaryOperator 0x13d144240 <col:8, col:10> 'int' prefix '--'
    |       | | | `-DeclRefExpr 0x13d144220 <col:10> 'int' lvalue Var 0x13d142000 'k' 'int'
    |       | | `-IntegerLiteral 0x13d144258 <col:15> 'int' 0
    |       | `-CompoundStmt 0x13d1442a0 <col:18, line:48:4>
    |       |   `-ContinueStmt 0x13d144298 <line:47:5>
    |       |-IfStmt 0x13d144490 <line:54:4, line:56:4>
    |       | |-BinaryOperator 0x13d144450 <line:54:8, col:15> 'int' '<='
    |       | | |-UnaryOperator 0x13d144418 <col:8, col:10> 'int' prefix '--'
    |       | | | `-DeclRefExpr 0x13d1443f8 <col:10> 'int' lvalue Var 0x13d142000 'k' 'int'
    |       | | `-IntegerLiteral 0x13d144430 <col:15> 'int' 0
    |       | `-CompoundStmt 0x13d144478 <col:18, line:56:4>
    |       |   `-ContinueStmt 0x13d144470 <line:55:5>
    |       |-IfStmt 0x13d144668 <line:62:4, line:64:4>
    |       | |-BinaryOperator 0x13d144628 <line:62:8, col:15> 'int' '<='
    |       | | |-UnaryOperator 0x13d1445f0 <col:8, col:10> 'int' prefix '--'
    |       | | | `-DeclRefExpr 0x13d1445d0 <col:10> 'int' lvalue Var 0x13d142000 'k' 'int'
    |       | | `-IntegerLiteral 0x13d144608 <col:15> 'int' 0
    |       | `-CompoundStmt 0x13d144650 <col:18, line:64:4>
    |       |   `-ContinueStmt 0x13d144648 <line:63:5>
    |       `-IfStmt 0x13d144840 <line:70:4, line:72:4>
    |         |-BinaryOperator 0x13d144800 <line:70:8, col:15> 'int' '<='
    |         | |-UnaryOperator 0x13d1447c8 <col:8, col:10> 'int' prefix '--'
    |         | | `-DeclRefExpr 0x13d1447a8 <col:10> 'int' lvalue Var 0x13d142000 'k' 'int'
    |         | `-IntegerLiteral 0x13d1447e0 <col:15> 'int' 0
    |         `-CompoundStmt 0x13d144828 <col:18, line:72:4>
    |           `-ContinueStmt 0x13d144820 <line:71:5>
    |-IfStmt 0x13d144b60 <line:79:2, line:81:2>
    | |-ImplicitCastExpr 0x13d144988 <line:79:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x13d144968 <col:6> 'int' lvalue ParmVar 0x13d128ba8 'term' 'int'
    | `-CompoundStmt 0x13d144b48 <col:12, line:81:2>
    |   `-CallExpr 0x13d144b18 <line:80:3, col:35> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x13d144ab8 <col:3> 'int ()' Function 0x13d144a00 'jpc_bitstream_outalign' 'int ()'
    |     |-RecoveryExpr 0x13d144ad8 <col:26> '<dependent type>' contains-errors lvalue
    |     `-IntegerLiteral 0x13d144af8 <col:31> 'int' 42
    `-ReturnStmt 0x13d144ba0 <line:83:2, col:9>
      `-IntegerLiteral 0x13d144b80 <col:9> 'int' 0
