`-FunctionDecl 0x13680df10  line:1:13 invalid vnc_write_pixels_generic 'void (int *, void *, int)' static
  |-ParmVarDecl 0x13680dd28 <col:38, col:48> col:48 invalid vs 'int *'
  |-ParmVarDecl 0x13680dda8 <line:2:38, col:44> col:44 used pixels1 'void *'
  |-ParmVarDecl 0x13680de28 <col:53, col:57> col:57 used size 'int'
  `-CompoundStmt 0x137809648 <line:3:1, line:33:1>
    `-IfStmt 0x137809618 <line:6:5, line:32:5> has_else
      |-BinaryOperator 0x13680e048 <line:6:9, col:32> 'int' contains-errors '=='
      | |-RecoveryExpr 0x13680e028 <col:9> '<dependent type>' contains-errors lvalue
      | `-IntegerLiteral 0x13680dfe8 <col:32> 'int' 4
      |-CompoundStmt 0x136827a10 <col:35, line:14:5>
      | |-DeclStmt 0x13680e1d8 <line:8:9, col:17>
      | | |-VarDecl 0x13680e0d8 <col:9, col:13> col:13 used n 'int'
      | | `-VarDecl 0x13680e158 <col:9, col:16> col:16 used i 'int'
      | |-BinaryOperator 0x13680e288 <line:9:9, col:21> 'int' '='
      | | |-DeclRefExpr 0x13680e1f0 <col:9> 'int' lvalue Var 0x13680e0d8 'n' 'int'
      | | `-BinaryOperator 0x13680e268 <col:13, col:21> 'int' '>>'
      | |   |-ImplicitCastExpr 0x13680e250 <col:13> 'int' <LValueToRValue>
      | |   | `-DeclRefExpr 0x13680e210 <col:13> 'int' lvalue ParmVar 0x13680de28 'size' 'int'
      | |   `-IntegerLiteral 0x13680e230 <col:21> 'int' 2
      | `-ForStmt 0x1368279d8 <line:10:9, line:13:9>
      |   |-BinaryOperator 0x13680e2e8 <line:10:14, col:18> 'int' '='
      |   | |-DeclRefExpr 0x13680e2a8 <col:14> 'int' lvalue Var 0x13680e158 'i' 'int'
      |   | `-IntegerLiteral 0x13680e2c8 <col:18> 'int' 0
      |   |-<<<NULL>>>
      |   |-BinaryOperator 0x13680e378 <col:21, col:25> 'int' '<'
      |   | |-ImplicitCastExpr 0x13680e348 <col:21> 'int' <LValueToRValue>
      |   | | `-DeclRefExpr 0x13680e308 <col:21> 'int' lvalue Var 0x13680e158 'i' 'int'
      |   | `-ImplicitCastExpr 0x13680e360 <col:25> 'int' <LValueToRValue>
      |   |   `-DeclRefExpr 0x13680e328 <col:25> 'int' lvalue Var 0x13680e0d8 'n' 'int'
      |   |-UnaryOperator 0x13680e3b8 <col:28, col:29> 'int' postfix '++'
      |   | `-DeclRefExpr 0x13680e398 <col:28> 'int' lvalue Var 0x13680e158 'i' 'int'
      |   `-CompoundStmt 0x1368279b8 <col:33, line:13:9>
      |     |-CallExpr 0x136827708 <line:11:13, col:49> '<dependent type>' contains-errors
      |     | |-DeclRefExpr 0x136827560 <col:13> 'int ()' Function 0x1368274a8 'vnc_convert_pixel' 'int ()'
      |     | |-RecoveryExpr 0x136827580 <col:31> '<dependent type>' contains-errors lvalue
      |     | |-RecoveryExpr 0x136827698 <col:35> '<dependent type>' contains-errors lvalue
      |     | `-ArraySubscriptExpr 0x1368276e8 <col:40, col:48> 'void'
      |     |   |-ImplicitCastExpr 0x1368276b8 <col:40> 'void *' <LValueToRValue>
      |     |   | `-DeclRefExpr 0x1368275f0 <col:40> 'void *' lvalue ParmVar 0x13680dda8 'pixels1' 'void *'
      |     |   `-ImplicitCastExpr 0x1368276d0 <col:47> 'int' <LValueToRValue>
      |     |     `-DeclRefExpr 0x1368275d0 <col:47> 'int' lvalue Var 0x13680e158 'i' 'int'
      |     `-CallExpr 0x136827980 <line:12:13, col:61> '<dependent type>' contains-errors
      |       |-DeclRefExpr 0x136827820 <col:13> 'int ()' Function 0x136827768 'vnc_write' 'int ()'
      |       |-RecoveryExpr 0x136827840 <col:23> '<dependent type>' contains-errors lvalue
      |       |-RecoveryExpr 0x136827960 <col:27> '<dependent type>' contains-errors lvalue
      |       `-CXXDependentScopeMemberExpr 0x1368278e0 <col:32, col:46> '<dependent type>' contains-errors lvalue .bytes_per_pixel
      |         `-CXXDependentScopeMemberExpr 0x136827898 <col:32, col:36> '<dependent type>' contains-errors lvalue ->client_pf
      |           `-RecoveryExpr 0x136827878 <col:32> '<dependent type>' contains-errors lvalue
      `-IfStmt 0x1378095e8 <line:14:12, line:32:5> has_else
        |-BinaryOperator 0x136827ab0 <line:14:16, col:39> 'int' contains-errors '=='
        | |-RecoveryExpr 0x136827a90 <col:16> '<dependent type>' contains-errors lvalue
        | `-IntegerLiteral 0x136827a50 <col:39> 'int' 2
        |-CompoundStmt 0x136828208 <col:42, line:22:5>
        | |-DeclStmt 0x136827c40 <line:16:9, col:17>
        | | |-VarDecl 0x136827b40 <col:9, col:13> col:13 used n 'int'
        | | `-VarDecl 0x136827bc0 <col:9, col:16> col:16 used i 'int'
        | |-BinaryOperator 0x136827cf0 <line:17:9, col:21> 'int' '='
        | | |-DeclRefExpr 0x136827c58 <col:9> 'int' lvalue Var 0x136827b40 'n' 'int'
        | | `-BinaryOperator 0x136827cd0 <col:13, col:21> 'int' '>>'
        | |   |-ImplicitCastExpr 0x136827cb8 <col:13> 'int' <LValueToRValue>
        | |   | `-DeclRefExpr 0x136827c78 <col:13> 'int' lvalue ParmVar 0x13680de28 'size' 'int'
        | |   `-IntegerLiteral 0x136827c98 <col:21> 'int' 1
        | `-ForStmt 0x1368281d0 <line:18:9, line:21:9>
        |   |-BinaryOperator 0x136827d50 <line:18:14, col:18> 'int' '='
        |   | |-DeclRefExpr 0x136827d10 <col:14> 'int' lvalue Var 0x136827bc0 'i' 'int'
        |   | `-IntegerLiteral 0x136827d30 <col:18> 'int' 0
        |   |-<<<NULL>>>
        |   |-BinaryOperator 0x136827de0 <col:21, col:25> 'int' '<'
        |   | |-ImplicitCastExpr 0x136827db0 <col:21> 'int' <LValueToRValue>
        |   | | `-DeclRefExpr 0x136827d70 <col:21> 'int' lvalue Var 0x136827bc0 'i' 'int'
        |   | `-ImplicitCastExpr 0x136827dc8 <col:25> 'int' <LValueToRValue>
        |   |   `-DeclRefExpr 0x136827d90 <col:25> 'int' lvalue Var 0x136827b40 'n' 'int'
        |   |-UnaryOperator 0x136827e20 <col:28, col:29> 'int' postfix '++'
        |   | `-DeclRefExpr 0x136827e00 <col:28> 'int' lvalue Var 0x136827bc0 'i' 'int'
        |   `-CompoundStmt 0x1368281b0 <col:33, line:21:9>
        |     |-CallExpr 0x136827fe0 <line:19:13, col:49> '<dependent type>' contains-errors
        |     | |-DeclRefExpr 0x136827e38 <col:13> 'int ()' Function 0x1368274a8 'vnc_convert_pixel' 'int ()'
        |     | |-RecoveryExpr 0x136827e58 <col:31> '<dependent type>' contains-errors lvalue
        |     | |-RecoveryExpr 0x136827f70 <col:35> '<dependent type>' contains-errors lvalue
        |     | `-ArraySubscriptExpr 0x136827fc0 <col:40, col:48> 'void'
        |     |   |-ImplicitCastExpr 0x136827f90 <col:40> 'void *' <LValueToRValue>
        |     |   | `-DeclRefExpr 0x136827ec8 <col:40> 'void *' lvalue ParmVar 0x13680dda8 'pixels1' 'void *'
        |     |   `-ImplicitCastExpr 0x136827fa8 <col:47> 'int' <LValueToRValue>
        |     |     `-DeclRefExpr 0x136827ea8 <col:47> 'int' lvalue Var 0x136827bc0 'i' 'int'
        |     `-CallExpr 0x136828178 <line:20:13, col:61> '<dependent type>' contains-errors
        |       |-DeclRefExpr 0x136828018 <col:13> 'int ()' Function 0x136827768 'vnc_write' 'int ()'
        |       |-RecoveryExpr 0x136828038 <col:23> '<dependent type>' contains-errors lvalue
        |       |-RecoveryExpr 0x136828158 <col:27> '<dependent type>' contains-errors lvalue
        |       `-CXXDependentScopeMemberExpr 0x1368280d8 <col:32, col:46> '<dependent type>' contains-errors lvalue .bytes_per_pixel
        |         `-CXXDependentScopeMemberExpr 0x136828090 <col:32, col:36> '<dependent type>' contains-errors lvalue ->client_pf
        |           `-RecoveryExpr 0x136828070 <col:32> '<dependent type>' contains-errors lvalue
        `-IfStmt 0x1378095b8 <line:22:12, line:32:5> has_else
          |-BinaryOperator 0x1368282a8 <line:22:16, col:39> 'int' contains-errors '=='
          | |-RecoveryExpr 0x136828288 <col:16> '<dependent type>' contains-errors lvalue
          | `-IntegerLiteral 0x136828248 <col:39> 'int' 1
          |-CompoundStmt 0x137809350 <col:42, line:30:5>
          | |-DeclStmt 0x137809000 <line:24:9, col:17>
          | | |-VarDecl 0x136828300 <col:9, col:13> col:13 used n 'int'
          | | `-VarDecl 0x136828380 <col:9, col:16> col:16 used i 'int'
          | |-BinaryOperator 0x137809070 <line:25:9, col:13> 'int' '='
          | | |-DeclRefExpr 0x137809018 <col:9> 'int' lvalue Var 0x136828300 'n' 'int'
          | | `-ImplicitCastExpr 0x137809058 <col:13> 'int' <LValueToRValue>
          | |   `-DeclRefExpr 0x137809038 <col:13> 'int' lvalue ParmVar 0x13680de28 'size' 'int'
          | `-ForStmt 0x137809318 <line:26:9, line:29:9>
          |   |-BinaryOperator 0x1378090d0 <line:26:14, col:18> 'int' '='
          |   | |-DeclRefExpr 0x137809090 <col:14> 'int' lvalue Var 0x136828380 'i' 'int'
          |   | `-IntegerLiteral 0x1378090b0 <col:18> 'int' 0
          |   |-<<<NULL>>>
          |   |-BinaryOperator 0x137809160 <col:21, col:25> 'int' '<'
          |   | |-ImplicitCastExpr 0x137809130 <col:21> 'int' <LValueToRValue>
          |   | | `-DeclRefExpr 0x1378090f0 <col:21> 'int' lvalue Var 0x136828380 'i' 'int'
          |   | `-ImplicitCastExpr 0x137809148 <col:25> 'int' <LValueToRValue>
          |   |   `-DeclRefExpr 0x137809110 <col:25> 'int' lvalue Var 0x136828300 'n' 'int'
          |   |-UnaryOperator 0x1378091a0 <col:28, col:29> 'int' postfix '++'
          |   | `-DeclRefExpr 0x137809180 <col:28> 'int' lvalue Var 0x136828380 'i' 'int'
          |   `-CompoundStmt 0x137809308 <col:33, line:29:9>
          `-CompoundStmt 0x1378095a8 <line:30:12, line:32:5>
