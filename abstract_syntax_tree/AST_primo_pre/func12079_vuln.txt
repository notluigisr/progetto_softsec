`-FunctionDecl 0x1429281a8  line:1:5 secure_check 'int (void *)'
  |-ParmVarDecl 0x1429280d8 <col:18, col:24> col:24 used data 'void *'
  `-CompoundStmt 0x142941b50 <line:2:1, line:15:1>
    |-DeclStmt 0x142928338 <line:3:2, col:36>
    | `-VarDecl 0x1429282d0 <col:2, col:30> col:30 referenced invalid header 'const int *'
    |-DeclStmt 0x1429283d0 <line:4:2, col:12>
    | `-VarDecl 0x142928368 <col:2, col:8> col:8 used file 'void *'
    |-IfStmt 0x1429286d0 <line:6:2, line:7:11>
    | |-CallExpr 0x142928638 <line:6:6, col:45> 'int' contains-errors
    | | |-ImplicitCastExpr 0x142928620 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x142928500 <col:6> 'int ()' Function 0x142928448 'secure_decrypt' 'int ()'
    | | |-ImplicitCastExpr 0x142928670 <col:21> 'void *' <LValueToRValue>
    | | | `-DeclRefExpr 0x142928520 <col:21> 'void *' lvalue ParmVar 0x1429280d8 'data' 'void *'
    | | |-UnaryExprOrTypeTraitExpr 0x1429285b0 <col:27, col:41> 'unsigned long' contains-errors sizeof
    | | | `-ParenExpr 0x142928590 <col:33, col:41> '<dependent type>' contains-errors
    | | |   `-UnaryOperator 0x142928578 <col:34, col:35> '<dependent type>' contains-errors prefix '*' cannot overflow
    | | |     `-ImplicitCastExpr 0x142928560 <col:35> '<dependent type>' contains-errors <LValueToRValue>
    | | |       `-RecoveryExpr 0x142928540 <col:35> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x1429285d0 <col:44> 'int' 0
    | `-ReturnStmt 0x1429286c0 <line:7:3, col:11>
    |   `-UnaryOperator 0x1429286a8 <col:10, col:11> 'int' prefix '-'
    |     `-IntegerLiteral 0x142928688 <col:11> 'int' 1
    |-IfStmt 0x142941868 <line:10:2, line:11:11>
    | |-BinaryOperator 0x142941800 <line:10:6, col:23> 'int' contains-errors '!='
    | | |-CXXDependentScopeMemberExpr 0x142928758 <col:6, col:14> '<dependent type>' contains-errors lvalue ->magic
    | | | `-RecoveryExpr 0x142928738 <col:6> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x1429287d8 <col:23> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x142941858 <line:11:3, col:11>
    |   `-UnaryOperator 0x142941840 <col:10, col:11> 'int' prefix '-'
    |     `-IntegerLiteral 0x142941820 <col:11> 'int' 1
    |-BinaryOperator 0x142941a20 <line:13:2, col:47> 'void *' contains-errors '='
    | |-DeclRefExpr 0x142941888 <col:2> 'void *' lvalue Var 0x142928368 'file' 'void *'
    | `-ImplicitCastExpr 0x142941a08 <col:9, col:47> 'void *' contains-errors <BitCast>
    |   `-BinaryOperator 0x1429419e8 <col:9, col:47> 'unsigned char *' contains-errors '+'
    |     |-CStyleCastExpr 0x142941930 <col:9, col:26> 'unsigned char *' <BitCast>
    |     | `-ImplicitCastExpr 0x142941918 <col:26> 'void *' <LValueToRValue> part_of_explicit_cast
    |     |   `-DeclRefExpr 0x1429418a8 <col:26> 'void *' lvalue ParmVar 0x1429280d8 'data' 'void *'
    |     `-UnaryExprOrTypeTraitExpr 0x1429419c8 <col:33, col:47> 'unsigned long' contains-errors sizeof
    |       `-ParenExpr 0x1429419a8 <col:39, col:47> '<dependent type>' contains-errors
    |         `-UnaryOperator 0x142941990 <col:40, col:41> '<dependent type>' contains-errors prefix '*' cannot overflow
    |           `-ImplicitCastExpr 0x142941978 <col:41> '<dependent type>' contains-errors <LValueToRValue>
    |             `-RecoveryExpr 0x142941958 <col:41> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x142941b40 <line:14:2, col:50>
      `-CallExpr 0x142941b08 <col:9, col:50> '<dependent type>' contains-errors
        |-DeclRefExpr 0x142941a40 <col:9> 'int ()' Function 0x142928448 'secure_decrypt' 'int ()'
        |-DeclRefExpr 0x142941a60 <col:24> 'void *' lvalue Var 0x142928368 'file' 'void *'
        |-CXXDependentScopeMemberExpr 0x142941aa0 <col:30, col:38> '<dependent type>' contains-errors lvalue ->file_size
        | `-RecoveryExpr 0x142941a80 <col:30> '<dependent type>' contains-errors lvalue
        `-IntegerLiteral 0x142941ae8 <col:49> 'int' 1
