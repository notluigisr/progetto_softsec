`-FunctionDecl 0x1331283a8  line:1:5 diskutil_dd 'int (const char *, const char *, const int, const long long)'
  |-ParmVarDecl 0x1331280d8 <col:17, col:29> col:29 used in 'const char *'
  |-ParmVarDecl 0x133128158 <col:33, col:45> col:45 used out 'const char *'
  |-ParmVarDecl 0x1331281d8 <col:50, col:60> col:60 used bs 'const int'
  |-ParmVarDecl 0x133128258 <col:64, col:80> col:80 used count 'const long long'
  `-CompoundStmt 0x13380a6c0 <line:2:1, line:21:1>
    |-DeclStmt 0x133128588 <line:3:5, col:24>
    | `-VarDecl 0x1331284d0 <col:5, col:20> col:11 used output 'char *' cinit
    |   `-RecoveryExpr 0x133128568 <col:20> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x13380a2f0 <line:5:5, line:17:5>
    | |-BinaryOperator 0x133128610 <line:5:9, col:15> 'int' '&&'
    | | |-ImplicitCastExpr 0x1331285e0 <col:9> 'const char *' <LValueToRValue>
    | | | `-DeclRefExpr 0x1331285a0 <col:9> 'const char *' lvalue ParmVar 0x1331280d8 'in' 'const char *'
    | | `-ImplicitCastExpr 0x1331285f8 <col:15> 'const char *' <LValueToRValue>
    | |   `-DeclRefExpr 0x1331285c0 <col:15> 'const char *' lvalue ParmVar 0x133128158 'out' 'const char *'
    | `-CompoundStmt 0x13380a2c0 <col:20, line:17:5>
    |   |-CallExpr 0x133809a48 <line:6:9, col:26> 'int'
    |   | |-ImplicitCastExpr 0x133809a30 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x133128740 <col:9> 'int ()' Function 0x133128688 'LOGINFO' 'int ()'
    |   | |-ImplicitCastExpr 0x133809a78 <col:17> 'char *' <ArrayToPointerDecay>
    |   | | `-StringLiteral 0x1331287a0 <col:17> 'char[4]' lvalue "STR"
    |   | `-ImplicitCastExpr 0x133809a90 <col:24> 'const char *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x1331287c0 <col:24> 'const char *' lvalue ParmVar 0x1331280d8 'in' 'const char *'
    |   |-CallExpr 0x133809b40 <line:7:9, col:34> 'int'
    |   | |-ImplicitCastExpr 0x133809b28 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x133809aa8 <col:9> 'int ()' Function 0x133128688 'LOGINFO' 'int ()'
    |   | |-ImplicitCastExpr 0x133809b78 <col:17> 'char *' <ArrayToPointerDecay>
    |   | | `-StringLiteral 0x133809ac8 <col:17> 'char[4]' lvalue "STR"
    |   | |-ImplicitCastExpr 0x133809b90 <col:24> 'const char *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x133809ae8 <col:24> 'const char *' lvalue ParmVar 0x133128158 'out' 'const char *'
    |   | `-ImplicitCastExpr 0x133809ba8 <col:29> 'long long' <LValueToRValue>
    |   |   `-DeclRefExpr 0x133809b08 <col:29> 'const long long' lvalue ParmVar 0x133128258 'count' 'const long long'
    |   |-IfStmt 0x13380a110 <line:9:9, line:13:9>
    |   | |-UnaryOperator 0x133809e30 <line:9:13, col:14> 'int' contains-errors prefix '!' cannot overflow
    |   | | `-ImplicitCastExpr 0x133809e18 <col:14> 'char *' contains-errors <LValueToRValue>
    |   | |   `-DeclRefExpr 0x133809df8 <col:14> 'char *' contains-errors lvalue Var 0x1331284d0 'output' 'char *'
    |   | `-CompoundStmt 0x13380a0f0 <col:22, line:13:9>
    |   |   |-CallExpr 0x133809fa0 <line:10:13, col:31> 'int'
    |   |   | |-ImplicitCastExpr 0x133809f88 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |   |   | | `-DeclRefExpr 0x133809f28 <col:13> 'int ()' Function 0x133809e70 'LOGERROR' 'int ()'
    |   |   | |-ImplicitCastExpr 0x133809fd0 <col:22> 'char *' <ArrayToPointerDecay>
    |   |   | | `-StringLiteral 0x133809f48 <col:22> 'char[4]' lvalue "STR"
    |   |   | `-ImplicitCastExpr 0x133809fe8 <col:29> 'const char *' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x133809f68 <col:29> 'const char *' lvalue ParmVar 0x1331280d8 'in' 'const char *'
    |   |   `-CallExpr 0x13380a078 <line:11:13, col:32> 'int'
    |   |     |-ImplicitCastExpr 0x13380a060 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |   |     | `-DeclRefExpr 0x13380a000 <col:13> 'int ()' Function 0x133809e70 'LOGERROR' 'int ()'
    |   |     |-ImplicitCastExpr 0x13380a0a8 <col:22> 'char *' <ArrayToPointerDecay>
    |   |     | `-StringLiteral 0x13380a020 <col:22> 'char[4]' lvalue "STR"
    |   |     `-ImplicitCastExpr 0x13380a0c0 <col:29> 'const char *' <LValueToRValue>
    |   |       `-DeclRefExpr 0x13380a040 <col:29> 'const char *' lvalue ParmVar 0x133128158 'out' 'const char *'
    |   `-CallExpr 0x13380a268 <line:15:9, col:25> 'int' contains-errors
    |     |-ImplicitCastExpr 0x13380a250 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x13380a210 <col:9> 'int ()' Function 0x13380a158 'EUCA_FREE' 'int ()'
    |     `-ImplicitCastExpr 0x13380a290 <col:19> 'char *' contains-errors <LValueToRValue>
    |       `-DeclRefExpr 0x13380a230 <col:19> 'char *' contains-errors lvalue Var 0x1331284d0 'output' 'char *'
    `-CallExpr 0x13380a658 <line:19:5, col:35> 'int'
      |-ImplicitCastExpr 0x13380a640 <col:5> 'int (*)()' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x13380a3f0 <col:5> 'int ()' Function 0x13380a338 'LOGWARN' 'int ()'
      |-ImplicitCastExpr 0x13380a690 <col:13> 'char *' <ArrayToPointerDecay>
      | `-StringLiteral 0x13380a410 <col:13> 'char[4]' lvalue "STR"
      |-CallExpr 0x13380a568 <col:20, col:25> 'int'
      | |-ImplicitCastExpr 0x13380a550 <col:20> 'int (*)()' <FunctionToPointerDecay>
      | | `-DeclRefExpr 0x13380a510 <col:20> 'int ()' Function 0x13380a458 'SP' 'int ()'
      | `-ImplicitCastExpr 0x13380a590 <col:23> 'const char *' <LValueToRValue>
      |   `-DeclRefExpr 0x13380a530 <col:23> 'const char *' lvalue ParmVar 0x1331280d8 'in' 'const char *'
      `-CallExpr 0x13380a600 <col:28, col:34> 'int'
        |-ImplicitCastExpr 0x13380a5e8 <col:28> 'int (*)()' <FunctionToPointerDecay>
        | `-DeclRefExpr 0x13380a5a8 <col:28> 'int ()' Function 0x13380a458 'SP' 'int ()'
        `-ImplicitCastExpr 0x13380a628 <col:31> 'const char *' <LValueToRValue>
          `-DeclRefExpr 0x13380a5c8 <col:31> 'const char *' lvalue ParmVar 0x133128158 'out' 'const char *'
