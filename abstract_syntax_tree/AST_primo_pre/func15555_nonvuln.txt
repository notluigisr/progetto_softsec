`-FunctionDecl 0x12e928118  line:1:1 SYSCALL_DEFINE3 'int ()'
  `-CompoundStmt 0x12e92ae68 <line:3:1, line:26:1>
    |-DeclStmt 0x12e9287a8 <line:4:2, col:24>
    | |-RecordDecl 0x12e928208 <col:2, col:9> col:9 struct sched_attr
    | `-VarDecl 0x12e928308 <col:2, col:20> col:20 referenced invalid attr 'struct sched_attr'
    |-DeclStmt 0x12f0205e8 <line:5:2, col:23>
    | |-RecordDecl 0x12f020400 <col:2, col:9> col:9 struct task_struct
    | `-VarDecl 0x12f020568 <col:2, col:22> col:22 used p 'struct task_struct *'
    |-DeclStmt 0x12f020680 <line:6:2, col:12>
    | `-VarDecl 0x12f020618 <col:2, col:6> col:6 used retval 'int'
    |-IfStmt 0x12f020960 <line:8:2, line:9:11>
    | |-BinaryOperator 0x12f020898 <line:8:6, col:27> 'int' contains-errors '||'
    | | |-BinaryOperator 0x12f020858 <col:6, col:22> 'int' contains-errors '||'
    | | | |-UnaryOperator 0x12f020800 <col:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | | | `-ImplicitCastExpr 0x12f0207e8 <col:7> '<dependent type>' contains-errors <LValueToRValue>
    | | | |   `-RecoveryExpr 0x12f0207c8 <col:7> '<dependent type>' contains-errors lvalue
    | | | `-BinaryOperator 0x12f020838 <col:16, col:22> 'int' contains-errors '<'
    | | |   |-RecoveryExpr 0x12f020818 <col:16> '<dependent type>' contains-errors lvalue
    | | |   `-IntegerLiteral 0x12f020710 <col:22> 'int' 0
    | | `-RecoveryExpr 0x12f020878 <col:27> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x12f020950 <line:9:3, col:11>
    |   `-UnaryOperator 0x12f020938 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x12f020920 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x12f020900 <col:11> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x12f020bb0 <line:11:2, col:39> 'int' contains-errors '='
    | |-DeclRefExpr 0x12f020980 <col:2> 'int' lvalue Var 0x12f020618 'retval' 'int'
    | `-CallExpr 0x12f020b80 <col:11, col:39> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12f020a80 <col:11> 'int ()' Function 0x12f0209c8 'sched_copy_attr' 'int ()'
    |   |-RecoveryExpr 0x12f020b60 <col:27> '<dependent type>' contains-errors lvalue
    |   `-UnaryOperator 0x12f020ad8 <col:34, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x12f020ab8 <col:35> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12f020c50 <line:12:2, line:13:10>
    | |-ImplicitCastExpr 0x12f020bf0 <line:12:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x12f020bd0 <col:6> 'int' lvalue Var 0x12f020618 'retval' 'int'
    | `-ReturnStmt 0x12f020c40 <line:13:3, col:10>
    |   `-ImplicitCastExpr 0x12f020c28 <col:10> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x12f020c08 <col:10> 'int' lvalue Var 0x12f020618 'retval' 'int'
    |-IfStmt 0x12f020e00 <line:15:2, line:16:11>
    | |-BinaryOperator 0x12f020d38 <line:15:6, col:31> 'int' contains-errors '<'
    | | |-CStyleCastExpr 0x12f020cf0 <col:6, col:16> 'int' contains-errors <Dependent>
    | | | `-CXXDependentScopeMemberExpr 0x12f020c90 <col:11, col:16> '<dependent type>' contains-errors lvalue .sched_policy
    | | |   `-RecoveryExpr 0x12f020c70 <col:11> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x12f020d18 <col:31> 'int' 0
    | `-ReturnStmt 0x12f020df0 <line:16:3, col:11>
    |   `-UnaryOperator 0x12f020dd8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x12f020dc0 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x12f020da0 <col:11> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x12f020f68 <line:18:2, col:16> 'int'
    | `-ImplicitCastExpr 0x12f020f50 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x12f020f00 <col:2> 'int ()' Function 0x12f020e48 'rcu_read_lock' 'int ()'
    |-BinaryOperator 0x12f021060 <line:19:2, col:12> 'int' contains-errors '='
    | |-DeclRefExpr 0x12f020f88 <col:2> 'int' lvalue Var 0x12f020618 'retval' 'int'
    | `-UnaryOperator 0x12f021048 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   `-ImplicitCastExpr 0x12f021030 <col:12> '<dependent type>' contains-errors <LValueToRValue>
    |     `-RecoveryExpr 0x12f021010 <col:12> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x12f021248 <line:20:2, col:29> 'struct task_struct *' contains-errors '='
    | |-DeclRefExpr 0x12f021080 <col:2> 'struct task_struct *' lvalue Var 0x12f020568 'p' 'struct task_struct *'
    | `-CallExpr 0x12f021220 <col:6, col:29> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12f021180 <col:6> 'int ()' Function 0x12f0210c8 'find_process_by_pid' 'int ()'
    |   `-RecoveryExpr 0x12f021200 <col:26> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12e92acc8 <line:21:2, line:22:34>
    | |-BinaryOperator 0x12f0212e0 <line:21:6, col:11> 'int' contains-errors '!='
    | | |-DeclRefExpr 0x12f021268 <col:6> 'struct task_struct *' lvalue Var 0x12f020568 'p' 'struct task_struct *'
    | | `-RecoveryExpr 0x12f0212c0 <col:11> '<dependent type>' contains-errors lvalue
    | `-BinaryOperator 0x12e92aca8 <line:22:3, col:34> 'int' contains-errors '='
    |   |-DeclRefExpr 0x12f021300 <col:3> 'int' lvalue Var 0x12f020618 'retval' 'int'
    |   `-CallExpr 0x12e92ac78 <col:12, col:34> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x12e92ac00 <col:12> 'int ()' Function 0x12f021348 'sched_setattr' 'int ()'
    |     |-DeclRefExpr 0x12e92ac20 <col:26> 'struct task_struct *' lvalue Var 0x12f020568 'p' 'struct task_struct *'
    |     `-UnaryOperator 0x12e92ac60 <col:29, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow
    |       `-RecoveryExpr 0x12e92ac40 <col:30> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x12e92ae00 <line:23:2, col:18> 'int'
    | `-ImplicitCastExpr 0x12e92ade8 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x12e92adc8 <col:2> 'int ()' Function 0x12e92ad10 'rcu_read_unlock' 'int ()'
    `-ReturnStmt 0x12e92ae58 <line:25:2, col:9>
      `-ImplicitCastExpr 0x12e92ae40 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x12e92ae20 <col:9> 'int' lvalue Var 0x12f020618 'retval' 'int'
