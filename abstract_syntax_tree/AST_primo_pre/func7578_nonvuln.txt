`-FunctionDecl 0x125124c88  line:1:5 invalid state_putwc 'int (int, int *)'
  |-ParmVarDecl 0x125124af0 <col:18, col:26> col:26 invalid wc 'int'
  |-ParmVarDecl 0x125124ba8 <col:30, col:37> col:37 invalid s 'int *'
  `-CompoundStmt 0x1258084a0 <line:2:1, line:11:1>
    |-DeclStmt 0x125124e28 <line:3:3, col:27>
    | `-VarDecl 0x125124d68 <col:3, col:8> col:8 invalid mb 'char'
    |-DeclStmt 0x125124ec0 <line:4:3, col:9>
    | `-VarDecl 0x125124e58 <col:3, col:7> col:7 used rc 'int'
    |-IfStmt 0x1251251a8 <line:6:3, line:7:12>
    | |-RecoveryExpr 0x125125140 <line:6:7, col:39> '_Bool' contains-errors
    | `-ReturnStmt 0x125125198 <line:7:5, col:12>
    |   `-ImplicitCastExpr 0x125125180 <col:12> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x125125160 <col:12> 'int' lvalue Var 0x125124e58 'rc' 'int'
    |-IfStmt 0x125808450 <line:8:3, line:9:13>
    | |-BinaryOperator 0x1258083e8 <line:8:7, col:31> 'int' contains-errors '=='
    | | |-CallExpr 0x125808360 <col:7, col:26> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x1258082b8 <col:7> 'int ()' Function 0x125808200 'fputs' 'int ()'
    | | | |-RecoveryExpr 0x1258082d8 <col:14> '<dependent type>' contains-errors lvalue
    | | | `-CXXDependentScopeMemberExpr 0x125808318 <col:18, col:21> '<dependent type>' contains-errors lvalue ->fpout
    | | |   `-RecoveryExpr 0x1258082f8 <col:18> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x1258083c8 <col:31> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x125808440 <line:9:5, col:13>
    |   `-UnaryOperator 0x125808428 <col:12, col:13> 'int' prefix '-'
    |     `-IntegerLiteral 0x125808408 <col:13> 'int' 1
    `-ReturnStmt 0x125808490 <line:10:3, col:10>
      `-IntegerLiteral 0x125808470 <col:10> 'int' 0
