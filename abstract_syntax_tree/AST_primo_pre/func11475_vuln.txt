`-FunctionDecl 0x1240fbc88  line:1:5 invalid unit_watch_pid 'int (int *, int)'
  |-ParmVarDecl 0x1240fbb28 <col:20, col:26> col:26 invalid u 'int *'
  |-ParmVarDecl 0x1240fbba8 <col:29, col:35> col:35 invalid pid 'int'
  `-CompoundStmt 0x124115b78 <col:40, line:20:1>
    |-DeclStmt 0x1240fbe58 <line:2:9, col:17>
    | |-VarDecl 0x1240fbd58 <col:9, col:13> col:13 used q 'int'
    | `-VarDecl 0x1240fbdd8 <col:9, col:16> col:16 used r 'int'
    |-CallExpr 0x1240fc010 <line:4:9, col:17> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1240fbfd0 <col:9> 'int ()' Function 0x1240fbf18 'assert' 'int ()'
    | `-RecoveryExpr 0x1240fbff0 <col:16> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x1240fc0b8 <line:5:9, col:24> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1240fc038 <col:9> 'int ()' Function 0x1240fbf18 'assert' 'int ()'
    | `-BinaryOperator 0x1240fc098 <col:16, col:23> 'int' contains-errors '>='
    |   |-RecoveryExpr 0x1240fc058 <col:16> '<dependent type>' contains-errors lvalue
    |   `-IntegerLiteral 0x1240fc078 <col:23> 'int' 1
    |-BinaryOperator 0x124115380 <line:7:9, col:83> 'int' contains-errors '='
    | |-DeclRefExpr 0x1240fc0e0 <col:9> 'int' lvalue Var 0x1240fbdd8 'r' 'int'
    | `-CallExpr 0x124115348 <col:13, col:83> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1240fc1e0 <col:13> 'int ()' Function 0x1240fc128 'set_ensure_allocated' 'int ()'
    |   |-UnaryOperator 0x124115268 <col:34, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-CXXDependentScopeMemberExpr 0x124115220 <col:35, col:38> '<dependent type>' contains-errors lvalue ->pids
    |   |   `-RecoveryExpr 0x124115200 <col:35> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x124115308 <col:44> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x124115328 <col:63> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x124115460 <line:8:9, line:9:24>
    | |-BinaryOperator 0x1241153f8 <line:8:13, col:17> 'int' '<'
    | | |-ImplicitCastExpr 0x1241153e0 <col:13> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1241153a0 <col:13> 'int' lvalue Var 0x1240fbdd8 'r' 'int'
    | | `-IntegerLiteral 0x1241153c0 <col:17> 'int' 0
    | `-ReturnStmt 0x124115450 <line:9:17, col:24>
    |   `-ImplicitCastExpr 0x124115438 <col:24> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x124115418 <col:24> 'int' lvalue Var 0x1240fbdd8 'r' 'int'
    |-BinaryOperator 0x124115780 <line:13:9, col:46> 'int' contains-errors '='
    | |-DeclRefExpr 0x124115480 <col:9> 'int' lvalue Var 0x1240fbdd8 'r' 'int'
    | `-CallExpr 0x124115750 <col:13, col:46> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x124115580 <col:13> 'int ()' Function 0x1241154c8 'set_put' 'int ()'
    |   |-CXXDependentScopeMemberExpr 0x1241155c0 <col:21, col:24> '<dependent type>' contains-errors lvalue ->pids
    |   | `-RecoveryExpr 0x1241155a0 <col:21> '<dependent type>' contains-errors lvalue
    |   `-CallExpr 0x124115728 <col:30, col:45> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x1241156e8 <col:30> 'int ()' Function 0x124115630 'LONG_TO_PTR' 'int ()'
    |     `-RecoveryExpr 0x124115708 <col:42> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x124115a30 <line:15:9, col:68> 'int' contains-errors '='
    | |-DeclRefExpr 0x1241157a0 <col:9> 'int' lvalue Var 0x1240fbd58 'q' 'int'
    | `-CallExpr 0x1241159f8 <col:13, col:68> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1241158a0 <col:13> 'int ()' Function 0x1241157e8 'hashmap_put' 'int ()'
    |   |-CXXDependentScopeMemberExpr 0x124115928 <col:25, col:37> '<dependent type>' contains-errors lvalue ->watch_pids
    |   | `-CXXDependentScopeMemberExpr 0x1241158e0 <col:25, col:28> '<dependent type>' contains-errors lvalue ->manager
    |   |   `-RecoveryExpr 0x1241158c0 <col:25> '<dependent type>' contains-errors lvalue
    |   |-CallExpr 0x1241159b0 <col:49, col:64> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x124115970 <col:49> 'int ()' Function 0x124115630 'LONG_TO_PTR' 'int ()'
    |   | `-RecoveryExpr 0x124115990 <col:61> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x1241159d8 <col:67> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x124115b10 <line:16:9, line:17:24>
    | |-BinaryOperator 0x124115aa8 <line:16:13, col:17> 'int' '<'
    | | |-ImplicitCastExpr 0x124115a90 <col:13> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x124115a50 <col:13> 'int' lvalue Var 0x1240fbd58 'q' 'int'
    | | `-IntegerLiteral 0x124115a70 <col:17> 'int' 0
    | `-ReturnStmt 0x124115b00 <line:17:17, col:24>
    |   `-ImplicitCastExpr 0x124115ae8 <col:24> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x124115ac8 <col:24> 'int' lvalue Var 0x1240fbd58 'q' 'int'
    `-ReturnStmt 0x124115b68 <line:19:9, col:16>
      `-ImplicitCastExpr 0x124115b50 <col:16> 'int' <LValueToRValue>
        `-DeclRefExpr 0x124115b30 <col:16> 'int' lvalue Var 0x1240fbdd8 'r' 'int'
