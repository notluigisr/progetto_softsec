`-FunctionDecl 0x1398274d8  line:1:1 invalid file_regerror 'int (int *, int, struct magic_set *)'
  |-ParmVarDecl 0x13980dd28 <col:15, col:29> col:29 invalid rx 'int *'
  |-ParmVarDecl 0x13980dda8 <col:33, col:37> col:37 used rc 'int'
  |-ParmVarDecl 0x13980e398 <col:41, col:59> col:59 used ms 'struct magic_set *'
  `-CompoundStmt 0x139827c50 <line:2:1, line:8:1>
    |-DeclStmt 0x1398276a8 <line:3:2, col:18>
    | `-VarDecl 0x139827640 <col:2, col:17> col:7 used errmsg 'char[512]'
    |-CStyleCastExpr 0x1398279b0 <line:5:2, col:52> 'void' contains-errors <ToVoid>
    | `-CallExpr 0x139827960 <col:8, col:52> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x139827820 <col:8> 'int ()' Function 0x139827768 'regerror' 'int ()'
    |   |-DeclRefExpr 0x139827840 <col:17> 'int' lvalue ParmVar 0x13980dda8 'rc' 'int'
    |   |-UnaryOperator 0x1398278c8 <col:21, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-CXXDependentScopeMemberExpr 0x139827880 <col:22, col:26> '<dependent type>' contains-errors lvalue ->rx
    |   |   `-RecoveryExpr 0x139827860 <col:22> '<dependent type>' contains-errors lvalue
    |   |-DeclRefExpr 0x1398278e0 <col:30> 'char[512]' lvalue Var 0x139827640 'errmsg' 'char[512]'
    |   `-UnaryExprOrTypeTraitExpr 0x139827940 <col:38, col:51> 'unsigned long' sizeof
    |     `-ParenExpr 0x139827920 <col:44, col:51> 'char[512]' lvalue
    |       `-DeclRefExpr 0x139827900 <col:45> 'char[512]' lvalue Var 0x139827640 'errmsg' 'char[512]' non_odr_use_unevaluated
    `-CallExpr 0x139827c08 <line:6:2, line:7:12> '<dependent type>' contains-errors
      |-DeclRefExpr 0x139827ab8 <line:6:2> 'int ()' Function 0x139827a00 'file_magerror' 'int ()'
      |-DeclRefExpr 0x139827ad8 <col:16> 'struct magic_set *' lvalue ParmVar 0x13980e398 'ms' 'struct magic_set *'
      |-StringLiteral 0x139827b40 <col:20> 'char[4]' lvalue "STR"
      |-DeclRefExpr 0x139827b60 <col:27> 'int' lvalue ParmVar 0x13980dda8 'rc' 'int'
      |-CXXDependentScopeMemberExpr 0x139827ba0 <col:31, col:35> '<dependent type>' contains-errors lvalue ->pat
      | `-RecoveryExpr 0x139827b80 <col:31> '<dependent type>' contains-errors lvalue
      `-DeclRefExpr 0x139827be8 <line:7:6> 'char[512]' lvalue Var 0x139827640 'errmsg' 'char[512]'
