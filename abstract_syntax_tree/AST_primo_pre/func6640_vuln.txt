`-FunctionDecl 0x1529281a0  line:1:17 skip 'void (int)' inline
  |-ParmVarDecl 0x1529280d8 <col:22, col:26> col:26 used bytes 'int'
  `-CompoundStmt 0x1529286b0 <col:33, line:7:5>
    `-WhileStmt 0x152928690 <line:2:7, line:6:7>
      |-BinaryOperator 0x1529282f0 <line:2:14, col:22> 'int' '>'
      | |-ImplicitCastExpr 0x1529282d8 <col:14> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x152928298 <col:14> 'int' lvalue ParmVar 0x1529280d8 'bytes' 'int'
      | `-IntegerLiteral 0x1529282b8 <col:22> 'int' 0
      `-CompoundStmt 0x152928670 <col:25, line:6:7>
        |-DeclStmt 0x1529285b0 <line:3:9, col:32>
        | `-VarDecl 0x152928328 <col:9, col:31> col:13 used n 'int' cinit
        |   `-CallExpr 0x152928568 <col:17, col:31> 'int'
        |     |-ImplicitCastExpr 0x152928550 <col:17> 'int (*)()' <FunctionToPointerDecay>
        |     | `-DeclRefExpr 0x1529284c0 <col:17> 'int ()' Function 0x152928408 'check' 'int ()'
        |     |-IntegerLiteral 0x1529284e0 <col:23> 'int' 1
        |     `-ImplicitCastExpr 0x152928598 <col:26> 'int' <LValueToRValue>
        |       `-DeclRefExpr 0x152928500 <col:26> 'int' lvalue ParmVar 0x1529280d8 'bytes' 'int'
        `-CompoundAssignOperator 0x152928640 <line:5:9, col:18> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
          |-DeclRefExpr 0x1529285e8 <col:9> 'int' lvalue ParmVar 0x1529280d8 'bytes' 'int'
          `-ImplicitCastExpr 0x152928628 <col:18> 'int' <LValueToRValue>
            `-DeclRefExpr 0x152928608 <col:18> 'int' lvalue Var 0x152928328 'n' 'int'
