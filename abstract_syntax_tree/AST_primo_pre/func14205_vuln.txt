`-FunctionDecl 0x122928a88  line:1:14 referenced invalid LogSoftmaxPrepare 'int (int *, int *)'
  |-ParmVarDecl 0x122928928 <col:32, col:47> col:47 invalid context 'int *'
  |-ParmVarDecl 0x1229289a8 <col:56, col:68> col:68 invalid node 'int *'
  `-CompoundStmt 0x122943568 <col:74, line:37:1>
    |-CallExpr 0x122928f38 <line:4:3, col:48> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x122928d90 <col:3> 'int ()' Function 0x122928cd8 'TF_LITE_ENSURE_EQ' 'int ()'
    | |-RecoveryExpr 0x122928db0 <col:21> '<dependent type>' contains-errors lvalue
    | |-CallExpr 0x122928ef0 <col:30, col:44> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x122928eb0 <col:30> 'int ()' Function 0x122928df8 'NumInputs' 'int ()'
    | | `-RecoveryExpr 0x122928ed0 <col:40> '<dependent type>' contains-errors lvalue
    | `-IntegerLiteral 0x122928f18 <col:47> 'int' 1
    |-CallExpr 0x122942140 <line:5:3, col:49> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x122928f70 <col:3> 'int ()' Function 0x122928cd8 'TF_LITE_ENSURE_EQ' 'int ()'
    | |-RecoveryExpr 0x122928f90 <col:21> '<dependent type>' contains-errors lvalue
    | |-CallExpr 0x1229420f8 <col:30, col:45> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x1229420b8 <col:30> 'int ()' Function 0x122942000 'NumOutputs' 'int ()'
    | | `-RecoveryExpr 0x1229420d8 <col:41> '<dependent type>' contains-errors lvalue
    | `-IntegerLiteral 0x122942120 <col:48> 'int' 1
    |-DeclStmt 0x122942390 <line:6:3, col:57>
    | `-VarDecl 0x122942190 <col:3, col:23> col:23 invalid input 'const int *'
    |-CallExpr 0x1229427e0 <line:8:3, col:61> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x122942638 <col:3> 'int ()' Function 0x122942580 'TF_LITE_ENSURE_TYPES_EQ' 'int ()'
    | |-RecoveryExpr 0x122942658 <col:27> '<dependent type>' contains-errors lvalue
    | |-CXXDependentScopeMemberExpr 0x122942698 <col:36, col:43> '<dependent type>' contains-errors lvalue ->type
    | | `-RecoveryExpr 0x122942678 <col:36> '<dependent type>' contains-errors lvalue
    | `-CXXDependentScopeMemberExpr 0x122942798 <col:49, col:57> '<dependent type>' contains-errors lvalue ->type
    |   `-RecoveryExpr 0x122942778 <col:49> '<dependent type>' contains-errors lvalue
    `-IfStmt 0x122942f10 <line:10:3, line:33:3>
      |-BinaryOperator 0x1229429f8 <line:10:7, col:53> 'int' contains-errors '||'
      | |-BinaryOperator 0x122942998 <col:7, col:22> 'int' contains-errors '=='
      | | |-CXXDependentScopeMemberExpr 0x122942838 <col:7, col:14> '<dependent type>' contains-errors lvalue ->type
      | | | `-RecoveryExpr 0x122942818 <col:7> '<dependent type>' contains-errors lvalue
      | | `-RecoveryExpr 0x122942978 <col:22> '<dependent type>' contains-errors lvalue
      | `-BinaryOperator 0x1229429d8 <col:38, col:53> 'int' contains-errors '=='
      |   |-CXXDependentScopeMemberExpr 0x1229428d8 <col:38, col:45> '<dependent type>' contains-errors lvalue ->type
      |   | `-RecoveryExpr 0x1229428b8 <col:38> '<dependent type>' contains-errors lvalue
      |   `-RecoveryExpr 0x1229429b8 <col:53> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x122942ee8 <col:66, line:33:3>
        |-DeclStmt 0x122942b70 <line:12:5, col:36>
        | `-VarDecl 0x122942ae8 <col:5, col:33> col:25 kBeta 'const double' static cinit
        |   `-FloatingLiteral 0x122942b50 <col:33> 'double' 1.000000e+00
        |-IfStmt 0x122942c80 <line:13:5, line:20:5>
        | |-RecoveryExpr 0x122942bf0 <line:13:9, col:24> '_Bool' contains-errors
        | `-CompoundStmt 0x122942c70 <col:38, line:20:5>
        `-IfStmt 0x122942ec8 <line:21:5, line:32:5>
          |-RecoveryExpr 0x122942d08 <line:21:9, col:24> '_Bool' contains-errors
          `-CompoundStmt 0x122942eb0 <col:37, line:32:5>
            `-DeclStmt 0x122942e28 <line:23:7, col:50>
              `-VarDecl 0x122942da0 <col:7, col:49> col:24 kScaledDiffIntegerBits 'const int' static cinit
                `-IntegerLiteral 0x122942e08 <col:49> 'int' 5
