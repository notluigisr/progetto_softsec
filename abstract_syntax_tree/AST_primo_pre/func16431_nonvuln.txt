`-FunctionDecl 0x11e01f438  line:1:1 report_child_exit_status 'int (int, int)'
  |-ParmVarDecl 0x11e01f2d8 <col:27, col:31> col:31 used exitc 'int'
  |-ParmVarDecl 0x11e01f358 <col:38, col:42> col:42 used setup_finished_fd 'int'
  `-CompoundStmt 0x11e047630 <line:2:1, line:20:1>
    |-DeclStmt 0x11e01f658 <line:4:3, col:15>
    | `-VarDecl 0x11e01f5f0 <col:3, col:14> col:8 used data 'char[2]'
    |-IfStmt 0x11e01f838 <line:6:3, line:7:5>
    | |-BinaryOperator 0x11e01f808 <line:6:7, col:57> 'int' contains-errors '||'
    | | |-BinaryOperator 0x11e01f7b0 <col:7, col:30> 'int' contains-errors '=='
    | | | |-RecoveryExpr 0x11e01f790 <col:7> '<dependent type>' contains-errors lvalue
    | | | `-UnaryOperator 0x11e01f6a8 <col:29, col:30> 'int' prefix '-'
    | | |   `-IntegerLiteral 0x11e01f688 <col:30> 'int' 1
    | | `-BinaryOperator 0x11e01f7e8 <col:35, col:57> 'int' '=='
    | |   |-ImplicitCastExpr 0x11e01f7d0 <col:35> 'int' <LValueToRValue>
    | |   | `-DeclRefExpr 0x11e01f6e0 <col:35> 'int' lvalue ParmVar 0x11e01f358 'setup_finished_fd' 'int'
    | |   `-UnaryOperator 0x11e01f720 <col:56, col:57> 'int' prefix '-'
    | |     `-IntegerLiteral 0x11e01f700 <col:57> 'int' 1
    | `-ReturnStmt 0x11e01f828 <line:7:5>
    |-IfStmt 0x11e046fa8 <line:10:3, line:11:26>
    | |-BinaryOperator 0x11e046dd0 <line:10:7, col:27> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x11e046d50 <col:7, col:13> 'int' contains-errors '=='
    | | | |-RecoveryExpr 0x11e046d30 <col:7> '<dependent type>' contains-errors lvalue
    | | | `-UnaryOperator 0x11e046c88 <col:12, col:13> 'int' prefix '-'
    | | |   `-IntegerLiteral 0x11e046c68 <col:13> 'int' 1
    | | `-BinaryOperator 0x11e046db0 <col:18, col:27> 'int' contains-errors '!='
    | |   |-RecoveryExpr 0x11e046d70 <col:18> '<dependent type>' contains-errors lvalue
    | |   `-RecoveryExpr 0x11e046d90 <col:27> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x11e046f68 <line:11:5, col:26> 'int'
    |   |-ImplicitCastExpr 0x11e046f50 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x11e046ed0 <col:5> 'int ()' Function 0x11e046e18 'die_with_error' 'int ()'
    |   `-ImplicitCastExpr 0x11e046f90 <col:21> 'char *' <ArrayToPointerDecay>
    |     `-StringLiteral 0x11e046f30 <col:21> 'char[4]' lvalue "STR"
    |-IfStmt 0x11e047070 <line:12:3, line:13:5>
    | |-BinaryOperator 0x11e047040 <line:12:7, col:12> 'int' contains-errors '!='
    | | |-RecoveryExpr 0x11e047020 <col:7> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x11e046fe0 <col:12> 'int' 1
    | `-ReturnStmt 0x11e047060 <line:13:5>
    |-CallExpr 0x11e047428 <line:16:3, col:47> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x11e047328 <col:3> 'int ()' Function 0x11e047270 'dump_info' 'int ()'
    | |-RecoveryExpr 0x11e0473c8 <col:14> '<dependent type>' contains-errors lvalue
    | |-RecoveryExpr 0x11e0473e8 <col:34> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x11e047408 <col:42> '<dependent type>' contains-errors lvalue
    `-CallExpr 0x11e0475f0 <line:19:3, col:27> 'int'
      |-ImplicitCastExpr 0x11e0475d8 <col:3> 'int (*)()' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x11e047598 <col:3> 'int ()' Function 0x11e047488 'close' 'int ()'
      `-ImplicitCastExpr 0x11e047618 <col:10> 'int' <LValueToRValue>
        `-DeclRefExpr 0x11e0475b8 <col:10> 'int' lvalue ParmVar 0x11e01f358 'setup_finished_fd' 'int'
