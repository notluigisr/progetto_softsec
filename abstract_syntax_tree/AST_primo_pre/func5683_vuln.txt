`-FunctionDecl 0x11f008328  line:1:13 aio_read_events_ring 'long (struct kioctx *, struct io_event)' static
  |-ParmVarDecl 0x11e00e248 <col:34, col:49> col:49 used ctx 'struct kioctx *'
  |-ParmVarDecl 0x11f008200 <line:2:6, col:22> col:22 invalid __user 'struct io_event'
  `-CompoundStmt 0x11f012600 <line:3:1, line:64:1>
    |-DeclStmt 0x11f008618 <line:4:2, col:23>
    | |-RecordDecl 0x11f008428 <col:2, col:9> col:9 struct aio_ring
    | `-VarDecl 0x11f008598 <col:2, col:19> col:19 used ring 'struct aio_ring *'
    |-DeclStmt 0x11f0087d0 <line:5:2, col:26>
    | |-VarDecl 0x11f008648 <col:2, col:11> col:11 used head 'unsigned int'
    | |-VarDecl 0x11f0086c8 <col:2, col:17> col:17 used tail 'unsigned int'
    | `-VarDecl 0x11f008748 <col:2, col:23> col:23 used pos 'unsigned int'
    |-DeclStmt 0x11f0088a0 <line:6:2, col:14>
    | `-VarDecl 0x11f008800 <col:2, col:13> col:7 used ret 'long' cinit
    |   `-ImplicitCastExpr 0x11f008888 <col:13> 'long' <IntegralCast>
    |     `-IntegerLiteral 0x11f008868 <col:13> 'int' 0
    |-DeclStmt 0x11f008938 <line:7:2, col:14>
    | `-VarDecl 0x11f0088d0 <col:2, col:6> col:6 used copy_ret 'int'
    |-CallExpr 0x11f008b18 <line:9:2, col:28> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x11f008a80 <col:2> 'int ()' Function 0x11f0089c8 'mutex_lock' 'int ()'
    | `-UnaryOperator 0x11f008b00 <col:13, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x11f008ad8 <col:14, col:19> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x11f008aa0 <col:14> 'struct kioctx *' lvalue ParmVar 0x11e00e248 'ctx' 'struct kioctx *'
    |-BinaryOperator 0x11f008d40 <line:12:2, col:39> 'struct aio_ring *' contains-errors '='
    | |-DeclRefExpr 0x11f008b40 <col:2> 'struct aio_ring *' lvalue Var 0x11f008598 'ring' 'struct aio_ring *'
    | `-CallExpr 0x11f008d18 <col:9, col:39> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x11f008c40 <col:9> 'int ()' Function 0x11f008b88 'kmap_atomic' 'int ()'
    |   `-ArraySubscriptExpr 0x11f008cf8 <col:21, col:38> '<dependent type>' contains-errors lvalue
    |     |-ImplicitCastExpr 0x11f008ce0 <col:21, col:26> '<dependent type>' contains-errors <LValueToRValue>
    |     | `-RecoveryExpr 0x11f008c98 <col:21, col:26> '<dependent type>' contains-errors lvalue
    |     |   `-DeclRefExpr 0x11f008c60 <col:21> 'struct kioctx *' lvalue ParmVar 0x11e00e248 'ctx' 'struct kioctx *'
    |     `-IntegerLiteral 0x11f008cc0 <col:37> 'int' 0
    |-BinaryOperator 0x11f008de0 <line:13:2, col:15> 'unsigned int' contains-errors '='
    | |-DeclRefExpr 0x11f008d60 <col:2> 'unsigned int' lvalue Var 0x11f008648 'head' 'unsigned int'
    | `-RecoveryExpr 0x11f008db8 <col:9, col:15> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x11f008d80 <col:9> 'struct aio_ring *' lvalue Var 0x11f008598 'ring' 'struct aio_ring *'
    |-BinaryOperator 0x11f008e80 <line:14:2, col:15> 'unsigned int' contains-errors '='
    | |-DeclRefExpr 0x11f008e00 <col:2> 'unsigned int' lvalue Var 0x11f0086c8 'tail' 'unsigned int'
    | `-RecoveryExpr 0x11f008e58 <col:9, col:15> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x11f008e20 <col:9> 'struct aio_ring *' lvalue Var 0x11f008598 'ring' 'struct aio_ring *'
    |-CallExpr 0x11f009008 <line:15:2, col:20> 'int'
    | |-ImplicitCastExpr 0x11f008ff0 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x11f008f80 <col:2> 'int ()' Function 0x11f008ec8 'kunmap_atomic' 'int ()'
    | `-ImplicitCastExpr 0x11f009030 <col:16> 'struct aio_ring *' <LValueToRValue>
    |   `-DeclRefExpr 0x11f008fa0 <col:16> 'struct aio_ring *' lvalue Var 0x11f008598 'ring' 'struct aio_ring *'
    |-CallExpr 0x11f00ba60 <line:17:2, col:44> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x11f009128 <col:2> 'int ()' Function 0x11f009070 'pr_debug' 'int ()'
    | |-StringLiteral 0x11f009190 <col:11> 'char[4]' lvalue "STR"
    | |-DeclRefExpr 0x11f0091b0 <col:18> 'unsigned int' lvalue Var 0x11f008648 'head' 'unsigned int'
    | |-DeclRefExpr 0x11f0091d0 <col:24> 'unsigned int' lvalue Var 0x11f0086c8 'tail' 'unsigned int'
    | `-RecoveryExpr 0x11f00ba38 <col:30, col:35> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x11f00ba00 <col:30> 'struct kioctx *' lvalue ParmVar 0x11e00e248 'ctx' 'struct kioctx *'
    |-IfStmt 0x11f00bb98 <line:19:2, line:20:8>
    | |-BinaryOperator 0x11f00bb10 <line:19:6, col:14> 'int' '=='
    | | |-ImplicitCastExpr 0x11f00bae0 <col:6> 'unsigned int' <LValueToRValue>
    | | | `-DeclRefExpr 0x11f00baa0 <col:6> 'unsigned int' lvalue Var 0x11f008648 'head' 'unsigned int'
    | | `-ImplicitCastExpr 0x11f00baf8 <col:14> 'unsigned int' <LValueToRValue>
    | |   `-DeclRefExpr 0x11f00bac0 <col:14> 'unsigned int' lvalue Var 0x11f0086c8 'tail' 'unsigned int'
    | `-GotoStmt 0x11f00bb80 <line:20:3, col:8> 'out' 0x11f00bb30
    |-WhileStmt 0x11f011de0 <line:22:2, line:52:2>
    | |-BinaryOperator 0x11f00bc30 <line:22:9, col:15> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x11f00bbb8 <col:9> 'long' lvalue Var 0x11f008800 'ret' 'long'
    | | `-RecoveryExpr 0x11f00bc10 <col:15> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x11f011d70 <col:19, line:52:2>
    |   |-DeclStmt 0x11f00bcd0 <line:23:3, col:13>
    |   | `-VarDecl 0x11f00bc68 <col:3, col:8> col:8 used avail 'long'
    |   |-DeclStmt 0x11f00be10 <line:24:3, col:22>
    |   | `-VarDecl 0x11f00bda8 <col:3, col:20> col:20 used ev 'struct io_event *'
    |   |-DeclStmt 0x11f00c018 <line:25:3, col:20>
    |   | |-RecordDecl 0x11f00be28 <col:3, col:10> col:10 struct page
    |   | `-VarDecl 0x11f00bf98 <col:3, col:16> col:16 used page 'struct page *'
    |   |-BinaryOperator 0x11f00c1f0 <line:27:3, col:53> 'long' contains-errors '='
    |   | |-DeclRefExpr 0x11f00c030 <col:3> 'long' lvalue Var 0x11f00bc68 'avail' 'long'
    |   | `-BinaryOperator 0x11f00c1d0 <col:11, col:53> '<dependent type>' contains-errors '-'
    |   |   |-ParenExpr 0x11f00c190 <col:11, col:49> '<dependent type>' contains-errors
    |   |   | `-ConditionalOperator 0x11f00c160 <col:12, col:40> '<dependent type>' contains-errors
    |   |   |   |-BinaryOperator 0x11f00c0c0 <col:12, col:20> 'int' '<='
    |   |   |   | |-ImplicitCastExpr 0x11f00c090 <col:12> 'unsigned int' <LValueToRValue>
    |   |   |   | | `-DeclRefExpr 0x11f00c050 <col:12> 'unsigned int' lvalue Var 0x11f008648 'head' 'unsigned int'
    |   |   |   | `-ImplicitCastExpr 0x11f00c0a8 <col:20> 'unsigned int' <LValueToRValue>
    |   |   |   |   `-DeclRefExpr 0x11f00c070 <col:20> 'unsigned int' lvalue Var 0x11f0086c8 'tail' 'unsigned int'
    |   |   |   |-DeclRefExpr 0x11f00c0e0 <col:28> 'unsigned int' lvalue Var 0x11f0086c8 'tail' 'unsigned int'
    |   |   |   `-RecoveryExpr 0x11f00c138 <col:35, col:40> '<dependent type>' contains-errors lvalue
    |   |   |     `-DeclRefExpr 0x11f00c100 <col:35> 'struct kioctx *' lvalue ParmVar 0x11e00e248 'ctx' 'struct kioctx *'
    |   |   `-DeclRefExpr 0x11f00c1b0 <col:53> 'unsigned int' lvalue Var 0x11f008648 'head' 'unsigned int'
    |   |-IfStmt 0x11f00c2a8 <line:28:3, line:29:4>
    |   | |-BinaryOperator 0x11f00c280 <line:28:7, col:15> 'int' '=='
    |   | | |-ImplicitCastExpr 0x11f00c250 <col:7> 'unsigned int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x11f00c210 <col:7> 'unsigned int' lvalue Var 0x11f008648 'head' 'unsigned int'
    |   | | `-ImplicitCastExpr 0x11f00c268 <col:15> 'unsigned int' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x11f00c230 <col:15> 'unsigned int' lvalue Var 0x11f0086c8 'tail' 'unsigned int'
    |   | `-BreakStmt 0x11f00c2a0 <line:29:4>
    |   |-BinaryOperator 0x11f00c520 <line:31:3, col:30> 'long' contains-errors '='
    |   | |-DeclRefExpr 0x11f00c2c8 <col:3> 'long' lvalue Var 0x11f00bc68 'avail' 'long'
    |   | `-CallExpr 0x11f00c4f0 <col:11, col:30> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x11f00c3c8 <col:11> 'int ()' Function 0x11f00c310 'min' 'int ()'
    |   |   |-DeclRefExpr 0x11f00c3e8 <col:15> 'long' lvalue Var 0x11f00bc68 'avail' 'long'
    |   |   `-BinaryOperator 0x11f00c4d0 <col:22, col:27> '<dependent type>' contains-errors '-'
    |   |     |-RecoveryExpr 0x11f00c4b0 <col:22> '<dependent type>' contains-errors lvalue
    |   |     `-DeclRefExpr 0x11f00c420 <col:27> 'long' lvalue Var 0x11f008800 'ret' 'long'
    |   |-BinaryOperator 0x11f00c9b8 <line:39:3, col:17> 'struct io_event *' '='
    |   | |-DeclRefExpr 0x11f00c808 <col:3> 'struct io_event *' lvalue Var 0x11f00bda8 'ev' 'struct io_event *'
    |   | `-ImplicitCastExpr 0x11f00c9a0 <col:8, col:17> 'struct io_event *' <IntegralToPointer>
    |   |   `-CallExpr 0x11f00c960 <col:8, col:17> 'int'
    |   |     |-ImplicitCastExpr 0x11f00c948 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |   |     | `-DeclRefExpr 0x11f00c908 <col:8> 'int ()' Function 0x11f00c850 'kmap' 'int ()'
    |   |     `-ImplicitCastExpr 0x11f00c988 <col:13> 'struct page *' <LValueToRValue>
    |   |       `-DeclRefExpr 0x11f00c928 <col:13> 'struct page *' lvalue Var 0x11f00bf98 'page' 'struct page *'
    |   |-CallExpr 0x11f011988 <line:42:3, col:14> 'int'
    |   | |-ImplicitCastExpr 0x11f011970 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x11f011930 <col:3> 'int ()' Function 0x11f011878 'kunmap' 'int ()'
    |   | `-ImplicitCastExpr 0x11f0119b0 <col:10> 'struct page *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x11f011950 <col:10> 'struct page *' lvalue Var 0x11f00bf98 'page' 'struct page *'
    |   |-IfStmt 0x11f011b90 <line:44:3, line:47:3>
    |   | |-CallExpr 0x11f011b00 <line:44:7, col:24> 'int'
    |   | | |-ImplicitCastExpr 0x11f011ae8 <col:7> 'int (*)()' <FunctionToPointerDecay>
    |   | | | `-DeclRefExpr 0x11f011aa8 <col:7> 'int ()' Function 0x11f0119f0 'unlikely' 'int ()'
    |   | | `-ImplicitCastExpr 0x11f011b28 <col:16> 'int' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x11f011ac8 <col:16> 'int' lvalue Var 0x11f0088d0 'copy_ret' 'int'
    |   | `-CompoundStmt 0x11f011b78 <col:27, line:47:3>
    |   |   `-GotoStmt 0x11f011b60 <line:46:4, col:9> 'out' 0x11f00bb30
    |   |-CompoundAssignOperator 0x11f011c08 <line:49:3, col:10> 'long' '+=' ComputeLHSTy='long' ComputeResultTy='long'
    |   | |-DeclRefExpr 0x11f011bb0 <col:3> 'long' lvalue Var 0x11f008800 'ret' 'long'
    |   | `-ImplicitCastExpr 0x11f011bf0 <col:10> 'long' <LValueToRValue>
    |   |   `-DeclRefExpr 0x11f011bd0 <col:10> 'long' lvalue Var 0x11f00bc68 'avail' 'long'
    |   |-CompoundAssignOperator 0x11f011c90 <line:50:3, col:11> 'unsigned int' '+=' ComputeLHSTy='long' ComputeResultTy='long'
    |   | |-DeclRefExpr 0x11f011c38 <col:3> 'unsigned int' lvalue Var 0x11f008648 'head' 'unsigned int'
    |   | `-ImplicitCastExpr 0x11f011c78 <col:11> 'long' <LValueToRValue>
    |   |   `-DeclRefExpr 0x11f011c58 <col:11> 'long' lvalue Var 0x11f00bc68 'avail' 'long'
    |   `-CompoundAssignOperator 0x11f011d40 <line:51:3, col:16> 'unsigned int' contains-errors '%=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |     |-DeclRefExpr 0x11f011cc0 <col:3> 'unsigned int' lvalue Var 0x11f008648 'head' 'unsigned int'
    |     `-RecoveryExpr 0x11f011d18 <col:11, col:16> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x11f011ce0 <col:11> 'struct kioctx *' lvalue ParmVar 0x11e00e248 'ctx' 'struct kioctx *'
    |-BinaryOperator 0x11f011f20 <line:54:2, col:39> 'struct aio_ring *' contains-errors '='
    | |-DeclRefExpr 0x11f011e00 <col:2> 'struct aio_ring *' lvalue Var 0x11f008598 'ring' 'struct aio_ring *'
    | `-CallExpr 0x11f011ef8 <col:9, col:39> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x11f011e20 <col:9> 'int ()' Function 0x11f008b88 'kmap_atomic' 'int ()'
    |   `-ArraySubscriptExpr 0x11f011ed8 <col:21, col:38> '<dependent type>' contains-errors lvalue
    |     |-ImplicitCastExpr 0x11f011ec0 <col:21, col:26> '<dependent type>' contains-errors <LValueToRValue>
    |     | `-RecoveryExpr 0x11f011e78 <col:21, col:26> '<dependent type>' contains-errors lvalue
    |     |   `-DeclRefExpr 0x11f011e40 <col:21> 'struct kioctx *' lvalue ParmVar 0x11e00e248 'ctx' 'struct kioctx *'
    |     `-IntegerLiteral 0x11f011ea0 <col:37> 'int' 0
    |-BinaryOperator 0x11f011fc0 <line:55:2, col:15> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x11f011f78 <col:2, col:8> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x11f011f40 <col:2> 'struct aio_ring *' lvalue Var 0x11f008598 'ring' 'struct aio_ring *'
    | `-DeclRefExpr 0x11f011fa0 <col:15> 'unsigned int' lvalue Var 0x11f008648 'head' 'unsigned int'
    |-CallExpr 0x11f012038 <line:56:2, col:20> 'int'
    | |-ImplicitCastExpr 0x11f012020 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x11f011fe0 <col:2> 'int ()' Function 0x11f008ec8 'kunmap_atomic' 'int ()'
    | `-ImplicitCastExpr 0x11f012060 <col:16> 'struct aio_ring *' <LValueToRValue>
    |   `-DeclRefExpr 0x11f012000 <col:16> 'struct aio_ring *' lvalue Var 0x11f008598 'ring' 'struct aio_ring *'
    |-CallExpr 0x11f012230 <line:57:2, col:38> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x11f012158 <col:2> 'int ()' Function 0x11f0120a0 'flush_dcache_page' 'int ()'
    | `-ArraySubscriptExpr 0x11f012210 <col:20, col:37> '<dependent type>' contains-errors lvalue
    |   |-ImplicitCastExpr 0x11f0121f8 <col:20, col:25> '<dependent type>' contains-errors <LValueToRValue>
    |   | `-RecoveryExpr 0x11f0121b0 <col:20, col:25> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x11f012178 <col:20> 'struct kioctx *' lvalue ParmVar 0x11e00e248 'ctx' 'struct kioctx *'
    |   `-IntegerLiteral 0x11f0121d8 <col:36> 'int' 0
    |-CallExpr 0x11f012310 <line:59:2, col:33> 'int'
    | |-ImplicitCastExpr 0x11f0122f8 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x11f012258 <col:2> 'int ()' Function 0x11f009070 'pr_debug' 'int ()'
    | |-ImplicitCastExpr 0x11f012350 <col:11> 'char *' <ArrayToPointerDecay>
    | | `-StringLiteral 0x11f012278 <col:11> 'char[4]' lvalue "STR"
    | |-ImplicitCastExpr 0x11f012368 <col:18> 'long' <LValueToRValue>
    | | `-DeclRefExpr 0x11f012298 <col:18> 'long' lvalue Var 0x11f008800 'ret' 'long'
    | |-ImplicitCastExpr 0x11f012380 <col:23> 'unsigned int' <LValueToRValue>
    | | `-DeclRefExpr 0x11f0122b8 <col:23> 'unsigned int' lvalue Var 0x11f008648 'head' 'unsigned int'
    | `-ImplicitCastExpr 0x11f012398 <col:29> 'unsigned int' <LValueToRValue>
    |   `-DeclRefExpr 0x11f0122d8 <col:29> 'unsigned int' lvalue Var 0x11f0086c8 'tail' 'unsigned int'
    |-LabelStmt 0x11f012550 <line:60:1, line:61:30> 'out'
    | `-CallExpr 0x11f012528 <col:2, col:30> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x11f012490 <col:2> 'int ()' Function 0x11f0123d8 'mutex_unlock' 'int ()'
    |   `-UnaryOperator 0x11f012510 <col:15, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x11f0124e8 <col:16, col:21> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x11f0124b0 <col:16> 'struct kioctx *' lvalue ParmVar 0x11e00e248 'ctx' 'struct kioctx *'
    `-ReturnStmt 0x11f0125a8 <line:63:2, col:9>
      `-ImplicitCastExpr 0x11f012590 <col:9> 'long' <LValueToRValue>
        `-DeclRefExpr 0x11f012570 <col:9> 'long' lvalue Var 0x11f008800 'ret' 'long'
