`-FunctionDecl 0x132941498  line:1:12 invalid zerocopy_sg_from_iovec 'int (struct sk_buff *, const struct iovec *, int, int)' static
  |-ParmVarDecl 0x132928e48 <col:35, col:51> col:51 used skb 'struct sk_buff *'
  |-ParmVarDecl 0x132941228 <col:56, col:76> col:76 used from 'const struct iovec *'
  |-ParmVarDecl 0x1329412a8 <line:2:7, col:11> col:11 used offset 'int'
  |-ParmVarDecl 0x132941340 <col:19, col:26> col:26 invalid count 'int'
  `-CompoundStmt 0x13294ae70 <line:3:1, line:75:1>
    |-DeclStmt 0x132941810 <line:4:2, col:44>
    | `-VarDecl 0x132941578 <col:2, col:38> col:6 used len 'int' cinit
    |   `-BinaryOperator 0x1329417f0 <col:12, col:38> '<dependent type>' contains-errors '-'
    |     |-CallExpr 0x1329417a0 <col:12, col:34> '<dependent type>' contains-errors
    |     | |-DeclRefExpr 0x132941740 <col:12> 'int ()' Function 0x132941688 'iov_length' 'int ()'
    |     | |-DeclRefExpr 0x132941760 <col:23> 'const struct iovec *' lvalue ParmVar 0x132941228 'from' 'const struct iovec *'
    |     | `-RecoveryExpr 0x132941780 <col:29> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x1329417d0 <col:38> 'int' lvalue ParmVar 0x1329412a8 'offset' 'int'
    |-DeclStmt 0x132941a58 <line:5:2, col:29>
    | `-VarDecl 0x132941840 <col:2, col:28> col:6 used copy 'int' cinit
    |   `-CallExpr 0x132941a18 <col:13, col:28> 'int'
    |     |-ImplicitCastExpr 0x132941a00 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x132941988 <col:13> 'int ()' Function 0x1329418d0 'skb_headlen' 'int ()'
    |     `-ImplicitCastExpr 0x132941a40 <col:25> 'struct sk_buff *' <LValueToRValue>
    |       `-DeclRefExpr 0x1329419a8 <col:25> 'struct sk_buff *' lvalue ParmVar 0x132928e48 'skb' 'struct sk_buff *'
    |-DeclStmt 0x132941ba8 <line:6:2, col:23>
    | |-VarDecl 0x132941a88 <col:2, col:6> col:6 used size 'int'
    | `-VarDecl 0x132941b08 <col:2, col:22> col:12 used offset1 'int' cinit
    |   `-IntegerLiteral 0x132941b70 <col:22> 'int' 0
    |-DeclStmt 0x132941c60 <line:7:2, col:11>
    | `-VarDecl 0x132941bd8 <col:2, col:10> col:6 used i 'int' cinit
    |   `-IntegerLiteral 0x132941c40 <col:10> 'int' 0
    |-WhileStmt 0x132941ee8 <line:10:2, line:14:2>
    | |-BinaryOperator 0x132941d58 <line:10:9, col:42> 'int' contains-errors '&&'
    | | |-RecoveryExpr 0x132941c78 <col:9> '<dependent type>' contains-errors lvalue
    | | `-ParenExpr 0x132941d38 <col:18, col:42> 'int' contains-errors
    | |   `-BinaryOperator 0x132941d18 <col:19, col:35> 'int' contains-errors '>='
    | |     |-DeclRefExpr 0x132941c98 <col:19> 'int' lvalue ParmVar 0x1329412a8 'offset' 'int'
    | |     `-RecoveryExpr 0x132941cf0 <col:29, col:35> '<dependent type>' contains-errors lvalue
    | |       `-DeclRefExpr 0x132941cb8 <col:29> 'const struct iovec *' lvalue ParmVar 0x132941228 'from' 'const struct iovec *'
    | `-CompoundStmt 0x132941ec0 <col:45, line:14:2>
    |   |-CompoundAssignOperator 0x132941df8 <line:11:3, col:19> 'int' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   | |-DeclRefExpr 0x132941d78 <col:3> 'int' lvalue ParmVar 0x1329412a8 'offset' 'int'
    |   | `-RecoveryExpr 0x132941dd0 <col:13, col:19> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x132941d98 <col:13> 'const struct iovec *' lvalue ParmVar 0x132941228 'from' 'const struct iovec *'
    |   |-ImplicitCastExpr 0x132941e70 <line:12:3, col:5> '<dependent type>' contains-errors <LValueToRValue>
    |   | `-RecoveryExpr 0x132941e48 <col:3, col:5> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x132941e28 <col:5> 'const struct iovec *' lvalue ParmVar 0x132941228 'from' 'const struct iovec *'
    |   `-UnaryOperator 0x132941ea8 <line:13:3, col:5> '<dependent type>' contains-errors prefix '--' cannot overflow
    |     `-RecoveryExpr 0x132941e88 <col:5> '<dependent type>' contains-errors lvalue
    |-WhileStmt 0x1329436e0 <line:17:2, line:30:2>
    | |-BinaryOperator 0x132941fc0 <line:17:9, col:27> 'int' contains-errors '&&'
    | | |-RecoveryExpr 0x132941f08 <col:9> '<dependent type>' contains-errors lvalue
    | | `-ParenExpr 0x132941fa0 <col:18, col:27> 'int'
    | |   `-BinaryOperator 0x132941f80 <col:19, col:26> 'int' '>'
    | |     |-ImplicitCastExpr 0x132941f68 <col:19> 'int' <LValueToRValue>
    | |     | `-DeclRefExpr 0x132941f28 <col:19> 'int' lvalue Var 0x132941840 'copy' 'int'
    | |     `-IntegerLiteral 0x132941f48 <col:26> 'int' 0
    | `-CompoundStmt 0x1329436b0 <col:30, line:30:2>
    |   |-IfStmt 0x132943318 <line:19:3, line:21:12>
    |   | |-CallExpr 0x132943238 <line:19:7, line:20:12> '<dependent type>' contains-errors
    |   | | |-DeclRefExpr 0x1329430b8 <line:19:7> 'int ()' Function 0x132943000 'copy_from_user' 'int ()'
    |   | | |-BinaryOperator 0x132943158 <col:22, col:34> '<dependent type>' contains-errors '+'
    |   | | | |-RecoveryExpr 0x132943110 <col:22, col:27> '<dependent type>' contains-errors lvalue
    |   | | | | `-DeclRefExpr 0x1329430d8 <col:22> 'struct sk_buff *' lvalue ParmVar 0x132928e48 'skb' 'struct sk_buff *'
    |   | | | `-DeclRefExpr 0x132943138 <col:34> 'int' lvalue Var 0x132941b08 'offset1' 'int'
    |   | | |-BinaryOperator 0x1329431f8 <col:43, col:60> '<dependent type>' contains-errors '+'
    |   | | | |-RecoveryExpr 0x1329431b0 <col:43, col:49> '<dependent type>' contains-errors lvalue
    |   | | | | `-DeclRefExpr 0x132943178 <col:43> 'const struct iovec *' lvalue ParmVar 0x132941228 'from' 'const struct iovec *'
    |   | | | `-DeclRefExpr 0x1329431d8 <col:60> 'int' lvalue ParmVar 0x1329412a8 'offset' 'int'
    |   | | `-DeclRefExpr 0x132943218 <line:20:8> 'int' lvalue Var 0x132941a88 'size' 'int'
    |   | `-ReturnStmt 0x132943308 <line:21:4, col:12>
    |   |   `-UnaryOperator 0x1329432f0 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |     `-ImplicitCastExpr 0x1329432d8 <col:12> '<dependent type>' contains-errors <LValueToRValue>
    |   |       `-RecoveryExpr 0x1329432b8 <col:12> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x132943570 <line:22:3, line:27:14> has_else
    |   | |-BinaryOperator 0x1329433a8 <line:22:7, col:14> 'int' '>'
    |   | | |-ImplicitCastExpr 0x132943378 <col:7> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x132943338 <col:7> 'int' lvalue Var 0x132941840 'copy' 'int'
    |   | | `-ImplicitCastExpr 0x132943390 <col:14> 'int' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x132943358 <col:14> 'int' lvalue Var 0x132941a88 'size' 'int'
    |   | |-CompoundStmt 0x1329434c0 <col:20, line:26:3>
    |   | | |-ImplicitCastExpr 0x132943410 <line:23:4, col:6> '<dependent type>' contains-errors <LValueToRValue>
    |   | | | `-RecoveryExpr 0x1329433e8 <col:4, col:6> '<dependent type>' contains-errors lvalue
    |   | | |   `-DeclRefExpr 0x1329433c8 <col:6> 'const struct iovec *' lvalue ParmVar 0x132941228 'from' 'const struct iovec *'
    |   | | |-UnaryOperator 0x132943448 <line:24:4, col:6> '<dependent type>' contains-errors prefix '--' cannot overflow
    |   | | | `-RecoveryExpr 0x132943428 <col:6> '<dependent type>' contains-errors lvalue
    |   | | `-BinaryOperator 0x1329434a0 <line:25:4, col:13> 'int' '='
    |   | |   |-DeclRefExpr 0x132943460 <col:4> 'int' lvalue ParmVar 0x1329412a8 'offset' 'int'
    |   | |   `-IntegerLiteral 0x132943480 <col:13> 'int' 0
    |   | `-CompoundAssignOperator 0x132943540 <line:27:4, col:14> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |   |   |-DeclRefExpr 0x1329434e8 <col:4> 'int' lvalue ParmVar 0x1329412a8 'offset' 'int'
    |   |   `-ImplicitCastExpr 0x132943528 <col:14> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x132943508 <col:14> 'int' lvalue Var 0x132941a88 'size' 'int'
    |   |-CompoundAssignOperator 0x1329435f8 <line:28:3, col:11> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
    |   | |-DeclRefExpr 0x1329435a0 <col:3> 'int' lvalue Var 0x132941840 'copy' 'int'
    |   | `-ImplicitCastExpr 0x1329435e0 <col:11> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x1329435c0 <col:11> 'int' lvalue Var 0x132941a88 'size' 'int'
    |   `-CompoundAssignOperator 0x132943680 <line:29:3, col:14> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |     |-DeclRefExpr 0x132943628 <col:3> 'int' lvalue Var 0x132941b08 'offset1' 'int'
    |     `-ImplicitCastExpr 0x132943668 <col:14> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x132943648 <col:14> 'int' lvalue Var 0x132941a88 'size' 'int'
    |-IfStmt 0x1329437c0 <line:32:2, line:33:10>
    | |-BinaryOperator 0x132943770 <line:32:6, col:13> 'int' contains-errors '=='
    | | |-ImplicitCastExpr 0x132943740 <col:6> 'int' contains-errors <LValueToRValue>
    | | | `-DeclRefExpr 0x132943700 <col:6> 'int' contains-errors lvalue Var 0x132941578 'len' 'int'
    | | `-ImplicitCastExpr 0x132943758 <col:13> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x132943720 <col:13> 'int' lvalue Var 0x132941b08 'offset1' 'int'
    | `-ReturnStmt 0x1329437b0 <line:33:3, col:10>
    |   `-IntegerLiteral 0x132943790 <col:10> 'int' 0
    |-WhileStmt 0x13294ae20 <line:35:2, line:73:2>
    | |-UnaryOperator 0x132943800 <line:35:9, col:14> '<dependent type>' contains-errors postfix '--' cannot overflow
    | | `-RecoveryExpr 0x1329437e0 <col:9> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x13294ad90 <col:18, line:73:2>
    |   |-DeclStmt 0x132943a28 <line:36:3, col:35>
    |   | |-RecordDecl 0x132943818 <col:3, col:10> col:10 struct page
    |   | `-VarDecl 0x1329439a8 <col:3, col:16> col:16 invalid page 'struct page *'
    |   |-DeclStmt 0x132943ac0 <line:37:3, col:16>
    |   | `-VarDecl 0x132943a58 <col:3, col:7> col:7 used num_pages 'int'
    |   |-DeclStmt 0x132943b58 <line:38:3, col:21>
    |   | `-VarDecl 0x132943af0 <col:3, col:17> col:17 used base 'unsigned long'
    |   |-DeclStmt 0x132943bf0 <line:39:3, col:25>
    |   | `-VarDecl 0x132943b88 <col:3, col:17> col:17 used truesize 'unsigned long'
    |   |-BinaryOperator 0x132943cc8 <line:41:3, col:25> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x132943c08 <col:3> 'int' contains-errors lvalue Var 0x132941578 'len' 'int'
    |   | `-BinaryOperator 0x132943ca8 <col:9, col:25> '<dependent type>' contains-errors '-'
    |   |   |-RecoveryExpr 0x132943c60 <col:9, col:15> '<dependent type>' contains-errors lvalue
    |   |   | `-DeclRefExpr 0x132943c28 <col:9> 'const struct iovec *' lvalue ParmVar 0x132941228 'from' 'const struct iovec *'
    |   |   `-DeclRefExpr 0x132943c88 <col:25> 'int' lvalue ParmVar 0x1329412a8 'offset' 'int'
    |   |-IfStmt 0x132943e28 <line:42:3, line:46:3>
    |   | |-UnaryOperator 0x132943d20 <line:42:7, col:8> 'int' contains-errors prefix '!' cannot overflow
    |   | | `-ImplicitCastExpr 0x132943d08 <col:8> 'int' contains-errors <LValueToRValue>
    |   | |   `-DeclRefExpr 0x132943ce8 <col:8> 'int' contains-errors lvalue Var 0x132941578 'len' 'int'
    |   | `-CompoundStmt 0x132943e00 <col:13, line:46:3>
    |   |   |-BinaryOperator 0x132943d78 <line:43:4, col:13> 'int' '='
    |   |   | |-DeclRefExpr 0x132943d38 <col:4> 'int' lvalue ParmVar 0x1329412a8 'offset' 'int'
    |   |   | `-IntegerLiteral 0x132943d58 <col:13> 'int' 0
    |   |   |-ImplicitCastExpr 0x132943de0 <line:44:4, col:6> '<dependent type>' contains-errors <LValueToRValue>
    |   |   | `-RecoveryExpr 0x132943db8 <col:4, col:6> '<dependent type>' contains-errors lvalue
    |   |   |   `-DeclRefExpr 0x132943d98 <col:6> 'const struct iovec *' lvalue ParmVar 0x132941228 'from' 'const struct iovec *'
    |   |   `-ContinueStmt 0x132943df8 <line:45:4>
    |   |-BinaryOperator 0x132943f78 <line:47:3, col:42> 'unsigned long' contains-errors '='
    |   | |-DeclRefExpr 0x132943e48 <col:3> 'unsigned long' lvalue Var 0x132943af0 'base' 'unsigned long'
    |   | `-BinaryOperator 0x132943f58 <col:10, col:42> 'unsigned long' contains-errors '+'
    |   |   |-CStyleCastExpr 0x132943ee0 <col:10, col:31> 'unsigned long' contains-errors <Dependent>
    |   |   | `-RecoveryExpr 0x132943ea0 <col:25, col:31> '<dependent type>' contains-errors lvalue
    |   |   |   `-DeclRefExpr 0x132943e68 <col:25> 'const struct iovec *' lvalue ParmVar 0x132941228 'from' 'const struct iovec *'
    |   |   `-ImplicitCastExpr 0x132943f40 <col:42> 'unsigned long' <IntegralCast>
    |   |     `-ImplicitCastExpr 0x132943f28 <col:42> 'int' <LValueToRValue>
    |   |       `-DeclRefExpr 0x132943f08 <col:42> 'int' lvalue ParmVar 0x1329412a8 'offset' 'int'
    |   |-BinaryOperator 0x132949b20 <line:49:3, col:58> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x1329498b8 <col:3> 'int' lvalue Var 0x132943a58 'num_pages' 'int'
    |   | `-CallExpr 0x132949ae0 <col:15, col:58> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x1329499b8 <col:15> 'int ()' Function 0x132949900 'get_user_pages_fast' 'int ()'
    |   |   |-DeclRefExpr 0x1329499d8 <col:35> 'unsigned long' lvalue Var 0x132943af0 'base' 'unsigned long'
    |   |   |-DeclRefExpr 0x1329499f8 <col:41> 'int' lvalue Var 0x132941a88 'size' 'int'
    |   |   |-IntegerLiteral 0x132949a18 <col:47> 'int' 0
    |   |   `-UnaryOperator 0x132949ac8 <col:50, col:57> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |     `-ArraySubscriptExpr 0x132949aa8 <col:51, col:57> '<dependent type>' contains-errors lvalue
    |   |       |-ImplicitCastExpr 0x132949a78 <col:51> '<dependent type>' contains-errors <LValueToRValue>
    |   |       | `-RecoveryExpr 0x132949a38 <col:51> '<dependent type>' contains-errors lvalue
    |   |       `-ImplicitCastExpr 0x132949a90 <col:56> 'int' <LValueToRValue>
    |   |         `-DeclRefExpr 0x132949a58 <col:56> 'int' lvalue Var 0x132941bd8 'i' 'int'
    |   |-IfStmt 0x13294a100 <line:50:3, line:55:3>
    |   | |-RecoveryExpr 0x132949db0 <line:50:7, line:51:61> '_Bool' contains-errors
    |   | `-CompoundStmt 0x13294a0e8 <col:64, line:55:3>
    |   |   `-ForStmt 0x13294a0b0 <line:52:4, line:53:21>
    |   |     |-BinaryOperator 0x132949e10 <line:52:9, col:13> 'int' '='
    |   |     | |-DeclRefExpr 0x132949dd0 <col:9> 'int' lvalue Var 0x132941bd8 'i' 'int'
    |   |     | `-IntegerLiteral 0x132949df0 <col:13> 'int' 0
    |   |     |-<<<NULL>>>
    |   |     |-BinaryOperator 0x132949ea0 <col:16, col:20> 'int' '<'
    |   |     | |-ImplicitCastExpr 0x132949e70 <col:16> 'int' <LValueToRValue>
    |   |     | | `-DeclRefExpr 0x132949e30 <col:16> 'int' lvalue Var 0x132941bd8 'i' 'int'
    |   |     | `-ImplicitCastExpr 0x132949e88 <col:20> 'int' <LValueToRValue>
    |   |     |   `-DeclRefExpr 0x132949e50 <col:20> 'int' lvalue Var 0x132943a58 'num_pages' 'int'
    |   |     |-UnaryOperator 0x132949ee0 <col:31, col:32> 'int' postfix '++'
    |   |     | `-DeclRefExpr 0x132949ec0 <col:31> 'int' lvalue Var 0x132941bd8 'i' 'int'
    |   |     `-CallExpr 0x13294a088 <line:53:5, col:21> '<dependent type>' contains-errors
    |   |       |-DeclRefExpr 0x132949fd8 <col:5> 'int ()' Function 0x132949f20 'put_page' 'int ()'
    |   |       `-ArraySubscriptExpr 0x13294a068 <col:14, col:20> '<dependent type>' contains-errors lvalue
    |   |         |-ImplicitCastExpr 0x13294a038 <col:14> '<dependent type>' contains-errors <LValueToRValue>
    |   |         | `-RecoveryExpr 0x132949ff8 <col:14> '<dependent type>' contains-errors lvalue
    |   |         `-ImplicitCastExpr 0x13294a050 <col:19> 'int' <LValueToRValue>
    |   |           `-DeclRefExpr 0x13294a018 <col:19> 'int' lvalue Var 0x132941bd8 'i' 'int'
    |   |-CompoundAssignOperator 0x13294a1e0 <line:57:3, col:20> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   | |-RecoveryExpr 0x13294a198 <col:3, col:8> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x13294a160 <col:3> 'struct sk_buff *' lvalue ParmVar 0x132928e48 'skb' 'struct sk_buff *'
    |   | `-DeclRefExpr 0x13294a1c0 <col:20> 'int' contains-errors lvalue Var 0x132941578 'len' 'int'
    |   |-CompoundAssignOperator 0x13294a290 <line:58:3, col:15> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   | |-RecoveryExpr 0x13294a248 <col:3, col:8> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x13294a210 <col:3> 'struct sk_buff *' lvalue ParmVar 0x132928e48 'skb' 'struct sk_buff *'
    |   | `-DeclRefExpr 0x13294a270 <col:15> 'int' contains-errors lvalue Var 0x132941578 'len' 'int'
    |   |-CompoundAssignOperator 0x13294a340 <line:59:3, col:20> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   | |-RecoveryExpr 0x13294a2f8 <col:3, col:8> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x13294a2c0 <col:3> 'struct sk_buff *' lvalue ParmVar 0x132928e48 'skb' 'struct sk_buff *'
    |   | `-DeclRefExpr 0x13294a320 <col:20> 'unsigned long' lvalue Var 0x132943b88 'truesize' 'unsigned long'
    |   |-CallExpr 0x13294a550 <line:60:3, col:47> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x13294a450 <col:3> 'int ()' Function 0x13294a398 'atomic_add' 'int ()'
    |   | |-DeclRefExpr 0x13294a470 <col:14> 'unsigned long' lvalue Var 0x132943b88 'truesize' 'unsigned long'
    |   | `-UnaryOperator 0x13294a538 <col:24, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   `-CXXDependentScopeMemberExpr 0x13294a4f0 <col:25, col:34> '<dependent type>' contains-errors lvalue ->sk_wmem_alloc
    |   |     `-RecoveryExpr 0x13294a4c8 <col:25, col:30> '<dependent type>' contains-errors lvalue
    |   |       `-DeclRefExpr 0x13294a490 <col:25> 'struct sk_buff *' lvalue ParmVar 0x132928e48 'skb' 'struct sk_buff *'
    |   |-WhileStmt 0x13294acb0 <line:61:3, line:70:3>
    |   | |-ImplicitCastExpr 0x13294a5a0 <line:61:10> 'int' contains-errors <LValueToRValue>
    |   | | `-DeclRefExpr 0x13294a580 <col:10> 'int' contains-errors lvalue Var 0x132941578 'len' 'int'
    |   | `-CompoundStmt 0x13294ac68 <col:15, line:70:3>
    |   |   |-DeclStmt 0x13294a658 <line:62:4, col:31>
    |   |   | `-VarDecl 0x13294a5d0 <col:4, col:8> col:8 used off 'int'
    |   |   |-DeclStmt 0x13294a750 <line:63:4, col:47>
    |   |   | `-VarDecl 0x13294a688 <col:4, col:8> col:8 used size 'int'
    |   |   |-CallExpr 0x13294a9e8 <line:64:4, col:51> '<dependent type>' contains-errors
    |   |   | |-DeclRefExpr 0x13294a8b8 <col:4> 'int ()' Function 0x13294a800 '__skb_fill_page_desc' 'int ()'
    |   |   | |-DeclRefExpr 0x13294a8d8 <col:25> 'struct sk_buff *' lvalue ParmVar 0x132928e48 'skb' 'struct sk_buff *'
    |   |   | |-DeclRefExpr 0x13294a8f8 <col:30> 'int' lvalue Var 0x132941bd8 'i' 'int'
    |   |   | |-ArraySubscriptExpr 0x13294a988 <col:33, col:39> '<dependent type>' contains-errors lvalue
    |   |   | | |-ImplicitCastExpr 0x13294a958 <col:33> '<dependent type>' contains-errors <LValueToRValue>
    |   |   | | | `-RecoveryExpr 0x13294a918 <col:33> '<dependent type>' contains-errors lvalue
    |   |   | | `-ImplicitCastExpr 0x13294a970 <col:38> 'int' <LValueToRValue>
    |   |   | |   `-DeclRefExpr 0x13294a938 <col:38> 'int' lvalue Var 0x132941bd8 'i' 'int'
    |   |   | |-DeclRefExpr 0x13294a9a8 <col:42> 'int' lvalue Var 0x13294a5d0 'off' 'int'
    |   |   | `-DeclRefExpr 0x13294a9c8 <col:47> 'int' lvalue Var 0x13294a688 'size' 'int'
    |   |   |-UnaryOperator 0x13294aaf0 <line:65:4, col:29> '<dependent type>' contains-errors postfix '++' cannot overflow
    |   |   | `-RecoveryExpr 0x13294aac8 <col:4, col:21> '<dependent type>' contains-errors lvalue
    |   |   |   `-CallExpr 0x13294aa88 <col:4, col:18> 'int'
    |   |   |     |-ImplicitCastExpr 0x13294aa70 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |   |   |     | `-DeclRefExpr 0x13294aa30 <col:4> 'int ()' Function 0x132949c38 'skb_shinfo' 'int ()'
    |   |   |     `-ImplicitCastExpr 0x13294aab0 <col:15> 'struct sk_buff *' <LValueToRValue>
    |   |   |       `-DeclRefExpr 0x13294aa50 <col:15> 'struct sk_buff *' lvalue ParmVar 0x132928e48 'skb' 'struct sk_buff *'
    |   |   |-CompoundAssignOperator 0x13294ab78 <line:67:4, col:12> 'unsigned long' '+=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
    |   |   | |-DeclRefExpr 0x13294ab08 <col:4> 'unsigned long' lvalue Var 0x132943af0 'base' 'unsigned long'
    |   |   | `-ImplicitCastExpr 0x13294ab60 <col:12> 'unsigned long' <IntegralCast>
    |   |   |   `-ImplicitCastExpr 0x13294ab48 <col:12> 'int' <LValueToRValue>
    |   |   |     `-DeclRefExpr 0x13294ab28 <col:12> 'int' lvalue Var 0x13294a688 'size' 'int'
    |   |   |-CompoundAssignOperator 0x13294ac00 <line:68:4, col:11> 'int' contains-errors '-=' ComputeLHSTy='int' ComputeResultTy='int'
    |   |   | |-DeclRefExpr 0x13294aba8 <col:4> 'int' contains-errors lvalue Var 0x132941578 'len' 'int'
    |   |   | `-ImplicitCastExpr 0x13294abe8 <col:11> 'int' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x13294abc8 <col:11> 'int' lvalue Var 0x13294a688 'size' 'int'
    |   |   `-UnaryOperator 0x13294ac50 <line:69:4, col:5> 'int' postfix '++'
    |   |     `-DeclRefExpr 0x13294ac30 <col:4> 'int' lvalue Var 0x132941bd8 'i' 'int'
    |   |-BinaryOperator 0x13294ad10 <line:71:3, col:12> 'int' '='
    |   | |-DeclRefExpr 0x13294acd0 <col:3> 'int' lvalue ParmVar 0x1329412a8 'offset' 'int'
    |   | `-IntegerLiteral 0x13294acf0 <col:12> 'int' 0
    |   `-ImplicitCastExpr 0x13294ad78 <line:72:3, col:5> '<dependent type>' contains-errors <LValueToRValue>
    |     `-RecoveryExpr 0x13294ad50 <col:3, col:5> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x13294ad30 <col:5> 'const struct iovec *' lvalue ParmVar 0x132941228 'from' 'const struct iovec *'
    `-ReturnStmt 0x13294ae60 <line:74:2, col:9>
      `-IntegerLiteral 0x13294ae40 <col:9> 'int' 0
