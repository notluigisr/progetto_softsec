`-FunctionDecl 0x121928288  line:1:13 invalid is_class_idx_in_code_classes 'int (int *, int)' static
  |-ParmVarDecl 0x121928128 <col:42, col:54> col:54 invalid bin 'int *'
  |-ParmVarDecl 0x1219281a8 <col:59, col:63> col:63 used class_idx 'int'
  `-CompoundStmt 0x1219287a8 <col:74, line:9:1>
    |-DeclStmt 0x1219283c0 <line:2:2, col:7>
    | `-VarDecl 0x121928358 <col:2, col:6> col:6 used i 'int'
    `-ForStmt 0x121928758 <line:3:2, line:7:2>
      |-BinaryOperator 0x121928418 <line:3:7, col:11> 'int' '='
      | |-DeclRefExpr 0x1219283d8 <col:7> 'int' lvalue Var 0x121928358 'i' 'int'
      | `-IntegerLiteral 0x1219283f8 <col:11> 'int' 0
      |-<<<NULL>>>
      |-BinaryOperator 0x121928508 <col:14, col:30> 'int' contains-errors '<'
      | |-DeclRefExpr 0x121928438 <col:14> 'int' lvalue Var 0x121928358 'i' 'int'
      | `-CXXDependentScopeMemberExpr 0x1219284c0 <col:18, col:30> '<dependent type>' contains-errors lvalue .class_size
      |   `-CXXDependentScopeMemberExpr 0x121928478 <col:18, col:23> '<dependent type>' contains-errors lvalue ->header
      |     `-RecoveryExpr 0x121928458 <col:18> '<dependent type>' contains-errors lvalue
      |-UnaryOperator 0x121928548 <col:42, col:43> 'int' postfix '++'
      | `-DeclRefExpr 0x121928528 <col:42> 'int' lvalue Var 0x121928358 'i' 'int'
      `-CompoundStmt 0x121928740 <col:47, line:7:2>
        `-IfStmt 0x121928720 <line:4:3, line:6:3>
          |-BinaryOperator 0x1219286a0 <line:4:7, col:36> 'int' contains-errors '=='
          | |-DeclRefExpr 0x121928560 <col:7> 'int' lvalue ParmVar 0x1219281a8 'class_idx' 'int'
          | `-CXXDependentScopeMemberExpr 0x121928658 <col:20, col:36> '<dependent type>' contains-errors lvalue .class_id
          |   `-ArraySubscriptExpr 0x121928638 <col:20, col:34> '<dependent type>' contains-errors lvalue
          |     |-ImplicitCastExpr 0x121928608 <col:20, col:25> '<dependent type>' contains-errors <LValueToRValue>
          |     | `-CXXDependentScopeMemberExpr 0x1219285a0 <col:20, col:25> '<dependent type>' contains-errors lvalue ->classes
          |     |   `-RecoveryExpr 0x121928580 <col:20> '<dependent type>' contains-errors lvalue
          |     `-ImplicitCastExpr 0x121928620 <col:33> 'int' <LValueToRValue>
          |       `-DeclRefExpr 0x1219285e8 <col:33> 'int' lvalue Var 0x121928358 'i' 'int'
          `-CompoundStmt 0x121928708 <col:46, line:6:3>
            `-ReturnStmt 0x1219286f8 <line:5:4, col:11>
              `-RecoveryExpr 0x1219286d8 <col:11> '<dependent type>' contains-errors lvalue
