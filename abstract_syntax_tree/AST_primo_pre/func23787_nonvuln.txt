`-FunctionDecl 0x12780dfa8  line:1:12 invalid add_hfyu_left_prediction_c 'int (int *, const int *, int, int)' static
  |-ParmVarDecl 0x12780dd28 <col:39, col:48> col:48 referenced invalid dst 'int *'
  |-ParmVarDecl 0x12780dda8 <col:53, col:68> col:68 invalid src 'const int *'
  |-ParmVarDecl 0x12780de28 <col:73, col:77> col:77 used w 'int'
  |-ParmVarDecl 0x12780dea8 <col:80, col:84> col:84 used acc 'int'
  `-CompoundStmt 0x127827a20 <col:88, line:18:1>
    |-DeclStmt 0x12780e0f0 <line:2:5, col:10>
    | `-VarDecl 0x12780e088 <col:5, col:9> col:9 used i 'int'
    |-ForStmt 0x1278276a8 <line:4:5, line:10:5>
    | |-BinaryOperator 0x12780e148 <line:4:9, col:11> 'int' '='
    | | |-DeclRefExpr 0x12780e108 <col:9> 'int' lvalue Var 0x12780e088 'i' 'int'
    | | `-IntegerLiteral 0x12780e128 <col:11> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x12780e218 <col:14, col:18> 'int' '<'
    | | |-ImplicitCastExpr 0x12780e200 <col:14> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x12780e168 <col:14> 'int' lvalue Var 0x12780e088 'i' 'int'
    | | `-BinaryOperator 0x12780e1e0 <col:16, col:18> 'int' '-'
    | |   |-ImplicitCastExpr 0x12780e1c8 <col:16> 'int' <LValueToRValue>
    | |   | `-DeclRefExpr 0x12780e188 <col:16> 'int' lvalue ParmVar 0x12780de28 'w' 'int'
    | |   `-IntegerLiteral 0x12780e1a8 <col:18> 'int' 1
    | |-UnaryOperator 0x12780e258 <col:21, col:22> 'int' postfix '++'
    | | `-DeclRefExpr 0x12780e238 <col:21> 'int' lvalue Var 0x12780e088 'i' 'int'
    | `-CompoundStmt 0x127827670 <col:25, line:10:5>
    |   |-CompoundAssignOperator 0x12780e320 <line:5:9, col:20> 'int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   | |-DeclRefExpr 0x12780e270 <col:9> 'int' lvalue ParmVar 0x12780dea8 'acc' 'int'
    |   | `-ArraySubscriptExpr 0x12780e300 <col:15, col:20> '<dependent type>' contains-errors lvalue
    |   |   |-ImplicitCastExpr 0x12780e2d0 <col:15> '<dependent type>' contains-errors <LValueToRValue>
    |   |   | `-RecoveryExpr 0x12780e290 <col:15> '<dependent type>' contains-errors lvalue
    |   |   `-ImplicitCastExpr 0x12780e2e8 <col:19> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x12780e2b0 <col:19> 'int' lvalue Var 0x12780e088 'i' 'int'
    |   |-BinaryOperator 0x127827440 <line:6:9, col:17> '<dependent type>' contains-errors '='
    |   | |-ArraySubscriptExpr 0x127827400 <col:9, col:14> '<dependent type>' contains-errors lvalue
    |   | | |-ImplicitCastExpr 0x12780e3b8 <col:9> '<dependent type>' contains-errors <LValueToRValue>
    |   | | | `-RecoveryExpr 0x12780e370 <col:9> '<dependent type>' contains-errors lvalue
    |   | | |   `-DeclRefExpr 0x12780e350 <col:9> 'int *' lvalue ParmVar 0x12780dd28 'dst' 'int *'
    |   | | `-ImplicitCastExpr 0x12780e3d0 <col:13> 'int' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x12780e398 <col:13> 'int' lvalue Var 0x12780e088 'i' 'int'
    |   | `-DeclRefExpr 0x127827420 <col:17> 'int' lvalue ParmVar 0x12780dea8 'acc' 'int'
    |   |-UnaryOperator 0x127827480 <line:7:9, col:10> 'int' postfix '++'
    |   | `-DeclRefExpr 0x127827460 <col:9> 'int' lvalue Var 0x12780e088 'i' 'int'
    |   |-CompoundAssignOperator 0x127827548 <line:8:9, col:20> 'int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   | |-DeclRefExpr 0x127827498 <col:9> 'int' lvalue ParmVar 0x12780dea8 'acc' 'int'
    |   | `-ArraySubscriptExpr 0x127827528 <col:15, col:20> '<dependent type>' contains-errors lvalue
    |   |   |-ImplicitCastExpr 0x1278274f8 <col:15> '<dependent type>' contains-errors <LValueToRValue>
    |   |   | `-RecoveryExpr 0x1278274b8 <col:15> '<dependent type>' contains-errors lvalue
    |   |   `-ImplicitCastExpr 0x127827510 <col:19> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x1278274d8 <col:19> 'int' lvalue Var 0x12780e088 'i' 'int'
    |   `-BinaryOperator 0x127827650 <line:9:9, col:17> '<dependent type>' contains-errors '='
    |     |-ArraySubscriptExpr 0x127827610 <col:9, col:14> '<dependent type>' contains-errors lvalue
    |     | |-ImplicitCastExpr 0x1278275e0 <col:9> '<dependent type>' contains-errors <LValueToRValue>
    |     | | `-RecoveryExpr 0x127827598 <col:9> '<dependent type>' contains-errors lvalue
    |     | |   `-DeclRefExpr 0x127827578 <col:9> 'int *' lvalue ParmVar 0x12780dd28 'dst' 'int *'
    |     | `-ImplicitCastExpr 0x1278275f8 <col:13> 'int' <LValueToRValue>
    |     |   `-DeclRefExpr 0x1278275c0 <col:13> 'int' lvalue Var 0x12780e088 'i' 'int'
    |     `-DeclRefExpr 0x127827630 <col:17> 'int' lvalue ParmVar 0x12780dea8 'acc' 'int'
    |-ForStmt 0x1278279a0 <line:12:5, line:15:5>
    | |-<<<NULL>>>
    | |-<<<NULL>>>
    | |-BinaryOperator 0x127827750 <line:12:11, col:13> 'int' '<'
    | | |-ImplicitCastExpr 0x127827720 <col:11> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1278276e0 <col:11> 'int' lvalue Var 0x12780e088 'i' 'int'
    | | `-ImplicitCastExpr 0x127827738 <col:13> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x127827700 <col:13> 'int' lvalue ParmVar 0x12780de28 'w' 'int'
    | |-UnaryOperator 0x127827790 <col:16, col:17> 'int' postfix '++'
    | | `-DeclRefExpr 0x127827770 <col:16> 'int' lvalue Var 0x12780e088 'i' 'int'
    | `-CompoundStmt 0x127827980 <col:20, line:15:5>
    |   |-CompoundAssignOperator 0x127827858 <line:13:9, col:20> 'int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   | |-DeclRefExpr 0x1278277a8 <col:9> 'int' lvalue ParmVar 0x12780dea8 'acc' 'int'
    |   | `-ArraySubscriptExpr 0x127827838 <col:15, col:20> '<dependent type>' contains-errors lvalue
    |   |   |-ImplicitCastExpr 0x127827808 <col:15> '<dependent type>' contains-errors <LValueToRValue>
    |   |   | `-RecoveryExpr 0x1278277c8 <col:15> '<dependent type>' contains-errors lvalue
    |   |   `-ImplicitCastExpr 0x127827820 <col:19> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x1278277e8 <col:19> 'int' lvalue Var 0x12780e088 'i' 'int'
    |   `-BinaryOperator 0x127827960 <line:14:9, col:17> '<dependent type>' contains-errors '='
    |     |-ArraySubscriptExpr 0x127827920 <col:9, col:14> '<dependent type>' contains-errors lvalue
    |     | |-ImplicitCastExpr 0x1278278f0 <col:9> '<dependent type>' contains-errors <LValueToRValue>
    |     | | `-RecoveryExpr 0x1278278a8 <col:9> '<dependent type>' contains-errors lvalue
    |     | |   `-DeclRefExpr 0x127827888 <col:9> 'int *' lvalue ParmVar 0x12780dd28 'dst' 'int *'
    |     | `-ImplicitCastExpr 0x127827908 <col:13> 'int' <LValueToRValue>
    |     |   `-DeclRefExpr 0x1278278d0 <col:13> 'int' lvalue Var 0x12780e088 'i' 'int'
    |     `-DeclRefExpr 0x127827940 <col:17> 'int' lvalue ParmVar 0x12780dea8 'acc' 'int'
    `-ReturnStmt 0x127827a10 <line:17:5, col:12>
      `-ImplicitCastExpr 0x1278279f8 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x1278279d8 <col:12> 'int' lvalue ParmVar 0x12780dea8 'acc' 'int'
