`-FunctionDecl 0x155928118  line:1:19 object_common2 'int ()' static inline
  `-CompoundStmt 0x15600a4f0 <line:2:1, line:22:1>
    |-IfStmt 0x155928630 <line:6:2, line:8:2>
    | |-UnaryOperator 0x1559285d0 <line:6:6, col:77> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-CallExpr 0x155928598 <col:7, col:77> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x155928330 <col:7> 'int ()' Function 0x155928278 'process_nested_data' 'int ()'
    | |   |-RecoveryExpr 0x155928510 <col:27> '<dependent type>' contains-errors lvalue
    | |   |-CallExpr 0x155928550 <col:49, col:66> '<dependent type>' contains-errors
    | |   | |-DeclRefExpr 0x155928448 <col:49> 'int ()' Function 0x155928390 'Z_OBJPROP_PP' 'int ()'
    | |   | `-RecoveryExpr 0x155928530 <col:62> '<dependent type>' contains-errors lvalue
    | |   `-RecoveryExpr 0x155928578 <col:69> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x155928618 <col:80, line:8:2>
    |   `-ReturnStmt 0x155928608 <line:7:3, col:10>
    |     `-IntegerLiteral 0x1559285e8 <col:10> 'int' 0
    `-IfStmt 0x15600a2b0 <line:10:2, line:15:2>
      |-BinaryOperator 0x156009bb0 <line:10:6, line:11:60> 'int' contains-errors '&&'
      | |-BinaryOperator 0x156009ab8 <line:10:6, col:26> 'int' contains-errors '!='
      | | |-CallExpr 0x156009a70 <col:6, col:21> '<dependent type>' contains-errors
      | | | |-DeclRefExpr 0x155928730 <col:6> 'int ()' Function 0x155928678 'Z_OBJCE_PP' 'int ()'
      | | | `-RecoveryExpr 0x156009a50 <col:17> '<dependent type>' contains-errors lvalue
      | | `-RecoveryExpr 0x156009a98 <col:26> '<dependent type>' contains-errors lvalue
      | `-CallExpr 0x156009b80 <line:11:3, col:60> '<dependent type>' contains-errors
      |   |-DeclRefExpr 0x1560098b8 <col:3> 'int ()' Function 0x156009800 'zend_hash_exists' 'int ()'
      |   |-UnaryOperator 0x156009b68 <col:20, col:39> '<dependent type>' contains-errors prefix '&' cannot overflow
      |   | `-CXXDependentScopeMemberExpr 0x156009b20 <col:21, col:39> '<dependent type>' contains-errors lvalue ->function_table
      |   |   `-CallExpr 0x156009af8 <col:21, col:36> '<dependent type>' contains-errors
      |   |     |-DeclRefExpr 0x1560098d8 <col:21> 'int ()' Function 0x155928678 'Z_OBJCE_PP' 'int ()'
      |   |     `-RecoveryExpr 0x156009ad8 <col:32> '<dependent type>' contains-errors lvalue
      |   `-StringLiteral 0x1560099e0 <col:55> 'char[4]' lvalue "STR"
      `-CompoundStmt 0x15600a290 <col:64, line:15:2>
        |-CallExpr 0x156009d60 <line:12:3, col:20> '<dependent type>' contains-errors
        | |-DeclRefExpr 0x156009cb0 <col:3> 'int ()' Function 0x156009bf8 'INIT_PZVAL' 'int ()'
        | `-UnaryOperator 0x156009d48 <col:14, col:15> '<dependent type>' contains-errors prefix '&' cannot overflow
        |   `-RecoveryExpr 0x156009d28 <col:15> '<dependent type>' contains-errors lvalue
        `-BinaryOperator 0x15600a010 <line:13:3, col:36> 'int' contains-errors ','
          |-BinaryOperator 0x156009ff0 <col:3, col:33> '<dependent type>' contains-errors '-'
          | |-CallExpr 0x156009fc0 <col:3, col:29> '<dependent type>' contains-errors
          | | |-DeclRefExpr 0x156009e68 <col:3> 'int ()' Function 0x156009db0 'ZVAL_STRINGL' 'int ()'
          | | |-UnaryOperator 0x156009fa8 <col:16, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow
          | | | `-RecoveryExpr 0x156009f88 <col:17> '<dependent type>' contains-errors lvalue
          | | `-StringLiteral 0x156009eb8 <col:24> 'char[4]' lvalue "STR"
          | `-IntegerLiteral 0x156009f08 <col:33> 'int' 1
          `-IntegerLiteral 0x156009f48 <col:36> 'int' 0
