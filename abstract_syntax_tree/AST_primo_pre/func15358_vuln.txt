`-FunctionDecl 0x13c027618  line:1:13 invalid freelist_state_initialize 'int (union freelist_init_state *, struct kmem_cache *, unsigned int)' static
  |-ParmVarDecl 0x13c00e268 <col:39, col:66> col:66 used state 'union freelist_init_state *'
  |-ParmVarDecl 0x13c027458 <line:2:5, col:24> col:24 used cachep 'struct kmem_cache *'
  |-ParmVarDecl 0x13c0274d8 <line:3:5, col:18> col:18 used count 'unsigned int'
  `-CompoundStmt 0x13c027fb8 <line:4:1, line:23:1>
    |-DeclStmt 0x13c027758 <line:6:2, col:19>
    | `-VarDecl 0x13c0276f0 <col:2, col:15> col:15 used rand 'unsigned int'
    |-BinaryOperator 0x13c027990 <line:9:2, col:24> 'unsigned int' '='
    | |-DeclRefExpr 0x13c027770 <col:2> 'unsigned int' lvalue Var 0x13c0276f0 'rand' 'unsigned int'
    | `-ImplicitCastExpr 0x13c027978 <col:9, col:24> 'unsigned int' <IntegralCast>
    |   `-CallExpr 0x13c027958 <col:9, col:24> 'int'
    |     `-ImplicitCastExpr 0x13c027940 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x13c0278f0 <col:9> 'int ()' Function 0x13c027838 'get_random_int' 'int ()'
    |-IfStmt 0x13c027f40 <line:12:2, line:21:2> has_else
    | |-UnaryOperator 0x13c027a28 <line:12:6, col:15> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x13c027a10 <col:7, col:15> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x13c0279e8 <col:7, col:15> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x13c0279b0 <col:7> 'struct kmem_cache *' lvalue ParmVar 0x13c027458 'cachep' 'struct kmem_cache *'
    | |-CompoundStmt 0x13c027c20 <col:27, line:15:2>
    | | `-CallExpr 0x13c027bd8 <line:13:3, col:45> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x13c027b20 <col:3> 'int ()' Function 0x13c027a68 'prandom_seed_state' 'int ()'
    | |   |-UnaryOperator 0x13c027ba0 <col:22, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |   | `-RecoveryExpr 0x13c027b78 <col:23, col:30> '<dependent type>' contains-errors lvalue
    | |   |   `-DeclRefExpr 0x13c027b40 <col:23> 'union freelist_init_state *' lvalue ParmVar 0x13c00e268 'state' 'union freelist_init_state *'
    | |   `-DeclRefExpr 0x13c027bb8 <col:41> 'unsigned int' lvalue Var 0x13c0276f0 'rand' 'unsigned int'
    | `-CompoundStmt 0x13c027f10 <line:15:9, line:21:2>
    |   |-BinaryOperator 0x13c027cf8 <line:16:3, col:25> '<dependent type>' contains-errors '='
    |   | |-RecoveryExpr 0x13c027c70 <col:3, col:10> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x13c027c38 <col:3> 'union freelist_init_state *' lvalue ParmVar 0x13c00e268 'state' 'union freelist_init_state *'
    |   | `-RecoveryExpr 0x13c027cd0 <col:17, col:25> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x13c027c98 <col:17> 'struct kmem_cache *' lvalue ParmVar 0x13c027458 'cachep' 'struct kmem_cache *'
    |   |-BinaryOperator 0x13c027d98 <line:17:3, col:18> '<dependent type>' contains-errors '='
    |   | |-RecoveryExpr 0x13c027d50 <col:3, col:10> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x13c027d18 <col:3> 'union freelist_init_state *' lvalue ParmVar 0x13c00e268 'state' 'union freelist_init_state *'
    |   | `-DeclRefExpr 0x13c027d78 <col:18> 'unsigned int' lvalue ParmVar 0x13c0274d8 'count' 'unsigned int'
    |   |-BinaryOperator 0x13c027e38 <line:18:3, col:16> '<dependent type>' contains-errors '='
    |   | |-RecoveryExpr 0x13c027df0 <col:3, col:10> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x13c027db8 <col:3> 'union freelist_init_state *' lvalue ParmVar 0x13c00e268 'state' 'union freelist_init_state *'
    |   | `-IntegerLiteral 0x13c027e18 <col:16> 'int' 0
    |   `-BinaryOperator 0x13c027ed8 <line:19:3, col:17> '<dependent type>' contains-errors '='
    |     |-RecoveryExpr 0x13c027e90 <col:3, col:10> '<dependent type>' contains-errors lvalue
    |     | `-DeclRefExpr 0x13c027e58 <col:3> 'union freelist_init_state *' lvalue ParmVar 0x13c00e268 'state' 'union freelist_init_state *'
    |     `-DeclRefExpr 0x13c027eb8 <col:17> 'unsigned int' lvalue Var 0x13c0276f0 'rand' 'unsigned int'
    `-ReturnStmt 0x13c027fa8 <line:22:2, col:9>
      `-RecoveryExpr 0x13c027f88 <col:9> '<dependent type>' contains-errors lvalue
