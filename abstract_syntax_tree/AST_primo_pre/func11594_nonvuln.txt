`-FunctionDecl 0x1280959c8  line:1:1 invalid str_independent 'int (int)'
  |-ParmVarDecl 0x1280958f0 <col:17, col:23> col:23 invalid str 'int'
  `-CompoundStmt 0x128095fb0 <line:2:1, line:7:1>
    |-CallExpr 0x128095c10 <line:3:5, col:23> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x128095bd0 <col:5> 'int ()' Function 0x128095b18 'str_modifiable' 'int ()'
    | `-RecoveryExpr 0x128095bf0 <col:20> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x128095dc8 <line:4:5, col:36>
    | |-UnaryOperator 0x128095d80 <col:9, col:26> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-CallExpr 0x128095d58 <col:10, col:26> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x128095d18 <col:10> 'int ()' Function 0x128095c60 'STR_SHARED_P' 'int ()'
    | |   `-RecoveryExpr 0x128095d38 <col:23> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x128095db8 <col:29, col:36>
    |   `-IntegerLiteral 0x128095d98 <col:36> 'int' 1
    |-IfStmt 0x128095f60 <line:5:5, col:34>
    | |-CallExpr 0x128095f08 <col:9, col:24> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x128095ec8 <col:9> 'int ()' Function 0x128095e10 'STR_EMBED_P' 'int ()'
    | | `-RecoveryExpr 0x128095ee8 <col:21> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x128095f50 <col:27, col:34>
    |   `-IntegerLiteral 0x128095f30 <col:34> 'int' 1
    `-ReturnStmt 0x128095fa0 <line:6:5, col:12>
      `-IntegerLiteral 0x128095f80 <col:12> 'int' 0
