`-FunctionDecl 0x12900df18  line:1:22 invalid GetTemporary 'int *(int *, const int *, int)' inline
  |-ParmVarDecl 0x12900dd28 <col:35, col:50> col:50 invalid context 'int *'
  |-ParmVarDecl 0x12900dda8 <line:2:35, col:53> col:53 invalid node 'const int *'
  |-ParmVarDecl 0x12900de28 <col:59, col:63> col:63 used index 'int'
  `-CompoundStmt 0x12900e1d8 <col:70, line:4:1>
    `-ReturnStmt 0x12900e1c8 <line:3:3, col:58>
      `-UnaryOperator 0x12900e1b0 <col:10, col:58> '<dependent type>' contains-errors prefix '&' cannot overflow
        `-ArraySubscriptExpr 0x12900e190 <col:11, col:58> '<dependent type>' contains-errors lvalue
          |-ImplicitCastExpr 0x12900e160 <col:11, col:20> '<dependent type>' contains-errors <LValueToRValue>
          | `-CXXDependentScopeMemberExpr 0x12900dff8 <col:11, col:20> '<dependent type>' contains-errors lvalue ->tensors
          |   `-RecoveryExpr 0x12900dfd8 <col:11> '<dependent type>' contains-errors lvalue
          `-ImplicitCastExpr 0x12900e178 <col:28, col:57> '<dependent type>' contains-errors <LValueToRValue>
            `-ArraySubscriptExpr 0x12900e140 <col:28, col:57> '<dependent type>' contains-errors lvalue
              |-ImplicitCastExpr 0x12900e110 <col:28, col:47> '<dependent type>' contains-errors <LValueToRValue>
              | `-CXXDependentScopeMemberExpr 0x12900e0a8 <col:28, col:47> '<dependent type>' contains-errors lvalue ->data
              |   `-CXXDependentScopeMemberExpr 0x12900e060 <col:28, col:34> '<dependent type>' contains-errors lvalue ->temporaries
              |     `-RecoveryExpr 0x12900e040 <col:28> '<dependent type>' contains-errors lvalue
              `-ImplicitCastExpr 0x12900e128 <col:52> 'int' <LValueToRValue>
                `-DeclRefExpr 0x12900e0f0 <col:52> 'int' lvalue ParmVar 0x12900de28 'index' 'int'
