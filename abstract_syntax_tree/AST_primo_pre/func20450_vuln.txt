`-FunctionDecl 0x12800e038  line:1:1 invalid qf_jump_edit_buffer 'int (int *, int *, int, int, int *)'
  |-ParmVarDecl 0x12800dd28 <line:2:2, col:13> col:13 invalid qi 'int *'
  |-ParmVarDecl 0x12800dda8 <line:3:2, col:12> col:12 invalid qf_ptr 'int *'
  |-ParmVarDecl 0x12800de28 <line:4:2, col:7> col:7 used forceit 'int'
  |-ParmVarDecl 0x12800dea8 <line:5:2, col:7> col:7 used prev_winid 'int'
  |-ParmVarDecl 0x12800df28 <line:6:2, col:8> col:8 used opened_window 'int *'
  `-CompoundStmt 0x130019ea8 <line:7:1, line:67:1>
    |-DeclStmt 0x128027448 <line:9:5, col:47>
    | `-VarDecl 0x12800e300 <col:5, col:33> col:10 used old_changedtick 'int' cinit
    |   `-CXXDependentScopeMemberExpr 0x128027400 <col:28, col:33> '<dependent type>' contains-errors lvalue ->qf_changedtick
    |     `-RecoveryExpr 0x12800e3c8 <col:28> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x128027518 <line:11:5, col:21>
    | `-VarDecl 0x128027478 <col:5, col:19> col:10 used retval 'int' cinit
    |   `-RecoveryExpr 0x1280274f8 <col:19> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x128027618 <line:12:5, col:41>
    | `-VarDecl 0x128027548 <col:5, col:31> col:10 used old_qf_curlist 'int' cinit
    |   `-CXXDependentScopeMemberExpr 0x1280275d0 <col:27, col:31> '<dependent type>' contains-errors lvalue ->qf_curlist
    |     `-RecoveryExpr 0x1280275b0 <col:27> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x128027778 <line:13:5, col:32>
    | `-VarDecl 0x128027648 <col:5, col:27> col:10 used save_qfid 'int' cinit
    |   `-CXXDependentScopeMemberExpr 0x128027730 <col:22, col:27> '<dependent type>' contains-errors lvalue ->qf_id
    |     `-RecoveryExpr 0x128027710 <col:22> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x128028110 <line:15:5, line:30:2> has_else
    | |-BinaryOperator 0x128027818 <line:15:9, col:28> 'int' contains-errors '=='
    | | |-CXXDependentScopeMemberExpr 0x1280277b0 <col:9, col:17> '<dependent type>' contains-errors lvalue ->qf_type
    | | | `-RecoveryExpr 0x128027790 <col:9> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x1280277f8 <col:28> 'int' 1
    | |-CompoundStmt 0x128027f48 <line:16:5, line:28:5>
    | | `-IfStmt 0x128027bf0 <line:19:2, line:23:2>
    | |   |-UnaryOperator 0x128027a08 <line:19:6, col:34> '<dependent type>' contains-errors prefix '!' cannot overflow
    | |   | `-CallExpr 0x1280279d8 <col:7, col:34> '<dependent type>' contains-errors
    | |   |   |-DeclRefExpr 0x128027918 <col:7> 'int ()' Function 0x128027860 'can_abandon' 'int ()'
    | |   |   |-RecoveryExpr 0x1280279b8 <col:19> '<dependent type>' contains-errors lvalue
    | |   |   `-DeclRefExpr 0x128027950 <col:27> 'int' lvalue ParmVar 0x12800de28 'forceit' 'int'
    | |   `-CompoundStmt 0x128027bd0 <line:20:2, line:23:2>
    | |     |-CallExpr 0x128027b68 <line:21:6, col:23> 'int'
    | |     | `-ImplicitCastExpr 0x128027b50 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | |     |   `-DeclRefExpr 0x128027b00 <col:6> 'int ()' Function 0x128027a48 'no_write_message' 'int ()'
    | |     `-ReturnStmt 0x128027bc0 <line:22:6, col:13>
    | |       `-RecoveryExpr 0x128027ba0 <col:13> '<dependent type>' contains-errors lvalue
    | `-NullStmt 0x128028108 <line:30:2>
    |-IfStmt 0x1300199b8 <line:35:5, line:45:5>
    | |-RecoveryExpr 0x128028140 <line:35:9, col:21> '_Bool' contains-errors
    | `-CompoundStmt 0x1300199a0 <line:36:5, line:45:5>
    |   `-IfStmt 0x130019980 <line:39:2, line:44:2>
    |     |-RecoveryExpr 0x1280282f8 <line:39:6, col:39> '_Bool' contains-errors
    |     `-CompoundStmt 0x130019970 <line:40:2, line:44:2>
    |-IfStmt 0x130019b68 <line:47:5, line:51:5>
    | |-RecoveryExpr 0x130019af8 <line:47:9, col:67> '_Bool' contains-errors
    | `-CompoundStmt 0x130019b58 <line:48:5, line:51:5>
    |-IfStmt 0x130019e40 <line:55:5, line:64:5>
    | |-RecoveryExpr 0x130019d70 <line:55:9, line:57:41> '_Bool' contains-errors
    | `-CompoundStmt 0x130019e30 <line:58:5, line:64:5>
    `-ReturnStmt 0x130019e98 <line:66:5, col:12>
      `-ImplicitCastExpr 0x130019e80 <col:12> 'int' contains-errors <LValueToRValue>
        `-DeclRefExpr 0x130019e60 <col:12> 'int' contains-errors lvalue Var 0x128027478 'retval' 'int'
