`-FunctionDecl 0x13e00e358  line:1:5 filemap_write_and_wait 'int (struct address_space *)'
  |-ParmVarDecl 0x13e00e248 <col:28, col:50> col:50 used mapping 'struct address_space *'
  `-CompoundStmt 0x13e026e50 <line:2:1, line:15:1>
    |-DeclStmt 0x13e0266f0 <line:3:2, col:13>
    | `-VarDecl 0x13e026668 <col:2, col:12> col:6 used err 'int' cinit
    |   `-IntegerLiteral 0x13e0266d0 <col:12> 'int' 0
    |-IfStmt 0x13e026de8 <line:5:2, line:13:2>
    | |-RecoveryExpr 0x13e026740 <line:5:6, col:15> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x13e026708 <col:6> 'struct address_space *' lvalue ParmVar 0x13e00e248 'mapping' 'struct address_space *'
    | `-CompoundStmt 0x13e026dc8 <col:24, line:13:2>
    |   |-BinaryOperator 0x13e026978 <line:6:3, col:35> 'int' '='
    |   | |-DeclRefExpr 0x13e026768 <col:3> 'int' lvalue Var 0x13e026668 'err' 'int'
    |   | `-CallExpr 0x13e026938 <col:9, col:35> 'int'
    |   |   |-ImplicitCastExpr 0x13e026920 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   |   | `-DeclRefExpr 0x13e0268b0 <col:9> 'int ()' Function 0x13e0267f8 'filemap_fdatawrite' 'int ()'
    |   |   `-ImplicitCastExpr 0x13e026960 <col:28> 'struct address_space *' <LValueToRValue>
    |   |     `-DeclRefExpr 0x13e0268d0 <col:28> 'struct address_space *' lvalue ParmVar 0x13e00e248 'mapping' 'struct address_space *'
    |   `-IfStmt 0x13e026da8 <line:8:3, line:12:3>
    |     |-BinaryOperator 0x13e026a70 <line:8:7, col:15> 'int' contains-errors '!='
    |     | |-DeclRefExpr 0x13e026998 <col:7> 'int' lvalue Var 0x13e026668 'err' 'int'
    |     | `-UnaryOperator 0x13e026a58 <col:14, col:15> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     |   `-ImplicitCastExpr 0x13e026a40 <col:15> '<dependent type>' contains-errors <LValueToRValue>
    |     |     `-RecoveryExpr 0x13e026a20 <col:15> '<dependent type>' contains-errors lvalue
    |     `-CompoundStmt 0x13e026d88 <col:20, line:12:3>
    |       |-DeclStmt 0x13e026c88 <line:9:4, col:41>
    |       | `-VarDecl 0x13e026aa8 <col:4, col:40> col:8 used err2 'int' cinit
    |       |   `-CallExpr 0x13e026c48 <col:15, col:40> 'int'
    |       |     |-ImplicitCastExpr 0x13e026c30 <col:15> 'int (*)()' <FunctionToPointerDecay>
    |       |     | `-DeclRefExpr 0x13e026bf0 <col:15> 'int ()' Function 0x13e026b38 'filemap_fdatawait' 'int ()'
    |       |     `-ImplicitCastExpr 0x13e026c70 <col:33> 'struct address_space *' <LValueToRValue>
    |       |       `-DeclRefExpr 0x13e026c10 <col:33> 'struct address_space *' lvalue ParmVar 0x13e00e248 'mapping' 'struct address_space *'
    |       `-IfStmt 0x13e026d68 <line:10:4, line:11:11>
    |         |-UnaryOperator 0x13e026cd8 <line:10:8, col:9> 'int' prefix '!' cannot overflow
    |         | `-ImplicitCastExpr 0x13e026cc0 <col:9> 'int' <LValueToRValue>
    |         |   `-DeclRefExpr 0x13e026ca0 <col:9> 'int' lvalue Var 0x13e026668 'err' 'int'
    |         `-BinaryOperator 0x13e026d48 <line:11:5, col:11> 'int' '='
    |           |-DeclRefExpr 0x13e026cf0 <col:5> 'int' lvalue Var 0x13e026668 'err' 'int'
    |           `-ImplicitCastExpr 0x13e026d30 <col:11> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x13e026d10 <col:11> 'int' lvalue Var 0x13e026aa8 'err2' 'int'
    `-ReturnStmt 0x13e026e40 <line:14:2, col:9>
      `-ImplicitCastExpr 0x13e026e28 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x13e026e08 <col:9> 'int' lvalue Var 0x13e026668 'err' 'int'
