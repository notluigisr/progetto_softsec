`-FunctionDecl 0x141857780  line:1:13 invalid report_filter_result 'void (enum logcode, const char *, const int *, int, const char *)' static
  |-ParmVarDecl 0x1418337f8 <col:34, col:47> col:47 invalid code 'enum logcode'
  |-ParmVarDecl 0x141833878 <col:53, col:65> col:65 used name 'const char *'
  |-ParmVarDecl 0x141833910 <line:2:6, col:25> col:25 invalid ent 'const int *'
  |-ParmVarDecl 0x141833990 <line:3:6, col:10> col:10 used name_flags 'int'
  |-ParmVarDecl 0x141857618 <col:22, col:34> col:34 used type 'const char *'
  `-CompoundStmt 0x1418596a0 <line:4:1, line:19:1>
    `-IfStmt 0x141859680 <line:7:2, line:18:2>
      |-CallExpr 0x141857a58 <line:7:6, col:25> '<dependent type>' contains-errors
      | |-DeclRefExpr 0x1418579b0 <col:6> 'int ()' Function 0x1418578f8 'DEBUG_GTE' 'int ()'
      | |-RecoveryExpr 0x141857a38 <col:16> '<dependent type>' contains-errors lvalue
      | `-IntegerLiteral 0x1418579e8 <col:24> 'int' 1
      `-CompoundStmt 0x141859658 <col:28, line:18:2>
        |-DeclStmt 0x141857e08 <line:8:3, line:9:20>
        | `-VarDecl 0x141857bc8 <line:8:3, line:9:19> line:8:16 used actions 'char *[2][2]' static cinit
        |   `-InitListExpr 0x141857d30 <line:9:9, col:19> 'char *[2][2]'
        |     |-array_filler: ImplicitValueInitExpr 0x141857df8 <<invalid sloc>> 'char *[2]'
        |     `-InitListExpr 0x141857d80 <col:11, col:17> 'char *[2]'
        |       |-array_filler: ImplicitValueInitExpr 0x141857de0 <<invalid sloc>> 'char *'
        |       `-ImplicitCastExpr 0x141857dc0 <col:12> 'char *' <ArrayToPointerDecay>
        |         `-StringLiteral 0x141857c70 <col:12> 'char[4]' lvalue "STR"
        |-DeclStmt 0x141858020 <line:10:3, col:29>
        | `-VarDecl 0x141857e38 <col:3, col:28> col:15 used w 'const char *' cinit
        |   `-ImplicitCastExpr 0x141858008 <col:19, col:28> 'const char *' <IntegralToPointer>
        |     `-CallExpr 0x141857fe8 <col:19, col:28> 'int'
        |       `-ImplicitCastExpr 0x141857fd0 <col:19> 'int (*)()' <FunctionToPointerDecay>
        |         `-DeclRefExpr 0x141857f80 <col:19> 'int ()' Function 0x141857ec8 'who_am_i' 'int ()'
        `-DeclStmt 0x141858308 <line:11:3, line:13:17>
          `-VarDecl 0x141858050 <line:11:3, line:13:12> line:11:15 used t 'const char *' cinit
            `-ConditionalOperator 0x1418582d8 <col:19, line:13:12> '<dependent type>' contains-errors
              |-BinaryOperator 0x141858248 <line:11:19, col:32> '<dependent type>' contains-errors '&'
              | |-DeclRefExpr 0x1418580b8 <col:19> 'int' lvalue ParmVar 0x141833990 'name_flags' 'int'
              | `-RecoveryExpr 0x141858228 <col:32> '<dependent type>' contains-errors lvalue
              |-StringLiteral 0x141858110 <col:48> 'char[4]' lvalue "STR"
              `-ConditionalOperator 0x1418582a8 <line:12:12, line:13:12> '<dependent type>' contains-errors
                |-BinaryOperator 0x141858288 <line:12:12, col:25> '<dependent type>' contains-errors '&'
                | |-DeclRefExpr 0x141858130 <col:12> 'int' lvalue ParmVar 0x141833990 'name_flags' 'int'
                | `-RecoveryExpr 0x141858268 <col:25> '<dependent type>' contains-errors lvalue
                |-StringLiteral 0x141858188 <col:39> 'char[4]' lvalue "STR"
                `-StringLiteral 0x1418581a8 <line:13:12> 'char[4]' lvalue "STR"
