`-FunctionDecl 0x157128758  line:1:12 referenced etm_event_init 'int (struct perf_event *)' static
  |-ParmVarDecl 0x157128648 <col:27, col:46> col:46 used event 'struct perf_event *'
  `-CompoundStmt 0x157141238 <line:2:1, line:17:1>
    |-DeclStmt 0x157140af0 <line:3:2, col:13>
    | `-VarDecl 0x157140a68 <col:2, col:12> col:6 used ret 'int' cinit
    |   `-IntegerLiteral 0x157140ad0 <col:12> 'int' 0
    |-IfStmt 0x157140e50 <line:5:2, line:8:2>
    | |-BinaryOperator 0x157140cb0 <line:5:6, col:34> 'int' contains-errors '!='
    | | |-CXXDependentScopeMemberExpr 0x157140b68 <col:6, col:18> '<dependent type>' contains-errors lvalue .type
    | | | `-RecoveryExpr 0x157140b40 <col:6, col:13> '<dependent type>' contains-errors lvalue
    | | |   `-DeclRefExpr 0x157140b08 <col:6> 'struct perf_event *' lvalue ParmVar 0x157128648 'event' 'struct perf_event *'
    | | `-CXXDependentScopeMemberExpr 0x157140c68 <col:26, col:34> '<dependent type>' contains-errors lvalue .type
    | |   `-RecoveryExpr 0x157140c48 <col:26> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x157140e30 <col:40, line:8:2>
    |   |-BinaryOperator 0x157140da8 <line:6:3, col:10> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x157140cd0 <col:3> 'int' lvalue Var 0x157140a68 'ret' 'int'
    |   | `-UnaryOperator 0x157140d90 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |   `-ImplicitCastExpr 0x157140d78 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    |   |     `-RecoveryExpr 0x157140d58 <col:10> '<dependent type>' contains-errors lvalue
    |   `-GotoStmt 0x157140e18 <line:7:3, col:8> 'out' 0x157140dc8
    |-BinaryOperator 0x157141068 <line:10:2, col:36> 'int' '='
    | |-DeclRefExpr 0x157140e70 <col:2> 'int' lvalue Var 0x157140a68 'ret' 'int'
    | `-CallExpr 0x157141028 <col:8, col:36> 'int'
    |   |-ImplicitCastExpr 0x157141010 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x157140fa0 <col:8> 'int ()' Function 0x157140ee8 'etm_addr_filters_alloc' 'int ()'
    |   `-ImplicitCastExpr 0x157141050 <col:31> 'struct perf_event *' <LValueToRValue>
    |     `-DeclRefExpr 0x157140fc0 <col:31> 'struct perf_event *' lvalue ParmVar 0x157128648 'event' 'struct perf_event *'
    |-IfStmt 0x1571410d8 <line:11:2, line:12:8>
    | |-ImplicitCastExpr 0x1571410a8 <line:11:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x157141088 <col:6> 'int' lvalue Var 0x157140a68 'ret' 'int'
    | `-GotoStmt 0x1571410c0 <line:12:3, col:8> 'out' 0x157140dc8
    |-BinaryOperator 0x1571411b0 <line:14:2, col:19> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x157141130 <col:2, col:9> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x1571410f8 <col:2> 'struct perf_event *' lvalue ParmVar 0x157128648 'event' 'struct perf_event *'
    | `-DeclRefExpr 0x157141190 <col:19> 'int (struct perf_event *)' Function 0x157128758 'etm_event_init' 'int (struct perf_event *)'
    `-LabelStmt 0x157141218 <line:15:1, line:16:9> 'out'
      `-ReturnStmt 0x157141208 <col:2, col:9>
        `-ImplicitCastExpr 0x1571411f0 <col:9> 'int' <LValueToRValue>
          `-DeclRefExpr 0x1571411d0 <col:9> 'int' lvalue Var 0x157140a68 'ret' 'int'
