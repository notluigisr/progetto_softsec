`-FunctionDecl 0x11f80e4c8  line:1:1 move 'int (int, int, int)'
  |-ParmVarDecl 0x11f80e2d8 <col:6, col:10> col:10 used x 'int'
  |-ParmVarDecl 0x11f80e358 <col:13, col:17> col:17 used y 'int'
  |-ParmVarDecl 0x11f80e3d8 <col:20, col:24> col:24 used marg_clip 'int'
  `-CompoundStmt 0x11f829840 <line:2:1, line:28:1>
    |-IfStmt 0x11f8294f0 <line:5:3, line:14:3>
    | |-ImplicitCastExpr 0x11f80e698 <line:5:7> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x11f80e678 <col:7> 'int' lvalue ParmVar 0x11f80e3d8 'marg_clip' 'int'
    | `-CompoundStmt 0x11f8294c0 <col:18, line:14:3>
    |   |-IfStmt 0x11f828a20 <line:6:5, line:7:16>
    |   | |-RecoveryExpr 0x11f80e8c8 <line:6:9, col:66> '_Bool' contains-errors
    |   | `-BinaryOperator 0x11f828a00 <line:7:7, col:16> 'int' contains-errors '='
    |   |   |-DeclRefExpr 0x11f80e8e8 <col:7> 'int' lvalue ParmVar 0x11f80e358 'y' 'int'
    |   |   `-CXXDependentScopeMemberExpr 0x11f80e9a8 <col:11, col:16> '<dependent type>' contains-errors lvalue .marg_top
    |   |     `-RecoveryExpr 0x11f80e988 <col:11> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x11f828da0 <line:8:5, line:9:16>
    |   | |-RecoveryExpr 0x11f828c58 <line:8:9, col:66> '_Bool' contains-errors
    |   | `-BinaryOperator 0x11f828d80 <line:9:7, col:16> 'int' contains-errors '='
    |   |   |-DeclRefExpr 0x11f828c78 <col:7> 'int' lvalue ParmVar 0x11f80e358 'y' 'int'
    |   |   `-CXXDependentScopeMemberExpr 0x11f828d38 <col:11, col:16> '<dependent type>' contains-errors lvalue .marg_bot
    |   |     `-RecoveryExpr 0x11f828d18 <col:11> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x11f829120 <line:10:5, line:11:16>
    |   | |-RecoveryExpr 0x11f828fd8 <line:10:9, col:67> '_Bool' contains-errors
    |   | `-BinaryOperator 0x11f829100 <line:11:7, col:16> 'int' contains-errors '='
    |   |   |-DeclRefExpr 0x11f828ff8 <col:7> 'int' lvalue ParmVar 0x11f80e2d8 'x' 'int'
    |   |   `-CXXDependentScopeMemberExpr 0x11f8290b8 <col:11, col:16> '<dependent type>' contains-errors lvalue .marg_left
    |   |     `-RecoveryExpr 0x11f829098 <col:11> '<dependent type>' contains-errors lvalue
    |   `-IfStmt 0x11f8294a0 <line:12:5, line:13:16>
    |     |-RecoveryExpr 0x11f829358 <line:12:9, col:68> '_Bool' contains-errors
    |     `-BinaryOperator 0x11f829480 <line:13:7, col:16> 'int' contains-errors '='
    |       |-DeclRefExpr 0x11f829378 <col:7> 'int' lvalue ParmVar 0x11f80e2d8 'x' 'int'
    |       `-CXXDependentScopeMemberExpr 0x11f829438 <col:11, col:16> '<dependent type>' contains-errors lvalue .marg_right
    |         `-RecoveryExpr 0x11f829418 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x11f8295e8 <line:16:3, line:17:9>
    | |-BinaryOperator 0x11f829568 <line:16:7, col:11> 'int' '<'
    | | |-ImplicitCastExpr 0x11f829550 <col:7> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x11f829510 <col:7> 'int' lvalue ParmVar 0x11f80e2d8 'x' 'int'
    | | `-IntegerLiteral 0x11f829530 <col:11> 'int' 0
    | `-BinaryOperator 0x11f8295c8 <line:17:5, col:9> 'int' '='
    |   |-DeclRefExpr 0x11f829588 <col:5> 'int' lvalue ParmVar 0x11f80e2d8 'x' 'int'
    |   `-IntegerLiteral 0x11f8295a8 <col:9> 'int' 0
    `-IfStmt 0x11f829760 <line:20:3, line:21:9>
      |-BinaryOperator 0x11f8296e0 <line:20:7, col:11> 'int' '<'
      | |-ImplicitCastExpr 0x11f8296c8 <col:7> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x11f829688 <col:7> 'int' lvalue ParmVar 0x11f80e358 'y' 'int'
      | `-IntegerLiteral 0x11f8296a8 <col:11> 'int' 0
      `-BinaryOperator 0x11f829740 <line:21:5, col:9> 'int' '='
        |-DeclRefExpr 0x11f829700 <col:5> 'int' lvalue ParmVar 0x11f80e358 'y' 'int'
        `-IntegerLiteral 0x11f829720 <col:9> 'int' 0
