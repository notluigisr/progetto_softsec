`-FunctionDecl 0x150940a00  line:1:12 wcd9335_codec_find_amic_input 'int (struct snd_soc_component *, int)' static
  |-ParmVarDecl 0x150928648 <col:42, col:68> col:68 used comp 'struct snd_soc_component *'
  |-ParmVarDecl 0x1509286c8 <line:2:7, col:11> col:11 used adc_mux_n 'int'
  `-CompoundStmt 0x150942f98 <line:3:1, line:25:1>
    |-DeclStmt 0x150940ca0 <line:4:2, col:24>
    | |-VarDecl 0x150940b18 <col:2, col:6> col:6 used mux_sel 'int'
    | |-VarDecl 0x150940b98 <col:2, col:15> col:15 used reg 'int'
    | `-VarDecl 0x150940c18 <col:2, col:20> col:20 used mreg 'int'
    |-IfStmt 0x150940f98 <line:6:2, line:8:10>
    | |-BinaryOperator 0x150940f48 <line:6:6, line:7:19> 'int' contains-errors '||'
    | | |-BinaryOperator 0x150940ee8 <line:6:6, col:35> 'int' contains-errors '||'
    | | | |-BinaryOperator 0x150940e88 <col:6, col:18> 'int' '<'
    | | | | |-ImplicitCastExpr 0x150940e70 <col:6> 'int' <LValueToRValue>
    | | | | | `-DeclRefExpr 0x150940cb8 <col:6> 'int' lvalue ParmVar 0x1509286c8 'adc_mux_n' 'int'
    | | | | `-IntegerLiteral 0x150940cd8 <col:18> 'int' 0
    | | | `-BinaryOperator 0x150940ec8 <col:23, col:35> 'int' contains-errors '>'
    | | |   |-DeclRefExpr 0x150940d30 <col:23> 'int' lvalue ParmVar 0x1509286c8 'adc_mux_n' 'int'
    | | |   `-RecoveryExpr 0x150940ea8 <col:35> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x150940f28 <line:7:6, col:19> 'int' contains-errors '=='
    | |   |-DeclRefExpr 0x150940dc0 <col:6> 'int' lvalue ParmVar 0x1509286c8 'adc_mux_n' 'int'
    | |   `-RecoveryExpr 0x150940f08 <col:19> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x150940f88 <line:8:3, col:10>
    |   `-IntegerLiteral 0x150940f68 <col:10> 'int' 0
    |-IfStmt 0x150941950 <line:11:2, line:19:2> has_else
    | |-BinaryOperator 0x150941010 <line:11:6, col:18> 'int' '<'
    | | |-ImplicitCastExpr 0x150940ff8 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x150940fb8 <col:6> 'int' lvalue ParmVar 0x1509286c8 'adc_mux_n' 'int'
    | | `-IntegerLiteral 0x150940fd8 <col:18> 'int' 4
    | |-CompoundStmt 0x1509415d8 <col:21, line:15:2>
    | | |-BinaryOperator 0x150941198 <line:12:3, col:52> 'int' contains-errors '='
    | | | |-DeclRefExpr 0x150941030 <col:3> 'int' lvalue Var 0x150940b98 'reg' 'int'
    | | | `-BinaryOperator 0x150941178 <col:9, col:52> '<dependent type>' contains-errors '+'
    | | |   |-RecoveryExpr 0x150941120 <col:9> '<dependent type>' contains-errors lvalue
    | | |   `-BinaryOperator 0x150941158 <col:48, col:52> 'int' '*'
    | | |     |-IntegerLiteral 0x150941068 <col:48> 'int' 2
    | | |     `-ImplicitCastExpr 0x150941140 <col:52> 'int' <LValueToRValue>
    | | |       `-DeclRefExpr 0x150941088 <col:52> 'int' lvalue ParmVar 0x1509286c8 'adc_mux_n' 'int'
    | | |-BinaryOperator 0x150941320 <line:13:3, col:53> 'int' contains-errors '='
    | | | |-DeclRefExpr 0x1509411b8 <col:3> 'int' lvalue Var 0x150940c18 'mreg' 'int'
    | | | `-BinaryOperator 0x150941300 <col:10, col:53> '<dependent type>' contains-errors '+'
    | | |   |-RecoveryExpr 0x1509412a8 <col:10> '<dependent type>' contains-errors lvalue
    | | |   `-BinaryOperator 0x1509412e0 <col:49, col:53> 'int' '*'
    | | |     |-IntegerLiteral 0x1509411f0 <col:49> 'int' 2
    | | |     `-ImplicitCastExpr 0x1509412c8 <col:53> 'int' <LValueToRValue>
    | | |       `-DeclRefExpr 0x150941210 <col:53> 'int' lvalue ParmVar 0x1509286c8 'adc_mux_n' 'int'
    | | `-BinaryOperator 0x1509415b8 <line:14:3, col:51> 'int' '='
    | |   |-DeclRefExpr 0x150941340 <col:3> 'int' lvalue Var 0x150940b18 'mux_sel' 'int'
    | |   `-BinaryOperator 0x150941598 <col:13, col:51> 'int' '&'
    | |     |-CallExpr 0x150941518 <col:13, col:47> 'int'
    | |     | |-ImplicitCastExpr 0x150941500 <col:13> 'int (*)()' <FunctionToPointerDecay>
    | |     | | `-DeclRefExpr 0x150941470 <col:13> 'int ()' Function 0x1509413b8 'snd_soc_component_read32' 'int ()'
    | |     | |-ImplicitCastExpr 0x150941548 <col:38> 'struct snd_soc_component *' <LValueToRValue>
    | |     | | `-DeclRefExpr 0x150941490 <col:38> 'struct snd_soc_component *' lvalue ParmVar 0x150928648 'comp' 'struct snd_soc_component *'
    | |     | `-ImplicitCastExpr 0x150941560 <col:44> 'int' <LValueToRValue>
    | |     |   `-DeclRefExpr 0x1509414b0 <col:44> 'int' lvalue Var 0x150940b98 'reg' 'int'
    | |     `-IntegerLiteral 0x150941578 <col:51> 'int' 3
    | `-CompoundStmt 0x150941928 <line:15:9, line:19:2>
    |   |-BinaryOperator 0x150941738 <line:16:3, col:60> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x150941600 <col:3> 'int' lvalue Var 0x150940b98 'reg' 'int'
    |   | `-BinaryOperator 0x150941718 <col:9, col:60> '<dependent type>' contains-errors '-'
    |   |   |-BinaryOperator 0x1509416f8 <col:9, col:48> '<dependent type>' contains-errors '+'
    |   |   | |-RecoveryExpr 0x1509416d8 <col:9> '<dependent type>' contains-errors lvalue
    |   |   | `-DeclRefExpr 0x150941638 <col:48> 'int' lvalue ParmVar 0x1509286c8 'adc_mux_n' 'int'
    |   |   `-IntegerLiteral 0x150941678 <col:60> 'int' 4
    |   |-BinaryOperator 0x1509417b0 <line:17:3, col:10> 'int' '='
    |   | |-DeclRefExpr 0x150941758 <col:3> 'int' lvalue Var 0x150940c18 'mreg' 'int'
    |   | `-ImplicitCastExpr 0x150941798 <col:10> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x150941778 <col:10> 'int' lvalue Var 0x150940b98 'reg' 'int'
    |   `-BinaryOperator 0x150941908 <line:18:3, col:52> 'int' '='
    |     |-DeclRefExpr 0x1509417d0 <col:3> 'int' lvalue Var 0x150940b18 'mux_sel' 'int'
    |     `-BinaryOperator 0x1509418e8 <col:13, col:52> 'int' '>>'
    |       |-CallExpr 0x150941868 <col:13, col:47> 'int'
    |       | |-ImplicitCastExpr 0x150941850 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |       | | `-DeclRefExpr 0x1509417f0 <col:13> 'int ()' Function 0x1509413b8 'snd_soc_component_read32' 'int ()'
    |       | |-ImplicitCastExpr 0x150941898 <col:38> 'struct snd_soc_component *' <LValueToRValue>
    |       | | `-DeclRefExpr 0x150941810 <col:38> 'struct snd_soc_component *' lvalue ParmVar 0x150928648 'comp' 'struct snd_soc_component *'
    |       | `-ImplicitCastExpr 0x1509418b0 <col:44> 'int' <LValueToRValue>
    |       |   `-DeclRefExpr 0x150941830 <col:44> 'int' lvalue Var 0x150940b98 'reg' 'int'
    |       `-IntegerLiteral 0x1509418c8 <col:52> 'int' 6
    |-IfStmt 0x150942e50 <line:21:2, line:22:10>
    | |-BinaryOperator 0x150942e00 <line:21:6, col:17> 'int' contains-errors '!='
    | | |-DeclRefExpr 0x150941980 <col:6> 'int' lvalue Var 0x150940b18 'mux_sel' 'int'
    | | `-RecoveryExpr 0x1509419d8 <col:17> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x150942e40 <line:22:3, col:10>
    |   `-IntegerLiteral 0x150942e20 <col:10> 'int' 0
    `-ReturnStmt 0x150942f88 <line:24:2, col:48>
      `-BinaryOperator 0x150942f68 <col:9, col:48> 'int' '&'
        |-CallExpr 0x150942ee8 <col:9, col:44> 'int'
        | |-ImplicitCastExpr 0x150942ed0 <col:9> 'int (*)()' <FunctionToPointerDecay>
        | | `-DeclRefExpr 0x150942e70 <col:9> 'int ()' Function 0x1509413b8 'snd_soc_component_read32' 'int ()'
        | |-ImplicitCastExpr 0x150942f18 <col:34> 'struct snd_soc_component *' <LValueToRValue>
        | | `-DeclRefExpr 0x150942e90 <col:34> 'struct snd_soc_component *' lvalue ParmVar 0x150928648 'comp' 'struct snd_soc_component *'
        | `-ImplicitCastExpr 0x150942f30 <col:40> 'int' <LValueToRValue>
        |   `-DeclRefExpr 0x150942eb0 <col:40> 'int' lvalue Var 0x150940c18 'mreg' 'int'
        `-IntegerLiteral 0x150942f48 <col:48> 'int' 7
