`-FunctionDecl 0x12600dda8  line:1:1 PHP_FUNCTION 'int (int)'
  |-ParmVarDecl 0x12600dcd8 <col:14> col:14 round 'int'
  `-CompoundStmt 0x127009630 <line:2:1, line:36:1>
    |-DeclStmt 0x12600dfa0 <line:4:2, col:16>
    | `-VarDecl 0x12600df18 <col:2, col:15> col:6 used places 'int' cinit
    |   `-IntegerLiteral 0x12600df80 <col:15> 'int' 0
    |-DeclStmt 0x12600e070 <line:5:2, col:20>
    | `-VarDecl 0x12600dfd0 <col:2, col:19> col:7 used precision 'long' cinit
    |   `-ImplicitCastExpr 0x12600e058 <col:19> 'long' <IntegralCast>
    |     `-IntegerLiteral 0x12600e038 <col:19> 'int' 0
    |-DeclStmt 0x12600e140 <line:6:2, col:31>
    | `-VarDecl 0x12600e0a0 <col:2, col:14> col:7 used mode 'long' cinit
    |   `-RecoveryExpr 0x12600e120 <col:14> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x12600e1d8 <line:7:2, col:19>
    | `-VarDecl 0x12600e170 <col:2, col:9> col:9 used return_val 'double'
    |-IfStmt 0x1270088e8 <line:9:2, line:11:2>
    | |-RecoveryExpr 0x1270088a0 <line:9:6, col:92> '_Bool' contains-errors
    | `-CompoundStmt 0x1270088d0 <col:101, line:11:2>
    |   `-ReturnStmt 0x1270088c0 <line:10:3>
    |-IfStmt 0x127008a70 <line:13:2, line:15:2>
    | |-BinaryOperator 0x127008980 <line:13:6, col:25> 'int' '>='
    | | |-CallExpr 0x127008940 <col:6, col:20> 'int'
    | | | `-ImplicitCastExpr 0x127008928 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | |   `-DeclRefExpr 0x127008908 <col:6> 'int ()' Function 0x12600e348 'ZEND_NUM_ARGS' 'int ()'
    | | `-IntegerLiteral 0x127008960 <col:25> 'int' 2
    | `-CompoundStmt 0x127008a58 <col:28, line:15:2>
    |   `-BinaryOperator 0x127008a38 <line:14:3, col:18> 'int' '='
    |     |-DeclRefExpr 0x1270089a0 <col:3> 'int' lvalue Var 0x12600df18 'places' 'int'
    |     `-CStyleCastExpr 0x127008a10 <col:12, col:18> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x1270089f8 <col:18> 'long' <LValueToRValue> part_of_explicit_cast
    |         `-DeclRefExpr 0x1270089c0 <col:18> 'long' lvalue Var 0x12600dfd0 'precision' 'long'
    |-CallExpr 0x127008bf0 <line:16:2, col:35> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x127008b70 <col:2> 'int ()' Function 0x127008ab8 'convert_scalar_to_number_ex' 'int ()'
    | `-RecoveryExpr 0x127008bd0 <col:30> '<dependent type>' contains-errors lvalue
    `-SwitchStmt 0x127008da0 <line:18:2, line:35:2>
      |-CallExpr 0x127008d78 <line:18:10, col:25> '<dependent type>' contains-errors
      | |-DeclRefExpr 0x127008cf8 <col:10> 'int ()' Function 0x127008c40 'Z_TYPE_PP' 'int ()'
      | `-RecoveryExpr 0x127008d58 <col:20> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x1270095f0 <col:28, line:35:2>
        |-IfStmt 0x1270090c0 <line:21:4, line:23:4>
        | |-BinaryOperator 0x127008e38 <line:21:8, col:18> 'int' '>='
        | | |-ImplicitCastExpr 0x127008e20 <col:8> 'int' <LValueToRValue>
        | | | `-DeclRefExpr 0x127008de0 <col:8> 'int' lvalue Var 0x12600df18 'places' 'int'
        | | `-IntegerLiteral 0x127008e00 <col:18> 'int' 0
        | `-CompoundStmt 0x1270090b0 <col:21, line:23:4>
        |-BinaryOperator 0x127009500 <line:28:4, col:57> 'double' contains-errors '='
        | |-DeclRefExpr 0x1270092d0 <col:4> 'double' lvalue Var 0x12600e170 'return_val' 'double'
        | `-ImplicitCastExpr 0x1270094e8 <col:17, col:57> 'double' contains-errors <IntegralToFloating>
        |   `-CallExpr 0x127009468 <col:17, col:57> 'int' contains-errors
        |     |-ImplicitCastExpr 0x127009450 <col:17> 'int (*)()' <FunctionToPointerDecay>
        |     | `-DeclRefExpr 0x1270093d0 <col:17> 'int ()' Function 0x127009318 '_php_math_round' 'int ()'
        |     |-ImplicitCastExpr 0x1270094a0 <col:33> 'double' <LValueToRValue>
        |     | `-DeclRefExpr 0x1270093f0 <col:33> 'double' lvalue Var 0x12600e170 'return_val' 'double'
        |     |-ImplicitCastExpr 0x1270094b8 <col:45> 'int' <LValueToRValue>
        |     | `-DeclRefExpr 0x127009410 <col:45> 'int' lvalue Var 0x12600df18 'places' 'int'
        |     `-ImplicitCastExpr 0x1270094d0 <col:53> 'long' contains-errors <LValueToRValue>
        |       `-DeclRefExpr 0x127009430 <col:53> 'long' contains-errors lvalue Var 0x12600e0a0 'mode' 'long'
        |-CallExpr 0x127009578 <line:29:4, col:28> 'int'
        | |-ImplicitCastExpr 0x127009560 <col:4> 'int (*)()' <FunctionToPointerDecay>
        | | `-DeclRefExpr 0x127009520 <col:4> 'int ()' Function 0x127008e80 'RETURN_DOUBLE' 'int ()'
        | `-ImplicitCastExpr 0x1270095a0 <col:18> 'double' <LValueToRValue>
        |   `-DeclRefExpr 0x127009540 <col:18> 'double' lvalue Var 0x12600e170 'return_val' 'double'
        |-BreakStmt 0x1270095b8 <line:30:4>
        |-DefaultStmt 0x1270095c8 <line:32:3, col:10>
        | `-NullStmt 0x1270095c0 <col:10>
        `-BreakStmt 0x1270095e8 <line:34:4>
