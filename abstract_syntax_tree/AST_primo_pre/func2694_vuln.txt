`-FunctionDecl 0x12d10ba08  line:1:6 invalid format_go_output 'int (const int)'
  |-ParmVarDecl 0x12d10b8f0 <col:23, <invalid sloc>> col:35 invalid 'const int'
  `-CompoundStmt 0x12d125150 <col:48, line:10:1>
    |-DeclStmt 0x12d10bbd8 <line:2:3, col:43>
    | `-VarDecl 0x12d10bad0 <col:3, col:16> col:16 invalid command 'const int'
    |-IfStmt 0x12d10bec0 <line:4:3, line:6:3>
    | |-BinaryOperator 0x12d10be40 <line:4:7, col:34> 'int' contains-errors '=='
    | | |-CallExpr 0x12d10bdf8 <col:7, col:29> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x12d10bd50 <col:7> 'int ()' Function 0x12d10bc98 'system' 'int ()'
    | | | `-CallExpr 0x12d10bdd8 <col:14, col:28> '<dependent type>' contains-errors
    | | |   `-CXXDependentScopeMemberExpr 0x12d10bd90 <col:14, col:22> '<dependent type>' contains-errors lvalue .c_str
    | | |     `-RecoveryExpr 0x12d10bd70 <col:14> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x12d10be20 <col:34> 'int' 0
    | `-CompoundStmt 0x12d10bea8 <col:37, line:6:3>
    |   `-ReturnStmt 0x12d10be98 <line:5:5, col:12>
    |     `-RecoveryExpr 0x12d10be78 <col:12> '<dependent type>' contains-errors lvalue
    `-CallExpr 0x12d125100 <line:8:3, col:41> '<dependent type>' contains-errors
      |-DeclRefExpr 0x12d10bfc0 <col:3> 'int ()' Function 0x12d10bf08 'fprintf' 'int ()'
      |-RecoveryExpr 0x12d1250e0 <col:11> '<dependent type>' contains-errors lvalue
      |-StringLiteral 0x12d125000 <col:19> 'char[4]' lvalue "STR"
      `-CallExpr 0x12d125088 <col:26, col:40> '<dependent type>' contains-errors
        `-CXXDependentScopeMemberExpr 0x12d125040 <col:26, col:34> '<dependent type>' contains-errors lvalue .c_str
          `-RecoveryExpr 0x12d125020 <col:26> '<dependent type>' contains-errors lvalue
