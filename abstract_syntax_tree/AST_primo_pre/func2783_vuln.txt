`-FunctionDecl 0x13400dfe8  line:1:16 invalid qmp_guest_file_read 'int *(int, int, int, int **)'
  |-ParmVarDecl 0x13400dcf0 <col:36, col:44> col:44 invalid handle 'int'
  |-ParmVarDecl 0x13400dd70 <col:52, col:57> col:57 invalid has_count 'int'
  |-ParmVarDecl 0x13400ddf0 <line:2:36, col:44> col:44 referenced invalid count 'int'
  |-ParmVarDecl 0x13400dee0 <col:51, col:59> col:59 invalid errp 'int **'
  `-CompoundStmt 0x134027418 <line:3:1, line:41:1>
    |-DeclStmt 0x13400e160 <line:5:5, col:16>
    | `-VarDecl 0x13400e0f8 <col:5, col:13> col:13 used buf 'char *'
    |-IfStmt 0x133922c78 <line:11:5, line:13:5>
    | |-UnaryOperator 0x133922c00 <line:11:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x13400e3e8 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x13400e3c8 <col:10> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x133922c60 <col:15, line:13:5>
    |   `-ReturnStmt 0x133922c50 <line:12:9, col:16>
    |     `-RecoveryExpr 0x133922c30 <col:16> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x133922fd0 <line:14:5, line:20:5> has_else
    | |-UnaryOperator 0x133922cd0 <line:14:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x133922cb8 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x133922c98 <col:10> '<dependent type>' contains-errors lvalue
    | |-CompoundStmt 0x133922da8 <col:21, line:16:5>
    | | `-BinaryOperator 0x133922d88 <line:15:9, col:17> '<dependent type>' contains-errors '='
    | |   |-RecoveryExpr 0x133922d08 <col:9> '<dependent type>' contains-errors lvalue
    | |   | `-DeclRefExpr 0x133922ce8 <col:9> 'int' lvalue ParmVar 0x13400ddf0 'count' 'int'
    | |   `-RecoveryExpr 0x133922d68 <col:17> '<dependent type>' contains-errors lvalue
    | `-IfStmt 0x133922fb0 <line:16:12, line:20:5>
    |   |-BinaryOperator 0x133922e00 <line:16:16, col:24> 'int' contains-errors '<'
    |   | |-RecoveryExpr 0x133922dc0 <col:16> '<dependent type>' contains-errors lvalue
    |   | `-IntegerLiteral 0x133922de0 <col:24> 'int' 0
    |   `-CompoundStmt 0x133922fa0 <col:27, line:20:5>
    |-BinaryOperator 0x1339231a8 <line:23:5, col:28> 'char *' contains-errors '='
    | |-DeclRefExpr 0x133923000 <col:5> 'char *' lvalue Var 0x13400e0f8 'buf' 'char *'
    | `-CallExpr 0x133923180 <col:11, col:28> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x133923100 <col:11> 'int ()' Function 0x133923048 'g_malloc0' 'int ()'
    |   `-BinaryOperator 0x133923160 <col:21, col:27> '<dependent type>' contains-errors '+'
    |     |-RecoveryExpr 0x133923120 <col:21> '<dependent type>' contains-errors lvalue
    |     `-IntegerLiteral 0x133923140 <col:27> 'int' 1
    |-IfStmt 0x133923a70 <line:25:5, line:37:5> has_else
    | |-RecoveryExpr 0x133923308 <line:25:9, col:10> '_Bool' contains-errors
    | |-CompoundStmt 0x133923730 <col:17, line:28:5>
    | | `-CallExpr 0x1339235d8 <line:26:9, col:53> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x133923408 <col:9> 'int ()' Function 0x133923350 'error_setg_win32' 'int ()'
    | |   |-RecoveryExpr 0x133923428 <col:26> '<dependent type>' contains-errors lvalue
    | |   |-CallExpr 0x133923598 <col:32, col:45> 'int'
    | |   | `-ImplicitCastExpr 0x133923580 <col:32> 'int (*)()' <FunctionToPointerDecay>
    | |   |   `-DeclRefExpr 0x133923528 <col:32> 'int ()' Function 0x133923470 'GetLastError' 'int ()'
    | |   `-StringLiteral 0x1339235b8 <col:48> 'char[4]' lvalue "STR"
    | `-CompoundStmt 0x133923a58 <line:28:12, line:37:5>
    |   `-IfStmt 0x133923a38 <line:34:9, line:36:9>
    |     |-RecoveryExpr 0x1339238e8 <line:34:13, col:27> '_Bool' contains-errors
    |     `-CompoundStmt 0x133923a28 <col:30, line:36:9>
    `-CallExpr 0x133923bd8 <line:38:5, col:15> 'int'
      |-ImplicitCastExpr 0x133923bc0 <col:5> 'int (*)()' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x133923b80 <col:5> 'int ()' Function 0x133923ac8 'g_free' 'int ()'
      `-ImplicitCastExpr 0x134027400 <col:12> 'char *' <LValueToRValue>
        `-DeclRefExpr 0x133923ba0 <col:12> 'char *' lvalue Var 0x13400e0f8 'buf' 'char *'
