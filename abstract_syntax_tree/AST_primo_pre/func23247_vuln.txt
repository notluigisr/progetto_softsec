`-FunctionDecl 0x1251418d8  line:1:5 invalid nfc_dep_link_up 'int (struct nfc_dev *, int, int)'
  |-ParmVarDecl 0x125128648 <col:21, col:37> col:37 used dev 'struct nfc_dev *'
  |-ParmVarDecl 0x1251286c8 <col:42, col:46> col:46 used target_index 'int'
  |-ParmVarDecl 0x125128760 <col:60, col:63> col:63 invalid comm_mode 'int'
  `-CompoundStmt 0x1251432e8 <line:2:1, line:46:1>
    |-DeclStmt 0x125141a38 <line:3:2, col:12>
    | `-VarDecl 0x1251419b0 <col:2, col:11> col:6 used rc 'int' cinit
    |   `-IntegerLiteral 0x125141a18 <col:11> 'int' 0
    |-UnaryExprOrTypeTraitExpr 0x125141ac0 <line:5:2, col:9> 'unsigned long' contains-errors sizeof
    | `-RecoveryExpr 0x125141aa0 <col:9> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x125141cc8 <line:6:2, col:27>
    | |-RecordDecl 0x125141ae0 <col:2, col:9> col:9 struct nfc_target
    | `-VarDecl 0x125141c48 <col:2, col:21> col:21 used target 'struct nfc_target *'
    |-CallExpr 0x125142080 <line:8:2, col:48> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x125141e40 <col:2> 'int ()' Function 0x125141d88 'pr_debug' 'int ()'
    | |-StringLiteral 0x125141ea0 <col:11> 'char[4]' lvalue "STR"
    | |-CallExpr 0x125142038 <col:18, col:36> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x125141fa0 <col:18> 'int ()' Function 0x125141ee8 'dev_name' 'int ()'
    | | `-UnaryOperator 0x125142020 <col:27, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |   `-RecoveryExpr 0x125141ff8 <col:28, col:33> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x125141fc0 <col:28> 'struct nfc_dev *' lvalue ParmVar 0x125128648 'dev' 'struct nfc_dev *'
    | `-RecoveryExpr 0x125142060 <col:39> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x125142238 <line:10:2, line:11:11>
    | |-UnaryOperator 0x125142178 <line:10:6, col:17> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x125142160 <col:7, col:17> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-CXXDependentScopeMemberExpr 0x125142118 <col:7, col:17> '<dependent type>' contains-errors lvalue ->dep_link_up
    | |     `-RecoveryExpr 0x1251420f0 <col:7, col:12> '<dependent type>' contains-errors lvalue
    | |       `-DeclRefExpr 0x1251420b8 <col:7> 'struct nfc_dev *' lvalue ParmVar 0x125128648 'dev' 'struct nfc_dev *'
    | `-ReturnStmt 0x125142228 <line:11:3, col:11>
    |   `-UnaryOperator 0x125142210 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x1251421f8 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x1251421d8 <col:11> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x1251423d0 <line:13:2, col:23> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x125142338 <col:2> 'int ()' Function 0x125142280 'device_lock' 'int ()'
    | `-UnaryOperator 0x1251423b8 <col:14, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x125142390 <col:15, col:20> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x125142358 <col:15> 'struct nfc_dev *' lvalue ParmVar 0x125128648 'dev' 'struct nfc_dev *'
    |-IfStmt 0x125142730 <line:15:2, line:18:2>
    | |-UnaryOperator 0x125142598 <line:15:6, col:37> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-CallExpr 0x125142570 <col:7, col:37> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x1251424d8 <col:7> 'int ()' Function 0x125142420 'device_is_registered' 'int ()'
    | |   `-UnaryOperator 0x125142558 <col:28, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |     `-RecoveryExpr 0x125142530 <col:29, col:34> '<dependent type>' contains-errors lvalue
    | |       `-DeclRefExpr 0x1251424f8 <col:29> 'struct nfc_dev *' lvalue ParmVar 0x125128648 'dev' 'struct nfc_dev *'
    | `-CompoundStmt 0x125142710 <col:40, line:18:2>
    |   |-BinaryOperator 0x125142688 <line:16:3, col:9> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x1251425b0 <col:3> 'int' lvalue Var 0x1251419b0 'rc' 'int'
    |   | `-UnaryOperator 0x125142670 <col:8, col:9> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |   `-ImplicitCastExpr 0x125142658 <col:9> '<dependent type>' contains-errors <LValueToRValue>
    |   |     `-RecoveryExpr 0x125142638 <col:9> '<dependent type>' contains-errors lvalue
    |   `-GotoStmt 0x1251426f8 <line:17:3, col:8> 'error' 0x1251426a8
    |-IfStmt 0x125142970 <line:20:2, line:23:2>
    | |-BinaryOperator 0x125142820 <line:20:6, col:26> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x125142788 <col:6, col:11> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x125142750 <col:6> 'struct nfc_dev *' lvalue ParmVar 0x125128648 'dev' 'struct nfc_dev *'
    | | `-RecoveryExpr 0x125142800 <col:26> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x125142950 <col:32, line:23:2>
    |   |-BinaryOperator 0x125142918 <line:21:3, col:9> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x125142840 <col:3> 'int' lvalue Var 0x1251419b0 'rc' 'int'
    |   | `-UnaryOperator 0x125142900 <col:8, col:9> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |   `-ImplicitCastExpr 0x1251428e8 <col:9> '<dependent type>' contains-errors <LValueToRValue>
    |   |     `-RecoveryExpr 0x1251428c8 <col:9> '<dependent type>' contains-errors lvalue
    |   `-GotoStmt 0x125142938 <line:22:3, col:8> 'error' 0x1251426a8
    |-IfStmt 0x125142b20 <line:26:2, line:29:2>
    | |-RecoveryExpr 0x125142ab0 <line:26:6, col:15> '_Bool' contains-errors
    | `-CompoundStmt 0x125142b08 <col:31, line:29:2>
    |   `-GotoStmt 0x125142af0 <line:28:3, col:8> 'error' 0x1251426a8
    |-BinaryOperator 0x125142d60 <line:31:2, col:44> 'struct nfc_target *' '='
    | |-DeclRefExpr 0x125142b40 <col:2> 'struct nfc_target *' lvalue Var 0x125141c48 'target' 'struct nfc_target *'
    | `-ImplicitCastExpr 0x125142d48 <col:11, col:44> 'struct nfc_target *' <IntegralToPointer>
    |   `-CallExpr 0x125142ce8 <col:11, col:44> 'int'
    |     |-ImplicitCastExpr 0x125142cd0 <col:11> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x125142c40 <col:11> 'int ()' Function 0x125142b88 'nfc_find_target' 'int ()'
    |     |-ImplicitCastExpr 0x125142d18 <col:27> 'struct nfc_dev *' <LValueToRValue>
    |     | `-DeclRefExpr 0x125142c60 <col:27> 'struct nfc_dev *' lvalue ParmVar 0x125128648 'dev' 'struct nfc_dev *'
    |     `-ImplicitCastExpr 0x125142d30 <col:32> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x125142c80 <col:32> 'int' lvalue ParmVar 0x1251286c8 'target_index' 'int'
    |-IfStmt 0x125142e10 <line:32:2, line:35:2>
    | |-RecoveryExpr 0x125142da0 <line:32:6, col:16> '_Bool' contains-errors
    | `-CompoundStmt 0x125142df8 <col:22, line:35:2>
    |   `-GotoStmt 0x125142de0 <line:34:3, col:8> 'error' 0x1251426a8
    |-IfStmt 0x1251430c0 <line:38:2, line:41:2>
    | |-UnaryOperator 0x125142f90 <line:38:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x125142f78 <col:7> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x125142f58 <col:7> 'int' lvalue Var 0x1251419b0 'rc' 'int'
    | `-CompoundStmt 0x1251430a8 <col:11, line:41:2>
    |   `-BinaryOperator 0x125143028 <line:39:3, col:24> '<dependent type>' contains-errors '='
    |     |-RecoveryExpr 0x125142fe0 <col:3, col:8> '<dependent type>' contains-errors lvalue
    |     | `-DeclRefExpr 0x125142fa8 <col:3> 'struct nfc_dev *' lvalue ParmVar 0x125128648 'dev' 'struct nfc_dev *'
    |     `-DeclRefExpr 0x125143008 <col:24> 'struct nfc_target *' lvalue Var 0x125141c48 'target' 'struct nfc_target *'
    |-LabelStmt 0x125143280 <line:43:1, line:44:25> 'error'
    | `-CallExpr 0x125143258 <col:2, col:25> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1251431c0 <col:2> 'int ()' Function 0x125143108 'device_unlock' 'int ()'
    |   `-UnaryOperator 0x125143240 <col:16, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x125143218 <col:17, col:22> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x1251431e0 <col:17> 'struct nfc_dev *' lvalue ParmVar 0x125128648 'dev' 'struct nfc_dev *'
    `-ReturnStmt 0x1251432d8 <line:45:2, col:9>
      `-ImplicitCastExpr 0x1251432c0 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x1251432a0 <col:9> 'int' lvalue Var 0x1251419b0 'rc' 'int'
