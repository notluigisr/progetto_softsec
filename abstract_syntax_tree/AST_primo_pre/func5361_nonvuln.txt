`-FunctionDecl 0x134123568  line:1:12 invalid sisusb_check_rbc 'int (struct sisusb_usb_data *, int *, int, int)' static
  |-ParmVarDecl 0x13480e248 <col:29, col:53> col:53 used sisusb 'struct sisusb_usb_data *'
  |-ParmVarDecl 0x13480e2f8 <col:61, col:66> col:66 used iret 'int *'
  |-ParmVarDecl 0x13480e390 <line:2:3, col:7> col:7 invalid inc 'int'
  |-ParmVarDecl 0x134123418 <col:12, col:16> col:16 used testn 'int'
  `-CompoundStmt 0x1341254b8 <line:3:1, line:24:1>
    |-DeclStmt 0x134123768 <line:4:2, col:16>
    | |-VarDecl 0x134123648 <col:2, col:12> col:6 used ret 'int' cinit
    | | `-IntegerLiteral 0x1341236b0 <col:12> 'int' 0
    | `-VarDecl 0x1341236e8 <col:2, col:15> col:15 used i 'int'
    |-BinaryOperator 0x1341237f0 <line:7:2, col:10> 'int' '='
    | |-UnaryOperator 0x1341237b8 <col:2, col:3> 'int' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x1341237a0 <col:3> 'int *' <LValueToRValue>
    | |   `-DeclRefExpr 0x134123780 <col:3> 'int *' lvalue ParmVar 0x13480e2f8 'iret' 'int *'
    | `-IntegerLiteral 0x1341237d0 <col:10> 'int' 0
    |-ForStmt 0x134123d58 <line:9:2, line:12:2>
    | |-<<<NULL>>>
    | |-<<<NULL>>>
    | |-BinaryOperator 0x134123958 <line:9:21, col:25> 'int' '<'
    | | |-ImplicitCastExpr 0x134123928 <col:21> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1341238e8 <col:21> 'int' lvalue Var 0x1341236e8 'i' 'int'
    | | `-ImplicitCastExpr 0x134123940 <col:25> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x134123908 <col:25> 'int' lvalue ParmVar 0x134123418 'testn' 'int'
    | |-UnaryOperator 0x134123998 <col:32, col:33> 'int' postfix '++'
    | | `-DeclRefExpr 0x134123978 <col:32> 'int' lvalue Var 0x1341236e8 'i' 'int'
    | `-CompoundStmt 0x134123d40 <col:37, line:12:2>
    |   `-CompoundAssignOperator 0x134123cf0 <line:10:3, col:40> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |     |-DeclRefExpr 0x1341239b0 <col:3> 'int' lvalue Var 0x134123648 'ret' 'int'
    |     `-CallExpr 0x134123cc0 <col:10, col:40> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x134123b30 <col:10> 'int ()' Function 0x134123a78 'WRITEL' 'int ()'
    |       |-BinaryOperator 0x134123c80 <col:17, col:36> '<dependent type>' contains-errors '+'
    |       | |-RecoveryExpr 0x134123b88 <col:17, col:25> '<dependent type>' contains-errors lvalue
    |       | | `-DeclRefExpr 0x134123b50 <col:17> 'struct sisusb_usb_data *' lvalue ParmVar 0x13480e248 'sisusb' 'struct sisusb_usb_data *'
    |       | `-RecoveryExpr 0x134123c60 <col:36> '<dependent type>' contains-errors lvalue
    |       `-RecoveryExpr 0x134123ca0 <col:39> '<dependent type>' contains-errors lvalue
    |-ForStmt 0x1341243a8 <line:14:2, line:20:2>
    | |-<<<NULL>>>
    | |-<<<NULL>>>
    | |-BinaryOperator 0x134123ed8 <line:14:21, col:25> 'int' '<'
    | | |-ImplicitCastExpr 0x134123ea8 <col:21> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x134123e68 <col:21> 'int' lvalue Var 0x1341236e8 'i' 'int'
    | | `-ImplicitCastExpr 0x134123ec0 <col:25> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x134123e88 <col:25> 'int' lvalue ParmVar 0x134123418 'testn' 'int'
    | |-UnaryOperator 0x134123f18 <col:32, col:33> 'int' postfix '++'
    | | `-DeclRefExpr 0x134123ef8 <col:32> 'int' lvalue Var 0x1341236e8 'i' 'int'
    | `-CompoundStmt 0x134124388 <col:37, line:20:2>
    |   |-CompoundAssignOperator 0x134124220 <line:15:3, col:42> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   | |-DeclRefExpr 0x134123f30 <col:3> 'int' lvalue Var 0x134123648 'ret' 'int'
    |   | `-CallExpr 0x1341241f0 <col:10, col:42> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x134124030 <col:10> 'int ()' Function 0x134123f78 'READL' 'int ()'
    |   |   |-BinaryOperator 0x134124198 <col:16, col:35> '<dependent type>' contains-errors '+'
    |   |   | |-RecoveryExpr 0x134124088 <col:16, col:24> '<dependent type>' contains-errors lvalue
    |   |   | | `-DeclRefExpr 0x134124050 <col:16> 'struct sisusb_usb_data *' lvalue ParmVar 0x13480e248 'sisusb' 'struct sisusb_usb_data *'
    |   |   | `-RecoveryExpr 0x134124178 <col:35> '<dependent type>' contains-errors lvalue
    |   |   `-UnaryOperator 0x1341241d8 <col:38, col:39> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |     `-RecoveryExpr 0x1341241b8 <col:39> '<dependent type>' contains-errors lvalue
    |   `-IfStmt 0x134124348 <line:16:3, line:17:11>
    |     |-BinaryOperator 0x1341242e0 <line:16:7, col:14> 'int' contains-errors '!='
    |     | |-RecoveryExpr 0x1341242a0 <col:7> '<dependent type>' contains-errors lvalue
    |     | `-RecoveryExpr 0x1341242c0 <col:14> '<dependent type>' contains-errors lvalue
    |     `-ReturnStmt 0x134124338 <line:17:4, col:11>
    |       `-ImplicitCastExpr 0x134124320 <col:11> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x134124300 <col:11> 'int' lvalue Var 0x134123648 'ret' 'int'
    |-BinaryOperator 0x134125450 <line:22:2, col:10> 'int' '='
    | |-UnaryOperator 0x134125418 <col:2, col:3> 'int' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x134125400 <col:3> 'int *' <LValueToRValue>
    | |   `-DeclRefExpr 0x1341243e0 <col:3> 'int *' lvalue ParmVar 0x13480e2f8 'iret' 'int *'
    | `-IntegerLiteral 0x134125430 <col:10> 'int' 1
    `-ReturnStmt 0x1341254a8 <line:23:2, col:9>
      `-ImplicitCastExpr 0x134125490 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x134125470 <col:9> 'int' lvalue Var 0x134123648 'ret' 'int'
