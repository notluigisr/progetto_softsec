`-FunctionDecl 0x133128318  line:1:12 invalid jas_iccputuint 'int (int *, int, int)' static
  |-ParmVarDecl 0x133128128 <col:27, col:41> col:41 invalid out 'int *'
  |-ParmVarDecl 0x1331281a8 <col:46, col:50> col:50 used n 'int'
  |-ParmVarDecl 0x133128228 <col:53, col:63> col:63 invalid val 'int'
  `-CompoundStmt 0x133141b78 <line:2:1, line:11:1>
    |-DeclStmt 0x133128458 <line:3:2, col:7>
    | `-VarDecl 0x1331283f0 <col:2, col:6> col:6 used i 'int'
    |-DeclStmt 0x1331284f0 <line:4:2, col:7>
    | `-VarDecl 0x133128488 <col:2, col:6> col:6 used c 'int'
    |-ForStmt 0x133141b10 <line:5:2, line:9:2>
    | |-BinaryOperator 0x133128560 <line:5:7, col:11> 'int' '='
    | | |-DeclRefExpr 0x133128508 <col:7> 'int' lvalue Var 0x1331283f0 'i' 'int'
    | | `-ImplicitCastExpr 0x133128548 <col:11> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x133128528 <col:11> 'int' lvalue ParmVar 0x1331281a8 'n' 'int'
    | |-<<<NULL>>>
    | |-BinaryOperator 0x1331285d8 <col:14, col:18> 'int' '>'
    | | |-ImplicitCastExpr 0x1331285c0 <col:14> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x133128580 <col:14> 'int' lvalue Var 0x1331283f0 'i' 'int'
    | | `-IntegerLiteral 0x1331285a0 <col:18> 'int' 0
    | |-UnaryOperator 0x133128618 <col:21, col:23> 'int' prefix '--'
    | | `-DeclRefExpr 0x1331285f8 <col:23> 'int' lvalue Var 0x1331283f0 'i' 'int'
    | `-CompoundStmt 0x133141af0 <col:26, line:9:2>
    |   |-BinaryOperator 0x133141800 <line:6:3, col:32> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x133128630 <col:3> 'int' lvalue Var 0x133128488 'c' 'int'
    |   | `-BinaryOperator 0x1331287c8 <col:7, col:32> '<dependent type>' contains-errors '&'
    |   |   |-ParenExpr 0x133128788 <col:7, col:28> '<dependent type>' contains-errors
    |   |   | `-BinaryOperator 0x133128768 <col:8, col:27> '<dependent type>' contains-errors '>>'
    |   |   |   |-RecoveryExpr 0x133128650 <col:8> '<dependent type>' contains-errors lvalue
    |   |   |   `-ParenExpr 0x133128748 <col:15, col:27> 'int'
    |   |   |     `-BinaryOperator 0x133128728 <col:16, col:26> 'int' '*'
    |   |   |       |-IntegerLiteral 0x133128670 <col:16> 'int' 8
    |   |   |       `-ParenExpr 0x133128708 <col:20, col:26> 'int'
    |   |   |         `-BinaryOperator 0x1331286e8 <col:21, col:25> 'int' '-'
    |   |   |           |-ImplicitCastExpr 0x1331286d0 <col:21> 'int' <LValueToRValue>
    |   |   |           | `-DeclRefExpr 0x133128690 <col:21> 'int' lvalue Var 0x1331283f0 'i' 'int'
    |   |   |           `-IntegerLiteral 0x1331286b0 <col:25> 'int' 1
    |   |   `-IntegerLiteral 0x1331287a8 <col:32> 'int' 255
    |   `-IfStmt 0x133141ad0 <line:7:3, line:8:12>
    |     |-BinaryOperator 0x133141a68 <line:7:7, col:34> 'int' contains-errors '=='
    |     | |-CallExpr 0x1331419e0 <col:7, col:29> '<dependent type>' contains-errors
    |     | | |-DeclRefExpr 0x133141980 <col:7> 'int ()' Function 0x1331418c8 'jas_stream_putc' 'int ()'
    |     | | |-RecoveryExpr 0x1331419a0 <col:23> '<dependent type>' contains-errors lvalue
    |     | | `-DeclRefExpr 0x1331419c0 <col:28> 'int' lvalue Var 0x133128488 'c' 'int'
    |     | `-RecoveryExpr 0x133141a48 <col:34> '<dependent type>' contains-errors lvalue
    |     `-ReturnStmt 0x133141ac0 <line:8:4, col:12>
    |       `-UnaryOperator 0x133141aa8 <col:11, col:12> 'int' prefix '-'
    |         `-IntegerLiteral 0x133141a88 <col:12> 'int' 1
    `-ReturnStmt 0x133141b68 <line:10:2, col:9>
      `-IntegerLiteral 0x133141b48 <col:9> 'int' 0
