`-FunctionDecl 0x141128418  line:1:21 invalid __rfcomm_get_sock_by_addr 'struct sock *(int, int *)' static
  |-ParmVarDecl 0x141128190 <col:47, col:50> col:50 invalid channel 'int'
  |-ParmVarDecl 0x141128248 <col:59, col:69> col:69 invalid src 'int *'
  `-CompoundStmt 0x14180a0d0 <line:2:1, line:12:1>
    |-DeclStmt 0x1411285f8 <line:3:2, col:24>
    | `-VarDecl 0x141128558 <col:2, col:20> col:15 used sk 'struct sock *' cinit
    |   `-RecoveryExpr 0x1411285d8 <col:20> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x141809710 <line:5:2, col:38> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x141128770 <col:2> 'int ()' Function 0x1411286b8 'sk_for_each' 'int ()'
    | |-DeclRefExpr 0x141128790 <col:14> 'struct sock *' contains-errors lvalue Var 0x141128558 'sk' 'struct sock *'
    | `-UnaryOperator 0x1418096f8 <col:18, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-CXXDependentScopeMemberExpr 0x1418096b0 <col:19, col:34> '<dependent type>' contains-errors lvalue .head
    |     `-RecoveryExpr 0x141809690 <col:19> '<dependent type>' contains-errors lvalue
    |-CompoundStmt 0x141809fd8 <col:40, line:9:2>
    `-ReturnStmt 0x14180a0c0 <line:11:2, col:19>
      `-ConditionalOperator 0x14180a090 <col:9, col:19> '<dependent type>' contains-errors
        |-DeclRefExpr 0x141809fe8 <col:9> 'struct sock *' contains-errors lvalue Var 0x141128558 'sk' 'struct sock *'
        |-DeclRefExpr 0x14180a008 <col:14> 'struct sock *' contains-errors lvalue Var 0x141128558 'sk' 'struct sock *'
        `-RecoveryExpr 0x14180a070 <col:19> '<dependent type>' contains-errors lvalue
