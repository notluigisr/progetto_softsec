`-FunctionDecl 0x1209281a8  line:1:13 invalid GC_init_size_map 'int (void)'
  `-CompoundStmt 0x120941ea0 <line:2:1, line:16:1>
    |-DeclStmt 0x1209282d0 <line:3:5, col:10>
    | `-VarDecl 0x120928268 <col:5, col:9> col:9 used i 'int'
    `-ForStmt 0x120941e68 <line:8:5, line:14:5>
      |-BinaryOperator 0x120928368 <line:8:10, col:14> 'int' '='
      | |-DeclRefExpr 0x120928328 <col:10> 'int' lvalue Var 0x120928268 'i' 'int'
      | `-IntegerLiteral 0x120928348 <col:14> 'int' 1
      |-<<<NULL>>>
      |-BinaryOperator 0x1209286a0 <col:17, col:60> 'int' contains-errors '<='
      | |-DeclRefExpr 0x120928388 <col:17> 'int' lvalue Var 0x120928268 'i' 'int'
      | `-BinaryOperator 0x120928680 <col:22, col:60> '<dependent type>' contains-errors '-'
      |   |-CallExpr 0x120928638 <col:22, col:56> '<dependent type>' contains-errors
      |   | |-DeclRefExpr 0x120928500 <col:22> 'int ()' Function 0x120928448 'GRANULES_TO_BYTES' 'int ()'
      |   | `-BinaryOperator 0x120928618 <col:40, col:55> '<dependent type>' contains-errors '-'
      |   |   |-RecoveryExpr 0x1209285f8 <col:40> '<dependent type>' contains-errors lvalue
      |   |   `-IntegerLiteral 0x120928538 <col:55> 'int' 1
      |   `-RecoveryExpr 0x120928660 <col:60> '<dependent type>' contains-errors lvalue
      |-UnaryOperator 0x1209286e0 <col:73, col:74> 'int' postfix '++'
      | `-DeclRefExpr 0x1209286c0 <col:73> 'int' lvalue Var 0x120928268 'i' 'int'
      `-CompoundStmt 0x120941e58 <col:78, line:14:5>
