`-FunctionDecl 0x128128750  line:1:6 si_swapinfo 'void (struct sysinfo *)'
  |-ParmVarDecl 0x128128648 <col:18, col:34> col:34 used val 'struct sysinfo *'
  `-CompoundStmt 0x128141840 <line:2:1, line:16:1>
    |-DeclStmt 0x128140ac8 <line:3:2, col:19>
    | `-VarDecl 0x128140a60 <col:2, col:15> col:15 used type 'unsigned int'
    |-DeclStmt 0x128140b98 <line:4:2, col:35>
    | `-VarDecl 0x128140af8 <col:2, col:34> col:16 used nr_to_be_unused 'unsigned long' cinit
    |   `-ImplicitCastExpr 0x128140b80 <col:34> 'unsigned long' <IntegralCast>
    |     `-IntegerLiteral 0x128140b60 <col:34> 'int' 0
    |-CallExpr 0x128140de0 <line:6:2, col:22> 'int'
    | |-ImplicitCastExpr 0x128140dc8 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x128140ce0 <col:2> 'int ()' Function 0x128140c28 'spin_lock' 'int ()'
    | `-UnaryOperator 0x128140db0 <col:12, col:13> 'int (*)()' prefix '&' cannot overflow
    |   `-DeclRefExpr 0x128140d58 <col:13> 'int ()' Function 0x128140c28 'spin_lock' 'int ()'
    |-ForStmt 0x1281413c8 <line:7:2, line:12:2>
    | |-BinaryOperator 0x128140e60 <line:7:7, col:14> 'unsigned int' '='
    | | |-DeclRefExpr 0x128140e08 <col:7> 'unsigned int' lvalue Var 0x128140a60 'type' 'unsigned int'
    | | `-ImplicitCastExpr 0x128140e48 <col:14> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x128140e28 <col:14> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x128140ef8 <col:17, col:24> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x128140e80 <col:17> 'unsigned int' lvalue Var 0x128140a60 'type' 'unsigned int'
    | | `-RecoveryExpr 0x128140ed8 <col:24> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x128140f38 <col:38, col:42> 'unsigned int' postfix '++'
    | | `-DeclRefExpr 0x128140f18 <col:38> 'unsigned int' lvalue Var 0x128140a60 'type' 'unsigned int'
    | `-CompoundStmt 0x1281413a8 <col:46, line:12:2>
    |   |-DeclStmt 0x128141170 <line:8:3, col:48>
    |   | |-RecordDecl 0x128140f50 <col:3, col:10> col:10 struct swap_info_struct
    |   | `-VarDecl 0x1281410b8 <col:3, col:28> col:28 used si 'struct swap_info_struct *'
    |   `-IfStmt 0x128141388 <line:10:3, line:11:27>
    |     |-RecoveryExpr 0x1281412b8 <line:10:7, col:58> '_Bool' contains-errors
    |     `-CompoundAssignOperator 0x128141358 <line:11:4, col:27> 'unsigned long' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |       |-DeclRefExpr 0x1281412d8 <col:4> 'unsigned long' lvalue Var 0x128140af8 'nr_to_be_unused' 'unsigned long'
    |       `-RecoveryExpr 0x128141330 <col:23, col:27> '<dependent type>' contains-errors lvalue
    |         `-DeclRefExpr 0x1281412f8 <col:23> 'struct swap_info_struct *' lvalue Var 0x1281410b8 'si' 'struct swap_info_struct *'
    |-BinaryOperator 0x128141518 <line:13:2, col:34> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x128141438 <col:2, col:7> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x128141400 <col:2> 'struct sysinfo *' lvalue ParmVar 0x128128648 'val' 'struct sysinfo *'
    | `-BinaryOperator 0x1281414f8 <col:18, col:34> '<dependent type>' contains-errors '+'
    |   |-RecoveryExpr 0x1281414d8 <col:18> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x128141478 <col:34> 'unsigned long' lvalue Var 0x128140af8 'nr_to_be_unused' 'unsigned long'
    |-BinaryOperator 0x128141650 <line:14:2, col:38> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x128141570 <col:2, col:7> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x128141538 <col:2> 'struct sysinfo *' lvalue ParmVar 0x128128648 'val' 'struct sysinfo *'
    | `-BinaryOperator 0x128141630 <col:19, col:38> '<dependent type>' contains-errors '+'
    |   |-RecoveryExpr 0x128141610 <col:19> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x1281415b0 <col:38> 'unsigned long' lvalue Var 0x128140af8 'nr_to_be_unused' 'unsigned long'
    `-CallExpr 0x128141818 <line:15:2, col:24> 'int'
      |-ImplicitCastExpr 0x128141800 <col:2> 'int (*)()' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x128141750 <col:2> 'int ()' Function 0x128141698 'spin_unlock' 'int ()'
      `-UnaryOperator 0x1281417e8 <col:14, col:15> 'int (*)()' prefix '&' cannot overflow
        `-DeclRefExpr 0x1281417c8 <col:15> 'int ()' Function 0x128140c28 'spin_lock' 'int ()'
