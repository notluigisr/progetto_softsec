`-FunctionDecl 0x145827400  line:1:17 invalid sys_oabi_semtimedop 'int (int, struct oabi_sembuf)'
  |-ParmVarDecl 0x14580dcf0 <col:37, col:41> col:41 used semid 'int'
  |-ParmVarDecl 0x14580e278 <line:2:9, col:28> col:28 invalid __user 'struct oabi_sembuf'
  `-CompoundStmt 0x145122f08 <line:5:1, line:38:1>
    |-DeclStmt 0x1458276a8 <line:6:2, col:21>
    | |-RecordDecl 0x1458274b8 <col:2, col:9> col:9 struct sembuf
    | `-VarDecl 0x145827628 <col:2, col:17> col:17 used sops 'struct sembuf *'
    |-DeclStmt 0x145827838 <line:7:2, col:31>
    | |-RecordDecl 0x1458276c0 <col:2, col:9> col:9 struct timespec
    | `-VarDecl 0x1458277b8 <col:2, col:18> col:18 invalid local_timeout 'struct timespec'
    |-DeclStmt 0x1458278d0 <line:8:2, col:10>
    | `-VarDecl 0x145827868 <col:2, col:7> col:7 used err 'long'
    |-DeclStmt 0x145827968 <line:9:2, col:7>
    | `-VarDecl 0x145827900 <col:2, col:6> col:6 used i 'int'
    |-IfStmt 0x145827af0 <line:11:2, line:12:11>
    | |-BinaryOperator 0x145827a28 <line:11:6, col:14> 'int' '<'
    | | |-ImplicitCastExpr 0x1458279f8 <col:6> 'struct sembuf *' <LValueToRValue>
    | | | `-DeclRefExpr 0x1458279d8 <col:6> 'struct sembuf *' lvalue Var 0x145827628 'sops' 'struct sembuf *'
    | | `-ImplicitCastExpr 0x145827a10 <col:14> 'struct sembuf *' <IntegralToPointer>
    | |   `-IntegerLiteral 0x145827998 <col:14> 'int' 1
    | `-ReturnStmt 0x145827ae0 <line:12:3, col:11>
    |   `-UnaryOperator 0x145827ac8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x145827ab0 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x145827a90 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x145827e68 <line:14:2, line:15:11>
    | |-UnaryOperator 0x145827da8 <line:14:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x145827d90 <col:7> 'struct sembuf *' <LValueToRValue>
    | |   `-DeclRefExpr 0x145827d70 <col:7> 'struct sembuf *' lvalue Var 0x145827628 'sops' 'struct sembuf *'
    | `-ReturnStmt 0x145827e58 <line:15:3, col:11>
    |   `-UnaryOperator 0x145827e40 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x145827e28 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x145827e08 <col:11> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x145827ee0 <line:16:2, col:8> 'long' '='
    | |-DeclRefExpr 0x145827e88 <col:2> 'long' lvalue Var 0x145827868 'err' 'long'
    | `-ImplicitCastExpr 0x145827ec8 <col:8> 'long' <IntegralCast>
    |   `-IntegerLiteral 0x145827ea8 <col:8> 'int' 0
    |-ForStmt 0x1451227c0 <line:17:2, line:22:2>
    | |-BinaryOperator 0x145827f40 <line:17:7, col:11> 'int' '='
    | | |-DeclRefExpr 0x145827f00 <col:7> 'int' lvalue Var 0x145827900 'i' 'int'
    | | `-IntegerLiteral 0x145827f20 <col:11> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x145828020 <col:14, col:18> 'int' '<'
    | | |-ImplicitCastExpr 0x145828008 <col:14> 'struct sembuf *' <IntegralToPointer>
    | | | `-ImplicitCastExpr 0x145827fd8 <col:14> 'int' <LValueToRValue>
    | | |   `-DeclRefExpr 0x145827f60 <col:14> 'int' lvalue Var 0x145827900 'i' 'int'
    | | `-ImplicitCastExpr 0x145827ff0 <col:18> 'struct sembuf *' <LValueToRValue>
    | |   `-DeclRefExpr 0x145827fb8 <col:18> 'struct sembuf *' lvalue Var 0x145827628 'sops' 'struct sembuf *'
    | |-UnaryOperator 0x145828060 <col:25, col:26> 'int' postfix '++'
    | | `-DeclRefExpr 0x145828040 <col:25> 'int' lvalue Var 0x145827900 'i' 'int'
    | `-CompoundStmt 0x1451227a8 <col:30, line:22:2>
    |   `-ImplicitCastExpr 0x145122790 <line:21:3, col:8> '<dependent type>' contains-errors <LValueToRValue>
    |     `-RecoveryExpr 0x145122768 <col:3, col:8> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x145122748 <col:3> 'struct sembuf *' lvalue Var 0x145827628 'sops' 'struct sembuf *'
    |-IfStmt 0x1451229b8 <line:23:2, line:27:2>
    | |-RecoveryExpr 0x1451227f8 <line:23:6> '_Bool' contains-errors
    | `-CompoundStmt 0x1451229a8 <col:15, line:27:2>
    |-IfStmt 0x145122cd0 <line:28:2, line:35:2> has_else
    | |-ImplicitCastExpr 0x1451229f8 <line:28:6> 'long' <LValueToRValue>
    | | `-DeclRefExpr 0x1451229d8 <col:6> 'long' lvalue Var 0x145827868 'err' 'long'
    | |-CompoundStmt 0x145122a30 <col:11, line:30:2>
    | `-CompoundStmt 0x145122cc0 <col:9, line:35:2>
    |-CallExpr 0x145122e68 <line:36:2, col:12> 'int'
    | |-ImplicitCastExpr 0x145122e50 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x145122de0 <col:2> 'int ()' Function 0x145122d28 'kfree' 'int ()'
    | `-ImplicitCastExpr 0x145122e90 <col:8> 'struct sembuf *' <LValueToRValue>
    |   `-DeclRefExpr 0x145122e00 <col:8> 'struct sembuf *' lvalue Var 0x145827628 'sops' 'struct sembuf *'
    `-ReturnStmt 0x145122ef8 <line:37:2, col:9>
      `-ImplicitCastExpr 0x145122ee0 <col:9> 'int' <IntegralCast>
        `-ImplicitCastExpr 0x145122ec8 <col:9> 'long' <LValueToRValue>
          `-DeclRefExpr 0x145122ea8 <col:9> 'long' lvalue Var 0x145827868 'err' 'long'
