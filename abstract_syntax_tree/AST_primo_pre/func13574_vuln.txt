`-FunctionDecl 0x14c0fb318  line:1:12 invalid async_polkit_callback 'int (int *, void *, int *)' static
  |-ParmVarDecl 0x14c0fb128 <col:34, col:50> col:50 invalid reply 'int *'
  |-ParmVarDecl 0x14c0fb1a8 <col:57, col:63> col:63 used userdata 'void *'
  |-ParmVarDecl 0x14c0fb228 <col:73, col:87> col:87 invalid error 'int *'
  `-CompoundStmt 0x14c1164c0 <col:94, line:45:1>
    |-CallExpr 0x14c0fb5b0 <line:2:9, col:36> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14c0fb530 <col:9> 'int ()' Function 0x14c0fb478 '_cleanup_' 'int ()'
    | `-RecoveryExpr 0x14c0fb590 <col:19> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x14c0fb690 <line:4:9, col:14>
    | `-VarDecl 0x14c0fb628 <col:9, col:13> col:13 used r 'int'
    |-CallExpr 0x14c0fb7c8 <line:6:9, col:21> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14c0fb788 <col:9> 'int ()' Function 0x14c0fb6d0 'assert' 'int ()'
    | `-RecoveryExpr 0x14c0fb7a8 <col:16> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x14c114880 <line:7:9, col:17> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14c114800 <col:9> 'int ()' Function 0x14c0fb6d0 'assert' 'int ()'
    | `-RecoveryExpr 0x14c114860 <col:16> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x14c1149b8 <line:9:9, col:23> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14c1148a8 <col:9> 'int ()' Function 0x14c0fb6d0 'assert' 'int ()'
    | `-CXXDependentScopeMemberExpr 0x14c114970 <col:16, col:19> '<dependent type>' contains-errors lvalue ->slot
    |   `-RecoveryExpr 0x14c114950 <col:16> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x14c114cd8 <line:12:9, col:25> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14c114b68 <col:9> 'int ()' Function 0x14c0fb6d0 'assert' 'int ()'
    | `-UnaryOperator 0x14c114cc0 <col:16, col:20> '<dependent type>' contains-errors prefix '!' cannot overflow
    |   `-ImplicitCastExpr 0x14c114ca8 <col:17, col:20> '<dependent type>' contains-errors <LValueToRValue>
    |     `-CXXDependentScopeMemberExpr 0x14c114c60 <col:17, col:20> '<dependent type>' contains-errors lvalue ->reply
    |       `-RecoveryExpr 0x14c114c40 <col:17> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x14c114fb8 <line:17:9, col:38> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14c114e48 <col:9> 'int ()' Function 0x14c0fb6d0 'assert' 'int ()'
    | `-UnaryOperator 0x14c114fa0 <col:16, col:20> '<dependent type>' contains-errors prefix '!' cannot overflow
    |   `-ImplicitCastExpr 0x14c114f88 <col:17, col:20> '<dependent type>' contains-errors <LValueToRValue>
    |     `-CXXDependentScopeMemberExpr 0x14c114f40 <col:17, col:20> '<dependent type>' contains-errors lvalue ->defer_event_source
    |       `-RecoveryExpr 0x14c114f20 <col:17> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14c115450 <line:19:9, line:20:22>
    | |-BinaryOperator 0x14c1153c8 <line:19:13, col:17> 'int' '<'
    | | |-ImplicitCastExpr 0x14c1153b0 <col:13> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x14c115370 <col:13> 'int' lvalue Var 0x14c0fb628 'r' 'int'
    | | `-IntegerLiteral 0x14c115390 <col:17> 'int' 0
    | `-GotoStmt 0x14c115438 <line:20:17, col:22> 'fail' 0x14c1153e8
    |-IfStmt 0x14c115620 <line:23:9, line:24:22>
    | |-BinaryOperator 0x14c1155e8 <line:23:13, col:17> 'int' '<'
    | | |-ImplicitCastExpr 0x14c1155d0 <col:13> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x14c115590 <col:13> 'int' lvalue Var 0x14c0fb628 'r' 'int'
    | | `-IntegerLiteral 0x14c1155b0 <col:17> 'int' 0
    | `-GotoStmt 0x14c115608 <line:24:17, col:22> 'fail' 0x14c1153e8
    |-IfStmt 0x14c115c00 <line:27:9, line:28:22>
    | |-BinaryOperator 0x14c1157b8 <line:27:13, col:17> 'int' '<'
    | | |-ImplicitCastExpr 0x14c1157a0 <col:13> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x14c115760 <col:13> 'int' lvalue Var 0x14c0fb628 'r' 'int'
    | | `-IntegerLiteral 0x14c115780 <col:17> 'int' 0
    | `-GotoStmt 0x14c1157d8 <line:28:17, col:22> 'fail' 0x14c1153e8
    |-IfStmt 0x14c115dd0 <line:31:9, line:32:22>
    | |-BinaryOperator 0x14c115d98 <line:31:13, col:17> 'int' '<'
    | | |-ImplicitCastExpr 0x14c115d80 <col:13> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x14c115d40 <col:13> 'int' lvalue Var 0x14c0fb628 'r' 'int'
    | | `-IntegerLiteral 0x14c115d60 <col:17> 'int' 0
    | `-GotoStmt 0x14c115db8 <line:32:17, col:22> 'fail' 0x14c1153e8
    |-IfStmt 0x14c115fc0 <line:35:9, line:36:22>
    | |-BinaryOperator 0x14c115f88 <line:35:13, col:17> 'int' '<'
    | | |-ImplicitCastExpr 0x14c115f70 <col:13> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x14c115f30 <col:13> 'int' lvalue Var 0x14c0fb628 'r' 'int'
    | | `-IntegerLiteral 0x14c115f50 <col:17> 'int' 0
    | `-GotoStmt 0x14c115fa8 <line:36:17, col:22> 'fail' 0x14c1153e8
    |-ReturnStmt 0x14c116000 <line:38:9, col:16>
    | `-IntegerLiteral 0x14c115fe0 <col:16> 'int' 1
    |-LabelStmt 0x14c116238 <line:40:1, line:41:33> 'fail'
    | `-CallExpr 0x14c1161d8 <col:9, col:33> 'int'
    |   |-ImplicitCastExpr 0x14c1161c0 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x14c1160f0 <col:9> 'int ()' Function 0x14c116038 'log_debug_errno' 'int ()'
    |   |-ImplicitCastExpr 0x14c116208 <col:25> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x14c116110 <col:25> 'int' lvalue Var 0x14c0fb628 'r' 'int'
    |   `-ImplicitCastExpr 0x14c116220 <col:28> 'char *' <ArrayToPointerDecay>
    |     `-StringLiteral 0x14c116170 <col:28> 'char[4]' lvalue "STR"
    `-ReturnStmt 0x14c1164b0 <line:44:9, col:16>
      `-ImplicitCastExpr 0x14c116498 <col:16> 'int' <LValueToRValue>
        `-DeclRefExpr 0x14c116478 <col:16> 'int' lvalue Var 0x14c0fb628 'r' 'int'
