`-FunctionDecl 0x11f928758  line:1:5 ecryptfs_write_metadata 'int (struct dentry *)'
  |-ParmVarDecl 0x11f928648 <col:29, col:44> col:44 used ecryptfs_dentry 'struct dentry *'
  `-CompoundStmt 0x11f943b48 <line:2:1, line:50:1>
    |-DeclStmt 0x11f940e70 <line:3:2, line:4:67>
    | |-RecordDecl 0x11f940a50 <line:3:2, col:9> col:9 struct ecryptfs_crypt_stat
    | `-VarDecl 0x11f940bb8 <col:2, line:4:57> line:3:30 used crypt_stat 'struct ecryptfs_crypt_stat *' cinit
    |   `-UnaryOperator 0x11f940e40 <line:4:3, col:57> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-CXXDependentScopeMemberExpr 0x11f940df8 <col:4, col:57> '<dependent type>' contains-errors lvalue ->crypt_stat
    |       `-CallExpr 0x11f940dd0 <col:4, col:54> '<dependent type>' contains-errors
    |         |-DeclRefExpr 0x11f940d50 <col:4> 'int ()' Function 0x11f940c98 'ecryptfs_inode_to_private' 'int ()'
    |         `-RecoveryExpr 0x11f940da8 <col:30, col:47> '<dependent type>' contains-errors lvalue
    |           `-DeclRefExpr 0x11f940d70 <col:30> 'struct dentry *' lvalue ParmVar 0x11f928648 'ecryptfs_dentry' 'struct dentry *'
    |-DeclStmt 0x11f940f08 <line:5:2, col:12>
    | `-VarDecl 0x11f940ea0 <col:2, col:8> col:8 used virt 'char *'
    |-RecoveryExpr 0x11f941000 <line:6:2, col:16> '<dependent type>' contains-errors lvalue
    | |-UnaryExprOrTypeTraitExpr 0x11f940fe0 <col:2, col:9> 'unsigned long' contains-errors sizeof
    | | `-RecoveryExpr 0x11f940fc0 <col:9> '<dependent type>' contains-errors lvalue
    | `-IntegerLiteral 0x11f940f58 <col:16> 'int' 0
    |-DeclStmt 0x11f9410d0 <line:7:2, col:12>
    | `-VarDecl 0x11f941048 <col:2, col:11> col:6 used rc 'int' cinit
    |   `-IntegerLiteral 0x11f9410b0 <col:11> 'int' 0
    |-IfStmt 0x11f941800 <line:9:2, line:20:2> has_else
    | |-CallExpr 0x11f9412e8 <line:9:6, col:51> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x11f9411c8 <col:6> 'int ()' Function 0x11f941110 'likely' 'int ()'
    | | `-BinaryOperator 0x11f9412c8 <col:13, col:33> '<dependent type>' contains-errors '&'
    | |   |-RecoveryExpr 0x11f941220 <col:13, col:25> '<dependent type>' contains-errors lvalue
    | |   | `-DeclRefExpr 0x11f9411e8 <col:13> 'struct ecryptfs_crypt_stat *' contains-errors lvalue Var 0x11f940bb8 'crypt_stat' 'struct ecryptfs_crypt_stat *'
    | |   `-RecoveryExpr 0x11f9412a8 <col:33> '<dependent type>' contains-errors lvalue
    | |-CompoundStmt 0x11f941680 <col:54, line:15:2>
    | | `-IfStmt 0x11f941660 <line:10:3, line:14:3>
    | |   |-RecoveryExpr 0x11f9413a8 <line:10:7, col:47> '_Bool' contains-errors
    | |   `-CompoundStmt 0x11f941640 <col:50, line:14:3>
    | |     |-BinaryOperator 0x11f9415b8 <line:12:4, col:10> 'int' contains-errors '='
    | |     | |-DeclRefExpr 0x11f9414e0 <col:4> 'int' lvalue Var 0x11f941048 'rc' 'int'
    | |     | `-UnaryOperator 0x11f9415a0 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow
    | |     |   `-ImplicitCastExpr 0x11f941588 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    | |     |     `-RecoveryExpr 0x11f941568 <col:10> '<dependent type>' contains-errors lvalue
    | |     `-GotoStmt 0x11f941628 <line:13:4, col:9> 'out' 0x11f9415d8
    | `-CompoundStmt 0x11f9417e0 <line:15:9, line:20:2>
    |   |-BinaryOperator 0x11f9417a8 <line:18:3, col:9> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x11f9416d0 <col:3> 'int' lvalue Var 0x11f941048 'rc' 'int'
    |   | `-UnaryOperator 0x11f941790 <col:8, col:9> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |   `-ImplicitCastExpr 0x11f941778 <col:9> '<dependent type>' contains-errors <LValueToRValue>
    |   |     `-RecoveryExpr 0x11f941758 <col:9> '<dependent type>' contains-errors lvalue
    |   `-GotoStmt 0x11f9417c8 <line:19:3, col:8> 'out' 0x11f9415d8
    |-IfStmt 0x11f942e88 <line:23:2, line:27:2>
    | |-UnaryOperator 0x11f9419e0 <line:23:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x11f9419c8 <col:7> 'char *' <LValueToRValue>
    | |   `-DeclRefExpr 0x11f9419a8 <col:7> 'char *' lvalue Var 0x11f940ea0 'virt' 'char *'
    | `-CompoundStmt 0x11f942e70 <col:13, line:27:2>
    |   `-GotoStmt 0x11f942e58 <line:26:3, col:8> 'out' 0x11f9415d8
    |-IfStmt 0x11f943368 <line:30:2, line:34:2>
    | |-CallExpr 0x11f943198 <line:30:6, col:17> 'int'
    | | |-ImplicitCastExpr 0x11f943180 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x11f943108 <col:6> 'int ()' Function 0x11f943050 'unlikely' 'int ()'
    | | `-ImplicitCastExpr 0x11f9431c0 <col:15> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x11f943128 <col:15> 'int' lvalue Var 0x11f941048 'rc' 'int'
    | `-CompoundStmt 0x11f943350 <col:20, line:34:2>
    |   `-GotoStmt 0x11f943338 <line:33:3, col:8> 'out_free' 0x11f9432e8
    |-IfStmt 0x11f9437c8 <line:35:2, line:40:30> has_else
    | |-RecoveryExpr 0x11f9433e8 <line:35:6, col:26> '_Bool' contains-errors
    | |-NullStmt 0x11f9437c0 <line:36:3>
    | `-BinaryOperator 0x11f9437a0 <line:39:3, line:40:30> 'int' contains-errors '='
    |   |-DeclRefExpr 0x11f943588 <line:39:3> 'int' lvalue Var 0x11f941048 'rc' 'int'
    |   `-CallExpr 0x11f943720 <col:8, line:40:30> 'int' contains-errors
    |     |-ImplicitCastExpr 0x11f943708 <line:39:8> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x11f943688 <col:8> 'int ()' Function 0x11f9435d0 'ecryptfs_write_metadata_to_contents' 'int ()'
    |     |-ImplicitCastExpr 0x11f943758 <col:44> 'struct ecryptfs_crypt_stat *' contains-errors <LValueToRValue>
    |     | `-DeclRefExpr 0x11f9436a8 <col:44> 'struct ecryptfs_crypt_stat *' contains-errors lvalue Var 0x11f940bb8 'crypt_stat' 'struct ecryptfs_crypt_stat *'
    |     |-ImplicitCastExpr 0x11f943770 <line:40:9> 'struct dentry *' <LValueToRValue>
    |     | `-DeclRefExpr 0x11f9436c8 <col:9> 'struct dentry *' lvalue ParmVar 0x11f928648 'ecryptfs_dentry' 'struct dentry *'
    |     `-ImplicitCastExpr 0x11f943788 <col:26> 'char *' <LValueToRValue>
    |       `-DeclRefExpr 0x11f9436e8 <col:26> 'char *' lvalue Var 0x11f940ea0 'virt' 'char *'
    |-IfStmt 0x11f9438e8 <line:41:2, line:45:2>
    | |-ImplicitCastExpr 0x11f943818 <line:41:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x11f9437f8 <col:6> 'int' lvalue Var 0x11f941048 'rc' 'int'
    | `-CompoundStmt 0x11f9438d0 <col:10, line:45:2>
    |   `-GotoStmt 0x11f9438b8 <line:44:3, col:8> 'out_free' 0x11f9432e8
    |-LabelStmt 0x11f943ac0 <line:46:1, line:47:31> 'out_free'
    | `-CallExpr 0x11f943a98 <col:2, col:31> 'int'
    |   |-ImplicitCastExpr 0x11f943a80 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x11f9439e8 <col:2> 'int ()' Function 0x11f943930 'free_page' 'int ()'
    |   `-CStyleCastExpr 0x11f943a58 <col:12, col:27> 'unsigned long' <PointerToIntegral>
    |     `-ImplicitCastExpr 0x11f943a40 <col:27> 'char *' <LValueToRValue> part_of_explicit_cast
    |       `-DeclRefExpr 0x11f943a08 <col:27> 'char *' lvalue Var 0x11f940ea0 'virt' 'char *'
    `-LabelStmt 0x11f943b28 <line:48:1, line:49:9> 'out'
      `-ReturnStmt 0x11f943b18 <col:2, col:9>
        `-ImplicitCastExpr 0x11f943b00 <col:9> 'int' <LValueToRValue>
          `-DeclRefExpr 0x11f943ae0 <col:9> 'int' lvalue Var 0x11f941048 'rc' 'int'
