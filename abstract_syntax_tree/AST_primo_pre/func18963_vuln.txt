`-FunctionDecl 0x134928288  line:1:8 invalid cJSON_CreateIntArray 'int *(int *, int)'
  |-ParmVarDecl 0x134928128 <col:30, col:39> col:39 invalid numbers 'int *'
  |-ParmVarDecl 0x1349281a8 <col:48, col:52> col:52 used count 'int'
  `-CompoundStmt 0x135009bc0 <line:2:1, line:14:1>
    |-DeclStmt 0x1349283c0 <line:3:2, col:7>
    | `-VarDecl 0x134928358 <col:2, col:6> col:6 used i 'int'
    |-ForStmt 0x135009b40 <line:5:2, line:12:2>
    | |-BinaryOperator 0x134928728 <line:5:8, col:12> 'int' '='
    | | |-DeclRefExpr 0x1349286e8 <col:8> 'int' lvalue Var 0x134928358 'i' 'int'
    | | `-IntegerLiteral 0x134928708 <col:12> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x135009690 <col:15, col:24> 'int' contains-errors '&&'
    | | |-RecoveryExpr 0x135009620 <col:15> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x135009670 <col:20, col:24> 'int' '<'
    | |   |-ImplicitCastExpr 0x135009640 <col:20> 'int' <LValueToRValue>
    | |   | `-DeclRefExpr 0x134928760 <col:20> 'int' lvalue Var 0x134928358 'i' 'int'
    | |   `-ImplicitCastExpr 0x135009658 <col:24> 'int' <LValueToRValue>
    | |     `-DeclRefExpr 0x134928780 <col:24> 'int' lvalue ParmVar 0x1349281a8 'count' 'int'
    | |-UnaryOperator 0x1350096d0 <col:31, col:33> 'int' prefix '++'
    | | `-DeclRefExpr 0x1350096b0 <col:33> 'int' lvalue Var 0x134928358 'i' 'int'
    | `-CompoundStmt 0x135009b28 <col:37, line:12:2>
    |   `-IfStmt 0x135009ae0 <line:7:3, line:10:24> has_else
    |     |-UnaryOperator 0x1350098d8 <line:7:8, col:10> 'int' prefix '!' cannot overflow
    |     | `-ImplicitCastExpr 0x1350098c0 <col:10> 'int' <LValueToRValue>
    |     |   `-DeclRefExpr 0x1350098a0 <col:10> 'int' lvalue Var 0x134928358 'i' 'int'
    |     |-NullStmt 0x135009ad8 <line:8:4>
    |     `-CallExpr 0x135009aa8 <line:10:4, col:24> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x1350099e8 <col:4> 'int ()' Function 0x135009930 'suffix_object' 'int ()'
    |       |-RecoveryExpr 0x135009a68 <col:19> '<dependent type>' contains-errors lvalue
    |       `-RecoveryExpr 0x135009a88 <col:22> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x135009bb0 <line:13:2, col:9>
      `-RecoveryExpr 0x135009b90 <col:9> '<dependent type>' contains-errors lvalue
