`-FunctionDecl 0x127813f10  line:1:13 invalid transit 'void (int *, const char *, int)' static
  |-ParmVarDecl 0x127813d28 <col:21, col:33> col:33 referenced invalid session 'int *'
  |-ParmVarDecl 0x127813da8 <col:42, col:54> col:54 used action 'const char *'
  |-ParmVarDecl 0x127813e28 <col:62, col:79> col:79 invalid nstate 'int'
  `-CompoundStmt 0x127830200 <line:2:1, line:58:1>
    |-DeclStmt 0x1278140e8 <line:4:5, col:23>
    | |-VarDecl 0x127813fe8 <col:5, col:9> col:9 used ostate 'int'
    | `-VarDecl 0x127814068 <col:5, col:17> col:17 used loglvl 'int'
    |-DeclStmt 0x127814180 <line:5:5, col:18>
    | `-VarDecl 0x127814118 <col:5, col:17> col:17 used s 'const char *'
    `-IfStmt 0x12782f1c0 <line:7:5, line:57:5>
      |-BinaryOperator 0x127814220 <line:7:9, col:27> 'int' contains-errors '!='
      | |-CXXDependentScopeMemberExpr 0x1278141b8 <col:9, col:18> '<dependent type>' contains-errors lvalue ->state
      | | `-RecoveryExpr 0x127814198 <col:9> '<dependent type>' contains-errors lvalue
      | `-RecoveryExpr 0x127814200 <col:27> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x12782f188 <col:35, line:57:5>
        |-BinaryOperator 0x1278142c8 <line:8:9, col:27> 'int' contains-errors '='
        | |-DeclRefExpr 0x127814240 <col:9> 'int' lvalue Var 0x127813fe8 'ostate' 'int'
        | `-CXXDependentScopeMemberExpr 0x127814280 <col:18, col:27> '<dependent type>' contains-errors lvalue ->state
        |   `-RecoveryExpr 0x127814260 <col:18> '<dependent type>' contains-errors lvalue
        |-BinaryOperator 0x127814398 <line:9:9, col:26> '<dependent type>' contains-errors '='
        | |-CXXDependentScopeMemberExpr 0x127814330 <col:9, col:18> '<dependent type>' contains-errors lvalue ->state
        | | `-RecoveryExpr 0x127814308 <col:9> '<dependent type>' contains-errors lvalue
        | |   `-DeclRefExpr 0x1278142e8 <col:9> 'int *' lvalue ParmVar 0x127813d28 'session' 'int *'
        | `-RecoveryExpr 0x127814378 <col:26> '<dependent type>' contains-errors lvalue
        |-BinaryOperator 0x12782c840 <line:11:9, col:18> 'int' contains-errors '='
        | |-DeclRefExpr 0x1278143b8 <col:9> 'int' lvalue Var 0x127814068 'loglvl' 'int'
        | `-RecoveryExpr 0x12782c820 <col:18> '<dependent type>' contains-errors lvalue
        |-IfStmt 0x12782cad0 <line:12:9, line:15:9>
        | |-RecoveryExpr 0x12782ca00 <line:12:13, line:13:77> '_Bool' contains-errors
        | `-CompoundStmt 0x12782cab8 <col:79, line:15:9>
        |   `-BinaryOperator 0x12782ca98 <line:14:13, col:22> 'int' contains-errors '='
        |     |-DeclRefExpr 0x12782ca20 <col:13> 'int' lvalue Var 0x127814068 'loglvl' 'int'
        |     `-RecoveryExpr 0x12782ca78 <col:22> '<dependent type>' contains-errors lvalue
        `-SwitchStmt 0x12782d260 <line:22:9, line:56:9>
          |-ImplicitCastExpr 0x12782d248 <line:22:17, col:26> '<dependent type>' contains-errors <LValueToRValue>
          | `-CXXDependentScopeMemberExpr 0x12782d200 <col:17, col:26> '<dependent type>' contains-errors lvalue ->state
          |   `-RecoveryExpr 0x12782d1e0 <col:17> '<dependent type>' contains-errors lvalue
          `-CompoundStmt 0x12782f158 <col:33, line:56:9>
            |-IfStmt 0x12782ee28 <line:24:17, line:44:17> has_else
            | |-UnaryOperator 0x12782d368 <line:24:21, col:38> '<dependent type>' contains-errors prefix '!' cannot overflow
            | | `-ImplicitCastExpr 0x12782d350 <col:22, col:38> '<dependent type>' contains-errors <LValueToRValue>
            | |   `-CXXDependentScopeMemberExpr 0x12782d308 <col:22, col:38> '<dependent type>' contains-errors lvalue .emitted_count
            | |     `-CXXDependentScopeMemberExpr 0x12782d2c0 <col:22, col:31> '<dependent type>' contains-errors lvalue ->remote
            | |       `-RecoveryExpr 0x12782d2a0 <col:22> '<dependent type>' contains-errors lvalue
            | |-CompoundStmt 0x12782ea00 <col:53, line:33:17>
            | | |-BinaryOperator 0x12782d6c8 <line:26:21, col:84> '<dependent type>' contains-errors '='
            | | | |-CXXDependentScopeMemberExpr 0x12782d3c8 <col:21, col:30> '<dependent type>' contains-errors lvalue ->idle_sync_until
            | | | | `-RecoveryExpr 0x12782d3a0 <col:21> '<dependent type>' contains-errors lvalue
            | | | |   `-DeclRefExpr 0x12782d380 <col:21> 'int *' lvalue ParmVar 0x127813d28 'session' 'int *'
            | | | `-BinaryOperator 0x12782d6a8 <col:48, col:84> 'int' '+'
            | | |   |-CallExpr 0x12782d528 <col:48, col:61> 'int'
            | | |   | `-ImplicitCastExpr 0x12782d510 <col:48> 'int (*)()' <FunctionToPointerDecay>
            | | |   |   `-DeclRefExpr 0x12782d4f0 <col:48> 'int ()' Function 0x12782d438 'apr_time_now' 'int ()'
            | | |   `-CallExpr 0x12782d680 <col:65, col:84> 'int'
            | | |     |-ImplicitCastExpr 0x12782d668 <col:65> 'int (*)()' <FunctionToPointerDecay>
            | | |     | `-DeclRefExpr 0x12782d628 <col:65> 'int ()' Function 0x12782d570 'apr_time_from_sec' 'int ()'
            | | |     `-IntegerLiteral 0x12782d648 <col:83> 'int' 1
            | | `-BinaryOperator 0x12782d758 <line:27:21, col:25> 'const char *' '='
            | |   |-DeclRefExpr 0x12782d6e8 <col:21> 'const char *' lvalue Var 0x127814118 's' 'const char *'
            | |   `-ImplicitCastExpr 0x12782d740 <col:25> 'const char *' <NoOp>
            | |     `-ImplicitCastExpr 0x12782d728 <col:25> 'char *' <ArrayToPointerDecay>
            | |       `-StringLiteral 0x12782d708 <col:25> 'char[4]' lvalue "STR"
            | `-IfStmt 0x12782edf8 <line:34:22, line:44:17> has_else
            |   |-CXXDependentScopeMemberExpr 0x12782ea40 <line:34:26, col:35> '<dependent type>' contains-errors lvalue ->open_streams
            |   | `-RecoveryExpr 0x12782ea20 <col:26> '<dependent type>' contains-errors lvalue
            |   |-CompoundStmt 0x12782ec28 <col:49, line:38:17>
            |   | `-BinaryOperator 0x12782eaf8 <line:35:21, col:25> 'const char *' '='
            |   |   |-DeclRefExpr 0x12782ea88 <col:21> 'const char *' lvalue Var 0x127814118 's' 'const char *'
            |   |   `-ImplicitCastExpr 0x12782eae0 <col:25> 'const char *' <NoOp>
            |   |     `-ImplicitCastExpr 0x12782eac8 <col:25> 'char *' <ArrayToPointerDecay>
            |   |       `-StringLiteral 0x12782eaa8 <col:25> 'char[4]' lvalue "STR"
            |   `-CompoundStmt 0x12782ede0 <line:39:22, line:44:17>
            |     `-BinaryOperator 0x12782ecb0 <line:41:21, col:25> 'const char *' '='
            |       |-DeclRefExpr 0x12782ec40 <col:21> 'const char *' lvalue Var 0x127814118 's' 'const char *'
            |       `-ImplicitCastExpr 0x12782ec98 <col:25> 'const char *' <NoOp>
            |         `-ImplicitCastExpr 0x12782ec80 <col:25> 'char *' <ArrayToPointerDecay>
            |           `-StringLiteral 0x12782ec60 <col:25> 'char[4]' lvalue "STR"
            |-BreakStmt 0x12782f0c0 <line:49:17>
            |-BreakStmt 0x12782f128 <line:52:17>
            `-DefaultStmt 0x12782f138 <line:53:13, line:55:17>
              `-BreakStmt 0x12782f130 <col:17>
