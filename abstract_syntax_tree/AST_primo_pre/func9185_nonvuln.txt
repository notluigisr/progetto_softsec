`-FunctionDecl 0x141128708  line:1:13 referenced json_tokener_error_desc 'const char *(enum json_tokener_error)'
  |-ParmVarDecl 0x1411285f8 <col:37, col:61> col:61 invalid jerr 'enum json_tokener_error'
  `-CompoundStmt 0x141140e98 <line:2:1, line:7:1>
    |-DeclStmt 0x141140ae0 <line:3:2, col:26>
    | `-VarDecl 0x141140a18 <col:2, col:22> col:6 used jerr_int 'int' cinit
    |   `-CStyleCastExpr 0x141140ab8 <col:17, col:22> 'int' contains-errors <Dependent>
    |     `-RecoveryExpr 0x141140a80 <col:22> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x141140dc0 <line:4:2, line:5:10>
    | |-RecoveryExpr 0x141140cf8 <line:4:6, col:100> '_Bool' contains-errors
    | `-ReturnStmt 0x141140db0 <line:5:3, col:10>
    |   `-ImplicitCastExpr 0x141140d98 <col:10> 'const char *' <NoOp>
    |     `-ImplicitCastExpr 0x141140d80 <col:10> 'char *' <ArrayToPointerDecay>
    |       `-StringLiteral 0x141140d60 <col:10> 'char[4]' lvalue "STR"
    `-ReturnStmt 0x141140e88 <line:6:2, col:33>
      `-ArraySubscriptExpr 0x141140e68 <col:9, col:33> '<dependent type>' contains-errors lvalue
        |-ImplicitCastExpr 0x141140e38 <col:9> 'const char *(*)(enum json_tokener_error)' <FunctionToPointerDecay>
        | `-DeclRefExpr 0x141140e18 <col:9> 'const char *(enum json_tokener_error)' Function 0x141128708 'json_tokener_error_desc' 'const char *(enum json_tokener_error)'
        `-ImplicitCastExpr 0x141140e50 <col:29> '<dependent type>' contains-errors <LValueToRValue>
          `-RecoveryExpr 0x141140df8 <col:29> '<dependent type>' contains-errors lvalue
