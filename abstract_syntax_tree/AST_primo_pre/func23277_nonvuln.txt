`-FunctionDecl 0x14b00e038  line:1:1 invalid compile_range_repeat_node 'int (int *, int, int, int *, int *)'
  |-ParmVarDecl 0x14b00dd28 <col:27, col:38> col:38 invalid qn 'int *'
  |-ParmVarDecl 0x14b00dda8 <col:42, col:46> col:46 used target_len 'int'
  |-ParmVarDecl 0x14b00de28 <col:58, col:62> col:62 used empty_info 'int'
  |-ParmVarDecl 0x14b00dea8 <line:2:27, col:36> col:36 invalid reg 'int *'
  |-ParmVarDecl 0x14b00df28 <col:41, col:50> col:50 invalid env 'int *'
  `-CompoundStmt 0x14b02a050 <line:3:1, line:33:1>
    |-DeclStmt 0x14b00e188 <line:4:3, col:8>
    | `-VarDecl 0x14b00e120 <col:3, col:7> col:7 used r 'int'
    |-DeclStmt 0x14b00e2a0 <line:5:3, col:37>
    | `-VarDecl 0x14b00e1b8 <col:3, col:35> col:7 used num_repeat 'int' cinit
    |   `-UnaryOperator 0x14b00e288 <col:20, col:35> '<dependent type>' contains-errors postfix '++' cannot overflow
    |     `-CXXDependentScopeMemberExpr 0x14b00e240 <col:20, col:25> '<dependent type>' contains-errors lvalue ->num_repeat
    |       `-RecoveryExpr 0x14b00e220 <col:20> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x14b0276b0 <line:7:3, col:56> 'int' contains-errors '='
    | |-DeclRefExpr 0x14b00e2b8 <col:3> 'int' lvalue Var 0x14b00e120 'r' 'int'
    | `-CallExpr 0x14b027680 <col:7, col:56> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14b0274b8 <col:7> 'int ()' Function 0x14b027400 'add_op' 'int ()'
    |   |-RecoveryExpr 0x14b0274d8 <col:14> '<dependent type>' contains-errors lvalue
    |   `-ConditionalOperator 0x14b027650 <col:19, col:44> '<dependent type>' contains-errors
    |     |-CXXDependentScopeMemberExpr 0x14b027518 <col:19, col:23> '<dependent type>' contains-errors lvalue ->greedy
    |     | `-RecoveryExpr 0x14b0274f8 <col:19> '<dependent type>' contains-errors lvalue
    |     |-RecoveryExpr 0x14b027610 <col:32> '<dependent type>' contains-errors lvalue
    |     `-RecoveryExpr 0x14b027630 <col:44> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14b027790 <line:8:3, col:22>
    | |-BinaryOperator 0x14b027728 <col:7, col:12> 'int' '!='
    | | |-ImplicitCastExpr 0x14b027710 <col:7> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x14b0276d0 <col:7> 'int' lvalue Var 0x14b00e120 'r' 'int'
    | | `-IntegerLiteral 0x14b0276f0 <col:12> 'int' 0
    | `-ReturnStmt 0x14b027780 <col:15, col:22>
    |   `-ImplicitCastExpr 0x14b027768 <col:22> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x14b027748 <col:22> 'int' lvalue Var 0x14b00e120 'r' 'int'
    |-BinaryOperator 0x14b0279a8 <line:10:3, col:27> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x14b027940 <col:3, col:20> '<dependent type>' contains-errors lvalue .id
    | | `-CXXDependentScopeMemberExpr 0x14b0278f8 <col:3, col:13> '<dependent type>' contains-errors lvalue ->repeat
    | |   `-CallExpr 0x14b0278d0 <col:3, col:10> '<dependent type>' contains-errors
    | |     |-DeclRefExpr 0x14b027890 <col:3> 'int ()' Function 0x14b0277d8 'COP' 'int ()'
    | |     `-RecoveryExpr 0x14b0278b0 <col:7> '<dependent type>' contains-errors lvalue
    | `-DeclRefExpr 0x14b027988 <col:27> 'int' contains-errors lvalue Var 0x14b00e1b8 'num_repeat' 'int'
    |-BinaryOperator 0x14b027bf0 <line:11:3, col:54> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x14b027a78 <col:3, col:20> '<dependent type>' contains-errors lvalue .addr
    | | `-CXXDependentScopeMemberExpr 0x14b027a30 <col:3, col:13> '<dependent type>' contains-errors lvalue ->repeat
    | |   `-CallExpr 0x14b027a08 <col:3, col:10> '<dependent type>' contains-errors
    | |     |-DeclRefExpr 0x14b0279c8 <col:3> 'int ()' Function 0x14b0277d8 'COP' 'int ()'
    | |     `-RecoveryExpr 0x14b0279e8 <col:7> '<dependent type>' contains-errors lvalue
    | `-BinaryOperator 0x14b027bd0 <col:27, col:54> '<dependent type>' contains-errors '+'
    |   |-BinaryOperator 0x14b027b90 <col:27, col:41> '<dependent type>' contains-errors '+'
    |   | |-RecoveryExpr 0x14b027b70 <col:27> '<dependent type>' contains-errors lvalue
    |   | `-DeclRefExpr 0x14b027ad8 <col:41> 'int' lvalue ParmVar 0x14b00dda8 'target_len' 'int'
    |   `-RecoveryExpr 0x14b027bb0 <col:54> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x14b027e80 <line:13:3, col:63> 'int' contains-errors '='
    | |-DeclRefExpr 0x14b027c10 <col:3> 'int' lvalue Var 0x14b00e120 'r' 'int'
    | `-CallExpr 0x14b027e40 <col:7, col:63> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14b027d10 <col:7> 'int ()' Function 0x14b027c58 'entry_repeat_range' 'int ()'
    |   |-RecoveryExpr 0x14b027d30 <col:26> '<dependent type>' contains-errors lvalue
    |   |-DeclRefExpr 0x14b027d50 <col:31> 'int' contains-errors lvalue Var 0x14b00e1b8 'num_repeat' 'int'
    |   |-CXXDependentScopeMemberExpr 0x14b027d90 <col:43, col:47> '<dependent type>' contains-errors lvalue ->lower
    |   | `-RecoveryExpr 0x14b027d70 <col:43> '<dependent type>' contains-errors lvalue
    |   `-CXXDependentScopeMemberExpr 0x14b027df8 <col:54, col:58> '<dependent type>' contains-errors lvalue ->upper
    |     `-RecoveryExpr 0x14b027dd8 <col:54> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14b027f60 <line:14:3, col:22>
    | |-BinaryOperator 0x14b027ef8 <col:7, col:12> 'int' '!='
    | | |-ImplicitCastExpr 0x14b027ee0 <col:7> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x14b027ea0 <col:7> 'int' lvalue Var 0x14b00e120 'r' 'int'
    | | `-IntegerLiteral 0x14b027ec0 <col:12> 'int' 0
    | `-ReturnStmt 0x14b027f50 <col:15, col:22>
    |   `-ImplicitCastExpr 0x14b027f38 <col:22> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x14b027f18 <col:22> 'int' lvalue Var 0x14b00e120 'r' 'int'
    |-BinaryOperator 0x14b028288 <line:16:3, col:73> 'int' contains-errors '='
    | |-DeclRefExpr 0x14b027f80 <col:3> 'int' lvalue Var 0x14b00e120 'r' 'int'
    | `-CallExpr 0x14b028248 <col:7, col:73> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14b028080 <col:7> 'int ()' Function 0x14b027fc8 'compile_tree_empty_check' 'int ()'
    |   |-CallExpr 0x14b0281c0 <col:32, col:50> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x14b028180 <col:32> 'int ()' Function 0x14b0280c8 'NODE_QUANT_BODY' 'int ()'
    |   | `-RecoveryExpr 0x14b0281a0 <col:48> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x14b0281e8 <col:53> '<dependent type>' contains-errors lvalue
    |   |-DeclRefExpr 0x14b028208 <col:58> 'int' lvalue ParmVar 0x14b00de28 'empty_info' 'int'
    |   `-RecoveryExpr 0x14b028228 <col:70> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14b028368 <line:17:3, col:22>
    | |-BinaryOperator 0x14b028300 <col:7, col:12> 'int' '!='
    | | |-ImplicitCastExpr 0x14b0282e8 <col:7> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x14b0282a8 <col:7> 'int' lvalue Var 0x14b00e120 'r' 'int'
    | | `-IntegerLiteral 0x14b0282c8 <col:12> 'int' 0
    | `-ReturnStmt 0x14b028358 <col:15, col:22>
    |   `-ImplicitCastExpr 0x14b028340 <col:22> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x14b028320 <col:22> 'int' lvalue Var 0x14b00e120 'r' 'int'
    |-IfStmt 0x14b029dc0 <line:19:3, line:28:3> has_else
    | |-CallExpr 0x14b0298f8 <line:23:7, col:32> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x14b0298b8 <col:7> 'int ()' Function 0x14b029800 'NODE_IS_IN_REAL_REPEAT' 'int ()'
    | | `-RecoveryExpr 0x14b0298d8 <col:30> '<dependent type>' contains-errors lvalue
    | |-CompoundStmt 0x14b029b58 <col:35, line:25:3>
    | | `-BinaryOperator 0x14b029b38 <line:24:5, col:72> 'int' contains-errors '='
    | |   |-DeclRefExpr 0x14b029920 <col:5> 'int' lvalue Var 0x14b00e120 'r' 'int'
    | |   `-CallExpr 0x14b029b08 <col:9, col:72> '<dependent type>' contains-errors
    | |     |-DeclRefExpr 0x14b029940 <col:9> 'int ()' Function 0x14b027400 'add_op' 'int ()'
    | |     |-RecoveryExpr 0x14b029960 <col:16> '<dependent type>' contains-errors lvalue
    | |     `-ConditionalOperator 0x14b029ad8 <col:21, col:53> '<dependent type>' contains-errors
    | |       |-CXXDependentScopeMemberExpr 0x14b0299a0 <col:21, col:25> '<dependent type>' contains-errors lvalue ->greedy
    | |       | `-RecoveryExpr 0x14b029980 <col:21> '<dependent type>' contains-errors lvalue
    | |       |-RecoveryExpr 0x14b029a98 <col:34> '<dependent type>' contains-errors lvalue
    | |       `-RecoveryExpr 0x14b029ab8 <col:53> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x14b029da8 <line:26:8, line:28:3>
    |   `-BinaryOperator 0x14b029d88 <line:27:5, col:66> 'int' contains-errors '='
    |     |-DeclRefExpr 0x14b029b70 <col:5> 'int' lvalue Var 0x14b00e120 'r' 'int'
    |     `-CallExpr 0x14b029d58 <col:9, col:66> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x14b029b90 <col:9> 'int ()' Function 0x14b027400 'add_op' 'int ()'
    |       |-RecoveryExpr 0x14b029bb0 <col:16> '<dependent type>' contains-errors lvalue
    |       `-ConditionalOperator 0x14b029d28 <col:21, col:50> '<dependent type>' contains-errors
    |         |-CXXDependentScopeMemberExpr 0x14b029bf0 <col:21, col:25> '<dependent type>' contains-errors lvalue ->greedy
    |         | `-RecoveryExpr 0x14b029bd0 <col:21> '<dependent type>' contains-errors lvalue
    |         |-RecoveryExpr 0x14b029ce8 <col:34> '<dependent type>' contains-errors lvalue
    |         `-RecoveryExpr 0x14b029d08 <col:50> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14b029eb0 <line:29:3, col:22>
    | |-BinaryOperator 0x14b029e48 <col:7, col:12> 'int' '!='
    | | |-ImplicitCastExpr 0x14b029e30 <col:7> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x14b029df0 <col:7> 'int' lvalue Var 0x14b00e120 'r' 'int'
    | | `-IntegerLiteral 0x14b029e10 <col:12> 'int' 0
    | `-ReturnStmt 0x14b029ea0 <col:15, col:22>
    |   `-ImplicitCastExpr 0x14b029e88 <col:22> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x14b029e68 <col:22> 'int' lvalue Var 0x14b00e120 'r' 'int'
    |-BinaryOperator 0x14b029fe8 <line:31:3, col:29> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x14b029f80 <col:3, col:24> '<dependent type>' contains-errors lvalue .id
    | | `-CXXDependentScopeMemberExpr 0x14b029f38 <col:3, col:13> '<dependent type>' contains-errors lvalue ->repeat_inc
    | |   `-CallExpr 0x14b029f10 <col:3, col:10> '<dependent type>' contains-errors
    | |     |-DeclRefExpr 0x14b029ed0 <col:3> 'int ()' Function 0x14b0277d8 'COP' 'int ()'
    | |     `-RecoveryExpr 0x14b029ef0 <col:7> '<dependent type>' contains-errors lvalue
    | `-DeclRefExpr 0x14b029fc8 <col:29> 'int' contains-errors lvalue Var 0x14b00e1b8 'num_repeat' 'int'
    `-ReturnStmt 0x14b02a040 <line:32:3, col:10>
      `-ImplicitCastExpr 0x14b02a028 <col:10> 'int' <LValueToRValue>
        `-DeclRefExpr 0x14b02a008 <col:10> 'int' lvalue Var 0x14b00e120 'r' 'int'
