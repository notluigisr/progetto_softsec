`-FunctionDecl 0x16000ddc8  line:1:25 referenced invalid syscall_filter_set_find 'const int *(const char *)'
  |-ParmVarDecl 0x16000dcf0 <col:49, col:61> col:61 used name 'const char *'
  `-CompoundStmt 0x160028100 <col:67, line:12:1>
    |-DeclStmt 0x16000def8 <line:2:9, col:19>
    | `-VarDecl 0x16000de90 <col:9, col:18> col:18 used i 'unsigned int'
    |-IfStmt 0x16000e280 <line:4:9, line:5:24>
    | |-BinaryOperator 0x16000e218 <line:4:13, col:41> 'int' '||'
    | | |-CallExpr 0x16000e0f8 <col:13, col:25> 'int'
    | | | |-ImplicitCastExpr 0x16000e0e0 <col:13> 'int (*)()' <FunctionToPointerDecay>
    | | | | `-DeclRefExpr 0x16000e070 <col:13> 'int ()' Function 0x16000dfb8 'isempty' 'int ()'
    | | | `-ImplicitCastExpr 0x16000e120 <col:21> 'const char *' <LValueToRValue>
    | | |   `-DeclRefExpr 0x16000e090 <col:21> 'const char *' lvalue ParmVar 0x16000dcf0 'name' 'const char *'
    | | `-BinaryOperator 0x16000e1f8 <col:30, col:41> 'int' '!='
    | |   |-ImplicitCastExpr 0x16000e1e0 <col:30, col:36> 'int' <IntegralCast>
    | |   | `-ImplicitCastExpr 0x16000e1c8 <col:30, col:36> 'char' <LValueToRValue>
    | |   |   `-ArraySubscriptExpr 0x16000e190 <col:30, col:36> 'const char' lvalue
    | |   |     |-ImplicitCastExpr 0x16000e178 <col:30> 'const char *' <LValueToRValue>
    | |   |     | `-DeclRefExpr 0x16000e138 <col:30> 'const char *' lvalue ParmVar 0x16000dcf0 'name' 'const char *'
    | |   |     `-IntegerLiteral 0x16000e158 <col:35> 'int' 0
    | |   `-CharacterLiteral 0x16000e1b0 <col:41> 'int' 64
    | `-ReturnStmt 0x16000e270 <line:5:17, col:24>
    |   `-RecoveryExpr 0x16000e250 <col:24> '<dependent type>' contains-errors lvalue
    |-ForStmt 0x160028080 <line:7:9, line:9:54>
    | |-BinaryOperator 0x16000e2f8 <line:7:14, col:18> 'unsigned int' '='
    | | |-DeclRefExpr 0x16000e2a0 <col:14> 'unsigned int' lvalue Var 0x16000de90 'i' 'unsigned int'
    | | `-ImplicitCastExpr 0x16000e2e0 <col:18> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x16000e2c0 <col:18> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x16000e390 <col:21, col:25> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x16000e318 <col:21> 'unsigned int' lvalue Var 0x16000de90 'i' 'unsigned int'
    | | `-RecoveryExpr 0x16000e370 <col:25> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x16000e3d0 <col:50, col:51> 'unsigned int' postfix '++'
    | | `-DeclRefExpr 0x16000e3b0 <col:50> 'unsigned int' lvalue Var 0x16000de90 'i' 'unsigned int'
    | `-IfStmt 0x160028060 <line:8:17, line:9:54>
    |   |-RecoveryExpr 0x160027f78 <line:8:21, col:60> '_Bool' contains-errors
    |   `-ReturnStmt 0x160028050 <line:9:25, col:54>
    |     `-BinaryOperator 0x160028030 <col:32, col:54> '<dependent type>' contains-errors '+'
    |       |-RecoveryExpr 0x160028010 <col:32> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x160027fb0 <col:54> 'unsigned int' lvalue Var 0x16000de90 'i' 'unsigned int'
    `-ReturnStmt 0x1600280f0 <line:11:9, col:16>
      `-RecoveryExpr 0x1600280d0 <col:16> '<dependent type>' contains-errors lvalue
