`-FunctionDecl 0x14d80ddf0  line:1:20 invalid vmxnet3_ring_inc 'void (int *)' static inline
  |-ParmVarDecl 0x14d80dd28 <col:37, col:50> col:50 referenced invalid ring 'int *'
  `-CompoundStmt 0x14d80e198 <line:2:1, line:7:1>
    `-IfStmt 0x14d80e178 <line:3:5, line:6:5>
      |-BinaryOperator 0x14d80df88 <line:3:9, col:31> 'int' contains-errors '>='
      | |-UnaryOperator 0x14d80df08 <col:9, col:17> '<dependent type>' contains-errors prefix '++' cannot overflow
      | | `-CXXDependentScopeMemberExpr 0x14d80dec0 <col:11, col:17> '<dependent type>' contains-errors lvalue ->next
      | |   `-RecoveryExpr 0x14d80dea0 <col:11> '<dependent type>' contains-errors lvalue
      | `-CXXDependentScopeMemberExpr 0x14d80df40 <col:25, col:31> '<dependent type>' contains-errors lvalue ->size
      |   `-RecoveryExpr 0x14d80df20 <col:25> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x14d80e158 <col:37, line:6:5>
        |-BinaryOperator 0x14d80e058 <line:4:9, col:22> '<dependent type>' contains-errors '='
        | |-CXXDependentScopeMemberExpr 0x14d80dff0 <col:9, col:15> '<dependent type>' contains-errors lvalue ->next
        | | `-RecoveryExpr 0x14d80dfc8 <col:9> '<dependent type>' contains-errors lvalue
        | |   `-DeclRefExpr 0x14d80dfa8 <col:9> 'int *' lvalue ParmVar 0x14d80dd28 'ring' 'int *'
        | `-IntegerLiteral 0x14d80e038 <col:22> 'int' 0
        `-CompoundAssignOperator 0x14d80e128 <line:5:9, col:22> '<dependent type>' contains-errors '^=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
          |-CXXDependentScopeMemberExpr 0x14d80e0c0 <col:9, col:15> '<dependent type>' contains-errors lvalue ->gen
          | `-RecoveryExpr 0x14d80e098 <col:9> '<dependent type>' contains-errors lvalue
          |   `-DeclRefExpr 0x14d80e078 <col:9> 'int *' lvalue ParmVar 0x14d80dd28 'ring' 'int *'
          `-IntegerLiteral 0x14d80e108 <col:22> 'int' 1
