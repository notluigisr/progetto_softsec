`-FunctionDecl 0x13180de58  line:1:1 invalid grammar_current_rule_expect_rr 'int (int, int)'
  |-ParmVarDecl 0x13180dcd8 <col:33, col:37> col:37 used count 'int'
  |-ParmVarDecl 0x13180dd70 <col:44, col:53> col:53 invalid loc 'int'
  `-CompoundStmt 0x1320082d8 <line:2:1, line:8:1>
    `-IfStmt 0x1320082a8 <line:3:3, line:7:5> has_else
      |-UnaryOperator 0x13180df90 <line:3:7, col:9> '<dependent type>' contains-errors prefix '!' cannot overflow
      | `-ImplicitCastExpr 0x13180df78 <col:9> '<dependent type>' contains-errors <LValueToRValue>
      |   `-RecoveryExpr 0x13180df58 <col:9> '<dependent type>' contains-errors lvalue
      |-CallExpr 0x132008240 <line:4:5, line:5:20> '<dependent type>' contains-errors
      | |-DeclRefExpr 0x13180e100 <line:4:5> 'int ()' Function 0x13180e048 'complain' 'int ()'
      | |-UnaryOperator 0x13180e140 <col:15, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow
      | | `-RecoveryExpr 0x13180e120 <col:16> '<dependent type>' contains-errors lvalue
      | |-RecoveryExpr 0x13180e3b8 <col:21> '<dependent type>' contains-errors lvalue
      | |-CallExpr 0x132008200 <col:29, col:36> 'int'
      | | |-ImplicitCastExpr 0x13180e3d8 <col:29> 'int (*)()' <FunctionToPointerDecay>
      | | | `-DeclRefExpr 0x13180e250 <col:29> 'int ()' Function 0x13180e198 '_' 'int ()'
      | | `-ImplicitCastExpr 0x132008228 <col:31> 'char *' <ArrayToPointerDecay>
      | |   `-StringLiteral 0x13180e2b0 <col:31> 'char[4]' lvalue "STR"
      | `-StringLiteral 0x13180e358 <line:5:15> 'char[4]' lvalue "STR"
      `-NullStmt 0x1320082a0 <line:7:5>
