`-FunctionDecl 0x13100ddc8  line:1:17 invalid calculate_logical_dest_mask 'int (int)' static
  |-ParmVarDecl 0x13100dcf0 <col:45, col:54> col:54 invalid pdmask 'int'
  `-CompoundStmt 0x131027f28 <line:2:1, line:14:1>
    |-WhileStmt 0x131027ec0 <line:8:2, line:12:2>
    | |-BinaryOperator 0x13100e0c0 <line:8:9, col:19> 'int' contains-errors '<'
    | | |-RecoveryExpr 0x13100e080 <col:9> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x13100e0a0 <col:19> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x131027ea8 <col:33, line:12:2>
    |   `-CallExpr 0x13100e2b0 <line:9:3, col:42> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x13100e1c0 <col:3> 'int ()' Function 0x13100e108 'bitmap_clear_nolock' 'int ()'
    |     |-RecoveryExpr 0x13100e258 <col:23> '<dependent type>' contains-errors lvalue
    |     `-UnaryOperator 0x13100e298 <col:32, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow
    |       `-RecoveryExpr 0x13100e278 <col:33> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x131027f18 <line:13:2, col:9>
      `-RecoveryExpr 0x131027ef8 <col:9> '<dependent type>' contains-errors lvalue
