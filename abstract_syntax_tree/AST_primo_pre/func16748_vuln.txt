`-FunctionDecl 0x140928298  line:1:36 ReadResourceLong 'const unsigned char *(const unsigned char *, unsigned int *)' static inline
  |-ParmVarDecl 0x140928108 <col:53, col:74> col:74 used p 'const unsigned char *'
  |-ParmVarDecl 0x1409281b8 <line:2:3, col:17> col:17 used quantum 'unsigned int *'
  `-CompoundStmt 0x140940dd0 <line:3:1, line:9:1>
    |-BinaryOperator 0x140928568 <line:4:3, col:32> 'unsigned int' contains-errors '='
    | |-UnaryOperator 0x1409283d0 <col:3, col:4> 'unsigned int' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x1409283b8 <col:4> 'unsigned int *' <LValueToRValue>
    | |   `-DeclRefExpr 0x140928398 <col:4> 'unsigned int *' lvalue ParmVar 0x1409281b8 'quantum' 'unsigned int *'
    | `-RecoveryExpr 0x140928538 <col:12, col:32> '<dependent type>' contains-errors lvalue
    |   |-ParenExpr 0x140928458 <col:12, col:19> '<overloaded function type>' lvalue
    |   | `-UnresolvedLookupExpr 0x140928418 <col:13> '<overloaded function type>' lvalue (no ADL) = 'size_t' empty
    |   `-BinaryOperator 0x140928518 <col:22, col:30> 'int' '<<'
    |     |-ImplicitCastExpr 0x140928500 <col:22, col:24> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x1409284e8 <col:22, col:24> 'unsigned char' <LValueToRValue>
    |     |   `-UnaryOperator 0x1409284b0 <col:22, col:24> 'const unsigned char' lvalue prefix '*' cannot overflow
    |     |     `-UnaryOperator 0x140928498 <col:23, col:24> 'const unsigned char *' postfix '++'
    |     |       `-DeclRefExpr 0x140928478 <col:23> 'const unsigned char *' lvalue ParmVar 0x140928108 'p' 'const unsigned char *'
    |     `-IntegerLiteral 0x1409284c8 <col:30> 'int' 24
    |-CompoundAssignOperator 0x140928740 <line:5:3, col:33> 'unsigned int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | |-UnaryOperator 0x1409285c0 <col:3, col:4> 'unsigned int' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x1409285a8 <col:4> 'unsigned int *' <LValueToRValue>
    | |   `-DeclRefExpr 0x140928588 <col:4> 'unsigned int *' lvalue ParmVar 0x1409281b8 'quantum' 'unsigned int *'
    | `-RecoveryExpr 0x140928710 <col:13, col:33> '<dependent type>' contains-errors lvalue
    |   |-ParenExpr 0x140928630 <col:13, col:20> '<overloaded function type>' lvalue
    |   | `-UnresolvedLookupExpr 0x1409285f0 <col:14> '<overloaded function type>' lvalue (no ADL) = 'size_t' empty
    |   `-BinaryOperator 0x1409286f0 <col:23, col:31> 'int' '<<'
    |     |-ImplicitCastExpr 0x1409286d8 <col:23, col:25> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x1409286c0 <col:23, col:25> 'unsigned char' <LValueToRValue>
    |     |   `-UnaryOperator 0x140928688 <col:23, col:25> 'const unsigned char' lvalue prefix '*' cannot overflow
    |     |     `-UnaryOperator 0x140928670 <col:24, col:25> 'const unsigned char *' postfix '++'
    |     |       `-DeclRefExpr 0x140928650 <col:24> 'const unsigned char *' lvalue ParmVar 0x140928108 'p' 'const unsigned char *'
    |     `-IntegerLiteral 0x1409286a0 <col:31> 'int' 16
    |-CompoundAssignOperator 0x140940b50 <line:6:3, col:32> 'unsigned int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | |-UnaryOperator 0x1409287a8 <col:3, col:4> 'unsigned int' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x140928790 <col:4> 'unsigned int *' <LValueToRValue>
    | |   `-DeclRefExpr 0x140928770 <col:4> 'unsigned int *' lvalue ParmVar 0x1409281b8 'quantum' 'unsigned int *'
    | `-RecoveryExpr 0x140940b20 <col:13, col:32> '<dependent type>' contains-errors lvalue
    |   |-ParenExpr 0x140940a40 <col:13, col:20> '<overloaded function type>' lvalue
    |   | `-UnresolvedLookupExpr 0x140940a00 <col:14> '<overloaded function type>' lvalue (no ADL) = 'size_t' empty
    |   `-BinaryOperator 0x140940b00 <col:23, col:31> 'int' '<<'
    |     |-ImplicitCastExpr 0x140940ae8 <col:23, col:25> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x140940ad0 <col:23, col:25> 'unsigned char' <LValueToRValue>
    |     |   `-UnaryOperator 0x140940a98 <col:23, col:25> 'const unsigned char' lvalue prefix '*' cannot overflow
    |     |     `-UnaryOperator 0x140940a80 <col:24, col:25> 'const unsigned char *' postfix '++'
    |     |       `-DeclRefExpr 0x140940a60 <col:24> 'const unsigned char *' lvalue ParmVar 0x140928108 'p' 'const unsigned char *'
    |     `-IntegerLiteral 0x140940ab0 <col:31> 'int' 8
    |-CompoundAssignOperator 0x140940d38 <line:7:3, col:32> 'unsigned int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | |-UnaryOperator 0x140940bb8 <col:3, col:4> 'unsigned int' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x140940ba0 <col:4> 'unsigned int *' <LValueToRValue>
    | |   `-DeclRefExpr 0x140940b80 <col:4> 'unsigned int *' lvalue ParmVar 0x1409281b8 'quantum' 'unsigned int *'
    | `-RecoveryExpr 0x140940d08 <col:13, col:32> '<dependent type>' contains-errors lvalue
    |   |-ParenExpr 0x140940c28 <col:13, col:20> '<overloaded function type>' lvalue
    |   | `-UnresolvedLookupExpr 0x140940be8 <col:14> '<overloaded function type>' lvalue (no ADL) = 'size_t' empty
    |   `-BinaryOperator 0x140940ce8 <col:23, col:31> 'int' '<<'
    |     |-ImplicitCastExpr 0x140940cd0 <col:23, col:25> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x140940cb8 <col:23, col:25> 'unsigned char' <LValueToRValue>
    |     |   `-UnaryOperator 0x140940c80 <col:23, col:25> 'const unsigned char' lvalue prefix '*' cannot overflow
    |     |     `-UnaryOperator 0x140940c68 <col:24, col:25> 'const unsigned char *' postfix '++'
    |     |       `-DeclRefExpr 0x140940c48 <col:24> 'const unsigned char *' lvalue ParmVar 0x140928108 'p' 'const unsigned char *'
    |     `-IntegerLiteral 0x140940c98 <col:31> 'int' 0
    `-ReturnStmt 0x140940dc0 <line:8:3, col:11>
      `-ImplicitCastExpr 0x140940da8 <col:9, col:11> 'const unsigned char *' <LValueToRValue>
        `-ParenExpr 0x140940d88 <col:9, col:11> 'const unsigned char *' lvalue
          `-DeclRefExpr 0x140940d68 <col:10> 'const unsigned char *' lvalue ParmVar 0x140928108 'p' 'const unsigned char *'
