`-FunctionDecl 0x133939cd8  line:1:6 invalid asn1_read_BOOLEAN_context 'int (struct asn1_data *, int *, int)'
  |-ParmVarDecl 0x133920a68 <col:32, col:50> col:50 used data 'struct asn1_data *'
  |-ParmVarDecl 0x133920b18 <col:56, col:62> col:62 invalid v 'int *'
  |-ParmVarDecl 0x133920b98 <col:65, col:69> col:69 used context 'int'
  `-CompoundStmt 0x13393a848 <line:2:1, line:13:1>
    |-CallExpr 0x13393a0f0 <line:4:2, col:51> 'int'
    | |-ImplicitCastExpr 0x13393a0d8 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x133939ef0 <col:2> 'int ()' Function 0x133939e38 'asn1_start_tag' 'int ()'
    | |-ImplicitCastExpr 0x13393a120 <col:17> 'struct asn1_data *' <LValueToRValue>
    | | `-DeclRefExpr 0x133939f10 <col:17> 'struct asn1_data *' lvalue ParmVar 0x133920a68 'data' 'struct asn1_data *'
    | `-CallExpr 0x13393a098 <col:23, col:50> 'int'
    |   |-ImplicitCastExpr 0x13393a080 <col:23> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x13393a010 <col:23> 'int ()' Function 0x133939f58 'ASN1_CONTEXT_SIMPLE' 'int ()'
    |   `-ImplicitCastExpr 0x13393a0c0 <col:43> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x13393a030 <col:43> 'int' lvalue ParmVar 0x133920b98 'context' 'int'
    |-CallExpr 0x13393a2f0 <line:5:2, col:28> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13393a218 <col:2> 'int ()' Function 0x13393a160 'asn1_read_uint8' 'int ()'
    | |-DeclRefExpr 0x13393a238 <col:18> 'struct asn1_data *' lvalue ParmVar 0x133920a68 'data' 'struct asn1_data *'
    | `-UnaryOperator 0x13393a2d8 <col:24, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x13393a2b8 <col:25> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x13393a5a0 <line:6:2, line:10:2> has_else
    | |-BinaryOperator 0x13393a398 <line:6:6, col:13> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x13393a378 <col:6> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x13393a338 <col:13> 'int' 255
    | |-CompoundStmt 0x13393a4e0 <col:19, line:8:2>
    | | `-BinaryOperator 0x13393a4c0 <line:7:3, col:8> '<dependent type>' contains-errors '='
    | |   |-UnaryOperator 0x13393a488 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow
    | |   | `-ImplicitCastExpr 0x13393a470 <col:4> '<dependent type>' contains-errors <LValueToRValue>
    | |   |   `-RecoveryExpr 0x13393a3b8 <col:4> '<dependent type>' contains-errors lvalue
    | |   `-RecoveryExpr 0x13393a4a0 <col:8> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x13393a590 <line:8:9, line:10:2>
    |-CallExpr 0x13393a708 <line:11:2, col:19> 'int'
    | |-ImplicitCastExpr 0x13393a6f0 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x13393a6b0 <col:2> 'int ()' Function 0x13393a5f8 'asn1_end_tag' 'int ()'
    | `-ImplicitCastExpr 0x13393a730 <col:15> 'struct asn1_data *' <LValueToRValue>
    |   `-DeclRefExpr 0x13393a6d0 <col:15> 'struct asn1_data *' lvalue ParmVar 0x133920a68 'data' 'struct asn1_data *'
    `-ReturnStmt 0x13393a838 <line:12:2, col:16>
      `-UnaryOperator 0x13393a820 <col:9, col:16> '<dependent type>' contains-errors prefix '!' cannot overflow
        `-ImplicitCastExpr 0x13393a808 <col:10, col:16> '<dependent type>' contains-errors <LValueToRValue>
          `-RecoveryExpr 0x13393a780 <col:10, col:16> '<dependent type>' contains-errors lvalue
            `-DeclRefExpr 0x13393a748 <col:10> 'struct asn1_data *' lvalue ParmVar 0x133920a68 'data' 'struct asn1_data *'
