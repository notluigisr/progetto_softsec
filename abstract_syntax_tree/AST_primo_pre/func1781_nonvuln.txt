`-FunctionDecl 0x11d922668  line:1:1 invalid PREFIX 'int (int)'
  |-ParmVarDecl 0x11e00df28 <col:8> col:8 scanComment 'int'
  `-CompoundStmt 0x11d923590 <line:2:46, line:33:1>
    `-IfStmt 0x11d923570 <line:3:3, line:31:3>
      |-CallExpr 0x11d922970 <line:3:7, col:29> '<dependent type>' contains-errors
      | |-DeclRefExpr 0x11d922870 <col:7> 'int ()' Function 0x11d9227b8 'HAS_CHAR' 'int ()'
      | |-RecoveryExpr 0x11d922910 <col:16> '<dependent type>' contains-errors lvalue
      | |-RecoveryExpr 0x11d922930 <col:21> '<dependent type>' contains-errors lvalue
      | `-RecoveryExpr 0x11d922950 <col:26> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x11d923550 <col:32, line:31:3>
        |-IfStmt 0x11d922d68 <line:4:5, line:7:5>
        | |-UnaryOperator 0x11d922bd8 <line:4:9, col:45> '<dependent type>' contains-errors prefix '!' cannot overflow
        | | `-CallExpr 0x11d922ba0 <col:11, col:45> '<dependent type>' contains-errors
        | |   |-DeclRefExpr 0x11d922a88 <col:11> 'int ()' Function 0x11d9229d0 'CHAR_MATCHES' 'int ()'
        | |   |-RecoveryExpr 0x11d922b40 <col:24> '<dependent type>' contains-errors lvalue
        | |   |-RecoveryExpr 0x11d922b60 <col:29> '<dependent type>' contains-errors lvalue
        | |   `-RecoveryExpr 0x11d922b80 <col:34> '<dependent type>' contains-errors lvalue
        | `-CompoundStmt 0x11d922d48 <col:48, line:7:5>
        |   |-BinaryOperator 0x11d922ce0 <line:5:7, col:21> '<dependent type>' contains-errors '='
        |   | |-UnaryOperator 0x11d922ca8 <col:7, col:8> '<dependent type>' contains-errors prefix '*' cannot overflow
        |   | | `-ImplicitCastExpr 0x11d922c90 <col:8> '<dependent type>' contains-errors <LValueToRValue>
        |   | |   `-RecoveryExpr 0x11d922c70 <col:8> '<dependent type>' contains-errors lvalue
        |   | `-RecoveryExpr 0x11d922cc0 <col:21> '<dependent type>' contains-errors lvalue
        |   `-ReturnStmt 0x11d922d38 <line:6:7, col:14>
        |     `-RecoveryExpr 0x11d922d18 <col:14> '<dependent type>' contains-errors lvalue
        `-WhileStmt 0x11d923530 <line:9:5, line:30:5>
          |-CallExpr 0x11d922fc8 <line:9:12, col:34> '<dependent type>' contains-errors
          | |-DeclRefExpr 0x11d922ec8 <col:12> 'int ()' Function 0x11d9227b8 'HAS_CHAR' 'int ()'
          | |-RecoveryExpr 0x11d922f68 <col:21> '<dependent type>' contains-errors lvalue
          | |-RecoveryExpr 0x11d922f88 <col:26> '<dependent type>' contains-errors lvalue
          | `-RecoveryExpr 0x11d922fa8 <col:31> '<dependent type>' contains-errors lvalue
          `-CompoundStmt 0x11d923518 <col:37, line:30:5>
            `-SwitchStmt 0x11d923120 <line:10:7, line:29:7>
              |-RecoveryExpr 0x11d923100 <line:10:15, col:33> 'int' contains-errors
              `-CompoundStmt 0x11d9234e8 <col:36, line:29:7>
                |-IfStmt 0x11d923470 <line:15:9, line:24:9>
                | |-RecoveryExpr 0x11d923368 <line:15:13, col:47> '_Bool' contains-errors
                | `-CompoundStmt 0x11d923458 <col:50, line:24:9>
                |   `-IfStmt 0x11d923418 <line:18:11, line:21:11>
                |     |-RecoveryExpr 0x11d9233e8 <line:18:15, col:48> '_Bool' contains-errors
                |     `-CompoundStmt 0x11d923408 <col:51, line:21:11>
                |-BreakStmt 0x11d923490 <line:25:9>
                |-DefaultStmt 0x11d9234c0 <line:26:7, col:14>
                | `-NullStmt 0x11d9234b8 <col:14>
                `-BreakStmt 0x11d9234e0 <line:28:9>
