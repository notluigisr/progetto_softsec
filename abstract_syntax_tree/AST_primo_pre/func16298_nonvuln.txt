`-FunctionDecl 0x14602a800  line:1:1 filter_check_mail_from_regex 'int (struct filter *, const char *)'
  |-ParmVarDecl 0x14600e248 <col:30, col:45> col:45 used filter 'struct filter *'
  |-ParmVarDecl 0x14600e2c8 <col:53, col:65> col:65 used key 'const char *'
  `-CompoundStmt 0x14602b058 <line:2:1, line:11:1>
    |-DeclStmt 0x14602a9a0 <line:3:2, col:13>
    | `-VarDecl 0x14602a918 <col:2, col:12> col:6 used ret 'int' cinit
    |   `-IntegerLiteral 0x14602a980 <col:12> 'int' 0
    |-IfStmt 0x14602ab20 <line:5:2, line:6:10>
    | |-BinaryOperator 0x14602aad0 <line:5:6, col:41> 'int' contains-errors '=='
    | | |-CXXDependentScopeMemberExpr 0x14602aa18 <col:6, col:22> '<dependent type>' contains-errors lvalue ->mail_from_regex
    | | | `-RecoveryExpr 0x14602a9f0 <col:6, col:14> '<dependent type>' contains-errors lvalue
    | | |   `-DeclRefExpr 0x14602a9b8 <col:6> 'struct filter *' lvalue ParmVar 0x14600e248 'filter' 'struct filter *'
    | | `-RecoveryExpr 0x14602aab0 <col:41> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x14602ab10 <line:6:3, col:10>
    |   `-IntegerLiteral 0x14602aaf0 <col:10> 'int' 0
    |-IfStmt 0x14602aea0 <line:8:2, line:9:9>
    | |-BinaryOperator 0x14602ae20 <line:8:6, col:67> 'int' contains-errors '>'
    | | |-CallExpr 0x14602ade8 <col:6, col:63> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x14602ac50 <col:6> 'int ()' Function 0x14602ab98 'table_match' 'int ()'
    | | | |-CXXDependentScopeMemberExpr 0x14602acd0 <col:18, col:34> '<dependent type>' contains-errors lvalue ->mail_from_regex
    | | | | `-RecoveryExpr 0x14602aca8 <col:18, col:26> '<dependent type>' contains-errors lvalue
    | | | |   `-DeclRefExpr 0x14602ac70 <col:18> 'struct filter *' lvalue ParmVar 0x14600e248 'filter' 'struct filter *'
    | | | |-RecoveryExpr 0x14602adc8 <col:51> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x14602ad30 <col:60> 'const char *' lvalue ParmVar 0x14600e2c8 'key' 'const char *'
    | | `-IntegerLiteral 0x14602ad88 <col:67> 'int' 0
    | `-BinaryOperator 0x14602ae80 <line:9:3, col:9> 'int' '='
    |   |-DeclRefExpr 0x14602ae40 <col:3> 'int' lvalue Var 0x14602a918 'ret' 'int'
    |   `-IntegerLiteral 0x14602ae60 <col:9> 'int' 1
    `-ReturnStmt 0x14602b048 <line:10:2, col:58>
      `-ConditionalOperator 0x14602b018 <col:9, col:58> '<dependent type>' contains-errors
        |-BinaryOperator 0x14602af88 <col:9, col:47> 'int' contains-errors '<'
        | |-CXXDependentScopeMemberExpr 0x14602af20 <col:9, col:25> '<dependent type>' contains-errors lvalue ->not_mail_from_regex
        | | `-RecoveryExpr 0x14602aef8 <col:9, col:17> '<dependent type>' contains-errors lvalue
        | |   `-DeclRefExpr 0x14602aec0 <col:9> 'struct filter *' lvalue ParmVar 0x14600e248 'filter' 'struct filter *'
        | `-IntegerLiteral 0x14602af68 <col:47> 'int' 0
        |-UnaryOperator 0x14602afe0 <col:51, col:52> 'int' prefix '!' cannot overflow
        | `-ImplicitCastExpr 0x14602afc8 <col:52> 'int' <LValueToRValue>
        |   `-DeclRefExpr 0x14602afa8 <col:52> 'int' lvalue Var 0x14602a918 'ret' 'int'
        `-DeclRefExpr 0x14602aff8 <col:58> 'int' lvalue Var 0x14602a918 'ret' 'int'
