`-FunctionDecl 0x15a80dfa8  line:1:12 invalid bmp_read_8bit 'int (int, int, int *, int *)' static
  |-ParmVarDecl 0x15a80dcf0 <col:26, col:37> col:37 referenced invalid im 'int'
  |-ParmVarDecl 0x15a80dd70 <col:41, col:52> col:52 invalid infile 'int'
  |-ParmVarDecl 0x15a80de28 <col:60, col:72> col:72 referenced invalid info 'int *'
  |-ParmVarDecl 0x15a80dea8 <col:78, col:89> col:89 invalid header 'int *'
  `-CompoundStmt 0x15a827718 <line:2:1, line:74:1>
    |-DeclStmt 0x15a80e318 <line:3:2, col:44>
    | |-VarDecl 0x15a80e088 <col:2, col:13> col:6 used ypos 'int' cinit
    | | `-IntegerLiteral 0x15a80e0f0 <col:13> 'int' 0
    | |-VarDecl 0x15a80e128 <col:2, col:23> col:16 used xpos 'int' cinit
    | | `-IntegerLiteral 0x15a80e190 <col:23> 'int' 0
    | |-VarDecl 0x15a80e1c8 <col:2, col:32> col:26 used row 'int' cinit
    | | `-IntegerLiteral 0x15a80e230 <col:32> 'int' 0
    | `-VarDecl 0x15a80e268 <col:2, col:43> col:35 used index 'int' cinit
    |   `-IntegerLiteral 0x15a80e2d0 <col:43> 'int' 0
    |-DeclStmt 0x15a80e3d0 <line:4:2, col:17>
    | `-VarDecl 0x15a80e348 <col:2, col:16> col:6 used padding 'int' cinit
    |   `-IntegerLiteral 0x15a80e3b0 <col:16> 'int' 0
    |-IfStmt 0x15a122e48 <line:6:2, line:8:2>
    | |-BinaryOperator 0x15a122de0 <line:6:6, col:54> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x15a122d80 <col:6, col:23> 'int' contains-errors '!='
    | | | |-CXXDependentScopeMemberExpr 0x15a122c20 <col:6, col:12> '<dependent type>' contains-errors lvalue ->enctype
    | | | | `-RecoveryExpr 0x15a122c00 <col:6> '<dependent type>' contains-errors lvalue
    | | | `-RecoveryExpr 0x15a122d60 <col:23> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x15a122dc0 <col:37, col:54> 'int' contains-errors '!='
    | |   |-CXXDependentScopeMemberExpr 0x15a122cc0 <col:37, col:43> '<dependent type>' contains-errors lvalue ->enctype
    | |   | `-RecoveryExpr 0x15a122ca0 <col:37> '<dependent type>' contains-errors lvalue
    | |   `-RecoveryExpr 0x15a122da0 <col:54> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x15a122e30 <col:67, line:8:2>
    |   `-ReturnStmt 0x15a122e20 <line:7:3, col:10>
    |     `-IntegerLiteral 0x15a122e00 <col:10> 'int' 1
    |-IfStmt 0x15a1231c0 <line:10:2, line:14:2> has_else
    | |-UnaryOperator 0x15a122ee8 <line:10:6, col:13> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x15a122ed0 <col:7, col:13> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-CXXDependentScopeMemberExpr 0x15a122e88 <col:7, col:13> '<dependent type>' contains-errors lvalue ->numcolors
    | |     `-RecoveryExpr 0x15a122e68 <col:7> '<dependent type>' contains-errors lvalue
    | |-CompoundStmt 0x15a122fd0 <col:24, line:12:2>
    | | `-BinaryOperator 0x15a122fb0 <line:11:3, col:21> '<dependent type>' contains-errors '='
    | |   |-CXXDependentScopeMemberExpr 0x15a122f48 <col:3, col:9> '<dependent type>' contains-errors lvalue ->numcolors
    | |   | `-RecoveryExpr 0x15a122f20 <col:3> '<dependent type>' contains-errors lvalue
    | |   |   `-DeclRefExpr 0x15a122f00 <col:3> 'int *' lvalue ParmVar 0x15a80de28 'info' 'int *'
    | |   `-IntegerLiteral 0x15a122f90 <col:21> 'int' 256
    | `-IfStmt 0x15a1231a0 <line:12:9, line:14:2>
    |   |-BinaryOperator 0x15a123138 <line:12:13, col:54> 'int' contains-errors '||'
    |   | |-BinaryOperator 0x15a123070 <col:13, col:31> 'int' contains-errors '<'
    |   | | |-CXXDependentScopeMemberExpr 0x15a123008 <col:13, col:19> '<dependent type>' contains-errors lvalue ->numcolors
    |   | | | `-RecoveryExpr 0x15a122fe8 <col:13> '<dependent type>' contains-errors lvalue
    |   | | `-IntegerLiteral 0x15a123050 <col:31> 'int' 0
    |   | `-BinaryOperator 0x15a123118 <col:36, col:54> 'int' contains-errors '>'
    |   |   |-CXXDependentScopeMemberExpr 0x15a1230b0 <col:36, col:42> '<dependent type>' contains-errors lvalue ->numcolors
    |   |   | `-RecoveryExpr 0x15a123090 <col:36> '<dependent type>' contains-errors lvalue
    |   |   `-IntegerLiteral 0x15a1230f8 <col:54> 'int' 256
    |   `-CompoundStmt 0x15a123188 <col:59, line:14:2>
    |     `-ReturnStmt 0x15a123178 <line:13:3, col:10>
    |       `-IntegerLiteral 0x15a123158 <col:10> 'int' 1
    |-IfStmt 0x15a123520 <line:16:2, line:18:2>
    | |-RecoveryExpr 0x15a1234b8 <line:16:6, col:81> '_Bool' contains-errors
    | `-CompoundStmt 0x15a123508 <col:84, line:18:2>
    |   `-ReturnStmt 0x15a1234f8 <line:17:3, col:10>
    |     `-IntegerLiteral 0x15a1234d8 <col:10> 'int' 1
    |-BinaryOperator 0x15a123638 <line:20:2, col:26> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x15a123588 <col:2, col:6> '<dependent type>' contains-errors lvalue ->colorsTotal
    | | `-RecoveryExpr 0x15a123560 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x15a123540 <col:2> 'int' lvalue ParmVar 0x15a80dcf0 'im' 'int'
    | `-CXXDependentScopeMemberExpr 0x15a1235f0 <col:20, col:26> '<dependent type>' contains-errors lvalue ->numcolors
    |   `-RecoveryExpr 0x15a1235d0 <col:20> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x15a123a78 <line:23:2, line:28:2>
    | |-BinaryOperator 0x15a123808 <line:23:6, col:32> 'int' contains-errors '!='
    | | |-CallExpr 0x15a123778 <col:6, col:19> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x15a123738 <col:6> 'int ()' Function 0x15a123680 'gdTell' 'int ()'
    | | | `-RecoveryExpr 0x15a123758 <col:13> '<dependent type>' contains-errors lvalue
    | | `-CXXDependentScopeMemberExpr 0x15a1237c0 <col:24, col:32> '<dependent type>' contains-errors lvalue ->off
    | |   `-RecoveryExpr 0x15a1237a0 <col:24> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x15a123a60 <col:37, line:28:2>
    |   `-IfStmt 0x15a123a40 <line:25:3, line:27:3>
    |     |-UnaryOperator 0x15a1239e0 <line:25:7, col:34> '<dependent type>' contains-errors prefix '!' cannot overflow
    |     | `-CallExpr 0x15a1239b0 <col:8, col:34> '<dependent type>' contains-errors
    |     |   |-DeclRefExpr 0x15a123908 <col:8> 'int ()' Function 0x15a123850 'gdSeek' 'int ()'
    |     |   |-RecoveryExpr 0x15a123928 <col:15> '<dependent type>' contains-errors lvalue
    |     |   `-CXXDependentScopeMemberExpr 0x15a123968 <col:23, col:31> '<dependent type>' contains-errors lvalue ->off
    |     |     `-RecoveryExpr 0x15a123948 <col:23> '<dependent type>' contains-errors lvalue
    |     `-CompoundStmt 0x15a123a28 <col:37, line:27:3>
    |       `-ReturnStmt 0x15a123a18 <line:26:4, col:11>
    |         `-IntegerLiteral 0x15a1239f8 <col:11> 'int' 1
    |-BinaryOperator 0x15a123bc0 <line:31:2, col:32> 'int' contains-errors '='
    | |-DeclRefExpr 0x15a123a98 <col:2> 'int' lvalue Var 0x15a80e348 'padding' 'int'
    | `-BinaryOperator 0x15a123ba0 <col:12, col:32> '<dependent type>' contains-errors '%'
    |   |-ParenExpr 0x15a123b60 <col:12, col:28> '<dependent type>' contains-errors
    |   | `-BinaryOperator 0x15a123b40 <col:13, col:23> '<dependent type>' contains-errors '*'
    |   |   |-IntegerLiteral 0x15a123ab8 <col:13> 'int' 1
    |   |   `-CXXDependentScopeMemberExpr 0x15a123af8 <col:17, col:23> '<dependent type>' contains-errors lvalue ->width
    |   |     `-RecoveryExpr 0x15a123ad8 <col:17> '<dependent type>' contains-errors lvalue
    |   `-IntegerLiteral 0x15a123b80 <col:32> 'int' 4
    |-IfStmt 0x15a124ce8 <line:32:2, line:34:2>
    | |-ImplicitCastExpr 0x15a124c00 <line:32:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x15a123be0 <col:6> 'int' lvalue Var 0x15a80e348 'padding' 'int'
    | `-CompoundStmt 0x15a124cd0 <col:15, line:34:2>
    |   `-BinaryOperator 0x15a124cb0 <line:33:3, col:17> 'int' '='
    |     |-DeclRefExpr 0x15a124c18 <col:3> 'int' lvalue Var 0x15a80e348 'padding' 'int'
    |     `-BinaryOperator 0x15a124c90 <col:13, col:17> 'int' '-'
    |       |-IntegerLiteral 0x15a124c38 <col:13> 'int' 4
    |       `-ImplicitCastExpr 0x15a124c78 <col:17> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x15a124c58 <col:17> 'int' lvalue Var 0x15a80e348 'padding' 'int'
    |-SwitchStmt 0x15a124d88 <line:36:2, line:72:2>
    | |-ImplicitCastExpr 0x15a124d70 <line:36:10, col:16> '<dependent type>' contains-errors <LValueToRValue>
    | | `-CXXDependentScopeMemberExpr 0x15a124d28 <col:10, col:16> '<dependent type>' contains-errors lvalue ->enctype
    | |   `-RecoveryExpr 0x15a124d08 <col:10> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x15a8276b0 <col:25, line:72:2>
    |   |-ForStmt 0x15a827400 <line:38:3, line:61:3>
    |   | |-BinaryOperator 0x15a124e08 <line:38:8, col:15> 'int' '='
    |   | | |-DeclRefExpr 0x15a124dc8 <col:8> 'int' lvalue Var 0x15a80e088 'ypos' 'int'
    |   | | `-IntegerLiteral 0x15a124de8 <col:15> 'int' 0
    |   | |-<<<NULL>>>
    |   | |-BinaryOperator 0x15a124eb0 <col:18, col:31> 'int' contains-errors '<'
    |   | | |-DeclRefExpr 0x15a124e28 <col:18> 'int' lvalue Var 0x15a80e088 'ypos' 'int'
    |   | | `-CXXDependentScopeMemberExpr 0x15a124e68 <col:25, col:31> '<dependent type>' contains-errors lvalue ->height
    |   | |   `-RecoveryExpr 0x15a124e48 <col:25> '<dependent type>' contains-errors lvalue
    |   | |-UnaryOperator 0x15a124ef0 <col:39, col:41> 'int' prefix '++'
    |   | | `-DeclRefExpr 0x15a124ed0 <col:41> 'int' lvalue Var 0x15a80e088 'ypos' 'int'
    |   | `-CompoundStmt 0x15a125bc8 <col:47, line:61:3>
    |   |   |-IfStmt 0x15a125140 <line:39:4, line:43:4> has_else
    |   |   | |-CXXDependentScopeMemberExpr 0x15a124f28 <line:39:8, col:14> '<dependent type>' contains-errors lvalue ->topdown
    |   |   | | `-RecoveryExpr 0x15a124f08 <col:8> '<dependent type>' contains-errors lvalue
    |   |   | |-CompoundStmt 0x15a124fe8 <col:23, line:41:4>
    |   |   | | `-BinaryOperator 0x15a124fc8 <line:40:5, col:11> 'int' '='
    |   |   | |   |-DeclRefExpr 0x15a124f70 <col:5> 'int' lvalue Var 0x15a80e1c8 'row' 'int'
    |   |   | |   `-ImplicitCastExpr 0x15a124fb0 <col:11> 'int' <LValueToRValue>
    |   |   | |     `-DeclRefExpr 0x15a124f90 <col:11> 'int' lvalue Var 0x15a80e088 'ypos' 'int'
    |   |   | `-CompoundStmt 0x15a125128 <line:41:11, line:43:4>
    |   |   |   `-BinaryOperator 0x15a125108 <line:42:5, col:33> 'int' contains-errors '='
    |   |   |     |-DeclRefExpr 0x15a125000 <col:5> 'int' lvalue Var 0x15a80e1c8 'row' 'int'
    |   |   |     `-BinaryOperator 0x15a1250e8 <col:11, col:33> '<dependent type>' contains-errors '-'
    |   |   |       |-BinaryOperator 0x15a1250a8 <col:11, col:26> '<dependent type>' contains-errors '-'
    |   |   |       | |-CXXDependentScopeMemberExpr 0x15a125040 <col:11, col:17> '<dependent type>' contains-errors lvalue ->height
    |   |   |       | | `-RecoveryExpr 0x15a125020 <col:11> '<dependent type>' contains-errors lvalue
    |   |   |       | `-DeclRefExpr 0x15a125088 <col:26> 'int' lvalue Var 0x15a80e088 'ypos' 'int'
    |   |   |       `-IntegerLiteral 0x15a1250c8 <col:33> 'int' 1
    |   |   |-ForStmt 0x15a1258f0 <line:45:4, line:54:4>
    |   |   | |-BinaryOperator 0x15a1251b0 <line:45:9, col:16> 'int' '='
    |   |   | | |-DeclRefExpr 0x15a125170 <col:9> 'int' lvalue Var 0x15a80e128 'xpos' 'int'
    |   |   | | `-IntegerLiteral 0x15a125190 <col:16> 'int' 0
    |   |   | |-<<<NULL>>>
    |   |   | |-BinaryOperator 0x15a125258 <col:19, col:32> 'int' contains-errors '<'
    |   |   | | |-DeclRefExpr 0x15a1251d0 <col:19> 'int' lvalue Var 0x15a80e128 'xpos' 'int'
    |   |   | | `-CXXDependentScopeMemberExpr 0x15a125210 <col:26, col:32> '<dependent type>' contains-errors lvalue ->width
    |   |   | |   `-RecoveryExpr 0x15a1251f0 <col:26> '<dependent type>' contains-errors lvalue
    |   |   | |-UnaryOperator 0x15a125298 <col:39, col:41> 'int' prefix '++'
    |   |   | | `-DeclRefExpr 0x15a125278 <col:41> 'int' lvalue Var 0x15a80e128 'xpos' 'int'
    |   |   | `-CompoundStmt 0x15a1258c8 <col:47, line:54:4>
    |   |   |   |-IfStmt 0x15a125498 <line:46:5, line:48:5>
    |   |   |   | |-UnaryOperator 0x15a125438 <line:46:9, col:34> '<dependent type>' contains-errors prefix '!' cannot overflow
    |   |   |   | | `-CallExpr 0x15a125408 <col:10, col:34> '<dependent type>' contains-errors
    |   |   |   | |   |-DeclRefExpr 0x15a125390 <col:10> 'int ()' Function 0x15a1252d8 'gdGetByte' 'int ()'
    |   |   |   | |   |-UnaryOperator 0x15a1253d0 <col:20, col:21> 'int *' prefix '&' cannot overflow
    |   |   |   | |   | `-DeclRefExpr 0x15a1253b0 <col:21> 'int' lvalue Var 0x15a80e268 'index' 'int'
    |   |   |   | |   `-RecoveryExpr 0x15a1253e8 <col:28> '<dependent type>' contains-errors lvalue
    |   |   |   | `-CompoundStmt 0x15a125480 <col:37, line:48:5>
    |   |   |   |   `-ReturnStmt 0x15a125470 <line:47:6, col:13>
    |   |   |   |     `-IntegerLiteral 0x15a125450 <col:13> 'int' 1
    |   |   |   |-IfStmt 0x15a1256e8 <line:50:5, line:52:5>
    |   |   |   | |-ArraySubscriptExpr 0x15a125570 <line:50:9, col:23> '<dependent type>' contains-errors lvalue
    |   |   |   | | |-ImplicitCastExpr 0x15a125540 <col:9, col:13> '<dependent type>' contains-errors <LValueToRValue>
    |   |   |   | | | `-CXXDependentScopeMemberExpr 0x15a1254d8 <col:9, col:13> '<dependent type>' contains-errors lvalue ->open
    |   |   |   | | |   `-RecoveryExpr 0x15a1254b8 <col:9> '<dependent type>' contains-errors lvalue
    |   |   |   | | `-ImplicitCastExpr 0x15a125558 <col:18> 'int' <LValueToRValue>
    |   |   |   | |   `-DeclRefExpr 0x15a125520 <col:18> 'int' lvalue Var 0x15a80e268 'index' 'int'
    |   |   |   | `-CompoundStmt 0x15a1256d0 <col:26, line:52:5>
    |   |   |   |   `-BinaryOperator 0x15a1256b0 <line:51:6, col:24> '<dependent type>' contains-errors '='
    |   |   |   |     |-ArraySubscriptExpr 0x15a125670 <col:6, col:20> '<dependent type>' contains-errors lvalue
    |   |   |   |     | |-ImplicitCastExpr 0x15a125640 <col:6, col:10> '<dependent type>' contains-errors <LValueToRValue>
    |   |   |   |     | | `-CXXDependentScopeMemberExpr 0x15a1255d8 <col:6, col:10> '<dependent type>' contains-errors lvalue ->open
    |   |   |   |     | |   `-RecoveryExpr 0x15a1255b0 <col:6> '<dependent type>' contains-errors lvalue
    |   |   |   |     | |     `-DeclRefExpr 0x15a125590 <col:6> 'int' lvalue ParmVar 0x15a80dcf0 'im' 'int'
    |   |   |   |     | `-ImplicitCastExpr 0x15a125658 <col:15> 'int' <LValueToRValue>
    |   |   |   |     |   `-DeclRefExpr 0x15a125620 <col:15> 'int' lvalue Var 0x15a80e268 'index' 'int'
    |   |   |   |     `-IntegerLiteral 0x15a125690 <col:24> 'int' 0
    |   |   |   `-CallExpr 0x15a125888 <line:53:5, col:41> '<dependent type>' contains-errors
    |   |   |     |-DeclRefExpr 0x15a1257e8 <col:5> 'int ()' Function 0x15a125730 'gdImageSetPixel' 'int ()'
    |   |   |     |-RecoveryExpr 0x15a125808 <col:21> '<dependent type>' contains-errors lvalue
    |   |   |     |-DeclRefExpr 0x15a125828 <col:25> 'int' lvalue Var 0x15a80e128 'xpos' 'int'
    |   |   |     |-DeclRefExpr 0x15a125848 <col:31> 'int' lvalue Var 0x15a80e1c8 'row' 'int'
    |   |   |     `-DeclRefExpr 0x15a125868 <col:36> 'int' lvalue Var 0x15a80e268 'index' 'int'
    |   |   `-ForStmt 0x15a125b90 <line:56:4, line:60:4>
    |   |     |-BinaryOperator 0x15a125980 <line:56:9, col:16> 'int' '='
    |   |     | |-DeclRefExpr 0x15a125928 <col:9> 'int' lvalue Var 0x15a80e128 'xpos' 'int'
    |   |     | `-ImplicitCastExpr 0x15a125968 <col:16> 'int' <LValueToRValue>
    |   |     |   `-DeclRefExpr 0x15a125948 <col:16> 'int' lvalue Var 0x15a80e348 'padding' 'int'
    |   |     |-<<<NULL>>>
    |   |     |-BinaryOperator 0x15a1259f8 <col:25, col:32> 'int' '>'
    |   |     | |-ImplicitCastExpr 0x15a1259e0 <col:25> 'int' <LValueToRValue>
    |   |     | | `-DeclRefExpr 0x15a1259a0 <col:25> 'int' lvalue Var 0x15a80e128 'xpos' 'int'
    |   |     | `-IntegerLiteral 0x15a1259c0 <col:32> 'int' 0
    |   |     |-UnaryOperator 0x15a125a38 <col:35, col:37> 'int' prefix '--'
    |   |     | `-DeclRefExpr 0x15a125a18 <col:37> 'int' lvalue Var 0x15a80e128 'xpos' 'int'
    |   |     `-CompoundStmt 0x15a125b78 <col:43, line:60:4>
    |   |       `-IfStmt 0x15a125b58 <line:57:5, line:59:5>
    |   |         |-UnaryOperator 0x15a125af8 <line:57:9, col:34> '<dependent type>' contains-errors prefix '!' cannot overflow
    |   |         | `-CallExpr 0x15a125ac8 <col:10, col:34> '<dependent type>' contains-errors
    |   |         |   |-DeclRefExpr 0x15a125a50 <col:10> 'int ()' Function 0x15a1252d8 'gdGetByte' 'int ()'
    |   |         |   |-UnaryOperator 0x15a125a90 <col:20, col:21> 'int *' prefix '&' cannot overflow
    |   |         |   | `-DeclRefExpr 0x15a125a70 <col:21> 'int' lvalue Var 0x15a80e268 'index' 'int'
    |   |         |   `-RecoveryExpr 0x15a125aa8 <col:28> '<dependent type>' contains-errors lvalue
    |   |         `-CompoundStmt 0x15a125b40 <col:37, line:59:5>
    |   |           `-ReturnStmt 0x15a125b30 <line:58:6, col:13>
    |   |             `-IntegerLiteral 0x15a125b10 <col:13> 'int' 1
    |   |-BreakStmt 0x15a827438 <line:62:3>
    |   |-IfStmt 0x15a827638 <line:65:3, line:67:3>
    |   | |-CallExpr 0x15a8275b8 <line:65:7, col:36> '<dependent type>' contains-errors
    |   | | |-DeclRefExpr 0x15a827538 <col:7> 'int ()' Function 0x15a827480 'bmp_read_rle' 'int ()'
    |   | | |-RecoveryExpr 0x15a827558 <col:20> '<dependent type>' contains-errors lvalue
    |   | | |-RecoveryExpr 0x15a827578 <col:24> '<dependent type>' contains-errors lvalue
    |   | | `-RecoveryExpr 0x15a827598 <col:32> '<dependent type>' contains-errors lvalue
    |   | `-CompoundStmt 0x15a827620 <col:39, line:67:3>
    |   |   `-ReturnStmt 0x15a827610 <line:66:4, col:11>
    |   |     `-IntegerLiteral 0x15a8275f0 <col:11> 'int' 1
    |   |-BreakStmt 0x15a827658 <line:68:3>
    |   `-DefaultStmt 0x15a827690 <line:70:2, line:71:10>
    |     `-ReturnStmt 0x15a827680 <col:3, col:10>
    |       `-IntegerLiteral 0x15a827660 <col:10> 'int' 1
    `-ReturnStmt 0x15a827708 <line:73:2, col:9>
      `-IntegerLiteral 0x15a8276e8 <col:9> 'int' 0
