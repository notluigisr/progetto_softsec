`-FunctionDecl 0x15201f438  line:1:1 TEST 'int (int, int)'
  |-ParmVarDecl 0x15201f358 <col:6> col:6 GtOp 'int'
  |-ParmVarDecl 0x15201f2d8 <col:12> col:12 ElemMatchKey 'int'
  `-CompoundStmt 0x1520462f8 <col:26, line:14:1>
    |-CallExpr 0x152045770 <line:7:5, col:55> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x15201f740 <col:5> 'int ()' Function 0x15201f5a8 'ASSERT' 'int ()'
    | `-UnaryOperator 0x152045758 <col:12, col:54> '<dependent type>' contains-errors prefix '!' cannot overflow
    |   `-CallExpr 0x152045728 <col:13, col:54> '<dependent type>' contains-errors
    |     |-CXXDependentScopeMemberExpr 0x1520456a8 <col:13, col:16> '<dependent type>' contains-errors lvalue .matchesBSON
    |     | `-RecoveryExpr 0x152045688 <col:13> '<dependent type>' contains-errors lvalue
    |     |-CallExpr 0x1520455c0 <col:28, col:43> '<dependent type>' contains-errors
    |     | |-DeclRefExpr 0x15201f8a0 <col:28> 'int ()' Function 0x15201f7e8 'BSON' 'int ()'
    |     | `-RecoveryExpr 0x152045590 <col:33, col:42> '<dependent type>' contains-errors lvalue
    |     |   |-StringLiteral 0x15201f8c0 <col:33> 'char[4]' lvalue "STR"
    |     |   `-IntegerLiteral 0x15201f8e0 <col:42> 'int' 4
    |     `-UnaryOperator 0x152045710 <col:46, col:47> '<dependent type>' contains-errors prefix '&' cannot overflow
    |       `-RecoveryExpr 0x1520456f0 <col:47> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x152045918 <line:8:5, col:38> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x152045798 <col:5> 'int ()' Function 0x15201f5a8 'ASSERT' 'int ()'
    | `-UnaryOperator 0x152045900 <col:12, col:37> '<dependent type>' contains-errors prefix '!' cannot overflow
    |   `-CallExpr 0x1520458e0 <col:13, col:37> '<dependent type>' contains-errors
    |     `-CXXDependentScopeMemberExpr 0x152045898 <col:13, col:21> '<dependent type>' contains-errors lvalue .hasElemMatchKey
    |       `-RecoveryExpr 0x152045878 <col:13> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x152045be8 <line:9:5, col:54> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x152045940 <col:5> 'int ()' Function 0x15201f5a8 'ASSERT' 'int ()'
    | `-CallExpr 0x152045bb8 <col:12, col:53> '<dependent type>' contains-errors
    |   |-CXXDependentScopeMemberExpr 0x152045b38 <col:12, col:15> '<dependent type>' contains-errors lvalue .matchesBSON
    |   | `-RecoveryExpr 0x152045b18 <col:12> '<dependent type>' contains-errors lvalue
    |   |-CallExpr 0x152045a68 <col:27, col:42> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x1520459c0 <col:27> 'int ()' Function 0x15201f7e8 'BSON' 'int ()'
    |   | `-RecoveryExpr 0x152045a38 <col:32, col:41> '<dependent type>' contains-errors lvalue
    |   |   |-StringLiteral 0x1520459e0 <col:32> 'char[4]' lvalue "STR"
    |   |   `-IntegerLiteral 0x152045a00 <col:41> 'int' 6
    |   `-UnaryOperator 0x152045ba0 <col:45, col:46> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x152045b80 <col:46> '<dependent type>' contains-errors lvalue
    `-CallExpr 0x152045d90 <line:10:5, col:38> '<dependent type>' contains-errors
      |-DeclRefExpr 0x152045c10 <col:5> 'int ()' Function 0x15201f5a8 'ASSERT' 'int ()'
      `-UnaryOperator 0x152045d78 <col:12, col:37> '<dependent type>' contains-errors prefix '!' cannot overflow
        `-CallExpr 0x152045d58 <col:13, col:37> '<dependent type>' contains-errors
          `-CXXDependentScopeMemberExpr 0x152045d10 <col:13, col:21> '<dependent type>' contains-errors lvalue .hasElemMatchKey
            `-RecoveryExpr 0x152045cf0 <col:13> '<dependent type>' contains-errors lvalue
