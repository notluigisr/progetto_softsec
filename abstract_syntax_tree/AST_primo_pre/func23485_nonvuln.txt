`-FunctionDecl 0x135128750  line:1:20 hid_device_io_stop 'void (struct hid_device *)' static inline
  |-ParmVarDecl 0x135128648 <col:39, col:58> col:58 used hid 'struct hid_device *'
  `-CompoundStmt 0x135140f98 <col:63, line:8:1>
    |-IfStmt 0x135140d60 <line:2:2, line:5:2>
    | |-UnaryOperator 0x135140ac0 <line:2:6, col:12> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x135140aa8 <col:7, col:12> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x135140a80 <col:7, col:12> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x135140a48 <col:7> 'struct hid_device *' lvalue ParmVar 0x135128648 'hid' 'struct hid_device *'
    | `-CompoundStmt 0x135140d40 <col:24, line:5:2>
    |   |-CallExpr 0x135140d00 <line:3:3, col:28> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x135140c00 <col:3> 'int ()' Function 0x135140b48 'dev_warn' 'int ()'
    |   | |-UnaryOperator 0x135140c80 <col:12, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | | `-RecoveryExpr 0x135140c58 <col:13, col:18> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x135140c20 <col:13> 'struct hid_device *' lvalue ParmVar 0x135128648 'hid' 'struct hid_device *'
    |   | `-StringLiteral 0x135140ce0 <col:23> 'char[4]' lvalue "STR"
    |   `-ReturnStmt 0x135140d30 <line:4:3>
    `-CallExpr 0x135140f70 <line:7:2, col:30> '<dependent type>' contains-errors
      |-DeclRefExpr 0x135140ed8 <col:2> 'int ()' Function 0x135140e20 'down' 'int ()'
      `-UnaryOperator 0x135140f58 <col:7, col:13> '<dependent type>' contains-errors prefix '&' cannot overflow
        `-RecoveryExpr 0x135140f30 <col:8, col:13> '<dependent type>' contains-errors lvalue
          `-DeclRefExpr 0x135140ef8 <col:8> 'struct hid_device *' lvalue ParmVar 0x135128648 'hid' 'struct hid_device *'
