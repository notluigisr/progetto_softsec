`-FunctionDecl 0x13e141950  line:1:6 invalid imap_munge_mbox_name 'void (struct ImapData *, char *, int, const char *)'
  |-ParmVarDecl 0x13e128648 <col:27, col:44> col:44 used idata 'struct ImapData *'
  |-ParmVarDecl 0x13e1286c8 <col:51, col:57> col:57 used dest 'char *'
  |-ParmVarDecl 0x13e128760 <col:63, col:70> col:70 invalid dlen 'int'
  |-ParmVarDecl 0x13e141800 <col:76, col:88> col:88 used src 'const char *'
  `-CompoundStmt 0x13e1421e8 <line:2:1, line:9:1>
    |-DeclStmt 0x13e141cd0 <line:3:3, col:35>
    | `-VarDecl 0x13e141a30 <col:3, col:34> col:9 used buf 'char *' cinit
    |   `-ImplicitCastExpr 0x13e141cb8 <col:15, col:34> 'char *' <IntegralToPointer>
    |     `-CallExpr 0x13e141c78 <col:15, col:34> 'int'
    |       |-ImplicitCastExpr 0x13e141c60 <col:15> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x13e141bf0 <col:15> 'int ()' Function 0x13e141b38 'mutt_str_strdup' 'int ()'
    |       `-ImplicitCastExpr 0x13e141ca0 <col:31> 'const char *' <LValueToRValue>
    |         `-DeclRefExpr 0x13e141c10 <col:31> 'const char *' lvalue ParmVar 0x13e141800 'src' 'const char *'
    |-CallExpr 0x13e141e90 <line:4:3, col:30> 'int'
    | |-ImplicitCastExpr 0x13e141e78 <col:3> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x13e141dc8 <col:3> 'int ()' Function 0x13e141d10 'imap_utf_encode' 'int ()'
    | |-ImplicitCastExpr 0x13e141ec0 <col:19> 'struct ImapData *' <LValueToRValue>
    | | `-DeclRefExpr 0x13e141de8 <col:19> 'struct ImapData *' lvalue ParmVar 0x13e128648 'idata' 'struct ImapData *'
    | `-UnaryOperator 0x13e141e60 <col:26, col:27> 'char **' prefix '&' cannot overflow
    |   `-DeclRefExpr 0x13e141e08 <col:27> 'char *' lvalue Var 0x13e141a30 'buf' 'char *'
    |-CallExpr 0x13e142038 <line:6:3, col:36> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13e141fb8 <col:3> 'int ()' Function 0x13e141f00 'imap_quote_string' 'int ()'
    | |-DeclRefExpr 0x13e141fd8 <col:21> 'char *' lvalue ParmVar 0x13e1286c8 'dest' 'char *'
    | |-RecoveryExpr 0x13e141ff8 <col:27> '<dependent type>' contains-errors lvalue
    | `-DeclRefExpr 0x13e142018 <col:33> 'char *' lvalue Var 0x13e141a30 'buf' 'char *'
    `-CallExpr 0x13e1421c0 <line:8:3, col:12> 'int'
      |-ImplicitCastExpr 0x13e1421a8 <col:3> 'int (*)()' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x13e142150 <col:3> 'int ()' Function 0x13e142098 'FREE' 'int ()'
      `-UnaryOperator 0x13e142190 <col:8, col:9> 'char **' prefix '&' cannot overflow
        `-DeclRefExpr 0x13e142170 <col:9> 'char *' lvalue Var 0x13e141a30 'buf' 'char *'
