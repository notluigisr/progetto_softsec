`-FunctionDecl 0x138928ff8  line:1:14 invalid NonMaxSuppressionSingleClassHelper 'int (int *, int *, int *, const int)'
  |-ParmVarDecl 0x138928d28 <line:2:5, col:20> col:20 invalid context 'int *'
  |-ParmVarDecl 0x138928da8 <col:29, col:41> col:41 invalid node 'int *'
  |-ParmVarDecl 0x138928e28 <col:47, col:55> col:55 invalid op_data 'int *'
  |-ParmVarDecl 0x138928ea8 <line:3:5, <invalid sloc>> col:14 invalid 'const int'
  `-CompoundStmt 0x139009038 <line:4:25, line:71:1>
    |-DeclStmt 0x138929350 <line:5:3, line:6:56>
    | `-VarDecl 0x1389290d8 <line:5:3, col:23> col:23 invalid input_box_encodings 'const int *'
    |-DeclStmt 0x138942538 <line:7:3, line:8:54>
    | `-VarDecl 0x138929380 <line:7:3, col:23> col:23 invalid decoded_boxes 'const int *'
    |-DeclStmt 0x1389426d8 <line:9:3, col:59>
    | `-VarDecl 0x138942568 <col:3, col:58> col:13 used num_boxes 'const int' cinit
    |   `-ArraySubscriptExpr 0x1389426b8 <col:25, col:58> '<dependent type>' contains-errors lvalue
    |     |-ImplicitCastExpr 0x1389426a0 <col:25, col:52> '<dependent type>' contains-errors <LValueToRValue>
    |     | `-CXXDependentScopeMemberExpr 0x138942638 <col:25, col:52> '<dependent type>' contains-errors lvalue ->data
    |     |   `-CXXDependentScopeMemberExpr 0x1389425f0 <col:25, col:46> '<dependent type>' contains-errors lvalue ->dims
    |     |     `-RecoveryExpr 0x1389425d0 <col:25> '<dependent type>' contains-errors lvalue
    |     `-IntegerLiteral 0x138942680 <col:57> 'int' 1
    |-DeclStmt 0x1389427d8 <line:10:3, line:11:51>
    | `-VarDecl 0x138942708 <line:10:3, line:11:16> line:10:15 used non_max_suppression_score_threshold 'const float' cinit
    |   `-CXXDependentScopeMemberExpr 0x138942790 <line:11:7, col:16> '<dependent type>' contains-errors lvalue ->non_max_suppression_score_threshold
    |     `-RecoveryExpr 0x138942770 <col:7> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x1389428d8 <line:12:3, line:13:49>
    | `-VarDecl 0x138942808 <line:12:3, line:13:16> line:12:15 used intersection_over_union_threshold 'const float' cinit
    |   `-CXXDependentScopeMemberExpr 0x138942890 <line:13:7, col:16> '<dependent type>' contains-errors lvalue ->intersection_over_union_threshold
    |     `-RecoveryExpr 0x138942870 <col:7> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x138942bf8 <line:18:3, line:19:74> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x138942a68 <line:18:3> 'int ()' Function 0x138942918 'TF_LITE_ENSURE' 'int ()'
    | |-RecoveryExpr 0x138942a88 <col:18> '<dependent type>' contains-errors lvalue
    | `-BinaryOperator 0x138942bd8 <col:27, line:19:73> 'int' contains-errors '&&'
    |   |-ParenExpr 0x138942b20 <line:18:27, col:68> 'int' contains-errors
    |   | `-BinaryOperator 0x138942b00 <col:28, col:64> 'int' contains-errors '>'
    |   |   |-ImplicitCastExpr 0x138942ae8 <col:28> 'float' contains-errors <LValueToRValue>
    |   |   | `-DeclRefExpr 0x138942aa8 <col:28> 'const float' contains-errors lvalue Var 0x138942808 'intersection_over_union_threshold' 'const float'
    |   |   `-FloatingLiteral 0x138942ac8 <col:64> 'float' 0.000000e+00
    |   `-ParenExpr 0x138942bb8 <line:19:31, col:73> 'int' contains-errors
    |     `-BinaryOperator 0x138942b98 <col:32, col:69> 'int' contains-errors '<='
    |       |-ImplicitCastExpr 0x138942b80 <col:32> 'float' contains-errors <LValueToRValue>
    |       | `-DeclRefExpr 0x138942b40 <col:32> 'const float' contains-errors lvalue Var 0x138942808 'intersection_over_union_threshold' 'const float'
    |       `-FloatingLiteral 0x138942b60 <col:69> 'float' 1.000000e+00
    |-CallExpr 0x138942dd8 <line:21:3, col:66> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x138942c28 <col:3> 'int ()' Function 0x138942918 'TF_LITE_ENSURE' 'int ()'
    | |-RecoveryExpr 0x138942c48 <col:18> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x138942da8 <col:27, col:65> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x138942d48 <col:27> 'int ()' Function 0x138942c90 'ValidateBoxes' 'int ()'
    |   |-RecoveryExpr 0x138942d68 <col:41> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x138942d88 <col:56> 'const int' contains-errors lvalue Var 0x138942568 'num_boxes' 'const int'
    |-RecoveryExpr 0x138942e38 <line:24:3> '<dependent type>' contains-errors lvalue
    |-RecoveryExpr 0x138942e88 <line:27:3> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x138943048 <line:31:3, col:43>
    | `-VarDecl 0x138942fe0 <col:3, col:7> col:7 used num_scores_kept 'int'
    |-DeclStmt 0x138943278 <line:36:3, col:45>
    | `-VarDecl 0x1389431d8 <col:3, col:30> col:13 used num_boxes_kept 'const int' cinit
    |   `-ImplicitCastExpr 0x138943260 <col:30> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x138943240 <col:30> 'int' lvalue Var 0x138942fe0 'num_scores_kept' 'int'
    |-DeclStmt 0x138943310 <line:37:3, col:67>
    | `-VarDecl 0x1389432a8 <col:3, col:13> col:13 used output_size 'const int'
    |-DeclStmt 0x1390083a0 <line:42:3, col:44>
    | `-VarDecl 0x139008300 <col:3, col:30> col:7 used num_active_candidate 'int' cinit
    |   `-ImplicitCastExpr 0x139008388 <col:30> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x139008368 <col:30> 'const int' lvalue Var 0x1389431d8 'num_boxes_kept' 'const int'
    |-ForStmt 0x1390085e0 <line:44:3, line:46:3>
    | |-DeclStmt 0x139008458 <line:44:8, col:19>
    | | `-VarDecl 0x1390083d0 <col:8, col:18> col:12 used row 'int' cinit
    | |   `-IntegerLiteral 0x139008438 <col:18> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x1390084e0 <col:21, col:27> 'int' '<'
    | | |-ImplicitCastExpr 0x1390084b0 <col:21> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x139008470 <col:21> 'int' lvalue Var 0x1390083d0 'row' 'int'
    | | `-ImplicitCastExpr 0x1390084c8 <col:27> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x139008490 <col:27> 'const int' lvalue Var 0x1389431d8 'num_boxes_kept' 'const int'
    | |-UnaryOperator 0x139008578 <col:43, col:46> 'int' postfix '++'
    | | `-DeclRefExpr 0x139008558 <col:43> 'int' lvalue Var 0x1390083d0 'row' 'int'
    | `-CompoundStmt 0x1390085d0 <col:50, line:46:3>
    `-ForStmt 0x139009000 <line:48:3, line:69:3>
      |-DeclStmt 0x1390086b8 <line:48:8, col:17>
      | `-VarDecl 0x139008630 <col:8, col:16> col:12 used i 'int' cinit
      |   `-IntegerLiteral 0x139008698 <col:16> 'int' 0
      |-<<<NULL>>>
      |-BinaryOperator 0x139008740 <col:19, col:23> 'int' '<'
      | |-ImplicitCastExpr 0x139008710 <col:19> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x1390086d0 <col:19> 'int' lvalue Var 0x139008630 'i' 'int'
      | `-ImplicitCastExpr 0x139008728 <col:23> 'int' <LValueToRValue>
      |   `-DeclRefExpr 0x1390086f0 <col:23> 'const int' lvalue Var 0x1389431d8 'num_boxes_kept' 'const int'
      |-UnaryOperator 0x139008780 <col:39, col:41> 'int' prefix '++'
      | `-DeclRefExpr 0x139008760 <col:41> 'int' lvalue Var 0x139008630 'i' 'int'
      `-CompoundStmt 0x139008fd8 <col:44, line:69:3>
        |-IfStmt 0x139008858 <line:49:5, col:71>
        | |-RecoveryExpr 0x139008830 <col:9, col:58> '_Bool' contains-errors
        | `-BreakStmt 0x139008850 <col:71>
        |-IfStmt 0x1390089a8 <line:50:5, line:56:5> has_else
        | |-RecoveryExpr 0x1390088b8 <line:50:9, col:36> '_Bool' contains-errors
        | |-CompoundStmt 0x139008970 <col:39, line:54:5>
        | | `-UnaryOperator 0x139008958 <line:53:7, col:27> 'int' postfix '--'
        | |   `-DeclRefExpr 0x139008938 <col:7> 'int' lvalue Var 0x139008300 'num_active_candidate' 'int'
        | `-CompoundStmt 0x139008990 <line:54:12, line:56:5>
        |   `-ContinueStmt 0x139008988 <line:55:7>
        `-ForStmt 0x139008fa0 <line:57:5, line:68:5>
          |-DeclStmt 0x139008ad0 <line:57:10, col:23>
          | `-VarDecl 0x1390089f0 <col:10, col:22> col:14 used j 'int' cinit
          |   `-BinaryOperator 0x139008ab0 <col:18, col:22> 'int' '+'
          |     |-ImplicitCastExpr 0x139008a98 <col:18> 'int' <LValueToRValue>
          |     | `-DeclRefExpr 0x139008a58 <col:18> 'int' lvalue Var 0x139008630 'i' 'int'
          |     `-IntegerLiteral 0x139008a78 <col:22> 'int' 1
          |-<<<NULL>>>
          |-BinaryOperator 0x139008b58 <col:25, col:29> 'int' '<'
          | |-ImplicitCastExpr 0x139008b28 <col:25> 'int' <LValueToRValue>
          | | `-DeclRefExpr 0x139008ae8 <col:25> 'int' lvalue Var 0x1390089f0 'j' 'int'
          | `-ImplicitCastExpr 0x139008b40 <col:29> 'int' <LValueToRValue>
          |   `-DeclRefExpr 0x139008b08 <col:29> 'const int' lvalue Var 0x1389431d8 'num_boxes_kept' 'const int'
          |-UnaryOperator 0x139008b98 <col:45, col:47> 'int' prefix '++'
          | `-DeclRefExpr 0x139008b78 <col:47> 'int' lvalue Var 0x1390089f0 'j' 'int'
          `-CompoundStmt 0x139008f88 <col:50, line:68:5>
            `-IfStmt 0x139008f68 <line:58:7, line:67:7>
              |-RecoveryExpr 0x139008bf0 <line:58:11, col:38> '_Bool' contains-errors
              `-CompoundStmt 0x139008f48 <col:41, line:67:7>
                |-DeclStmt 0x139008df0 <line:59:9, line:61:45>
                | `-VarDecl 0x139008c28 <line:59:9, col:15> col:15 used intersection_over_union 'float'
                `-IfStmt 0x139008f28 <line:63:9, line:66:9>
                  |-BinaryOperator 0x139008e78 <line:63:13, col:39> 'int' contains-errors '>'
                  | |-ImplicitCastExpr 0x139008e48 <col:13> 'float' <LValueToRValue>
                  | | `-DeclRefExpr 0x139008e08 <col:13> 'float' lvalue Var 0x139008c28 'intersection_over_union' 'float'
                  | `-ImplicitCastExpr 0x139008e60 <col:39> 'float' contains-errors <LValueToRValue>
                  |   `-DeclRefExpr 0x139008e28 <col:39> 'const float' contains-errors lvalue Var 0x138942808 'intersection_over_union_threshold' 'const float'
                  `-CompoundStmt 0x139008f10 <col:74, line:66:9>
                    `-UnaryOperator 0x139008ef8 <line:65:11, col:31> 'int' postfix '--'
                      `-DeclRefExpr 0x139008ed8 <col:11> 'int' lvalue Var 0x139008300 'num_active_candidate' 'int'
