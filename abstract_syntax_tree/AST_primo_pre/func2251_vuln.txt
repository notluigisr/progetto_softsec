`-FunctionDecl 0x156027578  line:1:12 invalid walk_pmd_range 'int (int *, unsigned long, unsigned long, struct mm_walk *)' static
  |-ParmVarDecl 0x15600dd28 <col:27, col:34> col:34 referenced invalid pud 'int *'
  |-ParmVarDecl 0x15600dda8 <col:39, col:53> col:53 used addr 'unsigned long'
  |-ParmVarDecl 0x15600de28 <col:59, col:73> col:73 used end 'unsigned long'
  |-ParmVarDecl 0x156027428 <line:2:6, col:22> col:22 used walk 'struct mm_walk *'
  `-CompoundStmt 0x157009090 <line:3:1, line:38:1>
    |-DeclStmt 0x1560276f8 <line:5:2, col:20>
    | `-VarDecl 0x156027690 <col:2, col:16> col:16 used next 'unsigned long'
    |-DeclStmt 0x1560277b0 <line:6:2, col:13>
    | `-VarDecl 0x156027728 <col:2, col:12> col:6 used err 'int' cinit
    |   `-IntegerLiteral 0x156027790 <col:12> 'int' 0
    |-BinaryOperator 0x156027a00 <line:8:2, col:28> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x1560277e8 <col:2> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x1560277c8 <col:2> 'int *' lvalue ParmVar 0x15600dd28 'pud' 'int *'
    | `-CallExpr 0x1560279d0 <col:8, col:28> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x156027970 <col:8> 'int ()' Function 0x1560278b8 'pmd_offset' 'int ()'
    |   |-RecoveryExpr 0x156027990 <col:19> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x1560279b0 <col:24> 'unsigned long' lvalue ParmVar 0x15600dda8 'addr' 'unsigned long'
    |-DoStmt 0x157009028 <line:9:2, line:35:42>
    | |-CompoundStmt 0x157008eb0 <line:9:5, line:35:2>
    | | |-LabelStmt 0x156027cb0 <line:10:1, line:11:32> 'again'
    | | | `-BinaryOperator 0x156027c40 <col:3, col:32> 'unsigned long' '='
    | | |   |-DeclRefExpr 0x156027a20 <col:3> 'unsigned long' lvalue Var 0x156027690 'next' 'unsigned long'
    | | |   `-ImplicitCastExpr 0x156027c28 <col:10, col:32> 'unsigned long' <IntegralCast>
    | | |     `-CallExpr 0x156027bc8 <col:10, col:32> 'int'
    | | |       |-ImplicitCastExpr 0x156027bb0 <col:10> 'int (*)()' <FunctionToPointerDecay>
    | | |       | `-DeclRefExpr 0x156027b20 <col:10> 'int ()' Function 0x156027a68 'pmd_addr_end' 'int ()'
    | | |       |-ImplicitCastExpr 0x156027bf8 <col:23> 'unsigned long' <LValueToRValue>
    | | |       | `-DeclRefExpr 0x156027b40 <col:23> 'unsigned long' lvalue ParmVar 0x15600dda8 'addr' 'unsigned long'
    | | |       `-ImplicitCastExpr 0x156027c10 <col:29> 'unsigned long' <LValueToRValue>
    | | |         `-DeclRefExpr 0x156027b60 <col:29> 'unsigned long' lvalue ParmVar 0x15600de28 'end' 'unsigned long'
    | | |-IfStmt 0x156028120 <line:12:3, line:18:3>
    | | | |-CallExpr 0x156027eb0 <line:12:7, col:20> '<dependent type>' contains-errors
    | | | | |-DeclRefExpr 0x156027db0 <col:7> 'int ()' Function 0x156027cf8 'pmd_none' 'int ()'
    | | | | `-UnaryOperator 0x156027e98 <col:16, col:17> '<dependent type>' contains-errors prefix '*' cannot overflow
    | | | |   `-ImplicitCastExpr 0x156027e80 <col:17> '<dependent type>' contains-errors <LValueToRValue>
    | | | |     `-RecoveryExpr 0x156027e60 <col:17> '<dependent type>' contains-errors lvalue
    | | | `-CompoundStmt 0x1560280f8 <col:23, line:18:3>
    | | |   |-IfStmt 0x156028070 <line:13:4, line:14:42>
    | | |   | |-RecoveryExpr 0x156027f10 <line:13:8, col:14> '<dependent type>' contains-errors lvalue
    | | |   | | `-DeclRefExpr 0x156027ed8 <col:8> 'struct mm_walk *' lvalue ParmVar 0x156027428 'walk' 'struct mm_walk *'
    | | |   | `-BinaryOperator 0x156028050 <line:14:5, col:42> 'int' contains-errors '='
    | | |   |   |-DeclRefExpr 0x156027f38 <col:5> 'int' lvalue Var 0x156027728 'err' 'int'
    | | |   |   `-CallExpr 0x156028018 <col:11, col:42> '<dependent type>' contains-errors
    | | |   |     |-RecoveryExpr 0x156027f90 <col:11, col:17> '<dependent type>' contains-errors lvalue
    | | |   |     | `-DeclRefExpr 0x156027f58 <col:11> 'struct mm_walk *' lvalue ParmVar 0x156027428 'walk' 'struct mm_walk *'
    | | |   |     |-DeclRefExpr 0x156027fb8 <col:26> 'unsigned long' lvalue ParmVar 0x15600dda8 'addr' 'unsigned long'
    | | |   |     |-DeclRefExpr 0x156027fd8 <col:32> 'unsigned long' lvalue Var 0x156027690 'next' 'unsigned long'
    | | |   |     `-DeclRefExpr 0x156027ff8 <col:38> 'struct mm_walk *' lvalue ParmVar 0x156027428 'walk' 'struct mm_walk *'
    | | |   |-IfStmt 0x1560280d0 <line:15:4, line:16:5>
    | | |   | |-ImplicitCastExpr 0x1560280b0 <line:15:8> 'int' <LValueToRValue>
    | | |   | | `-DeclRefExpr 0x156028090 <col:8> 'int' lvalue Var 0x156027728 'err' 'int'
    | | |   | `-BreakStmt 0x1560280c8 <line:16:5>
    | | |   `-ContinueStmt 0x1560280f0 <line:17:4>
    | | |-IfStmt 0x156028398 <line:20:3, line:21:47>
    | | | |-RecoveryExpr 0x156028178 <line:20:7, col:13> '<dependent type>' contains-errors lvalue
    | | | | `-DeclRefExpr 0x156028140 <col:7> 'struct mm_walk *' lvalue ParmVar 0x156027428 'walk' 'struct mm_walk *'
    | | | `-BinaryOperator 0x156028378 <line:21:4, col:47> 'int' contains-errors '='
    | | |   |-DeclRefExpr 0x1560281a0 <col:4> 'int' lvalue Var 0x156027728 'err' 'int'
    | | |   `-CallExpr 0x156028338 <col:10, col:47> '<dependent type>' contains-errors
    | | |     |-RecoveryExpr 0x1560281f8 <col:10, col:16> '<dependent type>' contains-errors lvalue
    | | |     | `-DeclRefExpr 0x1560281c0 <col:10> 'struct mm_walk *' lvalue ParmVar 0x156027428 'walk' 'struct mm_walk *'
    | | |     |-RecoveryExpr 0x156028318 <col:26> '<dependent type>' contains-errors lvalue
    | | |     |-DeclRefExpr 0x156028238 <col:31> 'unsigned long' lvalue ParmVar 0x15600dda8 'addr' 'unsigned long'
    | | |     |-DeclRefExpr 0x156028258 <col:37> 'unsigned long' lvalue Var 0x156027690 'next' 'unsigned long'
    | | |     `-DeclRefExpr 0x156028278 <col:43> 'struct mm_walk *' lvalue ParmVar 0x156027428 'walk' 'struct mm_walk *'
    | | |-IfStmt 0x157008800 <line:22:3, line:23:4>
    | | | |-ImplicitCastExpr 0x1560283d8 <line:22:7> 'int' <LValueToRValue>
    | | | | `-DeclRefExpr 0x1560283b8 <col:7> 'int' lvalue Var 0x156027728 'err' 'int'
    | | | `-BreakStmt 0x1560283f0 <line:23:4>
    | | |-IfStmt 0x1570088b8 <line:26:3, line:27:4>
    | | | |-UnaryOperator 0x157008898 <line:26:7, col:14> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | | | `-ImplicitCastExpr 0x157008880 <col:8, col:14> '<dependent type>' contains-errors <LValueToRValue>
    | | | |   `-RecoveryExpr 0x157008858 <col:8, col:14> '<dependent type>' contains-errors lvalue
    | | | |     `-DeclRefExpr 0x157008820 <col:8> 'struct mm_walk *' lvalue ParmVar 0x156027428 'walk' 'struct mm_walk *'
    | | | `-ContinueStmt 0x1570088b0 <line:27:4>
    | | |-CallExpr 0x157008ac0 <line:29:3, col:36> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x1570089b8 <col:3> 'int ()' Function 0x157008900 'split_huge_page_pmd' 'int ()'
    | | | |-RecoveryExpr 0x157008a10 <col:23, col:29> '<dependent type>' contains-errors lvalue
    | | | | `-DeclRefExpr 0x1570089d8 <col:23> 'struct mm_walk *' lvalue ParmVar 0x156027428 'walk' 'struct mm_walk *'
    | | | `-RecoveryExpr 0x157008aa0 <col:33> '<dependent type>' contains-errors lvalue
    | | |-IfStmt 0x157008cb0 <line:30:3, line:31:9>
    | | | |-CallExpr 0x157008c70 <line:30:7, col:32> '<dependent type>' contains-errors
    | | | | |-DeclRefExpr 0x157008bd0 <col:7> 'int ()' Function 0x157008b18 'pmd_none_or_clear_bad' 'int ()'
    | | | | `-RecoveryExpr 0x157008c50 <col:29> '<dependent type>' contains-errors lvalue
    | | | `-GotoStmt 0x157008c98 <line:31:4, col:9> 'again' 0x156027c60
    | | `-IfStmt 0x157008e90 <line:33:3, line:34:4>
    | |   |-ImplicitCastExpr 0x157008e70 <line:33:7> 'int' <LValueToRValue>
    | |   | `-DeclRefExpr 0x157008e50 <col:7> 'int' lvalue Var 0x156027728 'err' 'int'
    | |   `-BreakStmt 0x157008e88 <line:34:4>
    | `-RecoveryExpr 0x157009008 <line:35:11, col:39> '_Bool' contains-errors
    `-ReturnStmt 0x157009080 <line:37:2, col:9>
      `-ImplicitCastExpr 0x157009068 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x157009048 <col:9> 'int' lvalue Var 0x156027728 'err' 'int'
