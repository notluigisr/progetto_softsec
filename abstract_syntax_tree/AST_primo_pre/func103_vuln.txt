`-FunctionDecl 0x133023ad8  line:1:1 invalid ast_for_for_stmt 'int (struct compiling *, const int *, int)'
  |-ParmVarDecl 0x13300a848 <col:18, col:36> col:36 used c 'struct compiling *'
  |-ParmVarDecl 0x13300a8e0 <col:39, col:51> col:51 invalid n0 'const int *'
  |-ParmVarDecl 0x13300a960 <col:55, col:60> col:60 invalid is_async 'int'
  `-CompoundStmt 0x132927660 <line:2:1, line:51:1>
    |-DeclStmt 0x133023e70 <line:3:5, col:56>
    | `-VarDecl 0x133023bb0 <col:5, col:24> col:24 invalid n 'const int *const'
    |-DeclStmt 0x133023fe8 <line:7:5, col:28>
    | `-VarDecl 0x133023f80 <col:5, col:17> col:17 referenced invalid node_target 'const int *'
    |-DeclStmt 0x133024118 <line:8:5, col:35>
    | |-VarDecl 0x133024018 <col:5, col:9> col:9 used end_lineno 'int'
    | `-VarDecl 0x133024098 <col:5, col:21> col:21 used end_col_offset 'int'
    |-CallExpr 0x1330242b8 <line:10:5, col:20> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x133024210 <col:5> 'int ()' Function 0x133024158 'REQ' 'int ()'
    | |-RecoveryExpr 0x133024230 <col:9> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x133024298 <col:12> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x133024768 <line:12:5, line:16:5>
    | |-BinaryOperator 0x133024450 <line:12:9, col:19> 'int' contains-errors '=='
    | | |-CallExpr 0x133024408 <col:9, col:14> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x1330243c8 <col:9> 'int ()' Function 0x133024310 'NCH' 'int ()'
    | | | `-RecoveryExpr 0x1330243e8 <col:13> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x133024430 <col:19> 'int' 9
    | `-CompoundStmt 0x133024750 <col:22, line:16:5>
    |   `-IfStmt 0x133024730 <line:14:9, line:15:20>
    |     |-UnaryOperator 0x1330246d0 <line:14:13, col:14> '<dependent type>' contains-errors prefix '!' cannot overflow
    |     | `-ImplicitCastExpr 0x1330246b8 <col:14> '<dependent type>' contains-errors <LValueToRValue>
    |     |   `-RecoveryExpr 0x133024698 <col:14> '<dependent type>' contains-errors lvalue
    |     `-ReturnStmt 0x133024720 <line:15:13, col:20>
    |       `-RecoveryExpr 0x133024700 <col:20> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x133024860 <line:18:5, col:29> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x1330247a8 <col:5> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x133024788 <col:5> 'const int *' lvalue Var 0x133023f80 'node_target' 'const int *'
    | `-CallExpr 0x133024830 <col:19, col:29> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1330247d0 <col:19> 'int ()' Function 0x133023cd8 'CHILD' 'int ()'
    |   |-RecoveryExpr 0x1330247f0 <col:25> '<dependent type>' contains-errors lvalue
    |   `-IntegerLiteral 0x133024810 <col:28> 'int' 1
    `-IfStmt 0x132927050 <line:38:5, line:42:5> has_else
      |-RecoveryExpr 0x132926dd8 <line:38:9, col:16> '_Bool' contains-errors
      |-CompoundStmt 0x132926fa0 <col:22, line:40:5>
      `-CompoundStmt 0x132927040 <col:12, line:42:5>
