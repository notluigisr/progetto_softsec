`-FunctionDecl 0x14b928288  line:1:5 invalid parse_uid 'int (const char *, int *)'
  |-ParmVarDecl 0x14b9280d8 <col:15, col:27> col:27 used s 'const char *'
  |-ParmVarDecl 0x14b9281a8 <col:30, col:37> col:37 invalid ret 'int *'
  `-CompoundStmt 0x14b941ef8 <col:42, line:19:1>
    |-DeclStmt 0x14b9283c0 <line:3:9, col:14>
    | `-VarDecl 0x14b928358 <col:9, col:13> col:13 used r 'int'
    |-CallExpr 0x14b9285b8 <line:5:9, col:17> 'int'
    | |-ImplicitCastExpr 0x14b9285a0 <col:9> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x14b928530 <col:9> 'int ()' Function 0x14b928478 'assert' 'int ()'
    | `-ImplicitCastExpr 0x14b9285e0 <col:16> 'const char *' <LValueToRValue>
    |   `-DeclRefExpr 0x14b928550 <col:16> 'const char *' lvalue ParmVar 0x14b9280d8 's' 'const char *'
    |-BinaryOperator 0x14b9419e0 <line:8:9, col:32> 'int' contains-errors '='
    | |-DeclRefExpr 0x14b928728 <col:9> 'int' lvalue Var 0x14b928358 'r' 'int'
    | `-CallExpr 0x14b9419b0 <col:13, col:32> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14b9418b8 <col:13> 'int ()' Function 0x14b941800 'safe_atou32' 'int ()'
    |   |-DeclRefExpr 0x14b9418d8 <col:25> 'const char *' lvalue ParmVar 0x14b9280d8 's' 'const char *'
    |   `-UnaryOperator 0x14b941998 <col:28, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x14b941978 <col:29> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14b941ac0 <line:9:9, line:10:24>
    | |-BinaryOperator 0x14b941a58 <line:9:13, col:17> 'int' '<'
    | | |-ImplicitCastExpr 0x14b941a40 <col:13> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x14b941a00 <col:13> 'int' lvalue Var 0x14b928358 'r' 'int'
    | | `-IntegerLiteral 0x14b941a20 <col:17> 'int' 0
    | `-ReturnStmt 0x14b941ab0 <line:10:17, col:24>
    |   `-ImplicitCastExpr 0x14b941a98 <col:24> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x14b941a78 <col:24> 'int' lvalue Var 0x14b928358 'r' 'int'
    |-IfStmt 0x14b941d40 <line:12:9, line:13:25>
    | |-UnaryOperator 0x14b941c80 <line:12:13, col:30> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-CallExpr 0x14b941c58 <col:14, col:30> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x14b941bc0 <col:14> 'int ()' Function 0x14b941b08 'uid_is_valid' 'int ()'
    | |   `-RecoveryExpr 0x14b941c38 <col:27> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x14b941d30 <line:13:17, col:25>
    |   `-UnaryOperator 0x14b941d18 <col:24, col:25> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x14b941d00 <col:25> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x14b941ce0 <col:25> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14b941ea8 <line:15:9, line:16:24>
    | |-RecoveryExpr 0x14b941d60 <line:15:13> '<dependent type>' contains-errors lvalue
    | `-BinaryOperator 0x14b941e88 <line:16:17, col:24> '<dependent type>' contains-errors '='
    |   |-UnaryOperator 0x14b941e50 <col:17, col:18> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   | `-ImplicitCastExpr 0x14b941e38 <col:18> '<dependent type>' contains-errors <LValueToRValue>
    |   |   `-RecoveryExpr 0x14b941d80 <col:18> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x14b941e68 <col:24> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x14b941ee8 <line:18:9, col:16>
      `-IntegerLiteral 0x14b941ec8 <col:16> 'int' 0
