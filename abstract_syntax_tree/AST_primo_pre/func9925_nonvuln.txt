`-FunctionDecl 0x14e01bb18  line:1:8 invalid gf_bs_transfer 'int (int *, int *, _Bool)'
  |-ParmVarDecl 0x14e01b928 <col:23, col:37> col:37 referenced invalid dst 'int *'
  |-ParmVarDecl 0x14e01b9a8 <col:42, col:56> col:56 referenced invalid src 'int *'
  |-ParmVarDecl 0x14e01ba20 <col:61, col:66> col:66 used keep_src '_Bool'
  `-CompoundStmt 0x14d917128 <line:2:1, line:31:1>
    |-CallExpr 0x14e01bf08 <line:8:2, col:41> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14e01bda0 <col:2> 'int ()' Function 0x14e01bce8 'gf_bs_get_content' 'int ()'
    | |-RecoveryExpr 0x14e01bdc0 <col:20> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x14e01beb8 <col:25, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-RecoveryExpr 0x14e01be98 <col:26> '<dependent type>' contains-errors lvalue
    | `-UnaryOperator 0x14e01bef0 <col:32, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x14e01bed0 <col:33> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14d916e00 <line:9:2, line:21:2>
    | |-BinaryOperator 0x14d9168c0 <line:9:6, col:16> 'int' contains-errors '||'
    | | |-UnaryOperator 0x14d916858 <col:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | | `-ImplicitCastExpr 0x14d916840 <col:7> '<dependent type>' contains-errors <LValueToRValue>
    | | |   `-RecoveryExpr 0x14d916820 <col:7> '<dependent type>' contains-errors lvalue
    | | `-UnaryOperator 0x14d9168a8 <col:15, col:16> '<dependent type>' contains-errors prefix '!' cannot overflow
    | |   `-ImplicitCastExpr 0x14d916890 <col:16> '<dependent type>' contains-errors <LValueToRValue>
    | |     `-RecoveryExpr 0x14d916870 <col:16> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x14d916de8 <line:10:2, line:21:2>
    |   `-IfStmt 0x14d916dc8 <line:11:3, line:19:3>
    |     |-RecoveryExpr 0x14d916918 <line:11:7> '<dependent type>' contains-errors lvalue
    |     `-CompoundStmt 0x14d916db0 <col:13, line:19:3>
    |       `-IfStmt 0x14d916d80 <line:12:4, line:17:4> has_else
    |         |-ImplicitCastExpr 0x14d916958 <line:12:8> '_Bool' <LValueToRValue>
    |         | `-DeclRefExpr 0x14d916938 <col:8> '_Bool' lvalue ParmVar 0x14e01ba20 'keep_src' '_Bool'
    |         |-CompoundStmt 0x14d916ba0 <col:18, line:15:4>
    |         | |-BinaryOperator 0x14d916a78 <line:13:5, col:21> '<dependent type>' contains-errors '='
    |         | | |-CXXDependentScopeMemberExpr 0x14d9169b8 <col:5, col:10> '<dependent type>' contains-errors lvalue ->original
    |         | | | `-RecoveryExpr 0x14d916990 <col:5> '<dependent type>' contains-errors lvalue
    |         | | |   `-DeclRefExpr 0x14d916970 <col:5> 'int *' lvalue ParmVar 0x14e01b9a8 'src' 'int *'
    |         | | `-RecoveryExpr 0x14d916a58 <col:21> '<dependent type>' contains-errors lvalue
    |         | `-BinaryOperator 0x14d916b80 <line:14:5, col:17> '<dependent type>' contains-errors '='
    |         |   |-CXXDependentScopeMemberExpr 0x14d916ae0 <col:5, col:10> '<dependent type>' contains-errors lvalue ->size
    |         |   | `-RecoveryExpr 0x14d916ab8 <col:5> '<dependent type>' contains-errors lvalue
    |         |   |   `-DeclRefExpr 0x14d916a98 <col:5> 'int *' lvalue ParmVar 0x14e01b9a8 'src' 'int *'
    |         |   `-RecoveryExpr 0x14d916b60 <col:17> '<dependent type>' contains-errors lvalue
    |         `-CompoundStmt 0x14d916d68 <line:15:11, line:17:4>
    |           `-CallExpr 0x14d916d40 <line:16:5, col:17> '<dependent type>' contains-errors
    |             |-DeclRefExpr 0x14d916ca0 <col:5> 'int ()' Function 0x14d916be8 'gf_free' 'int ()'
    |             `-RecoveryExpr 0x14d916d20 <col:13> '<dependent type>' contains-errors lvalue
    `-IfStmt 0x14d9170d8 <line:23:2, line:28:2> has_else
      |-ImplicitCastExpr 0x14d916f60 <line:23:6> '_Bool' <LValueToRValue>
      | `-DeclRefExpr 0x14d916f40 <col:6> '_Bool' lvalue ParmVar 0x14e01ba20 'keep_src' '_Bool'
      |-CompoundStmt 0x14d917098 <col:16, line:26:2>
      `-CompoundStmt 0x14d9170c8 <col:9, line:28:2>
