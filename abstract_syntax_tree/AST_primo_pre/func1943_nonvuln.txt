`-FunctionDecl 0x138140b48  line:1:12 __netlink_sendskb 'int (struct sock *, struct sk_buff *)' static
  |-ParmVarDecl 0x138128648 <col:30, col:43> col:43 used sk 'struct sock *'
  |-ParmVarDecl 0x138140a28 <col:47, col:63> col:63 used skb 'struct sk_buff *'
  `-CompoundStmt 0x138141070 <line:2:1, line:8:1>
    |-DeclStmt 0x138140d28 <line:3:2, col:20>
    | `-VarDecl 0x138140c60 <col:2, col:17> col:6 used len 'int' cinit
    |   `-RecoveryExpr 0x138140d00 <col:12, col:17> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x138140cc8 <col:12> 'struct sk_buff *' lvalue ParmVar 0x138140a28 'skb' 'struct sk_buff *'
    |-CallExpr 0x138140f28 <line:5:2, col:43> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x138140e70 <col:2> 'int ()' Function 0x138140db8 'skb_queue_tail' 'int ()'
    | |-UnaryOperator 0x138140ef0 <col:17, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-RecoveryExpr 0x138140ec8 <col:18, col:22> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x138140e90 <col:18> 'struct sock *' lvalue ParmVar 0x138128648 'sk' 'struct sock *'
    | `-DeclRefExpr 0x138140f08 <col:40> 'struct sk_buff *' lvalue ParmVar 0x138140a28 'skb' 'struct sk_buff *'
    |-CallExpr 0x138140ff8 <line:6:2, col:27> '<dependent type>' contains-errors
    | |-RecoveryExpr 0x138140f90 <col:2, col:6> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x138140f58 <col:2> 'struct sock *' lvalue ParmVar 0x138128648 'sk' 'struct sock *'
    | |-DeclRefExpr 0x138140fb8 <col:20> 'struct sock *' lvalue ParmVar 0x138128648 'sk' 'struct sock *'
    | `-DeclRefExpr 0x138140fd8 <col:24> 'int' contains-errors lvalue Var 0x138140c60 'len' 'int'
    `-ReturnStmt 0x138141060 <line:7:2, col:9>
      `-ImplicitCastExpr 0x138141048 <col:9> 'int' contains-errors <LValueToRValue>
        `-DeclRefExpr 0x138141028 <col:9> 'int' contains-errors lvalue Var 0x138140c60 'len' 'int'
