`-FunctionDecl 0x1489282e8  line:1:1 invalid int_to_string_base_internal 'int (int, int, int)'
  |-ParmVarDecl 0x1489280f0 <col:29, col:31> col:31 invalid num 'int'
  |-ParmVarDecl 0x148928170 <col:36, col:40> col:40 used base 'int'
  |-ParmVarDecl 0x1489281f0 <col:46, col:50> col:50 used length 'int'
  `-CompoundStmt 0x148941be8 <line:2:1, line:26:1>
    |-IfStmt 0x1489285f8 <line:7:5, line:11:5>
    | |-UnaryOperator 0x1489285d0 <line:7:9, col:55> 'int' prefix '!' cannot overflow
    | | `-ParenExpr 0x1489285b0 <col:11, col:55> 'int'
    | |   `-BinaryOperator 0x148928590 <col:12, col:54> 'int' '||'
    | |     |-BinaryOperator 0x1489284d8 <col:12, col:38> 'int' '||'
    | |     | |-ParenExpr 0x148928420 <col:12, col:22> 'int'
    | |     | | `-BinaryOperator 0x148928400 <col:13, col:21> 'int' '=='
    | |     | |   |-ImplicitCastExpr 0x1489283e8 <col:13> 'int' <LValueToRValue>
    | |     | |   | `-DeclRefExpr 0x1489283a8 <col:13> 'int' lvalue ParmVar 0x148928170 'base' 'int'
    | |     | |   `-IntegerLiteral 0x1489283c8 <col:21> 'int' 8
    | |     | `-ParenExpr 0x1489284b8 <col:27, col:38> 'int'
    | |     |   `-BinaryOperator 0x148928498 <col:28, col:36> 'int' '=='
    | |     |     |-ImplicitCastExpr 0x148928480 <col:28> 'int' <LValueToRValue>
    | |     |     | `-DeclRefExpr 0x148928440 <col:28> 'int' lvalue ParmVar 0x148928170 'base' 'int'
    | |     |     `-IntegerLiteral 0x148928460 <col:36> 'int' 10
    | |     `-ParenExpr 0x148928570 <col:43, col:54> 'int'
    | |       `-BinaryOperator 0x148928550 <col:44, col:52> 'int' '=='
    | |         |-ImplicitCastExpr 0x148928538 <col:44> 'int' <LValueToRValue>
    | |         | `-DeclRefExpr 0x1489284f8 <col:44> 'int' lvalue ParmVar 0x148928170 'base' 'int'
    | |         `-IntegerLiteral 0x148928518 <col:52> 'int' 16
    | `-CompoundStmt 0x1489285e8 <line:8:5, line:11:5>
    |-RecoveryExpr 0x148928648 <line:12:5> '<dependent type>' contains-errors lvalue
    |-RecoveryExpr 0x1489286b0 <line:14:5> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x148928788 <line:15:5, col:27>
    | `-VarDecl 0x1489286e8 <col:5, col:22> col:9 used str_length 'int' cinit
    |   `-RecoveryExpr 0x148928768 <col:22> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x148941938 <line:16:5, line:19:5>
    | |-BinaryOperator 0x1489418f0 <line:16:9, col:45> 'int' contains-errors '&&'
    | | |-ParenExpr 0x148941820 <col:9, col:20> 'int'
    | | | `-BinaryOperator 0x148941800 <col:10, col:19> 'int' '>'
    | | |   |-ImplicitCastExpr 0x1489287e0 <col:10> 'int' <LValueToRValue>
    | | |   | `-DeclRefExpr 0x1489287a0 <col:10> 'int' lvalue ParmVar 0x1489281f0 'length' 'int'
    | | |   `-IntegerLiteral 0x1489287c0 <col:19> 'int' 0
    | | `-ParenExpr 0x1489418d0 <col:25, col:45> 'int' contains-errors
    | |   `-BinaryOperator 0x1489418b0 <col:26, col:39> 'int' contains-errors '<'
    | |     |-ImplicitCastExpr 0x148941880 <col:26> 'int' contains-errors <LValueToRValue>
    | |     | `-DeclRefExpr 0x148941840 <col:26> 'int' contains-errors lvalue Var 0x1489286e8 'str_length' 'int'
    | |     `-ImplicitCastExpr 0x148941898 <col:39> 'int' <LValueToRValue>
    | |       `-DeclRefExpr 0x148941860 <col:39> 'int' lvalue ParmVar 0x1489281f0 'length' 'int'
    | `-CompoundStmt 0x148941928 <line:17:5, line:19:5>
    |-IfStmt 0x148941b80 <line:21:5, line:24:5>
    | |-BinaryOperator 0x148941b38 <line:21:9, col:46> 'int' contains-errors '&&'
    | | |-ParenExpr 0x148941a50 <col:9, col:20> 'int'
    | | | `-BinaryOperator 0x148941a30 <col:10, col:19> 'int' '<'
    | | |   |-ImplicitCastExpr 0x148941a18 <col:10> 'int' <LValueToRValue>
    | | |   | `-DeclRefExpr 0x1489419d8 <col:10> 'int' lvalue ParmVar 0x1489281f0 'length' 'int'
    | | |   `-IntegerLiteral 0x1489419f8 <col:19> 'int' 0
    | | `-ParenExpr 0x148941b18 <col:25, col:46> 'int' contains-errors
    | |   `-BinaryOperator 0x148941af8 <col:26, col:40> 'int' contains-errors '<'
    | |     |-ImplicitCastExpr 0x148941ae0 <col:26> 'int' contains-errors <LValueToRValue>
    | |     | `-DeclRefExpr 0x148941a70 <col:26> 'int' contains-errors lvalue Var 0x1489286e8 'str_length' 'int'
    | |     `-UnaryOperator 0x148941ac8 <col:39, col:40> 'int' prefix '-'
    | |       `-ImplicitCastExpr 0x148941ab0 <col:40> 'int' <LValueToRValue>
    | |         `-DeclRefExpr 0x148941a90 <col:40> 'int' lvalue ParmVar 0x1489281f0 'length' 'int'
    | `-CompoundStmt 0x148941b70 <line:22:5, line:24:5>
    `-ReturnStmt 0x148941bd8 <line:25:5, col:12>
      `-RecoveryExpr 0x148941bb8 <col:12> '<dependent type>' contains-errors lvalue
