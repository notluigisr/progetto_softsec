`-FunctionDecl 0x13800dec8  line:1:12 referenced ep_loop_check_proc 'int (void *, void *, int)' static
  |-ParmVarDecl 0x13800dcd8 <col:31, col:37> col:37 used priv 'void *'
  |-ParmVarDecl 0x13800dd58 <col:43, col:49> col:49 cookie 'void *'
  |-ParmVarDecl 0x13800ddd8 <col:57, col:61> col:61 used call_nests 'int'
  `-CompoundStmt 0x13802c2d8 <line:2:1, line:34:1>
    |-DeclStmt 0x13800e070 <line:3:2, col:15>
    | `-VarDecl 0x13800dfe8 <col:2, col:14> col:6 used error 'int' cinit
    |   `-IntegerLiteral 0x13800e050 <col:14> 'int' 0
    |-DeclStmt 0x13800e2c8 <line:4:2, col:26>
    | |-RecordDecl 0x13800e088 <col:2, col:9> col:9 struct file
    | `-VarDecl 0x13800e1f8 <col:2, col:22> col:15 used file 'struct file *' cinit
    |   `-ImplicitCastExpr 0x13800e298 <col:22> 'struct file *' <BitCast>
    |     `-ImplicitCastExpr 0x13800e280 <col:22> 'void *' <LValueToRValue>
    |       `-DeclRefExpr 0x13800e260 <col:22> 'void *' lvalue ParmVar 0x13800dcd8 'priv' 'void *'
    |-DeclStmt 0x13802ad60 <line:5:2, col:43>
    | |-RecordDecl 0x13800e2e0 <col:2, col:9> col:9 struct eventpoll
    | `-VarDecl 0x13802a858 <col:2, col:31> col:20 used ep 'struct eventpoll *' cinit
    |   `-RecoveryExpr 0x13802ad20 <col:25, col:31> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x13802a8c0 <col:25> 'struct file *' lvalue Var 0x13800e1f8 'file' 'struct file *'
    |-DeclStmt 0x13802ae70 <line:6:2, col:30>
    | `-VarDecl 0x13802ae08 <col:2, col:20> col:20 used ep_tovisit 'struct eventpoll *'
    |-DeclStmt 0x13802b078 <line:7:2, col:21>
    | |-RecordDecl 0x13802ae88 <col:2, col:9> col:9 struct rb_node
    | `-VarDecl 0x13802aff8 <col:2, col:18> col:18 used rbp 'struct rb_node *'
    |-DeclStmt 0x13802b278 <line:8:2, col:20>
    | |-RecordDecl 0x13802b090 <col:2, col:9> col:9 struct epitem
    | `-VarDecl 0x13802b1f8 <col:2, col:17> col:17 used epi 'struct epitem *'
    |-CallExpr 0x13802b4d0 <line:10:2, col:44> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13802b3c0 <col:2> 'int ()' Function 0x13802b308 'mutex_lock_nested' 'int ()'
    | |-UnaryOperator 0x13802b440 <col:20, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-RecoveryExpr 0x13802b418 <col:21, col:25> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x13802b3e0 <col:21> 'struct eventpoll *' contains-errors lvalue Var 0x13802a858 'ep' 'struct eventpoll *'
    | `-BinaryOperator 0x13802b4b0 <col:30, col:43> 'int' '+'
    |   |-ImplicitCastExpr 0x13802b498 <col:30> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x13802b458 <col:30> 'int' lvalue ParmVar 0x13800ddd8 'call_nests' 'int'
    |   `-IntegerLiteral 0x13802b478 <col:43> 'int' 1
    |-BinaryOperator 0x13802b580 <line:11:2, col:16> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x13802b538 <col:2, col:6> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x13802b500 <col:2> 'struct eventpoll *' contains-errors lvalue Var 0x13802a858 'ep' 'struct eventpoll *'
    | `-IntegerLiteral 0x13802b560 <col:16> 'int' 1
    |-CallExpr 0x13802b7b0 <line:12:2, col:48> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13802b680 <col:2> 'int ()' Function 0x13802b5c8 'list_add' 'int ()'
    | |-UnaryOperator 0x13802b700 <col:11, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-RecoveryExpr 0x13802b6d8 <col:12, col:16> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x13802b6a0 <col:12> 'struct eventpoll *' contains-errors lvalue Var 0x13802a858 'ep' 'struct eventpoll *'
    | `-UnaryOperator 0x13802b798 <col:35, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x13802b778 <col:36> '<dependent type>' contains-errors lvalue
    |-ForStmt 0x13802c0b8 <line:13:2, line:30:2>
    | |-BinaryOperator 0x12f9227a0 <line:13:7, col:37> 'struct rb_node *' contains-errors '='
    | | |-DeclRefExpr 0x13802b7e0 <col:7> 'struct rb_node *' lvalue Var 0x13802aff8 'rbp' 'struct rb_node *'
    | | `-CallExpr 0x12f922778 <col:13, col:37> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x12f9226e0 <col:13> 'int ()' Function 0x12f922628 'rb_first_cached' 'int ()'
    | |   `-UnaryOperator 0x12f922760 <col:29, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |     `-RecoveryExpr 0x12f922738 <col:30, col:34> '<dependent type>' contains-errors lvalue
    | |       `-DeclRefExpr 0x12f922700 <col:30> 'struct eventpoll *' contains-errors lvalue Var 0x13802a858 'ep' 'struct eventpoll *'
    | |-<<<NULL>>>
    | |-ImplicitCastExpr 0x12f9227e0 <col:40> 'struct rb_node *' <LValueToRValue>
    | | `-DeclRefExpr 0x12f9227c0 <col:40> 'struct rb_node *' lvalue Var 0x13802aff8 'rbp' 'struct rb_node *'
    | |-BinaryOperator 0x12f9229e0 <col:45, col:62> 'struct rb_node *' '='
    | | |-DeclRefExpr 0x12f9227f8 <col:45> 'struct rb_node *' lvalue Var 0x13802aff8 'rbp' 'struct rb_node *'
    | | `-ImplicitCastExpr 0x12f9229c8 <col:51, col:62> 'struct rb_node *' <IntegralToPointer>
    | |   `-CallExpr 0x12f922988 <col:51, col:62> 'int'
    | |     |-ImplicitCastExpr 0x12f922970 <col:51> 'int (*)()' <FunctionToPointerDecay>
    | |     | `-DeclRefExpr 0x12f9228f8 <col:51> 'int ()' Function 0x12f922840 'rb_next' 'int ()'
    | |     `-ImplicitCastExpr 0x12f9229b0 <col:59> 'struct rb_node *' <LValueToRValue>
    | |       `-DeclRefExpr 0x12f922918 <col:59> 'struct rb_node *' lvalue Var 0x13802aff8 'rbp' 'struct rb_node *'
    | `-CompoundStmt 0x13802c0a0 <col:65, line:30:2>
    |   `-IfStmt 0x13802c070 <line:15:3, line:29:3> has_else
    |     |-CallExpr 0x12f922e48 <line:15:7, col:44> '<dependent type>' contains-errors
    |     | |-DeclRefExpr 0x12f922c58 <col:7> 'int ()' Function 0x12f922ba0 'unlikely' 'int ()'
    |     | `-CallExpr 0x12f922e20 <col:16, col:43> '<dependent type>' contains-errors
    |     |   |-DeclRefExpr 0x12f922d58 <col:16> 'int ()' Function 0x12f922ca0 'is_file_epoll' 'int ()'
    |     |   `-CXXDependentScopeMemberExpr 0x12f922dd8 <col:30, col:39> '<dependent type>' contains-errors lvalue .file
    |     |     `-RecoveryExpr 0x12f922db0 <col:30, col:35> '<dependent type>' contains-errors lvalue
    |     |       `-DeclRefExpr 0x12f922d78 <col:30> 'struct epitem *' lvalue Var 0x13802b1f8 'epi' 'struct epitem *'
    |     |-CompoundStmt 0x12f9232d0 <col:47, line:24:3>
    |     | |-BinaryOperator 0x12f922f80 <line:16:4, col:32> 'struct eventpoll *' contains-errors '='
    |     | | |-DeclRefExpr 0x12f922e70 <col:4> 'struct eventpoll *' lvalue Var 0x13802ae08 'ep_tovisit' 'struct eventpoll *'
    |     | | `-CXXDependentScopeMemberExpr 0x12f922f38 <col:17, col:32> '<dependent type>' contains-errors lvalue ->private_data
    |     | |   `-CXXDependentScopeMemberExpr 0x12f922ef0 <col:17, col:26> '<dependent type>' contains-errors lvalue .file
    |     | |     `-RecoveryExpr 0x12f922ec8 <col:17, col:22> '<dependent type>' contains-errors lvalue
    |     | |       `-DeclRefExpr 0x12f922e90 <col:17> 'struct epitem *' lvalue Var 0x13802b1f8 'epi' 'struct epitem *'
    |     | |-IfStmt 0x12f923008 <line:17:4, line:18:5>
    |     | | |-RecoveryExpr 0x12f922fd8 <line:17:8, col:20> '<dependent type>' contains-errors lvalue
    |     | | | `-DeclRefExpr 0x12f922fa0 <col:8> 'struct eventpoll *' lvalue Var 0x13802ae08 'ep_tovisit' 'struct eventpoll *'
    |     | | `-ContinueStmt 0x12f923000 <line:18:5>
    |     | `-IfStmt 0x12f9232b0 <line:22:4, line:23:5>
    |     |   |-BinaryOperator 0x12f923288 <line:22:8, col:17> 'int' '!='
    |     |   | |-ImplicitCastExpr 0x12f923270 <col:8> 'int' <LValueToRValue>
    |     |   | | `-DeclRefExpr 0x12f923230 <col:8> 'int' lvalue Var 0x13800dfe8 'error' 'int'
    |     |   | `-IntegerLiteral 0x12f923250 <col:17> 'int' 0
    |     |   `-BreakStmt 0x12f9232a8 <line:23:5>
    |     `-CompoundStmt 0x13802c060 <line:24:10, line:29:3>
    |-CallExpr 0x13802c268 <line:31:2, col:23> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13802c1d0 <col:2> 'int ()' Function 0x13802c118 'mutex_unlock' 'int ()'
    | `-UnaryOperator 0x13802c250 <col:15, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x13802c228 <col:16, col:20> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x13802c1f0 <col:16> 'struct eventpoll *' contains-errors lvalue Var 0x13802a858 'ep' 'struct eventpoll *'
    `-ReturnStmt 0x13802c2c8 <line:33:2, col:9>
      `-ImplicitCastExpr 0x13802c2b0 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x13802c290 <col:9> 'int' lvalue Var 0x13800dfe8 'error' 'int'
