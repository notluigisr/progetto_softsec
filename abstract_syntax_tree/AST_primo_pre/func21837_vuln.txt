`-FunctionDecl 0x140026748  line:1:12 nft_set_desc_concat 'int (struct nft_set_desc *, const struct nlattr *)' static
  |-ParmVarDecl 0x14000e248 <col:32, col:53> col:53 used desc 'struct nft_set_desc *'
  |-ParmVarDecl 0x140026628 <line:2:11, col:32> col:32 used nla 'const struct nlattr *'
  `-CompoundStmt 0x1400273c0 <line:3:1, line:17:1>
    |-DeclStmt 0x140026970 <line:4:2, col:21>
    | `-VarDecl 0x140026908 <col:2, col:17> col:17 used attr 'struct nlattr *'
    |-DeclStmt 0x140026aa0 <line:5:2, col:14>
    | |-VarDecl 0x1400269a0 <col:2, col:6> col:6 used rem 'int'
    | `-VarDecl 0x140026a20 <col:2, col:11> col:11 used err 'int'
    |-CallExpr 0x140026ca8 <line:7:2, col:36> 'int'
    | |-ImplicitCastExpr 0x140026c90 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x140026be0 <col:2> 'int ()' Function 0x140026b28 'nla_for_each_nested' 'int ()'
    | |-ImplicitCastExpr 0x140026ce0 <col:22> 'struct nlattr *' <LValueToRValue>
    | | `-DeclRefExpr 0x140026c00 <col:22> 'struct nlattr *' lvalue Var 0x140026908 'attr' 'struct nlattr *'
    | |-ImplicitCastExpr 0x140026cf8 <col:28> 'const struct nlattr *' <LValueToRValue>
    | | `-DeclRefExpr 0x140026c20 <col:28> 'const struct nlattr *' lvalue ParmVar 0x140026628 'nla' 'const struct nlattr *'
    | `-ImplicitCastExpr 0x140026d10 <col:33> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x140026c40 <col:33> 'int' lvalue Var 0x1400269a0 'rem' 'int'
    |-CompoundStmt 0x140027368 <col:38, line:14:2>
    | |-IfStmt 0x140027070 <line:8:3, line:9:12>
    | | |-BinaryOperator 0x140026fa8 <line:8:7, col:25> 'int' contains-errors '!='
    | | | |-CallExpr 0x140026f48 <col:7, col:20> 'int'
    | | | | |-ImplicitCastExpr 0x140026f30 <col:7> 'int (*)()' <FunctionToPointerDecay>
    | | | | | `-DeclRefExpr 0x140026e08 <col:7> 'int ()' Function 0x140026d50 'nla_type' 'int ()'
    | | | | `-ImplicitCastExpr 0x140026f70 <col:16> 'struct nlattr *' <LValueToRValue>
    | | | |   `-DeclRefExpr 0x140026e28 <col:16> 'struct nlattr *' lvalue Var 0x140026908 'attr' 'struct nlattr *'
    | | | `-RecoveryExpr 0x140026f88 <col:25> '<dependent type>' contains-errors lvalue
    | | `-ReturnStmt 0x140027060 <line:9:4, col:12>
    | |   `-UnaryOperator 0x140027048 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow
    | |     `-ImplicitCastExpr 0x140027030 <col:12> '<dependent type>' contains-errors <LValueToRValue>
    | |       `-RecoveryExpr 0x140027010 <col:12> '<dependent type>' contains-errors lvalue
    | |-BinaryOperator 0x140027268 <line:11:3, col:45> 'int' '='
    | | |-DeclRefExpr 0x140027090 <col:3> 'int' lvalue Var 0x140026a20 'err' 'int'
    | | `-CallExpr 0x140027208 <col:9, col:45> 'int'
    | |   |-ImplicitCastExpr 0x1400271f0 <col:9> 'int (*)()' <FunctionToPointerDecay>
    | |   | `-DeclRefExpr 0x140027190 <col:9> 'int ()' Function 0x1400270d8 'nft_set_desc_concat_parse' 'int ()'
    | |   |-ImplicitCastExpr 0x140027238 <col:35> 'struct nlattr *' <LValueToRValue>
    | |   | `-DeclRefExpr 0x1400271b0 <col:35> 'struct nlattr *' lvalue Var 0x140026908 'attr' 'struct nlattr *'
    | |   `-ImplicitCastExpr 0x140027250 <col:41> 'struct nft_set_desc *' <LValueToRValue>
    | |     `-DeclRefExpr 0x1400271d0 <col:41> 'struct nft_set_desc *' lvalue ParmVar 0x14000e248 'desc' 'struct nft_set_desc *'
    | `-IfStmt 0x140027348 <line:12:3, line:13:11>
    |   |-BinaryOperator 0x1400272e0 <line:12:7, col:13> 'int' '<'
    |   | |-ImplicitCastExpr 0x1400272c8 <col:7> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x140027288 <col:7> 'int' lvalue Var 0x140026a20 'err' 'int'
    |   | `-IntegerLiteral 0x1400272a8 <col:13> 'int' 0
    |   `-ReturnStmt 0x140027338 <line:13:4, col:11>
    |     `-ImplicitCastExpr 0x140027320 <col:11> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x140027300 <col:11> 'int' lvalue Var 0x140026a20 'err' 'int'
    `-ReturnStmt 0x1400273b0 <line:16:2, col:9>
      `-IntegerLiteral 0x140027390 <col:9> 'int' 0
