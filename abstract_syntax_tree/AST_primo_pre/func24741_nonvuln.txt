`-FunctionDecl 0x1429281a8  line:1:7 uwsgi_chomp 'char *(char *)'
  |-ParmVarDecl 0x1429280d8 <col:19, col:25> col:25 used str 'char *'
  `-CompoundStmt 0x142928758 <col:30, line:16:1>
    |-IfStmt 0x142928398 <line:3:2, line:4:10>
    | |-UnaryOperator 0x142928338 <line:3:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x142928320 <col:7> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x142928300 <col:7> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x142928388 <line:4:3, col:10>
    |   `-ImplicitCastExpr 0x142928370 <col:10> 'char *' <LValueToRValue>
    |     `-DeclRefExpr 0x142928350 <col:10> 'char *' lvalue ParmVar 0x1429280d8 'str' 'char *'
    |-ForStmt 0x1429286d8 <line:6:2, line:13:2>
    | |-<<<NULL>>>
    | |-<<<NULL>>>
    | |-BinaryOperator 0x142928480 <line:6:17, col:22> 'int' contains-errors '>='
    | | |-RecoveryExpr 0x142928460 <col:17> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x142928420 <col:22> 'int' 0
    | |-UnaryOperator 0x1429284f0 <col:25, col:26> '<dependent type>' contains-errors postfix '--' cannot overflow
    | | `-RecoveryExpr 0x1429284d0 <col:25> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x1429286c0 <col:30, line:13:2>
    |   `-IfStmt 0x142928690 <line:7:3, line:12:3> has_else
    |     |-RecoveryExpr 0x1429285a8 <line:7:7, col:35> '_Bool' contains-errors
    |     |-CompoundStmt 0x142928620 <col:41, line:9:3>
    |     `-CompoundStmt 0x142928678 <line:10:8, line:12:3>
    |       `-ReturnStmt 0x142928668 <line:11:4, col:11>
    |         `-ImplicitCastExpr 0x142928650 <col:11> 'char *' <LValueToRValue>
    |           `-DeclRefExpr 0x142928630 <col:11> 'char *' lvalue ParmVar 0x1429280d8 'str' 'char *'
    `-ReturnStmt 0x142928748 <line:15:2, col:9>
      `-ImplicitCastExpr 0x142928730 <col:9> 'char *' <LValueToRValue>
        `-DeclRefExpr 0x142928710 <col:9> 'char *' lvalue ParmVar 0x1429280d8 'str' 'char *'
