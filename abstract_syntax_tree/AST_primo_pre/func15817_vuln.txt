`-FunctionDecl 0x13d128288  line:1:8 invalid cJSON_DetachItemFromObject 'int *(int *, const char *)'
  |-ParmVarDecl 0x13d128128 <col:36, col:43> col:43 invalid object 'int *'
  |-ParmVarDecl 0x13d1281a8 <col:51, col:63> col:63 used string 'const char *'
  `-CompoundStmt 0x13d141eb8 <line:2:1, line:12:1>
    |-DeclStmt 0x13d1283e0 <line:3:2, col:11>
    | `-VarDecl 0x13d128358 <col:2, col:10> col:6 used i 'int' cinit
    |   `-IntegerLiteral 0x13d1283c0 <col:10> 'int' 0
    |-WhileStmt 0x13d141c78 <line:5:2, line:8:2>
    | |-BinaryOperator 0x13d128798 <line:5:10, col:51> 'int' contains-errors '&&'
    | | |-RecoveryExpr 0x13d1286e0 <col:10> '<dependent type>' contains-errors lvalue
    | | `-CallExpr 0x13d128768 <col:15, col:51> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x13d1285f0 <col:15> 'int ()' Function 0x13d128538 'cJSON_strcasecmp' 'int ()'
    | |   |-CXXDependentScopeMemberExpr 0x13d128720 <col:33, col:36> '<dependent type>' contains-errors lvalue ->string
    | |   | `-RecoveryExpr 0x13d128700 <col:33> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x13d128670 <col:44> 'const char *' lvalue ParmVar 0x13d1281a8 'string' 'const char *'
    | `-CompoundStmt 0x13d141c60 <col:55, line:8:2>
    |   `-UnaryOperator 0x13d1287d8 <line:6:3, col:5> 'int' prefix '++'
    |     `-DeclRefExpr 0x13d1287b8 <col:5> 'int' lvalue Var 0x13d128358 'i' 'int'
    |-IfStmt 0x13d141e50 <line:9:2, line:10:47>
    | |-RecoveryExpr 0x13d141cb0 <line:9:7> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x13d141e40 <line:10:3, col:47>
    |   `-CallExpr 0x13d141e10 <col:10, col:47> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x13d141db0 <col:10> 'int ()' Function 0x13d141cf8 'cJSON_DetachItemFromArray' 'int ()'
    |     |-RecoveryExpr 0x13d141dd0 <col:37> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x13d141df0 <col:45> 'int' lvalue Var 0x13d128358 'i' 'int'
    `-ReturnStmt 0x13d141ea8 <line:11:2, col:9>
      `-ImplicitCastExpr 0x13d141e90 <col:9> 'int *' <NullToPointer>
        `-IntegerLiteral 0x13d141e70 <col:9> 'int' 0
