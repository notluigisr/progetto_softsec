`-FunctionDecl 0x124142000  line:1:15 invalid GC_freehblk 'int (struct hblk *)'
  |-ParmVarDecl 0x124128e68 <col:27, col:40> col:40 used hbp 'struct hblk *'
  `-CompoundStmt 0x1241451b0 <line:2:1, line:60:1>
    |-DeclStmt 0x124142248 <line:3:5, col:29>
    | |-VarDecl 0x124142138 <col:5, col:18> col:18 used next 'struct hblk *'
    | `-VarDecl 0x1241421c8 <col:5, col:25> col:25 used prev 'struct hblk *'
    |-CallExpr 0x124142508 <line:7:5, col:22> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x124142460 <col:5> 'int ()' Function 0x1241423a8 'GET_HDR' 'int ()'
    | |-DeclRefExpr 0x124142480 <col:13> 'struct hblk *' lvalue ParmVar 0x124128e68 'hbp' 'struct hblk *'
    | `-RecoveryExpr 0x1241424e8 <col:18> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x124142918 <line:9:5, line:10:18>
    | |-RecoveryExpr 0x124142710 <line:9:9, col:30> '_Bool' contains-errors
    | `-CallExpr 0x1241428d8 <line:10:7, col:18> 'int'
    |   |-ImplicitCastExpr 0x1241428c0 <col:7> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x124142810 <col:7> 'int ()' Function 0x124142758 'ABORT' 'int ()'
    |   `-ImplicitCastExpr 0x124142900 <col:13> 'char *' <ArrayToPointerDecay>
    |     `-StringLiteral 0x124142870 <col:13> 'char[4]' lvalue "STR"
    |-CallExpr 0x124142ac0 <line:14:5, col:31> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x124142a18 <col:5> 'int ()' Function 0x124142960 'GC_remove_counts' 'int ()'
    | |-DeclRefExpr 0x124142a38 <col:22> 'struct hblk *' lvalue ParmVar 0x124128e68 'hbp' 'struct hblk *'
    | `-RecoveryExpr 0x124142aa0 <col:27> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x124142ee0 <line:21:7, line:24:7>
    | |-CallExpr 0x124142c68 <line:21:11, col:28> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x124142be8 <col:11> 'int ()' Function 0x124142b30 'HBLK_IS_FREE' 'int ()'
    | | `-RecoveryExpr 0x124142c48 <col:24> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x124142ec8 <col:31, line:24:7>
    |   `-CallExpr 0x124142e60 <line:22:9, line:23:38> 'int'
    |     |-ImplicitCastExpr 0x124142e48 <line:22:9> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x124142d70 <col:9> 'int ()' Function 0x124142cb8 'ABORT_ARG1' 'int ()'
    |     |-ImplicitCastExpr 0x124142e98 <col:20> 'char *' <ArrayToPointerDecay>
    |     | `-StringLiteral 0x124142d90 <col:20> 'char[4]' lvalue "STR"
    |     |-ImplicitCastExpr 0x124142eb0 <line:23:20> 'char *' <ArrayToPointerDecay>
    |     | `-StringLiteral 0x124142db0 <col:20> 'char[4]' lvalue "STR"
    |     `-CStyleCastExpr 0x124142e20 <col:27, col:35> 'void *' <BitCast>
    |       `-ImplicitCastExpr 0x124142e08 <col:35> 'struct hblk *' <LValueToRValue> part_of_explicit_cast
    |         `-DeclRefExpr 0x124142dd0 <col:35> 'struct hblk *' lvalue ParmVar 0x124128e68 'hbp' 'struct hblk *'
    |-BinaryOperator 0x124144910 <line:30:5, col:39> 'struct hblk *' '='
    | |-DeclRefExpr 0x124144760 <col:5> 'struct hblk *' lvalue Var 0x1241421c8 'prev' 'struct hblk *'
    | `-ImplicitCastExpr 0x1241448f8 <col:12, col:39> 'struct hblk *' <IntegralToPointer>
    |   `-CallExpr 0x1241448b8 <col:12, col:39> 'int'
    |     |-ImplicitCastExpr 0x1241448a0 <col:12> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x124144860 <col:12> 'int ()' Function 0x1241447a8 'GC_free_block_ending_at' 'int ()'
    |     `-ImplicitCastExpr 0x1241448e0 <col:36> 'struct hblk *' <LValueToRValue>
    |       `-DeclRefExpr 0x124144880 <col:36> 'struct hblk *' lvalue ParmVar 0x124128e68 'hbp' 'struct hblk *'
    |-IfStmt 0x124144c60 <line:32:7, line:38:7>
    | |-RecoveryExpr 0x1241449b0 <line:32:10, line:33:63> '_Bool' contains-errors
    | `-CompoundStmt 0x124144c48 <line:34:12, line:38:7>
    |   `-CallExpr 0x124144c08 <line:37:9, col:30> 'int'
    |     |-ImplicitCastExpr 0x124144bf0 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x124144bb0 <col:9> 'int ()' Function 0x124144af8 'GC_remove_header' 'int ()'
    |     `-ImplicitCastExpr 0x124144c30 <col:26> 'struct hblk *' <LValueToRValue>
    |       `-DeclRefExpr 0x124144bd0 <col:26> 'struct hblk *' lvalue Var 0x124142138 'next' 'struct hblk *'
    `-IfStmt 0x124145070 <line:40:7, line:53:7>
      |-BinaryOperator 0x124144cf0 <line:40:11, col:16> 'int' '!='
      | |-ImplicitCastExpr 0x124144cd8 <col:11> 'struct hblk *' <NullToPointer>
      | | `-IntegerLiteral 0x124144c80 <col:11> 'int' 0
      | `-ImplicitCastExpr 0x124144cc0 <col:16> 'struct hblk *' <LValueToRValue>
      |   `-DeclRefExpr 0x124144ca0 <col:16> 'struct hblk *' lvalue Var 0x1241421c8 'prev' 'struct hblk *'
      `-CompoundStmt 0x124145058 <col:22, line:53:7>
        `-IfStmt 0x124145038 <line:42:9, line:52:9>
          |-RecoveryExpr 0x124144ec8 <line:42:13, line:43:66> '_Bool' contains-errors
          `-CompoundStmt 0x124145018 <col:69, line:52:9>
            |-CallExpr 0x124144f60 <line:49:11, col:31> 'int'
            | |-ImplicitCastExpr 0x124144f48 <col:11> 'int (*)()' <FunctionToPointerDecay>
            | | `-DeclRefExpr 0x124144f08 <col:11> 'int ()' Function 0x124144af8 'GC_remove_header' 'int ()'
            | `-ImplicitCastExpr 0x124144f88 <col:28> 'struct hblk *' <LValueToRValue>
            |   `-DeclRefExpr 0x124144f28 <col:28> 'struct hblk *' lvalue ParmVar 0x124128e68 'hbp' 'struct hblk *'
            `-BinaryOperator 0x124144ff8 <line:50:11, col:17> 'struct hblk *' '='
              |-DeclRefExpr 0x124144fa0 <col:11> 'struct hblk *' lvalue ParmVar 0x124128e68 'hbp' 'struct hblk *'
              `-ImplicitCastExpr 0x124144fe0 <col:17> 'struct hblk *' <LValueToRValue>
                `-DeclRefExpr 0x124144fc0 <col:17> 'struct hblk *' lvalue Var 0x1241421c8 'prev' 'struct hblk *'
