`-FunctionDecl 0x13f00ddc8  line:1:1 invalid load_vector_vector 'int (int)'
  |-ParmVarDecl 0x13f00dcf0 <col:20, <invalid sloc>> col:29 invalid 'int'
  `-CompoundStmt 0x13f00e388 <line:4:1, line:15:1>
    `-ForStmt 0x13f00e350 <line:7:5, line:13:5>
      |-DeclStmt 0x13f00df18 <line:7:10, col:20>
      | `-VarDecl 0x13f00de90 <col:10, col:19> col:14 used i1 'int' cinit
      |   `-IntegerLiteral 0x13f00def8 <col:19> 'int' 0
      |-<<<NULL>>>
      |-BinaryOperator 0x13f00dfa8 <col:22, col:27> 'int' contains-errors '<'
      | |-DeclRefExpr 0x13f00df30 <col:22> 'int' lvalue Var 0x13f00de90 'i1' 'int'
      | `-RecoveryExpr 0x13f00df88 <col:27> '<dependent type>' contains-errors lvalue
      |-UnaryOperator 0x13f00dfe8 <col:36, col:38> 'int' prefix '++'
      | `-DeclRefExpr 0x13f00dfc8 <col:38> 'int' lvalue Var 0x13f00de90 'i1' 'int'
      `-CompoundStmt 0x13f00e340 <line:8:5, line:13:5>
