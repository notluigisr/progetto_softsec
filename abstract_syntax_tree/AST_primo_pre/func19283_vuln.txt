`-FunctionDecl 0x13e0c2c38  line:1:1 SPL_METHOD 'int (int, int)'
  |-ParmVarDecl 0x13e0c2b58 <col:12> col:12 Array 'int'
  |-ParmVarDecl 0x13e0c2ad8 <col:19> col:19 used count 'int'
  `-CompoundStmt 0x13e0dc010 <line:2:1, line:13:1>
    |-DeclStmt 0x13e0c31e0 <line:3:2, col:12>
    | `-VarDecl 0x13e0c2d50 <col:2, col:7> col:7 invalid count 'long'
    |-IfStmt 0x13e0dbcf8 <line:6:2, line:8:2>
    | |-BinaryOperator 0x13e0dbcb0 <line:6:6, col:38> 'int' contains-errors '=='
    | | |-CallExpr 0x13e0dbc70 <col:6, col:33> 'int'
    | | | `-ImplicitCastExpr 0x13e0dbc58 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | |   `-DeclRefExpr 0x13e0dbb60 <col:6> 'int ()' Function 0x13e0dbaa8 'zend_parse_parameters_none' 'int ()'
    | | `-RecoveryExpr 0x13e0dbc90 <col:38> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x13e0dbce0 <col:47, line:8:2>
    |   `-ReturnStmt 0x13e0dbcd0 <line:7:3>
    `-CallExpr 0x13e0dbfd0 <line:12:2, col:19> 'int'
      |-ImplicitCastExpr 0x13e0dbfb8 <col:2> 'int (*)()' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x13e0dbf78 <col:2> 'int ()' Function 0x13e0dbec0 'RETURN_LONG' 'int ()'
      `-ImplicitCastExpr 0x13e0dbff8 <col:14> 'int' <LValueToRValue>
        `-DeclRefExpr 0x13e0dbf98 <col:14> 'int' lvalue ParmVar 0x13e0c2ad8 'count' 'int'
