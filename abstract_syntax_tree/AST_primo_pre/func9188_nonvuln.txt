`-FunctionDecl 0x13f940d18  line:1:12 lg_ultrax_remote_mapping 'int (struct hid_input *, struct hid_usage *, unsigned long **, int *)' static
  |-ParmVarDecl 0x13f928648 <col:37, col:55> col:55 used hi 'struct hid_input *'
  |-ParmVarDecl 0x13f940a28 <line:2:3, col:21> col:21 used usage 'struct hid_usage *'
  |-ParmVarDecl 0x13f940b10 <col:28, col:44> col:44 bit 'unsigned long **'
  |-ParmVarDecl 0x13f940bc8 <col:49, col:54> col:54 max 'int *'
  `-CompoundStmt 0x1488090d0 <line:3:1, line:32:1>
    |-IfStmt 0x13f940f40 <line:4:2, line:5:10>
    | |-RecoveryExpr 0x13f940ef0 <line:4:6, col:39> '_Bool' contains-errors
    | `-ReturnStmt 0x13f940f30 <line:5:3, col:10>
    |   `-IntegerLiteral 0x13f940f10 <col:10> 'int' 0
    |-CallExpr 0x13f9411a0 <line:7:2, col:34> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13f941070 <col:2> 'int ()' Function 0x13f940fb8 'set_bit' 'int ()'
    | |-RecoveryExpr 0x13f941180 <col:10> '<dependent type>' contains-errors lvalue
    | `-CXXDependentScopeMemberExpr 0x13f941108 <col:18, col:29> '<dependent type>' contains-errors lvalue ->evbit
    |   `-RecoveryExpr 0x13f9410e0 <col:18, col:22> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x13f9410a8 <col:18> 'struct hid_input *' lvalue ParmVar 0x13f928648 'hi' 'struct hid_input *'
    |-SwitchStmt 0x13f9412a8 <line:8:2, line:30:2>
    | |-BinaryOperator 0x13f941288 <line:8:10, col:23> '<dependent type>' contains-errors '&'
    | | |-RecoveryExpr 0x13f941208 <col:10, col:17> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x13f9411d0 <col:10> 'struct hid_usage *' lvalue ParmVar 0x13f940a28 'usage' 'struct hid_usage *'
    | | `-RecoveryExpr 0x13f941268 <col:23> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x148808f78 <col:34, line:30:2>
    |   |-CaseStmt 0x13f9412f0 <line:10:2, col:40>
    |   | |-IntegerLiteral 0x13f9412d0 <col:7> 'int' 4
    |   | `-CallExpr 0x13f941478 <col:14, col:40> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x13f9413f8 <col:14> 'int ()' Function 0x13f941340 'lg_map_key_clear' 'int ()'
    |   |   `-RecoveryExpr 0x13f941458 <col:31> '<dependent type>' contains-errors lvalue
    |   |-BreakStmt 0x13f9414a0 <col:43>
    |   |-CaseStmt 0x13f9414c8 <line:11:2, col:39>
    |   | |-IntegerLiteral 0x13f9414a8 <col:7> 'int' 13
    |   | `-CallExpr 0x13f941570 <col:14, col:39> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x13f9414f0 <col:14> 'int ()' Function 0x13f941340 'lg_map_key_clear' 'int ()'
    |   |   `-RecoveryExpr 0x13f941550 <col:31> '<dependent type>' contains-errors lvalue
    |   |-BreakStmt 0x13f941598 <col:43>
    |   |-CaseStmt 0x13f9415c0 <line:12:2, col:42>
    |   | |-IntegerLiteral 0x13f9415a0 <col:7> 'int' 36
    |   | `-CallExpr 0x13f941668 <col:14, col:42> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x13f9415e8 <col:14> 'int ()' Function 0x13f941340 'lg_map_key_clear' 'int ()'
    |   |   `-RecoveryExpr 0x13f941648 <col:31> '<dependent type>' contains-errors lvalue
    |   |-BreakStmt 0x13f941690 <col:45>
    |   |-CaseStmt 0x13f9416b8 <line:13:2, col:37>
    |   | |-IntegerLiteral 0x13f941698 <col:7> 'int' 37
    |   | `-CallExpr 0x13f941760 <col:14, col:37> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x13f9416e0 <col:14> 'int ()' Function 0x13f941340 'lg_map_key_clear' 'int ()'
    |   |   `-RecoveryExpr 0x13f941740 <col:31> '<dependent type>' contains-errors lvalue
    |   |-BreakStmt 0x13f941788 <col:41>
    |   |-CaseStmt 0x13f9417b0 <line:14:2, col:39>
    |   | |-IntegerLiteral 0x13f941790 <col:7> 'int' 38
    |   | `-CallExpr 0x13f941858 <col:14, col:39> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x13f9417d8 <col:14> 'int ()' Function 0x13f941340 'lg_map_key_clear' 'int ()'
    |   |   `-RecoveryExpr 0x13f941838 <col:31> '<dependent type>' contains-errors lvalue
    |   |-BreakStmt 0x13f941880 <col:43>
    |   |-CaseStmt 0x13f9418a8 <line:15:2, col:40>
    |   | |-IntegerLiteral 0x13f941888 <col:7> 'int' 49
    |   | `-CallExpr 0x13f941950 <col:14, col:40> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x13f9418d0 <col:14> 'int ()' Function 0x13f941340 'lg_map_key_clear' 'int ()'
    |   |   `-RecoveryExpr 0x13f941930 <col:31> '<dependent type>' contains-errors lvalue
    |   |-BreakStmt 0x13f941978 <col:43>
    |   |-CaseStmt 0x13f9419a0 <line:16:2, col:39>
    |   | |-IntegerLiteral 0x13f941980 <col:7> 'int' 50
    |   | `-CallExpr 0x148808848 <col:14, col:39> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x13f9419c8 <col:14> 'int ()' Function 0x13f941340 'lg_map_key_clear' 'int ()'
    |   |   `-RecoveryExpr 0x148808828 <col:31> '<dependent type>' contains-errors lvalue
    |   |-BreakStmt 0x148808870 <col:43>
    |   |-CaseStmt 0x148808898 <line:17:2, col:39>
    |   | |-IntegerLiteral 0x148808878 <col:7> 'int' 51
    |   | `-CallExpr 0x148808940 <col:14, col:39> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x1488088c0 <col:14> 'int ()' Function 0x13f941340 'lg_map_key_clear' 'int ()'
    |   |   `-RecoveryExpr 0x148808920 <col:31> '<dependent type>' contains-errors lvalue
    |   |-BreakStmt 0x148808968 <col:43>
    |   |-CaseStmt 0x148808990 <line:18:2, col:38>
    |   | |-IntegerLiteral 0x148808970 <col:7> 'int' 71
    |   | `-CallExpr 0x148808a38 <col:14, col:38> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x1488089b8 <col:14> 'int ()' Function 0x13f941340 'lg_map_key_clear' 'int ()'
    |   |   `-RecoveryExpr 0x148808a18 <col:31> '<dependent type>' contains-errors lvalue
    |   |-BreakStmt 0x148808a60 <col:42>
    |   |-CaseStmt 0x148808a88 <line:19:2, col:38>
    |   | |-IntegerLiteral 0x148808a68 <col:7> 'int' 72
    |   | `-CallExpr 0x148808b30 <col:14, col:38> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x148808ab0 <col:14> 'int ()' Function 0x13f941340 'lg_map_key_clear' 'int ()'
    |   |   `-RecoveryExpr 0x148808b10 <col:31> '<dependent type>' contains-errors lvalue
    |   |-BreakStmt 0x148808b58 <col:42>
    |   |-CaseStmt 0x148808b80 <line:20:2, col:40>
    |   | |-IntegerLiteral 0x148808b60 <col:7> 'int' 73
    |   | `-CallExpr 0x148808c28 <col:14, col:40> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x148808ba8 <col:14> 'int ()' Function 0x13f941340 'lg_map_key_clear' 'int ()'
    |   |   `-RecoveryExpr 0x148808c08 <col:31> '<dependent type>' contains-errors lvalue
    |   |-BreakStmt 0x148808c50 <col:43>
    |   |-CaseStmt 0x148808c78 <line:21:2, <invalid sloc>>
    |   | |-IntegerLiteral 0x148808c58 <col:7> 'int' 74
    |   | `-NullStmt 0x148808cc0 <<invalid sloc>>
    |   |-BreakStmt 0x148808cc8 <col:43>
    |   |-CaseStmt 0x148808cf0 <line:22:2, <invalid sloc>>
    |   | |-IntegerLiteral 0x148808cd0 <col:7> 'int' 75
    |   | `-NullStmt 0x148808d38 <<invalid sloc>>
    |   |-BreakStmt 0x148808d40 <col:43>
    |   |-CaseStmt 0x148808d68 <line:23:2, <invalid sloc>>
    |   | |-IntegerLiteral 0x148808d48 <col:7> 'int' 76
    |   | `-NullStmt 0x148808db0 <<invalid sloc>>
    |   |-BreakStmt 0x148808db8 <col:46>
    |   |-CaseStmt 0x148808de0 <line:24:2, <invalid sloc>>
    |   | |-IntegerLiteral 0x148808dc0 <col:7> 'int' 77
    |   | `-NullStmt 0x148808e28 <<invalid sloc>>
    |   |-BreakStmt 0x148808e30 <col:46>
    |   |-CaseStmt 0x148808e58 <line:25:2, <invalid sloc>>
    |   | |-IntegerLiteral 0x148808e38 <col:7> 'int' 81
    |   | `-NullStmt 0x148808ea0 <<invalid sloc>>
    |   |-BreakStmt 0x148808ea8 <col:42>
    |   |-CaseStmt 0x148808ed0 <line:26:2, <invalid sloc>>
    |   | |-IntegerLiteral 0x148808eb0 <col:7> 'int' 82
    |   | `-NullStmt 0x148808f18 <<invalid sloc>>
    |   |-BreakStmt 0x148808f20 <col:43>
    |   `-DefaultStmt 0x148808f58 <line:28:2, line:29:10>
    |     `-ReturnStmt 0x148808f48 <col:3, col:10>
    |       `-IntegerLiteral 0x148808f28 <col:10> 'int' 0
    `-ReturnStmt 0x1488090c0 <line:31:2, col:9>
      `-IntegerLiteral 0x1488090a0 <col:9> 'int' 1
