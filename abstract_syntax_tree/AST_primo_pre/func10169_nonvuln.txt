`-FunctionDecl 0x1548be400  line:1:5 generic_readlink 'int (struct dentry *, char)'
  |-ParmVarDecl 0x1548a1e48 <col:22, col:37> col:37 used dentry 'struct dentry *'
  |-ParmVarDecl 0x1548a1ec0 <col:45, col:50> col:50 __user 'char'
  `-CompoundStmt 0x155809878 <line:2:1, line:16:1>
    |-CallExpr 0x1548be6b0 <line:3:2, col:26> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1548be630 <col:2> 'int ()' Function 0x1548be578 'DEFINE_DELAYED_CALL' 'int ()'
    | `-RecoveryExpr 0x1548be690 <col:22> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x1548bea88 <line:4:2, col:39>
    | |-RecordDecl 0x1548be6d8 <col:2, col:9> col:9 struct inode
    | `-VarDecl 0x1548be848 <col:2, col:38> col:16 used inode 'struct inode *' cinit
    |   `-ImplicitCastExpr 0x1548bea58 <col:24, col:38> 'struct inode *' <IntegralToPointer>
    |     `-CallExpr 0x1548bea18 <col:24, col:38> 'int'
    |       |-ImplicitCastExpr 0x1548bea00 <col:24> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x1548be990 <col:24> 'int ()' Function 0x1548be8d8 'd_inode' 'int ()'
    |       `-ImplicitCastExpr 0x1548bea40 <col:32> 'struct dentry *' <LValueToRValue>
    |         `-DeclRefExpr 0x1548be9b0 <col:32> 'struct dentry *' lvalue ParmVar 0x1548a1e48 'dentry' 'struct dentry *'
    |-DeclStmt 0x1548beb80 <line:5:2, col:34>
    | `-VarDecl 0x1548beab8 <col:2, col:28> col:14 used link 'const char *' cinit
    |   `-RecoveryExpr 0x1548beb58 <col:21, col:28> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x1548beb20 <col:21> 'struct inode *' lvalue Var 0x1548be848 'inode' 'struct inode *'
    |-DeclStmt 0x1548bec18 <line:6:2, col:9>
    | `-VarDecl 0x1548bebb0 <col:2, col:6> col:6 used res 'int'
    |-IfStmt 0x1548bf1e0 <line:8:2, line:12:2>
    | |-UnaryOperator 0x1548bec68 <line:8:6, col:7> 'int' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x1548bec50 <col:7> 'const char *' contains-errors <LValueToRValue>
    | |   `-DeclRefExpr 0x1548bec30 <col:7> 'const char *' contains-errors lvalue Var 0x1548beab8 'link' 'const char *'
    | `-CompoundStmt 0x1548bf1c0 <col:13, line:12:2>
    |   |-BinaryOperator 0x1548bee80 <line:9:3, col:52> 'const char *' contains-errors '='
    |   | |-DeclRefExpr 0x1548bec80 <col:3> 'const char *' contains-errors lvalue Var 0x1548beab8 'link' 'const char *'
    |   | `-CallExpr 0x1548bee48 <col:10, col:52> '<dependent type>' contains-errors
    |   |   |-CXXDependentScopeMemberExpr 0x1548bed00 <col:10, col:23> '<dependent type>' contains-errors lvalue ->get_link
    |   |   | `-RecoveryExpr 0x1548becd8 <col:10, col:17> '<dependent type>' contains-errors lvalue
    |   |   |   `-DeclRefExpr 0x1548beca0 <col:10> 'struct inode *' lvalue Var 0x1548be848 'inode' 'struct inode *'
    |   |   |-DeclRefExpr 0x1548bed48 <col:32> 'struct dentry *' lvalue ParmVar 0x1548a1e48 'dentry' 'struct dentry *'
    |   |   |-DeclRefExpr 0x1548bed68 <col:40> 'struct inode *' lvalue Var 0x1548be848 'inode' 'struct inode *'
    |   |   `-UnaryOperator 0x1548bee30 <col:47, col:48> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |     `-RecoveryExpr 0x1548bee10 <col:48> '<dependent type>' contains-errors lvalue
    |   `-IfStmt 0x1548bf1a0 <line:10:3, line:11:23>
    |     |-CallExpr 0x1548befd8 <line:10:7, col:18> 'int' contains-errors
    |     | |-ImplicitCastExpr 0x1548befc0 <col:7> 'int (*)()' <FunctionToPointerDecay>
    |     | | `-DeclRefExpr 0x1548bef80 <col:7> 'int ()' Function 0x1548beec8 'IS_ERR' 'int ()'
    |     | `-ImplicitCastExpr 0x1548bf000 <col:14> 'const char *' contains-errors <LValueToRValue>
    |     |   `-DeclRefExpr 0x1548befa0 <col:14> 'const char *' contains-errors lvalue Var 0x1548beab8 'link' 'const char *'
    |     `-ReturnStmt 0x1548bf190 <line:11:4, col:23>
    |       `-CallExpr 0x1548bf150 <col:11, col:23> 'int' contains-errors
    |         |-ImplicitCastExpr 0x1548bf138 <col:11> 'int (*)()' <FunctionToPointerDecay>
    |         | `-DeclRefExpr 0x1548bf0f8 <col:11> 'int ()' Function 0x1548bf040 'PTR_ERR' 'int ()'
    |         `-ImplicitCastExpr 0x1548bf178 <col:19> 'const char *' contains-errors <LValueToRValue>
    |           `-DeclRefExpr 0x1548bf118 <col:19> 'const char *' contains-errors lvalue Var 0x1548beab8 'link' 'const char *'
    |-BinaryOperator 0x155809658 <line:13:2, col:42> 'int' contains-errors '='
    | |-DeclRefExpr 0x1548bf200 <col:2> 'int' lvalue Var 0x1548bebb0 'res' 'int'
    | `-CallExpr 0x155809620 <col:8, col:42> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1548bf300 <col:8> 'int ()' Function 0x1548bf248 'readlink_copy' 'int ()'
    |   |-RecoveryExpr 0x1548bf3c8 <col:22> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x155809600 <col:30> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x1548bf350 <col:38> 'const char *' contains-errors lvalue Var 0x1548beab8 'link' 'const char *'
    |-CallExpr 0x155809808 <line:14:2, col:23> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x155809758 <col:2> 'int ()' Function 0x1558096a0 'do_delayed_call' 'int ()'
    | `-UnaryOperator 0x1558097f0 <col:18, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x1558097d0 <col:19> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x155809868 <line:15:2, col:9>
      `-ImplicitCastExpr 0x155809850 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x155809830 <col:9> 'int' lvalue Var 0x1548bebb0 'res' 'int'
