`-FunctionDecl 0x149928288  line:1:1 invalid ico_read_info 'int (int *, int)'
  |-ParmVarDecl 0x149928128 <col:16, col:22> col:22 invalid fp 'int *'
  |-ParmVarDecl 0x1499281a8 <line:2:16, col:22> col:22 used icon_count 'int'
  `-CompoundStmt 0x14a008d80 <line:3:1, line:37:1>
    |-DeclStmt 0x1499283c0 <line:4:3, col:20>
    | `-VarDecl 0x149928358 <col:3, col:19> col:19 used i 'int'
    |-IfStmt 0x14a0083c8 <line:10:3, line:14:5>
    | |-RecoveryExpr 0x149928778 <line:10:8, col:65> '_Bool' contains-errors
    | `-CompoundStmt 0x14a0083a8 <line:11:5, line:14:5>
    |   |-CallExpr 0x14a008338 <line:12:7, col:22> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x14a0082b8 <col:7> 'int ()' Function 0x14a008200 'g_free' 'int ()'
    |   | `-RecoveryExpr 0x14a008318 <col:15> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x14a008398 <line:13:7, col:14>
    |     `-RecoveryExpr 0x14a008378 <col:14> '<dependent type>' contains-errors lvalue
    `-ForStmt 0x14a008d28 <line:17:3, line:33:5>
      |-BinaryOperator 0x14a0084b0 <line:17:8, col:12> 'int' '='
      | |-DeclRefExpr 0x14a008470 <col:8> 'int' lvalue Var 0x149928358 'i' 'int'
      | `-IntegerLiteral 0x14a008490 <col:12> 'int' 0
      |-<<<NULL>>>
      |-BinaryOperator 0x14a008540 <col:15, col:19> 'int' '<'
      | |-ImplicitCastExpr 0x14a008510 <col:15> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x14a0084d0 <col:15> 'int' lvalue Var 0x149928358 'i' 'int'
      | `-ImplicitCastExpr 0x14a008528 <col:19> 'int' <LValueToRValue>
      |   `-DeclRefExpr 0x14a0084f0 <col:19> 'int' lvalue ParmVar 0x1499281a8 'icon_count' 'int'
      |-UnaryOperator 0x14a008580 <col:31, col:32> 'int' postfix '++'
      | `-DeclRefExpr 0x14a008560 <col:31> 'int' lvalue Var 0x149928358 'i' 'int'
      `-CompoundStmt 0x14a008d10 <line:18:5, line:33:5>
        `-IfStmt 0x14a008ae8 <line:25:7, line:28:9>
          |-RecoveryExpr 0x14a008978 <line:25:11, col:51> '_Bool' contains-errors
          `-CompoundStmt 0x14a008ad8 <line:26:9, line:28:9>
