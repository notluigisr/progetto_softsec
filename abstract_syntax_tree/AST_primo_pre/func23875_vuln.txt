`-FunctionDecl 0x13d928288  line:1:1 invalid yy_stack_print 'int (int *, int *)'
  |-ParmVarDecl 0x13d928128 <col:17, col:31> col:31 invalid yybottom 'int *'
  |-ParmVarDecl 0x13d9281a8 <col:41, col:55> col:55 invalid yytop 'int *'
  `-CompoundStmt 0x13e008388 <line:2:1, line:10:1>
    |-CallExpr 0x13d928590 <line:3:3, col:27> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13d9284a0 <col:3> 'int ()' Function 0x13d9283e8 'YYFPRINTF' 'int ()'
    | |-RecoveryExpr 0x13d928570 <col:14> '<dependent type>' contains-errors lvalue
    | `-StringLiteral 0x13d928520 <col:22> 'char[4]' lvalue "STR"
    |-ForStmt 0x13e008278 <line:4:3, line:8:5>
    | |-<<<NULL>>>
    | |-<<<NULL>>>
    | |-BinaryOperator 0x13d928600 <line:4:10, col:22> 'int' contains-errors '<='
    | | |-RecoveryExpr 0x13d9285c0 <col:10> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x13d9285e0 <col:22> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x13d928640 <col:29, col:37> '<dependent type>' contains-errors postfix '++' cannot overflow
    | | `-RecoveryExpr 0x13d928620 <col:29> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x13e008258 <line:5:5, line:8:5>
    |   |-DeclStmt 0x13d928728 <line:6:7, col:28>
    |   | `-VarDecl 0x13d928670 <col:7, col:20> col:11 used yybot 'int' cinit
    |   |   `-UnaryOperator 0x13d928710 <col:19, col:20> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   |     `-ImplicitCastExpr 0x13d9286f8 <col:20> '<dependent type>' contains-errors <LValueToRValue>
    |   |       `-RecoveryExpr 0x13d9286d8 <col:20> '<dependent type>' contains-errors lvalue
    |   `-CallExpr 0x13e008220 <line:7:7, col:38> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x13d928740 <col:7> 'int ()' Function 0x13d9283e8 'YYFPRINTF' 'int ()'
    |     |-RecoveryExpr 0x13e008200 <col:18> '<dependent type>' contains-errors lvalue
    |     |-StringLiteral 0x13d928778 <col:26> 'char[4]' lvalue "STR"
    |     `-DeclRefExpr 0x13d928798 <col:33> 'int' contains-errors lvalue Var 0x13d928670 'yybot' 'int'
    `-CallExpr 0x13e008358 <line:9:3, col:27> '<dependent type>' contains-errors
      |-DeclRefExpr 0x13e0082b0 <col:3> 'int ()' Function 0x13d9283e8 'YYFPRINTF' 'int ()'
      |-RecoveryExpr 0x13e008338 <col:14> '<dependent type>' contains-errors lvalue
      `-StringLiteral 0x13e0082e8 <col:22> 'char[4]' lvalue "STR"
