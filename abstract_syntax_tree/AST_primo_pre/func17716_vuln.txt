`-FunctionDecl 0x14f80de38  line:1:1 TEST 'int (int, int)'
  |-ParmVarDecl 0x14f80dd58 <col:6> col:6 used HeaderMapImplTest 'int'
  |-ParmVarDecl 0x14f80dcd8 <col:25> col:25 LargeCharInHeader 'int'
  `-CompoundStmt 0x14f826d00 <col:44, line:7:1>
    |-ImplicitCastExpr 0x14f80df70 <line:2:3> 'int' <LValueToRValue>
    | `-DeclRefExpr 0x14f80df50 <col:3> 'int' lvalue ParmVar 0x14f80dd58 'HeaderMapImplTest' 'int'
    |-RecoveryExpr 0x14f80dfb8 <line:4:3> '<dependent type>' contains-errors lvalue
    `-CallExpr 0x14f826cd0 <line:6:3, col:68> '<dependent type>' contains-errors
      |-DeclRefExpr 0x14f80e120 <col:3> 'int ()' Function 0x14f80e068 'EXPECT_EQ' 'int ()'
      |-StringLiteral 0x14f80e180 <col:13> 'char[4]' lvalue "STR"
      `-CallExpr 0x14f826cb0 <col:20, col:67> '<dependent type>' contains-errors
        `-CXXDependentScopeMemberExpr 0x14f826c68 <col:20, col:53> '<dependent type>' contains-errors lvalue .getStringView
          `-CallExpr 0x14f826c48 <col:20, col:51> '<dependent type>' contains-errors
            `-CXXDependentScopeMemberExpr 0x14f826c00 <col:20, col:45> '<dependent type>' contains-errors lvalue ->value
              `-CallExpr 0x14f80e3c8 <col:20, col:42> '<dependent type>' contains-errors
                |-CXXDependentScopeMemberExpr 0x14f80e360 <col:20, col:28> '<dependent type>' contains-errors lvalue .get
                | `-RecoveryExpr 0x14f80e340 <col:20> '<dependent type>' contains-errors lvalue
                `-RecoveryExpr 0x14f80e3a8 <col:32> '<dependent type>' contains-errors lvalue
