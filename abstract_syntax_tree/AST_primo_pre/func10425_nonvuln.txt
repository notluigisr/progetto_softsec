`-FunctionDecl 0x12f9281f0  line:1:6 invalid geoposCommand 'void (int *)'
  |-ParmVarDecl 0x12f928128 <col:20, col:28> col:28 invalid c 'int *'
  `-CompoundStmt 0x12f943748 <col:31, line:26:1>
    |-DeclStmt 0x12f928320 <line:2:5, col:10>
    | `-VarDecl 0x12f9282b8 <col:5, col:9> col:9 used j 'int'
    |-IfStmt 0x12f941ec8 <line:6:5, col:47>
    | |-BinaryOperator 0x12f941e98 <col:9, col:44> 'int' contains-errors '&&'
    | | |-RecoveryExpr 0x12f941e00 <col:9> '<dependent type>' contains-errors lvalue
    | | `-CallExpr 0x12f941e60 <col:17, col:44> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x12f928720 <col:17> 'int ()' Function 0x12f928668 'checkType' 'int ()'
    | |   |-RecoveryExpr 0x12f928740 <col:27> '<dependent type>' contains-errors lvalue
    | |   |-RecoveryExpr 0x12f941e20 <col:30> '<dependent type>' contains-errors lvalue
    | |   `-RecoveryExpr 0x12f941e40 <col:36> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x12f941eb8 <col:47>
    |-CallExpr 0x12f9420b0 <line:9:5, col:33> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12f941fc8 <col:5> 'int ()' Function 0x12f941f10 'addReplyArrayLen' 'int ()'
    | |-RecoveryExpr 0x12f941fe8 <col:22> '<dependent type>' contains-errors lvalue
    | `-BinaryOperator 0x12f942090 <col:24, col:32> '<dependent type>' contains-errors '-'
    |   |-CXXDependentScopeMemberExpr 0x12f942028 <col:24, col:27> '<dependent type>' contains-errors lvalue ->argc
    |   | `-RecoveryExpr 0x12f942008 <col:24> '<dependent type>' contains-errors lvalue
    |   `-IntegerLiteral 0x12f942070 <col:32> 'int' 2
    `-ForStmt 0x12f943710 <line:10:5, line:25:5>
      |-BinaryOperator 0x12f942120 <line:10:10, col:14> 'int' '='
      | |-DeclRefExpr 0x12f9420e0 <col:10> 'int' lvalue Var 0x12f9282b8 'j' 'int'
      | `-IntegerLiteral 0x12f942100 <col:14> 'int' 2
      |-<<<NULL>>>
      |-BinaryOperator 0x12f9421c8 <col:17, col:24> 'int' contains-errors '<'
      | |-DeclRefExpr 0x12f942140 <col:17> 'int' lvalue Var 0x12f9282b8 'j' 'int'
      | `-CXXDependentScopeMemberExpr 0x12f942180 <col:21, col:24> '<dependent type>' contains-errors lvalue ->argc
      |   `-RecoveryExpr 0x12f942160 <col:21> '<dependent type>' contains-errors lvalue
      |-UnaryOperator 0x12f942208 <col:30, col:31> 'int' postfix '++'
      | `-DeclRefExpr 0x12f9421e8 <col:30> 'int' lvalue Var 0x12f9282b8 'j' 'int'
      `-CompoundStmt 0x12f9436f0 <col:35, line:25:5>
        |-DeclStmt 0x12f9422a0 <line:11:9, col:21>
        | `-VarDecl 0x12f942238 <col:9, col:16> col:16 used score 'double'
        `-IfStmt 0x12f9436c0 <line:12:9, line:24:9> has_else
          |-BinaryOperator 0x12f9427b8 <line:12:13, col:66> 'int' contains-errors '||'
          | |-UnaryOperator 0x12f942670 <col:13, col:14> '<dependent type>' contains-errors prefix '!' cannot overflow
          | | `-ImplicitCastExpr 0x12f942658 <col:14> '<dependent type>' contains-errors <LValueToRValue>
          | |   `-RecoveryExpr 0x12f942638 <col:14> '<dependent type>' contains-errors lvalue
          | `-BinaryOperator 0x12f942798 <col:22, col:66> 'int' contains-errors '=='
          |   |-CallExpr 0x12f942740 <col:22, col:61> '<dependent type>' contains-errors
          |   | |-DeclRefExpr 0x12f9423e0 <col:22> 'int ()' Function 0x12f942328 'zsetScore' 'int ()'
          |   | |-RecoveryExpr 0x12f942688 <col:32> '<dependent type>' contains-errors lvalue
          |   | |-CXXDependentScopeMemberExpr 0x12f9426f8 <col:38, col:50> '<dependent type>' contains-errors lvalue ->ptr
          |   | | `-ArraySubscriptExpr 0x12f9426d8 <col:38, col:47> '<dependent type>' contains-errors lvalue
          |   | |   |-ImplicitCastExpr 0x12f9426a8 <col:38, col:41> '<dependent type>' contains-errors <LValueToRValue>
          |   | |   | `-CXXDependentScopeMemberExpr 0x12f942438 <col:38, col:41> '<dependent type>' contains-errors lvalue ->argv
          |   | |   |   `-RecoveryExpr 0x12f942418 <col:38> '<dependent type>' contains-errors lvalue
          |   | |   `-ImplicitCastExpr 0x12f9426c0 <col:46> 'int' <LValueToRValue>
          |   | |     `-DeclRefExpr 0x12f942480 <col:46> 'int' lvalue Var 0x12f9282b8 'j' 'int'
          |   | `-UnaryOperator 0x12f942590 <col:55, col:56> 'double *' prefix '&' cannot overflow
          |   |   `-DeclRefExpr 0x12f942538 <col:56> 'double' lvalue Var 0x12f942238 'score' 'double'
          |   `-RecoveryExpr 0x12f942778 <col:66> '<dependent type>' contains-errors lvalue
          |-CompoundStmt 0x12f942920 <col:73, line:14:9>
          | `-CallExpr 0x12f9428f8 <line:13:13, col:32> '<dependent type>' contains-errors
          |   |-DeclRefExpr 0x12f9428b8 <col:13> 'int ()' Function 0x12f942800 'addReplyNullArray' 'int ()'
          |   `-RecoveryExpr 0x12f9428d8 <col:31> '<dependent type>' contains-errors lvalue
          `-CompoundStmt 0x12f943688 <line:14:16, line:24:9>
            |-DeclStmt 0x12f942a50 <line:16:13, col:25>
            | `-VarDecl 0x12f9429e8 <col:13, col:24> col:20 used xy 'double[2]'
            |-IfStmt 0x12f942d00 <line:17:13, line:20:13>
            | |-UnaryOperator 0x12f942c58 <line:17:17, col:40> 'int' prefix '!' cannot overflow
            | | `-CallExpr 0x12f942bf8 <col:18, col:40> 'int'
            | |   |-ImplicitCastExpr 0x12f942be0 <col:18> 'int (*)()' <FunctionToPointerDecay>
            | |   | `-DeclRefExpr 0x12f942b48 <col:18> 'int ()' Function 0x12f942a90 'decodeGeohash' 'int ()'
            | |   |-ImplicitCastExpr 0x12f942c28 <col:32> 'double' <LValueToRValue>
            | |   | `-DeclRefExpr 0x12f942b68 <col:32> 'double' lvalue Var 0x12f942238 'score' 'double'
            | |   `-ImplicitCastExpr 0x12f942c40 <col:38> 'double *' <ArrayToPointerDecay>
            | |     `-DeclRefExpr 0x12f942b88 <col:38> 'double[2]' lvalue Var 0x12f9429e8 'xy' 'double[2]'
            | `-CompoundStmt 0x12f942ce0 <col:43, line:20:13>
            |   |-CallExpr 0x12f942cb0 <line:18:17, col:36> '<dependent type>' contains-errors
            |   | |-DeclRefExpr 0x12f942c70 <col:17> 'int ()' Function 0x12f942800 'addReplyNullArray' 'int ()'
            |   | `-RecoveryExpr 0x12f942c90 <col:35> '<dependent type>' contains-errors lvalue
            |   `-ContinueStmt 0x12f942cd8 <line:19:17>
            |-CallExpr 0x12f942d80 <line:21:13, col:33> '<dependent type>' contains-errors
            | |-DeclRefExpr 0x12f942d20 <col:13> 'int ()' Function 0x12f941f10 'addReplyArrayLen' 'int ()'
            | |-RecoveryExpr 0x12f942d40 <col:30> '<dependent type>' contains-errors lvalue
            | `-IntegerLiteral 0x12f942d60 <col:32> 'int' 2
            |-CallExpr 0x12f943570 <line:22:13, col:44> '<dependent type>' contains-errors
            | |-DeclRefExpr 0x12f9434b8 <col:13> 'int ()' Function 0x12f943400 'addReplyHumanLongDouble' 'int ()'
            | |-RecoveryExpr 0x12f9434d8 <col:37> '<dependent type>' contains-errors lvalue
            | `-ArraySubscriptExpr 0x12f943550 <col:39, col:43> 'double' lvalue
            |   |-ImplicitCastExpr 0x12f943538 <col:39> 'double *' <ArrayToPointerDecay>
            |   | `-DeclRefExpr 0x12f9434f8 <col:39> 'double[2]' lvalue Var 0x12f9429e8 'xy' 'double[2]'
            |   `-IntegerLiteral 0x12f943518 <col:42> 'int' 0
            `-CallExpr 0x12f943658 <line:23:13, col:44> '<dependent type>' contains-errors
              |-DeclRefExpr 0x12f9435a0 <col:13> 'int ()' Function 0x12f943400 'addReplyHumanLongDouble' 'int ()'
              |-RecoveryExpr 0x12f9435c0 <col:37> '<dependent type>' contains-errors lvalue
              `-ArraySubscriptExpr 0x12f943638 <col:39, col:43> 'double' lvalue
                |-ImplicitCastExpr 0x12f943620 <col:39> 'double *' <ArrayToPointerDecay>
                | `-DeclRefExpr 0x12f9435e0 <col:39> 'double[2]' lvalue Var 0x12f9429e8 'xy' 'double[2]'
                `-IntegerLiteral 0x12f943600 <col:42> 'int' 1
