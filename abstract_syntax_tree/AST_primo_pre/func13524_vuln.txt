`-FunctionDecl 0x14384bde0  line:1:13 oz_usb_handle_ep_data 'void (struct oz_usb_ctx *, struct oz_usb_hdr *, int)' static
  |-ParmVarDecl 0x143836a48 <col:35, col:54> col:54 used usb_ctx 'struct oz_usb_ctx *'
  |-ParmVarDecl 0x14384bc28 <line:2:2, col:21> col:21 used usb_hdr 'struct oz_usb_hdr *'
  |-ParmVarDecl 0x14384bca8 <col:30, col:34> col:34 used len 'int'
  `-CompoundStmt 0x14384d6e0 <line:3:1, line:41:1>
    |-DeclStmt 0x14384c1c0 <line:4:2, col:54>
    | |-RecordDecl 0x14384bee8 <col:2, col:9> col:9 struct oz_data
    | `-VarDecl 0x14384c058 <col:2, col:47> col:18 used data_hdr 'struct oz_data *' cinit
    |   `-CStyleCastExpr 0x14384c180 <col:29, col:47> 'struct oz_data *' <BitCast>
    |     `-ImplicitCastExpr 0x14384c168 <col:47> 'struct oz_usb_hdr *' <LValueToRValue> part_of_explicit_cast
    |       `-DeclRefExpr 0x14384c0c0 <col:47> 'struct oz_usb_hdr *' lvalue ParmVar 0x14384bc28 'usb_hdr' 'struct oz_usb_hdr *'
    `-SwitchStmt 0x14384c250 <line:6:2, line:39:2>
      |-ImplicitCastExpr 0x14384c238 <line:6:10, col:20> '<dependent type>' contains-errors <LValueToRValue>
      | `-RecoveryExpr 0x14384c210 <col:10, col:20> '<dependent type>' contains-errors lvalue
      |   `-DeclRefExpr 0x14384c1d8 <col:10> 'struct oz_data *' lvalue Var 0x14384c058 'data_hdr' 'struct oz_data *'
      `-CompoundStmt 0x14384d6b0 <col:28, line:39:2>
        |-CompoundStmt 0x14384cb40 <line:7:33, line:18:3>
        | |-DeclStmt 0x14384c580 <line:8:4, line:9:41>
        | | |-RecordDecl 0x14384c2a8 <line:8:4, col:11> col:11 struct oz_multiple_fixed
        | | `-VarDecl 0x14384c418 <col:4, line:9:33> line:8:30 used body 'struct oz_multiple_fixed *' cinit
        | |   `-CStyleCastExpr 0x14384c540 <line:9:5, col:33> 'struct oz_multiple_fixed *' <BitCast>
        | |     `-ImplicitCastExpr 0x14384c528 <col:33> 'struct oz_data *' <LValueToRValue> part_of_explicit_cast
        | |       `-DeclRefExpr 0x14384c480 <col:33> 'struct oz_data *' lvalue Var 0x14384c058 'data_hdr' 'struct oz_data *'
        | |-DeclStmt 0x14384c750 <line:11:4, line:12:22>
        | | `-VarDecl 0x14384c628 <line:11:4, col:8> col:8 used n 'int'
        | `-WhileStmt 0x14384cb20 <line:13:4, line:17:4>
        |   |-UnaryOperator 0x14384c788 <line:13:11, col:12> 'int' postfix '--'
        |   | `-DeclRefExpr 0x14384c768 <col:11> 'int' lvalue Var 0x14384c628 'n' 'int'
        |   `-CompoundStmt 0x14384cb08 <col:16, line:17:4>
        |     `-CallExpr 0x14384ca68 <line:14:5, line:15:27> '<dependent type>' contains-errors
        |       |-DeclRefExpr 0x14384c8b0 <line:14:5> 'int ()' Function 0x14384c7f8 'oz_hcd_data_ind' 'int ()'
        |       |-RecoveryExpr 0x14384c908 <col:21, col:30> '<dependent type>' contains-errors lvalue
        |       | `-DeclRefExpr 0x14384c8d0 <col:21> 'struct oz_usb_ctx *' lvalue ParmVar 0x143836a48 'usb_ctx' 'struct oz_usb_ctx *'
        |       |-RecoveryExpr 0x14384c968 <col:37, col:43> '<dependent type>' contains-errors lvalue
        |       | `-DeclRefExpr 0x14384c930 <col:37> 'struct oz_multiple_fixed *' lvalue Var 0x14384c418 'body' 'struct oz_multiple_fixed *'
        |       |-RecoveryExpr 0x14384ca48 <line:15:6> '<dependent type>' contains-errors lvalue
        |       `-RecoveryExpr 0x14384c9e0 <col:12, col:18> '<dependent type>' contains-errors lvalue
        |         `-DeclRefExpr 0x14384c9a8 <col:12> 'struct oz_multiple_fixed *' lvalue Var 0x14384c418 'body' 'struct oz_multiple_fixed *'
        |-BreakStmt 0x14384cb68 <line:19:3>
        |-CompoundStmt 0x14384d658 <line:20:29, line:37:3>
        | |-DeclStmt 0x14384ced0 <line:21:4, line:22:37>
        | | |-RecordDecl 0x14384cc00 <line:21:4, col:11> col:11 struct oz_isoc_fixed
        | | `-VarDecl 0x14384cd68 <col:4, line:22:29> line:21:26 used body 'struct oz_isoc_fixed *' cinit
        | |   `-CStyleCastExpr 0x14384ce90 <line:22:5, col:29> 'struct oz_isoc_fixed *' <BitCast>
        | |     `-ImplicitCastExpr 0x14384ce78 <col:29> 'struct oz_data *' <LValueToRValue> part_of_explicit_cast
        | |       `-DeclRefExpr 0x14384cdd0 <col:29> 'struct oz_data *' lvalue Var 0x14384c058 'data_hdr' 'struct oz_data *'
        | |-DeclStmt 0x14384cfc8 <line:23:4, col:53>
        | | `-VarDecl 0x14384cf00 <col:4, col:8> col:8 used data_len 'int'
        | |-DeclStmt 0x14384d0c0 <line:24:4, col:35>
        | | `-VarDecl 0x14384cff8 <col:4, col:26> col:8 used unit_size 'int' cinit
        | |   `-RecoveryExpr 0x14384d098 <col:20, col:26> '<dependent type>' contains-errors lvalue
        | |     `-DeclRefExpr 0x14384d060 <col:20> 'struct oz_isoc_fixed *' lvalue Var 0x14384cd68 'body' 'struct oz_isoc_fixed *'
        | |-DeclStmt 0x14384d1d0 <line:26:4, col:13>
        | | `-VarDecl 0x14384d168 <col:4, col:8> col:8 used count 'int'
        | |-DeclStmt 0x14384d268 <line:27:4, col:9>
        | | `-VarDecl 0x14384d200 <col:4, col:8> col:8 used i 'int'
        | |-IfStmt 0x14384d2d8 <line:29:4, line:30:5>
        | | |-UnaryOperator 0x14384d2b8 <line:29:8, col:9> 'int' contains-errors prefix '!' cannot overflow
        | | | `-ImplicitCastExpr 0x14384d2a0 <col:9> 'int' contains-errors <LValueToRValue>
        | | |   `-DeclRefExpr 0x14384d280 <col:9> 'int' contains-errors lvalue Var 0x14384cff8 'unit_size' 'int'
        | | `-BreakStmt 0x14384d2d0 <line:30:5>
        | |-BinaryOperator 0x14384d3a8 <line:31:4, col:21> 'int' contains-errors '='
        | | |-DeclRefExpr 0x14384d2f8 <col:4> 'int' lvalue Var 0x14384d168 'count' 'int'
        | | `-BinaryOperator 0x14384d388 <col:12, col:21> 'int' contains-errors '/'
        | |   |-ImplicitCastExpr 0x14384d358 <col:12> 'int' <LValueToRValue>
        | |   | `-DeclRefExpr 0x14384d318 <col:12> 'int' lvalue Var 0x14384cf00 'data_len' 'int'
        | |   `-ImplicitCastExpr 0x14384d370 <col:21> 'int' contains-errors <LValueToRValue>
        | |     `-DeclRefExpr 0x14384d338 <col:21> 'int' contains-errors lvalue Var 0x14384cff8 'unit_size' 'int'
        | `-ForStmt 0x14384d620 <line:32:4, line:36:4>
        |   |-BinaryOperator 0x14384d408 <line:32:9, col:13> 'int' '='
        |   | |-DeclRefExpr 0x14384d3c8 <col:9> 'int' lvalue Var 0x14384d200 'i' 'int'
        |   | `-IntegerLiteral 0x14384d3e8 <col:13> 'int' 0
        |   |-<<<NULL>>>
        |   |-BinaryOperator 0x14384d498 <col:16, col:20> 'int' '<'
        |   | |-ImplicitCastExpr 0x14384d468 <col:16> 'int' <LValueToRValue>
        |   | | `-DeclRefExpr 0x14384d428 <col:16> 'int' lvalue Var 0x14384d200 'i' 'int'
        |   | `-ImplicitCastExpr 0x14384d480 <col:20> 'int' <LValueToRValue>
        |   |   `-DeclRefExpr 0x14384d448 <col:20> 'int' lvalue Var 0x14384d168 'count' 'int'
        |   |-UnaryOperator 0x14384d4d8 <col:27, col:28> 'int' postfix '++'
        |   | `-DeclRefExpr 0x14384d4b8 <col:27> 'int' lvalue Var 0x14384d200 'i' 'int'
        |   `-CompoundStmt 0x14384d610 <col:32, line:36:4>
        `-BreakStmt 0x14384d6a8 <line:38:3>
