`-FunctionDecl 0x11f00ddf0  line:1:13 invalid update_noheader_flag 'void (int *)' static
  |-ParmVarDecl 0x11f00dd28 <col:34, col:51> col:51 referenced invalid s 'int *'
  `-CompoundStmt 0x11f028150 <line:2:1, line:20:1>
    |-DeclStmt 0x11f00dfc0 <line:4:5, col:24>
    | `-VarDecl 0x11f00df38 <col:5, col:23> col:9 used flag_needed 'int' cinit
    |   `-IntegerLiteral 0x11f00dfa0 <col:23> 'int' 0
    |-DeclStmt 0x11f00e058 <line:5:5, col:10>
    | `-VarDecl 0x11f00dff0 <col:5, col:9> col:9 used i 'int'
    |-ForStmt 0x11f027e00 <line:7:5, line:14:5>
    | |-BinaryOperator 0x11f00e0b0 <line:7:10, col:14> 'int' '='
    | | |-DeclRefExpr 0x11f00e070 <col:10> 'int' lvalue Var 0x11f00dff0 'i' 'int'
    | | `-IntegerLiteral 0x11f00e090 <col:14> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x11f00e1d8 <col:17, col:24> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x11f00e0d0 <col:17> 'int' lvalue Var 0x11f00dff0 'i' 'int'
    | | `-CXXDependentScopeMemberExpr 0x11f00e190 <col:21, col:24> '<dependent type>' contains-errors lvalue ->n_playlists
    | |   `-RecoveryExpr 0x11f00e170 <col:21> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x11f00e218 <col:37, col:38> 'int' postfix '++'
    | | `-DeclRefExpr 0x11f00e1f8 <col:37> 'int' lvalue Var 0x11f00dff0 'i' 'int'
    | `-CompoundStmt 0x11f027de0 <col:42, line:14:5>
    |   |-DeclStmt 0x11f027898 <line:8:9, col:47>
    |   | |-RecordDecl 0x11f00e230 <col:9, col:16> col:16 struct playlist
    |   | `-VarDecl 0x11f00e398 <col:9, col:26> col:26 used pls 'struct playlist *'
    |   `-IfStmt 0x11f027dc0 <line:10:9, line:13:9>
    |     |-RecoveryExpr 0x11f027d10 <line:10:13, col:18> '<dependent type>' contains-errors lvalue
    |     | `-DeclRefExpr 0x11f0278b0 <col:13> 'struct playlist *' lvalue Var 0x11f00e398 'pls' 'struct playlist *'
    |     `-CompoundStmt 0x11f027da0 <col:37, line:13:9>
    |       |-BinaryOperator 0x11f027d78 <line:11:13, col:27> 'int' '='
    |       | |-DeclRefExpr 0x11f027d38 <col:13> 'int' lvalue Var 0x11f00df38 'flag_needed' 'int'
    |       | `-IntegerLiteral 0x11f027d58 <col:27> 'int' 1
    |       `-BreakStmt 0x11f027d98 <line:12:13>
    `-IfStmt 0x11f028120 <line:16:5, line:19:26> has_else
      |-ImplicitCastExpr 0x11f027e58 <line:16:9> 'int' <LValueToRValue>
      | `-DeclRefExpr 0x11f027e38 <col:9> 'int' lvalue Var 0x11f00df38 'flag_needed' 'int'
      |-CompoundAssignOperator 0x11f027f68 <line:17:9, col:25> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
      | |-CXXDependentScopeMemberExpr 0x11f027eb8 <col:9, col:12> '<dependent type>' contains-errors lvalue ->ctx_flags
      | | `-RecoveryExpr 0x11f027e90 <col:9> '<dependent type>' contains-errors lvalue
      | |   `-DeclRefExpr 0x11f027e70 <col:9> 'int *' lvalue ParmVar 0x11f00dd28 's' 'int *'
      | `-RecoveryExpr 0x11f027f48 <col:25> '<dependent type>' contains-errors lvalue
      `-CompoundAssignOperator 0x11f0280f0 <line:19:9, col:26> '<dependent type>' contains-errors '&=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
        |-CXXDependentScopeMemberExpr 0x11f027fe0 <col:9, col:12> '<dependent type>' contains-errors lvalue ->ctx_flags
        | `-RecoveryExpr 0x11f027fb8 <col:9> '<dependent type>' contains-errors lvalue
        |   `-DeclRefExpr 0x11f027f98 <col:9> 'int *' lvalue ParmVar 0x11f00dd28 's' 'int *'
        `-UnaryOperator 0x11f0280d8 <col:25, col:26> '<dependent type>' contains-errors prefix '~' cannot overflow
          `-ImplicitCastExpr 0x11f0280c0 <col:26> '<dependent type>' contains-errors <LValueToRValue>
            `-RecoveryExpr 0x11f0280a0 <col:26> '<dependent type>' contains-errors lvalue
