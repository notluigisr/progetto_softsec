`-FunctionDecl 0x134128318  line:1:1 invalid write_indexes 'int (int *, int *, int)'
  |-ParmVarDecl 0x134128128 <col:16, col:28> col:28 invalid self 'int *'
  |-ParmVarDecl 0x1341281a8 <line:2:16, col:28> col:28 referenced invalid output 'int *'
  |-ParmVarDecl 0x134128228 <line:3:16, col:28> col:28 invalid output_length 'int'
  `-CompoundStmt 0x134142098 <line:4:1, line:32:1>
    |-DeclStmt 0x134128458 <line:5:9, col:14>
    | `-VarDecl 0x1341283f0 <col:9, col:13> col:13 used c 'int'
    |-IfStmt 0x134128590 <line:9:9, line:10:24>
    | |-BinaryOperator 0x134128540 <line:9:13, col:33> 'int' contains-errors '>='
    | | |-CXXDependentScopeMemberExpr 0x134128490 <col:13, col:19> '<dependent type>' contains-errors lvalue ->code
    | | | `-RecoveryExpr 0x134128470 <col:13> '<dependent type>' contains-errors lvalue
    | | `-CXXDependentScopeMemberExpr 0x1341284f8 <col:27, col:33> '<dependent type>' contains-errors lvalue ->code_table_size
    | |   `-RecoveryExpr 0x1341284d8 <col:27> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x134128580 <line:10:17, col:24>
    |   `-IntegerLiteral 0x134128560 <col:24> 'int' 0
    |-BinaryOperator 0x134128638 <line:13:9, col:19> 'int' contains-errors '='
    | |-DeclRefExpr 0x1341285b0 <col:9> 'int' lvalue Var 0x1341283f0 'c' 'int'
    | `-CXXDependentScopeMemberExpr 0x1341285f0 <col:13, col:19> '<dependent type>' contains-errors lvalue ->code
    |   `-RecoveryExpr 0x1341285d0 <col:13> '<dependent type>' contains-errors lvalue
    |-WhileStmt 0x134141978 <line:14:9, line:17:9>
    | |-BinaryOperator 0x1341287e0 <line:14:16, col:53> 'int' contains-errors '!='
    | | |-CXXDependentScopeMemberExpr 0x134128730 <col:16, col:36> '<dependent type>' contains-errors lvalue .extends
    | | | `-ArraySubscriptExpr 0x134128710 <col:16, col:34> '<dependent type>' contains-errors lvalue
    | | |   |-ImplicitCastExpr 0x1341286e0 <col:16, col:22> '<dependent type>' contains-errors <LValueToRValue>
    | | |   | `-CXXDependentScopeMemberExpr 0x134128678 <col:16, col:22> '<dependent type>' contains-errors lvalue ->code_table
    | | |   |   `-RecoveryExpr 0x134128658 <col:16> '<dependent type>' contains-errors lvalue
    | | |   `-ImplicitCastExpr 0x1341286f8 <col:33> 'int' <LValueToRValue>
    | | |     `-DeclRefExpr 0x1341286c0 <col:33> 'int' lvalue Var 0x1341283f0 'c' 'int'
    | | `-CXXDependentScopeMemberExpr 0x134128798 <col:47, col:53> '<dependent type>' contains-errors lvalue ->eoi_code
    | |   `-RecoveryExpr 0x134128778 <col:47> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x134141960 <col:63, line:17:9>
    |   `-BinaryOperator 0x134141940 <line:15:17, col:41> 'int' contains-errors '='
    |     |-DeclRefExpr 0x134141800 <col:17> 'int' lvalue Var 0x1341283f0 'c' 'int'
    |     `-CXXDependentScopeMemberExpr 0x1341418f8 <col:21, col:41> '<dependent type>' contains-errors lvalue .extends
    |       `-ArraySubscriptExpr 0x1341418d8 <col:21, col:39> '<dependent type>' contains-errors lvalue
    |         |-ImplicitCastExpr 0x1341418a8 <col:21, col:27> '<dependent type>' contains-errors <LValueToRValue>
    |         | `-CXXDependentScopeMemberExpr 0x134141840 <col:21, col:27> '<dependent type>' contains-errors lvalue ->code_table
    |         |   `-RecoveryExpr 0x134141820 <col:21> '<dependent type>' contains-errors lvalue
    |         `-ImplicitCastExpr 0x1341418c0 <col:38> 'int' <LValueToRValue>
    |           `-DeclRefExpr 0x134141888 <col:38> 'int' lvalue Var 0x1341283f0 'c' 'int'
    |-BinaryOperator 0x134141a20 <line:20:9, col:19> 'int' contains-errors '='
    | |-DeclRefExpr 0x134141998 <col:9> 'int' lvalue Var 0x1341283f0 'c' 'int'
    | `-CXXDependentScopeMemberExpr 0x1341419d8 <col:13, col:19> '<dependent type>' contains-errors lvalue ->code
    |   `-RecoveryExpr 0x1341419b8 <col:13> '<dependent type>' contains-errors lvalue
    `-WhileStmt 0x134142078 <line:22:9, line:31:9>
      |-RecoveryExpr 0x134141ab0 <line:22:16> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x134142058 <col:22, line:31:9>
        |-IfStmt 0x134141ed8 <line:26:17, line:27:32>
        | |-BinaryOperator 0x134141e70 <line:26:21, col:58> 'int' contains-errors '=='
        | | |-CXXDependentScopeMemberExpr 0x134141dc0 <col:21, col:41> '<dependent type>' contains-errors lvalue .extends
        | | | `-ArraySubscriptExpr 0x134141da0 <col:21, col:39> '<dependent type>' contains-errors lvalue
        | | |   |-ImplicitCastExpr 0x134141d70 <col:21, col:27> '<dependent type>' contains-errors <LValueToRValue>
        | | |   | `-CXXDependentScopeMemberExpr 0x134141d08 <col:21, col:27> '<dependent type>' contains-errors lvalue ->code_table
        | | |   |   `-RecoveryExpr 0x134141ce8 <col:21> '<dependent type>' contains-errors lvalue
        | | |   `-ImplicitCastExpr 0x134141d88 <col:38> 'int' <LValueToRValue>
        | | |     `-DeclRefExpr 0x134141d50 <col:38> 'int' lvalue Var 0x1341283f0 'c' 'int'
        | | `-CXXDependentScopeMemberExpr 0x134141e28 <col:52, col:58> '<dependent type>' contains-errors lvalue ->eoi_code
        | |   `-RecoveryExpr 0x134141e08 <col:52> '<dependent type>' contains-errors lvalue
        | `-ReturnStmt 0x134141ec8 <line:27:25, col:32>
        |   `-RecoveryExpr 0x134141ea8 <col:32> '<dependent type>' contains-errors lvalue
        `-BinaryOperator 0x134142038 <line:29:17, col:41> 'int' contains-errors '='
          |-DeclRefExpr 0x134141ef8 <col:17> 'int' lvalue Var 0x1341283f0 'c' 'int'
          `-CXXDependentScopeMemberExpr 0x134141ff0 <col:21, col:41> '<dependent type>' contains-errors lvalue .extends
            `-ArraySubscriptExpr 0x134141fd0 <col:21, col:39> '<dependent type>' contains-errors lvalue
              |-ImplicitCastExpr 0x134141fa0 <col:21, col:27> '<dependent type>' contains-errors <LValueToRValue>
              | `-CXXDependentScopeMemberExpr 0x134141f38 <col:21, col:27> '<dependent type>' contains-errors lvalue ->code_table
              |   `-RecoveryExpr 0x134141f18 <col:21> '<dependent type>' contains-errors lvalue
              `-ImplicitCastExpr 0x134141fb8 <col:38> 'int' <LValueToRValue>
                `-DeclRefExpr 0x134141f80 <col:38> 'int' lvalue Var 0x1341283f0 'c' 'int'
