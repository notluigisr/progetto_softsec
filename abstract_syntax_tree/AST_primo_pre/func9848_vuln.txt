`-FunctionDecl 0x133817ba8  line:1:1 PHP_FUNCTION 'int (int)'
  |-ParmVarDecl 0x133817ad8 <col:15> col:15 msgfmt_format_message 'int'
  `-CompoundStmt 0x13280d228 <line:2:1, line:61:1>
    |-DeclStmt 0x133817da0 <line:5:2, col:30>
    | `-VarDecl 0x133817d18 <col:2, col:29> col:14 used spattern_len 'int' cinit
    |   `-IntegerLiteral 0x133817d80 <col:29> 'int' 0
    |-DeclStmt 0x133817e70 <line:6:2, col:28>
    | `-VarDecl 0x133817dd0 <col:2, col:24> col:14 used pattern 'char *' cinit
    |   `-RecoveryExpr 0x133817e50 <col:24> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x133817f28 <line:7:2, col:29>
    | `-VarDecl 0x133817ea0 <col:2, col:28> col:14 used pattern_len 'int' cinit
    |   `-IntegerLiteral 0x133817f08 <col:28> 'int' 0
    |-DeclStmt 0x133817ff8 <line:8:2, col:28>
    | `-VarDecl 0x133817f58 <col:2, col:24> col:14 used slocale 'const char *' cinit
    |   `-RecoveryExpr 0x133817fd8 <col:24> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x1338180b0 <line:9:2, col:29>
    | `-VarDecl 0x133818028 <col:2, col:28> col:14 used slocale_len 'int' cinit
    |   `-IntegerLiteral 0x133818090 <col:28> 'int' 0
    |-IfStmt 0x13280bc40 <line:14:2, line:21:2>
    | |-RecoveryExpr 0x13280ba60 <line:14:6, line:15:64> '_Bool' contains-errors
    | `-CompoundStmt 0x13280bc30 <line:16:2, line:21:2>
    |-IfStmt 0x13280c2f8 <line:25:2, line:36:2> has_else
    | |-BinaryOperator 0x13280bdd0 <line:25:5, col:16> 'int' contains-errors '&&'
    | | |-ImplicitCastExpr 0x13280bda0 <col:5> 'char *' contains-errors <LValueToRValue>
    | | | `-DeclRefExpr 0x13280bd60 <col:5> 'char *' contains-errors lvalue Var 0x133817dd0 'pattern' 'char *'
    | | `-ImplicitCastExpr 0x13280bdb8 <col:16> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x13280bd80 <col:16> 'int' lvalue Var 0x133817ea0 'pattern_len' 'int'
    | |-CompoundStmt 0x13280c268 <col:29, line:33:2>
    | | `-IfStmt 0x13280c248 <line:27:3, line:32:3>
    | |   |-RecoveryExpr 0x13280c1b8 <line:27:7, col:44> '_Bool' contains-errors
    | |   `-CompoundStmt 0x13280c238 <line:28:3, line:32:3>
    | `-CompoundStmt 0x13280c2e0 <line:33:9, line:36:2>
    |   `-BinaryOperator 0x13280c2c0 <line:34:3, col:18> 'int' '='
    |     |-DeclRefExpr 0x13280c280 <col:3> 'int' lvalue Var 0x133817d18 'spattern_len' 'int'
    |     `-IntegerLiteral 0x13280c2a0 <col:18> 'int' 0
    |-IfStmt 0x13280c4d0 <line:38:2, line:40:2>
    | |-BinaryOperator 0x13280c380 <line:38:5, col:20> 'int' '=='
    | | |-ImplicitCastExpr 0x13280c368 <col:5> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x13280c328 <col:5> 'int' lvalue Var 0x133818028 'slocale_len' 'int'
    | | `-IntegerLiteral 0x13280c348 <col:20> 'int' 0
    | `-CompoundStmt 0x13280c4c0 <col:23, line:40:2>
    `-IfStmt 0x13280cee8 <line:52:2, line:54:2>
      |-RecoveryExpr 0x13280c770 <line:52:5, col:17> '_Bool' contains-errors
      `-CompoundStmt 0x13280ced8 <col:31, line:54:2>
