`-FunctionDecl 0x1461281a8  line:1:5 ber_skip_sequence 'int (int)'
  |-ParmVarDecl 0x1461280d8 <col:23, col:27> col:27 used length 'int'
  `-CompoundStmt 0x146128540 <line:2:1, line:4:1>
    `-ReturnStmt 0x146128530 <line:3:2, col:40>
      `-BinaryOperator 0x146128510 <col:9, col:40> 'int' '+'
        |-BinaryOperator 0x1461284b8 <col:9, col:36> 'int' '+'
        | |-IntegerLiteral 0x1461282a0 <col:9> 'int' 1
        | `-CallExpr 0x146128478 <col:13, col:36> 'int'
        |   |-ImplicitCastExpr 0x146128460 <col:13> 'int (*)()' <FunctionToPointerDecay>
        |   | `-DeclRefExpr 0x1461283f0 <col:13> 'int ()' Function 0x146128338 '_ber_skip_length' 'int ()'
        |   `-ImplicitCastExpr 0x1461284a0 <col:30> 'int' <LValueToRValue>
        |     `-DeclRefExpr 0x146128410 <col:30> 'int' lvalue ParmVar 0x1461280d8 'length' 'int'
        `-ImplicitCastExpr 0x1461284f8 <col:40> 'int' <LValueToRValue>
          `-DeclRefExpr 0x1461284d8 <col:40> 'int' lvalue ParmVar 0x1461280d8 'length' 'int'
