`-FunctionDecl 0x13900ddc8  line:1:15 invalid evtchn_from_irq 'int (unsigned int)'
  |-ParmVarDecl 0x13900dcf0 <col:31, col:40> col:40 used irq 'unsigned int'
  `-CompoundStmt 0x139027bf8 <line:2:1, line:7:1>
    |-IfStmt 0x13900e1b0 <line:3:2, line:4:10>
    | |-CallExpr 0x13900e148 <line:3:6, col:37> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x13900dfd0 <col:6> 'int ()' Function 0x13900df18 'WARN' 'int ()'
    | | |-BinaryOperator 0x13900e128 <col:11, col:18> 'int' contains-errors '>='
    | | | |-DeclRefExpr 0x13900dff0 <col:11> 'unsigned int' lvalue ParmVar 0x13900dcf0 'irq' 'unsigned int'
    | | | `-RecoveryExpr 0x13900e108 <col:18> '<dependent type>' contains-errors lvalue
    | | |-StringLiteral 0x13900e090 <col:27> 'char[4]' lvalue "STR"
    | | `-DeclRefExpr 0x13900e0b0 <col:34> 'unsigned int' lvalue ParmVar 0x13900dcf0 'irq' 'unsigned int'
    | `-ReturnStmt 0x13900e1a0 <line:4:3, col:10>
    |   `-IntegerLiteral 0x13900e180 <col:10> 'int' 0
    `-ReturnStmt 0x139027be8 <line:6:2, col:28>
      `-RecoveryExpr 0x139027bc0 <col:9, col:28> '<dependent type>' contains-errors lvalue
        `-CallExpr 0x13900e338 <col:9, col:25> 'int'
          |-ImplicitCastExpr 0x13900e320 <col:9> 'int (*)()' <FunctionToPointerDecay>
          | `-DeclRefExpr 0x13900e2b0 <col:9> 'int ()' Function 0x13900e1f8 'info_for_irq' 'int ()'
          `-ImplicitCastExpr 0x13900e360 <col:22> 'unsigned int' <LValueToRValue>
            `-DeclRefExpr 0x13900e2d0 <col:22> 'unsigned int' lvalue ParmVar 0x13900dcf0 'irq' 'unsigned int'
