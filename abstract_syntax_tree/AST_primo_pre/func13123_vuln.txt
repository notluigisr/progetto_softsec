`-FunctionDecl 0x12680dd18  line:1:1 COMPAT_SYSCALL_DEFINE5 'int ()'
  `-CompoundStmt 0x130009a68 <line:5:1, line:40:1>
    |-DeclStmt 0x12680e3a8 <line:6:2, col:18>
    | |-RecordDecl 0x12680de08 <col:2, col:9> col:9 struct rusage
    | `-VarDecl 0x12680df08 <col:2, col:16> col:16 referenced invalid ru 'struct rusage'
    |-DeclStmt 0x126123620 <line:7:2, col:41>
    | |-RecordDecl 0x126123400 <col:2, col:9> col:9 struct waitid_info
    | `-VarDecl 0x1261234f8 <col:2, col:21> col:21 referenced invalid info 'struct waitid_info'
    |-DeclStmt 0x126123908 <line:8:2, col:72>
    | `-VarDecl 0x126123650 <col:2, col:7> col:7 used err 'long'
    |-DeclStmt 0x1261239c0 <line:9:2, col:15>
    | `-VarDecl 0x126123938 <col:2, col:14> col:6 used signo 'int' cinit
    |   `-IntegerLiteral 0x1261239a0 <col:14> 'int' 0
    |-IfStmt 0x126123b98 <line:10:2, line:13:2>
    | |-BinaryOperator 0x126123a48 <line:10:6, col:12> 'int' '>'
    | | |-ImplicitCastExpr 0x126123a18 <col:6> 'long' <LValueToRValue>
    | | | `-DeclRefExpr 0x1261239d8 <col:6> 'long' lvalue Var 0x126123650 'err' 'long'
    | | `-ImplicitCastExpr 0x126123a30 <col:12> 'long' <IntegralCast>
    | |   `-IntegerLiteral 0x1261239f8 <col:12> 'int' 0
    | `-CompoundStmt 0x126123b78 <col:15, line:13:2>
    |   |-BinaryOperator 0x126123ae0 <line:11:3, col:11> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x126123a68 <col:3> 'int' lvalue Var 0x126123938 'signo' 'int'
    |   | `-RecoveryExpr 0x126123ac0 <col:11> '<dependent type>' contains-errors lvalue
    |   `-BinaryOperator 0x126123b58 <line:12:3, col:9> 'long' '='
    |     |-DeclRefExpr 0x126123b00 <col:3> 'long' lvalue Var 0x126123650 'err' 'long'
    |     `-ImplicitCastExpr 0x126123b40 <col:9> 'long' <IntegralCast>
    |       `-IntegerLiteral 0x126123b20 <col:9> 'int' 0
    |-IfStmt 0x1261243c8 <line:15:2, line:23:2>
    | |-BinaryOperator 0x126123ce0 <line:15:6, col:14> 'int' contains-errors '&&'
    | | |-UnaryOperator 0x126123ca8 <col:6, col:7> 'int' prefix '!' cannot overflow
    | | | `-ImplicitCastExpr 0x126123c90 <col:7> 'long' <LValueToRValue>
    | | |   `-DeclRefExpr 0x126123bb8 <col:7> 'long' lvalue Var 0x126123650 'err' 'long'
    | | `-RecoveryExpr 0x126123cc0 <col:14> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x1261243a8 <col:19, line:23:2>
    |   |-IfStmt 0x126124248 <line:17:3, line:20:36> has_else
    |   | |-RecoveryExpr 0x126123d18 <line:17:7> '<dependent type>' contains-errors lvalue
    |   | |-BinaryOperator 0x126123fd8 <line:18:4, col:43> 'long' contains-errors '='
    |   | | |-DeclRefExpr 0x126123d38 <col:4> 'long' lvalue Var 0x126123650 'err' 'long'
    |   | | `-CallExpr 0x126123fa0 <col:10, col:43> '<dependent type>' contains-errors
    |   | |   |-DeclRefExpr 0x126123e38 <col:10> 'int ()' Function 0x126123d80 'copy_to_user' 'int ()'
    |   | |   |-RecoveryExpr 0x126123f80 <col:23> '<dependent type>' contains-errors lvalue
    |   | |   |-UnaryOperator 0x126123e90 <col:28, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | |   | `-RecoveryExpr 0x126123e70 <col:29> '<dependent type>' contains-errors lvalue
    |   | |   `-UnaryExprOrTypeTraitExpr 0x126123ee8 <col:33, col:42> 'unsigned long' contains-errors sizeof
    |   | |     `-ParenExpr 0x126123ec8 <col:39, col:42> '<dependent type>' contains-errors lvalue
    |   | |       `-RecoveryExpr 0x126123ea8 <col:40> '<dependent type>' contains-errors lvalue
    |   | `-BinaryOperator 0x126124228 <line:20:4, col:36> 'long' contains-errors '='
    |   |   |-DeclRefExpr 0x126123ff8 <col:4> 'long' lvalue Var 0x126123650 'err' 'long'
    |   |   `-CallExpr 0x1261241f8 <col:10, col:36> '<dependent type>' contains-errors
    |   |     |-DeclRefExpr 0x1261240f8 <col:10> 'int ()' Function 0x126124040 'put_compat_rusage' 'int ()'
    |   |     |-UnaryOperator 0x126124138 <col:28, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |     | `-RecoveryExpr 0x126124118 <col:29> '<dependent type>' contains-errors lvalue
    |   |     `-RecoveryExpr 0x1261241d8 <col:33> '<dependent type>' contains-errors lvalue
    |   `-IfStmt 0x126124388 <line:21:3, line:22:12>
    |     |-ImplicitCastExpr 0x126124298 <line:21:7> 'long' <LValueToRValue>
    |     | `-DeclRefExpr 0x126124278 <col:7> 'long' lvalue Var 0x126123650 'err' 'long'
    |     `-ReturnStmt 0x126124378 <line:22:4, col:12>
    |       `-UnaryOperator 0x126124360 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow
    |         `-ImplicitCastExpr 0x126124348 <col:12> '<dependent type>' contains-errors <LValueToRValue>
    |           `-RecoveryExpr 0x1261242f8 <col:12> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x130009300 <line:25:2, line:26:10>
    | |-UnaryOperator 0x130009288 <line:25:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x130009270 <col:7> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x130009250 <col:7> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x1300092f0 <line:26:3, col:10>
    |   `-ImplicitCastExpr 0x1300092d8 <col:10> 'int' <IntegralCast>
    |     `-ImplicitCastExpr 0x1300092c0 <col:10> 'long' <LValueToRValue>
    |       `-DeclRefExpr 0x1300092a0 <col:10> 'long' lvalue Var 0x126123650 'err' 'long'
    |-CallExpr 0x130009468 <line:28:2, col:20> 'int'
    | `-ImplicitCastExpr 0x130009450 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x130009400 <col:2> 'int ()' Function 0x130009348 'user_access_begin' 'int ()'
    |-CallExpr 0x130009920 <line:35:2, col:18> 'int'
    | `-ImplicitCastExpr 0x130009908 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x1300098e8 <col:2> 'int ()' Function 0x130009830 'user_access_end' 'int ()'
    |-ReturnStmt 0x130009990 <line:36:2, col:9>
    | `-ImplicitCastExpr 0x130009978 <col:9> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x130009960 <col:9> 'long' <LValueToRValue>
    |     `-DeclRefExpr 0x130009940 <col:9> 'long' lvalue Var 0x126123650 'err' 'long'
    `-LabelStmt 0x130009a48 <line:37:1, line:38:18> 'Efault'
      `-CallExpr 0x1300099d8 <col:2, col:18> 'int'
        `-ImplicitCastExpr 0x1300099c0 <col:2> 'int (*)()' <FunctionToPointerDecay>
          `-DeclRefExpr 0x1300099a0 <col:2> 'int ()' Function 0x130009830 'user_access_end' 'int ()'
