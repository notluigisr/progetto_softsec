`-FunctionDecl 0x14b00dfa0  line:1:13 invalid jpc_undo_roi 'void (int *, int, int, int)' static
  |-ParmVarDecl 0x14b00dd28 <col:26, col:40> col:40 invalid x 'int *'
  |-ParmVarDecl 0x14b00dda8 <col:43, col:47> col:47 used roishift 'int'
  |-ParmVarDecl 0x14b00de28 <col:57, col:61> col:61 used bgshift 'int'
  |-ParmVarDecl 0x14b00dea8 <col:70, col:74> col:74 used numbps 'int'
  `-CompoundStmt 0x14b029200 <line:2:1, line:44:1>
    |-DeclStmt 0x14b00e0e8 <line:3:2, col:7>
    | `-VarDecl 0x14b00e080 <col:2, col:6> col:6 used i 'int'
    |-DeclStmt 0x14b00e180 <line:4:2, col:7>
    | `-VarDecl 0x14b00e118 <col:2, col:6> col:6 used j 'int'
    |-DeclStmt 0x14b00e218 <line:5:2, col:12>
    | `-VarDecl 0x14b00e1b0 <col:2, col:6> col:6 used thresh 'int'
    |-IfStmt 0x14b00e368 <line:11:2, line:13:2>
    | |-BinaryOperator 0x14b00e320 <line:11:6, col:34> 'int' '&&'
    | | |-BinaryOperator 0x14b00e288 <col:6, col:18> 'int' '=='
    | | | |-ImplicitCastExpr 0x14b00e270 <col:6> 'int' <LValueToRValue>
    | | | | `-DeclRefExpr 0x14b00e230 <col:6> 'int' lvalue ParmVar 0x14b00dda8 'roishift' 'int'
    | | | `-IntegerLiteral 0x14b00e250 <col:18> 'int' 0
    | | `-BinaryOperator 0x14b00e300 <col:23, col:34> 'int' '=='
    | |   |-ImplicitCastExpr 0x14b00e2e8 <col:23> 'int' <LValueToRValue>
    | |   | `-DeclRefExpr 0x14b00e2a8 <col:23> 'int' lvalue ParmVar 0x14b00de28 'bgshift' 'int'
    | |   `-IntegerLiteral 0x14b00e2c8 <col:34> 'int' 0
    | `-CompoundStmt 0x14b00e350 <col:37, line:13:2>
    |   `-ReturnStmt 0x14b00e340 <line:12:3>
    |-BinaryOperator 0x14b027420 <line:14:2, col:16> 'int' '='
    | |-DeclRefExpr 0x14b00e388 <col:2> 'int' lvalue Var 0x14b00e1b0 'thresh' 'int'
    | `-BinaryOperator 0x14b027400 <col:11, col:16> 'int' '<<'
    |   |-IntegerLiteral 0x14b00e3a8 <col:11> 'int' 1
    |   `-ImplicitCastExpr 0x14b00e3e8 <col:16> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x14b00e3c8 <col:16> 'int' lvalue ParmVar 0x14b00dda8 'roishift' 'int'
    `-ForStmt 0x14b028398 <line:17:2, line:43:2>
      |-BinaryOperator 0x14b027498 <line:17:7, col:11> 'int' '='
      | |-DeclRefExpr 0x14b027458 <col:7> 'int' lvalue Var 0x14b00e080 'i' 'int'
      | `-IntegerLiteral 0x14b027478 <col:11> 'int' 0
      |-<<<NULL>>>
      |-BinaryOperator 0x14b027698 <col:14, col:38> 'int' contains-errors '<'
      | |-DeclRefExpr 0x14b0274b8 <col:14> 'int' lvalue Var 0x14b00e080 'i' 'int'
      | `-CallExpr 0x14b027670 <col:18, col:38> '<dependent type>' contains-errors
      |   |-DeclRefExpr 0x14b027630 <col:18> 'int ()' Function 0x14b027578 'jas_matrix_numrows' 'int ()'
      |   `-RecoveryExpr 0x14b027650 <col:37> '<dependent type>' contains-errors lvalue
      |-UnaryOperator 0x14b0276d8 <col:41, col:43> 'int' prefix '++'
      | `-DeclRefExpr 0x14b0276b8 <col:43> 'int' lvalue Var 0x14b00e080 'i' 'int'
      `-CompoundStmt 0x14b028380 <col:46, line:43:2>
        `-ForStmt 0x14b028348 <line:18:3, line:42:3>
          |-BinaryOperator 0x14b027730 <line:18:8, col:12> 'int' '='
          | |-DeclRefExpr 0x14b0276f0 <col:8> 'int' lvalue Var 0x14b00e118 'j' 'int'
          | `-IntegerLiteral 0x14b027710 <col:12> 'int' 0
          |-<<<NULL>>>
          |-BinaryOperator 0x14b0278b8 <col:15, col:39> 'int' contains-errors '<'
          | |-DeclRefExpr 0x14b027750 <col:15> 'int' lvalue Var 0x14b00e118 'j' 'int'
          | `-CallExpr 0x14b027890 <col:19, col:39> '<dependent type>' contains-errors
          |   |-DeclRefExpr 0x14b027850 <col:19> 'int ()' Function 0x14b027798 'jas_matrix_numcols' 'int ()'
          |   `-RecoveryExpr 0x14b027870 <col:38> '<dependent type>' contains-errors lvalue
          |-UnaryOperator 0x14b0278f8 <col:42, col:44> 'int' prefix '++'
          | `-DeclRefExpr 0x14b0278d8 <col:44> 'int' lvalue Var 0x14b00e118 'j' 'int'
          `-CompoundStmt 0x14b028330 <col:47, line:42:3>
            `-IfStmt 0x14b028300 <line:21:4, line:41:4> has_else
              |-BinaryOperator 0x14b027c60 <line:21:8, col:15> 'int' contains-errors '>='
              | |-RecoveryExpr 0x14b027c40 <col:8> '<dependent type>' contains-errors lvalue
              | `-DeclRefExpr 0x14b027c00 <col:15> 'int' lvalue Var 0x14b00e1b0 'thresh' 'int'
              |-CompoundStmt 0x14b027ea0 <col:23, line:26:4>
              `-CompoundStmt 0x14b0282e8 <col:11, line:41:4>
                `-IfStmt 0x14b028228 <line:32:5, line:38:5>
                  |-RecoveryExpr 0x14b027fa8 <line:32:9, col:21> '_Bool' contains-errors
                  `-CompoundStmt 0x14b028210 <col:24, line:38:5>
                    `-IfStmt 0x14b0281f0 <line:33:6, line:36:6>
                      |-RecoveryExpr 0x14b027fc8 <line:33:10, col:11> '_Bool' contains-errors
                      `-CompoundStmt 0x14b0281d8 <col:17, line:36:6>
                        `-CallExpr 0x14b028198 <line:34:7, col:24> 'int'
                          |-ImplicitCastExpr 0x14b028180 <col:7> 'int (*)()' <FunctionToPointerDecay>
                          | `-DeclRefExpr 0x14b0280c8 <col:7> 'int ()' Function 0x14b028010 'jas_eprintf' 'int ()'
                          `-ImplicitCastExpr 0x14b0281c0 <col:19> 'char *' <ArrayToPointerDecay>
                            `-StringLiteral 0x14b028130 <col:19> 'char[4]' lvalue "STR"
