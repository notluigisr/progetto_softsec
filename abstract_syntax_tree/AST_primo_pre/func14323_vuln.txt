`-FunctionDecl 0x12b00e1e8  line:1:1 invalid kg_seal_iov 'int (int *, int, int, int, int *, int *, int, int)'
  |-ParmVarDecl 0x12b00dd28 <col:13, col:24> col:24 invalid minor_status 'int *'
  |-ParmVarDecl 0x12b00dda8 <line:2:13, col:26> col:26 invalid context_handle 'int'
  |-ParmVarDecl 0x12b00de28 <line:3:13, col:17> col:17 used conf_req_flag 'int'
  |-ParmVarDecl 0x12b00dea8 <line:4:13, col:23> col:23 invalid qop_req 'int'
  |-ParmVarDecl 0x12b00df28 <line:5:13, col:18> col:18 used conf_state 'int *'
  |-ParmVarDecl 0x12b00dfa8 <line:6:13, col:34> col:34 invalid iov 'int *'
  |-ParmVarDecl 0x12b00e028 <line:7:13, col:17> col:17 used iov_count 'int'
  |-ParmVarDecl 0x12b00e0a8 <line:8:13, col:17> col:17 used toktype 'int'
  `-CompoundStmt 0x12b028198 <line:9:1, line:54:1>
    |-IfStmt 0x12b027418 <line:14:5, line:17:5>
    | |-BinaryOperator 0x12b00e328 <line:14:9, col:20> 'int' contains-errors '!='
    | | |-RecoveryExpr 0x12b00e2e8 <col:9> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x12b00e308 <col:20> 'int' 0
    | `-CompoundStmt 0x12b027400 <col:23, line:17:5>
    |   `-ReturnStmt 0x12b00e3e8 <line:16:9, col:16>
    |     `-RecoveryExpr 0x12b00e3c8 <col:16> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12b027708 <line:20:5, line:23:5>
    | |-UnaryOperator 0x12b027560 <line:20:9, col:15> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x12b027548 <col:10, col:15> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-CXXDependentScopeMemberExpr 0x12b027500 <col:10, col:15> '<dependent type>' contains-errors lvalue ->established
    | |     `-RecoveryExpr 0x12b0274e0 <col:10> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x12b0276e8 <col:28, line:23:5>
    |   |-BinaryOperator 0x12b027680 <line:21:9, col:25> '<dependent type>' contains-errors '='
    |   | |-UnaryOperator 0x12b027648 <col:9, col:10> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   | | `-ImplicitCastExpr 0x12b027630 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    |   | |   `-RecoveryExpr 0x12b027578 <col:10> '<dependent type>' contains-errors lvalue
    |   | `-RecoveryExpr 0x12b027660 <col:25> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x12b0276d8 <line:22:9, col:16>
    |     `-RecoveryExpr 0x12b0276b8 <col:16> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12b027a00 <line:25:5, line:28:5>
    | |-BinaryOperator 0x12b027930 <line:25:9, col:58> 'int' contains-errors '&&'
    | | |-DeclRefExpr 0x12b027728 <col:9> 'int' lvalue ParmVar 0x12b00de28 'conf_req_flag' 'int'
    | | `-CallExpr 0x12b027900 <col:26, col:58> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x12b0278a0 <col:26> 'int ()' Function 0x12b0277e8 'kg_integ_only_iov' 'int ()'
    | |   |-RecoveryExpr 0x12b0278c0 <col:44> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x12b0278e0 <col:49> 'int' lvalue ParmVar 0x12b00e028 'iov_count' 'int'
    | `-CompoundStmt 0x12b0279e8 <col:61, line:28:5>
    |   `-BinaryOperator 0x12b0279c8 <line:27:9, col:25> 'int' contains-errors '='
    |     |-DeclRefExpr 0x12b027950 <col:9> 'int' lvalue ParmVar 0x12b00de28 'conf_req_flag' 'int'
    |     `-RecoveryExpr 0x12b0279a8 <col:25> '<dependent type>' contains-errors lvalue
    |-SwitchStmt 0x12b027a40 <line:31:5, line:43:5>
    | |-RecoveryExpr 0x12b027a20 <line:31:13, col:18> 'int' contains-errors
    | `-CompoundStmt 0x12b027eb8 <col:25, line:43:5>
    |   |-CaseStmt 0x12b027aa0 <line:32:5, <invalid sloc>>
    |   | |-ConstantExpr 0x12b027a88 <col:10> 'int'
    |   | | `-IntegerLiteral 0x12b027a68 <col:10> 'int' 0
    |   | `-NullStmt 0x12b027c68 <<invalid sloc>>
    |   |-BreakStmt 0x12b027c70 <line:35:9>
    |   |-CaseStmt 0x12b027cb0 <line:36:5, <invalid sloc>>
    |   | |-ConstantExpr 0x12b027c98 <col:10> 'int'
    |   | | `-IntegerLiteral 0x12b027c78 <col:10> 'int' 1
    |   | `-NullStmt 0x12b027e78 <<invalid sloc>>
    |   |-BreakStmt 0x12b027e80 <line:39:9>
    |   |-DefaultStmt 0x12b027e90 <line:40:5, col:12>
    |   | `-NullStmt 0x12b027e88 <col:12>
    |   `-BreakStmt 0x12b027eb0 <line:42:9>
    |-IfStmt 0x12b0280e8 <line:45:5, line:49:5>
    | |-RecoveryExpr 0x12b027f18 <line:45:9, col:17> '_Bool' contains-errors
    | `-CompoundStmt 0x12b0280d8 <col:20, line:49:5>
    `-BinaryOperator 0x12b028178 <line:51:5, col:21> '<dependent type>' contains-errors '='
      |-UnaryOperator 0x12b028140 <col:5, col:6> '<dependent type>' contains-errors prefix '*' cannot overflow
      | `-ImplicitCastExpr 0x12b028128 <col:6> '<dependent type>' contains-errors <LValueToRValue>
      |   `-RecoveryExpr 0x12b028108 <col:6> '<dependent type>' contains-errors lvalue
      `-IntegerLiteral 0x12b028158 <col:21> 'int' 0
