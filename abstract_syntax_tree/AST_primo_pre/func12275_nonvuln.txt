`-FunctionDecl 0x14500e008  line:1:1 invalid _fill_xrgb32_lerp_opaque_spans 'int (void *, int, int, const int *, unsigned int)'
  |-ParmVarDecl 0x14500dcd8 <col:33, col:39> col:39 used abstract_renderer 'void *'
  |-ParmVarDecl 0x14500dd58 <col:58, col:62> col:62 used y 'int'
  |-ParmVarDecl 0x14500ddd8 <col:65, col:69> col:69 used h 'int'
  |-ParmVarDecl 0x14500de70 <line:2:5, col:35> col:35 referenced invalid spans 'const int *'
  |-ParmVarDecl 0x14500def0 <col:42, col:51> col:51 used num_spans 'unsigned int'
  `-CompoundStmt 0x14502a8a0 <line:3:1, line:68:1>
    |-IfStmt 0x14500e1e8 <line:6:5, line:7:9>
    | |-BinaryOperator 0x14500e180 <line:6:9, col:22> 'int' '=='
    | | |-ImplicitCastExpr 0x14500e150 <col:9> 'unsigned int' <LValueToRValue>
    | | | `-DeclRefExpr 0x14500e110 <col:9> 'unsigned int' lvalue ParmVar 0x14500def0 'num_spans' 'unsigned int'
    | | `-ImplicitCastExpr 0x14500e168 <col:22> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x14500e130 <col:22> 'int' 0
    | `-ReturnStmt 0x14500e1d8 <line:7:2, col:9>
    |   `-RecoveryExpr 0x14500e1b8 <col:9> '<dependent type>' contains-errors lvalue
    `-IfStmt 0x14502a870 <line:9:5, line:65:5> has_else
      |-CallExpr 0x145027e48 <line:9:9, col:22> 'int'
      | |-ImplicitCastExpr 0x145027e30 <col:9> 'int (*)()' <FunctionToPointerDecay>
      | | `-DeclRefExpr 0x14500e360 <col:9> 'int ()' Function 0x14500e2a8 'likely' 'int ()'
      | `-BinaryOperator 0x14500e3d8 <col:16, col:21> 'int' '=='
      |   |-ImplicitCastExpr 0x14500e3c0 <col:16> 'int' <LValueToRValue>
      |   | `-DeclRefExpr 0x14500e380 <col:16> 'int' lvalue ParmVar 0x14500ddd8 'h' 'int'
      |   `-IntegerLiteral 0x14500e3a0 <col:21> 'int' 1
      |-CompoundStmt 0x145029440 <col:25, line:31:5>
      | `-DoStmt 0x145029420 <line:10:2, line:30:26>
      |   |-CompoundStmt 0x145028d58 <line:10:5, line:30:2>
      |   | |-IfStmt 0x145028cd8 <line:12:6, line:28:6>
      |   | | |-RecoveryExpr 0x145027e88 <line:12:10> '<dependent type>' contains-errors lvalue
      |   | | `-CompoundStmt 0x145028cb8 <col:13, line:28:6>
      |   | |   |-DeclStmt 0x1450280c8 <line:13:3, col:36>
      |   | |   | `-VarDecl 0x145027ec0 <col:3, col:35> col:7 used len 'int' cinit
      |   | |   |   `-BinaryOperator 0x1450280a8 <col:13, col:35> '<dependent type>' contains-errors '-'
      |   | |   |     |-CXXDependentScopeMemberExpr 0x145027fa0 <col:13, col:22> '<dependent type>' contains-errors lvalue .x
      |   | |   |     | `-ArraySubscriptExpr 0x145027f80 <col:13, col:20> '<dependent type>' contains-errors lvalue
      |   | |   |     |   |-ImplicitCastExpr 0x145027f68 <col:13> '<dependent type>' contains-errors <LValueToRValue>
      |   | |   |     |   | `-RecoveryExpr 0x145027f28 <col:13> '<dependent type>' contains-errors lvalue
      |   | |   |     |   `-IntegerLiteral 0x145027f48 <col:19> 'int' 1
      |   | |   |     `-CXXDependentScopeMemberExpr 0x145028060 <col:26, col:35> '<dependent type>' contains-errors lvalue .x
      |   | |   |       `-ArraySubscriptExpr 0x145028040 <col:26, col:33> '<dependent type>' contains-errors lvalue
      |   | |   |         |-ImplicitCastExpr 0x145028028 <col:26> '<dependent type>' contains-errors <LValueToRValue>
      |   | |   |         | `-RecoveryExpr 0x145027fe8 <col:26> '<dependent type>' contains-errors lvalue
      |   | |   |         `-IntegerLiteral 0x145028008 <col:32> 'int' 0
      |   | |   `-IfStmt 0x145028c88 <line:15:3, line:27:3> has_else
      |   | |     |-BinaryOperator 0x1450284e8 <line:15:7, col:12> 'int' contains-errors '=='
      |   | |     | |-RecoveryExpr 0x1450284c8 <col:7> '<dependent type>' contains-errors lvalue
      |   | |     | `-IntegerLiteral 0x145028488 <col:12> 'int' 255
      |   | |     |-CompoundStmt 0x145028ac8 <col:18, line:24:3>
      |   | |     | `-IfStmt 0x145028a98 <line:16:7, line:23:7> has_else
      |   | |     |   |-BinaryOperator 0x145028560 <line:16:11, col:17> 'int' contains-errors '>'
      |   | |     |   | |-ImplicitCastExpr 0x145028548 <col:11> 'int' contains-errors <LValueToRValue>
      |   | |     |   | | `-DeclRefExpr 0x145028508 <col:11> 'int' contains-errors lvalue Var 0x145027ec0 'len' 'int'
      |   | |     |   | `-IntegerLiteral 0x145028528 <col:17> 'int' 31
      |   | |     |   |-CompoundStmt 0x1450288e0 <col:21, line:19:7>
      |   | |     |   `-CompoundStmt 0x145028a88 <col:14, line:23:7>
      |   | |     `-WhileStmt 0x145028c68 <line:24:10, line:27:3>
      |   | |       |-BinaryOperator 0x145028b38 <line:24:17, col:25> 'int' contains-errors '>'
      |   | |       | |-UnaryOperator 0x145028b00 <col:17, col:20> 'int' contains-errors postfix '--'
      |   | |       | | `-DeclRefExpr 0x145028ae0 <col:17> 'int' contains-errors lvalue Var 0x145027ec0 'len' 'int'
      |   | |       | `-IntegerLiteral 0x145028b18 <col:25> 'int' 0
      |   | |       `-CompoundStmt 0x145028c58 <col:28, line:27:3>
      |   | `-UnaryOperator 0x145028d40 <line:29:6, col:11> '<dependent type>' contains-errors postfix '++' cannot overflow
      |   |   `-RecoveryExpr 0x145028d18 <col:6> '<dependent type>' contains-errors lvalue
      |   |     `-DeclRefExpr 0x145028cf8 <col:6> 'const int *' lvalue ParmVar 0x14500de70 'spans' 'const int *'
      |   `-BinaryOperator 0x145029400 <line:30:11, col:25> 'int' '>'
      |     |-UnaryOperator 0x145028d98 <col:11, col:13> 'unsigned int' prefix '--'
      |     | `-DeclRefExpr 0x145028d78 <col:13> 'unsigned int' lvalue ParmVar 0x14500def0 'num_spans' 'unsigned int'
      |     `-ImplicitCastExpr 0x145028dd0 <col:25> 'unsigned int' <IntegralCast>
      |       `-IntegerLiteral 0x145028db0 <col:25> 'int' 1
      `-CompoundStmt 0x14502a858 <line:31:12, line:65:5>
        `-DoStmt 0x14502a838 <line:32:2, line:64:26>
          |-CompoundStmt 0x14502a788 <line:32:5, line:64:2>
          | |-IfStmt 0x14502a708 <line:34:6, line:62:6>
          | | |-RecoveryExpr 0x145029458 <line:34:10> '_Bool' contains-errors
          | | `-CompoundStmt 0x14502a6f0 <col:13, line:62:6>
          | |   `-IfStmt 0x14502a6c0 <line:35:3, line:61:3> has_else
          | |     |-RecoveryExpr 0x145029498 <line:35:7, col:12> '_Bool' contains-errors
          | |     |-CompoundStmt 0x145029ff8 <col:18, line:50:3>
          | |     | `-IfStmt 0x145029fc8 <line:36:7, line:49:7> has_else
          | |     |   |-BinaryOperator 0x145029678 <line:36:11, col:37> 'int' contains-errors '>'
          | |     |   | |-BinaryOperator 0x145029638 <col:11, col:33> '<dependent type>' contains-errors '-'
          | |     |   | | |-CXXDependentScopeMemberExpr 0x145029530 <col:11, col:20> '<dependent type>' contains-errors lvalue .x
          | |     |   | | | `-ArraySubscriptExpr 0x145029510 <col:11, col:18> '<dependent type>' contains-errors lvalue
          | |     |   | | |   |-ImplicitCastExpr 0x1450294f8 <col:11> '<dependent type>' contains-errors <LValueToRValue>
          | |     |   | | |   | `-RecoveryExpr 0x1450294b8 <col:11> '<dependent type>' contains-errors lvalue
          | |     |   | | |   `-IntegerLiteral 0x1450294d8 <col:17> 'int' 1
          | |     |   | | `-CXXDependentScopeMemberExpr 0x1450295f0 <col:24, col:33> '<dependent type>' contains-errors lvalue .x
          | |     |   | |   `-ArraySubscriptExpr 0x1450295d0 <col:24, col:31> '<dependent type>' contains-errors lvalue
          | |     |   | |     |-ImplicitCastExpr 0x1450295b8 <col:24> '<dependent type>' contains-errors <LValueToRValue>
          | |     |   | |     | `-RecoveryExpr 0x145029578 <col:24> '<dependent type>' contains-errors lvalue
          | |     |   | |     `-IntegerLiteral 0x145029598 <col:30> 'int' 0
          | |     |   | `-IntegerLiteral 0x145029658 <col:37> 'int' 16
          | |     |   |-CompoundStmt 0x145029978 <col:41, line:40:7>
          | |     |   `-CompoundStmt 0x145029fa8 <col:14, line:49:7>
          | |     |     |-DeclStmt 0x145029b10 <line:41:4, col:22>
          | |     |     | |-VarDecl 0x1450299a0 <col:4, col:13> col:8 used yy 'int' cinit
          | |     |     | | `-ImplicitCastExpr 0x145029a28 <col:13> 'int' <LValueToRValue>
          | |     |     | |   `-DeclRefExpr 0x145029a08 <col:13> 'int' lvalue ParmVar 0x14500dd58 'y' 'int'
          | |     |     | `-VarDecl 0x145029a58 <col:4, col:21> col:16 used hh 'int' cinit
          | |     |     |   `-ImplicitCastExpr 0x145029ae0 <col:21> 'int' <LValueToRValue>
          | |     |     |     `-DeclRefExpr 0x145029ac0 <col:21> 'int' lvalue ParmVar 0x14500ddd8 'h' 'int'
          | |     |     `-DoStmt 0x145029f88 <line:42:4, line:48:17>
          | |     |       |-CompoundStmt 0x145029f30 <line:42:7, line:48:4>
          | |     |       | |-DeclStmt 0x145029d48 <line:43:8, col:41>
          | |     |       | | `-VarDecl 0x145029b40 <col:8, col:40> col:12 used len 'int' cinit
          | |     |       | |   `-BinaryOperator 0x145029d28 <col:18, col:40> '<dependent type>' contains-errors '-'
          | |     |       | |     |-CXXDependentScopeMemberExpr 0x145029c20 <col:18, col:27> '<dependent type>' contains-errors lvalue .x
          | |     |       | |     | `-ArraySubscriptExpr 0x145029c00 <col:18, col:25> '<dependent type>' contains-errors lvalue
          | |     |       | |     |   |-ImplicitCastExpr 0x145029be8 <col:18> '<dependent type>' contains-errors <LValueToRValue>
          | |     |       | |     |   | `-RecoveryExpr 0x145029ba8 <col:18> '<dependent type>' contains-errors lvalue
          | |     |       | |     |   `-IntegerLiteral 0x145029bc8 <col:24> 'int' 1
          | |     |       | |     `-CXXDependentScopeMemberExpr 0x145029ce0 <col:31, col:40> '<dependent type>' contains-errors lvalue .x
          | |     |       | |       `-ArraySubscriptExpr 0x145029cc0 <col:31, col:38> '<dependent type>' contains-errors lvalue
          | |     |       | |         |-ImplicitCastExpr 0x145029ca8 <col:31> '<dependent type>' contains-errors <LValueToRValue>
          | |     |       | |         | `-RecoveryExpr 0x145029c68 <col:31> '<dependent type>' contains-errors lvalue
          | |     |       | |         `-IntegerLiteral 0x145029c88 <col:37> 'int' 0
          | |     |       | `-UnaryOperator 0x145029f18 <line:47:8, col:10> 'int' postfix '++'
          | |     |       |   `-DeclRefExpr 0x145029ef8 <col:8> 'int' lvalue Var 0x1450299a0 'yy' 'int'
          | |     |       `-UnaryOperator 0x145029f70 <line:48:13, col:15> 'int' prefix '--'
          | |     |         `-DeclRefExpr 0x145029f50 <col:15> 'int' lvalue Var 0x145029a58 'hh' 'int'
          | |     `-CompoundStmt 0x14502a6a0 <line:50:10, line:61:3>
          | |       |-DeclStmt 0x14502a198 <line:51:7, col:25>
          | |       | |-VarDecl 0x14502a028 <col:7, col:16> col:11 used yy 'int' cinit
          | |       | | `-ImplicitCastExpr 0x14502a0b0 <col:16> 'int' <LValueToRValue>
          | |       | |   `-DeclRefExpr 0x14502a090 <col:16> 'int' lvalue ParmVar 0x14500dd58 'y' 'int'
          | |       | `-VarDecl 0x14502a0e0 <col:7, col:24> col:19 used hh 'int' cinit
          | |       |   `-ImplicitCastExpr 0x14502a168 <col:24> 'int' <LValueToRValue>
          | |       |     `-DeclRefExpr 0x14502a148 <col:24> 'int' lvalue ParmVar 0x14500ddd8 'h' 'int'
          | |       `-DoStmt 0x14502a680 <line:52:7, line:60:20>
          | |         |-CompoundStmt 0x14502a620 <line:52:10, line:60:7>
          | |         | |-DeclStmt 0x14502a3d0 <line:53:4, col:37>
          | |         | | `-VarDecl 0x14502a1c8 <col:4, col:36> col:8 used len 'int' cinit
          | |         | |   `-BinaryOperator 0x14502a3b0 <col:14, col:36> '<dependent type>' contains-errors '-'
          | |         | |     |-CXXDependentScopeMemberExpr 0x14502a2a8 <col:14, col:23> '<dependent type>' contains-errors lvalue .x
          | |         | |     | `-ArraySubscriptExpr 0x14502a288 <col:14, col:21> '<dependent type>' contains-errors lvalue
          | |         | |     |   |-ImplicitCastExpr 0x14502a270 <col:14> '<dependent type>' contains-errors <LValueToRValue>
          | |         | |     |   | `-RecoveryExpr 0x14502a230 <col:14> '<dependent type>' contains-errors lvalue
          | |         | |     |   `-IntegerLiteral 0x14502a250 <col:20> 'int' 1
          | |         | |     `-CXXDependentScopeMemberExpr 0x14502a368 <col:27, col:36> '<dependent type>' contains-errors lvalue .x
          | |         | |       `-ArraySubscriptExpr 0x14502a348 <col:27, col:34> '<dependent type>' contains-errors lvalue
          | |         | |         |-ImplicitCastExpr 0x14502a330 <col:27> '<dependent type>' contains-errors <LValueToRValue>
          | |         | |         | `-RecoveryExpr 0x14502a2f0 <col:27> '<dependent type>' contains-errors lvalue
          | |         | |         `-IntegerLiteral 0x14502a310 <col:33> 'int' 0
          | |         | |-WhileStmt 0x14502a5c8 <line:55:4, line:58:4>
          | |         | | |-BinaryOperator 0x14502a578 <line:55:11, col:19> 'int' contains-errors '>'
          | |         | | | |-UnaryOperator 0x14502a540 <col:11, col:14> 'int' contains-errors postfix '--'
          | |         | | | | `-DeclRefExpr 0x14502a520 <col:11> 'int' contains-errors lvalue Var 0x14502a1c8 'len' 'int'
          | |         | | | `-IntegerLiteral 0x14502a558 <col:19> 'int' 0
          | |         | | `-CompoundStmt 0x14502a5b8 <col:22, line:58:4>
          | |         | `-UnaryOperator 0x14502a608 <line:59:4, col:6> 'int' postfix '++'
          | |         |   `-DeclRefExpr 0x14502a5e8 <col:4> 'int' lvalue Var 0x14502a028 'yy' 'int'
          | |         `-UnaryOperator 0x14502a668 <line:60:16, col:18> 'int' prefix '--'
          | |           `-DeclRefExpr 0x14502a648 <col:18> 'int' lvalue Var 0x14502a0e0 'hh' 'int'
          | `-UnaryOperator 0x14502a770 <line:63:6, col:11> '<dependent type>' contains-errors postfix '++' cannot overflow
          |   `-RecoveryExpr 0x14502a748 <col:6> '<dependent type>' contains-errors lvalue
          |     `-DeclRefExpr 0x14502a728 <col:6> 'const int *' lvalue ParmVar 0x14500de70 'spans' 'const int *'
          `-BinaryOperator 0x14502a818 <line:64:11, col:25> 'int' '>'
            |-UnaryOperator 0x14502a7c8 <col:11, col:13> 'unsigned int' prefix '--'
            | `-DeclRefExpr 0x14502a7a8 <col:13> 'unsigned int' lvalue ParmVar 0x14500def0 'num_spans' 'unsigned int'
            `-ImplicitCastExpr 0x14502a800 <col:25> 'unsigned int' <IntegralCast>
              `-IntegerLiteral 0x14502a7e0 <col:25> 'int' 1
