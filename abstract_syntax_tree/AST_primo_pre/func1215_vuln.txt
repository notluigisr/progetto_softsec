`-FunctionDecl 0x159128258  line:1:6 invalid L2NormalizeReduceAxis 'int (int, int)'
  |-ParmVarDecl 0x1591280f0 <col:28, col:34> col:34 invalid sq_op 'int'
  |-ParmVarDecl 0x159128170 <col:41, col:59> col:59 invalid axis 'int'
  `-CompoundStmt 0x159808fb8 <col:65, line:17:1>
    |-IfStmt 0x159128550 <line:2:3, line:6:3>
    | |-RecoveryExpr 0x1591284d0 <line:2:7, line:4:42> '_Bool' contains-errors
    | `-CompoundStmt 0x159128538 <col:45, line:6:3>
    |   `-ReturnStmt 0x159128528 <line:5:5, col:12>
    |     `-RecoveryExpr 0x159128508 <col:12> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x159128748 <line:7:3, line:9:3>
    | |-RecoveryExpr 0x159128700 <line:7:7, col:75> '_Bool' contains-errors
    | `-CompoundStmt 0x159128738 <col:78, line:9:3>
    |-DeclStmt 0x159808908 <line:10:3, col:50>
    | `-VarDecl 0x159128780 <col:3, col:8> col:8 used shape 'int' auto
    `-ForStmt 0x159808f80 <line:13:3, line:15:3>
      |-DeclStmt 0x1598089c0 <line:13:8, col:17>
      | `-VarDecl 0x159808938 <col:8, col:16> col:12 used i 'int' cinit
      |   `-IntegerLiteral 0x1598089a0 <col:16> 'int' 0
      |-<<<NULL>>>
      |-BinaryOperator 0x159808e88 <col:19, col:37> 'int' contains-errors '<'
      | |-DeclRefExpr 0x1598089d8 <col:19> 'int' lvalue Var 0x159808938 'i' 'int'
      | `-CallExpr 0x159808e68 <col:23, col:37> '<dependent type>' contains-errors
      |   `-RecoveryExpr 0x159808e40 <col:23, col:29> '<dependent type>' contains-errors lvalue
      |     `-DeclRefExpr 0x1598089f8 <col:23> 'int' lvalue Var 0x159128780 'shape' 'int'
      |-UnaryOperator 0x159808ec8 <col:40, col:42> 'int' prefix '++'
      | `-DeclRefExpr 0x159808ea8 <col:42> 'int' lvalue Var 0x159808938 'i' 'int'
      `-CompoundStmt 0x159808f70 <col:45, line:15:3>
