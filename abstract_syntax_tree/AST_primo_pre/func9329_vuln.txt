`-FunctionDecl 0x12802a968  line:1:19 fuse_get_acl 'struct posix_acl *(struct inode *, int)'
  |-ParmVarDecl 0x12800e2e8 <col:32, col:46> col:46 used inode 'struct inode *'
  |-ParmVarDecl 0x12800e368 <col:53, col:57> col:57 used type 'int'
  `-CompoundStmt 0x1301233c0 <line:2:1, line:35:1>
    |-DeclStmt 0x12802ae68 <line:3:2, col:45>
    | |-RecordDecl 0x12802aa68 <col:2, col:9> col:9 struct fuse_conn
    | `-VarDecl 0x12802abd8 <col:2, col:44> col:20 used fc 'struct fuse_conn *' cinit
    |   `-ImplicitCastExpr 0x12802ae38 <col:25, col:44> 'struct fuse_conn *' <IntegralToPointer>
    |     `-CallExpr 0x12802adf8 <col:25, col:44> 'int'
    |       |-ImplicitCastExpr 0x12802ade0 <col:25> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x12802ad70 <col:25> 'int ()' Function 0x12802acb8 'get_fuse_conn' 'int ()'
    |       `-ImplicitCastExpr 0x12802ae20 <col:39> 'struct inode *' <LValueToRValue>
    |         `-DeclRefExpr 0x12802ad90 <col:39> 'struct inode *' lvalue ParmVar 0x12800e2e8 'inode' 'struct inode *'
    |-DeclStmt 0x12802af00 <line:4:2, col:10>
    | `-VarDecl 0x12802ae98 <col:2, col:6> col:6 used size 'int'
    |-DeclStmt 0x12802af98 <line:5:2, col:18>
    | `-VarDecl 0x12802af30 <col:2, col:14> col:14 used name 'const char *'
    |-DeclStmt 0x12802b068 <line:6:2, col:20>
    | `-VarDecl 0x12802afc8 <col:2, col:16> col:8 used value 'void *' cinit
    |   `-RecoveryExpr 0x12802b048 <col:16> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x12802b170 <line:7:2, col:23>
    | `-VarDecl 0x12802b108 <col:2, col:20> col:20 used acl 'struct posix_acl *'
    |-IfStmt 0x12802b2e0 <line:9:2, line:10:10>
    | |-BinaryOperator 0x12802b278 <line:9:6, col:28> 'int' contains-errors '||'
    | | |-UnaryOperator 0x12802b200 <col:6, col:11> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | | `-ImplicitCastExpr 0x12802b1e8 <col:7, col:11> '<dependent type>' contains-errors <LValueToRValue>
    | | |   `-RecoveryExpr 0x12802b1c0 <col:7, col:11> '<dependent type>' contains-errors lvalue
    | | |     `-DeclRefExpr 0x12802b188 <col:7> 'struct fuse_conn *' lvalue Var 0x12802abd8 'fc' 'struct fuse_conn *'
    | | `-RecoveryExpr 0x12802b250 <col:24, col:28> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x12802b218 <col:24> 'struct fuse_conn *' lvalue Var 0x12802abd8 'fc' 'struct fuse_conn *'
    | `-ReturnStmt 0x12802b2d0 <line:10:3, col:10>
    |   `-RecoveryExpr 0x12802b2b0 <col:10> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12802b788 <line:12:2, line:17:29> has_else
    | |-BinaryOperator 0x12802b378 <line:12:6, col:14> 'int' contains-errors '=='
    | | |-DeclRefExpr 0x12802b300 <col:6> 'int' lvalue ParmVar 0x12800e368 'type' 'int'
    | | `-RecoveryExpr 0x12802b358 <col:14> '<dependent type>' contains-errors lvalue
    | |-BinaryOperator 0x12802b410 <line:13:3, col:10> 'const char *' contains-errors '='
    | | |-DeclRefExpr 0x12802b398 <col:3> 'const char *' lvalue Var 0x12802af30 'name' 'const char *'
    | | `-RecoveryExpr 0x12802b3f0 <col:10> '<dependent type>' contains-errors lvalue
    | `-IfStmt 0x12802b758 <line:14:7, line:17:29> has_else
    |   |-BinaryOperator 0x12802b4a8 <line:14:11, col:19> 'int' contains-errors '=='
    |   | |-DeclRefExpr 0x12802b430 <col:11> 'int' lvalue ParmVar 0x12800e368 'type' 'int'
    |   | `-RecoveryExpr 0x12802b488 <col:19> '<dependent type>' contains-errors lvalue
    |   |-BinaryOperator 0x12802b540 <line:15:3, col:10> 'const char *' contains-errors '='
    |   | |-DeclRefExpr 0x12802b4c8 <col:3> 'const char *' lvalue Var 0x12802af30 'name' 'const char *'
    |   | `-RecoveryExpr 0x12802b520 <col:10> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x12802b748 <line:17:3, col:29>
    |     `-CallExpr 0x12802b720 <col:10, col:29> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x12802b640 <col:10> 'int ()' Function 0x12802b588 'ERR_PTR' 'int ()'
    |       `-UnaryOperator 0x12802b708 <col:18, col:19> '<dependent type>' contains-errors prefix '-' cannot overflow
    |         `-ImplicitCastExpr 0x12802b6f0 <col:19> '<dependent type>' contains-errors <LValueToRValue>
    |           `-RecoveryExpr 0x12802b6d0 <col:19> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x1301227c8 <line:19:2, col:39> 'void *' contains-errors '='
    | |-DeclRefExpr 0x12802b7b8 <col:2> 'void *' contains-errors lvalue Var 0x12802afc8 'value' 'void *'
    | `-CallExpr 0x130122798 <col:10, col:39> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1301226b8 <col:10> 'int ()' Function 0x130122600 'kmalloc' 'int ()'
    |   |-RecoveryExpr 0x130122758 <col:18> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x130122778 <col:29> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x130122950 <line:20:2, line:21:25>
    | |-UnaryOperator 0x130122820 <line:20:6, col:7> 'int' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x130122808 <col:7> 'void *' contains-errors <LValueToRValue>
    | |   `-DeclRefExpr 0x1301227e8 <col:7> 'void *' contains-errors lvalue Var 0x12802afc8 'value' 'void *'
    | `-ReturnStmt 0x130122940 <line:21:3, col:25>
    |   `-CallExpr 0x130122918 <col:10, col:25> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x130122838 <col:10> 'int ()' Function 0x12802b588 'ERR_PTR' 'int ()'
    |     `-UnaryOperator 0x130122900 <col:18, col:19> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       `-ImplicitCastExpr 0x1301228e8 <col:19> '<dependent type>' contains-errors <LValueToRValue>
    |         `-RecoveryExpr 0x1301228c8 <col:19> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x130122bc8 <line:22:2, col:52> 'int' contains-errors '='
    | |-DeclRefExpr 0x130122970 <col:2> 'int' lvalue Var 0x12802ae98 'size' 'int'
    | `-CallExpr 0x130122b88 <col:9, col:52> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x130122a70 <col:9> 'int ()' Function 0x1301229b8 'fuse_getxattr' 'int ()'
    |   |-DeclRefExpr 0x130122a90 <col:23> 'struct inode *' lvalue ParmVar 0x12800e2e8 'inode' 'struct inode *'
    |   |-DeclRefExpr 0x130122ab0 <col:30> 'const char *' lvalue Var 0x12802af30 'name' 'const char *'
    |   |-DeclRefExpr 0x130122ad0 <col:36> 'void *' contains-errors lvalue Var 0x12802afc8 'value' 'void *'
    |   `-RecoveryExpr 0x130122b68 <col:43> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x1301231d0 <line:23:2, line:31:21> has_else
    | |-BinaryOperator 0x130122c40 <line:23:6, col:13> 'int' '>'
    | | |-ImplicitCastExpr 0x130122c28 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x130122be8 <col:6> 'int' lvalue Var 0x12802ae98 'size' 'int'
    | | `-IntegerLiteral 0x130122c08 <col:13> 'int' 0
    | |-BinaryOperator 0x130122e58 <line:24:3, col:54> 'struct posix_acl *' contains-errors '='
    | | |-DeclRefExpr 0x130122c60 <col:3> 'struct posix_acl *' lvalue Var 0x12802b108 'acl' 'struct posix_acl *'
    | | `-CallExpr 0x130122e20 <col:9, col:54> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x130122d60 <col:9> 'int ()' Function 0x130122ca8 'posix_acl_from_xattr' 'int ()'
    | |   |-RecoveryExpr 0x130122db8 <col:30, col:34> '<dependent type>' contains-errors lvalue
    | |   | `-DeclRefExpr 0x130122d80 <col:30> 'struct fuse_conn *' lvalue Var 0x12802abd8 'fc' 'struct fuse_conn *'
    | |   |-DeclRefExpr 0x130122de0 <col:43> 'void *' contains-errors lvalue Var 0x12802afc8 'value' 'void *'
    | |   `-DeclRefExpr 0x130122e00 <col:50> 'int' lvalue Var 0x12802ae98 'size' 'int'
    | `-IfStmt 0x1301231a0 <line:25:7, line:31:21> has_else
    |   |-RecoveryExpr 0x130122fb0 <line:25:11, line:26:43> '_Bool' contains-errors
    |   |-NullStmt 0x130123198 <line:27:3>
    |   `-IfStmt 0x130123168 <line:28:7, line:31:21> has_else
    |     |-RecoveryExpr 0x130123010 <line:28:11, col:20> '_Bool' contains-errors
    |     |-NullStmt 0x130123160 <line:29:3>
    |     `-BinaryOperator 0x130123140 <line:31:3, col:21> 'struct posix_acl *' '='
    |       |-DeclRefExpr 0x130123070 <col:3> 'struct posix_acl *' lvalue Var 0x12802b108 'acl' 'struct posix_acl *'
    |       `-ImplicitCastExpr 0x130123128 <col:9, col:21> 'struct posix_acl *' <IntegralToPointer>
    |         `-CallExpr 0x1301230e8 <col:9, col:21> 'int'
    |           |-ImplicitCastExpr 0x1301230d0 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |           | `-DeclRefExpr 0x130123090 <col:9> 'int ()' Function 0x12802b588 'ERR_PTR' 'int ()'
    |           `-ImplicitCastExpr 0x130123110 <col:17> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x1301230b0 <col:17> 'int' lvalue Var 0x12802ae98 'size' 'int'
    |-CallExpr 0x130123338 <line:33:2, col:13> 'int' contains-errors
    | |-ImplicitCastExpr 0x130123320 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x1301232e0 <col:2> 'int ()' Function 0x130123228 'kfree' 'int ()'
    | `-ImplicitCastExpr 0x130123360 <col:8> 'void *' contains-errors <LValueToRValue>
    |   `-DeclRefExpr 0x130123300 <col:8> 'void *' contains-errors lvalue Var 0x12802afc8 'value' 'void *'
    `-ReturnStmt 0x1301233b0 <line:34:2, col:9>
      `-ImplicitCastExpr 0x130123398 <col:9> 'struct posix_acl *' <LValueToRValue>
        `-DeclRefExpr 0x130123378 <col:9> 'struct posix_acl *' lvalue Var 0x12802b108 'acl' 'struct posix_acl *'
