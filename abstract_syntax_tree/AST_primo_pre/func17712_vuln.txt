`-FunctionDecl 0x12d80de88  line:1:1 invalid bit_write_MC 'int (int *, int)'
  |-ParmVarDecl 0x12d80dd28 <col:15, col:26> col:26 invalid dat 'int *'
  |-ParmVarDecl 0x12d80dda8 <col:31, col:42> col:42 invalid val 'int'
  `-CompoundStmt 0x12e809e18 <line:2:1, line:31:1>
    |-DeclStmt 0x12d80e058 <line:3:3, col:11>
    | |-VarDecl 0x12d80df58 <col:3, col:7> col:7 used i 'int'
    | `-VarDecl 0x12d80dfd8 <col:3, col:10> col:10 used j 'int'
    |-DeclStmt 0x12d80e110 <line:4:3, col:19>
    | `-VarDecl 0x12d80e088 <col:3, col:18> col:7 used negative 'int' cinit
    |   `-IntegerLiteral 0x12d80e0f0 <col:18> 'int' 0
    |-DeclStmt 0x12d80e240 <line:5:3, col:24>
    | `-VarDecl 0x12d80e1d8 <col:3, col:23> col:17 used byte 'unsigned char[5]'
    |-IfStmt 0x12d80e368 <line:9:3, line:13:5>
    | |-BinaryOperator 0x12d80e298 <line:9:7, col:13> 'int' contains-errors '<'
    | | |-RecoveryExpr 0x12d80e258 <col:7> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x12d80e278 <col:13> 'int' 0
    | `-CompoundStmt 0x12d80e350 <line:10:5, line:13:5>
    |   `-BinaryOperator 0x12d80e2f8 <line:11:7, col:18> 'int' '='
    |     |-DeclRefExpr 0x12d80e2b8 <col:7> 'int' lvalue Var 0x12d80e088 'negative' 'int'
    |     `-IntegerLiteral 0x12d80e2d8 <col:18> 'int' 1
    |-ForStmt 0x12e809440 <line:14:3, line:19:5>
    | |-BinaryOperator 0x12e809060 <line:14:8, col:19> 'int' ','
    | | |-BinaryOperator 0x12d80e3c8 <col:8, col:12> 'int' '='
    | | | |-DeclRefExpr 0x12d80e388 <col:8> 'int' lvalue Var 0x12d80df58 'i' 'int'
    | | | `-IntegerLiteral 0x12d80e3a8 <col:12> 'int' 4
    | | `-BinaryOperator 0x12e809040 <col:15, col:19> 'int' '='
    | |   |-DeclRefExpr 0x12e809000 <col:15> 'int' lvalue Var 0x12d80dfd8 'j' 'int'
    | |   `-IntegerLiteral 0x12e809020 <col:19> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x12e8090d8 <col:22, col:27> 'int' '>='
    | | |-ImplicitCastExpr 0x12e8090c0 <col:22> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x12e809080 <col:22> 'int' lvalue Var 0x12d80df58 'i' 'int'
    | | `-IntegerLiteral 0x12e8090a0 <col:27> 'int' 0
    | |-BinaryOperator 0x12e8091a0 <col:30, col:40> 'int' ','
    | | |-UnaryOperator 0x12e809118 <col:30, col:31> 'int' postfix '--'
    | | | `-DeclRefExpr 0x12e8090f8 <col:30> 'int' lvalue Var 0x12d80df58 'i' 'int'
    | | `-CompoundAssignOperator 0x12e809170 <col:35, col:40> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    | |   |-DeclRefExpr 0x12e809130 <col:35> 'int' lvalue Var 0x12d80dfd8 'j' 'int'
    | |   `-IntegerLiteral 0x12e809150 <col:40> 'int' 7
    | `-CompoundStmt 0x12e809428 <line:15:5, line:19:5>
    |   `-CompoundAssignOperator 0x12e8093a0 <line:17:7, col:18> 'unsigned char' '|=' ComputeLHSTy='int' ComputeResultTy='int'
    |     |-ArraySubscriptExpr 0x12e809360 <col:7, col:13> 'unsigned char' lvalue
    |     | |-ImplicitCastExpr 0x12e809330 <col:7> 'unsigned char *' <ArrayToPointerDecay>
    |     | | `-DeclRefExpr 0x12e8092f0 <col:7> 'unsigned char[5]' lvalue Var 0x12d80e1d8 'byte' 'unsigned char[5]'
    |     | `-ImplicitCastExpr 0x12e809348 <col:12> 'int' <LValueToRValue>
    |     |   `-DeclRefExpr 0x12e809310 <col:12> 'int' lvalue Var 0x12d80df58 'i' 'int'
    |     `-IntegerLiteral 0x12e809380 <col:18> 'int' 128
    |-ForStmt 0x12e8096b0 <line:20:3, line:22:7>
    | |-BinaryOperator 0x12e8094b8 <line:20:8, col:12> 'int' '='
    | | |-DeclRefExpr 0x12e809478 <col:8> 'int' lvalue Var 0x12d80df58 'i' 'int'
    | | `-IntegerLiteral 0x12e809498 <col:12> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x12e809530 <col:15, col:19> 'int' '<'
    | | |-ImplicitCastExpr 0x12e809518 <col:15> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x12e8094d8 <col:15> 'int' lvalue Var 0x12d80df58 'i' 'int'
    | | `-IntegerLiteral 0x12e8094f8 <col:19> 'int' 4
    | |-UnaryOperator 0x12e809570 <col:22, col:23> 'int' postfix '++'
    | | `-DeclRefExpr 0x12e809550 <col:22> 'int' lvalue Var 0x12d80df58 'i' 'int'
    | `-IfStmt 0x12e809690 <line:21:5, line:22:7>
    |   |-BinaryOperator 0x12e809668 <line:21:9, col:19> 'int' '&'
    |   | |-ImplicitCastExpr 0x12e809650 <col:9, col:15> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x12e809638 <col:9, col:15> 'unsigned char' <LValueToRValue>
    |   | |   `-ArraySubscriptExpr 0x12e8095f8 <col:9, col:15> 'unsigned char' lvalue
    |   | |     |-ImplicitCastExpr 0x12e8095c8 <col:9> 'unsigned char *' <ArrayToPointerDecay>
    |   | |     | `-DeclRefExpr 0x12e809588 <col:9> 'unsigned char[5]' lvalue Var 0x12d80e1d8 'byte' 'unsigned char[5]'
    |   | |     `-ImplicitCastExpr 0x12e8095e0 <col:14> 'int' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x12e8095a8 <col:14> 'int' lvalue Var 0x12d80df58 'i' 'int'
    |   | `-IntegerLiteral 0x12e809618 <col:19> 'int' 127
    |   `-BreakStmt 0x12e809688 <line:22:7>
    |-IfStmt 0x12e809820 <line:24:3, line:25:6>
    | |-BinaryOperator 0x12e8097c8 <line:24:7, col:17> 'int' '&'
    | | |-ImplicitCastExpr 0x12e8097b0 <col:7, col:13> 'int' <IntegralCast>
    | | | `-ImplicitCastExpr 0x12e809798 <col:7, col:13> 'unsigned char' <LValueToRValue>
    | | |   `-ArraySubscriptExpr 0x12e809758 <col:7, col:13> 'unsigned char' lvalue
    | | |     |-ImplicitCastExpr 0x12e809728 <col:7> 'unsigned char *' <ArrayToPointerDecay>
    | | |     | `-DeclRefExpr 0x12e8096e8 <col:7> 'unsigned char[5]' lvalue Var 0x12d80e1d8 'byte' 'unsigned char[5]'
    | | |     `-ImplicitCastExpr 0x12e809740 <col:12> 'int' <LValueToRValue>
    | | |       `-DeclRefExpr 0x12e809708 <col:12> 'int' lvalue Var 0x12d80df58 'i' 'int'
    | | `-IntegerLiteral 0x12e809778 <col:17> 'int' 64
    | `-UnaryOperator 0x12e809808 <line:25:5, col:6> 'int' postfix '--'
    |   `-DeclRefExpr 0x12e8097e8 <col:5> 'int' lvalue Var 0x12d80df58 'i' 'int'
    |-CompoundAssignOperator 0x12e8098f0 <line:26:3, col:14> 'unsigned char' '&=' ComputeLHSTy='int' ComputeResultTy='int'
    | |-ArraySubscriptExpr 0x12e8098b0 <col:3, col:9> 'unsigned char' lvalue
    | | |-ImplicitCastExpr 0x12e809880 <col:3> 'unsigned char *' <ArrayToPointerDecay>
    | | | `-DeclRefExpr 0x12e809840 <col:3> 'unsigned char[5]' lvalue Var 0x12d80e1d8 'byte' 'unsigned char[5]'
    | | `-ImplicitCastExpr 0x12e809898 <col:8> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x12e809860 <col:8> 'int' lvalue Var 0x12d80df58 'i' 'int'
    | `-IntegerLiteral 0x12e8098d0 <col:14> 'int' 127
    |-IfStmt 0x12e809a38 <line:27:3, line:28:16>
    | |-ImplicitCastExpr 0x12e809940 <line:27:7> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x12e809920 <col:7> 'int' lvalue Var 0x12d80e088 'negative' 'int'
    | `-CompoundAssignOperator 0x12e809a08 <line:28:5, col:16> 'unsigned char' '|=' ComputeLHSTy='int' ComputeResultTy='int'
    |   |-ArraySubscriptExpr 0x12e8099c8 <col:5, col:11> 'unsigned char' lvalue
    |   | |-ImplicitCastExpr 0x12e809998 <col:5> 'unsigned char *' <ArrayToPointerDecay>
    |   | | `-DeclRefExpr 0x12e809958 <col:5> 'unsigned char[5]' lvalue Var 0x12d80e1d8 'byte' 'unsigned char[5]'
    |   | `-ImplicitCastExpr 0x12e8099b0 <col:10> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x12e809978 <col:10> 'int' lvalue Var 0x12d80df58 'i' 'int'
    |   `-IntegerLiteral 0x12e8099e8 <col:16> 'int' 64
    `-ForStmt 0x12e809de0 <line:29:3, line:30:31>
      |-BinaryOperator 0x12e809a98 <line:29:8, col:12> 'int' '='
      | |-DeclRefExpr 0x12e809a58 <col:8> 'int' lvalue Var 0x12d80dfd8 'j' 'int'
      | `-IntegerLiteral 0x12e809a78 <col:12> 'int' 4
      |-<<<NULL>>>
      |-BinaryOperator 0x12e809b28 <col:15, col:20> 'int' '>='
      | |-ImplicitCastExpr 0x12e809af8 <col:15> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x12e809ab8 <col:15> 'int' lvalue Var 0x12d80dfd8 'j' 'int'
      | `-ImplicitCastExpr 0x12e809b10 <col:20> 'int' <LValueToRValue>
      |   `-DeclRefExpr 0x12e809ad8 <col:20> 'int' lvalue Var 0x12d80df58 'i' 'int'
      |-UnaryOperator 0x12e809b68 <col:23, col:24> 'int' postfix '--'
      | `-DeclRefExpr 0x12e809b48 <col:23> 'int' lvalue Var 0x12d80dfd8 'j' 'int'
      `-CallExpr 0x12e809db0 <line:30:5, col:31> '<dependent type>' contains-errors
        |-DeclRefExpr 0x12e809ce0 <col:5> 'int ()' Function 0x12e809c28 'bit_write_RC' 'int ()'
        |-RecoveryExpr 0x12e809d00 <col:19> '<dependent type>' contains-errors lvalue
        `-ArraySubscriptExpr 0x12e809d90 <col:24, col:30> 'unsigned char' lvalue
          |-ImplicitCastExpr 0x12e809d60 <col:24> 'unsigned char *' <ArrayToPointerDecay>
          | `-DeclRefExpr 0x12e809d20 <col:24> 'unsigned char[5]' lvalue Var 0x12d80e1d8 'byte' 'unsigned char[5]'
          `-ImplicitCastExpr 0x12e809d78 <col:29> 'int' <LValueToRValue>
            `-DeclRefExpr 0x12e809d40 <col:29> 'int' lvalue Var 0x12d80dfd8 'j' 'int'
