`-FunctionDecl 0x134128528  line:1:5 invalid mesg_make_query 'int (char *, int, int, int, int, char *, int)'
  |-ParmVarDecl 0x1341280f0 <col:22, col:30> col:30 used qname 'char *'
  |-ParmVarDecl 0x134128170 <col:37, col:46> col:46 invalid qtype 'int'
  |-ParmVarDecl 0x1341281f0 <col:53, col:62> col:62 invalid qclass 'int'
  |-ParmVarDecl 0x134128270 <line:2:8, col:17> col:17 invalid id 'int'
  |-ParmVarDecl 0x1341282f0 <col:21, col:25> col:25 used rd 'int'
  |-ParmVarDecl 0x134128370 <col:29, col:37> col:37 used buf 'char *'
  |-ParmVarDecl 0x1341283f0 <col:42, col:46> col:46 used buflen 'int'
  `-CompoundStmt 0x134142ff0 <col:54, line:50:1>
    |-DeclStmt 0x134128708 <line:3:2, col:18>
    | `-VarDecl 0x134128620 <col:2, col:13> col:8 used fn 'char *' cinit
    |   `-ImplicitCastExpr 0x1341286f0 <col:13> 'char *' <ArrayToPointerDecay>
    |     `-StringLiteral 0x1341286d0 <col:13> 'char[4]' lvalue "STR"
    |-DeclStmt 0x1341287a0 <line:4:2, col:13>
    | `-VarDecl 0x134128738 <col:2, col:10> col:10 used ucp 'char *'
    |-DeclStmt 0x134140b00 <line:5:2, col:20>
    | |-VarDecl 0x134140a00 <col:2, col:6> col:6 used i 'int'
    | `-VarDecl 0x134140a80 <col:2, col:9> col:9 used written_len 'int'
    |-IfStmt 0x134141040 <line:8:2, line:10:28>
    | |-BinaryOperator 0x134140c38 <line:8:6, col:16> 'int' contains-errors '>'
    | | |-CXXDependentScopeMemberExpr 0x134140bf0 <col:6, col:8> '<dependent type>' contains-errors lvalue .debug
    | | | `-RecoveryExpr 0x134140bd0 <col:6> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x134140b90 <col:16> 'int' 4
    | `-CallExpr 0x134140ff8 <line:9:3, line:10:28> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x134140db0 <line:9:3> 'int ()' Function 0x134140cf8 'syslog' 'int ()'
    |   |-RecoveryExpr 0x134140fd8 <col:11> '<dependent type>' contains-errors lvalue
    |   |-StringLiteral 0x134140de8 <col:22> 'char[4]' lvalue "STR"
    |   |-DeclRefExpr 0x134140e08 <col:29> 'char *' lvalue Var 0x134128620 'fn' 'char *'
    |   |-CallExpr 0x134140f48 <line:10:4, col:23> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x134140f08 <col:4> 'int ()' Function 0x134140e50 'string_rtype' 'int ()'
    |   | `-RecoveryExpr 0x134140f28 <col:18> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x134140f70 <col:26> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x134141720 <line:30:2, col:50> 'int' '='
    | |-DeclRefExpr 0x1341414b0 <col:2> 'int' lvalue Var 0x134140a00 'i' 'int'
    | `-CallExpr 0x1341416b8 <col:6, col:50> 'int'
    |   |-ImplicitCastExpr 0x1341416a0 <col:6> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x1341415b0 <col:6> 'int ()' Function 0x1341414f8 'dname_copy' 'int ()'
    |   |-ImplicitCastExpr 0x1341416f0 <col:18> 'char *' <LValueToRValue>
    |   | `-DeclRefExpr 0x1341415d0 <col:18> 'char *' lvalue ParmVar 0x1341280f0 'qname' 'char *'
    |   |-ImplicitCastExpr 0x134141708 <col:25> 'char *' <LValueToRValue>
    |   | `-DeclRefExpr 0x1341415f0 <col:25> 'char *' lvalue Var 0x134128738 'ucp' 'char *'
    |   `-BinaryOperator 0x134141680 <col:30, col:39> 'int' '-'
    |     |-ImplicitCastExpr 0x134141650 <col:30> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x134141610 <col:30> 'int' lvalue ParmVar 0x1341283f0 'buflen' 'int'
    |     `-ImplicitCastExpr 0x134141668 <col:39> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x134141630 <col:39> 'int' lvalue Var 0x134140a80 'written_len' 'int'
    |-IfStmt 0x134141800 <line:31:2, line:32:11>
    | |-BinaryOperator 0x134141798 <line:31:6, col:10> 'int' '<'
    | | |-ImplicitCastExpr 0x134141780 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x134141740 <col:6> 'int' lvalue Var 0x134140a00 'i' 'int'
    | | `-IntegerLiteral 0x134141760 <col:10> 'int' 0
    | `-ReturnStmt 0x1341417f0 <line:32:3, col:11>
    |   `-UnaryOperator 0x1341417d8 <col:10, col:11> 'int' prefix '-'
    |     `-IntegerLiteral 0x1341417b8 <col:11> 'int' 1
    |-CompoundAssignOperator 0x134141878 <line:34:2, col:17> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    | |-DeclRefExpr 0x134141820 <col:2> 'int' lvalue Var 0x134140a80 'written_len' 'int'
    | `-ImplicitCastExpr 0x134141860 <col:17> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x134141840 <col:17> 'int' lvalue Var 0x134140a00 'i' 'int'
    |-CompoundAssignOperator 0x134141900 <line:35:2, col:9> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
    | |-DeclRefExpr 0x1341418a8 <col:2> 'char *' lvalue Var 0x134128738 'ucp' 'char *'
    | `-ImplicitCastExpr 0x1341418e8 <col:9> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x1341418c8 <col:9> 'int' lvalue Var 0x134140a00 'i' 'int'
    |-IfStmt 0x134142d88 <line:43:2, line:44:11>
    | |-BinaryOperator 0x134142d20 <line:43:6, col:20> 'int' '>'
    | | |-ImplicitCastExpr 0x134142cf0 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x134142cb0 <col:6> 'int' lvalue Var 0x134140a80 'written_len' 'int'
    | | `-ImplicitCastExpr 0x134142d08 <col:20> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x134142cd0 <col:20> 'int' lvalue ParmVar 0x1341283f0 'buflen' 'int'
    | `-ReturnStmt 0x134142d78 <line:44:3, col:11>
    |   `-UnaryOperator 0x134142d60 <col:10, col:11> 'int' prefix '-'
    |     `-IntegerLiteral 0x134142d40 <col:11> 'int' 1
    |-CallExpr 0x134142ee8 <line:46:2, col:22> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x134142e88 <col:2> 'int ()' Function 0x134142dd0 'PUTSHORT' 'int ()'
    | |-RecoveryExpr 0x134142ea8 <col:12> '<dependent type>' contains-errors lvalue
    | `-DeclRefExpr 0x134142ec8 <col:19> 'char *' lvalue Var 0x134128738 'ucp' 'char *'
    |-CallExpr 0x134142f78 <line:47:2, col:23> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x134142f18 <col:2> 'int ()' Function 0x134142dd0 'PUTSHORT' 'int ()'
    | |-RecoveryExpr 0x134142f38 <col:12> '<dependent type>' contains-errors lvalue
    | `-DeclRefExpr 0x134142f58 <col:20> 'char *' lvalue Var 0x134128738 'ucp' 'char *'
    `-ReturnStmt 0x134142fe0 <line:49:2, col:9>
      `-ImplicitCastExpr 0x134142fc8 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x134142fa8 <col:9> 'int' lvalue Var 0x134140a80 'written_len' 'int'
