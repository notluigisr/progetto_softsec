`-FunctionDecl 0x13b00df18  line:1:1 invalid init_dh 'int (int *, char *, const int *)'
  |-ParmVarDecl 0x13b00dd28 <col:9, col:18> col:18 invalid sctx 'int *'
  |-ParmVarDecl 0x13b00dda8 <col:24, col:32> col:32 used dhparam 'char *'
  |-ParmVarDecl 0x13b00de28 <col:41, col:58> col:58 invalid host 'const int *'
  `-CompoundStmt 0x13c009e30 <line:2:1, line:66:1>
    |-DeclStmt 0x13b00e088 <line:5:1, col:19>
    | `-VarDecl 0x13b00e020 <col:1, col:9> col:9 used dhexpanded 'char *'
    |-DeclStmt 0x13b00e120 <line:6:1, col:16>
    | `-VarDecl 0x13b00e0b8 <col:1, col:13> col:13 used pem 'const char *'
    |-IfStmt 0x13b00e350 <line:8:1, line:9:10>
    | |-RecoveryExpr 0x13b00e2e8 <line:8:5, col:48> '_Bool' contains-errors
    | `-ReturnStmt 0x13b00e340 <line:9:3, col:10>
    |   `-RecoveryExpr 0x13b00e320 <col:10> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x13b028268 <line:11:1, line:37:3> has_else
    | |-BinaryOperator 0x13b027448 <line:11:5, col:22> 'int' '||'
    | | |-UnaryOperator 0x13b00e3a8 <col:5, col:6> 'int' prefix '!' cannot overflow
    | | | `-ImplicitCastExpr 0x13b00e390 <col:6> 'char *' <LValueToRValue>
    | | |   `-DeclRefExpr 0x13b00e370 <col:6> 'char *' lvalue Var 0x13b00e020 'dhexpanded' 'char *'
    | | `-UnaryOperator 0x13b027430 <col:20, col:22> 'int' prefix '!' cannot overflow
    | |   `-ImplicitCastExpr 0x13b027418 <col:21, col:22> 'char' <LValueToRValue>
    | |     `-UnaryOperator 0x13b027400 <col:21, col:22> 'char' lvalue prefix '*' cannot overflow
    | |       `-ImplicitCastExpr 0x13b00e3e0 <col:22> 'char *' <LValueToRValue>
    | |         `-DeclRefExpr 0x13b00e3c0 <col:22> 'char *' lvalue Var 0x13b00e020 'dhexpanded' 'char *'
    | |-NullStmt 0x13b028260 <line:12:3>
    | `-IfStmt 0x13b028230 <line:13:6, line:37:3> has_else
    |   |-BinaryOperator 0x13b027640 <line:13:10, col:27> 'int' '=='
    |   | |-ImplicitCastExpr 0x13b027628 <col:10, col:22> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x13b027610 <col:10, col:22> 'char' <LValueToRValue>
    |   | |   `-ArraySubscriptExpr 0x13b0275d8 <col:10, col:22> 'char' lvalue
    |   | |     |-ImplicitCastExpr 0x13b0275c0 <col:10> 'char *' <LValueToRValue>
    |   | |     | `-DeclRefExpr 0x13b027580 <col:10> 'char *' lvalue Var 0x13b00e020 'dhexpanded' 'char *'
    |   | |     `-IntegerLiteral 0x13b0275a0 <col:21> 'int' 0
    |   | `-CharacterLiteral 0x13b0275f8 <col:27> 'int' 47
    |   |-CompoundStmt 0x13b027b28 <line:14:3, line:21:3>
    |   | `-IfStmt 0x13b027b08 <line:15:3, line:20:5>
    |   |   |-RecoveryExpr 0x13b027790 <line:15:7, col:49> '_Bool' contains-errors
    |   |   `-CompoundStmt 0x13b027af8 <line:16:5, line:20:5>
    |   `-CompoundStmt 0x13b028210 <line:23:3, line:37:3>
    |     |-IfStmt 0x13b027e48 <line:24:3, line:28:5>
    |     | |-BinaryOperator 0x13b027d18 <line:24:7, col:37> 'int' '=='
    |     | | |-CallExpr 0x13b027c98 <col:7, col:32> 'int'
    |     | | | |-ImplicitCastExpr 0x13b027c80 <col:7> 'int (*)()' <FunctionToPointerDecay>
    |     | | | | `-DeclRefExpr 0x13b027c20 <col:7> 'int ()' Function 0x13b027b68 'Ustrcmp' 'int ()'
    |     | | | |-ImplicitCastExpr 0x13b027cc8 <col:15> 'char *' <LValueToRValue>
    |     | | | | `-DeclRefExpr 0x13b027c40 <col:15> 'char *' lvalue Var 0x13b00e020 'dhexpanded' 'char *'
    |     | | | `-ImplicitCastExpr 0x13b027ce0 <col:27> 'char *' <ArrayToPointerDecay>
    |     | | |   `-StringLiteral 0x13b027c60 <col:27> 'char[4]' lvalue "STR"
    |     | | `-IntegerLiteral 0x13b027cf8 <col:37> 'int' 0
    |     | `-CompoundStmt 0x13b027e38 <line:25:5, line:28:5>
    |     `-IfStmt 0x13b028198 <line:30:3, line:35:5>
    |       |-UnaryOperator 0x13b028058 <line:30:7, col:45> 'int' prefix '!' cannot overflow
    |       | `-ParenExpr 0x13b028038 <col:8, col:45> 'const char *'
    |       |   `-BinaryOperator 0x13b028018 <col:9, col:44> 'const char *' '='
    |       |     |-DeclRefExpr 0x13b027e68 <col:9> 'const char *' lvalue Var 0x13b00e0b8 'pem' 'const char *'
    |       |     `-ImplicitCastExpr 0x13b028000 <col:15, col:44> 'const char *' <IntegralToPointer>
    |       |       `-CallExpr 0x13b027fc0 <col:15, col:44> 'int'
    |       |         |-ImplicitCastExpr 0x13b027fa8 <col:15> 'int (*)()' <FunctionToPointerDecay>
    |       |         | `-DeclRefExpr 0x13b027f68 <col:15> 'int ()' Function 0x13b027eb0 'std_dh_prime_named' 'int ()'
    |       |         `-ImplicitCastExpr 0x13b027fe8 <col:34> 'char *' <LValueToRValue>
    |       |           `-DeclRefExpr 0x13b027f88 <col:34> 'char *' lvalue Var 0x13b00e020 'dhexpanded' 'char *'
    |       `-CompoundStmt 0x13b028188 <line:31:5, line:35:5>
    |-IfStmt 0x13c009a00 <line:39:1, line:45:3>
    | |-RecoveryExpr 0x13b028398 <line:39:5, col:56> '_Bool' contains-errors
    | `-CompoundStmt 0x13c0099f0 <line:40:3, line:45:3>
    `-IfStmt 0x13c009ce0 <line:48:1, line:60:3> has_else
      |-RecoveryExpr 0x13c009b40 <line:48:5, col:23> '_Bool' contains-errors
      |-CompoundStmt 0x13c009b80 <line:49:3, line:53:3>
      `-CompoundStmt 0x13c009cd0 <line:55:3, line:60:3>
