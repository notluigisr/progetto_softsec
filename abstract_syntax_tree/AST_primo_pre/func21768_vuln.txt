`-FunctionDecl 0x154128758  line:1:12 bcm_release 'int (struct socket *)' static
  |-ParmVarDecl 0x154128648 <col:24, col:39> col:39 used sock 'struct socket *'
  `-CompoundStmt 0x1541476c8 <line:2:1, line:70:1>
    |-DeclStmt 0x154140c98 <line:3:2, col:28>
    | |-RecordDecl 0x154140a50 <col:2, col:9> col:9 struct sock
    | `-VarDecl 0x154140bb8 <col:2, col:26> col:15 used sk 'struct sock *' cinit
    |   `-RecoveryExpr 0x154140c58 <col:20, col:26> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x154140c20 <col:20> 'struct socket *' lvalue ParmVar 0x154128648 'sock' 'struct socket *'
    |-DeclStmt 0x154140e98 <line:4:2, col:17>
    | |-RecordDecl 0x154140cb0 <col:2, col:9> col:9 struct net
    | `-VarDecl 0x154140e18 <col:2, col:14> col:14 used net 'struct net *'
    |-DeclStmt 0x154141098 <line:5:2, col:21>
    | |-RecordDecl 0x154140eb0 <col:2, col:9> col:9 struct bcm_sock
    | `-VarDecl 0x154141018 <col:2, col:19> col:19 used bo 'struct bcm_sock *'
    |-DeclStmt 0x154141330 <line:6:2, col:26>
    | |-RecordDecl 0x1541410b0 <col:2, col:9> col:9 struct bcm_op
    | |-VarDecl 0x154141218 <col:2, col:17> col:17 used op 'struct bcm_op *'
    | `-VarDecl 0x1541412a8 <col:2, col:22> col:22 used next 'struct bcm_op *'
    |-IfStmt 0x1541413c8 <line:8:2, line:9:10>
    | |-UnaryOperator 0x154141380 <line:8:6, col:7> 'int' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x154141368 <col:7> 'struct sock *' contains-errors <LValueToRValue>
    | |   `-DeclRefExpr 0x154141348 <col:7> 'struct sock *' contains-errors lvalue Var 0x154140bb8 'sk' 'struct sock *'
    | `-ReturnStmt 0x1541413b8 <line:9:3, col:10>
    |   `-IntegerLiteral 0x154141398 <col:10> 'int' 0
    |-BinaryOperator 0x154141610 <line:11:2, col:19> 'struct net *' contains-errors '='
    | |-DeclRefExpr 0x1541413e8 <col:2> 'struct net *' lvalue Var 0x154140e18 'net' 'struct net *'
    | `-ImplicitCastExpr 0x1541415f8 <col:8, col:19> 'struct net *' contains-errors <IntegralToPointer>
    |   `-CallExpr 0x1541415b8 <col:8, col:19> 'int' contains-errors
    |     |-ImplicitCastExpr 0x1541415a0 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x154141530 <col:8> 'int ()' Function 0x154141478 'sock_net' 'int ()'
    |     `-ImplicitCastExpr 0x1541415e0 <col:17> 'struct sock *' contains-errors <LValueToRValue>
    |       `-DeclRefExpr 0x154141550 <col:17> 'struct sock *' contains-errors lvalue Var 0x154140bb8 'sk' 'struct sock *'
    |-BinaryOperator 0x1541417e0 <line:12:2, col:16> 'struct bcm_sock *' contains-errors '='
    | |-DeclRefExpr 0x154141630 <col:2> 'struct bcm_sock *' lvalue Var 0x154141018 'bo' 'struct bcm_sock *'
    | `-ImplicitCastExpr 0x1541417c8 <col:7, col:16> 'struct bcm_sock *' contains-errors <IntegralToPointer>
    |   `-CallExpr 0x154141788 <col:7, col:16> 'int' contains-errors
    |     |-ImplicitCastExpr 0x154141770 <col:7> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x154141730 <col:7> 'int ()' Function 0x154141678 'bcm_sk' 'int ()'
    |     `-ImplicitCastExpr 0x1541417b0 <col:14> 'struct sock *' contains-errors <LValueToRValue>
    |       `-DeclRefExpr 0x154141750 <col:14> 'struct sock *' contains-errors lvalue Var 0x154140bb8 'sk' 'struct sock *'
    |-CallExpr 0x154141990 <line:16:2, col:30> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1541418e0 <col:2> 'int ()' Function 0x154141828 'spin_lock' 'int ()'
    | `-UnaryOperator 0x154141978 <col:12, col:13> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x154141958 <col:13> '<dependent type>' contains-errors lvalue
    |-WhileStmt 0x154146678 <line:17:2, line:21:2>
    | |-BinaryOperator 0x154146240 <line:17:9, col:30> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x154146220 <col:9> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x1541419d0 <col:30> 'struct bcm_sock *' lvalue Var 0x154141018 'bo' 'struct bcm_sock *'
    | `-CompoundStmt 0x154146650 <col:34, line:21:2>
    |   |-CallExpr 0x1541463f0 <line:18:3, col:33> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x154146340 <col:3> 'int ()' Function 0x154146288 'spin_unlock' 'int ()'
    |   | `-UnaryOperator 0x1541463d8 <col:15, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   `-RecoveryExpr 0x1541463b8 <col:16> '<dependent type>' contains-errors lvalue
    |   |-CallExpr 0x154146550 <line:19:3, col:37> 'int'
    |   | |-ImplicitCastExpr 0x154146538 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x1541464f8 <col:3> 'int ()' Function 0x154146440 'schedule_timeout_uninterruptible' 'int ()'
    |   | `-IntegerLiteral 0x154146518 <col:36> 'int' 1
    |   `-CallExpr 0x154146628 <line:20:3, col:31> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x154146578 <col:3> 'int ()' Function 0x154141828 'spin_lock' 'int ()'
    |     `-UnaryOperator 0x154146610 <col:13, col:14> '<dependent type>' contains-errors prefix '&' cannot overflow
    |       `-RecoveryExpr 0x1541465f0 <col:14> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x154146810 <line:22:2, col:24> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x154146778 <col:2> 'int ()' Function 0x1541466c0 'list_del' 'int ()'
    | `-UnaryOperator 0x1541467f8 <col:11, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x1541467d0 <col:12, col:16> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x154146798 <col:12> 'struct bcm_sock *' lvalue Var 0x154141018 'bo' 'struct bcm_sock *'
    |-CallExpr 0x1541468e8 <line:23:2, col:32> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x154146838 <col:2> 'int ()' Function 0x154146288 'spin_unlock' 'int ()'
    | `-UnaryOperator 0x1541468d0 <col:14, col:15> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x1541468b0 <col:15> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x154146a48 <line:25:2, col:14> 'int' contains-errors
    | |-ImplicitCastExpr 0x154146a30 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x1541469f0 <col:2> 'int ()' Function 0x154146938 'lock_sock' 'int ()'
    | `-ImplicitCastExpr 0x154146a70 <col:12> 'struct sock *' contains-errors <LValueToRValue>
    |   `-DeclRefExpr 0x154146a10 <col:12> 'struct sock *' contains-errors lvalue Var 0x154140bb8 'sk' 'struct sock *'
    |-CallExpr 0x154146cb8 <line:27:2, col:54> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x154146b68 <col:2> 'int ()' Function 0x154146ab0 'list_for_each_entry_safe' 'int ()'
    | |-DeclRefExpr 0x154146b88 <col:27> 'struct bcm_op *' lvalue Var 0x154141218 'op' 'struct bcm_op *'
    | |-DeclRefExpr 0x154146ba8 <col:31> 'struct bcm_op *' lvalue Var 0x1541412a8 'next' 'struct bcm_op *'
    | |-UnaryOperator 0x154146c28 <col:37, col:42> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-RecoveryExpr 0x154146c00 <col:38, col:42> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x154146bc8 <col:38> 'struct bcm_sock *' lvalue Var 0x154141018 'bo' 'struct bcm_sock *'
    | `-RecoveryExpr 0x154146c98 <col:50> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x154146e30 <line:28:3, col:19> 'int'
    | |-ImplicitCastExpr 0x154146e18 <col:3> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x154146dd8 <col:3> 'int ()' Function 0x154146d20 'bcm_remove_op' 'int ()'
    | `-ImplicitCastExpr 0x154146e58 <col:17> 'struct bcm_op *' <LValueToRValue>
    |   `-DeclRefExpr 0x154146df8 <col:17> 'struct bcm_op *' lvalue Var 0x154141218 'op' 'struct bcm_op *'
    |-CallExpr 0x1541470e0 <line:66:2, col:17> 'int' contains-errors
    | |-ImplicitCastExpr 0x1541470c8 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x154147088 <col:2> 'int ()' Function 0x154146fd0 'release_sock' 'int ()'
    | `-ImplicitCastExpr 0x154147108 <col:15> 'struct sock *' contains-errors <LValueToRValue>
    |   `-DeclRefExpr 0x1541470a8 <col:15> 'struct sock *' contains-errors lvalue Var 0x154140bb8 'sk' 'struct sock *'
    |-CallExpr 0x154147658 <line:67:2, col:13> 'int' contains-errors
    | |-ImplicitCastExpr 0x154147640 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x154147600 <col:2> 'int ()' Function 0x154147148 'sock_put' 'int ()'
    | `-ImplicitCastExpr 0x154147680 <col:11> 'struct sock *' contains-errors <LValueToRValue>
    |   `-DeclRefExpr 0x154147620 <col:11> 'struct sock *' contains-errors lvalue Var 0x154140bb8 'sk' 'struct sock *'
    `-ReturnStmt 0x1541476b8 <line:69:2, col:9>
      `-IntegerLiteral 0x154147698 <col:9> 'int' 0
