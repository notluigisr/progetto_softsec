`-FunctionDecl 0x11e928c38  line:1:14 invalid ResizeOutputTensors 'int (int *, int *, const int *, const int *, const int *)'
  |-ParmVarDecl 0x11e928928 <col:34, col:49> col:49 referenced invalid context 'int *'
  |-ParmVarDecl 0x11e9289a8 <col:58, col:70> col:70 invalid node 'int *'
  |-ParmVarDecl 0x11e928a28 <line:2:34, col:54> col:54 invalid input 'const int *'
  |-ParmVarDecl 0x11e928aa8 <line:3:34, col:54> col:54 invalid size_splits 'const int *'
  |-ParmVarDecl 0x11e928b28 <line:4:34, col:54> col:54 invalid axis 'const int *'
  `-CompoundStmt 0x11e9438d0 <col:60, line:60:1>
    |-DeclStmt 0x11e928da0 <line:5:3, col:47>
    | `-VarDecl 0x11e928d20 <col:3, col:7> col:7 used axis_value 'int'
    |-IfStmt 0x11e942070 <line:6:3, line:8:3>
    | |-BinaryOperator 0x11e928e10 <line:6:7, col:20> 'int' '<'
    | | |-ImplicitCastExpr 0x11e928df8 <col:7> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x11e928db8 <col:7> 'int' lvalue Var 0x11e928d20 'axis_value' 'int'
    | | `-IntegerLiteral 0x11e928dd8 <col:20> 'int' 0
    | `-CompoundStmt 0x11e942058 <col:23, line:8:3>
    |   `-CompoundAssignOperator 0x11e942028 <line:7:5, col:38> 'int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |     |-DeclRefExpr 0x11e928e30 <col:5> 'int' lvalue Var 0x11e928d20 'axis_value' 'int'
    |     `-CallExpr 0x11e942000 <col:19, col:38> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x11e928fb0 <col:19> 'int ()' Function 0x11e928ef8 'NumDimensions' 'int ()'
    |       `-RecoveryExpr 0x11e928fd0 <col:33> '<dependent type>' contains-errors lvalue
    |-RecoveryExpr 0x11e9420c0 <line:10:3> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x11e942558 <line:11:3, line:18:3> has_else
    | |-BinaryOperator 0x11e9421a0 <line:11:7, col:28> 'int' contains-errors '=='
    | | |-CXXDependentScopeMemberExpr 0x11e942100 <col:7, col:20> '<dependent type>' contains-errors lvalue ->type
    | | | `-RecoveryExpr 0x11e9420e0 <col:7> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x11e942180 <col:28> '<dependent type>' contains-errors lvalue
    | |-CompoundStmt 0x11e942248 <col:42, line:13:3>
    | `-IfStmt 0x11e942528 <col:10, line:18:3> has_else
    |   |-BinaryOperator 0x11e942318 <line:13:14, col:35> 'int' contains-errors '=='
    |   | |-CXXDependentScopeMemberExpr 0x11e942278 <col:14, col:27> '<dependent type>' contains-errors lvalue ->type
    |   | | `-RecoveryExpr 0x11e942258 <col:14> '<dependent type>' contains-errors lvalue
    |   | `-RecoveryExpr 0x11e9422f8 <col:35> '<dependent type>' contains-errors lvalue
    |   |-CompoundStmt 0x11e9423c0 <col:49, line:15:3>
    |   `-CompoundStmt 0x11e942510 <col:10, line:18:3>
    |     `-CallExpr 0x11e9424e0 <line:16:5, col:40> '<dependent type>' contains-errors
    |       |-CXXDependentScopeMemberExpr 0x11e942418 <col:5, col:14> '<dependent type>' contains-errors lvalue ->ReportError
    |       | `-RecoveryExpr 0x11e9423f0 <col:5> '<dependent type>' contains-errors lvalue
    |       |   `-DeclRefExpr 0x11e9423d0 <col:5> 'int *' lvalue ParmVar 0x11e928928 'context' 'int *'
    |       |-RecoveryExpr 0x11e942460 <col:26> '<dependent type>' contains-errors lvalue
    |       `-StringLiteral 0x11e9424c0 <col:35> 'char[4]' lvalue "STR"
    |-DeclStmt 0x11e942640 <line:20:3, col:27>
    | `-VarDecl 0x11e9425a0 <col:3, col:26> col:7 used minus_one_index 'int' cinit
    |   `-UnaryOperator 0x11e942628 <col:25, col:26> 'int' prefix '-'
    |     `-IntegerLiteral 0x11e942608 <col:26> 'int' 1
    |-DeclStmt 0x11e942cc8 <line:36:3, col:60>
    | `-VarDecl 0x11e942af0 <col:3, col:59> col:13 used input_size 'const int' cinit
    |   `-CallExpr 0x11e942c98 <col:26, col:59> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x11e942c38 <col:26> 'int ()' Function 0x11e942b80 'SizeOfDimension' 'int ()'
    |     |-RecoveryExpr 0x11e942c58 <col:42> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x11e942c78 <col:49> 'int' lvalue Var 0x11e928d20 'axis_value' 'int'
    |-IfStmt 0x11e9430f0 <line:38:3, line:50:3> has_else
    | |-BinaryOperator 0x11e942d50 <line:38:7, col:27> 'int' '!='
    | | |-ImplicitCastExpr 0x11e942d38 <col:7> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x11e942ce0 <col:7> 'int' lvalue Var 0x11e9425a0 'minus_one_index' 'int'
    | | `-UnaryOperator 0x11e942d20 <col:26, col:27> 'int' prefix '-'
    | |   `-IntegerLiteral 0x11e942d00 <col:27> 'int' 1
    | |-CompoundStmt 0x11e942f48 <col:30, line:46:3>
    | | `-IfStmt 0x11e942f18 <line:39:5, line:45:5> has_else
    | |   |-RecoveryExpr 0x11e942d90 <line:39:9, col:27> '_Bool' contains-errors
    | |   |-CompoundStmt 0x11e942eb0 <col:39, line:43:5>
    | |   | `-CallExpr 0x11e942e80 <line:40:7, line:42:16> '<dependent type>' contains-errors
    | |   |   |-CXXDependentScopeMemberExpr 0x11e942df8 <line:40:7, col:16> '<dependent type>' contains-errors lvalue ->ReportError
    | |   |   | `-RecoveryExpr 0x11e942dd0 <col:7> '<dependent type>' contains-errors lvalue
    | |   |   |   `-DeclRefExpr 0x11e942db0 <col:7> 'int *' lvalue ParmVar 0x11e928928 'context' 'int *'
    | |   |   |-RecoveryExpr 0x11e942e40 <line:41:11> '<dependent type>' contains-errors lvalue
    | |   |   `-StringLiteral 0x11e942e60 <line:42:11> 'char[4]' lvalue "STR"
    | |   `-CompoundStmt 0x11e942f08 <line:43:12, line:45:5>
    | `-IfStmt 0x11e9430d0 <line:46:10, line:50:3>
    |   |-RecoveryExpr 0x11e942f80 <line:46:14, col:33> '_Bool' contains-errors
    |   `-CompoundStmt 0x11e9430b8 <col:45, line:50:3>
    |     `-CallExpr 0x11e943088 <line:47:5, line:49:14> '<dependent type>' contains-errors
    |       |-CXXDependentScopeMemberExpr 0x11e943000 <line:47:5, col:14> '<dependent type>' contains-errors lvalue ->ReportError
    |       | `-RecoveryExpr 0x11e942fc0 <col:5> '<dependent type>' contains-errors lvalue
    |       |   `-DeclRefExpr 0x11e942fa0 <col:5> 'int *' lvalue ParmVar 0x11e928928 'context' 'int *'
    |       |-RecoveryExpr 0x11e943048 <line:48:9> '<dependent type>' contains-errors lvalue
    |       `-StringLiteral 0x11e943068 <line:49:9> 'char[4]' lvalue "STR"
    `-ForStmt 0x11e943898 <line:52:3, line:57:3>
      |-DeclStmt 0x11e9431c0 <line:52:8, col:17>
      | `-VarDecl 0x11e943138 <col:8, col:16> col:12 used i 'int' cinit
      |   `-IntegerLiteral 0x11e9431a0 <col:16> 'int' 0
      |-<<<NULL>>>
      |-BinaryOperator 0x11e943340 <col:19, col:38> 'int' contains-errors '<'
      | |-DeclRefExpr 0x11e9431d8 <col:19> 'int' lvalue Var 0x11e943138 'i' 'int'
      | `-CallExpr 0x11e943318 <col:23, col:38> '<dependent type>' contains-errors
      |   |-DeclRefExpr 0x11e9432d8 <col:23> 'int ()' Function 0x11e943220 'NumOutputs' 'int ()'
      |   `-RecoveryExpr 0x11e9432f8 <col:34> '<dependent type>' contains-errors lvalue
      |-UnaryOperator 0x11e943380 <col:41, col:43> 'int' prefix '++'
      | `-DeclRefExpr 0x11e943360 <col:43> 'int' lvalue Var 0x11e943138 'i' 'int'
      `-CompoundStmt 0x11e943888 <col:46, line:57:3>
