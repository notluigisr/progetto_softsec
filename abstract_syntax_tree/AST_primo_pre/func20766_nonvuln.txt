`-FunctionDecl 0x10500dda8  line:1:1 referenced goto_tabpage 'int (int)'
  |-ParmVarDecl 0x10500dcd8 <col:14, col:18> col:18 used n 'int'
  `-CompoundStmt 0x105028f00 <line:2:1, line:67:1>
    |-DeclStmt 0x10500df80 <line:5:5, col:11>
    | `-VarDecl 0x10500df18 <col:5, col:10> col:10 used i 'int'
    |-IfStmt 0x10500e2a0 <line:7:5, line:12:5>
    | |-CallExpr 0x10500e118 <line:7:9, col:21> 'int'
    | | `-ImplicitCastExpr 0x10500e100 <col:9> 'int (*)()' <FunctionToPointerDecay>
    | |   `-DeclRefExpr 0x10500e0b0 <col:9> 'int ()' Function 0x10500dff8 'text_locked' 'int ()'
    | `-CompoundStmt 0x10500e280 <line:8:5, line:12:5>
    |   |-CallExpr 0x10500e250 <line:10:2, col:18> 'int'
    |   | `-ImplicitCastExpr 0x10500e238 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   |   `-DeclRefExpr 0x10500e218 <col:2> 'int ()' Function 0x10500e160 'text_locked_msg' 'int ()'
    |   `-ReturnStmt 0x10500e270 <line:11:2>
    |-IfStmt 0x105028600 <line:16:5, line:21:5>
    | |-BinaryOperator 0x10500e3e0 <line:16:9, col:35> 'int' contains-errors '=='
    | | |-CXXDependentScopeMemberExpr 0x10500e378 <col:9, col:24> '<dependent type>' contains-errors lvalue ->tp_next
    | | | `-RecoveryExpr 0x10500e358 <col:9> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x10500e3c0 <col:35> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x1050285e0 <line:17:5, line:21:5>
    |   |-IfStmt 0x1050285b0 <line:18:2, line:19:17>
    |   | |-BinaryOperator 0x105028458 <line:18:6, col:10> 'int' '>'
    |   | | |-ImplicitCastExpr 0x105028440 <col:6> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x105028400 <col:6> 'int' lvalue ParmVar 0x10500dcd8 'n' 'int'
    |   | | `-IntegerLiteral 0x105028420 <col:10> 'int' 1
    |   | `-CallExpr 0x105028590 <line:19:6, col:17> 'int'
    |   |   `-ImplicitCastExpr 0x105028578 <col:6> 'int (*)()' <FunctionToPointerDecay>
    |   |     `-DeclRefExpr 0x105028558 <col:6> 'int ()' Function 0x1050284a0 'beep_flush' 'int ()'
    |   `-ReturnStmt 0x1050285d0 <line:20:2>
    `-IfStmt 0x105028dd0 <line:23:5, line:59:5> has_else
      |-BinaryOperator 0x105028678 <line:23:9, col:14> 'int' '=='
      | |-ImplicitCastExpr 0x105028660 <col:9> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x105028620 <col:9> 'int' lvalue ParmVar 0x10500dcd8 'n' 'int'
      | `-IntegerLiteral 0x105028640 <col:14> 'int' 0
      |-CompoundStmt 0x105028870 <line:24:5, line:30:5>
      `-IfStmt 0x105028da0 <line:31:10, line:59:5> has_else
        |-BinaryOperator 0x1050288d8 <line:31:14, col:18> 'int' '<'
        | |-ImplicitCastExpr 0x1050288c0 <col:14> 'int' <LValueToRValue>
        | | `-DeclRefExpr 0x105028880 <col:14> 'int' lvalue ParmVar 0x10500dcd8 'n' 'int'
        | `-IntegerLiteral 0x1050288a0 <col:18> 'int' 0
        |-CompoundStmt 0x105028a70 <line:32:5, line:43:5>
        | `-ForStmt 0x105028a38 <line:36:2, line:42:2>
        |   |-BinaryOperator 0x105028950 <line:36:7, col:11> 'int' '='
        |   | |-DeclRefExpr 0x1050288f8 <col:7> 'int' lvalue Var 0x10500df18 'i' 'int'
        |   | `-ImplicitCastExpr 0x105028938 <col:11> 'int' <LValueToRValue>
        |   |   `-DeclRefExpr 0x105028918 <col:11> 'int' lvalue ParmVar 0x10500dcd8 'n' 'int'
        |   |-<<<NULL>>>
        |   |-BinaryOperator 0x1050289c8 <col:14, col:18> 'int' '<'
        |   | |-ImplicitCastExpr 0x1050289b0 <col:14> 'int' <LValueToRValue>
        |   | | `-DeclRefExpr 0x105028970 <col:14> 'int' lvalue Var 0x10500df18 'i' 'int'
        |   | `-IntegerLiteral 0x105028990 <col:18> 'int' 0
        |   |-UnaryOperator 0x105028a08 <col:21, col:23> 'int' prefix '++'
        |   | `-DeclRefExpr 0x1050289e8 <col:23> 'int' lvalue Var 0x10500df18 'i' 'int'
        |   `-CompoundStmt 0x105028a28 <line:37:2, line:42:2>
        `-IfStmt 0x105028d70 <line:44:10, line:59:5> has_else
          |-BinaryOperator 0x105028ae0 <line:44:14, col:19> 'int' '=='
          | |-ImplicitCastExpr 0x105028ac8 <col:14> 'int' <LValueToRValue>
          | | `-DeclRefExpr 0x105028a88 <col:14> 'int' lvalue ParmVar 0x10500dcd8 'n' 'int'
          | `-IntegerLiteral 0x105028aa8 <col:19> 'int' 9999
          |-CompoundStmt 0x105028b08 <line:45:5, line:49:5>
          `-CompoundStmt 0x105028d58 <line:51:5, line:59:5>
            `-IfStmt 0x105028d38 <line:54:2, line:58:2>
              |-RecoveryExpr 0x105028c90 <line:54:6, col:12> '_Bool' contains-errors
              `-CompoundStmt 0x105028d18 <line:55:2, line:58:2>
                |-CallExpr 0x105028ce8 <line:56:6, col:17> 'int'
                | `-ImplicitCastExpr 0x105028cd0 <col:6> 'int (*)()' <FunctionToPointerDecay>
                |   `-DeclRefExpr 0x105028cb0 <col:6> 'int ()' Function 0x1050284a0 'beep_flush' 'int ()'
                `-ReturnStmt 0x105028d08 <line:57:6>
