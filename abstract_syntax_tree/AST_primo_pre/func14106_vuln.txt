`-FunctionDecl 0x14f80de88  line:1:14 invalid Prepare 'int (int *, int *)'
  |-ParmVarDecl 0x14f80dd28 <col:22, col:37> col:37 referenced invalid context 'int *'
  |-ParmVarDecl 0x14f80dda8 <col:46, col:58> col:58 invalid node 'int *'
  `-CompoundStmt 0x14f829790 <col:64, line:50:1>
    |-DeclStmt 0x14f80e078 <line:2:3, line:3:64>
    | `-VarDecl 0x14f80df58 <line:2:3, col:29> col:29 invalid data 'const int *'
    |-CallExpr 0x14f80e398 <line:5:3, col:48> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14f80e1f0 <col:3> 'int ()' Function 0x14f80e138 'TF_LITE_ENSURE_EQ' 'int ()'
    | |-RecoveryExpr 0x14f80e210 <col:21> '<dependent type>' contains-errors lvalue
    | |-CallExpr 0x14f80e350 <col:30, col:44> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x14f80e310 <col:30> 'int ()' Function 0x14f80e258 'NumInputs' 'int ()'
    | | `-RecoveryExpr 0x14f80e330 <col:40> '<dependent type>' contains-errors lvalue
    | `-IntegerLiteral 0x14f80e378 <col:47> 'int' 1
    |-CallExpr 0x14f827bd0 <line:6:3, col:57> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14f80e3d0 <col:3> 'int ()' Function 0x14f80e138 'TF_LITE_ENSURE_EQ' 'int ()'
    | |-RecoveryExpr 0x14f827a00 <col:21> '<dependent type>' contains-errors lvalue
    | |-CallExpr 0x14f827b40 <col:30, col:45> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x14f827b00 <col:30> 'int ()' Function 0x14f827a48 'NumOutputs' 'int ()'
    | | `-RecoveryExpr 0x14f827b20 <col:41> '<dependent type>' contains-errors lvalue
    | `-CXXDependentScopeMemberExpr 0x14f827b88 <col:48, col:54> '<dependent type>' contains-errors lvalue ->num
    |   `-RecoveryExpr 0x14f827b68 <col:48> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x14f827e18 <line:8:3, col:68>
    | `-VarDecl 0x14f827c20 <col:3, col:23> col:23 invalid input 'const int *'
    |-CallExpr 0x14f8280d8 <line:9:3, col:49> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14f827f10 <col:3> 'int ()' Function 0x14f827e58 'TF_LITE_ENSURE' 'int ()'
    | |-RecoveryExpr 0x14f827f30 <col:18> '<dependent type>' contains-errors lvalue
    | `-BinaryOperator 0x14f8280b8 <col:27, col:48> 'int' contains-errors '>'
    |   |-CallExpr 0x14f828070 <col:27, col:44> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x14f828030 <col:27> 'int ()' Function 0x14f827f78 'NumElements' 'int ()'
    |   | `-RecoveryExpr 0x14f828050 <col:39> '<dependent type>' contains-errors lvalue
    |   `-IntegerLiteral 0x14f828098 <col:48> 'int' 0
    |-DeclStmt 0x14f8281f0 <line:10:3, col:24>
    | `-VarDecl 0x14f828120 <col:3, col:20> col:7 used axis 'int' cinit
    |   `-CXXDependentScopeMemberExpr 0x14f8281a8 <col:14, col:20> '<dependent type>' contains-errors lvalue ->axis
    |     `-RecoveryExpr 0x14f828188 <col:14> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14f828430 <line:11:3, line:13:3>
    | |-BinaryOperator 0x14f828260 <line:11:7, col:14> 'int' contains-errors '<'
    | | |-ImplicitCastExpr 0x14f828248 <col:7> 'int' contains-errors <LValueToRValue>
    | | | `-DeclRefExpr 0x14f828208 <col:7> 'int' contains-errors lvalue Var 0x14f828120 'axis' 'int'
    | | `-IntegerLiteral 0x14f828228 <col:14> 'int' 0
    | `-CompoundStmt 0x14f828418 <col:17, line:13:3>
    |   `-CompoundAssignOperator 0x14f8283e8 <line:12:5, col:32> 'int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |     |-DeclRefExpr 0x14f828280 <col:5> 'int' contains-errors lvalue Var 0x14f828120 'axis' 'int'
    |     `-CallExpr 0x14f8283c0 <col:13, col:32> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x14f828380 <col:13> 'int ()' Function 0x14f8282c8 'NumDimensions' 'int ()'
    |       `-RecoveryExpr 0x14f8283a0 <col:27> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x14f8285d0 <line:14:3, col:67> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14f828450 <col:3> 'int ()' Function 0x14f827e58 'TF_LITE_ENSURE' 'int ()'
    | |-RecoveryExpr 0x14f828470 <col:18> '<dependent type>' contains-errors lvalue
    | `-BinaryOperator 0x14f8285b0 <col:27, col:66> 'int' contains-errors '&&'
    |   |-BinaryOperator 0x14f8284e8 <col:27, col:32> 'int' contains-errors '<='
    |   | |-IntegerLiteral 0x14f828490 <col:27> 'int' 0
    |   | `-ImplicitCastExpr 0x14f8284d0 <col:32> 'int' contains-errors <LValueToRValue>
    |   |   `-DeclRefExpr 0x14f8284b0 <col:32> 'int' contains-errors lvalue Var 0x14f828120 'axis' 'int'
    |   `-BinaryOperator 0x14f828590 <col:40, col:66> 'int' contains-errors '<'
    |     |-DeclRefExpr 0x14f828508 <col:40> 'int' contains-errors lvalue Var 0x14f828120 'axis' 'int'
    |     `-CallExpr 0x14f828568 <col:47, col:66> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x14f828528 <col:47> 'int ()' Function 0x14f8282c8 'NumDimensions' 'int ()'
    |       `-RecoveryExpr 0x14f828548 <col:61> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14f82b1b0 <line:15:3, line:21:3>
    | |-BinaryOperator 0x14f82aea0 <line:15:7, line:17:53> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x14f82ae40 <line:15:7, line:17:22> 'int' contains-errors '&&'
    | | | |-BinaryOperator 0x14f82ade0 <line:15:7, line:16:53> 'int' contains-errors '&&'
    | | | | |-BinaryOperator 0x14f82ad80 <line:15:7, line:16:22> 'int' contains-errors '&&'
    | | | | | |-BinaryOperator 0x14f82ad20 <line:15:7, col:53> 'int' contains-errors '&&'
    | | | | | | |-BinaryOperator 0x14f82acc0 <col:7, col:22> 'int' contains-errors '!='
    | | | | | | | |-CXXDependentScopeMemberExpr 0x14f828620 <col:7, col:14> '<dependent type>' contains-errors lvalue ->type
    | | | | | | | | `-RecoveryExpr 0x14f828600 <col:7> '<dependent type>' contains-errors lvalue
    | | | | | | | `-RecoveryExpr 0x14f82aca0 <col:22> '<dependent type>' contains-errors lvalue
    | | | | | | `-BinaryOperator 0x14f82ad00 <col:38, col:53> 'int' contains-errors '!='
    | | | | | |   |-CXXDependentScopeMemberExpr 0x14f8286c0 <col:38, col:45> '<dependent type>' contains-errors lvalue ->type
    | | | | | |   | `-RecoveryExpr 0x14f8286a0 <col:38> '<dependent type>' contains-errors lvalue
    | | | | | |   `-RecoveryExpr 0x14f82ace0 <col:53> '<dependent type>' contains-errors lvalue
    | | | | | `-BinaryOperator 0x14f82ad60 <line:16:7, col:22> 'int' contains-errors '!='
    | | | | |   |-CXXDependentScopeMemberExpr 0x14f828780 <col:7, col:14> '<dependent type>' contains-errors lvalue ->type
    | | | | |   | `-RecoveryExpr 0x14f828760 <col:7> '<dependent type>' contains-errors lvalue
    | | | | |   `-RecoveryExpr 0x14f82ad40 <col:22> '<dependent type>' contains-errors lvalue
    | | | | `-BinaryOperator 0x14f82adc0 <col:38, col:53> 'int' contains-errors '!='
    | | | |   |-CXXDependentScopeMemberExpr 0x14f828840 <col:38, col:45> '<dependent type>' contains-errors lvalue ->type
    | | | |   | `-RecoveryExpr 0x14f828820 <col:38> '<dependent type>' contains-errors lvalue
    | | | |   `-RecoveryExpr 0x14f82ada0 <col:53> '<dependent type>' contains-errors lvalue
    | | | `-BinaryOperator 0x14f82ae20 <line:17:7, col:22> 'int' contains-errors '!='
    | | |   |-CXXDependentScopeMemberExpr 0x14f828900 <col:7, col:14> '<dependent type>' contains-errors lvalue ->type
    | | |   | `-RecoveryExpr 0x14f8288e0 <col:7> '<dependent type>' contains-errors lvalue
    | | |   `-RecoveryExpr 0x14f82ae00 <col:22> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x14f82ae80 <col:38, col:53> 'int' contains-errors '!='
    | |   |-CXXDependentScopeMemberExpr 0x14f82ac00 <col:38, col:45> '<dependent type>' contains-errors lvalue ->type
    | |   | `-RecoveryExpr 0x14f8289a0 <col:38> '<dependent type>' contains-errors lvalue
    | |   `-RecoveryExpr 0x14f82ae60 <col:53> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x14f82b198 <col:66, line:21:3>
    |   `-CallExpr 0x14f82b160 <line:18:5, line:19:56> '<dependent type>' contains-errors
    |     |-CXXDependentScopeMemberExpr 0x14f82af08 <line:18:5, col:14> '<dependent type>' contains-errors lvalue ->ReportError
    |     | `-RecoveryExpr 0x14f82aee0 <col:5> '<dependent type>' contains-errors lvalue
    |     |   `-DeclRefExpr 0x14f82aec0 <col:5> 'int *' lvalue ParmVar 0x14f80dd28 'context' 'int *'
    |     |-RecoveryExpr 0x14f82af50 <col:26> '<dependent type>' contains-errors lvalue
    |     |-StringLiteral 0x14f82afb0 <col:35> 'char[4]' lvalue "STR"
    |     `-CallExpr 0x14f82b138 <line:19:26, col:55> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x14f82b0b0 <col:26> 'int ()' Function 0x14f82aff8 'TfLiteTypeGetName' 'int ()'
    |       `-CXXDependentScopeMemberExpr 0x14f82b0f0 <col:44, col:51> '<dependent type>' contains-errors lvalue ->type
    |         `-RecoveryExpr 0x14f82b0d0 <col:44> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x14f82b2b8 <line:23:3, col:50>
    | `-VarDecl 0x14f82b1e8 <col:3, col:25> col:25 invalid input_shape 'const int *'
    |-DeclStmt 0x14f82b540 <line:27:3, col:12>
    | `-VarDecl 0x14f82b4b8 <col:3, col:11> col:7 used o 'int' cinit
    |   `-IntegerLiteral 0x14f82b520 <col:11> 'int' 0
    |-ForStmt 0x14f82b8d8 <line:28:3, line:32:3>
    | |-DeclStmt 0x14f82b5f8 <line:28:8, col:21>
    | | `-VarDecl 0x14f82b570 <col:8, col:20> col:12 used index 'int' cinit
    | |   `-IntegerLiteral 0x14f82b5d8 <col:20> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x14f82b698 <col:23, col:50> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x14f82b610 <col:23> 'int' lvalue Var 0x14f82b570 'index' 'int'
    | | `-CallExpr 0x14f82b670 <col:31, col:50> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x14f82b630 <col:31> 'int ()' Function 0x14f8282c8 'NumDimensions' 'int ()'
    | |   `-RecoveryExpr 0x14f82b650 <col:45> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x14f82b6d8 <col:53, col:55> 'int' prefix '++'
    | | `-DeclRefExpr 0x14f82b6b8 <col:55> 'int' lvalue Var 0x14f82b570 'index' 'int'
    | `-CompoundStmt 0x14f82b8c0 <col:62, line:32:3>
    |   `-IfStmt 0x14f82b8a0 <line:29:5, line:31:5>
    |     |-BinaryOperator 0x14f82b760 <line:29:9, col:18> 'int' contains-errors '!='
    |     | |-ImplicitCastExpr 0x14f82b730 <col:9> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x14f82b6f0 <col:9> 'int' lvalue Var 0x14f82b570 'index' 'int'
    |     | `-ImplicitCastExpr 0x14f82b748 <col:18> 'int' contains-errors <LValueToRValue>
    |     |   `-DeclRefExpr 0x14f82b710 <col:18> 'int' contains-errors lvalue Var 0x14f828120 'axis' 'int'
    |     `-CompoundStmt 0x14f82b890 <col:24, line:31:5>
    |-CallExpr 0x14f82ba90 <line:34:3, col:64> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14f82b910 <col:3> 'int ()' Function 0x14f80e138 'TF_LITE_ENSURE_EQ' 'int ()'
    | |-RecoveryExpr 0x14f82b930 <col:21> '<dependent type>' contains-errors lvalue
    | |-CXXDependentScopeMemberExpr 0x14f82b970 <col:30, col:36> '<dependent type>' contains-errors lvalue ->num
    | | `-RecoveryExpr 0x14f82b950 <col:30> '<dependent type>' contains-errors lvalue
    | `-ArraySubscriptExpr 0x14f82ba70 <col:41, col:63> '<dependent type>' contains-errors lvalue
    |   |-ImplicitCastExpr 0x14f82ba40 <col:41, col:54> '<dependent type>' contains-errors <LValueToRValue>
    |   | `-CXXDependentScopeMemberExpr 0x14f82b9d8 <col:41, col:54> '<dependent type>' contains-errors lvalue ->data
    |   |   `-RecoveryExpr 0x14f82b9b8 <col:41> '<dependent type>' contains-errors lvalue
    |   `-ImplicitCastExpr 0x14f82ba58 <col:59> 'int' contains-errors <LValueToRValue>
    |     `-DeclRefExpr 0x14f82ba20 <col:59> 'int' contains-errors lvalue Var 0x14f828120 'axis' 'int'
    `-ForStmt 0x14f829658 <line:35:3, line:46:3>
      |-DeclStmt 0x14f82bb68 <line:35:8, col:17>
      | `-VarDecl 0x14f82bae0 <col:8, col:16> col:12 used i 'int' cinit
      |   `-IntegerLiteral 0x14f82bb48 <col:16> 'int' 0
      |-<<<NULL>>>
      |-BinaryOperator 0x14f828e48 <col:19, col:29> 'int' contains-errors '<'
      | |-DeclRefExpr 0x14f82bb80 <col:19> 'int' lvalue Var 0x14f82bae0 'i' 'int'
      | `-CXXDependentScopeMemberExpr 0x14f828e00 <col:23, col:29> '<dependent type>' contains-errors lvalue ->num
      |   `-RecoveryExpr 0x14f82bba0 <col:23> '<dependent type>' contains-errors lvalue
      |-UnaryOperator 0x14f828e88 <col:34, col:36> 'int' prefix '++'
      | `-DeclRefExpr 0x14f828e68 <col:36> 'int' lvalue Var 0x14f82bae0 'i' 'int'
      `-CompoundStmt 0x14f829648 <col:39, line:46:3>
