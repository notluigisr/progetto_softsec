`-FunctionDecl 0x14f1281f8  line:1:16 invalid additive 'int *(int *)' static
  |-ParmVarDecl 0x14f128128 <col:25, col:35> col:35 invalid J 'int *'
  `-CompoundStmt 0x14f141ed0 <line:2:1, line:8:1>
    |-LabelStmt 0x14f141ca0 <line:4:1, line:5:76> 'loop'
    | `-IfStmt 0x14f141c80 <col:2, col:76>
    |   |-CallExpr 0x14f1285c0 <col:6, col:23> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x14f128568 <col:6> 'int ()' Function 0x14f1284b0 'jsP_accept' 'int ()'
    |   | |-RecoveryExpr 0x14f128588 <col:17> '<dependent type>' contains-errors lvalue
    |   | `-CharacterLiteral 0x14f1285a8 <col:20> 'int' 43
    |   `-CompoundStmt 0x14f141c68 <col:26, col:76>
    |     `-GotoStmt 0x14f141c50 <col:65, col:70> 'loop' 0x14f141c00
    |-IfStmt 0x14f141e68 <line:6:2, col:76>
    | |-CallExpr 0x14f141d18 <col:6, col:23> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x14f141cc0 <col:6> 'int ()' Function 0x14f1284b0 'jsP_accept' 'int ()'
    | | |-RecoveryExpr 0x14f141ce0 <col:17> '<dependent type>' contains-errors lvalue
    | | `-CharacterLiteral 0x14f141d00 <col:20> 'int' 45
    | `-CompoundStmt 0x14f141e50 <col:26, col:76>
    |   `-GotoStmt 0x14f141e38 <col:65, col:70> 'loop' 0x14f141c00
    `-ReturnStmt 0x14f141ec0 <line:7:2, col:9>
      `-RecoveryExpr 0x14f141ea0 <col:9> '<dependent type>' contains-errors lvalue
