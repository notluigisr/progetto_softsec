`-FunctionDecl 0x13d1282c8  line:1:1 invalid dwg_dup_handleref 'int (int *restrict, const int *restrict)'
  |-ParmVarDecl 0x13d128128 <col:20, col:39> col:39 invalid dwg 'int *restrict'
  |-ParmVarDecl 0x13d1281a8 <col:44, col:75> col:75 invalid ref 'const int *restrict'
  `-CompoundStmt 0x13d1418a0 <line:2:1, line:7:1>
    `-IfStmt 0x13d141870 <line:3:3, line:6:46> has_else
      |-RecoveryExpr 0x13d128380 <line:3:7> '<dependent type>' contains-errors lvalue
      |-ReturnStmt 0x13d128710 <line:4:5, col:80>
      | `-CallExpr 0x13d1286d0 <col:12, col:80> '<dependent type>' contains-errors
      |   |-DeclRefExpr 0x13d128500 <col:12> 'int ()' Function 0x13d128448 'dwg_add_handleref' 'int ()'
      |   |-RecoveryExpr 0x13d128520 <col:31> '<dependent type>' contains-errors lvalue
      |   |-CXXDependentScopeMemberExpr 0x13d1285a8 <col:36, col:51> '<dependent type>' contains-errors lvalue .code
      |   | `-CXXDependentScopeMemberExpr 0x13d128560 <col:36, col:41> '<dependent type>' contains-errors lvalue ->handleref
      |   |   `-RecoveryExpr 0x13d128540 <col:36> '<dependent type>' contains-errors lvalue
      |   |-CXXDependentScopeMemberExpr 0x13d128610 <col:57, col:62> '<dependent type>' contains-errors lvalue ->absolute_ref
      |   | `-RecoveryExpr 0x13d1285f0 <col:57> '<dependent type>' contains-errors lvalue
      |   `-RecoveryExpr 0x13d1286b0 <col:76> '<dependent type>' contains-errors lvalue
      `-ReturnStmt 0x13d141860 <line:6:5, col:46>
        `-CallExpr 0x13d141820 <col:12, col:46> '<dependent type>' contains-errors
          |-DeclRefExpr 0x13d128720 <col:12> 'int ()' Function 0x13d128448 'dwg_add_handleref' 'int ()'
          |-RecoveryExpr 0x13d128740 <col:31> '<dependent type>' contains-errors lvalue
          |-IntegerLiteral 0x13d128760 <col:36> 'int' 5
          |-IntegerLiteral 0x13d128780 <col:39> 'int' 0
          `-RecoveryExpr 0x13d141800 <col:42> '<dependent type>' contains-errors lvalue
