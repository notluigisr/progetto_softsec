`-FunctionDecl 0x1531283a8  line:2:21 invalid Create_Surface_Blended 'int *(int, int, int, int *)' static
  |-ParmVarDecl 0x1531280f0 <col:44, col:48> col:48 used width 'int'
  |-ParmVarDecl 0x153128170 <col:55, col:59> col:59 used height 'int'
  |-ParmVarDecl 0x1531281f0 <col:67, col:77> col:77 invalid fg 'int'
  |-ParmVarDecl 0x1531282a8 <col:81, col:89> col:89 referenced invalid color 'int *'
  `-CompoundStmt 0x153144150 <line:3:1, line:57:20>
    |-DeclStmt 0x153128718 <line:4:5, col:47>
    | `-VarDecl 0x153128488 <col:5, col:46> col:15 used alignment 'const int' cinit
    |   `-BinaryOperator 0x1531286f8 <col:27, col:46> 'int' '-'
    |     |-CallExpr 0x1531286b8 <col:27, col:42> 'int'
    |     | `-ImplicitCastExpr 0x1531286a0 <col:27> 'int (*)()' <FunctionToPointerDecay>
    |     |   `-DeclRefExpr 0x153128650 <col:27> 'int ()' Function 0x153128598 'Get_Alignement' 'int ()'
    |     `-IntegerLiteral 0x1531286d8 <col:46> 'int' 1
    |-BinaryOperator 0x153141a18 <line:9:5, col:47> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x153128780 <col:5> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x153128760 <col:5> 'int *' lvalue ParmVar 0x1531282a8 'color' 'int *'
    | `-BinaryOperator 0x1531419f8 <col:15, col:47> '<dependent type>' contains-errors '|'
    |   |-BinaryOperator 0x153141970 <col:15, col:40> '<dependent type>' contains-errors '|'
    |   | |-ParenExpr 0x153141888 <col:15, col:26> '<dependent type>' contains-errors
    |   | | `-BinaryOperator 0x153141868 <col:16, col:24> '<dependent type>' contains-errors '<<'
    |   | |   |-CXXDependentScopeMemberExpr 0x153141800 <col:16, col:19> '<dependent type>' contains-errors lvalue .r
    |   | |   | `-RecoveryExpr 0x1531287a8 <col:16> '<dependent type>' contains-errors lvalue
    |   | |   `-IntegerLiteral 0x153141848 <col:24> 'int' 16
    |   | `-ParenExpr 0x153141950 <col:30, col:40> '<dependent type>' contains-errors
    |   |   `-BinaryOperator 0x153141930 <col:31, col:39> '<dependent type>' contains-errors '<<'
    |   |     |-CXXDependentScopeMemberExpr 0x1531418c8 <col:31, col:34> '<dependent type>' contains-errors lvalue .g
    |   |     | `-RecoveryExpr 0x1531418a8 <col:31> '<dependent type>' contains-errors lvalue
    |   |     `-IntegerLiteral 0x153141910 <col:39> 'int' 8
    |   `-CXXDependentScopeMemberExpr 0x1531419b0 <col:44, col:47> '<dependent type>' contains-errors lvalue .b
    |     `-RecoveryExpr 0x153141990 <col:44> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x153141c68 <line:12:5, col:35> '<dependent type>' contains-errors '='
    | |-UnaryOperator 0x153141c10 <col:5, col:6> '<dependent type>' contains-errors prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x153141bf8 <col:6> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x153141a38 <col:6> '<dependent type>' contains-errors lvalue
    | `-BinaryOperator 0x153141c48 <col:14, col:35> '<dependent type>' contains-errors '|'
    |   |-RecoveryExpr 0x153141c28 <col:14> '<dependent type>' contains-errors lvalue
    |   `-ParenExpr 0x153141b48 <col:24, col:35> '<dependent type>' contains-errors
    |     `-BinaryOperator 0x153141b28 <col:25, col:33> '<dependent type>' contains-errors '<<'
    |       |-CXXDependentScopeMemberExpr 0x153141ac0 <col:25, col:28> '<dependent type>' contains-errors lvalue .a
    |       | `-RecoveryExpr 0x153141aa0 <col:25> '<dependent type>' contains-errors lvalue
    |       `-IntegerLiteral 0x153141b08 <col:33> 'int' 24
    `-IfStmt 0x153144130 <line:15:5, line:55:5>
      |-BinaryOperator 0x153141ce0 <line:15:9, col:18> 'int' '!='
      | |-ImplicitCastExpr 0x153141cc8 <col:9> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x153141c88 <col:9> 'int' lvalue ParmVar 0x1531280f0 'width' 'int'
      | `-IntegerLiteral 0x153141ca8 <col:18> 'int' 0
      `-CompoundStmt 0x1531440f0 <col:21, line:55:5>
        |-DeclStmt 0x153141e18 <line:18:9, col:27>
        | |-VarDecl 0x153141d18 <col:9, col:15> col:15 used pixels 'void *'
        | `-VarDecl 0x153141d98 <col:9, col:24> col:24 used ptr 'void *'
        |-IfStmt 0x153142070 <line:24:9, line:27:9>
        | |-BinaryOperator 0x153142040 <line:24:13, col:32> 'int' contains-errors '||'
        | | |-BinaryOperator 0x153141fc0 <col:13, col:20> 'int' contains-errors '<'
        | | | |-RecoveryExpr 0x153141fa0 <col:13> '<dependent type>' contains-errors lvalue
        | | | `-IntegerLiteral 0x153141ef0 <col:20> 'int' 0
        | | `-BinaryOperator 0x153142020 <col:25, col:32> 'int' contains-errors '>'
        | |   |-RecoveryExpr 0x153141fe0 <col:25> '<dependent type>' contains-errors lvalue
        | |   `-RecoveryExpr 0x153142000 <col:32> '<dependent type>' contains-errors lvalue
        | `-CompoundStmt 0x153142060 <col:48, line:27:9>
        |-IfStmt 0x153142200 <line:30:9, line:32:9>
        | |-RecoveryExpr 0x1531421d0 <line:30:13, col:20> '_Bool' contains-errors
        | `-CompoundStmt 0x1531421f0 <col:26, line:32:9>
        |-BinaryOperator 0x1531423e8 <line:36:9, col:33> 'void *' '='
        | |-ArraySubscriptExpr 0x153142390 <col:9, col:29> 'void *' lvalue
        | | |-ParenExpr 0x153142338 <col:9, col:25> 'void **'
        | | | `-CStyleCastExpr 0x153142310 <col:10, col:19> 'void **' <BitCast>
        | | |   `-ImplicitCastExpr 0x1531422f8 <col:19> 'void *' <LValueToRValue> part_of_explicit_cast
        | | |     `-DeclRefExpr 0x153142290 <col:19> 'void *' lvalue Var 0x153141d18 'pixels' 'void *'
        | | `-UnaryOperator 0x153142378 <col:27, col:28> 'int' prefix '-'
        | |   `-IntegerLiteral 0x153142358 <col:28> 'int' 1
        | `-ImplicitCastExpr 0x1531423d0 <col:33> 'void *' <LValueToRValue>
        |   `-DeclRefExpr 0x1531423b0 <col:33> 'void *' lvalue Var 0x153141d98 'ptr' 'void *'
        |-IfStmt 0x153142738 <line:39:9, line:42:9>
        | |-RecoveryExpr 0x153142588 <line:39:13, col:24> '_Bool' contains-errors
        | `-CompoundStmt 0x153142720 <col:30, line:42:9>
        |   `-CallExpr 0x1531426e0 <line:40:13, col:25> 'int'
        |     |-ImplicitCastExpr 0x1531426c8 <col:13> 'int (*)()' <FunctionToPointerDecay>
        |     | `-DeclRefExpr 0x153142688 <col:13> 'int ()' Function 0x1531425d0 'SDL_free' 'int ()'
        |     `-ImplicitCastExpr 0x153142708 <col:22> 'void *' <LValueToRValue>
        |       `-DeclRefExpr 0x1531426a8 <col:22> 'void *' lvalue Var 0x153141d98 'ptr' 'void *'
        `-IfStmt 0x1531440d0 <line:52:9, line:54:9>
          |-RecoveryExpr 0x153143fa0 <line:52:13, col:21> '_Bool' contains-errors
          `-CompoundStmt 0x1531440c0 <col:39, line:54:9>
