`-FunctionDecl 0x135928258  line:1:11 invalid parseKey 'char *(char *, int)'
  |-ParmVarDecl 0x1359280d8 <col:21, col:27> col:27 used ptr 'char *'
  |-ParmVarDecl 0x135928170 <col:32, <invalid sloc>> col:40 invalid 'int'
  `-CompoundStmt 0x1359421c0 <line:2:5, line:27:5>
    |-DeclStmt 0x135928388 <line:3:9, col:15>
    | `-VarDecl 0x135928320 <col:9, col:14> col:14 used c 'char'
    |-DeclStmt 0x135928530 <line:4:9, col:41>
    | |-VarDecl 0x1359283b8 <col:9, col:30> col:15 used endptr 'char *' cinit
    | | `-BinaryOperator 0x135928478 <col:24, col:30> 'char *' '-'
    | |   |-ImplicitCastExpr 0x135928460 <col:24> 'char *' <LValueToRValue>
    | |   | `-DeclRefExpr 0x135928420 <col:24> 'char *' lvalue ParmVar 0x1359280d8 'ptr' 'char *'
    | |   `-IntegerLiteral 0x135928440 <col:30> 'int' 1
    | `-VarDecl 0x1359284b0 <col:9, col:34> col:34 used saveptr 'char *'
    |-IfStmt 0x135941888 <line:6:9, line:7:39>
    | |-BinaryOperator 0x1359285e0 <line:6:13, col:21> 'int' '=='
    | | |-ImplicitCastExpr 0x1359285c8 <col:13, col:14> 'int' <IntegralCast>
    | | | `-ImplicitCastExpr 0x1359285b0 <col:13, col:14> 'char' <LValueToRValue>
    | | |   `-UnaryOperator 0x135928580 <col:13, col:14> 'char' lvalue prefix '*' cannot overflow
    | | |     `-ImplicitCastExpr 0x135928568 <col:14> 'char *' <LValueToRValue>
    | | |       `-DeclRefExpr 0x135928548 <col:14> 'char *' lvalue ParmVar 0x1359280d8 'ptr' 'char *'
    | | `-CharacterLiteral 0x135928598 <col:21> 'int' 45
    | `-CallExpr 0x135941848 <line:7:13, col:39> 'int'
    |   |-ImplicitCastExpr 0x135941830 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x135928760 <col:13> 'int ()' Function 0x1359286a8 'CV_PARSE_ERROR_CPP' 'int ()'
    |   `-ImplicitCastExpr 0x135941870 <col:33> 'char *' <ArrayToPointerDecay>
    |     `-StringLiteral 0x1359287c0 <col:33> 'char[4]' lvalue "STR"
    |-DoStmt 0x135941b88 <line:9:9, line:10:42>
    | |-BinaryOperator 0x135941930 <line:9:12, col:19> 'char' '='
    | | |-DeclRefExpr 0x1359418a8 <col:12> 'char' lvalue Var 0x135928320 'c' 'char'
    | | `-ImplicitCastExpr 0x135941918 <col:16, col:19> 'char' <LValueToRValue>
    | |   `-UnaryOperator 0x135941900 <col:16, col:19> 'char' lvalue prefix '*' cannot overflow
    | |     `-UnaryOperator 0x1359418e8 <col:17, col:19> 'char *' prefix '++'
    | |       `-DeclRefExpr 0x1359418c8 <col:19> 'char *' lvalue Var 0x1359283b8 'endptr' 'char *'
    | `-BinaryOperator 0x135941b68 <line:10:16, col:38> 'int' '&&'
    |   |-CallExpr 0x135941a88 <col:16, col:28> 'int'
    |   | |-ImplicitCastExpr 0x135941a70 <col:16> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x135941a30 <col:16> 'int ()' Function 0x135941978 'cv_isprint' 'int ()'
    |   | `-ImplicitCastExpr 0x135941ac8 <col:27> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x135941ab0 <col:27> 'char' <LValueToRValue>
    |   |     `-DeclRefExpr 0x135941a50 <col:27> 'char' lvalue Var 0x135928320 'c' 'char'
    |   `-BinaryOperator 0x135941b48 <col:33, col:38> 'int' '!='
    |     |-ImplicitCastExpr 0x135941b30 <col:33> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x135941b18 <col:33> 'char' <LValueToRValue>
    |     |   `-DeclRefExpr 0x135941ae0 <col:33> 'char' lvalue Var 0x135928320 'c' 'char'
    |     `-CharacterLiteral 0x135941b00 <col:38> 'int' 58
    |-IfStmt 0x135941cc8 <line:12:9, line:13:39>
    | |-BinaryOperator 0x135941c10 <line:12:13, col:18> 'int' '!='
    | | |-ImplicitCastExpr 0x135941bf8 <col:13> 'int' <IntegralCast>
    | | | `-ImplicitCastExpr 0x135941be0 <col:13> 'char' <LValueToRValue>
    | | |   `-DeclRefExpr 0x135941ba8 <col:13> 'char' lvalue Var 0x135928320 'c' 'char'
    | | `-CharacterLiteral 0x135941bc8 <col:18> 'int' 58
    | `-CallExpr 0x135941c88 <line:13:13, col:39> 'int'
    |   |-ImplicitCastExpr 0x135941c70 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x135941c30 <col:13> 'int ()' Function 0x1359286a8 'CV_PARSE_ERROR_CPP' 'int ()'
    |   `-ImplicitCastExpr 0x135941cb0 <col:33> 'char *' <ArrayToPointerDecay>
    |     `-StringLiteral 0x135941c50 <col:33> 'char[4]' lvalue "STR"
    |-BinaryOperator 0x135941d80 <line:15:9, col:28> 'char *' '='
    | |-DeclRefExpr 0x135941ce8 <col:9> 'char *' lvalue Var 0x1359284b0 'saveptr' 'char *'
    | `-BinaryOperator 0x135941d60 <col:19, col:28> 'char *' '+'
    |   |-ImplicitCastExpr 0x135941d48 <col:19> 'char *' <LValueToRValue>
    |   | `-DeclRefExpr 0x135941d08 <col:19> 'char *' lvalue Var 0x1359283b8 'endptr' 'char *'
    |   `-IntegerLiteral 0x135941d28 <col:28> 'int' 1
    |-DoStmt 0x135941ed0 <line:16:9, line:17:25>
    | |-BinaryOperator 0x135941e28 <line:16:12, col:19> 'char' '='
    | | |-DeclRefExpr 0x135941da0 <col:12> 'char' lvalue Var 0x135928320 'c' 'char'
    | | `-ImplicitCastExpr 0x135941e10 <col:16, col:19> 'char' <LValueToRValue>
    | |   `-UnaryOperator 0x135941df8 <col:16, col:19> 'char' lvalue prefix '*' cannot overflow
    | |     `-UnaryOperator 0x135941de0 <col:17, col:19> 'char *' prefix '--'
    | |       `-DeclRefExpr 0x135941dc0 <col:19> 'char *' lvalue Var 0x1359283b8 'endptr' 'char *'
    | `-BinaryOperator 0x135941eb0 <line:17:16, col:21> 'int' '=='
    |   |-ImplicitCastExpr 0x135941e98 <col:16> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x135941e80 <col:16> 'char' <LValueToRValue>
    |   |   `-DeclRefExpr 0x135941e48 <col:16> 'char' lvalue Var 0x135928320 'c' 'char'
    |   `-CharacterLiteral 0x135941e68 <col:21> 'int' 32
    |-UnaryOperator 0x135941f10 <line:19:9, col:11> 'char *' prefix '++'
    | `-DeclRefExpr 0x135941ef0 <col:11> 'char *' lvalue Var 0x1359283b8 'endptr' 'char *'
    |-IfStmt 0x135942050 <line:20:9, line:21:39>
    | |-BinaryOperator 0x135941f98 <line:20:13, col:23> 'int' '=='
    | | |-ImplicitCastExpr 0x135941f68 <col:13> 'char *' <LValueToRValue>
    | | | `-DeclRefExpr 0x135941f28 <col:13> 'char *' lvalue Var 0x1359283b8 'endptr' 'char *'
    | | `-ImplicitCastExpr 0x135941f80 <col:23> 'char *' <LValueToRValue>
    | |   `-DeclRefExpr 0x135941f48 <col:23> 'char *' lvalue ParmVar 0x1359280d8 'ptr' 'char *'
    | `-CallExpr 0x135942010 <line:21:13, col:39> 'int'
    |   |-ImplicitCastExpr 0x135941ff8 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x135941fb8 <col:13> 'int ()' Function 0x1359286a8 'CV_PARSE_ERROR_CPP' 'int ()'
    |   `-ImplicitCastExpr 0x135942038 <col:33> 'char *' <ArrayToPointerDecay>
    |     `-StringLiteral 0x135941fd8 <col:33> 'char[4]' lvalue "STR"
    |-BinaryOperator 0x135942158 <line:24:9, col:15> 'char *' '='
    | |-DeclRefExpr 0x135942100 <col:9> 'char *' lvalue ParmVar 0x1359280d8 'ptr' 'char *'
    | `-ImplicitCastExpr 0x135942140 <col:15> 'char *' <LValueToRValue>
    |   `-DeclRefExpr 0x135942120 <col:15> 'char *' lvalue Var 0x1359284b0 'saveptr' 'char *'
    `-ReturnStmt 0x1359421b0 <line:26:9, col:16>
      `-ImplicitCastExpr 0x135942198 <col:16> 'char *' <LValueToRValue>
        `-DeclRefExpr 0x135942178 <col:16> 'char *' lvalue ParmVar 0x1359280d8 'ptr' 'char *'
