`-FunctionDecl 0x15280dee8  line:1:1 invalid xmlValidateOneCdataElement 'int (int, int, int)'
  |-ParmVarDecl 0x15280dcf0 <col:28, col:44> col:44 referenced invalid ctxt 'int'
  |-ParmVarDecl 0x15280dd70 <col:50, col:60> col:60 invalid doc 'int'
  |-ParmVarDecl 0x15280ddf0 <line:2:28, col:39> col:39 invalid elem 'int'
  `-CompoundStmt 0x152828ae0 <col:45, line:50:1>
    |-DeclStmt 0x15280e048 <line:3:5, col:16>
    | `-VarDecl 0x15280dfc0 <col:5, col:15> col:9 used ret 'int' cinit
    |   `-IntegerLiteral 0x15280e028 <col:15> 'int' 1
    |-IfStmt 0x15280e278 <line:6:5, line:8:10>
    | |-RecoveryExpr 0x15280e208 <line:6:9, line:7:40> '_Bool' contains-errors
    | `-ReturnStmt 0x15280e268 <line:8:2, col:10>
    |   `-ParenExpr 0x15280e248 <col:8, col:10> 'int'
    |     `-IntegerLiteral 0x15280e228 <col:9> 'int' 0
    |-WhileStmt 0x1528285b8 <line:13:5, line:41:5>
    | |-BinaryOperator 0x15280e3a8 <line:13:12, col:19> 'int' contains-errors '!='
    | | |-RecoveryExpr 0x15280e368 <col:12> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x15280e388 <col:19> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x152828598 <col:25, line:41:5>
    |   |-SwitchStmt 0x152827ec8 <line:14:2, line:32:2>
    |   | |-CXXDependentScopeMemberExpr 0x152827e80 <line:14:10, col:15> '<dependent type>' contains-errors lvalue ->type
    |   | | `-RecoveryExpr 0x152827e60 <col:10> '<dependent type>' contains-errors lvalue
    |   | `-CompoundStmt 0x152828378 <col:21, line:32:2>
    |   |   |-IfStmt 0x152828260 <line:17:3, line:22:3>
    |   |   | |-RecoveryExpr 0x152828080 <line:17:7, line:18:39> '_Bool' contains-errors
    |   |   | `-CompoundStmt 0x152828248 <col:42, line:22:3>
    |   |   |   `-ContinueStmt 0x152828240 <line:21:7>
    |   |   |-BreakStmt 0x152828280 <line:23:3>
    |   |   |-BreakStmt 0x152828288 <line:28:3>
    |   |   |-DefaultStmt 0x1528282f0 <line:29:6, line:30:9>
    |   |   | `-BinaryOperator 0x1528282d0 <col:3, col:9> 'int' '='
    |   |   |   |-DeclRefExpr 0x152828290 <col:3> 'int' lvalue Var 0x15280dfc0 'ret' 'int'
    |   |   |   `-IntegerLiteral 0x1528282b0 <col:9> 'int' 0
    |   |   `-GotoStmt 0x152828360 <line:31:3, col:8> 'done' 0x152828310
    |   `-WhileStmt 0x152828578 <line:35:2, line:40:2>
    |     |-RecoveryExpr 0x1528283b0 <line:35:9, col:16> '_Bool' contains-errors
    |     `-CompoundStmt 0x152828560 <col:22, line:40:2>
    |       `-IfStmt 0x152828540 <line:37:6, line:38:3>
    |         |-RecoveryExpr 0x152828518 <line:37:10, col:17> '_Bool' contains-errors
    |         `-BreakStmt 0x152828538 <line:38:3>
    |-LabelStmt 0x1528286a8 <line:42:1, line:43:21> 'done'
    | `-BinaryOperator 0x152828688 <col:5, col:21> '<dependent type>' contains-errors '='
    |   |-CXXDependentScopeMemberExpr 0x152828620 <col:5, col:11> '<dependent type>' contains-errors lvalue ->nodeMax
    |   | `-RecoveryExpr 0x1528285f8 <col:5> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x1528285d8 <col:5> 'int' lvalue ParmVar 0x15280dcf0 'ctxt' 'int'
    |   `-IntegerLiteral 0x152828668 <col:21> 'int' 0
    |-BinaryOperator 0x152828778 <line:44:5, col:20> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x152828710 <col:5, col:11> '<dependent type>' contains-errors lvalue ->nodeNr
    | | `-RecoveryExpr 0x1528286e8 <col:5> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x1528286c8 <col:5> 'int' lvalue ParmVar 0x15280dcf0 'ctxt' 'int'
    | `-IntegerLiteral 0x152828758 <col:20> 'int' 0
    |-IfStmt 0x152828a58 <line:45:5, line:48:5>
    | |-RecoveryExpr 0x152828800 <line:45:9, col:26> '_Bool' contains-errors
    | `-CompoundStmt 0x152828a40 <col:32, line:48:5>
    |   `-CallExpr 0x152828988 <line:46:2, col:23> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x152828900 <col:2> 'int ()' Function 0x152828848 'xmlFree' 'int ()'
    |     `-CXXDependentScopeMemberExpr 0x152828940 <col:10, col:16> '<dependent type>' contains-errors lvalue ->nodeTab
    |       `-RecoveryExpr 0x152828920 <col:10> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x152828ad0 <line:49:5, col:15>
      `-ImplicitCastExpr 0x152828ab8 <col:11, col:15> 'int' <LValueToRValue>
        `-ParenExpr 0x152828a98 <col:11, col:15> 'int' lvalue
          `-DeclRefExpr 0x152828a78 <col:12> 'int' lvalue Var 0x15280dfc0 'ret' 'int'
