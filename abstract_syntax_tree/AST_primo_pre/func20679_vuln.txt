`-FunctionDecl 0x12a00ddf8  line:1:12 invalid gset_decode_next_bit 'int (int *)' static
  |-ParmVarDecl 0x12a00dd28 <col:33, col:47> col:47 referenced invalid decoder 'int *'
  `-CompoundStmt 0x12a00e3e0 <line:2:1, line:10:1>
    `-IfStmt 0x12a00e1e0 <line:3:5, line:8:5>
      |-BinaryOperator 0x12a00df48 <line:3:9, col:27> 'int' contains-errors '>='
      | |-UnaryOperator 0x12a00df10 <col:9, col:20> '<dependent type>' contains-errors prefix '++' cannot overflow
      | | `-CXXDependentScopeMemberExpr 0x12a00dec8 <col:11, col:20> '<dependent type>' contains-errors lvalue ->bit
      | |   `-RecoveryExpr 0x12a00dea8 <col:11> '<dependent type>' contains-errors lvalue
      | `-IntegerLiteral 0x12a00df28 <col:27> 'int' 8
      `-CompoundStmt 0x12a00e1c0 <col:30, line:8:5>
        |-IfStmt 0x12a00e0d0 <line:4:9, line:6:9>
        | |-BinaryOperator 0x12a00e050 <line:4:13, col:43> 'int' contains-errors '>='
        | | |-UnaryOperator 0x12a00dfd0 <col:13, col:24> '<dependent type>' contains-errors prefix '++' cannot overflow
        | | | `-CXXDependentScopeMemberExpr 0x12a00df88 <col:15, col:24> '<dependent type>' contains-errors lvalue ->offset
        | | |   `-RecoveryExpr 0x12a00df68 <col:15> '<dependent type>' contains-errors lvalue
        | | `-CXXDependentScopeMemberExpr 0x12a00e008 <col:34, col:43> '<dependent type>' contains-errors lvalue ->datalen
        | |   `-RecoveryExpr 0x12a00dfe8 <col:34> '<dependent type>' contains-errors lvalue
        | `-CompoundStmt 0x12a00e0b8 <col:52, line:6:9>
        |   `-ReturnStmt 0x12a00e0a8 <line:5:13, col:21>
        |     `-UnaryOperator 0x12a00e090 <col:20, col:21> 'int' prefix '-'
        |       `-IntegerLiteral 0x12a00e070 <col:21> 'int' 1
        `-BinaryOperator 0x12a00e1a0 <line:7:9, col:24> '<dependent type>' contains-errors '='
          |-CXXDependentScopeMemberExpr 0x12a00e138 <col:9, col:18> '<dependent type>' contains-errors lvalue ->bit
          | `-RecoveryExpr 0x12a00e110 <col:9> '<dependent type>' contains-errors lvalue
          |   `-DeclRefExpr 0x12a00e0f0 <col:9> 'int *' lvalue ParmVar 0x12a00dd28 'decoder' 'int *'
          `-IntegerLiteral 0x12a00e180 <col:24> 'int' 0
