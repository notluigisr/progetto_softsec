`-FunctionDecl 0x124918fc8  line:1:1 invalid _gnutls_x509_pk_to_oid 'int (int)'
  |-ParmVarDecl 0x124918ef0 <col:25, col:47> col:47 invalid algorithm 'int'
  `-CompoundStmt 0x127008ee0 <line:2:1, line:7:1>
    |-DeclStmt 0x124919130 <line:3:3, col:25>
    | `-VarDecl 0x124919090 <col:3, col:21> col:15 used ret 'const char *' cinit
    |   `-RecoveryExpr 0x124919110 <col:21> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x124919410 <line:5:3, col:35> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1249192a0 <col:3> 'int ()' Function 0x1249191e8 'GNUTLS_PK_ALG_LOOP' 'int ()'
    | `-BinaryOperator 0x1249193f0 <col:23, col:32> 'const char *' contains-errors '='
    |   |-DeclRefExpr 0x1249192c0 <col:23> 'const char *' contains-errors lvalue Var 0x124919090 'ret' 'const char *'
    |   `-CXXDependentScopeMemberExpr 0x1249193a8 <col:29, col:32> '<dependent type>' contains-errors lvalue ->oid
    |     `-RecoveryExpr 0x124919388 <col:29> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x127008ed0 <line:6:3, col:10>
      `-ImplicitCastExpr 0x124919470 <col:10> 'int' contains-errors <PointerToIntegral>
        `-ImplicitCastExpr 0x124919458 <col:10> 'const char *' contains-errors <LValueToRValue>
          `-DeclRefExpr 0x124919438 <col:10> 'const char *' contains-errors lvalue Var 0x124919090 'ret' 'const char *'
