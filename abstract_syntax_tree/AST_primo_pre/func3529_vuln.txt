`-FunctionDecl 0x152928288  line:1:5 invalid ssl_print_sigalgs 'int (int *, int *)'
  |-ParmVarDecl 0x152928128 <col:23, col:28> col:28 invalid out 'int *'
  |-ParmVarDecl 0x1529281a8 <col:33, col:38> col:38 invalid s 'int *'
  `-CompoundStmt 0x15300a8f8 <line:2:2, line:35:2>
    |-DeclStmt 0x152928458 <line:3:2, col:13>
    | |-VarDecl 0x152928358 <col:2, col:6> col:6 used i 'int'
    | `-VarDecl 0x1529283d8 <col:2, col:9> col:9 used nsig 'int'
    |-BinaryOperator 0x153008258 <line:4:2, col:60> 'int' contains-errors '='
    | |-DeclRefExpr 0x152928470 <col:2> 'int' lvalue Var 0x1529283d8 'nsig' 'int'
    | `-CallExpr 0x153008200 <col:9, col:60> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1529285f0 <col:9> 'int ()' Function 0x152928538 'SSL_get_sigalgs' 'int ()'
    |   |-RecoveryExpr 0x152928610 <col:25> '<dependent type>' contains-errors lvalue
    |   |-UnaryOperator 0x152928650 <col:28, col:29> 'int' prefix '-'
    |   | `-IntegerLiteral 0x152928630 <col:29> 'int' 1
    |   |-RecoveryExpr 0x152928758 <col:32> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x152928778 <col:38> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x152928798 <col:44> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x1529287b8 <col:50> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x1529287d8 <col:56> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x153008320 <line:5:2, line:6:10>
    | |-BinaryOperator 0x1530082d0 <line:5:6, col:14> 'int' '=='
    | | |-ImplicitCastExpr 0x1530082b8 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x153008278 <col:6> 'int' lvalue Var 0x1529283d8 'nsig' 'int'
    | | `-IntegerLiteral 0x153008298 <col:14> 'int' 0
    | `-ReturnStmt 0x153008310 <line:6:3, col:10>
    |   `-IntegerLiteral 0x1530082f0 <col:10> 'int' 1
    |-CallExpr 0x1530084c0 <line:8:2, col:21> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x153008420 <col:2> 'int ()' Function 0x153008368 'BIO_puts' 'int ()'
    | |-RecoveryExpr 0x153008440 <col:11> '<dependent type>' contains-errors lvalue
    | `-StringLiteral 0x1530084a0 <col:16> 'char[4]' lvalue "STR"
    |-ForStmt 0x15300a800 <line:9:2, line:32:3>
    | |-BinaryOperator 0x153008530 <line:9:7, col:11> 'int' '='
    | | |-DeclRefExpr 0x1530084f0 <col:7> 'int' lvalue Var 0x152928358 'i' 'int'
    | | `-IntegerLiteral 0x153008510 <col:11> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x1530085c0 <col:14, col:18> 'int' '<'
    | | |-ImplicitCastExpr 0x153008590 <col:14> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x153008550 <col:14> 'int' lvalue Var 0x152928358 'i' 'int'
    | | `-ImplicitCastExpr 0x1530085a8 <col:18> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x153008570 <col:18> 'int' lvalue Var 0x1529283d8 'nsig' 'int'
    | |-UnaryOperator 0x153008600 <col:24, col:25> 'int' postfix '++'
    | | `-DeclRefExpr 0x1530085e0 <col:24> 'int' lvalue Var 0x152928358 'i' 'int'
    | `-CompoundStmt 0x15300a7b0 <line:10:3, line:32:3>
    |   |-DeclStmt 0x153008730 <line:11:3, col:25>
    |   | |-VarDecl 0x153008630 <col:3, col:7> col:7 used hash_nid 'int'
    |   | `-VarDecl 0x1530086b0 <col:3, col:17> col:17 used sign_nid 'int'
    |   |-DeclStmt 0x153008860 <line:12:3, col:29>
    |   | |-VarDecl 0x153008760 <col:3, col:17> col:17 used rhash 'unsigned char'
    |   | `-VarDecl 0x1530087e0 <col:3, col:24> col:24 used rsign 'unsigned char'
    |   |-DeclStmt 0x153008930 <line:13:3, col:26>
    |   | `-VarDecl 0x153008890 <col:3, col:22> col:15 used sstr 'const char *' cinit
    |   |   `-RecoveryExpr 0x153008910 <col:22> '<dependent type>' contains-errors lvalue
    |   |-CallExpr 0x153008b48 <line:14:3, line:15:22> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x153008948 <line:14:3> 'int ()' Function 0x152928538 'SSL_get_sigalgs' 'int ()'
    |   | |-RecoveryExpr 0x153008968 <col:19> '<dependent type>' contains-errors lvalue
    |   | |-DeclRefExpr 0x153008988 <col:22> 'int' lvalue Var 0x152928358 'i' 'int'
    |   | |-UnaryOperator 0x1530089c8 <col:25, col:26> 'int *' prefix '&' cannot overflow
    |   | | `-DeclRefExpr 0x1530089a8 <col:26> 'int' lvalue Var 0x1530086b0 'sign_nid' 'int'
    |   | |-UnaryOperator 0x153008a00 <col:36, col:37> 'int *' prefix '&' cannot overflow
    |   | | `-DeclRefExpr 0x1530089e0 <col:37> 'int' lvalue Var 0x153008630 'hash_nid' 'int'
    |   | |-RecoveryExpr 0x153008b28 <col:47> '<dependent type>' contains-errors lvalue
    |   | |-UnaryOperator 0x153008a80 <line:15:8, col:9> 'unsigned char *' prefix '&' cannot overflow
    |   | | `-DeclRefExpr 0x153008a30 <col:9> 'unsigned char' lvalue Var 0x1530087e0 'rsign' 'unsigned char'
    |   | `-UnaryOperator 0x153008ab8 <col:16, col:17> 'unsigned char *' prefix '&' cannot overflow
    |   |   `-DeclRefExpr 0x153008a98 <col:17> 'unsigned char' lvalue Var 0x153008760 'rhash' 'unsigned char'
    |   |-IfStmt 0x153008c68 <line:16:3, line:17:23>
    |   | |-ImplicitCastExpr 0x153008bc0 <line:16:7> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x153008ba0 <col:7> 'int' lvalue Var 0x152928358 'i' 'int'
    |   | `-CallExpr 0x153008c38 <line:17:4, col:23> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x153008bd8 <col:4> 'int ()' Function 0x153008368 'BIO_puts' 'int ()'
    |   |   |-RecoveryExpr 0x153008bf8 <col:13> '<dependent type>' contains-errors lvalue
    |   |   `-StringLiteral 0x153008c18 <col:18> 'char[4]' lvalue "STR"
    |   |-IfStmt 0x153009050 <line:18:3, line:23:11> has_else
    |   | |-BinaryOperator 0x153008d00 <line:18:7, col:19> 'int' contains-errors '=='
    |   | | |-DeclRefExpr 0x153008c88 <col:7> 'int' lvalue Var 0x1530086b0 'sign_nid' 'int'
    |   | | `-RecoveryExpr 0x153008ce0 <col:19> '<dependent type>' contains-errors lvalue
    |   | |-BinaryOperator 0x153008d90 <line:19:4, col:11> 'const char *' contains-errors '='
    |   | | |-DeclRefExpr 0x153008d20 <col:4> 'const char *' contains-errors lvalue Var 0x153008890 'sstr' 'const char *'
    |   | | `-ImplicitCastExpr 0x153008d78 <col:11> 'const char *' <NoOp>
    |   | |   `-ImplicitCastExpr 0x153008d60 <col:11> 'char *' <ArrayToPointerDecay>
    |   | |     `-StringLiteral 0x153008d40 <col:11> 'char[4]' lvalue "STR"
    |   | `-IfStmt 0x153009020 <line:20:8, line:23:11> has_else
    |   |   |-BinaryOperator 0x153008e28 <line:20:11, col:23> 'int' contains-errors '=='
    |   |   | |-DeclRefExpr 0x153008db0 <col:11> 'int' lvalue Var 0x1530086b0 'sign_nid' 'int'
    |   |   | `-RecoveryExpr 0x153008e08 <col:23> '<dependent type>' contains-errors lvalue
    |   |   |-BinaryOperator 0x153008eb8 <line:21:4, col:11> 'const char *' contains-errors '='
    |   |   | |-DeclRefExpr 0x153008e48 <col:4> 'const char *' contains-errors lvalue Var 0x153008890 'sstr' 'const char *'
    |   |   | `-ImplicitCastExpr 0x153008ea0 <col:11> 'const char *' <NoOp>
    |   |   |   `-ImplicitCastExpr 0x153008e88 <col:11> 'char *' <ArrayToPointerDecay>
    |   |   |     `-StringLiteral 0x153008e68 <col:11> 'char[4]' lvalue "STR"
    |   |   `-IfStmt 0x153009000 <line:22:8, line:23:11>
    |   |     |-BinaryOperator 0x153008f50 <line:22:11, col:23> 'int' contains-errors '=='
    |   |     | |-DeclRefExpr 0x153008ed8 <col:11> 'int' lvalue Var 0x1530086b0 'sign_nid' 'int'
    |   |     | `-RecoveryExpr 0x153008f30 <col:23> '<dependent type>' contains-errors lvalue
    |   |     `-BinaryOperator 0x153008fe0 <line:23:4, col:11> 'const char *' contains-errors '='
    |   |       |-DeclRefExpr 0x153008f70 <col:4> 'const char *' contains-errors lvalue Var 0x153008890 'sstr' 'const char *'
    |   |       `-ImplicitCastExpr 0x153008fc8 <col:11> 'const char *' <NoOp>
    |   |         `-ImplicitCastExpr 0x153008fb0 <col:11> 'char *' <ArrayToPointerDecay>
    |   |           `-StringLiteral 0x153008f90 <col:11> 'char[4]' lvalue "STR"
    |   |-IfStmt 0x15300a368 <line:24:3, line:27:36> has_else
    |   | |-ImplicitCastExpr 0x1530090a0 <line:24:7> 'const char *' contains-errors <LValueToRValue>
    |   | | `-DeclRefExpr 0x153009080 <col:7> 'const char *' contains-errors lvalue Var 0x153008890 'sstr' 'const char *'
    |   | |-CallExpr 0x15300a220 <line:25:4, col:30> '<dependent type>' contains-errors
    |   | | |-DeclRefExpr 0x153009198 <col:4> 'int ()' Function 0x1530090e0 'BIO_printf' 'int ()'
    |   | | |-RecoveryExpr 0x1530091b8 <col:15> '<dependent type>' contains-errors lvalue
    |   | | |-StringLiteral 0x1530091d8 <col:19> 'char[4]' lvalue "STR"
    |   | | `-DeclRefExpr 0x15300a200 <col:26> 'const char *' contains-errors lvalue Var 0x153008890 'sstr' 'const char *'
    |   | `-CallExpr 0x15300a330 <line:27:4, col:36> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x15300a258 <col:4> 'int ()' Function 0x1530090e0 'BIO_printf' 'int ()'
    |   |   |-RecoveryExpr 0x15300a278 <col:15> '<dependent type>' contains-errors lvalue
    |   |   |-StringLiteral 0x15300a298 <col:19> 'char[4]' lvalue "STR"
    |   |   `-CStyleCastExpr 0x15300a308 <col:26, col:31> 'int' <IntegralCast>
    |   |     `-ImplicitCastExpr 0x15300a2f0 <col:31> 'unsigned char' <LValueToRValue> part_of_explicit_cast
    |   |       `-DeclRefExpr 0x15300a2b8 <col:31> 'unsigned char' lvalue Var 0x1530087e0 'rsign' 'unsigned char'
    |   `-IfStmt 0x15300a780 <line:28:3, line:31:36> has_else
    |     |-BinaryOperator 0x15300a410 <line:28:7, col:19> 'int' contains-errors '!='
    |     | |-DeclRefExpr 0x15300a398 <col:7> 'int' lvalue Var 0x153008630 'hash_nid' 'int'
    |     | `-RecoveryExpr 0x15300a3f0 <col:19> '<dependent type>' contains-errors lvalue
    |     |-CallExpr 0x15300a638 <line:29:4, col:47> '<dependent type>' contains-errors
    |     | |-DeclRefExpr 0x15300a430 <col:4> 'int ()' Function 0x1530090e0 'BIO_printf' 'int ()'
    |     | |-RecoveryExpr 0x15300a450 <col:15> '<dependent type>' contains-errors lvalue
    |     | |-StringLiteral 0x15300a470 <col:20> 'char[4]' lvalue "STR"
    |     | `-CallExpr 0x15300a5f8 <col:27, col:46> 'int'
    |     |   |-ImplicitCastExpr 0x15300a5e0 <col:27> 'int (*)()' <FunctionToPointerDecay>
    |     |   | `-DeclRefExpr 0x15300a570 <col:27> 'int ()' Function 0x15300a4b8 'OBJ_nid2sn' 'int ()'
    |     |   `-ImplicitCastExpr 0x15300a620 <col:38> 'int' <LValueToRValue>
    |     |     `-DeclRefExpr 0x15300a590 <col:38> 'int' lvalue Var 0x153008630 'hash_nid' 'int'
    |     `-CallExpr 0x15300a748 <line:31:4, col:36> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x15300a670 <col:4> 'int ()' Function 0x1530090e0 'BIO_printf' 'int ()'
    |       |-RecoveryExpr 0x15300a690 <col:15> '<dependent type>' contains-errors lvalue
    |       |-StringLiteral 0x15300a6b0 <col:19> 'char[4]' lvalue "STR"
    |       `-CStyleCastExpr 0x15300a720 <col:26, col:31> 'int' <IntegralCast>
    |         `-ImplicitCastExpr 0x15300a708 <col:31> 'unsigned char' <LValueToRValue> part_of_explicit_cast
    |           `-DeclRefExpr 0x15300a6d0 <col:31> 'unsigned char' lvalue Var 0x153008760 'rhash' 'unsigned char'
    |-CallExpr 0x15300a898 <line:33:2, col:21> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x15300a838 <col:2> 'int ()' Function 0x153008368 'BIO_puts' 'int ()'
    | |-RecoveryExpr 0x15300a858 <col:11> '<dependent type>' contains-errors lvalue
    | `-StringLiteral 0x15300a878 <col:16> 'char[4]' lvalue "STR"
    `-ReturnStmt 0x15300a8e8 <line:34:2, col:9>
      `-IntegerLiteral 0x15300a8c8 <col:9> 'int' 1
