`-FunctionDecl 0x13a128368  line:1:21 invalid crc32_big 'int (unsigned long, int, unsigned int)'
  |-ParmVarDecl 0x13a1280f0 <line:2:5, col:19> col:19 crc 'unsigned long'
  |-ParmVarDecl 0x13a128270 <line:1:36> col:36 used buf 'int'
  |-ParmVarDecl 0x13a1281f0 <line:4:5, col:14> col:14 used len 'unsigned int'
  `-CompoundStmt 0x13a1426a8 <line:5:1, line:34:1>
    |-DeclStmt 0x13a1284a8 <line:6:5, col:23>
    | `-VarDecl 0x13a128440 <col:5, col:22> col:22 referenced invalid c 'int' register
    |-DeclStmt 0x13a128540 <line:7:5, col:32>
    | `-VarDecl 0x13a1284d8 <col:5, col:28> col:28 invalid FAR 'const int' register
    |-BinaryOperator 0x13a1287d0 <line:10:5, col:10> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x13a128758 <col:5> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x13a128738 <col:5> 'int' lvalue Var 0x13a128440 'c' 'int'
    | `-UnaryOperator 0x13a1287b8 <col:9, col:10> '<dependent type>' contains-errors prefix '~' cannot overflow
    |   `-ImplicitCastExpr 0x13a1287a0 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    |     `-RecoveryExpr 0x13a128780 <col:10> '<dependent type>' contains-errors lvalue
    |-WhileStmt 0x13a141ec8 <line:11:5, line:14:5>
    | |-RecoveryExpr 0x13a141838 <line:11:12, col:38> '_Bool' contains-errors
    | `-CompoundStmt 0x13a141eb0 <col:41, line:14:5>
    |   `-UnaryOperator 0x13a141e98 <line:13:9, col:12> 'unsigned int' postfix '--'
    |     `-DeclRefExpr 0x13a141e78 <col:9> 'unsigned int' lvalue ParmVar 0x13a1281f0 'len' 'unsigned int'
    |-UnaryOperator 0x13a141f28 <line:17:5, col:9> 'int' postfix '--'
    | `-DeclRefExpr 0x13a141f08 <col:5> 'int' lvalue ParmVar 0x13a128270 'buf' 'int'
    |-WhileStmt 0x13a142070 <line:18:5, line:21:5>
    | |-BinaryOperator 0x13a141fb0 <line:18:12, col:19> 'int' '>='
    | | |-ImplicitCastExpr 0x13a141f80 <col:12> 'unsigned int' <LValueToRValue>
    | | | `-DeclRefExpr 0x13a141f40 <col:12> 'unsigned int' lvalue ParmVar 0x13a1281f0 'len' 'unsigned int'
    | | `-ImplicitCastExpr 0x13a141f98 <col:19> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x13a141f60 <col:19> 'int' 32
    | `-CompoundStmt 0x13a142058 <col:23, line:21:5>
    |   `-CompoundAssignOperator 0x13a142028 <line:20:9, col:16> 'unsigned int' '-=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
    |     |-DeclRefExpr 0x13a141fd0 <col:9> 'unsigned int' lvalue ParmVar 0x13a1281f0 'len' 'unsigned int'
    |     `-ImplicitCastExpr 0x13a142010 <col:16> 'unsigned int' <IntegralCast>
    |       `-IntegerLiteral 0x13a141ff0 <col:16> 'int' 32
    |-WhileStmt 0x13a1421c0 <line:22:5, line:25:5>
    | |-BinaryOperator 0x13a142100 <line:22:12, col:19> 'int' '>='
    | | |-ImplicitCastExpr 0x13a1420d0 <col:12> 'unsigned int' <LValueToRValue>
    | | | `-DeclRefExpr 0x13a142090 <col:12> 'unsigned int' lvalue ParmVar 0x13a1281f0 'len' 'unsigned int'
    | | `-ImplicitCastExpr 0x13a1420e8 <col:19> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x13a1420b0 <col:19> 'int' 4
    | `-CompoundStmt 0x13a1421a8 <col:22, line:25:5>
    |   `-CompoundAssignOperator 0x13a142178 <line:24:9, col:16> 'unsigned int' '-=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
    |     |-DeclRefExpr 0x13a142120 <col:9> 'unsigned int' lvalue ParmVar 0x13a1281f0 'len' 'unsigned int'
    |     `-ImplicitCastExpr 0x13a142160 <col:16> 'unsigned int' <IntegralCast>
    |       `-IntegerLiteral 0x13a142140 <col:16> 'int' 4
    |-UnaryOperator 0x13a142200 <line:26:5, col:9> 'int' postfix '++'
    | `-DeclRefExpr 0x13a1421e0 <col:5> 'int' lvalue ParmVar 0x13a128270 'buf' 'int'
    |-IfStmt 0x13a1424c0 <line:29:5, line:31:19>
    | |-ImplicitCastExpr 0x13a142258 <line:29:9> 'unsigned int' <LValueToRValue>
    | | `-DeclRefExpr 0x13a142238 <col:9> 'unsigned int' lvalue ParmVar 0x13a1281f0 'len' 'unsigned int'
    | `-DoStmt 0x13a1424a0 <col:14, line:31:19>
    |   |-CompoundStmt 0x13a142458 <line:29:17, line:31:5>
    |   `-UnaryOperator 0x13a142488 <col:14, col:16> 'unsigned int' prefix '--'
    |     `-DeclRefExpr 0x13a142468 <col:16> 'unsigned int' lvalue ParmVar 0x13a1281f0 'len' 'unsigned int'
    |-BinaryOperator 0x13a142578 <line:32:5, col:10> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x13a142500 <col:5> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x13a1424e0 <col:5> 'int' lvalue Var 0x13a128440 'c' 'int'
    | `-UnaryOperator 0x13a142560 <col:9, col:10> '<dependent type>' contains-errors prefix '~' cannot overflow
    |   `-ImplicitCastExpr 0x13a142548 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    |     `-RecoveryExpr 0x13a142528 <col:10> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x13a142698 <line:33:5, col:38>
      `-ImplicitCastExpr 0x13a142680 <col:12, col:38> 'int' contains-errors <IntegralCast>
        `-CStyleCastExpr 0x13a142658 <col:12, col:38> 'unsigned long' contains-errors <Dependent>
          `-ParenExpr 0x13a142638 <col:27, col:38> '<dependent type>' contains-errors
            `-CallExpr 0x13a1425d8 <col:28, col:37> '<dependent type>' contains-errors
              |-DeclRefExpr 0x13a142598 <col:28> 'int ()' Function 0x13a128648 'ZSWAP32' 'int ()'
              `-RecoveryExpr 0x13a1425b8 <col:36> '<dependent type>' contains-errors lvalue
