`-FunctionDecl 0x13580de88  line:1:1 invalid command_process_destroy_cell 'int (int *, int *)'
  |-ParmVarDecl 0x13580dd28 <col:30, col:38> col:38 invalid cell 'int *'
  |-ParmVarDecl 0x13580dda8 <col:44, col:61> col:61 invalid conn 'int *'
  `-CompoundStmt 0x136809660 <line:2:1, line:32:1>
    |-DeclStmt 0x13580dfd8 <line:4:3, col:13>
    | `-VarDecl 0x13580df70 <col:3, col:7> col:7 used reason 'int'
    |-IfStmt 0x135827b28 <line:8:3, line:12:3>
    | |-UnaryOperator 0x13580e2e0 <line:8:7, col:8> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x13580e2c8 <col:8> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x13580e2a8 <col:8> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x135827b08 <col:14, line:12:3>
    |   |-CallExpr 0x135827ab0 <line:9:5, line:10:66> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x13580e3d8 <line:9:5> 'int ()' Function 0x13580e320 'log_info' 'int ()'
    |   | |-RecoveryExpr 0x135827a90 <col:14> '<dependent type>' contains-errors lvalue
    |   | |-StringLiteral 0x135827860 <col:20> 'char[4]' lvalue "STR"
    |   | |-CXXDependentScopeMemberExpr 0x1358278a0 <line:10:14, col:20> '<dependent type>' contains-errors lvalue ->circ_id
    |   | | `-RecoveryExpr 0x135827880 <col:14> '<dependent type>' contains-errors lvalue
    |   | |-CXXDependentScopeMemberExpr 0x135827950 <col:29, col:41> '<dependent type>' contains-errors lvalue .address
    |   | | `-CXXDependentScopeMemberExpr 0x135827908 <col:29, col:35> '<dependent type>' contains-errors lvalue ->_base
    |   | |   `-RecoveryExpr 0x1358278e8 <col:29> '<dependent type>' contains-errors lvalue
    |   | `-CXXDependentScopeMemberExpr 0x135827a00 <col:50, col:62> '<dependent type>' contains-errors lvalue .port
    |   |   `-CXXDependentScopeMemberExpr 0x1358279b8 <col:50, col:56> '<dependent type>' contains-errors lvalue ->_base
    |   |     `-RecoveryExpr 0x135827998 <col:50> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x135827af8 <line:11:5>
    |-CallExpr 0x135827d40 <line:13:3, col:38> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x135827c28 <col:3> 'int ()' Function 0x135827b70 'log_debug' 'int ()'
    | |-RecoveryExpr 0x135827d20 <col:13> '<dependent type>' contains-errors lvalue
    | |-StringLiteral 0x135827c60 <col:19> 'char[4]' lvalue "STR"
    | `-CXXDependentScopeMemberExpr 0x135827ca0 <col:25, col:31> '<dependent type>' contains-errors lvalue ->circ_id
    |   `-RecoveryExpr 0x135827c80 <col:25> '<dependent type>' contains-errors lvalue
    `-IfStmt 0x136809630 <line:15:3, line:31:3> has_else
      |-BinaryOperator 0x135828210 <line:15:7, line:16:45> 'int' contains-errors '&&'
      | |-UnaryOperator 0x135828148 <line:15:7, col:30> '<dependent type>' contains-errors prefix '!' cannot overflow
      | | `-CallExpr 0x135828120 <col:8, col:30> '<dependent type>' contains-errors
      | |   |-DeclRefExpr 0x135827e58 <col:8> 'int ()' Function 0x135827da0 'CIRCUIT_IS_ORIGIN' 'int ()'
      | |   `-RecoveryExpr 0x135828100 <col:26> '<dependent type>' contains-errors lvalue
      | `-BinaryOperator 0x1358281f0 <line:16:7, col:45> 'int' contains-errors '=='
      |   |-CXXDependentScopeMemberExpr 0x135827ef0 <col:7, col:13> '<dependent type>' contains-errors lvalue ->circ_id
      |   | `-RecoveryExpr 0x135827ed0 <col:7> '<dependent type>' contains-errors lvalue
      |   `-CXXDependentScopeMemberExpr 0x1358281a8 <col:24, col:45> '<dependent type>' contains-errors lvalue ->p_circ_id
      |     `-CallExpr 0x135828180 <col:24, col:42> '<dependent type>' contains-errors
      |       |-DeclRefExpr 0x135828018 <col:24> 'int ()' Function 0x135827f60 'TO_OR_CIRCUIT' 'int ()'
      |       `-RecoveryExpr 0x135828160 <col:38> '<dependent type>' contains-errors lvalue
      |-CompoundStmt 0x1358285c0 <col:56, line:20:3>
      | `-CallExpr 0x135828468 <line:18:5, col:61> '<dependent type>' contains-errors
      |   |-DeclRefExpr 0x135828310 <col:5> 'int ()' Function 0x135828258 'circuit_set_p_circid_orconn' 'int ()'
      |   |-CallExpr 0x135828420 <col:33, col:51> '<dependent type>' contains-errors
      |   | |-DeclRefExpr 0x135828330 <col:33> 'int ()' Function 0x135827f60 'TO_OR_CIRCUIT' 'int ()'
      |   | `-RecoveryExpr 0x135828400 <col:47> '<dependent type>' contains-errors lvalue
      |   |-IntegerLiteral 0x135828390 <col:54> 'int' 0
      |   `-RecoveryExpr 0x135828448 <col:57> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x136809618 <line:20:10, line:31:3>
        `-IfStmt 0x1368095e8 <line:22:5, line:30:5> has_else
          |-RecoveryExpr 0x135828718 <line:22:9, col:31> '_Bool' contains-errors
          |-CompoundStmt 0x135828778 <col:34, line:24:5>
          `-CompoundStmt 0x1368095c8 <col:12, line:30:5>
            |-DeclStmt 0x1368092c8 <line:25:7, col:22>
            | `-VarDecl 0x136809260 <col:7, col:21> col:12 used payload 'char[1]'
            `-BinaryOperator 0x136809408 <line:27:7, col:26> 'char' '='
              |-ArraySubscriptExpr 0x136809378 <col:7, col:16> 'char' lvalue
              | |-ImplicitCastExpr 0x136809360 <col:7> 'char *' <ArrayToPointerDecay>
              | | `-DeclRefExpr 0x136809320 <col:7> 'char[1]' lvalue Var 0x136809260 'payload' 'char[1]'
              | `-IntegerLiteral 0x136809340 <col:15> 'int' 0
              `-CStyleCastExpr 0x1368093e0 <col:20, col:26> 'char' <IntegralCast>
                `-ImplicitCastExpr 0x1368093c8 <col:26> 'int' <LValueToRValue> part_of_explicit_cast
                  `-DeclRefExpr 0x136809398 <col:26> 'int' lvalue Var 0x13580df70 'reason' 'int'
