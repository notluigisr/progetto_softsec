`-FunctionDecl 0x12083ae38  line:1:1 TEST_F 'int (int, int)'
  |-ParmVarDecl 0x12083ad58 <col:8> col:8 QueryPlannerTest 'int'
  |-ParmVarDecl 0x12083acd8 <col:26> col:26 ElemMatchIndexedNestedOrMultiplePreds 'int'
  `-CompoundStmt 0x12000bcd0 <col:65, line:16:1>
    |-CallExpr 0x12000b4c8 <line:2:5, col:30> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12083b060 <col:5> 'int ()' Function 0x12083afa8 'addIndex' 'int ()'
    | `-CallExpr 0x12000b4a0 <col:14, col:29> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12083b160 <col:14> 'int ()' Function 0x12083b0a8 'BSON' 'int ()'
    |   `-RecoveryExpr 0x12000b470 <col:19, col:28> '<dependent type>' contains-errors lvalue
    |     |-StringLiteral 0x12083b1c0 <col:19> 'char[4]' lvalue "STR"
    |     `-IntegerLiteral 0x12083b1e0 <col:28> 'int' 1
    |-CallExpr 0x12000b5e0 <line:3:5, col:30> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12000b4f0 <col:5> 'int ()' Function 0x12083afa8 'addIndex' 'int ()'
    | `-CallExpr 0x12000b5b8 <col:14, col:29> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12000b510 <col:14> 'int ()' Function 0x12083b0a8 'BSON' 'int ()'
    |   `-RecoveryExpr 0x12000b588 <col:19, col:28> '<dependent type>' contains-errors lvalue
    |     |-StringLiteral 0x12000b530 <col:19> 'char[4]' lvalue "STR"
    |     `-IntegerLiteral 0x12000b550 <col:28> 'int' 1
    |-CallExpr 0x12000b8d0 <line:4:5, col:29> 'int'
    | |-ImplicitCastExpr 0x12000b8b8 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x12000b6e8 <col:5> 'int ()' Function 0x12000b630 'runQuery' 'int ()'
    | `-CallExpr 0x12000b878 <col:14, col:28> 'int'
    |   |-ImplicitCastExpr 0x12000b860 <col:14> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x12000b7e8 <col:14> 'int ()' Function 0x12000b730 'fromjson' 'int ()'
    |   `-ImplicitCastExpr 0x12000b8a0 <col:23> 'char *' <ArrayToPointerDecay>
    |     `-StringLiteral 0x12000b808 <col:23> 'char[4]' lvalue "STR"
    |-CallExpr 0x12000ba30 <line:6:5, col:26> 'int'
    | |-ImplicitCastExpr 0x12000ba18 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x12000b9d8 <col:5> 'int ()' Function 0x12000b920 'assertNumSolutions' 'int ()'
    | `-IntegerLiteral 0x12000b9f8 <col:24> 'unsigned int' 2
    |-CallExpr 0x12000bb90 <line:7:5, col:31> 'int'
    | |-ImplicitCastExpr 0x12000bb78 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x12000bb38 <col:5> 'int ()' Function 0x12000ba80 'assertSolutionExists' 'int ()'
    | `-ImplicitCastExpr 0x12000bbb8 <col:26> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x12000bb58 <col:26> 'char[4]' lvalue "STR"
    `-CallExpr 0x12000bc90 <line:8:5, line:15:14> 'int'
      |-ImplicitCastExpr 0x12000bc78 <line:8:5> 'int (*)()' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x12000bbd0 <col:5> 'int ()' Function 0x12000ba80 'assertSolutionExists' 'int ()'
      `-ImplicitCastExpr 0x12000bcb8 <line:9:9, line:15:9> 'char *' <ArrayToPointerDecay>
        `-StringLiteral 0x12000bc30 <line:9:9, line:15:9> 'char[22]' lvalue "STRSTRSTRSTRSTRSTRSTR"
