`-FunctionDecl 0x159928b18  line:1:1 invalid mldv2_query_print 'int (int *, const char *, int)'
  |-ParmVarDecl 0x159928928 <col:19, col:39> col:39 invalid ndo 'int *'
  |-ParmVarDecl 0x1599289a8 <col:44, col:58> col:58 used bp 'const char *'
  |-ParmVarDecl 0x159928a28 <col:62, col:68> col:68 invalid len 'int'
  `-CompoundStmt 0x1599457e0 <line:2:1, line:64:1>
    |-DeclStmt 0x159928eb0 <line:3:5, col:64>
    | |-RecordDecl 0x159928bd8 <col:11, col:18> col:18 struct icmp6_hdr
    | `-VarDecl 0x159928d48 <col:5, col:62> col:29 used icp 'const struct icmp6_hdr *' cinit
    |   `-CStyleCastExpr 0x159928e70 <col:35, col:62> 'const struct icmp6_hdr *' <BitCast>
    |     `-ImplicitCastExpr 0x159928e58 <col:62> 'const char *' <LValueToRValue> part_of_explicit_cast
    |       `-DeclRefExpr 0x159928db0 <col:62> 'const char *' lvalue ParmVar 0x1599289a8 'bp' 'const char *'
    |-DeclStmt 0x159928fe0 <line:5:5, col:17>
    | |-VarDecl 0x159928ee0 <col:5, col:9> col:9 used mrt 'int'
    | `-VarDecl 0x159928f60 <col:5, col:14> col:14 used qqi 'int'
    |-DeclStmt 0x159943080 <line:7:5, col:21>
    | `-VarDecl 0x159943018 <col:5, col:20> col:20 invalid i 'int' register
    |-IfStmt 0x1599433c8 <line:10:5, line:13:5>
    | |-BinaryOperator 0x1599430d8 <line:10:9, col:15> 'int' contains-errors '<'
    | | |-RecoveryExpr 0x159943098 <col:9> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x1599430b8 <col:15> 'int' 28
    | `-CompoundStmt 0x1599433a8 <col:19, line:13:5>
    |   |-CallExpr 0x159943370 <line:11:13, col:38> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x159943250 <col:13> 'int ()' Function 0x159943198 'ND_PRINT' 'int ()'
    |   | `-ParenExpr 0x159943350 <col:22, col:37> '<dependent type>' contains-errors
    |   |   `-BinaryOperator 0x159943330 <col:23, col:34> '<dependent type>' contains-errors ','
    |   |     |-BinaryOperator 0x1599432f0 <col:23, col:27> 'char[4]' contains-errors ','
    |   |     | |-RecoveryExpr 0x159943270 <col:23> '<dependent type>' contains-errors lvalue
    |   |     | `-StringLiteral 0x1599432d0 <col:27> 'char[4]' lvalue "STR"
    |   |     `-RecoveryExpr 0x159943310 <col:34> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x159943398 <line:12:2>
    |-CallExpr 0x1599439c0 <line:14:5, col:35> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1599434c8 <col:5> 'int ()' Function 0x159943410 'ND_TCHECK' 'int ()'
    | `-ArraySubscriptExpr 0x1599439a0 <col:15, col:34> '<dependent type>' contains-errors lvalue
    |   |-ImplicitCastExpr 0x159943988 <col:15, col:20> '<dependent type>' contains-errors <LValueToRValue>
    |   | `-RecoveryExpr 0x159943940 <col:15, col:20> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x1599434e8 <col:15> 'const struct icmp6_hdr *' lvalue Var 0x159928d48 'icp' 'const struct icmp6_hdr *'
    |   `-IntegerLiteral 0x159943968 <col:33> 'int' 0
    |-BinaryOperator 0x159943c00 <line:15:5, col:47> 'int' contains-errors '='
    | |-DeclRefExpr 0x1599439e8 <col:5> 'int' lvalue Var 0x159928ee0 'mrt' 'int'
    | `-CallExpr 0x159943bd8 <col:11, col:47> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x159943ae8 <col:11> 'int ()' Function 0x159943a30 'EXTRACT_16BITS' 'int ()'
    |   `-UnaryOperator 0x159943bc0 <col:26, col:46> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-ArraySubscriptExpr 0x159943ba0 <col:27, col:46> '<dependent type>' contains-errors lvalue
    |       |-ImplicitCastExpr 0x159943b88 <col:27, col:32> '<dependent type>' contains-errors <LValueToRValue>
    |       | `-RecoveryExpr 0x159943b40 <col:27, col:32> '<dependent type>' contains-errors lvalue
    |       |   `-DeclRefExpr 0x159943b08 <col:27> 'const struct icmp6_hdr *' lvalue Var 0x159928d48 'icp' 'const struct icmp6_hdr *'
    |       `-IntegerLiteral 0x159943b68 <col:45> 'int' 0
    |-IfStmt 0x15b008cd8 <line:16:5, line:20:5> has_else
    | |-BinaryOperator 0x159943cb0 <line:16:9, col:15> 'int' '<'
    | | |-ImplicitCastExpr 0x159943c98 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x159943c78 <col:9> 'int' lvalue Var 0x159928ee0 'mrt' 'int'
    | | `-IntegerLiteral 0x159943c38 <col:15> 'int' 32768
    | |-CompoundStmt 0x159943d80 <col:22, line:18:5>
    | | `-BinaryOperator 0x159943d60 <line:17:2, col:8> 'int' '='
    | |   |-DeclRefExpr 0x159943cd0 <col:2> 'int' lvalue Var 0x159928ee0 'mrt' 'int'
    | |   `-ImplicitCastExpr 0x159943d48 <col:8> 'int' <LValueToRValue>
    | |     `-DeclRefExpr 0x159943d28 <col:8> 'int' lvalue Var 0x159928ee0 'mrt' 'int'
    | `-CompoundStmt 0x15b008cc0 <line:18:12, line:20:5>
    |   `-BinaryOperator 0x15b008ca0 <line:19:9, col:71> 'int' '='
    |     |-DeclRefExpr 0x159943d98 <col:9> 'int' lvalue Var 0x159928ee0 'mrt' 'int'
    |     `-BinaryOperator 0x15b008c80 <col:15, col:71> 'int' '<<'
    |       |-ParenExpr 0x159943ec8 <col:15, col:39> 'int'
    |       | `-BinaryOperator 0x159943ea8 <col:16, col:33> 'int' '|'
    |       |   |-ParenExpr 0x159943e68 <col:16, col:29> 'int'
    |       |   | `-BinaryOperator 0x159943e48 <col:17, col:23> 'int' '&'
    |       |   |   |-ImplicitCastExpr 0x159943e30 <col:17> 'int' <LValueToRValue>
    |       |   |   | `-DeclRefExpr 0x159943e10 <col:17> 'int' lvalue Var 0x159928ee0 'mrt' 'int'
    |       |   |   `-IntegerLiteral 0x159943dd0 <col:23> 'int' 4095
    |       |   `-IntegerLiteral 0x159943e88 <col:33> 'int' 4096
    |       `-ParenExpr 0x15b008c60 <col:44, col:71> 'int'
    |         `-BinaryOperator 0x15b008c40 <col:45, col:70> 'int' '+'
    |           |-ParenExpr 0x15b008c00 <col:45, col:66> 'int'
    |           | `-BinaryOperator 0x159943fd8 <col:46, col:64> 'int' '>>'
    |           |   |-ParenExpr 0x159943f98 <col:46, col:59> 'int'
    |           |   | `-BinaryOperator 0x159943f78 <col:47, col:53> 'int' '&'
    |           |   |   |-ImplicitCastExpr 0x159943f60 <col:47> 'int' <LValueToRValue>
    |           |   |   | `-DeclRefExpr 0x159943f40 <col:47> 'int' lvalue Var 0x159928ee0 'mrt' 'int'
    |           |   |   `-IntegerLiteral 0x159943f00 <col:53> 'int' 28672
    |           |   `-IntegerLiteral 0x159943fb8 <col:64> 'int' 12
    |           `-IntegerLiteral 0x15b008c20 <col:70> 'int' 3
    |-IfStmt 0x15b008e90 <line:21:5, line:23:5>
    | |-CXXDependentScopeMemberExpr 0x15b008d28 <line:21:9, col:14> '<dependent type>' contains-errors lvalue ->ndo_vflag
    | | `-RecoveryExpr 0x15b008d08 <col:9> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x15b008e78 <col:25, line:23:5>
    |   `-CallExpr 0x15b008e50 <line:22:13, col:38> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x15b008d70 <col:13> 'int ()' Function 0x159943198 'ND_PRINT' 'int ()'
    |     `-ParenExpr 0x15b008e30 <col:22, col:37> 'int' contains-errors
    |       `-BinaryOperator 0x15b008e10 <col:23, col:34> 'int' contains-errors ','
    |         |-BinaryOperator 0x15b008dd0 <col:23, col:27> 'char[4]' contains-errors ','
    |         | |-RecoveryExpr 0x15b008d90 <col:23> '<dependent type>' contains-errors lvalue
    |         | `-StringLiteral 0x15b008db0 <col:27> 'char[4]' lvalue "STR"
    |         `-DeclRefExpr 0x15b008df0 <col:34> 'int' lvalue Var 0x159928ee0 'mrt' 'int'
    |-CallExpr 0x15b0093c8 <line:25:5, col:54> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x15b009128 <col:5> 'int ()' Function 0x159943198 'ND_PRINT' 'int ()'
    | `-ParenExpr 0x15b0093a8 <col:14, col:53> '<dependent type>' contains-errors
    |   `-BinaryOperator 0x15b009388 <col:15, col:52> '<dependent type>' contains-errors ','
    |     |-BinaryOperator 0x15b009188 <col:15, col:19> 'char[4]' contains-errors ','
    |     | |-RecoveryExpr 0x15b009148 <col:15> '<dependent type>' contains-errors lvalue
    |     | `-StringLiteral 0x15b009168 <col:19> 'char[4]' lvalue "STR"
    |     `-CallExpr 0x15b009358 <col:26, col:52> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x15b009288 <col:26> 'int ()' Function 0x15b0091d0 'ip6addr_string' 'int ()'
    |       |-RecoveryExpr 0x15b0092a8 <col:41> '<dependent type>' contains-errors lvalue
    |       `-UnaryOperator 0x15b009340 <col:46, col:51> 'const char *' prefix '&' cannot overflow
    |         `-ArraySubscriptExpr 0x15b009320 <col:47, col:51> 'const char' lvalue
    |           |-ImplicitCastExpr 0x15b009308 <col:47> 'const char *' <LValueToRValue>
    |           | `-DeclRefExpr 0x15b0092c8 <col:47> 'const char *' lvalue ParmVar 0x1599289a8 'bp' 'const char *'
    |           `-IntegerLiteral 0x15b0092e8 <col:50> 'int' 8
    |-IfStmt 0x159944b68 <line:27:5, line:41:5>
    | |-CXXDependentScopeMemberExpr 0x15b009410 <line:27:9, col:14> '<dependent type>' contains-errors lvalue ->ndo_vflag
    | | `-RecoveryExpr 0x15b0093f0 <col:9> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x159944b30 <col:25, line:41:5>
    |   |-CallExpr 0x15b009538 <line:28:9, col:25> 'int'
    |   | |-ImplicitCastExpr 0x15b009520 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x15b009458 <col:9> 'int ()' Function 0x159943410 'ND_TCHECK' 'int ()'
    |   | `-ImplicitCastExpr 0x15b009578 <col:19, col:24> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x15b009560 <col:19, col:24> 'char' <LValueToRValue>
    |   |     `-ArraySubscriptExpr 0x15b0094d0 <col:19, col:24> 'const char' lvalue
    |   |       |-ImplicitCastExpr 0x15b0094b8 <col:19> 'const char *' <LValueToRValue>
    |   |       | `-DeclRefExpr 0x15b009478 <col:19> 'const char *' lvalue ParmVar 0x1599289a8 'bp' 'const char *'
    |   |       `-IntegerLiteral 0x15b009498 <col:22> 'int' 25
    |   |-IfStmt 0x15b009758 <line:29:2, line:31:2>
    |   | |-BinaryOperator 0x15b009658 <line:29:6, col:15> 'int' '&'
    |   | | |-ImplicitCastExpr 0x15b009640 <col:6, col:11> 'int' <IntegralCast>
    |   | | | `-ImplicitCastExpr 0x15b009628 <col:6, col:11> 'char' <LValueToRValue>
    |   | | |   `-ArraySubscriptExpr 0x15b0095e8 <col:6, col:11> 'const char' lvalue
    |   | | |     |-ImplicitCastExpr 0x15b0095d0 <col:6> 'const char *' <LValueToRValue>
    |   | | |     | `-DeclRefExpr 0x15b009590 <col:6> 'const char *' lvalue ParmVar 0x1599289a8 'bp' 'const char *'
    |   | | |     `-IntegerLiteral 0x15b0095b0 <col:9> 'int' 24
    |   | | `-IntegerLiteral 0x15b009608 <col:15> 'int' 8
    |   | `-CompoundStmt 0x15b009740 <col:21, line:31:2>
    |   |   `-CallExpr 0x15b009718 <line:30:3, col:23> '<dependent type>' contains-errors
    |   |     |-DeclRefExpr 0x15b009678 <col:3> 'int ()' Function 0x159943198 'ND_PRINT' 'int ()'
    |   |     `-ParenExpr 0x15b0096f8 <col:12, col:22> 'char[4]' contains-errors
    |   |       `-BinaryOperator 0x15b0096d8 <col:13, col:17> 'char[4]' contains-errors ','
    |   |         |-RecoveryExpr 0x15b009698 <col:13> '<dependent type>' contains-errors lvalue
    |   |         `-StringLiteral 0x15b0096b8 <col:17> 'char[4]' lvalue "STR"
    |   |-IfStmt 0x15b009a48 <line:32:2, line:34:2>
    |   | |-BinaryOperator 0x15b009840 <line:32:6, col:15> 'int' '&'
    |   | | |-ImplicitCastExpr 0x15b009828 <col:6, col:11> 'int' <IntegralCast>
    |   | | | `-ImplicitCastExpr 0x15b009810 <col:6, col:11> 'char' <LValueToRValue>
    |   | | |   `-ArraySubscriptExpr 0x15b0097d0 <col:6, col:11> 'const char' lvalue
    |   | | |     |-ImplicitCastExpr 0x15b0097b8 <col:6> 'const char *' <LValueToRValue>
    |   | | |     | `-DeclRefExpr 0x15b009778 <col:6> 'const char *' lvalue ParmVar 0x1599289a8 'bp' 'const char *'
    |   | | |     `-IntegerLiteral 0x15b009798 <col:9> 'int' 24
    |   | | `-IntegerLiteral 0x15b0097f0 <col:15> 'int' 7
    |   | `-CompoundStmt 0x15b009a30 <col:21, line:34:2>
    |   |   `-CallExpr 0x15b009a08 <line:33:3, col:38> '<dependent type>' contains-errors
    |   |     |-DeclRefExpr 0x15b009860 <col:3> 'int ()' Function 0x159943198 'ND_PRINT' 'int ()'
    |   |     `-ParenExpr 0x15b0099e8 <col:12, col:37> 'int' contains-errors
    |   |       `-BinaryOperator 0x15b0099c8 <col:13, col:33> 'int' contains-errors ','
    |   |         |-BinaryOperator 0x15b0098c0 <col:13, col:17> 'char[4]' contains-errors ','
    |   |         | |-RecoveryExpr 0x15b009880 <col:13> '<dependent type>' contains-errors lvalue
    |   |         | `-StringLiteral 0x15b0098a0 <col:17> 'char[4]' lvalue "STR"
    |   |         `-BinaryOperator 0x15b0099a8 <col:24, col:33> 'int' '&'
    |   |           |-ImplicitCastExpr 0x15b009990 <col:24, col:29> 'int' <IntegralCast>
    |   |           | `-ImplicitCastExpr 0x15b009978 <col:24, col:29> 'char' <LValueToRValue>
    |   |           |   `-ArraySubscriptExpr 0x15b009938 <col:24, col:29> 'const char' lvalue
    |   |           |     |-ImplicitCastExpr 0x15b009920 <col:24> 'const char *' <LValueToRValue>
    |   |           |     | `-DeclRefExpr 0x15b0098e0 <col:24> 'const char *' lvalue ParmVar 0x1599289a8 'bp' 'const char *'
    |   |           |     `-IntegerLiteral 0x15b009900 <col:27> 'int' 24
    |   |           `-IntegerLiteral 0x15b009958 <col:33> 'int' 7
    |   |-IfStmt 0x1599449f8 <line:35:2, line:39:2> has_else
    |   | |-BinaryOperator 0x15b009b30 <line:35:6, col:15> 'int' '<'
    |   | | |-ImplicitCastExpr 0x15b009b18 <col:6, col:11> 'int' <IntegralCast>
    |   | | | `-ImplicitCastExpr 0x15b009b00 <col:6, col:11> 'char' <LValueToRValue>
    |   | | |   `-ArraySubscriptExpr 0x15b009ac0 <col:6, col:11> 'const char' lvalue
    |   | | |     |-ImplicitCastExpr 0x15b009aa8 <col:6> 'const char *' <LValueToRValue>
    |   | | |     | `-DeclRefExpr 0x15b009a68 <col:6> 'const char *' lvalue ParmVar 0x1599289a8 'bp' 'const char *'
    |   | | |     `-IntegerLiteral 0x15b009a88 <col:9> 'int' 25
    |   | | `-IntegerLiteral 0x15b009ae0 <col:15> 'int' 128
    |   | |-CompoundStmt 0x159944638 <col:20, line:37:2>
    |   | | `-BinaryOperator 0x159944618 <line:36:3, col:14> 'int' '='
    |   | |   |-DeclRefExpr 0x15b009b50 <col:3> 'int' lvalue Var 0x159928f60 'qqi' 'int'
    |   | |   `-ImplicitCastExpr 0x159944600 <col:9, col:14> 'int' <IntegralCast>
    |   | |     `-ImplicitCastExpr 0x15b009be8 <col:9, col:14> 'char' <LValueToRValue>
    |   | |       `-ArraySubscriptExpr 0x15b009bc8 <col:9, col:14> 'const char' lvalue
    |   | |         |-ImplicitCastExpr 0x15b009bb0 <col:9> 'const char *' <LValueToRValue>
    |   | |         | `-DeclRefExpr 0x15b009b70 <col:9> 'const char *' lvalue ParmVar 0x1599289a8 'bp' 'const char *'
    |   | |         `-IntegerLiteral 0x15b009b90 <col:12> 'int' 25
    |   | `-CompoundStmt 0x1599449e0 <line:37:9, line:39:2>
    |   |   `-BinaryOperator 0x1599449c0 <line:38:3, col:64> 'int' '='
    |   |     |-DeclRefExpr 0x159944650 <col:3> 'int' lvalue Var 0x159928f60 'qqi' 'int'
    |   |     `-BinaryOperator 0x1599449a0 <col:9, col:64> 'int' '<<'
    |   |       |-ParenExpr 0x1599447b8 <col:9, col:32> 'int'
    |   |       | `-BinaryOperator 0x159944798 <col:10, col:28> 'int' '|'
    |   |       |   |-ParenExpr 0x159944758 <col:10, col:24> 'int'
    |   |       |   | `-BinaryOperator 0x159944738 <col:11, col:20> 'int' '&'
    |   |       |   |   |-ImplicitCastExpr 0x159944720 <col:11, col:16> 'int' <IntegralCast>
    |   |       |   |   | `-ImplicitCastExpr 0x159944708 <col:11, col:16> 'char' <LValueToRValue>
    |   |       |   |   |   `-ArraySubscriptExpr 0x1599446c8 <col:11, col:16> 'const char' lvalue
    |   |       |   |   |     |-ImplicitCastExpr 0x1599446b0 <col:11> 'const char *' <LValueToRValue>
    |   |       |   |   |     | `-DeclRefExpr 0x159944670 <col:11> 'const char *' lvalue ParmVar 0x1599289a8 'bp' 'const char *'
    |   |       |   |   |     `-IntegerLiteral 0x159944690 <col:14> 'int' 25
    |   |       |   |   `-IntegerLiteral 0x1599446e8 <col:20> 'int' 15
    |   |       |   `-IntegerLiteral 0x159944778 <col:28> 'int' 16
    |   |       `-ParenExpr 0x159944980 <col:37, col:64> 'int'
    |   |         `-BinaryOperator 0x159944960 <col:38, col:63> 'int' '+'
    |   |           |-ParenExpr 0x159944920 <col:38, col:59> 'int'
    |   |           | `-BinaryOperator 0x159944900 <col:39, col:58> 'int' '>>'
    |   |           |   |-ParenExpr 0x1599448c0 <col:39, col:53> 'int'
    |   |           |   | `-BinaryOperator 0x1599448a0 <col:40, col:49> 'int' '&'
    |   |           |   |   |-ImplicitCastExpr 0x159944888 <col:40, col:45> 'int' <IntegralCast>
    |   |           |   |   | `-ImplicitCastExpr 0x159944870 <col:40, col:45> 'char' <LValueToRValue>
    |   |           |   |   |   `-ArraySubscriptExpr 0x159944830 <col:40, col:45> 'const char' lvalue
    |   |           |   |   |     |-ImplicitCastExpr 0x159944818 <col:40> 'const char *' <LValueToRValue>
    |   |           |   |   |     | `-DeclRefExpr 0x1599447d8 <col:40> 'const char *' lvalue ParmVar 0x1599289a8 'bp' 'const char *'
    |   |           |   |   |     `-IntegerLiteral 0x1599447f8 <col:43> 'int' 25
    |   |           |   |   `-IntegerLiteral 0x159944850 <col:49> 'int' 112
    |   |           |   `-IntegerLiteral 0x1599448e0 <col:58> 'int' 4
    |   |           `-IntegerLiteral 0x159944940 <col:63> 'int' 3
    |   `-CallExpr 0x159944b08 <line:40:2, col:27> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x159944a28 <col:2> 'int ()' Function 0x159943198 'ND_PRINT' 'int ()'
    |     `-ParenExpr 0x159944ae8 <col:11, col:26> 'int' contains-errors
    |       `-BinaryOperator 0x159944ac8 <col:12, col:23> 'int' contains-errors ','
    |         |-BinaryOperator 0x159944a88 <col:12, col:16> 'char[4]' contains-errors ','
    |         | |-RecoveryExpr 0x159944a48 <col:12> '<dependent type>' contains-errors lvalue
    |         | `-StringLiteral 0x159944a68 <col:16> 'char[4]' lvalue "STR"
    |         `-DeclRefExpr 0x159944aa8 <col:23> 'int' lvalue Var 0x159928f60 'qqi' 'int'
    |-CallExpr 0x159944c58 <line:43:5, col:25> 'int'
    | |-ImplicitCastExpr 0x159944c40 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x159944b88 <col:5> 'int ()' Function 0x15b008ed8 'ND_TCHECK2' 'int ()'
    | |-ImplicitCastExpr 0x159944ca0 <col:16, col:21> 'int' <IntegralCast>
    | | `-ImplicitCastExpr 0x159944c88 <col:16, col:21> 'char' <LValueToRValue>
    | |   `-ArraySubscriptExpr 0x159944c00 <col:16, col:21> 'const char' lvalue
    | |     |-ImplicitCastExpr 0x159944be8 <col:16> 'const char *' <LValueToRValue>
    | |     | `-DeclRefExpr 0x159944ba8 <col:16> 'const char *' lvalue ParmVar 0x1599289a8 'bp' 'const char *'
    | |     `-IntegerLiteral 0x159944bc8 <col:19> 'int' 26
    | `-IntegerLiteral 0x159944c20 <col:24> 'int' 2
    |-IfStmt 0x159945588 <line:45:5, line:58:5>
    | |-RecoveryExpr 0x159944dc8 <line:45:9, col:17> '_Bool' contains-errors
    | `-CompoundStmt 0x159945570 <col:20, line:58:5>
    |   `-IfStmt 0x159945540 <line:46:2, line:57:17> has_else
    |     |-RecoveryExpr 0x159944e80 <line:46:6, col:47> '_Bool' contains-errors
    |     |-CallExpr 0x159944f40 <line:47:6, col:26> '<dependent type>' contains-errors
    |     | |-DeclRefExpr 0x159944ea0 <col:6> 'int ()' Function 0x159943198 'ND_PRINT' 'int ()'
    |     | `-ParenExpr 0x159944f20 <col:15, col:25> 'char[4]' contains-errors
    |     |   `-BinaryOperator 0x159944f00 <col:16, col:20> 'char[4]' contains-errors ','
    |     |     |-RecoveryExpr 0x159944ec0 <col:16> '<dependent type>' contains-errors lvalue
    |     |     `-StringLiteral 0x159944ee0 <col:20> 'char[4]' lvalue "STR"
    |     `-IfStmt 0x159945510 <line:48:7, line:57:17> has_else
    |       |-BinaryOperator 0x159944ff0 <line:48:11, col:28> 'int' contains-errors '>'
    |       | |-CXXDependentScopeMemberExpr 0x159944f88 <col:11, col:16> '<dependent type>' contains-errors lvalue ->ndo_vflag
    |       | | `-RecoveryExpr 0x159944f68 <col:11> '<dependent type>' contains-errors lvalue
    |       | `-IntegerLiteral 0x159944fd0 <col:28> 'int' 1
    |       |-CompoundStmt 0x159945468 <col:31, line:56:2>
    |       | |-CallExpr 0x1599450b0 <line:49:6, col:26> '<dependent type>' contains-errors
    |       | | |-DeclRefExpr 0x159945010 <col:6> 'int ()' Function 0x159943198 'ND_PRINT' 'int ()'
    |       | | `-ParenExpr 0x159945090 <col:15, col:25> 'char[4]' contains-errors
    |       | |   `-BinaryOperator 0x159945070 <col:16, col:20> 'char[4]' contains-errors ','
    |       | |     |-RecoveryExpr 0x159945030 <col:16> '<dependent type>' contains-errors lvalue
    |       | |     `-StringLiteral 0x159945050 <col:20> 'char[4]' lvalue "STR"
    |       | `-CallExpr 0x159945440 <line:55:6, col:26> '<dependent type>' contains-errors
    |       |   |-DeclRefExpr 0x1599453a0 <col:6> 'int ()' Function 0x159943198 'ND_PRINT' 'int ()'
    |       |   `-ParenExpr 0x159945420 <col:15, col:25> 'char[4]' contains-errors
    |       |     `-BinaryOperator 0x159945400 <col:16, col:20> 'char[4]' contains-errors ','
    |       |       |-RecoveryExpr 0x1599453c0 <col:16> '<dependent type>' contains-errors lvalue
    |       |       `-StringLiteral 0x1599453e0 <col:20> 'char[4]' lvalue "STR"
    |       `-NullStmt 0x159945508 <line:57:17>
    |-CallExpr 0x159945660 <line:59:5, col:25> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1599455a8 <col:5> 'int ()' Function 0x159943198 'ND_PRINT' 'int ()'
    | `-ParenExpr 0x159945640 <col:14, col:24> 'char[4]' contains-errors
    |   `-BinaryOperator 0x159945620 <col:15, col:19> 'char[4]' contains-errors ','
    |     |-RecoveryExpr 0x1599455c8 <col:15> '<dependent type>' contains-errors lvalue
    |     `-StringLiteral 0x159945600 <col:19> 'char[4]' lvalue "STR"
    |-ReturnStmt 0x159945688 <line:60:5>
    |-LabelStmt 0x1599457b0 <line:61:1, line:62:25> 'trunc'
    | `-CallExpr 0x159945738 <col:5, col:25> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x159945698 <col:5> 'int ()' Function 0x159943198 'ND_PRINT' 'int ()'
    |   `-ParenExpr 0x159945718 <col:14, col:24> 'char[4]' contains-errors
    |     `-BinaryOperator 0x1599456f8 <col:15, col:19> 'char[4]' contains-errors ','
    |       |-RecoveryExpr 0x1599456b8 <col:15> '<dependent type>' contains-errors lvalue
    |       `-StringLiteral 0x1599456d8 <col:19> 'char[4]' lvalue "STR"
    `-ReturnStmt 0x1599457d0 <line:63:5>
