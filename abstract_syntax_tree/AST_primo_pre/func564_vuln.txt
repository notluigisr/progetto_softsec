`-FunctionDecl 0x129128258  line:1:1 invalid recordDependencyOnCurrentExtension 'int (const int *, int)'
  |-ParmVarDecl 0x1291280f0 <col:36, col:57> col:57 invalid object 'const int *'
  |-ParmVarDecl 0x129128170 <line:2:12, col:17> col:17 invalid isReplace 'int'
  `-CompoundStmt 0x1291422c8 <line:3:1, line:38:1>
    |-CallExpr 0x129128538 <line:5:2, col:33> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x129128470 <col:2> 'int ()' Function 0x1291283b8 'Assert' 'int ()'
    | `-BinaryOperator 0x129128518 <col:9, col:32> 'int' contains-errors '=='
    |   |-CXXDependentScopeMemberExpr 0x1291284b0 <col:9, col:17> '<dependent type>' contains-errors lvalue ->objectSubId
    |   | `-RecoveryExpr 0x129128490 <col:9> '<dependent type>' contains-errors lvalue
    |   `-IntegerLiteral 0x1291284f8 <col:32> 'int' 0
    `-IfStmt 0x1291422a8 <line:7:2, line:37:2>
      |-RecoveryExpr 0x129128578 <line:7:6> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x129142290 <line:8:2, line:37:2>
        `-IfStmt 0x129142130 <line:12:3, line:29:3>
          |-RecoveryExpr 0x129128598 <line:12:7> '<dependent type>' contains-errors lvalue
          `-CompoundStmt 0x129142118 <line:13:3, line:29:3>
            `-IfStmt 0x1291420f8 <line:17:4, line:28:4>
              |-CallExpr 0x129141938 <line:17:8, col:25> '<dependent type>' contains-errors
              | |-DeclRefExpr 0x1291418b8 <col:8> 'int ()' Function 0x129141800 'OidIsValid' 'int ()'
              | `-RecoveryExpr 0x129141918 <col:19> '<dependent type>' contains-errors lvalue
              `-CompoundStmt 0x1291420e0 <line:18:4, line:28:4>
                `-IfStmt 0x129141a20 <line:20:5, line:21:6>
                  |-BinaryOperator 0x1291419f0 <line:20:9, col:19> 'int' contains-errors '=='
                  | |-RecoveryExpr 0x1291419b0 <col:9> '<dependent type>' contains-errors lvalue
                  | `-RecoveryExpr 0x1291419d0 <col:19> '<dependent type>' contains-errors lvalue
                  `-ReturnStmt 0x129141a10 <line:21:6>
