`-FunctionDecl 0x151928288  line:1:5 invalid setTypeAdd 'int (int *, int)'
  |-ParmVarDecl 0x151928128 <col:16, col:22> col:22 referenced invalid subject 'int *'
  |-ParmVarDecl 0x1519281a8 <col:31, col:35> col:35 invalid value 'int'
  `-CompoundStmt 0x151943c20 <col:42, line:33:1>
    |-DeclStmt 0x1519283c0 <line:2:5, col:20>
    | `-VarDecl 0x151928358 <col:5, col:15> col:15 used llval 'long long'
    |-IfStmt 0x151943bc0 <line:3:5, line:31:5> has_else
    | |-BinaryOperator 0x151928498 <line:3:9, col:30> 'int' contains-errors '=='
    | | |-CXXDependentScopeMemberExpr 0x1519283f8 <col:9, col:18> '<dependent type>' contains-errors lvalue ->encoding
    | | | `-RecoveryExpr 0x1519283d8 <col:9> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x151928478 <col:30> '<dependent type>' contains-errors lvalue
    | |-CompoundStmt 0x151942390 <col:47, line:11:5>
    | | `-IfStmt 0x151942370 <line:6:9, line:10:9>
    | |   |-RecoveryExpr 0x151928770 <line:6:13> '<dependent type>' contains-errors lvalue
    | |   `-CompoundStmt 0x151942348 <col:17, line:10:9>
    | |     |-CallExpr 0x1519420c8 <line:7:13, col:43> '<dependent type>' contains-errors
    | |     | |-DeclRefExpr 0x151941eb8 <col:13> 'int ()' Function 0x151941e00 'dictSetKey' 'int ()'
    | |     | |-RecoveryExpr 0x151942088 <col:24> '<dependent type>' contains-errors lvalue
    | |     | |-RecoveryExpr 0x1519420a8 <col:27> '<dependent type>' contains-errors lvalue
    | |     | `-CallExpr 0x151942028 <col:30, col:42> '<dependent type>' contains-errors
    | |     |   |-DeclRefExpr 0x151941fe8 <col:30> 'int ()' Function 0x151941f30 'sdsdup' 'int ()'
    | |     |   `-RecoveryExpr 0x151942008 <col:37> '<dependent type>' contains-errors lvalue
    | |     |-CallExpr 0x1519422e0 <line:8:13, col:34> '<dependent type>' contains-errors
    | |     | |-DeclRefExpr 0x1519421e0 <col:13> 'int ()' Function 0x151942128 'dictSetVal' 'int ()'
    | |     | |-RecoveryExpr 0x151942280 <col:24> '<dependent type>' contains-errors lvalue
    | |     | |-RecoveryExpr 0x1519422a0 <col:27> '<dependent type>' contains-errors lvalue
    | |     | `-RecoveryExpr 0x1519422c0 <col:30> '<dependent type>' contains-errors lvalue
    | |     `-ReturnStmt 0x151942338 <line:9:13, col:20>
    | |       `-IntegerLiteral 0x151942318 <col:20> 'int' 1
    | `-IfStmt 0x151943b90 <line:11:12, line:31:5> has_else
    |   |-BinaryOperator 0x151942468 <line:11:16, col:37> 'int' contains-errors '=='
    |   | |-CXXDependentScopeMemberExpr 0x1519423c8 <col:16, col:25> '<dependent type>' contains-errors lvalue ->encoding
    |   | | `-RecoveryExpr 0x1519423a8 <col:16> '<dependent type>' contains-errors lvalue
    |   | `-RecoveryExpr 0x151942448 <col:37> '<dependent type>' contains-errors lvalue
    |   |-CompoundStmt 0x151943978 <col:58, line:29:5>
    |   | `-IfStmt 0x151943948 <line:12:9, line:28:9> has_else
    |   |   |-RecoveryExpr 0x151942648 <line:12:13, col:59> '_Bool' contains-errors
    |   |   |-CompoundStmt 0x151942bd8 <col:65, line:21:9>
    |   |   | `-IfStmt 0x151942bb8 <line:15:13, line:20:13>
    |   |   |   |-RecoveryExpr 0x151942880 <line:15:17> '_Bool' contains-errors
    |   |   |   `-CompoundStmt 0x151942ba0 <col:26, line:20:13>
    |   |   |     `-ReturnStmt 0x151942b90 <line:19:17, col:24>
    |   |   |       `-IntegerLiteral 0x151942b70 <col:24> 'int' 1
    |   |   `-CompoundStmt 0x151943930 <line:21:16, line:28:9>
    |   |     `-ReturnStmt 0x151943920 <line:27:13, col:20>
    |   |       `-IntegerLiteral 0x151943900 <col:20> 'int' 1
    |   `-CompoundStmt 0x151943b78 <line:29:12, line:31:5>
    |     `-CallExpr 0x151943b38 <line:30:9, col:26> 'int'
    |       |-ImplicitCastExpr 0x151943b20 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x151943a70 <col:9> 'int ()' Function 0x1519439b8 'serverPanic' 'int ()'
    |       `-ImplicitCastExpr 0x151943b60 <col:21> 'char *' <ArrayToPointerDecay>
    |         `-StringLiteral 0x151943ad0 <col:21> 'char[4]' lvalue "STR"
    `-ReturnStmt 0x151943c10 <line:32:5, col:12>
      `-IntegerLiteral 0x151943bf0 <col:12> 'int' 0
