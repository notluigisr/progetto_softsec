`-FunctionDecl 0x11e08d158  line:1:7 format_flags 'char *(char *, char *, unsigned long, const struct trace_print_flags *)'
  |-ParmVarDecl 0x11d84e2d8 <col:20, col:26> col:26 used buf 'char *'
  |-ParmVarDecl 0x11d84e358 <col:31, col:37> col:37 used end 'char *'
  |-ParmVarDecl 0x11d84e3d8 <col:42, col:56> col:56 used flags 'unsigned long'
  |-ParmVarDecl 0x11e08d000 <line:2:6, col:38> col:38 used names 'const struct trace_print_flags *'
  `-CompoundStmt 0x11d8647a8 <line:3:1, line:35:1>
    |-DeclStmt 0x11e08d2e8 <line:4:2, col:20>
    | `-VarDecl 0x11e08d280 <col:2, col:16> col:16 used mask 'unsigned long'
    |-DeclStmt 0x11e08d5b8 <line:5:2, line:8:3>
    | |-RecordDecl 0x11e08d300 <line:5:8, col:15> col:15 struct printf_spec
    | `-VarDecl 0x11e08d3f8 <col:2, col:27> col:27 invalid strspec 'const struct printf_spec'
    |-DeclStmt 0x11e08d880 <line:9:2, line:14:3>
    | `-VarDecl 0x11e08d620 <line:9:2, col:27> col:27 invalid numspec 'const struct printf_spec'
    |-ForStmt 0x11d8644d0 <line:16:2, line:29:2>
    | |-<<<NULL>>>
    | |-<<<NULL>>>
    | |-BinaryOperator 0x11e08d918 <line:16:10, col:26> 'int' contains-errors '&&'
    | | |-DeclRefExpr 0x11e08d898 <col:10> 'unsigned long' lvalue ParmVar 0x11d84e3d8 'flags' 'unsigned long'
    | | `-RecoveryExpr 0x11e08d8f0 <col:19, col:26> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x11e08d8b8 <col:19> 'const struct trace_print_flags *' lvalue ParmVar 0x11e08d000 'names' 'const struct trace_print_flags *'
    | |-ImplicitCastExpr 0x11e08d980 <col:32, col:37> '<dependent type>' contains-errors <LValueToRValue>
    | | `-RecoveryExpr 0x11e08d958 <col:32, col:37> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x11e08d938 <col:32> 'const struct trace_print_flags *' lvalue ParmVar 0x11e08d000 'names' 'const struct trace_print_flags *'
    | `-CompoundStmt 0x11d864498 <col:41, line:29:2>
    |   |-BinaryOperator 0x11e08da18 <line:17:3, col:17> 'unsigned long' contains-errors '='
    |   | |-DeclRefExpr 0x11e08d998 <col:3> 'unsigned long' lvalue Var 0x11e08d280 'mask' 'unsigned long'
    |   | `-RecoveryExpr 0x11e08d9f0 <col:10, col:17> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x11e08d9b8 <col:10> 'const struct trace_print_flags *' lvalue ParmVar 0x11e08d000 'names' 'const struct trace_print_flags *'
    |   |-IfStmt 0x11e08db48 <line:18:3, line:19:4>
    |   | |-BinaryOperator 0x11e08db20 <line:18:7, col:25> 'int' '!='
    |   | | |-ParenExpr 0x11e08dac8 <col:7, col:20> 'unsigned long'
    |   | | | `-BinaryOperator 0x11e08daa8 <col:8, col:16> 'unsigned long' '&'
    |   | | |   |-ImplicitCastExpr 0x11e08da78 <col:8> 'unsigned long' <LValueToRValue>
    |   | | |   | `-DeclRefExpr 0x11e08da38 <col:8> 'unsigned long' lvalue ParmVar 0x11d84e3d8 'flags' 'unsigned long'
    |   | | |   `-ImplicitCastExpr 0x11e08da90 <col:16> 'unsigned long' <LValueToRValue>
    |   | | |     `-DeclRefExpr 0x11e08da58 <col:16> 'unsigned long' lvalue Var 0x11e08d280 'mask' 'unsigned long'
    |   | | `-ImplicitCastExpr 0x11e08db08 <col:25> 'unsigned long' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x11e08dae8 <col:25> 'unsigned long' lvalue Var 0x11e08d280 'mask' 'unsigned long'
    |   | `-ContinueStmt 0x11e08db40 <line:19:4>
    |   |-BinaryOperator 0x11e08ddc0 <line:21:3, col:46> 'char *' contains-errors '='
    |   | |-DeclRefExpr 0x11e08db68 <col:3> 'char *' lvalue ParmVar 0x11d84e2d8 'buf' 'char *'
    |   | `-CallExpr 0x11e08dd80 <col:9, col:46> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x11e08dca0 <col:9> 'int ()' Function 0x11e08dbe8 'string' 'int ()'
    |   |   |-DeclRefExpr 0x11e08dcc0 <col:16> 'char *' lvalue ParmVar 0x11d84e2d8 'buf' 'char *'
    |   |   |-DeclRefExpr 0x11e08dce0 <col:21> 'char *' lvalue ParmVar 0x11d84e358 'end' 'char *'
    |   |   |-RecoveryExpr 0x11e08dd38 <col:26, col:33> '<dependent type>' contains-errors lvalue
    |   |   | `-DeclRefExpr 0x11e08dd00 <col:26> 'const struct trace_print_flags *' lvalue ParmVar 0x11e08d000 'names' 'const struct trace_print_flags *'
    |   |   `-RecoveryExpr 0x11e08dd60 <col:39> '<dependent type>' contains-errors lvalue
    |   |-CompoundAssignOperator 0x11e08de50 <line:23:3, col:13> 'unsigned long' '&=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
    |   | |-DeclRefExpr 0x11e08dde0 <col:3> 'unsigned long' lvalue ParmVar 0x11d84e3d8 'flags' 'unsigned long'
    |   | `-UnaryOperator 0x11e08de38 <col:12, col:13> 'unsigned long' prefix '~' cannot overflow
    |   |   `-ImplicitCastExpr 0x11e08de20 <col:13> 'unsigned long' <LValueToRValue>
    |   |     `-DeclRefExpr 0x11e08de00 <col:13> 'unsigned long' lvalue Var 0x11e08d280 'mask' 'unsigned long'
    |   `-IfStmt 0x11d864478 <line:24:3, line:28:3>
    |     |-ImplicitCastExpr 0x11e08dea0 <line:24:7> 'unsigned long' <LValueToRValue>
    |     | `-DeclRefExpr 0x11e08de80 <col:7> 'unsigned long' lvalue ParmVar 0x11d84e3d8 'flags' 'unsigned long'
    |     `-CompoundStmt 0x11d864458 <col:14, line:28:3>
    |       |-IfStmt 0x11d864400 <line:25:4, line:26:12>
    |       | |-BinaryOperator 0x11e08df28 <line:25:8, col:14> 'int' '<'
    |       | | |-ImplicitCastExpr 0x11e08def8 <col:8> 'char *' <LValueToRValue>
    |       | | | `-DeclRefExpr 0x11e08deb8 <col:8> 'char *' lvalue ParmVar 0x11d84e2d8 'buf' 'char *'
    |       | | `-ImplicitCastExpr 0x11e08df10 <col:14> 'char *' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x11e08ded8 <col:14> 'char *' lvalue ParmVar 0x11d84e358 'end' 'char *'
    |       | `-BinaryOperator 0x11e08dfc8 <line:26:5, col:12> 'char' '='
    |       |   |-UnaryOperator 0x11e08df80 <col:5, col:6> 'char' lvalue prefix '*' cannot overflow
    |       |   | `-ImplicitCastExpr 0x11e08df68 <col:6> 'char *' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x11e08df48 <col:6> 'char *' lvalue ParmVar 0x11d84e2d8 'buf' 'char *'
    |       |   `-ImplicitCastExpr 0x11e08dfb0 <col:12> 'char' <IntegralCast>
    |       |     `-CharacterLiteral 0x11e08df98 <col:12> 'int' 124
    |       `-UnaryOperator 0x11d864440 <line:27:4, col:7> 'char *' postfix '++'
    |         `-DeclRefExpr 0x11d864420 <col:4> 'char *' lvalue ParmVar 0x11d84e2d8 'buf' 'char *'
    |-IfStmt 0x11d864740 <line:31:2, line:32:40>
    | |-ImplicitCastExpr 0x11d864528 <line:31:6> 'unsigned long' <LValueToRValue>
    | | `-DeclRefExpr 0x11d864508 <col:6> 'unsigned long' lvalue ParmVar 0x11d84e3d8 'flags' 'unsigned long'
    | `-BinaryOperator 0x11d864720 <line:32:3, col:40> 'char *' contains-errors '='
    |   |-DeclRefExpr 0x11d864540 <col:3> 'char *' lvalue ParmVar 0x11d84e2d8 'buf' 'char *'
    |   `-CallExpr 0x11d8646e0 <col:9, col:40> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x11d864640 <col:9> 'int ()' Function 0x11d864588 'number' 'int ()'
    |     |-DeclRefExpr 0x11d864660 <col:16> 'char *' lvalue ParmVar 0x11d84e2d8 'buf' 'char *'
    |     |-DeclRefExpr 0x11d864680 <col:21> 'char *' lvalue ParmVar 0x11d84e358 'end' 'char *'
    |     |-DeclRefExpr 0x11d8646a0 <col:26> 'unsigned long' lvalue ParmVar 0x11d84e3d8 'flags' 'unsigned long'
    |     `-RecoveryExpr 0x11d8646c0 <col:33> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x11d864798 <line:34:2, col:9>
      `-ImplicitCastExpr 0x11d864780 <col:9> 'char *' <LValueToRValue>
        `-DeclRefExpr 0x11d864760 <col:9> 'char *' lvalue ParmVar 0x11d84e2d8 'buf' 'char *'
