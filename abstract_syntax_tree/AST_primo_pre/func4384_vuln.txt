`-FunctionDecl 0x137928758  line:1:12 ndp_sock_open 'int (struct ndp *)' static
  |-ParmVarDecl 0x137928648 <col:26, col:38> col:38 used ndp 'struct ndp *'
  `-CompoundStmt 0x1400094e0 <line:2:1, line:38:1>
    |-DeclStmt 0x137944cd0 <line:3:2, col:10>
    | `-VarDecl 0x137944c68 <col:2, col:6> col:6 used sock 'int'
    |-DeclStmt 0x137944d68 <line:5:2, col:9>
    | `-VarDecl 0x137944d00 <col:2, col:6> col:6 used ret 'int'
    |-DeclStmt 0x137944e00 <line:6:2, col:9>
    | `-VarDecl 0x137944d98 <col:2, col:6> col:6 used err 'int'
    |-DeclStmt 0x137944e98 <line:7:2, col:9>
    | `-VarDecl 0x137944e30 <col:2, col:6> col:6 used val 'int'
    |-BinaryOperator 0x137945158 <line:9:2, col:50> 'int' contains-errors '='
    | |-DeclRefExpr 0x137944eb0 <col:2> 'int' lvalue Var 0x137944c68 'sock' 'int'
    | `-CallExpr 0x137945120 <col:9, col:50> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x137945000 <col:9> 'int ()' Function 0x137944f48 'socket' 'int ()'
    |   |-RecoveryExpr 0x1379450c0 <col:16> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x1379450e0 <col:26> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x137945100 <col:36> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x1379453e0 <line:10:2, line:13:2>
    | |-BinaryOperator 0x1379451e8 <line:10:6, col:15> 'int' '=='
    | | |-ImplicitCastExpr 0x1379451d0 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x137945178 <col:6> 'int' lvalue Var 0x137944c68 'sock' 'int'
    | | `-UnaryOperator 0x1379451b8 <col:14, col:15> 'int' prefix '-'
    | |   `-IntegerLiteral 0x137945198 <col:15> 'int' 1
    | `-CompoundStmt 0x1379453c0 <col:18, line:13:2>
    |   |-ImplicitCastExpr 0x137945300 <line:11:3, col:17> '<dependent type>' contains-errors <LValueToRValue>
    |   | `-RecoveryExpr 0x1379452c8 <col:3, col:17> '<dependent type>' contains-errors lvalue
    |   |   |-DeclRefExpr 0x137945208 <col:3> 'int' lvalue Var 0x137944d98 'err' 'int'
    |   |   |-DeclRefExpr 0x137945228 <col:7> 'struct ndp *' lvalue ParmVar 0x137928648 'ndp' 'struct ndp *'
    |   |   `-StringLiteral 0x137945290 <col:12> 'char[4]' lvalue "STR"
    |   `-ReturnStmt 0x1379453b0 <line:12:3, col:11>
    |     `-UnaryOperator 0x137945398 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       `-ImplicitCastExpr 0x137945380 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |         `-RecoveryExpr 0x137945360 <col:11> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x137945440 <line:15:2, col:8> 'int' '='
    | |-DeclRefExpr 0x137945400 <col:2> 'int' lvalue Var 0x137944e30 'val' 'int'
    | `-IntegerLiteral 0x137945420 <col:8> 'int' 1
    |-BinaryOperator 0x137945788 <line:16:2, line:17:22> 'int' contains-errors '='
    | |-DeclRefExpr 0x137945460 <line:16:2> 'int' lvalue Var 0x137944d00 'ret' 'int'
    | `-CallExpr 0x137945740 <col:8, line:17:22> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x137945560 <line:16:8> 'int ()' Function 0x1379454a8 'setsockopt' 'int ()'
    |   |-DeclRefExpr 0x137945580 <col:19> 'int' lvalue Var 0x137944c68 'sock' 'int'
    |   |-RecoveryExpr 0x137945700 <col:25> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x137945720 <col:39> '<dependent type>' contains-errors lvalue
    |   |-UnaryOperator 0x137945620 <line:17:5, col:6> 'int *' prefix '&' cannot overflow
    |   | `-DeclRefExpr 0x1379455d0 <col:6> 'int' lvalue Var 0x137944e30 'val' 'int'
    |   `-UnaryExprOrTypeTraitExpr 0x137945678 <col:11, col:21> 'unsigned long' sizeof
    |     `-ParenExpr 0x137945658 <col:17, col:21> 'int' lvalue
    |       `-DeclRefExpr 0x137945638 <col:18> 'int' lvalue Var 0x137944e30 'val' 'int' non_odr_use_unevaluated
    |-IfStmt 0x137945a88 <line:18:2, line:22:2>
    | |-BinaryOperator 0x137945818 <line:18:6, col:14> 'int' '=='
    | | |-ImplicitCastExpr 0x137945800 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1379457a8 <col:6> 'int' lvalue Var 0x137944d00 'ret' 'int'
    | | `-UnaryOperator 0x1379457e8 <col:13, col:14> 'int' prefix '-'
    | |   `-IntegerLiteral 0x1379457c8 <col:14> 'int' 1
    | `-CompoundStmt 0x137945a60 <col:17, line:22:2>
    |   |-ImplicitCastExpr 0x1379458e8 <line:19:3, col:17> '<dependent type>' contains-errors <LValueToRValue>
    |   | `-RecoveryExpr 0x1379458b0 <col:3, col:17> '<dependent type>' contains-errors lvalue
    |   |   |-DeclRefExpr 0x137945838 <col:3> 'int' lvalue Var 0x137944d98 'err' 'int'
    |   |   |-DeclRefExpr 0x137945858 <col:7> 'struct ndp *' lvalue ParmVar 0x137928648 'ndp' 'struct ndp *'
    |   |   `-StringLiteral 0x137945878 <col:12> 'char[4]' lvalue "STR"
    |   |-BinaryOperator 0x1379459d8 <line:20:3, col:10> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x137945900 <col:3> 'int' lvalue Var 0x137944d98 'err' 'int'
    |   | `-UnaryOperator 0x1379459c0 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |   `-ImplicitCastExpr 0x1379459a8 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    |   |     `-RecoveryExpr 0x137945988 <col:10> '<dependent type>' contains-errors lvalue
    |   `-GotoStmt 0x137945a48 <line:21:3, col:8> 'close_sock' 0x1379459f8
    |-BinaryOperator 0x137945ae8 <line:24:2, col:8> 'int' '='
    | |-DeclRefExpr 0x137945aa8 <col:2> 'int' lvalue Var 0x137944e30 'val' 'int'
    | `-IntegerLiteral 0x137945ac8 <col:8> 'int' 255
    |-BinaryOperator 0x140008f30 <line:25:2, line:26:22> 'int' contains-errors '='
    | |-DeclRefExpr 0x137945b08 <line:25:2> 'int' lvalue Var 0x137944d00 'ret' 'int'
    | `-CallExpr 0x140008ee8 <col:8, line:26:22> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x137945b28 <line:25:8> 'int ()' Function 0x1379454a8 'setsockopt' 'int ()'
    |   |-DeclRefExpr 0x137945b48 <col:19> 'int' lvalue Var 0x137944c68 'sock' 'int'
    |   |-RecoveryExpr 0x140008ea8 <col:25> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x140008ec8 <col:39> '<dependent type>' contains-errors lvalue
    |   |-UnaryOperator 0x137945bb8 <line:26:5, col:6> 'int *' prefix '&' cannot overflow
    |   | `-DeclRefExpr 0x137945b98 <col:6> 'int' lvalue Var 0x137944e30 'val' 'int'
    |   `-UnaryExprOrTypeTraitExpr 0x140008e20 <col:11, col:21> 'unsigned long' sizeof
    |     `-ParenExpr 0x140008e00 <col:17, col:21> 'int' lvalue
    |       `-DeclRefExpr 0x137945bd0 <col:18> 'int' lvalue Var 0x137944e30 'val' 'int' non_odr_use_unevaluated
    |-IfStmt 0x1400091e0 <line:27:2, line:31:2>
    | |-BinaryOperator 0x140008fc0 <line:27:6, col:14> 'int' '=='
    | | |-ImplicitCastExpr 0x140008fa8 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x140008f50 <col:6> 'int' lvalue Var 0x137944d00 'ret' 'int'
    | | `-UnaryOperator 0x140008f90 <col:13, col:14> 'int' prefix '-'
    | |   `-IntegerLiteral 0x140008f70 <col:14> 'int' 1
    | `-CompoundStmt 0x1400091b8 <col:17, line:31:2>
    |   |-ImplicitCastExpr 0x140009090 <line:28:3, col:17> '<dependent type>' contains-errors <LValueToRValue>
    |   | `-RecoveryExpr 0x140009058 <col:3, col:17> '<dependent type>' contains-errors lvalue
    |   |   |-DeclRefExpr 0x140008fe0 <col:3> 'int' lvalue Var 0x137944d98 'err' 'int'
    |   |   |-DeclRefExpr 0x140009000 <col:7> 'struct ndp *' lvalue ParmVar 0x137928648 'ndp' 'struct ndp *'
    |   |   `-StringLiteral 0x140009020 <col:12> 'char[4]' lvalue "STR"
    |   |-BinaryOperator 0x140009180 <line:29:3, col:10> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x1400090a8 <col:3> 'int' lvalue Var 0x137944d98 'err' 'int'
    |   | `-UnaryOperator 0x140009168 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |   `-ImplicitCastExpr 0x140009150 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    |   |     `-RecoveryExpr 0x140009130 <col:10> '<dependent type>' contains-errors lvalue
    |   `-GotoStmt 0x1400091a0 <line:30:3, col:8> 'close_sock' 0x1379459f8
    |-BinaryOperator 0x140009280 <line:33:2, col:14> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x140009238 <col:2, col:7> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x140009200 <col:2> 'struct ndp *' lvalue ParmVar 0x137928648 'ndp' 'struct ndp *'
    | `-DeclRefExpr 0x140009260 <col:14> 'int' lvalue Var 0x137944c68 'sock' 'int'
    |-ReturnStmt 0x1400092c0 <line:34:2, col:9>
    | `-IntegerLiteral 0x1400092a0 <col:9> 'int' 0
    |-LabelStmt 0x140009478 <line:35:1, line:36:12> 'close_sock'
    | `-CallExpr 0x140009438 <col:2, col:12> 'int'
    |   |-ImplicitCastExpr 0x140009420 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x1400093b0 <col:2> 'int ()' Function 0x1400092f8 'close' 'int ()'
    |   `-ImplicitCastExpr 0x140009460 <col:8> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x1400093d0 <col:8> 'int' lvalue Var 0x137944c68 'sock' 'int'
    `-ReturnStmt 0x1400094d0 <line:37:2, col:9>
      `-ImplicitCastExpr 0x1400094b8 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x140009498 <col:9> 'int' lvalue Var 0x137944d98 'err' 'int'
