`-FunctionDecl 0x123128198  line:1:1 genrand_int32 'int (void)'
  `-CompoundStmt 0x123141b38 <line:2:1, line:15:1>
    |-DeclStmt 0x123128308 <line:3:5, col:20>
    | `-VarDecl 0x1231282a0 <col:5, col:19> col:19 used y 'unsigned long'
    |-IfStmt 0x123128598 <line:5:5, col:33>
    | |-BinaryOperator 0x1231283e0 <col:9, col:19> 'int' contains-errors '=='
    | | |-UnaryOperator 0x1231283c8 <col:9, col:11> '<dependent type>' contains-errors prefix '--' cannot overflow
    | | | `-RecoveryExpr 0x1231283a8 <col:11> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x123128368 <col:19> 'int' 0
    | `-CallExpr 0x123128578 <col:22, col:33> 'int'
    |   `-ImplicitCastExpr 0x123128560 <col:22> 'int (*)()' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x123128510 <col:22> 'int ()' Function 0x123128458 'next_state' 'int ()'
    |-BinaryOperator 0x123128690 <line:6:5, col:14> 'unsigned long' contains-errors '='
    | |-DeclRefExpr 0x1231285b8 <col:5> 'unsigned long' lvalue Var 0x1231282a0 'y' 'unsigned long'
    | `-UnaryOperator 0x123128678 <col:9, col:14> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   `-UnaryOperator 0x123128660 <col:10, col:14> '<dependent type>' contains-errors postfix '++' cannot overflow
    |     `-RecoveryExpr 0x123128640 <col:10> '<dependent type>' contains-errors lvalue
    |-CompoundAssignOperator 0x123128768 <line:9:5, col:18> 'unsigned long' '^=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
    | |-DeclRefExpr 0x1231286b0 <col:5> 'unsigned long' lvalue Var 0x1231282a0 'y' 'unsigned long'
    | `-ParenExpr 0x123128748 <col:10, col:18> 'unsigned long'
    |   `-BinaryOperator 0x123128728 <col:11, col:16> 'unsigned long' '>>'
    |     |-ImplicitCastExpr 0x123128710 <col:11> 'unsigned long' <LValueToRValue>
    |     | `-DeclRefExpr 0x1231286d0 <col:11> 'unsigned long' lvalue Var 0x1231282a0 'y' 'unsigned long'
    |     `-IntegerLiteral 0x1231286f0 <col:16> 'int' 11
    |-CompoundAssignOperator 0x123141898 <line:10:5, col:21> 'unsigned long' '^=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
    | |-DeclRefExpr 0x123128798 <col:5> 'unsigned long' lvalue Var 0x1231282a0 'y' 'unsigned long'
    | `-BinaryOperator 0x123141878 <col:10, col:21> 'unsigned long' '&'
    |   |-ParenExpr 0x123141838 <col:10, col:17> 'unsigned long'
    |   | `-BinaryOperator 0x123141818 <col:11, col:16> 'unsigned long' '<<'
    |   |   |-ImplicitCastExpr 0x123141800 <col:11> 'unsigned long' <LValueToRValue>
    |   |   | `-DeclRefExpr 0x1231287b8 <col:11> 'unsigned long' lvalue Var 0x1231282a0 'y' 'unsigned long'
    |   |   `-IntegerLiteral 0x1231287d8 <col:16> 'int' 7
    |   `-IntegerLiteral 0x123141858 <col:21> 'unsigned long' 2636928640
    |-CompoundAssignOperator 0x1231419c0 <line:11:5, col:22> 'unsigned long' '^=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
    | |-DeclRefExpr 0x1231418c8 <col:5> 'unsigned long' lvalue Var 0x1231282a0 'y' 'unsigned long'
    | `-BinaryOperator 0x1231419a0 <col:10, col:22> 'unsigned long' '&'
    |   |-ParenExpr 0x123141960 <col:10, col:18> 'unsigned long'
    |   | `-BinaryOperator 0x123141940 <col:11, col:16> 'unsigned long' '<<'
    |   |   |-ImplicitCastExpr 0x123141928 <col:11> 'unsigned long' <LValueToRValue>
    |   |   | `-DeclRefExpr 0x1231418e8 <col:11> 'unsigned long' lvalue Var 0x1231282a0 'y' 'unsigned long'
    |   |   `-IntegerLiteral 0x123141908 <col:16> 'int' 15
    |   `-IntegerLiteral 0x123141980 <col:22> 'unsigned long' 4022730752
    |-CompoundAssignOperator 0x123141aa8 <line:12:5, col:18> 'unsigned long' '^=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
    | |-DeclRefExpr 0x1231419f0 <col:5> 'unsigned long' lvalue Var 0x1231282a0 'y' 'unsigned long'
    | `-ParenExpr 0x123141a88 <col:10, col:18> 'unsigned long'
    |   `-BinaryOperator 0x123141a68 <col:11, col:16> 'unsigned long' '>>'
    |     |-ImplicitCastExpr 0x123141a50 <col:11> 'unsigned long' <LValueToRValue>
    |     | `-DeclRefExpr 0x123141a10 <col:11> 'unsigned long' lvalue Var 0x1231282a0 'y' 'unsigned long'
    |     `-IntegerLiteral 0x123141a30 <col:16> 'int' 18
    `-ReturnStmt 0x123141b28 <line:14:5, col:12>
      `-ImplicitCastExpr 0x123141b10 <col:12> 'int' <IntegralCast>
        `-ImplicitCastExpr 0x123141af8 <col:12> 'unsigned long' <LValueToRValue>
          `-DeclRefExpr 0x123141ad8 <col:12> 'unsigned long' lvalue Var 0x1231282a0 'y' 'unsigned long'
