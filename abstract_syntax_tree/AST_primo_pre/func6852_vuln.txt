`-FunctionDecl 0x1229284f8  line:1:8 invalid GetGPMFSampleRateAndTimes 'double (int, int *, double, int, double *, double *)'
  |-ParmVarDecl 0x1229280f0 <col:34, col:41> col:41 invalid handle 'int'
  |-ParmVarDecl 0x1229281a8 <col:49, col:62> col:62 invalid gs 'int *'
  |-ParmVarDecl 0x122928228 <col:66, col:73> col:73 used rate 'double'
  |-ParmVarDecl 0x1229282a8 <col:79, col:88> col:88 invalid index 'int'
  |-ParmVarDecl 0x122928358 <col:95, col:103> col:103 used in 'double *'
  |-ParmVarDecl 0x1229283d8 <col:107, col:115> col:115 used out 'double *'
  `-CompoundStmt 0x122943348 <line:2:1, line:39:1>
    |-IfStmt 0x1229286e0 <line:4:2, col:26>
    | |-BinaryOperator 0x122928690 <col:6, col:13> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x122928650 <col:6> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x122928670 <col:13> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x1229286d0 <col:19, col:26>
    |   `-FloatingLiteral 0x1229286b0 <col:26> 'double' 0.000000e+00
    |-IfStmt 0x122942520 <line:10:2, col:166>
    | |-BinaryOperator 0x1229424d0 <col:6, col:153> 'int' contains-errors '||'
    | | |-BinaryOperator 0x122942470 <col:6, col:138> 'int' contains-errors '||'
    | | | |-BinaryOperator 0x122942410 <col:6, col:127> 'int' contains-errors '||'
    | | | | |-BinaryOperator 0x122942368 <col:6, col:98> 'int' contains-errors '||'
    | | | | | |-BinaryOperator 0x1229422c0 <col:6, col:64> 'int' contains-errors '||'
    | | | | | | |-BinaryOperator 0x122942218 <col:6, col:40> 'int' contains-errors '||'
    | | | | | | | |-BinaryOperator 0x122942170 <col:6, col:12> 'int' contains-errors '=='
    | | | | | | | | |-RecoveryExpr 0x122928700 <col:6> '<dependent type>' contains-errors lvalue
    | | | | | | | | `-RecoveryExpr 0x122942150 <col:12> '<dependent type>' contains-errors lvalue
    | | | | | | | `-BinaryOperator 0x1229421f8 <col:20, col:40> 'int' contains-errors '=='
    | | | | | | |   |-CXXDependentScopeMemberExpr 0x1229421b0 <col:20, col:25> '<dependent type>' contains-errors lvalue ->metaoffsets
    | | | | | | |   | `-RecoveryExpr 0x122942190 <col:20> '<dependent type>' contains-errors lvalue
    | | | | | | |   `-IntegerLiteral 0x1229287b8 <col:40> 'int' 0
    | | | | | | `-BinaryOperator 0x1229422a0 <col:45, col:64> 'int' contains-errors '=='
    | | | | | |   |-CXXDependentScopeMemberExpr 0x122942258 <col:45, col:50> '<dependent type>' contains-errors lvalue ->indexcount
    | | | | | |   | `-RecoveryExpr 0x122942238 <col:45> '<dependent type>' contains-errors lvalue
    | | | | | |   `-IntegerLiteral 0x122941e80 <col:64> 'int' 0
    | | | | | `-BinaryOperator 0x122942348 <col:69, col:98> 'int' contains-errors '=='
    | | | | |   |-CXXDependentScopeMemberExpr 0x122942300 <col:69, col:74> '<dependent type>' contains-errors lvalue ->basemetadataduration
    | | | | |   | `-RecoveryExpr 0x1229422e0 <col:69> '<dependent type>' contains-errors lvalue
    | | | | |   `-IntegerLiteral 0x122941f40 <col:98> 'int' 0
    | | | | `-BinaryOperator 0x1229423f0 <col:103, col:127> 'int' contains-errors '=='
    | | | |   |-CXXDependentScopeMemberExpr 0x1229423a8 <col:103, col:108> '<dependent type>' contains-errors lvalue ->meta_clockdemon
    | | | |   | `-RecoveryExpr 0x122942388 <col:103> '<dependent type>' contains-errors lvalue
    | | | |   `-IntegerLiteral 0x122942000 <col:127> 'int' 0
    | | | `-BinaryOperator 0x122942450 <col:132, col:138> 'int' contains-errors '=='
    | | |   |-DeclRefExpr 0x122942060 <col:132> 'double *' lvalue ParmVar 0x122928358 'in' 'double *'
    | | |   `-RecoveryExpr 0x122942430 <col:138> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x1229424b0 <col:146, col:153> 'int' contains-errors '=='
    | |   |-DeclRefExpr 0x1229420d8 <col:146> 'double *' lvalue ParmVar 0x1229283d8 'out' 'double *'
    | |   `-RecoveryExpr 0x122942490 <col:153> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x122942510 <col:159, col:166>
    |   `-FloatingLiteral 0x1229424f0 <col:166> 'double' 0.000000e+00
    |-IfStmt 0x122942bd0 <line:17:2, line:21:2>
    | |-BinaryOperator 0x122942a60 <line:17:6, col:14> 'int' '=='
    | | |-ImplicitCastExpr 0x122942a48 <col:6> 'double' <LValueToRValue>
    | | | `-DeclRefExpr 0x122942a08 <col:6> 'double' lvalue ParmVar 0x122928228 'rate' 'double'
    | | `-FloatingLiteral 0x122942a28 <col:14> 'double' 0.000000e+00
    | `-CompoundStmt 0x122942bb0 <line:18:2, line:21:2>
    |   |-BinaryOperator 0x122942b60 <line:19:3, col:16> 'double' '='
    |   | |-UnaryOperator 0x122942ab8 <col:3, col:4> 'double' lvalue prefix '*' cannot overflow
    |   | | `-ImplicitCastExpr 0x122942aa0 <col:4> 'double *' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x122942a80 <col:4> 'double *' lvalue ParmVar 0x122928358 'in' 'double *'
    |   | `-BinaryOperator 0x122942b40 <col:9, col:16> 'double' '='
    |   |   |-UnaryOperator 0x122942b08 <col:9, col:10> 'double' lvalue prefix '*' cannot overflow
    |   |   | `-ImplicitCastExpr 0x122942af0 <col:10> 'double *' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x122942ad0 <col:10> 'double *' lvalue ParmVar 0x1229283d8 'out' 'double *'
    |   |   `-FloatingLiteral 0x122942b20 <col:16> 'double' 0.000000e+00
    |   `-ReturnStmt 0x122942ba0 <line:20:3, col:10>
    |     `-FloatingLiteral 0x122942b80 <col:10> 'double' 0.000000e+00
    |-IfStmt 0x1229432d0 <line:24:2, line:37:2> has_else
    | |-RecoveryExpr 0x122942e20 <line:24:6, col:87> '_Bool' contains-errors
    | |-CompoundStmt 0x1229430d0 <line:25:2, line:31:2>
    | `-CompoundStmt 0x1229432c0 <line:33:2, line:37:2>
    `-ReturnStmt 0x122943338 <line:38:2, col:9>
      `-ImplicitCastExpr 0x122943320 <col:9> 'double' <LValueToRValue>
        `-DeclRefExpr 0x122943300 <col:9> 'double' lvalue ParmVar 0x122928228 'rate' 'double'
