`-FunctionDecl 0x15a1281f8  line:1:17 invalid xt_event_check 'int (int *)' static
  |-ParmVarDecl 0x15a128128 <col:32, col:41> col:41 invalid source 'int *'
  `-CompoundStmt 0x15a1287a8 <line:2:1, line:9:1>
    |-IfStmt 0x15a128740 <line:3:3, line:7:3>
    | |-BinaryOperator 0x15a1283c8 <line:3:7, col:34> '<dependent type>' contains-errors '&'
    | | |-CXXDependentScopeMemberExpr 0x15a128360 <col:7, col:24> '<dependent type>' contains-errors lvalue .revents
    | | | `-RecoveryExpr 0x15a128340 <col:7> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x15a1283a8 <col:34> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x15a128720 <col:43, line:7:3>
    |   |-DeclStmt 0x15a128668 <line:4:2, col:40>
    |   | `-VarDecl 0x15a128400 <col:2, col:39> col:6 used mask 'int' cinit
    |   |   `-CallExpr 0x15a128640 <col:13, col:39> '<dependent type>' contains-errors
    |   |     |-DeclRefExpr 0x15a1285c0 <col:13> 'int ()' Function 0x15a128508 'XtAppPending' 'int ()'
    |   |     `-RecoveryExpr 0x15a128620 <col:26> '<dependent type>' contains-errors lvalue
    |   `-IfStmt 0x15a128700 <line:5:2, line:6:11>
    |     |-ImplicitCastExpr 0x15a1286a0 <line:5:6> 'int' contains-errors <LValueToRValue>
    |     | `-DeclRefExpr 0x15a128680 <col:6> 'int' contains-errors lvalue Var 0x15a128400 'mask' 'int'
    |     `-ReturnStmt 0x15a1286f0 <line:6:4, col:11>
    |       `-RecoveryExpr 0x15a1286d0 <col:11> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x15a128798 <line:8:3, col:10>
      `-RecoveryExpr 0x15a128778 <col:10> '<dependent type>' contains-errors lvalue
