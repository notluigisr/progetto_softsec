`-FunctionDecl 0x1411113a8  line:1:8 PHP_NAMED_FUNCTION 'int (int)' static
  |-ParmVarDecl 0x1411112d8 <col:27> col:27 zif_zip_entry_read 'int'
  `-CompoundStmt 0x14112a7d8 <line:2:1, line:35:1>
    |-DeclStmt 0x1411115a0 <line:7:2, col:11>
    | `-VarDecl 0x141111518 <col:2, col:10> col:6 used n 'int' cinit
    |   `-IntegerLiteral 0x141111580 <col:10> 'int' 0
    |-IfStmt 0x141129d38 <line:9:2, line:11:2>
    | |-BinaryOperator 0x141129cf0 <line:9:6, col:73> 'int' contains-errors '=='
    | | |-CallExpr 0x141129c90 <col:6, col:68> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x1411116d0 <col:6> 'int ()' Function 0x141111618 'zend_parse_parameters' 'int ()'
    | | | |-CallExpr 0x141129c00 <col:28, col:42> 'int'
    | | | | `-ImplicitCastExpr 0x1411119d0 <col:28> 'int (*)()' <FunctionToPointerDecay>
    | | | |   `-DeclRefExpr 0x1411117d0 <col:28> 'int ()' Function 0x141111718 'ZEND_NUM_ARGS' 'int ()'
    | | | |-StringLiteral 0x1411118a0 <col:45> 'char[4]' lvalue "STR"
    | | | |-UnaryOperator 0x141129c40 <col:52, col:53> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | | | `-RecoveryExpr 0x141129c20 <col:53> '<dependent type>' contains-errors lvalue
    | | | `-UnaryOperator 0x141129c78 <col:64, col:65> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | |   `-RecoveryExpr 0x141129c58 <col:65> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x141129cd0 <col:73> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x141129d20 <col:82, line:11:2>
    |   `-ReturnStmt 0x141129d10 <line:10:3>
    |-IfStmt 0x141129dd0 <line:13:2, line:15:2>
    | |-RecoveryExpr 0x141129da0 <line:13:6, col:111> '_Bool' contains-errors
    | `-CompoundStmt 0x141129dc0 <col:117, line:15:2>
    |-IfStmt 0x141129e60 <line:17:2, line:19:2>
    | |-RecoveryExpr 0x141129e10 <line:17:6, col:13> '_Bool' contains-errors
    | `-CompoundStmt 0x141129e50 <col:16, line:19:2>
    `-IfStmt 0x14112a7a8 <line:21:2, line:34:2> has_else
      |-RecoveryExpr 0x141129e80 <line:21:6, col:15> '_Bool' contains-errors
      |-CompoundStmt 0x14112a780 <col:19, line:32:2>
      | `-IfStmt 0x14112a750 <line:24:3, line:31:3> has_else
      |   |-BinaryOperator 0x14112a338 <line:24:7, col:11> 'int' '>'
      |   | |-ImplicitCastExpr 0x14112a320 <col:7> 'int' <LValueToRValue>
      |   | | `-DeclRefExpr 0x14112a2e0 <col:7> 'int' lvalue Var 0x141111518 'n' 'int'
      |   | `-IntegerLiteral 0x14112a300 <col:11> 'int' 0
      |   |-CompoundStmt 0x14112a4f0 <col:14, line:28:3>
      |   `-CompoundStmt 0x14112a738 <col:10, line:31:3>
      |     `-CallExpr 0x14112a718 <line:30:4, col:24> 'int'
      |       `-ImplicitCastExpr 0x14112a700 <col:4> 'int (*)()' <FunctionToPointerDecay>
      |         `-DeclRefExpr 0x14112a6e0 <col:4> 'int ()' Function 0x14112a628 'RETURN_EMPTY_STRING' 'int ()'
      `-CompoundStmt 0x14112a798 <line:32:9, line:34:2>
