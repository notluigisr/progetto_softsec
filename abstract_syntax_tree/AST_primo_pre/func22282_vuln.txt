`-FunctionDecl 0x145128cc8  line:1:12 invalid send_palette_rect 'int (int *, int, int, int, int, int *)' static
  |-ParmVarDecl 0x145128928 <col:30, col:40> col:40 referenced invalid vs 'int *'
  |-ParmVarDecl 0x1451289a8 <col:44, col:48> col:48 x 'int'
  |-ParmVarDecl 0x145128a28 <col:51, col:55> col:55 y 'int'
  |-ParmVarDecl 0x145128aa8 <line:2:30, col:34> col:34 used w 'int'
  |-ParmVarDecl 0x145128b28 <col:37, col:41> col:41 used h 'int'
  |-ParmVarDecl 0x145128ba8 <col:44, col:56> col:56 invalid palette 'int *'
  `-CompoundStmt 0x145144ac0 <line:3:1, line:60:1>
    |-DeclStmt 0x145128e40 <line:4:5, col:19>
    | `-VarDecl 0x145128db8 <col:5, col:18> col:9 used stream 'int' cinit
    |   `-IntegerLiteral 0x145128e20 <col:18> 'int' 2
    |-DeclStmt 0x145128fa0 <line:5:5, col:65>
    | `-VarDecl 0x145128e70 <col:5, col:9> col:9 used level 'int'
    |-DeclStmt 0x145142068 <line:6:5, col:15>
    | `-VarDecl 0x145142000 <col:5, col:9> col:9 used colors 'int'
    |-BinaryOperator 0x145142268 <line:15:5, col:34> 'int' contains-errors '='
    | |-DeclRefExpr 0x145142080 <col:5> 'int' lvalue Var 0x145142000 'colors' 'int'
    | `-CallExpr 0x145142240 <col:14, col:34> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x145142200 <col:14> 'int ()' Function 0x145142148 'palette_size' 'int ()'
    |   `-RecoveryExpr 0x145142220 <col:27> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x1451424c8 <line:18:5, col:46> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x145142420 <col:5> 'int ()' Function 0x1451422b0 'vnc_write_u8' 'int ()'
    | |-RecoveryExpr 0x145142440 <col:18> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x1451424a8 <col:22> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x1451425b0 <line:19:5, col:32> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1451424f8 <col:5> 'int ()' Function 0x1451422b0 'vnc_write_u8' 'int ()'
    | |-RecoveryExpr 0x145142518 <col:18> '<dependent type>' contains-errors lvalue
    | `-BinaryOperator 0x145142590 <col:22, col:31> 'int' '-'
    |   |-ImplicitCastExpr 0x145142578 <col:22> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x145142538 <col:22> 'int' lvalue Var 0x145142000 'colors' 'int'
    |   `-IntegerLiteral 0x145142558 <col:31> 'int' 1
    `-SwitchStmt 0x1451426f0 <line:21:5, line:53:5>
      |-ImplicitCastExpr 0x1451426d8 <line:21:12, col:28> '<dependent type>' contains-errors <LValueToRValue>
      | `-CXXDependentScopeMemberExpr 0x145142690 <col:12, col:28> '<dependent type>' contains-errors lvalue .bytes_per_pixel
      |   `-CXXDependentScopeMemberExpr 0x145142648 <col:12, col:25> '<dependent type>' contains-errors lvalue .pf
      |     `-CXXDependentScopeMemberExpr 0x145142600 <col:12, col:16> '<dependent type>' contains-errors lvalue ->clientds
      |       `-RecoveryExpr 0x1451425e0 <col:12> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x145144758 <col:45, line:53:5>
        |-CaseStmt 0x145142738 <line:22:5, line:39:5>
        | |-IntegerLiteral 0x145142718 <line:22:10> 'int' 4
        | `-CompoundStmt 0x1451440e0 <line:23:5, line:39:5>
        |   |-BinaryOperator 0x145142830 <line:24:9, col:28> '<dependent type>' contains-errors ','
        |   | |-UnaryExprOrTypeTraitExpr 0x1451427f0 <col:9, col:16> 'unsigned long' contains-errors sizeof
        |   | | `-RecoveryExpr 0x1451427d0 <col:16> '<dependent type>' contains-errors lvalue
        |   | `-RecoveryExpr 0x145142810 <col:28> '<dependent type>' contains-errors lvalue
        |   |-DeclStmt 0x145142e28 <line:26:9, col:64>
        |   | |-RecordDecl 0x145142850 <col:9, col:16> col:16 struct palette_cb_priv
        |   | `-VarDecl 0x145142948 <col:9, col:32> col:32 invalid priv 'struct palette_cb_priv'
        |   |-CallExpr 0x1451438c8 <line:29:9, col:51> '<dependent type>' contains-errors
        |   | |-DeclRefExpr 0x145142fd0 <col:9> 'int ()' Function 0x145142f18 'palette_iter' 'int ()'
        |   | |-RecoveryExpr 0x145143800 <col:22> '<dependent type>' contains-errors lvalue
        |   | |-RecoveryExpr 0x1451438a8 <col:31> '<dependent type>' contains-errors lvalue
        |   | `-UnaryOperator 0x145143858 <col:46, col:47> '<dependent type>' contains-errors prefix '&' cannot overflow
        |   |   `-RecoveryExpr 0x145143838 <col:47> '<dependent type>' contains-errors lvalue
        |   |-IfStmt 0x145143dd8 <line:32:9, line:35:9>
        |   | |-CXXDependentScopeMemberExpr 0x145143ab8 <line:32:13, col:23> '<dependent type>' contains-errors lvalue .pixel24
        |   | | `-CXXDependentScopeMemberExpr 0x145143a70 <col:13, col:17> '<dependent type>' contains-errors lvalue ->tight
        |   | |   `-RecoveryExpr 0x145143a50 <col:13> '<dependent type>' contains-errors lvalue
        |   | `-CompoundStmt 0x145143dc8 <col:32, line:35:9>
        |   |-CallExpr 0x1451440a0 <line:37:9, col:75> '<dependent type>' contains-errors
        |   | |-DeclRefExpr 0x145143ed8 <col:9> 'int ()' Function 0x145143e20 'tight_encode_indexed_rect32' 'int ()'
        |   | |-CXXDependentScopeMemberExpr 0x145143fa8 <col:37, col:53> '<dependent type>' contains-errors lvalue .buffer
        |   | | `-CXXDependentScopeMemberExpr 0x145143f60 <col:37, col:47> '<dependent type>' contains-errors lvalue .tight
        |   | |   `-CXXDependentScopeMemberExpr 0x145143f18 <col:37, col:41> '<dependent type>' contains-errors lvalue ->tight
        |   | |     `-RecoveryExpr 0x145143ef8 <col:37> '<dependent type>' contains-errors lvalue
        |   | |-BinaryOperator 0x145144060 <col:61, col:65> 'int' '*'
        |   | | |-ImplicitCastExpr 0x145144030 <col:61> 'int' <LValueToRValue>
        |   | | | `-DeclRefExpr 0x145143ff0 <col:61> 'int' lvalue ParmVar 0x145128aa8 'w' 'int'
        |   | | `-ImplicitCastExpr 0x145144048 <col:65> 'int' <LValueToRValue>
        |   | |   `-DeclRefExpr 0x145144010 <col:65> 'int' lvalue ParmVar 0x145128b28 'h' 'int'
        |   | `-RecoveryExpr 0x145144080 <col:68> '<dependent type>' contains-errors lvalue
        |   `-BreakStmt 0x1451440d8 <line:38:9>
        |-CaseStmt 0x145144140 <line:40:5, line:49:5>
        | |-IntegerLiteral 0x145144120 <line:40:10> 'int' 2
        | `-CompoundStmt 0x1451446c0 <line:41:5, line:49:5>
        |   |-DeclStmt 0x145144308 <line:43:9, col:64>
        |   | |-RecordDecl 0x145144168 <col:9, col:16> col:16 struct palette_cb_priv
        |   | `-VarDecl 0x145144268 <col:9, col:32> col:32 invalid priv 'struct palette_cb_priv'
        |   |-CallExpr 0x145144680 <line:47:9, col:75> '<dependent type>' contains-errors
        |   | |-DeclRefExpr 0x1451444b8 <col:9> 'int ()' Function 0x145144400 'tight_encode_indexed_rect16' 'int ()'
        |   | |-CXXDependentScopeMemberExpr 0x145144588 <col:37, col:53> '<dependent type>' contains-errors lvalue .buffer
        |   | | `-CXXDependentScopeMemberExpr 0x145144540 <col:37, col:47> '<dependent type>' contains-errors lvalue .tight
        |   | |   `-CXXDependentScopeMemberExpr 0x1451444f8 <col:37, col:41> '<dependent type>' contains-errors lvalue ->tight
        |   | |     `-RecoveryExpr 0x1451444d8 <col:37> '<dependent type>' contains-errors lvalue
        |   | |-BinaryOperator 0x145144640 <col:61, col:65> 'int' '*'
        |   | | |-ImplicitCastExpr 0x145144610 <col:61> 'int' <LValueToRValue>
        |   | | | `-DeclRefExpr 0x1451445d0 <col:61> 'int' lvalue ParmVar 0x145128aa8 'w' 'int'
        |   | | `-ImplicitCastExpr 0x145144628 <col:65> 'int' <LValueToRValue>
        |   | |   `-DeclRefExpr 0x1451445f0 <col:65> 'int' lvalue ParmVar 0x145128b28 'h' 'int'
        |   | `-RecoveryExpr 0x145144660 <col:68> '<dependent type>' contains-errors lvalue
        |   `-BreakStmt 0x1451446b8 <line:48:9>
        |-DefaultStmt 0x145144730 <line:50:5, line:51:17>
        | `-ReturnStmt 0x145144720 <col:9, col:17>
        |   `-UnaryOperator 0x145144708 <col:16, col:17> 'int' prefix '-'
        |     `-IntegerLiteral 0x1451446e8 <col:17> 'int' 1
        `-BreakStmt 0x145144750 <line:52:9>
