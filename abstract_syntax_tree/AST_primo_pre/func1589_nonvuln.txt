`-FunctionDecl 0x131123438  line:1:1 TEST 'int (int, int)'
  |-ParmVarDecl 0x131123358 <col:6> col:6 ArrayOpsTest 'int'
  |-ParmVarDecl 0x1311232d8 <col:20> col:20 InvertPermutation_ShapeFn 'int'
  `-CompoundStmt 0x132809a18 <col:47, line:6:1>
    |-CallExpr 0x131123750 <line:3:3, col:21> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x131123660 <col:3> 'int ()' Function 0x1311235a8 'INFER_OK' 'int ()'
    | |-RecoveryExpr 0x131123730 <col:12> '<dependent type>' contains-errors lvalue
    | `-StringLiteral 0x1311236e0 <col:16> 'char[4]' lvalue "STR"
    |-CallExpr 0x131123828 <line:4:3, col:21> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x131123780 <col:3> 'int ()' Function 0x1311235a8 'INFER_OK' 'int ()'
    | |-RecoveryExpr 0x131123808 <col:12> '<dependent type>' contains-errors lvalue
    | `-StringLiteral 0x1311237b8 <col:16> 'char[4]' lvalue "STR"
    `-CallExpr 0x1311239c8 <line:5:3, col:20> 'int'
      |-ImplicitCastExpr 0x1311239b0 <col:3> 'int (*)()' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x131123938 <col:3> 'int ()' Function 0x131123880 'INFER_ERROR' 'int ()'
      `-ImplicitCastExpr 0x132809a00 <col:15> 'char *' <ArrayToPointerDecay>
        `-StringLiteral 0x131123958 <col:15> 'char[4]' lvalue "STR"
