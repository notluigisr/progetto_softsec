`-FunctionDecl 0x15900de88  line:1:1 invalid parse_iso_time 'int (const char *, int *)'
  |-ParmVarDecl 0x15900dcd8 <col:16, col:28> col:28 used cp 'const char *'
  |-ParmVarDecl 0x15900dda8 <col:32, col:40> col:40 invalid t 'int *'
  `-CompoundStmt 0x159029968 <line:2:1, line:34:1>
    |-DeclStmt 0x159027528 <line:3:3, col:18>
    | |-RecordDecl 0x15900df40 <col:3, col:10> col:10 struct tm
    | `-VarDecl 0x15900e038 <col:3, col:13> col:13 referenced invalid st_tm 'struct tm'
    |-DeclStmt 0x1590279c8 <line:4:3, col:66>
    | |-VarDecl 0x159027558 <col:3, col:21> col:16 used year 'unsigned int' cinit
    | | `-ImplicitCastExpr 0x1590275e0 <col:21> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x1590275c0 <col:21> 'int' 0
    | |-VarDecl 0x159027610 <col:3, col:30> col:24 used month 'unsigned int' cinit
    | | `-ImplicitCastExpr 0x159027698 <col:30> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x159027678 <col:30> 'int' 0
    | |-VarDecl 0x1590276c8 <col:3, col:37> col:33 used day 'unsigned int' cinit
    | | `-ImplicitCastExpr 0x159027750 <col:37> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x159027730 <col:37> 'int' 0
    | |-VarDecl 0x159027780 <col:3, col:45> col:40 used hour 'unsigned int' cinit
    | | `-ImplicitCastExpr 0x159027808 <col:45> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x1590277e8 <col:45> 'int' 0
    | |-VarDecl 0x159027838 <col:3, col:55> col:48 used minute 'unsigned int' cinit
    | | `-ImplicitCastExpr 0x1590278c0 <col:55> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x1590278a0 <col:55> 'int' 0
    | `-VarDecl 0x1590278f0 <col:3, col:65> col:58 used second 'unsigned int' cinit
    |   `-ImplicitCastExpr 0x159027978 <col:65> 'unsigned int' <IntegralCast>
    |     `-IntegerLiteral 0x159027958 <col:65> 'int' 0
    |-IfStmt 0x15a009078 <line:5:3, line:11:3>
    | |-BinaryOperator 0x159027e58 <line:5:7, line:6:50> 'int' '<'
    | | |-CallExpr 0x159027da8 <line:5:7, line:6:46> 'int'
    | | | |-ImplicitCastExpr 0x159027d90 <line:5:7> 'int (*)()' <FunctionToPointerDecay>
    | | | | `-DeclRefExpr 0x159027b40 <col:7> 'int ()' Function 0x159027a88 'tor_sscanf' 'int ()'
    | | | |-ImplicitCastExpr 0x159027e08 <col:18> 'const char *' <LValueToRValue>
    | | | | `-DeclRefExpr 0x159027b60 <col:18> 'const char *' lvalue ParmVar 0x15900dcd8 'cp' 'const char *'
    | | | |-ImplicitCastExpr 0x159027e20 <col:22> 'char *' <ArrayToPointerDecay>
    | | | | `-StringLiteral 0x159027bc0 <col:22> 'char[4]' lvalue "STR"
    | | | |-UnaryOperator 0x159027c30 <col:29, col:30> 'unsigned int *' prefix '&' cannot overflow
    | | | | `-DeclRefExpr 0x159027be0 <col:30> 'unsigned int' lvalue Var 0x159027558 'year' 'unsigned int'
    | | | |-UnaryOperator 0x159027c68 <col:36, col:37> 'unsigned int *' prefix '&' cannot overflow
    | | | | `-DeclRefExpr 0x159027c48 <col:37> 'unsigned int' lvalue Var 0x159027610 'month' 'unsigned int'
    | | | |-UnaryOperator 0x159027ca0 <line:6:17, col:18> 'unsigned int *' prefix '&' cannot overflow
    | | | | `-DeclRefExpr 0x159027c80 <col:18> 'unsigned int' lvalue Var 0x1590276c8 'day' 'unsigned int'
    | | | |-UnaryOperator 0x159027cd8 <col:23, col:24> 'unsigned int *' prefix '&' cannot overflow
    | | | | `-DeclRefExpr 0x159027cb8 <col:24> 'unsigned int' lvalue Var 0x159027780 'hour' 'unsigned int'
    | | | |-UnaryOperator 0x159027d10 <col:30, col:31> 'unsigned int *' prefix '&' cannot overflow
    | | | | `-DeclRefExpr 0x159027cf0 <col:31> 'unsigned int' lvalue Var 0x159027838 'minute' 'unsigned int'
    | | | `-UnaryOperator 0x159027d48 <col:39, col:40> 'unsigned int *' prefix '&' cannot overflow
    | | |   `-DeclRefExpr 0x159027d28 <col:40> 'unsigned int' lvalue Var 0x1590278f0 'second' 'unsigned int'
    | | `-IntegerLiteral 0x159027e38 <col:50> 'int' 6
    | `-CompoundStmt 0x15a009048 <col:53, line:11:3>
    |   |-DeclStmt 0x159028088 <line:7:5, col:32>
    |   | `-VarDecl 0x159027e90 <col:5, col:31> col:11 used esc 'char *' cinit
    |   |   `-ImplicitCastExpr 0x159028070 <col:17, col:31> 'char *' <IntegralToPointer>
    |   |     `-CallExpr 0x159028030 <col:17, col:31> 'int'
    |   |       |-ImplicitCastExpr 0x159028018 <col:17> 'int (*)()' <FunctionToPointerDecay>
    |   |       | `-DeclRefExpr 0x159027fd8 <col:17> 'int ()' Function 0x159027f20 'esc_for_log' 'int ()'
    |   |       `-ImplicitCastExpr 0x159028058 <col:29> 'const char *' <LValueToRValue>
    |   |         `-DeclRefExpr 0x159027ff8 <col:29> 'const char *' lvalue ParmVar 0x15900dcd8 'cp' 'const char *'
    |   |-CallExpr 0x159028250 <line:8:5, col:36> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x159028180 <col:5> 'int ()' Function 0x1590280c8 'log_warn' 'int ()'
    |   | |-RecoveryExpr 0x159028230 <col:14> '<dependent type>' contains-errors lvalue
    |   | |-StringLiteral 0x1590281b8 <col:26> 'char[4]' lvalue "STR"
    |   | `-DeclRefExpr 0x1590281d8 <col:33> 'char *' lvalue Var 0x159027e90 'esc' 'char *'
    |   |-CallExpr 0x1590283c0 <line:9:5, col:17> 'int'
    |   | |-ImplicitCastExpr 0x1590283a8 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x159028368 <col:5> 'int ()' Function 0x1590282b0 'tor_free' 'int ()'
    |   | `-ImplicitCastExpr 0x1590283e8 <col:14> 'char *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x159028388 <col:14> 'char *' lvalue Var 0x159027e90 'esc' 'char *'
    |   `-ReturnStmt 0x15a009038 <line:10:5, col:13>
    |     `-UnaryOperator 0x15a009020 <col:12, col:13> 'int' prefix '-'
    |       `-IntegerLiteral 0x15a009000 <col:13> 'int' 1
    |-IfStmt 0x15a009958 <line:12:3, line:18:3>
    | |-BinaryOperator 0x15a0095d8 <line:12:7, line:13:48> 'int' '||'
    | | |-BinaryOperator 0x15a009528 <line:12:7, line:13:33> 'int' '||'
    | | | |-BinaryOperator 0x15a009478 <line:12:7, line:13:18> 'int' '||'
    | | | | |-BinaryOperator 0x15a0093c8 <line:12:7, col:66> 'int' '||'
    | | | | | |-BinaryOperator 0x15a009318 <col:7, col:55> 'int' '||'
    | | | | | | |-BinaryOperator 0x15a009268 <col:7, col:43> 'int' '||'
    | | | | | | | |-BinaryOperator 0x15a0091b8 <col:7, col:30> 'int' '||'
    | | | | | | | | |-BinaryOperator 0x15a009108 <col:7, col:14> 'int' '<'
    | | | | | | | | | |-ImplicitCastExpr 0x15a0090d8 <col:7> 'unsigned int' <LValueToRValue>
    | | | | | | | | | | `-DeclRefExpr 0x15a009098 <col:7> 'unsigned int' lvalue Var 0x159027558 'year' 'unsigned int'
    | | | | | | | | | `-ImplicitCastExpr 0x15a0090f0 <col:14> 'unsigned int' <IntegralCast>
    | | | | | | | | |   `-IntegerLiteral 0x15a0090b8 <col:14> 'int' 1970
    | | | | | | | | `-BinaryOperator 0x15a009198 <col:22, col:30> 'int' '<'
    | | | | | | | |   |-ImplicitCastExpr 0x15a009168 <col:22> 'unsigned int' <LValueToRValue>
    | | | | | | | |   | `-DeclRefExpr 0x15a009128 <col:22> 'unsigned int' lvalue Var 0x159027610 'month' 'unsigned int'
    | | | | | | | |   `-ImplicitCastExpr 0x15a009180 <col:30> 'unsigned int' <IntegralCast>
    | | | | | | | |     `-IntegerLiteral 0x15a009148 <col:30> 'int' 1
    | | | | | | | `-BinaryOperator 0x15a009248 <col:35, col:43> 'int' '>'
    | | | | | | |   |-ImplicitCastExpr 0x15a009218 <col:35> 'unsigned int' <LValueToRValue>
    | | | | | | |   | `-DeclRefExpr 0x15a0091d8 <col:35> 'unsigned int' lvalue Var 0x159027610 'month' 'unsigned int'
    | | | | | | |   `-ImplicitCastExpr 0x15a009230 <col:43> 'unsigned int' <IntegralCast>
    | | | | | | |     `-IntegerLiteral 0x15a0091f8 <col:43> 'int' 12
    | | | | | | `-BinaryOperator 0x15a0092f8 <col:49, col:55> 'int' '<'
    | | | | | |   |-ImplicitCastExpr 0x15a0092c8 <col:49> 'unsigned int' <LValueToRValue>
    | | | | | |   | `-DeclRefExpr 0x15a009288 <col:49> 'unsigned int' lvalue Var 0x1590276c8 'day' 'unsigned int'
    | | | | | |   `-ImplicitCastExpr 0x15a0092e0 <col:55> 'unsigned int' <IntegralCast>
    | | | | | |     `-IntegerLiteral 0x15a0092a8 <col:55> 'int' 1
    | | | | | `-BinaryOperator 0x15a0093a8 <col:60, col:66> 'int' '>'
    | | | | |   |-ImplicitCastExpr 0x15a009378 <col:60> 'unsigned int' <LValueToRValue>
    | | | | |   | `-DeclRefExpr 0x15a009338 <col:60> 'unsigned int' lvalue Var 0x1590276c8 'day' 'unsigned int'
    | | | | |   `-ImplicitCastExpr 0x15a009390 <col:66> 'unsigned int' <IntegralCast>
    | | | | |     `-IntegerLiteral 0x15a009358 <col:66> 'int' 31
    | | | | `-BinaryOperator 0x15a009458 <line:13:11, col:18> 'int' '>'
    | | | |   |-ImplicitCastExpr 0x15a009428 <col:11> 'unsigned int' <LValueToRValue>
    | | | |   | `-DeclRefExpr 0x15a0093e8 <col:11> 'unsigned int' lvalue Var 0x159027780 'hour' 'unsigned int'
    | | | |   `-ImplicitCastExpr 0x15a009440 <col:18> 'unsigned int' <IntegralCast>
    | | | |     `-IntegerLiteral 0x15a009408 <col:18> 'int' 23
    | | | `-BinaryOperator 0x15a009508 <col:24, col:33> 'int' '>'
    | | |   |-ImplicitCastExpr 0x15a0094d8 <col:24> 'unsigned int' <LValueToRValue>
    | | |   | `-DeclRefExpr 0x15a009498 <col:24> 'unsigned int' lvalue Var 0x159027838 'minute' 'unsigned int'
    | | |   `-ImplicitCastExpr 0x15a0094f0 <col:33> 'unsigned int' <IntegralCast>
    | | |     `-IntegerLiteral 0x15a0094b8 <col:33> 'int' 59
    | | `-BinaryOperator 0x15a0095b8 <col:39, col:48> 'int' '>'
    | |   |-ImplicitCastExpr 0x15a009588 <col:39> 'unsigned int' <LValueToRValue>
    | |   | `-DeclRefExpr 0x15a009548 <col:39> 'unsigned int' lvalue Var 0x1590278f0 'second' 'unsigned int'
    | |   `-ImplicitCastExpr 0x15a0095a0 <col:48> 'unsigned int' <IntegralCast>
    | |     `-IntegerLiteral 0x15a009568 <col:48> 'int' 60
    | `-CompoundStmt 0x15a009928 <col:52, line:18:3>
    |   |-DeclStmt 0x15a009728 <line:14:5, col:32>
    |   | `-VarDecl 0x15a009610 <col:5, col:31> col:11 used esc 'char *' cinit
    |   |   `-ImplicitCastExpr 0x15a009710 <col:17, col:31> 'char *' <IntegralToPointer>
    |   |     `-CallExpr 0x15a0096d0 <col:17, col:31> 'int'
    |   |       |-ImplicitCastExpr 0x15a0096b8 <col:17> 'int (*)()' <FunctionToPointerDecay>
    |   |       | `-DeclRefExpr 0x15a009678 <col:17> 'int ()' Function 0x159027f20 'esc_for_log' 'int ()'
    |   |       `-ImplicitCastExpr 0x15a0096f8 <col:29> 'const char *' <LValueToRValue>
    |   |         `-DeclRefExpr 0x15a009698 <col:29> 'const char *' lvalue ParmVar 0x15900dcd8 'cp' 'const char *'
    |   |-CallExpr 0x15a009810 <line:15:5, col:36> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x15a009740 <col:5> 'int ()' Function 0x1590280c8 'log_warn' 'int ()'
    |   | |-RecoveryExpr 0x15a0097f0 <col:14> '<dependent type>' contains-errors lvalue
    |   | |-StringLiteral 0x15a009778 <col:26> 'char[4]' lvalue "STR"
    |   | `-DeclRefExpr 0x15a009798 <col:33> 'char *' lvalue Var 0x15a009610 'esc' 'char *'
    |   |-CallExpr 0x15a0098a0 <line:16:5, col:17> 'int'
    |   | |-ImplicitCastExpr 0x15a009888 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x15a009848 <col:5> 'int ()' Function 0x1590282b0 'tor_free' 'int ()'
    |   | `-ImplicitCastExpr 0x15a0098c8 <col:14> 'char *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x15a009868 <col:14> 'char *' lvalue Var 0x15a009610 'esc' 'char *'
    |   `-ReturnStmt 0x15a009918 <line:17:5, col:13>
    |     `-UnaryOperator 0x15a009900 <col:12, col:13> 'int' prefix '-'
    |       `-IntegerLiteral 0x15a0098e0 <col:13> 'int' 1
    |-BinaryOperator 0x15a009a98 <line:19:3, col:24> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x15a0099c0 <col:3, col:9> '<dependent type>' contains-errors lvalue .tm_year
    | | `-RecoveryExpr 0x15a009998 <col:3> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x15a009978 <col:3> 'struct tm' lvalue Var 0x15900e038 'st_tm' 'struct tm'
    | `-BinaryOperator 0x15a009a78 <col:19, col:24> 'unsigned int' '-'
    |   |-ImplicitCastExpr 0x15a009a48 <col:19> 'unsigned int' <LValueToRValue>
    |   | `-DeclRefExpr 0x15a009a08 <col:19> 'unsigned int' lvalue Var 0x159027558 'year' 'unsigned int'
    |   `-ImplicitCastExpr 0x15a009a60 <col:24> 'unsigned int' <IntegralCast>
    |     `-IntegerLiteral 0x15a009a28 <col:24> 'int' 1900
    |-BinaryOperator 0x15a009bd8 <line:20:3, col:24> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x15a009b00 <col:3, col:9> '<dependent type>' contains-errors lvalue .tm_mon
    | | `-RecoveryExpr 0x15a009ad8 <col:3> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x15a009ab8 <col:3> 'struct tm' lvalue Var 0x15900e038 'st_tm' 'struct tm'
    | `-BinaryOperator 0x15a009bb8 <col:18, col:24> 'unsigned int' '-'
    |   |-ImplicitCastExpr 0x15a009b88 <col:18> 'unsigned int' <LValueToRValue>
    |   | `-DeclRefExpr 0x15a009b48 <col:18> 'unsigned int' lvalue Var 0x159027610 'month' 'unsigned int'
    |   `-ImplicitCastExpr 0x15a009ba0 <col:24> 'unsigned int' <IntegralCast>
    |     `-IntegerLiteral 0x15a009b68 <col:24> 'int' 1
    |-BinaryOperator 0x15a009ca8 <line:21:3, col:19> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x15a009c40 <col:3, col:9> '<dependent type>' contains-errors lvalue .tm_mday
    | | `-RecoveryExpr 0x15a009c18 <col:3> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x15a009bf8 <col:3> 'struct tm' lvalue Var 0x15900e038 'st_tm' 'struct tm'
    | `-DeclRefExpr 0x15a009c88 <col:19> 'unsigned int' lvalue Var 0x1590276c8 'day' 'unsigned int'
    |-BinaryOperator 0x15a009d78 <line:22:3, col:19> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x15a009d10 <col:3, col:9> '<dependent type>' contains-errors lvalue .tm_hour
    | | `-RecoveryExpr 0x15a009ce8 <col:3> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x15a009cc8 <col:3> 'struct tm' lvalue Var 0x15900e038 'st_tm' 'struct tm'
    | `-DeclRefExpr 0x15a009d58 <col:19> 'unsigned int' lvalue Var 0x159027780 'hour' 'unsigned int'
    |-BinaryOperator 0x15a009e48 <line:23:3, col:18> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x15a009de0 <col:3, col:9> '<dependent type>' contains-errors lvalue .tm_min
    | | `-RecoveryExpr 0x15a009db8 <col:3> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x15a009d98 <col:3> 'struct tm' lvalue Var 0x15900e038 'st_tm' 'struct tm'
    | `-DeclRefExpr 0x15a009e28 <col:18> 'unsigned int' lvalue Var 0x159027838 'minute' 'unsigned int'
    |-BinaryOperator 0x15a009f18 <line:24:3, col:18> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x15a009eb0 <col:3, col:9> '<dependent type>' contains-errors lvalue .tm_sec
    | | `-RecoveryExpr 0x15a009e88 <col:3> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x15a009e68 <col:3> 'struct tm' lvalue Var 0x15900e038 'st_tm' 'struct tm'
    | `-DeclRefExpr 0x15a009ef8 <col:18> 'unsigned int' lvalue Var 0x1590278f0 'second' 'unsigned int'
    |-IfStmt 0x159029748 <line:26:3, line:31:3>
    | |-BinaryOperator 0x15a009fc0 <line:26:7, col:23> 'int' contains-errors '<'
    | | |-CXXDependentScopeMemberExpr 0x15a009f58 <col:7, col:13> '<dependent type>' contains-errors lvalue .tm_year
    | | | `-RecoveryExpr 0x15a009f38 <col:7> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x15a009fa0 <col:23> 'int' 70
    | `-CompoundStmt 0x159029718 <col:27, line:31:3>
    |   |-DeclStmt 0x159029518 <line:27:5, col:32>
    |   | `-VarDecl 0x159029400 <col:5, col:31> col:11 used esc 'char *' cinit
    |   |   `-ImplicitCastExpr 0x159029500 <col:17, col:31> 'char *' <IntegralToPointer>
    |   |     `-CallExpr 0x1590294c0 <col:17, col:31> 'int'
    |   |       |-ImplicitCastExpr 0x1590294a8 <col:17> 'int (*)()' <FunctionToPointerDecay>
    |   |       | `-DeclRefExpr 0x159029468 <col:17> 'int ()' Function 0x159027f20 'esc_for_log' 'int ()'
    |   |       `-ImplicitCastExpr 0x1590294e8 <col:29> 'const char *' <LValueToRValue>
    |   |         `-DeclRefExpr 0x159029488 <col:29> 'const char *' lvalue ParmVar 0x15900dcd8 'cp' 'const char *'
    |   |-CallExpr 0x159029600 <line:28:5, col:36> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x159029530 <col:5> 'int ()' Function 0x1590280c8 'log_warn' 'int ()'
    |   | |-RecoveryExpr 0x1590295e0 <col:14> '<dependent type>' contains-errors lvalue
    |   | |-StringLiteral 0x159029568 <col:26> 'char[4]' lvalue "STR"
    |   | `-DeclRefExpr 0x159029588 <col:33> 'char *' lvalue Var 0x159029400 'esc' 'char *'
    |   |-CallExpr 0x159029690 <line:29:5, col:17> 'int'
    |   | |-ImplicitCastExpr 0x159029678 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x159029638 <col:5> 'int ()' Function 0x1590282b0 'tor_free' 'int ()'
    |   | `-ImplicitCastExpr 0x1590296b8 <col:14> 'char *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x159029658 <col:14> 'char *' lvalue Var 0x159029400 'esc' 'char *'
    |   `-ReturnStmt 0x159029708 <line:30:5, col:13>
    |     `-UnaryOperator 0x1590296f0 <col:12, col:13> 'int' prefix '-'
    |       `-IntegerLiteral 0x1590296d0 <col:13> 'int' 1
    |-BinaryOperator 0x159029918 <line:32:3, col:25> '<dependent type>' contains-errors '='
    | |-UnaryOperator 0x1590297a0 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x159029788 <col:4> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x159029768 <col:4> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x1590298f0 <col:8, col:25> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x159029898 <col:8> 'int ()' Function 0x1590297e0 'tor_timegm' 'int ()'
    |   `-UnaryOperator 0x1590298d8 <col:19, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x1590298b8 <col:20> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x159029958 <line:33:3, col:10>
      `-IntegerLiteral 0x159029938 <col:10> 'int' 0
