`-FunctionDecl 0x124926640  line:1:6 invalid gdImageCopyMerge 'void (int, int, int, int, int, int, int, int, int)'
  |-ParmVarDecl 0x1249260f0 <col:24, col:35> col:35 invalid dst 'int'
  |-ParmVarDecl 0x124926170 <col:40, col:51> col:51 invalid src 'int'
  |-ParmVarDecl 0x1249261f0 <col:56, col:60> col:60 used dstX 'int'
  |-ParmVarDecl 0x124926270 <col:66, col:70> col:70 used dstY 'int'
  |-ParmVarDecl 0x1249262f0 <col:76, col:80> col:80 used srcX 'int'
  |-ParmVarDecl 0x124926370 <col:86, col:90> col:90 used srcY 'int'
  |-ParmVarDecl 0x1249263f0 <col:96, col:100> col:100 used w 'int'
  |-ParmVarDecl 0x124926470 <col:103, col:107> col:107 used h 'int'
  |-ParmVarDecl 0x1249264f0 <col:110, col:114> col:114 used pct 'int'
  `-CompoundStmt 0x12400d610 <line:2:1, line:37:1>
    |-DeclStmt 0x12493f880 <line:3:2, col:11>
    | |-VarDecl 0x124926748 <col:2, col:6> col:6 used c 'int'
    | `-VarDecl 0x12493f800 <col:2, col:9> col:9 used dc 'int'
    |-DeclStmt 0x12493f9b0 <line:4:2, col:10>
    | |-VarDecl 0x12493f8b0 <col:2, col:6> col:6 used x 'int'
    | `-VarDecl 0x12493f930 <col:2, col:9> col:9 used y 'int'
    |-DeclStmt 0x12493fae0 <line:5:2, col:14>
    | |-VarDecl 0x12493f9e0 <col:2, col:6> col:6 used tox 'int'
    | `-VarDecl 0x12493fa60 <col:2, col:11> col:11 used toy 'int'
    |-DeclStmt 0x12493fc98 <line:6:2, col:19>
    | |-VarDecl 0x12493fb10 <col:2, col:6> col:6 used ncR 'int'
    | |-VarDecl 0x12493fb90 <col:2, col:11> col:11 used ncG 'int'
    | `-VarDecl 0x12493fc10 <col:2, col:16> col:16 used ncB 'int'
    |-BinaryOperator 0x12493fd08 <line:7:2, col:8> 'int' '='
    | |-DeclRefExpr 0x12493fcb0 <col:2> 'int' lvalue Var 0x12493fa60 'toy' 'int'
    | `-ImplicitCastExpr 0x12493fcf0 <col:8> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x12493fcd0 <col:8> 'int' lvalue ParmVar 0x124926270 'dstY' 'int'
    `-ForStmt 0x12400d5d8 <line:9:2, line:36:2>
      |-BinaryOperator 0x12493fd80 <line:9:7, col:11> 'int' '='
      | |-DeclRefExpr 0x12493fd28 <col:7> 'int' lvalue Var 0x12493f930 'y' 'int'
      | `-ImplicitCastExpr 0x12493fd68 <col:11> 'int' <LValueToRValue>
      |   `-DeclRefExpr 0x12493fd48 <col:11> 'int' lvalue ParmVar 0x124926370 'srcY' 'int'
      |-<<<NULL>>>
      |-BinaryOperator 0x12493fe88 <col:17, col:30> 'int' '<'
      | |-ImplicitCastExpr 0x12493fe70 <col:17> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x12493fda0 <col:17> 'int' lvalue Var 0x12493f930 'y' 'int'
      | `-ParenExpr 0x12493fe50 <col:21, col:30> 'int'
      |   `-BinaryOperator 0x12493fe30 <col:22, col:29> 'int' '+'
      |     |-ImplicitCastExpr 0x12493fe00 <col:22> 'int' <LValueToRValue>
      |     | `-DeclRefExpr 0x12493fdc0 <col:22> 'int' lvalue ParmVar 0x124926370 'srcY' 'int'
      |     `-ImplicitCastExpr 0x12493fe18 <col:29> 'int' <LValueToRValue>
      |       `-DeclRefExpr 0x12493fde0 <col:29> 'int' lvalue ParmVar 0x124926470 'h' 'int'
      |-UnaryOperator 0x12493fec8 <col:33, col:34> 'int' postfix '++'
      | `-DeclRefExpr 0x12493fea8 <col:33> 'int' lvalue Var 0x12493f930 'y' 'int'
      `-CompoundStmt 0x12400d5b0 <col:38, line:36:2>
        |-BinaryOperator 0x12493ff38 <line:10:3, col:9> 'int' '='
        | |-DeclRefExpr 0x12493fee0 <col:3> 'int' lvalue Var 0x12493f9e0 'tox' 'int'
        | `-ImplicitCastExpr 0x12493ff20 <col:9> 'int' <LValueToRValue>
        |   `-DeclRefExpr 0x12493ff00 <col:9> 'int' lvalue ParmVar 0x1249261f0 'dstX' 'int'
        |-ForStmt 0x12400d540 <line:11:3, line:34:3>
        | |-BinaryOperator 0x12493ffb0 <line:11:8, col:12> 'int' '='
        | | |-DeclRefExpr 0x12493ff58 <col:8> 'int' lvalue Var 0x12493f8b0 'x' 'int'
        | | `-ImplicitCastExpr 0x12493ff98 <col:12> 'int' <LValueToRValue>
        | |   `-DeclRefExpr 0x12493ff78 <col:12> 'int' lvalue ParmVar 0x1249262f0 'srcX' 'int'
        | |-<<<NULL>>>
        | |-BinaryOperator 0x1249400b8 <col:18, col:31> 'int' '<'
        | | |-ImplicitCastExpr 0x1249400a0 <col:18> 'int' <LValueToRValue>
        | | | `-DeclRefExpr 0x12493ffd0 <col:18> 'int' lvalue Var 0x12493f8b0 'x' 'int'
        | | `-ParenExpr 0x124940080 <col:22, col:31> 'int'
        | |   `-BinaryOperator 0x124940060 <col:23, col:30> 'int' '+'
        | |     |-ImplicitCastExpr 0x124940030 <col:23> 'int' <LValueToRValue>
        | |     | `-DeclRefExpr 0x12493fff0 <col:23> 'int' lvalue ParmVar 0x1249262f0 'srcX' 'int'
        | |     `-ImplicitCastExpr 0x124940048 <col:30> 'int' <LValueToRValue>
        | |       `-DeclRefExpr 0x124940010 <col:30> 'int' lvalue ParmVar 0x1249263f0 'w' 'int'
        | |-UnaryOperator 0x1249400f8 <col:34, col:35> 'int' postfix '++'
        | | `-DeclRefExpr 0x1249400d8 <col:34> 'int' lvalue Var 0x12493f8b0 'x' 'int'
        | `-CompoundStmt 0x12400d500 <col:39, line:34:3>
        |   |-DeclStmt 0x124940190 <line:12:4, col:10>
        |   | `-VarDecl 0x124940128 <col:4, col:8> col:8 used nc 'int'
        |   |-BinaryOperator 0x1249403d8 <line:13:4, col:33> 'int' contains-errors '='
        |   | |-DeclRefExpr 0x1249401a8 <col:4> 'int' lvalue Var 0x124926748 'c' 'int'
        |   | `-CallExpr 0x1249403a0 <col:8, col:33> '<dependent type>' contains-errors
        |   |   |-DeclRefExpr 0x124940320 <col:8> 'int ()' Function 0x124940268 'gdImageGetPixel' 'int ()'
        |   |   |-RecoveryExpr 0x124940340 <col:24> '<dependent type>' contains-errors lvalue
        |   |   |-DeclRefExpr 0x124940360 <col:29> 'int' lvalue Var 0x12493f8b0 'x' 'int'
        |   |   `-DeclRefExpr 0x124940380 <col:32> 'int' lvalue Var 0x12493f930 'y' 'int'
        |   |-IfStmt 0x1249405e0 <line:15:4, line:18:4>
        |   | |-BinaryOperator 0x124940560 <line:15:8, col:38> 'int' contains-errors '=='
        |   | | |-CallExpr 0x124940518 <col:8, col:33> '<dependent type>' contains-errors
        |   | | | |-DeclRefExpr 0x1249404d8 <col:8> 'int ()' Function 0x124940420 'gdImageGetTransparent' 'int ()'
        |   | | | `-RecoveryExpr 0x1249404f8 <col:30> '<dependent type>' contains-errors lvalue
        |   | | `-DeclRefExpr 0x124940540 <col:38> 'int' lvalue Var 0x124926748 'c' 'int'
        |   | `-CompoundStmt 0x1249405c0 <col:41, line:18:4>
        |   |   |-UnaryOperator 0x1249405a0 <line:16:5, col:8> 'int' postfix '++'
        |   |   | `-DeclRefExpr 0x124940580 <col:5> 'int' lvalue Var 0x12493f9e0 'tox' 'int'
        |   |   `-ContinueStmt 0x1249405b8 <line:17:5>
        |   |-IfStmt 0x12400d2d8 <line:20:4, line:31:4> has_else
        |   | |-BinaryOperator 0x124940640 <line:20:8, col:15> 'int' contains-errors '=='
        |   | | |-RecoveryExpr 0x124940600 <col:8> '<dependent type>' contains-errors lvalue
        |   | | `-RecoveryExpr 0x124940620 <col:15> '<dependent type>' contains-errors lvalue
        |   | |-CompoundStmt 0x1249406d8 <col:20, line:22:4>
        |   | | `-BinaryOperator 0x1249406b8 <line:21:5, col:10> 'int' '='
        |   | |   |-DeclRefExpr 0x124940660 <col:5> 'int' lvalue Var 0x124940128 'nc' 'int'
        |   | |   `-ImplicitCastExpr 0x1249406a0 <col:10> 'int' <LValueToRValue>
        |   | |     `-DeclRefExpr 0x124940680 <col:10> 'int' lvalue Var 0x124926748 'c' 'int'
        |   | `-CompoundStmt 0x12400d2a0 <line:22:11, line:31:4>
        |   |   |-BinaryOperator 0x1249407c8 <line:23:5, col:39> 'int' contains-errors '='
        |   |   | |-DeclRefExpr 0x1249406f0 <col:5> 'int' lvalue Var 0x12493f800 'dc' 'int'
        |   |   | `-CallExpr 0x124940790 <col:10, col:39> '<dependent type>' contains-errors
        |   |   |   |-DeclRefExpr 0x124940710 <col:10> 'int ()' Function 0x124940268 'gdImageGetPixel' 'int ()'
        |   |   |   |-RecoveryExpr 0x124940730 <col:26> '<dependent type>' contains-errors lvalue
        |   |   |   |-DeclRefExpr 0x124940750 <col:31> 'int' lvalue Var 0x12493f9e0 'tox' 'int'
        |   |   |   `-DeclRefExpr 0x124940770 <col:36> 'int' lvalue Var 0x12493fa60 'toy' 'int'
        |   |   |-BinaryOperator 0x12400b6c0 <line:25:6, col:100> 'int' contains-errors '='
        |   |   | |-DeclRefExpr 0x12400b200 <col:6> 'int' lvalue Var 0x12493fb10 'ncR' 'int'
        |   |   | `-CStyleCastExpr 0x12400b698 <col:12, col:100> 'int' contains-errors <Dependent>
        |   |   |   `-ParenExpr 0x12400b678 <col:17, col:100> '<dependent type>' contains-errors
        |   |   |     `-BinaryOperator 0x12400b620 <col:18, col:99> '<dependent type>' contains-errors '+'
        |   |   |       |-BinaryOperator 0x12400b440 <col:18, col:52> '<dependent type>' contains-errors '*'
        |   |   |       | |-CallExpr 0x12400b360 <col:18, col:36> '<dependent type>' contains-errors
        |   |   |       | | |-DeclRefExpr 0x12400b300 <col:18> 'int ()' Function 0x12400b248 'gdImageRed' 'int ()'
        |   |   |       | | |-RecoveryExpr 0x12400b320 <col:30> '<dependent type>' contains-errors lvalue
        |   |   |       | | `-DeclRefExpr 0x12400b340 <col:35> 'int' lvalue Var 0x124926748 'c' 'int'
        |   |   |       | `-ParenExpr 0x12400b420 <col:40, col:52> 'double'
        |   |   |       |   `-BinaryOperator 0x12400b400 <col:41, col:47> 'double' '/'
        |   |   |       |     |-ImplicitCastExpr 0x12400b3e8 <col:41> 'double' <IntegralToFloating>
        |   |   |       |     | `-ImplicitCastExpr 0x12400b3d0 <col:41> 'int' <LValueToRValue>
        |   |   |       |     |   `-DeclRefExpr 0x12400b390 <col:41> 'int' lvalue ParmVar 0x1249264f0 'pct' 'int'
        |   |   |       |     `-FloatingLiteral 0x12400b3b0 <col:47> 'double' 1.000000e+02
        |   |   |       `-BinaryOperator 0x12400b600 <col:56, col:99> '<dependent type>' contains-errors '*'
        |   |   |         |-CallExpr 0x12400b4c0 <col:56, col:75> '<dependent type>' contains-errors
        |   |   |         | |-DeclRefExpr 0x12400b460 <col:56> 'int ()' Function 0x12400b248 'gdImageRed' 'int ()'
        |   |   |         | |-RecoveryExpr 0x12400b480 <col:68> '<dependent type>' contains-errors lvalue
        |   |   |         | `-DeclRefExpr 0x12400b4a0 <col:73> 'int' lvalue Var 0x12493f800 'dc' 'int'
        |   |   |         `-ParenExpr 0x12400b5e0 <col:79, col:99> 'double'
        |   |   |           `-BinaryOperator 0x12400b5c0 <col:80, col:94> 'double' '/'
        |   |   |             |-ImplicitCastExpr 0x12400b5a8 <col:80, col:90> 'double' <IntegralToFloating>
        |   |   |             | `-ParenExpr 0x12400b568 <col:80, col:90> 'int'
        |   |   |             |   `-BinaryOperator 0x12400b548 <col:81, col:87> 'int' '-'
        |   |   |             |     |-IntegerLiteral 0x12400b4f0 <col:81> 'int' 100
        |   |   |             |     `-ImplicitCastExpr 0x12400b530 <col:87> 'int' <LValueToRValue>
        |   |   |             |       `-DeclRefExpr 0x12400b510 <col:87> 'int' lvalue ParmVar 0x1249264f0 'pct' 'int'
        |   |   |             `-FloatingLiteral 0x12400b588 <col:94> 'double' 1.000000e+02
        |   |   |-BinaryOperator 0x12400bba0 <line:26:6, col:104> 'int' contains-errors '='
        |   |   | |-DeclRefExpr 0x12400b6e0 <col:6> 'int' lvalue Var 0x12493fb90 'ncG' 'int'
        |   |   | `-CStyleCastExpr 0x12400bb78 <col:12, col:104> 'int' contains-errors <Dependent>
        |   |   |   `-ParenExpr 0x12400bb58 <col:17, col:104> '<dependent type>' contains-errors
        |   |   |     `-BinaryOperator 0x12400bb00 <col:18, col:103> '<dependent type>' contains-errors '+'
        |   |   |       |-BinaryOperator 0x12400b920 <col:18, col:54> '<dependent type>' contains-errors '*'
        |   |   |       | |-CallExpr 0x12400b840 <col:18, col:38> '<dependent type>' contains-errors
        |   |   |       | | |-DeclRefExpr 0x12400b7e0 <col:18> 'int ()' Function 0x12400b728 'gdImageGreen' 'int ()'
        |   |   |       | | |-RecoveryExpr 0x12400b800 <col:32> '<dependent type>' contains-errors lvalue
        |   |   |       | | `-DeclRefExpr 0x12400b820 <col:37> 'int' lvalue Var 0x124926748 'c' 'int'
        |   |   |       | `-ParenExpr 0x12400b900 <col:42, col:54> 'double'
        |   |   |       |   `-BinaryOperator 0x12400b8e0 <col:43, col:49> 'double' '/'
        |   |   |       |     |-ImplicitCastExpr 0x12400b8c8 <col:43> 'double' <IntegralToFloating>
        |   |   |       |     | `-ImplicitCastExpr 0x12400b8b0 <col:43> 'int' <LValueToRValue>
        |   |   |       |     |   `-DeclRefExpr 0x12400b870 <col:43> 'int' lvalue ParmVar 0x1249264f0 'pct' 'int'
        |   |   |       |     `-FloatingLiteral 0x12400b890 <col:49> 'double' 1.000000e+02
        |   |   |       `-BinaryOperator 0x12400bae0 <col:58, col:103> '<dependent type>' contains-errors '*'
        |   |   |         |-CallExpr 0x12400b9a0 <col:58, col:79> '<dependent type>' contains-errors
        |   |   |         | |-DeclRefExpr 0x12400b940 <col:58> 'int ()' Function 0x12400b728 'gdImageGreen' 'int ()'
        |   |   |         | |-RecoveryExpr 0x12400b960 <col:72> '<dependent type>' contains-errors lvalue
        |   |   |         | `-DeclRefExpr 0x12400b980 <col:77> 'int' lvalue Var 0x12493f800 'dc' 'int'
        |   |   |         `-ParenExpr 0x12400bac0 <col:83, col:103> 'double'
        |   |   |           `-BinaryOperator 0x12400baa0 <col:84, col:98> 'double' '/'
        |   |   |             |-ImplicitCastExpr 0x12400ba88 <col:84, col:94> 'double' <IntegralToFloating>
        |   |   |             | `-ParenExpr 0x12400ba48 <col:84, col:94> 'int'
        |   |   |             |   `-BinaryOperator 0x12400ba28 <col:85, col:91> 'int' '-'
        |   |   |             |     |-IntegerLiteral 0x12400b9d0 <col:85> 'int' 100
        |   |   |             |     `-ImplicitCastExpr 0x12400ba10 <col:91> 'int' <LValueToRValue>
        |   |   |             |       `-DeclRefExpr 0x12400b9f0 <col:91> 'int' lvalue ParmVar 0x1249264f0 'pct' 'int'
        |   |   |             `-FloatingLiteral 0x12400ba68 <col:98> 'double' 1.000000e+02
        |   |   |-BinaryOperator 0x12400c080 <line:27:6, col:102> 'int' contains-errors '='
        |   |   | |-DeclRefExpr 0x12400bbc0 <col:6> 'int' lvalue Var 0x12493fc10 'ncB' 'int'
        |   |   | `-CStyleCastExpr 0x12400c058 <col:12, col:102> 'int' contains-errors <Dependent>
        |   |   |   `-ParenExpr 0x12400c038 <col:17, col:102> '<dependent type>' contains-errors
        |   |   |     `-BinaryOperator 0x12400bfe0 <col:18, col:101> '<dependent type>' contains-errors '+'
        |   |   |       |-BinaryOperator 0x12400be00 <col:18, col:53> '<dependent type>' contains-errors '*'
        |   |   |       | |-CallExpr 0x12400bd20 <col:18, col:37> '<dependent type>' contains-errors
        |   |   |       | | |-DeclRefExpr 0x12400bcc0 <col:18> 'int ()' Function 0x12400bc08 'gdImageBlue' 'int ()'
        |   |   |       | | |-RecoveryExpr 0x12400bce0 <col:31> '<dependent type>' contains-errors lvalue
        |   |   |       | | `-DeclRefExpr 0x12400bd00 <col:36> 'int' lvalue Var 0x124926748 'c' 'int'
        |   |   |       | `-ParenExpr 0x12400bde0 <col:41, col:53> 'double'
        |   |   |       |   `-BinaryOperator 0x12400bdc0 <col:42, col:48> 'double' '/'
        |   |   |       |     |-ImplicitCastExpr 0x12400bda8 <col:42> 'double' <IntegralToFloating>
        |   |   |       |     | `-ImplicitCastExpr 0x12400bd90 <col:42> 'int' <LValueToRValue>
        |   |   |       |     |   `-DeclRefExpr 0x12400bd50 <col:42> 'int' lvalue ParmVar 0x1249264f0 'pct' 'int'
        |   |   |       |     `-FloatingLiteral 0x12400bd70 <col:48> 'double' 1.000000e+02
        |   |   |       `-BinaryOperator 0x12400bfc0 <col:57, col:101> '<dependent type>' contains-errors '*'
        |   |   |         |-CallExpr 0x12400be80 <col:57, col:77> '<dependent type>' contains-errors
        |   |   |         | |-DeclRefExpr 0x12400be20 <col:57> 'int ()' Function 0x12400bc08 'gdImageBlue' 'int ()'
        |   |   |         | |-RecoveryExpr 0x12400be40 <col:70> '<dependent type>' contains-errors lvalue
        |   |   |         | `-DeclRefExpr 0x12400be60 <col:75> 'int' lvalue Var 0x12493f800 'dc' 'int'
        |   |   |         `-ParenExpr 0x12400bfa0 <col:81, col:101> 'double'
        |   |   |           `-BinaryOperator 0x12400bf80 <col:82, col:96> 'double' '/'
        |   |   |             |-ImplicitCastExpr 0x12400bf68 <col:82, col:92> 'double' <IntegralToFloating>
        |   |   |             | `-ParenExpr 0x12400bf28 <col:82, col:92> 'int'
        |   |   |             |   `-BinaryOperator 0x12400bf08 <col:83, col:89> 'int' '-'
        |   |   |             |     |-IntegerLiteral 0x12400beb0 <col:83> 'int' 100
        |   |   |             |     `-ImplicitCastExpr 0x12400bef0 <col:89> 'int' <LValueToRValue>
        |   |   |             |       `-DeclRefExpr 0x12400bed0 <col:89> 'int' lvalue ParmVar 0x1249264f0 'pct' 'int'
        |   |   |             `-FloatingLiteral 0x12400bf48 <col:96> 'double' 1.000000e+02
        |   |   `-BinaryOperator 0x12400d280 <line:30:5, col:49> 'int' contains-errors '='
        |   |     |-DeclRefExpr 0x12400c0a0 <col:5> 'int' lvalue Var 0x124940128 'nc' 'int'
        |   |     `-CallExpr 0x12400d240 <col:10, col:49> '<dependent type>' contains-errors
        |   |       |-DeclRefExpr 0x12400c1a0 <col:10> 'int ()' Function 0x12400c0e8 'gdImageColorResolve' 'int ()'
        |   |       |-RecoveryExpr 0x12400c1c0 <col:31> '<dependent type>' contains-errors lvalue
        |   |       |-DeclRefExpr 0x12400c1e0 <col:36> 'int' lvalue Var 0x12493fb10 'ncR' 'int'
        |   |       |-DeclRefExpr 0x12400d200 <col:41> 'int' lvalue Var 0x12493fb90 'ncG' 'int'
        |   |       `-DeclRefExpr 0x12400d220 <col:46> 'int' lvalue Var 0x12493fc10 'ncB' 'int'
        |   |-CallExpr 0x12400d488 <line:32:4, col:38> '<dependent type>' contains-errors
        |   | |-DeclRefExpr 0x12400d3e8 <col:4> 'int ()' Function 0x12400d330 'gdImageSetPixel' 'int ()'
        |   | |-RecoveryExpr 0x12400d408 <col:21> '<dependent type>' contains-errors lvalue
        |   | |-DeclRefExpr 0x12400d428 <col:26> 'int' lvalue Var 0x12493f9e0 'tox' 'int'
        |   | |-DeclRefExpr 0x12400d448 <col:31> 'int' lvalue Var 0x12493fa60 'toy' 'int'
        |   | `-DeclRefExpr 0x12400d468 <col:36> 'int' lvalue Var 0x124940128 'nc' 'int'
        |   `-UnaryOperator 0x12400d4e8 <line:33:4, col:7> 'int' postfix '++'
        |     `-DeclRefExpr 0x12400d4c8 <col:4> 'int' lvalue Var 0x12493f9e0 'tox' 'int'
        `-UnaryOperator 0x12400d598 <line:35:3, col:6> 'int' postfix '++'
          `-DeclRefExpr 0x12400d578 <col:3> 'int' lvalue Var 0x12493fa60 'toy' 'int'
