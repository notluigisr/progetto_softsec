`-FunctionDecl 0x120129028  line:1:1 invalid backward_search 'int (int *, const int *, const int *, int *, const int *, int *, int **, int **)'
  |-ParmVarDecl 0x120128b28 <col:17, col:26> col:26 invalid reg 'int *'
  |-ParmVarDecl 0x120128ba8 <col:31, col:44> col:44 invalid str 'const int *'
  |-ParmVarDecl 0x120128c28 <col:49, col:62> col:62 invalid end 'const int *'
  |-ParmVarDecl 0x120128ca8 <col:67, col:74> col:74 invalid s 'int *'
  |-ParmVarDecl 0x120128d28 <line:2:17, col:30> col:30 referenced invalid range 'const int *'
  |-ParmVarDecl 0x120128da8 <col:37, col:44> col:44 invalid adjrange 'int *'
  |-ParmVarDecl 0x120128e60 <col:54, col:62> col:62 invalid low 'int **'
  |-ParmVarDecl 0x120128ee8 <col:67, col:75> col:75 invalid high 'int **'
  `-CompoundStmt 0x120143250 <line:3:1, line:93:1>
    |-IfStmt 0x107009e00 <line:6:3, col:24>
    | |-BinaryOperator 0x120129168 <col:7, col:16> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x120129128 <col:7> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x120129148 <col:16> 'int' 0
    | `-GotoStmt 0x1201291d8 <col:19, col:24> 'fail' 0x120129188
    |-CompoundAssignOperator 0x107009ed0 <line:8:3, col:17> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | |-RecoveryExpr 0x107009e40 <col:3> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x107009e20 <col:3> 'const int *' lvalue ParmVar 0x120128d28 'range' 'const int *'
    | `-CXXDependentScopeMemberExpr 0x107009e88 <col:12, col:17> '<dependent type>' contains-errors lvalue ->dist_min
    |   `-RecoveryExpr 0x107009e68 <col:12> '<dependent type>' contains-errors lvalue
    |-LabelStmt 0x10700aa48 <line:11:2, line:33:3> 'retry'
    | `-SwitchStmt 0x107009fa0 <line:12:3, line:33:3>
    |   |-ImplicitCastExpr 0x107009f88 <line:12:11, col:16> '<dependent type>' contains-errors <LValueToRValue>
    |   | `-CXXDependentScopeMemberExpr 0x107009f40 <col:11, col:16> '<dependent type>' contains-errors lvalue ->optimize
    |   |   `-RecoveryExpr 0x107009f20 <col:11> '<dependent type>' contains-errors lvalue
    |   `-CompoundStmt 0x10700a9b8 <col:26, line:33:3>
    |     |-LabelStmt 0x10700a3c0 <line:14:3, col:15> 'exact_method'
    |     | `-NullStmt 0x10700a368 <col:15>
    |     |-BreakStmt 0x10700a3e0 <line:17:5>
    |     |-BreakStmt 0x10700a778 <line:23:5>
    |     |-GotoStmt 0x10700a780 <line:27:5, col:10> 'exact_method' 0x10700a370
    |     |-BreakStmt 0x10700a798 <line:28:5>
    |     `-BreakStmt 0x10700a9b0 <line:32:5>
    |-IfStmt 0x1201431e0 <line:35:3, line:86:3>
    | |-RecoveryExpr 0x10700aa68 <line:35:7> '_Bool' contains-errors
    | `-CompoundStmt 0x1201431b8 <col:10, line:86:3>
    |   |-IfStmt 0x120142cb8 <line:36:5, line:72:5>
    |   | |-CXXDependentScopeMemberExpr 0x10700aaa8 <line:36:9, col:14> '<dependent type>' contains-errors lvalue ->sub_anchor
    |   | | `-RecoveryExpr 0x10700aa88 <col:9> '<dependent type>' contains-errors lvalue
    |   | `-CompoundStmt 0x120142ca0 <col:26, line:72:5>
    |   |   `-SwitchStmt 0x10700ab70 <line:39:7, line:71:7>
    |   |     |-ImplicitCastExpr 0x10700ab58 <line:39:15, col:20> '<dependent type>' contains-errors <LValueToRValue>
    |   |     | `-CXXDependentScopeMemberExpr 0x10700ab10 <col:15, col:20> '<dependent type>' contains-errors lvalue ->sub_anchor
    |   |     |   `-RecoveryExpr 0x10700aaf0 <col:15> '<dependent type>' contains-errors lvalue
    |   |     `-CompoundStmt 0x120142c70 <col:32, line:71:7>
    |   |       |-IfStmt 0x120142578 <line:41:9, line:47:9>
    |   |       | |-RecoveryExpr 0x10700ac98 <line:41:13, col:28> '_Bool' contains-errors
    |   |       | `-CompoundStmt 0x120142560 <col:31, line:47:9>
    |   |       |   `-IfStmt 0x120142540 <line:43:11, line:46:11>
    |   |       |     |-RecoveryExpr 0x1201424f0 <line:43:15, col:79> '_Bool' contains-errors
    |   |       |     `-CompoundStmt 0x120142528 <col:82, line:46:11>
    |   |       |       `-GotoStmt 0x120142510 <line:45:13, col:18> 'retry' 0x10700a9f8
    |   |       |-BreakStmt 0x120142598 <line:48:9>
    |   |       |-IfStmt 0x120142c38 <line:51:9, line:69:9> has_else
    |   |       | |-RecoveryExpr 0x1201426a0 <line:51:13, col:25> '_Bool' contains-errors
    |   |       | |-CompoundStmt 0x1201429d8 <col:28, line:60:9>
    |   |       | | |-IfStmt 0x1201428a0 <line:54:11, col:35>
    |   |       | | | |-RecoveryExpr 0x120142868 <col:15, col:27> '_Bool' contains-errors
    |   |       | | | `-GotoStmt 0x120142888 <col:30, col:35> 'fail' 0x120129188
    |   |       | | `-IfStmt 0x1201429b8 <line:55:11, line:58:11>
    |   |       | |   |-RecoveryExpr 0x120142968 <line:55:15, col:57> '_Bool' contains-errors
    |   |       | |   `-CompoundStmt 0x1201429a0 <col:60, line:58:11>
    |   |       | |     `-GotoStmt 0x120142988 <line:57:13, col:18> 'retry' 0x10700a9f8
    |   |       | `-IfStmt 0x120142c18 <line:61:14, line:69:9>
    |   |       |   |-RecoveryExpr 0x120142aa0 <line:61:18, col:59> '_Bool' contains-errors
    |   |       |   `-CompoundStmt 0x120142bf8 <line:65:20, line:69:9>
    |   |       |     |-IfStmt 0x120142bc0 <line:67:11, col:32>
    |   |       |     | |-RecoveryExpr 0x120142b88 <col:15, col:24> '_Bool' contains-errors
    |   |       |     | `-GotoStmt 0x120142ba8 <col:27, col:32> 'fail' 0x120129188
    |   |       |     `-GotoStmt 0x120142be0 <line:68:11, col:16> 'retry' 0x10700a9f8
    |   |       `-BreakStmt 0x120142c68 <line:70:9>
    |   |-IfStmt 0x120143168 <line:75:5, line:79:5>
    |   | |-RecoveryExpr 0x120142d40 <line:75:9, col:26> '_Bool' contains-errors
    |   | `-CompoundStmt 0x120143150 <col:40, line:79:5>
    |   |   `-BinaryOperator 0x120143130 <line:78:7, col:75> '<dependent type>' contains-errors '='
    |   |     |-UnaryOperator 0x120142f08 <col:7, col:8> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   |     | `-ImplicitCastExpr 0x120142ef0 <col:8> '<dependent type>' contains-errors <LValueToRValue>
    |   |     |   `-RecoveryExpr 0x120142ed0 <col:8> '<dependent type>' contains-errors lvalue
    |   |     `-CallExpr 0x1201430f8 <col:15, col:75> '<dependent type>' contains-errors
    |   |       |-DeclRefExpr 0x120143000 <col:15> 'int ()' Function 0x120142f48 'onigenc_get_right_adjust_char_head' 'int ()'
    |   |       |-CXXDependentScopeMemberExpr 0x120143040 <col:50, col:55> '<dependent type>' contains-errors lvalue ->enc
    |   |       | `-RecoveryExpr 0x120143020 <col:50> '<dependent type>' contains-errors lvalue
    |   |       |-RecoveryExpr 0x120143088 <col:60> '<dependent type>' contains-errors lvalue
    |   |       `-UnaryOperator 0x1201430e0 <col:70, col:71> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   |         `-ImplicitCastExpr 0x1201430c8 <col:71> '<dependent type>' contains-errors <LValueToRValue>
    |   |           `-RecoveryExpr 0x1201430a8 <col:71> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x1201431a8 <line:85:5, col:12>
    |     `-IntegerLiteral 0x120143188 <col:12> 'int' 1
    `-LabelStmt 0x120143230 <line:88:2, line:92:10> 'fail'
      `-ReturnStmt 0x120143220 <col:3, col:10>
        `-IntegerLiteral 0x120143200 <col:10> 'int' 0
