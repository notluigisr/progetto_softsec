`-FunctionDecl 0x146928238  line:1:1 cert_hostcheck 'int (const char *, const char *)'
  |-ParmVarDecl 0x1469280d8 <col:16, col:28> col:28 used match_pattern 'const char *'
  |-ParmVarDecl 0x146928158 <col:43, col:55> col:55 used hostname 'const char *'
  `-CompoundStmt 0x146940dc0 <line:2:1, line:13:1>
    |-IfStmt 0x146928568 <line:3:3, line:5:12>
    | |-BinaryOperator 0x146928518 <line:3:6, line:4:22> 'int' '||'
    | | |-BinaryOperator 0x146928478 <line:3:6, line:4:8> 'int' '||'
    | | | |-BinaryOperator 0x146928408 <line:3:6, col:26> 'int' '||'
    | | | | |-UnaryOperator 0x146928370 <col:6, col:7> 'int' prefix '!' cannot overflow
    | | | | | `-ImplicitCastExpr 0x146928358 <col:7> 'const char *' <LValueToRValue>
    | | | | |   `-DeclRefExpr 0x146928338 <col:7> 'const char *' lvalue ParmVar 0x1469280d8 'match_pattern' 'const char *'
    | | | | `-UnaryOperator 0x1469283f0 <col:24, col:26> 'int' prefix '!' cannot overflow
    | | | |   `-ImplicitCastExpr 0x1469283d8 <col:25, col:26> 'char' <LValueToRValue>
    | | | |     `-UnaryOperator 0x1469283c0 <col:25, col:26> 'const char' lvalue prefix '*' cannot overflow
    | | | |       `-ImplicitCastExpr 0x1469283a8 <col:26> 'const char *' <LValueToRValue>
    | | | |         `-DeclRefExpr 0x146928388 <col:26> 'const char *' lvalue ParmVar 0x1469280d8 'match_pattern' 'const char *'
    | | | `-UnaryOperator 0x146928460 <line:4:7, col:8> 'int' prefix '!' cannot overflow
    | | |   `-ImplicitCastExpr 0x146928448 <col:8> 'const char *' <LValueToRValue>
    | | |     `-DeclRefExpr 0x146928428 <col:8> 'const char *' lvalue ParmVar 0x146928158 'hostname' 'const char *'
    | | `-UnaryOperator 0x146928500 <col:20, col:22> 'int' prefix '!' cannot overflow
    | |   `-ImplicitCastExpr 0x1469284e8 <col:21, col:22> 'char' <LValueToRValue>
    | |     `-UnaryOperator 0x1469284d0 <col:21, col:22> 'const char' lvalue prefix '*' cannot overflow
    | |       `-ImplicitCastExpr 0x1469284b8 <col:22> 'const char *' <LValueToRValue>
    | |         `-DeclRefExpr 0x146928498 <col:22> 'const char *' lvalue ParmVar 0x146928158 'hostname' 'const char *'
    | `-ReturnStmt 0x146928558 <line:5:5, col:12>
    |   `-IntegerLiteral 0x146928538 <col:12> 'int' 0
    |-IfStmt 0x146940a00 <line:7:3, line:8:12>
    | |-CallExpr 0x146928758 <line:7:6, col:44> 'int'
    | | |-ImplicitCastExpr 0x146928740 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x1469286b0 <col:6> 'int ()' Function 0x1469285f8 'Curl_raw_equal' 'int ()'
    | | |-ImplicitCastExpr 0x146928788 <col:21> 'const char *' <LValueToRValue>
    | | | `-DeclRefExpr 0x1469286d0 <col:21> 'const char *' lvalue ParmVar 0x146928158 'hostname' 'const char *'
    | | `-ImplicitCastExpr 0x1469287a0 <col:31> 'const char *' <LValueToRValue>
    | |   `-DeclRefExpr 0x1469286f0 <col:31> 'const char *' lvalue ParmVar 0x1469280d8 'match_pattern' 'const char *'
    | `-ReturnStmt 0x1469287d8 <line:8:5, col:12>
    |   `-IntegerLiteral 0x1469287b8 <col:12> 'int' 1
    |-IfStmt 0x146940d70 <line:10:3, line:11:12>
    | |-BinaryOperator 0x146940d20 <line:10:6, col:43> 'int' contains-errors '=='
    | | |-CallExpr 0x146940ca0 <col:6, col:38> 'int'
    | | | |-ImplicitCastExpr 0x146940c88 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | | `-DeclRefExpr 0x146940b00 <col:6> 'int ()' Function 0x146940a48 'hostmatch' 'int ()'
    | | | |-ImplicitCastExpr 0x146940cd0 <col:16> 'const char *' <LValueToRValue>
    | | | | `-DeclRefExpr 0x146940b20 <col:16> 'const char *' lvalue ParmVar 0x146928158 'hostname' 'const char *'
    | | | `-ImplicitCastExpr 0x146940ce8 <col:25> 'const char *' <LValueToRValue>
    | | |   `-DeclRefExpr 0x146940b40 <col:25> 'const char *' lvalue ParmVar 0x1469280d8 'match_pattern' 'const char *'
    | | `-RecoveryExpr 0x146940d00 <col:43> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x146940d60 <line:11:5, col:12>
    |   `-IntegerLiteral 0x146940d40 <col:12> 'int' 1
    `-ReturnStmt 0x146940db0 <line:12:3, col:10>
      `-IntegerLiteral 0x146940d90 <col:10> 'int' 0
