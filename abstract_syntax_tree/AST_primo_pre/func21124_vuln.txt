`-FunctionDecl 0x12c026898  line:1:25 nft_expr_init 'struct nft_expr *(const struct nft_ctx *, const struct nlattr *)' static
  |-ParmVarDecl 0x12c00e2e8 <col:39, col:61> col:61 used ctx 'const struct nft_ctx *'
  |-ParmVarDecl 0x12c0266c8 <line:2:11, col:32> col:32 used nla 'const struct nlattr *'
  `-CompoundStmt 0x12c02a140 <line:3:1, line:33:1>
    |-DeclStmt 0x12c026b18 <line:4:2, col:32>
    | |-RecordDecl 0x12c026998 <col:2, col:9> col:9 struct nft_expr_info
    | `-VarDecl 0x12c026a98 <col:2, col:23> col:23 referenced invalid expr_info 'struct nft_expr_info'
    |-DeclStmt 0x12c026c20 <line:5:2, col:23>
    | `-VarDecl 0x12c026bb8 <col:2, col:19> col:19 used expr 'struct nft_expr *'
    |-DeclStmt 0x12c026e28 <line:6:2, col:22>
    | |-RecordDecl 0x12c026c38 <col:2, col:9> col:9 struct module
    | `-VarDecl 0x12c026da8 <col:2, col:17> col:17 used owner 'struct module *'
    |-DeclStmt 0x12c026ec0 <line:7:2, col:9>
    | `-VarDecl 0x12c026e58 <col:2, col:6> col:6 used err 'int'
    |-BinaryOperator 0x12c0270f0 <line:9:2, col:49> 'int' contains-errors '='
    | |-DeclRefExpr 0x12c026ed8 <col:2> 'int' lvalue Var 0x12c026e58 'err' 'int'
    | `-CallExpr 0x12c0270b8 <col:8, col:49> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12c027020 <col:8> 'int ()' Function 0x12c026f68 'nf_tables_expr_parse' 'int ()'
    |   |-DeclRefExpr 0x12c027040 <col:29> 'const struct nft_ctx *' lvalue ParmVar 0x12c00e2e8 'ctx' 'const struct nft_ctx *'
    |   |-DeclRefExpr 0x12c027060 <col:34> 'const struct nlattr *' lvalue ParmVar 0x12c0266c8 'nla' 'const struct nlattr *'
    |   `-UnaryOperator 0x12c0270a0 <col:39, col:40> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x12c027080 <col:40> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12c0271f0 <line:10:2, line:11:8>
    | |-BinaryOperator 0x12c027168 <line:10:6, col:12> 'int' '<'
    | | |-ImplicitCastExpr 0x12c027150 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x12c027110 <col:6> 'int' lvalue Var 0x12c026e58 'err' 'int'
    | | `-IntegerLiteral 0x12c027130 <col:12> 'int' 0
    | `-GotoStmt 0x12c0271d8 <line:11:3, col:8> 'err1' 0x12c027188
    |-BinaryOperator 0x12c0272e8 <line:13:2, col:9> 'int' contains-errors '='
    | |-DeclRefExpr 0x12c027210 <col:2> 'int' lvalue Var 0x12c026e58 'err' 'int'
    | `-UnaryOperator 0x12c0272d0 <col:8, col:9> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   `-ImplicitCastExpr 0x12c0272b8 <col:9> '<dependent type>' contains-errors <LValueToRValue>
    |     `-RecoveryExpr 0x12c027298 <col:9> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x12c027590 <line:14:2, col:56> 'struct nft_expr *' contains-errors '='
    | |-DeclRefExpr 0x12c027308 <col:2> 'struct nft_expr *' lvalue Var 0x12c026bb8 'expr' 'struct nft_expr *'
    | `-CallExpr 0x12c027560 <col:9, col:56> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12c027408 <col:9> 'int ()' Function 0x12c027350 'kzalloc' 'int ()'
    |   |-CXXDependentScopeMemberExpr 0x12c027490 <col:17, col:32> '<dependent type>' contains-errors lvalue ->size
    |   | `-CXXDependentScopeMemberExpr 0x12c027448 <col:17, col:27> '<dependent type>' contains-errors lvalue .ops
    |   |   `-RecoveryExpr 0x12c027428 <col:17> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x12c027540 <col:38> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12c0294c8 <line:15:2, line:16:8>
    | |-BinaryOperator 0x12c029440 <line:15:6, col:14> 'int' contains-errors '=='
    | | |-DeclRefExpr 0x12c0275b0 <col:6> 'struct nft_expr *' lvalue Var 0x12c026bb8 'expr' 'struct nft_expr *'
    | | `-RecoveryExpr 0x12c029420 <col:14> '<dependent type>' contains-errors lvalue
    | `-GotoStmt 0x12c0294b0 <line:16:3, col:8> 'err2' 0x12c029460
    |-BinaryOperator 0x12c0296b8 <line:18:2, col:47> 'int' contains-errors '='
    | |-DeclRefExpr 0x12c0294e8 <col:2> 'int' lvalue Var 0x12c026e58 'err' 'int'
    | `-CallExpr 0x12c029680 <col:8, col:47> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12c0295e8 <col:8> 'int ()' Function 0x12c029530 'nf_tables_newexpr' 'int ()'
    |   |-DeclRefExpr 0x12c029608 <col:26> 'const struct nft_ctx *' lvalue ParmVar 0x12c00e2e8 'ctx' 'const struct nft_ctx *'
    |   |-UnaryOperator 0x12c029648 <col:31, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-RecoveryExpr 0x12c029628 <col:32> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x12c029660 <col:43> 'struct nft_expr *' lvalue Var 0x12c026bb8 'expr' 'struct nft_expr *'
    |-IfStmt 0x12c0297b8 <line:19:2, line:20:8>
    | |-BinaryOperator 0x12c029730 <line:19:6, col:12> 'int' '<'
    | | |-ImplicitCastExpr 0x12c029718 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x12c0296d8 <col:6> 'int' lvalue Var 0x12c026e58 'err' 'int'
    | | `-IntegerLiteral 0x12c0296f8 <col:12> 'int' 0
    | `-GotoStmt 0x12c0297a0 <line:20:3, col:8> 'err3' 0x12c029750
    |-ReturnStmt 0x12c029810 <line:22:2, col:9>
    | `-ImplicitCastExpr 0x12c0297f8 <col:9> 'struct nft_expr *' <LValueToRValue>
    |   `-DeclRefExpr 0x12c0297d8 <col:9> 'struct nft_expr *' lvalue Var 0x12c026bb8 'expr' 'struct nft_expr *'
    |-LabelStmt 0x12c0299c8 <line:23:1, line:24:12> 'err3'
    | `-CallExpr 0x12c029988 <col:2, col:12> 'int'
    |   |-ImplicitCastExpr 0x12c029970 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x12c029900 <col:2> 'int ()' Function 0x12c029848 'kfree' 'int ()'
    |   `-ImplicitCastExpr 0x12c0299b0 <col:8> 'struct nft_expr *' <LValueToRValue>
    |     `-DeclRefExpr 0x12c029920 <col:8> 'struct nft_expr *' lvalue Var 0x12c026bb8 'expr' 'struct nft_expr *'
    |-LabelStmt 0x12c029b20 <line:25:1, line:26:31> 'err2'
    | `-BinaryOperator 0x12c029b00 <col:2, col:31> 'struct module *' contains-errors '='
    |   |-DeclRefExpr 0x12c0299e8 <col:2> 'struct module *' lvalue Var 0x12c026da8 'owner' 'struct module *'
    |   `-CXXDependentScopeMemberExpr 0x12c029ab8 <col:10, col:31> '<dependent type>' contains-errors lvalue ->owner
    |     `-CXXDependentScopeMemberExpr 0x12c029a70 <col:10, col:25> '<dependent type>' contains-errors lvalue ->type
    |       `-CXXDependentScopeMemberExpr 0x12c029a28 <col:10, col:20> '<dependent type>' contains-errors lvalue .ops
    |         `-RecoveryExpr 0x12c029a08 <col:10> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12c029de8 <line:27:2, line:28:49>
    | |-CXXDependentScopeMemberExpr 0x12c029bf0 <line:27:6, col:27> '<dependent type>' contains-errors lvalue ->release_ops
    | | `-CXXDependentScopeMemberExpr 0x12c029ba8 <col:6, col:21> '<dependent type>' contains-errors lvalue ->type
    | |   `-CXXDependentScopeMemberExpr 0x12c029b60 <col:6, col:16> '<dependent type>' contains-errors lvalue .ops
    | |     `-RecoveryExpr 0x12c029b40 <col:6> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x12c029dc0 <line:28:3, col:49> '<dependent type>' contains-errors
    |   |-CXXDependentScopeMemberExpr 0x12c029d10 <col:3, col:24> '<dependent type>' contains-errors lvalue ->release_ops
    |   | `-CXXDependentScopeMemberExpr 0x12c029cc8 <col:3, col:18> '<dependent type>' contains-errors lvalue ->type
    |   |   `-CXXDependentScopeMemberExpr 0x12c029c80 <col:3, col:13> '<dependent type>' contains-errors lvalue .ops
    |   |     `-RecoveryExpr 0x12c029c58 <col:3> '<dependent type>' contains-errors lvalue
    |   |       `-DeclRefExpr 0x12c029c38 <col:3> 'struct nft_expr_info' lvalue Var 0x12c026a98 'expr_info' 'struct nft_expr_info'
    |   `-CXXDependentScopeMemberExpr 0x12c029d78 <col:36, col:46> '<dependent type>' contains-errors lvalue .ops
    |     `-RecoveryExpr 0x12c029d58 <col:36> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x12c029f40 <line:30:2, col:18> 'int'
    | |-ImplicitCastExpr 0x12c029f28 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x12c029ee8 <col:2> 'int ()' Function 0x12c029e30 'module_put' 'int ()'
    | `-ImplicitCastExpr 0x12c029f68 <col:13> 'struct module *' <LValueToRValue>
    |   `-DeclRefExpr 0x12c029f08 <col:13> 'struct module *' lvalue Var 0x12c026da8 'owner' 'struct module *'
    `-LabelStmt 0x12c02a120 <line:31:1, line:32:20> 'err1'
      `-ReturnStmt 0x12c02a110 <col:2, col:20>
        `-ImplicitCastExpr 0x12c02a0f8 <col:9, col:20> 'struct nft_expr *' <IntegralToPointer>
          `-CallExpr 0x12c02a0b8 <col:9, col:20> 'int'
            |-ImplicitCastExpr 0x12c02a0a0 <col:9> 'int (*)()' <FunctionToPointerDecay>
            | `-DeclRefExpr 0x12c02a060 <col:9> 'int ()' Function 0x12c029fa8 'ERR_PTR' 'int ()'
            `-ImplicitCastExpr 0x12c02a0e0 <col:17> 'int' <LValueToRValue>
              `-DeclRefExpr 0x12c02a080 <col:17> 'int' lvalue Var 0x12c026e58 'err' 'int'
