`-FunctionDecl 0x12a826aa8  line:1:1 check_entry_size_and_hooks 'int (struct ip6t_entry *, struct xt_table_info *, const unsigned char *, const unsigned char *, const unsigned int *, const unsigned int *, unsigned int)'
  |-ParmVarDecl 0x12a80e248 <col:28, col:47> col:47 used e 'struct ip6t_entry *'
  |-ParmVarDecl 0x12a826628 <line:2:7, col:29> col:29 used newinfo 'struct xt_table_info *'
  |-ParmVarDecl 0x12a8266d8 <line:3:7, col:28> col:28 used base 'const unsigned char *'
  |-ParmVarDecl 0x12a826758 <line:4:7, col:28> col:28 used limit 'const unsigned char *'
  |-ParmVarDecl 0x12a826808 <line:5:7, col:27> col:27 used hook_entries 'const unsigned int *'
  |-ParmVarDecl 0x12a826888 <line:6:7, col:27> col:27 used underflows 'const unsigned int *'
  |-ParmVarDecl 0x12a826908 <line:7:7, col:20> col:20 used valid_hooks 'unsigned int'
  `-CompoundStmt 0x12a82ba00 <line:8:1, line:45:1>
    |-DeclStmt 0x12a826c50 <line:9:2, col:16>
    | `-VarDecl 0x12a826be8 <col:2, col:15> col:15 used h 'unsigned int'
    |-IfStmt 0x12a827190 <line:11:2, line:15:2>
    | |-RecoveryExpr 0x12a826e38 <line:11:6, line:12:56> '_Bool' contains-errors
    | `-CompoundStmt 0x12a827170 <col:63, line:15:2>
    |   |-CallExpr 0x12a827068 <line:13:3, col:20> 'int'
    |   | |-ImplicitCastExpr 0x12a827050 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x12a826f80 <col:3> 'int ()' Function 0x12a826ec8 'duprintf' 'int ()'
    |   | |-ImplicitCastExpr 0x12a827098 <col:12> 'char *' <ArrayToPointerDecay>
    |   | | `-StringLiteral 0x12a826fe0 <col:12> 'char[4]' lvalue "STR"
    |   | `-ImplicitCastExpr 0x12a8270b0 <col:19> 'struct ip6t_entry *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x12a827000 <col:19> 'struct ip6t_entry *' lvalue ParmVar 0x12a80e248 'e' 'struct ip6t_entry *'
    |   `-ReturnStmt 0x12a827160 <line:14:3, col:11>
    |     `-UnaryOperator 0x12a827148 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       `-ImplicitCastExpr 0x12a827130 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |         `-RecoveryExpr 0x12a827110 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12a827508 <line:17:2, line:22:2>
    | |-RecoveryExpr 0x12a827328 <line:17:6, line:18:65> '_Bool' contains-errors
    | `-CompoundStmt 0x12a8274e8 <col:68, line:22:2>
    |   |-CallExpr 0x12a827408 <line:19:3, line:20:22> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x12a827348 <line:19:3> 'int ()' Function 0x12a826ec8 'duprintf' 'int ()'
    |   | |-StringLiteral 0x12a827368 <col:12> 'char[4]' lvalue "STR"
    |   | |-DeclRefExpr 0x12a827388 <line:20:5> 'struct ip6t_entry *' lvalue ParmVar 0x12a80e248 'e' 'struct ip6t_entry *'
    |   | `-RecoveryExpr 0x12a8273e0 <col:8, col:11> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x12a8273a8 <col:8> 'struct ip6t_entry *' lvalue ParmVar 0x12a80e248 'e' 'struct ip6t_entry *'
    |   `-ReturnStmt 0x12a8274d8 <line:21:3, col:11>
    |     `-UnaryOperator 0x12a8274c0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       `-ImplicitCastExpr 0x12a8274a8 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |         `-RecoveryExpr 0x12a827488 <col:11> '<dependent type>' contains-errors lvalue
    |-ForStmt 0x12a82b108 <line:25:2, line:39:2>
    | |-BinaryOperator 0x12a827580 <line:25:7, col:11> 'unsigned int' '='
    | | |-DeclRefExpr 0x12a827528 <col:7> 'unsigned int' lvalue Var 0x12a826be8 'h' 'unsigned int'
    | | `-ImplicitCastExpr 0x12a827568 <col:11> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x12a827548 <col:11> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x12a82a420 <col:14, col:18> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x12a8275a0 <col:14> 'unsigned int' lvalue Var 0x12a826be8 'h' 'unsigned int'
    | | `-RecoveryExpr 0x12a82a400 <col:18> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x12a82a460 <col:36, col:37> 'unsigned int' postfix '++'
    | | `-DeclRefExpr 0x12a82a440 <col:36> 'unsigned int' lvalue Var 0x12a826be8 'h' 'unsigned int'
    | `-CompoundStmt 0x12a82b0e0 <col:41, line:39:2>
    |   |-IfStmt 0x12a82a5c0 <line:26:3, line:27:4>
    |   | |-UnaryOperator 0x12a82a5a0 <line:26:7, col:31> 'int' prefix '!' cannot overflow
    |   | | `-ParenExpr 0x12a82a580 <col:8, col:31> 'unsigned int'
    |   | |   `-BinaryOperator 0x12a82a560 <col:9, col:30> 'unsigned int' '&'
    |   | |     |-ImplicitCastExpr 0x12a82a530 <col:9> 'unsigned int' <LValueToRValue>
    |   | |     | `-DeclRefExpr 0x12a82a478 <col:9> 'unsigned int' lvalue ParmVar 0x12a826908 'valid_hooks' 'unsigned int'
    |   | |     `-ImplicitCastExpr 0x12a82a548 <col:23, col:30> 'unsigned int' <IntegralCast>
    |   | |       `-ParenExpr 0x12a82a510 <col:23, col:30> 'int'
    |   | |         `-BinaryOperator 0x12a82a4f0 <col:24, col:29> 'int' '<<'
    |   | |           |-IntegerLiteral 0x12a82a498 <col:24> 'int' 1
    |   | |           `-ImplicitCastExpr 0x12a82a4d8 <col:29> 'unsigned int' <LValueToRValue>
    |   | |             `-DeclRefExpr 0x12a82a4b8 <col:29> 'unsigned int' lvalue Var 0x12a826be8 'h' 'unsigned int'
    |   | `-ContinueStmt 0x12a82a5b8 <line:27:4>
    |   |-IfStmt 0x12a82a910 <line:28:3, line:29:43>
    |   | |-BinaryOperator 0x12a82a770 <line:28:7, col:50> 'int' '=='
    |   | | |-BinaryOperator 0x12a82a690 <col:7, col:28> 'long' '-'
    |   | | | |-CStyleCastExpr 0x12a82a630 <col:7, col:24> 'unsigned char *' <BitCast>
    |   | | | | `-ImplicitCastExpr 0x12a82a618 <col:24> 'struct ip6t_entry *' <LValueToRValue> part_of_explicit_cast
    |   | | | |   `-DeclRefExpr 0x12a82a5e0 <col:24> 'struct ip6t_entry *' lvalue ParmVar 0x12a80e248 'e' 'struct ip6t_entry *'
    |   | | | `-ImplicitCastExpr 0x12a82a678 <col:28> 'const unsigned char *' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x12a82a658 <col:28> 'const unsigned char *' lvalue ParmVar 0x12a8266d8 'base' 'const unsigned char *'
    |   | | `-ImplicitCastExpr 0x12a82a758 <col:36, col:50> 'long' <IntegralCast>
    |   | |   `-ImplicitCastExpr 0x12a82a740 <col:36, col:50> 'unsigned int' <LValueToRValue>
    |   | |     `-ArraySubscriptExpr 0x12a82a720 <col:36, col:50> 'const unsigned int' lvalue
    |   | |       |-ImplicitCastExpr 0x12a82a6f0 <col:36> 'const unsigned int *' <LValueToRValue>
    |   | |       | `-DeclRefExpr 0x12a82a6b0 <col:36> 'const unsigned int *' lvalue ParmVar 0x12a826808 'hook_entries' 'const unsigned int *'
    |   | |       `-ImplicitCastExpr 0x12a82a708 <col:49> 'unsigned int' <LValueToRValue>
    |   | |         `-DeclRefExpr 0x12a82a6d0 <col:49> 'unsigned int' lvalue Var 0x12a826be8 'h' 'unsigned int'
    |   | `-BinaryOperator 0x12a82a8f0 <line:29:4, col:43> '<dependent type>' contains-errors '='
    |   |   |-ArraySubscriptExpr 0x12a82a840 <col:4, col:25> '<dependent type>' contains-errors lvalue
    |   |   | |-ImplicitCastExpr 0x12a82a810 <col:4, col:13> '<dependent type>' contains-errors <LValueToRValue>
    |   |   | | `-RecoveryExpr 0x12a82a7c8 <col:4, col:13> '<dependent type>' contains-errors lvalue
    |   |   | |   `-DeclRefExpr 0x12a82a790 <col:4> 'struct xt_table_info *' lvalue ParmVar 0x12a826628 'newinfo' 'struct xt_table_info *'
    |   |   | `-ImplicitCastExpr 0x12a82a828 <col:24> 'unsigned int' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x12a82a7f0 <col:24> 'unsigned int' lvalue Var 0x12a826be8 'h' 'unsigned int'
    |   |   `-ArraySubscriptExpr 0x12a82a8d0 <col:29, col:43> 'const unsigned int' lvalue
    |   |     |-ImplicitCastExpr 0x12a82a8a0 <col:29> 'const unsigned int *' <LValueToRValue>
    |   |     | `-DeclRefExpr 0x12a82a860 <col:29> 'const unsigned int *' lvalue ParmVar 0x12a826808 'hook_entries' 'const unsigned int *'
    |   |     `-ImplicitCastExpr 0x12a82a8b8 <col:42> 'unsigned int' <LValueToRValue>
    |   |       `-DeclRefExpr 0x12a82a880 <col:42> 'unsigned int' lvalue Var 0x12a826be8 'h' 'unsigned int'
    |   `-IfStmt 0x12a82b0c0 <line:30:3, line:38:3>
    |     |-BinaryOperator 0x12a82aac0 <line:30:7, col:48> 'int' '=='
    |     | |-BinaryOperator 0x12a82a9e0 <col:7, col:28> 'long' '-'
    |     | | |-CStyleCastExpr 0x12a82a980 <col:7, col:24> 'unsigned char *' <BitCast>
    |     | | | `-ImplicitCastExpr 0x12a82a968 <col:24> 'struct ip6t_entry *' <LValueToRValue> part_of_explicit_cast
    |     | | |   `-DeclRefExpr 0x12a82a930 <col:24> 'struct ip6t_entry *' lvalue ParmVar 0x12a80e248 'e' 'struct ip6t_entry *'
    |     | | `-ImplicitCastExpr 0x12a82a9c8 <col:28> 'const unsigned char *' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x12a82a9a8 <col:28> 'const unsigned char *' lvalue ParmVar 0x12a8266d8 'base' 'const unsigned char *'
    |     | `-ImplicitCastExpr 0x12a82aaa8 <col:36, col:48> 'long' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x12a82aa90 <col:36, col:48> 'unsigned int' <LValueToRValue>
    |     |     `-ArraySubscriptExpr 0x12a82aa70 <col:36, col:48> 'const unsigned int' lvalue
    |     |       |-ImplicitCastExpr 0x12a82aa40 <col:36> 'const unsigned int *' <LValueToRValue>
    |     |       | `-DeclRefExpr 0x12a82aa00 <col:36> 'const unsigned int *' lvalue ParmVar 0x12a826888 'underflows' 'const unsigned int *'
    |     |       `-ImplicitCastExpr 0x12a82aa58 <col:47> 'unsigned int' <LValueToRValue>
    |     |         `-DeclRefExpr 0x12a82aa20 <col:47> 'unsigned int' lvalue Var 0x12a826be8 'h' 'unsigned int'
    |     `-CompoundStmt 0x12a82b0a0 <col:51, line:38:3>
    |       |-IfStmt 0x12a82af00 <line:31:4, line:36:4>
    |       | |-UnaryOperator 0x12a82ac58 <line:31:8, col:26> 'int' prefix '!' cannot overflow
    |       | | `-CallExpr 0x12a82ac18 <col:9, col:26> 'int'
    |       | |   |-ImplicitCastExpr 0x12a82ac00 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |       | |   | `-DeclRefExpr 0x12a82abc0 <col:9> 'int ()' Function 0x12a82ab08 'check_underflow' 'int ()'
    |       | |   `-ImplicitCastExpr 0x12a82ac40 <col:25> 'struct ip6t_entry *' <LValueToRValue>
    |       | |     `-DeclRefExpr 0x12a82abe0 <col:25> 'struct ip6t_entry *' lvalue ParmVar 0x12a80e248 'e' 'struct ip6t_entry *'
    |       | `-CompoundStmt 0x12a82aee0 <col:29, line:36:4>
    |       |   |-CallExpr 0x12a82adf8 <line:32:5, line:34:17> 'int'
    |       |   | |-ImplicitCastExpr 0x12a82ade0 <line:32:5> 'int (*)()' <FunctionToPointerDecay>
    |       |   | | `-DeclRefExpr 0x12a82ad50 <col:5> 'int ()' Function 0x12a82ac98 'pr_err' 'int ()'
    |       |   | `-ImplicitCastExpr 0x12a82ae20 <col:12, line:34:12> 'char *' <ArrayToPointerDecay>
    |       |   |   `-StringLiteral 0x12a82adb0 <line:32:12, line:34:12> 'char[10]' lvalue "STRSTRSTR"
    |       |   `-ReturnStmt 0x12a82aed0 <line:35:5, col:13>
    |       |     `-UnaryOperator 0x12a82aeb8 <col:12, col:13> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       |       `-ImplicitCastExpr 0x12a82aea0 <col:13> '<dependent type>' contains-errors <LValueToRValue>
    |       |         `-RecoveryExpr 0x12a82ae80 <col:13> '<dependent type>' contains-errors lvalue
    |       `-BinaryOperator 0x12a82b080 <line:37:4, col:40> '<dependent type>' contains-errors '='
    |         |-ArraySubscriptExpr 0x12a82afd0 <col:4, col:24> '<dependent type>' contains-errors lvalue
    |         | |-ImplicitCastExpr 0x12a82afa0 <col:4, col:13> '<dependent type>' contains-errors <LValueToRValue>
    |         | | `-RecoveryExpr 0x12a82af58 <col:4, col:13> '<dependent type>' contains-errors lvalue
    |         | |   `-DeclRefExpr 0x12a82af20 <col:4> 'struct xt_table_info *' lvalue ParmVar 0x12a826628 'newinfo' 'struct xt_table_info *'
    |         | `-ImplicitCastExpr 0x12a82afb8 <col:23> 'unsigned int' <LValueToRValue>
    |         |   `-DeclRefExpr 0x12a82af80 <col:23> 'unsigned int' lvalue Var 0x12a826be8 'h' 'unsigned int'
    |         `-ArraySubscriptExpr 0x12a82b060 <col:28, col:40> 'const unsigned int' lvalue
    |           |-ImplicitCastExpr 0x12a82b030 <col:28> 'const unsigned int *' <LValueToRValue>
    |           | `-DeclRefExpr 0x12a82aff0 <col:28> 'const unsigned int *' lvalue ParmVar 0x12a826888 'underflows' 'const unsigned int *'
    |           `-ImplicitCastExpr 0x12a82b048 <col:39> 'unsigned int' <LValueToRValue>
    |             `-DeclRefExpr 0x12a82b010 <col:39> 'unsigned int' lvalue Var 0x12a826be8 'h' 'unsigned int'
    |-BinaryOperator 0x12a82b3a8 <line:43:2, col:16> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x12a82b360 <col:2, col:5> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x12a82b328 <col:2> 'struct ip6t_entry *' lvalue ParmVar 0x12a80e248 'e' 'struct ip6t_entry *'
    | `-IntegerLiteral 0x12a82b388 <col:16> 'int' 0
    `-ReturnStmt 0x12a82b3e8 <line:44:2, col:9>
      `-IntegerLiteral 0x12a82b3c8 <col:9> 'int' 0
