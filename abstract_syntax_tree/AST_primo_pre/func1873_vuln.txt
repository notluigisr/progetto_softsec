`-FunctionDecl 0x13a128438  line:1:12 invalid fts3AllocateSegdirIdx 'int (int *, int, int, int, int *)' static
  |-ParmVarDecl 0x13a128128 <line:2:3, col:14> col:14 invalid p 'int *'
  |-ParmVarDecl 0x13a1281a8 <line:3:3, col:7> col:7 used iLangid 'int'
  |-ParmVarDecl 0x13a128228 <line:4:3, col:7> col:7 used iIndex 'int'
  |-ParmVarDecl 0x13a1282a8 <line:5:3, col:7> col:7 used iLevel 'int'
  |-ParmVarDecl 0x13a128328 <line:6:3, col:8> col:8 used piIdx 'int *'
  `-CompoundStmt 0x13a143cd0 <line:7:2, line:39:1>
    |-DeclStmt 0x13a128588 <line:8:3, col:9>
    | `-VarDecl 0x13a128520 <col:3, col:7> col:7 used rc 'int'
    |-DeclStmt 0x13a128658 <line:10:3, col:16>
    | `-VarDecl 0x13a1285d0 <col:3, col:15> col:7 used iNext 'int' cinit
    |   `-IntegerLiteral 0x13a128638 <col:15> 'int' 0
    |-CallExpr 0x13a1418c8 <line:12:3, col:22> 'int'
    | |-ImplicitCastExpr 0x13a1418b0 <col:3> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x13a1287d0 <col:3> 'int ()' Function 0x13a128718 'assert' 'int ()'
    | `-BinaryOperator 0x13a141858 <col:11, col:20> 'int' '>='
    |   |-ImplicitCastExpr 0x13a141840 <col:11> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x13a141800 <col:11> 'int' lvalue ParmVar 0x13a1281a8 'iLangid' 'int'
    |   `-IntegerLiteral 0x13a141820 <col:20> 'int' 0
    |-CallExpr 0x13a1419b8 <line:13:3, col:24> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13a1418f0 <col:3> 'int ()' Function 0x13a128718 'assert' 'int ()'
    | `-BinaryOperator 0x13a141998 <col:11, col:22> 'int' contains-errors '>='
    |   |-CXXDependentScopeMemberExpr 0x13a141930 <col:11, col:14> '<dependent type>' contains-errors lvalue ->nIndex
    |   | `-RecoveryExpr 0x13a141910 <col:11> '<dependent type>' contains-errors lvalue
    |   `-IntegerLiteral 0x13a141978 <col:22> 'int' 1
    |-BinaryOperator 0x13a141c80 <line:16:3, col:59> 'int' contains-errors '='
    | |-DeclRefExpr 0x13a1419e0 <col:3> 'int' lvalue Var 0x13a128520 'rc' 'int'
    | `-CallExpr 0x13a141c40 <col:8, col:59> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13a141ae0 <col:8> 'int ()' Function 0x13a141a28 'fts3SqlStmt' 'int ()'
    |   |-RecoveryExpr 0x13a141b00 <col:20> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x13a141be8 <col:23> '<dependent type>' contains-errors lvalue
    |   |-UnaryOperator 0x13a141c28 <col:47, col:48> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-RecoveryExpr 0x13a141c08 <col:48> '<dependent type>' contains-errors lvalue
    |   `-IntegerLiteral 0x13a141b68 <col:58> 'int' 0
    |-IfStmt 0x13a142720 <line:17:3, line:25:3>
    | |-BinaryOperator 0x13a141d18 <line:17:7, col:11> 'int' contains-errors '=='
    | | |-DeclRefExpr 0x13a141ca0 <col:7> 'int' lvalue Var 0x13a128520 'rc' 'int'
    | | `-RecoveryExpr 0x13a141cf8 <col:11> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x13a1426f8 <col:22, line:25:3>
    |   |-CallExpr 0x13a142088 <line:18:5, line:20:5> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x13a141e18 <line:18:5> 'int ()' Function 0x13a141d60 'sqlite3_bind_int64' 'int ()'
    |   | |-RecoveryExpr 0x13a142068 <line:19:9> '<dependent type>' contains-errors lvalue
    |   | |-IntegerLiteral 0x13a141e50 <col:19> 'int' 1
    |   | `-CallExpr 0x13a141ff0 <col:22, col:65> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x13a141f50 <col:22> 'int ()' Function 0x13a141e98 'getAbsoluteLevel' 'int ()'
    |   |   |-RecoveryExpr 0x13a141f70 <col:39> '<dependent type>' contains-errors lvalue
    |   |   |-DeclRefExpr 0x13a141f90 <col:42> 'int' lvalue ParmVar 0x13a1281a8 'iLangid' 'int'
    |   |   |-DeclRefExpr 0x13a141fb0 <col:51> 'int' lvalue ParmVar 0x13a128228 'iIndex' 'int'
    |   |   `-DeclRefExpr 0x13a141fd0 <col:59> 'int' lvalue ParmVar 0x13a1282a8 'iLevel' 'int'
    |   |-IfStmt 0x13a1424f0 <line:21:5, line:23:5>
    |   | |-BinaryOperator 0x13a1422a0 <line:21:9, col:42> 'int' contains-errors '=='
    |   | | |-RecoveryExpr 0x13a142238 <col:9> '<dependent type>' contains-errors lvalue
    |   | | `-CallExpr 0x13a142278 <col:21, col:42> '<dependent type>' contains-errors
    |   | |   |-DeclRefExpr 0x13a1421b8 <col:21> 'int ()' Function 0x13a142100 'sqlite3_step' 'int ()'
    |   | |   `-RecoveryExpr 0x13a142258 <col:34> '<dependent type>' contains-errors lvalue
    |   | `-CompoundStmt 0x13a1424d8 <col:45, line:23:5>
    |   |   `-BinaryOperator 0x13a1424b8 <line:22:7, col:45> 'int' contains-errors '='
    |   |     |-DeclRefExpr 0x13a1422c0 <col:7> 'int' lvalue Var 0x13a1285d0 'iNext' 'int'
    |   |     `-CallExpr 0x13a142488 <col:15, col:45> '<dependent type>' contains-errors
    |   |       |-DeclRefExpr 0x13a1423c0 <col:15> 'int ()' Function 0x13a142308 'sqlite3_column_int' 'int ()'
    |   |       |-RecoveryExpr 0x13a142468 <col:34> '<dependent type>' contains-errors lvalue
    |   |       `-IntegerLiteral 0x13a1423f8 <col:44> 'int' 0
    |   `-BinaryOperator 0x13a1426d8 <line:24:5, col:32> 'int' contains-errors '='
    |     |-DeclRefExpr 0x13a142510 <col:5> 'int' lvalue Var 0x13a128520 'rc' 'int'
    |     `-CallExpr 0x13a1426b0 <col:10, col:32> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x13a142610 <col:10> 'int ()' Function 0x13a142558 'sqlite3_reset' 'int ()'
    |       `-RecoveryExpr 0x13a142690 <col:24> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x13a143c68 <line:27:3, line:36:3>
    | |-BinaryOperator 0x13a1427b8 <line:27:7, col:11> 'int' contains-errors '=='
    | | |-DeclRefExpr 0x13a142740 <col:7> 'int' lvalue Var 0x13a128520 'rc' 'int'
    | | `-RecoveryExpr 0x13a142798 <col:11> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x13a143c50 <col:22, line:36:3>
    |   `-IfStmt 0x13a143c20 <line:29:5, line:35:5> has_else
    |     |-BinaryOperator 0x13a143658 <line:29:9, col:16> 'int' contains-errors '>='
    |     | |-DeclRefExpr 0x13a1427d8 <col:9> 'int' lvalue Var 0x13a1285d0 'iNext' 'int'
    |     | `-RecoveryExpr 0x13a143638 <col:16> '<dependent type>' contains-errors lvalue
    |     |-CompoundStmt 0x13a143b38 <col:34, line:33:5>
    |     | |-CallExpr 0x13a143878 <line:30:7, col:68> '<dependent type>' contains-errors
    |     | | |-DeclRefExpr 0x13a143758 <col:7> 'int ()' Function 0x13a1436a0 'fts3LogMerge' 'int ()'
    |     | | |-IntegerLiteral 0x13a143778 <col:20> 'int' 16
    |     | | `-CallExpr 0x13a143838 <col:24, col:67> '<dependent type>' contains-errors
    |     | |   |-DeclRefExpr 0x13a143798 <col:24> 'int ()' Function 0x13a141e98 'getAbsoluteLevel' 'int ()'
    |     | |   |-RecoveryExpr 0x13a1437b8 <col:41> '<dependent type>' contains-errors lvalue
    |     | |   |-DeclRefExpr 0x13a1437d8 <col:44> 'int' lvalue ParmVar 0x13a1281a8 'iLangid' 'int'
    |     | |   |-DeclRefExpr 0x13a1437f8 <col:53> 'int' lvalue ParmVar 0x13a128228 'iIndex' 'int'
    |     | |   `-DeclRefExpr 0x13a143818 <col:61> 'int' lvalue ParmVar 0x13a1282a8 'iLevel' 'int'
    |     | |-BinaryOperator 0x13a143a88 <line:31:7, col:55> 'int' contains-errors '='
    |     | | |-DeclRefExpr 0x13a1438a8 <col:7> 'int' lvalue Var 0x13a128520 'rc' 'int'
    |     | | `-CallExpr 0x13a143a48 <col:12, col:55> '<dependent type>' contains-errors
    |     | |   |-DeclRefExpr 0x13a1439a8 <col:12> 'int ()' Function 0x13a1438f0 'fts3SegmentMerge' 'int ()'
    |     | |   |-RecoveryExpr 0x13a1439c8 <col:29> '<dependent type>' contains-errors lvalue
    |     | |   |-DeclRefExpr 0x13a1439e8 <col:32> 'int' lvalue ParmVar 0x13a1281a8 'iLangid' 'int'
    |     | |   |-DeclRefExpr 0x13a143a08 <col:41> 'int' lvalue ParmVar 0x13a128228 'iIndex' 'int'
    |     | |   `-DeclRefExpr 0x13a143a28 <col:49> 'int' lvalue ParmVar 0x13a1282a8 'iLevel' 'int'
    |     | `-BinaryOperator 0x13a143b18 <line:32:7, col:16> 'int' '='
    |     |   |-UnaryOperator 0x13a143ae0 <col:7, col:8> 'int' lvalue prefix '*' cannot overflow
    |     |   | `-ImplicitCastExpr 0x13a143ac8 <col:8> 'int *' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x13a143aa8 <col:8> 'int *' lvalue ParmVar 0x13a128328 'piIdx' 'int *'
    |     |   `-IntegerLiteral 0x13a143af8 <col:16> 'int' 0
    |     `-CompoundStmt 0x13a143c08 <line:33:10, line:35:5>
    |       `-BinaryOperator 0x13a143be8 <line:34:7, col:16> 'int' '='
    |         |-UnaryOperator 0x13a143b98 <col:7, col:8> 'int' lvalue prefix '*' cannot overflow
    |         | `-ImplicitCastExpr 0x13a143b80 <col:8> 'int *' <LValueToRValue>
    |         |   `-DeclRefExpr 0x13a143b60 <col:8> 'int *' lvalue ParmVar 0x13a128328 'piIdx' 'int *'
    |         `-ImplicitCastExpr 0x13a143bd0 <col:16> 'int' <LValueToRValue>
    |           `-DeclRefExpr 0x13a143bb0 <col:16> 'int' lvalue Var 0x13a1285d0 'iNext' 'int'
    `-ReturnStmt 0x13a143cc0 <line:38:3, col:10>
      `-ImplicitCastExpr 0x13a143ca8 <col:10> 'int' <LValueToRValue>
        `-DeclRefExpr 0x13a143c88 <col:10> 'int' lvalue Var 0x13a128520 'rc' 'int'
