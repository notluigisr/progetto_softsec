`-FunctionDecl 0x1201283a8  line:1:16 invalid js_sys_getenv 'int (int *, int, int, int *)' static
  |-ParmVarDecl 0x120128128 <col:30, col:41> col:41 invalid ctx 'int *'
  |-ParmVarDecl 0x1201281a8 <col:46, col:59> col:59 invalid this_val 'int'
  |-ParmVarDecl 0x120128228 <col:69, col:73> col:73 used argc 'int'
  |-ParmVarDecl 0x1201282a8 <col:79, col:93> col:93 invalid argv 'int *'
  `-CompoundStmt 0x1201424b8 <line:2:1, line:10:1>
    |-DeclStmt 0x120128588 <line:3:2, col:23>
    | |-VarDecl 0x120128488 <col:2, col:14> col:14 used str 'const char *'
    | `-VarDecl 0x120128508 <col:2, col:20> col:20 used val 'const char *'
    |-IfStmt 0x1201287c8 <line:4:2, col:39>
    | |-UnaryOperator 0x1201285d8 <col:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x1201285c0 <col:7> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x1201285a0 <col:7> 'int' lvalue ParmVar 0x120128228 'argc' 'int'
    | `-ReturnStmt 0x1201287b8 <col:13, col:39>
    |   `-CallExpr 0x120128790 <col:20, col:39> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x120128750 <col:20> 'int ()' Function 0x120128698 'GF_JS_EXCEPTION' 'int ()'
    |     `-RecoveryExpr 0x120128770 <col:36> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x1201419e8 <line:5:2, col:33> 'const char *' contains-errors '='
    | |-DeclRefExpr 0x120141800 <col:2> 'const char *' lvalue Var 0x120128488 'str' 'const char *'
    | `-CallExpr 0x1201419b8 <col:8, col:33> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x120141900 <col:8> 'int ()' Function 0x120141848 'JS_ToCString' 'int ()'
    |   |-RecoveryExpr 0x120141920 <col:21> '<dependent type>' contains-errors lvalue
    |   `-ArraySubscriptExpr 0x120141998 <col:26, col:32> '<dependent type>' contains-errors lvalue
    |     |-ImplicitCastExpr 0x120141980 <col:26> '<dependent type>' contains-errors <LValueToRValue>
    |     | `-RecoveryExpr 0x120141940 <col:26> '<dependent type>' contains-errors lvalue
    |     `-IntegerLiteral 0x120141960 <col:31> 'int' 0
    |-IfStmt 0x120141ad0 <line:6:2, col:38>
    | |-UnaryOperator 0x120141a40 <col:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x120141a28 <col:7> 'const char *' <LValueToRValue>
    | |   `-DeclRefExpr 0x120141a08 <col:7> 'const char *' lvalue Var 0x120128488 'str' 'const char *'
    | `-ReturnStmt 0x120141ac0 <col:12, col:38>
    |   `-CallExpr 0x120141a98 <col:19, col:38> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x120141a58 <col:19> 'int ()' Function 0x120128698 'GF_JS_EXCEPTION' 'int ()'
    |     `-RecoveryExpr 0x120141a78 <col:35> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x1201420f0 <line:7:2, col:18> 'const char *' '='
    | |-DeclRefExpr 0x120141af0 <col:2> 'const char *' lvalue Var 0x120128508 'val' 'const char *'
    | `-ImplicitCastExpr 0x120141cb8 <col:8, col:18> 'const char *' <IntegralToPointer>
    |   `-CallExpr 0x120141c78 <col:8, col:18> 'int'
    |     |-ImplicitCastExpr 0x120141c60 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x120141bf0 <col:8> 'int ()' Function 0x120141b38 'getenv' 'int ()'
    |     `-ImplicitCastExpr 0x120141ca0 <col:15> 'const char *' <LValueToRValue>
    |       `-DeclRefExpr 0x120141c10 <col:15> 'const char *' lvalue Var 0x120128488 'str' 'const char *'
    |-CallExpr 0x120142250 <line:8:2, col:25> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1201421f0 <col:2> 'int ()' Function 0x120142138 'JS_FreeCString' 'int ()'
    | |-RecoveryExpr 0x120142210 <col:17> '<dependent type>' contains-errors lvalue
    | `-DeclRefExpr 0x120142230 <col:22> 'const char *' lvalue Var 0x120128488 'str' 'const char *'
    `-ReturnStmt 0x1201424a8 <line:9:2, col:40>
      `-ConditionalOperator 0x120142478 <col:9, col:40> '<dependent type>' contains-errors
        |-DeclRefExpr 0x120142280 <col:9> 'const char *' lvalue Var 0x120128508 'val' 'const char *'
        |-CallExpr 0x1201423e0 <col:15, col:36> '<dependent type>' contains-errors
        | |-DeclRefExpr 0x120142380 <col:15> 'int ()' Function 0x1201422c8 'JS_NewString' 'int ()'
        | |-RecoveryExpr 0x1201423a0 <col:28> '<dependent type>' contains-errors lvalue
        | `-DeclRefExpr 0x1201423c0 <col:33> 'const char *' lvalue Var 0x120128508 'val' 'const char *'
        `-RecoveryExpr 0x120142458 <col:40> '<dependent type>' contains-errors lvalue
