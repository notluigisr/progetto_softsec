`-FunctionDecl 0x136026688  line:1:5 ip6_mroute_getsockopt 'int (struct sock *, int, char)'
  |-ParmVarDecl 0x13600e248 <col:27, col:40> col:40 used sk 'struct sock *'
  |-ParmVarDecl 0x13600e2c8 <col:44, col:48> col:48 used optname 'int'
  |-ParmVarDecl 0x13600e340 <col:57, col:62> col:62 __user 'char'
  `-CompoundStmt 0x13602ded8 <line:3:1, line:41:1>
    |-DeclStmt 0x136026810 <line:4:2, col:9>
    | `-VarDecl 0x1360267a8 <col:2, col:6> col:6 used olr 'int'
    |-DeclStmt 0x1360268a8 <line:5:2, col:9>
    | `-VarDecl 0x136026840 <col:2, col:6> col:6 used val 'int'
    |-DeclStmt 0x136026cb8 <line:6:2, col:32>
    | |-RecordDecl 0x1360268c0 <col:2, col:9> col:9 struct net
    | `-VarDecl 0x136026a28 <col:2, col:31> col:14 used net 'struct net *' cinit
    |   `-ImplicitCastExpr 0x136026c88 <col:20, col:31> 'struct net *' <IntegralToPointer>
    |     `-CallExpr 0x136026c48 <col:20, col:31> 'int'
    |       |-ImplicitCastExpr 0x136026c30 <col:20> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x136026bc0 <col:20> 'int ()' Function 0x136026b08 'sock_net' 'int ()'
    |       `-ImplicitCastExpr 0x136026c70 <col:29> 'struct sock *' <LValueToRValue>
    |         `-DeclRefExpr 0x136026be0 <col:29> 'struct sock *' lvalue ParmVar 0x13600e248 'sk' 'struct sock *'
    |-DeclStmt 0x136026eb8 <line:7:2, col:23>
    | |-RecordDecl 0x136026cd0 <col:2, col:9> col:9 struct mr6_table
    | `-VarDecl 0x136026e38 <col:2, col:20> col:20 used mrt 'struct mr6_table *'
    |-BinaryOperator 0x136027420 <line:9:2, col:72> 'struct mr6_table *' contains-errors '='
    | |-DeclRefExpr 0x136026ed0 <col:2> 'struct mr6_table *' lvalue Var 0x136026e38 'mrt' 'struct mr6_table *'
    | `-CallExpr 0x1360273f0 <col:8, col:72> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x136026fd0 <col:8> 'int ()' Function 0x136026f18 'ip6mr_get_table' 'int ()'
    |   |-DeclRefExpr 0x136026ff0 <col:24> 'struct net *' lvalue Var 0x136026a28 'net' 'struct net *'
    |   `-BinaryConditionalOperator 0x1360273b0 <col:29, col:58> '<dependent type>' contains-errors
    |     |-ImplicitCastExpr 0x136027380 <col:29, col:42> '<dependent type>' contains-errors <LValueToRValue>
    |     | `-RecoveryExpr 0x136027338 <col:29, col:42> '<dependent type>' contains-errors lvalue
    |     |   `-CallExpr 0x1360272f8 <col:29, col:39> 'int'
    |     |     |-ImplicitCastExpr 0x1360272e0 <col:29> 'int (*)()' <FunctionToPointerDecay>
    |     |     | `-DeclRefExpr 0x1360270f0 <col:29> 'int ()' Function 0x136027038 'raw6_sk' 'int ()'
    |     |     `-ImplicitCastExpr 0x136027320 <col:37> 'struct sock *' <LValueToRValue>
    |     |       `-DeclRefExpr 0x136027110 <col:37> 'struct sock *' lvalue ParmVar 0x13600e248 'sk' 'struct sock *'
    |     |-OpaqueValueExpr 0x136027398 <col:29, col:42> '<dependent type>' contains-errors
    |     | `-ImplicitCastExpr 0x136027380 <col:29, col:42> '<dependent type>' contains-errors <LValueToRValue>
    |     |   `-RecoveryExpr 0x136027338 <col:29, col:42> '<dependent type>' contains-errors lvalue
    |     |     `-CallExpr 0x1360272f8 <col:29, col:39> 'int'
    |     |       |-ImplicitCastExpr 0x1360272e0 <col:29> 'int (*)()' <FunctionToPointerDecay>
    |     |       | `-DeclRefExpr 0x1360270f0 <col:29> 'int ()' Function 0x136027038 'raw6_sk' 'int ()'
    |     |       `-ImplicitCastExpr 0x136027320 <col:37> 'struct sock *' <LValueToRValue>
    |     |         `-DeclRefExpr 0x136027110 <col:37> 'struct sock *' lvalue ParmVar 0x13600e248 'sk' 'struct sock *'
    |     |-OpaqueValueExpr 0x136027398 <col:29, col:42> '<dependent type>' contains-errors
    |     | `-ImplicitCastExpr 0x136027380 <col:29, col:42> '<dependent type>' contains-errors <LValueToRValue>
    |     |   `-RecoveryExpr 0x136027338 <col:29, col:42> '<dependent type>' contains-errors lvalue
    |     |     `-CallExpr 0x1360272f8 <col:29, col:39> 'int'
    |     |       |-ImplicitCastExpr 0x1360272e0 <col:29> 'int (*)()' <FunctionToPointerDecay>
    |     |       | `-DeclRefExpr 0x1360270f0 <col:29> 'int ()' Function 0x136027038 'raw6_sk' 'int ()'
    |     |       `-ImplicitCastExpr 0x136027320 <col:37> 'struct sock *' <LValueToRValue>
    |     |         `-DeclRefExpr 0x136027110 <col:37> 'struct sock *' lvalue ParmVar 0x13600e248 'sk' 'struct sock *'
    |     `-RecoveryExpr 0x136027360 <col:58> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x136027538 <line:10:2, line:11:11>
    | |-UnaryOperator 0x136027478 <line:10:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x136027460 <col:7> 'struct mr6_table *' <LValueToRValue>
    | |   `-DeclRefExpr 0x136027440 <col:7> 'struct mr6_table *' lvalue Var 0x136026e38 'mrt' 'struct mr6_table *'
    | `-ReturnStmt 0x136027528 <line:11:3, col:11>
    |   `-UnaryOperator 0x136027510 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x1360274f8 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x1360274d8 <col:11> '<dependent type>' contains-errors lvalue
    |-SwitchStmt 0x136027590 <line:13:2, line:27:2>
    | |-ImplicitCastExpr 0x136027578 <line:13:10> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x136027558 <col:10> 'int' lvalue ParmVar 0x13600e2c8 'optname' 'int'
    | `-CompoundStmt 0x13602d5d0 <col:19, line:27:2>
    |   |-BinaryOperator 0x13602d420 <line:15:3, col:9> 'int' '='
    |   | |-DeclRefExpr 0x1360275d0 <col:3> 'int' lvalue Var 0x136026840 'val' 'int'
    |   | `-IntegerLiteral 0x13602d400 <col:9> 'int' 773
    |   |-BreakStmt 0x13602d440 <line:16:3>
    |   |-BinaryOperator 0x13602d4e0 <line:23:3, col:14> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x13602d460 <col:3> 'int' lvalue Var 0x136026840 'val' 'int'
    |   | `-RecoveryExpr 0x13602d4b8 <col:9, col:14> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x13602d480 <col:9> 'struct mr6_table *' lvalue Var 0x136026e38 'mrt' 'struct mr6_table *'
    |   |-BreakStmt 0x13602d500 <line:24:3>
    |   `-DefaultStmt 0x13602d5b0 <line:25:2, line:26:11>
    |     `-ReturnStmt 0x13602d5a0 <col:3, col:11>
    |       `-UnaryOperator 0x13602d588 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |         `-ImplicitCastExpr 0x13602d570 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |           `-RecoveryExpr 0x13602d550 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x13602d868 <line:29:2, line:30:11>
    | |-CallExpr 0x13602d790 <line:29:6, col:26> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x13602d6e8 <col:6> 'int ()' Function 0x13602d630 'get_user' 'int ()'
    | | |-DeclRefExpr 0x13602d708 <col:15> 'int' lvalue Var 0x1360267a8 'olr' 'int'
    | | `-RecoveryExpr 0x13602d770 <col:20> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x13602d858 <line:30:3, col:11>
    |   `-UnaryOperator 0x13602d840 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x13602d828 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x13602d808 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x13602db20 <line:33:2, line:34:11>
    | |-BinaryOperator 0x13602da58 <line:33:6, col:12> 'int' '<'
    | | |-ImplicitCastExpr 0x13602da40 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x13602da00 <col:6> 'int' lvalue Var 0x1360267a8 'olr' 'int'
    | | `-IntegerLiteral 0x13602da20 <col:12> 'int' 0
    | `-ReturnStmt 0x13602db10 <line:34:3, col:11>
    |   `-UnaryOperator 0x13602daf8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x13602dae0 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x13602dac0 <col:11> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x13602dec8 <line:40:2, col:9>
      `-IntegerLiteral 0x13602dea8 <col:9> 'int' 0
