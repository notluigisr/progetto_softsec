`-FunctionDecl 0x13c9281f8  line:1:12 invalid init_frame_decoder 'int (int *)' static
  |-ParmVarDecl 0x13c928128 <col:31, col:43> col:43 invalid ctx 'int *'
  `-CompoundStmt 0x13c941e08 <line:2:1, line:15:1>
    |-DeclStmt 0x13c9283c0 <line:3:5, col:15>
    | |-VarDecl 0x13c9282c0 <col:5, col:9> col:9 used i 'int'
    | `-VarDecl 0x13c928340 <col:5, col:12> col:12 used ret 'int'
    |-IfStmt 0x13c928680 <line:4:5, line:5:16>
    | |-BinaryOperator 0x13c928618 <line:4:9, col:45> 'int' contains-errors '<'
    | | |-ParenExpr 0x13c9285d8 <col:9, col:41> 'int' contains-errors
    | | | `-BinaryOperator 0x13c9285b8 <col:10, col:40> 'int' contains-errors '='
    | | |   |-DeclRefExpr 0x13c9283d8 <col:10> 'int' lvalue Var 0x13c928340 'ret' 'int'
    | | |   `-CallExpr 0x13c928590 <col:16, col:40> '<dependent type>' contains-errors
    | | |     |-DeclRefExpr 0x13c928550 <col:16> 'int ()' Function 0x13c928498 'init_entropy_decoder' 'int ()'
    | | |     `-RecoveryExpr 0x13c928570 <col:37> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x13c9285f8 <col:45> 'int' 0
    | `-ReturnStmt 0x13c928670 <line:5:9, col:16>
    |   `-ImplicitCastExpr 0x13c928658 <col:16> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x13c928638 <col:16> 'int' lvalue Var 0x13c928340 'ret' 'int'
    |-CallExpr 0x13c9287c0 <line:6:5, col:31> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13c928780 <col:5> 'int ()' Function 0x13c9286c8 'init_predictor_decoder' 'int ()'
    | `-RecoveryExpr 0x13c9287a0 <col:28> '<dependent type>' contains-errors lvalue
    |-ForStmt 0x13c941da0 <line:8:5, line:13:5>
    | |-BinaryOperator 0x13c941840 <line:8:10, col:14> 'int' '='
    | | |-DeclRefExpr 0x13c941800 <col:10> 'int' lvalue Var 0x13c9282c0 'i' 'int'
    | | `-IntegerLiteral 0x13c941820 <col:14> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x13c9418d8 <col:17, col:21> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x13c941860 <col:17> 'int' lvalue Var 0x13c9282c0 'i' 'int'
    | | `-RecoveryExpr 0x13c9418b8 <col:21> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x13c941918 <col:40, col:41> 'int' postfix '++'
    | | `-DeclRefExpr 0x13c9418f8 <col:40> 'int' lvalue Var 0x13c9282c0 'i' 'int'
    | `-CompoundStmt 0x13c941d88 <col:45, line:13:5>
    |   `-IfStmt 0x13c9419f8 <line:9:9, line:10:13>
    |     |-RecoveryExpr 0x13c9419d0 <line:9:13, col:44> '_Bool' contains-errors
    |     `-BreakStmt 0x13c9419f0 <line:10:13>
    `-ReturnStmt 0x13c941df8 <line:14:5, col:12>
      `-IntegerLiteral 0x13c941dd8 <col:12> 'int' 0
