`-FunctionDecl 0x14802a800  line:1:6 __page_frag_cache_drain 'void (struct page *, unsigned int)'
  |-ParmVarDecl 0x14800e248 <col:30, col:43> col:43 used page 'struct page *'
  |-ParmVarDecl 0x14800e2c8 <col:49, col:62> col:62 used count 'unsigned int'
  `-CompoundStmt 0x14802b4c8 <line:2:1, line:13:1>
    |-CallExpr 0x14802ac70 <line:3:2, col:48> 'int'
    | |-ImplicitCastExpr 0x14802ac58 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x14802aa30 <col:2> 'int ()' Function 0x14802a978 'VM_BUG_ON_PAGE' 'int ()'
    | |-BinaryOperator 0x14802ac18 <col:17, col:41> 'int' '=='
    | | |-CallExpr 0x14802abb8 <col:17, col:36> 'int'
    | | | |-ImplicitCastExpr 0x14802aba0 <col:17> 'int (*)()' <FunctionToPointerDecay>
    | | | | `-DeclRefExpr 0x14802ab30 <col:17> 'int ()' Function 0x14802aa78 'page_ref_count' 'int ()'
    | | | `-ImplicitCastExpr 0x14802abe0 <col:32> 'struct page *' <LValueToRValue>
    | | |   `-DeclRefExpr 0x14802ab50 <col:32> 'struct page *' lvalue ParmVar 0x14800e248 'page' 'struct page *'
    | | `-IntegerLiteral 0x14802abf8 <col:41> 'int' 0
    | `-ImplicitCastExpr 0x14802aca0 <col:44> 'struct page *' <LValueToRValue>
    |   `-DeclRefExpr 0x14802ac38 <col:44> 'struct page *' lvalue ParmVar 0x14800e248 'page' 'struct page *'
    `-IfStmt 0x14802b4a8 <line:5:2, line:12:2>
      |-CallExpr 0x14802ae10 <line:5:6, col:39> 'int'
      | |-ImplicitCastExpr 0x14802adf8 <col:6> 'int (*)()' <FunctionToPointerDecay>
      | | `-DeclRefExpr 0x14802ad98 <col:6> 'int ()' Function 0x14802ace0 'page_ref_sub_and_test' 'int ()'
      | |-ImplicitCastExpr 0x14802ae40 <col:28> 'struct page *' <LValueToRValue>
      | | `-DeclRefExpr 0x14802adb8 <col:28> 'struct page *' lvalue ParmVar 0x14800e248 'page' 'struct page *'
      | `-ImplicitCastExpr 0x14802ae58 <col:34> 'unsigned int' <LValueToRValue>
      |   `-DeclRefExpr 0x14802add8 <col:34> 'unsigned int' lvalue ParmVar 0x14800e2c8 'count' 'unsigned int'
      `-CompoundStmt 0x14802b488 <col:42, line:12:2>
        |-DeclStmt 0x14802b080 <line:6:3, col:44>
        | `-VarDecl 0x14802ae88 <col:3, col:43> col:16 used order 'unsigned int' cinit
        |   `-ImplicitCastExpr 0x14802b068 <col:24, col:43> 'unsigned int' <IntegralCast>
        |     `-CallExpr 0x14802b028 <col:24, col:43> 'int'
        |       |-ImplicitCastExpr 0x14802b010 <col:24> 'int (*)()' <FunctionToPointerDecay>
        |       | `-DeclRefExpr 0x14802afd0 <col:24> 'int ()' Function 0x14802af18 'compound_order' 'int ()'
        |       `-ImplicitCastExpr 0x14802b050 <col:39> 'struct page *' <LValueToRValue>
        |         `-DeclRefExpr 0x14802aff0 <col:39> 'struct page *' lvalue ParmVar 0x14800e248 'page' 'struct page *'
        `-IfStmt 0x14802b458 <line:8:3, line:11:31> has_else
          |-BinaryOperator 0x14802b108 <line:8:7, col:16> 'int' '=='
          | |-ImplicitCastExpr 0x14802b0d8 <col:7> 'unsigned int' <LValueToRValue>
          | | `-DeclRefExpr 0x14802b098 <col:7> 'unsigned int' lvalue Var 0x14802ae88 'order' 'unsigned int'
          | `-ImplicitCastExpr 0x14802b0f0 <col:16> 'unsigned int' <IntegralCast>
          |   `-IntegerLiteral 0x14802b0b8 <col:16> 'int' 0
          |-CallExpr 0x14802b260 <line:9:4, col:24> 'int'
          | |-ImplicitCastExpr 0x14802b248 <col:4> 'int (*)()' <FunctionToPointerDecay>
          | | `-DeclRefExpr 0x14802b208 <col:4> 'int ()' Function 0x14802b150 'free_unref_page' 'int ()'
          | `-ImplicitCastExpr 0x14802b288 <col:20> 'struct page *' <LValueToRValue>
          |   `-DeclRefExpr 0x14802b228 <col:20> 'struct page *' lvalue ParmVar 0x14800e248 'page' 'struct page *'
          `-CallExpr 0x14802b3f8 <line:11:4, col:31> 'int'
            |-ImplicitCastExpr 0x14802b3e0 <col:4> 'int (*)()' <FunctionToPointerDecay>
            | `-DeclRefExpr 0x14802b380 <col:4> 'int ()' Function 0x14802b2c8 '__free_pages_ok' 'int ()'
            |-ImplicitCastExpr 0x14802b428 <col:20> 'struct page *' <LValueToRValue>
            | `-DeclRefExpr 0x14802b3a0 <col:20> 'struct page *' lvalue ParmVar 0x14800e248 'page' 'struct page *'
            `-ImplicitCastExpr 0x14802b440 <col:26> 'unsigned int' <LValueToRValue>
              `-DeclRefExpr 0x14802b3c0 <col:26> 'unsigned int' lvalue Var 0x14802ae88 'order' 'unsigned int'
