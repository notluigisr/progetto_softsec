`-FunctionDecl 0x12580ddf0  line:1:13 invalid _spawn_prolog_stepd 'void (int *)' static
  |-ParmVarDecl 0x12580dd28 <col:33, col:46> col:46 invalid msg 'int *'
  `-CompoundStmt 0x125828820 <line:2:1, line:68:1>
    |-DeclStmt 0x12580e000 <line:7:2, col:7>
    | `-VarDecl 0x12580df98 <col:2, col:6> col:6 used i 'int'
    `-IfStmt 0x1258281a8 <line:43:2, line:61:2> has_else
      |-RecoveryExpr 0x1258277b0 <line:43:6, col:46> '_Bool' contains-errors
      |-CompoundStmt 0x1258278f0 <col:49, line:46:2>
      `-CompoundStmt 0x125828180 <col:9, line:61:2>
        |-DeclStmt 0x125827980 <line:48:3, col:9>
        | `-VarDecl 0x125827918 <col:3, col:7> col:7 used rc 'int'
        |-CallExpr 0x125827bd8 <line:50:3, col:25> 'int'
        | |-ImplicitCastExpr 0x125827bc0 <col:3> 'int (*)()' <FunctionToPointerDecay>
        | | `-DeclRefExpr 0x125827a78 <col:3> 'int ()' Function 0x1258279c0 'debug3' 'int ()'
        | |-ImplicitCastExpr 0x125827c08 <col:10> 'char *' <ArrayToPointerDecay>
        | | `-StringLiteral 0x125827a98 <col:10> 'char[4]' lvalue "STR"
        | `-ImplicitCastExpr 0x125827c20 <col:17> 'const char *' <ArrayToPointerDecay>
        |   `-PredefinedExpr 0x125827b70 <col:17> 'const char[20]' lvalue __func__
        |     `-StringLiteral 0x125827b40 <col:17> 'const char[20]' lvalue "_spawn_prolog_stepd"
        `-CallExpr 0x125827e80 <line:54:3, col:29> 'int'
          |-ImplicitCastExpr 0x125827e68 <col:3> 'int (*)()' <FunctionToPointerDecay>
          | `-DeclRefExpr 0x125827dc0 <col:3> 'int ()' Function 0x1258279c0 'debug3' 'int ()'
          |-ImplicitCastExpr 0x125827eb8 <col:10> 'char *' <ArrayToPointerDecay>
          | `-StringLiteral 0x125827de0 <col:10> 'char[4]' lvalue "STR"
          |-ImplicitCastExpr 0x125827ed0 <col:17> 'const char *' <ArrayToPointerDecay>
          | `-PredefinedExpr 0x125827e30 <col:17> 'const char[20]' lvalue __func__
          |   `-StringLiteral 0x125827e00 <col:17> 'const char[20]' lvalue "_spawn_prolog_stepd"
          `-ImplicitCastExpr 0x125827ee8 <col:27> 'int' <LValueToRValue>
            `-DeclRefExpr 0x125827e48 <col:27> 'int' lvalue Var 0x125827918 'rc' 'int'
