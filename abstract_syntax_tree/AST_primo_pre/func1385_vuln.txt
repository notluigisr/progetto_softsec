`-FunctionDecl 0x1559281f8  line:1:14 invalid jas_seq2d_copy 'int *(int *)'
  |-ParmVarDecl 0x155928128 <col:29, col:42> col:42 invalid x 'int *'
  `-CompoundStmt 0x1559423b0 <line:2:1, line:15:1>
    |-DeclStmt 0x155928340 <line:4:2, col:7>
    | `-VarDecl 0x1559282d8 <col:2, col:6> col:6 used i 'int'
    |-DeclStmt 0x1559283d8 <line:5:2, col:7>
    | `-VarDecl 0x155928370 <col:2, col:6> col:6 used j 'int'
    |-CallExpr 0x155941c30 <line:8:2, col:10> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x155941bb0 <col:2> 'int ()' Function 0x155941af8 'assert' 'int ()'
    | `-RecoveryExpr 0x155941c10 <col:9> '<dependent type>' contains-errors lvalue
    |-ForStmt 0x155942330 <line:9:2, line:13:2>
    | |-BinaryOperator 0x155941c98 <line:9:7, col:11> 'int' '='
    | | |-DeclRefExpr 0x155941c58 <col:7> 'int' lvalue Var 0x1559282d8 'i' 'int'
    | | `-IntegerLiteral 0x155941c78 <col:11> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x155941d40 <col:14, col:21> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x155941cb8 <col:14> 'int' lvalue Var 0x1559282d8 'i' 'int'
    | | `-CXXDependentScopeMemberExpr 0x155941cf8 <col:18, col:21> '<dependent type>' contains-errors lvalue ->numrows_
    | |   `-RecoveryExpr 0x155941cd8 <col:18> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x155941d80 <col:31, col:33> 'int' prefix '++'
    | | `-DeclRefExpr 0x155941d60 <col:33> 'int' lvalue Var 0x1559282d8 'i' 'int'
    | `-CompoundStmt 0x155942318 <col:36, line:13:2>
    |   `-ForStmt 0x1559422e0 <line:10:3, line:12:3>
    |     |-BinaryOperator 0x155941dd8 <line:10:8, col:12> 'int' '='
    |     | |-DeclRefExpr 0x155941d98 <col:8> 'int' lvalue Var 0x155928370 'j' 'int'
    |     | `-IntegerLiteral 0x155941db8 <col:12> 'int' 0
    |     |-<<<NULL>>>
    |     |-BinaryOperator 0x155941e80 <col:15, col:22> 'int' contains-errors '<'
    |     | |-DeclRefExpr 0x155941df8 <col:15> 'int' lvalue Var 0x155928370 'j' 'int'
    |     | `-CXXDependentScopeMemberExpr 0x155941e38 <col:19, col:22> '<dependent type>' contains-errors lvalue ->numcols_
    |     |   `-RecoveryExpr 0x155941e18 <col:19> '<dependent type>' contains-errors lvalue
    |     |-UnaryOperator 0x155941ec0 <col:32, col:34> 'int' prefix '++'
    |     | `-DeclRefExpr 0x155941ea0 <col:34> 'int' lvalue Var 0x155928370 'j' 'int'
    |     `-CompoundStmt 0x1559422c8 <col:37, line:12:3>
    |       `-BinaryOperator 0x1559422a8 <line:11:4, col:56> '<dependent type>' contains-errors '='
    |         |-UnaryOperator 0x155942290 <col:4, col:30> '<dependent type>' contains-errors prefix '*' cannot overflow
    |         | `-CallExpr 0x155942258 <col:5, col:30> '<dependent type>' contains-errors
    |         |   |-DeclRefExpr 0x155941fb8 <col:5> 'int ()' Function 0x155941f00 'jas_matrix_getref' 'int ()'
    |         |   |-RecoveryExpr 0x155942238 <col:23> '<dependent type>' contains-errors lvalue
    |         |   |-DeclRefExpr 0x155941ff0 <col:26> 'int' lvalue Var 0x1559282d8 'i' 'int'
    |         |   `-DeclRefExpr 0x155942010 <col:29> 'int' lvalue Var 0x155928370 'j' 'int'
    |         `-CallExpr 0x1559421e0 <col:34, col:56> '<dependent type>' contains-errors
    |           |-DeclRefExpr 0x155942160 <col:34> 'int ()' Function 0x1559420a8 'jas_matrix_get' 'int ()'
    |           |-RecoveryExpr 0x155942180 <col:49> '<dependent type>' contains-errors lvalue
    |           |-DeclRefExpr 0x1559421a0 <col:52> 'int' lvalue Var 0x1559282d8 'i' 'int'
    |           `-DeclRefExpr 0x1559421c0 <col:55> 'int' lvalue Var 0x155928370 'j' 'int'
    `-ReturnStmt 0x1559423a0 <line:14:2, col:9>
      `-RecoveryExpr 0x155942380 <col:9> '<dependent type>' contains-errors lvalue
