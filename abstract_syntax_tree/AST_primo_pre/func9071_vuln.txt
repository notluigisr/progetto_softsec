`-FunctionDecl 0x14e1281c8  line:1:17 invalid pac_inv_sub 'int (int)' static
  |-ParmVarDecl 0x14e1280f0 <col:29, col:38> col:38 invalid i 'int'
  `-CompoundStmt 0x14e808738 <line:2:1, line:14:1>
    |-DeclStmt 0x14e128690 <line:3:5, line:6:6>
    | `-VarDecl 0x14e128368 <line:3:5, col:36> col:26 invalid inv_sub 'const int[16]' static
    |-DeclStmt 0x14e128728 <line:8:5, col:10>
    | `-VarDecl 0x14e1286c0 <col:5, col:9> col:9 used b 'int'
    |-ForStmt 0x14e8086b8 <line:10:5, line:12:5>
    | |-BinaryOperator 0x14e128780 <line:10:10, col:14> 'int' '='
    | | |-DeclRefExpr 0x14e128740 <col:10> 'int' lvalue Var 0x14e1286c0 'b' 'int'
    | | `-IntegerLiteral 0x14e128760 <col:14> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x14e808600 <col:17, col:21> 'int' '<'
    | | |-ImplicitCastExpr 0x14e1287e0 <col:17> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x14e1287a0 <col:17> 'int' lvalue Var 0x14e1286c0 'b' 'int'
    | | `-IntegerLiteral 0x14e1287c0 <col:21> 'int' 64
    | |-CompoundAssignOperator 0x14e808660 <col:25, col:30> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    | | |-DeclRefExpr 0x14e808620 <col:25> 'int' lvalue Var 0x14e1286c0 'b' 'int'
    | | `-IntegerLiteral 0x14e808640 <col:30> 'int' 16
    | `-CompoundStmt 0x14e8086a8 <col:34, line:12:5>
    `-ReturnStmt 0x14e808728 <line:13:5, col:12>
      `-RecoveryExpr 0x14e808708 <col:12> '<dependent type>' contains-errors lvalue
