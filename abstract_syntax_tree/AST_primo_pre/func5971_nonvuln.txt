`-FunctionDecl 0x1260ebc88  line:1:1 invalid nma_set_networking_enabled_cb 'int (int *, int *)'
  |-ParmVarDecl 0x1260ebb28 <col:32, col:43> col:43 invalid widget 'int *'
  |-ParmVarDecl 0x1260ebba8 <col:51, col:61> col:61 invalid applet 'int *'
  `-CompoundStmt 0x12401ae88 <line:2:1, line:9:1>
    |-CallExpr 0x1260ebf80 <line:5:2, col:34> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1260ebea0 <col:2> 'int ()' Function 0x1260ebde8 'g_return_if_fail' 'int ()'
    | `-BinaryOperator 0x1260ebf60 <col:20, col:30> 'int' contains-errors '!='
    |   |-RecoveryExpr 0x1260ebec0 <col:20> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x1260ebf40 <col:30> '<dependent type>' contains-errors lvalue
    `-CallExpr 0x12401ae58 <line:8:2, col:44> '<dependent type>' contains-errors
      |-DeclRefExpr 0x12401ad08 <col:2> 'int ()' Function 0x12401ac50 'nm_client_sleep' 'int ()'
      |-CXXDependentScopeMemberExpr 0x12401ad48 <col:19, col:27> '<dependent type>' contains-errors lvalue ->nm_client
      | `-RecoveryExpr 0x12401ad28 <col:19> '<dependent type>' contains-errors lvalue
      `-UnaryOperator 0x12401ae40 <col:38, col:39> '<dependent type>' contains-errors prefix '!' cannot overflow
        `-ImplicitCastExpr 0x12401ae28 <col:39> '<dependent type>' contains-errors <LValueToRValue>
          `-RecoveryExpr 0x12401ae08 <col:39> '<dependent type>' contains-errors lvalue
