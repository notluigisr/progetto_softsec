`-FunctionDecl 0x1261286e8  line:1:25 argtoll 'long long (struct arg)' static inline
  |-ParmVarDecl 0x1261285d8 <col:33, col:44> col:44 invalid arg 'struct arg'
  `-CompoundStmt 0x126144f30 <line:2:1, line:6:1>
    |-DeclStmt 0x126144c68 <line:3:5, col:20>
    | `-VarDecl 0x126144c00 <col:5, col:15> col:15 used value 'long long'
    |-CallExpr 0x126144eb8 <line:4:5, col:33> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x126144db0 <col:5> 'int ()' Function 0x126144cf8 'mystrtoll' 'int ()'
    | |-UnaryOperator 0x126144e38 <col:15, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-CXXDependentScopeMemberExpr 0x126144df0 <col:16, col:20> '<dependent type>' contains-errors lvalue .start
    | |   `-RecoveryExpr 0x126144dd0 <col:16> '<dependent type>' contains-errors lvalue
    | `-UnaryOperator 0x126144ea0 <col:27, col:28> 'long long *' prefix '&' cannot overflow
    |   `-DeclRefExpr 0x126144e50 <col:28> 'long long' lvalue Var 0x126144c00 'value' 'long long'
    `-ReturnStmt 0x126144f20 <line:5:5, col:12>
      `-ImplicitCastExpr 0x126144f08 <col:12> 'long long' <LValueToRValue>
        `-DeclRefExpr 0x126144ee8 <col:12> 'long long' lvalue Var 0x126144c00 'value' 'long long'
