`-FunctionDecl 0x11e928230  line:1:6 flush_hash_range 'void (unsigned long, int)'
  |-ParmVarDecl 0x11e9280d8 <col:23, col:37> col:37 used number 'unsigned long'
  |-ParmVarDecl 0x11e928158 <col:45, col:49> col:49 used local 'int'
  `-CompoundStmt 0x11e942240 <line:2:1, line:14:1>
    `-IfStmt 0x11e942210 <line:3:2, line:13:2> has_else
      |-CXXDependentScopeMemberExpr 0x11e9283c8 <line:3:6, col:13> '<dependent type>' contains-errors lvalue .flush_hash_range
      | `-RecoveryExpr 0x11e9283a8 <col:6> '<dependent type>' contains-errors lvalue
      |-NullStmt 0x11e942208 <line:4:3>
      `-CompoundStmt 0x11e9421e0 <line:5:7, line:13:2>
        |-DeclStmt 0x11e9284d0 <line:6:3, col:8>
        | `-VarDecl 0x11e928468 <col:3, col:7> col:7 used i 'int'
        |-DeclStmt 0x11e9418d0 <line:7:3, line:8:35>
        | |-RecordDecl 0x11e9284e8 <line:7:3, col:10> col:10 struct ppc64_tlb_batch
        | `-VarDecl 0x11e928658 <col:3, line:8:34> line:7:27 used batch 'struct ppc64_tlb_batch *' cinit
        |   `-UnaryOperator 0x11e9418a0 <line:8:4, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow
        |     `-CallExpr 0x11e941878 <col:5, col:34> '<dependent type>' contains-errors
        |       |-DeclRefExpr 0x11e9287d0 <col:5> 'int ()' Function 0x11e928718 '__get_cpu_var' 'int ()'
        |       `-RecoveryExpr 0x11e941858 <col:19> '<dependent type>' contains-errors lvalue
        `-ForStmt 0x11e9421a8 <line:10:3, line:12:25>
          |-BinaryOperator 0x11e941928 <line:10:8, col:12> 'int' '='
          | |-DeclRefExpr 0x11e9418e8 <col:8> 'int' lvalue Var 0x11e928468 'i' 'int'
          | `-IntegerLiteral 0x11e941908 <col:12> 'int' 0
          |-<<<NULL>>>
          |-BinaryOperator 0x11e9419d0 <col:15, col:19> 'int' '<'
          | |-ImplicitCastExpr 0x11e9419b8 <col:15> 'unsigned long' <IntegralCast>
          | | `-ImplicitCastExpr 0x11e941988 <col:15> 'int' <LValueToRValue>
          | |   `-DeclRefExpr 0x11e941948 <col:15> 'int' lvalue Var 0x11e928468 'i' 'int'
          | `-ImplicitCastExpr 0x11e9419a0 <col:19> 'unsigned long' <LValueToRValue>
          |   `-DeclRefExpr 0x11e941968 <col:19> 'unsigned long' lvalue ParmVar 0x11e9280d8 'number' 'unsigned long'
          |-UnaryOperator 0x11e941a10 <col:27, col:28> 'int' postfix '++'
          | `-DeclRefExpr 0x11e9419f0 <col:27> 'int' lvalue Var 0x11e928468 'i' 'int'
          `-CallExpr 0x11e942168 <line:11:4, line:12:25> '<dependent type>' contains-errors
            |-DeclRefExpr 0x11e941b08 <line:11:4> 'int ()' Function 0x11e941a50 'flush_hash_page' 'int ()'
            |-ArraySubscriptExpr 0x11e941ff8 <col:20, col:34> '<dependent type>' contains-errors lvalue
            | |-ImplicitCastExpr 0x11e941fc8 <col:20, col:27> '<dependent type>' contains-errors <LValueToRValue>
            | | `-RecoveryExpr 0x11e941f80 <col:20, col:27> '<dependent type>' contains-errors lvalue
            | |   `-DeclRefExpr 0x11e941b28 <col:20> 'struct ppc64_tlb_batch *' contains-errors lvalue Var 0x11e928658 'batch' 'struct ppc64_tlb_batch *'
            | `-ImplicitCastExpr 0x11e941fe0 <col:33> 'int' <LValueToRValue>
            |   `-DeclRefExpr 0x11e941fa8 <col:33> 'int' lvalue Var 0x11e928468 'i' 'int'
            |-ArraySubscriptExpr 0x11e9420c8 <col:37, col:49> '<dependent type>' contains-errors lvalue
            | |-ImplicitCastExpr 0x11e942098 <col:37, col:44> '<dependent type>' contains-errors <LValueToRValue>
            | | `-RecoveryExpr 0x11e942050 <col:37, col:44> '<dependent type>' contains-errors lvalue
            | |   `-DeclRefExpr 0x11e942018 <col:37> 'struct ppc64_tlb_batch *' contains-errors lvalue Var 0x11e928658 'batch' 'struct ppc64_tlb_batch *'
            | `-ImplicitCastExpr 0x11e9420b0 <col:48> 'int' <LValueToRValue>
            |   `-DeclRefExpr 0x11e942078 <col:48> 'int' lvalue Var 0x11e928468 'i' 'int'
            |-RecoveryExpr 0x11e942120 <line:12:6, col:13> '<dependent type>' contains-errors lvalue
            | `-DeclRefExpr 0x11e9420e8 <col:6> 'struct ppc64_tlb_batch *' contains-errors lvalue Var 0x11e928658 'batch' 'struct ppc64_tlb_batch *'
            `-DeclRefExpr 0x11e942148 <col:20> 'int' lvalue ParmVar 0x11e928158 'local' 'int'
