`-FunctionDecl 0x1369281d8  line:2:12 get_stream_idx 'int (const unsigned int *)' static
  |-ParmVarDecl 0x136928108 <col:27, col:43> col:43 used d 'const unsigned int *'
  `-CompoundStmt 0x136940bf8 <line:3:1, line:9:6>
    `-IfStmt 0x136940bc8 <line:4:5, line:9:5> has_else
      |-BinaryOperator 0x136928690 <line:4:9, line:5:32> 'int' '&&'
      | |-BinaryOperator 0x136928590 <line:4:9, line:5:17> 'int' '&&'
      | | |-BinaryOperator 0x136928490 <line:4:9, col:32> 'int' '&&'
      | | | |-BinaryOperator 0x136928390 <col:9, col:17> 'int' '>='
      | | | | |-ImplicitCastExpr 0x136928360 <col:9, col:12> 'unsigned int' <LValueToRValue>
      | | | | | `-ArraySubscriptExpr 0x136928328 <col:9, col:12> 'const unsigned int' lvalue
      | | | | |   |-ImplicitCastExpr 0x136928310 <col:9> 'const unsigned int *' <LValueToRValue>
      | | | | |   | `-DeclRefExpr 0x1369282d0 <col:9> 'const unsigned int *' lvalue ParmVar 0x136928108 'd' 'const unsigned int *'
      | | | | |   `-IntegerLiteral 0x1369282f0 <col:11> 'int' 0
      | | | | `-ImplicitCastExpr 0x136928378 <col:17> 'unsigned int' <IntegralCast>
      | | | |   `-CharacterLiteral 0x136928348 <col:17> 'int' 48
      | | | `-BinaryOperator 0x136928470 <col:24, col:32> 'int' '<='
      | | |   |-ImplicitCastExpr 0x136928440 <col:24, col:27> 'unsigned int' <LValueToRValue>
      | | |   | `-ArraySubscriptExpr 0x136928408 <col:24, col:27> 'const unsigned int' lvalue
      | | |   |   |-ImplicitCastExpr 0x1369283f0 <col:24> 'const unsigned int *' <LValueToRValue>
      | | |   |   | `-DeclRefExpr 0x1369283b0 <col:24> 'const unsigned int *' lvalue ParmVar 0x136928108 'd' 'const unsigned int *'
      | | |   |   `-IntegerLiteral 0x1369283d0 <col:26> 'int' 0
      | | |   `-ImplicitCastExpr 0x136928458 <col:32> 'unsigned int' <IntegralCast>
      | | |     `-CharacterLiteral 0x136928428 <col:32> 'int' 57
      | | `-BinaryOperator 0x136928570 <line:5:9, col:17> 'int' '>='
      | |   |-ImplicitCastExpr 0x136928540 <col:9, col:12> 'unsigned int' <LValueToRValue>
      | |   | `-ArraySubscriptExpr 0x136928508 <col:9, col:12> 'const unsigned int' lvalue
      | |   |   |-ImplicitCastExpr 0x1369284f0 <col:9> 'const unsigned int *' <LValueToRValue>
      | |   |   | `-DeclRefExpr 0x1369284b0 <col:9> 'const unsigned int *' lvalue ParmVar 0x136928108 'd' 'const unsigned int *'
      | |   |   `-IntegerLiteral 0x1369284d0 <col:11> 'int' 1
      | |   `-ImplicitCastExpr 0x136928558 <col:17> 'unsigned int' <IntegralCast>
      | |     `-CharacterLiteral 0x136928528 <col:17> 'int' 48
      | `-BinaryOperator 0x136928670 <col:24, col:32> 'int' '<='
      |   |-ImplicitCastExpr 0x136928640 <col:24, col:27> 'unsigned int' <LValueToRValue>
      |   | `-ArraySubscriptExpr 0x136928608 <col:24, col:27> 'const unsigned int' lvalue
      |   |   |-ImplicitCastExpr 0x1369285f0 <col:24> 'const unsigned int *' <LValueToRValue>
      |   |   | `-DeclRefExpr 0x1369285b0 <col:24> 'const unsigned int *' lvalue ParmVar 0x136928108 'd' 'const unsigned int *'
      |   |   `-IntegerLiteral 0x1369285d0 <col:26> 'int' 1
      |   `-ImplicitCastExpr 0x136928658 <col:32> 'unsigned int' <IntegralCast>
      |     `-CharacterLiteral 0x136928628 <col:32> 'int' 57
      |-CompoundStmt 0x136940b68 <col:37, line:7:5>
      | `-ReturnStmt 0x136940b58 <line:6:9, col:47>
      |   `-ImplicitCastExpr 0x136940b40 <col:16, col:47> 'int' <IntegralCast>
      |     `-BinaryOperator 0x136940b20 <col:16, col:47> 'unsigned int' '+'
      |       |-BinaryOperator 0x136940a00 <col:16, col:31> 'unsigned int' '*'
      |       | |-ParenExpr 0x136928790 <col:16, col:27> 'unsigned int'
      |       | | `-BinaryOperator 0x136928770 <col:17, col:24> 'unsigned int' '-'
      |       | |   |-ImplicitCastExpr 0x136928740 <col:17, col:20> 'unsigned int' <LValueToRValue>
      |       | |   | `-ArraySubscriptExpr 0x136928708 <col:17, col:20> 'const unsigned int' lvalue
      |       | |   |   |-ImplicitCastExpr 0x1369286f0 <col:17> 'const unsigned int *' <LValueToRValue>
      |       | |   |   | `-DeclRefExpr 0x1369286b0 <col:17> 'const unsigned int *' lvalue ParmVar 0x136928108 'd' 'const unsigned int *'
      |       | |   |   `-IntegerLiteral 0x1369286d0 <col:19> 'int' 0
      |       | |   `-ImplicitCastExpr 0x136928758 <col:24> 'unsigned int' <IntegralCast>
      |       | |     `-CharacterLiteral 0x136928728 <col:24> 'int' 48
      |       | `-ImplicitCastExpr 0x1369287d0 <col:31> 'unsigned int' <IntegralCast>
      |       |   `-IntegerLiteral 0x1369287b0 <col:31> 'int' 10
      |       `-ParenExpr 0x136940b00 <col:36, col:47> 'unsigned int'
      |         `-BinaryOperator 0x136940ae0 <col:37, col:44> 'unsigned int' '-'
      |           |-ImplicitCastExpr 0x136940ab0 <col:37, col:40> 'unsigned int' <LValueToRValue>
      |           | `-ArraySubscriptExpr 0x136940a78 <col:37, col:40> 'const unsigned int' lvalue
      |           |   |-ImplicitCastExpr 0x136940a60 <col:37> 'const unsigned int *' <LValueToRValue>
      |           |   | `-DeclRefExpr 0x136940a20 <col:37> 'const unsigned int *' lvalue ParmVar 0x136928108 'd' 'const unsigned int *'
      |           |   `-IntegerLiteral 0x136940a40 <col:39> 'int' 1
      |           `-ImplicitCastExpr 0x136940ac8 <col:44> 'unsigned int' <IntegralCast>
      |             `-CharacterLiteral 0x136940a98 <col:44> 'int' 48
      `-CompoundStmt 0x136940bb0 <line:7:12, line:9:5>
        `-ReturnStmt 0x136940ba0 <line:8:9, col:16>
          `-IntegerLiteral 0x136940b80 <col:16> 'int' 100
