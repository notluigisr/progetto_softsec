`-FunctionDecl 0x14480de88  line:1:5 invalid SafeMulDims 'int (const int *, int *)'
  |-ParmVarDecl 0x14480dcf0 <col:17, col:33> col:33 invalid matvar 'const int *'
  |-ParmVarDecl 0x14480dda8 <col:41, col:49> col:49 invalid nelems 'int *'
  `-CompoundStmt 0x1448277f0 <line:2:1, line:18:1>
    |-DeclStmt 0x14480dfc0 <line:3:5, col:10>
    | `-VarDecl 0x14480df58 <col:5, col:9> col:9 used i 'int'
    |-IfStmt 0x14480e160 <line:5:5, line:8:5>
    | |-BinaryOperator 0x14480e060 <line:5:10, col:26> 'int' contains-errors '=='
    | | |-CXXDependentScopeMemberExpr 0x14480dff8 <col:10, col:18> '<dependent type>' contains-errors lvalue ->rank
    | | | `-RecoveryExpr 0x14480dfd8 <col:10> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x14480e040 <col:26> 'int' 0
    | `-CompoundStmt 0x14480e140 <col:30, line:8:5>
    |   |-BinaryOperator 0x14480e0f0 <line:6:9, col:19> '<dependent type>' contains-errors '='
    |   | |-UnaryOperator 0x14480e0b8 <col:9, col:10> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   | | `-ImplicitCastExpr 0x14480e0a0 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    |   | |   `-RecoveryExpr 0x14480e080 <col:10> '<dependent type>' contains-errors lvalue
    |   | `-IntegerLiteral 0x14480e0d0 <col:19> 'int' 0
    |   `-ReturnStmt 0x14480e130 <line:7:9, col:16>
    |     `-IntegerLiteral 0x14480e110 <col:16> 'int' 0
    |-ForStmt 0x144827788 <line:10:5, line:15:5>
    | |-BinaryOperator 0x14480e1c0 <line:10:11, col:15> 'int' '='
    | | |-DeclRefExpr 0x14480e180 <col:11> 'int' lvalue Var 0x14480df58 'i' 'int'
    | | `-IntegerLiteral 0x14480e1a0 <col:15> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x14480e268 <col:18, col:30> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x14480e1e0 <col:18> 'int' lvalue Var 0x14480df58 'i' 'int'
    | | `-CXXDependentScopeMemberExpr 0x14480e220 <col:22, col:30> '<dependent type>' contains-errors lvalue ->rank
    | |   `-RecoveryExpr 0x14480e200 <col:22> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x14480e2a8 <col:36, col:37> 'int' postfix '++'
    | | `-DeclRefExpr 0x14480e288 <col:36> 'int' lvalue Var 0x14480df58 'i' 'int'
    | `-CompoundStmt 0x144827770 <col:42, line:15:5>
    |   `-IfStmt 0x144827750 <line:11:9, line:14:9>
    |     |-UnaryOperator 0x144827658 <line:11:14, col:67> '<dependent type>' contains-errors prefix '!' cannot overflow
    |     | `-CallExpr 0x144827620 <col:15, col:67> '<dependent type>' contains-errors
    |     |   |-DeclRefExpr 0x1448274b8 <col:15> 'int ()' Function 0x144827400 'psnip_safe_size_mul' 'int ()'
    |     |   |-RecoveryExpr 0x1448274d8 <col:35> '<dependent type>' contains-errors lvalue
    |     |   |-UnaryOperator 0x144827530 <col:43, col:44> '<dependent type>' contains-errors prefix '*' cannot overflow
    |     |   | `-ImplicitCastExpr 0x144827518 <col:44> '<dependent type>' contains-errors <LValueToRValue>
    |     |   |   `-RecoveryExpr 0x1448274f8 <col:44> '<dependent type>' contains-errors lvalue
    |     |   `-ArraySubscriptExpr 0x144827600 <col:52, col:66> '<dependent type>' contains-errors lvalue
    |     |     |-ImplicitCastExpr 0x1448275d0 <col:52, col:60> '<dependent type>' contains-errors <LValueToRValue>
    |     |     | `-CXXDependentScopeMemberExpr 0x144827568 <col:52, col:60> '<dependent type>' contains-errors lvalue ->dims
    |     |     |   `-RecoveryExpr 0x144827548 <col:52> '<dependent type>' contains-errors lvalue
    |     |     `-ImplicitCastExpr 0x1448275e8 <col:65> 'int' <LValueToRValue>
    |     |       `-DeclRefExpr 0x1448275b0 <col:65> 'int' lvalue Var 0x14480df58 'i' 'int'
    |     `-CompoundStmt 0x144827730 <col:71, line:14:9>
    |       |-BinaryOperator 0x1448276e0 <line:12:13, col:23> '<dependent type>' contains-errors '='
    |       | |-UnaryOperator 0x1448276a8 <col:13, col:14> '<dependent type>' contains-errors prefix '*' cannot overflow
    |       | | `-ImplicitCastExpr 0x144827690 <col:14> '<dependent type>' contains-errors <LValueToRValue>
    |       | |   `-RecoveryExpr 0x144827670 <col:14> '<dependent type>' contains-errors lvalue
    |       | `-IntegerLiteral 0x1448276c0 <col:23> 'int' 0
    |       `-ReturnStmt 0x144827720 <line:13:13, col:20>
    |         `-IntegerLiteral 0x144827700 <col:20> 'int' 1
    `-ReturnStmt 0x1448277e0 <line:17:5, col:12>
      `-IntegerLiteral 0x1448277c0 <col:12> 'int' 0
