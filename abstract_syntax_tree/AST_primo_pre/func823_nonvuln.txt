`-FunctionDecl 0x158027680  line:1:13 invalid mb86a20s_layer_bitrate 'void (struct dvb_frontend *, int, int, int, int, int)' static
  |-ParmVarDecl 0x15800e248 <col:36, col:57> col:57 used fe 'struct dvb_frontend *'
  |-ParmVarDecl 0x15800e2e0 <col:61, col:65> col:65 invalid layer 'int'
  |-ParmVarDecl 0x15800e360 <line:2:8, col:12> col:12 invalid modulation 'int'
  |-ParmVarDecl 0x158027400 <col:24, col:28> col:28 invalid forward_error_correction 'int'
  |-ParmVarDecl 0x158027480 <line:3:8, col:12> col:12 invalid guard_interval 'int'
  |-ParmVarDecl 0x158027500 <line:4:8, col:12> col:12 invalid segment 'int'
  `-CompoundStmt 0x1590089b0 <line:5:1, line:77:1>
    |-DeclStmt 0x1580279a8 <line:6:2, col:53>
    | |-RecordDecl 0x158027758 <col:2, col:9> col:9 struct mb86a20s_state
    | `-VarDecl 0x1580278c8 <col:2, col:37> col:25 used state 'struct mb86a20s_state *' cinit
    |   `-RecoveryExpr 0x158027968 <col:33, col:37> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x158027930 <col:33> 'struct dvb_frontend *' lvalue ParmVar 0x15800e248 'fe' 'struct dvb_frontend *'
    |-DeclStmt 0x158027b60 <line:8:2, col:21>
    | |-VarDecl 0x1580279d8 <col:2, col:6> col:6 used mod 'int'
    | |-VarDecl 0x158027a58 <col:2, col:11> col:11 used fec 'int'
    | `-VarDecl 0x158027ad8 <col:2, col:16> col:16 used guard 'int'
    |-SwitchStmt 0x158027bb0 <line:11:2, line:23:2>
    | |-ImplicitCastExpr 0x158027b98 <line:11:10> '<dependent type>' contains-errors <LValueToRValue>
    | | `-RecoveryExpr 0x158027b78 <col:10> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x158027d90 <col:22, line:23:2>
    |   |-DefaultStmt 0x158027c68 <line:14:2, line:15:9>
    |   | `-BinaryOperator 0x158027c48 <col:3, col:9> 'int' '='
    |   |   |-DeclRefExpr 0x158027c08 <col:3> 'int' lvalue Var 0x1580279d8 'mod' 'int'
    |   |   `-IntegerLiteral 0x158027c28 <col:9> 'int' 0
    |   |-BreakStmt 0x158027c88 <line:16:3>
    |   |-BinaryOperator 0x158027ce8 <line:18:3, col:9> 'int' '='
    |   | |-DeclRefExpr 0x158027ca8 <col:3> 'int' lvalue Var 0x1580279d8 'mod' 'int'
    |   | `-IntegerLiteral 0x158027cc8 <col:9> 'int' 1
    |   |-BreakStmt 0x158027d08 <line:19:3>
    |   |-BinaryOperator 0x158027d68 <line:21:3, col:9> 'int' '='
    |   | |-DeclRefExpr 0x158027d28 <col:3> 'int' lvalue Var 0x1580279d8 'mod' 'int'
    |   | `-IntegerLiteral 0x158027d48 <col:9> 'int' 2
    |   `-BreakStmt 0x158027d88 <line:22:3>
    |-SwitchStmt 0x158027e08 <line:25:2, line:43:2>
    | |-ImplicitCastExpr 0x158027df0 <line:25:10> '<dependent type>' contains-errors <LValueToRValue>
    | | `-RecoveryExpr 0x158027dd0 <col:10> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x1580280e8 <col:36, line:43:2>
    |   |-DefaultStmt 0x158027ec0 <line:26:2, line:29:9>
    |   | `-BinaryOperator 0x158027ea0 <col:3, col:9> 'int' '='
    |   |   |-DeclRefExpr 0x158027e60 <col:3> 'int' lvalue Var 0x158027a58 'fec' 'int'
    |   |   `-IntegerLiteral 0x158027e80 <col:9> 'int' 0
    |   |-BreakStmt 0x158027ee0 <line:30:3>
    |   |-BinaryOperator 0x158027f40 <line:32:3, col:9> 'int' '='
    |   | |-DeclRefExpr 0x158027f00 <col:3> 'int' lvalue Var 0x158027a58 'fec' 'int'
    |   | `-IntegerLiteral 0x158027f20 <col:9> 'int' 1
    |   |-BreakStmt 0x158027f60 <line:33:3>
    |   |-BinaryOperator 0x158027fc0 <line:35:3, col:9> 'int' '='
    |   | |-DeclRefExpr 0x158027f80 <col:3> 'int' lvalue Var 0x158027a58 'fec' 'int'
    |   | `-IntegerLiteral 0x158027fa0 <col:9> 'int' 2
    |   |-BreakStmt 0x158027fe0 <line:36:3>
    |   |-BinaryOperator 0x158028040 <line:38:3, col:9> 'int' '='
    |   | |-DeclRefExpr 0x158028000 <col:3> 'int' lvalue Var 0x158027a58 'fec' 'int'
    |   | `-IntegerLiteral 0x158028020 <col:9> 'int' 3
    |   |-BreakStmt 0x158028060 <line:39:3>
    |   |-BinaryOperator 0x1580280c0 <line:41:3, col:9> 'int' '='
    |   | |-DeclRefExpr 0x158028080 <col:3> 'int' lvalue Var 0x158027a58 'fec' 'int'
    |   | `-IntegerLiteral 0x1580280a0 <col:9> 'int' 4
    |   `-BreakStmt 0x1580280e0 <line:42:3>
    `-SwitchStmt 0x158028180 <line:45:2, line:59:2>
      |-ImplicitCastExpr 0x158028168 <line:45:10> '<dependent type>' contains-errors <LValueToRValue>
      | `-RecoveryExpr 0x158028148 <col:10> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x1580283b0 <col:26, line:59:2>
        |-DefaultStmt 0x158028220 <line:46:2, line:48:11>
        | `-BinaryOperator 0x158028200 <col:3, col:11> 'int' '='
        |   |-DeclRefExpr 0x1580281c0 <col:3> 'int' lvalue Var 0x158027ad8 'guard' 'int'
        |   `-IntegerLiteral 0x1580281e0 <col:11> 'int' 0
        |-BreakStmt 0x158028240 <line:49:3>
        |-BinaryOperator 0x1580282a0 <line:51:3, col:11> 'int' '='
        | |-DeclRefExpr 0x158028260 <col:3> 'int' lvalue Var 0x158027ad8 'guard' 'int'
        | `-IntegerLiteral 0x158028280 <col:11> 'int' 1
        |-BreakStmt 0x1580282c0 <line:52:3>
        |-BinaryOperator 0x158028320 <line:54:3, col:11> 'int' '='
        | |-DeclRefExpr 0x1580282e0 <col:3> 'int' lvalue Var 0x158027ad8 'guard' 'int'
        | `-IntegerLiteral 0x158028300 <col:11> 'int' 2
        |-BreakStmt 0x158028340 <line:55:3>
        |-BinaryOperator 0x158028388 <line:57:3, col:11> 'int' '='
        | |-DeclRefExpr 0x158028348 <col:3> 'int' lvalue Var 0x158027ad8 'guard' 'int'
        | `-IntegerLiteral 0x158028368 <col:11> 'int' 3
        `-BreakStmt 0x1580283a8 <line:58:3>
