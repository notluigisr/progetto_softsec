`-FunctionDecl 0x12500e038  line:1:1 referenced invalid index_select 'int (int *, int *, int, int, void *)'
  |-ParmVarDecl 0x12500dd28 <col:15, col:26> col:26 invalid index 'int *'
  |-ParmVarDecl 0x12500dda8 <line:2:15, col:29> col:29 invalid match 'int *'
  |-ParmVarDecl 0x12500de28 <line:3:15, col:24> col:24 invalid count 'int'
  |-ParmVarDecl 0x12500dea8 <line:4:15, col:26> col:26 invalid sink 'int'
  |-ParmVarDecl 0x12500df28 <line:5:15, col:21> col:21 used data 'void *'
  `-CompoundStmt 0x125029710 <line:6:1, line:63:1>
    |-BinaryOperator 0x12500e1d8 <line:9:2, col:16> '<dependent type>' contains-errors '*'
    | |-RecoveryExpr 0x12500e158 <col:2> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x12500e138 <col:2> 'int (int *, int *, int, int, void *)' Function 0x12500e038 'index_select' 'int (int *, int *, int, int, void *)'
    | `-RecoveryExpr 0x12500e1b8 <col:16> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x12500e278 <line:10:2, col:19>
    | `-VarDecl 0x12500e210 <col:2, col:15> col:15 used hash 'unsigned int'
    |-DeclStmt 0x12500e3a8 <line:13:2, col:13>
    | |-VarDecl 0x12500e2a8 <col:2, col:6> col:6 used num 'int'
    | `-VarDecl 0x12500e328 <col:2, col:11> col:11 used at 'int'
    |-DeclStmt 0x125027b00 <line:14:2, col:10>
    | |-VarDecl 0x125027a00 <col:2, col:6> col:6 used i 'int'
    | `-VarDecl 0x125027a80 <col:2, col:9> col:9 used j 'int'
    |-ForStmt 0x1250282a0 <line:17:2, line:28:2>
    | |-<<<NULL>>>
    | |-<<<NULL>>>
    | |-BinaryOperator 0x125027d40 <line:17:23, col:42> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x125027ce0 <col:23, col:27> 'int' contains-errors '<'
    | | | |-RecoveryExpr 0x125027cc0 <col:23> '<dependent type>' contains-errors lvalue
    | | | `-RecoveryExpr 0x125027c08 <col:27> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x125027d20 <col:36, col:42> 'int' contains-errors '<'
    | |   |-DeclRefExpr 0x125027c48 <col:36> 'int' lvalue Var 0x12500e2a8 'num' 'int'
    | |   `-RecoveryExpr 0x125027d00 <col:42> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x125027db0 <col:54, col:55> '<dependent type>' contains-errors postfix '++' cannot overflow
    | | `-RecoveryExpr 0x125027d90 <col:54> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x125028288 <col:59, line:28:2>
    |   `-IfStmt 0x125028268 <line:18:3, line:27:3>
    |     |-RecoveryExpr 0x125027f98 <line:18:7, col:41> '_Bool' contains-errors
    |     `-CompoundStmt 0x125028248 <col:44, line:27:3>
    |       |-IfStmt 0x1250281f0 <line:23:4, line:24:5>
    |       | |-RecoveryExpr 0x1250281c0 <line:23:8, col:24> '_Bool' contains-errors
    |       | `-ReturnStmt 0x1250281e0 <line:24:5>
    |       `-UnaryOperator 0x125028230 <line:26:4, col:7> 'int' postfix '++'
    |         `-DeclRefExpr 0x125028210 <col:4> 'int' lvalue Var 0x12500e2a8 'num' 'int'
    `-IfStmt 0x125028730 <line:31:2, line:38:2>
      |-BinaryOperator 0x125028330 <line:31:6, col:13> 'int' '=='
      | |-ImplicitCastExpr 0x125028318 <col:6> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x1250282d8 <col:6> 'int' lvalue Var 0x12500e2a8 'num' 'int'
      | `-IntegerLiteral 0x1250282f8 <col:13> 'int' 0
      `-CompoundStmt 0x125028710 <col:16, line:38:2>
        |-WhileStmt 0x1250286e0 <line:33:3, line:36:3>
        | |-RecoveryExpr 0x1250285b8 <line:33:10, col:50> '_Bool' contains-errors
        | `-CompoundStmt 0x1250286c8 <col:53, line:36:3>
        |   `-IfStmt 0x1250286a8 <line:34:4, line:35:5>
        |     |-RecoveryExpr 0x125028678 <line:34:8, col:45> '_Bool' contains-errors
        |     `-ReturnStmt 0x125028698 <line:35:5>
        `-ReturnStmt 0x125028700 <line:37:3>
