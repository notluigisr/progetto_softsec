`-FunctionDecl 0x15600de38  line:1:5 gdAlphaBlend 'int (int, int)'
  |-ParmVarDecl 0x15600dcd8 <col:19, col:23> col:23 used dst 'int'
  |-ParmVarDecl 0x15600dd58 <col:28, col:32> col:32 used src 'int'
  `-CompoundStmt 0x156029a28 <col:37, line:44:1>
    |-DeclStmt 0x15600e1a8 <line:2:5, col:45>
    | `-VarDecl 0x15600df50 <col:5, col:44> col:9 used src_alpha 'int' cinit
    |   `-CallExpr 0x15600e168 <col:21, col:44> 'int'
    |     |-ImplicitCastExpr 0x15600e150 <col:21> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x15600e0e0 <col:21> 'int ()' Function 0x15600e028 'gdTrueColorGetAlpha' 'int ()'
    |     `-ImplicitCastExpr 0x15600e190 <col:41> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x15600e100 <col:41> 'int' lvalue ParmVar 0x15600dd58 'src' 'int'
    |-DeclStmt 0x156027498 <line:3:5, col:43>
    | |-VarDecl 0x15600e1d8 <col:5, col:9> col:9 used dst_alpha 'int'
    | |-VarDecl 0x15600e258 <col:5, col:20> col:20 used alpha 'int'
    | |-VarDecl 0x15600e2d8 <col:5, col:27> col:27 used red 'int'
    | |-VarDecl 0x15600e358 <col:5, col:32> col:32 used green 'int'
    | `-VarDecl 0x156027400 <col:5, col:39> col:39 used blue 'int'
    |-DeclStmt 0x156027650 <line:4:5, col:43>
    | |-VarDecl 0x1560274c8 <col:5, col:9> col:9 used src_weight 'int'
    | |-VarDecl 0x156027548 <col:5, col:21> col:21 used dst_weight 'int'
    | `-VarDecl 0x1560275c8 <col:5, col:33> col:33 used tot_weight 'int'
    |-IfStmt 0x156027748 <line:9:5, line:10:16>
    | |-BinaryOperator 0x1560276e0 <line:9:9, col:22> 'int' contains-errors '=='
    | | |-DeclRefExpr 0x156027668 <col:9> 'int' lvalue Var 0x15600df50 'src_alpha' 'int'
    | | `-RecoveryExpr 0x1560276c0 <col:22> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x156027738 <line:10:9, col:16>
    |   `-ImplicitCastExpr 0x156027720 <col:16> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x156027700 <col:16> 'int' lvalue ParmVar 0x15600dd58 'src' 'int'
    |-BinaryOperator 0x156027820 <line:12:5, col:40> 'int' '='
    | |-DeclRefExpr 0x156027768 <col:5> 'int' lvalue Var 0x15600e1d8 'dst_alpha' 'int'
    | `-CallExpr 0x1560277e0 <col:17, col:40> 'int'
    |   |-ImplicitCastExpr 0x1560277c8 <col:17> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x156027788 <col:17> 'int ()' Function 0x15600e028 'gdTrueColorGetAlpha' 'int ()'
    |   `-ImplicitCastExpr 0x156027808 <col:37> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x1560277a8 <col:37> 'int' lvalue ParmVar 0x15600dcd8 'dst' 'int'
    |-IfStmt 0x156027920 <line:13:5, line:14:16>
    | |-BinaryOperator 0x1560278b8 <line:13:9, col:22> 'int' contains-errors '=='
    | | |-DeclRefExpr 0x156027840 <col:9> 'int' lvalue Var 0x15600df50 'src_alpha' 'int'
    | | `-RecoveryExpr 0x156027898 <col:22> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x156027910 <line:14:9, col:16>
    |   `-ImplicitCastExpr 0x1560278f8 <col:16> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x1560278d8 <col:16> 'int' lvalue ParmVar 0x15600dcd8 'dst' 'int'
    |-IfStmt 0x156027a20 <line:15:5, line:16:16>
    | |-BinaryOperator 0x1560279b8 <line:15:9, col:22> 'int' contains-errors '=='
    | | |-DeclRefExpr 0x156027940 <col:9> 'int' lvalue Var 0x15600e1d8 'dst_alpha' 'int'
    | | `-RecoveryExpr 0x156027998 <col:22> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x156027a10 <line:16:9, col:16>
    |   `-ImplicitCastExpr 0x1560279f8 <col:16> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x1560279d8 <col:16> 'int' lvalue ParmVar 0x15600dd58 'src' 'int'
    |-BinaryOperator 0x156027b18 <line:23:5, col:39> 'int' contains-errors '='
    | |-DeclRefExpr 0x156027a40 <col:5> 'int' lvalue Var 0x1560274c8 'src_weight' 'int'
    | `-BinaryOperator 0x156027af8 <col:18, col:39> '<dependent type>' contains-errors '-'
    |   |-RecoveryExpr 0x156027ad8 <col:18> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x156027a78 <col:39> 'int' lvalue Var 0x15600df50 'src_alpha' 'int'
    |-BinaryOperator 0x156027c98 <line:25:5, col:31> 'int' '='
    | |-DeclRefExpr 0x156027be8 <col:5> 'int' lvalue Var 0x1560275c8 'tot_weight' 'int'
    | `-BinaryOperator 0x156027c78 <col:18, col:31> 'int' '+'
    |   |-ImplicitCastExpr 0x156027c48 <col:18> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x156027c08 <col:18> 'int' lvalue Var 0x1560274c8 'src_weight' 'int'
    |   `-ImplicitCastExpr 0x156027c60 <col:31> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x156027c28 <col:31> 'int' lvalue Var 0x156027548 'dst_weight' 'int'
    |-BinaryOperator 0x156027ea0 <line:30:5, col:37> 'int' contains-errors '='
    | |-DeclRefExpr 0x156027cb8 <col:5> 'int' lvalue Var 0x15600e258 'alpha' 'int'
    | `-BinaryOperator 0x156027e80 <col:13, col:37> '<dependent type>' contains-errors '/'
    |   |-BinaryOperator 0x156027e40 <col:13, col:25> 'int' '*'
    |   | |-ImplicitCastExpr 0x156027e10 <col:13> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x156027cd8 <col:13> 'int' lvalue Var 0x15600df50 'src_alpha' 'int'
    |   | `-ImplicitCastExpr 0x156027e28 <col:25> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x156027cf8 <col:25> 'int' lvalue Var 0x15600e1d8 'dst_alpha' 'int'
    |   `-RecoveryExpr 0x156027e60 <col:37> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x156028238 <line:32:5, line:33:53> 'int' '='
    | |-DeclRefExpr 0x156027ec0 <line:32:5> 'int' lvalue Var 0x15600e2d8 'red' 'int'
    | `-BinaryOperator 0x156028218 <col:11, line:33:53> 'int' '/'
    |   |-ParenExpr 0x1560281c0 <line:32:11, line:33:49> 'int'
    |   | `-BinaryOperator 0x1560281a0 <line:32:12, line:33:39> 'int' '+'
    |   |   |-BinaryOperator 0x156028090 <line:32:12, col:37> 'int' '*'
    |   |   | |-CallExpr 0x156028018 <col:12, col:33> 'int'
    |   |   | | |-ImplicitCastExpr 0x156028000 <col:12> 'int (*)()' <FunctionToPointerDecay>
    |   |   | | | `-DeclRefExpr 0x156027fc0 <col:12> 'int ()' Function 0x156027f08 'gdTrueColorGetRed' 'int ()'
    |   |   | | `-ImplicitCastExpr 0x156028040 <col:30> 'int' <LValueToRValue>
    |   |   | |   `-DeclRefExpr 0x156027fe0 <col:30> 'int' lvalue ParmVar 0x15600dd58 'src' 'int'
    |   |   | `-ImplicitCastExpr 0x156028078 <col:37> 'int' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x156028058 <col:37> 'int' lvalue Var 0x1560274c8 'src_weight' 'int'
    |   |   `-BinaryOperator 0x156028180 <line:33:14, col:39> 'int' '*'
    |   |     |-CallExpr 0x156028108 <col:14, col:35> 'int'
    |   |     | |-ImplicitCastExpr 0x1560280f0 <col:14> 'int (*)()' <FunctionToPointerDecay>
    |   |     | | `-DeclRefExpr 0x1560280b0 <col:14> 'int ()' Function 0x156027f08 'gdTrueColorGetRed' 'int ()'
    |   |     | `-ImplicitCastExpr 0x156028130 <col:32> 'int' <LValueToRValue>
    |   |     |   `-DeclRefExpr 0x1560280d0 <col:32> 'int' lvalue ParmVar 0x15600dcd8 'dst' 'int'
    |   |     `-ImplicitCastExpr 0x156028168 <col:39> 'int' <LValueToRValue>
    |   |       `-DeclRefExpr 0x156028148 <col:39> 'int' lvalue Var 0x156027548 'dst_weight' 'int'
    |   `-ImplicitCastExpr 0x156028200 <col:53> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x1560281e0 <col:53> 'int' lvalue Var 0x1560275c8 'tot_weight' 'int'
    |-BinaryOperator 0x1560293e0 <line:34:5, line:35:55> 'int' '='
    | |-DeclRefExpr 0x156028258 <line:34:5> 'int' lvalue Var 0x15600e358 'green' 'int'
    | `-BinaryOperator 0x1560293c0 <col:13, line:35:55> 'int' '/'
    |   |-ParenExpr 0x156029368 <line:34:13, line:35:51> 'int'
    |   | `-BinaryOperator 0x156029348 <line:34:14, line:35:41> 'int' '+'
    |   |   |-BinaryOperator 0x156029238 <line:34:14, col:41> 'int' '*'
    |   |   | |-CallExpr 0x1560283b0 <col:14, col:37> 'int'
    |   |   | | |-ImplicitCastExpr 0x156028398 <col:14> 'int (*)()' <FunctionToPointerDecay>
    |   |   | | | `-DeclRefExpr 0x156028358 <col:14> 'int ()' Function 0x1560282a0 'gdTrueColorGetGreen' 'int ()'
    |   |   | | `-ImplicitCastExpr 0x1560283d8 <col:34> 'int' <LValueToRValue>
    |   |   | |   `-DeclRefExpr 0x156028378 <col:34> 'int' lvalue ParmVar 0x15600dd58 'src' 'int'
    |   |   | `-ImplicitCastExpr 0x156029220 <col:41> 'int' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x156029200 <col:41> 'int' lvalue Var 0x1560274c8 'src_weight' 'int'
    |   |   `-BinaryOperator 0x156029328 <line:35:14, col:41> 'int' '*'
    |   |     |-CallExpr 0x1560292b0 <col:14, col:37> 'int'
    |   |     | |-ImplicitCastExpr 0x156029298 <col:14> 'int (*)()' <FunctionToPointerDecay>
    |   |     | | `-DeclRefExpr 0x156029258 <col:14> 'int ()' Function 0x1560282a0 'gdTrueColorGetGreen' 'int ()'
    |   |     | `-ImplicitCastExpr 0x1560292d8 <col:34> 'int' <LValueToRValue>
    |   |     |   `-DeclRefExpr 0x156029278 <col:34> 'int' lvalue ParmVar 0x15600dcd8 'dst' 'int'
    |   |     `-ImplicitCastExpr 0x156029310 <col:41> 'int' <LValueToRValue>
    |   |       `-DeclRefExpr 0x1560292f0 <col:41> 'int' lvalue Var 0x156027548 'dst_weight' 'int'
    |   `-ImplicitCastExpr 0x1560293a8 <col:55> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x156029388 <col:55> 'int' lvalue Var 0x1560275c8 'tot_weight' 'int'
    |-BinaryOperator 0x156029778 <line:36:5, line:37:54> 'int' '='
    | |-DeclRefExpr 0x156029400 <line:36:5> 'int' lvalue Var 0x156027400 'blue' 'int'
    | `-BinaryOperator 0x156029758 <col:12, line:37:54> 'int' '/'
    |   |-ParenExpr 0x156029700 <line:36:12, line:37:50> 'int'
    |   | `-BinaryOperator 0x1560296e0 <line:36:13, line:37:40> 'int' '+'
    |   |   |-BinaryOperator 0x1560295d0 <line:36:13, col:39> 'int' '*'
    |   |   | |-CallExpr 0x156029558 <col:13, col:35> 'int'
    |   |   | | |-ImplicitCastExpr 0x156029540 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |   |   | | | `-DeclRefExpr 0x156029500 <col:13> 'int ()' Function 0x156029448 'gdTrueColorGetBlue' 'int ()'
    |   |   | | `-ImplicitCastExpr 0x156029580 <col:32> 'int' <LValueToRValue>
    |   |   | |   `-DeclRefExpr 0x156029520 <col:32> 'int' lvalue ParmVar 0x15600dd58 'src' 'int'
    |   |   | `-ImplicitCastExpr 0x1560295b8 <col:39> 'int' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x156029598 <col:39> 'int' lvalue Var 0x1560274c8 'src_weight' 'int'
    |   |   `-BinaryOperator 0x1560296c0 <line:37:14, col:40> 'int' '*'
    |   |     |-CallExpr 0x156029648 <col:14, col:36> 'int'
    |   |     | |-ImplicitCastExpr 0x156029630 <col:14> 'int (*)()' <FunctionToPointerDecay>
    |   |     | | `-DeclRefExpr 0x1560295f0 <col:14> 'int ()' Function 0x156029448 'gdTrueColorGetBlue' 'int ()'
    |   |     | `-ImplicitCastExpr 0x156029670 <col:33> 'int' <LValueToRValue>
    |   |     |   `-DeclRefExpr 0x156029610 <col:33> 'int' lvalue ParmVar 0x15600dcd8 'dst' 'int'
    |   |     `-ImplicitCastExpr 0x1560296a8 <col:40> 'int' <LValueToRValue>
    |   |       `-DeclRefExpr 0x156029688 <col:40> 'int' lvalue Var 0x156027548 'dst_weight' 'int'
    |   `-ImplicitCastExpr 0x156029740 <col:54> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x156029720 <col:54> 'int' lvalue Var 0x1560275c8 'tot_weight' 'int'
    `-ReturnStmt 0x156029a18 <line:42:5, col:62>
      `-ParenExpr 0x1560299f8 <col:12, col:62> 'int'
        `-BinaryOperator 0x1560299d8 <col:13, col:58> 'int' '+'
          |-BinaryOperator 0x156029980 <col:13, col:54> 'int' '+'
          | |-BinaryOperator 0x1560298c8 <col:13, col:39> 'int' '+'
          | | |-ParenExpr 0x156029810 <col:13, col:25> 'int'
          | | | `-BinaryOperator 0x1560297f0 <col:14, col:23> 'int' '<<'
          | | |   |-ImplicitCastExpr 0x1560297d8 <col:14> 'int' <LValueToRValue>
          | | |   | `-DeclRefExpr 0x156029798 <col:14> 'int' lvalue Var 0x15600e258 'alpha' 'int'
          | | |   `-IntegerLiteral 0x1560297b8 <col:23> 'int' 24
          | | `-ParenExpr 0x1560298a8 <col:29, col:39> 'int'
          | |   `-BinaryOperator 0x156029888 <col:30, col:37> 'int' '<<'
          | |     |-ImplicitCastExpr 0x156029870 <col:30> 'int' <LValueToRValue>
          | |     | `-DeclRefExpr 0x156029830 <col:30> 'int' lvalue Var 0x15600e2d8 'red' 'int'
          | |     `-IntegerLiteral 0x156029850 <col:37> 'int' 16
          | `-ParenExpr 0x156029960 <col:43, col:54> 'int'
          |   `-BinaryOperator 0x156029940 <col:44, col:53> 'int' '<<'
          |     |-ImplicitCastExpr 0x156029928 <col:44> 'int' <LValueToRValue>
          |     | `-DeclRefExpr 0x1560298e8 <col:44> 'int' lvalue Var 0x15600e358 'green' 'int'
          |     `-IntegerLiteral 0x156029908 <col:53> 'int' 8
          `-ImplicitCastExpr 0x1560299c0 <col:58> 'int' <LValueToRValue>
            `-DeclRefExpr 0x1560299a0 <col:58> 'int' lvalue Var 0x156027400 'blue' 'int'
