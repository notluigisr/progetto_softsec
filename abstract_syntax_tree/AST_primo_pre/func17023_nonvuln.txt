`-FunctionDecl 0x12e112c00  line:1:12 sctp_setsockopt_maxburst 'int (struct sock *, char)' static
  |-ParmVarDecl 0x12e0fa848 <col:37, col:50> col:50 used sk 'struct sock *'
  |-ParmVarDecl 0x12e0fa8c0 <line:2:9, col:14> col:14 __user 'char'
  `-CompoundStmt 0x12e1168f8 <line:4:1, line:38:1>
    |-DeclStmt 0x12e112e78 <line:5:2, col:32>
    | |-RecordDecl 0x12e112d00 <col:2, col:9> col:9 struct sctp_assoc_value
    | `-VarDecl 0x12e112df8 <col:2, col:26> col:26 invalid params 'struct sctp_assoc_value'
    |-DeclStmt 0x12e113078 <line:6:2, col:22>
    | |-RecordDecl 0x12e112e90 <col:2, col:9> col:9 struct sctp_sock
    | `-VarDecl 0x12e112ff8 <col:2, col:20> col:20 used sp 'struct sctp_sock *'
    |-DeclStmt 0x12e113278 <line:7:2, col:31>
    | |-RecordDecl 0x12e113090 <col:2, col:9> col:9 struct sctp_association
    | `-VarDecl 0x12e1131f8 <col:2, col:27> col:27 used asoc 'struct sctp_association *'
    |-DeclStmt 0x12e113310 <line:8:2, col:9>
    | `-VarDecl 0x12e1132a8 <col:2, col:6> col:6 used val 'int'
    |-DeclStmt 0x12e1133c8 <line:9:2, col:18>
    | `-VarDecl 0x12e113340 <col:2, col:17> col:6 used assoc_id 'int' cinit
    |   `-IntegerLiteral 0x12e1133a8 <col:17> 'int' 0
    |-IfStmt 0x12e116230 <line:11:2, line:25:11> has_else
    | |-BinaryOperator 0x12e1134c0 <line:11:6, col:26> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x12e113468 <col:6> '<dependent type>' contains-errors lvalue
    | | `-UnaryExprOrTypeTraitExpr 0x12e1134a0 <col:16, col:26> 'unsigned long' sizeof 'int'
    | |-CompoundStmt 0x12e113940 <col:29, line:19:2>
    | | `-IfStmt 0x12e113920 <line:17:3, line:18:12>
    | |   |-CallExpr 0x12e113840 <line:17:7, col:42> '<dependent type>' contains-errors
    | |   | |-DeclRefExpr 0x12e113708 <col:7> 'int ()' Function 0x12e113650 'copy_from_user' 'int ()'
    | |   | |-UnaryOperator 0x12e113780 <col:22, col:23> 'int *' prefix '&' cannot overflow
    | |   | | `-DeclRefExpr 0x12e113728 <col:23> 'int' lvalue Var 0x12e1132a8 'val' 'int'
    | |   | |-RecoveryExpr 0x12e113800 <col:28> '<dependent type>' contains-errors lvalue
    | |   | `-RecoveryExpr 0x12e113820 <col:36> '<dependent type>' contains-errors lvalue
    | |   `-ReturnStmt 0x12e113910 <line:18:4, col:12>
    | |     `-UnaryOperator 0x12e1138f8 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow
    | |       `-ImplicitCastExpr 0x12e1138e0 <col:12> '<dependent type>' contains-errors <LValueToRValue>
    | |         `-RecoveryExpr 0x12e1138c0 <col:12> '<dependent type>' contains-errors lvalue
    | `-IfStmt 0x12e116200 <line:19:9, line:25:11> has_else
    |   |-RecoveryExpr 0x12e1139c0 <line:19:13, col:53> '_Bool' contains-errors
    |   |-CompoundStmt 0x12e116130 <col:56, line:24:2>
    |   | |-IfStmt 0x12e113bc0 <line:20:3, line:21:12>
    |   | | |-CallExpr 0x12e113ae0 <line:20:7, col:45> '<dependent type>' contains-errors
    |   | | | |-DeclRefExpr 0x12e1139e0 <col:7> 'int ()' Function 0x12e113650 'copy_from_user' 'int ()'
    |   | | | |-UnaryOperator 0x12e113a20 <col:22, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | | | | `-RecoveryExpr 0x12e113a00 <col:23> '<dependent type>' contains-errors lvalue
    |   | | | |-RecoveryExpr 0x12e113aa0 <col:31> '<dependent type>' contains-errors lvalue
    |   | | | `-RecoveryExpr 0x12e113ac0 <col:39> '<dependent type>' contains-errors lvalue
    |   | | `-ReturnStmt 0x12e113bb0 <line:21:4, col:12>
    |   | |   `-UnaryOperator 0x12e113b98 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   | |     `-ImplicitCastExpr 0x12e113b80 <col:12> '<dependent type>' contains-errors <LValueToRValue>
    |   | |       `-RecoveryExpr 0x12e113b60 <col:12> '<dependent type>' contains-errors lvalue
    |   | |-BinaryOperator 0x12e116068 <line:22:3, col:16> 'int' contains-errors '='
    |   | | |-DeclRefExpr 0x12e113be0 <col:3> 'int' lvalue Var 0x12e1132a8 'val' 'int'
    |   | | `-CXXDependentScopeMemberExpr 0x12e116020 <col:9, col:16> '<dependent type>' contains-errors lvalue .assoc_value
    |   | |   `-RecoveryExpr 0x12e116000 <col:9> '<dependent type>' contains-errors lvalue
    |   | `-BinaryOperator 0x12e116110 <line:23:3, col:21> 'int' contains-errors '='
    |   |   |-DeclRefExpr 0x12e116088 <col:3> 'int' lvalue Var 0x12e113340 'assoc_id' 'int'
    |   |   `-CXXDependentScopeMemberExpr 0x12e1160c8 <col:14, col:21> '<dependent type>' contains-errors lvalue .assoc_id
    |   |     `-RecoveryExpr 0x12e1160a8 <col:14> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x12e1161f0 <line:25:3, col:11>
    |     `-UnaryOperator 0x12e1161d8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       `-ImplicitCastExpr 0x12e1161c0 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |         `-RecoveryExpr 0x12e1161a0 <col:11> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x12e116440 <line:27:2, col:17> 'struct sctp_sock *' '='
    | |-DeclRefExpr 0x12e116260 <col:2> 'struct sctp_sock *' lvalue Var 0x12e112ff8 'sp' 'struct sctp_sock *'
    | `-ImplicitCastExpr 0x12e116428 <col:7, col:17> 'struct sctp_sock *' <IntegralToPointer>
    |   `-CallExpr 0x12e1163e8 <col:7, col:17> 'int'
    |     |-ImplicitCastExpr 0x12e1163d0 <col:7> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x12e116360 <col:7> 'int ()' Function 0x12e1162a8 'sctp_sk' 'int ()'
    |     `-ImplicitCastExpr 0x12e116410 <col:15> 'struct sock *' <LValueToRValue>
    |       `-DeclRefExpr 0x12e116380 <col:15> 'struct sock *' lvalue ParmVar 0x12e0fa848 'sk' 'struct sock *'
    |-IfStmt 0x12e116898 <line:29:2, line:35:19> has_else
    | |-BinaryOperator 0x12e1164b8 <line:29:6, col:18> 'int' '!='
    | | |-ImplicitCastExpr 0x12e1164a0 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x12e116460 <col:6> 'int' lvalue Var 0x12e113340 'assoc_id' 'int'
    | | `-IntegerLiteral 0x12e116480 <col:18> 'int' 0
    | |-CompoundStmt 0x12e1167d8 <col:21, line:34:2>
    | | |-BinaryOperator 0x12e1166c8 <line:30:3, col:36> 'struct sctp_association *' '='
    | | | |-DeclRefExpr 0x12e1164d8 <col:3> 'struct sctp_association *' lvalue Var 0x12e1131f8 'asoc' 'struct sctp_association *'
    | | | `-ImplicitCastExpr 0x12e1166b0 <col:10, col:36> 'struct sctp_association *' <IntegralToPointer>
    | | |   `-CallExpr 0x12e116650 <col:10, col:36> 'int'
    | | |     |-ImplicitCastExpr 0x12e116638 <col:10> 'int (*)()' <FunctionToPointerDecay>
    | | |     | `-DeclRefExpr 0x12e1165d8 <col:10> 'int ()' Function 0x12e116520 'sctp_id2assoc' 'int ()'
    | | |     |-ImplicitCastExpr 0x12e116680 <col:24> 'struct sock *' <LValueToRValue>
    | | |     | `-DeclRefExpr 0x12e1165f8 <col:24> 'struct sock *' lvalue ParmVar 0x12e0fa848 'sk' 'struct sock *'
    | | |     `-ImplicitCastExpr 0x12e116698 <col:28> 'int' <LValueToRValue>
    | | |       `-DeclRefExpr 0x12e116618 <col:28> 'int' lvalue Var 0x12e113340 'assoc_id' 'int'
    | | `-BinaryOperator 0x12e1167b8 <line:33:3, col:21> '<dependent type>' contains-errors '='
    | |   |-RecoveryExpr 0x12e116770 <col:3, col:9> '<dependent type>' contains-errors lvalue
    | |   | `-DeclRefExpr 0x12e116738 <col:3> 'struct sctp_association *' lvalue Var 0x12e1131f8 'asoc' 'struct sctp_association *'
    | |   `-DeclRefExpr 0x12e116798 <col:21> 'int' lvalue Var 0x12e1132a8 'val' 'int'
    | `-BinaryOperator 0x12e116878 <line:35:3, col:19> '<dependent type>' contains-errors '='
    |   |-RecoveryExpr 0x12e116830 <col:3, col:7> '<dependent type>' contains-errors lvalue
    |   | `-DeclRefExpr 0x12e1167f8 <col:3> 'struct sctp_sock *' lvalue Var 0x12e112ff8 'sp' 'struct sctp_sock *'
    |   `-DeclRefExpr 0x12e116858 <col:19> 'int' lvalue Var 0x12e1132a8 'val' 'int'
    `-ReturnStmt 0x12e1168e8 <line:37:2, col:9>
      `-IntegerLiteral 0x12e1168c8 <col:9> 'int' 0
