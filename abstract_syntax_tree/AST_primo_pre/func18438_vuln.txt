`-FunctionDecl 0x153928238  line:1:1 create_tls_session 'int (int, int)'
  |-ParmVarDecl 0x1539280d8 <col:20, col:24> col:24 csock 'int'
  |-ParmVarDecl 0x153928158 <col:31, col:35> col:35 used type 'int'
  `-CompoundStmt 0x153943800 <line:2:1, line:34:1>
    |-DeclStmt 0x1539283d8 <line:3:5, col:15>
    | `-VarDecl 0x153928350 <col:5, col:14> col:9 used rc 'int' cinit
    |   `-IntegerLiteral 0x1539283b8 <col:14> 'int' 0
    |-CallExpr 0x1539286f0 <line:6:5, col:30> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x153928648 <col:5> 'int ()' Function 0x153928590 'gnutls_init' 'int ()'
    | |-RecoveryExpr 0x1539286d0 <col:17> '<dependent type>' contains-errors lvalue
    | `-DeclRefExpr 0x153928680 <col:26> 'int' lvalue ParmVar 0x153928158 'type' 'int'
    |-CallExpr 0x1539428e0 <line:10:5, col:41> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x153942800 <col:5> 'int ()' Function 0x153928748 'gnutls_set_default_priority' 'int ()'
    | `-UnaryOperator 0x1539428c8 <col:33, col:34> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   `-ImplicitCastExpr 0x1539428b0 <col:34> '<dependent type>' contains-errors <LValueToRValue>
    |     `-RecoveryExpr 0x153942890 <col:34> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x153942b08 <line:11:5, col:50> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1539429e8 <col:5> 'int ()' Function 0x153942930 'gnutls_kx_set_priority' 'int ()'
    | |-UnaryOperator 0x153942ad0 <col:28, col:29> '<dependent type>' contains-errors prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x153942ab8 <col:29> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x153942a98 <col:29> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x153942ae8 <col:38> '<dependent type>' contains-errors lvalue
    |-SwitchStmt 0x153942d10 <line:14:5, line:21:5>
    | |-ImplicitCastExpr 0x153942cf8 <line:14:13> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x153942cd8 <col:13> 'int' lvalue ParmVar 0x153928158 'type' 'int'
    | `-CompoundStmt 0x153942ff8 <col:19, line:21:5>
    |   |-CallExpr 0x153942f90 <line:16:13, col:74> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x153942e30 <col:13> 'int ()' Function 0x153942d78 'gnutls_credentials_set' 'int ()'
    |   | |-UnaryOperator 0x153942f38 <col:36, col:37> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   | | `-ImplicitCastExpr 0x153942f20 <col:37> '<dependent type>' contains-errors <LValueToRValue>
    |   | |   `-RecoveryExpr 0x153942f00 <col:37> '<dependent type>' contains-errors lvalue
    |   | |-RecoveryExpr 0x153942f50 <col:46> '<dependent type>' contains-errors lvalue
    |   | `-RecoveryExpr 0x153942f70 <col:63> '<dependent type>' contains-errors lvalue
    |   |-BreakStmt 0x153942fc8 <line:17:13>
    |   `-BreakStmt 0x153942ff0 <line:20:13>
    |-DoStmt 0x1539431b0 <line:23:5, line:25:64>
    | |-CompoundStmt 0x153943140 <line:23:8, line:25:5>
    | `-RecoveryExpr 0x153943190 <col:14, col:50> '_Bool' contains-errors
    `-IfStmt 0x1539437d0 <line:27:5, line:32:5>
      |-BinaryOperator 0x153943228 <line:27:9, col:14> 'int' '<'
      | |-ImplicitCastExpr 0x153943210 <col:9> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x1539431d0 <col:9> 'int' lvalue Var 0x153928350 'rc' 'int'
      | `-IntegerLiteral 0x1539431f0 <col:14> 'int' 0
      `-CompoundStmt 0x1539437b8 <col:17, line:32:5>
        `-CallExpr 0x153943570 <line:28:9, col:43> 'int'
          |-ImplicitCastExpr 0x153943558 <col:9> 'int (*)()' <FunctionToPointerDecay>
          | `-DeclRefExpr 0x153943328 <col:9> 'int ()' Function 0x153943270 'crm_err' 'int ()'
          |-ImplicitCastExpr 0x1539435a0 <col:17> 'char *' <ArrayToPointerDecay>
          | `-StringLiteral 0x153943390 <col:17> 'char[4]' lvalue "STR"
          `-CallExpr 0x153943518 <col:24, col:42> 'int'
            |-ImplicitCastExpr 0x153943500 <col:24> 'int (*)()' <FunctionToPointerDecay>
            | `-DeclRefExpr 0x153943490 <col:24> 'int ()' Function 0x1539433d8 'gnutls_strerror' 'int ()'
            `-ImplicitCastExpr 0x153943540 <col:40> 'int' <LValueToRValue>
              `-DeclRefExpr 0x1539434b0 <col:40> 'int' lvalue Var 0x153928350 'rc' 'int'
