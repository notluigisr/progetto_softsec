`-FunctionDecl 0x1429281d8  line:1:1 get_group_list 'int (int *)'
  |-ParmVarDecl 0x142928108 <line:2:6, col:11> col:11 used ngp 'int *'
  `-CompoundStmt 0x1429417f0 <line:3:1, line:31:1>
    |-DeclStmt 0x1429283c8 <line:4:3, col:45>
    | `-VarDecl 0x142928318 <col:3, col:17> col:17 used group_vector 'char **' static
    |-DeclStmt 0x142928460 <line:5:3, col:17>
    | `-VarDecl 0x1429283f8 <col:3, col:16> col:16 used i 'int' register
    |-IfStmt 0x142940cd0 <line:7:3, line:12:5>
    | |-ImplicitCastExpr 0x142928498 <line:7:7> 'char **' <LValueToRValue>
    | | `-DeclRefExpr 0x142928478 <col:7> 'char **' lvalue Var 0x142928318 'group_vector' 'char **'
    | `-CompoundStmt 0x142940cb0 <line:8:5, line:12:5>
    |   |-IfStmt 0x142928610 <line:9:7, line:10:9>
    |   | |-ImplicitCastExpr 0x1429284d0 <line:9:11> 'int *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x1429284b0 <col:11> 'int *' lvalue ParmVar 0x142928108 'ngp' 'int *'
    |   | `-BinaryOperator 0x1429285f0 <line:10:2, col:9> 'int' contains-errors '='
    |   |   |-UnaryOperator 0x1429285b8 <col:2, col:3> 'int' lvalue prefix '*' cannot overflow
    |   |   | `-ImplicitCastExpr 0x1429285a0 <col:3> 'int *' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x1429284e8 <col:3> 'int *' lvalue ParmVar 0x142928108 'ngp' 'int *'
    |   |   `-RecoveryExpr 0x1429285d0 <col:9> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x142940ca0 <line:11:7, col:14>
    |     `-ImplicitCastExpr 0x142928668 <col:14> 'int' <PointerToIntegral>
    |       `-ImplicitCastExpr 0x142928650 <col:14> 'char **' <LValueToRValue>
    |         `-DeclRefExpr 0x142928630 <col:14> 'char **' lvalue Var 0x142928318 'group_vector' 'char **'
    |-IfStmt 0x142940f28 <line:14:3, line:15:29>
    | |-BinaryOperator 0x142940d68 <line:14:7, col:18> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x142940d48 <col:7> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x142940d08 <col:18> 'int' 0
    | `-CallExpr 0x142940f08 <line:15:5, col:29> 'int'
    |   `-ImplicitCastExpr 0x142940ef0 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x142940ea0 <col:5> 'int ()' Function 0x142940de8 'initialize_group_array' 'int ()'
    |-IfStmt 0x142941110 <line:17:3, line:22:5>
    | |-BinaryOperator 0x142940fc0 <line:17:7, col:18> 'int' contains-errors '<='
    | | |-RecoveryExpr 0x142940fa0 <col:7> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x142940f60 <col:18> 'int' 0
    | `-CompoundStmt 0x1429410f8 <line:18:5, line:22:5>
    |   `-IfStmt 0x1429410a8 <line:19:7, line:20:9>
    |     |-ImplicitCastExpr 0x142941000 <line:19:11> 'int *' <LValueToRValue>
    |     | `-DeclRefExpr 0x142940fe0 <col:11> 'int *' lvalue ParmVar 0x142928108 'ngp' 'int *'
    |     `-BinaryOperator 0x142941088 <line:20:2, col:9> 'int' '='
    |       |-UnaryOperator 0x142941050 <col:2, col:3> 'int' lvalue prefix '*' cannot overflow
    |       | `-ImplicitCastExpr 0x142941038 <col:3> 'int *' <LValueToRValue>
    |       |   `-DeclRefExpr 0x142941018 <col:3> 'int *' lvalue ParmVar 0x142928108 'ngp' 'int *'
    |       `-IntegerLiteral 0x142941068 <col:9> 'int' 0
    |-BinaryOperator 0x1429412f8 <line:24:3, col:40> 'char **' contains-errors '='
    | |-DeclRefExpr 0x142941130 <col:3> 'char **' lvalue Var 0x142928318 'group_vector' 'char **'
    | `-CallExpr 0x1429412d0 <col:18, col:40> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x142941230 <col:18> 'int ()' Function 0x142941178 'strvec_create' 'int ()'
    |   `-RecoveryExpr 0x1429412b0 <col:33> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x142941770 <line:28:3, line:29:12>
    | |-ImplicitCastExpr 0x142941630 <line:28:7> 'int *' <LValueToRValue>
    | | `-DeclRefExpr 0x142941610 <col:7> 'int *' lvalue ParmVar 0x142928108 'ngp' 'int *'
    | `-BinaryOperator 0x142941750 <line:29:5, col:12> 'int' contains-errors '='
    |   |-UnaryOperator 0x142941718 <col:5, col:6> 'int' lvalue prefix '*' cannot overflow
    |   | `-ImplicitCastExpr 0x142941700 <col:6> 'int *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x142941648 <col:6> 'int *' lvalue ParmVar 0x142928108 'ngp' 'int *'
    |   `-RecoveryExpr 0x142941730 <col:12> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x1429417e0 <line:30:3, col:10>
      `-ImplicitCastExpr 0x1429417c8 <col:10> 'int' <PointerToIntegral>
        `-ImplicitCastExpr 0x1429417b0 <col:10> 'char **' <LValueToRValue>
          `-DeclRefExpr 0x142941790 <col:10> 'char **' lvalue Var 0x142928318 'group_vector' 'char **'
