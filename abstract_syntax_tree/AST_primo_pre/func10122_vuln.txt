`-FunctionDecl 0x152128438  line:1:1 invalid cdf_check_stream_offset 'int (const int *, const int *, const void *, int, int)'
  |-ParmVarDecl 0x1521280f0 <col:25, col:45> col:45 invalid sst 'const int *'
  |-ParmVarDecl 0x152128170 <col:50, col:70> col:70 invalid h 'const int *'
  |-ParmVarDecl 0x152128228 <line:2:5, col:17> col:17 used p 'const void *'
  |-ParmVarDecl 0x1521282a8 <col:20, col:27> col:27 invalid tail 'int'
  |-ParmVarDecl 0x152128328 <col:33, col:37> col:37 used line 'int'
  `-CompoundStmt 0x15280a378 <line:3:1, line:15:1>
    |-DeclStmt 0x152128630 <line:4:2, col:44>
    | `-VarDecl 0x152128520 <col:2, col:37> col:14 used b 'const char *' cinit
    |   `-CStyleCastExpr 0x152128608 <col:18, col:37> 'const char *' contains-errors <Dependent>
    |     `-CXXDependentScopeMemberExpr 0x1521285a8 <col:32, col:37> '<dependent type>' contains-errors lvalue ->sst_tab
    |       `-RecoveryExpr 0x152128588 <col:32> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x1521287a0 <line:5:2, col:42>
    | `-VarDecl 0x152128660 <col:2, col:38> col:14 used e 'const char *' cinit
    |   `-BinaryOperator 0x152128780 <col:18, col:38> '<dependent type>' contains-errors '+'
    |     |-ParenExpr 0x152128740 <col:18, col:34> 'const char *'
    |     | `-CStyleCastExpr 0x152128718 <col:19, col:33> 'const char *' <BitCast>
    |     |   `-ImplicitCastExpr 0x152128700 <col:33> 'const void *' <LValueToRValue> part_of_explicit_cast
    |     |     `-DeclRefExpr 0x1521286c8 <col:33> 'const void *' lvalue ParmVar 0x152128228 'p' 'const void *'
    |     `-RecoveryExpr 0x152128760 <col:38> '<dependent type>' contains-errors lvalue
    |-CStyleCastExpr 0x152809c58 <line:6:2, col:9> 'void' <ToVoid>
    | `-UnaryOperator 0x152809c30 <col:8, col:9> 'int *' prefix '&' cannot overflow
    |   `-DeclRefExpr 0x1521287b8 <col:9> 'int' lvalue ParmVar 0x152128328 'line' 'int'
    |-IfStmt 0x15280a100 <line:7:2, line:8:10>
    | |-BinaryOperator 0x15280a0b0 <line:7:6, col:58> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x152809cf0 <col:6, col:11> 'int' contains-errors '>='
    | | | |-ImplicitCastExpr 0x152809cc0 <col:6> 'const char *' contains-errors <LValueToRValue>
    | | | | `-DeclRefExpr 0x152809c80 <col:6> 'const char *' contains-errors lvalue Var 0x152128660 'e' 'const char *'
    | | | `-ImplicitCastExpr 0x152809cd8 <col:11> 'const char *' contains-errors <LValueToRValue>
    | | |   `-DeclRefExpr 0x152809ca0 <col:11> 'const char *' contains-errors lvalue Var 0x152128520 'b' 'const char *'
    | | `-BinaryOperator 0x15280a090 <col:16, col:58> 'int' contains-errors '<='
    | |   |-RecoveryExpr 0x152809e18 <col:16, col:30> '<dependent type>' contains-errors lvalue
    | |   | |-ParenExpr 0x152809d68 <col:16, col:23> '<overloaded function type>' lvalue
    | |   | | `-UnresolvedLookupExpr 0x152809d28 <col:17> '<overloaded function type>' lvalue (no ADL) = 'size_t' empty
    | |   | `-BinaryOperator 0x152809df8 <col:25, col:29> 'long' contains-errors '-'
    | |   |   |-ImplicitCastExpr 0x152809dc8 <col:25> 'const char *' contains-errors <LValueToRValue>
    | |   |   | `-DeclRefExpr 0x152809d88 <col:25> 'const char *' contains-errors lvalue Var 0x152128660 'e' 'const char *'
    | |   |   `-ImplicitCastExpr 0x152809de0 <col:29> 'const char *' contains-errors <LValueToRValue>
    | |   |     `-DeclRefExpr 0x152809da8 <col:29> 'const char *' contains-errors lvalue Var 0x152128520 'b' 'const char *'
    | |   `-BinaryOperator 0x15280a070 <col:35, col:58> '<dependent type>' contains-errors '*'
    | |     |-CallExpr 0x152809fe0 <col:35, col:49> '<dependent type>' contains-errors
    | |     | |-DeclRefExpr 0x152809fa0 <col:35> 'int ()' Function 0x152809ee8 'CDF_SEC_SIZE' 'int ()'
    | |     | `-RecoveryExpr 0x152809fc0 <col:48> '<dependent type>' contains-errors lvalue
    | |     `-CXXDependentScopeMemberExpr 0x15280a028 <col:53, col:58> '<dependent type>' contains-errors lvalue ->sst_len
    | |       `-RecoveryExpr 0x15280a008 <col:53> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x15280a0f0 <line:8:3, col:10>
    |   `-IntegerLiteral 0x15280a0d0 <col:10> 'int' 0
    |-CallExpr 0x15280a2d8 <line:9:2, line:12:68> 'int'
    | |-ImplicitCastExpr 0x15280a2c0 <line:9:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x15280a200 <col:2> 'int ()' Function 0x15280a148 'DPRINTF' 'int ()'
    | `-ImplicitCastExpr 0x15280a300 <col:11, line:10:6> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x15280a260 <line:9:11, line:10:6> 'char[7]' lvalue "STRSTR"
    `-ReturnStmt 0x15280a368 <line:14:2, col:10>
      `-UnaryOperator 0x15280a350 <col:9, col:10> 'int' prefix '-'
        `-IntegerLiteral 0x15280a330 <col:10> 'int' 1
