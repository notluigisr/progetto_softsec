`-FunctionDecl 0x13f00e038  line:1:12 invalid jpc_cox_getcompparms 'int (int *, int *, int *, int, int *)' static
  |-ParmVarDecl 0x13f00dd28 <col:33, col:43> col:43 referenced invalid ms 'int *'
  |-ParmVarDecl 0x13f00dda8 <col:47, col:61> col:61 referenced invalid cstate 'int *'
  |-ParmVarDecl 0x13f00de28 <line:2:3, col:17> col:17 invalid in 'int *'
  |-ParmVarDecl 0x13f00dea8 <col:21, col:25> col:25 used prtflag 'int'
  |-ParmVarDecl 0x13f00df28 <col:34, col:47> col:47 referenced invalid compparms 'int *'
  `-CompoundStmt 0x13f028f08 <line:3:1, line:45:1>
    |-DeclStmt 0x13f00e188 <line:5:2, col:7>
    | `-VarDecl 0x13f00e120 <col:2, col:6> col:6 used i 'int'
    |-BinaryOperator 0x13f00e208 <line:8:2, col:7> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x13f00e1c0 <col:2> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x13f00e1a0 <col:2> 'int *' lvalue ParmVar 0x13f00dd28 'ms' 'int *'
    | `-IntegerLiteral 0x13f00e1e8 <col:7> 'int' 0
    |-BinaryOperator 0x13f00e290 <line:9:2, col:11> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x13f00e248 <col:2> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x13f00e228 <col:2> 'int *' lvalue ParmVar 0x13f00dda8 'cstate' 'int *'
    | `-IntegerLiteral 0x13f00e270 <col:11> 'int' 0
    |-IfStmt 0x13f0279a0 <line:11:2, line:17:2>
    | |-BinaryOperator 0x13f027920 <line:11:6, line:15:39> 'int' contains-errors '||'
    | | |-BinaryOperator 0x13f027810 <line:11:6, line:14:40> 'int' contains-errors '||'
    | | | |-BinaryOperator 0x13f027700 <line:11:6, line:13:46> 'int' contains-errors '||'
    | | | | |-BinaryOperator 0x13f0275f0 <line:11:6, line:12:45> 'int' contains-errors '||'
    | | | | | |-CallExpr 0x13f0274d0 <line:11:6, col:43> '<dependent type>' contains-errors
    | | | | | | |-DeclRefExpr 0x13f027410 <col:6> 'int ()' Function 0x13f00e358 'jpc_getuint8' 'int ()'
    | | | | | | |-RecoveryExpr 0x13f027430 <col:19> '<dependent type>' contains-errors lvalue
    | | | | | | `-UnaryOperator 0x13f0274b8 <col:23, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | | | | |   `-CXXDependentScopeMemberExpr 0x13f027470 <col:24, col:35> '<dependent type>' contains-errors lvalue ->numdlvls
    | | | | | |     `-RecoveryExpr 0x13f027450 <col:24> '<dependent type>' contains-errors lvalue
    | | | | | `-CallExpr 0x13f0275c0 <line:12:4, col:45> '<dependent type>' contains-errors
    | | | | |   |-DeclRefExpr 0x13f027500 <col:4> 'int ()' Function 0x13f00e358 'jpc_getuint8' 'int ()'
    | | | | |   |-RecoveryExpr 0x13f027520 <col:17> '<dependent type>' contains-errors lvalue
    | | | | |   `-UnaryOperator 0x13f0275a8 <col:21, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | | | |     `-CXXDependentScopeMemberExpr 0x13f027560 <col:22, col:33> '<dependent type>' contains-errors lvalue ->cblkwidthval
    | | | | |       `-RecoveryExpr 0x13f027540 <col:22> '<dependent type>' contains-errors lvalue
    | | | | `-CallExpr 0x13f0276d0 <line:13:4, col:46> '<dependent type>' contains-errors
    | | | |   |-DeclRefExpr 0x13f027610 <col:4> 'int ()' Function 0x13f00e358 'jpc_getuint8' 'int ()'
    | | | |   |-RecoveryExpr 0x13f027630 <col:17> '<dependent type>' contains-errors lvalue
    | | | |   `-UnaryOperator 0x13f0276b8 <col:21, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | | |     `-CXXDependentScopeMemberExpr 0x13f027670 <col:22, col:33> '<dependent type>' contains-errors lvalue ->cblkheightval
    | | | |       `-RecoveryExpr 0x13f027650 <col:22> '<dependent type>' contains-errors lvalue
    | | | `-CallExpr 0x13f0277e0 <line:14:4, col:40> '<dependent type>' contains-errors
    | | |   |-DeclRefExpr 0x13f027720 <col:4> 'int ()' Function 0x13f00e358 'jpc_getuint8' 'int ()'
    | | |   |-RecoveryExpr 0x13f027740 <col:17> '<dependent type>' contains-errors lvalue
    | | |   `-UnaryOperator 0x13f0277c8 <col:21, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | |     `-CXXDependentScopeMemberExpr 0x13f027780 <col:22, col:33> '<dependent type>' contains-errors lvalue ->cblksty
    | | |       `-RecoveryExpr 0x13f027760 <col:22> '<dependent type>' contains-errors lvalue
    | | `-CallExpr 0x13f0278f0 <line:15:4, col:39> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x13f027830 <col:4> 'int ()' Function 0x13f00e358 'jpc_getuint8' 'int ()'
    | |   |-RecoveryExpr 0x13f027850 <col:17> '<dependent type>' contains-errors lvalue
    | |   `-UnaryOperator 0x13f0278d8 <col:21, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |     `-CXXDependentScopeMemberExpr 0x13f027890 <col:22, col:33> '<dependent type>' contains-errors lvalue ->qmfbid
    | |       `-RecoveryExpr 0x13f027870 <col:22> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x13f027988 <col:42, line:17:2>
    |   `-ReturnStmt 0x13f027978 <line:16:3, col:11>
    |     `-UnaryOperator 0x13f027960 <col:10, col:11> 'int' prefix '-'
    |       `-IntegerLiteral 0x13f027940 <col:11> 'int' 1
    |-IfStmt 0x13f027ae8 <line:18:2, line:20:2>
    | |-BinaryOperator 0x13f027a48 <line:18:6, col:28> 'int' contains-errors '>'
    | | |-CXXDependentScopeMemberExpr 0x13f0279e0 <col:6, col:17> '<dependent type>' contains-errors lvalue ->numdlvls
    | | | `-RecoveryExpr 0x13f0279c0 <col:6> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x13f027a28 <col:28> 'int' 32
    | `-CompoundStmt 0x13f027ad0 <col:32, line:20:2>
    |   `-GotoStmt 0x13f027ab8 <line:19:3, col:8> 'error' 0x13f027a68
    |-BinaryOperator 0x13f027c40 <line:21:2, col:46> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x13f027b50 <col:2, col:13> '<dependent type>' contains-errors lvalue ->numrlvls
    | | `-RecoveryExpr 0x13f027b28 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x13f027b08 <col:2> 'int *' lvalue ParmVar 0x13f00df28 'compparms' 'int *'
    | `-BinaryOperator 0x13f027c20 <col:24, col:46> '<dependent type>' contains-errors '+'
    |   |-CXXDependentScopeMemberExpr 0x13f027bb8 <col:24, col:35> '<dependent type>' contains-errors lvalue ->numdlvls
    |   | `-RecoveryExpr 0x13f027b98 <col:24> '<dependent type>' contains-errors lvalue
    |   `-IntegerLiteral 0x13f027c00 <col:46> 'int' 1
    |-IfStmt 0x13f027d70 <line:22:2, line:24:2>
    | |-BinaryOperator 0x13f027d20 <line:22:6, col:28> 'int' contains-errors '>'
    | | |-CXXDependentScopeMemberExpr 0x13f027c80 <col:6, col:17> '<dependent type>' contains-errors lvalue ->numrlvls
    | | | `-RecoveryExpr 0x13f027c60 <col:6> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x13f027d00 <col:28> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x13f027d58 <col:42, line:24:2>
    |   `-GotoStmt 0x13f027d40 <line:23:3, col:8> 'error' 0x13f027a68
    |-IfStmt 0x13f028b18 <line:25:2, line:35:2>
    | |-ImplicitCastExpr 0x13f027db0 <line:25:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x13f027d90 <col:6> 'int' lvalue ParmVar 0x13f00dea8 'prtflag' 'int'
    | `-CompoundStmt 0x13f028af8 <col:15, line:35:2>
    |   |-ForStmt 0x13f028998 <line:26:3, line:32:3>
    |   | |-BinaryOperator 0x13f027e08 <line:26:8, col:12> 'int' '='
    |   | | |-DeclRefExpr 0x13f027dc8 <col:8> 'int' lvalue Var 0x13f00e120 'i' 'int'
    |   | | `-IntegerLiteral 0x13f027de8 <col:12> 'int' 0
    |   | |-<<<NULL>>>
    |   | |-BinaryOperator 0x13f027eb0 <col:15, col:30> 'int' contains-errors '<'
    |   | | |-DeclRefExpr 0x13f027e28 <col:15> 'int' lvalue Var 0x13f00e120 'i' 'int'
    |   | | `-CXXDependentScopeMemberExpr 0x13f027e68 <col:19, col:30> '<dependent type>' contains-errors lvalue ->numrlvls
    |   | |   `-RecoveryExpr 0x13f027e48 <col:19> '<dependent type>' contains-errors lvalue
    |   | |-UnaryOperator 0x13f027ef0 <col:40, col:42> 'int' prefix '++'
    |   | | `-DeclRefExpr 0x13f027ed0 <col:42> 'int' lvalue Var 0x13f00e120 'i' 'int'
    |   | `-CompoundStmt 0x13f028978 <col:45, line:32:3>
    |   |   |-IfStmt 0x13f028040 <line:27:4, line:29:4>
    |   |   | |-CallExpr 0x13f027fe0 <line:27:8, col:29> '<dependent type>' contains-errors
    |   |   | | |-DeclRefExpr 0x13f027f08 <col:8> 'int ()' Function 0x13f00e358 'jpc_getuint8' 'int ()'
    |   |   | | |-RecoveryExpr 0x13f027f28 <col:21> '<dependent type>' contains-errors lvalue
    |   |   | | `-UnaryOperator 0x13f027fc8 <col:25, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   | |   `-RecoveryExpr 0x13f027fa8 <col:26> '<dependent type>' contains-errors lvalue
    |   |   | `-CompoundStmt 0x13f028028 <col:32, line:29:4>
    |   |   |   `-GotoStmt 0x13f028010 <line:28:5, col:10> 'error' 0x13f027a68
    |   |   `-BinaryOperator 0x13f028390 <line:30:4, col:44> '<dependent type>' contains-errors '='
    |   |     |-CXXDependentScopeMemberExpr 0x13f028308 <col:4, col:24> '<dependent type>' contains-errors lvalue .parwidthval
    |   |     | `-ArraySubscriptExpr 0x13f0282e8 <col:4, col:22> '<dependent type>' contains-errors lvalue
    |   |     |   |-ImplicitCastExpr 0x13f0282b8 <col:4, col:15> '<dependent type>' contains-errors <LValueToRValue>
    |   |     |   | `-CXXDependentScopeMemberExpr 0x13f0280a8 <col:4, col:15> '<dependent type>' contains-errors lvalue ->rlvls
    |   |     |   |   `-RecoveryExpr 0x13f028080 <col:4> '<dependent type>' contains-errors lvalue
    |   |     |   |     `-DeclRefExpr 0x13f028060 <col:4> 'int *' lvalue ParmVar 0x13f00df28 'compparms' 'int *'
    |   |     |   `-ImplicitCastExpr 0x13f0282d0 <col:21> 'int' <LValueToRValue>
    |   |     |     `-DeclRefExpr 0x13f0280f0 <col:21> 'int' lvalue Var 0x13f00e120 'i' 'int'
    |   |     `-BinaryOperator 0x13f028370 <col:38, col:44> '<dependent type>' contains-errors '&'
    |   |       |-RecoveryExpr 0x13f028350 <col:38> '<dependent type>' contains-errors lvalue
    |   |       `-IntegerLiteral 0x13f0281c0 <col:44> 'int' 15
    |   `-CompoundAssignOperator 0x13f028ac8 <line:34:3, col:22> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |     |-CXXDependentScopeMemberExpr 0x13f028a18 <col:3, col:14> '<dependent type>' contains-errors lvalue ->csty
    |     | `-RecoveryExpr 0x13f0289f0 <col:3> '<dependent type>' contains-errors lvalue
    |     |   `-DeclRefExpr 0x13f0289d0 <col:3> 'int *' lvalue ParmVar 0x13f00df28 'compparms' 'int *'
    |     `-RecoveryExpr 0x13f028aa8 <col:22> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x13f028cb0 <line:36:2, line:38:2>
    | |-CallExpr 0x13f028c58 <line:36:6, col:23> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x13f028c18 <col:6> 'int ()' Function 0x13f028b60 'jas_stream_eof' 'int ()'
    | | `-RecoveryExpr 0x13f028c38 <col:21> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x13f028c98 <col:26, line:38:2>
    |   `-GotoStmt 0x13f028c80 <line:37:3, col:8> 'error' 0x13f027a68
    |-ReturnStmt 0x13f028cf0 <line:39:2, col:9>
    | `-IntegerLiteral 0x13f028cd0 <col:9> 'int' 0
    |-LabelStmt 0x13f028ea0 <line:40:1, line:43:2> 'error'
    | `-IfStmt 0x13f028e80 <line:41:2, line:43:2>
    |   |-RecoveryExpr 0x13f028d00 <line:41:6> '<dependent type>' contains-errors lvalue
    |   `-CompoundStmt 0x13f028e68 <col:17, line:43:2>
    |     `-CallExpr 0x13f028e40 <line:42:3, col:37> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x13f028e00 <col:3> 'int ()' Function 0x13f028d48 'jpc_cox_destroycompparms' 'int ()'
    |       `-RecoveryExpr 0x13f028e20 <col:28> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x13f028ef8 <line:44:2, col:10>
      `-UnaryOperator 0x13f028ee0 <col:9, col:10> 'int' prefix '-'
        `-IntegerLiteral 0x13f028ec0 <col:10> 'int' 1
