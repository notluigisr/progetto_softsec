`-FunctionDecl 0x14c80e358  line:1:5 nfc_register_device 'int (struct nfc_dev *)'
  |-ParmVarDecl 0x14c80e248 <col:25, col:41> col:41 used dev 'struct nfc_dev *'
  `-CompoundStmt 0x14e008fb8 <line:2:1, line:36:1>
    |-DeclStmt 0x14c8266d0 <line:3:2, col:8>
    | `-VarDecl 0x14c826668 <col:2, col:6> col:6 used rc 'int'
    |-CallExpr 0x14c826a30 <line:5:2, col:37> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14c826810 <col:2> 'int ()' Function 0x14c826758 'pr_debug' 'int ()'
    | |-StringLiteral 0x14c826870 <col:11> 'char[4]' lvalue "STR"
    | `-CallExpr 0x14c826a08 <col:18, col:36> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14c826970 <col:18> 'int ()' Function 0x14c8268b8 'dev_name' 'int ()'
    |   `-UnaryOperator 0x14c8269f0 <col:27, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x14c8269c8 <col:28, col:33> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x14c826990 <col:28> 'struct nfc_dev *' lvalue ParmVar 0x14c80e248 'dev' 'struct nfc_dev *'
    |-CallExpr 0x14c826bf0 <line:7:2, col:31> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14c826b40 <col:2> 'int ()' Function 0x14c826a88 'mutex_lock' 'int ()'
    | `-UnaryOperator 0x14c826bd8 <col:13, col:14> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x14c826bb8 <col:14> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x14c826dd8 <line:9:2, col:27> 'int' contains-errors '='
    | |-DeclRefExpr 0x14c826c18 <col:2> 'int' lvalue Var 0x14c826668 'rc' 'int'
    | `-CallExpr 0x14c826db0 <col:7, col:27> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14c826d18 <col:7> 'int ()' Function 0x14c826c60 'device_add' 'int ()'
    |   `-UnaryOperator 0x14c826d98 <col:18, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x14c826d70 <col:19, col:24> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x14c826d38 <col:19> 'struct nfc_dev *' lvalue ParmVar 0x14c80e248 'dev' 'struct nfc_dev *'
    |-CallExpr 0x14c826f88 <line:10:2, col:33> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14c826ed8 <col:2> 'int ()' Function 0x14c826e20 'mutex_unlock' 'int ()'
    | `-UnaryOperator 0x14c826f70 <col:15, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x14c826f50 <col:16> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14c827070 <line:12:2, line:13:10>
    | |-BinaryOperator 0x14c827008 <line:12:6, col:11> 'int' '<'
    | | |-ImplicitCastExpr 0x14c826ff0 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x14c826fb0 <col:6> 'int' lvalue Var 0x14c826668 'rc' 'int'
    | | `-IntegerLiteral 0x14c826fd0 <col:11> 'int' 0
    | `-ReturnStmt 0x14c827060 <line:13:3, col:10>
    |   `-ImplicitCastExpr 0x14c827048 <col:10> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x14c827028 <col:10> 'int' lvalue Var 0x14c826668 'rc' 'int'
    |-BinaryOperator 0x14c827258 <line:15:2, col:35> 'int' '='
    | |-DeclRefExpr 0x14c827090 <col:2> 'int' lvalue Var 0x14c826668 'rc' 'int'
    | `-CallExpr 0x14c827218 <col:7, col:35> 'int'
    |   |-ImplicitCastExpr 0x14c827200 <col:7> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x14c827190 <col:7> 'int ()' Function 0x14c8270d8 'nfc_llcp_register_device' 'int ()'
    |   `-ImplicitCastExpr 0x14c827240 <col:32> 'struct nfc_dev *' <LValueToRValue>
    |     `-DeclRefExpr 0x14c8271b0 <col:32> 'struct nfc_dev *' lvalue ParmVar 0x14c80e248 'dev' 'struct nfc_dev *'
    |-IfStmt 0x14c827428 <line:16:2, line:17:15>
    | |-ImplicitCastExpr 0x14c827298 <line:16:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x14c827278 <col:6> 'int' lvalue Var 0x14c826668 'rc' 'int'
    | `-CallExpr 0x14c8273e8 <line:17:3, col:15> 'int'
    |   |-ImplicitCastExpr 0x14c8273d0 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x14c827390 <col:3> 'int ()' Function 0x14c8272d8 'pr_err' 'int ()'
    |   `-ImplicitCastExpr 0x14c827410 <col:10> 'char *' <ArrayToPointerDecay>
    |     `-StringLiteral 0x14c8273b0 <col:10> 'char[4]' lvalue "STR"
    |-CallExpr 0x14c8275c0 <line:19:2, col:23> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14c827528 <col:2> 'int ()' Function 0x14c827470 'device_lock' 'int ()'
    | `-UnaryOperator 0x14c8275a8 <col:14, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x14c827580 <col:15, col:20> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x14c827548 <col:15> 'struct nfc_dev *' lvalue ParmVar 0x14c80e248 'dev' 'struct nfc_dev *'
    |-BinaryOperator 0x14e008608 <line:20:2, line:21:45> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x14e008238 <line:20:2, col:7> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x14e008200 <col:2> 'struct nfc_dev *' lvalue ParmVar 0x14c80e248 'dev' 'struct nfc_dev *'
    | `-CallExpr 0x14e0085c0 <col:16, line:21:45> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14e008340 <line:20:16> 'int ()' Function 0x14e008288 'rfkill_alloc' 'int ()'
    |   |-CallExpr 0x14e0083f8 <col:29, col:47> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x14e008360 <col:29> 'int ()' Function 0x14c8268b8 'dev_name' 'int ()'
    |   | `-UnaryOperator 0x14e0083e0 <col:38, col:44> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   `-RecoveryExpr 0x14e0083b8 <col:39, col:44> '<dependent type>' contains-errors lvalue
    |   |     `-DeclRefExpr 0x14e008380 <col:39> 'struct nfc_dev *' lvalue ParmVar 0x14c80e248 'dev' 'struct nfc_dev *'
    |   |-UnaryOperator 0x14e008480 <col:50, col:56> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-RecoveryExpr 0x14e008458 <col:51, col:56> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x14e008420 <col:51> 'struct nfc_dev *' lvalue ParmVar 0x14c80e248 'dev' 'struct nfc_dev *'
    |   |-RecoveryExpr 0x14e008568 <line:21:8> '<dependent type>' contains-errors lvalue
    |   |-UnaryOperator 0x14e0085a8 <col:25, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-RecoveryExpr 0x14e008588 <col:26> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x14e0084e0 <col:42> 'struct nfc_dev *' lvalue ParmVar 0x14c80e248 'dev' 'struct nfc_dev *'
    |-IfStmt 0x14e008a88 <line:22:2, line:27:2>
    | |-RecoveryExpr 0x14e008660 <line:22:6, col:11> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x14e008628 <col:6> 'struct nfc_dev *' lvalue ParmVar 0x14c80e248 'dev' 'struct nfc_dev *'
    | `-CompoundStmt 0x14e008a70 <col:19, line:27:2>
    |   `-IfStmt 0x14e008a50 <line:23:3, line:26:3>
    |     |-BinaryOperator 0x14e008830 <line:23:7, col:38> 'int' contains-errors '<'
    |     | |-CallExpr 0x14e0087e8 <col:7, col:34> '<dependent type>' contains-errors
    |     | | |-DeclRefExpr 0x14e008768 <col:7> 'int ()' Function 0x14e0086b0 'rfkill_register' 'int ()'
    |     | | `-RecoveryExpr 0x14e0087c0 <col:23, col:28> '<dependent type>' contains-errors lvalue
    |     | |   `-DeclRefExpr 0x14e008788 <col:23> 'struct nfc_dev *' lvalue ParmVar 0x14c80e248 'dev' 'struct nfc_dev *'
    |     | `-IntegerLiteral 0x14e008810 <col:38> 'int' 0
    |     `-CompoundStmt 0x14e008a38 <col:41, line:26:3>
    |       `-CallExpr 0x14e0089b0 <line:24:4, col:30> '<dependent type>' contains-errors
    |         |-DeclRefExpr 0x14e008930 <col:4> 'int ()' Function 0x14e008878 'rfkill_destroy' 'int ()'
    |         `-RecoveryExpr 0x14e008988 <col:19, col:24> '<dependent type>' contains-errors lvalue
    |           `-DeclRefExpr 0x14e008950 <col:19> 'struct nfc_dev *' lvalue ParmVar 0x14c80e248 'dev' 'struct nfc_dev *'
    |-CallExpr 0x14e008c20 <line:28:2, col:25> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14e008b88 <col:2> 'int ()' Function 0x14e008ad0 'device_unlock' 'int ()'
    | `-UnaryOperator 0x14e008c08 <col:16, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x14e008be0 <col:17, col:22> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x14e008ba8 <col:17> 'struct nfc_dev *' lvalue ParmVar 0x14c80e248 'dev' 'struct nfc_dev *'
    |-BinaryOperator 0x14e008de0 <line:30:2, col:32> 'int' '='
    | |-DeclRefExpr 0x14e008c48 <col:2> 'int' lvalue Var 0x14c826668 'rc' 'int'
    | `-CallExpr 0x14e008da0 <col:7, col:32> 'int'
    |   |-ImplicitCastExpr 0x14e008d88 <col:7> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x14e008d48 <col:7> 'int ()' Function 0x14e008c90 'nfc_genl_device_added' 'int ()'
    |   `-ImplicitCastExpr 0x14e008dc8 <col:29> 'struct nfc_dev *' <LValueToRValue>
    |     `-DeclRefExpr 0x14e008d68 <col:29> 'struct nfc_dev *' lvalue ParmVar 0x14c80e248 'dev' 'struct nfc_dev *'
    |-IfStmt 0x14e008f68 <line:31:2, line:33:24>
    | |-ImplicitCastExpr 0x14e008e20 <line:31:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x14e008e00 <col:6> 'int' lvalue Var 0x14c826668 'rc' 'int'
    | `-CallExpr 0x14e008f38 <line:32:3, line:33:24> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14e008e38 <line:32:3> 'int ()' Function 0x14c826758 'pr_debug' 'int ()'
    |   |-StringLiteral 0x14e008e58 <col:12> 'char[4]' lvalue "STR"
    |   `-CallExpr 0x14e008f10 <line:33:5, col:23> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x14e008e78 <col:5> 'int ()' Function 0x14c8268b8 'dev_name' 'int ()'
    |     `-UnaryOperator 0x14e008ef8 <col:14, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow
    |       `-RecoveryExpr 0x14e008ed0 <col:15, col:20> '<dependent type>' contains-errors lvalue
    |         `-DeclRefExpr 0x14e008e98 <col:15> 'struct nfc_dev *' lvalue ParmVar 0x14c80e248 'dev' 'struct nfc_dev *'
    `-ReturnStmt 0x14e008fa8 <line:35:2, col:9>
      `-IntegerLiteral 0x14e008f88 <col:9> 'int' 0
