`-FunctionDecl 0x1210082d8  line:1:1 invalid ieee802_15_4_if_print 'int (int *, const struct pcap_pkthdr *, const char *)'
  |-ParmVarDecl 0x120928928 <col:23, col:43> col:43 invalid ndo 'int *'
  |-ParmVarDecl 0x120928f18 <line:2:23, col:49> col:49 h 'const struct pcap_pkthdr *'
  |-ParmVarDecl 0x120928f98 <col:52, col:66> col:66 used p 'const char *'
  `-CompoundStmt 0x12100cec0 <line:3:1, line:91:1>
    |-DeclStmt 0x121008418 <line:5:2, col:12>
    | `-VarDecl 0x1210083b0 <col:2, col:6> col:6 used hdrlen 'int'
    |-IfStmt 0x121008778 <line:9:2, line:12:2>
    | |-BinaryOperator 0x1210084a8 <line:9:6, col:15> 'int' contains-errors '<'
    | | |-RecoveryExpr 0x121008488 <col:6> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x121008448 <col:15> 'int' 3
    | `-CompoundStmt 0x121008760 <col:18, line:12:2>
    |   `-ReturnStmt 0x121008750 <line:11:3, col:10>
    |     `-RecoveryExpr 0x121008730 <col:10> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x121008b10 <line:15:2, col:35> 'int' contains-errors '='
    | |-DeclRefExpr 0x121008948 <col:2> 'int' lvalue Var 0x1210083b0 'hdrlen' 'int'
    | `-CallExpr 0x121008ae8 <col:11, col:35> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x121008a48 <col:11> 'int ()' Function 0x121008990 'extract_header_length' 'int ()'
    |   `-RecoveryExpr 0x121008ac8 <col:33> '<dependent type>' contains-errors lvalue
    |-CompoundAssignOperator 0x121008d28 <line:19:2, col:7> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'
    | |-DeclRefExpr 0x121008ce8 <col:2> 'const char *' lvalue ParmVar 0x120928f98 'p' 'const char *'
    | `-IntegerLiteral 0x121008d08 <col:7> 'int' 3
    |-IfStmt 0x1210090c0 <line:25:2, line:28:2>
    | |-BinaryOperator 0x121008fc0 <line:25:6, col:17> 'int' '=='
    | | |-ImplicitCastExpr 0x121008fa8 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x121008f50 <col:6> 'int' lvalue Var 0x1210083b0 'hdrlen' 'int'
    | | `-UnaryOperator 0x121008f90 <col:16, col:17> 'int' prefix '-'
    | |   `-IntegerLiteral 0x121008f70 <col:17> 'int' 1
    | `-CompoundStmt 0x1210090a8 <col:20, line:28:2>
    |   `-CallExpr 0x121009080 <line:26:3, col:23> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x121008fe0 <col:3> 'int ()' Function 0x121008568 'ND_PRINT' 'int ()'
    |     `-ParenExpr 0x121009060 <col:12, col:22> 'char[4]' contains-errors
    |       `-BinaryOperator 0x121009040 <col:13, col:17> 'char[4]' contains-errors ','
    |         |-RecoveryExpr 0x121009000 <col:13> '<dependent type>' contains-errors lvalue
    |         `-StringLiteral 0x121009020 <col:17> 'char[4]' lvalue "STR"
    |-IfStmt 0x12100cca8 <line:31:2, line:85:2> has_else
    | |-UnaryOperator 0x121009160 <line:31:6, col:12> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x121009148 <col:7, col:12> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-CXXDependentScopeMemberExpr 0x121009100 <col:7, col:12> '<dependent type>' contains-errors lvalue ->ndo_vflag
    | |     `-RecoveryExpr 0x1210090e0 <col:7> '<dependent type>' contains-errors lvalue
    | |-CompoundStmt 0x12100b620 <col:23, line:34:2>
    | | `-CompoundAssignOperator 0x1210091d0 <line:32:3, col:7> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'
    | |   |-DeclRefExpr 0x121009178 <col:3> 'const char *' lvalue ParmVar 0x120928f98 'p' 'const char *'
    | |   `-ImplicitCastExpr 0x1210091b8 <col:7> 'int' <LValueToRValue>
    | |     `-DeclRefExpr 0x121009198 <col:7> 'int' lvalue Var 0x1210083b0 'hdrlen' 'int'
    | `-CompoundStmt 0x12100cc80 <line:34:9, line:85:2>
    |   |-SwitchStmt 0x12100b698 <line:37:3, line:56:3>
    |   | |-RecoveryExpr 0x12100b678 <line:37:11, col:24> 'int' contains-errors
    |   | `-CompoundStmt 0x12100c020 <col:29, line:56:3>
    |   |   |-CaseStmt 0x12100b6f8 <line:38:3, line:39:24>
    |   |   | |-ConstantExpr 0x12100b6e0 <line:38:8> 'int'
    |   |   | | `-IntegerLiteral 0x12100b6c0 <col:8> 'int' 0
    |   |   | `-CallExpr 0x12100b7c0 <line:39:4, col:24> '<dependent type>' contains-errors
    |   |   |   |-DeclRefExpr 0x12100b720 <col:4> 'int ()' Function 0x121008568 'ND_PRINT' 'int ()'
    |   |   |   `-ParenExpr 0x12100b7a0 <col:13, col:23> 'char[4]' contains-errors
    |   |   |     `-BinaryOperator 0x12100b780 <col:14, col:18> 'char[4]' contains-errors ','
    |   |   |       |-RecoveryExpr 0x12100b740 <col:14> '<dependent type>' contains-errors lvalue
    |   |   |       `-StringLiteral 0x12100b760 <col:18> 'char[4]' lvalue "STR"
    |   |   |-BreakStmt 0x12100b7e8 <line:40:4>
    |   |   |-CaseStmt 0x12100b828 <line:41:3, line:42:24>
    |   |   | |-ConstantExpr 0x12100b810 <line:41:8> 'int'
    |   |   | | `-IntegerLiteral 0x12100b7f0 <col:8> 'int' 1
    |   |   | `-CallExpr 0x12100b8f0 <line:42:4, col:24> '<dependent type>' contains-errors
    |   |   |   |-DeclRefExpr 0x12100b850 <col:4> 'int ()' Function 0x121008568 'ND_PRINT' 'int ()'
    |   |   |   `-ParenExpr 0x12100b8d0 <col:13, col:23> 'char[4]' contains-errors
    |   |   |     `-BinaryOperator 0x12100b8b0 <col:14, col:18> 'char[4]' contains-errors ','
    |   |   |       |-RecoveryExpr 0x12100b870 <col:14> '<dependent type>' contains-errors lvalue
    |   |   |       `-StringLiteral 0x12100b890 <col:18> 'char[4]' lvalue "STR"
    |   |   |-ReturnStmt 0x12100b938 <line:43:4, col:11>
    |   |   | `-IntegerLiteral 0x12100b918 <col:11> 'int' 0
    |   |   |-CaseStmt 0x12100b980 <line:44:3, <invalid sloc>>
    |   |   | |-ConstantExpr 0x12100b968 <col:8> 'int'
    |   |   | | `-IntegerLiteral 0x12100b948 <col:8> 'int' 2
    |   |   | `-NullStmt 0x12100ba40 <<invalid sloc>>
    |   |   |-CompoundAssignOperator 0x12100ba88 <line:46:4, col:9> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'
    |   |   | |-DeclRefExpr 0x12100ba48 <col:4> 'const char *' lvalue ParmVar 0x120928f98 'p' 'const char *'
    |   |   | `-IntegerLiteral 0x12100ba68 <col:9> 'int' 2
    |   |   |-CompoundAssignOperator 0x12100bc10 <line:48:4, col:9> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'
    |   |   | |-DeclRefExpr 0x12100bbd0 <col:4> 'const char *' lvalue ParmVar 0x120928f98 'p' 'const char *'
    |   |   | `-IntegerLiteral 0x12100bbf0 <col:9> 'int' 2
    |   |   |-BreakStmt 0x12100bc40 <line:49:4>
    |   |   |-CaseStmt 0x12100bc80 <line:50:3, <invalid sloc>>
    |   |   | |-ConstantExpr 0x12100bc68 <col:8> 'int'
    |   |   | | `-IntegerLiteral 0x12100bc48 <col:8> 'int' 3
    |   |   | `-NullStmt 0x12100bd40 <<invalid sloc>>
    |   |   |-CompoundAssignOperator 0x12100bd88 <line:52:4, col:9> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'
    |   |   | |-DeclRefExpr 0x12100bd48 <col:4> 'const char *' lvalue ParmVar 0x120928f98 'p' 'const char *'
    |   |   | `-IntegerLiteral 0x12100bd68 <col:9> 'int' 2
    |   |   |-CompoundAssignOperator 0x12100bfe8 <line:54:4, col:9> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'
    |   |   | |-DeclRefExpr 0x12100bfa8 <col:4> 'const char *' lvalue ParmVar 0x120928f98 'p' 'const char *'
    |   |   | `-IntegerLiteral 0x12100bfc8 <col:9> 'int' 8
    |   |   `-BreakStmt 0x12100c018 <line:55:4>
    |   |-CallExpr 0x12100c130 <line:57:3, col:23> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x12100c090 <col:3> 'int ()' Function 0x121008568 'ND_PRINT' 'int ()'
    |   | `-ParenExpr 0x12100c110 <col:12, col:22> 'char[4]' contains-errors
    |   |   `-BinaryOperator 0x12100c0f0 <col:13, col:17> 'char[4]' contains-errors ','
    |   |     |-RecoveryExpr 0x12100c0b0 <col:13> '<dependent type>' contains-errors lvalue
    |   |     `-StringLiteral 0x12100c0d0 <col:17> 'char[4]' lvalue "STR"
    |   `-SwitchStmt 0x12100c1b8 <line:59:3, line:82:3>
    |     |-RecoveryExpr 0x12100c198 <line:59:11, col:24> 'int' contains-errors
    |     `-CompoundStmt 0x12100cc00 <col:29, line:82:3>
    |       |-CaseStmt 0x12100c218 <line:60:3, line:61:24>
    |       | |-ConstantExpr 0x12100c200 <line:60:8> 'int'
    |       | | `-IntegerLiteral 0x12100c1e0 <col:8> 'int' 0
    |       | `-CallExpr 0x12100c2e0 <line:61:4, col:24> '<dependent type>' contains-errors
    |       |   |-DeclRefExpr 0x12100c240 <col:4> 'int ()' Function 0x121008568 'ND_PRINT' 'int ()'
    |       |   `-ParenExpr 0x12100c2c0 <col:13, col:23> 'char[4]' contains-errors
    |       |     `-BinaryOperator 0x12100c2a0 <col:14, col:18> 'char[4]' contains-errors ','
    |       |       |-RecoveryExpr 0x12100c260 <col:14> '<dependent type>' contains-errors lvalue
    |       |       `-StringLiteral 0x12100c280 <col:18> 'char[4]' lvalue "STR"
    |       |-BreakStmt 0x12100c308 <line:62:4>
    |       |-CaseStmt 0x12100c348 <line:63:3, line:64:24>
    |       | |-ConstantExpr 0x12100c330 <line:63:8> 'int'
    |       | | `-IntegerLiteral 0x12100c310 <col:8> 'int' 1
    |       | `-CallExpr 0x12100c410 <line:64:4, col:24> '<dependent type>' contains-errors
    |       |   |-DeclRefExpr 0x12100c370 <col:4> 'int ()' Function 0x121008568 'ND_PRINT' 'int ()'
    |       |   `-ParenExpr 0x12100c3f0 <col:13, col:23> 'char[4]' contains-errors
    |       |     `-BinaryOperator 0x12100c3d0 <col:14, col:18> 'char[4]' contains-errors ','
    |       |       |-RecoveryExpr 0x12100c390 <col:14> '<dependent type>' contains-errors lvalue
    |       |       `-StringLiteral 0x12100c3b0 <col:18> 'char[4]' lvalue "STR"
    |       |-ReturnStmt 0x12100c458 <line:65:4, col:11>
    |       | `-IntegerLiteral 0x12100c438 <col:11> 'int' 0
    |       |-CaseStmt 0x12100c4a0 <line:66:3, line:70:4>
    |       | |-ConstantExpr 0x12100c488 <line:66:8> 'int'
    |       | | `-IntegerLiteral 0x12100c468 <col:8> 'int' 2
    |       | `-IfStmt 0x12100c688 <line:67:4, line:70:4>
    |       |   |-RecoveryExpr 0x12100c548 <line:67:8, col:23> '_Bool' contains-errors
    |       |   `-CompoundStmt 0x12100c670 <col:26, line:70:4>
    |       |     `-CompoundAssignOperator 0x12100c640 <line:69:5, col:10> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'
    |       |       |-DeclRefExpr 0x12100c600 <col:5> 'const char *' lvalue ParmVar 0x120928f98 'p' 'const char *'
    |       |       `-IntegerLiteral 0x12100c620 <col:10> 'int' 2
    |       |-CompoundAssignOperator 0x12100c800 <line:72:4, col:9> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'
    |       | |-DeclRefExpr 0x12100c7c0 <col:4> 'const char *' lvalue ParmVar 0x120928f98 'p' 'const char *'
    |       | `-IntegerLiteral 0x12100c7e0 <col:9> 'int' 2
    |       |-BreakStmt 0x12100c830 <line:73:4>
    |       |-CaseStmt 0x12100c870 <line:74:3, line:78:4>
    |       | |-ConstantExpr 0x12100c858 <line:74:8> 'int'
    |       | | `-IntegerLiteral 0x12100c838 <col:8> 'int' 3
    |       | `-IfStmt 0x12100ca58 <line:75:4, line:78:4>
    |       |   |-RecoveryExpr 0x12100c918 <line:75:8, col:23> '_Bool' contains-errors
    |       |   `-CompoundStmt 0x12100ca40 <col:26, line:78:4>
    |       |     `-CompoundAssignOperator 0x12100ca10 <line:77:5, col:10> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'
    |       |       |-DeclRefExpr 0x12100c9d0 <col:5> 'const char *' lvalue ParmVar 0x120928f98 'p' 'const char *'
    |       |       `-IntegerLiteral 0x12100c9f0 <col:10> 'int' 2
    |       |-CompoundAssignOperator 0x12100cbc8 <line:80:4, col:9> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'
    |       | |-DeclRefExpr 0x12100cb88 <col:4> 'const char *' lvalue ParmVar 0x120928f98 'p' 'const char *'
    |       | `-IntegerLiteral 0x12100cba8 <col:9> 'int' 8
    |       `-BreakStmt 0x12100cbf8 <line:81:4>
    `-ReturnStmt 0x12100ceb0 <line:90:2, col:9>
      `-IntegerLiteral 0x12100ce90 <col:9> 'int' 0
