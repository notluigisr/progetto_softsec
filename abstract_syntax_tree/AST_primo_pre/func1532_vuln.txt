`-FunctionDecl 0x14100ddc8  line:1:13 invalid not_valid_time_file 'int (const char *)' static
  |-ParmVarDecl 0x14100dcf0 <col:33, col:45> col:45 used filename 'const char *'
  `-CompoundStmt 0x141028460 <line:2:1, line:50:1>
    |-DeclStmt 0x14100e128 <line:4:5, col:38>
    | `-VarDecl 0x14100de90 <col:5, col:37> col:9 used fd 'int' cinit
    |   `-CallExpr 0x14100e0f8 <col:14, col:37> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x14100e050 <col:14> 'int ()' Function 0x14100df98 'open' 'int ()'
    |     |-DeclRefExpr 0x14100e070 <col:19> 'const char *' lvalue ParmVar 0x14100dcf0 'filename' 'const char *'
    |     `-RecoveryExpr 0x14100e0d8 <col:29> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14100e218 <line:5:5, line:9:5>
    | |-BinaryOperator 0x14100e198 <line:5:9, col:14> 'int' contains-errors '<'
    | | |-ImplicitCastExpr 0x14100e180 <col:9> 'int' contains-errors <LValueToRValue>
    | | | `-DeclRefExpr 0x14100e140 <col:9> 'int' contains-errors lvalue Var 0x14100de90 'fd' 'int'
    | | `-IntegerLiteral 0x14100e160 <col:14> 'int' 0
    | `-CompoundStmt 0x14100e200 <line:6:5, line:9:5>
    |   `-ReturnStmt 0x14100e1f0 <line:8:9, col:16>
    |     `-RecoveryExpr 0x14100e1d0 <col:16> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x14100e308 <line:12:5, col:42>
    | `-VarDecl 0x14100e2a0 <col:5, col:10> col:10 referenced invalid time_buf 'char'
    |-CallExpr 0x141027e88 <line:16:5, col:13> 'int' contains-errors
    | |-ImplicitCastExpr 0x141027e70 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x141027e00 <col:5> 'int ()' Function 0x14100e348 'close' 'int ()'
    | `-ImplicitCastExpr 0x141027eb0 <col:11> 'int' contains-errors <LValueToRValue>
    |   `-DeclRefExpr 0x141027e20 <col:11> 'int' contains-errors lvalue Var 0x14100de90 'fd' 'int'
    |-IfStmt 0x141027fd8 <line:18:5, line:22:5>
    | |-BinaryOperator 0x141027f58 <line:18:9, col:18> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x141027f38 <col:9> '<dependent type>' contains-errors lvalue
    | | `-UnaryOperator 0x141027f00 <col:17, col:18> 'int' prefix '-'
    | |   `-IntegerLiteral 0x141027ee0 <col:18> 'int' 1
    | `-CompoundStmt 0x141027fc0 <line:19:5, line:22:5>
    |   `-ReturnStmt 0x141027fb0 <line:21:9, col:16>
    |     `-RecoveryExpr 0x141027f90 <col:16> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x141028130 <line:28:5, line:33:5>
    | |-BinaryOperator 0x1410280b0 <line:28:9, col:32> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x141028090 <col:9> '<dependent type>' contains-errors lvalue
    | | `-UnaryExprOrTypeTraitExpr 0x141028050 <col:17, col:32> 'unsigned long' contains-errors sizeof
    | |   `-ParenExpr 0x141028030 <col:23, col:32> '<dependent type>' contains-errors lvalue
    | |     `-RecoveryExpr 0x141028010 <col:24> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x141028118 <line:29:5, line:33:5>
    |   `-ReturnStmt 0x141028108 <line:32:9, col:16>
    |     `-RecoveryExpr 0x1410280e8 <col:16> '<dependent type>' contains-errors lvalue
    `-IfStmt 0x141028440 <line:42:5, line:47:5>
      |-UnaryOperator 0x141028418 <line:42:9, col:30> '<dependent type>' contains-errors prefix '!' cannot overflow
      | `-CallExpr 0x1410283f0 <col:10, col:30> '<dependent type>' contains-errors
      |   |-DeclRefExpr 0x1410283b0 <col:10> 'int ()' Function 0x1410282f8 'isdigit_str' 'int ()'
      |   `-RecoveryExpr 0x1410283d0 <col:22> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x141028430 <line:43:5, line:47:5>
