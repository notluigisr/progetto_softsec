`-FunctionDecl 0x13590fda8  line:1:1 invalid mark_root 'int (int *, int *, int *, int *)'
  |-ParmVarDecl 0x13590fb28 <col:11, col:23> col:23 invalid ctx 'int *'
  |-ParmVarDecl 0x13590fba8 <col:28, col:42> col:42 invalid doc 'int *'
  |-ParmVarDecl 0x13590fc28 <col:47, col:64> col:64 referenced invalid opts 'int *'
  |-ParmVarDecl 0x13590fca8 <col:70, col:79> col:79 invalid dict 'int *'
  `-CompoundStmt 0x1350143b0 <line:2:1, line:49:1>
    |-DeclStmt 0x135910178 <line:3:2, col:36>
    | |-VarDecl 0x13590fe88 <col:2, col:6> col:6 used i 'int'
    | `-VarDecl 0x13590ff08 <col:2, col:35> col:9 used n 'int' cinit
    |   `-CallExpr 0x135910130 <col:13, col:35> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x1359100d0 <col:13> 'int ()' Function 0x135910018 'pdf_dict_len' 'int ()'
    |     |-RecoveryExpr 0x1359100f0 <col:26> '<dependent type>' contains-errors lvalue
    |     `-RecoveryExpr 0x135910110 <col:31> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x135929358 <line:5:2, line:6:3>
    | |-CallExpr 0x135929318 <line:5:6, col:28> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x1359292b8 <col:6> 'int ()' Function 0x135929200 'pdf_mark_obj' 'int ()'
    | | |-RecoveryExpr 0x1359292d8 <col:19> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x1359292f8 <col:24> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x135929348 <line:6:3>
    |-CallExpr 0x135929498 <line:8:2, col:12> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x135929458 <col:2> 'int ()' Function 0x1359293a0 'fz_try' 'int ()'
    | `-RecoveryExpr 0x135929478 <col:9> '<dependent type>' contains-errors lvalue
    |-CompoundStmt 0x135013e18 <line:9:2, line:40:2>
    | |-IfStmt 0x135929a90 <line:10:3, line:14:3>
    | | |-CallExpr 0x135929600 <line:10:7, col:32> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x1359295a0 <col:7> 'int ()' Function 0x1359294e8 'pdf_is_indirect' 'int ()'
    | | | |-RecoveryExpr 0x1359295c0 <col:23> '<dependent type>' contains-errors lvalue
    | | | `-RecoveryExpr 0x1359295e0 <col:28> '<dependent type>' contains-errors lvalue
    | | `-CompoundStmt 0x135929a70 <line:11:3, line:14:3>
    | |   |-DeclStmt 0x135929820 <line:12:4, col:35>
    | |   | `-VarDecl 0x135929648 <col:4, col:34> col:8 used num 'int' cinit
    | |   |   `-CallExpr 0x1359297f0 <col:14, col:34> '<dependent type>' contains-errors
    | |   |     |-DeclRefExpr 0x135929790 <col:14> 'int ()' Function 0x1359296d8 'pdf_to_num' 'int ()'
    | |   |     |-RecoveryExpr 0x1359297b0 <col:25> '<dependent type>' contains-errors lvalue
    | |   |     `-RecoveryExpr 0x1359297d0 <col:30> '<dependent type>' contains-errors lvalue
    | |   `-CompoundAssignOperator 0x135929a40 <line:13:4, col:27> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | |     |-ArraySubscriptExpr 0x135929a00 <col:4, col:22> '<dependent type>' contains-errors lvalue
    | |     | |-ImplicitCastExpr 0x1359299d0 <col:4, col:10> '<dependent type>' contains-errors <LValueToRValue>
    | |     | | `-CXXDependentScopeMemberExpr 0x135929880 <col:4, col:10> '<dependent type>' contains-errors lvalue ->use_list
    | |     | |   `-RecoveryExpr 0x135929858 <col:4> '<dependent type>' contains-errors lvalue
    | |     | |     `-DeclRefExpr 0x135929838 <col:4> 'int *' lvalue ParmVar 0x13590fc28 'opts' 'int *'
    | |     | `-ImplicitCastExpr 0x1359299e8 <col:19> 'int' contains-errors <LValueToRValue>
    | |     |   `-DeclRefExpr 0x1359298c8 <col:19> 'int' contains-errors lvalue Var 0x135929648 'num' 'int'
    | |     `-RecoveryExpr 0x135929a20 <col:27> '<dependent type>' contains-errors lvalue
    | `-ForStmt 0x135013de0 <line:16:3, line:39:3>
    |   |-BinaryOperator 0x135929af0 <line:16:8, col:12> 'int' '='
    |   | |-DeclRefExpr 0x135929ab0 <col:8> 'int' lvalue Var 0x13590fe88 'i' 'int'
    |   | `-IntegerLiteral 0x135929ad0 <col:12> 'int' 0
    |   |-<<<NULL>>>
    |   |-BinaryOperator 0x135929b80 <col:15, col:19> 'int' contains-errors '<'
    |   | |-ImplicitCastExpr 0x135929b50 <col:15> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x135929b10 <col:15> 'int' lvalue Var 0x13590fe88 'i' 'int'
    |   | `-ImplicitCastExpr 0x135929b68 <col:19> 'int' contains-errors <LValueToRValue>
    |   |   `-DeclRefExpr 0x135929b30 <col:19> 'int' contains-errors lvalue Var 0x13590ff08 'n' 'int'
    |   |-UnaryOperator 0x135929bc0 <col:22, col:23> 'int' postfix '++'
    |   | `-DeclRefExpr 0x135929ba0 <col:22> 'int' lvalue Var 0x13590fe88 'i' 'int'
    |   `-CompoundStmt 0x135013dc8 <line:17:3, line:39:3>
    |     `-IfStmt 0x135013d98 <line:21:4, line:38:5> has_else
    |       |-CallExpr 0x13592a100 <line:21:8, col:44> '<dependent type>' contains-errors
    |       | |-DeclRefExpr 0x13592a018 <col:8> 'int ()' Function 0x135929f60 'pdf_name_eq' 'int ()'
    |       | |-RecoveryExpr 0x13592a038 <col:20> '<dependent type>' contains-errors lvalue
    |       | |-RecoveryExpr 0x13592a0c0 <col:25> '<dependent type>' contains-errors lvalue
    |       | `-RecoveryExpr 0x13592a0e0 <col:41> '<dependent type>' contains-errors lvalue
    |       |-NullStmt 0x135013d90 <line:22:5>
    |       `-IfStmt 0x135013d60 <line:23:9, line:38:5> has_else
    |         |-RecoveryExpr 0x135013598 <line:23:13, col:49> '_Bool' contains-errors
    |         |-NullStmt 0x135013d58 <line:24:5>
    |         `-IfStmt 0x135013d28 <line:25:9, line:38:5> has_else
    |           |-RecoveryExpr 0x135013790 <line:25:13, col:49> '_Bool' contains-errors
    |           |-NullStmt 0x135013d20 <line:26:5>
    |           `-IfStmt 0x135013cf0 <line:27:9, line:38:5> has_else
    |             |-RecoveryExpr 0x1350138a8 <line:27:13, col:52> '_Bool' contains-errors
    |             |-CompoundStmt 0x135013c18 <line:28:4, line:36:4>
    |             | `-DeclStmt 0x135013948 <line:29:5, col:16>
    |             |   `-VarDecl 0x1350138e0 <col:5, col:9> col:9 used section 'int'
    |             `-NullStmt 0x135013ce8 <line:38:5>
    |-CallExpr 0x135013f58 <line:41:2, col:15> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x135013f18 <col:2> 'int ()' Function 0x135013e60 'fz_always' 'int ()'
    | `-RecoveryExpr 0x135013f38 <col:12> '<dependent type>' contains-errors lvalue
    |-CompoundStmt 0x1350140f0 <line:42:2, line:44:2>
    | `-CallExpr 0x1350140c0 <line:43:3, col:27> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x135014060 <col:3> 'int ()' Function 0x135013fa8 'pdf_unmark_obj' 'int ()'
    |   |-RecoveryExpr 0x135014080 <col:18> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x1350140a0 <col:23> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x135014228 <line:45:2, col:14> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1350141e8 <col:2> 'int ()' Function 0x135014130 'fz_catch' 'int ()'
    | `-RecoveryExpr 0x135014208 <col:11> '<dependent type>' contains-errors lvalue
    `-CompoundStmt 0x135014398 <line:46:2, line:48:2>
      `-CallExpr 0x135014370 <line:47:3, col:17> '<dependent type>' contains-errors
        |-DeclRefExpr 0x135014330 <col:3> 'int ()' Function 0x135014278 'fz_rethrow' 'int ()'
        `-RecoveryExpr 0x135014350 <col:14> '<dependent type>' contains-errors lvalue
