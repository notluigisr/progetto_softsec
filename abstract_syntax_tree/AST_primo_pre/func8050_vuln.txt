`-FunctionDecl 0x1539281f8  line:1:16 invalid multiplicative 'int *(int *)' static
  |-ParmVarDecl 0x153928128 <col:31, col:41> col:41 invalid J 'int *'
  `-CompoundStmt 0x153942098 <line:2:1, line:9:1>
    |-LabelStmt 0x153941ca0 <line:4:1, line:5:67> 'loop'
    | `-IfStmt 0x153941c80 <col:2, col:67>
    |   |-CallExpr 0x1539285c0 <col:6, col:23> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x153928568 <col:6> 'int ()' Function 0x1539284b0 'jsP_accept' 'int ()'
    |   | |-RecoveryExpr 0x153928588 <col:17> '<dependent type>' contains-errors lvalue
    |   | `-CharacterLiteral 0x1539285a8 <col:20> 'int' 42
    |   `-CompoundStmt 0x153941c68 <col:26, col:67>
    |     `-GotoStmt 0x153941c50 <col:56, col:61> 'loop' 0x153941c00
    |-IfStmt 0x153941e68 <line:6:2, col:67>
    | |-CallExpr 0x153941d18 <col:6, col:23> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x153941cc0 <col:6> 'int ()' Function 0x1539284b0 'jsP_accept' 'int ()'
    | | |-RecoveryExpr 0x153941ce0 <col:17> '<dependent type>' contains-errors lvalue
    | | `-CharacterLiteral 0x153941d00 <col:20> 'int' 47
    | `-CompoundStmt 0x153941e50 <col:26, col:67>
    |   `-GotoStmt 0x153941e38 <col:56, col:61> 'loop' 0x153941c00
    |-IfStmt 0x153942030 <line:7:2, col:67>
    | |-CallExpr 0x153941ee0 <col:6, col:23> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x153941e88 <col:6> 'int ()' Function 0x1539284b0 'jsP_accept' 'int ()'
    | | |-RecoveryExpr 0x153941ea8 <col:17> '<dependent type>' contains-errors lvalue
    | | `-CharacterLiteral 0x153941ec8 <col:20> 'int' 37
    | `-CompoundStmt 0x153942018 <col:26, col:67>
    |   `-GotoStmt 0x153942000 <col:56, col:61> 'loop' 0x153941c00
    `-ReturnStmt 0x153942088 <line:8:2, col:9>
      `-RecoveryExpr 0x153942068 <col:9> '<dependent type>' contains-errors lvalue
