`-FunctionDecl 0x13100e008  line:1:1 invalid gdk_pixbuf_new 'int (int, int, int, int, int)'
  |-ParmVarDecl 0x13100dcf0 <col:17, col:31> col:31 invalid colorspace 'int'
  |-ParmVarDecl 0x13100dd70 <line:2:17, col:31> col:31 invalid has_alpha 'int'
  |-ParmVarDecl 0x13100ddf0 <line:3:17, col:31> col:31 used bits_per_sample 'int'
  |-ParmVarDecl 0x13100de70 <line:4:17, col:31> col:31 used width 'int'
  |-ParmVarDecl 0x13100def0 <line:5:17, col:31> col:31 used height 'int'
  `-CompoundStmt 0x131029108 <line:6:1, line:36:1>
    |-DeclStmt 0x13100e158 <line:7:2, col:13>
    | `-VarDecl 0x13100e0f0 <col:2, col:10> col:10 used buf 'char *'
    |-DeclStmt 0x13100e1f0 <line:8:2, col:14>
    | `-VarDecl 0x13100e188 <col:2, col:6> col:6 used channels 'int'
    |-DeclStmt 0x13100e288 <line:9:2, col:15>
    | `-VarDecl 0x13100e220 <col:2, col:6> col:6 used rowstride 'int'
    |-CallExpr 0x131027520 <line:12:2, col:62> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x131027400 <col:2> 'int ()' Function 0x13100e348 'g_return_val_if_fail' 'int ()'
    | |-BinaryOperator 0x1310274e0 <col:24, col:38> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x131027420 <col:24> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x1310274c0 <col:38> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x131027500 <col:58> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x1310276c0 <line:13:2, col:50> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x131027550 <col:2> 'int ()' Function 0x13100e348 'g_return_val_if_fail' 'int ()'
    | |-BinaryOperator 0x131027680 <col:24, col:43> 'int' '=='
    | | |-ImplicitCastExpr 0x131027668 <col:24> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x131027570 <col:24> 'int' lvalue ParmVar 0x13100ddf0 'bits_per_sample' 'int'
    | | `-IntegerLiteral 0x131027590 <col:43> 'int' 8
    | `-RecoveryExpr 0x1310276a0 <col:46> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x131027860 <line:14:2, col:39> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1310276f0 <col:2> 'int ()' Function 0x13100e348 'g_return_val_if_fail' 'int ()'
    | |-BinaryOperator 0x131027820 <col:24, col:32> 'int' '>'
    | | |-ImplicitCastExpr 0x131027808 <col:24> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x131027710 <col:24> 'int' lvalue ParmVar 0x13100de70 'width' 'int'
    | | `-IntegerLiteral 0x131027730 <col:32> 'int' 0
    | `-RecoveryExpr 0x131027840 <col:35> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x131027a00 <line:15:2, col:40> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x131027890 <col:2> 'int ()' Function 0x13100e348 'g_return_val_if_fail' 'int ()'
    | |-BinaryOperator 0x1310279c0 <col:24, col:33> 'int' '>'
    | | |-ImplicitCastExpr 0x1310279a8 <col:24> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1310278b0 <col:24> 'int' lvalue ParmVar 0x13100def0 'height' 'int'
    | | `-IntegerLiteral 0x1310278d0 <col:33> 'int' 0
    | `-RecoveryExpr 0x1310279e0 <col:36> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x131027ae0 <line:17:2, col:29> 'int' contains-errors '='
    | |-DeclRefExpr 0x131027a30 <col:2> 'int' lvalue Var 0x13100e188 'channels' 'int'
    | `-ConditionalOperator 0x131027ab0 <col:13, col:29> '<dependent type>' contains-errors
    |   |-RecoveryExpr 0x131027a50 <col:13> '<dependent type>' contains-errors lvalue
    |   |-IntegerLiteral 0x131027a70 <col:25> 'int' 4
    |   `-IntegerLiteral 0x131027a90 <col:29> 'int' 3
    |-BinaryOperator 0x131027bb0 <line:18:9, col:29> 'int' '='
    | |-DeclRefExpr 0x131027b00 <col:9> 'int' lvalue Var 0x13100e220 'rowstride' 'int'
    | `-BinaryOperator 0x131027b90 <col:21, col:29> 'int' '*'
    |   |-ImplicitCastExpr 0x131027b60 <col:21> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x131027b20 <col:21> 'int' lvalue ParmVar 0x13100de70 'width' 'int'
    |   `-ImplicitCastExpr 0x131027b78 <col:29> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x131027b40 <col:29> 'int' lvalue Var 0x13100e188 'channels' 'int'
    |-IfStmt 0x131027dd8 <line:19:9, line:20:24>
    | |-BinaryOperator 0x131027d70 <line:19:13, col:62> 'int' '||'
    | | |-BinaryOperator 0x131027c98 <col:13, col:37> 'int' '!='
    | | | |-BinaryOperator 0x131027c40 <col:13, col:25> 'int' '/'
    | | | | |-ImplicitCastExpr 0x131027c10 <col:13> 'int' <LValueToRValue>
    | | | | | `-DeclRefExpr 0x131027bd0 <col:13> 'int' lvalue Var 0x13100e220 'rowstride' 'int'
    | | | | `-ImplicitCastExpr 0x131027c28 <col:25> 'int' <LValueToRValue>
    | | | |   `-DeclRefExpr 0x131027bf0 <col:25> 'int' lvalue Var 0x13100e188 'channels' 'int'
    | | | `-ImplicitCastExpr 0x131027c80 <col:37> 'int' <LValueToRValue>
    | | |   `-DeclRefExpr 0x131027c60 <col:37> 'int' lvalue ParmVar 0x13100de70 'width' 'int'
    | | `-BinaryOperator 0x131027d50 <col:46, col:62> 'int' '<'
    | |   |-BinaryOperator 0x131027d10 <col:46, col:58> 'int' '+'
    | |   | |-ImplicitCastExpr 0x131027cf8 <col:46> 'int' <LValueToRValue>
    | |   | | `-DeclRefExpr 0x131027cb8 <col:46> 'int' lvalue Var 0x13100e220 'rowstride' 'int'
    | |   | `-IntegerLiteral 0x131027cd8 <col:58> 'int' 3
    | |   `-IntegerLiteral 0x131027d30 <col:62> 'int' 0
    | `-ReturnStmt 0x131027dc8 <line:20:17, col:24>
    |   `-RecoveryExpr 0x131027da8 <col:24> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x131027f08 <line:23:2, col:33> 'int' '='
    | |-DeclRefExpr 0x131027df8 <col:2> 'int' lvalue Var 0x13100e220 'rowstride' 'int'
    | `-BinaryOperator 0x131027ee8 <col:14, col:33> 'int' '&'
    |   |-ParenExpr 0x131027e90 <col:14, col:28> 'int'
    |   | `-BinaryOperator 0x131027e70 <col:15, col:27> 'int' '+'
    |   |   |-ImplicitCastExpr 0x131027e58 <col:15> 'int' <LValueToRValue>
    |   |   | `-DeclRefExpr 0x131027e18 <col:15> 'int' lvalue Var 0x13100e220 'rowstride' 'int'
    |   |   `-IntegerLiteral 0x131027e38 <col:27> 'int' 3
    |   `-UnaryOperator 0x131027ed0 <col:32, col:33> 'int' prefix '~' cannot overflow
    |     `-IntegerLiteral 0x131027eb0 <col:33> 'int' 3
    |-IfStmt 0x1310280f8 <line:26:9, line:27:24>
    | |-BinaryOperator 0x131028090 <line:26:13, col:35> 'int' contains-errors '!='
    | | |-BinaryOperator 0x131028070 <col:13, col:21> '<dependent type>' contains-errors '/'
    | | | |-RecoveryExpr 0x131028050 <col:13> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x131027fd0 <col:21> 'int' lvalue Var 0x13100e220 'rowstride' 'int'
    | | `-DeclRefExpr 0x131028010 <col:35> 'int' lvalue ParmVar 0x13100def0 'height' 'int'
    | `-ReturnStmt 0x1310280e8 <line:27:17, col:24>
    |   `-RecoveryExpr 0x1310280c8 <col:24> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x1310282e0 <line:29:2, col:27> 'char *' contains-errors '='
    | |-DeclRefExpr 0x131028118 <col:2> 'char *' lvalue Var 0x13100e0f0 'buf' 'char *'
    | `-CallExpr 0x1310282b8 <col:8, col:27> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x131028218 <col:8> 'int ()' Function 0x131028160 'g_try_malloc' 'int ()'
    |   `-RecoveryExpr 0x131028298 <col:22> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x131028398 <line:30:2, line:31:10>
    | |-UnaryOperator 0x131028338 <line:30:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x131028320 <col:7> 'char *' <LValueToRValue>
    | |   `-DeclRefExpr 0x131028300 <col:7> 'char *' lvalue Var 0x13100e0f0 'buf' 'char *'
    | `-ReturnStmt 0x131028388 <line:31:3, col:10>
    |   `-RecoveryExpr 0x131028368 <col:10> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x1310290f8 <line:33:2, line:35:24>
      `-CallExpr 0x131029090 <line:33:9, line:35:24> '<dependent type>' contains-errors
        |-DeclRefExpr 0x131028eb8 <line:33:9> 'int ()' Function 0x131028e00 'gdk_pixbuf_new_from_data' 'int ()'
        |-DeclRefExpr 0x131028ed8 <col:35> 'char *' lvalue Var 0x13100e0f0 'buf' 'char *'
        |-RecoveryExpr 0x131028ef8 <col:40> '<dependent type>' contains-errors lvalue
        |-RecoveryExpr 0x131028f18 <col:52> '<dependent type>' contains-errors lvalue
        |-DeclRefExpr 0x131028f38 <col:63> 'int' lvalue ParmVar 0x13100ddf0 'bits_per_sample' 'int'
        |-DeclRefExpr 0x131028f58 <line:34:7> 'int' lvalue ParmVar 0x13100de70 'width' 'int'
        |-DeclRefExpr 0x131028f78 <col:14> 'int' lvalue ParmVar 0x13100def0 'height' 'int'
        |-DeclRefExpr 0x131028f98 <col:22> 'int' lvalue Var 0x13100e220 'rowstride' 'int'
        |-RecoveryExpr 0x131029050 <line:35:7> '<dependent type>' contains-errors lvalue
        `-RecoveryExpr 0x131029070 <col:20> '<dependent type>' contains-errors lvalue
