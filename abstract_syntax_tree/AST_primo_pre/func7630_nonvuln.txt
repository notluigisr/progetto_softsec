`-FunctionDecl 0x120928440  line:1:13 Adam7_interlace 'void (unsigned char *, const unsigned char *, unsigned int, unsigned int, unsigned int)' static
  |-ParmVarDecl 0x120928108 <col:29, col:44> col:44 used out 'unsigned char *'
  |-ParmVarDecl 0x1209281b8 <col:49, col:70> col:70 used in 'const unsigned char *'
  |-ParmVarDecl 0x120928238 <col:74, col:83> col:83 used w 'unsigned int'
  |-ParmVarDecl 0x1209282b8 <col:86, col:95> col:95 used h 'unsigned int'
  |-ParmVarDecl 0x120928338 <col:98, col:107> col:107 used bpp 'unsigned int'
  `-CompoundStmt 0x12100a068 <line:2:1, line:48:1>
    |-DeclStmt 0x120928758 <line:3:3, col:30>
    | |-VarDecl 0x120928608 <col:3, col:19> col:12 used passw 'unsigned int[7]'
    | `-VarDecl 0x1209286d8 <col:3, col:29> col:22 used passh 'unsigned int[7]'
    |-DeclStmt 0x1209410b8 <line:5:3, col:13>
    | `-VarDecl 0x120941050 <col:3, col:12> col:12 used i 'unsigned int'
    |-CallExpr 0x1209413a8 <line:7:3, col:93> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1209411e0 <col:3> 'int ()' Function 0x120941128 'Adam7_getpassvalues' 'int ()'
    | |-DeclRefExpr 0x120941200 <col:23> 'unsigned int[7]' lvalue Var 0x120928608 'passw' 'unsigned int[7]'
    | |-DeclRefExpr 0x120941220 <col:30> 'unsigned int[7]' lvalue Var 0x1209286d8 'passh' 'unsigned int[7]'
    | |-RecoveryExpr 0x120941348 <col:37> '<dependent type>' contains-errors lvalue
    | |-RecoveryExpr 0x120941368 <col:55> '<dependent type>' contains-errors lvalue
    | |-RecoveryExpr 0x120941388 <col:73> '<dependent type>' contains-errors lvalue
    | |-DeclRefExpr 0x120941288 <col:84> 'unsigned int' lvalue ParmVar 0x120928238 'w' 'unsigned int'
    | |-DeclRefExpr 0x1209412a8 <col:87> 'unsigned int' lvalue ParmVar 0x1209282b8 'h' 'unsigned int'
    | `-DeclRefExpr 0x1209412c8 <col:90> 'unsigned int' lvalue ParmVar 0x120928338 'bpp' 'unsigned int'
    `-IfStmt 0x12100a038 <line:9:3, line:47:3> has_else
      |-BinaryOperator 0x120941478 <line:9:6, col:13> 'int' '>='
      | |-ImplicitCastExpr 0x120941448 <col:6> 'unsigned int' <LValueToRValue>
      | | `-DeclRefExpr 0x120941408 <col:6> 'unsigned int' lvalue ParmVar 0x120928338 'bpp' 'unsigned int'
      | `-ImplicitCastExpr 0x120941460 <col:13> 'unsigned int' <IntegralCast>
      |   `-IntegerLiteral 0x120941428 <col:13> 'int' 8
      |-CompoundStmt 0x121008eb8 <line:10:3, line:26:3>
      | `-ForStmt 0x121008e80 <line:11:5, line:25:5>
      |   |-BinaryOperator 0x1209414f0 <line:11:9, col:13> 'unsigned int' '='
      |   | |-DeclRefExpr 0x120941498 <col:9> 'unsigned int' lvalue Var 0x120941050 'i' 'unsigned int'
      |   | `-ImplicitCastExpr 0x1209414d8 <col:13> 'unsigned int' <IntegralCast>
      |   |   `-IntegerLiteral 0x1209414b8 <col:13> 'int' 0
      |   |-<<<NULL>>>
      |   |-BinaryOperator 0x120941580 <col:16, col:20> 'int' '<'
      |   | |-ImplicitCastExpr 0x120941550 <col:16> 'unsigned int' <LValueToRValue>
      |   | | `-DeclRefExpr 0x120941510 <col:16> 'unsigned int' lvalue Var 0x120941050 'i' 'unsigned int'
      |   | `-ImplicitCastExpr 0x120941568 <col:20> 'unsigned int' <IntegralCast>
      |   |   `-IntegerLiteral 0x120941530 <col:20> 'int' 7
      |   |-UnaryOperator 0x1209415c0 <col:23, col:24> 'unsigned int' postfix '++'
      |   | `-DeclRefExpr 0x1209415a0 <col:23> 'unsigned int' lvalue Var 0x120941050 'i' 'unsigned int'
      |   `-CompoundStmt 0x121008e58 <line:12:5, line:25:5>
      |     |-DeclStmt 0x120941778 <line:13:7, col:23>
      |     | |-VarDecl 0x1209415f0 <col:7, col:16> col:16 used x 'unsigned int'
      |     | |-VarDecl 0x120941670 <col:7, col:19> col:19 used y 'unsigned int'
      |     | `-VarDecl 0x1209416f0 <col:7, col:22> col:22 used b 'unsigned int'
      |     |-RecoveryExpr 0x120941930 <line:14:7, col:32> '<dependent type>' contains-errors lvalue
      |     | |-UnaryExprOrTypeTraitExpr 0x1209418c0 <col:7, col:14> 'unsigned long' contains-errors sizeof
      |     | | `-RecoveryExpr 0x1209418a0 <col:14> '<dependent type>' contains-errors lvalue
      |     | `-BinaryOperator 0x120941910 <col:26, col:32> 'unsigned int' '/'
      |     |   |-ImplicitCastExpr 0x1209418e0 <col:26> 'unsigned int' <LValueToRValue>
      |     |   | `-DeclRefExpr 0x1209417c8 <col:26> 'unsigned int' lvalue ParmVar 0x120928338 'bpp' 'unsigned int'
      |     |   `-ImplicitCastExpr 0x1209418f8 <col:32> 'unsigned int' <IntegralCast>
      |     |     `-IntegerLiteral 0x1209417e8 <col:32> 'int' 8
      |     `-ForStmt 0x121008e20 <line:15:7, line:24:7>
      |       |-BinaryOperator 0x1209419b8 <line:15:11, col:15> 'unsigned int' '='
      |       | |-DeclRefExpr 0x120941960 <col:11> 'unsigned int' lvalue Var 0x120941670 'y' 'unsigned int'
      |       | `-ImplicitCastExpr 0x1209419a0 <col:15> 'unsigned int' <IntegralCast>
      |       |   `-IntegerLiteral 0x120941980 <col:15> 'int' 0
      |       |-<<<NULL>>>
      |       |-BinaryOperator 0x120941af0 <col:18, col:29> 'int' '<'
      |       | |-ImplicitCastExpr 0x120941ac0 <col:18> 'unsigned int' <LValueToRValue>
      |       | | `-DeclRefExpr 0x1209419d8 <col:18> 'unsigned int' lvalue Var 0x120941670 'y' 'unsigned int'
      |       | `-ImplicitCastExpr 0x120941ad8 <col:22, col:29> 'unsigned int' <LValueToRValue>
      |       |   `-ArraySubscriptExpr 0x120941aa0 <col:22, col:29> 'unsigned int' lvalue
      |       |     |-ImplicitCastExpr 0x120941a70 <col:22> 'unsigned int *' <ArrayToPointerDecay>
      |       |     | `-DeclRefExpr 0x1209419f8 <col:22> 'unsigned int[7]' lvalue Var 0x1209286d8 'passh' 'unsigned int[7]'
      |       |     `-ImplicitCastExpr 0x120941a88 <col:28> 'unsigned int' <LValueToRValue>
      |       |       `-DeclRefExpr 0x120941a18 <col:28> 'unsigned int' lvalue Var 0x120941050 'i' 'unsigned int'
      |       |-UnaryOperator 0x120941b30 <col:32, col:33> 'unsigned int' postfix '++'
      |       | `-DeclRefExpr 0x120941b10 <col:32> 'unsigned int' lvalue Var 0x120941670 'y' 'unsigned int'
      |       `-ForStmt 0x121008de8 <line:16:7, line:24:7>
      |         |-BinaryOperator 0x120941ba0 <line:16:11, col:15> 'unsigned int' '='
      |         | |-DeclRefExpr 0x120941b48 <col:11> 'unsigned int' lvalue Var 0x1209415f0 'x' 'unsigned int'
      |         | `-ImplicitCastExpr 0x120941b88 <col:15> 'unsigned int' <IntegralCast>
      |         |   `-IntegerLiteral 0x120941b68 <col:15> 'int' 0
      |         |-<<<NULL>>>
      |         |-BinaryOperator 0x120941ca0 <col:18, col:29> 'int' '<'
      |         | |-ImplicitCastExpr 0x120941c70 <col:18> 'unsigned int' <LValueToRValue>
      |         | | `-DeclRefExpr 0x120941bc0 <col:18> 'unsigned int' lvalue Var 0x1209415f0 'x' 'unsigned int'
      |         | `-ImplicitCastExpr 0x120941c88 <col:22, col:29> 'unsigned int' <LValueToRValue>
      |         |   `-ArraySubscriptExpr 0x120941c50 <col:22, col:29> 'unsigned int' lvalue
      |         |     |-ImplicitCastExpr 0x120941c20 <col:22> 'unsigned int *' <ArrayToPointerDecay>
      |         |     | `-DeclRefExpr 0x120941be0 <col:22> 'unsigned int[7]' lvalue Var 0x120928608 'passw' 'unsigned int[7]'
      |         |     `-ImplicitCastExpr 0x120941c38 <col:28> 'unsigned int' <LValueToRValue>
      |         |       `-DeclRefExpr 0x120941c00 <col:28> 'unsigned int' lvalue Var 0x120941050 'i' 'unsigned int'
      |         |-UnaryOperator 0x120941ce0 <col:32, col:33> 'unsigned int' postfix '++'
      |         | `-DeclRefExpr 0x120941cc0 <col:32> 'unsigned int' lvalue Var 0x1209415f0 'x' 'unsigned int'
      |         `-CompoundStmt 0x121008dd8 <line:17:7, line:24:7>
      `-CompoundStmt 0x12100a020 <line:28:3, line:47:3>
        `-ForStmt 0x121009fe8 <line:29:5, line:46:5>
          |-BinaryOperator 0x121008f28 <line:29:9, col:13> 'unsigned int' '='
          | |-DeclRefExpr 0x121008ed0 <col:9> 'unsigned int' lvalue Var 0x120941050 'i' 'unsigned int'
          | `-ImplicitCastExpr 0x121008f10 <col:13> 'unsigned int' <IntegralCast>
          |   `-IntegerLiteral 0x121008ef0 <col:13> 'int' 0
          |-<<<NULL>>>
          |-BinaryOperator 0x121008fb8 <col:16, col:20> 'int' '<'
          | |-ImplicitCastExpr 0x121008f88 <col:16> 'unsigned int' <LValueToRValue>
          | | `-DeclRefExpr 0x121008f48 <col:16> 'unsigned int' lvalue Var 0x120941050 'i' 'unsigned int'
          | `-ImplicitCastExpr 0x121008fa0 <col:20> 'unsigned int' <IntegralCast>
          |   `-IntegerLiteral 0x121008f68 <col:20> 'int' 7
          |-UnaryOperator 0x121008ff8 <col:23, col:24> 'unsigned int' postfix '++'
          | `-DeclRefExpr 0x121008fd8 <col:23> 'unsigned int' lvalue Var 0x120941050 'i' 'unsigned int'
          `-CompoundStmt 0x121009fb8 <line:30:5, line:46:5>
            |-DeclStmt 0x1210091b0 <line:31:7, col:23>
            | |-VarDecl 0x121009028 <col:7, col:16> col:16 used x 'unsigned int'
            | |-VarDecl 0x1210090a8 <col:7, col:19> col:19 used y 'unsigned int'
            | `-VarDecl 0x121009128 <col:7, col:22> col:22 used b 'unsigned int'
            |-DeclStmt 0x121009348 <line:32:7, col:42>
            | `-VarDecl 0x1210091e0 <col:7, col:41> col:16 used ilinebits 'unsigned int' cinit
            |   `-BinaryOperator 0x121009328 <col:28, col:41> 'unsigned int' '*'
            |     |-ImplicitCastExpr 0x1210092f8 <col:28> 'unsigned int' <LValueToRValue>
            |     | `-DeclRefExpr 0x121009248 <col:28> 'unsigned int' lvalue ParmVar 0x120928338 'bpp' 'unsigned int'
            |     `-ImplicitCastExpr 0x121009310 <col:34, col:41> 'unsigned int' <LValueToRValue>
            |       `-ArraySubscriptExpr 0x1210092d8 <col:34, col:41> 'unsigned int' lvalue
            |         |-ImplicitCastExpr 0x1210092a8 <col:34> 'unsigned int *' <ArrayToPointerDecay>
            |         | `-DeclRefExpr 0x121009268 <col:34> 'unsigned int[7]' lvalue Var 0x120928608 'passw' 'unsigned int[7]'
            |         `-ImplicitCastExpr 0x1210092c0 <col:40> 'unsigned int' <LValueToRValue>
            |           `-DeclRefExpr 0x121009288 <col:40> 'unsigned int' lvalue Var 0x120941050 'i' 'unsigned int'
            |-DeclStmt 0x121009470 <line:33:7, col:35>
            | `-VarDecl 0x121009378 <col:7, col:34> col:16 used olinebits 'unsigned int' cinit
            |   `-BinaryOperator 0x121009450 <col:28, col:34> 'unsigned int' '*'
            |     |-ImplicitCastExpr 0x121009420 <col:28> 'unsigned int' <LValueToRValue>
            |     | `-DeclRefExpr 0x1210093e0 <col:28> 'unsigned int' lvalue ParmVar 0x120928338 'bpp' 'unsigned int'
            |     `-ImplicitCastExpr 0x121009438 <col:34> 'unsigned int' <LValueToRValue>
            |       `-DeclRefExpr 0x121009400 <col:34> 'unsigned int' lvalue ParmVar 0x120928238 'w' 'unsigned int'
            `-ForStmt 0x121009f80 <line:35:7, line:45:7>
              |-BinaryOperator 0x1210094e0 <line:35:11, col:15> 'unsigned int' '='
              | |-DeclRefExpr 0x121009488 <col:11> 'unsigned int' lvalue Var 0x1210090a8 'y' 'unsigned int'
              | `-ImplicitCastExpr 0x1210094c8 <col:15> 'unsigned int' <IntegralCast>
              |   `-IntegerLiteral 0x1210094a8 <col:15> 'int' 0
              |-<<<NULL>>>
              |-BinaryOperator 0x1210095e0 <col:18, col:29> 'int' '<'
              | |-ImplicitCastExpr 0x1210095b0 <col:18> 'unsigned int' <LValueToRValue>
              | | `-DeclRefExpr 0x121009500 <col:18> 'unsigned int' lvalue Var 0x1210090a8 'y' 'unsigned int'
              | `-ImplicitCastExpr 0x1210095c8 <col:22, col:29> 'unsigned int' <LValueToRValue>
              |   `-ArraySubscriptExpr 0x121009590 <col:22, col:29> 'unsigned int' lvalue
              |     |-ImplicitCastExpr 0x121009560 <col:22> 'unsigned int *' <ArrayToPointerDecay>
              |     | `-DeclRefExpr 0x121009520 <col:22> 'unsigned int[7]' lvalue Var 0x1209286d8 'passh' 'unsigned int[7]'
              |     `-ImplicitCastExpr 0x121009578 <col:28> 'unsigned int' <LValueToRValue>
              |       `-DeclRefExpr 0x121009540 <col:28> 'unsigned int' lvalue Var 0x120941050 'i' 'unsigned int'
              |-UnaryOperator 0x121009620 <col:32, col:33> 'unsigned int' postfix '++'
              | `-DeclRefExpr 0x121009600 <col:32> 'unsigned int' lvalue Var 0x1210090a8 'y' 'unsigned int'
              `-ForStmt 0x121009f48 <line:36:7, line:45:7>
                |-BinaryOperator 0x121009690 <line:36:11, col:15> 'unsigned int' '='
                | |-DeclRefExpr 0x121009638 <col:11> 'unsigned int' lvalue Var 0x121009028 'x' 'unsigned int'
                | `-ImplicitCastExpr 0x121009678 <col:15> 'unsigned int' <IntegralCast>
                |   `-IntegerLiteral 0x121009658 <col:15> 'int' 0
                |-<<<NULL>>>
                |-BinaryOperator 0x121009790 <col:18, col:29> 'int' '<'
                | |-ImplicitCastExpr 0x121009760 <col:18> 'unsigned int' <LValueToRValue>
                | | `-DeclRefExpr 0x1210096b0 <col:18> 'unsigned int' lvalue Var 0x121009028 'x' 'unsigned int'
                | `-ImplicitCastExpr 0x121009778 <col:22, col:29> 'unsigned int' <LValueToRValue>
                |   `-ArraySubscriptExpr 0x121009740 <col:22, col:29> 'unsigned int' lvalue
                |     |-ImplicitCastExpr 0x121009710 <col:22> 'unsigned int *' <ArrayToPointerDecay>
                |     | `-DeclRefExpr 0x1210096d0 <col:22> 'unsigned int[7]' lvalue Var 0x120928608 'passw' 'unsigned int[7]'
                |     `-ImplicitCastExpr 0x121009728 <col:28> 'unsigned int' <LValueToRValue>
                |       `-DeclRefExpr 0x1210096f0 <col:28> 'unsigned int' lvalue Var 0x120941050 'i' 'unsigned int'
                |-UnaryOperator 0x1210097d0 <col:32, col:33> 'unsigned int' postfix '++'
                | `-DeclRefExpr 0x1210097b0 <col:32> 'unsigned int' lvalue Var 0x121009028 'x' 'unsigned int'
                `-CompoundStmt 0x121009f30 <line:37:7, line:45:7>
                  `-ForStmt 0x121009ef8 <line:40:9, line:44:9>
                    |-BinaryOperator 0x121009ae0 <line:40:13, col:17> 'unsigned int' '='
                    | |-DeclRefExpr 0x121009a88 <col:13> 'unsigned int' lvalue Var 0x121009128 'b' 'unsigned int'
                    | `-ImplicitCastExpr 0x121009ac8 <col:17> 'unsigned int' <IntegralCast>
                    |   `-IntegerLiteral 0x121009aa8 <col:17> 'int' 0
                    |-<<<NULL>>>
                    |-BinaryOperator 0x121009b70 <col:20, col:24> 'int' '<'
                    | |-ImplicitCastExpr 0x121009b40 <col:20> 'unsigned int' <LValueToRValue>
                    | | `-DeclRefExpr 0x121009b00 <col:20> 'unsigned int' lvalue Var 0x121009128 'b' 'unsigned int'
                    | `-ImplicitCastExpr 0x121009b58 <col:24> 'unsigned int' <LValueToRValue>
                    |   `-DeclRefExpr 0x121009b20 <col:24> 'unsigned int' lvalue ParmVar 0x120928338 'bpp' 'unsigned int'
                    |-UnaryOperator 0x121009bb0 <col:29, col:30> 'unsigned int' postfix '++'
                    | `-DeclRefExpr 0x121009b90 <col:29> 'unsigned int' lvalue Var 0x121009128 'b' 'unsigned int'
                    `-CompoundStmt 0x121009ee0 <line:41:9, line:44:9>
                      `-DeclStmt 0x121009d88 <line:42:11, col:66>
                        `-VarDecl 0x121009c00 <col:11, col:25> col:25 used bit 'unsigned char'
