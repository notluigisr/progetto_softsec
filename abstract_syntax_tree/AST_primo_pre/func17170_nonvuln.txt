`-FunctionDecl 0x154140a80  line:1:13 commit_parameter 'void (int, struct parm_struct *, const char *)' static
  |-ParmVarDecl 0x1541280d8 <col:30, col:34> col:34 used snum 'int'
  |-ParmVarDecl 0x1541286c8 <col:40, col:60> col:60 used parm 'struct parm_struct *'
  |-ParmVarDecl 0x154128748 <col:66, col:78> col:78 used v 'const char *'
  `-CompoundStmt 0x154141990 <line:2:1, line:17:1>
    |-DeclStmt 0x154140c08 <line:3:2, col:7>
    | `-VarDecl 0x154140ba0 <col:2, col:6> col:6 used i 'int'
    |-DeclStmt 0x154140ca0 <line:4:2, col:9>
    | `-VarDecl 0x154140c38 <col:2, col:8> col:8 used s 'char *'
    |-IfStmt 0x154141878 <line:6:2, line:14:2>
    | |-BinaryOperator 0x154140eb0 <line:6:6, col:35> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x154140e50 <col:6, col:13> 'int' '<'
    | | | |-ImplicitCastExpr 0x154140e38 <col:6> 'int' <LValueToRValue>
    | | | | `-DeclRefExpr 0x154140cb8 <col:6> 'int' lvalue ParmVar 0x1541280d8 'snum' 'int'
    | | | `-IntegerLiteral 0x154140cd8 <col:13> 'int' 0
    | | `-BinaryOperator 0x154140e90 <col:18, col:35> 'int' contains-errors '=='
    | |   |-RecoveryExpr 0x154140d68 <col:18, col:24> '<dependent type>' contains-errors lvalue
    | |   | `-DeclRefExpr 0x154140d30 <col:18> 'struct parm_struct *' lvalue ParmVar 0x1541286c8 'parm' 'struct parm_struct *'
    | |   `-RecoveryExpr 0x154140e70 <col:35> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x154141860 <col:44, line:14:2>
    |   `-ForStmt 0x154141828 <line:8:3, line:13:3>
    |     |-BinaryOperator 0x154140f10 <line:8:8, col:10> 'int' '='
    |     | |-DeclRefExpr 0x154140ed0 <col:8> 'int' lvalue Var 0x154140ba0 'i' 'int'
    |     | `-IntegerLiteral 0x154140ef0 <col:10> 'int' 0
    |     |-<<<NULL>>>
    |     |-BinaryOperator 0x154141100 <col:12, col:29> 'int' '<'
    |     | |-ImplicitCastExpr 0x1541410e8 <col:12> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x154140f30 <col:12> 'int' lvalue Var 0x154140ba0 'i' 'int'
    |     | `-CallExpr 0x1541410c8 <col:14, col:29> 'int'
    |     |   `-ImplicitCastExpr 0x1541410b0 <col:14> 'int (*)()' <FunctionToPointerDecay>
    |     |     `-DeclRefExpr 0x154141060 <col:14> 'int ()' Function 0x154140fa8 'lp_numservices' 'int ()'
    |     |-UnaryOperator 0x154141140 <col:31, col:32> 'int' postfix '++'
    |     | `-DeclRefExpr 0x154141120 <col:31> 'int' lvalue Var 0x154140ba0 'i' 'int'
    |     `-CompoundStmt 0x154141808 <col:36, line:13:3>
    |       |-BinaryOperator 0x154141308 <line:9:4, col:24> 'char *' '='
    |       | |-DeclRefExpr 0x154141158 <col:4> 'char *' lvalue Var 0x154140c38 's' 'char *'
    |       | `-ImplicitCastExpr 0x1541412f0 <col:8, col:24> 'char *' <IntegralToPointer>
    |       |   `-CallExpr 0x1541412b0 <col:8, col:24> 'int'
    |       |     |-ImplicitCastExpr 0x154141298 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |       |     | `-DeclRefExpr 0x154141258 <col:8> 'int ()' Function 0x1541411a0 'lp_servicename' 'int ()'
    |       |     `-ImplicitCastExpr 0x1541412d8 <col:23> 'int' <LValueToRValue>
    |       |       `-DeclRefExpr 0x154141278 <col:23> 'int' lvalue Var 0x154140ba0 'i' 'int'
    |       `-IfStmt 0x1541417e8 <line:10:4, line:12:4>
    |         |-BinaryOperator 0x1541415d8 <line:10:8, col:42> 'int' '&&'
    |         | |-BinaryOperator 0x154141400 <col:8, col:16> 'int' '&&'
    |         | | |-ImplicitCastExpr 0x1541413b8 <col:8> 'char *' <LValueToRValue>
    |         | | | `-DeclRefExpr 0x154141328 <col:8> 'char *' lvalue Var 0x154140c38 's' 'char *'
    |         | | `-ImplicitCastExpr 0x1541413e8 <col:13, col:16> 'int' <IntegralCast>
    |         | |   `-ImplicitCastExpr 0x1541413d0 <col:13, col:16> 'char' <LValueToRValue>
    |         | |     `-ParenExpr 0x154141398 <col:13, col:16> 'char' lvalue
    |         | |       `-UnaryOperator 0x154141380 <col:14, col:15> 'char' lvalue prefix '*' cannot overflow
    |         | |         `-ImplicitCastExpr 0x154141368 <col:15> 'char *' <LValueToRValue>
    |         | |           `-DeclRefExpr 0x154141348 <col:15> 'char *' lvalue Var 0x154140c38 's' 'char *'
    |         | `-CallExpr 0x154141578 <col:21, col:42> 'int'
    |         |   |-ImplicitCastExpr 0x154141560 <col:21> 'int (*)()' <FunctionToPointerDecay>
    |         |   | `-DeclRefExpr 0x154141500 <col:21> 'int ()' Function 0x154141448 'lp_is_default' 'int ()'
    |         |   |-ImplicitCastExpr 0x1541415a8 <col:35> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x154141520 <col:35> 'int' lvalue Var 0x154140ba0 'i' 'int'
    |         |   `-ImplicitCastExpr 0x1541415c0 <col:38> 'struct parm_struct *' <LValueToRValue>
    |         |     `-DeclRefExpr 0x154141540 <col:38> 'struct parm_struct *' lvalue ParmVar 0x1541286c8 'parm' 'struct parm_struct *'
    |         `-CompoundStmt 0x1541417d0 <col:45, line:12:4>
    |           `-CallExpr 0x154141798 <line:11:5, col:38> '<dependent type>' contains-errors
    |             |-DeclRefExpr 0x1541416d8 <col:5> 'int ()' Function 0x154141620 'lp_do_parameter' 'int ()'
    |             |-DeclRefExpr 0x1541416f8 <col:21> 'int' lvalue Var 0x154140ba0 'i' 'int'
    |             |-RecoveryExpr 0x154141750 <col:24, col:30> '<dependent type>' contains-errors lvalue
    |             | `-DeclRefExpr 0x154141718 <col:24> 'struct parm_struct *' lvalue ParmVar 0x1541286c8 'parm' 'struct parm_struct *'
    |             `-DeclRefExpr 0x154141778 <col:37> 'const char *' lvalue ParmVar 0x154128748 'v' 'const char *'
    `-CallExpr 0x154141958 <line:16:2, col:38> '<dependent type>' contains-errors
      |-DeclRefExpr 0x154141898 <col:2> 'int ()' Function 0x154141620 'lp_do_parameter' 'int ()'
      |-DeclRefExpr 0x1541418b8 <col:18> 'int' lvalue ParmVar 0x1541280d8 'snum' 'int'
      |-RecoveryExpr 0x154141910 <col:24, col:30> '<dependent type>' contains-errors lvalue
      | `-DeclRefExpr 0x1541418d8 <col:24> 'struct parm_struct *' lvalue ParmVar 0x1541286c8 'parm' 'struct parm_struct *'
      `-DeclRefExpr 0x154141938 <col:37> 'const char *' lvalue ParmVar 0x154128748 'v' 'const char *'
