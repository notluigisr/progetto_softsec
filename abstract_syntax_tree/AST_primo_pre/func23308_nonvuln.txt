`-FunctionDecl 0x13900de88  line:1:1 invalid e_util_get_source_full_name 'int (int *, int *)'
  |-ParmVarDecl 0x13900dd28 <col:30, col:47> col:47 invalid registry 'int *'
  |-ParmVarDecl 0x13900dda8 <line:2:9, col:18> col:18 referenced invalid source 'int *'
  `-CompoundStmt 0x1390293a8 <line:3:1, line:59:1>
    |-CallExpr 0x13900e2e0 <line:7:2, col:50> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13900e110 <col:2> 'int ()' Function 0x13900e058 'g_return_val_if_fail' 'int ()'
    | |-CallExpr 0x13900e250 <col:24, col:43> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x13900e210 <col:24> 'int ()' Function 0x13900e158 'E_IS_SOURCE' 'int ()'
    | | `-RecoveryExpr 0x13900e230 <col:37> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x13900e2c0 <col:46> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x139027658 <line:9:2, line:10:54>
    | |-UnaryOperator 0x13900e348 <line:9:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x13900e330 <col:7> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x13900e310 <col:7> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x139027648 <line:10:3, col:54>
    |   `-CallExpr 0x139027620 <col:10, col:54> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x1390274b8 <col:10> 'int ()' Function 0x139027400 'g_strdup' 'int ()'
    |     `-CallExpr 0x1390275f8 <col:20, col:53> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x1390275b8 <col:20> 'int ()' Function 0x139027500 'e_source_get_display_name' 'int ()'
    |       `-RecoveryExpr 0x1390275d8 <col:47> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x1390279a8 <line:16:2, col:22> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x139027968 <col:2> 'int ()' Function 0x1390278b0 'g_object_ref' 'int ()'
    | `-RecoveryExpr 0x139027988 <col:16> '<dependent type>' contains-errors lvalue
    |-WhileStmt 0x139028348 <line:17:2, line:37:2>
    | |-RecoveryExpr 0x1390279d0 <line:17:9> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x139028310 <col:17, line:37:2>
    |   |-DeclStmt 0x139027a70 <line:18:3, col:25>
    |   | `-VarDecl 0x139027a08 <col:3, col:16> col:16 used parent_id 'const char *'
    |   |-BinaryOperator 0x139027bf0 <line:21:3, col:42> 'const char *' contains-errors '='
    |   | |-DeclRefExpr 0x139027a88 <col:3> 'const char *' lvalue Var 0x139027a08 'parent_id' 'const char *'
    |   | `-CallExpr 0x139027bc8 <col:15, col:42> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x139027b88 <col:15> 'int ()' Function 0x139027ad0 'e_source_get_parent' 'int ()'
    |   |   `-RecoveryExpr 0x139027ba8 <col:36> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x139027d08 <line:22:3, line:23:4>
    |   | |-BinaryOperator 0x139027ce0 <line:22:7, col:23> 'int' '||'
    |   | | |-UnaryOperator 0x139027c48 <col:7, col:8> 'int' prefix '!' cannot overflow
    |   | | | `-ImplicitCastExpr 0x139027c30 <col:8> 'const char *' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x139027c10 <col:8> 'const char *' lvalue Var 0x139027a08 'parent_id' 'const char *'
    |   | | `-UnaryOperator 0x139027cc8 <col:21, col:23> 'int' prefix '!' cannot overflow
    |   | |   `-ImplicitCastExpr 0x139027cb0 <col:22, col:23> 'char' <LValueToRValue>
    |   | |     `-UnaryOperator 0x139027c98 <col:22, col:23> 'const char' lvalue prefix '*' cannot overflow
    |   | |       `-ImplicitCastExpr 0x139027c80 <col:23> 'const char *' <LValueToRValue>
    |   | |         `-DeclRefExpr 0x139027c60 <col:23> 'const char *' lvalue Var 0x139027a08 'parent_id' 'const char *'
    |   | `-BreakStmt 0x139027d00 <line:23:4>
    |   |-CallExpr 0x139027fb8 <line:26:3, col:25> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x139027f78 <col:3> 'int ()' Function 0x139027ec0 'g_object_unref' 'int ()'
    |   | `-RecoveryExpr 0x139027f98 <col:19> '<dependent type>' contains-errors lvalue
    |   `-IfStmt 0x1390282f0 <line:29:3, line:36:3>
    |     |-RecoveryExpr 0x139028028 <line:29:7> '<dependent type>' contains-errors lvalue
    |     `-CompoundStmt 0x1390282d0 <col:15, line:36:3>
    |       |-DeclStmt 0x139028130 <line:30:4, col:66>
    |       | `-VarDecl 0x139028060 <col:4, col:17> col:17 invalid display_name 'const int *'
    |       `-IfStmt 0x139028228 <line:32:4, line:33:5>
    |         |-BinaryOperator 0x139028200 <line:32:8, col:27> 'int' contains-errors '||'
    |         | |-UnaryOperator 0x139028180 <col:8, col:9> '<dependent type>' contains-errors prefix '!' cannot overflow
    |         | | `-ImplicitCastExpr 0x139028168 <col:9> '<dependent type>' contains-errors <LValueToRValue>
    |         | |   `-RecoveryExpr 0x139028148 <col:9> '<dependent type>' contains-errors lvalue
    |         | `-UnaryOperator 0x1390281e8 <col:25, col:27> '<dependent type>' contains-errors prefix '!' cannot overflow
    |         |   `-UnaryOperator 0x1390281d0 <col:26, col:27> '<dependent type>' contains-errors prefix '*' cannot overflow
    |         |     `-ImplicitCastExpr 0x1390281b8 <col:27> '<dependent type>' contains-errors <LValueToRValue>
    |         |       `-RecoveryExpr 0x139028198 <col:27> '<dependent type>' contains-errors lvalue
    |         `-BreakStmt 0x139028220 <line:33:5>
    `-CallExpr 0x1390283a8 <line:39:2, col:24> '<dependent type>' contains-errors
      |-DeclRefExpr 0x139028368 <col:2> 'int ()' Function 0x139027ec0 'g_object_unref' 'int ()'
      `-RecoveryExpr 0x139028388 <col:18> '<dependent type>' contains-errors lvalue
