`-FunctionDecl 0x1451281f8  line:1:1 invalid g_markup_parse_context_ref 'int (int *)'
  |-ParmVarDecl 0x145128128 <col:29, col:50> col:50 invalid context 'int *'
  `-CompoundStmt 0x1451418b8 <line:2:1, line:9:1>
    |-CallExpr 0x145128520 <line:3:3, col:46> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x145128400 <col:3> 'int ()' Function 0x145128348 'g_return_val_if_fail' 'int ()'
    | |-BinaryOperator 0x1451284e0 <col:25, col:36> 'int' contains-errors '!='
    | | |-RecoveryExpr 0x145128420 <col:25> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x1451284c0 <col:36> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x145128500 <col:42> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x145128680 <line:4:3, col:53> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x145128550 <col:3> 'int ()' Function 0x145128348 'g_return_val_if_fail' 'int ()'
    | |-BinaryOperator 0x1451285f8 <col:25, col:46> 'int' contains-errors '>'
    | | |-CXXDependentScopeMemberExpr 0x145128590 <col:25, col:34> '<dependent type>' contains-errors lvalue ->ref_count
    | | | `-RecoveryExpr 0x145128570 <col:25> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x1451285d8 <col:46> 'int' 0
    | `-RecoveryExpr 0x145128660 <col:49> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x145141860 <line:6:3, col:40> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x145128790 <col:3> 'int ()' Function 0x1451286d8 'g_atomic_int_inc' 'int ()'
    | `-UnaryOperator 0x145141848 <col:21, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-CXXDependentScopeMemberExpr 0x145141800 <col:22, col:31> '<dependent type>' contains-errors lvalue ->ref_count
    |     `-RecoveryExpr 0x1451287b0 <col:22> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x1451418a8 <line:8:3, col:10>
      `-RecoveryExpr 0x145141888 <col:10> '<dependent type>' contains-errors lvalue
