`-FunctionDecl 0x1259281f8  line:1:1 invalid hb_set_invert 'int (int *)'
  |-ParmVarDecl 0x125928128 <col:16, col:26> col:26 referenced invalid set 'int *'
  `-CompoundStmt 0x125928670 <line:2:1, line:7:1>
    |-IfStmt 0x1259285a0 <line:3:3, line:4:5>
    | |-CallExpr 0x125928568 <line:3:7, col:45> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x125928400 <col:7> 'int ()' Function 0x125928348 'unlikely' 'int ()'
    | | `-CallExpr 0x125928540 <col:17, col:44> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x125928500 <col:17> 'int ()' Function 0x125928448 'hb_object_is_immutable' 'int ()'
    | |   `-RecoveryExpr 0x125928520 <col:41> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x125928590 <line:4:5>
    `-CallExpr 0x125928650 <line:6:3, col:16> '<dependent type>' contains-errors
      `-CXXDependentScopeMemberExpr 0x125928608 <col:3, col:8> '<dependent type>' contains-errors lvalue ->invert
        `-RecoveryExpr 0x1259285e0 <col:3> '<dependent type>' contains-errors lvalue
          `-DeclRefExpr 0x1259285c0 <col:3> 'int *' lvalue ParmVar 0x125928128 'set' 'int *'
