`-FunctionDecl 0x15a128318  line:1:1 invalid l2tp_q931_cc_print 'int (int *, const char *, int)'
  |-ParmVarDecl 0x15a128128 <col:20, col:40> col:40 invalid ndo 'int *'
  |-ParmVarDecl 0x15a1281a8 <col:45, col:59> col:59 used dat 'const char *'
  |-ParmVarDecl 0x15a128228 <col:64, col:70> col:70 invalid length 'int'
  `-CompoundStmt 0x15b009598 <line:2:1, line:9:1>
    |-CallExpr 0x15a1287c8 <line:4:2, col:31> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x15a128650 <col:2> 'int ()' Function 0x15a128598 'ND_PRINT' 'int ()'
    | `-ParenExpr 0x15a1287a8 <col:11, col:30> 'const char' contains-errors
    |   `-BinaryOperator 0x15a128788 <col:12, col:29> 'const char' contains-errors ','
    |     |-BinaryOperator 0x15a1286f0 <col:12, col:17> 'char[4]' contains-errors ','
    |     | |-RecoveryExpr 0x15a128670 <col:12> '<dependent type>' contains-errors lvalue
    |     | `-StringLiteral 0x15a1286d0 <col:17> 'char[4]' lvalue "STR"
    |     `-ArraySubscriptExpr 0x15a128768 <col:24, col:29> 'const char' lvalue
    |       |-ImplicitCastExpr 0x15a128750 <col:24> 'const char *' <LValueToRValue>
    |       | `-DeclRefExpr 0x15a128710 <col:24> 'const char *' lvalue ParmVar 0x15a1281a8 'dat' 'const char *'
    |       `-IntegerLiteral 0x15a128730 <col:28> 'int' 2
    `-IfStmt 0x15b009578 <line:5:2, line:8:2>
      |-BinaryOperator 0x15b009240 <line:5:6, col:15> 'int' contains-errors '>'
      | |-RecoveryExpr 0x15b009200 <col:6> '<dependent type>' contains-errors lvalue
      | `-IntegerLiteral 0x15b009220 <col:15> 'int' 3
      `-CompoundStmt 0x15b009558 <col:18, line:8:2>
        |-CallExpr 0x15b009300 <line:6:3, col:24> '<dependent type>' contains-errors
        | |-DeclRefExpr 0x15b009260 <col:3> 'int ()' Function 0x15a128598 'ND_PRINT' 'int ()'
        | `-ParenExpr 0x15b0092e0 <col:12, col:23> 'char[4]' contains-errors
        |   `-BinaryOperator 0x15b0092c0 <col:13, col:18> 'char[4]' contains-errors ','
        |     |-RecoveryExpr 0x15b009280 <col:13> '<dependent type>' contains-errors lvalue
        |     `-StringLiteral 0x15b0092a0 <col:18> 'char[4]' lvalue "STR"
        `-CallExpr 0x15b009520 <line:7:3, col:36> '<dependent type>' contains-errors
          |-DeclRefExpr 0x15b009408 <col:3> 'int ()' Function 0x15b009350 'print_string' 'int ()'
          |-RecoveryExpr 0x15b009428 <col:16> '<dependent type>' contains-errors lvalue
          |-BinaryOperator 0x15b0094a0 <col:21, col:25> 'const char *' '+'
          | |-ImplicitCastExpr 0x15b009488 <col:21> 'const char *' <LValueToRValue>
          | | `-DeclRefExpr 0x15b009448 <col:21> 'const char *' lvalue ParmVar 0x15a1281a8 'dat' 'const char *'
          | `-IntegerLiteral 0x15b009468 <col:25> 'int' 3
          `-BinaryOperator 0x15b009500 <col:28, col:35> '<dependent type>' contains-errors '-'
            |-RecoveryExpr 0x15b0094c0 <col:28> '<dependent type>' contains-errors lvalue
            `-IntegerLiteral 0x15b0094e0 <col:35> 'int' 3
