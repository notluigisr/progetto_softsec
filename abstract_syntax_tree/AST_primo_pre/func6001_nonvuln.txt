`-FunctionDecl 0x12a928750  line:1:20 tcp_ack_snd_check 'void (struct sock *)' static inline
  |-ParmVarDecl 0x12a928648 <col:38, col:51> col:51 used sk 'struct sock *'
  `-CompoundStmt 0x12a940e38 <line:2:1, line:8:1>
    |-IfStmt 0x12a940c78 <line:3:2, line:6:2>
    | |-UnaryOperator 0x12a940c38 <line:3:6, col:32> 'int' prefix '!' cannot overflow
    | | `-CallExpr 0x12a940bf8 <col:7, col:32> 'int'
    | |   |-ImplicitCastExpr 0x12a940be0 <col:7> 'int (*)()' <FunctionToPointerDecay>
    | |   | `-DeclRefExpr 0x12a940b70 <col:7> 'int ()' Function 0x12a940ab8 'inet_csk_ack_scheduled' 'int ()'
    | |   `-ImplicitCastExpr 0x12a940c20 <col:30> 'struct sock *' <LValueToRValue>
    | |     `-DeclRefExpr 0x12a940b90 <col:30> 'struct sock *' lvalue ParmVar 0x12a928648 'sk' 'struct sock *'
    | `-CompoundStmt 0x12a940c60 <col:35, line:6:2>
    |   `-ReturnStmt 0x12a940c50 <line:5:3>
    `-CallExpr 0x12a940df0 <line:7:2, col:27> 'int'
      |-ImplicitCastExpr 0x12a940dd8 <col:2> 'int (*)()' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x12a940d78 <col:2> 'int ()' Function 0x12a940cc0 '__tcp_ack_snd_check' 'int ()'
      |-ImplicitCastExpr 0x12a940e20 <col:22> 'struct sock *' <LValueToRValue>
      | `-DeclRefExpr 0x12a940d98 <col:22> 'struct sock *' lvalue ParmVar 0x12a928648 'sk' 'struct sock *'
      `-IntegerLiteral 0x12a940db8 <col:26> 'int' 1
