`-FunctionDecl 0x12e80dfa8  line:1:12 invalid wc_ecc_gen_k 'int (int *, int, int *, int *)' static
  |-ParmVarDecl 0x12e80dd28 <col:25, col:33> col:33 invalid rng 'int *'
  |-ParmVarDecl 0x12e80dda8 <col:38, col:42> col:42 used size 'int'
  |-ParmVarDecl 0x12e80de28 <col:48, col:56> col:56 invalid k 'int *'
  |-ParmVarDecl 0x12e80dea8 <col:59, col:67> col:67 invalid order 'int *'
  `-CompoundStmt 0x12e828870 <line:2:1, line:46:1>
    |-DeclStmt 0x12e80e0f0 <line:3:5, col:12>
    | `-VarDecl 0x12e80e088 <col:5, col:9> col:9 used err 'int'
    |-CompoundAssignOperator 0x12e80e148 <line:18:5, col:13> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    | |-DeclRefExpr 0x12e80e108 <col:5> 'int' lvalue ParmVar 0x12e80dda8 'size' 'int'
    | `-IntegerLiteral 0x12e80e128 <col:13> 'int' 8
    |-BinaryOperator 0x12e827c38 <line:21:5, col:46> 'int' contains-errors '='
    | |-DeclRefExpr 0x12e80e178 <col:5> 'int' lvalue Var 0x12e80e088 'err' 'int'
    | `-CallExpr 0x12e827c00 <col:11, col:46> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12e80e2f0 <col:11> 'int ()' Function 0x12e80e238 'wc_RNG_GenerateBlock' 'int ()'
    |   |-RecoveryExpr 0x12e80e310 <col:32> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x12e80e3c0 <col:37> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x12e80e348 <col:42> 'int' lvalue ParmVar 0x12e80dda8 'size' 'int'
    |-IfStmt 0x12e828170 <line:28:5, line:31:5>
    | |-BinaryOperator 0x12e827ec0 <line:28:9, col:16> 'int' contains-errors '=='
    | | |-DeclRefExpr 0x12e827e48 <col:9> 'int' lvalue Var 0x12e80e088 'err' 'int'
    | | `-RecoveryExpr 0x12e827ea0 <col:16> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x12e828158 <col:25, line:31:5>
    |   `-IfStmt 0x12e828138 <line:29:9, line:30:17>
    |     |-BinaryOperator 0x12e828080 <line:29:13, col:29> 'int' contains-errors '=='
    |     | |-CallExpr 0x12e828000 <col:13, col:24> '<dependent type>' contains-errors
    |     | | |-DeclRefExpr 0x12e827fc0 <col:13> 'int ()' Function 0x12e827f08 'mp_iszero' 'int ()'
    |     | | `-RecoveryExpr 0x12e827fe0 <col:23> '<dependent type>' contains-errors lvalue
    |     | `-RecoveryExpr 0x12e828060 <col:29> '<dependent type>' contains-errors lvalue
    |     `-BinaryOperator 0x12e828118 <line:30:11, col:17> 'int' contains-errors '='
    |       |-DeclRefExpr 0x12e8280a0 <col:11> 'int' lvalue Var 0x12e80e088 'err' 'int'
    |       `-RecoveryExpr 0x12e8280f8 <col:17> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12e828638 <line:34:5, line:38:5>
    | |-BinaryOperator 0x12e828208 <line:34:9, col:16> 'int' contains-errors '=='
    | | |-DeclRefExpr 0x12e828190 <col:9> 'int' lvalue Var 0x12e80e088 'err' 'int'
    | | `-RecoveryExpr 0x12e8281e8 <col:16> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x12e828620 <col:25, line:38:5>
    |   `-IfStmt 0x12e828600 <line:35:9, line:37:9>
    |     |-BinaryOperator 0x12e8283f0 <line:35:13, col:33> 'int' contains-errors '!='
    |     | |-CallExpr 0x12e828368 <col:13, col:28> '<dependent type>' contains-errors
    |     | | |-DeclRefExpr 0x12e828308 <col:13> 'int ()' Function 0x12e828250 'mp_cmp' 'int ()'
    |     | | |-RecoveryExpr 0x12e828328 <col:20> '<dependent type>' contains-errors lvalue
    |     | | `-RecoveryExpr 0x12e828348 <col:23> '<dependent type>' contains-errors lvalue
    |     | `-RecoveryExpr 0x12e8283d0 <col:33> '<dependent type>' contains-errors lvalue
    |     `-CompoundStmt 0x12e8285e8 <col:40, line:37:9>
    |       `-BinaryOperator 0x12e8285c8 <line:36:13, col:37> 'int' contains-errors '='
    |         |-DeclRefExpr 0x12e828410 <col:13> 'int' lvalue Var 0x12e80e088 'err' 'int'
    |         `-CallExpr 0x12e828590 <col:19, col:37> '<dependent type>' contains-errors
    |           |-DeclRefExpr 0x12e828510 <col:19> 'int ()' Function 0x12e828458 'mp_mod' 'int ()'
    |           |-RecoveryExpr 0x12e828530 <col:26> '<dependent type>' contains-errors lvalue
    |           |-RecoveryExpr 0x12e828550 <col:29> '<dependent type>' contains-errors lvalue
    |           `-RecoveryExpr 0x12e828570 <col:36> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x12e8287f8 <line:40:5, col:31> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12e828738 <col:5> 'int ()' Function 0x12e828680 'ForceZero' 'int ()'
    | |-RecoveryExpr 0x12e8287b8 <col:15> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x12e8287d8 <col:20> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x12e828860 <line:45:5, col:12>
      `-ImplicitCastExpr 0x12e828848 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x12e828828 <col:12> 'int' lvalue Var 0x12e80e088 'err' 'int'
