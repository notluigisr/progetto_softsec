`-FunctionDecl 0x1379283a0  line:1:6 invalid bn_mul_low_normal 'void (int *, int *, int *, int)'
  |-ParmVarDecl 0x137928128 <col:24, col:34> col:34 referenced invalid r 'int *'
  |-ParmVarDecl 0x1379281a8 <col:37, col:47> col:47 invalid a 'int *'
  |-ParmVarDecl 0x137928228 <col:50, col:60> col:60 referenced invalid b 'int *'
  |-ParmVarDecl 0x1379282a8 <col:63, col:67> col:67 used n 'int'
  `-CompoundStmt 0x137942398 <line:2:2, line:21:2>
    |-CallExpr 0x1379286b8 <line:6:2, col:25> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1379285c0 <col:2> 'int ()' Function 0x137928508 'bn_mul_words' 'int ()'
    | |-RecoveryExpr 0x1379285e0 <col:15> '<dependent type>' contains-errors lvalue
    | |-RecoveryExpr 0x137928600 <col:17> '<dependent type>' contains-errors lvalue
    | |-DeclRefExpr 0x137928620 <col:19> 'int' lvalue ParmVar 0x1379282a8 'n' 'int'
    | `-ArraySubscriptExpr 0x137928698 <col:21, col:24> '<dependent type>' contains-errors lvalue
    |   |-ImplicitCastExpr 0x137928680 <col:21> '<dependent type>' contains-errors <LValueToRValue>
    |   | `-RecoveryExpr 0x137928640 <col:21> '<dependent type>' contains-errors lvalue
    |   `-IntegerLiteral 0x137928660 <col:23> 'int' 0
    `-ForStmt 0x137942360 <line:8:2, line:20:3>
      |-<<<NULL>>>
      |-<<<NULL>>>
      |-<<<NULL>>>
      |-<<<NULL>>>
      `-CompoundStmt 0x137942300 <line:9:3, line:20:3>
        |-IfStmt 0x137928780 <line:10:3, col:17>
        | |-BinaryOperator 0x137928750 <col:7, col:14> 'int' '<='
        | | |-UnaryOperator 0x137928718 <col:7, col:9> 'int' prefix '--'
        | | | `-DeclRefExpr 0x1379286f8 <col:9> 'int' lvalue ParmVar 0x1379282a8 'n' 'int'
        | | `-IntegerLiteral 0x137928730 <col:14> 'int' 0
        | `-ReturnStmt 0x137928770 <col:17>
        |-CallExpr 0x137941a40 <line:11:3, col:36> '<dependent type>' contains-errors
        | |-DeclRefExpr 0x1379418b8 <col:3> 'int ()' Function 0x137941800 'bn_mul_add_words' 'int ()'
        | |-UnaryOperator 0x137941970 <col:20, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow
        | | `-ParenExpr 0x137941950 <col:21, col:26> '<dependent type>' contains-errors lvalue
        | |   `-ArraySubscriptExpr 0x137941930 <col:22, col:25> '<dependent type>' contains-errors lvalue
        | |     |-ImplicitCastExpr 0x137941918 <col:22> '<dependent type>' contains-errors <LValueToRValue>
        | |     | `-RecoveryExpr 0x1379418d8 <col:22> '<dependent type>' contains-errors lvalue
        | |     `-IntegerLiteral 0x1379418f8 <col:24> 'int' 1
        | |-RecoveryExpr 0x137941988 <col:28> '<dependent type>' contains-errors lvalue
        | |-DeclRefExpr 0x1379419a8 <col:30> 'int' lvalue ParmVar 0x1379282a8 'n' 'int'
        | `-ArraySubscriptExpr 0x137941a20 <col:32, col:35> '<dependent type>' contains-errors lvalue
        |   |-ImplicitCastExpr 0x137941a08 <col:32> '<dependent type>' contains-errors <LValueToRValue>
        |   | `-RecoveryExpr 0x1379419c8 <col:32> '<dependent type>' contains-errors lvalue
        |   `-IntegerLiteral 0x1379419e8 <col:34> 'int' 1
        |-IfStmt 0x137941b08 <line:12:3, col:17>
        | |-BinaryOperator 0x137941ad8 <col:7, col:14> 'int' '<='
        | | |-UnaryOperator 0x137941aa0 <col:7, col:9> 'int' prefix '--'
        | | | `-DeclRefExpr 0x137941a80 <col:9> 'int' lvalue ParmVar 0x1379282a8 'n' 'int'
        | | `-IntegerLiteral 0x137941ab8 <col:14> 'int' 0
        | `-ReturnStmt 0x137941af8 <col:17>
        |-CallExpr 0x137941cb0 <line:13:3, col:36> '<dependent type>' contains-errors
        | |-DeclRefExpr 0x137941b28 <col:3> 'int ()' Function 0x137941800 'bn_mul_add_words' 'int ()'
        | |-UnaryOperator 0x137941be0 <col:20, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow
        | | `-ParenExpr 0x137941bc0 <col:21, col:26> '<dependent type>' contains-errors lvalue
        | |   `-ArraySubscriptExpr 0x137941ba0 <col:22, col:25> '<dependent type>' contains-errors lvalue
        | |     |-ImplicitCastExpr 0x137941b88 <col:22> '<dependent type>' contains-errors <LValueToRValue>
        | |     | `-RecoveryExpr 0x137941b48 <col:22> '<dependent type>' contains-errors lvalue
        | |     `-IntegerLiteral 0x137941b68 <col:24> 'int' 2
        | |-RecoveryExpr 0x137941bf8 <col:28> '<dependent type>' contains-errors lvalue
        | |-DeclRefExpr 0x137941c18 <col:30> 'int' lvalue ParmVar 0x1379282a8 'n' 'int'
        | `-ArraySubscriptExpr 0x137941c90 <col:32, col:35> '<dependent type>' contains-errors lvalue
        |   |-ImplicitCastExpr 0x137941c78 <col:32> '<dependent type>' contains-errors <LValueToRValue>
        |   | `-RecoveryExpr 0x137941c38 <col:32> '<dependent type>' contains-errors lvalue
        |   `-IntegerLiteral 0x137941c58 <col:34> 'int' 2
        |-IfStmt 0x137941d78 <line:14:3, col:17>
        | |-BinaryOperator 0x137941d48 <col:7, col:14> 'int' '<='
        | | |-UnaryOperator 0x137941d10 <col:7, col:9> 'int' prefix '--'
        | | | `-DeclRefExpr 0x137941cf0 <col:9> 'int' lvalue ParmVar 0x1379282a8 'n' 'int'
        | | `-IntegerLiteral 0x137941d28 <col:14> 'int' 0
        | `-ReturnStmt 0x137941d68 <col:17>
        |-CallExpr 0x137941f20 <line:15:3, col:36> '<dependent type>' contains-errors
        | |-DeclRefExpr 0x137941d98 <col:3> 'int ()' Function 0x137941800 'bn_mul_add_words' 'int ()'
        | |-UnaryOperator 0x137941e50 <col:20, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow
        | | `-ParenExpr 0x137941e30 <col:21, col:26> '<dependent type>' contains-errors lvalue
        | |   `-ArraySubscriptExpr 0x137941e10 <col:22, col:25> '<dependent type>' contains-errors lvalue
        | |     |-ImplicitCastExpr 0x137941df8 <col:22> '<dependent type>' contains-errors <LValueToRValue>
        | |     | `-RecoveryExpr 0x137941db8 <col:22> '<dependent type>' contains-errors lvalue
        | |     `-IntegerLiteral 0x137941dd8 <col:24> 'int' 3
        | |-RecoveryExpr 0x137941e68 <col:28> '<dependent type>' contains-errors lvalue
        | |-DeclRefExpr 0x137941e88 <col:30> 'int' lvalue ParmVar 0x1379282a8 'n' 'int'
        | `-ArraySubscriptExpr 0x137941f00 <col:32, col:35> '<dependent type>' contains-errors lvalue
        |   |-ImplicitCastExpr 0x137941ee8 <col:32> '<dependent type>' contains-errors <LValueToRValue>
        |   | `-RecoveryExpr 0x137941ea8 <col:32> '<dependent type>' contains-errors lvalue
        |   `-IntegerLiteral 0x137941ec8 <col:34> 'int' 3
        |-IfStmt 0x137941fe8 <line:16:3, col:17>
        | |-BinaryOperator 0x137941fb8 <col:7, col:14> 'int' '<='
        | | |-UnaryOperator 0x137941f80 <col:7, col:9> 'int' prefix '--'
        | | | `-DeclRefExpr 0x137941f60 <col:9> 'int' lvalue ParmVar 0x1379282a8 'n' 'int'
        | | `-IntegerLiteral 0x137941f98 <col:14> 'int' 0
        | `-ReturnStmt 0x137941fd8 <col:17>
        |-CallExpr 0x137942190 <line:17:3, col:36> '<dependent type>' contains-errors
        | |-DeclRefExpr 0x137942008 <col:3> 'int ()' Function 0x137941800 'bn_mul_add_words' 'int ()'
        | |-UnaryOperator 0x1379420c0 <col:20, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow
        | | `-ParenExpr 0x1379420a0 <col:21, col:26> '<dependent type>' contains-errors lvalue
        | |   `-ArraySubscriptExpr 0x137942080 <col:22, col:25> '<dependent type>' contains-errors lvalue
        | |     |-ImplicitCastExpr 0x137942068 <col:22> '<dependent type>' contains-errors <LValueToRValue>
        | |     | `-RecoveryExpr 0x137942028 <col:22> '<dependent type>' contains-errors lvalue
        | |     `-IntegerLiteral 0x137942048 <col:24> 'int' 4
        | |-RecoveryExpr 0x1379420d8 <col:28> '<dependent type>' contains-errors lvalue
        | |-DeclRefExpr 0x1379420f8 <col:30> 'int' lvalue ParmVar 0x1379282a8 'n' 'int'
        | `-ArraySubscriptExpr 0x137942170 <col:32, col:35> '<dependent type>' contains-errors lvalue
        |   |-ImplicitCastExpr 0x137942158 <col:32> '<dependent type>' contains-errors <LValueToRValue>
        |   | `-RecoveryExpr 0x137942118 <col:32> '<dependent type>' contains-errors lvalue
        |   `-IntegerLiteral 0x137942138 <col:34> 'int' 4
        |-CompoundAssignOperator 0x137942238 <line:18:3, col:6> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
        | |-RecoveryExpr 0x1379421f0 <col:3> '<dependent type>' contains-errors lvalue
        | | `-DeclRefExpr 0x1379421d0 <col:3> 'int *' lvalue ParmVar 0x137928128 'r' 'int *'
        | `-IntegerLiteral 0x137942218 <col:6> 'int' 4
        `-CompoundAssignOperator 0x1379422d0 <line:19:3, col:6> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
          |-RecoveryExpr 0x137942288 <col:3> '<dependent type>' contains-errors lvalue
          | `-DeclRefExpr 0x137942268 <col:3> 'int *' lvalue ParmVar 0x137928228 'b' 'int *'
          `-IntegerLiteral 0x1379422b0 <col:6> 'int' 4
