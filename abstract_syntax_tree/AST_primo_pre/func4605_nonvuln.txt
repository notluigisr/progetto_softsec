`-FunctionDecl 0x13700dd98  line:1:1 set_required_caps 'int (void)'
  `-CompoundStmt 0x1400084d8 <line:2:1, line:15:1>
    |-DeclStmt 0x137026e78 <line:3:3, col:75>
    | |-RecordDecl 0x13700de88 <col:3, col:10> col:10 struct __user_cap_header_struct
    | `-VarDecl 0x13700df88 <col:3, col:35> col:35 invalid hdr 'struct __user_cap_header_struct'
    |-DeclStmt 0x1370270d0 <line:4:3, col:52>
    | |-RecordDecl 0x137026e90 <col:3, col:10> col:10 struct __user_cap_data_struct
    | `-VarDecl 0x137026fa0 <col:3, col:33> col:33 referenced invalid data 'int'
    |-BinaryOperator 0x137027328 <line:7:3, col:23> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x1370272c0 <col:3, col:11> '<dependent type>' contains-errors lvalue .effective
    | | `-ArraySubscriptExpr 0x1370272a0 <col:3, col:9> '<dependent type>' contains-errors lvalue
    | |   |-ImplicitCastExpr 0x137027288 <col:3> '<dependent type>' contains-errors <LValueToRValue>
    | |   | `-RecoveryExpr 0x137027108 <col:3> '<dependent type>' contains-errors lvalue
    | |   |   `-DeclRefExpr 0x1370270e8 <col:3> 'int' lvalue Var 0x137026fa0 'data' 'int'
    | |   `-IntegerLiteral 0x137027130 <col:8> 'int' 0
    | `-RecoveryExpr 0x137027308 <col:23> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x137027588 <line:8:3, col:23> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x137027520 <col:3, col:11> '<dependent type>' contains-errors lvalue .permitted
    | | `-ArraySubscriptExpr 0x137027500 <col:3, col:9> '<dependent type>' contains-errors lvalue
    | |   |-ImplicitCastExpr 0x1370274e8 <col:3> '<dependent type>' contains-errors <LValueToRValue>
    | |   | `-RecoveryExpr 0x137027368 <col:3> '<dependent type>' contains-errors lvalue
    | |   |   `-DeclRefExpr 0x137027348 <col:3> 'int' lvalue Var 0x137026fa0 'data' 'int'
    | |   `-IntegerLiteral 0x137027390 <col:8> 'int' 0
    | `-RecoveryExpr 0x137027568 <col:23> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x1370276b0 <line:9:3, col:25> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x137027648 <col:3, col:11> '<dependent type>' contains-errors lvalue .inheritable
    | | `-ArraySubscriptExpr 0x137027628 <col:3, col:9> '<dependent type>' contains-errors lvalue
    | |   |-ImplicitCastExpr 0x137027610 <col:3> '<dependent type>' contains-errors <LValueToRValue>
    | |   | `-RecoveryExpr 0x1370275c8 <col:3> '<dependent type>' contains-errors lvalue
    | |   |   `-DeclRefExpr 0x1370275a8 <col:3> 'int' lvalue Var 0x137026fa0 'data' 'int'
    | |   `-IntegerLiteral 0x1370275f0 <col:8> 'int' 0
    | `-IntegerLiteral 0x137027690 <col:25> 'int' 0
    |-BinaryOperator 0x137027910 <line:10:3, col:23> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x1370278a8 <col:3, col:11> '<dependent type>' contains-errors lvalue .effective
    | | `-ArraySubscriptExpr 0x137027888 <col:3, col:9> '<dependent type>' contains-errors lvalue
    | |   |-ImplicitCastExpr 0x137027870 <col:3> '<dependent type>' contains-errors <LValueToRValue>
    | |   | `-RecoveryExpr 0x1370276f0 <col:3> '<dependent type>' contains-errors lvalue
    | |   |   `-DeclRefExpr 0x1370276d0 <col:3> 'int' lvalue Var 0x137026fa0 'data' 'int'
    | |   `-IntegerLiteral 0x137027718 <col:8> 'int' 1
    | `-RecoveryExpr 0x1370278f0 <col:23> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x137027b70 <line:11:3, col:23> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x137027b08 <col:3, col:11> '<dependent type>' contains-errors lvalue .permitted
    | | `-ArraySubscriptExpr 0x137027ae8 <col:3, col:9> '<dependent type>' contains-errors lvalue
    | |   |-ImplicitCastExpr 0x137027ad0 <col:3> '<dependent type>' contains-errors <LValueToRValue>
    | |   | `-RecoveryExpr 0x137027950 <col:3> '<dependent type>' contains-errors lvalue
    | |   |   `-DeclRefExpr 0x137027930 <col:3> 'int' lvalue Var 0x137026fa0 'data' 'int'
    | |   `-IntegerLiteral 0x137027978 <col:8> 'int' 1
    | `-RecoveryExpr 0x137027b50 <col:23> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x137027c98 <line:12:3, col:25> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x137027c30 <col:3, col:11> '<dependent type>' contains-errors lvalue .inheritable
    | | `-ArraySubscriptExpr 0x137027c10 <col:3, col:9> '<dependent type>' contains-errors lvalue
    | |   |-ImplicitCastExpr 0x137027bf8 <col:3> '<dependent type>' contains-errors <LValueToRValue>
    | |   | `-RecoveryExpr 0x137027bb0 <col:3> '<dependent type>' contains-errors lvalue
    | |   |   `-DeclRefExpr 0x137027b90 <col:3> 'int' lvalue Var 0x137026fa0 'data' 'int'
    | |   `-IntegerLiteral 0x137027bd8 <col:8> 'int' 1
    | `-IntegerLiteral 0x137027c78 <col:25> 'int' 0
    `-IfStmt 0x1400084b8 <line:13:3, line:14:26>
      |-BinaryOperator 0x1400082a8 <line:13:7, col:29> 'int' contains-errors '<'
      | |-CallExpr 0x140008258 <col:7, col:25> '<dependent type>' contains-errors
      | | |-DeclRefExpr 0x137027dd0 <col:7> 'int ()' Function 0x137027d18 'capset' 'int ()'
      | | |-UnaryOperator 0x140008220 <col:15, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow
      | | | `-RecoveryExpr 0x140008200 <col:16> '<dependent type>' contains-errors lvalue
      | | `-RecoveryExpr 0x140008238 <col:21> '<dependent type>' contains-errors lvalue
      | `-IntegerLiteral 0x140008288 <col:29> 'int' 0
      `-CallExpr 0x140008478 <line:14:5, col:26> 'int'
        |-ImplicitCastExpr 0x140008460 <col:5> 'int (*)()' <FunctionToPointerDecay>
        | `-DeclRefExpr 0x1400083a8 <col:5> 'int ()' Function 0x1400082f0 'die_with_error' 'int ()'
        `-ImplicitCastExpr 0x1400084a0 <col:21> 'char *' <ArrayToPointerDecay>
          `-StringLiteral 0x140008410 <col:21> 'char[4]' lvalue "STR"
