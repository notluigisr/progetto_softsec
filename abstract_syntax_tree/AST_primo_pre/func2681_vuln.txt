`-FunctionDecl 0x125813f88  line:1:1 invalid glue 'int (int (*)(), int)'
  |-ParmVarDecl 0x126111d80 <col:6, <invalid sloc>> col:6 invalid glue 'int (*)()'
  |-ParmVarDecl 0x126111e00 <col:52> col:52 _16 'int'
  `-CompoundStmt 0x125814890 <line:5:1, line:31:1>
    |-DeclStmt 0x125814158 <line:6:5, col:12>
    | |-VarDecl 0x125814058 <col:5, col:9> col:9 used x 'int'
    | `-VarDecl 0x1258140d8 <col:5, col:11> col:11 used y 'int'
    |-IfStmt 0x125814258 <line:11:5, line:13:5>
    | |-RecoveryExpr 0x125814210 <line:11:9, col:55> '_Bool' contains-errors
    | `-CompoundStmt 0x125814240 <col:58, line:13:5>
    |   `-ReturnStmt 0x125814230 <line:12:9>
    `-ForStmt 0x125814858 <line:15:5, line:30:5>
      |-BinaryOperator 0x1258142b8 <line:15:10, col:14> 'int' '='
      | |-DeclRefExpr 0x125814278 <col:10> 'int' lvalue Var 0x1258140d8 'y' 'int'
      | `-IntegerLiteral 0x125814298 <col:14> 'int' 0
      |-<<<NULL>>>
      |-BinaryOperator 0x125814350 <col:17, col:21> 'int' contains-errors '<'
      | |-DeclRefExpr 0x1258142d8 <col:17> 'int' lvalue Var 0x1258140d8 'y' 'int'
      | `-RecoveryExpr 0x125814330 <col:21> '<dependent type>' contains-errors lvalue
      |-UnaryOperator 0x125814390 <col:32, col:33> 'int' postfix '++'
      | `-DeclRefExpr 0x125814370 <col:32> 'int' lvalue Var 0x1258140d8 'y' 'int'
      `-CompoundStmt 0x125814840 <col:37, line:30:5>
        `-ForStmt 0x125814808 <line:16:9, line:27:9>
          |-BinaryOperator 0x1258143e8 <line:16:14, col:18> 'int' '='
          | |-DeclRefExpr 0x1258143a8 <col:14> 'int' lvalue Var 0x125814058 'x' 'int'
          | `-IntegerLiteral 0x1258143c8 <col:18> 'int' 0
          |-<<<NULL>>>
          |-BinaryOperator 0x125814480 <col:21, col:25> 'int' contains-errors '<'
          | |-DeclRefExpr 0x125814408 <col:21> 'int' lvalue Var 0x125814058 'x' 'int'
          | `-RecoveryExpr 0x125814460 <col:25> '<dependent type>' contains-errors lvalue
          |-CompoundAssignOperator 0x1258144e0 <col:35, col:38> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
          | |-DeclRefExpr 0x1258144a0 <col:35> 'int' lvalue Var 0x125814058 'x' 'int'
          | `-IntegerLiteral 0x1258144c0 <col:38> 'int' 2
          `-CompoundStmt 0x1258147f0 <col:41, line:27:9>
            `-IfStmt 0x125814790 <line:21:6, line:24:6>
              |-RecoveryExpr 0x125814740 <line:21:10, col:59> '_Bool' contains-errors
              `-CompoundStmt 0x125814780 <col:62, line:24:6>
