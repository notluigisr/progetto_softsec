`-FunctionDecl 0x13b034fa8  line:1:5 CRYPTO_get_new_lockid 'int (char *)'
  |-ParmVarDecl 0x13b034ed8 <col:27, col:33> col:33 used name 'char *'
  `-CompoundStmt 0x13b04f158 <line:2:2, line:27:2>
    |-DeclStmt 0x13b035120 <line:3:2, col:11>
    | `-VarDecl 0x13b0350b8 <col:2, col:8> col:8 used str 'char *'
    |-DeclStmt 0x13b0351b8 <line:4:2, col:7>
    | `-VarDecl 0x13b035150 <col:2, col:6> col:6 used i 'int'
    |-IfStmt 0x13b04e2a0 <line:11:2, line:15:3>
    | |-RecoveryExpr 0x13b035420 <line:11:6, col:78> '_Bool' contains-errors
    | `-CompoundStmt 0x13b04e280 <line:12:3, line:15:3>
    |   |-CallExpr 0x13b04e200 <line:13:3, col:64> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x13b035520 <col:3> 'int ()' Function 0x13b035468 'CRYPTOerr' 'int ()'
    |   | |-RecoveryExpr 0x13b0355a0 <col:13> '<dependent type>' contains-errors lvalue
    |   | `-RecoveryExpr 0x13b0355c0 <col:44> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x13b04e270 <line:14:3, col:11>
    |     `-ParenExpr 0x13b04e250 <col:9, col:11> 'int'
    |       `-IntegerLiteral 0x13b04e230 <col:10> 'int' 0
    |-IfStmt 0x13b04ec08 <line:16:2, line:20:3>
    | |-BinaryOperator 0x13b04ea88 <line:16:6, col:32> 'int' contains-errors '=='
    | | |-ParenExpr 0x13b04ea48 <col:6, col:27> 'char *'
    | | | `-BinaryOperator 0x13b04ea28 <col:7, col:26> 'char *' '='
    | | |   |-DeclRefExpr 0x13b04e2c0 <col:7> 'char *' lvalue Var 0x13b0350b8 'str' 'char *'
    | | |   `-ImplicitCastExpr 0x13b04ea10 <col:11, col:26> 'char *' <IntegralToPointer>
    | | |     `-CallExpr 0x13b04e9d0 <col:11, col:26> 'int'
    | | |       |-ImplicitCastExpr 0x13b04e9b8 <col:11> 'int (*)()' <FunctionToPointerDecay>
    | | |       | `-DeclRefExpr 0x13b04e3c0 <col:11> 'int ()' Function 0x13b04e308 'BUF_strdup' 'int ()'
    | | |       `-ImplicitCastExpr 0x13b04e9f8 <col:22> 'char *' <LValueToRValue>
    | | |         `-DeclRefExpr 0x13b04e3e0 <col:22> 'char *' lvalue ParmVar 0x13b034ed8 'name' 'char *'
    | | `-RecoveryExpr 0x13b04ea68 <col:32> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x13b04ebe8 <line:17:3, line:20:3>
    |   |-CallExpr 0x13b04eb68 <line:18:3, col:64> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x13b04eaa8 <col:3> 'int ()' Function 0x13b035468 'CRYPTOerr' 'int ()'
    |   | |-RecoveryExpr 0x13b04eb28 <col:13> '<dependent type>' contains-errors lvalue
    |   | `-RecoveryExpr 0x13b04eb48 <col:44> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x13b04ebd8 <line:19:3, col:11>
    |     `-ParenExpr 0x13b04ebb8 <col:9, col:11> 'int'
    |       `-IntegerLiteral 0x13b04eb98 <col:10> 'int' 0
    |-BinaryOperator 0x13b04ee20 <line:21:2, col:40> 'int' contains-errors '='
    | |-DeclRefExpr 0x13b04ec28 <col:2> 'int' lvalue Var 0x13b035150 'i' 'int'
    | `-CallExpr 0x13b04edf0 <col:4, col:40> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13b04ed28 <col:4> 'int ()' Function 0x13b04ec70 'sk_OPENSSL_STRING_push' 'int ()'
    |   |-RecoveryExpr 0x13b04edd0 <col:27> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x13b04ed60 <col:37> 'char *' lvalue Var 0x13b0350b8 'str' 'char *'
    |-IfStmt 0x13b04f0c0 <line:22:2, line:25:6> has_else
    | |-UnaryOperator 0x13b04ee78 <line:22:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x13b04ee60 <col:7> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x13b04ee40 <col:7> 'int' lvalue Var 0x13b035150 'i' 'int'
    | |-CallExpr 0x13b04efc8 <line:23:3, col:19> 'int'
    | | |-ImplicitCastExpr 0x13b04efb0 <col:3> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x13b04ef70 <col:3> 'int ()' Function 0x13b04eeb8 'OPENSSL_free' 'int ()'
    | | `-ImplicitCastExpr 0x13b04eff0 <col:16> 'char *' <LValueToRValue>
    | |   `-DeclRefExpr 0x13b04ef90 <col:16> 'char *' lvalue Var 0x13b0350b8 'str' 'char *'
    | `-CompoundAssignOperator 0x13b04f090 <line:25:3, col:6> 'int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   |-DeclRefExpr 0x13b04f008 <col:3> 'int' lvalue Var 0x13b035150 'i' 'int'
    |   `-RecoveryExpr 0x13b04f070 <col:6> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x13b04f148 <line:26:2, col:10>
      `-ImplicitCastExpr 0x13b04f130 <col:8, col:10> 'int' <LValueToRValue>
        `-ParenExpr 0x13b04f110 <col:8, col:10> 'int' lvalue
          `-DeclRefExpr 0x13b04f0f0 <col:9> 'int' lvalue Var 0x13b035150 'i' 'int'
