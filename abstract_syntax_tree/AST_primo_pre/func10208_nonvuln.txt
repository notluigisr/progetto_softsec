`-FunctionDecl 0x15380dee8  line:1:12 invalid changedline 'int (const int *, int, int)' static
  |-ParmVarDecl 0x15380dcf0 <col:25, col:38> col:38 invalid p 'const int *'
  |-ParmVarDecl 0x15380dd70 <col:41, col:45> col:45 used oldpc 'int'
  |-ParmVarDecl 0x15380ddf0 <col:52, col:56> col:56 used newpc 'int'
  `-CompoundStmt 0x153827a30 <col:63, line:9:1>
    |-IfStmt 0x15380e0b8 <line:2:3, line:3:12>
    | |-BinaryOperator 0x15380e068 <line:2:7, col:22> 'int' contains-errors '=='
    | | |-CXXDependentScopeMemberExpr 0x15380dfc8 <col:7, col:10> '<dependent type>' contains-errors lvalue ->lineinfo
    | | | `-RecoveryExpr 0x15380dfa8 <col:7> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x15380e048 <col:22> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x15380e0a8 <line:3:5, col:12>
    |   `-IntegerLiteral 0x15380e088 <col:12> 'int' 0
    |-WhileStmt 0x1538279e0 <line:4:3, line:7:3>
    | |-BinaryOperator 0x15380e148 <line:4:10, col:20> 'int' '<'
    | | |-UnaryOperator 0x15380e0f8 <col:10, col:15> 'int' postfix '++'
    | | | `-DeclRefExpr 0x15380e0d8 <col:10> 'int' lvalue ParmVar 0x15380dd70 'oldpc' 'int'
    | | `-ImplicitCastExpr 0x15380e130 <col:20> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x15380e110 <col:20> 'int' lvalue ParmVar 0x15380ddf0 'newpc' 'int'
    | `-CompoundStmt 0x1538279c8 <col:27, line:7:3>
    |   `-IfStmt 0x1538279a8 <line:5:5, line:6:75>
    |     |-BinaryOperator 0x15380e260 <line:5:9, col:31> 'int' contains-errors '!='
    |     | |-ArraySubscriptExpr 0x15380e220 <col:9, col:26> '<dependent type>' contains-errors lvalue
    |     | | |-ImplicitCastExpr 0x15380e1f0 <col:9, col:12> '<dependent type>' contains-errors <LValueToRValue>
    |     | | | `-CXXDependentScopeMemberExpr 0x15380e188 <col:9, col:12> '<dependent type>' contains-errors lvalue ->lineinfo
    |     | | |   `-RecoveryExpr 0x15380e168 <col:9> '<dependent type>' contains-errors lvalue
    |     | | `-ImplicitCastExpr 0x15380e208 <col:21> 'int' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x15380e1d0 <col:21> 'int' lvalue ParmVar 0x15380dd70 'oldpc' 'int'
    |     | `-IntegerLiteral 0x15380e240 <col:31> 'int' 0
    |     `-ReturnStmt 0x153827998 <line:6:7, col:75>
    |       `-ParenExpr 0x153827978 <col:14, col:75> 'int' contains-errors
    |         `-BinaryOperator 0x153827958 <col:15, col:74> 'int' contains-errors '!='
    |           |-CallExpr 0x153827898 <col:15, col:44> '<dependent type>' contains-errors
    |           | |-DeclRefExpr 0x15380e3e0 <col:15> 'int ()' Function 0x15380e328 'luaG_getfuncline' 'int ()'
    |           | |-RecoveryExpr 0x153827800 <col:32> '<dependent type>' contains-errors lvalue
    |           | `-BinaryOperator 0x153827878 <col:35, col:43> 'int' '-'
    |           |   |-ImplicitCastExpr 0x153827860 <col:35> 'int' <LValueToRValue>
    |           |   | `-DeclRefExpr 0x153827820 <col:35> 'int' lvalue ParmVar 0x15380dd70 'oldpc' 'int'
    |           |   `-IntegerLiteral 0x153827840 <col:43> 'int' 1
    |           `-CallExpr 0x153827928 <col:49, col:74> '<dependent type>' contains-errors
    |             |-DeclRefExpr 0x1538278c8 <col:49> 'int ()' Function 0x15380e328 'luaG_getfuncline' 'int ()'
    |             |-RecoveryExpr 0x1538278e8 <col:66> '<dependent type>' contains-errors lvalue
    |             `-DeclRefExpr 0x153827908 <col:69> 'int' lvalue ParmVar 0x15380ddf0 'newpc' 'int'
    `-ReturnStmt 0x153827a20 <line:8:3, col:10>
      `-IntegerLiteral 0x153827a00 <col:10> 'int' 0
