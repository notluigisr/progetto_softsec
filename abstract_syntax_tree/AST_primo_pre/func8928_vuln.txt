`-FunctionDecl 0x14b928288  line:1:14 invalid Eval 'int (int *, int *)'
  |-ParmVarDecl 0x14b928128 <col:19, col:34> col:34 referenced invalid context 'int *'
  |-ParmVarDecl 0x14b9281a8 <col:43, col:55> col:55 invalid node 'int *'
  `-CompoundStmt 0x14b941e50 <col:61, line:32:1>
    |-DeclStmt 0x14b928478 <line:2:3, line:3:75>
    | `-VarDecl 0x14b928358 <line:2:3, col:9> col:9 used params 'int *' auto
    |-DeclStmt 0x14b928720 <line:5:3, col:68>
    | `-VarDecl 0x14b9284a8 <col:3, col:23> col:23 invalid input 'const int *'
    `-IfStmt 0x14b941e20 <line:8:3, line:29:3> has_else
      |-BinaryOperator 0x14b941a88 <line:8:7, col:23> 'int' contains-errors '=='
      | |-CXXDependentScopeMemberExpr 0x14b941a20 <col:7, col:15> '<dependent type>' contains-errors lvalue ->type
      | | `-RecoveryExpr 0x14b941a00 <col:7> '<dependent type>' contains-errors lvalue
      | `-RecoveryExpr 0x14b941a68 <col:23> '<dependent type>' contains-errors lvalue
      |-CompoundStmt 0x14b941ce0 <col:39, line:25:3>
      | |-RecoveryExpr 0x14b941ad8 <line:10:3> '<dependent type>' contains-errors lvalue
      | `-BinaryOperator 0x14b941ba0 <line:11:3, col:29> '<dependent type>' contains-errors '='
      |   |-RecoveryExpr 0x14b941b18 <col:3, col:13> '<dependent type>' contains-errors lvalue
      |   | `-DeclRefExpr 0x14b941af8 <col:3> 'int *' lvalue Var 0x14b928358 'params' 'int *'
      |   `-RecoveryExpr 0x14b941b78 <col:21, col:29> '<dependent type>' contains-errors lvalue
      |     `-DeclRefExpr 0x14b941b40 <col:21> 'int *' lvalue Var 0x14b928358 'params' 'int *'
      `-CompoundStmt 0x14b941e10 <line:25:10, line:29:3>
