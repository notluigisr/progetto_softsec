`-FunctionDecl 0x14b80de88  line:1:1 invalid CryptSymKeyValidate 'int (int *, int *)'
  |-ParmVarDecl 0x14b80dd28 <line:2:7, col:28> col:28 invalid symDef 'int *'
  |-ParmVarDecl 0x14b80dda8 <line:3:7, col:28> col:28 invalid key 'int *'
  `-CompoundStmt 0x14b80e318 <line:5:1, line:13:1>
    |-IfStmt 0x14b80e2b0 <line:6:5, line:7:9>
    | |-BinaryOperator 0x14b80e248 <line:6:8, col:56> 'int' contains-errors '!='
    | | |-CXXDependentScopeMemberExpr 0x14b80dfa8 <col:8, col:15> '<dependent type>' contains-errors lvalue .size
    | | | `-CXXDependentScopeMemberExpr 0x14b80df60 <col:8, col:13> '<dependent type>' contains-errors lvalue ->t
    | | |   `-RecoveryExpr 0x14b80df40 <col:8> '<dependent type>' contains-errors lvalue
    | | `-CallExpr 0x14b80e220 <col:23, col:56> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x14b80e150 <col:23> 'int ()' Function 0x14b80e098 'BITS_TO_BYTES' 'int ()'
    | |   `-CXXDependentScopeMemberExpr 0x14b80e1d8 <col:37, col:53> '<dependent type>' contains-errors lvalue .sym
    | |     `-CXXDependentScopeMemberExpr 0x14b80e190 <col:37, col:45> '<dependent type>' contains-errors lvalue ->keyBits
    | |       `-RecoveryExpr 0x14b80e170 <col:37> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x14b80e2a0 <line:7:2, col:9>
    |   `-RecoveryExpr 0x14b80e280 <col:9> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x14b80e308 <line:12:5, col:12>
      `-RecoveryExpr 0x14b80e2e8 <col:12> '<dependent type>' contains-errors lvalue
