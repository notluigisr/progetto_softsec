`-FunctionDecl 0x13e00ddf8  line:1:7 invalid get_request_payment_payer 'int (int *)'
  |-ParmVarDecl 0x13e00dd28 <col:33, col:39> col:39 invalid requester_pays 'int *'
  `-CompoundStmt 0x13e027ad0 <col:55, line:21:3>
    |-IfStmt 0x13e00e268 <line:3:5, line:4:15>
    | |-UnaryOperator 0x13e00e1a8 <line:3:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x13e00e190 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x13e00e170 <col:10> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x13e00e258 <line:4:7, col:15>
    |   `-UnaryOperator 0x13e00e240 <col:14, col:15> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x13e00e228 <col:15> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x13e00e208 <col:15> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x13e0274b0 <line:9:5, line:10:14>
    | |-UnaryOperator 0x13e027468 <line:9:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x13e027450 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x13e027430 <col:10> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x13e0274a0 <line:10:7, col:14>
    |   `-IntegerLiteral 0x13e027480 <col:14> 'int' 0
    |-IfStmt 0x13e027a70 <line:14:5, line:18:5> has_else
    | |-BinaryOperator 0x13e0276c8 <line:14:9, col:36> 'int' contains-errors '=='
    | | |-CallExpr 0x13e027698 <col:9, col:31> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x13e0275b0 <col:9> 'int ()' Function 0x13e0274f8 'stringcasecmp' 'int ()'
    | | | |-RecoveryExpr 0x13e027678 <col:23> '<dependent type>' contains-errors lvalue
    | | | `-StringLiteral 0x13e0275e8 <col:26> 'char[4]' lvalue "STR"
    | | `-IntegerLiteral 0x13e027638 <col:36> 'int' 0
    | |-CompoundStmt 0x13e027810 <col:39, line:16:5>
    | | `-BinaryOperator 0x13e0277f0 <line:15:7, col:25> '<dependent type>' contains-errors '='
    | |   |-UnaryOperator 0x13e0277b8 <col:7, col:8> '<dependent type>' contains-errors prefix '*' cannot overflow
    | |   | `-ImplicitCastExpr 0x13e0277a0 <col:8> '<dependent type>' contains-errors <LValueToRValue>
    | |   |   `-RecoveryExpr 0x13e0276e8 <col:8> '<dependent type>' contains-errors lvalue
    | |   `-RecoveryExpr 0x13e0277d0 <col:25> '<dependent type>' contains-errors lvalue
    | `-IfStmt 0x13e027a50 <line:16:12, line:18:5>
    |   |-BinaryOperator 0x13e027940 <line:16:16, col:43> 'int' contains-errors '!='
    |   | |-CallExpr 0x13e027910 <col:16, col:38> '<dependent type>' contains-errors
    |   | | |-DeclRefExpr 0x13e027828 <col:16> 'int ()' Function 0x13e0274f8 'stringcasecmp' 'int ()'
    |   | | |-RecoveryExpr 0x13e0278f0 <col:30> '<dependent type>' contains-errors lvalue
    |   | | `-StringLiteral 0x13e027860 <col:33> 'char[4]' lvalue "STR"
    |   | `-IntegerLiteral 0x13e0278b0 <col:43> 'int' 0
    |   `-CompoundStmt 0x13e027a38 <col:46, line:18:5>
    |     `-ReturnStmt 0x13e027a28 <line:17:7, col:15>
    |       `-UnaryOperator 0x13e027a10 <col:14, col:15> '<dependent type>' contains-errors prefix '-' cannot overflow
    |         `-ImplicitCastExpr 0x13e0279f8 <col:15> '<dependent type>' contains-errors <LValueToRValue>
    |           `-RecoveryExpr 0x13e0279a8 <col:15> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x13e027ac0 <line:20:5, col:12>
      `-IntegerLiteral 0x13e027aa0 <col:12> 'int' 0
