`-FunctionDecl 0x13a1281c8  line:1:21 invalid mp_crop 'double (int)' static
  |-ParmVarDecl 0x13a1280f0 <col:29, <invalid sloc>> col:46 invalid 'int'
  `-CompoundStmt 0x13b00c850 <col:52, line:19:7>
    |-DeclStmt 0x13b009808 <line:2:9, col:39>
    | `-VarDecl 0x13a1282c8 <col:9, col:38> col:17 ptrd 'double *' cinit
    |   `-BinaryOperator 0x13b0097e8 <col:36, col:38> '<dependent type>' contains-errors '+'
    |     |-RecoveryExpr 0x13b0097a0 <col:36, col:34> '<dependent type>' contains-errors lvalue
    |     | `-CallExpr 0x13a128518 <col:25, col:34> 'int'
    |     |   |-ImplicitCastExpr 0x13a128500 <col:25> 'int (*)()' <FunctionToPointerDecay>
    |     |   | `-DeclRefExpr 0x13a128490 <col:25> 'int ()' Function 0x13a1283d8 '_mp_arg' 'int ()'
    |     |   `-IntegerLiteral 0x13a1284b0 <col:33> 'int' 1
    |     `-IntegerLiteral 0x13b0097c8 <col:38> 'int' 1
    |-DeclStmt 0x13b009d48 <line:3:9, col:101>
    | |-VarDecl 0x13b009838 <col:9, col:37> col:19 x 'const int' cinit
    | | `-CStyleCastExpr 0x13b009938 <col:23, col:37> 'int' <NoOp>
    | |   `-CallExpr 0x13b0098f8 <col:28, col:37> 'int'
    | |     |-ImplicitCastExpr 0x13b0098e0 <col:28> 'int (*)()' <FunctionToPointerDecay>
    | |     | `-DeclRefExpr 0x13b0098a0 <col:28> 'int ()' Function 0x13a1283d8 '_mp_arg' 'int ()'
    | |     `-IntegerLiteral 0x13b0098c0 <col:36> 'int' 3
    | |-VarDecl 0x13b009978 <col:9, col:58> col:40 y 'const int' cinit
    | | `-CStyleCastExpr 0x13b009a78 <col:44, col:58> 'int' <NoOp>
    | |   `-CallExpr 0x13b009a38 <col:49, col:58> 'int'
    | |     |-ImplicitCastExpr 0x13b009a20 <col:49> 'int (*)()' <FunctionToPointerDecay>
    | |     | `-DeclRefExpr 0x13b0099e0 <col:49> 'int ()' Function 0x13a1283d8 '_mp_arg' 'int ()'
    | |     `-IntegerLiteral 0x13b009a00 <col:57> 'int' 4
    | |-VarDecl 0x13b009ab8 <col:9, col:79> col:61 z 'const int' cinit
    | | `-CStyleCastExpr 0x13b009bb8 <col:65, col:79> 'int' <NoOp>
    | |   `-CallExpr 0x13b009b78 <col:70, col:79> 'int'
    | |     |-ImplicitCastExpr 0x13b009b60 <col:70> 'int (*)()' <FunctionToPointerDecay>
    | |     | `-DeclRefExpr 0x13b009b20 <col:70> 'int ()' Function 0x13a1283d8 '_mp_arg' 'int ()'
    | |     `-IntegerLiteral 0x13b009b40 <col:78> 'int' 5
    | `-VarDecl 0x13b009bf8 <col:9, col:100> col:82 c 'const int' cinit
    |   `-CStyleCastExpr 0x13b009cf8 <col:86, col:100> 'int' <NoOp>
    |     `-CallExpr 0x13b009cb8 <col:91, col:100> 'int'
    |       |-ImplicitCastExpr 0x13b009ca0 <col:91> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x13b009c60 <col:91> 'int ()' Function 0x13a1283d8 '_mp_arg' 'int ()'
    |       `-IntegerLiteral 0x13b009c80 <col:99> 'int' 6
    |-DeclStmt 0x13b00a188 <line:4:9, line:8:43>
    | |-VarDecl 0x13b009d78 <line:4:9, line:5:11> col:11 dx 'const unsigned int'
    | |-VarDecl 0x13b009e78 <line:4:9, line:6:11> col:11 dy 'const unsigned int'
    | |-VarDecl 0x13b009f78 <line:4:9, line:7:11> col:11 dz 'const unsigned int'
    | `-VarDecl 0x13b00a078 <line:4:9, line:8:11> col:11 dc 'const unsigned int'
    |-DeclStmt 0x13b00a2e0 <line:9:9, col:75>
    | `-VarDecl 0x13b00a1b8 <col:9, col:74> col:28 boundary_conditions 'const unsigned int' cinit
    |   `-CStyleCastExpr 0x13b00a2b8 <col:50, col:74> 'unsigned int' <IntegralCast>
    |     `-CallExpr 0x13b00a278 <col:64, col:74> 'int'
    |       |-ImplicitCastExpr 0x13b00a260 <col:64> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x13b00a220 <col:64> 'int ()' Function 0x13a1283d8 '_mp_arg' 'int ()'
    |       `-IntegerLiteral 0x13b00a240 <col:72> 'int' 11
    |-DeclStmt 0x13b00a3f8 <line:10:9, col:54>
    | `-VarDecl 0x13b00a310 <col:9, col:22> col:22 used ind 'unsigned int'
    |-IfStmt 0x13b00a5d8 <line:13:9, col:19>
    | |-UnaryOperator 0x13b00a570 <col:13, col:14> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x13b00a558 <col:14> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x13b00a538 <col:14> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x13b00a5b8 <col:19> '<dependent type>' contains-errors lvalue
    |-ReturnStmt 0x13b00c838 <line:18:9, col:16>
    | `-RecoveryExpr 0x13b00c818 <col:16> '<dependent type>' contains-errors lvalue
    `-NullStmt 0x13b00c848 <col:41>
