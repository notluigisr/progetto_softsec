`-FunctionDecl 0x155140a00  line:1:12 sctp_get_port 'int (struct sock *, unsigned short)' static
  |-ParmVarDecl 0x155128648 <col:26, col:39> col:39 used sk 'struct sock *'
  |-ParmVarDecl 0x1551286c8 <col:43, col:58> col:58 used snum 'unsigned short'
  `-CompoundStmt 0x1551417a8 <line:2:1, line:15:1>
    |-DeclStmt 0x155140b80 <line:3:2, col:10>
    | `-VarDecl 0x155140b18 <col:2, col:7> col:7 used ret 'long'
    |-DeclStmt 0x155140d18 <line:4:2, col:22>
    | |-RecordDecl 0x155140b98 <col:2, col:8> col:8 union sctp_addr
    | `-VarDecl 0x155140c98 <col:2, col:18> col:18 referenced invalid addr 'union sctp_addr'
    |-DeclStmt 0x155141180 <line:5:2, col:42>
    | |-RecordDecl 0x155140d30 <col:2, col:9> col:9 struct sctp_af
    | `-VarDecl 0x155140e98 <col:2, col:40> col:18 used af 'struct sctp_af *' cinit
    |   `-CXXDependentScopeMemberExpr 0x155141120 <col:23, col:40> '<dependent type>' contains-errors lvalue ->af
    |     `-RecoveryExpr 0x1551410f8 <col:23, col:36> '<dependent type>' contains-errors lvalue
    |       `-CallExpr 0x1551410b8 <col:23, col:33> 'int'
    |         |-ImplicitCastExpr 0x1551410a0 <col:23> 'int (*)()' <FunctionToPointerDecay>
    |         | `-DeclRefExpr 0x155141030 <col:23> 'int ()' Function 0x155140f78 'sctp_sk' 'int ()'
    |         `-ImplicitCastExpr 0x1551410e0 <col:31> 'struct sock *' <LValueToRValue>
    |           `-DeclRefExpr 0x155141050 <col:31> 'struct sock *' lvalue ParmVar 0x155128648 'sk' 'struct sock *'
    |-CallExpr 0x155141250 <line:8:2, col:23> '<dependent type>' contains-errors
    | |-RecoveryExpr 0x1551411d0 <col:2, col:6> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x155141198 <col:2> 'struct sctp_af *' contains-errors lvalue Var 0x155140e98 'af' 'struct sctp_af *'
    | |-UnaryOperator 0x155141218 <col:14, col:15> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-RecoveryExpr 0x1551411f8 <col:15> '<dependent type>' contains-errors lvalue
    | `-DeclRefExpr 0x155141230 <col:21> 'struct sock *' lvalue ParmVar 0x155128648 'sk' 'struct sock *'
    |-BinaryOperator 0x1551414e8 <line:9:2, col:31> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x155141310 <col:2, col:10> '<dependent type>' contains-errors lvalue .sin_port
    | | `-CXXDependentScopeMemberExpr 0x1551412c8 <col:2, col:7> '<dependent type>' contains-errors lvalue .v4
    | |   `-RecoveryExpr 0x1551412a0 <col:2> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x155141280 <col:2> 'union sctp_addr' lvalue Var 0x155140c98 'addr' 'union sctp_addr'
    | `-CallExpr 0x155141490 <col:21, col:31> 'int'
    |   |-ImplicitCastExpr 0x155141478 <col:21> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x155141438 <col:21> 'int ()' Function 0x155141380 'htons' 'int ()'
    |   `-ImplicitCastExpr 0x1551414d0 <col:27> 'int' <IntegralCast>
    |     `-ImplicitCastExpr 0x1551414b8 <col:27> 'unsigned short' <LValueToRValue>
    |       `-DeclRefExpr 0x155141458 <col:27> 'unsigned short' lvalue ParmVar 0x1551286c8 'snum' 'unsigned short'
    |-BinaryOperator 0x1551416b0 <line:12:2, col:37> 'long' contains-errors '='
    | |-DeclRefExpr 0x155141508 <col:2> 'long' lvalue Var 0x155140b18 'ret' 'long'
    | `-CallExpr 0x155141680 <col:8, col:37> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x155141608 <col:8> 'int ()' Function 0x155141550 'sctp_get_port_local' 'int ()'
    |   |-DeclRefExpr 0x155141628 <col:28> 'struct sock *' lvalue ParmVar 0x155128648 'sk' 'struct sock *'
    |   `-UnaryOperator 0x155141668 <col:32, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x155141648 <col:33> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x155141798 <line:14:2, col:21>
      `-ParenExpr 0x155141778 <col:9, col:21> 'int'
        `-ConditionalOperator 0x155141748 <col:10, col:20> 'int'
          |-ImplicitCastExpr 0x155141730 <col:10> 'long' <LValueToRValue>
          | `-DeclRefExpr 0x1551416d0 <col:10> 'long' lvalue Var 0x155140b18 'ret' 'long'
          |-IntegerLiteral 0x1551416f0 <col:16> 'int' 1
          `-IntegerLiteral 0x155141710 <col:20> 'int' 0
