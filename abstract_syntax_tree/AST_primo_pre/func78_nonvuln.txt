`-FunctionDecl 0x15a128310  line:1:13 invalid msix_fire_vector_notifier 'void (int *, unsigned int, int)' static
  |-ParmVarDecl 0x15a128128 <col:39, col:50> col:50 referenced invalid dev 'int *'
  |-ParmVarDecl 0x15a1281a8 <line:2:39, col:52> col:52 used vector 'unsigned int'
  |-ParmVarDecl 0x15a128228 <col:60, col:65> col:65 invalid is_masked 'int'
  `-CompoundStmt 0x15a809660 <line:3:1, line:17:1>
    |-DeclStmt 0x15a128450 <line:5:5, col:12>
    | `-VarDecl 0x15a1283e8 <col:5, col:9> col:9 used ret 'int'
    |-IfStmt 0x15a128528 <line:7:5, line:9:5>
    | |-UnaryOperator 0x15a1284e8 <line:7:9, col:15> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x15a1284d0 <col:10, col:15> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-CXXDependentScopeMemberExpr 0x15a128488 <col:10, col:15> '<dependent type>' contains-errors lvalue ->msix_vector_use_notifier
    | |     `-RecoveryExpr 0x15a128468 <col:10> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x15a128510 <col:41, line:9:5>
    |   `-ReturnStmt 0x15a128500 <line:8:9>
    `-IfStmt 0x15a809630 <line:10:5, line:16:5> has_else
      |-RecoveryExpr 0x15a128548 <line:10:9> '<dependent type>' contains-errors lvalue
      |-CompoundStmt 0x15a128668 <col:20, line:12:5>
      | `-CallExpr 0x15a128638 <line:11:9, col:54> '<dependent type>' contains-errors
      |   |-CXXDependentScopeMemberExpr 0x15a1285b0 <col:9, col:14> '<dependent type>' contains-errors lvalue ->msix_vector_release_notifier
      |   | `-RecoveryExpr 0x15a128588 <col:9> '<dependent type>' contains-errors lvalue
      |   |   `-DeclRefExpr 0x15a128568 <col:9> 'int *' lvalue ParmVar 0x15a128128 'dev' 'int *'
      |   |-RecoveryExpr 0x15a1285f8 <col:43> '<dependent type>' contains-errors lvalue
      |   `-DeclRefExpr 0x15a128618 <col:48> 'unsigned int' lvalue ParmVar 0x15a1281a8 'vector' 'unsigned int'
      `-CompoundStmt 0x15a809610 <line:12:12, line:16:5>
        |-BinaryOperator 0x15a809400 <line:14:9, col:61> 'int' contains-errors '='
        | |-DeclRefExpr 0x15a809270 <col:9> 'int' lvalue Var 0x15a1283e8 'ret' 'int'
        | `-CallExpr 0x15a8093c8 <col:15, col:61> '<dependent type>' contains-errors
        |   |-CXXDependentScopeMemberExpr 0x15a8092b0 <col:15, col:20> '<dependent type>' contains-errors lvalue ->msix_vector_use_notifier
        |   | `-RecoveryExpr 0x15a809290 <col:15> '<dependent type>' contains-errors lvalue
        |   |-RecoveryExpr 0x15a8092f8 <col:45> '<dependent type>' contains-errors lvalue
        |   |-DeclRefExpr 0x15a809318 <col:50> 'unsigned int' lvalue ParmVar 0x15a1281a8 'vector' 'unsigned int'
        |   `-RecoveryExpr 0x15a8093a8 <col:58> '<dependent type>' contains-errors lvalue
        `-CallExpr 0x15a8095e8 <line:15:9, col:24> 'int'
          |-ImplicitCastExpr 0x15a8095d0 <col:9> 'int (*)()' <FunctionToPointerDecay>
          | `-DeclRefExpr 0x15a809500 <col:9> 'int ()' Function 0x15a809448 'assert' 'int ()'
          `-BinaryOperator 0x15a809578 <col:16, col:23> 'int' '>='
            |-ImplicitCastExpr 0x15a809560 <col:16> 'int' <LValueToRValue>
            | `-DeclRefExpr 0x15a809520 <col:16> 'int' lvalue Var 0x15a1283e8 'ret' 'int'
            `-IntegerLiteral 0x15a809540 <col:23> 'int' 0
