`-FunctionDecl 0x158944de8  line:1:5 simple_set_acl 'int (struct inode *, struct posix_acl *, int)'
  |-ParmVarDecl 0x158928648 <col:20, col:34> col:34 used inode 'struct inode *'
  |-ParmVarDecl 0x158944c28 <col:41, col:59> col:59 used acl 'struct posix_acl *'
  |-ParmVarDecl 0x158944ca8 <col:64, col:68> col:68 used type 'int'
  `-CompoundStmt 0x158945910 <line:2:1, line:16:1>
    |-DeclStmt 0x158944f70 <line:3:2, col:11>
    | `-VarDecl 0x158944f08 <col:2, col:6> col:6 used error 'int'
    |-IfStmt 0x158945498 <line:5:2, line:11:2>
    | |-BinaryOperator 0x158945018 <line:5:6, col:14> 'int' contains-errors '=='
    | | |-DeclRefExpr 0x158944f88 <col:6> 'int' lvalue ParmVar 0x158944ca8 'type' 'int'
    | | `-RecoveryExpr 0x158944ff8 <col:14> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x158945470 <col:31, line:11:2>
    |   |-BinaryOperator 0x158945258 <line:6:3, col:51> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x158945038 <col:3> 'int' lvalue Var 0x158944f08 'error' 'int'
    |   | `-CallExpr 0x158945228 <col:11, col:51> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x158945170 <col:11> 'int ()' Function 0x1589450b8 'posix_acl_equiv_mode' 'int ()'
    |   |   |-DeclRefExpr 0x158945190 <col:32> 'struct posix_acl *' lvalue ParmVar 0x158944c28 'acl' 'struct posix_acl *'
    |   |   `-UnaryOperator 0x158945210 <col:37, col:45> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |     `-RecoveryExpr 0x1589451e8 <col:38, col:45> '<dependent type>' contains-errors lvalue
    |   |       `-DeclRefExpr 0x1589451b0 <col:38> 'struct inode *' lvalue ParmVar 0x158928648 'inode' 'struct inode *'
    |   |-IfStmt 0x158945320 <line:7:3, line:8:11>
    |   | |-BinaryOperator 0x1589452d0 <line:7:7, col:15> 'int' '<'
    |   | | |-ImplicitCastExpr 0x1589452b8 <col:7> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x158945278 <col:7> 'int' lvalue Var 0x158944f08 'error' 'int'
    |   | | `-IntegerLiteral 0x158945298 <col:15> 'int' 0
    |   | `-ReturnStmt 0x158945310 <line:8:4, col:11>
    |   |   `-IntegerLiteral 0x1589452f0 <col:11> 'int' 0
    |   `-IfStmt 0x158945450 <line:9:3, line:10:10>
    |     |-BinaryOperator 0x158945398 <line:9:7, col:16> 'int' '=='
    |     | |-ImplicitCastExpr 0x158945380 <col:7> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x158945340 <col:7> 'int' lvalue Var 0x158944f08 'error' 'int'
    |     | `-IntegerLiteral 0x158945360 <col:16> 'int' 0
    |     `-BinaryOperator 0x158945430 <line:10:4, col:10> 'struct posix_acl *' contains-errors '='
    |       |-DeclRefExpr 0x1589453b8 <col:4> 'struct posix_acl *' lvalue ParmVar 0x158944c28 'acl' 'struct posix_acl *'
    |       `-RecoveryExpr 0x158945410 <col:10> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x1589456c8 <line:13:2, col:37> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x1589454f0 <col:2, col:9> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x1589454b8 <col:2> 'struct inode *' lvalue ParmVar 0x158928648 'inode' 'struct inode *'
    | `-CallExpr 0x158945688 <col:19, col:37> 'int'
    |   |-ImplicitCastExpr 0x158945670 <col:19> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x1589455f8 <col:19> 'int ()' Function 0x158945540 'current_time' 'int ()'
    |   `-ImplicitCastExpr 0x1589456b0 <col:32> 'struct inode *' <LValueToRValue>
    |     `-DeclRefExpr 0x158945618 <col:32> 'struct inode *' lvalue ParmVar 0x158928648 'inode' 'struct inode *'
    |-CallExpr 0x158945860 <line:14:2, col:33> 'int'
    | |-ImplicitCastExpr 0x158945848 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x1589457c8 <col:2> 'int ()' Function 0x158945710 'set_cached_acl' 'int ()'
    | |-ImplicitCastExpr 0x158945898 <col:17> 'struct inode *' <LValueToRValue>
    | | `-DeclRefExpr 0x1589457e8 <col:17> 'struct inode *' lvalue ParmVar 0x158928648 'inode' 'struct inode *'
    | |-ImplicitCastExpr 0x1589458b0 <col:24> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x158945808 <col:24> 'int' lvalue ParmVar 0x158944ca8 'type' 'int'
    | `-ImplicitCastExpr 0x1589458c8 <col:30> 'struct posix_acl *' <LValueToRValue>
    |   `-DeclRefExpr 0x158945828 <col:30> 'struct posix_acl *' lvalue ParmVar 0x158944c28 'acl' 'struct posix_acl *'
    `-ReturnStmt 0x158945900 <line:15:2, col:9>
      `-IntegerLiteral 0x1589458e0 <col:9> 'int' 0
