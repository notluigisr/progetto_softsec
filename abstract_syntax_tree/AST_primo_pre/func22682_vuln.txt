`-FunctionDecl 0x14f126378  line:1:25 invalid tjBufSizeYUV2 'int (int, int, int, int)'
  |-ParmVarDecl 0x14f1260f0 <col:39, col:43> col:43 used width 'int'
  |-ParmVarDecl 0x14f126170 <col:50, col:54> col:54 used pad 'int'
  |-ParmVarDecl 0x14f1261f0 <col:59, col:63> col:63 used height 'int'
  |-ParmVarDecl 0x14f126270 <line:2:39, col:43> col:43 used subsamp 'int'
  `-CompoundStmt 0x14e80c190 <line:3:1, line:21:1>
    |-DeclStmt 0x14f126600 <line:4:3, col:24>
    | |-VarDecl 0x14f126458 <col:3, col:16> col:7 used retval 'int' cinit
    | | `-IntegerLiteral 0x14f1264c0 <col:16> 'int' 0
    | |-VarDecl 0x14f1264f8 <col:3, col:19> col:19 used nc 'int'
    | `-VarDecl 0x14f126578 <col:3, col:23> col:23 used i 'int'
    |-IfStmt 0x14e80b468 <line:6:3, line:7:17>
    | |-BinaryOperator 0x14f1267b8 <line:6:7, col:33> 'int' contains-errors '||'
    | | |-BinaryOperator 0x14f126758 <col:7, col:17> 'int' '<'
    | | | |-ImplicitCastExpr 0x14f126740 <col:7> 'int' <LValueToRValue>
    | | | | `-DeclRefExpr 0x14f126618 <col:7> 'int' lvalue ParmVar 0x14f126270 'subsamp' 'int'
    | | | `-IntegerLiteral 0x14f126638 <col:17> 'int' 0
    | | `-BinaryOperator 0x14f126798 <col:22, col:33> 'int' contains-errors '>='
    | |   |-DeclRefExpr 0x14f126690 <col:22> 'int' lvalue ParmVar 0x14f126270 'subsamp' 'int'
    | |   `-RecoveryExpr 0x14f126778 <col:33> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x14e80b428 <line:7:5, col:17> 'int'
    |   |-ImplicitCastExpr 0x14e80b410 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x14e80b360 <col:5> 'int ()' Function 0x14e80b2a8 'THROWG' 'int ()'
    |   `-ImplicitCastExpr 0x14e80b450 <col:12> 'char *' <ArrayToPointerDecay>
    |     `-StringLiteral 0x14e80b3c0 <col:12> 'char[4]' lvalue "STR"
    |-ForStmt 0x14e80c0a0 <line:10:3, line:17:3>
    | |-BinaryOperator 0x14e80b5b0 <line:10:8, col:12> 'int' '='
    | | |-DeclRefExpr 0x14e80b570 <col:8> 'int' lvalue Var 0x14f126578 'i' 'int'
    | | `-IntegerLiteral 0x14e80b590 <col:12> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x14e80b640 <col:15, col:19> 'int' '<'
    | | |-ImplicitCastExpr 0x14e80b610 <col:15> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x14e80b5d0 <col:15> 'int' lvalue Var 0x14f126578 'i' 'int'
    | | `-ImplicitCastExpr 0x14e80b628 <col:19> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x14e80b5f0 <col:19> 'int' lvalue Var 0x14f1264f8 'nc' 'int'
    | |-UnaryOperator 0x14e80b680 <col:23, col:24> 'int' postfix '++'
    | | `-DeclRefExpr 0x14e80b660 <col:23> 'int' lvalue Var 0x14f126578 'i' 'int'
    | `-CompoundStmt 0x14e80c070 <col:28, line:17:3>
    |   |-DeclStmt 0x14e80b910 <line:11:5, col:45>
    |   | `-VarDecl 0x14e80b6b0 <col:5, col:44> col:9 used pw 'int' cinit
    |   |   `-CallExpr 0x14e80b890 <col:14, col:44> 'int'
    |   |     |-ImplicitCastExpr 0x14e80b878 <col:14> 'int (*)()' <FunctionToPointerDecay>
    |   |     | `-DeclRefExpr 0x14e80b7f8 <col:14> 'int ()' Function 0x14e80b740 'tjPlaneWidth' 'int ()'
    |   |     |-ImplicitCastExpr 0x14e80b8c8 <col:27> 'int' <LValueToRValue>
    |   |     | `-DeclRefExpr 0x14e80b818 <col:27> 'int' lvalue Var 0x14f126578 'i' 'int'
    |   |     |-ImplicitCastExpr 0x14e80b8e0 <col:30> 'int' <LValueToRValue>
    |   |     | `-DeclRefExpr 0x14e80b838 <col:30> 'int' lvalue ParmVar 0x14f1260f0 'width' 'int'
    |   |     `-ImplicitCastExpr 0x14e80b8f8 <col:37> 'int' <LValueToRValue>
    |   |       `-DeclRefExpr 0x14e80b858 <col:37> 'int' lvalue ParmVar 0x14f126270 'subsamp' 'int'
    |   |-DeclStmt 0x14e80bb60 <line:12:5, col:30>
    |   | `-VarDecl 0x14e80b940 <col:5, col:29> col:9 used stride 'int' cinit
    |   |   `-CallExpr 0x14e80bb00 <col:18, col:29> 'int'
    |   |     |-ImplicitCastExpr 0x14e80bae8 <col:18> 'int (*)()' <FunctionToPointerDecay>
    |   |     | `-DeclRefExpr 0x14e80ba88 <col:18> 'int ()' Function 0x14e80b9d0 'PAD' 'int ()'
    |   |     |-ImplicitCastExpr 0x14e80bb30 <col:22> 'int' <LValueToRValue>
    |   |     | `-DeclRefExpr 0x14e80baa8 <col:22> 'int' lvalue Var 0x14e80b6b0 'pw' 'int'
    |   |     `-ImplicitCastExpr 0x14e80bb48 <col:26> 'int' <LValueToRValue>
    |   |       `-DeclRefExpr 0x14e80bac8 <col:26> 'int' lvalue ParmVar 0x14f126170 'pad' 'int'
    |   |-DeclStmt 0x14e80bdf0 <line:13:5, col:47>
    |   | `-VarDecl 0x14e80bb90 <col:5, col:46> col:9 used ph 'int' cinit
    |   |   `-CallExpr 0x14e80bd70 <col:14, col:46> 'int'
    |   |     |-ImplicitCastExpr 0x14e80bd58 <col:14> 'int (*)()' <FunctionToPointerDecay>
    |   |     | `-DeclRefExpr 0x14e80bcd8 <col:14> 'int ()' Function 0x14e80bc20 'tjPlaneHeight' 'int ()'
    |   |     |-ImplicitCastExpr 0x14e80bda8 <col:28> 'int' <LValueToRValue>
    |   |     | `-DeclRefExpr 0x14e80bcf8 <col:28> 'int' lvalue Var 0x14f126578 'i' 'int'
    |   |     |-ImplicitCastExpr 0x14e80bdc0 <col:31> 'int' <LValueToRValue>
    |   |     | `-DeclRefExpr 0x14e80bd18 <col:31> 'int' lvalue ParmVar 0x14f1261f0 'height' 'int'
    |   |     `-ImplicitCastExpr 0x14e80bdd8 <col:39> 'int' <LValueToRValue>
    |   |       `-DeclRefExpr 0x14e80bd38 <col:39> 'int' lvalue ParmVar 0x14f126270 'subsamp' 'int'
    |   `-IfStmt 0x14e80c040 <line:15:5, line:16:29> has_else
    |     |-BinaryOperator 0x14e80bef8 <line:15:9, col:24> 'int' '||'
    |     | |-BinaryOperator 0x14e80be60 <col:9, col:14> 'int' '<'
    |     | | |-ImplicitCastExpr 0x14e80be48 <col:9> 'int' <LValueToRValue>
    |     | | | `-DeclRefExpr 0x14e80be08 <col:9> 'int' lvalue Var 0x14e80b6b0 'pw' 'int'
    |     | | `-IntegerLiteral 0x14e80be28 <col:14> 'int' 0
    |     | `-BinaryOperator 0x14e80bed8 <col:19, col:24> 'int' '<'
    |     |   |-ImplicitCastExpr 0x14e80bec0 <col:19> 'int' <LValueToRValue>
    |     |   | `-DeclRefExpr 0x14e80be80 <col:19> 'int' lvalue Var 0x14e80bb90 'ph' 'int'
    |     |   `-IntegerLiteral 0x14e80bea0 <col:24> 'int' 0
    |     |-ReturnStmt 0x14e80bf50 <col:27, col:35>
    |     | `-UnaryOperator 0x14e80bf38 <col:34, col:35> 'int' prefix '-'
    |     |   `-IntegerLiteral 0x14e80bf18 <col:35> 'int' 1
    |     `-CompoundAssignOperator 0x14e80c010 <line:16:10, col:29> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |       |-DeclRefExpr 0x14e80bf60 <col:10> 'int' lvalue Var 0x14f126458 'retval' 'int'
    |       `-BinaryOperator 0x14e80bff0 <col:20, col:29> 'int' '*'
    |         |-ImplicitCastExpr 0x14e80bfc0 <col:20> 'int' <LValueToRValue>
    |         | `-DeclRefExpr 0x14e80bf80 <col:20> 'int' lvalue Var 0x14e80b940 'stride' 'int'
    |         `-ImplicitCastExpr 0x14e80bfd8 <col:29> 'int' <LValueToRValue>
    |           `-DeclRefExpr 0x14e80bfa0 <col:29> 'int' lvalue Var 0x14e80bb90 'ph' 'int'
    `-LabelStmt 0x14e80c170 <line:19:1, line:20:10> 'bailout'
      `-ReturnStmt 0x14e80c110 <col:3, col:10>
        `-ImplicitCastExpr 0x14e80c0f8 <col:10> 'int' <LValueToRValue>
          `-DeclRefExpr 0x14e80c0d8 <col:10> 'int' lvalue Var 0x14f126458 'retval' 'int'
