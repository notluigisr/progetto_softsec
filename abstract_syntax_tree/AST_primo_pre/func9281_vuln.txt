`-FunctionDecl 0x126128438  line:1:13 invalid send_gradient_rect 'int (int *, int, int, int, int)' static
  |-ParmVarDecl 0x126128128 <col:32, col:42> col:42 referenced invalid vs 'int *'
  |-ParmVarDecl 0x1261281a8 <col:46, col:50> col:50 used x 'int'
  |-ParmVarDecl 0x126128228 <col:53, col:57> col:57 used y 'int'
  |-ParmVarDecl 0x1261282a8 <col:60, col:64> col:64 used w 'int'
  |-ParmVarDecl 0x126128328 <col:67, col:71> col:71 used h 'int'
  `-CompoundStmt 0x1261447f0 <line:2:1, line:34:1>
    |-DeclStmt 0x1261285a8 <line:3:5, col:19>
    | `-VarDecl 0x126128520 <col:5, col:18> col:9 used stream 'int' cinit
    |   `-IntegerLiteral 0x126128588 <col:18> 'int' 3
    |-DeclStmt 0x126128708 <line:4:5, col:70>
    | `-VarDecl 0x1261285d8 <col:5, col:9> col:9 used level 'int'
    |-IfStmt 0x126141af8 <line:7:5, line:8:51>
    | |-BinaryOperator 0x126141868 <line:7:9, col:44> 'int' contains-errors '=='
    | | |-CXXDependentScopeMemberExpr 0x126141800 <col:9, col:25> '<dependent type>' contains-errors lvalue .bytes_per_pixel
    | | | `-CXXDependentScopeMemberExpr 0x126128788 <col:9, col:22> '<dependent type>' contains-errors lvalue .pf
    | | |   `-CXXDependentScopeMemberExpr 0x126128740 <col:9, col:13> '<dependent type>' contains-errors lvalue ->clientds
    | | |     `-RecoveryExpr 0x126128720 <col:9> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x126141848 <col:44> 'int' 1
    | `-ReturnStmt 0x126141ae8 <line:8:9, col:51>
    |   `-CallExpr 0x126141aa0 <col:16, col:51> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x1261419e0 <col:16> 'int ()' Function 0x126141928 'send_full_color_rect' 'int ()'
    |     |-RecoveryExpr 0x126141a00 <col:37> '<dependent type>' contains-errors lvalue
    |     |-DeclRefExpr 0x126141a20 <col:41> 'int' lvalue ParmVar 0x1261281a8 'x' 'int'
    |     |-DeclRefExpr 0x126141a40 <col:44> 'int' lvalue ParmVar 0x126128228 'y' 'int'
    |     |-DeclRefExpr 0x126141a60 <col:47> 'int' lvalue ParmVar 0x1261282a8 'w' 'int'
    |     `-DeclRefExpr 0x126141a80 <col:50> 'int' lvalue ParmVar 0x126128328 'h' 'int'
    |-CallExpr 0x126141d58 <line:11:5, col:47> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x126141cb0 <col:5> 'int ()' Function 0x126141b40 'vnc_write_u8' 'int ()'
    | |-RecoveryExpr 0x126141cd0 <col:18> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x126141d38 <col:22> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x126142038 <line:13:5, col:61> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x126141e68 <col:5> 'int ()' Function 0x126141db0 'buffer_reserve' 'int ()'
    | |-UnaryOperator 0x126141f38 <col:20, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-CXXDependentScopeMemberExpr 0x126141ef0 <col:21, col:31> '<dependent type>' contains-errors lvalue .gradient
    | |   `-CXXDependentScopeMemberExpr 0x126141ea8 <col:21, col:25> '<dependent type>' contains-errors lvalue ->tight
    | |     `-RecoveryExpr 0x126141e88 <col:21> '<dependent type>' contains-errors lvalue
    | `-BinaryOperator 0x126142018 <col:41, col:60> 'unsigned long' '*'
    |   |-ImplicitCastExpr 0x126142000 <col:41, col:45> 'unsigned long' <IntegralCast>
    |   | `-BinaryOperator 0x126141fa8 <col:41, col:45> 'int' '*'
    |   |   |-ImplicitCastExpr 0x126141f90 <col:41> 'int' <LValueToRValue>
    |   |   | `-DeclRefExpr 0x126141f50 <col:41> 'int' lvalue ParmVar 0x1261282a8 'w' 'int'
    |   |   `-IntegerLiteral 0x126141f70 <col:45> 'int' 3
    |   `-UnaryExprOrTypeTraitExpr 0x126141fe0 <col:49, col:60> 'unsigned long' sizeof 'int'
    |-IfStmt 0x1261442a0 <line:15:5, line:24:5> has_else
    | |-CXXDependentScopeMemberExpr 0x1261420d0 <line:15:9, col:19> '<dependent type>' contains-errors lvalue .pixel24
    | | `-CXXDependentScopeMemberExpr 0x126142088 <col:9, col:13> '<dependent type>' contains-errors lvalue ->tight
    | |   `-RecoveryExpr 0x126142068 <col:9> '<dependent type>' contains-errors lvalue
    | |-CompoundStmt 0x1261423d0 <col:28, line:18:5>
    | | `-CallExpr 0x126142370 <line:16:9, col:65> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x1261421f8 <col:9> 'int ()' Function 0x126142140 'tight_filter_gradient24' 'int ()'
    | |   |-RecoveryExpr 0x126142218 <col:33> '<dependent type>' contains-errors lvalue
    | |   |-CXXDependentScopeMemberExpr 0x1261422e8 <col:37, col:53> '<dependent type>' contains-errors lvalue .buffer
    | |   | `-CXXDependentScopeMemberExpr 0x1261422a0 <col:37, col:47> '<dependent type>' contains-errors lvalue .tight
    | |   |   `-CXXDependentScopeMemberExpr 0x126142258 <col:37, col:41> '<dependent type>' contains-errors lvalue ->tight
    | |   |     `-RecoveryExpr 0x126142238 <col:37> '<dependent type>' contains-errors lvalue
    | |   |-DeclRefExpr 0x126142330 <col:61> 'int' lvalue ParmVar 0x1261282a8 'w' 'int'
    | |   `-DeclRefExpr 0x126142350 <col:64> 'int' lvalue ParmVar 0x126128328 'h' 'int'
    | `-IfStmt 0x126144270 <line:18:12, line:24:5> has_else
    |   |-BinaryOperator 0x126142500 <line:18:16, col:51> 'int' contains-errors '=='
    |   | |-CXXDependentScopeMemberExpr 0x126142498 <col:16, col:32> '<dependent type>' contains-errors lvalue .bytes_per_pixel
    |   | | `-CXXDependentScopeMemberExpr 0x126142450 <col:16, col:29> '<dependent type>' contains-errors lvalue .pf
    |   | |   `-CXXDependentScopeMemberExpr 0x126142408 <col:16, col:20> '<dependent type>' contains-errors lvalue ->clientds
    |   | |     `-RecoveryExpr 0x1261423e8 <col:16> '<dependent type>' contains-errors lvalue
    |   | `-IntegerLiteral 0x1261424e0 <col:51> 'int' 4
    |   |-CompoundStmt 0x1261426b8 <col:54, line:21:5>
    |   `-CompoundStmt 0x126144260 <col:12, line:24:5>
    `-CallExpr 0x126144498 <line:26:5, col:37> '<dependent type>' contains-errors
      |-DeclRefExpr 0x1261443b0 <col:5> 'int ()' Function 0x1261442f8 'buffer_reset' 'int ()'
      `-UnaryOperator 0x126144480 <col:18, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow
        `-CXXDependentScopeMemberExpr 0x126144438 <col:19, col:29> '<dependent type>' contains-errors lvalue .gradient
          `-CXXDependentScopeMemberExpr 0x1261443f0 <col:19, col:23> '<dependent type>' contains-errors lvalue ->tight
            `-RecoveryExpr 0x1261443d0 <col:19> '<dependent type>' contains-errors lvalue
