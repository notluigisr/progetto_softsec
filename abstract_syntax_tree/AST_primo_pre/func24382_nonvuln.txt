`-FunctionDecl 0x132827400  line:1:20 invalid get_lowest_part_y 'void (int *, int (*)[48], int, int, int, int, int, int *)' static inline
  |-ParmVarDecl 0x13280dd28 <col:38, col:51> col:51 invalid h 'int *'
  |-ParmVarDecl 0x13280df30 <col:54, col:68> col:58 used refs 'int (*)[48]'
  |-ParmVarDecl 0x13280dfb0 <col:71, col:75> col:75 used n 'int'
  |-ParmVarDecl 0x13280e030 <line:2:38, col:42> col:42 used height 'int'
  |-ParmVarDecl 0x13280e0b0 <col:50, col:54> col:54 used y_offset 'int'
  |-ParmVarDecl 0x13280e130 <col:64, col:68> col:68 used list0 'int'
  |-ParmVarDecl 0x13280e1b0 <line:3:38, col:42> col:42 used list1 'int'
  |-ParmVarDecl 0x13280e230 <col:49, col:54> col:54 used nrefs 'int *'
  `-CompoundStmt 0x13282a580 <line:4:1, line:37:1>
    |-DeclStmt 0x132827568 <line:5:5, col:11>
    | `-VarDecl 0x132827500 <col:5, col:9> col:9 used my 'int'
    |-CompoundAssignOperator 0x132827848 <line:7:5, col:45> 'int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | |-DeclRefExpr 0x132827580 <col:5> 'int' lvalue ParmVar 0x13280e0b0 'y_offset' 'int'
    | `-BinaryOperator 0x132827828 <col:17, col:45> '<dependent type>' contains-errors '*'
    |   |-IntegerLiteral 0x1328275a0 <col:17> 'int' 16
    |   `-ParenExpr 0x132827808 <col:22, col:45> '<dependent type>' contains-errors
    |     `-BinaryOperator 0x1328277e8 <col:23, col:44> '<dependent type>' contains-errors '>>'
    |       |-CXXDependentScopeMemberExpr 0x1328275e0 <col:23, col:26> '<dependent type>' contains-errors lvalue ->mb_y
    |       | `-RecoveryExpr 0x1328275c0 <col:23> '<dependent type>' contains-errors lvalue
    |       `-CallExpr 0x1328277c0 <col:34, col:44> '<dependent type>' contains-errors
    |         |-DeclRefExpr 0x132827780 <col:34> 'int ()' Function 0x1328276c8 'MB_FIELD' 'int ()'
    |         `-RecoveryExpr 0x1328277a0 <col:43> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x1328292d0 <line:9:5, line:23:5>
    | |-ImplicitCastExpr 0x132827898 <line:9:9> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x132827878 <col:9> 'int' lvalue ParmVar 0x13280e130 'list0' 'int'
    | `-CompoundStmt 0x1328292b0 <col:16, line:23:5>
    |   |-DeclStmt 0x132827a28 <line:10:9, col:49>
    |   | `-VarDecl 0x1328278c8 <col:9, col:13> col:13 used ref_n 'int'
    |   `-IfStmt 0x132829290 <line:16:9, line:22:9>
    |     |-RecoveryExpr 0x132827f88 <line:16:13, line:17:40> '_Bool' contains-errors
    |     `-CompoundStmt 0x132829268 <col:59, line:22:9>
    |       |-BinaryOperator 0x132828260 <line:18:13, col:71> 'int' contains-errors '='
    |       | |-DeclRefExpr 0x132827fa8 <col:13> 'int' lvalue Var 0x132827500 'my' 'int'
    |       | `-CallExpr 0x132828210 <col:18, col:71> '<dependent type>' contains-errors
    |       |   |-DeclRefExpr 0x1328280a8 <col:18> 'int ()' Function 0x132827ff0 'get_lowest_part_list_y' 'int ()'
    |       |   |-RecoveryExpr 0x1328280c8 <col:41> '<dependent type>' contains-errors lvalue
    |       |   |-DeclRefExpr 0x1328281f0 <col:44> 'int (*)[48]' lvalue ParmVar 0x13280df30 'refs' 'int (*)[48]'
    |       |   |-DeclRefExpr 0x132828100 <col:49> 'int' lvalue ParmVar 0x13280dfb0 'n' 'int'
    |       |   |-DeclRefExpr 0x132828120 <col:52> 'int' lvalue ParmVar 0x13280e030 'height' 'int'
    |       |   |-DeclRefExpr 0x132828140 <col:60> 'int' lvalue ParmVar 0x13280e0b0 'y_offset' 'int'
    |       |   `-IntegerLiteral 0x132828160 <col:70> 'int' 0
    |       |-IfStmt 0x132828e88 <line:19:13, line:20:29>
    |       | |-BinaryOperator 0x1328283a0 <line:19:17, col:34> 'int' '<'
    |       | | |-ImplicitCastExpr 0x132828388 <col:17, col:30> 'int' <LValueToRValue>
    |       | | | `-ArraySubscriptExpr 0x132828348 <col:17, col:30> 'int' lvalue
    |       | | |   |-ImplicitCastExpr 0x132828318 <col:17, col:23> 'int *' <ArrayToPointerDecay>
    |       | | |   | `-ArraySubscriptExpr 0x1328282d8 <col:17, col:23> 'int[48]' lvalue
    |       | | |   |   |-ImplicitCastExpr 0x1328282c0 <col:17> 'int (*)[48]' <LValueToRValue>
    |       | | |   |   | `-DeclRefExpr 0x132828280 <col:17> 'int (*)[48]' lvalue ParmVar 0x13280df30 'refs' 'int (*)[48]'
    |       | | |   |   `-IntegerLiteral 0x1328282a0 <col:22> 'int' 0
    |       | | |   `-ImplicitCastExpr 0x132828330 <col:25> 'int' <LValueToRValue>
    |       | | |     `-DeclRefExpr 0x1328282f8 <col:25> 'int' lvalue Var 0x1328278c8 'ref_n' 'int'
    |       | | `-IntegerLiteral 0x132828368 <col:34> 'int' 0
    |       | `-CompoundAssignOperator 0x132828e58 <line:20:17, col:29> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |       |   |-ArraySubscriptExpr 0x132828e18 <col:17, col:24> 'int' lvalue
    |       |   | |-ImplicitCastExpr 0x132828e00 <col:17> 'int *' <LValueToRValue>
    |       |   | | `-DeclRefExpr 0x1328283c0 <col:17> 'int *' lvalue ParmVar 0x13280e230 'nrefs' 'int *'
    |       |   | `-IntegerLiteral 0x1328283e0 <col:23> 'int' 0
    |       |   `-IntegerLiteral 0x132828e38 <col:29> 'int' 1
    |       `-BinaryOperator 0x132829248 <line:21:13, col:54> 'int' '='
    |         |-ArraySubscriptExpr 0x132828f70 <col:13, col:26> 'int' lvalue
    |         | |-ImplicitCastExpr 0x132828f40 <col:13, col:19> 'int *' <ArrayToPointerDecay>
    |         | | `-ArraySubscriptExpr 0x132828f00 <col:13, col:19> 'int[48]' lvalue
    |         | |   |-ImplicitCastExpr 0x132828ee8 <col:13> 'int (*)[48]' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x132828ea8 <col:13> 'int (*)[48]' lvalue ParmVar 0x13280df30 'refs' 'int (*)[48]'
    |         | |   `-IntegerLiteral 0x132828ec8 <col:18> 'int' 0
    |         | `-ImplicitCastExpr 0x132828f58 <col:21> 'int' <LValueToRValue>
    |         |   `-DeclRefExpr 0x132828f20 <col:21> 'int' lvalue Var 0x1328278c8 'ref_n' 'int'
    |         `-CallExpr 0x1328291e8 <col:30, col:54> 'int'
    |           |-ImplicitCastExpr 0x1328291d0 <col:30> 'int (*)()' <FunctionToPointerDecay>
    |           | `-DeclRefExpr 0x132829070 <col:30> 'int ()' Function 0x132828fb8 'FFMAX' 'int ()'
    |           |-ImplicitCastExpr 0x132829218 <col:36, col:49> 'int' <LValueToRValue>
    |           | `-ArraySubscriptExpr 0x132829158 <col:36, col:49> 'int' lvalue
    |           |   |-ImplicitCastExpr 0x132829128 <col:36, col:42> 'int *' <ArrayToPointerDecay>
    |           |   | `-ArraySubscriptExpr 0x1328290e8 <col:36, col:42> 'int[48]' lvalue
    |           |   |   |-ImplicitCastExpr 0x1328290d0 <col:36> 'int (*)[48]' <LValueToRValue>
    |           |   |   | `-DeclRefExpr 0x132829090 <col:36> 'int (*)[48]' lvalue ParmVar 0x13280df30 'refs' 'int (*)[48]'
    |           |   |   `-IntegerLiteral 0x1328290b0 <col:41> 'int' 0
    |           |   `-ImplicitCastExpr 0x132829140 <col:44> 'int' <LValueToRValue>
    |           |     `-DeclRefExpr 0x132829108 <col:44> 'int' lvalue Var 0x1328278c8 'ref_n' 'int'
    |           `-ImplicitCastExpr 0x132829230 <col:52> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x132829178 <col:52> 'int' lvalue Var 0x132827500 'my' 'int'
    `-IfStmt 0x13282a560 <line:25:5, line:36:5>
      |-ImplicitCastExpr 0x132829310 <line:25:9> 'int' <LValueToRValue>
      | `-DeclRefExpr 0x1328292f0 <col:9> 'int' lvalue ParmVar 0x13280e1b0 'list1' 'int'
      `-CompoundStmt 0x13282a540 <col:16, line:36:5>
        |-DeclStmt 0x1328294a0 <line:26:9, col:49>
        | `-VarDecl 0x132829340 <col:9, col:13> col:13 used ref_n 'int'
        `-IfStmt 0x13282a520 <line:29:9, line:35:9>
          |-RecoveryExpr 0x132829a00 <line:29:13, line:30:40> '_Bool' contains-errors
          `-CompoundStmt 0x13282a4f8 <col:59, line:35:9>
            |-BinaryOperator 0x132829bf8 <line:31:13, col:71> 'int' contains-errors '='
            | |-DeclRefExpr 0x132829a20 <col:13> 'int' lvalue Var 0x132827500 'my' 'int'
            | `-CallExpr 0x132829ba8 <col:18, col:71> '<dependent type>' contains-errors
            |   |-DeclRefExpr 0x132829a40 <col:18> 'int ()' Function 0x132827ff0 'get_lowest_part_list_y' 'int ()'
            |   |-RecoveryExpr 0x132829a60 <col:41> '<dependent type>' contains-errors lvalue
            |   |-DeclRefExpr 0x132829b88 <col:44> 'int (*)[48]' lvalue ParmVar 0x13280df30 'refs' 'int (*)[48]'
            |   |-DeclRefExpr 0x132829a98 <col:49> 'int' lvalue ParmVar 0x13280dfb0 'n' 'int'
            |   |-DeclRefExpr 0x132829ab8 <col:52> 'int' lvalue ParmVar 0x13280e030 'height' 'int'
            |   |-DeclRefExpr 0x132829ad8 <col:60> 'int' lvalue ParmVar 0x13280e0b0 'y_offset' 'int'
            |   `-IntegerLiteral 0x132829af8 <col:70> 'int' 1
            |-IfStmt 0x13282a230 <line:32:13, line:33:29>
            | |-BinaryOperator 0x132829d38 <line:32:17, col:34> 'int' '<'
            | | |-ImplicitCastExpr 0x132829d20 <col:17, col:30> 'int' <LValueToRValue>
            | | | `-ArraySubscriptExpr 0x132829ce0 <col:17, col:30> 'int' lvalue
            | | |   |-ImplicitCastExpr 0x132829cb0 <col:17, col:23> 'int *' <ArrayToPointerDecay>
            | | |   | `-ArraySubscriptExpr 0x132829c70 <col:17, col:23> 'int[48]' lvalue
            | | |   |   |-ImplicitCastExpr 0x132829c58 <col:17> 'int (*)[48]' <LValueToRValue>
            | | |   |   | `-DeclRefExpr 0x132829c18 <col:17> 'int (*)[48]' lvalue ParmVar 0x13280df30 'refs' 'int (*)[48]'
            | | |   |   `-IntegerLiteral 0x132829c38 <col:22> 'int' 1
            | | |   `-ImplicitCastExpr 0x132829cc8 <col:25> 'int' <LValueToRValue>
            | | |     `-DeclRefExpr 0x132829c90 <col:25> 'int' lvalue Var 0x132829340 'ref_n' 'int'
            | | `-IntegerLiteral 0x132829d00 <col:34> 'int' 0
            | `-CompoundAssignOperator 0x13282a200 <line:33:17, col:29> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
            |   |-ArraySubscriptExpr 0x132829db0 <col:17, col:24> 'int' lvalue
            |   | |-ImplicitCastExpr 0x132829d98 <col:17> 'int *' <LValueToRValue>
            |   | | `-DeclRefExpr 0x132829d58 <col:17> 'int *' lvalue ParmVar 0x13280e230 'nrefs' 'int *'
            |   | `-IntegerLiteral 0x132829d78 <col:23> 'int' 1
            |   `-IntegerLiteral 0x132829dd0 <col:29> 'int' 1
            `-BinaryOperator 0x13282a4d8 <line:34:13, col:54> 'int' '='
              |-ArraySubscriptExpr 0x13282a318 <col:13, col:26> 'int' lvalue
              | |-ImplicitCastExpr 0x13282a2e8 <col:13, col:19> 'int *' <ArrayToPointerDecay>
              | | `-ArraySubscriptExpr 0x13282a2a8 <col:13, col:19> 'int[48]' lvalue
              | |   |-ImplicitCastExpr 0x13282a290 <col:13> 'int (*)[48]' <LValueToRValue>
              | |   | `-DeclRefExpr 0x13282a250 <col:13> 'int (*)[48]' lvalue ParmVar 0x13280df30 'refs' 'int (*)[48]'
              | |   `-IntegerLiteral 0x13282a270 <col:18> 'int' 1
              | `-ImplicitCastExpr 0x13282a300 <col:21> 'int' <LValueToRValue>
              |   `-DeclRefExpr 0x13282a2c8 <col:21> 'int' lvalue Var 0x132829340 'ref_n' 'int'
              `-CallExpr 0x13282a478 <col:30, col:54> 'int'
                |-ImplicitCastExpr 0x13282a460 <col:30> 'int (*)()' <FunctionToPointerDecay>
                | `-DeclRefExpr 0x13282a338 <col:30> 'int ()' Function 0x132828fb8 'FFMAX' 'int ()'
                |-ImplicitCastExpr 0x13282a4a8 <col:36, col:49> 'int' <LValueToRValue>
                | `-ArraySubscriptExpr 0x13282a420 <col:36, col:49> 'int' lvalue
                |   |-ImplicitCastExpr 0x13282a3f0 <col:36, col:42> 'int *' <ArrayToPointerDecay>
                |   | `-ArraySubscriptExpr 0x13282a3b0 <col:36, col:42> 'int[48]' lvalue
                |   |   |-ImplicitCastExpr 0x13282a398 <col:36> 'int (*)[48]' <LValueToRValue>
                |   |   | `-DeclRefExpr 0x13282a358 <col:36> 'int (*)[48]' lvalue ParmVar 0x13280df30 'refs' 'int (*)[48]'
                |   |   `-IntegerLiteral 0x13282a378 <col:41> 'int' 1
                |   `-ImplicitCastExpr 0x13282a408 <col:44> 'int' <LValueToRValue>
                |     `-DeclRefExpr 0x13282a3d0 <col:44> 'int' lvalue Var 0x132829340 'ref_n' 'int'
                `-ImplicitCastExpr 0x13282a4c0 <col:52> 'int' <LValueToRValue>
                  `-DeclRefExpr 0x13282a440 <col:52> 'int' lvalue Var 0x132827500 'my' 'int'
