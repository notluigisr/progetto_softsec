`-FunctionDecl 0x14900df48  line:1:12 invalid x 'int (int *, unsigned char *, unsigned char *)' static
  |-ParmVarDecl 0x14900dd28 <col:14, col:23> col:23 invalid reg 'int *'
  |-ParmVarDecl 0x14900ddd8 <col:28, col:43> col:43 used pattern 'unsigned char *'
  |-ParmVarDecl 0x14900de58 <col:52, col:67> col:67 used str 'unsigned char *'
  `-CompoundStmt 0x14902a800 <line:2:1, line:24:1>
    |-DeclStmt 0x14900e120 <line:3:3, col:11>
    | |-VarDecl 0x14900e020 <col:3, col:7> col:7 used r 'int'
    | `-VarDecl 0x14900e0a0 <col:3, col:10> col:10 used i 'int'
    |-DeclStmt 0x14900e248 <line:4:3, col:16>
    | `-VarDecl 0x14900e1e0 <col:3, col:15> col:8 used buf 'char[200]'
    |-BinaryOperator 0x149027cf8 <line:7:3, col:60> 'int' contains-errors '='
    | |-DeclRefExpr 0x14900e260 <col:3> 'int' lvalue Var 0x14900e020 'r' 'int'
    | `-CallExpr 0x149027cb0 <col:7, col:60> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14900e3e0 <col:7> 'int ()' Function 0x14900e328 'regexec' 'int ()'
    |   |-RecoveryExpr 0x149027a00 <col:15> '<dependent type>' contains-errors lvalue
    |   |-CStyleCastExpr 0x149027c68 <col:20, col:28> 'char *' <BitCast>
    |   | `-ImplicitCastExpr 0x149027c50 <col:28> 'unsigned char *' <LValueToRValue> part_of_explicit_cast
    |   |   `-DeclRefExpr 0x149027a20 <col:28> 'unsigned char *' lvalue ParmVar 0x14900de58 'str' 'unsigned char *'
    |   |-BinaryOperator 0x149027b20 <col:33, col:48> '<dependent type>' contains-errors '+'
    |   | |-CXXDependentScopeMemberExpr 0x149027ab8 <col:33, col:38> '<dependent type>' contains-errors lvalue ->re_nsub
    |   | | `-RecoveryExpr 0x149027a98 <col:33> '<dependent type>' contains-errors lvalue
    |   | `-IntegerLiteral 0x149027b00 <col:48> 'int' 1
    |   |-RecoveryExpr 0x149027c90 <col:51> '<dependent type>' contains-errors lvalue
    |   `-IntegerLiteral 0x149027b58 <col:59> 'int' 0
    |-IfStmt 0x149028370 <line:8:3, line:12:3>
    | |-BinaryOperator 0x149027eb8 <line:8:7, col:22> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x149027e58 <col:7, col:12> 'int' '!='
    | | | |-ImplicitCastExpr 0x149027e40 <col:7> 'int' <LValueToRValue>
    | | | | `-DeclRefExpr 0x149027d18 <col:7> 'int' lvalue Var 0x14900e020 'r' 'int'
    | | | `-IntegerLiteral 0x149027d38 <col:12> 'int' 0
    | | `-BinaryOperator 0x149027e98 <col:17, col:22> 'int' contains-errors '!='
    | |   |-DeclRefExpr 0x149027d90 <col:17> 'int' lvalue Var 0x14900e020 'r' 'int'
    | |   `-RecoveryExpr 0x149027e78 <col:22> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x149028348 <col:35, line:12:3>
    |   |-CallExpr 0x149028098 <line:9:5, col:38> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x149027fb8 <col:5> 'int ()' Function 0x149027f00 'regerror' 'int ()'
    |   | |-DeclRefExpr 0x149027fd8 <col:14> 'int' lvalue Var 0x14900e020 'r' 'int'
    |   | |-RecoveryExpr 0x149027ff8 <col:17> '<dependent type>' contains-errors lvalue
    |   | |-DeclRefExpr 0x149028018 <col:22> 'char[200]' lvalue Var 0x14900e1e0 'buf' 'char[200]'
    |   | `-UnaryExprOrTypeTraitExpr 0x149028078 <col:27, col:37> 'unsigned long' sizeof
    |   |   `-ParenExpr 0x149028058 <col:33, col:37> 'char[200]' lvalue
    |   |     `-DeclRefExpr 0x149028038 <col:34> 'char[200]' lvalue Var 0x14900e1e0 'buf' 'char[200]' non_odr_use_unevaluated
    |   |-CallExpr 0x1490282c8 <line:10:5, col:31> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x1490281b8 <col:5> 'int ()' Function 0x149028100 'fprintf' 'int ()'
    |   | |-RecoveryExpr 0x1490282a8 <col:13> '<dependent type>' contains-errors lvalue
    |   | |-StringLiteral 0x149028230 <col:21> 'char[4]' lvalue "STR"
    |   | `-DeclRefExpr 0x149028250 <col:28> 'char[200]' lvalue Var 0x14900e1e0 'buf' 'char[200]'
    |   `-ReturnStmt 0x149028338 <line:11:5, col:13>
    |     `-UnaryOperator 0x149028320 <col:12, col:13> 'int' prefix '-'
    |       `-IntegerLiteral 0x149028300 <col:13> 'int' 1
    |-IfStmt 0x149028998 <line:14:3, line:22:3> has_else
    | |-BinaryOperator 0x149028408 <line:14:7, col:12> 'int' contains-errors '=='
    | | |-DeclRefExpr 0x149028390 <col:7> 'int' lvalue Var 0x14900e020 'r' 'int'
    | | `-RecoveryExpr 0x1490283e8 <col:12> '<dependent type>' contains-errors lvalue
    | |-CompoundStmt 0x149028560 <col:25, line:16:3>
    | | `-CallExpr 0x149028520 <line:15:5, col:40> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x149028428 <col:5> 'int ()' Function 0x149028100 'fprintf' 'int ()'
    | |   |-RecoveryExpr 0x149028500 <col:13> '<dependent type>' contains-errors lvalue
    | |   |-StringLiteral 0x149028460 <col:21> 'char[4]' lvalue "STR"
    | |   |-DeclRefExpr 0x149028480 <col:28> 'unsigned char *' lvalue ParmVar 0x14900ddd8 'pattern' 'unsigned char *'
    | |   `-DeclRefExpr 0x1490284a0 <col:37> 'unsigned char *' lvalue ParmVar 0x14900de58 'str' 'unsigned char *'
    | `-CompoundStmt 0x149028978 <line:17:8, line:22:3>
    |   |-CallExpr 0x149028670 <line:18:5, col:40> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x149028578 <col:5> 'int ()' Function 0x149028100 'fprintf' 'int ()'
    |   | |-RecoveryExpr 0x149028650 <col:13> '<dependent type>' contains-errors lvalue
    |   | |-StringLiteral 0x1490285b0 <col:21> 'char[4]' lvalue "STR"
    |   | |-DeclRefExpr 0x1490285d0 <col:28> 'unsigned char *' lvalue ParmVar 0x14900ddd8 'pattern' 'unsigned char *'
    |   | `-DeclRefExpr 0x1490285f0 <col:37> 'unsigned char *' lvalue ParmVar 0x14900de58 'str' 'unsigned char *'
    |   `-ForStmt 0x149028940 <line:19:5, line:21:5>
    |     |-BinaryOperator 0x1490286f0 <line:19:10, col:14> 'int' '='
    |     | |-DeclRefExpr 0x1490286b0 <col:10> 'int' lvalue Var 0x14900e0a0 'i' 'int'
    |     | `-IntegerLiteral 0x1490286d0 <col:14> 'int' 0
    |     |-<<<NULL>>>
    |     |-BinaryOperator 0x1490287f0 <col:17, col:33> 'int' contains-errors '<='
    |     | |-ImplicitCastExpr 0x1490287d8 <col:17> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x149028710 <col:17> 'int' lvalue Var 0x14900e0a0 'i' 'int'
    |     | `-CStyleCastExpr 0x1490287b0 <col:22, col:33> 'int' contains-errors <Dependent>
    |     |   `-CXXDependentScopeMemberExpr 0x149028750 <col:28, col:33> '<dependent type>' contains-errors lvalue ->re_nsub
    |     |     `-RecoveryExpr 0x149028730 <col:28> '<dependent type>' contains-errors lvalue
    |     |-UnaryOperator 0x149028830 <col:42, col:43> 'int' postfix '++'
    |     | `-DeclRefExpr 0x149028810 <col:42> 'int' lvalue Var 0x14900e0a0 'i' 'int'
    |     `-CompoundStmt 0x149028930 <col:47, line:21:5>
    `-ReturnStmt 0x1490289e8 <line:23:3, col:10>
      `-IntegerLiteral 0x1490289c8 <col:10> 'int' 0
