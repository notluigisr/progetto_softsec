`-FunctionDecl 0x14f910468  line:1:1 invalid sg_common_write 'int (int *, int *, unsigned char *, int, int)'
  |-ParmVarDecl 0x14f910128 <col:17, col:25> col:25 referenced invalid sfp 'int *'
  |-ParmVarDecl 0x14f9101a8 <col:30, col:43> col:43 referenced invalid srp 'int *'
  |-ParmVarDecl 0x14f910258 <line:2:3, col:18> col:18 used cmnd 'unsigned char *'
  |-ParmVarDecl 0x14f9102d8 <col:24, col:28> col:28 used timeout 'int'
  |-ParmVarDecl 0x14f910358 <col:37, col:41> col:41 blocking 'int'
  `-CompoundStmt 0x15001c920 <line:3:1, line:46:1>
    |-DeclStmt 0x14f910650 <line:4:2, col:16>
    | |-VarDecl 0x14f910550 <col:2, col:6> col:6 used k 'int'
    | `-VarDecl 0x14f9105d0 <col:2, col:9> col:9 used at_head 'int'
    |-BinaryOperator 0x150019b30 <line:8:2, col:31> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x150019a70 <col:2, col:12> '<dependent type>' contains-errors lvalue .cmd_opcode
    | | `-CXXDependentScopeMemberExpr 0x150019a28 <col:2, col:7> '<dependent type>' contains-errors lvalue ->data
    | |   `-RecoveryExpr 0x150019a00 <col:2> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x14f9107c0 <col:2> 'int *' lvalue ParmVar 0x14f9101a8 'srp' 'int *'
    | `-ArraySubscriptExpr 0x150019b10 <col:25, col:31> 'unsigned char' lvalue
    |   |-ImplicitCastExpr 0x150019af8 <col:25> 'unsigned char *' <LValueToRValue>
    |   | `-DeclRefExpr 0x150019ab8 <col:25> 'unsigned char *' lvalue ParmVar 0x14f910258 'cmnd' 'unsigned char *'
    |   `-IntegerLiteral 0x150019ad8 <col:30> 'int' 0
    |-BinaryOperator 0x15001a288 <line:20:2, col:28> 'int' contains-errors '='
    | |-DeclRefExpr 0x15001a0f8 <col:2> 'int' lvalue Var 0x14f910550 'k' 'int'
    | `-CallExpr 0x15001a258 <col:6, col:28> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x15001a1f8 <col:6> 'int ()' Function 0x15001a140 'sg_start_req' 'int ()'
    |   |-RecoveryExpr 0x15001a218 <col:19> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x15001a238 <col:24> 'unsigned char *' lvalue ParmVar 0x14f910258 'cmnd' 'unsigned char *'
    |-IfStmt 0x15001a6b8 <line:21:2, line:26:2>
    | |-ImplicitCastExpr 0x15001a2c8 <line:21:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x15001a2a8 <col:6> 'int' lvalue Var 0x14f910550 'k' 'int'
    | `-CompoundStmt 0x15001a690 <col:9, line:26:2>
    |   |-CallExpr 0x15001a4d0 <line:22:3, line:23:13> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x15001a2e0 <line:22:3> 'int ()' Function 0x150019cd8 'SCSI_LOG_TIMEOUT' 'int ()'
    |   | |-IntegerLiteral 0x15001a300 <col:20> 'int' 1
    |   | `-CallExpr 0x15001a490 <col:23, line:23:12> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x15001a320 <line:22:23> 'int ()' Function 0x150019df8 'sg_printk' 'int ()'
    |   |   |-RecoveryExpr 0x15001a470 <col:33> '<dependent type>' contains-errors lvalue
    |   |   |-CXXDependentScopeMemberExpr 0x15001a378 <col:44, col:49> '<dependent type>' contains-errors lvalue ->parentdp
    |   |   | `-RecoveryExpr 0x15001a358 <col:44> '<dependent type>' contains-errors lvalue
    |   |   |-StringLiteral 0x15001a3c0 <line:23:4> 'char[4]' lvalue "STR"
    |   |   `-DeclRefExpr 0x15001a3e0 <col:11> 'int' lvalue Var 0x14f910550 'k' 'int'
    |   |-CallExpr 0x15001a620 <line:24:3, col:24> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x15001a5e0 <col:3> 'int ()' Function 0x15001a528 'sg_finish_rem_req' 'int ()'
    |   | `-RecoveryExpr 0x15001a600 <col:21> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x15001a680 <line:25:3, col:10>
    |     `-ImplicitCastExpr 0x15001a668 <col:10> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x15001a648 <col:10> 'int' lvalue Var 0x14f910550 'k' 'int'
    |-IfStmt 0x15001c260 <line:27:2, line:32:2>
    | |-RecoveryExpr 0x15001a7d8 <line:27:6, col:33> '_Bool' contains-errors
    | `-CompoundStmt 0x15001c248 <col:36, line:32:2>
    |   `-CallExpr 0x15001c220 <line:30:3, col:24> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x15001a9c8 <col:3> 'int ()' Function 0x15001a528 'sg_finish_rem_req' 'int ()'
    |     `-RecoveryExpr 0x15001c200 <col:21> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x15001c478 <line:35:2, line:39:13> has_else
    | |-RecoveryExpr 0x15001c398 <line:35:6, line:36:36> '_Bool' contains-errors
    | |-BinaryOperator 0x15001c3f8 <line:37:3, col:13> 'int' '='
    | | |-DeclRefExpr 0x15001c3b8 <col:3> 'int' lvalue Var 0x14f9105d0 'at_head' 'int'
    | | `-IntegerLiteral 0x15001c3d8 <col:13> 'int' 0
    | `-BinaryOperator 0x15001c458 <line:39:3, col:13> 'int' '='
    |   |-DeclRefExpr 0x15001c418 <col:3> 'int' lvalue Var 0x14f9105d0 'at_head' 'int'
    |   `-IntegerLiteral 0x15001c438 <col:13> 'int' 1
    |-BinaryOperator 0x15001c5a0 <line:41:2, col:21> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x15001c538 <col:2, col:11> '<dependent type>' contains-errors lvalue ->timeout
    | | `-CXXDependentScopeMemberExpr 0x15001c4f0 <col:2, col:7> '<dependent type>' contains-errors lvalue ->rq
    | |   `-RecoveryExpr 0x15001c4c8 <col:2> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x15001c4a8 <col:2> 'int *' lvalue ParmVar 0x14f9101a8 'srp' 'int *'
    | `-DeclRefExpr 0x15001c580 <col:21> 'int' lvalue ParmVar 0x14f9102d8 'timeout' 'int'
    |-CallExpr 0x15001c740 <line:42:2, col:22> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x15001c6a0 <col:2> 'int ()' Function 0x15001c5e8 'kref_get' 'int ()'
    | `-UnaryOperator 0x15001c728 <col:11, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-CXXDependentScopeMemberExpr 0x15001c6e0 <col:12, col:17> '<dependent type>' contains-errors lvalue ->f_ref
    |     `-RecoveryExpr 0x15001c6c0 <col:12> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x15001c910 <line:45:2, col:9>
      `-IntegerLiteral 0x15001c8f0 <col:9> 'int' 0
