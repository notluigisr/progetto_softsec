`-FunctionDecl 0x1221283a0  line:1:6 invalid Huff_offsetTransmit 'void (int *, int, int *, int *)'
  |-ParmVarDecl 0x122128128 <col:27, col:35> col:35 invalid huff 'int *'
  |-ParmVarDecl 0x1221281a8 <col:41, col:45> col:45 used ch 'int'
  |-ParmVarDecl 0x122128228 <col:49, col:55> col:55 invalid fout 'int *'
  |-ParmVarDecl 0x1221282a8 <col:61, col:66> col:66 used offset 'int *'
  `-CompoundStmt 0x1228097a0 <col:74, line:5:1>
    |-CallExpr 0x122809640 <line:3:2, col:32> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x122128610 <col:2> 'int ()' Function 0x122128558 'send' 'int ()'
    | |-ArraySubscriptExpr 0x122809600 <col:7, col:19> '<dependent type>' contains-errors lvalue
    | | |-ImplicitCastExpr 0x1221287c8 <col:7, col:13> '<dependent type>' contains-errors <LValueToRValue>
    | | | `-CXXDependentScopeMemberExpr 0x122128650 <col:7, col:13> '<dependent type>' contains-errors lvalue ->loc
    | | |   `-RecoveryExpr 0x122128630 <col:7> '<dependent type>' contains-errors lvalue
    | | `-ImplicitCastExpr 0x1221287e0 <col:17> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x122128698 <col:17> 'int' lvalue ParmVar 0x1221281a8 'ch' 'int'
    | |-RecoveryExpr 0x122809620 <col:22> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x122128720 <col:28> '<dependent type>' contains-errors lvalue
    `-BinaryOperator 0x122809780 <line:4:2, col:12> 'int' contains-errors '='
      |-UnaryOperator 0x122809748 <col:2, col:3> 'int' lvalue prefix '*' cannot overflow
      | `-ImplicitCastExpr 0x122809730 <col:3> 'int *' <LValueToRValue>
      |   `-DeclRefExpr 0x122809678 <col:3> 'int *' lvalue ParmVar 0x1221282a8 'offset' 'int *'
      `-RecoveryExpr 0x122809760 <col:12> '<dependent type>' contains-errors lvalue
