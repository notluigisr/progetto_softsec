`-FunctionDecl 0x134808408  line:1:12 invalid sco_sock_sendmsg 'int (struct socket *, struct msghdr *, int)' static
  |-ParmVarDecl 0x13400e248 <col:29, col:44> col:44 used sock 'struct socket *'
  |-ParmVarDecl 0x134808228 <col:50, col:65> col:65 used msg 'struct msghdr *'
  |-ParmVarDecl 0x1348082c0 <line:2:8, col:15> col:15 invalid len 'int'
  `-CompoundStmt 0x134026dc0 <line:3:1, line:25:1>
    |-DeclStmt 0x134808718 <line:4:2, col:28>
    | |-RecordDecl 0x1348084c8 <col:2, col:9> col:9 struct sock
    | `-VarDecl 0x134808638 <col:2, col:26> col:15 used sk 'struct sock *' cinit
    |   `-RecoveryExpr 0x1348086d8 <col:20, col:26> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x1348086a0 <col:20> 'struct socket *' lvalue ParmVar 0x13400e248 'sock' 'struct socket *'
    |-DeclStmt 0x1348087b0 <line:5:2, col:9>
    | `-VarDecl 0x134808748 <col:2, col:6> col:6 used err 'int'
    |-CallExpr 0x134808a28 <line:7:2, col:24> 'int' contains-errors
    | |-ImplicitCastExpr 0x134808a10 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x134808920 <col:2> 'int ()' Function 0x134808868 'BT_DBG' 'int ()'
    | |-ImplicitCastExpr 0x134808a60 <col:9> 'char *' <ArrayToPointerDecay>
    | | `-StringLiteral 0x134808980 <col:9> 'char[4]' lvalue "STR"
    | |-ImplicitCastExpr 0x134808a78 <col:16> 'struct socket *' <LValueToRValue>
    | | `-DeclRefExpr 0x1348089a0 <col:16> 'struct socket *' lvalue ParmVar 0x13400e248 'sock' 'struct socket *'
    | `-ImplicitCastExpr 0x134808a90 <col:22> 'struct sock *' contains-errors <LValueToRValue>
    |   `-DeclRefExpr 0x1348089c0 <col:22> 'struct sock *' contains-errors lvalue Var 0x134808638 'sk' 'struct sock *'
    |-BinaryOperator 0x134808c40 <line:9:2, col:21> 'int' contains-errors '='
    | |-DeclRefExpr 0x134808aa8 <col:2> 'int' lvalue Var 0x134808748 'err' 'int'
    | `-CallExpr 0x134808c00 <col:8, col:21> 'int' contains-errors
    |   |-ImplicitCastExpr 0x134808be8 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x134808ba8 <col:8> 'int ()' Function 0x134808af0 'sock_error' 'int ()'
    |   `-ImplicitCastExpr 0x134808c28 <col:19> 'struct sock *' contains-errors <LValueToRValue>
    |     `-DeclRefExpr 0x134808bc8 <col:19> 'struct sock *' contains-errors lvalue Var 0x134808638 'sk' 'struct sock *'
    |-IfStmt 0x134808ce0 <line:10:2, line:11:10>
    | |-ImplicitCastExpr 0x134808c80 <line:10:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x134808c60 <col:6> 'int' lvalue Var 0x134808748 'err' 'int'
    | `-ReturnStmt 0x134808cd0 <line:11:3, col:10>
    |   `-ImplicitCastExpr 0x134808cb8 <col:10> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x134808c98 <col:10> 'int' lvalue Var 0x134808748 'err' 'int'
    |-IfStmt 0x134808e80 <line:13:2, line:14:11>
    | |-BinaryOperator 0x134808db8 <line:13:6, col:23> '<dependent type>' contains-errors '&'
    | | |-RecoveryExpr 0x134808d38 <col:6, col:11> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x134808d00 <col:6> 'struct msghdr *' lvalue ParmVar 0x134808228 'msg' 'struct msghdr *'
    | | `-RecoveryExpr 0x134808d98 <col:23> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x134808e70 <line:14:3, col:11>
    |   `-UnaryOperator 0x134808e58 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x134808e40 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x134808e20 <col:11> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x134808fd8 <line:16:2, col:14> 'int' contains-errors
    | |-ImplicitCastExpr 0x134808fc0 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x134808f80 <col:2> 'int ()' Function 0x134808ec8 'lock_sock' 'int ()'
    | `-ImplicitCastExpr 0x134809000 <col:12> 'struct sock *' contains-errors <LValueToRValue>
    |   `-DeclRefExpr 0x134808fa0 <col:12> 'struct sock *' contains-errors lvalue Var 0x134808638 'sk' 'struct sock *'
    |-IfStmt 0x134026bd0 <line:18:2, line:21:10> has_else
    | |-BinaryOperator 0x1348090d0 <line:18:6, col:22> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x134809050 <col:6, col:10> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x134809018 <col:6> 'struct sock *' contains-errors lvalue Var 0x134808638 'sk' 'struct sock *'
    | | `-RecoveryExpr 0x1348090b0 <col:22> '<dependent type>' contains-errors lvalue
    | |-BinaryOperator 0x134026ab8 <line:19:3, col:36> 'int' contains-errors '='
    | | |-DeclRefExpr 0x1348090f0 <col:3> 'int' lvalue Var 0x134808748 'err' 'int'
    | | `-CallExpr 0x134026a80 <col:9, col:36> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x134026a00 <col:9> 'int ()' Function 0x134809138 'sco_send_frame' 'int ()'
    | |   |-DeclRefExpr 0x134026a20 <col:24> 'struct sock *' contains-errors lvalue Var 0x134808638 'sk' 'struct sock *'
    | |   |-DeclRefExpr 0x134026a40 <col:28> 'struct msghdr *' lvalue ParmVar 0x134808228 'msg' 'struct msghdr *'
    | |   `-RecoveryExpr 0x134026a60 <col:33> '<dependent type>' contains-errors lvalue
    | `-BinaryOperator 0x134026bb0 <line:21:3, col:10> 'int' contains-errors '='
    |   |-DeclRefExpr 0x134026ad8 <col:3> 'int' lvalue Var 0x134808748 'err' 'int'
    |   `-UnaryOperator 0x134026b98 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x134026b80 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x134026b60 <col:10> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x134026d38 <line:23:2, col:17> 'int' contains-errors
    | |-ImplicitCastExpr 0x134026d20 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x134026ce0 <col:2> 'int ()' Function 0x134026c28 'release_sock' 'int ()'
    | `-ImplicitCastExpr 0x134026d60 <col:15> 'struct sock *' contains-errors <LValueToRValue>
    |   `-DeclRefExpr 0x134026d00 <col:15> 'struct sock *' contains-errors lvalue Var 0x134808638 'sk' 'struct sock *'
    `-ReturnStmt 0x134026db0 <line:24:2, col:9>
      `-ImplicitCastExpr 0x134026d98 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x134026d78 <col:9> 'int' lvalue Var 0x134808748 'err' 'int'
