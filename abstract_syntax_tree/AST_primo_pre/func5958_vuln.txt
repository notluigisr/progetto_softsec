`-FunctionDecl 0x12d026758  line:1:12 __mincore_unmapped_range 'int (unsigned long, unsigned long, struct vm_area_struct *, unsigned char *)' static
  |-ParmVarDecl 0x12d00dcd8 <col:37, col:51> col:51 used addr 'unsigned long'
  |-ParmVarDecl 0x12d00dd58 <col:57, col:71> col:71 used end 'unsigned long'
  |-ParmVarDecl 0x12d00e348 <line:2:5, col:28> col:28 used vma 'struct vm_area_struct *'
  |-ParmVarDecl 0x12d026600 <col:33, col:48> col:48 used vec 'unsigned char *'
  `-CompoundStmt 0x12d029538 <line:3:1, line:18:1>
    |-DeclStmt 0x12d026b08 <line:4:2, col:47>
    | `-VarDecl 0x12d026880 <col:2, col:37> col:16 used nr 'unsigned long' cinit
    |   `-BinaryOperator 0x12d026ae8 <col:21, col:37> '<dependent type>' contains-errors '>>'
    |     |-ParenExpr 0x12d026aa8 <col:21, col:32> 'unsigned long'
    |     | `-BinaryOperator 0x12d026a88 <col:22, col:28> 'unsigned long' '-'
    |     |   |-ImplicitCastExpr 0x12d026a58 <col:22> 'unsigned long' <LValueToRValue>
    |     |   | `-DeclRefExpr 0x12d0268e8 <col:22> 'unsigned long' lvalue ParmVar 0x12d00dd58 'end' 'unsigned long'
    |     |   `-ImplicitCastExpr 0x12d026a70 <col:28> 'unsigned long' <LValueToRValue>
    |     |     `-DeclRefExpr 0x12d026908 <col:28> 'unsigned long' lvalue ParmVar 0x12d00dcd8 'addr' 'unsigned long'
    |     `-RecoveryExpr 0x12d026ac8 <col:37> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x12d026ba0 <line:5:2, col:7>
    | `-VarDecl 0x12d026b38 <col:2, col:6> col:6 used i 'int'
    |-IfStmt 0x12d0294a8 <line:7:2, line:16:2> has_else
    | |-RecoveryExpr 0x12d026bf0 <line:7:6, col:11> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x12d026bb8 <col:6> 'struct vm_area_struct *' lvalue ParmVar 0x12d00e348 'vma' 'struct vm_area_struct *'
    | |-CompoundStmt 0x12d027408 <col:20, line:13:2>
    | | `-ForStmt 0x12d0273d0 <line:11:3, line:12:56>
    | |   |-BinaryOperator 0x12d026e78 <line:11:8, col:12> 'int' '='
    | |   | |-DeclRefExpr 0x12d026e38 <col:8> 'int' lvalue Var 0x12d026b38 'i' 'int'
    | |   | `-IntegerLiteral 0x12d026e58 <col:12> 'int' 0
    | |   |-<<<NULL>>>
    | |   |-BinaryOperator 0x12d026f20 <col:15, col:19> 'int' contains-errors '<'
    | |   | |-ImplicitCastExpr 0x12d026f08 <col:15> 'unsigned long' <IntegralCast>
    | |   | | `-ImplicitCastExpr 0x12d026ed8 <col:15> 'int' <LValueToRValue>
    | |   | |   `-DeclRefExpr 0x12d026e98 <col:15> 'int' lvalue Var 0x12d026b38 'i' 'int'
    | |   | `-ImplicitCastExpr 0x12d026ef0 <col:19> 'unsigned long' contains-errors <LValueToRValue>
    | |   |   `-DeclRefExpr 0x12d026eb8 <col:19> 'unsigned long' contains-errors lvalue Var 0x12d026880 'nr' 'unsigned long'
    | |   |-BinaryOperator 0x12d027000 <col:23, col:33> '<dependent type>' contains-errors ','
    | |   | |-UnaryOperator 0x12d026f60 <col:23, col:24> 'int' postfix '++'
    | |   | | `-DeclRefExpr 0x12d026f40 <col:23> 'int' lvalue Var 0x12d026b38 'i' 'int'
    | |   | `-UnaryOperator 0x12d026fe8 <col:28, col:33> '<dependent type>' contains-errors postfix '++' cannot overflow
    | |   |   `-RecoveryExpr 0x12d026fc8 <col:28> '<dependent type>' contains-errors lvalue
    | |   `-BinaryOperator 0x12d0273b0 <line:12:4, col:56> 'unsigned char' contains-errors '='
    | |     |-ArraySubscriptExpr 0x12d027340 <col:4, col:9> 'unsigned char' lvalue
    | |     | |-ImplicitCastExpr 0x12d027310 <col:4> 'unsigned char *' <LValueToRValue>
    | |     | | `-DeclRefExpr 0x12d027020 <col:4> 'unsigned char *' lvalue ParmVar 0x12d026600 'vec' 'unsigned char *'
    | |     | `-ImplicitCastExpr 0x12d027328 <col:8> 'int' <LValueToRValue>
    | |     |   `-DeclRefExpr 0x12d027040 <col:8> 'int' lvalue Var 0x12d026b38 'i' 'int'
    | |     `-CallExpr 0x12d027380 <col:13, col:56> '<dependent type>' contains-errors
    | |       |-DeclRefExpr 0x12d027190 <col:13> 'int ()' Function 0x12d0270d8 'mincore_page' 'int ()'
    | |       |-CXXDependentScopeMemberExpr 0x12d027210 <col:26, col:40> '<dependent type>' contains-errors lvalue ->f_mapping
    | |       | `-RecoveryExpr 0x12d0271e8 <col:26, col:31> '<dependent type>' contains-errors lvalue
    | |       |   `-DeclRefExpr 0x12d0271b0 <col:26> 'struct vm_area_struct *' lvalue ParmVar 0x12d00e348 'vma' 'struct vm_area_struct *'
    | |       `-RecoveryExpr 0x12d027360 <col:51> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x12d029490 <line:13:9, line:16:2>
    |   `-ForStmt 0x12d029458 <line:14:3, line:15:13>
    |     |-BinaryOperator 0x12d027460 <line:14:8, col:12> 'int' '='
    |     | |-DeclRefExpr 0x12d027420 <col:8> 'int' lvalue Var 0x12d026b38 'i' 'int'
    |     | `-IntegerLiteral 0x12d027440 <col:12> 'int' 0
    |     |-<<<NULL>>>
    |     |-BinaryOperator 0x12d027508 <col:15, col:19> 'int' contains-errors '<'
    |     | |-ImplicitCastExpr 0x12d0274f0 <col:15> 'unsigned long' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x12d0274c0 <col:15> 'int' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x12d027480 <col:15> 'int' lvalue Var 0x12d026b38 'i' 'int'
    |     | `-ImplicitCastExpr 0x12d0274d8 <col:19> 'unsigned long' contains-errors <LValueToRValue>
    |     |   `-DeclRefExpr 0x12d0274a0 <col:19> 'unsigned long' contains-errors lvalue Var 0x12d026880 'nr' 'unsigned long'
    |     |-UnaryOperator 0x12d027548 <col:23, col:24> 'int' postfix '++'
    |     | `-DeclRefExpr 0x12d027528 <col:23> 'int' lvalue Var 0x12d026b38 'i' 'int'
    |     `-BinaryOperator 0x12d029438 <line:15:4, col:13> 'unsigned char' '='
    |       |-ArraySubscriptExpr 0x12d0275d0 <col:4, col:9> 'unsigned char' lvalue
    |       | |-ImplicitCastExpr 0x12d0275a0 <col:4> 'unsigned char *' <LValueToRValue>
    |       | | `-DeclRefExpr 0x12d027560 <col:4> 'unsigned char *' lvalue ParmVar 0x12d026600 'vec' 'unsigned char *'
    |       | `-ImplicitCastExpr 0x12d0275b8 <col:8> 'int' <LValueToRValue>
    |       |   `-DeclRefExpr 0x12d027580 <col:8> 'int' lvalue Var 0x12d026b38 'i' 'int'
    |       `-ImplicitCastExpr 0x12d029420 <col:13> 'unsigned char' <IntegralCast>
    |         `-IntegerLiteral 0x12d029400 <col:13> 'int' 0
    `-ReturnStmt 0x12d029528 <line:17:2, col:9>
      `-ImplicitCastExpr 0x12d029510 <col:9> 'int' contains-errors <IntegralCast>
        `-ImplicitCastExpr 0x12d0294f8 <col:9> 'unsigned long' contains-errors <LValueToRValue>
          `-DeclRefExpr 0x12d0294d8 <col:9> 'unsigned long' contains-errors lvalue Var 0x12d026880 'nr' 'unsigned long'
