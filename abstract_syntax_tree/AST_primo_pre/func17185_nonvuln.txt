`-FunctionDecl 0x13b00ddb0  line:1:13 close_keyboard 'void (_Bool)' static
  |-ParmVarDecl 0x13b00dce8 <col:28, col:33> col:33 used new_line '_Bool'
  `-CompoundStmt 0x13b00e360 <line:2:1, line:5:1>
    |-CallExpr 0x13b00e0d8 <line:3:2, col:30> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13b00dfc0 <col:2> 'int ()' Function 0x13b00df08 'tcsetattr' 'int ()'
    | |-IntegerLiteral 0x13b00dfe0 <col:12> 'int' 0
    | |-RecoveryExpr 0x13b00e080 <col:14> '<dependent type>' contains-errors lvalue
    | `-UnaryOperator 0x13b00e0c0 <col:23, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x13b00e0a0 <col:24> '<dependent type>' contains-errors lvalue
    `-IfStmt 0x13b00e340 <line:4:2, col:37>
      |-ImplicitCastExpr 0x13b00e130 <col:6> '_Bool' <LValueToRValue>
      | `-DeclRefExpr 0x13b00e110 <col:6> '_Bool' lvalue ParmVar 0x13b00dce8 'new_line' '_Bool'
      `-CallExpr 0x13b00e310 <col:16, col:37> '<dependent type>' contains-errors
        |-DeclRefExpr 0x13b00e228 <col:16> 'int ()' Function 0x13b00e170 'fprintf' 'int ()'
        |-RecoveryExpr 0x13b00e2f0 <col:24> '<dependent type>' contains-errors lvalue
        `-StringLiteral 0x13b00e2a0 <col:32> 'char[4]' lvalue "STR"
