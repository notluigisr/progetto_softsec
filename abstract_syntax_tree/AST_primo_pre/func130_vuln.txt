`-FunctionDecl 0x145141188  line:1:1 invalid glue 'int (int (*)(), int)'
  |-ParmVarDecl 0x145128580 <col:6, <invalid sloc>> col:6 invalid glue 'int (*)()'
  |-ParmVarDecl 0x145128600 <col:52> col:52 _8 'int'
  `-CompoundStmt 0x145141a80 <line:8:1, line:27:1>
    |-DeclStmt 0x145141358 <line:9:5, col:12>
    | |-VarDecl 0x145141258 <col:5, col:9> col:9 used x 'int'
    | `-VarDecl 0x1451412d8 <col:5, col:11> col:11 used y 'int'
    |-IfStmt 0x145141458 <line:14:5, line:16:5>
    | |-RecoveryExpr 0x145141410 <line:14:9, col:55> '_Bool' contains-errors
    | `-CompoundStmt 0x145141440 <col:58, line:16:5>
    |   `-ReturnStmt 0x145141430 <line:15:9>
    `-ForStmt 0x145141a48 <line:18:5, line:26:5>
      |-BinaryOperator 0x1451414b8 <line:18:10, col:14> 'int' '='
      | |-DeclRefExpr 0x145141478 <col:10> 'int' lvalue Var 0x1451412d8 'y' 'int'
      | `-IntegerLiteral 0x145141498 <col:14> 'int' 0
      |-<<<NULL>>>
      |-BinaryOperator 0x145141550 <col:17, col:21> 'int' contains-errors '<'
      | |-DeclRefExpr 0x1451414d8 <col:17> 'int' lvalue Var 0x1451412d8 'y' 'int'
      | `-RecoveryExpr 0x145141530 <col:21> '<dependent type>' contains-errors lvalue
      |-UnaryOperator 0x145141590 <col:32, col:33> 'int' postfix '++'
      | `-DeclRefExpr 0x145141570 <col:32> 'int' lvalue Var 0x1451412d8 'y' 'int'
      `-CompoundStmt 0x145141a30 <col:37, line:26:5>
        `-ForStmt 0x1451419f8 <line:19:9, line:23:9>
          |-BinaryOperator 0x1451415e8 <line:19:14, col:18> 'int' '='
          | |-DeclRefExpr 0x1451415a8 <col:14> 'int' lvalue Var 0x145141258 'x' 'int'
          | `-IntegerLiteral 0x1451415c8 <col:18> 'int' 0
          |-<<<NULL>>>
          |-BinaryOperator 0x145141680 <col:21, col:25> 'int' contains-errors '<'
          | |-DeclRefExpr 0x145141608 <col:21> 'int' lvalue Var 0x145141258 'x' 'int'
          | `-RecoveryExpr 0x145141660 <col:25> '<dependent type>' contains-errors lvalue
          |-UnaryOperator 0x1451416c0 <col:35, col:36> 'int' postfix '++'
          | `-DeclRefExpr 0x1451416a0 <col:35> 'int' lvalue Var 0x145141258 'x' 'int'
          `-CompoundStmt 0x1451419e0 <col:40, line:23:9>
            `-CallExpr 0x1451419a0 <line:20:13, col:47> '<dependent type>' contains-errors
              |-DeclRefExpr 0x145141800 <col:13> 'int ()' Function 0x145141748 'ROP_OP_TR' 'int ()'
              |-RecoveryExpr 0x1451418f0 <col:23> '<dependent type>' contains-errors lvalue
              |-RecoveryExpr 0x145141910 <col:26> '<dependent type>' contains-errors lvalue
              |-UnaryOperator 0x145141968 <col:35, col:36> '<dependent type>' contains-errors prefix '*' cannot overflow
              | `-ImplicitCastExpr 0x145141950 <col:36> '<dependent type>' contains-errors <LValueToRValue>
              |   `-RecoveryExpr 0x145141930 <col:36> '<dependent type>' contains-errors lvalue
              `-RecoveryExpr 0x145141980 <col:41> '<dependent type>' contains-errors lvalue
