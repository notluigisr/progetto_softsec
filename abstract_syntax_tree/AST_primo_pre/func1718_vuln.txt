`-FunctionDecl 0x15782b7d8  line:1:1 invalid isofs_export_encode_fh 'int (struct inode *, int *, int *, struct inode *)'
  |-ParmVarDecl 0x15780e248 <col:24, col:38> col:38 used inode 'struct inode *'
  |-ParmVarDecl 0x15780e318 <line:2:10, col:17> col:17 referenced invalid fh32 'int *'
  |-ParmVarDecl 0x15780e398 <line:3:10, col:15> col:15 used max_len 'int *'
  |-ParmVarDecl 0x15782b688 <line:4:10, col:24> col:24 used parent 'struct inode *'
  `-CompoundStmt 0x1608093f8 <line:5:1, line:35:1>
    |-DeclStmt 0x15782bcc8 <line:6:2, col:45>
    | |-RecordDecl 0x15782b8a0 <col:2, col:9> col:9 struct iso_inode_info
    | `-VarDecl 0x15782ba08 <col:2, col:44> col:26 used ei 'struct iso_inode_info *' cinit
    |   `-ImplicitCastExpr 0x15782bc98 <col:31, col:44> 'struct iso_inode_info *' <IntegralToPointer>
    |     `-CallExpr 0x15782bc58 <col:31, col:44> 'int'
    |       |-ImplicitCastExpr 0x15782bc40 <col:31> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x15782bbd0 <col:31> 'int ()' Function 0x15782bb18 'ISOFS_I' 'int ()'
    |       `-ImplicitCastExpr 0x15782bc80 <col:39> 'struct inode *' <LValueToRValue>
    |         `-DeclRefExpr 0x15782bbf0 <col:39> 'struct inode *' lvalue ParmVar 0x15780e248 'inode' 'struct inode *'
    |-DeclStmt 0x15782bdc8 <line:7:2, col:20>
    | `-VarDecl 0x15782bcf8 <col:2, col:13> col:6 used len 'int' cinit
    |   `-ImplicitCastExpr 0x15782bdb0 <col:12, col:13> 'int' <LValueToRValue>
    |     `-UnaryOperator 0x15782bd98 <col:12, col:13> 'int' lvalue prefix '*' cannot overflow
    |       `-ImplicitCastExpr 0x15782bd80 <col:13> 'int *' <LValueToRValue>
    |         `-DeclRefExpr 0x15782bd60 <col:13> 'int *' lvalue ParmVar 0x15780e398 'max_len' 'int *'
    |-DeclStmt 0x15782be80 <line:8:2, col:14>
    | `-VarDecl 0x15782bdf8 <col:2, col:13> col:6 used type 'int' cinit
    |   `-IntegerLiteral 0x15782be60 <col:13> 'int' 1
    |-IfStmt 0x15782c230 <line:12:2, line:18:2> has_else
    | |-BinaryOperator 0x15782bfb8 <line:12:6, col:24> 'int' '&&'
    | | |-ImplicitCastExpr 0x15782bfa0 <col:6> 'struct inode *' <LValueToRValue>
    | | | `-DeclRefExpr 0x15782bee8 <col:6> 'struct inode *' lvalue ParmVar 0x15782b688 'parent' 'struct inode *'
    | | `-ParenExpr 0x15782bf80 <col:16, col:24> 'int'
    | |   `-BinaryOperator 0x15782bf60 <col:17, col:23> 'int' '<'
    | |     |-ImplicitCastExpr 0x15782bf48 <col:17> 'int' <LValueToRValue>
    | |     | `-DeclRefExpr 0x15782bf08 <col:17> 'int' lvalue Var 0x15782bcf8 'len' 'int'
    | |     `-IntegerLiteral 0x15782bf28 <col:23> 'int' 5
    | |-CompoundStmt 0x15782c098 <col:27, line:15:2>
    | | |-BinaryOperator 0x15782c048 <line:13:3, col:14> 'int' '='
    | | | |-UnaryOperator 0x15782c010 <col:3, col:4> 'int' lvalue prefix '*' cannot overflow
    | | | | `-ImplicitCastExpr 0x15782bff8 <col:4> 'int *' <LValueToRValue>
    | | | |   `-DeclRefExpr 0x15782bfd8 <col:4> 'int *' lvalue ParmVar 0x15780e398 'max_len' 'int *'
    | | | `-IntegerLiteral 0x15782c028 <col:14> 'int' 5
    | | `-ReturnStmt 0x15782c088 <line:14:3, col:10>
    | |   `-IntegerLiteral 0x15782c068 <col:10> 'int' 255
    | `-IfStmt 0x15782c210 <line:15:9, line:18:2>
    |   |-BinaryOperator 0x15782c110 <line:15:13, col:19> 'int' '<'
    |   | |-ImplicitCastExpr 0x15782c0f8 <col:13> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x15782c0b8 <col:13> 'int' lvalue Var 0x15782bcf8 'len' 'int'
    |   | `-IntegerLiteral 0x15782c0d8 <col:19> 'int' 3
    |   `-CompoundStmt 0x15782c1f0 <col:22, line:18:2>
    |     |-BinaryOperator 0x15782c1a0 <line:16:3, col:14> 'int' '='
    |     | |-UnaryOperator 0x15782c168 <col:3, col:4> 'int' lvalue prefix '*' cannot overflow
    |     | | `-ImplicitCastExpr 0x15782c150 <col:4> 'int *' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x15782c130 <col:4> 'int *' lvalue ParmVar 0x15780e398 'max_len' 'int *'
    |     | `-IntegerLiteral 0x15782c180 <col:14> 'int' 3
    |     `-ReturnStmt 0x15782c1e0 <line:17:3, col:10>
    |       `-IntegerLiteral 0x15782c1c0 <col:10> 'int' 255
    |-BinaryOperator 0x15782c2a0 <line:20:2, col:8> 'int' '='
    | |-DeclRefExpr 0x15782c260 <col:2> 'int' lvalue Var 0x15782bcf8 'len' 'int'
    | `-IntegerLiteral 0x15782c280 <col:8> 'int' 3
    |-BinaryOperator 0x15782c3c0 <line:21:2, col:16> '<dependent type>' contains-errors '='
    | |-ArraySubscriptExpr 0x15782c340 <col:2, col:8> '<dependent type>' contains-errors lvalue
    | | |-ImplicitCastExpr 0x15782c328 <col:2> '<dependent type>' contains-errors <LValueToRValue>
    | | | `-RecoveryExpr 0x15782c2e0 <col:2> '<dependent type>' contains-errors lvalue
    | | |   `-DeclRefExpr 0x15782c2c0 <col:2> 'int *' lvalue ParmVar 0x15780e318 'fh32' 'int *'
    | | `-IntegerLiteral 0x15782c308 <col:7> 'int' 0
    | `-RecoveryExpr 0x15782c398 <col:12, col:16> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x15782c360 <col:12> 'struct iso_inode_info *' lvalue Var 0x15782ba08 'ei' 'struct iso_inode_info *'
    |-BinaryOperator 0x15782c518 <line:23:2, col:19> '<dependent type>' contains-errors '='
    | |-ArraySubscriptExpr 0x15782c498 <col:2, col:8> '<dependent type>' contains-errors lvalue
    | | |-ImplicitCastExpr 0x15782c480 <col:2> '<dependent type>' contains-errors <LValueToRValue>
    | | | `-RecoveryExpr 0x15782c438 <col:2> '<dependent type>' contains-errors lvalue
    | | |   `-DeclRefExpr 0x15782c418 <col:2> 'int *' lvalue ParmVar 0x15780e318 'fh32' 'int *'
    | | `-IntegerLiteral 0x15782c460 <col:7> 'int' 2
    | `-RecoveryExpr 0x15782c4f0 <col:12, col:19> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x15782c4b8 <col:12> 'struct inode *' lvalue ParmVar 0x15780e248 'inode' 'struct inode *'
    |-IfStmt 0x1608092e8 <line:24:2, line:32:2>
    | |-ImplicitCastExpr 0x15782c558 <line:24:6> 'struct inode *' <LValueToRValue>
    | | `-DeclRefExpr 0x15782c538 <col:6> 'struct inode *' lvalue ParmVar 0x15782b688 'parent' 'struct inode *'
    | `-CompoundStmt 0x1608092a8 <col:14, line:32:2>
    |   |-DeclStmt 0x160808e68 <line:25:3, col:33>
    |   | `-VarDecl 0x160808e00 <col:3, col:26> col:26 used eparent 'struct iso_inode_info *'
    |   |-BinaryOperator 0x160808f50 <line:26:3, col:27> 'struct iso_inode_info *' '='
    |   | |-DeclRefExpr 0x160808e80 <col:3> 'struct iso_inode_info *' lvalue Var 0x160808e00 'eparent' 'struct iso_inode_info *'
    |   | `-ImplicitCastExpr 0x160808f38 <col:13, col:27> 'struct iso_inode_info *' <IntegralToPointer>
    |   |   `-CallExpr 0x160808ef8 <col:13, col:27> 'int'
    |   |     |-ImplicitCastExpr 0x160808ee0 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |   |     | `-DeclRefExpr 0x160808ea0 <col:13> 'int ()' Function 0x15782bb18 'ISOFS_I' 'int ()'
    |   |     `-ImplicitCastExpr 0x160808f20 <col:21> 'struct inode *' <LValueToRValue>
    |   |       `-DeclRefExpr 0x160808ec0 <col:21> 'struct inode *' lvalue ParmVar 0x15782b688 'parent' 'struct inode *'
    |   |-BinaryOperator 0x160809070 <line:27:3, col:22> '<dependent type>' contains-errors '='
    |   | |-ArraySubscriptExpr 0x160808ff0 <col:3, col:9> '<dependent type>' contains-errors lvalue
    |   | | |-ImplicitCastExpr 0x160808fd8 <col:3> '<dependent type>' contains-errors <LValueToRValue>
    |   | | | `-RecoveryExpr 0x160808f90 <col:3> '<dependent type>' contains-errors lvalue
    |   | | |   `-DeclRefExpr 0x160808f70 <col:3> 'int *' lvalue ParmVar 0x15780e318 'fh32' 'int *'
    |   | | `-IntegerLiteral 0x160808fb8 <col:8> 'int' 3
    |   | `-RecoveryExpr 0x160809048 <col:13, col:22> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x160809010 <col:13> 'struct iso_inode_info *' lvalue Var 0x160808e00 'eparent' 'struct iso_inode_info *'
    |   |-BinaryOperator 0x1608091c8 <line:29:3, col:21> '<dependent type>' contains-errors '='
    |   | |-ArraySubscriptExpr 0x160809148 <col:3, col:9> '<dependent type>' contains-errors lvalue
    |   | | |-ImplicitCastExpr 0x160809130 <col:3> '<dependent type>' contains-errors <LValueToRValue>
    |   | | | `-RecoveryExpr 0x1608090e8 <col:3> '<dependent type>' contains-errors lvalue
    |   | | |   `-DeclRefExpr 0x1608090c8 <col:3> 'int *' lvalue ParmVar 0x15780e318 'fh32' 'int *'
    |   | | `-IntegerLiteral 0x160809110 <col:8> 'int' 4
    |   | `-RecoveryExpr 0x1608091a0 <col:13, col:21> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x160809168 <col:13> 'struct inode *' lvalue ParmVar 0x15782b688 'parent' 'struct inode *'
    |   |-BinaryOperator 0x160809228 <line:30:3, col:9> 'int' '='
    |   | |-DeclRefExpr 0x1608091e8 <col:3> 'int' lvalue Var 0x15782bcf8 'len' 'int'
    |   | `-IntegerLiteral 0x160809208 <col:9> 'int' 5
    |   `-BinaryOperator 0x160809288 <line:31:3, col:10> 'int' '='
    |     |-DeclRefExpr 0x160809248 <col:3> 'int' lvalue Var 0x15782bdf8 'type' 'int'
    |     `-IntegerLiteral 0x160809268 <col:10> 'int' 2
    |-BinaryOperator 0x160809390 <line:33:2, col:13> 'int' '='
    | |-UnaryOperator 0x160809340 <col:2, col:3> 'int' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x160809328 <col:3> 'int *' <LValueToRValue>
    | |   `-DeclRefExpr 0x160809308 <col:3> 'int *' lvalue ParmVar 0x15780e398 'max_len' 'int *'
    | `-ImplicitCastExpr 0x160809378 <col:13> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x160809358 <col:13> 'int' lvalue Var 0x15782bcf8 'len' 'int'
    `-ReturnStmt 0x1608093e8 <line:34:2, col:9>
      `-ImplicitCastExpr 0x1608093d0 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x1608093b0 <col:9> 'int' lvalue Var 0x15782bdf8 'type' 'int'
