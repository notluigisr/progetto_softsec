`-FunctionDecl 0x14580df18  line:1:1 invalid gs_output_page 'int (int *, int, int)'
  |-ParmVarDecl 0x14580dd28 <col:16, col:28> col:28 invalid pgs 'int *'
  |-ParmVarDecl 0x14580dda8 <col:33, col:37> col:37 used num_copies 'int'
  |-ParmVarDecl 0x14580de28 <col:49, col:53> col:53 used flush 'int'
  `-CompoundStmt 0x145829ea8 <line:2:1, line:38:1>
    |-DeclStmt 0x14580e250 <line:5:5, col:13>
    | `-VarDecl 0x14580e1e8 <col:5, col:9> col:9 used code 'int'
    |-BinaryOperator 0x14580e3d0 <line:10:5, col:24> 'int' contains-errors '='
    | |-DeclRefExpr 0x14580e268 <col:5> 'int' lvalue Var 0x14580e1e8 'code' 'int'
    | `-CallExpr 0x14580e3a8 <col:12, col:24> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14580e368 <col:12> 'int ()' Function 0x14580e2b0 'gs_gsave' 'int ()'
    |   `-RecoveryExpr 0x14580e388 <col:21> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x1458278c0 <line:11:5, line:12:16>
    | |-BinaryOperator 0x145827858 <line:11:9, col:16> 'int' '<'
    | | |-ImplicitCastExpr 0x145827840 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x145827800 <col:9> 'int' lvalue Var 0x14580e1e8 'code' 'int'
    | | `-IntegerLiteral 0x145827820 <col:16> 'int' 0
    | `-ReturnStmt 0x1458278b0 <line:12:9, col:16>
    |   `-ImplicitCastExpr 0x145827898 <col:16> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x145827878 <col:16> 'int' lvalue Var 0x14580e1e8 'code' 'int'
    |-IfStmt 0x145828388 <line:13:5, line:20:5>
    | |-BinaryOperator 0x1458281b8 <line:13:9, line:16:31> 'int' contains-errors '||'
    | | |-BinaryOperator 0x145827f90 <line:13:9, line:15:39> 'int' contains-errors '||'
    | | | |-BinaryOperator 0x145827d40 <line:13:9, line:14:47> 'int' contains-errors '||'
    | | | | |-ParenExpr 0x145827ac8 <line:13:9, col:38> 'int' contains-errors
    | | | | | `-BinaryOperator 0x145827aa8 <col:10, col:37> 'int' contains-errors '<'
    | | | | |   |-ParenExpr 0x145827a68 <col:10, col:33> 'int' contains-errors
    | | | | |   | `-BinaryOperator 0x145827a48 <col:11, col:32> 'int' contains-errors '='
    | | | | |   |   |-DeclRefExpr 0x1458278e0 <col:11> 'int' lvalue Var 0x14580e1e8 'code' 'int'
    | | | | |   |   `-CallExpr 0x145827a20 <col:18, col:32> '<dependent type>' contains-errors
    | | | | |   |     |-DeclRefExpr 0x1458279e0 <col:18> 'int ()' Function 0x145827928 'gs_newpath' 'int ()'
    | | | | |   |     `-RecoveryExpr 0x145827a00 <col:29> '<dependent type>' contains-errors lvalue
    | | | | |   `-IntegerLiteral 0x145827a88 <col:37> 'int' 0
    | | | | `-ParenExpr 0x145827d20 <line:14:9, col:47> 'int' contains-errors
    | | | |   `-BinaryOperator 0x145827d00 <col:10, col:46> 'int' contains-errors '<'
    | | | |     |-ParenExpr 0x145827cc0 <col:10, col:42> 'int' contains-errors
    | | | |     | `-BinaryOperator 0x145827ca0 <col:11, col:41> 'int' contains-errors '='
    | | | |     |   |-DeclRefExpr 0x145827ae8 <col:11> 'int' lvalue Var 0x14580e1e8 'code' 'int'
    | | | |     |   `-CallExpr 0x145827c68 <col:18, col:41> '<dependent type>' contains-errors
    | | | |     |     |-DeclRefExpr 0x145827be8 <col:18> 'int ()' Function 0x145827b30 'gs_moveto' 'int ()'
    | | | |     |     |-RecoveryExpr 0x145827c08 <col:28> '<dependent type>' contains-errors lvalue
    | | | |     |     |-FloatingLiteral 0x145827c28 <col:33> 'double' 0.000000e+00
    | | | |     |     `-FloatingLiteral 0x145827c48 <col:38> 'double' 0.000000e+00
    | | | |     `-IntegerLiteral 0x145827ce0 <col:46> 'int' 0
    | | | `-ParenExpr 0x145827f70 <line:15:5, col:39> 'int' contains-errors
    | | |   `-BinaryOperator 0x145827f50 <col:6, col:38> 'int' contains-errors '<'
    | | |     |-ParenExpr 0x145827f10 <col:6, col:34> 'int' contains-errors
    | | |     | `-BinaryOperator 0x145827ef0 <col:7, col:33> 'int' contains-errors '='
    | | |     |   |-DeclRefExpr 0x145827d60 <col:7> 'int' lvalue Var 0x14580e1e8 'code' 'int'
    | | |     |   `-CallExpr 0x145827ec0 <col:14, col:33> '<dependent type>' contains-errors
    | | |     |     |-DeclRefExpr 0x145827e60 <col:14> 'int ()' Function 0x145827da8 'gs_setgray' 'int ()'
    | | |     |     |-RecoveryExpr 0x145827e80 <col:25> '<dependent type>' contains-errors lvalue
    | | |     |     `-FloatingLiteral 0x145827ea0 <col:30> 'double' 0.000000e+00
    | | |     `-IntegerLiteral 0x145827f30 <col:38> 'int' 0
    | | `-ParenExpr 0x145828198 <line:16:5, col:31> 'int' contains-errors
    | |   `-BinaryOperator 0x145828178 <col:6, col:30> 'int' contains-errors '<'
    | |     |-ParenExpr 0x145828138 <col:6, col:26> 'int' contains-errors
    | |     | `-BinaryOperator 0x145828118 <col:7, col:25> 'int' contains-errors '='
    | |     |   |-DeclRefExpr 0x145827fb0 <col:7> 'int' lvalue Var 0x14580e1e8 'code' 'int'
    | |     |   `-CallExpr 0x1458280f0 <col:14, col:25> '<dependent type>' contains-errors
    | |     |     |-DeclRefExpr 0x1458280b0 <col:14> 'int ()' Function 0x145827ff8 'gs_fill' 'int ()'
    | |     |     `-RecoveryExpr 0x1458280d0 <col:22> '<dependent type>' contains-errors lvalue
    | |     `-IntegerLiteral 0x145828158 <col:30> 'int' 0
    | `-CompoundStmt 0x145828368 <line:17:5, line:20:5>
    |   |-CallExpr 0x1458282f8 <line:18:9, col:24> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x1458282b8 <col:9> 'int ()' Function 0x145828200 'gs_grestore' 'int ()'
    |   | `-RecoveryExpr 0x1458282d8 <col:21> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x145828358 <line:19:2, col:9>
    |     `-ImplicitCastExpr 0x145828340 <col:9> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x145828320 <col:9> 'int' lvalue Var 0x14580e1e8 'code' 'int'
    |-BinaryOperator 0x145828430 <line:21:5, col:27> 'int' contains-errors '='
    | |-DeclRefExpr 0x1458283a8 <col:5> 'int' lvalue Var 0x14580e1e8 'code' 'int'
    | `-CallExpr 0x145828408 <col:12, col:27> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1458283c8 <col:12> 'int ()' Function 0x145828200 'gs_grestore' 'int ()'
    |   `-RecoveryExpr 0x1458283e8 <col:24> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x145828510 <line:22:5, line:23:16>
    | |-BinaryOperator 0x1458284a8 <line:22:9, col:16> 'int' '<'
    | | |-ImplicitCastExpr 0x145828490 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x145828450 <col:9> 'int' lvalue Var 0x14580e1e8 'code' 'int'
    | | `-IntegerLiteral 0x145828470 <col:16> 'int' 0
    | `-ReturnStmt 0x145828500 <line:23:9, col:16>
    |   `-ImplicitCastExpr 0x1458284e8 <col:16> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x1458284c8 <col:16> 'int' lvalue Var 0x14580e1e8 'code' 'int'
    |-IfStmt 0x145828658 <line:25:5, line:26:22>
    | |-CXXDependentScopeMemberExpr 0x1458285b0 <line:25:9, col:14> '<dependent type>' contains-errors lvalue ->IgnoreNumCopies
    | | `-RecoveryExpr 0x145828590 <col:9> '<dependent type>' contains-errors lvalue
    | `-BinaryOperator 0x145828638 <line:26:9, col:22> 'int' '='
    |   |-DeclRefExpr 0x1458285f8 <col:9> 'int' lvalue ParmVar 0x14580dda8 'num_copies' 'int'
    |   `-IntegerLiteral 0x145828618 <col:22> 'int' 1
    |-IfStmt 0x1458298f8 <line:27:5, line:28:16>
    | |-RecoveryExpr 0x145829890 <line:27:9, col:75> '_Bool' contains-errors
    | `-ReturnStmt 0x1458298e8 <line:28:9, col:16>
    |   `-ImplicitCastExpr 0x1458298d0 <col:16> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x1458298b0 <col:16> 'int' lvalue Var 0x14580e1e8 'code' 'int'
    |-BinaryOperator 0x145829b88 <line:30:5, col:58> 'int' contains-errors '='
    | |-DeclRefExpr 0x145829918 <col:5> 'int' lvalue Var 0x14580e1e8 'code' 'int'
    | `-CallExpr 0x145829b58 <col:12, col:58> '<dependent type>' contains-errors
    |   |-CallExpr 0x145829b08 <col:12, col:37> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x145829938 <col:12> 'int ()' Function 0x1458286c0 'dev_proc' 'int ()'
    |   | |-RecoveryExpr 0x145829ac8 <col:21> '<dependent type>' contains-errors lvalue
    |   | `-RecoveryExpr 0x145829ae8 <col:26> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x145829b38 <col:39> '<dependent type>' contains-errors lvalue
    |   `-UnaryOperator 0x145829a60 <col:44, col:57> 'int (*)()' prefix '&' cannot overflow
    |     `-ParenExpr 0x145829a08 <col:45, col:57> 'int ()'
    |       `-DeclRefExpr 0x1458299e8 <col:46> 'int ()' Function 0x1458286c0 'dev_proc' 'int ()'
    |-IfStmt 0x145829c68 <line:31:5, line:32:16>
    | |-BinaryOperator 0x145829c00 <line:31:9, col:16> 'int' '<'
    | | |-ImplicitCastExpr 0x145829be8 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x145829ba8 <col:9> 'int' lvalue Var 0x14580e1e8 'code' 'int'
    | | `-IntegerLiteral 0x145829bc8 <col:16> 'int' 0
    | `-ReturnStmt 0x145829c58 <line:32:9, col:16>
    |   `-ImplicitCastExpr 0x145829c40 <col:16> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x145829c20 <col:16> 'int' lvalue Var 0x14580e1e8 'code' 'int'
    |-IfStmt 0x145829e40 <line:33:5, line:36:5>
    | |-RecoveryExpr 0x145829c88 <line:33:9, col:53> '_Bool' contains-errors
    | `-CompoundStmt 0x145829e30 <col:71, line:36:5>
    `-ReturnStmt 0x145829e98 <line:37:5, col:12>
      `-ImplicitCastExpr 0x145829e80 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x145829e60 <col:12> 'int' lvalue Var 0x14580e1e8 'code' 'int'
