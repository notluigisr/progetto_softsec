`-FunctionDecl 0x129128258  line:1:1 invalid BlockDNSErrHandler 'int (int, const char *)'
  |-ParmVarDecl 0x1291280f0 <col:20, col:26> col:26 invalid err 'int'
  |-ParmVarDecl 0x129128170 <col:31, col:43> col:43 used msg 'const char *'
  `-CompoundStmt 0x1298096f8 <line:2:1, line:26:1>
    |-IfStmt 0x129128388 <line:6:5, line:9:5>
    | |-UnaryOperator 0x129128348 <line:6:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x129128330 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x129128310 <col:10> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x129128370 <line:7:5, line:9:5>
    |   `-ReturnStmt 0x129128360 <line:8:9>
    |-IfStmt 0x129809478 <line:13:5, line:18:5>
    | |-RecoveryExpr 0x129809430 <line:13:9, line:15:59> '_Bool' contains-errors
    | `-CompoundStmt 0x129809468 <line:16:5, line:18:5>
    `-CallExpr 0x1298096b0 <line:23:5, col:50> '<dependent type>' contains-errors
      |-DeclRefExpr 0x129809578 <col:5> 'int ()' Function 0x1298094c0 'MsgToEventLog' 'int ()'
      |-RecoveryExpr 0x129809670 <col:19> '<dependent type>' contains-errors lvalue
      |-StringLiteral 0x1298095b0 <col:26> 'char[4]' lvalue "STR"
      |-DeclRefExpr 0x1298095d0 <col:33> 'const char *' lvalue ParmVar 0x129128170 'msg' 'const char *'
      |-RecoveryExpr 0x1298095f0 <col:38> '<dependent type>' contains-errors lvalue
      `-RecoveryExpr 0x129809690 <col:43> '<dependent type>' contains-errors lvalue
