`-FunctionDecl 0x15b81ca00  line:1:12 fuse_dentry_revalidate 'int (struct dentry *, unsigned int)' static
  |-ParmVarDecl 0x14b033848 <col:35, col:50> col:50 used entry 'struct dentry *'
  |-ParmVarDecl 0x14b0338c8 <col:57, col:70> col:70 used flags 'unsigned int'
  `-CompoundStmt 0x15b00b968 <line:2:1, line:86:1>
    |-DeclStmt 0x15b81cce8 <line:3:2, col:21>
    | |-RecordDecl 0x15b81cb00 <col:2, col:9> col:9 struct inode
    | `-VarDecl 0x15b81cc68 <col:2, col:16> col:16 used inode 'struct inode *'
    |-DeclStmt 0x15b81cdf0 <line:4:2, col:23>
    | `-VarDecl 0x15b81cd88 <col:2, col:17> col:17 used parent 'struct dentry *'
    |-DeclStmt 0x15b81cff8 <line:5:2, col:23>
    | |-RecordDecl 0x15b81ce08 <col:2, col:9> col:9 struct fuse_mount
    | `-VarDecl 0x15b81cf78 <col:2, col:21> col:21 used fm 'struct fuse_mount *'
    |-DeclStmt 0x15b81d1f8 <line:6:2, col:23>
    | |-RecordDecl 0x15b81d010 <col:2, col:9> col:9 struct fuse_inode
    | `-VarDecl 0x15b81d178 <col:2, col:21> col:21 used fi 'struct fuse_inode *'
    |-DeclStmt 0x15b81d290 <line:7:2, col:9>
    | `-VarDecl 0x15b81d228 <col:2, col:6> col:6 used ret 'int'
    |-BinaryOperator 0x15b81d4d0 <line:9:2, col:27> 'struct inode *' '='
    | |-DeclRefExpr 0x15b81d2a8 <col:2> 'struct inode *' lvalue Var 0x15b81cc68 'inode' 'struct inode *'
    | `-ImplicitCastExpr 0x15b81d4b8 <col:10, col:27> 'struct inode *' <IntegralToPointer>
    |   `-CallExpr 0x15b81d478 <col:10, col:27> 'int'
    |     |-ImplicitCastExpr 0x15b81d460 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x15b81d3f0 <col:10> 'int ()' Function 0x15b81d338 'd_inode_rcu' 'int ()'
    |     `-ImplicitCastExpr 0x15b81d4a0 <col:22> 'struct dentry *' <LValueToRValue>
    |       `-DeclRefExpr 0x15b81d410 <col:22> 'struct dentry *' lvalue ParmVar 0x14b033848 'entry' 'struct dentry *'
    |-IfStmt 0x15b00b7d8 <line:10:2, line:78:2> has_else
    | |-BinaryOperator 0x15b81d6a0 <line:10:6, col:33> 'int' '&&'
    | | |-ImplicitCastExpr 0x15b81d688 <col:6> 'struct inode *' <LValueToRValue>
    | | | `-DeclRefExpr 0x15b81d4f0 <col:6> 'struct inode *' lvalue Var 0x15b81cc68 'inode' 'struct inode *'
    | | `-CallExpr 0x15b81d648 <col:15, col:33> 'int'
    | |   |-ImplicitCastExpr 0x15b81d630 <col:15> 'int (*)()' <FunctionToPointerDecay>
    | |   | `-DeclRefExpr 0x15b81d5f0 <col:15> 'int ()' Function 0x15b81d538 'is_bad_inode' 'int ()'
    | |   `-ImplicitCastExpr 0x15b81d670 <col:28> 'struct inode *' <LValueToRValue>
    | |     `-DeclRefExpr 0x15b81d610 <col:28> 'struct inode *' lvalue Var 0x15b81cc68 'inode' 'struct inode *'
    | |-GotoStmt 0x15b81d710 <line:11:3, col:8> 'invalid' 0x15b81d6c0
    | `-IfStmt 0x15b00b7a8 <line:12:7, line:78:2> has_else
    |   |-RecoveryExpr 0x14c0d77c8 <line:12:11, line:13:41> '_Bool' contains-errors
    |   |-CompoundStmt 0x15b00ae48 <col:44, line:68:2>
    |   | |-DeclStmt 0x14c0d7968 <line:14:3, col:31>
    |   | | |-RecordDecl 0x14c0d77e8 <col:3, col:10> col:10 struct fuse_entry_out
    |   | | `-VarDecl 0x14c0d78e8 <col:3, col:25> col:25 invalid outarg 'struct fuse_entry_out'
    |   | |-CallExpr 0x14c0d7ae0 <line:15:3, col:17> '<dependent type>' contains-errors
    |   | | |-DeclRefExpr 0x14c0d7a60 <col:3> 'int ()' Function 0x14c0d79a8 'FUSE_ARGS' 'int ()'
    |   | | `-RecoveryExpr 0x14c0d7ac0 <col:13> '<dependent type>' contains-errors lvalue
    |   | |-DeclStmt 0x14c0d7cf8 <line:16:3, col:34>
    |   | | |-RecordDecl 0x14c0d7b08 <col:3, col:10> col:10 struct fuse_forget_link
    |   | | `-VarDecl 0x14c0d7c78 <col:3, col:28> col:28 used forget 'struct fuse_forget_link *'
    |   | |-IfStmt 0x14c0d7d78 <line:20:3, line:21:9>
    |   | | |-UnaryOperator 0x14c0d7d48 <line:20:7, col:8> 'int' prefix '!' cannot overflow
    |   | | | `-ImplicitCastExpr 0x14c0d7d30 <col:8> 'struct inode *' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x14c0d7d10 <col:8> 'struct inode *' lvalue Var 0x15b81cc68 'inode' 'struct inode *'
    |   | | `-GotoStmt 0x14c0d7d60 <line:21:4, col:9> 'invalid' 0x15b81d6c0
    |   | |-BinaryOperator 0x14c0d7e70 <line:23:3, col:10> 'int' contains-errors '='
    |   | | |-DeclRefExpr 0x14c0d7d98 <col:3> 'int' lvalue Var 0x15b81d228 'ret' 'int'
    |   | | `-UnaryOperator 0x14c0d7e58 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   | |   `-ImplicitCastExpr 0x14c0d7e40 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    |   | |     `-RecoveryExpr 0x14c0d7e20 <col:10> '<dependent type>' contains-errors lvalue
    |   | |-IfStmt 0x14c0d7f90 <line:24:3, line:25:9>
    |   | | |-BinaryOperator 0x14c0d7f08 <line:24:7, col:15> '<dependent type>' contains-errors '&'
    |   | | | |-DeclRefExpr 0x14c0d7e90 <col:7> 'unsigned int' lvalue ParmVar 0x14b0338c8 'flags' 'unsigned int'
    |   | | | `-RecoveryExpr 0x14c0d7ee8 <col:15> '<dependent type>' contains-errors lvalue
    |   | | `-GotoStmt 0x14c0d7f78 <line:25:4, col:9> 'out' 0x14c0d7f28
    |   | |-BinaryOperator 0x14c0d8160 <line:27:3, col:28> 'struct fuse_mount *' '='
    |   | | |-DeclRefExpr 0x14c0d7fb0 <col:3> 'struct fuse_mount *' lvalue Var 0x15b81cf78 'fm' 'struct fuse_mount *'
    |   | | `-ImplicitCastExpr 0x14c0d8148 <col:8, col:28> 'struct fuse_mount *' <IntegralToPointer>
    |   | |   `-CallExpr 0x14c0d8108 <col:8, col:28> 'int'
    |   | |     |-ImplicitCastExpr 0x14c0d80f0 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |   | |     | `-DeclRefExpr 0x14c0d80b0 <col:8> 'int ()' Function 0x14c0d7ff8 'get_fuse_mount' 'int ()'
    |   | |     `-ImplicitCastExpr 0x14c0d8130 <col:23> 'struct inode *' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x14c0d80d0 <col:23> 'struct inode *' lvalue Var 0x15b81cc68 'inode' 'struct inode *'
    |   | |-BinaryOperator 0x14c0d82f0 <line:29:3, col:30> 'struct fuse_forget_link *' '='
    |   | | |-DeclRefExpr 0x14c0d8180 <col:3> 'struct fuse_forget_link *' lvalue Var 0x14c0d7c78 'forget' 'struct fuse_forget_link *'
    |   | | `-ImplicitCastExpr 0x14c0d82d8 <col:12, col:30> 'struct fuse_forget_link *' <IntegralToPointer>
    |   | |   `-CallExpr 0x14c0d82b8 <col:12, col:30> 'int'
    |   | |     `-ImplicitCastExpr 0x14c0d82a0 <col:12> 'int (*)()' <FunctionToPointerDecay>
    |   | |       `-DeclRefExpr 0x14c0d8280 <col:12> 'int ()' Function 0x14c0d81c8 'fuse_alloc_forget' 'int ()'
    |   | |-BinaryOperator 0x14c0d83e8 <line:30:3, col:10> 'int' contains-errors '='
    |   | | |-DeclRefExpr 0x14c0d8310 <col:3> 'int' lvalue Var 0x15b81d228 'ret' 'int'
    |   | | `-UnaryOperator 0x14c0d83d0 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   | |   `-ImplicitCastExpr 0x14c0d83b8 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    |   | |     `-RecoveryExpr 0x14c0d8398 <col:10> '<dependent type>' contains-errors lvalue
    |   | |-IfStmt 0x14c0d8470 <line:31:3, line:32:9>
    |   | | |-UnaryOperator 0x14c0d8440 <line:31:7, col:8> 'int' prefix '!' cannot overflow
    |   | | | `-ImplicitCastExpr 0x14c0d8428 <col:8> 'struct fuse_forget_link *' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x14c0d8408 <col:8> 'struct fuse_forget_link *' lvalue Var 0x14c0d7c78 'forget' 'struct fuse_forget_link *'
    |   | | `-GotoStmt 0x14c0d8458 <line:32:4, col:9> 'out' 0x14c0d7f28
    |   | |-BinaryOperator 0x15b008fd8 <line:36:3, col:29> 'struct dentry *' '='
    |   | | |-DeclRefExpr 0x15b008e28 <col:3> 'struct dentry *' lvalue Var 0x15b81cd88 'parent' 'struct dentry *'
    |   | | `-ImplicitCastExpr 0x15b008fc0 <col:12, col:29> 'struct dentry *' <IntegralToPointer>
    |   | |   `-CallExpr 0x15b008f80 <col:12, col:29> 'int'
    |   | |     |-ImplicitCastExpr 0x15b008f68 <col:12> 'int (*)()' <FunctionToPointerDecay>
    |   | |     | `-DeclRefExpr 0x15b008f28 <col:12> 'int ()' Function 0x15b008e70 'dget_parent' 'int ()'
    |   | |     `-ImplicitCastExpr 0x15b008fa8 <col:24> 'struct dentry *' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x15b008f48 <col:24> 'struct dentry *' lvalue ParmVar 0x14b033848 'entry' 'struct dentry *'
    |   | |-CallExpr 0x15b009738 <line:40:3, col:14> 'int'
    |   | | |-ImplicitCastExpr 0x15b009720 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | | `-DeclRefExpr 0x15b0096e0 <col:3> 'int ()' Function 0x15b009628 'dput' 'int ()'
    |   | | `-ImplicitCastExpr 0x15b009760 <col:8> 'struct dentry *' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x15b009700 <col:8> 'struct dentry *' lvalue Var 0x15b81cd88 'parent' 'struct dentry *'
    |   | |-IfStmt 0x15b00a2a8 <line:44:3, line:55:3>
    |   | | |-UnaryOperator 0x15b0098d8 <line:44:7, col:8> 'int' prefix '!' cannot overflow
    |   | | | `-ImplicitCastExpr 0x15b0098c0 <col:8> 'int' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x15b0098a0 <col:8> 'int' lvalue Var 0x15b81d228 'ret' 'int'
    |   | | `-CompoundStmt 0x15b00a270 <col:13, line:55:3>
    |   | |   |-BinaryOperator 0x15b009aa0 <line:45:4, col:29> 'struct fuse_inode *' '='
    |   | |   | |-DeclRefExpr 0x15b0098f0 <col:4> 'struct fuse_inode *' lvalue Var 0x15b81d178 'fi' 'struct fuse_inode *'
    |   | |   | `-ImplicitCastExpr 0x15b009a88 <col:9, col:29> 'struct fuse_inode *' <IntegralToPointer>
    |   | |   |   `-CallExpr 0x15b009a48 <col:9, col:29> 'int'
    |   | |   |     |-ImplicitCastExpr 0x15b009a30 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   | |   |     | `-DeclRefExpr 0x15b0099f0 <col:9> 'int ()' Function 0x15b009938 'get_fuse_inode' 'int ()'
    |   | |   |     `-ImplicitCastExpr 0x15b009a70 <col:24> 'struct inode *' <LValueToRValue>
    |   | |   |       `-DeclRefExpr 0x15b009a10 <col:24> 'struct inode *' lvalue Var 0x15b81cc68 'inode' 'struct inode *'
    |   | |   |-IfStmt 0x15b009e98 <line:46:4, line:51:4>
    |   | |   | |-RecoveryExpr 0x15b009be0 <line:46:8, line:47:84> '_Bool' contains-errors
    |   | |   | `-CompoundStmt 0x15b009e78 <col:87, line:51:4>
    |   | |   |   |-CallExpr 0x15b009e20 <line:48:5, line:49:25> '<dependent type>' contains-errors
    |   | |   |   | |-DeclRefExpr 0x15b009ce0 <line:48:5> 'int ()' Function 0x15b009c28 'fuse_queue_forget' 'int ()'
    |   | |   |   | |-RecoveryExpr 0x15b009d38 <col:23, col:27> '<dependent type>' contains-errors lvalue
    |   | |   |   | | `-DeclRefExpr 0x15b009d00 <col:23> 'struct fuse_mount *' lvalue Var 0x15b81cf78 'fm' 'struct fuse_mount *'
    |   | |   |   | |-DeclRefExpr 0x15b009d60 <col:31> 'struct fuse_forget_link *' lvalue Var 0x14c0d7c78 'forget' 'struct fuse_forget_link *'
    |   | |   |   | |-CXXDependentScopeMemberExpr 0x15b009da0 <line:49:9, col:16> '<dependent type>' contains-errors lvalue .nodeid
    |   | |   |   | | `-RecoveryExpr 0x15b009d80 <col:9> '<dependent type>' contains-errors lvalue
    |   | |   |   | `-IntegerLiteral 0x15b009e00 <col:24> 'int' 1
    |   | |   |   `-GotoStmt 0x15b009e60 <line:50:5, col:10> 'invalid' 0x15b81d6c0
    |   | |   |-CallExpr 0x15b00a030 <line:52:4, col:23> '<dependent type>' contains-errors
    |   | |   | |-DeclRefExpr 0x15b009f98 <col:4> 'int ()' Function 0x15b009ee0 'spin_lock' 'int ()'
    |   | |   | `-UnaryOperator 0x15b00a018 <col:14, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | |   |   `-RecoveryExpr 0x15b009ff0 <col:15, col:19> '<dependent type>' contains-errors lvalue
    |   | |   |     `-DeclRefExpr 0x15b009fb8 <col:15> 'struct fuse_inode *' lvalue Var 0x15b81d178 'fi' 'struct fuse_inode *'
    |   | |   |-UnaryOperator 0x15b00a0b8 <line:53:4, col:15> '<dependent type>' contains-errors postfix '++' cannot overflow
    |   | |   | `-RecoveryExpr 0x15b00a090 <col:4, col:8> '<dependent type>' contains-errors lvalue
    |   | |   |   `-DeclRefExpr 0x15b00a058 <col:4> 'struct fuse_inode *' lvalue Var 0x15b81d178 'fi' 'struct fuse_inode *'
    |   | |   `-CallExpr 0x15b00a248 <line:54:4, col:25> '<dependent type>' contains-errors
    |   | |     |-DeclRefExpr 0x15b00a1b0 <col:4> 'int ()' Function 0x15b00a0f8 'spin_unlock' 'int ()'
    |   | |     `-UnaryOperator 0x15b00a230 <col:16, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | |       `-RecoveryExpr 0x15b00a208 <col:17, col:21> '<dependent type>' contains-errors lvalue
    |   | |         `-DeclRefExpr 0x15b00a1d0 <col:17> 'struct fuse_inode *' lvalue Var 0x15b81d178 'fi' 'struct fuse_inode *'
    |   | |-CallExpr 0x15b00a400 <line:56:3, col:15> 'int'
    |   | | |-ImplicitCastExpr 0x15b00a3e8 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | | `-DeclRefExpr 0x15b00a3a8 <col:3> 'int ()' Function 0x15b00a2f0 'kfree' 'int ()'
    |   | | `-ImplicitCastExpr 0x15b00a428 <col:9> 'struct fuse_forget_link *' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x15b00a3c8 <col:9> 'struct fuse_forget_link *' lvalue Var 0x14c0d7c78 'forget' 'struct fuse_forget_link *'
    |   | |-IfStmt 0x15b00a498 <line:57:3, line:58:9>
    |   | | |-RecoveryExpr 0x15b00a460 <line:57:7, col:15> '_Bool' contains-errors
    |   | | `-GotoStmt 0x15b00a480 <line:58:4, col:9> 'out' 0x14c0d7f28
    |   | |-IfStmt 0x15b00a828 <line:59:3, line:61:9>
    |   | | |-RecoveryExpr 0x15b00a7f0 <line:59:7, line:60:44> '_Bool' contains-errors
    |   | | `-GotoStmt 0x15b00a810 <line:61:4, col:9> 'invalid' 0x15b81d6c0
    |   | |-CallExpr 0x15b00a980 <line:63:3, col:31> 'int'
    |   | | |-ImplicitCastExpr 0x15b00a968 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | | `-DeclRefExpr 0x15b00a928 <col:3> 'int ()' Function 0x15b00a870 'forget_all_cached_acls' 'int ()'
    |   | | `-ImplicitCastExpr 0x15b00a9a8 <col:26> 'struct inode *' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x15b00a948 <col:26> 'struct inode *' lvalue Var 0x15b81cc68 'inode' 'struct inode *'
    |   | `-CallExpr 0x15b00ae18 <line:67:3, col:43> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x15b00ada0 <col:3> 'int ()' Function 0x15b00ace8 'fuse_change_entry_timeout' 'int ()'
    |   |   |-DeclRefExpr 0x15b00adc0 <col:29> 'struct dentry *' lvalue ParmVar 0x14b033848 'entry' 'struct dentry *'
    |   |   `-UnaryOperator 0x15b00ae00 <col:36, col:37> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |     `-RecoveryExpr 0x15b00ade0 <col:37> '<dependent type>' contains-errors lvalue
    |   `-IfStmt 0x15b00b788 <line:68:9, line:78:2>
    |     |-ImplicitCastExpr 0x15b00af08 <line:68:13> 'struct inode *' <LValueToRValue>
    |     | `-DeclRefExpr 0x15b00aee8 <col:13> 'struct inode *' lvalue Var 0x15b81cc68 'inode' 'struct inode *'
    |     `-CompoundStmt 0x15b00b768 <col:20, line:78:2>
    |       |-BinaryOperator 0x15b00aff0 <line:69:3, col:28> 'struct fuse_inode *' '='
    |       | |-DeclRefExpr 0x15b00af20 <col:3> 'struct fuse_inode *' lvalue Var 0x15b81d178 'fi' 'struct fuse_inode *'
    |       | `-ImplicitCastExpr 0x15b00afd8 <col:8, col:28> 'struct fuse_inode *' <IntegralToPointer>
    |       |   `-CallExpr 0x15b00af98 <col:8, col:28> 'int'
    |       |     |-ImplicitCastExpr 0x15b00af80 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |       |     | `-DeclRefExpr 0x15b00af40 <col:8> 'int ()' Function 0x15b009938 'get_fuse_inode' 'int ()'
    |       |     `-ImplicitCastExpr 0x15b00afc0 <col:23> 'struct inode *' <LValueToRValue>
    |       |       `-DeclRefExpr 0x15b00af60 <col:23> 'struct inode *' lvalue Var 0x15b81cc68 'inode' 'struct inode *'
    |       `-IfStmt 0x15b00b738 <line:70:3, line:77:3> has_else
    |         |-RecoveryExpr 0x15b00b030 <line:70:7, col:15> '_Bool' contains-errors
    |         |-CompoundStmt 0x15b00b1e8 <col:27, line:73:3>
    |         `-IfStmt 0x15b00b718 <col:10, line:77:3>
    |           |-RecoveryExpr 0x15b00b370 <line:73:14, col:63> '_Bool' contains-errors
    |           `-CompoundStmt 0x15b00b6f0 <col:66, line:77:3>
    |             |-BinaryOperator 0x15b00b460 <line:74:4, col:30> 'struct dentry *' '='
    |             | |-DeclRefExpr 0x15b00b390 <col:4> 'struct dentry *' lvalue Var 0x15b81cd88 'parent' 'struct dentry *'
    |             | `-ImplicitCastExpr 0x15b00b448 <col:13, col:30> 'struct dentry *' <IntegralToPointer>
    |             |   `-CallExpr 0x15b00b408 <col:13, col:30> 'int'
    |             |     |-ImplicitCastExpr 0x15b00b3f0 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |             |     | `-DeclRefExpr 0x15b00b3b0 <col:13> 'int ()' Function 0x15b008e70 'dget_parent' 'int ()'
    |             |     `-ImplicitCastExpr 0x15b00b430 <col:25> 'struct dentry *' <LValueToRValue>
    |             |       `-DeclRefExpr 0x15b00b3d0 <col:25> 'struct dentry *' lvalue ParmVar 0x14b033848 'entry' 'struct dentry *'
    |             |-CallExpr 0x15b00b630 <line:75:4, col:47> 'int'
    |             | |-ImplicitCastExpr 0x15b00b618 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |             | | `-DeclRefExpr 0x15b00b560 <col:4> 'int ()' Function 0x15b00b4a8 'fuse_advise_use_readdirplus' 'int ()'
    |             | `-CallExpr 0x15b00b5d8 <col:32, col:46> 'int'
    |             |   |-ImplicitCastExpr 0x15b00b5c0 <col:32> 'int (*)()' <FunctionToPointerDecay>
    |             |   | `-DeclRefExpr 0x15b00b580 <col:32> 'int ()' Function 0x15b009280 'd_inode' 'int ()'
    |             |   `-ImplicitCastExpr 0x15b00b600 <col:40> 'struct dentry *' <LValueToRValue>
    |             |     `-DeclRefExpr 0x15b00b5a0 <col:40> 'struct dentry *' lvalue Var 0x15b81cd88 'parent' 'struct dentry *'
    |             `-CallExpr 0x15b00b6b0 <line:76:4, col:15> 'int'
    |               |-ImplicitCastExpr 0x15b00b698 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |               | `-DeclRefExpr 0x15b00b658 <col:4> 'int ()' Function 0x15b009628 'dput' 'int ()'
    |               `-ImplicitCastExpr 0x15b00b6d8 <col:9> 'struct dentry *' <LValueToRValue>
    |                 `-DeclRefExpr 0x15b00b678 <col:9> 'struct dentry *' lvalue Var 0x15b81cd88 'parent' 'struct dentry *'
    |-BinaryOperator 0x15b00b848 <line:79:2, col:8> 'int' '='
    | |-DeclRefExpr 0x15b00b808 <col:2> 'int' lvalue Var 0x15b81d228 'ret' 'int'
    | `-IntegerLiteral 0x15b00b828 <col:8> 'int' 1
    |-LabelStmt 0x15b00b8b0 <line:80:1, line:81:9> 'out'
    | `-ReturnStmt 0x15b00b8a0 <col:2, col:9>
    |   `-ImplicitCastExpr 0x15b00b888 <col:9> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x15b00b868 <col:9> 'int' lvalue Var 0x15b81d228 'ret' 'int'
    |-LabelStmt 0x15b00b930 <line:83:1, line:84:8> 'invalid'
    | `-BinaryOperator 0x15b00b910 <col:2, col:8> 'int' '='
    |   |-DeclRefExpr 0x15b00b8d0 <col:2> 'int' lvalue Var 0x15b81d228 'ret' 'int'
    |   `-IntegerLiteral 0x15b00b8f0 <col:8> 'int' 0
    `-GotoStmt 0x15b00b950 <line:85:2, col:7> 'out' 0x14c0d7f28
