`-FunctionDecl 0x13000de88  line:1:14 invalid GreaterEqualEval 'int (int *, int *)'
  |-ParmVarDecl 0x13000dd28 <col:31, col:46> col:46 referenced invalid context 'int *'
  |-ParmVarDecl 0x13000dda8 <col:55, col:67> col:67 invalid node 'int *'
  `-CompoundStmt 0x1300278b0 <col:73, line:34:1>
    |-DeclStmt 0x13000e1d0 <line:2:3, col:70>
    | `-VarDecl 0x13000df58 <col:3, col:23> col:23 invalid input1 'const int *'
    |-DeclStmt 0x13000e318 <line:3:3, col:70>
    | `-VarDecl 0x13000e200 <col:3, col:23> col:23 invalid input2 'const int *'
    `-SwitchStmt 0x1300275e8 <line:6:3, line:32:3>
      |-ImplicitCastExpr 0x1300275d0 <line:6:11, col:19> '<dependent type>' contains-errors <LValueToRValue>
      | `-CXXDependentScopeMemberExpr 0x130027588 <col:11, col:19> '<dependent type>' contains-errors lvalue ->type
      |   `-RecoveryExpr 0x130027568 <col:11> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x130027870 <col:25, line:32:3>
        |-BreakStmt 0x130027628 <line:10:7>
        |-BreakStmt 0x130027678 <line:14:7>
        |-BreakStmt 0x130027680 <line:18:7>
        |-BreakStmt 0x130027688 <line:22:7>
        |-BreakStmt 0x130027690 <line:26:7>
        `-DefaultStmt 0x130027850 <line:27:5, line:30:40>
          `-CallExpr 0x130027818 <line:28:7, line:30:40> '<dependent type>' contains-errors
            |-CXXDependentScopeMemberExpr 0x1300276e0 <line:28:7, col:16> '<dependent type>' contains-errors lvalue ->ReportError
            | `-RecoveryExpr 0x1300276b8 <col:7> '<dependent type>' contains-errors lvalue
            |   `-DeclRefExpr 0x130027698 <col:7> 'int *' lvalue ParmVar 0x13000dd28 'context' 'int *'
            |-RecoveryExpr 0x130027728 <col:28> '<dependent type>' contains-errors lvalue
            |-StringLiteral 0x130027790 <line:29:28> 'char[4]' lvalue "STR"
            `-CXXDependentScopeMemberExpr 0x1300277d0 <line:30:28, col:36> '<dependent type>' contains-errors lvalue ->type
              `-RecoveryExpr 0x1300277b0 <col:28> '<dependent type>' contains-errors lvalue
