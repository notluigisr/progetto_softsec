`-FunctionDecl 0x13b128288  line:1:12 invalid filter_frame 'int (int *, int *)' static
  |-ParmVarDecl 0x13b128128 <col:25, col:39> col:39 referenced invalid inlink 'int *'
  |-ParmVarDecl 0x13b1281a8 <col:47, col:56> col:56 invalid in 'int *'
  `-CompoundStmt 0x13c80b6b8 <line:2:1, line:41:1>
    |-DeclStmt 0x13b128678 <line:6:5, col:18>
    | |-VarDecl 0x13b128578 <col:5, col:9> col:9 used p 'int'
    | `-VarDecl 0x13b1285f8 <col:5, col:12> col:12 used direct 'int'
    |-IfStmt 0x13c8090a0 <line:8:5, line:19:5> has_else
    | |-CallExpr 0x13c808840 <line:8:9, col:32> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x13c808800 <col:9> 'int ()' Function 0x13b128738 'av_frame_is_writable' 'int ()'
    | | `-RecoveryExpr 0x13c808820 <col:30> '<dependent type>' contains-errors lvalue
    | |-CompoundStmt 0x13c8088e8 <col:35, line:11:5>
    | | `-BinaryOperator 0x13c8088a8 <line:9:9, col:18> 'int' '='
    | |   |-DeclRefExpr 0x13c808868 <col:9> 'int' lvalue Var 0x13b1285f8 'direct' 'int'
    | |   `-IntegerLiteral 0x13c808888 <col:18> 'int' 1
    | `-CompoundStmt 0x13c809080 <line:11:12, line:19:5>
    |   |-BinaryOperator 0x13c808940 <line:12:9, col:18> 'int' '='
    |   | |-DeclRefExpr 0x13c808900 <col:9> 'int' lvalue Var 0x13b1285f8 'direct' 'int'
    |   | `-IntegerLiteral 0x13c808920 <col:18> 'int' 0
    |   `-IfStmt 0x13c808f40 <line:14:9, line:17:9>
    |     |-UnaryOperator 0x13c808c10 <line:14:13, col:14> '<dependent type>' contains-errors prefix '!' cannot overflow
    |     | `-ImplicitCastExpr 0x13c808bf8 <col:14> '<dependent type>' contains-errors <LValueToRValue>
    |     |   `-RecoveryExpr 0x13c808bd8 <col:14> '<dependent type>' contains-errors lvalue
    |     `-CompoundStmt 0x13c808f20 <col:19, line:17:9>
    |       |-CallExpr 0x13c808d60 <line:15:13, col:30> '<dependent type>' contains-errors
    |       | |-DeclRefExpr 0x13c808d08 <col:13> 'int ()' Function 0x13c808c50 'av_frame_free' 'int ()'
    |       | `-UnaryOperator 0x13c808d48 <col:27, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow
    |       |   `-RecoveryExpr 0x13c808d28 <col:28> '<dependent type>' contains-errors lvalue
    |       `-ReturnStmt 0x13c808f10 <line:16:13, col:34>
    |         `-CallExpr 0x13c808ee8 <col:20, col:34> '<dependent type>' contains-errors
    |           |-DeclRefExpr 0x13c808e68 <col:20> 'int ()' Function 0x13c808db0 'AVERROR' 'int ()'
    |           `-RecoveryExpr 0x13c808ec8 <col:28> '<dependent type>' contains-errors lvalue
    |-ForStmt 0x13c80b490 <line:21:5, line:35:5>
    | |-BinaryOperator 0x13c809110 <line:21:10, col:14> 'int' '='
    | | |-DeclRefExpr 0x13c8090d0 <col:10> 'int' lvalue Var 0x13b128578 'p' 'int'
    | | `-IntegerLiteral 0x13c8090f0 <col:14> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x13c809280 <col:17, col:36> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x13c809188 <col:17, col:21> 'int' '<'
    | | | |-ImplicitCastExpr 0x13c809170 <col:17> 'int' <LValueToRValue>
    | | | | `-DeclRefExpr 0x13c809130 <col:17> 'int' lvalue Var 0x13b128578 'p' 'int'
    | | | `-IntegerLiteral 0x13c809150 <col:21> 'int' 4
    | | `-ArraySubscriptExpr 0x13c809260 <col:26, col:36> '<dependent type>' contains-errors lvalue
    | |   |-ImplicitCastExpr 0x13c809230 <col:26, col:30> '<dependent type>' contains-errors <LValueToRValue>
    | |   | `-CXXDependentScopeMemberExpr 0x13c8091c8 <col:26, col:30> '<dependent type>' contains-errors lvalue ->data
    | |   |   `-RecoveryExpr 0x13c8091a8 <col:26> '<dependent type>' contains-errors lvalue
    | |   `-ImplicitCastExpr 0x13c809248 <col:35> 'int' <LValueToRValue>
    | |     `-DeclRefExpr 0x13c809210 <col:35> 'int' lvalue Var 0x13b128578 'p' 'int'
    | |-UnaryOperator 0x13c8092c0 <col:39, col:40> 'int' postfix '++'
    | | `-DeclRefExpr 0x13c8092a0 <col:39> 'int' lvalue Var 0x13b128578 'p' 'int'
    | `-CompoundStmt 0x13c80b460 <col:44, line:35:5>
    |   |-DeclStmt 0x13c8093c0 <line:22:9, col:26>
    |   | `-VarDecl 0x13c8092f0 <col:9, col:25> col:13 used w 'int' cinit
    |   |   `-CXXDependentScopeMemberExpr 0x13c809378 <col:17, col:25> '<dependent type>' contains-errors lvalue ->w
    |   |     `-RecoveryExpr 0x13c809358 <col:17> '<dependent type>' contains-errors lvalue
    |   |-DeclStmt 0x13c8094c0 <line:23:9, col:26>
    |   | `-VarDecl 0x13c8093f0 <col:9, col:25> col:13 used h 'int' cinit
    |   |   `-CXXDependentScopeMemberExpr 0x13c809478 <col:17, col:25> '<dependent type>' contains-errors lvalue ->h
    |   |     `-RecoveryExpr 0x13c809458 <col:17> '<dependent type>' contains-errors lvalue
    |   |-DeclStmt 0x13c809558 <line:24:9, col:26>
    |   | `-VarDecl 0x13c8094f0 <col:9, col:13> col:13 used r 'int'
    |   `-IfStmt 0x13c809618 <line:25:9, line:29:9>
    |     |-ImplicitCastExpr 0x13c809590 <line:25:13> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x13c809570 <col:13> 'int' lvalue Var 0x13b128578 'p' 'int'
    |     `-CompoundStmt 0x13c809608 <col:16, line:29:9>
    `-IfStmt 0x13c80b598 <line:37:5, line:38:26>
      |-UnaryOperator 0x13c80b500 <line:37:9, col:10> 'int' prefix '!' cannot overflow
      | `-ImplicitCastExpr 0x13c80b4e8 <col:10> 'int' <LValueToRValue>
      |   `-DeclRefExpr 0x13c80b4c8 <col:10> 'int' lvalue Var 0x13b1285f8 'direct' 'int'
      `-CallExpr 0x13c80b570 <line:38:9, col:26> '<dependent type>' contains-errors
        |-DeclRefExpr 0x13c80b518 <col:9> 'int ()' Function 0x13c808c50 'av_frame_free' 'int ()'
        `-UnaryOperator 0x13c80b558 <col:23, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow
          `-RecoveryExpr 0x13c80b538 <col:24> '<dependent type>' contains-errors lvalue
