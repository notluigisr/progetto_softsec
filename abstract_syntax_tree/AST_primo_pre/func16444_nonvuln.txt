`-FunctionDecl 0x14580dd98  line:1:1 coll_get_char 'int (void)'
  `-CompoundStmt 0x145829280 <line:2:1, line:21:1>
    |-DeclStmt 0x14580df58 <line:3:5, col:17>
    | `-VarDecl 0x14580dea0 <col:5, col:16> col:10 used nr 'long' cinit
    |   `-ImplicitCastExpr 0x14580df40 <col:15, col:16> 'long' <IntegralCast>
    |     `-UnaryOperator 0x14580df28 <col:15, col:16> 'int' prefix '-'
    |       `-IntegerLiteral 0x14580df08 <col:16> 'int' 1
    |-SwitchStmt 0x14580e020 <line:5:5, line:12:5>
    | |-UnaryOperator 0x14580e008 <line:5:13, col:22> '<dependent type>' contains-errors prefix '*' cannot overflow
    | | `-UnaryOperator 0x14580dff0 <col:14, col:22> '<dependent type>' contains-errors postfix '++' cannot overflow
    | |   `-RecoveryExpr 0x14580dfd0 <col:14> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x145828ea0 <line:6:5, line:12:5>
    |   |-CaseStmt 0x14580e060 <line:7:2, col:28>
    |   | |-CharacterLiteral 0x14580e048 <col:7> 'int' 100
    |   | `-BinaryOperator 0x14580e260 <col:12, col:28> 'long' '='
    |   |   |-DeclRefExpr 0x14580e088 <col:12> 'long' lvalue Var 0x14580dea0 'nr' 'long'
    |   |   `-ImplicitCastExpr 0x14580e248 <col:17, col:28> 'long' <IntegralCast>
    |   |     `-CallExpr 0x14580e228 <col:17, col:28> 'int'
    |   |       `-ImplicitCastExpr 0x14580e210 <col:17> 'int (*)()' <FunctionToPointerDecay>
    |   |         `-DeclRefExpr 0x14580e1c0 <col:17> 'int ()' Function 0x14580e108 'getdecchrs' 'int ()'
    |   |-BreakStmt 0x14580e280 <col:31>
    |   |-CaseStmt 0x14580e2a0 <line:8:2, col:28>
    |   | |-CharacterLiteral 0x14580e288 <col:7> 'int' 111
    |   | `-BinaryOperator 0x145828a38 <col:12, col:28> 'long' '='
    |   |   |-DeclRefExpr 0x14580e2c8 <col:12> 'long' lvalue Var 0x14580dea0 'nr' 'long'
    |   |   `-ImplicitCastExpr 0x145828a20 <col:17, col:28> 'long' <IntegralCast>
    |   |     `-CallExpr 0x145828a00 <col:17, col:28> 'int'
    |   |       `-ImplicitCastExpr 0x14580e3e8 <col:17> 'int (*)()' <FunctionToPointerDecay>
    |   |         `-DeclRefExpr 0x14580e3c8 <col:17> 'int ()' Function 0x14580e310 'getoctchrs' 'int ()'
    |   |-BreakStmt 0x145828a58 <col:31>
    |   |-CaseStmt 0x145828a78 <line:9:2, col:29>
    |   | |-CharacterLiteral 0x145828a60 <col:7> 'int' 120
    |   | `-BinaryOperator 0x145828c38 <col:12, col:29> 'long' '='
    |   |   |-DeclRefExpr 0x145828aa0 <col:12> 'long' lvalue Var 0x14580dea0 'nr' 'long'
    |   |   `-ImplicitCastExpr 0x145828c20 <col:17, col:29> 'long' <IntegralCast>
    |   |     `-CallExpr 0x145828bf8 <col:17, col:29> 'int'
    |   |       |-ImplicitCastExpr 0x145828be0 <col:17> 'int (*)()' <FunctionToPointerDecay>
    |   |       | `-DeclRefExpr 0x145828ba0 <col:17> 'int ()' Function 0x145828ae8 'gethexchrs' 'int ()'
    |   |       `-IntegerLiteral 0x145828bc0 <col:28> 'int' 2
    |   |-BreakStmt 0x145828c58 <col:32>
    |   |-CaseStmt 0x145828c78 <line:10:2, col:29>
    |   | |-CharacterLiteral 0x145828c60 <col:7> 'int' 117
    |   | `-BinaryOperator 0x145828d58 <col:12, col:29> 'long' '='
    |   |   |-DeclRefExpr 0x145828ca0 <col:12> 'long' lvalue Var 0x14580dea0 'nr' 'long'
    |   |   `-ImplicitCastExpr 0x145828d40 <col:17, col:29> 'long' <IntegralCast>
    |   |     `-CallExpr 0x145828d18 <col:17, col:29> 'int'
    |   |       |-ImplicitCastExpr 0x145828d00 <col:17> 'int (*)()' <FunctionToPointerDecay>
    |   |       | `-DeclRefExpr 0x145828cc0 <col:17> 'int ()' Function 0x145828ae8 'gethexchrs' 'int ()'
    |   |       `-IntegerLiteral 0x145828ce0 <col:28> 'int' 4
    |   |-BreakStmt 0x145828d78 <col:32>
    |   |-CaseStmt 0x145828d98 <line:11:2, col:29>
    |   | |-CharacterLiteral 0x145828d80 <col:7> 'int' 85
    |   | `-BinaryOperator 0x145828e78 <col:12, col:29> 'long' '='
    |   |   |-DeclRefExpr 0x145828dc0 <col:12> 'long' lvalue Var 0x14580dea0 'nr' 'long'
    |   |   `-ImplicitCastExpr 0x145828e60 <col:17, col:29> 'long' <IntegralCast>
    |   |     `-CallExpr 0x145828e38 <col:17, col:29> 'int'
    |   |       |-ImplicitCastExpr 0x145828e20 <col:17> 'int (*)()' <FunctionToPointerDecay>
    |   |       | `-DeclRefExpr 0x145828de0 <col:17> 'int ()' Function 0x145828ae8 'gethexchrs' 'int ()'
    |   |       `-IntegerLiteral 0x145828e00 <col:28> 'int' 8
    |   `-BreakStmt 0x145828e98 <col:32>
    |-IfStmt 0x145829200 <line:13:5, line:19:5>
    | |-BinaryOperator 0x1458290e8 <line:13:9, col:24> 'int' contains-errors '||'
    | | |-BinaryOperator 0x145829088 <col:9, col:14> 'int' '<'
    | | | |-ImplicitCastExpr 0x145829058 <col:9> 'long' <LValueToRValue>
    | | | | `-DeclRefExpr 0x145828f00 <col:9> 'long' lvalue Var 0x14580dea0 'nr' 'long'
    | | | `-ImplicitCastExpr 0x145829070 <col:14> 'long' <IntegralCast>
    | | |   `-IntegerLiteral 0x145828f20 <col:14> 'int' 0
    | | `-BinaryOperator 0x1458290c8 <col:19, col:24> 'int' contains-errors '>'
    | |   |-DeclRefExpr 0x145828f90 <col:19> 'long' lvalue Var 0x14580dea0 'nr' 'long'
    | |   `-RecoveryExpr 0x1458290a8 <col:24> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x1458291e0 <line:14:5, line:19:5>
    |   |-UnaryOperator 0x145829158 <line:17:2, col:4> '<dependent type>' contains-errors prefix '--' cannot overflow
    |   | `-RecoveryExpr 0x145829138 <col:4> '<dependent type>' contains-errors lvalue
    |   `-BinaryOperator 0x1458291c0 <line:18:2, col:7> 'long' '='
    |     |-DeclRefExpr 0x145829170 <col:2> 'long' lvalue Var 0x14580dea0 'nr' 'long'
    |     `-ImplicitCastExpr 0x1458291a8 <col:7> 'long' <IntegralCast>
    |       `-CharacterLiteral 0x145829190 <col:7> 'int' 92
    `-ReturnStmt 0x145829270 <line:20:5, col:12>
      `-ImplicitCastExpr 0x145829258 <col:12> 'int' <IntegralCast>
        `-ImplicitCastExpr 0x145829240 <col:12> 'long' <LValueToRValue>
          `-DeclRefExpr 0x145829220 <col:12> 'long' lvalue Var 0x14580dea0 'nr' 'long'
