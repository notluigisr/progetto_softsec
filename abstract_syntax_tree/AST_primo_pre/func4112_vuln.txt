`-FunctionDecl 0x14a826878  line:1:1 asn1_header_decode 'int (struct asn1_ctx *, unsigned char **, unsigned int *, unsigned int *, unsigned int *)'
  |-ParmVarDecl 0x14a80e248 <col:20, col:37> col:37 used ctx 'struct asn1_ctx *'
  |-ParmVarDecl 0x14a80e330 <line:2:6, col:22> col:22 used eoc 'unsigned char **'
  |-ParmVarDecl 0x14a826600 <line:3:6, col:20> col:20 used cls 'unsigned int *'
  |-ParmVarDecl 0x14a826680 <col:25, col:39> col:39 used con 'unsigned int *'
  |-ParmVarDecl 0x14a826700 <col:44, col:58> col:58 used tag 'unsigned int *'
  `-CompoundStmt 0x14a827380 <line:4:1, line:19:1>
    |-DeclStmt 0x14a826a48 <line:5:2, col:22>
    | `-VarDecl 0x14a8269a8 <col:2, col:21> col:15 used def 'unsigned int' cinit
    |   `-ImplicitCastExpr 0x14a826a30 <col:21> 'unsigned int' <IntegralCast>
    |     `-IntegerLiteral 0x14a826a10 <col:21> 'int' 0
    |-DeclStmt 0x14a826b18 <line:6:2, col:22>
    | `-VarDecl 0x14a826a78 <col:2, col:21> col:15 used len 'unsigned int' cinit
    |   `-ImplicitCastExpr 0x14a826b00 <col:21> 'unsigned int' <IntegralCast>
    |     `-IntegerLiteral 0x14a826ae0 <col:21> 'int' 0
    |-IfStmt 0x14a826e30 <line:8:2, line:9:10>
    | |-UnaryOperator 0x14a826de8 <line:8:6, col:40> 'int' prefix '!' cannot overflow
    | | `-CallExpr 0x14a826d48 <col:7, col:40> 'int'
    | |   |-ImplicitCastExpr 0x14a826d30 <col:7> 'int (*)()' <FunctionToPointerDecay>
    | |   | `-DeclRefExpr 0x14a826c60 <col:7> 'int ()' Function 0x14a826ba8 'asn1_id_decode' 'int ()'
    | |   |-ImplicitCastExpr 0x14a826d88 <col:22> 'struct asn1_ctx *' <LValueToRValue>
    | |   | `-DeclRefExpr 0x14a826c80 <col:22> 'struct asn1_ctx *' lvalue ParmVar 0x14a80e248 'ctx' 'struct asn1_ctx *'
    | |   |-ImplicitCastExpr 0x14a826da0 <col:27> 'unsigned int *' <LValueToRValue>
    | |   | `-DeclRefExpr 0x14a826ca0 <col:27> 'unsigned int *' lvalue ParmVar 0x14a826600 'cls' 'unsigned int *'
    | |   |-ImplicitCastExpr 0x14a826db8 <col:32> 'unsigned int *' <LValueToRValue>
    | |   | `-DeclRefExpr 0x14a826cc0 <col:32> 'unsigned int *' lvalue ParmVar 0x14a826680 'con' 'unsigned int *'
    | |   `-ImplicitCastExpr 0x14a826dd0 <col:37> 'unsigned int *' <LValueToRValue>
    | |     `-DeclRefExpr 0x14a826ce0 <col:37> 'unsigned int *' lvalue ParmVar 0x14a826700 'tag' 'unsigned int *'
    | `-ReturnStmt 0x14a826e20 <line:9:3, col:10>
    |   `-IntegerLiteral 0x14a826e00 <col:10> 'int' 0
    |-IfStmt 0x14a827090 <line:11:2, line:12:10>
    | |-UnaryOperator 0x14a827048 <line:11:6, col:41> 'int' prefix '!' cannot overflow
    | | `-CallExpr 0x14a826ff8 <col:7, col:41> 'int'
    | |   |-ImplicitCastExpr 0x14a826fe0 <col:7> 'int (*)()' <FunctionToPointerDecay>
    | |   | `-DeclRefExpr 0x14a826f30 <col:7> 'int ()' Function 0x14a826e78 'asn1_length_decode' 'int ()'
    | |   |-ImplicitCastExpr 0x14a827030 <col:26> 'struct asn1_ctx *' <LValueToRValue>
    | |   | `-DeclRefExpr 0x14a826f50 <col:26> 'struct asn1_ctx *' lvalue ParmVar 0x14a80e248 'ctx' 'struct asn1_ctx *'
    | |   |-UnaryOperator 0x14a826f90 <col:31, col:32> 'unsigned int *' prefix '&' cannot overflow
    | |   | `-DeclRefExpr 0x14a826f70 <col:32> 'unsigned int' lvalue Var 0x14a8269a8 'def' 'unsigned int'
    | |   `-UnaryOperator 0x14a826fc8 <col:37, col:38> 'unsigned int *' prefix '&' cannot overflow
    | |     `-DeclRefExpr 0x14a826fa8 <col:38> 'unsigned int' lvalue Var 0x14a826a78 'len' 'unsigned int'
    | `-ReturnStmt 0x14a827080 <line:12:3, col:10>
    |   `-IntegerLiteral 0x14a827060 <col:10> 'int' 0
    |-IfStmt 0x14a827320 <line:14:2, line:17:10> has_else
    | |-ImplicitCastExpr 0x14a8270d0 <line:14:6> 'unsigned int' <LValueToRValue>
    | | `-DeclRefExpr 0x14a8270b0 <col:6> 'unsigned int' lvalue Var 0x14a8269a8 'def' 'unsigned int'
    | |-BinaryOperator 0x14a8271d8 <line:15:3, col:25> 'unsigned char *' contains-errors '='
    | | |-UnaryOperator 0x14a827120 <col:3, col:4> 'unsigned char *' lvalue prefix '*' cannot overflow
    | | | `-ImplicitCastExpr 0x14a827108 <col:4> 'unsigned char **' <LValueToRValue>
    | | |   `-DeclRefExpr 0x14a8270e8 <col:4> 'unsigned char **' lvalue ParmVar 0x14a80e330 'eoc' 'unsigned char **'
    | | `-BinaryOperator 0x14a8271b8 <col:10, col:25> '<dependent type>' contains-errors '+'
    | |   |-RecoveryExpr 0x14a827170 <col:10, col:15> '<dependent type>' contains-errors lvalue
    | |   | `-DeclRefExpr 0x14a827138 <col:10> 'struct asn1_ctx *' lvalue ParmVar 0x14a80e248 'ctx' 'struct asn1_ctx *'
    | |   `-DeclRefExpr 0x14a827198 <col:25> 'unsigned int' lvalue Var 0x14a826a78 'len' 'unsigned int'
    | `-BinaryOperator 0x14a827300 <line:17:3, col:10> 'unsigned char *' contains-errors '='
    |   |-UnaryOperator 0x14a8272c8 <col:3, col:4> 'unsigned char *' lvalue prefix '*' cannot overflow
    |   | `-ImplicitCastExpr 0x14a8272b0 <col:4> 'unsigned char **' <LValueToRValue>
    |   |   `-DeclRefExpr 0x14a8271f8 <col:4> 'unsigned char **' lvalue ParmVar 0x14a80e330 'eoc' 'unsigned char **'
    |   `-RecoveryExpr 0x14a8272e0 <col:10> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x14a827370 <line:18:2, col:9>
      `-IntegerLiteral 0x14a827350 <col:9> 'int' 1
