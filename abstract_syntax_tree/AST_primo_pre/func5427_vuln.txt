`-FunctionDecl 0x14a0fc718  line:1:12 invalid ahci_populate_sglist 'int (int *, int *, int)' static
  |-ParmVarDecl 0x14a0fc528 <col:33, col:45> col:45 invalid ad 'int *'
  |-ParmVarDecl 0x14a0fc5a8 <col:49, col:61> col:61 invalid sglist 'int *'
  |-ParmVarDecl 0x14a0fc628 <col:69, col:73> col:73 used offset 'int'
  `-CompoundStmt 0x14a118020 <line:2:1, line:75:1>
    |-DeclStmt 0x14a0fc988 <line:6:5, col:58>
    | `-VarDecl 0x14a0fc870 <col:5, col:37> col:9 used sglist_alloc_hint 'int' cinit
    |   `-BinaryOperator 0x14a0fc968 <col:29, col:37> '<dependent type>' contains-errors '>>'
    |     |-RecoveryExpr 0x14a0fc928 <col:29> '<dependent type>' contains-errors lvalue
    |     `-RecoveryExpr 0x14a0fc948 <col:37> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x14a0fca38 <line:10:5, col:10>
    | `-VarDecl 0x14a0fc9d0 <col:5, col:9> col:9 used i 'int'
    |-DeclStmt 0x14a0fcaf0 <line:11:5, col:14>
    | `-VarDecl 0x14a0fca68 <col:5, col:13> col:9 used r 'int' cinit
    |   `-IntegerLiteral 0x14a0fcad0 <col:13> 'int' 0
    |-DeclStmt 0x14a0fcba8 <line:12:5, col:16>
    | `-VarDecl 0x14a0fcb20 <col:5, col:15> col:9 used sum 'int' cinit
    |   `-IntegerLiteral 0x14a0fcb88 <col:15> 'int' 0
    |-DeclStmt 0x14a115ca0 <line:13:5, col:21>
    | `-VarDecl 0x14a115c00 <col:5, col:20> col:9 used off_idx 'int' cinit
    |   `-UnaryOperator 0x14a115c88 <col:19, col:20> 'int' prefix '-'
    |     `-IntegerLiteral 0x14a115c68 <col:20> 'int' 1
    |-DeclStmt 0x14a115d70 <line:14:5, col:21>
    | `-VarDecl 0x14a115cd0 <col:5, col:20> col:9 used off_pos 'int' cinit
    |   `-UnaryOperator 0x14a115d58 <col:19, col:20> 'int' prefix '-'
    |     `-IntegerLiteral 0x14a115d38 <col:20> 'int' 1
    |-DeclStmt 0x14a115e08 <line:15:5, col:23>
    | `-VarDecl 0x14a115da0 <col:5, col:9> col:9 used tbl_entry_size 'int'
    |-IfStmt 0x14a1163c0 <line:19:5, line:22:5>
    | |-UnaryOperator 0x14a1160c8 <line:19:9, col:10> 'int' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x14a1160b0 <col:10> 'int' contains-errors <LValueToRValue>
    | |   `-DeclRefExpr 0x14a116090 <col:10> 'int' contains-errors lvalue Var 0x14a0fc870 'sglist_alloc_hint' 'int'
    | `-CompoundStmt 0x14a1163a0 <col:29, line:22:5>
    |   |-CallExpr 0x14a116320 <line:20:9, col:41> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x14a1161c0 <col:9> 'int ()' Function 0x14a116108 'DPRINTF' 'int ()'
    |   | |-CXXDependentScopeMemberExpr 0x14a116200 <col:17, col:21> '<dependent type>' contains-errors lvalue ->port_no
    |   | | `-RecoveryExpr 0x14a1161e0 <col:17> '<dependent type>' contains-errors lvalue
    |   | |-StringLiteral 0x14a116290 <col:30> 'char[4]' lvalue "STR"
    |   | `-RecoveryExpr 0x14a116300 <col:37> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x14a116390 <line:21:9, col:17>
    |     `-UnaryOperator 0x14a116378 <col:16, col:17> 'int' prefix '-'
    |       `-IntegerLiteral 0x14a116358 <col:17> 'int' 1
    |-IfStmt 0x14a1166f0 <line:25:5, line:29:5>
    | |-RecoveryExpr 0x14a116590 <line:25:9, line:26:57> '_Bool' contains-errors
    | `-CompoundStmt 0x14a1166d0 <col:59, line:29:5>
    |   |-CallExpr 0x14a116658 <line:27:9, col:35> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x14a1165b0 <col:9> 'int ()' Function 0x14a116108 'DPRINTF' 'int ()'
    |   | |-CXXDependentScopeMemberExpr 0x14a1165f0 <col:17, col:21> '<dependent type>' contains-errors lvalue ->port_no
    |   | | `-RecoveryExpr 0x14a1165d0 <col:17> '<dependent type>' contains-errors lvalue
    |   | `-StringLiteral 0x14a116638 <col:30> 'char[4]' lvalue "STR"
    |   `-ReturnStmt 0x14a1166c0 <line:28:9, col:17>
    |     `-UnaryOperator 0x14a1166a8 <col:16, col:17> 'int' prefix '-'
    |       `-IntegerLiteral 0x14a116688 <col:17> 'int' 1
    |-IfStmt 0x14a116910 <line:31:5, line:35:5>
    | |-RecoveryExpr 0x14a116710 <line:31:9, col:20> '_Bool' contains-errors
    | `-CompoundStmt 0x14a1168e8 <col:35, line:35:5>
    |   |-CallExpr 0x14a1167d8 <line:32:9, col:35> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x14a116730 <col:9> 'int ()' Function 0x14a116108 'DPRINTF' 'int ()'
    |   | |-CXXDependentScopeMemberExpr 0x14a116770 <col:17, col:21> '<dependent type>' contains-errors lvalue ->port_no
    |   | | `-RecoveryExpr 0x14a116750 <col:17> '<dependent type>' contains-errors lvalue
    |   | `-StringLiteral 0x14a1167b8 <col:30> 'char[4]' lvalue "STR"
    |   |-BinaryOperator 0x14a116860 <line:33:9, col:14> 'int' '='
    |   | |-DeclRefExpr 0x14a116808 <col:9> 'int' lvalue Var 0x14a0fca68 'r' 'int'
    |   | `-UnaryOperator 0x14a116848 <col:13, col:14> 'int' prefix '-'
    |   |   `-IntegerLiteral 0x14a116828 <col:14> 'int' 1
    |   `-GotoStmt 0x14a1168d0 <line:34:9, col:14> 'out' 0x14a116880
    |-IfStmt 0x14a117de0 <line:38:5, line:69:5>
    | |-BinaryOperator 0x14a116988 <line:38:9, col:29> 'int' contains-errors '>'
    | | |-ImplicitCastExpr 0x14a116970 <col:9> 'int' contains-errors <LValueToRValue>
    | | | `-DeclRefExpr 0x14a116930 <col:9> 'int' contains-errors lvalue Var 0x14a0fc870 'sglist_alloc_hint' 'int'
    | | `-IntegerLiteral 0x14a116950 <col:29> 'int' 0
    | `-CompoundStmt 0x14a117db0 <col:32, line:69:5>
    |   |-BinaryOperator 0x14a1169e8 <line:40:9, col:15> 'int' '='
    |   | |-DeclRefExpr 0x14a1169a8 <col:9> 'int' lvalue Var 0x14a0fcb20 'sum' 'int'
    |   | `-IntegerLiteral 0x14a1169c8 <col:15> 'int' 0
    |   |-ForStmt 0x14a117040 <line:41:9, line:50:9>
    |   | |-BinaryOperator 0x14a116a48 <line:41:14, col:18> 'int' '='
    |   | | |-DeclRefExpr 0x14a116a08 <col:14> 'int' lvalue Var 0x14a0fc9d0 'i' 'int'
    |   | | `-IntegerLiteral 0x14a116a28 <col:18> 'int' 0
    |   | |-<<<NULL>>>
    |   | |-BinaryOperator 0x14a116ad8 <col:21, col:25> 'int' contains-errors '<'
    |   | | |-ImplicitCastExpr 0x14a116aa8 <col:21> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x14a116a68 <col:21> 'int' lvalue Var 0x14a0fc9d0 'i' 'int'
    |   | | `-ImplicitCastExpr 0x14a116ac0 <col:25> 'int' contains-errors <LValueToRValue>
    |   | |   `-DeclRefExpr 0x14a116a88 <col:25> 'int' contains-errors lvalue Var 0x14a0fc870 'sglist_alloc_hint' 'int'
    |   | |-UnaryOperator 0x14a116b18 <col:44, col:45> 'int' postfix '++'
    |   | | `-DeclRefExpr 0x14a116af8 <col:44> 'int' lvalue Var 0x14a0fc9d0 'i' 'int'
    |   | `-CompoundStmt 0x14a117020 <col:49, line:50:9>
    |   |   |-IfStmt 0x14a116f78 <line:44:13, line:48:13>
    |   |   | |-BinaryOperator 0x14a116de0 <line:44:17, col:48> 'int' '<='
    |   |   | | |-ImplicitCastExpr 0x14a116dc8 <col:17> 'int' <LValueToRValue>
    |   |   | | | `-DeclRefExpr 0x14a116cf8 <col:17> 'int' lvalue ParmVar 0x14a0fc628 'offset' 'int'
    |   |   | | `-ParenExpr 0x14a116da8 <col:27, col:48> 'int'
    |   |   | |   `-BinaryOperator 0x14a116d88 <col:28, col:34> 'int' '+'
    |   |   | |     |-ImplicitCastExpr 0x14a116d58 <col:28> 'int' <LValueToRValue>
    |   |   | |     | `-DeclRefExpr 0x14a116d18 <col:28> 'int' lvalue Var 0x14a0fcb20 'sum' 'int'
    |   |   | |     `-ImplicitCastExpr 0x14a116d70 <col:34> 'int' <LValueToRValue>
    |   |   | |       `-DeclRefExpr 0x14a116d38 <col:34> 'int' lvalue Var 0x14a115da0 'tbl_entry_size' 'int'
    |   |   | `-CompoundStmt 0x14a116f50 <col:51, line:48:13>
    |   |   |   |-BinaryOperator 0x14a116e58 <line:45:17, col:27> 'int' '='
    |   |   |   | |-DeclRefExpr 0x14a116e00 <col:17> 'int' lvalue Var 0x14a115c00 'off_idx' 'int'
    |   |   |   | `-ImplicitCastExpr 0x14a116e40 <col:27> 'int' <LValueToRValue>
    |   |   |   |   `-DeclRefExpr 0x14a116e20 <col:27> 'int' lvalue Var 0x14a0fc9d0 'i' 'int'
    |   |   |   |-BinaryOperator 0x14a116f28 <line:46:17, col:36> 'int' '='
    |   |   |   | |-DeclRefExpr 0x14a116e78 <col:17> 'int' lvalue Var 0x14a115cd0 'off_pos' 'int'
    |   |   |   | `-BinaryOperator 0x14a116f08 <col:27, col:36> 'int' '-'
    |   |   |   |   |-ImplicitCastExpr 0x14a116ed8 <col:27> 'int' <LValueToRValue>
    |   |   |   |   | `-DeclRefExpr 0x14a116e98 <col:27> 'int' lvalue ParmVar 0x14a0fc628 'offset' 'int'
    |   |   |   |   `-ImplicitCastExpr 0x14a116ef0 <col:36> 'int' <LValueToRValue>
    |   |   |   |     `-DeclRefExpr 0x14a116eb8 <col:36> 'int' lvalue Var 0x14a0fcb20 'sum' 'int'
    |   |   |   `-BreakStmt 0x14a116f48 <line:47:17>
    |   |   `-CompoundAssignOperator 0x14a116ff0 <line:49:13, col:20> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |   |     |-DeclRefExpr 0x14a116f98 <col:13> 'int' lvalue Var 0x14a0fcb20 'sum' 'int'
    |   |     `-ImplicitCastExpr 0x14a116fd8 <col:20> 'int' <LValueToRValue>
    |   |       `-DeclRefExpr 0x14a116fb8 <col:20> 'int' lvalue Var 0x14a115da0 'tbl_entry_size' 'int'
    |   |-IfStmt 0x14a1175b8 <line:51:9, line:57:9>
    |   | |-BinaryOperator 0x14a117290 <line:51:13, col:74> 'int' '||'
    |   | | |-BinaryOperator 0x14a1171c0 <col:13, col:44> 'int' '||'
    |   | | | |-ParenExpr 0x14a117108 <col:13, col:27> 'int'
    |   | | | | `-BinaryOperator 0x14a1170e8 <col:14, col:26> 'int' '=='
    |   | | | |   |-ImplicitCastExpr 0x14a1170d0 <col:14> 'int' <LValueToRValue>
    |   | | | |   | `-DeclRefExpr 0x14a117078 <col:14> 'int' lvalue Var 0x14a115c00 'off_idx' 'int'
    |   | | | |   `-UnaryOperator 0x14a1170b8 <col:25, col:26> 'int' prefix '-'
    |   | | | |     `-IntegerLiteral 0x14a117098 <col:26> 'int' 1
    |   | | | `-ParenExpr 0x14a1171a0 <col:32, col:44> 'int'
    |   | | |   `-BinaryOperator 0x14a117180 <col:33, col:43> 'int' '<'
    |   | | |     |-ImplicitCastExpr 0x14a117168 <col:33> 'int' <LValueToRValue>
    |   | | |     | `-DeclRefExpr 0x14a117128 <col:33> 'int' lvalue Var 0x14a115cd0 'off_pos' 'int'
    |   | | |     `-IntegerLiteral 0x14a117148 <col:43> 'int' 0
    |   | | `-ParenExpr 0x14a117270 <col:49, col:74> 'int'
    |   | |   `-BinaryOperator 0x14a117250 <col:50, col:60> 'int' '>'
    |   | |     |-ImplicitCastExpr 0x14a117220 <col:50> 'int' <LValueToRValue>
    |   | |     | `-DeclRefExpr 0x14a1171e0 <col:50> 'int' lvalue Var 0x14a115cd0 'off_pos' 'int'
    |   | |     `-ImplicitCastExpr 0x14a117238 <col:60> 'int' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x14a117200 <col:60> 'int' lvalue Var 0x14a115da0 'tbl_entry_size' 'int'
    |   | `-CompoundStmt 0x14a117590 <col:77, line:57:9>
    |   |   |-CallExpr 0x14a1174b8 <line:52:13, line:54:55> '<dependent type>' contains-errors
    |   |   | |-DeclRefExpr 0x14a1172b0 <line:52:13> 'int ()' Function 0x14a116108 'DPRINTF' 'int ()'
    |   |   | |-CXXDependentScopeMemberExpr 0x14a1172f0 <col:21, col:25> '<dependent type>' contains-errors lvalue ->port_no
    |   |   | | `-RecoveryExpr 0x14a1172d0 <col:21> '<dependent type>' contains-errors lvalue
    |   |   | |-StringLiteral 0x14a117380 <col:34, line:53:29> 'char[7]' lvalue "STRSTR"
    |   |   | |-PredefinedExpr 0x14a117460 <line:54:29> 'const char[21]' lvalue __func__
    |   |   | | `-StringLiteral 0x14a117430 <col:29> 'const char[21]' lvalue "ahci_populate_sglist"
    |   |   | |-DeclRefExpr 0x14a117478 <col:39> 'int' lvalue Var 0x14a115c00 'off_idx' 'int'
    |   |   | `-DeclRefExpr 0x14a117498 <col:48> 'int' lvalue Var 0x14a115cd0 'off_pos' 'int'
    |   |   |-BinaryOperator 0x14a117558 <line:55:13, col:18> 'int' '='
    |   |   | |-DeclRefExpr 0x14a117500 <col:13> 'int' lvalue Var 0x14a0fca68 'r' 'int'
    |   |   | `-UnaryOperator 0x14a117540 <col:17, col:18> 'int' prefix '-'
    |   |   |   `-IntegerLiteral 0x14a117520 <col:18> 'int' 1
    |   |   `-GotoStmt 0x14a117578 <line:56:13, col:18> 'out' 0x14a116880
    |   `-ForStmt 0x14a117d78 <line:64:9, line:68:9>
    |     |-BinaryOperator 0x14a117bb0 <line:64:14, col:28> 'int' '='
    |     | |-DeclRefExpr 0x14a117b18 <col:14> 'int' lvalue Var 0x14a0fc9d0 'i' 'int'
    |     | `-BinaryOperator 0x14a117b90 <col:18, col:28> 'int' '+'
    |     |   |-ImplicitCastExpr 0x14a117b78 <col:18> 'int' <LValueToRValue>
    |     |   | `-DeclRefExpr 0x14a117b38 <col:18> 'int' lvalue Var 0x14a115c00 'off_idx' 'int'
    |     |   `-IntegerLiteral 0x14a117b58 <col:28> 'int' 1
    |     |-<<<NULL>>>
    |     |-BinaryOperator 0x14a117c50 <col:31, col:35> 'int' contains-errors '<'
    |     | |-ImplicitCastExpr 0x14a117c20 <col:31> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x14a117bd0 <col:31> 'int' lvalue Var 0x14a0fc9d0 'i' 'int'
    |     | `-ImplicitCastExpr 0x14a117c38 <col:35> 'int' contains-errors <LValueToRValue>
    |     |   `-DeclRefExpr 0x14a117c00 <col:35> 'int' contains-errors lvalue Var 0x14a0fc870 'sglist_alloc_hint' 'int'
    |     |-UnaryOperator 0x14a117c90 <col:54, col:55> 'int' postfix '++'
    |     | `-DeclRefExpr 0x14a117c70 <col:54> 'int' lvalue Var 0x14a0fc9d0 'i' 'int'
    |     `-CompoundStmt 0x14a117d68 <col:59, line:68:9>
    |-LabelStmt 0x14a117fb8 <line:71:1, col:4> 'out'
    | `-NullStmt 0x14a117fb0 <col:4>
    `-ReturnStmt 0x14a118010 <line:74:5, col:12>
      `-ImplicitCastExpr 0x14a117ff8 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x14a117fd8 <col:12> 'int' lvalue Var 0x14a0fca68 'r' 'int'
