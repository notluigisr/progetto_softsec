`-FunctionDecl 0x12980e430  line:1:13 _cmd_window_show_opt 'void (const char *, int)' static
  |-ParmVarDecl 0x12980e2d8 <col:34, col:46> col:46 used data 'const char *'
  |-ParmVarDecl 0x12980e358 <col:52, col:56> col:56 used right 'int'
  `-CompoundStmt 0x12a808818 <line:2:1, line:38:1>
    |-IfStmt 0x12980e7e8 <line:6:2, col:62>
    | |-BinaryOperator 0x12980e610 <col:6, col:15> 'int' '=='
    | | |-ImplicitCastExpr 0x12980e5f8 <col:6, col:7> 'int' <IntegralCast>
    | | | `-ImplicitCastExpr 0x12980e5e0 <col:6, col:7> 'char' <LValueToRValue>
    | | |   `-UnaryOperator 0x12980e5b0 <col:6, col:7> 'const char' lvalue prefix '*' cannot overflow
    | | |     `-ImplicitCastExpr 0x12980e598 <col:7> 'const char *' <LValueToRValue>
    | | |       `-DeclRefExpr 0x12980e578 <col:7> 'const char *' lvalue ParmVar 0x12980e2d8 'data' 'const char *'
    | | `-CharacterLiteral 0x12980e5c8 <col:15> 'int' 0
    | `-CallExpr 0x12980e7c0 <col:21, col:62> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12980e740 <col:21> 'int ()' Function 0x12980e688 'cmd_return_error' 'int ()'
    |   `-RecoveryExpr 0x12980e7a0 <col:38> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12a122798 <line:8:2, line:16:2> has_else
    | |-CallExpr 0x12980e988 <line:8:6, col:27> 'int'
    | | |-ImplicitCastExpr 0x12980e970 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x12980e8e8 <col:6> 'int ()' Function 0x12980e830 'is_numeric' 'int ()'
    | | |-ImplicitCastExpr 0x12980e9b8 <col:17> 'const char *' <LValueToRValue>
    | | | `-DeclRefExpr 0x12980e908 <col:17> 'const char *' lvalue ParmVar 0x12980e2d8 'data' 'const char *'
    | | `-CharacterLiteral 0x12980e928 <col:23> 'int' 0
    | |-CompoundStmt 0x12a1225c0 <col:30, line:14:2>
    | | `-IfStmt 0x12a1225a0 <line:10:3, line:13:3>
    | |   |-BinaryOperator 0x12a122320 <line:10:7, col:17> 'int' contains-errors '=='
    | |   | |-RecoveryExpr 0x12a1222e0 <col:7> '<dependent type>' contains-errors lvalue
    | |   | `-RecoveryExpr 0x12a122300 <col:17> '<dependent type>' contains-errors lvalue
    | |   `-CompoundStmt 0x12a122588 <col:23, line:13:3>
    | |     `-CallExpr 0x12a122548 <line:11:4, line:12:35> '<dependent type>' contains-errors
    | |       |-DeclRefExpr 0x12a122420 <line:11:4> 'int ()' Function 0x12a122368 'printformat_window' 'int ()'
    | |       |-RecoveryExpr 0x12a1224e8 <col:23> '<dependent type>' contains-errors lvalue
    | |       |-RecoveryExpr 0x12a122508 <col:35> '<dependent type>' contains-errors lvalue
    | |       |-RecoveryExpr 0x12a122528 <line:12:9> '<dependent type>' contains-errors lvalue
    | |       `-DeclRefExpr 0x12a122488 <col:31> 'const char *' lvalue ParmVar 0x12980e2d8 'data' 'const char *'
    | `-CompoundStmt 0x12a122788 <line:14:9, line:16:2>
    |-IfStmt 0x12a122948 <line:18:2, line:19:3>
    | |-RecoveryExpr 0x12a122918 <line:18:6, col:48> '_Bool' contains-errors
    | `-ReturnStmt 0x12a122938 <line:19:3>
    `-IfStmt 0x12a122ce0 <line:21:2, line:27:2>
      |-RecoveryExpr 0x12a122a68 <line:21:6, col:26> '_Bool' contains-errors
      `-CompoundStmt 0x12a122cc8 <col:34, line:27:2>
        `-IfStmt 0x12a122ca8 <line:22:3, line:26:3>
          |-UnaryOperator 0x12a122c48 <line:22:7, col:31> 'int' prefix '!' cannot overflow
          | `-CallExpr 0x12a122c08 <col:8, col:31> 'int'
          |   |-ImplicitCastExpr 0x12a122bf0 <col:8> 'int (*)()' <FunctionToPointerDecay>
          |   | `-DeclRefExpr 0x12a122b68 <col:8> 'int ()' Function 0x12a122ab0 'settings_get_bool' 'int ()'
          |   `-ImplicitCastExpr 0x12a122c30 <col:26> 'char *' <ArrayToPointerDecay>
          |     `-StringLiteral 0x12a122bd0 <col:26> 'char[4]' lvalue "STR"
          `-CompoundStmt 0x12a122c90 <col:34, line:26:3>
            `-ReturnStmt 0x12a122c80 <line:25:4>
