`-FunctionDecl 0x11e928508  line:1:5 invalid hashTypeGetValue 'int (int *, int, unsigned char **, unsigned int *, long long *)'
  |-ParmVarDecl 0x11e928128 <col:22, col:28> col:28 invalid o 'int *'
  |-ParmVarDecl 0x11e9281a8 <col:31, col:35> col:35 invalid field 'int'
  |-ParmVarDecl 0x11e928290 <col:42, col:58> col:58 used vstr 'unsigned char **'
  |-ParmVarDecl 0x11e928348 <col:64, col:78> col:78 used vlen 'unsigned int *'
  |-ParmVarDecl 0x11e9283f8 <col:84, col:95> col:95 used vll 'long long *'
  `-CompoundStmt 0x11f00a238 <col:100, line:17:1>
    |-IfStmt 0x11f00a1c0 <line:2:5, line:15:5> has_else
    | |-BinaryOperator 0x11e928698 <line:2:9, col:24> 'int' contains-errors '=='
    | | |-CXXDependentScopeMemberExpr 0x11e9285f8 <col:9, col:12> '<dependent type>' contains-errors lvalue ->encoding
    | | | `-RecoveryExpr 0x11e9285d8 <col:9> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x11e928678 <col:24> '<dependent type>' contains-errors lvalue
    | |-CompoundStmt 0x11f009910 <col:46, line:6:5>
    | | |-BinaryOperator 0x11e9287c0 <line:3:9, col:17> 'unsigned char *' contains-errors '='
    | | | |-UnaryOperator 0x11e928788 <col:9, col:10> 'unsigned char *' lvalue prefix '*' cannot overflow
    | | | | `-ImplicitCastExpr 0x11e928770 <col:10> 'unsigned char **' <LValueToRValue>
    | | | |   `-DeclRefExpr 0x11e9286b8 <col:10> 'unsigned char **' lvalue ParmVar 0x11e928290 'vstr' 'unsigned char **'
    | | | `-RecoveryExpr 0x11e9287a0 <col:17> '<dependent type>' contains-errors lvalue
    | | `-IfStmt 0x11f0098f0 <line:4:9, line:5:20>
    | |   |-BinaryOperator 0x11f009888 <line:4:13, col:66> 'int' contains-errors '=='
    | |   | |-CallExpr 0x11f009820 <col:13, col:61> '<dependent type>' contains-errors
    | |   | | |-DeclRefExpr 0x11f009760 <col:13> 'int ()' Function 0x11f0096a8 'hashTypeGetFromZiplist' 'int ()'
    | |   | | |-RecoveryExpr 0x11f009780 <col:36> '<dependent type>' contains-errors lvalue
    | |   | | |-RecoveryExpr 0x11f0097a0 <col:39> '<dependent type>' contains-errors lvalue
    | |   | | |-DeclRefExpr 0x11f0097c0 <col:46> 'unsigned char **' lvalue ParmVar 0x11e928290 'vstr' 'unsigned char **'
    | |   | | |-DeclRefExpr 0x11f0097e0 <col:52> 'unsigned int *' lvalue ParmVar 0x11e928348 'vlen' 'unsigned int *'
    | |   | | `-DeclRefExpr 0x11f009800 <col:58> 'long long *' lvalue ParmVar 0x11e9283f8 'vll' 'long long *'
    | |   | `-IntegerLiteral 0x11f009868 <col:66> 'int' 0
    | |   `-ReturnStmt 0x11f0098e0 <line:5:13, col:20>
    | |     `-RecoveryExpr 0x11f0098c0 <col:20> '<dependent type>' contains-errors lvalue
    | `-IfStmt 0x11f00a190 <line:6:12, line:15:5> has_else
    |   |-BinaryOperator 0x11f0099f0 <line:6:16, col:31> 'int' contains-errors '=='
    |   | |-CXXDependentScopeMemberExpr 0x11f009950 <col:16, col:19> '<dependent type>' contains-errors lvalue ->encoding
    |   | | `-RecoveryExpr 0x11f009930 <col:16> '<dependent type>' contains-errors lvalue
    |   | `-RecoveryExpr 0x11f0099d0 <col:31> '<dependent type>' contains-errors lvalue
    |   |-CompoundStmt 0x11f009f70 <col:48, line:13:5>
    |   | `-IfStmt 0x11f009f50 <line:8:9, line:12:9>
    |   |   |-RecoveryExpr 0x11f009bd0 <line:8:13, col:61> '_Bool' contains-errors
    |   |   `-CompoundStmt 0x11f009f30 <col:67, line:12:9>
    |   |     |-BinaryOperator 0x11f009ec8 <line:10:13, col:33> 'unsigned int' contains-errors '='
    |   |     | |-UnaryOperator 0x11f009e68 <col:13, col:14> 'unsigned int' lvalue prefix '*' cannot overflow
    |   |     | | `-ImplicitCastExpr 0x11f009e50 <col:14> 'unsigned int *' <LValueToRValue>
    |   |     | |   `-DeclRefExpr 0x11f009c70 <col:14> 'unsigned int *' lvalue ParmVar 0x11e928348 'vlen' 'unsigned int *'
    |   |     | `-CallExpr 0x11f009ea0 <col:21, col:33> '<dependent type>' contains-errors
    |   |     |   |-DeclRefExpr 0x11f009da0 <col:21> 'int ()' Function 0x11f009ce8 'sdslen' 'int ()'
    |   |     |   `-RecoveryExpr 0x11f009e80 <col:28> '<dependent type>' contains-errors lvalue
    |   |     `-ReturnStmt 0x11f009f20 <line:11:13, col:20>
    |   |       `-RecoveryExpr 0x11f009f00 <col:20> '<dependent type>' contains-errors lvalue
    |   `-CompoundStmt 0x11f00a178 <line:13:12, line:15:5>
    |     `-CallExpr 0x11f00a138 <line:14:9, col:26> 'int'
    |       |-ImplicitCastExpr 0x11f00a120 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x11f00a068 <col:9> 'int ()' Function 0x11f009fb0 'serverPanic' 'int ()'
    |       `-ImplicitCastExpr 0x11f00a160 <col:21> 'char *' <ArrayToPointerDecay>
    |         `-StringLiteral 0x11f00a0d0 <col:21> 'char[4]' lvalue "STR"
    `-ReturnStmt 0x11f00a228 <line:16:5, col:12>
      `-RecoveryExpr 0x11f00a208 <col:12> '<dependent type>' contains-errors lvalue
