`-FunctionDecl 0x13d1281f0  line:1:13 invalid print_serial 'void (int *)' static
  |-ParmVarDecl 0x13d128128 <col:26, col:37> col:37 invalid in_card 'int *'
  `-CompoundStmt 0x13d142060 <line:2:1, line:14:1>
    |-DeclStmt 0x13d128320 <line:3:2, col:7>
    | `-VarDecl 0x13d1282b8 <col:2, col:6> col:6 used r 'int'
    |-BinaryOperator 0x13d128578 <line:6:2, col:18> 'int' contains-errors '='
    | |-DeclRefExpr 0x13d128338 <col:2> 'int' lvalue Var 0x13d1282b8 'r' 'int'
    | `-CallExpr 0x13d128550 <col:6, col:18> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13d1284b0 <col:6> 'int ()' Function 0x13d1283f8 'sc_lock' 'int ()'
    |   `-RecoveryExpr 0x13d128530 <col:14> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x13d1418d0 <line:7:2, line:8:60>
    | |-BinaryOperator 0x13d128610 <line:7:6, col:11> 'int' contains-errors '=='
    | | |-DeclRefExpr 0x13d128598 <col:6> 'int' lvalue Var 0x13d1282b8 'r' 'int'
    | | `-RecoveryExpr 0x13d1285f0 <col:11> '<dependent type>' contains-errors lvalue
    | `-BinaryOperator 0x13d1418b0 <line:8:3, col:60> 'int' contains-errors '='
    |   |-DeclRefExpr 0x13d128630 <col:3> 'int' lvalue Var 0x13d1282b8 'r' 'int'
    |   `-CallExpr 0x13d141878 <col:7, col:60> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x13d128730 <col:7> 'int ()' Function 0x13d128678 'sc_card_ctl' 'int ()'
    |     |-RecoveryExpr 0x13d128750 <col:19> '<dependent type>' contains-errors lvalue
    |     |-RecoveryExpr 0x13d141820 <col:28> '<dependent type>' contains-errors lvalue
    |     `-UnaryOperator 0x13d141860 <col:53, col:54> '<dependent type>' contains-errors prefix '&' cannot overflow
    |       `-RecoveryExpr 0x13d141840 <col:54> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x13d141a50 <line:9:2, col:16> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13d1419d0 <col:2> 'int ()' Function 0x13d141918 'sc_unlock' 'int ()'
    | `-RecoveryExpr 0x13d141a30 <col:12> '<dependent type>' contains-errors lvalue
    `-IfStmt 0x13d142030 <line:10:2, line:13:57> has_else
      |-ImplicitCastExpr 0x13d141a98 <line:10:6> 'int' <LValueToRValue>
      | `-DeclRefExpr 0x13d141a78 <col:6> 'int' lvalue Var 0x13d1282b8 'r' 'int'
      |-CallExpr 0x13d141c80 <line:11:3, col:24> '<dependent type>' contains-errors
      | |-DeclRefExpr 0x13d141b90 <col:3> 'int ()' Function 0x13d141ad8 'fprintf' 'int ()'
      | |-RecoveryExpr 0x13d141c60 <col:11> '<dependent type>' contains-errors lvalue
      | `-StringLiteral 0x13d141c10 <col:19> 'char[4]' lvalue "STR"
      `-CallExpr 0x13d141ff0 <line:13:3, col:57> '<dependent type>' contains-errors
        |-DeclRefExpr 0x13d141d90 <col:3> 'int ()' Function 0x13d141cd8 'util_hex_dump_asc' 'int ()'
        |-RecoveryExpr 0x13d141f00 <col:21> '<dependent type>' contains-errors lvalue
        |-CXXDependentScopeMemberExpr 0x13d141f40 <col:29, col:36> '<dependent type>' contains-errors lvalue .value
        | `-RecoveryExpr 0x13d141f20 <col:29> '<dependent type>' contains-errors lvalue
        |-CXXDependentScopeMemberExpr 0x13d141fa8 <col:43, col:50> '<dependent type>' contains-errors lvalue .len
        | `-RecoveryExpr 0x13d141f88 <col:43> '<dependent type>' contains-errors lvalue
        `-UnaryOperator 0x13d141ea8 <col:55, col:56> 'int' prefix '-'
          `-IntegerLiteral 0x13d141e88 <col:56> 'int' 1
