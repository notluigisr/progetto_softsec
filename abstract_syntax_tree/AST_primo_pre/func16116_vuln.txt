`-FunctionDecl 0x13d00dd90  line:1:13 test_jwt_token_escape 'void (void)' static
  `-CompoundStmt 0x13c926c68 <line:2:1, line:58:1>
    |-DeclStmt 0x13d026ee8 <line:3:2, line:21:3>
    | |-RecordDecl 0x13d00de80 <line:3:2, line:9:2> line:3:9 struct test_case definition
    | | |-FieldDecl 0x13d00df38 <line:4:3, col:15> col:15 referenced azp 'const char *'
    | | |-FieldDecl 0x13d00dfa0 <line:5:3, col:15> col:15 referenced alg 'const char *'
    | | |-FieldDecl 0x13d00e008 <line:6:3, col:15> col:15 referenced kid 'const char *'
    | | |-FieldDecl 0x13d00e070 <line:7:3, col:15> col:15 referenced esc_azp 'const char *'
    | | `-FieldDecl 0x13d00e0d8 <line:8:3, col:15> col:15 referenced esc_kid 'const char *'
    | `-VarDecl 0x13d00e270 <line:3:2, line:21:2> line:9:4 used test_cases 'struct test_case[5]' cinit
    |   `-InitListExpr 0x13d026890 <col:19, line:21:2> 'struct test_case[5]'
    |     |-InitListExpr 0x13d0268e0 <line:10:3, col:11> 'struct test_case'
    |     | |-ImplicitCastExpr 0x13d026960 <col:5> 'const char *' <NoOp>
    |     | | `-ImplicitCastExpr 0x13d026948 <col:5> 'char *' <ArrayToPointerDecay>
    |     | |   `-StringLiteral 0x13d00e320 <col:5> 'char[4]' lvalue "STR"
    |     | |-ImplicitValueInitExpr 0x13d026978 <<invalid sloc>> 'const char *'
    |     | |-ImplicitValueInitExpr 0x13d026988 <<invalid sloc>> 'const char *'
    |     | |-ImplicitValueInitExpr 0x13d026998 <<invalid sloc>> 'const char *'
    |     | `-ImplicitValueInitExpr 0x13d0269a8 <<invalid sloc>> 'const char *'
    |     |-InitListExpr 0x13d0269d0 <line:11:3, col:11> 'struct test_case'
    |     | |-ImplicitCastExpr 0x13d026a50 <col:5> 'const char *' <NoOp>
    |     | | `-ImplicitCastExpr 0x13d026a38 <col:5> 'char *' <ArrayToPointerDecay>
    |     | |   `-StringLiteral 0x13d00e388 <col:5> 'char[4]' lvalue "STR"
    |     | |-ImplicitValueInitExpr 0x13d026a68 <<invalid sloc>> 'const char *'
    |     | |-ImplicitValueInitExpr 0x13d026a78 <<invalid sloc>> 'const char *'
    |     | |-ImplicitValueInitExpr 0x13d026a88 <<invalid sloc>> 'const char *'
    |     | `-ImplicitValueInitExpr 0x13d026a98 <<invalid sloc>> 'const char *'
    |     |-InitListExpr 0x13d026ac8 <line:12:3, col:11> 'struct test_case'
    |     | |-ImplicitCastExpr 0x13d026b48 <col:5> 'const char *' <NoOp>
    |     | | `-ImplicitCastExpr 0x13d026b30 <col:5> 'char *' <ArrayToPointerDecay>
    |     | |   `-StringLiteral 0x13d026600 <col:5> 'char[4]' lvalue "STR"
    |     | |-ImplicitValueInitExpr 0x13d026b60 <<invalid sloc>> 'const char *'
    |     | |-ImplicitValueInitExpr 0x13d026b70 <<invalid sloc>> 'const char *'
    |     | |-ImplicitValueInitExpr 0x13d026b80 <<invalid sloc>> 'const char *'
    |     | `-ImplicitValueInitExpr 0x13d026b90 <<invalid sloc>> 'const char *'
    |     |-InitListExpr 0x13d026bd0 <line:13:3, line:19:3> 'struct test_case'
    |     | |-ImplicitCastExpr 0x13d026c50 <line:14:4> 'const char *' <NoOp>
    |     | | `-ImplicitCastExpr 0x13d026c38 <col:4> 'char *' <ArrayToPointerDecay>
    |     | |   `-StringLiteral 0x13d026668 <col:4> 'char[4]' lvalue "STR"
    |     | |-ImplicitCastExpr 0x13d026c80 <line:15:4> 'const char *' <NoOp>
    |     | | `-ImplicitCastExpr 0x13d026c68 <col:4> 'char *' <ArrayToPointerDecay>
    |     | |   `-StringLiteral 0x13d026688 <col:4> 'char[4]' lvalue "STR"
    |     | |-ImplicitCastExpr 0x13d026cb0 <line:16:4> 'const char *' <NoOp>
    |     | | `-ImplicitCastExpr 0x13d026c98 <col:4> 'char *' <ArrayToPointerDecay>
    |     | |   `-StringLiteral 0x13d0266a8 <col:4> 'char[4]' lvalue "STR"
    |     | |-ImplicitCastExpr 0x13d026ce0 <line:17:4> 'const char *' <NoOp>
    |     | | `-ImplicitCastExpr 0x13d026cc8 <col:4> 'char *' <ArrayToPointerDecay>
    |     | |   `-StringLiteral 0x13d0266c8 <col:4> 'char[4]' lvalue "STR"
    |     | `-ImplicitCastExpr 0x13d026d10 <line:18:4> 'const char *' <NoOp>
    |     |   `-ImplicitCastExpr 0x13d026cf8 <col:4> 'char *' <ArrayToPointerDecay>
    |     |     `-StringLiteral 0x13d0266e8 <col:4> 'char[4]' lvalue "STR"
    |     `-InitListExpr 0x13d026d38 <line:20:3, col:11> 'struct test_case'
    |       |-ImplicitCastExpr 0x13d026db8 <col:5> 'const char *' <NoOp>
    |       | `-ImplicitCastExpr 0x13d026da0 <col:5> 'char *' <ArrayToPointerDecay>
    |       |   `-StringLiteral 0x13d026770 <col:5> 'char[4]' lvalue "STR"
    |       |-ImplicitValueInitExpr 0x13d026dd0 <<invalid sloc>> 'const char *'
    |       |-ImplicitValueInitExpr 0x13d026de0 <<invalid sloc>> 'const char *'
    |       |-ImplicitValueInitExpr 0x13d026df0 <<invalid sloc>> 'const char *'
    |       `-ImplicitValueInitExpr 0x13d026e00 <<invalid sloc>> 'const char *'
    |-CallExpr 0x13d0270b8 <line:23:2, col:18> 'int'
    | |-ImplicitCastExpr 0x13d0270a0 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x13d027030 <col:2> 'int ()' Function 0x13d026f78 'test_begin' 'int ()'
    | `-ImplicitCastExpr 0x13d0270e0 <col:13> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x13d027050 <col:13> 'char[4]' lvalue "STR"
    |-CallExpr 0x13d0274a8 <line:27:2, col:25> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13d027428 <col:2> 'int ()' Function 0x13d027370 'ARRAY_TYPE' 'int ()'
    | `-RecoveryExpr 0x13d027488 <col:13> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x13c923e88 <line:28:2, col:25> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13d0275b0 <col:2> 'int ()' Function 0x13d0274f8 't_array_init' 'int ()'
    | |-UnaryOperator 0x13c923e70 <col:15, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-RecoveryExpr 0x13c923e50 <col:16> '<dependent type>' contains-errors lvalue
    | `-IntegerLiteral 0x13c923e00 <col:24> 'int' 8
    |-ForStmt 0x13c926af8 <line:30:2, line:55:2>
    | |-<<<NULL>>>
    | |-<<<NULL>>>
    | |-BinaryOperator 0x13c9241e0 <line:30:21, col:46> 'int' contains-errors '<'
    | | |-RecoveryExpr 0x13c924168 <col:21> '<dependent type>' contains-errors lvalue
    | | `-CallExpr 0x13c9241a0 <col:25, col:46> 'int'
    | |   |-ImplicitCastExpr 0x13c924188 <col:25> 'int (*)()' <FunctionToPointerDecay>
    | |   | `-DeclRefExpr 0x13c924050 <col:25> 'int ()' Function 0x13c923f98 'N_ELEMENTS' 'int ()'
    | |   `-ImplicitCastExpr 0x13c9241c8 <col:36> 'struct test_case *' <ArrayToPointerDecay>
    | |     `-DeclRefExpr 0x13c924070 <col:36> 'struct test_case[5]' lvalue Var 0x13d00e270 'test_cases' 'struct test_case[5]'
    | |-UnaryOperator 0x13c924250 <col:49, col:50> '<dependent type>' contains-errors postfix '++' cannot overflow
    | | `-RecoveryExpr 0x13c924230 <col:49> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x13c926ab8 <col:54, line:55:2>
    |   |-DeclStmt 0x13c9243c8 <line:31:3, col:53>
    |   | `-VarDecl 0x13c924328 <col:3, col:27> col:27 used test_case 'const struct test_case *'
    |   |-DeclStmt 0x13c9247c8 <line:33:3, col:59>
    |   | |-RecordDecl 0x13c9244e0 <col:3, col:10> col:10 struct oauth2_field
    |   | `-VarDecl 0x13c924648 <col:3, col:24> col:24 used field 'struct oauth2_field *'
    |   |-BinaryOperator 0x13c924860 <line:34:3, col:17> '<dependent type>' contains-errors '='
    |   | |-RecoveryExpr 0x13c924818 <col:3, col:10> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x13c9247e0 <col:3> 'struct oauth2_field *' lvalue Var 0x13c924648 'field' 'struct oauth2_field *'
    |   | `-StringLiteral 0x13c924840 <col:17> 'char[4]' lvalue "STR"
    |   |-BinaryOperator 0x13c924900 <line:35:3, col:18> '<dependent type>' contains-errors '='
    |   | |-RecoveryExpr 0x13c9248b8 <col:3, col:10> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x13c924880 <col:3> 'struct oauth2_field *' lvalue Var 0x13c924648 'field' 'struct oauth2_field *'
    |   | `-StringLiteral 0x13c9248e0 <col:18> 'char[4]' lvalue "STR"
    |   |-IfStmt 0x13c924c70 <line:36:3, line:40:3>
    |   | |-BinaryOperator 0x13c924a00 <line:36:7, col:26> 'int' '!='
    |   | | |-ImplicitCastExpr 0x13c9249e8 <col:7, col:19> 'int' <IntegralCast>
    |   | | | `-ImplicitCastExpr 0x13c9249d0 <col:7, col:19> 'char' <LValueToRValue>
    |   | | |   `-UnaryOperator 0x13c9249a0 <col:7, col:19> 'const char' lvalue prefix '*' cannot overflow
    |   | | |     `-ImplicitCastExpr 0x13c924988 <col:8, col:19> 'const char *' <LValueToRValue>
    |   | | |       `-MemberExpr 0x13c924958 <col:8, col:19> 'const char *const' lvalue ->azp 0x13d00df38
    |   | | |         `-ImplicitCastExpr 0x13c924940 <col:8> 'const struct test_case *' <LValueToRValue>
    |   | | |           `-DeclRefExpr 0x13c924920 <col:8> 'const struct test_case *' lvalue Var 0x13c924328 'test_case' 'const struct test_case *'
    |   | | `-CharacterLiteral 0x13c9249b8 <col:26> 'int' 0
    |   | `-CompoundStmt 0x13c924c50 <col:32, line:40:3>
    |   |   |-BinaryOperator 0x13c924ae0 <line:38:4, col:18> '<dependent type>' contains-errors '='
    |   |   | |-RecoveryExpr 0x13c924a98 <col:4, col:11> '<dependent type>' contains-errors lvalue
    |   |   | | `-DeclRefExpr 0x13c924a60 <col:4> 'struct oauth2_field *' lvalue Var 0x13c924648 'field' 'struct oauth2_field *'
    |   |   | `-StringLiteral 0x13c924ac0 <col:18> 'char[4]' lvalue "STR"
    |   |   `-BinaryOperator 0x13c924c30 <line:39:4, col:30> '<dependent type>' contains-errors '='
    |   |     |-RecoveryExpr 0x13c924b38 <col:4, col:11> '<dependent type>' contains-errors lvalue
    |   |     | `-DeclRefExpr 0x13c924b00 <col:4> 'struct oauth2_field *' lvalue Var 0x13c924648 'field' 'struct oauth2_field *'
    |   |     `-MemberExpr 0x13c924c00 <col:19, col:30> 'const char *const' lvalue ->azp 0x13d00df38
    |   |       `-ImplicitCastExpr 0x13c924be8 <col:19> 'const struct test_case *' <LValueToRValue>
    |   |         `-DeclRefExpr 0x13c924b60 <col:19> 'const struct test_case *' lvalue Var 0x13c924328 'test_case' 'const struct test_case *'
    |   `-IfStmt 0x13c9261f0 <line:41:3, line:45:3>
    |     |-BinaryOperator 0x13c924d70 <line:41:7, col:26> 'int' '!='
    |     | |-ImplicitCastExpr 0x13c924d58 <col:7, col:19> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x13c924d40 <col:7, col:19> 'char' <LValueToRValue>
    |     | |   `-UnaryOperator 0x13c924d10 <col:7, col:19> 'const char' lvalue prefix '*' cannot overflow
    |     | |     `-ImplicitCastExpr 0x13c924cf8 <col:8, col:19> 'const char *' <LValueToRValue>
    |     | |       `-MemberExpr 0x13c924cc8 <col:8, col:19> 'const char *const' lvalue ->kid 0x13d00e008
    |     | |         `-ImplicitCastExpr 0x13c924cb0 <col:8> 'const struct test_case *' <LValueToRValue>
    |     | |           `-DeclRefExpr 0x13c924c90 <col:8> 'const struct test_case *' lvalue Var 0x13c924328 'test_case' 'const struct test_case *'
    |     | `-CharacterLiteral 0x13c924d28 <col:26> 'int' 0
    |     `-CompoundStmt 0x13c9261d0 <col:32, line:45:3>
    |       |-BinaryOperator 0x13c926060 <line:43:4, col:18> '<dependent type>' contains-errors '='
    |       | |-RecoveryExpr 0x13c926018 <col:4, col:11> '<dependent type>' contains-errors lvalue
    |       | | `-DeclRefExpr 0x13c924dd0 <col:4> 'struct oauth2_field *' lvalue Var 0x13c924648 'field' 'struct oauth2_field *'
    |       | `-StringLiteral 0x13c926040 <col:18> 'char[4]' lvalue "STR"
    |       `-BinaryOperator 0x13c9261b0 <line:44:4, col:30> '<dependent type>' contains-errors '='
    |         |-RecoveryExpr 0x13c9260b8 <col:4, col:11> '<dependent type>' contains-errors lvalue
    |         | `-DeclRefExpr 0x13c926080 <col:4> 'struct oauth2_field *' lvalue Var 0x13c924648 'field' 'struct oauth2_field *'
    |         `-MemberExpr 0x13c926180 <col:19, col:30> 'const char *const' lvalue ->kid 0x13d00e008
    |           `-ImplicitCastExpr 0x13c926168 <col:19> 'const struct test_case *' <LValueToRValue>
    |             `-DeclRefExpr 0x13c9260e0 <col:19> 'const struct test_case *' lvalue Var 0x13c924328 'test_case' 'const struct test_case *'
    `-CallExpr 0x13c926c48 <line:57:2, col:11> 'int'
      `-ImplicitCastExpr 0x13c926c30 <col:2> 'int (*)()' <FunctionToPointerDecay>
        `-DeclRefExpr 0x13c926c10 <col:2> 'int ()' Function 0x13c926b58 'test_end' 'int ()'
