`-FunctionDecl 0x140928318  line:1:1 invalid parse_bracket_symbol 'int (int *, int *, int *)'
  |-ParmVarDecl 0x140928128 <col:23, col:39> col:39 referenced invalid elem 'int *'
  |-ParmVarDecl 0x1409281a8 <col:45, col:58> col:58 invalid regexp 'int *'
  |-ParmVarDecl 0x140928228 <line:2:9, col:21> col:21 invalid token 'int *'
  `-CompoundStmt 0x141009508 <line:3:1, line:39:1>
    |-DeclStmt 0x1409285a0 <line:4:3, col:41>
    | |-VarDecl 0x1409283f0 <col:3, col:17> col:17 used ch 'unsigned char'
    | `-VarDecl 0x140928470 <col:3, col:40> col:21 used delim 'unsigned char' cinit
    |   `-CXXDependentScopeMemberExpr 0x140928540 <col:29, col:40> '<dependent type>' contains-errors lvalue .c
    |     `-CXXDependentScopeMemberExpr 0x1409284f8 <col:29, col:36> '<dependent type>' contains-errors lvalue ->opr
    |       `-RecoveryExpr 0x1409284d8 <col:29> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x140928658 <line:5:3, col:12>
    | `-VarDecl 0x1409285d0 <col:3, col:11> col:7 used i 'int' cinit
    |   `-IntegerLiteral 0x140928638 <col:11> 'int' 0
    |-IfStmt 0x140941890 <line:6:3, line:7:12>
    | |-CallExpr 0x140941820 <line:6:7, col:27> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x1409287d0 <col:7> 'int ()' Function 0x140928718 're_string_eoi' 'int ()'
    | | `-RecoveryExpr 0x140941800 <col:21> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x140941880 <line:7:5, col:12>
    |   `-RecoveryExpr 0x140941860 <col:12> '<dependent type>' contains-errors lvalue
    |-ForStmt 0x140942348 <line:8:3, line:21:5>
    | |-<<<NULL>>>
    | |-<<<NULL>>>
    | |-<<<NULL>>>
    | |-UnaryOperator 0x1409418d0 <line:8:11, col:13> 'int' prefix '++'
    | | `-DeclRefExpr 0x1409418b0 <col:13> 'int' lvalue Var 0x1409285d0 'i' 'int'
    | `-CompoundStmt 0x140942310 <line:9:5, line:21:5>
    |   |-IfStmt 0x1409419c8 <line:10:7, line:11:9>
    |   | |-BinaryOperator 0x140941960 <line:10:11, col:16> 'int' contains-errors '>='
    |   | | |-DeclRefExpr 0x1409418e8 <col:11> 'int' lvalue Var 0x1409285d0 'i' 'int'
    |   | | `-RecoveryExpr 0x140941940 <col:16> '<dependent type>' contains-errors lvalue
    |   | `-ReturnStmt 0x1409419b8 <line:11:2, col:9>
    |   |   `-RecoveryExpr 0x140941998 <col:9> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x140941dd8 <line:12:7, line:15:35> has_else
    |   | |-BinaryOperator 0x140941aa8 <line:12:11, col:26> 'int' contains-errors '=='
    |   | | |-CXXDependentScopeMemberExpr 0x140941a08 <col:11, col:18> '<dependent type>' contains-errors lvalue ->type
    |   | | | `-RecoveryExpr 0x1409419e8 <col:11> '<dependent type>' contains-errors lvalue
    |   | | `-RecoveryExpr 0x140941a88 <col:26> '<dependent type>' contains-errors lvalue
    |   | |-BinaryOperator 0x140941c30 <line:13:2, col:40> 'unsigned char' contains-errors '='
    |   | | |-DeclRefExpr 0x140941ac8 <col:2> 'unsigned char' lvalue Var 0x1409283f0 'ch' 'unsigned char'
    |   | | `-CallExpr 0x140941c08 <col:7, col:40> '<dependent type>' contains-errors
    |   | |   |-DeclRefExpr 0x140941bc8 <col:7> 'int ()' Function 0x140941b10 're_string_fetch_byte_case' 'int ()'
    |   | |   `-RecoveryExpr 0x140941be8 <col:34> '<dependent type>' contains-errors lvalue
    |   | `-BinaryOperator 0x140941db8 <line:15:2, col:35> 'unsigned char' contains-errors '='
    |   |   |-DeclRefExpr 0x140941c50 <col:2> 'unsigned char' lvalue Var 0x1409283f0 'ch' 'unsigned char'
    |   |   `-CallExpr 0x140941d90 <col:7, col:35> '<dependent type>' contains-errors
    |   |     |-DeclRefExpr 0x140941d50 <col:7> 'int ()' Function 0x140941c98 're_string_fetch_byte' 'int ()'
    |   |     `-RecoveryExpr 0x140941d70 <col:29> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x140941eb8 <line:16:7, line:17:9>
    |   | |-CallExpr 0x140941e48 <line:16:11, col:31> '<dependent type>' contains-errors
    |   | | |-DeclRefExpr 0x140941e08 <col:11> 'int ()' Function 0x140928718 're_string_eoi' 'int ()'
    |   | | `-RecoveryExpr 0x140941e28 <col:25> '<dependent type>' contains-errors lvalue
    |   | `-ReturnStmt 0x140941ea8 <line:17:2, col:9>
    |   |   `-RecoveryExpr 0x140941e88 <col:9> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x140942168 <line:18:7, line:19:2>
    |   | |-BinaryOperator 0x140942140 <line:18:11, col:61> 'int' contains-errors '&&'
    |   | | |-BinaryOperator 0x140941f78 <col:11, col:17> 'int' contains-errors '=='
    |   | | | |-ImplicitCastExpr 0x140941f48 <col:11> 'int' <IntegralCast>
    |   | | | | `-ImplicitCastExpr 0x140941f18 <col:11> 'unsigned char' <LValueToRValue>
    |   | | | |   `-DeclRefExpr 0x140941ed8 <col:11> 'unsigned char' lvalue Var 0x1409283f0 'ch' 'unsigned char'
    |   | | | `-ImplicitCastExpr 0x140941f60 <col:17> 'int' contains-errors <IntegralCast>
    |   | | |   `-ImplicitCastExpr 0x140941f30 <col:17> 'unsigned char' contains-errors <LValueToRValue>
    |   | | |     `-DeclRefExpr 0x140941ef8 <col:17> 'unsigned char' contains-errors lvalue Var 0x140928470 'delim' 'unsigned char'
    |   | | `-BinaryOperator 0x140942120 <col:26, col:61> 'int' contains-errors '=='
    |   | |   |-CallExpr 0x1409420d8 <col:26, col:56> '<dependent type>' contains-errors
    |   | |   | |-DeclRefExpr 0x140942078 <col:26> 'int ()' Function 0x140941fc0 're_string_peek_byte' 'int ()'
    |   | |   | |-RecoveryExpr 0x140942098 <col:47> '<dependent type>' contains-errors lvalue
    |   | |   | `-IntegerLiteral 0x1409420b8 <col:55> 'int' 0
    |   | |   `-CharacterLiteral 0x140942108 <col:61> 'int' 93
    |   | `-BreakStmt 0x140942160 <line:19:2>
    |   `-BinaryOperator 0x1409422f0 <line:20:7, col:27> '<dependent type>' contains-errors '='
    |     |-ArraySubscriptExpr 0x1409422b0 <col:7, col:23> '<dependent type>' contains-errors lvalue
    |     | |-ImplicitCastExpr 0x140942280 <col:7, col:17> '<dependent type>' contains-errors <LValueToRValue>
    |     | | `-CXXDependentScopeMemberExpr 0x140942218 <col:7, col:17> '<dependent type>' contains-errors lvalue .name
    |     | |   `-CXXDependentScopeMemberExpr 0x1409421d0 <col:7, col:13> '<dependent type>' contains-errors lvalue ->opr
    |     | |     `-RecoveryExpr 0x1409421a8 <col:7> '<dependent type>' contains-errors lvalue
    |     | |       `-DeclRefExpr 0x140942188 <col:7> 'int *' lvalue ParmVar 0x140928128 'elem' 'int *'
    |     | `-ImplicitCastExpr 0x140942298 <col:22> 'int' <LValueToRValue>
    |     |   `-DeclRefExpr 0x140942260 <col:22> 'int' lvalue Var 0x1409285d0 'i' 'int'
    |     `-DeclRefExpr 0x1409422d0 <col:27> 'unsigned char' lvalue Var 0x1409283f0 'ch' 'unsigned char'
    |-CallExpr 0x1409424c0 <line:22:3, col:34> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x140942460 <col:3> 'int ()' Function 0x1409423a8 're_string_skip_bytes' 'int ()'
    | |-RecoveryExpr 0x140942480 <col:25> '<dependent type>' contains-errors lvalue
    | `-IntegerLiteral 0x1409424a0 <col:33> 'int' 1
    |-BinaryOperator 0x140942650 <line:23:3, col:23> '<dependent type>' contains-errors '='
    | |-ArraySubscriptExpr 0x140942618 <col:3, col:19> '<dependent type>' contains-errors lvalue
    | | |-ImplicitCastExpr 0x1409425e8 <col:3, col:13> '<dependent type>' contains-errors <LValueToRValue>
    | | | `-CXXDependentScopeMemberExpr 0x140942580 <col:3, col:13> '<dependent type>' contains-errors lvalue .name
    | | |   `-CXXDependentScopeMemberExpr 0x140942538 <col:3, col:9> '<dependent type>' contains-errors lvalue ->opr
    | | |     `-RecoveryExpr 0x140942510 <col:3> '<dependent type>' contains-errors lvalue
    | | |       `-DeclRefExpr 0x1409424f0 <col:3> 'int *' lvalue ParmVar 0x140928128 'elem' 'int *'
    | | `-ImplicitCastExpr 0x140942600 <col:18> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x1409425c8 <col:18> 'int' lvalue Var 0x1409285d0 'i' 'int'
    | `-CharacterLiteral 0x140942638 <col:23> 'int' 0
    `-SwitchStmt 0x1409426f0 <line:24:3, line:37:5>
      |-ImplicitCastExpr 0x1409426d8 <line:24:11, col:18> '<dependent type>' contains-errors <LValueToRValue>
      | `-CXXDependentScopeMemberExpr 0x140942690 <col:11, col:18> '<dependent type>' contains-errors lvalue ->type
      |   `-RecoveryExpr 0x140942670 <col:11> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x1410094c0 <line:25:5, line:37:5>
        |-BinaryOperator 0x141009220 <line:27:7, col:20> '<dependent type>' contains-errors '='
        | |-CXXDependentScopeMemberExpr 0x140942778 <col:7, col:13> '<dependent type>' contains-errors lvalue ->type
        | | `-RecoveryExpr 0x140942750 <col:7> '<dependent type>' contains-errors lvalue
        | |   `-DeclRefExpr 0x140942730 <col:7> 'int *' lvalue ParmVar 0x140928128 'elem' 'int *'
        | `-RecoveryExpr 0x141009200 <col:20> '<dependent type>' contains-errors lvalue
        |-BreakStmt 0x141009240 <line:28:7>
        |-BinaryOperator 0x141009348 <line:30:7, col:20> '<dependent type>' contains-errors '='
        | |-CXXDependentScopeMemberExpr 0x1410092a8 <col:7, col:13> '<dependent type>' contains-errors lvalue ->type
        | | `-RecoveryExpr 0x141009280 <col:7> '<dependent type>' contains-errors lvalue
        | |   `-DeclRefExpr 0x141009260 <col:7> 'int *' lvalue ParmVar 0x140928128 'elem' 'int *'
        | `-RecoveryExpr 0x141009328 <col:20> '<dependent type>' contains-errors lvalue
        |-BreakStmt 0x141009368 <line:31:7>
        |-BinaryOperator 0x141009470 <line:33:7, col:20> '<dependent type>' contains-errors '='
        | |-CXXDependentScopeMemberExpr 0x1410093d0 <col:7, col:13> '<dependent type>' contains-errors lvalue ->type
        | | `-RecoveryExpr 0x1410093a8 <col:7> '<dependent type>' contains-errors lvalue
        | |   `-DeclRefExpr 0x141009388 <col:7> 'int *' lvalue ParmVar 0x140928128 'elem' 'int *'
        | `-RecoveryExpr 0x141009450 <col:20> '<dependent type>' contains-errors lvalue
        |-BreakStmt 0x141009490 <line:34:7>
        `-DefaultStmt 0x1410094a0 <line:35:5, line:36:7>
          `-BreakStmt 0x141009498 <col:7>
