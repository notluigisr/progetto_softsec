`-FunctionDecl 0x14b80dec8  line:1:14 invalid ExpandTensorDim 'int (int *, const int)'
  |-ParmVarDecl 0x14b80dd28 <col:30, col:45> col:45 invalid context 'int *'
  |-ParmVarDecl 0x14b80dda8 <col:54, <invalid sloc>> col:72 invalid 'const int'
  `-CompoundStmt 0x14b827be8 <line:2:62, line:21:1>
    |-IfStmt 0x14b80e100 <line:4:3, line:6:3>
    | |-BinaryOperator 0x14b80dff8 <line:4:7, col:14> 'int' contains-errors '<'
    | | |-RecoveryExpr 0x14b80dfd8 <col:7> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x14b80df98 <col:14> 'int' 0
    | `-CompoundStmt 0x14b80e0f0 <col:17, line:6:3>
    |-CallExpr 0x14b827468 <line:7:3, col:50> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14b80e280 <col:3> 'int ()' Function 0x14b80e1c8 'TF_LITE_ENSURE' 'int ()'
    | |-RecoveryExpr 0x14b80e2a0 <col:18> '<dependent type>' contains-errors lvalue
    | `-BinaryOperator 0x14b827448 <col:27, col:46> 'int' contains-errors '<='
    |   |-RecoveryExpr 0x14b80e388 <col:27> '<dependent type>' contains-errors lvalue
    |   `-CXXDependentScopeMemberExpr 0x14b827400 <col:35, col:46> '<dependent type>' contains-errors lvalue .size
    |     `-RecoveryExpr 0x14b80e3a8 <col:35> '<dependent type>' contains-errors lvalue
    `-ForStmt 0x14b827b28 <line:10:3, line:18:3>
      |-DeclStmt 0x14b827718 <line:10:8, col:17>
      | `-VarDecl 0x14b827690 <col:8, col:16> col:12 used i 'int' cinit
      |   `-IntegerLiteral 0x14b8276f8 <col:16> 'int' 0
      |-<<<NULL>>>
      |-BinaryOperator 0x14b827838 <col:19, col:36> 'int' contains-errors '<'
      | |-DeclRefExpr 0x14b827730 <col:19> 'int' lvalue Var 0x14b827690 'i' 'int'
      | `-CXXDependentScopeMemberExpr 0x14b8277f0 <col:23, col:36> '<dependent type>' contains-errors lvalue ->size
      |   `-RecoveryExpr 0x14b8277d0 <col:23> '<dependent type>' contains-errors lvalue
      |-UnaryOperator 0x14b827878 <col:42, col:44> 'int' prefix '++'
      | `-DeclRefExpr 0x14b827858 <col:44> 'int' lvalue Var 0x14b827690 'i' 'int'
      `-CompoundStmt 0x14b827b10 <col:47, line:18:3>
        `-IfStmt 0x14b827ae0 <line:11:5, line:17:5> has_else
          |-BinaryOperator 0x14b827908 <line:11:9, col:13> 'int' contains-errors '<'
          | |-DeclRefExpr 0x14b827890 <col:9> 'int' lvalue Var 0x14b827690 'i' 'int'
          | `-RecoveryExpr 0x14b8278e8 <col:13> '<dependent type>' contains-errors lvalue
          |-CompoundStmt 0x14b827968 <col:19, line:13:5>
          `-IfStmt 0x14b827ab0 <col:12, line:17:5> has_else
            |-RecoveryExpr 0x14b827998 <line:13:16, col:21> '_Bool' contains-errors
            |-CompoundStmt 0x14b8279f8 <col:27, line:15:5>
            `-CompoundStmt 0x14b827aa0 <col:12, line:17:5>
