`-FunctionDecl 0x1289281f8  line:1:1 invalid parse_key_usage 'int (int *)'
  |-ParmVarDecl 0x128928128 <col:18, col:34> col:34 invalid sig 'int *'
  `-CompoundStmt 0x128942088 <line:2:1, line:46:1>
    |-DeclStmt 0x128928348 <line:3:3, col:20>
    | `-VarDecl 0x1289282c0 <col:3, col:19> col:7 used key_usage 'int' cinit
    |   `-IntegerLiteral 0x128928328 <col:19> 'int' 0
    |-DeclStmt 0x1289283e0 <line:4:3, col:16>
    | `-VarDecl 0x128928378 <col:3, col:15> col:15 referenced invalid p 'const int *'
    |-UnaryExprOrTypeTraitExpr 0x128928450 <line:5:3, col:10> 'unsigned long' contains-errors sizeof
    | `-RecoveryExpr 0x128928430 <col:10> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x1289287c8 <line:8:3, col:61> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x128928490 <col:3> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x128928470 <col:3> 'const int *' lvalue Var 0x128928378 'p' 'const int *'
    | `-CallExpr 0x128928790 <col:7, col:61> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x128928610 <col:7> 'int ()' Function 0x128928558 'parse_sig_subpkt' 'int ()'
    |   |-CXXDependentScopeMemberExpr 0x128928650 <col:25, col:30> '<dependent type>' contains-errors lvalue ->hashed
    |   | `-RecoveryExpr 0x128928630 <col:25> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x128928738 <col:38> '<dependent type>' contains-errors lvalue
    |   `-UnaryOperator 0x128928778 <col:59, col:60> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x128928758 <col:60> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x128942020 <line:9:3, line:41:5>
    | |-BinaryOperator 0x128941878 <line:9:7, col:12> 'int' contains-errors '&&'
    | | |-RecoveryExpr 0x128941800 <col:7> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x128941858 <col:12> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x128941ff0 <line:10:5, line:41:5>
    |   |-IfStmt 0x128941a88 <line:14:7, line:18:2>
    |   | |-BinaryOperator 0x128941960 <line:14:11, col:19> '<dependent type>' contains-errors '&'
    |   | | |-RecoveryExpr 0x128941940 <col:11> '<dependent type>' contains-errors lvalue
    |   | | `-IntegerLiteral 0x128941900 <col:19> 'int' 1
    |   | `-CompoundStmt 0x128941a70 <line:15:2, line:18:2>
    |   |   `-CompoundAssignOperator 0x128941a08 <line:16:4, col:17> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   |     |-DeclRefExpr 0x128941980 <col:4> 'int' lvalue Var 0x1289282c0 'key_usage' 'int'
    |   |     `-RecoveryExpr 0x1289419e8 <col:17> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x128941c48 <line:20:7, line:24:2>
    |   | |-BinaryOperator 0x128941b20 <line:20:11, col:19> '<dependent type>' contains-errors '&'
    |   | | |-RecoveryExpr 0x128941b00 <col:11> '<dependent type>' contains-errors lvalue
    |   | | `-IntegerLiteral 0x128941ac0 <col:19> 'int' 2
    |   | `-CompoundStmt 0x128941c30 <line:21:2, line:24:2>
    |   |   `-CompoundAssignOperator 0x128941bc8 <line:22:4, col:17> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   |     |-DeclRefExpr 0x128941b40 <col:4> 'int' lvalue Var 0x1289282c0 'key_usage' 'int'
    |   |     `-RecoveryExpr 0x128941ba8 <col:17> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x128941ec8 <line:27:7, line:31:2>
    |   | |-BinaryOperator 0x128941d40 <line:27:11, col:31> '<dependent type>' contains-errors '&'
    |   | | |-RecoveryExpr 0x128941d20 <col:11> '<dependent type>' contains-errors lvalue
    |   | | `-ParenExpr 0x128941ce0 <col:19, col:31> 'int'
    |   | |   `-BinaryOperator 0x128941cc0 <col:20, col:27> 'int' '|'
    |   | |     |-IntegerLiteral 0x128941c80 <col:20> 'int' 4
    |   | |     `-IntegerLiteral 0x128941ca0 <col:27> 'int' 8
    |   | `-CompoundStmt 0x128941eb0 <line:28:2, line:31:2>
    |   |   `-CompoundAssignOperator 0x128941de8 <line:29:4, col:17> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   |     |-DeclRefExpr 0x128941d60 <col:4> 'int' lvalue Var 0x1289282c0 'key_usage' 'int'
    |   |     `-RecoveryExpr 0x128941dc8 <col:17> '<dependent type>' contains-errors lvalue
    |   `-IfStmt 0x128941f90 <line:33:7, line:37:2>
    |     |-RecoveryExpr 0x128941f08 <line:33:11, col:19> '_Bool' contains-errors
    |     `-CompoundStmt 0x128941f80 <line:34:2, line:37:2>
    `-ReturnStmt 0x128942078 <line:45:3, col:10>
      `-ImplicitCastExpr 0x128942060 <col:10> 'int' <LValueToRValue>
        `-DeclRefExpr 0x128942040 <col:10> 'int' lvalue Var 0x1289282c0 'key_usage' 'int'
