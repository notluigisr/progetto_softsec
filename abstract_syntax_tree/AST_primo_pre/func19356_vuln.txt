`-FunctionDecl 0x14c940ea8  line:1:1 check_entry_size_and_hooks 'int (struct ip6t_entry *, struct xt_table_info *, const unsigned char *, const unsigned char *, const unsigned int *, const unsigned int *, unsigned int)'
  |-ParmVarDecl 0x14c928648 <col:28, col:47> col:47 used e 'struct ip6t_entry *'
  |-ParmVarDecl 0x14c940a28 <line:2:7, col:29> col:29 used newinfo 'struct xt_table_info *'
  |-ParmVarDecl 0x14c940ad8 <line:3:7, col:28> col:28 used base 'const unsigned char *'
  |-ParmVarDecl 0x14c940b58 <line:4:7, col:28> col:28 used limit 'const unsigned char *'
  |-ParmVarDecl 0x14c940c08 <line:5:7, col:27> col:27 used hook_entries 'const unsigned int *'
  |-ParmVarDecl 0x14c940c88 <line:6:7, col:27> col:27 used underflows 'const unsigned int *'
  |-ParmVarDecl 0x14c940d08 <line:7:7, col:20> col:20 used valid_hooks 'unsigned int'
  `-CompoundStmt 0x14c945e58 <line:8:1, line:51:1>
    |-DeclStmt 0x14c941050 <line:9:2, col:16>
    | `-VarDecl 0x14c940fe8 <col:2, col:15> col:15 used h 'unsigned int'
    |-DeclStmt 0x14c9410e8 <line:10:2, col:9>
    | `-VarDecl 0x14c941080 <col:2, col:6> col:6 used err 'int'
    |-IfStmt 0x14c941770 <line:12:2, line:17:2>
    | |-RecoveryExpr 0x14c941410 <line:12:6, line:14:44> '_Bool' contains-errors
    | `-CompoundStmt 0x14c941750 <col:51, line:17:2>
    |   |-CallExpr 0x14c941648 <line:15:3, col:20> 'int'
    |   | |-ImplicitCastExpr 0x14c941630 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x14c941560 <col:3> 'int ()' Function 0x14c9414a8 'duprintf' 'int ()'
    |   | |-ImplicitCastExpr 0x14c941678 <col:12> 'char *' <ArrayToPointerDecay>
    |   | | `-StringLiteral 0x14c9415c0 <col:12> 'char[4]' lvalue "STR"
    |   | `-ImplicitCastExpr 0x14c941690 <col:19> 'struct ip6t_entry *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x14c9415e0 <col:19> 'struct ip6t_entry *' lvalue ParmVar 0x14c928648 'e' 'struct ip6t_entry *'
    |   `-ReturnStmt 0x14c941740 <line:16:3, col:11>
    |     `-UnaryOperator 0x14c941728 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       `-ImplicitCastExpr 0x14c941710 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |         `-RecoveryExpr 0x14c9416f0 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14c944500 <line:19:2, line:24:2>
    | |-RecoveryExpr 0x14c941908 <line:19:6, line:20:65> '_Bool' contains-errors
    | `-CompoundStmt 0x14c9444e0 <col:68, line:24:2>
    |   |-CallExpr 0x14c944400 <line:21:3, line:22:22> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x14c941928 <line:21:3> 'int ()' Function 0x14c9414a8 'duprintf' 'int ()'
    |   | |-StringLiteral 0x14c941948 <col:12> 'char[4]' lvalue "STR"
    |   | |-DeclRefExpr 0x14c941968 <line:22:5> 'struct ip6t_entry *' lvalue ParmVar 0x14c928648 'e' 'struct ip6t_entry *'
    |   | `-RecoveryExpr 0x14c9419c0 <col:8, col:11> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x14c941988 <col:8> 'struct ip6t_entry *' lvalue ParmVar 0x14c928648 'e' 'struct ip6t_entry *'
    |   `-ReturnStmt 0x14c9444d0 <line:23:3, col:11>
    |     `-UnaryOperator 0x14c9444b8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       `-ImplicitCastExpr 0x14c9444a0 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |         `-RecoveryExpr 0x14c944480 <col:11> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x14c9446b8 <line:26:2, col:21> 'int' '='
    | |-DeclRefExpr 0x14c944520 <col:2> 'int' lvalue Var 0x14c941080 'err' 'int'
    | `-CallExpr 0x14c944678 <col:8, col:21> 'int'
    |   |-ImplicitCastExpr 0x14c944660 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x14c944620 <col:8> 'int ()' Function 0x14c944568 'check_entry' 'int ()'
    |   `-ImplicitCastExpr 0x14c9446a0 <col:20> 'struct ip6t_entry *' <LValueToRValue>
    |     `-DeclRefExpr 0x14c944640 <col:20> 'struct ip6t_entry *' lvalue ParmVar 0x14c928648 'e' 'struct ip6t_entry *'
    |-IfStmt 0x14c944758 <line:27:2, line:28:10>
    | |-ImplicitCastExpr 0x14c9446f8 <line:27:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x14c9446d8 <col:6> 'int' lvalue Var 0x14c941080 'err' 'int'
    | `-ReturnStmt 0x14c944748 <line:28:3, col:10>
    |   `-ImplicitCastExpr 0x14c944730 <col:10> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x14c944710 <col:10> 'int' lvalue Var 0x14c941080 'err' 'int'
    |-ForStmt 0x14c945b68 <line:31:2, line:45:2>
    | |-BinaryOperator 0x14c9447d0 <line:31:7, col:11> 'unsigned int' '='
    | | |-DeclRefExpr 0x14c944778 <col:7> 'unsigned int' lvalue Var 0x14c940fe8 'h' 'unsigned int'
    | | `-ImplicitCastExpr 0x14c9447b8 <col:11> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x14c944798 <col:11> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x14c944868 <col:14, col:18> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x14c9447f0 <col:14> 'unsigned int' lvalue Var 0x14c940fe8 'h' 'unsigned int'
    | | `-RecoveryExpr 0x14c944848 <col:18> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x14c9448a8 <col:36, col:37> 'unsigned int' postfix '++'
    | | `-DeclRefExpr 0x14c944888 <col:36> 'unsigned int' lvalue Var 0x14c940fe8 'h' 'unsigned int'
    | `-CompoundStmt 0x14c945b40 <col:41, line:45:2>
    |   |-IfStmt 0x14c944a08 <line:32:3, line:33:4>
    |   | |-UnaryOperator 0x14c9449e8 <line:32:7, col:31> 'int' prefix '!' cannot overflow
    |   | | `-ParenExpr 0x14c9449c8 <col:8, col:31> 'unsigned int'
    |   | |   `-BinaryOperator 0x14c9449a8 <col:9, col:30> 'unsigned int' '&'
    |   | |     |-ImplicitCastExpr 0x14c944978 <col:9> 'unsigned int' <LValueToRValue>
    |   | |     | `-DeclRefExpr 0x14c9448c0 <col:9> 'unsigned int' lvalue ParmVar 0x14c940d08 'valid_hooks' 'unsigned int'
    |   | |     `-ImplicitCastExpr 0x14c944990 <col:23, col:30> 'unsigned int' <IntegralCast>
    |   | |       `-ParenExpr 0x14c944958 <col:23, col:30> 'int'
    |   | |         `-BinaryOperator 0x14c944938 <col:24, col:29> 'int' '<<'
    |   | |           |-IntegerLiteral 0x14c9448e0 <col:24> 'int' 1
    |   | |           `-ImplicitCastExpr 0x14c944920 <col:29> 'unsigned int' <LValueToRValue>
    |   | |             `-DeclRefExpr 0x14c944900 <col:29> 'unsigned int' lvalue Var 0x14c940fe8 'h' 'unsigned int'
    |   | `-ContinueStmt 0x14c944a00 <line:33:4>
    |   |-IfStmt 0x14c944d58 <line:34:3, line:35:43>
    |   | |-BinaryOperator 0x14c944bb8 <line:34:7, col:50> 'int' '=='
    |   | | |-BinaryOperator 0x14c944ad8 <col:7, col:28> 'long' '-'
    |   | | | |-CStyleCastExpr 0x14c944a78 <col:7, col:24> 'unsigned char *' <BitCast>
    |   | | | | `-ImplicitCastExpr 0x14c944a60 <col:24> 'struct ip6t_entry *' <LValueToRValue> part_of_explicit_cast
    |   | | | |   `-DeclRefExpr 0x14c944a28 <col:24> 'struct ip6t_entry *' lvalue ParmVar 0x14c928648 'e' 'struct ip6t_entry *'
    |   | | | `-ImplicitCastExpr 0x14c944ac0 <col:28> 'const unsigned char *' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x14c944aa0 <col:28> 'const unsigned char *' lvalue ParmVar 0x14c940ad8 'base' 'const unsigned char *'
    |   | | `-ImplicitCastExpr 0x14c944ba0 <col:36, col:50> 'long' <IntegralCast>
    |   | |   `-ImplicitCastExpr 0x14c944b88 <col:36, col:50> 'unsigned int' <LValueToRValue>
    |   | |     `-ArraySubscriptExpr 0x14c944b68 <col:36, col:50> 'const unsigned int' lvalue
    |   | |       |-ImplicitCastExpr 0x14c944b38 <col:36> 'const unsigned int *' <LValueToRValue>
    |   | |       | `-DeclRefExpr 0x14c944af8 <col:36> 'const unsigned int *' lvalue ParmVar 0x14c940c08 'hook_entries' 'const unsigned int *'
    |   | |       `-ImplicitCastExpr 0x14c944b50 <col:49> 'unsigned int' <LValueToRValue>
    |   | |         `-DeclRefExpr 0x14c944b18 <col:49> 'unsigned int' lvalue Var 0x14c940fe8 'h' 'unsigned int'
    |   | `-BinaryOperator 0x14c944d38 <line:35:4, col:43> '<dependent type>' contains-errors '='
    |   |   |-ArraySubscriptExpr 0x14c944c88 <col:4, col:25> '<dependent type>' contains-errors lvalue
    |   |   | |-ImplicitCastExpr 0x14c944c58 <col:4, col:13> '<dependent type>' contains-errors <LValueToRValue>
    |   |   | | `-RecoveryExpr 0x14c944c10 <col:4, col:13> '<dependent type>' contains-errors lvalue
    |   |   | |   `-DeclRefExpr 0x14c944bd8 <col:4> 'struct xt_table_info *' lvalue ParmVar 0x14c940a28 'newinfo' 'struct xt_table_info *'
    |   |   | `-ImplicitCastExpr 0x14c944c70 <col:24> 'unsigned int' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x14c944c38 <col:24> 'unsigned int' lvalue Var 0x14c940fe8 'h' 'unsigned int'
    |   |   `-ArraySubscriptExpr 0x14c944d18 <col:29, col:43> 'const unsigned int' lvalue
    |   |     |-ImplicitCastExpr 0x14c944ce8 <col:29> 'const unsigned int *' <LValueToRValue>
    |   |     | `-DeclRefExpr 0x14c944ca8 <col:29> 'const unsigned int *' lvalue ParmVar 0x14c940c08 'hook_entries' 'const unsigned int *'
    |   |     `-ImplicitCastExpr 0x14c944d00 <col:42> 'unsigned int' <LValueToRValue>
    |   |       `-DeclRefExpr 0x14c944cc8 <col:42> 'unsigned int' lvalue Var 0x14c940fe8 'h' 'unsigned int'
    |   `-IfStmt 0x14c945b20 <line:36:3, line:44:3>
    |     |-BinaryOperator 0x14c944f08 <line:36:7, col:48> 'int' '=='
    |     | |-BinaryOperator 0x14c944e28 <col:7, col:28> 'long' '-'
    |     | | |-CStyleCastExpr 0x14c944dc8 <col:7, col:24> 'unsigned char *' <BitCast>
    |     | | | `-ImplicitCastExpr 0x14c944db0 <col:24> 'struct ip6t_entry *' <LValueToRValue> part_of_explicit_cast
    |     | | |   `-DeclRefExpr 0x14c944d78 <col:24> 'struct ip6t_entry *' lvalue ParmVar 0x14c928648 'e' 'struct ip6t_entry *'
    |     | | `-ImplicitCastExpr 0x14c944e10 <col:28> 'const unsigned char *' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x14c944df0 <col:28> 'const unsigned char *' lvalue ParmVar 0x14c940ad8 'base' 'const unsigned char *'
    |     | `-ImplicitCastExpr 0x14c944ef0 <col:36, col:48> 'long' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x14c944ed8 <col:36, col:48> 'unsigned int' <LValueToRValue>
    |     |     `-ArraySubscriptExpr 0x14c944eb8 <col:36, col:48> 'const unsigned int' lvalue
    |     |       |-ImplicitCastExpr 0x14c944e88 <col:36> 'const unsigned int *' <LValueToRValue>
    |     |       | `-DeclRefExpr 0x14c944e48 <col:36> 'const unsigned int *' lvalue ParmVar 0x14c940c88 'underflows' 'const unsigned int *'
    |     |       `-ImplicitCastExpr 0x14c944ea0 <col:47> 'unsigned int' <LValueToRValue>
    |     |         `-DeclRefExpr 0x14c944e68 <col:47> 'unsigned int' lvalue Var 0x14c940fe8 'h' 'unsigned int'
    |     `-CompoundStmt 0x14c945b00 <col:51, line:44:3>
    |       |-IfStmt 0x14c945350 <line:37:4, line:42:4>
    |       | |-UnaryOperator 0x14c9450a0 <line:37:8, col:26> 'int' prefix '!' cannot overflow
    |       | | `-CallExpr 0x14c945060 <col:9, col:26> 'int'
    |       | |   |-ImplicitCastExpr 0x14c945048 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |       | |   | `-DeclRefExpr 0x14c945008 <col:9> 'int ()' Function 0x14c944f50 'check_underflow' 'int ()'
    |       | |   `-ImplicitCastExpr 0x14c945088 <col:25> 'struct ip6t_entry *' <LValueToRValue>
    |       | |     `-DeclRefExpr 0x14c945028 <col:25> 'struct ip6t_entry *' lvalue ParmVar 0x14c928648 'e' 'struct ip6t_entry *'
    |       | `-CompoundStmt 0x14c945330 <col:29, line:42:4>
    |       |   |-CallExpr 0x14c945248 <line:38:5, line:40:17> 'int'
    |       |   | |-ImplicitCastExpr 0x14c945230 <line:38:5> 'int (*)()' <FunctionToPointerDecay>
    |       |   | | `-DeclRefExpr 0x14c945198 <col:5> 'int ()' Function 0x14c9450e0 'pr_err' 'int ()'
    |       |   | `-ImplicitCastExpr 0x14c945270 <col:12, line:40:12> 'char *' <ArrayToPointerDecay>
    |       |   |   `-StringLiteral 0x14c945200 <line:38:12, line:40:12> 'char[10]' lvalue "STRSTRSTR"
    |       |   `-ReturnStmt 0x14c945320 <line:41:5, col:13>
    |       |     `-UnaryOperator 0x14c945308 <col:12, col:13> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       |       `-ImplicitCastExpr 0x14c9452f0 <col:13> '<dependent type>' contains-errors <LValueToRValue>
    |       |         `-RecoveryExpr 0x14c9452d0 <col:13> '<dependent type>' contains-errors lvalue
    |       `-BinaryOperator 0x14c945ae0 <line:43:4, col:40> '<dependent type>' contains-errors '='
    |         |-ArraySubscriptExpr 0x14c945a30 <col:4, col:24> '<dependent type>' contains-errors lvalue
    |         | |-ImplicitCastExpr 0x14c945a00 <col:4, col:13> '<dependent type>' contains-errors <LValueToRValue>
    |         | | `-RecoveryExpr 0x14c9453a8 <col:4, col:13> '<dependent type>' contains-errors lvalue
    |         | |   `-DeclRefExpr 0x14c945370 <col:4> 'struct xt_table_info *' lvalue ParmVar 0x14c940a28 'newinfo' 'struct xt_table_info *'
    |         | `-ImplicitCastExpr 0x14c945a18 <col:23> 'unsigned int' <LValueToRValue>
    |         |   `-DeclRefExpr 0x14c9453d0 <col:23> 'unsigned int' lvalue Var 0x14c940fe8 'h' 'unsigned int'
    |         `-ArraySubscriptExpr 0x14c945ac0 <col:28, col:40> 'const unsigned int' lvalue
    |           |-ImplicitCastExpr 0x14c945a90 <col:28> 'const unsigned int *' <LValueToRValue>
    |           | `-DeclRefExpr 0x14c945a50 <col:28> 'const unsigned int *' lvalue ParmVar 0x14c940c88 'underflows' 'const unsigned int *'
    |           `-ImplicitCastExpr 0x14c945aa8 <col:39> 'unsigned int' <LValueToRValue>
    |             `-DeclRefExpr 0x14c945a70 <col:39> 'unsigned int' lvalue Var 0x14c940fe8 'h' 'unsigned int'
    |-BinaryOperator 0x14c945e08 <line:49:2, col:16> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x14c945dc0 <col:2, col:5> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x14c945d88 <col:2> 'struct ip6t_entry *' lvalue ParmVar 0x14c928648 'e' 'struct ip6t_entry *'
    | `-IntegerLiteral 0x14c945de8 <col:16> 'int' 0
    `-ReturnStmt 0x14c945e48 <line:50:2, col:9>
      `-IntegerLiteral 0x14c945e28 <col:9> 'int' 0
