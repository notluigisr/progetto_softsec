`-FunctionDecl 0x15800dd18  line:1:1 SYSCALL_DEFINE1 'int ()'
  `-CompoundStmt 0x15802b7e0 <line:2:1, line:63:1>
    |-DeclStmt 0x15800de88 <line:3:2, col:22>
    | `-VarDecl 0x15800de20 <col:2, col:16> col:16 used retval 'unsigned long'
    |-DeclStmt 0x15800dfb8 <line:4:2, col:30>
    | |-VarDecl 0x15800deb8 <col:2, col:16> col:16 used newbrk 'unsigned long'
    | `-VarDecl 0x15800df38 <col:2, col:24> col:24 used oldbrk 'unsigned long'
    |-DeclStmt 0x15800e298 <line:5:2, col:36>
    | |-RecordDecl 0x15800dfd0 <col:2, col:9> col:9 struct mm_struct
    | `-VarDecl 0x15800e138 <col:2, col:34> col:20 used mm 'struct mm_struct *' cinit
    |   `-CXXDependentScopeMemberExpr 0x15800e238 <col:25, col:34> '<dependent type>' contains-errors lvalue ->mm
    |     `-RecoveryExpr 0x15800e218 <col:25> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x15800e330 <line:6:2, col:23>
    | `-VarDecl 0x15800e2c8 <col:2, col:16> col:16 used min_brk 'unsigned long'
    |-CallExpr 0x158027538 <line:8:2, col:14> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1580274b8 <col:2> 'int ()' Function 0x158027400 'LIST_HEAD' 'int ()'
    | `-RecoveryExpr 0x158027518 <col:12> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x158027bd0 <line:10:2, line:11:11>
    | |-CallExpr 0x158027b00 <line:10:6, col:39> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x158027640 <col:6> 'int ()' Function 0x158027588 'down_write_killable' 'int ()'
    | | `-UnaryOperator 0x158027ae8 <col:26, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |   `-RecoveryExpr 0x158027ac0 <col:27, col:31> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x158027660 <col:27> 'struct mm_struct *' contains-errors lvalue Var 0x15800e138 'mm' 'struct mm_struct *'
    | `-ReturnStmt 0x158027bc0 <line:11:3, col:11>
    |   `-UnaryOperator 0x158027ba8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x158027b90 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x158027b70 <col:11> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x158027c70 <line:20:2, col:16> 'unsigned long' contains-errors '='
    | |-DeclRefExpr 0x158027bf0 <col:2> 'unsigned long' lvalue Var 0x15800e2c8 'min_brk' 'unsigned long'
    | `-RecoveryExpr 0x158027c48 <col:12, col:16> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x158027c10 <col:12> 'struct mm_struct *' contains-errors lvalue Var 0x15800e138 'mm' 'struct mm_struct *'
    |-IfStmt 0x158027d90 <line:22:2, line:23:8>
    | |-BinaryOperator 0x158027d08 <line:22:6, col:12> 'int' contains-errors '<'
    | | |-RecoveryExpr 0x158027ce8 <col:6> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x158027ca8 <col:12> 'unsigned long' lvalue Var 0x15800e2c8 'min_brk' 'unsigned long'
    | `-GotoStmt 0x158027d78 <line:23:3, col:8> 'out' 0x158027d28
    |-IfStmt 0x158028238 <line:26:2, line:28:8>
    | |-CallExpr 0x1580281d8 <line:26:6, line:27:38> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x158027e90 <line:26:6> 'int ()' Function 0x158027dd8 'check_data_rlimit' 'int ()'
    | | |-CallExpr 0x158028190 <col:24, col:42> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x158027f90 <col:24> 'int ()' Function 0x158027ed8 'rlimit' 'int ()'
    | | | `-RecoveryExpr 0x158028170 <col:31> '<dependent type>' contains-errors lvalue
    | | |-RecoveryExpr 0x1580281b8 <col:45> '<dependent type>' contains-errors lvalue
    | | |-RecoveryExpr 0x158028040 <col:50, col:54> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x158028008 <col:50> 'struct mm_struct *' contains-errors lvalue Var 0x15800e138 'mm' 'struct mm_struct *'
    | | |-RecoveryExpr 0x1580280a0 <line:27:10, col:14> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x158028068 <col:10> 'struct mm_struct *' contains-errors lvalue Var 0x15800e138 'mm' 'struct mm_struct *'
    | | `-RecoveryExpr 0x158028100 <col:24, col:28> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x1580280c8 <col:24> 'struct mm_struct *' contains-errors lvalue Var 0x15800e138 'mm' 'struct mm_struct *'
    | `-GotoStmt 0x158028220 <line:28:3, col:8> 'out' 0x158027d28
    |-BinaryOperator 0x15802a628 <line:30:2, col:25> 'unsigned long' contains-errors '='
    | |-DeclRefExpr 0x158028258 <col:2> 'unsigned long' lvalue Var 0x15800deb8 'newbrk' 'unsigned long'
    | `-CallExpr 0x15802a600 <col:11, col:25> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x158028358 <col:11> 'int ()' Function 0x1580282a0 'PAGE_ALIGN' 'int ()'
    |   `-RecoveryExpr 0x1580283d8 <col:22> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x15802a710 <line:31:2, col:29> 'unsigned long' contains-errors '='
    | |-DeclRefExpr 0x15802a648 <col:2> 'unsigned long' lvalue Var 0x15800df38 'oldbrk' 'unsigned long'
    | `-CallExpr 0x15802a6e8 <col:11, col:29> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x15802a668 <col:11> 'int ()' Function 0x1580282a0 'PAGE_ALIGN' 'int ()'
    |   `-RecoveryExpr 0x15802a6c0 <col:22, col:26> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x15802a688 <col:22> 'struct mm_struct *' contains-errors lvalue Var 0x15800e138 'mm' 'struct mm_struct *'
    |-IfStmt 0x15802a828 <line:32:2, line:33:8>
    | |-BinaryOperator 0x15802a7a0 <line:32:6, col:16> 'int' '=='
    | | |-ImplicitCastExpr 0x15802a770 <col:6> 'unsigned long' <LValueToRValue>
    | | | `-DeclRefExpr 0x15802a730 <col:6> 'unsigned long' lvalue Var 0x15800df38 'oldbrk' 'unsigned long'
    | | `-ImplicitCastExpr 0x15802a788 <col:16> 'unsigned long' <LValueToRValue>
    | |   `-DeclRefExpr 0x15802a750 <col:16> 'unsigned long' lvalue Var 0x15800deb8 'newbrk' 'unsigned long'
    | `-GotoStmt 0x15802a810 <line:33:3, col:8> 'set_brk' 0x15802a7c0
    |-IfStmt 0x15802ab28 <line:36:2, line:40:2>
    | |-RecoveryExpr 0x15802a8a8 <line:36:6, col:17> '_Bool' contains-errors
    | `-CompoundStmt 0x15802ab08 <col:22, line:40:2>
    |   |-IfStmt 0x15802aad0 <line:37:3, line:38:9>
    |   | |-RecoveryExpr 0x15802aa98 <line:37:7, col:48> '_Bool' contains-errors
    |   | `-GotoStmt 0x15802aab8 <line:38:4, col:9> 'set_brk' 0x15802a7c0
    |   `-GotoStmt 0x15802aaf0 <line:39:3, col:8> 'out' 0x158027d28
    |-IfStmt 0x15802ace0 <line:43:2, line:44:8>
    | |-RecoveryExpr 0x15802aca8 <line:43:6, col:56> '_Bool' contains-errors
    | `-GotoStmt 0x15802acc8 <line:44:3, col:8> 'out' 0x158027d28
    |-IfStmt 0x15802af08 <line:47:2, line:48:8>
    | |-RecoveryExpr 0x15802aed0 <line:47:6, col:43> '_Bool' contains-errors
    | `-GotoStmt 0x15802aef0 <line:48:3, col:8> 'out' 0x158027d28
    |-LabelStmt 0x15802af90 <line:50:1, col:8> 'set_brk'
    | `-NullStmt 0x15802af88 <col:8>
    |-CallExpr 0x15802b238 <line:53:2, col:24> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x15802b1a0 <col:2> 'int ()' Function 0x15802b0e8 'up_write' 'int ()'
    | `-UnaryOperator 0x15802b220 <col:11, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x15802b1f8 <col:12, col:16> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x15802b1c0 <col:12> 'struct mm_struct *' contains-errors lvalue Var 0x15800e138 'mm' 'struct mm_struct *'
    |-IfStmt 0x15802b5e0 <line:55:2, line:56:38>
    | |-RecoveryExpr 0x15802b380 <line:55:6> '_Bool' contains-errors
    | `-CallExpr 0x15802b598 <line:56:3, col:38> 'int'
    |   |-ImplicitCastExpr 0x15802b580 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x15802b480 <col:3> 'int ()' Function 0x15802b3c8 'mm_populate' 'int ()'
    |   |-ImplicitCastExpr 0x15802b5c8 <col:15> 'unsigned long' <LValueToRValue>
    |   | `-DeclRefExpr 0x15802b4a0 <col:15> 'unsigned long' lvalue Var 0x15800df38 'oldbrk' 'unsigned long'
    |   `-BinaryOperator 0x15802b530 <col:23, col:32> 'unsigned long' '-'
    |     |-ImplicitCastExpr 0x15802b500 <col:23> 'unsigned long' <LValueToRValue>
    |     | `-DeclRefExpr 0x15802b4c0 <col:23> 'unsigned long' lvalue Var 0x15800deb8 'newbrk' 'unsigned long'
    |     `-ImplicitCastExpr 0x15802b518 <col:32> 'unsigned long' <LValueToRValue>
    |       `-DeclRefExpr 0x15802b4e0 <col:32> 'unsigned long' lvalue Var 0x15800df38 'oldbrk' 'unsigned long'
    |-LabelStmt 0x15802b6a0 <line:59:1, line:60:15> 'out'
    | `-BinaryOperator 0x15802b680 <col:2, col:15> 'unsigned long' contains-errors '='
    |   |-DeclRefExpr 0x15802b600 <col:2> 'unsigned long' lvalue Var 0x15800de20 'retval' 'unsigned long'
    |   `-RecoveryExpr 0x15802b658 <col:11, col:15> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x15802b620 <col:11> 'struct mm_struct *' contains-errors lvalue Var 0x15800e138 'mm' 'struct mm_struct *'
    |-CallExpr 0x15802b758 <line:61:2, col:24> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x15802b6c0 <col:2> 'int ()' Function 0x15802b0e8 'up_write' 'int ()'
    | `-UnaryOperator 0x15802b740 <col:11, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x15802b718 <col:12, col:16> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x15802b6e0 <col:12> 'struct mm_struct *' contains-errors lvalue Var 0x15800e138 'mm' 'struct mm_struct *'
    `-ReturnStmt 0x15802b7d0 <line:62:2, col:9>
      `-ImplicitCastExpr 0x15802b7b8 <col:9> 'int' <IntegralCast>
        `-ImplicitCastExpr 0x15802b7a0 <col:9> 'unsigned long' <LValueToRValue>
          `-DeclRefExpr 0x15802b780 <col:9> 'unsigned long' lvalue Var 0x15800de20 'retval' 'unsigned long'
