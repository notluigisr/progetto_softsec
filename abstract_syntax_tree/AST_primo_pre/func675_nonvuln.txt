`-FunctionDecl 0x14090b1f8  line:1:12 invalid FusedBatchNormGradOpBase 'int (int *)'
  |-ParmVarDecl 0x14090b128 <col:37, col:59> col:59 invalid context 'int *'
  `-CompoundStmt 0x140923938 <line:2:27, line:11:3>
    |-DeclStmt 0x14090b328 <line:3:5, col:18>
    | `-VarDecl 0x14090b2c0 <col:5, col:11> col:11 used epsilon 'float'
    |-CallExpr 0x14090b648 <line:4:5, col:62> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14090b4a0 <col:5> 'int ()' Function 0x14090b3e8 'OP_REQUIRES_OK' 'int ()'
    | |-RecoveryExpr 0x14090b4c0 <col:20> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x14090b618 <col:29, col:61> '<dependent type>' contains-errors
    |   |-CXXDependentScopeMemberExpr 0x14090b500 <col:29, col:38> '<dependent type>' contains-errors lvalue ->GetAttr
    |   | `-RecoveryExpr 0x14090b4e0 <col:29> '<dependent type>' contains-errors lvalue
    |   |-StringLiteral 0x14090b590 <col:46> 'char[4]' lvalue "STR"
    |   `-UnaryOperator 0x14090b600 <col:53, col:54> 'float *' prefix '&' cannot overflow
    |     `-DeclRefExpr 0x14090b5b0 <col:54> 'float' lvalue Var 0x14090b2c0 'epsilon' 'float'
    |-BinaryOperator 0x140923288 <line:5:5, col:25> 'float' '='
    | |-DeclRefExpr 0x14090b678 <col:5> 'float' lvalue Var 0x14090b2c0 'epsilon' 'float'
    | `-ImplicitCastExpr 0x140923270 <col:16, col:25> 'float' <IntegralToFloating>
    |   `-CallExpr 0x140923218 <col:16, col:25> 'int'
    |     |-ImplicitCastExpr 0x140923200 <col:16> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x14090b778 <col:16> 'int ()' Function 0x14090b6c0 'U' 'int ()'
    |     `-ImplicitCastExpr 0x140923258 <col:18> 'double' <FloatingCast>
    |       `-ImplicitCastExpr 0x140923240 <col:18> 'float' <LValueToRValue>
    |         `-DeclRefExpr 0x14090b798 <col:18> 'float' lvalue Var 0x14090b2c0 'epsilon' 'float'
    |-CallExpr 0x140923468 <line:7:5, col:68> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1409232a8 <col:5> 'int ()' Function 0x14090b3e8 'OP_REQUIRES_OK' 'int ()'
    | |-RecoveryExpr 0x1409232c8 <col:20> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x140923438 <col:29, col:67> '<dependent type>' contains-errors
    |   |-CXXDependentScopeMemberExpr 0x140923308 <col:29, col:38> '<dependent type>' contains-errors lvalue ->GetAttr
    |   | `-RecoveryExpr 0x1409232e8 <col:29> '<dependent type>' contains-errors lvalue
    |   |-StringLiteral 0x140923350 <col:46> 'char[4]' lvalue "STR"
    |   `-UnaryOperator 0x140923420 <col:53, col:54> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x140923400 <col:54> '<dependent type>' contains-errors lvalue
    `-CallExpr 0x140923908 <line:10:5, col:67> '<dependent type>' contains-errors
      |-DeclRefExpr 0x140923748 <col:5> 'int ()' Function 0x14090b3e8 'OP_REQUIRES_OK' 'int ()'
      |-RecoveryExpr 0x140923768 <col:20> '<dependent type>' contains-errors lvalue
      `-CallExpr 0x1409238d8 <col:29, col:66> '<dependent type>' contains-errors
        |-CXXDependentScopeMemberExpr 0x1409237a8 <col:29, col:38> '<dependent type>' contains-errors lvalue ->GetAttr
        | `-RecoveryExpr 0x140923788 <col:29> '<dependent type>' contains-errors lvalue
        |-StringLiteral 0x1409237f0 <col:46> 'char[4]' lvalue "STR"
        `-UnaryOperator 0x1409238c0 <col:53, col:54> '<dependent type>' contains-errors prefix '&' cannot overflow
          `-RecoveryExpr 0x1409238a0 <col:54> '<dependent type>' contains-errors lvalue
