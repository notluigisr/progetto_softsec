`-FunctionDecl 0x11e928318  line:1:1 invalid emit_S 'int (int *, int, int)'
  |-ParmVarDecl 0x11e928128 <col:8, col:23> col:23 invalid s 'int *'
  |-ParmVarDecl 0x11e9281a8 <col:26, col:30> col:30 used pc 'int'
  |-ParmVarDecl 0x11e928228 <col:34, col:43> col:43 invalid i 'int'
  `-CompoundStmt 0x11e941838 <line:2:1, line:8:1>
    |-CallExpr 0x11e928600 <line:6:3, col:21> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x11e928530 <col:3> 'int ()' Function 0x11e928478 'emit_B' 'int ()'
    | |-RecoveryExpr 0x11e928550 <col:10> '<dependent type>' contains-errors lvalue
    | |-DeclRefExpr 0x11e928570 <col:13> 'int' lvalue ParmVar 0x11e9281a8 'pc' 'int'
    | `-RecoveryExpr 0x11e9285e0 <col:19> '<dependent type>' contains-errors lvalue
    `-CallExpr 0x11e941800 <line:7:3, col:21> '<dependent type>' contains-errors
      |-DeclRefExpr 0x11e928638 <col:3> 'int ()' Function 0x11e928478 'emit_B' 'int ()'
      |-RecoveryExpr 0x11e928658 <col:10> '<dependent type>' contains-errors lvalue
      |-BinaryOperator 0x11e928790 <col:13, col:16> 'int' '+'
      | |-ImplicitCastExpr 0x11e928778 <col:13> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x11e928678 <col:13> 'int' lvalue ParmVar 0x11e9281a8 'pc' 'int'
      | `-IntegerLiteral 0x11e928698 <col:16> 'int' 1
      `-RecoveryExpr 0x11e9287b0 <col:19> '<dependent type>' contains-errors lvalue
