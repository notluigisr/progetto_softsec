`-FunctionDecl 0x1531283a8  line:1:14 invalid EvalGatherNd 'int (int *, const int *, const int *, int *)'
  |-ParmVarDecl 0x153128128 <col:27, col:42> col:42 invalid context 'int *'
  |-ParmVarDecl 0x1531281a8 <col:51, col:71> col:71 invalid params 'const int *'
  |-ParmVarDecl 0x153128228 <line:2:27, col:47> col:47 referenced invalid indices 'const int *'
  |-ParmVarDecl 0x1531282a8 <col:56, col:70> col:70 invalid output 'int *'
  `-CompoundStmt 0x1531424a0 <col:78, line:35:1>
    |-DeclStmt 0x153128620 <line:4:3, col:64>
    | `-VarDecl 0x153128488 <col:3, col:63> col:15 used indices_values 'const int *' auto cinit
    |   `-BinaryOperator 0x153128600 <col:32, col:63> 'int' contains-errors '>'
    |     |-BinaryOperator 0x1531285e0 <col:32, col:46> 'int' contains-errors '<'
    |     | |-RecoveryExpr 0x1531285a0 <col:32> '<dependent type>' contains-errors lvalue
    |     | `-RecoveryExpr 0x1531285c0 <col:46> '<dependent type>' contains-errors lvalue
    |     `-ParenExpr 0x153128560 <col:55, col:63> '<dependent type>' contains-errors lvalue
    |       `-RecoveryExpr 0x153128540 <col:56> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x153128758 <line:5:3, col:63>
    | `-VarDecl 0x153128650 <col:3, col:16> col:16 invalid num_indices 'const int'
    |-ForStmt 0x153141a18 <line:6:3, line:11:3>
    | |-<<<NULL>>>
    | |-<<<NULL>>>
    | |-BinaryOperator 0x1531418a8 <line:6:22, col:26> 'int' contains-errors '<'
    | | |-RecoveryExpr 0x153141888 <col:22> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x153141848 <col:26> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x153141918 <col:39, col:40> '<dependent type>' contains-errors postfix '++' cannot overflow
    | | `-RecoveryExpr 0x1531418f8 <col:39> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x153141a00 <col:44, line:11:3>
    |   `-IfStmt 0x1531419e0 <line:7:5, line:10:5>
    |     |-RecoveryExpr 0x153141988 <line:7:9, col:29> '_Bool' contains-errors
    |     `-CompoundStmt 0x1531419c8 <col:32, line:10:5>
    |       `-BreakStmt 0x1531419c0 <line:9:7>
    `-SwitchStmt 0x153141c70 <line:14:3, line:34:3>
      |-CXXDependentScopeMemberExpr 0x153141c10 <line:14:11, col:19> '<dependent type>' contains-errors lvalue ->type
      | `-RecoveryExpr 0x153141bf0 <col:11> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x153142488 <col:25, line:34:3>
        `-DefaultStmt 0x153142468 <line:29:5, line:32:57>
          `-CallExpr 0x153142430 <line:30:7, line:32:57> '<dependent type>' contains-errors
            |-DeclRefExpr 0x1531421f8 <line:30:7> 'int ()' Function 0x153142140 'TF_LITE_KERNEL_LOG' 'int ()'
            |-RecoveryExpr 0x153142218 <col:26> '<dependent type>' contains-errors lvalue
            |-StringLiteral 0x153142280 <line:31:26> 'char[4]' lvalue "STR"
            `-CallExpr 0x153142408 <line:32:26, col:56> '<dependent type>' contains-errors
              |-DeclRefExpr 0x153142380 <col:26> 'int ()' Function 0x1531422c8 'TfLiteTypeGetName' 'int ()'
              `-CXXDependentScopeMemberExpr 0x1531423c0 <col:44, col:52> '<dependent type>' contains-errors lvalue ->type
                `-RecoveryExpr 0x1531423a0 <col:44> '<dependent type>' contains-errors lvalue
