`-FunctionDecl 0x128140eb8  line:1:12 do_tmpfile 'int (struct nameidata *, unsigned int, const struct open_flags *, struct file *, int *)' static
  |-ParmVarDecl 0x128128648 <col:23, col:41> col:41 used nd 'struct nameidata *'
  |-ParmVarDecl 0x1281286c8 <col:45, col:54> col:54 used flags 'unsigned int'
  |-ParmVarDecl 0x128140ac8 <line:2:3, col:28> col:28 used op 'const struct open_flags *'
  |-ParmVarDecl 0x128140c98 <line:3:3, col:16> col:16 used file 'struct file *'
  |-ParmVarDecl 0x128140d48 <col:22, col:27> col:27 used opened 'int *'
  `-CompoundStmt 0x12814ac18 <line:4:1, line:57:1>
    |-DeclStmt 0x1281413a8 <line:5:2, col:53>
    | |-RecordDecl 0x128140fd0 <col:15, col:22> col:22 struct qstr
    | `-VarDecl 0x1281410c8 <col:2, col:27> col:27 invalid name 'const struct qstr' static
    |-DeclStmt 0x1281415a8 <line:6:2, col:22>
    | |-RecordDecl 0x1281413c0 <col:2, col:9> col:9 struct dentry
    | `-VarDecl 0x128141528 <col:2, col:17> col:17 used child 'struct dentry *'
    |-DeclStmt 0x1281417a8 <line:7:2, col:19>
    | |-RecordDecl 0x1281415c0 <col:2, col:9> col:9 struct inode
    | `-VarDecl 0x128141728 <col:2, col:16> col:16 used dir 'struct inode *'
    |-DeclStmt 0x128141938 <line:8:2, col:18>
    | |-RecordDecl 0x1281417c0 <col:2, col:9> col:9 struct path
    | `-VarDecl 0x1281418b8 <col:2, col:14> col:14 referenced invalid path 'struct path'
    |-DeclStmt 0x128147238 <line:9:2, col:64>
    | `-VarDecl 0x128141968 <col:2, col:63> col:6 used error 'int' cinit
    |   `-CallExpr 0x128147200 <col:14, col:63> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x1281470b8 <col:14> 'int ()' Function 0x128147000 'path_lookupat' 'int ()'
    |     |-DeclRefExpr 0x1281470d8 <col:28> 'struct nameidata *' lvalue ParmVar 0x128128648 'nd' 'struct nameidata *'
    |     |-BinaryOperator 0x1281471e0 <col:32, col:40> '<dependent type>' contains-errors '|'
    |     | |-DeclRefExpr 0x1281470f8 <col:32> 'unsigned int' lvalue ParmVar 0x1281286c8 'flags' 'unsigned int'
    |     | `-RecoveryExpr 0x1281471c0 <col:40> '<dependent type>' contains-errors lvalue
    |     `-UnaryOperator 0x128147170 <col:58, col:59> '<dependent type>' contains-errors prefix '&' cannot overflow
    |       `-RecoveryExpr 0x128147150 <col:59> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x128147410 <line:10:2, line:11:10>
    | |-CallExpr 0x128147388 <line:10:6, col:20> 'int' contains-errors
    | | |-ImplicitCastExpr 0x128147370 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x128147330 <col:6> 'int ()' Function 0x128147278 'unlikely' 'int ()'
    | | `-ImplicitCastExpr 0x1281473b0 <col:15> 'int' contains-errors <LValueToRValue>
    | |   `-DeclRefExpr 0x128147350 <col:15> 'int' contains-errors lvalue Var 0x128141968 'error' 'int'
    | `-ReturnStmt 0x128147400 <line:11:3, col:10>
    |   `-ImplicitCastExpr 0x1281473e8 <col:10> 'int' contains-errors <LValueToRValue>
    |     `-DeclRefExpr 0x1281473c8 <col:10> 'int' contains-errors lvalue Var 0x128141968 'error' 'int'
    |-BinaryOperator 0x1281475e0 <line:12:2, col:33> 'int' contains-errors '='
    | |-DeclRefExpr 0x128147430 <col:2> 'int' contains-errors lvalue Var 0x128141968 'error' 'int'
    | `-CallExpr 0x1281475b8 <col:10, col:33> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x128147530 <col:10> 'int ()' Function 0x128147478 'mnt_want_write' 'int ()'
    |   `-CXXDependentScopeMemberExpr 0x128147570 <col:25, col:30> '<dependent type>' contains-errors lvalue .mnt
    |     `-RecoveryExpr 0x128147550 <col:25> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x128147700 <line:13:2, line:14:8>
    | |-CallExpr 0x128147658 <line:13:6, col:20> 'int' contains-errors
    | | |-ImplicitCastExpr 0x128147640 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x128147600 <col:6> 'int ()' Function 0x128147278 'unlikely' 'int ()'
    | | `-ImplicitCastExpr 0x128147680 <col:15> 'int' contains-errors <LValueToRValue>
    | |   `-DeclRefExpr 0x128147620 <col:15> 'int' contains-errors lvalue Var 0x128141968 'error' 'int'
    | `-GotoStmt 0x1281476e8 <line:14:3, col:8> 'out' 0x128147698
    |-BinaryOperator 0x1281477f0 <line:15:2, col:21> 'struct inode *' contains-errors '='
    | |-DeclRefExpr 0x128147720 <col:2> 'struct inode *' lvalue Var 0x128141728 'dir' 'struct inode *'
    | `-CXXDependentScopeMemberExpr 0x1281477a8 <col:8, col:21> '<dependent type>' contains-errors lvalue ->d_inode
    |   `-CXXDependentScopeMemberExpr 0x128147760 <col:8, col:13> '<dependent type>' contains-errors lvalue .dentry
    |     `-RecoveryExpr 0x128147740 <col:8> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x128147a80 <line:17:2, col:52> 'int' contains-errors '='
    | |-DeclRefExpr 0x128147810 <col:2> 'int' contains-errors lvalue Var 0x128141968 'error' 'int'
    | `-CallExpr 0x128147a50 <col:10, col:52> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x128147910 <col:10> 'int ()' Function 0x128147858 'inode_permission' 'int ()'
    |   |-DeclRefExpr 0x128147930 <col:27> 'struct inode *' lvalue Var 0x128141728 'dir' 'struct inode *'
    |   `-BinaryOperator 0x128147a30 <col:32, col:44> '<dependent type>' contains-errors '|'
    |     |-RecoveryExpr 0x1281479f0 <col:32> '<dependent type>' contains-errors lvalue
    |     `-RecoveryExpr 0x128147a10 <col:44> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x128147b40 <line:18:2, line:19:8>
    | |-ImplicitCastExpr 0x128147ac0 <line:18:6> 'int' contains-errors <LValueToRValue>
    | | `-DeclRefExpr 0x128147aa0 <col:6> 'int' contains-errors lvalue Var 0x128141968 'error' 'int'
    | `-GotoStmt 0x128147b28 <line:19:3, col:8> 'out2' 0x128147ad8
    |-IfStmt 0x128147d68 <line:20:2, line:23:2>
    | |-UnaryOperator 0x128147c20 <line:20:6, col:18> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x128147c08 <col:7, col:18> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-CXXDependentScopeMemberExpr 0x128147bc0 <col:7, col:18> '<dependent type>' contains-errors lvalue ->tmpfile
    | |     `-RecoveryExpr 0x128147b98 <col:7, col:12> '<dependent type>' contains-errors lvalue
    | |       `-DeclRefExpr 0x128147b60 <col:7> 'struct inode *' lvalue Var 0x128141728 'dir' 'struct inode *'
    | `-CompoundStmt 0x128147d48 <col:27, line:23:2>
    |   |-BinaryOperator 0x128147d10 <line:21:3, col:12> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x128147c38 <col:3> 'int' contains-errors lvalue Var 0x128141968 'error' 'int'
    |   | `-UnaryOperator 0x128147cf8 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |   `-ImplicitCastExpr 0x128147ce0 <col:12> '<dependent type>' contains-errors <LValueToRValue>
    |   |     `-RecoveryExpr 0x128147cc0 <col:12> '<dependent type>' contains-errors lvalue
    |   `-GotoStmt 0x128147d30 <line:22:3, col:8> 'out2' 0x128147ad8
    |-BinaryOperator 0x128147f78 <line:24:2, col:36> 'struct dentry *' contains-errors '='
    | |-DeclRefExpr 0x128147d88 <col:2> 'struct dentry *' lvalue Var 0x128141528 'child' 'struct dentry *'
    | `-CallExpr 0x128147f48 <col:10, col:36> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x128147e88 <col:10> 'int ()' Function 0x128147dd0 'd_alloc' 'int ()'
    |   |-CXXDependentScopeMemberExpr 0x128147ec8 <col:18, col:23> '<dependent type>' contains-errors lvalue .dentry
    |   | `-RecoveryExpr 0x128147ea8 <col:18> '<dependent type>' contains-errors lvalue
    |   `-UnaryOperator 0x128147f30 <col:31, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x128147f10 <col:32> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x128149188 <line:25:2, line:28:2>
    | |-CallExpr 0x128149030 <line:25:6, col:21> 'int'
    | | |-ImplicitCastExpr 0x128149018 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x128147f98 <col:6> 'int ()' Function 0x128147278 'unlikely' 'int ()'
    | | `-UnaryOperator 0x128149000 <col:15, col:16> 'int' prefix '!' cannot overflow
    | |   `-ImplicitCastExpr 0x128147fd8 <col:16> 'struct dentry *' <LValueToRValue>
    | |     `-DeclRefExpr 0x128147fb8 <col:16> 'struct dentry *' lvalue Var 0x128141528 'child' 'struct dentry *'
    | `-CompoundStmt 0x128149168 <col:24, line:28:2>
    |   |-BinaryOperator 0x128149130 <line:26:3, col:12> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x128149058 <col:3> 'int' contains-errors lvalue Var 0x128141968 'error' 'int'
    |   | `-UnaryOperator 0x128149118 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |   `-ImplicitCastExpr 0x128149100 <col:12> '<dependent type>' contains-errors <LValueToRValue>
    |   |     `-RecoveryExpr 0x1281490e0 <col:12> '<dependent type>' contains-errors lvalue
    |   `-GotoStmt 0x128149150 <line:27:3, col:8> 'out2' 0x128147ad8
    |-CallExpr 0x128149310 <line:29:2, col:18> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x128149288 <col:2> 'int ()' Function 0x1281491d0 'dput' 'int ()'
    | `-CXXDependentScopeMemberExpr 0x1281492c8 <col:7, col:12> '<dependent type>' contains-errors lvalue .dentry
    |   `-RecoveryExpr 0x1281492a8 <col:7> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x1281493e8 <line:30:2, col:16> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x128149380 <col:2, col:7> '<dependent type>' contains-errors lvalue .dentry
    | | `-RecoveryExpr 0x128149358 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x128149338 <col:2> 'struct path' lvalue Var 0x1281418b8 'path' 'struct path'
    | `-DeclRefExpr 0x1281493c8 <col:16> 'struct dentry *' lvalue Var 0x128141528 'child' 'struct dentry *'
    |-BinaryOperator 0x1281495a8 <line:31:2, col:49> 'int' contains-errors '='
    | |-DeclRefExpr 0x128149408 <col:2> 'int' contains-errors lvalue Var 0x128141968 'error' 'int'
    | `-CallExpr 0x128149570 <col:10, col:49> '<dependent type>' contains-errors
    |   |-CXXDependentScopeMemberExpr 0x128149488 <col:10, col:21> '<dependent type>' contains-errors lvalue ->tmpfile
    |   | `-RecoveryExpr 0x128149460 <col:10, col:15> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x128149428 <col:10> 'struct inode *' lvalue Var 0x128141728 'dir' 'struct inode *'
    |   |-DeclRefExpr 0x1281494d0 <col:29> 'struct inode *' lvalue Var 0x128141728 'dir' 'struct inode *'
    |   |-DeclRefExpr 0x1281494f0 <col:34> 'struct dentry *' lvalue Var 0x128141528 'child' 'struct dentry *'
    |   `-RecoveryExpr 0x128149548 <col:41, col:45> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x128149510 <col:41> 'const struct open_flags *' lvalue ParmVar 0x128140ac8 'op' 'const struct open_flags *'
    |-IfStmt 0x128149618 <line:32:2, line:33:8>
    | |-ImplicitCastExpr 0x1281495e8 <line:32:6> 'int' contains-errors <LValueToRValue>
    | | `-DeclRefExpr 0x1281495c8 <col:6> 'int' contains-errors lvalue Var 0x128141968 'error' 'int'
    | `-GotoStmt 0x128149600 <line:33:3, col:8> 'out2' 0x128147ad8
    |-CallExpr 0x1281497d8 <line:34:2, col:32> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x128149718 <col:2> 'int ()' Function 0x128149660 'audit_inode' 'int ()'
    | |-RecoveryExpr 0x128149770 <col:14, col:18> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x128149738 <col:14> 'struct nameidata *' lvalue ParmVar 0x128128648 'nd' 'struct nameidata *'
    | |-DeclRefExpr 0x128149798 <col:24> 'struct dentry *' lvalue Var 0x128141528 'child' 'struct dentry *'
    | `-IntegerLiteral 0x1281497b8 <col:31> 'int' 0
    |-BinaryOperator 0x128149a20 <line:36:2, col:42> 'int' contains-errors '='
    | |-DeclRefExpr 0x128149810 <col:2> 'int' contains-errors lvalue Var 0x128141968 'error' 'int'
    | `-CallExpr 0x1281499e8 <col:10, col:42> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x128149910 <col:10> 'int ()' Function 0x128149858 'may_open' 'int ()'
    |   |-UnaryOperator 0x128149950 <col:19, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-RecoveryExpr 0x128149930 <col:20> '<dependent type>' contains-errors lvalue
    |   |-IntegerLiteral 0x128149968 <col:26> 'int' 0
    |   `-RecoveryExpr 0x1281499c0 <col:29, col:33> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x128149988 <col:29> 'const struct open_flags *' lvalue ParmVar 0x128140ac8 'op' 'const struct open_flags *'
    |-IfStmt 0x128149a90 <line:37:2, line:38:8>
    | |-ImplicitCastExpr 0x128149a60 <line:37:6> 'int' contains-errors <LValueToRValue>
    | | `-DeclRefExpr 0x128149a40 <col:6> 'int' contains-errors lvalue Var 0x128141968 'error' 'int'
    | `-GotoStmt 0x128149a78 <line:38:3, col:8> 'out2' 0x128147ad8
    |-BinaryOperator 0x128149bc0 <line:39:2, col:26> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x128149b10 <col:2, col:15> '<dependent type>' contains-errors lvalue .mnt
    | | `-RecoveryExpr 0x128149ae8 <col:2, col:8> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x128149ab0 <col:2> 'struct file *' lvalue ParmVar 0x128140c98 'file' 'struct file *'
    | `-CXXDependentScopeMemberExpr 0x128149b78 <col:21, col:26> '<dependent type>' contains-errors lvalue .mnt
    |   `-RecoveryExpr 0x128149b58 <col:21> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x128149db0 <line:41:2, line:42:8>
    | |-ImplicitCastExpr 0x128149d80 <line:41:6> 'int' contains-errors <LValueToRValue>
    | | `-DeclRefExpr 0x128149d60 <col:6> 'int' contains-errors lvalue Var 0x128141968 'error' 'int'
    | `-GotoStmt 0x128149d98 <line:42:3, col:8> 'out2' 0x128147ad8
    |-BinaryOperator 0x128149f68 <line:43:2, col:34> 'int' contains-errors '='
    | |-DeclRefExpr 0x128149dd0 <col:2> 'int' contains-errors lvalue Var 0x128141968 'error' 'int'
    | `-CallExpr 0x128149f28 <col:10, col:34> 'int'
    |   |-ImplicitCastExpr 0x128149f10 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x128149ed0 <col:10> 'int ()' Function 0x128149e18 'open_check_o_direct' 'int ()'
    |   `-ImplicitCastExpr 0x128149f50 <col:30> 'struct file *' <LValueToRValue>
    |     `-DeclRefExpr 0x128149ef0 <col:30> 'struct file *' lvalue ParmVar 0x128140c98 'file' 'struct file *'
    |-IfStmt 0x12814a870 <line:44:2, line:51:2> has_else
    | |-ImplicitCastExpr 0x128149fa8 <line:44:6> 'int' contains-errors <LValueToRValue>
    | | `-DeclRefExpr 0x128149f88 <col:6> 'int' contains-errors lvalue Var 0x128141968 'error' 'int'
    | |-CompoundStmt 0x12814a150 <col:13, line:46:2>
    | | `-CallExpr 0x12814a110 <line:45:3, col:12> 'int'
    | |   |-ImplicitCastExpr 0x12814a0f8 <col:3> 'int (*)()' <FunctionToPointerDecay>
    | |   | `-DeclRefExpr 0x12814a0b8 <col:3> 'int ()' Function 0x12814a000 'fput' 'int ()'
    | |   `-ImplicitCastExpr 0x12814a138 <col:8> 'struct file *' <LValueToRValue>
    | |     `-DeclRefExpr 0x12814a0d8 <col:8> 'struct file *' lvalue ParmVar 0x128140c98 'file' 'struct file *'
    | `-IfStmt 0x12814a850 <line:46:9, line:51:2>
    |   |-RecoveryExpr 0x12814a1c8 <line:46:13, col:37> '_Bool' contains-errors
    |   `-CompoundStmt 0x12814a828 <col:40, line:51:2>
    |     |-DeclStmt 0x12814a470 <line:47:3, col:41>
    |     | `-VarDecl 0x12814a278 <col:3, col:40> col:17 used inode 'struct inode *' cinit
    |     |   `-ImplicitCastExpr 0x12814a458 <col:25, col:40> 'struct inode *' <IntegralToPointer>
    |     |     `-CallExpr 0x12814a418 <col:25, col:40> 'int'
    |     |       |-ImplicitCastExpr 0x12814a400 <col:25> 'int (*)()' <FunctionToPointerDecay>
    |     |       | `-DeclRefExpr 0x12814a3c0 <col:25> 'int ()' Function 0x12814a308 'file_inode' 'int ()'
    |     |       `-ImplicitCastExpr 0x12814a440 <col:36> 'struct file *' <LValueToRValue>
    |     |         `-DeclRefExpr 0x12814a3e0 <col:36> 'struct file *' lvalue ParmVar 0x128140c98 'file' 'struct file *'
    |     |-CallExpr 0x12814a600 <line:48:3, col:27> '<dependent type>' contains-errors
    |     | |-DeclRefExpr 0x12814a568 <col:3> 'int ()' Function 0x12814a4b0 'spin_lock' 'int ()'
    |     | `-UnaryOperator 0x12814a5e8 <col:13, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     |   `-RecoveryExpr 0x12814a5c0 <col:14, col:21> '<dependent type>' contains-errors lvalue
    |     |     `-DeclRefExpr 0x12814a588 <col:14> 'struct inode *' lvalue Var 0x12814a278 'inode' 'struct inode *'
    |     `-CallExpr 0x12814a800 <line:50:3, col:29> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x12814a768 <col:3> 'int ()' Function 0x12814a6b0 'spin_unlock' 'int ()'
    |       `-UnaryOperator 0x12814a7e8 <col:15, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow
    |         `-RecoveryExpr 0x12814a7c0 <col:16, col:23> '<dependent type>' contains-errors lvalue
    |           `-DeclRefExpr 0x12814a788 <col:16> 'struct inode *' lvalue Var 0x12814a278 'inode' 'struct inode *'
    |-LabelStmt 0x12814aa30 <line:52:1, line:53:25> 'out2'
    | `-CallExpr 0x12814aa08 <col:2, col:25> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12814a980 <col:2> 'int ()' Function 0x12814a8c8 'mnt_drop_write' 'int ()'
    |   `-CXXDependentScopeMemberExpr 0x12814a9c0 <col:17, col:22> '<dependent type>' contains-errors lvalue .mnt
    |     `-RecoveryExpr 0x12814a9a0 <col:17> '<dependent type>' contains-errors lvalue
    |-LabelStmt 0x12814abb0 <line:54:1, line:55:16> 'out'
    | `-CallExpr 0x12814ab88 <col:2, col:16> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12814ab30 <col:2> 'int ()' Function 0x12814aa78 'path_put' 'int ()'
    |   `-UnaryOperator 0x12814ab70 <col:11, col:12> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x12814ab50 <col:12> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x12814ac08 <line:56:2, col:9>
      `-ImplicitCastExpr 0x12814abf0 <col:9> 'int' contains-errors <LValueToRValue>
        `-DeclRefExpr 0x12814abd0 <col:9> 'int' contains-errors lvalue Var 0x128141968 'error' 'int'
