`-FunctionDecl 0x11c928318  line:1:1 invalid telnet_print 'int (int *, const char *, int)'
  |-ParmVarDecl 0x11c928128 <col:14, col:34> col:34 invalid ndo 'int *'
  |-ParmVarDecl 0x11c9281a8 <col:39, col:53> col:53 used sp 'const char *'
  |-ParmVarDecl 0x11c928228 <col:57, col:63> col:63 referenced invalid length 'int'
  `-CompoundStmt 0x11d00c6d0 <line:2:1, line:44:1>
    |-DeclStmt 0x11c928478 <line:3:2, col:15>
    | `-VarDecl 0x11c9283f0 <col:2, col:14> col:6 used first 'int' cinit
    |   `-IntegerLiteral 0x11c928458 <col:14> 'int' 1
    |-DeclStmt 0x11c928510 <line:4:2, col:19>
    | `-VarDecl 0x11c9284a8 <col:2, col:16> col:16 used osp 'const char *'
    |-DeclStmt 0x11c9285a8 <line:5:2, col:7>
    | `-VarDecl 0x11c928540 <col:2, col:6> col:6 used l 'int'
    |-BinaryOperator 0x11c928618 <line:7:2, col:8> 'const char *' '='
    | |-DeclRefExpr 0x11c9285c0 <col:2> 'const char *' lvalue Var 0x11c9284a8 'osp' 'const char *'
    | `-ImplicitCastExpr 0x11c928600 <col:8> 'const char *' <LValueToRValue>
    |   `-DeclRefExpr 0x11c9285e0 <col:8> 'const char *' lvalue ParmVar 0x11c9281a8 'sp' 'const char *'
    |-CallExpr 0x11d008248 <line:9:2, col:15> 'int'
    | |-ImplicitCastExpr 0x11d008230 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x11c928790 <col:2> 'int ()' Function 0x11c9286d8 'ND_TCHECK' 'int ()'
    | `-ImplicitCastExpr 0x11d008288 <col:12, col:13> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x11d008270 <col:12, col:13> 'char' <LValueToRValue>
    |     `-UnaryOperator 0x11c9287e8 <col:12, col:13> 'const char' lvalue prefix '*' cannot overflow
    |       `-ImplicitCastExpr 0x11c9287d0 <col:13> 'const char *' <LValueToRValue>
    |         `-DeclRefExpr 0x11c9287b0 <col:13> 'const char *' lvalue ParmVar 0x11c9281a8 'sp' 'const char *'
    |-WhileStmt 0x11d00c1f8 <line:10:2, line:34:2>
    | |-BinaryOperator 0x11d008448 <line:10:9, col:30> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x11d0082e0 <col:9, col:18> 'int' contains-errors '>'
    | | | |-RecoveryExpr 0x11d0082a0 <col:9> '<dependent type>' contains-errors lvalue
    | | | `-IntegerLiteral 0x11d0082c0 <col:18> 'int' 0
    | | `-BinaryOperator 0x11d008428 <col:23, col:30> 'int' contains-errors '=='
    | |   |-UnaryOperator 0x11d0083f0 <col:23, col:24> 'const char' lvalue prefix '*' cannot overflow
    | |   | `-ImplicitCastExpr 0x11d0083d8 <col:24> 'const char *' <LValueToRValue>
    | |   |   `-DeclRefExpr 0x11d008300 <col:24> 'const char *' lvalue ParmVar 0x11c9281a8 'sp' 'const char *'
    | |   `-RecoveryExpr 0x11d008408 <col:30> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x11d00c1a8 <col:35, line:34:2>
    |   |-BinaryOperator 0x11d008648 <line:12:3, col:38> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x11d008468 <col:3> 'int' lvalue Var 0x11c928540 'l' 'int'
    |   | `-CallExpr 0x11d008608 <col:7, col:38> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x11d008568 <col:7> 'int ()' Function 0x11d0084b0 'telnet_parse' 'int ()'
    |   |   |-RecoveryExpr 0x11d008588 <col:20> '<dependent type>' contains-errors lvalue
    |   |   |-DeclRefExpr 0x11d0085a8 <col:25> 'const char *' lvalue ParmVar 0x11c9281a8 'sp' 'const char *'
    |   |   |-RecoveryExpr 0x11d0085c8 <col:29> '<dependent type>' contains-errors lvalue
    |   |   `-IntegerLiteral 0x11d0085e8 <col:37> 'int' 0
    |   |-IfStmt 0x11d0086e8 <line:13:3, line:14:4>
    |   | |-BinaryOperator 0x11d0086c0 <line:13:7, col:11> 'int' '<'
    |   | | |-ImplicitCastExpr 0x11d0086a8 <col:7> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x11d008668 <col:7> 'int' lvalue Var 0x11c928540 'l' 'int'
    |   | | `-IntegerLiteral 0x11d008688 <col:11> 'int' 0
    |   | `-BreakStmt 0x11d0086e0 <line:14:4>
    |   |-IfStmt 0x11d008ff8 <line:17:3, line:26:25> has_else
    |   | |-BinaryOperator 0x11d008818 <line:17:7, col:34> 'int' contains-errors '&&'
    |   | | |-CXXDependentScopeMemberExpr 0x11d008728 <col:7, col:12> '<dependent type>' contains-errors lvalue ->ndo_Xflag
    |   | | | `-RecoveryExpr 0x11d008708 <col:7> '<dependent type>' contains-errors lvalue
    |   | | `-BinaryOperator 0x11d0087f8 <col:25, col:34> 'int' contains-errors '<'
    |   | |   |-IntegerLiteral 0x11d008770 <col:25> 'int' 2
    |   | |   `-CXXDependentScopeMemberExpr 0x11d0087b0 <col:29, col:34> '<dependent type>' contains-errors lvalue ->ndo_vflag
    |   | |     `-RecoveryExpr 0x11d008790 <col:29> '<dependent type>' contains-errors lvalue
    |   | |-CompoundStmt 0x11d008f08 <col:45, line:25:3>
    |   | | |-IfStmt 0x11d008a58 <line:18:4, line:19:26>
    |   | | | |-ImplicitCastExpr 0x11d008858 <line:18:8> 'int' <LValueToRValue>
    |   | | | | `-DeclRefExpr 0x11d008838 <col:8> 'int' lvalue Var 0x11c9283f0 'first' 'int'
    |   | | | `-CallExpr 0x11d008a30 <line:19:5, col:26> '<dependent type>' contains-errors
    |   | | |   |-DeclRefExpr 0x11d008950 <col:5> 'int ()' Function 0x11d008898 'ND_PRINT' 'int ()'
    |   | | |   `-ParenExpr 0x11d008a10 <col:14, col:25> 'char[4]' contains-errors
    |   | | |     `-BinaryOperator 0x11d0089f0 <col:15, col:20> 'char[4]' contains-errors ','
    |   | | |       |-RecoveryExpr 0x11d008970 <col:15> '<dependent type>' contains-errors lvalue
    |   | | |       `-StringLiteral 0x11d0089d0 <col:20> 'char[4]' lvalue "STR"
    |   | | |-CallExpr 0x11d008c88 <line:20:4, col:53> '<dependent type>' contains-errors
    |   | | | |-DeclRefExpr 0x11d008b58 <col:4> 'int ()' Function 0x11d008aa0 'hex_print_with_offset' 'int ()'
    |   | | | |-RecoveryExpr 0x11d008b78 <col:26> '<dependent type>' contains-errors lvalue
    |   | | | |-StringLiteral 0x11d008b98 <col:31> 'char[4]' lvalue "STR"
    |   | | | |-DeclRefExpr 0x11d008bb8 <col:38> 'const char *' lvalue ParmVar 0x11c9281a8 'sp' 'const char *'
    |   | | | |-DeclRefExpr 0x11d008bd8 <col:42> 'int' lvalue Var 0x11c928540 'l' 'int'
    |   | | | `-BinaryOperator 0x11d008c68 <col:45, col:50> 'long' '-'
    |   | | |   |-ImplicitCastExpr 0x11d008c38 <col:45> 'const char *' <LValueToRValue>
    |   | | |   | `-DeclRefExpr 0x11d008bf8 <col:45> 'const char *' lvalue ParmVar 0x11c9281a8 'sp' 'const char *'
    |   | | |   `-ImplicitCastExpr 0x11d008c50 <col:50> 'const char *' <LValueToRValue>
    |   | | |     `-DeclRefExpr 0x11d008c18 <col:50> 'const char *' lvalue Var 0x11c9284a8 'osp' 'const char *'
    |   | | `-IfStmt 0x11d008ed8 <line:21:4, line:24:26> has_else
    |   | |   |-BinaryOperator 0x11d008d28 <line:21:8, col:12> 'int' '>'
    |   | |   | |-ImplicitCastExpr 0x11d008d10 <col:8> 'int' <LValueToRValue>
    |   | |   | | `-DeclRefExpr 0x11d008cd0 <col:8> 'int' lvalue Var 0x11c928540 'l' 'int'
    |   | |   | `-IntegerLiteral 0x11d008cf0 <col:12> 'int' 8
    |   | |   |-CallExpr 0x11d008de8 <line:22:5, col:26> '<dependent type>' contains-errors
    |   | |   | |-DeclRefExpr 0x11d008d48 <col:5> 'int ()' Function 0x11d008898 'ND_PRINT' 'int ()'
    |   | |   | `-ParenExpr 0x11d008dc8 <col:14, col:25> 'char[4]' contains-errors
    |   | |   |   `-BinaryOperator 0x11d008da8 <col:15, col:20> 'char[4]' contains-errors ','
    |   | |   |     |-RecoveryExpr 0x11d008d68 <col:15> '<dependent type>' contains-errors lvalue
    |   | |   |     `-StringLiteral 0x11d008d88 <col:20> 'char[4]' lvalue "STR"
    |   | |   `-CallExpr 0x11d008eb0 <line:24:5, col:26> '<dependent type>' contains-errors
    |   | |     |-DeclRefExpr 0x11d008e10 <col:5> 'int ()' Function 0x11d008898 'ND_PRINT' 'int ()'
    |   | |     `-ParenExpr 0x11d008e90 <col:14, col:25> 'char[4]' contains-errors
    |   | |       `-BinaryOperator 0x11d008e70 <col:15, col:20> 'char[4]' contains-errors ','
    |   | |         |-RecoveryExpr 0x11d008e30 <col:15> '<dependent type>' contains-errors lvalue
    |   | |         `-StringLiteral 0x11d008e50 <col:20> 'char[4]' lvalue "STR"
    |   | `-CallExpr 0x11d008fd0 <line:26:4, col:25> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x11d008f30 <col:4> 'int ()' Function 0x11d008898 'ND_PRINT' 'int ()'
    |   |   `-ParenExpr 0x11d008fb0 <col:13, col:24> 'char[4]' contains-errors
    |   |     `-BinaryOperator 0x11d008f90 <col:14, col:19> 'char[4]' contains-errors ','
    |   |       |-RecoveryExpr 0x11d008f50 <col:14> '<dependent type>' contains-errors lvalue
    |   |       `-StringLiteral 0x11d008f70 <col:19> 'char[4]' lvalue "STR"
    |   |-CStyleCastExpr 0x11d009118 <line:28:3, col:40> 'void' contains-errors <ToVoid>
    |   | `-CallExpr 0x11d0090c8 <col:9, col:40> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x11d009028 <col:9> 'int ()' Function 0x11d0084b0 'telnet_parse' 'int ()'
    |   |   |-RecoveryExpr 0x11d009048 <col:22> '<dependent type>' contains-errors lvalue
    |   |   |-DeclRefExpr 0x11d009068 <col:27> 'const char *' lvalue ParmVar 0x11c9281a8 'sp' 'const char *'
    |   |   |-RecoveryExpr 0x11d009088 <col:31> '<dependent type>' contains-errors lvalue
    |   |   `-IntegerLiteral 0x11d0090a8 <col:39> 'int' 1
    |   |-BinaryOperator 0x11d009180 <line:29:3, col:11> 'int' '='
    |   | |-DeclRefExpr 0x11d009140 <col:3> 'int' lvalue Var 0x11c9283f0 'first' 'int'
    |   | `-IntegerLiteral 0x11d009160 <col:11> 'int' 0
    |   |-CompoundAssignOperator 0x11d00c000 <line:31:3, col:9> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'
    |   | |-DeclRefExpr 0x11d0091a0 <col:3> 'const char *' lvalue ParmVar 0x11c9281a8 'sp' 'const char *'
    |   | `-ImplicitCastExpr 0x11d0091e0 <col:9> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x11d0091c0 <col:9> 'int' lvalue Var 0x11c928540 'l' 'int'
    |   |-CompoundAssignOperator 0x11d00c098 <line:32:3, col:13> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   | |-RecoveryExpr 0x11d00c050 <col:3> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x11d00c030 <col:3> 'int' lvalue ParmVar 0x11c928228 'length' 'int'
    |   | `-DeclRefExpr 0x11d00c078 <col:13> 'int' lvalue Var 0x11c928540 'l' 'int'
    |   `-CallExpr 0x11d00c150 <line:33:3, col:16> 'int'
    |     |-ImplicitCastExpr 0x11d00c138 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x11d00c0c8 <col:3> 'int ()' Function 0x11c9286d8 'ND_TCHECK' 'int ()'
    |     `-ImplicitCastExpr 0x11d00c190 <col:13, col:14> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x11d00c178 <col:13, col:14> 'char' <LValueToRValue>
    |         `-UnaryOperator 0x11d00c120 <col:13, col:14> 'const char' lvalue prefix '*' cannot overflow
    |           `-ImplicitCastExpr 0x11d00c108 <col:14> 'const char *' <LValueToRValue>
    |             `-DeclRefExpr 0x11d00c0e8 <col:14> 'const char *' lvalue ParmVar 0x11c9281a8 'sp' 'const char *'
    |-IfStmt 0x11d00c570 <line:35:2, line:40:2>
    | |-UnaryOperator 0x11d00c250 <line:35:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x11d00c238 <col:7> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x11d00c218 <col:7> 'int' lvalue Var 0x11c9283f0 'first' 'int'
    | `-CompoundStmt 0x11d00c558 <col:14, line:40:2>
    |   `-IfStmt 0x11d00c528 <line:36:3, line:39:25> has_else
    |     |-BinaryOperator 0x11d00c378 <line:36:7, col:34> 'int' contains-errors '&&'
    |     | |-CXXDependentScopeMemberExpr 0x11d00c288 <col:7, col:12> '<dependent type>' contains-errors lvalue ->ndo_Xflag
    |     | | `-RecoveryExpr 0x11d00c268 <col:7> '<dependent type>' contains-errors lvalue
    |     | `-BinaryOperator 0x11d00c358 <col:25, col:34> 'int' contains-errors '<'
    |     |   |-IntegerLiteral 0x11d00c2d0 <col:25> 'int' 2
    |     |   `-CXXDependentScopeMemberExpr 0x11d00c310 <col:29, col:34> '<dependent type>' contains-errors lvalue ->ndo_vflag
    |     |     `-RecoveryExpr 0x11d00c2f0 <col:29> '<dependent type>' contains-errors lvalue
    |     |-CallExpr 0x11d00c438 <line:37:4, col:25> '<dependent type>' contains-errors
    |     | |-DeclRefExpr 0x11d00c398 <col:4> 'int ()' Function 0x11d008898 'ND_PRINT' 'int ()'
    |     | `-ParenExpr 0x11d00c418 <col:13, col:24> 'char[4]' contains-errors
    |     |   `-BinaryOperator 0x11d00c3f8 <col:14, col:19> 'char[4]' contains-errors ','
    |     |     |-RecoveryExpr 0x11d00c3b8 <col:14> '<dependent type>' contains-errors lvalue
    |     |     `-StringLiteral 0x11d00c3d8 <col:19> 'char[4]' lvalue "STR"
    |     `-CallExpr 0x11d00c500 <line:39:4, col:25> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x11d00c460 <col:4> 'int ()' Function 0x11d008898 'ND_PRINT' 'int ()'
    |       `-ParenExpr 0x11d00c4e0 <col:13, col:24> 'char[4]' contains-errors
    |         `-BinaryOperator 0x11d00c4c0 <col:14, col:19> 'char[4]' contains-errors ','
    |           |-RecoveryExpr 0x11d00c480 <col:14> '<dependent type>' contains-errors lvalue
    |           `-StringLiteral 0x11d00c4a0 <col:19> 'char[4]' lvalue "STR"
    |-ReturnStmt 0x11d00c590 <line:41:2>
    `-LabelStmt 0x11d00c6b0 <line:42:1, col:6> 'trunc'
      `-NullStmt 0x11d00c658 <col:6>
