`-FunctionDecl 0x1599281a8  line:1:1 PHP_FUNCTION 'int (int)'
  |-ParmVarDecl 0x1599280d8 <col:14> col:14 used chroot 'int'
  `-CompoundStmt 0x159941468 <line:2:1, line:26:1>
    |-DeclStmt 0x159928320 <line:3:2, col:11>
    | `-VarDecl 0x1599282b8 <col:2, col:8> col:8 used str 'char *'
    |-DeclStmt 0x159928450 <line:4:2, col:18>
    | |-VarDecl 0x159928350 <col:2, col:6> col:6 used ret 'int'
    | `-VarDecl 0x1599283d0 <col:2, col:11> col:11 str_len 'int'
    |-IfStmt 0x159928760 <line:6:2, line:8:2>
    | |-RecoveryExpr 0x159928730 <line:6:6, col:81> '_Bool' contains-errors
    | `-CompoundStmt 0x159928750 <col:90, line:8:2>
    |-BinaryOperator 0x159940e50 <line:10:2, col:18> 'int' contains-errors '='
    | |-DeclRefExpr 0x159928780 <col:2> 'int' lvalue Var 0x159928350 'ret' 'int'
    | `-RecoveryExpr 0x159940e20 <col:8, col:18> '<dependent type>' contains-errors lvalue
    |   |-DeclRefExpr 0x1599287a0 <col:8> 'int' lvalue ParmVar 0x1599280d8 'chroot' 'int'
    |   `-DeclRefExpr 0x1599287c0 <col:15> 'char *' lvalue Var 0x1599282b8 'str' 'char *'
    |-IfStmt 0x159941010 <line:11:2, line:14:2>
    | |-BinaryOperator 0x159940ec8 <line:11:6, col:13> 'int' '!='
    | | |-ImplicitCastExpr 0x159940eb0 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x159940e70 <col:6> 'int' lvalue Var 0x159928350 'ret' 'int'
    | | `-IntegerLiteral 0x159940e90 <col:13> 'int' 0
    | `-CompoundStmt 0x159941000 <col:16, line:14:2>
    |-BinaryOperator 0x159941368 <line:18:2, col:19> 'int' '='
    | |-DeclRefExpr 0x159941188 <col:2> 'int' lvalue Var 0x159928350 'ret' 'int'
    | `-CallExpr 0x159941328 <col:8, col:19> 'int'
    |   |-ImplicitCastExpr 0x159941310 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x159941288 <col:8> 'int ()' Function 0x1599411d0 'chdir' 'int ()'
    |   `-ImplicitCastExpr 0x159941350 <col:14> 'char *' <ArrayToPointerDecay>
    |     `-StringLiteral 0x1599412f0 <col:14> 'char[4]' lvalue "STR"
    `-IfStmt 0x159941448 <line:20:2, line:23:2>
      |-BinaryOperator 0x1599413e0 <line:20:6, col:13> 'int' '!='
      | |-ImplicitCastExpr 0x1599413c8 <col:6> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x159941388 <col:6> 'int' lvalue Var 0x159928350 'ret' 'int'
      | `-IntegerLiteral 0x1599413a8 <col:13> 'int' 0
      `-CompoundStmt 0x159941438 <col:16, line:23:2>
