`-FunctionDecl 0x13b928a58  line:1:1 invalid rb_dlhandle_sym 'int (int, int)'
  |-ParmVarDecl 0x13b9288f0 <col:17, col:23> col:23 invalid self 'int'
  |-ParmVarDecl 0x13b928970 <col:29, col:35> col:35 invalid sym 'int'
  `-CompoundStmt 0x13b943aa8 <line:2:1, line:73:1>
    |-DeclStmt 0x13b928c68 <line:3:5, col:19>
    | `-VarDecl 0x13b928c00 <col:5, col:18> col:12 used func 'void (*)()'
    |-DeclStmt 0x13b928e68 <line:4:5, col:31>
    | |-RecordDecl 0x13b928c80 <col:5, col:12> col:12 struct dl_handle
    | `-VarDecl 0x13b928de8 <col:5, col:23> col:23 used dlhandle 'struct dl_handle *'
    |-DeclStmt 0x13b928f00 <line:5:5, col:17>
    | `-VarDecl 0x13b928e98 <col:5, col:11> col:11 used handle 'void *'
    |-DeclStmt 0x13b928f98 <line:6:5, col:21>
    | `-VarDecl 0x13b928f30 <col:5, col:17> col:17 used name 'const char *'
    |-DeclStmt 0x13b942068 <line:7:5, col:20>
    | `-VarDecl 0x13b942000 <col:5, col:17> col:17 err 'const char *'
    |-DeclStmt 0x13b942100 <line:8:5, col:10>
    | `-VarDecl 0x13b942098 <col:5, col:9> col:9 i 'int'
    |-CallExpr 0x13b9422f8 <line:16:5, col:16> 'int'
    | |-ImplicitCastExpr 0x13b9422e0 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x13b942270 <col:5> 'int ()' Function 0x13b9421b8 'rb_secure' 'int ()'
    | `-IntegerLiteral 0x13b942290 <col:15> 'int' 2
    |-BinaryOperator 0x13b942488 <line:18:5, col:30> 'const char *' contains-errors '='
    | |-DeclRefExpr 0x13b942320 <col:5> 'const char *' lvalue Var 0x13b928f30 'name' 'const char *'
    | `-CallExpr 0x13b942460 <col:12, col:30> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13b942420 <col:12> 'int ()' Function 0x13b942368 'StringValuePtr' 'int ()'
    |   `-RecoveryExpr 0x13b942440 <col:27> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x13b942ca8 <line:21:5, line:23:5>
    | |-UnaryOperator 0x13b942a80 <line:21:9, col:21> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x13b942a68 <col:11, col:21> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x13b942a40 <col:11, col:21> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x13b9425e8 <col:11> 'struct dl_handle *' lvalue Var 0x13b928de8 'dlhandle' 'struct dl_handle *'
    | `-CompoundStmt 0x13b942c90 <col:27, line:23:5>
    |   `-CallExpr 0x13b942c60 <line:22:2, col:29> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x13b942b78 <col:2> 'int ()' Function 0x13b942ac0 'rb_raise' 'int ()'
    |     |-RecoveryExpr 0x13b942c40 <col:11> '<dependent type>' contains-errors lvalue
    |     `-StringLiteral 0x13b942bf0 <col:24> 'char[4]' lvalue "STR"
    |-BinaryOperator 0x13b942d48 <line:24:5, col:24> 'void *' contains-errors '='
    | |-DeclRefExpr 0x13b942cc8 <col:5> 'void *' lvalue Var 0x13b928e98 'handle' 'void *'
    | `-RecoveryExpr 0x13b942d20 <col:14, col:24> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x13b942ce8 <col:14> 'struct dl_handle *' lvalue Var 0x13b928de8 'dlhandle' 'struct dl_handle *'
    |-BinaryOperator 0x13b942f58 <line:26:5, col:30> 'void (*)()' '='
    | |-DeclRefExpr 0x13b942d68 <col:5> 'void (*)()' lvalue Var 0x13b928c00 'func' 'void (*)()'
    | `-ImplicitCastExpr 0x13b942f40 <col:12, col:30> 'void (*)()' <IntegralToPointer>
    |   `-CallExpr 0x13b942ee0 <col:12, col:30> 'int'
    |     |-ImplicitCastExpr 0x13b942ec8 <col:12> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x13b942e68 <col:12> 'int ()' Function 0x13b942db0 'dlsym' 'int ()'
    |     |-ImplicitCastExpr 0x13b942f10 <col:18> 'void *' <LValueToRValue>
    |     | `-DeclRefExpr 0x13b942e88 <col:18> 'void *' lvalue Var 0x13b928e98 'handle' 'void *'
    |     `-ImplicitCastExpr 0x13b942f28 <col:26> 'const char *' <LValueToRValue>
    |       `-DeclRefExpr 0x13b942ea8 <col:26> 'const char *' lvalue Var 0x13b928f30 'name' 'const char *'
    |-NullStmt 0x13b942f78 <line:27:18>
    |-IfStmt 0x13b943900 <line:68:5, line:70:5>
    | |-UnaryOperator 0x13b942fb8 <line:68:9, col:10> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x13b942fa0 <col:10> 'void (*)()' <LValueToRValue>
    | |   `-DeclRefExpr 0x13b942f80 <col:10> 'void (*)()' lvalue Var 0x13b928c00 'func' 'void (*)()'
    | `-CompoundStmt 0x13b9438e8 <col:16, line:70:5>
    |   `-CallExpr 0x13b9438b0 <line:69:2, col:35> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x13b942fd0 <col:2> 'int ()' Function 0x13b942ac0 'rb_raise' 'int ()'
    |     |-RecoveryExpr 0x13b943890 <col:11> '<dependent type>' contains-errors lvalue
    |     |-StringLiteral 0x13b943818 <col:24> 'char[4]' lvalue "STR"
    |     `-DeclRefExpr 0x13b943838 <col:31> 'const char *' lvalue Var 0x13b928f30 'name' 'const char *'
    `-ReturnStmt 0x13b943a98 <line:72:5, col:24>
      `-CallExpr 0x13b943a58 <col:12, col:24> 'int'
        |-ImplicitCastExpr 0x13b943a40 <col:12> 'int (*)()' <FunctionToPointerDecay>
        | `-DeclRefExpr 0x13b943a00 <col:12> 'int ()' Function 0x13b943948 'PTR2NUM' 'int ()'
        `-ImplicitCastExpr 0x13b943a80 <col:20> 'void (*)()' <LValueToRValue>
          `-DeclRefExpr 0x13b943a20 <col:20> 'void (*)()' lvalue Var 0x13b928c00 'func' 'void (*)()'
