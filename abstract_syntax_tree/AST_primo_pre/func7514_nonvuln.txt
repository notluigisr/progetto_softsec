`-FunctionDecl 0x14a00de88  line:1:12 invalid codeCursorHintIsOrFunction 'int (int *, int *)' static
  |-ParmVarDecl 0x14a00dd28 <col:39, col:47> col:47 referenced invalid pWalker 'int *'
  |-ParmVarDecl 0x14a00dda8 <col:56, col:62> col:62 invalid pExpr 'int *'
  `-CompoundStmt 0x14a027d10 <col:68, line:16:1>
    |-IfStmt 0x14a027c98 <line:2:3, line:13:3> has_else
    | |-BinaryOperator 0x14a027480 <line:2:7, line:4:43> 'int' contains-errors '||'
    | | |-BinaryOperator 0x14a027420 <line:2:7, line:4:18> 'int' contains-errors '||'
    | | | |-BinaryOperator 0x14a00e3c0 <line:2:7, line:3:42> 'int' contains-errors '||'
    | | | | |-BinaryOperator 0x14a00e360 <line:2:7, line:3:18> 'int' contains-errors '||'
    | | | | | |-BinaryOperator 0x14a00e300 <line:2:7, col:18> 'int' contains-errors '=='
    | | | | | | |-CXXDependentScopeMemberExpr 0x14a00df60 <col:7, col:14> '<dependent type>' contains-errors lvalue ->op
    | | | | | | | `-RecoveryExpr 0x14a00df40 <col:7> '<dependent type>' contains-errors lvalue
    | | | | | | `-RecoveryExpr 0x14a00e2e0 <col:18> '<dependent type>' contains-errors lvalue
    | | | | | `-BinaryOperator 0x14a00e340 <line:3:7, col:18> 'int' contains-errors '=='
    | | | | |   |-CXXDependentScopeMemberExpr 0x14a00e000 <col:7, col:14> '<dependent type>' contains-errors lvalue ->op
    | | | | |   | `-RecoveryExpr 0x14a00dfe0 <col:7> '<dependent type>' contains-errors lvalue
    | | | | |   `-RecoveryExpr 0x14a00e320 <col:18> '<dependent type>' contains-errors lvalue
    | | | | `-BinaryOperator 0x14a00e3a0 <col:31, col:42> 'int' contains-errors '=='
    | | | |   |-CXXDependentScopeMemberExpr 0x14a00e0c0 <col:31, col:38> '<dependent type>' contains-errors lvalue ->op
    | | | |   | `-RecoveryExpr 0x14a00e0a0 <col:31> '<dependent type>' contains-errors lvalue
    | | | |   `-RecoveryExpr 0x14a00e380 <col:42> '<dependent type>' contains-errors lvalue
    | | | `-BinaryOperator 0x14a027400 <line:4:7, col:18> 'int' contains-errors '=='
    | | |   |-CXXDependentScopeMemberExpr 0x14a00e180 <col:7, col:14> '<dependent type>' contains-errors lvalue ->op
    | | |   | `-RecoveryExpr 0x14a00e160 <col:7> '<dependent type>' contains-errors lvalue
    | | |   `-RecoveryExpr 0x14a00e3e0 <col:18> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x14a027460 <col:32, col:43> 'int' contains-errors '=='
    | |   |-CXXDependentScopeMemberExpr 0x14a00e240 <col:32, col:39> '<dependent type>' contains-errors lvalue ->op
    | |   | `-RecoveryExpr 0x14a00e220 <col:32> '<dependent type>' contains-errors lvalue
    | |   `-RecoveryExpr 0x14a027440 <col:43> '<dependent type>' contains-errors lvalue
    | |-CompoundStmt 0x14a027570 <line:5:4, line:7:3>
    | | `-BinaryOperator 0x14a027550 <line:6:5, col:22> '<dependent type>' contains-errors '='
    | |   |-CXXDependentScopeMemberExpr 0x14a0274e8 <col:5, col:14> '<dependent type>' contains-errors lvalue ->eCode
    | |   | `-RecoveryExpr 0x14a0274c0 <col:5> '<dependent type>' contains-errors lvalue
    | |   |   `-DeclRefExpr 0x14a0274a0 <col:5> 'int *' lvalue ParmVar 0x14a00dd28 'pWalker' 'int *'
    | |   `-IntegerLiteral 0x14a027530 <col:22> 'int' 1
    | `-IfStmt 0x14a027c78 <line:7:9, line:13:3>
    |   |-BinaryOperator 0x14a027648 <line:7:13, col:24> 'int' contains-errors '=='
    |   | |-CXXDependentScopeMemberExpr 0x14a0275a8 <col:13, col:20> '<dependent type>' contains-errors lvalue ->op
    |   | | `-RecoveryExpr 0x14a027588 <col:13> '<dependent type>' contains-errors lvalue
    |   | `-RecoveryExpr 0x14a027628 <col:24> '<dependent type>' contains-errors lvalue
    |   `-CompoundStmt 0x14a027c50 <col:37, line:13:3>
    |     |-DeclStmt 0x14a0276e8 <line:8:5, col:11>
    |     | `-VarDecl 0x14a027680 <col:5, col:9> col:9 used d1 'int'
    |     |-DeclStmt 0x14a027808 <line:9:5, col:15>
    |     | `-VarDecl 0x14a0277a0 <col:5, col:14> col:10 used d2 'char[4]'
    |     `-IfStmt 0x14a027c30 <line:10:5, line:12:5>
    |       |-BinaryOperator 0x14a027b28 <line:10:9, col:69> 'int' contains-errors '=='
    |       | |-IntegerLiteral 0x14a027820 <col:9> 'int' 0
    |       | `-CallExpr 0x14a027ae8 <col:12, col:69> '<dependent type>' contains-errors
    |       |   |-DeclRefExpr 0x14a0279a0 <col:12> 'int ()' Function 0x14a0278e8 'sqlite3IsLikeFunction' 'int ()'
    |       |   |-CXXDependentScopeMemberExpr 0x14a027a28 <col:34, col:51> '<dependent type>' contains-errors lvalue ->db
    |       |   | `-CXXDependentScopeMemberExpr 0x14a0279e0 <col:34, col:43> '<dependent type>' contains-errors lvalue ->pParse
    |       |   |   `-RecoveryExpr 0x14a0279c0 <col:34> '<dependent type>' contains-errors lvalue
    |       |   |-RecoveryExpr 0x14a027a70 <col:55> '<dependent type>' contains-errors lvalue
    |       |   |-UnaryOperator 0x14a027ab0 <col:62, col:63> 'int *' prefix '&' cannot overflow
    |       |   | `-DeclRefExpr 0x14a027a90 <col:63> 'int' lvalue Var 0x14a027680 'd1' 'int'
    |       |   `-DeclRefExpr 0x14a027ac8 <col:67> 'char[4]' lvalue Var 0x14a0277a0 'd2' 'char[4]'
    |       `-CompoundStmt 0x14a027c18 <col:72, line:12:5>
    |         `-BinaryOperator 0x14a027bf8 <line:11:7, col:24> '<dependent type>' contains-errors '='
    |           |-CXXDependentScopeMemberExpr 0x14a027b90 <col:7, col:16> '<dependent type>' contains-errors lvalue ->eCode
    |           | `-RecoveryExpr 0x14a027b68 <col:7> '<dependent type>' contains-errors lvalue
    |           |   `-DeclRefExpr 0x14a027b48 <col:7> 'int *' lvalue ParmVar 0x14a00dd28 'pWalker' 'int *'
    |           `-IntegerLiteral 0x14a027bd8 <col:24> 'int' 1
    `-ReturnStmt 0x14a027d00 <line:15:3, col:10>
      `-RecoveryExpr 0x14a027ce0 <col:10> '<dependent type>' contains-errors lvalue
