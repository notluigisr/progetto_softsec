`-FunctionDecl 0x11d9410d8  line:1:22 invalid dcn20_clock_source_create 'struct clock_source *(struct dc_context *, struct dc_bios *, enum clock_source_id, const struct dce110_clk_src_regs *, int)'
  |-ParmVarDecl 0x11d9286e8 <line:2:2, col:21> col:21 used ctx 'struct dc_context *'
  |-ParmVarDecl 0x11d940ac8 <line:3:2, col:18> col:18 used bios 'struct dc_bios *'
  |-ParmVarDecl 0x11d940c48 <line:4:2, col:23> col:23 invalid id 'enum clock_source_id'
  |-ParmVarDecl 0x11d940e18 <line:5:2, col:36> col:36 used regs 'const struct dce110_clk_src_regs *'
  |-ParmVarDecl 0x11d940eb0 <line:6:2, col:7> col:7 invalid dp_clk_src 'int'
  `-CompoundStmt 0x11d944100 <line:7:1, line:22:1>
    |-DeclStmt 0x11d941580 <line:8:2, line:9:53>
    | |-RecordDecl 0x11d9411a8 <line:8:2, col:9> col:9 struct dce110_clk_src
    | `-VarDecl 0x11d941318 <col:2, col:25> col:25 used clk_src 'struct dce110_clk_src *'
    |-IfStmt 0x11d941630 <line:11:2, line:12:10>
    | |-UnaryOperator 0x11d9415d0 <line:11:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x11d9415b8 <col:7> 'struct dce110_clk_src *' <LValueToRValue>
    | |   `-DeclRefExpr 0x11d941598 <col:7> 'struct dce110_clk_src *' lvalue Var 0x11d941318 'clk_src' 'struct dce110_clk_src *'
    | `-ReturnStmt 0x11d941620 <line:12:3, col:10>
    |   `-RecoveryExpr 0x11d941600 <col:10> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x11d943f30 <line:14:2, line:18:2>
    | |-CallExpr 0x11d941918 <line:14:6, line:15:29> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x11d941730 <line:14:6> 'int ()' Function 0x11d941678 'dcn20_clk_src_construct' 'int ()'
    | | |-DeclRefExpr 0x11d941750 <col:30> 'struct dce110_clk_src *' lvalue Var 0x11d941318 'clk_src' 'struct dce110_clk_src *'
    | | |-DeclRefExpr 0x11d941770 <col:39> 'struct dc_context *' lvalue ParmVar 0x11d9286e8 'ctx' 'struct dc_context *'
    | | |-DeclRefExpr 0x11d941790 <col:44> 'struct dc_bios *' lvalue ParmVar 0x11d940ac8 'bios' 'struct dc_bios *'
    | | |-RecoveryExpr 0x11d9417b0 <col:50> '<dependent type>' contains-errors lvalue
    | | |-DeclRefExpr 0x11d9417d0 <line:15:4> 'const struct dce110_clk_src_regs *' lvalue ParmVar 0x11d940e18 'regs' 'const struct dce110_clk_src_regs *'
    | | |-UnaryOperator 0x11d9418c8 <col:10, col:11> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | | `-RecoveryExpr 0x11d9418a8 <col:11> '<dependent type>' contains-errors lvalue
    | | `-UnaryOperator 0x11d941900 <col:21, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |   `-RecoveryExpr 0x11d9418e0 <col:22> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x11d943f10 <col:32, line:18:2>
    |   |-BinaryOperator 0x11d943e68 <line:16:3, col:30> '<dependent type>' contains-errors '='
    |   | |-CXXDependentScopeMemberExpr 0x11d943e00 <col:3, col:17> '<dependent type>' contains-errors lvalue .dp_clk_src
    |   | | `-RecoveryExpr 0x11d9419a8 <col:3, col:12> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x11d941970 <col:3> 'struct dce110_clk_src *' lvalue Var 0x11d941318 'clk_src' 'struct dce110_clk_src *'
    |   | `-RecoveryExpr 0x11d943e48 <col:30> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x11d943f00 <line:17:3, col:20>
    |     `-UnaryOperator 0x11d943ee8 <col:10, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow
    |       `-RecoveryExpr 0x11d943ec0 <col:11, col:20> '<dependent type>' contains-errors lvalue
    |         `-DeclRefExpr 0x11d943e88 <col:11> 'struct dce110_clk_src *' lvalue Var 0x11d941318 'clk_src' 'struct dce110_clk_src *'
    |-CallExpr 0x11d944098 <line:20:2, col:20> 'int'
    | `-ImplicitCastExpr 0x11d944080 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x11d944030 <col:2> 'int ()' Function 0x11d943f78 'BREAK_TO_DEBUGGER' 'int ()'
    `-ReturnStmt 0x11d9440f0 <line:21:2, col:9>
      `-RecoveryExpr 0x11d9440d0 <col:9> '<dependent type>' contains-errors lvalue
