`-FunctionDecl 0x13602a800  line:1:12 fuse_permission 'int (struct inode *, int)' static
  |-ParmVarDecl 0x13600e248 <col:28, col:42> col:42 used inode 'struct inode *'
  |-ParmVarDecl 0x13600e2c8 <col:49, col:53> col:53 used mask 'int'
  `-CompoundStmt 0x13602ed40 <line:2:1, line:50:1>
    |-DeclStmt 0x13602acf8 <line:3:2, col:45>
    | |-RecordDecl 0x13602a900 <col:2, col:9> col:9 struct fuse_conn
    | `-VarDecl 0x13602aa68 <col:2, col:44> col:20 used fc 'struct fuse_conn *' cinit
    |   `-ImplicitCastExpr 0x13602acc8 <col:25, col:44> 'struct fuse_conn *' <IntegralToPointer>
    |     `-CallExpr 0x13602ac88 <col:25, col:44> 'int'
    |       |-ImplicitCastExpr 0x13602ac70 <col:25> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x13602ac00 <col:25> 'int ()' Function 0x13602ab48 'get_fuse_conn' 'int ()'
    |       `-ImplicitCastExpr 0x13602acb0 <col:39> 'struct inode *' <LValueToRValue>
    |         `-DeclRefExpr 0x13602ac20 <col:39> 'struct inode *' lvalue ParmVar 0x13600e248 'inode' 'struct inode *'
    |-DeclStmt 0x13602adb0 <line:5:2, col:13>
    | `-VarDecl 0x13602ad28 <col:2, col:12> col:6 used err 'int' cinit
    |   `-IntegerLiteral 0x13602ad90 <col:12> 'int' 0
    |-IfStmt 0x13602b000 <line:7:2, line:8:11>
    | |-UnaryOperator 0x13602af40 <line:7:6, col:36> 'int' prefix '!' cannot overflow
    | | `-CallExpr 0x13602af00 <col:7, col:36> 'int'
    | |   |-ImplicitCastExpr 0x13602aee8 <col:7> 'int (*)()' <FunctionToPointerDecay>
    | |   | `-DeclRefExpr 0x13602aea8 <col:7> 'int ()' Function 0x13602adf0 'fuse_allow_current_process' 'int ()'
    | |   `-ImplicitCastExpr 0x13602af28 <col:34> 'struct fuse_conn *' <LValueToRValue>
    | |     `-DeclRefExpr 0x13602aec8 <col:34> 'struct fuse_conn *' lvalue Var 0x13602aa68 'fc' 'struct fuse_conn *'
    | `-ReturnStmt 0x13602aff0 <line:8:3, col:11>
    |   `-UnaryOperator 0x13602afd8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x13602afc0 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x13602afa0 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x13602e098 <line:11:2, line:24:2>
    | |-RecoveryExpr 0x13602b260 <line:11:6, line:12:50> '_Bool' contains-errors
    | `-CompoundStmt 0x13602e078 <col:53, line:24:2>
    |   |-DeclStmt 0x13602b5f8 <line:13:3, col:48>
    |   | |-RecordDecl 0x13602b280 <col:3, col:10> col:10 struct fuse_inode
    |   | `-VarDecl 0x13602b3e8 <col:3, col:47> col:22 used fi 'struct fuse_inode *' cinit
    |   |   `-ImplicitCastExpr 0x13602b5c8 <col:27, col:47> 'struct fuse_inode *' <IntegralToPointer>
    |   |     `-CallExpr 0x13602b588 <col:27, col:47> 'int'
    |   |       |-ImplicitCastExpr 0x13602b570 <col:27> 'int (*)()' <FunctionToPointerDecay>
    |   |       | `-DeclRefExpr 0x13602b530 <col:27> 'int ()' Function 0x13602b478 'get_fuse_inode' 'int ()'
    |   |       `-ImplicitCastExpr 0x13602b5b0 <col:42> 'struct inode *' <LValueToRValue>
    |   |         `-DeclRefExpr 0x13602b550 <col:42> 'struct inode *' lvalue ParmVar 0x13600e248 'inode' 'struct inode *'
    |   `-IfStmt 0x13602e058 <line:16:3, line:23:3>
    |     |-BinaryOperator 0x13602dd68 <line:16:7, line:17:49> 'int' contains-errors '||'
    |     | |-BinaryOperator 0x13602dce0 <line:16:7, col:43> '<dependent type>' contains-errors '&'
    |     | | |-RecoveryExpr 0x13602dcc0 <col:7> '<dependent type>' contains-errors lvalue
    |     | | `-CallExpr 0x13602b788 <col:19, col:43> '<dependent type>' contains-errors
    |     | |   |-DeclRefExpr 0x13602b708 <col:19> 'int ()' Function 0x13602b650 'READ_ONCE' 'int ()'
    |     | |   `-RecoveryExpr 0x13602b760 <col:29, col:33> '<dependent type>' contains-errors lvalue
    |     | |     `-DeclRefExpr 0x13602b728 <col:29> 'struct fuse_inode *' lvalue Var 0x13602b3e8 'fi' 'struct fuse_inode *'
    |     | `-CallExpr 0x13602dd38 <line:17:7, col:49> '<dependent type>' contains-errors
    |     |   |-DeclRefExpr 0x13602dab8 <col:7> 'int ()' Function 0x13602da00 'time_before64' 'int ()'
    |     |   |-RecoveryExpr 0x13602db10 <col:21, col:25> '<dependent type>' contains-errors lvalue
    |     |   | `-DeclRefExpr 0x13602dad8 <col:21> 'struct fuse_inode *' lvalue Var 0x13602b3e8 'fi' 'struct fuse_inode *'
    |     |   `-CallExpr 0x13602dd18 <col:33, col:48> 'int'
    |     |     `-ImplicitCastExpr 0x13602dd00 <col:33> 'int (*)()' <FunctionToPointerDecay>
    |     |       `-DeclRefExpr 0x13602dc18 <col:33> 'int ()' Function 0x13602db60 'get_jiffies_64' 'int ()'
    |     `-CompoundStmt 0x13602e038 <col:52, line:23:3>
    |       |-BinaryOperator 0x13602df78 <line:20:4, col:39> 'int' '='
    |       | |-DeclRefExpr 0x13602dda0 <col:4> 'int' lvalue Var 0x13602ad28 'err' 'int'
    |       | `-CallExpr 0x13602df18 <col:10, col:39> 'int'
    |       |   |-ImplicitCastExpr 0x13602df00 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |       |   | `-DeclRefExpr 0x13602dea0 <col:10> 'int ()' Function 0x13602dde8 'fuse_perm_getattr' 'int ()'
    |       |   |-ImplicitCastExpr 0x13602df48 <col:28> 'struct inode *' <LValueToRValue>
    |       |   | `-DeclRefExpr 0x13602dec0 <col:28> 'struct inode *' lvalue ParmVar 0x13600e248 'inode' 'struct inode *'
    |       |   `-ImplicitCastExpr 0x13602df60 <col:35> 'int' <LValueToRValue>
    |       |     `-DeclRefExpr 0x13602dee0 <col:35> 'int' lvalue ParmVar 0x13600e2c8 'mask' 'int'
    |       `-IfStmt 0x13602e018 <line:21:4, line:22:12>
    |         |-ImplicitCastExpr 0x13602dfb8 <line:21:8> 'int' <LValueToRValue>
    |         | `-DeclRefExpr 0x13602df98 <col:8> 'int' lvalue Var 0x13602ad28 'err' 'int'
    |         `-ReturnStmt 0x13602e008 <line:22:5, col:12>
    |           `-ImplicitCastExpr 0x13602dff0 <col:12> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x13602dfd0 <col:12> 'int' lvalue Var 0x13602ad28 'err' 'int'
    |-IfStmt 0x13602ecc8 <line:26:2, line:48:2> has_else
    | |-RecoveryExpr 0x13602e0f0 <line:26:6, col:10> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x13602e0b8 <col:6> 'struct fuse_conn *' lvalue Var 0x13602aa68 'fc' 'struct fuse_conn *'
    | |-CompoundStmt 0x13602e630 <col:31, line:37:2>
    | | |-BinaryOperator 0x13602e2f0 <line:27:3, col:39> 'int' '='
    | | | |-DeclRefExpr 0x13602e118 <col:3> 'int' lvalue Var 0x13602ad28 'err' 'int'
    | | | `-CallExpr 0x13602e290 <col:9, col:39> 'int'
    | | |   |-ImplicitCastExpr 0x13602e278 <col:9> 'int (*)()' <FunctionToPointerDecay>
    | | |   | `-DeclRefExpr 0x13602e218 <col:9> 'int ()' Function 0x13602e160 'generic_permission' 'int ()'
    | | |   |-ImplicitCastExpr 0x13602e2c0 <col:28> 'struct inode *' <LValueToRValue>
    | | |   | `-DeclRefExpr 0x13602e238 <col:28> 'struct inode *' lvalue ParmVar 0x13600e248 'inode' 'struct inode *'
    | | |   `-ImplicitCastExpr 0x13602e2d8 <col:35> 'int' <LValueToRValue>
    | | |     `-DeclRefExpr 0x13602e258 <col:35> 'int' lvalue ParmVar 0x13600e2c8 'mask' 'int'
    | | `-IfStmt 0x13602e610 <line:30:3, line:34:3>
    | |   |-RecoveryExpr 0x13602e330 <line:30:7, col:26> '_Bool' contains-errors
    | |   `-CompoundStmt 0x13602e5f0 <col:37, line:34:3>
    | |     |-BinaryOperator 0x13602e448 <line:31:4, col:39> 'int' '='
    | |     | |-DeclRefExpr 0x13602e350 <col:4> 'int' lvalue Var 0x13602ad28 'err' 'int'
    | |     | `-CallExpr 0x13602e3e8 <col:10, col:39> 'int'
    | |     |   |-ImplicitCastExpr 0x13602e3d0 <col:10> 'int (*)()' <FunctionToPointerDecay>
    | |     |   | `-DeclRefExpr 0x13602e370 <col:10> 'int ()' Function 0x13602dde8 'fuse_perm_getattr' 'int ()'
    | |     |   |-ImplicitCastExpr 0x13602e418 <col:28> 'struct inode *' <LValueToRValue>
    | |     |   | `-DeclRefExpr 0x13602e390 <col:28> 'struct inode *' lvalue ParmVar 0x13600e248 'inode' 'struct inode *'
    | |     |   `-ImplicitCastExpr 0x13602e430 <col:35> 'int' <LValueToRValue>
    | |     |     `-DeclRefExpr 0x13602e3b0 <col:35> 'int' lvalue ParmVar 0x13600e2c8 'mask' 'int'
    | |     `-IfStmt 0x13602e5d0 <line:32:4, line:33:41>
    | |       |-UnaryOperator 0x13602e4a0 <line:32:8, col:9> 'int' prefix '!' cannot overflow
    | |       | `-ImplicitCastExpr 0x13602e488 <col:9> 'int' <LValueToRValue>
    | |       |   `-DeclRefExpr 0x13602e468 <col:9> 'int' lvalue Var 0x13602ad28 'err' 'int'
    | |       `-BinaryOperator 0x13602e5b0 <line:33:5, col:41> 'int' '='
    | |         |-DeclRefExpr 0x13602e4b8 <col:5> 'int' lvalue Var 0x13602ad28 'err' 'int'
    | |         `-CallExpr 0x13602e550 <col:11, col:41> 'int'
    | |           |-ImplicitCastExpr 0x13602e538 <col:11> 'int (*)()' <FunctionToPointerDecay>
    | |           | `-DeclRefExpr 0x13602e4d8 <col:11> 'int ()' Function 0x13602e160 'generic_permission' 'int ()'
    | |           |-ImplicitCastExpr 0x13602e580 <col:30> 'struct inode *' <LValueToRValue>
    | |           | `-DeclRefExpr 0x13602e4f8 <col:30> 'struct inode *' lvalue ParmVar 0x13600e248 'inode' 'struct inode *'
    | |           `-ImplicitCastExpr 0x13602e598 <col:37> 'int' <LValueToRValue>
    | |             `-DeclRefExpr 0x13602e518 <col:37> 'int' lvalue ParmVar 0x13600e2c8 'mask' 'int'
    | `-IfStmt 0x13602ec98 <line:37:9, line:48:2> has_else
    |   |-RecoveryExpr 0x13602e670 <line:37:13, col:43> '_Bool' contains-errors
    |   |-CompoundStmt 0x13602e888 <col:46, line:39:2>
    |   | `-BinaryOperator 0x13602e868 <line:38:3, col:32> 'int' '='
    |   |   |-DeclRefExpr 0x13602e690 <col:3> 'int' lvalue Var 0x13602ad28 'err' 'int'
    |   |   `-CallExpr 0x13602e808 <col:9, col:32> 'int'
    |   |     |-ImplicitCastExpr 0x13602e7f0 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   |     | `-DeclRefExpr 0x13602e790 <col:9> 'int ()' Function 0x13602e6d8 'fuse_access' 'int ()'
    |   |     |-ImplicitCastExpr 0x13602e838 <col:21> 'struct inode *' <LValueToRValue>
    |   |     | `-DeclRefExpr 0x13602e7b0 <col:21> 'struct inode *' lvalue ParmVar 0x13600e248 'inode' 'struct inode *'
    |   |     `-ImplicitCastExpr 0x13602e850 <col:28> 'int' <LValueToRValue>
    |   |       `-DeclRefExpr 0x13602e7d0 <col:28> 'int' lvalue ParmVar 0x13600e2c8 'mask' 'int'
    |   `-IfStmt 0x13602ec78 <line:39:9, line:48:2>
    |     |-RecoveryExpr 0x13602e968 <line:39:13, col:55> '_Bool' contains-errors
    |     `-CompoundStmt 0x13602ec60 <col:58, line:48:2>
    |       `-IfStmt 0x13602ec40 <line:40:3, line:47:3>
    |         |-RecoveryExpr 0x13602ea00 <line:40:7, col:32> '_Bool' contains-errors
    |         `-CompoundStmt 0x13602ec28 <col:35, line:47:3>
    |           `-BinaryOperator 0x13602eb38 <line:44:4, col:39> 'int' '='
    |             |-DeclRefExpr 0x13602ea40 <col:4> 'int' lvalue Var 0x13602ad28 'err' 'int'
    |             `-CallExpr 0x13602ead8 <col:10, col:39> 'int'
    |               |-ImplicitCastExpr 0x13602eac0 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |               | `-DeclRefExpr 0x13602ea60 <col:10> 'int ()' Function 0x13602dde8 'fuse_perm_getattr' 'int ()'
    |               |-ImplicitCastExpr 0x13602eb08 <col:28> 'struct inode *' <LValueToRValue>
    |               | `-DeclRefExpr 0x13602ea80 <col:28> 'struct inode *' lvalue ParmVar 0x13600e248 'inode' 'struct inode *'
    |               `-ImplicitCastExpr 0x13602eb20 <col:35> 'int' <LValueToRValue>
    |                 `-DeclRefExpr 0x13602eaa0 <col:35> 'int' lvalue ParmVar 0x13600e2c8 'mask' 'int'
    `-ReturnStmt 0x13602ed30 <line:49:2, col:9>
      `-ImplicitCastExpr 0x13602ed18 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x13602ecf8 <col:9> 'int' lvalue Var 0x13602ad28 'err' 'int'
