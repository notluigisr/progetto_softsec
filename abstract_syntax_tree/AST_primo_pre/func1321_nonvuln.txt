`-FunctionDecl 0x123026938  line:1:12 mem_cgroup_can_attach 'int (struct cgroup_subsys *, struct cgroup *, struct cgroup_taskset *)' static
  |-ParmVarDecl 0x12300e248 <col:34, col:56> col:56 ss 'struct cgroup_subsys *'
  |-ParmVarDecl 0x123026628 <line:2:5, col:20> col:20 used cgroup 'struct cgroup *'
  |-ParmVarDecl 0x1230267f8 <line:3:5, col:28> col:28 used tset 'struct cgroup_taskset *'
  `-CompoundStmt 0x12302d7b0 <line:4:1, line:39:1>
    |-DeclStmt 0x123026e38 <line:5:2, col:52>
    | |-RecordDecl 0x123026a40 <col:2, col:9> col:9 struct task_struct
    | `-VarDecl 0x123026ba8 <col:2, col:51> col:22 used p 'struct task_struct *' cinit
    |   `-ImplicitCastExpr 0x123026e08 <col:26, col:51> 'struct task_struct *' <IntegralToPointer>
    |     `-CallExpr 0x123026dc8 <col:26, col:51> 'int'
    |       |-ImplicitCastExpr 0x123026db0 <col:26> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x123026d40 <col:26> 'int ()' Function 0x123026c88 'cgroup_taskset_first' 'int ()'
    |       `-ImplicitCastExpr 0x123026df0 <col:47> 'struct cgroup_taskset *' <LValueToRValue>
    |         `-DeclRefExpr 0x123026d60 <col:47> 'struct cgroup_taskset *' lvalue ParmVar 0x1230267f8 'tset' 'struct cgroup_taskset *'
    |-DeclStmt 0x123026ef0 <line:6:2, col:13>
    | `-VarDecl 0x123026e68 <col:2, col:12> col:6 used ret 'int' cinit
    |   `-IntegerLiteral 0x123026ed0 <col:12> 'int' 0
    |-DeclStmt 0x123027288 <line:7:2, col:57>
    | |-RecordDecl 0x123026f08 <col:2, col:9> col:9 struct mem_cgroup
    | `-VarDecl 0x123027078 <col:2, col:56> col:21 used memcg 'struct mem_cgroup *' cinit
    |   `-ImplicitCastExpr 0x123027258 <col:29, col:56> 'struct mem_cgroup *' <IntegralToPointer>
    |     `-CallExpr 0x123027218 <col:29, col:56> 'int'
    |       |-ImplicitCastExpr 0x123027200 <col:29> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x1230271c0 <col:29> 'int ()' Function 0x123027108 'mem_cgroup_from_cont' 'int ()'
    |       `-ImplicitCastExpr 0x123027240 <col:50> 'struct cgroup *' <LValueToRValue>
    |         `-DeclRefExpr 0x1230271e0 <col:50> 'struct cgroup *' lvalue ParmVar 0x123026628 'cgroup' 'struct cgroup *'
    |-IfStmt 0x12302d748 <line:9:2, line:37:2>
    | |-RecoveryExpr 0x1230272d8 <line:9:6, col:13> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x1230272a0 <col:6> 'struct mem_cgroup *' lvalue Var 0x123027078 'memcg' 'struct mem_cgroup *'
    | `-CompoundStmt 0x12302d700 <col:39, line:37:2>
    |   |-DeclStmt 0x1230274e8 <line:10:3, col:23>
    |   | |-RecordDecl 0x123027300 <col:3, col:10> col:10 struct mm_struct
    |   | `-VarDecl 0x123027468 <col:3, col:21> col:21 used mm 'struct mm_struct *'
    |   |-DeclStmt 0x124008990 <line:11:3, col:52>
    |   | `-VarDecl 0x123027588 <col:3, col:51> col:22 used from 'struct mem_cgroup *' cinit
    |   |   `-ImplicitCastExpr 0x124008978 <col:29, col:51> 'struct mem_cgroup *' <IntegralToPointer>
    |   |     `-CallExpr 0x124008938 <col:29, col:51> 'int'
    |   |       |-ImplicitCastExpr 0x124008920 <col:29> 'int (*)()' <FunctionToPointerDecay>
    |   |       | `-DeclRefExpr 0x1240088e0 <col:29> 'int ()' Function 0x124008828 'mem_cgroup_from_task' 'int ()'
    |   |       `-ImplicitCastExpr 0x124008960 <col:50> 'struct task_struct *' <LValueToRValue>
    |   |         `-DeclRefExpr 0x124008900 <col:50> 'struct task_struct *' lvalue Var 0x123026ba8 'p' 'struct task_struct *'
    |   |-CallExpr 0x124008b50 <line:13:3, col:26> 'int'
    |   | |-ImplicitCastExpr 0x124008b38 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x124008a88 <col:3> 'int ()' Function 0x1240089d0 'VM_BUG_ON' 'int ()'
    |   | `-BinaryOperator 0x124008b18 <col:13, col:21> 'int' '=='
    |   |   |-ImplicitCastExpr 0x124008ae8 <col:13> 'struct mem_cgroup *' <LValueToRValue>
    |   |   | `-DeclRefExpr 0x124008aa8 <col:13> 'struct mem_cgroup *' lvalue Var 0x123027588 'from' 'struct mem_cgroup *'
    |   |   `-ImplicitCastExpr 0x124008b00 <col:21> 'struct mem_cgroup *' <LValueToRValue>
    |   |     `-DeclRefExpr 0x124008ac8 <col:21> 'struct mem_cgroup *' lvalue Var 0x123027078 'memcg' 'struct mem_cgroup *'
    |   |-BinaryOperator 0x124008d28 <line:15:3, col:21> 'struct mm_struct *' '='
    |   | |-DeclRefExpr 0x124008b78 <col:3> 'struct mm_struct *' lvalue Var 0x123027468 'mm' 'struct mm_struct *'
    |   | `-ImplicitCastExpr 0x124008d10 <col:8, col:21> 'struct mm_struct *' <IntegralToPointer>
    |   |   `-CallExpr 0x124008cd0 <col:8, col:21> 'int'
    |   |     |-ImplicitCastExpr 0x124008cb8 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |   |     | `-DeclRefExpr 0x124008c78 <col:8> 'int ()' Function 0x124008bc0 'get_task_mm' 'int ()'
    |   |     `-ImplicitCastExpr 0x124008cf8 <col:20> 'struct task_struct *' <LValueToRValue>
    |   |       `-DeclRefExpr 0x124008c98 <col:20> 'struct task_struct *' lvalue Var 0x123026ba8 'p' 'struct task_struct *'
    |   |-IfStmt 0x124008dc8 <line:16:3, line:17:11>
    |   | |-UnaryOperator 0x124008d80 <line:16:7, col:8> 'int' prefix '!' cannot overflow
    |   | | `-ImplicitCastExpr 0x124008d68 <col:8> 'struct mm_struct *' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x124008d48 <col:8> 'struct mm_struct *' lvalue Var 0x123027468 'mm' 'struct mm_struct *'
    |   | `-ReturnStmt 0x124008db8 <line:17:4, col:11>
    |   |   `-IntegerLiteral 0x124008d98 <col:11> 'int' 0
    |   |-IfStmt 0x12302d568 <line:19:3, line:35:3>
    |   | |-BinaryOperator 0x124008e68 <line:19:7, col:20> 'int' contains-errors '=='
    |   | | |-RecoveryExpr 0x124008e20 <col:7, col:11> '<dependent type>' contains-errors lvalue
    |   | | | `-DeclRefExpr 0x124008de8 <col:7> 'struct mm_struct *' lvalue Var 0x123027468 'mm' 'struct mm_struct *'
    |   | | `-DeclRefExpr 0x124008e48 <col:20> 'struct task_struct *' lvalue Var 0x123026ba8 'p' 'struct task_struct *'
    |   | `-CompoundStmt 0x12302d510 <col:23, line:35:3>
    |   |   |-CallExpr 0x124008f98 <line:20:4, col:21> '<dependent type>' contains-errors
    |   |   | |-DeclRefExpr 0x124008e88 <col:4> 'int ()' Function 0x1240089d0 'VM_BUG_ON' 'int ()'
    |   |   | `-CXXDependentScopeMemberExpr 0x124008f50 <col:14, col:17> '<dependent type>' contains-errors lvalue .from
    |   |   |   `-RecoveryExpr 0x124008f30 <col:14> '<dependent type>' contains-errors lvalue
    |   |   |-CallExpr 0x1240090d0 <line:21:4, col:19> '<dependent type>' contains-errors
    |   |   | |-DeclRefExpr 0x124008fc0 <col:4> 'int ()' Function 0x1240089d0 'VM_BUG_ON' 'int ()'
    |   |   | `-CXXDependentScopeMemberExpr 0x124009088 <col:14, col:17> '<dependent type>' contains-errors lvalue .to
    |   |   |   `-RecoveryExpr 0x124009068 <col:14> '<dependent type>' contains-errors lvalue
    |   |   |-CallExpr 0x124009208 <line:22:4, col:26> '<dependent type>' contains-errors
    |   |   | |-DeclRefExpr 0x1240090f8 <col:4> 'int ()' Function 0x1240089d0 'VM_BUG_ON' 'int ()'
    |   |   | `-CXXDependentScopeMemberExpr 0x1240091c0 <col:14, col:17> '<dependent type>' contains-errors lvalue .precharge
    |   |   |   `-RecoveryExpr 0x1240091a0 <col:14> '<dependent type>' contains-errors lvalue
    |   |   |-CallExpr 0x124009340 <line:23:4, col:29> '<dependent type>' contains-errors
    |   |   | |-DeclRefExpr 0x124009230 <col:4> 'int ()' Function 0x1240089d0 'VM_BUG_ON' 'int ()'
    |   |   | `-CXXDependentScopeMemberExpr 0x1240092f8 <col:14, col:17> '<dependent type>' contains-errors lvalue .moved_charge
    |   |   |   `-RecoveryExpr 0x1240092d8 <col:14> '<dependent type>' contains-errors lvalue
    |   |   |-CallExpr 0x124009478 <line:24:4, col:27> '<dependent type>' contains-errors
    |   |   | |-DeclRefExpr 0x124009368 <col:4> 'int ()' Function 0x1240089d0 'VM_BUG_ON' 'int ()'
    |   |   | `-CXXDependentScopeMemberExpr 0x124009430 <col:14, col:17> '<dependent type>' contains-errors lvalue .moved_swap
    |   |   |   `-RecoveryExpr 0x124009410 <col:14> '<dependent type>' contains-errors lvalue
    |   |   |-CallExpr 0x1240095d8 <line:25:4, col:30> 'int'
    |   |   | |-ImplicitCastExpr 0x1240095c0 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |   |   | | `-DeclRefExpr 0x124009580 <col:4> 'int ()' Function 0x1240094c8 'mem_cgroup_start_move' 'int ()'
    |   |   | `-ImplicitCastExpr 0x124009600 <col:26> 'struct mem_cgroup *' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x1240095a0 <col:26> 'struct mem_cgroup *' lvalue Var 0x123027588 'from' 'struct mem_cgroup *'
    |   |   |-CallExpr 0x12302d060 <line:26:4, col:22> '<dependent type>' contains-errors
    |   |   | |-DeclRefExpr 0x1240096f8 <col:4> 'int ()' Function 0x124009640 'spin_lock' 'int ()'
    |   |   | `-UnaryOperator 0x12302d048 <col:14, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   |   `-CXXDependentScopeMemberExpr 0x12302d000 <col:15, col:18> '<dependent type>' contains-errors lvalue .lock
    |   |   |     `-RecoveryExpr 0x1240097b8 <col:15> '<dependent type>' contains-errors lvalue
    |   |   |-BinaryOperator 0x12302d360 <line:32:4, col:36> 'int' '='
    |   |   | |-DeclRefExpr 0x12302d1c8 <col:4> 'int' lvalue Var 0x123026e68 'ret' 'int'
    |   |   | `-CallExpr 0x12302d320 <col:10, col:36> 'int'
    |   |   |   |-ImplicitCastExpr 0x12302d308 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |   |   |   | `-DeclRefExpr 0x12302d2c8 <col:10> 'int ()' Function 0x12302d210 'mem_cgroup_precharge_mc' 'int ()'
    |   |   |   `-ImplicitCastExpr 0x12302d348 <col:34> 'struct mm_struct *' <LValueToRValue>
    |   |   |     `-DeclRefExpr 0x12302d2e8 <col:34> 'struct mm_struct *' lvalue Var 0x123027468 'mm' 'struct mm_struct *'
    |   |   `-IfStmt 0x12302d4f0 <line:33:4, line:34:25>
    |   |     |-ImplicitCastExpr 0x12302d3a0 <line:33:8> 'int' <LValueToRValue>
    |   |     | `-DeclRefExpr 0x12302d380 <col:8> 'int' lvalue Var 0x123026e68 'ret' 'int'
    |   |     `-CallExpr 0x12302d4d0 <line:34:5, col:25> 'int'
    |   |       `-ImplicitCastExpr 0x12302d4b8 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   |         `-DeclRefExpr 0x12302d498 <col:5> 'int ()' Function 0x12302d3e0 'mem_cgroup_clear_mc' 'int ()'
    |   `-CallExpr 0x12302d6c0 <line:36:3, col:11> 'int'
    |     |-ImplicitCastExpr 0x12302d6a8 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x12302d668 <col:3> 'int ()' Function 0x12302d5b0 'mmput' 'int ()'
    |     `-ImplicitCastExpr 0x12302d6e8 <col:9> 'struct mm_struct *' <LValueToRValue>
    |       `-DeclRefExpr 0x12302d688 <col:9> 'struct mm_struct *' lvalue Var 0x123027468 'mm' 'struct mm_struct *'
    `-ReturnStmt 0x12302d7a0 <line:38:2, col:9>
      `-ImplicitCastExpr 0x12302d788 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x12302d768 <col:9> 'int' lvalue Var 0x123026e68 'ret' 'int'
