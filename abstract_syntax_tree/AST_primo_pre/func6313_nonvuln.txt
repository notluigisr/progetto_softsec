`-FunctionDecl 0x15a123f38  line:1:12 ip_mc_leave_src 'int (struct sock *, struct ip_mc_socklist *, struct in_device *)' static
  |-ParmVarDecl 0x15a10b848 <col:28, col:41> col:41 used sk 'struct sock *'
  |-ParmVarDecl 0x15a123c28 <col:45, col:68> col:68 used iml 'struct ip_mc_socklist *'
  |-ParmVarDecl 0x15a123df8 <line:2:7, col:25> col:25 used in_dev 'struct in_device *'
  `-CompoundStmt 0x15a126100 <line:3:1, line:19:1>
    |-DeclStmt 0x15a124400 <line:4:2, col:60>
    | |-RecordDecl 0x15a124040 <col:2, col:9> col:9 struct ip_sf_socklist
    | `-VarDecl 0x15a1241a8 <col:2, col:59> col:25 used psf 'struct ip_sf_socklist *' cinit
    |   `-CallExpr 0x15a1243c0 <col:31, col:59> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x15a124340 <col:31> 'int ()' Function 0x15a124288 'rtnl_dereference' 'int ()'
    |     `-RecoveryExpr 0x15a124398 <col:48, col:53> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x15a124360 <col:48> 'struct ip_mc_socklist *' lvalue ParmVar 0x15a123c28 'iml' 'struct ip_mc_socklist *'
    |-DeclStmt 0x15a124498 <line:5:2, col:9>
    | `-VarDecl 0x15a124430 <col:2, col:6> col:6 used err 'int'
    |-IfStmt 0x15a124910 <line:7:2, line:11:2>
    | |-BinaryOperator 0x15a124528 <line:7:6, col:13> 'int' contains-errors '=='
    | | |-DeclRefExpr 0x15a1244b0 <col:6> 'struct ip_sf_socklist *' contains-errors lvalue Var 0x15a1241a8 'psf' 'struct ip_sf_socklist *'
    | | `-RecoveryExpr 0x15a124508 <col:13> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x15a1248f8 <col:19, line:11:2>
    |   `-ReturnStmt 0x15a1248e8 <line:9:3, line:10:27>
    |     `-CallExpr 0x15a124898 <line:9:10, line:10:27> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x15a124628 <line:9:10> 'int ()' Function 0x15a124570 'ip_mc_del_src' 'int ()'
    |       |-DeclRefExpr 0x15a124648 <col:24> 'struct in_device *' lvalue ParmVar 0x15a123df8 'in_dev' 'struct in_device *'
    |       |-UnaryOperator 0x15a124758 <col:32, col:58> '<dependent type>' contains-errors prefix '&' cannot overflow
    |       | `-CXXDependentScopeMemberExpr 0x15a124710 <col:33, col:58> '<dependent type>' contains-errors lvalue .s_addr
    |       |   `-CXXDependentScopeMemberExpr 0x15a1246c8 <col:33, col:44> '<dependent type>' contains-errors lvalue .imr_multiaddr
    |       |     `-RecoveryExpr 0x15a1246a0 <col:33, col:38> '<dependent type>' contains-errors lvalue
    |       |       `-DeclRefExpr 0x15a124668 <col:33> 'struct ip_mc_socklist *' lvalue ParmVar 0x15a123c28 'iml' 'struct ip_mc_socklist *'
    |       |-RecoveryExpr 0x15a1247a8 <line:10:4, col:9> '<dependent type>' contains-errors lvalue
    |       | `-DeclRefExpr 0x15a124770 <col:4> 'struct ip_mc_socklist *' lvalue ParmVar 0x15a123c28 'iml' 'struct ip_mc_socklist *'
    |       |-IntegerLiteral 0x15a1247d0 <col:17> 'int' 0
    |       |-RecoveryExpr 0x15a124878 <col:20> '<dependent type>' contains-errors lvalue
    |       `-IntegerLiteral 0x15a124808 <col:26> 'int' 0
    |-BinaryOperator 0x15a125a50 <line:12:2, line:13:47> 'int' contains-errors '='
    | |-DeclRefExpr 0x15a124930 <line:12:2> 'int' lvalue Var 0x15a124430 'err' 'int'
    | `-CallExpr 0x15a125a00 <col:8, line:13:47> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x15a124950 <line:12:8> 'int ()' Function 0x15a124570 'ip_mc_del_src' 'int ()'
    |   |-DeclRefExpr 0x15a124970 <col:22> 'struct in_device *' lvalue ParmVar 0x15a123df8 'in_dev' 'struct in_device *'
    |   |-UnaryOperator 0x15a124a80 <col:30, col:56> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-CXXDependentScopeMemberExpr 0x15a124a38 <col:31, col:56> '<dependent type>' contains-errors lvalue .s_addr
    |   |   `-CXXDependentScopeMemberExpr 0x15a1249f0 <col:31, col:42> '<dependent type>' contains-errors lvalue .imr_multiaddr
    |   |     `-RecoveryExpr 0x15a1249c8 <col:31, col:36> '<dependent type>' contains-errors lvalue
    |   |       `-DeclRefExpr 0x15a124990 <col:31> 'struct ip_mc_socklist *' lvalue ParmVar 0x15a123c28 'iml' 'struct ip_mc_socklist *'
    |   |-RecoveryExpr 0x15a124ad0 <line:13:4, col:9> '<dependent type>' contains-errors lvalue
    |   | `-DeclRefExpr 0x15a124a98 <col:4> 'struct ip_mc_socklist *' lvalue ParmVar 0x15a123c28 'iml' 'struct ip_mc_socklist *'
    |   |-RecoveryExpr 0x15a124b30 <col:17, col:22> '<dependent type>' contains-errors lvalue
    |   | `-DeclRefExpr 0x15a124af8 <col:17> 'struct ip_sf_socklist *' contains-errors lvalue Var 0x15a1241a8 'psf' 'struct ip_sf_socklist *'
    |   |-RecoveryExpr 0x15a124b90 <col:32, col:37> '<dependent type>' contains-errors lvalue
    |   | `-DeclRefExpr 0x15a124b58 <col:32> 'struct ip_sf_socklist *' contains-errors lvalue Var 0x15a1241a8 'psf' 'struct ip_sf_socklist *'
    |   `-IntegerLiteral 0x15a124bb8 <col:46> 'int' 0
    |-CallExpr 0x15a125c38 <line:14:2, col:36> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x15a125b50 <col:2> 'int ()' Function 0x15a125a98 'RCU_INIT_POINTER' 'int ()'
    | |-RecoveryExpr 0x15a125ba8 <col:19, col:24> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x15a125b70 <col:19> 'struct ip_mc_socklist *' lvalue ParmVar 0x15a123c28 'iml' 'struct ip_mc_socklist *'
    | `-RecoveryExpr 0x15a125c18 <col:32> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x15a125f68 <line:16:2, col:56> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x15a125d48 <col:2> 'int ()' Function 0x15a125c90 'atomic_sub' 'int ()'
    | |-CallExpr 0x15a125ec8 <col:13, col:35> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x15a125e48 <col:13> 'int ()' Function 0x15a125d90 'IP_SFLSIZE' 'int ()'
    | | `-RecoveryExpr 0x15a125ea0 <col:24, col:29> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x15a125e68 <col:24> 'struct ip_sf_socklist *' contains-errors lvalue Var 0x15a1241a8 'psf' 'struct ip_sf_socklist *'
    | `-UnaryOperator 0x15a125f50 <col:38, col:43> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x15a125f28 <col:39, col:43> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x15a125ef0 <col:39> 'struct sock *' lvalue ParmVar 0x15a10b848 'sk' 'struct sock *'
    `-ReturnStmt 0x15a1260f0 <line:18:2, col:9>
      `-ImplicitCastExpr 0x15a1260d8 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x15a1260b8 <col:9> 'int' lvalue Var 0x15a124430 'err' 'int'
