`-FunctionDecl 0x157033398  line:1:1 win_comp_pos 'int (void)'
  `-CompoundStmt 0x1578f3428 <line:2:1, line:8:1>
    |-DeclStmt 0x1570336b8 <line:3:5, col:32>
    | `-VarDecl 0x1570334a0 <col:5, col:31> col:10 used row 'int' cinit
    |   `-CallExpr 0x157033698 <col:16, col:31> 'int'
    |     `-ImplicitCastExpr 0x157033680 <col:16> 'int (*)()' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x157033630 <col:16> 'int ()' Function 0x157033578 'tabline_height' 'int ()'
    |-DeclStmt 0x157033770 <line:4:5, col:17>
    | `-VarDecl 0x1570336e8 <col:5, col:16> col:10 used col 'int' cinit
    |   `-IntegerLiteral 0x157033750 <col:16> 'int' 0
    |-CallExpr 0x157033998 <line:6:5, col:40> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x157033868 <col:5> 'int ()' Function 0x1570337b0 'frame_comp_pos' 'int ()'
    | |-RecoveryExpr 0x157033978 <col:20> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x1570338f0 <col:30, col:31> 'int *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x1570338a0 <col:31> 'int' lvalue Var 0x1570334a0 'row' 'int'
    | `-UnaryOperator 0x157033928 <col:36, col:37> 'int *' prefix '&' cannot overflow
    |   `-DeclRefExpr 0x157033908 <col:37> 'int' lvalue Var 0x1570336e8 'col' 'int'
    `-ReturnStmt 0x1578f3418 <line:7:5, col:12>
      `-ImplicitCastExpr 0x1578f3400 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x1570339d0 <col:12> 'int' lvalue Var 0x1570334a0 'row' 'int'
