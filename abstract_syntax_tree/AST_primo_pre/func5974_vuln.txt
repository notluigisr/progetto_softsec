`-FunctionDecl 0x12580e0f8  line:1:5 invalid ECDSA_verify 'int (int, const unsigned char *, int, const unsigned char *, int, int *)'
  |-ParmVarDecl 0x12580dcd8 <col:18, col:22> col:22 type 'int'
  |-ParmVarDecl 0x12580dd88 <col:28, col:49> col:49 used dgst 'const unsigned char *'
  |-ParmVarDecl 0x12580de08 <col:55, col:59> col:59 used dgst_len 'int'
  |-ParmVarDecl 0x12580de88 <line:2:3, col:24> col:24 used sigbuf 'const unsigned char *'
  |-ParmVarDecl 0x12580df08 <col:32, col:36> col:36 used sig_len 'int'
  |-ParmVarDecl 0x12580dfd8 <col:45, col:53> col:53 invalid eckey 'int *'
  `-CompoundStmt 0x125827db8 <line:3:3, line:14:2>
    |-DeclStmt 0x12580e2a0 <line:5:2, col:12>
    | `-VarDecl 0x12580e200 <col:2, col:11> col:6 used ret 'int' cinit
    |   `-UnaryOperator 0x12580e288 <col:10, col:11> 'int' prefix '-'
    |     `-IntegerLiteral 0x12580e268 <col:11> 'int' 1
    |-IfStmt 0x1258275b0 <line:8:2, col:27>
    | |-BinaryOperator 0x125827528 <col:6, col:11> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x1258274e8 <col:6> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x125827508 <col:11> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x1258275a0 <col:17, col:27>
    |   `-ImplicitCastExpr 0x125827588 <col:23, col:27> 'int' <LValueToRValue>
    |     `-ParenExpr 0x125827568 <col:23, col:27> 'int' lvalue
    |       `-DeclRefExpr 0x125827548 <col:24> 'int' lvalue Var 0x12580e200 'ret' 'int'
    |-IfStmt 0x125827910 <line:9:2, col:56>
    | |-BinaryOperator 0x125827888 <col:6, col:45> 'int' contains-errors '=='
    | | |-CallExpr 0x125827830 <col:6, col:40> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x1258276b0 <col:6> 'int ()' Function 0x1258275f8 'd2i_ECDSA_SIG' 'int ()'
    | | | |-UnaryOperator 0x125827818 <col:20, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | | | `-RecoveryExpr 0x1258277f8 <col:21> '<dependent type>' contains-errors lvalue
    | | | |-UnaryOperator 0x125827750 <col:24, col:25> 'const unsigned char **' prefix '&' cannot overflow
    | | | | `-DeclRefExpr 0x125827700 <col:25> 'const unsigned char *' lvalue ParmVar 0x12580de88 'sigbuf' 'const unsigned char *'
    | | | `-DeclRefExpr 0x125827768 <col:33> 'int' lvalue ParmVar 0x12580df08 'sig_len' 'int'
    | | `-RecoveryExpr 0x125827868 <col:45> '<dependent type>' contains-errors lvalue
    | `-GotoStmt 0x1258278f8 <col:51, col:56> 'err' 0x1258278a8
    |-BinaryOperator 0x125827b88 <line:10:2, col:46> 'int' contains-errors '='
    | |-DeclRefExpr 0x125827930 <col:2> 'int' lvalue Var 0x12580e200 'ret' 'int'
    | `-CallExpr 0x125827b48 <col:6, col:46> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x125827a30 <col:6> 'int ()' Function 0x125827978 'ECDSA_do_verify' 'int ()'
    |   |-DeclRefExpr 0x125827a50 <col:22> 'const unsigned char *' lvalue ParmVar 0x12580dd88 'dgst' 'const unsigned char *'
    |   |-DeclRefExpr 0x125827a70 <col:28> 'int' lvalue ParmVar 0x12580de08 'dgst_len' 'int'
    |   |-RecoveryExpr 0x125827b28 <col:38> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x125827aa8 <col:41> '<dependent type>' contains-errors lvalue
    |-LabelStmt 0x125827d30 <line:11:1, line:12:18> 'err'
    | `-CallExpr 0x125827d08 <col:2, col:18> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x125827c88 <col:2> 'int ()' Function 0x125827bd0 'ECDSA_SIG_free' 'int ()'
    |   `-RecoveryExpr 0x125827ce8 <col:17> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x125827da8 <line:13:2, col:12>
      `-ImplicitCastExpr 0x125827d90 <col:8, col:12> 'int' <LValueToRValue>
        `-ParenExpr 0x125827d70 <col:8, col:12> 'int' lvalue
          `-DeclRefExpr 0x125827d50 <col:9> 'int' lvalue Var 0x12580e200 'ret' 'int'
