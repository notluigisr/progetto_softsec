`-FunctionDecl 0x14c928318  line:1:1 invalid ExecConstraints 'int (int *, int *, int *)'
  |-ParmVarDecl 0x14c928128 <col:17, col:32> col:32 invalid resultRelInfo 'int *'
  |-ParmVarDecl 0x14c9281a8 <line:2:5, col:21> col:21 invalid slot 'int *'
  |-ParmVarDecl 0x14c928228 <col:27, col:35> col:35 invalid estate 'int *'
  `-CompoundStmt 0x14c943168 <line:3:1, line:46:1>
    |-CallExpr 0x14c928630 <line:8:2, col:15> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14c9285b0 <col:2> 'int ()' Function 0x14c9284f8 'Assert' 'int ()'
    | `-RecoveryExpr 0x14c928610 <col:9> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14c942628 <line:10:2, line:29:2>
    | |-CXXDependentScopeMemberExpr 0x14c9286d8 <line:10:6, col:14> '<dependent type>' contains-errors lvalue ->has_not_null
    | | `-RecoveryExpr 0x14c9286b8 <col:6> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x14c942600 <line:11:2, line:29:2>
    |   |-DeclStmt 0x14c941868 <line:12:3, col:31>
    |   | `-VarDecl 0x14c928738 <col:3, col:26> col:9 used natts 'int' cinit
    |   |   `-CXXDependentScopeMemberExpr 0x14c941820 <col:17, col:26> '<dependent type>' contains-errors lvalue ->natts
    |   |     `-RecoveryExpr 0x14c941800 <col:17> '<dependent type>' contains-errors lvalue
    |   |-DeclStmt 0x14c941900 <line:13:3, col:16>
    |   | `-VarDecl 0x14c941898 <col:3, col:9> col:9 used attrChk 'int'
    |   `-ForStmt 0x14c9425c8 <line:15:3, line:28:3>
    |     |-BinaryOperator 0x14c941958 <line:15:8, col:18> 'int' '='
    |     | |-DeclRefExpr 0x14c941918 <col:8> 'int' lvalue Var 0x14c941898 'attrChk' 'int'
    |     | `-IntegerLiteral 0x14c941938 <col:18> 'int' 1
    |     |-<<<NULL>>>
    |     |-BinaryOperator 0x14c9419e8 <col:21, col:32> 'int' contains-errors '<='
    |     | |-ImplicitCastExpr 0x14c9419b8 <col:21> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x14c941978 <col:21> 'int' lvalue Var 0x14c941898 'attrChk' 'int'
    |     | `-ImplicitCastExpr 0x14c9419d0 <col:32> 'int' contains-errors <LValueToRValue>
    |     |   `-DeclRefExpr 0x14c941998 <col:32> 'int' contains-errors lvalue Var 0x14c928738 'natts' 'int'
    |     |-UnaryOperator 0x14c941a28 <col:39, col:46> 'int' postfix '++'
    |     | `-DeclRefExpr 0x14c941a08 <col:39> 'int' lvalue Var 0x14c941898 'attrChk' 'int'
    |     `-CompoundStmt 0x14c9425b8 <line:16:3, line:28:3>
    `-IfStmt 0x14c943148 <line:31:2, line:45:2>
      |-RecoveryExpr 0x14c942668 <line:31:6, col:26> '_Bool' contains-errors
      `-CompoundStmt 0x14c943130 <line:32:2, line:45:2>
        `-DeclStmt 0x14c942708 <line:33:3, col:21>
          `-VarDecl 0x14c9426a0 <col:3, col:15> col:15 used failed 'const char *'
