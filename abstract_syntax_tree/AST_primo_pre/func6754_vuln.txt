`-FunctionDecl 0x126928288  line:1:5 invalid dtls1_read_failed 'int (int *, int)'
  |-ParmVarDecl 0x126928128 <col:23, col:28> col:28 invalid s 'int *'
  |-ParmVarDecl 0x1269281a8 <col:31, col:35> col:35 used code 'int'
  `-CompoundStmt 0x1269431d8 <line:2:2, line:37:2>
    |-IfStmt 0x126928740 <line:3:2, line:7:3>
    | |-BinaryOperator 0x126928398 <line:3:7, col:14> 'int' '>'
    | | |-ImplicitCastExpr 0x126928380 <col:7> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x126928340 <col:7> 'int' lvalue ParmVar 0x1269281a8 'code' 'int'
    | | `-IntegerLiteral 0x126928360 <col:14> 'int' 0
    | `-CompoundStmt 0x126928720 <line:4:3, line:7:3>
    |   |-CallExpr 0x1269286b0 <line:5:3, col:45> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x126928510 <col:3> 'int ()' Function 0x126928458 'fprintf' 'int ()'
    |   | |-RecoveryExpr 0x126928690 <col:12> '<dependent type>' contains-errors lvalue
    |   | |-StringLiteral 0x126928590 <col:20> 'char[4]' lvalue "STR"
    |   | |-StringLiteral 0x1269285f0 <<scratch space>:2:1> 'char[37]' lvalue "dataset_diviso_filec/func6754_vuln.c"
    |   | `-IntegerLiteral 0x126928630 <line:3:1> 'int' 5
    |   `-ReturnStmt 0x126928710 <dataset_diviso_filec/func6754_vuln.c:6:3, col:10>
    |     `-IntegerLiteral 0x1269286f0 <col:10> 'int' 1
    |-IfStmt 0x126942b98 <line:9:2, line:13:3>
    | |-UnaryOperator 0x126942b20 <line:9:6, col:31> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-CallExpr 0x126942af8 <col:7, col:31> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x126942ab8 <col:7> 'int ()' Function 0x126942a00 'dtls1_is_timer_expired' 'int ()'
    | |   `-RecoveryExpr 0x126942ad8 <col:30> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x126942b80 <line:10:3, line:13:3>
    |   `-ReturnStmt 0x126942b70 <line:12:3, col:10>
    |     `-ImplicitCastExpr 0x126942b58 <col:10> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x126942b38 <col:10> 'int' lvalue ParmVar 0x1269281a8 'code' 'int'
    |-IfStmt 0x126943060 <line:15:2, line:19:3>
    | |-UnaryOperator 0x126942d00 <line:15:7, col:22> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-CallExpr 0x126942cd8 <col:9, col:22> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x126942c98 <col:9> 'int ()' Function 0x126942be0 'SSL_in_init' 'int ()'
    | |   `-RecoveryExpr 0x126942cb8 <col:21> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x126943040 <line:16:3, line:19:3>
    |   |-CallExpr 0x126942fc8 <line:17:3, col:48> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x126942df8 <col:3> 'int ()' Function 0x126942d40 'BIO_set_flags' 'int ()'
    |   | |-CallExpr 0x126942f38 <col:17, col:31> '<dependent type>' contains-errors
    |   | | |-DeclRefExpr 0x126942ef8 <col:17> 'int ()' Function 0x126942e40 'SSL_get_rbio' 'int ()'
    |   | | `-RecoveryExpr 0x126942f18 <col:30> '<dependent type>' contains-errors lvalue
    |   | `-RecoveryExpr 0x126942fa8 <col:34> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x126943030 <line:18:3, col:10>
    |     `-ImplicitCastExpr 0x126943018 <col:10> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x126942ff8 <col:10> 'int' lvalue ParmVar 0x1269281a8 'code' 'int'
    `-ReturnStmt 0x1269431c8 <line:36:2, col:31>
      `-CallExpr 0x1269431a0 <col:9, col:31> '<dependent type>' contains-errors
        |-DeclRefExpr 0x126943160 <col:9> 'int ()' Function 0x1269430a8 'dtls1_handle_timeout' 'int ()'
        `-RecoveryExpr 0x126943180 <col:30> '<dependent type>' contains-errors lvalue
