`-FunctionDecl 0x14d128238  line:1:1 TEST_F 'int (int, int)'
  |-ParmVarDecl 0x14d128158 <col:8> col:8 ExprMatchTest 'int'
  |-ParmVarDecl 0x14d1280d8 <col:23> col:23 ComparisonBetweenTwoFieldPathsMatchesCorrectly 'int'
  `-CompoundStmt 0x14d1413b0 <col:71, line:9:1>
    |-CallExpr 0x14d140cc8 <line:2:5, line:3:69> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14d128460 <line:2:5> 'int ()' Function 0x14d1283a8 'createMatcher' 'int ()'
    | `-CallExpr 0x14d140ca0 <col:19, line:3:68> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14d128560 <line:2:19> 'int ()' Function 0x14d1284a8 'BSON' 'int ()'
    |   `-RecoveryExpr 0x14d140c70 <col:24, line:3:63> '<dependent type>' contains-errors lvalue
    |     |-StringLiteral 0x14d1285c0 <line:2:24> 'char[4]' lvalue "STR"
    |     `-StringLiteral 0x14d1285e0 <line:3:63> 'char[4]' lvalue "STR"
    |-CallExpr 0x14d140fe8 <line:5:5, col:42> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14d140dd0 <col:5> 'int ()' Function 0x14d140d18 'ASSERT_TRUE' 'int ()'
    | `-CallExpr 0x14d140fc0 <col:17, col:41> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14d140ed0 <col:17> 'int ()' Function 0x14d140e18 'matches' 'int ()'
    |   `-CallExpr 0x14d140f98 <col:25, col:40> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x14d140ef0 <col:25> 'int ()' Function 0x14d1284a8 'BSON' 'int ()'
    |     `-RecoveryExpr 0x14d140f68 <col:30, col:39> '<dependent type>' contains-errors lvalue
    |       |-StringLiteral 0x14d140f10 <col:30> 'char[4]' lvalue "STR"
    |       `-IntegerLiteral 0x14d140f30 <col:39> 'int' 2
    |-CallExpr 0x14d141228 <line:7:5, col:43> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14d1410f0 <col:5> 'int ()' Function 0x14d141038 'ASSERT_FALSE' 'int ()'
    | `-CallExpr 0x14d141200 <col:18, col:42> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14d141110 <col:18> 'int ()' Function 0x14d140e18 'matches' 'int ()'
    |   `-CallExpr 0x14d1411d8 <col:26, col:41> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x14d141130 <col:26> 'int ()' Function 0x14d1284a8 'BSON' 'int ()'
    |     `-RecoveryExpr 0x14d1411a8 <col:31, col:40> '<dependent type>' contains-errors lvalue
    |       |-StringLiteral 0x14d141150 <col:31> 'char[4]' lvalue "STR"
    |       `-IntegerLiteral 0x14d141170 <col:40> 'int' 2
    `-CallExpr 0x14d141388 <line:8:5, col:44> '<dependent type>' contains-errors
      |-DeclRefExpr 0x14d141250 <col:5> 'int ()' Function 0x14d141038 'ASSERT_FALSE' 'int ()'
      `-CallExpr 0x14d141360 <col:18, col:43> '<dependent type>' contains-errors
        |-DeclRefExpr 0x14d141270 <col:18> 'int ()' Function 0x14d140e18 'matches' 'int ()'
        `-CallExpr 0x14d141338 <col:26, col:42> '<dependent type>' contains-errors
          |-DeclRefExpr 0x14d141290 <col:26> 'int ()' Function 0x14d1284a8 'BSON' 'int ()'
          `-RecoveryExpr 0x14d141308 <col:31, col:40> '<dependent type>' contains-errors lvalue
            |-StringLiteral 0x14d1412b0 <col:31> 'char[4]' lvalue "STR"
            `-IntegerLiteral 0x14d1412d0 <col:40> 'int' 10
