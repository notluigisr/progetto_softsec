`-FunctionDecl 0x14282aa78  line:1:12 dn_create 'int (struct net *, struct socket *, int, int)' static
  |-ParmVarDecl 0x14280e248 <col:22, col:34> col:34 used net 'struct net *'
  |-ParmVarDecl 0x14282a828 <col:39, col:54> col:54 used sock 'struct socket *'
  |-ParmVarDecl 0x14282a8a8 <col:60, col:64> col:64 used protocol 'int'
  |-ParmVarDecl 0x14282a928 <line:2:8, col:12> col:12 used kern 'int'
  `-CompoundStmt 0x14282b7c0 <line:3:1, line:27:1>
    |-DeclStmt 0x14282ad78 <line:4:2, col:17>
    | |-RecordDecl 0x14282ab88 <col:2, col:9> col:9 struct sock
    | `-VarDecl 0x14282acf8 <col:2, col:15> col:15 used sk 'struct sock *'
    |-IfStmt 0x14282b0a0 <line:6:2, line:7:11>
    | |-UnaryOperator 0x14282afe0 <line:6:6, col:28> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-CallExpr 0x14282afb0 <col:7, col:28> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x14282aec0 <col:7> 'int ()' Function 0x14282ae08 'net_eq' 'int ()'
    | |   |-DeclRefExpr 0x14282aee0 <col:14> 'struct net *' lvalue ParmVar 0x14280e248 'net' 'struct net *'
    | |   `-UnaryOperator 0x14282af98 <col:19, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |     `-RecoveryExpr 0x14282af78 <col:20> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x14282b090 <line:7:3, col:11>
    |   `-UnaryOperator 0x14282b078 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x14282b060 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x14282b040 <col:11> '<dependent type>' contains-errors lvalue
    |-SwitchStmt 0x14282b138 <line:9:2, line:18:2>
    | |-ImplicitCastExpr 0x14282b120 <line:9:10, col:16> '<dependent type>' contains-errors <LValueToRValue>
    | | `-RecoveryExpr 0x14282b0f8 <col:10, col:16> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x14282b0c0 <col:10> 'struct socket *' lvalue ParmVar 0x14282a828 'sock' 'struct socket *'
    | `-CompoundStmt 0x14282b3c8 <col:22, line:18:2>
    |   |-IfStmt 0x14282b2b8 <line:11:3, line:12:12>
    |   | |-BinaryOperator 0x14282b1f0 <line:11:7, col:19> 'int' contains-errors '!='
    |   | | |-DeclRefExpr 0x14282b178 <col:7> 'int' lvalue ParmVar 0x14282a8a8 'protocol' 'int'
    |   | | `-RecoveryExpr 0x14282b1d0 <col:19> '<dependent type>' contains-errors lvalue
    |   | `-ReturnStmt 0x14282b2a8 <line:12:4, col:12>
    |   |   `-UnaryOperator 0x14282b290 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |     `-ImplicitCastExpr 0x14282b278 <col:12> '<dependent type>' contains-errors <LValueToRValue>
    |   |       `-RecoveryExpr 0x14282b258 <col:12> '<dependent type>' contains-errors lvalue
    |   |-BreakStmt 0x14282b2d8 <line:13:3>
    |   |-BreakStmt 0x14282b2f8 <line:15:3>
    |   `-DefaultStmt 0x14282b3a8 <line:16:2, line:17:11>
    |     `-ReturnStmt 0x14282b398 <col:3, col:11>
    |       `-UnaryOperator 0x14282b380 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |         `-ImplicitCastExpr 0x14282b368 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |           `-RecoveryExpr 0x14282b348 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14282b6d0 <line:21:2, line:22:11>
    | |-RecoveryExpr 0x14282b608 <line:21:6, col:59> '_Bool' contains-errors
    | `-ReturnStmt 0x14282b6c0 <line:22:3, col:11>
    |   `-UnaryOperator 0x14282b6a8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x14282b690 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x14282b670 <col:11> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x14282b770 <line:24:2, col:20> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x14282b728 <col:2, col:6> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x14282b6f0 <col:2> 'struct sock *' lvalue Var 0x14282acf8 'sk' 'struct sock *'
    | `-DeclRefExpr 0x14282b750 <col:20> 'int' lvalue ParmVar 0x14282a8a8 'protocol' 'int'
    `-ReturnStmt 0x14282b7b0 <line:26:2, col:9>
      `-IntegerLiteral 0x14282b790 <col:9> 'int' 0
