`-FunctionDecl 0x13780de80  line:1:6 referenced invalid getElemMatchOrPushdownDescendants 'void (int *, int)'
  |-ParmVarDecl 0x13780dd28 <col:40, col:57> col:57 invalid node 'int *'
  |-ParmVarDecl 0x13780dda8 <col:63, <invalid sloc>> col:66 invalid 'int'
  `-CompoundStmt 0x137122930 <col:99, line:10:1>
    `-IfStmt 0x137122900 <line:2:5, line:9:5> has_else
      |-BinaryOperator 0x13780e148 <line:2:9, col:56> 'int' contains-errors '&&'
      | |-CallExpr 0x13780dfa0 <col:9, col:22> '<dependent type>' contains-errors
      | | `-CXXDependentScopeMemberExpr 0x13780df58 <col:9, col:15> '<dependent type>' contains-errors lvalue ->getTag
      | |   `-RecoveryExpr 0x13780df38 <col:9> '<dependent type>' contains-errors lvalue
      | `-BinaryOperator 0x13780e128 <col:27, col:56> 'int' contains-errors '=='
      |   |-CallExpr 0x13780e090 <col:27, col:51> '<dependent type>' contains-errors
      |   | `-CXXDependentScopeMemberExpr 0x13780e048 <col:27, col:43> '<dependent type>' contains-errors lvalue ->getType
      |   |   `-CallExpr 0x13780e028 <col:27, col:40> '<dependent type>' contains-errors
      |   |     `-CXXDependentScopeMemberExpr 0x13780dfe0 <col:27, col:33> '<dependent type>' contains-errors lvalue ->getTag
      |   |       `-RecoveryExpr 0x13780dfc0 <col:27> '<dependent type>' contains-errors lvalue
      |   `-RecoveryExpr 0x13780e108 <col:56> '<dependent type>' contains-errors lvalue
      |-CompoundStmt 0x13780e188 <col:80, line:4:5>
      `-IfStmt 0x1371228e0 <col:12, line:9:5>
        |-BinaryOperator 0x13780e278 <line:4:16, col:37> 'int' contains-errors '=='
        | |-CallExpr 0x13780e200 <col:16, col:32> '<dependent type>' contains-errors
        | | `-CXXDependentScopeMemberExpr 0x13780e1b8 <col:16, col:22> '<dependent type>' contains-errors lvalue ->matchType
        | |   `-RecoveryExpr 0x13780e198 <col:16> '<dependent type>' contains-errors lvalue
        | `-RecoveryExpr 0x13780e258 <col:37> '<dependent type>' contains-errors lvalue
        `-CompoundStmt 0x1371228c8 <line:5:59, line:9:5>
          `-ForStmt 0x137122890 <line:6:9, line:8:9>
            |-<<<NULL>>>
            |-<<<NULL>>>
            |-BinaryOperator 0x137122620 <line:6:28, col:50> 'int' contains-errors '<'
            | |-RecoveryExpr 0x137122600 <col:28> '<dependent type>' contains-errors lvalue
            | `-CallExpr 0x13780e3b8 <col:32, col:50> '<dependent type>' contains-errors
            |   `-CXXDependentScopeMemberExpr 0x13780e370 <col:32, col:38> '<dependent type>' contains-errors lvalue ->numChildren
            |     `-RecoveryExpr 0x13780e350 <col:32> '<dependent type>' contains-errors lvalue
            |-UnaryOperator 0x137122690 <col:53, col:55> '<dependent type>' contains-errors prefix '++' cannot overflow
            | `-RecoveryExpr 0x137122670 <col:55> '<dependent type>' contains-errors lvalue
            `-CompoundStmt 0x137122878 <col:58, line:8:9>
              `-CallExpr 0x137122848 <line:7:13, col:69> '<dependent type>' contains-errors
                |-RecoveryExpr 0x1371226c8 <col:13> '<dependent type>' contains-errors lvalue
                | `-DeclRefExpr 0x1371226a8 <col:13> 'void (int *, int)' Function 0x13780de80 'getElemMatchOrPushdownDescendants' 'void (int *, int)'
                |-CallExpr 0x137122800 <col:47, col:63> '<dependent type>' contains-errors
                | |-CXXDependentScopeMemberExpr 0x137122710 <col:47, col:53> '<dependent type>' contains-errors lvalue ->getChild
                | | `-RecoveryExpr 0x1371226f0 <col:47> '<dependent type>' contains-errors lvalue
                | `-RecoveryExpr 0x1371227e0 <col:62> '<dependent type>' contains-errors lvalue
                `-RecoveryExpr 0x137122828 <col:66> '<dependent type>' contains-errors lvalue
