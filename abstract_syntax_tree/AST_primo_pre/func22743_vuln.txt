`-FunctionDecl 0x1299281d8  line:1:12 set_default_flags 'int (int *)' static
  |-ParmVarDecl 0x129928108 <col:30, col:35> col:35 used flags 'int *'
  `-CompoundStmt 0x12b008a40 <line:2:1, line:13:1>
    |-IfStmt 0x129928540 <line:3:3, line:4:12>
    | |-RecoveryExpr 0x1299284d8 <line:3:7, col:73> '_Bool' contains-errors
    | `-ReturnStmt 0x129928530 <line:4:5, col:12>
    |   `-RecoveryExpr 0x129928510 <col:12> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x129928780 <line:6:3, line:7:12>
    | |-RecoveryExpr 0x129928718 <line:6:7, col:88> '_Bool' contains-errors
    | `-ReturnStmt 0x129928770 <line:7:5, col:12>
    |   `-RecoveryExpr 0x129928750 <col:12> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12b0089d8 <line:9:3, line:10:15>
    | |-RecoveryExpr 0x12b008870 <line:9:7, col:52> '_Bool' contains-errors
    | `-CompoundAssignOperator 0x12b0089a8 <line:10:5, col:15> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   |-UnaryOperator 0x12b008970 <col:5, col:6> 'int' lvalue prefix '*' cannot overflow
    |   | `-ImplicitCastExpr 0x12b008958 <col:6> 'int *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x12b008890 <col:6> 'int *' lvalue ParmVar 0x129928108 'flags' 'int *'
    |   `-RecoveryExpr 0x12b008988 <col:15> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x12b008a30 <line:12:3, col:10>
      `-RecoveryExpr 0x12b008a10 <col:10> '<dependent type>' contains-errors lvalue
