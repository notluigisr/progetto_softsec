`-FunctionDecl 0x14300e358  line:1:12 axff_init 'int (struct hid_device *)' static
  |-ParmVarDecl 0x14300e248 <col:22, col:41> col:41 used hid 'struct hid_device *'
  `-CompoundStmt 0x14302bf40 <line:2:1, line:51:1>
    |-DeclStmt 0x143026838 <line:3:2, col:26>
    | |-RecordDecl 0x143026650 <col:2, col:9> col:9 struct axff_device
    | `-VarDecl 0x1430267b8 <col:2, col:22> col:22 used axff 'struct axff_device *'
    |-DeclStmt 0x143026a38 <line:4:2, col:27>
    | |-RecordDecl 0x143026850 <col:2, col:9> col:9 struct hid_report
    | `-VarDecl 0x1430269b8 <col:2, col:21> col:21 used report 'struct hid_report *'
    |-DeclStmt 0x143026e18 <line:5:2, col:85>
    | |-RecordDecl 0x143026a50 <col:2, col:9> col:9 struct hid_input
    | `-VarDecl 0x143026bb8 <col:2, col:20> col:20 used hidinput 'struct hid_input *'
    |-DeclStmt 0x143027090 <line:6:2, col:81>
    | |-RecordDecl 0x143026e30 <col:2, col:9> col:9 struct list_head
    | `-VarDecl 0x143026f98 <col:2, col:20> col:20 used report_list 'struct list_head *'
    |-DeclStmt 0x1430272f8 <line:7:2, col:41>
    | |-RecordDecl 0x1430270a8 <col:2, col:9> col:9 struct input_dev
    | `-VarDecl 0x143027218 <col:2, col:36> col:20 used dev 'struct input_dev *' cinit
    |   `-RecoveryExpr 0x1430272b8 <col:26, col:36> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x143027280 <col:26> 'struct hid_input *' lvalue Var 0x143026bb8 'hidinput' 'struct hid_input *'
    |-DeclStmt 0x1430273b0 <line:8:2, col:21>
    | `-VarDecl 0x143027328 <col:2, col:20> col:6 used field_count 'int' cinit
    |   `-IntegerLiteral 0x143027390 <col:20> 'int' 0
    |-DeclStmt 0x1430274e0 <line:9:2, col:10>
    | |-VarDecl 0x1430273e0 <col:2, col:6> col:6 used i 'int'
    | `-VarDecl 0x143027460 <col:2, col:9> col:9 used j 'int'
    |-DeclStmt 0x143027578 <line:10:2, col:11>
    | `-VarDecl 0x143027510 <col:2, col:6> col:6 used error 'int'
    |-IfStmt 0x143029650 <line:12:2, line:15:2>
    | |-CallExpr 0x143029348 <line:12:6, col:28> 'int'
    | | |-ImplicitCastExpr 0x143029330 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x1430292b8 <col:6> 'int ()' Function 0x143029200 'list_empty' 'int ()'
    | | `-ImplicitCastExpr 0x143029370 <col:17> 'struct list_head *' <LValueToRValue>
    | |   `-DeclRefExpr 0x1430292d8 <col:17> 'struct list_head *' lvalue Var 0x143026f98 'report_list' 'struct list_head *'
    | `-CompoundStmt 0x143029630 <col:31, line:15:2>
    |   |-CallExpr 0x143029528 <line:13:3, col:21> 'int'
    |   | |-ImplicitCastExpr 0x143029510 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x143029468 <col:3> 'int ()' Function 0x1430293b0 'hid_err' 'int ()'
    |   | |-ImplicitCastExpr 0x143029558 <col:11> 'struct hid_device *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x143029488 <col:11> 'struct hid_device *' lvalue ParmVar 0x14300e248 'hid' 'struct hid_device *'
    |   | `-ImplicitCastExpr 0x143029570 <col:16> 'char *' <ArrayToPointerDecay>
    |   |   `-StringLiteral 0x1430294f0 <col:16> 'char[4]' lvalue "STR"
    |   `-ReturnStmt 0x143029620 <line:14:3, col:11>
    |     `-UnaryOperator 0x143029608 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       `-ImplicitCastExpr 0x1430295f0 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |         `-RecoveryExpr 0x1430295d0 <col:11> '<dependent type>' contains-errors lvalue
    |-ForStmt 0x143029c80 <line:18:2, line:23:2>
    | |-BinaryOperator 0x143029728 <line:18:7, col:11> 'int' '='
    | | |-DeclRefExpr 0x1430296e8 <col:7> 'int' lvalue Var 0x1430273e0 'i' 'int'
    | | `-IntegerLiteral 0x143029708 <col:11> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x1430297c8 <col:14, col:26> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x143029748 <col:14> 'int' lvalue Var 0x1430273e0 'i' 'int'
    | | `-RecoveryExpr 0x1430297a0 <col:18, col:26> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x143029768 <col:18> 'struct hid_report *' lvalue Var 0x1430269b8 'report' 'struct hid_report *'
    | |-UnaryOperator 0x143029808 <col:36, col:37> 'int' postfix '++'
    | | `-DeclRefExpr 0x1430297e8 <col:36> 'int' lvalue Var 0x1430273e0 'i' 'int'
    | `-CompoundStmt 0x143029c68 <col:41, line:23:2>
    |   `-ForStmt 0x143029c30 <line:19:3, line:22:3>
    |     |-BinaryOperator 0x143029860 <line:19:8, col:12> 'int' '='
    |     | |-DeclRefExpr 0x143029820 <col:8> 'int' lvalue Var 0x143027460 'j' 'int'
    |     | `-IntegerLiteral 0x143029840 <col:12> 'int' 0
    |     |-<<<NULL>>>
    |     |-BinaryOperator 0x1430299b8 <col:15, col:37> 'int' contains-errors '<'
    |     | |-DeclRefExpr 0x143029880 <col:15> 'int' lvalue Var 0x143027460 'j' 'int'
    |     | `-CXXDependentScopeMemberExpr 0x143029970 <col:19, col:37> '<dependent type>' contains-errors lvalue ->report_count
    |     |   `-ArraySubscriptExpr 0x143029950 <col:19, col:34> '<dependent type>' contains-errors lvalue
    |     |     |-ImplicitCastExpr 0x143029920 <col:19, col:27> '<dependent type>' contains-errors <LValueToRValue>
    |     |     | `-RecoveryExpr 0x1430298d8 <col:19, col:27> '<dependent type>' contains-errors lvalue
    |     |     |   `-DeclRefExpr 0x1430298a0 <col:19> 'struct hid_report *' lvalue Var 0x1430269b8 'report' 'struct hid_report *'
    |     |     `-ImplicitCastExpr 0x143029938 <col:33> 'int' <LValueToRValue>
    |     |       `-DeclRefExpr 0x143029900 <col:33> 'int' lvalue Var 0x1430273e0 'i' 'int'
    |     |-UnaryOperator 0x1430299f8 <col:51, col:52> 'int' postfix '++'
    |     | `-DeclRefExpr 0x1430299d8 <col:51> 'int' lvalue Var 0x143027460 'j' 'int'
    |     `-CompoundStmt 0x143029c10 <col:56, line:22:3>
    |       |-BinaryOperator 0x143029bb8 <line:20:4, col:33> '<dependent type>' contains-errors '='
    |       | |-ArraySubscriptExpr 0x143029b78 <col:4, col:29> '<dependent type>' contains-errors lvalue
    |       | | |-ImplicitCastExpr 0x143029b48 <col:4, col:22> '<dependent type>' contains-errors <LValueToRValue>
    |       | | | `-CXXDependentScopeMemberExpr 0x143029ae0 <col:4, col:22> '<dependent type>' contains-errors lvalue ->value
    |       | | |   `-ArraySubscriptExpr 0x143029ac0 <col:4, col:19> '<dependent type>' contains-errors lvalue
    |       | | |     |-ImplicitCastExpr 0x143029a90 <col:4, col:12> '<dependent type>' contains-errors <LValueToRValue>
    |       | | |     | `-RecoveryExpr 0x143029a48 <col:4, col:12> '<dependent type>' contains-errors lvalue
    |       | | |     |   `-DeclRefExpr 0x143029a10 <col:4> 'struct hid_report *' lvalue Var 0x1430269b8 'report' 'struct hid_report *'
    |       | | |     `-ImplicitCastExpr 0x143029aa8 <col:18> 'int' <LValueToRValue>
    |       | | |       `-DeclRefExpr 0x143029a70 <col:18> 'int' lvalue Var 0x1430273e0 'i' 'int'
    |       | | `-ImplicitCastExpr 0x143029b60 <col:28> 'int' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x143029b28 <col:28> 'int' lvalue Var 0x143027460 'j' 'int'
    |       | `-IntegerLiteral 0x143029b98 <col:33> 'int' 0
    |       `-UnaryOperator 0x143029bf8 <line:21:4, col:15> 'int' postfix '++'
    |         `-DeclRefExpr 0x143029bd8 <col:4> 'int' lvalue Var 0x143027328 'field_count' 'int'
    |-IfStmt 0x143029fd0 <line:25:2, line:29:2>
    | |-BinaryOperator 0x143029dd0 <line:25:6, col:41> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x143029d10 <col:6, col:20> 'int' '<'
    | | | |-ImplicitCastExpr 0x143029cf8 <col:6> 'int' <LValueToRValue>
    | | | | `-DeclRefExpr 0x143029cb8 <col:6> 'int' lvalue Var 0x143027328 'field_count' 'int'
    | | | `-IntegerLiteral 0x143029cd8 <col:20> 'int' 4
    | | `-BinaryOperator 0x143029db0 <col:25, col:41> 'int' contains-errors '!='
    | |   |-RecoveryExpr 0x143029d68 <col:25, col:30> '<dependent type>' contains-errors lvalue
    | |   | `-DeclRefExpr 0x143029d30 <col:25> 'struct hid_device *' lvalue ParmVar 0x14300e248 'hid' 'struct hid_device *'
    | |   `-IntegerLiteral 0x143029d90 <col:41> 'int' 63237
    | `-CompoundStmt 0x143029fb0 <col:49, line:29:2>
    |   |-CallExpr 0x143029e88 <line:26:3, line:27:15> 'int'
    |   | |-ImplicitCastExpr 0x143029e70 <line:26:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x143029df0 <col:3> 'int ()' Function 0x1430293b0 'hid_err' 'int ()'
    |   | |-ImplicitCastExpr 0x143029ec0 <col:11> 'struct hid_device *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x143029e10 <col:11> 'struct hid_device *' lvalue ParmVar 0x14300e248 'hid' 'struct hid_device *'
    |   | |-ImplicitCastExpr 0x143029ed8 <col:16> 'char *' <ArrayToPointerDecay>
    |   | | `-StringLiteral 0x143029e30 <col:16> 'char[4]' lvalue "STR"
    |   | `-ImplicitCastExpr 0x143029ef0 <line:27:4> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x143029e50 <col:4> 'int' lvalue Var 0x143027328 'field_count' 'int'
    |   `-ReturnStmt 0x143029fa0 <line:28:3, col:11>
    |     `-UnaryOperator 0x143029f88 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       `-ImplicitCastExpr 0x143029f70 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |         `-RecoveryExpr 0x143029f50 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14302b938 <line:38:2, line:39:8>
    | |-ImplicitCastExpr 0x14302b8b8 <line:38:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x14302b898 <col:6> 'int' lvalue Var 0x143027510 'error' 'int'
    | `-GotoStmt 0x14302b920 <line:39:3, col:8> 'err_free_mem' 0x14302b8d0
    |-BinaryOperator 0x14302b9d8 <line:41:2, col:17> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x14302b990 <col:2, col:8> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x14302b958 <col:2> 'struct axff_device *' lvalue Var 0x1430267b8 'axff' 'struct axff_device *'
    | `-DeclRefExpr 0x14302b9b8 <col:17> 'struct hid_report *' lvalue Var 0x1430269b8 'report' 'struct hid_report *'
    |-CallExpr 0x14302bcd0 <line:44:2, col:21> 'int'
    | |-ImplicitCastExpr 0x14302bcb8 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x14302bc58 <col:2> 'int ()' Function 0x14302bba0 'hid_info' 'int ()'
    | |-ImplicitCastExpr 0x14302bd00 <col:11> 'struct hid_device *' <LValueToRValue>
    | | `-DeclRefExpr 0x14302bc78 <col:11> 'struct hid_device *' lvalue ParmVar 0x14300e248 'hid' 'struct hid_device *'
    | `-ImplicitCastExpr 0x14302bd18 <col:16> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x14302bc98 <col:16> 'char[4]' lvalue "STR"
    |-ReturnStmt 0x14302bd50 <line:46:2, col:9>
    | `-IntegerLiteral 0x14302bd30 <col:9> 'int' 0
    |-LabelStmt 0x14302bed8 <line:48:1, line:49:12> 'err_free_mem'
    | `-CallExpr 0x14302be98 <col:2, col:12> 'int'
    |   |-ImplicitCastExpr 0x14302be80 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x14302be40 <col:2> 'int ()' Function 0x14302bd88 'kfree' 'int ()'
    |   `-ImplicitCastExpr 0x14302bec0 <col:8> 'struct axff_device *' <LValueToRValue>
    |     `-DeclRefExpr 0x14302be60 <col:8> 'struct axff_device *' lvalue Var 0x1430267b8 'axff' 'struct axff_device *'
    `-ReturnStmt 0x14302bf30 <line:50:2, col:9>
      `-ImplicitCastExpr 0x14302bf18 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x14302bef8 <col:9> 'int' lvalue Var 0x143027510 'error' 'int'
