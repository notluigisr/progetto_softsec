`-FunctionDecl 0x14300dda8  line:1:1 xmlCharStrdup 'int (const char *)'
  |-ParmVarDecl 0x14300dcd8 <col:15, col:27> col:27 used cur 'const char *'
  `-CompoundStmt 0x144008200 <col:32, line:7:1>
    |-DeclStmt 0x14300df58 <line:2:5, col:24>
    | `-VarDecl 0x14300deb8 <col:5, col:21> col:17 used p 'const char *' cinit
    |   `-ImplicitCastExpr 0x14300df40 <col:21> 'const char *' <LValueToRValue>
    |     `-DeclRefExpr 0x14300df20 <col:21> 'const char *' lvalue ParmVar 0x14300dcd8 'cur' 'const char *'
    |-WhileStmt 0x14300e128 <line:5:5, col:25>
    | |-BinaryOperator 0x14300e0d0 <col:12, col:18> 'int' '!='
    | | |-ImplicitCastExpr 0x14300e0b8 <col:12, col:13> 'int' <IntegralCast>
    | | | `-ImplicitCastExpr 0x14300e0a0 <col:12, col:13> 'char' <LValueToRValue>
    | | |   `-UnaryOperator 0x14300e070 <col:12, col:13> 'const char' lvalue prefix '*' cannot overflow
    | | |     `-ImplicitCastExpr 0x14300e058 <col:13> 'const char *' <LValueToRValue>
    | | |       `-DeclRefExpr 0x14300e038 <col:13> 'const char *' lvalue Var 0x14300deb8 'p' 'const char *'
    | | `-CharacterLiteral 0x14300e088 <col:18> 'int' 0
    | `-UnaryOperator 0x14300e110 <col:24, col:25> 'const char *' postfix '++'
    |   `-DeclRefExpr 0x14300e0f0 <col:24> 'const char *' lvalue Var 0x14300deb8 'p' 'const char *'
    `-ReturnStmt 0x14300e3e0 <line:6:5, col:40>
      `-ParenExpr 0x14300e3c0 <col:11, col:40> 'int'
        `-CallExpr 0x14300e378 <col:12, col:39> 'int'
          |-ImplicitCastExpr 0x14300e360 <col:12> 'int (*)()' <FunctionToPointerDecay>
          | `-DeclRefExpr 0x14300e260 <col:12> 'int ()' Function 0x14300e1a8 'xmlCharStrndup' 'int ()'
          |-ImplicitCastExpr 0x14300e3a8 <col:27> 'const char *' <LValueToRValue>
          | `-DeclRefExpr 0x14300e280 <col:27> 'const char *' lvalue ParmVar 0x14300dcd8 'cur' 'const char *'
          `-BinaryOperator 0x14300e310 <col:32, col:36> 'long' '-'
            |-ImplicitCastExpr 0x14300e2e0 <col:32> 'const char *' <LValueToRValue>
            | `-DeclRefExpr 0x14300e2a0 <col:32> 'const char *' lvalue Var 0x14300deb8 'p' 'const char *'
            `-ImplicitCastExpr 0x14300e2f8 <col:36> 'const char *' <LValueToRValue>
              `-DeclRefExpr 0x14300e2c0 <col:36> 'const char *' lvalue ParmVar 0x14300dcd8 'cur' 'const char *'
