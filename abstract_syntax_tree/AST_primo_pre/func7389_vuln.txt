`-FunctionDecl 0x13d00dda8  line:1:1 PHP_FUNCTION 'int (int)'
  |-ParmVarDecl 0x13d00dcd8 <col:14> col:14 readlink 'int'
  `-CompoundStmt 0x13c923c98 <line:2:1, line:26:1>
    |-DeclStmt 0x13d00df20 <line:3:2, col:12>
    | `-VarDecl 0x13d00deb8 <col:2, col:8> col:8 used link 'char *'
    |-DeclStmt 0x13d00dfb8 <line:4:2, col:14>
    | `-VarDecl 0x13d00df50 <col:2, col:6> col:6 link_len 'int'
    |-DeclStmt 0x13d00e078 <line:5:2, col:23>
    | `-VarDecl 0x13d00e010 <col:2, col:7> col:7 referenced invalid buff 'char'
    |-DeclStmt 0x13d00e110 <line:6:2, col:9>
    | `-VarDecl 0x13d00e0a8 <col:2, col:6> col:6 used ret 'int'
    |-IfStmt 0x13c923428 <line:8:2, line:10:2>
    | |-RecoveryExpr 0x13d00e3e0 <line:8:6, col:83> '_Bool' contains-errors
    | `-CompoundStmt 0x13c923410 <col:92, line:10:2>
    |   `-ReturnStmt 0x13c923400 <line:9:3>
    |-IfStmt 0x13c923598 <line:12:2, line:14:2>
    | |-RecoveryExpr 0x13c923568 <line:12:6, col:43> '_Bool' contains-errors
    | `-CompoundStmt 0x13c923588 <col:46, line:14:2>
    |-BinaryOperator 0x13c923840 <line:16:2, col:49> 'int' contains-errors '='
    | |-DeclRefExpr 0x13c9235b8 <col:2> 'int' lvalue Var 0x13d00e0a8 'ret' 'int'
    | `-CallExpr 0x13c923808 <col:8, col:49> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13c9236b8 <col:8> 'int ()' Function 0x13c923600 'php_sys_readlink' 'int ()'
    |   |-DeclRefExpr 0x13c9236d8 <col:25> 'char *' lvalue Var 0x13d00deb8 'link' 'char *'
    |   |-RecoveryExpr 0x13c9236f8 <col:31> '<dependent type>' contains-errors lvalue
    |   `-BinaryOperator 0x13c9237e8 <col:37, col:48> '<dependent type>' contains-errors '-'
    |     |-RecoveryExpr 0x13c9237c8 <col:37> '<dependent type>' contains-errors lvalue
    |     `-IntegerLiteral 0x13c923730 <col:48> 'int' 1
    |-IfStmt 0x13c923a18 <line:18:2, line:21:2>
    | |-BinaryOperator 0x13c9238d0 <line:18:6, col:14> 'int' '=='
    | | |-ImplicitCastExpr 0x13c9238b8 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x13c923860 <col:6> 'int' lvalue Var 0x13d00e0a8 'ret' 'int'
    | | `-UnaryOperator 0x13c9238a0 <col:13, col:14> 'int' prefix '-'
    | |   `-IntegerLiteral 0x13c923880 <col:14> 'int' 1
    | `-CompoundStmt 0x13c923a08 <col:17, line:21:2>
    |-BinaryOperator 0x13c923b08 <line:23:2, col:14> '<dependent type>' contains-errors '='
    | |-ArraySubscriptExpr 0x13c923ad0 <col:2, col:10> '<dependent type>' contains-errors lvalue
    | | |-ImplicitCastExpr 0x13c923aa0 <col:2> '<dependent type>' contains-errors <LValueToRValue>
    | | | `-RecoveryExpr 0x13c923a58 <col:2> '<dependent type>' contains-errors lvalue
    | | |   `-DeclRefExpr 0x13c923a38 <col:2> 'char' lvalue Var 0x13d00e010 'buff' 'char'
    | | `-ImplicitCastExpr 0x13c923ab8 <col:7> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x13c923a80 <col:7> 'int' lvalue Var 0x13d00e0a8 'ret' 'int'
    | `-CharacterLiteral 0x13c923af0 <col:14> 'int' 0
    `-CallExpr 0x13c923c68 <line:25:2, col:23> '<dependent type>' contains-errors
      |-DeclRefExpr 0x13c923c08 <col:2> 'int ()' Function 0x13c923b50 'RETURN_STRING' 'int ()'
      |-RecoveryExpr 0x13c923c28 <col:16> '<dependent type>' contains-errors lvalue
      `-IntegerLiteral 0x13c923c48 <col:22> 'int' 1
