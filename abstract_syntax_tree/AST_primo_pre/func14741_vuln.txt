`-FunctionDecl 0x15980ddc8  line:1:16 invalid sssctl_backup 'int (int)' static
  |-ParmVarDecl 0x15980dcf0 <col:30, col:35> col:35 invalid force 'int'
  `-CompoundStmt 0x159123350 <line:2:1, line:45:1>
    |-DeclStmt 0x15980df88 <line:3:5, line:5:33>
    | `-VarDecl 0x15980ded8 <line:3:5, col:23> col:17 used files 'const char *[]'
    |-DeclStmt 0x15a80a158 <line:6:5, col:37>
    | |-EnumDecl 0x15980dfa0 <col:5, col:10> col:10 sssctl_prompt_result
    | `-VarDecl 0x15980e0b8 <col:5, col:31> col:31 referenced invalid prompt 'enum sssctl_prompt_result'
    |-IfStmt 0x15a80a7d8 <line:10:5, line:14:5>
    | |-BinaryOperator 0x15a80a3c0 <line:10:9, col:16> 'int' contains-errors '!='
    | | |-RecoveryExpr 0x15a80a380 <col:9> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x15a80a3a0 <col:16> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x15a80a7b8 <col:21, line:14:5>
    |   |-CallExpr 0x15a80a738 <line:11:9, line:12:37> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x15a80a4c0 <line:11:9> 'int ()' Function 0x15a80a408 'ERROR' 'int ()'
    |   | |-StringLiteral 0x15a80a520 <col:15> 'char[4]' lvalue "STR"
    |   | |-RecoveryExpr 0x15a80a6d0 <line:12:15> '<dependent type>' contains-errors lvalue
    |   | `-CallExpr 0x15a80a710 <col:20, col:36> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x15a80a638 <col:20> 'int ()' Function 0x15a80a580 'sss_strerror' 'int ()'
    |   |   `-RecoveryExpr 0x15a80a6f0 <col:33> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x15a80a7a8 <line:13:9, col:16>
    |     `-RecoveryExpr 0x15a80a788 <col:16> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x15a80ade8 <line:16:5, line:28:5>
    | |-BinaryOperator 0x15a80aa28 <line:16:9, col:40> 'int' contains-errors '&&'
    | | |-CallExpr 0x15a80a968 <col:9, col:34> 'int'
    | | | |-ImplicitCastExpr 0x15a80a950 <col:9> 'int (*)()' <FunctionToPointerDecay>
    | | | | `-DeclRefExpr 0x15a80a8d8 <col:9> 'int ()' Function 0x15a80a820 'sssctl_backup_exist' 'int ()'
    | | | `-ImplicitCastExpr 0x15a80a9c0 <col:29> 'const char **' <ArrayToPointerDecay>
    | | |   `-DeclRefExpr 0x15a80a8f8 <col:29> 'const char *[]' lvalue Var 0x15980ded8 'files' 'const char *[]'
    | | `-UnaryOperator 0x15a80aa10 <col:39, col:40> '<dependent type>' contains-errors prefix '!' cannot overflow
    | |   `-ImplicitCastExpr 0x15a80a9f8 <col:40> '<dependent type>' contains-errors <LValueToRValue>
    | |     `-RecoveryExpr 0x15a80a9d8 <col:40> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x15a80add0 <col:47, line:28:5>
    |   `-SwitchStmt 0x15a80ad88 <line:19:9, line:27:9>
    |     |-ImplicitCastExpr 0x15a80ad70 <line:19:17> '<dependent type>' contains-errors <LValueToRValue>
    |     | `-RecoveryExpr 0x15a80ad50 <col:17> '<dependent type>' contains-errors lvalue
    |     `-CompoundStmt 0x15a80adb8 <col:25, line:27:9>
    |       `-BreakStmt 0x15a80adb0 <line:22:13>
    |-IfStmt 0x159123200 <line:32:5, line:35:5>
    | |-RecoveryExpr 0x15a80af28 <line:32:9, col:16> '_Bool' contains-errors
    | `-CompoundStmt 0x15a80afe0 <col:21, line:35:5>
    |   `-CallExpr 0x15a80afa0 <line:33:9, col:20> 'int'
    |     |-ImplicitCastExpr 0x15a80af88 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x15a80af48 <col:9> 'int ()' Function 0x15a80a408 'ERROR' 'int ()'
    |     `-ImplicitCastExpr 0x15a80afc8 <col:15> 'char *' <ArrayToPointerDecay>
    |       `-StringLiteral 0x15a80af68 <col:15> 'char[4]' lvalue "STR"
    `-IfStmt 0x159123330 <line:39:5, line:42:5>
      |-RecoveryExpr 0x159123260 <line:39:9, col:16> '_Bool' contains-errors
      `-CompoundStmt 0x159123318 <col:21, line:42:5>
        `-CallExpr 0x1591232d8 <line:40:9, col:20> 'int'
          |-ImplicitCastExpr 0x1591232c0 <col:9> 'int (*)()' <FunctionToPointerDecay>
          | `-DeclRefExpr 0x159123280 <col:9> 'int ()' Function 0x15a80a408 'ERROR' 'int ()'
          `-ImplicitCastExpr 0x159123300 <col:15> 'char *' <ArrayToPointerDecay>
            `-StringLiteral 0x1591232a0 <col:15> 'char[4]' lvalue "STR"
