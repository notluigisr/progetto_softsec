`-FunctionDecl 0x121128198  line:1:1 IPV6DefragInOrderSimpleTest 'int (void)'
  `-CompoundStmt 0x12180ac38 <line:2:1, line:63:1>
    |-DeclStmt 0x1211284a0 <line:5:5, col:16>
    | `-VarDecl 0x121128418 <col:5, col:14> col:9 used id 'int' cinit
    |   `-IntegerLiteral 0x121128480 <col:14> 'int' 12
    |-DeclStmt 0x121128538 <line:6:5, col:10>
    | `-VarDecl 0x1211284d0 <col:5, col:9> col:9 used i 'int'
    |-DeclStmt 0x1211285f0 <line:7:5, col:16>
    | `-VarDecl 0x121128568 <col:5, col:15> col:9 used ret 'int' cinit
    |   `-IntegerLiteral 0x1211285d0 <col:15> 'int' 0
    |-CallExpr 0x121128788 <line:9:5, col:16> 'int'
    | `-ImplicitCastExpr 0x121128770 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x121128720 <col:5> 'int ()' Function 0x121128668 'DefragInit' 'int ()'
    |-IfStmt 0x121808b00 <line:12:5, line:13:14>
    | |-BinaryOperator 0x121808a78 <line:12:9, col:15> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x121808a38 <col:9> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x121808a58 <col:15> '<dependent type>' contains-errors lvalue
    | `-GotoStmt 0x121808ae8 <line:13:9, col:14> 'end' 0x121808a98
    |-IfStmt 0x121808d18 <line:15:5, line:16:14>
    | |-BinaryOperator 0x121808ce0 <line:15:9, col:15> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x121808ca0 <col:9> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x121808cc0 <col:15> '<dependent type>' contains-errors lvalue
    | `-GotoStmt 0x121808d00 <line:16:9, col:14> 'end' 0x121808a98
    |-IfStmt 0x121808ea0 <line:18:5, line:19:14>
    | |-RecoveryExpr 0x121808e68 <line:18:9, col:15> '_Bool' contains-errors
    | `-GotoStmt 0x121808e88 <line:19:9, col:14> 'end' 0x121808a98
    |-IfStmt 0x121808ff8 <line:21:5, line:22:14>
    | |-RecoveryExpr 0x121808fc0 <line:21:9, col:41> '_Bool' contains-errors
    | `-GotoStmt 0x121808fe0 <line:22:9, col:14> 'end' 0x121808a98
    |-IfStmt 0x121809070 <line:23:5, line:24:14>
    | |-RecoveryExpr 0x121809038 <line:23:9, col:41> '_Bool' contains-errors
    | `-GotoStmt 0x121809058 <line:24:9, col:14> 'end' 0x121808a98
    |-IfStmt 0x1218090e8 <line:26:5, line:27:14>
    | |-RecoveryExpr 0x1218090b0 <line:26:9, col:24> '_Bool' contains-errors
    | `-GotoStmt 0x1218090d0 <line:27:9, col:14> 'end' 0x121808a98
    |-IfStmt 0x121809260 <line:29:5, line:30:14>
    | |-RecoveryExpr 0x121809228 <line:29:9, col:39> '_Bool' contains-errors
    | `-GotoStmt 0x121809248 <line:30:9, col:14> 'end' 0x121808a98
    |-ForStmt 0x121809578 <line:33:5, line:36:5>
    | |-BinaryOperator 0x1218092c0 <line:33:10, col:14> 'int' '='
    | | |-DeclRefExpr 0x121809280 <col:10> 'int' lvalue Var 0x1211284d0 'i' 'int'
    | | `-IntegerLiteral 0x1218092a0 <col:14> 'int' 40
    | |-<<<NULL>>>
    | |-BinaryOperator 0x121809378 <col:18, col:27> 'int' '<'
    | | |-ImplicitCastExpr 0x121809360 <col:18> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1218092e0 <col:18> 'int' lvalue Var 0x1211284d0 'i' 'int'
    | | `-BinaryOperator 0x121809340 <col:22, col:27> 'int' '+'
    | |   |-IntegerLiteral 0x121809300 <col:22> 'int' 40
    | |   `-IntegerLiteral 0x121809320 <col:27> 'int' 8
    | |-UnaryOperator 0x1218093b8 <col:30, col:31> 'int' postfix '++'
    | | `-DeclRefExpr 0x121809398 <col:30> 'int' lvalue Var 0x1211284d0 'i' 'int'
    | `-CompoundStmt 0x121809560 <col:35, line:36:5>
    |   `-IfStmt 0x121809540 <line:34:9, line:35:18>
    |     |-RecoveryExpr 0x121809508 <line:34:13, col:45> '_Bool' contains-errors
    |     `-GotoStmt 0x121809528 <line:35:13, col:18> 'end' 0x121808a98
    |-ForStmt 0x1218097c8 <line:39:5, line:42:5>
    | |-BinaryOperator 0x1218095f0 <line:39:10, col:14> 'int' '='
    | | |-DeclRefExpr 0x1218095b0 <col:10> 'int' lvalue Var 0x1211284d0 'i' 'int'
    | | `-IntegerLiteral 0x1218095d0 <col:14> 'int' 48
    | |-<<<NULL>>>
    | |-BinaryOperator 0x1218096a8 <col:18, col:27> 'int' '<'
    | | |-ImplicitCastExpr 0x121809690 <col:18> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x121809610 <col:18> 'int' lvalue Var 0x1211284d0 'i' 'int'
    | | `-BinaryOperator 0x121809670 <col:22, col:27> 'int' '+'
    | |   |-IntegerLiteral 0x121809630 <col:22> 'int' 48
    | |   `-IntegerLiteral 0x121809650 <col:27> 'int' 8
    | |-UnaryOperator 0x1218096e8 <col:30, col:31> 'int' postfix '++'
    | | `-DeclRefExpr 0x1218096c8 <col:30> 'int' lvalue Var 0x1211284d0 'i' 'int'
    | `-CompoundStmt 0x1218097b0 <col:35, line:42:5>
    |   `-IfStmt 0x121809790 <line:40:9, line:41:18>
    |     |-RecoveryExpr 0x121809758 <line:40:13, col:45> '_Bool' contains-errors
    |     `-GotoStmt 0x121809778 <line:41:13, col:18> 'end' 0x121808a98
    |-ForStmt 0x12180a818 <line:45:5, line:48:5>
    | |-BinaryOperator 0x12180a640 <line:45:10, col:14> 'int' '='
    | | |-DeclRefExpr 0x12180a600 <col:10> 'int' lvalue Var 0x1211284d0 'i' 'int'
    | | `-IntegerLiteral 0x12180a620 <col:14> 'int' 56
    | |-<<<NULL>>>
    | |-BinaryOperator 0x12180a6f8 <col:18, col:27> 'int' '<'
    | | |-ImplicitCastExpr 0x12180a6e0 <col:18> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x12180a660 <col:18> 'int' lvalue Var 0x1211284d0 'i' 'int'
    | | `-BinaryOperator 0x12180a6c0 <col:22, col:27> 'int' '+'
    | |   |-IntegerLiteral 0x12180a680 <col:22> 'int' 56
    | |   `-IntegerLiteral 0x12180a6a0 <col:27> 'int' 3
    | |-UnaryOperator 0x12180a738 <col:30, col:31> 'int' postfix '++'
    | | `-DeclRefExpr 0x12180a718 <col:30> 'int' lvalue Var 0x1211284d0 'i' 'int'
    | `-CompoundStmt 0x12180a800 <col:35, line:48:5>
    |   `-IfStmt 0x12180a7e0 <line:46:9, line:47:18>
    |     |-RecoveryExpr 0x12180a7a8 <line:46:13, col:45> '_Bool' contains-errors
    |     `-GotoStmt 0x12180a7c8 <line:47:13, col:18> 'end' 0x121808a98
    |-BinaryOperator 0x12180a890 <line:50:5, col:11> 'int' '='
    | |-DeclRefExpr 0x12180a850 <col:5> 'int' lvalue Var 0x121128568 'ret' 'int'
    | `-IntegerLiteral 0x12180a870 <col:11> 'int' 1
    |-LabelStmt 0x12180a9d8 <line:51:1, col:4> 'end'
    | `-NullStmt 0x12180a9d0 <col:4>
    |-CallExpr 0x12180abd0 <line:61:5, col:19> 'int'
    | `-ImplicitCastExpr 0x12180abb8 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x12180ab98 <col:5> 'int ()' Function 0x12180aae0 'DefragDestroy' 'int ()'
    `-ReturnStmt 0x12180ac28 <line:62:5, col:12>
      `-ImplicitCastExpr 0x12180ac10 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x12180abf0 <col:12> 'int' lvalue Var 0x121128568 'ret' 'int'
