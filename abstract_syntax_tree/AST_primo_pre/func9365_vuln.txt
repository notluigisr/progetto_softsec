`-FunctionDecl 0x15c1281a8  line:1:1 PHP_FUNCTION 'int (int)'
  |-ParmVarDecl 0x15c1280d8 <col:14> col:14 wddx_add_vars 'int'
  `-CompoundStmt 0x15c141330 <line:2:1, line:31:1>
    |-DeclStmt 0x15c1283b8 <line:3:2, col:17>
    | |-VarDecl 0x15c1282b8 <col:2, col:6> col:6 used num_args 'int'
    | `-VarDecl 0x15c128338 <col:2, col:16> col:16 used i 'int'
    |-IfStmt 0x15c1287a8 <line:8:2, line:10:2>
    | |-RecoveryExpr 0x15c128760 <line:8:6, col:95> '_Bool' contains-errors
    | `-CompoundStmt 0x15c128790 <col:104, line:10:2>
    |   `-ReturnStmt 0x15c128780 <line:9:3>
    |-IfStmt 0x15c140d18 <line:12:2, line:15:2>
    | |-RecoveryExpr 0x15c140be8 <line:12:6, col:90> '_Bool' contains-errors
    | `-CompoundStmt 0x15c140d08 <col:93, line:15:2>
    |-IfStmt 0x15c140d88 <line:17:2, line:20:2>
    | |-RecoveryExpr 0x15c140d38 <line:17:6, col:7> '_Bool' contains-errors
    | `-CompoundStmt 0x15c140d78 <col:15, line:20:2>
    `-ForStmt 0x15c1412d8 <line:22:2, line:27:2>
      |-BinaryOperator 0x15c140de8 <line:22:7, col:9> 'int' '='
      | |-DeclRefExpr 0x15c140da8 <col:7> 'int' lvalue Var 0x15c128338 'i' 'int'
      | `-IntegerLiteral 0x15c140dc8 <col:9> 'int' 0
      |-<<<NULL>>>
      |-BinaryOperator 0x15c140e78 <col:12, col:14> 'int' '<'
      | |-ImplicitCastExpr 0x15c140e48 <col:12> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x15c140e08 <col:12> 'int' lvalue Var 0x15c128338 'i' 'int'
      | `-ImplicitCastExpr 0x15c140e60 <col:14> 'int' <LValueToRValue>
      |   `-DeclRefExpr 0x15c140e28 <col:14> 'int' lvalue Var 0x15c1282b8 'num_args' 'int'
      |-UnaryOperator 0x15c140eb8 <col:24, col:25> 'int' postfix '++'
      | `-DeclRefExpr 0x15c140e98 <col:24> 'int' lvalue Var 0x15c128338 'i' 'int'
      `-CompoundStmt 0x15c1412c0 <col:29, line:27:2>
        `-IfStmt 0x15c141180 <line:23:3, line:25:3>
          |-RecoveryExpr 0x15c141030 <line:23:7, col:63> '_Bool' contains-errors
          `-CompoundStmt 0x15c141170 <col:74, line:25:3>
