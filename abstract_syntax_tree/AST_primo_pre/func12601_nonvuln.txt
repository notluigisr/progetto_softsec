`-FunctionDecl 0x14e80e008  line:1:1 invalid _fill16_spans 'int (void *, int, int, const int *, unsigned int)'
  |-ParmVarDecl 0x14e80dcd8 <col:16, col:22> col:22 used abstract_renderer 'void *'
  |-ParmVarDecl 0x14e80dd58 <col:41, col:45> col:45 used y 'int'
  |-ParmVarDecl 0x14e80ddd8 <col:48, col:52> col:52 used h 'int'
  |-ParmVarDecl 0x14e80de70 <line:2:9, col:39> col:39 referenced invalid spans 'const int *'
  |-ParmVarDecl 0x14e80def0 <col:46, col:55> col:55 used num_spans 'unsigned int'
  `-CompoundStmt 0x14e8298f0 <line:3:1, line:36:1>
    |-IfStmt 0x14e80e1e8 <line:6:5, line:7:9>
    | |-BinaryOperator 0x14e80e180 <line:6:9, col:22> 'int' '=='
    | | |-ImplicitCastExpr 0x14e80e150 <col:9> 'unsigned int' <LValueToRValue>
    | | | `-DeclRefExpr 0x14e80e110 <col:9> 'unsigned int' lvalue ParmVar 0x14e80def0 'num_spans' 'unsigned int'
    | | `-ImplicitCastExpr 0x14e80e168 <col:22> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x14e80e130 <col:22> 'int' 0
    | `-ReturnStmt 0x14e80e1d8 <line:7:2, col:9>
    |   `-RecoveryExpr 0x14e80e1b8 <col:9> '<dependent type>' contains-errors lvalue
    `-IfStmt 0x14e8298c0 <line:9:5, line:33:5> has_else
      |-CallExpr 0x14e827e48 <line:9:9, col:22> 'int'
      | |-ImplicitCastExpr 0x14e827e30 <col:9> 'int (*)()' <FunctionToPointerDecay>
      | | `-DeclRefExpr 0x14e80e360 <col:9> 'int ()' Function 0x14e80e2a8 'likely' 'int ()'
      | `-BinaryOperator 0x14e80e3d8 <col:16, col:21> 'int' '=='
      |   |-ImplicitCastExpr 0x14e80e3c0 <col:16> 'int' <LValueToRValue>
      |   | `-DeclRefExpr 0x14e80e380 <col:16> 'int' lvalue ParmVar 0x14e80ddd8 'h' 'int'
      |   `-IntegerLiteral 0x14e80e3a0 <col:21> 'int' 1
      |-CompoundStmt 0x14e8289c0 <col:25, line:19:5>
      | `-DoStmt 0x14e8289a0 <line:10:2, line:18:26>
      |   |-CompoundStmt 0x14e8288f0 <line:10:5, line:18:2>
      |   | |-IfStmt 0x14e828870 <line:11:6, line:16:6>
      |   | | |-CXXDependentScopeMemberExpr 0x14e827ee8 <line:11:10, col:19> '<dependent type>' contains-errors lvalue .coverage
      |   | | | `-ArraySubscriptExpr 0x14e827ec8 <col:10, col:17> '<dependent type>' contains-errors lvalue
      |   | | |   |-ImplicitCastExpr 0x14e827eb0 <col:10> '<dependent type>' contains-errors <LValueToRValue>
      |   | | |   | `-RecoveryExpr 0x14e827e70 <col:10> '<dependent type>' contains-errors lvalue
      |   | | |   `-IntegerLiteral 0x14e827e90 <col:16> 'int' 0
      |   | | `-CompoundStmt 0x14e828850 <col:29, line:16:6>
      |   | |   |-DeclStmt 0x14e828150 <line:12:3, col:36>
      |   | |   | `-VarDecl 0x14e827f48 <col:3, col:35> col:7 used len 'int' cinit
      |   | |   |   `-BinaryOperator 0x14e828130 <col:13, col:35> '<dependent type>' contains-errors '-'
      |   | |   |     |-CXXDependentScopeMemberExpr 0x14e828028 <col:13, col:22> '<dependent type>' contains-errors lvalue .x
      |   | |   |     | `-ArraySubscriptExpr 0x14e828008 <col:13, col:20> '<dependent type>' contains-errors lvalue
      |   | |   |     |   |-ImplicitCastExpr 0x14e827ff0 <col:13> '<dependent type>' contains-errors <LValueToRValue>
      |   | |   |     |   | `-RecoveryExpr 0x14e827fb0 <col:13> '<dependent type>' contains-errors lvalue
      |   | |   |     |   `-IntegerLiteral 0x14e827fd0 <col:19> 'int' 1
      |   | |   |     `-CXXDependentScopeMemberExpr 0x14e8280e8 <col:26, col:35> '<dependent type>' contains-errors lvalue .x
      |   | |   |       `-ArraySubscriptExpr 0x14e8280c8 <col:26, col:33> '<dependent type>' contains-errors lvalue
      |   | |   |         |-ImplicitCastExpr 0x14e8280b0 <col:26> '<dependent type>' contains-errors <LValueToRValue>
      |   | |   |         | `-RecoveryExpr 0x14e828070 <col:26> '<dependent type>' contains-errors lvalue
      |   | |   |         `-IntegerLiteral 0x14e828090 <col:32> 'int' 0
      |   | |   `-WhileStmt 0x14e828830 <line:14:3, line:15:24>
      |   | |     |-BinaryOperator 0x14e828550 <line:14:10, col:18> 'int' contains-errors '>'
      |   | |     | |-UnaryOperator 0x14e828518 <col:10, col:13> 'int' contains-errors postfix '--'
      |   | |     | | `-DeclRefExpr 0x14e8284f8 <col:10> 'int' contains-errors lvalue Var 0x14e827f48 'len' 'int'
      |   | |     | `-IntegerLiteral 0x14e828530 <col:18> 'int' 0
      |   | |     `-BinaryOperator 0x14e828810 <line:15:7, col:24> '<dependent type>' contains-errors '='
      |   | |       |-UnaryOperator 0x14e828700 <col:7, col:9> '<dependent type>' contains-errors prefix '*' cannot overflow
      |   | |       | `-UnaryOperator 0x14e8286e8 <col:8, col:9> '<dependent type>' contains-errors postfix '++' cannot overflow
      |   | |       |   `-RecoveryExpr 0x14e8286c8 <col:8> '<dependent type>' contains-errors lvalue
      |   | |       `-CXXDependentScopeMemberExpr 0x14e8287c8 <col:14, col:24> '<dependent type>' contains-errors lvalue .pixel
      |   | |         `-CXXDependentScopeMemberExpr 0x14e828780 <col:14, col:19> '<dependent type>' contains-errors lvalue .fill
      |   | |           `-CXXDependentScopeMemberExpr 0x14e828738 <col:14, col:17> '<dependent type>' contains-errors lvalue ->u
      |   | |             `-RecoveryExpr 0x14e828718 <col:14> '<dependent type>' contains-errors lvalue
      |   | `-UnaryOperator 0x14e8288d8 <line:17:6, col:11> '<dependent type>' contains-errors postfix '++' cannot overflow
      |   |   `-RecoveryExpr 0x14e8288b0 <col:6> '<dependent type>' contains-errors lvalue
      |   |     `-DeclRefExpr 0x14e828890 <col:6> 'const int *' lvalue ParmVar 0x14e80de70 'spans' 'const int *'
      |   `-BinaryOperator 0x14e828980 <line:18:11, col:25> 'int' '>'
      |     |-UnaryOperator 0x14e828930 <col:11, col:13> 'unsigned int' prefix '--'
      |     | `-DeclRefExpr 0x14e828910 <col:13> 'unsigned int' lvalue ParmVar 0x14e80def0 'num_spans' 'unsigned int'
      |     `-ImplicitCastExpr 0x14e828968 <col:25> 'unsigned int' <IntegralCast>
      |       `-IntegerLiteral 0x14e828948 <col:25> 'int' 1
      `-CompoundStmt 0x14e8298a8 <line:19:12, line:33:5>
        `-DoStmt 0x14e829888 <line:20:2, line:32:26>
          |-CompoundStmt 0x14e8297d8 <line:20:5, line:32:2>
          | |-IfStmt 0x14e829758 <line:21:6, line:30:6>
          | | |-CXXDependentScopeMemberExpr 0x14e828a50 <line:21:10, col:19> '<dependent type>' contains-errors lvalue .coverage
          | | | `-ArraySubscriptExpr 0x14e828a30 <col:10, col:17> '<dependent type>' contains-errors lvalue
          | | |   |-ImplicitCastExpr 0x14e828a18 <col:10> '<dependent type>' contains-errors <LValueToRValue>
          | | |   | `-RecoveryExpr 0x14e8289d8 <col:10> '<dependent type>' contains-errors lvalue
          | | |   `-IntegerLiteral 0x14e8289f8 <col:16> 'int' 0
          | | `-CompoundStmt 0x14e829738 <col:29, line:30:6>
          | |   |-DeclStmt 0x14e828c20 <line:22:3, col:21>
          | |   | |-VarDecl 0x14e828ab0 <col:3, col:12> col:7 used yy 'int' cinit
          | |   | | `-ImplicitCastExpr 0x14e828b38 <col:12> 'int' <LValueToRValue>
          | |   | |   `-DeclRefExpr 0x14e828b18 <col:12> 'int' lvalue ParmVar 0x14e80dd58 'y' 'int'
          | |   | `-VarDecl 0x14e828b68 <col:3, col:20> col:15 used hh 'int' cinit
          | |   |   `-ImplicitCastExpr 0x14e828bf0 <col:20> 'int' <LValueToRValue>
          | |   |     `-DeclRefExpr 0x14e828bd0 <col:20> 'int' lvalue ParmVar 0x14e80ddd8 'h' 'int'
          | |   `-DoStmt 0x14e829718 <line:23:3, line:29:16>
          | |     |-CompoundStmt 0x14e8296c0 <line:23:6, line:29:3>
          | |     | |-DeclStmt 0x14e829268 <line:24:7, col:40>
          | |     | | `-VarDecl 0x14e828c50 <col:7, col:39> col:11 used len 'int' cinit
          | |     | |   `-BinaryOperator 0x14e829248 <col:17, col:39> '<dependent type>' contains-errors '-'
          | |     | |     |-CXXDependentScopeMemberExpr 0x14e828d30 <col:17, col:26> '<dependent type>' contains-errors lvalue .x
          | |     | |     | `-ArraySubscriptExpr 0x14e828d10 <col:17, col:24> '<dependent type>' contains-errors lvalue
          | |     | |     |   |-ImplicitCastExpr 0x14e828cf8 <col:17> '<dependent type>' contains-errors <LValueToRValue>
          | |     | |     |   | `-RecoveryExpr 0x14e828cb8 <col:17> '<dependent type>' contains-errors lvalue
          | |     | |     |   `-IntegerLiteral 0x14e828cd8 <col:23> 'int' 1
          | |     | |     `-CXXDependentScopeMemberExpr 0x14e829200 <col:30, col:39> '<dependent type>' contains-errors lvalue .x
          | |     | |       `-ArraySubscriptExpr 0x14e828dd0 <col:30, col:37> '<dependent type>' contains-errors lvalue
          | |     | |         |-ImplicitCastExpr 0x14e828db8 <col:30> '<dependent type>' contains-errors <LValueToRValue>
          | |     | |         | `-RecoveryExpr 0x14e828d78 <col:30> '<dependent type>' contains-errors lvalue
          | |     | |         `-IntegerLiteral 0x14e828d98 <col:36> 'int' 0
          | |     | `-UnaryOperator 0x14e8296a8 <line:28:7, col:9> 'int' postfix '++'
          | |     |   `-DeclRefExpr 0x14e829688 <col:7> 'int' lvalue Var 0x14e828ab0 'yy' 'int'
          | |     `-UnaryOperator 0x14e829700 <line:29:12, col:14> 'int' prefix '--'
          | |       `-DeclRefExpr 0x14e8296e0 <col:14> 'int' lvalue Var 0x14e828b68 'hh' 'int'
          | `-UnaryOperator 0x14e8297c0 <line:31:6, col:11> '<dependent type>' contains-errors postfix '++' cannot overflow
          |   `-RecoveryExpr 0x14e829798 <col:6> '<dependent type>' contains-errors lvalue
          |     `-DeclRefExpr 0x14e829778 <col:6> 'const int *' lvalue ParmVar 0x14e80de70 'spans' 'const int *'
          `-BinaryOperator 0x14e829868 <line:32:11, col:25> 'int' '>'
            |-UnaryOperator 0x14e829818 <col:11, col:13> 'unsigned int' prefix '--'
            | `-DeclRefExpr 0x14e8297f8 <col:13> 'unsigned int' lvalue ParmVar 0x14e80def0 'num_spans' 'unsigned int'
            `-ImplicitCastExpr 0x14e829850 <col:25> 'unsigned int' <IntegralCast>
              `-IntegerLiteral 0x14e829830 <col:25> 'int' 1
