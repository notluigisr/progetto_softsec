`-FunctionDecl 0x1231281f8  line:1:1 invalid load_binfloat 'int (int *)'
  |-ParmVarDecl 0x123128128 <col:15, col:32> col:32 invalid self 'int *'
  `-CompoundStmt 0x1231420b8 <line:2:1, line:19:1>
    |-DeclStmt 0x123128340 <line:4:5, col:13>
    | `-VarDecl 0x1231282d8 <col:5, col:12> col:12 used x 'double'
    |-DeclStmt 0x1231283d8 <line:5:5, col:12>
    | `-VarDecl 0x123128370 <col:5, col:11> col:11 used s 'char *'
    |-IfStmt 0x1231286d8 <line:7:5, line:8:17>
    | |-BinaryOperator 0x123128670 <line:7:9, col:40> 'int' contains-errors '<'
    | | |-CallExpr 0x123128618 <col:9, col:36> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x123128550 <col:9> 'int ()' Function 0x123128498 '_Unpickler_Read' 'int ()'
    | | | |-RecoveryExpr 0x123128570 <col:25> '<dependent type>' contains-errors lvalue
    | | | |-UnaryOperator 0x1231285e0 <col:31, col:32> 'char **' prefix '&' cannot overflow
    | | | | `-DeclRefExpr 0x123128590 <col:32> 'char *' lvalue Var 0x123128370 's' 'char *'
    | | | `-IntegerLiteral 0x1231285f8 <col:35> 'int' 8
    | | `-IntegerLiteral 0x123128650 <col:40> 'int' 0
    | `-ReturnStmt 0x1231286c8 <line:8:9, col:17>
    |   `-UnaryOperator 0x1231286b0 <col:16, col:17> 'int' prefix '-'
    |     `-IntegerLiteral 0x123128690 <col:17> 'int' 1
    |-BinaryOperator 0x123141980 <line:10:5, col:47> 'double' '='
    | |-DeclRefExpr 0x1231286f8 <col:5> 'double' lvalue Var 0x1231282d8 'x' 'double'
    | `-ImplicitCastExpr 0x123141968 <col:9, col:47> 'double' <IntegralToFloating>
    |   `-CallExpr 0x123141938 <col:9, col:47> 'int'
    |     |-ImplicitCastExpr 0x123141920 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x123141800 <col:9> 'int ()' Function 0x123128740 '_PyFloat_Unpack8' 'int ()'
    |     |-CStyleCastExpr 0x1231418a0 <col:26, col:43> 'unsigned char *' <BitCast>
    |     | `-ImplicitCastExpr 0x123141888 <col:43> 'char *' <LValueToRValue> part_of_explicit_cast
    |     |   `-DeclRefExpr 0x123141820 <col:43> 'char *' lvalue Var 0x123128370 's' 'char *'
    |     `-IntegerLiteral 0x1231418c8 <col:46> 'int' 0
    |-IfStmt 0x123141bd0 <line:11:5, line:12:17>
    | |-BinaryOperator 0x123141b68 <line:11:9, col:37> 'int' '&&'
    | | |-BinaryOperator 0x123141a10 <col:9, col:15> 'int' '=='
    | | | |-ImplicitCastExpr 0x1231419f8 <col:9> 'double' <LValueToRValue>
    | | | | `-DeclRefExpr 0x1231419a0 <col:9> 'double' lvalue Var 0x1231282d8 'x' 'double'
    | | | `-UnaryOperator 0x1231419e0 <col:14, col:15> 'double' prefix '-'
    | | |   `-FloatingLiteral 0x1231419c0 <col:15> 'double' 1.000000e+00
    | | `-CallExpr 0x123141b48 <col:22, col:37> 'int'
    | |   `-ImplicitCastExpr 0x123141b30 <col:22> 'int (*)()' <FunctionToPointerDecay>
    | |     `-DeclRefExpr 0x123141b10 <col:22> 'int ()' Function 0x123141a58 'PyErr_Occurred' 'int ()'
    | `-ReturnStmt 0x123141bc0 <line:12:9, col:17>
    |   `-UnaryOperator 0x123141ba8 <col:16, col:17> 'int' prefix '-'
    |     `-IntegerLiteral 0x123141b88 <col:17> 'int' 1
    |-IfStmt 0x123141e20 <line:14:5, line:15:17>
    | |-RecoveryExpr 0x123141db8 <line:14:9, col:44> '_Bool' contains-errors
    | `-ReturnStmt 0x123141e10 <line:15:9, col:17>
    |   `-UnaryOperator 0x123141df8 <col:16, col:17> 'int' prefix '-'
    |     `-IntegerLiteral 0x123141dd8 <col:17> 'int' 1
    |-CallExpr 0x123142050 <line:17:5, col:38> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x123141f20 <col:5> 'int ()' Function 0x123141e68 'PDATA_PUSH' 'int ()'
    | |-CXXDependentScopeMemberExpr 0x123141f60 <col:16, col:22> '<dependent type>' contains-errors lvalue ->stack
    | | `-RecoveryExpr 0x123141f40 <col:16> '<dependent type>' contains-errors lvalue
    | |-RecoveryExpr 0x123142030 <col:29> '<dependent type>' contains-errors lvalue
    | `-UnaryOperator 0x123141fe0 <col:36, col:37> 'int' prefix '-'
    |   `-IntegerLiteral 0x123141fc0 <col:37> 'int' 1
    `-ReturnStmt 0x1231420a8 <line:18:5, col:12>
      `-IntegerLiteral 0x123142088 <col:12> 'int' 0
