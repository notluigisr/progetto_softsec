`-FunctionDecl 0x120928280  line:1:6 invalid mi_disable_non_unique_index 'void (int *, int)'
  |-ParmVarDecl 0x120928128 <col:34, col:43> col:43 referenced invalid info 'int *'
  |-ParmVarDecl 0x1209281a8 <col:49, col:57> col:57 invalid rows 'int'
  `-CompoundStmt 0x121009d30 <line:2:1, line:18:1>
    |-DeclStmt 0x1209284b0 <line:5:3, col:18>
    | `-VarDecl 0x120928448 <col:3, col:17> col:17 used i 'int'
    `-ForStmt 0x121009cf8 <line:9:3, line:17:3>
      |-BinaryOperator 0x121009270 <line:9:8, col:10> 'int' '='
      | |-DeclRefExpr 0x121009230 <col:8> 'int' lvalue Var 0x120928448 'i' 'int'
      | `-IntegerLiteral 0x121009250 <col:10> 'int' 0
      |-<<<NULL>>>
      |-BinaryOperator 0x121009428 <col:14, col:30> 'int' contains-errors '<'
      | |-DeclRefExpr 0x121009290 <col:14> 'int' lvalue Var 0x120928448 'i' 'int'
      | `-CXXDependentScopeMemberExpr 0x1210093e0 <col:18, col:30> '<dependent type>' contains-errors lvalue .keys
      |   `-CXXDependentScopeMemberExpr 0x121009398 <col:18, col:25> '<dependent type>' contains-errors lvalue ->base
      |     `-RecoveryExpr 0x121009378 <col:18> '<dependent type>' contains-errors lvalue
      |-BinaryOperator 0x121009508 <col:37, col:44> '<dependent type>' contains-errors ','
      | |-UnaryOperator 0x121009468 <col:37, col:38> 'int' postfix '++'
      | | `-DeclRefExpr 0x121009448 <col:37> 'int' lvalue Var 0x120928448 'i' 'int'
      | `-UnaryOperator 0x1210094f0 <col:41, col:44> '<dependent type>' contains-errors postfix '++' cannot overflow
      |   `-RecoveryExpr 0x1210094d0 <col:41> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x121009ce0 <line:10:3, line:17:3>
        `-IfStmt 0x121009cc0 <line:11:5, line:16:5>
          |-RecoveryExpr 0x121009920 <line:11:9, line:12:76> '_Bool' contains-errors
          `-CompoundStmt 0x121009ca8 <line:13:5, line:16:5>
            `-CallExpr 0x121009be8 <line:14:7, col:50> '<dependent type>' contains-errors
              |-DeclRefExpr 0x121009a20 <col:7> 'int ()' Function 0x121009968 'mi_clear_key_active' 'int ()'
              |-CXXDependentScopeMemberExpr 0x121009ba0 <col:27, col:40> '<dependent type>' contains-errors lvalue .key_map
              | `-CXXDependentScopeMemberExpr 0x121009b58 <col:27, col:34> '<dependent type>' contains-errors lvalue ->state
              |   `-RecoveryExpr 0x121009b38 <col:27> '<dependent type>' contains-errors lvalue
              `-DeclRefExpr 0x121009ae8 <col:49> 'int' lvalue Var 0x120928448 'i' 'int'
