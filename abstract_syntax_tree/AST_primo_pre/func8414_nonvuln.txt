`-FunctionDecl 0x12c80e220  line:1:13 invalid addWhereTerm 'void (int *, int *, int, int, int, int, int, int **)' static
  |-ParmVarDecl 0x12c80dd28 <line:2:3, col:10> col:10 invalid pParse 'int *'
  |-ParmVarDecl 0x12c80dda8 <line:3:3, col:12> col:12 invalid pSrc 'int *'
  |-ParmVarDecl 0x12c80de28 <line:4:3, col:7> col:7 used iLeft 'int'
  |-ParmVarDecl 0x12c80dea8 <line:5:3, col:7> col:7 used iColLeft 'int'
  |-ParmVarDecl 0x12c80df28 <line:6:3, col:7> col:7 used iRight 'int'
  |-ParmVarDecl 0x12c80dfa8 <line:7:3, col:7> col:7 used iColRight 'int'
  |-ParmVarDecl 0x12c80e028 <line:8:3, col:7> col:7 used isOuterJoin 'int'
  |-ParmVarDecl 0x12c80e0e0 <line:9:3, col:10> col:10 invalid ppWhere 'int **'
  `-CompoundStmt 0x12c8283c8 <line:10:2, line:32:1>
    |-CallExpr 0x12c827658 <line:16:3, col:24> 'int'
    | |-ImplicitCastExpr 0x12c827640 <col:3> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x12c827560 <col:3> 'int ()' Function 0x12c8274a8 'assert' 'int ()'
    | `-BinaryOperator 0x12c8275f0 <col:11, col:17> 'int' '<'
    |   |-ImplicitCastExpr 0x12c8275c0 <col:11> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x12c827580 <col:11> 'int' lvalue ParmVar 0x12c80de28 'iLeft' 'int'
    |   `-ImplicitCastExpr 0x12c8275d8 <col:17> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x12c8275a0 <col:17> 'int' lvalue ParmVar 0x12c80df28 'iRight' 'int'
    |-CallExpr 0x12c827748 <line:17:3, col:29> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12c827680 <col:3> 'int ()' Function 0x12c8274a8 'assert' 'int ()'
    | `-BinaryOperator 0x12c827728 <col:11, col:22> 'int' contains-errors '>'
    |   |-CXXDependentScopeMemberExpr 0x12c8276c0 <col:11, col:17> '<dependent type>' contains-errors lvalue ->nSrc
    |   | `-RecoveryExpr 0x12c8276a0 <col:11> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x12c827708 <col:22> 'int' lvalue ParmVar 0x12c80df28 'iRight' 'int'
    |-CallExpr 0x12c8278b0 <line:18:3, col:31> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12c827770 <col:3> 'int ()' Function 0x12c8274a8 'assert' 'int ()'
    | `-CXXDependentScopeMemberExpr 0x12c827868 <col:11, col:26> '<dependent type>' contains-errors lvalue .pTab
    |   `-ArraySubscriptExpr 0x12c827848 <col:11, col:24> '<dependent type>' contains-errors lvalue
    |     |-ImplicitCastExpr 0x12c827818 <col:11, col:17> '<dependent type>' contains-errors <LValueToRValue>
    |     | `-CXXDependentScopeMemberExpr 0x12c8277b0 <col:11, col:17> '<dependent type>' contains-errors lvalue ->a
    |     |   `-RecoveryExpr 0x12c827790 <col:11> '<dependent type>' contains-errors lvalue
    |     `-ImplicitCastExpr 0x12c827830 <col:19> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x12c8277f8 <col:19> 'int' lvalue ParmVar 0x12c80de28 'iLeft' 'int'
    |-CallExpr 0x12c827a18 <line:19:3, col:32> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12c8278d8 <col:3> 'int ()' Function 0x12c8274a8 'assert' 'int ()'
    | `-CXXDependentScopeMemberExpr 0x12c8279d0 <col:11, col:27> '<dependent type>' contains-errors lvalue .pTab
    |   `-ArraySubscriptExpr 0x12c8279b0 <col:11, col:25> '<dependent type>' contains-errors lvalue
    |     |-ImplicitCastExpr 0x12c827980 <col:11, col:17> '<dependent type>' contains-errors <LValueToRValue>
    |     | `-CXXDependentScopeMemberExpr 0x12c827918 <col:11, col:17> '<dependent type>' contains-errors lvalue ->a
    |     |   `-RecoveryExpr 0x12c8278f8 <col:11> '<dependent type>' contains-errors lvalue
    |     `-ImplicitCastExpr 0x12c827998 <col:19> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x12c827960 <col:19> 'int' lvalue ParmVar 0x12c80df28 'iRight' 'int'
    `-IfStmt 0x12c8281e8 <line:25:3, line:30:3>
      |-RecoveryExpr 0x12c827e98 <line:25:7, col:14> '_Bool' contains-errors
      `-CompoundStmt 0x12c8281d8 <col:27, line:30:3>
