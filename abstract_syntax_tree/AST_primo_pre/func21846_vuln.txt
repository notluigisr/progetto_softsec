`-FunctionDecl 0x14601f3c8  line:1:1 invalid read_16 'int (int)'
  |-ParmVarDecl 0x14601f2f0 <col:10, col:16> col:16 invalid inp 'int'
  `-CompoundStmt 0x14601f870 <line:2:1, line:7:1>
    |-DeclStmt 0x14601f4f8 <line:3:3, col:19>
    | `-VarDecl 0x14601f490 <col:3, col:18> col:18 used a 'unsigned short'
    |-BinaryOperator 0x14601f738 <line:4:3, col:32> 'unsigned short' contains-errors '='
    | |-DeclRefExpr 0x14601f510 <col:3> 'unsigned short' lvalue Var 0x14601f490 'a' 'unsigned short'
    | `-BinaryOperator 0x14601f718 <col:7, col:32> '<dependent type>' contains-errors '<<'
    |   |-CallExpr 0x14601f6d0 <col:7, col:27> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x14601f690 <col:7> 'int ()' Function 0x14601f5d8 'iobuf_get_noeof' 'int ()'
    |   | `-RecoveryExpr 0x14601f6b0 <col:24> '<dependent type>' contains-errors lvalue
    |   `-IntegerLiteral 0x14601f6f8 <col:32> 'int' 8
    |-CompoundAssignOperator 0x14601f7e0 <line:5:3, col:28> 'unsigned short' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | |-DeclRefExpr 0x14601f758 <col:3> 'unsigned short' lvalue Var 0x14601f490 'a' 'unsigned short'
    | `-CallExpr 0x14601f7b8 <col:8, col:28> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14601f778 <col:8> 'int ()' Function 0x14601f5d8 'iobuf_get_noeof' 'int ()'
    |   `-RecoveryExpr 0x14601f798 <col:25> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x14601f860 <line:6:3, col:10>
      `-ImplicitCastExpr 0x14601f848 <col:10> 'int' <IntegralCast>
        `-ImplicitCastExpr 0x14601f830 <col:10> 'unsigned short' <LValueToRValue>
          `-DeclRefExpr 0x14601f810 <col:10> 'unsigned short' lvalue Var 0x14601f490 'a' 'unsigned short'
