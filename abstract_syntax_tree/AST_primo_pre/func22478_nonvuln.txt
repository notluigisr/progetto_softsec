`-FunctionDecl 0x10180ddc8  line:1:21 invalid mp_complex_tan 'double (int)' static
  |-ParmVarDecl 0x10180dcf0 <col:36, <invalid sloc>> col:53 invalid 'int'
  `-CompoundStmt 0x10300a828 <col:59, line:7:7>
    |-DeclStmt 0x10180e308 <line:2:9, col:71>
    | |-VarDecl 0x10180de90 <col:9, col:38> col:22 real 'const double' cinit
    | | `-ImplicitCastExpr 0x10180e100 <col:29, col:38> 'double' <IntegralToFloating>
    | |   `-CallExpr 0x10180e0d8 <col:29, col:38> 'int'
    | |     |-ImplicitCastExpr 0x10180e0c0 <col:29> 'int (*)()' <FunctionToPointerDecay>
    | |     | `-DeclRefExpr 0x10180e050 <col:29> 'int ()' Function 0x10180df98 '_mp_arg' 'int ()'
    | |     `-IntegerLiteral 0x10180e070 <col:37> 'int' 2
    | |-VarDecl 0x10180e130 <col:9, col:57> col:41 used imag 'const double' cinit
    | | `-ImplicitCastExpr 0x10180e218 <col:48, col:57> 'double' <IntegralToFloating>
    | |   `-CallExpr 0x10180e1f0 <col:48, col:57> 'int'
    | |     |-ImplicitCastExpr 0x10180e1d8 <col:48> 'int (*)()' <FunctionToPointerDecay>
    | |     | `-DeclRefExpr 0x10180e198 <col:48> 'int ()' Function 0x10180df98 '_mp_arg' 'int ()'
    | |     `-IntegerLiteral 0x10180e1b8 <col:56> 'int' 3
    | `-VarDecl 0x10180e248 <col:9, col:68> col:60 denom 'const double' cinit
    |   `-RecoveryExpr 0x10180e2c8 <col:68> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x10300a4e8 <line:3:9, col:39>
    | `-VarDecl 0x10180e368 <col:9, col:38> col:17 used ptrd 'double *' cinit
    |   `-BinaryOperator 0x10300a4c8 <col:36, col:38> '<dependent type>' contains-errors '+'
    |     |-RecoveryExpr 0x10300a480 <col:36, col:34> '<dependent type>' contains-errors lvalue
    |     | `-CallExpr 0x10300a038 <col:25, col:34> 'int'
    |     |   |-ImplicitCastExpr 0x10300a020 <col:25> 'int (*)()' <FunctionToPointerDecay>
    |     |   | `-DeclRefExpr 0x10180e3d0 <col:25> 'int ()' Function 0x10180df98 '_mp_arg' 'int ()'
    |     |   `-IntegerLiteral 0x10300a000 <col:33> 'int' 1
    |     `-IntegerLiteral 0x10300a4a8 <col:38> 'int' 1
    |-BinaryOperator 0x10300a640 <line:4:9, col:19> 'double' contains-errors '='
    | |-ArraySubscriptExpr 0x10300a600 <col:9, col:15> 'double' contains-errors lvalue
    | | |-ImplicitCastExpr 0x10300a5e8 <col:9> 'double *' contains-errors <LValueToRValue>
    | | | `-DeclRefExpr 0x10300a500 <col:9> 'double *' contains-errors lvalue Var 0x10180e368 'ptrd' 'double *'
    | | `-IntegerLiteral 0x10300a520 <col:14> 'int' 0
    | `-RecoveryExpr 0x10300a620 <col:19> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x10300a7a0 <line:5:9, col:19> 'double' contains-errors '='
    | |-ArraySubscriptExpr 0x10300a760 <col:9, col:15> 'double' contains-errors lvalue
    | | |-ImplicitCastExpr 0x10300a748 <col:9> 'double *' contains-errors <LValueToRValue>
    | | | `-DeclRefExpr 0x10300a660 <col:9> 'double *' contains-errors lvalue Var 0x10180e368 'ptrd' 'double *'
    | | `-IntegerLiteral 0x10300a680 <col:14> 'int' 1
    | `-RecoveryExpr 0x10300a780 <col:19> '<dependent type>' contains-errors lvalue
    |-ReturnStmt 0x10300a810 <line:6:9, col:16>
    | `-ImplicitCastExpr 0x10300a7f8 <col:16> 'double' <LValueToRValue>
    |   `-DeclRefExpr 0x10300a7d8 <col:16> 'const double' lvalue Var 0x10180e130 'imag' 'const double'
    `-NullStmt 0x10300a820 <col:41>
