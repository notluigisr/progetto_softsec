`-FunctionDecl 0x13d0267d8  line:1:1 skb_zerocopy 'int (struct sk_buff *, const struct sk_buff *, int, int)'
  |-ParmVarDecl 0x13d00e248 <col:14, col:30> col:30 used to 'struct sk_buff *'
  |-ParmVarDecl 0x13d00e368 <col:34, col:56> col:56 used from 'const struct sk_buff *'
  |-ParmVarDecl 0x13d026600 <col:62, col:66> col:66 used len 'int'
  |-ParmVarDecl 0x13d026680 <col:71, col:75> col:75 used hlen 'int'
  `-CompoundStmt 0x13d0318e0 <line:2:1, line:45:1>
    |-DeclStmt 0x13d026a20 <line:3:2, col:14>
    | |-VarDecl 0x13d026900 <col:2, col:6> col:6 used i 'int'
    | `-VarDecl 0x13d026980 <col:2, col:13> col:9 used j 'int' cinit
    |   `-IntegerLiteral 0x13d0269e8 <col:13> 'int' 0
    |-DeclStmt 0x13d026ad8 <line:4:2, col:14>
    | `-VarDecl 0x13d026a50 <col:2, col:13> col:6 used plen 'int' cinit
    |   `-IntegerLiteral 0x13d026ab8 <col:13> 'int' 0
    |-DeclStmt 0x13d026cd8 <line:5:2, col:19>
    | |-RecordDecl 0x13d026af0 <col:2, col:9> col:9 struct page
    | `-VarDecl 0x13d026c58 <col:2, col:15> col:15 used page 'struct page *'
    |-DeclStmt 0x13d026d70 <line:6:2, col:21>
    | `-VarDecl 0x13d026d08 <col:2, col:15> col:15 used offset 'unsigned int'
    |-CallExpr 0x13d026fd0 <line:8:2, col:34> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13d026eb0 <col:2> 'int ()' Function 0x13d026df8 'BUG_ON' 'int ()'
    | `-BinaryOperator 0x13d026fb0 <col:9, col:30> 'int' contains-errors '&&'
    |   |-UnaryOperator 0x13d026f48 <col:9, col:16> '<dependent type>' contains-errors prefix '!' cannot overflow
    |   | `-ImplicitCastExpr 0x13d026f30 <col:10, col:16> '<dependent type>' contains-errors <LValueToRValue>
    |   |   `-RecoveryExpr 0x13d026f08 <col:10, col:16> '<dependent type>' contains-errors lvalue
    |   |     `-DeclRefExpr 0x13d026ed0 <col:10> 'const struct sk_buff *' lvalue ParmVar 0x13d00e368 'from' 'const struct sk_buff *'
    |   `-UnaryOperator 0x13d026f98 <col:29, col:30> 'int' prefix '!' cannot overflow
    |     `-ImplicitCastExpr 0x13d026f80 <col:30> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x13d026f60 <col:30> 'int' lvalue ParmVar 0x13d026680 'hlen' 'int'
    |-IfStmt 0x13d0275d0 <line:11:2, line:14:2>
    | |-BinaryOperator 0x13d0271e0 <line:11:6, col:28> 'int' '<='
    | | |-ImplicitCastExpr 0x13d0271c8 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x13d026ff8 <col:6> 'int' lvalue ParmVar 0x13d026600 'len' 'int'
    | | `-CallExpr 0x13d027188 <col:13, col:28> 'int'
    | |   |-ImplicitCastExpr 0x13d027170 <col:13> 'int (*)()' <FunctionToPointerDecay>
    | |   | `-DeclRefExpr 0x13d0270f8 <col:13> 'int ()' Function 0x13d027040 'skb_tailroom' 'int ()'
    | |   `-ImplicitCastExpr 0x13d0271b0 <col:26> 'struct sk_buff *' <LValueToRValue>
    | |     `-DeclRefExpr 0x13d027118 <col:26> 'struct sk_buff *' lvalue ParmVar 0x13d00e248 'to' 'struct sk_buff *'
    | `-CompoundStmt 0x13d0275b0 <col:31, line:14:2>
    |   |-CallExpr 0x13d027530 <line:12:3, col:47> 'int'
    |   | |-ImplicitCastExpr 0x13d027518 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x13d0272e0 <col:3> 'int ()' Function 0x13d027228 'skb_copy_bits' 'int ()'
    |   | |-ImplicitCastExpr 0x13d027570 <col:17> 'const struct sk_buff *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x13d027300 <col:17> 'const struct sk_buff *' lvalue ParmVar 0x13d00e368 'from' 'const struct sk_buff *'
    |   | |-IntegerLiteral 0x13d027320 <col:23> 'int' 0
    |   | |-CallExpr 0x13d027498 <col:26, col:41> 'int'
    |   | | |-ImplicitCastExpr 0x13d027480 <col:26> 'int (*)()' <FunctionToPointerDecay>
    |   | | | `-DeclRefExpr 0x13d027420 <col:26> 'int ()' Function 0x13d027368 'skb_put' 'int ()'
    |   | | |-ImplicitCastExpr 0x13d0274c8 <col:34> 'struct sk_buff *' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x13d027440 <col:34> 'struct sk_buff *' lvalue ParmVar 0x13d00e248 'to' 'struct sk_buff *'
    |   | | `-ImplicitCastExpr 0x13d0274e0 <col:38> 'int' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x13d027460 <col:38> 'int' lvalue ParmVar 0x13d026600 'len' 'int'
    |   | `-ImplicitCastExpr 0x13d027588 <col:44> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x13d0274f8 <col:44> 'int' lvalue ParmVar 0x13d026600 'len' 'int'
    |   `-ReturnStmt 0x13d0275a0 <line:13:3>
    |-IfStmt 0x13d02a958 <line:16:2, line:29:2> has_else
    | |-ImplicitCastExpr 0x13d029a20 <line:16:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x13d029a00 <col:6> 'int' lvalue ParmVar 0x13d026680 'hlen' 'int'
    | |-CompoundStmt 0x13d029ca0 <col:12, line:19:2>
    | | |-CallExpr 0x13d029ba8 <line:17:3, col:49> 'int'
    | | | |-ImplicitCastExpr 0x13d029b90 <col:3> 'int (*)()' <FunctionToPointerDecay>
    | | | | `-DeclRefExpr 0x13d029a38 <col:3> 'int ()' Function 0x13d027228 'skb_copy_bits' 'int ()'
    | | | |-ImplicitCastExpr 0x13d029be8 <col:17> 'const struct sk_buff *' <LValueToRValue>
    | | | | `-DeclRefExpr 0x13d029a58 <col:17> 'const struct sk_buff *' lvalue ParmVar 0x13d00e368 'from' 'const struct sk_buff *'
    | | | |-IntegerLiteral 0x13d029a78 <col:23> 'int' 0
    | | | |-CallExpr 0x13d029b10 <col:26, col:42> 'int'
    | | | | |-ImplicitCastExpr 0x13d029af8 <col:26> 'int (*)()' <FunctionToPointerDecay>
    | | | | | `-DeclRefExpr 0x13d029a98 <col:26> 'int ()' Function 0x13d027368 'skb_put' 'int ()'
    | | | | |-ImplicitCastExpr 0x13d029b40 <col:34> 'struct sk_buff *' <LValueToRValue>
    | | | | | `-DeclRefExpr 0x13d029ab8 <col:34> 'struct sk_buff *' lvalue ParmVar 0x13d00e248 'to' 'struct sk_buff *'
    | | | | `-ImplicitCastExpr 0x13d029b58 <col:38> 'int' <LValueToRValue>
    | | | |   `-DeclRefExpr 0x13d029ad8 <col:38> 'int' lvalue ParmVar 0x13d026680 'hlen' 'int'
    | | | `-ImplicitCastExpr 0x13d029c00 <col:45> 'int' <LValueToRValue>
    | | |   `-DeclRefExpr 0x13d029b70 <col:45> 'int' lvalue ParmVar 0x13d026680 'hlen' 'int'
    | | `-CompoundAssignOperator 0x13d029c70 <line:18:3, col:10> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
    | |   |-DeclRefExpr 0x13d029c18 <col:3> 'int' lvalue ParmVar 0x13d026600 'len' 'int'
    | |   `-ImplicitCastExpr 0x13d029c58 <col:10> 'int' <LValueToRValue>
    | |     `-DeclRefExpr 0x13d029c38 <col:10> 'int' lvalue ParmVar 0x13d026680 'hlen' 'int'
    | `-CompoundStmt 0x13d02a940 <line:19:9, line:29:2>
    |   `-IfStmt 0x13d02a920 <line:21:3, line:28:3>
    |     |-ImplicitCastExpr 0x13d029f98 <line:21:7> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x13d029f78 <col:7> 'int' lvalue Var 0x13d026a50 'plen' 'int'
    |     `-CompoundStmt 0x13d02a8e0 <col:13, line:28:3>
    |       |-BinaryOperator 0x13d02a158 <line:22:4, col:39> 'struct page *' contains-errors '='
    |       | |-DeclRefExpr 0x13d029fb0 <col:4> 'struct page *' lvalue Var 0x13d026c58 'page' 'struct page *'
    |       | `-CallExpr 0x13d02a130 <col:11, col:39> '<dependent type>' contains-errors
    |       |   |-DeclRefExpr 0x13d02a0b0 <col:11> 'int ()' Function 0x13d029ff8 'virt_to_head_page' 'int ()'
    |       |   `-RecoveryExpr 0x13d02a108 <col:29, col:35> '<dependent type>' contains-errors lvalue
    |       |     `-DeclRefExpr 0x13d02a0d0 <col:29> 'const struct sk_buff *' lvalue ParmVar 0x13d00e368 'from' 'const struct sk_buff *'
    |       |-BinaryOperator 0x13d02a400 <line:23:4, col:60> 'unsigned int' contains-errors '='
    |       | |-DeclRefExpr 0x13d02a178 <col:4> 'unsigned int' lvalue Var 0x13d026d08 'offset' 'unsigned int'
    |       | `-BinaryOperator 0x13d02a3e0 <col:13, col:60> '<dependent type>' contains-errors '-'
    |       |   |-RecoveryExpr 0x13d02a1d0 <col:13, col:19> '<dependent type>' contains-errors lvalue
    |       |   | `-DeclRefExpr 0x13d02a198 <col:13> 'const struct sk_buff *' lvalue ParmVar 0x13d00e368 'from' 'const struct sk_buff *'
    |       |   `-CStyleCastExpr 0x13d02a3b8 <col:26, col:60> 'unsigned char *' <IntegralToPointer>
    |       |     `-CallExpr 0x13d02a330 <col:43, col:60> 'int'
    |       |       |-ImplicitCastExpr 0x13d02a318 <col:43> 'int (*)()' <FunctionToPointerDecay>
    |       |       | `-DeclRefExpr 0x13d02a2d8 <col:43> 'int ()' Function 0x13d02a220 'page_address' 'int ()'
    |       |       `-ImplicitCastExpr 0x13d02a358 <col:56> 'struct page *' <LValueToRValue>
    |       |         `-DeclRefExpr 0x13d02a2f8 <col:56> 'struct page *' lvalue Var 0x13d026c58 'page' 'struct page *'
    |       |-CallExpr 0x13d02a5d8 <line:24:4, col:50> 'int'
    |       | |-ImplicitCastExpr 0x13d02a5c0 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |       | | `-DeclRefExpr 0x13d02a500 <col:4> 'int ()' Function 0x13d02a448 '__skb_fill_page_desc' 'int ()'
    |       | |-ImplicitCastExpr 0x13d02a620 <col:25> 'struct sk_buff *' <LValueToRValue>
    |       | | `-DeclRefExpr 0x13d02a520 <col:25> 'struct sk_buff *' lvalue ParmVar 0x13d00e248 'to' 'struct sk_buff *'
    |       | |-IntegerLiteral 0x13d02a540 <col:29> 'int' 0
    |       | |-ImplicitCastExpr 0x13d02a638 <col:32> 'struct page *' <LValueToRValue>
    |       | | `-DeclRefExpr 0x13d02a560 <col:32> 'struct page *' lvalue Var 0x13d026c58 'page' 'struct page *'
    |       | |-ImplicitCastExpr 0x13d02a650 <col:38> 'unsigned int' <LValueToRValue>
    |       | | `-DeclRefExpr 0x13d02a580 <col:38> 'unsigned int' lvalue Var 0x13d026d08 'offset' 'unsigned int'
    |       | `-ImplicitCastExpr 0x13d02a668 <col:46> 'int' <LValueToRValue>
    |       |   `-DeclRefExpr 0x13d02a5a0 <col:46> 'int' lvalue Var 0x13d026a50 'plen' 'int'
    |       |-CallExpr 0x13d02a7b8 <line:25:4, col:17> 'int'
    |       | |-ImplicitCastExpr 0x13d02a7a0 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |       | | `-DeclRefExpr 0x13d02a760 <col:4> 'int ()' Function 0x13d02a6a8 'get_page' 'int ()'
    |       | `-ImplicitCastExpr 0x13d02a7e0 <col:13> 'struct page *' <LValueToRValue>
    |       |   `-DeclRefExpr 0x13d02a780 <col:13> 'struct page *' lvalue Var 0x13d026c58 'page' 'struct page *'
    |       |-BinaryOperator 0x13d02a838 <line:26:4, col:8> 'int' '='
    |       | |-DeclRefExpr 0x13d02a7f8 <col:4> 'int' lvalue Var 0x13d026980 'j' 'int'
    |       | `-IntegerLiteral 0x13d02a818 <col:8> 'int' 1
    |       `-CompoundAssignOperator 0x13d02a8b0 <line:27:4, col:11> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
    |         |-DeclRefExpr 0x13d02a858 <col:4> 'int' lvalue ParmVar 0x13d026600 'len' 'int'
    |         `-ImplicitCastExpr 0x13d02a898 <col:11> 'int' <LValueToRValue>
    |           `-DeclRefExpr 0x13d02a878 <col:11> 'int' lvalue Var 0x13d026a50 'plen' 'int'
    |-CompoundAssignOperator 0x13d030890 <line:31:2, col:24> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | |-RecoveryExpr 0x13d02a9c0 <col:2, col:6> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x13d02a988 <col:2> 'struct sk_buff *' lvalue ParmVar 0x13d00e248 'to' 'struct sk_buff *'
    | `-BinaryOperator 0x13d030870 <col:18, col:24> 'int' '+'
    |   |-ImplicitCastExpr 0x13d030840 <col:18> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x13d030800 <col:18> 'int' lvalue ParmVar 0x13d026600 'len' 'int'
    |   `-ImplicitCastExpr 0x13d030858 <col:24> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x13d030820 <col:24> 'int' lvalue Var 0x13d026a50 'plen' 'int'
    |-CompoundAssignOperator 0x13d0309b0 <line:32:2, col:19> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | |-RecoveryExpr 0x13d0308f8 <col:2, col:6> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x13d0308c0 <col:2> 'struct sk_buff *' lvalue ParmVar 0x13d00e248 'to' 'struct sk_buff *'
    | `-BinaryOperator 0x13d030990 <col:13, col:19> 'int' '+'
    |   |-ImplicitCastExpr 0x13d030960 <col:13> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x13d030920 <col:13> 'int' lvalue ParmVar 0x13d026600 'len' 'int'
    |   `-ImplicitCastExpr 0x13d030978 <col:19> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x13d030940 <col:19> 'int' lvalue Var 0x13d026a50 'plen' 'int'
    |-CompoundAssignOperator 0x13d030ad0 <line:33:2, col:24> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | |-RecoveryExpr 0x13d030a18 <col:2, col:6> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x13d0309e0 <col:2> 'struct sk_buff *' lvalue ParmVar 0x13d00e248 'to' 'struct sk_buff *'
    | `-BinaryOperator 0x13d030ab0 <col:18, col:24> 'int' '+'
    |   |-ImplicitCastExpr 0x13d030a80 <col:18> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x13d030a40 <col:18> 'int' lvalue ParmVar 0x13d026600 'len' 'int'
    |   `-ImplicitCastExpr 0x13d030a98 <col:24> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x13d030a60 <col:24> 'int' lvalue Var 0x13d026a50 'plen' 'int'
    |-ForStmt 0x13d031790 <line:35:2, line:43:2>
    | |-BinaryOperator 0x13d030b40 <line:35:7, col:11> 'int' '='
    | | |-DeclRefExpr 0x13d030b00 <col:7> 'int' lvalue Var 0x13d026900 'i' 'int'
    | | `-IntegerLiteral 0x13d030b20 <col:11> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x13d030d20 <col:14, col:36> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x13d030b60 <col:14> 'int' lvalue Var 0x13d026900 'i' 'int'
    | | `-RecoveryExpr 0x13d030cf8 <col:18, col:36> '<dependent type>' contains-errors lvalue
    | |   `-CallExpr 0x13d030cb8 <col:18, col:33> 'int'
    | |     |-ImplicitCastExpr 0x13d030ca0 <col:18> 'int (*)()' <FunctionToPointerDecay>
    | |     | `-DeclRefExpr 0x13d030c60 <col:18> 'int ()' Function 0x13d030ba8 'skb_shinfo' 'int ()'
    | |     `-ImplicitCastExpr 0x13d030ce0 <col:29> 'const struct sk_buff *' <LValueToRValue>
    | |       `-DeclRefExpr 0x13d030c80 <col:29> 'const struct sk_buff *' lvalue ParmVar 0x13d00e368 'from' 'const struct sk_buff *'
    | |-UnaryOperator 0x13d030d60 <col:46, col:47> 'int' postfix '++'
    | | `-DeclRefExpr 0x13d030d40 <col:46> 'int' lvalue Var 0x13d026900 'i' 'int'
    | `-CompoundStmt 0x13d031758 <col:51, line:43:2>
    |   |-IfStmt 0x13d030dd0 <line:36:3, line:37:4>
    |   | |-UnaryOperator 0x13d030db0 <line:36:7, col:8> 'int' prefix '!' cannot overflow
    |   | | `-ImplicitCastExpr 0x13d030d98 <col:8> 'int' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x13d030d78 <col:8> 'int' lvalue ParmVar 0x13d026600 'len' 'int'
    |   | `-BreakStmt 0x13d030dc8 <line:37:4>
    |   |-BinaryOperator 0x13d031050 <line:38:3, col:55> '<dependent type>' contains-errors '='
    |   | |-ArraySubscriptExpr 0x13d030f00 <col:3, col:26> '<dependent type>' contains-errors lvalue
    |   | | |-ImplicitCastExpr 0x13d030ed0 <col:3, col:19> '<dependent type>' contains-errors <LValueToRValue>
    |   | | | `-RecoveryExpr 0x13d030e88 <col:3, col:19> '<dependent type>' contains-errors lvalue
    |   | | |   `-CallExpr 0x13d030e48 <col:3, col:16> 'int'
    |   | | |     |-ImplicitCastExpr 0x13d030e30 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | |     | `-DeclRefExpr 0x13d030df0 <col:3> 'int ()' Function 0x13d030ba8 'skb_shinfo' 'int ()'
    |   | | |     `-ImplicitCastExpr 0x13d030e70 <col:14> 'struct sk_buff *' <LValueToRValue>
    |   | | |       `-DeclRefExpr 0x13d030e10 <col:14> 'struct sk_buff *' lvalue ParmVar 0x13d00e248 'to' 'struct sk_buff *'
    |   | | `-ImplicitCastExpr 0x13d030ee8 <col:25> 'int' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x13d030eb0 <col:25> 'int' lvalue Var 0x13d026980 'j' 'int'
    |   | `-ArraySubscriptExpr 0x13d031030 <col:30, col:55> '<dependent type>' contains-errors lvalue
    |   |   |-ImplicitCastExpr 0x13d031000 <col:30, col:48> '<dependent type>' contains-errors <LValueToRValue>
    |   |   | `-RecoveryExpr 0x13d030fb8 <col:30, col:48> '<dependent type>' contains-errors lvalue
    |   |   |   `-CallExpr 0x13d030f78 <col:30, col:45> 'int'
    |   |   |     |-ImplicitCastExpr 0x13d030f60 <col:30> 'int (*)()' <FunctionToPointerDecay>
    |   |   |     | `-DeclRefExpr 0x13d030f20 <col:30> 'int ()' Function 0x13d030ba8 'skb_shinfo' 'int ()'
    |   |   |     `-ImplicitCastExpr 0x13d030fa0 <col:41> 'const struct sk_buff *' <LValueToRValue>
    |   |   |       `-DeclRefExpr 0x13d030f40 <col:41> 'const struct sk_buff *' lvalue ParmVar 0x13d00e368 'from' 'const struct sk_buff *'
    |   |   `-ImplicitCastExpr 0x13d031018 <col:54> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x13d030fe0 <col:54> 'int' lvalue Var 0x13d026900 'i' 'int'
    |   |-CompoundAssignOperator 0x13d031538 <line:40:3, col:35> 'int' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   | |-DeclRefExpr 0x13d0313a0 <col:3> 'int' lvalue ParmVar 0x13d026600 'len' 'int'
    |   | `-CXXDependentScopeMemberExpr 0x13d0314f0 <col:10, col:35> '<dependent type>' contains-errors lvalue .size
    |   |   `-ArraySubscriptExpr 0x13d0314d0 <col:10, col:33> '<dependent type>' contains-errors lvalue
    |   |     |-ImplicitCastExpr 0x13d0314a0 <col:10, col:26> '<dependent type>' contains-errors <LValueToRValue>
    |   |     | `-RecoveryExpr 0x13d031458 <col:10, col:26> '<dependent type>' contains-errors lvalue
    |   |     |   `-CallExpr 0x13d031418 <col:10, col:23> 'int'
    |   |     |     |-ImplicitCastExpr 0x13d031400 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |   |     |     | `-DeclRefExpr 0x13d0313c0 <col:10> 'int ()' Function 0x13d030ba8 'skb_shinfo' 'int ()'
    |   |     |     `-ImplicitCastExpr 0x13d031440 <col:21> 'struct sk_buff *' <LValueToRValue>
    |   |     |       `-DeclRefExpr 0x13d0313e0 <col:21> 'struct sk_buff *' lvalue ParmVar 0x13d00e248 'to' 'struct sk_buff *'
    |   |     `-ImplicitCastExpr 0x13d0314b8 <col:32> 'int' <LValueToRValue>
    |   |       `-DeclRefExpr 0x13d031480 <col:32> 'int' lvalue Var 0x13d026980 'j' 'int'
    |   |-CallExpr 0x13d0316c0 <line:41:3, col:21> 'int'
    |   | |-ImplicitCastExpr 0x13d0316a8 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x13d031648 <col:3> 'int ()' Function 0x13d031590 'skb_frag_ref' 'int ()'
    |   | |-ImplicitCastExpr 0x13d0316f0 <col:16> 'struct sk_buff *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x13d031668 <col:16> 'struct sk_buff *' lvalue ParmVar 0x13d00e248 'to' 'struct sk_buff *'
    |   | `-ImplicitCastExpr 0x13d031708 <col:20> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x13d031688 <col:20> 'int' lvalue Var 0x13d026980 'j' 'int'
    |   `-UnaryOperator 0x13d031740 <line:42:3, col:4> 'int' postfix '++'
    |     `-DeclRefExpr 0x13d031720 <col:3> 'int' lvalue Var 0x13d026980 'j' 'int'
    `-BinaryOperator 0x13d0318c0 <line:44:2, col:29> '<dependent type>' contains-errors '='
      |-RecoveryExpr 0x13d031878 <col:2, col:18> '<dependent type>' contains-errors lvalue
      | `-CallExpr 0x13d031838 <col:2, col:15> 'int'
      |   |-ImplicitCastExpr 0x13d031820 <col:2> 'int (*)()' <FunctionToPointerDecay>
      |   | `-DeclRefExpr 0x13d0317c8 <col:2> 'int ()' Function 0x13d030ba8 'skb_shinfo' 'int ()'
      |   `-ImplicitCastExpr 0x13d031860 <col:13> 'struct sk_buff *' <LValueToRValue>
      |     `-DeclRefExpr 0x13d031800 <col:13> 'struct sk_buff *' lvalue ParmVar 0x13d00e248 'to' 'struct sk_buff *'
      `-DeclRefExpr 0x13d0318a0 <col:29> 'int' lvalue Var 0x13d026980 'j' 'int'
