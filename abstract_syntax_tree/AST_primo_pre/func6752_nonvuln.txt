`-FunctionDecl 0x144128288  line:1:1 invalid fix_bad_direct_key_sigs 'int (int, int *)'
  |-ParmVarDecl 0x1441280f0 <col:26, col:35> col:35 invalid keyblock 'int'
  |-ParmVarDecl 0x1441281a8 <col:45, col:50> col:50 invalid keyid 'int *'
  `-CompoundStmt 0x1441425d8 <line:2:1, line:27:1>
    |-DeclStmt 0x1441283e0 <line:5:3, col:16>
    | `-VarDecl 0x144128358 <col:3, col:15> col:7 used count 'int' cinit
    |   `-IntegerLiteral 0x1441283c0 <col:15> 'int' 0
    |-ForStmt 0x144142558 <line:7:3, line:24:5>
    | |-<<<NULL>>>
    | |-<<<NULL>>>
    | |-RecoveryExpr 0x1441284b0 <line:7:31> '<dependent type>' contains-errors lvalue
    | |-BinaryOperator 0x1441285f0 <col:37, col:48> '<dependent type>' contains-errors '='
    | | |-RecoveryExpr 0x144128568 <col:37> '<dependent type>' contains-errors lvalue
    | | `-CXXDependentScopeMemberExpr 0x1441285a8 <col:42, col:48> '<dependent type>' contains-errors lvalue ->next
    | |   `-RecoveryExpr 0x144128588 <col:42> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x144142538 <line:8:5, line:24:5>
    |   |-IfStmt 0x144141800 <line:9:7, line:10:9>
    |   | |-BinaryOperator 0x1441287c0 <line:9:11, col:33> 'int' contains-errors '=='
    |   | | |-CXXDependentScopeMemberExpr 0x144128758 <col:11, col:22> '<dependent type>' contains-errors lvalue ->pkttype
    |   | | | `-CXXDependentScopeMemberExpr 0x144128710 <col:11, col:17> '<dependent type>' contains-errors lvalue ->pkt
    |   | | |   `-RecoveryExpr 0x1441286f0 <col:11> '<dependent type>' contains-errors lvalue
    |   | | `-RecoveryExpr 0x1441287a0 <col:33> '<dependent type>' contains-errors lvalue
    |   | `-BreakStmt 0x1441287e0 <line:10:9>
    |   `-IfStmt 0x144142518 <line:11:7, line:23:9>
    |     |-BinaryOperator 0x144141dc8 <line:11:11, line:12:50> 'int' contains-errors '&&'
    |     | |-BinaryOperator 0x144141c88 <line:11:11, col:33> 'int' contains-errors '=='
    |     | | |-CXXDependentScopeMemberExpr 0x144141c20 <col:11, col:22> '<dependent type>' contains-errors lvalue ->pkttype
    |     | | | `-CXXDependentScopeMemberExpr 0x144141bd8 <col:11, col:17> '<dependent type>' contains-errors lvalue ->pkt
    |     | | |   `-RecoveryExpr 0x144141bb8 <col:11> '<dependent type>' contains-errors lvalue
    |     | | `-RecoveryExpr 0x144141c68 <col:33> '<dependent type>' contains-errors lvalue
    |     | `-CallExpr 0x144141da0 <line:12:14, col:50> '<dependent type>' contains-errors
    |     |   |-DeclRefExpr 0x144141a60 <col:14> 'int ()' Function 0x1441419a8 'IS_KEY_SIG' 'int ()'
    |     |   `-CXXDependentScopeMemberExpr 0x144141d58 <col:26, col:41> '<dependent type>' contains-errors lvalue .signature
    |     |     `-CXXDependentScopeMemberExpr 0x144141d10 <col:26, col:37> '<dependent type>' contains-errors lvalue ->pkt
    |     |       `-CXXDependentScopeMemberExpr 0x144141cc8 <col:26, col:32> '<dependent type>' contains-errors lvalue ->pkt
    |     |         `-RecoveryExpr 0x144141ca8 <col:26> '<dependent type>' contains-errors lvalue
    |     `-CompoundStmt 0x144142500 <line:13:9, line:23:9>
    |       `-IfStmt 0x1441424e0 <line:15:11, line:22:13>
    |         |-RecoveryExpr 0x144142088 <line:15:15, col:44> '_Bool' contains-errors
    |         `-CompoundStmt 0x1441424c0 <line:16:13, line:22:13>
    |           |-CallExpr 0x144142358 <line:18:15, line:19:39> '<dependent type>' contains-errors
    |           | |-DeclRefExpr 0x144142188 <line:18:15> 'int ()' Function 0x1441420d0 'log_info' 'int ()'
    |           | |-StringLiteral 0x1441421f0 <col:25> 'char[4]' lvalue "STR"
    |           | `-CallExpr 0x144142330 <line:19:25, col:38> '<dependent type>' contains-errors
    |           |   |-DeclRefExpr 0x1441422f0 <col:25> 'int ()' Function 0x144142238 'keystr' 'int ()'
    |           |   `-RecoveryExpr 0x144142310 <col:33> '<dependent type>' contains-errors lvalue
    |           `-UnaryOperator 0x1441424a8 <line:21:15, col:20> 'int' postfix '++'
    |             `-DeclRefExpr 0x144142488 <col:15> 'int' lvalue Var 0x144128358 'count' 'int'
    `-ReturnStmt 0x1441425c8 <line:26:3, col:10>
      `-ImplicitCastExpr 0x1441425b0 <col:10> 'int' <LValueToRValue>
        `-DeclRefExpr 0x144142590 <col:10> 'int' lvalue Var 0x144128358 'count' 'int'
