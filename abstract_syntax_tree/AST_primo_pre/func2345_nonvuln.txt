`-FunctionDecl 0x12d8274d0  line:1:13 invalid print_repolist 'void (int *, struct cgit_repolist *, int)' static
  |-ParmVarDecl 0x12d80dd28 <col:28, col:34> col:34 invalid f 'int *'
  |-ParmVarDecl 0x12d80e318 <col:37, col:59> col:59 used list 'struct cgit_repolist *'
  |-ParmVarDecl 0x12d80e398 <col:65, col:69> col:69 used start 'int'
  `-CompoundStmt 0x12d827a60 <line:2:1, line:7:1>
    |-DeclStmt 0x12d827610 <line:3:2, col:7>
    | `-VarDecl 0x12d8275a8 <col:2, col:6> col:6 used i 'int'
    `-ForStmt 0x12d827a28 <line:5:2, line:6:32>
      |-BinaryOperator 0x12d827680 <line:5:7, col:11> 'int' '='
      | |-DeclRefExpr 0x12d827628 <col:7> 'int' lvalue Var 0x12d8275a8 'i' 'int'
      | `-ImplicitCastExpr 0x12d827668 <col:11> 'int' <LValueToRValue>
      |   `-DeclRefExpr 0x12d827648 <col:11> 'int' lvalue ParmVar 0x12d80e398 'start' 'int'
      |-<<<NULL>>>
      |-BinaryOperator 0x12d827720 <col:18, col:28> 'int' contains-errors '<'
      | |-DeclRefExpr 0x12d8276a0 <col:18> 'int' lvalue Var 0x12d8275a8 'i' 'int'
      | `-RecoveryExpr 0x12d8276f8 <col:22, col:28> '<dependent type>' contains-errors lvalue
      |   `-DeclRefExpr 0x12d8276c0 <col:22> 'struct cgit_repolist *' lvalue ParmVar 0x12d80e318 'list' 'struct cgit_repolist *'
      |-UnaryOperator 0x12d827760 <col:35, col:36> 'int' postfix '++'
      | `-DeclRefExpr 0x12d827740 <col:35> 'int' lvalue Var 0x12d8275a8 'i' 'int'
      `-CallExpr 0x12d8279f8 <line:6:3, col:32> '<dependent type>' contains-errors
        |-DeclRefExpr 0x12d8278d0 <col:3> 'int ()' Function 0x12d827818 'print_repo' 'int ()'
        |-RecoveryExpr 0x12d8278f0 <col:14> '<dependent type>' contains-errors lvalue
        `-UnaryOperator 0x12d8279e0 <col:17, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow
          `-ArraySubscriptExpr 0x12d8279c0 <col:18, col:31> '<dependent type>' contains-errors lvalue
            |-ImplicitCastExpr 0x12d827990 <col:18, col:24> '<dependent type>' contains-errors <LValueToRValue>
            | `-RecoveryExpr 0x12d827948 <col:18, col:24> '<dependent type>' contains-errors lvalue
            |   `-DeclRefExpr 0x12d827910 <col:18> 'struct cgit_repolist *' lvalue ParmVar 0x12d80e318 'list' 'struct cgit_repolist *'
            `-ImplicitCastExpr 0x12d8279a8 <col:30> 'int' <LValueToRValue>
              `-DeclRefExpr 0x12d827970 <col:30> 'int' lvalue Var 0x12d8275a8 'i' 'int'
