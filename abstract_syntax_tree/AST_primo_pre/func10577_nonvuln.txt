`-FunctionDecl 0x15b00ddd0  line:1:20 AffineArgsToCoefficients 'void (double *)' static inline
  |-ParmVarDecl 0x15b00dd08 <col:45, col:53> col:53 used affine 'double *'
  `-CompoundStmt 0x15b026b50 <line:2:1, line:7:1>
    |-DeclStmt 0x15b00dfe0 <line:4:3, col:16>
    | `-VarDecl 0x15b00df78 <col:3, col:15> col:10 used tmp 'double[4]'
    |-BinaryOperator 0x15b00e100 <line:5:3, col:18> 'double' '='
    | |-ArraySubscriptExpr 0x15b00e050 <col:3, col:8> 'double' lvalue
    | | |-ImplicitCastExpr 0x15b00e038 <col:3> 'double *' <ArrayToPointerDecay>
    | | | `-DeclRefExpr 0x15b00dff8 <col:3> 'double[4]' lvalue Var 0x15b00df78 'tmp' 'double[4]'
    | | `-IntegerLiteral 0x15b00e018 <col:7> 'int' 0
    | `-ImplicitCastExpr 0x15b00e0e8 <col:10, col:18> 'double' <LValueToRValue>
    |   `-ArraySubscriptExpr 0x15b00e0c8 <col:10, col:18> 'double' lvalue
    |     |-ImplicitCastExpr 0x15b00e0b0 <col:10> 'double *' <LValueToRValue>
    |     | `-DeclRefExpr 0x15b00e070 <col:10> 'double *' lvalue ParmVar 0x15b00dd08 'affine' 'double *'
    |     `-IntegerLiteral 0x15b00e090 <col:17> 'int' 1
    |-BinaryOperator 0x15b00e228 <col:21, col:36> 'double' '='
    | |-ArraySubscriptExpr 0x15b00e178 <col:21, col:26> 'double' lvalue
    | | |-ImplicitCastExpr 0x15b00e160 <col:21> 'double *' <ArrayToPointerDecay>
    | | | `-DeclRefExpr 0x15b00e120 <col:21> 'double[4]' lvalue Var 0x15b00df78 'tmp' 'double[4]'
    | | `-IntegerLiteral 0x15b00e140 <col:25> 'int' 1
    | `-ImplicitCastExpr 0x15b00e210 <col:28, col:36> 'double' <LValueToRValue>
    |   `-ArraySubscriptExpr 0x15b00e1f0 <col:28, col:36> 'double' lvalue
    |     |-ImplicitCastExpr 0x15b00e1d8 <col:28> 'double *' <LValueToRValue>
    |     | `-DeclRefExpr 0x15b00e198 <col:28> 'double *' lvalue ParmVar 0x15b00dd08 'affine' 'double *'
    |     `-IntegerLiteral 0x15b00e1b8 <col:35> 'int' 2
    |-BinaryOperator 0x15b00e350 <col:39, col:54> 'double' '='
    | |-ArraySubscriptExpr 0x15b00e2a0 <col:39, col:44> 'double' lvalue
    | | |-ImplicitCastExpr 0x15b00e288 <col:39> 'double *' <ArrayToPointerDecay>
    | | | `-DeclRefExpr 0x15b00e248 <col:39> 'double[4]' lvalue Var 0x15b00df78 'tmp' 'double[4]'
    | | `-IntegerLiteral 0x15b00e268 <col:43> 'int' 2
    | `-ImplicitCastExpr 0x15b00e338 <col:46, col:54> 'double' <LValueToRValue>
    |   `-ArraySubscriptExpr 0x15b00e318 <col:46, col:54> 'double' lvalue
    |     |-ImplicitCastExpr 0x15b00e300 <col:46> 'double *' <LValueToRValue>
    |     | `-DeclRefExpr 0x15b00e2c0 <col:46> 'double *' lvalue ParmVar 0x15b00dd08 'affine' 'double *'
    |     `-IntegerLiteral 0x15b00e2e0 <col:53> 'int' 3
    |-BinaryOperator 0x15b026690 <col:57, col:72> 'double' '='
    | |-ArraySubscriptExpr 0x15b00e3c8 <col:57, col:62> 'double' lvalue
    | | |-ImplicitCastExpr 0x15b00e3b0 <col:57> 'double *' <ArrayToPointerDecay>
    | | | `-DeclRefExpr 0x15b00e370 <col:57> 'double[4]' lvalue Var 0x15b00df78 'tmp' 'double[4]'
    | | `-IntegerLiteral 0x15b00e390 <col:61> 'int' 3
    | `-ImplicitCastExpr 0x15b026678 <col:64, col:72> 'double' <LValueToRValue>
    |   `-ArraySubscriptExpr 0x15b026658 <col:64, col:72> 'double' lvalue
    |     |-ImplicitCastExpr 0x15b026640 <col:64> 'double *' <LValueToRValue>
    |     | `-DeclRefExpr 0x15b026600 <col:64> 'double *' lvalue ParmVar 0x15b00dd08 'affine' 'double *'
    |     `-IntegerLiteral 0x15b026620 <col:71> 'int' 4
    |-BinaryOperator 0x15b0267b8 <line:6:3, col:18> 'double' '='
    | |-ArraySubscriptExpr 0x15b026708 <col:3, col:11> 'double' lvalue
    | | |-ImplicitCastExpr 0x15b0266f0 <col:3> 'double *' <LValueToRValue>
    | | | `-DeclRefExpr 0x15b0266b0 <col:3> 'double *' lvalue ParmVar 0x15b00dd08 'affine' 'double *'
    | | `-IntegerLiteral 0x15b0266d0 <col:10> 'int' 3
    | `-ImplicitCastExpr 0x15b0267a0 <col:13, col:18> 'double' <LValueToRValue>
    |   `-ArraySubscriptExpr 0x15b026780 <col:13, col:18> 'double' lvalue
    |     |-ImplicitCastExpr 0x15b026768 <col:13> 'double *' <ArrayToPointerDecay>
    |     | `-DeclRefExpr 0x15b026728 <col:13> 'double[4]' lvalue Var 0x15b00df78 'tmp' 'double[4]'
    |     `-IntegerLiteral 0x15b026748 <col:17> 'int' 0
    |-BinaryOperator 0x15b0268e0 <col:21, col:36> 'double' '='
    | |-ArraySubscriptExpr 0x15b026830 <col:21, col:29> 'double' lvalue
    | | |-ImplicitCastExpr 0x15b026818 <col:21> 'double *' <LValueToRValue>
    | | | `-DeclRefExpr 0x15b0267d8 <col:21> 'double *' lvalue ParmVar 0x15b00dd08 'affine' 'double *'
    | | `-IntegerLiteral 0x15b0267f8 <col:28> 'int' 1
    | `-ImplicitCastExpr 0x15b0268c8 <col:31, col:36> 'double' <LValueToRValue>
    |   `-ArraySubscriptExpr 0x15b0268a8 <col:31, col:36> 'double' lvalue
    |     |-ImplicitCastExpr 0x15b026890 <col:31> 'double *' <ArrayToPointerDecay>
    |     | `-DeclRefExpr 0x15b026850 <col:31> 'double[4]' lvalue Var 0x15b00df78 'tmp' 'double[4]'
    |     `-IntegerLiteral 0x15b026870 <col:35> 'int' 1
    |-BinaryOperator 0x15b026a08 <col:39, col:54> 'double' '='
    | |-ArraySubscriptExpr 0x15b026958 <col:39, col:47> 'double' lvalue
    | | |-ImplicitCastExpr 0x15b026940 <col:39> 'double *' <LValueToRValue>
    | | | `-DeclRefExpr 0x15b026900 <col:39> 'double *' lvalue ParmVar 0x15b00dd08 'affine' 'double *'
    | | `-IntegerLiteral 0x15b026920 <col:46> 'int' 4
    | `-ImplicitCastExpr 0x15b0269f0 <col:49, col:54> 'double' <LValueToRValue>
    |   `-ArraySubscriptExpr 0x15b0269d0 <col:49, col:54> 'double' lvalue
    |     |-ImplicitCastExpr 0x15b0269b8 <col:49> 'double *' <ArrayToPointerDecay>
    |     | `-DeclRefExpr 0x15b026978 <col:49> 'double[4]' lvalue Var 0x15b00df78 'tmp' 'double[4]'
    |     `-IntegerLiteral 0x15b026998 <col:53> 'int' 2
    `-BinaryOperator 0x15b026b30 <col:57, col:72> 'double' '='
      |-ArraySubscriptExpr 0x15b026a80 <col:57, col:65> 'double' lvalue
      | |-ImplicitCastExpr 0x15b026a68 <col:57> 'double *' <LValueToRValue>
      | | `-DeclRefExpr 0x15b026a28 <col:57> 'double *' lvalue ParmVar 0x15b00dd08 'affine' 'double *'
      | `-IntegerLiteral 0x15b026a48 <col:64> 'int' 2
      `-ImplicitCastExpr 0x15b026b18 <col:67, col:72> 'double' <LValueToRValue>
        `-ArraySubscriptExpr 0x15b026af8 <col:67, col:72> 'double' lvalue
          |-ImplicitCastExpr 0x15b026ae0 <col:67> 'double *' <ArrayToPointerDecay>
          | `-DeclRefExpr 0x15b026aa0 <col:67> 'double[4]' lvalue Var 0x15b00df78 'tmp' 'double[4]'
          `-IntegerLiteral 0x15b026ac0 <col:71> 'int' 3
