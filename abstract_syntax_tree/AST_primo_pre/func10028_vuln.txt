`-FunctionDecl 0x147928438  line:1:1 invalid TIFFWriteDirectoryTagCheckedRational 'int (int *, int *, int *, int, double)'
  |-ParmVarDecl 0x147928128 <col:38, col:44> col:44 invalid tif 'int *'
  |-ParmVarDecl 0x1479281a8 <col:49, col:57> col:57 invalid ndir 'int *'
  |-ParmVarDecl 0x147928228 <col:63, col:77> col:77 invalid dir 'int *'
  |-ParmVarDecl 0x1479282a8 <col:82, col:89> col:89 invalid tag 'int'
  |-ParmVarDecl 0x147928328 <col:94, col:101> col:101 used value 'double'
  `-CompoundStmt 0x147942490 <line:2:1, line:37:1>
    |-DeclStmt 0x1479286a0 <line:3:9, col:43>
    | `-VarDecl 0x147928590 <col:9, col:38> col:27 used module 'const char[4]' static cinit
    |   `-StringLiteral 0x147928640 <col:38> 'const char[4]' "STR"
    |-IfStmt 0x147942068 <line:6:9, line:30:2> has_else
    | |-BinaryOperator 0x1479418d8 <line:6:13, col:21> 'int' '<'
    | | |-ImplicitCastExpr 0x1479418a8 <col:13> 'double' <LValueToRValue>
    | | | `-DeclRefExpr 0x147941868 <col:13> 'double' lvalue ParmVar 0x147928328 'value' 'double'
    | | `-ImplicitCastExpr 0x1479418c0 <col:21> 'double' <IntegralToFloating>
    | |   `-IntegerLiteral 0x147941888 <col:21> 'int' 0
    | |-CompoundStmt 0x147941b08 <line:7:9, line:10:9>
    | | |-CallExpr 0x147941aa0 <line:8:13, col:58> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x1479419d8 <col:13> 'int ()' Function 0x147941920 'TIFFErrorExt' 'int ()'
    | | | |-CXXDependentScopeMemberExpr 0x147941a18 <col:26, col:31> '<dependent type>' contains-errors lvalue ->tif_clientdata
    | | | | `-RecoveryExpr 0x1479419f8 <col:26> '<dependent type>' contains-errors lvalue
    | | | |-DeclRefExpr 0x147941a60 <col:46> 'const char[4]' lvalue Var 0x147928590 'module' 'const char[4]'
    | | | `-StringLiteral 0x147941a80 <col:53> 'char[4]' lvalue "STR"
    | | `-ReturnStmt 0x147941af8 <line:9:13, col:20>
    | |   `-IntegerLiteral 0x147941ad8 <col:20> 'int' 0
    | `-IfStmt 0x147942038 <line:11:7, line:30:2> has_else
    |   |-BinaryOperator 0x147941b80 <line:11:11, col:18> 'int' '=='
    |   | |-ImplicitCastExpr 0x147941b68 <col:11> 'double' <LValueToRValue>
    |   | | `-DeclRefExpr 0x147941b28 <col:11> 'double' lvalue ParmVar 0x147928328 'value' 'double'
    |   | `-FloatingLiteral 0x147941b48 <col:18> 'double' 0.000000e+00
    |   |-CompoundStmt 0x147941c20 <line:12:2, line:15:2>
    |   `-IfStmt 0x147942008 <line:16:7, line:30:2> has_else
    |     |-RecoveryExpr 0x147941ca0 <line:16:11, col:34> '_Bool' contains-errors
    |     |-CompoundStmt 0x147941d38 <line:17:2, line:20:2>
    |     `-IfStmt 0x147941fd8 <line:21:7, line:30:2> has_else
    |       |-BinaryOperator 0x147941da0 <line:21:11, col:17> 'int' '<'
    |       | |-ImplicitCastExpr 0x147941d88 <col:11> 'double' <LValueToRValue>
    |       | | `-DeclRefExpr 0x147941d48 <col:11> 'double' lvalue ParmVar 0x147928328 'value' 'double'
    |       | `-FloatingLiteral 0x147941d68 <col:17> 'double' 1.000000e+00
    |       |-CompoundStmt 0x147941ec8 <line:22:2, line:25:2>
    |       `-CompoundStmt 0x147941fc8 <line:27:2, line:30:2>
    `-IfStmt 0x147942290 <line:31:2, line:35:2>
      |-RecoveryExpr 0x147942100 <line:31:6, col:21> '_Bool' contains-errors
      `-CompoundStmt 0x147942280 <line:32:2, line:35:2>
