`-FunctionDecl 0x13000ddf8  line:1:1 invalid zdeletefile 'int (int *)'
  |-ParmVarDecl 0x13000dd28 <col:13, col:22> col:22 invalid i_ctx_p 'int *'
  `-CompoundStmt 0x130028e40 <line:2:1, line:22:1>
    |-DeclStmt 0x13000e258 <line:5:5, col:64>
    | `-VarDecl 0x13000dec0 <col:5, col:63> col:9 used code 'int' cinit
    |   `-CallExpr 0x13000e218 <col:16, col:63> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x13000e080 <col:16> 'int ()' Function 0x13000dfc8 'parse_real_file_name' 'int ()'
    |     |-RecoveryExpr 0x13000e1a0 <col:37> '<dependent type>' contains-errors lvalue
    |     |-UnaryOperator 0x13000e1e0 <col:41, col:42> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     | `-RecoveryExpr 0x13000e1c0 <col:42> '<dependent type>' contains-errors lvalue
    |     |-RecoveryExpr 0x13000e1f8 <col:49> '<dependent type>' contains-errors lvalue
    |     `-StringLiteral 0x13000e140 <col:58> 'char[4]' lvalue "STR"
    |-IfStmt 0x13000e330 <line:7:5, line:8:16>
    | |-BinaryOperator 0x13000e2c8 <line:7:9, col:16> 'int' contains-errors '<'
    | | |-ImplicitCastExpr 0x13000e2b0 <col:9> 'int' contains-errors <LValueToRValue>
    | | | `-DeclRefExpr 0x13000e270 <col:9> 'int' contains-errors lvalue Var 0x13000dec0 'code' 'int'
    | | `-IntegerLiteral 0x13000e290 <col:16> 'int' 0
    | `-ReturnStmt 0x13000e320 <line:8:9, col:16>
    |   `-ImplicitCastExpr 0x13000e308 <col:16> 'int' contains-errors <LValueToRValue>
    |     `-DeclRefExpr 0x13000e2e8 <col:16> 'int' contains-errors lvalue Var 0x13000dec0 'code' 'int'
    |-IfStmt 0x130028920 <line:9:5, line:15:5>
    | |-BinaryOperator 0x1300281e8 <line:9:9, col:45> 'int' contains-errors '=='
    | | |-CXXDependentScopeMemberExpr 0x130028158 <col:9, col:15> '<dependent type>' contains-errors lvalue .iodev
    | | | `-RecoveryExpr 0x130028138 <col:9> '<dependent type>' contains-errors lvalue
    | | `-CallExpr 0x1300281c0 <col:24, col:45> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x1300280b8 <col:24> 'int ()' Function 0x130028000 'iodev_default' 'int ()'
    | |   `-RecoveryExpr 0x1300281a0 <col:38> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x130028908 <col:48, line:15:5>
    |   `-IfStmt 0x1300288e8 <line:10:9, line:14:9>
    |     |-RecoveryExpr 0x130028868 <line:10:13, line:12:72> '_Bool' contains-errors
    |     `-CompoundStmt 0x1300288d0 <col:75, line:14:9>
    |       `-ReturnStmt 0x1300288c0 <line:13:13, col:20>
    |         `-ImplicitCastExpr 0x1300288a8 <col:20> 'int' contains-errors <LValueToRValue>
    |           `-DeclRefExpr 0x130028888 <col:20> 'int' contains-errors lvalue Var 0x13000dec0 'code' 'int'
    |-IfStmt 0x130028c60 <line:18:5, line:19:16>
    | |-BinaryOperator 0x130028bf8 <line:18:9, col:16> 'int' contains-errors '<'
    | | |-ImplicitCastExpr 0x130028be0 <col:9> 'int' contains-errors <LValueToRValue>
    | | | `-DeclRefExpr 0x130028ba0 <col:9> 'int' contains-errors lvalue Var 0x13000dec0 'code' 'int'
    | | `-IntegerLiteral 0x130028bc0 <col:16> 'int' 0
    | `-ReturnStmt 0x130028c50 <line:19:9, col:16>
    |   `-ImplicitCastExpr 0x130028c38 <col:16> 'int' contains-errors <LValueToRValue>
    |     `-DeclRefExpr 0x130028c18 <col:16> 'int' contains-errors lvalue Var 0x13000dec0 'code' 'int'
    |-CallExpr 0x130028de8 <line:20:5, col:10> 'int'
    | |-ImplicitCastExpr 0x130028dd0 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x130028d60 <col:5> 'int ()' Function 0x130028ca8 'pop' 'int ()'
    | `-IntegerLiteral 0x130028d80 <col:9> 'int' 1
    `-ReturnStmt 0x130028e30 <line:21:5, col:12>
      `-IntegerLiteral 0x130028e10 <col:12> 'int' 0
