`-FunctionDecl 0x1261289f8  line:1:12 invalid generate_key 'int (int *)' static
  |-ParmVarDecl 0x126128928 <col:25, col:29> col:29 referenced invalid dh 'int *'
  `-CompoundStmt 0x126144000 <line:2:1, line:79:1>
    |-DeclStmt 0x126128b48 <line:3:5, col:15>
    | `-VarDecl 0x126128ac0 <col:5, col:14> col:9 used ok 'int' cinit
    |   `-IntegerLiteral 0x126128b28 <col:14> 'int' 0
    |-DeclStmt 0x126128c00 <line:4:5, col:29>
    | `-VarDecl 0x126128b78 <col:5, col:28> col:9 used generate_new_key 'int' cinit
    |   `-IntegerLiteral 0x126128be0 <col:28> 'int' 0
    |-DeclStmt 0x126128c98 <line:5:5, col:15>
    | `-VarDecl 0x126128c30 <col:5, col:14> col:14 used l 'unsigned int'
    |-IfStmt 0x1261420a8 <line:11:5, line:12:14>
    | |-BinaryOperator 0x126142020 <line:11:9, col:16> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x126128fd8 <col:9> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x126142000 <col:16> '<dependent type>' contains-errors lvalue
    | `-GotoStmt 0x126142090 <line:12:9, col:14> 'err' 0x126142040
    |-IfStmt 0x1261424b8 <line:14:5, line:20:9> has_else
    | |-BinaryOperator 0x126142188 <line:14:9, col:25> 'int' contains-errors '=='
    | | |-CXXDependentScopeMemberExpr 0x1261420e8 <col:9, col:13> '<dependent type>' contains-errors lvalue ->priv_key
    | | | `-RecoveryExpr 0x1261420c8 <col:9> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x126142168 <col:25> '<dependent type>' contains-errors lvalue
    | |-CompoundStmt 0x126142428 <col:31, line:19:5>
    | | |-IfStmt 0x1261423a8 <line:16:9, line:17:18>
    | | | |-BinaryOperator 0x126142370 <line:16:13, col:25> 'int' contains-errors '=='
    | | | | |-RecoveryExpr 0x126142330 <col:13> '<dependent type>' contains-errors lvalue
    | | | | `-RecoveryExpr 0x126142350 <col:25> '<dependent type>' contains-errors lvalue
    | | | `-GotoStmt 0x126142390 <line:17:13, col:18> 'err' 0x126142040
    | | `-BinaryOperator 0x126142408 <line:18:9, col:28> 'int' '='
    | |   |-DeclRefExpr 0x1261423c8 <col:9> 'int' lvalue Var 0x126128b78 'generate_new_key' 'int'
    | |   `-IntegerLiteral 0x1261423e8 <col:28> 'int' 1
    | `-NullStmt 0x1261424b0 <line:20:9>
    |-IfStmt 0x126142788 <line:22:5, line:27:9> has_else
    | |-RecoveryExpr 0x126142550 <line:22:9, col:24> '_Bool' contains-errors
    | |-CompoundStmt 0x126142700 <col:30, line:26:5>
    | | `-IfStmt 0x1261426e0 <line:24:9, line:25:18>
    | |   |-RecoveryExpr 0x1261426a8 <line:24:13, col:24> '_Bool' contains-errors
    | |   `-GotoStmt 0x1261426c8 <line:25:13, col:18> 'err' 0x126142040
    | `-NullStmt 0x126142780 <line:27:9>
    |-IfStmt 0x126142b00 <line:29:5, line:34:5>
    | |-RecoveryExpr 0x126142820 <line:29:9, col:21> '_Bool' contains-errors
    | `-CompoundStmt 0x126142ae8 <col:43, line:34:5>
    |   `-IfStmt 0x126142ac8 <line:32:9, line:33:18>
    |     |-RecoveryExpr 0x126142a90 <line:32:13, col:14> '_Bool' contains-errors
    |     `-GotoStmt 0x126142ab0 <line:33:13, col:18> 'err' 0x126142040
    |-IfStmt 0x1261434f0 <line:36:5, line:49:5>
    | |-ImplicitCastExpr 0x126142b40 <line:36:9> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x126142b20 <col:9> 'int' lvalue Var 0x126128b78 'generate_new_key' 'int'
    | `-CompoundStmt 0x1261434d8 <col:27, line:49:5>
    |   `-IfStmt 0x1261434a8 <line:37:9, line:48:9> has_else
    |     |-CXXDependentScopeMemberExpr 0x126142b78 <line:37:13, col:17> '<dependent type>' contains-errors lvalue ->q
    |     | `-RecoveryExpr 0x126142b58 <col:13> '<dependent type>' contains-errors lvalue
    |     |-CompoundStmt 0x126142fd8 <col:20, line:43:9>
    |     | `-DoStmt 0x126142fb8 <line:38:13, line:42:63>
    |     |   |-CompoundStmt 0x126142d80 <line:38:16, line:41:13>
    |     |   | `-IfStmt 0x126142d60 <line:39:17, line:40:26>
    |     |   |   |-RecoveryExpr 0x126142d28 <line:39:21, col:51> '_Bool' contains-errors
    |     |   |   `-GotoStmt 0x126142d48 <line:40:21, col:26> 'err' 0x126142040
    |     |   `-RecoveryExpr 0x126142f98 <line:42:20, col:62> '_Bool' contains-errors
    |     `-CompoundStmt 0x126143488 <line:43:16, line:48:9>
    |       |-BinaryOperator 0x1261432f0 <line:45:13, col:64> 'unsigned int' contains-errors '='
    |       | |-DeclRefExpr 0x126143000 <col:13> 'unsigned int' lvalue Var 0x126128c30 'l' 'unsigned int'
    |       | `-ConditionalOperator 0x1261432c0 <col:17, col:64> '<dependent type>' contains-errors
    |       |   |-CXXDependentScopeMemberExpr 0x126143040 <col:17, col:21> '<dependent type>' contains-errors lvalue ->length
    |       |   | `-RecoveryExpr 0x126143020 <col:17> '<dependent type>' contains-errors lvalue
    |       |   |-CXXDependentScopeMemberExpr 0x1261430a8 <col:30, col:34> '<dependent type>' contains-errors lvalue ->length
    |       |   | `-RecoveryExpr 0x126143088 <col:30> '<dependent type>' contains-errors lvalue
    |       |   `-BinaryOperator 0x1261432a0 <col:43, col:64> '<dependent type>' contains-errors '-'
    |       |     |-CallExpr 0x126143258 <col:43, col:60> '<dependent type>' contains-errors
    |       |     | |-DeclRefExpr 0x1261431d0 <col:43> 'int ()' Function 0x126143118 'BN_num_bits' 'int ()'
    |       |     | `-CXXDependentScopeMemberExpr 0x126143210 <col:55, col:59> '<dependent type>' contains-errors lvalue ->p
    |       |     |   `-RecoveryExpr 0x1261431f0 <col:55> '<dependent type>' contains-errors lvalue
    |       |     `-IntegerLiteral 0x126143280 <col:64> 'int' 1
    |       `-IfStmt 0x126143468 <line:46:13, line:47:22>
    |         |-RecoveryExpr 0x126143430 <line:46:17, col:74> '_Bool' contains-errors
    |         `-GotoStmt 0x126143450 <line:47:17, col:22> 'err' 0x126142040
    |-CompoundStmt 0x1261439f0 <line:51:5, line:64:5>
    | |-IfStmt 0x1261435a0 <line:54:9, line:55:18>
    | | |-RecoveryExpr 0x126143568 <line:54:13, col:20> '_Bool' contains-errors
    | | `-GotoStmt 0x126143588 <line:55:13, col:18> 'err' 0x126142040
    | `-IfStmt 0x1261439b0 <line:58:9, line:61:9>
    |   |-RecoveryExpr 0x126143860 <line:58:13, col:76> '_Bool' contains-errors
    |   `-CompoundStmt 0x126143998 <col:79, line:61:9>
    |     `-GotoStmt 0x126143980 <line:60:13, col:18> 'err' 0x126142040
    |-BinaryOperator 0x126143b70 <line:68:5, col:10> 'int' '='
    | |-DeclRefExpr 0x126143b30 <col:5> 'int' lvalue Var 0x126128ac0 'ok' 'int'
    | `-IntegerLiteral 0x126143b50 <col:10> 'int' 1
    |-LabelStmt 0x126143d10 <line:69:2, col:5> 'err'
    | `-NullStmt 0x126143d08 <col:5>
    `-ReturnStmt 0x126143fd8 <line:78:5, col:15>
      `-ImplicitCastExpr 0x126143fc0 <col:12, col:15> 'int' <LValueToRValue>
        `-ParenExpr 0x126143fa0 <col:12, col:15> 'int' lvalue
          `-DeclRefExpr 0x126143f80 <col:13> 'int' lvalue Var 0x126128ac0 'ok' 'int'
