`-FunctionDecl 0x12980de80  line:1:13 invalid cmd_oper 'void (const char *, int *)' static
  |-ParmVarDecl 0x12980dcd8 <col:22, col:34> col:34 used data 'const char *'
  |-ParmVarDecl 0x12980dda8 <col:40, col:56> col:56 invalid server 'int *'
  `-CompoundStmt 0x129829070 <line:2:1, line:32:1>
    |-DeclStmt 0x12980e0d8 <line:3:2, col:32>
    | |-VarDecl 0x12980df50 <col:2, col:8> col:8 used nick 'char *'
    | |-VarDecl 0x12980dfd0 <col:2, col:15> col:15 used password 'char *'
    | `-VarDecl 0x12980e050 <col:2, col:26> col:26 used format 'char *'
    |-DeclStmt 0x12980e170 <line:4:2, col:16>
    | `-VarDecl 0x12980e108 <col:2, col:8> col:8 used free_arg 'void *'
    |-CallExpr 0x12980e3c0 <line:6:2, col:31> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12980e2e0 <col:2> 'int ()' Function 0x12980e228 'g_return_if_fail' 'int ()'
    | `-BinaryOperator 0x12980e3a0 <col:19, col:27> 'int' contains-errors '!='
    |   |-DeclRefExpr 0x12980e300 <col:19> 'const char *' lvalue ParmVar 0x12980dcd8 'data' 'const char *'
    |   `-RecoveryExpr 0x12980e380 <col:27> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x129827ba0 <line:7:2, line:8:40>
    | |-BinaryOperator 0x1298279f8 <line:7:6, col:41> 'int' contains-errors '||'
    | | |-UnaryOperator 0x129827948 <col:6, col:27> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | | `-CallExpr 0x129827920 <col:7, col:27> '<dependent type>' contains-errors
    | | |   |-DeclRefExpr 0x1298278e0 <col:7> 'int ()' Function 0x129827828 'IS_IRC_SERVER' 'int ()'
    | | |   `-RecoveryExpr 0x129827900 <col:21> '<dependent type>' contains-errors lvalue
    | | `-UnaryOperator 0x1298279e0 <col:32, col:41> '<dependent type>' contains-errors prefix '!' cannot overflow
    | |   `-ImplicitCastExpr 0x1298279c8 <col:33, col:41> '<dependent type>' contains-errors <LValueToRValue>
    | |     `-CXXDependentScopeMemberExpr 0x129827980 <col:33, col:41> '<dependent type>' contains-errors lvalue ->connected
    | |       `-RecoveryExpr 0x129827960 <col:33> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x129827b78 <line:8:3, col:40> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x129827af8 <col:3> 'int ()' Function 0x129827a40 'cmd_return_error' 'int ()'
    |   `-RecoveryExpr 0x129827b58 <col:20> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x129827ee0 <line:10:2, line:11:3>
    | |-UnaryOperator 0x129827eb8 <line:10:6, col:58> 'int' prefix '!' cannot overflow
    | | `-CallExpr 0x129827e58 <col:7, col:58> 'int'
    | |   |-ImplicitCastExpr 0x129827e40 <col:7> 'int (*)()' <FunctionToPointerDecay>
    | |   | `-DeclRefExpr 0x129827ca0 <col:7> 'int ()' Function 0x129827be8 'cmd_get_params' 'int ()'
    | |   |-ImplicitCastExpr 0x129827ea0 <col:22> 'const char *' <LValueToRValue>
    | |   | `-DeclRefExpr 0x129827cc0 <col:22> 'const char *' lvalue ParmVar 0x12980dcd8 'data' 'const char *'
    | |   |-UnaryOperator 0x129827d30 <col:28, col:29> 'void **' prefix '&' cannot overflow
    | |   | `-DeclRefExpr 0x129827ce0 <col:29> 'void *' lvalue Var 0x12980e108 'free_arg' 'void *'
    | |   |-IntegerLiteral 0x129827d48 <col:39> 'int' 2
    | |   |-UnaryOperator 0x129827dc0 <col:42, col:43> 'char **' prefix '&' cannot overflow
    | |   | `-DeclRefExpr 0x129827d68 <col:43> 'char *' lvalue Var 0x12980df50 'nick' 'char *'
    | |   `-UnaryOperator 0x129827df8 <col:49, col:50> 'char **' prefix '&' cannot overflow
    | |     `-DeclRefExpr 0x129827dd8 <col:50> 'char *' lvalue Var 0x12980dfd0 'password' 'char *'
    | `-ReturnStmt 0x129827ed0 <line:11:3>
    |-IfStmt 0x129828ed8 <line:12:2, line:29:2>
    | |-BinaryOperator 0x129827f98 <line:12:6, col:19> 'int' '=='
    | | |-ImplicitCastExpr 0x129827f80 <col:6, col:7> 'int' <IntegralCast>
    | | | `-ImplicitCastExpr 0x129827f68 <col:6, col:7> 'char' <LValueToRValue>
    | | |   `-UnaryOperator 0x129827f38 <col:6, col:7> 'char' lvalue prefix '*' cannot overflow
    | | |     `-ImplicitCastExpr 0x129827f20 <col:7> 'char *' <LValueToRValue>
    | | |       `-DeclRefExpr 0x129827f00 <col:7> 'char *' lvalue Var 0x12980dfd0 'password' 'char *'
    | | `-CharacterLiteral 0x129827f50 <col:19> 'int' 0
    | `-CompoundStmt 0x129828eb0 <col:25, line:29:2>
    |   |-BinaryOperator 0x1298286c0 <line:20:3, line:21:27> 'char *' contains-errors '='
    |   | |-DeclRefExpr 0x1298283f0 <line:20:3> 'char *' lvalue Var 0x12980e050 'format' 'char *'
    |   | `-CallExpr 0x129828678 <col:12, line:21:27> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x1298284f0 <line:20:12> 'int ()' Function 0x129828438 'format_get_text' 'int ()'
    |   |   |-RecoveryExpr 0x1298285f8 <col:28> '<dependent type>' contains-errors lvalue
    |   |   |-RecoveryExpr 0x129828618 <col:41> '<dependent type>' contains-errors lvalue
    |   |   |-RecoveryExpr 0x129828540 <col:47> '<dependent type>' contains-errors lvalue
    |   |   |-RecoveryExpr 0x129828638 <col:55> '<dependent type>' contains-errors lvalue
    |   |   `-RecoveryExpr 0x129828658 <line:21:7> '<dependent type>' contains-errors lvalue
    |   |-CallExpr 0x129828d38 <line:26:17, col:30> 'int'
    |   | |-ImplicitCastExpr 0x129828d20 <col:17> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x129828ce0 <col:17> 'int ()' Function 0x129828c28 'g_free' 'int ()'
    |   | `-ImplicitCastExpr 0x129828d60 <col:24> 'char *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x129828d00 <col:24> 'char *' lvalue Var 0x12980e050 'format' 'char *'
    |   `-CallExpr 0x129828e90 <line:28:3, col:15> 'int'
    |     `-ImplicitCastExpr 0x129828e78 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x129828e58 <col:3> 'int ()' Function 0x129828da0 'signal_stop' 'int ()'
    `-CallExpr 0x129829030 <line:31:2, col:26> 'int'
      |-ImplicitCastExpr 0x129829018 <col:2> 'int (*)()' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x129828fd8 <col:2> 'int ()' Function 0x129828f20 'cmd_params_free' 'int ()'
      `-ImplicitCastExpr 0x129829058 <col:18> 'void *' <LValueToRValue>
        `-DeclRefExpr 0x129828ff8 <col:18> 'void *' lvalue Var 0x12980e108 'free_arg' 'void *'
