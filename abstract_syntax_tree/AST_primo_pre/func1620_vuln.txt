`-FunctionDecl 0x1279289f8  line:1:10 invalid DoCompute 'int (int *)'
  |-ParmVarDecl 0x127928928 <col:20, col:37> col:37 invalid ctx 'int *'
  `-CompoundStmt 0x1279426e8 <col:42, line:49:3>
    |-RecoveryExpr 0x127928ad8 <line:2:5> '<dependent type>' contains-errors lvalue
    |-RecoveryExpr 0x127928f00 <line:10:5> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x127942170 <line:11:5, col:68> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x127928f20 <col:5> 'int ()' Function 0x127928b98 'TF_RETURN_IF_ERROR' 'int ()'
    | `-CallExpr 0x127942140 <col:24, col:67> '<dependent type>' contains-errors
    |   |-CXXDependentScopeMemberExpr 0x127942000 <col:24, col:36> '<dependent type>' contains-errors lvalue ->NewWritableFile
    |   | `-CallExpr 0x127928fa8 <col:24, col:33> '<dependent type>' contains-errors
    |   |   `-CXXDependentScopeMemberExpr 0x127928f60 <col:24, col:29> '<dependent type>' contains-errors lvalue ->env
    |   |     `-RecoveryExpr 0x127928f40 <col:24> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x1279420e8 <col:52> '<dependent type>' contains-errors lvalue
    |   `-UnaryOperator 0x127942128 <col:62, col:63> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x127942108 <col:63> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x127942218 <line:12:5, line:14:78>
    | `-VarDecl 0x1279421b0 <line:12:5, col:10> col:10 used writer 'int' auto
    `-DoStmt 0x1279426c8 <line:38:5, line:47:30>
      |-CompoundStmt 0x127942690 <line:38:8, line:47:5>
      | `-IfStmt 0x127942670 <line:42:7, line:45:7>
      |   |-RecoveryExpr 0x1279425a0 <line:42:11, col:12> '_Bool' contains-errors
      |   `-CompoundStmt 0x127942660 <col:29, line:45:7>
      `-RecoveryExpr 0x1279426a8 <line:47:14, col:15> '_Bool' contains-errors
