`-FunctionDecl 0x12a00de38  line:1:1 TEST 'int (int, int)'
  |-ParmVarDecl 0x12a00dd58 <col:6> col:6 used IndexBoundsBuilderTest 'int'
  |-ParmVarDecl 0x12a00dcd8 <col:30> col:30 TranslateDottedEqualsToNullShouldBuildInexactBounds 'int'
  `-CompoundStmt 0x12a026a18 <col:83, line:16:1>
    |-DeclStmt 0x12a00e188 <line:3:5, col:57>
    | `-VarDecl 0x12a00df68 <col:5, col:56> col:10 testIndex 'int' auto cinit
    |   `-CallExpr 0x12a00e160 <col:22, col:56> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x12a00e0e0 <col:22> 'int ()' Function 0x12a00e028 'buildSimpleIndexEntry' 'int ()'
    |     `-RecoveryExpr 0x12a00e140 <col:44> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x12a00e3a8 <line:6:5, col:42>
    | `-VarDecl 0x12a00e1b8 <col:5, col:41> col:10 expr 'int' auto cinit
    |   `-CallExpr 0x12a00e380 <col:17, col:41> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x12a00e300 <col:17> 'int ()' Function 0x12a00e248 'parseMatchExpression' 'int ()'
    |     `-RecoveryExpr 0x12a00e360 <col:38> '<dependent type>' contains-errors lvalue
    |-DeclRefExpr 0x12a026600 <line:9:5> 'int' lvalue ParmVar 0x12a00dd58 'IndexBoundsBuilderTest' 'int'
    |-DeclRefExpr 0x12a026650 <line:10:5> 'int' lvalue ParmVar 0x12a00dd58 'IndexBoundsBuilderTest' 'int'
    `-CallExpr 0x12a0268c8 <line:13:5, col:34> '<dependent type>' contains-errors
      |-DeclRefExpr 0x12a026750 <col:5> 'int ()' Function 0x12a026698 'ASSERT_EQUALS' 'int ()'
      |-CXXDependentScopeMemberExpr 0x12a026880 <col:19, col:23> '<dependent type>' contains-errors lvalue .name
      | `-RecoveryExpr 0x12a026860 <col:19> '<dependent type>' contains-errors lvalue
      `-StringLiteral 0x12a026810 <col:29> 'char[4]' lvalue "STR"
