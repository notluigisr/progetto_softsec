`-FunctionDecl 0x12a122768  line:1:16 invalid strupper_talloc_n_handle 'int *(struct smb_iconv_handle *, int *, const char *, int)'
  |-ParmVarDecl 0x12a80e268 <col:41, col:66> col:66 used iconv_handle 'struct smb_iconv_handle *'
  |-ParmVarDecl 0x12a80e318 <line:2:6, col:18> col:18 invalid ctx 'int *'
  |-ParmVarDecl 0x12a80e398 <col:23, col:35> col:35 used src 'const char *'
  |-ParmVarDecl 0x12a122618 <col:40, col:47> col:47 invalid n 'int'
  `-CompoundStmt 0x12a123f80 <line:3:1, line:41:1>
    |-RecoveryExpr 0x12a122910 <line:4:2, col:14> '<dependent type>' contains-errors lvalue
    | |-UnaryExprOrTypeTraitExpr 0x12a1228f0 <col:2, col:9> 'unsigned long' contains-errors sizeof
    | | `-RecoveryExpr 0x12a1228d0 <col:9> '<dependent type>' contains-errors lvalue
    | `-IntegerLiteral 0x12a122868 <col:14> 'int' 0
    |-DeclStmt 0x12a1229c0 <line:5:2, col:12>
    | `-VarDecl 0x12a122958 <col:2, col:8> col:8 used dest 'char *'
    |-IfStmt 0x12a122a88 <line:7:2, line:9:2>
    | |-UnaryOperator 0x12a122a10 <line:7:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x12a1229f8 <col:7> 'const char *' <LValueToRValue>
    | |   `-DeclRefExpr 0x12a1229d8 <col:7> 'const char *' lvalue ParmVar 0x12a80e398 'src' 'const char *'
    | `-CompoundStmt 0x12a122a70 <col:12, line:9:2>
    |   `-ReturnStmt 0x12a122a60 <line:8:3, col:10>
    |     `-RecoveryExpr 0x12a122a40 <col:10> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12a122e18 <line:13:2, line:15:2>
    | |-BinaryOperator 0x12a122d98 <line:13:6, col:14> 'int' contains-errors '=='
    | | |-DeclRefExpr 0x12a122d20 <col:6> 'char *' lvalue Var 0x12a122958 'dest' 'char *'
    | | `-RecoveryExpr 0x12a122d78 <col:14> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x12a122e00 <col:20, line:15:2>
    |   `-ReturnStmt 0x12a122df0 <line:14:3, col:10>
    |     `-RecoveryExpr 0x12a122dd0 <col:10> '<dependent type>' contains-errors lvalue
    |-WhileStmt 0x12a1234f8 <line:17:2, line:31:2>
    | |-BinaryOperator 0x12a122ec0 <line:17:9, col:17> 'int' contains-errors '&&'
    | | |-UnaryOperator 0x12a122e58 <col:9, col:10> '<dependent type>' contains-errors postfix '--' cannot overflow
    | | | `-RecoveryExpr 0x12a122e38 <col:9> '<dependent type>' contains-errors lvalue
    | | `-UnaryOperator 0x12a122ea8 <col:16, col:17> 'const char' lvalue prefix '*' cannot overflow
    | |   `-ImplicitCastExpr 0x12a122e90 <col:17> 'const char *' <LValueToRValue>
    | |     `-DeclRefExpr 0x12a122e70 <col:17> 'const char *' lvalue ParmVar 0x12a80e398 'src' 'const char *'
    | `-CompoundStmt 0x12a1234d0 <col:22, line:31:2>
    |   |-UnaryExprOrTypeTraitExpr 0x12a122f38 <line:18:3, col:10> 'unsigned long' contains-errors sizeof
    |   | `-RecoveryExpr 0x12a122f18 <col:10> '<dependent type>' contains-errors lvalue
    |   |-CompoundAssignOperator 0x12a122fe0 <line:21:3, col:10> 'const char *' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   | |-DeclRefExpr 0x12a122f58 <col:3> 'const char *' lvalue ParmVar 0x12a80e398 'src' 'const char *'
    |   | `-RecoveryExpr 0x12a122fc0 <col:10> '<dependent type>' contains-errors lvalue
    |   `-IfStmt 0x12a1234b0 <line:26:3, line:29:3>
    |     |-RecoveryExpr 0x12a1232c8 <line:26:7, col:18> '_Bool' contains-errors
    |     `-CompoundStmt 0x12a123498 <col:21, line:29:3>
    |       `-CallExpr 0x12a123458 <line:27:4, col:20> 'int'
    |         |-ImplicitCastExpr 0x12a123440 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |         | `-DeclRefExpr 0x12a1233c8 <col:4> 'int ()' Function 0x12a123310 'talloc_free' 'int ()'
    |         `-ImplicitCastExpr 0x12a123480 <col:16> 'char *' <LValueToRValue>
    |           `-DeclRefExpr 0x12a1233e8 <col:16> 'char *' lvalue Var 0x12a122958 'dest' 'char *'
    |-CallExpr 0x12a123e90 <line:38:2, col:34> 'int'
    | |-ImplicitCastExpr 0x12a123e78 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x12a123e18 <col:2> 'int ()' Function 0x12a123d60 'talloc_set_name_const' 'int ()'
    | |-ImplicitCastExpr 0x12a123ec0 <col:24> 'char *' <LValueToRValue>
    | | `-DeclRefExpr 0x12a123e38 <col:24> 'char *' lvalue Var 0x12a122958 'dest' 'char *'
    | `-ImplicitCastExpr 0x12a123ed8 <col:30> 'char *' <LValueToRValue>
    |   `-DeclRefExpr 0x12a123e58 <col:30> 'char *' lvalue Var 0x12a122958 'dest' 'char *'
    `-ReturnStmt 0x12a123f70 <line:40:2, col:9>
      `-ImplicitCastExpr 0x12a123f28 <col:9> 'int *' <BitCast>
        `-ImplicitCastExpr 0x12a123f10 <col:9> 'char *' <LValueToRValue>
          `-DeclRefExpr 0x12a123ef0 <col:9> 'char *' lvalue Var 0x12a122958 'dest' 'char *'
