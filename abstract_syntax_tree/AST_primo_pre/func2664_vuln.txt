`-FunctionDecl 0x11f826748  line:1:12 perf_trace_event_perm 'int (struct ftrace_event_call *, struct perf_event *)' static
  |-ParmVarDecl 0x11f80e248 <col:34, col:60> col:60 used tp_event 'struct ftrace_event_call *'
  |-ParmVarDecl 0x11f826628 <line:2:6, col:25> col:25 used p_event 'struct perf_event *'
  `-CompoundStmt 0x11f8270e8 <line:3:1, line:19:1>
    |-IfStmt 0x11f826990 <line:5:2, line:6:10>
    | |-RecoveryExpr 0x11f826940 <line:5:6, col:51> '_Bool' contains-errors
    | `-ReturnStmt 0x11f826980 <line:6:3, col:10>
    |   `-IntegerLiteral 0x11f826960 <col:10> 'int' 0
    |-IfStmt 0x11f826bc8 <line:9:2, line:12:2>
    | |-BinaryOperator 0x11f826a68 <line:9:6, col:31> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x11f8269e8 <col:6, col:15> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x11f8269b0 <col:6> 'struct perf_event *' lvalue ParmVar 0x11f826628 'p_event' 'struct perf_event *'
    | | `-RecoveryExpr 0x11f826a48 <col:31> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x11f826bb0 <col:49, line:12:2>
    |   `-IfStmt 0x11f826b90 <line:10:3, line:11:11>
    |     |-BinaryOperator 0x11f826b40 <line:10:7, col:25> '<dependent type>' contains-errors '&'
    |     | |-RecoveryExpr 0x11f826ac0 <col:7, col:17> '<dependent type>' contains-errors lvalue
    |     | | `-DeclRefExpr 0x11f826a88 <col:7> 'struct ftrace_event_call *' lvalue ParmVar 0x11f80e248 'tp_event' 'struct ftrace_event_call *'
    |     | `-RecoveryExpr 0x11f826b20 <col:25> '<dependent type>' contains-errors lvalue
    |     `-ReturnStmt 0x11f826b80 <line:11:4, col:11>
    |       `-IntegerLiteral 0x11f826b60 <col:11> 'int' 0
    |-IfStmt 0x11f827098 <line:15:2, line:16:11>
    | |-BinaryOperator 0x11f826fd0 <line:15:6, col:62> 'int' contains-errors '&&'
    | | |-CallExpr 0x11f826f50 <col:6, col:35> 'int'
    | | | `-ImplicitCastExpr 0x11f826f38 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | |   `-DeclRefExpr 0x11f826d00 <col:6> 'int ()' Function 0x11f826c48 'perf_paranoid_tracepoint_raw' 'int ()'
    | | `-UnaryOperator 0x11f826fb8 <col:40, col:62> '<dependent type>' contains-errors prefix '!' cannot overflow
    | |   `-CallExpr 0x11f826f90 <col:41, col:62> '<dependent type>' contains-errors
    | |     |-DeclRefExpr 0x11f826e68 <col:41> 'int ()' Function 0x11f826db0 'capable' 'int ()'
    | |     `-RecoveryExpr 0x11f826f70 <col:49> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x11f827088 <line:16:3, col:11>
    |   `-UnaryOperator 0x11f827070 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x11f827058 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x11f827038 <col:11> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x11f8270d8 <line:18:2, col:9>
      `-IntegerLiteral 0x11f8270b8 <col:9> 'int' 0
