`-FunctionDecl 0x14c81f398  line:1:12 DefragMfIpv6Test 'int (void)' static
  `-CompoundStmt 0x14d104260 <line:2:1, line:53:1>
    |-DeclStmt 0x14c81f528 <line:3:5, col:19>
    | `-VarDecl 0x14c81f4a0 <col:5, col:18> col:9 used retval 'int' cinit
    |   `-IntegerLiteral 0x14c81f508 <col:18> 'int' 0
    |-DeclStmt 0x14c81f5e0 <line:4:5, col:18>
    | `-VarDecl 0x14c81f558 <col:5, col:17> col:9 used ip_id 'int' cinit
    |   `-IntegerLiteral 0x14c81f5c0 <col:17> 'int' 9
    |-CallExpr 0x14c81f7b8 <line:7:5, col:16> 'int'
    | `-ImplicitCastExpr 0x14c81f7a0 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x14c81f750 <col:5> 'int ()' Function 0x14c81f698 'DefragInit' 'int ()'
    |-IfStmt 0x14d103980 <line:12:5, line:14:5>
    | |-BinaryOperator 0x14d1038e0 <line:12:9, col:43> 'int' contains-errors '||'
    | | |-BinaryOperator 0x14d103860 <col:9, col:29> 'int' contains-errors '||'
    | | | |-BinaryOperator 0x14d1037e0 <col:9, col:15> 'int' contains-errors '=='
    | | | | |-RecoveryExpr 0x14d1037a0 <col:9> '<dependent type>' contains-errors lvalue
    | | | | `-RecoveryExpr 0x14d1037c0 <col:15> '<dependent type>' contains-errors lvalue
    | | | `-BinaryOperator 0x14d103840 <col:23, col:29> 'int' contains-errors '=='
    | | |   |-RecoveryExpr 0x14d103800 <col:23> '<dependent type>' contains-errors lvalue
    | | |   `-RecoveryExpr 0x14d103820 <col:29> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x14d1038c0 <col:37, col:43> 'int' contains-errors '=='
    | |   |-RecoveryExpr 0x14d103880 <col:37> '<dependent type>' contains-errors lvalue
    | |   `-RecoveryExpr 0x14d1038a0 <col:43> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x14d103968 <col:49, line:14:5>
    |   `-GotoStmt 0x14d103950 <line:13:9, col:14> 'end' 0x14d103900
    |-IfStmt 0x14d103af0 <line:17:5, line:19:5>
    | |-RecoveryExpr 0x14d103aa0 <line:17:9, col:14> '_Bool' contains-errors
    | `-CompoundStmt 0x14d103ad8 <col:20, line:19:5>
    |   `-GotoStmt 0x14d103ac0 <line:18:9, col:14> 'end' 0x14d103900
    |-IfStmt 0x14d103b80 <line:22:5, line:24:5>
    | |-RecoveryExpr 0x14d103b30 <line:22:9, col:14> '_Bool' contains-errors
    | `-CompoundStmt 0x14d103b68 <col:20, line:24:5>
    |   `-GotoStmt 0x14d103b50 <line:23:9, col:14> 'end' 0x14d103900
    |-IfStmt 0x14d103c10 <line:28:5, line:30:5>
    | |-RecoveryExpr 0x14d103bc0 <line:28:9, col:14> '_Bool' contains-errors
    | `-CompoundStmt 0x14d103bf8 <col:20, line:30:5>
    |   `-GotoStmt 0x14d103be0 <line:29:9, col:14> 'end' 0x14d103900
    |-IfStmt 0x14d103da0 <line:33:5, line:35:5>
    | |-RecoveryExpr 0x14d103d50 <line:33:9, col:29> '_Bool' contains-errors
    | `-CompoundStmt 0x14d103d88 <col:33, line:35:5>
    |   `-GotoStmt 0x14d103d70 <line:34:9, col:14> 'end' 0x14d103900
    |-BinaryOperator 0x14d103e00 <line:37:5, col:14> 'int' '='
    | |-DeclRefExpr 0x14d103dc0 <col:5> 'int' lvalue Var 0x14c81f4a0 'retval' 'int'
    | `-IntegerLiteral 0x14d103de0 <col:14> 'int' 1
    |-LabelStmt 0x14d103f70 <line:38:1, line:41:5> 'end'
    | `-IfStmt 0x14d103f50 <line:39:5, line:41:5>
    |   |-RecoveryExpr 0x14d103e20 <line:39:9, col:15> '_Bool' contains-errors
    |   `-CompoundStmt 0x14d103f40 <col:21, line:41:5>
    |-IfStmt 0x14d103fe0 <line:42:5, line:44:5>
    | |-RecoveryExpr 0x14d103f90 <line:42:9, col:15> '_Bool' contains-errors
    | `-CompoundStmt 0x14d103fd0 <col:21, line:44:5>
    |-IfStmt 0x14d104050 <line:45:5, line:47:5>
    | |-RecoveryExpr 0x14d104000 <line:45:9, col:15> '_Bool' contains-errors
    | `-CompoundStmt 0x14d104040 <col:21, line:47:5>
    |-IfStmt 0x14d1040c0 <line:48:5, line:50:5>
    | |-RecoveryExpr 0x14d104070 <line:48:9, col:14> '_Bool' contains-errors
    | `-CompoundStmt 0x14d1040b0 <col:20, line:50:5>
    |-CallExpr 0x14d1041f8 <line:51:5, col:19> 'int'
    | `-ImplicitCastExpr 0x14d1041e0 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x14d1041c0 <col:5> 'int ()' Function 0x14d104108 'DefragDestroy' 'int ()'
    `-ReturnStmt 0x14d104250 <line:52:5, col:12>
      `-ImplicitCastExpr 0x14d104238 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x14d104218 <col:12> 'int' lvalue Var 0x14c81f4a0 'retval' 'int'
