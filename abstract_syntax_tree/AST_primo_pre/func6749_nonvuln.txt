`-FunctionDecl 0x13f00ddf8  line:1:1 invalid for_neg_int_continue 'int (int *)'
  |-ParmVarDecl 0x13f00dd28 <col:22, col:31> col:31 invalid i_ctx_p 'int *'
  `-CompoundStmt 0x13f028100 <line:2:1, line:17:1>
    |-DeclStmt 0x13f00df40 <line:4:5, col:29>
    | `-VarDecl 0x13f00dec0 <col:5, col:21> col:21 referenced invalid ep 'int' register
    |-DeclStmt 0x13f00e0f8 <line:5:5, col:34>
    | `-VarDecl 0x13f00df70 <col:5, col:28> col:9 used var 'int' cinit
    |   `-CXXDependentScopeMemberExpr 0x13f00e0b0 <col:15, col:28> '<dependent type>' contains-errors lvalue .intval
    |     `-CXXDependentScopeMemberExpr 0x13f00e068 <col:15, col:22> '<dependent type>' contains-errors lvalue .value
    |       `-ArraySubscriptExpr 0x13f00e048 <col:15, col:20> '<dependent type>' contains-errors lvalue
    |         |-ImplicitCastExpr 0x13f00e030 <col:15> '<dependent type>' contains-errors <LValueToRValue>
    |         | `-RecoveryExpr 0x13f00dfd8 <col:15> '<dependent type>' contains-errors lvalue
    |         `-UnaryOperator 0x13f00e018 <col:18, col:19> 'int' prefix '-'
    |           `-IntegerLiteral 0x13f00dff8 <col:19> 'int' 3
    |-IfStmt 0x13f00e370 <line:7:5, line:10:5>
    | |-BinaryOperator 0x13f00e250 <line:7:9, col:28> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x13f00e110 <col:9> 'int' contains-errors lvalue Var 0x13f00df70 'var' 'int'
    | | `-CXXDependentScopeMemberExpr 0x13f00e208 <col:15, col:28> '<dependent type>' contains-errors lvalue .intval
    | |   `-CXXDependentScopeMemberExpr 0x13f00e1c0 <col:15, col:22> '<dependent type>' contains-errors lvalue .value
    | |     `-ArraySubscriptExpr 0x13f00e1a0 <col:15, col:20> '<dependent type>' contains-errors lvalue
    | |       |-ImplicitCastExpr 0x13f00e188 <col:15> '<dependent type>' contains-errors <LValueToRValue>
    | |       | `-RecoveryExpr 0x13f00e130 <col:15> '<dependent type>' contains-errors lvalue
    | |       `-UnaryOperator 0x13f00e170 <col:18, col:19> 'int' prefix '-'
    | |         `-IntegerLiteral 0x13f00e150 <col:19> 'int' 1
    | `-CompoundStmt 0x13f00e350 <col:36, line:10:5>
    |   |-CompoundAssignOperator 0x13f00e2d8 <line:8:9, col:16> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   | |-RecoveryExpr 0x13f00e290 <col:9> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x13f00e270 <col:9> 'int' lvalue Var 0x13f00dec0 'ep' 'int'
    |   | `-IntegerLiteral 0x13f00e2b8 <col:16> 'int' 5
    |   `-ReturnStmt 0x13f00e340 <line:9:9, col:16>
    |     `-RecoveryExpr 0x13f00e320 <col:16> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x13f027998 <line:11:5, col:11> 'int'
    | |-ImplicitCastExpr 0x13f027980 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x13f027910 <col:5> 'int ()' Function 0x13f027858 'push' 'int ()'
    | `-IntegerLiteral 0x13f027930 <col:10> 'int' 1
    |-CallExpr 0x13f027b48 <line:12:5, col:21> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13f027aa0 <col:5> 'int ()' Function 0x13f0279e8 'make_int' 'int ()'
    | |-RecoveryExpr 0x13f027b28 <col:14> '<dependent type>' contains-errors lvalue
    | `-DeclRefExpr 0x13f027ad8 <col:18> 'int' contains-errors lvalue Var 0x13f00df70 'var' 'int'
    |-BinaryOperator 0x13f027e20 <line:13:5, col:46> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x13f027c78 <col:5, col:18> '<dependent type>' contains-errors lvalue .intval
    | | `-CXXDependentScopeMemberExpr 0x13f027c30 <col:5, col:12> '<dependent type>' contains-errors lvalue .value
    | |   `-ArraySubscriptExpr 0x13f027c10 <col:5, col:10> '<dependent type>' contains-errors lvalue
    | |     |-ImplicitCastExpr 0x13f027bf8 <col:5> '<dependent type>' contains-errors <LValueToRValue>
    | |     | `-RecoveryExpr 0x13f027b98 <col:5> '<dependent type>' contains-errors lvalue
    | |     |   `-DeclRefExpr 0x13f027b78 <col:5> 'int' lvalue Var 0x13f00dec0 'ep' 'int'
    | |     `-UnaryOperator 0x13f027be0 <col:8, col:9> 'int' prefix '-'
    | |       `-IntegerLiteral 0x13f027bc0 <col:9> 'int' 3
    | `-BinaryOperator 0x13f027e00 <col:27, col:46> '<dependent type>' contains-errors '+'
    |   |-DeclRefExpr 0x13f027cc0 <col:27> 'int' contains-errors lvalue Var 0x13f00df70 'var' 'int'
    |   `-CXXDependentScopeMemberExpr 0x13f027db8 <col:33, col:46> '<dependent type>' contains-errors lvalue .intval
    |     `-CXXDependentScopeMemberExpr 0x13f027d70 <col:33, col:40> '<dependent type>' contains-errors lvalue .value
    |       `-ArraySubscriptExpr 0x13f027d50 <col:33, col:38> '<dependent type>' contains-errors lvalue
    |         |-ImplicitCastExpr 0x13f027d38 <col:33> '<dependent type>' contains-errors <LValueToRValue>
    |         | `-RecoveryExpr 0x13f027ce0 <col:33> '<dependent type>' contains-errors lvalue
    |         `-UnaryOperator 0x13f027d20 <col:36, col:37> 'int' prefix '-'
    |           `-IntegerLiteral 0x13f027d00 <col:37> 'int' 2
    |-CallExpr 0x13f027fc0 <line:14:5, col:26> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13f027f20 <col:5> 'int ()' Function 0x13f027e68 'ref_assign' 'int ()'
    | |-BinaryOperator 0x13f027f80 <col:16, col:21> '<dependent type>' contains-errors '+'
    | | |-RecoveryExpr 0x13f027f40 <col:16> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x13f027f60 <col:21> 'int' 2
    | `-RecoveryExpr 0x13f027fa0 <col:24> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x13f028098 <line:15:5, col:16> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x13f028010 <col:5> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x13f027ff0 <col:5> 'int' lvalue Var 0x13f00dec0 'ep' 'int'
    | `-BinaryOperator 0x13f028078 <col:11, col:16> '<dependent type>' contains-errors '+'
    |   |-RecoveryExpr 0x13f028038 <col:11> '<dependent type>' contains-errors lvalue
    |   `-IntegerLiteral 0x13f028058 <col:16> 'int' 2
    `-ReturnStmt 0x13f0280f0 <line:16:5, col:12>
      `-RecoveryExpr 0x13f0280d0 <col:12> '<dependent type>' contains-errors lvalue
