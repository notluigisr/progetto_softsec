`-FunctionDecl 0x12f140cf8  line:1:27 fib6_locate_1 'struct fib6_node *(struct fib6_node *, const struct in6_addr *, int, int)' static
  |-ParmVarDecl 0x12f128218 <col:41, col:59> col:59 used root 'struct fib6_node *'
  |-ParmVarDecl 0x12f140a28 <line:2:6, col:29> col:29 used addr 'const struct in6_addr *'
  |-ParmVarDecl 0x12f140aa8 <line:3:6, col:10> col:10 used plen 'int'
  |-ParmVarDecl 0x12f140b28 <col:16, col:20> col:20 offset 'int'
  `-CompoundStmt 0x12f142e10 <line:4:1, line:25:1>
    |-DeclStmt 0x12f140e98 <line:5:2, col:22>
    | `-VarDecl 0x12f140e30 <col:2, col:20> col:20 used fn 'struct fib6_node *'
    |-ForStmt 0x12f141988 <line:7:2, line:23:2>
    | |-BinaryOperator 0x12f140f08 <line:7:7, col:12> 'struct fib6_node *' '='
    | | |-DeclRefExpr 0x12f140eb0 <col:7> 'struct fib6_node *' lvalue Var 0x12f140e30 'fn' 'struct fib6_node *'
    | | `-ImplicitCastExpr 0x12f140ef0 <col:12> 'struct fib6_node *' <LValueToRValue>
    | |   `-DeclRefExpr 0x12f140ed0 <col:12> 'struct fib6_node *' lvalue ParmVar 0x12f128218 'root' 'struct fib6_node *'
    | |-<<<NULL>>>
    | |-ImplicitCastExpr 0x12f140f48 <col:18> 'struct fib6_node *' <LValueToRValue>
    | | `-DeclRefExpr 0x12f140f28 <col:18> 'struct fib6_node *' lvalue Var 0x12f140e30 'fn' 'struct fib6_node *'
    | |-<<<NULL>>>
    | `-CompoundStmt 0x12f141958 <col:25, line:23:2>
    |   |-DeclStmt 0x12f141178 <line:8:3, col:66>
    |   | |-RecordDecl 0x12f140f60 <col:3, col:10> col:10 struct rt6key
    |   | `-VarDecl 0x12f1410c8 <col:3, col:18> col:18 used key 'struct rt6key *'
    |   |-IfStmt 0x12f141510 <line:11:3, line:13:11>
    |   | |-BinaryOperator 0x12f1414a8 <line:11:7, line:12:54> 'int' contains-errors '||'
    |   | | |-BinaryOperator 0x12f141210 <line:11:7, col:18> 'int' contains-errors '<'
    |   | | | |-DeclRefExpr 0x12f141190 <col:7> 'int' lvalue ParmVar 0x12f140aa8 'plen' 'int'
    |   | | | `-RecoveryExpr 0x12f1411e8 <col:14, col:18> '<dependent type>' contains-errors lvalue
    |   | | |   `-DeclRefExpr 0x12f1411b0 <col:14> 'struct fib6_node *' lvalue Var 0x12f140e30 'fn' 'struct fib6_node *'
    |   | | `-UnaryOperator 0x12f141490 <line:12:7, col:54> '<dependent type>' contains-errors prefix '!' cannot overflow
    |   | |   `-CallExpr 0x12f141458 <col:8, col:54> '<dependent type>' contains-errors
    |   | |     |-DeclRefExpr 0x12f141340 <col:8> 'int ()' Function 0x12f141288 'ipv6_prefix_equal' 'int ()'
    |   | |     |-UnaryOperator 0x12f1413c0 <col:26, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | |     | `-RecoveryExpr 0x12f141398 <col:27, col:32> '<dependent type>' contains-errors lvalue
    |   | |     |   `-DeclRefExpr 0x12f141360 <col:27> 'struct rt6key *' lvalue Var 0x12f1410c8 'key' 'struct rt6key *'
    |   | |     |-DeclRefExpr 0x12f1413d8 <col:38> 'const struct in6_addr *' lvalue ParmVar 0x12f140a28 'addr' 'const struct in6_addr *'
    |   | |     `-RecoveryExpr 0x12f141430 <col:44, col:48> '<dependent type>' contains-errors lvalue
    |   | |       `-DeclRefExpr 0x12f1413f8 <col:44> 'struct fib6_node *' lvalue Var 0x12f140e30 'fn' 'struct fib6_node *'
    |   | `-ReturnStmt 0x12f141500 <line:13:4, col:11>
    |   |   `-RecoveryExpr 0x12f1414e0 <col:11> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x12f141618 <line:15:3, line:16:11>
    |   | |-BinaryOperator 0x12f1415b0 <line:15:7, col:19> 'int' contains-errors '=='
    |   | | |-DeclRefExpr 0x12f141530 <col:7> 'int' lvalue ParmVar 0x12f140aa8 'plen' 'int'
    |   | | `-RecoveryExpr 0x12f141588 <col:15, col:19> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x12f141550 <col:15> 'struct fib6_node *' lvalue Var 0x12f140e30 'fn' 'struct fib6_node *'
    |   | `-ReturnStmt 0x12f141608 <line:16:4, col:11>
    |   |   `-ImplicitCastExpr 0x12f1415f0 <col:11> 'struct fib6_node *' <LValueToRValue>
    |   |     `-DeclRefExpr 0x12f1415d0 <col:11> 'struct fib6_node *' lvalue Var 0x12f140e30 'fn' 'struct fib6_node *'
    |   `-IfStmt 0x12f141928 <line:19:3, line:22:13> has_else
    |     |-CallExpr 0x12f1417b8 <line:19:7, col:36> '<dependent type>' contains-errors
    |     | |-DeclRefExpr 0x12f141718 <col:7> 'int ()' Function 0x12f141660 'addr_bit_set' 'int ()'
    |     | |-DeclRefExpr 0x12f141738 <col:20> 'const struct in6_addr *' lvalue ParmVar 0x12f140a28 'addr' 'const struct in6_addr *'
    |     | `-RecoveryExpr 0x12f141790 <col:26, col:30> '<dependent type>' contains-errors lvalue
    |     |   `-DeclRefExpr 0x12f141758 <col:26> 'struct fib6_node *' lvalue Var 0x12f140e30 'fn' 'struct fib6_node *'
    |     |-BinaryOperator 0x12f141868 <line:20:4, col:13> 'struct fib6_node *' contains-errors '='
    |     | |-DeclRefExpr 0x12f1417e8 <col:4> 'struct fib6_node *' lvalue Var 0x12f140e30 'fn' 'struct fib6_node *'
    |     | `-RecoveryExpr 0x12f141840 <col:9, col:13> '<dependent type>' contains-errors lvalue
    |     |   `-DeclRefExpr 0x12f141808 <col:9> 'struct fib6_node *' lvalue Var 0x12f140e30 'fn' 'struct fib6_node *'
    |     `-BinaryOperator 0x12f141908 <line:22:4, col:13> 'struct fib6_node *' contains-errors '='
    |       |-DeclRefExpr 0x12f141888 <col:4> 'struct fib6_node *' lvalue Var 0x12f140e30 'fn' 'struct fib6_node *'
    |       `-RecoveryExpr 0x12f1418e0 <col:9, col:13> '<dependent type>' contains-errors lvalue
    |         `-DeclRefExpr 0x12f1418a8 <col:9> 'struct fib6_node *' lvalue Var 0x12f140e30 'fn' 'struct fib6_node *'
    `-ReturnStmt 0x12f142e00 <line:24:2, col:9>
      `-RecoveryExpr 0x12f1419d8 <col:9> '<dependent type>' contains-errors lvalue
