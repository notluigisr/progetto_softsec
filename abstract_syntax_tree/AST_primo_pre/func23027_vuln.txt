`-FunctionDecl 0x15680dee8  line:1:1 invalid dir_globs 'int (long, const int *, int)'
  |-ParmVarDecl 0x15680dcd8 <col:11, col:16> col:16 used argc 'long'
  |-ParmVarDecl 0x15680dd70 <col:22, col:35> col:35 invalid argv 'const int *'
  |-ParmVarDecl 0x15680ddf0 <col:41, col:45> col:45 used flags 'int'
  `-CompoundStmt 0x156828d88 <line:2:1, line:15:1>
    |-DeclStmt 0x15680e028 <line:4:5, col:11>
    | `-VarDecl 0x15680dfc0 <col:5, col:10> col:10 used i 'long'
    |-ForStmt 0x156828d08 <line:6:5, line:12:5>
    | |-BinaryOperator 0x15680e098 <line:6:10, col:14> 'long' '='
    | | |-DeclRefExpr 0x15680e040 <col:10> 'long' lvalue Var 0x15680dfc0 'i' 'long'
    | | `-ImplicitCastExpr 0x15680e080 <col:14> 'long' <IntegralCast>
    | |   `-IntegerLiteral 0x15680e060 <col:14> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x15680e128 <col:17, col:21> 'int' '<'
    | | |-ImplicitCastExpr 0x15680e0f8 <col:17> 'long' <LValueToRValue>
    | | | `-DeclRefExpr 0x15680e0b8 <col:17> 'long' lvalue Var 0x15680dfc0 'i' 'long'
    | | `-ImplicitCastExpr 0x15680e110 <col:21> 'long' <LValueToRValue>
    | |   `-DeclRefExpr 0x15680e0d8 <col:21> 'long' lvalue ParmVar 0x15680dcd8 'argc' 'long'
    | |-UnaryOperator 0x15680e168 <col:27, col:29> 'long' prefix '++'
    | | `-DeclRefExpr 0x15680e148 <col:29> 'long' lvalue Var 0x15680dfc0 'i' 'long'
    | `-CompoundStmt 0x156828cd8 <col:32, line:12:5>
    |   |-DeclStmt 0x15680e200 <line:7:2, col:12>
    |   | `-VarDecl 0x15680e198 <col:2, col:6> col:6 used status 'int'
    |   |-CallExpr 0x156828840 <line:9:2, col:25> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x15680e370 <col:2> 'int ()' Function 0x15680e2b8 'GlobPathValue' 'int ()'
    |   | |-RecoveryExpr 0x156828800 <col:16> '<dependent type>' contains-errors lvalue
    |   | `-RecoveryExpr 0x156828820 <col:21> '<dependent type>' contains-errors lvalue
    |   |-BinaryOperator 0x156828ab0 <line:10:2, col:36> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x156828870 <col:2> 'int' lvalue Var 0x15680e198 'status' 'int'
    |   | `-CallExpr 0x156828a78 <col:11, col:36> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x156828970 <col:11> 'int ()' Function 0x1568288b8 'push_glob' 'int ()'
    |   |   |-RecoveryExpr 0x156828a38 <col:21> '<dependent type>' contains-errors lvalue
    |   |   |-RecoveryExpr 0x156828a58 <col:26> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x1568289c0 <col:31> 'int' lvalue ParmVar 0x15680ddf0 'flags' 'int'
    |   `-IfStmt 0x156828cb8 <line:11:2, col:34>
    |     |-ImplicitCastExpr 0x156828af0 <col:6> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x156828ad0 <col:6> 'int' lvalue Var 0x15680e198 'status' 'int'
    |     `-CallExpr 0x156828c78 <col:14, col:34> 'int'
    |       |-ImplicitCastExpr 0x156828c60 <col:14> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x156828be8 <col:14> 'int ()' Function 0x156828b30 'GLOB_JUMP_TAG' 'int ()'
    |       `-ImplicitCastExpr 0x156828ca0 <col:28> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x156828c08 <col:28> 'int' lvalue Var 0x15680e198 'status' 'int'
    `-ReturnStmt 0x156828d78 <line:14:5, col:12>
      `-RecoveryExpr 0x156828d58 <col:12> '<dependent type>' contains-errors lvalue
