`-FunctionDecl 0x134928258  line:1:1 invalid virDomainAttachDevice 'int (int, const char *)'
  |-ParmVarDecl 0x1349280f0 <col:23, col:36> col:36 invalid domain 'int'
  |-ParmVarDecl 0x134928170 <col:44, col:56> col:56 used xml 'const char *'
  `-CompoundStmt 0x1349425f8 <line:2:1, line:28:1>
    |-CallExpr 0x134928530 <line:5:5, col:40> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x134928470 <col:5> 'int ()' Function 0x1349283b8 'VIR_DOMAIN_DEBUG' 'int ()'
    | |-RecoveryExpr 0x134928490 <col:22> '<dependent type>' contains-errors lvalue
    | |-StringLiteral 0x1349284f0 <col:30> 'char[4]' lvalue "STR"
    | `-DeclRefExpr 0x134928510 <col:37> 'const char *' lvalue ParmVar 0x134928170 'xml' 'const char *'
    |-CallExpr 0x1349286b8 <line:7:5, col:23> 'int'
    | `-ImplicitCastExpr 0x1349286a0 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x134928648 <col:5> 'int ()' Function 0x134928590 'virResetLastError' 'int ()'
    |-CallExpr 0x134941838 <line:9:5, col:36> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1349287b8 <col:5> 'int ()' Function 0x134928700 'virCheckDomainReturn' 'int ()'
    | |-RecoveryExpr 0x1349287d8 <col:26> '<dependent type>' contains-errors lvalue
    | `-UnaryOperator 0x134941820 <col:34, col:35> 'int' prefix '-'
    |   `-IntegerLiteral 0x134941800 <col:35> 'int' 1
    |-CallExpr 0x134941a58 <line:12:5, col:38> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1349419b0 <col:5> 'int ()' Function 0x1349418f8 'virCheckNonNullArgGoto' 'int ()'
    | |-DeclRefExpr 0x1349419d0 <col:28> 'const char *' lvalue ParmVar 0x134928170 'xml' 'const char *'
    | `-RecoveryExpr 0x134941a38 <col:33> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x134941cb8 <line:13:5, col:44> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x134941b68 <col:5> 'int ()' Function 0x134941ab0 'virCheckReadOnlyGoto' 'int ()'
    | |-CXXDependentScopeMemberExpr 0x134941c50 <col:26, col:32> '<dependent type>' contains-errors lvalue ->flags
    | | `-RecoveryExpr 0x134941c30 <col:26> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x134941c98 <col:39> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x1349422a8 <line:15:5, line:21:5>
    | |-CXXDependentScopeMemberExpr 0x134941df8 <line:15:9, col:23> '<dependent type>' contains-errors lvalue ->domainAttachDevice
    | | `-CXXDependentScopeMemberExpr 0x134941db0 <col:9, col:15> '<dependent type>' contains-errors lvalue ->driver
    | |   `-RecoveryExpr 0x134941d90 <col:9> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x134942278 <col:43, line:21:5>
    |   |-DeclStmt 0x134941ec0 <line:16:8, col:15>
    |   | `-VarDecl 0x134941e58 <col:8, col:12> col:12 used ret 'int'
    |   |-BinaryOperator 0x134942110 <line:17:8, col:58> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x134941ed8 <col:8> 'int' lvalue Var 0x134941e58 'ret' 'int'
    |   | `-CallExpr 0x1349420e0 <col:14, col:58> '<dependent type>' contains-errors
    |   |   |-CXXDependentScopeMemberExpr 0x134942098 <col:14, col:28> '<dependent type>' contains-errors lvalue ->domainAttachDevice
    |   |   | `-CXXDependentScopeMemberExpr 0x134942050 <col:14, col:20> '<dependent type>' contains-errors lvalue ->driver
    |   |   |   `-RecoveryExpr 0x134942030 <col:14> '<dependent type>' contains-errors lvalue
    |   |   |-RecoveryExpr 0x134941fa0 <col:47> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x134941fc0 <col:55> 'const char *' lvalue ParmVar 0x134928170 'xml' 'const char *'
    |   |-IfStmt 0x134942210 <line:18:8, line:19:16>
    |   | |-BinaryOperator 0x134942188 <line:18:12, col:18> 'int' '<'
    |   | | |-ImplicitCastExpr 0x134942170 <col:12> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x134942130 <col:12> 'int' lvalue Var 0x134941e58 'ret' 'int'
    |   | | `-IntegerLiteral 0x134942150 <col:18> 'int' 0
    |   | `-GotoStmt 0x1349421f8 <line:19:11, col:16> 'error' 0x1349421a8
    |   `-ReturnStmt 0x134942268 <line:20:8, col:15>
    |     `-ImplicitCastExpr 0x134942250 <col:15> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x134942230 <col:15> 'int' lvalue Var 0x134941e58 'ret' 'int'
    |-CallExpr 0x1349423e0 <line:23:5, col:31> 'int'
    | `-ImplicitCastExpr 0x1349423c8 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x1349423a8 <col:5> 'int ()' Function 0x1349422f0 'virReportUnsupportedError' 'int ()'
    |-LabelStmt 0x134942590 <line:25:2, line:26:34> 'error'
    | `-CallExpr 0x134942568 <col:5, col:34> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1349424e0 <col:5> 'int ()' Function 0x134942428 'virDispatchError' 'int ()'
    |   `-CXXDependentScopeMemberExpr 0x134942520 <col:22, col:30> '<dependent type>' contains-errors lvalue ->conn
    |     `-RecoveryExpr 0x134942500 <col:22> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x1349425e8 <line:27:5, col:13>
      `-UnaryOperator 0x1349425d0 <col:12, col:13> 'int' prefix '-'
        `-IntegerLiteral 0x1349425b0 <col:13> 'int' 1
