`-FunctionDecl 0x15b9287e8  line:1:1 invalid load_policy_from_option 'int (int *, const char *, int **, int)'
  |-ParmVarDecl 0x15b928528 <col:25, col:40> col:40 invalid config 'int *'
  |-ParmVarDecl 0x15b9285a8 <col:48, col:60> col:60 used option_name 'const char *'
  |-ParmVarDecl 0x15b928660 <line:2:25, col:39> col:39 invalid policy 'int **'
  |-ParmVarDecl 0x15b9286e0 <line:3:25, col:29> col:29 used assume_action 'int'
  `-CompoundStmt 0x15b9424f8 <line:4:1, line:33:1>
    |-DeclStmt 0x15b928930 <line:5:3, col:8>
    | `-VarDecl 0x15b9288c8 <col:3, col:7> col:7 used r 'int'
    |-DeclStmt 0x15b9289e8 <line:6:3, col:27>
    | `-VarDecl 0x15b928960 <col:3, col:26> col:7 used killed_any_ports 'int' cinit
    |   `-IntegerLiteral 0x15b9289c8 <col:26> 'int' 0
    |-CallExpr 0x15b928bd0 <line:7:3, col:32> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x15b928b60 <col:3> 'int ()' Function 0x15b928aa8 'addr_policy_list_free' 'int ()'
    | `-UnaryOperator 0x15b928bb8 <col:25, col:26> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   `-ImplicitCastExpr 0x15b928ba0 <col:26> '<dependent type>' contains-errors <LValueToRValue>
    |     `-RecoveryExpr 0x15b928b80 <col:26> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x15b941d08 <line:8:3, col:13> '<dependent type>' contains-errors '='
    | |-UnaryOperator 0x15b941cd0 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x15b941cb8 <col:4> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x15b941c00 <col:4> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x15b941ce8 <col:13> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x15b941ee0 <line:9:3, col:54> 'int' contains-errors '='
    | |-DeclRefExpr 0x15b941d28 <col:3> 'int' lvalue Var 0x15b9288c8 'r' 'int'
    | `-CallExpr 0x15b941ea8 <col:7, col:54> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x15b941e28 <col:7> 'int ()' Function 0x15b941d70 'parse_addr_policy' 'int ()'
    |   |-RecoveryExpr 0x15b941e48 <col:25> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x15b941e68 <col:33> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x15b941e88 <col:41> 'int' lvalue ParmVar 0x15b9286e0 'assume_action' 'int'
    |-IfStmt 0x15b941fd8 <line:10:3, line:12:3>
    | |-BinaryOperator 0x15b941f58 <line:10:7, col:11> 'int' '<'
    | | |-ImplicitCastExpr 0x15b941f40 <col:7> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x15b941f00 <col:7> 'int' lvalue Var 0x15b9288c8 'r' 'int'
    | | `-IntegerLiteral 0x15b941f20 <col:11> 'int' 0
    | `-CompoundStmt 0x15b941fc0 <col:14, line:12:3>
    |   `-ReturnStmt 0x15b941fb0 <line:11:5, col:13>
    |     `-UnaryOperator 0x15b941f98 <col:12, col:13> 'int' prefix '-'
    |       `-IntegerLiteral 0x15b941f78 <col:13> 'int' 1
    |-IfStmt 0x15b942208 <line:13:3, line:28:3>
    | |-UnaryOperator 0x15b942030 <line:13:7, col:8> '<dependent type>' contains-errors prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x15b942018 <col:8> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x15b941ff8 <col:8> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x15b9421f8 <col:16, line:28:3>
    |-IfStmt 0x15b9424a8 <line:29:3, line:31:3>
    | |-ImplicitCastExpr 0x15b942248 <line:29:7> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x15b942228 <col:7> 'int' lvalue Var 0x15b928960 'killed_any_ports' 'int'
    | `-CompoundStmt 0x15b942490 <col:25, line:31:3>
    |   `-CallExpr 0x15b942458 <line:30:5, col:43> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x15b942340 <col:5> 'int ()' Function 0x15b942288 'log_warn' 'int ()'
    |     |-RecoveryExpr 0x15b942438 <col:14> '<dependent type>' contains-errors lvalue
    |     |-StringLiteral 0x15b9423c0 <col:25> 'char[4]' lvalue "STR"
    |     `-DeclRefExpr 0x15b9423e0 <col:32> 'const char *' lvalue ParmVar 0x15b9285a8 'option_name' 'const char *'
    `-ReturnStmt 0x15b9424e8 <line:32:3, col:10>
      `-IntegerLiteral 0x15b9424c8 <col:10> 'int' 0
