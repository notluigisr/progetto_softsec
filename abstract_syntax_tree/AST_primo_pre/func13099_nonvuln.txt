`-FunctionDecl 0x15600dd18  line:1:15 get_cpp_ptr_rtrim 'const char *()'
  `-CompoundStmt 0x15600e348 <line:2:3, line:9:3>
    |-DeclStmt 0x15600de88 <line:3:5, col:18>
    | `-VarDecl 0x15600de20 <col:5, col:17> col:17 used p 'const char *'
    |-ForStmt 0x15600e2c8 <line:4:5, line:7:7>
    | |-<<<NULL>>>
    | |-<<<NULL>>>
    | |-BinaryOperator 0x15600e260 <line:5:10, col:64> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x15600e1b8 <col:10, col:14> 'int' contains-errors '>'
    | | | |-DeclRefExpr 0x15600df10 <col:10> 'const char *' lvalue Var 0x15600de20 'p' 'const char *'
    | | | `-RecoveryExpr 0x15600e198 <col:14> '<dependent type>' contains-errors lvalue
    | | `-CallExpr 0x15600e230 <col:27, col:64> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x15600e080 <col:27> 'int ()' Function 0x15600dfc8 'my_isspace' 'int ()'
    | |   |-RecoveryExpr 0x15600e1d8 <col:38> '<dependent type>' contains-errors lvalue
    | |   `-ArraySubscriptExpr 0x15600e210 <col:59, col:63> 'const char' lvalue
    | |     |-ImplicitCastExpr 0x15600e1f8 <col:59> 'const char *' <LValueToRValue>
    | |     | `-DeclRefExpr 0x15600e0b8 <col:59> 'const char *' lvalue Var 0x15600de20 'p' 'const char *'
    | |     `-UnaryOperator 0x15600e0f8 <col:61, col:62> 'int' prefix '-'
    | |       `-IntegerLiteral 0x15600e0d8 <col:62> 'int' 1
    | |-UnaryOperator 0x15600e2a0 <line:6:10, col:11> 'const char *' postfix '--'
    | | `-DeclRefExpr 0x15600e280 <col:10> 'const char *' lvalue Var 0x15600de20 'p' 'const char *'
    | `-CompoundStmt 0x15600e2b8 <line:7:5, col:7>
    `-ReturnStmt 0x15600e338 <line:8:5, col:12>
      `-ImplicitCastExpr 0x15600e320 <col:12> 'const char *' <LValueToRValue>
        `-DeclRefExpr 0x15600e300 <col:12> 'const char *' lvalue Var 0x15600de20 'p' 'const char *'
