`-FunctionDecl 0x12d9121e8  line:1:1 invalid goa_http_client_check 'int (int *, const char *, const char *, const char *, int, int *, int, int)'
  |-ParmVarDecl 0x12d911d28 <col:24, col:45> col:45 invalid client 'int *'
  |-ParmVarDecl 0x12d911da8 <line:2:24, col:45> col:45 used uri 'const char *'
  |-ParmVarDecl 0x12d911e28 <line:3:24, col:45> col:45 used username 'const char *'
  |-ParmVarDecl 0x12d911ea8 <line:4:24, col:45> col:45 used password 'const char *'
  |-ParmVarDecl 0x12d911f28 <line:5:24, col:45> col:45 invalid accept_ssl_errors 'int'
  |-ParmVarDecl 0x12d911fa8 <line:6:24, col:45> col:45 invalid cancellable 'int *'
  |-ParmVarDecl 0x12d912028 <line:7:24, col:45> col:45 invalid callback 'int'
  |-ParmVarDecl 0x12d9120a8 <line:8:24, col:45> col:45 invalid user_data 'int'
  `-CompoundStmt 0x12d013c10 <line:9:1, line:52:1>
    |-CallExpr 0x12d92b620 <line:13:3, col:48> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12d92b4b8 <col:3> 'int ()' Function 0x12d92b400 'g_return_if_fail' 'int ()'
    | `-CallExpr 0x12d92b5f8 <col:21, col:47> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12d92b5b8 <col:21> 'int ()' Function 0x12d92b500 'GOA_IS_HTTP_CLIENT' 'int ()'
    |   `-RecoveryExpr 0x12d92b5d8 <col:41> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x12d92b8d0 <line:14:3, col:50> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12d92b648 <col:3> 'int ()' Function 0x12d92b400 'g_return_if_fail' 'int ()'
    | `-BinaryOperator 0x12d92b8b0 <col:21, col:46> 'int' contains-errors '||'
    |   |-BinaryOperator 0x12d92b808 <col:21, col:28> 'int' contains-errors '!='
    |   | |-DeclRefExpr 0x12d92b668 <col:21> 'const char *' lvalue ParmVar 0x12d911da8 'uri' 'const char *'
    |   | `-RecoveryExpr 0x12d92b7e8 <col:28> '<dependent type>' contains-errors lvalue
    |   `-BinaryOperator 0x12d92b890 <col:36, col:46> 'int' '!='
    |     |-ImplicitCastExpr 0x12d92b878 <col:36, col:41> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x12d92b860 <col:36, col:41> 'char' <LValueToRValue>
    |     |   `-ArraySubscriptExpr 0x12d92b840 <col:36, col:41> 'const char' lvalue
    |     |     |-ImplicitCastExpr 0x12d92b828 <col:36> 'const char *' <LValueToRValue>
    |     |     | `-DeclRefExpr 0x12d92b6c0 <col:36> 'const char *' lvalue ParmVar 0x12d911da8 'uri' 'const char *'
    |     |     `-IntegerLiteral 0x12d92b6e0 <col:40> 'int' 0
    |     `-CharacterLiteral 0x12d92b738 <col:46> 'int' 0
    |-CallExpr 0x12d92bb80 <line:15:3, col:60> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12d92b8f8 <col:3> 'int ()' Function 0x12d92b400 'g_return_if_fail' 'int ()'
    | `-BinaryOperator 0x12d92bb60 <col:21, col:56> 'int' contains-errors '||'
    |   |-BinaryOperator 0x12d92bab8 <col:21, col:33> 'int' contains-errors '!='
    |   | |-DeclRefExpr 0x12d92b918 <col:21> 'const char *' lvalue ParmVar 0x12d911e28 'username' 'const char *'
    |   | `-RecoveryExpr 0x12d92ba98 <col:33> '<dependent type>' contains-errors lvalue
    |   `-BinaryOperator 0x12d92bb40 <col:41, col:56> 'int' '!='
    |     |-ImplicitCastExpr 0x12d92bb28 <col:41, col:51> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x12d92bb10 <col:41, col:51> 'char' <LValueToRValue>
    |     |   `-ArraySubscriptExpr 0x12d92baf0 <col:41, col:51> 'const char' lvalue
    |     |     |-ImplicitCastExpr 0x12d92bad8 <col:41> 'const char *' <LValueToRValue>
    |     |     | `-DeclRefExpr 0x12d92b970 <col:41> 'const char *' lvalue ParmVar 0x12d911e28 'username' 'const char *'
    |     |     `-IntegerLiteral 0x12d92b990 <col:50> 'int' 0
    |     `-CharacterLiteral 0x12d92b9e8 <col:56> 'int' 0
    |-CallExpr 0x12d92be30 <line:16:3, col:60> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12d92bba8 <col:3> 'int ()' Function 0x12d92b400 'g_return_if_fail' 'int ()'
    | `-BinaryOperator 0x12d92be10 <col:21, col:56> 'int' contains-errors '||'
    |   |-BinaryOperator 0x12d92bd68 <col:21, col:33> 'int' contains-errors '!='
    |   | |-DeclRefExpr 0x12d92bbc8 <col:21> 'const char *' lvalue ParmVar 0x12d911ea8 'password' 'const char *'
    |   | `-RecoveryExpr 0x12d92bd48 <col:33> '<dependent type>' contains-errors lvalue
    |   `-BinaryOperator 0x12d92bdf0 <col:41, col:56> 'int' '!='
    |     |-ImplicitCastExpr 0x12d92bdd8 <col:41, col:51> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x12d92bdc0 <col:41, col:51> 'char' <LValueToRValue>
    |     |   `-ArraySubscriptExpr 0x12d92bda0 <col:41, col:51> 'const char' lvalue
    |     |     |-ImplicitCastExpr 0x12d92bd88 <col:41> 'const char *' <LValueToRValue>
    |     |     | `-DeclRefExpr 0x12d92bc20 <col:41> 'const char *' lvalue ParmVar 0x12d911ea8 'password' 'const char *'
    |     |     `-IntegerLiteral 0x12d92bc40 <col:50> 'int' 0
    |     `-CharacterLiteral 0x12d92bc98 <col:56> 'int' 0
    |-CallExpr 0x12d92c0c0 <line:17:3, col:74> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12d92be58 <col:3> 'int ()' Function 0x12d92b400 'g_return_if_fail' 'int ()'
    | `-BinaryOperator 0x12d92c0a0 <col:21, col:73> 'int' contains-errors '||'
    |   |-BinaryOperator 0x12d92c080 <col:21, col:36> 'int' contains-errors '=='
    |   | |-RecoveryExpr 0x12d92be78 <col:21> '<dependent type>' contains-errors lvalue
    |   | `-RecoveryExpr 0x12d92c060 <col:36> '<dependent type>' contains-errors lvalue
    |   `-CallExpr 0x12d92bff0 <col:44, col:73> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x12d92bfb0 <col:44> 'int ()' Function 0x12d92bef8 'G_IS_CANCELLABLE' 'int ()'
    |     `-RecoveryExpr 0x12d92bfd0 <col:62> '<dependent type>' contains-errors lvalue
    `-IfStmt 0x12d013728 <line:31:3, line:39:5>
      |-RecoveryExpr 0x12d0132b0 <line:31:7, col:22> '_Bool' contains-errors
      `-CompoundStmt 0x12d013718 <line:32:5, line:39:5>
