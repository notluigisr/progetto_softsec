`-FunctionDecl 0x14400e3a8  line:1:1 PHP_FUNCTION 'int (int)'
  |-ParmVarDecl 0x14400e2d8 <col:14> col:14 grapheme_stripos 'int'
  `-CompoundStmt 0x14600ae00 <line:2:1, line:71:1>
    |-DeclStmt 0x14400e6f8 <line:3:2, col:62>
    | |-VarDecl 0x14400e4e8 <col:2, col:17> col:17 used haystack 'unsigned char *'
    | |-VarDecl 0x14400e568 <col:2, col:28> col:28 used needle 'unsigned char *'
    | |-VarDecl 0x14400e5e8 <col:2, col:37> col:37 used haystack_dup 'unsigned char *'
    | `-VarDecl 0x14400e668 <col:2, col:52> col:52 used needle_dup 'unsigned char *'
    |-DeclStmt 0x14400e828 <line:4:2, col:30>
    | |-VarDecl 0x14400e728 <col:2, col:6> col:6 used haystack_len 'int'
    | `-VarDecl 0x14400e7a8 <col:2, col:20> col:20 used needle_len 'int'
    |-DeclStmt 0x14400e8c0 <line:5:2, col:22>
    | `-VarDecl 0x14400e858 <col:2, col:17> col:17 used found 'unsigned char *'
    |-DeclStmt 0x14400e990 <line:6:2, col:18>
    | `-VarDecl 0x14400e8f0 <col:2, col:17> col:7 used loffset 'long' cinit
    |   `-ImplicitCastExpr 0x14400e978 <col:17> 'long' <IntegralCast>
    |     `-IntegerLiteral 0x14400e958 <col:17> 'int' 0
    |-DeclStmt 0x145008268 <line:8:2, col:13>
    | `-VarDecl 0x145008200 <col:2, col:6> col:6 used ret_pos 'int'
    |-DeclStmt 0x145008300 <line:9:2, col:14>
    | `-VarDecl 0x145008298 <col:2, col:6> col:6 used is_ascii 'int'
    |-IfStmt 0x1450087b0 <line:11:2, line:17:2>
    | |-RecoveryExpr 0x1450085d0 <line:11:6, col:141> '_Bool' contains-errors
    | `-CompoundStmt 0x1450087a0 <col:150, line:17:2>
    |-IfStmt 0x145008a28 <line:19:2, line:24:2>
    | |-CallExpr 0x145008928 <line:19:7, col:43> 'int'
    | | |-ImplicitCastExpr 0x145008910 <col:7> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x1450088b0 <col:7> 'int ()' Function 0x1450087f8 'OUTSIDE_STRING' 'int ()'
    | | |-ImplicitCastExpr 0x145008958 <col:22> 'long' <LValueToRValue>
    | | | `-DeclRefExpr 0x1450088d0 <col:22> 'long' lvalue Var 0x14400e8f0 'loffset' 'long'
    | | `-ImplicitCastExpr 0x145008970 <col:31> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x1450088f0 <col:31> 'int' lvalue Var 0x14400e728 'haystack_len' 'int'
    | `-CompoundStmt 0x145008a18 <col:47, line:24:2>
    |-IfStmt 0x145008b98 <line:31:2, line:36:2>
    | |-BinaryOperator 0x145008ad8 <line:31:6, col:20> 'int' '=='
    | | |-ImplicitCastExpr 0x145008ac0 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x145008a80 <col:6> 'int' lvalue Var 0x14400e7a8 'needle_len' 'int'
    | | `-IntegerLiteral 0x145008aa0 <col:20> 'int' 0
    | `-CompoundStmt 0x145008b88 <col:23, line:36:2>
    |-BinaryOperator 0x145008df0 <line:39:2, col:65> 'int' '='
    | |-DeclRefExpr 0x145008bb8 <col:2> 'int' lvalue Var 0x145008298 'is_ascii' 'int'
    | `-ParenExpr 0x145008dd0 <col:13, col:65> 'int'
    |   `-BinaryOperator 0x145008db0 <col:15, col:63> 'int' '>='
    |     |-CallExpr 0x145008d30 <col:15, col:58> 'int'
    |     | |-ImplicitCastExpr 0x145008d18 <col:15> 'int (*)()' <FunctionToPointerDecay>
    |     | | `-DeclRefExpr 0x145008cb8 <col:15> 'int ()' Function 0x145008c00 'grapheme_ascii_check' 'int ()'
    |     | |-ImplicitCastExpr 0x145008d60 <col:36> 'unsigned char *' <LValueToRValue>
    |     | | `-DeclRefExpr 0x145008cd8 <col:36> 'unsigned char *' lvalue Var 0x14400e4e8 'haystack' 'unsigned char *'
    |     | `-ImplicitCastExpr 0x145008d78 <col:46> 'int' <LValueToRValue>
    |     |   `-DeclRefExpr 0x145008cf8 <col:46> 'int' lvalue Var 0x14400e728 'haystack_len' 'int'
    |     `-IntegerLiteral 0x145008d90 <col:63> 'int' 0
    |-IfStmt 0x14600aa58 <line:41:2, line:60:2>
    | |-ImplicitCastExpr 0x145008e30 <line:41:7> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x145008e10 <col:7> 'int' lvalue Var 0x145008298 'is_ascii' 'int'
    | `-CompoundStmt 0x14600aa08 <col:18, line:60:2>
    |   |-BinaryOperator 0x1450090a0 <line:42:3, col:68> 'unsigned char *' '='
    |   | |-DeclRefExpr 0x145008e48 <col:3> 'unsigned char *' lvalue Var 0x14400e668 'needle_dup' 'unsigned char *'
    |   | `-CStyleCastExpr 0x145009078 <col:16, col:68> 'unsigned char *' <IntegralToPointer>
    |   |   `-CallExpr 0x145009018 <col:33, col:68> 'int'
    |   |     |-ImplicitCastExpr 0x145009000 <col:33> 'int (*)()' <FunctionToPointerDecay>
    |   |     | `-DeclRefExpr 0x145008f48 <col:33> 'int ()' Function 0x145008e90 'estrndup' 'int ()'
    |   |     |-CStyleCastExpr 0x145008fb8 <col:42, col:50> 'char *' <BitCast>
    |   |     | `-ImplicitCastExpr 0x145008fa0 <col:50> 'unsigned char *' <LValueToRValue> part_of_explicit_cast
    |   |     |   `-DeclRefExpr 0x145008f68 <col:50> 'unsigned char *' lvalue Var 0x14400e568 'needle' 'unsigned char *'
    |   |     `-ImplicitCastExpr 0x145009048 <col:58> 'int' <LValueToRValue>
    |   |       `-DeclRefExpr 0x145008fe0 <col:58> 'int' lvalue Var 0x14400e7a8 'needle_len' 'int'
    |   |-CallExpr 0x146009e78 <line:43:3, col:48> 'int'
    |   | |-ImplicitCastExpr 0x146009e60 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x1450091a0 <col:3> 'int ()' Function 0x1450090e8 'php_strtolower' 'int ()'
    |   | |-CStyleCastExpr 0x146009e18 <col:18, col:26> 'char *' <BitCast>
    |   | | `-ImplicitCastExpr 0x146009e00 <col:26> 'unsigned char *' <LValueToRValue> part_of_explicit_cast
    |   | |   `-DeclRefExpr 0x1450091c0 <col:26> 'unsigned char *' lvalue Var 0x14400e668 'needle_dup' 'unsigned char *'
    |   | `-ImplicitCastExpr 0x146009ea8 <col:38> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x146009e40 <col:38> 'int' lvalue Var 0x14400e7a8 'needle_len' 'int'
    |   |-BinaryOperator 0x14600a038 <line:44:3, col:74> 'unsigned char *' '='
    |   | |-DeclRefExpr 0x146009ec0 <col:3> 'unsigned char *' lvalue Var 0x14400e5e8 'haystack_dup' 'unsigned char *'
    |   | `-CStyleCastExpr 0x14600a010 <col:18, col:74> 'unsigned char *' <IntegralToPointer>
    |   |   `-CallExpr 0x146009fb0 <col:35, col:74> 'int'
    |   |     |-ImplicitCastExpr 0x146009f98 <col:35> 'int (*)()' <FunctionToPointerDecay>
    |   |     | `-DeclRefExpr 0x146009ee0 <col:35> 'int ()' Function 0x145008e90 'estrndup' 'int ()'
    |   |     |-CStyleCastExpr 0x146009f50 <col:44, col:52> 'char *' <BitCast>
    |   |     | `-ImplicitCastExpr 0x146009f38 <col:52> 'unsigned char *' <LValueToRValue> part_of_explicit_cast
    |   |     |   `-DeclRefExpr 0x146009f00 <col:52> 'unsigned char *' lvalue Var 0x14400e4e8 'haystack' 'unsigned char *'
    |   |     `-ImplicitCastExpr 0x146009fe0 <col:62> 'int' <LValueToRValue>
    |   |       `-DeclRefExpr 0x146009f78 <col:62> 'int' lvalue Var 0x14400e728 'haystack_len' 'int'
    |   |-CallExpr 0x14600a128 <line:45:3, col:52> 'int'
    |   | |-ImplicitCastExpr 0x14600a110 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x14600a058 <col:3> 'int ()' Function 0x1450090e8 'php_strtolower' 'int ()'
    |   | |-CStyleCastExpr 0x14600a0c8 <col:18, col:26> 'char *' <BitCast>
    |   | | `-ImplicitCastExpr 0x14600a0b0 <col:26> 'unsigned char *' <LValueToRValue> part_of_explicit_cast
    |   | |   `-DeclRefExpr 0x14600a078 <col:26> 'unsigned char *' lvalue Var 0x14400e5e8 'haystack_dup' 'unsigned char *'
    |   | `-ImplicitCastExpr 0x14600a158 <col:40> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x14600a0f0 <col:40> 'int' lvalue Var 0x14400e728 'haystack_len' 'int'
    |   |-CallExpr 0x14600a5a8 <line:49:3, col:21> 'int'
    |   | |-ImplicitCastExpr 0x14600a590 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x14600a550 <col:3> 'int ()' Function 0x14600a498 'efree' 'int ()'
    |   | `-ImplicitCastExpr 0x14600a5d0 <col:9> 'unsigned char *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x14600a570 <col:9> 'unsigned char *' lvalue Var 0x14400e5e8 'haystack_dup' 'unsigned char *'
    |   |-CallExpr 0x14600a640 <line:50:3, col:19> 'int'
    |   | |-ImplicitCastExpr 0x14600a628 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x14600a5e8 <col:3> 'int ()' Function 0x14600a498 'efree' 'int ()'
    |   | `-ImplicitCastExpr 0x14600a668 <col:9> 'unsigned char *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x14600a608 <col:9> 'unsigned char *' lvalue Var 0x14400e668 'needle_dup' 'unsigned char *'
    |   |-IfStmt 0x14600a8a0 <line:52:3, line:54:3>
    |   | |-ImplicitCastExpr 0x14600a6a0 <line:52:7> 'unsigned char *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x14600a680 <col:7> 'unsigned char *' lvalue Var 0x14400e858 'found' 'unsigned char *'
    |   | `-CompoundStmt 0x14600a888 <col:14, line:54:3>
    |   |   `-CallExpr 0x14600a860 <line:53:4, col:36> 'int'
    |   |     |-ImplicitCastExpr 0x14600a848 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |   |     | `-DeclRefExpr 0x14600a798 <col:4> 'int ()' Function 0x14600a6e0 'RETURN_LONG' 'int ()'
    |   |     `-BinaryOperator 0x14600a828 <col:16, col:24> 'long' '-'
    |   |       |-ImplicitCastExpr 0x14600a7f8 <col:16> 'unsigned char *' <LValueToRValue>
    |   |       | `-DeclRefExpr 0x14600a7b8 <col:16> 'unsigned char *' lvalue Var 0x14400e858 'found' 'unsigned char *'
    |   |       `-ImplicitCastExpr 0x14600a810 <col:24> 'unsigned char *' <LValueToRValue>
    |   |         `-DeclRefExpr 0x14600a7d8 <col:24> 'unsigned char *' lvalue Var 0x14400e5e8 'haystack_dup' 'unsigned char *'
    |   `-IfStmt 0x14600a9e8 <line:57:3, line:59:3>
    |     |-BinaryOperator 0x14600a9b8 <line:57:8, col:52> 'int' '>='
    |     | |-CallExpr 0x14600a938 <col:8, col:47> 'int'
    |     | | |-ImplicitCastExpr 0x14600a920 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |     | | | `-DeclRefExpr 0x14600a8c0 <col:8> 'int ()' Function 0x145008c00 'grapheme_ascii_check' 'int ()'
    |     | | |-ImplicitCastExpr 0x14600a968 <col:29> 'unsigned char *' <LValueToRValue>
    |     | | | `-DeclRefExpr 0x14600a8e0 <col:29> 'unsigned char *' lvalue Var 0x14400e568 'needle' 'unsigned char *'
    |     | | `-ImplicitCastExpr 0x14600a980 <col:37> 'int' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x14600a900 <col:37> 'int' lvalue Var 0x14400e7a8 'needle_len' 'int'
    |     | `-IntegerLiteral 0x14600a998 <col:52> 'int' 0
    |     `-CompoundStmt 0x14600a9d8 <col:56, line:59:3>
    `-IfStmt 0x14600ad90 <line:65:2, line:69:2> has_else
      |-BinaryOperator 0x14600acb0 <line:65:7, col:18> 'int' '>='
      | |-ImplicitCastExpr 0x14600ac98 <col:7> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x14600ac58 <col:7> 'int' lvalue Var 0x145008200 'ret_pos' 'int'
      | `-IntegerLiteral 0x14600ac78 <col:18> 'int' 0
      |-CompoundStmt 0x14600ad68 <col:22, line:67:2>
      | `-CallExpr 0x14600ad28 <line:66:3, col:22> 'int'
      |   |-ImplicitCastExpr 0x14600ad10 <col:3> 'int (*)()' <FunctionToPointerDecay>
      |   | `-DeclRefExpr 0x14600acd0 <col:3> 'int ()' Function 0x14600a6e0 'RETURN_LONG' 'int ()'
      |   `-ImplicitCastExpr 0x14600ad50 <col:15> 'int' <LValueToRValue>
      |     `-DeclRefExpr 0x14600acf0 <col:15> 'int' lvalue Var 0x145008200 'ret_pos' 'int'
      `-CompoundStmt 0x14600ad80 <line:67:9, line:69:2>
