`-FunctionDecl 0x14000de88  line:1:1 invalid gs_pattern2_set_color 'int (const int *, int *)'
  |-ParmVarDecl 0x14000dcf0 <col:23, col:47> col:47 referenced invalid pcc 'const int *'
  |-ParmVarDecl 0x14000dda8 <col:52, col:64> col:64 referenced invalid pgs 'int *'
  `-CompoundStmt 0x140809800 <line:2:1, line:18:1>
    |-DeclStmt 0x14000e180 <line:5:5, col:13>
    | `-VarDecl 0x14000e118 <col:5, col:9> col:9 used code 'int'
    |-DeclStmt 0x14000e2a0 <line:6:5, col:23>
    | |-VarDecl 0x14000e1a8 <col:5, col:11> col:11 used k 'char'
    | `-VarDecl 0x14000e220 <col:5, col:14> col:14 used num_comps 'char'
    |-BinaryOperator 0x1408090d8 <line:11:5, col:41> 'char' contains-errors '='
    | |-DeclRefExpr 0x14000e388 <col:5> 'char' lvalue Var 0x14000e220 'num_comps' 'char'
    | `-CXXDependentScopeMemberExpr 0x140809090 <col:17, col:41> '<dependent type>' contains-errors lvalue .num_components
    |   `-CXXDependentScopeMemberExpr 0x140809048 <col:17, col:30> '<dependent type>' contains-errors lvalue ->color_info
    |     `-CXXDependentScopeMemberExpr 0x140809000 <col:17, col:22> '<dependent type>' contains-errors lvalue ->device
    |       `-RecoveryExpr 0x14000e3a8 <col:17> '<dependent type>' contains-errors lvalue
    |-ForStmt 0x1408094d0 <line:12:5, line:15:5>
    | |-BinaryOperator 0x140809150 <line:12:10, col:14> 'char' '='
    | | |-DeclRefExpr 0x1408090f8 <col:10> 'char' lvalue Var 0x14000e1a8 'k' 'char'
    | | `-ImplicitCastExpr 0x140809138 <col:14> 'char' <IntegralCast>
    | |   `-IntegerLiteral 0x140809118 <col:14> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x140809210 <col:17, col:21> 'int' '<'
    | | |-ImplicitCastExpr 0x1408091e0 <col:17> 'int' <IntegralCast>
    | | | `-ImplicitCastExpr 0x1408091b0 <col:17> 'char' <LValueToRValue>
    | | |   `-DeclRefExpr 0x140809170 <col:17> 'char' lvalue Var 0x14000e1a8 'k' 'char'
    | | `-ImplicitCastExpr 0x1408091f8 <col:21> 'int' <IntegralCast>
    | |   `-ImplicitCastExpr 0x1408091c8 <col:21> 'char' <LValueToRValue>
    | |     `-DeclRefExpr 0x140809190 <col:21> 'char' lvalue Var 0x14000e220 'num_comps' 'char'
    | |-UnaryOperator 0x140809250 <col:32, col:33> 'char' postfix '++' cannot overflow
    | | `-DeclRefExpr 0x140809230 <col:32> 'char' lvalue Var 0x14000e1a8 'k' 'char'
    | `-CompoundStmt 0x1408094c0 <col:37, line:15:5>
    |-BinaryOperator 0x140809798 <line:16:5, col:45> 'int' contains-errors '='
    | |-DeclRefExpr 0x140809508 <col:5> 'int' lvalue Var 0x14000e118 'code' 'int'
    | `-CallExpr 0x140809768 <col:12, col:45> '<dependent type>' contains-errors
    |   |-CXXDependentScopeMemberExpr 0x140809700 <col:12, col:23> '<dependent type>' contains-errors lvalue ->set_overprint
    |   | `-CXXDependentScopeMemberExpr 0x1408096b8 <col:12, col:17> '<dependent type>' contains-errors lvalue ->type
    |   |   `-RecoveryExpr 0x140809698 <col:12> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x140809748 <col:37> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x1408095e8 <col:42> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x1408097f0 <line:17:5, col:12>
      `-ImplicitCastExpr 0x1408097d8 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x1408097b8 <col:12> 'int' lvalue Var 0x14000e118 'code' 'int'
