`-FunctionDecl 0x12e928750  line:1:6 ping_unhash 'void (struct sock *)'
  |-ParmVarDecl 0x12e928648 <col:18, col:31> col:31 used sk 'struct sock *'
  `-CompoundStmt 0x12e942e40 <line:2:1, line:15:1>
    |-DeclStmt 0x12e940e48 <line:3:2, col:37>
    | |-RecordDecl 0x12e940a48 <col:2, col:9> col:9 struct inet_sock
    | `-VarDecl 0x12e940bb8 <col:2, col:36> col:20 used isk 'struct inet_sock *' cinit
    |   `-ImplicitCastExpr 0x12e940e18 <col:26, col:36> 'struct inet_sock *' <IntegralToPointer>
    |     `-CallExpr 0x12e940dd8 <col:26, col:36> 'int'
    |       |-ImplicitCastExpr 0x12e940dc0 <col:26> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x12e940d50 <col:26> 'int ()' Function 0x12e940c98 'inet_sk' 'int ()'
    |       `-ImplicitCastExpr 0x12e940e00 <col:34> 'struct sock *' <LValueToRValue>
    |         `-DeclRefExpr 0x12e940d70 <col:34> 'struct sock *' lvalue ParmVar 0x12e928648 'sk' 'struct sock *'
    |-CallExpr 0x12e941040 <line:4:2, col:36> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12e940f40 <col:2> 'int ()' Function 0x12e940e88 'pr_debug' 'int ()'
    | |-StringLiteral 0x12e940fa0 <col:11> 'char[4]' lvalue "STR"
    | |-DeclRefExpr 0x12e940fc0 <col:18> 'struct inet_sock *' lvalue Var 0x12e940bb8 'isk' 'struct inet_sock *'
    | `-RecoveryExpr 0x12e941018 <col:23, col:28> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x12e940fe0 <col:23> 'struct inet_sock *' lvalue Var 0x12e940bb8 'isk' 'struct inet_sock *'
    `-IfStmt 0x12e942e20 <line:5:2, line:14:2>
      |-CallExpr 0x12e9411b0 <line:5:6, col:18> 'int'
      | |-ImplicitCastExpr 0x12e941198 <col:6> 'int (*)()' <FunctionToPointerDecay>
      | | `-DeclRefExpr 0x12e941158 <col:6> 'int ()' Function 0x12e9410a0 'sk_hashed' 'int ()'
      | `-ImplicitCastExpr 0x12e9411d8 <col:16> 'struct sock *' <LValueToRValue>
      |   `-DeclRefExpr 0x12e941178 <col:16> 'struct sock *' lvalue ParmVar 0x12e928648 'sk' 'struct sock *'
      `-CompoundStmt 0x12e942dd0 <col:21, line:14:2>
        |-CallExpr 0x12e941410 <line:6:3, col:33> '<dependent type>' contains-errors
        | |-DeclRefExpr 0x12e9412d0 <col:3> 'int ()' Function 0x12e941218 'write_lock_bh' 'int ()'
        | `-UnaryOperator 0x12e9413f8 <col:17, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow
        |   `-CXXDependentScopeMemberExpr 0x12e9413b0 <col:18, col:29> '<dependent type>' contains-errors lvalue .lock
        |     `-RecoveryExpr 0x12e941390 <col:18> '<dependent type>' contains-errors lvalue
        |-CallExpr 0x12e9415b0 <line:7:3, col:37> '<dependent type>' contains-errors
        | |-DeclRefExpr 0x12e941518 <col:3> 'int ()' Function 0x12e941460 'hlist_nulls_del' 'int ()'
        | `-UnaryOperator 0x12e941598 <col:19, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow
        |   `-RecoveryExpr 0x12e941570 <col:20, col:24> '<dependent type>' contains-errors lvalue
        |     `-DeclRefExpr 0x12e941538 <col:20> 'struct sock *' lvalue ParmVar 0x12e928648 'sk' 'struct sock *'
        |-CallExpr 0x12e941750 <line:8:3, col:40> '<dependent type>' contains-errors
        | |-DeclRefExpr 0x12e9416b8 <col:3> 'int ()' Function 0x12e941600 'sk_nulls_node_init' 'int ()'
        | `-UnaryOperator 0x12e941738 <col:22, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow
        |   `-RecoveryExpr 0x12e941710 <col:23, col:27> '<dependent type>' contains-errors lvalue
        |     `-DeclRefExpr 0x12e9416d8 <col:23> 'struct sock *' lvalue ParmVar 0x12e928648 'sk' 'struct sock *'
        |-CallExpr 0x12e9418b0 <line:9:3, col:14> 'int'
        | |-ImplicitCastExpr 0x12e941898 <col:3> 'int (*)()' <FunctionToPointerDecay>
        | | `-DeclRefExpr 0x12e941858 <col:3> 'int ()' Function 0x12e9417a0 'sock_put' 'int ()'
        | `-ImplicitCastExpr 0x12e9418d8 <col:12> 'struct sock *' <LValueToRValue>
        |   `-DeclRefExpr 0x12e941878 <col:12> 'struct sock *' lvalue ParmVar 0x12e928648 'sk' 'struct sock *'
        |-BinaryOperator 0x12e941970 <line:10:3, col:19> '<dependent type>' contains-errors '='
        | |-RecoveryExpr 0x12e941928 <col:3, col:8> '<dependent type>' contains-errors lvalue
        | | `-DeclRefExpr 0x12e9418f0 <col:3> 'struct inet_sock *' lvalue Var 0x12e940bb8 'isk' 'struct inet_sock *'
        | `-IntegerLiteral 0x12e941950 <col:19> 'int' 0
        |-BinaryOperator 0x12e942820 <line:11:3, col:21> '<dependent type>' contains-errors '='
        | |-RecoveryExpr 0x12e9419c8 <col:3, col:8> '<dependent type>' contains-errors lvalue
        | | `-DeclRefExpr 0x12e941990 <col:3> 'struct inet_sock *' lvalue Var 0x12e940bb8 'isk' 'struct inet_sock *'
        | `-IntegerLiteral 0x12e942800 <col:21> 'int' 0
        |-CallExpr 0x12e942b50 <line:12:3, col:52> '<dependent type>' contains-errors
        | |-DeclRefExpr 0x12e942920 <col:3> 'int ()' Function 0x12e942868 'sock_prot_inuse_add' 'int ()'
        | |-CallExpr 0x12e942a78 <col:23, col:34> 'int'
        | | |-ImplicitCastExpr 0x12e942a60 <col:23> 'int (*)()' <FunctionToPointerDecay>
        | | | `-DeclRefExpr 0x12e942a20 <col:23> 'int ()' Function 0x12e942968 'sock_net' 'int ()'
        | | `-ImplicitCastExpr 0x12e942aa0 <col:32> 'struct sock *' <LValueToRValue>
        | |   `-DeclRefExpr 0x12e942a40 <col:32> 'struct sock *' lvalue ParmVar 0x12e928648 'sk' 'struct sock *'
        | |-RecoveryExpr 0x12e942af0 <col:37, col:41> '<dependent type>' contains-errors lvalue
        | | `-DeclRefExpr 0x12e942ab8 <col:37> 'struct sock *' lvalue ParmVar 0x12e928648 'sk' 'struct sock *'
        | `-UnaryOperator 0x12e942b38 <col:50, col:51> 'int' prefix '-'
        |   `-IntegerLiteral 0x12e942b18 <col:51> 'int' 1
        `-CallExpr 0x12e942da8 <line:13:3, col:35> '<dependent type>' contains-errors
          |-DeclRefExpr 0x12e942c68 <col:3> 'int ()' Function 0x12e942bb0 'write_unlock_bh' 'int ()'
          `-UnaryOperator 0x12e942d90 <col:19, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow
            `-CXXDependentScopeMemberExpr 0x12e942d48 <col:20, col:31> '<dependent type>' contains-errors lvalue .lock
              `-RecoveryExpr 0x12e942d28 <col:20> '<dependent type>' contains-errors lvalue
