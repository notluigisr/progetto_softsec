`-FunctionDecl 0x13b128278  line:2:16 mod 'int (const int, const int)' inline
  |-ParmVarDecl 0x13b1280d8 <col:20, col:30> col:30 used x 'const int'
  |-ParmVarDecl 0x13b128158 <col:33, col:43> col:43 used m 'const int'
  `-CompoundStmt 0x13b1286a8 <col:46, line:3:39>
    `-ReturnStmt 0x13b128698 <col:7, col:37>
      `-ConditionalOperator 0x13b128668 <col:14, col:37> 'int'
        |-BinaryOperator 0x13b1283d0 <col:14, col:17> 'int' '>='
        | |-ImplicitCastExpr 0x13b1283b8 <col:14> 'int' <LValueToRValue>
        | | `-DeclRefExpr 0x13b128378 <col:14> 'const int' lvalue ParmVar 0x13b1280d8 'x' 'const int'
        | `-IntegerLiteral 0x13b128398 <col:17> 'int' 0
        |-BinaryOperator 0x13b128460 <col:19, col:21> 'int' '%'
        | |-ImplicitCastExpr 0x13b128430 <col:19> 'int' <LValueToRValue>
        | | `-DeclRefExpr 0x13b1283f0 <col:19> 'const int' lvalue ParmVar 0x13b1280d8 'x' 'const int'
        | `-ImplicitCastExpr 0x13b128448 <col:21> 'int' <LValueToRValue>
        |   `-DeclRefExpr 0x13b128410 <col:21> 'const int' lvalue ParmVar 0x13b128158 'm' 'const int'
        `-ParenExpr 0x13b128648 <col:23, col:37> 'int'
          `-ConditionalOperator 0x13b128618 <col:24, col:36> 'int'
            |-BinaryOperator 0x13b1284f0 <col:24, col:26> 'int' '%'
            | |-ImplicitCastExpr 0x13b1284c0 <col:24> 'int' <LValueToRValue>
            | | `-DeclRefExpr 0x13b128480 <col:24> 'const int' lvalue ParmVar 0x13b1280d8 'x' 'const int'
            | `-ImplicitCastExpr 0x13b1284d8 <col:26> 'int' <LValueToRValue>
            |   `-DeclRefExpr 0x13b1284a0 <col:26> 'const int' lvalue ParmVar 0x13b128158 'm' 'const int'
            |-BinaryOperator 0x13b1285d8 <col:28, col:34> 'int' '+'
            | |-ImplicitCastExpr 0x13b1285c0 <col:28> 'int' <LValueToRValue>
            | | `-DeclRefExpr 0x13b128510 <col:28> 'const int' lvalue ParmVar 0x13b128158 'm' 'const int'
            | `-BinaryOperator 0x13b1285a0 <col:32, col:34> 'int' '%'
            |   |-ImplicitCastExpr 0x13b128570 <col:32> 'int' <LValueToRValue>
            |   | `-DeclRefExpr 0x13b128530 <col:32> 'const int' lvalue ParmVar 0x13b1280d8 'x' 'const int'
            |   `-ImplicitCastExpr 0x13b128588 <col:34> 'int' <LValueToRValue>
            |     `-DeclRefExpr 0x13b128550 <col:34> 'const int' lvalue ParmVar 0x13b128158 'm' 'const int'
            `-IntegerLiteral 0x13b1285f8 <col:36> 'int' 0
