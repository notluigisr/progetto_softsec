`-FunctionDecl 0x154128318  line:1:1 invalid alt_merge_opt_exact 'int (int *, int *, int *)'
  |-ParmVarDecl 0x154128128 <col:21, col:31> col:31 referenced invalid to 'int *'
  |-ParmVarDecl 0x1541281a8 <col:35, col:45> col:45 invalid add 'int *'
  |-ParmVarDecl 0x154128228 <col:50, col:58> col:58 invalid env 'int *'
  `-CompoundStmt 0x1541431c8 <line:2:1, line:34:1>
    |-DeclStmt 0x154128578 <line:3:3, col:16>
    | |-VarDecl 0x1541283f0 <col:3, col:7> col:7 used i 'int'
    | |-VarDecl 0x154128470 <col:3, col:10> col:10 used j 'int'
    | `-VarDecl 0x1541284f0 <col:3, col:13> col:13 used len 'int'
    |-IfStmt 0x154141950 <line:5:3, line:8:3>
    | |-BinaryOperator 0x1541286e0 <line:5:7, col:35> 'int' contains-errors '||'
    | | |-BinaryOperator 0x154128618 <col:7, col:19> 'int' contains-errors '=='
    | | | |-CXXDependentScopeMemberExpr 0x1541285b0 <col:7, col:12> '<dependent type>' contains-errors lvalue ->len
    | | | | `-RecoveryExpr 0x154128590 <col:7> '<dependent type>' contains-errors lvalue
    | | | `-IntegerLiteral 0x1541285f8 <col:19> 'int' 0
    | | `-BinaryOperator 0x1541286c0 <col:24, col:35> 'int' contains-errors '=='
    | |   |-CXXDependentScopeMemberExpr 0x154128658 <col:24, col:28> '<dependent type>' contains-errors lvalue ->len
    | |   | `-RecoveryExpr 0x154128638 <col:24> '<dependent type>' contains-errors lvalue
    | |   `-IntegerLiteral 0x1541286a0 <col:35> 'int' 0
    | `-CompoundStmt 0x154141930 <col:38, line:8:3>
    |   |-CallExpr 0x1541418f8 <line:6:5, col:23> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x1541418b8 <col:5> 'int ()' Function 0x154141800 'clear_opt_exact' 'int ()'
    |   | `-RecoveryExpr 0x1541418d8 <col:21> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x154141920 <line:7:5>
    |-IfStmt 0x154141c50 <line:10:3, line:13:3>
    | |-UnaryOperator 0x154141ba0 <line:10:7, col:41> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-CallExpr 0x154141b70 <col:9, col:41> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x154141a50 <col:9> 'int ()' Function 0x154141998 'is_equal_mml' 'int ()'
    | |   |-UnaryOperator 0x154141ad8 <col:22, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |   | `-CXXDependentScopeMemberExpr 0x154141a90 <col:23, col:27> '<dependent type>' contains-errors lvalue ->mmd
    | |   |   `-RecoveryExpr 0x154141a70 <col:23> '<dependent type>' contains-errors lvalue
    | |   `-UnaryOperator 0x154141b58 <col:32, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |     `-CXXDependentScopeMemberExpr 0x154141b10 <col:33, col:38> '<dependent type>' contains-errors lvalue ->mmd
    | |       `-RecoveryExpr 0x154141af0 <col:33> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x154141c30 <col:44, line:13:3>
    |   |-CallExpr 0x154141bf8 <line:11:5, col:23> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x154141bb8 <col:5> 'int ()' Function 0x154141800 'clear_opt_exact' 'int ()'
    |   | `-RecoveryExpr 0x154141bd8 <col:21> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x154141c20 <line:12:5>
    |-ForStmt 0x154142868 <line:15:3, line:24:3>
    | |-BinaryOperator 0x154141cb0 <line:15:8, col:12> 'int' '='
    | | |-DeclRefExpr 0x154141c70 <col:8> 'int' lvalue Var 0x1541283f0 'i' 'int'
    | | `-IntegerLiteral 0x154141c90 <col:12> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x154141e20 <col:15, col:39> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x154141d58 <col:15, col:23> 'int' contains-errors '<'
    | | | |-DeclRefExpr 0x154141cd0 <col:15> 'int' lvalue Var 0x1541283f0 'i' 'int'
    | | | `-CXXDependentScopeMemberExpr 0x154141d10 <col:19, col:23> '<dependent type>' contains-errors lvalue ->len
    | | |   `-RecoveryExpr 0x154141cf0 <col:19> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x154141e00 <col:30, col:39> 'int' contains-errors '<'
    | |   |-DeclRefExpr 0x154141d78 <col:30> 'int' lvalue Var 0x1541283f0 'i' 'int'
    | |   `-CXXDependentScopeMemberExpr 0x154141db8 <col:34, col:39> '<dependent type>' contains-errors lvalue ->len
    | |     `-RecoveryExpr 0x154141d98 <col:34> '<dependent type>' contains-errors lvalue
    | |-<<<NULL>>>
    | `-CompoundStmt 0x154142830 <col:46, line:24:3>
    |   |-IfStmt 0x154142018 <line:16:5, col:32>
    |   | |-BinaryOperator 0x154141ff0 <col:9, col:29> 'int' contains-errors '!='
    |   | | |-ArraySubscriptExpr 0x154141ef8 <col:9, col:16> '<dependent type>' contains-errors lvalue
    |   | | | |-ImplicitCastExpr 0x154141ec8 <col:9, col:13> '<dependent type>' contains-errors <LValueToRValue>
    |   | | | | `-CXXDependentScopeMemberExpr 0x154141e60 <col:9, col:13> '<dependent type>' contains-errors lvalue ->s
    |   | | | |   `-RecoveryExpr 0x154141e40 <col:9> '<dependent type>' contains-errors lvalue
    |   | | | `-ImplicitCastExpr 0x154141ee0 <col:15> 'int' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x154141ea8 <col:15> 'int' lvalue Var 0x1541283f0 'i' 'int'
    |   | | `-ArraySubscriptExpr 0x154141fd0 <col:21, col:29> '<dependent type>' contains-errors lvalue
    |   | |   |-ImplicitCastExpr 0x154141fa0 <col:21, col:26> '<dependent type>' contains-errors <LValueToRValue>
    |   | |   | `-CXXDependentScopeMemberExpr 0x154141f38 <col:21, col:26> '<dependent type>' contains-errors lvalue ->s
    |   | |   |   `-RecoveryExpr 0x154141f18 <col:21> '<dependent type>' contains-errors lvalue
    |   | |   `-ImplicitCastExpr 0x154141fb8 <col:28> 'int' <LValueToRValue>
    |   | |     `-DeclRefExpr 0x154141f80 <col:28> 'int' lvalue Var 0x1541283f0 'i' 'int'
    |   | `-BreakStmt 0x154142010 <col:32>
    |   |-BinaryOperator 0x154142298 <line:17:5, col:37> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x154142038 <col:5> 'int' lvalue Var 0x1541284f0 'len' 'int'
    |   | `-CallExpr 0x154142268 <col:11, col:37> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x154142138 <col:11> 'int ()' Function 0x154142080 'enclen' 'int ()'
    |   |   |-CXXDependentScopeMemberExpr 0x154142178 <col:18, col:23> '<dependent type>' contains-errors lvalue ->enc
    |   |   | `-RecoveryExpr 0x154142158 <col:18> '<dependent type>' contains-errors lvalue
    |   |   `-BinaryOperator 0x154142248 <col:28, col:36> '<dependent type>' contains-errors '+'
    |   |     |-CXXDependentScopeMemberExpr 0x1541421e0 <col:28, col:32> '<dependent type>' contains-errors lvalue ->s
    |   |     | `-RecoveryExpr 0x1541421c0 <col:28> '<dependent type>' contains-errors lvalue
    |   |     `-DeclRefExpr 0x154142228 <col:36> 'int' lvalue Var 0x1541283f0 'i' 'int'
    |   |-ForStmt 0x1541426a0 <line:19:5, line:21:5>
    |   | |-BinaryOperator 0x1541422f8 <line:19:10, col:14> 'int' '='
    |   | | |-DeclRefExpr 0x1541422b8 <col:10> 'int' lvalue Var 0x154128470 'j' 'int'
    |   | | `-IntegerLiteral 0x1541422d8 <col:14> 'int' 1
    |   | |-<<<NULL>>>
    |   | |-BinaryOperator 0x154142388 <col:17, col:21> 'int' '<'
    |   | | |-ImplicitCastExpr 0x154142358 <col:17> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x154142318 <col:17> 'int' lvalue Var 0x154128470 'j' 'int'
    |   | | `-ImplicitCastExpr 0x154142370 <col:21> 'int' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x154142338 <col:21> 'int' lvalue Var 0x1541284f0 'len' 'int'
    |   | |-UnaryOperator 0x1541423c8 <col:26, col:27> 'int' postfix '++'
    |   | | `-DeclRefExpr 0x1541423a8 <col:26> 'int' lvalue Var 0x154128470 'j' 'int'
    |   | `-CompoundStmt 0x154142688 <col:31, line:21:5>
    |   |   `-IfStmt 0x154142668 <line:20:7, col:38>
    |   |     |-BinaryOperator 0x154142640 <col:11, col:35> 'int' contains-errors '!='
    |   |     | |-ArraySubscriptExpr 0x1541424f0 <col:11, col:20> '<dependent type>' contains-errors lvalue
    |   |     | | |-ImplicitCastExpr 0x1541424d8 <col:11, col:15> '<dependent type>' contains-errors <LValueToRValue>
    |   |     | | | `-CXXDependentScopeMemberExpr 0x154142400 <col:11, col:15> '<dependent type>' contains-errors lvalue ->s
    |   |     | | |   `-RecoveryExpr 0x1541423e0 <col:11> '<dependent type>' contains-errors lvalue
    |   |     | | `-BinaryOperator 0x1541424b8 <col:17, col:19> 'int' '+'
    |   |     | |   |-ImplicitCastExpr 0x154142488 <col:17> 'int' <LValueToRValue>
    |   |     | |   | `-DeclRefExpr 0x154142448 <col:17> 'int' lvalue Var 0x1541283f0 'i' 'int'
    |   |     | |   `-ImplicitCastExpr 0x1541424a0 <col:19> 'int' <LValueToRValue>
    |   |     | |     `-DeclRefExpr 0x154142468 <col:19> 'int' lvalue Var 0x154128470 'j' 'int'
    |   |     | `-ArraySubscriptExpr 0x154142620 <col:25, col:35> '<dependent type>' contains-errors lvalue
    |   |     |   |-ImplicitCastExpr 0x154142608 <col:25, col:30> '<dependent type>' contains-errors <LValueToRValue>
    |   |     |   | `-CXXDependentScopeMemberExpr 0x154142530 <col:25, col:30> '<dependent type>' contains-errors lvalue ->s
    |   |     |   |   `-RecoveryExpr 0x154142510 <col:25> '<dependent type>' contains-errors lvalue
    |   |     |   `-BinaryOperator 0x1541425e8 <col:32, col:34> 'int' '+'
    |   |     |     |-ImplicitCastExpr 0x1541425b8 <col:32> 'int' <LValueToRValue>
    |   |     |     | `-DeclRefExpr 0x154142578 <col:32> 'int' lvalue Var 0x1541283f0 'i' 'int'
    |   |     |     `-ImplicitCastExpr 0x1541425d0 <col:34> 'int' <LValueToRValue>
    |   |     |       `-DeclRefExpr 0x154142598 <col:34> 'int' lvalue Var 0x154128470 'j' 'int'
    |   |     `-BreakStmt 0x154142660 <col:38>
    |   |-IfStmt 0x154142770 <line:22:5, col:18>
    |   | |-BinaryOperator 0x154142748 <col:9, col:13> 'int' '<'
    |   | | |-ImplicitCastExpr 0x154142718 <col:9> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x1541426d8 <col:9> 'int' lvalue Var 0x154128470 'j' 'int'
    |   | | `-ImplicitCastExpr 0x154142730 <col:13> 'int' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x1541426f8 <col:13> 'int' lvalue Var 0x1541284f0 'len' 'int'
    |   | `-BreakStmt 0x154142768 <col:18>
    |   `-CompoundAssignOperator 0x154142800 <line:23:5, col:10> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |     |-DeclRefExpr 0x154142790 <col:5> 'int' lvalue Var 0x1541283f0 'i' 'int'
    |     `-ImplicitCastExpr 0x1541427d0 <col:10> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x1541427b0 <col:10> 'int' lvalue Var 0x1541284f0 'len' 'int'
    |-IfStmt 0x154142bb0 <line:26:3, line:28:3>
    | |-BinaryOperator 0x154142aa8 <line:26:7, col:51> 'int' contains-errors '||'
    | | |-BinaryOperator 0x1541429e0 <col:7, col:36> 'int' contains-errors '||'
    | | | |-UnaryOperator 0x154142920 <col:7, col:14> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | | | `-ImplicitCastExpr 0x154142908 <col:9, col:14> '<dependent type>' contains-errors <LValueToRValue>
    | | | |   `-CXXDependentScopeMemberExpr 0x1541428c0 <col:9, col:14> '<dependent type>' contains-errors lvalue ->reach_end
    | | | |     `-RecoveryExpr 0x1541428a0 <col:9> '<dependent type>' contains-errors lvalue
    | | | `-BinaryOperator 0x1541429c0 <col:27, col:36> 'int' contains-errors '<'
    | | |   |-DeclRefExpr 0x154142938 <col:27> 'int' lvalue Var 0x1541283f0 'i' 'int'
    | | |   `-CXXDependentScopeMemberExpr 0x154142978 <col:31, col:36> '<dependent type>' contains-errors lvalue ->len
    | | |     `-RecoveryExpr 0x154142958 <col:31> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x154142a88 <col:43, col:51> 'int' contains-errors '<'
    | |   |-DeclRefExpr 0x154142a00 <col:43> 'int' lvalue Var 0x1541283f0 'i' 'int'
    | |   `-CXXDependentScopeMemberExpr 0x154142a40 <col:47, col:51> '<dependent type>' contains-errors lvalue ->len
    | |     `-RecoveryExpr 0x154142a20 <col:47> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x154142b98 <col:56, line:28:3>
    |   `-BinaryOperator 0x154142b78 <line:27:5, col:21> '<dependent type>' contains-errors '='
    |     |-CXXDependentScopeMemberExpr 0x154142b10 <col:5, col:9> '<dependent type>' contains-errors lvalue ->reach_end
    |     | `-RecoveryExpr 0x154142ae8 <col:5> '<dependent type>' contains-errors lvalue
    |     |   `-DeclRefExpr 0x154142ac8 <col:5> 'int *' lvalue ParmVar 0x154128128 'to' 'int *'
    |     `-IntegerLiteral 0x154142b58 <col:21> 'int' 0
    |-BinaryOperator 0x154142c80 <line:29:3, col:13> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x154142c18 <col:3, col:7> '<dependent type>' contains-errors lvalue ->len
    | | `-RecoveryExpr 0x154142bf0 <col:3> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x154142bd0 <col:3> 'int *' lvalue ParmVar 0x154128128 'to' 'int *'
    | `-DeclRefExpr 0x154142c60 <col:13> 'int' lvalue Var 0x1541283f0 'i' 'int'
    |-CompoundAssignOperator 0x154142d98 <line:30:3, col:27> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | |-CXXDependentScopeMemberExpr 0x154142ce8 <col:3, col:7> '<dependent type>' contains-errors lvalue ->ignore_case
    | | `-RecoveryExpr 0x154142cc0 <col:3> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x154142ca0 <col:3> 'int *' lvalue ParmVar 0x154128128 'to' 'int *'
    | `-CXXDependentScopeMemberExpr 0x154142d50 <col:22, col:27> '<dependent type>' contains-errors lvalue ->ignore_case
    |   `-RecoveryExpr 0x154142d30 <col:22> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x154142fc8 <line:32:3, col:45> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x154142ea8 <col:3> 'int ()' Function 0x154142df0 'alt_merge_opt_anc_info' 'int ()'
    | |-UnaryOperator 0x154142f30 <col:26, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-CXXDependentScopeMemberExpr 0x154142ee8 <col:27, col:31> '<dependent type>' contains-errors lvalue ->anc
    | |   `-RecoveryExpr 0x154142ec8 <col:27> '<dependent type>' contains-errors lvalue
    | `-UnaryOperator 0x154142fb0 <col:36, col:42> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-CXXDependentScopeMemberExpr 0x154142f68 <col:37, col:42> '<dependent type>' contains-errors lvalue ->anc
    |     `-RecoveryExpr 0x154142f48 <col:37> '<dependent type>' contains-errors lvalue
    `-IfStmt 0x1541431a8 <line:33:3, col:40>
      |-UnaryOperator 0x154143078 <col:7, col:13> '<dependent type>' contains-errors prefix '!' cannot overflow
      | `-ImplicitCastExpr 0x154143060 <col:9, col:13> '<dependent type>' contains-errors <LValueToRValue>
      |   `-CXXDependentScopeMemberExpr 0x154143018 <col:9, col:13> '<dependent type>' contains-errors lvalue ->reach_end
      |     `-RecoveryExpr 0x154142ff8 <col:9> '<dependent type>' contains-errors lvalue
      `-BinaryOperator 0x154143188 <col:24, col:40> '<dependent type>' contains-errors '='
        |-CXXDependentScopeMemberExpr 0x154143120 <col:24, col:32> '<dependent type>' contains-errors lvalue .right
        | `-CXXDependentScopeMemberExpr 0x1541430d8 <col:24, col:28> '<dependent type>' contains-errors lvalue ->anc
        |   `-RecoveryExpr 0x1541430b0 <col:24> '<dependent type>' contains-errors lvalue
        |     `-DeclRefExpr 0x154143090 <col:24> 'int *' lvalue ParmVar 0x154128128 'to' 'int *'
        `-IntegerLiteral 0x154143168 <col:40> 'int' 0
