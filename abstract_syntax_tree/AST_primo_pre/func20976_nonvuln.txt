`-FunctionDecl 0x1540a0de0  line:1:6 invalid MsgSetRcvFromStr 'void (int *, char *, int, int **)'
  |-ParmVarDecl 0x1540a0b28 <col:23, col:30> col:30 invalid pThis 'int *'
  |-ParmVarDecl 0x1540a0ba8 <col:37, col:44> col:44 used psz 'char *'
  |-ParmVarDecl 0x1540a0c28 <col:49, col:53> col:53 used len 'int'
  |-ParmVarDecl 0x1540a0ce0 <col:58, col:67> col:67 invalid ppProp 'int **'
  `-CompoundStmt 0x1540af428 <line:2:1, line:8:1>
    |-CallExpr 0x1540a10e0 <line:3:2, col:22> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1540a1000 <col:2> 'int ()' Function 0x1540a0f48 'assert' 'int ()'
    | `-BinaryOperator 0x1540a10c0 <col:9, col:18> 'int' contains-errors '!='
    |   |-RecoveryExpr 0x1540a1020 <col:9> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x1540a10a0 <col:18> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x1540af200 <line:4:2, col:23> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1540a1108 <col:2> 'int ()' Function 0x1540a0f48 'assert' 'int ()'
    | `-BinaryOperator 0x1540a11c8 <col:9, col:19> 'int' contains-errors '!='
    |   |-RecoveryExpr 0x1540a1128 <col:9> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x1540a11a8 <col:19> '<dependent type>' contains-errors lvalue
    `-CallExpr 0x1540af3f8 <line:7:2, col:30> '<dependent type>' contains-errors
      |-DeclRefExpr 0x1540af368 <col:2> 'int ()' Function 0x1540af2b0 'MsgSetRcvFrom' 'int ()'
      |-RecoveryExpr 0x1540af388 <col:16> '<dependent type>' contains-errors lvalue
      `-UnaryOperator 0x1540af3e0 <col:23, col:24> '<dependent type>' contains-errors prefix '*' cannot overflow
        `-ImplicitCastExpr 0x1540af3c8 <col:24> '<dependent type>' contains-errors <LValueToRValue>
          `-RecoveryExpr 0x1540af3a8 <col:24> '<dependent type>' contains-errors lvalue
