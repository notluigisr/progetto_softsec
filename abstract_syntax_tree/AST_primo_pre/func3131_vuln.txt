`-FunctionDecl 0x15900de88  line:1:5 fit_check_format 'int (const void *, long)'
  |-ParmVarDecl 0x15900dd08 <col:22, col:34> col:34 used fit 'const void *'
  |-ParmVarDecl 0x15900dda0 <col:39, col:45> col:45 used size 'long'
  `-CompoundStmt 0x159028eb8 <line:2:1, line:46:1>
    |-DeclStmt 0x15900e008 <line:3:2, col:9>
    | `-VarDecl 0x15900dfa0 <col:2, col:6> col:6 used ret 'int'
    |-BinaryOperator 0x15900e218 <line:6:2, col:28> 'int' '='
    | |-DeclRefExpr 0x15900e020 <col:2> 'int' lvalue Var 0x15900dfa0 'ret' 'int'
    | `-CallExpr 0x15900e1d8 <col:8, col:28> 'int'
    |   |-ImplicitCastExpr 0x15900e1c0 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x15900e150 <col:8> 'int ()' Function 0x15900e098 'fdt_check_header' 'int ()'
    |   `-ImplicitCastExpr 0x15900e200 <col:25> 'const void *' <LValueToRValue>
    |     `-DeclRefExpr 0x15900e170 <col:25> 'const void *' lvalue ParmVar 0x15900dd08 'fit' 'const void *'
    |-IfStmt 0x159026740 <line:7:2, line:11:2>
    | |-ImplicitCastExpr 0x15900e258 <line:7:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x15900e238 <col:6> 'int' lvalue Var 0x15900dfa0 'ret' 'int'
    | `-CompoundStmt 0x159026720 <col:11, line:11:2>
    |   |-CallExpr 0x159026618 <line:8:3, line:9:9> 'int'
    |   | |-ImplicitCastExpr 0x159026600 <line:8:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x15900e350 <col:3> 'int ()' Function 0x15900e298 'log_debug' 'int ()'
    |   | |-ImplicitCastExpr 0x159026648 <col:13> 'char *' <ArrayToPointerDecay>
    |   | | `-StringLiteral 0x15900e3b0 <col:13> 'char[4]' lvalue "STR"
    |   | `-ImplicitCastExpr 0x159026660 <line:9:6> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x15900e3d0 <col:6> 'int' lvalue Var 0x15900dfa0 'ret' 'int'
    |   `-ReturnStmt 0x159026710 <line:10:3, col:11>
    |     `-UnaryOperator 0x1590266f8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       `-ImplicitCastExpr 0x1590266e0 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |         `-RecoveryExpr 0x1590266c0 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x159026f88 <line:13:2, line:23:2>
    | |-CallExpr 0x1590268c0 <line:13:6, col:38> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x159026840 <col:6> 'int ()' Function 0x159026788 'CONFIG_IS_ENABLED' 'int ()'
    | | `-RecoveryExpr 0x1590268a0 <col:24> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x159026f60 <col:41, line:23:2>
    |   |-IfStmt 0x159026b50 <line:15:3, line:16:28>
    |   | |-BinaryOperator 0x159026960 <line:15:7, col:15> 'int' contains-errors '=='
    |   | | |-DeclRefExpr 0x1590268e8 <col:7> 'long' lvalue ParmVar 0x15900dda0 'size' 'long'
    |   | | `-RecoveryExpr 0x159026940 <col:15> '<dependent type>' contains-errors lvalue
    |   | `-BinaryOperator 0x159026b30 <line:16:4, col:28> 'long' '='
    |   |   |-DeclRefExpr 0x159026980 <col:4> 'long' lvalue ParmVar 0x15900dda0 'size' 'long'
    |   |   `-ImplicitCastExpr 0x159026b18 <col:11, col:28> 'long' <IntegralCast>
    |   |     `-CallExpr 0x159026ad8 <col:11, col:28> 'int'
    |   |       |-ImplicitCastExpr 0x159026ac0 <col:11> 'int (*)()' <FunctionToPointerDecay>
    |   |       | `-DeclRefExpr 0x159026a80 <col:11> 'int ()' Function 0x1590269c8 'fdt_totalsize' 'int ()'
    |   |       `-ImplicitCastExpr 0x159026b00 <col:25> 'const void *' <LValueToRValue>
    |   |         `-DeclRefExpr 0x159026aa0 <col:25> 'const void *' lvalue ParmVar 0x15900dd08 'fit' 'const void *'
    |   |-BinaryOperator 0x159026d48 <line:17:3, col:33> 'int' '='
    |   | |-DeclRefExpr 0x159026b70 <col:3> 'int' lvalue Var 0x15900dfa0 'ret' 'int'
    |   | `-CallExpr 0x159026ce8 <col:9, col:33> 'int'
    |   |   |-ImplicitCastExpr 0x159026cd0 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   |   | `-DeclRefExpr 0x159026c70 <col:9> 'int ()' Function 0x159026bb8 'fdt_check_full' 'int ()'
    |   |   |-ImplicitCastExpr 0x159026d18 <col:24> 'const void *' <LValueToRValue>
    |   |   | `-DeclRefExpr 0x159026c90 <col:24> 'const void *' lvalue ParmVar 0x15900dd08 'fit' 'const void *'
    |   |   `-ImplicitCastExpr 0x159026d30 <col:29> 'long' <LValueToRValue>
    |   |     `-DeclRefExpr 0x159026cb0 <col:29> 'long' lvalue ParmVar 0x15900dda0 'size' 'long'
    |   `-IfStmt 0x159026f40 <line:19:3, line:22:3>
    |     |-ImplicitCastExpr 0x159026d88 <line:19:7> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x159026d68 <col:7> 'int' lvalue Var 0x15900dfa0 'ret' 'int'
    |     `-CompoundStmt 0x159026f20 <col:12, line:22:3>
    |       |-CallExpr 0x159026e18 <line:20:4, col:24> 'int'
    |       | |-ImplicitCastExpr 0x159026e00 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |       | | `-DeclRefExpr 0x159026da0 <col:4> 'int ()' Function 0x15900e298 'log_debug' 'int ()'
    |       | |-ImplicitCastExpr 0x159026e48 <col:14> 'char *' <ArrayToPointerDecay>
    |       | | `-StringLiteral 0x159026dc0 <col:14> 'char[4]' lvalue "STR"
    |       | `-ImplicitCastExpr 0x159026e60 <col:21> 'int' <LValueToRValue>
    |       |   `-DeclRefExpr 0x159026de0 <col:21> 'int' lvalue Var 0x15900dfa0 'ret' 'int'
    |       `-ReturnStmt 0x159026f10 <line:21:4, col:12>
    |         `-UnaryOperator 0x159026ef8 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow
    |           `-ImplicitCastExpr 0x159026ee0 <col:12> '<dependent type>' contains-errors <LValueToRValue>
    |             `-RecoveryExpr 0x159026ec0 <col:12> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x159027368 <line:26:2, line:29:2>
    | |-UnaryOperator 0x1590271f0 <line:26:6, col:46> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-CallExpr 0x1590271b0 <col:7, col:46> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x159027088 <col:7> 'int ()' Function 0x159026fd0 'fdt_getprop' 'int ()'
    | |   |-DeclRefExpr 0x1590270a8 <col:19> 'const void *' lvalue ParmVar 0x15900dd08 'fit' 'const void *'
    | |   |-IntegerLiteral 0x1590270c8 <col:24> 'int' 0
    | |   |-RecoveryExpr 0x159027170 <col:27> '<dependent type>' contains-errors lvalue
    | |   `-RecoveryExpr 0x159027190 <col:42> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x159027348 <col:49, line:29:2>
    |   |-CallExpr 0x159027260 <line:27:3, col:18> 'int'
    |   | |-ImplicitCastExpr 0x159027248 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x159027208 <col:3> 'int ()' Function 0x15900e298 'log_debug' 'int ()'
    |   | `-ImplicitCastExpr 0x159027288 <col:13> 'char *' <ArrayToPointerDecay>
    |   |   `-StringLiteral 0x159027228 <col:13> 'char[4]' lvalue "STR"
    |   `-ReturnStmt 0x159027338 <line:28:3, col:11>
    |     `-UnaryOperator 0x159027320 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       `-ImplicitCastExpr 0x159027308 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |         `-RecoveryExpr 0x1590272e8 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x159028c38 <line:31:2, line:37:2>
    | |-RecoveryExpr 0x1590273a0 <line:31:6> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x159028c20 <col:30, line:37:2>
    |   `-IfStmt 0x159028c00 <line:33:3, line:36:3>
    |     |-UnaryOperator 0x159027528 <line:33:7, col:52> '<dependent type>' contains-errors prefix '!' cannot overflow
    |     | `-CallExpr 0x1590274e8 <col:8, col:52> '<dependent type>' contains-errors
    |     |   |-DeclRefExpr 0x1590273c0 <col:8> 'int ()' Function 0x159026fd0 'fdt_getprop' 'int ()'
    |     |   |-DeclRefExpr 0x1590273e0 <col:20> 'const void *' lvalue ParmVar 0x15900dd08 'fit' 'const void *'
    |     |   |-IntegerLiteral 0x159027400 <col:25> 'int' 0
    |     |   |-RecoveryExpr 0x1590274a8 <col:28> '<dependent type>' contains-errors lvalue
    |     |   `-RecoveryExpr 0x1590274c8 <col:48> '<dependent type>' contains-errors lvalue
    |     `-CompoundStmt 0x1590275d8 <col:55, line:36:3>
    |       `-CallExpr 0x159027598 <line:34:4, col:19> 'int'
    |         |-ImplicitCastExpr 0x159027580 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |         | `-DeclRefExpr 0x159027540 <col:4> 'int ()' Function 0x15900e298 'log_debug' 'int ()'
    |         `-ImplicitCastExpr 0x1590275c0 <col:14> 'char *' <ArrayToPointerDecay>
    |           `-StringLiteral 0x159027560 <col:14> 'char[4]' lvalue "STR"
    |-IfStmt 0x159028e68 <line:40:2, line:43:2>
    | |-RecoveryExpr 0x159028d98 <line:40:6, col:46> '_Bool' contains-errors
    | `-CompoundStmt 0x159028e50 <col:49, line:43:2>
    |   `-CallExpr 0x159028e10 <line:41:3, col:18> 'int'
    |     |-ImplicitCastExpr 0x159028df8 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x159028db8 <col:3> 'int ()' Function 0x15900e298 'log_debug' 'int ()'
    |     `-ImplicitCastExpr 0x159028e38 <col:13> 'char *' <ArrayToPointerDecay>
    |       `-StringLiteral 0x159028dd8 <col:13> 'char[4]' lvalue "STR"
    `-ReturnStmt 0x159028ea8 <line:45:2, col:9>
      `-IntegerLiteral 0x159028e88 <col:9> 'int' 0
