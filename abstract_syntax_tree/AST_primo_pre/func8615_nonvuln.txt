`-FunctionDecl 0x14000dfa8  line:1:1 invalid addStmtError 'int (int *, const char *, const char *, int)'
  |-ParmVarDecl 0x14000dd28 <col:14, col:24> col:24 invalid stmt 'int *'
  |-ParmVarDecl 0x14000dda8 <col:30, col:42> col:42 used SQLState 'const char *'
  |-ParmVarDecl 0x14000de28 <col:52, col:64> col:64 used errMsg 'const char *'
  |-ParmVarDecl 0x14000dea8 <col:72, col:76> col:76 used nativeErrCode 'int'
  `-CompoundStmt 0x140027c20 <line:2:1, line:12:1>
    |-CallExpr 0x14000e368 <line:8:2, col:26> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14000e200 <col:2> 'int ()' Function 0x14000e148 'assert' 'int ()'
    | `-CallExpr 0x14000e340 <col:9, col:25> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14000e300 <col:9> 'int ()' Function 0x14000e248 'isValidStmt' 'int ()'
    |   `-RecoveryExpr 0x14000e320 <col:21> '<dependent type>' contains-errors lvalue
    `-CallExpr 0x140027bf0 <line:11:2, col:37> '<dependent type>' contains-errors
      |-DeclRefExpr 0x140027ae8 <col:2> 'int ()' Function 0x140027a30 'appendODBCError' 'int ()'
      |-UnaryOperator 0x140027b70 <col:18, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow
      | `-CXXDependentScopeMemberExpr 0x140027b28 <col:19, col:25> '<dependent type>' contains-errors lvalue ->Error
      |   `-RecoveryExpr 0x140027b08 <col:19> '<dependent type>' contains-errors lvalue
      `-RecoveryExpr 0x140027bd0 <col:32> '<dependent type>' contains-errors lvalue
