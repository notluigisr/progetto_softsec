`-FunctionDecl 0x13b9420d8  line:1:12 invalid caldav_acl 'int (struct transaction_t *, int, int *)' static
  |-ParmVarDecl 0x13b928e48 <col:23, col:45> col:45 used txn 'struct transaction_t *'
  |-ParmVarDecl 0x13b928ee0 <col:50, col:61> col:61 invalid priv 'int'
  |-ParmVarDecl 0x13b928f98 <col:67, col:72> col:72 used rights 'int *'
  `-CompoundStmt 0x13b9440c8 <line:2:1, line:80:1>
    |-IfStmt 0x13b944068 <line:3:5, line:76:5> has_else
    | |-RecoveryExpr 0x13b9423d8 <line:3:9, col:58> '_Bool' contains-errors
    | |-CompoundStmt 0x13b943950 <col:61, line:46:5>
    | | |-SwitchStmt 0x13b9424b8 <line:5:2, line:42:2>
    | | | |-ImplicitCastExpr 0x13b9424a0 <line:5:10, col:23> '<dependent type>' contains-errors <LValueToRValue>
    | | | | `-CXXDependentScopeMemberExpr 0x13b942458 <col:10, col:23> '<dependent type>' contains-errors lvalue .flags
    | | | |   `-RecoveryExpr 0x13b942430 <col:10, col:15> '<dependent type>' contains-errors lvalue
    | | | |     `-DeclRefExpr 0x13b9423f8 <col:10> 'struct transaction_t *' lvalue ParmVar 0x13b928e48 'txn' 'struct transaction_t *'
    | | | `-CompoundStmt 0x13b9438e0 <col:30, line:42:2>
    | | |   |-IfStmt 0x13b942ee0 <line:7:6, line:18:6> has_else
    | | |   | |-RecoveryExpr 0x13b942598 <line:7:10, col:47> '_Bool' contains-errors
    | | |   | |-CompoundAssignOperator 0x13b9426d0 <line:8:3, col:14> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | | |   | | |-UnaryOperator 0x13b942698 <col:3, col:4> 'int' lvalue prefix '*' cannot overflow
    | | |   | | | `-ImplicitCastExpr 0x13b942680 <col:4> 'int *' <LValueToRValue>
    | | |   | | |   `-DeclRefExpr 0x13b9425b8 <col:4> 'int *' lvalue ParmVar 0x13b928f98 'rights' 'int *'
    | | |   | | `-RecoveryExpr 0x13b9426b0 <col:14> '<dependent type>' contains-errors lvalue
    | | |   | `-IfStmt 0x13b942eb0 <line:9:11, line:18:6> has_else
    | | |   |   |-RecoveryExpr 0x13b9427a0 <line:9:15, col:52> '_Bool' contains-errors
    | | |   |   |-CompoundAssignOperator 0x13b9428d8 <line:10:3, col:14> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | | |   |   | |-UnaryOperator 0x13b9428a0 <col:3, col:4> 'int' lvalue prefix '*' cannot overflow
    | | |   |   | | `-ImplicitCastExpr 0x13b942888 <col:4> 'int *' <LValueToRValue>
    | | |   |   | |   `-DeclRefExpr 0x13b9427c0 <col:4> 'int *' lvalue ParmVar 0x13b928f98 'rights' 'int *'
    | | |   |   | `-RecoveryExpr 0x13b9428b8 <col:14> '<dependent type>' contains-errors lvalue
    | | |   |   `-IfStmt 0x13b942e80 <line:11:11, line:18:6> has_else
    | | |   |     |-RecoveryExpr 0x13b9429a8 <line:11:15, col:52> '_Bool' contains-errors
    | | |   |     |-CompoundAssignOperator 0x13b942ae0 <line:12:3, col:14> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | | |   |     | |-UnaryOperator 0x13b942aa8 <col:3, col:4> 'int' lvalue prefix '*' cannot overflow
    | | |   |     | | `-ImplicitCastExpr 0x13b942a90 <col:4> 'int *' <LValueToRValue>
    | | |   |     | |   `-DeclRefExpr 0x13b9429c8 <col:4> 'int *' lvalue ParmVar 0x13b928f98 'rights' 'int *'
    | | |   |     | `-RecoveryExpr 0x13b942ac0 <col:14> '<dependent type>' contains-errors lvalue
    | | |   |     `-IfStmt 0x13b942e50 <line:13:11, line:18:6> has_else
    | | |   |       |-RecoveryExpr 0x13b942bb0 <line:13:15, col:52> '_Bool' contains-errors
    | | |   |       |-CompoundAssignOperator 0x13b942ce8 <line:14:3, col:14> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | | |   |       | |-UnaryOperator 0x13b942cb0 <col:3, col:4> 'int' lvalue prefix '*' cannot overflow
    | | |   |       | | `-ImplicitCastExpr 0x13b942c98 <col:4> 'int *' <LValueToRValue>
    | | |   |       | |   `-DeclRefExpr 0x13b942bd0 <col:4> 'int *' lvalue ParmVar 0x13b928f98 'rights' 'int *'
    | | |   |       | `-RecoveryExpr 0x13b942cc8 <col:14> '<dependent type>' contains-errors lvalue
    | | |   |       `-CompoundStmt 0x13b942e38 <line:15:11, line:18:6>
    | | |   |         `-BinaryOperator 0x13b942e18 <line:17:3, col:24> '<dependent type>' contains-errors '='
    | | |   |           |-CXXDependentScopeMemberExpr 0x13b942d78 <col:3, col:14> '<dependent type>' contains-errors lvalue .precond
    | | |   |           | `-RecoveryExpr 0x13b942d50 <col:3, col:8> '<dependent type>' contains-errors lvalue
    | | |   |           |   `-DeclRefExpr 0x13b942d18 <col:3> 'struct transaction_t *' lvalue ParmVar 0x13b928e48 'txn' 'struct transaction_t *'
    | | |   |           `-RecoveryExpr 0x13b942df8 <col:24> '<dependent type>' contains-errors lvalue
    | | |   |-BreakStmt 0x13b942f10 <line:19:6>
    | | |   |-IfStmt 0x13b943698 <line:21:6, line:32:6> has_else
    | | |   | |-RecoveryExpr 0x13b942fd0 <line:21:10, col:47> '_Bool' contains-errors
    | | |   | |-CompoundAssignOperator 0x13b943118 <line:22:3, col:14> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | | |   | | |-UnaryOperator 0x13b9430e0 <col:3, col:4> 'int' lvalue prefix '*' cannot overflow
    | | |   | | | `-ImplicitCastExpr 0x13b9430c8 <col:4> 'int *' <LValueToRValue>
    | | |   | | |   `-DeclRefExpr 0x13b943000 <col:4> 'int *' lvalue ParmVar 0x13b928f98 'rights' 'int *'
    | | |   | | `-RecoveryExpr 0x13b9430f8 <col:14> '<dependent type>' contains-errors lvalue
    | | |   | `-IfStmt 0x13b943668 <line:23:11, line:32:6> has_else
    | | |   |   |-RecoveryExpr 0x13b9431e8 <line:23:15, col:52> '_Bool' contains-errors
    | | |   |   |-CompoundAssignOperator 0x13b943320 <line:24:3, col:14> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | | |   |   | |-UnaryOperator 0x13b9432e8 <col:3, col:4> 'int' lvalue prefix '*' cannot overflow
    | | |   |   | | `-ImplicitCastExpr 0x13b9432d0 <col:4> 'int *' <LValueToRValue>
    | | |   |   | |   `-DeclRefExpr 0x13b943208 <col:4> 'int *' lvalue ParmVar 0x13b928f98 'rights' 'int *'
    | | |   |   | `-RecoveryExpr 0x13b943300 <col:14> '<dependent type>' contains-errors lvalue
    | | |   |   `-IfStmt 0x13b943638 <line:25:11, line:32:6> has_else
    | | |   |     |-RecoveryExpr 0x13b9433d8 <line:25:15, col:52> '_Bool' contains-errors
    | | |   |     |-NullStmt 0x13b943630 <line:26:3>
    | | |   |     `-IfStmt 0x13b943600 <line:27:11, line:32:6> has_else
    | | |   |       |-RecoveryExpr 0x13b9434d0 <line:27:15, col:52> '_Bool' contains-errors
    | | |   |       |-NullStmt 0x13b9435f8 <line:28:3>
    | | |   |       `-CompoundStmt 0x13b9435e8 <line:29:11, line:32:6>
    | | |   |-BreakStmt 0x13b9436c8 <line:33:6>
    | | |   |-DefaultStmt 0x13b9438b8 <line:34:2, line:40:6>
    | | |   | `-IfStmt 0x13b943888 <line:35:6, line:40:6> has_else
    | | |   |   |-RecoveryExpr 0x13b943758 <line:35:10, col:47> '_Bool' contains-errors
    | | |   |   |-NullStmt 0x13b943880 <line:36:3>
    | | |   |   `-CompoundStmt 0x13b943870 <line:37:11, line:40:6>
    | | |   `-BreakStmt 0x13b9438d8 <line:41:6>
    | | `-ReturnStmt 0x13b943940 <line:45:2, col:9>
    | |   `-IntegerLiteral 0x13b943920 <col:9> 'int' 1
    | `-IfStmt 0x13b944048 <line:47:10, line:76:5>
    |   |-RecoveryExpr 0x13b943a40 <line:47:14, col:60> '_Bool' contains-errors
    |   `-CompoundStmt 0x13b944030 <col:63, line:76:5>
    |     `-IfStmt 0x13b944000 <line:49:2, line:75:2> has_else
    |       |-RecoveryExpr 0x13b943ae8 <line:49:6, col:43> '_Bool' contains-errors
    |       |-CompoundStmt 0x13b943d50 <col:46, line:64:2>
    |       | `-SwitchStmt 0x13b943bc8 <line:50:6, line:63:6>
    |       |   |-ImplicitCastExpr 0x13b943bb0 <line:50:14, col:27> '<dependent type>' contains-errors <LValueToRValue>
    |       |   | `-CXXDependentScopeMemberExpr 0x13b943b68 <col:14, col:27> '<dependent type>' contains-errors lvalue .flags
    |       |   |   `-RecoveryExpr 0x13b943b40 <col:14, col:19> '<dependent type>' contains-errors lvalue
    |       |   |     `-DeclRefExpr 0x13b943b08 <col:14> 'struct transaction_t *' lvalue ParmVar 0x13b928e48 'txn' 'struct transaction_t *'
    |       |   `-CompoundStmt 0x13b943d20 <col:34, line:63:6>
    |       |     |-BreakStmt 0x13b943c40 <line:54:3>
    |       |     |-BreakStmt 0x13b943c98 <line:58:3>
    |       |     |-DefaultStmt 0x13b943cf8 <line:59:6, col:13>
    |       |     | `-NullStmt 0x13b943cf0 <col:13>
    |       |     `-BreakStmt 0x13b943d18 <line:62:3>
    |       `-IfStmt 0x13b943fc0 <line:65:7, line:75:2>
    |         |-RecoveryExpr 0x13b943df0 <line:65:11, col:48> '_Bool' contains-errors
    |         `-CompoundStmt 0x13b943fa8 <col:51, line:75:2>
    |           `-SwitchStmt 0x13b943ed0 <line:66:6, line:74:6>
    |             |-ImplicitCastExpr 0x13b943eb8 <line:66:14, col:27> '<dependent type>' contains-errors <LValueToRValue>
    |             | `-CXXDependentScopeMemberExpr 0x13b943e70 <col:14, col:27> '<dependent type>' contains-errors lvalue .flags
    |             |   `-RecoveryExpr 0x13b943e48 <col:14, col:19> '<dependent type>' contains-errors lvalue
    |             |     `-DeclRefExpr 0x13b943e10 <col:14> 'struct transaction_t *' lvalue ParmVar 0x13b928e48 'txn' 'struct transaction_t *'
    |             `-CompoundStmt 0x13b943f80 <col:34, line:74:6>
    |               |-BreakStmt 0x13b943ef8 <line:69:3>
    |               |-DefaultStmt 0x13b943f58 <line:70:6, col:13>
    |               | `-NullStmt 0x13b943f50 <col:13>
    |               `-BreakStmt 0x13b943f78 <line:73:3>
    `-ReturnStmt 0x13b9440b8 <line:79:5, col:12>
      `-IntegerLiteral 0x13b944098 <col:12> 'int' 0
