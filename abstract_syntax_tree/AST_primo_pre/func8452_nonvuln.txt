`-FunctionDecl 0x13f00de88  line:1:1 invalid mono_assembly_get_object 'int (int *, int *)'
  |-ParmVarDecl 0x13f00dd28 <col:27, col:39> col:39 invalid domain 'int *'
  |-ParmVarDecl 0x13f00dda8 <col:47, col:61> col:61 invalid assembly 'int *'
  `-CompoundStmt 0x13f027768 <line:2:1, line:14:1>
    |-DeclStmt 0x13f00dfc0 <line:3:2, col:46>
    | `-VarDecl 0x13f00df58 <col:2, col:20> col:20 referenced invalid System_Reflection_Assembly 'int *' static
    `-IfStmt 0x13f027568 <line:7:2, line:9:31>
      |-UnaryOperator 0x13f00e218 <line:7:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow
      | `-ImplicitCastExpr 0x13f00e200 <col:7> '<dependent type>' contains-errors <LValueToRValue>
      |   `-RecoveryExpr 0x13f00e1e0 <col:7> '<dependent type>' contains-errors lvalue
      `-BinaryOperator 0x13f027548 <line:8:3, line:9:31> '<dependent type>' contains-errors '='
        |-RecoveryExpr 0x13f00e250 <line:8:3> '<dependent type>' contains-errors lvalue
        | `-DeclRefExpr 0x13f00e230 <col:3> 'int *' lvalue Var 0x13f00df58 'System_Reflection_Assembly' 'int *'
        `-CallExpr 0x13f027518 <col:32, line:9:31> '<dependent type>' contains-errors
          |-DeclRefExpr 0x13f00e358 <line:8:32> 'int ()' Function 0x13f00e2a0 'mono_class_from_name' 'int ()'
          |-CXXDependentScopeMemberExpr 0x13f0274d0 <line:9:4, col:18> '<dependent type>' contains-errors lvalue .corlib
          | `-RecoveryExpr 0x13f0274b0 <col:4> '<dependent type>' contains-errors lvalue
          `-StringLiteral 0x13f027440 <col:26> 'char[4]' lvalue "STR"
