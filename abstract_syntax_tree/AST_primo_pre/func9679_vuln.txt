`-FunctionDecl 0x159140a00  line:1:1 writefile 'int (const char *, struct string *)'
  |-ParmVarDecl 0x1591280d8 <col:11, col:23> col:23 used name 'const char *'
  |-ParmVarDecl 0x1591286c8 <col:29, col:44> col:44 used s 'struct string *'
  `-CompoundStmt 0x159142e70 <line:2:1, line:19:1>
    |-DeclStmt 0x159140bb0 <line:4:2, col:9>
    | `-VarDecl 0x159140b48 <col:2, col:6> col:6 used ret 'int'
    |-IfStmt 0x1591410e0 <line:7:2, line:10:2>
    | |-UnaryOperator 0x159140ea8 <line:7:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x159140e90 <col:7> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x159140e70 <col:7> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x1591410c0 <col:10, line:10:2>
    |   |-CallExpr 0x159141018 <line:8:3, col:19> 'int'
    |   | |-ImplicitCastExpr 0x159141000 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x159140fa0 <col:3> 'int ()' Function 0x159140ee8 'warn' 'int ()'
    |   | |-ImplicitCastExpr 0x159141048 <col:8> 'char *' <ArrayToPointerDecay>
    |   | | `-StringLiteral 0x159140fc0 <col:8> 'char[4]' lvalue "STR"
    |   | `-ImplicitCastExpr 0x159141060 <col:15> 'const char *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x159140fe0 <col:15> 'const char *' lvalue ParmVar 0x1591280d8 'name' 'const char *'
    |   `-ReturnStmt 0x1591410b0 <line:9:3, col:11>
    |     `-UnaryOperator 0x159141098 <col:10, col:11> 'int' prefix '-'
    |       `-IntegerLiteral 0x159141078 <col:11> 'int' 1
    |-BinaryOperator 0x159141140 <line:11:2, col:8> 'int' '='
    | |-DeclRefExpr 0x159141100 <col:2> 'int' lvalue Var 0x159140b48 'ret' 'int'
    | `-IntegerLiteral 0x159141120 <col:8> 'int' 0
    |-IfStmt 0x159141860 <line:12:2, line:15:2>
    | |-BinaryOperator 0x1591416d0 <line:12:6, col:55> 'int' contains-errors '||'
    | | |-BinaryOperator 0x159141648 <col:6, col:37> 'int' contains-errors '!='
    | | | |-CallExpr 0x159141608 <col:6, col:29> '<dependent type>' contains-errors
    | | | | |-DeclRefExpr 0x159141270 <col:6> 'int ()' Function 0x1591411b8 'fwrite' 'int ()'
    | | | | |-RecoveryExpr 0x1591412c8 <col:13, col:16> '<dependent type>' contains-errors lvalue
    | | | | | `-DeclRefExpr 0x159141290 <col:13> 'struct string *' lvalue ParmVar 0x1591286c8 's' 'struct string *'
    | | | | |-IntegerLiteral 0x1591412f0 <col:19> 'int' 1
    | | | | |-RecoveryExpr 0x159141348 <col:22, col:25> '<dependent type>' contains-errors lvalue
    | | | | | `-DeclRefExpr 0x159141310 <col:22> 'struct string *' lvalue ParmVar 0x1591286c8 's' 'struct string *'
    | | | | `-RecoveryExpr 0x1591415e8 <col:28> '<dependent type>' contains-errors lvalue
    | | | `-RecoveryExpr 0x159141400 <col:34, col:37> '<dependent type>' contains-errors lvalue
    | | |   `-DeclRefExpr 0x1591413c8 <col:34> 'struct string *' lvalue ParmVar 0x1591286c8 's' 'struct string *'
    | | `-BinaryOperator 0x1591416b0 <col:42, col:55> 'int' contains-errors '!='
    | |   |-CallExpr 0x159141688 <col:42, col:50> '<dependent type>' contains-errors
    | |   | |-DeclRefExpr 0x159141528 <col:42> 'int ()' Function 0x159141470 'fflush' 'int ()'
    | |   | `-RecoveryExpr 0x159141668 <col:49> '<dependent type>' contains-errors lvalue
    | |   `-IntegerLiteral 0x159141588 <col:55> 'int' 0
    | `-CompoundStmt 0x159141840 <col:58, line:15:2>
    |   |-CallExpr 0x159141768 <line:13:3, col:19> 'int'
    |   | |-ImplicitCastExpr 0x159141750 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x1591416f0 <col:3> 'int ()' Function 0x159140ee8 'warn' 'int ()'
    |   | |-ImplicitCastExpr 0x159141798 <col:8> 'char *' <ArrayToPointerDecay>
    |   | | `-StringLiteral 0x159141710 <col:8> 'char[4]' lvalue "STR"
    |   | `-ImplicitCastExpr 0x1591417b0 <col:15> 'const char *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x159141730 <col:15> 'const char *' lvalue ParmVar 0x1591280d8 'name' 'const char *'
    |   `-BinaryOperator 0x159141820 <line:14:3, col:10> 'int' '='
    |     |-DeclRefExpr 0x1591417c8 <col:3> 'int' lvalue Var 0x159140b48 'ret' 'int'
    |     `-UnaryOperator 0x159141808 <col:9, col:10> 'int' prefix '-'
    |       `-IntegerLiteral 0x1591417e8 <col:10> 'int' 1
    |-CallExpr 0x159142e00 <line:16:2, col:10> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x159141960 <col:2> 'int ()' Function 0x1591418a8 'fclose' 'int ()'
    | `-RecoveryExpr 0x1591419c0 <col:9> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x159142e60 <line:18:2, col:9>
      `-ImplicitCastExpr 0x159142e48 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x159142e28 <col:9> 'int' lvalue Var 0x159140b48 'ret' 'int'
