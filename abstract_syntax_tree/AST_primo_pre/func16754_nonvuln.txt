`-FunctionDecl 0x14c0f4880  line:1:13 invalid ASMReplaceTagsWithLookups 'void (int *, int *)' static
  |-ParmVarDecl 0x14c0f4728 <col:39, col:44> col:44 referenced invalid sm 'int *'
  |-ParmVarDecl 0x14c0f47a8 <col:47, col:60> col:60 invalid sf 'int *'
  `-CompoundStmt 0x14b83cb70 <col:64, line:12:1>
    |-DeclStmt 0x14c0f49b8 <line:2:5, col:10>
    | `-VarDecl 0x14c0f4950 <col:5, col:9> col:9 used i 'int'
    |-IfStmt 0x14c0f4ac0 <line:4:5, line:5:1>
    | |-BinaryOperator 0x14c0f4a90 <line:4:10, col:22> 'int' contains-errors '!='
    | | |-CXXDependentScopeMemberExpr 0x14c0f49f0 <col:10, col:14> '<dependent type>' contains-errors lvalue ->type
    | | | `-RecoveryExpr 0x14c0f49d0 <col:10> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x14c0f4a70 <col:22> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x14c0f4ab0 <line:5:1>
    `-ForStmt 0x14b83cb38 <line:6:5, line:11:5>
      |-BinaryOperator 0x14c0f4b20 <line:6:11, col:13> 'int' '='
      | |-DeclRefExpr 0x14c0f4ae0 <col:11> 'int' lvalue Var 0x14c0f4950 'i' 'int'
      | `-IntegerLiteral 0x14c0f4b00 <col:13> 'int' 0
      |-<<<NULL>>>
      |-BinaryOperator 0x14c0f4c50 <col:16, col:36> 'int' contains-errors '<'
      | |-DeclRefExpr 0x14c0f4b40 <col:16> 'int' lvalue Var 0x14c0f4950 'i' 'int'
      | `-BinaryOperator 0x14c0f4c30 <col:18, col:36> '<dependent type>' contains-errors '*'
      |   |-CXXDependentScopeMemberExpr 0x14c0f4b80 <col:18, col:22> '<dependent type>' contains-errors lvalue ->class_cnt
      |   | `-RecoveryExpr 0x14c0f4b60 <col:18> '<dependent type>' contains-errors lvalue
      |   `-CXXDependentScopeMemberExpr 0x14c0f4be8 <col:32, col:36> '<dependent type>' contains-errors lvalue ->state_cnt
      |     `-RecoveryExpr 0x14c0f4bc8 <col:32> '<dependent type>' contains-errors lvalue
      |-UnaryOperator 0x14c0f4c90 <col:47, col:49> 'int' prefix '++'
      | `-DeclRefExpr 0x14c0f4c70 <col:49> 'int' lvalue Var 0x14c0f4950 'i' 'int'
      `-CompoundStmt 0x14b83cb28 <col:53, line:11:5>
