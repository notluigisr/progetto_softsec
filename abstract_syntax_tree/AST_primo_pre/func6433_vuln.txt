`-FunctionDecl 0x12d128758  line:1:12 handle_wrmsr 'int (struct kvm_vcpu *)' static
  |-ParmVarDecl 0x12d128648 <col:25, col:42> col:42 used vcpu 'struct kvm_vcpu *'
  `-CompoundStmt 0x12d141840 <line:2:1, line:20:1>
    |-DeclStmt 0x12d140bc8 <line:3:2, col:21>
    | |-RecordDecl 0x12d140a50 <col:2, col:9> col:9 struct msr_data
    | `-VarDecl 0x12d140b48 <col:2, col:18> col:18 referenced invalid msr 'struct msr_data'
    |-BinaryOperator 0x12d140ce0 <line:8:2, col:13> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x12d140c40 <col:2, col:6> '<dependent type>' contains-errors lvalue .data
    | | `-RecoveryExpr 0x12d140c18 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x12d140bf8 <col:2> 'struct msr_data' lvalue Var 0x12d140b48 'msr' 'struct msr_data'
    | `-RecoveryExpr 0x12d140cc0 <col:13> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x12d140de8 <line:9:2, col:14> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x12d140d48 <col:2, col:6> '<dependent type>' contains-errors lvalue .index
    | | `-RecoveryExpr 0x12d140d20 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x12d140d00 <col:2> 'struct msr_data' lvalue Var 0x12d140b48 'msr' 'struct msr_data'
    | `-RecoveryExpr 0x12d140dc8 <col:14> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12d1414a8 <line:11:2, line:15:2>
    | |-BinaryOperator 0x12d141088 <line:11:6, col:33> 'int' contains-errors '!='
    | | |-CallExpr 0x12d141038 <col:6, col:28> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x12d140fc0 <col:6> 'int ()' Function 0x12d140f08 'vmx_set_msr' 'int ()'
    | | | |-DeclRefExpr 0x12d140fe0 <col:18> 'struct kvm_vcpu *' lvalue ParmVar 0x12d128648 'vcpu' 'struct kvm_vcpu *'
    | | | `-UnaryOperator 0x12d141020 <col:24, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | |   `-RecoveryExpr 0x12d141000 <col:25> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x12d141068 <col:33> 'int' 0
    | `-CompoundStmt 0x12d141480 <col:36, line:15:2>
    |   |-CallExpr 0x12d141248 <line:12:3, col:35> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x12d141188 <col:3> 'int ()' Function 0x12d1410d0 'trace_kvm_msr_write_ex' 'int ()'
    |   | |-RecoveryExpr 0x12d141208 <col:26> '<dependent type>' contains-errors lvalue
    |   | `-RecoveryExpr 0x12d141228 <col:31> '<dependent type>' contains-errors lvalue
    |   |-CallExpr 0x12d141408 <line:13:3, col:24> 'int'
    |   | |-ImplicitCastExpr 0x12d1413f0 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x12d141358 <col:3> 'int ()' Function 0x12d1412a0 'kvm_inject_gp' 'int ()'
    |   | |-ImplicitCastExpr 0x12d141438 <col:17> 'struct kvm_vcpu *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x12d141378 <col:17> 'struct kvm_vcpu *' lvalue ParmVar 0x12d128648 'vcpu' 'struct kvm_vcpu *'
    |   | `-IntegerLiteral 0x12d141398 <col:23> 'int' 0
    |   `-ReturnStmt 0x12d141470 <line:14:3, col:10>
    |     `-IntegerLiteral 0x12d141450 <col:10> 'int' 1
    |-CallExpr 0x12d141668 <line:17:2, col:31> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12d1415a8 <col:2> 'int ()' Function 0x12d1414f0 'trace_kvm_msr_write' 'int ()'
    | |-RecoveryExpr 0x12d141628 <col:22> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x12d141648 <col:27> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x12d1417d0 <line:18:2, col:32> 'int'
    | |-ImplicitCastExpr 0x12d1417b8 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x12d141778 <col:2> 'int ()' Function 0x12d1416c0 'skip_emulated_instruction' 'int ()'
    | `-ImplicitCastExpr 0x12d1417f8 <col:28> 'struct kvm_vcpu *' <LValueToRValue>
    |   `-DeclRefExpr 0x12d141798 <col:28> 'struct kvm_vcpu *' lvalue ParmVar 0x12d128648 'vcpu' 'struct kvm_vcpu *'
    `-ReturnStmt 0x12d141830 <line:19:2, col:9>
      `-IntegerLiteral 0x12d141810 <col:9> 'int' 1
