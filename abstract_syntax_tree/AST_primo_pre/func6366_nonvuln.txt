`-FunctionDecl 0x12480de88  line:1:12 invalid asf_read_language_list 'int (int *, const int *)' static
  |-ParmVarDecl 0x12480dd28 <col:35, col:52> col:52 invalid s 'int *'
  |-ParmVarDecl 0x12480dda8 <col:55, col:77> col:77 invalid g 'const int *'
  `-CompoundStmt 0x1241232e8 <line:2:1, line:24:1>
    |-DeclStmt 0x12480e158 <line:5:5, col:15>
    | |-VarDecl 0x12480e058 <col:5, col:9> col:9 used i 'int'
    | `-VarDecl 0x12480e0d8 <col:5, col:12> col:12 used ret 'int'
    |-IfStmt 0x124123198 <line:9:5, line:20:5>
    | |-BinaryOperator 0x12480e200 <line:9:9, col:20> 'int' contains-errors '<'
    | | |-RecoveryExpr 0x12480e1c0 <col:9> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x12480e1e0 <col:20> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x124123180 <col:37, line:20:5>
    |   `-ForStmt 0x124123148 <line:10:9, line:19:9>
    |     |-BinaryOperator 0x12480e260 <line:10:14, col:18> 'int' '='
    |     | |-DeclRefExpr 0x12480e220 <col:14> 'int' lvalue Var 0x12480e058 'i' 'int'
    |     | `-IntegerLiteral 0x12480e240 <col:18> 'int' 0
    |     |-<<<NULL>>>
    |     |-BinaryOperator 0x12480e2f8 <col:21, col:25> 'int' contains-errors '<'
    |     | |-DeclRefExpr 0x12480e280 <col:21> 'int' lvalue Var 0x12480e058 'i' 'int'
    |     | `-RecoveryExpr 0x12480e2d8 <col:25> '<dependent type>' contains-errors lvalue
    |     |-UnaryOperator 0x12480e338 <col:35, col:36> 'int' postfix '++'
    |     | `-DeclRefExpr 0x12480e318 <col:35> 'int' lvalue Var 0x12480e058 'i' 'int'
    |     `-CompoundStmt 0x124123128 <col:40, line:19:9>
    |       |-UnaryExprOrTypeTraitExpr 0x12480e3a8 <line:11:13, col:20> 'unsigned long' contains-errors sizeof
    |       | `-RecoveryExpr 0x12480e388 <col:20> '<dependent type>' contains-errors lvalue
    |       `-IfStmt 0x124123108 <line:15:13, line:18:13>
    |         |-RecoveryExpr 0x124123088 <line:15:17, line:16:72> '_Bool' contains-errors
    |         `-CompoundStmt 0x1241230f0 <col:75, line:18:13>
    |           `-ReturnStmt 0x1241230e0 <line:17:17, col:24>
    |             `-ImplicitCastExpr 0x1241230c8 <col:24> 'int' <LValueToRValue>
    |               `-DeclRefExpr 0x1241230a8 <col:24> 'int' lvalue Var 0x12480e0d8 'ret' 'int'
    `-ReturnStmt 0x1241232d8 <line:23:5, col:12>
      `-IntegerLiteral 0x1241232b8 <col:12> 'int' 0
