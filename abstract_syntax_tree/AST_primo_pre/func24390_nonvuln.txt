`-FunctionDecl 0x12f80dec0  line:1:13 gic_set_irq 'void (void *, int, int)' static
  |-ParmVarDecl 0x12f80dcd8 <col:25, col:31> col:31 opaque 'void *'
  |-ParmVarDecl 0x12f80dd58 <col:39, col:43> col:43 used irq 'int'
  |-ParmVarDecl 0x12f80ddd8 <col:48, col:52> col:52 used level 'int'
  `-CompoundStmt 0x12f829968 <line:2:1, line:34:1>
    |-DeclStmt 0x12f80e128 <line:5:5, col:19>
    | |-VarDecl 0x12f80e028 <col:5, col:9> col:9 used cm 'int'
    | `-VarDecl 0x12f80e0a8 <col:5, col:13> col:13 used target 'int'
    |-IfStmt 0x12f828838 <line:6:5, line:18:5> has_else
    | |-RecoveryExpr 0x12f80e1f8 <line:6:9, col:41> '_Bool' contains-errors
    | |-CompoundStmt 0x12f8283a8 <col:44, line:11:5>
    | | |-BinaryOperator 0x12f80e290 <line:8:9, col:14> 'int' contains-errors '='
    | | | |-DeclRefExpr 0x12f80e218 <col:9> 'int' lvalue Var 0x12f80e028 'cm' 'int'
    | | | `-RecoveryExpr 0x12f80e270 <col:14> '<dependent type>' contains-errors lvalue
    | | |-CompoundAssignOperator 0x12f80e338 <line:9:9, col:16> 'int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | | | |-DeclRefExpr 0x12f80e2b0 <col:9> 'int' lvalue ParmVar 0x12f80dd58 'irq' 'int'
    | | | `-RecoveryExpr 0x12f80e318 <col:16> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x12f828388 <line:10:9, col:37> 'int' '='
    | |   |-DeclRefExpr 0x12f80e368 <col:9> 'int' lvalue Var 0x12f80e0a8 'target' 'int'
    | |   `-CallExpr 0x12f828348 <col:18, col:37> 'int'
    | |     |-ImplicitCastExpr 0x12f828330 <col:18> 'int (*)()' <FunctionToPointerDecay>
    | |     | `-DeclRefExpr 0x12f8282b8 <col:18> 'int ()' Function 0x12f828200 'GIC_DIST_TARGET' 'int ()'
    | |     `-ImplicitCastExpr 0x12f828370 <col:34> 'int' <LValueToRValue>
    | |       `-DeclRefExpr 0x12f8282d8 <col:34> 'int' lvalue ParmVar 0x12f80dd58 'irq' 'int'
    | `-CompoundStmt 0x12f828800 <line:11:12, line:18:5>
    |   |-DeclStmt 0x12f828450 <line:12:9, col:16>
    |   | `-VarDecl 0x12f8283e8 <col:9, col:13> col:13 used cpu 'int'
    |   |-BinaryOperator 0x12f8285f8 <line:14:9, col:21> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x12f828520 <col:9> 'int' lvalue Var 0x12f8283e8 'cpu' 'int'
    |   | `-BinaryOperator 0x12f8285d8 <col:15, col:21> '<dependent type>' contains-errors '/'
    |   |   |-DeclRefExpr 0x12f828540 <col:15> 'int' lvalue ParmVar 0x12f80dd58 'irq' 'int'
    |   |   `-RecoveryExpr 0x12f8285b8 <col:21> '<dependent type>' contains-errors lvalue
    |   |-CompoundAssignOperator 0x12f8286a0 <line:15:9, col:16> 'int' contains-errors '%=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   | |-DeclRefExpr 0x12f828618 <col:9> 'int' lvalue ParmVar 0x12f80dd58 'irq' 'int'
    |   | `-RecoveryExpr 0x12f828680 <col:16> '<dependent type>' contains-errors lvalue
    |   |-BinaryOperator 0x12f828768 <line:16:9, col:19> 'int' '='
    |   | |-DeclRefExpr 0x12f8286d0 <col:9> 'int' lvalue Var 0x12f80e028 'cm' 'int'
    |   | `-BinaryOperator 0x12f828748 <col:14, col:19> 'int' '<<'
    |   |   |-IntegerLiteral 0x12f8286f0 <col:14> 'int' 1
    |   |   `-ImplicitCastExpr 0x12f828730 <col:19> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x12f828710 <col:19> 'int' lvalue Var 0x12f8283e8 'cpu' 'int'
    |   `-BinaryOperator 0x12f8287e0 <line:17:9, col:18> 'int' '='
    |     |-DeclRefExpr 0x12f828788 <col:9> 'int' lvalue Var 0x12f80e0a8 'target' 'int'
    |     `-ImplicitCastExpr 0x12f8287c8 <col:18> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x12f8287a8 <col:18> 'int' lvalue Var 0x12f80e028 'cm' 'int'
    |-CallExpr 0x12f828a28 <line:20:5, col:30> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12f828948 <col:5> 'int ()' Function 0x12f828890 'assert' 'int ()'
    | `-BinaryOperator 0x12f828a08 <col:12, col:19> 'int' contains-errors '>='
    |   |-DeclRefExpr 0x12f828968 <col:12> 'int' lvalue ParmVar 0x12f80dd58 'irq' 'int'
    |   `-RecoveryExpr 0x12f8289e8 <col:19> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12f828c88 <line:22:5, line:24:5>
    | |-BinaryOperator 0x12f828c40 <line:22:9, col:45> 'int' '=='
    | | |-ImplicitCastExpr 0x12f828c28 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x12f828a50 <col:9> 'int' lvalue ParmVar 0x12f80ddd8 'level' 'int'
    | | `-CallExpr 0x12f828bc8 <col:18, col:45> 'int'
    | |   |-ImplicitCastExpr 0x12f828bb0 <col:18> 'int (*)()' <FunctionToPointerDecay>
    | |   | `-DeclRefExpr 0x12f828b50 <col:18> 'int ()' Function 0x12f828a98 'GIC_DIST_TEST_LEVEL' 'int ()'
    | |   |-ImplicitCastExpr 0x12f828bf8 <col:38> 'int' <LValueToRValue>
    | |   | `-DeclRefExpr 0x12f828b70 <col:38> 'int' lvalue ParmVar 0x12f80dd58 'irq' 'int'
    | |   `-ImplicitCastExpr 0x12f828c10 <col:43> 'int' <LValueToRValue>
    | |     `-DeclRefExpr 0x12f828b90 <col:43> 'int' lvalue Var 0x12f80e028 'cm' 'int'
    | `-CompoundStmt 0x12f828c70 <col:48, line:24:5>
    |   `-ReturnStmt 0x12f828c60 <line:23:9>
    |-IfStmt 0x12f829600 <line:26:5, line:30:5> has_else
    | |-BinaryOperator 0x12f828dc8 <line:26:9, col:24> 'int' contains-errors '=='
    | | |-CXXDependentScopeMemberExpr 0x12f828d60 <col:9, col:12> '<dependent type>' contains-errors lvalue ->revision
    | | | `-RecoveryExpr 0x12f828d40 <col:9> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x12f828da8 <col:24> '<dependent type>' contains-errors lvalue
    | |-CompoundStmt 0x12f829030 <col:38, line:28:5>
    | | `-CallExpr 0x12f828fe8 <line:27:9, col:55> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x12f828ec8 <col:9> 'int ()' Function 0x12f828e10 'gic_set_irq_11mpcore' 'int ()'
    | |   |-RecoveryExpr 0x12f828fc8 <col:30> '<dependent type>' contains-errors lvalue
    | |   |-DeclRefExpr 0x12f828f00 <col:33> 'int' lvalue ParmVar 0x12f80dd58 'irq' 'int'
    | |   |-DeclRefExpr 0x12f828f20 <col:38> 'int' lvalue ParmVar 0x12f80ddd8 'level' 'int'
    | |   |-DeclRefExpr 0x12f828f40 <col:45> 'int' lvalue Var 0x12f80e028 'cm' 'int'
    | |   `-DeclRefExpr 0x12f828f60 <col:49> 'int' lvalue Var 0x12f80e0a8 'target' 'int'
    | `-CompoundStmt 0x12f8291c8 <line:28:12, line:30:5>
    `-CallExpr 0x12f8297c8 <line:31:5, col:45> 'int'
      |-ImplicitCastExpr 0x12f8297b0 <col:5> 'int (*)()' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x12f829710 <col:5> 'int ()' Function 0x12f829658 'trace_gic_set_irq' 'int ()'
      |-ImplicitCastExpr 0x12f829808 <col:23> 'int' <LValueToRValue>
      | `-DeclRefExpr 0x12f829730 <col:23> 'int' lvalue ParmVar 0x12f80dd58 'irq' 'int'
      |-ImplicitCastExpr 0x12f829820 <col:28> 'int' <LValueToRValue>
      | `-DeclRefExpr 0x12f829750 <col:28> 'int' lvalue ParmVar 0x12f80ddd8 'level' 'int'
      |-ImplicitCastExpr 0x12f829838 <col:35> 'int' <LValueToRValue>
      | `-DeclRefExpr 0x12f829770 <col:35> 'int' lvalue Var 0x12f80e028 'cm' 'int'
      `-ImplicitCastExpr 0x12f829850 <col:39> 'int' <LValueToRValue>
        `-DeclRefExpr 0x12f829790 <col:39> 'int' lvalue Var 0x12f80e0a8 'target' 'int'
