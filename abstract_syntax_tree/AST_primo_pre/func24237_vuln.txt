`-FunctionDecl 0x1561281a8  line:1:1 PS_SERIALIZER_DECODE_FUNC 'int (int)'
  |-ParmVarDecl 0x1561280d8 <col:27> col:27 php 'int'
  `-CompoundStmt 0x1561433d8 <line:2:1, line:56:1>
    |-DeclStmt 0x1561283b8 <line:3:2, col:19>
    | |-VarDecl 0x1561282b8 <col:2, col:14> col:14 used p 'const char *'
    | `-VarDecl 0x156128338 <col:2, col:18> col:18 used q 'const char *'
    |-DeclStmt 0x156128450 <line:4:2, col:12>
    | `-VarDecl 0x1561283e8 <col:2, col:8> col:8 used name 'char *'
    |-DeclStmt 0x1561285b0 <line:5:2, col:35>
    | `-VarDecl 0x156128480 <col:2, col:29> col:14 used endptr 'const char *' cinit
    |   `-BinaryOperator 0x156128590 <col:23, col:29> '<dependent type>' contains-errors '+'
    |     |-RecoveryExpr 0x156128550 <col:23> '<dependent type>' contains-errors lvalue
    |     `-RecoveryExpr 0x156128570 <col:29> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x156128660 <line:7:2, col:13>
    | `-VarDecl 0x1561285f8 <col:2, col:6> col:6 used namelen 'int'
    |-DeclStmt 0x1561286f8 <line:8:2, col:15>
    | `-VarDecl 0x156128690 <col:2, col:6> col:6 used has_value 'int'
    |-CallExpr 0x156809738 <line:11:2, col:35> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1568096b8 <col:2> 'int ()' Function 0x156809600 'PHP_VAR_UNSERIALIZE_INIT' 'int ()'
    | `-RecoveryExpr 0x156809718 <col:27> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x1568097d8 <line:13:2, col:6> 'const char *' contains-errors '='
    | |-DeclRefExpr 0x156809760 <col:2> 'const char *' lvalue Var 0x1561282b8 'p' 'const char *'
    | `-RecoveryExpr 0x1568097b8 <col:6> '<dependent type>' contains-errors lvalue
    |-WhileStmt 0x156143290 <line:15:2, line:50:2>
    | |-BinaryOperator 0x156809868 <line:15:9, col:13> 'int' contains-errors '<'
    | | |-ImplicitCastExpr 0x156809838 <col:9> 'const char *' <LValueToRValue>
    | | | `-DeclRefExpr 0x1568097f8 <col:9> 'const char *' lvalue Var 0x1561282b8 'p' 'const char *'
    | | `-ImplicitCastExpr 0x156809850 <col:13> 'const char *' contains-errors <LValueToRValue>
    | |   `-DeclRefExpr 0x156809818 <col:13> 'const char *' contains-errors lvalue Var 0x156128480 'endptr' 'const char *'
    | `-CompoundStmt 0x156143228 <col:21, line:50:2>
    |   |-BinaryOperator 0x156809928 <line:17:3, col:7> 'const char *' '='
    |   | |-DeclRefExpr 0x1568098d0 <col:3> 'const char *' lvalue Var 0x156128338 'q' 'const char *'
    |   | `-ImplicitCastExpr 0x156809910 <col:7> 'const char *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x1568098f0 <col:7> 'const char *' lvalue Var 0x1561282b8 'p' 'const char *'
    |   |-WhileStmt 0x156809ba0 <line:18:3, line:20:3>
    |   | |-BinaryOperator 0x156809a50 <line:18:10, col:16> 'int' contains-errors '!='
    |   | | |-UnaryOperator 0x156809a18 <col:10, col:11> 'const char' lvalue prefix '*' cannot overflow
    |   | | | `-ImplicitCastExpr 0x156809a00 <col:11> 'const char *' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x156809948 <col:11> 'const char *' lvalue Var 0x156128338 'q' 'const char *'
    |   | | `-RecoveryExpr 0x156809a30 <col:16> '<dependent type>' contains-errors lvalue
    |   | `-CompoundStmt 0x156809b88 <col:30, line:20:3>
    |   |   `-IfStmt 0x156809b68 <line:19:4, col:28>
    |   |     |-BinaryOperator 0x156809ae0 <col:8, col:15> 'int' contains-errors '>='
    |   |     | |-UnaryOperator 0x156809a90 <col:8, col:10> 'const char *' prefix '++'
    |   |     | | `-DeclRefExpr 0x156809a70 <col:10> 'const char *' lvalue Var 0x156128338 'q' 'const char *'
    |   |     | `-ImplicitCastExpr 0x156809ac8 <col:15> 'const char *' contains-errors <LValueToRValue>
    |   |     |   `-DeclRefExpr 0x156809aa8 <col:15> 'const char *' contains-errors lvalue Var 0x156128480 'endptr' 'const char *'
    |   |     `-GotoStmt 0x156809b50 <col:23, col:28> 'break_outer_loop' 0x156809b00
    |   |-IfStmt 0x156809e50 <line:21:3, line:26:3> has_else
    |   | |-BinaryOperator 0x156809d00 <line:21:7, col:15> 'int' contains-errors '=='
    |   | | |-ArraySubscriptExpr 0x156809cc0 <col:7, col:10> 'const char' lvalue
    |   | | | |-ImplicitCastExpr 0x156809ca8 <col:7> 'const char *' <LValueToRValue>
    |   | | | | `-DeclRefExpr 0x156809bc0 <col:7> 'const char *' lvalue Var 0x1561282b8 'p' 'const char *'
    |   | | | `-IntegerLiteral 0x156809be0 <col:9> 'int' 0
    |   | | `-RecoveryExpr 0x156809ce0 <col:15> '<dependent type>' contains-errors lvalue
    |   | |-CompoundStmt 0x156809db8 <col:32, line:24:3>
    |   | | |-UnaryOperator 0x156809d40 <line:22:4, col:5> 'const char *' postfix '++'
    |   | | | `-DeclRefExpr 0x156809d20 <col:4> 'const char *' lvalue Var 0x1561282b8 'p' 'const char *'
    |   | | `-BinaryOperator 0x156809d98 <line:23:4, col:16> 'int' '='
    |   | |   |-DeclRefExpr 0x156809d58 <col:4> 'int' lvalue Var 0x156128690 'has_value' 'int'
    |   | |   `-IntegerLiteral 0x156809d78 <col:16> 'int' 0
    |   | `-CompoundStmt 0x156809e38 <line:24:10, line:26:3>
    |   |   `-BinaryOperator 0x156809e18 <line:25:4, col:16> 'int' '='
    |   |     |-DeclRefExpr 0x156809dd8 <col:4> 'int' lvalue Var 0x156128690 'has_value' 'int'
    |   |     `-IntegerLiteral 0x156809df8 <col:16> 'int' 1
    |   |-BinaryOperator 0x156809f48 <line:28:3, col:17> 'int' '='
    |   | |-DeclRefExpr 0x156809e80 <col:3> 'int' lvalue Var 0x1561285f8 'namelen' 'int'
    |   | `-ImplicitCastExpr 0x156809f30 <col:13, col:17> 'int' <IntegralCast>
    |   |   `-BinaryOperator 0x156809f10 <col:13, col:17> 'long' '-'
    |   |     |-ImplicitCastExpr 0x156809ee0 <col:13> 'const char *' <LValueToRValue>
    |   |     | `-DeclRefExpr 0x156809ea0 <col:13> 'const char *' lvalue Var 0x156128338 'q' 'const char *'
    |   |     `-ImplicitCastExpr 0x156809ef8 <col:17> 'const char *' <LValueToRValue>
    |   |       `-DeclRefExpr 0x156809ec0 <col:17> 'const char *' lvalue Var 0x1561282b8 'p' 'const char *'
    |   |-BinaryOperator 0x15680a5b0 <line:29:3, col:29> 'char *' '='
    |   | |-DeclRefExpr 0x156809f68 <col:3> 'char *' lvalue Var 0x1561283e8 'name' 'char *'
    |   | `-ImplicitCastExpr 0x15680a178 <col:10, col:29> 'char *' <IntegralToPointer>
    |   |   `-CallExpr 0x15680a118 <col:10, col:29> 'int'
    |   |     |-ImplicitCastExpr 0x15680a100 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |   |     | `-DeclRefExpr 0x15680a068 <col:10> 'int ()' Function 0x156809fb0 'estrndup' 'int ()'
    |   |     |-ImplicitCastExpr 0x15680a148 <col:19> 'const char *' <LValueToRValue>
    |   |     | `-DeclRefExpr 0x15680a088 <col:19> 'const char *' lvalue Var 0x1561282b8 'p' 'const char *'
    |   |     `-ImplicitCastExpr 0x15680a160 <col:22> 'int' <LValueToRValue>
    |   |       `-DeclRefExpr 0x15680a0a8 <col:22> 'int' lvalue Var 0x1561285f8 'namelen' 'int'
    |   |-UnaryOperator 0x156140a00 <line:30:3, col:4> 'const char *' postfix '++'
    |   | `-DeclRefExpr 0x15680a5d0 <col:3> 'const char *' lvalue Var 0x156128338 'q' 'const char *'
    |   |-IfStmt 0x1561411a0 <line:32:3, line:36:3>
    |   | |-RecoveryExpr 0x156140d88 <line:32:7, col:79> '_Bool' contains-errors
    |   | `-CompoundStmt 0x156141188 <col:88, line:36:3>
    |   |   `-IfStmt 0x156141168 <line:33:4, line:35:4>
    |   |     |-RecoveryExpr 0x1561410c8 <line:33:8, col:109> '_Bool' contains-errors
    |   |     `-CompoundStmt 0x156141150 <col:112, line:35:4>
    |   |       `-GotoStmt 0x156141138 <line:34:5, col:10> 'skip' 0x1561410e8
    |   |-IfStmt 0x156141838 <line:38:3, line:44:3>
    |   | |-ImplicitCastExpr 0x1561411e0 <line:38:7> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x1561411c0 <col:7> 'int' lvalue Var 0x156128690 'has_value' 'int'
    |   | `-CompoundStmt 0x156141820 <col:18, line:44:3>
    |   |   `-IfStmt 0x156141700 <line:40:4, line:42:4>
    |   |     |-RecoveryExpr 0x156141590 <line:40:8, col:118> '_Bool' contains-errors
    |   |     `-CompoundStmt 0x1561416f0 <col:121, line:42:4>
    |   |-CallExpr 0x1561419b0 <line:45:3, col:28> 'int'
    |   | |-ImplicitCastExpr 0x156141998 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x156141938 <col:3> 'int ()' Function 0x156141880 'PS_ADD_VARL' 'int ()'
    |   | |-ImplicitCastExpr 0x1561419e0 <col:15> 'char *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x156141958 <col:15> 'char *' lvalue Var 0x1561283e8 'name' 'char *'
    |   | `-ImplicitCastExpr 0x156143000 <col:21> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x156141978 <col:21> 'int' lvalue Var 0x1561285f8 'namelen' 'int'
    |   |-LabelStmt 0x156143190 <line:46:1, line:47:13> 'skip'
    |   | `-CallExpr 0x156143150 <col:3, col:13> 'int'
    |   |   |-ImplicitCastExpr 0x156143138 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   |   | `-DeclRefExpr 0x1561430f8 <col:3> 'int ()' Function 0x156143040 'efree' 'int ()'
    |   |   `-ImplicitCastExpr 0x156143178 <col:9> 'char *' <LValueToRValue>
    |   |     `-DeclRefExpr 0x156143118 <col:9> 'char *' lvalue Var 0x1561283e8 'name' 'char *'
    |   `-BinaryOperator 0x156143208 <line:49:3, col:7> 'const char *' '='
    |     |-DeclRefExpr 0x1561431b0 <col:3> 'const char *' lvalue Var 0x1561282b8 'p' 'const char *'
    |     `-ImplicitCastExpr 0x1561431f0 <col:7> 'const char *' <LValueToRValue>
    |       `-DeclRefExpr 0x1561431d0 <col:7> 'const char *' lvalue Var 0x156128338 'q' 'const char *'
    `-LabelStmt 0x1561433b8 <line:51:1, col:17> 'break_outer_loop'
      `-NullStmt 0x1561433b0 <col:17>
