`-FunctionDecl 0x13a0face8  line:1:1 invalid get_chv_status 'int (int, int, int)'
  |-ParmVarDecl 0x13a0faaf0 <col:17, col:23> col:23 invalid app 'int'
  |-ParmVarDecl 0x13a0fab70 <col:28, col:32> col:32 used sigg 'int'
  |-ParmVarDecl 0x13a0fabf0 <col:38, col:42> col:42 used pwid 'int'
  `-CompoundStmt 0x13a1158e0 <line:2:1, line:39:1>
    |-DeclStmt 0x13a0fae98 <line:3:3, col:31>
    | `-VarDecl 0x13a0fadf8 <col:3, col:27> col:18 used result 'unsigned char *' cinit
    |   `-RecoveryExpr 0x13a0fae78 <col:27> '<dependent type>' contains-errors lvalue
    |-UnaryExprOrTypeTraitExpr 0x13a0faf08 <line:4:3, col:10> 'unsigned long' contains-errors sizeof
    | `-DeclRefExpr 0x13a0faee8 <col:10> 'unsigned char *' contains-errors lvalue Var 0x13a0fadf8 'result' 'unsigned char *' non_odr_use_unevaluated
    |-DeclStmt 0x13a0fb038 <line:5:3, col:18>
    | `-VarDecl 0x13a0fafd0 <col:3, col:17> col:8 used command 'char[4]'
    |-DeclStmt 0x13a0fb0d0 <line:6:3, col:9>
    | `-VarDecl 0x13a0fb068 <col:3, col:7> col:7 used rc 'int'
    |-IfStmt 0x139830230 <line:8:3, line:9:24>
    | |-CallExpr 0x139830118 <line:8:7, col:36> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x1398300b8 <col:7> 'int ()' Function 0x139830000 'switch_application' 'int ()'
    | | |-RecoveryExpr 0x1398300d8 <col:27> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x1398300f8 <col:32> 'int' lvalue ParmVar 0x13a0fab70 'sigg' 'int'
    | `-ReturnStmt 0x139830220 <line:9:5, col:24>
    |   `-ConditionalOperator 0x1398301f0 <col:12, col:24> 'int'
    |     |-ImplicitCastExpr 0x1398301d8 <col:12> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x139830148 <col:12> 'int' lvalue ParmVar 0x13a0fab70 'sigg' 'int'
    |     |-UnaryOperator 0x139830188 <col:18, col:19> 'int' prefix '-'
    |     | `-IntegerLiteral 0x139830168 <col:19> 'int' 2
    |     `-UnaryOperator 0x1398301c0 <col:23, col:24> 'int' prefix '-'
    |       `-IntegerLiteral 0x1398301a0 <col:24> 'int' 1
    |-BinaryOperator 0x139830300 <line:11:3, col:16> 'char' '='
    | |-ArraySubscriptExpr 0x1398302a8 <col:3, col:12> 'char' lvalue
    | | |-ImplicitCastExpr 0x139830290 <col:3> 'char *' <ArrayToPointerDecay>
    | | | `-DeclRefExpr 0x139830250 <col:3> 'char[4]' lvalue Var 0x13a0fafd0 'command' 'char[4]'
    | | `-IntegerLiteral 0x139830270 <col:11> 'int' 0
    | `-ImplicitCastExpr 0x1398302e8 <col:16> 'char' <IntegralCast>
    |   `-IntegerLiteral 0x1398302c8 <col:16> 'int' 0
    |-BinaryOperator 0x1398303d0 <line:12:3, col:16> 'char' '='
    | |-ArraySubscriptExpr 0x139830378 <col:3, col:12> 'char' lvalue
    | | |-ImplicitCastExpr 0x139830360 <col:3> 'char *' <ArrayToPointerDecay>
    | | | `-DeclRefExpr 0x139830320 <col:3> 'char[4]' lvalue Var 0x13a0fafd0 'command' 'char[4]'
    | | `-IntegerLiteral 0x139830340 <col:11> 'int' 1
    | `-ImplicitCastExpr 0x1398303b8 <col:16> 'char' <IntegralCast>
    |   `-IntegerLiteral 0x139830398 <col:16> 'int' 32
    |-BinaryOperator 0x1398304a0 <line:13:3, col:16> 'char' '='
    | |-ArraySubscriptExpr 0x139830448 <col:3, col:12> 'char' lvalue
    | | |-ImplicitCastExpr 0x139830430 <col:3> 'char *' <ArrayToPointerDecay>
    | | | `-DeclRefExpr 0x1398303f0 <col:3> 'char[4]' lvalue Var 0x13a0fafd0 'command' 'char[4]'
    | | `-IntegerLiteral 0x139830410 <col:11> 'int' 2
    | `-ImplicitCastExpr 0x139830488 <col:16> 'char' <IntegralCast>
    |   `-IntegerLiteral 0x139830468 <col:16> 'int' 0
    |-BinaryOperator 0x139830588 <line:14:3, col:16> 'char' '='
    | |-ArraySubscriptExpr 0x139830518 <col:3, col:12> 'char' lvalue
    | | |-ImplicitCastExpr 0x139830500 <col:3> 'char *' <ArrayToPointerDecay>
    | | | `-DeclRefExpr 0x1398304c0 <col:3> 'char[4]' lvalue Var 0x13a0fafd0 'command' 'char[4]'
    | | `-IntegerLiteral 0x1398304e0 <col:11> 'int' 3
    | `-ImplicitCastExpr 0x139830570 <col:16> 'char' <IntegralCast>
    |   `-ImplicitCastExpr 0x139830558 <col:16> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x139830538 <col:16> 'int' lvalue ParmVar 0x13a0fabf0 'pwid' 'int'
    |-IfStmt 0x13a1156c0 <line:16:3, line:35:5> has_else
    | |-CallExpr 0x139830970 <line:16:7, line:17:50> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x139830688 <line:16:7> 'int ()' Function 0x1398305d0 'apdu_send_direct' 'int ()'
    | | |-CXXDependentScopeMemberExpr 0x1398306c8 <col:25, col:30> '<dependent type>' contains-errors lvalue ->slot
    | | | `-RecoveryExpr 0x1398306a8 <col:25> '<dependent type>' contains-errors lvalue
    | | |-IntegerLiteral 0x139830710 <col:36> 'int' 0
    | | |-CStyleCastExpr 0x139830910 <col:39, col:56> 'unsigned char *' <BitCast>
    | | | `-ImplicitCastExpr 0x1398308f8 <col:56> 'char *' <ArrayToPointerDecay> part_of_explicit_cast
    | | |   `-DeclRefExpr 0x139830730 <col:56> 'char[4]' lvalue Var 0x13a0fafd0 'command' 'char[4]'
    | | |-IntegerLiteral 0x1398307a8 <line:17:25> 'int' 4
    | | |-IntegerLiteral 0x1398307c8 <col:28> 'int' 0
    | | |-UnaryOperator 0x139830840 <col:31, col:32> 'unsigned char **' contains-errors prefix '&' cannot overflow
    | | | `-DeclRefExpr 0x1398307e8 <col:32> 'unsigned char *' contains-errors lvalue Var 0x13a0fadf8 'result' 'unsigned char *'
    | | `-UnaryOperator 0x139830958 <col:40, col:41> 'unsigned char **' contains-errors prefix '&' cannot overflow
    | |   `-DeclRefExpr 0x139830938 <col:41> 'unsigned char *' contains-errors lvalue Var 0x13a0fadf8 'result' 'unsigned char *'
    | |-BinaryOperator 0x139830a20 <line:18:5, col:11> 'int' '='
    | | |-DeclRefExpr 0x1398309c8 <col:5> 'int' lvalue Var 0x13a0fb068 'rc' 'int'
    | | `-UnaryOperator 0x139830a08 <col:10, col:11> 'int' prefix '-'
    | |   `-IntegerLiteral 0x1398309e8 <col:11> 'int' 1
    | `-IfStmt 0x13a115690 <line:19:8, line:35:5> has_else
    |   |-BinaryOperator 0x139830ae8 <line:19:12, col:24> 'int' contains-errors '<'
    |   | |-ImplicitCastExpr 0x139830ab8 <col:12> 'unsigned char *' contains-errors <LValueToRValue>
    |   | | `-DeclRefExpr 0x139830a98 <col:12> 'unsigned char *' contains-errors lvalue Var 0x13a0fadf8 'result' 'unsigned char *'
    |   | `-ImplicitCastExpr 0x139830ad0 <col:24> 'unsigned char *' <IntegralToPointer>
    |   |   `-IntegerLiteral 0x139830a58 <col:24> 'int' 2
    |   |-BinaryOperator 0x139830b60 <line:20:5, col:11> 'int' '='
    |   | |-DeclRefExpr 0x139830b08 <col:5> 'int' lvalue Var 0x13a0fb068 'rc' 'int'
    |   | `-UnaryOperator 0x139830b48 <col:10, col:11> 'int' prefix '-'
    |   |   `-IntegerLiteral 0x139830b28 <col:11> 'int' 1
    |   `-CompoundStmt 0x13a115670 <line:22:5, line:35:5>
    |     |-DeclStmt 0x139830df0 <line:23:7, col:75>
    |     | `-VarDecl 0x139830b98 <col:7, col:20> col:20 used sw 'unsigned int'
    |     `-IfStmt 0x13a115640 <line:25:7, line:34:15> has_else
    |       |-BinaryOperator 0x139830e78 <line:25:11, col:17> 'int' '=='
    |       | |-ImplicitCastExpr 0x139830e48 <col:11> 'unsigned int' <LValueToRValue>
    |       | | `-DeclRefExpr 0x139830e08 <col:11> 'unsigned int' lvalue Var 0x139830b98 'sw' 'unsigned int'
    |       | `-ImplicitCastExpr 0x139830e60 <col:17> 'unsigned int' <IntegralCast>
    |       |   `-IntegerLiteral 0x139830e28 <col:17> 'int' 27272
    |       |-BinaryOperator 0x139830ef0 <line:26:9, col:15> 'int' '='
    |       | |-DeclRefExpr 0x139830e98 <col:9> 'int' lvalue Var 0x13a0fb068 'rc' 'int'
    |       | `-UnaryOperator 0x139830ed8 <col:14, col:15> 'int' prefix '-'
    |       |   `-IntegerLiteral 0x139830eb8 <col:15> 'int' 2
    |       `-IfStmt 0x13a115610 <line:27:12, line:34:15> has_else
    |         |-BinaryOperator 0x139830f80 <line:27:16, col:22> 'int' '=='
    |         | |-ImplicitCastExpr 0x139830f50 <col:16> 'unsigned int' <LValueToRValue>
    |         | | `-DeclRefExpr 0x139830f10 <col:16> 'unsigned int' lvalue Var 0x139830b98 'sw' 'unsigned int'
    |         | `-ImplicitCastExpr 0x139830f68 <col:22> 'unsigned int' <IntegralCast>
    |         |   `-IntegerLiteral 0x139830f30 <col:22> 'int' 27011
    |         |-BinaryOperator 0x13a115200 <line:28:9, col:15> 'int' '='
    |         | |-DeclRefExpr 0x139830fa0 <col:9> 'int' lvalue Var 0x13a0fb068 'rc' 'int'
    |         | `-UnaryOperator 0x139830fe0 <col:14, col:15> 'int' prefix '-'
    |         |   `-IntegerLiteral 0x139830fc0 <col:15> 'int' 3
    |         `-IfStmt 0x13a1155e0 <line:29:12, line:34:15> has_else
    |           |-BinaryOperator 0x13a115290 <line:29:16, col:22> 'int' '=='
    |           | |-ImplicitCastExpr 0x13a115260 <col:16> 'unsigned int' <LValueToRValue>
    |           | | `-DeclRefExpr 0x13a115220 <col:16> 'unsigned int' lvalue Var 0x139830b98 'sw' 'unsigned int'
    |           | `-ImplicitCastExpr 0x13a115278 <col:22> 'unsigned int' <IntegralCast>
    |           |   `-IntegerLiteral 0x13a115240 <col:22> 'int' 27013
    |           |-BinaryOperator 0x13a115308 <line:30:9, col:15> 'int' '='
    |           | |-DeclRefExpr 0x13a1152b0 <col:9> 'int' lvalue Var 0x13a0fb068 'rc' 'int'
    |           | `-UnaryOperator 0x13a1152f0 <col:14, col:15> 'int' prefix '-'
    |           |   `-IntegerLiteral 0x13a1152d0 <col:15> 'int' 4
    |           `-IfStmt 0x13a1155b0 <line:31:12, line:34:15> has_else
    |             |-BinaryOperator 0x13a115410 <line:31:16, col:33> 'int' '=='
    |             | |-ParenExpr 0x13a1153b8 <col:16, col:28> 'unsigned int'
    |             | | `-BinaryOperator 0x13a115398 <col:17, col:22> 'unsigned int' '&'
    |             | |   |-ImplicitCastExpr 0x13a115368 <col:17> 'unsigned int' <LValueToRValue>
    |             | |   | `-DeclRefExpr 0x13a115328 <col:17> 'unsigned int' lvalue Var 0x139830b98 'sw' 'unsigned int'
    |             | |   `-ImplicitCastExpr 0x13a115380 <col:22> 'unsigned int' <IntegralCast>
    |             | |     `-IntegerLiteral 0x13a115348 <col:22> 'int' 65520
    |             | `-ImplicitCastExpr 0x13a1153f8 <col:33> 'unsigned int' <IntegralCast>
    |             |   `-IntegerLiteral 0x13a1153d8 <col:33> 'int' 25536
    |             |-BinaryOperator 0x13a115518 <line:32:9, col:26> 'int' '='
    |             | |-DeclRefExpr 0x13a115430 <col:9> 'int' lvalue Var 0x13a0fb068 'rc' 'int'
    |             | `-ImplicitCastExpr 0x13a115500 <col:14, col:26> 'int' <IntegralCast>
    |             |   `-ParenExpr 0x13a1154e0 <col:14, col:26> 'unsigned int'
    |             |     `-BinaryOperator 0x13a1154c0 <col:15, col:20> 'unsigned int' '&'
    |             |       |-ImplicitCastExpr 0x13a115490 <col:15> 'unsigned int' <LValueToRValue>
    |             |       | `-DeclRefExpr 0x13a115450 <col:15> 'unsigned int' lvalue Var 0x139830b98 'sw' 'unsigned int'
    |             |       `-ImplicitCastExpr 0x13a1154a8 <col:20> 'unsigned int' <IntegralCast>
    |             |         `-IntegerLiteral 0x13a115470 <col:20> 'int' 15
    |             `-BinaryOperator 0x13a115590 <line:34:9, col:15> 'int' '='
    |               |-DeclRefExpr 0x13a115538 <col:9> 'int' lvalue Var 0x13a0fb068 'rc' 'int'
    |               `-UnaryOperator 0x13a115578 <col:14, col:15> 'int' prefix '-'
    |                 `-IntegerLiteral 0x13a115558 <col:15> 'int' 1
    |-CallExpr 0x13a115858 <line:36:3, col:16> 'int' contains-errors
    | |-ImplicitCastExpr 0x13a115840 <col:3> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x13a1157d0 <col:3> 'int ()' Function 0x13a115718 'xfree' 'int ()'
    | `-ImplicitCastExpr 0x13a115880 <col:10> 'unsigned char *' contains-errors <LValueToRValue>
    |   `-DeclRefExpr 0x13a1157f0 <col:10> 'unsigned char *' contains-errors lvalue Var 0x13a0fadf8 'result' 'unsigned char *'
    `-ReturnStmt 0x13a1158d0 <line:38:3, col:10>
      `-ImplicitCastExpr 0x13a1158b8 <col:10> 'int' <LValueToRValue>
        `-DeclRefExpr 0x13a115898 <col:10> 'int' lvalue Var 0x13a0fb068 'rc' 'int'
