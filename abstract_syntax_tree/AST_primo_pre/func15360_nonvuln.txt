`-FunctionDecl 0x14e140a88  line:1:12 irda_data_indication 'int (void *, void *, struct sk_buff *)' static
  |-ParmVarDecl 0x14e1280d8 <col:33, col:39> col:39 used instance 'void *'
  |-ParmVarDecl 0x14e128158 <col:49, col:55> col:55 sap 'void *'
  |-ParmVarDecl 0x14e128748 <col:60, col:76> col:76 used skb 'struct sk_buff *'
  `-CompoundStmt 0x14e141828 <line:2:1, line:20:1>
    |-DeclStmt 0x14e140d78 <line:3:2, col:24>
    | |-RecordDecl 0x14e140b90 <col:2, col:9> col:9 struct irda_sock
    | `-VarDecl 0x14e140cf8 <col:2, col:20> col:20 used self 'struct irda_sock *'
    |-DeclStmt 0x14e140f78 <line:4:2, col:17>
    | |-RecordDecl 0x14e140d90 <col:2, col:9> col:9 struct sock
    | `-VarDecl 0x14e140ef8 <col:2, col:15> col:15 used sk 'struct sock *'
    |-DeclStmt 0x14e141010 <line:5:2, col:9>
    | `-VarDecl 0x14e140fa8 <col:2, col:6> col:6 used err 'int'
    |-BinaryOperator 0x14e141098 <line:7:2, col:9> 'struct irda_sock *' '='
    | |-DeclRefExpr 0x14e141028 <col:2> 'struct irda_sock *' lvalue Var 0x14e140cf8 'self' 'struct irda_sock *'
    | `-ImplicitCastExpr 0x14e141080 <col:9> 'struct irda_sock *' <BitCast>
    |   `-ImplicitCastExpr 0x14e141068 <col:9> 'void *' <LValueToRValue>
    |     `-DeclRefExpr 0x14e141048 <col:9> 'void *' lvalue ParmVar 0x14e1280d8 'instance' 'void *'
    |-BinaryOperator 0x14e141128 <line:8:2, col:7> 'struct sock *' '='
    | |-DeclRefExpr 0x14e1410b8 <col:2> 'struct sock *' lvalue Var 0x14e140ef8 'sk' 'struct sock *'
    | `-ImplicitCastExpr 0x14e141110 <col:7> 'struct sock *' <BitCast>
    |   `-ImplicitCastExpr 0x14e1410f8 <col:7> 'void *' <LValueToRValue>
    |     `-DeclRefExpr 0x14e1410d8 <col:7> 'void *' lvalue ParmVar 0x14e1280d8 'instance' 'void *'
    |-BinaryOperator 0x14e141398 <line:10:2, col:34> 'int' '='
    | |-DeclRefExpr 0x14e141148 <col:2> 'int' lvalue Var 0x14e140fa8 'err' 'int'
    | `-CallExpr 0x14e141338 <col:8, col:34> 'int'
    |   |-ImplicitCastExpr 0x14e141320 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x14e141290 <col:8> 'int ()' Function 0x14e1411d8 'sock_queue_rcv_skb' 'int ()'
    |   |-ImplicitCastExpr 0x14e141368 <col:27> 'struct sock *' <LValueToRValue>
    |   | `-DeclRefExpr 0x14e1412b0 <col:27> 'struct sock *' lvalue Var 0x14e140ef8 'sk' 'struct sock *'
    |   `-ImplicitCastExpr 0x14e141380 <col:31> 'struct sk_buff *' <LValueToRValue>
    |     `-DeclRefExpr 0x14e1412d0 <col:31> 'struct sk_buff *' lvalue ParmVar 0x14e128748 'skb' 'struct sk_buff *'
    |-IfStmt 0x14e1417d8 <line:11:2, line:17:2>
    | |-ImplicitCastExpr 0x14e1413d8 <line:11:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x14e1413b8 <col:6> 'int' lvalue Var 0x14e140fa8 'err' 'int'
    | `-CompoundStmt 0x14e1417b0 <col:11, line:17:2>
    |   |-CallExpr 0x14e141630 <line:12:3, col:27> 'int'
    |   | |-ImplicitCastExpr 0x14e141618 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x14e1414d0 <col:3> 'int ()' Function 0x14e141418 'pr_debug' 'int ()'
    |   | |-ImplicitCastExpr 0x14e141660 <col:12> 'char *' <ArrayToPointerDecay>
    |   | | `-StringLiteral 0x14e141530 <col:12> 'char[4]' lvalue "STR"
    |   | `-ImplicitCastExpr 0x14e141678 <col:19> 'const char *' <ArrayToPointerDecay>
    |   |   `-PredefinedExpr 0x14e141600 <col:19> 'const char[21]' lvalue __func__
    |   |     `-StringLiteral 0x14e1415d0 <col:19> 'const char[21]' lvalue "irda_data_indication"
    |   |-BinaryOperator 0x14e141748 <line:13:3, col:19> '<dependent type>' contains-errors '='
    |   | |-RecoveryExpr 0x14e1416c8 <col:3, col:9> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x14e141690 <col:3> 'struct irda_sock *' lvalue Var 0x14e140cf8 'self' 'struct irda_sock *'
    |   | `-RecoveryExpr 0x14e141728 <col:19> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x14e1417a0 <line:16:3, col:10>
    |     `-ImplicitCastExpr 0x14e141788 <col:10> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x14e141768 <col:10> 'int' lvalue Var 0x14e140fa8 'err' 'int'
    `-ReturnStmt 0x14e141818 <line:19:2, col:9>
      `-IntegerLiteral 0x14e1417f8 <col:9> 'int' 0
