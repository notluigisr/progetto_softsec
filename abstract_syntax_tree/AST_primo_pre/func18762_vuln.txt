`-FunctionDecl 0x13c80de88  line:1:14 invalid CalculateOpData 'int (int *, int *)'
  |-ParmVarDecl 0x13c80dd28 <col:30, col:45> col:45 invalid context 'int *'
  |-ParmVarDecl 0x13c80dda8 <col:54, col:66> col:66 invalid node 'int *'
  `-CompoundStmt 0x13c829a48 <col:72, line:51:1>
    |-DeclStmt 0x13c80e078 <line:2:3, line:3:70>
    | `-VarDecl 0x13c80df58 <line:2:3, col:9> col:9 used params 'int *' auto
    |-CallExpr 0x13c80e398 <line:5:3, col:48> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13c80e1f0 <col:3> 'int ()' Function 0x13c80e138 'TF_LITE_ENSURE_EQ' 'int ()'
    | |-RecoveryExpr 0x13c80e210 <col:21> '<dependent type>' contains-errors lvalue
    | |-CallExpr 0x13c80e350 <col:30, col:44> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x13c80e310 <col:30> 'int ()' Function 0x13c80e258 'NumInputs' 'int ()'
    | | `-RecoveryExpr 0x13c80e330 <col:40> '<dependent type>' contains-errors lvalue
    | `-IntegerLiteral 0x13c80e378 <col:47> 'int' 1
    |-CallExpr 0x13c827588 <line:6:3, col:49> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13c80e3d0 <col:3> 'int ()' Function 0x13c80e138 'TF_LITE_ENSURE_EQ' 'int ()'
    | |-RecoveryExpr 0x13c827400 <col:21> '<dependent type>' contains-errors lvalue
    | |-CallExpr 0x13c827540 <col:30, col:45> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x13c827500 <col:30> 'int ()' Function 0x13c827448 'NumOutputs' 'int ()'
    | | `-RecoveryExpr 0x13c827520 <col:41> '<dependent type>' contains-errors lvalue
    | `-IntegerLiteral 0x13c827568 <col:48> 'int' 1
    |-DeclStmt 0x13c827640 <line:8:3, col:28>
    | `-VarDecl 0x13c8275d8 <col:3, col:23> col:23 invalid input 'const int *'
    |-CallExpr 0x13c8279d8 <line:9:3, col:79> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13c827738 <col:3> 'int ()' Function 0x13c827680 'TF_LITE_ENSURE_OK' 'int ()'
    | |-RecoveryExpr 0x13c827758 <col:21> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x13c827998 <col:30, col:78> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13c827858 <col:30> 'int ()' Function 0x13c8277a0 'GetInputSafe' 'int ()'
    |   |-RecoveryExpr 0x13c827878 <col:43> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x13c827898 <col:52> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x13c827978 <col:58> '<dependent type>' contains-errors lvalue
    |   `-UnaryOperator 0x13c8278f0 <col:72, col:73> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x13c8278d0 <col:73> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x13c827cf0 <line:11:3, line:12:73> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13c827a20 <line:11:3> 'int ()' Function 0x13c827680 'TF_LITE_ENSURE_OK' 'int ()'
    | |-RecoveryExpr 0x13c827a40 <col:21> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x13c827cb0 <line:12:21, col:72> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13c827b40 <col:21> 'int ()' Function 0x13c827a88 'GetOutputSafe' 'int ()'
    |   |-RecoveryExpr 0x13c827b60 <col:35> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x13c827b80 <col:44> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x13c827c58 <col:50> '<dependent type>' contains-errors lvalue
    |   `-UnaryOperator 0x13c827c98 <col:65, col:66> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x13c827c78 <col:66> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x13c827ec8 <line:14:3, col:53> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13c827d20 <col:3> 'int ()' Function 0x13c80e138 'TF_LITE_ENSURE_EQ' 'int ()'
    | |-RecoveryExpr 0x13c827d40 <col:21> '<dependent type>' contains-errors lvalue
    | |-CallExpr 0x13c827e80 <col:30, col:49> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x13c827e40 <col:30> 'int ()' Function 0x13c827d88 'NumDimensions' 'int ()'
    | | `-RecoveryExpr 0x13c827e60 <col:44> '<dependent type>' contains-errors lvalue
    | `-IntegerLiteral 0x13c827ea8 <col:52> 'int' 4
    |-DeclStmt 0x13c827f80 <line:16:3, col:32>
    | `-VarDecl 0x13c827f18 <col:3, col:8> col:8 used data_type 'int' auto
    |-DeclStmt 0x13c828360 <line:21:3, col:44>
    | `-VarDecl 0x13c828298 <col:3, col:34> col:13 used block_size 'const int' cinit
    |   `-RecoveryExpr 0x13c828338 <col:26, col:34> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x13c828300 <col:26> 'int *' lvalue Var 0x13c80df58 'params' 'int *'
    |-DeclStmt 0x13c828eb0 <line:22:3, col:58>
    | `-VarDecl 0x13c828390 <col:3, col:13> col:13 used input_height 'const int'
    |-DeclStmt 0x13c828ff8 <line:23:3, col:56>
    | `-VarDecl 0x13c828ee0 <col:3, col:13> col:13 used input_width 'const int'
    |-DeclStmt 0x13c829140 <line:24:3, col:59>
    | `-VarDecl 0x13c829028 <col:3, col:13> col:13 used input_channels 'const int'
    |-DeclStmt 0x13c829268 <line:25:3, col:48>
    | `-VarDecl 0x13c829170 <col:3, col:38> col:7 used output_height 'int' cinit
    |   `-BinaryOperator 0x13c829248 <col:23, col:38> 'int' contains-errors '*'
    |     |-ImplicitCastExpr 0x13c829218 <col:23> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x13c8291d8 <col:23> 'const int' lvalue Var 0x13c828390 'input_height' 'const int'
    |     `-ImplicitCastExpr 0x13c829230 <col:38> 'int' contains-errors <LValueToRValue>
    |       `-DeclRefExpr 0x13c8291f8 <col:38> 'const int' contains-errors lvalue Var 0x13c828298 'block_size' 'const int'
    |-DeclStmt 0x13c829390 <line:26:3, col:46>
    | `-VarDecl 0x13c829298 <col:3, col:36> col:7 used output_width 'int' cinit
    |   `-BinaryOperator 0x13c829370 <col:22, col:36> 'int' contains-errors '*'
    |     |-ImplicitCastExpr 0x13c829340 <col:22> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x13c829300 <col:22> 'const int' lvalue Var 0x13c828ee0 'input_width' 'const int'
    |     `-ImplicitCastExpr 0x13c829358 <col:36> 'int' contains-errors <LValueToRValue>
    |       `-DeclRefExpr 0x13c829320 <col:36> 'const int' contains-errors lvalue Var 0x13c828298 'block_size' 'const int'
    |-DeclStmt 0x13c829510 <line:27:3, col:65>
    | `-VarDecl 0x13c8293c0 <col:3, col:55> col:7 used output_channels 'int' cinit
    |   `-BinaryOperator 0x13c8294f0 <col:25, col:55> 'int' contains-errors '/'
    |     |-BinaryOperator 0x13c829498 <col:25, col:42> 'int' contains-errors '/'
    |     | |-ImplicitCastExpr 0x13c829468 <col:25> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x13c829428 <col:25> 'const int' lvalue Var 0x13c829028 'input_channels' 'const int'
    |     | `-ImplicitCastExpr 0x13c829480 <col:42> 'int' contains-errors <LValueToRValue>
    |     |   `-DeclRefExpr 0x13c829448 <col:42> 'const int' contains-errors lvalue Var 0x13c828298 'block_size' 'const int'
    |     `-ImplicitCastExpr 0x13c8294d8 <col:55> 'int' contains-errors <LValueToRValue>
    |       `-DeclRefExpr 0x13c8294b8 <col:55> 'const int' contains-errors lvalue Var 0x13c828298 'block_size' 'const int'
    |-CallExpr 0x13c829618 <line:29:3, col:70> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13c829528 <col:3> 'int ()' Function 0x13c80e138 'TF_LITE_ENSURE_EQ' 'int ()'
    | |-RecoveryExpr 0x13c829548 <col:21> '<dependent type>' contains-errors lvalue
    | |-DeclRefExpr 0x13c829568 <col:30> 'const int' lvalue Var 0x13c828390 'input_height' 'const int'
    | `-BinaryOperator 0x13c8295f8 <col:44, col:60> 'int' contains-errors '/'
    |   |-ImplicitCastExpr 0x13c8295c8 <col:44> 'int' contains-errors <LValueToRValue>
    |   | `-DeclRefExpr 0x13c829588 <col:44> 'int' contains-errors lvalue Var 0x13c829170 'output_height' 'int'
    |   `-ImplicitCastExpr 0x13c8295e0 <col:60> 'int' contains-errors <LValueToRValue>
    |     `-DeclRefExpr 0x13c8295a8 <col:60> 'const int' contains-errors lvalue Var 0x13c828298 'block_size' 'const int'
    |-CallExpr 0x13c829740 <line:30:3, col:68> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13c829650 <col:3> 'int ()' Function 0x13c80e138 'TF_LITE_ENSURE_EQ' 'int ()'
    | |-RecoveryExpr 0x13c829670 <col:21> '<dependent type>' contains-errors lvalue
    | |-DeclRefExpr 0x13c829690 <col:30> 'const int' lvalue Var 0x13c828ee0 'input_width' 'const int'
    | `-BinaryOperator 0x13c829720 <col:43, col:58> 'int' contains-errors '/'
    |   |-ImplicitCastExpr 0x13c8296f0 <col:43> 'int' contains-errors <LValueToRValue>
    |   | `-DeclRefExpr 0x13c8296b0 <col:43> 'int' contains-errors lvalue Var 0x13c829298 'output_width' 'int'
    |   `-ImplicitCastExpr 0x13c829708 <col:58> 'int' contains-errors <LValueToRValue>
    |     `-DeclRefExpr 0x13c8296d0 <col:58> 'const int' contains-errors lvalue Var 0x13c828298 'block_size' 'const int'
    `-CallExpr 0x13c8298c0 <line:31:3, line:32:62> '<dependent type>' contains-errors
      |-DeclRefExpr 0x13c829778 <line:31:3> 'int ()' Function 0x13c80e138 'TF_LITE_ENSURE_EQ' 'int ()'
      |-RecoveryExpr 0x13c829798 <col:21> '<dependent type>' contains-errors lvalue
      |-DeclRefExpr 0x13c8297b8 <col:30> 'const int' lvalue Var 0x13c829028 'input_channels' 'const int'
      `-BinaryOperator 0x13c8298a0 <line:32:21, col:52> 'int' contains-errors '*'
        |-BinaryOperator 0x13c829848 <col:21, col:39> 'int' contains-errors '*'
        | |-ImplicitCastExpr 0x13c829818 <col:21> 'int' contains-errors <LValueToRValue>
        | | `-DeclRefExpr 0x13c8297d8 <col:21> 'int' contains-errors lvalue Var 0x13c8293c0 'output_channels' 'int'
        | `-ImplicitCastExpr 0x13c829830 <col:39> 'int' contains-errors <LValueToRValue>
        |   `-DeclRefExpr 0x13c8297f8 <col:39> 'const int' contains-errors lvalue Var 0x13c828298 'block_size' 'const int'
        `-ImplicitCastExpr 0x13c829888 <col:52> 'int' contains-errors <LValueToRValue>
          `-DeclRefExpr 0x13c829868 <col:52> 'const int' contains-errors lvalue Var 0x13c828298 'block_size' 'const int'
