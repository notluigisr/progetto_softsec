`-FunctionDecl 0x137945c38  line:1:12 invalid ext4_block_to_path 'int (struct inode *, int, int *, int *)' static
  |-ParmVarDecl 0x137928648 <col:31, col:45> col:45 used inode 'struct inode *'
  |-ParmVarDecl 0x1379286e0 <line:2:4, col:16> col:16 invalid i_block 'int'
  |-ParmVarDecl 0x137945a60 <line:3:4, col:25> col:16 referenced invalid offsets 'int *'
  |-ParmVarDecl 0x137945ae0 <col:28, col:33> col:33 used boundary 'int *'
  `-CompoundStmt 0x137948ff8 <line:4:1, line:42:1>
    |-DeclStmt 0x137945f88 <line:5:2, col:45>
    | `-VarDecl 0x137945d18 <col:2, col:44> col:6 used ptrs 'int' cinit
    |   `-CallExpr 0x137945f60 <col:13, col:44> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x137945ee0 <col:13> 'int ()' Function 0x137945e28 'EXT4_ADDR_PER_BLOCK' 'int ()'
    |     `-RecoveryExpr 0x137945f38 <col:33, col:40> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x137945f00 <col:33> 'struct inode *' lvalue ParmVar 0x137928648 'inode' 'struct inode *'
    |-DeclStmt 0x1379461a8 <line:6:2, col:55>
    | `-VarDecl 0x137945fb8 <col:2, col:54> col:6 used ptrs_bits 'int' cinit
    |   `-CallExpr 0x137946180 <col:18, col:54> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x137946100 <col:18> 'int ()' Function 0x137946048 'EXT4_ADDR_PER_BLOCK_BITS' 'int ()'
    |     `-RecoveryExpr 0x137946158 <col:43, col:50> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x137946120 <col:43> 'struct inode *' lvalue ParmVar 0x137928648 'inode' 'struct inode *'
    |-DeclStmt 0x1379464f8 <line:7:2, line:9:41>
    | |-VarDecl 0x1379461d8 <line:7:2, col:29> col:13 used direct_blocks 'const long' cinit
    | | `-RecoveryExpr 0x137946258 <col:29> '<dependent type>' contains-errors lvalue
    | |-VarDecl 0x137946290 <col:2, line:8:21> col:3 used indirect_blocks 'const long' cinit
    | | `-ImplicitCastExpr 0x137946330 <col:21> 'long' contains-errors <IntegralCast>
    | |   `-ImplicitCastExpr 0x137946318 <col:21> 'int' contains-errors <LValueToRValue>
    | |     `-DeclRefExpr 0x1379462f8 <col:21> 'int' contains-errors lvalue Var 0x137945d18 'ptrs' 'int'
    | `-VarDecl 0x137946360 <line:7:2, line:9:40> col:3 used double_blocks 'const long' cinit
    |   `-ImplicitCastExpr 0x1379464c0 <col:19, col:40> 'long' contains-errors <IntegralCast>
    |     `-ParenExpr 0x1379464a0 <col:19, col:40> 'int' contains-errors
    |       `-BinaryOperator 0x137946480 <col:20, col:39> 'int' contains-errors '<<'
    |         |-IntegerLiteral 0x1379463c8 <col:20> 'int' 1
    |         `-ParenExpr 0x137946460 <col:25, col:39> 'int' contains-errors
    |           `-BinaryOperator 0x137946440 <col:26, col:38> 'int' contains-errors '*'
    |             |-ImplicitCastExpr 0x137946428 <col:26> 'int' contains-errors <LValueToRValue>
    |             | `-DeclRefExpr 0x1379463e8 <col:26> 'int' contains-errors lvalue Var 0x137945fb8 'ptrs_bits' 'int'
    |             `-IntegerLiteral 0x137946408 <col:38> 'int' 2
    |-DeclStmt 0x1379465b0 <line:10:2, col:11>
    | `-VarDecl 0x137946528 <col:2, col:10> col:6 used n 'int' cinit
    |   `-IntegerLiteral 0x137946590 <col:10> 'int' 0
    |-DeclStmt 0x137946668 <line:11:2, col:15>
    | `-VarDecl 0x1379465e0 <col:2, col:14> col:6 used final 'int' cinit
    |   `-IntegerLiteral 0x137946648 <col:14> 'int' 0
    |-IfStmt 0x137948d28 <line:13:2, line:38:2> has_else
    | |-BinaryOperator 0x1379466c0 <line:13:6, col:16> 'int' contains-errors '<'
    | | |-RecoveryExpr 0x137946680 <col:6> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x1379466a0 <col:16> 'int' 0
    | |-CompoundStmt 0x1379468d0 <col:19, line:15:2>
    | | `-CallExpr 0x1379468a0 <line:14:3, col:34> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x1379467c0 <col:3> 'int ()' Function 0x137946708 'ext4_warning' 'int ()'
    | |   |-RecoveryExpr 0x137946818 <col:16, col:23> '<dependent type>' contains-errors lvalue
    | |   | `-DeclRefExpr 0x1379467e0 <col:16> 'struct inode *' lvalue ParmVar 0x137928648 'inode' 'struct inode *'
    | |   `-StringLiteral 0x137946880 <col:29> 'char[4]' lvalue "STR"
    | `-IfStmt 0x137948cf8 <line:15:9, line:38:2> has_else
    |   |-BinaryOperator 0x137946928 <line:15:13, col:23> 'int' contains-errors '<'
    |   | |-RecoveryExpr 0x1379468e8 <col:13> '<dependent type>' contains-errors lvalue
    |   | `-DeclRefExpr 0x137946908 <col:23> 'const long' contains-errors lvalue Var 0x1379461d8 'direct_blocks' 'const long'
    |   |-CompoundStmt 0x1379476d0 <col:38, line:18:2>
    |   | |-BinaryOperator 0x137947620 <line:16:3, col:18> '<dependent type>' contains-errors '='
    |   | | |-ArraySubscriptExpr 0x1379469e0 <col:3, col:14> '<dependent type>' contains-errors lvalue
    |   | | | |-ImplicitCastExpr 0x1379469c8 <col:3> '<dependent type>' contains-errors <LValueToRValue>
    |   | | | | `-RecoveryExpr 0x137946968 <col:3> '<dependent type>' contains-errors lvalue
    |   | | | |   `-DeclRefExpr 0x137946948 <col:3> 'int *' lvalue ParmVar 0x137945a60 'offsets' 'int *'
    |   | | | `-UnaryOperator 0x1379469b0 <col:11, col:12> 'int' postfix '++'
    |   | | |   `-DeclRefExpr 0x137946990 <col:11> 'int' lvalue Var 0x137946528 'n' 'int'
    |   | | `-RecoveryExpr 0x137947600 <col:18> '<dependent type>' contains-errors lvalue
    |   | `-BinaryOperator 0x1379476b0 <line:17:3, col:11> 'int' contains-errors '='
    |   |   |-DeclRefExpr 0x137947640 <col:3> 'int' lvalue Var 0x1379465e0 'final' 'int'
    |   |   `-ImplicitCastExpr 0x137947698 <col:11> 'int' contains-errors <IntegralCast>
    |   |     `-ImplicitCastExpr 0x137947680 <col:11> 'long' contains-errors <LValueToRValue>
    |   |       `-DeclRefExpr 0x137947660 <col:11> 'const long' contains-errors lvalue Var 0x1379461d8 'direct_blocks' 'const long'
    |   `-IfStmt 0x137948cc8 <line:18:9, line:38:2> has_else
    |     |-BinaryOperator 0x1379477a0 <line:18:13, col:42> 'int' contains-errors '<'
    |     | |-ParenExpr 0x137947760 <col:13, col:38> '<dependent type>' contains-errors
    |     | | `-CompoundAssignOperator 0x137947730 <col:14, col:25> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |     | |   |-RecoveryExpr 0x1379476f0 <col:14> '<dependent type>' contains-errors lvalue
    |     | |   `-DeclRefExpr 0x137947710 <col:25> 'const long' contains-errors lvalue Var 0x1379461d8 'direct_blocks' 'const long'
    |     | `-DeclRefExpr 0x137947780 <col:42> 'const long' contains-errors lvalue Var 0x137946290 'indirect_blocks' 'const long'
    |     |-CompoundStmt 0x137947ad0 <col:59, line:22:2>
    |     | |-BinaryOperator 0x137947940 <line:19:3, col:18> '<dependent type>' contains-errors '='
    |     | | |-ArraySubscriptExpr 0x137947900 <col:3, col:14> '<dependent type>' contains-errors lvalue
    |     | | | |-ImplicitCastExpr 0x1379478e8 <col:3> '<dependent type>' contains-errors <LValueToRValue>
    |     | | | | `-RecoveryExpr 0x1379477e0 <col:3> '<dependent type>' contains-errors lvalue
    |     | | | |   `-DeclRefExpr 0x1379477c0 <col:3> 'int *' lvalue ParmVar 0x137945a60 'offsets' 'int *'
    |     | | | `-UnaryOperator 0x137947828 <col:11, col:12> 'int' postfix '++'
    |     | | |   `-DeclRefExpr 0x137947808 <col:11> 'int' lvalue Var 0x137946528 'n' 'int'
    |     | | `-RecoveryExpr 0x137947920 <col:18> '<dependent type>' contains-errors lvalue
    |     | |-BinaryOperator 0x137947a38 <line:20:3, col:18> '<dependent type>' contains-errors '='
    |     | | |-ArraySubscriptExpr 0x1379479f8 <col:3, col:14> '<dependent type>' contains-errors lvalue
    |     | | | |-ImplicitCastExpr 0x1379479e0 <col:3> '<dependent type>' contains-errors <LValueToRValue>
    |     | | | | `-RecoveryExpr 0x137947980 <col:3> '<dependent type>' contains-errors lvalue
    |     | | | |   `-DeclRefExpr 0x137947960 <col:3> 'int *' lvalue ParmVar 0x137945a60 'offsets' 'int *'
    |     | | | `-UnaryOperator 0x1379479c8 <col:11, col:12> 'int' postfix '++'
    |     | | |   `-DeclRefExpr 0x1379479a8 <col:11> 'int' lvalue Var 0x137946528 'n' 'int'
    |     | | `-RecoveryExpr 0x137947a18 <col:18> '<dependent type>' contains-errors lvalue
    |     | `-BinaryOperator 0x137947ab0 <line:21:3, col:11> 'int' contains-errors '='
    |     |   |-DeclRefExpr 0x137947a58 <col:3> 'int' lvalue Var 0x1379465e0 'final' 'int'
    |     |   `-ImplicitCastExpr 0x137947a98 <col:11> 'int' contains-errors <LValueToRValue>
    |     |     `-DeclRefExpr 0x137947a78 <col:11> 'int' contains-errors lvalue Var 0x137945d18 'ptrs' 'int'
    |     `-IfStmt 0x137948c98 <line:22:9, line:38:2> has_else
    |       |-BinaryOperator 0x137947ba8 <line:22:13, col:44> 'int' contains-errors '<'
    |       | |-ParenExpr 0x137947b68 <col:13, col:40> '<dependent type>' contains-errors
    |       | | `-CompoundAssignOperator 0x137947b38 <col:14, col:25> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |       | |   |-RecoveryExpr 0x137947af8 <col:14> '<dependent type>' contains-errors lvalue
    |       | |   `-DeclRefExpr 0x137947b18 <col:25> 'const long' contains-errors lvalue Var 0x137946290 'indirect_blocks' 'const long'
    |       | `-DeclRefExpr 0x137947b88 <col:44> 'const long' contains-errors lvalue Var 0x137946360 'double_blocks' 'const long'
    |       |-CompoundStmt 0x1379480c8 <col:59, line:27:2>
    |       | |-BinaryOperator 0x137947d48 <line:23:3, col:18> '<dependent type>' contains-errors '='
    |       | | |-ArraySubscriptExpr 0x137947d08 <col:3, col:14> '<dependent type>' contains-errors lvalue
    |       | | | |-ImplicitCastExpr 0x137947cf0 <col:3> '<dependent type>' contains-errors <LValueToRValue>
    |       | | | | `-RecoveryExpr 0x137947be8 <col:3> '<dependent type>' contains-errors lvalue
    |       | | | |   `-DeclRefExpr 0x137947bc8 <col:3> 'int *' lvalue ParmVar 0x137945a60 'offsets' 'int *'
    |       | | | `-UnaryOperator 0x137947c30 <col:11, col:12> 'int' postfix '++'
    |       | | |   `-DeclRefExpr 0x137947c10 <col:11> 'int' lvalue Var 0x137946528 'n' 'int'
    |       | | `-RecoveryExpr 0x137947d28 <col:18> '<dependent type>' contains-errors lvalue
    |       | |-BinaryOperator 0x137947e80 <line:24:3, col:29> '<dependent type>' contains-errors '='
    |       | | |-ArraySubscriptExpr 0x137947e00 <col:3, col:14> '<dependent type>' contains-errors lvalue
    |       | | | |-ImplicitCastExpr 0x137947de8 <col:3> '<dependent type>' contains-errors <LValueToRValue>
    |       | | | | `-RecoveryExpr 0x137947d88 <col:3> '<dependent type>' contains-errors lvalue
    |       | | | |   `-DeclRefExpr 0x137947d68 <col:3> 'int *' lvalue ParmVar 0x137945a60 'offsets' 'int *'
    |       | | | `-UnaryOperator 0x137947dd0 <col:11, col:12> 'int' postfix '++'
    |       | | |   `-DeclRefExpr 0x137947db0 <col:11> 'int' lvalue Var 0x137946528 'n' 'int'
    |       | | `-BinaryOperator 0x137947e60 <col:18, col:29> '<dependent type>' contains-errors '>>'
    |       | |   |-RecoveryExpr 0x137947e20 <col:18> '<dependent type>' contains-errors lvalue
    |       | |   `-DeclRefExpr 0x137947e40 <col:29> 'int' contains-errors lvalue Var 0x137945fb8 'ptrs_bits' 'int'
    |       | |-BinaryOperator 0x137948030 <line:25:3, col:37> '<dependent type>' contains-errors '='
    |       | | |-ArraySubscriptExpr 0x137947f38 <col:3, col:14> '<dependent type>' contains-errors lvalue
    |       | | | |-ImplicitCastExpr 0x137947f20 <col:3> '<dependent type>' contains-errors <LValueToRValue>
    |       | | | | `-RecoveryExpr 0x137947ec0 <col:3> '<dependent type>' contains-errors lvalue
    |       | | | |   `-DeclRefExpr 0x137947ea0 <col:3> 'int *' lvalue ParmVar 0x137945a60 'offsets' 'int *'
    |       | | | `-UnaryOperator 0x137947f08 <col:11, col:12> 'int' postfix '++'
    |       | | |   `-DeclRefExpr 0x137947ee8 <col:11> 'int' lvalue Var 0x137946528 'n' 'int'
    |       | | `-BinaryOperator 0x137948010 <col:18, col:37> '<dependent type>' contains-errors '&'
    |       | |   |-RecoveryExpr 0x137947f58 <col:18> '<dependent type>' contains-errors lvalue
    |       | |   `-ParenExpr 0x137947ff0 <col:28, col:37> 'int' contains-errors
    |       | |     `-BinaryOperator 0x137947fd0 <col:29, col:36> 'int' contains-errors '-'
    |       | |       |-ImplicitCastExpr 0x137947fb8 <col:29> 'int' contains-errors <LValueToRValue>
    |       | |       | `-DeclRefExpr 0x137947f78 <col:29> 'int' contains-errors lvalue Var 0x137945d18 'ptrs' 'int'
    |       | |       `-IntegerLiteral 0x137947f98 <col:36> 'int' 1
    |       | `-BinaryOperator 0x1379480a8 <line:26:3, col:11> 'int' contains-errors '='
    |       |   |-DeclRefExpr 0x137948050 <col:3> 'int' lvalue Var 0x1379465e0 'final' 'int'
    |       |   `-ImplicitCastExpr 0x137948090 <col:11> 'int' contains-errors <LValueToRValue>
    |       |     `-DeclRefExpr 0x137948070 <col:11> 'int' contains-errors lvalue Var 0x137945d18 'ptrs' 'int'
    |       `-IfStmt 0x137948c68 <line:27:9, line:38:2> has_else
    |         |-BinaryOperator 0x137948280 <line:27:13, col:63> 'int' contains-errors '<'
    |         | |-ParenExpr 0x137948240 <col:13, col:59> '<dependent type>' contains-errors
    |         | | `-BinaryOperator 0x137948220 <col:14, col:58> '<dependent type>' contains-errors '>>'
    |         | |   |-ParenExpr 0x137948168 <col:14, col:39> '<dependent type>' contains-errors
    |         | |   | `-CompoundAssignOperator 0x137948138 <col:15, col:26> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |         | |   |   |-RecoveryExpr 0x1379480f8 <col:15> '<dependent type>' contains-errors lvalue
    |         | |   |   `-DeclRefExpr 0x137948118 <col:26> 'const long' contains-errors lvalue Var 0x137946360 'double_blocks' 'const long'
    |         | |   `-ParenExpr 0x137948200 <col:44, col:58> 'int' contains-errors
    |         | |     `-BinaryOperator 0x1379481e0 <col:45, col:57> 'int' contains-errors '*'
    |         | |       |-ImplicitCastExpr 0x1379481c8 <col:45> 'int' contains-errors <LValueToRValue>
    |         | |       | `-DeclRefExpr 0x137948188 <col:45> 'int' contains-errors lvalue Var 0x137945fb8 'ptrs_bits' 'int'
    |         | |       `-IntegerLiteral 0x1379481a8 <col:57> 'int' 2
    |         | `-DeclRefExpr 0x137948260 <col:63> 'int' contains-errors lvalue Var 0x137945d18 'ptrs' 'int'
    |         |-CompoundStmt 0x137948a38 <col:69, line:33:2>
    |         | |-BinaryOperator 0x137948420 <line:28:3, col:18> '<dependent type>' contains-errors '='
    |         | | |-ArraySubscriptExpr 0x1379483e0 <col:3, col:14> '<dependent type>' contains-errors lvalue
    |         | | | |-ImplicitCastExpr 0x1379483c8 <col:3> '<dependent type>' contains-errors <LValueToRValue>
    |         | | | | `-RecoveryExpr 0x1379482c0 <col:3> '<dependent type>' contains-errors lvalue
    |         | | | |   `-DeclRefExpr 0x1379482a0 <col:3> 'int *' lvalue ParmVar 0x137945a60 'offsets' 'int *'
    |         | | | `-UnaryOperator 0x137948308 <col:11, col:12> 'int' postfix '++'
    |         | | |   `-DeclRefExpr 0x1379482e8 <col:11> 'int' lvalue Var 0x137946528 'n' 'int'
    |         | | `-RecoveryExpr 0x137948400 <col:18> '<dependent type>' contains-errors lvalue
    |         | |-BinaryOperator 0x1379485d0 <line:29:3, col:43> '<dependent type>' contains-errors '='
    |         | | |-ArraySubscriptExpr 0x1379484d8 <col:3, col:14> '<dependent type>' contains-errors lvalue
    |         | | | |-ImplicitCastExpr 0x1379484c0 <col:3> '<dependent type>' contains-errors <LValueToRValue>
    |         | | | | `-RecoveryExpr 0x137948460 <col:3> '<dependent type>' contains-errors lvalue
    |         | | | |   `-DeclRefExpr 0x137948440 <col:3> 'int *' lvalue ParmVar 0x137945a60 'offsets' 'int *'
    |         | | | `-UnaryOperator 0x1379484a8 <col:11, col:12> 'int' postfix '++'
    |         | | |   `-DeclRefExpr 0x137948488 <col:11> 'int' lvalue Var 0x137946528 'n' 'int'
    |         | | `-BinaryOperator 0x1379485b0 <col:18, col:43> '<dependent type>' contains-errors '>>'
    |         | |   |-RecoveryExpr 0x1379484f8 <col:18> '<dependent type>' contains-errors lvalue
    |         | |   `-ParenExpr 0x137948590 <col:29, col:43> 'int' contains-errors
    |         | |     `-BinaryOperator 0x137948570 <col:30, col:42> 'int' contains-errors '*'
    |         | |       |-ImplicitCastExpr 0x137948558 <col:30> 'int' contains-errors <LValueToRValue>
    |         | |       | `-DeclRefExpr 0x137948518 <col:30> 'int' contains-errors lvalue Var 0x137945fb8 'ptrs_bits' 'int'
    |         | |       `-IntegerLiteral 0x137948538 <col:42> 'int' 2
    |         | |-BinaryOperator 0x1379487f0 <line:30:3, col:52> '<dependent type>' contains-errors '='
    |         | | |-ArraySubscriptExpr 0x137948698 <col:3, col:14> '<dependent type>' contains-errors lvalue
    |         | | | |-ImplicitCastExpr 0x137948680 <col:3> '<dependent type>' contains-errors <LValueToRValue>
    |         | | | | `-RecoveryExpr 0x137948620 <col:3> '<dependent type>' contains-errors lvalue
    |         | | | |   `-DeclRefExpr 0x137948600 <col:3> 'int *' lvalue ParmVar 0x137945a60 'offsets' 'int *'
    |         | | | `-UnaryOperator 0x137948668 <col:11, col:12> 'int' postfix '++'
    |         | | |   `-DeclRefExpr 0x137948648 <col:11> 'int' lvalue Var 0x137946528 'n' 'int'
    |         | | `-BinaryOperator 0x1379487d0 <col:18, col:52> '<dependent type>' contains-errors '&'
    |         | |   |-ParenExpr 0x137948718 <col:18, col:39> '<dependent type>' contains-errors
    |         | |   | `-BinaryOperator 0x1379486f8 <col:19, col:30> '<dependent type>' contains-errors '>>'
    |         | |   |   |-RecoveryExpr 0x1379486b8 <col:19> '<dependent type>' contains-errors lvalue
    |         | |   |   `-DeclRefExpr 0x1379486d8 <col:30> 'int' contains-errors lvalue Var 0x137945fb8 'ptrs_bits' 'int'
    |         | |   `-ParenExpr 0x1379487b0 <col:43, col:52> 'int' contains-errors
    |         | |     `-BinaryOperator 0x137948790 <col:44, col:51> 'int' contains-errors '-'
    |         | |       |-ImplicitCastExpr 0x137948778 <col:44> 'int' contains-errors <LValueToRValue>
    |         | |       | `-DeclRefExpr 0x137948738 <col:44> 'int' contains-errors lvalue Var 0x137945d18 'ptrs' 'int'
    |         | |       `-IntegerLiteral 0x137948758 <col:51> 'int' 1
    |         | |-BinaryOperator 0x1379489a0 <line:31:3, col:37> '<dependent type>' contains-errors '='
    |         | | |-ArraySubscriptExpr 0x1379488a8 <col:3, col:14> '<dependent type>' contains-errors lvalue
    |         | | | |-ImplicitCastExpr 0x137948890 <col:3> '<dependent type>' contains-errors <LValueToRValue>
    |         | | | | `-RecoveryExpr 0x137948830 <col:3> '<dependent type>' contains-errors lvalue
    |         | | | |   `-DeclRefExpr 0x137948810 <col:3> 'int *' lvalue ParmVar 0x137945a60 'offsets' 'int *'
    |         | | | `-UnaryOperator 0x137948878 <col:11, col:12> 'int' postfix '++'
    |         | | |   `-DeclRefExpr 0x137948858 <col:11> 'int' lvalue Var 0x137946528 'n' 'int'
    |         | | `-BinaryOperator 0x137948980 <col:18, col:37> '<dependent type>' contains-errors '&'
    |         | |   |-RecoveryExpr 0x1379488c8 <col:18> '<dependent type>' contains-errors lvalue
    |         | |   `-ParenExpr 0x137948960 <col:28, col:37> 'int' contains-errors
    |         | |     `-BinaryOperator 0x137948940 <col:29, col:36> 'int' contains-errors '-'
    |         | |       |-ImplicitCastExpr 0x137948928 <col:29> 'int' contains-errors <LValueToRValue>
    |         | |       | `-DeclRefExpr 0x1379488e8 <col:29> 'int' contains-errors lvalue Var 0x137945d18 'ptrs' 'int'
    |         | |       `-IntegerLiteral 0x137948908 <col:36> 'int' 1
    |         | `-BinaryOperator 0x137948a18 <line:32:3, col:11> 'int' contains-errors '='
    |         |   |-DeclRefExpr 0x1379489c0 <col:3> 'int' lvalue Var 0x1379465e0 'final' 'int'
    |         |   `-ImplicitCastExpr 0x137948a00 <col:11> 'int' contains-errors <LValueToRValue>
    |         |     `-DeclRefExpr 0x1379489e0 <col:11> 'int' contains-errors lvalue Var 0x137945d18 'ptrs' 'int'
    |         `-CompoundStmt 0x137948c50 <line:33:9, line:38:2>
    |           `-CallExpr 0x137948c10 <line:34:3, line:37:36> '<dependent type>' contains-errors
    |             |-DeclRefExpr 0x137948a70 <line:34:3> 'int ()' Function 0x137946708 'ext4_warning' 'int ()'
    |             |-RecoveryExpr 0x137948ac8 <col:16, col:23> '<dependent type>' contains-errors lvalue
    |             | `-DeclRefExpr 0x137948a90 <col:16> 'struct inode *' lvalue ParmVar 0x137928648 'inode' 'struct inode *'
    |             |-StringLiteral 0x137948af0 <col:29> 'char[4]' lvalue "STR"
    |             |-StringLiteral 0x137948b10 <line:35:5> 'char[4]' lvalue "STR"
    |             `-BinaryOperator 0x137948bf0 <line:36:5, line:37:23> '<dependent type>' contains-errors '+'
    |               |-BinaryOperator 0x137948bb0 <line:36:5, line:37:5> '<dependent type>' contains-errors '+'
    |               | |-BinaryOperator 0x137948b70 <line:36:5, col:15> '<dependent type>' contains-errors '+'
    |               | | |-RecoveryExpr 0x137948b30 <col:5> '<dependent type>' contains-errors lvalue
    |               | | `-DeclRefExpr 0x137948b50 <col:15> 'const long' contains-errors lvalue Var 0x1379461d8 'direct_blocks' 'const long'
    |               | `-DeclRefExpr 0x137948b90 <line:37:5> 'const long' contains-errors lvalue Var 0x137946290 'indirect_blocks' 'const long'
    |               `-DeclRefExpr 0x137948bd0 <col:23> 'const long' contains-errors lvalue Var 0x137946360 'double_blocks' 'const long'
    |-IfStmt 0x137948f90 <line:39:2, line:40:48>
    | |-ImplicitCastExpr 0x137948d78 <line:39:6> 'int *' <LValueToRValue>
    | | `-DeclRefExpr 0x137948d58 <col:6> 'int *' lvalue ParmVar 0x137945ae0 'boundary' 'int *'
    | `-BinaryOperator 0x137948f70 <line:40:3, col:48> 'int' contains-errors '='
    |   |-UnaryOperator 0x137948dc8 <col:3, col:4> 'int' lvalue prefix '*' cannot overflow
    |   | `-ImplicitCastExpr 0x137948db0 <col:4> 'int *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x137948d90 <col:4> 'int *' lvalue ParmVar 0x137945ae0 'boundary' 'int *'
    |   `-BinaryOperator 0x137948f50 <col:15, col:48> '<dependent type>' contains-errors '-'
    |     |-BinaryOperator 0x137948e38 <col:15, col:23> 'int' '-'
    |     | |-ImplicitCastExpr 0x137948e20 <col:15> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x137948de0 <col:15> 'int' lvalue Var 0x1379465e0 'final' 'int'
    |     | `-IntegerLiteral 0x137948e00 <col:23> 'int' 1
    |     `-ParenExpr 0x137948f30 <col:27, col:48> '<dependent type>' contains-errors
    |       `-BinaryOperator 0x137948f10 <col:28, col:47> '<dependent type>' contains-errors '&'
    |         |-RecoveryExpr 0x137948e58 <col:28> '<dependent type>' contains-errors lvalue
    |         `-ParenExpr 0x137948ef0 <col:38, col:47> 'int' contains-errors
    |           `-BinaryOperator 0x137948ed0 <col:39, col:46> 'int' contains-errors '-'
    |             |-ImplicitCastExpr 0x137948eb8 <col:39> 'int' contains-errors <LValueToRValue>
    |             | `-DeclRefExpr 0x137948e78 <col:39> 'int' contains-errors lvalue Var 0x137945d18 'ptrs' 'int'
    |             `-IntegerLiteral 0x137948e98 <col:46> 'int' 1
    `-ReturnStmt 0x137948fe8 <line:41:2, col:9>
      `-ImplicitCastExpr 0x137948fd0 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x137948fb0 <col:9> 'int' lvalue Var 0x137946528 'n' 'int'
