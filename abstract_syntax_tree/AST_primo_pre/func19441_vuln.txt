`-FunctionDecl 0x105827430  line:1:13 invalid tulip_copy_tx_buffers 'void (int *, struct tulip_descriptor *)' static
  |-ParmVarDecl 0x10580dd28 <col:35, col:47> col:47 referenced invalid s 'int *'
  |-ParmVarDecl 0x10580e318 <col:50, col:75> col:75 used desc 'struct tulip_descriptor *'
  `-CompoundStmt 0x1058281c8 <line:2:1, line:18:1>
    |-DeclStmt 0x105827618 <line:3:5, col:79>
    | `-VarDecl 0x105827500 <col:5, col:9> col:9 used len1 'int'
    |-DeclStmt 0x105827760 <line:4:5, col:79>
    | `-VarDecl 0x105827648 <col:5, col:9> col:9 used len2 'int'
    |-IfStmt 0x105827c60 <line:6:5, line:10:5>
    | |-ImplicitCastExpr 0x105827798 <line:6:9> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x105827778 <col:9> 'int' lvalue Var 0x105827500 'len1' 'int'
    | `-CompoundStmt 0x105827c40 <col:15, line:10:5>
    |   |-CallExpr 0x105827b20 <line:7:9, line:8:48> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x105827910 <line:7:9> 'int ()' Function 0x105827858 'pci_dma_read' 'int ()'
    |   | |-UnaryOperator 0x105827998 <col:22, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | | `-CXXDependentScopeMemberExpr 0x105827950 <col:23, col:26> '<dependent type>' contains-errors lvalue ->dev
    |   | |   `-RecoveryExpr 0x105827930 <col:23> '<dependent type>' contains-errors lvalue
    |   | |-RecoveryExpr 0x1058279e8 <col:31, col:37> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x1058279b0 <col:31> 'struct tulip_descriptor *' lvalue ParmVar 0x10580e318 'desc' 'struct tulip_descriptor *'
    |   | |-BinaryOperator 0x105827ae0 <line:8:13, col:30> '<dependent type>' contains-errors '+'
    |   | | |-CXXDependentScopeMemberExpr 0x105827a30 <col:13, col:16> '<dependent type>' contains-errors lvalue ->tx_frame
    |   | | | `-RecoveryExpr 0x105827a10 <col:13> '<dependent type>' contains-errors lvalue
    |   | | `-CXXDependentScopeMemberExpr 0x105827a98 <col:27, col:30> '<dependent type>' contains-errors lvalue ->tx_frame_len
    |   | |   `-RecoveryExpr 0x105827a78 <col:27> '<dependent type>' contains-errors lvalue
    |   | `-DeclRefExpr 0x105827b00 <col:44> 'int' lvalue Var 0x105827500 'len1' 'int'
    |   `-CompoundAssignOperator 0x105827c10 <line:9:9, col:28> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |     |-CXXDependentScopeMemberExpr 0x105827ba8 <col:9, col:12> '<dependent type>' contains-errors lvalue ->tx_frame_len
    |     | `-RecoveryExpr 0x105827b80 <col:9> '<dependent type>' contains-errors lvalue
    |     |   `-DeclRefExpr 0x105827b60 <col:9> 'int *' lvalue ParmVar 0x10580dd28 's' 'int *'
    |     `-DeclRefExpr 0x105827bf0 <col:28> 'int' lvalue Var 0x105827500 'len1' 'int'
    |-IfStmt 0x105828008 <line:12:5, line:16:5>
    | |-ImplicitCastExpr 0x105827ca0 <line:12:9> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x105827c80 <col:9> 'int' lvalue Var 0x105827648 'len2' 'int'
    | `-CompoundStmt 0x105827fe8 <col:15, line:16:5>
    |   |-CallExpr 0x105827ec8 <line:13:9, line:14:48> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x105827cb8 <line:13:9> 'int ()' Function 0x105827858 'pci_dma_read' 'int ()'
    |   | |-UnaryOperator 0x105827d40 <col:22, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | | `-CXXDependentScopeMemberExpr 0x105827cf8 <col:23, col:26> '<dependent type>' contains-errors lvalue ->dev
    |   | |   `-RecoveryExpr 0x105827cd8 <col:23> '<dependent type>' contains-errors lvalue
    |   | |-RecoveryExpr 0x105827d90 <col:31, col:37> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x105827d58 <col:31> 'struct tulip_descriptor *' lvalue ParmVar 0x10580e318 'desc' 'struct tulip_descriptor *'
    |   | |-BinaryOperator 0x105827e88 <line:14:13, col:30> '<dependent type>' contains-errors '+'
    |   | | |-CXXDependentScopeMemberExpr 0x105827dd8 <col:13, col:16> '<dependent type>' contains-errors lvalue ->tx_frame
    |   | | | `-RecoveryExpr 0x105827db8 <col:13> '<dependent type>' contains-errors lvalue
    |   | | `-CXXDependentScopeMemberExpr 0x105827e40 <col:27, col:30> '<dependent type>' contains-errors lvalue ->tx_frame_len
    |   | |   `-RecoveryExpr 0x105827e20 <col:27> '<dependent type>' contains-errors lvalue
    |   | `-DeclRefExpr 0x105827ea8 <col:44> 'int' lvalue Var 0x105827648 'len2' 'int'
    |   `-CompoundAssignOperator 0x105827fb8 <line:15:9, col:28> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |     |-CXXDependentScopeMemberExpr 0x105827f50 <col:9, col:12> '<dependent type>' contains-errors lvalue ->tx_frame_len
    |     | `-RecoveryExpr 0x105827f28 <col:9> '<dependent type>' contains-errors lvalue
    |     |   `-DeclRefExpr 0x105827f08 <col:9> 'int *' lvalue ParmVar 0x10580dd28 's' 'int *'
    |     `-DeclRefExpr 0x105827f98 <col:28> 'int' lvalue Var 0x105827648 'len2' 'int'
    `-BinaryOperator 0x1058281a8 <line:17:5, col:40> '<dependent type>' contains-errors '='
      |-RecoveryExpr 0x105828060 <col:5, col:11> '<dependent type>' contains-errors lvalue
      | `-DeclRefExpr 0x105828028 <col:5> 'struct tulip_descriptor *' lvalue ParmVar 0x10580e318 'desc' 'struct tulip_descriptor *'
      `-ConditionalOperator 0x105828178 <col:20, col:40> 'int'
        |-ParenExpr 0x105828118 <col:20, col:32> 'int'
        | `-BinaryOperator 0x1058280f8 <col:21, col:28> 'int' '+'
        |   |-ImplicitCastExpr 0x1058280c8 <col:21> 'int' <LValueToRValue>
        |   | `-DeclRefExpr 0x105828088 <col:21> 'int' lvalue Var 0x105827500 'len1' 'int'
        |   `-ImplicitCastExpr 0x1058280e0 <col:28> 'int' <LValueToRValue>
        |     `-DeclRefExpr 0x1058280a8 <col:28> 'int' lvalue Var 0x105827648 'len2' 'int'
        |-IntegerLiteral 0x105828138 <col:36> 'int' 0
        `-IntegerLiteral 0x105828158 <col:40> 'int' 2147483647
