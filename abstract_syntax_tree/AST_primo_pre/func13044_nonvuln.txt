`-FunctionDecl 0x127128da8  line:1:1 invalid set_quantifier 'int (int *, int *, int, int *)'
  |-ParmVarDecl 0x127128b28 <col:16, col:22> col:22 invalid qnode 'int *'
  |-ParmVarDecl 0x127128ba8 <col:29, col:35> col:35 invalid target 'int *'
  |-ParmVarDecl 0x127128c28 <col:43, col:47> col:47 used group 'int'
  |-ParmVarDecl 0x127128ca8 <col:54, col:63> col:63 invalid env 'int *'
  `-CompoundStmt 0x1271438a0 <line:2:1, line:88:1>
    |-IfStmt 0x127142340 <line:6:3, line:7:12>
    | |-BinaryOperator 0x1271422f0 <line:6:7, col:38> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x127142248 <col:7, col:20> 'int' contains-errors '=='
    | | | |-CXXDependentScopeMemberExpr 0x127142200 <col:7, col:11> '<dependent type>' contains-errors lvalue ->lower
    | | | | `-RecoveryExpr 0x1271291a8 <col:7> '<dependent type>' contains-errors lvalue
    | | | `-IntegerLiteral 0x1271290a8 <col:20> 'int' 1
    | | `-BinaryOperator 0x1271422d0 <col:25, col:38> 'int' contains-errors '=='
    | |   |-CXXDependentScopeMemberExpr 0x127142288 <col:25, col:29> '<dependent type>' contains-errors lvalue ->upper
    | |   | `-RecoveryExpr 0x127142268 <col:25> '<dependent type>' contains-errors lvalue
    | |   `-IntegerLiteral 0x127129148 <col:38> 'int' 1
    | `-ReturnStmt 0x127142330 <line:7:5, col:12>
    |   `-IntegerLiteral 0x127142310 <col:12> 'int' 1
    |-SwitchStmt 0x1271424a8 <line:9:3, line:83:3>
    | |-CallExpr 0x127142480 <line:9:11, col:27> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x127142440 <col:11> 'int ()' Function 0x127142388 'NODE_TYPE' 'int ()'
    | | `-RecoveryExpr 0x127142460 <col:21> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x127143770 <col:30, line:83:3>
    |   |-IfStmt 0x127142d38 <line:11:5, line:20:5>
    |   | |-UnaryOperator 0x127142520 <line:11:9, col:11> 'int' prefix '!' cannot overflow
    |   | | `-ImplicitCastExpr 0x127142508 <col:11> 'int' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x1271424e8 <col:11> 'int' lvalue ParmVar 0x127128c28 'group' 'int'
    |   | `-CompoundStmt 0x127142d20 <col:18, line:20:5>
    |   |   `-IfStmt 0x127142d00 <line:13:7, line:19:7>
    |   |     |-CallExpr 0x127142868 <line:13:11, col:45> '<dependent type>' contains-errors
    |   |     | |-DeclRefExpr 0x127142778 <col:11> 'int ()' Function 0x1271426c0 'str_node_can_be_split' 'int ()'
    |   |     | |-RecoveryExpr 0x127142848 <col:33> '<dependent type>' contains-errors lvalue
    |   |     | `-CXXDependentScopeMemberExpr 0x1271427d0 <col:37, col:42> '<dependent type>' contains-errors lvalue ->enc
    |   |     |   `-RecoveryExpr 0x1271427b0 <col:37> '<dependent type>' contains-errors lvalue
    |   |     `-CompoundStmt 0x127142ce8 <col:48, line:19:7>
    |   |       `-IfStmt 0x127142cc8 <line:15:9, line:18:9>
    |   |         |-RecoveryExpr 0x127142b18 <line:15:13, col:26> '_Bool' contains-errors
    |   |         `-CompoundStmt 0x127142cb0 <col:29, line:18:9>
    |   |           `-ReturnStmt 0x127142ca0 <line:17:11, col:18>
    |   |             `-IntegerLiteral 0x127142c80 <col:18> 'int' 2
    |   |-BreakStmt 0x127142d58 <line:21:5>
    |   |-CompoundStmt 0x127143718 <line:24:5, line:78:5>
    |   | |-DeclStmt 0x127142f48 <line:27:7, col:48>
    |   | | `-VarDecl 0x127142de0 <col:7, col:11> col:11 used nestq_num 'int'
    |   | |-DeclStmt 0x127143000 <line:28:7, col:49>
    |   | | `-VarDecl 0x127142f78 <col:7, col:11> col:11 used targetq_num 'int'
    |   | `-IfStmt 0x1271436e8 <line:65:7, line:77:7> has_else
    |   |   |-BinaryOperator 0x127143108 <line:65:11, col:43> 'int' '&&'
    |   |   | |-BinaryOperator 0x127143070 <col:11, col:26> 'int' '>='
    |   |   | | |-ImplicitCastExpr 0x127143058 <col:11> 'int' <LValueToRValue>
    |   |   | | | `-DeclRefExpr 0x127143018 <col:11> 'int' lvalue Var 0x127142f78 'targetq_num' 'int'
    |   |   | | `-IntegerLiteral 0x127143038 <col:26> 'int' 0
    |   |   | `-BinaryOperator 0x1271430e8 <col:31, col:43> 'int' '<'
    |   |   |   |-ImplicitCastExpr 0x1271430d0 <col:31> 'int' <LValueToRValue>
    |   |   |   | `-DeclRefExpr 0x127143090 <col:31> 'int' lvalue Var 0x127142de0 'nestq_num' 'int'
    |   |   |   `-IntegerLiteral 0x1271430b0 <col:43> 'int' 0
    |   |   |-CompoundStmt 0x127143428 <col:46, line:72:7>
    |   |   | `-IfStmt 0x127143408 <line:66:9, line:71:9>
    |   |   |   |-BinaryOperator 0x127143220 <line:66:13, col:48> 'int' '||'
    |   |   |   | |-BinaryOperator 0x127143180 <col:13, col:28> 'int' '=='
    |   |   |   | | |-ImplicitCastExpr 0x127143168 <col:13> 'int' <LValueToRValue>
    |   |   |   | | | `-DeclRefExpr 0x127143128 <col:13> 'int' lvalue Var 0x127142f78 'targetq_num' 'int'
    |   |   |   | | `-IntegerLiteral 0x127143148 <col:28> 'int' 1
    |   |   |   | `-BinaryOperator 0x127143200 <col:33, col:48> 'int' '=='
    |   |   |   |   |-ImplicitCastExpr 0x1271431e0 <col:33> 'int' <LValueToRValue>
    |   |   |   |   | `-DeclRefExpr 0x1271431a0 <col:33> 'int' lvalue Var 0x127142f78 'targetq_num' 'int'
    |   |   |   |   `-IntegerLiteral 0x1271431c0 <col:48> 'int' 2
    |   |   |   `-CompoundStmt 0x1271433f0 <col:51, line:71:9>
    |   |   |     `-IfStmt 0x1271433d0 <line:68:11, line:70:11>
    |   |   |       |-RecoveryExpr 0x127143360 <line:68:15, col:71> '_Bool' contains-errors
    |   |   |       `-CompoundStmt 0x1271433c0 <col:79, line:70:11>
    |   |   `-CompoundStmt 0x1271436c0 <line:73:12, line:77:7>
    |   |     |-BinaryOperator 0x1271434c8 <line:74:9, col:28> '<dependent type>' contains-errors '='
    |   |     | |-CallExpr 0x127143480 <col:9, col:24> '<dependent type>' contains-errors
    |   |     | | |-DeclRefExpr 0x127143440 <col:9> 'int ()' Function 0x127142b60 'NODE_BODY' 'int ()'
    |   |     | | `-RecoveryExpr 0x127143460 <col:19> '<dependent type>' contains-errors lvalue
    |   |     | `-RecoveryExpr 0x1271434a8 <col:28> '<dependent type>' contains-errors lvalue
    |   |     |-CallExpr 0x127143628 <line:75:9, col:52> '<dependent type>' contains-errors
    |   |     | |-DeclRefExpr 0x1271435c8 <col:9> 'int ()' Function 0x127143510 'onig_reduce_nested_quantifier' 'int ()'
    |   |     | |-RecoveryExpr 0x1271435e8 <col:39> '<dependent type>' contains-errors lvalue
    |   |     | `-RecoveryExpr 0x127143608 <col:46> '<dependent type>' contains-errors lvalue
    |   |     `-GotoStmt 0x1271436a8 <line:76:9, col:14> 'q_exit' 0x127143658
    |   |-BreakStmt 0x127143740 <line:79:5>
    |   `-DefaultStmt 0x127143750 <line:81:3, line:82:5>
    |     `-BreakStmt 0x127143748 <col:5>
    |-BinaryOperator 0x127143830 <line:85:3, col:22> '<dependent type>' contains-errors '='
    | |-CallExpr 0x1271437e8 <col:3, col:18> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x1271437a8 <col:3> 'int ()' Function 0x127142b60 'NODE_BODY' 'int ()'
    | | `-RecoveryExpr 0x1271437c8 <col:13> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x127143810 <col:22> '<dependent type>' contains-errors lvalue
    `-LabelStmt 0x127143880 <line:86:2, line:87:10> 'q_exit'
      `-ReturnStmt 0x127143870 <col:3, col:10>
        `-IntegerLiteral 0x127143850 <col:10> 'int' 0
