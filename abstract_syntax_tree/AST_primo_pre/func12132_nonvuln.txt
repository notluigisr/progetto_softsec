`-FunctionDecl 0x146141838  line:1:19 invalid select_size 'int (const struct sock *, int)' static inline
  |-ParmVarDecl 0x146128648 <col:31, col:50> col:50 used sk 'const struct sock *'
  |-ParmVarDecl 0x1461286e0 <col:54, col:59> col:59 invalid sg 'int'
  `-CompoundStmt 0x146142708 <line:2:1, line:20:1>
    |-DeclStmt 0x146141d18 <line:3:2, col:40>
    | |-RecordDecl 0x1461418f0 <col:8, col:15> col:15 struct tcp_sock
    | `-VarDecl 0x146141a58 <col:2, col:39> col:25 used tp 'const struct tcp_sock *' cinit
    |   `-ImplicitCastExpr 0x146141ce8 <col:30, col:39> 'const struct tcp_sock *' <IntegralToPointer>
    |     `-CallExpr 0x146141ca8 <col:30, col:39> 'int'
    |       |-ImplicitCastExpr 0x146141c90 <col:30> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x146141c20 <col:30> 'int ()' Function 0x146141b68 'tcp_sk' 'int ()'
    |       `-ImplicitCastExpr 0x146141cd0 <col:37> 'const struct sock *' <LValueToRValue>
    |         `-DeclRefExpr 0x146141c40 <col:37> 'const struct sock *' lvalue ParmVar 0x146128648 'sk' 'const struct sock *'
    |-DeclStmt 0x146141e10 <line:4:2, col:25>
    | `-VarDecl 0x146141d48 <col:2, col:16> col:6 used tmp 'int' cinit
    |   `-RecoveryExpr 0x146141de8 <col:12, col:16> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x146141db0 <col:12> 'const struct tcp_sock *' lvalue Var 0x146141a58 'tp' 'const struct tcp_sock *'
    |-IfStmt 0x1461426a0 <line:6:2, line:17:2>
    | |-RecoveryExpr 0x146141e28 <line:6:6> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x146142688 <col:10, line:17:2>
    |   `-IfStmt 0x146142658 <line:7:3, line:16:3> has_else
    |     |-CallExpr 0x146141f80 <line:7:7, col:20> 'int'
    |     | |-ImplicitCastExpr 0x146141f68 <col:7> 'int (*)()' <FunctionToPointerDecay>
    |     | | `-DeclRefExpr 0x146141f28 <col:7> 'int ()' Function 0x146141e70 'sk_can_gso' 'int ()'
    |     | `-ImplicitCastExpr 0x146141fa8 <col:18> 'const struct sock *' <LValueToRValue>
    |     |   `-DeclRefExpr 0x146141f48 <col:18> 'const struct sock *' lvalue ParmVar 0x146128648 'sk' 'const struct sock *'
    |     |-CompoundStmt 0x146142208 <col:23, line:10:3>
    |     | `-BinaryOperator 0x1461421e8 <line:9:4, col:49> 'int' contains-errors '='
    |     |   |-DeclRefExpr 0x146141fc0 <col:4> 'int' contains-errors lvalue Var 0x146141d48 'tmp' 'int'
    |     |   `-CallExpr 0x1461421c0 <col:10, col:49> '<dependent type>' contains-errors
    |     |     |-DeclRefExpr 0x1461420c0 <col:10> 'int ()' Function 0x146142008 'SKB_WITH_OVERHEAD' 'int ()'
    |     |     `-BinaryOperator 0x1461421a0 <col:28, col:35> '<dependent type>' contains-errors '-'
    |     |       |-IntegerLiteral 0x1461420e0 <col:28> 'int' 2048
    |     |       `-RecoveryExpr 0x146142180 <col:35> '<dependent type>' contains-errors lvalue
    |     `-CompoundStmt 0x146142638 <line:10:10, line:16:3>
    |       |-DeclStmt 0x146142428 <line:11:4, col:46>
    |       | `-VarDecl 0x146142238 <col:4, col:45> col:8 used pgbreak 'int' cinit
    |       |   `-CallExpr 0x146142400 <col:18, col:45> '<dependent type>' contains-errors
    |       |     |-DeclRefExpr 0x146142380 <col:18> 'int ()' Function 0x1461422c8 'SKB_MAX_HEAD' 'int ()'
    |       |     `-RecoveryExpr 0x1461423e0 <col:31> '<dependent type>' contains-errors lvalue
    |       `-IfStmt 0x146142618 <line:13:4, line:15:11>
    |         |-RecoveryExpr 0x146142580 <line:13:8, line:14:47> '_Bool' contains-errors
    |         `-BinaryOperator 0x1461425f8 <line:15:5, col:11> 'int' contains-errors '='
    |           |-DeclRefExpr 0x1461425a0 <col:5> 'int' contains-errors lvalue Var 0x146141d48 'tmp' 'int'
    |           `-ImplicitCastExpr 0x1461425e0 <col:11> 'int' contains-errors <LValueToRValue>
    |             `-DeclRefExpr 0x1461425c0 <col:11> 'int' contains-errors lvalue Var 0x146142238 'pgbreak' 'int'
    `-ReturnStmt 0x1461426f8 <line:19:2, col:9>
      `-ImplicitCastExpr 0x1461426e0 <col:9> 'int' contains-errors <LValueToRValue>
        `-DeclRefExpr 0x1461426c0 <col:9> 'int' contains-errors lvalue Var 0x146141d48 'tmp' 'int'
