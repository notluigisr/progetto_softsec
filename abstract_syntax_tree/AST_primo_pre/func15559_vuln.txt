`-FunctionDecl 0x1381283a8  line:1:1 invalid LogLuvEncode24 'int (int *, int *, int, int)'
  |-ParmVarDecl 0x138128128 <col:16, col:22> col:22 referenced invalid tif 'int *'
  |-ParmVarDecl 0x1381281a8 <col:27, col:34> col:34 invalid bp 'int *'
  |-ParmVarDecl 0x138128228 <col:38, col:47> col:47 invalid cc 'int'
  |-ParmVarDecl 0x1381282a8 <col:51, col:58> col:58 invalid s 'int'
  `-CompoundStmt 0x13000a990 <line:2:1, line:42:1>
    |-CallExpr 0x1381287d8 <line:10:2, col:15> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x138128758 <col:2> 'int ()' Function 0x1381286a0 'assert' 'int ()'
    | `-BinaryOperator 0x1381287b8 <col:9, col:14> 'int' contains-errors '=='
    |   |-RecoveryExpr 0x138128778 <col:9> '<dependent type>' contains-errors lvalue
    |   `-IntegerLiteral 0x138128798 <col:14> 'int' 0
    |-CallExpr 0x130009ef8 <line:11:2, col:19> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x130009e00 <col:2> 'int ()' Function 0x1381286a0 'assert' 'int ()'
    | `-BinaryOperator 0x130009ed8 <col:9, col:15> 'int' contains-errors '!='
    |   |-RecoveryExpr 0x130009e98 <col:9> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x130009eb8 <col:15> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x13000a038 <line:14:2, line:20:2> has_else
    | |-RecoveryExpr 0x130009fc0 <line:14:6, col:26> '_Bool' contains-errors
    | |-NullStmt 0x13000a030 <line:15:3>
    | `-CompoundStmt 0x13000a020 <line:16:7, line:20:2>
    `-ReturnStmt 0x13000a980 <line:41:2, col:11>
      `-ParenExpr 0x13000a960 <col:9, col:11> 'int'
        `-IntegerLiteral 0x13000a940 <col:10> 'int' 1
