`-FunctionDecl 0x14c928238  line:1:1 TEST 'int (int, int)'
  |-ParmVarDecl 0x14c928158 <col:6> col:6 used GatherNdOpTest 'int'
  |-ParmVarDecl 0x14c9280d8 <col:22> col:22 SliceIndexingIntoMatrix 'int'
  `-CompoundStmt 0x14c941118 <col:47, line:8:1>
    |-ImplicitCastExpr 0x14c928370 <line:2:3> 'int' <LValueToRValue>
    | `-DeclRefExpr 0x14c928350 <col:3> 'int' lvalue ParmVar 0x14c928158 'GatherNdOpTest' 'int'
    |-BinaryOperator 0x14c940cb0 <line:4:3, col:33> 'int' contains-errors '>'
    | |-BinaryOperator 0x14c940c90 <col:3, col:18> 'int' contains-errors '<'
    | | |-RecoveryExpr 0x14c940b58 <col:3, col:5> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x14c940b38 <col:3> 'int ()' Function 0x14c9283e8 'm' 'int ()'
    | | `-RecoveryExpr 0x14c940c70 <col:18> '<dependent type>' contains-errors lvalue
    | `-StmtExpr 0x14c940c30 <col:26, col:33> 'int'
    |   `-CompoundStmt 0x14c940c18 <col:27, col:32>
    |     `-BinaryOperator 0x14c940bf8 <col:28, col:31> 'int' ','
    |       |-IntegerLiteral 0x14c940bb8 <col:28> 'int' 1
    |       `-IntegerLiteral 0x14c940bd8 <col:31> 'int' 0
    `-CallExpr 0x14c940ea0 <line:5:3, col:34> '<dependent type>' contains-errors
      |-DeclRefExpr 0x14c940db0 <col:3> 'int ()' Function 0x14c940cf8 'ASSERT_EQ' 'int ()'
      |-CallExpr 0x14c940e18 <col:13, col:22> '<dependent type>' contains-errors
      | `-RecoveryExpr 0x14c940df0 <col:13, col:15> '<dependent type>' contains-errors lvalue
      |   `-DeclRefExpr 0x14c940dd0 <col:13> 'int ()' Function 0x14c9283e8 'm' 'int ()'
      `-RecoveryExpr 0x14c940e80 <col:25> '<dependent type>' contains-errors lvalue
