`-FunctionDecl 0x128928358  line:1:19 compare 'int (const char *, const char *, int, int)' static inline
  |-ParmVarDecl 0x1289280d8 <col:27, col:39> col:39 used s1 'const char *'
  |-ParmVarDecl 0x128928158 <col:43, col:55> col:55 used s2 'const char *'
  |-ParmVarDecl 0x1289281d8 <col:59, col:63> col:63 used l1 'int'
  |-ParmVarDecl 0x128928258 <col:67, col:71> col:71 used l2 'int'
  `-CompoundStmt 0x1289426b8 <col:75, line:16:1>
    |-DeclStmt 0x128928598 <line:2:5, col:66>
    | `-VarDecl 0x1289284b8 <col:5, col:64> col:35 used p1 'const unsigned char *' register cinit
    |   `-CStyleCastExpr 0x128928570 <col:40, col:64> 'const unsigned char *' <BitCast>
    |     `-ImplicitCastExpr 0x128928558 <col:64> 'const char *' <LValueToRValue> part_of_explicit_cast
    |       `-DeclRefExpr 0x128928520 <col:64> 'const char *' lvalue ParmVar 0x1289280d8 's1' 'const char *'
    |-DeclStmt 0x1289286a8 <line:3:5, col:66>
    | `-VarDecl 0x1289285c8 <col:5, col:64> col:35 used p2 'const unsigned char *' register cinit
    |   `-CStyleCastExpr 0x128928680 <col:40, col:64> 'const unsigned char *' <BitCast>
    |     `-ImplicitCastExpr 0x128928668 <col:64> 'const char *' <LValueToRValue> part_of_explicit_cast
    |       `-DeclRefExpr 0x128928630 <col:64> 'const char *' lvalue ParmVar 0x128928158 's2' 'const char *'
    |-DeclStmt 0x128941b10 <line:4:5, col:62>
    | |-VarDecl 0x1289286d8 <col:5, col:45> col:35 used e1 'const unsigned char *' register cinit
    | | `-BinaryOperator 0x1289287b0 <col:40, col:45> 'const unsigned char *' '+'
    | |   |-ImplicitCastExpr 0x128928780 <col:40> 'const unsigned char *' <LValueToRValue>
    | |   | `-DeclRefExpr 0x128928740 <col:40> 'const unsigned char *' lvalue Var 0x1289284b8 'p1' 'const unsigned char *'
    | |   `-ImplicitCastExpr 0x128928798 <col:45> 'int' <LValueToRValue>
    | |     `-DeclRefExpr 0x128928760 <col:45> 'int' lvalue ParmVar 0x1289281d8 'l1' 'int'
    | `-VarDecl 0x128941a00 <col:5, col:60> col:50 used e2 'const unsigned char *' register cinit
    |   `-BinaryOperator 0x128941ad8 <col:55, col:60> 'const unsigned char *' '+'
    |     |-ImplicitCastExpr 0x128941aa8 <col:55> 'const unsigned char *' <LValueToRValue>
    |     | `-DeclRefExpr 0x128941a68 <col:55> 'const unsigned char *' lvalue Var 0x1289285c8 'p2' 'const unsigned char *'
    |     `-ImplicitCastExpr 0x128941ac0 <col:60> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x128941a88 <col:60> 'int' lvalue ParmVar 0x128928258 'l2' 'int'
    |-DeclStmt 0x128941c40 <line:5:5, col:15>
    | |-VarDecl 0x128941b40 <col:5, col:9> col:9 used c1 'int'
    | `-VarDecl 0x128941bc0 <col:5, col:13> col:13 used c2 'int'
    |-WhileStmt 0x1289425f8 <line:7:5, line:14:5>
    | |-BinaryOperator 0x128941d78 <line:7:12, col:28> 'int' '&&'
    | | |-BinaryOperator 0x128941cc8 <col:12, col:17> 'int' '<'
    | | | |-ImplicitCastExpr 0x128941c98 <col:12> 'const unsigned char *' <LValueToRValue>
    | | | | `-DeclRefExpr 0x128941c58 <col:12> 'const unsigned char *' lvalue Var 0x1289284b8 'p1' 'const unsigned char *'
    | | | `-ImplicitCastExpr 0x128941cb0 <col:17> 'const unsigned char *' <LValueToRValue>
    | | |   `-DeclRefExpr 0x128941c78 <col:17> 'const unsigned char *' lvalue Var 0x1289286d8 'e1' 'const unsigned char *'
    | | `-BinaryOperator 0x128941d58 <col:23, col:28> 'int' '<'
    | |   |-ImplicitCastExpr 0x128941d28 <col:23> 'const unsigned char *' <LValueToRValue>
    | |   | `-DeclRefExpr 0x128941ce8 <col:23> 'const unsigned char *' lvalue Var 0x1289285c8 'p2' 'const unsigned char *'
    | |   `-ImplicitCastExpr 0x128941d40 <col:28> 'const unsigned char *' <LValueToRValue>
    | |     `-DeclRefExpr 0x128941d08 <col:28> 'const unsigned char *' lvalue Var 0x128941a00 'e2' 'const unsigned char *'
    | `-CompoundStmt 0x1289425b8 <col:32, line:14:5>
    |   |-CallExpr 0x128941f88 <line:8:9, col:33> 'int'
    |   | |-ImplicitCastExpr 0x128941f70 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x128941ec0 <col:9> 'int ()' Function 0x128941e08 'GET_UTF8_CHAR' 'int ()'
    |   | |-ImplicitCastExpr 0x128941fc0 <col:23> 'const unsigned char *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x128941ee0 <col:23> 'const unsigned char *' lvalue Var 0x1289284b8 'p1' 'const unsigned char *'
    |   | |-ImplicitCastExpr 0x128941fd8 <col:27> 'const unsigned char *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x128941f00 <col:27> 'const unsigned char *' lvalue Var 0x1289286d8 'e1' 'const unsigned char *'
    |   | `-ImplicitCastExpr 0x128941ff0 <col:31> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x128941f20 <col:31> 'int' lvalue Var 0x128941b40 'c1' 'int'
    |   |-CallExpr 0x1289420a0 <line:9:9, col:33> 'int'
    |   | |-ImplicitCastExpr 0x128942088 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x128942008 <col:9> 'int ()' Function 0x128941e08 'GET_UTF8_CHAR' 'int ()'
    |   | |-ImplicitCastExpr 0x1289420d8 <col:23> 'const unsigned char *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x128942028 <col:23> 'const unsigned char *' lvalue Var 0x1289285c8 'p2' 'const unsigned char *'
    |   | |-ImplicitCastExpr 0x1289420f0 <col:27> 'const unsigned char *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x128942048 <col:27> 'const unsigned char *' lvalue Var 0x128941a00 'e2' 'const unsigned char *'
    |   | `-ImplicitCastExpr 0x128942108 <col:31> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x128942068 <col:31> 'int' lvalue Var 0x128941bc0 'c2' 'int'
    |   |-IfStmt 0x1289421b8 <line:10:9, col:23>
    |   | |-BinaryOperator 0x128942190 <col:13, col:19> 'int' '=='
    |   | | |-ImplicitCastExpr 0x128942160 <col:13> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x128942120 <col:13> 'int' lvalue Var 0x128941b40 'c1' 'int'
    |   | | `-ImplicitCastExpr 0x128942178 <col:19> 'int' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x128942140 <col:19> 'int' lvalue Var 0x128941bc0 'c2' 'int'
    |   | `-ContinueStmt 0x1289421b0 <col:23>
    |   |-BinaryOperator 0x128942370 <line:11:9, col:24> 'int' '='
    |   | |-DeclRefExpr 0x1289421d8 <col:9> 'int' lvalue Var 0x128941b40 'c1' 'int'
    |   | `-CallExpr 0x128942330 <col:14, col:24> 'int'
    |   |   |-ImplicitCastExpr 0x128942318 <col:14> 'int (*)()' <FunctionToPointerDecay>
    |   |   | `-DeclRefExpr 0x1289422d8 <col:14> 'int ()' Function 0x128942220 'TOLOWER' 'int ()'
    |   |   `-ImplicitCastExpr 0x128942358 <col:22> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x1289422f8 <col:22> 'int' lvalue Var 0x128941b40 'c1' 'int'
    |   |-BinaryOperator 0x128942448 <line:12:9, col:24> 'int' '='
    |   | |-DeclRefExpr 0x128942390 <col:9> 'int' lvalue Var 0x128941bc0 'c2' 'int'
    |   | `-CallExpr 0x128942408 <col:14, col:24> 'int'
    |   |   |-ImplicitCastExpr 0x1289423f0 <col:14> 'int (*)()' <FunctionToPointerDecay>
    |   |   | `-DeclRefExpr 0x1289423b0 <col:14> 'int ()' Function 0x128942220 'TOLOWER' 'int ()'
    |   |   `-ImplicitCastExpr 0x128942430 <col:22> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x1289423d0 <col:22> 'int' lvalue Var 0x128941bc0 'c2' 'int'
    |   `-IfStmt 0x128942598 <line:13:9, col:35>
    |     |-BinaryOperator 0x1289424d8 <col:13, col:19> 'int' '!='
    |     | |-ImplicitCastExpr 0x1289424a8 <col:13> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x128942468 <col:13> 'int' lvalue Var 0x128941b40 'c1' 'int'
    |     | `-ImplicitCastExpr 0x1289424c0 <col:19> 'int' <LValueToRValue>
    |     |   `-DeclRefExpr 0x128942488 <col:19> 'int' lvalue Var 0x128941bc0 'c2' 'int'
    |     `-ReturnStmt 0x128942588 <col:23, col:35>
    |       `-BinaryOperator 0x128942568 <col:30, col:35> 'int' '-'
    |         |-ImplicitCastExpr 0x128942538 <col:30> 'int' <LValueToRValue>
    |         | `-DeclRefExpr 0x1289424f8 <col:30> 'int' lvalue Var 0x128941b40 'c1' 'int'
    |         `-ImplicitCastExpr 0x128942550 <col:35> 'int' <LValueToRValue>
    |           `-DeclRefExpr 0x128942518 <col:35> 'int' lvalue Var 0x128941bc0 'c2' 'int'
    `-ReturnStmt 0x1289426a8 <line:15:5, col:17>
      `-BinaryOperator 0x128942688 <col:12, col:17> 'int' '-'
        |-ImplicitCastExpr 0x128942658 <col:12> 'int' <LValueToRValue>
        | `-DeclRefExpr 0x128942618 <col:12> 'int' lvalue ParmVar 0x1289281d8 'l1' 'int'
        `-ImplicitCastExpr 0x128942670 <col:17> 'int' <LValueToRValue>
          `-DeclRefExpr 0x128942638 <col:17> 'int' lvalue ParmVar 0x128928258 'l2' 'int'
