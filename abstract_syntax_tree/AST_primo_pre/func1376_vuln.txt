`-FunctionDecl 0x11e1283a8  line:1:12 invalid get_registers 'int (int *, int, int, void *)' static
  |-ParmVarDecl 0x11e128128 <col:26, col:37> col:37 invalid pegasus 'int *'
  |-ParmVarDecl 0x11e1281a8 <col:46, col:52> col:52 invalid indx 'int'
  |-ParmVarDecl 0x11e128228 <col:58, col:64> col:64 invalid size 'int'
  |-ParmVarDecl 0x11e1282a8 <col:70, col:76> col:76 used data 'void *'
  `-CompoundStmt 0x11f009978 <line:2:1, line:12:1>
    |-DeclStmt 0x11e1284f0 <line:3:2, col:9>
    | `-VarDecl 0x11e128488 <col:2, col:6> col:6 used ret 'int'
    |-BinaryOperator 0x11f0094d8 <line:5:2, line:7:32> 'int' contains-errors '='
    | |-DeclRefExpr 0x11e128508 <line:5:2> 'int' lvalue Var 0x11e128488 'ret' 'int'
    | `-CallExpr 0x11f009470 <col:8, line:7:32> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x11e128680 <line:5:8> 'int ()' Function 0x11e1285c8 'usb_control_msg' 'int ()'
    |   |-CXXDependentScopeMemberExpr 0x11e1286c0 <col:24, col:33> '<dependent type>' contains-errors lvalue ->usb
    |   | `-RecoveryExpr 0x11e1286a0 <col:24> '<dependent type>' contains-errors lvalue
    |   |-CallExpr 0x11f0092a8 <col:38, col:69> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x11f009200 <col:38> 'int ()' Function 0x11e128730 'usb_rcvctrlpipe' 'int ()'
    |   | |-CXXDependentScopeMemberExpr 0x11f009240 <col:54, col:63> '<dependent type>' contains-errors lvalue ->usb
    |   | | `-RecoveryExpr 0x11f009220 <col:54> '<dependent type>' contains-errors lvalue
    |   | `-IntegerLiteral 0x11f009288 <col:68> 'int' 0
    |   |-RecoveryExpr 0x11f009430 <line:6:10> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x11f009450 <col:32> '<dependent type>' contains-errors lvalue
    |   |-IntegerLiteral 0x11f009308 <col:51> 'int' 0
    |   |-RecoveryExpr 0x11f009328 <line:7:10> '<dependent type>' contains-errors lvalue
    |   |-DeclRefExpr 0x11f009348 <col:16> 'void *' lvalue ParmVar 0x11e1282a8 'data' 'void *'
    |   |-RecoveryExpr 0x11f009368 <col:22> '<dependent type>' contains-errors lvalue
    |   `-IntegerLiteral 0x11f009388 <col:28> 'int' 1000
    |-IfStmt 0x11f009910 <line:8:2, line:10:26>
    | |-BinaryOperator 0x11f009550 <line:8:6, col:12> 'int' '<'
    | | |-ImplicitCastExpr 0x11f009538 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x11f0094f8 <col:6> 'int' lvalue Var 0x11e128488 'ret' 'int'
    | | `-IntegerLiteral 0x11f009518 <col:12> 'int' 0
    | `-CallExpr 0x11f0098c0 <line:9:3, line:10:26> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x11f009650 <line:9:3> 'int ()' Function 0x11f009598 'netif_dbg' 'int ()'
    |   |-RecoveryExpr 0x11f009670 <col:13> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x11f0098a0 <col:22> '<dependent type>' contains-errors lvalue
    |   |-CXXDependentScopeMemberExpr 0x11f0096c8 <col:27, col:36> '<dependent type>' contains-errors lvalue ->net
    |   | `-RecoveryExpr 0x11f0096a8 <col:27> '<dependent type>' contains-errors lvalue
    |   |-StringLiteral 0x11f009750 <line:10:6> 'char[4]' lvalue "STR"
    |   |-PredefinedExpr 0x11f009818 <col:13> 'const char[14]' lvalue __func__
    |   | `-StringLiteral 0x11f0097f0 <col:13> 'const char[14]' lvalue "get_registers"
    |   `-DeclRefExpr 0x11f009830 <col:23> 'int' lvalue Var 0x11e128488 'ret' 'int'
    `-ReturnStmt 0x11f009968 <line:11:2, col:9>
      `-ImplicitCastExpr 0x11f009950 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x11f009930 <col:9> 'int' lvalue Var 0x11e128488 'ret' 'int'
