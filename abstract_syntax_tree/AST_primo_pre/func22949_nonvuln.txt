`-FunctionDecl 0x15d121bf8  line:1:1 invalid cleanup_backslash_2 'int (int *)'
  |-ParmVarDecl 0x15d121b28 <col:21, col:30> col:30 referenced invalid p 'int *'
  `-CompoundStmt 0x15d121f00 <line:2:1, line:10:1>
    `-WhileStmt 0x15d121ee0 <line:5:2, line:9:2>
      |-BinaryOperator 0x15d121d10 <line:5:9, col:15> 'int' contains-errors '!='
      | |-UnaryOperator 0x15d121ce0 <col:9, col:10> '<dependent type>' contains-errors prefix '*' cannot overflow
      | | `-ImplicitCastExpr 0x15d121cc8 <col:10> '<dependent type>' contains-errors <LValueToRValue>
      | |   `-RecoveryExpr 0x15d121ca8 <col:10> '<dependent type>' contains-errors lvalue
      | `-CharacterLiteral 0x15d121cf8 <col:15> 'int' 0
      `-CompoundStmt 0x15d121ec0 <col:22, line:9:2>
        |-IfStmt 0x15d121e40 <line:6:3, line:7:9>
        | |-BinaryOperator 0x15d121d98 <line:6:7, col:13> 'int' contains-errors '=='
        | | |-UnaryOperator 0x15d121d68 <col:7, col:8> '<dependent type>' contains-errors prefix '*' cannot overflow
        | | | `-ImplicitCastExpr 0x15d121d50 <col:8> '<dependent type>' contains-errors <LValueToRValue>
        | | |   `-RecoveryExpr 0x15d121d30 <col:8> '<dependent type>' contains-errors lvalue
        | | `-CharacterLiteral 0x15d121d80 <col:13> 'int' 92
        | `-BinaryOperator 0x15d121e20 <line:7:4, col:9> '<dependent type>' contains-errors '='
        |   |-UnaryOperator 0x15d121df0 <col:4, col:5> '<dependent type>' contains-errors prefix '*' cannot overflow
        |   | `-ImplicitCastExpr 0x15d121dd8 <col:5> '<dependent type>' contains-errors <LValueToRValue>
        |   |   `-RecoveryExpr 0x15d121db8 <col:5> '<dependent type>' contains-errors lvalue
        |   `-CharacterLiteral 0x15d121e08 <col:9> 'int' 47
        `-UnaryOperator 0x15d121ea8 <line:8:3, col:4> '<dependent type>' contains-errors postfix '++' cannot overflow
          `-RecoveryExpr 0x15d121e80 <col:3> '<dependent type>' contains-errors lvalue
            `-DeclRefExpr 0x15d121e60 <col:3> 'int *' lvalue ParmVar 0x15d121b28 'p' 'int *'
