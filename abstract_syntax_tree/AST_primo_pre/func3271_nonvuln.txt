`-FunctionDecl 0x125928288  line:1:12 invalid jp2_pclr_getdata 'int (int *, int *)' static
  |-ParmVarDecl 0x125928128 <col:29, col:40> col:40 invalid box 'int *'
  |-ParmVarDecl 0x1259281a8 <col:45, col:59> col:59 invalid in 'int *'
  `-CompoundStmt 0x1259434f0 <line:2:1, line:38:1>
    |-DeclStmt 0x1259284a0 <line:4:2, col:13>
    | `-VarDecl 0x125928438 <col:2, col:6> col:6 used lutsize 'int'
    |-DeclStmt 0x125928538 <line:5:2, col:16>
    | `-VarDecl 0x1259284d0 <col:2, col:15> col:15 used i 'unsigned int'
    |-DeclStmt 0x1259285d0 <line:6:2, col:16>
    | `-VarDecl 0x125928568 <col:2, col:15> col:15 used j 'unsigned int'
    |-IfStmt 0x125941c58 <line:12:2, line:15:2>
    | |-BinaryOperator 0x125941bd8 <line:12:6, line:13:36> 'int' contains-errors '||'
    | | |-CallExpr 0x125941af8 <line:12:6, col:41> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x125928780 <col:6> 'int ()' Function 0x1259286c8 'jp2_getuint16' 'int ()'
    | | | |-RecoveryExpr 0x1259287a0 <col:20> '<dependent type>' contains-errors lvalue
    | | | `-UnaryOperator 0x125941ae0 <col:24, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | |   `-CXXDependentScopeMemberExpr 0x125941a98 <col:25, col:31> '<dependent type>' contains-errors lvalue ->numlutents
    | | |     `-RecoveryExpr 0x125941a78 <col:25> '<dependent type>' contains-errors lvalue
    | | `-CallExpr 0x125941ba8 <line:13:4, col:36> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x125941970 <col:4> 'int ()' Function 0x1259418b8 'jp2_getuint8' 'int ()'
    | |   |-RecoveryExpr 0x125941990 <col:17> '<dependent type>' contains-errors lvalue
    | |   `-UnaryOperator 0x125941b90 <col:21, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |     `-CXXDependentScopeMemberExpr 0x125941b48 <col:22, col:28> '<dependent type>' contains-errors lvalue ->numchans
    | |       `-RecoveryExpr 0x125941b28 <col:22> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x125941c40 <col:39, line:15:2>
    |   `-ReturnStmt 0x125941c30 <line:14:3, col:11>
    |     `-UnaryOperator 0x125941c18 <col:10, col:11> 'int' prefix '-'
    |       `-IntegerLiteral 0x125941bf8 <col:11> 'int' 1
    |-BinaryOperator 0x125941e88 <line:16:2, col:37> 'int' contains-errors '='
    | |-DeclRefExpr 0x125941c78 <col:2> 'int' lvalue Var 0x125928438 'lutsize' 'int'
    | `-BinaryOperator 0x125941e68 <col:12, col:37> '<dependent type>' contains-errors '*'
    |   |-CXXDependentScopeMemberExpr 0x125941db8 <col:12, col:18> '<dependent type>' contains-errors lvalue ->numlutents
    |   | `-RecoveryExpr 0x125941d98 <col:12> '<dependent type>' contains-errors lvalue
    |   `-CXXDependentScopeMemberExpr 0x125941e20 <col:31, col:37> '<dependent type>' contains-errors lvalue ->numchans
    |     `-RecoveryExpr 0x125941e00 <col:31> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x1259420c0 <line:17:2, line:19:2>
    | |-RecoveryExpr 0x125942040 <line:17:6, col:65> '_Bool' contains-errors
    | `-CompoundStmt 0x1259420a8 <col:68, line:19:2>
    |   `-ReturnStmt 0x125942098 <line:18:3, col:11>
    |     `-UnaryOperator 0x125942080 <col:10, col:11> 'int' prefix '-'
    |       `-IntegerLiteral 0x125942060 <col:11> 'int' 1
    |-IfStmt 0x125942258 <line:20:2, line:22:2>
    | |-RecoveryExpr 0x1259421d8 <line:20:6, col:68> '_Bool' contains-errors
    | `-CompoundStmt 0x125942240 <col:71, line:22:2>
    |   `-ReturnStmt 0x125942230 <line:21:3, col:11>
    |     `-UnaryOperator 0x125942218 <col:10, col:11> 'int' prefix '-'
    |       `-IntegerLiteral 0x1259421f8 <col:11> 'int' 1
    |-ForStmt 0x125942568 <line:23:2, line:27:2>
    | |-BinaryOperator 0x1259422d0 <line:23:7, col:11> 'unsigned int' '='
    | | |-DeclRefExpr 0x125942278 <col:7> 'unsigned int' lvalue Var 0x1259284d0 'i' 'unsigned int'
    | | `-ImplicitCastExpr 0x1259422b8 <col:11> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x125942298 <col:11> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x1259423f8 <col:14, col:24> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x1259422f0 <col:14> 'unsigned int' lvalue Var 0x1259284d0 'i' 'unsigned int'
    | | `-CXXDependentScopeMemberExpr 0x1259423b0 <col:18, col:24> '<dependent type>' contains-errors lvalue ->numchans
    | |   `-RecoveryExpr 0x125942390 <col:18> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x125942438 <col:34, col:36> 'unsigned int' prefix '++'
    | | `-DeclRefExpr 0x125942418 <col:36> 'unsigned int' lvalue Var 0x1259284d0 'i' 'unsigned int'
    | `-CompoundStmt 0x125942550 <col:39, line:27:2>
    |   `-IfStmt 0x125942530 <line:24:3, line:26:3>
    |     |-RecoveryExpr 0x1259424b0 <line:24:7, col:37> '_Bool' contains-errors
    |     `-CompoundStmt 0x125942518 <col:40, line:26:3>
    |       `-ReturnStmt 0x125942508 <line:25:4, col:12>
    |         `-UnaryOperator 0x1259424f0 <col:11, col:12> 'int' prefix '-'
    |           `-IntegerLiteral 0x1259424d0 <col:12> 'int' 1
    `-ReturnStmt 0x1259434e0 <line:37:2, col:9>
      `-IntegerLiteral 0x1259434c0 <col:9> 'int' 0
