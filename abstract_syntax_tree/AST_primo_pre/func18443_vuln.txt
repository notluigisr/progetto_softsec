`-FunctionDecl 0x13f928318  line:1:16 invalid parse_json 'int *(int *, int, int *)' static
  |-ParmVarDecl 0x13f928128 <col:27, col:34> col:34 invalid lex 'int *'
  |-ParmVarDecl 0x13f9281a8 <col:39, col:46> col:46 invalid flags 'int'
  |-ParmVarDecl 0x13f928228 <col:53, col:67> col:67 referenced invalid error 'int *'
  `-CompoundStmt 0x13f942400 <line:2:1, line:32:1>
    |-CallExpr 0x13f9285b0 <line:5:5, col:24> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13f928550 <col:5> 'int ()' Function 0x13f928498 'lex_scan' 'int ()'
    | |-RecoveryExpr 0x13f928570 <col:14> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x13f928590 <col:19> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x13f941a58 <line:6:5, line:11:5>
    | |-RecoveryExpr 0x13f928638 <line:6:8, col:33> '_Bool' contains-errors
    | `-CompoundStmt 0x13f941a40 <col:36, line:11:5>
    |   `-IfStmt 0x13f941a20 <line:7:9, line:10:9>
    |     |-BinaryOperator 0x13f928798 <line:7:12, col:47> 'int' contains-errors '&&'
    |     | |-BinaryOperator 0x13f9286d8 <col:12, col:26> 'int' contains-errors '!='
    |     | | |-CXXDependentScopeMemberExpr 0x13f928678 <col:12, col:17> '<dependent type>' contains-errors lvalue ->token
    |     | | | `-RecoveryExpr 0x13f928658 <col:12> '<dependent type>' contains-errors lvalue
    |     | | `-CharacterLiteral 0x13f9286c0 <col:26> 'int' 91
    |     | `-BinaryOperator 0x13f928778 <col:33, col:47> 'int' contains-errors '!='
    |     |   |-CXXDependentScopeMemberExpr 0x13f928718 <col:33, col:38> '<dependent type>' contains-errors lvalue ->token
    |     |   | `-RecoveryExpr 0x13f9286f8 <col:33> '<dependent type>' contains-errors lvalue
    |     |   `-CharacterLiteral 0x13f928760 <col:47> 'int' 123
    |     `-CompoundStmt 0x13f941a00 <col:52, line:10:9>
    |       |-CallExpr 0x13f941980 <line:8:13, col:40> '<dependent type>' contains-errors
    |       | |-DeclRefExpr 0x13f9418b8 <col:13> 'int ()' Function 0x13f941800 'error_set' 'int ()'
    |       | |-RecoveryExpr 0x13f9418d8 <col:23> '<dependent type>' contains-errors lvalue
    |       | |-RecoveryExpr 0x13f9418f8 <col:30> '<dependent type>' contains-errors lvalue
    |       | `-StringLiteral 0x13f941960 <col:35> 'char[4]' lvalue "STR"
    |       `-ReturnStmt 0x13f9419f0 <line:9:13, col:20>
    |         `-RecoveryExpr 0x13f9419d0 <col:20> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x13f941cf0 <line:14:5, line:15:16>
    | |-UnaryOperator 0x13f941c90 <line:14:8, col:9> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x13f941c78 <col:9> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x13f941c58 <col:9> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x13f941ce0 <line:15:9, col:16>
    |   `-RecoveryExpr 0x13f941cc0 <col:16> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x13f9421e8 <line:17:5, line:24:5>
    | |-RecoveryExpr 0x13f941d68 <line:17:8, col:40> '_Bool' contains-errors
    | `-CompoundStmt 0x13f9421c8 <col:43, line:24:5>
    |   |-CallExpr 0x13f941de8 <line:18:9, col:28> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x13f941d88 <col:9> 'int ()' Function 0x13f928498 'lex_scan' 'int ()'
    |   | |-RecoveryExpr 0x13f941da8 <col:18> '<dependent type>' contains-errors lvalue
    |   | `-RecoveryExpr 0x13f941dc8 <col:23> '<dependent type>' contains-errors lvalue
    |   `-IfStmt 0x13f9421a8 <line:19:9, line:23:9>
    |     |-BinaryOperator 0x13f941ed8 <line:19:12, col:26> 'int' contains-errors '!='
    |     | |-CXXDependentScopeMemberExpr 0x13f941e38 <col:12, col:17> '<dependent type>' contains-errors lvalue ->token
    |     | | `-RecoveryExpr 0x13f941e18 <col:12> '<dependent type>' contains-errors lvalue
    |     | `-RecoveryExpr 0x13f941eb8 <col:26> '<dependent type>' contains-errors lvalue
    |     `-CompoundStmt 0x13f942180 <col:37, line:23:9>
    |       |-CallExpr 0x13f941f78 <line:20:13, col:40> '<dependent type>' contains-errors
    |       | |-DeclRefExpr 0x13f941ef8 <col:13> 'int ()' Function 0x13f941800 'error_set' 'int ()'
    |       | |-RecoveryExpr 0x13f941f18 <col:23> '<dependent type>' contains-errors lvalue
    |       | |-RecoveryExpr 0x13f941f38 <col:30> '<dependent type>' contains-errors lvalue
    |       | `-StringLiteral 0x13f941f58 <col:35> 'char[4]' lvalue "STR"
    |       |-CallExpr 0x13f942110 <line:21:13, col:31> '<dependent type>' contains-errors
    |       | |-DeclRefExpr 0x13f942090 <col:13> 'int ()' Function 0x13f941fd8 'json_decref' 'int ()'
    |       | `-RecoveryExpr 0x13f9420f0 <col:25> '<dependent type>' contains-errors lvalue
    |       `-ReturnStmt 0x13f942170 <line:22:13, col:20>
    |         `-RecoveryExpr 0x13f942150 <col:20> '<dependent type>' contains-errors lvalue
    `-IfStmt 0x13f9423e0 <line:26:5, line:29:5>
      |-RecoveryExpr 0x13f942208 <line:26:8> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x13f9423c8 <col:15, line:29:5>
        `-BinaryOperator 0x13f9423a8 <line:28:9, col:44> '<dependent type>' contains-errors '='
          |-CXXDependentScopeMemberExpr 0x13f942270 <col:9, col:16> '<dependent type>' contains-errors lvalue ->position
          | `-RecoveryExpr 0x13f942248 <col:9> '<dependent type>' contains-errors lvalue
          |   `-DeclRefExpr 0x13f942228 <col:9> 'int *' lvalue ParmVar 0x13f928228 'error' 'int *'
          `-CStyleCastExpr 0x13f942380 <col:27, col:44> 'int' contains-errors <Dependent>
            `-CXXDependentScopeMemberExpr 0x13f942320 <col:32, col:44> '<dependent type>' contains-errors lvalue .position
              `-CXXDependentScopeMemberExpr 0x13f9422d8 <col:32, col:37> '<dependent type>' contains-errors lvalue ->stream
                `-RecoveryExpr 0x13f9422b8 <col:32> '<dependent type>' contains-errors lvalue
