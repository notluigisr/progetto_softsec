`-FunctionDecl 0x106808350  line:1:6 vma_adjust_trans_huge 'void (struct vm_area_struct *, unsigned long, unsigned long, long)'
  |-ParmVarDecl 0x120128648 <col:28, col:51> col:51 used vma 'struct vm_area_struct *'
  |-ParmVarDecl 0x1201286c8 <line:2:9, col:23> col:23 used start 'unsigned long'
  |-ParmVarDecl 0x120128748 <line:3:9, col:23> col:23 used end 'unsigned long'
  |-ParmVarDecl 0x106808200 <line:4:9, col:14> col:14 used adjust_next 'long'
  `-CompoundStmt 0x106809020 <line:5:1, line:28:1>
    `-IfStmt 0x106809000 <line:19:2, line:27:2>
      |-BinaryOperator 0x106808b80 <line:19:6, col:20> 'int' '>'
      | |-ImplicitCastExpr 0x106808b50 <col:6> 'long' <LValueToRValue>
      | | `-DeclRefExpr 0x106808b10 <col:6> 'long' lvalue ParmVar 0x106808200 'adjust_next' 'long'
      | `-ImplicitCastExpr 0x106808b68 <col:20> 'long' <IntegralCast>
      |   `-IntegerLiteral 0x106808b30 <col:20> 'int' 0
      `-CompoundStmt 0x106808fe0 <col:23, line:27:2>
        |-DeclStmt 0x106808cf0 <line:20:3, col:45>
        | `-VarDecl 0x106808c28 <col:3, col:38> col:26 used next 'struct vm_area_struct *' cinit
        |   `-RecoveryExpr 0x106808cc8 <col:33, col:38> '<dependent type>' contains-errors lvalue
        |     `-DeclRefExpr 0x106808c90 <col:33> 'struct vm_area_struct *' lvalue ParmVar 0x120128648 'vma' 'struct vm_area_struct *'
        `-DeclStmt 0x106808de8 <line:21:3, col:40>
          `-VarDecl 0x106808d20 <col:3, col:32> col:17 used nstart 'unsigned long' cinit
            `-RecoveryExpr 0x106808dc0 <col:26, col:32> '<dependent type>' contains-errors lvalue
              `-DeclRefExpr 0x106808d88 <col:26> 'struct vm_area_struct *' contains-errors lvalue Var 0x106808c28 'next' 'struct vm_area_struct *'
