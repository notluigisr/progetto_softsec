`-FunctionDecl 0x1589281a8  line:1:12 rtas_error_rc 'int (int)' static
  |-ParmVarDecl 0x1589280d8 <col:26, col:30> col:30 used rtas_rc 'int'
  `-CompoundStmt 0x158941050 <line:2:1, line:28:1>
    |-DeclStmt 0x158928320 <line:3:2, col:8>
    | `-VarDecl 0x1589282b8 <col:2, col:6> col:6 used rc 'int'
    |-SwitchStmt 0x158928370 <line:5:2, line:26:2>
    | |-ImplicitCastExpr 0x158928358 <line:5:10> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x158928338 <col:10> 'int' lvalue ParmVar 0x1589280d8 'rtas_rc' 'int'
    | `-CompoundStmt 0x158940f90 <col:19, line:26:2>
    |   |-CaseStmt 0x1589283e8 <line:6:3, line:7:10>
    |   | |-ConstantExpr 0x1589283d0 <line:6:8, col:9> 'int'
    |   | | `-UnaryOperator 0x1589283b8 <col:8, col:9> 'int' prefix '-'
    |   | |   `-IntegerLiteral 0x158928398 <col:9> 'int' 1
    |   | `-BinaryOperator 0x158928500 <line:7:4, col:10> 'int' contains-errors '='
    |   |   |-DeclRefExpr 0x158928410 <col:4> 'int' lvalue Var 0x1589282b8 'rc' 'int'
    |   |   `-UnaryOperator 0x1589284e8 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |     `-ImplicitCastExpr 0x1589284d0 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    |   |       `-RecoveryExpr 0x1589284b0 <col:10> '<dependent type>' contains-errors lvalue
    |   |-BreakStmt 0x158928520 <line:8:4>
    |   |-CaseStmt 0x158928578 <line:9:3, line:10:10>
    |   | |-ConstantExpr 0x158928560 <line:9:8, col:9> 'int'
    |   | | `-UnaryOperator 0x158928548 <col:8, col:9> 'int' prefix '-'
    |   | |   `-IntegerLiteral 0x158928528 <col:9> 'int' 3
    |   | `-BinaryOperator 0x158928678 <line:10:4, col:10> 'int' contains-errors '='
    |   |   |-DeclRefExpr 0x1589285a0 <col:4> 'int' lvalue Var 0x1589282b8 'rc' 'int'
    |   |   `-UnaryOperator 0x158928660 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |     `-ImplicitCastExpr 0x158928648 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    |   |       `-RecoveryExpr 0x158928628 <col:10> '<dependent type>' contains-errors lvalue
    |   |-BreakStmt 0x158928698 <line:11:4>
    |   |-CaseStmt 0x1589286f0 <line:12:3, line:13:10>
    |   | |-ConstantExpr 0x1589286d8 <line:12:8, col:9> 'int'
    |   | | `-UnaryOperator 0x1589286c0 <col:8, col:9> 'int' prefix '-'
    |   | |   `-IntegerLiteral 0x1589286a0 <col:9> 'int' 9000
    |   | `-BinaryOperator 0x158940a00 <line:13:4, col:10> 'int' contains-errors '='
    |   |   |-DeclRefExpr 0x158928718 <col:4> 'int' lvalue Var 0x1589282b8 'rc' 'int'
    |   |   `-UnaryOperator 0x1589287d8 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |     `-ImplicitCastExpr 0x1589287c0 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    |   |       `-RecoveryExpr 0x1589287a0 <col:10> '<dependent type>' contains-errors lvalue
    |   |-BreakStmt 0x158940a20 <line:14:4>
    |   |-CaseStmt 0x158940a78 <line:15:3, line:16:10>
    |   | |-ConstantExpr 0x158940a60 <line:15:8, col:9> 'int'
    |   | | `-UnaryOperator 0x158940a48 <col:8, col:9> 'int' prefix '-'
    |   | |   `-IntegerLiteral 0x158940a28 <col:9> 'int' 9001
    |   | `-BinaryOperator 0x158940b78 <line:16:4, col:10> 'int' contains-errors '='
    |   |   |-DeclRefExpr 0x158940aa0 <col:4> 'int' lvalue Var 0x1589282b8 'rc' 'int'
    |   |   `-UnaryOperator 0x158940b60 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |     `-ImplicitCastExpr 0x158940b48 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    |   |       `-RecoveryExpr 0x158940b28 <col:10> '<dependent type>' contains-errors lvalue
    |   |-BreakStmt 0x158940b98 <line:17:4>
    |   |-CaseStmt 0x158940bf0 <line:18:3, line:19:10>
    |   | |-ConstantExpr 0x158940bd8 <line:18:8, col:9> 'int'
    |   | | `-UnaryOperator 0x158940bc0 <col:8, col:9> 'int' prefix '-'
    |   | |   `-IntegerLiteral 0x158940ba0 <col:9> 'int' 9002
    |   | `-BinaryOperator 0x158940cf0 <line:19:4, col:10> 'int' contains-errors '='
    |   |   |-DeclRefExpr 0x158940c18 <col:4> 'int' lvalue Var 0x1589282b8 'rc' 'int'
    |   |   `-UnaryOperator 0x158940cd8 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |     `-ImplicitCastExpr 0x158940cc0 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    |   |       `-RecoveryExpr 0x158940ca0 <col:10> '<dependent type>' contains-errors lvalue
    |   |-BreakStmt 0x158940d10 <line:20:4>
    |   |-DefaultStmt 0x158940e70 <line:21:3, col:10>
    |   | `-NullStmt 0x158940e68 <col:10>
    |   |-BinaryOperator 0x158940f68 <line:24:4, col:10> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x158940e90 <col:4> 'int' lvalue Var 0x1589282b8 'rc' 'int'
    |   | `-UnaryOperator 0x158940f50 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |   `-ImplicitCastExpr 0x158940f38 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    |   |     `-RecoveryExpr 0x158940f18 <col:10> '<dependent type>' contains-errors lvalue
    |   `-BreakStmt 0x158940f88 <line:25:4>
    `-ReturnStmt 0x158941040 <line:27:2, col:9>
      `-ImplicitCastExpr 0x158941028 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x158941008 <col:9> 'int' lvalue Var 0x1589282b8 'rc' 'int'
