`-FunctionDecl 0x13c140ab8  line:1:28 find_chunk 'struct audit_chunk *(struct node *)' static
  |-ParmVarDecl 0x13c1286e8 <col:39, col:52> col:52 used p 'struct node *'
  `-CompoundStmt 0x13c140fa8 <line:2:1, line:6:1>
    |-DeclStmt 0x13c140d48 <line:3:2, col:34>
    | `-VarDecl 0x13c140bc8 <col:2, col:33> col:6 used index 'int' cinit
    |   `-BinaryOperator 0x13c140d28 <col:14, col:33> '<dependent type>' contains-errors '&'
    |     |-RecoveryExpr 0x13c140c68 <col:14, col:17> '<dependent type>' contains-errors lvalue
    |     | `-DeclRefExpr 0x13c140c30 <col:14> 'struct node *' lvalue ParmVar 0x13c1286e8 'p' 'struct node *'
    |     `-UnaryOperator 0x13c140d10 <col:25, col:33> 'unsigned int' prefix '~' cannot overflow
    |       `-ParenExpr 0x13c140cf0 <col:26, col:33> 'unsigned int'
    |         `-BinaryOperator 0x13c140cd0 <col:27, col:31> 'unsigned int' '<<'
    |           |-IntegerLiteral 0x13c140c90 <col:27> 'unsigned int' 1
    |           `-IntegerLiteral 0x13c140cb0 <col:31> 'int' 31
    `-ImplicitCastExpr 0x13c140de8 <line:4:2, col:7> '<dependent type>' contains-errors <LValueToRValue>
      `-RecoveryExpr 0x13c140db8 <col:2, col:7> '<dependent type>' contains-errors lvalue
        |-DeclRefExpr 0x13c140d60 <col:2> 'struct node *' lvalue ParmVar 0x13c1286e8 'p' 'struct node *'
        `-DeclRefExpr 0x13c140d80 <col:7> 'int' contains-errors lvalue Var 0x13c140bc8 'index' 'int'
