`-FunctionDecl 0x14680deb8  line:1:12 invalid spl_array_object_count_elements_helper 'int (int *, long *)' static
  |-ParmVarDecl 0x14680dd28 <col:51, col:69> col:69 invalid intern 'int *'
  |-ParmVarDecl 0x14680ddd8 <col:77, col:83> col:83 used count 'long *'
  `-CompoundStmt 0x1478091a8 <line:2:1, line:26:1>
    |-IfStmt 0x147808800 <line:6:2, line:10:2>
    | |-UnaryOperator 0x14680e1c0 <line:6:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x14680e1a8 <col:7> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x14680e188 <col:7> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x14680e3e0 <col:12, line:10:2>
    |   |-BinaryOperator 0x14680e378 <line:8:3, col:12> 'long' '='
    |   | |-UnaryOperator 0x14680e328 <col:3, col:4> 'long' lvalue prefix '*' cannot overflow
    |   | | `-ImplicitCastExpr 0x14680e310 <col:4> 'long *' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x14680e2f0 <col:4> 'long *' lvalue ParmVar 0x14680ddd8 'count' 'long *'
    |   | `-ImplicitCastExpr 0x14680e360 <col:12> 'long' <IntegralCast>
    |   |   `-IntegerLiteral 0x14680e340 <col:12> 'int' 0
    |   `-ReturnStmt 0x14680e3d0 <line:9:3, col:10>
    |     `-RecoveryExpr 0x14680e3b0 <col:10> '<dependent type>' contains-errors lvalue
    `-IfStmt 0x147809178 <line:12:2, line:25:2> has_else
      |-BinaryOperator 0x147808a08 <line:12:6, col:33> 'int' contains-errors '=='
      | |-CallExpr 0x147808988 <col:6, col:28> '<dependent type>' contains-errors
      | | |-DeclRefExpr 0x147808900 <col:6> 'int ()' Function 0x147808848 'Z_TYPE_P' 'int ()'
      | | `-CXXDependentScopeMemberExpr 0x147808940 <col:15, col:23> '<dependent type>' contains-errors lvalue ->array
      | |   `-RecoveryExpr 0x147808920 <col:15> '<dependent type>' contains-errors lvalue
      | `-RecoveryExpr 0x1478089e8 <col:33> '<dependent type>' contains-errors lvalue
      |-CompoundStmt 0x147808ff8 <col:44, line:22:2>
      | |-BinaryOperator 0x147808b18 <line:15:3, col:12> 'long' '='
      | | |-UnaryOperator 0x147808ac8 <col:3, col:4> 'long' lvalue prefix '*' cannot overflow
      | | | `-ImplicitCastExpr 0x147808ab0 <col:4> 'long *' <LValueToRValue>
      | | |   `-DeclRefExpr 0x147808a90 <col:4> 'long *' lvalue ParmVar 0x14680ddd8 'count' 'long *'
      | | `-ImplicitCastExpr 0x147808b00 <col:12> 'long' <IntegralCast>
      | |   `-IntegerLiteral 0x147808ae0 <col:12> 'int' 0
      | `-WhileStmt 0x147808eb8 <line:17:3, line:19:3>
      |   |-RecoveryExpr 0x147808df8 <line:17:9, col:60> '_Bool' contains-errors
      |   `-CompoundStmt 0x147808ea0 <col:69, line:19:3>
      |     `-UnaryOperator 0x147808e88 <line:18:4, col:12> 'long' postfix '++'
      |       `-ParenExpr 0x147808e68 <col:4, col:11> 'long' lvalue
      |         `-UnaryOperator 0x147808e50 <col:5, col:6> 'long' lvalue prefix '*' cannot overflow
      |           `-ImplicitCastExpr 0x147808e38 <col:6> 'long *' <LValueToRValue>
      |             `-DeclRefExpr 0x147808e18 <col:6> 'long *' lvalue ParmVar 0x14680ddd8 'count' 'long *'
      `-CompoundStmt 0x147809168 <line:22:9, line:25:2>
