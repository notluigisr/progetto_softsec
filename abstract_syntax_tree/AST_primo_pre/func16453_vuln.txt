`-FunctionDecl 0x12a928750  line:1:13 fanout_release 'void (struct sock *)' static
  |-ParmVarDecl 0x12a928648 <col:28, col:41> col:41 used sk 'struct sock *'
  `-CompoundStmt 0x12a942db8 <line:2:1, line:23:1>
    |-DeclStmt 0x12a940e48 <line:3:2, col:37>
    | |-RecordDecl 0x12a940a48 <col:2, col:9> col:9 struct packet_sock
    | `-VarDecl 0x12a940bb8 <col:2, col:36> col:22 used po 'struct packet_sock *' cinit
    |   `-ImplicitCastExpr 0x12a940e18 <col:27, col:36> 'struct packet_sock *' <IntegralToPointer>
    |     `-CallExpr 0x12a940dd8 <col:27, col:36> 'int'
    |       |-ImplicitCastExpr 0x12a940dc0 <col:27> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x12a940d50 <col:27> 'int ()' Function 0x12a940c98 'pkt_sk' 'int ()'
    |       `-ImplicitCastExpr 0x12a940e00 <col:34> 'struct sock *' <LValueToRValue>
    |         `-DeclRefExpr 0x12a940d70 <col:34> 'struct sock *' lvalue ParmVar 0x12a928648 'sk' 'struct sock *'
    |-DeclStmt 0x12a941048 <line:4:2, col:25>
    | |-RecordDecl 0x12a940e60 <col:2, col:9> col:9 struct packet_fanout
    | `-VarDecl 0x12a940fc8 <col:2, col:24> col:24 used f 'struct packet_fanout *'
    |-BinaryOperator 0x12a9410e0 <line:6:2, col:10> 'struct packet_fanout *' contains-errors '='
    | |-DeclRefExpr 0x12a941060 <col:2> 'struct packet_fanout *' lvalue Var 0x12a940fc8 'f' 'struct packet_fanout *'
    | `-RecoveryExpr 0x12a9410b8 <col:6, col:10> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x12a941080 <col:6> 'struct packet_sock *' lvalue Var 0x12a940bb8 'po' 'struct packet_sock *'
    |-IfStmt 0x12a941160 <line:7:2, line:8:3>
    | |-UnaryOperator 0x12a941138 <line:7:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x12a941120 <col:7> 'struct packet_fanout *' <LValueToRValue>
    | |   `-DeclRefExpr 0x12a941100 <col:7> 'struct packet_fanout *' lvalue Var 0x12a940fc8 'f' 'struct packet_fanout *'
    | `-ReturnStmt 0x12a941150 <line:8:3>
    |-CallExpr 0x12a941310 <line:10:2, col:26> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12a941260 <col:2> 'int ()' Function 0x12a9411a8 'mutex_lock' 'int ()'
    | `-UnaryOperator 0x12a9412f8 <col:13, col:14> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x12a9412d8 <col:14> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x12a9413f0 <line:11:2, col:15> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x12a941370 <col:2, col:6> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x12a941338 <col:2> 'struct packet_sock *' lvalue Var 0x12a940bb8 'po' 'struct packet_sock *'
    | `-RecoveryExpr 0x12a9413d0 <col:15> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12a942a20 <line:13:2, line:18:2>
    | |-CallExpr 0x12a941588 <line:13:6, col:36> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x12a9414f0 <col:6> 'int ()' Function 0x12a941438 'atomic_dec_and_test' 'int ()'
    | | `-UnaryOperator 0x12a941570 <col:26, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |   `-RecoveryExpr 0x12a941548 <col:27, col:30> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x12a941510 <col:27> 'struct packet_fanout *' lvalue Var 0x12a940fc8 'f' 'struct packet_fanout *'
    | `-CompoundStmt 0x12a9429f0 <col:39, line:18:2>
    |   |-CallExpr 0x12a941728 <line:14:3, col:20> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x12a941690 <col:3> 'int ()' Function 0x12a9415d8 'list_del' 'int ()'
    |   | `-UnaryOperator 0x12a941710 <col:12, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   `-RecoveryExpr 0x12a9416e8 <col:13, col:16> '<dependent type>' contains-errors lvalue
    |   |     `-DeclRefExpr 0x12a9416b0 <col:13> 'struct packet_fanout *' lvalue Var 0x12a940fc8 'f' 'struct packet_fanout *'
    |   |-CallExpr 0x12a9418c8 <line:15:3, col:32> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x12a941830 <col:3> 'int ()' Function 0x12a941778 'dev_remove_pack' 'int ()'
    |   | `-UnaryOperator 0x12a9418b0 <col:19, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   `-RecoveryExpr 0x12a941888 <col:20, col:23> '<dependent type>' contains-errors lvalue
    |   |     `-DeclRefExpr 0x12a941850 <col:20> 'struct packet_fanout *' lvalue Var 0x12a940fc8 'f' 'struct packet_fanout *'
    |   |-CallExpr 0x12a942838 <line:16:3, col:24> 'int'
    |   | |-ImplicitCastExpr 0x12a942820 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x12a9419d0 <col:3> 'int ()' Function 0x12a941918 'fanout_release_data' 'int ()'
    |   | `-ImplicitCastExpr 0x12a942860 <col:23> 'struct packet_fanout *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x12a942800 <col:23> 'struct packet_fanout *' lvalue Var 0x12a940fc8 'f' 'struct packet_fanout *'
    |   `-CallExpr 0x12a9429b0 <line:17:3, col:10> 'int'
    |     |-ImplicitCastExpr 0x12a942998 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x12a942958 <col:3> 'int ()' Function 0x12a9428a0 'kfree' 'int ()'
    |     `-ImplicitCastExpr 0x12a9429d8 <col:9> 'struct packet_fanout *' <LValueToRValue>
    |       `-DeclRefExpr 0x12a942978 <col:9> 'struct packet_fanout *' lvalue Var 0x12a940fc8 'f' 'struct packet_fanout *'
    `-CallExpr 0x12a942bd0 <line:19:2, col:28> '<dependent type>' contains-errors
      |-DeclRefExpr 0x12a942b20 <col:2> 'int ()' Function 0x12a942a68 'mutex_unlock' 'int ()'
      `-UnaryOperator 0x12a942bb8 <col:15, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow
        `-RecoveryExpr 0x12a942b98 <col:16> '<dependent type>' contains-errors lvalue
