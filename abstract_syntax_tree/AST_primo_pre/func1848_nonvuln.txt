`-FunctionDecl 0x13580e350  line:1:13 visor_read_int_callback 'void (struct urb *)' static
  |-ParmVarDecl 0x13580e248 <col:37, col:49> col:49 used urb 'struct urb *'
  `-CompoundStmt 0x13582d750 <line:2:1, line:34:1>
    |-DeclStmt 0x13582aa98 <line:3:2, col:45>
    | |-RecordDecl 0x13582a848 <col:2, col:9> col:9 struct usb_serial_port
    | `-VarDecl 0x13582a9b8 <col:2, col:38> col:26 used port 'struct usb_serial_port *' cinit
    |   `-RecoveryExpr 0x13582aa58 <col:33, col:38> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x13582aa20 <col:33> 'struct urb *' lvalue ParmVar 0x13580e248 'urb' 'struct urb *'
    |-DeclStmt 0x13582ab90 <line:4:2, col:26>
    | `-VarDecl 0x13582aac8 <col:2, col:20> col:6 used status 'int' cinit
    |   `-RecoveryExpr 0x13582ab68 <col:15, col:20> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x13582ab30 <col:15> 'struct urb *' lvalue ParmVar 0x13580e248 'urb' 'struct urb *'
    |-DeclStmt 0x13582ac28 <line:5:2, col:12>
    | `-VarDecl 0x13582abc0 <col:2, col:6> col:6 used result 'int'
    |-SwitchStmt 0x13582ac78 <line:7:2, line:22:2>
    | |-ImplicitCastExpr 0x13582ac60 <line:7:10> 'int' contains-errors <LValueToRValue>
    | | `-DeclRefExpr 0x13582ac40 <col:10> 'int' contains-errors lvalue Var 0x13582aac8 'status' 'int'
    | `-CompoundStmt 0x13582b330 <col:18, line:22:2>
    |   |-CaseStmt 0x13582acd8 <line:8:2, line:10:3>
    |   | |-ConstantExpr 0x13582acc0 <line:8:7> 'int'
    |   | | `-IntegerLiteral 0x13582aca0 <col:7> 'int' 0
    |   | `-BreakStmt 0x13582ad00 <line:10:3>
    |   |-CallExpr 0x13582b0f8 <line:15:3, line:16:20> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x13582af10 <line:15:3> 'int ()' Function 0x13582ae58 'dev_dbg' 'int ()'
    |   | |-UnaryOperator 0x13582af90 <col:11, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | | `-RecoveryExpr 0x13582af68 <col:12, col:18> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x13582af30 <col:12> 'struct usb_serial_port *' contains-errors lvalue Var 0x13582a9b8 'port' 'struct usb_serial_port *'
    |   | |-StringLiteral 0x13582aff0 <col:23> 'char[4]' lvalue "STR"
    |   | |-PredefinedExpr 0x13582b0c0 <line:16:4> 'const char[24]' lvalue __func__
    |   | | `-StringLiteral 0x13582b090 <col:4> 'const char[24]' lvalue "visor_read_int_callback"
    |   | `-DeclRefExpr 0x13582b0d8 <col:14> 'int' contains-errors lvalue Var 0x13582aac8 'status' 'int'
    |   |-ReturnStmt 0x13582b138 <line:17:3>
    |   |-DefaultStmt 0x13582b2a8 <line:18:2, line:20:20>
    |   | `-CallExpr 0x13582b268 <line:19:3, line:20:20> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x13582b148 <line:19:3> 'int ()' Function 0x13582ae58 'dev_dbg' 'int ()'
    |   |   |-UnaryOperator 0x13582b1c8 <col:11, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   | `-RecoveryExpr 0x13582b1a0 <col:12, col:18> '<dependent type>' contains-errors lvalue
    |   |   |   `-DeclRefExpr 0x13582b168 <col:12> 'struct usb_serial_port *' contains-errors lvalue Var 0x13582a9b8 'port' 'struct usb_serial_port *'
    |   |   |-StringLiteral 0x13582b1e0 <col:23> 'char[4]' lvalue "STR"
    |   |   |-PredefinedExpr 0x13582b230 <line:20:4> 'const char[24]' lvalue __func__
    |   |   | `-StringLiteral 0x13582b200 <col:4> 'const char[24]' lvalue "visor_read_int_callback"
    |   |   `-DeclRefExpr 0x13582b248 <col:14> 'int' contains-errors lvalue Var 0x13582aac8 'status' 'int'
    |   `-GotoStmt 0x13582b318 <line:21:3, col:8> 'exit' 0x13582b2c8
    |-CallExpr 0x13582b5e8 <line:25:2, line:26:30> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13582b448 <line:25:2> 'int ()' Function 0x13582b390 'usb_serial_debug_data' 'int ()'
    | |-UnaryOperator 0x13582b4c8 <col:24, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-RecoveryExpr 0x13582b4a0 <col:25, col:31> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x13582b468 <col:25> 'struct usb_serial_port *' contains-errors lvalue Var 0x13582a9b8 'port' 'struct usb_serial_port *'
    | |-PredefinedExpr 0x13582b510 <col:36> 'const char[24]' lvalue __func__
    | | `-StringLiteral 0x13582b4e0 <col:36> 'const char[24]' lvalue "visor_read_int_callback"
    | |-RecoveryExpr 0x13582b560 <col:46, col:51> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x13582b528 <col:46> 'struct urb *' lvalue ParmVar 0x13580e248 'urb' 'struct urb *'
    | `-RecoveryExpr 0x13582b5c0 <line:26:10, col:15> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x13582b588 <col:10> 'struct urb *' lvalue ParmVar 0x13580e248 'urb' 'struct urb *'
    |-LabelStmt 0x13582d450 <line:28:1, line:29:41> 'exit'
    | `-BinaryOperator 0x13582d430 <col:2, col:41> 'int' contains-errors '='
    |   |-DeclRefExpr 0x13582b628 <col:2> 'int' lvalue Var 0x13582abc0 'result' 'int'
    |   `-CallExpr 0x13582d400 <col:11, col:41> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x13582b728 <col:11> 'int ()' Function 0x13582b670 'usb_submit_urb' 'int ()'
    |     |-DeclRefExpr 0x13582b748 <col:26> 'struct urb *' lvalue ParmVar 0x13580e248 'urb' 'struct urb *'
    |     `-RecoveryExpr 0x13582b7d0 <col:31> '<dependent type>' contains-errors lvalue
    `-IfStmt 0x13582d730 <line:30:2, line:33:24>
      |-ImplicitCastExpr 0x13582d490 <line:30:6> 'int' <LValueToRValue>
      | `-DeclRefExpr 0x13582d470 <col:6> 'int' lvalue Var 0x13582abc0 'result' 'int'
      `-CallExpr 0x13582d6f0 <line:31:3, line:33:24> '<dependent type>' contains-errors
        |-DeclRefExpr 0x13582d588 <line:31:3> 'int ()' Function 0x13582d4d0 'dev_err' 'int ()'
        |-UnaryOperator 0x13582d650 <col:11, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow
        | `-CXXDependentScopeMemberExpr 0x13582d608 <col:12, col:22> '<dependent type>' contains-errors lvalue ->dev
        |   `-RecoveryExpr 0x13582d5e0 <col:12, col:17> '<dependent type>' contains-errors lvalue
        |     `-DeclRefExpr 0x13582d5a8 <col:12> 'struct urb *' lvalue ParmVar 0x13580e248 'urb' 'struct urb *'
        |-StringLiteral 0x13582d668 <line:32:5> 'char[4]' lvalue "STR"
        |-PredefinedExpr 0x13582d6b8 <line:33:8> 'const char[24]' lvalue __func__
        | `-StringLiteral 0x13582d688 <col:8> 'const char[24]' lvalue "visor_read_int_callback"
        `-DeclRefExpr 0x13582d6d0 <col:18> 'int' lvalue Var 0x13582abc0 'result' 'int'
