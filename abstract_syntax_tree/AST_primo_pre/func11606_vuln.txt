`-FunctionDecl 0x14800dfa0  line:1:13 invalid add_bytes_l2_c 'void (int *, int *, int *, int)' static
  |-ParmVarDecl 0x14800dd28 <col:28, col:37> col:37 referenced invalid dst 'int *'
  |-ParmVarDecl 0x14800dda8 <col:42, col:51> col:51 invalid src1 'int *'
  |-ParmVarDecl 0x14800de28 <col:57, col:66> col:66 invalid src2 'int *'
  |-ParmVarDecl 0x14800dea8 <col:72, col:76> col:76 used w 'int'
  `-CompoundStmt 0x148027f28 <line:2:1, line:11:1>
    |-DeclStmt 0x14800e0e8 <line:3:5, col:11>
    | `-VarDecl 0x14800e080 <col:5, col:10> col:10 used i 'long'
    |-ForStmt 0x148027bc0 <line:4:5, line:8:5>
    | |-BinaryOperator 0x14800e158 <line:4:10, col:14> 'long' '='
    | | |-DeclRefExpr 0x14800e100 <col:10> 'long' lvalue Var 0x14800e080 'i' 'long'
    | | `-ImplicitCastExpr 0x14800e140 <col:14> 'long' <IntegralCast>
    | |   `-IntegerLiteral 0x14800e120 <col:14> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x14800e270 <col:17, col:37> 'int' '<='
    | | |-ImplicitCastExpr 0x14800e258 <col:17> 'unsigned long' <IntegralCast>
    | | | `-ImplicitCastExpr 0x14800e240 <col:17> 'long' <LValueToRValue>
    | | |   `-DeclRefExpr 0x14800e178 <col:17> 'long' lvalue Var 0x14800e080 'i' 'long'
    | | `-BinaryOperator 0x14800e220 <col:22, col:37> 'unsigned long' '-'
    | |   |-ImplicitCastExpr 0x14800e208 <col:22> 'unsigned long' <IntegralCast>
    | |   | `-ImplicitCastExpr 0x14800e1f0 <col:22> 'int' <LValueToRValue>
    | |   |   `-DeclRefExpr 0x14800e198 <col:22> 'int' lvalue ParmVar 0x14800dea8 'w' 'int'
    | |   `-UnaryExprOrTypeTraitExpr 0x14800e1d0 <col:26, col:37> 'unsigned long' sizeof 'long'
    | |-CompoundAssignOperator 0x14800e2e8 <col:40, col:56> 'long' '+=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
    | | |-DeclRefExpr 0x14800e290 <col:40> 'long' lvalue Var 0x14800e080 'i' 'long'
    | | `-UnaryExprOrTypeTraitExpr 0x14800e2c8 <col:45, col:56> 'unsigned long' sizeof 'long'
    | `-CompoundStmt 0x148027ba0 <col:59, line:8:5>
    |   |-DeclStmt 0x1480276e0 <line:5:9, col:37>
    |   | `-VarDecl 0x14800e330 <col:9, col:36> col:14 used a 'long' cinit
    |   |   `-ImplicitCastExpr 0x1480276c8 <col:18, col:36> 'long' contains-errors <LValueToRValue>
    |   |     `-UnaryOperator 0x1480276b0 <col:18, col:36> 'long' contains-errors lvalue prefix '*' cannot overflow
    |   |       `-CStyleCastExpr 0x148027688 <col:19, col:36> 'long *' contains-errors <Dependent>
    |   |         `-ParenExpr 0x148027668 <col:27, col:36> '<dependent type>' contains-errors
    |   |           `-BinaryOperator 0x14800e3d8 <col:28, col:35> '<dependent type>' contains-errors '+'
    |   |             |-RecoveryExpr 0x14800e398 <col:28> '<dependent type>' contains-errors lvalue
    |   |             `-DeclRefExpr 0x14800e3b8 <col:35> 'long' lvalue Var 0x14800e080 'i' 'long'
    |   `-DeclStmt 0x148027888 <line:6:9, col:37>
    |     `-VarDecl 0x148027710 <col:9, col:36> col:14 used b 'long' cinit
    |       `-ImplicitCastExpr 0x148027870 <col:18, col:36> 'long' contains-errors <LValueToRValue>
    |         `-UnaryOperator 0x148027858 <col:18, col:36> 'long' contains-errors lvalue prefix '*' cannot overflow
    |           `-CStyleCastExpr 0x148027830 <col:19, col:36> 'long *' contains-errors <Dependent>
    |             `-ParenExpr 0x148027810 <col:27, col:36> '<dependent type>' contains-errors
    |               `-BinaryOperator 0x1480277b8 <col:28, col:35> '<dependent type>' contains-errors '+'
    |                 |-RecoveryExpr 0x148027778 <col:28> '<dependent type>' contains-errors lvalue
    |                 `-DeclRefExpr 0x148027798 <col:35> 'long' lvalue Var 0x14800e080 'i' 'long'
    `-ForStmt 0x148027ef0 <line:9:5, line:10:34>
      |-<<<NULL>>>
      |-<<<NULL>>>
      |-BinaryOperator 0x148027c80 <line:9:12, col:16> 'int' '<'
      | |-ImplicitCastExpr 0x148027c38 <col:12> 'long' <LValueToRValue>
      | | `-DeclRefExpr 0x148027bf8 <col:12> 'long' lvalue Var 0x14800e080 'i' 'long'
      | `-ImplicitCastExpr 0x148027c68 <col:16> 'long' <IntegralCast>
      |   `-ImplicitCastExpr 0x148027c50 <col:16> 'int' <LValueToRValue>
      |     `-DeclRefExpr 0x148027c18 <col:16> 'int' lvalue ParmVar 0x14800dea8 'w' 'int'
      |-UnaryOperator 0x148027cc0 <col:19, col:20> 'long' postfix '++'
      | `-DeclRefExpr 0x148027ca0 <col:19> 'long' lvalue Var 0x14800e080 'i' 'long'
      `-BinaryOperator 0x148027ed0 <line:10:9, col:34> '<dependent type>' contains-errors '='
        |-ArraySubscriptExpr 0x148027d70 <col:9, col:14> '<dependent type>' contains-errors lvalue
        | |-ImplicitCastExpr 0x148027d40 <col:9> '<dependent type>' contains-errors <LValueToRValue>
        | | `-RecoveryExpr 0x148027cf8 <col:9> '<dependent type>' contains-errors lvalue
        | |   `-DeclRefExpr 0x148027cd8 <col:9> 'int *' lvalue ParmVar 0x14800dd28 'dst' 'int *'
        | `-ImplicitCastExpr 0x148027d58 <col:13> 'long' <LValueToRValue>
        |   `-DeclRefExpr 0x148027d20 <col:13> 'long' lvalue Var 0x14800e080 'i' 'long'
        `-BinaryOperator 0x148027eb0 <col:18, col:34> '<dependent type>' contains-errors '+'
          |-ArraySubscriptExpr 0x148027e00 <col:18, col:24> '<dependent type>' contains-errors lvalue
          | |-ImplicitCastExpr 0x148027dd0 <col:18> '<dependent type>' contains-errors <LValueToRValue>
          | | `-RecoveryExpr 0x148027d90 <col:18> '<dependent type>' contains-errors lvalue
          | `-ImplicitCastExpr 0x148027de8 <col:23> 'long' <LValueToRValue>
          |   `-DeclRefExpr 0x148027db0 <col:23> 'long' lvalue Var 0x14800e080 'i' 'long'
          `-ArraySubscriptExpr 0x148027e90 <col:28, col:34> '<dependent type>' contains-errors lvalue
            |-ImplicitCastExpr 0x148027e60 <col:28> '<dependent type>' contains-errors <LValueToRValue>
            | `-RecoveryExpr 0x148027e20 <col:28> '<dependent type>' contains-errors lvalue
            `-ImplicitCastExpr 0x148027e78 <col:33> 'long' <LValueToRValue>
              `-DeclRefExpr 0x148027e40 <col:33> 'long' lvalue Var 0x14800e080 'i' 'long'
