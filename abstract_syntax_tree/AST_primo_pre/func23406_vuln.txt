`-FunctionDecl 0x12900dea8  line:1:1 asn1_get_packed 'int (unsigned char **, unsigned char *)'
  |-ParmVarDecl 0x12900dd40 <line:2:5, col:21> col:21 used buffer 'unsigned char **'
  |-ParmVarDecl 0x12900ddc0 <line:3:5, col:20> col:20 used bufend 'unsigned char *'
  `-CompoundStmt 0x129026af8 <line:4:1, line:23:1>
    |-DeclStmt 0x12900e028 <line:5:3, col:12>
    | `-VarDecl 0x12900dfc0 <col:3, col:7> col:7 used value 'int'
    |-BinaryOperator 0x12900e080 <line:8:3, col:11> 'int' '='
    | |-DeclRefExpr 0x12900e040 <col:3> 'int' lvalue Var 0x12900dfc0 'value' 'int'
    | `-IntegerLiteral 0x12900e060 <col:11> 'int' 0
    |-WhileStmt 0x129026740 <line:10:3, line:14:3>
    | |-BinaryOperator 0x12900e270 <line:10:10, col:40> 'int' '&&'
    | | |-ParenExpr 0x12900e190 <col:10, col:25> 'int'
    | | | `-BinaryOperator 0x12900e170 <col:11, col:22> 'int' '&'
    | | |   |-ImplicitCastExpr 0x12900e158 <col:11, col:13> 'int' <IntegralCast>
    | | |   | `-ImplicitCastExpr 0x12900e140 <col:11, col:13> 'unsigned char' <LValueToRValue>
    | | |   |   `-UnaryOperator 0x12900e108 <col:11, col:13> 'unsigned char' lvalue prefix '*' cannot overflow
    | | |   |     `-ImplicitCastExpr 0x12900e0f0 <col:12, col:13> 'unsigned char *' <LValueToRValue>
    | | |   |       `-UnaryOperator 0x12900e0d8 <col:12, col:13> 'unsigned char *' lvalue prefix '*' cannot overflow
    | | |   |         `-ImplicitCastExpr 0x12900e0c0 <col:13> 'unsigned char **' <LValueToRValue>
    | | |   |           `-DeclRefExpr 0x12900e0a0 <col:13> 'unsigned char **' lvalue ParmVar 0x12900dd40 'buffer' 'unsigned char **'
    | | |   `-IntegerLiteral 0x12900e120 <col:22> 'int' 128
    | | `-BinaryOperator 0x12900e250 <col:30, col:40> 'int' '<'
    | |   |-ImplicitCastExpr 0x12900e220 <col:30, col:31> 'unsigned char *' <LValueToRValue>
    | |   | `-UnaryOperator 0x12900e1e8 <col:30, col:31> 'unsigned char *' lvalue prefix '*' cannot overflow
    | |   |   `-ImplicitCastExpr 0x12900e1d0 <col:31> 'unsigned char **' <LValueToRValue>
    | |   |     `-DeclRefExpr 0x12900e1b0 <col:31> 'unsigned char **' lvalue ParmVar 0x12900dd40 'buffer' 'unsigned char **'
    | |   `-ImplicitCastExpr 0x12900e238 <col:40> 'unsigned char *' <LValueToRValue>
    | |     `-DeclRefExpr 0x12900e200 <col:40> 'unsigned char *' lvalue ParmVar 0x12900ddc0 'bufend' 'unsigned char *'
    | `-CompoundStmt 0x129026720 <line:11:3, line:14:3>
    |   |-BinaryOperator 0x129026678 <line:12:5, col:43> 'int' '='
    |   | |-DeclRefExpr 0x12900e290 <col:5> 'int' lvalue Var 0x12900dfc0 'value' 'int'
    |   | `-BinaryOperator 0x129026658 <col:13, col:43> 'int' '|'
    |   |   |-ParenExpr 0x12900e328 <col:13, col:24> 'int'
    |   |   | `-BinaryOperator 0x12900e308 <col:14, col:23> 'int' '<<'
    |   |   |   |-ImplicitCastExpr 0x12900e2f0 <col:14> 'int' <LValueToRValue>
    |   |   |   | `-DeclRefExpr 0x12900e2b0 <col:14> 'int' lvalue Var 0x12900dfc0 'value' 'int'
    |   |   |   `-IntegerLiteral 0x12900e2d0 <col:23> 'int' 7
    |   |   `-ParenExpr 0x129026638 <col:28, col:43> 'int'
    |   |     `-BinaryOperator 0x129026618 <col:29, col:40> 'int' '&'
    |   |       |-ImplicitCastExpr 0x129026600 <col:29, col:31> 'int' <IntegralCast>
    |   |       | `-ImplicitCastExpr 0x12900e3e8 <col:29, col:31> 'unsigned char' <LValueToRValue>
    |   |       |   `-UnaryOperator 0x12900e3b0 <col:29, col:31> 'unsigned char' lvalue prefix '*' cannot overflow
    |   |       |     `-ImplicitCastExpr 0x12900e398 <col:30, col:31> 'unsigned char *' <LValueToRValue>
    |   |       |       `-UnaryOperator 0x12900e380 <col:30, col:31> 'unsigned char *' lvalue prefix '*' cannot overflow
    |   |       |         `-ImplicitCastExpr 0x12900e368 <col:31> 'unsigned char **' <LValueToRValue>
    |   |       |           `-DeclRefExpr 0x12900e348 <col:31> 'unsigned char **' lvalue ParmVar 0x12900dd40 'buffer' 'unsigned char **'
    |   |       `-IntegerLiteral 0x12900e3c8 <col:40> 'int' 127
    |   `-UnaryOperator 0x129026708 <line:13:5, col:15> 'unsigned char *' postfix '++'
    |     `-ParenExpr 0x1290266e8 <col:5, col:13> 'unsigned char *' lvalue
    |       `-UnaryOperator 0x1290266d0 <col:6, col:7> 'unsigned char *' lvalue prefix '*' cannot overflow
    |         `-ImplicitCastExpr 0x1290266b8 <col:7> 'unsigned char **' <LValueToRValue>
    |           `-DeclRefExpr 0x129026698 <col:7> 'unsigned char **' lvalue ParmVar 0x12900dd40 'buffer' 'unsigned char **'
    |-IfStmt 0x129026a70 <line:16:3, line:20:3>
    | |-BinaryOperator 0x129026800 <line:16:7, col:17> 'int' '<'
    | | |-ImplicitCastExpr 0x1290267d0 <col:7, col:8> 'unsigned char *' <LValueToRValue>
    | | | `-UnaryOperator 0x129026798 <col:7, col:8> 'unsigned char *' lvalue prefix '*' cannot overflow
    | | |   `-ImplicitCastExpr 0x129026780 <col:8> 'unsigned char **' <LValueToRValue>
    | | |     `-DeclRefExpr 0x129026760 <col:8> 'unsigned char **' lvalue ParmVar 0x12900dd40 'buffer' 'unsigned char **'
    | | `-ImplicitCastExpr 0x1290267e8 <col:17> 'unsigned char *' <LValueToRValue>
    | |   `-DeclRefExpr 0x1290267b0 <col:17> 'unsigned char *' lvalue ParmVar 0x12900ddc0 'bufend' 'unsigned char *'
    | `-CompoundStmt 0x129026a50 <line:17:3, line:20:3>
    |   |-BinaryOperator 0x1290269a8 <line:18:5, col:30> 'int' '='
    |   | |-DeclRefExpr 0x129026820 <col:5> 'int' lvalue Var 0x12900dfc0 'value' 'int'
    |   | `-BinaryOperator 0x129026988 <col:13, col:30> 'int' '|'
    |   |   |-ParenExpr 0x1290268b8 <col:13, col:24> 'int'
    |   |   | `-BinaryOperator 0x129026898 <col:14, col:23> 'int' '<<'
    |   |   |   |-ImplicitCastExpr 0x129026880 <col:14> 'int' <LValueToRValue>
    |   |   |   | `-DeclRefExpr 0x129026840 <col:14> 'int' lvalue Var 0x12900dfc0 'value' 'int'
    |   |   |   `-IntegerLiteral 0x129026860 <col:23> 'int' 7
    |   |   `-ImplicitCastExpr 0x129026970 <col:28, col:30> 'int' <IntegralCast>
    |   |     `-ImplicitCastExpr 0x129026958 <col:28, col:30> 'unsigned char' <LValueToRValue>
    |   |       `-UnaryOperator 0x129026940 <col:28, col:30> 'unsigned char' lvalue prefix '*' cannot overflow
    |   |         `-ImplicitCastExpr 0x129026928 <col:29, col:30> 'unsigned char *' <LValueToRValue>
    |   |           `-UnaryOperator 0x129026910 <col:29, col:30> 'unsigned char *' lvalue prefix '*' cannot overflow
    |   |             `-ImplicitCastExpr 0x1290268f8 <col:30> 'unsigned char **' <LValueToRValue>
    |   |               `-DeclRefExpr 0x1290268d8 <col:30> 'unsigned char **' lvalue ParmVar 0x12900dd40 'buffer' 'unsigned char **'
    |   `-UnaryOperator 0x129026a38 <line:19:5, col:15> 'unsigned char *' postfix '++'
    |     `-ParenExpr 0x129026a18 <col:5, col:13> 'unsigned char *' lvalue
    |       `-UnaryOperator 0x129026a00 <col:6, col:7> 'unsigned char *' lvalue prefix '*' cannot overflow
    |         `-ImplicitCastExpr 0x1290269e8 <col:7> 'unsigned char **' <LValueToRValue>
    |           `-DeclRefExpr 0x1290269c8 <col:7> 'unsigned char **' lvalue ParmVar 0x12900dd40 'buffer' 'unsigned char **'
    `-ReturnStmt 0x129026ae8 <line:22:3, col:16>
      `-ImplicitCastExpr 0x129026ad0 <col:10, col:16> 'int' <LValueToRValue>
        `-ParenExpr 0x129026ab0 <col:10, col:16> 'int' lvalue
          `-DeclRefExpr 0x129026a90 <col:11> 'int' lvalue Var 0x12900dfc0 'value' 'int'
