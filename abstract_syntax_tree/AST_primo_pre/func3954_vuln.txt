`-FunctionDecl 0x120140a38  line:1:5 rose_parse_facilities 'int (unsigned char *, struct rose_facilities_struct *)'
  |-ParmVarDecl 0x120128108 <col:27, col:42> col:42 used p 'unsigned char *'
  |-ParmVarDecl 0x1201286f8 <line:2:2, col:33> col:33 used facilities 'struct rose_facilities_struct *'
  `-CompoundStmt 0x120143220 <line:3:1, line:44:1>
    |-DeclStmt 0x120140c50 <line:4:2, col:25>
    | |-VarDecl 0x120140b50 <col:2, col:6> col:6 used facilities_len 'int'
    | `-VarDecl 0x120140bd0 <col:2, col:22> col:22 used len 'int'
    |-BinaryOperator 0x120140d08 <line:6:2, col:21> 'int' '='
    | |-DeclRefExpr 0x120140c68 <col:2> 'int' lvalue Var 0x120140b50 'facilities_len' 'int'
    | `-ImplicitCastExpr 0x120140cf0 <col:19, col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x120140cd8 <col:19, col:21> 'unsigned char' <LValueToRValue>
    |     `-UnaryOperator 0x120140cc0 <col:19, col:21> 'unsigned char' lvalue prefix '*' cannot overflow
    |       `-UnaryOperator 0x120140ca8 <col:20, col:21> 'unsigned char *' postfix '++'
    |         `-DeclRefExpr 0x120140c88 <col:20> 'unsigned char *' lvalue ParmVar 0x120128108 'p' 'unsigned char *'
    |-IfStmt 0x120140dd0 <line:8:2, line:9:10>
    | |-BinaryOperator 0x120140d80 <line:8:6, col:24> 'int' '=='
    | | |-ImplicitCastExpr 0x120140d68 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x120140d28 <col:6> 'int' lvalue Var 0x120140b50 'facilities_len' 'int'
    | | `-IntegerLiteral 0x120140d48 <col:24> 'int' 0
    | `-ReturnStmt 0x120140dc0 <line:9:3, col:10>
    |   `-IntegerLiteral 0x120140da0 <col:10> 'int' 0
    |-WhileStmt 0x1201431d0 <line:11:2, line:41:2>
    | |-BinaryOperator 0x120140e48 <line:11:9, col:26> 'int' '>'
    | | |-ImplicitCastExpr 0x120140e30 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x120140df0 <col:9> 'int' lvalue Var 0x120140b50 'facilities_len' 'int'
    | | `-IntegerLiteral 0x120140e10 <col:26> 'int' 0
    | `-CompoundStmt 0x1201431b8 <col:29, line:41:2>
    |   `-IfStmt 0x120143188 <line:12:3, line:40:4> has_else
    |     |-BinaryOperator 0x120140f08 <line:12:7, col:13> 'int' '=='
    |     | |-ImplicitCastExpr 0x120140ef0 <col:7, col:8> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x120140ed8 <col:7, col:8> 'unsigned char' <LValueToRValue>
    |     | |   `-UnaryOperator 0x120140ea0 <col:7, col:8> 'unsigned char' lvalue prefix '*' cannot overflow
    |     | |     `-ImplicitCastExpr 0x120140e88 <col:8> 'unsigned char *' <LValueToRValue>
    |     | |       `-DeclRefExpr 0x120140e68 <col:8> 'unsigned char *' lvalue ParmVar 0x120128108 'p' 'unsigned char *'
    |     | `-IntegerLiteral 0x120140eb8 <col:13> 'int' 0
    |     |-CompoundStmt 0x120143158 <col:19, line:39:3>
    |     | |-UnaryOperator 0x120140f48 <line:13:4, col:18> 'int' postfix '--'
    |     | | `-DeclRefExpr 0x120140f28 <col:4> 'int' lvalue Var 0x120140b50 'facilities_len' 'int'
    |     | |-UnaryOperator 0x120140f80 <line:14:4, col:5> 'unsigned char *' postfix '++'
    |     | | `-DeclRefExpr 0x120140f60 <col:4> 'unsigned char *' lvalue ParmVar 0x120128108 'p' 'unsigned char *'
    |     | `-SwitchStmt 0x120141018 <line:16:4, line:38:4>
    |     |   |-ImplicitCastExpr 0x120141000 <line:16:12, col:13> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x120140fe8 <col:12, col:13> 'unsigned char' <LValueToRValue>
    |     |   |   `-UnaryOperator 0x120140fd0 <col:12, col:13> 'unsigned char' lvalue prefix '*' cannot overflow
    |     |   |     `-ImplicitCastExpr 0x120140fb8 <col:13> 'unsigned char *' <LValueToRValue>
    |     |   |       `-DeclRefExpr 0x120140f98 <col:13> 'unsigned char *' lvalue ParmVar 0x120128108 'p' 'unsigned char *'
    |     |   `-CompoundStmt 0x1201430d8 <col:16, line:38:4>
    |     |     |-BinaryOperator 0x120141368 <line:18:5, col:68> 'int' '='
    |     |     | |-DeclRefExpr 0x120141070 <col:5> 'int' lvalue Var 0x120140bd0 'len' 'int'
    |     |     | `-CallExpr 0x120141318 <col:11, col:68> 'int'
    |     |     |   |-ImplicitCastExpr 0x120141300 <col:11> 'int (*)()' <FunctionToPointerDecay>
    |     |     |   | `-DeclRefExpr 0x1201411a0 <col:11> 'int ()' Function 0x1201410e8 'rose_parse_national' 'int ()'
    |     |     |   |-BinaryOperator 0x120141218 <col:31, col:35> 'unsigned char *' '+'
    |     |     |   | |-ImplicitCastExpr 0x120141200 <col:31> 'unsigned char *' <LValueToRValue>
    |     |     |   | | `-DeclRefExpr 0x1201411c0 <col:31> 'unsigned char *' lvalue ParmVar 0x120128108 'p' 'unsigned char *'
    |     |     |   | `-IntegerLiteral 0x1201411e0 <col:35> 'int' 1
    |     |     |   |-ImplicitCastExpr 0x120141350 <col:38> 'struct rose_facilities_struct *' <LValueToRValue>
    |     |     |   | `-DeclRefExpr 0x120141238 <col:38> 'struct rose_facilities_struct *' lvalue ParmVar 0x1201286f8 'facilities' 'struct rose_facilities_struct *'
    |     |     |   `-BinaryOperator 0x1201412b0 <col:50, col:67> 'int' '-'
    |     |     |     |-ImplicitCastExpr 0x120141298 <col:50> 'int' <LValueToRValue>
    |     |     |     | `-DeclRefExpr 0x120141258 <col:50> 'int' lvalue Var 0x120140b50 'facilities_len' 'int'
    |     |     |     `-IntegerLiteral 0x120141278 <col:67> 'int' 1
    |     |     |-IfStmt 0x120141430 <line:19:5, line:20:13>
    |     |     | |-BinaryOperator 0x1201413e0 <line:19:9, col:15> 'int' '<'
    |     |     | | |-ImplicitCastExpr 0x1201413c8 <col:9> 'int' <LValueToRValue>
    |     |     | | | `-DeclRefExpr 0x120141388 <col:9> 'int' lvalue Var 0x120140bd0 'len' 'int'
    |     |     | | `-IntegerLiteral 0x1201413a8 <col:15> 'int' 0
    |     |     | `-ReturnStmt 0x120141420 <line:20:6, col:13>
    |     |     |   `-IntegerLiteral 0x120141400 <col:13> 'int' 0
    |     |     |-CompoundAssignOperator 0x1201414e8 <line:21:5, col:29> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
    |     |     | |-DeclRefExpr 0x120141450 <col:5> 'int' lvalue Var 0x120140b50 'facilities_len' 'int'
    |     |     | `-BinaryOperator 0x1201414c8 <col:23, col:29> 'int' '+'
    |     |     |   |-ImplicitCastExpr 0x1201414b0 <col:23> 'int' <LValueToRValue>
    |     |     |   | `-DeclRefExpr 0x120141470 <col:23> 'int' lvalue Var 0x120140bd0 'len' 'int'
    |     |     |   `-IntegerLiteral 0x120141490 <col:29> 'int' 1
    |     |     |-CompoundAssignOperator 0x1201415b0 <line:22:5, col:16> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
    |     |     | |-DeclRefExpr 0x120141518 <col:5> 'unsigned char *' lvalue ParmVar 0x120128108 'p' 'unsigned char *'
    |     |     | `-BinaryOperator 0x120141590 <col:10, col:16> 'int' '+'
    |     |     |   |-ImplicitCastExpr 0x120141578 <col:10> 'int' <LValueToRValue>
    |     |     |   | `-DeclRefExpr 0x120141538 <col:10> 'int' lvalue Var 0x120140bd0 'len' 'int'
    |     |     |   `-IntegerLiteral 0x120141558 <col:16> 'int' 1
    |     |     |-BreakStmt 0x1201415e0 <line:23:5>
    |     |     |-BinaryOperator 0x120141898 <line:26:5, col:65> 'int' '='
    |     |     | |-DeclRefExpr 0x120141600 <col:5> 'int' lvalue Var 0x120140bd0 'len' 'int'
    |     |     | `-CallExpr 0x120141848 <col:11, col:65> 'int'
    |     |     |   |-ImplicitCastExpr 0x120141830 <col:11> 'int (*)()' <FunctionToPointerDecay>
    |     |     |   | `-DeclRefExpr 0x120141700 <col:11> 'int ()' Function 0x120141648 'rose_parse_ccitt' 'int ()'
    |     |     |   |-BinaryOperator 0x120141778 <col:28, col:32> 'unsigned char *' '+'
    |     |     |   | |-ImplicitCastExpr 0x120141760 <col:28> 'unsigned char *' <LValueToRValue>
    |     |     |   | | `-DeclRefExpr 0x120141720 <col:28> 'unsigned char *' lvalue ParmVar 0x120128108 'p' 'unsigned char *'
    |     |     |   | `-IntegerLiteral 0x120141740 <col:32> 'int' 1
    |     |     |   |-ImplicitCastExpr 0x120141880 <col:35> 'struct rose_facilities_struct *' <LValueToRValue>
    |     |     |   | `-DeclRefExpr 0x120141798 <col:35> 'struct rose_facilities_struct *' lvalue ParmVar 0x1201286f8 'facilities' 'struct rose_facilities_struct *'
    |     |     |   `-BinaryOperator 0x120141810 <col:47, col:64> 'int' '-'
    |     |     |     |-ImplicitCastExpr 0x1201417f8 <col:47> 'int' <LValueToRValue>
    |     |     |     | `-DeclRefExpr 0x1201417b8 <col:47> 'int' lvalue Var 0x120140b50 'facilities_len' 'int'
    |     |     |     `-IntegerLiteral 0x1201417d8 <col:64> 'int' 1
    |     |     |-IfStmt 0x120141960 <line:27:5, line:28:13>
    |     |     | |-BinaryOperator 0x120141910 <line:27:9, col:15> 'int' '<'
    |     |     | | |-ImplicitCastExpr 0x1201418f8 <col:9> 'int' <LValueToRValue>
    |     |     | | | `-DeclRefExpr 0x1201418b8 <col:9> 'int' lvalue Var 0x120140bd0 'len' 'int'
    |     |     | | `-IntegerLiteral 0x1201418d8 <col:15> 'int' 0
    |     |     | `-ReturnStmt 0x120141950 <line:28:6, col:13>
    |     |     |   `-IntegerLiteral 0x120141930 <col:13> 'int' 0
    |     |     |-CompoundAssignOperator 0x120142e20 <line:29:5, col:29> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
    |     |     | |-DeclRefExpr 0x120141980 <col:5> 'int' lvalue Var 0x120140b50 'facilities_len' 'int'
    |     |     | `-BinaryOperator 0x120142e00 <col:23, col:29> 'int' '+'
    |     |     |   |-ImplicitCastExpr 0x1201419e0 <col:23> 'int' <LValueToRValue>
    |     |     |   | `-DeclRefExpr 0x1201419a0 <col:23> 'int' lvalue Var 0x120140bd0 'len' 'int'
    |     |     |   `-IntegerLiteral 0x1201419c0 <col:29> 'int' 1
    |     |     |-CompoundAssignOperator 0x120142ee8 <line:30:5, col:16> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
    |     |     | |-DeclRefExpr 0x120142e50 <col:5> 'unsigned char *' lvalue ParmVar 0x120128108 'p' 'unsigned char *'
    |     |     | `-BinaryOperator 0x120142ec8 <col:10, col:16> 'int' '+'
    |     |     |   |-ImplicitCastExpr 0x120142eb0 <col:10> 'int' <LValueToRValue>
    |     |     |   | `-DeclRefExpr 0x120142e70 <col:10> 'int' lvalue Var 0x120140bd0 'len' 'int'
    |     |     |   `-IntegerLiteral 0x120142e90 <col:16> 'int' 1
    |     |     |-BreakStmt 0x120142f18 <line:31:5>
    |     |     |-DefaultStmt 0x120143040 <line:33:4, col:11>
    |     |     | `-NullStmt 0x120143038 <col:11>
    |     |     |-UnaryOperator 0x120143080 <line:35:5, col:19> 'int' postfix '--'
    |     |     | `-DeclRefExpr 0x120143060 <col:5> 'int' lvalue Var 0x120140b50 'facilities_len' 'int'
    |     |     |-UnaryOperator 0x1201430b8 <line:36:5, col:6> 'unsigned char *' postfix '++'
    |     |     | `-DeclRefExpr 0x120143098 <col:5> 'unsigned char *' lvalue ParmVar 0x120128108 'p' 'unsigned char *'
    |     |     `-BreakStmt 0x1201430d0 <line:37:5>
    |     `-BreakStmt 0x120143180 <line:40:4>
    `-ReturnStmt 0x120143210 <line:43:2, col:9>
      `-IntegerLiteral 0x1201431f0 <col:9> 'int' 1
