`-FunctionDecl 0x139030ac8  line:1:19 tmff_scale_u16 'int (unsigned int, int, int)' static inline
  |-ParmVarDecl 0x1390308d8 <col:34, col:47> col:47 used in 'unsigned int'
  |-ParmVarDecl 0x139030958 <col:51, col:55> col:55 used minimum 'int'
  |-ParmVarDecl 0x1390309d8 <col:64, col:68> col:68 used maximum 'int'
  `-CompoundStmt 0x139053f00 <line:2:1, line:11:1>
    |-DeclStmt 0x139030c50 <line:3:2, col:9>
    | `-VarDecl 0x139030be8 <col:2, col:6> col:6 used ret 'int'
    |-BinaryOperator 0x139030ea8 <line:5:2, col:46> 'int' '='
    | |-DeclRefExpr 0x139030c68 <col:2> 'int' lvalue Var 0x139030be8 'ret' 'int'
    | `-ImplicitCastExpr 0x139030e90 <col:8, col:46> 'int' <IntegralCast>
    |   `-BinaryOperator 0x139030e70 <col:8, col:46> 'unsigned int' '+'
    |     |-ParenExpr 0x139030e00 <col:8, col:42> 'unsigned int'
    |     | `-BinaryOperator 0x139030de0 <col:9, col:36> 'unsigned int' '/'
    |     |   |-BinaryOperator 0x139030d88 <col:9, col:32> 'unsigned int' '*'
    |     |   | |-ImplicitCastExpr 0x139030d58 <col:9> 'unsigned int' <LValueToRValue>
    |     |   | | `-DeclRefExpr 0x139030c88 <col:9> 'unsigned int' lvalue ParmVar 0x1390308d8 'in' 'unsigned int'
    |     |   | `-ImplicitCastExpr 0x139030d70 <col:14, col:32> 'unsigned int' <IntegralCast>
    |     |   |   `-ParenExpr 0x139030d38 <col:14, col:32> 'int'
    |     |   |     `-BinaryOperator 0x139030d18 <col:15, col:25> 'int' '-'
    |     |   |       |-ImplicitCastExpr 0x139030ce8 <col:15> 'int' <LValueToRValue>
    |     |   |       | `-DeclRefExpr 0x139030ca8 <col:15> 'int' lvalue ParmVar 0x1390309d8 'maximum' 'int'
    |     |   |       `-ImplicitCastExpr 0x139030d00 <col:25> 'int' <LValueToRValue>
    |     |   |         `-DeclRefExpr 0x139030cc8 <col:25> 'int' lvalue ParmVar 0x139030958 'minimum' 'int'
    |     |   `-ImplicitCastExpr 0x139030dc8 <col:36> 'unsigned int' <IntegralCast>
    |     |     `-IntegerLiteral 0x139030da8 <col:36> 'int' 65535
    |     `-ImplicitCastExpr 0x139030e58 <col:46> 'unsigned int' <IntegralCast>
    |       `-ImplicitCastExpr 0x139030e40 <col:46> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x139030e20 <col:46> 'int' lvalue ParmVar 0x139030958 'minimum' 'int'
    |-IfStmt 0x139030fa0 <line:6:2, line:7:10>
    | |-BinaryOperator 0x139030f38 <line:6:6, col:12> 'int' '<'
    | | |-ImplicitCastExpr 0x139030f08 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x139030ec8 <col:6> 'int' lvalue Var 0x139030be8 'ret' 'int'
    | | `-ImplicitCastExpr 0x139030f20 <col:12> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x139030ee8 <col:12> 'int' lvalue ParmVar 0x139030958 'minimum' 'int'
    | `-ReturnStmt 0x139030f90 <line:7:3, col:10>
    |   `-ImplicitCastExpr 0x139030f78 <col:10> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x139030f58 <col:10> 'int' lvalue ParmVar 0x139030958 'minimum' 'int'
    |-IfStmt 0x139053e98 <line:8:2, line:9:10>
    | |-BinaryOperator 0x139053e30 <line:8:6, col:12> 'int' '>'
    | | |-ImplicitCastExpr 0x139053e00 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x139030fc0 <col:6> 'int' lvalue Var 0x139030be8 'ret' 'int'
    | | `-ImplicitCastExpr 0x139053e18 <col:12> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x139030fe0 <col:12> 'int' lvalue ParmVar 0x1390309d8 'maximum' 'int'
    | `-ReturnStmt 0x139053e88 <line:9:3, col:10>
    |   `-ImplicitCastExpr 0x139053e70 <col:10> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x139053e50 <col:10> 'int' lvalue ParmVar 0x1390309d8 'maximum' 'int'
    `-ReturnStmt 0x139053ef0 <line:10:2, col:9>
      `-ImplicitCastExpr 0x139053ed8 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x139053eb8 <col:9> 'int' lvalue Var 0x139030be8 'ret' 'int'
