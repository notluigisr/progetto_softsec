`-FunctionDecl 0x1430f4918  line:1:12 invalid ima_adpcm_decode_block 'int (int *, int *, int *)' static
  |-ParmVarDecl 0x1430f4728 <col:36, col:52> col:52 invalid ima 'int *'
  |-ParmVarDecl 0x1430f47a8 <col:57, col:66> col:66 referenced invalid encoded 'int *'
  |-ParmVarDecl 0x1430f4828 <line:2:2, col:11> col:11 invalid decoded 'int *'
  `-CompoundStmt 0x14310eb68 <line:3:1, line:24:1>
    |-DeclStmt 0x1430f4a58 <line:4:2, col:18>
    | `-VarDecl 0x1430f49f0 <col:2, col:6> col:6 used outputLength 'int'
    |-DeclStmt 0x14310e028 <line:6:2, col:26>
    | |-RecordDecl 0x1430f4a70 <col:2, col:9> col:9 struct adpcm_state
    | `-VarDecl 0x1430f4b68 <col:2, col:21> col:21 referenced invalid state 'struct adpcm_state'
    |-BinaryOperator 0x14310e3d8 <line:11:2, col:45> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x14310e220 <col:2, col:8> '<dependent type>' contains-errors lvalue .valprev
    | | `-RecoveryExpr 0x14310e1f8 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x14310e1d8 <col:2> 'struct adpcm_state' lvalue Var 0x1430f4b68 'state' 'struct adpcm_state'
    | `-BinaryOperator 0x14310e3b8 <col:18, col:45> '<dependent type>' contains-errors '|'
    |   |-ParenExpr 0x14310e320 <col:18, col:32> '<dependent type>' contains-errors
    |   | `-BinaryOperator 0x14310e300 <col:19, col:31> '<dependent type>' contains-errors '<<'
    |   |   |-ArraySubscriptExpr 0x14310e2c0 <col:19, col:28> '<dependent type>' contains-errors lvalue
    |   |   | |-ImplicitCastExpr 0x14310e2a8 <col:19> '<dependent type>' contains-errors <LValueToRValue>
    |   |   | | `-RecoveryExpr 0x14310e268 <col:19> '<dependent type>' contains-errors lvalue
    |   |   | `-IntegerLiteral 0x14310e288 <col:27> 'int' 1
    |   |   `-IntegerLiteral 0x14310e2e0 <col:31> 'int' 8
    |   `-ArraySubscriptExpr 0x14310e398 <col:36, col:45> '<dependent type>' contains-errors lvalue
    |     |-ImplicitCastExpr 0x14310e380 <col:36> '<dependent type>' contains-errors <LValueToRValue>
    |     | `-RecoveryExpr 0x14310e340 <col:36> '<dependent type>' contains-errors lvalue
    |     `-IntegerLiteral 0x14310e360 <col:44> 'int' 0
    |-IfStmt 0x14310e590 <line:12:2, line:13:20>
    | |-BinaryOperator 0x14310e490 <line:12:6, col:19> '<dependent type>' contains-errors '&'
    | | |-ArraySubscriptExpr 0x14310e450 <col:6, col:15> '<dependent type>' contains-errors lvalue
    | | | |-ImplicitCastExpr 0x14310e438 <col:6> '<dependent type>' contains-errors <LValueToRValue>
    | | | | `-RecoveryExpr 0x14310e3f8 <col:6> '<dependent type>' contains-errors lvalue
    | | | `-IntegerLiteral 0x14310e418 <col:14> 'int' 1
    | | `-IntegerLiteral 0x14310e470 <col:19> 'int' 128
    | `-CompoundAssignOperator 0x14310e560 <line:13:3, col:20> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   |-CXXDependentScopeMemberExpr 0x14310e4f8 <col:3, col:9> '<dependent type>' contains-errors lvalue .valprev
    |   | `-RecoveryExpr 0x14310e4d0 <col:3> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x14310e4b0 <col:3> 'struct adpcm_state' lvalue Var 0x1430f4b68 'state' 'struct adpcm_state'
    |   `-IntegerLiteral 0x14310e540 <col:20> 'int' 65536
    |-BinaryOperator 0x14310e6b8 <line:15:2, col:25> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x14310e5f8 <col:2, col:8> '<dependent type>' contains-errors lvalue .index
    | | `-RecoveryExpr 0x14310e5d0 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x14310e5b0 <col:2> 'struct adpcm_state' lvalue Var 0x1430f4b68 'state' 'struct adpcm_state'
    | `-ArraySubscriptExpr 0x14310e698 <col:16, col:25> '<dependent type>' contains-errors lvalue
    |   |-ImplicitCastExpr 0x14310e680 <col:16> '<dependent type>' contains-errors <LValueToRValue>
    |   | `-RecoveryExpr 0x14310e640 <col:16> '<dependent type>' contains-errors lvalue
    |   `-IntegerLiteral 0x14310e660 <col:24> 'int' 2
    |-BinaryOperator 0x14310e790 <line:17:2, col:21> '<dependent type>' contains-errors '='
    | |-UnaryOperator 0x14310e710 <col:2, col:10> '<dependent type>' contains-errors prefix '*' cannot overflow
    | | `-UnaryOperator 0x14310e6f8 <col:3, col:10> '<dependent type>' contains-errors postfix '++' cannot overflow
    | |   `-RecoveryExpr 0x14310e6d8 <col:3> '<dependent type>' contains-errors lvalue
    | `-CXXDependentScopeMemberExpr 0x14310e748 <col:15, col:21> '<dependent type>' contains-errors lvalue .valprev
    |   `-RecoveryExpr 0x14310e728 <col:15> '<dependent type>' contains-errors lvalue
    |-CompoundAssignOperator 0x14310e818 <line:19:2, col:13> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | |-RecoveryExpr 0x14310e7d0 <col:2> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x14310e7b0 <col:2> 'int *' lvalue ParmVar 0x1430f47a8 'encoded' 'int *'
    | `-IntegerLiteral 0x14310e7f8 <col:13> 'int' 4
    |-CallExpr 0x14310eae0 <line:21:2, col:70> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14310e9a0 <col:2> 'int ()' Function 0x14310e8e8 '_af_adpcm_decoder' 'int ()'
    | |-RecoveryExpr 0x14310e9c0 <col:20> '<dependent type>' contains-errors lvalue
    | |-RecoveryExpr 0x14310e9e0 <col:29> '<dependent type>' contains-errors lvalue
    | |-BinaryOperator 0x14310ea88 <col:38, col:61> '<dependent type>' contains-errors '-'
    | | |-CXXDependentScopeMemberExpr 0x14310ea20 <col:38, col:43> '<dependent type>' contains-errors lvalue ->samplesPerBlock
    | | | `-RecoveryExpr 0x14310ea00 <col:38> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x14310ea68 <col:61> 'int' 1
    | `-UnaryOperator 0x14310eac8 <col:64, col:65> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x14310eaa8 <col:65> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x14310eb58 <line:23:2, col:9>
      `-ImplicitCastExpr 0x14310eb40 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x14310eb20 <col:9> 'int' lvalue Var 0x1430f49f0 'outputLength' 'int'
