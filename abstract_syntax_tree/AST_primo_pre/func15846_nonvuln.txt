`-FunctionDecl 0x12c128258  line:1:1 invalid textfieldrep 'int (int, int)'
  |-ParmVarDecl 0x12c1280f0 <col:14, col:18> col:18 invalid s 'int'
  |-ParmVarDecl 0x12c128170 <col:21, col:25> col:25 used width 'int'
  `-CompoundStmt 0x12c144780 <line:2:1, line:35:1>
    |-DeclStmt 0x12c128538 <line:5:5, col:23>
    | |-VarDecl 0x12c128328 <col:5, col:9> col:9 used i 'int'
    | |-VarDecl 0x12c1283a8 <col:5, col:12> col:12 used j 'int'
    | |-VarDecl 0x12c128428 <col:5, col:15> col:15 used k 'int'
    | `-VarDecl 0x12c1284a8 <col:5, col:18> col:18 used c_len 'int'
    |-BinaryOperator 0x12c128590 <line:7:5, col:9> 'int' '='
    | |-DeclRefExpr 0x12c128550 <col:5> 'int' lvalue Var 0x12c1283a8 'j' 'int'
    | `-IntegerLiteral 0x12c128570 <col:9> 'int' 0
    |-ForStmt 0x12c144578 <line:8:5, line:31:5>
    | |-BinaryOperator 0x12c1285f0 <line:8:10, col:14> 'int' '='
    | | |-DeclRefExpr 0x12c1285b0 <col:10> 'int' lvalue Var 0x12c128328 'i' 'int'
    | | `-IntegerLiteral 0x12c1285d0 <col:14> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x12c128698 <col:17, col:24> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x12c128610 <col:17> 'int' lvalue Var 0x12c128328 'i' 'int'
    | | `-CXXDependentScopeMemberExpr 0x12c128650 <col:21, col:24> '<dependent type>' contains-errors lvalue ->length
    | |   `-RecoveryExpr 0x12c128630 <col:21> '<dependent type>' contains-errors lvalue
    | |-CompoundAssignOperator 0x12c128710 <col:32, col:37> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    | | |-DeclRefExpr 0x12c1286b8 <col:32> 'int' lvalue Var 0x12c128328 'i' 'int'
    | | `-ImplicitCastExpr 0x12c1286f8 <col:37> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x12c1286d8 <col:37> 'int' lvalue Var 0x12c1284a8 'c_len' 'int'
    | `-CompoundStmt 0x12c144538 <col:44, line:31:5>
    |   |-BinaryOperator 0x12c141ce8 <line:10:2, col:30> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x12c141ab0 <col:2> 'int' lvalue Var 0x12c1284a8 'c_len' 'int'
    |   | `-CallExpr 0x12c141cc0 <col:10, col:30> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x12c141bb0 <col:10> 'int ()' Function 0x12c141af8 'get_mclen' 'int ()'
    |   |   `-UnaryOperator 0x12c141ca8 <col:20, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |     `-ArraySubscriptExpr 0x12c141c88 <col:21, col:29> '<dependent type>' contains-errors lvalue
    |   |       |-ImplicitCastExpr 0x12c141c58 <col:21, col:24> '<dependent type>' contains-errors <LValueToRValue>
    |   |       | `-CXXDependentScopeMemberExpr 0x12c141bf0 <col:21, col:24> '<dependent type>' contains-errors lvalue ->ptr
    |   |       |   `-RecoveryExpr 0x12c141bd0 <col:21> '<dependent type>' contains-errors lvalue
    |   |       `-ImplicitCastExpr 0x12c141c70 <col:28> 'int' <LValueToRValue>
    |   |         `-DeclRefExpr 0x12c141c38 <col:28> 'int' lvalue Var 0x12c128328 'i' 'int'
    |   |-IfStmt 0x12c141e20 <line:11:2, line:12:6>
    |   | |-BinaryOperator 0x12c141df8 <line:11:6, col:19> 'int' contains-errors '=='
    |   | | |-ArraySubscriptExpr 0x12c141dc0 <col:6, col:14> '<dependent type>' contains-errors lvalue
    |   | | | |-ImplicitCastExpr 0x12c141d90 <col:6, col:9> '<dependent type>' contains-errors <LValueToRValue>
    |   | | | | `-CXXDependentScopeMemberExpr 0x12c141d28 <col:6, col:9> '<dependent type>' contains-errors lvalue ->ptr
    |   | | | |   `-RecoveryExpr 0x12c141d08 <col:6> '<dependent type>' contains-errors lvalue
    |   | | | `-ImplicitCastExpr 0x12c141da8 <col:13> 'int' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x12c141d70 <col:13> 'int' lvalue Var 0x12c128328 'i' 'int'
    |   | | `-CharacterLiteral 0x12c141de0 <col:19> 'int' 13
    |   | `-ContinueStmt 0x12c141e18 <line:12:6>
    |   |-BinaryOperator 0x12c1420b8 <line:13:2, col:32> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x12c141e40 <col:2> 'int' lvalue Var 0x12c128428 'k' 'int'
    |   | `-BinaryOperator 0x12c142098 <col:6, col:32> '<dependent type>' contains-errors '+'
    |   |   |-DeclRefExpr 0x12c141e60 <col:6> 'int' lvalue Var 0x12c1283a8 'j' 'int'
    |   |   `-CallExpr 0x12c142070 <col:10, col:32> '<dependent type>' contains-errors
    |   |     |-DeclRefExpr 0x12c141f60 <col:10> 'int ()' Function 0x12c141ea8 'get_mcwidth' 'int ()'
    |   |     `-UnaryOperator 0x12c142058 <col:22, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |       `-ArraySubscriptExpr 0x12c142038 <col:23, col:31> '<dependent type>' contains-errors lvalue
    |   |         |-ImplicitCastExpr 0x12c142008 <col:23, col:26> '<dependent type>' contains-errors <LValueToRValue>
    |   |         | `-CXXDependentScopeMemberExpr 0x12c141fa0 <col:23, col:26> '<dependent type>' contains-errors lvalue ->ptr
    |   |         |   `-RecoveryExpr 0x12c141f80 <col:23> '<dependent type>' contains-errors lvalue
    |   |         `-ImplicitCastExpr 0x12c142020 <col:30> 'int' <LValueToRValue>
    |   |           `-DeclRefExpr 0x12c141fe8 <col:30> 'int' lvalue Var 0x12c128328 'i' 'int'
    |   |-IfStmt 0x12c142170 <line:14:2, line:15:6>
    |   | |-BinaryOperator 0x12c142148 <line:14:6, col:10> 'int' '>'
    |   | | |-ImplicitCastExpr 0x12c142118 <col:6> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x12c1420d8 <col:6> 'int' lvalue Var 0x12c128428 'k' 'int'
    |   | | `-ImplicitCastExpr 0x12c142130 <col:10> 'int' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x12c1420f8 <col:10> 'int' lvalue ParmVar 0x12c128170 'width' 'int'
    |   | `-BreakStmt 0x12c142168 <line:15:6>
    |   |-IfStmt 0x12c144490 <line:16:2, line:29:41> has_else
    |   | |-BinaryOperator 0x12c142220 <line:16:6, col:16> 'int' contains-errors '=='
    |   | | |-RecoveryExpr 0x12c1421e0 <col:6> '<dependent type>' contains-errors lvalue
    |   | | `-RecoveryExpr 0x12c142200 <col:16> '<dependent type>' contains-errors lvalue
    |   | |-CallExpr 0x12c1423c0 <line:17:6, col:24> '<dependent type>' contains-errors
    |   | | |-DeclRefExpr 0x12c142320 <col:6> 'int ()' Function 0x12c142268 'Strcat_char' 'int ()'
    |   | | |-RecoveryExpr 0x12c1423a0 <col:18> '<dependent type>' contains-errors lvalue
    |   | | `-CharacterLiteral 0x12c142358 <col:21> 'int' 32
    |   | `-IfStmt 0x12c144460 <line:22:7, line:29:41> has_else
    |   |   |-BinaryOperator 0x12c1424e0 <line:22:11, col:24> 'int' contains-errors '=='
    |   |   | |-ArraySubscriptExpr 0x12c1424a8 <col:11, col:19> '<dependent type>' contains-errors lvalue
    |   |   | | |-ImplicitCastExpr 0x12c142478 <col:11, col:14> '<dependent type>' contains-errors <LValueToRValue>
    |   |   | | | `-CXXDependentScopeMemberExpr 0x12c142410 <col:11, col:14> '<dependent type>' contains-errors lvalue ->ptr
    |   |   | | |   `-RecoveryExpr 0x12c1423f0 <col:11> '<dependent type>' contains-errors lvalue
    |   |   | | `-ImplicitCastExpr 0x12c142490 <col:18> 'int' <LValueToRValue>
    |   |   | |   `-DeclRefExpr 0x12c142458 <col:18> 'int' lvalue Var 0x12c128328 'i' 'int'
    |   |   | `-CharacterLiteral 0x12c1424c8 <col:24> 'int' 38
    |   |   |-CallExpr 0x12c1426d0 <line:23:6, col:27> '<dependent type>' contains-errors
    |   |   | |-DeclRefExpr 0x12c1425e0 <col:6> 'int ()' Function 0x12c142528 'Strcat_charp' 'int ()'
    |   |   | |-RecoveryExpr 0x12c1426b0 <col:19> '<dependent type>' contains-errors lvalue
    |   |   | `-StringLiteral 0x12c142660 <col:22> 'char[4]' lvalue "STR"
    |   |   `-IfStmt 0x12c144430 <line:24:7, line:29:41> has_else
    |   |     |-BinaryOperator 0x12c143e00 <line:24:11, col:24> 'int' contains-errors '=='
    |   |     | |-ArraySubscriptExpr 0x12c1427b8 <col:11, col:19> '<dependent type>' contains-errors lvalue
    |   |     | | |-ImplicitCastExpr 0x12c142788 <col:11, col:14> '<dependent type>' contains-errors <LValueToRValue>
    |   |     | | | `-CXXDependentScopeMemberExpr 0x12c142720 <col:11, col:14> '<dependent type>' contains-errors lvalue ->ptr
    |   |     | | |   `-RecoveryExpr 0x12c142700 <col:11> '<dependent type>' contains-errors lvalue
    |   |     | | `-ImplicitCastExpr 0x12c1427a0 <col:18> 'int' <LValueToRValue>
    |   |     | |   `-DeclRefExpr 0x12c142768 <col:18> 'int' lvalue Var 0x12c128328 'i' 'int'
    |   |     | `-CharacterLiteral 0x12c1427d8 <col:24> 'int' 60
    |   |     |-CallExpr 0x12c143ec8 <line:25:6, col:27> '<dependent type>' contains-errors
    |   |     | |-DeclRefExpr 0x12c143e20 <col:6> 'int ()' Function 0x12c142528 'Strcat_charp' 'int ()'
    |   |     | |-RecoveryExpr 0x12c143ea8 <col:19> '<dependent type>' contains-errors lvalue
    |   |     | `-StringLiteral 0x12c143e58 <col:22> 'char[4]' lvalue "STR"
    |   |     `-IfStmt 0x12c144400 <line:26:7, line:29:41> has_else
    |   |       |-BinaryOperator 0x12c143fe8 <line:26:11, col:24> 'int' contains-errors '=='
    |   |       | |-ArraySubscriptExpr 0x12c143fb0 <col:11, col:19> '<dependent type>' contains-errors lvalue
    |   |       | | |-ImplicitCastExpr 0x12c143f80 <col:11, col:14> '<dependent type>' contains-errors <LValueToRValue>
    |   |       | | | `-CXXDependentScopeMemberExpr 0x12c143f18 <col:11, col:14> '<dependent type>' contains-errors lvalue ->ptr
    |   |       | | |   `-RecoveryExpr 0x12c143ef8 <col:11> '<dependent type>' contains-errors lvalue
    |   |       | | `-ImplicitCastExpr 0x12c143f98 <col:18> 'int' <LValueToRValue>
    |   |       | |   `-DeclRefExpr 0x12c143f60 <col:18> 'int' lvalue Var 0x12c128328 'i' 'int'
    |   |       | `-CharacterLiteral 0x12c143fd0 <col:24> 'int' 62
    |   |       |-CallExpr 0x12c1440b0 <line:27:6, col:27> '<dependent type>' contains-errors
    |   |       | |-DeclRefExpr 0x12c144008 <col:6> 'int ()' Function 0x12c142528 'Strcat_charp' 'int ()'
    |   |       | |-RecoveryExpr 0x12c144090 <col:19> '<dependent type>' contains-errors lvalue
    |   |       | `-StringLiteral 0x12c144040 <col:22> 'char[4]' lvalue "STR"
    |   |       `-CallExpr 0x12c1443c8 <line:29:6, col:41> '<dependent type>' contains-errors
    |   |         |-DeclRefExpr 0x12c1441c0 <col:6> 'int ()' Function 0x12c144108 'Strcat_charp_n' 'int ()'
    |   |         |-RecoveryExpr 0x12c144340 <col:21> '<dependent type>' contains-errors lvalue
    |   |         |-UnaryOperator 0x12c1443b0 <col:24, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |         | `-ArraySubscriptExpr 0x12c144390 <col:25, col:33> '<dependent type>' contains-errors lvalue
    |   |         |   |-ImplicitCastExpr 0x12c144360 <col:25, col:28> '<dependent type>' contains-errors <LValueToRValue>
    |   |         |   | `-CXXDependentScopeMemberExpr 0x12c144218 <col:25, col:28> '<dependent type>' contains-errors lvalue ->ptr
    |   |         |   |   `-RecoveryExpr 0x12c1441f8 <col:25> '<dependent type>' contains-errors lvalue
    |   |         |   `-ImplicitCastExpr 0x12c144378 <col:32> 'int' <LValueToRValue>
    |   |         |     `-DeclRefExpr 0x12c144260 <col:32> 'int' lvalue Var 0x12c128328 'i' 'int'
    |   |         `-DeclRefExpr 0x12c1442e8 <col:36> 'int' lvalue Var 0x12c1284a8 'c_len' 'int'
    |   `-BinaryOperator 0x12c144518 <line:30:2, col:6> 'int' '='
    |     |-DeclRefExpr 0x12c1444c0 <col:2> 'int' lvalue Var 0x12c1283a8 'j' 'int'
    |     `-ImplicitCastExpr 0x12c144500 <col:6> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x12c1444e0 <col:6> 'int' lvalue Var 0x12c128428 'k' 'int'
    `-ForStmt 0x12c144748 <line:32:5, line:33:20>
      |-<<<NULL>>>
      |-<<<NULL>>>
      |-BinaryOperator 0x12c144620 <line:32:12, col:16> 'int' '<'
      | |-ImplicitCastExpr 0x12c1445f0 <col:12> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x12c1445b0 <col:12> 'int' lvalue Var 0x12c1283a8 'j' 'int'
      | `-ImplicitCastExpr 0x12c144608 <col:16> 'int' <LValueToRValue>
      |   `-DeclRefExpr 0x12c1445d0 <col:16> 'int' lvalue ParmVar 0x12c128170 'width' 'int'
      |-UnaryOperator 0x12c144660 <col:23, col:24> 'int' postfix '++'
      | `-DeclRefExpr 0x12c144640 <col:23> 'int' lvalue Var 0x12c1283a8 'j' 'int'
      `-CallExpr 0x12c144718 <line:33:2, col:20> '<dependent type>' contains-errors
        |-DeclRefExpr 0x12c144678 <col:2> 'int ()' Function 0x12c142268 'Strcat_char' 'int ()'
        |-RecoveryExpr 0x12c1446f8 <col:14> '<dependent type>' contains-errors lvalue
        `-CharacterLiteral 0x12c1446b0 <col:17> 'int' 32
