`-FunctionDecl 0x155928208  line:1:18 invalid collectGroups 'int (const int)' static
  |-ParmVarDecl 0x1559280f0 <col:32, <invalid sloc>> col:41 invalid 'const int'
  `-CompoundStmt 0x155943500 <line:2:1, line:61:1>
    |-DeclStmt 0x155928358 <line:4:2, col:16>
    | `-VarDecl 0x1559282d0 <col:2, col:15> col:6 used lineNo 'int' cinit
    |   `-IntegerLiteral 0x155928338 <col:15> 'int' 1
    `-ForStmt 0x1559434c8 <line:8:2, line:59:2>
      |-DeclStmt 0x155928428 <line:8:7, col:23>
      | `-VarDecl 0x155928388 <col:7, col:22> col:20 used i 'unsigned int' cinit
      |   `-ImplicitCastExpr 0x155928410 <col:22> 'unsigned int' <IntegralCast>
      |     `-IntegerLiteral 0x1559283f0 <col:22> 'int' 0
      |-<<<NULL>>>
      |-BinaryOperator 0x155928588 <col:25, col:43> 'int' contains-errors '<'
      | |-DeclRefExpr 0x155928440 <col:25> 'unsigned int' lvalue Var 0x155928388 'i' 'unsigned int'
      | `-CallExpr 0x155928568 <col:27, col:43> '<dependent type>' contains-errors
      |   `-CXXDependentScopeMemberExpr 0x155928520 <col:27, col:36> '<dependent type>' contains-errors lvalue .length
      |     `-RecoveryExpr 0x155928500 <col:27> '<dependent type>' contains-errors lvalue
      |-UnaryOperator 0x1559285c8 <col:46, col:48> 'unsigned int' prefix '++'
      | `-DeclRefExpr 0x1559285a8 <col:48> 'unsigned int' lvalue Var 0x155928388 'i' 'unsigned int'
      `-CompoundStmt 0x155943490 <col:51, line:59:2>
        |-IfStmt 0x1559286b0 <line:10:3, line:13:3>
        | |-RecoveryExpr 0x155928630 <line:10:7, col:22> '_Bool' contains-errors
        | `-CompoundStmt 0x155928690 <col:28, line:13:3>
        |   |-UnaryOperator 0x155928670 <line:11:4, col:10> 'int' postfix '++'
        |   | `-DeclRefExpr 0x155928650 <col:4> 'int' lvalue Var 0x1559282d0 'lineNo' 'int'
        |   `-ContinueStmt 0x155928688 <line:12:4>
        |-IfStmt 0x1559425f8 <line:16:3, line:19:3>
        | |-BinaryOperator 0x155942578 <line:16:7, col:52> 'int' contains-errors '&&'
        | | |-RecoveryExpr 0x155942498 <col:7> '<dependent type>' contains-errors lvalue
        | | `-BinaryOperator 0x155942558 <col:19, col:52> 'int' contains-errors '=='
        | |   |-CallExpr 0x155942520 <col:19, col:47> '<dependent type>' contains-errors
        | |   | |-CXXDependentScopeMemberExpr 0x1559424d8 <col:19, col:28> '<dependent type>' contains-errors lvalue .compare
        | |   | | `-RecoveryExpr 0x1559424b8 <col:19> '<dependent type>' contains-errors lvalue
        | |   | |-DeclRefExpr 0x155928748 <col:36> 'unsigned int' lvalue Var 0x155928388 'i' 'unsigned int'
        | |   | |-IntegerLiteral 0x155928768 <col:39> 'int' 2
        | |   | `-StringLiteral 0x1559287d0 <col:42> 'char[4]' lvalue "STR"
        | |   `-IntegerLiteral 0x155942438 <col:52> 'int' 0
        | `-CompoundStmt 0x1559425d8 <col:55, line:19:3>
        |   |-UnaryOperator 0x1559425b8 <line:17:4, col:5> 'unsigned int' postfix '++'
        |   | `-DeclRefExpr 0x155942598 <col:4> 'unsigned int' lvalue Var 0x155928388 'i' 'unsigned int'
        |   `-ContinueStmt 0x1559425d0 <line:18:4>
        |-IfStmt 0x1559426f0 <line:22:3, line:25:3>
        | |-RecoveryExpr 0x155942668 <line:22:7, col:22> '_Bool' contains-errors
        | `-CompoundStmt 0x1559426d8 <col:27, line:25:3>
        |   `-ContinueStmt 0x1559426d0 <line:24:4>
        |-IfStmt 0x155942c10 <line:27:3, line:32:3>
        | |-BinaryOperator 0x1559429c0 <line:27:7, col:53> 'int' contains-errors '&&'
        | | |-UnaryOperator 0x1559428e8 <col:7, col:8> '<dependent type>' contains-errors prefix '!' cannot overflow
        | | | `-ImplicitCastExpr 0x1559428d0 <col:8> '<dependent type>' contains-errors <LValueToRValue>
        | | |   `-RecoveryExpr 0x1559428b0 <col:8> '<dependent type>' contains-errors lvalue
        | | `-BinaryOperator 0x1559429a0 <col:20, col:53> 'int' contains-errors '=='
        | |   |-CallExpr 0x155942968 <col:20, col:48> '<dependent type>' contains-errors
        | |   | |-CXXDependentScopeMemberExpr 0x155942920 <col:20, col:29> '<dependent type>' contains-errors lvalue .compare
        | |   | | `-RecoveryExpr 0x155942900 <col:20> '<dependent type>' contains-errors lvalue
        | |   | |-DeclRefExpr 0x1559427b8 <col:37> 'unsigned int' lvalue Var 0x155928388 'i' 'unsigned int'
        | |   | |-IntegerLiteral 0x1559427d8 <col:40> 'int' 2
        | |   | `-StringLiteral 0x1559427f8 <col:43> 'char[4]' lvalue "STR"
        | |   `-IntegerLiteral 0x155942850 <col:53> 'int' 0
        | `-CompoundStmt 0x155942be0 <col:56, line:32:3>
        |   |-UnaryOperator 0x155942a00 <line:28:4, col:5> 'unsigned int' postfix '++'
        |   | `-DeclRefExpr 0x1559429e0 <col:4> 'unsigned int' lvalue Var 0x155928388 'i' 'unsigned int'
        |   |-WhileStmt 0x155942b80 <line:29:4, col:57>
        |   | |-RecoveryExpr 0x155942b28 <col:11, col:52> '_Bool' contains-errors
        |   | `-UnaryOperator 0x155942b68 <col:56, col:57> 'unsigned int' postfix '++'
        |   |   `-DeclRefExpr 0x155942b48 <col:56> 'unsigned int' lvalue Var 0x155928388 'i' 'unsigned int'
        |   |-UnaryOperator 0x155942bc0 <line:30:4, col:10> 'int' postfix '++'
        |   | `-DeclRefExpr 0x155942ba0 <col:4> 'int' lvalue Var 0x1559282d0 'lineNo' 'int'
        |   `-ContinueStmt 0x155942bd8 <line:31:4>
        `-IfStmt 0x155943470 <line:35:3, line:58:3>
          |-BinaryOperator 0x155942ee0 <line:35:7, col:53> 'int' contains-errors '&&'
          | |-UnaryOperator 0x155942e08 <col:7, col:8> '<dependent type>' contains-errors prefix '!' cannot overflow
          | | `-ImplicitCastExpr 0x155942df0 <col:8> '<dependent type>' contains-errors <LValueToRValue>
          | |   `-RecoveryExpr 0x155942dd0 <col:8> '<dependent type>' contains-errors lvalue
          | `-BinaryOperator 0x155942ec0 <col:20, col:53> 'int' contains-errors '=='
          |   |-CallExpr 0x155942e88 <col:20, col:48> '<dependent type>' contains-errors
          |   | |-CXXDependentScopeMemberExpr 0x155942e40 <col:20, col:29> '<dependent type>' contains-errors lvalue .compare
          |   | | `-RecoveryExpr 0x155942e20 <col:20> '<dependent type>' contains-errors lvalue
          |   | |-DeclRefExpr 0x155942cd8 <col:37> 'unsigned int' lvalue Var 0x155928388 'i' 'unsigned int'
          |   | |-IntegerLiteral 0x155942cf8 <col:40> 'int' 2
          |   | `-StringLiteral 0x155942d18 <col:43> 'char[4]' lvalue "STR"
          |   `-IntegerLiteral 0x155942d70 <col:53> 'int' 0
          `-CompoundStmt 0x155943440 <col:56, line:58:3>
            |-RecoveryExpr 0x155942f30 <line:37:4> '<dependent type>' contains-errors lvalue
            |-UnaryOperator 0x155942f70 <line:38:4, col:5> 'unsigned int' postfix '++'
            | `-DeclRefExpr 0x155942f50 <col:4> 'unsigned int' lvalue Var 0x155928388 'i' 'unsigned int'
            |-IfStmt 0x155943038 <line:39:4, line:44:4> has_else
            | |-RecoveryExpr 0x155942fa8 <line:39:7, col:25> '_Bool' contains-errors
            | |-CompoundStmt 0x155943000 <col:28, line:41:4>
            | | `-UnaryOperator 0x155942fe8 <line:40:5, col:6> 'unsigned int' postfix '++'
            | |   `-DeclRefExpr 0x155942fc8 <col:5> 'unsigned int' lvalue Var 0x155928388 'i' 'unsigned int'
            | `-CompoundStmt 0x155943020 <line:42:9, line:44:4>
            |   `-ContinueStmt 0x155943018 <line:43:5>
            `-WhileStmt 0x155943268 <line:47:4, line:54:4>
              |-RecoveryExpr 0x155943108 <line:47:11, col:67> '_Bool' contains-errors
              `-CompoundStmt 0x155943248 <col:70, line:54:4>
                |-IfStmt 0x1559431d0 <line:48:5, line:51:5>
                | |-RecoveryExpr 0x155943160 <line:48:8, col:21> '_Bool' contains-errors
                | `-CompoundStmt 0x1559431b8 <col:26, line:51:5>
                |   `-UnaryOperator 0x1559431a0 <line:49:6, col:12> 'int' postfix '++'
                |     `-DeclRefExpr 0x155943180 <col:6> 'int' lvalue Var 0x1559282d0 'lineNo' 'int'
                `-UnaryOperator 0x155943230 <line:53:5, col:6> 'unsigned int' postfix '++'
                  `-DeclRefExpr 0x155943210 <col:5> 'unsigned int' lvalue Var 0x155928388 'i' 'unsigned int'
