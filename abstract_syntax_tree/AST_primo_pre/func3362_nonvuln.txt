`-FunctionDecl 0x14e128598  line:1:1 invalid parse_subexp 'int (int **, int *, int, int **, int *, int *, int)'
  |-ParmVarDecl 0x14e128160 <col:14, col:21> col:21 invalid top 'int **'
  |-ParmVarDecl 0x14e1281e0 <col:26, col:34> col:34 invalid tok 'int *'
  |-ParmVarDecl 0x14e128260 <col:39, col:43> col:43 used term 'int'
  |-ParmVarDecl 0x14e1282e8 <col:49, col:57> col:57 invalid src 'int **'
  |-ParmVarDecl 0x14e128368 <col:62, col:69> col:69 invalid end 'int *'
  |-ParmVarDecl 0x14e1283e8 <line:2:14, col:23> col:23 referenced invalid env 'int *'
  |-ParmVarDecl 0x14e128468 <col:28, col:32> col:32 used group_head 'int'
  `-CompoundStmt 0x14e80a928 <line:3:1, line:61:1>
    |-DeclStmt 0x14e1286f8 <line:4:3, col:8>
    | `-VarDecl 0x14e128690 <col:3, col:7> col:7 used r 'int'
    |-BinaryOperator 0x14e1418a0 <line:7:3, col:10> '<dependent type>' contains-errors '='
    | |-UnaryOperator 0x14e141868 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x14e141850 <col:4> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x14e128788 <col:4> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x14e141880 <col:10> '<dependent type>' contains-errors lvalue
    |-UnaryOperator 0x14e141950 <line:8:3, col:19> '<dependent type>' contains-errors postfix '++' cannot overflow
    | `-CXXDependentScopeMemberExpr 0x14e141908 <col:3, col:8> '<dependent type>' contains-errors lvalue ->parse_depth
    |   `-RecoveryExpr 0x14e1418e0 <col:3> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x14e1418c0 <col:3> 'int *' lvalue ParmVar 0x14e1283e8 'env' 'int *'
    |-IfStmt 0x14e141a90 <line:9:3, line:10:12>
    | |-BinaryOperator 0x14e141a28 <line:9:7, col:26> 'int' contains-errors '>'
    | | |-CXXDependentScopeMemberExpr 0x14e141988 <col:7, col:12> '<dependent type>' contains-errors lvalue ->parse_depth
    | | | `-RecoveryExpr 0x14e141968 <col:7> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x14e141a08 <col:26> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x14e141a80 <line:10:5, col:12>
    |   `-RecoveryExpr 0x14e141a60 <col:12> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x14e141e48 <line:12:3, col:63> 'int' contains-errors '='
    | |-DeclRefExpr 0x14e141ab0 <col:3> 'int' lvalue Var 0x14e128690 'r' 'int'
    | `-CallExpr 0x14e141df0 <col:7, col:63> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14e141c30 <col:7> 'int ()' Function 0x14e141b78 'parse_branch' 'int ()'
    |   |-UnaryOperator 0x14e141dd8 <col:20, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-RecoveryExpr 0x14e141db8 <col:21> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x14e141c80 <col:27> '<dependent type>' contains-errors lvalue
    |   |-DeclRefExpr 0x14e141ca0 <col:32> 'int' lvalue ParmVar 0x14e128260 'term' 'int'
    |   |-RecoveryExpr 0x14e141cc0 <col:38> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x14e141ce0 <col:43> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x14e141d00 <col:48> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x14e141d20 <col:53> 'int' lvalue ParmVar 0x14e128468 'group_head' 'int'
    |-IfStmt 0x14e1420d0 <line:13:3, line:16:3>
    | |-BinaryOperator 0x14e141ec0 <line:13:7, col:11> 'int' '<'
    | | |-ImplicitCastExpr 0x14e141ea8 <col:7> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x14e141e68 <col:7> 'int' lvalue Var 0x14e128690 'r' 'int'
    | | `-IntegerLiteral 0x14e141e88 <col:11> 'int' 0
    | `-CompoundStmt 0x14e1420b0 <col:14, line:16:3>
    |   |-CallExpr 0x14e142040 <line:14:5, col:24> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x14e141fc0 <col:5> 'int ()' Function 0x14e141f08 'onig_node_free' 'int ()'
    |   | `-RecoveryExpr 0x14e142020 <col:20> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x14e1420a0 <line:15:5, col:12>
    |     `-ImplicitCastExpr 0x14e142088 <col:12> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x14e142068 <col:12> 'int' lvalue Var 0x14e128690 'r' 'int'
    |-IfStmt 0x14e80a808 <line:18:3, line:57:3> has_else
    | |-BinaryOperator 0x14e142160 <line:18:7, col:12> 'int' '=='
    | | |-ImplicitCastExpr 0x14e142130 <col:7> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x14e1420f0 <col:7> 'int' lvalue Var 0x14e128690 'r' 'int'
    | | `-ImplicitCastExpr 0x14e142148 <col:12> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x14e142110 <col:12> 'int' lvalue ParmVar 0x14e128260 'term' 'int'
    | |-CompoundStmt 0x14e1422a8 <col:18, line:20:3>
    | | `-BinaryOperator 0x14e142288 <line:19:5, col:12> '<dependent type>' contains-errors '='
    | |   |-UnaryOperator 0x14e142250 <col:5, col:6> '<dependent type>' contains-errors prefix '*' cannot overflow
    | |   | `-ImplicitCastExpr 0x14e142238 <col:6> '<dependent type>' contains-errors <LValueToRValue>
    | |   |   `-RecoveryExpr 0x14e142180 <col:6> '<dependent type>' contains-errors lvalue
    | |   `-RecoveryExpr 0x14e142268 <col:12> '<dependent type>' contains-errors lvalue
    | `-IfStmt 0x14e80a7d8 <line:21:8, line:57:3> has_else
    |   |-BinaryOperator 0x14e142338 <line:21:12, col:17> 'int' contains-errors '=='
    |   | |-DeclRefExpr 0x14e1422c0 <col:12> 'int' lvalue Var 0x14e128690 'r' 'int'
    |   | `-RecoveryExpr 0x14e142318 <col:17> '<dependent type>' contains-errors lvalue
    |   |-CompoundStmt 0x14e80a708 <col:25, line:49:3>
    |   | |-BinaryOperator 0x14e1425f8 <line:22:5, col:41> '<dependent type>' contains-errors '='
    |   | | |-UnaryOperator 0x14e142570 <col:5, col:6> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   | | | `-ImplicitCastExpr 0x14e142558 <col:6> '<dependent type>' contains-errors <LValueToRValue>
    |   | | |   `-RecoveryExpr 0x14e142358 <col:6> '<dependent type>' contains-errors lvalue
    |   | | `-CallExpr 0x14e1425c8 <col:13, col:41> '<dependent type>' contains-errors
    |   | |   |-DeclRefExpr 0x14e142488 <col:13> 'int ()' Function 0x14e1423d0 'onig_node_new_alt' 'int ()'
    |   | |   |-RecoveryExpr 0x14e142588 <col:31> '<dependent type>' contains-errors lvalue
    |   | |   `-RecoveryExpr 0x14e1425a8 <col:37> '<dependent type>' contains-errors lvalue
    |   | |-IfStmt 0x14e1427c0 <line:23:5, line:26:5>
    |   | | |-CallExpr 0x14e142768 <line:23:9, col:21> '<dependent type>' contains-errors
    |   | | | |-DeclRefExpr 0x14e1426f8 <col:9> 'int ()' Function 0x14e142640 'IS_NULL' 'int ()'
    |   | | | `-UnaryOperator 0x14e142750 <col:17, col:18> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   | | |   `-ImplicitCastExpr 0x14e142738 <col:18> '<dependent type>' contains-errors <LValueToRValue>
    |   | | |     `-RecoveryExpr 0x14e142718 <col:18> '<dependent type>' contains-errors lvalue
    |   | | `-CompoundStmt 0x14e1427b0 <col:24, line:26:5>
    |   | |-WhileStmt 0x14e80a488 <line:29:5, line:45:5>
    |   | | |-RecoveryExpr 0x14e809dd0 <line:29:12, col:17> '_Bool' contains-errors
    |   | | `-CompoundStmt 0x14e80a458 <col:25, line:45:5>
    |   | |   |-BinaryOperator 0x14e809fd0 <line:30:7, col:41> 'int' contains-errors '='
    |   | |   | |-DeclRefExpr 0x14e809df0 <col:7> 'int' lvalue Var 0x14e128690 'r' 'int'
    |   | |   | `-CallExpr 0x14e809f90 <col:11, col:41> '<dependent type>' contains-errors
    |   | |   |   |-DeclRefExpr 0x14e809ef0 <col:11> 'int ()' Function 0x14e809e38 'fetch_token' 'int ()'
    |   | |   |   |-RecoveryExpr 0x14e809f10 <col:23> '<dependent type>' contains-errors lvalue
    |   | |   |   |-RecoveryExpr 0x14e809f30 <col:28> '<dependent type>' contains-errors lvalue
    |   | |   |   |-RecoveryExpr 0x14e809f50 <col:33> '<dependent type>' contains-errors lvalue
    |   | |   |   `-RecoveryExpr 0x14e809f70 <col:38> '<dependent type>' contains-errors lvalue
    |   | |   |-IfStmt 0x14e80a0b0 <line:31:7, col:25>
    |   | |   | |-BinaryOperator 0x14e80a048 <col:11, col:15> 'int' '<'
    |   | |   | | |-ImplicitCastExpr 0x14e80a030 <col:11> 'int' <LValueToRValue>
    |   | |   | | | `-DeclRefExpr 0x14e809ff0 <col:11> 'int' lvalue Var 0x14e128690 'r' 'int'
    |   | |   | | `-IntegerLiteral 0x14e80a010 <col:15> 'int' 0
    |   | |   | `-ReturnStmt 0x14e80a0a0 <col:18, col:25>
    |   | |   |   `-ImplicitCastExpr 0x14e80a088 <col:25> 'int' <LValueToRValue>
    |   | |   |     `-DeclRefExpr 0x14e80a068 <col:25> 'int' lvalue Var 0x14e128690 'r' 'int'
    |   | |   |-IfStmt 0x14e80a2c8 <line:33:7, line:36:7>
    |   | |   | |-BinaryOperator 0x14e80a228 <line:33:11, col:15> 'int' '<'
    |   | |   | | |-ImplicitCastExpr 0x14e80a210 <col:11> 'int' <LValueToRValue>
    |   | |   | | | `-DeclRefExpr 0x14e80a1d0 <col:11> 'int' lvalue Var 0x14e128690 'r' 'int'
    |   | |   | | `-IntegerLiteral 0x14e80a1f0 <col:15> 'int' 0
    |   | |   | `-CompoundStmt 0x14e80a2b0 <col:18, line:36:7>
    |   | |   |   `-ReturnStmt 0x14e80a2a0 <line:35:9, col:16>
    |   | |   |     `-ImplicitCastExpr 0x14e80a288 <col:16> 'int' <LValueToRValue>
    |   | |   |       `-DeclRefExpr 0x14e80a268 <col:16> 'int' lvalue Var 0x14e128690 'r' 'int'
    |   | |   `-IfStmt 0x14e80a418 <line:38:7, line:42:7>
    |   | |     |-RecoveryExpr 0x14e80a328 <line:38:11, col:25> '_Bool' contains-errors
    |   | |     `-CompoundStmt 0x14e80a400 <col:28, line:42:7>
    |   | |       `-CallExpr 0x14e80a3d8 <line:40:9, col:28> '<dependent type>' contains-errors
    |   | |         |-DeclRefExpr 0x14e80a368 <col:9> 'int ()' Function 0x14e141f08 'onig_node_free' 'int ()'
    |   | |         `-UnaryOperator 0x14e80a3c0 <col:24, col:25> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   | |           `-ImplicitCastExpr 0x14e80a3a8 <col:25> '<dependent type>' contains-errors <LValueToRValue>
    |   | |             `-RecoveryExpr 0x14e80a388 <col:25> '<dependent type>' contains-errors lvalue
    |   | `-IfStmt 0x14e80a6e8 <line:47:5, line:48:12>
    |   |   |-RecoveryExpr 0x14e80a660 <line:47:9, col:39> '_Bool' contains-errors
    |   |   `-GotoStmt 0x14e80a6d0 <line:48:7, col:12> 'err' 0x14e80a680
    |   `-CompoundStmt 0x14e80a7c0 <line:50:8, line:57:3>
    |     `-LabelStmt 0x14e80a7a0 <line:52:3, col:6> 'err'
    |       `-NullStmt 0x14e80a798 <col:6>
    |-UnaryOperator 0x14e80a8c8 <line:59:3, col:19> '<dependent type>' contains-errors postfix '--' cannot overflow
    | `-CXXDependentScopeMemberExpr 0x14e80a880 <col:3, col:8> '<dependent type>' contains-errors lvalue ->parse_depth
    |   `-RecoveryExpr 0x14e80a858 <col:3> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x14e80a838 <col:3> 'int *' lvalue ParmVar 0x14e1283e8 'env' 'int *'
    `-ReturnStmt 0x14e80a918 <line:60:3, col:10>
      `-ImplicitCastExpr 0x14e80a900 <col:10> 'int' <LValueToRValue>
        `-DeclRefExpr 0x14e80a8e0 <col:10> 'int' lvalue Var 0x14e128690 'r' 'int'
