`-FunctionDecl 0x1549282e8  line:1:19 invalid read_bits 'int (int, int, const int *)' static inline
  |-ParmVarDecl 0x1549280d8 <line:2:2, col:6> col:6 used bitcount 'int'
  |-ParmVarDecl 0x154928158 <line:3:2, col:6> col:6 used bitoffset 'int'
  |-ParmVarDecl 0x1549281f0 <line:4:2, col:17> col:17 referenced invalid ptr 'const int *'
  `-CompoundStmt 0x154941a08 <line:5:3, line:13:1>
    |-DeclStmt 0x154928500 <line:6:2, col:32>
    | `-VarDecl 0x1549283c0 <col:2, col:31> col:6 used mask 'int' cinit
    |   `-BinaryOperator 0x1549284e0 <col:13, col:31> 'int' '-'
    |     |-ParenExpr 0x1549284a0 <col:13, col:27> 'int'
    |     | `-BinaryOperator 0x154928480 <col:14, col:19> 'int' '<<'
    |     |   |-IntegerLiteral 0x154928428 <col:14> 'int' 1
    |     |   `-ImplicitCastExpr 0x154928468 <col:19> 'int' <LValueToRValue>
    |     |     `-DeclRefExpr 0x154928448 <col:19> 'int' lvalue ParmVar 0x1549280d8 'bitcount' 'int'
    |     `-IntegerLiteral 0x1549284c0 <col:31> 'int' 1
    |-CompoundAssignOperator 0x1549285d8 <line:7:2, col:22> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | |-RecoveryExpr 0x154928538 <col:2> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x154928518 <col:2> 'const int *' lvalue ParmVar 0x1549281f0 'ptr' 'const int *'
    | `-BinaryOperator 0x1549285b8 <col:9, col:22> 'int' '>>'
    |   |-ImplicitCastExpr 0x1549285a0 <col:9> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x154928560 <col:9> 'int' lvalue ParmVar 0x154928158 'bitoffset' 'int'
    |   `-IntegerLiteral 0x154928580 <col:22> 'int' 3
    |-CompoundAssignOperator 0x154928648 <line:8:2, col:15> 'int' '&=' ComputeLHSTy='int' ComputeResultTy='int'
    | |-DeclRefExpr 0x154928608 <col:2> 'int' lvalue ParmVar 0x154928158 'bitoffset' 'int'
    | `-IntegerLiteral 0x154928628 <col:15> 'int' 7
    |-DeclStmt 0x154941880 <line:9:2, col:36>
    | `-VarDecl 0x154928690 <col:2, col:35> col:6 used value 'int' cinit
    |   `-BinaryOperator 0x154941860 <col:14, col:35> '<dependent type>' contains-errors '|'
    |     |-ArraySubscriptExpr 0x154928750 <col:14, col:19> '<dependent type>' contains-errors lvalue
    |     | |-ImplicitCastExpr 0x154928738 <col:14> '<dependent type>' contains-errors <LValueToRValue>
    |     | | `-RecoveryExpr 0x1549286f8 <col:14> '<dependent type>' contains-errors lvalue
    |     | `-IntegerLiteral 0x154928718 <col:18> 'int' 0
    |     `-ParenExpr 0x154941840 <col:23, col:35> '<dependent type>' contains-errors
    |       `-BinaryOperator 0x154941820 <col:24, col:34> '<dependent type>' contains-errors '<<'
    |         |-ArraySubscriptExpr 0x1549287c8 <col:24, col:29> '<dependent type>' contains-errors lvalue
    |         | |-ImplicitCastExpr 0x1549287b0 <col:24> '<dependent type>' contains-errors <LValueToRValue>
    |         | | `-RecoveryExpr 0x154928770 <col:24> '<dependent type>' contains-errors lvalue
    |         | `-IntegerLiteral 0x154928790 <col:28> 'int' 1
    |         `-IntegerLiteral 0x154941800 <col:34> 'int' 8
    |-CompoundAssignOperator 0x154941908 <line:10:2, col:12> 'int' contains-errors '>>=' ComputeLHSTy='int' ComputeResultTy='int'
    | |-DeclRefExpr 0x154941898 <col:2> 'int' contains-errors lvalue Var 0x154928690 'value' 'int'
    | `-ImplicitCastExpr 0x1549418f0 <col:12> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x1549418b8 <col:12> 'int' lvalue ParmVar 0x154928158 'bitoffset' 'int'
    |-CompoundAssignOperator 0x154941990 <line:11:2, col:11> 'int' contains-errors '&=' ComputeLHSTy='int' ComputeResultTy='int'
    | |-DeclRefExpr 0x154941938 <col:2> 'int' contains-errors lvalue Var 0x154928690 'value' 'int'
    | `-ImplicitCastExpr 0x154941978 <col:11> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x154941958 <col:11> 'int' lvalue Var 0x1549283c0 'mask' 'int'
    `-ReturnStmt 0x1549419f8 <line:12:2, col:9>
      `-ImplicitCastExpr 0x1549419e0 <col:9> 'int' contains-errors <LValueToRValue>
        `-DeclRefExpr 0x1549419c0 <col:9> 'int' contains-errors lvalue Var 0x154928690 'value' 'int'
