`-FunctionDecl 0x12d00de38  line:1:1 TEST 'int (int, int)'
  |-ParmVarDecl 0x12d00dd58 <col:6> col:6 used HeaderMapImplTest 'int'
  |-ParmVarDecl 0x12d00dcd8 <col:25> col:25 SetReferenceKey 'int'
  `-CompoundStmt 0x12d80acd8 <col:42, line:11:1>
    |-ImplicitCastExpr 0x12d00df70 <line:2:3> 'int' <LValueToRValue>
    | `-DeclRefExpr 0x12d00df50 <col:3> 'int' lvalue ParmVar 0x12d00dd58 'HeaderMapImplTest' 'int'
    |-CallExpr 0x12d80a360 <line:5:3, col:68> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12d00e110 <col:3> 'int ()' Function 0x12d00e058 'EXPECT_NE' 'int ()'
    | |-StringLiteral 0x12d00e130 <col:13> 'char[4]' lvalue "STR"
    | `-CallExpr 0x12d80a340 <col:20, col:67> '<dependent type>' contains-errors
    |   `-CXXDependentScopeMemberExpr 0x12d80a2f8 <col:20, col:62> '<dependent type>' contains-errors lvalue .data
    |     `-CallExpr 0x12d80a2d8 <col:20, col:60> '<dependent type>' contains-errors
    |       `-CXXDependentScopeMemberExpr 0x12d80a290 <col:20, col:46> '<dependent type>' contains-errors lvalue .getStringView
    |         `-CallExpr 0x12d80a270 <col:20, col:44> '<dependent type>' contains-errors
    |           `-CXXDependentScopeMemberExpr 0x12d80a228 <col:20, col:38> '<dependent type>' contains-errors lvalue ->value
    |             `-CallExpr 0x12d80a200 <col:20, col:35> '<dependent type>' contains-errors
    |               |-CXXDependentScopeMemberExpr 0x12d00e378 <col:20, col:28> '<dependent type>' contains-errors lvalue .get
    |               | `-RecoveryExpr 0x12d00e358 <col:20> '<dependent type>' contains-errors lvalue
    |               `-RecoveryExpr 0x12d00e3c0 <col:32> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x12d80a7d0 <line:6:3, col:61> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12d80a470 <col:3> 'int ()' Function 0x12d80a3b8 'EXPECT_EQ' 'int ()'
    | |-StringLiteral 0x12d80a490 <col:13> 'char[4]' lvalue "STR"
    | `-CallExpr 0x12d80a7b0 <col:20, col:60> '<dependent type>' contains-errors
    |   `-CXXDependentScopeMemberExpr 0x12d80a768 <col:20, col:46> '<dependent type>' contains-errors lvalue .getStringView
    |     `-CallExpr 0x12d80a748 <col:20, col:44> '<dependent type>' contains-errors
    |       `-CXXDependentScopeMemberExpr 0x12d80a700 <col:20, col:38> '<dependent type>' contains-errors lvalue ->value
    |         `-CallExpr 0x12d80a6d8 <col:20, col:35> '<dependent type>' contains-errors
    |           |-CXXDependentScopeMemberExpr 0x12d80a670 <col:20, col:28> '<dependent type>' contains-errors lvalue .get
    |           | `-RecoveryExpr 0x12d80a650 <col:20> '<dependent type>' contains-errors lvalue
    |           `-RecoveryExpr 0x12d80a6b8 <col:32> '<dependent type>' contains-errors lvalue
    `-CallExpr 0x12d80ac68 <line:9:3, col:68> '<dependent type>' contains-errors
      |-DeclRefExpr 0x12d80a838 <col:3> 'int ()' Function 0x12d00e058 'EXPECT_NE' 'int ()'
      |-StringLiteral 0x12d80a858 <col:13> 'char[4]' lvalue "STR"
      `-CallExpr 0x12d80ac48 <col:20, col:67> '<dependent type>' contains-errors
        `-CXXDependentScopeMemberExpr 0x12d80ac00 <col:20, col:62> '<dependent type>' contains-errors lvalue .data
          `-CallExpr 0x12d80abe0 <col:20, col:60> '<dependent type>' contains-errors
            `-CXXDependentScopeMemberExpr 0x12d80ab98 <col:20, col:46> '<dependent type>' contains-errors lvalue .getStringView
              `-CallExpr 0x12d80ab78 <col:20, col:44> '<dependent type>' contains-errors
                `-CXXDependentScopeMemberExpr 0x12d80ab30 <col:20, col:38> '<dependent type>' contains-errors lvalue ->value
                  `-CallExpr 0x12d80ab08 <col:20, col:35> '<dependent type>' contains-errors
                    |-CXXDependentScopeMemberExpr 0x12d80aaa0 <col:20, col:28> '<dependent type>' contains-errors lvalue .get
                    | `-RecoveryExpr 0x12d80aa80 <col:20> '<dependent type>' contains-errors lvalue
                    `-RecoveryExpr 0x12d80aae8 <col:32> '<dependent type>' contains-errors lvalue
