`-FunctionDecl 0x12800dec8  line:1:1 ZEND_VM_HELPER 'int (int, int, int)'
  |-ParmVarDecl 0x12800ddd8 <col:16> col:16 zend_sub_helper 'int'
  |-ParmVarDecl 0x12800dd58 <col:33> col:33 ANY 'int'
  |-ParmVarDecl 0x12800dcd8 <col:43> col:43 zval 'int'
  `-CompoundStmt 0x128028ff0 <line:2:1, line:20:1>
    |-IfStmt 0x128028558 <line:6:2, line:8:2>
    | |-CallExpr 0x12800e348 <line:6:6, col:48> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x12800e100 <col:6> 'int ()' Function 0x12800e048 'UNEXPECTED' 'int ()'
    | | `-BinaryOperator 0x12800e328 <col:17, col:40> 'int' contains-errors '=='
    | |   |-CallExpr 0x12800e2e0 <col:17, col:35> '<dependent type>' contains-errors
    | |   | |-DeclRefExpr 0x12800e200 <col:17> 'int ()' Function 0x12800e148 'Z_TYPE_INFO_P' 'int ()'
    | |   | `-RecoveryExpr 0x12800e2c0 <col:31> '<dependent type>' contains-errors lvalue
    | |   `-RecoveryExpr 0x12800e308 <col:40> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x128028548 <col:51, line:8:2>
    |-IfStmt 0x128028850 <line:9:2, line:11:2>
    | |-CallExpr 0x1280286e0 <line:9:6, col:48> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x128028578 <col:6> 'int ()' Function 0x12800e048 'UNEXPECTED' 'int ()'
    | | `-BinaryOperator 0x1280286c0 <col:17, col:40> 'int' contains-errors '=='
    | |   |-CallExpr 0x128028678 <col:17, col:35> '<dependent type>' contains-errors
    | |   | |-DeclRefExpr 0x128028598 <col:17> 'int ()' Function 0x12800e148 'Z_TYPE_INFO_P' 'int ()'
    | |   | `-RecoveryExpr 0x128028658 <col:31> '<dependent type>' contains-errors lvalue
    | |   `-RecoveryExpr 0x1280286a0 <col:40> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x128028840 <col:51, line:11:2>
    |-CallExpr 0x128028cc0 <line:12:2, col:53> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x128028950 <col:2> 'int ()' Function 0x128028898 'sub_function' 'int ()'
    | |-CallExpr 0x128028c58 <col:15, col:40> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x128028a50 <col:15> 'int ()' Function 0x128028998 'EX_VAR' 'int ()'
    | | `-CXXDependentScopeMemberExpr 0x128028c10 <col:22, col:37> '<dependent type>' contains-errors lvalue .var
    | |   `-CXXDependentScopeMemberExpr 0x128028bc8 <col:22, col:30> '<dependent type>' contains-errors lvalue ->result
    | |     `-RecoveryExpr 0x128028ba8 <col:22> '<dependent type>' contains-errors lvalue
    | |-RecoveryExpr 0x128028c80 <col:43> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x128028ca0 <col:49> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x128028e28 <line:13:2, line:15:2>
    | |-RecoveryExpr 0x128028cf8 <line:13:6, col:35> '_Bool' contains-errors
    | `-CompoundStmt 0x128028e18 <col:38, line:15:2>
    |-IfStmt 0x128028e98 <line:16:2, line:18:2>
    | |-RecoveryExpr 0x128028e48 <line:16:6, col:35> '_Bool' contains-errors
    | `-CompoundStmt 0x128028e88 <col:38, line:18:2>
    `-CallExpr 0x128028fd0 <line:19:2, col:38> 'int'
      `-ImplicitCastExpr 0x128028fb8 <col:2> 'int (*)()' <FunctionToPointerDecay>
        `-DeclRefExpr 0x128028f98 <col:2> 'int ()' Function 0x128028ee0 'ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION' 'int ()'
