`-FunctionDecl 0x1509289f8  line:1:12 invalid dnxhd_find_qscale 'int (int *)' static
  |-ParmVarDecl 0x150928928 <col:30, col:47> col:47 referenced invalid ctx 'int *'
  `-CompoundStmt 0x150944b38 <line:2:1, line:57:1>
    |-DeclStmt 0x150928b48 <line:3:5, col:17>
    | `-VarDecl 0x150928ac0 <col:5, col:16> col:9 used bits 'int' cinit
    |   `-IntegerLiteral 0x150928b28 <col:16> 'int' 0
    |-DeclStmt 0x150928c00 <line:4:5, col:20>
    | `-VarDecl 0x150928b78 <col:5, col:19> col:9 used up_step 'int' cinit
    |   `-IntegerLiteral 0x150928be0 <col:19> 'int' 1
    |-DeclStmt 0x150928cb8 <line:5:5, col:22>
    | `-VarDecl 0x150928c30 <col:5, col:21> col:9 used down_step 'int' cinit
    |   `-IntegerLiteral 0x150928c98 <col:21> 'int' 1
    |-DeclStmt 0x150928d70 <line:6:5, col:24>
    | `-VarDecl 0x150928ce8 <col:5, col:23> col:9 used last_higher 'int' cinit
    |   `-IntegerLiteral 0x150928d50 <col:23> 'int' 0
    |-DeclStmt 0x150928e40 <line:7:5, col:29>
    | `-VarDecl 0x150928da0 <col:5, col:22> col:9 used last_lower 'int' cinit
    |   `-RecoveryExpr 0x150928e20 <col:22> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x150928ed8 <line:8:5, col:15>
    | `-VarDecl 0x150928e70 <col:5, col:9> col:9 used qscale 'int'
    |-DeclStmt 0x150942018 <line:9:5, col:13>
    | |-VarDecl 0x150928f08 <col:5, col:9> col:9 used x 'int'
    | `-VarDecl 0x150928f88 <col:5, col:12> col:12 used y 'int'
    |-BinaryOperator 0x1509420b8 <line:11:5, col:19> 'int' contains-errors '='
    | |-DeclRefExpr 0x150942030 <col:5> 'int' lvalue Var 0x150928e70 'qscale' 'int'
    | `-CXXDependentScopeMemberExpr 0x150942070 <col:14, col:19> '<dependent type>' contains-errors lvalue ->qscale
    |   `-RecoveryExpr 0x150942050 <col:14> '<dependent type>' contains-errors lvalue
    |-ForStmt 0x150944a00 <line:12:5, line:53:5>
    | |-<<<NULL>>>
    | |-<<<NULL>>>
    | |-<<<NULL>>>
    | |-<<<NULL>>>
    | `-CompoundStmt 0x1509449c8 <line:12:14, line:53:5>
    |   |-BinaryOperator 0x150942118 <line:13:9, col:16> 'int' '='
    |   | |-DeclRefExpr 0x1509420d8 <col:9> 'int' lvalue Var 0x150928ac0 'bits' 'int'
    |   | `-IntegerLiteral 0x1509420f8 <col:16> 'int' 0
    |   |-BinaryOperator 0x1509421e8 <line:14:9, col:23> '<dependent type>' contains-errors '='
    |   | |-CXXDependentScopeMemberExpr 0x150942180 <col:9, col:14> '<dependent type>' contains-errors lvalue ->qscale
    |   | | `-RecoveryExpr 0x150942158 <col:9> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x150942138 <col:9> 'int *' lvalue ParmVar 0x150928928 'ctx' 'int *'
    |   | `-DeclRefExpr 0x1509421c8 <col:23> 'int' lvalue Var 0x150928e70 'qscale' 'int'
    |   |-CallExpr 0x150942578 <line:16:9, col:98> '<dependent type>' contains-errors
    |   | |-CXXDependentScopeMemberExpr 0x1509422e0 <col:9, col:23> '<dependent type>' contains-errors lvalue ->execute2
    |   | | `-CXXDependentScopeMemberExpr 0x150942298 <col:9, col:16> '<dependent type>' contains-errors lvalue .avctx
    |   | |   `-CXXDependentScopeMemberExpr 0x150942250 <col:9, col:14> '<dependent type>' contains-errors lvalue ->m
    |   | |     `-RecoveryExpr 0x150942228 <col:9> '<dependent type>' contains-errors lvalue
    |   | |       `-DeclRefExpr 0x150942208 <col:9> 'int *' lvalue ParmVar 0x150928928 'ctx' 'int *'
    |   | |-CXXDependentScopeMemberExpr 0x150942390 <col:32, col:39> '<dependent type>' contains-errors lvalue .avctx
    |   | | `-CXXDependentScopeMemberExpr 0x150942348 <col:32, col:37> '<dependent type>' contains-errors lvalue ->m
    |   | |   `-RecoveryExpr 0x150942328 <col:32> '<dependent type>' contains-errors lvalue
    |   | |-RecoveryExpr 0x150942518 <col:46> '<dependent type>' contains-errors lvalue
    |   | |-RecoveryExpr 0x150942538 <col:70> '<dependent type>' contains-errors lvalue
    |   | |-RecoveryExpr 0x150942558 <col:76> '<dependent type>' contains-errors lvalue
    |   | `-CXXDependentScopeMemberExpr 0x150942488 <col:82, col:89> '<dependent type>' contains-errors lvalue .mb_height
    |   |   `-CXXDependentScopeMemberExpr 0x150942440 <col:82, col:87> '<dependent type>' contains-errors lvalue ->m
    |   |     `-RecoveryExpr 0x150942420 <col:82> '<dependent type>' contains-errors lvalue
    |   |-ForStmt 0x150942e08 <line:17:9, line:23:9>
    |   | |-BinaryOperator 0x150942600 <line:17:14, col:18> 'int' '='
    |   | | |-DeclRefExpr 0x1509425c0 <col:14> 'int' lvalue Var 0x150928f88 'y' 'int'
    |   | | `-IntegerLiteral 0x1509425e0 <col:18> 'int' 0
    |   | |-<<<NULL>>>
    |   | |-BinaryOperator 0x1509426f0 <col:21, col:32> 'int' contains-errors '<'
    |   | | |-DeclRefExpr 0x150942620 <col:21> 'int' lvalue Var 0x150928f88 'y' 'int'
    |   | | `-CXXDependentScopeMemberExpr 0x1509426a8 <col:25, col:32> '<dependent type>' contains-errors lvalue .mb_height
    |   | |   `-CXXDependentScopeMemberExpr 0x150942660 <col:25, col:30> '<dependent type>' contains-errors lvalue ->m
    |   | |     `-RecoveryExpr 0x150942640 <col:25> '<dependent type>' contains-errors lvalue
    |   | |-UnaryOperator 0x150942730 <col:43, col:44> 'int' postfix '++'
    |   | | `-DeclRefExpr 0x150942710 <col:43> 'int' lvalue Var 0x150928f88 'y' 'int'
    |   | `-CompoundStmt 0x150942de0 <col:48, line:23:9>
    |   |   |-ForStmt 0x150942ba8 <line:18:13, line:19:65>
    |   |   | |-BinaryOperator 0x150942788 <line:18:18, col:22> 'int' '='
    |   |   | | |-DeclRefExpr 0x150942748 <col:18> 'int' lvalue Var 0x150928f08 'x' 'int'
    |   |   | | `-IntegerLiteral 0x150942768 <col:22> 'int' 0
    |   |   | |-<<<NULL>>>
    |   |   | |-BinaryOperator 0x150942878 <col:25, col:36> 'int' contains-errors '<'
    |   |   | | |-DeclRefExpr 0x1509427a8 <col:25> 'int' lvalue Var 0x150928f08 'x' 'int'
    |   |   | | `-CXXDependentScopeMemberExpr 0x150942830 <col:29, col:36> '<dependent type>' contains-errors lvalue .mb_width
    |   |   | |   `-CXXDependentScopeMemberExpr 0x1509427e8 <col:29, col:34> '<dependent type>' contains-errors lvalue ->m
    |   |   | |     `-RecoveryExpr 0x1509427c8 <col:29> '<dependent type>' contains-errors lvalue
    |   |   | |-UnaryOperator 0x1509428b8 <col:46, col:47> 'int' postfix '++'
    |   |   | | `-DeclRefExpr 0x150942898 <col:46> 'int' lvalue Var 0x150928f08 'x' 'int'
    |   |   | `-CompoundAssignOperator 0x150942b78 <line:19:17, col:65> 'int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   |   |   |-DeclRefExpr 0x1509428d0 <col:17> 'int' lvalue Var 0x150928ac0 'bits' 'int'
    |   |   |   `-CXXDependentScopeMemberExpr 0x150942b30 <col:25, col:65> '<dependent type>' contains-errors lvalue .bits
    |   |   |     `-ArraySubscriptExpr 0x150942b10 <col:25, col:63> '<dependent type>' contains-errors lvalue
    |   |   |       |-ImplicitCastExpr 0x150942af8 <col:25, col:42> '<dependent type>' contains-errors <LValueToRValue>
    |   |   |       | `-ArraySubscriptExpr 0x1509429a8 <col:25, col:42> '<dependent type>' contains-errors lvalue
    |   |   |       |   |-ImplicitCastExpr 0x150942978 <col:25, col:30> '<dependent type>' contains-errors <LValueToRValue>
    |   |   |       |   | `-CXXDependentScopeMemberExpr 0x150942910 <col:25, col:30> '<dependent type>' contains-errors lvalue ->mb_rc
    |   |   |       |   |   `-RecoveryExpr 0x1509428f0 <col:25> '<dependent type>' contains-errors lvalue
    |   |   |       |   `-ImplicitCastExpr 0x150942990 <col:36> 'int' <LValueToRValue>
    |   |   |       |     `-DeclRefExpr 0x150942958 <col:36> 'int' lvalue Var 0x150928e70 'qscale' 'int'
    |   |   |       `-BinaryOperator 0x150942ad8 <col:44, col:62> '<dependent type>' contains-errors '+'
    |   |   |         |-BinaryOperator 0x150942a98 <col:44, col:53> '<dependent type>' contains-errors '*'
    |   |   |         | |-DeclRefExpr 0x1509429c8 <col:44> 'int' lvalue Var 0x150928f88 'y' 'int'
    |   |   |         | `-CXXDependentScopeMemberExpr 0x150942a50 <col:46, col:53> '<dependent type>' contains-errors lvalue .mb_width
    |   |   |         |   `-CXXDependentScopeMemberExpr 0x150942a08 <col:46, col:51> '<dependent type>' contains-errors lvalue ->m
    |   |   |         |     `-RecoveryExpr 0x1509429e8 <col:46> '<dependent type>' contains-errors lvalue
    |   |   |         `-DeclRefExpr 0x150942ab8 <col:62> 'int' lvalue Var 0x150928f08 'x' 'int'
    |   |   |-BinaryOperator 0x150942cf0 <line:20:13, col:31> 'int' '='
    |   |   | |-DeclRefExpr 0x150942be0 <col:13> 'int' lvalue Var 0x150928ac0 'bits' 'int'
    |   |   | `-BinaryOperator 0x150942cd0 <col:20, col:31> 'int' '&'
    |   |   |   |-ParenExpr 0x150942c78 <col:20, col:28> 'int'
    |   |   |   | `-BinaryOperator 0x150942c58 <col:21, col:26> 'int' '+'
    |   |   |   |   |-ImplicitCastExpr 0x150942c40 <col:21> 'int' <LValueToRValue>
    |   |   |   |   | `-DeclRefExpr 0x150942c00 <col:21> 'int' lvalue Var 0x150928ac0 'bits' 'int'
    |   |   |   |   `-IntegerLiteral 0x150942c20 <col:26> 'int' 31
    |   |   |   `-UnaryOperator 0x150942cb8 <col:30, col:31> 'int' prefix '~' cannot overflow
    |   |   |     `-IntegerLiteral 0x150942c98 <col:31> 'int' 31
    |   |   `-IfStmt 0x150942dc0 <line:21:13, line:22:17>
    |   |     |-BinaryOperator 0x150942d98 <line:21:17, col:29> 'int' contains-errors '>'
    |   |     | |-DeclRefExpr 0x150942d10 <col:17> 'int' lvalue Var 0x150928ac0 'bits' 'int'
    |   |     | `-CXXDependentScopeMemberExpr 0x150942d50 <col:24, col:29> '<dependent type>' contains-errors lvalue ->frame_bits
    |   |     |   `-RecoveryExpr 0x150942d30 <col:24> '<dependent type>' contains-errors lvalue
    |   |     `-BreakStmt 0x150942db8 <line:22:17>
    |   `-IfStmt 0x150944998 <line:26:9, line:52:9> has_else
    |     |-BinaryOperator 0x150942ec8 <line:26:13, col:25> 'int' contains-errors '<'
    |     | |-DeclRefExpr 0x150942e40 <col:13> 'int' lvalue Var 0x150928ac0 'bits' 'int'
    |     | `-CXXDependentScopeMemberExpr 0x150942e80 <col:20, col:25> '<dependent type>' contains-errors lvalue ->frame_bits
    |     |   `-RecoveryExpr 0x150942e60 <col:20> '<dependent type>' contains-errors lvalue
    |     |-CompoundStmt 0x1509441b0 <col:37, line:41:9>
    |     | |-IfStmt 0x150942f90 <line:27:13, line:28:24>
    |     | | |-BinaryOperator 0x150942f40 <line:27:17, col:27> 'int' '=='
    |     | | | |-ImplicitCastExpr 0x150942f28 <col:17> 'int' <LValueToRValue>
    |     | | | | `-DeclRefExpr 0x150942ee8 <col:17> 'int' lvalue Var 0x150928e70 'qscale' 'int'
    |     | | | `-IntegerLiteral 0x150942f08 <col:27> 'int' 1
    |     | | `-ReturnStmt 0x150942f80 <line:28:17, col:24>
    |     | |   `-IntegerLiteral 0x150942f60 <col:24> 'int' 1
    |     | |-IfStmt 0x150943b30 <line:29:13, line:32:13>
    |     | | |-BinaryOperator 0x150943a70 <line:29:17, col:41> 'int' '=='
    |     | | | |-ImplicitCastExpr 0x150943a58 <col:17> 'int' <LValueToRValue>
    |     | | | | `-DeclRefExpr 0x150942fb0 <col:17> 'int' lvalue Var 0x150928ce8 'last_higher' 'int'
    |     | | | `-BinaryOperator 0x150943a38 <col:32, col:41> 'int' '-'
    |     | | |   |-ImplicitCastExpr 0x150943a20 <col:32> 'int' <LValueToRValue>
    |     | | |   | `-DeclRefExpr 0x150942fd0 <col:32> 'int' lvalue Var 0x150928e70 'qscale' 'int'
    |     | | |   `-IntegerLiteral 0x150943a00 <col:41> 'int' 1
    |     | | `-CompoundStmt 0x150943b10 <col:44, line:32:13>
    |     | |   |-BinaryOperator 0x150943ae8 <line:30:17, col:26> 'int' '='
    |     | |   | |-DeclRefExpr 0x150943a90 <col:17> 'int' lvalue Var 0x150928e70 'qscale' 'int'
    |     | |   | `-ImplicitCastExpr 0x150943ad0 <col:26> 'int' <LValueToRValue>
    |     | |   |   `-DeclRefExpr 0x150943ab0 <col:26> 'int' lvalue Var 0x150928ce8 'last_higher' 'int'
    |     | |   `-BreakStmt 0x150943b08 <line:31:17>
    |     | |-BinaryOperator 0x150943dd8 <line:33:13, col:50> 'int' contains-errors '='
    |     | | |-DeclRefExpr 0x150943b50 <col:13> 'int' contains-errors lvalue Var 0x150928da0 'last_lower' 'int'
    |     | | `-CallExpr 0x150943d78 <col:26, col:50> 'int' contains-errors
    |     | |   |-ImplicitCastExpr 0x150943d60 <col:26> 'int (*)()' <FunctionToPointerDecay>
    |     | |   | `-DeclRefExpr 0x150943cd0 <col:26> 'int ()' Function 0x150943c18 'FFMIN' 'int ()'
    |     | |   |-ImplicitCastExpr 0x150943da8 <col:32> 'int' <LValueToRValue>
    |     | |   | `-DeclRefExpr 0x150943cf0 <col:32> 'int' lvalue Var 0x150928e70 'qscale' 'int'
    |     | |   `-ImplicitCastExpr 0x150943dc0 <col:40> 'int' contains-errors <LValueToRValue>
    |     | |     `-DeclRefExpr 0x150943d10 <col:40> 'int' contains-errors lvalue Var 0x150928da0 'last_lower' 'int'
    |     | |-IfStmt 0x150944028 <line:34:13, line:37:36> has_else
    |     | | |-BinaryOperator 0x150943e50 <line:34:17, col:32> 'int' '!='
    |     | | | |-ImplicitCastExpr 0x150943e38 <col:17> 'int' <LValueToRValue>
    |     | | | | `-DeclRefExpr 0x150943df8 <col:17> 'int' lvalue Var 0x150928ce8 'last_higher' 'int'
    |     | | | `-IntegerLiteral 0x150943e18 <col:32> 'int' 0
    |     | | |-BinaryOperator 0x150943f80 <line:35:17, col:48> 'int' '='
    |     | | | |-DeclRefExpr 0x150943e70 <col:17> 'int' lvalue Var 0x150928e70 'qscale' 'int'
    |     | | | `-BinaryOperator 0x150943f60 <col:26, col:48> 'int' '>>'
    |     | | |   |-ParenExpr 0x150943f20 <col:26, col:45> 'int'
    |     | | |   | `-BinaryOperator 0x150943f00 <col:27, col:34> 'int' '+'
    |     | | |   |   |-ImplicitCastExpr 0x150943ed0 <col:27> 'int' <LValueToRValue>
    |     | | |   |   | `-DeclRefExpr 0x150943e90 <col:27> 'int' lvalue Var 0x150928e70 'qscale' 'int'
    |     | | |   |   `-ImplicitCastExpr 0x150943ee8 <col:34> 'int' <LValueToRValue>
    |     | | |   |     `-DeclRefExpr 0x150943eb0 <col:34> 'int' lvalue Var 0x150928ce8 'last_higher' 'int'
    |     | | |   `-IntegerLiteral 0x150943f40 <col:48> 'int' 1
    |     | | `-CompoundAssignOperator 0x150943ff8 <line:37:17, col:36> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
    |     | |   |-DeclRefExpr 0x150943fa0 <col:17> 'int' lvalue Var 0x150928e70 'qscale' 'int'
    |     | |   `-UnaryOperator 0x150943fe0 <col:27, col:36> 'int' postfix '++'
    |     | |     `-DeclRefExpr 0x150943fc0 <col:27> 'int' lvalue Var 0x150928c30 'down_step' 'int'
    |     | |-IfStmt 0x150944130 <line:38:13, line:39:26>
    |     | | |-BinaryOperator 0x1509440b0 <line:38:17, col:26> 'int' '<'
    |     | | | |-ImplicitCastExpr 0x150944098 <col:17> 'int' <LValueToRValue>
    |     | | | | `-DeclRefExpr 0x150944058 <col:17> 'int' lvalue Var 0x150928e70 'qscale' 'int'
    |     | | | `-IntegerLiteral 0x150944078 <col:26> 'int' 1
    |     | | `-BinaryOperator 0x150944110 <line:39:17, col:26> 'int' '='
    |     | |   |-DeclRefExpr 0x1509440d0 <col:17> 'int' lvalue Var 0x150928e70 'qscale' 'int'
    |     | |   `-IntegerLiteral 0x1509440f0 <col:26> 'int' 1
    |     | `-BinaryOperator 0x150944190 <line:40:13, col:23> 'int' '='
    |     |   |-DeclRefExpr 0x150944150 <col:13> 'int' lvalue Var 0x150928b78 'up_step' 'int'
    |     |   `-IntegerLiteral 0x150944170 <col:23> 'int' 1
    |     `-CompoundStmt 0x150944960 <line:41:16, line:52:9>
    |       |-IfStmt 0x1509442c8 <line:42:13, line:43:17>
    |       | |-BinaryOperator 0x1509442a0 <line:42:17, col:40> 'int' contains-errors '=='
    |       | | |-ImplicitCastExpr 0x150944288 <col:17> 'int' contains-errors <LValueToRValue>
    |       | | | `-DeclRefExpr 0x1509441f0 <col:17> 'int' contains-errors lvalue Var 0x150928da0 'last_lower' 'int'
    |       | | `-BinaryOperator 0x150944268 <col:31, col:40> 'int' '+'
    |       | |   |-ImplicitCastExpr 0x150944250 <col:31> 'int' <LValueToRValue>
    |       | |   | `-DeclRefExpr 0x150944210 <col:31> 'int' lvalue Var 0x150928e70 'qscale' 'int'
    |       | |   `-IntegerLiteral 0x150944230 <col:40> 'int' 1
    |       | `-BreakStmt 0x1509442c0 <line:43:17>
    |       |-BinaryOperator 0x1509444c0 <line:44:13, col:52> 'int' '='
    |       | |-DeclRefExpr 0x1509442e8 <col:13> 'int' lvalue Var 0x150928ce8 'last_higher' 'int'
    |       | `-CallExpr 0x150944460 <col:27, col:52> 'int'
    |       |   |-ImplicitCastExpr 0x150944448 <col:27> 'int (*)()' <FunctionToPointerDecay>
    |       |   | `-DeclRefExpr 0x1509443e8 <col:27> 'int ()' Function 0x150944330 'FFMAX' 'int ()'
    |       |   |-ImplicitCastExpr 0x150944490 <col:33> 'int' <LValueToRValue>
    |       |   | `-DeclRefExpr 0x150944408 <col:33> 'int' lvalue Var 0x150928e70 'qscale' 'int'
    |       |   `-ImplicitCastExpr 0x1509444a8 <col:41> 'int' <LValueToRValue>
    |       |     `-DeclRefExpr 0x150944428 <col:41> 'int' lvalue Var 0x150928ce8 'last_higher' 'int'
    |       |-IfStmt 0x150944730 <line:45:13, line:48:34> has_else
    |       | |-BinaryOperator 0x150944558 <line:45:17, col:31> 'int' contains-errors '!='
    |       | | |-DeclRefExpr 0x1509444e0 <col:17> 'int' contains-errors lvalue Var 0x150928da0 'last_lower' 'int'
    |       | | `-RecoveryExpr 0x150944538 <col:31> '<dependent type>' contains-errors lvalue
    |       | |-BinaryOperator 0x150944688 <line:46:17, col:47> 'int' contains-errors '='
    |       | | |-DeclRefExpr 0x150944578 <col:17> 'int' lvalue Var 0x150928e70 'qscale' 'int'
    |       | | `-BinaryOperator 0x150944668 <col:26, col:47> 'int' contains-errors '>>'
    |       | |   |-ParenExpr 0x150944628 <col:26, col:44> 'int' contains-errors
    |       | |   | `-BinaryOperator 0x150944608 <col:27, col:34> 'int' contains-errors '+'
    |       | |   |   |-ImplicitCastExpr 0x1509445d8 <col:27> 'int' <LValueToRValue>
    |       | |   |   | `-DeclRefExpr 0x150944598 <col:27> 'int' lvalue Var 0x150928e70 'qscale' 'int'
    |       | |   |   `-ImplicitCastExpr 0x1509445f0 <col:34> 'int' contains-errors <LValueToRValue>
    |       | |   |     `-DeclRefExpr 0x1509445b8 <col:34> 'int' contains-errors lvalue Var 0x150928da0 'last_lower' 'int'
    |       | |   `-IntegerLiteral 0x150944648 <col:47> 'int' 1
    |       | `-CompoundAssignOperator 0x150944700 <line:48:17, col:34> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |       |   |-DeclRefExpr 0x1509446a8 <col:17> 'int' lvalue Var 0x150928e70 'qscale' 'int'
    |       |   `-UnaryOperator 0x1509446e8 <col:27, col:34> 'int' postfix '++'
    |       |     `-DeclRefExpr 0x1509446c8 <col:27> 'int' lvalue Var 0x150928b78 'up_step' 'int'
    |       |-BinaryOperator 0x1509447a0 <line:49:13, col:25> 'int' '='
    |       | |-DeclRefExpr 0x150944760 <col:13> 'int' lvalue Var 0x150928c30 'down_step' 'int'
    |       | `-IntegerLiteral 0x150944780 <col:25> 'int' 1
    |       `-IfStmt 0x150944940 <line:50:13, line:51:25>
    |         |-BinaryOperator 0x1509448d8 <line:50:17, col:41> 'int' contains-errors '>='
    |         | |-DeclRefExpr 0x1509447c0 <col:17> 'int' lvalue Var 0x150928e70 'qscale' 'int'
    |         | `-CXXDependentScopeMemberExpr 0x150944890 <col:27, col:41> '<dependent type>' contains-errors lvalue ->qmax
    |         |   `-CXXDependentScopeMemberExpr 0x150944848 <col:27, col:34> '<dependent type>' contains-errors lvalue .avctx
    |         |     `-CXXDependentScopeMemberExpr 0x150944800 <col:27, col:32> '<dependent type>' contains-errors lvalue ->m
    |         |       `-RecoveryExpr 0x1509447e0 <col:27> '<dependent type>' contains-errors lvalue
    |         `-ReturnStmt 0x150944930 <line:51:17, col:25>
    |           `-UnaryOperator 0x150944918 <col:24, col:25> 'int' prefix '-'
    |             `-IntegerLiteral 0x1509448f8 <col:25> 'int' 1
    |-BinaryOperator 0x150944ae8 <line:55:5, col:19> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x150944a80 <col:5, col:10> '<dependent type>' contains-errors lvalue ->qscale
    | | `-RecoveryExpr 0x150944a58 <col:5> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x150944a38 <col:5> 'int *' lvalue ParmVar 0x150928928 'ctx' 'int *'
    | `-DeclRefExpr 0x150944ac8 <col:19> 'int' lvalue Var 0x150928e70 'qscale' 'int'
    `-ReturnStmt 0x150944b28 <line:56:5, col:12>
      `-IntegerLiteral 0x150944b08 <col:12> 'int' 0
