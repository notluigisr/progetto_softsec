`-FunctionDecl 0x14c80de88  line:1:14 invalid Prepare 'int (int *, int *)'
  |-ParmVarDecl 0x14c80dd28 <col:22, col:37> col:37 referenced invalid context 'int *'
  |-ParmVarDecl 0x14c80dda8 <col:46, col:58> col:58 invalid node 'int *'
  `-CompoundStmt 0x14c124fa0 <col:64, line:37:1>
    |-CallExpr 0x14c80e248 <line:2:3, col:48> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14c80e0a0 <col:3> 'int ()' Function 0x14c80dfe8 'TF_LITE_ENSURE_EQ' 'int ()'
    | |-RecoveryExpr 0x14c80e0c0 <col:21> '<dependent type>' contains-errors lvalue
    | |-CallExpr 0x14c80e200 <col:30, col:44> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x14c80e1c0 <col:30> 'int ()' Function 0x14c80e108 'NumInputs' 'int ()'
    | | `-RecoveryExpr 0x14c80e1e0 <col:40> '<dependent type>' contains-errors lvalue
    | `-IntegerLiteral 0x14c80e228 <col:47> 'int' 2
    |-CallExpr 0x14c123248 <line:3:3, col:49> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14c80e280 <col:3> 'int ()' Function 0x14c80dfe8 'TF_LITE_ENSURE_EQ' 'int ()'
    | |-RecoveryExpr 0x14c80e2a0 <col:21> '<dependent type>' contains-errors lvalue
    | |-CallExpr 0x14c123200 <col:30, col:45> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x14c80e3a0 <col:30> 'int ()' Function 0x14c80e2e8 'NumOutputs' 'int ()'
    | | `-RecoveryExpr 0x14c80e3c0 <col:41> '<dependent type>' contains-errors lvalue
    | `-IntegerLiteral 0x14c123228 <col:48> 'int' 1
    |-DeclStmt 0x14c123560 <line:8:3, col:70>
    | `-VarDecl 0x14c123368 <col:3, col:23> col:23 invalid input1 'const int *'
    |-DeclStmt 0x14c1236a8 <line:9:3, col:70>
    | `-VarDecl 0x14c123590 <col:3, col:23> col:23 invalid input2 'const int *'
    |-CallExpr 0x14c123a58 <line:12:3, col:62> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14c123948 <col:3> 'int ()' Function 0x14c123890 'TF_LITE_ENSURE_TYPES_EQ' 'int ()'
    | |-RecoveryExpr 0x14c123968 <col:27> '<dependent type>' contains-errors lvalue
    | |-CXXDependentScopeMemberExpr 0x14c1239a8 <col:36, col:44> '<dependent type>' contains-errors lvalue ->type
    | | `-RecoveryExpr 0x14c123988 <col:36> '<dependent type>' contains-errors lvalue
    | `-CXXDependentScopeMemberExpr 0x14c123a10 <col:50, col:58> '<dependent type>' contains-errors lvalue ->type
    |   `-RecoveryExpr 0x14c1239f0 <col:50> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x14c123b78 <line:14:3, col:39>
    | `-VarDecl 0x14c123aa8 <col:3, col:20> col:20 invalid type 'const int'
    |-SwitchStmt 0x14c123bc8 <line:15:3, line:23:3>
    | |-ImplicitCastExpr 0x14c123bb0 <line:15:11> '<dependent type>' contains-errors <LValueToRValue>
    | | `-RecoveryExpr 0x14c123b90 <col:11> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x14c123eb0 <col:17, line:23:3>
    |   |-BreakStmt 0x14c123bf0 <line:18:7>
    |   `-DefaultStmt 0x14c123e90 <line:19:5, line:21:51>
    |     `-CallExpr 0x14c123e58 <line:20:7, line:21:51> '<dependent type>' contains-errors
    |       |-CXXDependentScopeMemberExpr 0x14c123c40 <line:20:7, col:16> '<dependent type>' contains-errors lvalue ->ReportError
    |       | `-RecoveryExpr 0x14c123c18 <col:7> '<dependent type>' contains-errors lvalue
    |       |   `-DeclRefExpr 0x14c123bf8 <col:7> 'int *' lvalue ParmVar 0x14c80dd28 'context' 'int *'
    |       |-RecoveryExpr 0x14c123c88 <col:28> '<dependent type>' contains-errors lvalue
    |       |-StringLiteral 0x14c123cf0 <col:37> 'char[4]' lvalue "STR"
    |       `-CallExpr 0x14c123e30 <line:21:28, col:50> '<dependent type>' contains-errors
    |         |-DeclRefExpr 0x14c123df0 <col:28> 'int ()' Function 0x14c123d38 'TfLiteTypeGetName' 'int ()'
    |         `-RecoveryExpr 0x14c123e10 <col:46> '<dependent type>' contains-errors lvalue
    `-IfStmt 0x14c124ee8 <line:29:3, line:34:3> has_else
      |-RecoveryExpr 0x14c124078 <line:29:7, col:13> '_Bool' contains-errors
      |-CompoundStmt 0x14c124d38 <col:33, line:32:3>
      `-CompoundStmt 0x14c124ed8 <col:10, line:34:3>
