`-FunctionDecl 0x11f928288  line:1:1 invalid stl_update_connects_remove_1 'int (int *, int)'
  |-ParmVarDecl 0x11f928128 <col:30, col:40> col:40 referenced invalid stl 'int *'
  |-ParmVarDecl 0x11f9281a8 <col:45, col:49> col:49 used facet_num 'int'
  `-CompoundStmt 0x11f942090 <col:60, line:16:1>
    |-DeclStmt 0x11f9283c0 <line:2:3, col:8>
    | `-VarDecl 0x11f928358 <col:3, col:7> col:7 used j 'int'
    |-IfStmt 0x11f928450 <line:4:3, col:19>
    | |-CXXDependentScopeMemberExpr 0x11f9283f8 <col:7, col:12> '<dependent type>' contains-errors lvalue ->error
    | | `-RecoveryExpr 0x11f9283d8 <col:7> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x11f928440 <col:19>
    |-BinaryOperator 0x11f941ac8 <line:6:3, line:8:59> 'int' contains-errors '='
    | |-DeclRefExpr 0x11f928470 <line:6:3> 'int' lvalue Var 0x11f928358 'j' 'int'
    | `-ParenExpr 0x11f941aa8 <col:7, line:8:59> '<dependent type>' contains-errors
    |   `-BinaryOperator 0x11f941a88 <line:6:8, line:8:58> '<dependent type>' contains-errors '+'
    |     |-BinaryOperator 0x11f941878 <line:6:8, line:7:58> '<dependent type>' contains-errors '+'
    |     | |-ParenExpr 0x11f928660 <line:6:8, col:58> 'int' contains-errors
    |     | | `-BinaryOperator 0x11f928640 <col:9, col:57> 'int' contains-errors '=='
    |     | |   |-ArraySubscriptExpr 0x11f9285e8 <col:9, col:51> '<dependent type>' contains-errors lvalue
    |     | |   | |-ImplicitCastExpr 0x11f9285d0 <col:9, col:41> '<dependent type>' contains-errors <LValueToRValue>
    |     | |   | | `-CXXDependentScopeMemberExpr 0x11f928568 <col:9, col:41> '<dependent type>' contains-errors lvalue .neighbor
    |     | |   | |   `-ArraySubscriptExpr 0x11f928548 <col:9, col:39> '<dependent type>' contains-errors lvalue
    |     | |   | |     |-ImplicitCastExpr 0x11f928518 <col:9, col:14> '<dependent type>' contains-errors <LValueToRValue>
    |     | |   | |     | `-CXXDependentScopeMemberExpr 0x11f9284b0 <col:9, col:14> '<dependent type>' contains-errors lvalue ->neighbors_start
    |     | |   | |     |   `-RecoveryExpr 0x11f928490 <col:9> '<dependent type>' contains-errors lvalue
    |     | |   | |     `-ImplicitCastExpr 0x11f928530 <col:30> 'int' <LValueToRValue>
    |     | |   | |       `-DeclRefExpr 0x11f9284f8 <col:30> 'int' lvalue ParmVar 0x11f9281a8 'facet_num' 'int'
    |     | |   | `-IntegerLiteral 0x11f9285b0 <col:50> 'int' 0
    |     | |   `-UnaryOperator 0x11f928628 <col:56, col:57> 'int' prefix '-'
    |     | |     `-IntegerLiteral 0x11f928608 <col:57> 'int' 1
    |     | `-ParenExpr 0x11f941858 <line:7:8, col:58> 'int' contains-errors
    |     |   `-BinaryOperator 0x11f941838 <col:9, col:57> 'int' contains-errors '=='
    |     |     |-ArraySubscriptExpr 0x11f9287d8 <col:9, col:51> '<dependent type>' contains-errors lvalue
    |     |     | |-ImplicitCastExpr 0x11f9287c0 <col:9, col:41> '<dependent type>' contains-errors <LValueToRValue>
    |     |     | | `-CXXDependentScopeMemberExpr 0x11f928758 <col:9, col:41> '<dependent type>' contains-errors lvalue .neighbor
    |     |     | |   `-ArraySubscriptExpr 0x11f928738 <col:9, col:39> '<dependent type>' contains-errors lvalue
    |     |     | |     |-ImplicitCastExpr 0x11f928708 <col:9, col:14> '<dependent type>' contains-errors <LValueToRValue>
    |     |     | |     | `-CXXDependentScopeMemberExpr 0x11f9286a0 <col:9, col:14> '<dependent type>' contains-errors lvalue ->neighbors_start
    |     |     | |     |   `-RecoveryExpr 0x11f928680 <col:9> '<dependent type>' contains-errors lvalue
    |     |     | |     `-ImplicitCastExpr 0x11f928720 <col:30> 'int' <LValueToRValue>
    |     |     | |       `-DeclRefExpr 0x11f9286e8 <col:30> 'int' lvalue ParmVar 0x11f9281a8 'facet_num' 'int'
    |     |     | `-IntegerLiteral 0x11f9287a0 <col:50> 'int' 1
    |     |     `-UnaryOperator 0x11f941820 <col:56, col:57> 'int' prefix '-'
    |     |       `-IntegerLiteral 0x11f941800 <col:57> 'int' 1
    |     `-ParenExpr 0x11f941a68 <line:8:8, col:58> 'int' contains-errors
    |       `-BinaryOperator 0x11f941a48 <col:9, col:57> 'int' contains-errors '=='
    |         |-ArraySubscriptExpr 0x11f9419f0 <col:9, col:51> '<dependent type>' contains-errors lvalue
    |         | |-ImplicitCastExpr 0x11f9419d8 <col:9, col:41> '<dependent type>' contains-errors <LValueToRValue>
    |         | | `-CXXDependentScopeMemberExpr 0x11f941970 <col:9, col:41> '<dependent type>' contains-errors lvalue .neighbor
    |         | |   `-ArraySubscriptExpr 0x11f941950 <col:9, col:39> '<dependent type>' contains-errors lvalue
    |         | |     |-ImplicitCastExpr 0x11f941920 <col:9, col:14> '<dependent type>' contains-errors <LValueToRValue>
    |         | |     | `-CXXDependentScopeMemberExpr 0x11f9418b8 <col:9, col:14> '<dependent type>' contains-errors lvalue ->neighbors_start
    |         | |     |   `-RecoveryExpr 0x11f941898 <col:9> '<dependent type>' contains-errors lvalue
    |         | |     `-ImplicitCastExpr 0x11f941938 <col:30> 'int' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x11f941900 <col:30> 'int' lvalue ParmVar 0x11f9281a8 'facet_num' 'int'
    |         | `-IntegerLiteral 0x11f9419b8 <col:50> 'int' 2
    |         `-UnaryOperator 0x11f941a30 <col:56, col:57> 'int' prefix '-'
    |           `-IntegerLiteral 0x11f941a10 <col:57> 'int' 1
    `-IfStmt 0x11f942060 <line:9:3, line:15:3> has_else
      |-BinaryOperator 0x11f941b40 <line:9:6, col:11> 'int' '=='
      | |-ImplicitCastExpr 0x11f941b28 <col:6> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x11f941ae8 <col:6> 'int' lvalue Var 0x11f928358 'j' 'int'
      | `-IntegerLiteral 0x11f941b08 <col:11> 'int' 0
      |-CompoundStmt 0x11f941c88 <col:14, line:11:3>
      | `-CompoundAssignOperator 0x11f941c58 <line:10:5, col:43> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
      |   |-CXXDependentScopeMemberExpr 0x11f941bf0 <col:5, col:16> '<dependent type>' contains-errors lvalue .connected_facets_3_edge
      |   | `-CXXDependentScopeMemberExpr 0x11f941ba8 <col:5, col:10> '<dependent type>' contains-errors lvalue ->stats
      |   |   `-RecoveryExpr 0x11f941b80 <col:5> '<dependent type>' contains-errors lvalue
      |   |     `-DeclRefExpr 0x11f941b60 <col:5> 'int *' lvalue ParmVar 0x11f928128 'stl' 'int *'
      |   `-IntegerLiteral 0x11f941c38 <col:43> 'int' 1
      `-IfStmt 0x11f942030 <line:11:10, line:15:3> has_else
        |-BinaryOperator 0x11f941cf8 <line:11:13, col:18> 'int' '=='
        | |-ImplicitCastExpr 0x11f941ce0 <col:13> 'int' <LValueToRValue>
        | | `-DeclRefExpr 0x11f941ca0 <col:13> 'int' lvalue Var 0x11f928358 'j' 'int'
        | `-IntegerLiteral 0x11f941cc0 <col:18> 'int' 1
        |-CompoundStmt 0x11f941e40 <col:21, line:13:3>
        | `-CompoundAssignOperator 0x11f941e10 <line:12:5, col:43> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
        |   |-CXXDependentScopeMemberExpr 0x11f941da8 <col:5, col:16> '<dependent type>' contains-errors lvalue .connected_facets_2_edge
        |   | `-CXXDependentScopeMemberExpr 0x11f941d60 <col:5, col:10> '<dependent type>' contains-errors lvalue ->stats
        |   |   `-RecoveryExpr 0x11f941d38 <col:5> '<dependent type>' contains-errors lvalue
        |   |     `-DeclRefExpr 0x11f941d18 <col:5> 'int *' lvalue ParmVar 0x11f928128 'stl' 'int *'
        |   `-IntegerLiteral 0x11f941df0 <col:43> 'int' 1
        `-IfStmt 0x11f942010 <line:13:10, line:15:3>
          |-BinaryOperator 0x11f941eb0 <line:13:13, col:18> 'int' '=='
          | |-ImplicitCastExpr 0x11f941e98 <col:13> 'int' <LValueToRValue>
          | | `-DeclRefExpr 0x11f941e58 <col:13> 'int' lvalue Var 0x11f928358 'j' 'int'
          | `-IntegerLiteral 0x11f941e78 <col:18> 'int' 2
          `-CompoundStmt 0x11f941ff8 <col:21, line:15:3>
            `-CompoundAssignOperator 0x11f941fc8 <line:14:5, col:43> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
              |-CXXDependentScopeMemberExpr 0x11f941f60 <col:5, col:16> '<dependent type>' contains-errors lvalue .connected_facets_1_edge
              | `-CXXDependentScopeMemberExpr 0x11f941f18 <col:5, col:10> '<dependent type>' contains-errors lvalue ->stats
              |   `-RecoveryExpr 0x11f941ef0 <col:5> '<dependent type>' contains-errors lvalue
              |     `-DeclRefExpr 0x11f941ed0 <col:5> 'int *' lvalue ParmVar 0x11f928128 'stl' 'int *'
              `-IntegerLiteral 0x11f941fa8 <col:43> 'int' 1
