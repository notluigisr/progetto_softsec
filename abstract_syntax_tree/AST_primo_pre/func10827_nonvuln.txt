`-FunctionDecl 0x127026688  line:1:1 __ctnetlink_change_status 'int (struct nf_conn *, unsigned long, unsigned long)'
  |-ParmVarDecl 0x12700e248 <col:27, col:43> col:43 used ct 'struct nf_conn *'
  |-ParmVarDecl 0x12700e2c8 <col:47, col:61> col:61 used on 'unsigned long'
  |-ParmVarDecl 0x12700e348 <line:2:6, col:20> col:20 used off 'unsigned long'
  `-CompoundStmt 0x127027228 <line:3:1, line:16:1>
    |-DeclStmt 0x127026810 <line:4:2, col:18>
    | `-VarDecl 0x1270267a8 <col:2, col:15> col:15 used bit 'unsigned int'
    |-CompoundAssignOperator 0x127026928 <line:7:2, col:9> 'unsigned long' contains-errors '&=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | |-DeclRefExpr 0x127026828 <col:2> 'unsigned long' lvalue ParmVar 0x12700e2c8 'on' 'unsigned long'
    | `-UnaryOperator 0x127026910 <col:8, col:9> '<dependent type>' contains-errors prefix '~' cannot overflow
    |   `-ImplicitCastExpr 0x1270268f8 <col:9> '<dependent type>' contains-errors <LValueToRValue>
    |     `-RecoveryExpr 0x1270268d8 <col:9> '<dependent type>' contains-errors lvalue
    |-CompoundAssignOperator 0x127026a40 <line:8:2, col:10> 'unsigned long' contains-errors '&=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | |-DeclRefExpr 0x127026958 <col:2> 'unsigned long' lvalue ParmVar 0x12700e348 'off' 'unsigned long'
    | `-UnaryOperator 0x127026a28 <col:9, col:10> '<dependent type>' contains-errors prefix '~' cannot overflow
    |   `-ImplicitCastExpr 0x127026a10 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    |     `-RecoveryExpr 0x1270269f0 <col:10> '<dependent type>' contains-errors lvalue
    `-ForStmt 0x1270271f0 <line:10:2, line:15:2>
      |-BinaryOperator 0x127026ac8 <line:10:7, col:13> 'unsigned int' '='
      | |-DeclRefExpr 0x127026a70 <col:7> 'unsigned int' lvalue Var 0x1270267a8 'bit' 'unsigned int'
      | `-ImplicitCastExpr 0x127026ab0 <col:13> 'unsigned int' <IntegralCast>
      |   `-IntegerLiteral 0x127026a90 <col:13> 'int' 0
      |-<<<NULL>>>
      |-BinaryOperator 0x127026b60 <col:16, col:22> 'int' contains-errors '<'
      | |-DeclRefExpr 0x127026ae8 <col:16> 'unsigned int' lvalue Var 0x1270267a8 'bit' 'unsigned int'
      | `-RecoveryExpr 0x127026b40 <col:22> '<dependent type>' contains-errors lvalue
      |-UnaryOperator 0x127026ba0 <col:37, col:40> 'unsigned int' postfix '++'
      | `-DeclRefExpr 0x127026b80 <col:37> 'unsigned int' lvalue Var 0x1270267a8 'bit' 'unsigned int'
      `-CompoundStmt 0x1270271d8 <col:44, line:15:2>
        `-IfStmt 0x1270271a8 <line:11:3, line:14:30> has_else
          |-BinaryOperator 0x127026ca0 <line:11:7, col:21> 'unsigned long' '&'
          | |-ImplicitCastExpr 0x127026c70 <col:7> 'unsigned long' <LValueToRValue>
          | | `-DeclRefExpr 0x127026bb8 <col:7> 'unsigned long' lvalue ParmVar 0x12700e2c8 'on' 'unsigned long'
          | `-ImplicitCastExpr 0x127026c88 <col:12, col:21> 'unsigned long' <IntegralCast>
          |   `-ParenExpr 0x127026c50 <col:12, col:21> 'int'
          |     `-BinaryOperator 0x127026c30 <col:13, col:18> 'int' '<<'
          |       |-IntegerLiteral 0x127026bd8 <col:13> 'int' 1
          |       `-ImplicitCastExpr 0x127026c18 <col:18> 'unsigned int' <LValueToRValue>
          |         `-DeclRefExpr 0x127026bf8 <col:18> 'unsigned int' lvalue Var 0x1270267a8 'bit' 'unsigned int'
          |-CallExpr 0x127026e88 <line:12:4, col:28> '<dependent type>' contains-errors
          | |-DeclRefExpr 0x127026dd0 <col:4> 'int ()' Function 0x127026d18 'set_bit' 'int ()'
          | |-DeclRefExpr 0x127026df0 <col:12> 'unsigned int' lvalue Var 0x1270267a8 'bit' 'unsigned int'
          | `-UnaryOperator 0x127026e70 <col:17, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow
          |   `-RecoveryExpr 0x127026e48 <col:18, col:22> '<dependent type>' contains-errors lvalue
          |     `-DeclRefExpr 0x127026e10 <col:18> 'struct nf_conn *' lvalue ParmVar 0x12700e248 'ct' 'struct nf_conn *'
          `-IfStmt 0x127027188 <line:13:8, line:14:30>
            |-BinaryOperator 0x127026fa0 <line:13:12, col:27> 'unsigned long' '&'
            | |-ImplicitCastExpr 0x127026f70 <col:12> 'unsigned long' <LValueToRValue>
            | | `-DeclRefExpr 0x127026eb8 <col:12> 'unsigned long' lvalue ParmVar 0x12700e348 'off' 'unsigned long'
            | `-ImplicitCastExpr 0x127026f88 <col:18, col:27> 'unsigned long' <IntegralCast>
            |   `-ParenExpr 0x127026f50 <col:18, col:27> 'int'
            |     `-BinaryOperator 0x127026f30 <col:19, col:24> 'int' '<<'
            |       |-IntegerLiteral 0x127026ed8 <col:19> 'int' 1
            |       `-ImplicitCastExpr 0x127026f18 <col:24> 'unsigned int' <LValueToRValue>
            |         `-DeclRefExpr 0x127026ef8 <col:24> 'unsigned int' lvalue Var 0x1270267a8 'bit' 'unsigned int'
            `-CallExpr 0x127027158 <line:14:4, col:30> '<dependent type>' contains-errors
              |-DeclRefExpr 0x1270270a0 <col:4> 'int ()' Function 0x127026fe8 'clear_bit' 'int ()'
              |-DeclRefExpr 0x1270270c0 <col:14> 'unsigned int' lvalue Var 0x1270267a8 'bit' 'unsigned int'
              `-UnaryOperator 0x127027140 <col:19, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow
                `-RecoveryExpr 0x127027118 <col:20, col:24> '<dependent type>' contains-errors lvalue
                  `-DeclRefExpr 0x1270270e0 <col:20> 'struct nf_conn *' lvalue ParmVar 0x12700e248 'ct' 'struct nf_conn *'
