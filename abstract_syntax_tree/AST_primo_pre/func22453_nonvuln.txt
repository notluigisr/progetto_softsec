`-FunctionDecl 0x121128288  line:1:12 invalid l_strton 'int (const int *, int *)' static
  |-ParmVarDecl 0x1211280f0 <col:22, col:36> col:36 invalid obj 'const int *'
  |-ParmVarDecl 0x1211281a8 <col:41, col:49> col:49 invalid result 'int *'
  `-CompoundStmt 0x121141b78 <col:57, line:7:1>
    |-CallExpr 0x121128520 <line:2:3, col:27> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1211284a0 <col:3> 'int ()' Function 0x1211283e8 'lua_assert' 'int ()'
    | `-BinaryOperator 0x121128500 <col:14, col:21> 'int' contains-errors '!='
    |   |-RecoveryExpr 0x1211284c0 <col:14> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x1211284e0 <col:21> '<dependent type>' contains-errors lvalue
    `-IfStmt 0x121141b48 <line:3:3, line:6:64> has_else
      |-UnaryOperator 0x121128690 <line:3:7, col:19> '<dependent type>' contains-errors prefix '!' cannot overflow
      | `-CallExpr 0x121128668 <col:8, col:19> '<dependent type>' contains-errors
      |   |-DeclRefExpr 0x121128628 <col:8> 'int ()' Function 0x121128570 'cvt2num' 'int ()'
      |   `-RecoveryExpr 0x121128648 <col:16> '<dependent type>' contains-errors lvalue
      |-ReturnStmt 0x1211286c8 <line:4:5, col:12>
      | `-IntegerLiteral 0x1211286a8 <col:12> 'int' 0
      `-ReturnStmt 0x121141b38 <line:6:5, col:64>
        `-ParenExpr 0x121141b18 <col:12, col:64> 'int' contains-errors
          `-BinaryOperator 0x121141af8 <col:13, col:63> 'int' contains-errors '=='
            |-CallExpr 0x121141940 <col:13, col:45> '<dependent type>' contains-errors
            | |-DeclRefExpr 0x1211287b8 <col:13> 'int ()' Function 0x121128700 'luaO_str2num' 'int ()'
            | |-CallExpr 0x1211418f8 <col:26, col:36> '<dependent type>' contains-errors
            | | |-DeclRefExpr 0x1211418b8 <col:26> 'int ()' Function 0x121141800 'svalue' 'int ()'
            | | `-RecoveryExpr 0x1211418d8 <col:33> '<dependent type>' contains-errors lvalue
            | `-RecoveryExpr 0x121141920 <col:39> '<dependent type>' contains-errors lvalue
            `-BinaryOperator 0x121141ad8 <col:50, col:63> '<dependent type>' contains-errors '+'
              |-CallExpr 0x121141a90 <col:50, col:59> '<dependent type>' contains-errors
              | |-DeclRefExpr 0x121141a50 <col:50> 'int ()' Function 0x121141998 'vslen' 'int ()'
              | `-RecoveryExpr 0x121141a70 <col:56> '<dependent type>' contains-errors lvalue
              `-IntegerLiteral 0x121141ab8 <col:63> 'int' 1
