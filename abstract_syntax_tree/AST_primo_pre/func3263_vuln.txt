`-FunctionDecl 0x1220c7488  line:1:1 invalid transientObjectPutErrorMessage 'int (int *, int)'
  |-ParmVarDecl 0x1220c7328 <col:32, col:41> col:41 referenced invalid runtime 'int *'
  |-ParmVarDecl 0x1220c73a8 <col:50, <invalid sloc>> col:56 invalid 'int'
  `-CompoundStmt 0x1220e1750 <col:78, line:36:2>
    `-IfStmt 0x1220e14f0 <line:11:3, line:27:3> has_else
      |-RecoveryExpr 0x1220c7850 <line:11:7, col:22> '_Bool' contains-errors
      |-CompoundStmt 0x1220e11e0 <col:25, line:21:3>
      | |-DeclStmt 0x1220e1020 <line:13:5, col:80>
      | | `-VarDecl 0x1220c7888 <col:5, col:10> col:10 used str 'int' auto
      | `-IfStmt 0x1220e11b0 <line:14:5, line:20:5> has_else
      |   |-RecoveryExpr 0x1220e1058 <line:14:9, col:33> '_Bool' contains-errors
      |   |-CompoundStmt 0x1220e10d8 <col:44, line:16:5>
      |   `-CompoundStmt 0x1220e1198 <col:12, line:20:5>
      |     `-CallExpr 0x1220e1178 <line:17:7, col:33> '<dependent type>' contains-errors
      |       `-CXXDependentScopeMemberExpr 0x1220e1130 <col:7, col:16> '<dependent type>' contains-errors lvalue ->clearThrownValue
      |         `-RecoveryExpr 0x1220e1108 <col:7> '<dependent type>' contains-errors lvalue
      |           `-DeclRefExpr 0x1220e10e8 <col:7> 'int *' lvalue ParmVar 0x1220c7328 'runtime' 'int *'
      `-CompoundStmt 0x1220e14d8 <line:21:10, line:27:3>
        `-DeclStmt 0x1220e13a0 <line:22:5, col:43>
          `-VarDecl 0x1220e1218 <col:5, col:10> col:10 used str 'int' auto
