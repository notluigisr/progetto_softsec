`-FunctionDecl 0x1578082d8  line:1:5 invalid tcp_read_sock 'int (struct sock *, int *, int)'
  |-ParmVarDecl 0x156030e48 <col:19, col:32> col:32 used sk 'struct sock *'
  |-ParmVarDecl 0x156030f18 <col:36, col:55> col:55 invalid desc 'int *'
  |-ParmVarDecl 0x156030f98 <line:2:5, col:21> col:21 invalid recv_actor 'int'
  `-CompoundStmt 0x15780b590 <line:3:1, line:58:1>
    |-DeclStmt 0x157808588 <line:4:2, col:21>
    | |-RecordDecl 0x157808398 <col:2, col:9> col:9 struct sk_buff
    | `-VarDecl 0x157808508 <col:2, col:18> col:18 used skb 'struct sk_buff *'
    |-DeclStmt 0x1578089c8 <line:5:2, col:34>
    | |-RecordDecl 0x1578085a0 <col:2, col:9> col:9 struct tcp_sock
    | `-VarDecl 0x157808708 <col:2, col:33> col:19 used tp 'struct tcp_sock *' cinit
    |   `-ImplicitCastExpr 0x157808998 <col:24, col:33> 'struct tcp_sock *' <IntegralToPointer>
    |     `-CallExpr 0x157808958 <col:24, col:33> 'int'
    |       |-ImplicitCastExpr 0x157808940 <col:24> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x1578088d0 <col:24> 'int ()' Function 0x157808818 'tcp_sk' 'int ()'
    |       `-ImplicitCastExpr 0x157808980 <col:31> 'struct sock *' <LValueToRValue>
    |         `-DeclRefExpr 0x1578088f0 <col:31> 'struct sock *' lvalue ParmVar 0x156030e48 'sk' 'struct sock *'
    |-DeclStmt 0x157808a80 <line:8:2, col:16>
    | `-VarDecl 0x1578089f8 <col:2, col:15> col:6 used copied 'int' cinit
    |   `-IntegerLiteral 0x157808a60 <col:15> 'int' 0
    |-IfStmt 0x157808c18 <line:10:2, line:11:11>
    | |-BinaryOperator 0x157808b50 <line:10:6, col:22> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x157808ad0 <col:6, col:10> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x157808a98 <col:6> 'struct sock *' lvalue ParmVar 0x156030e48 'sk' 'struct sock *'
    | | `-RecoveryExpr 0x157808b30 <col:22> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x157808c08 <line:11:3, col:11>
    |   `-UnaryOperator 0x157808bf0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x157808bd8 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x157808bb8 <col:11> '<dependent type>' contains-errors lvalue
    |-WhileStmt 0x15780b100 <line:12:2, line:49:2>
    | |-RecoveryExpr 0x157808e30 <line:12:9, col:51> '_Bool' contains-errors
    | `-CompoundStmt 0x15780b0d0 <col:57, line:49:2>
    |   |-IfStmt 0x15780ab28 <line:13:3, line:40:3>
    |   | |-BinaryOperator 0x157808f08 <line:13:7, col:21> 'int' contains-errors '<'
    |   | | |-RecoveryExpr 0x157808ee8 <col:7> '<dependent type>' contains-errors lvalue
    |   | | `-RecoveryExpr 0x157808ea0 <col:16, col:21> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x157808e68 <col:16> 'struct sk_buff *' lvalue Var 0x157808508 'skb' 'struct sk_buff *'
    |   | `-CompoundStmt 0x15780aaf0 <col:26, line:40:3>
    |   |   |-DeclStmt 0x157808fa8 <line:14:4, col:12>
    |   |   | `-VarDecl 0x157808f40 <col:4, col:8> col:8 used used 'int'
    |   |   |-UnaryExprOrTypeTraitExpr 0x157809018 <line:15:4, col:11> 'unsigned long' contains-errors sizeof
    |   |   | `-RecoveryExpr 0x157808ff8 <col:11> '<dependent type>' contains-errors lvalue
    |   |   |-IfStmt 0x1578091b0 <line:19:4, line:25:4>
    |   |   | |-RecoveryExpr 0x157809108 <line:19:8, col:12> '<dependent type>' contains-errors lvalue
    |   |   | | `-DeclRefExpr 0x1578090d0 <col:8> 'struct tcp_sock *' lvalue Var 0x157808708 'tp' 'struct tcp_sock *'
    |   |   | `-CompoundStmt 0x157809198 <col:22, line:25:4>
    |   |   |   `-IfStmt 0x157809178 <line:23:5, line:24:6>
    |   |   |     |-RecoveryExpr 0x157809150 <line:23:9, col:10> '_Bool' contains-errors
    |   |   |     `-BreakStmt 0x157809170 <line:24:6>
    |   |   |-IfStmt 0x15780a928 <line:27:4, line:35:4> has_else
    |   |   | |-BinaryOperator 0x15780a6b8 <line:27:8, col:15> 'int' '<'
    |   |   | | |-ImplicitCastExpr 0x15780a6a0 <col:8> 'int' <LValueToRValue>
    |   |   | | | `-DeclRefExpr 0x15780a660 <col:8> 'int' lvalue Var 0x157808f40 'used' 'int'
    |   |   | | `-IntegerLiteral 0x15780a680 <col:15> 'int' 0
    |   |   | |-CompoundStmt 0x15780a7c8 <col:18, line:31:4>
    |   |   | | |-IfStmt 0x15780a7a0 <line:28:5, line:29:15>
    |   |   | | | |-UnaryOperator 0x15780a710 <line:28:9, col:10> 'int' prefix '!' cannot overflow
    |   |   | | | | `-ImplicitCastExpr 0x15780a6f8 <col:10> 'int' <LValueToRValue>
    |   |   | | | |   `-DeclRefExpr 0x15780a6d8 <col:10> 'int' lvalue Var 0x1578089f8 'copied' 'int'
    |   |   | | | `-BinaryOperator 0x15780a780 <line:29:6, col:15> 'int' '='
    |   |   | | |   |-DeclRefExpr 0x15780a728 <col:6> 'int' lvalue Var 0x1578089f8 'copied' 'int'
    |   |   | | |   `-ImplicitCastExpr 0x15780a768 <col:15> 'int' <LValueToRValue>
    |   |   | | |     `-DeclRefExpr 0x15780a748 <col:15> 'int' lvalue Var 0x157808f40 'used' 'int'
    |   |   | | `-BreakStmt 0x15780a7c0 <line:30:5>
    |   |   | `-IfStmt 0x15780a908 <line:31:11, line:35:4>
    |   |   |   |-RecoveryExpr 0x15780a808 <line:31:15, col:23> '_Bool' contains-errors
    |   |   |   `-CompoundStmt 0x15780a8f0 <col:28, line:35:4>
    |   |   |     `-CompoundAssignOperator 0x15780a8a0 <line:33:5, col:15> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |   |   |       |-DeclRefExpr 0x15780a848 <col:5> 'int' lvalue Var 0x1578089f8 'copied' 'int'
    |   |   |       `-ImplicitCastExpr 0x15780a888 <col:15> 'int' <LValueToRValue>
    |   |   |         `-DeclRefExpr 0x15780a868 <col:15> 'int' lvalue Var 0x157808f40 'used' 'int'
    |   |   `-IfStmt 0x15780aad0 <line:38:4, line:39:5>
    |   |     |-RecoveryExpr 0x15780aaa8 <line:38:8, col:37> '_Bool' contains-errors
    |   |     `-BreakStmt 0x15780aac8 <line:39:5>
    |   |-IfStmt 0x15780aef0 <line:41:3, line:45:3>
    |   | |-RecoveryExpr 0x15780acc0 <line:41:7, col:21> '<dependent type>' contains-errors lvalue
    |   | | `-CallExpr 0x15780ac80 <col:7, col:18> 'int'
    |   | |   |-ImplicitCastExpr 0x15780ac68 <col:7> 'int (*)()' <FunctionToPointerDecay>
    |   | |   | `-DeclRefExpr 0x15780ac28 <col:7> 'int ()' Function 0x15780ab70 'tcp_hdr' 'int ()'
    |   | |   `-ImplicitCastExpr 0x15780aca8 <col:15> 'struct sk_buff *' <LValueToRValue>
    |   | |     `-DeclRefExpr 0x15780ac48 <col:15> 'struct sk_buff *' lvalue Var 0x157808508 'skb' 'struct sk_buff *'
    |   | `-CompoundStmt 0x15780aed0 <col:26, line:45:3>
    |   |   |-CallExpr 0x15780ae60 <line:42:4, col:25> 'int'
    |   |   | |-ImplicitCastExpr 0x15780ae48 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |   |   | | `-DeclRefExpr 0x15780adc8 <col:4> 'int ()' Function 0x15780ad10 'sk_eat_skb' 'int ()'
    |   |   | |-ImplicitCastExpr 0x15780ae98 <col:15> 'struct sock *' <LValueToRValue>
    |   |   | | `-DeclRefExpr 0x15780ade8 <col:15> 'struct sock *' lvalue ParmVar 0x156030e48 'sk' 'struct sock *'
    |   |   | |-ImplicitCastExpr 0x15780aeb0 <col:19> 'struct sk_buff *' <LValueToRValue>
    |   |   | | `-DeclRefExpr 0x15780ae08 <col:19> 'struct sk_buff *' lvalue Var 0x157808508 'skb' 'struct sk_buff *'
    |   |   | `-IntegerLiteral 0x15780ae28 <col:24> 'int' 0
    |   |   `-BreakStmt 0x15780aec8 <line:44:4>
    |   |-CallExpr 0x15780afa8 <line:46:3, col:24> 'int'
    |   | |-ImplicitCastExpr 0x15780af90 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x15780af10 <col:3> 'int ()' Function 0x15780ad10 'sk_eat_skb' 'int ()'
    |   | |-ImplicitCastExpr 0x15780afe0 <col:14> 'struct sock *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x15780af30 <col:14> 'struct sock *' lvalue ParmVar 0x156030e48 'sk' 'struct sock *'
    |   | |-ImplicitCastExpr 0x15780aff8 <col:18> 'struct sk_buff *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x15780af50 <col:18> 'struct sk_buff *' lvalue Var 0x157808508 'skb' 'struct sk_buff *'
    |   | `-IntegerLiteral 0x15780af70 <col:23> 'int' 0
    |   `-IfStmt 0x15780b0b0 <line:47:3, line:48:4>
    |     |-UnaryOperator 0x15780b090 <line:47:7, col:14> '<dependent type>' contains-errors prefix '!' cannot overflow
    |     | `-ImplicitCastExpr 0x15780b078 <col:8, col:14> '<dependent type>' contains-errors <LValueToRValue>
    |     |   `-CXXDependentScopeMemberExpr 0x15780b030 <col:8, col:14> '<dependent type>' contains-errors lvalue ->count
    |     |     `-RecoveryExpr 0x15780b010 <col:8> '<dependent type>' contains-errors lvalue
    |     `-BreakStmt 0x15780b0a8 <line:48:4>
    |-CallExpr 0x15780b2b8 <line:52:2, col:25> 'int'
    | |-ImplicitCastExpr 0x15780b2a0 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x15780b260 <col:2> 'int ()' Function 0x15780b1a8 'tcp_rcv_space_adjust' 'int ()'
    | `-ImplicitCastExpr 0x15780b2e0 <col:23> 'struct sock *' <LValueToRValue>
    |   `-DeclRefExpr 0x15780b280 <col:23> 'struct sock *' lvalue ParmVar 0x156030e48 'sk' 'struct sock *'
    |-IfStmt 0x15780b528 <line:55:2, line:56:30>
    | |-BinaryOperator 0x15780b350 <line:55:6, col:15> 'int' '>'
    | | |-ImplicitCastExpr 0x15780b338 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x15780b2f8 <col:6> 'int' lvalue Var 0x1578089f8 'copied' 'int'
    | | `-IntegerLiteral 0x15780b318 <col:15> 'int' 0
    | `-CallExpr 0x15780b4c8 <line:56:3, col:30> 'int'
    |   |-ImplicitCastExpr 0x15780b4b0 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x15780b450 <col:3> 'int ()' Function 0x15780b398 'tcp_cleanup_rbuf' 'int ()'
    |   |-ImplicitCastExpr 0x15780b4f8 <col:20> 'struct sock *' <LValueToRValue>
    |   | `-DeclRefExpr 0x15780b470 <col:20> 'struct sock *' lvalue ParmVar 0x156030e48 'sk' 'struct sock *'
    |   `-ImplicitCastExpr 0x15780b510 <col:24> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x15780b490 <col:24> 'int' lvalue Var 0x1578089f8 'copied' 'int'
    `-ReturnStmt 0x15780b580 <line:57:2, col:9>
      `-ImplicitCastExpr 0x15780b568 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x15780b548 <col:9> 'int' lvalue Var 0x1578089f8 'copied' 'int'
