`-FunctionDecl 0x13e923448  line:1:1 invalid next_state_val 'int (int *, int *, int, int *, int, enum CCVALTYPE, enum CCVALTYPE *, enum CCSTATE *, int *)'
  |-ParmVarDecl 0x13f00dd28 <col:16, col:28> col:28 invalid cc 'int *'
  |-ParmVarDecl 0x13f00dda8 <col:32, col:47> col:47 invalid vs 'int *'
  |-ParmVarDecl 0x13f00de28 <col:51, col:65> col:65 invalid v 'int'
  |-ParmVarDecl 0x13f00dea8 <line:2:9, col:14> col:14 used vs_israw 'int *'
  |-ParmVarDecl 0x13f00df28 <col:24, col:28> col:28 used v_israw 'int'
  |-ParmVarDecl 0x13e922ee8 <line:3:9, col:24> col:24 invalid intype 'enum CCVALTYPE'
  |-ParmVarDecl 0x13e923008 <col:32, col:48> col:48 used type 'enum CCVALTYPE *'
  |-ParmVarDecl 0x13e9231f8 <line:4:9, col:23> col:23 used state 'enum CCSTATE *'
  |-ParmVarDecl 0x13e923278 <col:30, col:39> col:39 invalid env 'int *'
  `-CompoundStmt 0x13f027c78 <line:5:1, line:74:1>
    |-DeclStmt 0x13e9235b8 <line:6:3, col:8>
    | `-VarDecl 0x13e923550 <col:3, col:7> col:7 used r 'int'
    |-SwitchStmt 0x13e923660 <line:8:3, line:68:3>
    | |-RecoveryExpr 0x13e923638 <line:8:11, col:12> 'int' contains-errors
    | | `-UnaryOperator 0x13e923608 <col:11, col:12> 'enum CCSTATE' lvalue prefix '*' cannot overflow
    | |   `-ImplicitCastExpr 0x13e9235f0 <col:12> 'enum CCSTATE *' <LValueToRValue>
    | |     `-DeclRefExpr 0x13e9235d0 <col:12> 'enum CCSTATE *' lvalue ParmVar 0x13e9231f8 'state' 'enum CCSTATE *'
    | `-CompoundStmt 0x13f027a38 <col:19, line:68:3>
    |   |-IfStmt 0x13e925de8 <line:10:5, line:16:5> has_else
    |   | |-BinaryOperator 0x13e9237a8 <line:10:9, col:18> 'int' contains-errors '=='
    |   | | |-UnaryOperator 0x13e923770 <col:9, col:10> 'enum CCVALTYPE' lvalue prefix '*' cannot overflow
    |   | | | `-ImplicitCastExpr 0x13e923758 <col:10> 'enum CCVALTYPE *' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x13e9236a0 <col:10> 'enum CCVALTYPE *' lvalue ParmVar 0x13e923008 'type' 'enum CCVALTYPE *'
    |   | | `-RecoveryExpr 0x13e923788 <col:18> '<dependent type>' contains-errors lvalue
    |   | |-CompoundStmt 0x13e923aa8 <col:26, line:12:5>
    |   | | `-CallExpr 0x13e923a78 <line:11:7, col:41> '<dependent type>' contains-errors
    |   | |   |-DeclRefExpr 0x13e923920 <col:7> 'int ()' Function 0x13e923868 'BITSET_SET_BIT' 'int ()'
    |   | |   |-CXXDependentScopeMemberExpr 0x13e923960 <col:22, col:26> '<dependent type>' contains-errors lvalue ->bs
    |   | |   | `-RecoveryExpr 0x13e923940 <col:22> '<dependent type>' contains-errors lvalue
    |   | |   `-CStyleCastExpr 0x13e923a50 <col:30, col:40> 'int' contains-errors <Dependent>
    |   | |     `-ParenExpr 0x13e923a30 <col:36, col:40> '<dependent type>' contains-errors
    |   | |       `-UnaryOperator 0x13e9239e0 <col:37, col:38> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   | |         `-ImplicitCastExpr 0x13e9239c8 <col:38> '<dependent type>' contains-errors <LValueToRValue>
    |   | |           `-RecoveryExpr 0x13e9239a8 <col:38> '<dependent type>' contains-errors lvalue
    |   | `-IfStmt 0x13e925dc8 <line:13:10, line:16:5>
    |   |   |-BinaryOperator 0x13e923bc8 <line:13:14, col:23> 'int' contains-errors '=='
    |   |   | |-UnaryOperator 0x13e923b90 <col:14, col:15> 'enum CCVALTYPE' lvalue prefix '*' cannot overflow
    |   |   | | `-ImplicitCastExpr 0x13e923b78 <col:15> 'enum CCVALTYPE *' <LValueToRValue>
    |   |   | |   `-DeclRefExpr 0x13e923ac0 <col:15> 'enum CCVALTYPE *' lvalue ParmVar 0x13e923008 'type' 'enum CCVALTYPE *'
    |   |   | `-RecoveryExpr 0x13e923ba8 <col:23> '<dependent type>' contains-errors lvalue
    |   |   `-CompoundStmt 0x13e925da8 <col:39, line:16:5>
    |   |     |-BinaryOperator 0x13e925ca8 <line:14:7, col:52> 'int' contains-errors '='
    |   |     | |-DeclRefExpr 0x13e923be8 <col:7> 'int' lvalue Var 0x13e923550 'r' 'int'
    |   |     | `-CallExpr 0x13e925c68 <col:11, col:52> '<dependent type>' contains-errors
    |   |     |   |-DeclRefExpr 0x13e923ce8 <col:11> 'int ()' Function 0x13e923c30 'add_code_range' 'int ()'
    |   |     |   |-UnaryOperator 0x13e923d90 <col:26, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |     |   | `-ParenExpr 0x13e923d70 <col:27, col:36> '<dependent type>' contains-errors lvalue
    |   |     |   |   `-CXXDependentScopeMemberExpr 0x13e923d28 <col:28, col:32> '<dependent type>' contains-errors lvalue ->mbuf
    |   |     |   |     `-RecoveryExpr 0x13e923d08 <col:28> '<dependent type>' contains-errors lvalue
    |   |     |   |-RecoveryExpr 0x13e923da8 <col:39> '<dependent type>' contains-errors lvalue
    |   |     |   |-UnaryOperator 0x13e925c00 <col:44, col:45> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   |     |   | `-ImplicitCastExpr 0x13e923de8 <col:45> '<dependent type>' contains-errors <LValueToRValue>
    |   |     |   |   `-RecoveryExpr 0x13e923dc8 <col:45> '<dependent type>' contains-errors lvalue
    |   |     |   `-UnaryOperator 0x13e925c50 <col:49, col:50> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   |     |     `-ImplicitCastExpr 0x13e925c38 <col:50> '<dependent type>' contains-errors <LValueToRValue>
    |   |     |       `-RecoveryExpr 0x13e925c18 <col:50> '<dependent type>' contains-errors lvalue
    |   |     `-IfStmt 0x13e925d88 <line:15:7, col:25>
    |   |       |-BinaryOperator 0x13e925d20 <col:11, col:15> 'int' '<'
    |   |       | |-ImplicitCastExpr 0x13e925d08 <col:11> 'int' <LValueToRValue>
    |   |       | | `-DeclRefExpr 0x13e925cc8 <col:11> 'int' lvalue Var 0x13e923550 'r' 'int'
    |   |       | `-IntegerLiteral 0x13e925ce8 <col:15> 'int' 0
    |   |       `-ReturnStmt 0x13e925d78 <col:18, col:25>
    |   |         `-ImplicitCastExpr 0x13e925d60 <col:25> 'int' <LValueToRValue>
    |   |           `-DeclRefExpr 0x13e925d40 <col:25> 'int' lvalue Var 0x13e923550 'r' 'int'
    |   |-BreakStmt 0x13e925e18 <line:17:5>
    |   |-IfStmt 0x13f027908 <line:20:5, line:56:5> has_else
    |   | |-BinaryOperator 0x13e925ea8 <line:20:9, col:20> 'int' contains-errors '=='
    |   | | |-RecoveryExpr 0x13e925e38 <col:9> '<dependent type>' contains-errors lvalue
    |   | | `-UnaryOperator 0x13e925e90 <col:19, col:20> 'enum CCVALTYPE' lvalue prefix '*' cannot overflow
    |   | |   `-ImplicitCastExpr 0x13e925e78 <col:20> 'enum CCVALTYPE *' <LValueToRValue>
    |   | |     `-DeclRefExpr 0x13e925e58 <col:20> 'enum CCVALTYPE *' lvalue ParmVar 0x13e923008 'type' 'enum CCVALTYPE *'
    |   | |-CompoundStmt 0x13e926a38 <col:26, line:37:5>
    |   | | `-IfStmt 0x13e926a08 <line:21:7, line:36:7> has_else
    |   | |   |-BinaryOperator 0x13e925f40 <line:21:11, col:21> 'int' contains-errors '=='
    |   | |   | |-RecoveryExpr 0x13e925ec8 <col:11> '<dependent type>' contains-errors lvalue
    |   | |   | `-RecoveryExpr 0x13e925f20 <col:21> '<dependent type>' contains-errors lvalue
    |   | |   |-CompoundStmt 0x13e926710 <col:29, line:32:7>
    |   | |   | |-IfStmt 0x13e9260b8 <line:22:9, line:23:18>
    |   | |   | | |-BinaryOperator 0x13e926050 <line:22:13, col:31> 'int' contains-errors '||'
    |   | |   | | | |-BinaryOperator 0x13e925fd0 <col:13, col:19> 'int' contains-errors '>'
    |   | |   | | | | |-UnaryOperator 0x13e925f98 <col:13, col:14> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   | |   | | | | | `-ImplicitCastExpr 0x13e925f80 <col:14> '<dependent type>' contains-errors <LValueToRValue>
    |   | |   | | | | |   `-RecoveryExpr 0x13e925f60 <col:14> '<dependent type>' contains-errors lvalue
    |   | |   | | | | `-IntegerLiteral 0x13e925fb0 <col:19> 'int' 255
    |   | |   | | | `-BinaryOperator 0x13e926030 <col:27, col:31> 'int' contains-errors '>'
    |   | |   | | |   |-RecoveryExpr 0x13e925ff0 <col:27> '<dependent type>' contains-errors lvalue
    |   | |   | | |   `-IntegerLiteral 0x13e926010 <col:31> 'int' 255
    |   | |   | | `-ReturnStmt 0x13e9260a8 <line:23:11, col:18>
    |   | |   | |   `-RecoveryExpr 0x13e926088 <col:18> '<dependent type>' contains-errors lvalue
    |   | |   | |-IfStmt 0x13e926460 <line:25:9, line:30:9>
    |   | |   | | |-BinaryOperator 0x13e926148 <line:25:13, col:19> 'int' contains-errors '>'
    |   | |   | | | |-UnaryOperator 0x13e926110 <col:13, col:14> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   | |   | | | | `-ImplicitCastExpr 0x13e9260f8 <col:14> '<dependent type>' contains-errors <LValueToRValue>
    |   | |   | | | |   `-RecoveryExpr 0x13e9260d8 <col:14> '<dependent type>' contains-errors lvalue
    |   | |   | | | `-RecoveryExpr 0x13e926128 <col:19> '<dependent type>' contains-errors lvalue
    |   | |   | | `-CompoundStmt 0x13e926448 <col:22, line:30:9>
    |   | |   | |   `-IfStmt 0x13e926418 <line:26:11, line:29:20> has_else
    |   | |   | |     |-CallExpr 0x13e926338 <line:26:15, col:73> '<dependent type>' contains-errors
    |   | |   | |     | |-DeclRefExpr 0x13e926248 <col:15> 'int ()' Function 0x13e926190 'IS_SYNTAX_BV' 'int ()'
    |   | |   | |     | |-CXXDependentScopeMemberExpr 0x13e926288 <col:28, col:33> '<dependent type>' contains-errors lvalue ->syntax
    |   | |   | |     | | `-RecoveryExpr 0x13e926268 <col:28> '<dependent type>' contains-errors lvalue
    |   | |   | |     | `-RecoveryExpr 0x13e926318 <col:41> '<dependent type>' contains-errors lvalue
    |   | |   | |     |-GotoStmt 0x13e9263b8 <line:27:13, col:18> 'ccs_range_end' 0x13e926368
    |   | |   | |     `-ReturnStmt 0x13e926408 <line:29:13, col:20>
    |   | |   | |       `-RecoveryExpr 0x13e9263e8 <col:20> '<dependent type>' contains-errors lvalue
    |   | |   | `-CallExpr 0x13e9266d8 <line:31:9, col:52> '<dependent type>' contains-errors
    |   | |   |   |-DeclRefExpr 0x13e926560 <col:9> 'int ()' Function 0x13e9264a8 'bitset_set_range' 'int ()'
    |   | |   |   |-CXXDependentScopeMemberExpr 0x13e9265a0 <col:26, col:30> '<dependent type>' contains-errors lvalue ->bs
    |   | |   |   | `-RecoveryExpr 0x13e926580 <col:26> '<dependent type>' contains-errors lvalue
    |   | |   |   |-CStyleCastExpr 0x13e926650 <col:34, col:41> 'int' contains-errors <Dependent>
    |   | |   |   | `-UnaryOperator 0x13e926620 <col:40, col:41> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   | |   |   |   `-ImplicitCastExpr 0x13e926608 <col:41> '<dependent type>' contains-errors <LValueToRValue>
    |   | |   |   |     `-RecoveryExpr 0x13e9265e8 <col:41> '<dependent type>' contains-errors lvalue
    |   | |   |   `-CStyleCastExpr 0x13e9266b0 <col:45, col:51> 'int' contains-errors <Dependent>
    |   | |   |     `-RecoveryExpr 0x13e926678 <col:51> '<dependent type>' contains-errors lvalue
    |   | |   `-CompoundStmt 0x13e9269e8 <line:33:12, line:36:7>
    |   | |     |-BinaryOperator 0x13e9268e8 <line:34:9, col:52> 'int' contains-errors '='
    |   | |     | |-DeclRefExpr 0x13e926738 <col:9> 'int' lvalue Var 0x13e923550 'r' 'int'
    |   | |     | `-CallExpr 0x13e9268a8 <col:13, col:52> '<dependent type>' contains-errors
    |   | |     |   |-DeclRefExpr 0x13e926758 <col:13> 'int ()' Function 0x13e923c30 'add_code_range' 'int ()'
    |   | |     |   |-UnaryOperator 0x13e926800 <col:28, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | |     |   | `-ParenExpr 0x13e9267e0 <col:29, col:38> '<dependent type>' contains-errors lvalue
    |   | |     |   |   `-CXXDependentScopeMemberExpr 0x13e926798 <col:30, col:34> '<dependent type>' contains-errors lvalue ->mbuf
    |   | |     |   |     `-RecoveryExpr 0x13e926778 <col:30> '<dependent type>' contains-errors lvalue
    |   | |     |   |-RecoveryExpr 0x13e926818 <col:41> '<dependent type>' contains-errors lvalue
    |   | |     |   |-UnaryOperator 0x13e926870 <col:46, col:47> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   | |     |   | `-ImplicitCastExpr 0x13e926858 <col:47> '<dependent type>' contains-errors <LValueToRValue>
    |   | |     |   |   `-RecoveryExpr 0x13e926838 <col:47> '<dependent type>' contains-errors lvalue
    |   | |     |   `-RecoveryExpr 0x13e926888 <col:51> '<dependent type>' contains-errors lvalue
    |   | |     `-IfStmt 0x13e9269c8 <line:35:9, col:27>
    |   | |       |-BinaryOperator 0x13e926960 <col:13, col:17> 'int' '<'
    |   | |       | |-ImplicitCastExpr 0x13e926948 <col:13> 'int' <LValueToRValue>
    |   | |       | | `-DeclRefExpr 0x13e926908 <col:13> 'int' lvalue Var 0x13e923550 'r' 'int'
    |   | |       | `-IntegerLiteral 0x13e926928 <col:17> 'int' 0
    |   | |       `-ReturnStmt 0x13e9269b8 <col:20, col:27>
    |   | |         `-ImplicitCastExpr 0x13e9269a0 <col:27> 'int' <LValueToRValue>
    |   | |           `-DeclRefExpr 0x13e926980 <col:27> 'int' lvalue Var 0x13e923550 'r' 'int'
    |   | `-CompoundStmt 0x13f0278e0 <line:38:10, line:56:5>
    |   |   |-IfStmt 0x13f027400 <line:42:9, line:47:9>
    |   |   | |-BinaryOperator 0x13e926ac0 <line:42:13, col:19> 'int' contains-errors '>'
    |   |   | | |-UnaryOperator 0x13e926a88 <col:13, col:14> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   |   | | | `-ImplicitCastExpr 0x13e926a70 <col:14> '<dependent type>' contains-errors <LValueToRValue>
    |   |   | | |   `-RecoveryExpr 0x13e926a50 <col:14> '<dependent type>' contains-errors lvalue
    |   |   | | `-RecoveryExpr 0x13e926aa0 <col:19> '<dependent type>' contains-errors lvalue
    |   |   | `-CompoundStmt 0x13e926bd8 <col:22, line:47:9>
    |   |   |   `-IfStmt 0x13e926ba8 <line:43:11, line:46:13> has_else
    |   |   |     |-RecoveryExpr 0x13e926b68 <line:43:15, col:73> '_Bool' contains-errors
    |   |   |     |-GotoStmt 0x13e926b88 <line:44:13, col:18> 'ccs_range_end' 0x13e926368
    |   |   |     `-NullStmt 0x13e926ba0 <line:46:13>
    |   |   |-CallExpr 0x13f027688 <line:48:9, col:72> '<dependent type>' contains-errors
    |   |   | |-DeclRefExpr 0x13f027420 <col:9> 'int ()' Function 0x13e9264a8 'bitset_set_range' 'int ()'
    |   |   | |-CXXDependentScopeMemberExpr 0x13f027460 <col:26, col:30> '<dependent type>' contains-errors lvalue ->bs
    |   |   | | `-RecoveryExpr 0x13f027440 <col:26> '<dependent type>' contains-errors lvalue
    |   |   | |-CStyleCastExpr 0x13f027510 <col:34, col:41> 'int' contains-errors <Dependent>
    |   |   | | `-UnaryOperator 0x13f0274e0 <col:40, col:41> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   |   | |   `-ImplicitCastExpr 0x13f0274c8 <col:41> '<dependent type>' contains-errors <LValueToRValue>
    |   |   | |     `-RecoveryExpr 0x13f0274a8 <col:41> '<dependent type>' contains-errors lvalue
    |   |   | `-CStyleCastExpr 0x13f027660 <col:45, col:71> 'int' contains-errors <Dependent>
    |   |   |   `-ParenExpr 0x13f027640 <col:51, col:71> '<dependent type>' contains-errors
    |   |   |     `-ConditionalOperator 0x13f0275d8 <col:52, col:67> '<dependent type>' contains-errors
    |   |   |       |-BinaryOperator 0x13f027578 <col:52, col:56> 'int' contains-errors '<'
    |   |   |       | |-RecoveryExpr 0x13f027538 <col:52> '<dependent type>' contains-errors lvalue
    |   |   |       | `-IntegerLiteral 0x13f027558 <col:56> 'int' 255
    |   |   |       |-RecoveryExpr 0x13f027598 <col:63> '<dependent type>' contains-errors lvalue
    |   |   |       `-IntegerLiteral 0x13f0275b8 <col:67> 'int' 255
    |   |   `-IfStmt 0x13f0278c0 <line:50:9, col:27>
    |   |     |-BinaryOperator 0x13f027858 <col:13, col:17> 'int' '<'
    |   |     | |-ImplicitCastExpr 0x13f027840 <col:13> 'int' <LValueToRValue>
    |   |     | | `-DeclRefExpr 0x13f027800 <col:13> 'int' lvalue Var 0x13e923550 'r' 'int'
    |   |     | `-IntegerLiteral 0x13f027820 <col:17> 'int' 0
    |   |     `-ReturnStmt 0x13f0278b0 <col:20, col:27>
    |   |       `-ImplicitCastExpr 0x13f027898 <col:27> 'int' <LValueToRValue>
    |   |         `-DeclRefExpr 0x13f027878 <col:27> 'int' lvalue Var 0x13e923550 'r' 'int'
    |   |-LabelStmt 0x13f027990 <line:57:3, col:16> 'ccs_range_end'
    |   | `-NullStmt 0x13f027988 <col:16>
    |   |-BreakStmt 0x13f0279b0 <line:59:5>
    |   |-BreakStmt 0x13f027a08 <line:64:5>
    |   `-DefaultStmt 0x13f027a18 <line:66:3, line:67:5>
    |     `-BreakStmt 0x13f027a10 <col:5>
    |-BinaryOperator 0x13f027b08 <line:70:3, col:15> 'int' '='
    | |-UnaryOperator 0x13f027ab8 <col:3, col:4> 'int' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x13f027aa0 <col:4> 'int *' <LValueToRValue>
    | |   `-DeclRefExpr 0x13f027a80 <col:4> 'int *' lvalue ParmVar 0x13f00dea8 'vs_israw' 'int *'
    | `-ImplicitCastExpr 0x13f027af0 <col:15> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x13f027ad0 <col:15> 'int' lvalue ParmVar 0x13f00df28 'v_israw' 'int'
    |-BinaryOperator 0x13f027b98 <line:71:3, col:15> '<dependent type>' contains-errors '='
    | |-UnaryOperator 0x13f027b60 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x13f027b48 <col:4> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x13f027b28 <col:4> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x13f027b78 <col:15> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x13f027c28 <line:72:3, col:15> 'enum CCVALTYPE' contains-errors '='
    | |-UnaryOperator 0x13f027bf0 <col:3, col:4> 'enum CCVALTYPE' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x13f027bd8 <col:4> 'enum CCVALTYPE *' <LValueToRValue>
    | |   `-DeclRefExpr 0x13f027bb8 <col:4> 'enum CCVALTYPE *' lvalue ParmVar 0x13e923008 'type' 'enum CCVALTYPE *'
    | `-RecoveryExpr 0x13f027c08 <col:15> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x13f027c68 <line:73:3, col:10>
      `-IntegerLiteral 0x13f027c48 <col:10> 'int' 0
