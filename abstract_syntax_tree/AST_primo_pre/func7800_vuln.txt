`-FunctionDecl 0x143928258  line:1:1 invalid atol8 'int (const char *, int)'
  |-ParmVarDecl 0x1439280d8 <col:7, col:19> col:19 used p 'const char *'
  |-ParmVarDecl 0x143928170 <col:22, col:29> col:29 invalid char_cnt 'int'
  `-CompoundStmt 0x1439287d0 <line:2:1, line:17:1>
    |-DeclStmt 0x143928390 <line:4:2, col:11>
    | `-VarDecl 0x143928328 <col:2, col:6> col:6 used digit 'int'
    `-WhileStmt 0x143928798 <line:7:2, line:15:2>
      |-BinaryOperator 0x143928420 <line:7:9, col:22> 'int' contains-errors '>'
      | |-UnaryOperator 0x1439283e8 <col:9, col:17> '<dependent type>' contains-errors postfix '--' cannot overflow
      | | `-RecoveryExpr 0x1439283c8 <col:9> '<dependent type>' contains-errors lvalue
      | `-IntegerLiteral 0x143928400 <col:22> 'int' 0
      `-CompoundStmt 0x143928778 <col:25, line:15:2>
        |-IfStmt 0x1439286d0 <line:8:3, line:11:4> has_else
        | |-BinaryOperator 0x1439285b0 <line:8:7, col:26> 'int' '&&'
        | | |-BinaryOperator 0x1439284d8 <col:7, col:13> 'int' '>='
        | | | |-ImplicitCastExpr 0x1439284c0 <col:7, col:8> 'int' <IntegralCast>
        | | | | `-ImplicitCastExpr 0x1439284a8 <col:7, col:8> 'char' <LValueToRValue>
        | | | |   `-UnaryOperator 0x143928478 <col:7, col:8> 'const char' lvalue prefix '*' cannot overflow
        | | | |     `-ImplicitCastExpr 0x143928460 <col:8> 'const char *' <LValueToRValue>
        | | | |       `-DeclRefExpr 0x143928440 <col:8> 'const char *' lvalue ParmVar 0x1439280d8 'p' 'const char *'
        | | | `-CharacterLiteral 0x143928490 <col:13> 'int' 48
        | | `-BinaryOperator 0x143928590 <col:20, col:26> 'int' '<='
        | |   |-ImplicitCastExpr 0x143928578 <col:20, col:21> 'int' <IntegralCast>
        | |   | `-ImplicitCastExpr 0x143928560 <col:20, col:21> 'char' <LValueToRValue>
        | |   |   `-UnaryOperator 0x143928530 <col:20, col:21> 'const char' lvalue prefix '*' cannot overflow
        | |   |     `-ImplicitCastExpr 0x143928518 <col:21> 'const char *' <LValueToRValue>
        | |   |       `-DeclRefExpr 0x1439284f8 <col:21> 'const char *' lvalue ParmVar 0x1439280d8 'p' 'const char *'
        | |   `-CharacterLiteral 0x143928548 <col:26> 'int' 55
        | |-BinaryOperator 0x1439286a8 <line:9:4, col:17> 'int' '='
        | | |-DeclRefExpr 0x1439285d0 <col:4> 'int' lvalue Var 0x143928328 'digit' 'int'
        | | `-BinaryOperator 0x143928688 <col:12, col:17> 'int' '-'
        | |   |-ImplicitCastExpr 0x143928670 <col:12, col:13> 'int' <IntegralCast>
        | |   | `-ImplicitCastExpr 0x143928658 <col:12, col:13> 'char' <LValueToRValue>
        | |   |   `-UnaryOperator 0x143928628 <col:12, col:13> 'const char' lvalue prefix '*' cannot overflow
        | |   |     `-ImplicitCastExpr 0x143928610 <col:13> 'const char *' <LValueToRValue>
        | |   |       `-DeclRefExpr 0x1439285f0 <col:13> 'const char *' lvalue ParmVar 0x1439280d8 'p' 'const char *'
        | |   `-CharacterLiteral 0x143928640 <col:17> 'int' 48
        | `-BreakStmt 0x1439286c8 <line:11:4>
        `-UnaryOperator 0x143928720 <line:12:3, col:4> 'const char *' postfix '++'
          `-DeclRefExpr 0x143928700 <col:3> 'const char *' lvalue ParmVar 0x1439280d8 'p' 'const char *'
