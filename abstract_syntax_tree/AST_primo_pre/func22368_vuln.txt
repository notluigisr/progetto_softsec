`-FunctionDecl 0x137128408  line:1:12 invalid expandRegular 'int (int, const char *, int, int, int)' static
  |-ParmVarDecl 0x1371280f0 <col:26, col:32> col:32 invalid fi 'int'
  |-ParmVarDecl 0x137128170 <col:36, col:48> col:48 used dest 'const char *'
  |-ParmVarDecl 0x1371281f0 <col:54, col:61> col:61 invalid psm 'int'
  |-ParmVarDecl 0x137128270 <col:66, col:70> col:70 used nodigest 'int'
  |-ParmVarDecl 0x1371282f0 <col:80, col:84> col:84 used nocontent 'int'
  `-CompoundStmt 0x137142308 <line:2:1, line:26:1>
    |-DeclStmt 0x137128578 <line:4:5, col:15>
    | `-VarDecl 0x1371284f0 <col:5, col:14> col:9 used rc 'int' cinit
    |   `-IntegerLiteral 0x137128558 <col:14> 'int' 0
    |-CompoundStmt 0x1371419e8 <line:7:5, line:11:5>
    | `-CallExpr 0x1371419c0 <line:10:2, col:17> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x137141940 <col:2> 'int ()' Function 0x137141888 'umask' 'int ()'
    |   `-RecoveryExpr 0x1371419a0 <col:8> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x137141ca8 <line:12:5, line:15:5>
    | |-CallExpr 0x137141b60 <line:12:9, col:19> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x137141ae0 <col:9> 'int ()' Function 0x137141a28 'Ferror' 'int ()'
    | | `-RecoveryExpr 0x137141b40 <col:16> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x137141c88 <col:22, line:15:5>
    |   |-BinaryOperator 0x137141c00 <line:13:2, col:7> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x137141b88 <col:2> 'int' lvalue Var 0x1371284f0 'rc' 'int'
    |   | `-RecoveryExpr 0x137141be0 <col:7> '<dependent type>' contains-errors lvalue
    |   `-GotoStmt 0x137141c70 <line:14:2, col:7> 'exit' 0x137141c20
    |-IfStmt 0x137141f90 <line:17:5, line:18:55>
    | |-UnaryOperator 0x137141d00 <line:17:9, col:10> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x137141ce8 <col:10> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x137141cc8 <col:10> 'int' lvalue ParmVar 0x1371282f0 'nocontent' 'int'
    | `-BinaryOperator 0x137141f70 <line:18:2, col:55> 'int' contains-errors '='
    |   |-DeclRefExpr 0x137141d18 <col:2> 'int' lvalue Var 0x1371284f0 'rc' 'int'
    |   `-CallExpr 0x137141f30 <col:7, col:55> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x137141e18 <col:7> 'int ()' Function 0x137141d60 'rpmfiArchiveReadToFilePsm' 'int ()'
    |     |-RecoveryExpr 0x137141e38 <col:33> '<dependent type>' contains-errors lvalue
    |     |-RecoveryExpr 0x137141f10 <col:37> '<dependent type>' contains-errors lvalue
    |     |-DeclRefExpr 0x137141e70 <col:42> 'int' lvalue ParmVar 0x137128270 'nodigest' 'int'
    |     `-RecoveryExpr 0x137141e90 <col:52> '<dependent type>' contains-errors lvalue
    |-LabelStmt 0x1371422a0 <line:19:1, line:24:5> 'exit'
    | `-IfStmt 0x137142280 <line:20:5, line:24:5>
    |   |-RecoveryExpr 0x137141fc8 <line:20:9> '<dependent type>' contains-errors lvalue
    |   `-CompoundStmt 0x137142260 <col:14, line:24:5>
    |     |-DeclStmt 0x1371420a0 <line:21:2, col:21>
    |     | `-VarDecl 0x137142000 <col:2, col:16> col:6 used myerrno 'int' cinit
    |     |   `-RecoveryExpr 0x137142080 <col:16> '<dependent type>' contains-errors lvalue
    |     `-CallExpr 0x137142218 <line:22:2, col:12> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x137142198 <col:2> 'int ()' Function 0x1371420e0 'Fclose' 'int ()'
    |       `-RecoveryExpr 0x1371421f8 <col:9> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x1371422f8 <line:25:5, col:12>
      `-ImplicitCastExpr 0x1371422e0 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x1371422c0 <col:12> 'int' lvalue Var 0x1371284f0 'rc' 'int'
