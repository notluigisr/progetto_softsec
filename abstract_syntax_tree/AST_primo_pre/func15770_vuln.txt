`-FunctionDecl 0x128906118  line:1:12 invalid has_usable_cert 'int (int *, const int *, int)' static
  |-ParmVarDecl 0x128905f28 <col:28, col:33> col:33 invalid s 'int *'
  |-ParmVarDecl 0x128905fa8 <col:36, col:57> col:57 invalid sig 'const int *'
  |-ParmVarDecl 0x128906028 <col:62, col:66> col:66 used idx 'int'
  `-CompoundStmt 0x11f81e720 <line:2:1, line:45:1>
    |-DeclStmt 0x128906258 <line:3:5, col:28>
    | `-VarDecl 0x1289061f0 <col:5, col:26> col:26 referenced invalid lu 'const int *'
    |-DeclStmt 0x128906410 <line:4:5, col:32>
    | |-VarDecl 0x128906288 <col:5, col:9> col:9 used mdnid 'int'
    | |-VarDecl 0x128906308 <col:5, col:16> col:16 used pknid 'int'
    | `-VarDecl 0x128906388 <col:5, col:23> col:23 used supported 'int'
    |-UnaryExprOrTypeTraitExpr 0x128906480 <line:5:5, col:12> 'unsigned long' contains-errors sizeof
    | `-RecoveryExpr 0x128906460 <col:12> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x1289065d8 <line:8:5, line:9:20>
    | |-BinaryOperator 0x128906510 <line:8:9, col:17> 'int' '=='
    | | |-ImplicitCastExpr 0x1289064f8 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1289064a0 <col:9> 'int' lvalue ParmVar 0x128906028 'idx' 'int'
    | | `-UnaryOperator 0x1289064e0 <col:16, col:17> 'int' prefix '-'
    | |   `-IntegerLiteral 0x1289064c0 <col:17> 'int' 1
    | `-BinaryOperator 0x1289065b8 <line:9:9, col:20> 'int' contains-errors '='
    |   |-DeclRefExpr 0x128906530 <col:9> 'int' lvalue ParmVar 0x128906028 'idx' 'int'
    |   `-CXXDependentScopeMemberExpr 0x128906570 <col:15, col:20> '<dependent type>' contains-errors lvalue ->sig_idx
    |     `-RecoveryExpr 0x128906550 <col:15> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x11f81b638 <line:10:5, line:11:16>
    | |-UnaryOperator 0x11f81b5f0 <line:10:9, col:29> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-CallExpr 0x11f81b5c0 <col:10, col:29> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x11f81b560 <col:10> 'int ()' Function 0x11f81b4a8 'ssl_has_cert' 'int ()'
    | |   |-RecoveryExpr 0x11f81b580 <col:23> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x11f81b5a0 <col:26> 'int' lvalue ParmVar 0x128906028 'idx' 'int'
    | `-ReturnStmt 0x11f81b628 <line:11:9, col:16>
    |   `-IntegerLiteral 0x11f81b608 <col:16> 'int' 0
    |-IfStmt 0x11f81e1c8 <line:12:5, line:36:5>
    | |-BinaryOperator 0x11f81b7a8 <line:12:9, col:40> 'int' contains-errors '!='
    | | |-CXXDependentScopeMemberExpr 0x11f81b708 <col:9, col:19> '<dependent type>' contains-errors lvalue .peer_cert_sigalgs
    | | | `-CXXDependentScopeMemberExpr 0x11f81b6c0 <col:9, col:15> '<dependent type>' contains-errors lvalue .tmp
    | | |   `-CXXDependentScopeMemberExpr 0x11f81b678 <col:9, col:12> '<dependent type>' contains-errors lvalue ->s3
    | | |     `-RecoveryExpr 0x11f81b658 <col:9> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x11f81b788 <col:40> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x11f81e1a8 <col:46, line:36:5>
    |   |-ForStmt 0x11f81e140 <line:13:9, line:34:9>
    |   | |-<<<NULL>>>
    |   | |-<<<NULL>>>
    |   | |-BinaryOperator 0x11f81b970 <line:13:21, col:35> 'int' contains-errors '<'
    |   | | |-RecoveryExpr 0x11f81b950 <col:21> '<dependent type>' contains-errors lvalue
    |   | | `-CXXDependentScopeMemberExpr 0x11f81b8e8 <col:25, col:35> '<dependent type>' contains-errors lvalue .peer_cert_sigalgslen
    |   | |   `-CXXDependentScopeMemberExpr 0x11f81b8a0 <col:25, col:31> '<dependent type>' contains-errors lvalue .tmp
    |   | |     `-CXXDependentScopeMemberExpr 0x11f81b858 <col:25, col:28> '<dependent type>' contains-errors lvalue ->s3
    |   | |       `-RecoveryExpr 0x11f81b838 <col:25> '<dependent type>' contains-errors lvalue
    |   | |-UnaryOperator 0x11f81b9e0 <col:57, col:58> '<dependent type>' contains-errors postfix '++' cannot overflow
    |   | | `-RecoveryExpr 0x11f81b9c0 <col:57> '<dependent type>' contains-errors lvalue
    |   | `-CompoundStmt 0x11f81e108 <col:62, line:34:9>
    |   |   |-IfStmt 0x11f81c3a0 <line:15:13, line:21:17>
    |   |   | |-BinaryOperator 0x11f81c378 <line:15:17, line:20:33> 'int' contains-errors '||'
    |   |   | | |-BinaryOperator 0x11f81c358 <line:15:17, line:19:33> 'int' contains-errors '||'
    |   |   | | | |-BinaryOperator 0x11f81c338 <line:15:17, line:17:63> 'int' contains-errors '||'
    |   |   | | | | |-BinaryOperator 0x11f81c1e0 <line:15:17, col:23> 'int' contains-errors '=='
    |   |   | | | | | |-RecoveryExpr 0x11f81bc50 <col:17> '<dependent type>' contains-errors lvalue
    |   |   | | | | | `-RecoveryExpr 0x11f81c1c0 <col:23> '<dependent type>' contains-errors lvalue
    |   |   | | | | `-UnaryOperator 0x11f81c320 <line:16:20, line:17:63> '<dependent type>' contains-errors prefix '!' cannot overflow
    |   |   | | | |   `-CallExpr 0x11f81c2d8 <line:16:21, line:17:63> '<dependent type>' contains-errors
    |   |   | | | |     |-DeclRefExpr 0x11f81bd88 <line:16:21> 'int ()' Function 0x11f81bcd0 'X509_get_signature_info' 'int ()'
    |   |   | | | |     |-CXXDependentScopeMemberExpr 0x11f81c250 <col:45, col:65> '<dependent type>' contains-errors lvalue .x509
    |   |   | | | |     | `-ArraySubscriptExpr 0x11f81c230 <col:45, col:63> '<dependent type>' contains-errors lvalue
    |   |   | | | |     |   |-ImplicitCastExpr 0x11f81c200 <col:45, col:54> '<dependent type>' contains-errors <LValueToRValue>
    |   |   | | | |     |   | `-CXXDependentScopeMemberExpr 0x11f81be10 <col:45, col:54> '<dependent type>' contains-errors lvalue ->pkeys
    |   |   | | | |     |   |   `-CXXDependentScopeMemberExpr 0x11f81bdc8 <col:45, col:48> '<dependent type>' contains-errors lvalue ->cert
    |   |   | | | |     |   |     `-RecoveryExpr 0x11f81bda8 <col:45> '<dependent type>' contains-errors lvalue
    |   |   | | | |     |   `-ImplicitCastExpr 0x11f81c218 <col:60> 'int' <LValueToRValue>
    |   |   | | | |     |     `-DeclRefExpr 0x11f81be58 <col:60> 'int' lvalue ParmVar 0x128906028 'idx' 'int'
    |   |   | | | |     |-UnaryOperator 0x11f81bf30 <col:71, col:72> 'int *' prefix '&' cannot overflow
    |   |   | | | |     | `-DeclRefExpr 0x11f81bf10 <col:72> 'int' lvalue Var 0x128906288 'mdnid' 'int'
    |   |   | | | |     |-UnaryOperator 0x11f81bf68 <line:17:45, col:46> 'int *' prefix '&' cannot overflow
    |   |   | | | |     | `-DeclRefExpr 0x11f81bf48 <col:46> 'int' lvalue Var 0x128906308 'pknid' 'int'
    |   |   | | | |     |-RecoveryExpr 0x11f81c298 <col:53> '<dependent type>' contains-errors lvalue
    |   |   | | | |     `-RecoveryExpr 0x11f81c2b8 <col:59> '<dependent type>' contains-errors lvalue
    |   |   | | | `-BinaryOperator 0x11f81c0b8 <line:19:20, col:33> 'int' contains-errors '!='
    |   |   | | |   |-DeclRefExpr 0x11f81c030 <col:20> 'int' lvalue Var 0x128906288 'mdnid' 'int'
    |   |   | | |   `-CXXDependentScopeMemberExpr 0x11f81c070 <col:29, col:33> '<dependent type>' contains-errors lvalue ->hash
    |   |   | | |     `-RecoveryExpr 0x11f81c050 <col:29> '<dependent type>' contains-errors lvalue
    |   |   | | `-BinaryOperator 0x11f81c180 <line:20:20, col:33> 'int' contains-errors '!='
    |   |   | |   |-DeclRefExpr 0x11f81c0f8 <col:20> 'int' lvalue Var 0x128906308 'pknid' 'int'
    |   |   | |   `-CXXDependentScopeMemberExpr 0x11f81c138 <col:29, col:33> '<dependent type>' contains-errors lvalue ->sig
    |   |   | |     `-RecoveryExpr 0x11f81c118 <col:29> '<dependent type>' contains-errors lvalue
    |   |   | `-ContinueStmt 0x11f81c398 <line:21:17>
    |   |   |-CallExpr 0x11f81db28 <line:23:13, col:26> 'int'
    |   |   | `-ImplicitCastExpr 0x11f81db10 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |   |   |   `-DeclRefExpr 0x11f81dab8 <col:13> 'int ()' Function 0x11f81da00 'ERR_set_mark' 'int ()'
    |   |   |-BinaryOperator 0x11f81de20 <line:24:13, line:25:59> 'int' contains-errors '='
    |   |   | |-DeclRefExpr 0x11f81db48 <line:24:13> 'int' lvalue Var 0x128906388 'supported' 'int'
    |   |   | `-CallExpr 0x11f81ddf0 <col:25, line:25:59> '<dependent type>' contains-errors
    |   |   |   |-DeclRefExpr 0x11f81dc48 <line:24:25> 'int ()' Function 0x11f81db90 'EVP_PKEY_supports_digest_nid' 'int ()'
    |   |   |   |-CXXDependentScopeMemberExpr 0x11f81dd88 <col:54, col:74> '<dependent type>' contains-errors lvalue .privatekey
    |   |   |   | `-ArraySubscriptExpr 0x11f81dd68 <col:54, col:72> '<dependent type>' contains-errors lvalue
    |   |   |   |   |-ImplicitCastExpr 0x11f81dd38 <col:54, col:63> '<dependent type>' contains-errors <LValueToRValue>
    |   |   |   |   | `-CXXDependentScopeMemberExpr 0x11f81dcd0 <col:54, col:63> '<dependent type>' contains-errors lvalue ->pkeys
    |   |   |   |   |   `-CXXDependentScopeMemberExpr 0x11f81dc88 <col:54, col:57> '<dependent type>' contains-errors lvalue ->cert
    |   |   |   |   |     `-RecoveryExpr 0x11f81dc68 <col:54> '<dependent type>' contains-errors lvalue
    |   |   |   |   `-ImplicitCastExpr 0x11f81dd50 <col:69> 'int' <LValueToRValue>
    |   |   |   |     `-DeclRefExpr 0x11f81dd18 <col:69> 'int' lvalue ParmVar 0x128906028 'idx' 'int'
    |   |   |   `-DeclRefExpr 0x11f81ddd0 <line:25:54> 'int' lvalue Var 0x128906288 'mdnid' 'int'
    |   |   |-IfStmt 0x11f81e0a8 <line:26:13, line:32:13> has_else
    |   |   | |-BinaryOperator 0x11f81de98 <line:26:17, col:30> 'int' '=='
    |   |   | | |-ImplicitCastExpr 0x11f81de80 <col:17> 'int' <LValueToRValue>
    |   |   | | | `-DeclRefExpr 0x11f81de40 <col:17> 'int' lvalue Var 0x128906388 'supported' 'int'
    |   |   | | `-IntegerLiteral 0x11f81de60 <col:30> 'int' 0
    |   |   | |-ContinueStmt 0x11f81deb8 <line:27:17>
    |   |   | `-IfStmt 0x11f81e088 <line:28:18, line:32:13>
    |   |   |   |-BinaryOperator 0x11f81df18 <line:28:22, col:34> 'int' '<'
    |   |   |   | |-ImplicitCastExpr 0x11f81df00 <col:22> 'int' <LValueToRValue>
    |   |   |   | | `-DeclRefExpr 0x11f81dec0 <col:22> 'int' lvalue Var 0x128906388 'supported' 'int'
    |   |   |   | `-IntegerLiteral 0x11f81dee0 <col:34> 'int' 0
    |   |   |   `-CompoundStmt 0x11f81e070 <line:29:13, line:32:13>
    |   |   |     `-CallExpr 0x11f81e050 <line:31:17, col:33> 'int'
    |   |   |       `-ImplicitCastExpr 0x11f81e038 <col:17> 'int (*)()' <FunctionToPointerDecay>
    |   |   |         `-DeclRefExpr 0x11f81e018 <col:17> 'int ()' Function 0x11f81df60 'ERR_pop_to_mark' 'int ()'
    |   |   `-ReturnStmt 0x11f81e0f8 <line:33:13, col:20>
    |   |     `-IntegerLiteral 0x11f81e0d8 <col:20> 'int' 1
    |   `-ReturnStmt 0x11f81e198 <line:35:9, col:16>
    |     `-IntegerLiteral 0x11f81e178 <col:16> 'int' 0
    |-BinaryOperator 0x11f81e428 <line:37:5, line:38:55> 'int' contains-errors '='
    | |-DeclRefExpr 0x11f81e1e8 <line:37:5> 'int' lvalue Var 0x128906388 'supported' 'int'
    | `-CallExpr 0x11f81e3f8 <col:17, line:38:55> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x11f81e208 <line:37:17> 'int ()' Function 0x11f81db90 'EVP_PKEY_supports_digest_nid' 'int ()'
    |   |-CXXDependentScopeMemberExpr 0x11f81e348 <col:46, col:66> '<dependent type>' contains-errors lvalue .privatekey
    |   | `-ArraySubscriptExpr 0x11f81e328 <col:46, col:64> '<dependent type>' contains-errors lvalue
    |   |   |-ImplicitCastExpr 0x11f81e2f8 <col:46, col:55> '<dependent type>' contains-errors <LValueToRValue>
    |   |   | `-CXXDependentScopeMemberExpr 0x11f81e290 <col:46, col:55> '<dependent type>' contains-errors lvalue ->pkeys
    |   |   |   `-CXXDependentScopeMemberExpr 0x11f81e248 <col:46, col:49> '<dependent type>' contains-errors lvalue ->cert
    |   |   |     `-RecoveryExpr 0x11f81e228 <col:46> '<dependent type>' contains-errors lvalue
    |   |   `-ImplicitCastExpr 0x11f81e310 <col:61> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x11f81e2d8 <col:61> 'int' lvalue ParmVar 0x128906028 'idx' 'int'
    |   `-CXXDependentScopeMemberExpr 0x11f81e3b0 <line:38:46, col:51> '<dependent type>' contains-errors lvalue ->hash
    |     `-RecoveryExpr 0x11f81e390 <col:46> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x11f81e6c0 <line:39:5, line:42:25> has_else
    | |-BinaryOperator 0x11f81e4a0 <line:39:9, col:22> 'int' '=='
    | | |-ImplicitCastExpr 0x11f81e488 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x11f81e448 <col:9> 'int' lvalue Var 0x128906388 'supported' 'int'
    | | `-IntegerLiteral 0x11f81e468 <col:22> 'int' 0
    | |-ReturnStmt 0x11f81e4e0 <line:40:9, col:16>
    | | `-IntegerLiteral 0x11f81e4c0 <col:16> 'int' 0
    | `-IfStmt 0x11f81e6a0 <line:41:10, line:42:25>
    |   |-BinaryOperator 0x11f81e548 <line:41:14, col:26> 'int' '<'
    |   | |-ImplicitCastExpr 0x11f81e530 <col:14> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x11f81e4f0 <col:14> 'int' lvalue Var 0x128906388 'supported' 'int'
    |   | `-IntegerLiteral 0x11f81e510 <col:26> 'int' 0
    |   `-CallExpr 0x11f81e680 <line:42:9, col:25> 'int'
    |     `-ImplicitCastExpr 0x11f81e668 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x11f81e648 <col:9> 'int ()' Function 0x11f81e590 'ERR_clear_error' 'int ()'
    `-ReturnStmt 0x11f81e710 <line:44:5, col:12>
      `-IntegerLiteral 0x11f81e6f0 <col:12> 'int' 1
